
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002350 <.init>:
    2350:	stp	x29, x30, [sp, #-16]!
    2354:	mov	x29, sp
    2358:	bl	2650 <adler32_z@plt+0x10>
    235c:	ldp	x29, x30, [sp], #16
    2360:	ret

Disassembly of section .plt:

0000000000002370 <memcpy@plt-0x20>:
    2370:	stp	x16, x30, [sp, #-16]!
    2374:	adrp	x16, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    2378:	ldr	x17, [x16, #4088]
    237c:	add	x16, x16, #0xff8
    2380:	br	x17
    2384:	nop
    2388:	nop
    238c:	nop

0000000000002390 <memcpy@plt>:
    2390:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16]
    2398:	add	x16, x16, #0x0
    239c:	br	x17

00000000000023a0 <crc32_z@plt>:
    23a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #8]
    23a8:	add	x16, x16, #0x8
    23ac:	br	x17

00000000000023b0 <gzvprintf@plt>:
    23b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #16]
    23b8:	add	x16, x16, #0x10
    23bc:	br	x17

00000000000023c0 <gzseek64@plt>:
    23c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #24]
    23c8:	add	x16, x16, #0x18
    23cc:	br	x17

00000000000023d0 <strlen@plt>:
    23d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #32]
    23d8:	add	x16, x16, #0x20
    23dc:	br	x17

00000000000023e0 <inflate@plt>:
    23e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #40]
    23e8:	add	x16, x16, #0x28
    23ec:	br	x17

00000000000023f0 <gzclose_r@plt>:
    23f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #48]
    23f8:	add	x16, x16, #0x30
    23fc:	br	x17

0000000000002400 <gzgetc@plt>:
    2400:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #56]
    2408:	add	x16, x16, #0x38
    240c:	br	x17

0000000000002410 <__cxa_finalize@plt>:
    2410:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #64]
    2418:	add	x16, x16, #0x40
    241c:	br	x17

0000000000002420 <crc32@plt>:
    2420:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #72]
    2428:	add	x16, x16, #0x48
    242c:	br	x17

0000000000002430 <inflateResetKeep@plt>:
    2430:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #80]
    2438:	add	x16, x16, #0x50
    243c:	br	x17

0000000000002440 <snprintf@plt>:
    2440:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #88]
    2448:	add	x16, x16, #0x58
    244c:	br	x17

0000000000002450 <malloc@plt>:
    2450:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #96]
    2458:	add	x16, x16, #0x60
    245c:	br	x17

0000000000002460 <open@plt>:
    2460:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #104]
    2468:	add	x16, x16, #0x68
    246c:	br	x17

0000000000002470 <deflateReset@plt>:
    2470:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #112]
    2478:	add	x16, x16, #0x70
    247c:	br	x17

0000000000002480 <deflate@plt>:
    2480:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #120]
    2488:	add	x16, x16, #0x78
    248c:	br	x17

0000000000002490 <memset@plt>:
    2490:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #128]
    2498:	add	x16, x16, #0x80
    249c:	br	x17

00000000000024a0 <lseek64@plt>:
    24a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #136]
    24a8:	add	x16, x16, #0x88
    24ac:	br	x17

00000000000024b0 <deflateInit2_@plt>:
    24b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #144]
    24b8:	add	x16, x16, #0x90
    24bc:	br	x17

00000000000024c0 <deflateParams@plt>:
    24c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #152]
    24c8:	add	x16, x16, #0x98
    24cc:	br	x17

00000000000024d0 <deflateInit_@plt>:
    24d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #160]
    24d8:	add	x16, x16, #0xa0
    24dc:	br	x17

00000000000024e0 <strerror@plt>:
    24e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #168]
    24e8:	add	x16, x16, #0xa8
    24ec:	br	x17

00000000000024f0 <close@plt>:
    24f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #176]
    24f8:	add	x16, x16, #0xb0
    24fc:	br	x17

0000000000002500 <__gmon_start__@plt>:
    2500:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #184]
    2508:	add	x16, x16, #0xb8
    250c:	br	x17

0000000000002510 <write@plt>:
    2510:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #192]
    2518:	add	x16, x16, #0xc0
    251c:	br	x17

0000000000002520 <uncompress2@plt>:
    2520:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #200]
    2528:	add	x16, x16, #0xc8
    252c:	br	x17

0000000000002530 <inflateEnd@plt>:
    2530:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #208]
    2538:	add	x16, x16, #0xd0
    253c:	br	x17

0000000000002540 <adler32@plt>:
    2540:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #216]
    2548:	add	x16, x16, #0xd8
    254c:	br	x17

0000000000002550 <free@plt>:
    2550:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #224]
    2558:	add	x16, x16, #0xe0
    255c:	br	x17

0000000000002560 <gzclose_w@plt>:
    2560:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #232]
    2568:	add	x16, x16, #0xe8
    256c:	br	x17

0000000000002570 <deflateEnd@plt>:
    2570:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #240]
    2578:	add	x16, x16, #0xf0
    257c:	br	x17

0000000000002580 <gzrewind@plt>:
    2580:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #248]
    2588:	add	x16, x16, #0xf8
    258c:	br	x17

0000000000002590 <gzoffset64@plt>:
    2590:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #256]
    2598:	add	x16, x16, #0x100
    259c:	br	x17

00000000000025a0 <inflateInit_@plt>:
    25a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #264]
    25a8:	add	x16, x16, #0x108
    25ac:	br	x17

00000000000025b0 <compress2@plt>:
    25b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #272]
    25b8:	add	x16, x16, #0x110
    25bc:	br	x17

00000000000025c0 <read@plt>:
    25c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #280]
    25c8:	add	x16, x16, #0x118
    25cc:	br	x17

00000000000025d0 <memchr@plt>:
    25d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #288]
    25d8:	add	x16, x16, #0x120
    25dc:	br	x17

00000000000025e0 <inflateInit2_@plt>:
    25e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #296]
    25e8:	add	x16, x16, #0x128
    25ec:	br	x17

00000000000025f0 <inflateReset@plt>:
    25f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #304]
    25f8:	add	x16, x16, #0x130
    25fc:	br	x17

0000000000002600 <vsnprintf@plt>:
    2600:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #312]
    2608:	add	x16, x16, #0x138
    260c:	br	x17

0000000000002610 <deflateResetKeep@plt>:
    2610:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #320]
    2618:	add	x16, x16, #0x140
    261c:	br	x17

0000000000002620 <inflateReset2@plt>:
    2620:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #328]
    2628:	add	x16, x16, #0x148
    262c:	br	x17

0000000000002630 <__errno_location@plt>:
    2630:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #336]
    2638:	add	x16, x16, #0x150
    263c:	br	x17

0000000000002640 <adler32_z@plt>:
    2640:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #344]
    2648:	add	x16, x16, #0x158
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <adler32_z@@ZLIB_1.2.9-0xd4>:
    2650:	adrp	x0, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    2654:	ldr	x0, [x0, #4048]
    2658:	cbz	x0, 2660 <adler32_z@plt+0x20>
    265c:	b	2500 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    266c:	add	x0, x0, #0x168
    2670:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    2674:	add	x1, x1, #0x168
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <adler32_z@plt+0x54>  // b.none
    2680:	adrp	x1, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    2684:	ldr	x1, [x1, #4032]
    2688:	cbz	x1, 2694 <adler32_z@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    269c:	add	x0, x0, #0x168
    26a0:	adrp	x1, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    26a4:	add	x1, x1, #0x168
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <adler32_z@plt+0x94>  // b.none
    26c0:	adrp	x2, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <adler32_z@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    26e8:	ldrb	w0, [x19, #360]
    26ec:	cbnz	w0, 2714 <adler32_z@plt+0xd4>
    26f0:	adrp	x0, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    26f4:	ldr	x0, [x0, #4040]
    26f8:	cbz	x0, 2708 <adler32_z@plt+0xc8>
    26fc:	adrp	x0, 22000 <gzclose_w@@ZLIB_1.2.3.5+0x14a88>
    2700:	ldr	x0, [x0, #352]
    2704:	bl	2410 <__cxa_finalize@plt>
    2708:	bl	2668 <adler32_z@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #360]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <adler32_z@plt+0x58>

0000000000002724 <adler32_z@@ZLIB_1.2.9>:
    2724:	ubfx	x8, x0, #16, #16
    2728:	cmp	x2, #0x1
    272c:	and	x9, x0, #0xffff
    2730:	b.ne	2774 <adler32_z@@ZLIB_1.2.9+0x50>  // b.any
    2734:	ldrb	w10, [x1]
    2738:	mov	x11, #0xffffffffffff000f    	// #-65521
    273c:	mov	w12, #0xfff0                	// #65520
    2740:	mov	x13, #0xffffffffffff0000    	// #-65536
    2744:	add	x9, x9, x10
    2748:	add	x10, x9, x11
    274c:	cmp	x9, x12
    2750:	csel	x9, x10, x9, hi  // hi = pmore
    2754:	movk	x13, #0xf, lsl #16
    2758:	add	x8, x9, x8
    275c:	lsl	x10, x8, #16
    2760:	add	x11, x13, x8, lsl #16
    2764:	cmp	x8, x12
    2768:	csel	x8, x11, x10, hi  // hi = pmore
    276c:	orr	x0, x8, x9
    2770:	ret
    2774:	cbz	x1, 27d4 <adler32_z@@ZLIB_1.2.9+0xb0>
    2778:	cmp	x2, #0x10
    277c:	b.cs	27dc <adler32_z@@ZLIB_1.2.9+0xb8>  // b.hs, b.nlast
    2780:	cbz	x2, 2798 <adler32_z@@ZLIB_1.2.9+0x74>
    2784:	ldrb	w10, [x1], #1
    2788:	subs	x2, x2, #0x1
    278c:	add	x9, x9, x10
    2790:	add	x8, x9, x8
    2794:	b.ne	2784 <adler32_z@@ZLIB_1.2.9+0x60>  // b.any
    2798:	mov	x12, #0xc5cd                	// #50637
    279c:	movk	x12, #0xd2f, lsl #16
    27a0:	movk	x12, #0xe1, lsl #32
    27a4:	mov	x10, #0xffffffffffff000f    	// #-65521
    27a8:	mov	w11, #0xfff0                	// #65520
    27ac:	movk	x12, #0xf, lsl #48
    27b0:	add	x10, x9, x10
    27b4:	cmp	x9, x11
    27b8:	umulh	x11, x8, x12
    27bc:	csel	x9, x10, x9, hi  // hi = pmore
    27c0:	sub	x10, x8, x11
    27c4:	add	x10, x11, x10, lsr #1
    27c8:	lsr	x10, x10, #15
    27cc:	mov	w11, #0xfff1                	// #65521
    27d0:	b	2a58 <adler32_z@@ZLIB_1.2.9+0x334>
    27d4:	mov	w0, #0x1                   	// #1
    27d8:	ret
    27dc:	lsr	x10, x2, #4
    27e0:	cmp	x10, #0x15b
    27e4:	b.cc	2920 <adler32_z@@ZLIB_1.2.9+0x1fc>  // b.lo, b.ul, b.last
    27e8:	mov	x12, #0xc5cd                	// #50637
    27ec:	movk	x12, #0xd2f, lsl #16
    27f0:	movk	x12, #0xe1, lsl #32
    27f4:	mov	x10, #0xffffffffffffea50    	// #-5552
    27f8:	mov	w11, #0x15b0                	// #5552
    27fc:	movk	x12, #0xf, lsl #48
    2800:	mov	w13, #0xfff1                	// #65521
    2804:	add	x2, x2, x10
    2808:	mov	w14, #0xfffffea5            	// #-347
    280c:	mov	x15, x1
    2810:	ldrb	w16, [x15]
    2814:	ldrb	w17, [x15, #1]
    2818:	adds	w14, w14, #0x1
    281c:	add	x9, x9, x16
    2820:	ldrb	w16, [x15, #2]
    2824:	add	x8, x9, x8
    2828:	add	x9, x9, x17
    282c:	ldrb	w17, [x15, #3]
    2830:	add	x8, x8, x9
    2834:	add	x9, x9, x16
    2838:	ldrb	w16, [x15, #4]
    283c:	add	x8, x8, x9
    2840:	add	x9, x9, x17
    2844:	ldrb	w17, [x15, #5]
    2848:	add	x8, x8, x9
    284c:	add	x9, x9, x16
    2850:	ldrb	w16, [x15, #6]
    2854:	add	x8, x8, x9
    2858:	add	x9, x9, x17
    285c:	ldrb	w17, [x15, #7]
    2860:	add	x8, x8, x9
    2864:	add	x9, x9, x16
    2868:	ldrb	w16, [x15, #8]
    286c:	add	x8, x8, x9
    2870:	add	x9, x9, x17
    2874:	ldrb	w17, [x15, #9]
    2878:	add	x8, x8, x9
    287c:	add	x9, x9, x16
    2880:	ldrb	w16, [x15, #10]
    2884:	add	x8, x8, x9
    2888:	add	x9, x9, x17
    288c:	ldrb	w17, [x15, #11]
    2890:	add	x8, x8, x9
    2894:	add	x9, x9, x16
    2898:	ldrb	w16, [x15, #12]
    289c:	add	x8, x8, x9
    28a0:	add	x9, x9, x17
    28a4:	ldrb	w17, [x15, #13]
    28a8:	add	x8, x8, x9
    28ac:	add	x9, x9, x16
    28b0:	ldrb	w16, [x15, #14]
    28b4:	add	x8, x8, x9
    28b8:	add	x9, x9, x17
    28bc:	ldrb	w17, [x15, #15]
    28c0:	add	x8, x8, x9
    28c4:	add	x9, x9, x16
    28c8:	add	x8, x8, x9
    28cc:	add	x9, x9, x17
    28d0:	add	x8, x8, x9
    28d4:	add	x15, x15, #0x10
    28d8:	b.cc	2810 <adler32_z@@ZLIB_1.2.9+0xec>  // b.lo, b.ul, b.last
    28dc:	umulh	x14, x9, x12
    28e0:	umulh	x15, x8, x12
    28e4:	sub	x17, x9, x14
    28e8:	sub	x18, x8, x15
    28ec:	add	x14, x14, x17, lsr #1
    28f0:	add	x15, x15, x18, lsr #1
    28f4:	lsr	x16, x2, #4
    28f8:	lsr	x14, x14, #15
    28fc:	lsr	x15, x15, #15
    2900:	add	x1, x1, x11
    2904:	cmp	x16, #0x15a
    2908:	msub	x9, x14, x13, x9
    290c:	msub	x8, x15, x13, x8
    2910:	b.hi	2804 <adler32_z@@ZLIB_1.2.9+0xe0>  // b.pmore
    2914:	cbz	x2, 2a5c <adler32_z@@ZLIB_1.2.9+0x338>
    2918:	cmp	x2, #0x10
    291c:	b.cc	2a0c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.lo, b.ul, b.last
    2920:	sub	x11, x2, #0x10
    2924:	and	x12, x11, #0xfffffffffffffff0
    2928:	add	x10, x12, #0x10
    292c:	mov	x13, x1
    2930:	ldrb	w14, [x13]
    2934:	ldrb	w15, [x13, #1]
    2938:	sub	x2, x2, #0x10
    293c:	cmp	x2, #0xf
    2940:	add	x9, x9, x14
    2944:	ldrb	w14, [x13, #2]
    2948:	add	x8, x9, x8
    294c:	add	x9, x9, x15
    2950:	ldrb	w15, [x13, #3]
    2954:	add	x8, x8, x9
    2958:	add	x9, x9, x14
    295c:	ldrb	w14, [x13, #4]
    2960:	add	x8, x8, x9
    2964:	add	x9, x9, x15
    2968:	ldrb	w15, [x13, #5]
    296c:	add	x8, x8, x9
    2970:	add	x9, x9, x14
    2974:	ldrb	w14, [x13, #6]
    2978:	add	x8, x8, x9
    297c:	add	x9, x9, x15
    2980:	ldrb	w15, [x13, #7]
    2984:	add	x8, x8, x9
    2988:	add	x9, x9, x14
    298c:	ldrb	w14, [x13, #8]
    2990:	add	x8, x8, x9
    2994:	add	x9, x9, x15
    2998:	ldrb	w15, [x13, #9]
    299c:	add	x8, x8, x9
    29a0:	add	x9, x9, x14
    29a4:	ldrb	w14, [x13, #10]
    29a8:	add	x8, x8, x9
    29ac:	add	x9, x9, x15
    29b0:	ldrb	w15, [x13, #11]
    29b4:	add	x8, x8, x9
    29b8:	add	x9, x9, x14
    29bc:	ldrb	w14, [x13, #12]
    29c0:	add	x8, x8, x9
    29c4:	add	x9, x9, x15
    29c8:	ldrb	w15, [x13, #13]
    29cc:	add	x8, x8, x9
    29d0:	add	x9, x9, x14
    29d4:	ldrb	w14, [x13, #14]
    29d8:	add	x8, x8, x9
    29dc:	add	x9, x9, x15
    29e0:	add	x8, x8, x9
    29e4:	add	x9, x9, x14
    29e8:	ldrb	w14, [x13, #15]
    29ec:	add	x8, x8, x9
    29f0:	add	x13, x13, #0x10
    29f4:	add	x9, x9, x14
    29f8:	add	x8, x8, x9
    29fc:	b.hi	2930 <adler32_z@@ZLIB_1.2.9+0x20c>  // b.pmore
    2a00:	subs	x2, x11, x12
    2a04:	b.eq	2a20 <adler32_z@@ZLIB_1.2.9+0x2fc>  // b.none
    2a08:	add	x1, x1, x10
    2a0c:	ldrb	w10, [x1], #1
    2a10:	subs	x2, x2, #0x1
    2a14:	add	x9, x9, x10
    2a18:	add	x8, x9, x8
    2a1c:	b.ne	2a0c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.any
    2a20:	mov	x10, #0xc5cd                	// #50637
    2a24:	movk	x10, #0xd2f, lsl #16
    2a28:	movk	x10, #0xe1, lsl #32
    2a2c:	movk	x10, #0xf, lsl #48
    2a30:	umulh	x12, x9, x10
    2a34:	umulh	x10, x8, x10
    2a38:	sub	x13, x9, x12
    2a3c:	sub	x14, x8, x10
    2a40:	add	x12, x12, x13, lsr #1
    2a44:	mov	w11, #0xfff1                	// #65521
    2a48:	add	x10, x10, x14, lsr #1
    2a4c:	lsr	x12, x12, #15
    2a50:	lsr	x10, x10, #15
    2a54:	msub	x9, x12, x11, x9
    2a58:	msub	x8, x10, x11, x8
    2a5c:	orr	x0, x9, x8, lsl #16
    2a60:	ret

0000000000002a64 <adler32@@Base>:
    2a64:	mov	w2, w2
    2a68:	b	2640 <adler32_z@plt>

0000000000002a6c <adler32_combine@@ZLIB_1.2.2>:
    2a6c:	b	2a70 <adler32_combine@@ZLIB_1.2.2+0x4>
    2a70:	tbnz	x2, #63, 2b2c <adler32_combine@@ZLIB_1.2.2+0xc0>
    2a74:	mov	x8, #0xc5cd                	// #50637
    2a78:	movk	x8, #0xd2f, lsl #16
    2a7c:	movk	x8, #0xe1, lsl #32
    2a80:	movk	x8, #0xf, lsl #48
    2a84:	and	x10, x0, #0xffff
    2a88:	ubfx	x12, x0, #16, #16
    2a8c:	lsr	x13, x1, #16
    2a90:	umulh	x8, x2, x8
    2a94:	mov	w11, #0xfff0                	// #65520
    2a98:	add	x14, x10, w1, uxth
    2a9c:	add	x12, x12, w13, uxth
    2aa0:	sub	x13, x2, x8
    2aa4:	add	x8, x8, x13, lsr #1
    2aa8:	add	x13, x14, x11
    2aac:	mov	w9, #0xfff1                	// #65521
    2ab0:	sub	x14, x14, #0x1
    2ab4:	cmp	x13, x11
    2ab8:	lsr	x8, x8, #15
    2abc:	csel	x13, x14, x13, hi  // hi = pmore
    2ac0:	mov	w14, #0x8071                	// #32881
    2ac4:	msub	x8, x8, x9, x2
    2ac8:	movk	w14, #0x8007, lsl #16
    2acc:	mul	x10, x8, x10
    2ad0:	mul	x14, x10, x14
    2ad4:	mov	x15, #0xffffffffffff000f    	// #-65521
    2ad8:	lsr	x14, x14, #47
    2adc:	sub	x8, x12, x8
    2ae0:	add	x12, x13, x15
    2ae4:	cmp	x13, x11
    2ae8:	msub	w10, w14, w9, w10
    2aec:	csel	x12, x12, x13, hi  // hi = pmore
    2af0:	mov	w13, #0xffe1                	// #65505
    2af4:	add	x8, x8, x10
    2af8:	movk	w13, #0x1, lsl #16
    2afc:	add	x9, x8, x9
    2b00:	mov	x14, #0xffffffffffff0000    	// #-65536
    2b04:	add	x8, x8, x15
    2b08:	cmp	x9, x13
    2b0c:	movk	x14, #0xf, lsl #16
    2b10:	csel	x8, x8, x9, hi  // hi = pmore
    2b14:	lsl	x9, x8, #16
    2b18:	add	x10, x14, x8, lsl #16
    2b1c:	cmp	x8, x11
    2b20:	csel	x8, x10, x9, hi  // hi = pmore
    2b24:	orr	x0, x8, x12
    2b28:	ret
    2b2c:	mov	w0, #0xffffffff            	// #-1
    2b30:	ret

0000000000002b34 <adler32_combine64@@ZLIB_1.2.3.3>:
    2b34:	b	2a70 <adler32_combine@@ZLIB_1.2.2+0x4>

0000000000002b38 <get_crc_table@@Base>:
    2b38:	adrp	x0, d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    2b3c:	add	x0, x0, #0x668
    2b40:	ret

0000000000002b44 <crc32_z@@ZLIB_1.2.9>:
    2b44:	cbz	x1, 2dd4 <crc32_z@@ZLIB_1.2.9+0x290>
    2b48:	adrp	x8, d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    2b4c:	mvn	w9, w0
    2b50:	add	x8, x8, #0x668
    2b54:	cbz	x2, 2b7c <crc32_z@@ZLIB_1.2.9+0x38>
    2b58:	and	x10, x1, #0x3
    2b5c:	cbz	x10, 2b7c <crc32_z@@ZLIB_1.2.9+0x38>
    2b60:	ldrb	w10, [x1], #1
    2b64:	and	w11, w9, #0xff
    2b68:	subs	x2, x2, #0x1
    2b6c:	eor	w10, w11, w10
    2b70:	ldr	w10, [x8, w10, uxtw #2]
    2b74:	eor	w9, w10, w9, lsr #8
    2b78:	b.ne	2b58 <crc32_z@@ZLIB_1.2.9+0x14>  // b.any
    2b7c:	subs	x10, x2, #0x20
    2b80:	b.cc	2d44 <crc32_z@@ZLIB_1.2.9+0x200>  // b.lo, b.ul, b.last
    2b84:	and	x12, x10, #0xffffffffffffffe0
    2b88:	add	x11, x12, x1
    2b8c:	add	x11, x11, #0x20
    2b90:	ldp	w16, w17, [x1]
    2b94:	add	x13, x8, #0xc00
    2b98:	add	x14, x8, #0x800
    2b9c:	add	x15, x8, #0x400
    2ba0:	eor	w9, w16, w9
    2ba4:	and	w16, w9, #0xff
    2ba8:	ubfx	w18, w9, #8, #8
    2bac:	ubfx	w0, w9, #16, #8
    2bb0:	ldr	w16, [x13, w16, uxtw #2]
    2bb4:	ldr	w18, [x14, w18, uxtw #2]
    2bb8:	lsr	w9, w9, #24
    2bbc:	ldr	w0, [x15, w0, uxtw #2]
    2bc0:	ldr	w9, [x8, w9, uxtw #2]
    2bc4:	eor	w16, w18, w16
    2bc8:	sub	x2, x2, #0x20
    2bcc:	eor	w16, w16, w0
    2bd0:	eor	w9, w16, w9
    2bd4:	eor	w9, w9, w17
    2bd8:	and	w16, w9, #0xff
    2bdc:	ubfx	w17, w9, #8, #8
    2be0:	ldr	w16, [x13, w16, uxtw #2]
    2be4:	ldr	w17, [x14, w17, uxtw #2]
    2be8:	ubfx	w18, w9, #16, #8
    2bec:	lsr	w9, w9, #24
    2bf0:	ldr	w18, [x15, w18, uxtw #2]
    2bf4:	ldr	w9, [x8, w9, uxtw #2]
    2bf8:	eor	w16, w17, w16
    2bfc:	ldp	w17, w0, [x1, #8]
    2c00:	eor	w16, w16, w18
    2c04:	eor	w9, w16, w9
    2c08:	cmp	x2, #0x1f
    2c0c:	eor	w9, w9, w17
    2c10:	and	w16, w9, #0xff
    2c14:	ubfx	w17, w9, #8, #8
    2c18:	ubfx	w18, w9, #16, #8
    2c1c:	ldr	w16, [x13, w16, uxtw #2]
    2c20:	ldr	w17, [x14, w17, uxtw #2]
    2c24:	lsr	w9, w9, #24
    2c28:	ldr	w18, [x15, w18, uxtw #2]
    2c2c:	ldr	w9, [x8, w9, uxtw #2]
    2c30:	eor	w16, w17, w16
    2c34:	eor	w16, w16, w18
    2c38:	eor	w9, w16, w9
    2c3c:	eor	w9, w9, w0
    2c40:	and	w16, w9, #0xff
    2c44:	ubfx	w17, w9, #8, #8
    2c48:	ldr	w16, [x13, w16, uxtw #2]
    2c4c:	ldr	w17, [x14, w17, uxtw #2]
    2c50:	ubfx	w18, w9, #16, #8
    2c54:	lsr	w9, w9, #24
    2c58:	ldr	w18, [x15, w18, uxtw #2]
    2c5c:	ldr	w9, [x8, w9, uxtw #2]
    2c60:	eor	w16, w17, w16
    2c64:	ldp	w17, w0, [x1, #16]
    2c68:	eor	w16, w16, w18
    2c6c:	eor	w9, w16, w9
    2c70:	eor	w9, w9, w17
    2c74:	and	w16, w9, #0xff
    2c78:	ubfx	w17, w9, #8, #8
    2c7c:	ubfx	w18, w9, #16, #8
    2c80:	ldr	w16, [x13, w16, uxtw #2]
    2c84:	ldr	w17, [x14, w17, uxtw #2]
    2c88:	lsr	w9, w9, #24
    2c8c:	ldr	w18, [x15, w18, uxtw #2]
    2c90:	ldr	w9, [x8, w9, uxtw #2]
    2c94:	eor	w16, w17, w16
    2c98:	eor	w16, w16, w18
    2c9c:	eor	w9, w16, w9
    2ca0:	eor	w9, w9, w0
    2ca4:	and	w16, w9, #0xff
    2ca8:	ubfx	w17, w9, #8, #8
    2cac:	ldr	w16, [x13, w16, uxtw #2]
    2cb0:	ldr	w17, [x14, w17, uxtw #2]
    2cb4:	ubfx	w18, w9, #16, #8
    2cb8:	lsr	w9, w9, #24
    2cbc:	ldr	w18, [x15, w18, uxtw #2]
    2cc0:	ldr	w9, [x8, w9, uxtw #2]
    2cc4:	eor	w16, w17, w16
    2cc8:	ldp	w17, w0, [x1, #24]
    2ccc:	eor	w16, w16, w18
    2cd0:	eor	w9, w16, w9
    2cd4:	add	x1, x1, #0x20
    2cd8:	eor	w9, w9, w17
    2cdc:	and	w16, w9, #0xff
    2ce0:	ubfx	w17, w9, #8, #8
    2ce4:	ubfx	w18, w9, #16, #8
    2ce8:	ldr	w16, [x13, w16, uxtw #2]
    2cec:	ldr	w17, [x14, w17, uxtw #2]
    2cf0:	ldr	w18, [x15, w18, uxtw #2]
    2cf4:	lsr	w9, w9, #24
    2cf8:	ldr	w9, [x8, w9, uxtw #2]
    2cfc:	eor	w16, w17, w16
    2d00:	eor	w16, w16, w18
    2d04:	eor	w9, w16, w9
    2d08:	eor	w9, w9, w0
    2d0c:	and	w16, w9, #0xff
    2d10:	ubfx	w17, w9, #8, #8
    2d14:	ldr	w13, [x13, w16, uxtw #2]
    2d18:	ubfx	w16, w9, #16, #8
    2d1c:	ldr	w14, [x14, w17, uxtw #2]
    2d20:	lsr	w9, w9, #24
    2d24:	ldr	w15, [x15, w16, uxtw #2]
    2d28:	ldr	w9, [x8, w9, uxtw #2]
    2d2c:	eor	w13, w14, w13
    2d30:	eor	w13, w13, w15
    2d34:	eor	w9, w13, w9
    2d38:	b.hi	2b90 <crc32_z@@ZLIB_1.2.9+0x4c>  // b.pmore
    2d3c:	sub	x2, x10, x12
    2d40:	mov	x1, x11
    2d44:	subs	x10, x2, #0x4
    2d48:	b.cc	2dac <crc32_z@@ZLIB_1.2.9+0x268>  // b.lo, b.ul, b.last
    2d4c:	lsr	x11, x10, #2
    2d50:	mov	x12, x1
    2d54:	ldr	w13, [x12], #4
    2d58:	sub	x2, x2, #0x4
    2d5c:	cmp	x2, #0x3
    2d60:	eor	w9, w13, w9
    2d64:	and	w13, w9, #0xff
    2d68:	ubfx	w14, w9, #8, #8
    2d6c:	add	x13, x8, w13, uxtw #2
    2d70:	add	x14, x8, w14, uxtw #2
    2d74:	ldr	w13, [x13, #3072]
    2d78:	ldr	w14, [x14, #2048]
    2d7c:	eor	w13, w14, w13
    2d80:	ubfx	w14, w9, #16, #8
    2d84:	add	x14, x8, w14, uxtw #2
    2d88:	ldr	w14, [x14, #1024]
    2d8c:	lsr	w9, w9, #24
    2d90:	ldr	w9, [x8, w9, uxtw #2]
    2d94:	eor	w13, w13, w14
    2d98:	eor	w9, w13, w9
    2d9c:	b.hi	2d54 <crc32_z@@ZLIB_1.2.9+0x210>  // b.pmore
    2da0:	add	x11, x1, x11, lsl #2
    2da4:	add	x1, x11, #0x4
    2da8:	and	x2, x10, #0x3
    2dac:	cbz	x2, 2dcc <crc32_z@@ZLIB_1.2.9+0x288>
    2db0:	ldrb	w10, [x1], #1
    2db4:	and	w11, w9, #0xff
    2db8:	subs	x2, x2, #0x1
    2dbc:	eor	w10, w11, w10
    2dc0:	ldr	w10, [x8, w10, uxtw #2]
    2dc4:	eor	w9, w10, w9, lsr #8
    2dc8:	b.ne	2db0 <crc32_z@@ZLIB_1.2.9+0x26c>  // b.any
    2dcc:	mvn	w0, w9
    2dd0:	ret
    2dd4:	mov	x0, xzr
    2dd8:	ret

0000000000002ddc <crc32@@Base>:
    2ddc:	mov	w2, w2
    2de0:	b	23a0 <crc32_z@plt>

0000000000002de4 <crc32_combine@@ZLIB_1.2.2>:
    2de4:	b	2de8 <crc32_combine@@ZLIB_1.2.2+0x4>
    2de8:	str	x29, [sp, #-16]!
    2dec:	sub	sp, sp, #0x200
    2df0:	cmp	x2, #0x1
    2df4:	b.lt	2fc8 <crc32_combine@@ZLIB_1.2.2+0x1e4>  // b.tstop
    2df8:	mov	w10, #0x8320                	// #33568
    2dfc:	movk	w10, #0xedb8, lsl #16
    2e00:	mov	w8, #0x1                   	// #1
    2e04:	mov	w9, #0x8                   	// #8
    2e08:	str	x10, [sp]
    2e0c:	mov	x10, sp
    2e10:	str	x8, [x10, x9]
    2e14:	add	x9, x9, #0x8
    2e18:	cmp	x9, #0x100
    2e1c:	lsl	x8, x8, #1
    2e20:	b.ne	2e10 <crc32_combine@@ZLIB_1.2.2+0x2c>  // b.any
    2e24:	mov	x8, xzr
    2e28:	mov	x9, sp
    2e2c:	add	x10, sp, #0x100
    2e30:	ldr	x12, [x9, x8, lsl #3]
    2e34:	cbz	x12, 2e5c <crc32_combine@@ZLIB_1.2.2+0x78>
    2e38:	mov	x11, xzr
    2e3c:	mov	x13, sp
    2e40:	tbz	w12, #0, 2e4c <crc32_combine@@ZLIB_1.2.2+0x68>
    2e44:	ldr	x14, [x13]
    2e48:	eor	x11, x14, x11
    2e4c:	lsr	x12, x12, #1
    2e50:	add	x13, x13, #0x8
    2e54:	cbnz	x12, 2e40 <crc32_combine@@ZLIB_1.2.2+0x5c>
    2e58:	b	2e60 <crc32_combine@@ZLIB_1.2.2+0x7c>
    2e5c:	mov	x11, xzr
    2e60:	str	x11, [x10, x8, lsl #3]
    2e64:	add	x8, x8, #0x1
    2e68:	cmp	x8, #0x20
    2e6c:	b.ne	2e30 <crc32_combine@@ZLIB_1.2.2+0x4c>  // b.any
    2e70:	mov	x8, xzr
    2e74:	add	x9, sp, #0x100
    2e78:	mov	x10, sp
    2e7c:	ldr	x12, [x9, x8, lsl #3]
    2e80:	cbz	x12, 2ea8 <crc32_combine@@ZLIB_1.2.2+0xc4>
    2e84:	mov	x11, xzr
    2e88:	add	x13, sp, #0x100
    2e8c:	tbz	w12, #0, 2e98 <crc32_combine@@ZLIB_1.2.2+0xb4>
    2e90:	ldr	x14, [x13]
    2e94:	eor	x11, x14, x11
    2e98:	lsr	x12, x12, #1
    2e9c:	add	x13, x13, #0x8
    2ea0:	cbnz	x12, 2e8c <crc32_combine@@ZLIB_1.2.2+0xa8>
    2ea4:	b	2eac <crc32_combine@@ZLIB_1.2.2+0xc8>
    2ea8:	mov	x11, xzr
    2eac:	str	x11, [x10, x8, lsl #3]
    2eb0:	add	x8, x8, #0x1
    2eb4:	cmp	x8, #0x20
    2eb8:	b.ne	2e7c <crc32_combine@@ZLIB_1.2.2+0x98>  // b.any
    2ebc:	mov	x8, sp
    2ec0:	add	x9, sp, #0x100
    2ec4:	mov	x10, xzr
    2ec8:	ldr	x12, [x8, x10, lsl #3]
    2ecc:	cbz	x12, 2ef4 <crc32_combine@@ZLIB_1.2.2+0x110>
    2ed0:	mov	x11, xzr
    2ed4:	mov	x13, sp
    2ed8:	tbz	w12, #0, 2ee4 <crc32_combine@@ZLIB_1.2.2+0x100>
    2edc:	ldr	x14, [x13]
    2ee0:	eor	x11, x14, x11
    2ee4:	lsr	x12, x12, #1
    2ee8:	add	x13, x13, #0x8
    2eec:	cbnz	x12, 2ed8 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2ef0:	b	2ef8 <crc32_combine@@ZLIB_1.2.2+0x114>
    2ef4:	mov	x11, xzr
    2ef8:	str	x11, [x9, x10, lsl #3]
    2efc:	add	x10, x10, #0x1
    2f00:	cmp	x10, #0x20
    2f04:	b.ne	2ec8 <crc32_combine@@ZLIB_1.2.2+0xe4>  // b.any
    2f08:	tbnz	w2, #0, 2f14 <crc32_combine@@ZLIB_1.2.2+0x130>
    2f0c:	mov	x10, x0
    2f10:	b	2f38 <crc32_combine@@ZLIB_1.2.2+0x154>
    2f14:	mov	x10, xzr
    2f18:	cbz	x0, 2f38 <crc32_combine@@ZLIB_1.2.2+0x154>
    2f1c:	add	x11, sp, #0x100
    2f20:	tbz	w0, #0, 2f2c <crc32_combine@@ZLIB_1.2.2+0x148>
    2f24:	ldr	x12, [x11]
    2f28:	eor	x10, x12, x10
    2f2c:	lsr	x0, x0, #1
    2f30:	add	x11, x11, #0x8
    2f34:	cbnz	x0, 2f20 <crc32_combine@@ZLIB_1.2.2+0x13c>
    2f38:	cmp	x2, #0x2
    2f3c:	b.cc	2fc0 <crc32_combine@@ZLIB_1.2.2+0x1dc>  // b.lo, b.ul, b.last
    2f40:	mov	x11, xzr
    2f44:	ldr	x13, [x9, x11, lsl #3]
    2f48:	cbz	x13, 2f70 <crc32_combine@@ZLIB_1.2.2+0x18c>
    2f4c:	mov	x12, xzr
    2f50:	add	x14, sp, #0x100
    2f54:	tbz	w13, #0, 2f60 <crc32_combine@@ZLIB_1.2.2+0x17c>
    2f58:	ldr	x15, [x14]
    2f5c:	eor	x12, x15, x12
    2f60:	lsr	x13, x13, #1
    2f64:	add	x14, x14, #0x8
    2f68:	cbnz	x13, 2f54 <crc32_combine@@ZLIB_1.2.2+0x170>
    2f6c:	b	2f74 <crc32_combine@@ZLIB_1.2.2+0x190>
    2f70:	mov	x12, xzr
    2f74:	str	x12, [x8, x11, lsl #3]
    2f78:	add	x11, x11, #0x1
    2f7c:	cmp	x11, #0x20
    2f80:	b.ne	2f44 <crc32_combine@@ZLIB_1.2.2+0x160>  // b.any
    2f84:	tbnz	w2, #1, 2f90 <crc32_combine@@ZLIB_1.2.2+0x1ac>
    2f88:	mov	x0, x10
    2f8c:	b	2fb4 <crc32_combine@@ZLIB_1.2.2+0x1d0>
    2f90:	mov	x0, xzr
    2f94:	cbz	x10, 2fb4 <crc32_combine@@ZLIB_1.2.2+0x1d0>
    2f98:	mov	x11, sp
    2f9c:	tbz	w10, #0, 2fa8 <crc32_combine@@ZLIB_1.2.2+0x1c4>
    2fa0:	ldr	x12, [x11]
    2fa4:	eor	x0, x12, x0
    2fa8:	lsr	x10, x10, #1
    2fac:	add	x11, x11, #0x8
    2fb0:	cbnz	x10, 2f9c <crc32_combine@@ZLIB_1.2.2+0x1b8>
    2fb4:	asr	x2, x2, #2
    2fb8:	cbnz	x2, 2ec4 <crc32_combine@@ZLIB_1.2.2+0xe0>
    2fbc:	b	2fc4 <crc32_combine@@ZLIB_1.2.2+0x1e0>
    2fc0:	mov	x0, x10
    2fc4:	eor	x0, x0, x1
    2fc8:	add	sp, sp, #0x200
    2fcc:	ldr	x29, [sp], #16
    2fd0:	ret

0000000000002fd4 <crc32_combine64@@ZLIB_1.2.3.3>:
    2fd4:	b	2de8 <crc32_combine@@ZLIB_1.2.2+0x4>

0000000000002fd8 <deflateInit_@@Base>:
    2fd8:	mov	w7, w3
    2fdc:	mov	x6, x2
    2fe0:	mov	w2, #0x8                   	// #8
    2fe4:	mov	w3, #0xf                   	// #15
    2fe8:	mov	w4, #0x8                   	// #8
    2fec:	mov	w5, wzr
    2ff0:	b	24b0 <deflateInit2_@plt>

0000000000002ff4 <deflateInit2_@@Base>:
    2ff4:	stp	x29, x30, [sp, #-80]!
    2ff8:	stp	x26, x25, [sp, #16]
    2ffc:	stp	x24, x23, [sp, #32]
    3000:	stp	x22, x21, [sp, #48]
    3004:	stp	x20, x19, [sp, #64]
    3008:	mov	x29, sp
    300c:	cbz	x6, 3090 <deflateInit2_@@Base+0x9c>
    3010:	mov	x19, x0
    3014:	cmp	w7, #0x70
    3018:	mov	w0, #0xfffffffa            	// #-6
    301c:	b.ne	3258 <deflateInit2_@@Base+0x264>  // b.any
    3020:	ldrb	w8, [x6]
    3024:	cmp	w8, #0x31
    3028:	b.ne	3258 <deflateInit2_@@Base+0x264>  // b.any
    302c:	cbz	x19, 30e4 <deflateInit2_@@Base+0xf0>
    3030:	ldr	x8, [x19, #64]
    3034:	mov	w20, w5
    3038:	mov	w21, w4
    303c:	str	xzr, [x19, #48]
    3040:	cbnz	x8, 3054 <deflateInit2_@@Base+0x60>
    3044:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    3048:	add	x8, x8, #0x410
    304c:	str	x8, [x19, #64]
    3050:	str	xzr, [x19, #80]
    3054:	ldr	x9, [x19, #72]
    3058:	cbnz	x9, 3068 <deflateInit2_@@Base+0x74>
    305c:	adrp	x9, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    3060:	add	x9, x9, #0x418
    3064:	str	x9, [x19, #72]
    3068:	cmn	w1, #0x1
    306c:	mov	w9, #0x6                   	// #6
    3070:	csel	w23, w9, w1, eq  // eq = none
    3074:	tbnz	w3, #31, 3098 <deflateInit2_@@Base+0xa4>
    3078:	sub	w9, w3, #0x10
    307c:	cmp	w3, #0xf
    3080:	mov	w10, #0x1                   	// #1
    3084:	csel	w9, w9, w3, gt
    3088:	cinc	w25, w10, gt
    308c:	b	30a0 <deflateInit2_@@Base+0xac>
    3090:	mov	w0, #0xfffffffa            	// #-6
    3094:	b	3258 <deflateInit2_@@Base+0x264>
    3098:	mov	w25, wzr
    309c:	neg	w9, w3
    30a0:	cmp	w20, #0x4
    30a4:	mov	w0, #0xfffffffe            	// #-2
    30a8:	b.hi	3258 <deflateInit2_@@Base+0x264>  // b.pmore
    30ac:	cmp	w23, #0x9
    30b0:	b.hi	3258 <deflateInit2_@@Base+0x264>  // b.pmore
    30b4:	cmp	w2, #0x8
    30b8:	b.ne	3258 <deflateInit2_@@Base+0x264>  // b.any
    30bc:	sub	w10, w21, #0x1
    30c0:	cmp	w10, #0x8
    30c4:	b.hi	3258 <deflateInit2_@@Base+0x264>  // b.pmore
    30c8:	and	w10, w9, #0xfffffff8
    30cc:	cmp	w10, #0x8
    30d0:	b.ne	3258 <deflateInit2_@@Base+0x264>  // b.any
    30d4:	cmp	w9, #0x8
    30d8:	b.ne	30ec <deflateInit2_@@Base+0xf8>  // b.any
    30dc:	cmp	w25, #0x1
    30e0:	b.eq	30ec <deflateInit2_@@Base+0xf8>  // b.none
    30e4:	mov	w0, #0xfffffffe            	// #-2
    30e8:	b	3258 <deflateInit2_@@Base+0x264>
    30ec:	ldr	x0, [x19, #80]
    30f0:	cmp	w9, #0x8
    30f4:	mov	w10, #0x9                   	// #9
    30f8:	mov	w1, #0x1                   	// #1
    30fc:	mov	w2, #0x1740                	// #5952
    3100:	csel	w26, w10, w9, eq  // eq = none
    3104:	mov	w24, #0x1                   	// #1
    3108:	blr	x8
    310c:	cbz	x0, 3254 <deflateInit2_@@Base+0x260>
    3110:	mov	w8, #0x2a                  	// #42
    3114:	lsl	w1, w24, w26
    3118:	str	x0, [x19, #56]
    311c:	str	w8, [x0, #8]
    3120:	sub	w8, w1, #0x1
    3124:	add	w10, w21, #0x9
    3128:	stp	w26, w8, [x0, #84]
    312c:	mov	w8, #0xaaab                	// #43691
    3130:	add	w9, w21, #0x7
    3134:	movk	w8, #0xaaaa, lsl #16
    3138:	and	w10, w10, #0xff
    313c:	umull	x8, w10, w8
    3140:	lsl	w10, w24, w9
    3144:	stp	w10, w9, [x0, #132]
    3148:	sub	w9, w10, #0x1
    314c:	lsr	x8, x8, #33
    3150:	str	x19, [x0]
    3154:	str	w25, [x0, #48]
    3158:	str	xzr, [x0, #56]
    315c:	str	w1, [x0, #80]
    3160:	stp	w9, w8, [x0, #140]
    3164:	mov	x22, x0
    3168:	ldr	x8, [x19, #64]
    316c:	ldr	x0, [x19, #80]
    3170:	mov	w2, #0x2                   	// #2
    3174:	blr	x8
    3178:	str	x0, [x22, #96]
    317c:	ldr	x8, [x19, #64]
    3180:	ldr	x0, [x19, #80]
    3184:	ldr	w1, [x22, #80]
    3188:	mov	w2, #0x2                   	// #2
    318c:	blr	x8
    3190:	str	x0, [x22, #112]
    3194:	ldr	x8, [x19, #64]
    3198:	ldr	x0, [x19, #80]
    319c:	ldr	w1, [x22, #132]
    31a0:	mov	w2, #0x2                   	// #2
    31a4:	blr	x8
    31a8:	add	w8, w21, #0x6
    31ac:	lsl	w1, w24, w8
    31b0:	str	x0, [x22, #120]
    31b4:	str	xzr, [x22, #5944]
    31b8:	str	w1, [x22, #5896]
    31bc:	ldr	x8, [x19, #64]
    31c0:	ldr	x0, [x19, #80]
    31c4:	mov	w2, #0x4                   	// #4
    31c8:	blr	x8
    31cc:	ldr	w8, [x22, #5896]
    31d0:	ldr	x9, [x22, #96]
    31d4:	lsl	x10, x8, #2
    31d8:	stp	x0, x10, [x22, #16]
    31dc:	cbz	x9, 3234 <deflateInit2_@@Base+0x240>
    31e0:	ldr	x9, [x22, #112]
    31e4:	cbz	x9, 3234 <deflateInit2_@@Base+0x240>
    31e8:	cbz	x0, 3234 <deflateInit2_@@Base+0x240>
    31ec:	ldr	x9, [x22, #120]
    31f0:	cbz	x9, 3234 <deflateInit2_@@Base+0x240>
    31f4:	and	w9, w8, #0xfffffffe
    31f8:	add	x8, x8, x8, lsl #1
    31fc:	mov	w10, #0x8                   	// #8
    3200:	add	x9, x0, x9
    3204:	add	x8, x0, x8
    3208:	stp	w23, w20, [x22, #196]
    320c:	str	x9, [x22, #5904]
    3210:	str	x8, [x22, #5888]
    3214:	strb	w10, [x22, #72]
    3218:	mov	x0, x19
    321c:	ldp	x20, x19, [sp, #64]
    3220:	ldp	x22, x21, [sp, #48]
    3224:	ldp	x24, x23, [sp, #32]
    3228:	ldp	x26, x25, [sp, #16]
    322c:	ldp	x29, x30, [sp], #80
    3230:	b	2470 <deflateReset@plt>
    3234:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    3238:	ldr	x8, [x8, #4056]
    323c:	mov	w9, #0x29a                 	// #666
    3240:	mov	x0, x19
    3244:	str	w9, [x22, #8]
    3248:	ldr	x8, [x8, #48]
    324c:	str	x8, [x19, #48]
    3250:	bl	2570 <deflateEnd@plt>
    3254:	mov	w0, #0xfffffffc            	// #-4
    3258:	ldp	x20, x19, [sp, #64]
    325c:	ldp	x22, x21, [sp, #48]
    3260:	ldp	x24, x23, [sp, #32]
    3264:	ldp	x26, x25, [sp, #16]
    3268:	ldp	x29, x30, [sp], #80
    326c:	ret

0000000000003270 <deflateEnd@@Base>:
    3270:	stp	x29, x30, [sp, #-32]!
    3274:	stp	x20, x19, [sp, #16]
    3278:	mov	x29, sp
    327c:	mov	x19, x0
    3280:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3284:	cbz	w0, 3290 <deflateEnd@@Base+0x20>
    3288:	mov	w0, #0xfffffffe            	// #-2
    328c:	b	3310 <deflateEnd@@Base+0xa0>
    3290:	ldr	x1, [x19, #56]
    3294:	ldr	x8, [x1, #16]
    3298:	ldr	w20, [x1, #8]
    329c:	cbz	x8, 32b0 <deflateEnd@@Base+0x40>
    32a0:	ldp	x9, x0, [x19, #72]
    32a4:	mov	x1, x8
    32a8:	blr	x9
    32ac:	ldr	x1, [x19, #56]
    32b0:	ldr	x8, [x1, #120]
    32b4:	cbz	x8, 32c8 <deflateEnd@@Base+0x58>
    32b8:	ldp	x9, x0, [x19, #72]
    32bc:	mov	x1, x8
    32c0:	blr	x9
    32c4:	ldr	x1, [x19, #56]
    32c8:	ldr	x8, [x1, #112]
    32cc:	cbz	x8, 32e0 <deflateEnd@@Base+0x70>
    32d0:	ldp	x9, x0, [x19, #72]
    32d4:	mov	x1, x8
    32d8:	blr	x9
    32dc:	ldr	x1, [x19, #56]
    32e0:	ldr	x8, [x1, #96]
    32e4:	cbz	x8, 32f8 <deflateEnd@@Base+0x88>
    32e8:	ldp	x9, x0, [x19, #72]
    32ec:	mov	x1, x8
    32f0:	blr	x9
    32f4:	ldr	x1, [x19, #56]
    32f8:	ldp	x8, x0, [x19, #72]
    32fc:	blr	x8
    3300:	cmp	w20, #0x71
    3304:	mov	w8, #0xfffffffd            	// #-3
    3308:	csel	w0, w8, wzr, eq  // eq = none
    330c:	str	xzr, [x19, #56]
    3310:	ldp	x20, x19, [sp, #16]
    3314:	ldp	x29, x30, [sp], #32
    3318:	ret

000000000000331c <deflateReset@@Base>:
    331c:	stp	x29, x30, [sp, #-32]!
    3320:	stp	x20, x19, [sp, #16]
    3324:	mov	x29, sp
    3328:	mov	x20, x0
    332c:	bl	2610 <deflateResetKeep@plt>
    3330:	mov	w19, w0
    3334:	cbnz	w0, 33b0 <deflateReset@@Base+0x94>
    3338:	ldr	x20, [x20, #56]
    333c:	mov	w1, wzr
    3340:	ldr	w9, [x20, #132]
    3344:	ldr	w8, [x20, #80]
    3348:	ldr	x0, [x20, #120]
    334c:	sub	w9, w9, #0x1
    3350:	lsl	x8, x8, #1
    3354:	lsl	x2, x9, #1
    3358:	str	x8, [x20, #104]
    335c:	strh	wzr, [x0, w9, uxtw #1]
    3360:	bl	2490 <memset@plt>
    3364:	ldrsw	x8, [x20, #196]
    3368:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    336c:	add	x9, x9, #0xc68
    3370:	adrp	x10, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    3374:	ldr	d0, [x10, #1640]
    3378:	mov	w10, #0x2                   	// #2
    337c:	add	x8, x9, x8, lsl #4
    3380:	str	w10, [x20, #160]
    3384:	ldrh	w9, [x8]
    3388:	ldrh	w10, [x8, #4]
    338c:	str	xzr, [x20, #152]
    3390:	str	wzr, [x20, #5932]
    3394:	str	xzr, [x20, #168]
    3398:	stp	w9, w10, [x20, #204]
    339c:	ldrh	w9, [x8, #2]
    33a0:	ldrh	w8, [x8, #6]
    33a4:	stur	d0, [x20, #180]
    33a8:	str	wzr, [x20, #128]
    33ac:	stp	w8, w9, [x20, #188]
    33b0:	mov	w0, w19
    33b4:	ldp	x20, x19, [sp, #16]
    33b8:	ldp	x29, x30, [sp], #32
    33bc:	ret

00000000000033c0 <deflateSetDictionary@@Base>:
    33c0:	stp	x29, x30, [sp, #-80]!
    33c4:	str	x25, [sp, #16]
    33c8:	stp	x24, x23, [sp, #32]
    33cc:	stp	x22, x21, [sp, #48]
    33d0:	stp	x20, x19, [sp, #64]
    33d4:	mov	x29, sp
    33d8:	mov	w22, w2
    33dc:	mov	x21, x1
    33e0:	mov	x19, x0
    33e4:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    33e8:	mov	w8, w0
    33ec:	mov	w0, #0xfffffffe            	// #-2
    33f0:	cbz	x21, 3428 <deflateSetDictionary@@Base+0x68>
    33f4:	cbnz	w8, 3428 <deflateSetDictionary@@Base+0x68>
    33f8:	ldr	x20, [x19, #56]
    33fc:	ldr	w23, [x20, #48]
    3400:	cmp	w23, #0x2
    3404:	b.eq	3424 <deflateSetDictionary@@Base+0x64>  // b.none
    3408:	cmp	w23, #0x1
    340c:	b.ne	341c <deflateSetDictionary@@Base+0x5c>  // b.any
    3410:	ldr	w8, [x20, #8]
    3414:	cmp	w8, #0x2a
    3418:	b.ne	3424 <deflateSetDictionary@@Base+0x64>  // b.any
    341c:	ldr	w8, [x20, #180]
    3420:	cbz	w8, 3440 <deflateSetDictionary@@Base+0x80>
    3424:	mov	w0, #0xfffffffe            	// #-2
    3428:	ldp	x20, x19, [sp, #64]
    342c:	ldp	x22, x21, [sp, #48]
    3430:	ldp	x24, x23, [sp, #32]
    3434:	ldr	x25, [sp, #16]
    3438:	ldp	x29, x30, [sp], #80
    343c:	ret
    3440:	cmp	w23, #0x1
    3444:	b.ne	345c <deflateSetDictionary@@Base+0x9c>  // b.any
    3448:	ldr	x0, [x19, #96]
    344c:	mov	x1, x21
    3450:	mov	w2, w22
    3454:	bl	2540 <adler32@plt>
    3458:	str	x0, [x19, #96]
    345c:	ldr	w8, [x20, #80]
    3460:	str	wzr, [x20, #48]
    3464:	cmp	w8, w22
    3468:	b.hi	34a8 <deflateSetDictionary@@Base+0xe8>  // b.pmore
    346c:	cbnz	w23, 349c <deflateSetDictionary@@Base+0xdc>
    3470:	ldr	w8, [x20, #132]
    3474:	ldr	x0, [x20, #120]
    3478:	mov	w1, wzr
    347c:	sub	w8, w8, #0x1
    3480:	lsl	x2, x8, #1
    3484:	strh	wzr, [x0, w8, uxtw #1]
    3488:	bl	2490 <memset@plt>
    348c:	ldr	w8, [x20, #80]
    3490:	str	wzr, [x20, #172]
    3494:	str	xzr, [x20, #152]
    3498:	str	wzr, [x20, #5932]
    349c:	sub	w9, w22, w8
    34a0:	add	x21, x21, x9
    34a4:	mov	w22, w8
    34a8:	ldr	w24, [x19, #8]
    34ac:	ldr	x25, [x19]
    34b0:	mov	x0, x20
    34b4:	str	w22, [x19, #8]
    34b8:	str	x21, [x19]
    34bc:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    34c0:	ldr	w9, [x20, #180]
    34c4:	ldr	w8, [x20, #172]
    34c8:	cmp	w9, #0x3
    34cc:	b.cc	3544 <deflateSetDictionary@@Base+0x184>  // b.lo, b.ul, b.last
    34d0:	mov	w21, #0x2                   	// #2
    34d4:	ldr	x10, [x20, #96]
    34d8:	ldp	w12, w11, [x20, #140]
    34dc:	ldp	x14, x13, [x20, #112]
    34e0:	ldr	w15, [x20, #88]
    34e4:	ldr	w16, [x20, #128]
    34e8:	sub	w9, w9, #0x2
    34ec:	add	w17, w8, #0x2
    34f0:	ldrb	w17, [x10, w17, uxtw]
    34f4:	lsl	w16, w16, w11
    34f8:	mov	w18, w8
    34fc:	and	x18, x15, x18
    3500:	eor	w16, w16, w17
    3504:	and	x16, x16, x12
    3508:	str	w16, [x20, #128]
    350c:	ldrh	w17, [x13, x16, lsl #1]
    3510:	subs	w9, w9, #0x1
    3514:	strh	w17, [x14, x18, lsl #1]
    3518:	strh	w8, [x13, x16, lsl #1]
    351c:	add	w8, w8, #0x1
    3520:	b.ne	34ec <deflateSetDictionary@@Base+0x12c>  // b.any
    3524:	mov	x0, x20
    3528:	str	w8, [x20, #172]
    352c:	str	w21, [x20, #180]
    3530:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    3534:	ldr	w9, [x20, #180]
    3538:	ldr	w8, [x20, #172]
    353c:	cmp	w9, #0x2
    3540:	b.hi	34d4 <deflateSetDictionary@@Base+0x114>  // b.pmore
    3544:	add	w8, w8, w9
    3548:	str	w9, [x20, #5932]
    354c:	adrp	x9, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    3550:	ldr	d0, [x9, #1640]
    3554:	mov	w0, wzr
    3558:	mov	w10, #0x2                   	// #2
    355c:	str	x8, [x20, #152]
    3560:	str	w10, [x20, #160]
    3564:	stp	wzr, w8, [x20, #168]
    3568:	stur	d0, [x20, #180]
    356c:	str	x25, [x19]
    3570:	str	w24, [x19, #8]
    3574:	str	w23, [x20, #48]
    3578:	b	3428 <deflateSetDictionary@@Base+0x68>
    357c:	cbz	x0, 35a4 <deflateSetDictionary@@Base+0x1e4>
    3580:	ldr	x8, [x0, #64]
    3584:	cbz	x8, 35a4 <deflateSetDictionary@@Base+0x1e4>
    3588:	ldr	x8, [x0, #72]
    358c:	cbz	x8, 35a4 <deflateSetDictionary@@Base+0x1e4>
    3590:	ldr	x8, [x0, #56]
    3594:	cbz	x8, 35a4 <deflateSetDictionary@@Base+0x1e4>
    3598:	ldr	x9, [x8]
    359c:	cmp	x9, x0
    35a0:	b.eq	35ac <deflateSetDictionary@@Base+0x1ec>  // b.none
    35a4:	mov	w0, #0x1                   	// #1
    35a8:	ret
    35ac:	ldr	w8, [x8, #8]
    35b0:	sub	w9, w8, #0x39
    35b4:	cmp	w9, #0x38
    35b8:	b.hi	35e4 <deflateSetDictionary@@Base+0x224>  // b.pmore
    35bc:	mov	w10, #0x1                   	// #1
    35c0:	lsl	x9, x10, x9
    35c4:	mov	x10, #0x1001                	// #4097
    35c8:	movk	x10, #0x1, lsl #16
    35cc:	movk	x10, #0x4004, lsl #32
    35d0:	movk	x10, #0x100, lsl #48
    35d4:	tst	x9, x10
    35d8:	b.eq	35e4 <deflateSetDictionary@@Base+0x224>  // b.none
    35dc:	mov	w0, wzr
    35e0:	ret
    35e4:	cmp	w8, #0x29a
    35e8:	b.eq	35dc <deflateSetDictionary@@Base+0x21c>  // b.none
    35ec:	cmp	w8, #0x2a
    35f0:	b.ne	35a4 <deflateSetDictionary@@Base+0x1e4>  // b.any
    35f4:	b	35dc <deflateSetDictionary@@Base+0x21c>
    35f8:	str	d8, [sp, #-64]!
    35fc:	stp	x29, x30, [sp, #16]
    3600:	stp	x22, x21, [sp, #32]
    3604:	stp	x20, x19, [sp, #48]
    3608:	ldr	w21, [x0, #80]
    360c:	ldr	w8, [x0, #180]
    3610:	mov	x19, x0
    3614:	mov	x29, sp
    3618:	sub	w22, w21, #0x106
    361c:	dup	v8.2s, w21
    3620:	mov	w10, w21
    3624:	ldr	w11, [x19, #104]
    3628:	ldr	w9, [x19, #172]
    362c:	add	w10, w22, w10
    3630:	sub	w8, w11, w8
    3634:	cmp	w9, w10
    3638:	sub	w20, w8, w9
    363c:	b.cc	36bc <deflateSetDictionary@@Base+0x2fc>  // b.lo, b.ul, b.last
    3640:	ldr	x0, [x19, #96]
    3644:	sub	w2, w21, w20
    3648:	add	x1, x0, x21
    364c:	bl	2390 <memcpy@plt>
    3650:	ldr	x10, [x19, #152]
    3654:	ldur	d0, [x19, #172]
    3658:	ldr	x11, [x19, #120]
    365c:	ldr	w8, [x19, #80]
    3660:	ldr	w9, [x19, #132]
    3664:	sub	x10, x10, x21
    3668:	sub	v0.2s, v0.2s, v8.2s
    366c:	str	x10, [x19, #152]
    3670:	sub	x10, x11, #0x2
    3674:	stur	d0, [x19, #172]
    3678:	ldrh	w11, [x10, x9, lsl #1]
    367c:	subs	w11, w11, w8
    3680:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    3684:	strh	w11, [x10, x9, lsl #1]
    3688:	sub	x9, x9, #0x1
    368c:	cbnz	w9, 3678 <deflateSetDictionary@@Base+0x2b8>
    3690:	ldr	x9, [x19, #112]
    3694:	mov	x10, x8
    3698:	sub	x9, x9, #0x2
    369c:	ldrh	w11, [x9, x10, lsl #1]
    36a0:	subs	w11, w11, w8
    36a4:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    36a8:	strh	w11, [x9, x10, lsl #1]
    36ac:	sub	x10, x10, #0x1
    36b0:	cbnz	w10, 369c <deflateSetDictionary@@Base+0x2dc>
    36b4:	add	w20, w20, w21
    36b8:	fmov	w9, s0
    36bc:	ldr	x0, [x19]
    36c0:	ldr	w8, [x0, #8]
    36c4:	cbz	w8, 3798 <deflateSetDictionary@@Base+0x3d8>
    36c8:	ldr	x8, [x19, #96]
    36cc:	ldr	w10, [x19, #180]
    36d0:	mov	w2, w20
    36d4:	add	x8, x8, w9, uxtw
    36d8:	add	x1, x8, x10
    36dc:	bl	5ef8 <deflateCopy@@Base+0xc44>
    36e0:	ldr	w8, [x19, #180]
    36e4:	ldr	w9, [x19, #5932]
    36e8:	add	w8, w8, w0
    36ec:	add	w10, w9, w8
    36f0:	cmp	w10, #0x3
    36f4:	str	w8, [x19, #180]
    36f8:	b.cc	377c <deflateSetDictionary@@Base+0x3bc>  // b.lo, b.ul, b.last
    36fc:	ldr	w11, [x19, #172]
    3700:	ldr	x10, [x19, #96]
    3704:	sub	w11, w11, w9
    3708:	ldrb	w14, [x10, w11, uxtw]
    370c:	add	w13, w11, #0x1
    3710:	str	w14, [x19, #128]
    3714:	ldrb	w15, [x10, w13, uxtw]
    3718:	ldp	w13, w12, [x19, #140]
    371c:	lsl	w14, w14, w12
    3720:	eor	w14, w14, w15
    3724:	and	w14, w14, w13
    3728:	str	w14, [x19, #128]
    372c:	cbz	w9, 377c <deflateSetDictionary@@Base+0x3bc>
    3730:	add	w15, w11, #0x2
    3734:	ldrb	w15, [x10, w15, uxtw]
    3738:	lsl	w14, w14, w12
    373c:	ldp	x17, x16, [x19, #112]
    3740:	ldr	w18, [x19, #88]
    3744:	eor	w14, w14, w15
    3748:	and	x14, x14, x13
    374c:	str	w14, [x19, #128]
    3750:	sub	w9, w9, #0x1
    3754:	ldrh	w15, [x16, x14, lsl #1]
    3758:	add	w0, w8, w9
    375c:	cmp	w0, #0x2
    3760:	mov	w0, w11
    3764:	and	x18, x18, x0
    3768:	strh	w15, [x17, x18, lsl #1]
    376c:	strh	w11, [x16, x14, lsl #1]
    3770:	add	w11, w11, #0x1
    3774:	str	w9, [x19, #5932]
    3778:	b.hi	372c <deflateSetDictionary@@Base+0x36c>  // b.pmore
    377c:	cmp	w8, #0x105
    3780:	b.hi	3798 <deflateSetDictionary@@Base+0x3d8>  // b.pmore
    3784:	ldr	x9, [x19]
    3788:	ldr	w9, [x9, #8]
    378c:	cbz	w9, 3798 <deflateSetDictionary@@Base+0x3d8>
    3790:	ldr	w10, [x19, #80]
    3794:	b	3624 <deflateSetDictionary@@Base+0x264>
    3798:	ldr	x8, [x19, #5944]
    379c:	ldr	x10, [x19, #104]
    37a0:	subs	x9, x10, x8
    37a4:	b.ls	381c <deflateSetDictionary@@Base+0x45c>  // b.plast
    37a8:	ldr	w11, [x19, #172]
    37ac:	ldr	w12, [x19, #180]
    37b0:	add	x21, x12, x11
    37b4:	cmp	x8, x21
    37b8:	b.cs	37e8 <deflateSetDictionary@@Base+0x428>  // b.hs, b.nlast
    37bc:	ldr	x9, [x19, #96]
    37c0:	sub	x8, x10, x21
    37c4:	cmp	x8, #0x102
    37c8:	mov	w10, #0x102                 	// #258
    37cc:	csel	x20, x8, x10, cc  // cc = lo, ul, last
    37d0:	add	x0, x9, x21
    37d4:	mov	w1, wzr
    37d8:	mov	x2, x20
    37dc:	bl	2490 <memset@plt>
    37e0:	add	x8, x20, x21
    37e4:	b	3818 <deflateSetDictionary@@Base+0x458>
    37e8:	add	x10, x21, #0x102
    37ec:	subs	x10, x10, x8
    37f0:	b.ls	381c <deflateSetDictionary@@Base+0x45c>  // b.plast
    37f4:	ldr	x11, [x19, #96]
    37f8:	cmp	x10, x9
    37fc:	csel	x20, x9, x10, hi  // hi = pmore
    3800:	and	x2, x20, #0xffffffff
    3804:	add	x0, x11, x8
    3808:	mov	w1, wzr
    380c:	bl	2490 <memset@plt>
    3810:	ldr	x8, [x19, #5944]
    3814:	add	x8, x8, x20
    3818:	str	x8, [x19, #5944]
    381c:	ldp	x20, x19, [sp, #48]
    3820:	ldp	x22, x21, [sp, #32]
    3824:	ldp	x29, x30, [sp, #16]
    3828:	ldr	d8, [sp], #64
    382c:	ret

0000000000003830 <deflateGetDictionary@@ZLIB_1.2.9>:
    3830:	stp	x29, x30, [sp, #-48]!
    3834:	str	x21, [sp, #16]
    3838:	stp	x20, x19, [sp, #32]
    383c:	mov	x29, sp
    3840:	mov	x19, x2
    3844:	mov	x20, x1
    3848:	mov	x21, x0
    384c:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3850:	cbz	w0, 385c <deflateGetDictionary@@ZLIB_1.2.9+0x2c>
    3854:	mov	w0, #0xfffffffe            	// #-2
    3858:	b	38a8 <deflateGetDictionary@@ZLIB_1.2.9+0x78>
    385c:	ldr	x8, [x21, #56]
    3860:	ldr	w9, [x8, #172]
    3864:	ldr	w10, [x8, #180]
    3868:	ldr	w11, [x8, #80]
    386c:	add	w12, w10, w9
    3870:	cmp	w12, w11
    3874:	csel	w21, w11, w12, hi  // hi = pmore
    3878:	cbz	x20, 389c <deflateGetDictionary@@ZLIB_1.2.9+0x6c>
    387c:	cbz	w21, 389c <deflateGetDictionary@@ZLIB_1.2.9+0x6c>
    3880:	ldr	x8, [x8, #96]
    3884:	mov	w2, w21
    3888:	mov	x0, x20
    388c:	add	x8, x8, x9
    3890:	add	x8, x8, x10
    3894:	sub	x1, x8, w21, uxtw
    3898:	bl	2390 <memcpy@plt>
    389c:	mov	w0, wzr
    38a0:	cbz	x19, 38a8 <deflateGetDictionary@@ZLIB_1.2.9+0x78>
    38a4:	str	w21, [x19]
    38a8:	ldp	x20, x19, [sp, #32]
    38ac:	ldr	x21, [sp, #16]
    38b0:	ldp	x29, x30, [sp], #48
    38b4:	ret

00000000000038b8 <deflateResetKeep@@ZLIB_1.2.5.2>:
    38b8:	stp	x29, x30, [sp, #-32]!
    38bc:	stp	x20, x19, [sp, #16]
    38c0:	mov	x29, sp
    38c4:	mov	x19, x0
    38c8:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    38cc:	cbz	w0, 38d8 <deflateResetKeep@@ZLIB_1.2.5.2+0x20>
    38d0:	mov	w0, #0xfffffffe            	// #-2
    38d4:	b	3954 <deflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    38d8:	ldr	x20, [x19, #56]
    38dc:	mov	w8, #0x2                   	// #2
    38e0:	str	xzr, [x19, #16]
    38e4:	stp	xzr, xzr, [x19, #40]
    38e8:	str	w8, [x19, #88]
    38ec:	ldr	x9, [x20, #16]
    38f0:	ldr	w8, [x20, #48]
    38f4:	stp	x9, xzr, [x20, #32]
    38f8:	tbz	w8, #31, 3904 <deflateResetKeep@@ZLIB_1.2.5.2+0x4c>
    38fc:	neg	w8, w8
    3900:	str	w8, [x20, #48]
    3904:	cmp	w8, #0x0
    3908:	mov	w9, #0x2a                  	// #42
    390c:	mov	w10, #0x71                  	// #113
    3910:	csel	w9, w10, w9, eq  // eq = none
    3914:	cmp	w8, #0x2
    3918:	mov	w8, #0x39                  	// #57
    391c:	csel	w8, w8, w9, eq  // eq = none
    3920:	mov	x0, xzr
    3924:	mov	x1, xzr
    3928:	mov	w2, wzr
    392c:	str	w8, [x20, #8]
    3930:	b.ne	393c <deflateResetKeep@@ZLIB_1.2.5.2+0x84>  // b.any
    3934:	bl	2420 <crc32@plt>
    3938:	b	3940 <deflateResetKeep@@ZLIB_1.2.5.2+0x88>
    393c:	bl	2540 <adler32@plt>
    3940:	str	x0, [x19, #96]
    3944:	mov	x0, x20
    3948:	str	wzr, [x20, #76]
    394c:	bl	9b60 <inflateCodesUsed@@ZLIB_1.2.9+0x438>
    3950:	mov	w0, wzr
    3954:	ldp	x20, x19, [sp, #16]
    3958:	ldp	x29, x30, [sp], #32
    395c:	ret

0000000000003960 <deflateSetHeader@@ZLIB_1.2.2>:
    3960:	stp	x29, x30, [sp, #-32]!
    3964:	stp	x20, x19, [sp, #16]
    3968:	mov	x29, sp
    396c:	mov	x19, x1
    3970:	mov	x20, x0
    3974:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3978:	cbnz	w0, 3998 <deflateSetHeader@@ZLIB_1.2.2+0x38>
    397c:	ldr	x8, [x20, #56]
    3980:	ldr	w9, [x8, #48]
    3984:	cmp	w9, #0x2
    3988:	b.ne	3998 <deflateSetHeader@@ZLIB_1.2.2+0x38>  // b.any
    398c:	mov	w0, wzr
    3990:	str	x19, [x8, #56]
    3994:	b	399c <deflateSetHeader@@ZLIB_1.2.2+0x3c>
    3998:	mov	w0, #0xfffffffe            	// #-2
    399c:	ldp	x20, x19, [sp, #16]
    39a0:	ldp	x29, x30, [sp], #32
    39a4:	ret

00000000000039a8 <deflatePending@@ZLIB_1.2.5.1>:
    39a8:	stp	x29, x30, [sp, #-48]!
    39ac:	str	x21, [sp, #16]
    39b0:	stp	x20, x19, [sp, #32]
    39b4:	mov	x29, sp
    39b8:	mov	x19, x2
    39bc:	mov	x21, x1
    39c0:	mov	x20, x0
    39c4:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    39c8:	cbz	w0, 39d4 <deflatePending@@ZLIB_1.2.5.1+0x2c>
    39cc:	mov	w0, #0xfffffffe            	// #-2
    39d0:	b	39f8 <deflatePending@@ZLIB_1.2.5.1+0x50>
    39d4:	cbz	x21, 39e4 <deflatePending@@ZLIB_1.2.5.1+0x3c>
    39d8:	ldr	x8, [x20, #56]
    39dc:	ldr	x8, [x8, #40]
    39e0:	str	w8, [x21]
    39e4:	mov	w0, wzr
    39e8:	cbz	x19, 39f8 <deflatePending@@ZLIB_1.2.5.1+0x50>
    39ec:	ldr	x8, [x20, #56]
    39f0:	ldr	w8, [x8, #5940]
    39f4:	str	w8, [x19]
    39f8:	ldp	x20, x19, [sp, #32]
    39fc:	ldr	x21, [sp, #16]
    3a00:	ldp	x29, x30, [sp], #48
    3a04:	ret

0000000000003a08 <deflatePrime@@ZLIB_1.2.0.8>:
    3a08:	stp	x29, x30, [sp, #-64]!
    3a0c:	stp	x24, x23, [sp, #16]
    3a10:	stp	x22, x21, [sp, #32]
    3a14:	stp	x20, x19, [sp, #48]
    3a18:	mov	x29, sp
    3a1c:	mov	w19, w2
    3a20:	mov	w20, w1
    3a24:	mov	x21, x0
    3a28:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3a2c:	cbz	w0, 3a38 <deflatePrime@@ZLIB_1.2.0.8+0x30>
    3a30:	mov	w0, #0xfffffffe            	// #-2
    3a34:	b	3aa8 <deflatePrime@@ZLIB_1.2.0.8+0xa0>
    3a38:	ldr	x21, [x21, #56]
    3a3c:	ldr	x8, [x21, #32]
    3a40:	ldr	x9, [x21, #5904]
    3a44:	add	x8, x8, #0x2
    3a48:	cmp	x9, x8
    3a4c:	b.cs	3a58 <deflatePrime@@ZLIB_1.2.0.8+0x50>  // b.hs, b.nlast
    3a50:	mov	w0, #0xfffffffb            	// #-5
    3a54:	b	3aa8 <deflatePrime@@ZLIB_1.2.0.8+0xa0>
    3a58:	mov	w22, #0x10                  	// #16
    3a5c:	mov	w23, #0xffffffff            	// #-1
    3a60:	ldr	w8, [x21, #5940]
    3a64:	ldrh	w9, [x21, #5936]
    3a68:	mov	x0, x21
    3a6c:	sub	w10, w22, w8
    3a70:	cmp	w10, w20
    3a74:	csel	w24, w20, w10, gt
    3a78:	lsl	w10, w23, w24
    3a7c:	bic	w10, w19, w10
    3a80:	add	w11, w24, w8
    3a84:	lsl	w8, w10, w8
    3a88:	orr	w8, w9, w8
    3a8c:	strh	w8, [x21, #5936]
    3a90:	str	w11, [x21, #5940]
    3a94:	bl	9da8 <inflateCodesUsed@@ZLIB_1.2.9+0x680>
    3a98:	subs	w20, w20, w24
    3a9c:	asr	w19, w19, w24
    3aa0:	b.ne	3a60 <deflatePrime@@ZLIB_1.2.0.8+0x58>  // b.any
    3aa4:	mov	w0, wzr
    3aa8:	ldp	x20, x19, [sp, #48]
    3aac:	ldp	x22, x21, [sp, #32]
    3ab0:	ldp	x24, x23, [sp, #16]
    3ab4:	ldp	x29, x30, [sp], #64
    3ab8:	ret

0000000000003abc <deflateParams@@Base>:
    3abc:	stp	x29, x30, [sp, #-48]!
    3ac0:	stp	x22, x21, [sp, #16]
    3ac4:	stp	x20, x19, [sp, #32]
    3ac8:	mov	x29, sp
    3acc:	mov	w19, w2
    3ad0:	mov	w21, w1
    3ad4:	mov	x20, x0
    3ad8:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3adc:	cbz	w0, 3af4 <deflateParams@@Base+0x38>
    3ae0:	mov	w0, #0xfffffffe            	// #-2
    3ae4:	ldp	x20, x19, [sp, #32]
    3ae8:	ldp	x22, x21, [sp, #16]
    3aec:	ldp	x29, x30, [sp], #48
    3af0:	ret
    3af4:	cmn	w21, #0x1
    3af8:	mov	w8, #0x6                   	// #6
    3afc:	csel	w21, w8, w21, eq  // eq = none
    3b00:	cmp	w19, #0x4
    3b04:	mov	w0, #0xfffffffe            	// #-2
    3b08:	b.hi	3ae4 <deflateParams@@Base+0x28>  // b.pmore
    3b0c:	cmp	w21, #0x9
    3b10:	b.hi	3ae4 <deflateParams@@Base+0x28>  // b.pmore
    3b14:	ldr	x22, [x20, #56]
    3b18:	ldr	w8, [x22, #200]
    3b1c:	cmp	w8, w19
    3b20:	b.ne	3b48 <deflateParams@@Base+0x8c>  // b.any
    3b24:	ldrsw	x8, [x22, #196]
    3b28:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    3b2c:	add	x9, x9, #0xc68
    3b30:	add	x10, x9, w21, uxtw #4
    3b34:	add	x8, x9, x8, lsl #4
    3b38:	ldr	x8, [x8, #8]
    3b3c:	ldr	x9, [x10, #8]
    3b40:	cmp	x8, x9
    3b44:	b.eq	3b6c <deflateParams@@Base+0xb0>  // b.none
    3b48:	ldr	x8, [x22, #5944]
    3b4c:	cbz	x8, 3b6c <deflateParams@@Base+0xb0>
    3b50:	mov	w1, #0x5                   	// #5
    3b54:	mov	x0, x20
    3b58:	bl	2480 <deflate@plt>
    3b5c:	cmn	w0, #0x2
    3b60:	b.eq	3ae4 <deflateParams@@Base+0x28>  // b.none
    3b64:	ldr	w8, [x20, #32]
    3b68:	cbz	w8, 3be4 <deflateParams@@Base+0x128>
    3b6c:	ldr	w8, [x22, #196]
    3b70:	cmp	w8, w21
    3b74:	b.eq	3c34 <deflateParams@@Base+0x178>  // b.none
    3b78:	cbnz	w8, 3c0c <deflateParams@@Base+0x150>
    3b7c:	ldr	w8, [x22, #5928]
    3b80:	cbz	w8, 3c0c <deflateParams@@Base+0x150>
    3b84:	cmp	w8, #0x1
    3b88:	b.ne	3bec <deflateParams@@Base+0x130>  // b.any
    3b8c:	ldr	w8, [x22, #132]
    3b90:	ldr	w9, [x22, #80]
    3b94:	ldr	x0, [x22, #120]
    3b98:	mov	x10, x8
    3b9c:	add	x11, x0, x10, lsl #1
    3ba0:	ldurh	w12, [x11, #-2]
    3ba4:	sub	x10, x10, #0x1
    3ba8:	subs	w12, w12, w9
    3bac:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    3bb0:	sturh	w12, [x11, #-2]
    3bb4:	cbnz	w10, 3b9c <deflateParams@@Base+0xe0>
    3bb8:	ldr	x10, [x22, #112]
    3bbc:	mov	x11, x9
    3bc0:	sub	x10, x10, #0x2
    3bc4:	ldrh	w12, [x10, x11, lsl #1]
    3bc8:	subs	w12, w12, w9
    3bcc:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    3bd0:	strh	w12, [x10, x11, lsl #1]
    3bd4:	sub	x11, x11, #0x1
    3bd8:	cbnz	w11, 3bc4 <deflateParams@@Base+0x108>
    3bdc:	sub	w8, w8, #0x1
    3be0:	b	3bfc <deflateParams@@Base+0x140>
    3be4:	mov	w0, #0xfffffffb            	// #-5
    3be8:	b	3ae4 <deflateParams@@Base+0x28>
    3bec:	ldr	w8, [x22, #132]
    3bf0:	ldr	x0, [x22, #120]
    3bf4:	sub	w8, w8, #0x1
    3bf8:	strh	wzr, [x0, w8, uxtw #1]
    3bfc:	lsl	x2, x8, #1
    3c00:	mov	w1, wzr
    3c04:	bl	2490 <memset@plt>
    3c08:	str	wzr, [x22, #5928]
    3c0c:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    3c10:	add	x8, x8, #0xc68
    3c14:	add	x8, x8, w21, sxtw #4
    3c18:	ldrh	w9, [x8]
    3c1c:	ldrh	w10, [x8, #4]
    3c20:	ldrh	w11, [x8, #2]
    3c24:	ldrh	w8, [x8, #6]
    3c28:	str	w21, [x22, #196]
    3c2c:	stp	w9, w10, [x22, #204]
    3c30:	stp	w8, w11, [x22, #188]
    3c34:	mov	w0, wzr
    3c38:	str	w19, [x22, #200]
    3c3c:	b	3ae4 <deflateParams@@Base+0x28>

0000000000003c40 <deflate@@Base>:
    3c40:	stp	x29, x30, [sp, #-80]!
    3c44:	str	x25, [sp, #16]
    3c48:	stp	x24, x23, [sp, #32]
    3c4c:	stp	x22, x21, [sp, #48]
    3c50:	stp	x20, x19, [sp, #64]
    3c54:	mov	x29, sp
    3c58:	mov	w21, w1
    3c5c:	mov	x20, x0
    3c60:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    3c64:	mov	w8, w0
    3c68:	cmp	w21, #0x5
    3c6c:	mov	w0, #0xfffffffe            	// #-2
    3c70:	b.hi	3cbc <deflate@@Base+0x7c>  // b.pmore
    3c74:	cbnz	w8, 3cbc <deflate@@Base+0x7c>
    3c78:	ldr	x8, [x20, #24]
    3c7c:	cbz	x8, 3ca8 <deflate@@Base+0x68>
    3c80:	ldr	w9, [x20, #8]
    3c84:	ldr	x19, [x20, #56]
    3c88:	cbz	w9, 3c94 <deflate@@Base+0x54>
    3c8c:	ldr	x8, [x20]
    3c90:	cbz	x8, 3ca8 <deflate@@Base+0x68>
    3c94:	ldr	w8, [x19, #8]
    3c98:	cmp	w21, #0x4
    3c9c:	b.eq	3cd4 <deflate@@Base+0x94>  // b.none
    3ca0:	cmp	w8, #0x29a
    3ca4:	b.ne	3cd4 <deflate@@Base+0x94>  // b.any
    3ca8:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    3cac:	ldr	x8, [x8, #4056]
    3cb0:	mov	w0, #0xfffffffe            	// #-2
    3cb4:	ldr	x8, [x8, #32]
    3cb8:	str	x8, [x20, #48]
    3cbc:	ldp	x20, x19, [sp, #64]
    3cc0:	ldp	x22, x21, [sp, #48]
    3cc4:	ldp	x24, x23, [sp, #32]
    3cc8:	ldr	x25, [sp, #16]
    3ccc:	ldp	x29, x30, [sp], #80
    3cd0:	ret
    3cd4:	ldr	w10, [x20, #32]
    3cd8:	cbz	w10, 3fe4 <deflate@@Base+0x3a4>
    3cdc:	ldr	x11, [x19, #40]
    3ce0:	ldr	w10, [x19, #76]
    3ce4:	str	w21, [x19, #76]
    3ce8:	cbz	x11, 3d04 <deflate@@Base+0xc4>
    3cec:	mov	x0, x20
    3cf0:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    3cf4:	ldr	w8, [x20, #32]
    3cf8:	cbz	w8, 4bd8 <deflate@@Base+0xf98>
    3cfc:	ldr	w8, [x19, #8]
    3d00:	b	3d08 <deflate@@Base+0xc8>
    3d04:	cbz	w9, 3fb0 <deflate@@Base+0x370>
    3d08:	cmp	w8, #0x2a
    3d0c:	b.eq	3d24 <deflate@@Base+0xe4>  // b.none
    3d10:	cmp	w8, #0x29a
    3d14:	b.ne	3e54 <deflate@@Base+0x214>  // b.any
    3d18:	ldr	w8, [x20, #8]
    3d1c:	cbnz	w8, 3fe4 <deflate@@Base+0x3a4>
    3d20:	b	451c <deflate@@Base+0x8dc>
    3d24:	ldr	w8, [x19, #200]
    3d28:	ldr	w9, [x19, #84]
    3d2c:	mov	w10, #0xffff8800            	// #-30720
    3d30:	cmp	w8, #0x1
    3d34:	add	w8, w10, w9, lsl #12
    3d38:	b.gt	3d48 <deflate@@Base+0x108>
    3d3c:	ldr	w9, [x19, #196]
    3d40:	cmp	w9, #0x2
    3d44:	b.ge	4070 <deflate@@Base+0x430>  // b.tcont
    3d48:	mov	w9, wzr
    3d4c:	orr	w8, w9, w8
    3d50:	ldr	w9, [x19, #172]
    3d54:	ldr	x12, [x19, #40]
    3d58:	mov	w10, #0x1085                	// #4229
    3d5c:	ldr	x11, [x19, #16]
    3d60:	cmp	w9, #0x0
    3d64:	orr	w9, w8, #0x20
    3d68:	movk	w10, #0x842, lsl #16
    3d6c:	csel	w8, w8, w9, eq  // eq = none
    3d70:	add	x9, x12, #0x1
    3d74:	str	x9, [x19, #40]
    3d78:	umull	x9, w8, w10
    3d7c:	lsr	w10, w8, #8
    3d80:	lsr	x9, x9, #32
    3d84:	strb	w10, [x11, x12]
    3d88:	sub	w10, w8, w9
    3d8c:	add	w9, w9, w10, lsr #1
    3d90:	ldr	x12, [x19, #40]
    3d94:	lsr	w9, w9, #4
    3d98:	ldr	x11, [x19, #16]
    3d9c:	sub	w9, w9, w9, lsl #5
    3da0:	add	w9, w8, w9
    3da4:	orr	w8, w9, w8
    3da8:	add	x10, x12, #0x1
    3dac:	eor	w8, w8, #0x1f
    3db0:	str	x10, [x19, #40]
    3db4:	strb	w8, [x11, x12]
    3db8:	ldr	w8, [x19, #172]
    3dbc:	cbz	w8, 3e24 <deflate@@Base+0x1e4>
    3dc0:	ldr	x8, [x20, #96]
    3dc4:	ldr	x9, [x19, #40]
    3dc8:	ldr	x10, [x19, #16]
    3dcc:	lsr	x11, x8, #24
    3dd0:	add	x12, x9, #0x1
    3dd4:	str	x12, [x19, #40]
    3dd8:	strb	w11, [x10, x9]
    3ddc:	ldr	x9, [x19, #40]
    3de0:	ldr	x10, [x19, #16]
    3de4:	lsr	x8, x8, #16
    3de8:	add	x11, x9, #0x1
    3dec:	str	x11, [x19, #40]
    3df0:	strb	w8, [x10, x9]
    3df4:	ldr	x8, [x20, #96]
    3df8:	ldr	x9, [x19, #40]
    3dfc:	ldr	x10, [x19, #16]
    3e00:	ubfx	x11, x8, #8, #24
    3e04:	add	x12, x9, #0x1
    3e08:	str	x12, [x19, #40]
    3e0c:	strb	w11, [x10, x9]
    3e10:	ldr	x9, [x19, #40]
    3e14:	ldr	x10, [x19, #16]
    3e18:	add	x11, x9, #0x1
    3e1c:	str	x11, [x19, #40]
    3e20:	strb	w8, [x10, x9]
    3e24:	mov	x0, xzr
    3e28:	mov	x1, xzr
    3e2c:	mov	w2, wzr
    3e30:	bl	2540 <adler32@plt>
    3e34:	str	x0, [x20, #96]
    3e38:	mov	w8, #0x71                  	// #113
    3e3c:	mov	x0, x20
    3e40:	str	w8, [x19, #8]
    3e44:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    3e48:	ldr	x8, [x19, #40]
    3e4c:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    3e50:	ldr	w8, [x19, #8]
    3e54:	cmp	w8, #0x39
    3e58:	b.ne	4194 <deflate@@Base+0x554>  // b.any
    3e5c:	mov	x0, xzr
    3e60:	mov	x1, xzr
    3e64:	mov	w2, wzr
    3e68:	bl	2420 <crc32@plt>
    3e6c:	str	x0, [x20, #96]
    3e70:	ldr	x8, [x19, #40]
    3e74:	ldr	x9, [x19, #16]
    3e78:	add	x10, x8, #0x1
    3e7c:	str	x10, [x19, #40]
    3e80:	mov	w10, #0x1f                  	// #31
    3e84:	strb	w10, [x9, x8]
    3e88:	ldr	x8, [x19, #40]
    3e8c:	ldr	x9, [x19, #16]
    3e90:	add	x10, x8, #0x1
    3e94:	str	x10, [x19, #40]
    3e98:	mov	w10, #0x8b                  	// #139
    3e9c:	strb	w10, [x9, x8]
    3ea0:	ldr	x8, [x19, #40]
    3ea4:	ldr	x9, [x19, #16]
    3ea8:	add	x10, x8, #0x1
    3eac:	str	x10, [x19, #40]
    3eb0:	mov	w10, #0x8                   	// #8
    3eb4:	strb	w10, [x9, x8]
    3eb8:	ldr	x8, [x19, #56]
    3ebc:	cbz	x8, 3ff8 <deflate@@Base+0x3b8>
    3ec0:	ldr	w9, [x8]
    3ec4:	ldr	w10, [x8, #68]
    3ec8:	ldr	x13, [x19, #40]
    3ecc:	ldr	x11, [x8, #24]
    3ed0:	ldr	x12, [x8, #40]
    3ed4:	ldr	x8, [x8, #56]
    3ed8:	cmp	w9, #0x0
    3edc:	cset	w9, ne  // ne = any
    3ee0:	cmp	w10, #0x0
    3ee4:	add	x10, x13, #0x1
    3ee8:	str	x10, [x19, #40]
    3eec:	cset	w10, ne  // ne = any
    3ef0:	cmp	x11, #0x0
    3ef4:	bfi	w9, w10, #1, #1
    3ef8:	cset	w10, ne  // ne = any
    3efc:	cmp	x12, #0x0
    3f00:	bfi	w9, w10, #2, #1
    3f04:	cset	w10, ne  // ne = any
    3f08:	cmp	x8, #0x0
    3f0c:	ldr	x8, [x19, #16]
    3f10:	bfi	w9, w10, #3, #1
    3f14:	cset	w10, ne  // ne = any
    3f18:	bfi	w9, w10, #4, #1
    3f1c:	strb	w9, [x8, x13]
    3f20:	ldr	x8, [x19, #56]
    3f24:	ldr	x9, [x19, #40]
    3f28:	ldr	x10, [x19, #16]
    3f2c:	ldr	x8, [x8, #8]
    3f30:	add	x11, x9, #0x1
    3f34:	str	x11, [x19, #40]
    3f38:	strb	w8, [x10, x9]
    3f3c:	ldr	x8, [x19, #56]
    3f40:	ldr	x9, [x19, #40]
    3f44:	ldr	x10, [x19, #16]
    3f48:	ldr	x8, [x8, #8]
    3f4c:	add	x11, x9, #0x1
    3f50:	str	x11, [x19, #40]
    3f54:	lsr	x8, x8, #8
    3f58:	strb	w8, [x10, x9]
    3f5c:	ldr	x8, [x19, #56]
    3f60:	ldr	x9, [x19, #40]
    3f64:	ldr	x10, [x19, #16]
    3f68:	ldr	x8, [x8, #8]
    3f6c:	add	x11, x9, #0x1
    3f70:	str	x11, [x19, #40]
    3f74:	lsr	x8, x8, #16
    3f78:	strb	w8, [x10, x9]
    3f7c:	ldr	x8, [x19, #56]
    3f80:	ldr	x9, [x19, #40]
    3f84:	ldr	x10, [x19, #16]
    3f88:	ldr	x8, [x8, #8]
    3f8c:	add	x11, x9, #0x1
    3f90:	str	x11, [x19, #40]
    3f94:	lsr	x8, x8, #24
    3f98:	strb	w8, [x10, x9]
    3f9c:	ldr	w8, [x19, #196]
    3fa0:	cmp	w8, #0x9
    3fa4:	b.ne	4080 <deflate@@Base+0x440>  // b.any
    3fa8:	mov	w8, #0x2                   	// #2
    3fac:	b	4094 <deflate@@Base+0x454>
    3fb0:	cmp	w21, #0x4
    3fb4:	mov	w11, #0x9                   	// #9
    3fb8:	csel	w9, w11, wzr, gt
    3fbc:	cmp	w10, #0x4
    3fc0:	csel	w11, w11, wzr, gt
    3fc4:	cmp	w21, #0x4
    3fc8:	b.eq	3d08 <deflate@@Base+0xc8>  // b.none
    3fcc:	lsl	w12, w21, #1
    3fd0:	lsl	w10, w10, #1
    3fd4:	sub	w9, w12, w9
    3fd8:	sub	w10, w10, w11
    3fdc:	cmp	w9, w10
    3fe0:	b.gt	3d08 <deflate@@Base+0xc8>
    3fe4:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    3fe8:	ldr	x8, [x8, #4056]
    3fec:	mov	w0, #0xfffffffb            	// #-5
    3ff0:	ldr	x8, [x8, #56]
    3ff4:	b	3cb8 <deflate@@Base+0x78>
    3ff8:	ldr	x8, [x19, #40]
    3ffc:	ldr	x9, [x19, #16]
    4000:	add	x10, x8, #0x1
    4004:	str	x10, [x19, #40]
    4008:	strb	wzr, [x9, x8]
    400c:	ldr	x8, [x19, #40]
    4010:	ldr	x9, [x19, #16]
    4014:	add	x10, x8, #0x1
    4018:	str	x10, [x19, #40]
    401c:	strb	wzr, [x9, x8]
    4020:	ldr	x8, [x19, #40]
    4024:	ldr	x9, [x19, #16]
    4028:	add	x10, x8, #0x1
    402c:	str	x10, [x19, #40]
    4030:	strb	wzr, [x9, x8]
    4034:	ldr	x8, [x19, #40]
    4038:	ldr	x9, [x19, #16]
    403c:	add	x10, x8, #0x1
    4040:	str	x10, [x19, #40]
    4044:	strb	wzr, [x9, x8]
    4048:	ldr	x8, [x19, #40]
    404c:	ldr	x9, [x19, #16]
    4050:	add	x10, x8, #0x1
    4054:	str	x10, [x19, #40]
    4058:	strb	wzr, [x9, x8]
    405c:	ldr	w8, [x19, #196]
    4060:	cmp	w8, #0x9
    4064:	b.ne	4138 <deflate@@Base+0x4f8>  // b.any
    4068:	mov	w8, #0x2                   	// #2
    406c:	b	414c <deflate@@Base+0x50c>
    4070:	cmp	w9, #0x6
    4074:	b.ge	427c <deflate@@Base+0x63c>  // b.tcont
    4078:	mov	w9, #0x40                  	// #64
    407c:	b	3d4c <deflate@@Base+0x10c>
    4080:	ldr	w9, [x19, #200]
    4084:	cmp	w9, #0x1
    4088:	ccmp	w8, #0x2, #0x8, le
    408c:	mov	w8, #0x4                   	// #4
    4090:	csel	w8, w8, wzr, lt  // lt = tstop
    4094:	ldr	x9, [x19, #40]
    4098:	ldr	x10, [x19, #16]
    409c:	add	x11, x9, #0x1
    40a0:	str	x11, [x19, #40]
    40a4:	strb	w8, [x10, x9]
    40a8:	ldr	x8, [x19, #56]
    40ac:	ldr	x9, [x19, #40]
    40b0:	ldr	x10, [x19, #16]
    40b4:	ldr	w8, [x8, #20]
    40b8:	add	x11, x9, #0x1
    40bc:	str	x11, [x19, #40]
    40c0:	strb	w8, [x10, x9]
    40c4:	ldr	x8, [x19, #56]
    40c8:	ldr	x9, [x8, #24]
    40cc:	cbz	x9, 410c <deflate@@Base+0x4cc>
    40d0:	ldr	x9, [x19, #40]
    40d4:	ldr	w8, [x8, #32]
    40d8:	ldr	x10, [x19, #16]
    40dc:	add	x11, x9, #0x1
    40e0:	str	x11, [x19, #40]
    40e4:	strb	w8, [x10, x9]
    40e8:	ldr	x8, [x19, #56]
    40ec:	ldr	x9, [x19, #40]
    40f0:	ldr	x10, [x19, #16]
    40f4:	ldr	w8, [x8, #32]
    40f8:	add	x11, x9, #0x1
    40fc:	str	x11, [x19, #40]
    4100:	lsr	w8, w8, #8
    4104:	strb	w8, [x10, x9]
    4108:	ldr	x8, [x19, #56]
    410c:	ldr	w8, [x8, #68]
    4110:	cbz	w8, 4128 <deflate@@Base+0x4e8>
    4114:	ldr	x0, [x20, #96]
    4118:	ldr	x1, [x19, #16]
    411c:	ldr	w2, [x19, #40]
    4120:	bl	2420 <crc32@plt>
    4124:	str	x0, [x20, #96]
    4128:	mov	w8, #0x45                  	// #69
    412c:	str	xzr, [x19, #64]
    4130:	str	w8, [x19, #8]
    4134:	b	41b0 <deflate@@Base+0x570>
    4138:	ldr	w9, [x19, #200]
    413c:	cmp	w9, #0x1
    4140:	ccmp	w8, #0x2, #0x8, le
    4144:	mov	w8, #0x4                   	// #4
    4148:	csel	w8, w8, wzr, lt  // lt = tstop
    414c:	ldr	x9, [x19, #40]
    4150:	ldr	x10, [x19, #16]
    4154:	mov	x0, x20
    4158:	add	x11, x9, #0x1
    415c:	str	x11, [x19, #40]
    4160:	strb	w8, [x10, x9]
    4164:	ldr	x8, [x19, #40]
    4168:	ldr	x10, [x19, #16]
    416c:	mov	w9, #0x3                   	// #3
    4170:	mov	w11, #0x71                  	// #113
    4174:	add	x12, x8, #0x1
    4178:	str	x12, [x19, #40]
    417c:	strb	w9, [x10, x8]
    4180:	str	w11, [x19, #8]
    4184:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4188:	ldr	x8, [x19, #40]
    418c:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    4190:	ldr	w8, [x19, #8]
    4194:	cmp	w8, #0x5a
    4198:	b.gt	4268 <deflate@@Base+0x628>
    419c:	cmp	w8, #0x45
    41a0:	b.eq	41b0 <deflate@@Base+0x570>  // b.none
    41a4:	cmp	w8, #0x49
    41a8:	b.eq	42f4 <deflate@@Base+0x6b4>  // b.none
    41ac:	b	4514 <deflate@@Base+0x8d4>
    41b0:	ldr	x9, [x19, #56]
    41b4:	ldr	x8, [x9, #24]
    41b8:	cbz	x8, 42ec <deflate@@Base+0x6ac>
    41bc:	ldrh	w11, [x9, #32]
    41c0:	ldr	x9, [x19, #64]
    41c4:	ldr	x24, [x19, #40]
    41c8:	ldr	x10, [x19, #24]
    41cc:	sub	w22, w11, w9
    41d0:	add	x11, x24, x22
    41d4:	cmp	x11, x10
    41d8:	b.ls	429c <deflate@@Base+0x65c>  // b.plast
    41dc:	ldr	x11, [x19, #16]
    41e0:	sub	x25, x10, x24
    41e4:	and	x23, x25, #0xffffffff
    41e8:	add	x1, x8, x9
    41ec:	add	x0, x11, x24
    41f0:	mov	x2, x23
    41f4:	bl	2390 <memcpy@plt>
    41f8:	ldr	x8, [x19, #24]
    41fc:	cmp	x8, x24
    4200:	str	x8, [x19, #40]
    4204:	b.ls	422c <deflate@@Base+0x5ec>  // b.plast
    4208:	ldr	x9, [x19, #56]
    420c:	ldr	w9, [x9, #68]
    4210:	cbz	w9, 422c <deflate@@Base+0x5ec>
    4214:	ldr	x9, [x19, #16]
    4218:	ldr	x0, [x20, #96]
    421c:	sub	w2, w8, w24
    4220:	add	x1, x9, x24
    4224:	bl	2420 <crc32@plt>
    4228:	str	x0, [x20, #96]
    422c:	ldr	x8, [x19, #64]
    4230:	mov	x0, x20
    4234:	add	x8, x8, x23
    4238:	str	x8, [x19, #64]
    423c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4240:	ldr	x8, [x19, #40]
    4244:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    4248:	ldr	x10, [x19, #24]
    424c:	sub	w22, w22, w25
    4250:	cmp	x10, w22, uxtw
    4254:	b.cs	428c <deflate@@Base+0x64c>  // b.hs, b.nlast
    4258:	ldp	x8, x9, [x19, #56]
    425c:	mov	x24, xzr
    4260:	ldr	x8, [x8, #24]
    4264:	b	41dc <deflate@@Base+0x59c>
    4268:	cmp	w8, #0x5b
    426c:	b.eq	43c0 <deflate@@Base+0x780>  // b.none
    4270:	cmp	w8, #0x67
    4274:	b.eq	4488 <deflate@@Base+0x848>  // b.none
    4278:	b	4514 <deflate@@Base+0x8d4>
    427c:	mov	w9, #0xc0                  	// #192
    4280:	mov	w10, #0x80                  	// #128
    4284:	csel	w9, w10, w9, eq  // eq = none
    4288:	b	3d4c <deflate@@Base+0x10c>
    428c:	ldp	x8, x9, [x19, #56]
    4290:	mov	x24, xzr
    4294:	mov	w22, w22
    4298:	ldr	x8, [x8, #24]
    429c:	ldr	x10, [x19, #16]
    42a0:	add	x1, x8, x9
    42a4:	mov	x2, x22
    42a8:	add	x0, x10, x24
    42ac:	bl	2390 <memcpy@plt>
    42b0:	ldr	x8, [x19, #40]
    42b4:	add	x8, x8, x22
    42b8:	cmp	x8, x24
    42bc:	str	x8, [x19, #40]
    42c0:	b.ls	42e8 <deflate@@Base+0x6a8>  // b.plast
    42c4:	ldr	x9, [x19, #56]
    42c8:	ldr	w9, [x9, #68]
    42cc:	cbz	w9, 42e8 <deflate@@Base+0x6a8>
    42d0:	ldr	x9, [x19, #16]
    42d4:	ldr	x0, [x20, #96]
    42d8:	sub	w2, w8, w24
    42dc:	add	x1, x9, x24
    42e0:	bl	2420 <crc32@plt>
    42e4:	str	x0, [x20, #96]
    42e8:	str	xzr, [x19, #64]
    42ec:	mov	w8, #0x49                  	// #73
    42f0:	str	w8, [x19, #8]
    42f4:	ldr	x8, [x19, #56]
    42f8:	ldr	x8, [x8, #40]
    42fc:	cbz	x8, 43b8 <deflate@@Base+0x778>
    4300:	ldr	x9, [x19, #40]
    4304:	mov	x8, x9
    4308:	ldr	x10, [x19, #24]
    430c:	cmp	x9, x10
    4310:	b.ne	4354 <deflate@@Base+0x714>  // b.any
    4314:	cmp	x9, x8
    4318:	b.ls	4340 <deflate@@Base+0x700>  // b.plast
    431c:	ldr	x10, [x19, #56]
    4320:	ldr	w10, [x10, #68]
    4324:	cbz	w10, 4340 <deflate@@Base+0x700>
    4328:	ldr	x10, [x19, #16]
    432c:	ldr	x0, [x20, #96]
    4330:	sub	w2, w9, w8
    4334:	add	x1, x10, x8
    4338:	bl	2420 <crc32@plt>
    433c:	str	x0, [x20, #96]
    4340:	mov	x0, x20
    4344:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4348:	ldr	x8, [x19, #40]
    434c:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    4350:	mov	x9, xzr
    4354:	ldp	x10, x11, [x19, #56]
    4358:	ldr	x10, [x10, #40]
    435c:	add	x12, x11, #0x1
    4360:	str	x12, [x19, #64]
    4364:	add	x12, x9, #0x1
    4368:	ldrb	w10, [x10, x11]
    436c:	ldr	x11, [x19, #16]
    4370:	str	x12, [x19, #40]
    4374:	strb	w10, [x11, x9]
    4378:	cbz	w10, 4384 <deflate@@Base+0x744>
    437c:	ldr	x9, [x19, #40]
    4380:	b	4308 <deflate@@Base+0x6c8>
    4384:	ldr	x9, [x19, #56]
    4388:	ldr	w9, [x9, #68]
    438c:	cbz	w9, 43b4 <deflate@@Base+0x774>
    4390:	ldr	x9, [x19, #40]
    4394:	cmp	x9, x8
    4398:	b.ls	43b4 <deflate@@Base+0x774>  // b.plast
    439c:	ldr	x10, [x19, #16]
    43a0:	ldr	x0, [x20, #96]
    43a4:	sub	w2, w9, w8
    43a8:	add	x1, x10, x8
    43ac:	bl	2420 <crc32@plt>
    43b0:	str	x0, [x20, #96]
    43b4:	str	xzr, [x19, #64]
    43b8:	mov	w8, #0x5b                  	// #91
    43bc:	str	w8, [x19, #8]
    43c0:	ldr	x8, [x19, #56]
    43c4:	ldr	x8, [x8, #56]
    43c8:	cbz	x8, 4480 <deflate@@Base+0x840>
    43cc:	ldr	x9, [x19, #40]
    43d0:	mov	x8, x9
    43d4:	ldr	x10, [x19, #24]
    43d8:	cmp	x9, x10
    43dc:	b.ne	4420 <deflate@@Base+0x7e0>  // b.any
    43e0:	cmp	x9, x8
    43e4:	b.ls	440c <deflate@@Base+0x7cc>  // b.plast
    43e8:	ldr	x10, [x19, #56]
    43ec:	ldr	w10, [x10, #68]
    43f0:	cbz	w10, 440c <deflate@@Base+0x7cc>
    43f4:	ldr	x10, [x19, #16]
    43f8:	ldr	x0, [x20, #96]
    43fc:	sub	w2, w9, w8
    4400:	add	x1, x10, x8
    4404:	bl	2420 <crc32@plt>
    4408:	str	x0, [x20, #96]
    440c:	mov	x0, x20
    4410:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4414:	ldr	x8, [x19, #40]
    4418:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    441c:	mov	x9, xzr
    4420:	ldp	x10, x11, [x19, #56]
    4424:	ldr	x10, [x10, #56]
    4428:	add	x12, x11, #0x1
    442c:	str	x12, [x19, #64]
    4430:	add	x12, x9, #0x1
    4434:	ldrb	w10, [x10, x11]
    4438:	ldr	x11, [x19, #16]
    443c:	str	x12, [x19, #40]
    4440:	strb	w10, [x11, x9]
    4444:	cbz	w10, 4450 <deflate@@Base+0x810>
    4448:	ldr	x9, [x19, #40]
    444c:	b	43d4 <deflate@@Base+0x794>
    4450:	ldr	x9, [x19, #56]
    4454:	ldr	w9, [x9, #68]
    4458:	cbz	w9, 4480 <deflate@@Base+0x840>
    445c:	ldr	x9, [x19, #40]
    4460:	cmp	x9, x8
    4464:	b.ls	4480 <deflate@@Base+0x840>  // b.plast
    4468:	ldr	x10, [x19, #16]
    446c:	ldr	x0, [x20, #96]
    4470:	sub	w2, w9, w8
    4474:	add	x1, x10, x8
    4478:	bl	2420 <crc32@plt>
    447c:	str	x0, [x20, #96]
    4480:	mov	w8, #0x67                  	// #103
    4484:	str	w8, [x19, #8]
    4488:	ldr	x8, [x19, #56]
    448c:	ldr	w8, [x8, #68]
    4490:	cbz	w8, 44fc <deflate@@Base+0x8bc>
    4494:	ldr	x8, [x19, #40]
    4498:	ldr	x9, [x19, #24]
    449c:	add	x10, x8, #0x2
    44a0:	cmp	x10, x9
    44a4:	b.ls	44b8 <deflate@@Base+0x878>  // b.plast
    44a8:	mov	x0, x20
    44ac:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    44b0:	ldr	x8, [x19, #40]
    44b4:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    44b8:	ldr	x9, [x20, #96]
    44bc:	ldr	x10, [x19, #16]
    44c0:	add	x11, x8, #0x1
    44c4:	str	x11, [x19, #40]
    44c8:	mov	x0, xzr
    44cc:	strb	w9, [x10, x8]
    44d0:	ldr	x8, [x20, #96]
    44d4:	ldr	x9, [x19, #40]
    44d8:	ldr	x10, [x19, #16]
    44dc:	mov	x1, xzr
    44e0:	lsr	x8, x8, #8
    44e4:	add	x11, x9, #0x1
    44e8:	mov	w2, wzr
    44ec:	str	x11, [x19, #40]
    44f0:	strb	w8, [x10, x9]
    44f4:	bl	2420 <crc32@plt>
    44f8:	str	x0, [x20, #96]
    44fc:	mov	w8, #0x71                  	// #113
    4500:	mov	x0, x20
    4504:	str	w8, [x19, #8]
    4508:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    450c:	ldr	x8, [x19, #40]
    4510:	cbnz	x8, 4bd8 <deflate@@Base+0xf98>
    4514:	ldr	w8, [x20, #8]
    4518:	cbnz	w8, 4524 <deflate@@Base+0x8e4>
    451c:	ldr	w8, [x19, #180]
    4520:	cbz	w8, 461c <deflate@@Base+0x9dc>
    4524:	ldrsw	x8, [x19, #196]
    4528:	cbz	w8, 460c <deflate@@Base+0x9cc>
    452c:	ldr	w9, [x19, #200]
    4530:	cmp	w9, #0x3
    4534:	b.eq	4630 <deflate@@Base+0x9f0>  // b.none
    4538:	cmp	w9, #0x2
    453c:	b.ne	48dc <deflate@@Base+0xc9c>  // b.any
    4540:	ldr	w8, [x19, #180]
    4544:	cbnz	w8, 4558 <deflate@@Base+0x918>
    4548:	mov	x0, x19
    454c:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    4550:	ldr	w8, [x19, #180]
    4554:	cbz	w8, 48fc <deflate@@Base+0xcbc>
    4558:	ldr	x8, [x19, #96]
    455c:	ldr	w9, [x19, #172]
    4560:	ldr	x10, [x19, #5904]
    4564:	ldr	w11, [x19, #5900]
    4568:	str	wzr, [x19, #160]
    456c:	ldrb	w8, [x8, x9]
    4570:	strh	wzr, [x10, x11, lsl #1]
    4574:	ldr	x9, [x19, #5888]
    4578:	add	w10, w11, #0x1
    457c:	str	w10, [x19, #5900]
    4580:	add	x10, x19, x8, lsl #2
    4584:	strb	w8, [x9, x11]
    4588:	ldrh	w8, [x10, #212]
    458c:	add	w8, w8, #0x1
    4590:	strh	w8, [x10, #212]
    4594:	ldr	w8, [x19, #5896]
    4598:	ldr	w9, [x19, #180]
    459c:	ldr	w10, [x19, #172]
    45a0:	ldr	w11, [x19, #5900]
    45a4:	sub	w12, w8, #0x1
    45a8:	sub	w9, w9, #0x1
    45ac:	add	w8, w10, #0x1
    45b0:	cmp	w11, w12
    45b4:	str	w9, [x19, #180]
    45b8:	str	w8, [x19, #172]
    45bc:	b.ne	4540 <deflate@@Base+0x900>  // b.any
    45c0:	ldr	x9, [x19, #152]
    45c4:	tbnz	x9, #63, 45d4 <deflate@@Base+0x994>
    45c8:	ldr	x10, [x19, #96]
    45cc:	add	x1, x10, w9, uxtw
    45d0:	b	45d8 <deflate@@Base+0x998>
    45d4:	mov	x1, xzr
    45d8:	mov	w8, w8
    45dc:	sub	x2, x8, x9
    45e0:	mov	x0, x19
    45e4:	mov	w3, wzr
    45e8:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    45ec:	ldr	w8, [x19, #172]
    45f0:	ldr	x0, [x19]
    45f4:	str	x8, [x19, #152]
    45f8:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    45fc:	ldr	x8, [x19]
    4600:	ldr	w8, [x8, #32]
    4604:	cbnz	w8, 4540 <deflate@@Base+0x900>
    4608:	b	4bc8 <deflate@@Base+0xf88>
    460c:	mov	x0, x19
    4610:	mov	w1, w21
    4614:	bl	4dfc <deflateBound@@ZLIB_1.2.0+0x1bc>
    4618:	b	4978 <deflate@@Base+0xd38>
    461c:	cbz	w21, 4a10 <deflate@@Base+0xdd0>
    4620:	ldr	w8, [x19, #8]
    4624:	cmp	w8, #0x29a
    4628:	b.ne	4524 <deflate@@Base+0x8e4>  // b.any
    462c:	b	4a10 <deflate@@Base+0xdd0>
    4630:	adrp	x23, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    4634:	mov	w22, #0x1                   	// #1
    4638:	add	x23, x23, #0xd88
    463c:	adrp	x24, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    4640:	ldr	w8, [x19, #180]
    4644:	cmp	w8, #0x103
    4648:	b.cs	467c <deflate@@Base+0xa3c>  // b.hs, b.nlast
    464c:	mov	x0, x19
    4650:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    4654:	ldr	w8, [x19, #180]
    4658:	cbnz	w21, 4664 <deflate@@Base+0xa24>
    465c:	cmp	w8, #0x103
    4660:	b.cc	4bc8 <deflate@@Base+0xf88>  // b.lo, b.ul, b.last
    4664:	cbz	w8, 4900 <deflate@@Base+0xcc0>
    4668:	cmp	w8, #0x2
    466c:	str	wzr, [x19, #160]
    4670:	b.hi	4680 <deflate@@Base+0xa40>  // b.pmore
    4674:	ldr	w9, [x19, #172]
    4678:	b	4830 <deflate@@Base+0xbf0>
    467c:	str	wzr, [x19, #160]
    4680:	ldr	w9, [x19, #172]
    4684:	cbz	w9, 4830 <deflate@@Base+0xbf0>
    4688:	ldr	x10, [x19, #96]
    468c:	add	x11, x10, x9
    4690:	ldurb	w12, [x11, #-1]
    4694:	ldrb	w10, [x11]
    4698:	cmp	w12, w10
    469c:	b.ne	4830 <deflate@@Base+0xbf0>  // b.any
    46a0:	ldrb	w10, [x11, #1]
    46a4:	cmp	w12, w10
    46a8:	b.ne	4830 <deflate@@Base+0xbf0>  // b.any
    46ac:	ldrb	w10, [x11, #2]
    46b0:	cmp	w12, w10
    46b4:	b.ne	4830 <deflate@@Base+0xbf0>  // b.any
    46b8:	mov	x13, xzr
    46bc:	add	x10, x11, #0x102
    46c0:	add	x14, x11, x13
    46c4:	ldrb	w15, [x14, #3]
    46c8:	cmp	w12, w15
    46cc:	b.ne	474c <deflate@@Base+0xb0c>  // b.any
    46d0:	ldrb	w14, [x14, #4]
    46d4:	cmp	w12, w14
    46d8:	b.ne	4754 <deflate@@Base+0xb14>  // b.any
    46dc:	add	x14, x11, x13
    46e0:	ldrb	w15, [x14, #5]
    46e4:	cmp	w12, w15
    46e8:	b.ne	4760 <deflate@@Base+0xb20>  // b.any
    46ec:	ldrb	w14, [x14, #6]
    46f0:	cmp	w12, w14
    46f4:	b.ne	4768 <deflate@@Base+0xb28>  // b.any
    46f8:	add	x14, x11, x13
    46fc:	ldrb	w15, [x14, #7]
    4700:	cmp	w12, w15
    4704:	b.ne	4774 <deflate@@Base+0xb34>  // b.any
    4708:	ldrb	w14, [x14, #8]
    470c:	cmp	w12, w14
    4710:	b.ne	477c <deflate@@Base+0xb3c>  // b.any
    4714:	add	x14, x11, x13
    4718:	ldrb	w15, [x14, #9]
    471c:	cmp	w12, w15
    4720:	b.ne	4788 <deflate@@Base+0xb48>  // b.any
    4724:	add	x15, x13, #0x2
    4728:	cmp	x15, #0xf9
    472c:	add	x13, x13, #0x8
    4730:	b.hi	4740 <deflate@@Base+0xb00>  // b.pmore
    4734:	ldrb	w14, [x14, #10]
    4738:	cmp	w12, w14
    473c:	b.eq	46c0 <deflate@@Base+0xa80>  // b.none
    4740:	add	x11, x11, x13
    4744:	add	x11, x11, #0x2
    4748:	b	478c <deflate@@Base+0xb4c>
    474c:	add	x11, x14, #0x3
    4750:	b	478c <deflate@@Base+0xb4c>
    4754:	add	x11, x11, x13
    4758:	add	x11, x11, #0x4
    475c:	b	478c <deflate@@Base+0xb4c>
    4760:	add	x11, x14, #0x5
    4764:	b	478c <deflate@@Base+0xb4c>
    4768:	add	x11, x11, x13
    476c:	add	x11, x11, #0x6
    4770:	b	478c <deflate@@Base+0xb4c>
    4774:	add	x11, x14, #0x7
    4778:	b	478c <deflate@@Base+0xb4c>
    477c:	add	x11, x11, x13
    4780:	add	x11, x11, #0x8
    4784:	b	478c <deflate@@Base+0xb4c>
    4788:	add	x11, x14, #0x9
    478c:	sub	w10, w11, w10
    4790:	add	w10, w10, #0x102
    4794:	cmp	w10, w8
    4798:	csel	w10, w8, w10, hi  // hi = pmore
    479c:	subs	w8, w10, #0x3
    47a0:	str	w10, [x19, #160]
    47a4:	b.cc	4830 <deflate@@Base+0xbf0>  // b.lo, b.ul, b.last
    47a8:	ldr	x9, [x19, #5904]
    47ac:	ldr	w10, [x19, #5900]
    47b0:	strh	w22, [x9, x10, lsl #1]
    47b4:	add	w9, w10, #0x1
    47b8:	ldr	x11, [x19, #5888]
    47bc:	str	w9, [x19, #5900]
    47c0:	and	x9, x8, #0xff
    47c4:	ldrb	w9, [x23, x9]
    47c8:	strb	w8, [x11, x10]
    47cc:	mov	w8, #0x400                 	// #1024
    47d0:	ldrb	w10, [x24, #2952]
    47d4:	bfi	x8, x9, #2, #8
    47d8:	add	x8, x8, x19
    47dc:	ldrh	w9, [x8, #216]
    47e0:	add	x10, x19, x10, lsl #2
    47e4:	add	w9, w9, #0x1
    47e8:	strh	w9, [x8, #216]
    47ec:	ldrh	w8, [x10, #2504]
    47f0:	add	w8, w8, #0x1
    47f4:	strh	w8, [x10, #2504]
    47f8:	ldr	w8, [x19, #160]
    47fc:	ldr	w9, [x19, #180]
    4800:	ldr	w10, [x19, #172]
    4804:	ldr	w11, [x19, #5896]
    4808:	str	wzr, [x19, #160]
    480c:	sub	w9, w9, w8
    4810:	add	w8, w10, w8
    4814:	ldr	w10, [x19, #5900]
    4818:	sub	w11, w11, #0x1
    481c:	str	w9, [x19, #180]
    4820:	str	w8, [x19, #172]
    4824:	cmp	w10, w11
    4828:	b.ne	4640 <deflate@@Base+0xa00>  // b.any
    482c:	b	4890 <deflate@@Base+0xc50>
    4830:	ldr	x8, [x19, #96]
    4834:	ldr	x10, [x19, #5904]
    4838:	ldr	w11, [x19, #5900]
    483c:	ldrb	w8, [x8, w9, uxtw]
    4840:	strh	wzr, [x10, x11, lsl #1]
    4844:	ldr	x9, [x19, #5888]
    4848:	add	w10, w11, #0x1
    484c:	str	w10, [x19, #5900]
    4850:	add	x10, x19, x8, lsl #2
    4854:	strb	w8, [x9, x11]
    4858:	ldrh	w8, [x10, #212]
    485c:	add	w8, w8, #0x1
    4860:	strh	w8, [x10, #212]
    4864:	ldr	w8, [x19, #5896]
    4868:	ldr	w9, [x19, #180]
    486c:	ldr	w10, [x19, #172]
    4870:	ldr	w11, [x19, #5900]
    4874:	sub	w12, w8, #0x1
    4878:	sub	w9, w9, #0x1
    487c:	add	w8, w10, #0x1
    4880:	cmp	w11, w12
    4884:	str	w9, [x19, #180]
    4888:	str	w8, [x19, #172]
    488c:	b.ne	4640 <deflate@@Base+0xa00>  // b.any
    4890:	ldr	x9, [x19, #152]
    4894:	tbnz	x9, #63, 48a4 <deflate@@Base+0xc64>
    4898:	ldr	x10, [x19, #96]
    489c:	add	x1, x10, w9, uxtw
    48a0:	b	48a8 <deflate@@Base+0xc68>
    48a4:	mov	x1, xzr
    48a8:	mov	w8, w8
    48ac:	sub	x2, x8, x9
    48b0:	mov	x0, x19
    48b4:	mov	w3, wzr
    48b8:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    48bc:	ldr	w8, [x19, #172]
    48c0:	ldr	x0, [x19]
    48c4:	str	x8, [x19, #152]
    48c8:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    48cc:	ldr	x8, [x19]
    48d0:	ldr	w8, [x8, #32]
    48d4:	cbnz	w8, 4640 <deflate@@Base+0xa00>
    48d8:	b	4bc8 <deflate@@Base+0xf88>
    48dc:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    48e0:	add	x9, x9, #0xc68
    48e4:	add	x8, x9, x8, lsl #4
    48e8:	ldr	x8, [x8, #8]
    48ec:	mov	x0, x19
    48f0:	mov	w1, w21
    48f4:	blr	x8
    48f8:	b	4978 <deflate@@Base+0xd38>
    48fc:	cbz	w21, 4bc8 <deflate@@Base+0xf88>
    4900:	cmp	w21, #0x4
    4904:	str	wzr, [x19, #5932]
    4908:	b.ne	4920 <deflate@@Base+0xce0>  // b.any
    490c:	ldr	x8, [x19, #152]
    4910:	tbnz	x8, #63, 493c <deflate@@Base+0xcfc>
    4914:	ldr	x9, [x19, #96]
    4918:	add	x1, x9, w8, uxtw
    491c:	b	4940 <deflate@@Base+0xd00>
    4920:	ldr	w8, [x19, #5900]
    4924:	cbz	w8, 499c <deflate@@Base+0xd5c>
    4928:	ldr	x8, [x19, #152]
    492c:	tbnz	x8, #63, 4b94 <deflate@@Base+0xf54>
    4930:	ldr	x9, [x19, #96]
    4934:	add	x1, x9, w8, uxtw
    4938:	b	4b98 <deflate@@Base+0xf58>
    493c:	mov	x1, xzr
    4940:	ldr	w9, [x19, #172]
    4944:	mov	w3, #0x1                   	// #1
    4948:	mov	x0, x19
    494c:	sub	x2, x9, x8
    4950:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    4954:	ldr	w8, [x19, #172]
    4958:	ldr	x0, [x19]
    495c:	str	x8, [x19, #152]
    4960:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4964:	ldr	x8, [x19]
    4968:	ldr	w8, [x8, #32]
    496c:	cmp	w8, #0x0
    4970:	mov	w8, #0x2                   	// #2
    4974:	cinc	w0, w8, ne  // ne = any
    4978:	orr	w8, w0, #0x1
    497c:	cmp	w8, #0x3
    4980:	b.ne	498c <deflate@@Base+0xd4c>  // b.any
    4984:	mov	w8, #0x29a                 	// #666
    4988:	str	w8, [x19, #8]
    498c:	tst	w0, #0xfffffffd
    4990:	b.eq	4bc8 <deflate@@Base+0xf88>  // b.none
    4994:	cmp	w0, #0x1
    4998:	b.ne	4a10 <deflate@@Base+0xdd0>  // b.any
    499c:	cmp	w21, #0x5
    49a0:	b.eq	4a00 <deflate@@Base+0xdc0>  // b.none
    49a4:	mov	x0, x19
    49a8:	cmp	w21, #0x1
    49ac:	b.ne	49b8 <deflate@@Base+0xd78>  // b.any
    49b0:	bl	9e3c <inflateCodesUsed@@ZLIB_1.2.9+0x714>
    49b4:	b	4a00 <deflate@@Base+0xdc0>
    49b8:	mov	x1, xzr
    49bc:	mov	x2, xzr
    49c0:	mov	w3, wzr
    49c4:	bl	9c0c <inflateCodesUsed@@ZLIB_1.2.9+0x4e4>
    49c8:	cmp	w21, #0x3
    49cc:	b.ne	4a00 <deflate@@Base+0xdc0>  // b.any
    49d0:	ldr	w8, [x19, #132]
    49d4:	ldr	x0, [x19, #120]
    49d8:	mov	w1, wzr
    49dc:	sub	w8, w8, #0x1
    49e0:	lsl	x2, x8, #1
    49e4:	strh	wzr, [x0, w8, uxtw #1]
    49e8:	bl	2490 <memset@plt>
    49ec:	ldr	w8, [x19, #180]
    49f0:	cbnz	w8, 4a00 <deflate@@Base+0xdc0>
    49f4:	str	wzr, [x19, #172]
    49f8:	str	xzr, [x19, #152]
    49fc:	str	wzr, [x19, #5932]
    4a00:	mov	x0, x20
    4a04:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4a08:	ldr	w8, [x20, #32]
    4a0c:	cbz	w8, 4bd8 <deflate@@Base+0xf98>
    4a10:	cmp	w21, #0x4
    4a14:	b.ne	4bd0 <deflate@@Base+0xf90>  // b.any
    4a18:	ldr	w9, [x19, #48]
    4a1c:	cmp	w9, #0x1
    4a20:	b.lt	4afc <deflate@@Base+0xebc>  // b.tstop
    4a24:	ldr	x8, [x20, #96]
    4a28:	cmp	w9, #0x2
    4a2c:	b.ne	4b04 <deflate@@Base+0xec4>  // b.any
    4a30:	ldr	x9, [x19, #40]
    4a34:	ldr	x10, [x19, #16]
    4a38:	add	x11, x9, #0x1
    4a3c:	str	x11, [x19, #40]
    4a40:	strb	w8, [x10, x9]
    4a44:	ldr	x8, [x20, #96]
    4a48:	ldr	x9, [x19, #40]
    4a4c:	ldr	x10, [x19, #16]
    4a50:	lsr	x8, x8, #8
    4a54:	add	x11, x9, #0x1
    4a58:	str	x11, [x19, #40]
    4a5c:	strb	w8, [x10, x9]
    4a60:	ldr	x8, [x20, #96]
    4a64:	ldr	x9, [x19, #40]
    4a68:	ldr	x10, [x19, #16]
    4a6c:	lsr	x8, x8, #16
    4a70:	add	x11, x9, #0x1
    4a74:	str	x11, [x19, #40]
    4a78:	strb	w8, [x10, x9]
    4a7c:	ldr	x8, [x20, #96]
    4a80:	ldr	x9, [x19, #40]
    4a84:	ldr	x10, [x19, #16]
    4a88:	lsr	x8, x8, #24
    4a8c:	add	x11, x9, #0x1
    4a90:	str	x11, [x19, #40]
    4a94:	strb	w8, [x10, x9]
    4a98:	ldr	x8, [x19, #40]
    4a9c:	ldr	x9, [x20, #16]
    4aa0:	ldr	x10, [x19, #16]
    4aa4:	add	x11, x8, #0x1
    4aa8:	str	x11, [x19, #40]
    4aac:	strb	w9, [x10, x8]
    4ab0:	ldr	x8, [x20, #16]
    4ab4:	ldr	x9, [x19, #40]
    4ab8:	ldr	x10, [x19, #16]
    4abc:	lsr	x8, x8, #8
    4ac0:	add	x11, x9, #0x1
    4ac4:	str	x11, [x19, #40]
    4ac8:	strb	w8, [x10, x9]
    4acc:	ldr	x8, [x20, #16]
    4ad0:	ldr	x9, [x19, #40]
    4ad4:	ldr	x10, [x19, #16]
    4ad8:	lsr	x8, x8, #16
    4adc:	add	x11, x9, #0x1
    4ae0:	str	x11, [x19, #40]
    4ae4:	strb	w8, [x10, x9]
    4ae8:	ldr	x8, [x20, #16]
    4aec:	ldr	x9, [x19, #40]
    4af0:	ldr	x10, [x19, #16]
    4af4:	lsr	x8, x8, #24
    4af8:	b	4b58 <deflate@@Base+0xf18>
    4afc:	mov	w0, #0x1                   	// #1
    4b00:	b	3cbc <deflate@@Base+0x7c>
    4b04:	ldr	x9, [x19, #40]
    4b08:	ldr	x10, [x19, #16]
    4b0c:	lsr	x11, x8, #24
    4b10:	lsr	x8, x8, #16
    4b14:	add	x12, x9, #0x1
    4b18:	str	x12, [x19, #40]
    4b1c:	strb	w11, [x10, x9]
    4b20:	ldr	x9, [x19, #40]
    4b24:	ldr	x10, [x19, #16]
    4b28:	add	x11, x9, #0x1
    4b2c:	str	x11, [x19, #40]
    4b30:	strb	w8, [x10, x9]
    4b34:	ldr	x8, [x20, #96]
    4b38:	ldr	x9, [x19, #40]
    4b3c:	ldr	x10, [x19, #16]
    4b40:	ubfx	x11, x8, #8, #24
    4b44:	add	x12, x9, #0x1
    4b48:	str	x12, [x19, #40]
    4b4c:	strb	w11, [x10, x9]
    4b50:	ldr	x9, [x19, #40]
    4b54:	ldr	x10, [x19, #16]
    4b58:	add	x11, x9, #0x1
    4b5c:	add	x9, x10, x9
    4b60:	mov	x0, x20
    4b64:	str	x11, [x19, #40]
    4b68:	strb	w8, [x9]
    4b6c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4b70:	ldr	w8, [x19, #48]
    4b74:	cmp	w8, #0x1
    4b78:	b.lt	4b84 <deflate@@Base+0xf44>  // b.tstop
    4b7c:	neg	w8, w8
    4b80:	str	w8, [x19, #48]
    4b84:	ldr	x8, [x19, #40]
    4b88:	cmp	x8, #0x0
    4b8c:	cset	w0, eq  // eq = none
    4b90:	b	3cbc <deflate@@Base+0x7c>
    4b94:	mov	x1, xzr
    4b98:	ldr	w9, [x19, #172]
    4b9c:	mov	x0, x19
    4ba0:	mov	w3, wzr
    4ba4:	sub	x2, x9, x8
    4ba8:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    4bac:	ldr	w8, [x19, #172]
    4bb0:	ldr	x0, [x19]
    4bb4:	str	x8, [x19, #152]
    4bb8:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4bbc:	ldr	x8, [x19]
    4bc0:	ldr	w8, [x8, #32]
    4bc4:	cbnz	w8, 499c <deflate@@Base+0xd5c>
    4bc8:	ldr	w8, [x20, #32]
    4bcc:	cbz	w8, 4bd8 <deflate@@Base+0xf98>
    4bd0:	mov	w0, wzr
    4bd4:	b	3cbc <deflate@@Base+0x7c>
    4bd8:	mov	w8, #0xffffffff            	// #-1
    4bdc:	mov	w0, wzr
    4be0:	str	w8, [x19, #76]
    4be4:	b	3cbc <deflate@@Base+0x7c>

0000000000004be8 <deflateTune@@ZLIB_1.2.2.3>:
    4be8:	stp	x29, x30, [sp, #-64]!
    4bec:	str	x23, [sp, #16]
    4bf0:	stp	x22, x21, [sp, #32]
    4bf4:	stp	x20, x19, [sp, #48]
    4bf8:	mov	x29, sp
    4bfc:	mov	w19, w4
    4c00:	mov	w20, w3
    4c04:	mov	w21, w2
    4c08:	mov	w22, w1
    4c0c:	mov	x23, x0
    4c10:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    4c14:	cbz	w0, 4c20 <deflateTune@@ZLIB_1.2.2.3+0x38>
    4c18:	mov	w0, #0xfffffffe            	// #-2
    4c1c:	b	4c2c <deflateTune@@ZLIB_1.2.2.3+0x44>
    4c20:	ldr	x8, [x23, #56]
    4c24:	stp	w22, w20, [x8, #204]
    4c28:	stp	w19, w21, [x8, #188]
    4c2c:	ldp	x20, x19, [sp, #48]
    4c30:	ldp	x22, x21, [sp, #32]
    4c34:	ldr	x23, [sp, #16]
    4c38:	ldp	x29, x30, [sp], #64
    4c3c:	ret

0000000000004c40 <deflateBound@@ZLIB_1.2.0>:
    4c40:	stp	x29, x30, [sp, #-48]!
    4c44:	stp	x22, x21, [sp, #16]
    4c48:	add	x21, x1, #0x7
    4c4c:	add	x8, x1, x21, lsr #3
    4c50:	add	x9, x1, #0x3f
    4c54:	stp	x20, x19, [sp, #32]
    4c58:	mov	x29, sp
    4c5c:	mov	x19, x1
    4c60:	mov	x20, x0
    4c64:	add	x22, x8, x9, lsr #6
    4c68:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    4c6c:	cbz	w0, 4c78 <deflateBound@@ZLIB_1.2.0+0x38>
    4c70:	add	x0, x22, #0xb
    4c74:	b	4d50 <deflateBound@@ZLIB_1.2.0+0x110>
    4c78:	ldr	x8, [x20, #56]
    4c7c:	ldr	w9, [x8, #48]
    4c80:	cbz	w9, 4cac <deflateBound@@ZLIB_1.2.0+0x6c>
    4c84:	cmp	w9, #0x2
    4c88:	b.eq	4cb4 <deflateBound@@ZLIB_1.2.0+0x74>  // b.none
    4c8c:	cmp	w9, #0x1
    4c90:	b.ne	4cd4 <deflateBound@@ZLIB_1.2.0+0x94>  // b.any
    4c94:	ldr	w9, [x8, #172]
    4c98:	mov	w10, #0xa                   	// #10
    4c9c:	cmp	w9, #0x0
    4ca0:	mov	w9, #0x6                   	// #6
    4ca4:	csel	x9, x9, x10, eq  // eq = none
    4ca8:	b	4d20 <deflateBound@@ZLIB_1.2.0+0xe0>
    4cac:	mov	x9, xzr
    4cb0:	b	4d20 <deflateBound@@ZLIB_1.2.0+0xe0>
    4cb4:	ldr	x9, [x8, #56]
    4cb8:	cbz	x9, 4cdc <deflateBound@@ZLIB_1.2.0+0x9c>
    4cbc:	ldr	x10, [x9, #24]
    4cc0:	cbz	x10, 4ce4 <deflateBound@@ZLIB_1.2.0+0xa4>
    4cc4:	ldr	w10, [x9, #32]
    4cc8:	add	w10, w10, #0x2
    4ccc:	add	x10, x10, #0x12
    4cd0:	b	4ce8 <deflateBound@@ZLIB_1.2.0+0xa8>
    4cd4:	mov	w9, #0x6                   	// #6
    4cd8:	b	4d20 <deflateBound@@ZLIB_1.2.0+0xe0>
    4cdc:	mov	w9, #0x12                  	// #18
    4ce0:	b	4d20 <deflateBound@@ZLIB_1.2.0+0xe0>
    4ce4:	mov	w10, #0x12                  	// #18
    4ce8:	ldr	x11, [x9, #40]
    4cec:	cbz	x11, 4cfc <deflateBound@@ZLIB_1.2.0+0xbc>
    4cf0:	ldrb	w12, [x11], #1
    4cf4:	add	x10, x10, #0x1
    4cf8:	cbnz	w12, 4cf0 <deflateBound@@ZLIB_1.2.0+0xb0>
    4cfc:	ldr	x11, [x9, #56]
    4d00:	cbz	x11, 4d10 <deflateBound@@ZLIB_1.2.0+0xd0>
    4d04:	ldrb	w12, [x11], #1
    4d08:	add	x10, x10, #0x1
    4d0c:	cbnz	w12, 4d04 <deflateBound@@ZLIB_1.2.0+0xc4>
    4d10:	ldr	w9, [x9, #68]
    4d14:	add	x11, x10, #0x2
    4d18:	cmp	w9, #0x0
    4d1c:	csel	x9, x10, x11, eq  // eq = none
    4d20:	ldr	w10, [x8, #84]
    4d24:	cmp	w10, #0xf
    4d28:	b.ne	4d48 <deflateBound@@ZLIB_1.2.0+0x108>  // b.any
    4d2c:	ldr	w8, [x8, #136]
    4d30:	cmp	w8, #0xf
    4d34:	b.ne	4d48 <deflateBound@@ZLIB_1.2.0+0x108>  // b.any
    4d38:	add	x8, x21, x19, lsr #12
    4d3c:	add	x8, x8, x19, lsr #14
    4d40:	add	x8, x8, x19, lsr #25
    4d44:	b	4d4c <deflateBound@@ZLIB_1.2.0+0x10c>
    4d48:	add	x8, x22, #0x5
    4d4c:	add	x0, x8, x9
    4d50:	ldp	x20, x19, [sp, #32]
    4d54:	ldp	x22, x21, [sp, #16]
    4d58:	ldp	x29, x30, [sp], #48
    4d5c:	ret
    4d60:	stp	x29, x30, [sp, #-48]!
    4d64:	stp	x20, x19, [sp, #32]
    4d68:	ldr	x19, [x0, #56]
    4d6c:	mov	x20, x0
    4d70:	str	x21, [sp, #16]
    4d74:	mov	x29, sp
    4d78:	mov	x0, x19
    4d7c:	bl	9da8 <inflateCodesUsed@@ZLIB_1.2.9+0x680>
    4d80:	ldr	w8, [x19, #40]
    4d84:	ldr	w9, [x20, #32]
    4d88:	cmp	w9, w8
    4d8c:	csel	w21, w9, w8, cc  // cc = lo, ul, last
    4d90:	cbz	w21, 4dec <deflateBound@@ZLIB_1.2.0+0x1ac>
    4d94:	ldr	x0, [x20, #24]
    4d98:	ldr	x1, [x19, #32]
    4d9c:	mov	w2, w21
    4da0:	bl	2390 <memcpy@plt>
    4da4:	ldr	x8, [x20, #24]
    4da8:	add	x8, x8, w21, uxtw
    4dac:	str	x8, [x20, #24]
    4db0:	ldr	x8, [x19, #32]
    4db4:	add	x8, x8, w21, uxtw
    4db8:	str	x8, [x19, #32]
    4dbc:	ldr	x8, [x20, #40]
    4dc0:	ldr	w9, [x20, #32]
    4dc4:	add	x8, x8, w21, uxtw
    4dc8:	sub	w9, w9, w21
    4dcc:	str	x8, [x20, #40]
    4dd0:	str	w9, [x20, #32]
    4dd4:	ldr	x8, [x19, #40]
    4dd8:	subs	x8, x8, w21, uxtw
    4ddc:	str	x8, [x19, #40]
    4de0:	b.ne	4dec <deflateBound@@ZLIB_1.2.0+0x1ac>  // b.any
    4de4:	ldr	x8, [x19, #16]
    4de8:	str	x8, [x19, #32]
    4dec:	ldp	x20, x19, [sp, #32]
    4df0:	ldr	x21, [sp, #16]
    4df4:	ldp	x29, x30, [sp], #48
    4df8:	ret
    4dfc:	stp	x29, x30, [sp, #-80]!
    4e00:	stp	x26, x25, [sp, #16]
    4e04:	stp	x24, x23, [sp, #32]
    4e08:	stp	x22, x21, [sp, #48]
    4e0c:	stp	x20, x19, [sp, #64]
    4e10:	ldr	x8, [x0]
    4e14:	ldr	x9, [x0, #24]
    4e18:	ldr	w10, [x0, #80]
    4e1c:	mov	w20, w1
    4e20:	ldr	w24, [x8, #8]
    4e24:	sub	x9, x9, #0x5
    4e28:	cmp	x9, x10
    4e2c:	mov	x19, x0
    4e30:	csel	w25, w10, w9, hi  // hi = pmore
    4e34:	mov	w26, #0xffff                	// #65535
    4e38:	mov	x29, sp
    4e3c:	ldr	w10, [x19, #5940]
    4e40:	ldr	w9, [x8, #32]
    4e44:	add	w10, w10, #0x2a
    4e48:	cmp	w9, w10, asr #3
    4e4c:	b.cc	4fd8 <deflateBound@@ZLIB_1.2.0+0x398>  // b.lo, b.ul, b.last
    4e50:	ldr	w11, [x19, #172]
    4e54:	ldr	w12, [x19, #152]
    4e58:	ldr	w13, [x8, #8]
    4e5c:	asr	w10, w10, #3
    4e60:	sub	w10, w9, w10
    4e64:	sub	w23, w11, w12
    4e68:	add	x11, x23, x13
    4e6c:	add	w9, w23, w13
    4e70:	cmp	x11, x26
    4e74:	csel	w11, w9, w26, cc  // cc = lo, ul, last
    4e78:	cmp	w11, w10
    4e7c:	csel	w21, w10, w11, hi  // hi = pmore
    4e80:	cmp	w21, w25
    4e84:	b.cs	4eb0 <deflateBound@@ZLIB_1.2.0+0x270>  // b.hs, b.nlast
    4e88:	cmp	w20, #0x4
    4e8c:	cset	w10, ne  // ne = any
    4e90:	cmp	w21, #0x0
    4e94:	cset	w11, eq  // eq = none
    4e98:	cmp	w21, w9
    4e9c:	mov	w22, wzr
    4ea0:	b.ne	4fdc <deflateBound@@ZLIB_1.2.0+0x39c>  // b.any
    4ea4:	cbz	w20, 4fdc <deflateBound@@ZLIB_1.2.0+0x39c>
    4ea8:	and	w10, w10, w11
    4eac:	cbnz	w10, 4fdc <deflateBound@@ZLIB_1.2.0+0x39c>
    4eb0:	cmp	w20, #0x4
    4eb4:	cset	w8, eq  // eq = none
    4eb8:	cmp	w21, w9
    4ebc:	cset	w9, eq  // eq = none
    4ec0:	and	w22, w8, w9
    4ec4:	mov	x0, x19
    4ec8:	mov	x1, xzr
    4ecc:	mov	x2, xzr
    4ed0:	mov	w3, w22
    4ed4:	bl	9c0c <inflateCodesUsed@@ZLIB_1.2.9+0x4e4>
    4ed8:	ldr	x8, [x19, #16]
    4edc:	ldr	x9, [x19, #40]
    4ee0:	lsr	w10, w21, #8
    4ee4:	add	x8, x9, x8
    4ee8:	sturb	w21, [x8, #-4]
    4eec:	ldr	x8, [x19, #16]
    4ef0:	ldr	x9, [x19, #40]
    4ef4:	add	x8, x9, x8
    4ef8:	sturb	w10, [x8, #-3]
    4efc:	ldr	x8, [x19, #16]
    4f00:	ldr	x9, [x19, #40]
    4f04:	mvn	w10, w21
    4f08:	add	x8, x9, x8
    4f0c:	sturb	w10, [x8, #-2]
    4f10:	ldr	x8, [x19, #16]
    4f14:	ldr	x9, [x19, #40]
    4f18:	lsr	w10, w10, #8
    4f1c:	add	x8, x9, x8
    4f20:	sturb	w10, [x8, #-1]
    4f24:	ldr	x0, [x19]
    4f28:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    4f2c:	cbz	w23, 4f8c <deflateBound@@ZLIB_1.2.0+0x34c>
    4f30:	ldr	x8, [x19]
    4f34:	ldr	x9, [x19, #96]
    4f38:	ldr	x10, [x19, #152]
    4f3c:	cmp	w23, w21
    4f40:	ldr	x0, [x8, #24]
    4f44:	csel	w23, w21, w23, hi  // hi = pmore
    4f48:	add	x1, x9, x10
    4f4c:	mov	x2, x23
    4f50:	bl	2390 <memcpy@plt>
    4f54:	ldr	x8, [x19]
    4f58:	sub	w21, w21, w23
    4f5c:	ldr	x9, [x8, #24]
    4f60:	ldr	w10, [x8, #32]
    4f64:	ldr	x11, [x8, #40]
    4f68:	add	x9, x9, x23
    4f6c:	sub	w10, w10, w23
    4f70:	add	x11, x11, x23
    4f74:	str	x9, [x8, #24]
    4f78:	str	w10, [x8, #32]
    4f7c:	str	x11, [x8, #40]
    4f80:	ldr	x8, [x19, #152]
    4f84:	add	x8, x8, x23
    4f88:	str	x8, [x19, #152]
    4f8c:	cbz	w21, 4fc8 <deflateBound@@ZLIB_1.2.0+0x388>
    4f90:	ldr	x0, [x19]
    4f94:	mov	w2, w21
    4f98:	ldr	x1, [x0, #24]
    4f9c:	bl	5ef8 <deflateCopy@@Base+0xc44>
    4fa0:	ldr	x8, [x19]
    4fa4:	ldr	x9, [x8, #24]
    4fa8:	ldr	w10, [x8, #32]
    4fac:	ldr	x11, [x8, #40]
    4fb0:	add	x9, x9, w21, uxtw
    4fb4:	sub	w10, w10, w21
    4fb8:	add	x11, x11, w21, uxtw
    4fbc:	str	x9, [x8, #24]
    4fc0:	str	w10, [x8, #32]
    4fc4:	str	x11, [x8, #40]
    4fc8:	ldr	x8, [x19]
    4fcc:	cbz	w22, 4e3c <deflateBound@@ZLIB_1.2.0+0x1fc>
    4fd0:	mov	w22, #0x1                   	// #1
    4fd4:	b	4fdc <deflateBound@@ZLIB_1.2.0+0x39c>
    4fd8:	mov	w22, wzr
    4fdc:	ldr	w9, [x8, #8]
    4fe0:	subs	w23, w24, w9
    4fe4:	b.eq	506c <deflateBound@@ZLIB_1.2.0+0x42c>  // b.none
    4fe8:	ldr	w2, [x19, #80]
    4fec:	cmp	w23, w2
    4ff0:	b.cs	5078 <deflateBound@@ZLIB_1.2.0+0x438>  // b.hs, b.nlast
    4ff4:	ldr	x9, [x19, #104]
    4ff8:	ldr	w8, [x19, #172]
    4ffc:	mov	w21, w23
    5000:	sub	x9, x9, x8
    5004:	cmp	x9, w23, uxtw
    5008:	b.hi	5038 <deflateBound@@ZLIB_1.2.0+0x3f8>  // b.pmore
    500c:	ldr	x0, [x19, #96]
    5010:	sub	w8, w8, w2
    5014:	str	w8, [x19, #172]
    5018:	add	x1, x0, x2
    501c:	mov	x2, x8
    5020:	bl	2390 <memcpy@plt>
    5024:	ldr	w8, [x19, #5928]
    5028:	cmp	w8, #0x1
    502c:	b.hi	5038 <deflateBound@@ZLIB_1.2.0+0x3f8>  // b.pmore
    5030:	add	w8, w8, #0x1
    5034:	str	w8, [x19, #5928]
    5038:	ldr	x8, [x19]
    503c:	ldr	x9, [x19, #96]
    5040:	ldr	w10, [x19, #172]
    5044:	mov	x2, x21
    5048:	ldr	x8, [x8]
    504c:	add	x0, x9, x10
    5050:	sub	x1, x8, x21
    5054:	bl	2390 <memcpy@plt>
    5058:	ldr	w8, [x19, #172]
    505c:	ldr	w9, [x19, #80]
    5060:	add	w8, w8, w23
    5064:	str	w8, [x19, #172]
    5068:	b	509c <deflateBound@@ZLIB_1.2.0+0x45c>
    506c:	ldr	w10, [x19, #172]
    5070:	mov	w8, w10
    5074:	b	50bc <deflateBound@@ZLIB_1.2.0+0x47c>
    5078:	mov	w9, #0x2                   	// #2
    507c:	str	w9, [x19, #5928]
    5080:	ldr	x8, [x8]
    5084:	ldr	x0, [x19, #96]
    5088:	sub	x1, x8, x2
    508c:	bl	2390 <memcpy@plt>
    5090:	ldr	w9, [x19, #80]
    5094:	str	w9, [x19, #172]
    5098:	mov	w8, w9
    509c:	ldr	w11, [x19, #5932]
    50a0:	mov	w10, w8
    50a4:	str	x10, [x19, #152]
    50a8:	sub	w9, w9, w11
    50ac:	cmp	w23, w9
    50b0:	csel	w9, w9, w23, hi  // hi = pmore
    50b4:	add	w9, w9, w11
    50b8:	str	w9, [x19, #5932]
    50bc:	ldr	x9, [x19, #5944]
    50c0:	cmp	x9, x10
    50c4:	b.cs	50cc <deflateBound@@ZLIB_1.2.0+0x48c>  // b.hs, b.nlast
    50c8:	str	x10, [x19, #5944]
    50cc:	cbz	w22, 50d8 <deflateBound@@ZLIB_1.2.0+0x498>
    50d0:	mov	w0, #0x3                   	// #3
    50d4:	b	529c <deflateBound@@ZLIB_1.2.0+0x65c>
    50d8:	ldr	x0, [x19]
    50dc:	tst	w20, #0xfffffffb
    50e0:	ldr	w9, [x0, #8]
    50e4:	b.eq	5100 <deflateBound@@ZLIB_1.2.0+0x4c0>  // b.none
    50e8:	cbnz	w9, 5100 <deflateBound@@ZLIB_1.2.0+0x4c0>
    50ec:	ldr	x9, [x19, #152]
    50f0:	cmp	x9, x10
    50f4:	b.ne	5164 <deflateBound@@ZLIB_1.2.0+0x524>  // b.any
    50f8:	mov	w0, #0x1                   	// #1
    50fc:	b	529c <deflateBound@@ZLIB_1.2.0+0x65c>
    5100:	ldr	w10, [x19, #104]
    5104:	mvn	w11, w8
    5108:	add	w21, w10, w11
    510c:	cmp	w9, w21
    5110:	b.ls	5174 <deflateBound@@ZLIB_1.2.0+0x534>  // b.plast
    5114:	ldr	x11, [x19, #152]
    5118:	ldr	w10, [x19, #80]
    511c:	subs	x11, x11, x10
    5120:	b.lt	5174 <deflateBound@@ZLIB_1.2.0+0x534>  // b.tstop
    5124:	ldr	x0, [x19, #96]
    5128:	sub	w2, w8, w10
    512c:	str	x11, [x19, #152]
    5130:	str	w2, [x19, #172]
    5134:	add	x1, x0, x10
    5138:	bl	2390 <memcpy@plt>
    513c:	ldr	w8, [x19, #5928]
    5140:	cmp	w8, #0x1
    5144:	b.hi	5150 <deflateBound@@ZLIB_1.2.0+0x510>  // b.pmore
    5148:	add	w8, w8, #0x1
    514c:	str	w8, [x19, #5928]
    5150:	ldr	x0, [x19]
    5154:	ldr	w8, [x19, #80]
    5158:	ldr	w9, [x0, #8]
    515c:	add	w21, w8, w21
    5160:	b	5174 <deflateBound@@ZLIB_1.2.0+0x534>
    5164:	ldr	w10, [x19, #104]
    5168:	mvn	w8, w8
    516c:	mov	w9, wzr
    5170:	add	w21, w10, w8
    5174:	cmp	w21, w9
    5178:	csel	w21, w9, w21, hi  // hi = pmore
    517c:	cbz	w21, 51a4 <deflateBound@@ZLIB_1.2.0+0x564>
    5180:	ldr	x8, [x19, #96]
    5184:	ldr	w9, [x19, #172]
    5188:	mov	w2, w21
    518c:	add	x1, x8, x9
    5190:	bl	5ef8 <deflateCopy@@Base+0xc44>
    5194:	ldr	w8, [x19, #172]
    5198:	add	w8, w8, w21
    519c:	str	w8, [x19, #172]
    51a0:	b	51a8 <deflateBound@@ZLIB_1.2.0+0x568>
    51a4:	ldr	w8, [x19, #172]
    51a8:	ldr	x9, [x19, #5944]
    51ac:	mov	w10, w8
    51b0:	cmp	x9, w8, uxtw
    51b4:	b.cs	51bc <deflateBound@@ZLIB_1.2.0+0x57c>  // b.hs, b.nlast
    51b8:	str	x10, [x19, #5944]
    51bc:	ldr	w9, [x19, #5940]
    51c0:	ldr	x11, [x19, #24]
    51c4:	ldr	w13, [x19, #80]
    51c8:	mov	w12, #0xffff                	// #65535
    51cc:	add	w9, w9, #0x2a
    51d0:	asr	w9, w9, #3
    51d4:	ldr	x8, [x19, #152]
    51d8:	sub	x9, x11, x9
    51dc:	cmp	x9, x12
    51e0:	csel	w9, w9, w12, cc  // cc = lo, ul, last
    51e4:	cmp	w13, w9
    51e8:	csel	w11, w13, w9, cc  // cc = lo, ul, last
    51ec:	sub	w10, w10, w8
    51f0:	cmp	w10, w11
    51f4:	b.cs	5230 <deflateBound@@ZLIB_1.2.0+0x5f0>  // b.hs, b.nlast
    51f8:	cmp	w20, #0x4
    51fc:	cset	w11, eq  // eq = none
    5200:	cmp	w10, #0x0
    5204:	mov	w0, wzr
    5208:	cset	w12, ne  // ne = any
    520c:	cbz	w20, 529c <deflateBound@@ZLIB_1.2.0+0x65c>
    5210:	orr	w11, w11, w12
    5214:	cbz	w11, 529c <deflateBound@@ZLIB_1.2.0+0x65c>
    5218:	cmp	w10, w9
    521c:	mov	w0, wzr
    5220:	b.hi	529c <deflateBound@@ZLIB_1.2.0+0x65c>  // b.pmore
    5224:	ldr	x11, [x19]
    5228:	ldr	w11, [x11, #8]
    522c:	cbnz	w11, 529c <deflateBound@@ZLIB_1.2.0+0x65c>
    5230:	cmp	w10, w9
    5234:	csel	w21, w9, w10, hi  // hi = pmore
    5238:	cmp	w20, #0x4
    523c:	b.ne	5260 <deflateBound@@ZLIB_1.2.0+0x620>  // b.any
    5240:	ldr	x11, [x19]
    5244:	ldr	w11, [x11, #8]
    5248:	cmp	w11, #0x0
    524c:	cset	w11, eq  // eq = none
    5250:	cmp	w10, w9
    5254:	cset	w9, ls  // ls = plast
    5258:	and	w20, w9, w11
    525c:	b	5264 <deflateBound@@ZLIB_1.2.0+0x624>
    5260:	mov	w20, wzr
    5264:	ldr	x9, [x19, #96]
    5268:	mov	w2, w21
    526c:	mov	x0, x19
    5270:	mov	w3, w20
    5274:	add	x1, x9, x8
    5278:	bl	9c0c <inflateCodesUsed@@ZLIB_1.2.9+0x4e4>
    527c:	ldr	x8, [x19, #152]
    5280:	ldr	x0, [x19]
    5284:	add	x8, x8, w21, uxtw
    5288:	str	x8, [x19, #152]
    528c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5290:	cmp	w20, #0x0
    5294:	mov	w8, #0x2                   	// #2
    5298:	csel	w0, w8, wzr, ne  // ne = any
    529c:	ldp	x20, x19, [sp, #64]
    52a0:	ldp	x22, x21, [sp, #48]
    52a4:	ldp	x24, x23, [sp, #32]
    52a8:	ldp	x26, x25, [sp, #16]
    52ac:	ldp	x29, x30, [sp], #80
    52b0:	ret

00000000000052b4 <deflateCopy@@Base>:
    52b4:	stp	x29, x30, [sp, #-48]!
    52b8:	stp	x22, x21, [sp, #16]
    52bc:	mov	x21, x0
    52c0:	mov	x0, x1
    52c4:	stp	x20, x19, [sp, #32]
    52c8:	mov	x29, sp
    52cc:	mov	x19, x1
    52d0:	bl	357c <deflateSetDictionary@@Base+0x1bc>
    52d4:	mov	w8, w0
    52d8:	mov	w0, #0xfffffffe            	// #-2
    52dc:	cbz	x21, 5454 <deflateCopy@@Base+0x1a0>
    52e0:	cbnz	w8, 5454 <deflateCopy@@Base+0x1a0>
    52e4:	ldr	x20, [x19, #56]
    52e8:	mov	w2, #0x70                  	// #112
    52ec:	mov	x0, x21
    52f0:	mov	x1, x19
    52f4:	bl	2390 <memcpy@plt>
    52f8:	ldr	x8, [x21, #64]
    52fc:	ldr	x0, [x21, #80]
    5300:	mov	w1, #0x1                   	// #1
    5304:	mov	w2, #0x1740                	// #5952
    5308:	blr	x8
    530c:	cbz	x0, 5450 <deflateCopy@@Base+0x19c>
    5310:	mov	w2, #0x1740                	// #5952
    5314:	mov	x1, x20
    5318:	mov	x19, x0
    531c:	str	x0, [x21, #56]
    5320:	bl	2390 <memcpy@plt>
    5324:	str	x21, [x19]
    5328:	ldr	x8, [x21, #64]
    532c:	ldr	x0, [x21, #80]
    5330:	ldr	w1, [x19, #80]
    5334:	mov	w2, #0x2                   	// #2
    5338:	blr	x8
    533c:	str	x0, [x19, #96]
    5340:	ldr	x8, [x21, #64]
    5344:	ldr	x0, [x21, #80]
    5348:	ldr	w1, [x19, #80]
    534c:	mov	w2, #0x2                   	// #2
    5350:	blr	x8
    5354:	str	x0, [x19, #112]
    5358:	ldr	x8, [x21, #64]
    535c:	ldr	x0, [x21, #80]
    5360:	ldr	w1, [x19, #132]
    5364:	mov	w2, #0x2                   	// #2
    5368:	blr	x8
    536c:	str	x0, [x19, #120]
    5370:	ldr	x8, [x21, #64]
    5374:	ldr	x0, [x21, #80]
    5378:	ldr	w1, [x19, #5896]
    537c:	mov	w2, #0x4                   	// #4
    5380:	blr	x8
    5384:	ldr	x8, [x19, #96]
    5388:	str	x0, [x19, #16]
    538c:	cbz	x8, 5448 <deflateCopy@@Base+0x194>
    5390:	ldr	x9, [x19, #112]
    5394:	cbz	x9, 5448 <deflateCopy@@Base+0x194>
    5398:	mov	x22, x0
    539c:	cbz	x0, 5448 <deflateCopy@@Base+0x194>
    53a0:	ldr	x9, [x19, #120]
    53a4:	cbz	x9, 5448 <deflateCopy@@Base+0x194>
    53a8:	ldr	w9, [x19, #80]
    53ac:	ldr	x1, [x20, #96]
    53b0:	mov	x0, x8
    53b4:	lsl	w2, w9, #1
    53b8:	bl	2390 <memcpy@plt>
    53bc:	ldr	w8, [x19, #80]
    53c0:	ldr	x0, [x19, #112]
    53c4:	ldr	x1, [x20, #112]
    53c8:	lsl	x2, x8, #1
    53cc:	bl	2390 <memcpy@plt>
    53d0:	ldr	w8, [x19, #132]
    53d4:	ldr	x0, [x19, #120]
    53d8:	ldr	x1, [x20, #120]
    53dc:	lsl	x2, x8, #1
    53e0:	bl	2390 <memcpy@plt>
    53e4:	ldr	x0, [x19, #16]
    53e8:	ldr	x1, [x20, #16]
    53ec:	ldr	w2, [x19, #24]
    53f0:	bl	2390 <memcpy@plt>
    53f4:	add	x11, x19, #0xd4
    53f8:	ldr	x8, [x20, #32]
    53fc:	ldr	x9, [x20, #16]
    5400:	str	x11, [x19, #2904]
    5404:	add	x11, x19, #0x9c8
    5408:	ldr	w10, [x19, #5896]
    540c:	str	x11, [x19, #2928]
    5410:	ldr	x11, [x19, #16]
    5414:	sub	x8, x8, x9
    5418:	and	x9, x10, #0xfffffffe
    541c:	add	x10, x10, x10, lsl #1
    5420:	add	x8, x11, x8
    5424:	mov	w0, wzr
    5428:	add	x9, x22, x9
    542c:	add	x10, x11, x10
    5430:	str	x8, [x19, #32]
    5434:	add	x8, x19, #0xabc
    5438:	str	x9, [x19, #5904]
    543c:	str	x10, [x19, #5888]
    5440:	str	x8, [x19, #2952]
    5444:	b	5454 <deflateCopy@@Base+0x1a0>
    5448:	mov	x0, x21
    544c:	bl	2570 <deflateEnd@plt>
    5450:	mov	w0, #0xfffffffc            	// #-4
    5454:	ldp	x20, x19, [sp, #32]
    5458:	ldp	x22, x21, [sp, #16]
    545c:	ldp	x29, x30, [sp], #48
    5460:	ret
    5464:	stp	x29, x30, [sp, #-48]!
    5468:	stp	x22, x21, [sp, #16]
    546c:	adrp	x21, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    5470:	adrp	x22, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    5474:	stp	x20, x19, [sp, #32]
    5478:	mov	w20, w1
    547c:	mov	x19, x0
    5480:	add	x21, x21, #0xd88
    5484:	add	x22, x22, #0xb88
    5488:	mov	x29, sp
    548c:	ldr	w8, [x19, #180]
    5490:	cmp	w8, #0x105
    5494:	b.hi	54bc <deflateCopy@@Base+0x208>  // b.pmore
    5498:	mov	x0, x19
    549c:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    54a0:	ldr	w8, [x19, #180]
    54a4:	cbnz	w20, 54b0 <deflateCopy@@Base+0x1fc>
    54a8:	cmp	w8, #0x106
    54ac:	b.cc	573c <deflateCopy@@Base+0x488>  // b.lo, b.ul, b.last
    54b0:	cbz	w8, 5750 <deflateCopy@@Base+0x49c>
    54b4:	cmp	w8, #0x3
    54b8:	b.cc	5514 <deflateCopy@@Base+0x260>  // b.lo, b.ul, b.last
    54bc:	ldr	w8, [x19, #172]
    54c0:	ldr	x10, [x19, #96]
    54c4:	ldr	w9, [x19, #128]
    54c8:	ldp	w12, w11, [x19, #140]
    54cc:	add	w13, w8, #0x2
    54d0:	ldrb	w10, [x10, w13, uxtw]
    54d4:	lsl	w9, w9, w11
    54d8:	ldp	x13, x11, [x19, #112]
    54dc:	eor	w9, w9, w10
    54e0:	and	x9, x9, x12
    54e4:	ldr	w10, [x19, #88]
    54e8:	str	w9, [x19, #128]
    54ec:	ldrh	w1, [x11, x9, lsl #1]
    54f0:	and	x10, x10, x8
    54f4:	strh	w1, [x13, x10, lsl #1]
    54f8:	strh	w8, [x11, x9, lsl #1]
    54fc:	cbz	w1, 5514 <deflateCopy@@Base+0x260>
    5500:	ldr	w9, [x19, #80]
    5504:	sub	w8, w8, w1
    5508:	sub	w9, w9, #0x106
    550c:	cmp	w8, w9
    5510:	b.ls	551c <deflateCopy@@Base+0x268>  // b.plast
    5514:	ldr	w0, [x19, #160]
    5518:	b	5528 <deflateCopy@@Base+0x274>
    551c:	mov	x0, x19
    5520:	bl	5cd8 <deflateCopy@@Base+0xa24>
    5524:	str	w0, [x19, #160]
    5528:	subs	w8, w0, #0x3
    552c:	b.cc	564c <deflateCopy@@Base+0x398>  // b.lo, b.ul, b.last
    5530:	ldp	w9, w10, [x19, #172]
    5534:	ldr	x11, [x19, #5904]
    5538:	ldr	w12, [x19, #5900]
    553c:	and	x13, x8, #0xff
    5540:	ldrb	w13, [x21, x13]
    5544:	sub	w9, w9, w10
    5548:	mov	w10, #0x400                 	// #1024
    554c:	strh	w9, [x11, x12, lsl #1]
    5550:	add	w11, w12, #0x1
    5554:	sub	w9, w9, #0x1
    5558:	str	w11, [x19, #5900]
    555c:	bfi	x10, x13, #2, #8
    5560:	ldr	x11, [x19, #5888]
    5564:	and	w13, w9, #0xffff
    5568:	cmp	w13, #0x100
    556c:	ubfx	w13, w9, #7, #9
    5570:	add	w13, w13, #0x100
    5574:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    5578:	add	x10, x10, x19
    557c:	and	x9, x9, #0xffff
    5580:	strb	w8, [x11, x12]
    5584:	ldrb	w8, [x22, x9]
    5588:	ldrh	w9, [x10, #216]
    558c:	add	x8, x19, x8, lsl #2
    5590:	add	w9, w9, #0x1
    5594:	strh	w9, [x10, #216]
    5598:	ldrh	w9, [x8, #2504]
    559c:	add	w9, w9, #0x1
    55a0:	strh	w9, [x8, #2504]
    55a4:	ldr	w8, [x19, #5896]
    55a8:	ldr	w9, [x19, #160]
    55ac:	ldr	w10, [x19, #180]
    55b0:	ldr	w11, [x19, #5900]
    55b4:	sub	w8, w8, #0x1
    55b8:	sub	w10, w10, w9
    55bc:	cmp	w11, w8
    55c0:	cset	w8, eq  // eq = none
    55c4:	cmp	w10, #0x3
    55c8:	str	w10, [x19, #180]
    55cc:	b.cc	56b8 <deflateCopy@@Base+0x404>  // b.lo, b.ul, b.last
    55d0:	ldr	w10, [x19, #192]
    55d4:	cmp	w9, w10
    55d8:	b.hi	56b8 <deflateCopy@@Base+0x404>  // b.pmore
    55dc:	ldr	w18, [x19, #172]
    55e0:	ldr	x10, [x19, #96]
    55e4:	ldp	w12, w11, [x19, #140]
    55e8:	ldp	x14, x13, [x19, #112]
    55ec:	ldr	w15, [x19, #88]
    55f0:	ldr	w17, [x19, #128]
    55f4:	sub	w16, w9, #0x1
    55f8:	str	w16, [x19, #160]
    55fc:	sub	w16, w9, #0x2
    5600:	add	w9, w18, #0x1
    5604:	str	w9, [x19, #172]
    5608:	add	w18, w9, #0x2
    560c:	ldrb	w18, [x10, w18, uxtw]
    5610:	lsl	w17, w17, w11
    5614:	mov	w0, w9
    5618:	and	x0, x15, x0
    561c:	eor	w17, w17, w18
    5620:	and	x17, x17, x12
    5624:	str	w17, [x19, #128]
    5628:	ldrh	w18, [x13, x17, lsl #1]
    562c:	strh	w18, [x14, x0, lsl #1]
    5630:	strh	w9, [x13, x17, lsl #1]
    5634:	str	w16, [x19, #160]
    5638:	sub	w16, w16, #0x1
    563c:	cmn	w16, #0x1
    5640:	add	w9, w9, #0x1
    5644:	b.ne	5604 <deflateCopy@@Base+0x350>  // b.any
    5648:	b	56ac <deflateCopy@@Base+0x3f8>
    564c:	ldr	x8, [x19, #96]
    5650:	ldr	w9, [x19, #172]
    5654:	ldr	x10, [x19, #5904]
    5658:	ldr	w11, [x19, #5900]
    565c:	ldrb	w8, [x8, x9]
    5660:	strh	wzr, [x10, x11, lsl #1]
    5664:	ldr	x9, [x19, #5888]
    5668:	add	w10, w11, #0x1
    566c:	str	w10, [x19, #5900]
    5670:	add	x10, x19, x8, lsl #2
    5674:	strb	w8, [x9, x11]
    5678:	ldrh	w8, [x10, #212]
    567c:	add	w8, w8, #0x1
    5680:	strh	w8, [x10, #212]
    5684:	ldr	w8, [x19, #5896]
    5688:	ldr	w11, [x19, #5900]
    568c:	ldr	w9, [x19, #180]
    5690:	ldr	w10, [x19, #172]
    5694:	sub	w8, w8, #0x1
    5698:	cmp	w11, w8
    569c:	sub	w12, w9, #0x1
    56a0:	add	w9, w10, #0x1
    56a4:	cset	w8, eq  // eq = none
    56a8:	str	w12, [x19, #180]
    56ac:	str	w9, [x19, #172]
    56b0:	cbz	w8, 548c <deflateCopy@@Base+0x1d8>
    56b4:	b	56f4 <deflateCopy@@Base+0x440>
    56b8:	ldr	w10, [x19, #172]
    56bc:	ldr	x11, [x19, #96]
    56c0:	str	wzr, [x19, #160]
    56c4:	add	w9, w10, w9
    56c8:	str	w9, [x19, #172]
    56cc:	ldrb	w10, [x11, w9, uxtw]
    56d0:	add	w12, w9, #0x1
    56d4:	str	w10, [x19, #128]
    56d8:	ldrb	w11, [x11, w12, uxtw]
    56dc:	ldp	w12, w13, [x19, #140]
    56e0:	lsl	w10, w10, w13
    56e4:	eor	w10, w10, w11
    56e8:	and	w10, w10, w12
    56ec:	str	w10, [x19, #128]
    56f0:	cbz	w8, 548c <deflateCopy@@Base+0x1d8>
    56f4:	ldr	x8, [x19, #152]
    56f8:	tbnz	x8, #63, 5708 <deflateCopy@@Base+0x454>
    56fc:	ldr	x10, [x19, #96]
    5700:	add	x1, x10, w8, uxtw
    5704:	b	570c <deflateCopy@@Base+0x458>
    5708:	mov	x1, xzr
    570c:	mov	w9, w9
    5710:	sub	x2, x9, x8
    5714:	mov	x0, x19
    5718:	mov	w3, wzr
    571c:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    5720:	ldr	w8, [x19, #172]
    5724:	ldr	x0, [x19]
    5728:	str	x8, [x19, #152]
    572c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5730:	ldr	x8, [x19]
    5734:	ldr	w8, [x8, #32]
    5738:	cbnz	w8, 548c <deflateCopy@@Base+0x1d8>
    573c:	mov	w0, wzr
    5740:	ldp	x20, x19, [sp, #32]
    5744:	ldp	x22, x21, [sp, #16]
    5748:	ldp	x29, x30, [sp], #48
    574c:	ret
    5750:	ldr	w8, [x19, #172]
    5754:	mov	w9, #0x2                   	// #2
    5758:	cmp	w8, #0x2
    575c:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    5760:	cmp	w20, #0x4
    5764:	str	w9, [x19, #5932]
    5768:	b.ne	5780 <deflateCopy@@Base+0x4cc>  // b.any
    576c:	ldr	x9, [x19, #152]
    5770:	tbnz	x9, #63, 579c <deflateCopy@@Base+0x4e8>
    5774:	ldr	x10, [x19, #96]
    5778:	add	x1, x10, w9, uxtw
    577c:	b	57a0 <deflateCopy@@Base+0x4ec>
    5780:	ldr	w9, [x19, #5900]
    5784:	cbz	w9, 5808 <deflateCopy@@Base+0x554>
    5788:	ldr	x9, [x19, #152]
    578c:	tbnz	x9, #63, 57d8 <deflateCopy@@Base+0x524>
    5790:	ldr	x10, [x19, #96]
    5794:	add	x1, x10, w9, uxtw
    5798:	b	57dc <deflateCopy@@Base+0x528>
    579c:	mov	x1, xzr
    57a0:	sub	x2, x8, x9
    57a4:	mov	w3, #0x1                   	// #1
    57a8:	mov	x0, x19
    57ac:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    57b0:	ldr	w8, [x19, #172]
    57b4:	ldr	x0, [x19]
    57b8:	str	x8, [x19, #152]
    57bc:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    57c0:	ldr	x8, [x19]
    57c4:	ldr	w8, [x8, #32]
    57c8:	cmp	w8, #0x0
    57cc:	mov	w8, #0x2                   	// #2
    57d0:	cinc	w0, w8, ne  // ne = any
    57d4:	b	5740 <deflateCopy@@Base+0x48c>
    57d8:	mov	x1, xzr
    57dc:	sub	x2, x8, x9
    57e0:	mov	x0, x19
    57e4:	mov	w3, wzr
    57e8:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    57ec:	ldr	w8, [x19, #172]
    57f0:	ldr	x0, [x19]
    57f4:	str	x8, [x19, #152]
    57f8:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    57fc:	ldr	x8, [x19]
    5800:	ldr	w8, [x8, #32]
    5804:	cbz	w8, 573c <deflateCopy@@Base+0x488>
    5808:	mov	w0, #0x1                   	// #1
    580c:	b	5740 <deflateCopy@@Base+0x48c>
    5810:	stp	x29, x30, [sp, #-64]!
    5814:	stp	x24, x23, [sp, #16]
    5818:	stp	x22, x21, [sp, #32]
    581c:	adrp	x22, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    5820:	adrp	x23, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    5824:	stp	x20, x19, [sp, #48]
    5828:	mov	w20, w1
    582c:	mov	x19, x0
    5830:	mov	w21, #0x1                   	// #1
    5834:	add	x22, x22, #0xd88
    5838:	add	x23, x23, #0xb88
    583c:	mov	w24, #0x2                   	// #2
    5840:	mov	x29, sp
    5844:	ldr	w8, [x19, #180]
    5848:	cmp	w8, #0x105
    584c:	b.hi	5874 <deflateCopy@@Base+0x5c0>  // b.pmore
    5850:	mov	x0, x19
    5854:	bl	35f8 <deflateSetDictionary@@Base+0x238>
    5858:	ldr	w8, [x19, #180]
    585c:	cbnz	w20, 5868 <deflateCopy@@Base+0x5b4>
    5860:	cmp	w8, #0x106
    5864:	b.cc	5cc0 <deflateCopy@@Base+0xa0c>  // b.lo, b.ul, b.last
    5868:	cbz	w8, 5bb8 <deflateCopy@@Base+0x904>
    586c:	cmp	w8, #0x2
    5870:	b.ls	58fc <deflateCopy@@Base+0x648>  // b.plast
    5874:	ldr	w9, [x19, #172]
    5878:	ldr	x10, [x19, #96]
    587c:	ldr	w8, [x19, #128]
    5880:	ldp	w12, w11, [x19, #140]
    5884:	add	w13, w9, #0x2
    5888:	ldrb	w10, [x10, w13, uxtw]
    588c:	mov	w0, #0x2                   	// #2
    5890:	lsl	w8, w8, w11
    5894:	ldp	x13, x11, [x19, #112]
    5898:	eor	w8, w8, w10
    589c:	and	x8, x8, x12
    58a0:	ldr	w10, [x19, #88]
    58a4:	str	w8, [x19, #128]
    58a8:	ldrh	w1, [x11, x8, lsl #1]
    58ac:	and	x10, x10, x9
    58b0:	strh	w1, [x13, x10, lsl #1]
    58b4:	strh	w9, [x11, x8, lsl #1]
    58b8:	ldr	w8, [x19, #160]
    58bc:	ldr	w9, [x19, #176]
    58c0:	str	w8, [x19, #184]
    58c4:	stp	w0, w9, [x19, #160]
    58c8:	cbz	w1, 5910 <deflateCopy@@Base+0x65c>
    58cc:	ldr	w9, [x19, #192]
    58d0:	cmp	w8, w9
    58d4:	b.cs	58f0 <deflateCopy@@Base+0x63c>  // b.hs, b.nlast
    58d8:	ldr	w8, [x19, #172]
    58dc:	ldr	w9, [x19, #80]
    58e0:	sub	w8, w8, w1
    58e4:	sub	w9, w9, #0x106
    58e8:	cmp	w8, w9
    58ec:	b.ls	5ae4 <deflateCopy@@Base+0x830>  // b.plast
    58f0:	mov	w0, #0x2                   	// #2
    58f4:	ldr	w8, [x19, #184]
    58f8:	b	5910 <deflateCopy@@Base+0x65c>
    58fc:	ldr	w8, [x19, #160]
    5900:	ldr	w9, [x19, #176]
    5904:	mov	w0, #0x2                   	// #2
    5908:	str	w8, [x19, #184]
    590c:	stp	w0, w9, [x19, #160]
    5910:	subs	w9, w8, #0x3
    5914:	b.cc	5a5c <deflateCopy@@Base+0x7a8>  // b.lo, b.ul, b.last
    5918:	cmp	w0, w8
    591c:	b.hi	5a5c <deflateCopy@@Base+0x7a8>  // b.pmore
    5920:	ldr	w11, [x19, #164]
    5924:	ldr	w8, [x19, #172]
    5928:	ldr	x12, [x19, #5904]
    592c:	ldr	w13, [x19, #5900]
    5930:	mvn	w11, w11
    5934:	add	w11, w11, w8
    5938:	ldr	w10, [x19, #180]
    593c:	strh	w11, [x12, x13, lsl #1]
    5940:	and	x14, x9, #0xff
    5944:	ldr	x12, [x19, #5888]
    5948:	ldrb	w14, [x22, x14]
    594c:	add	w15, w13, #0x1
    5950:	sub	w11, w11, #0x1
    5954:	str	w15, [x19, #5900]
    5958:	strb	w9, [x12, x13]
    595c:	mov	w9, #0x400                 	// #1024
    5960:	and	w12, w11, #0xffff
    5964:	ubfx	w13, w11, #7, #9
    5968:	bfi	x9, x14, #2, #8
    596c:	add	w13, w13, #0x100
    5970:	cmp	w12, #0x100
    5974:	add	x9, x9, x19
    5978:	csel	w11, w11, w13, cc  // cc = lo, ul, last
    597c:	and	x11, x11, #0xffff
    5980:	ldrh	w12, [x9, #216]
    5984:	ldrb	w11, [x23, x11]
    5988:	add	w8, w8, w10
    598c:	add	w12, w12, #0x1
    5990:	add	x11, x19, x11, lsl #2
    5994:	strh	w12, [x9, #216]
    5998:	ldrh	w12, [x11, #2504]
    599c:	sub	w9, w8, #0x3
    59a0:	add	w8, w12, #0x1
    59a4:	strh	w8, [x11, #2504]
    59a8:	ldp	w12, w8, [x19, #180]
    59ac:	ldr	w11, [x19, #5896]
    59b0:	ldr	w10, [x19, #5900]
    59b4:	sub	w13, w8, #0x2
    59b8:	str	w13, [x19, #184]
    59bc:	ldr	w13, [x19, #172]
    59c0:	sub	w14, w12, w8
    59c4:	sub	w12, w8, #0x3
    59c8:	add	w8, w14, #0x1
    59cc:	sub	w11, w11, #0x1
    59d0:	str	w8, [x19, #180]
    59d4:	add	w8, w13, #0x1
    59d8:	cmp	w8, w9
    59dc:	str	w8, [x19, #172]
    59e0:	b.hi	5a24 <deflateCopy@@Base+0x770>  // b.pmore
    59e4:	ldr	x14, [x19, #96]
    59e8:	ldr	w13, [x19, #128]
    59ec:	add	w15, w8, #0x2
    59f0:	ldp	w17, w16, [x19, #140]
    59f4:	ldrb	w14, [x14, w15, uxtw]
    59f8:	ldp	x18, x15, [x19, #112]
    59fc:	lsl	w13, w13, w16
    5a00:	eor	w13, w13, w14
    5a04:	and	x13, x13, x17
    5a08:	ldr	w16, [x19, #88]
    5a0c:	str	w13, [x19, #128]
    5a10:	ldrh	w14, [x15, x13, lsl #1]
    5a14:	mov	w17, w8
    5a18:	and	x16, x16, x17
    5a1c:	strh	w14, [x18, x16, lsl #1]
    5a20:	strh	w8, [x15, x13, lsl #1]
    5a24:	str	w12, [x19, #184]
    5a28:	sub	w12, w12, #0x1
    5a2c:	cmn	w12, #0x1
    5a30:	add	w8, w8, #0x1
    5a34:	b.ne	59d8 <deflateCopy@@Base+0x724>  // b.any
    5a38:	cmp	w10, w11
    5a3c:	str	w24, [x19, #160]
    5a40:	stp	wzr, w8, [x19, #168]
    5a44:	b.ne	5844 <deflateCopy@@Base+0x590>  // b.any
    5a48:	ldr	x9, [x19, #152]
    5a4c:	tbnz	x9, #63, 5b28 <deflateCopy@@Base+0x874>
    5a50:	ldr	x10, [x19, #96]
    5a54:	add	x1, x10, w9, uxtw
    5a58:	b	5b2c <deflateCopy@@Base+0x878>
    5a5c:	ldr	w8, [x19, #168]
    5a60:	cbz	w8, 5ac8 <deflateCopy@@Base+0x814>
    5a64:	ldr	w9, [x19, #172]
    5a68:	ldr	x8, [x19, #96]
    5a6c:	ldr	x10, [x19, #5904]
    5a70:	ldr	w11, [x19, #5900]
    5a74:	sub	w9, w9, #0x1
    5a78:	ldrb	w8, [x8, w9, uxtw]
    5a7c:	strh	wzr, [x10, x11, lsl #1]
    5a80:	ldr	x9, [x19, #5888]
    5a84:	add	w10, w11, #0x1
    5a88:	str	w10, [x19, #5900]
    5a8c:	strb	w8, [x9, x11]
    5a90:	add	x8, x19, x8, lsl #2
    5a94:	ldrh	w9, [x8, #212]
    5a98:	add	w9, w9, #0x1
    5a9c:	strh	w9, [x8, #212]
    5aa0:	ldr	w8, [x19, #5896]
    5aa4:	ldr	w9, [x19, #5900]
    5aa8:	sub	w8, w8, #0x1
    5aac:	cmp	w9, w8
    5ab0:	b.ne	5b88 <deflateCopy@@Base+0x8d4>  // b.any
    5ab4:	ldr	x8, [x19, #152]
    5ab8:	tbnz	x8, #63, 5b60 <deflateCopy@@Base+0x8ac>
    5abc:	ldr	x9, [x19, #96]
    5ac0:	add	x1, x9, w8, uxtw
    5ac4:	b	5b64 <deflateCopy@@Base+0x8b0>
    5ac8:	ldr	w8, [x19, #172]
    5acc:	ldr	w9, [x19, #180]
    5ad0:	add	w8, w8, #0x1
    5ad4:	sub	w9, w9, #0x1
    5ad8:	stp	w21, w8, [x19, #168]
    5adc:	str	w9, [x19, #180]
    5ae0:	b	5844 <deflateCopy@@Base+0x590>
    5ae4:	mov	x0, x19
    5ae8:	bl	5cd8 <deflateCopy@@Base+0xa24>
    5aec:	cmp	w0, #0x5
    5af0:	str	w0, [x19, #160]
    5af4:	b.hi	58f4 <deflateCopy@@Base+0x640>  // b.pmore
    5af8:	ldr	w8, [x19, #200]
    5afc:	cmp	w8, #0x1
    5b00:	b.eq	5b1c <deflateCopy@@Base+0x868>  // b.none
    5b04:	cmp	w0, #0x3
    5b08:	b.ne	58f4 <deflateCopy@@Base+0x640>  // b.any
    5b0c:	ldp	w8, w9, [x19, #172]
    5b10:	sub	w8, w8, w9
    5b14:	cmp	w8, #0x1, lsl #12
    5b18:	b.ls	5bb0 <deflateCopy@@Base+0x8fc>  // b.plast
    5b1c:	mov	w0, #0x2                   	// #2
    5b20:	str	w0, [x19, #160]
    5b24:	b	58f4 <deflateCopy@@Base+0x640>
    5b28:	mov	x1, xzr
    5b2c:	mov	w8, w8
    5b30:	sub	x2, x8, x9
    5b34:	mov	x0, x19
    5b38:	mov	w3, wzr
    5b3c:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    5b40:	ldr	w8, [x19, #172]
    5b44:	ldr	x0, [x19]
    5b48:	str	x8, [x19, #152]
    5b4c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5b50:	ldr	x8, [x19]
    5b54:	ldr	w8, [x8, #32]
    5b58:	cbnz	w8, 5844 <deflateCopy@@Base+0x590>
    5b5c:	b	5cc0 <deflateCopy@@Base+0xa0c>
    5b60:	mov	x1, xzr
    5b64:	ldr	w9, [x19, #172]
    5b68:	mov	x0, x19
    5b6c:	mov	w3, wzr
    5b70:	sub	x2, x9, x8
    5b74:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    5b78:	ldr	w8, [x19, #172]
    5b7c:	ldr	x0, [x19]
    5b80:	str	x8, [x19, #152]
    5b84:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5b88:	ldr	w8, [x19, #172]
    5b8c:	ldr	w9, [x19, #180]
    5b90:	ldr	x10, [x19]
    5b94:	add	w8, w8, #0x1
    5b98:	sub	w9, w9, #0x1
    5b9c:	str	w8, [x19, #172]
    5ba0:	str	w9, [x19, #180]
    5ba4:	ldr	w8, [x10, #32]
    5ba8:	cbnz	w8, 5844 <deflateCopy@@Base+0x590>
    5bac:	b	5cc0 <deflateCopy@@Base+0xa0c>
    5bb0:	mov	w0, #0x3                   	// #3
    5bb4:	b	58f4 <deflateCopy@@Base+0x640>
    5bb8:	ldr	w8, [x19, #168]
    5bbc:	cbz	w8, 5c00 <deflateCopy@@Base+0x94c>
    5bc0:	ldr	w9, [x19, #172]
    5bc4:	ldr	x8, [x19, #96]
    5bc8:	ldr	x10, [x19, #5904]
    5bcc:	ldr	w11, [x19, #5900]
    5bd0:	sub	w9, w9, #0x1
    5bd4:	ldrb	w8, [x8, w9, uxtw]
    5bd8:	strh	wzr, [x10, x11, lsl #1]
    5bdc:	ldr	x9, [x19, #5888]
    5be0:	add	w10, w11, #0x1
    5be4:	str	w10, [x19, #5900]
    5be8:	add	x10, x19, x8, lsl #2
    5bec:	strb	w8, [x9, x11]
    5bf0:	ldrh	w8, [x10, #212]
    5bf4:	add	w8, w8, #0x1
    5bf8:	strh	w8, [x10, #212]
    5bfc:	str	wzr, [x19, #168]
    5c00:	ldr	w8, [x19, #172]
    5c04:	mov	w9, #0x2                   	// #2
    5c08:	cmp	w8, #0x2
    5c0c:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    5c10:	cmp	w20, #0x4
    5c14:	str	w9, [x19, #5932]
    5c18:	b.ne	5c30 <deflateCopy@@Base+0x97c>  // b.any
    5c1c:	ldr	x9, [x19, #152]
    5c20:	tbnz	x9, #63, 5c4c <deflateCopy@@Base+0x998>
    5c24:	ldr	x10, [x19, #96]
    5c28:	add	x1, x10, w9, uxtw
    5c2c:	b	5c50 <deflateCopy@@Base+0x99c>
    5c30:	ldr	w9, [x19, #5900]
    5c34:	cbz	w9, 5cb8 <deflateCopy@@Base+0xa04>
    5c38:	ldr	x9, [x19, #152]
    5c3c:	tbnz	x9, #63, 5c88 <deflateCopy@@Base+0x9d4>
    5c40:	ldr	x10, [x19, #96]
    5c44:	add	x1, x10, w9, uxtw
    5c48:	b	5c8c <deflateCopy@@Base+0x9d8>
    5c4c:	mov	x1, xzr
    5c50:	sub	x2, x8, x9
    5c54:	mov	w3, #0x1                   	// #1
    5c58:	mov	x0, x19
    5c5c:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    5c60:	ldr	w8, [x19, #172]
    5c64:	ldr	x0, [x19]
    5c68:	str	x8, [x19, #152]
    5c6c:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5c70:	ldr	x8, [x19]
    5c74:	ldr	w8, [x8, #32]
    5c78:	cmp	w8, #0x0
    5c7c:	mov	w8, #0x2                   	// #2
    5c80:	cinc	w0, w8, ne  // ne = any
    5c84:	b	5cc4 <deflateCopy@@Base+0xa10>
    5c88:	mov	x1, xzr
    5c8c:	sub	x2, x8, x9
    5c90:	mov	x0, x19
    5c94:	mov	w3, wzr
    5c98:	bl	9f0c <inflateCodesUsed@@ZLIB_1.2.9+0x7e4>
    5c9c:	ldr	w8, [x19, #172]
    5ca0:	ldr	x0, [x19]
    5ca4:	str	x8, [x19, #152]
    5ca8:	bl	4d60 <deflateBound@@ZLIB_1.2.0+0x120>
    5cac:	ldr	x8, [x19]
    5cb0:	ldr	w8, [x8, #32]
    5cb4:	cbz	w8, 5cc0 <deflateCopy@@Base+0xa0c>
    5cb8:	mov	w0, #0x1                   	// #1
    5cbc:	b	5cc4 <deflateCopy@@Base+0xa10>
    5cc0:	mov	w0, wzr
    5cc4:	ldp	x20, x19, [sp, #48]
    5cc8:	ldp	x22, x21, [sp, #32]
    5ccc:	ldp	x24, x23, [sp, #16]
    5cd0:	ldp	x29, x30, [sp], #64
    5cd4:	ret
    5cd8:	stp	x22, x21, [sp, #-32]!
    5cdc:	stp	x20, x19, [sp, #16]
    5ce0:	ldr	x8, [x0, #96]
    5ce4:	ldr	w15, [x0, #172]
    5ce8:	ldr	w14, [x0, #80]
    5cec:	ldp	w12, w17, [x0, #184]
    5cf0:	ldp	w2, w18, [x0, #204]
    5cf4:	sxtw	x12, w12
    5cf8:	ldr	w11, [x0, #180]
    5cfc:	add	x13, x8, x15
    5d00:	sub	w16, w14, #0x106
    5d04:	add	x5, x13, x12
    5d08:	ldr	x9, [x0, #112]
    5d0c:	ldr	w10, [x0, #88]
    5d10:	subs	w16, w15, w16
    5d14:	ldurb	w4, [x5, #-1]
    5d18:	ldrb	w5, [x5]
    5d1c:	lsr	w3, w17, #2
    5d20:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    5d24:	cmp	w12, w2
    5d28:	csel	w17, w17, w3, cc  // cc = lo, ul, last
    5d2c:	cmp	w18, w11
    5d30:	add	x14, x8, #0x5
    5d34:	add	x15, x13, #0x102
    5d38:	csel	w18, w11, w18, hi  // hi = pmore
    5d3c:	mov	w2, #0x102                 	// #258
    5d40:	mov	x3, #0x10100000000         	// #1103806595072
    5d44:	add	x6, x8, w1, uxtw
    5d48:	ldrb	w7, [x6, w12, sxtw]
    5d4c:	cmp	w7, w5, uxtb
    5d50:	b.ne	5ec4 <deflateCopy@@Base+0xc10>  // b.any
    5d54:	sxtw	x7, w12
    5d58:	add	x7, x7, x6
    5d5c:	ldurb	w7, [x7, #-1]
    5d60:	cmp	w7, w4, uxtb
    5d64:	b.ne	5ec4 <deflateCopy@@Base+0xc10>  // b.any
    5d68:	ldrb	w7, [x6]
    5d6c:	ldrb	w19, [x13]
    5d70:	cmp	w7, w19
    5d74:	b.ne	5ec4 <deflateCopy@@Base+0xc10>  // b.any
    5d78:	ldrb	w6, [x6, #1]
    5d7c:	ldrb	w7, [x13, #1]
    5d80:	cmp	w6, w7
    5d84:	b.ne	5ec4 <deflateCopy@@Base+0xc10>  // b.any
    5d88:	mov	w7, w1
    5d8c:	mov	x6, xzr
    5d90:	add	x7, x14, x7
    5d94:	add	x19, x13, x6
    5d98:	add	x20, x7, x6
    5d9c:	ldrb	w21, [x19, #3]
    5da0:	ldurb	w22, [x20, #-2]
    5da4:	cmp	w21, w22
    5da8:	b.ne	5e54 <deflateCopy@@Base+0xba0>  // b.any
    5dac:	ldrb	w19, [x19, #4]
    5db0:	ldurb	w20, [x20, #-1]
    5db4:	cmp	w19, w20
    5db8:	b.ne	5e5c <deflateCopy@@Base+0xba8>  // b.any
    5dbc:	add	x19, x13, x6
    5dc0:	ldrb	w20, [x19, #5]
    5dc4:	ldrb	w21, [x7, x6]
    5dc8:	cmp	w20, w21
    5dcc:	b.ne	5e68 <deflateCopy@@Base+0xbb4>  // b.any
    5dd0:	add	x20, x7, x6
    5dd4:	ldrb	w19, [x19, #6]
    5dd8:	ldrb	w21, [x20, #1]
    5ddc:	cmp	w19, w21
    5de0:	b.ne	5e70 <deflateCopy@@Base+0xbbc>  // b.any
    5de4:	add	x19, x13, x6
    5de8:	ldrb	w21, [x19, #7]
    5dec:	ldrb	w20, [x20, #2]
    5df0:	cmp	w21, w20
    5df4:	b.ne	5e7c <deflateCopy@@Base+0xbc8>  // b.any
    5df8:	add	x20, x7, x6
    5dfc:	ldrb	w19, [x19, #8]
    5e00:	ldrb	w21, [x20, #3]
    5e04:	cmp	w19, w21
    5e08:	b.ne	5e84 <deflateCopy@@Base+0xbd0>  // b.any
    5e0c:	add	x19, x13, x6
    5e10:	ldrb	w21, [x19, #9]
    5e14:	ldrb	w20, [x20, #4]
    5e18:	cmp	w21, w20
    5e1c:	b.ne	5e90 <deflateCopy@@Base+0xbdc>  // b.any
    5e20:	add	x20, x6, #0x2
    5e24:	cmp	x20, #0xf9
    5e28:	add	x20, x6, #0x8
    5e2c:	b.hi	5e48 <deflateCopy@@Base+0xb94>  // b.pmore
    5e30:	add	x6, x7, x6
    5e34:	ldrb	w19, [x19, #10]
    5e38:	ldrb	w6, [x6, #5]
    5e3c:	cmp	w19, w6
    5e40:	mov	x6, x20
    5e44:	b.eq	5d94 <deflateCopy@@Base+0xae0>  // b.none
    5e48:	add	x6, x13, x20
    5e4c:	add	x6, x6, #0x2
    5e50:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e54:	add	x6, x19, #0x3
    5e58:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e5c:	add	x6, x13, x6
    5e60:	add	x6, x6, #0x4
    5e64:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e68:	add	x6, x19, #0x5
    5e6c:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e70:	add	x6, x13, x6
    5e74:	add	x6, x6, #0x6
    5e78:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e7c:	add	x6, x19, #0x7
    5e80:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e84:	add	x6, x13, x6
    5e88:	add	x6, x6, #0x8
    5e8c:	b	5e94 <deflateCopy@@Base+0xbe0>
    5e90:	add	x6, x19, #0x9
    5e94:	sub	x7, x15, x6
    5e98:	sub	x6, x2, w7, sxtw
    5e9c:	cmp	w6, w12
    5ea0:	b.le	5ec4 <deflateCopy@@Base+0xc10>
    5ea4:	cmp	w6, w18
    5ea8:	str	w1, [x0, #176]
    5eac:	b.ge	5ef0 <deflateCopy@@Base+0xc3c>  // b.tcont
    5eb0:	sub	x12, x3, x7, lsl #32
    5eb4:	asr	x12, x12, #32
    5eb8:	ldrb	w4, [x13, x12]
    5ebc:	ldrb	w5, [x13, x6]
    5ec0:	mov	w12, w6
    5ec4:	and	x1, x1, x10
    5ec8:	ldrh	w1, [x9, x1, lsl #1]
    5ecc:	cmp	w16, w1
    5ed0:	b.cs	5edc <deflateCopy@@Base+0xc28>  // b.hs, b.nlast
    5ed4:	subs	w17, w17, #0x1
    5ed8:	b.ne	5d44 <deflateCopy@@Base+0xa90>  // b.any
    5edc:	ldp	x20, x19, [sp, #16]
    5ee0:	cmp	w12, w11
    5ee4:	csel	w0, w11, w12, hi  // hi = pmore
    5ee8:	ldp	x22, x21, [sp], #32
    5eec:	ret
    5ef0:	mov	w12, w6
    5ef4:	b	5edc <deflateCopy@@Base+0xc28>
    5ef8:	stp	x29, x30, [sp, #-48]!
    5efc:	stp	x22, x21, [sp, #16]
    5f00:	stp	x20, x19, [sp, #32]
    5f04:	ldr	w8, [x0, #8]
    5f08:	mov	x29, sp
    5f0c:	cmp	w8, w2
    5f10:	csel	w20, w2, w8, hi  // hi = pmore
    5f14:	cbz	w20, 5f94 <deflateCopy@@Base+0xce0>
    5f18:	mov	x22, x1
    5f1c:	ldr	x1, [x0]
    5f20:	sub	w8, w8, w20
    5f24:	mov	w21, w20
    5f28:	mov	x19, x0
    5f2c:	str	w8, [x0, #8]
    5f30:	mov	x0, x22
    5f34:	mov	x2, x21
    5f38:	bl	2390 <memcpy@plt>
    5f3c:	ldr	x8, [x19, #56]
    5f40:	ldr	w8, [x8, #48]
    5f44:	cmp	w8, #0x2
    5f48:	b.eq	5f68 <deflateCopy@@Base+0xcb4>  // b.none
    5f4c:	cmp	w8, #0x1
    5f50:	b.ne	5f7c <deflateCopy@@Base+0xcc8>  // b.any
    5f54:	ldr	x0, [x19, #96]
    5f58:	mov	x1, x22
    5f5c:	mov	w2, w20
    5f60:	bl	2540 <adler32@plt>
    5f64:	b	5f78 <deflateCopy@@Base+0xcc4>
    5f68:	ldr	x0, [x19, #96]
    5f6c:	mov	x1, x22
    5f70:	mov	w2, w20
    5f74:	bl	2420 <crc32@plt>
    5f78:	str	x0, [x19, #96]
    5f7c:	ldr	x8, [x19]
    5f80:	ldr	x9, [x19, #16]
    5f84:	add	x8, x8, x21
    5f88:	add	x9, x9, x21
    5f8c:	str	x8, [x19]
    5f90:	str	x9, [x19, #16]
    5f94:	mov	w0, w20
    5f98:	ldp	x20, x19, [sp, #32]
    5f9c:	ldp	x22, x21, [sp, #16]
    5fa0:	ldp	x29, x30, [sp], #48
    5fa4:	ret

0000000000005fa8 <inflateBackInit_@@ZLIB_1.2.0>:
    5fa8:	stp	x29, x30, [sp, #-48]!
    5fac:	stp	x22, x21, [sp, #16]
    5fb0:	stp	x20, x19, [sp, #32]
    5fb4:	mov	x29, sp
    5fb8:	cbz	x3, 6064 <inflateBackInit_@@ZLIB_1.2.0+0xbc>
    5fbc:	mov	x21, x0
    5fc0:	cmp	w4, #0x70
    5fc4:	mov	w0, #0xfffffffa            	// #-6
    5fc8:	b.ne	6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>  // b.any
    5fcc:	ldrb	w8, [x3]
    5fd0:	cmp	w8, #0x31
    5fd4:	b.ne	6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>  // b.any
    5fd8:	and	w8, w1, #0xfffffff8
    5fdc:	mov	w19, w1
    5fe0:	cmp	w8, #0x8
    5fe4:	mov	w0, #0xfffffffe            	// #-2
    5fe8:	b.ne	6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>  // b.any
    5fec:	cbz	x21, 6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>
    5ff0:	mov	x20, x2
    5ff4:	cbz	x2, 6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>
    5ff8:	ldr	x8, [x21, #64]
    5ffc:	str	xzr, [x21, #48]
    6000:	cbnz	x8, 6014 <inflateBackInit_@@ZLIB_1.2.0+0x6c>
    6004:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    6008:	add	x8, x8, #0x410
    600c:	str	x8, [x21, #64]
    6010:	str	xzr, [x21, #80]
    6014:	ldr	x9, [x21, #72]
    6018:	cbnz	x9, 6028 <inflateBackInit_@@ZLIB_1.2.0+0x80>
    601c:	adrp	x9, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    6020:	add	x9, x9, #0x418
    6024:	str	x9, [x21, #72]
    6028:	ldr	x0, [x21, #80]
    602c:	mov	w1, #0x1                   	// #1
    6030:	mov	w2, #0x1bf8                	// #7160
    6034:	mov	w22, #0x1                   	// #1
    6038:	blr	x8
    603c:	cbz	x0, 6078 <inflateBackInit_@@ZLIB_1.2.0+0xd0>
    6040:	mov	x8, x0
    6044:	mov	w0, wzr
    6048:	mov	w9, #0x8000                	// #32768
    604c:	lsl	w10, w22, w19
    6050:	str	x8, [x21, #56]
    6054:	stp	xzr, x20, [x8, #64]
    6058:	str	w9, [x8, #28]
    605c:	stp	w19, w10, [x8, #56]
    6060:	b	6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>
    6064:	mov	w0, #0xfffffffa            	// #-6
    6068:	ldp	x20, x19, [sp, #32]
    606c:	ldp	x22, x21, [sp, #16]
    6070:	ldp	x29, x30, [sp], #48
    6074:	ret
    6078:	mov	w0, #0xfffffffc            	// #-4
    607c:	b	6068 <inflateBackInit_@@ZLIB_1.2.0+0xc0>

0000000000006080 <inflateBack@@ZLIB_1.2.0>:
    6080:	sub	sp, sp, #0xd0
    6084:	stp	x29, x30, [sp, #112]
    6088:	add	x29, sp, #0x60
    608c:	str	d8, [sp, #96]
    6090:	stp	x28, x27, [sp, #128]
    6094:	stp	x26, x25, [sp, #144]
    6098:	stp	x24, x23, [sp, #160]
    609c:	stp	x22, x21, [sp, #176]
    60a0:	stp	x20, x19, [sp, #192]
    60a4:	stp	x1, x2, [x29, #-16]
    60a8:	cbz	x0, 60e8 <inflateBack@@ZLIB_1.2.0+0x68>
    60ac:	ldr	x28, [x0, #56]
    60b0:	mov	x23, x0
    60b4:	cbz	x28, 60e8 <inflateBack@@ZLIB_1.2.0+0x68>
    60b8:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    60bc:	ldr	d0, [x8, #1720]
    60c0:	str	xzr, [x23, #48]
    60c4:	str	wzr, [x28, #64]
    60c8:	mov	x21, x3
    60cc:	str	d0, [x28, #8]
    60d0:	ldr	x8, [x23]
    60d4:	stur	x4, [x29, #-32]
    60d8:	str	x8, [x29, #8]
    60dc:	cbz	x8, 60f0 <inflateBack@@ZLIB_1.2.0+0x70>
    60e0:	ldr	w20, [x23, #8]
    60e4:	b	60f4 <inflateBack@@ZLIB_1.2.0+0x74>
    60e8:	mov	w0, #0xfffffffe            	// #-2
    60ec:	b	6e54 <inflateBack@@ZLIB_1.2.0+0xdd4>
    60f0:	mov	w20, wzr
    60f4:	add	x8, x28, #0x558
    60f8:	str	x8, [sp, #48]
    60fc:	add	x8, x28, #0x78
    6100:	str	x8, [sp, #40]
    6104:	add	x8, x28, #0x98
    6108:	str	x8, [sp, #32]
    610c:	add	x8, x28, #0x7c
    6110:	str	x8, [sp, #24]
    6114:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6118:	ldr	x27, [x28, #72]
    611c:	ldr	w26, [x28, #60]
    6120:	ldr	d8, [x8, #1728]
    6124:	mov	x25, xzr
    6128:	mov	w22, wzr
    612c:	add	x19, x28, #0x90
    6130:	add	x5, x28, #0x318
    6134:	mov	w8, #0x3f3f                	// #16191
    6138:	stur	x19, [x29, #-24]
    613c:	mov	w9, #0xffffc0c1            	// #-16191
    6140:	add	w9, w8, w9
    6144:	cmp	w9, #0x9
    6148:	b.hi	6e14 <inflateBack@@ZLIB_1.2.0+0xd94>  // b.pmore
    614c:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6150:	add	x11, x11, #0x6c8
    6154:	adr	x8, 6168 <inflateBack@@ZLIB_1.2.0+0xe8>
    6158:	ldrh	w10, [x11, x9, lsl #1]
    615c:	add	x8, x8, x10, lsl #2
    6160:	mov	x24, x5
    6164:	br	x8
    6168:	ldr	w8, [x28, #12]
    616c:	cbz	w8, 6470 <inflateBack@@ZLIB_1.2.0+0x3f0>
    6170:	and	w8, w22, #0x7
    6174:	and	w22, w22, #0xfffffff8
    6178:	lsr	x25, x25, x8
    617c:	mov	w8, #0x3f50                	// #16208
    6180:	b	6468 <inflateBack@@ZLIB_1.2.0+0x3e8>
    6184:	and	w8, w22, #0x7
    6188:	and	w22, w22, #0xfffffff8
    618c:	cmp	w22, #0x1f
    6190:	lsr	x25, x25, x8
    6194:	b.hi	6258 <inflateBack@@ZLIB_1.2.0+0x1d8>  // b.pmore
    6198:	mov	w19, w22
    619c:	mov	x5, x24
    61a0:	cbnz	w20, 61bc <inflateBack@@ZLIB_1.2.0+0x13c>
    61a4:	ldp	x8, x0, [x29, #-16]
    61a8:	add	x1, x29, #0x8
    61ac:	blr	x8
    61b0:	mov	x5, x24
    61b4:	mov	w20, w0
    61b8:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    61bc:	ldr	x8, [x29, #8]
    61c0:	add	x22, x19, #0x8
    61c4:	sub	w20, w20, #0x1
    61c8:	cmp	x19, #0x18
    61cc:	add	x9, x8, #0x1
    61d0:	str	x9, [x29, #8]
    61d4:	ldrb	w8, [x8]
    61d8:	lsl	x8, x8, x19
    61dc:	add	x25, x8, x25
    61e0:	mov	x19, x22
    61e4:	b.cc	61a0 <inflateBack@@ZLIB_1.2.0+0x120>  // b.lo, b.ul, b.last
    61e8:	ldur	x19, [x29, #-24]
    61ec:	b	625c <inflateBack@@ZLIB_1.2.0+0x1dc>
    61f0:	cmp	w22, #0xd
    61f4:	b.hi	6318 <inflateBack@@ZLIB_1.2.0+0x298>  // b.pmore
    61f8:	adrp	x13, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    61fc:	mov	w19, w22
    6200:	add	x13, x13, #0x6e0
    6204:	cbnz	w20, 6224 <inflateBack@@ZLIB_1.2.0+0x1a4>
    6208:	ldp	x8, x0, [x29, #-16]
    620c:	add	x1, x29, #0x8
    6210:	blr	x8
    6214:	adrp	x13, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6218:	add	x13, x13, #0x6e0
    621c:	mov	w20, w0
    6220:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6224:	ldr	x8, [x29, #8]
    6228:	add	x22, x19, #0x8
    622c:	sub	w20, w20, #0x1
    6230:	cmp	x19, #0x6
    6234:	add	x9, x8, #0x1
    6238:	str	x9, [x29, #8]
    623c:	ldrb	w8, [x8]
    6240:	lsl	x8, x8, x19
    6244:	add	x25, x8, x25
    6248:	mov	x19, x22
    624c:	b.cc	6204 <inflateBack@@ZLIB_1.2.0+0x184>  // b.lo, b.ul, b.last
    6250:	ldur	x19, [x29, #-24]
    6254:	b	6320 <inflateBack@@ZLIB_1.2.0+0x2a0>
    6258:	mov	x5, x24
    625c:	lsr	x8, x25, #16
    6260:	eor	x8, x8, #0xffff
    6264:	cmp	x8, w25, uxth
    6268:	b.ne	6444 <inflateBack@@ZLIB_1.2.0+0x3c4>  // b.any
    626c:	ands	w19, w25, #0xffff
    6270:	str	w19, [x28, #92]
    6274:	b.eq	6300 <inflateBack@@ZLIB_1.2.0+0x280>  // b.none
    6278:	ldur	x22, [x29, #-32]
    627c:	cbnz	w20, 6294 <inflateBack@@ZLIB_1.2.0+0x214>
    6280:	ldp	x8, x0, [x29, #-16]
    6284:	add	x1, x29, #0x8
    6288:	blr	x8
    628c:	mov	w20, w0
    6290:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6294:	cbnz	w26, 62b8 <inflateBack@@ZLIB_1.2.0+0x238>
    6298:	ldr	w26, [x28, #60]
    629c:	ldr	x27, [x28, #72]
    62a0:	mov	x0, x22
    62a4:	mov	w2, w26
    62a8:	mov	x1, x27
    62ac:	str	w26, [x28, #64]
    62b0:	blr	x21
    62b4:	cbnz	w0, 6e44 <inflateBack@@ZLIB_1.2.0+0xdc4>
    62b8:	cmp	w19, w20
    62bc:	ldr	x1, [x29, #8]
    62c0:	csel	w8, w20, w19, hi  // hi = pmore
    62c4:	cmp	w8, w26
    62c8:	csel	w25, w26, w8, hi  // hi = pmore
    62cc:	mov	x0, x27
    62d0:	mov	x2, x25
    62d4:	bl	2390 <memcpy@plt>
    62d8:	ldr	x8, [x29, #8]
    62dc:	sub	w20, w20, w25
    62e0:	sub	w26, w26, w25
    62e4:	add	x27, x27, x25
    62e8:	add	x8, x8, x25
    62ec:	str	x8, [x29, #8]
    62f0:	ldr	w8, [x28, #92]
    62f4:	subs	w19, w8, w25
    62f8:	str	w19, [x28, #92]
    62fc:	b.ne	627c <inflateBack@@ZLIB_1.2.0+0x1fc>  // b.any
    6300:	mov	x25, xzr
    6304:	mov	w22, wzr
    6308:	mov	w8, #0x3f3f                	// #16191
    630c:	str	w8, [x28, #8]
    6310:	ldur	x19, [x29, #-24]
    6314:	b	6918 <inflateBack@@ZLIB_1.2.0+0x898>
    6318:	adrp	x13, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    631c:	add	x13, x13, #0x6e0
    6320:	and	w10, w25, #0x1f
    6324:	ubfx	w9, w25, #5, #5
    6328:	ubfx	w8, w25, #10, #4
    632c:	lsr	x25, x25, #14
    6330:	add	w11, w10, #0x101
    6334:	add	w12, w9, #0x1
    6338:	add	w8, w8, #0x4
    633c:	cmp	w10, #0x1d
    6340:	sub	w22, w22, #0xe
    6344:	stp	w11, w12, [x28, #132]
    6348:	str	w8, [x28, #128]
    634c:	b.hi	6458 <inflateBack@@ZLIB_1.2.0+0x3d8>  // b.pmore
    6350:	cmp	w9, #0x1e
    6354:	b.cs	6458 <inflateBack@@ZLIB_1.2.0+0x3d8>  // b.hs, b.nlast
    6358:	mov	w9, wzr
    635c:	str	wzr, [x28, #140]
    6360:	cmp	w22, #0x2
    6364:	b.hi	63b4 <inflateBack@@ZLIB_1.2.0+0x334>  // b.pmore
    6368:	cbnz	w20, 6390 <inflateBack@@ZLIB_1.2.0+0x310>
    636c:	ldp	x8, x0, [x29, #-16]
    6370:	add	x1, x29, #0x8
    6374:	blr	x8
    6378:	mov	w20, w0
    637c:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6380:	ldr	w9, [x28, #140]
    6384:	ldr	w8, [x28, #128]
    6388:	adrp	x13, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    638c:	add	x13, x13, #0x6e0
    6390:	ldr	x10, [x29, #8]
    6394:	sub	w20, w20, #0x1
    6398:	add	x11, x10, #0x1
    639c:	str	x11, [x29, #8]
    63a0:	ldrb	w10, [x10]
    63a4:	mov	w11, w22
    63a8:	add	w22, w22, #0x8
    63ac:	lsl	x10, x10, x11
    63b0:	add	x25, x10, x25
    63b4:	add	w10, w9, #0x1
    63b8:	ldrh	w9, [x13, w9, uxtw #1]
    63bc:	and	w11, w25, #0x7
    63c0:	lsr	x25, x25, #3
    63c4:	str	w10, [x28, #140]
    63c8:	add	x9, x28, x9, lsl #1
    63cc:	cmp	w10, w8
    63d0:	strh	w11, [x9, #152]
    63d4:	sub	w22, w22, #0x3
    63d8:	mov	w9, w10
    63dc:	b.cc	6360 <inflateBack@@ZLIB_1.2.0+0x2e0>  // b.lo, b.ul, b.last
    63e0:	cmp	w10, #0x12
    63e4:	b.hi	6408 <inflateBack@@ZLIB_1.2.0+0x388>  // b.pmore
    63e8:	mov	w8, w10
    63ec:	ldrh	w9, [x13, x8, lsl #1]
    63f0:	cmp	x8, #0x12
    63f4:	add	x8, x8, #0x1
    63f8:	add	x9, x28, x9, lsl #1
    63fc:	strh	wzr, [x9, #152]
    6400:	b.cc	63ec <inflateBack@@ZLIB_1.2.0+0x36c>  // b.lo, b.ul, b.last
    6404:	str	w8, [x28, #140]
    6408:	ldp	x4, x8, [sp, #40]
    640c:	ldr	x1, [sp, #32]
    6410:	mov	w2, #0x13                  	// #19
    6414:	mov	w0, wzr
    6418:	str	x8, [x28, #144]
    641c:	str	x8, [x28, #104]
    6420:	mov	w8, #0x7                   	// #7
    6424:	mov	x3, x19
    6428:	mov	x5, x24
    642c:	str	w8, [x28, #120]
    6430:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6434:	cbz	w0, 6500 <inflateBack@@ZLIB_1.2.0+0x480>
    6438:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    643c:	add	x8, x8, #0xfda
    6440:	b	6460 <inflateBack@@ZLIB_1.2.0+0x3e0>
    6444:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6448:	add	x8, x8, #0xf99
    644c:	str	x8, [x23, #48]
    6450:	mov	w8, #0x3f51                	// #16209
    6454:	b	6b48 <inflateBack@@ZLIB_1.2.0+0xac8>
    6458:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    645c:	add	x8, x8, #0xfb6
    6460:	str	x8, [x23, #48]
    6464:	mov	w8, #0x3f51                	// #16209
    6468:	str	w8, [x28, #8]
    646c:	b	6918 <inflateBack@@ZLIB_1.2.0+0x898>
    6470:	cmp	w22, #0x2
    6474:	b.hi	64b4 <inflateBack@@ZLIB_1.2.0+0x434>  // b.pmore
    6478:	cbnz	w20, 6490 <inflateBack@@ZLIB_1.2.0+0x410>
    647c:	ldp	x8, x0, [x29, #-16]
    6480:	add	x1, x29, #0x8
    6484:	blr	x8
    6488:	mov	w20, w0
    648c:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6490:	ldr	x8, [x29, #8]
    6494:	sub	w20, w20, #0x1
    6498:	add	x9, x8, #0x1
    649c:	str	x9, [x29, #8]
    64a0:	ldrb	w8, [x8]
    64a4:	mov	w9, w22
    64a8:	add	w22, w22, #0x8
    64ac:	lsl	x8, x8, x9
    64b0:	add	x25, x8, x25
    64b4:	adrp	x11, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    64b8:	and	w8, w25, #0x1
    64bc:	ubfx	w9, w25, #1, #2
    64c0:	add	x11, x11, #0x6dc
    64c4:	str	w8, [x28, #12]
    64c8:	adr	x10, 64dc <inflateBack@@ZLIB_1.2.0+0x45c>
    64cc:	ldrb	w8, [x11, x9]
    64d0:	add	x10, x10, x8, lsl #2
    64d4:	mov	w8, #0x3f41                	// #16193
    64d8:	br	x10
    64dc:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    64e0:	add	x8, x8, #0x706
    64e4:	str	x8, [x28, #104]
    64e8:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    64ec:	add	x8, x8, #0xf06
    64f0:	str	x8, [x28, #112]
    64f4:	str	d8, [x28, #120]
    64f8:	mov	w8, #0x3f48                	// #16200
    64fc:	b	6580 <inflateBack@@ZLIB_1.2.0+0x500>
    6500:	ldp	w2, w8, [x28, #132]
    6504:	str	wzr, [x28, #140]
    6508:	cmn	w8, w2
    650c:	b.ne	6590 <inflateBack@@ZLIB_1.2.0+0x510>  // b.any
    6510:	ldr	w8, [x28, #8]
    6514:	mov	w9, #0x3f51                	// #16209
    6518:	cmp	w8, w9
    651c:	b.eq	6918 <inflateBack@@ZLIB_1.2.0+0x898>  // b.none
    6520:	ldrh	w8, [x28, #664]
    6524:	mov	x5, x24
    6528:	cbz	w8, 6858 <inflateBack@@ZLIB_1.2.0+0x7d8>
    652c:	ldp	x4, x8, [sp, #40]
    6530:	ldr	x1, [sp, #32]
    6534:	mov	w0, #0x1                   	// #1
    6538:	mov	x3, x19
    653c:	str	x8, [x28, #144]
    6540:	str	x8, [x28, #104]
    6544:	mov	w8, #0x9                   	// #9
    6548:	str	w8, [x28, #120]
    654c:	str	x5, [sp, #8]
    6550:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6554:	cbz	w0, 6864 <inflateBack@@ZLIB_1.2.0+0x7e4>
    6558:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    655c:	ldr	x5, [sp, #8]
    6560:	add	x8, x8, #0x32
    6564:	b	644c <inflateBack@@ZLIB_1.2.0+0x3cc>
    6568:	mov	w8, #0x3f44                	// #16196
    656c:	b	6580 <inflateBack@@ZLIB_1.2.0+0x500>
    6570:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6574:	add	x8, x8, #0xf86
    6578:	str	x8, [x23, #48]
    657c:	mov	w8, #0x3f51                	// #16209
    6580:	str	w8, [x28, #8]
    6584:	lsr	x25, x25, #3
    6588:	sub	w22, w22, #0x3
    658c:	b	6918 <inflateBack@@ZLIB_1.2.0+0x898>
    6590:	str	x23, [sp, #16]
    6594:	stur	x21, [x29, #-40]
    6598:	ldr	w9, [x28, #120]
    659c:	ldr	x8, [x28, #104]
    65a0:	mov	w10, #0xffffffff            	// #-1
    65a4:	lsl	w10, w10, w9
    65a8:	bic	w10, w25, w10
    65ac:	add	x10, x8, w10, uxtw #2
    65b0:	ldrb	w21, [x10, #1]
    65b4:	cmp	w22, w21
    65b8:	b.cs	661c <inflateBack@@ZLIB_1.2.0+0x59c>  // b.hs, b.nlast
    65bc:	mov	w22, w22
    65c0:	cbnz	w20, 65e0 <inflateBack@@ZLIB_1.2.0+0x560>
    65c4:	ldp	x8, x0, [x29, #-16]
    65c8:	add	x1, x29, #0x8
    65cc:	blr	x8
    65d0:	mov	w20, w0
    65d4:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    65d8:	ldr	x8, [x28, #104]
    65dc:	ldr	w9, [x28, #120]
    65e0:	ldr	x10, [x29, #8]
    65e4:	sub	w20, w20, #0x1
    65e8:	add	x11, x10, #0x1
    65ec:	str	x11, [x29, #8]
    65f0:	ldrb	w10, [x10]
    65f4:	lsl	x10, x10, x22
    65f8:	add	x25, x10, x25
    65fc:	mov	w10, #0xffffffff            	// #-1
    6600:	lsl	w10, w10, w9
    6604:	bic	w10, w25, w10
    6608:	add	x10, x8, w10, uxtw #2
    660c:	ldrb	w21, [x10, #1]
    6610:	add	x22, x22, #0x8
    6614:	cmp	x22, x21
    6618:	b.cc	65c0 <inflateBack@@ZLIB_1.2.0+0x540>  // b.lo, b.ul, b.last
    661c:	add	x8, x10, #0x2
    6620:	ldrh	w8, [x8]
    6624:	cmp	w8, #0xf
    6628:	b.hi	6658 <inflateBack@@ZLIB_1.2.0+0x5d8>  // b.pmore
    662c:	ldr	w9, [x28, #140]
    6630:	lsr	x25, x25, x21
    6634:	sub	w22, w22, w21
    6638:	ldur	x21, [x29, #-40]
    663c:	add	w10, w9, #0x1
    6640:	add	x9, x28, x9, lsl #1
    6644:	str	w10, [x28, #140]
    6648:	strh	w8, [x9, #152]
    664c:	ldp	w2, w8, [x28, #132]
    6650:	add	w11, w8, w2
    6654:	b	684c <inflateBack@@ZLIB_1.2.0+0x7cc>
    6658:	cmp	w8, #0x10
    665c:	b.eq	66f0 <inflateBack@@ZLIB_1.2.0+0x670>  // b.none
    6660:	cmp	w8, #0x11
    6664:	b.ne	6790 <inflateBack@@ZLIB_1.2.0+0x710>  // b.any
    6668:	add	w19, w21, #0x3
    666c:	cmp	w22, w19
    6670:	b.cs	66d0 <inflateBack@@ZLIB_1.2.0+0x650>  // b.hs, b.nlast
    6674:	mvn	w8, w22
    6678:	add	w8, w19, w8
    667c:	add	w8, w8, #0x8
    6680:	and	w8, w8, #0xfffffff8
    6684:	mov	w23, w22
    6688:	add	w22, w8, w22
    668c:	cbnz	w20, 66a4 <inflateBack@@ZLIB_1.2.0+0x624>
    6690:	ldp	x8, x0, [x29, #-16]
    6694:	add	x1, x29, #0x8
    6698:	blr	x8
    669c:	mov	w20, w0
    66a0:	cbz	w0, 6e3c <inflateBack@@ZLIB_1.2.0+0xdbc>
    66a4:	ldr	x8, [x29, #8]
    66a8:	sub	w20, w20, #0x1
    66ac:	add	x9, x8, #0x1
    66b0:	str	x9, [x29, #8]
    66b4:	ldrb	w8, [x8]
    66b8:	lsl	x8, x8, x23
    66bc:	add	x23, x23, #0x8
    66c0:	cmp	x23, x19
    66c4:	add	x25, x8, x25
    66c8:	b.cc	668c <inflateBack@@ZLIB_1.2.0+0x60c>  // b.lo, b.ul, b.last
    66cc:	ldr	x23, [sp, #16]
    66d0:	lsr	x9, x25, x21
    66d4:	sub	w10, w22, w21
    66d8:	and	w11, w9, #0x7
    66dc:	mov	w8, wzr
    66e0:	lsr	x25, x9, #3
    66e4:	add	w9, w11, #0x3
    66e8:	sub	w22, w10, #0x3
    66ec:	b	6814 <inflateBack@@ZLIB_1.2.0+0x794>
    66f0:	add	w19, w21, #0x2
    66f4:	cmp	w22, w19
    66f8:	b.cs	6758 <inflateBack@@ZLIB_1.2.0+0x6d8>  // b.hs, b.nlast
    66fc:	mvn	w8, w22
    6700:	add	w8, w19, w8
    6704:	add	w8, w8, #0x8
    6708:	and	w8, w8, #0xfffffff8
    670c:	mov	w23, w22
    6710:	add	w22, w8, w22
    6714:	cbnz	w20, 672c <inflateBack@@ZLIB_1.2.0+0x6ac>
    6718:	ldp	x8, x0, [x29, #-16]
    671c:	add	x1, x29, #0x8
    6720:	blr	x8
    6724:	mov	w20, w0
    6728:	cbz	w0, 6e3c <inflateBack@@ZLIB_1.2.0+0xdbc>
    672c:	ldr	x8, [x29, #8]
    6730:	sub	w20, w20, #0x1
    6734:	add	x9, x8, #0x1
    6738:	str	x9, [x29, #8]
    673c:	ldrb	w8, [x8]
    6740:	lsl	x8, x8, x23
    6744:	add	x23, x23, #0x8
    6748:	cmp	x23, x19
    674c:	add	x25, x8, x25
    6750:	b.cc	6714 <inflateBack@@ZLIB_1.2.0+0x694>  // b.lo, b.ul, b.last
    6754:	ldr	x23, [sp, #16]
    6758:	ldr	w8, [x28, #140]
    675c:	ldur	x19, [x29, #-24]
    6760:	lsr	x25, x25, x21
    6764:	sub	w22, w22, w21
    6768:	cbz	w8, 6e04 <inflateBack@@ZLIB_1.2.0+0xd84>
    676c:	sub	w8, w8, #0x1
    6770:	add	x8, x28, w8, uxtw #1
    6774:	ldrh	w8, [x8, #152]
    6778:	ldur	x21, [x29, #-40]
    677c:	and	w9, w25, #0x3
    6780:	add	w9, w9, #0x3
    6784:	lsr	x25, x25, #2
    6788:	sub	w22, w22, #0x2
    678c:	b	681c <inflateBack@@ZLIB_1.2.0+0x79c>
    6790:	add	w19, w21, #0x7
    6794:	cmp	w22, w19
    6798:	b.cs	67f8 <inflateBack@@ZLIB_1.2.0+0x778>  // b.hs, b.nlast
    679c:	mvn	w8, w22
    67a0:	add	w8, w19, w8
    67a4:	add	w8, w8, #0x8
    67a8:	and	w8, w8, #0xfffffff8
    67ac:	mov	w23, w22
    67b0:	add	w22, w8, w22
    67b4:	cbnz	w20, 67cc <inflateBack@@ZLIB_1.2.0+0x74c>
    67b8:	ldp	x8, x0, [x29, #-16]
    67bc:	add	x1, x29, #0x8
    67c0:	blr	x8
    67c4:	mov	w20, w0
    67c8:	cbz	w0, 6e3c <inflateBack@@ZLIB_1.2.0+0xdbc>
    67cc:	ldr	x8, [x29, #8]
    67d0:	sub	w20, w20, #0x1
    67d4:	add	x9, x8, #0x1
    67d8:	str	x9, [x29, #8]
    67dc:	ldrb	w8, [x8]
    67e0:	lsl	x8, x8, x23
    67e4:	add	x23, x23, #0x8
    67e8:	cmp	x23, x19
    67ec:	add	x25, x8, x25
    67f0:	b.cc	67b4 <inflateBack@@ZLIB_1.2.0+0x734>  // b.lo, b.ul, b.last
    67f4:	ldr	x23, [sp, #16]
    67f8:	lsr	x9, x25, x21
    67fc:	sub	w10, w22, w21
    6800:	and	w11, w9, #0x7f
    6804:	mov	w8, wzr
    6808:	lsr	x25, x9, #7
    680c:	add	w9, w11, #0xb
    6810:	sub	w22, w10, #0x7
    6814:	ldur	x21, [x29, #-40]
    6818:	ldur	x19, [x29, #-24]
    681c:	ldp	w11, w10, [x28, #136]
    6820:	ldr	w2, [x28, #132]
    6824:	add	w12, w10, w9
    6828:	add	w11, w11, w2
    682c:	cmp	w12, w11
    6830:	b.hi	68a4 <inflateBack@@ZLIB_1.2.0+0x824>  // b.pmore
    6834:	subs	w9, w9, #0x1
    6838:	add	x12, x28, w10, uxtw #1
    683c:	add	w10, w10, #0x1
    6840:	strh	w8, [x12, #152]
    6844:	b.ne	6834 <inflateBack@@ZLIB_1.2.0+0x7b4>  // b.any
    6848:	str	w10, [x28, #140]
    684c:	cmp	w10, w11
    6850:	b.cc	6598 <inflateBack@@ZLIB_1.2.0+0x518>  // b.lo, b.ul, b.last
    6854:	b	6510 <inflateBack@@ZLIB_1.2.0+0x490>
    6858:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    685c:	add	x8, x8, #0xd
    6860:	b	644c <inflateBack@@ZLIB_1.2.0+0x3cc>
    6864:	ldr	x8, [x28, #144]
    6868:	ldp	w9, w2, [x28, #132]
    686c:	ldr	x4, [sp, #24]
    6870:	ldr	x5, [sp, #8]
    6874:	str	x8, [x28, #112]
    6878:	add	x8, x28, x9, lsl #1
    687c:	mov	w10, #0x6                   	// #6
    6880:	add	x1, x8, #0x98
    6884:	mov	w0, #0x2                   	// #2
    6888:	mov	x3, x19
    688c:	str	w10, [x28, #124]
    6890:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6894:	cbz	w0, 68ac <inflateBack@@ZLIB_1.2.0+0x82c>
    6898:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    689c:	add	x8, x8, #0x4e
    68a0:	b	6460 <inflateBack@@ZLIB_1.2.0+0x3e0>
    68a4:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    68a8:	b	6e0c <inflateBack@@ZLIB_1.2.0+0xd8c>
    68ac:	mov	w8, #0x3f48                	// #16200
    68b0:	str	w8, [x28, #8]
    68b4:	cmp	w26, #0x102
    68b8:	b.cc	6924 <inflateBack@@ZLIB_1.2.0+0x8a4>  // b.lo, b.ul, b.last
    68bc:	cmp	w20, #0x5
    68c0:	b.ls	6924 <inflateBack@@ZLIB_1.2.0+0x8a4>  // b.plast
    68c4:	str	x27, [x23, #24]
    68c8:	str	w26, [x23, #32]
    68cc:	ldr	x8, [x29, #8]
    68d0:	str	w20, [x23, #8]
    68d4:	str	x8, [x23]
    68d8:	ldp	w1, w8, [x28, #60]
    68dc:	str	x25, [x28, #80]
    68e0:	str	w22, [x28, #88]
    68e4:	cmp	w8, w1
    68e8:	b.cs	68f4 <inflateBack@@ZLIB_1.2.0+0x874>  // b.hs, b.nlast
    68ec:	sub	w8, w1, w26
    68f0:	str	w8, [x28, #64]
    68f4:	mov	x0, x23
    68f8:	bl	6ef0 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    68fc:	ldr	x8, [x23]
    6900:	ldr	x27, [x23, #24]
    6904:	ldr	w26, [x23, #32]
    6908:	str	x8, [x29, #8]
    690c:	ldr	w20, [x23, #8]
    6910:	ldr	x25, [x28, #80]
    6914:	ldr	w22, [x28, #88]
    6918:	mov	x5, x24
    691c:	ldr	w8, [x28, #8]
    6920:	b	613c <inflateBack@@ZLIB_1.2.0+0xbc>
    6924:	ldr	w9, [x28, #120]
    6928:	ldr	x8, [x28, #104]
    692c:	mov	w19, #0xffffffff            	// #-1
    6930:	stur	x21, [x29, #-40]
    6934:	lsl	w10, w19, w9
    6938:	bic	w10, w25, w10
    693c:	add	x10, x8, w10, uxtw #2
    6940:	ldrb	w21, [x10, #1]
    6944:	cmp	w22, w21
    6948:	b.cs	69a8 <inflateBack@@ZLIB_1.2.0+0x928>  // b.hs, b.nlast
    694c:	mov	w22, w22
    6950:	cbnz	w20, 6970 <inflateBack@@ZLIB_1.2.0+0x8f0>
    6954:	ldp	x8, x0, [x29, #-16]
    6958:	add	x1, x29, #0x8
    695c:	blr	x8
    6960:	mov	w20, w0
    6964:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6968:	ldr	x8, [x28, #104]
    696c:	ldr	w9, [x28, #120]
    6970:	ldr	x10, [x29, #8]
    6974:	sub	w20, w20, #0x1
    6978:	add	x11, x10, #0x1
    697c:	str	x11, [x29, #8]
    6980:	ldrb	w10, [x10]
    6984:	lsl	x10, x10, x22
    6988:	add	x25, x10, x25
    698c:	lsl	w10, w19, w9
    6990:	bic	w10, w25, w10
    6994:	add	x10, x8, w10, uxtw #2
    6998:	ldrb	w21, [x10, #1]
    699c:	add	x22, x22, #0x8
    69a0:	cmp	x22, x21
    69a4:	b.cc	6950 <inflateBack@@ZLIB_1.2.0+0x8d0>  // b.lo, b.ul, b.last
    69a8:	add	x11, x10, #0x2
    69ac:	ldrb	w9, [x10]
    69b0:	ldrh	w19, [x11]
    69b4:	cbz	w9, 6a70 <inflateBack@@ZLIB_1.2.0+0x9f0>
    69b8:	and	w10, w9, #0xf0
    69bc:	cbnz	w10, 6a70 <inflateBack@@ZLIB_1.2.0+0x9f0>
    69c0:	add	w9, w21, w9
    69c4:	mov	w10, #0xffffffff            	// #-1
    69c8:	lsl	w11, w10, w9
    69cc:	bic	w9, w25, w11
    69d0:	lsr	w9, w9, w21
    69d4:	add	w9, w9, w19
    69d8:	add	x10, x8, w9, uxtw #2
    69dc:	ldrb	w10, [x10, #1]
    69e0:	add	w12, w21, w10
    69e4:	cmp	w12, w22
    69e8:	b.ls	6a58 <inflateBack@@ZLIB_1.2.0+0x9d8>  // b.plast
    69ec:	str	x23, [sp, #16]
    69f0:	mvn	w23, w11
    69f4:	cbnz	w20, 6a10 <inflateBack@@ZLIB_1.2.0+0x990>
    69f8:	ldp	x8, x0, [x29, #-16]
    69fc:	add	x1, x29, #0x8
    6a00:	blr	x8
    6a04:	mov	w20, w0
    6a08:	cbz	w0, 6e3c <inflateBack@@ZLIB_1.2.0+0xdbc>
    6a0c:	ldr	x8, [x28, #104]
    6a10:	ldr	x9, [x29, #8]
    6a14:	sub	w20, w20, #0x1
    6a18:	add	x10, x9, #0x1
    6a1c:	str	x10, [x29, #8]
    6a20:	ldrb	w9, [x9]
    6a24:	lsl	x9, x9, x22
    6a28:	add	x25, x9, x25
    6a2c:	and	w9, w25, w23
    6a30:	lsr	w9, w9, w21
    6a34:	add	w9, w9, w19
    6a38:	add	x10, x8, w9, uxtw #2
    6a3c:	ldrb	w10, [x10, #1]
    6a40:	add	w22, w22, #0x8
    6a44:	add	w11, w21, w10
    6a48:	cmp	w11, w22
    6a4c:	b.hi	69f4 <inflateBack@@ZLIB_1.2.0+0x974>  // b.pmore
    6a50:	ldr	x23, [sp, #16]
    6a54:	mov	w9, w9
    6a58:	add	x8, x8, x9, lsl #2
    6a5c:	ldrh	w19, [x8, #2]
    6a60:	ldrb	w9, [x8]
    6a64:	lsr	x25, x25, x21
    6a68:	sub	w22, w22, w21
    6a6c:	mov	w21, w10
    6a70:	lsr	x25, x25, x21
    6a74:	sub	w22, w22, w21
    6a78:	mov	x5, x24
    6a7c:	str	w19, [x28, #92]
    6a80:	cbz	w9, 6b08 <inflateBack@@ZLIB_1.2.0+0xa88>
    6a84:	tbnz	w9, #5, 6b50 <inflateBack@@ZLIB_1.2.0+0xad0>
    6a88:	tbnz	w9, #6, 6b58 <inflateBack@@ZLIB_1.2.0+0xad8>
    6a8c:	ands	w8, w9, #0xf
    6a90:	str	w8, [x28, #100]
    6a94:	b.eq	6b78 <inflateBack@@ZLIB_1.2.0+0xaf8>  // b.none
    6a98:	cmp	w22, w8
    6a9c:	b.cs	6ae8 <inflateBack@@ZLIB_1.2.0+0xa68>  // b.hs, b.nlast
    6aa0:	cbnz	w20, 6abc <inflateBack@@ZLIB_1.2.0+0xa3c>
    6aa4:	ldp	x8, x0, [x29, #-16]
    6aa8:	add	x1, x29, #0x8
    6aac:	blr	x8
    6ab0:	mov	w20, w0
    6ab4:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6ab8:	ldr	w8, [x28, #100]
    6abc:	ldr	x9, [x29, #8]
    6ac0:	sub	w20, w20, #0x1
    6ac4:	add	x10, x9, #0x1
    6ac8:	str	x10, [x29, #8]
    6acc:	ldrb	w9, [x9]
    6ad0:	lsl	x9, x9, x22
    6ad4:	add	w22, w22, #0x8
    6ad8:	cmp	w22, w8
    6adc:	add	x25, x9, x25
    6ae0:	b.cc	6aa0 <inflateBack@@ZLIB_1.2.0+0xa20>  // b.lo, b.ul, b.last
    6ae4:	ldr	w19, [x28, #92]
    6ae8:	mov	w10, #0xffffffff            	// #-1
    6aec:	lsl	w9, w10, w8
    6af0:	bic	w9, w25, w9
    6af4:	lsr	x25, x25, x8
    6af8:	add	w9, w19, w9
    6afc:	sub	w22, w22, w8
    6b00:	str	w9, [x28, #92]
    6b04:	b	6b7c <inflateBack@@ZLIB_1.2.0+0xafc>
    6b08:	ldur	x21, [x29, #-40]
    6b0c:	cbnz	w26, 6b38 <inflateBack@@ZLIB_1.2.0+0xab8>
    6b10:	ldr	w26, [x28, #60]
    6b14:	ldr	x27, [x28, #72]
    6b18:	ldur	x0, [x29, #-32]
    6b1c:	mov	w2, w26
    6b20:	mov	x1, x27
    6b24:	str	w26, [x28, #64]
    6b28:	blr	x21
    6b2c:	cbnz	w0, 6e44 <inflateBack@@ZLIB_1.2.0+0xdc4>
    6b30:	ldr	w19, [x28, #92]
    6b34:	mov	x5, x24
    6b38:	strb	w19, [x27], #1
    6b3c:	ldur	x19, [x29, #-24]
    6b40:	mov	w8, #0x3f48                	// #16200
    6b44:	sub	w26, w26, #0x1
    6b48:	str	w8, [x28, #8]
    6b4c:	b	691c <inflateBack@@ZLIB_1.2.0+0x89c>
    6b50:	mov	w8, #0x3f3f                	// #16191
    6b54:	b	6b68 <inflateBack@@ZLIB_1.2.0+0xae8>
    6b58:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    6b5c:	add	x8, x8, #0x64
    6b60:	str	x8, [x23, #48]
    6b64:	mov	w8, #0x3f51                	// #16209
    6b68:	str	w8, [x28, #8]
    6b6c:	ldur	x21, [x29, #-40]
    6b70:	ldur	x19, [x29, #-24]
    6b74:	b	691c <inflateBack@@ZLIB_1.2.0+0x89c>
    6b78:	mov	w10, #0xffffffff            	// #-1
    6b7c:	ldr	w9, [x28, #124]
    6b80:	ldr	x8, [x28, #112]
    6b84:	lsl	w10, w10, w9
    6b88:	bic	w10, w25, w10
    6b8c:	add	x10, x8, w10, uxtw #2
    6b90:	ldrb	w19, [x10, #1]
    6b94:	cmp	w22, w19
    6b98:	b.cs	6bfc <inflateBack@@ZLIB_1.2.0+0xb7c>  // b.hs, b.nlast
    6b9c:	mov	w22, w22
    6ba0:	mov	w19, #0xffffffff            	// #-1
    6ba4:	cbnz	w20, 6bc4 <inflateBack@@ZLIB_1.2.0+0xb44>
    6ba8:	ldp	x8, x0, [x29, #-16]
    6bac:	add	x1, x29, #0x8
    6bb0:	blr	x8
    6bb4:	mov	w20, w0
    6bb8:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6bbc:	ldr	x8, [x28, #112]
    6bc0:	ldr	w9, [x28, #124]
    6bc4:	ldr	x10, [x29, #8]
    6bc8:	sub	w20, w20, #0x1
    6bcc:	add	x11, x10, #0x1
    6bd0:	str	x11, [x29, #8]
    6bd4:	ldrb	w10, [x10]
    6bd8:	lsl	x10, x10, x22
    6bdc:	add	x25, x10, x25
    6be0:	lsl	w10, w19, w9
    6be4:	bic	w10, w25, w10
    6be8:	add	x10, x8, w10, uxtw #2
    6bec:	ldrb	w19, [x10, #1]
    6bf0:	add	x22, x22, #0x8
    6bf4:	cmp	x22, x19
    6bf8:	b.cc	6ba0 <inflateBack@@ZLIB_1.2.0+0xb20>  // b.lo, b.ul, b.last
    6bfc:	add	x9, x10, #0x2
    6c00:	ldrb	w10, [x10]
    6c04:	ldrh	w21, [x9]
    6c08:	tst	w10, #0xf0
    6c0c:	b.ne	6cc0 <inflateBack@@ZLIB_1.2.0+0xc40>  // b.any
    6c10:	add	w9, w19, w10
    6c14:	mov	w10, #0xffffffff            	// #-1
    6c18:	lsl	w11, w10, w9
    6c1c:	bic	w9, w25, w11
    6c20:	lsr	w9, w9, w19
    6c24:	add	w10, w9, w21
    6c28:	add	x9, x8, w10, uxtw #2
    6c2c:	ldrb	w9, [x9, #1]
    6c30:	add	w12, w19, w9
    6c34:	cmp	w12, w22
    6c38:	b.ls	6ca8 <inflateBack@@ZLIB_1.2.0+0xc28>  // b.plast
    6c3c:	str	x23, [sp, #16]
    6c40:	mvn	w23, w11
    6c44:	cbnz	w20, 6c60 <inflateBack@@ZLIB_1.2.0+0xbe0>
    6c48:	ldp	x8, x0, [x29, #-16]
    6c4c:	add	x1, x29, #0x8
    6c50:	blr	x8
    6c54:	mov	w20, w0
    6c58:	cbz	w0, 6e3c <inflateBack@@ZLIB_1.2.0+0xdbc>
    6c5c:	ldr	x8, [x28, #112]
    6c60:	ldr	x9, [x29, #8]
    6c64:	sub	w20, w20, #0x1
    6c68:	add	x10, x9, #0x1
    6c6c:	str	x10, [x29, #8]
    6c70:	ldrb	w9, [x9]
    6c74:	lsl	x9, x9, x22
    6c78:	add	x25, x9, x25
    6c7c:	and	w9, w25, w23
    6c80:	lsr	w9, w9, w19
    6c84:	add	w10, w9, w21
    6c88:	add	x9, x8, w10, uxtw #2
    6c8c:	ldrb	w9, [x9, #1]
    6c90:	add	w22, w22, #0x8
    6c94:	add	w11, w19, w9
    6c98:	cmp	w11, w22
    6c9c:	b.hi	6c44 <inflateBack@@ZLIB_1.2.0+0xbc4>  // b.pmore
    6ca0:	ldr	x23, [sp, #16]
    6ca4:	mov	w10, w10
    6ca8:	add	x8, x8, x10, lsl #2
    6cac:	ldrh	w21, [x8, #2]
    6cb0:	ldrb	w10, [x8]
    6cb4:	lsr	x25, x25, x19
    6cb8:	sub	w22, w22, w19
    6cbc:	mov	w19, w9
    6cc0:	lsr	x25, x25, x19
    6cc4:	sub	w22, w22, w19
    6cc8:	tbnz	w10, #6, 6d74 <inflateBack@@ZLIB_1.2.0+0xcf4>
    6ccc:	ands	w8, w10, #0xf
    6cd0:	stp	w21, w8, [x28, #96]
    6cd4:	ldur	x19, [x29, #-24]
    6cd8:	b.eq	6d48 <inflateBack@@ZLIB_1.2.0+0xcc8>  // b.none
    6cdc:	cmp	w22, w8
    6ce0:	b.cs	6d2c <inflateBack@@ZLIB_1.2.0+0xcac>  // b.hs, b.nlast
    6ce4:	cbnz	w20, 6d00 <inflateBack@@ZLIB_1.2.0+0xc80>
    6ce8:	ldp	x8, x0, [x29, #-16]
    6cec:	add	x1, x29, #0x8
    6cf0:	blr	x8
    6cf4:	mov	w20, w0
    6cf8:	cbz	w0, 6e40 <inflateBack@@ZLIB_1.2.0+0xdc0>
    6cfc:	ldr	w8, [x28, #100]
    6d00:	ldr	x9, [x29, #8]
    6d04:	sub	w20, w20, #0x1
    6d08:	add	x10, x9, #0x1
    6d0c:	str	x10, [x29, #8]
    6d10:	ldrb	w9, [x9]
    6d14:	lsl	x9, x9, x22
    6d18:	add	w22, w22, #0x8
    6d1c:	cmp	w22, w8
    6d20:	add	x25, x9, x25
    6d24:	b.cc	6ce4 <inflateBack@@ZLIB_1.2.0+0xc64>  // b.lo, b.ul, b.last
    6d28:	ldr	w21, [x28, #96]
    6d2c:	mov	w9, #0xffffffff            	// #-1
    6d30:	lsl	w9, w9, w8
    6d34:	bic	w9, w25, w9
    6d38:	lsr	x25, x25, x8
    6d3c:	add	w21, w21, w9
    6d40:	sub	w22, w22, w8
    6d44:	str	w21, [x28, #96]
    6d48:	ldp	w8, w9, [x28, #60]
    6d4c:	mov	x5, x24
    6d50:	cmp	w9, w8
    6d54:	csel	w9, w26, wzr, cc  // cc = lo, ul, last
    6d58:	sub	w8, w8, w9
    6d5c:	cmp	w21, w8
    6d60:	b.ls	6d8c <inflateBack@@ZLIB_1.2.0+0xd0c>  // b.plast
    6d64:	ldur	x21, [x29, #-40]
    6d68:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    6d6c:	add	x8, x8, #0x96
    6d70:	b	644c <inflateBack@@ZLIB_1.2.0+0x3cc>
    6d74:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    6d78:	ldur	x21, [x29, #-40]
    6d7c:	add	x8, x8, #0x80
    6d80:	str	x8, [x23, #48]
    6d84:	mov	w8, #0x3f51                	// #16209
    6d88:	b	630c <inflateBack@@ZLIB_1.2.0+0x28c>
    6d8c:	ldur	x21, [x29, #-40]
    6d90:	cbnz	w26, 6db4 <inflateBack@@ZLIB_1.2.0+0xd34>
    6d94:	ldr	w26, [x28, #60]
    6d98:	ldr	x27, [x28, #72]
    6d9c:	ldur	x0, [x29, #-32]
    6da0:	mov	w2, w26
    6da4:	mov	x1, x27
    6da8:	str	w26, [x28, #64]
    6dac:	blr	x21
    6db0:	cbnz	w0, 6e44 <inflateBack@@ZLIB_1.2.0+0xdc4>
    6db4:	ldr	w8, [x28, #60]
    6db8:	ldp	w10, w9, [x28, #92]
    6dbc:	sub	w8, w8, w9
    6dc0:	cmp	w26, w8
    6dc4:	csel	w11, w8, wzr, hi  // hi = pmore
    6dc8:	csneg	x9, x8, x9, hi  // hi = pmore
    6dcc:	sub	w8, w26, w11
    6dd0:	cmp	w8, w10
    6dd4:	csel	w8, w10, w8, hi  // hi = pmore
    6dd8:	sub	w10, w10, w8
    6ddc:	str	w10, [x28, #92]
    6de0:	mov	w10, w8
    6de4:	ldrb	w11, [x27, x9]
    6de8:	subs	w10, w10, #0x1
    6dec:	strb	w11, [x27], #1
    6df0:	b.ne	6de4 <inflateBack@@ZLIB_1.2.0+0xd64>  // b.any
    6df4:	ldr	w9, [x28, #92]
    6df8:	sub	w26, w26, w8
    6dfc:	cbnz	w9, 6d90 <inflateBack@@ZLIB_1.2.0+0xd10>
    6e00:	b	6918 <inflateBack@@ZLIB_1.2.0+0x898>
    6e04:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    6e08:	ldur	x21, [x29, #-40]
    6e0c:	add	x8, x8, #0xff3
    6e10:	b	6460 <inflateBack@@ZLIB_1.2.0+0x3e0>
    6e14:	mov	w9, #0x3f50                	// #16208
    6e18:	cmp	w8, w9
    6e1c:	b.eq	6e78 <inflateBack@@ZLIB_1.2.0+0xdf8>  // b.none
    6e20:	mov	w9, #0x3f51                	// #16209
    6e24:	cmp	w8, w9
    6e28:	b.ne	6e34 <inflateBack@@ZLIB_1.2.0+0xdb4>  // b.any
    6e2c:	mov	w0, #0xfffffffd            	// #-3
    6e30:	b	6e48 <inflateBack@@ZLIB_1.2.0+0xdc8>
    6e34:	mov	w0, #0xfffffffe            	// #-2
    6e38:	b	6e48 <inflateBack@@ZLIB_1.2.0+0xdc8>
    6e3c:	ldr	x23, [sp, #16]
    6e40:	str	xzr, [x29, #8]
    6e44:	mov	w0, #0xfffffffb            	// #-5
    6e48:	ldr	x8, [x29, #8]
    6e4c:	str	w20, [x23, #8]
    6e50:	str	x8, [x23]
    6e54:	ldp	x20, x19, [sp, #192]
    6e58:	ldp	x22, x21, [sp, #176]
    6e5c:	ldp	x24, x23, [sp, #160]
    6e60:	ldp	x26, x25, [sp, #144]
    6e64:	ldp	x28, x27, [sp, #128]
    6e68:	ldp	x29, x30, [sp, #112]
    6e6c:	ldr	d8, [sp, #96]
    6e70:	add	sp, sp, #0xd0
    6e74:	ret
    6e78:	ldr	w8, [x28, #60]
    6e7c:	subs	w2, w8, w26
    6e80:	b.ls	6ea0 <inflateBack@@ZLIB_1.2.0+0xe20>  // b.plast
    6e84:	ldr	x1, [x28, #72]
    6e88:	ldur	x0, [x29, #-32]
    6e8c:	blr	x21
    6e90:	cmp	w0, #0x0
    6e94:	mov	w8, #0xfffffffb            	// #-5
    6e98:	csinc	w0, w8, wzr, ne  // ne = any
    6e9c:	b	6e48 <inflateBack@@ZLIB_1.2.0+0xdc8>
    6ea0:	mov	w0, #0x1                   	// #1
    6ea4:	b	6e48 <inflateBack@@ZLIB_1.2.0+0xdc8>

0000000000006ea8 <inflateBackEnd@@ZLIB_1.2.0>:
    6ea8:	stp	x29, x30, [sp, #-32]!
    6eac:	str	x19, [sp, #16]
    6eb0:	mov	x29, sp
    6eb4:	cbz	x0, 6ee0 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    6eb8:	ldr	x1, [x0, #56]
    6ebc:	mov	x19, x0
    6ec0:	cbz	x1, 6ee0 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    6ec4:	ldr	x8, [x19, #72]
    6ec8:	cbz	x8, 6ee0 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    6ecc:	ldr	x0, [x19, #80]
    6ed0:	blr	x8
    6ed4:	mov	w0, wzr
    6ed8:	str	xzr, [x19, #56]
    6edc:	b	6ee4 <inflateBackEnd@@ZLIB_1.2.0+0x3c>
    6ee0:	mov	w0, #0xfffffffe            	// #-2
    6ee4:	ldr	x19, [sp, #16]
    6ee8:	ldp	x29, x30, [sp], #32
    6eec:	ret
    6ef0:	stp	x28, x27, [sp, #-80]!
    6ef4:	stp	x26, x25, [sp, #16]
    6ef8:	stp	x24, x23, [sp, #32]
    6efc:	stp	x22, x21, [sp, #48]
    6f00:	stp	x20, x19, [sp, #64]
    6f04:	ldr	x8, [x0, #56]
    6f08:	ldr	w12, [x0, #32]
    6f0c:	ldr	w11, [x0, #8]
    6f10:	ldr	x9, [x0, #24]
    6f14:	ldp	w19, w20, [x8, #120]
    6f18:	ldr	x10, [x0]
    6f1c:	sub	w15, w1, w12
    6f20:	ldp	w18, w1, [x8, #60]
    6f24:	ldr	w2, [x8, #68]
    6f28:	mov	w16, #0xffffffff            	// #-1
    6f2c:	sub	w13, w11, #0x5
    6f30:	ldp	x3, x11, [x8, #72]
    6f34:	ldr	w14, [x8, #88]
    6f38:	ldp	x4, x5, [x8, #104]
    6f3c:	sub	x6, x9, x15
    6f40:	lsl	w15, w16, w19
    6f44:	adrp	x17, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    6f48:	sub	w7, w12, #0x101
    6f4c:	lsl	w20, w16, w20
    6f50:	mvn	w19, w15
    6f54:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    6f58:	add	x17, x17, #0x80
    6f5c:	add	x12, x10, x13
    6f60:	add	x13, x9, x7
    6f64:	add	w7, w2, w18
    6f68:	mvn	w20, w20
    6f6c:	add	x15, x15, #0x96
    6f70:	cmp	w14, #0xe
    6f74:	b.hi	6f9c <inflateBackEnd@@ZLIB_1.2.0+0xf4>  // b.pmore
    6f78:	ldrb	w21, [x10]
    6f7c:	ldrb	w22, [x10, #1]
    6f80:	add	w23, w14, #0x8
    6f84:	add	x10, x10, #0x2
    6f88:	lsl	x21, x21, x14
    6f8c:	lsl	x22, x22, x23
    6f90:	add	x11, x21, x11
    6f94:	add	x11, x11, x22
    6f98:	add	w14, w14, #0x10
    6f9c:	and	x21, x11, x19
    6fa0:	add	x21, x4, x21, lsl #2
    6fa4:	ldrb	w23, [x21, #1]
    6fa8:	ldrb	w22, [x21]
    6fac:	ldrh	w21, [x21, #2]
    6fb0:	lsr	x11, x11, x23
    6fb4:	sub	w14, w14, w23
    6fb8:	cbz	w22, 6fdc <inflateBackEnd@@ZLIB_1.2.0+0x134>
    6fbc:	and	w23, w22, #0xff
    6fc0:	tbnz	w22, #4, 6ff4 <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    6fc4:	tbnz	w23, #6, 72dc <inflateBackEnd@@ZLIB_1.2.0+0x434>
    6fc8:	lsl	w22, w16, w23
    6fcc:	mvn	w22, w22
    6fd0:	and	x22, x11, x22
    6fd4:	add	x21, x22, w21, uxth
    6fd8:	b	6fa0 <inflateBackEnd@@ZLIB_1.2.0+0xf8>
    6fdc:	strb	w21, [x9], #1
    6fe0:	cmp	x9, x13
    6fe4:	b.cs	7304 <inflateBackEnd@@ZLIB_1.2.0+0x45c>  // b.hs, b.nlast
    6fe8:	cmp	x10, x12
    6fec:	b.cc	6f70 <inflateBackEnd@@ZLIB_1.2.0+0xc8>  // b.lo, b.ul, b.last
    6ff0:	b	7304 <inflateBackEnd@@ZLIB_1.2.0+0x45c>
    6ff4:	ands	w22, w23, #0xf
    6ff8:	and	w21, w21, #0xffff
    6ffc:	b.eq	702c <inflateBackEnd@@ZLIB_1.2.0+0x184>  // b.none
    7000:	cmp	w14, w22
    7004:	b.cs	7018 <inflateBackEnd@@ZLIB_1.2.0+0x170>  // b.hs, b.nlast
    7008:	ldrb	w23, [x10], #1
    700c:	lsl	x23, x23, x14
    7010:	add	x11, x23, x11
    7014:	add	w14, w14, #0x8
    7018:	lsl	w23, w16, w22
    701c:	bic	w23, w11, w23
    7020:	lsr	x11, x11, x22
    7024:	add	w21, w23, w21
    7028:	sub	w14, w14, w22
    702c:	cmp	w14, #0xe
    7030:	b.hi	7058 <inflateBackEnd@@ZLIB_1.2.0+0x1b0>  // b.pmore
    7034:	ldrb	w22, [x10]
    7038:	ldrb	w23, [x10, #1]
    703c:	add	w24, w14, #0x8
    7040:	add	x10, x10, #0x2
    7044:	lsl	x22, x22, x14
    7048:	lsl	x23, x23, x24
    704c:	add	x11, x22, x11
    7050:	add	x11, x11, x23
    7054:	add	w14, w14, #0x10
    7058:	and	x22, x11, x20
    705c:	add	x22, x5, x22, lsl #2
    7060:	ldrb	w24, [x22, #1]
    7064:	ldrb	w23, [x22]
    7068:	ldrh	w22, [x22, #2]
    706c:	lsr	x11, x11, x24
    7070:	sub	w14, w14, w24
    7074:	tbnz	w23, #4, 7090 <inflateBackEnd@@ZLIB_1.2.0+0x1e8>
    7078:	tbnz	w23, #6, 72f4 <inflateBackEnd@@ZLIB_1.2.0+0x44c>
    707c:	lsl	w23, w16, w23
    7080:	mvn	w23, w23
    7084:	and	x23, x11, x23
    7088:	add	x22, x23, w22, uxth
    708c:	b	705c <inflateBackEnd@@ZLIB_1.2.0+0x1b4>
    7090:	and	w23, w23, #0xf
    7094:	cmp	w14, w23
    7098:	b.cs	70d0 <inflateBackEnd@@ZLIB_1.2.0+0x228>  // b.hs, b.nlast
    709c:	mov	x24, x10
    70a0:	ldrb	w26, [x24], #1
    70a4:	add	w25, w14, #0x8
    70a8:	cmp	w25, w23
    70ac:	lsl	x26, x26, x14
    70b0:	add	x11, x26, x11
    70b4:	b.cs	70d8 <inflateBackEnd@@ZLIB_1.2.0+0x230>  // b.hs, b.nlast
    70b8:	ldrb	w24, [x10, #1]
    70bc:	add	x10, x10, #0x2
    70c0:	lsl	x24, x24, x25
    70c4:	add	x11, x24, x11
    70c8:	add	w25, w14, #0x10
    70cc:	b	70dc <inflateBackEnd@@ZLIB_1.2.0+0x234>
    70d0:	mov	w25, w14
    70d4:	b	70dc <inflateBackEnd@@ZLIB_1.2.0+0x234>
    70d8:	mov	x10, x24
    70dc:	lsl	w14, w16, w23
    70e0:	bic	w14, w11, w14
    70e4:	add	w22, w14, w22
    70e8:	sub	w14, w9, w6
    70ec:	lsr	x11, x11, x23
    70f0:	subs	w24, w22, w14
    70f4:	sub	w14, w25, w23
    70f8:	b.ls	7174 <inflateBackEnd@@ZLIB_1.2.0+0x2cc>  // b.plast
    70fc:	cmp	w24, w1
    7100:	b.ls	710c <inflateBackEnd@@ZLIB_1.2.0+0x264>  // b.plast
    7104:	ldr	w23, [x8, #7144]
    7108:	cbnz	w23, 72f8 <inflateBackEnd@@ZLIB_1.2.0+0x450>
    710c:	cbz	w2, 71f0 <inflateBackEnd@@ZLIB_1.2.0+0x348>
    7110:	cmp	w2, w24
    7114:	b.cs	7214 <inflateBackEnd@@ZLIB_1.2.0+0x36c>  // b.hs, b.nlast
    7118:	sub	w23, w24, w2
    711c:	subs	w23, w21, w23
    7120:	sub	w25, w7, w24
    7124:	b.ls	725c <inflateBackEnd@@ZLIB_1.2.0+0x3b4>  // b.plast
    7128:	ldrb	w21, [x3, x25]
    712c:	sub	w24, w24, #0x1
    7130:	cmp	w2, w24
    7134:	add	x25, x25, #0x1
    7138:	strb	w21, [x9], #1
    713c:	b.ne	7128 <inflateBackEnd@@ZLIB_1.2.0+0x280>  // b.any
    7140:	cmp	w23, w2
    7144:	b.ls	7264 <inflateBackEnd@@ZLIB_1.2.0+0x3bc>  // b.plast
    7148:	mov	x24, xzr
    714c:	ldrb	w21, [x3, x24]
    7150:	strb	w21, [x9, x24]
    7154:	add	x24, x24, #0x1
    7158:	cmp	w2, w24
    715c:	b.ne	714c <inflateBackEnd@@ZLIB_1.2.0+0x2a4>  // b.any
    7160:	sub	x22, x9, w22, uxtw
    7164:	sub	w21, w23, w2
    7168:	add	x23, x22, x24
    716c:	add	x9, x9, x24
    7170:	b	726c <inflateBackEnd@@ZLIB_1.2.0+0x3c4>
    7174:	mov	x23, xzr
    7178:	sub	x24, x23, w22, uxtw
    717c:	sub	x22, x9, w22, uxtw
    7180:	add	x22, x22, #0x1
    7184:	mov	w25, w21
    7188:	add	x26, x22, x23
    718c:	ldurb	w27, [x26, #-1]
    7190:	add	x28, x9, x23
    7194:	sub	w25, w25, #0x3
    7198:	cmp	w25, #0x2
    719c:	strb	w27, [x28]
    71a0:	ldrb	w27, [x26]
    71a4:	add	x23, x23, #0x3
    71a8:	strb	w27, [x28, #1]
    71ac:	ldrb	w26, [x26, #1]
    71b0:	strb	w26, [x28, #2]
    71b4:	b.hi	7188 <inflateBackEnd@@ZLIB_1.2.0+0x2e0>  // b.pmore
    71b8:	cmp	w21, w23
    71bc:	add	x22, x9, x23
    71c0:	b.eq	72d4 <inflateBackEnd@@ZLIB_1.2.0+0x42c>  // b.none
    71c4:	add	x25, x9, x24
    71c8:	add	x25, x25, x23
    71cc:	add	x25, x25, #0x1
    71d0:	ldurb	w25, [x25, #-1]
    71d4:	mov	w21, w21
    71d8:	sub	x21, x21, #0x1
    71dc:	cmp	w21, w23
    71e0:	strb	w25, [x22]
    71e4:	b.ne	7240 <inflateBackEnd@@ZLIB_1.2.0+0x398>  // b.any
    71e8:	add	x9, x22, #0x1
    71ec:	b	6fe0 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    71f0:	sub	w23, w18, w24
    71f4:	subs	w25, w21, w24
    71f8:	add	x23, x3, x23
    71fc:	b.ls	726c <inflateBackEnd@@ZLIB_1.2.0+0x3c4>  // b.plast
    7200:	ldrb	w21, [x23], #1
    7204:	subs	w24, w24, #0x1
    7208:	strb	w21, [x9], #1
    720c:	b.ne	7200 <inflateBackEnd@@ZLIB_1.2.0+0x358>  // b.any
    7210:	b	7234 <inflateBackEnd@@ZLIB_1.2.0+0x38c>
    7214:	sub	w23, w2, w24
    7218:	subs	w25, w21, w24
    721c:	add	x23, x3, x23
    7220:	b.ls	726c <inflateBackEnd@@ZLIB_1.2.0+0x3c4>  // b.plast
    7224:	ldrb	w21, [x23], #1
    7228:	subs	w24, w24, #0x1
    722c:	strb	w21, [x9], #1
    7230:	b.ne	7224 <inflateBackEnd@@ZLIB_1.2.0+0x37c>  // b.any
    7234:	sub	x23, x9, w22, uxtw
    7238:	mov	w21, w25
    723c:	b	726c <inflateBackEnd@@ZLIB_1.2.0+0x3c4>
    7240:	add	x21, x9, x24
    7244:	add	x21, x21, x23
    7248:	ldrb	w21, [x21, #1]
    724c:	add	x9, x9, x23
    7250:	add	x9, x9, #0x2
    7254:	strb	w21, [x22, #1]
    7258:	b	6fe0 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    725c:	add	x23, x3, x25
    7260:	b	726c <inflateBackEnd@@ZLIB_1.2.0+0x3c4>
    7264:	mov	w21, w23
    7268:	mov	x23, x3
    726c:	cmp	w21, #0x3
    7270:	b.cc	72b0 <inflateBackEnd@@ZLIB_1.2.0+0x408>  // b.lo, b.ul, b.last
    7274:	ldrb	w22, [x23]
    7278:	add	x24, x9, #0x3
    727c:	sub	w21, w21, #0x3
    7280:	cmp	w21, #0x2
    7284:	strb	w22, [x9]
    7288:	ldrb	w22, [x23, #1]
    728c:	strb	w22, [x9, #1]
    7290:	add	x22, x23, #0x3
    7294:	ldrb	w23, [x23, #2]
    7298:	strb	w23, [x9, #2]
    729c:	mov	x23, x22
    72a0:	mov	x9, x24
    72a4:	b.hi	7274 <inflateBackEnd@@ZLIB_1.2.0+0x3cc>  // b.pmore
    72a8:	mov	x9, x24
    72ac:	mov	x23, x22
    72b0:	cbz	w21, 6fe0 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    72b4:	ldrb	w24, [x23]
    72b8:	mov	x22, x9
    72bc:	cmp	w21, #0x1
    72c0:	strb	w24, [x22], #1
    72c4:	b.eq	72d4 <inflateBackEnd@@ZLIB_1.2.0+0x42c>  // b.none
    72c8:	ldrb	w21, [x23, #1]
    72cc:	add	x22, x9, #0x2
    72d0:	strb	w21, [x9, #1]
    72d4:	mov	x9, x22
    72d8:	b	6fe0 <inflateBackEnd@@ZLIB_1.2.0+0x138>
    72dc:	tbnz	w23, #5, 72ec <inflateBackEnd@@ZLIB_1.2.0+0x444>
    72e0:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    72e4:	add	x15, x15, #0x64
    72e8:	b	72f8 <inflateBackEnd@@ZLIB_1.2.0+0x450>
    72ec:	mov	w15, #0x3f3f                	// #16191
    72f0:	b	7300 <inflateBackEnd@@ZLIB_1.2.0+0x458>
    72f4:	mov	x15, x17
    72f8:	str	x15, [x0, #48]
    72fc:	mov	w15, #0x3f51                	// #16209
    7300:	str	w15, [x8, #8]
    7304:	lsr	w15, w14, #3
    7308:	and	w14, w14, #0x7
    730c:	str	x9, [x0, #24]
    7310:	sub	w9, w13, w9
    7314:	mov	w13, #0xffffffff            	// #-1
    7318:	sub	x10, x10, x15
    731c:	lsl	w13, w13, w14
    7320:	add	w9, w9, #0x101
    7324:	mvn	w13, w13
    7328:	str	x10, [x0]
    732c:	sub	w10, w12, w10
    7330:	str	w9, [x0, #32]
    7334:	and	x9, x11, x13
    7338:	add	w10, w10, #0x5
    733c:	str	w10, [x0, #8]
    7340:	str	x9, [x8, #80]
    7344:	str	w14, [x8, #88]
    7348:	ldp	x20, x19, [sp, #64]
    734c:	ldp	x22, x21, [sp, #48]
    7350:	ldp	x24, x23, [sp, #32]
    7354:	ldp	x26, x25, [sp, #16]
    7358:	ldp	x28, x27, [sp], #80
    735c:	ret

0000000000007360 <inflateResetKeep@@ZLIB_1.2.5.2>:
    7360:	stp	x29, x30, [sp, #-32]!
    7364:	str	x19, [sp, #16]
    7368:	mov	x29, sp
    736c:	mov	x19, x0
    7370:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    7374:	cbz	w0, 7380 <inflateResetKeep@@ZLIB_1.2.5.2+0x20>
    7378:	mov	w0, #0xfffffffe            	// #-2
    737c:	b	73e0 <inflateResetKeep@@ZLIB_1.2.5.2+0x80>
    7380:	ldr	x8, [x19, #56]
    7384:	str	xzr, [x8, #40]
    7388:	str	xzr, [x19, #16]
    738c:	stp	xzr, xzr, [x19, #40]
    7390:	ldr	w9, [x8, #16]
    7394:	cbz	w9, 73a0 <inflateResetKeep@@ZLIB_1.2.5.2+0x40>
    7398:	and	x9, x9, #0x1
    739c:	str	x9, [x19, #96]
    73a0:	adrp	x9, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    73a4:	ldr	d0, [x9, #184]
    73a8:	mov	w9, #0x8000                	// #32768
    73ac:	str	w9, [x8, #28]
    73b0:	add	x9, x8, #0x558
    73b4:	str	x9, [x8, #144]
    73b8:	stp	x9, x9, [x8, #104]
    73bc:	adrp	x9, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    73c0:	str	d0, [x8, #8]
    73c4:	ldr	d0, [x9, #192]
    73c8:	mov	w0, wzr
    73cc:	str	wzr, [x8, #20]
    73d0:	str	xzr, [x8, #48]
    73d4:	str	xzr, [x8, #80]
    73d8:	str	wzr, [x8, #88]
    73dc:	str	d0, [x8, #7144]
    73e0:	ldr	x19, [sp, #16]
    73e4:	ldp	x29, x30, [sp], #32
    73e8:	ret
    73ec:	cbz	x0, 7414 <inflateResetKeep@@ZLIB_1.2.5.2+0xb4>
    73f0:	ldr	x8, [x0, #64]
    73f4:	cbz	x8, 7414 <inflateResetKeep@@ZLIB_1.2.5.2+0xb4>
    73f8:	ldr	x8, [x0, #72]
    73fc:	cbz	x8, 7414 <inflateResetKeep@@ZLIB_1.2.5.2+0xb4>
    7400:	ldr	x8, [x0, #56]
    7404:	cbz	x8, 7414 <inflateResetKeep@@ZLIB_1.2.5.2+0xb4>
    7408:	ldr	x9, [x8]
    740c:	cmp	x9, x0
    7410:	b.eq	741c <inflateResetKeep@@ZLIB_1.2.5.2+0xbc>  // b.none
    7414:	mov	w0, #0x1                   	// #1
    7418:	ret
    741c:	ldr	w8, [x8, #8]
    7420:	mov	w9, #0xffffc0cc            	// #-16180
    7424:	add	w8, w8, w9
    7428:	cmp	w8, #0x1f
    742c:	cset	w0, hi  // hi = pmore
    7430:	ret

0000000000007434 <inflateReset@@Base>:
    7434:	stp	x29, x30, [sp, #-32]!
    7438:	str	x19, [sp, #16]
    743c:	mov	x29, sp
    7440:	mov	x19, x0
    7444:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    7448:	cbz	w0, 745c <inflateReset@@Base+0x28>
    744c:	ldr	x19, [sp, #16]
    7450:	mov	w0, #0xfffffffe            	// #-2
    7454:	ldp	x29, x30, [sp], #32
    7458:	ret
    745c:	ldr	x8, [x19, #56]
    7460:	mov	x0, x19
    7464:	str	xzr, [x8, #64]
    7468:	ldr	x19, [sp, #16]
    746c:	str	wzr, [x8, #60]
    7470:	ldp	x29, x30, [sp], #32
    7474:	b	2430 <inflateResetKeep@plt>

0000000000007478 <inflateReset2@@ZLIB_1.2.3.4>:
    7478:	stp	x29, x30, [sp, #-48]!
    747c:	stp	x22, x21, [sp, #16]
    7480:	stp	x20, x19, [sp, #32]
    7484:	mov	x29, sp
    7488:	mov	w20, w1
    748c:	mov	x19, x0
    7490:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    7494:	cbnz	w0, 74d4 <inflateReset2@@ZLIB_1.2.3.4+0x5c>
    7498:	ldr	x21, [x19, #56]
    749c:	tbnz	w20, #31, 74bc <inflateReset2@@ZLIB_1.2.3.4+0x44>
    74a0:	lsr	w8, w20, #4
    74a4:	and	w9, w20, #0xf
    74a8:	cmp	w20, #0x30
    74ac:	add	w22, w8, #0x5
    74b0:	csel	w20, w9, w20, lt  // lt = tstop
    74b4:	cbnz	w20, 74c8 <inflateReset2@@ZLIB_1.2.3.4+0x50>
    74b8:	b	74e8 <inflateReset2@@ZLIB_1.2.3.4+0x70>
    74bc:	mov	w22, wzr
    74c0:	neg	w20, w20
    74c4:	cbz	w20, 74e8 <inflateReset2@@ZLIB_1.2.3.4+0x70>
    74c8:	and	w8, w20, #0xfffffff8
    74cc:	cmp	w8, #0x8
    74d0:	b.eq	74e8 <inflateReset2@@ZLIB_1.2.3.4+0x70>  // b.none
    74d4:	ldp	x20, x19, [sp, #32]
    74d8:	ldp	x22, x21, [sp, #16]
    74dc:	mov	w0, #0xfffffffe            	// #-2
    74e0:	ldp	x29, x30, [sp], #48
    74e4:	ret
    74e8:	ldr	x1, [x21, #72]
    74ec:	cbz	x1, 7508 <inflateReset2@@ZLIB_1.2.3.4+0x90>
    74f0:	ldr	w8, [x21, #56]
    74f4:	cmp	w8, w20
    74f8:	b.eq	7508 <inflateReset2@@ZLIB_1.2.3.4+0x90>  // b.none
    74fc:	ldp	x8, x0, [x19, #72]
    7500:	blr	x8
    7504:	str	xzr, [x21, #72]
    7508:	str	w22, [x21, #16]
    750c:	str	w20, [x21, #56]
    7510:	mov	x0, x19
    7514:	ldp	x20, x19, [sp, #32]
    7518:	ldp	x22, x21, [sp, #16]
    751c:	ldp	x29, x30, [sp], #48
    7520:	b	25f0 <inflateReset@plt>

0000000000007524 <inflateInit2_@@Base>:
    7524:	stp	x29, x30, [sp, #-48]!
    7528:	stp	x22, x21, [sp, #16]
    752c:	stp	x20, x19, [sp, #32]
    7530:	mov	x29, sp
    7534:	cbz	x2, 75e0 <inflateInit2_@@Base+0xbc>
    7538:	cmp	w3, #0x70
    753c:	mov	w21, #0xfffffffa            	// #-6
    7540:	b.ne	75f4 <inflateInit2_@@Base+0xd0>  // b.any
    7544:	ldrb	w8, [x2]
    7548:	cmp	w8, #0x31
    754c:	b.ne	75f4 <inflateInit2_@@Base+0xd0>  // b.any
    7550:	mov	x19, x0
    7554:	cbz	x0, 75e8 <inflateInit2_@@Base+0xc4>
    7558:	ldr	x8, [x19, #64]
    755c:	mov	w20, w1
    7560:	str	xzr, [x19, #48]
    7564:	cbnz	x8, 7578 <inflateInit2_@@Base+0x54>
    7568:	adrp	x8, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    756c:	add	x8, x8, #0x410
    7570:	str	x8, [x19, #64]
    7574:	str	xzr, [x19, #80]
    7578:	ldr	x9, [x19, #72]
    757c:	cbnz	x9, 758c <inflateInit2_@@Base+0x68>
    7580:	adrp	x9, b000 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    7584:	add	x9, x9, #0x418
    7588:	str	x9, [x19, #72]
    758c:	ldr	x0, [x19, #80]
    7590:	mov	w1, #0x1                   	// #1
    7594:	mov	w2, #0x1bf8                	// #7160
    7598:	blr	x8
    759c:	cbz	x0, 75f0 <inflateInit2_@@Base+0xcc>
    75a0:	mov	w8, #0x3f34                	// #16180
    75a4:	mov	x22, x0
    75a8:	str	x0, [x19, #56]
    75ac:	str	x19, [x0]
    75b0:	str	xzr, [x0, #72]
    75b4:	str	w8, [x0, #8]
    75b8:	mov	x0, x19
    75bc:	mov	w1, w20
    75c0:	bl	2620 <inflateReset2@plt>
    75c4:	mov	w21, w0
    75c8:	cbz	w0, 75f4 <inflateInit2_@@Base+0xd0>
    75cc:	ldp	x8, x0, [x19, #72]
    75d0:	mov	x1, x22
    75d4:	blr	x8
    75d8:	str	xzr, [x19, #56]
    75dc:	b	75f4 <inflateInit2_@@Base+0xd0>
    75e0:	mov	w21, #0xfffffffa            	// #-6
    75e4:	b	75f4 <inflateInit2_@@Base+0xd0>
    75e8:	mov	w21, #0xfffffffe            	// #-2
    75ec:	b	75f4 <inflateInit2_@@Base+0xd0>
    75f0:	mov	w21, #0xfffffffc            	// #-4
    75f4:	mov	w0, w21
    75f8:	ldp	x20, x19, [sp, #32]
    75fc:	ldp	x22, x21, [sp, #16]
    7600:	ldp	x29, x30, [sp], #48
    7604:	ret

0000000000007608 <inflateInit_@@Base>:
    7608:	mov	w3, w2
    760c:	mov	x2, x1
    7610:	mov	w1, #0xf                   	// #15
    7614:	b	25e0 <inflateInit2_@plt>

0000000000007618 <inflatePrime@@ZLIB_1.2.2.4>:
    7618:	stp	x29, x30, [sp, #-48]!
    761c:	str	x21, [sp, #16]
    7620:	stp	x20, x19, [sp, #32]
    7624:	mov	x29, sp
    7628:	mov	w19, w2
    762c:	mov	w20, w1
    7630:	mov	x21, x0
    7634:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    7638:	cbz	w0, 7650 <inflatePrime@@ZLIB_1.2.2.4+0x38>
    763c:	mov	w0, #0xfffffffe            	// #-2
    7640:	ldp	x20, x19, [sp, #32]
    7644:	ldr	x21, [sp, #16]
    7648:	ldp	x29, x30, [sp], #48
    764c:	ret
    7650:	ldr	x8, [x21, #56]
    7654:	tbnz	w20, #31, 7698 <inflatePrime@@ZLIB_1.2.2.4+0x80>
    7658:	cmp	w20, #0x10
    765c:	b.gt	763c <inflatePrime@@ZLIB_1.2.2.4+0x24>
    7660:	ldr	w10, [x8, #88]
    7664:	add	w9, w10, w20
    7668:	cmp	w9, #0x20
    766c:	b.hi	763c <inflatePrime@@ZLIB_1.2.2.4+0x24>  // b.pmore
    7670:	mov	x11, #0xffffffffffffffff    	// #-1
    7674:	ldr	x12, [x8, #80]
    7678:	lsl	x11, x11, x20
    767c:	bic	w11, w19, w11
    7680:	lsl	w10, w11, w10
    7684:	mov	w0, wzr
    7688:	add	x10, x12, x10
    768c:	str	x10, [x8, #80]
    7690:	str	w9, [x8, #88]
    7694:	b	7640 <inflatePrime@@ZLIB_1.2.2.4+0x28>
    7698:	mov	w0, wzr
    769c:	str	xzr, [x8, #80]
    76a0:	str	wzr, [x8, #88]
    76a4:	b	7640 <inflatePrime@@ZLIB_1.2.2.4+0x28>

00000000000076a8 <inflate@@Base>:
    76a8:	sub	sp, sp, #0xd0
    76ac:	stp	x29, x30, [sp, #112]
    76b0:	stp	x28, x27, [sp, #128]
    76b4:	stp	x26, x25, [sp, #144]
    76b8:	stp	x24, x23, [sp, #160]
    76bc:	stp	x22, x21, [sp, #176]
    76c0:	stp	x20, x19, [sp, #192]
    76c4:	add	x29, sp, #0x70
    76c8:	mov	w23, w1
    76cc:	mov	x19, x0
    76d0:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    76d4:	cbz	w0, 76fc <inflate@@Base+0x54>
    76d8:	mov	w0, #0xfffffffe            	// #-2
    76dc:	ldp	x20, x19, [sp, #192]
    76e0:	ldp	x22, x21, [sp, #176]
    76e4:	ldp	x24, x23, [sp, #160]
    76e8:	ldp	x26, x25, [sp, #144]
    76ec:	ldp	x28, x27, [sp, #128]
    76f0:	ldp	x29, x30, [sp, #112]
    76f4:	add	sp, sp, #0xd0
    76f8:	ret
    76fc:	ldr	x21, [x19, #24]
    7700:	cbz	x21, 76d8 <inflate@@Base+0x30>
    7704:	ldr	x22, [x19]
    7708:	cbz	x22, 8da0 <inflate@@Base+0x16f8>
    770c:	ldr	x27, [x19, #56]
    7710:	mov	w9, #0x3f3f                	// #16191
    7714:	mov	x0, x27
    7718:	ldr	w8, [x0, #8]!
    771c:	cmp	w8, w9
    7720:	b.ne	772c <inflate@@Base+0x84>  // b.any
    7724:	mov	w8, #0x3f40                	// #16192
    7728:	str	w8, [x0]
    772c:	add	x9, x27, #0x20
    7730:	stur	x9, [x29, #-24]
    7734:	add	x9, x27, #0x558
    7738:	str	x9, [sp, #40]
    773c:	add	x9, x27, #0x90
    7740:	ldr	w2, [x19, #32]
    7744:	ldr	w10, [x19, #8]
    7748:	stur	x9, [x29, #-48]
    774c:	add	x9, x27, #0x78
    7750:	ldr	x25, [x27, #80]
    7754:	ldr	w20, [x27, #88]
    7758:	str	x9, [sp, #32]
    775c:	add	x9, x27, #0x98
    7760:	str	x9, [sp, #24]
    7764:	add	x9, x27, #0x318
    7768:	str	x9, [sp, #56]
    776c:	add	x9, x27, #0x7c
    7770:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7774:	str	x9, [sp, #16]
    7778:	sub	w9, w23, #0x5
    777c:	mov	w28, #0xffffc0cc            	// #-16180
    7780:	add	x4, x4, #0xc8
    7784:	mov	w24, w10
    7788:	mov	w16, w2
    778c:	stur	wzr, [x29, #-28]
    7790:	str	w9, [sp, #52]
    7794:	stur	w10, [x29, #-36]
    7798:	stur	x0, [x29, #-16]
    779c:	add	w8, w8, w28
    77a0:	cmp	w8, #0x1e
    77a4:	b.hi	76d8 <inflate@@Base+0x30>  // b.pmore
    77a8:	adr	x9, 77c4 <inflate@@Base+0x11c>
    77ac:	ldrh	w10, [x4, x8, lsl #1]
    77b0:	add	x9, x9, x10, lsl #2
    77b4:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    77b8:	mov	w26, #0x1                   	// #1
    77bc:	add	x8, x8, #0x10e
    77c0:	br	x9
    77c4:	ldr	w8, [x27, #16]
    77c8:	cbz	w8, 7ff8 <inflate@@Base+0x950>
    77cc:	cmp	w20, #0xf
    77d0:	b.hi	77fc <inflate@@Base+0x154>  // b.pmore
    77d4:	mov	w9, w20
    77d8:	cbz	w24, 8dac <inflate@@Base+0x1704>
    77dc:	ldrb	w10, [x22], #1
    77e0:	add	x20, x9, #0x8
    77e4:	sub	w24, w24, #0x1
    77e8:	cmp	x9, #0x8
    77ec:	lsl	x10, x10, x9
    77f0:	add	x25, x10, x25
    77f4:	mov	x9, x20
    77f8:	b.cc	77d8 <inflate@@Base+0x130>  // b.lo, b.ul, b.last
    77fc:	tbz	w8, #1, 80a8 <inflate@@Base+0xa00>
    7800:	mov	w9, #0x8b1f                	// #35615
    7804:	cmp	x25, x9
    7808:	b.ne	80a8 <inflate@@Base+0xa00>  // b.any
    780c:	ldr	w8, [x27, #56]
    7810:	stur	w16, [x29, #-32]
    7814:	str	w2, [sp, #8]
    7818:	cbnz	w8, 7824 <inflate@@Base+0x17c>
    781c:	mov	w8, #0xf                   	// #15
    7820:	str	w8, [x27, #56]
    7824:	mov	x0, xzr
    7828:	mov	x1, xzr
    782c:	mov	w2, wzr
    7830:	bl	2420 <crc32@plt>
    7834:	ldur	x26, [x29, #-24]
    7838:	mov	w8, #0x8b1f                	// #35615
    783c:	sub	x1, x29, #0x4
    7840:	mov	w2, #0x2                   	// #2
    7844:	str	x0, [x26]
    7848:	sturh	w8, [x29, #-4]
    784c:	bl	2420 <crc32@plt>
    7850:	str	x0, [x26]
    7854:	ldur	x0, [x29, #-16]
    7858:	ldr	w2, [sp, #8]
    785c:	ldur	w16, [x29, #-32]
    7860:	mov	w8, #0x3f35                	// #16181
    7864:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7868:	mov	x25, xzr
    786c:	mov	w20, wzr
    7870:	str	w8, [x0]
    7874:	b	886c <inflate@@Base+0x11c4>
    7878:	cmp	w20, #0xf
    787c:	b.hi	78a8 <inflate@@Base+0x200>  // b.pmore
    7880:	mov	w8, w20
    7884:	cbz	w24, 8dbc <inflate@@Base+0x1714>
    7888:	ldrb	w9, [x22], #1
    788c:	add	x20, x8, #0x8
    7890:	sub	w24, w24, #0x1
    7894:	cmp	x8, #0x8
    7898:	lsl	x9, x9, x8
    789c:	add	x25, x9, x25
    78a0:	mov	x8, x20
    78a4:	b.cc	7884 <inflate@@Base+0x1dc>  // b.lo, b.ul, b.last
    78a8:	and	w8, w25, #0xff
    78ac:	cmp	w8, #0x8
    78b0:	str	w25, [x27, #24]
    78b4:	b.ne	8d58 <inflate@@Base+0x16b0>  // b.any
    78b8:	tst	w25, #0xe000
    78bc:	b.eq	8160 <inflate@@Base+0xab8>  // b.none
    78c0:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    78c4:	add	x8, x8, #0x9fa
    78c8:	b	8d60 <inflate@@Base+0x16b8>
    78cc:	cmp	w20, #0x1f
    78d0:	b.ls	81c4 <inflate@@Base+0xb1c>  // b.plast
    78d4:	b	81e8 <inflate@@Base+0xb40>
    78d8:	cmp	w20, #0xf
    78dc:	b.ls	824c <inflate@@Base+0xba4>  // b.plast
    78e0:	b	8270 <inflate@@Base+0xbc8>
    78e4:	cmp	w20, #0x1f
    78e8:	b.hi	7910 <inflate@@Base+0x268>  // b.pmore
    78ec:	mov	w20, w20
    78f0:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    78f4:	ldrb	w8, [x22], #1
    78f8:	sub	w24, w24, #0x1
    78fc:	cmp	x20, #0x18
    7900:	lsl	x8, x8, x20
    7904:	add	x20, x20, #0x8
    7908:	add	x25, x8, x25
    790c:	b.cc	78f0 <inflate@@Base+0x248>  // b.lo, b.ul, b.last
    7910:	lsr	x8, x25, #8
    7914:	lsl	w9, w25, #8
    7918:	and	x8, x8, #0xff00
    791c:	and	x9, x9, #0xff0000
    7920:	bfxil	x8, x25, #24, #8
    7924:	orr	x8, x8, x9
    7928:	ldur	x9, [x29, #-24]
    792c:	lsl	w10, w25, #24
    7930:	mov	w20, wzr
    7934:	mov	w11, #0x3f3e                	// #16190
    7938:	orr	x8, x8, x10
    793c:	mov	x25, xzr
    7940:	str	x8, [x9]
    7944:	str	x8, [x19, #96]
    7948:	str	w11, [x0]
    794c:	ldr	w8, [x27, #20]
    7950:	cbz	w8, 8f80 <inflate@@Base+0x18d8>
    7954:	mov	x0, xzr
    7958:	mov	x1, xzr
    795c:	mov	w26, w23
    7960:	mov	w23, w2
    7964:	mov	w2, wzr
    7968:	mov	w28, w16
    796c:	bl	2540 <adler32@plt>
    7970:	ldur	x8, [x29, #-24]
    7974:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7978:	add	x4, x4, #0xc8
    797c:	mov	w16, w28
    7980:	str	x0, [x8]
    7984:	str	x0, [x19, #96]
    7988:	ldur	x0, [x29, #-16]
    798c:	mov	w28, #0xffffc0cc            	// #-16180
    7990:	mov	w2, w23
    7994:	mov	w23, w26
    7998:	mov	w8, #0x3f3f                	// #16191
    799c:	str	w8, [x0]
    79a0:	ldr	w8, [sp, #52]
    79a4:	cmp	w8, #0x2
    79a8:	b.cc	8dc0 <inflate@@Base+0x1718>  // b.lo, b.ul, b.last
    79ac:	ldr	w8, [x27, #12]
    79b0:	cbz	w8, 79c8 <inflate@@Base+0x320>
    79b4:	and	w8, w20, #0x7
    79b8:	mov	w9, #0x3f4e                	// #16206
    79bc:	and	w20, w20, #0xfffffff8
    79c0:	lsr	x25, x25, x8
    79c4:	b	8d68 <inflate@@Base+0x16c0>
    79c8:	cmp	w20, #0x2
    79cc:	b.hi	79ec <inflate@@Base+0x344>  // b.pmore
    79d0:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    79d4:	ldrb	w8, [x22], #1
    79d8:	add	w9, w20, #0x8
    79dc:	sub	w24, w24, #0x1
    79e0:	lsl	x8, x8, x20
    79e4:	add	x25, x8, x25
    79e8:	mov	w20, w9
    79ec:	adrp	x10, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    79f0:	and	w8, w25, #0x1
    79f4:	ubfx	w9, w25, #1, #2
    79f8:	add	x10, x10, #0x106
    79fc:	str	w8, [x27, #12]
    7a00:	adr	x11, 7a14 <inflate@@Base+0x36c>
    7a04:	ldrh	w8, [x10, x9, lsl #1]
    7a08:	add	x11, x11, x8, lsl #2
    7a0c:	mov	w8, #0x3f41                	// #16193
    7a10:	br	x11
    7a14:	adrp	x10, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    7a18:	ldr	d0, [x10, #1728]
    7a1c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7a20:	adrp	x9, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7a24:	add	x8, x8, #0x134
    7a28:	add	x9, x9, #0x934
    7a2c:	mov	w11, #0x3f47                	// #16199
    7a30:	cmp	w23, #0x6
    7a34:	stp	x8, x9, [x27, #104]
    7a38:	str	d0, [x27, #120]
    7a3c:	str	w11, [x27, #8]
    7a40:	b.ne	8078 <inflate@@Base+0x9d0>  // b.any
    7a44:	b	8fcc <inflate@@Base+0x1924>
    7a48:	and	w8, w20, #0x7
    7a4c:	and	w20, w20, #0xfffffff8
    7a50:	cmp	w20, #0x1f
    7a54:	lsr	x25, x25, x8
    7a58:	b.hi	7a84 <inflate@@Base+0x3dc>  // b.pmore
    7a5c:	mov	w8, w20
    7a60:	cbz	w24, 8dbc <inflate@@Base+0x1714>
    7a64:	ldrb	w9, [x22], #1
    7a68:	add	x20, x8, #0x8
    7a6c:	sub	w24, w24, #0x1
    7a70:	cmp	x8, #0x18
    7a74:	lsl	x9, x9, x8
    7a78:	add	x25, x9, x25
    7a7c:	mov	x8, x20
    7a80:	b.cc	7a60 <inflate@@Base+0x3b8>  // b.lo, b.ul, b.last
    7a84:	lsr	x8, x25, #16
    7a88:	eor	x8, x8, #0xffff
    7a8c:	cmp	x8, w25, uxth
    7a90:	b.ne	8000 <inflate@@Base+0x958>  // b.any
    7a94:	mov	w20, wzr
    7a98:	and	w8, w25, #0xffff
    7a9c:	mov	w9, #0x3f42                	// #16194
    7aa0:	cmp	w23, #0x6
    7aa4:	mov	x25, xzr
    7aa8:	str	w8, [x27, #92]
    7aac:	str	w9, [x27, #8]
    7ab0:	b.eq	8dc0 <inflate@@Base+0x1718>  // b.none
    7ab4:	mov	w8, #0x3f43                	// #16195
    7ab8:	str	w8, [x0]
    7abc:	ldr	w8, [x27, #92]
    7ac0:	cbz	w8, 7d80 <inflate@@Base+0x6d8>
    7ac4:	cmp	w8, w24
    7ac8:	csel	w8, w24, w8, hi  // hi = pmore
    7acc:	cmp	w8, w2
    7ad0:	stur	w23, [x29, #-40]
    7ad4:	csel	w23, w2, w8, hi  // hi = pmore
    7ad8:	stur	w16, [x29, #-32]
    7adc:	str	x19, [sp, #8]
    7ae0:	cbz	w23, 8fa0 <inflate@@Base+0x18f8>
    7ae4:	mov	w26, w2
    7ae8:	mov	w2, w23
    7aec:	mov	x0, x21
    7af0:	mov	x1, x22
    7af4:	bl	2390 <memcpy@plt>
    7af8:	ldr	w8, [x27, #92]
    7afc:	mov	w2, w26
    7b00:	ldur	x0, [x29, #-16]
    7b04:	sub	w24, w24, w23
    7b08:	add	x22, x22, w23, uxtw
    7b0c:	sub	w2, w26, w23
    7b10:	add	x21, x21, w23, uxtw
    7b14:	sub	w8, w8, w23
    7b18:	ldr	x19, [sp, #8]
    7b1c:	ldur	w23, [x29, #-40]
    7b20:	ldur	w16, [x29, #-32]
    7b24:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7b28:	add	x4, x4, #0xc8
    7b2c:	str	w8, [x27, #92]
    7b30:	b	8d6c <inflate@@Base+0x16c4>
    7b34:	cmp	w20, #0xd
    7b38:	b.hi	7b64 <inflate@@Base+0x4bc>  // b.pmore
    7b3c:	mov	w9, w20
    7b40:	cbz	w24, 8dac <inflate@@Base+0x1704>
    7b44:	ldrb	w10, [x22], #1
    7b48:	add	x20, x9, #0x8
    7b4c:	sub	w24, w24, #0x1
    7b50:	cmp	x9, #0x6
    7b54:	lsl	x10, x10, x9
    7b58:	add	x25, x10, x25
    7b5c:	mov	x9, x20
    7b60:	b.cc	7b40 <inflate@@Base+0x498>  // b.lo, b.ul, b.last
    7b64:	and	w11, w25, #0x1f
    7b68:	ubfx	w10, w25, #5, #5
    7b6c:	ubfx	w9, w25, #10, #4
    7b70:	lsr	x25, x25, #14
    7b74:	add	w12, w11, #0x101
    7b78:	add	w13, w10, #0x1
    7b7c:	add	w9, w9, #0x4
    7b80:	cmp	w11, #0x1d
    7b84:	sub	w20, w20, #0xe
    7b88:	stp	w12, w13, [x27, #132]
    7b8c:	str	w9, [x27, #128]
    7b90:	b.hi	800c <inflate@@Base+0x964>  // b.pmore
    7b94:	cmp	w10, #0x1e
    7b98:	b.cs	800c <inflate@@Base+0x964>  // b.hs, b.nlast
    7b9c:	mov	w11, #0x3f45                	// #16197
    7ba0:	mov	w10, wzr
    7ba4:	str	wzr, [x27, #140]
    7ba8:	str	w11, [x27, #8]
    7bac:	b	7bc0 <inflate@@Base+0x518>
    7bb0:	ldr	w10, [x27, #140]
    7bb4:	ldr	w9, [x27, #128]
    7bb8:	cmp	w10, w9
    7bbc:	b.cs	7c10 <inflate@@Base+0x568>  // b.hs, b.nlast
    7bc0:	mov	w10, w10
    7bc4:	cmp	w20, #0x2
    7bc8:	b.hi	7be8 <inflate@@Base+0x540>  // b.pmore
    7bcc:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    7bd0:	ldrb	w11, [x22], #1
    7bd4:	add	w12, w20, #0x8
    7bd8:	sub	w24, w24, #0x1
    7bdc:	lsl	x11, x11, x20
    7be0:	add	x25, x11, x25
    7be4:	mov	w20, w12
    7be8:	ldrh	w12, [x8, x10, lsl #1]
    7bec:	add	x10, x10, #0x1
    7bf0:	and	w11, w25, #0x7
    7bf4:	lsr	x25, x25, #3
    7bf8:	cmp	w10, w9
    7bfc:	add	x12, x27, x12, lsl #1
    7c00:	sub	w20, w20, #0x3
    7c04:	str	w10, [x27, #140]
    7c08:	strh	w11, [x12, #152]
    7c0c:	b.cc	7bc4 <inflate@@Base+0x51c>  // b.lo, b.ul, b.last
    7c10:	ldur	x3, [x29, #-48]
    7c14:	ldr	x5, [sp, #56]
    7c18:	mov	w26, w16
    7c1c:	cmp	w10, #0x12
    7c20:	str	w2, [sp, #8]
    7c24:	b.hi	7c48 <inflate@@Base+0x5a0>  // b.pmore
    7c28:	mov	w9, w10
    7c2c:	ldrh	w10, [x8, x9, lsl #1]
    7c30:	cmp	x9, #0x12
    7c34:	add	x9, x9, #0x1
    7c38:	add	x10, x27, x10, lsl #1
    7c3c:	strh	wzr, [x10, #152]
    7c40:	b.cc	7c2c <inflate@@Base+0x584>  // b.lo, b.ul, b.last
    7c44:	str	w9, [x27, #140]
    7c48:	ldp	x4, x8, [sp, #32]
    7c4c:	ldr	x1, [sp, #24]
    7c50:	mov	w2, #0x13                  	// #19
    7c54:	mov	w0, wzr
    7c58:	str	x8, [x27, #144]
    7c5c:	str	x8, [x27, #104]
    7c60:	mov	w8, #0x7                   	// #7
    7c64:	str	w8, [x27, #120]
    7c68:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    7c6c:	cbz	w0, 7d88 <inflate@@Base+0x6e0>
    7c70:	stur	w0, [x29, #-28]
    7c74:	ldur	x0, [x29, #-16]
    7c78:	ldr	w2, [sp, #8]
    7c7c:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    7c80:	add	x8, x8, #0xfda
    7c84:	mov	w9, #0x3f51                	// #16209
    7c88:	str	x8, [x19, #48]
    7c8c:	str	w9, [x0]
    7c90:	b	8864 <inflate@@Base+0x11bc>
    7c94:	ldr	w8, [x27, #140]
    7c98:	str	w2, [sp, #8]
    7c9c:	b	7dac <inflate@@Base+0x704>
    7ca0:	ldr	w8, [x27, #100]
    7ca4:	cbz	w8, 89e8 <inflate@@Base+0x1340>
    7ca8:	cmp	w20, w8
    7cac:	b.cs	8018 <inflate@@Base+0x970>  // b.hs, b.nlast
    7cb0:	mov	w11, w20
    7cb4:	mov	w9, w24
    7cb8:	mov	x10, x22
    7cbc:	cbz	w9, 8db4 <inflate@@Base+0x170c>
    7cc0:	ldrb	w12, [x10], #1
    7cc4:	sub	w9, w9, #0x1
    7cc8:	lsl	x12, x12, x11
    7ccc:	add	w11, w11, #0x8
    7cd0:	cmp	w11, w8
    7cd4:	add	x25, x12, x25
    7cd8:	b.cc	7cbc <inflate@@Base+0x614>  // b.lo, b.ul, b.last
    7cdc:	b	8024 <inflate@@Base+0x97c>
    7ce0:	ldr	w8, [x27, #100]
    7ce4:	b	8b58 <inflate@@Base+0x14b0>
    7ce8:	cbz	w2, 8dc0 <inflate@@Base+0x1718>
    7cec:	ldr	w8, [x27, #92]
    7cf0:	mov	w9, #0x3f48                	// #16200
    7cf4:	sub	w2, w2, #0x1
    7cf8:	strb	w8, [x21], #1
    7cfc:	str	w9, [x27, #8]
    7d00:	b	8d6c <inflate@@Base+0x16c4>
    7d04:	ldr	w8, [x27, #16]
    7d08:	cbz	w8, 8748 <inflate@@Base+0x10a0>
    7d0c:	cmp	w20, #0x1f
    7d10:	b.hi	7d3c <inflate@@Base+0x694>  // b.pmore
    7d14:	mov	w9, w20
    7d18:	cbz	w24, 8dac <inflate@@Base+0x1704>
    7d1c:	ldrb	w10, [x22], #1
    7d20:	add	x20, x9, #0x8
    7d24:	sub	w24, w24, #0x1
    7d28:	cmp	x9, #0x18
    7d2c:	lsl	x10, x10, x9
    7d30:	add	x25, x10, x25
    7d34:	mov	x9, x20
    7d38:	b.cc	7d18 <inflate@@Base+0x670>  // b.lo, b.ul, b.last
    7d3c:	ldr	x9, [x19, #40]
    7d40:	mov	w26, w2
    7d44:	subs	w2, w16, w2
    7d48:	and	w8, w8, #0x4
    7d4c:	add	x9, x9, x2
    7d50:	str	x9, [x19, #40]
    7d54:	ldr	x9, [x27, #40]
    7d58:	add	x9, x9, x2
    7d5c:	str	x9, [x27, #40]
    7d60:	b.eq	86e4 <inflate@@Base+0x103c>  // b.none
    7d64:	cbz	w8, 86e4 <inflate@@Base+0x103c>
    7d68:	ldr	w8, [x27, #24]
    7d6c:	ldr	x0, [x27, #32]
    7d70:	sub	x1, x21, x2
    7d74:	cbz	w8, 86c4 <inflate@@Base+0x101c>
    7d78:	bl	2420 <crc32@plt>
    7d7c:	b	86c8 <inflate@@Base+0x1020>
    7d80:	mov	w8, #0x3f3f                	// #16191
    7d84:	b	8ca0 <inflate@@Base+0x15f8>
    7d88:	ldur	x0, [x29, #-16]
    7d8c:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7d90:	mov	w8, wzr
    7d94:	mov	w9, #0x3f46                	// #16198
    7d98:	mov	w16, w26
    7d9c:	add	x4, x4, #0xc8
    7da0:	stur	wzr, [x29, #-28]
    7da4:	str	wzr, [x27, #140]
    7da8:	str	w9, [x27, #8]
    7dac:	stur	w16, [x29, #-32]
    7db0:	ldp	w2, w9, [x27, #132]
    7db4:	add	w9, w9, w2
    7db8:	cmp	w8, w9
    7dbc:	b.cs	7fac <inflate@@Base+0x904>  // b.hs, b.nlast
    7dc0:	ldr	w11, [x27, #120]
    7dc4:	ldr	x10, [x27, #104]
    7dc8:	mov	w12, #0xffffffff            	// #-1
    7dcc:	lsl	w11, w12, w11
    7dd0:	mvn	w11, w11
    7dd4:	and	w16, w11, w25
    7dd8:	add	x12, x10, w16, uxtw #2
    7ddc:	ldrb	w12, [x12, #1]
    7de0:	cmp	w20, w12
    7de4:	b.cs	7e30 <inflate@@Base+0x788>  // b.hs, b.nlast
    7de8:	mov	w13, w20
    7dec:	mov	w14, w24
    7df0:	mov	x15, x22
    7df4:	cbz	w14, 8dc8 <inflate@@Base+0x1720>
    7df8:	ldrb	w12, [x15], #1
    7dfc:	sub	w14, w14, #0x1
    7e00:	lsl	x12, x12, x13
    7e04:	add	x25, x12, x25
    7e08:	and	w16, w11, w25
    7e0c:	add	x12, x10, w16, uxtw #2
    7e10:	ldrb	w12, [x12, #1]
    7e14:	add	x13, x13, #0x8
    7e18:	cmp	x13, x12
    7e1c:	b.cc	7df4 <inflate@@Base+0x74c>  // b.lo, b.ul, b.last
    7e20:	mov	w16, w16
    7e24:	mov	x22, x15
    7e28:	mov	w24, w14
    7e2c:	mov	w20, w13
    7e30:	add	x13, x10, x16, lsl #2
    7e34:	ldrh	w13, [x13, #2]
    7e38:	cmp	w13, #0xf
    7e3c:	b.hi	7e5c <inflate@@Base+0x7b4>  // b.pmore
    7e40:	lsr	x25, x25, x12
    7e44:	sub	w20, w20, w12
    7e48:	add	x12, x27, w8, uxtw #1
    7e4c:	add	w8, w8, #0x1
    7e50:	str	w8, [x27, #140]
    7e54:	strh	w13, [x12, #152]
    7e58:	b	7f98 <inflate@@Base+0x8f0>
    7e5c:	cmp	w13, #0x10
    7e60:	b.eq	7ec4 <inflate@@Base+0x81c>  // b.none
    7e64:	ldur	w16, [x29, #-32]
    7e68:	cmp	w13, #0x11
    7e6c:	mov	w28, #0xffffc0cc            	// #-16180
    7e70:	b.ne	7f28 <inflate@@Base+0x880>  // b.any
    7e74:	add	w13, w12, #0x3
    7e78:	cmp	w20, w13
    7e7c:	b.cs	7ea4 <inflate@@Base+0x7fc>  // b.hs, b.nlast
    7e80:	mov	w20, w20
    7e84:	cbz	w24, 8f38 <inflate@@Base+0x1890>
    7e88:	ldrb	w14, [x22], #1
    7e8c:	sub	w24, w24, #0x1
    7e90:	lsl	x14, x14, x20
    7e94:	add	x20, x20, #0x8
    7e98:	cmp	x20, x13
    7e9c:	add	x25, x14, x25
    7ea0:	b.cc	7e84 <inflate@@Base+0x7dc>  // b.lo, b.ul, b.last
    7ea4:	lsr	x14, x25, x12
    7ea8:	sub	w15, w20, w12
    7eac:	and	w12, w14, #0x7
    7eb0:	mov	w13, wzr
    7eb4:	lsr	x25, x14, #3
    7eb8:	add	w12, w12, #0x3
    7ebc:	sub	w20, w15, #0x3
    7ec0:	b	7f74 <inflate@@Base+0x8cc>
    7ec4:	ldur	w16, [x29, #-32]
    7ec8:	add	w13, w12, #0x2
    7ecc:	cmp	w20, w13
    7ed0:	mov	w28, #0xffffc0cc            	// #-16180
    7ed4:	b.cs	7efc <inflate@@Base+0x854>  // b.hs, b.nlast
    7ed8:	mov	w20, w20
    7edc:	cbz	w24, 8f38 <inflate@@Base+0x1890>
    7ee0:	ldrb	w14, [x22], #1
    7ee4:	sub	w24, w24, #0x1
    7ee8:	lsl	x14, x14, x20
    7eec:	add	x20, x20, #0x8
    7ef0:	cmp	x20, x13
    7ef4:	add	x25, x14, x25
    7ef8:	b.cc	7edc <inflate@@Base+0x834>  // b.lo, b.ul, b.last
    7efc:	lsr	x25, x25, x12
    7f00:	sub	w20, w20, w12
    7f04:	cbz	w8, 8d74 <inflate@@Base+0x16cc>
    7f08:	sub	w12, w8, #0x1
    7f0c:	add	x12, x27, w12, uxtw #1
    7f10:	ldrh	w13, [x12, #152]
    7f14:	and	w12, w25, #0x3
    7f18:	add	w12, w12, #0x3
    7f1c:	lsr	x25, x25, #2
    7f20:	sub	w20, w20, #0x2
    7f24:	b	7f74 <inflate@@Base+0x8cc>
    7f28:	add	w13, w12, #0x7
    7f2c:	cmp	w20, w13
    7f30:	b.cs	7f58 <inflate@@Base+0x8b0>  // b.hs, b.nlast
    7f34:	mov	w20, w20
    7f38:	cbz	w24, 8f38 <inflate@@Base+0x1890>
    7f3c:	ldrb	w14, [x22], #1
    7f40:	sub	w24, w24, #0x1
    7f44:	lsl	x14, x14, x20
    7f48:	add	x20, x20, #0x8
    7f4c:	cmp	x20, x13
    7f50:	add	x25, x14, x25
    7f54:	b.cc	7f38 <inflate@@Base+0x890>  // b.lo, b.ul, b.last
    7f58:	lsr	x14, x25, x12
    7f5c:	sub	w15, w20, w12
    7f60:	and	w12, w14, #0x7f
    7f64:	mov	w13, wzr
    7f68:	lsr	x25, x14, #7
    7f6c:	add	w12, w12, #0xb
    7f70:	sub	w20, w15, #0x7
    7f74:	add	w14, w12, w8
    7f78:	cmp	w14, w9
    7f7c:	b.hi	8d74 <inflate@@Base+0x16cc>  // b.pmore
    7f80:	subs	w12, w12, #0x1
    7f84:	add	x14, x27, w8, uxtw #1
    7f88:	add	w8, w8, #0x1
    7f8c:	strh	w13, [x14, #152]
    7f90:	b.ne	7f80 <inflate@@Base+0x8d8>  // b.any
    7f94:	str	w8, [x27, #140]
    7f98:	ldur	x26, [x29, #-48]
    7f9c:	ldr	x28, [sp, #56]
    7fa0:	cmp	w8, w9
    7fa4:	b.cc	7dd4 <inflate@@Base+0x72c>  // b.lo, b.ul, b.last
    7fa8:	b	7fb4 <inflate@@Base+0x90c>
    7fac:	ldur	x26, [x29, #-48]
    7fb0:	ldr	x28, [sp, #56]
    7fb4:	ldrh	w8, [x27, #664]
    7fb8:	cbz	w8, 8084 <inflate@@Base+0x9dc>
    7fbc:	ldp	x4, x8, [sp, #32]
    7fc0:	ldr	x1, [sp, #24]
    7fc4:	mov	w0, #0x1                   	// #1
    7fc8:	mov	x3, x26
    7fcc:	str	x8, [x27, #144]
    7fd0:	str	x8, [x27, #104]
    7fd4:	mov	w8, #0x9                   	// #9
    7fd8:	mov	x5, x28
    7fdc:	str	w8, [x27, #120]
    7fe0:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    7fe4:	cbz	w0, 8104 <inflate@@Base+0xa5c>
    7fe8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    7fec:	add	x8, x8, #0x32
    7ff0:	stur	w0, [x29, #-28]
    7ff4:	b	8144 <inflate@@Base+0xa9c>
    7ff8:	mov	w8, #0x3f40                	// #16192
    7ffc:	b	8ca0 <inflate@@Base+0x15f8>
    8000:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    8004:	add	x8, x8, #0xf99
    8008:	b	8d60 <inflate@@Base+0x16b8>
    800c:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    8010:	add	x8, x8, #0xfb6
    8014:	b	8d60 <inflate@@Base+0x16b8>
    8018:	mov	x10, x22
    801c:	mov	w9, w24
    8020:	mov	w11, w20
    8024:	ldr	w13, [x27, #92]
    8028:	ldr	w14, [x27, #7148]
    802c:	mov	w12, #0xffffffff            	// #-1
    8030:	sub	w20, w11, w8
    8034:	lsl	w11, w12, w8
    8038:	bic	w11, w25, w11
    803c:	lsr	x25, x25, x8
    8040:	add	w11, w13, w11
    8044:	add	w8, w14, w8
    8048:	mov	x22, x10
    804c:	mov	w24, w9
    8050:	str	w11, [x27, #92]
    8054:	str	w8, [x27, #7148]
    8058:	b	89ec <inflate@@Base+0x1344>
    805c:	mov	w8, #0x3f44                	// #16196
    8060:	b	8074 <inflate@@Base+0x9cc>
    8064:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    8068:	add	x8, x8, #0xf86
    806c:	str	x8, [x19, #48]
    8070:	mov	w8, #0x3f51                	// #16209
    8074:	str	w8, [x0]
    8078:	lsr	x25, x25, #3
    807c:	sub	w20, w20, #0x3
    8080:	b	8d6c <inflate@@Base+0x16c4>
    8084:	ldr	w2, [sp, #8]
    8088:	ldur	w16, [x29, #-32]
    808c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8090:	add	x8, x8, #0xd
    8094:	mov	w9, #0x3f51                	// #16209
    8098:	str	x8, [x19, #48]
    809c:	str	w9, [x0]
    80a0:	mov	w28, #0xffffc0cc            	// #-16180
    80a4:	b	8d6c <inflate@@Base+0x16c4>
    80a8:	ldr	x9, [x27, #48]
    80ac:	str	wzr, [x27, #24]
    80b0:	cbz	x9, 80bc <inflate@@Base+0xa14>
    80b4:	mov	w10, #0xffffffff            	// #-1
    80b8:	str	w10, [x9, #72]
    80bc:	tbz	w8, #0, 80f8 <inflate@@Base+0xa50>
    80c0:	mov	x9, #0x7bdf                	// #31711
    80c4:	lsl	w8, w25, #8
    80c8:	movk	x9, #0xbdef, lsl #16
    80cc:	movk	x9, #0xdef7, lsl #32
    80d0:	and	x8, x8, #0xff00
    80d4:	movk	x9, #0xef7b, lsl #48
    80d8:	add	x8, x8, x25, lsr #8
    80dc:	mul	x8, x8, x9
    80e0:	mov	x9, #0x4211                	// #16913
    80e4:	movk	x9, #0x2108, lsl #16
    80e8:	movk	x9, #0x1084, lsl #32
    80ec:	movk	x9, #0x842, lsl #48
    80f0:	cmp	x8, x9
    80f4:	b.cc	8cc4 <inflate@@Base+0x161c>  // b.lo, b.ul, b.last
    80f8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    80fc:	add	x8, x8, #0x9b4
    8100:	b	8d60 <inflate@@Base+0x16b8>
    8104:	ldr	x8, [x27, #144]
    8108:	ldp	w10, w2, [x27, #132]
    810c:	ldr	x4, [sp, #16]
    8110:	mov	w9, #0x6                   	// #6
    8114:	str	x8, [x27, #112]
    8118:	add	x8, x27, x10, lsl #1
    811c:	add	x1, x8, #0x98
    8120:	mov	w0, #0x2                   	// #2
    8124:	mov	x3, x26
    8128:	mov	x5, x28
    812c:	str	w9, [x27, #124]
    8130:	bl	9768 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    8134:	cbz	w0, 87c4 <inflate@@Base+0x111c>
    8138:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    813c:	stur	w0, [x29, #-28]
    8140:	add	x8, x8, #0x4e
    8144:	str	x8, [x19, #48]
    8148:	ldur	x0, [x29, #-16]
    814c:	ldr	w2, [sp, #8]
    8150:	ldur	w16, [x29, #-32]
    8154:	mov	w9, #0x3f51                	// #16209
    8158:	str	w9, [x0]
    815c:	b	86ac <inflate@@Base+0x1004>
    8160:	ldr	x8, [x27, #48]
    8164:	cbz	x8, 8170 <inflate@@Base+0xac8>
    8168:	ubfx	w9, w25, #8, #1
    816c:	str	w9, [x8]
    8170:	tbz	w25, #9, 81b4 <inflate@@Base+0xb0c>
    8174:	ldrb	w8, [x27, #16]
    8178:	tbz	w8, #2, 81b4 <inflate@@Base+0xb0c>
    817c:	sturh	w25, [x29, #-4]
    8180:	ldur	x25, [x29, #-24]
    8184:	sub	x1, x29, #0x4
    8188:	mov	w20, w2
    818c:	mov	w2, #0x2                   	// #2
    8190:	ldr	x0, [x25]
    8194:	mov	w26, w16
    8198:	bl	2420 <crc32@plt>
    819c:	str	x0, [x25]
    81a0:	ldur	x0, [x29, #-16]
    81a4:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    81a8:	add	x4, x4, #0xc8
    81ac:	mov	w16, w26
    81b0:	mov	w2, w20
    81b4:	mov	w8, #0x3f36                	// #16182
    81b8:	mov	w20, wzr
    81bc:	mov	x25, xzr
    81c0:	str	w8, [x0]
    81c4:	mov	w20, w20
    81c8:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    81cc:	ldrb	w8, [x22], #1
    81d0:	sub	w24, w24, #0x1
    81d4:	cmp	x20, #0x18
    81d8:	lsl	x8, x8, x20
    81dc:	add	x20, x20, #0x8
    81e0:	add	x25, x8, x25
    81e4:	b.cc	81c8 <inflate@@Base+0xb20>  // b.lo, b.ul, b.last
    81e8:	ldr	x8, [x27, #48]
    81ec:	cbz	x8, 81f4 <inflate@@Base+0xb4c>
    81f0:	str	x25, [x8, #8]
    81f4:	ldrb	w8, [x27, #25]
    81f8:	tbz	w8, #1, 823c <inflate@@Base+0xb94>
    81fc:	ldrb	w8, [x27, #16]
    8200:	tbz	w8, #2, 823c <inflate@@Base+0xb94>
    8204:	stur	w25, [x29, #-4]
    8208:	ldur	x25, [x29, #-24]
    820c:	sub	x1, x29, #0x4
    8210:	mov	w20, w2
    8214:	mov	w2, #0x4                   	// #4
    8218:	ldr	x0, [x25]
    821c:	mov	w26, w16
    8220:	bl	2420 <crc32@plt>
    8224:	str	x0, [x25]
    8228:	ldur	x0, [x29, #-16]
    822c:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8230:	add	x4, x4, #0xc8
    8234:	mov	w16, w26
    8238:	mov	w2, w20
    823c:	mov	w8, #0x3f37                	// #16183
    8240:	mov	w20, wzr
    8244:	mov	x25, xzr
    8248:	str	w8, [x0]
    824c:	mov	w20, w20
    8250:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    8254:	ldrb	w8, [x22], #1
    8258:	sub	w24, w24, #0x1
    825c:	cmp	x20, #0x8
    8260:	lsl	x8, x8, x20
    8264:	add	x20, x20, #0x8
    8268:	add	x25, x8, x25
    826c:	b.cc	8250 <inflate@@Base+0xba8>  // b.lo, b.ul, b.last
    8270:	ldr	x8, [x27, #48]
    8274:	cbz	x8, 8284 <inflate@@Base+0xbdc>
    8278:	and	w9, w25, #0xff
    827c:	lsr	x10, x25, #8
    8280:	stp	w9, w10, [x8, #16]
    8284:	ldrb	w8, [x27, #25]
    8288:	tbz	w8, #1, 82cc <inflate@@Base+0xc24>
    828c:	ldrb	w8, [x27, #16]
    8290:	tbz	w8, #2, 82cc <inflate@@Base+0xc24>
    8294:	sturh	w25, [x29, #-4]
    8298:	ldur	x25, [x29, #-24]
    829c:	sub	x1, x29, #0x4
    82a0:	mov	w20, w2
    82a4:	mov	w2, #0x2                   	// #2
    82a8:	ldr	x0, [x25]
    82ac:	mov	w26, w16
    82b0:	bl	2420 <crc32@plt>
    82b4:	str	x0, [x25]
    82b8:	ldur	x0, [x29, #-16]
    82bc:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    82c0:	add	x4, x4, #0xc8
    82c4:	mov	w16, w26
    82c8:	mov	w2, w20
    82cc:	mov	x25, xzr
    82d0:	mov	w20, wzr
    82d4:	mov	w8, #0x3f38                	// #16184
    82d8:	str	w8, [x0]
    82dc:	ldr	w8, [x27, #24]
    82e0:	tbnz	w8, #10, 82f4 <inflate@@Base+0xc4c>
    82e4:	ldr	x8, [x27, #48]
    82e8:	cbz	x8, 837c <inflate@@Base+0xcd4>
    82ec:	str	xzr, [x8, #24]
    82f0:	b	837c <inflate@@Base+0xcd4>
    82f4:	cmp	w20, #0xf
    82f8:	b.hi	8320 <inflate@@Base+0xc78>  // b.pmore
    82fc:	mov	w20, w20
    8300:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    8304:	ldrb	w9, [x22], #1
    8308:	sub	w24, w24, #0x1
    830c:	cmp	x20, #0x8
    8310:	lsl	x9, x9, x20
    8314:	add	x20, x20, #0x8
    8318:	add	x25, x9, x25
    831c:	b.cc	8300 <inflate@@Base+0xc58>  // b.lo, b.ul, b.last
    8320:	ldr	x9, [x27, #48]
    8324:	str	w25, [x27, #92]
    8328:	cbz	x9, 8330 <inflate@@Base+0xc88>
    832c:	str	w25, [x9, #32]
    8330:	tbz	w8, #9, 8374 <inflate@@Base+0xccc>
    8334:	ldrb	w8, [x27, #16]
    8338:	tbz	w8, #2, 8374 <inflate@@Base+0xccc>
    833c:	ldur	x26, [x29, #-24]
    8340:	sturh	w25, [x29, #-4]
    8344:	sub	x1, x29, #0x4
    8348:	mov	w20, w2
    834c:	ldr	x0, [x26]
    8350:	mov	w2, #0x2                   	// #2
    8354:	mov	w25, w16
    8358:	bl	2420 <crc32@plt>
    835c:	str	x0, [x26]
    8360:	ldur	x0, [x29, #-16]
    8364:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8368:	add	x4, x4, #0xc8
    836c:	mov	w16, w25
    8370:	mov	w2, w20
    8374:	mov	x25, xzr
    8378:	mov	w20, wzr
    837c:	mov	w8, #0x3f39                	// #16185
    8380:	str	w8, [x0]
    8384:	ldr	w9, [x27, #24]
    8388:	tbz	w9, #10, 8460 <inflate@@Base+0xdb8>
    838c:	ldr	w8, [x27, #92]
    8390:	cmp	w8, w24
    8394:	csel	w26, w24, w8, hi  // hi = pmore
    8398:	cbz	w26, 845c <inflate@@Base+0xdb4>
    839c:	ldr	x10, [x27, #48]
    83a0:	cbz	x10, 83fc <inflate@@Base+0xd54>
    83a4:	ldr	x11, [x10, #24]
    83a8:	cbz	x11, 83fc <inflate@@Base+0xd54>
    83ac:	ldp	w9, w10, [x10, #32]
    83b0:	mov	w28, w23
    83b4:	mov	w23, w2
    83b8:	mov	x1, x22
    83bc:	sub	w8, w9, w8
    83c0:	add	w9, w8, w26
    83c4:	add	x0, x11, x8
    83c8:	sub	w8, w10, w8
    83cc:	cmp	w9, w10
    83d0:	csel	w2, w8, w26, hi  // hi = pmore
    83d4:	stur	w16, [x29, #-32]
    83d8:	bl	2390 <memcpy@plt>
    83dc:	ldur	w16, [x29, #-32]
    83e0:	ldur	x0, [x29, #-16]
    83e4:	ldr	w9, [x27, #24]
    83e8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    83ec:	add	x4, x4, #0xc8
    83f0:	mov	w2, w23
    83f4:	mov	w23, w28
    83f8:	mov	w28, #0xffffc0cc            	// #-16180
    83fc:	tbz	w9, #9, 8448 <inflate@@Base+0xda0>
    8400:	ldrb	w8, [x27, #16]
    8404:	tbz	w8, #2, 8448 <inflate@@Base+0xda0>
    8408:	ldur	x28, [x29, #-24]
    840c:	mov	x1, x22
    8410:	stur	w23, [x29, #-40]
    8414:	mov	w23, w2
    8418:	ldr	x0, [x28]
    841c:	mov	w2, w26
    8420:	stur	w16, [x29, #-32]
    8424:	bl	2420 <crc32@plt>
    8428:	mov	w2, w23
    842c:	ldur	w23, [x29, #-40]
    8430:	ldur	w16, [x29, #-32]
    8434:	str	x0, [x28]
    8438:	ldur	x0, [x29, #-16]
    843c:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8440:	add	x4, x4, #0xc8
    8444:	mov	w28, #0xffffc0cc            	// #-16180
    8448:	ldr	w8, [x27, #92]
    844c:	sub	w24, w24, w26
    8450:	add	x22, x22, w26, uxtw
    8454:	sub	w8, w8, w26
    8458:	str	w8, [x27, #92]
    845c:	cbnz	w8, 8dc0 <inflate@@Base+0x1718>
    8460:	mov	w8, #0x3f3a                	// #16186
    8464:	str	wzr, [x27, #92]
    8468:	str	w8, [x27, #8]
    846c:	ldrb	w8, [x27, #25]
    8470:	tbnz	w8, #3, 8484 <inflate@@Base+0xddc>
    8474:	ldr	x8, [x27, #48]
    8478:	cbz	x8, 8530 <inflate@@Base+0xe88>
    847c:	str	xzr, [x8, #40]
    8480:	b	8530 <inflate@@Base+0xe88>
    8484:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    8488:	stur	w23, [x29, #-40]
    848c:	mov	x26, xzr
    8490:	mov	w23, w24
    8494:	stur	w16, [x29, #-32]
    8498:	ldr	x9, [x27, #48]
    849c:	ldrb	w28, [x22, x26]
    84a0:	add	x26, x26, #0x1
    84a4:	cbz	x9, 84cc <inflate@@Base+0xe24>
    84a8:	ldr	x8, [x9, #40]
    84ac:	cbz	x8, 84cc <inflate@@Base+0xe24>
    84b0:	ldr	w10, [x27, #92]
    84b4:	ldr	w9, [x9, #48]
    84b8:	cmp	w10, w9
    84bc:	b.cs	84cc <inflate@@Base+0xe24>  // b.hs, b.nlast
    84c0:	add	w9, w10, #0x1
    84c4:	str	w9, [x27, #92]
    84c8:	strb	w28, [x8, x10]
    84cc:	cbz	w28, 84d8 <inflate@@Base+0xe30>
    84d0:	cmp	x26, x23
    84d4:	b.cc	8498 <inflate@@Base+0xdf0>  // b.lo, b.ul, b.last
    84d8:	ldrb	w8, [x27, #25]
    84dc:	tbz	w8, #1, 8518 <inflate@@Base+0xe70>
    84e0:	ldrb	w8, [x27, #16]
    84e4:	tbz	w8, #2, 8518 <inflate@@Base+0xe70>
    84e8:	ldur	x8, [x29, #-24]
    84ec:	mov	x1, x22
    84f0:	str	w2, [sp, #8]
    84f4:	mov	w2, w26
    84f8:	ldr	x0, [x8]
    84fc:	bl	2420 <crc32@plt>
    8500:	ldur	x8, [x29, #-24]
    8504:	ldr	w2, [sp, #8]
    8508:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    850c:	add	x4, x4, #0xc8
    8510:	str	x0, [x8]
    8514:	ldur	x0, [x29, #-16]
    8518:	add	x22, x22, x26
    851c:	cbnz	w28, 8f5c <inflate@@Base+0x18b4>
    8520:	sub	x24, x23, x26
    8524:	ldur	w23, [x29, #-40]
    8528:	ldur	w16, [x29, #-32]
    852c:	mov	w28, #0xffffc0cc            	// #-16180
    8530:	mov	w8, #0x3f3b                	// #16187
    8534:	str	wzr, [x27, #92]
    8538:	str	w8, [x27, #8]
    853c:	ldrb	w8, [x27, #25]
    8540:	tbnz	w8, #4, 8554 <inflate@@Base+0xeac>
    8544:	ldr	x8, [x27, #48]
    8548:	cbz	x8, 8600 <inflate@@Base+0xf58>
    854c:	str	xzr, [x8, #56]
    8550:	b	8600 <inflate@@Base+0xf58>
    8554:	cbz	w24, 8dc0 <inflate@@Base+0x1718>
    8558:	stur	w23, [x29, #-40]
    855c:	mov	x26, xzr
    8560:	mov	w23, w24
    8564:	stur	w16, [x29, #-32]
    8568:	ldr	x9, [x27, #48]
    856c:	ldrb	w28, [x22, x26]
    8570:	add	x26, x26, #0x1
    8574:	cbz	x9, 859c <inflate@@Base+0xef4>
    8578:	ldr	x8, [x9, #56]
    857c:	cbz	x8, 859c <inflate@@Base+0xef4>
    8580:	ldr	w10, [x27, #92]
    8584:	ldr	w9, [x9, #64]
    8588:	cmp	w10, w9
    858c:	b.cs	859c <inflate@@Base+0xef4>  // b.hs, b.nlast
    8590:	add	w9, w10, #0x1
    8594:	str	w9, [x27, #92]
    8598:	strb	w28, [x8, x10]
    859c:	cbz	w28, 85a8 <inflate@@Base+0xf00>
    85a0:	cmp	x26, x23
    85a4:	b.cc	8568 <inflate@@Base+0xec0>  // b.lo, b.ul, b.last
    85a8:	ldrb	w8, [x27, #25]
    85ac:	tbz	w8, #1, 85e8 <inflate@@Base+0xf40>
    85b0:	ldrb	w8, [x27, #16]
    85b4:	tbz	w8, #2, 85e8 <inflate@@Base+0xf40>
    85b8:	ldur	x8, [x29, #-24]
    85bc:	mov	x1, x22
    85c0:	str	w2, [sp, #8]
    85c4:	mov	w2, w26
    85c8:	ldr	x0, [x8]
    85cc:	bl	2420 <crc32@plt>
    85d0:	ldur	x8, [x29, #-24]
    85d4:	ldr	w2, [sp, #8]
    85d8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    85dc:	add	x4, x4, #0xc8
    85e0:	str	x0, [x8]
    85e4:	ldur	x0, [x29, #-16]
    85e8:	add	x22, x22, x26
    85ec:	cbnz	w28, 8f5c <inflate@@Base+0x18b4>
    85f0:	sub	x24, x23, x26
    85f4:	ldur	w23, [x29, #-40]
    85f8:	ldur	w16, [x29, #-32]
    85fc:	mov	w28, #0xffffc0cc            	// #-16180
    8600:	mov	w8, #0x3f3c                	// #16188
    8604:	str	w8, [x0]
    8608:	ldr	w8, [x27, #24]
    860c:	tbz	w8, #9, 8660 <inflate@@Base+0xfb8>
    8610:	cmp	w20, #0xf
    8614:	b.hi	8640 <inflate@@Base+0xf98>  // b.pmore
    8618:	mov	w9, w20
    861c:	cbz	w24, 8dac <inflate@@Base+0x1704>
    8620:	ldrb	w10, [x22], #1
    8624:	add	x20, x9, #0x8
    8628:	sub	w24, w24, #0x1
    862c:	cmp	x9, #0x8
    8630:	lsl	x10, x10, x9
    8634:	add	x25, x10, x25
    8638:	mov	x9, x20
    863c:	b.cc	861c <inflate@@Base+0xf74>  // b.lo, b.ul, b.last
    8640:	ldrb	w9, [x27, #16]
    8644:	tbz	w9, #2, 8658 <inflate@@Base+0xfb0>
    8648:	ldur	x9, [x29, #-24]
    864c:	ldrh	w9, [x9]
    8650:	cmp	x25, x9
    8654:	b.ne	86b8 <inflate@@Base+0x1010>  // b.any
    8658:	mov	x25, xzr
    865c:	mov	w20, wzr
    8660:	ldr	x9, [x27, #48]
    8664:	mov	w28, w16
    8668:	mov	w26, w2
    866c:	cbz	x9, 867c <inflate@@Base+0xfd4>
    8670:	ubfx	w8, w8, #9, #1
    8674:	mov	w10, #0x1                   	// #1
    8678:	stp	w8, w10, [x9, #68]
    867c:	mov	x0, xzr
    8680:	mov	x1, xzr
    8684:	mov	w2, wzr
    8688:	bl	2420 <crc32@plt>
    868c:	ldur	x8, [x29, #-24]
    8690:	mov	w2, w26
    8694:	mov	w16, w28
    8698:	str	x0, [x8]
    869c:	str	x0, [x19, #96]
    86a0:	ldur	x0, [x29, #-16]
    86a4:	mov	w8, #0x3f3f                	// #16191
    86a8:	str	w8, [x0]
    86ac:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    86b0:	mov	w28, #0xffffc0cc            	// #-16180
    86b4:	b	886c <inflate@@Base+0x11c4>
    86b8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    86bc:	add	x8, x8, #0xa13
    86c0:	b	8d60 <inflate@@Base+0x16b8>
    86c4:	bl	2540 <adler32@plt>
    86c8:	str	x0, [x27, #32]
    86cc:	str	x0, [x19, #96]
    86d0:	ldr	w8, [x27, #16]
    86d4:	ldur	x0, [x29, #-16]
    86d8:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    86dc:	add	x4, x4, #0xc8
    86e0:	and	w8, w8, #0x4
    86e4:	cbz	w8, 8738 <inflate@@Base+0x1090>
    86e8:	ldr	w9, [x27, #24]
    86ec:	mov	x8, x25
    86f0:	mov	w2, w26
    86f4:	cbnz	w9, 8718 <inflate@@Base+0x1070>
    86f8:	lsr	x8, x25, #8
    86fc:	lsl	w9, w25, #8
    8700:	and	x8, x8, #0xff00
    8704:	and	x9, x9, #0xff0000
    8708:	bfxil	x8, x25, #24, #8
    870c:	orr	x8, x8, x9
    8710:	lsl	w9, w25, #24
    8714:	orr	x8, x8, x9
    8718:	ldur	x9, [x29, #-24]
    871c:	ldr	x9, [x9]
    8720:	cmp	x8, x9
    8724:	b.ne	87a8 <inflate@@Base+0x1100>  // b.any
    8728:	mov	x25, xzr
    872c:	mov	w20, wzr
    8730:	mov	w16, w2
    8734:	b	8748 <inflate@@Base+0x10a0>
    8738:	mov	x25, xzr
    873c:	mov	w20, wzr
    8740:	mov	w2, w26
    8744:	mov	w16, w26
    8748:	mov	w8, #0x3f4f                	// #16207
    874c:	str	w8, [x0]
    8750:	ldr	w8, [x27, #16]
    8754:	cbz	w8, 8fbc <inflate@@Base+0x1914>
    8758:	ldr	w8, [x27, #24]
    875c:	cbz	w8, 8fbc <inflate@@Base+0x1914>
    8760:	cmp	w20, #0x1f
    8764:	b.hi	8790 <inflate@@Base+0x10e8>  // b.pmore
    8768:	mov	w8, w20
    876c:	cbz	w24, 8dbc <inflate@@Base+0x1714>
    8770:	ldrb	w9, [x22], #1
    8774:	add	x20, x8, #0x8
    8778:	sub	w24, w24, #0x1
    877c:	cmp	x8, #0x18
    8780:	lsl	x9, x9, x8
    8784:	add	x25, x9, x25
    8788:	mov	x8, x20
    878c:	b.cc	876c <inflate@@Base+0x10c4>  // b.lo, b.ul, b.last
    8790:	ldr	w8, [x27, #40]
    8794:	cmp	x25, x8
    8798:	b.eq	8fb4 <inflate@@Base+0x190c>  // b.none
    879c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    87a0:	add	x8, x8, #0xa3c
    87a4:	b	8d60 <inflate@@Base+0x16b8>
    87a8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    87ac:	add	x8, x8, #0xa27
    87b0:	mov	w9, #0x3f51                	// #16209
    87b4:	str	x8, [x19, #48]
    87b8:	str	w9, [x0]
    87bc:	mov	w16, w2
    87c0:	b	8d6c <inflate@@Base+0x16c4>
    87c4:	ldur	x0, [x29, #-16]
    87c8:	ldr	w2, [sp, #8]
    87cc:	ldur	w16, [x29, #-32]
    87d0:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    87d4:	mov	w8, #0x3f47                	// #16199
    87d8:	cmp	w23, #0x6
    87dc:	mov	w28, #0xffffc0cc            	// #-16180
    87e0:	add	x4, x4, #0xc8
    87e4:	stur	wzr, [x29, #-28]
    87e8:	str	w8, [x0]
    87ec:	b.eq	8dc0 <inflate@@Base+0x1718>  // b.none
    87f0:	mov	w8, #0x3f48                	// #16200
    87f4:	str	w8, [x0]
    87f8:	cmp	w2, #0x102
    87fc:	b.cc	8874 <inflate@@Base+0x11cc>  // b.lo, b.ul, b.last
    8800:	cmp	w24, #0x6
    8804:	b.cc	8874 <inflate@@Base+0x11cc>  // b.lo, b.ul, b.last
    8808:	mov	x0, x19
    880c:	mov	w1, w16
    8810:	str	x21, [x19, #24]
    8814:	str	w2, [x19, #32]
    8818:	str	x22, [x19]
    881c:	str	w24, [x19, #8]
    8820:	str	x25, [x27, #80]
    8824:	str	w20, [x27, #88]
    8828:	mov	w26, w16
    882c:	bl	6ef0 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    8830:	ldr	w8, [x27, #8]
    8834:	ldr	x21, [x19, #24]
    8838:	ldr	w2, [x19, #32]
    883c:	ldr	x22, [x19]
    8840:	ldr	w24, [x19, #8]
    8844:	ldr	x25, [x27, #80]
    8848:	ldr	w20, [x27, #88]
    884c:	mov	w9, #0x3f3f                	// #16191
    8850:	cmp	w8, w9
    8854:	b.ne	8860 <inflate@@Base+0x11b8>  // b.any
    8858:	mov	w8, #0xffffffff            	// #-1
    885c:	str	w8, [x27, #7148]
    8860:	ldur	x0, [x29, #-16]
    8864:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8868:	mov	w16, w26
    886c:	add	x4, x4, #0xc8
    8870:	b	8d6c <inflate@@Base+0x16c4>
    8874:	ldr	w8, [x27, #120]
    8878:	ldr	x9, [x27, #104]
    887c:	mov	w10, #0xffffffff            	// #-1
    8880:	str	wzr, [x27, #7148]
    8884:	lsl	w10, w10, w8
    8888:	bic	w13, w25, w10
    888c:	add	x8, x9, w13, uxtw #2
    8890:	ldrb	w8, [x8, #1]
    8894:	cmp	w20, w8
    8898:	b.cs	88e8 <inflate@@Base+0x1240>  // b.hs, b.nlast
    889c:	mvn	w13, w10
    88a0:	mov	w10, w20
    88a4:	mov	w11, w24
    88a8:	mov	x12, x22
    88ac:	cbz	w11, 8db4 <inflate@@Base+0x170c>
    88b0:	ldrb	w8, [x12], #1
    88b4:	sub	w11, w11, #0x1
    88b8:	lsl	x8, x8, x10
    88bc:	add	x25, x8, x25
    88c0:	and	w14, w13, w25
    88c4:	add	x8, x9, w14, uxtw #2
    88c8:	ldrb	w8, [x8, #1]
    88cc:	add	x10, x10, #0x8
    88d0:	cmp	x10, x8
    88d4:	b.cc	88ac <inflate@@Base+0x1204>  // b.lo, b.ul, b.last
    88d8:	mov	w13, w14
    88dc:	mov	x22, x12
    88e0:	mov	w24, w11
    88e4:	mov	w20, w10
    88e8:	add	x11, x9, x13, lsl #2
    88ec:	ldrb	w12, [x11]
    88f0:	ldrh	w11, [x11, #2]
    88f4:	mov	w10, w8
    88f8:	cbz	w12, 89b0 <inflate@@Base+0x1308>
    88fc:	and	w13, w12, #0xf0
    8900:	cbnz	w13, 89b0 <inflate@@Base+0x1308>
    8904:	add	w12, w10, w12
    8908:	mov	w13, #0xffffffff            	// #-1
    890c:	lsl	w12, w13, w12
    8910:	bic	w13, w25, w12
    8914:	lsr	w13, w13, w10
    8918:	add	w15, w13, w11
    891c:	add	x13, x9, w15, uxtw #2
    8920:	ldrb	w13, [x13, #1]
    8924:	add	w14, w10, w13
    8928:	cmp	w14, w20
    892c:	b.ls	8990 <inflate@@Base+0x12e8>  // b.plast
    8930:	mov	w1, w16
    8934:	mvn	w15, w12
    8938:	mov	w12, w20
    893c:	mov	w14, w24
    8940:	mov	x16, x22
    8944:	cbz	w14, 8f68 <inflate@@Base+0x18c0>
    8948:	ldrb	w13, [x16], #1
    894c:	sub	w14, w14, #0x1
    8950:	lsl	x13, x13, x12
    8954:	add	x25, x13, x25
    8958:	and	w13, w25, w15
    895c:	lsr	w13, w13, w10
    8960:	add	w17, w13, w11
    8964:	add	x13, x9, w17, uxtw #2
    8968:	ldrb	w13, [x13, #1]
    896c:	add	x12, x12, #0x8
    8970:	add	x18, x10, x13
    8974:	cmp	x12, x18
    8978:	b.cc	8944 <inflate@@Base+0x129c>  // b.lo, b.ul, b.last
    897c:	mov	w15, w17
    8980:	mov	x22, x16
    8984:	mov	w24, w14
    8988:	mov	w20, w12
    898c:	mov	w16, w1
    8990:	add	x9, x9, x15, lsl #2
    8994:	ldrh	w11, [x9, #2]
    8998:	ldrb	w12, [x9]
    899c:	lsr	x25, x25, x8
    89a0:	sub	w20, w20, w10
    89a4:	mov	w8, w13
    89a8:	str	w10, [x27, #7148]
    89ac:	b	89b4 <inflate@@Base+0x130c>
    89b0:	mov	w10, wzr
    89b4:	lsr	x25, x25, x8
    89b8:	sub	w20, w20, w8
    89bc:	add	w8, w10, w8
    89c0:	str	w8, [x27, #7148]
    89c4:	str	w11, [x27, #92]
    89c8:	cbz	w12, 8c9c <inflate@@Base+0x15f4>
    89cc:	tbnz	w12, #5, 8ca8 <inflate@@Base+0x1600>
    89d0:	tbnz	w12, #6, 8cb8 <inflate@@Base+0x1610>
    89d4:	and	w8, w12, #0xf
    89d8:	mov	w9, #0x3f49                	// #16201
    89dc:	str	w8, [x27, #100]
    89e0:	str	w9, [x27, #8]
    89e4:	cbnz	w8, 7ca8 <inflate@@Base+0x600>
    89e8:	ldr	w11, [x27, #92]
    89ec:	mov	w8, #0x3f4a                	// #16202
    89f0:	str	w11, [x27, #7152]
    89f4:	str	w8, [x27, #8]
    89f8:	ldr	w8, [x27, #124]
    89fc:	ldr	x9, [x27, #112]
    8a00:	mov	w10, #0xffffffff            	// #-1
    8a04:	lsl	w10, w10, w8
    8a08:	bic	w13, w25, w10
    8a0c:	add	x8, x9, w13, uxtw #2
    8a10:	ldrb	w8, [x8, #1]
    8a14:	cmp	w20, w8
    8a18:	b.cs	8a68 <inflate@@Base+0x13c0>  // b.hs, b.nlast
    8a1c:	mvn	w13, w10
    8a20:	mov	w10, w20
    8a24:	mov	w11, w24
    8a28:	mov	x12, x22
    8a2c:	cbz	w11, 8db4 <inflate@@Base+0x170c>
    8a30:	ldrb	w8, [x12], #1
    8a34:	sub	w11, w11, #0x1
    8a38:	lsl	x8, x8, x10
    8a3c:	add	x25, x8, x25
    8a40:	and	w14, w13, w25
    8a44:	add	x8, x9, w14, uxtw #2
    8a48:	ldrb	w8, [x8, #1]
    8a4c:	add	x10, x10, #0x8
    8a50:	cmp	x10, x8
    8a54:	b.cc	8a2c <inflate@@Base+0x1384>  // b.lo, b.ul, b.last
    8a58:	mov	w13, w14
    8a5c:	mov	x22, x12
    8a60:	mov	w24, w11
    8a64:	mov	w20, w10
    8a68:	add	x10, x9, x13, lsl #2
    8a6c:	ldrb	w12, [x10]
    8a70:	ldrh	w10, [x10, #2]
    8a74:	tst	w12, #0xf0
    8a78:	b.eq	8a84 <inflate@@Base+0x13dc>  // b.none
    8a7c:	ldr	w9, [x27, #7148]
    8a80:	b	8b34 <inflate@@Base+0x148c>
    8a84:	add	w11, w8, w12
    8a88:	mov	w12, #0xffffffff            	// #-1
    8a8c:	lsl	w12, w12, w11
    8a90:	bic	w11, w25, w12
    8a94:	lsr	w11, w11, w8
    8a98:	add	w14, w11, w10
    8a9c:	add	x11, x9, w14, uxtw #2
    8aa0:	ldrb	w11, [x11, #1]
    8aa4:	add	w13, w8, w11
    8aa8:	cmp	w13, w20
    8aac:	b.ls	8b10 <inflate@@Base+0x1468>  // b.plast
    8ab0:	mov	w18, w16
    8ab4:	mvn	w14, w12
    8ab8:	mov	w12, w20
    8abc:	mov	w13, w24
    8ac0:	mov	x15, x22
    8ac4:	cbz	w13, 8f44 <inflate@@Base+0x189c>
    8ac8:	ldrb	w11, [x15], #1
    8acc:	sub	w13, w13, #0x1
    8ad0:	lsl	x11, x11, x12
    8ad4:	add	x25, x11, x25
    8ad8:	and	w11, w25, w14
    8adc:	lsr	w11, w11, w8
    8ae0:	add	w16, w11, w10
    8ae4:	add	x11, x9, w16, uxtw #2
    8ae8:	ldrb	w11, [x11, #1]
    8aec:	add	x12, x12, #0x8
    8af0:	add	x17, x8, x11
    8af4:	cmp	x12, x17
    8af8:	b.cc	8ac4 <inflate@@Base+0x141c>  // b.lo, b.ul, b.last
    8afc:	mov	w14, w16
    8b00:	mov	x22, x15
    8b04:	mov	w24, w13
    8b08:	mov	w20, w12
    8b0c:	mov	w16, w18
    8b10:	add	x9, x9, x14, lsl #2
    8b14:	ldr	w13, [x27, #7148]
    8b18:	ldrh	w10, [x9, #2]
    8b1c:	ldrb	w12, [x9]
    8b20:	lsr	x25, x25, x8
    8b24:	sub	w20, w20, w8
    8b28:	add	w9, w13, w8
    8b2c:	mov	w8, w11
    8b30:	str	w9, [x27, #7148]
    8b34:	lsr	x25, x25, x8
    8b38:	sub	w20, w20, w8
    8b3c:	add	w8, w9, w8
    8b40:	str	w8, [x27, #7148]
    8b44:	tbnz	w12, #6, 8b94 <inflate@@Base+0x14ec>
    8b48:	and	w8, w12, #0xf
    8b4c:	mov	w9, #0x3f4b                	// #16203
    8b50:	stp	w10, w8, [x27, #96]
    8b54:	str	w9, [x27, #8]
    8b58:	cbz	w8, 8be0 <inflate@@Base+0x1538>
    8b5c:	cmp	w20, w8
    8b60:	b.cs	8ba0 <inflate@@Base+0x14f8>  // b.hs, b.nlast
    8b64:	mov	w11, w20
    8b68:	mov	w9, w24
    8b6c:	mov	x10, x22
    8b70:	cbz	w9, 8db4 <inflate@@Base+0x170c>
    8b74:	ldrb	w12, [x10], #1
    8b78:	sub	w9, w9, #0x1
    8b7c:	lsl	x12, x12, x11
    8b80:	add	w11, w11, #0x8
    8b84:	cmp	w11, w8
    8b88:	add	x25, x12, x25
    8b8c:	b.cc	8b70 <inflate@@Base+0x14c8>  // b.lo, b.ul, b.last
    8b90:	b	8bac <inflate@@Base+0x1504>
    8b94:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8b98:	add	x8, x8, #0x80
    8b9c:	b	8d60 <inflate@@Base+0x16b8>
    8ba0:	mov	x10, x22
    8ba4:	mov	w9, w24
    8ba8:	mov	w11, w20
    8bac:	ldr	w13, [x27, #96]
    8bb0:	sub	w20, w11, w8
    8bb4:	ldr	w11, [x27, #7148]
    8bb8:	mov	w12, #0xffffffff            	// #-1
    8bbc:	lsl	w12, w12, w8
    8bc0:	bic	w12, w25, w12
    8bc4:	lsr	x25, x25, x8
    8bc8:	add	w12, w13, w12
    8bcc:	add	w8, w11, w8
    8bd0:	mov	x22, x10
    8bd4:	mov	w24, w9
    8bd8:	str	w12, [x27, #96]
    8bdc:	str	w8, [x27, #7148]
    8be0:	mov	w8, #0x3f4c                	// #16204
    8be4:	str	w8, [x0]
    8be8:	cbz	w2, 8dc0 <inflate@@Base+0x1718>
    8bec:	ldr	w8, [x27, #96]
    8bf0:	sub	w9, w16, w2
    8bf4:	cmp	w8, w9
    8bf8:	b.ls	8c20 <inflate@@Base+0x1578>  // b.plast
    8bfc:	ldr	w10, [x27, #64]
    8c00:	sub	w8, w8, w9
    8c04:	cmp	w8, w10
    8c08:	b.ls	8c30 <inflate@@Base+0x1588>  // b.plast
    8c0c:	ldr	w9, [x27, #7144]
    8c10:	cbz	w9, 8c30 <inflate@@Base+0x1588>
    8c14:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8c18:	add	x8, x8, #0x96
    8c1c:	b	8d60 <inflate@@Base+0x16b8>
    8c20:	ldr	w10, [x27, #92]
    8c24:	sub	x8, x21, x8
    8c28:	mov	w9, w10
    8c2c:	b	8c64 <inflate@@Base+0x15bc>
    8c30:	ldr	w10, [x27, #68]
    8c34:	subs	w9, w8, w10
    8c38:	b.ls	8c48 <inflate@@Base+0x15a0>  // b.plast
    8c3c:	ldr	w8, [x27, #60]
    8c40:	sub	w11, w8, w9
    8c44:	b	8c50 <inflate@@Base+0x15a8>
    8c48:	sub	w11, w10, w8
    8c4c:	mov	w9, w8
    8c50:	ldr	w10, [x27, #92]
    8c54:	ldr	x8, [x27, #72]
    8c58:	cmp	w9, w10
    8c5c:	add	x8, x8, w11, uxtw
    8c60:	csel	w9, w10, w9, hi  // hi = pmore
    8c64:	cmp	w9, w2
    8c68:	csel	w9, w2, w9, hi  // hi = pmore
    8c6c:	sub	w10, w10, w9
    8c70:	str	w10, [x27, #92]
    8c74:	mov	w10, w9
    8c78:	ldrb	w11, [x8], #1
    8c7c:	subs	w10, w10, #0x1
    8c80:	strb	w11, [x21], #1
    8c84:	b.ne	8c78 <inflate@@Base+0x15d0>  // b.any
    8c88:	ldr	w8, [x27, #92]
    8c8c:	sub	w2, w2, w9
    8c90:	cbnz	w8, 8d6c <inflate@@Base+0x16c4>
    8c94:	mov	w8, #0x3f48                	// #16200
    8c98:	b	8ca0 <inflate@@Base+0x15f8>
    8c9c:	mov	w8, #0x3f4d                	// #16205
    8ca0:	str	w8, [x0]
    8ca4:	b	8d6c <inflate@@Base+0x16c4>
    8ca8:	mov	w8, #0xffffffff            	// #-1
    8cac:	mov	w9, #0x3f3f                	// #16191
    8cb0:	str	w8, [x27, #7148]
    8cb4:	b	7cfc <inflate@@Base+0x654>
    8cb8:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8cbc:	add	x8, x8, #0x64
    8cc0:	b	8d60 <inflate@@Base+0x16b8>
    8cc4:	and	x8, x25, #0xf
    8cc8:	cmp	x8, #0x8
    8ccc:	b.ne	8d58 <inflate@@Base+0x16b0>  // b.any
    8cd0:	ldr	w10, [x27, #56]
    8cd4:	ubfx	x8, x25, #4, #4
    8cd8:	add	w9, w8, #0x8
    8cdc:	cbnz	w10, 8ce8 <inflate@@Base+0x1640>
    8ce0:	mov	w10, w9
    8ce4:	str	w9, [x27, #56]
    8ce8:	cmp	w8, #0x7
    8cec:	b.hi	8d8c <inflate@@Base+0x16e4>  // b.pmore
    8cf0:	cmp	w9, w10
    8cf4:	b.hi	8d8c <inflate@@Base+0x16e4>  // b.pmore
    8cf8:	mov	w9, #0x100                 	// #256
    8cfc:	lsl	w8, w9, w8
    8d00:	mov	x0, xzr
    8d04:	mov	x1, xzr
    8d08:	mov	w20, w2
    8d0c:	mov	w2, wzr
    8d10:	str	w8, [x27, #28]
    8d14:	mov	w26, w16
    8d18:	bl	2540 <adler32@plt>
    8d1c:	str	x0, [x27, #32]
    8d20:	str	x0, [x19, #96]
    8d24:	ldur	x0, [x29, #-16]
    8d28:	tst	x25, #0x2000
    8d2c:	mov	w8, #0x3f3d                	// #16189
    8d30:	mov	w9, #0x3f3f                	// #16191
    8d34:	adrp	x4, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8d38:	csel	w8, w9, w8, eq  // eq = none
    8d3c:	add	x4, x4, #0xc8
    8d40:	mov	w16, w26
    8d44:	mov	w2, w20
    8d48:	mov	w20, wzr
    8d4c:	str	w8, [x27, #8]
    8d50:	mov	x25, xzr
    8d54:	b	8d6c <inflate@@Base+0x16c4>
    8d58:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8d5c:	add	x8, x8, #0x9cb
    8d60:	mov	w9, #0x3f51                	// #16209
    8d64:	str	x8, [x19, #48]
    8d68:	str	w9, [x0]
    8d6c:	ldr	w8, [x0]
    8d70:	b	779c <inflate@@Base+0xf4>
    8d74:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    8d78:	add	x8, x8, #0xff3
    8d7c:	str	x8, [x19, #48]
    8d80:	ldr	w2, [sp, #8]
    8d84:	mov	w9, #0x3f51                	// #16209
    8d88:	b	8d68 <inflate@@Base+0x16c0>
    8d8c:	adrp	x8, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    8d90:	lsr	x25, x25, #4
    8d94:	sub	w20, w20, #0x4
    8d98:	add	x8, x8, #0x9e6
    8d9c:	b	8d60 <inflate@@Base+0x16b8>
    8da0:	ldr	w8, [x19, #8]
    8da4:	cbnz	w8, 76d8 <inflate@@Base+0x30>
    8da8:	b	770c <inflate@@Base+0x64>
    8dac:	mov	w20, w9
    8db0:	b	8dc0 <inflate@@Base+0x1718>
    8db4:	ldur	w26, [x29, #-28]
    8db8:	b	8dd0 <inflate@@Base+0x1728>
    8dbc:	mov	w20, w8
    8dc0:	ldur	w26, [x29, #-28]
    8dc4:	b	8ddc <inflate@@Base+0x1734>
    8dc8:	ldp	w16, w26, [x29, #-32]
    8dcc:	ldr	w2, [sp, #8]
    8dd0:	add	w20, w20, w24, lsl #3
    8dd4:	add	x22, x22, w24, uxtw
    8dd8:	mov	w24, wzr
    8ddc:	str	x21, [x19, #24]
    8de0:	str	w2, [x19, #32]
    8de4:	str	x22, [x19]
    8de8:	str	w24, [x19, #8]
    8dec:	ldr	w8, [x27, #60]
    8df0:	str	x25, [x27, #80]
    8df4:	str	w20, [x27, #88]
    8df8:	cbz	w8, 8e28 <inflate@@Base+0x1780>
    8dfc:	sub	w2, w16, w2
    8e00:	mov	x0, x19
    8e04:	mov	x1, x21
    8e08:	mov	w20, w16
    8e0c:	bl	8fd8 <inflate@@Base+0x1930>
    8e10:	cbz	w0, 8e58 <inflate@@Base+0x17b0>
    8e14:	ldur	x9, [x29, #-16]
    8e18:	mov	w8, #0x3f52                	// #16210
    8e1c:	str	w8, [x9]
    8e20:	mov	w0, #0xfffffffc            	// #-4
    8e24:	b	76dc <inflate@@Base+0x34>
    8e28:	cmp	w16, w2
    8e2c:	b.eq	8e64 <inflate@@Base+0x17bc>  // b.none
    8e30:	ldr	w8, [x0]
    8e34:	mov	w9, #0x3f50                	// #16208
    8e38:	cmp	w8, w9
    8e3c:	b.hi	8e64 <inflate@@Base+0x17bc>  // b.pmore
    8e40:	cmp	w23, #0x4
    8e44:	b.ne	8dfc <inflate@@Base+0x1754>  // b.any
    8e48:	mov	w9, #0x3f4d                	// #16205
    8e4c:	cmp	w8, w9
    8e50:	b.hi	8e64 <inflate@@Base+0x17bc>  // b.pmore
    8e54:	b	8dfc <inflate@@Base+0x1754>
    8e58:	ldr	w24, [x19, #8]
    8e5c:	ldr	w2, [x19, #32]
    8e60:	mov	w16, w20
    8e64:	ldur	w10, [x29, #-36]
    8e68:	ldr	x8, [x19, #16]
    8e6c:	ldr	x9, [x19, #40]
    8e70:	subs	w21, w16, w2
    8e74:	sub	w20, w10, w24
    8e78:	add	x8, x8, x20
    8e7c:	add	x9, x9, x21
    8e80:	str	x8, [x19, #16]
    8e84:	str	x9, [x19, #40]
    8e88:	ldr	x8, [x27, #40]
    8e8c:	add	x8, x8, x21
    8e90:	str	x8, [x27, #40]
    8e94:	b.eq	8ed0 <inflate@@Base+0x1828>  // b.none
    8e98:	ldr	w8, [x27, #16]
    8e9c:	tbz	w8, #2, 8ed0 <inflate@@Base+0x1828>
    8ea0:	ldr	x9, [x19, #24]
    8ea4:	ldr	w8, [x27, #24]
    8ea8:	ldr	x0, [x27, #32]
    8eac:	mov	w2, w21
    8eb0:	sub	x1, x9, x21
    8eb4:	cbz	w8, 8ec0 <inflate@@Base+0x1818>
    8eb8:	bl	2420 <crc32@plt>
    8ebc:	b	8ec4 <inflate@@Base+0x181c>
    8ec0:	bl	2540 <adler32@plt>
    8ec4:	ldur	x8, [x29, #-24]
    8ec8:	str	x0, [x8]
    8ecc:	str	x0, [x19, #96]
    8ed0:	ldp	w10, w9, [x27, #8]
    8ed4:	ldr	w8, [x27, #88]
    8ed8:	mov	w12, #0x3f3f                	// #16191
    8edc:	orr	w11, w21, w20
    8ee0:	cmp	w9, #0x0
    8ee4:	cset	w9, ne  // ne = any
    8ee8:	cmp	w10, w12
    8eec:	mov	w12, #0x3f42                	// #16194
    8ef0:	add	w8, w8, w9, lsl #6
    8ef4:	cset	w9, eq  // eq = none
    8ef8:	cmp	w10, w12
    8efc:	mov	w12, #0x3f47                	// #16199
    8f00:	add	w8, w8, w9, lsl #7
    8f04:	mov	w9, #0x100                 	// #256
    8f08:	ccmp	w10, w12, #0x4, ne  // ne = any
    8f0c:	csel	w9, w9, wzr, eq  // eq = none
    8f10:	cmp	w11, #0x0
    8f14:	add	w8, w8, w9
    8f18:	ccmp	w23, #0x4, #0x4, ne  // ne = any
    8f1c:	str	w8, [x19, #88]
    8f20:	ccmp	w26, #0x0, #0x0, eq  // eq = none
    8f24:	mov	w8, #0xfffffffb            	// #-5
    8f28:	csel	w0, w8, w26, eq  // eq = none
    8f2c:	b	76dc <inflate@@Base+0x34>
    8f30:	mov	w26, #0xfffffffd            	// #-3
    8f34:	b	8ddc <inflate@@Base+0x1734>
    8f38:	ldur	w26, [x29, #-28]
    8f3c:	ldr	w2, [sp, #8]
    8f40:	b	8ddc <inflate@@Base+0x1734>
    8f44:	ldur	w26, [x29, #-28]
    8f48:	add	w20, w20, w24, lsl #3
    8f4c:	add	x22, x22, w24, uxtw
    8f50:	mov	w24, wzr
    8f54:	mov	w16, w18
    8f58:	b	8ddc <inflate@@Base+0x1734>
    8f5c:	sub	w24, w24, w26
    8f60:	ldur	w26, [x29, #-28]
    8f64:	b	8fa8 <inflate@@Base+0x1900>
    8f68:	ldur	w26, [x29, #-28]
    8f6c:	add	w20, w20, w24, lsl #3
    8f70:	add	x22, x22, w24, uxtw
    8f74:	mov	w24, wzr
    8f78:	mov	w16, w1
    8f7c:	b	8ddc <inflate@@Base+0x1734>
    8f80:	str	x21, [x19, #24]
    8f84:	str	w2, [x19, #32]
    8f88:	str	x22, [x19]
    8f8c:	str	w24, [x19, #8]
    8f90:	str	x25, [x27, #80]
    8f94:	str	w20, [x27, #88]
    8f98:	mov	w0, #0x2                   	// #2
    8f9c:	b	76dc <inflate@@Base+0x34>
    8fa0:	ldur	w26, [x29, #-28]
    8fa4:	ldr	x19, [sp, #8]
    8fa8:	ldur	w23, [x29, #-40]
    8fac:	ldur	w16, [x29, #-32]
    8fb0:	b	8ddc <inflate@@Base+0x1734>
    8fb4:	mov	x25, xzr
    8fb8:	mov	w20, wzr
    8fbc:	mov	w8, #0x3f50                	// #16208
    8fc0:	str	w8, [x0]
    8fc4:	mov	w26, #0x1                   	// #1
    8fc8:	b	8ddc <inflate@@Base+0x1734>
    8fcc:	lsr	x25, x25, #3
    8fd0:	sub	w20, w20, #0x3
    8fd4:	b	8dc0 <inflate@@Base+0x1718>
    8fd8:	stp	x29, x30, [sp, #-64]!
    8fdc:	stp	x22, x21, [sp, #32]
    8fe0:	stp	x20, x19, [sp, #48]
    8fe4:	str	x23, [sp, #16]
    8fe8:	ldr	x23, [x0, #56]
    8fec:	mov	x8, x0
    8ff0:	mov	w20, w2
    8ff4:	mov	x19, x1
    8ff8:	ldr	x0, [x23, #72]
    8ffc:	mov	x29, sp
    9000:	cbnz	x0, 9028 <inflate@@Base+0x1980>
    9004:	ldr	w10, [x23, #56]
    9008:	ldr	x9, [x8, #64]
    900c:	ldr	x0, [x8, #80]
    9010:	mov	w21, #0x1                   	// #1
    9014:	lsl	w1, w21, w10
    9018:	mov	w2, #0x1                   	// #1
    901c:	blr	x9
    9020:	str	x0, [x23, #72]
    9024:	cbz	x0, 90b0 <inflate@@Base+0x1a08>
    9028:	ldr	w8, [x23, #60]
    902c:	cbnz	w8, 9044 <inflate@@Base+0x199c>
    9030:	ldr	w8, [x23, #56]
    9034:	mov	w9, #0x1                   	// #1
    9038:	str	xzr, [x23, #64]
    903c:	lsl	w8, w9, w8
    9040:	str	w8, [x23, #60]
    9044:	cmp	w8, w20
    9048:	b.ls	9094 <inflate@@Base+0x19ec>  // b.plast
    904c:	ldr	w9, [x23, #68]
    9050:	sub	x1, x19, w20, uxtw
    9054:	sub	w8, w8, w9
    9058:	cmp	w8, w20
    905c:	csel	w22, w20, w8, hi  // hi = pmore
    9060:	add	x0, x0, x9
    9064:	mov	x2, x22
    9068:	bl	2390 <memcpy@plt>
    906c:	subs	w20, w20, w22
    9070:	b.eq	90c8 <inflate@@Base+0x1a20>  // b.none
    9074:	ldr	x0, [x23, #72]
    9078:	mov	w2, w20
    907c:	sub	x1, x19, w20, uxtw
    9080:	bl	2390 <memcpy@plt>
    9084:	ldr	w8, [x23, #60]
    9088:	mov	w21, wzr
    908c:	str	w20, [x23, #68]
    9090:	b	90ac <inflate@@Base+0x1a04>
    9094:	mov	w2, w8
    9098:	sub	x1, x19, w8, uxtw
    909c:	bl	2390 <memcpy@plt>
    90a0:	ldr	w8, [x23, #60]
    90a4:	mov	w21, wzr
    90a8:	str	wzr, [x23, #68]
    90ac:	str	w8, [x23, #64]
    90b0:	mov	w0, w21
    90b4:	ldp	x20, x19, [sp, #48]
    90b8:	ldp	x22, x21, [sp, #32]
    90bc:	ldr	x23, [sp, #16]
    90c0:	ldp	x29, x30, [sp], #64
    90c4:	ret
    90c8:	ldp	w8, w9, [x23, #64]
    90cc:	ldr	w10, [x23, #60]
    90d0:	mov	w21, wzr
    90d4:	add	w9, w9, w22
    90d8:	cmp	w9, w10
    90dc:	csel	w9, wzr, w9, eq  // eq = none
    90e0:	cmp	w8, w10
    90e4:	str	w9, [x23, #68]
    90e8:	b.cs	90b0 <inflate@@Base+0x1a08>  // b.hs, b.nlast
    90ec:	mov	w21, wzr
    90f0:	add	w8, w8, w22
    90f4:	b	90ac <inflate@@Base+0x1a04>

00000000000090f8 <inflateEnd@@Base>:
    90f8:	stp	x29, x30, [sp, #-32]!
    90fc:	str	x19, [sp, #16]
    9100:	mov	x29, sp
    9104:	mov	x19, x0
    9108:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    910c:	cbz	w0, 9118 <inflateEnd@@Base+0x20>
    9110:	mov	w0, #0xfffffffe            	// #-2
    9114:	b	9144 <inflateEnd@@Base+0x4c>
    9118:	ldr	x1, [x19, #56]
    911c:	ldr	x8, [x1, #72]
    9120:	cbz	x8, 9134 <inflateEnd@@Base+0x3c>
    9124:	ldp	x9, x0, [x19, #72]
    9128:	mov	x1, x8
    912c:	blr	x9
    9130:	ldr	x1, [x19, #56]
    9134:	ldp	x8, x0, [x19, #72]
    9138:	blr	x8
    913c:	mov	w0, wzr
    9140:	str	xzr, [x19, #56]
    9144:	ldr	x19, [sp, #16]
    9148:	ldp	x29, x30, [sp], #32
    914c:	ret

0000000000009150 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    9150:	stp	x29, x30, [sp, #-48]!
    9154:	str	x21, [sp, #16]
    9158:	stp	x20, x19, [sp, #32]
    915c:	mov	x29, sp
    9160:	mov	x19, x2
    9164:	mov	x20, x1
    9168:	mov	x21, x0
    916c:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    9170:	cbz	w0, 917c <inflateGetDictionary@@ZLIB_1.2.7.1+0x2c>
    9174:	mov	w0, #0xfffffffe            	// #-2
    9178:	b	91c8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x78>
    917c:	ldr	x21, [x21, #56]
    9180:	cbz	x20, 91b8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x68>
    9184:	ldr	w8, [x21, #64]
    9188:	cbz	w8, 91b8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x68>
    918c:	ldr	x9, [x21, #72]
    9190:	ldr	w10, [x21, #68]
    9194:	mov	x0, x20
    9198:	add	x1, x9, x10
    919c:	sub	w2, w8, w10
    91a0:	bl	2390 <memcpy@plt>
    91a4:	ldp	w8, w2, [x21, #64]
    91a8:	ldr	x1, [x21, #72]
    91ac:	add	x8, x20, x8
    91b0:	sub	x0, x8, x2
    91b4:	bl	2390 <memcpy@plt>
    91b8:	mov	w0, wzr
    91bc:	cbz	x19, 91c8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x78>
    91c0:	ldr	w8, [x21, #64]
    91c4:	str	w8, [x19]
    91c8:	ldp	x20, x19, [sp, #32]
    91cc:	ldr	x21, [sp, #16]
    91d0:	ldp	x29, x30, [sp], #48
    91d4:	ret

00000000000091d8 <inflateSetDictionary@@Base>:
    91d8:	stp	x29, x30, [sp, #-64]!
    91dc:	str	x23, [sp, #16]
    91e0:	stp	x22, x21, [sp, #32]
    91e4:	stp	x20, x19, [sp, #48]
    91e8:	mov	x29, sp
    91ec:	mov	w19, w2
    91f0:	mov	x21, x1
    91f4:	mov	x20, x0
    91f8:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    91fc:	cbz	w0, 9218 <inflateSetDictionary@@Base+0x40>
    9200:	mov	w0, #0xfffffffe            	// #-2
    9204:	ldp	x20, x19, [sp, #48]
    9208:	ldp	x22, x21, [sp, #32]
    920c:	ldr	x23, [sp, #16]
    9210:	ldp	x29, x30, [sp], #64
    9214:	ret
    9218:	ldr	x22, [x20, #56]
    921c:	ldr	w9, [x22, #16]
    9220:	ldr	w8, [x22, #8]
    9224:	cbz	w9, 923c <inflateSetDictionary@@Base+0x64>
    9228:	mov	w9, #0x3f3e                	// #16190
    922c:	cmp	w8, w9
    9230:	b.ne	9200 <inflateSetDictionary@@Base+0x28>  // b.any
    9234:	add	x23, x22, #0x8
    9238:	b	924c <inflateSetDictionary@@Base+0x74>
    923c:	mov	w9, #0x3f3e                	// #16190
    9240:	cmp	w8, w9
    9244:	add	x23, x22, #0x8
    9248:	b.ne	9274 <inflateSetDictionary@@Base+0x9c>  // b.any
    924c:	mov	x0, xzr
    9250:	mov	x1, xzr
    9254:	mov	w2, wzr
    9258:	bl	2540 <adler32@plt>
    925c:	mov	x1, x21
    9260:	mov	w2, w19
    9264:	bl	2540 <adler32@plt>
    9268:	ldr	x8, [x22, #32]
    926c:	cmp	x0, x8
    9270:	b.ne	9298 <inflateSetDictionary@@Base+0xc0>  // b.any
    9274:	add	x1, x21, w19, uxtw
    9278:	mov	x0, x20
    927c:	mov	w2, w19
    9280:	bl	8fd8 <inflate@@Base+0x1930>
    9284:	cbz	w0, 92a0 <inflateSetDictionary@@Base+0xc8>
    9288:	mov	w8, #0x3f52                	// #16210
    928c:	str	w8, [x23]
    9290:	mov	w0, #0xfffffffc            	// #-4
    9294:	b	9204 <inflateSetDictionary@@Base+0x2c>
    9298:	mov	w0, #0xfffffffd            	// #-3
    929c:	b	9204 <inflateSetDictionary@@Base+0x2c>
    92a0:	mov	w8, #0x1                   	// #1
    92a4:	str	w8, [x22, #20]
    92a8:	b	9204 <inflateSetDictionary@@Base+0x2c>

00000000000092ac <inflateGetHeader@@ZLIB_1.2.2>:
    92ac:	stp	x29, x30, [sp, #-32]!
    92b0:	stp	x20, x19, [sp, #16]
    92b4:	mov	x29, sp
    92b8:	mov	x19, x1
    92bc:	mov	x20, x0
    92c0:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    92c4:	cbnz	w0, 92d4 <inflateGetHeader@@ZLIB_1.2.2+0x28>
    92c8:	ldr	x8, [x20, #56]
    92cc:	ldrb	w9, [x8, #16]
    92d0:	tbnz	w9, #1, 92dc <inflateGetHeader@@ZLIB_1.2.2+0x30>
    92d4:	mov	w0, #0xfffffffe            	// #-2
    92d8:	b	92e8 <inflateGetHeader@@ZLIB_1.2.2+0x3c>
    92dc:	mov	w0, wzr
    92e0:	str	x19, [x8, #48]
    92e4:	str	wzr, [x19, #72]
    92e8:	ldp	x20, x19, [sp, #16]
    92ec:	ldp	x29, x30, [sp], #32
    92f0:	ret

00000000000092f4 <inflateSync@@Base>:
    92f4:	sub	sp, sp, #0x40
    92f8:	stp	x29, x30, [sp, #16]
    92fc:	stp	x22, x21, [sp, #32]
    9300:	stp	x20, x19, [sp, #48]
    9304:	add	x29, sp, #0x10
    9308:	mov	x19, x0
    930c:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    9310:	cbz	w0, 932c <inflateSync@@Base+0x38>
    9314:	mov	w0, #0xfffffffe            	// #-2
    9318:	ldp	x20, x19, [sp, #48]
    931c:	ldp	x22, x21, [sp, #32]
    9320:	ldp	x29, x30, [sp, #16]
    9324:	add	sp, sp, #0x40
    9328:	ret
    932c:	ldr	w2, [x19, #8]
    9330:	ldr	x20, [x19, #56]
    9334:	cbnz	w2, 934c <inflateSync@@Base+0x58>
    9338:	ldr	w8, [x20, #88]
    933c:	cmp	w8, #0x8
    9340:	b.cs	934c <inflateSync@@Base+0x58>  // b.hs, b.nlast
    9344:	mov	w0, #0xfffffffb            	// #-5
    9348:	b	9318 <inflateSync@@Base+0x24>
    934c:	ldr	w9, [x20, #8]
    9350:	mov	w8, #0x3f53                	// #16211
    9354:	cmp	w9, w8
    9358:	b.eq	93c8 <inflateSync@@Base+0xd4>  // b.none
    935c:	ldr	w9, [x20, #88]
    9360:	ldr	x10, [x20, #80]
    9364:	str	w8, [x20, #8]
    9368:	and	x8, x9, #0x7
    936c:	ands	w11, w9, #0xfffffff8
    9370:	lsl	x8, x10, x8
    9374:	str	x8, [x20, #80]
    9378:	str	w11, [x20, #88]
    937c:	b.eq	93b0 <inflateSync@@Base+0xbc>  // b.none
    9380:	and	w9, w9, #0xfffffff8
    9384:	mov	x2, xzr
    9388:	neg	w9, w9
    938c:	sub	x10, x29, #0x4
    9390:	strb	w8, [x10, x2]
    9394:	add	x2, x2, #0x1
    9398:	adds	w9, w9, #0x8
    939c:	lsr	x8, x8, #8
    93a0:	b.ne	9390 <inflateSync@@Base+0x9c>  // b.any
    93a4:	str	x8, [x20, #80]
    93a8:	str	wzr, [x20, #88]
    93ac:	b	93b4 <inflateSync@@Base+0xc0>
    93b0:	mov	w2, wzr
    93b4:	mov	x0, x20
    93b8:	str	wzr, [x0, #140]!
    93bc:	sub	x1, x29, #0x4
    93c0:	bl	9430 <inflateSync@@Base+0x13c>
    93c4:	ldr	w2, [x19, #8]
    93c8:	ldr	x1, [x19]
    93cc:	add	x0, x20, #0x8c
    93d0:	bl	9430 <inflateSync@@Base+0x13c>
    93d4:	ldr	w8, [x19, #8]
    93d8:	ldr	x9, [x19]
    93dc:	ldr	x10, [x19, #16]
    93e0:	sub	w8, w8, w0
    93e4:	add	x9, x9, w0, uxtw
    93e8:	add	x21, x10, w0, uxtw
    93ec:	str	w8, [x19, #8]
    93f0:	str	x9, [x19]
    93f4:	str	x21, [x19, #16]
    93f8:	ldr	w8, [x20, #140]
    93fc:	cmp	w8, #0x4
    9400:	b.ne	9428 <inflateSync@@Base+0x134>  // b.any
    9404:	ldr	x22, [x19, #40]
    9408:	mov	x0, x19
    940c:	bl	25f0 <inflateReset@plt>
    9410:	mov	w0, wzr
    9414:	mov	w8, #0x3f3f                	// #16191
    9418:	str	x21, [x19, #16]
    941c:	str	x22, [x19, #40]
    9420:	str	w8, [x20, #8]
    9424:	b	9318 <inflateSync@@Base+0x24>
    9428:	mov	w0, #0xfffffffd            	// #-3
    942c:	b	9318 <inflateSync@@Base+0x24>
    9430:	ldr	w9, [x0]
    9434:	mov	w8, wzr
    9438:	cmp	w9, #0x3
    943c:	b.hi	9488 <inflateSync@@Base+0x194>  // b.pmore
    9440:	cbz	w2, 9488 <inflateSync@@Base+0x194>
    9444:	mov	x8, xzr
    9448:	mov	w10, w2
    944c:	mov	w11, #0xff                  	// #255
    9450:	mov	w12, #0x4                   	// #4
    9454:	ldrb	w13, [x1, x8]
    9458:	cmp	w9, #0x2
    945c:	sub	w14, w12, w9
    9460:	csel	w15, wzr, w11, cc  // cc = lo, ul, last
    9464:	cmp	w13, #0x0
    9468:	csel	w14, w14, wzr, eq  // eq = none
    946c:	cmp	w15, w13
    9470:	csinc	w9, w14, w9, ne  // ne = any
    9474:	cmp	w9, #0x3
    9478:	add	x8, x8, #0x1
    947c:	b.hi	9488 <inflateSync@@Base+0x194>  // b.pmore
    9480:	cmp	x8, x10
    9484:	b.cc	9454 <inflateSync@@Base+0x160>  // b.lo, b.ul, b.last
    9488:	str	w9, [x0]
    948c:	mov	w0, w8
    9490:	ret

0000000000009494 <inflateSyncPoint@@Base>:
    9494:	stp	x29, x30, [sp, #-32]!
    9498:	str	x19, [sp, #16]
    949c:	mov	x29, sp
    94a0:	mov	x19, x0
    94a4:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    94a8:	cbz	w0, 94b4 <inflateSyncPoint@@Base+0x20>
    94ac:	mov	w0, #0xfffffffe            	// #-2
    94b0:	b	94dc <inflateSyncPoint@@Base+0x48>
    94b4:	ldr	x8, [x19, #56]
    94b8:	mov	w10, #0x3f41                	// #16193
    94bc:	ldr	w9, [x8, #8]
    94c0:	cmp	w9, w10
    94c4:	b.ne	94d8 <inflateSyncPoint@@Base+0x44>  // b.any
    94c8:	ldr	w8, [x8, #88]
    94cc:	cmp	w8, #0x0
    94d0:	cset	w0, eq  // eq = none
    94d4:	b	94dc <inflateSyncPoint@@Base+0x48>
    94d8:	mov	w0, wzr
    94dc:	ldr	x19, [sp, #16]
    94e0:	ldp	x29, x30, [sp], #32
    94e4:	ret

00000000000094e8 <inflateCopy@@ZLIB_1.2.0>:
    94e8:	stp	x29, x30, [sp, #-64]!
    94ec:	stp	x20, x19, [sp, #48]
    94f0:	mov	x19, x0
    94f4:	mov	x0, x1
    94f8:	str	x23, [sp, #16]
    94fc:	stp	x22, x21, [sp, #32]
    9500:	mov	x29, sp
    9504:	mov	x23, x1
    9508:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    950c:	mov	w8, w0
    9510:	mov	w0, #0xfffffffe            	// #-2
    9514:	cbz	x19, 9618 <inflateCopy@@ZLIB_1.2.0+0x130>
    9518:	cbnz	w8, 9618 <inflateCopy@@ZLIB_1.2.0+0x130>
    951c:	ldp	x21, x8, [x23, #56]
    9520:	ldr	x0, [x23, #80]
    9524:	mov	w1, #0x1                   	// #1
    9528:	mov	w2, #0x1bf8                	// #7160
    952c:	blr	x8
    9530:	cbz	x0, 9570 <inflateCopy@@ZLIB_1.2.0+0x88>
    9534:	ldr	x8, [x21, #72]
    9538:	mov	x20, x0
    953c:	cbz	x8, 9578 <inflateCopy@@ZLIB_1.2.0+0x90>
    9540:	ldr	w9, [x21, #56]
    9544:	ldr	x8, [x23, #64]
    9548:	ldr	x0, [x23, #80]
    954c:	mov	w10, #0x1                   	// #1
    9550:	lsl	w1, w10, w9
    9554:	mov	w2, #0x1                   	// #1
    9558:	blr	x8
    955c:	mov	x22, x0
    9560:	cbnz	x0, 957c <inflateCopy@@ZLIB_1.2.0+0x94>
    9564:	ldp	x8, x0, [x23, #72]
    9568:	mov	x1, x20
    956c:	blr	x8
    9570:	mov	w0, #0xfffffffc            	// #-4
    9574:	b	9618 <inflateCopy@@ZLIB_1.2.0+0x130>
    9578:	mov	x22, xzr
    957c:	mov	w2, #0x70                  	// #112
    9580:	mov	x0, x19
    9584:	mov	x1, x23
    9588:	bl	2390 <memcpy@plt>
    958c:	mov	w2, #0x1bf8                	// #7160
    9590:	mov	x0, x20
    9594:	mov	x1, x21
    9598:	bl	2390 <memcpy@plt>
    959c:	str	x19, [x20]
    95a0:	ldr	x10, [x21, #104]
    95a4:	add	x8, x21, #0x558
    95a8:	subs	x9, x10, x8
    95ac:	b.cc	95dc <inflateCopy@@ZLIB_1.2.0+0xf4>  // b.lo, b.ul, b.last
    95b0:	mov	w11, #0x1be4                	// #7140
    95b4:	add	x11, x21, x11
    95b8:	cmp	x10, x11
    95bc:	b.hi	95dc <inflateCopy@@ZLIB_1.2.0+0xf4>  // b.pmore
    95c0:	add	x10, x20, #0x558
    95c4:	add	x9, x10, x9
    95c8:	str	x9, [x20, #104]
    95cc:	ldr	x9, [x21, #112]
    95d0:	sub	x9, x9, x8
    95d4:	add	x9, x10, x9
    95d8:	str	x9, [x20, #112]
    95dc:	ldr	x9, [x21, #144]
    95e0:	sub	x8, x9, x8
    95e4:	add	x8, x20, x8
    95e8:	add	x8, x8, #0x558
    95ec:	str	x8, [x20, #144]
    95f0:	cbz	x22, 960c <inflateCopy@@ZLIB_1.2.0+0x124>
    95f4:	ldr	w8, [x21, #56]
    95f8:	ldr	x1, [x21, #72]
    95fc:	mov	w9, #0x1                   	// #1
    9600:	mov	x0, x22
    9604:	lsl	x2, x9, x8
    9608:	bl	2390 <memcpy@plt>
    960c:	mov	w0, wzr
    9610:	str	x22, [x20, #72]
    9614:	str	x20, [x19, #56]
    9618:	ldp	x20, x19, [sp, #48]
    961c:	ldp	x22, x21, [sp, #32]
    9620:	ldr	x23, [sp, #16]
    9624:	ldp	x29, x30, [sp], #64
    9628:	ret

000000000000962c <inflateUndermine@@ZLIB_1.2.3.3>:
    962c:	stp	x29, x30, [sp, #-32]!
    9630:	str	x19, [sp, #16]
    9634:	mov	x29, sp
    9638:	mov	x19, x0
    963c:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    9640:	cbz	w0, 964c <inflateUndermine@@ZLIB_1.2.3.3+0x20>
    9644:	mov	w0, #0xfffffffe            	// #-2
    9648:	b	965c <inflateUndermine@@ZLIB_1.2.3.3+0x30>
    964c:	ldr	x8, [x19, #56]
    9650:	mov	w9, #0x1                   	// #1
    9654:	mov	w0, #0xfffffffd            	// #-3
    9658:	str	w9, [x8, #7144]
    965c:	ldr	x19, [sp, #16]
    9660:	ldp	x29, x30, [sp], #32
    9664:	ret

0000000000009668 <inflateValidate@@ZLIB_1.2.9>:
    9668:	stp	x29, x30, [sp, #-32]!
    966c:	stp	x20, x19, [sp, #16]
    9670:	mov	x29, sp
    9674:	mov	w19, w1
    9678:	mov	x20, x0
    967c:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    9680:	cbz	w0, 968c <inflateValidate@@ZLIB_1.2.9+0x24>
    9684:	mov	w0, #0xfffffffe            	// #-2
    9688:	b	96a8 <inflateValidate@@ZLIB_1.2.9+0x40>
    968c:	ldr	x8, [x20, #56]
    9690:	cmp	w19, #0x0
    9694:	ldr	w9, [x8, #16]
    9698:	and	w10, w9, #0xfffffffb
    969c:	orr	w9, w9, #0x4
    96a0:	csel	w9, w10, w9, eq  // eq = none
    96a4:	str	w9, [x8, #16]
    96a8:	ldp	x20, x19, [sp, #16]
    96ac:	ldp	x29, x30, [sp], #32
    96b0:	ret

00000000000096b4 <inflateMark@@ZLIB_1.2.3.4>:
    96b4:	stp	x29, x30, [sp, #-32]!
    96b8:	str	x19, [sp, #16]
    96bc:	mov	x29, sp
    96c0:	mov	x19, x0
    96c4:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    96c8:	cbz	w0, 96d4 <inflateMark@@ZLIB_1.2.3.4+0x20>
    96cc:	mov	x0, #0xffffffffffff0000    	// #-65536
    96d0:	b	971c <inflateMark@@ZLIB_1.2.3.4+0x68>
    96d4:	ldr	x9, [x19, #56]
    96d8:	mov	w11, #0x3f4c                	// #16204
    96dc:	ldr	w10, [x9, #8]
    96e0:	ldrsw	x8, [x9, #7148]
    96e4:	cmp	w10, w11
    96e8:	lsl	x8, x8, #16
    96ec:	b.eq	9704 <inflateMark@@ZLIB_1.2.3.4+0x50>  // b.none
    96f0:	mov	w11, #0x3f43                	// #16195
    96f4:	cmp	w10, w11
    96f8:	b.ne	9714 <inflateMark@@ZLIB_1.2.3.4+0x60>  // b.any
    96fc:	ldr	w9, [x9, #92]
    9700:	b	9718 <inflateMark@@ZLIB_1.2.3.4+0x64>
    9704:	ldr	w10, [x9, #7152]
    9708:	ldr	w9, [x9, #92]
    970c:	sub	w9, w10, w9
    9710:	b	9718 <inflateMark@@ZLIB_1.2.3.4+0x64>
    9714:	mov	w9, wzr
    9718:	add	x0, x8, w9, uxtw
    971c:	ldr	x19, [sp, #16]
    9720:	ldp	x29, x30, [sp], #32
    9724:	ret

0000000000009728 <inflateCodesUsed@@ZLIB_1.2.9>:
    9728:	stp	x29, x30, [sp, #-32]!
    972c:	str	x19, [sp, #16]
    9730:	mov	x29, sp
    9734:	mov	x19, x0
    9738:	bl	73ec <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    973c:	cbz	w0, 9748 <inflateCodesUsed@@ZLIB_1.2.9+0x20>
    9740:	mov	x0, #0xffffffffffffffff    	// #-1
    9744:	b	975c <inflateCodesUsed@@ZLIB_1.2.9+0x34>
    9748:	ldr	x8, [x19, #56]
    974c:	ldr	x9, [x8, #144]
    9750:	sub	x8, x9, x8
    9754:	sub	x8, x8, #0x558
    9758:	asr	x0, x8, #2
    975c:	ldr	x19, [sp, #16]
    9760:	ldp	x29, x30, [sp], #32
    9764:	ret
    9768:	sub	sp, sp, #0x90
    976c:	movi	v0.2d, #0x0
    9770:	stp	x28, x27, [sp, #64]
    9774:	stp	x26, x25, [sp, #80]
    9778:	stp	x24, x23, [sp, #96]
    977c:	stp	x22, x21, [sp, #112]
    9780:	stp	x20, x19, [sp, #128]
    9784:	stp	q0, q0, [sp, #32]
    9788:	cbz	w2, 97b0 <inflateCodesUsed@@ZLIB_1.2.9+0x88>
    978c:	mov	w8, w2
    9790:	add	x9, sp, #0x20
    9794:	mov	x10, x1
    9798:	ldrh	w11, [x10], #2
    979c:	subs	x8, x8, #0x1
    97a0:	ldrh	w12, [x9, x11, lsl #1]
    97a4:	add	w12, w12, #0x1
    97a8:	strh	w12, [x9, x11, lsl #1]
    97ac:	b.ne	9798 <inflateCodesUsed@@ZLIB_1.2.9+0x70>  // b.any
    97b0:	ldr	w8, [x4]
    97b4:	mov	w9, #0xf                   	// #15
    97b8:	add	x10, sp, #0x20
    97bc:	ldrh	w11, [x10, w9, uxtw #1]
    97c0:	cbnz	w11, 9800 <inflateCodesUsed@@ZLIB_1.2.9+0xd8>
    97c4:	subs	w9, w9, #0x1
    97c8:	b.ne	97bc <inflateCodesUsed@@ZLIB_1.2.9+0x94>  // b.any
    97cc:	ldr	x9, [x3]
    97d0:	mov	w10, #0x140                 	// #320
    97d4:	mov	w8, wzr
    97d8:	add	x11, x9, #0x4
    97dc:	str	x11, [x3]
    97e0:	str	w10, [x9]
    97e4:	ldr	x9, [x3]
    97e8:	mov	w11, #0x1                   	// #1
    97ec:	add	x12, x9, #0x4
    97f0:	str	x12, [x3]
    97f4:	str	w10, [x9]
    97f8:	str	w11, [x4]
    97fc:	b	9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    9800:	cmp	w8, w9
    9804:	csel	w8, w9, w8, hi  // hi = pmore
    9808:	cmp	w9, #0x2
    980c:	b.cc	9838 <inflateCodesUsed@@ZLIB_1.2.9+0x110>  // b.lo, b.ul, b.last
    9810:	mov	w11, w9
    9814:	mov	w10, #0x1                   	// #1
    9818:	add	x12, sp, #0x20
    981c:	ldrh	w13, [x12, x10, lsl #1]
    9820:	cbnz	w13, 983c <inflateCodesUsed@@ZLIB_1.2.9+0x114>
    9824:	add	x10, x10, #0x1
    9828:	cmp	x11, x10
    982c:	b.ne	981c <inflateCodesUsed@@ZLIB_1.2.9+0xf4>  // b.any
    9830:	mov	w10, w9
    9834:	b	983c <inflateCodesUsed@@ZLIB_1.2.9+0x114>
    9838:	mov	w10, #0x1                   	// #1
    983c:	cmp	w8, w10
    9840:	mov	w12, #0x1                   	// #1
    9844:	mov	w13, #0x2                   	// #2
    9848:	csel	w11, w10, w8, cc  // cc = lo, ul, last
    984c:	add	x8, sp, #0x20
    9850:	ldrh	w14, [x8, x13]
    9854:	lsl	w12, w12, #1
    9858:	subs	w12, w12, w14
    985c:	b.mi	9924 <inflateCodesUsed@@ZLIB_1.2.9+0x1fc>  // b.first
    9860:	add	x13, x13, #0x2
    9864:	cmp	x13, #0x20
    9868:	b.ne	9850 <inflateCodesUsed@@ZLIB_1.2.9+0x128>  // b.any
    986c:	cmp	w12, #0x1
    9870:	b.lt	9884 <inflateCodesUsed@@ZLIB_1.2.9+0x15c>  // b.tstop
    9874:	mov	w8, #0xffffffff            	// #-1
    9878:	cbz	w0, 9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    987c:	cmp	w9, #0x1
    9880:	b.ne	9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>  // b.any
    9884:	add	x13, sp, #0x20
    9888:	mov	x14, sp
    988c:	mov	x8, xzr
    9890:	mov	w12, wzr
    9894:	orr	x13, x13, #0x2
    9898:	add	x14, x14, #0x4
    989c:	strh	wzr, [sp, #2]
    98a0:	ldrh	w15, [x13, x8]
    98a4:	add	w12, w15, w12
    98a8:	strh	w12, [x14, x8]
    98ac:	add	x8, x8, #0x2
    98b0:	cmp	x8, #0x1c
    98b4:	b.ne	98a0 <inflateCodesUsed@@ZLIB_1.2.9+0x178>  // b.any
    98b8:	cbz	w2, 98ec <inflateCodesUsed@@ZLIB_1.2.9+0x1c4>
    98bc:	mov	x8, xzr
    98c0:	mov	w12, w2
    98c4:	mov	x13, sp
    98c8:	ldrh	w14, [x1, x8, lsl #1]
    98cc:	cbz	x14, 98e0 <inflateCodesUsed@@ZLIB_1.2.9+0x1b8>
    98d0:	ldrh	w15, [x13, x14, lsl #1]
    98d4:	add	w16, w15, #0x1
    98d8:	strh	w16, [x13, x14, lsl #1]
    98dc:	strh	w8, [x5, x15, lsl #1]
    98e0:	add	x8, x8, #0x1
    98e4:	cmp	x12, x8
    98e8:	b.ne	98c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1a0>  // b.any
    98ec:	cbz	w0, 9948 <inflateCodesUsed@@ZLIB_1.2.9+0x220>
    98f0:	cmp	w0, #0x1
    98f4:	b.ne	9960 <inflateCodesUsed@@ZLIB_1.2.9+0x238>  // b.any
    98f8:	cmp	w11, #0x9
    98fc:	mov	w8, #0x1                   	// #1
    9900:	b.hi	9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>  // b.pmore
    9904:	adrp	x14, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    9908:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    990c:	mov	w13, wzr
    9910:	mov	w12, #0x101                 	// #257
    9914:	add	x14, x14, #0xac2
    9918:	add	x15, x15, #0xa84
    991c:	mov	w16, #0x1                   	// #1
    9920:	b	9998 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9924:	mov	w8, #0xffffffff            	// #-1
    9928:	ldp	x20, x19, [sp, #128]
    992c:	ldp	x22, x21, [sp, #112]
    9930:	ldp	x24, x23, [sp, #96]
    9934:	ldp	x26, x25, [sp, #80]
    9938:	ldp	x28, x27, [sp, #64]
    993c:	mov	w0, w8
    9940:	add	sp, sp, #0x90
    9944:	ret
    9948:	mov	w13, wzr
    994c:	mov	w16, wzr
    9950:	mov	w12, #0x14                  	// #20
    9954:	mov	x15, x5
    9958:	mov	x14, x5
    995c:	b	9998 <inflateCodesUsed@@ZLIB_1.2.9+0x270>
    9960:	cmp	w0, #0x2
    9964:	adrp	x14, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    9968:	adrp	x15, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    996c:	mov	w12, wzr
    9970:	add	x14, x14, #0xb40
    9974:	cset	w13, eq  // eq = none
    9978:	add	x15, x15, #0xb00
    997c:	b.ne	9994 <inflateCodesUsed@@ZLIB_1.2.9+0x26c>  // b.any
    9980:	cmp	w11, #0x9
    9984:	mov	w16, w12
    9988:	b.ls	9998 <inflateCodesUsed@@ZLIB_1.2.9+0x270>  // b.plast
    998c:	mov	w8, #0x1                   	// #1
    9990:	b	9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    9994:	mov	w16, w12
    9998:	ldr	x6, [x3]
    999c:	mov	w7, #0x1                   	// #1
    99a0:	lsl	w18, w7, w11
    99a4:	mov	w0, wzr
    99a8:	mov	w2, wzr
    99ac:	mov	w17, wzr
    99b0:	sub	w19, w18, #0x1
    99b4:	mov	w8, #0xffffffff            	// #-1
    99b8:	add	x20, sp, #0x20
    99bc:	mov	w22, w11
    99c0:	lsl	w21, w7, w22
    99c4:	ldrh	w23, [x5, w0, uxtw #1]
    99c8:	add	w22, w23, #0x1
    99cc:	cmp	w22, w12
    99d0:	sub	w22, w10, w2
    99d4:	b.cs	99e0 <inflateCodesUsed@@ZLIB_1.2.9+0x2b8>  // b.hs, b.nlast
    99d8:	mov	w24, wzr
    99dc:	b	9a04 <inflateCodesUsed@@ZLIB_1.2.9+0x2dc>
    99e0:	cmp	w12, w23
    99e4:	b.ls	99f4 <inflateCodesUsed@@ZLIB_1.2.9+0x2cc>  // b.plast
    99e8:	mov	w23, wzr
    99ec:	mov	w24, #0x60                  	// #96
    99f0:	b	9a04 <inflateCodesUsed@@ZLIB_1.2.9+0x2dc>
    99f4:	sub	w23, w23, w12
    99f8:	lsl	x24, x23, #1
    99fc:	ldrb	w24, [x14, x24]
    9a00:	ldrh	w23, [x15, w23, uxtw #1]
    9a04:	lsl	w25, w7, w22
    9a08:	lsr	w26, w17, w2
    9a0c:	sub	w26, w26, w25
    9a10:	mov	w27, w21
    9a14:	add	w28, w26, w27
    9a18:	subs	w27, w27, w25
    9a1c:	add	x28, x6, w28, uxtw #2
    9a20:	strb	w24, [x28]
    9a24:	strb	w22, [x28, #1]
    9a28:	strh	w23, [x28, #2]
    9a2c:	b.ne	9a14 <inflateCodesUsed@@ZLIB_1.2.9+0x2ec>  // b.any
    9a30:	sub	w23, w10, #0x1
    9a34:	lsl	w24, w7, w23
    9a38:	mov	w23, w24
    9a3c:	tst	w24, w17
    9a40:	lsr	w24, w24, #1
    9a44:	b.ne	9a38 <inflateCodesUsed@@ZLIB_1.2.9+0x310>  // b.any
    9a48:	ldrh	w25, [x20, w10, uxtw #1]
    9a4c:	sub	w24, w23, #0x1
    9a50:	and	w17, w24, w17
    9a54:	cmp	w23, #0x0
    9a58:	add	w17, w17, w23
    9a5c:	sub	w23, w25, #0x1
    9a60:	csel	w17, wzr, w17, eq  // eq = none
    9a64:	add	w0, w0, #0x1
    9a68:	tst	w23, #0xffff
    9a6c:	strh	w23, [x20, w10, uxtw #1]
    9a70:	b.ne	9a84 <inflateCodesUsed@@ZLIB_1.2.9+0x35c>  // b.any
    9a74:	cmp	w10, w9
    9a78:	b.eq	9b34 <inflateCodesUsed@@ZLIB_1.2.9+0x40c>  // b.none
    9a7c:	ldrh	w10, [x5, w0, uxtw #1]
    9a80:	ldrh	w10, [x1, x10, lsl #1]
    9a84:	cmp	w10, w11
    9a88:	b.ls	99c4 <inflateCodesUsed@@ZLIB_1.2.9+0x29c>  // b.plast
    9a8c:	and	w23, w17, w19
    9a90:	cmp	w23, w8
    9a94:	b.eq	99c4 <inflateCodesUsed@@ZLIB_1.2.9+0x29c>  // b.none
    9a98:	cmp	w2, #0x0
    9a9c:	csel	w2, w11, w2, eq  // eq = none
    9aa0:	sub	w22, w10, w2
    9aa4:	cmp	w10, w9
    9aa8:	lsl	w8, w7, w22
    9aac:	b.cs	9ae4 <inflateCodesUsed@@ZLIB_1.2.9+0x3bc>  // b.hs, b.nlast
    9ab0:	sub	w22, w9, w2
    9ab4:	mov	w24, w10
    9ab8:	ldrh	w25, [x20, x24, lsl #1]
    9abc:	sub	w8, w8, w25
    9ac0:	cmp	w8, #0x1
    9ac4:	b.lt	9adc <inflateCodesUsed@@ZLIB_1.2.9+0x3b4>  // b.tstop
    9ac8:	add	x24, x24, #0x1
    9acc:	cmp	w24, w9
    9ad0:	lsl	w8, w8, #1
    9ad4:	b.cc	9ab8 <inflateCodesUsed@@ZLIB_1.2.9+0x390>  // b.lo, b.ul, b.last
    9ad8:	b	9ae0 <inflateCodesUsed@@ZLIB_1.2.9+0x3b8>
    9adc:	sub	w22, w24, w2
    9ae0:	lsl	w8, w7, w22
    9ae4:	add	w18, w8, w18
    9ae8:	cmp	w18, #0x354
    9aec:	cset	w8, hi  // hi = pmore
    9af0:	cmp	w18, #0x250
    9af4:	and	w25, w16, w8
    9af8:	cset	w24, hi  // hi = pmore
    9afc:	mov	w8, #0x1                   	// #1
    9b00:	tbnz	w25, #0, 9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    9b04:	and	w24, w13, w24
    9b08:	tbnz	w24, #0, 9928 <inflateCodesUsed@@ZLIB_1.2.9+0x200>
    9b0c:	ldr	x8, [x3]
    9b10:	add	x6, x6, w21, uxtw #2
    9b14:	add	x21, x8, w23, uxtw #2
    9b18:	sub	w8, w6, w8
    9b1c:	lsr	w8, w8, #2
    9b20:	strb	w22, [x21]
    9b24:	strb	w11, [x21, #1]
    9b28:	strh	w8, [x21, #2]
    9b2c:	mov	w8, w23
    9b30:	b	99c0 <inflateCodesUsed@@ZLIB_1.2.9+0x298>
    9b34:	cbz	w17, 9b4c <inflateCodesUsed@@ZLIB_1.2.9+0x424>
    9b38:	add	x8, x6, w17, uxtw #2
    9b3c:	mov	w9, #0x40                  	// #64
    9b40:	strb	w9, [x8]
    9b44:	strb	w22, [x8, #1]
    9b48:	strh	wzr, [x8, #2]
    9b4c:	ldr	x9, [x3]
    9b50:	mov	w8, wzr
    9b54:	add	x9, x9, w18, uxtw #2
    9b58:	str	x9, [x3]
    9b5c:	b	97f8 <inflateCodesUsed@@ZLIB_1.2.9+0xd0>
    9b60:	add	x8, x0, #0xd4
    9b64:	str	x8, [x0, #2904]
    9b68:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    9b6c:	add	x8, x8, #0xd08
    9b70:	str	x8, [x0, #2920]
    9b74:	add	x8, x0, #0x9c8
    9b78:	str	x8, [x0, #2928]
    9b7c:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    9b80:	add	x8, x8, #0xd28
    9b84:	str	x8, [x0, #2944]
    9b88:	add	x8, x0, #0xabc
    9b8c:	str	x8, [x0, #2952]
    9b90:	adrp	x8, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    9b94:	add	x8, x8, #0xd48
    9b98:	strh	wzr, [x0, #5936]
    9b9c:	str	x8, [x0, #2968]
    9ba0:	str	wzr, [x0, #5940]
    9ba4:	b	9ba8 <inflateCodesUsed@@ZLIB_1.2.9+0x480>
    9ba8:	mov	w8, #0xd4                  	// #212
    9bac:	strh	wzr, [x0, x8]
    9bb0:	add	x8, x8, #0x4
    9bb4:	cmp	x8, #0x54c
    9bb8:	b.ne	9bac <inflateCodesUsed@@ZLIB_1.2.9+0x484>  // b.any
    9bbc:	mov	x8, xzr
    9bc0:	add	x9, x0, #0x9c8
    9bc4:	strh	wzr, [x9, x8]
    9bc8:	add	x8, x8, #0x4
    9bcc:	cmp	x8, #0x78
    9bd0:	b.ne	9bc4 <inflateCodesUsed@@ZLIB_1.2.9+0x49c>  // b.any
    9bd4:	mov	x8, xzr
    9bd8:	add	x9, x0, #0xabc
    9bdc:	strh	wzr, [x9, x8]
    9be0:	add	x8, x8, #0x4
    9be4:	cmp	x8, #0x4c
    9be8:	b.ne	9bdc <inflateCodesUsed@@ZLIB_1.2.9+0x4b4>  // b.any
    9bec:	mov	w8, #0x1                   	// #1
    9bf0:	movi	v0.2d, #0x0
    9bf4:	mov	w9, #0x1718                	// #5912
    9bf8:	str	wzr, [x0, #5900]
    9bfc:	strh	w8, [x0, #1236]
    9c00:	str	q0, [x0, x9]
    9c04:	str	wzr, [x0, #5928]
    9c08:	ret
    9c0c:	stp	x29, x30, [sp, #-48]!
    9c10:	stp	x20, x19, [sp, #32]
    9c14:	ldr	w10, [x0, #5940]
    9c18:	ldrh	w9, [x0, #5936]
    9c1c:	and	w8, w3, #0xffff
    9c20:	str	x21, [sp, #16]
    9c24:	lsl	w11, w8, w10
    9c28:	mov	x19, x2
    9c2c:	mov	x21, x1
    9c30:	mov	x20, x0
    9c34:	orr	w9, w9, w11
    9c38:	cmp	w10, #0xe
    9c3c:	mov	x29, sp
    9c40:	strh	w9, [x0, #5936]
    9c44:	b.lt	9c98 <inflateCodesUsed@@ZLIB_1.2.9+0x570>  // b.tstop
    9c48:	ldr	x10, [x20, #40]
    9c4c:	ldr	x11, [x20, #16]
    9c50:	add	x12, x10, #0x1
    9c54:	str	x12, [x20, #40]
    9c58:	mov	w12, #0x1730                	// #5936
    9c5c:	strb	w9, [x11, x10]
    9c60:	add	x12, x20, x12
    9c64:	ldr	x9, [x20, #40]
    9c68:	ldrb	w10, [x12, #1]
    9c6c:	ldr	x11, [x20, #16]
    9c70:	add	x12, x9, #0x1
    9c74:	str	x12, [x20, #40]
    9c78:	strb	w10, [x11, x9]
    9c7c:	ldr	w9, [x20, #5940]
    9c80:	mov	w10, #0x10                  	// #16
    9c84:	sub	w10, w10, w9
    9c88:	lsr	w8, w8, w10
    9c8c:	strh	w8, [x20, #5936]
    9c90:	sub	w8, w9, #0xd
    9c94:	b	9c9c <inflateCodesUsed@@ZLIB_1.2.9+0x574>
    9c98:	add	w8, w10, #0x3
    9c9c:	mov	x0, x20
    9ca0:	str	w8, [x20, #5940]
    9ca4:	bl	9d38 <inflateCodesUsed@@ZLIB_1.2.9+0x610>
    9ca8:	ldr	x8, [x20, #40]
    9cac:	ldr	x9, [x20, #16]
    9cb0:	mov	x1, x21
    9cb4:	mov	x2, x19
    9cb8:	add	x10, x8, #0x1
    9cbc:	str	x10, [x20, #40]
    9cc0:	strb	w19, [x9, x8]
    9cc4:	ldr	x8, [x20, #40]
    9cc8:	ldr	x9, [x20, #16]
    9ccc:	ubfx	x10, x19, #8, #24
    9cd0:	add	x11, x8, #0x1
    9cd4:	str	x11, [x20, #40]
    9cd8:	strb	w10, [x9, x8]
    9cdc:	ldr	x8, [x20, #40]
    9ce0:	ldr	x9, [x20, #16]
    9ce4:	mvn	w10, w19
    9ce8:	add	x11, x8, #0x1
    9cec:	str	x11, [x20, #40]
    9cf0:	strb	w10, [x9, x8]
    9cf4:	ldr	x8, [x20, #40]
    9cf8:	ldr	x9, [x20, #16]
    9cfc:	lsr	w10, w10, #8
    9d00:	add	x11, x8, #0x1
    9d04:	str	x11, [x20, #40]
    9d08:	strb	w10, [x9, x8]
    9d0c:	ldr	x8, [x20, #16]
    9d10:	ldr	x9, [x20, #40]
    9d14:	add	x0, x8, x9
    9d18:	bl	2390 <memcpy@plt>
    9d1c:	ldr	x8, [x20, #40]
    9d20:	ldr	x21, [sp, #16]
    9d24:	add	x8, x8, x19
    9d28:	str	x8, [x20, #40]
    9d2c:	ldp	x20, x19, [sp, #32]
    9d30:	ldp	x29, x30, [sp], #48
    9d34:	ret
    9d38:	ldr	w8, [x0, #5940]
    9d3c:	cmp	w8, #0x9
    9d40:	b.lt	9d74 <inflateCodesUsed@@ZLIB_1.2.9+0x64c>  // b.tstop
    9d44:	mov	w8, #0x1730                	// #5936
    9d48:	ldr	x10, [x0, #40]
    9d4c:	add	x8, x0, x8
    9d50:	ldr	x9, [x0, #16]
    9d54:	ldrb	w11, [x8]
    9d58:	add	x12, x10, #0x1
    9d5c:	str	x12, [x0, #40]
    9d60:	strb	w11, [x9, x10]
    9d64:	ldr	x9, [x0, #40]
    9d68:	ldr	x10, [x0, #16]
    9d6c:	ldrb	w8, [x8, #1]
    9d70:	b	9d8c <inflateCodesUsed@@ZLIB_1.2.9+0x664>
    9d74:	cmp	w8, #0x1
    9d78:	b.lt	9d9c <inflateCodesUsed@@ZLIB_1.2.9+0x674>  // b.tstop
    9d7c:	mov	w8, #0x1730                	// #5936
    9d80:	ldr	x9, [x0, #40]
    9d84:	ldr	x10, [x0, #16]
    9d88:	ldrb	w8, [x0, x8]
    9d8c:	add	x11, x9, #0x1
    9d90:	add	x9, x10, x9
    9d94:	str	x11, [x0, #40]
    9d98:	strb	w8, [x9]
    9d9c:	strh	wzr, [x0, #5936]
    9da0:	str	wzr, [x0, #5940]
    9da4:	ret
    9da8:	b	9dac <inflateCodesUsed@@ZLIB_1.2.9+0x684>
    9dac:	ldr	w8, [x0, #5940]
    9db0:	cmp	w8, #0x10
    9db4:	b.ne	9dfc <inflateCodesUsed@@ZLIB_1.2.9+0x6d4>  // b.any
    9db8:	mov	w9, #0x1730                	// #5936
    9dbc:	ldr	x11, [x0, #40]
    9dc0:	add	x9, x0, x9
    9dc4:	ldr	x10, [x0, #16]
    9dc8:	ldrb	w12, [x9]
    9dcc:	add	x13, x11, #0x1
    9dd0:	str	x13, [x0, #40]
    9dd4:	mov	w8, wzr
    9dd8:	strb	w12, [x10, x11]
    9ddc:	ldr	x10, [x0, #40]
    9de0:	ldrb	w9, [x9, #1]
    9de4:	ldr	x11, [x0, #16]
    9de8:	add	x12, x10, #0x1
    9dec:	str	x12, [x0, #40]
    9df0:	strb	w9, [x11, x10]
    9df4:	strh	wzr, [x0, #5936]
    9df8:	b	9e34 <inflateCodesUsed@@ZLIB_1.2.9+0x70c>
    9dfc:	cmp	w8, #0x8
    9e00:	b.lt	9e38 <inflateCodesUsed@@ZLIB_1.2.9+0x710>  // b.tstop
    9e04:	mov	w8, #0x1730                	// #5936
    9e08:	ldr	x10, [x0, #40]
    9e0c:	add	x8, x0, x8
    9e10:	ldr	x9, [x0, #16]
    9e14:	ldrb	w11, [x8]
    9e18:	add	x12, x10, #0x1
    9e1c:	str	x12, [x0, #40]
    9e20:	strb	w11, [x9, x10]
    9e24:	ldrb	w8, [x8, #1]
    9e28:	ldr	w9, [x0, #5940]
    9e2c:	strh	w8, [x0, #5936]
    9e30:	sub	w8, w9, #0x8
    9e34:	str	w8, [x0, #5940]
    9e38:	ret
    9e3c:	ldr	w10, [x0, #5940]
    9e40:	ldrh	w8, [x0, #5936]
    9e44:	mov	w9, #0x2                   	// #2
    9e48:	lsl	w11, w9, w10
    9e4c:	orr	w8, w8, w11
    9e50:	cmp	w10, #0xe
    9e54:	strh	w8, [x0, #5936]
    9e58:	b.lt	9eac <inflateCodesUsed@@ZLIB_1.2.9+0x784>  // b.tstop
    9e5c:	ldr	x10, [x0, #40]
    9e60:	ldr	x11, [x0, #16]
    9e64:	add	x12, x10, #0x1
    9e68:	str	x12, [x0, #40]
    9e6c:	mov	w12, #0x1730                	// #5936
    9e70:	strb	w8, [x11, x10]
    9e74:	add	x12, x0, x12
    9e78:	ldr	x8, [x0, #40]
    9e7c:	ldrb	w10, [x12, #1]
    9e80:	ldr	x11, [x0, #16]
    9e84:	add	x12, x8, #0x1
    9e88:	str	x12, [x0, #40]
    9e8c:	strb	w10, [x11, x8]
    9e90:	ldr	w10, [x0, #5940]
    9e94:	mov	w8, #0x10                  	// #16
    9e98:	sub	w8, w8, w10
    9e9c:	lsr	w8, w9, w8
    9ea0:	strh	w8, [x0, #5936]
    9ea4:	sub	w9, w10, #0xd
    9ea8:	b	9eb0 <inflateCodesUsed@@ZLIB_1.2.9+0x788>
    9eac:	add	w9, w10, #0x3
    9eb0:	cmp	w9, #0xa
    9eb4:	str	w9, [x0, #5940]
    9eb8:	b.lt	9f00 <inflateCodesUsed@@ZLIB_1.2.9+0x7d8>  // b.tstop
    9ebc:	ldr	x9, [x0, #40]
    9ec0:	ldr	x10, [x0, #16]
    9ec4:	add	x11, x9, #0x1
    9ec8:	str	x11, [x0, #40]
    9ecc:	mov	w11, #0x1730                	// #5936
    9ed0:	strb	w8, [x10, x9]
    9ed4:	add	x11, x0, x11
    9ed8:	ldr	x8, [x0, #40]
    9edc:	ldrb	w9, [x11, #1]
    9ee0:	ldr	x10, [x0, #16]
    9ee4:	add	x11, x8, #0x1
    9ee8:	str	x11, [x0, #40]
    9eec:	strb	w9, [x10, x8]
    9ef0:	ldr	w8, [x0, #5940]
    9ef4:	strh	wzr, [x0, #5936]
    9ef8:	sub	w8, w8, #0x9
    9efc:	b	9f04 <inflateCodesUsed@@ZLIB_1.2.9+0x7dc>
    9f00:	add	w8, w9, #0x7
    9f04:	str	w8, [x0, #5940]
    9f08:	b	9dac <inflateCodesUsed@@ZLIB_1.2.9+0x684>
    9f0c:	stp	x29, x30, [sp, #-64]!
    9f10:	stp	x22, x21, [sp, #32]
    9f14:	stp	x20, x19, [sp, #48]
    9f18:	ldr	w8, [x0, #196]
    9f1c:	mov	w20, w3
    9f20:	mov	x21, x2
    9f24:	mov	x19, x0
    9f28:	cmp	w8, #0x1
    9f2c:	mov	x22, x1
    9f30:	str	x23, [sp, #16]
    9f34:	mov	x29, sp
    9f38:	b.lt	9f98 <inflateCodesUsed@@ZLIB_1.2.9+0x870>  // b.tstop
    9f3c:	ldr	x8, [x19]
    9f40:	ldr	w9, [x8, #88]
    9f44:	cmp	w9, #0x2
    9f48:	b.ne	9fb4 <inflateCodesUsed@@ZLIB_1.2.9+0x88c>  // b.any
    9f4c:	mov	w11, #0xc07f                	// #49279
    9f50:	mov	x9, xzr
    9f54:	add	x10, x19, #0xd4
    9f58:	movk	w11, #0xf3ff, lsl #16
    9f5c:	tbz	w11, #0, 9f68 <inflateCodesUsed@@ZLIB_1.2.9+0x840>
    9f60:	ldrh	w12, [x10, x9]
    9f64:	cbnz	w12, 9fac <inflateCodesUsed@@ZLIB_1.2.9+0x884>
    9f68:	add	x9, x9, #0x4
    9f6c:	cmp	x9, #0x80
    9f70:	lsr	x11, x11, #1
    9f74:	b.ne	9f5c <inflateCodesUsed@@ZLIB_1.2.9+0x834>  // b.any
    9f78:	ldrh	w9, [x19, #248]
    9f7c:	cbnz	w9, 9f90 <inflateCodesUsed@@ZLIB_1.2.9+0x868>
    9f80:	ldrh	w9, [x19, #252]
    9f84:	cbnz	w9, 9f90 <inflateCodesUsed@@ZLIB_1.2.9+0x868>
    9f88:	ldrh	w9, [x19, #264]
    9f8c:	cbz	w9, a40c <inflateCodesUsed@@ZLIB_1.2.9+0xce4>
    9f90:	mov	w9, #0x1                   	// #1
    9f94:	b	9fb0 <inflateCodesUsed@@ZLIB_1.2.9+0x888>
    9f98:	add	x9, x21, #0x5
    9f9c:	mov	w8, wzr
    9fa0:	mov	x11, x9
    9fa4:	cbnz	x22, a05c <inflateCodesUsed@@ZLIB_1.2.9+0x934>
    9fa8:	b	a080 <inflateCodesUsed@@ZLIB_1.2.9+0x958>
    9fac:	mov	w9, wzr
    9fb0:	str	w9, [x8, #88]
    9fb4:	add	x1, x19, #0xb58
    9fb8:	mov	x0, x19
    9fbc:	bl	a42c <inflateCodesUsed@@ZLIB_1.2.9+0xd04>
    9fc0:	add	x1, x19, #0xb70
    9fc4:	mov	x0, x19
    9fc8:	bl	a42c <inflateCodesUsed@@ZLIB_1.2.9+0xd04>
    9fcc:	ldr	w2, [x19, #2912]
    9fd0:	add	x1, x19, #0xd4
    9fd4:	mov	x0, x19
    9fd8:	bl	ae28 <inflateCodesUsed@@ZLIB_1.2.9+0x1700>
    9fdc:	ldr	w2, [x19, #2936]
    9fe0:	add	x1, x19, #0x9c8
    9fe4:	mov	x0, x19
    9fe8:	bl	ae28 <inflateCodesUsed@@ZLIB_1.2.9+0x1700>
    9fec:	add	x1, x19, #0xb88
    9ff0:	mov	x0, x19
    9ff4:	bl	a42c <inflateCodesUsed@@ZLIB_1.2.9+0xd04>
    9ff8:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    9ffc:	mov	w8, #0x12                  	// #18
    a000:	add	x9, x9, #0x4b8
    a004:	ldrb	w10, [x9, w8, uxtw]
    a008:	add	x10, x19, x10, lsl #2
    a00c:	ldrh	w10, [x10, #2750]
    a010:	cbnz	w10, a024 <inflateCodesUsed@@ZLIB_1.2.9+0x8fc>
    a014:	cmp	w8, #0x3
    a018:	sub	w8, w8, #0x1
    a01c:	b.hi	a004 <inflateCodesUsed@@ZLIB_1.2.9+0x8dc>  // b.pmore
    a020:	mov	w8, #0x2                   	// #2
    a024:	ldr	x9, [x19, #5912]
    a028:	ldr	x10, [x19, #5920]
    a02c:	sbfiz	x11, x8, #1, #32
    a030:	add	x11, x11, w8, sxtw
    a034:	add	x9, x9, x11
    a038:	add	x10, x10, #0xa
    a03c:	add	x11, x9, #0x11
    a040:	add	x12, x9, #0x1b
    a044:	lsr	x9, x10, #3
    a048:	lsr	x10, x12, #3
    a04c:	cmp	x9, x12, lsr #3
    a050:	str	x11, [x19, #5912]
    a054:	csel	x11, x10, x9, hi  // hi = pmore
    a058:	cbz	x22, a080 <inflateCodesUsed@@ZLIB_1.2.9+0x958>
    a05c:	add	x10, x21, #0x4
    a060:	cmp	x10, x11
    a064:	b.hi	a080 <inflateCodesUsed@@ZLIB_1.2.9+0x958>  // b.pmore
    a068:	mov	x0, x19
    a06c:	mov	x1, x22
    a070:	mov	x2, x21
    a074:	mov	w3, w20
    a078:	bl	9c0c <inflateCodesUsed@@ZLIB_1.2.9+0x4e4>
    a07c:	b	a3d4 <inflateCodesUsed@@ZLIB_1.2.9+0xcac>
    a080:	ldr	w10, [x19, #5940]
    a084:	cmp	x9, x11
    a088:	b.eq	a108 <inflateCodesUsed@@ZLIB_1.2.9+0x9e0>  // b.none
    a08c:	ldr	w9, [x19, #200]
    a090:	cmp	w9, #0x4
    a094:	b.eq	a108 <inflateCodesUsed@@ZLIB_1.2.9+0x9e0>  // b.none
    a098:	ldrh	w9, [x19, #5936]
    a09c:	add	w11, w20, #0x4
    a0a0:	and	w11, w11, #0xffff
    a0a4:	lsl	w12, w11, w10
    a0a8:	orr	w9, w9, w12
    a0ac:	cmp	w10, #0xe
    a0b0:	strh	w9, [x19, #5936]
    a0b4:	b.lt	a178 <inflateCodesUsed@@ZLIB_1.2.9+0xa50>  // b.tstop
    a0b8:	ldr	x10, [x19, #40]
    a0bc:	ldr	x12, [x19, #16]
    a0c0:	add	x13, x10, #0x1
    a0c4:	str	x13, [x19, #40]
    a0c8:	mov	w13, #0x1730                	// #5936
    a0cc:	strb	w9, [x12, x10]
    a0d0:	add	x13, x19, x13
    a0d4:	ldr	x9, [x19, #40]
    a0d8:	ldrb	w10, [x13, #1]
    a0dc:	ldr	x12, [x19, #16]
    a0e0:	add	x13, x9, #0x1
    a0e4:	str	x13, [x19, #40]
    a0e8:	strb	w10, [x12, x9]
    a0ec:	ldr	w10, [x19, #5940]
    a0f0:	mov	w9, #0x10                  	// #16
    a0f4:	sub	w9, w9, w10
    a0f8:	lsr	w9, w11, w9
    a0fc:	strh	w9, [x19, #5936]
    a100:	sub	w11, w10, #0xd
    a104:	b	a17c <inflateCodesUsed@@ZLIB_1.2.9+0xa54>
    a108:	ldrh	w9, [x19, #5936]
    a10c:	add	w8, w20, #0x2
    a110:	and	w8, w8, #0xffff
    a114:	lsl	w11, w8, w10
    a118:	orr	w9, w9, w11
    a11c:	cmp	w10, #0xe
    a120:	strh	w9, [x19, #5936]
    a124:	b.lt	a1f8 <inflateCodesUsed@@ZLIB_1.2.9+0xad0>  // b.tstop
    a128:	ldr	x10, [x19, #40]
    a12c:	ldr	x11, [x19, #16]
    a130:	add	x12, x10, #0x1
    a134:	str	x12, [x19, #40]
    a138:	mov	w12, #0x1730                	// #5936
    a13c:	strb	w9, [x11, x10]
    a140:	add	x12, x19, x12
    a144:	ldr	x9, [x19, #40]
    a148:	ldrb	w10, [x12, #1]
    a14c:	ldr	x11, [x19, #16]
    a150:	add	x12, x9, #0x1
    a154:	str	x12, [x19, #40]
    a158:	strb	w10, [x11, x9]
    a15c:	ldr	w9, [x19, #5940]
    a160:	mov	w10, #0x10                  	// #16
    a164:	sub	w10, w10, w9
    a168:	lsr	w8, w8, w10
    a16c:	strh	w8, [x19, #5936]
    a170:	sub	w8, w9, #0xd
    a174:	b	a1fc <inflateCodesUsed@@ZLIB_1.2.9+0xad4>
    a178:	add	w11, w10, #0x3
    a17c:	ldr	w2, [x19, #2912]
    a180:	mov	w10, #0xff00                	// #65280
    a184:	ldr	w21, [x19, #2936]
    a188:	cmp	w11, #0xc
    a18c:	add	w10, w2, w10
    a190:	and	w10, w10, #0xffff
    a194:	lsl	w12, w10, w11
    a198:	orr	w9, w9, w12
    a19c:	str	w11, [x19, #5940]
    a1a0:	strh	w9, [x19, #5936]
    a1a4:	b.lt	a218 <inflateCodesUsed@@ZLIB_1.2.9+0xaf0>  // b.tstop
    a1a8:	ldr	x11, [x19, #40]
    a1ac:	ldr	x12, [x19, #16]
    a1b0:	add	x13, x11, #0x1
    a1b4:	str	x13, [x19, #40]
    a1b8:	mov	w13, #0x1730                	// #5936
    a1bc:	strb	w9, [x12, x11]
    a1c0:	add	x13, x19, x13
    a1c4:	ldr	x9, [x19, #40]
    a1c8:	ldrb	w11, [x13, #1]
    a1cc:	ldr	x12, [x19, #16]
    a1d0:	add	x13, x9, #0x1
    a1d4:	str	x13, [x19, #40]
    a1d8:	strb	w11, [x12, x9]
    a1dc:	ldr	w11, [x19, #5940]
    a1e0:	mov	w9, #0x10                  	// #16
    a1e4:	sub	w9, w9, w11
    a1e8:	lsr	w9, w10, w9
    a1ec:	strh	w9, [x19, #5936]
    a1f0:	sub	w11, w11, #0xb
    a1f4:	b	a21c <inflateCodesUsed@@ZLIB_1.2.9+0xaf4>
    a1f8:	add	w8, w10, #0x3
    a1fc:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    a200:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a204:	str	w8, [x19, #5940]
    a208:	add	x1, x1, #0xe88
    a20c:	add	x2, x2, #0x308
    a210:	mov	x0, x19
    a214:	b	a3d0 <inflateCodesUsed@@ZLIB_1.2.9+0xca8>
    a218:	add	w11, w11, #0x5
    a21c:	and	w10, w21, #0xffff
    a220:	lsl	w12, w10, w11
    a224:	orr	w9, w9, w12
    a228:	cmp	w11, #0xc
    a22c:	str	w11, [x19, #5940]
    a230:	strh	w9, [x19, #5936]
    a234:	b.lt	a288 <inflateCodesUsed@@ZLIB_1.2.9+0xb60>  // b.tstop
    a238:	ldr	x11, [x19, #40]
    a23c:	ldr	x12, [x19, #16]
    a240:	add	x13, x11, #0x1
    a244:	str	x13, [x19, #40]
    a248:	mov	w13, #0x1730                	// #5936
    a24c:	strb	w9, [x12, x11]
    a250:	add	x13, x19, x13
    a254:	ldr	x9, [x19, #40]
    a258:	ldrb	w11, [x13, #1]
    a25c:	ldr	x12, [x19, #16]
    a260:	add	x13, x9, #0x1
    a264:	str	x13, [x19, #40]
    a268:	strb	w11, [x12, x9]
    a26c:	ldr	w11, [x19, #5940]
    a270:	mov	w9, #0x10                  	// #16
    a274:	sub	w9, w9, w11
    a278:	lsr	w9, w10, w9
    a27c:	strh	w9, [x19, #5936]
    a280:	sub	w11, w11, #0xb
    a284:	b	a28c <inflateCodesUsed@@ZLIB_1.2.9+0xb64>
    a288:	add	w11, w11, #0x5
    a28c:	mov	w10, #0xfffd                	// #65533
    a290:	add	w10, w8, w10
    a294:	and	w10, w10, #0xffff
    a298:	lsl	w12, w10, w11
    a29c:	orr	w9, w9, w12
    a2a0:	cmp	w11, #0xd
    a2a4:	str	w11, [x19, #5940]
    a2a8:	strh	w9, [x19, #5936]
    a2ac:	b.lt	a300 <inflateCodesUsed@@ZLIB_1.2.9+0xbd8>  // b.tstop
    a2b0:	ldr	x11, [x19, #40]
    a2b4:	ldr	x12, [x19, #16]
    a2b8:	add	x13, x11, #0x1
    a2bc:	str	x13, [x19, #40]
    a2c0:	mov	w13, #0x1730                	// #5936
    a2c4:	strb	w9, [x12, x11]
    a2c8:	add	x13, x19, x13
    a2cc:	ldr	x9, [x19, #40]
    a2d0:	ldrb	w11, [x13, #1]
    a2d4:	ldr	x12, [x19, #16]
    a2d8:	add	x13, x9, #0x1
    a2dc:	str	x13, [x19, #40]
    a2e0:	strb	w11, [x12, x9]
    a2e4:	ldr	w11, [x19, #5940]
    a2e8:	mov	w9, #0x10                  	// #16
    a2ec:	sub	w9, w9, w11
    a2f0:	lsr	w9, w10, w9
    a2f4:	strh	w9, [x19, #5936]
    a2f8:	sub	w10, w11, #0xc
    a2fc:	b	a304 <inflateCodesUsed@@ZLIB_1.2.9+0xbdc>
    a300:	add	w10, w11, #0x4
    a304:	str	w10, [x19, #5940]
    a308:	tbnz	w8, #31, a3a0 <inflateCodesUsed@@ZLIB_1.2.9+0xc78>
    a30c:	add	w11, w8, #0x1
    a310:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a314:	mov	w12, #0x1730                	// #5936
    a318:	add	x8, x8, #0x4b8
    a31c:	mov	w11, w11
    a320:	add	x12, x19, x12
    a324:	mov	w13, #0x10                  	// #16
    a328:	ldrb	w14, [x8]
    a32c:	cmp	w10, #0xe
    a330:	add	x14, x19, x14, lsl #2
    a334:	ldrh	w14, [x14, #2750]
    a338:	lsl	w15, w14, w10
    a33c:	orr	w9, w9, w15
    a340:	strh	w9, [x19, #5936]
    a344:	b.lt	a38c <inflateCodesUsed@@ZLIB_1.2.9+0xc64>  // b.tstop
    a348:	ldr	x10, [x19, #40]
    a34c:	ldr	x15, [x19, #16]
    a350:	add	x16, x10, #0x1
    a354:	str	x16, [x19, #40]
    a358:	strb	w9, [x15, x10]
    a35c:	ldr	x9, [x19, #40]
    a360:	ldrb	w10, [x12, #1]
    a364:	ldr	x15, [x19, #16]
    a368:	add	x16, x9, #0x1
    a36c:	str	x16, [x19, #40]
    a370:	strb	w10, [x15, x9]
    a374:	ldr	w10, [x19, #5940]
    a378:	sub	w9, w13, w10
    a37c:	lsr	w9, w14, w9
    a380:	strh	w9, [x19, #5936]
    a384:	sub	w10, w10, #0xd
    a388:	b	a390 <inflateCodesUsed@@ZLIB_1.2.9+0xc68>
    a38c:	add	w10, w10, #0x3
    a390:	subs	x11, x11, #0x1
    a394:	add	x8, x8, #0x1
    a398:	str	w10, [x19, #5940]
    a39c:	b.ne	a328 <inflateCodesUsed@@ZLIB_1.2.9+0xc00>  // b.any
    a3a0:	add	x22, x19, #0xd4
    a3a4:	mov	x0, x19
    a3a8:	mov	x1, x22
    a3ac:	bl	af3c <inflateCodesUsed@@ZLIB_1.2.9+0x1814>
    a3b0:	add	x23, x19, #0x9c8
    a3b4:	mov	x0, x19
    a3b8:	mov	x1, x23
    a3bc:	mov	w2, w21
    a3c0:	bl	af3c <inflateCodesUsed@@ZLIB_1.2.9+0x1814>
    a3c4:	mov	x0, x19
    a3c8:	mov	x1, x22
    a3cc:	mov	x2, x23
    a3d0:	bl	a8c4 <inflateCodesUsed@@ZLIB_1.2.9+0x119c>
    a3d4:	mov	x0, x19
    a3d8:	bl	9ba8 <inflateCodesUsed@@ZLIB_1.2.9+0x480>
    a3dc:	cbz	w20, a3f8 <inflateCodesUsed@@ZLIB_1.2.9+0xcd0>
    a3e0:	mov	x0, x19
    a3e4:	ldp	x20, x19, [sp, #48]
    a3e8:	ldp	x22, x21, [sp, #32]
    a3ec:	ldr	x23, [sp, #16]
    a3f0:	ldp	x29, x30, [sp], #64
    a3f4:	b	9d38 <inflateCodesUsed@@ZLIB_1.2.9+0x610>
    a3f8:	ldp	x20, x19, [sp, #48]
    a3fc:	ldp	x22, x21, [sp, #32]
    a400:	ldr	x23, [sp, #16]
    a404:	ldp	x29, x30, [sp], #64
    a408:	ret
    a40c:	mov	x10, xzr
    a410:	add	x11, x19, #0x154
    a414:	ldrh	w9, [x11, x10]
    a418:	cbnz	w9, 9f90 <inflateCodesUsed@@ZLIB_1.2.9+0x868>
    a41c:	add	x10, x10, #0x4
    a420:	cmp	x10, #0x380
    a424:	b.ne	a414 <inflateCodesUsed@@ZLIB_1.2.9+0xcec>  // b.any
    a428:	b	9fb0 <inflateCodesUsed@@ZLIB_1.2.9+0x888>
    a42c:	sub	sp, sp, #0x80
    a430:	stp	x29, x30, [sp, #32]
    a434:	stp	x28, x27, [sp, #48]
    a438:	stp	x26, x25, [sp, #64]
    a43c:	stp	x24, x23, [sp, #80]
    a440:	stp	x22, x21, [sp, #96]
    a444:	stp	x20, x19, [sp, #112]
    a448:	ldr	x9, [x1, #16]
    a44c:	ldr	x19, [x1]
    a450:	mov	x21, x1
    a454:	mov	x20, x0
    a458:	ldr	x8, [x9]
    a45c:	ldr	w24, [x9, #20]
    a460:	adrp	x9, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    a464:	ldr	d0, [x9, #2944]
    a468:	mov	w9, #0x14b4                	// #5300
    a46c:	add	x25, x0, x9
    a470:	cmp	w24, #0x1
    a474:	add	x29, sp, #0x20
    a478:	str	d0, [x25]
    a47c:	b.lt	a4e0 <inflateCodesUsed@@ZLIB_1.2.9+0xdb8>  // b.tstop
    a480:	mov	w11, #0x14bc                	// #5308
    a484:	mov	x9, xzr
    a488:	add	x10, x19, #0x2
    a48c:	add	x11, x20, x11
    a490:	mov	w23, #0xffffffff            	// #-1
    a494:	ldurh	w12, [x10, #-2]
    a498:	cbz	w12, a4bc <inflateCodesUsed@@ZLIB_1.2.9+0xd94>
    a49c:	ldrsw	x12, [x20, #5300]
    a4a0:	mov	w23, w9
    a4a4:	add	x12, x12, #0x1
    a4a8:	str	w12, [x20, #5300]
    a4ac:	add	x12, x20, x12, lsl #2
    a4b0:	str	w9, [x12, #3008]
    a4b4:	strb	wzr, [x11, x9]
    a4b8:	b	a4c0 <inflateCodesUsed@@ZLIB_1.2.9+0xd98>
    a4bc:	strh	wzr, [x10]
    a4c0:	add	x9, x9, #0x1
    a4c4:	cmp	x24, x9
    a4c8:	add	x10, x10, #0x4
    a4cc:	b.ne	a494 <inflateCodesUsed@@ZLIB_1.2.9+0xd6c>  // b.any
    a4d0:	ldr	w9, [x25]
    a4d4:	cmp	w9, #0x1
    a4d8:	b.le	a4e8 <inflateCodesUsed@@ZLIB_1.2.9+0xdc0>
    a4dc:	b	a55c <inflateCodesUsed@@ZLIB_1.2.9+0xe34>
    a4e0:	mov	w9, wzr
    a4e4:	mov	w23, #0xffffffff            	// #-1
    a4e8:	mov	w10, #0x1                   	// #1
    a4ec:	mov	w11, #0x14bc                	// #5308
    a4f0:	mov	w12, w23
    a4f4:	cmp	w12, #0x2
    a4f8:	sxtw	x13, w9
    a4fc:	csinc	w9, wzr, w12, ge  // ge = tcont
    a500:	add	x13, x13, #0x1
    a504:	str	w13, [x20, #5300]
    a508:	add	x13, x20, x13, lsl #2
    a50c:	sbfiz	x14, x9, #2, #32
    a510:	add	x15, x20, w9, sxtw
    a514:	str	w9, [x13, #3008]
    a518:	strh	w10, [x19, x14]
    a51c:	strb	wzr, [x15, x11]
    a520:	ldr	x13, [x20, #5912]
    a524:	cinc	w23, w12, lt  // lt = tstop
    a528:	sub	x12, x13, #0x1
    a52c:	str	x12, [x20, #5912]
    a530:	cbz	x8, a54c <inflateCodesUsed@@ZLIB_1.2.9+0xe24>
    a534:	sxtw	x9, w9
    a538:	add	x9, x8, x9, lsl #2
    a53c:	ldrh	w9, [x9, #2]
    a540:	ldr	x12, [x20, #5920]
    a544:	sub	x9, x12, x9
    a548:	str	x9, [x20, #5920]
    a54c:	ldr	w9, [x25]
    a550:	mov	w12, w23
    a554:	cmp	w9, #0x2
    a558:	b.lt	a4f4 <inflateCodesUsed@@ZLIB_1.2.9+0xdcc>  // b.tstop
    a55c:	lsr	w22, w9, #1
    a560:	str	w23, [x21, #8]
    a564:	cbz	w22, a584 <inflateCodesUsed@@ZLIB_1.2.9+0xe5c>
    a568:	mov	x0, x20
    a56c:	mov	x1, x19
    a570:	mov	w2, w22
    a574:	bl	ad1c <inflateCodesUsed@@ZLIB_1.2.9+0x15f4>
    a578:	subs	w22, w22, #0x1
    a57c:	b.gt	a568 <inflateCodesUsed@@ZLIB_1.2.9+0xe40>
    a580:	ldr	w9, [x25]
    a584:	sxtw	x27, w24
    a588:	mov	w24, #0x14bc                	// #5308
    a58c:	lsl	x25, x27, #2
    a590:	add	x26, x20, x24
    a594:	sub	w8, w9, #0x1
    a598:	str	w8, [x20, #5300]
    a59c:	add	x22, x20, #0xbc0
    a5a0:	ldr	w8, [x22, w9, sxtw #2]
    a5a4:	ldrsw	x28, [x20, #3012]
    a5a8:	mov	w2, #0x1                   	// #1
    a5ac:	mov	x0, x20
    a5b0:	mov	x1, x19
    a5b4:	str	w8, [x20, #3012]
    a5b8:	bl	ad1c <inflateCodesUsed@@ZLIB_1.2.9+0x15f4>
    a5bc:	ldrsw	x8, [x20, #5304]
    a5c0:	ldrsw	x9, [x20, #3012]
    a5c4:	add	x10, x19, x28, lsl #2
    a5c8:	mov	w2, #0x1                   	// #1
    a5cc:	sub	x8, x8, #0x1
    a5d0:	str	w8, [x20, #5304]
    a5d4:	str	w28, [x22, x8, lsl #2]
    a5d8:	ldrsw	x8, [x20, #5304]
    a5dc:	add	x11, x19, x9, lsl #2
    a5e0:	mov	x0, x20
    a5e4:	mov	x1, x19
    a5e8:	sub	x8, x8, #0x1
    a5ec:	str	w8, [x20, #5304]
    a5f0:	str	w9, [x22, x8, lsl #2]
    a5f4:	ldrh	w8, [x10]
    a5f8:	ldrh	w12, [x11]
    a5fc:	add	w8, w12, w8
    a600:	add	x12, x20, x24
    a604:	strh	w8, [x19, x25]
    a608:	ldrb	w8, [x12, x28]
    a60c:	ldrb	w9, [x12, x9]
    a610:	add	x28, x27, #0x1
    a614:	cmp	w8, w9
    a618:	csel	w8, w9, w8, cc  // cc = lo, ul, last
    a61c:	add	w8, w8, #0x1
    a620:	strb	w8, [x26, x27]
    a624:	strh	w27, [x11, #2]
    a628:	strh	w27, [x10, #2]
    a62c:	str	w27, [x20, #3012]
    a630:	bl	ad1c <inflateCodesUsed@@ZLIB_1.2.9+0x15f4>
    a634:	ldr	w9, [x20, #5300]
    a638:	add	x25, x25, #0x4
    a63c:	mov	x27, x28
    a640:	cmp	w9, #0x1
    a644:	b.gt	a594 <inflateCodesUsed@@ZLIB_1.2.9+0xe6c>
    a648:	ldrsw	x8, [x20, #5304]
    a64c:	ldr	w9, [x20, #3012]
    a650:	movi	v0.2d, #0x0
    a654:	sub	x8, x8, #0x1
    a658:	str	w8, [x20, #5304]
    a65c:	str	w9, [x22, x8, lsl #2]
    a660:	ldr	x10, [x21, #16]
    a664:	ldrsw	x11, [x20, #5304]
    a668:	ldr	x8, [x21]
    a66c:	ldr	w9, [x21, #8]
    a670:	ldp	x12, x13, [x10]
    a674:	ldr	w14, [x10, #16]
    a678:	ldrsw	x10, [x10, #24]
    a67c:	str	q0, [x20, #2992]
    a680:	str	q0, [x20, #2976]
    a684:	ldrsw	x11, [x22, x11, lsl #2]
    a688:	add	x11, x8, x11, lsl #2
    a68c:	strh	wzr, [x11, #2]
    a690:	ldrsw	x16, [x20, #5304]
    a694:	cmp	w16, #0x23b
    a698:	b.gt	a814 <inflateCodesUsed@@ZLIB_1.2.9+0x10ec>
    a69c:	sub	w15, w16, #0x23c
    a6a0:	add	x16, x20, x16, lsl #2
    a6a4:	mov	w11, wzr
    a6a8:	add	x16, x16, #0xbc4
    a6ac:	ldrsw	x17, [x16]
    a6b0:	add	x0, x8, x17, lsl #2
    a6b4:	ldrh	w18, [x0, #2]
    a6b8:	add	x18, x8, x18, lsl #2
    a6bc:	ldrh	w18, [x18, #2]
    a6c0:	cmp	w10, w18
    a6c4:	csinc	w18, w10, w18, le
    a6c8:	cinc	w11, w11, le
    a6cc:	cmp	w17, w9
    a6d0:	strh	w18, [x0, #2]
    a6d4:	b.gt	a734 <inflateCodesUsed@@ZLIB_1.2.9+0x100c>
    a6d8:	add	x0, x20, w18, sxtw #1
    a6dc:	ldrh	w1, [x0, #2976]
    a6e0:	cmp	w17, w14
    a6e4:	add	w1, w1, #0x1
    a6e8:	strh	w1, [x0, #2976]
    a6ec:	b.ge	a6f8 <inflateCodesUsed@@ZLIB_1.2.9+0xfd0>  // b.tcont
    a6f0:	mov	w0, wzr
    a6f4:	b	a700 <inflateCodesUsed@@ZLIB_1.2.9+0xfd8>
    a6f8:	sub	w0, w17, w14
    a6fc:	ldr	w0, [x13, w0, sxtw #2]
    a700:	lsl	x1, x17, #2
    a704:	ldrh	w1, [x8, x1]
    a708:	ldr	x2, [x20, #5912]
    a70c:	add	w18, w0, w18
    a710:	madd	x18, x1, x18, x2
    a714:	str	x18, [x20, #5912]
    a718:	cbz	x12, a734 <inflateCodesUsed@@ZLIB_1.2.9+0x100c>
    a71c:	add	x17, x12, x17, lsl #2
    a720:	ldrh	w17, [x17, #2]
    a724:	ldr	x18, [x20, #5920]
    a728:	add	w17, w0, w17
    a72c:	madd	x17, x17, x1, x18
    a730:	str	x17, [x20, #5920]
    a734:	adds	w15, w15, #0x1
    a738:	add	x16, x16, #0x4
    a73c:	b.cc	a6ac <inflateCodesUsed@@ZLIB_1.2.9+0xf84>  // b.lo, b.ul, b.last
    a740:	cbz	w11, a814 <inflateCodesUsed@@ZLIB_1.2.9+0x10ec>
    a744:	add	x12, x20, x10, lsl #1
    a748:	mov	x13, #0x100000000           	// #4294967296
    a74c:	add	x12, x12, #0xba0
    a750:	add	x13, x13, x10, lsl #32
    a754:	mov	x14, #0xffffffff00000000    	// #-4294967296
    a758:	mov	x15, x12
    a75c:	mov	x16, x13
    a760:	ldrh	w17, [x15, #-2]!
    a764:	add	x16, x16, x14
    a768:	cbz	w17, a760 <inflateCodesUsed@@ZLIB_1.2.9+0x1038>
    a76c:	sub	w17, w17, #0x1
    a770:	add	x16, x20, x16, asr #31
    a774:	strh	w17, [x15]
    a778:	ldrh	w15, [x16, #2976]
    a77c:	subs	w11, w11, #0x2
    a780:	add	w15, w15, #0x2
    a784:	strh	w15, [x16, #2976]
    a788:	ldrh	w15, [x12]
    a78c:	sub	w15, w15, #0x1
    a790:	strh	w15, [x12]
    a794:	b.gt	a758 <inflateCodesUsed@@ZLIB_1.2.9+0x1030>
    a798:	cbz	w10, a814 <inflateCodesUsed@@ZLIB_1.2.9+0x10ec>
    a79c:	add	x11, x20, #0xbbc
    a7a0:	mov	w12, #0x23d                 	// #573
    a7a4:	and	w13, w15, #0xffff
    a7a8:	mov	x14, xzr
    a7ac:	add	x16, x11, w12, sxtw #2
    a7b0:	cbz	w13, a7fc <inflateCodesUsed@@ZLIB_1.2.9+0x10d4>
    a7b4:	ldrsw	x15, [x16, x14, lsl #2]
    a7b8:	sub	x14, x14, #0x1
    a7bc:	cmp	w15, w9
    a7c0:	b.gt	a7b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1088>
    a7c4:	add	x16, x8, x15, lsl #2
    a7c8:	ldrh	w17, [x16, #2]!
    a7cc:	add	x12, x14, w12, uxtw
    a7d0:	cmp	w10, w17
    a7d4:	b.eq	a7f4 <inflateCodesUsed@@ZLIB_1.2.9+0x10cc>  // b.none
    a7d8:	lsl	x14, x15, #2
    a7dc:	ldr	x15, [x20, #5912]
    a7e0:	ldrh	w14, [x8, x14]
    a7e4:	sub	x17, x10, x17
    a7e8:	madd	x14, x17, x14, x15
    a7ec:	str	x14, [x20, #5912]
    a7f0:	strh	w10, [x16]
    a7f4:	sub	w13, w13, #0x1
    a7f8:	b	a7a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1080>
    a7fc:	sub	x10, x10, #0x1
    a800:	cbz	w10, a814 <inflateCodesUsed@@ZLIB_1.2.9+0x10ec>
    a804:	add	x13, x20, x10, lsl #1
    a808:	ldrh	w15, [x13, #2976]
    a80c:	mov	w12, w12
    a810:	b	a7a4 <inflateCodesUsed@@ZLIB_1.2.9+0x107c>
    a814:	mov	x10, sp
    a818:	mov	x8, xzr
    a81c:	mov	w9, wzr
    a820:	orr	x10, x10, #0x2
    a824:	add	x11, x20, #0xba0
    a828:	ldrh	w12, [x11, x8]
    a82c:	add	w9, w9, w12
    a830:	lsl	w9, w9, #1
    a834:	strh	w9, [x10, x8]
    a838:	add	x8, x8, #0x2
    a83c:	cmp	x8, #0x1e
    a840:	b.ne	a828 <inflateCodesUsed@@ZLIB_1.2.9+0x1100>  // b.any
    a844:	tbnz	w23, #31, a8a4 <inflateCodesUsed@@ZLIB_1.2.9+0x117c>
    a848:	mov	x8, xzr
    a84c:	add	w9, w23, #0x1
    a850:	mov	x10, sp
    a854:	add	x11, x19, x8, lsl #2
    a858:	ldrh	w13, [x11, #2]
    a85c:	cbz	w13, a898 <inflateCodesUsed@@ZLIB_1.2.9+0x1170>
    a860:	ldrh	w11, [x10, w13, uxtw #1]
    a864:	mov	w12, wzr
    a868:	add	w14, w11, #0x1
    a86c:	strh	w14, [x10, w13, uxtw #1]
    a870:	add	w13, w13, #0x1
    a874:	and	w14, w11, #0x1
    a878:	sub	w13, w13, #0x1
    a87c:	orr	w14, w12, w14
    a880:	lsr	w11, w11, #1
    a884:	cmp	w13, #0x1
    a888:	lsl	w12, w14, #1
    a88c:	b.gt	a874 <inflateCodesUsed@@ZLIB_1.2.9+0x114c>
    a890:	lsl	x11, x8, #2
    a894:	strh	w14, [x19, x11]
    a898:	add	x8, x8, #0x1
    a89c:	cmp	x8, x9
    a8a0:	b.ne	a854 <inflateCodesUsed@@ZLIB_1.2.9+0x112c>  // b.any
    a8a4:	ldp	x20, x19, [sp, #112]
    a8a8:	ldp	x22, x21, [sp, #96]
    a8ac:	ldp	x24, x23, [sp, #80]
    a8b0:	ldp	x26, x25, [sp, #64]
    a8b4:	ldp	x28, x27, [sp, #48]
    a8b8:	ldp	x29, x30, [sp, #32]
    a8bc:	add	sp, sp, #0x80
    a8c0:	ret
    a8c4:	str	x21, [sp, #-32]!
    a8c8:	stp	x20, x19, [sp, #16]
    a8cc:	ldr	w8, [x0, #5900]
    a8d0:	cbz	w8, abe4 <inflateCodesUsed@@ZLIB_1.2.9+0x14bc>
    a8d4:	mov	w9, #0x1730                	// #5936
    a8d8:	adrp	x10, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    a8dc:	adrp	x11, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a8e0:	adrp	x12, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a8e4:	adrp	x13, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    a8e8:	adrp	x14, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a8ec:	adrp	x16, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    a8f0:	mov	x17, xzr
    a8f4:	mov	w8, #0x10                  	// #16
    a8f8:	add	x10, x10, #0xd88
    a8fc:	add	x11, x11, #0x380
    a900:	add	x12, x12, #0x4cc
    a904:	add	x13, x13, #0xb88
    a908:	add	x14, x14, #0x3f4
    a90c:	add	x15, x0, x9
    a910:	add	x16, x16, #0x540
    a914:	ldr	x18, [x0, #5904]
    a918:	ldr	x3, [x0, #5888]
    a91c:	ldrh	w18, [x18, x17, lsl #1]
    a920:	ldrb	w5, [x3, x17]
    a924:	add	x17, x17, #0x1
    a928:	cbz	w18, a9b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1288>
    a92c:	ldrb	w6, [x10, x5]
    a930:	mov	w3, #0x400                 	// #1024
    a934:	ldr	w19, [x0, #5940]
    a938:	bfi	x3, x6, #2, #8
    a93c:	add	x3, x3, x1
    a940:	ldrh	w4, [x3, #6]
    a944:	ldrh	w7, [x3, #4]
    a948:	ldrh	w3, [x0, #5936]
    a94c:	sub	w20, w8, w4
    a950:	lsl	w21, w7, w19
    a954:	orr	w3, w3, w21
    a958:	cmp	w19, w20
    a95c:	strh	w3, [x0, #5936]
    a960:	b.le	aa24 <inflateCodesUsed@@ZLIB_1.2.9+0x12fc>
    a964:	ldr	x19, [x0, #40]
    a968:	ldr	x20, [x0, #16]
    a96c:	add	x21, x19, #0x1
    a970:	str	x21, [x0, #40]
    a974:	strb	w3, [x20, x19]
    a978:	add	x21, x0, x9
    a97c:	ldr	x3, [x0, #40]
    a980:	ldrb	w19, [x21, #1]
    a984:	ldr	x20, [x0, #16]
    a988:	add	x21, x3, #0x1
    a98c:	str	x21, [x0, #40]
    a990:	strb	w19, [x20, x3]
    a994:	ldr	w3, [x0, #5940]
    a998:	sub	w19, w8, w3
    a99c:	add	w4, w4, w3
    a9a0:	lsr	w3, w7, w19
    a9a4:	strh	w3, [x0, #5936]
    a9a8:	sub	w4, w4, #0x10
    a9ac:	b	aa28 <inflateCodesUsed@@ZLIB_1.2.9+0x1300>
    a9b0:	add	x18, x1, x5, lsl #2
    a9b4:	ldr	w5, [x0, #5940]
    a9b8:	ldrh	w3, [x18, #2]
    a9bc:	ldrh	w4, [x18]
    a9c0:	ldrh	w18, [x0, #5936]
    a9c4:	sub	w6, w8, w3
    a9c8:	lsl	w7, w4, w5
    a9cc:	orr	w18, w18, w7
    a9d0:	cmp	w5, w6
    a9d4:	strh	w18, [x0, #5936]
    a9d8:	b.le	aaac <inflateCodesUsed@@ZLIB_1.2.9+0x1384>
    a9dc:	ldr	x5, [x0, #40]
    a9e0:	ldr	x6, [x0, #16]
    a9e4:	add	x7, x5, #0x1
    a9e8:	str	x7, [x0, #40]
    a9ec:	strb	w18, [x6, x5]
    a9f0:	ldr	x18, [x0, #40]
    a9f4:	ldrb	w5, [x15, #1]
    a9f8:	ldr	x6, [x0, #16]
    a9fc:	add	x7, x18, #0x1
    aa00:	str	x7, [x0, #40]
    aa04:	strb	w5, [x6, x18]
    aa08:	ldr	w18, [x0, #5940]
    aa0c:	sub	w5, w8, w18
    aa10:	add	w3, w3, w18
    aa14:	lsr	w18, w4, w5
    aa18:	strh	w18, [x0, #5936]
    aa1c:	sub	w3, w3, #0x10
    aa20:	b	abd0 <inflateCodesUsed@@ZLIB_1.2.9+0x14a8>
    aa24:	add	w4, w19, w4
    aa28:	sub	x7, x6, #0x8
    aa2c:	cmp	x7, #0x13
    aa30:	str	w4, [x0, #5940]
    aa34:	b.hi	aabc <inflateCodesUsed@@ZLIB_1.2.9+0x1394>  // b.pmore
    aa38:	ldr	w7, [x12, x6, lsl #2]
    aa3c:	ldr	w6, [x11, x6, lsl #2]
    aa40:	sub	w5, w5, w7
    aa44:	and	w5, w5, #0xffff
    aa48:	sub	w7, w8, w6
    aa4c:	lsl	w19, w5, w4
    aa50:	orr	w3, w3, w19
    aa54:	cmp	w4, w7
    aa58:	strh	w3, [x0, #5936]
    aa5c:	b.le	aab4 <inflateCodesUsed@@ZLIB_1.2.9+0x138c>
    aa60:	ldr	x4, [x0, #40]
    aa64:	ldr	x7, [x0, #16]
    aa68:	add	x19, x4, #0x1
    aa6c:	str	x19, [x0, #40]
    aa70:	strb	w3, [x7, x4]
    aa74:	add	x19, x0, x9
    aa78:	ldr	x3, [x0, #40]
    aa7c:	ldrb	w4, [x19, #1]
    aa80:	ldr	x7, [x0, #16]
    aa84:	add	x19, x3, #0x1
    aa88:	str	x19, [x0, #40]
    aa8c:	strb	w4, [x7, x3]
    aa90:	ldr	w3, [x0, #5940]
    aa94:	sub	w4, w8, w3
    aa98:	add	w6, w6, w3
    aa9c:	lsr	w3, w5, w4
    aaa0:	strh	w3, [x0, #5936]
    aaa4:	sub	w4, w6, #0x10
    aaa8:	b	aab8 <inflateCodesUsed@@ZLIB_1.2.9+0x1390>
    aaac:	add	w3, w5, w3
    aab0:	b	abd0 <inflateCodesUsed@@ZLIB_1.2.9+0x14a8>
    aab4:	add	w4, w6, w4
    aab8:	str	w4, [x0, #5940]
    aabc:	sub	w5, w18, #0x1
    aac0:	lsr	w18, w5, #7
    aac4:	cmp	w5, #0x100
    aac8:	add	w18, w18, #0x100
    aacc:	csel	w18, w5, w18, cc  // cc = lo, ul, last
    aad0:	ldrb	w6, [x13, w18, uxtw]
    aad4:	add	x18, x2, x6, lsl #2
    aad8:	ldrh	w7, [x18, #2]
    aadc:	ldrh	w19, [x18]
    aae0:	sub	w20, w8, w7
    aae4:	lsl	w18, w19, w4
    aae8:	orr	w18, w3, w18
    aaec:	cmp	w4, w20
    aaf0:	strh	w18, [x0, #5936]
    aaf4:	b.le	ab44 <inflateCodesUsed@@ZLIB_1.2.9+0x141c>
    aaf8:	ldr	x3, [x0, #40]
    aafc:	ldr	x4, [x0, #16]
    ab00:	add	x20, x3, #0x1
    ab04:	str	x20, [x0, #40]
    ab08:	strb	w18, [x4, x3]
    ab0c:	add	x20, x0, x9
    ab10:	ldr	x18, [x0, #40]
    ab14:	ldrb	w3, [x20, #1]
    ab18:	ldr	x4, [x0, #16]
    ab1c:	add	x20, x18, #0x1
    ab20:	str	x20, [x0, #40]
    ab24:	strb	w3, [x4, x18]
    ab28:	ldr	w18, [x0, #5940]
    ab2c:	sub	w3, w8, w18
    ab30:	add	w4, w7, w18
    ab34:	lsr	w18, w19, w3
    ab38:	strh	w18, [x0, #5936]
    ab3c:	sub	w3, w4, #0x10
    ab40:	b	ab48 <inflateCodesUsed@@ZLIB_1.2.9+0x1420>
    ab44:	add	w3, w4, w7
    ab48:	sub	x4, x6, #0x4
    ab4c:	cmp	x4, #0x19
    ab50:	str	w3, [x0, #5940]
    ab54:	b.hi	abd4 <inflateCodesUsed@@ZLIB_1.2.9+0x14ac>  // b.pmore
    ab58:	ldr	w7, [x16, x6, lsl #2]
    ab5c:	ldr	w4, [x14, x6, lsl #2]
    ab60:	sub	w5, w5, w7
    ab64:	and	w5, w5, #0xffff
    ab68:	sub	w6, w8, w4
    ab6c:	lsl	w7, w5, w3
    ab70:	orr	w18, w18, w7
    ab74:	cmp	w3, w6
    ab78:	strh	w18, [x0, #5936]
    ab7c:	b.le	abcc <inflateCodesUsed@@ZLIB_1.2.9+0x14a4>
    ab80:	ldr	x3, [x0, #40]
    ab84:	ldr	x6, [x0, #16]
    ab88:	add	x7, x3, #0x1
    ab8c:	str	x7, [x0, #40]
    ab90:	strb	w18, [x6, x3]
    ab94:	add	x7, x0, x9
    ab98:	ldr	x18, [x0, #40]
    ab9c:	ldrb	w3, [x7, #1]
    aba0:	ldr	x6, [x0, #16]
    aba4:	add	x7, x18, #0x1
    aba8:	str	x7, [x0, #40]
    abac:	strb	w3, [x6, x18]
    abb0:	ldr	w18, [x0, #5940]
    abb4:	sub	w3, w8, w18
    abb8:	add	w4, w4, w18
    abbc:	lsr	w18, w5, w3
    abc0:	strh	w18, [x0, #5936]
    abc4:	sub	w3, w4, #0x10
    abc8:	b	abd0 <inflateCodesUsed@@ZLIB_1.2.9+0x14a8>
    abcc:	add	w3, w4, w3
    abd0:	str	w3, [x0, #5940]
    abd4:	ldr	w4, [x0, #5900]
    abd8:	cmp	x17, x4
    abdc:	b.cc	a914 <inflateCodesUsed@@ZLIB_1.2.9+0x11ec>  // b.lo, b.ul, b.last
    abe0:	b	abec <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>
    abe4:	ldr	w3, [x0, #5940]
    abe8:	ldrh	w18, [x0, #5936]
    abec:	ldrh	w8, [x1, #1026]
    abf0:	ldrh	w9, [x1, #1024]
    abf4:	mov	w10, #0x10                  	// #16
    abf8:	sub	w12, w10, w8
    abfc:	lsl	w11, w9, w3
    ac00:	orr	w11, w18, w11
    ac04:	cmp	w3, w12
    ac08:	strh	w11, [x0, #5936]
    ac0c:	b.le	ac60 <inflateCodesUsed@@ZLIB_1.2.9+0x1538>
    ac10:	ldr	x12, [x0, #40]
    ac14:	ldr	x13, [x0, #16]
    ac18:	add	x14, x12, #0x1
    ac1c:	str	x14, [x0, #40]
    ac20:	mov	w14, #0x1730                	// #5936
    ac24:	strb	w11, [x13, x12]
    ac28:	add	x14, x0, x14
    ac2c:	ldr	x11, [x0, #40]
    ac30:	ldrb	w12, [x14, #1]
    ac34:	ldr	x13, [x0, #16]
    ac38:	add	x14, x11, #0x1
    ac3c:	str	x14, [x0, #40]
    ac40:	strb	w12, [x13, x11]
    ac44:	ldr	w11, [x0, #5940]
    ac48:	sub	w10, w10, w11
    ac4c:	add	w8, w8, w11
    ac50:	lsr	w9, w9, w10
    ac54:	strh	w9, [x0, #5936]
    ac58:	sub	w8, w8, #0x10
    ac5c:	b	ac64 <inflateCodesUsed@@ZLIB_1.2.9+0x153c>
    ac60:	add	w8, w3, w8
    ac64:	str	w8, [x0, #5940]
    ac68:	ldp	x20, x19, [sp, #16]
    ac6c:	ldr	x21, [sp], #32
    ac70:	ret
    ac74:	ldr	x8, [x0, #5904]
    ac78:	ldr	w9, [x0, #5900]
    ac7c:	strh	w1, [x8, x9, lsl #1]
    ac80:	ldr	x8, [x0, #5888]
    ac84:	add	w10, w9, #0x1
    ac88:	str	w10, [x0, #5900]
    ac8c:	strb	w2, [x8, x9]
    ac90:	cbz	w1, acf0 <inflateCodesUsed@@ZLIB_1.2.9+0x15c8>
    ac94:	ldr	w8, [x0, #5928]
    ac98:	adrp	x10, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    ac9c:	add	x10, x10, #0xd88
    aca0:	ldrb	w10, [x10, w2, uxtw]
    aca4:	sub	w9, w1, #0x1
    aca8:	lsr	w11, w9, #7
    acac:	add	w8, w8, #0x1
    acb0:	cmp	w9, #0x100
    acb4:	add	w11, w11, #0x100
    acb8:	str	w8, [x0, #5928]
    acbc:	mov	w8, #0x400                 	// #1024
    acc0:	csel	w9, w9, w11, cc  // cc = lo, ul, last
    acc4:	adrp	x11, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x2a88>
    acc8:	bfi	x8, x10, #2, #8
    accc:	add	x11, x11, #0xb88
    acd0:	add	x8, x8, x0
    acd4:	ldrb	w9, [x11, w9, uxtw]
    acd8:	ldrh	w10, [x8, #216]
    acdc:	add	x9, x0, x9, lsl #2
    ace0:	add	w10, w10, #0x1
    ace4:	strh	w10, [x8, #216]
    ace8:	add	x8, x9, #0x9c8
    acec:	b	acf8 <inflateCodesUsed@@ZLIB_1.2.9+0x15d0>
    acf0:	add	x8, x0, w2, uxtw #2
    acf4:	add	x8, x8, #0xd4
    acf8:	ldrh	w9, [x8]
    acfc:	add	w9, w9, #0x1
    ad00:	strh	w9, [x8]
    ad04:	ldr	w8, [x0, #5896]
    ad08:	ldr	w9, [x0, #5900]
    ad0c:	sub	w8, w8, #0x1
    ad10:	cmp	w9, w8
    ad14:	cset	w0, eq  // eq = none
    ad18:	ret
    ad1c:	ldr	w15, [x0, #5300]
    ad20:	add	x8, x0, w2, sxtw #2
    ad24:	ldr	w8, [x8, #3008]
    ad28:	lsl	w13, w2, #1
    ad2c:	cmp	w13, w15
    ad30:	b.le	ad3c <inflateCodesUsed@@ZLIB_1.2.9+0x1614>
    ad34:	sxtw	x9, w2
    ad38:	b	ae1c <inflateCodesUsed@@ZLIB_1.2.9+0x16f4>
    ad3c:	sxtw	x11, w8
    ad40:	add	x10, x0, w8, sxtw
    ad44:	mov	w12, #0x14bc                	// #5308
    ad48:	mov	w9, #0x14bc                	// #5308
    ad4c:	add	x10, x10, x12
    ad50:	add	x11, x1, x11, lsl #2
    ad54:	add	x12, x0, x9
    ad58:	cmp	w13, w15
    ad5c:	b.ge	ad98 <inflateCodesUsed@@ZLIB_1.2.9+0x1670>  // b.tcont
    ad60:	sxtw	x15, w13
    ad64:	add	x17, x0, #0xbc0
    ad68:	orr	x16, x15, #0x1
    ad6c:	ldrsw	x14, [x17, w13, sxtw #2]
    ad70:	ldrsw	x17, [x17, x16, lsl #2]
    ad74:	lsl	x18, x14, #2
    ad78:	lsl	x3, x17, #2
    ad7c:	ldrh	w3, [x1, x3]
    ad80:	ldrh	w18, [x1, x18]
    ad84:	cmp	w3, w18
    ad88:	b.cs	adf8 <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>  // b.hs, b.nlast
    ad8c:	mov	x15, x16
    ad90:	mov	w14, w16
    ad94:	b	ada0 <inflateCodesUsed@@ZLIB_1.2.9+0x1678>
    ad98:	sxtw	x15, w13
    ad9c:	mov	w14, w13
    ada0:	add	x13, x0, x15, lsl #2
    ada4:	ldr	w13, [x13, #3008]
    ada8:	ldrh	w15, [x11]
    adac:	sbfiz	x16, x13, #2, #32
    adb0:	ldrh	w16, [x1, x16]
    adb4:	cmp	w15, w16
    adb8:	b.cc	ae14 <inflateCodesUsed@@ZLIB_1.2.9+0x16ec>  // b.lo, b.ul, b.last
    adbc:	b.ne	add8 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>  // b.any
    adc0:	sxtw	x15, w13
    adc4:	add	x15, x0, x15
    adc8:	ldrb	w16, [x10]
    adcc:	ldrb	w15, [x15, x9]
    add0:	cmp	w16, w15
    add4:	b.ls	ae14 <inflateCodesUsed@@ZLIB_1.2.9+0x16ec>  // b.plast
    add8:	add	x15, x0, w2, sxtw #2
    addc:	str	w13, [x15, #3008]
    ade0:	ldr	w15, [x0, #5300]
    ade4:	lsl	w13, w14, #1
    ade8:	mov	w2, w14
    adec:	cmp	w13, w15
    adf0:	b.le	ad58 <inflateCodesUsed@@ZLIB_1.2.9+0x1630>
    adf4:	b	ae18 <inflateCodesUsed@@ZLIB_1.2.9+0x16f0>
    adf8:	b.ne	ad9c <inflateCodesUsed@@ZLIB_1.2.9+0x1674>  // b.any
    adfc:	ldrb	w17, [x12, x17]
    ae00:	ldrb	w14, [x12, x14]
    ae04:	cmp	w17, w14
    ae08:	mov	w14, w13
    ae0c:	b.ls	ad8c <inflateCodesUsed@@ZLIB_1.2.9+0x1664>  // b.plast
    ae10:	b	ada0 <inflateCodesUsed@@ZLIB_1.2.9+0x1678>
    ae14:	mov	w14, w2
    ae18:	sxtw	x9, w14
    ae1c:	add	x9, x0, x9, lsl #2
    ae20:	str	w8, [x9, #3008]
    ae24:	ret
    ae28:	ldrh	w8, [x1, #2]
    ae2c:	add	w13, w2, #0x1
    ae30:	add	x9, x1, w13, sxtw #2
    ae34:	mov	w10, #0xffff                	// #65535
    ae38:	strh	w10, [x9, #2]
    ae3c:	tbnz	w2, #31, af38 <inflateCodesUsed@@ZLIB_1.2.9+0x1810>
    ae40:	cmp	w8, #0x0
    ae44:	mov	w9, #0x3                   	// #3
    ae48:	mov	w15, #0x7                   	// #7
    ae4c:	mov	w16, #0x8a                  	// #138
    ae50:	mov	w2, wzr
    ae54:	add	x10, x0, #0xafc
    ae58:	add	x11, x0, #0xb04
    ae5c:	add	x12, x0, #0xb00
    ae60:	mov	w13, w13
    ae64:	add	x14, x1, #0x6
    ae68:	mov	w3, #0xffffffff            	// #-1
    ae6c:	cinc	w17, w9, ne  // ne = any
    ae70:	csel	w18, w16, w15, eq  // eq = none
    ae74:	mov	w15, #0x6                   	// #6
    ae78:	mov	w16, w8
    ae7c:	ldrh	w8, [x14]
    ae80:	add	w1, w2, #0x1
    ae84:	cmp	w1, w18
    ae88:	b.ge	ae9c <inflateCodesUsed@@ZLIB_1.2.9+0x1774>  // b.tcont
    ae8c:	cmp	w16, w8
    ae90:	b.ne	ae9c <inflateCodesUsed@@ZLIB_1.2.9+0x1774>  // b.any
    ae94:	mov	w16, w3
    ae98:	b	af24 <inflateCodesUsed@@ZLIB_1.2.9+0x17fc>
    ae9c:	cmp	w1, w17
    aea0:	b.ge	aeb8 <inflateCodesUsed@@ZLIB_1.2.9+0x1790>  // b.tcont
    aea4:	add	x17, x0, w16, uxtw #2
    aea8:	ldrh	w2, [x17, #2748]
    aeac:	add	x18, x17, #0xabc
    aeb0:	add	w17, w2, w1
    aeb4:	b	af00 <inflateCodesUsed@@ZLIB_1.2.9+0x17d8>
    aeb8:	cbz	w16, aee0 <inflateCodesUsed@@ZLIB_1.2.9+0x17b8>
    aebc:	cmp	w16, w3
    aec0:	b.eq	aed4 <inflateCodesUsed@@ZLIB_1.2.9+0x17ac>  // b.none
    aec4:	add	x17, x0, w16, uxtw #2
    aec8:	ldrh	w18, [x17, #2748]
    aecc:	add	w18, w18, #0x1
    aed0:	strh	w18, [x17, #2748]
    aed4:	ldrh	w17, [x10]
    aed8:	mov	x18, x10
    aedc:	b	aefc <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
    aee0:	cmp	w2, #0x9
    aee4:	b.gt	aef4 <inflateCodesUsed@@ZLIB_1.2.9+0x17cc>
    aee8:	ldrh	w17, [x12]
    aeec:	mov	x18, x12
    aef0:	b	aefc <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
    aef4:	ldrh	w17, [x11]
    aef8:	mov	x18, x11
    aefc:	add	w17, w17, #0x1
    af00:	mov	w1, wzr
    af04:	strh	w17, [x18]
    af08:	cbz	w8, af1c <inflateCodesUsed@@ZLIB_1.2.9+0x17f4>
    af0c:	cmp	w16, w8
    af10:	cinc	w18, w15, ne  // ne = any
    af14:	cinc	w17, w9, ne  // ne = any
    af18:	b	af24 <inflateCodesUsed@@ZLIB_1.2.9+0x17fc>
    af1c:	mov	w17, #0x3                   	// #3
    af20:	mov	w18, #0x8a                  	// #138
    af24:	subs	x13, x13, #0x1
    af28:	add	x14, x14, #0x4
    af2c:	mov	w2, w1
    af30:	mov	w3, w16
    af34:	b.ne	ae78 <inflateCodesUsed@@ZLIB_1.2.9+0x1750>  // b.any
    af38:	ret
    af3c:	stp	x22, x21, [sp, #-32]!
    af40:	stp	x20, x19, [sp, #16]
    af44:	tbnz	w2, #31, b3d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1cb0>
    af48:	ldrh	w9, [x1, #2]
    af4c:	mov	w18, #0x7                   	// #7
    af50:	mov	w4, #0x8a                  	// #138
    af54:	mov	w10, #0x3                   	// #3
    af58:	mov	w13, #0x1730                	// #5936
    af5c:	cmp	w9, #0x0
    af60:	mov	x8, xzr
    af64:	mov	w3, wzr
    af68:	add	w11, w2, #0x1
    af6c:	mov	w7, #0xffffffff            	// #-1
    af70:	mov	w12, #0x10                  	// #16
    af74:	mov	w14, #0x6                   	// #6
    af78:	mov	w15, #0xfffe                	// #65534
    af7c:	mov	w16, #0xfff6                	// #65526
    af80:	add	x17, x0, x13
    af84:	csel	w6, w4, w18, eq  // eq = none
    af88:	cinc	w5, w10, ne  // ne = any
    af8c:	mov	w18, #0xfffd                	// #65533
    af90:	add	x8, x8, #0x1
    af94:	mov	w2, w9
    af98:	add	x9, x1, x8, lsl #2
    af9c:	ldrh	w9, [x9, #2]
    afa0:	add	w4, w3, #0x1
    afa4:	cmp	w4, w6
    afa8:	b.ge	afbc <inflateCodesUsed@@ZLIB_1.2.9+0x1894>  // b.tcont
    afac:	cmp	w2, w9
    afb0:	b.ne	afbc <inflateCodesUsed@@ZLIB_1.2.9+0x1894>  // b.any
    afb4:	mov	w2, w7
    afb8:	b	b3c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ca0>
    afbc:	cmp	w4, w5
    afc0:	b.ge	b054 <inflateCodesUsed@@ZLIB_1.2.9+0x192c>  // b.tcont
    afc4:	ldr	w6, [x0, #5940]
    afc8:	add	x5, x0, w2, uxtw #2
    afcc:	add	x3, x5, #0xabe
    afd0:	add	x5, x5, #0xabc
    afd4:	ldrh	w7, [x3]
    afd8:	ldrh	w19, [x5]
    afdc:	ldrh	w20, [x0, #5936]
    afe0:	sub	w21, w12, w7
    afe4:	lsl	w22, w19, w6
    afe8:	orr	w20, w20, w22
    afec:	cmp	w6, w21
    aff0:	strh	w20, [x0, #5936]
    aff4:	b.le	b040 <inflateCodesUsed@@ZLIB_1.2.9+0x1918>
    aff8:	ldr	x6, [x0, #40]
    affc:	ldr	x21, [x0, #16]
    b000:	add	x22, x6, #0x1
    b004:	str	x22, [x0, #40]
    b008:	strb	w20, [x21, x6]
    b00c:	ldr	x6, [x0, #40]
    b010:	ldrb	w20, [x17, #1]
    b014:	ldr	x21, [x0, #16]
    b018:	add	x22, x6, #0x1
    b01c:	str	x22, [x0, #40]
    b020:	strb	w20, [x21, x6]
    b024:	ldr	w6, [x0, #5940]
    b028:	sub	w20, w12, w6
    b02c:	add	w6, w7, w6
    b030:	lsr	w7, w19, w20
    b034:	strh	w7, [x0, #5936]
    b038:	sub	w6, w6, #0x10
    b03c:	b	b044 <inflateCodesUsed@@ZLIB_1.2.9+0x191c>
    b040:	add	w6, w6, w7
    b044:	subs	w4, w4, #0x1
    b048:	str	w6, [x0, #5940]
    b04c:	b.ne	afd4 <inflateCodesUsed@@ZLIB_1.2.9+0x18ac>  // b.any
    b050:	b	b3a8 <inflateCodesUsed@@ZLIB_1.2.9+0x1c80>
    b054:	cbz	w2, b06c <inflateCodesUsed@@ZLIB_1.2.9+0x1944>
    b058:	cmp	w2, w7
    b05c:	b.ne	b0e8 <inflateCodesUsed@@ZLIB_1.2.9+0x19c0>  // b.any
    b060:	ldr	w5, [x0, #5940]
    b064:	mov	w3, w4
    b068:	b	b1dc <inflateCodesUsed@@ZLIB_1.2.9+0x1ab4>
    b06c:	cmp	w3, #0x9
    b070:	b.gt	b160 <inflateCodesUsed@@ZLIB_1.2.9+0x1a38>
    b074:	ldrh	w4, [x0, #2818]
    b078:	ldr	w7, [x0, #5940]
    b07c:	ldrh	w6, [x0, #2816]
    b080:	ldrh	w5, [x0, #5936]
    b084:	sub	w19, w12, w4
    b088:	cmp	w7, w19
    b08c:	lsl	w20, w6, w7
    b090:	orr	w5, w5, w20
    b094:	strh	w5, [x0, #5936]
    b098:	b.le	b2c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1b98>
    b09c:	ldr	x7, [x0, #40]
    b0a0:	ldr	x19, [x0, #16]
    b0a4:	add	x20, x7, #0x1
    b0a8:	str	x20, [x0, #40]
    b0ac:	strb	w5, [x19, x7]
    b0b0:	add	x20, x0, x13
    b0b4:	ldr	x5, [x0, #40]
    b0b8:	ldrb	w7, [x20, #1]
    b0bc:	ldr	x19, [x0, #16]
    b0c0:	add	x20, x5, #0x1
    b0c4:	str	x20, [x0, #40]
    b0c8:	strb	w7, [x19, x5]
    b0cc:	ldr	w5, [x0, #5940]
    b0d0:	sub	w7, w12, w5
    b0d4:	add	w4, w4, w5
    b0d8:	lsr	w5, w6, w7
    b0dc:	strh	w5, [x0, #5936]
    b0e0:	sub	w4, w4, #0x10
    b0e4:	b	b2c4 <inflateCodesUsed@@ZLIB_1.2.9+0x1b9c>
    b0e8:	add	x5, x0, w2, uxtw #2
    b0ec:	ldr	w7, [x0, #5940]
    b0f0:	ldrh	w4, [x5, #2750]
    b0f4:	ldrh	w5, [x5, #2748]
    b0f8:	ldrh	w6, [x0, #5936]
    b0fc:	sub	w19, w12, w4
    b100:	lsl	w20, w5, w7
    b104:	orr	w6, w6, w20
    b108:	cmp	w7, w19
    b10c:	strh	w6, [x0, #5936]
    b110:	b.le	b1d4 <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    b114:	ldr	x7, [x0, #40]
    b118:	ldr	x19, [x0, #16]
    b11c:	add	x20, x7, #0x1
    b120:	str	x20, [x0, #40]
    b124:	strb	w6, [x19, x7]
    b128:	add	x20, x0, x13
    b12c:	ldr	x6, [x0, #40]
    b130:	ldrb	w7, [x20, #1]
    b134:	ldr	x19, [x0, #16]
    b138:	add	x20, x6, #0x1
    b13c:	str	x20, [x0, #40]
    b140:	strb	w7, [x19, x6]
    b144:	ldr	w6, [x0, #5940]
    b148:	sub	w7, w12, w6
    b14c:	add	w4, w4, w6
    b150:	lsr	w5, w5, w7
    b154:	strh	w5, [x0, #5936]
    b158:	sub	w5, w4, #0x10
    b15c:	b	b1d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ab0>
    b160:	ldrh	w4, [x0, #2822]
    b164:	ldr	w7, [x0, #5940]
    b168:	ldrh	w6, [x0, #2820]
    b16c:	ldrh	w5, [x0, #5936]
    b170:	sub	w19, w12, w4
    b174:	cmp	w7, w19
    b178:	lsl	w20, w6, w7
    b17c:	orr	w5, w5, w20
    b180:	strh	w5, [x0, #5936]
    b184:	b.le	b32c <inflateCodesUsed@@ZLIB_1.2.9+0x1c04>
    b188:	ldr	x7, [x0, #40]
    b18c:	ldr	x19, [x0, #16]
    b190:	add	x20, x7, #0x1
    b194:	str	x20, [x0, #40]
    b198:	strb	w5, [x19, x7]
    b19c:	add	x20, x0, x13
    b1a0:	ldr	x5, [x0, #40]
    b1a4:	ldrb	w7, [x20, #1]
    b1a8:	ldr	x19, [x0, #16]
    b1ac:	add	x20, x5, #0x1
    b1b0:	str	x20, [x0, #40]
    b1b4:	strb	w7, [x19, x5]
    b1b8:	ldr	w5, [x0, #5940]
    b1bc:	sub	w7, w12, w5
    b1c0:	add	w4, w4, w5
    b1c4:	lsr	w5, w6, w7
    b1c8:	strh	w5, [x0, #5936]
    b1cc:	sub	w4, w4, #0x10
    b1d0:	b	b330 <inflateCodesUsed@@ZLIB_1.2.9+0x1c08>
    b1d4:	add	w5, w7, w4
    b1d8:	str	w5, [x0, #5940]
    b1dc:	ldrh	w6, [x0, #2814]
    b1e0:	ldrh	w7, [x0, #2812]
    b1e4:	ldrh	w4, [x0, #5936]
    b1e8:	sub	w19, w12, w6
    b1ec:	lsl	w20, w7, w5
    b1f0:	orr	w4, w4, w20
    b1f4:	cmp	w5, w19
    b1f8:	strh	w4, [x0, #5936]
    b1fc:	b.le	b24c <inflateCodesUsed@@ZLIB_1.2.9+0x1b24>
    b200:	ldr	x5, [x0, #40]
    b204:	ldr	x19, [x0, #16]
    b208:	add	x20, x5, #0x1
    b20c:	str	x20, [x0, #40]
    b210:	strb	w4, [x19, x5]
    b214:	add	x20, x0, x13
    b218:	ldr	x4, [x0, #40]
    b21c:	ldrb	w5, [x20, #1]
    b220:	ldr	x19, [x0, #16]
    b224:	add	x20, x4, #0x1
    b228:	str	x20, [x0, #40]
    b22c:	strb	w5, [x19, x4]
    b230:	ldr	w4, [x0, #5940]
    b234:	sub	w5, w12, w4
    b238:	add	w6, w6, w4
    b23c:	lsr	w4, w7, w5
    b240:	strh	w4, [x0, #5936]
    b244:	sub	w5, w6, #0x10
    b248:	b	b250 <inflateCodesUsed@@ZLIB_1.2.9+0x1b28>
    b24c:	add	w5, w5, w6
    b250:	add	w3, w3, w18
    b254:	and	w3, w3, #0xffff
    b258:	lsl	w6, w3, w5
    b25c:	orr	w4, w4, w6
    b260:	cmp	w5, #0xf
    b264:	str	w5, [x0, #5940]
    b268:	strh	w4, [x0, #5936]
    b26c:	b.lt	b2b8 <inflateCodesUsed@@ZLIB_1.2.9+0x1b90>  // b.tstop
    b270:	ldr	x5, [x0, #40]
    b274:	ldr	x6, [x0, #16]
    b278:	add	x7, x5, #0x1
    b27c:	str	x7, [x0, #40]
    b280:	strb	w4, [x6, x5]
    b284:	add	x7, x0, x13
    b288:	ldr	x4, [x0, #40]
    b28c:	ldrb	w5, [x7, #1]
    b290:	ldr	x6, [x0, #16]
    b294:	add	x7, x4, #0x1
    b298:	str	x7, [x0, #40]
    b29c:	strb	w5, [x6, x4]
    b2a0:	ldr	w4, [x0, #5940]
    b2a4:	sub	w5, w12, w4
    b2a8:	lsr	w3, w3, w5
    b2ac:	strh	w3, [x0, #5936]
    b2b0:	sub	w3, w4, #0xe
    b2b4:	b	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b2b8:	add	w3, w5, #0x2
    b2bc:	b	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b2c0:	add	w4, w7, w4
    b2c4:	add	w3, w3, w15
    b2c8:	and	w3, w3, #0xffff
    b2cc:	lsl	w6, w3, w4
    b2d0:	orr	w5, w5, w6
    b2d4:	cmp	w4, #0xe
    b2d8:	str	w4, [x0, #5940]
    b2dc:	strh	w5, [x0, #5936]
    b2e0:	b.lt	b398 <inflateCodesUsed@@ZLIB_1.2.9+0x1c70>  // b.tstop
    b2e4:	ldr	x4, [x0, #40]
    b2e8:	ldr	x6, [x0, #16]
    b2ec:	add	x7, x4, #0x1
    b2f0:	str	x7, [x0, #40]
    b2f4:	strb	w5, [x6, x4]
    b2f8:	add	x7, x0, x13
    b2fc:	ldr	x4, [x0, #40]
    b300:	ldrb	w5, [x7, #1]
    b304:	ldr	x6, [x0, #16]
    b308:	add	x7, x4, #0x1
    b30c:	str	x7, [x0, #40]
    b310:	strb	w5, [x6, x4]
    b314:	ldr	w4, [x0, #5940]
    b318:	sub	w5, w12, w4
    b31c:	lsr	w3, w3, w5
    b320:	strh	w3, [x0, #5936]
    b324:	sub	w3, w4, #0xd
    b328:	b	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b32c:	add	w4, w7, w4
    b330:	add	w3, w3, w16
    b334:	and	w3, w3, #0xffff
    b338:	lsl	w6, w3, w4
    b33c:	orr	w5, w5, w6
    b340:	cmp	w4, #0xa
    b344:	str	w4, [x0, #5940]
    b348:	strh	w5, [x0, #5936]
    b34c:	b.lt	b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1c78>  // b.tstop
    b350:	ldr	x4, [x0, #40]
    b354:	ldr	x6, [x0, #16]
    b358:	add	x7, x4, #0x1
    b35c:	str	x7, [x0, #40]
    b360:	strb	w5, [x6, x4]
    b364:	add	x7, x0, x13
    b368:	ldr	x4, [x0, #40]
    b36c:	ldrb	w5, [x7, #1]
    b370:	ldr	x6, [x0, #16]
    b374:	add	x7, x4, #0x1
    b378:	str	x7, [x0, #40]
    b37c:	strb	w5, [x6, x4]
    b380:	ldr	w4, [x0, #5940]
    b384:	sub	w5, w12, w4
    b388:	lsr	w3, w3, w5
    b38c:	strh	w3, [x0, #5936]
    b390:	sub	w3, w4, #0x9
    b394:	b	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b398:	add	w3, w4, #0x3
    b39c:	b	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1c7c>
    b3a0:	add	w3, w4, #0x7
    b3a4:	str	w3, [x0, #5940]
    b3a8:	mov	w4, wzr
    b3ac:	cbz	w9, b3c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1c98>
    b3b0:	cmp	w2, w9
    b3b4:	cinc	w5, w10, ne  // ne = any
    b3b8:	cinc	w6, w14, ne  // ne = any
    b3bc:	b	b3c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ca0>
    b3c0:	mov	w6, #0x8a                  	// #138
    b3c4:	mov	w5, #0x3                   	// #3
    b3c8:	cmp	x8, x11
    b3cc:	mov	w7, w2
    b3d0:	mov	w3, w4
    b3d4:	b.ne	af90 <inflateCodesUsed@@ZLIB_1.2.9+0x1868>  // b.any
    b3d8:	ldp	x20, x19, [sp, #16]
    b3dc:	ldp	x22, x21, [sp], #32
    b3e0:	ret

000000000000b3e4 <zlibVersion@@Base>:
    b3e4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b3e8:	add	x0, x0, #0x621
    b3ec:	ret

000000000000b3f0 <zlibCompileFlags@@ZLIB_1.2.0.2>:
    b3f0:	mov	w0, #0xa9                  	// #169
    b3f4:	ret

000000000000b3f8 <zError@@Base>:
    b3f8:	adrp	x9, 21000 <gzclose_w@@ZLIB_1.2.3.5+0x13a88>
    b3fc:	ldr	x9, [x9, #4056]
    b400:	mov	w8, #0x2                   	// #2
    b404:	sub	x8, x8, w0, sxtw
    b408:	ldr	x0, [x9, x8, lsl #3]
    b40c:	ret
    b410:	mul	w0, w2, w1
    b414:	b	2450 <malloc@plt>
    b418:	mov	x0, x1
    b41c:	b	2550 <free@plt>

000000000000b420 <compress2@@Base>:
    b420:	sub	sp, sp, #0xb0
    b424:	stp	x29, x30, [sp, #112]
    b428:	stp	x22, x21, [sp, #144]
    b42c:	stp	x20, x19, [sp, #160]
    b430:	str	x23, [sp, #128]
    b434:	ldr	x23, [x1]
    b438:	mov	x21, x2
    b43c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b440:	mov	x20, x3
    b444:	mov	x19, x1
    b448:	mov	x22, x0
    b44c:	str	xzr, [x1]
    b450:	add	x2, x2, #0x621
    b454:	mov	x0, sp
    b458:	mov	w3, #0x70                  	// #112
    b45c:	mov	w1, w4
    b460:	add	x29, sp, #0x70
    b464:	stp	xzr, xzr, [sp, #64]
    b468:	str	xzr, [sp, #80]
    b46c:	bl	24d0 <deflateInit_@plt>
    b470:	cbnz	w0, b4f8 <compress2@@Base+0xd8>
    b474:	mov	w8, wzr
    b478:	str	x22, [sp, #24]
    b47c:	str	wzr, [sp, #32]
    b480:	str	x21, [sp]
    b484:	str	wzr, [sp, #8]
    b488:	mov	w22, #0xffffffff            	// #-1
    b48c:	cbnz	w8, b4a0 <compress2@@Base+0x80>
    b490:	cmp	x23, x22
    b494:	csel	x8, x23, x22, cc  // cc = lo, ul, last
    b498:	sub	x23, x23, x8
    b49c:	str	w8, [sp, #32]
    b4a0:	ldr	w8, [sp, #8]
    b4a4:	cbnz	w8, b4b8 <compress2@@Base+0x98>
    b4a8:	cmp	x20, x22
    b4ac:	csel	x8, x20, x22, cc  // cc = lo, ul, last
    b4b0:	sub	x20, x20, x8
    b4b4:	str	w8, [sp, #8]
    b4b8:	cmp	x20, #0x0
    b4bc:	cset	w8, eq  // eq = none
    b4c0:	lsl	w1, w8, #2
    b4c4:	mov	x0, sp
    b4c8:	bl	2480 <deflate@plt>
    b4cc:	cbnz	w0, b4dc <compress2@@Base+0xbc>
    b4d0:	ldr	w8, [sp, #32]
    b4d4:	cbnz	w8, b4a0 <compress2@@Base+0x80>
    b4d8:	b	b490 <compress2@@Base+0x70>
    b4dc:	ldr	x8, [sp, #40]
    b4e0:	mov	w21, w0
    b4e4:	mov	x0, sp
    b4e8:	str	x8, [x19]
    b4ec:	bl	2570 <deflateEnd@plt>
    b4f0:	cmp	w21, #0x1
    b4f4:	csel	w0, wzr, w21, eq  // eq = none
    b4f8:	ldp	x20, x19, [sp, #160]
    b4fc:	ldp	x22, x21, [sp, #144]
    b500:	ldr	x23, [sp, #128]
    b504:	ldp	x29, x30, [sp, #112]
    b508:	add	sp, sp, #0xb0
    b50c:	ret

000000000000b510 <compress@@Base>:
    b510:	mov	w4, #0xffffffff            	// #-1
    b514:	b	25b0 <compress2@plt>

000000000000b518 <compressBound@@ZLIB_1.2.0>:
    b518:	add	x8, x0, x0, lsr #12
    b51c:	add	x8, x8, x0, lsr #14
    b520:	add	x8, x8, x0, lsr #25
    b524:	add	x0, x8, #0xd
    b528:	ret

000000000000b52c <uncompress2@@ZLIB_1.2.9>:
    b52c:	sub	sp, sp, #0xc0
    b530:	stp	x29, x30, [sp, #112]
    b534:	stp	x24, x23, [sp, #144]
    b538:	stp	x22, x21, [sp, #160]
    b53c:	stp	x20, x19, [sp, #176]
    b540:	ldr	x23, [x1]
    b544:	ldr	x24, [x3]
    b548:	mov	x20, x3
    b54c:	mov	x19, x1
    b550:	str	x25, [sp, #128]
    b554:	add	x29, sp, #0x70
    b558:	cbz	x23, b568 <uncompress2@@ZLIB_1.2.9+0x3c>
    b55c:	mov	x21, x0
    b560:	str	xzr, [x19]
    b564:	b	b570 <uncompress2@@ZLIB_1.2.9+0x44>
    b568:	add	x21, x29, #0x1c
    b56c:	mov	w23, #0x1                   	// #1
    b570:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b574:	str	x2, [sp]
    b578:	add	x1, x1, #0x621
    b57c:	mov	x0, sp
    b580:	mov	w2, #0x70                  	// #112
    b584:	str	wzr, [sp, #8]
    b588:	stp	xzr, xzr, [sp, #72]
    b58c:	str	xzr, [sp, #64]
    b590:	bl	25a0 <inflateInit_@plt>
    b594:	mov	w22, w0
    b598:	cbz	w0, b5bc <uncompress2@@ZLIB_1.2.9+0x90>
    b59c:	mov	w0, w22
    b5a0:	ldp	x20, x19, [sp, #176]
    b5a4:	ldp	x22, x21, [sp, #160]
    b5a8:	ldp	x24, x23, [sp, #144]
    b5ac:	ldr	x25, [sp, #128]
    b5b0:	ldp	x29, x30, [sp, #112]
    b5b4:	add	sp, sp, #0xc0
    b5b8:	ret
    b5bc:	mov	w8, wzr
    b5c0:	str	x21, [sp, #24]
    b5c4:	str	wzr, [sp, #32]
    b5c8:	mov	w25, #0xffffffff            	// #-1
    b5cc:	cbnz	w8, b5e0 <uncompress2@@ZLIB_1.2.9+0xb4>
    b5d0:	cmp	x23, x25
    b5d4:	csel	x8, x23, x25, cc  // cc = lo, ul, last
    b5d8:	sub	x23, x23, x8
    b5dc:	str	w8, [sp, #32]
    b5e0:	ldr	w8, [sp, #8]
    b5e4:	cbnz	w8, b5f8 <uncompress2@@ZLIB_1.2.9+0xcc>
    b5e8:	cmp	x24, x25
    b5ec:	csel	x8, x24, x25, cc  // cc = lo, ul, last
    b5f0:	sub	x24, x24, x8
    b5f4:	str	w8, [sp, #8]
    b5f8:	mov	x0, sp
    b5fc:	mov	w1, wzr
    b600:	bl	23e0 <inflate@plt>
    b604:	cbnz	w0, b614 <uncompress2@@ZLIB_1.2.9+0xe8>
    b608:	ldr	w8, [sp, #32]
    b60c:	cbnz	w8, b5e0 <uncompress2@@ZLIB_1.2.9+0xb4>
    b610:	b	b5d0 <uncompress2@@ZLIB_1.2.9+0xa4>
    b614:	ldr	w8, [sp, #8]
    b618:	ldr	x9, [x20]
    b61c:	mov	w22, w0
    b620:	add	x8, x24, x8
    b624:	sub	x8, x9, x8
    b628:	str	x8, [x20]
    b62c:	ldr	x8, [sp, #40]
    b630:	add	x9, x29, #0x1c
    b634:	cmp	x21, x9
    b638:	b.eq	b644 <uncompress2@@ZLIB_1.2.9+0x118>  // b.none
    b63c:	str	x8, [x19]
    b640:	b	b654 <uncompress2@@ZLIB_1.2.9+0x128>
    b644:	cmp	x8, #0x0
    b648:	mov	w8, #0xfffffffb            	// #-5
    b64c:	ccmp	w22, w8, #0x0, ne  // ne = any
    b650:	csinc	x23, x23, xzr, ne  // ne = any
    b654:	mov	x0, sp
    b658:	bl	2530 <inflateEnd@plt>
    b65c:	cmp	w22, #0x2
    b660:	b.eq	b680 <uncompress2@@ZLIB_1.2.9+0x154>  // b.none
    b664:	cmp	w22, #0x1
    b668:	b.eq	b688 <uncompress2@@ZLIB_1.2.9+0x15c>  // b.none
    b66c:	cmn	w22, #0x5
    b670:	b.ne	b59c <uncompress2@@ZLIB_1.2.9+0x70>  // b.any
    b674:	ldr	w8, [sp, #32]
    b678:	cmn	x23, x8
    b67c:	b.eq	b59c <uncompress2@@ZLIB_1.2.9+0x70>  // b.none
    b680:	mov	w22, #0xfffffffd            	// #-3
    b684:	b	b59c <uncompress2@@ZLIB_1.2.9+0x70>
    b688:	mov	w22, wzr
    b68c:	b	b59c <uncompress2@@ZLIB_1.2.9+0x70>

000000000000b690 <uncompress@@Base>:
    b690:	sub	sp, sp, #0x20
    b694:	str	x3, [sp, #8]
    b698:	add	x3, sp, #0x8
    b69c:	stp	x29, x30, [sp, #16]
    b6a0:	add	x29, sp, #0x10
    b6a4:	bl	2520 <uncompress2@plt>
    b6a8:	ldp	x29, x30, [sp, #16]
    b6ac:	add	sp, sp, #0x20
    b6b0:	ret

000000000000b6b4 <gzclose@@Base>:
    b6b4:	cbz	x0, b6cc <gzclose@@Base+0x18>
    b6b8:	ldr	w8, [x0, #24]
    b6bc:	mov	w9, #0x1c4f                	// #7247
    b6c0:	cmp	w8, w9
    b6c4:	b.ne	b6d4 <gzclose@@Base+0x20>  // b.any
    b6c8:	b	23f0 <gzclose_r@plt>
    b6cc:	mov	w0, #0xfffffffe            	// #-2
    b6d0:	ret
    b6d4:	b	2560 <gzclose_w@plt>

000000000000b6d8 <gzopen@@Base>:
    b6d8:	mov	x2, x1
    b6dc:	mov	w1, #0xffffffff            	// #-1
    b6e0:	b	b6e4 <gzopen@@Base+0xc>
    b6e4:	stp	x29, x30, [sp, #-80]!
    b6e8:	stp	x26, x25, [sp, #16]
    b6ec:	stp	x24, x23, [sp, #32]
    b6f0:	stp	x22, x21, [sp, #48]
    b6f4:	stp	x20, x19, [sp, #64]
    b6f8:	mov	x29, sp
    b6fc:	cbz	x0, b990 <gzopen@@Base+0x2b8>
    b700:	mov	x21, x0
    b704:	mov	w0, #0xe8                  	// #232
    b708:	mov	x22, x2
    b70c:	mov	w20, w1
    b710:	bl	2450 <malloc@plt>
    b714:	mov	x19, x0
    b718:	cbz	x0, b994 <gzopen@@Base+0x2bc>
    b71c:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b720:	ldr	d0, [x8, #1576]
    b724:	movi	d1, #0xffffffff
    b728:	str	xzr, [x19, #112]
    b72c:	str	wzr, [x19, #24]
    b730:	str	d1, [x19, #88]
    b734:	str	d0, [x19, #40]
    b738:	str	wzr, [x19, #64]
    b73c:	ldrb	w15, [x22]
    b740:	cbz	w15, b988 <gzopen@@Base+0x2b0>
    b744:	adrp	x12, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b748:	mov	w8, wzr
    b74c:	mov	w24, wzr
    b750:	mov	w25, wzr
    b754:	mov	w26, wzr
    b758:	add	x9, x22, #0x1
    b75c:	mov	w10, #0x4                   	// #4
    b760:	mov	w11, #0x3                   	// #3
    b764:	add	x12, x12, #0x630
    b768:	mov	w13, #0x1                   	// #1
    b76c:	mov	w14, #0x2                   	// #2
    b770:	sub	w16, w15, #0x30
    b774:	and	w16, w16, #0xff
    b778:	and	w15, w15, #0xff
    b77c:	cmp	w16, #0x9
    b780:	b.hi	b790 <gzopen@@Base+0xb8>  // b.pmore
    b784:	sub	w15, w15, #0x30
    b788:	str	w15, [x19, #88]
    b78c:	b	b848 <gzopen@@Base+0x170>
    b790:	cmp	w15, #0x60
    b794:	b.le	b7c4 <gzopen@@Base+0xec>
    b798:	cmp	w15, #0x71
    b79c:	b.gt	b7e8 <gzopen@@Base+0x110>
    b7a0:	sub	w15, w15, #0x61
    b7a4:	cmp	w15, #0x7
    b7a8:	b.hi	b848 <gzopen@@Base+0x170>  // b.pmore
    b7ac:	adr	x16, b7bc <gzopen@@Base+0xe4>
    b7b0:	ldrb	w17, [x12, x15]
    b7b4:	add	x16, x16, x17, lsl #2
    b7b8:	br	x16
    b7bc:	mov	w24, #0x1                   	// #1
    b7c0:	b	b844 <gzopen@@Base+0x16c>
    b7c4:	cmp	w15, #0x51
    b7c8:	b.le	b808 <gzopen@@Base+0x130>
    b7cc:	cmp	w15, #0x52
    b7d0:	b.eq	b830 <gzopen@@Base+0x158>  // b.none
    b7d4:	cmp	w15, #0x54
    b7d8:	b.ne	b848 <gzopen@@Base+0x170>  // b.any
    b7dc:	mov	w8, #0x1                   	// #1
    b7e0:	str	w8, [x19, #64]
    b7e4:	b	b848 <gzopen@@Base+0x170>
    b7e8:	cmp	w15, #0x78
    b7ec:	b.eq	b838 <gzopen@@Base+0x160>  // b.none
    b7f0:	cmp	w15, #0x77
    b7f4:	b.eq	b840 <gzopen@@Base+0x168>  // b.none
    b7f8:	cmp	w15, #0x72
    b7fc:	b.ne	b848 <gzopen@@Base+0x170>  // b.any
    b800:	mov	w24, #0x1c4f                	// #7247
    b804:	b	b844 <gzopen@@Base+0x16c>
    b808:	cmp	w15, #0x46
    b80c:	b.ne	b854 <gzopen@@Base+0x17c>  // b.any
    b810:	str	w10, [x19, #92]
    b814:	b	b848 <gzopen@@Base+0x170>
    b818:	mov	w26, #0x1                   	// #1
    b81c:	b	b848 <gzopen@@Base+0x170>
    b820:	str	w13, [x19, #92]
    b824:	b	b848 <gzopen@@Base+0x170>
    b828:	str	w14, [x19, #92]
    b82c:	b	b848 <gzopen@@Base+0x170>
    b830:	str	w11, [x19, #92]
    b834:	b	b848 <gzopen@@Base+0x170>
    b838:	mov	w25, #0x1                   	// #1
    b83c:	b	b848 <gzopen@@Base+0x170>
    b840:	mov	w24, #0x79b1                	// #31153
    b844:	str	w24, [x19, #24]
    b848:	ldrb	w15, [x9], #1
    b84c:	cbnz	w15, b770 <gzopen@@Base+0x98>
    b850:	b	b860 <gzopen@@Base+0x188>
    b854:	cmp	w15, #0x2b
    b858:	b.eq	b988 <gzopen@@Base+0x2b0>  // b.none
    b85c:	b	b848 <gzopen@@Base+0x170>
    b860:	mov	w9, #0x1c4f                	// #7247
    b864:	cmp	w24, w9
    b868:	b.eq	b874 <gzopen@@Base+0x19c>  // b.none
    b86c:	cbz	w24, b988 <gzopen@@Base+0x2b0>
    b870:	b	b880 <gzopen@@Base+0x1a8>
    b874:	cbnz	w8, b988 <gzopen@@Base+0x2b0>
    b878:	mov	w8, #0x1                   	// #1
    b87c:	str	w8, [x19, #64]
    b880:	mov	x0, x21
    b884:	bl	23d0 <strlen@plt>
    b888:	add	x23, x0, #0x1
    b88c:	mov	x0, x23
    b890:	bl	2450 <malloc@plt>
    b894:	str	x0, [x19, #32]
    b898:	cbz	x0, b988 <gzopen@@Base+0x2b0>
    b89c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b8a0:	add	x2, x2, #0x652
    b8a4:	mov	x1, x23
    b8a8:	mov	x3, x21
    b8ac:	mov	x22, x0
    b8b0:	bl	2440 <snprintf@plt>
    b8b4:	cmp	w26, #0x0
    b8b8:	mov	w9, #0x1c4f                	// #7247
    b8bc:	cset	w8, ne  // ne = any
    b8c0:	cmp	w24, w9
    b8c4:	b.ne	b8d0 <gzopen@@Base+0x1f8>  // b.any
    b8c8:	mov	w9, wzr
    b8cc:	b	b8f8 <gzopen@@Base+0x220>
    b8d0:	cmp	w25, #0x0
    b8d4:	mov	w9, #0xc1                  	// #193
    b8d8:	mov	w10, #0x41                  	// #65
    b8dc:	mov	w11, #0x79b1                	// #31153
    b8e0:	mov	w12, #0x400                 	// #1024
    b8e4:	csel	w9, w10, w9, eq  // eq = none
    b8e8:	cmp	w24, w11
    b8ec:	mov	w10, #0x200                 	// #512
    b8f0:	csel	w10, w10, w12, eq  // eq = none
    b8f4:	orr	w9, w10, w9
    b8f8:	tbnz	w20, #31, b904 <gzopen@@Base+0x22c>
    b8fc:	str	w20, [x19, #28]
    b900:	b	b928 <gzopen@@Base+0x250>
    b904:	lsl	w8, w8, #19
    b908:	orr	w1, w9, w8
    b90c:	mov	w2, #0x1b6                 	// #438
    b910:	mov	x0, x21
    b914:	bl	2460 <open@plt>
    b918:	mov	w20, w0
    b91c:	cmn	w0, #0x1
    b920:	str	w0, [x19, #28]
    b924:	b.eq	b980 <gzopen@@Base+0x2a8>  // b.none
    b928:	cmp	w24, #0x1
    b92c:	b.ne	b94c <gzopen@@Base+0x274>  // b.any
    b930:	mov	w2, #0x2                   	// #2
    b934:	mov	w0, w20
    b938:	mov	x1, xzr
    b93c:	bl	24a0 <lseek64@plt>
    b940:	mov	w8, #0x79b1                	// #31153
    b944:	str	w8, [x19, #24]
    b948:	b	b974 <gzopen@@Base+0x29c>
    b94c:	mov	w8, #0x1c4f                	// #7247
    b950:	cmp	w24, w8
    b954:	b.ne	b974 <gzopen@@Base+0x29c>  // b.any
    b958:	mov	w2, #0x1                   	// #1
    b95c:	mov	w0, w20
    b960:	mov	x1, xzr
    b964:	bl	24a0 <lseek64@plt>
    b968:	cmn	x0, #0x1
    b96c:	csel	x8, xzr, x0, eq  // eq = none
    b970:	str	x8, [x19, #72]
    b974:	mov	x0, x19
    b978:	bl	bafc <gzrewind@@Base+0x6c>
    b97c:	b	b994 <gzopen@@Base+0x2bc>
    b980:	mov	x0, x22
    b984:	bl	2550 <free@plt>
    b988:	mov	x0, x19
    b98c:	bl	2550 <free@plt>
    b990:	mov	x19, xzr
    b994:	mov	x0, x19
    b998:	ldp	x20, x19, [sp, #64]
    b99c:	ldp	x22, x21, [sp, #48]
    b9a0:	ldp	x24, x23, [sp, #32]
    b9a4:	ldp	x26, x25, [sp, #16]
    b9a8:	ldp	x29, x30, [sp], #80
    b9ac:	ret

000000000000b9b0 <gzopen64@@ZLIB_1.2.3.3>:
    b9b0:	mov	x2, x1
    b9b4:	mov	w1, #0xffffffff            	// #-1
    b9b8:	b	b6e4 <gzopen@@Base+0xc>

000000000000b9bc <gzdopen@@Base>:
    b9bc:	stp	x29, x30, [sp, #-48]!
    b9c0:	cmn	w0, #0x1
    b9c4:	str	x21, [sp, #16]
    b9c8:	stp	x20, x19, [sp, #32]
    b9cc:	mov	x29, sp
    b9d0:	b.eq	ba24 <gzdopen@@Base+0x68>  // b.none
    b9d4:	mov	w19, w0
    b9d8:	mov	w0, #0x13                  	// #19
    b9dc:	mov	x20, x1
    b9e0:	bl	2450 <malloc@plt>
    b9e4:	cbz	x0, ba24 <gzdopen@@Base+0x68>
    b9e8:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    b9ec:	add	x2, x2, #0x638
    b9f0:	mov	w1, #0x13                  	// #19
    b9f4:	mov	w3, w19
    b9f8:	mov	x21, x0
    b9fc:	bl	2440 <snprintf@plt>
    ba00:	mov	x0, x21
    ba04:	mov	w1, w19
    ba08:	mov	x2, x20
    ba0c:	bl	b6e4 <gzopen@@Base+0xc>
    ba10:	mov	x19, x0
    ba14:	mov	x0, x21
    ba18:	bl	2550 <free@plt>
    ba1c:	mov	x0, x19
    ba20:	b	ba28 <gzdopen@@Base+0x6c>
    ba24:	mov	x0, xzr
    ba28:	ldp	x20, x19, [sp, #32]
    ba2c:	ldr	x21, [sp, #16]
    ba30:	ldp	x29, x30, [sp], #48
    ba34:	ret

000000000000ba38 <gzbuffer@@ZLIB_1.2.3.5>:
    ba38:	cbz	x0, ba88 <gzbuffer@@ZLIB_1.2.3.5+0x50>
    ba3c:	ldr	w9, [x0, #24]
    ba40:	mov	w10, #0x79b1                	// #31153
    ba44:	mov	x8, x0
    ba48:	cmp	w9, w10
    ba4c:	b.eq	ba5c <gzbuffer@@ZLIB_1.2.3.5+0x24>  // b.none
    ba50:	mov	w10, #0x1c4f                	// #7247
    ba54:	cmp	w9, w10
    ba58:	b.ne	ba88 <gzbuffer@@ZLIB_1.2.3.5+0x50>  // b.any
    ba5c:	cmp	w1, w1, lsl #1
    ba60:	mov	w0, #0xffffffff            	// #-1
    ba64:	b.hi	ba84 <gzbuffer@@ZLIB_1.2.3.5+0x4c>  // b.pmore
    ba68:	ldr	w9, [x8, #40]
    ba6c:	cbnz	w9, ba84 <gzbuffer@@ZLIB_1.2.3.5+0x4c>
    ba70:	cmp	w1, #0x2
    ba74:	mov	w9, #0x2                   	// #2
    ba78:	mov	w0, wzr
    ba7c:	csel	w9, w1, w9, hi  // hi = pmore
    ba80:	str	w9, [x8, #44]
    ba84:	ret
    ba88:	mov	w0, #0xffffffff            	// #-1
    ba8c:	ret

000000000000ba90 <gzrewind@@Base>:
    ba90:	stp	x29, x30, [sp, #-32]!
    ba94:	str	x19, [sp, #16]
    ba98:	mov	x29, sp
    ba9c:	cbz	x0, baec <gzrewind@@Base+0x5c>
    baa0:	ldr	w8, [x0, #24]
    baa4:	mov	w9, #0x1c4f                	// #7247
    baa8:	mov	x19, x0
    baac:	cmp	w8, w9
    bab0:	b.ne	baec <gzrewind@@Base+0x5c>  // b.any
    bab4:	ldr	w8, [x19, #108]
    bab8:	cbz	w8, bac4 <gzrewind@@Base+0x34>
    babc:	cmn	w8, #0x5
    bac0:	b.ne	baec <gzrewind@@Base+0x5c>  // b.any
    bac4:	ldr	w0, [x19, #28]
    bac8:	ldr	x1, [x19, #72]
    bacc:	mov	w2, wzr
    bad0:	bl	24a0 <lseek64@plt>
    bad4:	cmn	x0, #0x1
    bad8:	b.eq	baf0 <gzrewind@@Base+0x60>  // b.none
    badc:	mov	x0, x19
    bae0:	bl	bafc <gzrewind@@Base+0x6c>
    bae4:	mov	w0, wzr
    bae8:	b	baf0 <gzrewind@@Base+0x60>
    baec:	mov	w0, #0xffffffff            	// #-1
    baf0:	ldr	x19, [sp, #16]
    baf4:	ldp	x29, x30, [sp], #32
    baf8:	ret
    bafc:	stp	x29, x30, [sp, #-32]!
    bb00:	ldr	w8, [x0, #24]
    bb04:	mov	w9, #0x1c4f                	// #7247
    bb08:	str	x19, [sp, #16]
    bb0c:	mov	x19, x0
    bb10:	cmp	w8, w9
    bb14:	mov	x29, sp
    bb18:	str	wzr, [x0]
    bb1c:	b.ne	bb28 <gzrewind@@Base+0x98>  // b.any
    bb20:	str	xzr, [x19, #80]
    bb24:	str	wzr, [x19, #68]
    bb28:	ldr	x0, [x19, #112]
    bb2c:	str	wzr, [x19, #104]
    bb30:	cbz	x0, bb48 <gzrewind@@Base+0xb8>
    bb34:	ldr	w8, [x19, #108]
    bb38:	cmn	w8, #0x4
    bb3c:	b.eq	bb44 <gzrewind@@Base+0xb4>  // b.none
    bb40:	bl	2550 <free@plt>
    bb44:	str	xzr, [x19, #112]
    bb48:	str	wzr, [x19, #108]
    bb4c:	str	xzr, [x19, #16]
    bb50:	str	wzr, [x19, #128]
    bb54:	ldr	x19, [sp, #16]
    bb58:	ldp	x29, x30, [sp], #32
    bb5c:	ret

000000000000bb60 <gzseek64@@ZLIB_1.2.3.3>:
    bb60:	stp	x29, x30, [sp, #-32]!
    bb64:	stp	x20, x19, [sp, #16]
    bb68:	mov	x29, sp
    bb6c:	cbz	x0, bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>
    bb70:	ldr	w8, [x0, #24]
    bb74:	mov	w9, #0x79b1                	// #31153
    bb78:	mov	x19, x1
    bb7c:	mov	x20, x0
    bb80:	cmp	w8, w9
    bb84:	b.eq	bb94 <gzseek64@@ZLIB_1.2.3.3+0x34>  // b.none
    bb88:	mov	w9, #0x1c4f                	// #7247
    bb8c:	cmp	w8, w9
    bb90:	b.ne	bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    bb94:	ldr	w9, [x20, #108]
    bb98:	cbz	w9, bba4 <gzseek64@@ZLIB_1.2.3.3+0x44>
    bb9c:	cmn	w9, #0x5
    bba0:	b.ne	bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    bba4:	cmp	w2, #0x1
    bba8:	b.ls	bbbc <gzseek64@@ZLIB_1.2.3.3+0x5c>  // b.plast
    bbac:	mov	x0, #0xffffffffffffffff    	// #-1
    bbb0:	ldp	x20, x19, [sp, #16]
    bbb4:	ldp	x29, x30, [sp], #32
    bbb8:	ret
    bbbc:	cbz	w2, bbd4 <gzseek64@@ZLIB_1.2.3.3+0x74>
    bbc0:	ldr	w9, [x20, #104]
    bbc4:	cbz	w9, bbdc <gzseek64@@ZLIB_1.2.3.3+0x7c>
    bbc8:	ldr	x9, [x20, #96]
    bbcc:	add	x19, x9, x19
    bbd0:	b	bbdc <gzseek64@@ZLIB_1.2.3.3+0x7c>
    bbd4:	ldr	x9, [x20, #16]
    bbd8:	sub	x19, x19, x9
    bbdc:	mov	w9, #0x1c4f                	// #7247
    bbe0:	cmp	w8, w9
    bbe4:	str	wzr, [x20, #104]
    bbe8:	b.ne	bc60 <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.any
    bbec:	ldr	w9, [x20, #68]
    bbf0:	cmp	w9, #0x1
    bbf4:	b.ne	bc60 <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.any
    bbf8:	ldr	x9, [x20, #16]
    bbfc:	cmn	x9, x19
    bc00:	b.mi	bc60 <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.first
    bc04:	ldr	w8, [x20]
    bc08:	ldr	w0, [x20, #28]
    bc0c:	mov	w2, #0x1                   	// #1
    bc10:	sub	x1, x19, x8
    bc14:	bl	24a0 <lseek64@plt>
    bc18:	cmn	x0, #0x1
    bc1c:	b.eq	bbb0 <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    bc20:	ldr	x0, [x20, #112]
    bc24:	str	wzr, [x20]
    bc28:	str	xzr, [x20, #80]
    bc2c:	str	wzr, [x20, #104]
    bc30:	cbz	x0, bc48 <gzseek64@@ZLIB_1.2.3.3+0xe8>
    bc34:	ldr	w8, [x20, #108]
    bc38:	cmn	w8, #0x4
    bc3c:	b.eq	bc44 <gzseek64@@ZLIB_1.2.3.3+0xe4>  // b.none
    bc40:	bl	2550 <free@plt>
    bc44:	str	xzr, [x20, #112]
    bc48:	ldr	x8, [x20, #16]
    bc4c:	str	wzr, [x20, #108]
    bc50:	str	wzr, [x20, #128]
    bc54:	add	x0, x8, x19
    bc58:	str	x0, [x20, #16]
    bc5c:	b	bbb0 <gzseek64@@ZLIB_1.2.3.3+0x50>
    bc60:	tbnz	x19, #63, bcb4 <gzseek64@@ZLIB_1.2.3.3+0x154>
    bc64:	mov	w9, #0x1c4f                	// #7247
    bc68:	cmp	w8, w9
    bc6c:	b.ne	bc98 <gzseek64@@ZLIB_1.2.3.3+0x138>  // b.any
    bc70:	ldr	w8, [x20]
    bc74:	ldp	x9, x10, [x20, #8]
    bc78:	cmp	x19, x8
    bc7c:	csel	w11, w19, w8, lt  // lt = tstop
    bc80:	sub	w8, w8, w11
    bc84:	add	x9, x9, x11
    bc88:	add	x10, x10, x11
    bc8c:	sub	x19, x19, x11
    bc90:	str	w8, [x20]
    bc94:	stp	x9, x10, [x20, #8]
    bc98:	cbz	x19, bca8 <gzseek64@@ZLIB_1.2.3.3+0x148>
    bc9c:	mov	w8, #0x1                   	// #1
    bca0:	str	w8, [x20, #104]
    bca4:	str	x19, [x20, #96]
    bca8:	ldr	x8, [x20, #16]
    bcac:	add	x0, x8, x19
    bcb0:	b	bbb0 <gzseek64@@ZLIB_1.2.3.3+0x50>
    bcb4:	mov	w9, #0x1c4f                	// #7247
    bcb8:	cmp	w8, w9
    bcbc:	b.ne	bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    bcc0:	ldr	x8, [x20, #16]
    bcc4:	adds	x19, x8, x19
    bcc8:	b.mi	bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.first
    bccc:	mov	x0, x20
    bcd0:	bl	2580 <gzrewind@plt>
    bcd4:	cmn	w0, #0x1
    bcd8:	b.eq	bbac <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.none
    bcdc:	ldr	w8, [x20, #24]
    bce0:	b	bc64 <gzseek64@@ZLIB_1.2.3.3+0x104>
    bce4:	stp	x29, x30, [sp, #-48]!
    bce8:	stp	x22, x21, [sp, #16]
    bcec:	stp	x20, x19, [sp, #32]
    bcf0:	mov	x20, x0
    bcf4:	ldr	x0, [x0, #112]
    bcf8:	mov	x19, x2
    bcfc:	mov	w21, w1
    bd00:	mov	x29, sp
    bd04:	cbz	x0, bd1c <gzseek64@@ZLIB_1.2.3.3+0x1bc>
    bd08:	ldr	w8, [x20, #108]
    bd0c:	cmn	w8, #0x4
    bd10:	b.eq	bd18 <gzseek64@@ZLIB_1.2.3.3+0x1b8>  // b.none
    bd14:	bl	2550 <free@plt>
    bd18:	str	xzr, [x20, #112]
    bd1c:	cmn	w21, #0x5
    bd20:	b.eq	bd2c <gzseek64@@ZLIB_1.2.3.3+0x1cc>  // b.none
    bd24:	cbz	w21, bd2c <gzseek64@@ZLIB_1.2.3.3+0x1cc>
    bd28:	str	wzr, [x20]
    bd2c:	cmn	w21, #0x4
    bd30:	str	w21, [x20, #108]
    bd34:	b.eq	bdbc <gzseek64@@ZLIB_1.2.3.3+0x25c>  // b.none
    bd38:	cbz	x19, bdbc <gzseek64@@ZLIB_1.2.3.3+0x25c>
    bd3c:	ldr	x21, [x20, #32]
    bd40:	mov	x0, x21
    bd44:	bl	23d0 <strlen@plt>
    bd48:	mov	x22, x0
    bd4c:	mov	x0, x19
    bd50:	bl	23d0 <strlen@plt>
    bd54:	add	x8, x22, x0
    bd58:	add	x0, x8, #0x3
    bd5c:	bl	2450 <malloc@plt>
    bd60:	str	x0, [x20, #112]
    bd64:	cbz	x0, bdb4 <gzseek64@@ZLIB_1.2.3.3+0x254>
    bd68:	mov	x22, x0
    bd6c:	mov	x0, x21
    bd70:	bl	23d0 <strlen@plt>
    bd74:	mov	x20, x0
    bd78:	mov	x0, x19
    bd7c:	bl	23d0 <strlen@plt>
    bd80:	add	x8, x20, x0
    bd84:	mov	x0, x22
    bd88:	mov	x3, x21
    bd8c:	mov	x5, x19
    bd90:	ldp	x20, x19, [sp, #32]
    bd94:	ldp	x22, x21, [sp, #16]
    bd98:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    bd9c:	adrp	x4, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    bda0:	add	x2, x2, #0x64e
    bda4:	add	x1, x8, #0x3
    bda8:	add	x4, x4, #0x655
    bdac:	ldp	x29, x30, [sp], #48
    bdb0:	b	2440 <snprintf@plt>
    bdb4:	mov	w8, #0xfffffffc            	// #-4
    bdb8:	str	w8, [x20, #108]
    bdbc:	ldp	x20, x19, [sp, #32]
    bdc0:	ldp	x22, x21, [sp, #16]
    bdc4:	ldp	x29, x30, [sp], #48
    bdc8:	ret

000000000000bdcc <gzseek@@Base>:
    bdcc:	b	23c0 <gzseek64@plt>

000000000000bdd0 <gztell64@@ZLIB_1.2.3.3>:
    bdd0:	cbz	x0, be04 <gztell64@@ZLIB_1.2.3.3+0x34>
    bdd4:	ldr	w8, [x0, #24]
    bdd8:	mov	w9, #0x79b1                	// #31153
    bddc:	cmp	w8, w9
    bde0:	b.eq	bdf0 <gztell64@@ZLIB_1.2.3.3+0x20>  // b.none
    bde4:	mov	w9, #0x1c4f                	// #7247
    bde8:	cmp	w8, w9
    bdec:	b.ne	be04 <gztell64@@ZLIB_1.2.3.3+0x34>  // b.any
    bdf0:	ldr	w9, [x0, #104]
    bdf4:	ldr	x8, [x0, #16]
    bdf8:	cbz	w9, be0c <gztell64@@ZLIB_1.2.3.3+0x3c>
    bdfc:	ldr	x9, [x0, #96]
    be00:	b	be10 <gztell64@@ZLIB_1.2.3.3+0x40>
    be04:	mov	x0, #0xffffffffffffffff    	// #-1
    be08:	ret
    be0c:	mov	x9, xzr
    be10:	add	x0, x9, x8
    be14:	ret

000000000000be18 <gztell@@Base>:
    be18:	cbz	x0, be4c <gztell@@Base+0x34>
    be1c:	ldr	w8, [x0, #24]
    be20:	mov	w9, #0x79b1                	// #31153
    be24:	cmp	w8, w9
    be28:	b.eq	be38 <gztell@@Base+0x20>  // b.none
    be2c:	mov	w9, #0x1c4f                	// #7247
    be30:	cmp	w8, w9
    be34:	b.ne	be4c <gztell@@Base+0x34>  // b.any
    be38:	ldr	w9, [x0, #104]
    be3c:	ldr	x8, [x0, #16]
    be40:	cbz	w9, be54 <gztell@@Base+0x3c>
    be44:	ldr	x9, [x0, #96]
    be48:	b	be58 <gztell@@Base+0x40>
    be4c:	mov	x0, #0xffffffffffffffff    	// #-1
    be50:	ret
    be54:	mov	x9, xzr
    be58:	add	x0, x9, x8
    be5c:	ret

000000000000be60 <gzoffset64@@ZLIB_1.2.3.5>:
    be60:	stp	x29, x30, [sp, #-32]!
    be64:	str	x19, [sp, #16]
    be68:	mov	x29, sp
    be6c:	cbz	x0, bec4 <gzoffset64@@ZLIB_1.2.3.5+0x64>
    be70:	ldr	w8, [x0, #24]
    be74:	mov	w9, #0x79b1                	// #31153
    be78:	mov	x19, x0
    be7c:	cmp	w8, w9
    be80:	b.eq	be90 <gzoffset64@@ZLIB_1.2.3.5+0x30>  // b.none
    be84:	mov	w9, #0x1c4f                	// #7247
    be88:	cmp	w8, w9
    be8c:	b.ne	bec4 <gzoffset64@@ZLIB_1.2.3.5+0x64>  // b.any
    be90:	ldr	w0, [x19, #28]
    be94:	mov	w2, #0x1                   	// #1
    be98:	mov	x1, xzr
    be9c:	bl	24a0 <lseek64@plt>
    bea0:	cmn	x0, #0x1
    bea4:	b.eq	bec8 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.none
    bea8:	ldr	w8, [x19, #24]
    beac:	mov	w9, #0x1c4f                	// #7247
    beb0:	cmp	w8, w9
    beb4:	b.ne	bec8 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.any
    beb8:	ldr	w8, [x19, #128]
    bebc:	sub	x0, x0, x8
    bec0:	b	bec8 <gzoffset64@@ZLIB_1.2.3.5+0x68>
    bec4:	mov	x0, #0xffffffffffffffff    	// #-1
    bec8:	ldr	x19, [sp, #16]
    becc:	ldp	x29, x30, [sp], #32
    bed0:	ret

000000000000bed4 <gzoffset@@ZLIB_1.2.3.5>:
    bed4:	b	2590 <gzoffset64@plt>

000000000000bed8 <gzeof@@Base>:
    bed8:	cbz	x0, bef0 <gzeof@@Base+0x18>
    bedc:	ldr	w8, [x0, #24]
    bee0:	mov	w9, #0x1c4f                	// #7247
    bee4:	cmp	w8, w9
    bee8:	b.ne	bef4 <gzeof@@Base+0x1c>  // b.any
    beec:	ldr	w0, [x0, #84]
    bef0:	ret
    bef4:	mov	w0, wzr
    bef8:	ret

000000000000befc <gzerror@@Base>:
    befc:	cbz	x0, bf5c <gzerror@@Base+0x60>
    bf00:	ldr	w8, [x0, #24]
    bf04:	mov	w9, #0x79b1                	// #31153
    bf08:	cmp	w8, w9
    bf0c:	b.eq	bf1c <gzerror@@Base+0x20>  // b.none
    bf10:	mov	w9, #0x1c4f                	// #7247
    bf14:	cmp	w8, w9
    bf18:	b.ne	bf40 <gzerror@@Base+0x44>  // b.any
    bf1c:	cbz	x1, bf28 <gzerror@@Base+0x2c>
    bf20:	ldr	w8, [x0, #108]
    bf24:	str	w8, [x1]
    bf28:	ldr	w8, [x0, #108]
    bf2c:	cmn	w8, #0x4
    bf30:	b.ne	bf48 <gzerror@@Base+0x4c>  // b.any
    bf34:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    bf38:	add	x0, x0, #0x640
    bf3c:	ret
    bf40:	mov	x0, xzr
    bf44:	ret
    bf48:	ldr	x8, [x0, #112]
    bf4c:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    bf50:	add	x9, x9, #0x657
    bf54:	cmp	x8, #0x0
    bf58:	csel	x0, x9, x8, eq  // eq = none
    bf5c:	ret

000000000000bf60 <gzclearerr@@ZLIB_1.2.0.2>:
    bf60:	stp	x29, x30, [sp, #-32]!
    bf64:	str	x19, [sp, #16]
    bf68:	mov	x29, sp
    bf6c:	cbz	x0, bfb4 <gzclearerr@@ZLIB_1.2.0.2+0x54>
    bf70:	ldr	w8, [x0, #24]
    bf74:	mov	w9, #0x79b1                	// #31153
    bf78:	mov	x19, x0
    bf7c:	cmp	w8, w9
    bf80:	b.eq	bf94 <gzclearerr@@ZLIB_1.2.0.2+0x34>  // b.none
    bf84:	mov	w9, #0x1c4f                	// #7247
    bf88:	cmp	w8, w9
    bf8c:	b.ne	bfb4 <gzclearerr@@ZLIB_1.2.0.2+0x54>  // b.any
    bf90:	str	xzr, [x19, #80]
    bf94:	ldr	x0, [x19, #112]
    bf98:	cbz	x0, bfb0 <gzclearerr@@ZLIB_1.2.0.2+0x50>
    bf9c:	ldr	w8, [x19, #108]
    bfa0:	cmn	w8, #0x4
    bfa4:	b.eq	bfac <gzclearerr@@ZLIB_1.2.0.2+0x4c>  // b.none
    bfa8:	bl	2550 <free@plt>
    bfac:	str	xzr, [x19, #112]
    bfb0:	str	wzr, [x19, #108]
    bfb4:	ldr	x19, [sp, #16]
    bfb8:	ldp	x29, x30, [sp], #32
    bfbc:	ret

000000000000bfc0 <gzread@@Base>:
    bfc0:	stp	x29, x30, [sp, #-32]!
    bfc4:	str	x19, [sp, #16]
    bfc8:	mov	x29, sp
    bfcc:	cbz	x0, c030 <gzread@@Base+0x70>
    bfd0:	ldr	w8, [x0, #24]
    bfd4:	mov	w9, #0x1c4f                	// #7247
    bfd8:	mov	x19, x0
    bfdc:	cmp	w8, w9
    bfe0:	b.ne	c030 <gzread@@Base+0x70>  // b.any
    bfe4:	ldr	w8, [x19, #108]
    bfe8:	cbz	w8, bff4 <gzread@@Base+0x34>
    bfec:	cmn	w8, #0x5
    bff0:	b.ne	c030 <gzread@@Base+0x70>  // b.any
    bff4:	tbnz	w2, #31, c01c <gzread@@Base+0x5c>
    bff8:	mov	w2, w2
    bffc:	mov	x0, x19
    c000:	bl	c040 <gzread@@Base+0x80>
    c004:	cbnz	w0, c034 <gzread@@Base+0x74>
    c008:	ldr	w8, [x19, #108]
    c00c:	cbz	w8, c034 <gzread@@Base+0x74>
    c010:	cmn	w8, #0x5
    c014:	b.eq	c034 <gzread@@Base+0x74>  // b.none
    c018:	b	c030 <gzread@@Base+0x70>
    c01c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c020:	add	x2, x2, #0x65f
    c024:	mov	w1, #0xfffffffe            	// #-2
    c028:	mov	x0, x19
    c02c:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c030:	mov	w0, #0xffffffff            	// #-1
    c034:	ldr	x19, [sp, #16]
    c038:	ldp	x29, x30, [sp], #32
    c03c:	ret
    c040:	sub	sp, sp, #0x50
    c044:	stp	x29, x30, [sp, #16]
    c048:	stp	x24, x23, [sp, #32]
    c04c:	stp	x22, x21, [sp, #48]
    c050:	stp	x20, x19, [sp, #64]
    c054:	add	x29, sp, #0x10
    c058:	cbz	x2, c188 <gzread@@Base+0x1c8>
    c05c:	ldr	w8, [x0, #104]
    c060:	mov	x20, x2
    c064:	mov	x21, x1
    c068:	mov	x19, x0
    c06c:	cbz	w8, c088 <gzread@@Base+0xc8>
    c070:	ldr	x1, [x19, #96]
    c074:	mov	x0, x19
    c078:	str	wzr, [x19, #104]
    c07c:	bl	c3f8 <gzungetc@@ZLIB_1.2.0.2+0x130>
    c080:	cmn	w0, #0x1
    c084:	b.eq	c188 <gzread@@Base+0x1c8>  // b.none
    c088:	mov	x22, xzr
    c08c:	mov	w24, #0xffffffff            	// #-1
    c090:	cmp	x20, x24
    c094:	csinv	w23, w20, wzr, cc  // cc = lo, ul, last
    c098:	stur	w23, [x29, #-4]
    c09c:	ldr	w8, [x19]
    c0a0:	cbz	w8, c0f8 <gzread@@Base+0x138>
    c0a4:	cmp	w8, w23
    c0a8:	b.cs	c0b4 <gzread@@Base+0xf4>  // b.hs, b.nlast
    c0ac:	mov	w23, w8
    c0b0:	stur	w8, [x29, #-4]
    c0b4:	ldr	x1, [x19, #8]
    c0b8:	mov	w2, w23
    c0bc:	mov	x0, x21
    c0c0:	bl	2390 <memcpy@plt>
    c0c4:	ldr	x8, [x19, #8]
    c0c8:	ldr	w9, [x19]
    c0cc:	add	x8, x8, w23, uxtw
    c0d0:	sub	w9, w9, w23
    c0d4:	str	x8, [x19, #8]
    c0d8:	str	w9, [x19]
    c0dc:	ldr	x8, [x19, #16]
    c0e0:	sub	x20, x20, w23, uxtw
    c0e4:	add	x21, x21, w23, uxtw
    c0e8:	add	x22, x22, w23, uxtw
    c0ec:	add	x8, x8, w23, uxtw
    c0f0:	str	x8, [x19, #16]
    c0f4:	b	c12c <gzread@@Base+0x16c>
    c0f8:	ldr	w8, [x19, #80]
    c0fc:	cbz	w8, c108 <gzread@@Base+0x148>
    c100:	ldr	w8, [x19, #128]
    c104:	cbz	w8, c1a8 <gzread@@Base+0x1e8>
    c108:	ldr	w8, [x19, #68]
    c10c:	cbz	w8, c11c <gzread@@Base+0x15c>
    c110:	ldr	w9, [x19, #40]
    c114:	cmp	w23, w9, lsl #1
    c118:	b.cs	c134 <gzread@@Base+0x174>  // b.hs, b.nlast
    c11c:	mov	x0, x19
    c120:	bl	c5bc <gzgets@@Base+0x148>
    c124:	cmn	w0, #0x1
    c128:	b.eq	c188 <gzread@@Base+0x1c8>  // b.none
    c12c:	cbnz	x20, c090 <gzread@@Base+0xd0>
    c130:	b	c18c <gzread@@Base+0x1cc>
    c134:	cmp	w8, #0x1
    c138:	b.ne	c160 <gzread@@Base+0x1a0>  // b.any
    c13c:	sub	x3, x29, #0x4
    c140:	mov	x0, x19
    c144:	mov	x1, x21
    c148:	mov	w2, w23
    c14c:	bl	c8e4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    c150:	cmn	w0, #0x1
    c154:	b.eq	c188 <gzread@@Base+0x1c8>  // b.none
    c158:	ldur	w23, [x29, #-4]
    c15c:	b	c0dc <gzread@@Base+0x11c>
    c160:	mov	x0, x19
    c164:	str	w23, [x19, #152]
    c168:	str	x21, [x19, #144]
    c16c:	bl	c9a0 <gzclose_r@@ZLIB_1.2.3.5+0x15c>
    c170:	cmn	w0, #0x1
    c174:	b.eq	c188 <gzread@@Base+0x1c8>  // b.none
    c178:	ldr	w23, [x19]
    c17c:	stur	w23, [x29, #-4]
    c180:	str	wzr, [x19]
    c184:	b	c0dc <gzread@@Base+0x11c>
    c188:	mov	x22, xzr
    c18c:	mov	x0, x22
    c190:	ldp	x20, x19, [sp, #64]
    c194:	ldp	x22, x21, [sp, #48]
    c198:	ldp	x24, x23, [sp, #32]
    c19c:	ldp	x29, x30, [sp, #16]
    c1a0:	add	sp, sp, #0x50
    c1a4:	ret
    c1a8:	mov	w8, #0x1                   	// #1
    c1ac:	str	w8, [x19, #84]
    c1b0:	b	c18c <gzread@@Base+0x1cc>

000000000000c1b4 <gzfread@@ZLIB_1.2.9>:
    c1b4:	stp	x29, x30, [sp, #-32]!
    c1b8:	str	x19, [sp, #16]
    c1bc:	mov	x29, sp
    c1c0:	cbz	x3, c230 <gzfread@@ZLIB_1.2.9+0x7c>
    c1c4:	ldr	w8, [x3, #24]
    c1c8:	mov	w9, #0x1c4f                	// #7247
    c1cc:	cmp	w8, w9
    c1d0:	b.ne	c230 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    c1d4:	ldr	w8, [x3, #108]
    c1d8:	mov	x19, x1
    c1dc:	mov	x1, x0
    c1e0:	cbz	w8, c1ec <gzfread@@ZLIB_1.2.9+0x38>
    c1e4:	cmn	w8, #0x5
    c1e8:	b.ne	c230 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    c1ec:	umulh	x8, x19, x2
    c1f0:	cmp	xzr, x8
    c1f4:	cset	w8, ne  // ne = any
    c1f8:	cbz	x19, c218 <gzfread@@ZLIB_1.2.9+0x64>
    c1fc:	cbz	w8, c218 <gzfread@@ZLIB_1.2.9+0x64>
    c200:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c204:	add	x2, x2, #0x67e
    c208:	mov	w1, #0xfffffffe            	// #-2
    c20c:	mov	x0, x3
    c210:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c214:	b	c230 <gzfread@@ZLIB_1.2.9+0x7c>
    c218:	mul	x2, x19, x2
    c21c:	cbz	x2, c230 <gzfread@@ZLIB_1.2.9+0x7c>
    c220:	mov	x0, x3
    c224:	bl	c040 <gzread@@Base+0x80>
    c228:	udiv	x0, x0, x19
    c22c:	b	c234 <gzfread@@ZLIB_1.2.9+0x80>
    c230:	mov	x0, xzr
    c234:	ldr	x19, [sp, #16]
    c238:	ldp	x29, x30, [sp], #32
    c23c:	ret

000000000000c240 <gzgetc@@Base>:
    c240:	sub	sp, sp, #0x20
    c244:	stp	x29, x30, [sp, #16]
    c248:	add	x29, sp, #0x10
    c24c:	cbz	x0, c298 <gzgetc@@Base+0x58>
    c250:	ldr	w8, [x0, #24]
    c254:	mov	w9, #0x1c4f                	// #7247
    c258:	cmp	w8, w9
    c25c:	b.ne	c298 <gzgetc@@Base+0x58>  // b.any
    c260:	ldr	w8, [x0, #108]
    c264:	cbz	w8, c270 <gzgetc@@Base+0x30>
    c268:	cmn	w8, #0x5
    c26c:	b.ne	c298 <gzgetc@@Base+0x58>  // b.any
    c270:	ldr	w8, [x0]
    c274:	cbz	w8, c2a8 <gzgetc@@Base+0x68>
    c278:	ldp	x10, x9, [x0, #8]
    c27c:	sub	w8, w8, #0x1
    c280:	str	w8, [x0]
    c284:	add	x8, x9, #0x1
    c288:	add	x9, x10, #0x1
    c28c:	stp	x9, x8, [x0, #8]
    c290:	ldrb	w0, [x10]
    c294:	b	c29c <gzgetc@@Base+0x5c>
    c298:	mov	w0, #0xffffffff            	// #-1
    c29c:	ldp	x29, x30, [sp, #16]
    c2a0:	add	sp, sp, #0x20
    c2a4:	ret
    c2a8:	sub	x1, x29, #0x4
    c2ac:	mov	w2, #0x1                   	// #1
    c2b0:	bl	c040 <gzread@@Base+0x80>
    c2b4:	ldurb	w8, [x29, #-4]
    c2b8:	cmp	w0, #0x1
    c2bc:	csinv	w0, w8, wzr, ge  // ge = tcont
    c2c0:	b	c29c <gzgetc@@Base+0x5c>

000000000000c2c4 <gzgetc_@@ZLIB_1.2.5.2>:
    c2c4:	b	2400 <gzgetc@plt>

000000000000c2c8 <gzungetc@@ZLIB_1.2.0.2>:
    c2c8:	stp	x29, x30, [sp, #-32]!
    c2cc:	stp	x20, x19, [sp, #16]
    c2d0:	mov	x29, sp
    c2d4:	cbz	x1, c35c <gzungetc@@ZLIB_1.2.0.2+0x94>
    c2d8:	ldr	w8, [x1, #24]
    c2dc:	mov	w9, #0x1c4f                	// #7247
    c2e0:	mov	x19, x1
    c2e4:	cmp	w8, w9
    c2e8:	b.ne	c35c <gzungetc@@ZLIB_1.2.0.2+0x94>  // b.any
    c2ec:	ldr	w8, [x19, #108]
    c2f0:	mov	w20, w0
    c2f4:	cbz	w8, c300 <gzungetc@@ZLIB_1.2.0.2+0x38>
    c2f8:	cmn	w8, #0x5
    c2fc:	b.ne	c35c <gzungetc@@ZLIB_1.2.0.2+0x94>  // b.any
    c300:	ldr	w8, [x19, #104]
    c304:	cbz	w8, c330 <gzungetc@@ZLIB_1.2.0.2+0x68>
    c308:	ldr	x1, [x19, #96]
    c30c:	mov	x0, x19
    c310:	str	wzr, [x19, #104]
    c314:	bl	c3f8 <gzungetc@@ZLIB_1.2.0.2+0x130>
    c318:	mov	w8, w0
    c31c:	mov	w0, #0xffffffff            	// #-1
    c320:	tbnz	w20, #31, c360 <gzungetc@@ZLIB_1.2.0.2+0x98>
    c324:	cmn	w8, #0x1
    c328:	b.ne	c334 <gzungetc@@ZLIB_1.2.0.2+0x6c>  // b.any
    c32c:	b	c360 <gzungetc@@ZLIB_1.2.0.2+0x98>
    c330:	tbnz	w20, #31, c35c <gzungetc@@ZLIB_1.2.0.2+0x94>
    c334:	ldr	w9, [x19]
    c338:	cbz	w9, c36c <gzungetc@@ZLIB_1.2.0.2+0xa4>
    c33c:	ldr	w10, [x19, #40]
    c340:	cmp	w9, w10, lsl #1
    c344:	b.ne	c390 <gzungetc@@ZLIB_1.2.0.2+0xc8>  // b.any
    c348:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c34c:	add	x2, x2, #0x69f
    c350:	mov	w1, #0xfffffffd            	// #-3
    c354:	mov	x0, x19
    c358:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c35c:	mov	w0, #0xffffffff            	// #-1
    c360:	ldp	x20, x19, [sp, #16]
    c364:	ldp	x29, x30, [sp], #32
    c368:	ret
    c36c:	ldr	w8, [x19, #40]
    c370:	ldr	x9, [x19, #56]
    c374:	mov	w10, #0x1                   	// #1
    c378:	str	w10, [x19]
    c37c:	lsl	w8, w8, #1
    c380:	add	x8, x9, x8
    c384:	sub	x9, x8, #0x1
    c388:	str	x9, [x19, #8]
    c38c:	b	c3dc <gzungetc@@ZLIB_1.2.0.2+0x114>
    c390:	ldr	x8, [x19, #8]
    c394:	ldr	x11, [x19, #56]
    c398:	cmp	x8, x11
    c39c:	b.ne	c3cc <gzungetc@@ZLIB_1.2.0.2+0x104>  // b.any
    c3a0:	lsl	w10, w10, #1
    c3a4:	add	x10, x8, w10, uxtw
    c3a8:	add	x9, x8, x9
    c3ac:	mov	x8, x10
    c3b0:	ldrb	w10, [x9, #-1]!
    c3b4:	strb	w10, [x8, #-1]!
    c3b8:	ldr	x10, [x19, #56]
    c3bc:	cmp	x9, x10
    c3c0:	b.hi	c3b0 <gzungetc@@ZLIB_1.2.0.2+0xe8>  // b.pmore
    c3c4:	ldr	w9, [x19]
    c3c8:	str	x8, [x19, #8]
    c3cc:	add	w9, w9, #0x1
    c3d0:	sub	x10, x8, #0x1
    c3d4:	str	w9, [x19]
    c3d8:	str	x10, [x19, #8]
    c3dc:	sturb	w20, [x8, #-1]
    c3e0:	ldr	x8, [x19, #16]
    c3e4:	mov	w0, w20
    c3e8:	str	wzr, [x19, #84]
    c3ec:	sub	x8, x8, #0x1
    c3f0:	str	x8, [x19, #16]
    c3f4:	b	c360 <gzungetc@@ZLIB_1.2.0.2+0x98>
    c3f8:	stp	x29, x30, [sp, #-32]!
    c3fc:	stp	x20, x19, [sp, #16]
    c400:	mov	x29, sp
    c404:	cbz	x1, c464 <gzungetc@@ZLIB_1.2.0.2+0x19c>
    c408:	mov	x19, x1
    c40c:	mov	x20, x0
    c410:	ldr	w8, [x20]
    c414:	cbz	w8, c440 <gzungetc@@ZLIB_1.2.0.2+0x178>
    c418:	ldp	x9, x10, [x20, #8]
    c41c:	cmp	x19, x8
    c420:	csel	w11, w19, w8, lt  // lt = tstop
    c424:	sub	w8, w8, w11
    c428:	str	w8, [x20]
    c42c:	add	x8, x9, x11
    c430:	add	x9, x10, x11
    c434:	stp	x8, x9, [x20, #8]
    c438:	sub	x19, x19, x11
    c43c:	b	c460 <gzungetc@@ZLIB_1.2.0.2+0x198>
    c440:	ldr	w8, [x20, #80]
    c444:	cbz	w8, c450 <gzungetc@@ZLIB_1.2.0.2+0x188>
    c448:	ldr	w8, [x20, #128]
    c44c:	cbz	w8, c464 <gzungetc@@ZLIB_1.2.0.2+0x19c>
    c450:	mov	x0, x20
    c454:	bl	c5bc <gzgets@@Base+0x148>
    c458:	cmn	w0, #0x1
    c45c:	b.eq	c468 <gzungetc@@ZLIB_1.2.0.2+0x1a0>  // b.none
    c460:	cbnz	x19, c410 <gzungetc@@ZLIB_1.2.0.2+0x148>
    c464:	mov	w0, wzr
    c468:	ldp	x20, x19, [sp, #16]
    c46c:	ldp	x29, x30, [sp], #32
    c470:	ret

000000000000c474 <gzgets@@Base>:
    c474:	stp	x29, x30, [sp, #-80]!
    c478:	stp	x20, x19, [sp, #64]
    c47c:	mov	x20, x0
    c480:	mov	x0, xzr
    c484:	str	x25, [sp, #16]
    c488:	stp	x24, x23, [sp, #32]
    c48c:	stp	x22, x21, [sp, #48]
    c490:	mov	x29, sp
    c494:	cbz	x20, c5a4 <gzgets@@Base+0x130>
    c498:	mov	x19, x1
    c49c:	cbz	x1, c5a4 <gzgets@@Base+0x130>
    c4a0:	mov	w21, w2
    c4a4:	cmp	w2, #0x1
    c4a8:	b.lt	c5a4 <gzgets@@Base+0x130>  // b.tstop
    c4ac:	ldr	w8, [x20, #24]
    c4b0:	mov	w9, #0x1c4f                	// #7247
    c4b4:	cmp	w8, w9
    c4b8:	b.ne	c5a0 <gzgets@@Base+0x12c>  // b.any
    c4bc:	ldr	w8, [x20, #108]
    c4c0:	cbz	w8, c4cc <gzgets@@Base+0x58>
    c4c4:	cmn	w8, #0x5
    c4c8:	b.ne	c5a0 <gzgets@@Base+0x12c>  // b.any
    c4cc:	ldr	w8, [x20, #104]
    c4d0:	cbz	w8, c4ec <gzgets@@Base+0x78>
    c4d4:	ldr	x1, [x20, #96]
    c4d8:	mov	x0, x20
    c4dc:	str	wzr, [x20, #104]
    c4e0:	bl	c3f8 <gzungetc@@ZLIB_1.2.0.2+0x130>
    c4e4:	cmn	w0, #0x1
    c4e8:	b.eq	c5a0 <gzgets@@Base+0x12c>  // b.none
    c4ec:	subs	w25, w21, #0x1
    c4f0:	b.eq	c5a0 <gzgets@@Base+0x12c>  // b.none
    c4f4:	ldr	w8, [x20]
    c4f8:	mov	x21, x19
    c4fc:	cbnz	w8, c518 <gzgets@@Base+0xa4>
    c500:	mov	x0, x20
    c504:	bl	c5bc <gzgets@@Base+0x148>
    c508:	cmn	w0, #0x1
    c50c:	b.eq	c5a0 <gzgets@@Base+0x12c>  // b.none
    c510:	ldr	w8, [x20]
    c514:	cbz	w8, c584 <gzgets@@Base+0x110>
    c518:	ldr	x23, [x20, #8]
    c51c:	cmp	w8, w25
    c520:	csel	w22, w25, w8, hi  // hi = pmore
    c524:	mov	w1, #0xa                   	// #10
    c528:	mov	x0, x23
    c52c:	mov	x2, x22
    c530:	bl	25d0 <memchr@plt>
    c534:	mov	x24, x0
    c538:	sub	w8, w24, w23
    c53c:	cmp	x0, #0x0
    c540:	csinc	w22, w22, w8, eq  // eq = none
    c544:	mov	x0, x21
    c548:	mov	x1, x23
    c54c:	mov	x2, x22
    c550:	bl	2390 <memcpy@plt>
    c554:	ldr	w8, [x20]
    c558:	ldp	x9, x10, [x20, #8]
    c55c:	add	x21, x21, x22
    c560:	sub	w8, w8, w22
    c564:	add	x9, x9, x22
    c568:	add	x10, x10, x22
    c56c:	str	w8, [x20]
    c570:	stp	x9, x10, [x20, #8]
    c574:	cbnz	x24, c58c <gzgets@@Base+0x118>
    c578:	sub	w25, w25, w22
    c57c:	cbnz	w25, c4fc <gzgets@@Base+0x88>
    c580:	b	c58c <gzgets@@Base+0x118>
    c584:	mov	w8, #0x1                   	// #1
    c588:	str	w8, [x20, #84]
    c58c:	cmp	x21, x19
    c590:	b.eq	c5a0 <gzgets@@Base+0x12c>  // b.none
    c594:	mov	x0, x19
    c598:	strb	wzr, [x21]
    c59c:	b	c5a4 <gzgets@@Base+0x130>
    c5a0:	mov	x0, xzr
    c5a4:	ldp	x20, x19, [sp, #64]
    c5a8:	ldp	x22, x21, [sp, #48]
    c5ac:	ldp	x24, x23, [sp, #32]
    c5b0:	ldr	x25, [sp, #16]
    c5b4:	ldp	x29, x30, [sp], #80
    c5b8:	ret
    c5bc:	stp	x29, x30, [sp, #-32]!
    c5c0:	str	x19, [sp, #16]
    c5c4:	mov	x19, x0
    c5c8:	mov	x29, sp
    c5cc:	ldr	w8, [x19, #68]
    c5d0:	cbz	w8, c5e8 <gzgets@@Base+0x174>
    c5d4:	cmp	w8, #0x2
    c5d8:	b.eq	c604 <gzgets@@Base+0x190>  // b.none
    c5dc:	cmp	w8, #0x1
    c5e0:	b.ne	c628 <gzgets@@Base+0x1b4>  // b.any
    c5e4:	b	c648 <gzgets@@Base+0x1d4>
    c5e8:	mov	x0, x19
    c5ec:	bl	c6cc <gzdirect@@ZLIB_1.2.2.3+0x4c>
    c5f0:	cmn	w0, #0x1
    c5f4:	b.eq	c674 <gzgets@@Base+0x200>  // b.none
    c5f8:	ldr	w8, [x19, #68]
    c5fc:	cbnz	w8, c628 <gzgets@@Base+0x1b4>
    c600:	b	c640 <gzgets@@Base+0x1cc>
    c604:	ldr	w8, [x19, #40]
    c608:	ldr	x9, [x19, #56]
    c60c:	mov	x0, x19
    c610:	lsl	w8, w8, #1
    c614:	str	w8, [x19, #152]
    c618:	str	x9, [x19, #144]
    c61c:	bl	c9a0 <gzclose_r@@ZLIB_1.2.3.5+0x15c>
    c620:	cmn	w0, #0x1
    c624:	b.eq	c674 <gzgets@@Base+0x200>  // b.none
    c628:	ldr	w8, [x19]
    c62c:	cbnz	w8, c640 <gzgets@@Base+0x1cc>
    c630:	ldr	w8, [x19, #80]
    c634:	cbz	w8, c5cc <gzgets@@Base+0x158>
    c638:	ldr	w8, [x19, #128]
    c63c:	cbnz	w8, c5cc <gzgets@@Base+0x158>
    c640:	mov	w0, wzr
    c644:	b	c674 <gzgets@@Base+0x200>
    c648:	ldr	w8, [x19, #40]
    c64c:	ldr	x1, [x19, #56]
    c650:	mov	x0, x19
    c654:	mov	x3, x19
    c658:	lsl	w2, w8, #1
    c65c:	bl	c8e4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    c660:	cmn	w0, #0x1
    c664:	b.eq	c674 <gzgets@@Base+0x200>  // b.none
    c668:	ldr	x8, [x19, #56]
    c66c:	mov	w0, wzr
    c670:	str	x8, [x19, #8]
    c674:	ldr	x19, [sp, #16]
    c678:	ldp	x29, x30, [sp], #32
    c67c:	ret

000000000000c680 <gzdirect@@ZLIB_1.2.2.3>:
    c680:	cbz	x0, c6c8 <gzdirect@@ZLIB_1.2.2.3+0x48>
    c684:	stp	x29, x30, [sp, #-32]!
    c688:	ldr	w8, [x0, #24]
    c68c:	mov	w9, #0x1c4f                	// #7247
    c690:	str	x19, [sp, #16]
    c694:	mov	x19, x0
    c698:	cmp	w8, w9
    c69c:	mov	x29, sp
    c6a0:	b.ne	c6bc <gzdirect@@ZLIB_1.2.2.3+0x3c>  // b.any
    c6a4:	ldr	w8, [x19, #68]
    c6a8:	cbnz	w8, c6bc <gzdirect@@ZLIB_1.2.2.3+0x3c>
    c6ac:	ldr	w8, [x19]
    c6b0:	cbnz	w8, c6bc <gzdirect@@ZLIB_1.2.2.3+0x3c>
    c6b4:	mov	x0, x19
    c6b8:	bl	c6cc <gzdirect@@ZLIB_1.2.2.3+0x4c>
    c6bc:	ldr	w0, [x19, #64]
    c6c0:	ldr	x19, [sp, #16]
    c6c4:	ldp	x29, x30, [sp], #32
    c6c8:	ret
    c6cc:	stp	x29, x30, [sp, #-48]!
    c6d0:	stp	x22, x21, [sp, #16]
    c6d4:	stp	x20, x19, [sp, #32]
    c6d8:	ldr	w8, [x0, #40]
    c6dc:	mov	x19, x0
    c6e0:	add	x20, x0, #0x78
    c6e4:	mov	x29, sp
    c6e8:	cbz	w8, c788 <gzdirect@@ZLIB_1.2.2.3+0x108>
    c6ec:	ldr	w0, [x19, #128]
    c6f0:	cmp	w0, #0x1
    c6f4:	b.hi	c718 <gzdirect@@ZLIB_1.2.2.3+0x98>  // b.pmore
    c6f8:	mov	x0, x19
    c6fc:	bl	cac4 <gzclose_r@@ZLIB_1.2.3.5+0x280>
    c700:	cmn	w0, #0x1
    c704:	b.eq	c834 <gzdirect@@ZLIB_1.2.2.3+0x1b4>  // b.none
    c708:	ldr	w0, [x19, #128]
    c70c:	cbz	w0, c834 <gzdirect@@ZLIB_1.2.2.3+0x1b4>
    c710:	cmp	w0, #0x1
    c714:	b.eq	c74c <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.none
    c718:	ldr	x8, [x20]
    c71c:	ldrb	w9, [x8]
    c720:	cmp	w9, #0x1f
    c724:	b.ne	c74c <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.any
    c728:	ldrb	w8, [x8, #1]
    c72c:	cmp	w8, #0x8b
    c730:	b.ne	c74c <gzdirect@@ZLIB_1.2.2.3+0xcc>  // b.any
    c734:	mov	x0, x20
    c738:	bl	25f0 <inflateReset@plt>
    c73c:	adrp	x8, f000 <gzclose_w@@ZLIB_1.2.3.5+0x1a88>
    c740:	ldr	d0, [x8, #1640]
    c744:	mov	w0, wzr
    c748:	b	c780 <gzdirect@@ZLIB_1.2.2.3+0x100>
    c74c:	ldr	w8, [x19, #64]
    c750:	cbz	w8, c820 <gzdirect@@ZLIB_1.2.2.3+0x1a0>
    c754:	ldr	x8, [x19, #56]
    c758:	ldr	x1, [x19, #120]
    c75c:	mov	w2, w0
    c760:	mov	x0, x8
    c764:	str	x8, [x19, #8]
    c768:	bl	2390 <memcpy@plt>
    c76c:	ldr	w8, [x19, #128]
    c770:	mov	w0, wzr
    c774:	movi	v0.2s, #0x1
    c778:	str	wzr, [x19, #128]
    c77c:	str	w8, [x19]
    c780:	str	d0, [x19, #64]
    c784:	b	c834 <gzdirect@@ZLIB_1.2.2.3+0x1b4>
    c788:	ldr	w21, [x19, #44]
    c78c:	mov	x0, x21
    c790:	bl	2450 <malloc@plt>
    c794:	mov	x22, x0
    c798:	str	x0, [x19, #48]
    c79c:	lsl	w0, w21, #1
    c7a0:	bl	2450 <malloc@plt>
    c7a4:	str	x0, [x19, #56]
    c7a8:	cbz	x22, c7f8 <gzdirect@@ZLIB_1.2.2.3+0x178>
    c7ac:	cbz	x0, c7f8 <gzdirect@@ZLIB_1.2.2.3+0x178>
    c7b0:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c7b4:	add	x2, x2, #0x621
    c7b8:	mov	w1, #0x1f                  	// #31
    c7bc:	mov	w3, #0x70                  	// #112
    c7c0:	mov	x0, x20
    c7c4:	str	w21, [x19, #40]
    c7c8:	str	wzr, [x19, #128]
    c7cc:	str	xzr, [x19, #120]
    c7d0:	stp	xzr, xzr, [x19, #192]
    c7d4:	str	xzr, [x19, #184]
    c7d8:	bl	25e0 <inflateInit2_@plt>
    c7dc:	cbz	w0, c6ec <gzdirect@@ZLIB_1.2.2.3+0x6c>
    c7e0:	ldr	x0, [x19, #56]
    c7e4:	bl	2550 <free@plt>
    c7e8:	ldr	x0, [x19, #48]
    c7ec:	bl	2550 <free@plt>
    c7f0:	str	wzr, [x19, #40]
    c7f4:	b	c804 <gzdirect@@ZLIB_1.2.2.3+0x184>
    c7f8:	bl	2550 <free@plt>
    c7fc:	ldr	x0, [x19, #48]
    c800:	bl	2550 <free@plt>
    c804:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c808:	add	x2, x2, #0x640
    c80c:	mov	w1, #0xfffffffc            	// #-4
    c810:	mov	x0, x19
    c814:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c818:	mov	w0, #0xffffffff            	// #-1
    c81c:	b	c834 <gzdirect@@ZLIB_1.2.2.3+0x1b4>
    c820:	mov	w8, #0x1                   	// #1
    c824:	mov	w0, wzr
    c828:	str	wzr, [x19, #128]
    c82c:	str	w8, [x19, #80]
    c830:	str	wzr, [x19]
    c834:	ldp	x20, x19, [sp, #32]
    c838:	ldp	x22, x21, [sp, #16]
    c83c:	ldp	x29, x30, [sp], #48
    c840:	ret

000000000000c844 <gzclose_r@@ZLIB_1.2.3.5>:
    c844:	stp	x29, x30, [sp, #-48]!
    c848:	str	x21, [sp, #16]
    c84c:	stp	x20, x19, [sp, #32]
    c850:	mov	x29, sp
    c854:	cbz	x0, c8d0 <gzclose_r@@ZLIB_1.2.3.5+0x8c>
    c858:	ldr	w8, [x0, #24]
    c85c:	mov	w9, #0x1c4f                	// #7247
    c860:	mov	x19, x0
    c864:	cmp	w8, w9
    c868:	b.ne	c8d0 <gzclose_r@@ZLIB_1.2.3.5+0x8c>  // b.any
    c86c:	ldr	w8, [x19, #40]
    c870:	cbz	w8, c88c <gzclose_r@@ZLIB_1.2.3.5+0x48>
    c874:	add	x0, x19, #0x78
    c878:	bl	2530 <inflateEnd@plt>
    c87c:	ldr	x0, [x19, #56]
    c880:	bl	2550 <free@plt>
    c884:	ldr	x0, [x19, #48]
    c888:	bl	2550 <free@plt>
    c88c:	ldr	w8, [x19, #108]
    c890:	mov	x0, x19
    c894:	mov	w1, wzr
    c898:	mov	x2, xzr
    c89c:	cmn	w8, #0x5
    c8a0:	csel	w21, w8, wzr, eq  // eq = none
    c8a4:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c8a8:	ldr	x0, [x19, #32]
    c8ac:	bl	2550 <free@plt>
    c8b0:	ldr	w0, [x19, #28]
    c8b4:	bl	24f0 <close@plt>
    c8b8:	mov	w20, w0
    c8bc:	mov	x0, x19
    c8c0:	bl	2550 <free@plt>
    c8c4:	cmp	w20, #0x0
    c8c8:	csinv	w0, w21, wzr, eq  // eq = none
    c8cc:	b	c8d4 <gzclose_r@@ZLIB_1.2.3.5+0x90>
    c8d0:	mov	w0, #0xfffffffe            	// #-2
    c8d4:	ldp	x20, x19, [sp, #32]
    c8d8:	ldr	x21, [sp, #16]
    c8dc:	ldp	x29, x30, [sp], #48
    c8e0:	ret
    c8e4:	stp	x29, x30, [sp, #-64]!
    c8e8:	str	x23, [sp, #16]
    c8ec:	stp	x22, x21, [sp, #32]
    c8f0:	stp	x20, x19, [sp, #48]
    c8f4:	mov	x20, x3
    c8f8:	mov	w21, w2
    c8fc:	mov	x22, x1
    c900:	mov	x19, x0
    c904:	mov	w8, wzr
    c908:	mov	w23, #0x40000000            	// #1073741824
    c90c:	mov	x29, sp
    c910:	str	wzr, [x3]
    c914:	sub	w9, w21, w8
    c918:	ldr	w0, [x19, #28]
    c91c:	lsr	w10, w9, #30
    c920:	cmp	w10, #0x0
    c924:	csel	w2, w9, w23, eq  // eq = none
    c928:	add	x1, x22, w8, uxtw
    c92c:	bl	25c0 <read@plt>
    c930:	cmp	w0, #0x1
    c934:	b.lt	c954 <gzclose_r@@ZLIB_1.2.3.5+0x110>  // b.tstop
    c938:	ldr	w8, [x20]
    c93c:	add	w8, w8, w0
    c940:	cmp	w8, w21
    c944:	str	w8, [x20]
    c948:	b.cc	c914 <gzclose_r@@ZLIB_1.2.3.5+0xd0>  // b.lo, b.ul, b.last
    c94c:	mov	w20, wzr
    c950:	b	c988 <gzclose_r@@ZLIB_1.2.3.5+0x144>
    c954:	tbnz	w0, #31, c968 <gzclose_r@@ZLIB_1.2.3.5+0x124>
    c958:	mov	w20, wzr
    c95c:	mov	w8, #0x1                   	// #1
    c960:	str	w8, [x19, #80]
    c964:	b	c988 <gzclose_r@@ZLIB_1.2.3.5+0x144>
    c968:	bl	2630 <__errno_location@plt>
    c96c:	ldr	w0, [x0]
    c970:	bl	24e0 <strerror@plt>
    c974:	mov	x2, x0
    c978:	mov	w1, #0xffffffff            	// #-1
    c97c:	mov	x0, x19
    c980:	mov	w20, #0xffffffff            	// #-1
    c984:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    c988:	mov	w0, w20
    c98c:	ldp	x20, x19, [sp, #48]
    c990:	ldp	x22, x21, [sp, #32]
    c994:	ldr	x23, [sp, #16]
    c998:	ldp	x29, x30, [sp], #64
    c99c:	ret
    c9a0:	stp	x29, x30, [sp, #-64]!
    c9a4:	stp	x22, x21, [sp, #32]
    c9a8:	stp	x20, x19, [sp, #48]
    c9ac:	ldr	w22, [x0, #152]
    c9b0:	str	x23, [sp, #16]
    c9b4:	adrp	x23, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    c9b8:	mov	x19, x0
    c9bc:	mov	w20, wzr
    c9c0:	add	x21, x0, #0x78
    c9c4:	add	x23, x23, #0x658
    c9c8:	mov	x29, sp
    c9cc:	ldr	w8, [x19, #128]
    c9d0:	cbnz	w8, c9ec <gzclose_r@@ZLIB_1.2.3.5+0x1a8>
    c9d4:	mov	x0, x19
    c9d8:	bl	cac4 <gzclose_r@@ZLIB_1.2.3.5+0x280>
    c9dc:	cmn	w0, #0x1
    c9e0:	b.eq	cab0 <gzclose_r@@ZLIB_1.2.3.5+0x26c>  // b.none
    c9e4:	ldr	w8, [x19, #128]
    c9e8:	cbz	w8, ca3c <gzclose_r@@ZLIB_1.2.3.5+0x1f8>
    c9ec:	mov	x0, x21
    c9f0:	mov	w1, wzr
    c9f4:	bl	23e0 <inflate@plt>
    c9f8:	add	w8, w0, #0x4
    c9fc:	mov	w20, w0
    ca00:	cmp	w8, #0x6
    ca04:	b.hi	ca18 <gzclose_r@@ZLIB_1.2.3.5+0x1d4>  // b.pmore
    ca08:	adr	x9, ca18 <gzclose_r@@ZLIB_1.2.3.5+0x1d4>
    ca0c:	ldrb	w10, [x23, x8]
    ca10:	add	x9, x9, x10, lsl #2
    ca14:	br	x9
    ca18:	ldr	w8, [x19, #152]
    ca1c:	cmp	w20, #0x1
    ca20:	b.eq	ca54 <gzclose_r@@ZLIB_1.2.3.5+0x210>  // b.none
    ca24:	cbnz	w8, c9cc <gzclose_r@@ZLIB_1.2.3.5+0x188>
    ca28:	b	ca54 <gzclose_r@@ZLIB_1.2.3.5+0x210>
    ca2c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    ca30:	add	x2, x2, #0x6d5
    ca34:	mov	w1, #0xfffffffe            	// #-2
    ca38:	b	caa4 <gzclose_r@@ZLIB_1.2.3.5+0x260>
    ca3c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    ca40:	add	x2, x2, #0x6be
    ca44:	mov	w1, #0xfffffffb            	// #-5
    ca48:	mov	x0, x19
    ca4c:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    ca50:	ldr	w8, [x19, #152]
    ca54:	ldr	x9, [x19, #144]
    ca58:	sub	w8, w22, w8
    ca5c:	str	w8, [x19]
    ca60:	cmp	w20, #0x1
    ca64:	sub	x8, x9, x8
    ca68:	mov	w0, wzr
    ca6c:	str	x8, [x19, #8]
    ca70:	b.ne	cab0 <gzclose_r@@ZLIB_1.2.3.5+0x26c>  // b.any
    ca74:	str	wzr, [x19, #68]
    ca78:	b	cab0 <gzclose_r@@ZLIB_1.2.3.5+0x26c>
    ca7c:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    ca80:	add	x2, x2, #0x640
    ca84:	mov	w1, #0xfffffffc            	// #-4
    ca88:	b	caa4 <gzclose_r@@ZLIB_1.2.3.5+0x260>
    ca8c:	ldr	x8, [x19, #168]
    ca90:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    ca94:	add	x9, x9, #0x6fc
    ca98:	mov	w1, #0xfffffffd            	// #-3
    ca9c:	cmp	x8, #0x0
    caa0:	csel	x2, x9, x8, eq  // eq = none
    caa4:	mov	x0, x19
    caa8:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    caac:	mov	w0, #0xffffffff            	// #-1
    cab0:	ldp	x20, x19, [sp, #48]
    cab4:	ldp	x22, x21, [sp, #32]
    cab8:	ldr	x23, [sp, #16]
    cabc:	ldp	x29, x30, [sp], #64
    cac0:	ret
    cac4:	stp	x29, x30, [sp, #-32]!
    cac8:	ldr	w8, [x0, #108]
    cacc:	str	x19, [sp, #16]
    cad0:	mov	x19, x0
    cad4:	mov	x29, sp
    cad8:	cbz	w8, cae4 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
    cadc:	cmn	w8, #0x5
    cae0:	b.ne	caf4 <gzclose_r@@ZLIB_1.2.3.5+0x2b0>  // b.any
    cae4:	ldr	w8, [x19, #80]
    cae8:	cbz	w8, cafc <gzclose_r@@ZLIB_1.2.3.5+0x2b8>
    caec:	mov	w0, wzr
    caf0:	b	cb60 <gzclose_r@@ZLIB_1.2.3.5+0x31c>
    caf4:	mov	w0, #0xffffffff            	// #-1
    caf8:	b	cb60 <gzclose_r@@ZLIB_1.2.3.5+0x31c>
    cafc:	ldr	w8, [x19, #128]
    cb00:	cbz	w8, cb20 <gzclose_r@@ZLIB_1.2.3.5+0x2dc>
    cb04:	ldr	x9, [x19, #48]
    cb08:	ldr	x10, [x19, #120]
    cb0c:	ldrb	w11, [x10], #1
    cb10:	subs	w8, w8, #0x1
    cb14:	strb	w11, [x9], #1
    cb18:	b.ne	cb0c <gzclose_r@@ZLIB_1.2.3.5+0x2c8>  // b.any
    cb1c:	ldr	w8, [x19, #128]
    cb20:	ldr	x9, [x19, #48]
    cb24:	ldr	w10, [x19, #40]
    cb28:	add	x3, x29, #0x1c
    cb2c:	mov	x0, x19
    cb30:	add	x1, x9, w8, uxtw
    cb34:	sub	w2, w10, w8
    cb38:	bl	c8e4 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    cb3c:	cmn	w0, #0x1
    cb40:	b.eq	cb60 <gzclose_r@@ZLIB_1.2.3.5+0x31c>  // b.none
    cb44:	ldr	w8, [x29, #28]
    cb48:	ldr	w9, [x19, #128]
    cb4c:	ldr	x10, [x19, #48]
    cb50:	mov	w0, wzr
    cb54:	add	w8, w9, w8
    cb58:	str	w8, [x19, #128]
    cb5c:	str	x10, [x19, #120]
    cb60:	ldr	x19, [sp, #16]
    cb64:	ldp	x29, x30, [sp], #32
    cb68:	ret

000000000000cb6c <gzwrite@@Base>:
    cb6c:	stp	x29, x30, [sp, #-16]!
    cb70:	mov	x29, sp
    cb74:	cbz	x0, cb94 <gzwrite@@Base+0x28>
    cb78:	ldr	w8, [x0, #24]
    cb7c:	mov	w9, #0x79b1                	// #31153
    cb80:	cmp	w8, w9
    cb84:	b.ne	cb90 <gzwrite@@Base+0x24>  // b.any
    cb88:	ldr	w8, [x0, #108]
    cb8c:	cbz	w8, cb9c <gzwrite@@Base+0x30>
    cb90:	mov	w0, wzr
    cb94:	ldp	x29, x30, [sp], #16
    cb98:	ret
    cb9c:	tbnz	w2, #31, cbac <gzwrite@@Base+0x40>
    cba0:	mov	w2, w2
    cba4:	bl	cbc0 <gzwrite@@Base+0x54>
    cba8:	b	cb94 <gzwrite@@Base+0x28>
    cbac:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    cbb0:	add	x2, x2, #0x712
    cbb4:	mov	w1, #0xfffffffd            	// #-3
    cbb8:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    cbbc:	b	cb90 <gzwrite@@Base+0x24>
    cbc0:	stp	x29, x30, [sp, #-64]!
    cbc4:	stp	x20, x19, [sp, #48]
    cbc8:	mov	x19, x2
    cbcc:	str	x23, [sp, #16]
    cbd0:	stp	x22, x21, [sp, #32]
    cbd4:	mov	x29, sp
    cbd8:	cbz	x2, cd1c <gzwrite@@Base+0x1b0>
    cbdc:	ldr	w8, [x0, #40]
    cbe0:	mov	x21, x1
    cbe4:	mov	x20, x0
    cbe8:	cbnz	w8, cbfc <gzwrite@@Base+0x90>
    cbec:	mov	x0, x20
    cbf0:	bl	d128 <gzvprintf@@ZLIB_1.2.7.1+0x160>
    cbf4:	cmn	w0, #0x1
    cbf8:	b.eq	cd18 <gzwrite@@Base+0x1ac>  // b.none
    cbfc:	ldr	w8, [x20, #104]
    cc00:	cbz	w8, cc1c <gzwrite@@Base+0xb0>
    cc04:	ldr	x1, [x20, #96]
    cc08:	mov	x0, x20
    cc0c:	str	wzr, [x20, #104]
    cc10:	bl	cea0 <gzputc@@Base+0xe8>
    cc14:	cmn	w0, #0x1
    cc18:	b.eq	cd18 <gzwrite@@Base+0x1ac>  // b.none
    cc1c:	ldr	w8, [x20, #40]
    cc20:	cmp	x8, x19
    cc24:	b.ls	ccb0 <gzwrite@@Base+0x144>  // b.plast
    cc28:	mov	x23, x19
    cc2c:	ldr	w8, [x20, #128]
    cc30:	cbz	w8, cc40 <gzwrite@@Base+0xd4>
    cc34:	ldr	x10, [x20, #120]
    cc38:	ldr	x9, [x20, #48]
    cc3c:	b	cc4c <gzwrite@@Base+0xe0>
    cc40:	ldr	x9, [x20, #48]
    cc44:	mov	x10, x9
    cc48:	str	x9, [x20, #120]
    cc4c:	ldr	w11, [x20, #40]
    cc50:	add	x8, x10, x8
    cc54:	sub	x8, x8, x9
    cc58:	add	x0, x9, w8, uxtw
    cc5c:	sub	w10, w11, w8
    cc60:	cmp	x23, x10
    cc64:	csel	w22, w23, w10, cc  // cc = lo, ul, last
    cc68:	mov	x1, x21
    cc6c:	mov	x2, x22
    cc70:	bl	2390 <memcpy@plt>
    cc74:	ldr	w8, [x20, #128]
    cc78:	ldr	x9, [x20, #16]
    cc7c:	subs	x23, x23, x22
    cc80:	add	w8, w22, w8
    cc84:	add	x9, x9, x22
    cc88:	str	w8, [x20, #128]
    cc8c:	str	x9, [x20, #16]
    cc90:	b.eq	cd1c <gzwrite@@Base+0x1b0>  // b.none
    cc94:	mov	x0, x20
    cc98:	mov	w1, wzr
    cc9c:	add	x21, x21, x22
    cca0:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    cca4:	cmn	w0, #0x1
    cca8:	b.ne	cc2c <gzwrite@@Base+0xc0>  // b.any
    ccac:	b	cd18 <gzwrite@@Base+0x1ac>
    ccb0:	ldr	w8, [x20, #128]
    ccb4:	cbz	w8, cccc <gzwrite@@Base+0x160>
    ccb8:	mov	x0, x20
    ccbc:	mov	w1, wzr
    ccc0:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    ccc4:	cmn	w0, #0x1
    ccc8:	b.eq	cd18 <gzwrite@@Base+0x1ac>  // b.none
    cccc:	str	x21, [x20, #120]
    ccd0:	mov	w21, #0xffffffff            	// #-1
    ccd4:	mov	x22, x19
    ccd8:	ldr	x8, [x20, #16]
    ccdc:	cmp	x22, x21
    cce0:	csel	x23, x22, x21, cc  // cc = lo, ul, last
    cce4:	mov	x0, x20
    cce8:	add	x8, x8, x23
    ccec:	mov	w1, wzr
    ccf0:	str	w23, [x20, #128]
    ccf4:	str	x8, [x20, #16]
    ccf8:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    ccfc:	cmn	w0, #0x1
    cd00:	csel	x8, xzr, x23, eq  // eq = none
    cd04:	cmn	w0, #0x1
    cd08:	b.eq	cd18 <gzwrite@@Base+0x1ac>  // b.none
    cd0c:	sub	x22, x22, x8
    cd10:	cbnz	x22, ccd8 <gzwrite@@Base+0x16c>
    cd14:	b	cd1c <gzwrite@@Base+0x1b0>
    cd18:	mov	x19, xzr
    cd1c:	mov	x0, x19
    cd20:	ldp	x20, x19, [sp, #48]
    cd24:	ldp	x22, x21, [sp, #32]
    cd28:	ldr	x23, [sp, #16]
    cd2c:	ldp	x29, x30, [sp], #64
    cd30:	ret

000000000000cd34 <gzfwrite@@ZLIB_1.2.9>:
    cd34:	stp	x29, x30, [sp, #-32]!
    cd38:	str	x19, [sp, #16]
    cd3c:	mov	x29, sp
    cd40:	cbz	x3, cd5c <gzfwrite@@ZLIB_1.2.9+0x28>
    cd44:	ldr	w8, [x3, #24]
    cd48:	mov	w9, #0x79b1                	// #31153
    cd4c:	cmp	w8, w9
    cd50:	b.ne	cd5c <gzfwrite@@ZLIB_1.2.9+0x28>  // b.any
    cd54:	ldr	w8, [x3, #108]
    cd58:	cbz	w8, cd6c <gzfwrite@@ZLIB_1.2.9+0x38>
    cd5c:	mov	x0, xzr
    cd60:	ldr	x19, [sp, #16]
    cd64:	ldp	x29, x30, [sp], #32
    cd68:	ret
    cd6c:	mov	x19, x1
    cd70:	umulh	x8, x19, x2
    cd74:	cmp	xzr, x8
    cd78:	mov	x1, x0
    cd7c:	cset	w8, ne  // ne = any
    cd80:	cbz	x19, cda0 <gzfwrite@@ZLIB_1.2.9+0x6c>
    cd84:	cbz	w8, cda0 <gzfwrite@@ZLIB_1.2.9+0x6c>
    cd88:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    cd8c:	add	x2, x2, #0x67e
    cd90:	mov	w1, #0xfffffffe            	// #-2
    cd94:	mov	x0, x3
    cd98:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    cd9c:	b	cd5c <gzfwrite@@ZLIB_1.2.9+0x28>
    cda0:	mul	x2, x19, x2
    cda4:	cbz	x2, cd5c <gzfwrite@@ZLIB_1.2.9+0x28>
    cda8:	mov	x0, x3
    cdac:	bl	cbc0 <gzwrite@@Base+0x54>
    cdb0:	udiv	x0, x0, x19
    cdb4:	b	cd60 <gzfwrite@@ZLIB_1.2.9+0x2c>

000000000000cdb8 <gzputc@@Base>:
    cdb8:	sub	sp, sp, #0x30
    cdbc:	stp	x29, x30, [sp, #16]
    cdc0:	stp	x20, x19, [sp, #32]
    cdc4:	add	x29, sp, #0x10
    cdc8:	cbz	x0, cde8 <gzputc@@Base+0x30>
    cdcc:	ldr	w8, [x0, #24]
    cdd0:	mov	w9, #0x79b1                	// #31153
    cdd4:	mov	x20, x0
    cdd8:	cmp	w8, w9
    cddc:	b.ne	cde8 <gzputc@@Base+0x30>  // b.any
    cde0:	ldr	w8, [x20, #108]
    cde4:	cbz	w8, cdfc <gzputc@@Base+0x44>
    cde8:	mov	w0, #0xffffffff            	// #-1
    cdec:	ldp	x20, x19, [sp, #32]
    cdf0:	ldp	x29, x30, [sp, #16]
    cdf4:	add	sp, sp, #0x30
    cdf8:	ret
    cdfc:	ldr	w8, [x20, #104]
    ce00:	mov	w19, w1
    ce04:	cbz	w8, ce20 <gzputc@@Base+0x68>
    ce08:	ldr	x1, [x20, #96]
    ce0c:	mov	x0, x20
    ce10:	str	wzr, [x20, #104]
    ce14:	bl	cea0 <gzputc@@Base+0xe8>
    ce18:	cmn	w0, #0x1
    ce1c:	b.eq	cdec <gzputc@@Base+0x34>  // b.none
    ce20:	ldr	w8, [x20, #40]
    ce24:	cbz	w8, ce7c <gzputc@@Base+0xc4>
    ce28:	ldr	w9, [x20, #128]
    ce2c:	cbz	w9, ce3c <gzputc@@Base+0x84>
    ce30:	ldr	x11, [x20, #120]
    ce34:	ldr	x10, [x20, #48]
    ce38:	b	ce48 <gzputc@@Base+0x90>
    ce3c:	ldr	x10, [x20, #48]
    ce40:	mov	x11, x10
    ce44:	str	x10, [x20, #120]
    ce48:	add	x9, x11, x9
    ce4c:	sub	x9, x9, x10
    ce50:	cmp	w8, w9
    ce54:	b.ls	ce7c <gzputc@@Base+0xc4>  // b.plast
    ce58:	strb	w19, [x10, w9, uxtw]
    ce5c:	ldr	w8, [x20, #128]
    ce60:	ldr	x9, [x20, #16]
    ce64:	and	w0, w19, #0xff
    ce68:	add	w8, w8, #0x1
    ce6c:	add	x9, x9, #0x1
    ce70:	str	w8, [x20, #128]
    ce74:	str	x9, [x20, #16]
    ce78:	b	cdec <gzputc@@Base+0x34>
    ce7c:	sub	x1, x29, #0x4
    ce80:	mov	w2, #0x1                   	// #1
    ce84:	mov	x0, x20
    ce88:	sturb	w19, [x29, #-4]
    ce8c:	bl	cbc0 <gzwrite@@Base+0x54>
    ce90:	and	w8, w19, #0xff
    ce94:	cmp	x0, #0x1
    ce98:	csinv	w0, w8, wzr, eq  // eq = none
    ce9c:	b	cdec <gzputc@@Base+0x34>
    cea0:	stp	x29, x30, [sp, #-48]!
    cea4:	stp	x22, x21, [sp, #16]
    cea8:	stp	x20, x19, [sp, #32]
    ceac:	ldr	w8, [x0, #128]
    ceb0:	mov	x19, x0
    ceb4:	mov	x20, x1
    ceb8:	mov	x29, sp
    cebc:	cbz	w8, ced4 <gzputc@@Base+0x11c>
    cec0:	mov	x0, x19
    cec4:	mov	w1, wzr
    cec8:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    cecc:	cmn	w0, #0x1
    ced0:	b.eq	cf44 <gzputc@@Base+0x18c>  // b.none
    ced4:	cbz	x20, cf40 <gzputc@@Base+0x188>
    ced8:	mov	w8, wzr
    cedc:	ldr	w9, [x19, #40]
    cee0:	cmp	x20, x9
    cee4:	csel	w22, w20, w9, lt  // lt = tstop
    cee8:	tbz	w8, #0, cef4 <gzputc@@Base+0x13c>
    ceec:	mov	w21, w22
    cef0:	b	cf08 <gzputc@@Base+0x150>
    cef4:	ldr	x0, [x19, #48]
    cef8:	mov	w21, w22
    cefc:	mov	w1, wzr
    cf00:	mov	x2, x21
    cf04:	bl	2490 <memset@plt>
    cf08:	ldr	x8, [x19, #48]
    cf0c:	ldr	x9, [x19, #16]
    cf10:	mov	x0, x19
    cf14:	mov	w1, wzr
    cf18:	str	x8, [x19, #120]
    cf1c:	add	x8, x9, x21
    cf20:	str	w22, [x19, #128]
    cf24:	str	x8, [x19, #16]
    cf28:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    cf2c:	cmn	w0, #0x1
    cf30:	b.eq	cf44 <gzputc@@Base+0x18c>  // b.none
    cf34:	sub	x20, x20, x21
    cf38:	mov	w8, #0x1                   	// #1
    cf3c:	cbnz	x20, cedc <gzputc@@Base+0x124>
    cf40:	mov	w0, wzr
    cf44:	ldp	x20, x19, [sp, #32]
    cf48:	ldp	x22, x21, [sp, #16]
    cf4c:	ldp	x29, x30, [sp], #48
    cf50:	ret

000000000000cf54 <gzputs@@Base>:
    cf54:	stp	x29, x30, [sp, #-48]!
    cf58:	str	x21, [sp, #16]
    cf5c:	stp	x20, x19, [sp, #32]
    cf60:	mov	x29, sp
    cf64:	cbz	x0, cf84 <gzputs@@Base+0x30>
    cf68:	ldr	w8, [x0, #24]
    cf6c:	mov	w9, #0x79b1                	// #31153
    cf70:	mov	x20, x0
    cf74:	cmp	w8, w9
    cf78:	b.ne	cf84 <gzputs@@Base+0x30>  // b.any
    cf7c:	ldr	w8, [x20, #108]
    cf80:	cbz	w8, cf98 <gzputs@@Base+0x44>
    cf84:	mov	w0, #0xffffffff            	// #-1
    cf88:	ldp	x20, x19, [sp, #32]
    cf8c:	ldr	x21, [sp, #16]
    cf90:	ldp	x29, x30, [sp], #48
    cf94:	ret
    cf98:	mov	x0, x1
    cf9c:	mov	x19, x1
    cfa0:	bl	23d0 <strlen@plt>
    cfa4:	mov	x21, x0
    cfa8:	mov	x0, x20
    cfac:	mov	x1, x19
    cfb0:	mov	x2, x21
    cfb4:	bl	cbc0 <gzwrite@@Base+0x54>
    cfb8:	cmp	w0, #0x0
    cfbc:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    cfc0:	csinv	w0, w0, wzr, eq  // eq = none
    cfc4:	b	cf88 <gzputs@@Base+0x34>

000000000000cfc8 <gzvprintf@@ZLIB_1.2.7.1>:
    cfc8:	sub	sp, sp, #0x50
    cfcc:	stp	x29, x30, [sp, #32]
    cfd0:	stp	x22, x21, [sp, #48]
    cfd4:	stp	x20, x19, [sp, #64]
    cfd8:	add	x29, sp, #0x20
    cfdc:	cbz	x0, cffc <gzvprintf@@ZLIB_1.2.7.1+0x34>
    cfe0:	ldr	w8, [x0, #24]
    cfe4:	mov	w9, #0x79b1                	// #31153
    cfe8:	mov	x19, x0
    cfec:	cmp	w8, w9
    cff0:	b.ne	cffc <gzvprintf@@ZLIB_1.2.7.1+0x34>  // b.any
    cff4:	ldr	w8, [x19, #108]
    cff8:	cbz	w8, d018 <gzvprintf@@ZLIB_1.2.7.1+0x50>
    cffc:	mov	w20, #0xfffffffe            	// #-2
    d000:	mov	w0, w20
    d004:	ldp	x20, x19, [sp, #64]
    d008:	ldp	x22, x21, [sp, #48]
    d00c:	ldp	x29, x30, [sp, #32]
    d010:	add	sp, sp, #0x50
    d014:	ret
    d018:	ldr	w8, [x19, #40]
    d01c:	mov	x21, x2
    d020:	mov	x20, x1
    d024:	cbnz	w8, d038 <gzvprintf@@ZLIB_1.2.7.1+0x70>
    d028:	mov	x0, x19
    d02c:	bl	d128 <gzvprintf@@ZLIB_1.2.7.1+0x160>
    d030:	cmn	w0, #0x1
    d034:	b.eq	d120 <gzvprintf@@ZLIB_1.2.7.1+0x158>  // b.none
    d038:	ldr	w8, [x19, #104]
    d03c:	cbz	w8, d058 <gzvprintf@@ZLIB_1.2.7.1+0x90>
    d040:	ldr	x1, [x19, #96]
    d044:	mov	x0, x19
    d048:	str	wzr, [x19, #104]
    d04c:	bl	cea0 <gzputc@@Base+0xe8>
    d050:	cmn	w0, #0x1
    d054:	b.eq	d120 <gzvprintf@@ZLIB_1.2.7.1+0x158>  // b.none
    d058:	ldr	w8, [x19, #128]
    d05c:	cbz	w8, d068 <gzvprintf@@ZLIB_1.2.7.1+0xa0>
    d060:	ldr	x9, [x19, #120]
    d064:	b	d070 <gzvprintf@@ZLIB_1.2.7.1+0xa8>
    d068:	ldr	x9, [x19, #48]
    d06c:	str	x9, [x19, #120]
    d070:	ldr	w10, [x19, #40]
    d074:	add	x22, x9, x8
    d078:	mov	x3, sp
    d07c:	mov	x0, x22
    d080:	sub	w8, w10, #0x1
    d084:	strb	wzr, [x22, w8, uxtw]
    d088:	ldp	q1, q0, [x21]
    d08c:	ldr	w1, [x19, #40]
    d090:	mov	x2, x20
    d094:	stp	q1, q0, [sp]
    d098:	bl	2600 <vsnprintf@plt>
    d09c:	mov	w20, w0
    d0a0:	cbz	w0, d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d0a4:	ldr	w8, [x19, #40]
    d0a8:	cmp	w20, w8
    d0ac:	b.cs	d0bc <gzvprintf@@ZLIB_1.2.7.1+0xf4>  // b.hs, b.nlast
    d0b0:	sub	w9, w8, #0x1
    d0b4:	ldrb	w9, [x22, w9, uxtw]
    d0b8:	cbz	w9, d0c4 <gzvprintf@@ZLIB_1.2.7.1+0xfc>
    d0bc:	mov	w20, wzr
    d0c0:	b	d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d0c4:	ldr	w9, [x19, #128]
    d0c8:	ldr	x10, [x19, #16]
    d0cc:	add	w9, w9, w20
    d0d0:	add	x10, x10, w20, sxtw
    d0d4:	subs	w21, w9, w8
    d0d8:	str	w9, [x19, #128]
    d0dc:	str	x10, [x19, #16]
    d0e0:	b.cc	d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>  // b.lo, b.ul, b.last
    d0e4:	mov	x0, x19
    d0e8:	mov	w1, wzr
    d0ec:	str	w8, [x19, #128]
    d0f0:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    d0f4:	cmn	w0, #0x1
    d0f8:	b.eq	d120 <gzvprintf@@ZLIB_1.2.7.1+0x158>  // b.none
    d0fc:	ldr	x0, [x19, #48]
    d100:	ldr	w8, [x19, #40]
    d104:	mov	w2, w21
    d108:	add	x1, x0, x8
    d10c:	bl	2390 <memcpy@plt>
    d110:	ldr	x8, [x19, #48]
    d114:	str	w21, [x19, #128]
    d118:	str	x8, [x19, #120]
    d11c:	b	d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d120:	ldr	w20, [x19, #108]
    d124:	b	d000 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    d128:	stp	x29, x30, [sp, #-48]!
    d12c:	stp	x20, x19, [sp, #32]
    d130:	str	x21, [sp, #16]
    d134:	ldr	w21, [x0, #44]
    d138:	mov	x19, x0
    d13c:	mov	x29, sp
    d140:	lsl	w0, w21, #1
    d144:	bl	2450 <malloc@plt>
    d148:	str	x0, [x19, #48]
    d14c:	cbz	x0, d1c0 <gzvprintf@@ZLIB_1.2.7.1+0x1f8>
    d150:	ldr	w8, [x19, #64]
    d154:	cbz	w8, d164 <gzvprintf@@ZLIB_1.2.7.1+0x19c>
    d158:	mov	w0, wzr
    d15c:	str	w21, [x19, #40]
    d160:	b	d1d8 <gzvprintf@@ZLIB_1.2.7.1+0x210>
    d164:	mov	x20, x0
    d168:	mov	x0, x21
    d16c:	bl	2450 <malloc@plt>
    d170:	str	x0, [x19, #56]
    d174:	cbz	x0, d1b8 <gzvprintf@@ZLIB_1.2.7.1+0x1f0>
    d178:	ldp	w1, w5, [x19, #88]
    d17c:	adrp	x6, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    d180:	add	x0, x19, #0x78
    d184:	add	x6, x6, #0x621
    d188:	mov	w2, #0x8                   	// #8
    d18c:	mov	w3, #0x1f                  	// #31
    d190:	mov	w4, #0x8                   	// #8
    d194:	mov	w7, #0x70                  	// #112
    d198:	stp	xzr, xzr, [x19, #184]
    d19c:	str	xzr, [x19, #200]
    d1a0:	bl	24b0 <deflateInit2_@plt>
    d1a4:	cbz	w0, d1e8 <gzvprintf@@ZLIB_1.2.7.1+0x220>
    d1a8:	ldr	x0, [x19, #56]
    d1ac:	bl	2550 <free@plt>
    d1b0:	ldr	x0, [x19, #48]
    d1b4:	b	d1bc <gzvprintf@@ZLIB_1.2.7.1+0x1f4>
    d1b8:	mov	x0, x20
    d1bc:	bl	2550 <free@plt>
    d1c0:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    d1c4:	add	x2, x2, #0x640
    d1c8:	mov	w1, #0xfffffffc            	// #-4
    d1cc:	mov	x0, x19
    d1d0:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    d1d4:	mov	w0, #0xffffffff            	// #-1
    d1d8:	ldp	x20, x19, [sp, #32]
    d1dc:	ldr	x21, [sp, #16]
    d1e0:	ldp	x29, x30, [sp], #48
    d1e4:	ret
    d1e8:	ldr	w9, [x19, #64]
    d1ec:	ldr	w8, [x19, #44]
    d1f0:	mov	w0, wzr
    d1f4:	str	xzr, [x19, #120]
    d1f8:	str	w8, [x19, #40]
    d1fc:	cbnz	w9, d1d8 <gzvprintf@@ZLIB_1.2.7.1+0x210>
    d200:	ldr	x9, [x19, #56]
    d204:	str	w8, [x19, #152]
    d208:	str	x9, [x19, #144]
    d20c:	str	x9, [x19, #8]
    d210:	b	d1d8 <gzvprintf@@ZLIB_1.2.7.1+0x210>
    d214:	stp	x29, x30, [sp, #-64]!
    d218:	stp	x22, x21, [sp, #32]
    d21c:	stp	x20, x19, [sp, #48]
    d220:	ldr	w8, [x0, #40]
    d224:	mov	x19, x0
    d228:	mov	w20, w1
    d22c:	str	x23, [sp, #16]
    d230:	mov	x29, sp
    d234:	cbnz	w8, d248 <gzvprintf@@ZLIB_1.2.7.1+0x280>
    d238:	mov	x0, x19
    d23c:	bl	d128 <gzvprintf@@ZLIB_1.2.7.1+0x160>
    d240:	cmn	w0, #0x1
    d244:	b.eq	d39c <gzvprintf@@ZLIB_1.2.7.1+0x3d4>  // b.none
    d248:	ldr	w8, [x19, #64]
    d24c:	cbz	w8, d29c <gzvprintf@@ZLIB_1.2.7.1+0x2d4>
    d250:	ldr	w8, [x19, #128]
    d254:	cbz	w8, d294 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    d258:	ldr	x1, [x19, #120]
    d25c:	mov	w20, #0x40000000            	// #1073741824
    d260:	ldr	w0, [x19, #28]
    d264:	lsr	w9, w8, #30
    d268:	cmp	w9, #0x0
    d26c:	csel	w2, w8, w20, eq  // eq = none
    d270:	bl	2510 <write@plt>
    d274:	tbnz	w0, #31, d364 <gzvprintf@@ZLIB_1.2.7.1+0x39c>
    d278:	ldr	w8, [x19, #128]
    d27c:	ldr	x9, [x19, #120]
    d280:	subs	w8, w8, w0
    d284:	add	x1, x9, w0, sxtw
    d288:	str	w8, [x19, #128]
    d28c:	str	x1, [x19, #120]
    d290:	b.ne	d260 <gzvprintf@@ZLIB_1.2.7.1+0x298>  // b.any
    d294:	mov	w20, wzr
    d298:	b	d3a0 <gzvprintf@@ZLIB_1.2.7.1+0x3d8>
    d29c:	ldr	w23, [x19, #152]
    d2a0:	mov	w0, wzr
    d2a4:	add	x21, x19, #0x78
    d2a8:	mov	w22, #0x40000000            	// #1073741824
    d2ac:	cbz	w23, d2cc <gzvprintf@@ZLIB_1.2.7.1+0x304>
    d2b0:	cmp	w20, #0x4
    d2b4:	cset	w8, ne  // ne = any
    d2b8:	cmp	w0, #0x1
    d2bc:	cset	w9, eq  // eq = none
    d2c0:	cbz	w20, d32c <gzvprintf@@ZLIB_1.2.7.1+0x364>
    d2c4:	orr	w8, w8, w9
    d2c8:	cbz	w8, d32c <gzvprintf@@ZLIB_1.2.7.1+0x364>
    d2cc:	ldr	x8, [x19, #144]
    d2d0:	ldr	x1, [x19, #8]
    d2d4:	cmp	x8, x1
    d2d8:	b.ls	d314 <gzvprintf@@ZLIB_1.2.7.1+0x34c>  // b.plast
    d2dc:	sub	x8, x8, x1
    d2e0:	ldr	w0, [x19, #28]
    d2e4:	cmp	x8, x22
    d2e8:	csel	x8, x8, x22, lt  // lt = tstop
    d2ec:	and	x2, x8, #0xffffffff
    d2f0:	bl	2510 <write@plt>
    d2f4:	tbnz	w0, #31, d364 <gzvprintf@@ZLIB_1.2.7.1+0x39c>
    d2f8:	ldr	x9, [x19, #8]
    d2fc:	ldr	x8, [x19, #144]
    d300:	add	x1, x9, w0, sxtw
    d304:	cmp	x8, x1
    d308:	str	x1, [x19, #8]
    d30c:	b.hi	d2dc <gzvprintf@@ZLIB_1.2.7.1+0x314>  // b.pmore
    d310:	ldr	w23, [x19, #152]
    d314:	cbnz	w23, d32c <gzvprintf@@ZLIB_1.2.7.1+0x364>
    d318:	ldr	w23, [x19, #40]
    d31c:	ldr	x8, [x19, #56]
    d320:	str	w23, [x19, #152]
    d324:	str	x8, [x19, #144]
    d328:	str	x8, [x19, #8]
    d32c:	mov	x0, x21
    d330:	mov	w1, w20
    d334:	bl	2480 <deflate@plt>
    d338:	cmn	w0, #0x2
    d33c:	b.eq	d388 <gzvprintf@@ZLIB_1.2.7.1+0x3c0>  // b.none
    d340:	ldr	w8, [x19, #152]
    d344:	cmp	w23, w8
    d348:	mov	w23, w8
    d34c:	b.ne	d2ac <gzvprintf@@ZLIB_1.2.7.1+0x2e4>  // b.any
    d350:	cmp	w20, #0x4
    d354:	b.ne	d294 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>  // b.any
    d358:	mov	x0, x21
    d35c:	bl	2470 <deflateReset@plt>
    d360:	b	d294 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    d364:	bl	2630 <__errno_location@plt>
    d368:	ldr	w0, [x0]
    d36c:	bl	24e0 <strerror@plt>
    d370:	mov	x2, x0
    d374:	mov	w1, #0xffffffff            	// #-1
    d378:	mov	x0, x19
    d37c:	mov	w20, #0xffffffff            	// #-1
    d380:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    d384:	b	d3a0 <gzvprintf@@ZLIB_1.2.7.1+0x3d8>
    d388:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x3a88>
    d38c:	add	x2, x2, #0x737
    d390:	mov	w1, #0xfffffffe            	// #-2
    d394:	mov	x0, x19
    d398:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    d39c:	mov	w20, #0xffffffff            	// #-1
    d3a0:	mov	w0, w20
    d3a4:	ldp	x20, x19, [sp, #48]
    d3a8:	ldp	x22, x21, [sp, #32]
    d3ac:	ldr	x23, [sp, #16]
    d3b0:	ldp	x29, x30, [sp], #64
    d3b4:	ret

000000000000d3b8 <gzprintf@@Base>:
    d3b8:	sub	sp, sp, #0x100
    d3bc:	stp	x29, x30, [sp, #240]
    d3c0:	add	x29, sp, #0xf0
    d3c4:	mov	x8, #0xffffffffffffffd0    	// #-48
    d3c8:	mov	x9, sp
    d3cc:	sub	x10, x29, #0x70
    d3d0:	movk	x8, #0xff80, lsl #32
    d3d4:	add	x11, x29, #0x10
    d3d8:	add	x9, x9, #0x80
    d3dc:	add	x10, x10, #0x30
    d3e0:	stp	x9, x8, [x29, #-16]
    d3e4:	stp	x11, x10, [x29, #-32]
    d3e8:	stp	x2, x3, [x29, #-112]
    d3ec:	stp	x4, x5, [x29, #-96]
    d3f0:	stp	x6, x7, [x29, #-80]
    d3f4:	stp	q1, q2, [sp, #16]
    d3f8:	str	q0, [sp]
    d3fc:	ldp	q0, q1, [x29, #-32]
    d400:	sub	x2, x29, #0x40
    d404:	stp	q3, q4, [sp, #48]
    d408:	stp	q5, q6, [sp, #80]
    d40c:	str	q7, [sp, #112]
    d410:	stp	q0, q1, [x29, #-64]
    d414:	bl	23b0 <gzvprintf@plt>
    d418:	ldp	x29, x30, [sp, #240]
    d41c:	add	sp, sp, #0x100
    d420:	ret

000000000000d424 <gzflush@@Base>:
    d424:	stp	x29, x30, [sp, #-32]!
    d428:	stp	x20, x19, [sp, #16]
    d42c:	mov	x29, sp
    d430:	cbz	x0, d494 <gzflush@@Base+0x70>
    d434:	ldr	w8, [x0, #24]
    d438:	mov	w9, #0x79b1                	// #31153
    d43c:	mov	x19, x0
    d440:	cmp	w8, w9
    d444:	b.ne	d494 <gzflush@@Base+0x70>  // b.any
    d448:	mov	w20, w1
    d44c:	cmp	w1, #0x4
    d450:	mov	w0, #0xfffffffe            	// #-2
    d454:	b.hi	d498 <gzflush@@Base+0x74>  // b.pmore
    d458:	ldr	w8, [x19, #108]
    d45c:	cbnz	w8, d498 <gzflush@@Base+0x74>
    d460:	ldr	w8, [x19, #104]
    d464:	cbz	w8, d480 <gzflush@@Base+0x5c>
    d468:	ldr	x1, [x19, #96]
    d46c:	mov	x0, x19
    d470:	str	wzr, [x19, #104]
    d474:	bl	cea0 <gzputc@@Base+0xe8>
    d478:	cmn	w0, #0x1
    d47c:	b.eq	d48c <gzflush@@Base+0x68>  // b.none
    d480:	mov	x0, x19
    d484:	mov	w1, w20
    d488:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    d48c:	ldr	w0, [x19, #108]
    d490:	b	d498 <gzflush@@Base+0x74>
    d494:	mov	w0, #0xfffffffe            	// #-2
    d498:	ldp	x20, x19, [sp, #16]
    d49c:	ldp	x29, x30, [sp], #32
    d4a0:	ret

000000000000d4a4 <gzsetparams@@Base>:
    d4a4:	stp	x29, x30, [sp, #-48]!
    d4a8:	str	x21, [sp, #16]
    d4ac:	stp	x20, x19, [sp, #32]
    d4b0:	mov	x29, sp
    d4b4:	cbz	x0, d4d4 <gzsetparams@@Base+0x30>
    d4b8:	ldr	w8, [x0, #24]
    d4bc:	mov	w9, #0x79b1                	// #31153
    d4c0:	mov	x19, x0
    d4c4:	cmp	w8, w9
    d4c8:	b.ne	d4d4 <gzsetparams@@Base+0x30>  // b.any
    d4cc:	ldr	w8, [x19, #108]
    d4d0:	cbz	w8, d4e8 <gzsetparams@@Base+0x44>
    d4d4:	mov	w0, #0xfffffffe            	// #-2
    d4d8:	ldp	x20, x19, [sp, #32]
    d4dc:	ldr	x21, [sp, #16]
    d4e0:	ldp	x29, x30, [sp], #48
    d4e4:	ret
    d4e8:	ldr	w8, [x19, #88]
    d4ec:	mov	w20, w2
    d4f0:	mov	w21, w1
    d4f4:	cmp	w8, w1
    d4f8:	b.ne	d510 <gzsetparams@@Base+0x6c>  // b.any
    d4fc:	ldr	w8, [x19, #92]
    d500:	cmp	w8, w20
    d504:	b.ne	d510 <gzsetparams@@Base+0x6c>  // b.any
    d508:	mov	w0, wzr
    d50c:	b	d4d8 <gzsetparams@@Base+0x34>
    d510:	ldr	w8, [x19, #104]
    d514:	cbz	w8, d530 <gzsetparams@@Base+0x8c>
    d518:	ldr	x1, [x19, #96]
    d51c:	mov	x0, x19
    d520:	str	wzr, [x19, #104]
    d524:	bl	cea0 <gzputc@@Base+0xe8>
    d528:	cmn	w0, #0x1
    d52c:	b.eq	d570 <gzsetparams@@Base+0xcc>  // b.none
    d530:	ldr	w8, [x19, #40]
    d534:	cbz	w8, d564 <gzsetparams@@Base+0xc0>
    d538:	ldr	w8, [x19, #128]
    d53c:	cbz	w8, d554 <gzsetparams@@Base+0xb0>
    d540:	mov	w1, #0x5                   	// #5
    d544:	mov	x0, x19
    d548:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    d54c:	cmn	w0, #0x1
    d550:	b.eq	d570 <gzsetparams@@Base+0xcc>  // b.none
    d554:	add	x0, x19, #0x78
    d558:	mov	w1, w21
    d55c:	mov	w2, w20
    d560:	bl	24c0 <deflateParams@plt>
    d564:	mov	w0, wzr
    d568:	stp	w21, w20, [x19, #88]
    d56c:	b	d4d8 <gzsetparams@@Base+0x34>
    d570:	ldr	w0, [x19, #108]
    d574:	b	d4d8 <gzsetparams@@Base+0x34>

000000000000d578 <gzclose_w@@ZLIB_1.2.3.5>:
    d578:	stp	x29, x30, [sp, #-32]!
    d57c:	stp	x20, x19, [sp, #16]
    d580:	mov	x29, sp
    d584:	cbz	x0, d5c8 <gzclose_w@@ZLIB_1.2.3.5+0x50>
    d588:	ldr	w8, [x0, #24]
    d58c:	mov	w9, #0x79b1                	// #31153
    d590:	mov	x19, x0
    d594:	cmp	w8, w9
    d598:	b.ne	d5c8 <gzclose_w@@ZLIB_1.2.3.5+0x50>  // b.any
    d59c:	ldr	w8, [x19, #104]
    d5a0:	cbz	w8, d5d0 <gzclose_w@@ZLIB_1.2.3.5+0x58>
    d5a4:	ldr	x1, [x19, #96]
    d5a8:	mov	x0, x19
    d5ac:	str	wzr, [x19, #104]
    d5b0:	bl	cea0 <gzputc@@Base+0xe8>
    d5b4:	cmn	w0, #0x1
    d5b8:	mov	w20, wzr
    d5bc:	b.ne	d5d4 <gzclose_w@@ZLIB_1.2.3.5+0x5c>  // b.any
    d5c0:	ldr	w20, [x19, #108]
    d5c4:	b	d5d4 <gzclose_w@@ZLIB_1.2.3.5+0x5c>
    d5c8:	mov	w20, #0xfffffffe            	// #-2
    d5cc:	b	d644 <gzclose_w@@ZLIB_1.2.3.5+0xcc>
    d5d0:	mov	w20, wzr
    d5d4:	mov	w1, #0x4                   	// #4
    d5d8:	mov	x0, x19
    d5dc:	bl	d214 <gzvprintf@@ZLIB_1.2.7.1+0x24c>
    d5e0:	cmn	w0, #0x1
    d5e4:	b.ne	d5ec <gzclose_w@@ZLIB_1.2.3.5+0x74>  // b.any
    d5e8:	ldr	w20, [x19, #108]
    d5ec:	ldr	w8, [x19, #40]
    d5f0:	cbz	w8, d614 <gzclose_w@@ZLIB_1.2.3.5+0x9c>
    d5f4:	ldr	w8, [x19, #64]
    d5f8:	cbnz	w8, d60c <gzclose_w@@ZLIB_1.2.3.5+0x94>
    d5fc:	add	x0, x19, #0x78
    d600:	bl	2570 <deflateEnd@plt>
    d604:	ldr	x0, [x19, #56]
    d608:	bl	2550 <free@plt>
    d60c:	ldr	x0, [x19, #48]
    d610:	bl	2550 <free@plt>
    d614:	mov	x0, x19
    d618:	mov	w1, wzr
    d61c:	mov	x2, xzr
    d620:	bl	bce4 <gzseek64@@ZLIB_1.2.3.3+0x184>
    d624:	ldr	x0, [x19, #32]
    d628:	bl	2550 <free@plt>
    d62c:	ldr	w0, [x19, #28]
    d630:	bl	24f0 <close@plt>
    d634:	cmn	w0, #0x1
    d638:	mov	x0, x19
    d63c:	csinv	w20, w20, wzr, ne  // ne = any
    d640:	bl	2550 <free@plt>
    d644:	mov	w0, w20
    d648:	ldp	x20, x19, [sp, #16]
    d64c:	ldp	x29, x30, [sp], #32
    d650:	ret

Disassembly of section .fini:

000000000000d654 <.fini>:
    d654:	stp	x29, x30, [sp, #-16]!
    d658:	mov	x29, sp
    d65c:	ldp	x29, x30, [sp], #16
    d660:	ret
