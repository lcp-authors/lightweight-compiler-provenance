
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__md5@@Base+0x1019c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0x1044>:
     e20:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
     e38:	add	x0, x0, #0x460
     e3c:	adrp	x1, 13000 <PyInit__md5@@Base+0x1119c>
     e40:	add	x1, x1, #0x460
     e44:	cmp	x1, x0
     e48:	b.eq	e60 <_Py_strhex@plt+0x50>  // b.none
     e4c:	adrp	x1, 12000 <PyInit__md5@@Base+0x1019c>
     e50:	ldr	x1, [x1, #4008]
     e54:	cbz	x1, e60 <_Py_strhex@plt+0x50>
     e58:	mov	x16, x1
     e5c:	br	x16
     e60:	ret
     e64:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
     e68:	add	x0, x0, #0x460
     e6c:	adrp	x1, 13000 <PyInit__md5@@Base+0x1119c>
     e70:	add	x1, x1, #0x460
     e74:	sub	x1, x1, x0
     e78:	mov	x2, #0x2                   	// #2
     e7c:	asr	x1, x1, #3
     e80:	sdiv	x1, x1, x2
     e84:	cbz	x1, e9c <_Py_strhex@plt+0x8c>
     e88:	adrp	x2, 12000 <PyInit__md5@@Base+0x1019c>
     e8c:	ldr	x2, [x2, #4064]
     e90:	cbz	x2, e9c <_Py_strhex@plt+0x8c>
     e94:	mov	x16, x2
     e98:	br	x16
     e9c:	ret
     ea0:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
     ea4:	ldrb	w1, [x0, #1120]
     ea8:	cbnz	w1, eec <_Py_strhex@plt+0xdc>
     eac:	stp	x29, x30, [sp, #-32]!
     eb0:	mov	x29, sp
     eb4:	str	x19, [sp, #16]
     eb8:	mov	x19, x0
     ebc:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
     ec0:	ldr	x0, [x0, #4016]
     ec4:	cbz	x0, ed4 <_Py_strhex@plt+0xc4>
     ec8:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
     ecc:	ldr	x0, [x0, #144]
     ed0:	bl	d20 <__cxa_finalize@plt>
     ed4:	bl	e34 <_Py_strhex@plt+0x24>
     ed8:	mov	w0, #0x1                   	// #1
     edc:	strb	w0, [x19, #1120]
     ee0:	ldr	x19, [sp, #16]
     ee4:	ldp	x29, x30, [sp], #32
     ee8:	ret
     eec:	ret
     ef0:	b	e64 <_Py_strhex@plt+0x54>
     ef4:	stp	x29, x30, [sp, #-144]!
     ef8:	mov	x3, #0x0                   	// #0
     efc:	mov	x29, sp
     f00:	add	x5, sp, #0x50
     f04:	stp	x19, x20, [sp, #16]
     f08:	stp	x21, x22, [sp, #32]
     f0c:	stp	x23, x24, [sp, #48]
     f10:	str	x25, [sp, #64]
     f14:	ldrb	w4, [x1, #2]
     f18:	ldrb	w2, [x1, #3]
     f1c:	lsl	w4, w4, #16
     f20:	orr	w2, w4, w2, lsl #24
     f24:	ldrb	w4, [x1, #1]
     f28:	ldrb	w6, [x1], #4
     f2c:	orr	w4, w6, w4, lsl #8
     f30:	orr	w2, w2, w4
     f34:	str	w2, [x3, x5]
     f38:	add	x3, x3, #0x4
     f3c:	cmp	x3, #0x40
     f40:	b.ne	f14 <_Py_strhex@plt+0x104>  // b.any
     f44:	ldp	w11, w12, [x0, #16]
     f48:	mov	w19, #0xffff5bb1            	// #-42063
     f4c:	ldp	w16, w13, [x0, #8]
     f50:	eor	w1, w11, w12
     f54:	ldp	w20, w4, [sp, #80]
     f58:	and	w1, w1, w13
     f5c:	eor	w1, w1, w12
     f60:	eor	w5, w13, w11
     f64:	add	w2, w1, w16
     f68:	mov	w1, #0xa478                	// #42104
     f6c:	movk	w1, #0xd76a, lsl #16
     f70:	add	w1, w20, w1
     f74:	add	w1, w1, w2
     f78:	ldr	w18, [sp, #124]
     f7c:	ldp	w3, w23, [sp, #88]
     f80:	ror	w1, w1, #25
     f84:	add	w1, w1, w13
     f88:	and	w5, w5, w1
     f8c:	eor	w7, w13, w1
     f90:	eor	w5, w5, w11
     f94:	add	w2, w5, w12
     f98:	mov	w5, #0xb756                	// #46934
     f9c:	movk	w5, #0xe8c7, lsl #16
     fa0:	add	w5, w4, w5
     fa4:	add	w5, w5, w2
     fa8:	ldp	w14, w10, [sp, #104]
     fac:	ror	w5, w5, #20
     fb0:	add	w5, w5, w1
     fb4:	and	w7, w7, w5
     fb8:	eor	w9, w1, w5
     fbc:	eor	w7, w7, w13
     fc0:	add	w2, w7, w11
     fc4:	mov	w7, #0x70db                	// #28891
     fc8:	movk	w7, #0x2420, lsl #16
     fcc:	add	w7, w3, w7
     fd0:	add	w7, w7, w2
     fd4:	ror	w7, w7, #15
     fd8:	add	w7, w7, w5
     fdc:	and	w9, w9, w7
     fe0:	eor	w6, w5, w7
     fe4:	eor	w9, w9, w1
     fe8:	add	w2, w9, w13
     fec:	mov	w9, #0xceee                	// #52974
     ff0:	movk	w9, #0xc1bd, lsl #16
     ff4:	add	w9, w23, w9
     ff8:	add	w9, w9, w2
     ffc:	ldr	w2, [sp, #96]
    1000:	ror	w9, w9, #10
    1004:	add	w9, w9, w7
    1008:	and	w6, w6, w9
    100c:	eor	w6, w6, w5
    1010:	add	w6, w6, w1
    1014:	mov	w1, #0xfaf                 	// #4015
    1018:	movk	w1, #0xf57c, lsl #16
    101c:	add	w1, w2, w1
    1020:	add	w1, w1, w6
    1024:	eor	w6, w7, w9
    1028:	ror	w1, w1, #25
    102c:	add	w1, w1, w9
    1030:	and	w6, w6, w1
    1034:	eor	w6, w6, w7
    1038:	add	w8, w6, w5
    103c:	ldr	w5, [sp, #100]
    1040:	mov	w6, #0xc62a                	// #50730
    1044:	movk	w6, #0x4787, lsl #16
    1048:	add	w6, w5, w6
    104c:	add	w6, w6, w8
    1050:	eor	w8, w9, w1
    1054:	ror	w6, w6, #20
    1058:	add	w6, w6, w1
    105c:	and	w8, w8, w6
    1060:	eor	w8, w8, w9
    1064:	add	w8, w8, w7
    1068:	mov	w7, #0x4613                	// #17939
    106c:	movk	w7, #0xa830, lsl #16
    1070:	add	w7, w14, w7
    1074:	add	w7, w7, w8
    1078:	eor	w8, w1, w6
    107c:	ror	w7, w7, #15
    1080:	add	w7, w7, w6
    1084:	and	w8, w8, w7
    1088:	eor	w8, w8, w1
    108c:	add	w8, w8, w9
    1090:	mov	w9, #0x9501                	// #38145
    1094:	movk	w9, #0xfd46, lsl #16
    1098:	add	w9, w10, w9
    109c:	add	w9, w9, w8
    10a0:	eor	w8, w6, w7
    10a4:	ror	w9, w9, #10
    10a8:	add	w9, w9, w7
    10ac:	and	w8, w8, w9
    10b0:	eor	w17, w7, w9
    10b4:	eor	w8, w8, w6
    10b8:	add	w15, w8, w1
    10bc:	ldr	w1, [sp, #112]
    10c0:	mov	w8, #0x98d8                	// #39128
    10c4:	movk	w8, #0x6980, lsl #16
    10c8:	add	w8, w1, w8
    10cc:	add	w8, w8, w15
    10d0:	ldr	w15, [sp, #116]
    10d4:	ror	w8, w8, #25
    10d8:	add	w8, w8, w9
    10dc:	and	w17, w17, w8
    10e0:	eor	w17, w17, w7
    10e4:	add	w17, w17, w6
    10e8:	mov	w6, #0xf7af                	// #63407
    10ec:	movk	w6, #0x8b44, lsl #16
    10f0:	add	w6, w15, w6
    10f4:	add	w6, w6, w17
    10f8:	eor	w17, w9, w8
    10fc:	ror	w6, w6, #20
    1100:	add	w6, w6, w8
    1104:	and	w17, w17, w6
    1108:	eor	w17, w17, w9
    110c:	add	w17, w17, w7
    1110:	ldr	w7, [sp, #120]
    1114:	add	w24, w7, w19
    1118:	add	w24, w24, w17
    111c:	eor	w17, w8, w6
    1120:	ror	w24, w24, #15
    1124:	add	w24, w24, w6
    1128:	and	w17, w17, w24
    112c:	eor	w19, w6, w24
    1130:	eor	w17, w17, w8
    1134:	add	w9, w17, w9
    1138:	mov	w17, #0xd7be                	// #55230
    113c:	movk	w17, #0x895c, lsl #16
    1140:	add	w17, w18, w17
    1144:	add	w17, w17, w9
    1148:	ror	w17, w17, #10
    114c:	add	w17, w17, w24
    1150:	and	w19, w19, w17
    1154:	eor	w22, w24, w17
    1158:	eor	w19, w19, w6
    115c:	add	w9, w19, w8
    1160:	ldr	w8, [sp, #128]
    1164:	mov	w19, #0x1122                	// #4386
    1168:	movk	w19, #0x6b90, lsl #16
    116c:	add	w19, w8, w19
    1170:	add	w19, w19, w9
    1174:	ror	w19, w19, #25
    1178:	add	w19, w19, w17
    117c:	and	w22, w22, w19
    1180:	eor	w30, w17, w19
    1184:	eor	w22, w22, w24
    1188:	add	w9, w22, w6
    118c:	ldr	w6, [sp, #132]
    1190:	mov	w22, #0x7193                	// #29075
    1194:	movk	w22, #0xfd98, lsl #16
    1198:	add	w22, w6, w22
    119c:	add	w22, w22, w9
    11a0:	ldr	w9, [sp, #136]
    11a4:	ror	w22, w22, #20
    11a8:	add	w22, w22, w19
    11ac:	and	w30, w30, w22
    11b0:	eor	w21, w19, w22
    11b4:	eor	w30, w30, w17
    11b8:	add	w24, w30, w24
    11bc:	mov	w30, #0x438e                	// #17294
    11c0:	movk	w30, #0xa679, lsl #16
    11c4:	add	w30, w9, w30
    11c8:	add	w30, w30, w24
    11cc:	ror	w30, w30, #15
    11d0:	add	w30, w30, w22
    11d4:	and	w21, w21, w30
    11d8:	eor	w21, w21, w19
    11dc:	add	w24, w21, w17
    11e0:	ldr	w17, [sp, #140]
    11e4:	mov	w21, #0x821                 	// #2081
    11e8:	movk	w21, #0x49b4, lsl #16
    11ec:	add	w21, w17, w21
    11f0:	add	w21, w21, w24
    11f4:	ror	w21, w21, #10
    11f8:	add	w21, w21, w30
    11fc:	eor	w24, w30, w21
    1200:	and	w24, w24, w22
    1204:	eor	w24, w24, w30
    1208:	add	w24, w24, w19
    120c:	mov	w19, #0x2562                	// #9570
    1210:	movk	w19, #0xf61e, lsl #16
    1214:	add	w19, w4, w19
    1218:	add	w19, w19, w24
    121c:	ror	w19, w19, #27
    1220:	add	w19, w19, w21
    1224:	eor	w24, w21, w19
    1228:	and	w24, w24, w30
    122c:	eor	w24, w24, w21
    1230:	add	w24, w24, w22
    1234:	mov	w22, #0xb340                	// #45888
    1238:	movk	w22, #0xc040, lsl #16
    123c:	add	w22, w14, w22
    1240:	add	w22, w22, w24
    1244:	ror	w22, w22, #23
    1248:	add	w22, w22, w19
    124c:	eor	w24, w19, w22
    1250:	and	w24, w24, w21
    1254:	eor	w24, w24, w19
    1258:	add	w24, w24, w30
    125c:	mov	w30, #0x5a51                	// #23121
    1260:	movk	w30, #0x265e, lsl #16
    1264:	add	w30, w18, w30
    1268:	add	w30, w30, w24
    126c:	ror	w30, w30, #18
    1270:	add	w30, w30, w22
    1274:	eor	w24, w22, w30
    1278:	and	w24, w24, w19
    127c:	eor	w24, w24, w22
    1280:	add	w24, w24, w21
    1284:	mov	w21, #0xc7aa                	// #51114
    1288:	movk	w21, #0xe9b6, lsl #16
    128c:	add	w21, w20, w21
    1290:	add	w21, w21, w24
    1294:	ror	w21, w21, #12
    1298:	add	w21, w21, w30
    129c:	eor	w24, w30, w21
    12a0:	and	w24, w24, w22
    12a4:	eor	w24, w24, w30
    12a8:	add	w24, w24, w19
    12ac:	mov	w19, #0x105d                	// #4189
    12b0:	movk	w19, #0xd62f, lsl #16
    12b4:	add	w19, w5, w19
    12b8:	add	w19, w19, w24
    12bc:	ror	w19, w19, #27
    12c0:	add	w19, w19, w21
    12c4:	eor	w24, w21, w19
    12c8:	and	w24, w24, w30
    12cc:	eor	w24, w24, w21
    12d0:	add	w24, w24, w22
    12d4:	mov	w22, #0x1453                	// #5203
    12d8:	movk	w22, #0x244, lsl #16
    12dc:	add	w22, w7, w22
    12e0:	add	w22, w22, w24
    12e4:	ror	w22, w22, #23
    12e8:	add	w22, w22, w19
    12ec:	eor	w24, w19, w22
    12f0:	and	w24, w24, w21
    12f4:	eor	w24, w24, w19
    12f8:	add	w24, w24, w30
    12fc:	mov	w30, #0xe681                	// #59009
    1300:	movk	w30, #0xd8a1, lsl #16
    1304:	add	w30, w17, w30
    1308:	add	w30, w30, w24
    130c:	ror	w30, w30, #18
    1310:	add	w30, w30, w22
    1314:	eor	w24, w22, w30
    1318:	and	w24, w24, w19
    131c:	eor	w24, w24, w22
    1320:	add	w24, w24, w21
    1324:	mov	w21, #0xfbc8                	// #64456
    1328:	movk	w21, #0xe7d3, lsl #16
    132c:	add	w21, w2, w21
    1330:	add	w21, w21, w24
    1334:	ror	w21, w21, #12
    1338:	add	w21, w21, w30
    133c:	eor	w24, w30, w21
    1340:	and	w24, w24, w22
    1344:	eor	w24, w24, w30
    1348:	add	w24, w24, w19
    134c:	mov	w19, #0xcde6                	// #52710
    1350:	movk	w19, #0x21e1, lsl #16
    1354:	add	w19, w15, w19
    1358:	add	w19, w19, w24
    135c:	ror	w19, w19, #27
    1360:	add	w19, w19, w21
    1364:	eor	w24, w21, w19
    1368:	and	w24, w24, w30
    136c:	eor	w24, w24, w21
    1370:	add	w24, w24, w22
    1374:	mov	w22, #0x7d6                 	// #2006
    1378:	movk	w22, #0xc337, lsl #16
    137c:	add	w22, w9, w22
    1380:	add	w22, w22, w24
    1384:	ror	w22, w22, #23
    1388:	add	w22, w22, w19
    138c:	eor	w24, w19, w22
    1390:	and	w24, w24, w21
    1394:	eor	w24, w24, w19
    1398:	add	w24, w24, w30
    139c:	mov	w30, #0xd87                 	// #3463
    13a0:	movk	w30, #0xf4d5, lsl #16
    13a4:	add	w30, w23, w30
    13a8:	add	w30, w30, w24
    13ac:	ror	w30, w30, #18
    13b0:	add	w30, w30, w22
    13b4:	eor	w24, w22, w30
    13b8:	and	w24, w24, w19
    13bc:	eor	w24, w24, w22
    13c0:	add	w24, w24, w21
    13c4:	mov	w21, #0x14ed                	// #5357
    13c8:	movk	w21, #0x455a, lsl #16
    13cc:	add	w21, w1, w21
    13d0:	add	w21, w21, w24
    13d4:	ror	w21, w21, #12
    13d8:	add	w21, w21, w30
    13dc:	eor	w24, w30, w21
    13e0:	and	w24, w24, w22
    13e4:	eor	w24, w24, w30
    13e8:	add	w24, w24, w19
    13ec:	mov	w19, #0xe905                	// #59653
    13f0:	movk	w19, #0xa9e3, lsl #16
    13f4:	add	w19, w6, w19
    13f8:	add	w19, w19, w24
    13fc:	ror	w19, w19, #27
    1400:	add	w19, w19, w21
    1404:	eor	w24, w21, w19
    1408:	and	w24, w24, w30
    140c:	eor	w24, w24, w21
    1410:	add	w22, w24, w22
    1414:	mov	w24, #0xa3f8                	// #41976
    1418:	movk	w24, #0xfcef, lsl #16
    141c:	add	w24, w3, w24
    1420:	add	w24, w24, w22
    1424:	ror	w24, w24, #23
    1428:	add	w24, w24, w19
    142c:	eor	w25, w19, w24
    1430:	and	w25, w25, w21
    1434:	eor	w25, w25, w19
    1438:	add	w30, w25, w30
    143c:	mov	w25, #0x2d9                 	// #729
    1440:	movk	w25, #0x676f, lsl #16
    1444:	add	w25, w10, w25
    1448:	add	w25, w25, w30
    144c:	ror	w25, w25, #18
    1450:	add	w25, w25, w24
    1454:	eor	w30, w24, w25
    1458:	and	w22, w30, w19
    145c:	eor	w22, w22, w24
    1460:	add	w21, w22, w21
    1464:	mov	w22, #0x4c8a                	// #19594
    1468:	movk	w22, #0x8d2a, lsl #16
    146c:	add	w22, w8, w22
    1470:	add	w22, w22, w21
    1474:	ror	w22, w22, #12
    1478:	add	w22, w22, w25
    147c:	eor	w30, w30, w22
    1480:	add	w19, w30, w19
    1484:	sub	w30, w5, #0x5c, lsl #12
    1488:	sub	w30, w30, #0x6be
    148c:	add	w19, w30, w19
    1490:	eor	w30, w25, w22
    1494:	ror	w19, w19, #28
    1498:	add	w19, w19, w22
    149c:	eor	w30, w30, w19
    14a0:	eor	w21, w22, w19
    14a4:	add	w24, w30, w24
    14a8:	mov	w30, #0xf681                	// #63105
    14ac:	movk	w30, #0x8771, lsl #16
    14b0:	add	w30, w1, w30
    14b4:	add	w30, w30, w24
    14b8:	ror	w30, w30, #21
    14bc:	add	w30, w30, w19
    14c0:	eor	w21, w21, w30
    14c4:	eor	w24, w19, w30
    14c8:	add	w25, w21, w25
    14cc:	mov	w21, #0x6122                	// #24866
    14d0:	movk	w21, #0x6d9d, lsl #16
    14d4:	add	w21, w18, w21
    14d8:	add	w21, w21, w25
    14dc:	ldr	x25, [sp, #64]
    14e0:	ror	w21, w21, #16
    14e4:	add	w21, w21, w30
    14e8:	eor	w24, w24, w21
    14ec:	add	w24, w24, w22
    14f0:	mov	w22, #0x380c                	// #14348
    14f4:	movk	w22, #0xfde5, lsl #16
    14f8:	add	w22, w9, w22
    14fc:	add	w22, w22, w24
    1500:	eor	w24, w30, w21
    1504:	ror	w22, w22, #9
    1508:	add	w22, w22, w21
    150c:	eor	w24, w24, w22
    1510:	add	w24, w24, w19
    1514:	mov	w19, #0xea44                	// #59972
    1518:	movk	w19, #0xa4be, lsl #16
    151c:	add	w19, w4, w19
    1520:	add	w19, w19, w24
    1524:	eor	w24, w21, w22
    1528:	ror	w19, w19, #28
    152c:	add	w19, w19, w22
    1530:	eor	w24, w24, w19
    1534:	add	w24, w24, w30
    1538:	mov	w30, #0xcfa9                	// #53161
    153c:	movk	w30, #0x4bde, lsl #16
    1540:	add	w30, w2, w30
    1544:	add	w30, w30, w24
    1548:	eor	w24, w22, w19
    154c:	ror	w30, w30, #21
    1550:	add	w30, w30, w19
    1554:	eor	w24, w24, w30
    1558:	add	w24, w24, w21
    155c:	mov	w21, #0x4b60                	// #19296
    1560:	movk	w21, #0xf6bb, lsl #16
    1564:	add	w21, w10, w21
    1568:	add	w21, w21, w24
    156c:	eor	w24, w19, w30
    1570:	ror	w21, w21, #16
    1574:	add	w21, w21, w30
    1578:	eor	w24, w24, w21
    157c:	add	w24, w24, w22
    1580:	mov	w22, #0xbc70                	// #48240
    1584:	movk	w22, #0xbebf, lsl #16
    1588:	add	w22, w7, w22
    158c:	add	w22, w22, w24
    1590:	eor	w24, w30, w21
    1594:	ror	w22, w22, #9
    1598:	add	w22, w22, w21
    159c:	eor	w24, w24, w22
    15a0:	add	w24, w24, w19
    15a4:	mov	w19, #0x7ec6                	// #32454
    15a8:	movk	w19, #0x289b, lsl #16
    15ac:	add	w19, w6, w19
    15b0:	add	w19, w19, w24
    15b4:	eor	w24, w21, w22
    15b8:	ror	w19, w19, #28
    15bc:	add	w19, w19, w22
    15c0:	eor	w24, w24, w19
    15c4:	add	w24, w24, w30
    15c8:	mov	w30, #0x27fa                	// #10234
    15cc:	movk	w30, #0xeaa1, lsl #16
    15d0:	add	w30, w20, w30
    15d4:	add	w30, w30, w24
    15d8:	eor	w24, w22, w19
    15dc:	ror	w30, w30, #21
    15e0:	add	w30, w30, w19
    15e4:	eor	w24, w24, w30
    15e8:	add	w24, w24, w21
    15ec:	mov	w21, #0x3085                	// #12421
    15f0:	movk	w21, #0xd4ef, lsl #16
    15f4:	add	w21, w23, w21
    15f8:	add	w21, w21, w24
    15fc:	eor	w24, w19, w30
    1600:	ror	w21, w21, #16
    1604:	add	w21, w21, w30
    1608:	eor	w24, w24, w21
    160c:	add	w24, w24, w22
    1610:	mov	w22, #0x1d05                	// #7429
    1614:	movk	w22, #0x488, lsl #16
    1618:	add	w22, w14, w22
    161c:	add	w22, w22, w24
    1620:	eor	w24, w30, w21
    1624:	ror	w22, w22, #9
    1628:	add	w22, w22, w21
    162c:	eor	w24, w24, w22
    1630:	add	w24, w24, w19
    1634:	mov	w19, #0xd039                	// #53305
    1638:	movk	w19, #0xd9d4, lsl #16
    163c:	add	w19, w15, w19
    1640:	add	w19, w19, w24
    1644:	eor	w24, w21, w22
    1648:	ror	w19, w19, #28
    164c:	add	w19, w19, w22
    1650:	eor	w24, w24, w19
    1654:	add	w24, w24, w30
    1658:	mov	w30, #0x99e5                	// #39397
    165c:	movk	w30, #0xe6db, lsl #16
    1660:	add	w30, w8, w30
    1664:	add	w30, w30, w24
    1668:	eor	w24, w22, w19
    166c:	ror	w30, w30, #21
    1670:	add	w30, w30, w19
    1674:	eor	w24, w24, w30
    1678:	add	w24, w24, w21
    167c:	mov	w21, #0x7cf8                	// #31992
    1680:	movk	w21, #0x1fa2, lsl #16
    1684:	add	w21, w17, w21
    1688:	add	w21, w21, w24
    168c:	eor	w24, w19, w30
    1690:	ror	w21, w21, #16
    1694:	add	w21, w21, w30
    1698:	eor	w24, w24, w21
    169c:	add	w24, w24, w22
    16a0:	mov	w22, #0x5665                	// #22117
    16a4:	movk	w22, #0xc4ac, lsl #16
    16a8:	add	w22, w3, w22
    16ac:	add	w22, w22, w24
    16b0:	ror	w22, w22, #9
    16b4:	add	w22, w22, w21
    16b8:	orn	w24, w22, w30
    16bc:	eor	w24, w24, w21
    16c0:	add	w24, w24, w19
    16c4:	mov	w19, #0x2244                	// #8772
    16c8:	movk	w19, #0xf429, lsl #16
    16cc:	add	w19, w20, w19
    16d0:	add	w19, w19, w24
    16d4:	ror	w19, w19, #26
    16d8:	add	w19, w19, w22
    16dc:	orn	w20, w19, w21
    16e0:	eor	w20, w20, w22
    16e4:	add	w20, w20, w30
    16e8:	mov	w30, #0xff97                	// #65431
    16ec:	movk	w30, #0x432a, lsl #16
    16f0:	add	w30, w10, w30
    16f4:	add	w30, w30, w20
    16f8:	ror	w30, w30, #22
    16fc:	add	w30, w30, w19
    1700:	orn	w10, w30, w22
    1704:	eor	w10, w10, w19
    1708:	add	w10, w10, w21
    170c:	mov	w21, #0x23a7                	// #9127
    1710:	movk	w21, #0xab94, lsl #16
    1714:	add	w21, w9, w21
    1718:	add	w21, w21, w10
    171c:	ror	w21, w21, #17
    1720:	add	w21, w21, w30
    1724:	orn	w20, w21, w19
    1728:	eor	w20, w20, w30
    172c:	add	w22, w20, w22
    1730:	mov	w20, #0xa039                	// #41017
    1734:	movk	w20, #0xfc93, lsl #16
    1738:	add	w20, w5, w20
    173c:	add	w20, w20, w22
    1740:	ror	w20, w20, #11
    1744:	add	w20, w20, w21
    1748:	orn	w9, w20, w30
    174c:	eor	w9, w9, w21
    1750:	add	w9, w9, w19
    1754:	mov	w19, #0x59c3                	// #22979
    1758:	movk	w19, #0x655b, lsl #16
    175c:	add	w19, w8, w19
    1760:	add	w19, w19, w9
    1764:	ror	w19, w19, #26
    1768:	add	w19, w19, w20
    176c:	orn	w8, w19, w21
    1770:	eor	w8, w8, w20
    1774:	add	w8, w8, w30
    1778:	mov	w30, #0xcc92                	// #52370
    177c:	movk	w30, #0x8f0c, lsl #16
    1780:	add	w30, w23, w30
    1784:	add	w30, w30, w8
    1788:	ldp	x23, x24, [sp, #48]
    178c:	ror	w30, w30, #22
    1790:	add	w30, w30, w19
    1794:	orn	w10, w30, w20
    1798:	eor	w10, w10, w19
    179c:	add	w21, w10, w21
    17a0:	sub	w10, w7, #0x100, lsl #12
    17a4:	sub	w10, w10, #0xb83
    17a8:	add	w10, w10, w21
    17ac:	ldp	x21, x22, [sp, #32]
    17b0:	ror	w10, w10, #17
    17b4:	add	w10, w10, w30
    17b8:	orn	w5, w10, w19
    17bc:	eor	w5, w5, w30
    17c0:	add	w20, w5, w20
    17c4:	mov	w5, #0x5dd1                	// #24017
    17c8:	movk	w5, #0x8584, lsl #16
    17cc:	add	w5, w4, w5
    17d0:	add	w5, w5, w20
    17d4:	ror	w5, w5, #11
    17d8:	add	w5, w5, w10
    17dc:	orn	w9, w5, w30
    17e0:	eor	w9, w9, w10
    17e4:	add	w19, w9, w19
    17e8:	mov	w9, #0x7e4f                	// #32335
    17ec:	movk	w9, #0x6fa8, lsl #16
    17f0:	add	w9, w1, w9
    17f4:	add	w9, w9, w19
    17f8:	ldp	x19, x20, [sp, #16]
    17fc:	ror	w9, w9, #26
    1800:	add	w9, w9, w5
    1804:	orn	w8, w9, w10
    1808:	eor	w8, w8, w5
    180c:	add	w30, w8, w30
    1810:	mov	w8, #0xe6e0                	// #59104
    1814:	movk	w8, #0xfe2c, lsl #16
    1818:	add	w8, w17, w8
    181c:	add	w8, w8, w30
    1820:	ror	w8, w8, #22
    1824:	add	w8, w8, w9
    1828:	orn	w7, w8, w5
    182c:	eor	w7, w7, w9
    1830:	add	w10, w7, w10
    1834:	mov	w7, #0x4314                	// #17172
    1838:	movk	w7, #0xa301, lsl #16
    183c:	add	w7, w14, w7
    1840:	add	w7, w7, w10
    1844:	ror	w7, w7, #17
    1848:	add	w7, w7, w8
    184c:	orn	w1, w7, w9
    1850:	eor	w1, w1, w8
    1854:	add	w1, w1, w5
    1858:	mov	w5, #0x11a1                	// #4513
    185c:	movk	w5, #0x4e08, lsl #16
    1860:	add	w5, w6, w5
    1864:	add	w5, w5, w1
    1868:	ror	w5, w5, #11
    186c:	add	w5, w5, w7
    1870:	orn	w4, w5, w8
    1874:	eor	w4, w4, w7
    1878:	add	w9, w4, w9
    187c:	mov	w4, #0x7e82                	// #32386
    1880:	movk	w4, #0xf753, lsl #16
    1884:	add	w4, w2, w4
    1888:	add	w4, w4, w9
    188c:	ror	w4, w4, #26
    1890:	add	w1, w4, w5
    1894:	orn	w2, w1, w7
    1898:	eor	w2, w2, w5
    189c:	add	w8, w2, w8
    18a0:	mov	w2, #0xf235                	// #62005
    18a4:	movk	w2, #0xbd3a, lsl #16
    18a8:	add	w2, w18, w2
    18ac:	add	w2, w2, w8
    18b0:	ror	w2, w2, #22
    18b4:	add	w2, w2, w1
    18b8:	orn	w4, w2, w5
    18bc:	eor	w4, w4, w1
    18c0:	add	w7, w4, w7
    18c4:	mov	w4, #0xd2bb                	// #53947
    18c8:	movk	w4, #0x2ad7, lsl #16
    18cc:	add	w3, w3, w4
    18d0:	add	w3, w3, w7
    18d4:	ror	w3, w3, #17
    18d8:	add	w3, w3, w2
    18dc:	orn	w4, w3, w1
    18e0:	add	w1, w16, w1
    18e4:	eor	w4, w4, w2
    18e8:	str	w1, [x0, #8]
    18ec:	mov	w1, #0xd391                	// #54161
    18f0:	add	w5, w4, w5
    18f4:	movk	w1, #0xeb86, lsl #16
    18f8:	add	w1, w15, w1
    18fc:	add	w1, w1, w5
    1900:	add	w13, w13, w3
    1904:	add	w2, w12, w2
    1908:	add	w3, w11, w3
    190c:	stp	w3, w2, [x0, #16]
    1910:	ror	w1, w1, #11
    1914:	add	w1, w1, w13
    1918:	str	w1, [x0, #12]
    191c:	ldp	x29, x30, [sp], #144
    1920:	ret
    1924:	stp	x29, x30, [sp, #-32]!
    1928:	mov	x29, sp
    192c:	ldr	x2, [x0]
    1930:	str	x19, [sp, #16]
    1934:	mov	x19, x1
    1938:	ldr	w1, [x0, #24]
    193c:	lsl	w3, w1, #3
    1940:	add	x2, x2, x3
    1944:	str	x2, [x0]
    1948:	add	w2, w1, #0x1
    194c:	add	x1, x0, w1, uxtw
    1950:	str	w2, [x0, #24]
    1954:	mov	w3, #0xffffff80            	// #-128
    1958:	cmp	w2, #0x38
    195c:	strb	w3, [x1, #28]
    1960:	b.hi	19d4 <_Py_strhex@plt+0xbc4>  // b.pmore
    1964:	ldr	w1, [x0, #24]
    1968:	cmp	w1, #0x37
    196c:	b.ls	19f0 <_Py_strhex@plt+0xbe0>  // b.plast
    1970:	ldr	x1, [x0]
    1974:	stur	x1, [x0, #84]
    1978:	add	x1, x0, #0x1c
    197c:	bl	ef4 <_Py_strhex@plt+0xe4>
    1980:	add	x0, x0, #0x8
    1984:	mov	x1, x19
    1988:	add	x3, x19, #0x10
    198c:	ldrb	w2, [x0, #3]
    1990:	strb	w2, [x1, #3]
    1994:	ldrh	w2, [x0, #2]
    1998:	strb	w2, [x1, #2]
    199c:	ldr	w2, [x0]
    19a0:	lsr	w2, w2, #8
    19a4:	strb	w2, [x1, #1]
    19a8:	ldr	w2, [x0], #4
    19ac:	strb	w2, [x1], #4
    19b0:	cmp	x3, x1
    19b4:	b.ne	198c <_Py_strhex@plt+0xb7c>  // b.any
    19b8:	ldr	x19, [sp, #16]
    19bc:	ldp	x29, x30, [sp], #32
    19c0:	ret
    19c4:	add	w2, w1, #0x1
    19c8:	add	x1, x0, w1, uxtw
    19cc:	str	w2, [x0, #24]
    19d0:	strb	wzr, [x1, #28]
    19d4:	ldr	w1, [x0, #24]
    19d8:	cmp	w1, #0x3f
    19dc:	b.ls	19c4 <_Py_strhex@plt+0xbb4>  // b.plast
    19e0:	add	x1, x0, #0x1c
    19e4:	bl	ef4 <_Py_strhex@plt+0xe4>
    19e8:	str	wzr, [x0, #24]
    19ec:	b	1964 <_Py_strhex@plt+0xb54>
    19f0:	add	w2, w1, #0x1
    19f4:	add	x1, x0, w1, uxtw
    19f8:	str	w2, [x0, #24]
    19fc:	strb	wzr, [x1, #28]
    1a00:	b	1964 <_Py_strhex@plt+0xb54>
    1a04:	stp	x29, x30, [sp, #-64]!
    1a08:	mov	x29, sp
    1a0c:	stp	x19, x20, [sp, #16]
    1a10:	mov	x19, x0
    1a14:	mov	x20, x2
    1a18:	stp	x21, x22, [sp, #32]
    1a1c:	mov	x21, x1
    1a20:	stp	x23, x24, [sp, #48]
    1a24:	add	x23, x0, #0x1c
    1a28:	mov	w24, #0x40                  	// #64
    1a2c:	cmp	x20, #0x0
    1a30:	b.gt	1a48 <_Py_strhex@plt+0xc38>
    1a34:	ldp	x19, x20, [sp, #16]
    1a38:	ldp	x21, x22, [sp, #32]
    1a3c:	ldp	x23, x24, [sp, #48]
    1a40:	ldp	x29, x30, [sp], #64
    1a44:	ret
    1a48:	ldr	w0, [x19, #24]
    1a4c:	cbnz	w0, 1a7c <_Py_strhex@plt+0xc6c>
    1a50:	cmp	x20, #0x3f
    1a54:	b.le	1a7c <_Py_strhex@plt+0xc6c>
    1a58:	mov	x1, x21
    1a5c:	mov	x0, x19
    1a60:	bl	ef4 <_Py_strhex@plt+0xe4>
    1a64:	add	x21, x21, #0x40
    1a68:	ldr	x0, [x19]
    1a6c:	sub	x20, x20, #0x40
    1a70:	add	x0, x0, #0x200
    1a74:	str	x0, [x19]
    1a78:	b	1a2c <_Py_strhex@plt+0xc1c>
    1a7c:	sub	w22, w24, w0
    1a80:	mov	x1, x21
    1a84:	cmp	x22, x20
    1a88:	add	x0, x23, w0, uxtw
    1a8c:	csel	x22, x22, x20, le
    1a90:	mov	x2, x22
    1a94:	add	x21, x21, x22
    1a98:	bl	d00 <memcpy@plt>
    1a9c:	sub	x20, x20, x22
    1aa0:	ldr	w0, [x19, #24]
    1aa4:	add	w0, w0, w22
    1aa8:	str	w0, [x19, #24]
    1aac:	cmp	w0, #0x40
    1ab0:	b.ne	1a2c <_Py_strhex@plt+0xc1c>  // b.any
    1ab4:	mov	x0, x19
    1ab8:	mov	x1, x23
    1abc:	bl	ef4 <_Py_strhex@plt+0xe4>
    1ac0:	str	wzr, [x19, #24]
    1ac4:	ldr	x0, [x19]
    1ac8:	add	x0, x0, #0x200
    1acc:	str	x0, [x19]
    1ad0:	b	1a2c <_Py_strhex@plt+0xc1c>
    1ad4:	stp	x29, x30, [sp, #-112]!
    1ad8:	mov	x29, sp
    1adc:	stp	x19, x20, [sp, #16]
    1ae0:	mov	x20, x0
    1ae4:	mov	x0, x1
    1ae8:	ldr	x1, [x1, #8]
    1aec:	ldr	x2, [x1, #168]
    1af0:	tbz	w2, #28, 1b14 <_Py_strhex@plt+0xd04>
    1af4:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1af8:	add	x1, x1, #0xef4
    1afc:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1b00:	ldr	x0, [x0, #4032]
    1b04:	ldr	x0, [x0]
    1b08:	bl	d60 <PyErr_SetString@plt>
    1b0c:	mov	x0, #0x0                   	// #0
    1b10:	b	1ba4 <_Py_strhex@plt+0xd94>
    1b14:	ldr	x1, [x1, #160]
    1b18:	cbz	x1, 1b24 <_Py_strhex@plt+0xd14>
    1b1c:	ldr	x1, [x1]
    1b20:	cbnz	x1, 1b30 <_Py_strhex@plt+0xd20>
    1b24:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1b28:	add	x1, x1, #0xf23
    1b2c:	b	1afc <_Py_strhex@plt+0xcec>
    1b30:	add	x19, sp, #0x20
    1b34:	mov	w2, #0x0                   	// #0
    1b38:	mov	x1, x19
    1b3c:	bl	dd0 <PyObject_GetBuffer@plt>
    1b40:	cmn	w0, #0x1
    1b44:	b.eq	1b0c <_Py_strhex@plt+0xcfc>  // b.none
    1b48:	ldr	w0, [sp, #68]
    1b4c:	cmp	w0, #0x1
    1b50:	b.le	1b78 <_Py_strhex@plt+0xd68>
    1b54:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1b58:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1b5c:	add	x1, x1, #0xf4d
    1b60:	ldr	x0, [x0, #4024]
    1b64:	ldr	x0, [x0]
    1b68:	bl	d60 <PyErr_SetString@plt>
    1b6c:	mov	x0, x19
    1b70:	bl	d10 <PyBuffer_Release@plt>
    1b74:	b	1b0c <_Py_strhex@plt+0xcfc>
    1b78:	ldr	x1, [sp, #32]
    1b7c:	add	x0, x20, #0x10
    1b80:	ldr	x2, [sp, #48]
    1b84:	bl	1a04 <_Py_strhex@plt+0xbf4>
    1b88:	mov	x0, x19
    1b8c:	bl	d10 <PyBuffer_Release@plt>
    1b90:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1b94:	ldr	x0, [x0, #4056]
    1b98:	ldr	x1, [x0]
    1b9c:	add	x1, x1, #0x1
    1ba0:	str	x1, [x0]
    1ba4:	ldp	x19, x20, [sp, #16]
    1ba8:	ldp	x29, x30, [sp], #112
    1bac:	ret
    1bb0:	mov	x0, #0x10                  	// #16
    1bb4:	b	d90 <PyLong_FromLong@plt>
    1bb8:	mov	x0, #0x40                  	// #64
    1bbc:	b	d90 <PyLong_FromLong@plt>
    1bc0:	mov	x1, #0x3                   	// #3
    1bc4:	adrp	x0, 1000 <_Py_strhex@plt+0x1f0>
    1bc8:	add	x0, x0, #0xfb8
    1bcc:	b	e00 <PyUnicode_FromStringAndSize@plt>
    1bd0:	stp	x29, x30, [sp, #-144]!
    1bd4:	mov	x2, #0x60                  	// #96
    1bd8:	add	x1, x0, #0x10
    1bdc:	add	x3, sp, #0x30
    1be0:	mov	x29, sp
    1be4:	mov	x0, x3
    1be8:	str	x19, [sp, #16]
    1bec:	add	x19, sp, #0x20
    1bf0:	bl	d00 <memcpy@plt>
    1bf4:	mov	x1, x19
    1bf8:	bl	1924 <_Py_strhex@plt+0xb14>
    1bfc:	mov	x0, x19
    1c00:	mov	x1, #0x10                  	// #16
    1c04:	bl	e10 <_Py_strhex@plt>
    1c08:	ldr	x19, [sp, #16]
    1c0c:	ldp	x29, x30, [sp], #144
    1c10:	ret
    1c14:	stp	x29, x30, [sp, #-144]!
    1c18:	mov	x2, #0x60                  	// #96
    1c1c:	add	x1, x0, #0x10
    1c20:	add	x3, sp, #0x30
    1c24:	mov	x29, sp
    1c28:	mov	x0, x3
    1c2c:	str	x19, [sp, #16]
    1c30:	add	x19, sp, #0x20
    1c34:	bl	d00 <memcpy@plt>
    1c38:	mov	x1, x19
    1c3c:	bl	1924 <_Py_strhex@plt+0xb14>
    1c40:	mov	x0, x19
    1c44:	mov	x1, #0x10                  	// #16
    1c48:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1c4c:	ldr	x19, [sp, #16]
    1c50:	ldp	x29, x30, [sp], #144
    1c54:	ret
    1c58:	b	d70 <PyObject_Free@plt>
    1c5c:	sub	sp, sp, #0xa0
    1c60:	stp	x29, x30, [sp, #16]
    1c64:	add	x29, sp, #0x10
    1c68:	stp	x19, x20, [sp, #32]
    1c6c:	mov	x19, x1
    1c70:	mov	x1, x2
    1c74:	str	x21, [sp, #48]
    1c78:	cbz	x3, 1d10 <_Py_strhex@plt+0xf00>
    1c7c:	ldr	x0, [x3, #16]
    1c80:	add	x20, x0, x1
    1c84:	cbnz	x3, 1c94 <_Py_strhex@plt+0xe84>
    1c88:	cmp	x19, #0x0
    1c8c:	ccmp	x1, #0x1, #0x2, ne  // ne = any
    1c90:	b.ls	1cc4 <_Py_strhex@plt+0xeb4>  // b.plast
    1c94:	add	x0, sp, #0x48
    1c98:	str	x0, [sp]
    1c9c:	mov	w7, #0x0                   	// #0
    1ca0:	mov	x0, x19
    1ca4:	mov	w6, #0x1                   	// #1
    1ca8:	mov	w5, #0x0                   	// #0
    1cac:	adrp	x4, 13000 <PyInit__md5@@Base+0x1119c>
    1cb0:	mov	x2, #0x0                   	// #0
    1cb4:	add	x4, x4, #0x98
    1cb8:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1cbc:	mov	x19, x0
    1cc0:	cbz	x0, 1cf8 <_Py_strhex@plt+0xee8>
    1cc4:	cbz	x20, 1d80 <_Py_strhex@plt+0xf70>
    1cc8:	ldr	x20, [x19]
    1ccc:	cbz	x20, 1d84 <_Py_strhex@plt+0xf74>
    1cd0:	ldr	x0, [x20, #8]
    1cd4:	ldr	x1, [x0, #168]
    1cd8:	tbz	w1, #28, 1d18 <_Py_strhex@plt+0xf08>
    1cdc:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1ce0:	add	x1, x1, #0xef4
    1ce4:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1ce8:	ldr	x0, [x0, #4032]
    1cec:	ldr	x0, [x0]
    1cf0:	bl	d60 <PyErr_SetString@plt>
    1cf4:	mov	x19, #0x0                   	// #0
    1cf8:	mov	x0, x19
    1cfc:	ldp	x29, x30, [sp, #16]
    1d00:	ldp	x19, x20, [sp, #32]
    1d04:	ldr	x21, [sp, #48]
    1d08:	add	sp, sp, #0xa0
    1d0c:	ret
    1d10:	mov	x0, #0x0                   	// #0
    1d14:	b	1c80 <_Py_strhex@plt+0xe70>
    1d18:	ldr	x0, [x0, #160]
    1d1c:	cbz	x0, 1d28 <_Py_strhex@plt+0xf18>
    1d20:	ldr	x0, [x0]
    1d24:	cbnz	x0, 1d34 <_Py_strhex@plt+0xf24>
    1d28:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1d2c:	add	x1, x1, #0xf23
    1d30:	b	1ce4 <_Py_strhex@plt+0xed4>
    1d34:	add	x19, sp, #0x50
    1d38:	mov	x0, x20
    1d3c:	mov	x1, x19
    1d40:	mov	w2, #0x0                   	// #0
    1d44:	bl	dd0 <PyObject_GetBuffer@plt>
    1d48:	cmn	w0, #0x1
    1d4c:	b.eq	1cf4 <_Py_strhex@plt+0xee4>  // b.none
    1d50:	ldr	w0, [sp, #116]
    1d54:	cmp	w0, #0x1
    1d58:	b.le	1d84 <_Py_strhex@plt+0xf74>
    1d5c:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1d60:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1d64:	add	x1, x1, #0xf4d
    1d68:	ldr	x0, [x0, #4024]
    1d6c:	ldr	x0, [x0]
    1d70:	bl	d60 <PyErr_SetString@plt>
    1d74:	mov	x0, x19
    1d78:	bl	d10 <PyBuffer_Release@plt>
    1d7c:	b	1cf4 <_Py_strhex@plt+0xee4>
    1d80:	mov	x20, #0x0                   	// #0
    1d84:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
    1d88:	add	x0, x0, #0x98
    1d8c:	add	x0, x0, #0x40
    1d90:	bl	de0 <_PyObject_New@plt>
    1d94:	mov	x19, x0
    1d98:	cbnz	x0, 1da8 <_Py_strhex@plt+0xf98>
    1d9c:	cbz	x20, 1cf4 <_Py_strhex@plt+0xee4>
    1da0:	add	x0, sp, #0x50
    1da4:	b	1d78 <_Py_strhex@plt+0xf68>
    1da8:	add	x21, x0, #0x10
    1dac:	mov	x0, #0x2301                	// #8961
    1db0:	movk	x0, #0x6745, lsl #16
    1db4:	movk	x0, #0xab89, lsl #32
    1db8:	movk	x0, #0xefcd, lsl #48
    1dbc:	stp	xzr, x0, [x19, #16]
    1dc0:	mov	x0, #0xdcfe                	// #56574
    1dc4:	movk	x0, #0x98ba, lsl #16
    1dc8:	movk	x0, #0x5476, lsl #32
    1dcc:	movk	x0, #0x1032, lsl #48
    1dd0:	str	x0, [x19, #32]
    1dd4:	str	wzr, [x21, #24]
    1dd8:	bl	db0 <PyErr_Occurred@plt>
    1ddc:	cbz	x0, 1dfc <_Py_strhex@plt+0xfec>
    1de0:	ldr	x0, [x19]
    1de4:	sub	x0, x0, #0x1
    1de8:	str	x0, [x19]
    1dec:	cbnz	x0, 1d9c <_Py_strhex@plt+0xf8c>
    1df0:	mov	x0, x19
    1df4:	bl	d40 <_Py_Dealloc@plt>
    1df8:	b	1d9c <_Py_strhex@plt+0xf8c>
    1dfc:	cbz	x20, 1cf8 <_Py_strhex@plt+0xee8>
    1e00:	ldr	x1, [sp, #80]
    1e04:	mov	x0, x21
    1e08:	ldr	x2, [sp, #96]
    1e0c:	bl	1a04 <_Py_strhex@plt+0xbf4>
    1e10:	add	x0, sp, #0x50
    1e14:	bl	d10 <PyBuffer_Release@plt>
    1e18:	b	1cf8 <_Py_strhex@plt+0xee8>
    1e1c:	stp	x29, x30, [sp, #-32]!
    1e20:	mov	x29, sp
    1e24:	stp	x19, x20, [sp, #16]
    1e28:	mov	x20, x0
    1e2c:	adrp	x0, 13000 <PyInit__md5@@Base+0x1119c>
    1e30:	add	x0, x0, #0x98
    1e34:	add	x0, x0, #0x40
    1e38:	bl	de0 <_PyObject_New@plt>
    1e3c:	mov	x19, x0
    1e40:	cbz	x0, 1e54 <_Py_strhex@plt+0x1044>
    1e44:	add	x1, x20, #0x10
    1e48:	add	x0, x0, #0x10
    1e4c:	mov	x2, #0x60                  	// #96
    1e50:	bl	d00 <memcpy@plt>
    1e54:	mov	x0, x19
    1e58:	ldp	x19, x20, [sp, #16]
    1e5c:	ldp	x29, x30, [sp], #32
    1e60:	ret

0000000000001e64 <PyInit__md5@@Base>:
    1e64:	stp	x29, x30, [sp, #-48]!
    1e68:	adrp	x0, 12000 <PyInit__md5@@Base+0x1019c>
    1e6c:	mov	x29, sp
    1e70:	stp	x19, x20, [sp, #16]
    1e74:	adrp	x19, 13000 <PyInit__md5@@Base+0x1119c>
    1e78:	add	x19, x19, #0x98
    1e7c:	ldr	x0, [x0, #4048]
    1e80:	str	x21, [sp, #32]
    1e84:	add	x21, x19, #0x40
    1e88:	str	x0, [x19, #72]
    1e8c:	mov	x0, x21
    1e90:	bl	d80 <PyType_Ready@plt>
    1e94:	tbnz	w0, #31, 1edc <PyInit__md5@@Base+0x78>
    1e98:	add	x0, x19, #0x1e0
    1e9c:	mov	w1, #0x3f5                 	// #1013
    1ea0:	bl	dc0 <PyModule_Create2@plt>
    1ea4:	mov	x20, x0
    1ea8:	cbz	x0, 1ec8 <PyInit__md5@@Base+0x64>
    1eac:	ldr	x1, [x19, #64]
    1eb0:	mov	x2, x21
    1eb4:	add	x1, x1, #0x1
    1eb8:	str	x1, [x19, #64]
    1ebc:	adrp	x1, 1000 <_Py_strhex@plt+0x1f0>
    1ec0:	add	x1, x1, #0xf6d
    1ec4:	bl	df0 <PyModule_AddObject@plt>
    1ec8:	mov	x0, x20
    1ecc:	ldp	x19, x20, [sp, #16]
    1ed0:	ldr	x21, [sp, #32]
    1ed4:	ldp	x29, x30, [sp], #48
    1ed8:	ret
    1edc:	mov	x20, #0x0                   	// #0
    1ee0:	b	1ec8 <PyInit__md5@@Base+0x64>

Disassembly of section .fini:

0000000000001ee4 <.fini>:
    1ee4:	stp	x29, x30, [sp, #-16]!
    1ee8:	mov	x29, sp
    1eec:	ldp	x29, x30, [sp], #16
    1ef0:	ret
