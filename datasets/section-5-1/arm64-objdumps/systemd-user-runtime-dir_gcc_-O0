
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-user-runtime-dir_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004010f8 <_init>:
  4010f8:	stp	x29, x30, [sp, #-16]!
  4010fc:	mov	x29, sp
  401100:	bl	4013f0 <call_weak_fn>
  401104:	ldp	x29, x30, [sp], #16
  401108:	ret

Disassembly of section .plt:

0000000000401110 <.plt>:
  401110:	stp	x16, x30, [sp, #-16]!
  401114:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401118:	ldr	x17, [x16, #3760]
  40111c:	add	x16, x16, #0xeb0
  401120:	br	x17
  401124:	nop
  401128:	nop
  40112c:	nop

0000000000401130 <bus_error_message@plt>:
  401130:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401134:	ldr	x17, [x16, #3768]
  401138:	add	x16, x16, #0xeb8
  40113c:	br	x17

0000000000401140 <mac_selinux_init@plt>:
  401140:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401144:	ldr	x17, [x16, #3776]
  401148:	add	x16, x16, #0xec0
  40114c:	br	x17

0000000000401150 <__libc_start_main@plt>:
  401150:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401154:	ldr	x17, [x16, #3784]
  401158:	add	x16, x16, #0xec8
  40115c:	br	x17

0000000000401160 <sd_bus_get_property_trivial@plt>:
  401160:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401164:	ldr	x17, [x16, #3792]
  401168:	add	x16, x16, #0xed0
  40116c:	br	x17

0000000000401170 <__gmon_start__@plt>:
  401170:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401174:	ldr	x17, [x16, #3800]
  401178:	add	x16, x16, #0xed8
  40117c:	br	x17

0000000000401180 <polkit_agent_close@plt>:
  401180:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401184:	ldr	x17, [x16, #3808]
  401188:	add	x16, x16, #0xee0
  40118c:	br	x17

0000000000401190 <log_parse_environment_realm@plt>:
  401190:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401194:	ldr	x17, [x16, #3816]
  401198:	add	x16, x16, #0xee8
  40119c:	br	x17

00000000004011a0 <snprintf@plt>:
  4011a0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011a4:	ldr	x17, [x16, #3824]
  4011a8:	add	x16, x16, #0xef0
  4011ac:	br	x17

00000000004011b0 <chmod_and_chown@plt>:
  4011b0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011b4:	ldr	x17, [x16, #3832]
  4011b8:	add	x16, x16, #0xef8
  4011bc:	br	x17

00000000004011c0 <log_assert_failed_realm@plt>:
  4011c0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011c4:	ldr	x17, [x16, #3840]
  4011c8:	add	x16, x16, #0xf00
  4011cc:	br	x17

00000000004011d0 <log_assert_failed_unreachable_realm@plt>:
  4011d0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011d4:	ldr	x17, [x16, #3848]
  4011d8:	add	x16, x16, #0xf08
  4011dc:	br	x17

00000000004011e0 <umask@plt>:
  4011e0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011e4:	ldr	x17, [x16, #3856]
  4011e8:	add	x16, x16, #0xf10
  4011ec:	br	x17

00000000004011f0 <path_is_absolute@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4011f4:	ldr	x17, [x16, #3864]
  4011f8:	add	x16, x16, #0xf18
  4011fc:	br	x17

0000000000401200 <abort@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401204:	ldr	x17, [x16, #3872]
  401208:	add	x16, x16, #0xf20
  40120c:	br	x17

0000000000401210 <uid_is_valid@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401214:	ldr	x17, [x16, #3880]
  401218:	add	x16, x16, #0xf28
  40121c:	br	x17

0000000000401220 <rmdir@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401224:	ldr	x17, [x16, #3888]
  401228:	add	x16, x16, #0xf30
  40122c:	br	x17

0000000000401230 <__errno_location@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401234:	ldr	x17, [x16, #3896]
  401238:	add	x16, x16, #0xf38
  40123c:	br	x17

0000000000401240 <mkdir_safe_label@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401244:	ldr	x17, [x16, #3904]
  401248:	add	x16, x16, #0xf40
  40124c:	br	x17

0000000000401250 <__stack_chk_fail@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401254:	ldr	x17, [x16, #3912]
  401258:	add	x16, x16, #0xf48
  40125c:	br	x17

0000000000401260 <ask_password_agent_close@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401264:	ldr	x17, [x16, #3920]
  401268:	add	x16, x16, #0xf50
  40126c:	br	x17

0000000000401270 <pager_close@plt>:
  401270:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401274:	ldr	x17, [x16, #3928]
  401278:	add	x16, x16, #0xf58
  40127c:	br	x17

0000000000401280 <mac_smack_use@plt>:
  401280:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401284:	ldr	x17, [x16, #3936]
  401288:	add	x16, x16, #0xf60
  40128c:	br	x17

0000000000401290 <sd_bus_error_free@plt>:
  401290:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401294:	ldr	x17, [x16, #3944]
  401298:	add	x16, x16, #0xf68
  40129c:	br	x17

00000000004012a0 <strv_find@plt>:
  4012a0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012a4:	ldr	x17, [x16, #3952]
  4012a8:	add	x16, x16, #0xf70
  4012ac:	br	x17

00000000004012b0 <mkdir_label@plt>:
  4012b0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012b4:	ldr	x17, [x16, #3960]
  4012b8:	add	x16, x16, #0xf78
  4012bc:	br	x17

00000000004012c0 <log_internal_realm@plt>:
  4012c0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012c4:	ldr	x17, [x16, #3968]
  4012c8:	add	x16, x16, #0xf80
  4012cc:	br	x17

00000000004012d0 <sd_bus_default_system@plt>:
  4012d0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012d4:	ldr	x17, [x16, #3976]
  4012d8:	add	x16, x16, #0xf88
  4012dc:	br	x17

00000000004012e0 <sd_bus_flush_close_unref@plt>:
  4012e0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012e4:	ldr	x17, [x16, #3984]
  4012e8:	add	x16, x16, #0xf90
  4012ec:	br	x17

00000000004012f0 <get_user_creds@plt>:
  4012f0:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  4012f4:	ldr	x17, [x16, #3992]
  4012f8:	add	x16, x16, #0xf98
  4012fc:	br	x17

0000000000401300 <umount2@plt>:
  401300:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401304:	ldr	x17, [x16, #4000]
  401308:	add	x16, x16, #0xfa0
  40130c:	br	x17

0000000000401310 <parse_uid@plt>:
  401310:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401314:	ldr	x17, [x16, #4008]
  401318:	add	x16, x16, #0xfa8
  40131c:	br	x17

0000000000401320 <strcmp@plt>:
  401320:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401324:	ldr	x17, [x16, #4016]
  401328:	add	x16, x16, #0xfb0
  40132c:	br	x17

0000000000401330 <path_is_mount_point@plt>:
  401330:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401334:	ldr	x17, [x16, #4024]
  401338:	add	x16, x16, #0xfb8
  40133c:	br	x17

0000000000401340 <rm_rf@plt>:
  401340:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401344:	ldr	x17, [x16, #4032]
  401348:	add	x16, x16, #0xfc0
  40134c:	br	x17

0000000000401350 <mount@plt>:
  401350:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401354:	ldr	x17, [x16, #4040]
  401358:	add	x16, x16, #0xfc8
  40135c:	br	x17

0000000000401360 <mac_selinux_finish@plt>:
  401360:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401364:	ldr	x17, [x16, #4048]
  401368:	add	x16, x16, #0xfd0
  40136c:	br	x17

0000000000401370 <log_open@plt>:
  401370:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401374:	ldr	x17, [x16, #4056]
  401378:	add	x16, x16, #0xfd8
  40137c:	br	x17

0000000000401380 <log_get_max_level_realm@plt>:
  401380:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401384:	ldr	x17, [x16, #4064]
  401388:	add	x16, x16, #0xfe0
  40138c:	br	x17

0000000000401390 <label_fix@plt>:
  401390:	adrp	x16, 413000 <__FRAME_END__+0xfc88>
  401394:	ldr	x17, [x16, #4072]
  401398:	add	x16, x16, #0xfe8
  40139c:	br	x17

Disassembly of section .text:

00000000004013a0 <_start>:
  4013a0:	mov	x29, #0x0                   	// #0
  4013a4:	mov	x30, #0x0                   	// #0
  4013a8:	mov	x5, x0
  4013ac:	ldr	x1, [sp]
  4013b0:	add	x2, sp, #0x8
  4013b4:	mov	x6, sp
  4013b8:	movz	x0, #0x0, lsl #48
  4013bc:	movk	x0, #0x0, lsl #32
  4013c0:	movk	x0, #0x40, lsl #16
  4013c4:	movk	x0, #0x2944
  4013c8:	movz	x3, #0x0, lsl #48
  4013cc:	movk	x3, #0x0, lsl #32
  4013d0:	movk	x3, #0x40, lsl #16
  4013d4:	movk	x3, #0x2998
  4013d8:	movz	x4, #0x0, lsl #48
  4013dc:	movk	x4, #0x0, lsl #32
  4013e0:	movk	x4, #0x40, lsl #16
  4013e4:	movk	x4, #0x2a18
  4013e8:	bl	401150 <__libc_start_main@plt>
  4013ec:	bl	401200 <abort@plt>

00000000004013f0 <call_weak_fn>:
  4013f0:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  4013f4:	ldr	x0, [x0, #4088]
  4013f8:	cbz	x0, 401400 <call_weak_fn+0x10>
  4013fc:	b	401170 <__gmon_start__@plt>
  401400:	ret

0000000000401404 <deregister_tm_clones>:
  401404:	stp	x29, x30, [sp, #-32]!
  401408:	mov	x29, sp
  40140c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401410:	add	x0, x0, #0x0
  401414:	str	x0, [sp, #24]
  401418:	ldr	x0, [sp, #24]
  40141c:	str	x0, [sp, #24]
  401420:	ldr	x1, [sp, #24]
  401424:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401428:	add	x0, x0, #0x0
  40142c:	cmp	x1, x0
  401430:	b.eq	40146c <deregister_tm_clones+0x68>  // b.none
  401434:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401438:	add	x0, x0, #0xa30
  40143c:	ldr	x0, [x0]
  401440:	str	x0, [sp, #16]
  401444:	ldr	x0, [sp, #16]
  401448:	str	x0, [sp, #16]
  40144c:	ldr	x0, [sp, #16]
  401450:	cmp	x0, #0x0
  401454:	b.eq	401470 <deregister_tm_clones+0x6c>  // b.none
  401458:	ldr	x1, [sp, #16]
  40145c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401460:	add	x0, x0, #0x0
  401464:	blr	x1
  401468:	b	401470 <deregister_tm_clones+0x6c>
  40146c:	nop
  401470:	ldp	x29, x30, [sp], #32
  401474:	ret

0000000000401478 <register_tm_clones>:
  401478:	stp	x29, x30, [sp, #-48]!
  40147c:	mov	x29, sp
  401480:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401484:	add	x0, x0, #0x0
  401488:	str	x0, [sp, #40]
  40148c:	ldr	x0, [sp, #40]
  401490:	str	x0, [sp, #40]
  401494:	ldr	x1, [sp, #40]
  401498:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40149c:	add	x0, x0, #0x0
  4014a0:	sub	x0, x1, x0
  4014a4:	asr	x0, x0, #3
  4014a8:	lsr	x1, x0, #63
  4014ac:	add	x0, x1, x0
  4014b0:	asr	x0, x0, #1
  4014b4:	str	x0, [sp, #32]
  4014b8:	ldr	x0, [sp, #32]
  4014bc:	cmp	x0, #0x0
  4014c0:	b.eq	401500 <register_tm_clones+0x88>  // b.none
  4014c4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4014c8:	add	x0, x0, #0xa38
  4014cc:	ldr	x0, [x0]
  4014d0:	str	x0, [sp, #24]
  4014d4:	ldr	x0, [sp, #24]
  4014d8:	str	x0, [sp, #24]
  4014dc:	ldr	x0, [sp, #24]
  4014e0:	cmp	x0, #0x0
  4014e4:	b.eq	401504 <register_tm_clones+0x8c>  // b.none
  4014e8:	ldr	x2, [sp, #24]
  4014ec:	ldr	x1, [sp, #32]
  4014f0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014f4:	add	x0, x0, #0x0
  4014f8:	blr	x2
  4014fc:	b	401504 <register_tm_clones+0x8c>
  401500:	nop
  401504:	ldp	x29, x30, [sp], #48
  401508:	ret

000000000040150c <__do_global_dtors_aux>:
  40150c:	stp	x29, x30, [sp, #-16]!
  401510:	mov	x29, sp
  401514:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401518:	add	x0, x0, #0xc
  40151c:	ldrb	w0, [x0]
  401520:	and	x0, x0, #0xff
  401524:	cmp	x0, #0x0
  401528:	b.ne	401544 <__do_global_dtors_aux+0x38>  // b.any
  40152c:	bl	401404 <deregister_tm_clones>
  401530:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401534:	add	x0, x0, #0xc
  401538:	mov	w1, #0x1                   	// #1
  40153c:	strb	w1, [x0]
  401540:	b	401548 <__do_global_dtors_aux+0x3c>
  401544:	nop
  401548:	ldp	x29, x30, [sp], #16
  40154c:	ret

0000000000401550 <frame_dummy>:
  401550:	stp	x29, x30, [sp, #-16]!
  401554:	mov	x29, sp
  401558:	bl	401478 <register_tm_clones>
  40155c:	nop
  401560:	ldp	x29, x30, [sp], #16
  401564:	ret

0000000000401568 <sd_bus_flush_close_unrefp>:
  401568:	stp	x29, x30, [sp, #-32]!
  40156c:	mov	x29, sp
  401570:	str	x0, [sp, #24]
  401574:	ldr	x0, [sp, #24]
  401578:	ldr	x0, [x0]
  40157c:	cmp	x0, #0x0
  401580:	b.eq	401590 <sd_bus_flush_close_unrefp+0x28>  // b.none
  401584:	ldr	x0, [sp, #24]
  401588:	ldr	x0, [x0]
  40158c:	bl	4012e0 <sd_bus_flush_close_unref@plt>
  401590:	nop
  401594:	ldp	x29, x30, [sp], #32
  401598:	ret

000000000040159c <ALIGN_TO>:
  40159c:	sub	sp, sp, #0x10
  4015a0:	str	x0, [sp, #8]
  4015a4:	str	x1, [sp]
  4015a8:	ldr	x1, [sp, #8]
  4015ac:	ldr	x0, [sp]
  4015b0:	add	x0, x1, x0
  4015b4:	sub	x1, x0, #0x1
  4015b8:	ldr	x0, [sp]
  4015bc:	neg	x0, x0
  4015c0:	and	x0, x1, x0
  4015c4:	add	sp, sp, #0x10
  4015c8:	ret

00000000004015cc <save_argc_argv>:
  4015cc:	sub	sp, sp, #0x10
  4015d0:	str	w0, [sp, #12]
  4015d4:	str	x1, [sp]
  4015d8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4015dc:	add	x0, x0, #0x8
  4015e0:	ldr	w1, [sp, #12]
  4015e4:	str	w1, [x0]
  4015e8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4015ec:	add	x0, x0, #0x0
  4015f0:	ldr	x1, [sp]
  4015f4:	str	x1, [x0]
  4015f8:	nop
  4015fc:	add	sp, sp, #0x10
  401600:	ret

0000000000401604 <static_destruct>:
  401604:	stp	x29, x30, [sp, #-32]!
  401608:	mov	x29, sp
  40160c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401610:	add	x0, x0, #0xf98
  401614:	ldr	x0, [x0]
  401618:	cmp	x0, #0x0
  40161c:	b.eq	401680 <static_destruct+0x7c>  // b.none
  401620:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401624:	add	x0, x0, #0xf98
  401628:	ldr	x0, [x0]
  40162c:	mov	x1, #0x8                   	// #8
  401630:	bl	40159c <ALIGN_TO>
  401634:	str	x0, [sp, #24]
  401638:	b	401664 <static_destruct+0x60>
  40163c:	ldr	x0, [sp, #24]
  401640:	ldr	x1, [x0, #8]
  401644:	ldr	x0, [sp, #24]
  401648:	ldr	x0, [x0]
  40164c:	blr	x1
  401650:	ldr	x0, [sp, #24]
  401654:	add	x0, x0, #0x10
  401658:	mov	x1, #0x8                   	// #8
  40165c:	bl	40159c <ALIGN_TO>
  401660:	str	x0, [sp, #24]
  401664:	ldr	x1, [sp, #24]
  401668:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40166c:	add	x0, x0, #0xfa0
  401670:	ldr	x0, [x0]
  401674:	cmp	x1, x0
  401678:	b.cc	40163c <static_destruct+0x38>  // b.lo, b.ul, b.last
  40167c:	b	401684 <static_destruct+0x80>
  401680:	nop
  401684:	ldp	x29, x30, [sp], #32
  401688:	ret

000000000040168c <gid_is_valid>:
  40168c:	stp	x29, x30, [sp, #-32]!
  401690:	mov	x29, sp
  401694:	str	w0, [sp, #28]
  401698:	ldr	w0, [sp, #28]
  40169c:	bl	401210 <uid_is_valid@plt>
  4016a0:	and	w0, w0, #0xff
  4016a4:	ldp	x29, x30, [sp], #32
  4016a8:	ret

00000000004016ac <acquire_runtime_dir_size>:
  4016ac:	stp	x29, x30, [sp, #-128]!
  4016b0:	mov	x29, sp
  4016b4:	stp	x19, x20, [sp, #16]
  4016b8:	str	x0, [sp, #40]
  4016bc:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  4016c0:	add	x0, x0, #0xc68
  4016c4:	ldr	x1, [x0]
  4016c8:	str	x1, [sp, #120]
  4016cc:	mov	x1, #0x0                   	// #0
  4016d0:	str	xzr, [sp, #96]
  4016d4:	str	xzr, [sp, #104]
  4016d8:	str	wzr, [sp, #112]
  4016dc:	str	xzr, [sp, #88]
  4016e0:	add	x0, sp, #0x58
  4016e4:	bl	4012d0 <sd_bus_default_system@plt>
  4016e8:	str	w0, [sp, #60]
  4016ec:	ldr	w0, [sp, #60]
  4016f0:	cmp	w0, #0x0
  4016f4:	b.ge	401784 <acquire_runtime_dir_size+0xd8>  // b.tcont
  4016f8:	mov	w0, #0x3                   	// #3
  4016fc:	str	w0, [sp, #76]
  401700:	ldr	w0, [sp, #60]
  401704:	str	w0, [sp, #80]
  401708:	str	wzr, [sp, #84]
  40170c:	ldr	w0, [sp, #84]
  401710:	bl	401380 <log_get_max_level_realm@plt>
  401714:	mov	w1, w0
  401718:	ldr	w0, [sp, #76]
  40171c:	and	w0, w0, #0x7
  401720:	cmp	w1, w0
  401724:	b.lt	40176c <acquire_runtime_dir_size+0xc0>  // b.tstop
  401728:	ldr	w0, [sp, #84]
  40172c:	lsl	w1, w0, #10
  401730:	ldr	w0, [sp, #76]
  401734:	orr	w6, w1, w0
  401738:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40173c:	add	x1, x0, #0xa53
  401740:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401744:	add	x5, x0, #0xa70
  401748:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40174c:	add	x4, x0, #0xfa8
  401750:	mov	w3, #0x1f                  	// #31
  401754:	mov	x2, x1
  401758:	ldr	w1, [sp, #80]
  40175c:	mov	w0, w6
  401760:	bl	4012c0 <log_internal_realm@plt>
  401764:	mov	w19, w0
  401768:	b	401870 <acquire_runtime_dir_size+0x1c4>
  40176c:	ldr	w0, [sp, #80]
  401770:	cmp	w0, #0x0
  401774:	cneg	w0, w0, lt  // lt = tstop
  401778:	and	w0, w0, #0xff
  40177c:	neg	w19, w0
  401780:	b	401870 <acquire_runtime_dir_size+0x1c4>
  401784:	ldr	x8, [sp, #88]
  401788:	add	x0, sp, #0x60
  40178c:	ldr	x7, [sp, #40]
  401790:	mov	w6, #0x74                  	// #116
  401794:	mov	x5, x0
  401798:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40179c:	add	x4, x0, #0xa98
  4017a0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4017a4:	add	x3, x0, #0xab0
  4017a8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4017ac:	add	x2, x0, #0xad0
  4017b0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4017b4:	add	x1, x0, #0xae8
  4017b8:	mov	x0, x8
  4017bc:	bl	401160 <sd_bus_get_property_trivial@plt>
  4017c0:	str	w0, [sp, #60]
  4017c4:	ldr	w0, [sp, #60]
  4017c8:	cmp	w0, #0x0
  4017cc:	b.ge	40186c <acquire_runtime_dir_size+0x1c0>  // b.tcont
  4017d0:	mov	w0, #0x3                   	// #3
  4017d4:	str	w0, [sp, #64]
  4017d8:	ldr	w0, [sp, #60]
  4017dc:	str	w0, [sp, #68]
  4017e0:	str	wzr, [sp, #72]
  4017e4:	ldr	w0, [sp, #72]
  4017e8:	bl	401380 <log_get_max_level_realm@plt>
  4017ec:	mov	w1, w0
  4017f0:	ldr	w0, [sp, #64]
  4017f4:	and	w0, w0, #0x7
  4017f8:	cmp	w1, w0
  4017fc:	b.lt	401854 <acquire_runtime_dir_size+0x1a8>  // b.tstop
  401800:	ldr	w0, [sp, #72]
  401804:	lsl	w1, w0, #10
  401808:	ldr	w0, [sp, #64]
  40180c:	orr	w19, w1, w0
  401810:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401814:	add	x20, x0, #0xa53
  401818:	add	x0, sp, #0x60
  40181c:	ldr	w1, [sp, #60]
  401820:	bl	401130 <bus_error_message@plt>
  401824:	mov	x6, x0
  401828:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40182c:	add	x5, x0, #0xb00
  401830:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401834:	add	x4, x0, #0xfa8
  401838:	mov	w3, #0x23                  	// #35
  40183c:	mov	x2, x20
  401840:	ldr	w1, [sp, #68]
  401844:	mov	w0, w19
  401848:	bl	4012c0 <log_internal_realm@plt>
  40184c:	mov	w19, w0
  401850:	b	401870 <acquire_runtime_dir_size+0x1c4>
  401854:	ldr	w0, [sp, #68]
  401858:	cmp	w0, #0x0
  40185c:	cneg	w0, w0, lt  // lt = tstop
  401860:	and	w0, w0, #0xff
  401864:	neg	w19, w0
  401868:	b	401870 <acquire_runtime_dir_size+0x1c4>
  40186c:	mov	w19, #0x0                   	// #0
  401870:	add	x0, sp, #0x58
  401874:	bl	401568 <sd_bus_flush_close_unrefp>
  401878:	add	x0, sp, #0x60
  40187c:	bl	401290 <sd_bus_error_free@plt>
  401880:	mov	w1, w19
  401884:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  401888:	add	x0, x0, #0xc68
  40188c:	ldr	x2, [sp, #120]
  401890:	ldr	x0, [x0]
  401894:	eor	x0, x2, x0
  401898:	cmp	x0, #0x0
  40189c:	b.eq	4018a4 <acquire_runtime_dir_size+0x1f8>  // b.none
  4018a0:	bl	401250 <__stack_chk_fail@plt>
  4018a4:	mov	w0, w1
  4018a8:	ldp	x19, x20, [sp, #16]
  4018ac:	ldp	x29, x30, [sp], #128
  4018b0:	ret

00000000004018b4 <user_mkdir_runtime_path>:
  4018b4:	stp	x29, x30, [sp, #-224]!
  4018b8:	mov	x29, sp
  4018bc:	str	x0, [sp, #40]
  4018c0:	str	w1, [sp, #36]
  4018c4:	str	w2, [sp, #32]
  4018c8:	str	x3, [sp, #24]
  4018cc:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  4018d0:	add	x0, x0, #0xc68
  4018d4:	ldr	x1, [x0]
  4018d8:	str	x1, [sp, #216]
  4018dc:	mov	x1, #0x0                   	// #0
  4018e0:	ldr	x0, [sp, #40]
  4018e4:	cmp	x0, #0x0
  4018e8:	cset	w0, eq  // eq = none
  4018ec:	and	w0, w0, #0xff
  4018f0:	and	x0, x0, #0xff
  4018f4:	cmp	x0, #0x0
  4018f8:	b.eq	401924 <user_mkdir_runtime_path+0x70>  // b.none
  4018fc:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401900:	add	x1, x0, #0xa53
  401904:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401908:	add	x4, x0, #0xfc8
  40190c:	mov	w3, #0x30                  	// #48
  401910:	mov	x2, x1
  401914:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401918:	add	x1, x0, #0xb30
  40191c:	mov	w0, #0x0                   	// #0
  401920:	bl	4011c0 <log_assert_failed_realm@plt>
  401924:	ldr	x0, [sp, #40]
  401928:	bl	4011f0 <path_is_absolute@plt>
  40192c:	and	w0, w0, #0xff
  401930:	eor	w0, w0, #0x1
  401934:	and	w0, w0, #0xff
  401938:	and	x0, x0, #0xff
  40193c:	cmp	x0, #0x0
  401940:	b.eq	40196c <user_mkdir_runtime_path+0xb8>  // b.none
  401944:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401948:	add	x1, x0, #0xa53
  40194c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401950:	add	x4, x0, #0xfc8
  401954:	mov	w3, #0x31                  	// #49
  401958:	mov	x2, x1
  40195c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401960:	add	x1, x0, #0xb40
  401964:	mov	w0, #0x0                   	// #0
  401968:	bl	4011c0 <log_assert_failed_realm@plt>
  40196c:	ldr	w0, [sp, #36]
  401970:	bl	401210 <uid_is_valid@plt>
  401974:	and	w0, w0, #0xff
  401978:	eor	w0, w0, #0x1
  40197c:	and	w0, w0, #0xff
  401980:	and	x0, x0, #0xff
  401984:	cmp	x0, #0x0
  401988:	b.eq	4019b4 <user_mkdir_runtime_path+0x100>  // b.none
  40198c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401990:	add	x1, x0, #0xa53
  401994:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401998:	add	x4, x0, #0xfc8
  40199c:	mov	w3, #0x32                  	// #50
  4019a0:	mov	x2, x1
  4019a4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4019a8:	add	x1, x0, #0xb60
  4019ac:	mov	w0, #0x0                   	// #0
  4019b0:	bl	4011c0 <log_assert_failed_realm@plt>
  4019b4:	ldr	w0, [sp, #32]
  4019b8:	bl	40168c <gid_is_valid>
  4019bc:	and	w0, w0, #0xff
  4019c0:	eor	w0, w0, #0x1
  4019c4:	and	w0, w0, #0xff
  4019c8:	and	x0, x0, #0xff
  4019cc:	cmp	x0, #0x0
  4019d0:	b.eq	4019fc <user_mkdir_runtime_path+0x148>  // b.none
  4019d4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4019d8:	add	x1, x0, #0xa53
  4019dc:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4019e0:	add	x4, x0, #0xfc8
  4019e4:	mov	w3, #0x33                  	// #51
  4019e8:	mov	x2, x1
  4019ec:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4019f0:	add	x1, x0, #0xb78
  4019f4:	mov	w0, #0x0                   	// #0
  4019f8:	bl	4011c0 <log_assert_failed_realm@plt>
  4019fc:	mov	w4, #0x2                   	// #2
  401a00:	mov	w3, #0x0                   	// #0
  401a04:	mov	w2, #0x0                   	// #0
  401a08:	mov	w1, #0x1ed                 	// #493
  401a0c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401a10:	add	x0, x0, #0xb90
  401a14:	bl	401240 <mkdir_safe_label@plt>
  401a18:	str	w0, [sp, #52]
  401a1c:	ldr	w0, [sp, #52]
  401a20:	cmp	w0, #0x0
  401a24:	b.ge	401ab0 <user_mkdir_runtime_path+0x1fc>  // b.tcont
  401a28:	mov	w0, #0x3                   	// #3
  401a2c:	str	w0, [sp, #116]
  401a30:	ldr	w0, [sp, #52]
  401a34:	str	w0, [sp, #120]
  401a38:	str	wzr, [sp, #124]
  401a3c:	ldr	w0, [sp, #124]
  401a40:	bl	401380 <log_get_max_level_realm@plt>
  401a44:	mov	w1, w0
  401a48:	ldr	w0, [sp, #116]
  401a4c:	and	w0, w0, #0x7
  401a50:	cmp	w1, w0
  401a54:	b.lt	401a98 <user_mkdir_runtime_path+0x1e4>  // b.tstop
  401a58:	ldr	w0, [sp, #124]
  401a5c:	lsl	w1, w0, #10
  401a60:	ldr	w0, [sp, #116]
  401a64:	orr	w6, w1, w0
  401a68:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401a6c:	add	x1, x0, #0xa53
  401a70:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401a74:	add	x5, x0, #0xba0
  401a78:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401a7c:	add	x4, x0, #0xfe0
  401a80:	mov	w3, #0x37                  	// #55
  401a84:	mov	x2, x1
  401a88:	ldr	w1, [sp, #120]
  401a8c:	mov	w0, w6
  401a90:	bl	4012c0 <log_internal_realm@plt>
  401a94:	b	401eb0 <user_mkdir_runtime_path+0x5fc>
  401a98:	ldr	w0, [sp, #120]
  401a9c:	cmp	w0, #0x0
  401aa0:	cneg	w0, w0, lt  // lt = tstop
  401aa4:	and	w0, w0, #0xff
  401aa8:	neg	w0, w0
  401aac:	b	401eb0 <user_mkdir_runtime_path+0x5fc>
  401ab0:	mov	w2, #0x0                   	// #0
  401ab4:	mov	x1, #0x0                   	// #0
  401ab8:	ldr	x0, [sp, #40]
  401abc:	bl	401330 <path_is_mount_point@plt>
  401ac0:	cmp	w0, #0x0
  401ac4:	b.lt	401b44 <user_mkdir_runtime_path+0x290>  // b.tstop
  401ac8:	mov	w0, #0x7                   	// #7
  401acc:	str	w0, [sp, #104]
  401ad0:	str	wzr, [sp, #108]
  401ad4:	str	wzr, [sp, #112]
  401ad8:	ldr	w0, [sp, #112]
  401adc:	bl	401380 <log_get_max_level_realm@plt>
  401ae0:	mov	w1, w0
  401ae4:	ldr	w0, [sp, #104]
  401ae8:	and	w0, w0, #0x7
  401aec:	cmp	w1, w0
  401af0:	b.lt	401b38 <user_mkdir_runtime_path+0x284>  // b.tstop
  401af4:	ldr	w0, [sp, #112]
  401af8:	lsl	w1, w0, #10
  401afc:	ldr	w0, [sp, #104]
  401b00:	orr	w7, w1, w0
  401b04:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b08:	add	x1, x0, #0xa53
  401b0c:	ldr	x6, [sp, #40]
  401b10:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b14:	add	x5, x0, #0xbc0
  401b18:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b1c:	add	x4, x0, #0xfe0
  401b20:	mov	w3, #0x3a                  	// #58
  401b24:	mov	x2, x1
  401b28:	ldr	w1, [sp, #108]
  401b2c:	mov	w0, w7
  401b30:	bl	4012c0 <log_internal_realm@plt>
  401b34:	b	401e9c <user_mkdir_runtime_path+0x5e8>
  401b38:	ldr	w0, [sp, #108]
  401b3c:	cmp	w0, #0x0
  401b40:	b	401e9c <user_mkdir_runtime_path+0x5e8>
  401b44:	bl	401280 <mac_smack_use@plt>
  401b48:	and	w0, w0, #0xff
  401b4c:	cmp	w0, #0x0
  401b50:	b.eq	401b60 <user_mkdir_runtime_path+0x2ac>  // b.none
  401b54:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b58:	add	x0, x0, #0xbe0
  401b5c:	b	401b68 <user_mkdir_runtime_path+0x2b4>
  401b60:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b64:	add	x0, x0, #0xbf0
  401b68:	add	x7, sp, #0x80
  401b6c:	mov	x6, x0
  401b70:	ldr	x5, [sp, #24]
  401b74:	ldr	w4, [sp, #32]
  401b78:	ldr	w3, [sp, #36]
  401b7c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401b80:	add	x2, x0, #0xbf8
  401b84:	mov	x1, #0x56                  	// #86
  401b88:	mov	x0, x7
  401b8c:	bl	4011a0 <snprintf@plt>
  401b90:	cmp	w0, #0x55
  401b94:	cset	w0, hi  // hi = pmore
  401b98:	and	w0, w0, #0xff
  401b9c:	and	x0, x0, #0xff
  401ba0:	cmp	x0, #0x0
  401ba4:	b.eq	401bd0 <user_mkdir_runtime_path+0x31c>  // b.none
  401ba8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401bac:	add	x1, x0, #0xa53
  401bb0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401bb4:	add	x4, x0, #0xfc8
  401bb8:	mov	w3, #0x41                  	// #65
  401bbc:	mov	x2, x1
  401bc0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401bc4:	add	x1, x0, #0xc20
  401bc8:	mov	w0, #0x0                   	// #0
  401bcc:	bl	4011c0 <log_assert_failed_realm@plt>
  401bd0:	mov	w1, #0x1c0                 	// #448
  401bd4:	ldr	x0, [sp, #40]
  401bd8:	bl	4012b0 <mkdir_label@plt>
  401bdc:	add	x0, sp, #0x80
  401be0:	mov	x4, x0
  401be4:	mov	x3, #0x6                   	// #6
  401be8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401bec:	add	x2, x0, #0xc48
  401bf0:	ldr	x1, [sp, #40]
  401bf4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401bf8:	add	x0, x0, #0xc48
  401bfc:	bl	401350 <mount@plt>
  401c00:	str	w0, [sp, #52]
  401c04:	ldr	w0, [sp, #52]
  401c08:	cmp	w0, #0x0
  401c0c:	b.ge	401e04 <user_mkdir_runtime_path+0x550>  // b.tcont
  401c10:	strb	wzr, [sp, #51]
  401c14:	bl	401230 <__errno_location@plt>
  401c18:	ldr	w0, [x0]
  401c1c:	cmp	w0, #0x1
  401c20:	b.eq	401c2c <user_mkdir_runtime_path+0x378>  // b.none
  401c24:	cmp	w0, #0xd
  401c28:	b.ne	401c34 <user_mkdir_runtime_path+0x380>  // b.any
  401c2c:	mov	w0, #0x1                   	// #1
  401c30:	strb	w0, [sp, #51]
  401c34:	nop
  401c38:	ldrb	w0, [sp, #51]
  401c3c:	eor	w0, w0, #0x1
  401c40:	and	w0, w0, #0xff
  401c44:	cmp	w0, #0x0
  401c48:	b.eq	401ce0 <user_mkdir_runtime_path+0x42c>  // b.none
  401c4c:	mov	w0, #0x3                   	// #3
  401c50:	str	w0, [sp, #80]
  401c54:	bl	401230 <__errno_location@plt>
  401c58:	ldr	w0, [x0]
  401c5c:	str	w0, [sp, #84]
  401c60:	str	wzr, [sp, #88]
  401c64:	ldr	w0, [sp, #88]
  401c68:	bl	401380 <log_get_max_level_realm@plt>
  401c6c:	mov	w1, w0
  401c70:	ldr	w0, [sp, #80]
  401c74:	and	w0, w0, #0x7
  401c78:	cmp	w1, w0
  401c7c:	b.lt	401cc4 <user_mkdir_runtime_path+0x410>  // b.tstop
  401c80:	ldr	w0, [sp, #88]
  401c84:	lsl	w1, w0, #10
  401c88:	ldr	w0, [sp, #80]
  401c8c:	orr	w7, w1, w0
  401c90:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401c94:	add	x1, x0, #0xa53
  401c98:	ldr	x6, [sp, #40]
  401c9c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401ca0:	add	x5, x0, #0xc50
  401ca4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401ca8:	add	x4, x0, #0xfe0
  401cac:	mov	w3, #0x4b                  	// #75
  401cb0:	mov	x2, x1
  401cb4:	ldr	w1, [sp, #84]
  401cb8:	mov	w0, w7
  401cbc:	bl	4012c0 <log_internal_realm@plt>
  401cc0:	b	401cd8 <user_mkdir_runtime_path+0x424>
  401cc4:	ldr	w0, [sp, #84]
  401cc8:	cmp	w0, #0x0
  401ccc:	cneg	w0, w0, lt  // lt = tstop
  401cd0:	and	w0, w0, #0xff
  401cd4:	neg	w0, w0
  401cd8:	str	w0, [sp, #52]
  401cdc:	b	401ea4 <user_mkdir_runtime_path+0x5f0>
  401ce0:	mov	w0, #0x7                   	// #7
  401ce4:	str	w0, [sp, #56]
  401ce8:	bl	401230 <__errno_location@plt>
  401cec:	ldr	w0, [x0]
  401cf0:	str	w0, [sp, #60]
  401cf4:	str	wzr, [sp, #64]
  401cf8:	ldr	w0, [sp, #64]
  401cfc:	bl	401380 <log_get_max_level_realm@plt>
  401d00:	mov	w1, w0
  401d04:	ldr	w0, [sp, #56]
  401d08:	and	w0, w0, #0x7
  401d0c:	cmp	w1, w0
  401d10:	b.lt	401d58 <user_mkdir_runtime_path+0x4a4>  // b.tstop
  401d14:	ldr	w0, [sp, #64]
  401d18:	lsl	w1, w0, #10
  401d1c:	ldr	w0, [sp, #56]
  401d20:	orr	w7, w1, w0
  401d24:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401d28:	add	x1, x0, #0xa53
  401d2c:	ldr	x6, [sp, #40]
  401d30:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401d34:	add	x5, x0, #0xc80
  401d38:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401d3c:	add	x4, x0, #0xfe0
  401d40:	mov	w3, #0x4f                  	// #79
  401d44:	mov	x2, x1
  401d48:	ldr	w1, [sp, #60]
  401d4c:	mov	w0, w7
  401d50:	bl	4012c0 <log_internal_realm@plt>
  401d54:	b	401d60 <user_mkdir_runtime_path+0x4ac>
  401d58:	ldr	w0, [sp, #60]
  401d5c:	cmp	w0, #0x0
  401d60:	ldr	w3, [sp, #32]
  401d64:	ldr	w2, [sp, #36]
  401d68:	mov	w1, #0x1c0                 	// #448
  401d6c:	ldr	x0, [sp, #40]
  401d70:	bl	4011b0 <chmod_and_chown@plt>
  401d74:	str	w0, [sp, #52]
  401d78:	ldr	w0, [sp, #52]
  401d7c:	cmp	w0, #0x0
  401d80:	b.ge	401e04 <user_mkdir_runtime_path+0x550>  // b.tcont
  401d84:	mov	w0, #0x3                   	// #3
  401d88:	str	w0, [sp, #68]
  401d8c:	ldr	w0, [sp, #52]
  401d90:	str	w0, [sp, #72]
  401d94:	str	wzr, [sp, #76]
  401d98:	ldr	w0, [sp, #76]
  401d9c:	bl	401380 <log_get_max_level_realm@plt>
  401da0:	mov	w1, w0
  401da4:	ldr	w0, [sp, #68]
  401da8:	and	w0, w0, #0x7
  401dac:	cmp	w1, w0
  401db0:	b.lt	401df8 <user_mkdir_runtime_path+0x544>  // b.tstop
  401db4:	ldr	w0, [sp, #76]
  401db8:	lsl	w1, w0, #10
  401dbc:	ldr	w0, [sp, #68]
  401dc0:	orr	w7, w1, w0
  401dc4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401dc8:	add	x1, x0, #0xa53
  401dcc:	ldr	x6, [sp, #40]
  401dd0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401dd4:	add	x5, x0, #0xce0
  401dd8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401ddc:	add	x4, x0, #0xfe0
  401de0:	mov	w3, #0x54                  	// #84
  401de4:	mov	x2, x1
  401de8:	ldr	w1, [sp, #72]
  401dec:	mov	w0, w7
  401df0:	bl	4012c0 <log_internal_realm@plt>
  401df4:	b	401ea4 <user_mkdir_runtime_path+0x5f0>
  401df8:	ldr	w0, [sp, #72]
  401dfc:	cmp	w0, #0x0
  401e00:	b	401ea4 <user_mkdir_runtime_path+0x5f0>
  401e04:	mov	w1, #0x0                   	// #0
  401e08:	ldr	x0, [sp, #40]
  401e0c:	bl	401390 <label_fix@plt>
  401e10:	str	w0, [sp, #52]
  401e14:	ldr	w0, [sp, #52]
  401e18:	cmp	w0, #0x0
  401e1c:	b.ge	401e9c <user_mkdir_runtime_path+0x5e8>  // b.tcont
  401e20:	mov	w0, #0x4                   	// #4
  401e24:	str	w0, [sp, #92]
  401e28:	ldr	w0, [sp, #52]
  401e2c:	str	w0, [sp, #96]
  401e30:	str	wzr, [sp, #100]
  401e34:	ldr	w0, [sp, #100]
  401e38:	bl	401380 <log_get_max_level_realm@plt>
  401e3c:	mov	w1, w0
  401e40:	ldr	w0, [sp, #92]
  401e44:	and	w0, w0, #0x7
  401e48:	cmp	w1, w0
  401e4c:	b.lt	401e94 <user_mkdir_runtime_path+0x5e0>  // b.tstop
  401e50:	ldr	w0, [sp, #100]
  401e54:	lsl	w1, w0, #10
  401e58:	ldr	w0, [sp, #92]
  401e5c:	orr	w7, w1, w0
  401e60:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401e64:	add	x1, x0, #0xa53
  401e68:	ldr	x6, [sp, #40]
  401e6c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401e70:	add	x5, x0, #0xd10
  401e74:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401e78:	add	x4, x0, #0xfe0
  401e7c:	mov	w3, #0x5b                  	// #91
  401e80:	mov	x2, x1
  401e84:	ldr	w1, [sp, #96]
  401e88:	mov	w0, w7
  401e8c:	bl	4012c0 <log_internal_realm@plt>
  401e90:	b	401e9c <user_mkdir_runtime_path+0x5e8>
  401e94:	ldr	w0, [sp, #96]
  401e98:	cmp	w0, #0x0
  401e9c:	mov	w0, #0x0                   	// #0
  401ea0:	b	401eb0 <user_mkdir_runtime_path+0x5fc>
  401ea4:	ldr	x0, [sp, #40]
  401ea8:	bl	401220 <rmdir@plt>
  401eac:	ldr	w0, [sp, #52]
  401eb0:	mov	w1, w0
  401eb4:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  401eb8:	add	x0, x0, #0xc68
  401ebc:	ldr	x2, [sp, #216]
  401ec0:	ldr	x0, [x0]
  401ec4:	eor	x0, x2, x0
  401ec8:	cmp	x0, #0x0
  401ecc:	b.eq	401ed4 <user_mkdir_runtime_path+0x620>  // b.none
  401ed0:	bl	401250 <__stack_chk_fail@plt>
  401ed4:	mov	w0, w1
  401ed8:	ldp	x29, x30, [sp], #224
  401edc:	ret

0000000000401ee0 <user_remove_runtime_path>:
  401ee0:	stp	x29, x30, [sp, #-80]!
  401ee4:	mov	x29, sp
  401ee8:	str	x0, [sp, #24]
  401eec:	ldr	x0, [sp, #24]
  401ef0:	cmp	x0, #0x0
  401ef4:	cset	w0, eq  // eq = none
  401ef8:	and	w0, w0, #0xff
  401efc:	and	x0, x0, #0xff
  401f00:	cmp	x0, #0x0
  401f04:	b.eq	401f30 <user_remove_runtime_path+0x50>  // b.none
  401f08:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f0c:	add	x1, x0, #0xa53
  401f10:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f14:	add	x4, x0, #0xff8
  401f18:	mov	w3, #0x69                  	// #105
  401f1c:	mov	x2, x1
  401f20:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f24:	add	x1, x0, #0xb30
  401f28:	mov	w0, #0x0                   	// #0
  401f2c:	bl	4011c0 <log_assert_failed_realm@plt>
  401f30:	ldr	x0, [sp, #24]
  401f34:	bl	4011f0 <path_is_absolute@plt>
  401f38:	and	w0, w0, #0xff
  401f3c:	eor	w0, w0, #0x1
  401f40:	and	w0, w0, #0xff
  401f44:	and	x0, x0, #0xff
  401f48:	cmp	x0, #0x0
  401f4c:	b.eq	401f78 <user_remove_runtime_path+0x98>  // b.none
  401f50:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f54:	add	x1, x0, #0xa53
  401f58:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f5c:	add	x4, x0, #0xff8
  401f60:	mov	w3, #0x6a                  	// #106
  401f64:	mov	x2, x1
  401f68:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401f6c:	add	x1, x0, #0xb40
  401f70:	mov	w0, #0x0                   	// #0
  401f74:	bl	4011c0 <log_assert_failed_realm@plt>
  401f78:	mov	w1, #0x0                   	// #0
  401f7c:	ldr	x0, [sp, #24]
  401f80:	bl	401340 <rm_rf@plt>
  401f84:	str	w0, [sp, #40]
  401f88:	ldr	w0, [sp, #40]
  401f8c:	cmp	w0, #0x0
  401f90:	b.ge	402010 <user_remove_runtime_path+0x130>  // b.tcont
  401f94:	mov	w0, #0x7                   	// #7
  401f98:	str	w0, [sp, #44]
  401f9c:	ldr	w0, [sp, #40]
  401fa0:	str	w0, [sp, #48]
  401fa4:	str	wzr, [sp, #52]
  401fa8:	ldr	w0, [sp, #52]
  401fac:	bl	401380 <log_get_max_level_realm@plt>
  401fb0:	mov	w1, w0
  401fb4:	ldr	w0, [sp, #44]
  401fb8:	and	w0, w0, #0x7
  401fbc:	cmp	w1, w0
  401fc0:	b.lt	402008 <user_remove_runtime_path+0x128>  // b.tstop
  401fc4:	ldr	w0, [sp, #52]
  401fc8:	lsl	w1, w0, #10
  401fcc:	ldr	w0, [sp, #44]
  401fd0:	orr	w7, w1, w0
  401fd4:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401fd8:	add	x1, x0, #0xa53
  401fdc:	ldr	x6, [sp, #24]
  401fe0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  401fe4:	add	x5, x0, #0xd40
  401fe8:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  401fec:	add	x4, x0, #0x18
  401ff0:	mov	w3, #0x6e                  	// #110
  401ff4:	mov	x2, x1
  401ff8:	ldr	w1, [sp, #48]
  401ffc:	mov	w0, w7
  402000:	bl	4012c0 <log_internal_realm@plt>
  402004:	b	402010 <user_remove_runtime_path+0x130>
  402008:	ldr	w0, [sp, #48]
  40200c:	cmp	w0, #0x0
  402010:	mov	w1, #0x2                   	// #2
  402014:	ldr	x0, [sp, #24]
  402018:	bl	401300 <umount2@plt>
  40201c:	str	w0, [sp, #40]
  402020:	ldr	w0, [sp, #40]
  402024:	cmp	w0, #0x0
  402028:	b.ge	4020e8 <user_remove_runtime_path+0x208>  // b.tcont
  40202c:	strb	wzr, [sp, #39]
  402030:	bl	401230 <__errno_location@plt>
  402034:	ldr	w0, [x0]
  402038:	cmp	w0, #0x2
  40203c:	b.eq	402048 <user_remove_runtime_path+0x168>  // b.none
  402040:	cmp	w0, #0x16
  402044:	b.ne	402050 <user_remove_runtime_path+0x170>  // b.any
  402048:	mov	w0, #0x1                   	// #1
  40204c:	strb	w0, [sp, #39]
  402050:	nop
  402054:	ldrb	w0, [sp, #39]
  402058:	eor	w0, w0, #0x1
  40205c:	and	w0, w0, #0xff
  402060:	cmp	w0, #0x0
  402064:	b.eq	4020e8 <user_remove_runtime_path+0x208>  // b.none
  402068:	mov	w0, #0x7                   	// #7
  40206c:	str	w0, [sp, #56]
  402070:	bl	401230 <__errno_location@plt>
  402074:	ldr	w0, [x0]
  402078:	str	w0, [sp, #60]
  40207c:	str	wzr, [sp, #64]
  402080:	ldr	w0, [sp, #64]
  402084:	bl	401380 <log_get_max_level_realm@plt>
  402088:	mov	w1, w0
  40208c:	ldr	w0, [sp, #56]
  402090:	and	w0, w0, #0x7
  402094:	cmp	w1, w0
  402098:	b.lt	4020e0 <user_remove_runtime_path+0x200>  // b.tstop
  40209c:	ldr	w0, [sp, #64]
  4020a0:	lsl	w1, w0, #10
  4020a4:	ldr	w0, [sp, #56]
  4020a8:	orr	w7, w1, w0
  4020ac:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4020b0:	add	x1, x0, #0xa53
  4020b4:	ldr	x6, [sp, #24]
  4020b8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4020bc:	add	x5, x0, #0xd88
  4020c0:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4020c4:	add	x4, x0, #0x18
  4020c8:	mov	w3, #0x74                  	// #116
  4020cc:	mov	x2, x1
  4020d0:	ldr	w1, [sp, #60]
  4020d4:	mov	w0, w7
  4020d8:	bl	4012c0 <log_internal_realm@plt>
  4020dc:	b	4020e8 <user_remove_runtime_path+0x208>
  4020e0:	ldr	w0, [sp, #60]
  4020e4:	cmp	w0, #0x0
  4020e8:	mov	w1, #0x2                   	// #2
  4020ec:	ldr	x0, [sp, #24]
  4020f0:	bl	401340 <rm_rf@plt>
  4020f4:	str	w0, [sp, #40]
  4020f8:	ldr	w0, [sp, #40]
  4020fc:	cmp	w0, #0x0
  402100:	b.ge	40219c <user_remove_runtime_path+0x2bc>  // b.tcont
  402104:	ldr	w0, [sp, #40]
  402108:	cmn	w0, #0x2
  40210c:	b.eq	40219c <user_remove_runtime_path+0x2bc>  // b.none
  402110:	mov	w0, #0x3                   	// #3
  402114:	str	w0, [sp, #68]
  402118:	ldr	w0, [sp, #40]
  40211c:	str	w0, [sp, #72]
  402120:	str	wzr, [sp, #76]
  402124:	ldr	w0, [sp, #76]
  402128:	bl	401380 <log_get_max_level_realm@plt>
  40212c:	mov	w1, w0
  402130:	ldr	w0, [sp, #68]
  402134:	and	w0, w0, #0x7
  402138:	cmp	w1, w0
  40213c:	b.lt	402184 <user_remove_runtime_path+0x2a4>  // b.tstop
  402140:	ldr	w0, [sp, #76]
  402144:	lsl	w1, w0, #10
  402148:	ldr	w0, [sp, #68]
  40214c:	orr	w7, w1, w0
  402150:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402154:	add	x1, x0, #0xa53
  402158:	ldr	x6, [sp, #24]
  40215c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402160:	add	x5, x0, #0xdc8
  402164:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402168:	add	x4, x0, #0x18
  40216c:	mov	w3, #0x78                  	// #120
  402170:	mov	x2, x1
  402174:	ldr	w1, [sp, #72]
  402178:	mov	w0, w7
  40217c:	bl	4012c0 <log_internal_realm@plt>
  402180:	b	4021a0 <user_remove_runtime_path+0x2c0>
  402184:	ldr	w0, [sp, #72]
  402188:	cmp	w0, #0x0
  40218c:	cneg	w0, w0, lt  // lt = tstop
  402190:	and	w0, w0, #0xff
  402194:	neg	w0, w0
  402198:	b	4021a0 <user_remove_runtime_path+0x2c0>
  40219c:	mov	w0, #0x0                   	// #0
  4021a0:	ldp	x29, x30, [sp], #80
  4021a4:	ret

00000000004021a8 <do_mount>:
  4021a8:	sub	sp, sp, #0x80
  4021ac:	stp	x29, x30, [sp, #16]
  4021b0:	add	x29, sp, #0x10
  4021b4:	str	x0, [sp, #40]
  4021b8:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  4021bc:	add	x0, x0, #0xc68
  4021c0:	ldr	x1, [x0]
  4021c4:	str	x1, [sp, #120]
  4021c8:	mov	x1, #0x0                   	// #0
  4021cc:	add	x2, sp, #0x38
  4021d0:	add	x1, sp, #0x34
  4021d4:	add	x0, sp, #0x28
  4021d8:	mov	w5, #0x0                   	// #0
  4021dc:	mov	x4, #0x0                   	// #0
  4021e0:	mov	x3, #0x0                   	// #0
  4021e4:	bl	4012f0 <get_user_creds@plt>
  4021e8:	str	w0, [sp, #60]
  4021ec:	ldr	w0, [sp, #60]
  4021f0:	cmp	w0, #0x0
  4021f4:	b.ge	4022bc <do_mount+0x114>  // b.tcont
  4021f8:	mov	w0, #0x3                   	// #3
  4021fc:	str	w0, [sp, #76]
  402200:	ldr	w0, [sp, #60]
  402204:	str	w0, [sp, #80]
  402208:	str	wzr, [sp, #84]
  40220c:	ldr	w0, [sp, #84]
  402210:	bl	401380 <log_get_max_level_realm@plt>
  402214:	mov	w1, w0
  402218:	ldr	w0, [sp, #76]
  40221c:	and	w0, w0, #0x7
  402220:	cmp	w1, w0
  402224:	b.lt	4022a4 <do_mount+0xfc>  // b.tstop
  402228:	ldr	w0, [sp, #84]
  40222c:	lsl	w1, w0, #10
  402230:	ldr	w0, [sp, #76]
  402234:	orr	w7, w1, w0
  402238:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40223c:	add	x1, x0, #0xa53
  402240:	ldr	w0, [sp, #60]
  402244:	cmn	w0, #0x3
  402248:	b.eq	402270 <do_mount+0xc8>  // b.none
  40224c:	ldr	w0, [sp, #60]
  402250:	cmn	w0, #0x2a
  402254:	b.ne	402264 <do_mount+0xbc>  // b.any
  402258:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40225c:	add	x0, x0, #0xe08
  402260:	b	402278 <do_mount+0xd0>
  402264:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402268:	add	x0, x0, #0xe40
  40226c:	b	402278 <do_mount+0xd0>
  402270:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402274:	add	x0, x0, #0xe60
  402278:	ldr	x2, [sp, #40]
  40227c:	mov	x6, x2
  402280:	mov	x5, x0
  402284:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402288:	add	x4, x0, #0x38
  40228c:	mov	w3, #0x86                  	// #134
  402290:	mov	x2, x1
  402294:	ldr	w1, [sp, #80]
  402298:	mov	w0, w7
  40229c:	bl	4012c0 <log_internal_realm@plt>
  4022a0:	b	4023dc <do_mount+0x234>
  4022a4:	ldr	w0, [sp, #80]
  4022a8:	cmp	w0, #0x0
  4022ac:	cneg	w0, w0, lt  // lt = tstop
  4022b0:	and	w0, w0, #0xff
  4022b4:	neg	w0, w0
  4022b8:	b	4023dc <do_mount+0x234>
  4022bc:	add	x0, sp, #0x58
  4022c0:	bl	4016ac <acquire_runtime_dir_size>
  4022c4:	str	w0, [sp, #60]
  4022c8:	ldr	w0, [sp, #60]
  4022cc:	cmp	w0, #0x0
  4022d0:	b.ge	4022dc <do_mount+0x134>  // b.tcont
  4022d4:	ldr	w0, [sp, #60]
  4022d8:	b	4023dc <do_mount+0x234>
  4022dc:	ldr	w0, [sp, #52]
  4022e0:	add	x4, sp, #0x60
  4022e4:	mov	w3, w0
  4022e8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4022ec:	add	x2, x0, #0xe78
  4022f0:	mov	x1, #0x16                  	// #22
  4022f4:	mov	x0, x4
  4022f8:	bl	4011a0 <snprintf@plt>
  4022fc:	cmp	w0, #0x15
  402300:	cset	w0, hi  // hi = pmore
  402304:	and	w0, w0, #0xff
  402308:	and	x0, x0, #0xff
  40230c:	cmp	x0, #0x0
  402310:	b.eq	40233c <do_mount+0x194>  // b.none
  402314:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402318:	add	x1, x0, #0xa53
  40231c:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402320:	add	x4, x0, #0x48
  402324:	mov	w3, #0x90                  	// #144
  402328:	mov	x2, x1
  40232c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402330:	add	x1, x0, #0xe88
  402334:	mov	w0, #0x0                   	// #0
  402338:	bl	4011c0 <log_assert_failed_realm@plt>
  40233c:	mov	w0, #0x7                   	// #7
  402340:	str	w0, [sp, #64]
  402344:	str	wzr, [sp, #68]
  402348:	str	wzr, [sp, #72]
  40234c:	ldr	w0, [sp, #72]
  402350:	bl	401380 <log_get_max_level_realm@plt>
  402354:	mov	w1, w0
  402358:	ldr	w0, [sp, #64]
  40235c:	and	w0, w0, #0x7
  402360:	cmp	w1, w0
  402364:	b.lt	4023c0 <do_mount+0x218>  // b.tstop
  402368:	ldr	w0, [sp, #72]
  40236c:	lsl	w1, w0, #10
  402370:	ldr	w0, [sp, #64]
  402374:	orr	w8, w1, w0
  402378:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40237c:	add	x1, x0, #0xa53
  402380:	ldr	w3, [sp, #52]
  402384:	ldr	w0, [sp, #56]
  402388:	add	x2, sp, #0x60
  40238c:	str	w0, [sp]
  402390:	mov	w7, w3
  402394:	mov	x6, x2
  402398:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40239c:	add	x5, x0, #0xeb8
  4023a0:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4023a4:	add	x4, x0, #0x38
  4023a8:	mov	w3, #0x92                  	// #146
  4023ac:	mov	x2, x1
  4023b0:	ldr	w1, [sp, #68]
  4023b4:	mov	w0, w8
  4023b8:	bl	4012c0 <log_internal_realm@plt>
  4023bc:	b	4023c8 <do_mount+0x220>
  4023c0:	ldr	w0, [sp, #68]
  4023c4:	cmp	w0, #0x0
  4023c8:	ldr	w1, [sp, #52]
  4023cc:	ldr	w2, [sp, #56]
  4023d0:	ldr	x3, [sp, #88]
  4023d4:	add	x0, sp, #0x60
  4023d8:	bl	4018b4 <user_mkdir_runtime_path>
  4023dc:	mov	w1, w0
  4023e0:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  4023e4:	add	x0, x0, #0xc68
  4023e8:	ldr	x2, [sp, #120]
  4023ec:	ldr	x0, [x0]
  4023f0:	eor	x0, x2, x0
  4023f4:	cmp	x0, #0x0
  4023f8:	b.eq	402400 <do_mount+0x258>  // b.none
  4023fc:	bl	401250 <__stack_chk_fail@plt>
  402400:	mov	w0, w1
  402404:	ldp	x29, x30, [sp, #16]
  402408:	add	sp, sp, #0x80
  40240c:	ret

0000000000402410 <do_umount>:
  402410:	stp	x29, x30, [sp, #-96]!
  402414:	mov	x29, sp
  402418:	str	x0, [sp, #24]
  40241c:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  402420:	add	x0, x0, #0xc68
  402424:	ldr	x1, [x0]
  402428:	str	x1, [sp, #88]
  40242c:	mov	x1, #0x0                   	// #0
  402430:	ldr	x0, [sp, #24]
  402434:	add	x1, sp, #0x20
  402438:	bl	401310 <parse_uid@plt>
  40243c:	cmp	w0, #0x0
  402440:	b.ge	402534 <do_umount+0x124>  // b.tcont
  402444:	add	x1, sp, #0x20
  402448:	add	x0, sp, #0x18
  40244c:	mov	w5, #0x0                   	// #0
  402450:	mov	x4, #0x0                   	// #0
  402454:	mov	x3, #0x0                   	// #0
  402458:	mov	x2, #0x0                   	// #0
  40245c:	bl	4012f0 <get_user_creds@plt>
  402460:	str	w0, [sp, #36]
  402464:	ldr	w0, [sp, #36]
  402468:	cmp	w0, #0x0
  40246c:	b.ge	402534 <do_umount+0x124>  // b.tcont
  402470:	mov	w0, #0x3                   	// #3
  402474:	str	w0, [sp, #40]
  402478:	ldr	w0, [sp, #36]
  40247c:	str	w0, [sp, #44]
  402480:	str	wzr, [sp, #48]
  402484:	ldr	w0, [sp, #48]
  402488:	bl	401380 <log_get_max_level_realm@plt>
  40248c:	mov	w1, w0
  402490:	ldr	w0, [sp, #40]
  402494:	and	w0, w0, #0x7
  402498:	cmp	w1, w0
  40249c:	b.lt	40251c <do_umount+0x10c>  // b.tstop
  4024a0:	ldr	w0, [sp, #48]
  4024a4:	lsl	w1, w0, #10
  4024a8:	ldr	w0, [sp, #40]
  4024ac:	orr	w7, w1, w0
  4024b0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4024b4:	add	x1, x0, #0xa53
  4024b8:	ldr	w0, [sp, #36]
  4024bc:	cmn	w0, #0x3
  4024c0:	b.eq	4024e8 <do_umount+0xd8>  // b.none
  4024c4:	ldr	w0, [sp, #36]
  4024c8:	cmn	w0, #0x2a
  4024cc:	b.ne	4024dc <do_umount+0xcc>  // b.any
  4024d0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4024d4:	add	x0, x0, #0xe08
  4024d8:	b	4024f0 <do_umount+0xe0>
  4024dc:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4024e0:	add	x0, x0, #0xe40
  4024e4:	b	4024f0 <do_umount+0xe0>
  4024e8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4024ec:	add	x0, x0, #0xe60
  4024f0:	ldr	x2, [sp, #24]
  4024f4:	mov	x6, x2
  4024f8:	mov	x5, x0
  4024fc:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402500:	add	x4, x0, #0x58
  402504:	mov	w3, #0xa0                  	// #160
  402508:	mov	x2, x1
  40250c:	ldr	w1, [sp, #44]
  402510:	mov	w0, w7
  402514:	bl	4012c0 <log_internal_realm@plt>
  402518:	b	402618 <do_umount+0x208>
  40251c:	ldr	w0, [sp, #44]
  402520:	cmp	w0, #0x0
  402524:	cneg	w0, w0, lt  // lt = tstop
  402528:	and	w0, w0, #0xff
  40252c:	neg	w0, w0
  402530:	b	402618 <do_umount+0x208>
  402534:	ldr	w0, [sp, #32]
  402538:	add	x4, sp, #0x40
  40253c:	mov	w3, w0
  402540:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402544:	add	x2, x0, #0xe78
  402548:	mov	x1, #0x16                  	// #22
  40254c:	mov	x0, x4
  402550:	bl	4011a0 <snprintf@plt>
  402554:	cmp	w0, #0x15
  402558:	cset	w0, hi  // hi = pmore
  40255c:	and	w0, w0, #0xff
  402560:	and	x0, x0, #0xff
  402564:	cmp	x0, #0x0
  402568:	b.eq	402594 <do_umount+0x184>  // b.none
  40256c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402570:	add	x1, x0, #0xa53
  402574:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402578:	add	x4, x0, #0x68
  40257c:	mov	w3, #0xa7                  	// #167
  402580:	mov	x2, x1
  402584:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402588:	add	x1, x0, #0xe88
  40258c:	mov	w0, #0x0                   	// #0
  402590:	bl	4011c0 <log_assert_failed_realm@plt>
  402594:	mov	w0, #0x7                   	// #7
  402598:	str	w0, [sp, #52]
  40259c:	str	wzr, [sp, #56]
  4025a0:	str	wzr, [sp, #60]
  4025a4:	ldr	w0, [sp, #60]
  4025a8:	bl	401380 <log_get_max_level_realm@plt>
  4025ac:	mov	w1, w0
  4025b0:	ldr	w0, [sp, #52]
  4025b4:	and	w0, w0, #0x7
  4025b8:	cmp	w1, w0
  4025bc:	b.lt	402608 <do_umount+0x1f8>  // b.tstop
  4025c0:	ldr	w0, [sp, #60]
  4025c4:	lsl	w1, w0, #10
  4025c8:	ldr	w0, [sp, #52]
  4025cc:	orr	w7, w1, w0
  4025d0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4025d4:	add	x1, x0, #0xa53
  4025d8:	add	x0, sp, #0x40
  4025dc:	mov	x6, x0
  4025e0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4025e4:	add	x5, x0, #0xed8
  4025e8:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4025ec:	add	x4, x0, #0x58
  4025f0:	mov	w3, #0xa9                  	// #169
  4025f4:	mov	x2, x1
  4025f8:	ldr	w1, [sp, #56]
  4025fc:	mov	w0, w7
  402600:	bl	4012c0 <log_internal_realm@plt>
  402604:	b	402610 <do_umount+0x200>
  402608:	ldr	w0, [sp, #56]
  40260c:	cmp	w0, #0x0
  402610:	add	x0, sp, #0x40
  402614:	bl	401ee0 <user_remove_runtime_path>
  402618:	mov	w1, w0
  40261c:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  402620:	add	x0, x0, #0xc68
  402624:	ldr	x2, [sp, #88]
  402628:	ldr	x0, [x0]
  40262c:	eor	x0, x2, x0
  402630:	cmp	x0, #0x0
  402634:	b.eq	40263c <do_umount+0x22c>  // b.none
  402638:	bl	401250 <__stack_chk_fail@plt>
  40263c:	mov	w0, w1
  402640:	ldp	x29, x30, [sp], #96
  402644:	ret

0000000000402648 <run>:
  402648:	stp	x29, x30, [sp, #-112]!
  40264c:	mov	x29, sp
  402650:	str	w0, [sp, #28]
  402654:	str	x1, [sp, #16]
  402658:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  40265c:	add	x0, x0, #0xc68
  402660:	ldr	x1, [x0]
  402664:	str	x1, [sp, #104]
  402668:	mov	x1, #0x0                   	// #0
  40266c:	mov	w0, #0x0                   	// #0
  402670:	bl	401190 <log_parse_environment_realm@plt>
  402674:	bl	401370 <log_open@plt>
  402678:	ldr	w0, [sp, #28]
  40267c:	cmp	w0, #0x3
  402680:	b.eq	402710 <run+0xc8>  // b.none
  402684:	mov	w0, #0x3                   	// #3
  402688:	str	w0, [sp, #68]
  40268c:	mov	w0, #0x16                  	// #22
  402690:	movk	w0, #0x4000, lsl #16
  402694:	str	w0, [sp, #72]
  402698:	str	wzr, [sp, #76]
  40269c:	ldr	w0, [sp, #76]
  4026a0:	bl	401380 <log_get_max_level_realm@plt>
  4026a4:	mov	w1, w0
  4026a8:	ldr	w0, [sp, #68]
  4026ac:	and	w0, w0, #0x7
  4026b0:	cmp	w1, w0
  4026b4:	b.lt	4026f8 <run+0xb0>  // b.tstop
  4026b8:	ldr	w0, [sp, #76]
  4026bc:	lsl	w1, w0, #10
  4026c0:	ldr	w0, [sp, #68]
  4026c4:	orr	w6, w1, w0
  4026c8:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4026cc:	add	x1, x0, #0xa53
  4026d0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4026d4:	add	x5, x0, #0xee8
  4026d8:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4026dc:	add	x4, x0, #0x78
  4026e0:	mov	w3, #0xb4                  	// #180
  4026e4:	mov	x2, x1
  4026e8:	ldr	w1, [sp, #72]
  4026ec:	mov	w0, w6
  4026f0:	bl	4012c0 <log_internal_realm@plt>
  4026f4:	b	402914 <run+0x2cc>
  4026f8:	ldr	w0, [sp, #72]
  4026fc:	cmp	w0, #0x0
  402700:	cneg	w0, w0, lt  // lt = tstop
  402704:	and	w0, w0, #0xff
  402708:	neg	w0, w0
  40270c:	b	402914 <run+0x2cc>
  402710:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402714:	add	x0, x0, #0xf80
  402718:	add	x2, sp, #0x50
  40271c:	mov	x3, x0
  402720:	ldp	x0, x1, [x3]
  402724:	stp	x0, x1, [x2]
  402728:	ldr	x0, [x3, #16]
  40272c:	str	x0, [x2, #16]
  402730:	ldr	x0, [sp, #16]
  402734:	add	x0, x0, #0x8
  402738:	ldr	x1, [x0]
  40273c:	add	x0, sp, #0x50
  402740:	bl	4012a0 <strv_find@plt>
  402744:	cmp	x0, #0x0
  402748:	b.ne	4027d8 <run+0x190>  // b.any
  40274c:	mov	w0, #0x3                   	// #3
  402750:	str	w0, [sp, #56]
  402754:	mov	w0, #0x16                  	// #22
  402758:	movk	w0, #0x4000, lsl #16
  40275c:	str	w0, [sp, #60]
  402760:	str	wzr, [sp, #64]
  402764:	ldr	w0, [sp, #64]
  402768:	bl	401380 <log_get_max_level_realm@plt>
  40276c:	mov	w1, w0
  402770:	ldr	w0, [sp, #56]
  402774:	and	w0, w0, #0x7
  402778:	cmp	w1, w0
  40277c:	b.lt	4027c0 <run+0x178>  // b.tstop
  402780:	ldr	w0, [sp, #64]
  402784:	lsl	w1, w0, #10
  402788:	ldr	w0, [sp, #56]
  40278c:	orr	w6, w1, w0
  402790:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402794:	add	x1, x0, #0xa53
  402798:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40279c:	add	x5, x0, #0xf10
  4027a0:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4027a4:	add	x4, x0, #0x78
  4027a8:	mov	w3, #0xb7                  	// #183
  4027ac:	mov	x2, x1
  4027b0:	ldr	w1, [sp, #60]
  4027b4:	mov	w0, w6
  4027b8:	bl	4012c0 <log_internal_realm@plt>
  4027bc:	b	402914 <run+0x2cc>
  4027c0:	ldr	w0, [sp, #60]
  4027c4:	cmp	w0, #0x0
  4027c8:	cneg	w0, w0, lt  // lt = tstop
  4027cc:	and	w0, w0, #0xff
  4027d0:	neg	w0, w0
  4027d4:	b	402914 <run+0x2cc>
  4027d8:	bl	401140 <mac_selinux_init@plt>
  4027dc:	str	w0, [sp, #40]
  4027e0:	ldr	w0, [sp, #40]
  4027e4:	cmp	w0, #0x0
  4027e8:	b.ge	402874 <run+0x22c>  // b.tcont
  4027ec:	mov	w0, #0x3                   	// #3
  4027f0:	str	w0, [sp, #44]
  4027f4:	ldr	w0, [sp, #40]
  4027f8:	str	w0, [sp, #48]
  4027fc:	str	wzr, [sp, #52]
  402800:	ldr	w0, [sp, #52]
  402804:	bl	401380 <log_get_max_level_realm@plt>
  402808:	mov	w1, w0
  40280c:	ldr	w0, [sp, #44]
  402810:	and	w0, w0, #0x7
  402814:	cmp	w1, w0
  402818:	b.lt	40285c <run+0x214>  // b.tstop
  40281c:	ldr	w0, [sp, #52]
  402820:	lsl	w1, w0, #10
  402824:	ldr	w0, [sp, #44]
  402828:	orr	w6, w1, w0
  40282c:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402830:	add	x1, x0, #0xa53
  402834:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402838:	add	x5, x0, #0xf48
  40283c:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  402840:	add	x4, x0, #0x78
  402844:	mov	w3, #0xbc                  	// #188
  402848:	mov	x2, x1
  40284c:	ldr	w1, [sp, #48]
  402850:	mov	w0, w6
  402854:	bl	4012c0 <log_internal_realm@plt>
  402858:	b	402914 <run+0x2cc>
  40285c:	ldr	w0, [sp, #48]
  402860:	cmp	w0, #0x0
  402864:	cneg	w0, w0, lt  // lt = tstop
  402868:	and	w0, w0, #0xff
  40286c:	neg	w0, w0
  402870:	b	402914 <run+0x2cc>
  402874:	mov	w0, #0x12                  	// #18
  402878:	bl	4011e0 <umask@plt>
  40287c:	ldr	x0, [sp, #16]
  402880:	add	x0, x0, #0x8
  402884:	ldr	x2, [x0]
  402888:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  40288c:	add	x1, x0, #0xa40
  402890:	mov	x0, x2
  402894:	bl	401320 <strcmp@plt>
  402898:	cmp	w0, #0x0
  40289c:	b.ne	4028b4 <run+0x26c>  // b.any
  4028a0:	ldr	x0, [sp, #16]
  4028a4:	add	x0, x0, #0x10
  4028a8:	ldr	x0, [x0]
  4028ac:	bl	4021a8 <do_mount>
  4028b0:	b	402914 <run+0x2cc>
  4028b4:	ldr	x0, [sp, #16]
  4028b8:	add	x0, x0, #0x8
  4028bc:	ldr	x2, [x0]
  4028c0:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4028c4:	add	x1, x0, #0xa48
  4028c8:	mov	x0, x2
  4028cc:	bl	401320 <strcmp@plt>
  4028d0:	cmp	w0, #0x0
  4028d4:	b.ne	4028ec <run+0x2a4>  // b.any
  4028d8:	ldr	x0, [sp, #16]
  4028dc:	add	x0, x0, #0x10
  4028e0:	ldr	x0, [x0]
  4028e4:	bl	402410 <do_umount>
  4028e8:	b	402914 <run+0x2cc>
  4028ec:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  4028f0:	add	x1, x0, #0xa53
  4028f4:	adrp	x0, 403000 <__PRETTY_FUNCTION__.11274+0x8>
  4028f8:	add	x4, x0, #0x80
  4028fc:	mov	w3, #0xc4                  	// #196
  402900:	mov	x2, x1
  402904:	adrp	x0, 402000 <user_remove_runtime_path+0x120>
  402908:	add	x1, x0, #0xf70
  40290c:	mov	w0, #0x0                   	// #0
  402910:	bl	4011d0 <log_assert_failed_unreachable_realm@plt>
  402914:	mov	w1, w0
  402918:	adrp	x0, 413000 <__FRAME_END__+0xfc88>
  40291c:	add	x0, x0, #0xc68
  402920:	ldr	x2, [sp, #104]
  402924:	ldr	x0, [x0]
  402928:	eor	x0, x2, x0
  40292c:	cmp	x0, #0x0
  402930:	b.eq	402938 <run+0x2f0>  // b.none
  402934:	bl	401250 <__stack_chk_fail@plt>
  402938:	mov	w0, w1
  40293c:	ldp	x29, x30, [sp], #112
  402940:	ret

0000000000402944 <main>:
  402944:	stp	x29, x30, [sp, #-48]!
  402948:	mov	x29, sp
  40294c:	str	w0, [sp, #28]
  402950:	str	x1, [sp, #16]
  402954:	ldr	x1, [sp, #16]
  402958:	ldr	w0, [sp, #28]
  40295c:	bl	4015cc <save_argc_argv>
  402960:	ldr	x1, [sp, #16]
  402964:	ldr	w0, [sp, #28]
  402968:	bl	402648 <run>
  40296c:	str	w0, [sp, #44]
  402970:	bl	401260 <ask_password_agent_close@plt>
  402974:	bl	401180 <polkit_agent_close@plt>
  402978:	bl	401270 <pager_close@plt>
  40297c:	bl	401360 <mac_selinux_finish@plt>
  402980:	bl	401604 <static_destruct>
  402984:	ldr	w0, [sp, #44]
  402988:	lsr	w0, w0, #31
  40298c:	ldp	x29, x30, [sp], #48
  402990:	ret
  402994:	nop

0000000000402998 <__libc_csu_init>:
  402998:	stp	x29, x30, [sp, #-64]!
  40299c:	mov	x29, sp
  4029a0:	stp	x19, x20, [sp, #16]
  4029a4:	adrp	x20, 413000 <__FRAME_END__+0xfc88>
  4029a8:	add	x20, x20, #0xc60
  4029ac:	stp	x21, x22, [sp, #32]
  4029b0:	adrp	x21, 413000 <__FRAME_END__+0xfc88>
  4029b4:	add	x21, x21, #0xc58
  4029b8:	sub	x20, x20, x21
  4029bc:	mov	w22, w0
  4029c0:	stp	x23, x24, [sp, #48]
  4029c4:	mov	x23, x1
  4029c8:	mov	x24, x2
  4029cc:	bl	4010f8 <_init>
  4029d0:	cmp	xzr, x20, asr #3
  4029d4:	b.eq	402a00 <__libc_csu_init+0x68>  // b.none
  4029d8:	asr	x20, x20, #3
  4029dc:	mov	x19, #0x0                   	// #0
  4029e0:	ldr	x3, [x21, x19, lsl #3]
  4029e4:	mov	x2, x24
  4029e8:	add	x19, x19, #0x1
  4029ec:	mov	x1, x23
  4029f0:	mov	w0, w22
  4029f4:	blr	x3
  4029f8:	cmp	x20, x19
  4029fc:	b.ne	4029e0 <__libc_csu_init+0x48>  // b.any
  402a00:	ldp	x19, x20, [sp, #16]
  402a04:	ldp	x21, x22, [sp, #32]
  402a08:	ldp	x23, x24, [sp, #48]
  402a0c:	ldp	x29, x30, [sp], #64
  402a10:	ret
  402a14:	nop

0000000000402a18 <__libc_csu_fini>:
  402a18:	ret

Disassembly of section .fini:

0000000000402a1c <_fini>:
  402a1c:	stp	x29, x30, [sp, #-16]!
  402a20:	mov	x29, sp
  402a24:	ldp	x29, x30, [sp], #16
  402a28:	ret
