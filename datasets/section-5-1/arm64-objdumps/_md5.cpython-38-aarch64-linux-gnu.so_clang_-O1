
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__md5@@Base+0x1110c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0xd4>:
     e20:	adrp	x0, 12000 <PyInit__md5@@Base+0x1110c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 13000 <PyInit__md5@@Base+0x1210c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 12000 <PyInit__md5@@Base+0x1110c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 13000 <PyInit__md5@@Base+0x1210c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 12000 <PyInit__md5@@Base+0x1110c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 13000 <PyInit__md5@@Base+0x1210c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 12000 <PyInit__md5@@Base+0x1110c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__md5@@Base>:
     ef4:	stp	x29, x30, [sp, #-32]!
     ef8:	stp	x20, x19, [sp, #16]
     efc:	mov	x29, sp
     f00:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     f0c:	add	x0, x0, #0x98
     f10:	str	x8, [x0, #8]
     f14:	bl	d80 <PyType_Ready@plt>
     f18:	tbnz	w0, #31, f5c <PyInit__md5@@Base+0x68>
     f1c:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
     f20:	add	x0, x0, #0x238
     f24:	mov	w1, #0x3f5                 	// #1013
     f28:	bl	dc0 <PyModule_Create2@plt>
     f2c:	mov	x19, x0
     f30:	cbz	x0, f60 <PyInit__md5@@Base+0x6c>
     f34:	adrp	x20, 13000 <PyInit__md5@@Base+0x1210c>
     f38:	add	x20, x20, #0x98
     f3c:	mov	x0, x20
     f40:	bl	f70 <PyInit__md5@@Base+0x7c>
     f44:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
     f48:	add	x1, x1, #0x18
     f4c:	mov	x0, x19
     f50:	mov	x2, x20
     f54:	bl	df0 <PyModule_AddObject@plt>
     f58:	b	f60 <PyInit__md5@@Base+0x6c>
     f5c:	mov	x19, xzr
     f60:	mov	x0, x19
     f64:	ldp	x20, x19, [sp, #16]
     f68:	ldp	x29, x30, [sp], #32
     f6c:	ret
     f70:	ldr	x8, [x0]
     f74:	add	x8, x8, #0x1
     f78:	str	x8, [x0]
     f7c:	ret
     f80:	stp	x29, x30, [sp, #-16]!
     f84:	mov	x29, sp
     f88:	bl	d70 <PyObject_Free@plt>
     f8c:	ldp	x29, x30, [sp], #16
     f90:	ret
     f94:	stp	x29, x30, [sp, #-16]!
     f98:	mov	x29, sp
     f9c:	bl	10bc <PyInit__md5@@Base+0x1c8>
     fa0:	ldp	x29, x30, [sp], #16
     fa4:	ret
     fa8:	stp	x29, x30, [sp, #-16]!
     fac:	mov	x29, sp
     fb0:	bl	1114 <PyInit__md5@@Base+0x220>
     fb4:	ldp	x29, x30, [sp], #16
     fb8:	ret
     fbc:	stp	x29, x30, [sp, #-16]!
     fc0:	mov	x29, sp
     fc4:	bl	1c7c <PyInit__md5@@Base+0xd88>
     fc8:	ldp	x29, x30, [sp], #16
     fcc:	ret
     fd0:	sub	sp, sp, #0x70
     fd4:	stp	x29, x30, [sp, #80]
     fd8:	str	x19, [sp, #96]
     fdc:	add	x29, sp, #0x50
     fe0:	ldr	x9, [x1, #8]
     fe4:	ldrb	w10, [x9, #171]
     fe8:	tbnz	w10, #4, 104c <PyInit__md5@@Base+0x158>
     fec:	ldr	x9, [x9, #160]
     ff0:	cbz	x9, 1060 <PyInit__md5@@Base+0x16c>
     ff4:	ldr	x9, [x9]
     ff8:	cbz	x9, 1060 <PyInit__md5@@Base+0x16c>
     ffc:	mov	x8, x1
    1000:	mov	x19, x0
    1004:	mov	x1, sp
    1008:	mov	x0, x8
    100c:	mov	w2, wzr
    1010:	bl	dd0 <PyObject_GetBuffer@plt>
    1014:	cmn	w0, #0x1
    1018:	b.eq	1078 <PyInit__md5@@Base+0x184>  // b.none
    101c:	ldr	w8, [sp, #36]
    1020:	cmp	w8, #0x2
    1024:	b.lt	1090 <PyInit__md5@@Base+0x19c>  // b.tstop
    1028:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    102c:	ldr	x8, [x8, #4024]
    1030:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1034:	add	x1, x1, #0x98
    1038:	ldr	x0, [x8]
    103c:	bl	d60 <PyErr_SetString@plt>
    1040:	mov	x0, sp
    1044:	bl	d10 <PyBuffer_Release@plt>
    1048:	b	1078 <PyInit__md5@@Base+0x184>
    104c:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1050:	ldr	x8, [x8, #4032]
    1054:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1058:	add	x1, x1, #0x3f
    105c:	b	1070 <PyInit__md5@@Base+0x17c>
    1060:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1064:	ldr	x8, [x8, #4032]
    1068:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    106c:	add	x1, x1, #0x6e
    1070:	ldr	x0, [x8]
    1074:	bl	d60 <PyErr_SetString@plt>
    1078:	mov	x19, xzr
    107c:	mov	x0, x19
    1080:	ldr	x19, [sp, #96]
    1084:	ldp	x29, x30, [sp, #80]
    1088:	add	sp, sp, #0x70
    108c:	ret
    1090:	ldr	x1, [sp]
    1094:	ldr	x2, [sp, #16]
    1098:	add	x0, x19, #0x10
    109c:	bl	1cc4 <PyInit__md5@@Base+0xdd0>
    10a0:	mov	x0, sp
    10a4:	bl	d10 <PyBuffer_Release@plt>
    10a8:	adrp	x19, 12000 <PyInit__md5@@Base+0x1110c>
    10ac:	ldr	x19, [x19, #4056]
    10b0:	mov	x0, x19
    10b4:	bl	f70 <PyInit__md5@@Base+0x7c>
    10b8:	b	107c <PyInit__md5@@Base+0x188>
    10bc:	stp	x29, x30, [sp, #-32]!
    10c0:	str	x19, [sp, #16]
    10c4:	mov	x29, sp
    10c8:	mov	x19, x0
    10cc:	bl	10f8 <PyInit__md5@@Base+0x204>
    10d0:	cbz	x0, 10ec <PyInit__md5@@Base+0x1f8>
    10d4:	ldp	q1, q0, [x19, #16]
    10d8:	stp	q1, q0, [x0, #16]
    10dc:	ldp	q1, q0, [x19, #80]
    10e0:	ldp	q3, q2, [x19, #48]
    10e4:	stp	q1, q0, [x0, #80]
    10e8:	stp	q3, q2, [x0, #48]
    10ec:	ldr	x19, [sp, #16]
    10f0:	ldp	x29, x30, [sp], #32
    10f4:	ret
    10f8:	stp	x29, x30, [sp, #-16]!
    10fc:	mov	x29, sp
    1100:	adrp	x0, 13000 <PyInit__md5@@Base+0x1210c>
    1104:	add	x0, x0, #0x98
    1108:	bl	de0 <_PyObject_New@plt>
    110c:	ldp	x29, x30, [sp], #16
    1110:	ret
    1114:	sub	sp, sp, #0x80
    1118:	stp	x29, x30, [sp, #112]
    111c:	add	x29, sp, #0x70
    1120:	ldp	q1, q0, [x0, #16]
    1124:	sub	x1, x29, #0x10
    1128:	stp	q1, q0, [sp]
    112c:	ldp	q1, q0, [x0, #80]
    1130:	ldp	q3, q2, [x0, #48]
    1134:	mov	x0, sp
    1138:	stp	q1, q0, [sp, #64]
    113c:	stp	q3, q2, [sp, #32]
    1140:	bl	115c <PyInit__md5@@Base+0x268>
    1144:	sub	x0, x29, #0x10
    1148:	mov	w1, #0x10                  	// #16
    114c:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1150:	ldp	x29, x30, [sp, #112]
    1154:	add	sp, sp, #0x80
    1158:	ret
    115c:	stp	x29, x30, [sp, #-48]!
    1160:	str	x21, [sp, #16]
    1164:	stp	x20, x19, [sp, #32]
    1168:	mov	x29, sp
    116c:	ldr	w8, [x0, #24]
    1170:	ldr	x9, [x0]
    1174:	mov	x19, x1
    1178:	mov	x20, x0
    117c:	lsl	w11, w8, #3
    1180:	add	w12, w8, #0x1
    1184:	add	x21, x0, #0x1c
    1188:	mov	w10, #0x80                  	// #128
    118c:	add	x9, x9, x11
    1190:	cmp	w12, #0x39
    1194:	str	w12, [x0, #24]
    1198:	str	x9, [x0]
    119c:	strb	w10, [x21, x8]
    11a0:	b.cc	11dc <PyInit__md5@@Base+0x2e8>  // b.lo, b.ul, b.last
    11a4:	ldr	w8, [x20, #24]
    11a8:	cmp	w8, #0x3f
    11ac:	b.hi	11cc <PyInit__md5@@Base+0x2d8>  // b.pmore
    11b0:	add	x9, x20, #0x1c
    11b4:	add	x10, x8, #0x1
    11b8:	str	w10, [x20, #24]
    11bc:	cmp	x10, #0x40
    11c0:	strb	wzr, [x9, x8]
    11c4:	mov	x8, x10
    11c8:	b.ne	11b4 <PyInit__md5@@Base+0x2c0>  // b.any
    11cc:	mov	x0, x20
    11d0:	mov	x1, x21
    11d4:	bl	126c <PyInit__md5@@Base+0x378>
    11d8:	str	wzr, [x20, #24]
    11dc:	ldr	w8, [x20, #24]
    11e0:	cmp	w8, #0x37
    11e4:	b.hi	1204 <PyInit__md5@@Base+0x310>  // b.pmore
    11e8:	add	x9, x20, #0x1c
    11ec:	add	x10, x8, #0x1
    11f0:	str	w10, [x20, #24]
    11f4:	cmp	x10, #0x38
    11f8:	strb	wzr, [x9, x8]
    11fc:	mov	x8, x10
    1200:	b.ne	11ec <PyInit__md5@@Base+0x2f8>  // b.any
    1204:	ldr	x8, [x20]
    1208:	mov	x0, x20
    120c:	mov	x1, x21
    1210:	stur	x8, [x20, #84]
    1214:	bl	126c <PyInit__md5@@Base+0x378>
    1218:	mov	x8, xzr
    121c:	add	x9, x20, #0x8
    1220:	add	x10, x19, #0x3
    1224:	add	x11, x9, x8
    1228:	ldrb	w12, [x11, #3]
    122c:	add	x13, x10, x8
    1230:	add	x8, x8, #0x4
    1234:	cmp	x8, #0x10
    1238:	strb	w12, [x13]
    123c:	ldrh	w12, [x11, #2]
    1240:	sturb	w12, [x13, #-1]
    1244:	ldr	w12, [x11]
    1248:	lsr	w12, w12, #8
    124c:	sturb	w12, [x13, #-2]
    1250:	ldr	w11, [x11]
    1254:	sturb	w11, [x13, #-3]
    1258:	b.ne	1224 <PyInit__md5@@Base+0x330>  // b.any
    125c:	ldp	x20, x19, [sp, #32]
    1260:	ldr	x21, [sp, #16]
    1264:	ldp	x29, x30, [sp], #48
    1268:	ret
    126c:	sub	sp, sp, #0x90
    1270:	str	x27, [sp, #64]
    1274:	stp	x26, x25, [sp, #80]
    1278:	stp	x24, x23, [sp, #96]
    127c:	stp	x22, x21, [sp, #112]
    1280:	stp	x20, x19, [sp, #128]
    1284:	mov	x8, xzr
    1288:	add	x9, x1, #0x3
    128c:	mov	x10, sp
    1290:	add	x11, x9, x8
    1294:	ldur	w11, [x11, #-3]
    1298:	str	w11, [x10, x8]
    129c:	add	x8, x8, #0x4
    12a0:	cmp	x8, #0x40
    12a4:	b.ne	1290 <PyInit__md5@@Base+0x39c>  // b.any
    12a8:	ldp	w11, w8, [x0, #8]
    12ac:	ldp	w9, w10, [x0, #16]
    12b0:	ldp	w3, w13, [sp]
    12b4:	mov	w1, #0xa478                	// #42104
    12b8:	movk	w1, #0xd76a, lsl #16
    12bc:	bic	w25, w10, w8
    12c0:	and	w26, w9, w8
    12c4:	orr	w25, w26, w25
    12c8:	add	w26, w11, w3
    12cc:	add	w25, w26, w25
    12d0:	add	w1, w25, w1
    12d4:	ror	w1, w1, #25
    12d8:	add	w1, w1, w8
    12dc:	bic	w25, w9, w1
    12e0:	and	w26, w8, w1
    12e4:	mov	w4, #0xb756                	// #46934
    12e8:	orr	w25, w26, w25
    12ec:	add	w26, w10, w13
    12f0:	movk	w4, #0xe8c7, lsl #16
    12f4:	add	w25, w26, w25
    12f8:	ldp	w12, w17, [sp, #8]
    12fc:	add	w4, w25, w4
    1300:	ror	w4, w4, #20
    1304:	add	w4, w4, w1
    1308:	bic	w25, w8, w4
    130c:	and	w26, w1, w4
    1310:	mov	w5, #0x70db                	// #28891
    1314:	orr	w25, w26, w25
    1318:	add	w26, w9, w12
    131c:	movk	w5, #0x2420, lsl #16
    1320:	add	w25, w26, w25
    1324:	add	w5, w25, w5
    1328:	ror	w5, w5, #15
    132c:	add	w25, w5, w4
    1330:	bic	w5, w1, w25
    1334:	and	w26, w4, w25
    1338:	mov	w7, #0xceee                	// #52974
    133c:	orr	w5, w26, w5
    1340:	add	w26, w8, w17
    1344:	movk	w7, #0xc1bd, lsl #16
    1348:	add	w5, w26, w5
    134c:	ldp	w14, w2, [sp, #16]
    1350:	add	w5, w5, w7
    1354:	ror	w5, w5, #10
    1358:	add	w7, w5, w25
    135c:	bic	w5, w4, w7
    1360:	and	w26, w25, w7
    1364:	mov	w19, #0xfaf                 	// #4015
    1368:	orr	w5, w26, w5
    136c:	add	w1, w14, w1
    1370:	movk	w19, #0xf57c, lsl #16
    1374:	add	w1, w1, w5
    1378:	add	w1, w1, w19
    137c:	ror	w1, w1, #25
    1380:	add	w19, w1, w7
    1384:	bic	w1, w25, w19
    1388:	and	w5, w7, w19
    138c:	mov	w20, #0xc62a                	// #50730
    1390:	add	w4, w2, w4
    1394:	orr	w1, w5, w1
    1398:	movk	w20, #0x4787, lsl #16
    139c:	add	w1, w4, w1
    13a0:	ldp	w15, w6, [sp, #24]
    13a4:	add	w1, w1, w20
    13a8:	ror	w1, w1, #20
    13ac:	add	w4, w1, w19
    13b0:	bic	w1, w7, w4
    13b4:	and	w5, w19, w4
    13b8:	mov	w21, #0x4613                	// #17939
    13bc:	orr	w20, w5, w1
    13c0:	add	w25, w15, w25
    13c4:	movk	w21, #0xa830, lsl #16
    13c8:	add	w20, w25, w20
    13cc:	add	w20, w20, w21
    13d0:	ror	w20, w20, #15
    13d4:	add	w20, w20, w4
    13d8:	bic	w21, w19, w20
    13dc:	and	w25, w4, w20
    13e0:	mov	w22, #0x9501                	// #38145
    13e4:	orr	w21, w25, w21
    13e8:	add	w7, w6, w7
    13ec:	movk	w22, #0xfd46, lsl #16
    13f0:	add	w7, w7, w21
    13f4:	ldp	w18, w16, [sp, #32]
    13f8:	add	w7, w7, w22
    13fc:	ror	w7, w7, #10
    1400:	add	w7, w7, w20
    1404:	bic	w21, w4, w7
    1408:	and	w22, w20, w7
    140c:	mov	w23, #0x98d8                	// #39128
    1410:	orr	w21, w22, w21
    1414:	add	w19, w18, w19
    1418:	movk	w23, #0x6980, lsl #16
    141c:	add	w19, w19, w21
    1420:	add	w19, w19, w23
    1424:	ror	w19, w19, #25
    1428:	add	w21, w19, w7
    142c:	bic	w19, w20, w21
    1430:	and	w23, w7, w21
    1434:	mov	w24, #0xf7af                	// #63407
    1438:	add	w4, w16, w4
    143c:	orr	w19, w23, w19
    1440:	movk	w24, #0x8b44, lsl #16
    1444:	add	w4, w4, w19
    1448:	ldp	w5, w1, [sp, #40]
    144c:	add	w4, w4, w24
    1450:	ror	w4, w4, #20
    1454:	add	w23, w4, w21
    1458:	bic	w4, w7, w23
    145c:	and	w19, w21, w23
    1460:	orr	w24, w19, w4
    1464:	add	w20, w5, w20
    1468:	mov	w26, #0xffff5bb1            	// #-42063
    146c:	add	w20, w20, w24
    1470:	add	w20, w20, w26
    1474:	ror	w20, w20, #15
    1478:	add	w24, w20, w23
    147c:	bic	w20, w21, w24
    1480:	and	w26, w23, w24
    1484:	mov	w25, #0xd7be                	// #55230
    1488:	orr	w20, w26, w20
    148c:	add	w7, w1, w7
    1490:	movk	w25, #0x895c, lsl #16
    1494:	add	w7, w7, w20
    1498:	ldp	w19, w4, [sp, #48]
    149c:	add	w7, w7, w25
    14a0:	ror	w7, w7, #10
    14a4:	add	w25, w7, w24
    14a8:	bic	w7, w23, w25
    14ac:	and	w20, w24, w25
    14b0:	mov	w22, #0x1122                	// #4386
    14b4:	orr	w7, w20, w7
    14b8:	add	w20, w19, w21
    14bc:	movk	w22, #0x6b90, lsl #16
    14c0:	add	w7, w20, w7
    14c4:	add	w7, w7, w22
    14c8:	ror	w7, w7, #25
    14cc:	add	w22, w7, w25
    14d0:	bic	w7, w24, w22
    14d4:	and	w20, w25, w22
    14d8:	mov	w26, #0x7193                	// #29075
    14dc:	add	w21, w4, w23
    14e0:	orr	w7, w20, w7
    14e4:	movk	w26, #0xfd98, lsl #16
    14e8:	add	w7, w21, w7
    14ec:	add	w7, w7, w26
    14f0:	ror	w7, w7, #20
    14f4:	add	w21, w7, w22
    14f8:	bic	w7, w25, w21
    14fc:	and	w23, w22, w21
    1500:	orr	w23, w23, w7
    1504:	ldp	w20, w7, [sp, #56]
    1508:	mov	w27, #0x438e                	// #17294
    150c:	movk	w27, #0xa679, lsl #16
    1510:	add	w24, w20, w24
    1514:	add	w23, w24, w23
    1518:	add	w23, w23, w27
    151c:	ror	w23, w23, #15
    1520:	add	w23, w23, w21
    1524:	bic	w24, w22, w23
    1528:	and	w26, w21, w23
    152c:	orr	w24, w26, w24
    1530:	mov	w26, #0x821                 	// #2081
    1534:	add	w25, w7, w25
    1538:	movk	w26, #0x49b4, lsl #16
    153c:	add	w24, w25, w24
    1540:	add	w24, w24, w26
    1544:	ror	w24, w24, #10
    1548:	add	w24, w24, w23
    154c:	bic	w25, w23, w21
    1550:	and	w26, w24, w21
    1554:	orr	w25, w26, w25
    1558:	mov	w26, #0x2562                	// #9570
    155c:	add	w22, w13, w22
    1560:	movk	w26, #0xf61e, lsl #16
    1564:	add	w22, w22, w25
    1568:	add	w22, w22, w26
    156c:	ror	w22, w22, #27
    1570:	add	w22, w22, w24
    1574:	bic	w25, w24, w23
    1578:	and	w26, w22, w23
    157c:	orr	w25, w26, w25
    1580:	mov	w26, #0xb340                	// #45888
    1584:	add	w21, w15, w21
    1588:	movk	w26, #0xc040, lsl #16
    158c:	add	w21, w21, w25
    1590:	add	w21, w21, w26
    1594:	ror	w21, w21, #23
    1598:	add	w21, w21, w22
    159c:	bic	w25, w22, w24
    15a0:	and	w26, w21, w24
    15a4:	orr	w25, w26, w25
    15a8:	mov	w26, #0x5a51                	// #23121
    15ac:	add	w23, w1, w23
    15b0:	movk	w26, #0x265e, lsl #16
    15b4:	add	w23, w23, w25
    15b8:	add	w23, w23, w26
    15bc:	ror	w23, w23, #18
    15c0:	add	w23, w23, w21
    15c4:	bic	w25, w21, w22
    15c8:	and	w26, w23, w22
    15cc:	orr	w25, w26, w25
    15d0:	mov	w26, #0xc7aa                	// #51114
    15d4:	add	w24, w3, w24
    15d8:	movk	w26, #0xe9b6, lsl #16
    15dc:	add	w24, w24, w25
    15e0:	add	w24, w24, w26
    15e4:	ror	w24, w24, #12
    15e8:	add	w24, w24, w23
    15ec:	bic	w25, w23, w21
    15f0:	and	w26, w24, w21
    15f4:	orr	w25, w26, w25
    15f8:	mov	w26, #0x105d                	// #4189
    15fc:	add	w22, w2, w22
    1600:	movk	w26, #0xd62f, lsl #16
    1604:	add	w22, w22, w25
    1608:	add	w22, w22, w26
    160c:	ror	w22, w22, #27
    1610:	add	w22, w22, w24
    1614:	bic	w25, w24, w23
    1618:	and	w26, w22, w23
    161c:	orr	w25, w26, w25
    1620:	mov	w26, #0x1453                	// #5203
    1624:	add	w21, w5, w21
    1628:	movk	w26, #0x244, lsl #16
    162c:	add	w21, w21, w25
    1630:	add	w21, w21, w26
    1634:	ror	w21, w21, #23
    1638:	add	w21, w21, w22
    163c:	bic	w25, w22, w24
    1640:	and	w26, w21, w24
    1644:	orr	w25, w26, w25
    1648:	mov	w26, #0xe681                	// #59009
    164c:	add	w23, w7, w23
    1650:	movk	w26, #0xd8a1, lsl #16
    1654:	add	w23, w23, w25
    1658:	add	w23, w23, w26
    165c:	ror	w23, w23, #18
    1660:	add	w23, w23, w21
    1664:	bic	w25, w21, w22
    1668:	and	w26, w23, w22
    166c:	orr	w25, w26, w25
    1670:	mov	w26, #0xfbc8                	// #64456
    1674:	add	w24, w14, w24
    1678:	movk	w26, #0xe7d3, lsl #16
    167c:	add	w24, w24, w25
    1680:	add	w24, w24, w26
    1684:	ror	w24, w24, #12
    1688:	add	w24, w24, w23
    168c:	bic	w25, w23, w21
    1690:	and	w26, w24, w21
    1694:	orr	w25, w26, w25
    1698:	mov	w26, #0xcde6                	// #52710
    169c:	add	w22, w16, w22
    16a0:	movk	w26, #0x21e1, lsl #16
    16a4:	add	w22, w22, w25
    16a8:	add	w22, w22, w26
    16ac:	ror	w22, w22, #27
    16b0:	add	w22, w22, w24
    16b4:	bic	w25, w24, w23
    16b8:	and	w26, w22, w23
    16bc:	orr	w25, w26, w25
    16c0:	mov	w26, #0x7d6                 	// #2006
    16c4:	add	w21, w20, w21
    16c8:	movk	w26, #0xc337, lsl #16
    16cc:	add	w21, w21, w25
    16d0:	add	w21, w21, w26
    16d4:	ror	w21, w21, #23
    16d8:	add	w21, w21, w22
    16dc:	bic	w25, w22, w24
    16e0:	and	w26, w21, w24
    16e4:	orr	w25, w26, w25
    16e8:	mov	w26, #0xd87                 	// #3463
    16ec:	add	w23, w17, w23
    16f0:	movk	w26, #0xf4d5, lsl #16
    16f4:	add	w23, w23, w25
    16f8:	add	w23, w23, w26
    16fc:	ror	w23, w23, #18
    1700:	add	w23, w23, w21
    1704:	bic	w25, w21, w22
    1708:	and	w26, w23, w22
    170c:	orr	w25, w26, w25
    1710:	mov	w26, #0x14ed                	// #5357
    1714:	add	w24, w18, w24
    1718:	movk	w26, #0x455a, lsl #16
    171c:	add	w24, w24, w25
    1720:	add	w24, w24, w26
    1724:	ror	w24, w24, #12
    1728:	add	w24, w24, w23
    172c:	bic	w25, w23, w21
    1730:	and	w26, w24, w21
    1734:	orr	w25, w26, w25
    1738:	mov	w26, #0xe905                	// #59653
    173c:	add	w22, w4, w22
    1740:	movk	w26, #0xa9e3, lsl #16
    1744:	add	w22, w22, w25
    1748:	add	w22, w22, w26
    174c:	ror	w22, w22, #27
    1750:	add	w22, w22, w24
    1754:	bic	w25, w24, w23
    1758:	and	w26, w22, w23
    175c:	orr	w25, w26, w25
    1760:	mov	w26, #0xa3f8                	// #41976
    1764:	add	w21, w12, w21
    1768:	movk	w26, #0xfcef, lsl #16
    176c:	add	w21, w21, w25
    1770:	add	w21, w21, w26
    1774:	ror	w21, w21, #23
    1778:	add	w21, w21, w22
    177c:	bic	w25, w22, w24
    1780:	and	w26, w21, w24
    1784:	orr	w25, w26, w25
    1788:	mov	w26, #0x2d9                 	// #729
    178c:	add	w23, w6, w23
    1790:	movk	w26, #0x676f, lsl #16
    1794:	add	w23, w23, w25
    1798:	add	w23, w23, w26
    179c:	ror	w23, w23, #18
    17a0:	add	w23, w23, w21
    17a4:	eor	w25, w23, w21
    17a8:	and	w26, w25, w22
    17ac:	add	w24, w19, w24
    17b0:	eor	w26, w26, w21
    17b4:	add	w24, w24, w26
    17b8:	mov	w26, #0x4c8a                	// #19594
    17bc:	movk	w26, #0x8d2a, lsl #16
    17c0:	add	w24, w24, w26
    17c4:	ror	w24, w24, #12
    17c8:	add	w24, w24, w23
    17cc:	mov	w26, #0x3942                	// #14658
    17d0:	add	w22, w2, w22
    17d4:	eor	w25, w25, w24
    17d8:	movk	w26, #0xfffa, lsl #16
    17dc:	add	w22, w22, w25
    17e0:	add	w22, w22, w26
    17e4:	ror	w22, w22, #28
    17e8:	eor	w26, w24, w23
    17ec:	add	w22, w22, w24
    17f0:	mov	w25, #0xf681                	// #63105
    17f4:	add	w21, w18, w21
    17f8:	eor	w26, w26, w22
    17fc:	movk	w25, #0x8771, lsl #16
    1800:	add	w21, w21, w26
    1804:	add	w21, w21, w25
    1808:	ror	w21, w21, #21
    180c:	eor	w25, w22, w24
    1810:	add	w21, w21, w22
    1814:	mov	w26, #0x6122                	// #24866
    1818:	add	w23, w1, w23
    181c:	eor	w25, w25, w21
    1820:	movk	w26, #0x6d9d, lsl #16
    1824:	add	w23, w23, w25
    1828:	add	w23, w23, w26
    182c:	ror	w23, w23, #16
    1830:	eor	w26, w21, w22
    1834:	add	w23, w23, w21
    1838:	mov	w25, #0x380c                	// #14348
    183c:	add	w24, w20, w24
    1840:	eor	w26, w26, w23
    1844:	movk	w25, #0xfde5, lsl #16
    1848:	add	w24, w24, w26
    184c:	add	w24, w24, w25
    1850:	ror	w24, w24, #9
    1854:	eor	w25, w23, w21
    1858:	add	w24, w24, w23
    185c:	mov	w26, #0xea44                	// #59972
    1860:	add	w22, w13, w22
    1864:	eor	w25, w25, w24
    1868:	movk	w26, #0xa4be, lsl #16
    186c:	add	w22, w22, w25
    1870:	add	w22, w22, w26
    1874:	ror	w22, w22, #28
    1878:	eor	w26, w24, w23
    187c:	add	w22, w22, w24
    1880:	mov	w25, #0xcfa9                	// #53161
    1884:	add	w21, w14, w21
    1888:	eor	w26, w26, w22
    188c:	movk	w25, #0x4bde, lsl #16
    1890:	add	w21, w21, w26
    1894:	add	w21, w21, w25
    1898:	ror	w21, w21, #21
    189c:	eor	w25, w22, w24
    18a0:	add	w21, w21, w22
    18a4:	mov	w26, #0x4b60                	// #19296
    18a8:	add	w23, w6, w23
    18ac:	eor	w25, w25, w21
    18b0:	movk	w26, #0xf6bb, lsl #16
    18b4:	add	w23, w23, w25
    18b8:	add	w23, w23, w26
    18bc:	ror	w23, w23, #16
    18c0:	eor	w26, w21, w22
    18c4:	add	w23, w23, w21
    18c8:	mov	w25, #0xbc70                	// #48240
    18cc:	add	w24, w5, w24
    18d0:	eor	w26, w26, w23
    18d4:	movk	w25, #0xbebf, lsl #16
    18d8:	add	w24, w24, w26
    18dc:	add	w24, w24, w25
    18e0:	ror	w24, w24, #9
    18e4:	eor	w25, w23, w21
    18e8:	add	w24, w24, w23
    18ec:	mov	w26, #0x7ec6                	// #32454
    18f0:	add	w22, w4, w22
    18f4:	eor	w25, w25, w24
    18f8:	movk	w26, #0x289b, lsl #16
    18fc:	add	w22, w22, w25
    1900:	add	w22, w22, w26
    1904:	ror	w22, w22, #28
    1908:	eor	w26, w24, w23
    190c:	add	w22, w22, w24
    1910:	mov	w25, #0x27fa                	// #10234
    1914:	add	w21, w3, w21
    1918:	eor	w26, w26, w22
    191c:	movk	w25, #0xeaa1, lsl #16
    1920:	add	w21, w21, w26
    1924:	add	w21, w21, w25
    1928:	ror	w21, w21, #21
    192c:	eor	w25, w22, w24
    1930:	add	w21, w21, w22
    1934:	mov	w26, #0x3085                	// #12421
    1938:	add	w23, w17, w23
    193c:	eor	w25, w25, w21
    1940:	movk	w26, #0xd4ef, lsl #16
    1944:	add	w23, w23, w25
    1948:	add	w23, w23, w26
    194c:	ror	w23, w23, #16
    1950:	eor	w26, w21, w22
    1954:	add	w23, w23, w21
    1958:	mov	w25, #0x1d05                	// #7429
    195c:	add	w24, w15, w24
    1960:	eor	w26, w26, w23
    1964:	movk	w25, #0x488, lsl #16
    1968:	add	w24, w24, w26
    196c:	add	w24, w24, w25
    1970:	ror	w24, w24, #9
    1974:	eor	w25, w23, w21
    1978:	add	w24, w24, w23
    197c:	mov	w26, #0xd039                	// #53305
    1980:	add	w22, w16, w22
    1984:	eor	w25, w25, w24
    1988:	movk	w26, #0xd9d4, lsl #16
    198c:	add	w22, w22, w25
    1990:	add	w22, w22, w26
    1994:	ror	w22, w22, #28
    1998:	eor	w26, w24, w23
    199c:	add	w22, w22, w24
    19a0:	mov	w25, #0x99e5                	// #39397
    19a4:	add	w21, w19, w21
    19a8:	eor	w26, w26, w22
    19ac:	movk	w25, #0xe6db, lsl #16
    19b0:	add	w21, w21, w26
    19b4:	add	w21, w21, w25
    19b8:	ror	w21, w21, #21
    19bc:	eor	w25, w22, w24
    19c0:	add	w21, w21, w22
    19c4:	mov	w26, #0x7cf8                	// #31992
    19c8:	add	w23, w7, w23
    19cc:	eor	w25, w25, w21
    19d0:	movk	w26, #0x1fa2, lsl #16
    19d4:	add	w23, w23, w25
    19d8:	add	w23, w23, w26
    19dc:	ror	w23, w23, #16
    19e0:	add	w3, w3, w22
    19e4:	eor	w22, w21, w22
    19e8:	add	w23, w23, w21
    19ec:	mov	w25, #0x5665                	// #22117
    19f0:	add	w24, w12, w24
    19f4:	eor	w22, w22, w23
    19f8:	movk	w25, #0xc4ac, lsl #16
    19fc:	add	w22, w24, w22
    1a00:	add	w22, w22, w25
    1a04:	ror	w22, w22, #9
    1a08:	add	w22, w22, w23
    1a0c:	add	w6, w6, w21
    1a10:	orn	w21, w22, w21
    1a14:	mov	w26, #0x2244                	// #8772
    1a18:	eor	w21, w21, w23
    1a1c:	movk	w26, #0xf429, lsl #16
    1a20:	add	w3, w3, w21
    1a24:	add	w3, w3, w26
    1a28:	ror	w3, w3, #26
    1a2c:	add	w27, w3, w22
    1a30:	orn	w3, w27, w23
    1a34:	mov	w24, #0xff97                	// #65431
    1a38:	eor	w3, w3, w22
    1a3c:	movk	w24, #0x432a, lsl #16
    1a40:	add	w3, w6, w3
    1a44:	add	w20, w20, w23
    1a48:	add	w23, w3, w24
    1a4c:	add	w24, w2, w22
    1a50:	ror	w2, w23, #22
    1a54:	add	w23, w2, w27
    1a58:	orn	w2, w23, w22
    1a5c:	mov	w25, #0x23a7                	// #9127
    1a60:	eor	w2, w2, w27
    1a64:	movk	w25, #0xab94, lsl #16
    1a68:	add	w20, w20, w2
    1a6c:	add	w20, w20, w25
    1a70:	ror	w20, w20, #17
    1a74:	add	w20, w20, w23
    1a78:	orn	w25, w20, w27
    1a7c:	mov	w21, #0xa039                	// #41017
    1a80:	eor	w25, w25, w23
    1a84:	movk	w21, #0xfc93, lsl #16
    1a88:	add	w24, w24, w25
    1a8c:	add	w21, w24, w21
    1a90:	ror	w21, w21, #11
    1a94:	add	w21, w21, w20
    1a98:	add	w17, w17, w23
    1a9c:	orn	w23, w21, w23
    1aa0:	mov	w26, #0x59c3                	// #22979
    1aa4:	add	w19, w19, w27
    1aa8:	eor	w23, w23, w20
    1aac:	movk	w26, #0x655b, lsl #16
    1ab0:	add	w19, w19, w23
    1ab4:	add	w19, w19, w26
    1ab8:	ror	w19, w19, #26
    1abc:	add	w19, w19, w21
    1ac0:	add	w5, w5, w20
    1ac4:	orn	w20, w19, w20
    1ac8:	mov	w6, #0xcc92                	// #52370
    1acc:	eor	w20, w20, w21
    1ad0:	movk	w6, #0x8f0c, lsl #16
    1ad4:	add	w17, w17, w20
    1ad8:	add	w17, w17, w6
    1adc:	ror	w17, w17, #22
    1ae0:	add	w17, w17, w19
    1ae4:	add	w13, w13, w21
    1ae8:	orn	w21, w17, w21
    1aec:	mov	w3, #0xf47d                	// #62589
    1af0:	eor	w21, w21, w19
    1af4:	movk	w3, #0xffef, lsl #16
    1af8:	add	w5, w5, w21
    1afc:	add	w3, w5, w3
    1b00:	ror	w3, w3, #17
    1b04:	add	w3, w3, w17
    1b08:	orn	w5, w3, w19
    1b0c:	mov	w2, #0x5dd1                	// #24017
    1b10:	eor	w5, w5, w17
    1b14:	movk	w2, #0x8584, lsl #16
    1b18:	add	w13, w13, w5
    1b1c:	add	w13, w13, w2
    1b20:	ror	w13, w13, #11
    1b24:	add	w13, w13, w3
    1b28:	add	w7, w7, w17
    1b2c:	orn	w17, w13, w17
    1b30:	mov	w22, #0x7e4f                	// #32335
    1b34:	add	w18, w18, w19
    1b38:	eor	w17, w17, w3
    1b3c:	movk	w22, #0x6fa8, lsl #16
    1b40:	add	w17, w18, w17
    1b44:	add	w17, w17, w22
    1b48:	ror	w17, w17, #26
    1b4c:	add	w17, w17, w13
    1b50:	orn	w18, w17, w3
    1b54:	mov	w25, #0xe6e0                	// #59104
    1b58:	eor	w18, w18, w13
    1b5c:	movk	w25, #0xfe2c, lsl #16
    1b60:	add	w18, w7, w18
    1b64:	add	w18, w18, w25
    1b68:	ror	w18, w18, #22
    1b6c:	add	w18, w18, w17
    1b70:	add	w2, w4, w13
    1b74:	orn	w13, w18, w13
    1b78:	mov	w24, #0x4314                	// #17172
    1b7c:	add	w15, w15, w3
    1b80:	eor	w13, w13, w17
    1b84:	movk	w24, #0xa301, lsl #16
    1b88:	add	w13, w15, w13
    1b8c:	add	w13, w13, w24
    1b90:	ror	w13, w13, #17
    1b94:	add	w13, w13, w18
    1b98:	orn	w15, w13, w17
    1b9c:	mov	w23, #0x11a1                	// #4513
    1ba0:	eor	w15, w15, w18
    1ba4:	movk	w23, #0x4e08, lsl #16
    1ba8:	add	w15, w2, w15
    1bac:	add	w15, w15, w23
    1bb0:	ror	w15, w15, #11
    1bb4:	add	w15, w15, w13
    1bb8:	add	w14, w14, w17
    1bbc:	orn	w17, w15, w18
    1bc0:	mov	w26, #0x7e82                	// #32386
    1bc4:	eor	w17, w17, w13
    1bc8:	movk	w26, #0xf753, lsl #16
    1bcc:	add	w14, w14, w17
    1bd0:	add	w14, w14, w26
    1bd4:	ror	w14, w14, #26
    1bd8:	add	w14, w14, w15
    1bdc:	add	w12, w12, w13
    1be0:	orn	w13, w14, w13
    1be4:	mov	w20, #0xf235                	// #62005
    1be8:	add	w1, w1, w18
    1bec:	eor	w13, w13, w15
    1bf0:	movk	w20, #0xbd3a, lsl #16
    1bf4:	add	w13, w1, w13
    1bf8:	add	w13, w13, w20
    1bfc:	ror	w13, w13, #22
    1c00:	add	w13, w13, w14
    1c04:	add	w16, w16, w15
    1c08:	orn	w15, w13, w15
    1c0c:	mov	w6, #0xd2bb                	// #53947
    1c10:	eor	w15, w15, w14
    1c14:	movk	w6, #0x2ad7, lsl #16
    1c18:	add	w12, w12, w15
    1c1c:	add	w12, w12, w6
    1c20:	ror	w12, w12, #17
    1c24:	add	w12, w12, w13
    1c28:	add	w11, w14, w11
    1c2c:	orn	w14, w12, w14
    1c30:	mov	w21, #0xd391                	// #54161
    1c34:	add	w8, w12, w8
    1c38:	add	w9, w12, w9
    1c3c:	eor	w12, w14, w13
    1c40:	movk	w21, #0xeb86, lsl #16
    1c44:	add	w12, w16, w12
    1c48:	add	w12, w12, w21
    1c4c:	ror	w12, w12, #11
    1c50:	add	w10, w13, w10
    1c54:	add	w8, w8, w12
    1c58:	stp	w11, w8, [x0, #8]
    1c5c:	stp	w9, w10, [x0, #16]
    1c60:	ldp	x20, x19, [sp, #128]
    1c64:	ldp	x22, x21, [sp, #112]
    1c68:	ldp	x24, x23, [sp, #96]
    1c6c:	ldp	x26, x25, [sp, #80]
    1c70:	ldr	x27, [sp, #64]
    1c74:	add	sp, sp, #0x90
    1c78:	ret
    1c7c:	sub	sp, sp, #0x80
    1c80:	stp	x29, x30, [sp, #112]
    1c84:	add	x29, sp, #0x70
    1c88:	ldp	q1, q0, [x0, #16]
    1c8c:	sub	x1, x29, #0x10
    1c90:	stp	q1, q0, [sp]
    1c94:	ldp	q1, q0, [x0, #80]
    1c98:	ldp	q3, q2, [x0, #48]
    1c9c:	mov	x0, sp
    1ca0:	stp	q1, q0, [sp, #64]
    1ca4:	stp	q3, q2, [sp, #32]
    1ca8:	bl	115c <PyInit__md5@@Base+0x268>
    1cac:	sub	x0, x29, #0x10
    1cb0:	mov	w1, #0x10                  	// #16
    1cb4:	bl	e10 <_Py_strhex@plt>
    1cb8:	ldp	x29, x30, [sp, #112]
    1cbc:	add	sp, sp, #0x80
    1cc0:	ret
    1cc4:	stp	x29, x30, [sp, #-80]!
    1cc8:	str	x25, [sp, #16]
    1ccc:	stp	x24, x23, [sp, #32]
    1cd0:	stp	x22, x21, [sp, #48]
    1cd4:	stp	x20, x19, [sp, #64]
    1cd8:	mov	x29, sp
    1cdc:	cmp	x2, #0x1
    1ce0:	b.lt	1d84 <PyInit__md5@@Base+0xe90>  // b.tstop
    1ce4:	mov	x22, x2
    1ce8:	mov	x19, x1
    1cec:	mov	x20, x0
    1cf0:	add	x21, x0, #0x1c
    1cf4:	mov	w24, #0x40                  	// #64
    1cf8:	b	1d24 <PyInit__md5@@Base+0xe30>
    1cfc:	mov	x0, x20
    1d00:	mov	x1, x19
    1d04:	bl	126c <PyInit__md5@@Base+0x378>
    1d08:	ldr	x8, [x20]
    1d0c:	add	x19, x19, #0x40
    1d10:	mov	x22, x23
    1d14:	add	x8, x8, #0x200
    1d18:	str	x8, [x20]
    1d1c:	cmp	x22, #0x0
    1d20:	b.le	1d84 <PyInit__md5@@Base+0xe90>
    1d24:	ldr	w25, [x20, #24]
    1d28:	subs	x23, x22, #0x40
    1d2c:	b.lt	1d34 <PyInit__md5@@Base+0xe40>  // b.tstop
    1d30:	cbz	w25, 1cfc <PyInit__md5@@Base+0xe08>
    1d34:	sub	w8, w24, w25
    1d38:	cmp	x22, x8
    1d3c:	add	x9, x20, x25
    1d40:	csel	x23, x8, x22, gt
    1d44:	add	x0, x9, #0x1c
    1d48:	mov	x1, x19
    1d4c:	mov	x2, x23
    1d50:	bl	d00 <memcpy@plt>
    1d54:	add	w8, w25, w23
    1d58:	add	x19, x19, x23
    1d5c:	cmp	w8, #0x40
    1d60:	sub	x22, x22, x23
    1d64:	str	w8, [x20, #24]
    1d68:	b.ne	1d1c <PyInit__md5@@Base+0xe28>  // b.any
    1d6c:	mov	x0, x20
    1d70:	mov	x1, x21
    1d74:	bl	126c <PyInit__md5@@Base+0x378>
    1d78:	ldr	x8, [x20]
    1d7c:	str	wzr, [x20, #24]
    1d80:	b	1d14 <PyInit__md5@@Base+0xe20>
    1d84:	ldp	x20, x19, [sp, #64]
    1d88:	ldp	x22, x21, [sp, #48]
    1d8c:	ldp	x24, x23, [sp, #32]
    1d90:	ldr	x25, [sp, #16]
    1d94:	ldp	x29, x30, [sp], #80
    1d98:	ret
    1d9c:	stp	x29, x30, [sp, #-16]!
    1da0:	mov	x29, sp
    1da4:	mov	w0, #0x40                  	// #64
    1da8:	bl	d90 <PyLong_FromLong@plt>
    1dac:	ldp	x29, x30, [sp], #16
    1db0:	ret
    1db4:	stp	x29, x30, [sp, #-16]!
    1db8:	mov	x29, sp
    1dbc:	adrp	x0, 2000 <PyInit__md5@@Base+0x110c>
    1dc0:	add	x0, x0, #0x25
    1dc4:	mov	w1, #0x3                   	// #3
    1dc8:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    1dcc:	ldp	x29, x30, [sp], #16
    1dd0:	ret
    1dd4:	stp	x29, x30, [sp, #-16]!
    1dd8:	mov	x29, sp
    1ddc:	mov	w0, #0x10                  	// #16
    1de0:	bl	d90 <PyLong_FromLong@plt>
    1de4:	ldp	x29, x30, [sp], #16
    1de8:	ret
    1dec:	sub	sp, sp, #0x30
    1df0:	stp	x29, x30, [sp, #16]
    1df4:	stp	x20, x19, [sp, #32]
    1df8:	add	x29, sp, #0x10
    1dfc:	mov	x19, x2
    1e00:	cbz	x3, 1e10 <PyInit__md5@@Base+0xf1c>
    1e04:	ldr	x20, [x3, #16]
    1e08:	cbnz	x1, 1e18 <PyInit__md5@@Base+0xf24>
    1e0c:	b	1e38 <PyInit__md5@@Base+0xf44>
    1e10:	mov	x20, xzr
    1e14:	cbz	x1, 1e38 <PyInit__md5@@Base+0xf44>
    1e18:	cmp	x19, #0x1
    1e1c:	b.hi	1e38 <PyInit__md5@@Base+0xf44>  // b.pmore
    1e20:	cbnz	x3, 1e38 <PyInit__md5@@Base+0xf44>
    1e24:	cbz	x1, 1e6c <PyInit__md5@@Base+0xf78>
    1e28:	cmn	x20, x19
    1e2c:	b.ne	1e74 <PyInit__md5@@Base+0xf80>  // b.any
    1e30:	mov	x0, xzr
    1e34:	b	1e78 <PyInit__md5@@Base+0xf84>
    1e38:	adrp	x4, 13000 <PyInit__md5@@Base+0x1210c>
    1e3c:	add	x8, sp, #0x8
    1e40:	add	x4, x4, #0x420
    1e44:	mov	w6, #0x1                   	// #1
    1e48:	mov	x0, x1
    1e4c:	mov	x1, x19
    1e50:	mov	x2, xzr
    1e54:	mov	w5, wzr
    1e58:	mov	w7, wzr
    1e5c:	str	x8, [sp]
    1e60:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1e64:	mov	x1, x0
    1e68:	cbnz	x1, 1e28 <PyInit__md5@@Base+0xf34>
    1e6c:	mov	x0, xzr
    1e70:	b	1e7c <PyInit__md5@@Base+0xf88>
    1e74:	ldr	x0, [x1]
    1e78:	bl	1e8c <PyInit__md5@@Base+0xf98>
    1e7c:	ldp	x20, x19, [sp, #32]
    1e80:	ldp	x29, x30, [sp, #16]
    1e84:	add	sp, sp, #0x30
    1e88:	ret
    1e8c:	sub	sp, sp, #0x80
    1e90:	stp	x29, x30, [sp, #80]
    1e94:	str	x21, [sp, #96]
    1e98:	stp	x20, x19, [sp, #112]
    1e9c:	add	x29, sp, #0x50
    1ea0:	mov	x19, x0
    1ea4:	cbz	x0, 1f04 <PyInit__md5@@Base+0x1010>
    1ea8:	ldr	x8, [x19, #8]
    1eac:	ldrb	w9, [x8, #171]
    1eb0:	tbnz	w9, #4, 1f34 <PyInit__md5@@Base+0x1040>
    1eb4:	ldr	x8, [x8, #160]
    1eb8:	cbz	x8, 1f48 <PyInit__md5@@Base+0x1054>
    1ebc:	ldr	x8, [x8]
    1ec0:	cbz	x8, 1f48 <PyInit__md5@@Base+0x1054>
    1ec4:	mov	x1, sp
    1ec8:	mov	x0, x19
    1ecc:	mov	w2, wzr
    1ed0:	bl	dd0 <PyObject_GetBuffer@plt>
    1ed4:	cmn	w0, #0x1
    1ed8:	b.eq	1f70 <PyInit__md5@@Base+0x107c>  // b.none
    1edc:	ldr	w8, [sp, #36]
    1ee0:	cmp	w8, #0x2
    1ee4:	b.lt	1f04 <PyInit__md5@@Base+0x1010>  // b.tstop
    1ee8:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1eec:	ldr	x8, [x8, #4024]
    1ef0:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1ef4:	add	x1, x1, #0x98
    1ef8:	ldr	x0, [x8]
    1efc:	bl	d60 <PyErr_SetString@plt>
    1f00:	b	1f68 <PyInit__md5@@Base+0x1074>
    1f04:	bl	10f8 <PyInit__md5@@Base+0x204>
    1f08:	cbz	x0, 1f64 <PyInit__md5@@Base+0x1070>
    1f0c:	add	x21, x0, #0x10
    1f10:	mov	x20, x0
    1f14:	mov	x0, x21
    1f18:	bl	1fac <PyInit__md5@@Base+0x10b8>
    1f1c:	bl	db0 <PyErr_Occurred@plt>
    1f20:	cbz	x0, 1f8c <PyInit__md5@@Base+0x1098>
    1f24:	mov	x0, x20
    1f28:	bl	1fdc <PyInit__md5@@Base+0x10e8>
    1f2c:	cbnz	x19, 1f68 <PyInit__md5@@Base+0x1074>
    1f30:	b	1f70 <PyInit__md5@@Base+0x107c>
    1f34:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1f38:	ldr	x8, [x8, #4032]
    1f3c:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1f40:	add	x1, x1, #0x3f
    1f44:	b	1f58 <PyInit__md5@@Base+0x1064>
    1f48:	adrp	x8, 12000 <PyInit__md5@@Base+0x1110c>
    1f4c:	ldr	x8, [x8, #4032]
    1f50:	adrp	x1, 2000 <PyInit__md5@@Base+0x110c>
    1f54:	add	x1, x1, #0x6e
    1f58:	ldr	x0, [x8]
    1f5c:	bl	d60 <PyErr_SetString@plt>
    1f60:	b	1f70 <PyInit__md5@@Base+0x107c>
    1f64:	cbz	x19, 1f70 <PyInit__md5@@Base+0x107c>
    1f68:	mov	x0, sp
    1f6c:	bl	d10 <PyBuffer_Release@plt>
    1f70:	mov	x20, xzr
    1f74:	mov	x0, x20
    1f78:	ldp	x20, x19, [sp, #112]
    1f7c:	ldr	x21, [sp, #96]
    1f80:	ldp	x29, x30, [sp, #80]
    1f84:	add	sp, sp, #0x80
    1f88:	ret
    1f8c:	cbz	x19, 1f74 <PyInit__md5@@Base+0x1080>
    1f90:	ldr	x1, [sp]
    1f94:	ldr	x2, [sp, #16]
    1f98:	mov	x0, x21
    1f9c:	bl	1cc4 <PyInit__md5@@Base+0xdd0>
    1fa0:	mov	x0, sp
    1fa4:	bl	d10 <PyBuffer_Release@plt>
    1fa8:	b	1f74 <PyInit__md5@@Base+0x1080>
    1fac:	mov	x8, #0x2301                	// #8961
    1fb0:	mov	x9, #0xdcfe                	// #56574
    1fb4:	movk	x8, #0x6745, lsl #16
    1fb8:	movk	x9, #0x98ba, lsl #16
    1fbc:	movk	x8, #0xab89, lsl #32
    1fc0:	movk	x9, #0x5476, lsl #32
    1fc4:	movk	x8, #0xefcd, lsl #48
    1fc8:	movk	x9, #0x1032, lsl #48
    1fcc:	str	wzr, [x0, #24]
    1fd0:	stp	x8, x9, [x0, #8]
    1fd4:	str	xzr, [x0]
    1fd8:	ret
    1fdc:	stp	x29, x30, [sp, #-16]!
    1fe0:	mov	x29, sp
    1fe4:	ldr	x8, [x0]
    1fe8:	subs	x8, x8, #0x1
    1fec:	str	x8, [x0]
    1ff0:	b.eq	1ffc <PyInit__md5@@Base+0x1108>  // b.none
    1ff4:	ldp	x29, x30, [sp], #16
    1ff8:	ret
    1ffc:	bl	d40 <_Py_Dealloc@plt>
    2000:	ldp	x29, x30, [sp], #16
    2004:	ret

Disassembly of section .fini:

0000000000002008 <.fini>:
    2008:	stp	x29, x30, [sp, #-16]!
    200c:	mov	x29, sp
    2010:	ldp	x29, x30, [sp], #16
    2014:	ret
