
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//select.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001e98 <.init>:
    1e98:	stp	x29, x30, [sp, #-16]!
    1e9c:	mov	x29, sp
    1ea0:	bl	2240 <PySequence_Fast@plt+0x10>
    1ea4:	ldp	x29, x30, [sp], #16
    1ea8:	ret

Disassembly of section .plt:

0000000000001eb0 <PyList_New@plt-0x20>:
    1eb0:	stp	x16, x30, [sp, #-16]!
    1eb4:	adrp	x16, 16000 <PyInit_select@@Base+0x11d38>
    1eb8:	ldr	x17, [x16, #4088]
    1ebc:	add	x16, x16, #0xff8
    1ec0:	br	x17
    1ec4:	nop
    1ec8:	nop
    1ecc:	nop

0000000000001ed0 <PyList_New@plt>:
    1ed0:	adrp	x16, 17000 <PyList_New>
    1ed4:	ldr	x17, [x16]
    1ed8:	add	x16, x16, #0x0
    1edc:	br	x17

0000000000001ee0 <PyModule_AddIntConstant@plt>:
    1ee0:	adrp	x16, 17000 <PyList_New>
    1ee4:	ldr	x17, [x16, #8]
    1ee8:	add	x16, x16, #0x8
    1eec:	br	x17

0000000000001ef0 <_PyTime_FromMillisecondsObject@plt>:
    1ef0:	adrp	x16, 17000 <PyList_New>
    1ef4:	ldr	x17, [x16, #16]
    1ef8:	add	x16, x16, #0x10
    1efc:	br	x17

0000000000001f00 <PyEval_RestoreThread@plt>:
    1f00:	adrp	x16, 17000 <PyList_New>
    1f04:	ldr	x17, [x16, #24]
    1f08:	add	x16, x16, #0x18
    1f0c:	br	x17

0000000000001f10 <PyMem_Free@plt>:
    1f10:	adrp	x16, 17000 <PyList_New>
    1f14:	ldr	x17, [x16, #32]
    1f18:	add	x16, x16, #0x20
    1f1c:	br	x17

0000000000001f20 <PyErr_SetFromErrno@plt>:
    1f20:	adrp	x16, 17000 <PyList_New>
    1f24:	ldr	x17, [x16, #40]
    1f28:	add	x16, x16, #0x28
    1f2c:	br	x17

0000000000001f30 <__cxa_finalize@plt>:
    1f30:	adrp	x16, 17000 <PyList_New>
    1f34:	ldr	x17, [x16, #48]
    1f38:	add	x16, x16, #0x30
    1f3c:	br	x17

0000000000001f40 <_Py_Dealloc@plt>:
    1f40:	adrp	x16, 17000 <PyList_New>
    1f44:	ldr	x17, [x16, #56]
    1f48:	add	x16, x16, #0x38
    1f4c:	br	x17

0000000000001f50 <PyErr_NoMemory@plt>:
    1f50:	adrp	x16, 17000 <PyList_New>
    1f54:	ldr	x17, [x16, #64]
    1f58:	add	x16, x16, #0x40
    1f5c:	br	x17

0000000000001f60 <_PyArg_UnpackKeywords@plt>:
    1f60:	adrp	x16, 17000 <PyList_New>
    1f64:	ldr	x17, [x16, #72]
    1f68:	add	x16, x16, #0x48
    1f6c:	br	x17

0000000000001f70 <PyErr_SetString@plt>:
    1f70:	adrp	x16, 17000 <PyList_New>
    1f74:	ldr	x17, [x16, #80]
    1f78:	add	x16, x16, #0x50
    1f7c:	br	x17

0000000000001f80 <poll@plt>:
    1f80:	adrp	x16, 17000 <PyList_New>
    1f84:	ldr	x17, [x16, #88]
    1f88:	add	x16, x16, #0x58
    1f8c:	br	x17

0000000000001f90 <PyMem_Realloc@plt>:
    1f90:	adrp	x16, 17000 <PyList_New>
    1f94:	ldr	x17, [x16, #96]
    1f98:	add	x16, x16, #0x60
    1f9c:	br	x17

0000000000001fa0 <PyErr_ExceptionMatches@plt>:
    1fa0:	adrp	x16, 17000 <PyList_New>
    1fa4:	ldr	x17, [x16, #104]
    1fa8:	add	x16, x16, #0x68
    1fac:	br	x17

0000000000001fb0 <_PyTime_FromSecondsObject@plt>:
    1fb0:	adrp	x16, 17000 <PyList_New>
    1fb4:	ldr	x17, [x16, #112]
    1fb8:	add	x16, x16, #0x70
    1fbc:	br	x17

0000000000001fc0 <PyObject_Free@plt>:
    1fc0:	adrp	x16, 17000 <PyList_New>
    1fc4:	ldr	x17, [x16, #120]
    1fc8:	add	x16, x16, #0x78
    1fcc:	br	x17

0000000000001fd0 <_PyTime_AsMilliseconds@plt>:
    1fd0:	adrp	x16, 17000 <PyList_New>
    1fd4:	ldr	x17, [x16, #128]
    1fd8:	add	x16, x16, #0x80
    1fdc:	br	x17

0000000000001fe0 <PyType_Ready@plt>:
    1fe0:	adrp	x16, 17000 <PyList_New>
    1fe4:	ldr	x17, [x16, #136]
    1fe8:	add	x16, x16, #0x88
    1fec:	br	x17

0000000000001ff0 <PyLong_FromLong@plt>:
    1ff0:	adrp	x16, 17000 <PyList_New>
    1ff4:	ldr	x17, [x16, #144]
    1ff8:	add	x16, x16, #0x90
    1ffc:	br	x17

0000000000002000 <epoll_wait@plt>:
    2000:	adrp	x16, 17000 <PyList_New>
    2004:	ldr	x17, [x16, #152]
    2008:	add	x16, x16, #0x98
    200c:	br	x17

0000000000002010 <close@plt>:
    2010:	adrp	x16, 17000 <PyList_New>
    2014:	ldr	x17, [x16, #160]
    2018:	add	x16, x16, #0xa0
    201c:	br	x17

0000000000002020 <PyLong_AsUnsignedLongMask@plt>:
    2020:	adrp	x16, 17000 <PyList_New>
    2024:	ldr	x17, [x16, #168]
    2028:	add	x16, x16, #0xa8
    202c:	br	x17

0000000000002030 <__gmon_start__@plt>:
    2030:	adrp	x16, 17000 <PyList_New>
    2034:	ldr	x17, [x16, #176]
    2038:	add	x16, x16, #0xb0
    203c:	br	x17

0000000000002040 <PyTuple_New@plt>:
    2040:	adrp	x16, 17000 <PyList_New>
    2044:	ldr	x17, [x16, #184]
    2048:	add	x16, x16, #0xb8
    204c:	br	x17

0000000000002050 <_PyArg_CheckPositional@plt>:
    2050:	adrp	x16, 17000 <PyList_New>
    2054:	ldr	x17, [x16, #192]
    2058:	add	x16, x16, #0xc0
    205c:	br	x17

0000000000002060 <PyDict_DelItem@plt>:
    2060:	adrp	x16, 17000 <PyList_New>
    2064:	ldr	x17, [x16, #200]
    2068:	add	x16, x16, #0xc8
    206c:	br	x17

0000000000002070 <Py_BuildValue@plt>:
    2070:	adrp	x16, 17000 <PyList_New>
    2074:	ldr	x17, [x16, #208]
    2078:	add	x16, x16, #0xd0
    207c:	br	x17

0000000000002080 <PyErr_Occurred@plt>:
    2080:	adrp	x16, 17000 <PyList_New>
    2084:	ldr	x17, [x16, #216]
    2088:	add	x16, x16, #0xd8
    208c:	br	x17

0000000000002090 <PyModule_Create2@plt>:
    2090:	adrp	x16, 17000 <PyList_New>
    2094:	ldr	x17, [x16, #224]
    2098:	add	x16, x16, #0xe0
    209c:	br	x17

00000000000020a0 <PyLong_AsLong@plt>:
    20a0:	adrp	x16, 17000 <PyList_New>
    20a4:	ldr	x17, [x16, #232]
    20a8:	add	x16, x16, #0xe8
    20ac:	br	x17

00000000000020b0 <_PyTime_AsTimeval_noraise@plt>:
    20b0:	adrp	x16, 17000 <PyList_New>
    20b4:	ldr	x17, [x16, #240]
    20b8:	add	x16, x16, #0xf0
    20bc:	br	x17

00000000000020c0 <PyList_SetItem@plt>:
    20c0:	adrp	x16, 17000 <PyList_New>
    20c4:	ldr	x17, [x16, #248]
    20c8:	add	x16, x16, #0xf8
    20cc:	br	x17

00000000000020d0 <epoll_create1@plt>:
    20d0:	adrp	x16, 17000 <PyList_New>
    20d4:	ldr	x17, [x16, #256]
    20d8:	add	x16, x16, #0x100
    20dc:	br	x17

00000000000020e0 <_PyObject_CallMethodId@plt>:
    20e0:	adrp	x16, 17000 <PyList_New>
    20e4:	ldr	x17, [x16, #264]
    20e8:	add	x16, x16, #0x108
    20ec:	br	x17

00000000000020f0 <_PyLong_UnsignedShort_Converter@plt>:
    20f0:	adrp	x16, 17000 <PyList_New>
    20f4:	ldr	x17, [x16, #272]
    20f8:	add	x16, x16, #0x110
    20fc:	br	x17

0000000000002100 <PyDict_New@plt>:
    2100:	adrp	x16, 17000 <PyList_New>
    2104:	ldr	x17, [x16, #280]
    2108:	add	x16, x16, #0x118
    210c:	br	x17

0000000000002110 <PyDict_Next@plt>:
    2110:	adrp	x16, 17000 <PyList_New>
    2114:	ldr	x17, [x16, #288]
    2118:	add	x16, x16, #0x120
    211c:	br	x17

0000000000002120 <epoll_ctl@plt>:
    2120:	adrp	x16, 17000 <PyList_New>
    2124:	ldr	x17, [x16, #296]
    2128:	add	x16, x16, #0x128
    212c:	br	x17

0000000000002130 <_PyObject_New@plt>:
    2130:	adrp	x16, 17000 <PyList_New>
    2134:	ldr	x17, [x16, #304]
    2138:	add	x16, x16, #0x130
    213c:	br	x17

0000000000002140 <PyEval_SaveThread@plt>:
    2140:	adrp	x16, 17000 <PyList_New>
    2144:	ldr	x17, [x16, #312]
    2148:	add	x16, x16, #0x138
    214c:	br	x17

0000000000002150 <PyModule_AddObject@plt>:
    2150:	adrp	x16, 17000 <PyList_New>
    2154:	ldr	x17, [x16, #320]
    2158:	add	x16, x16, #0x140
    215c:	br	x17

0000000000002160 <PyDict_SetItem@plt>:
    2160:	adrp	x16, 17000 <PyList_New>
    2164:	ldr	x17, [x16, #328]
    2168:	add	x16, x16, #0x148
    216c:	br	x17

0000000000002170 <select@plt>:
    2170:	adrp	x16, 17000 <PyList_New>
    2174:	ldr	x17, [x16, #336]
    2178:	add	x16, x16, #0x150
    217c:	br	x17

0000000000002180 <PyObject_AsFileDescriptor@plt>:
    2180:	adrp	x16, 17000 <PyList_New>
    2184:	ldr	x17, [x16, #344]
    2188:	add	x16, x16, #0x158
    218c:	br	x17

0000000000002190 <_PyTime_AsTimeval@plt>:
    2190:	adrp	x16, 17000 <PyList_New>
    2194:	ldr	x17, [x16, #352]
    2198:	add	x16, x16, #0x160
    219c:	br	x17

00000000000021a0 <PyErr_CheckSignals@plt>:
    21a0:	adrp	x16, 17000 <PyList_New>
    21a4:	ldr	x17, [x16, #360]
    21a8:	add	x16, x16, #0x168
    21ac:	br	x17

00000000000021b0 <PyType_IsSubtype@plt>:
    21b0:	adrp	x16, 17000 <PyList_New>
    21b4:	ldr	x17, [x16, #368]
    21b8:	add	x16, x16, #0x170
    21bc:	br	x17

00000000000021c0 <PyErr_Format@plt>:
    21c0:	adrp	x16, 17000 <PyList_New>
    21c4:	ldr	x17, [x16, #376]
    21c8:	add	x16, x16, #0x178
    21cc:	br	x17

00000000000021d0 <__errno_location@plt>:
    21d0:	adrp	x16, 17000 <PyList_New>
    21d4:	ldr	x17, [x16, #384]
    21d8:	add	x16, x16, #0x180
    21dc:	br	x17

00000000000021e0 <_PyLong_AsInt@plt>:
    21e0:	adrp	x16, 17000 <PyList_New>
    21e4:	ldr	x17, [x16, #392]
    21e8:	add	x16, x16, #0x188
    21ec:	br	x17

00000000000021f0 <PyMem_Malloc@plt>:
    21f0:	adrp	x16, 17000 <PyList_New>
    21f4:	ldr	x17, [x16, #400]
    21f8:	add	x16, x16, #0x190
    21fc:	br	x17

0000000000002200 <_PyTime_GetMonotonicClock@plt>:
    2200:	adrp	x16, 17000 <PyList_New>
    2204:	ldr	x17, [x16, #408]
    2208:	add	x16, x16, #0x198
    220c:	br	x17

0000000000002210 <PyTuple_Pack@plt>:
    2210:	adrp	x16, 17000 <PyList_New>
    2214:	ldr	x17, [x16, #416]
    2218:	add	x16, x16, #0x1a0
    221c:	br	x17

0000000000002220 <PyDict_GetItemWithError@plt>:
    2220:	adrp	x16, 17000 <PyList_New>
    2224:	ldr	x17, [x16, #424]
    2228:	add	x16, x16, #0x1a8
    222c:	br	x17

0000000000002230 <PySequence_Fast@plt>:
    2230:	adrp	x16, 17000 <PyList_New>
    2234:	ldr	x17, [x16, #432]
    2238:	add	x16, x16, #0x1b0
    223c:	br	x17

Disassembly of section .text:

0000000000002240 <PyInit_select@@Base-0x2088>:
    2240:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2244:	ldr	x0, [x0, #4016]
    2248:	cbz	x0, 2250 <PySequence_Fast@plt+0x20>
    224c:	b	2030 <__gmon_start__@plt>
    2250:	ret
    2254:	nop
    2258:	adrp	x0, 17000 <PyInit_select@@Base+0x12d38>
    225c:	add	x0, x0, #0x950
    2260:	adrp	x1, 17000 <PyInit_select@@Base+0x12d38>
    2264:	add	x1, x1, #0x950
    2268:	cmp	x1, x0
    226c:	b.eq	2284 <PySequence_Fast@plt+0x54>  // b.none
    2270:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    2274:	ldr	x1, [x1, #3952]
    2278:	cbz	x1, 2284 <PySequence_Fast@plt+0x54>
    227c:	mov	x16, x1
    2280:	br	x16
    2284:	ret
    2288:	adrp	x0, 17000 <PyInit_select@@Base+0x12d38>
    228c:	add	x0, x0, #0x950
    2290:	adrp	x1, 17000 <PyInit_select@@Base+0x12d38>
    2294:	add	x1, x1, #0x950
    2298:	sub	x1, x1, x0
    229c:	lsr	x2, x1, #63
    22a0:	add	x1, x2, x1, asr #3
    22a4:	cmp	xzr, x1, asr #1
    22a8:	asr	x1, x1, #1
    22ac:	b.eq	22c4 <PySequence_Fast@plt+0x94>  // b.none
    22b0:	adrp	x2, 16000 <PyInit_select@@Base+0x11d38>
    22b4:	ldr	x2, [x2, #4056]
    22b8:	cbz	x2, 22c4 <PySequence_Fast@plt+0x94>
    22bc:	mov	x16, x2
    22c0:	br	x16
    22c4:	ret
    22c8:	stp	x29, x30, [sp, #-32]!
    22cc:	mov	x29, sp
    22d0:	str	x19, [sp, #16]
    22d4:	adrp	x19, 17000 <PyInit_select@@Base+0x12d38>
    22d8:	ldrb	w0, [x19, #2384]
    22dc:	cbnz	w0, 2304 <PySequence_Fast@plt+0xd4>
    22e0:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    22e4:	ldr	x0, [x0, #3968]
    22e8:	cbz	x0, 22f8 <PySequence_Fast@plt+0xc8>
    22ec:	adrp	x0, 17000 <PyInit_select@@Base+0x12d38>
    22f0:	ldr	x0, [x0, #440]
    22f4:	bl	1f30 <__cxa_finalize@plt>
    22f8:	bl	2258 <PySequence_Fast@plt+0x28>
    22fc:	mov	w0, #0x1                   	// #1
    2300:	strb	w0, [x19, #2384]
    2304:	ldr	x19, [sp, #16]
    2308:	ldp	x29, x30, [sp], #32
    230c:	ret
    2310:	b	2288 <PySequence_Fast@plt+0x58>
    2314:	nop
    2318:	stp	x29, x30, [sp, #-32]!
    231c:	cmp	x2, #0x3
    2320:	mov	x29, sp
    2324:	str	x19, [sp, #16]
    2328:	mov	x19, x0
    232c:	b.ls	234c <PySequence_Fast@plt+0x11c>  // b.plast
    2330:	mov	x1, x2
    2334:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    2338:	mov	x3, #0x3                   	// #3
    233c:	add	x0, x0, #0x5d0
    2340:	mov	x2, #0x0                   	// #0
    2344:	bl	2050 <_PyArg_CheckPositional@plt>
    2348:	cbz	w0, 2368 <PySequence_Fast@plt+0x138>
    234c:	mov	x0, x19
    2350:	adrp	x1, 17000 <PyInit_select@@Base+0x12d38>
    2354:	ldr	x19, [sp, #16]
    2358:	add	x1, x1, #0x360
    235c:	ldp	x29, x30, [sp], #32
    2360:	mov	x2, #0x0                   	// #0
    2364:	b	20e0 <_PyObject_CallMethodId@plt>
    2368:	mov	x0, #0x0                   	// #0
    236c:	ldr	x19, [sp, #16]
    2370:	ldp	x29, x30, [sp], #32
    2374:	ret
    2378:	stp	x29, x30, [sp, #-112]!
    237c:	cmp	x2, #0x1
    2380:	mov	x29, sp
    2384:	stp	x19, x20, [sp, #16]
    2388:	mov	x20, x2
    238c:	mov	x19, x0
    2390:	stp	x21, x22, [sp, #32]
    2394:	mov	x21, x1
    2398:	stp	x23, x24, [sp, #48]
    239c:	b.hi	254c <PySequence_Fast@plt+0x31c>  // b.pmore
    23a0:	cmp	x20, #0x0
    23a4:	b.le	2620 <PySequence_Fast@plt+0x3f0>
    23a8:	adrp	x2, 16000 <PyInit_select@@Base+0x11d38>
    23ac:	mov	x20, #0xffffffffffffffff    	// #-1
    23b0:	ldr	x1, [x21]
    23b4:	str	x20, [sp, #80]
    23b8:	ldr	x2, [x2, #4040]
    23bc:	cmp	x1, x2
    23c0:	b.eq	2634 <PySequence_Fast@plt+0x404>  // b.none
    23c4:	add	x0, sp, #0x50
    23c8:	mov	w2, #0x3                   	// #3
    23cc:	bl	1ef0 <_PyTime_FromMillisecondsObject@plt>
    23d0:	tbnz	w0, #31, 2700 <PySequence_Fast@plt+0x4d0>
    23d4:	ldr	x0, [sp, #80]
    23d8:	mov	w1, #0x3                   	// #3
    23dc:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    23e0:	mov	x20, x0
    23e4:	mov	x0, #0x80000000            	// #2147483648
    23e8:	add	x0, x20, x0
    23ec:	mov	x1, #0xffffffff            	// #4294967295
    23f0:	cmp	x0, x1
    23f4:	b.hi	2748 <PySequence_Fast@plt+0x518>  // b.pmore
    23f8:	ldr	x0, [sp, #80]
    23fc:	mov	x24, #0x0                   	// #0
    2400:	tbnz	x0, #63, 2410 <PySequence_Fast@plt+0x1e0>
    2404:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2408:	ldr	x1, [sp, #80]
    240c:	add	x24, x0, x1
    2410:	cmp	x20, #0x0
    2414:	csinv	x20, x20, xzr, ge  // ge = tcont
    2418:	ldr	w22, [x19, #40]
    241c:	cbnz	w22, 26e0 <PySequence_Fast@plt+0x4b0>
    2420:	ldr	w0, [x19, #24]
    2424:	stp	x25, x26, [sp, #64]
    2428:	cbz	w0, 25e4 <PySequence_Fast@plt+0x3b4>
    242c:	mov	w0, #0x1                   	// #1
    2430:	str	w0, [x19, #40]
    2434:	bl	21d0 <__errno_location@plt>
    2438:	mov	x25, x0
    243c:	b	2450 <PySequence_Fast@plt+0x220>
    2440:	bl	21a0 <PyErr_CheckSignals@plt>
    2444:	cbnz	w0, 25b4 <PySequence_Fast@plt+0x384>
    2448:	ldr	x0, [sp, #80]
    244c:	tbz	x0, #63, 25c4 <PySequence_Fast@plt+0x394>
    2450:	bl	2140 <PyEval_SaveThread@plt>
    2454:	mov	x23, x0
    2458:	ldr	x0, [x19, #32]
    245c:	str	wzr, [x25]
    2460:	mov	w2, w20
    2464:	ldrsw	x1, [x19, #28]
    2468:	bl	1f80 <poll@plt>
    246c:	mov	w21, w0
    2470:	mov	x0, x23
    2474:	bl	1f00 <PyEval_RestoreThread@plt>
    2478:	ldr	w0, [x25]
    247c:	cmp	w0, #0x4
    2480:	b.eq	2440 <PySequence_Fast@plt+0x210>  // b.none
    2484:	str	wzr, [x19, #40]
    2488:	tbnz	w21, #31, 272c <PySequence_Fast@plt+0x4fc>
    248c:	sxtw	x0, w21
    2490:	bl	1ed0 <PyList_New@plt>
    2494:	mov	x24, x0
    2498:	cbz	x0, 25ac <PySequence_Fast@plt+0x37c>
    249c:	cbz	w21, 2530 <PySequence_Fast@plt+0x300>
    24a0:	sub	w21, w21, #0x1
    24a4:	mov	x25, #0x0                   	// #0
    24a8:	add	x21, x21, #0x1
    24ac:	lsl	x21, x21, #3
    24b0:	ldr	x0, [x19, #32]
    24b4:	sbfiz	x23, x22, #3, #32
    24b8:	add	x1, x0, x23
    24bc:	ldrsh	w1, [x1, #6]
    24c0:	cbnz	w1, 24dc <PySequence_Fast@plt+0x2ac>
    24c4:	nop
    24c8:	add	w22, w22, #0x1
    24cc:	sbfiz	x23, x22, #3, #32
    24d0:	add	x1, x0, x23
    24d4:	ldrsh	w1, [x1, #6]
    24d8:	cbz	w1, 24c8 <PySequence_Fast@plt+0x298>
    24dc:	mov	x0, #0x2                   	// #2
    24e0:	bl	2040 <PyTuple_New@plt>
    24e4:	mov	x20, x0
    24e8:	cbz	x0, 259c <PySequence_Fast@plt+0x36c>
    24ec:	ldr	x0, [x19, #32]
    24f0:	ldrsw	x0, [x0, x23]
    24f4:	bl	1ff0 <PyLong_FromLong@plt>
    24f8:	cbz	x0, 2584 <PySequence_Fast@plt+0x354>
    24fc:	ldr	x1, [x19, #32]
    2500:	str	x0, [x20, #24]
    2504:	add	x23, x1, x23
    2508:	ldrh	w0, [x23, #6]
    250c:	bl	1ff0 <PyLong_FromLong@plt>
    2510:	cbz	x0, 2584 <PySequence_Fast@plt+0x354>
    2514:	ldr	x1, [x24, #24]
    2518:	str	x0, [x20, #32]
    251c:	add	w22, w22, #0x1
    2520:	str	x20, [x1, x25]
    2524:	add	x25, x25, #0x8
    2528:	cmp	x21, x25
    252c:	b.ne	24b0 <PySequence_Fast@plt+0x280>  // b.any
    2530:	mov	x0, x24
    2534:	ldp	x19, x20, [sp, #16]
    2538:	ldp	x21, x22, [sp, #32]
    253c:	ldp	x23, x24, [sp, #48]
    2540:	ldp	x25, x26, [sp, #64]
    2544:	ldp	x29, x30, [sp], #112
    2548:	ret
    254c:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    2550:	mov	x1, x20
    2554:	add	x0, x0, #0xa00
    2558:	mov	x3, #0x1                   	// #1
    255c:	mov	x2, #0x0                   	// #0
    2560:	bl	2050 <_PyArg_CheckPositional@plt>
    2564:	cbnz	w0, 23a0 <PySequence_Fast@plt+0x170>
    2568:	mov	x24, #0x0                   	// #0
    256c:	mov	x0, x24
    2570:	ldp	x19, x20, [sp, #16]
    2574:	ldp	x21, x22, [sp, #32]
    2578:	ldp	x23, x24, [sp, #48]
    257c:	ldp	x29, x30, [sp], #112
    2580:	ret
    2584:	ldr	x0, [x20]
    2588:	sub	x0, x0, #0x1
    258c:	str	x0, [x20]
    2590:	cbnz	x0, 259c <PySequence_Fast@plt+0x36c>
    2594:	mov	x0, x20
    2598:	bl	1f40 <_Py_Dealloc@plt>
    259c:	ldr	x0, [x24]
    25a0:	sub	x0, x0, #0x1
    25a4:	str	x0, [x24]
    25a8:	cbz	x0, 263c <PySequence_Fast@plt+0x40c>
    25ac:	ldp	x25, x26, [sp, #64]
    25b0:	b	2568 <PySequence_Fast@plt+0x338>
    25b4:	str	wzr, [x19, #40]
    25b8:	tbz	w21, #31, 248c <PySequence_Fast@plt+0x25c>
    25bc:	ldp	x25, x26, [sp, #64]
    25c0:	b	2568 <PySequence_Fast@plt+0x338>
    25c4:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    25c8:	sub	x0, x24, x0
    25cc:	str	x0, [sp, #80]
    25d0:	tbnz	x0, #63, 2768 <PySequence_Fast@plt+0x538>
    25d4:	mov	w1, #0x1                   	// #1
    25d8:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    25dc:	mov	x20, x0
    25e0:	b	2450 <PySequence_Fast@plt+0x220>
    25e4:	ldr	x0, [x19, #16]
    25e8:	ldr	x21, [x19, #32]
    25ec:	ldr	x1, [x0, #16]
    25f0:	str	w1, [x19, #28]
    25f4:	tbz	w1, #31, 2664 <PySequence_Fast@plt+0x434>
    25f8:	str	x21, [x19, #32]
    25fc:	mov	x24, #0x0                   	// #0
    2600:	bl	1f50 <PyErr_NoMemory@plt>
    2604:	mov	x0, x24
    2608:	ldp	x19, x20, [sp, #16]
    260c:	ldp	x21, x22, [sp, #32]
    2610:	ldp	x23, x24, [sp, #48]
    2614:	ldp	x25, x26, [sp, #64]
    2618:	ldp	x29, x30, [sp], #112
    261c:	ret
    2620:	mov	x0, #0xffffffffffffffff    	// #-1
    2624:	mov	x24, #0x0                   	// #0
    2628:	mov	x20, x0
    262c:	str	x0, [sp, #80]
    2630:	b	2418 <PySequence_Fast@plt+0x1e8>
    2634:	mov	x24, #0x0                   	// #0
    2638:	b	2418 <PySequence_Fast@plt+0x1e8>
    263c:	mov	x0, x24
    2640:	mov	x24, #0x0                   	// #0
    2644:	bl	1f40 <_Py_Dealloc@plt>
    2648:	mov	x0, x24
    264c:	ldp	x19, x20, [sp, #16]
    2650:	ldp	x21, x22, [sp, #32]
    2654:	ldp	x23, x24, [sp, #48]
    2658:	ldp	x25, x26, [sp, #64]
    265c:	ldp	x29, x30, [sp], #112
    2660:	ret
    2664:	sbfiz	x1, x1, #3, #32
    2668:	mov	x0, x21
    266c:	bl	1f90 <PyMem_Realloc@plt>
    2670:	str	x0, [x19, #32]
    2674:	cbz	x0, 25f8 <PySequence_Fast@plt+0x3c8>
    2678:	add	x26, sp, #0x68
    267c:	add	x25, sp, #0x60
    2680:	add	x23, sp, #0x58
    2684:	mov	x21, #0x0                   	// #0
    2688:	str	xzr, [sp, #88]
    268c:	b	26bc <PySequence_Fast@plt+0x48c>
    2690:	ldr	x0, [sp, #96]
    2694:	bl	20a0 <PyLong_AsLong@plt>
    2698:	mov	x2, x0
    269c:	ldr	x1, [x19, #32]
    26a0:	ldr	x0, [sp, #104]
    26a4:	str	w2, [x1, x21]
    26a8:	bl	20a0 <PyLong_AsLong@plt>
    26ac:	ldr	x1, [x19, #32]
    26b0:	add	x1, x1, x21
    26b4:	add	x21, x21, #0x8
    26b8:	strh	w0, [x1, #4]
    26bc:	ldr	x0, [x19, #16]
    26c0:	mov	x3, x26
    26c4:	mov	x2, x25
    26c8:	mov	x1, x23
    26cc:	bl	2110 <PyDict_Next@plt>
    26d0:	cbnz	w0, 2690 <PySequence_Fast@plt+0x460>
    26d4:	mov	w0, #0x1                   	// #1
    26d8:	str	w0, [x19, #24]
    26dc:	b	242c <PySequence_Fast@plt+0x1fc>
    26e0:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    26e4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    26e8:	mov	x24, #0x0                   	// #0
    26ec:	add	x1, x1, #0x620
    26f0:	ldr	x0, [x0, #3976]
    26f4:	ldr	x0, [x0]
    26f8:	bl	1f70 <PyErr_SetString@plt>
    26fc:	b	256c <PySequence_Fast@plt+0x33c>
    2700:	adrp	x19, 16000 <PyInit_select@@Base+0x11d38>
    2704:	ldr	x19, [x19, #3992]
    2708:	ldr	x0, [x19]
    270c:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    2710:	cbz	w0, 2568 <PySequence_Fast@plt+0x338>
    2714:	ldr	x0, [x19]
    2718:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    271c:	mov	x24, #0x0                   	// #0
    2720:	add	x1, x1, #0x5e0
    2724:	bl	1f70 <PyErr_SetString@plt>
    2728:	b	256c <PySequence_Fast@plt+0x33c>
    272c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2730:	mov	x24, #0x0                   	// #0
    2734:	ldr	x0, [x0, #4000]
    2738:	ldr	x0, [x0]
    273c:	bl	1f20 <PyErr_SetFromErrno@plt>
    2740:	ldp	x25, x26, [sp, #64]
    2744:	b	256c <PySequence_Fast@plt+0x33c>
    2748:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    274c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2750:	mov	x24, #0x0                   	// #0
    2754:	add	x1, x1, #0x608
    2758:	ldr	x0, [x0, #4024]
    275c:	ldr	x0, [x0]
    2760:	bl	1f70 <PyErr_SetString@plt>
    2764:	b	256c <PySequence_Fast@plt+0x33c>
    2768:	str	wzr, [x19, #40]
    276c:	mov	x0, #0x0                   	// #0
    2770:	bl	1ed0 <PyList_New@plt>
    2774:	mov	x24, x0
    2778:	ldp	x25, x26, [sp, #64]
    277c:	b	256c <PySequence_Fast@plt+0x33c>
    2780:	stp	x29, x30, [sp, #-32]!
    2784:	mov	x29, sp
    2788:	str	x19, [sp, #16]
    278c:	mov	x19, x0
    2790:	ldr	x0, [x0, #32]
    2794:	cbz	x0, 279c <PySequence_Fast@plt+0x56c>
    2798:	bl	1f10 <PyMem_Free@plt>
    279c:	ldr	x0, [x19, #16]
    27a0:	cbz	x0, 27b4 <PySequence_Fast@plt+0x584>
    27a4:	ldr	x1, [x0]
    27a8:	sub	x1, x1, #0x1
    27ac:	str	x1, [x0]
    27b0:	cbz	x1, 27c4 <PySequence_Fast@plt+0x594>
    27b4:	mov	x0, x19
    27b8:	ldr	x19, [sp, #16]
    27bc:	ldp	x29, x30, [sp], #32
    27c0:	b	1fc0 <PyObject_Free@plt>
    27c4:	bl	1f40 <_Py_Dealloc@plt>
    27c8:	mov	x0, x19
    27cc:	ldr	x19, [sp, #16]
    27d0:	ldp	x29, x30, [sp], #32
    27d4:	b	1fc0 <PyObject_Free@plt>
    27d8:	stp	x29, x30, [sp, #-32]!
    27dc:	adrp	x0, 17000 <PyInit_select@@Base+0x12d38>
    27e0:	add	x0, x0, #0x360
    27e4:	mov	x29, sp
    27e8:	add	x0, x0, #0x18
    27ec:	str	x19, [sp, #16]
    27f0:	bl	2130 <_PyObject_New@plt>
    27f4:	cbz	x0, 2834 <PySequence_Fast@plt+0x604>
    27f8:	mov	x19, x0
    27fc:	str	wzr, [x0, #24]
    2800:	str	xzr, [x0, #32]
    2804:	str	wzr, [x0, #40]
    2808:	bl	2100 <PyDict_New@plt>
    280c:	str	x0, [x19, #16]
    2810:	cbz	x0, 2824 <PySequence_Fast@plt+0x5f4>
    2814:	mov	x0, x19
    2818:	ldr	x19, [sp, #16]
    281c:	ldp	x29, x30, [sp], #32
    2820:	ret
    2824:	ldr	x0, [x19]
    2828:	sub	x0, x0, #0x1
    282c:	str	x0, [x19]
    2830:	cbz	x0, 2848 <PySequence_Fast@plt+0x618>
    2834:	mov	x19, #0x0                   	// #0
    2838:	mov	x0, x19
    283c:	ldr	x19, [sp, #16]
    2840:	ldp	x29, x30, [sp], #32
    2844:	ret
    2848:	mov	x0, x19
    284c:	mov	x19, #0x0                   	// #0
    2850:	bl	1f40 <_Py_Dealloc@plt>
    2854:	b	2814 <PySequence_Fast@plt+0x5e4>
    2858:	stp	x29, x30, [sp, #-96]!
    285c:	mov	x29, sp
    2860:	str	x27, [sp, #80]
    2864:	mov	x27, x1
    2868:	stp	x19, x20, [sp, #16]
    286c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2870:	mov	x19, x2
    2874:	stp	x25, x26, [sp, #64]
    2878:	add	x1, x1, #0x640
    287c:	str	xzr, [x2]
    2880:	stp	xzr, xzr, [x27]
    2884:	stp	xzr, xzr, [x27, #16]
    2888:	stp	xzr, xzr, [x27, #32]
    288c:	stp	xzr, xzr, [x27, #48]
    2890:	stp	xzr, xzr, [x27, #64]
    2894:	stp	xzr, xzr, [x27, #80]
    2898:	stp	xzr, xzr, [x27, #96]
    289c:	stp	xzr, xzr, [x27, #112]
    28a0:	bl	2230 <PySequence_Fast@plt>
    28a4:	cbz	x0, 2980 <PySequence_Fast@plt+0x750>
    28a8:	mov	x25, x0
    28ac:	ldr	x0, [x0, #16]
    28b0:	cmp	x0, #0x0
    28b4:	b.le	2a4c <PySequence_Fast@plt+0x81c>
    28b8:	mov	w26, #0xffffffff            	// #-1
    28bc:	stp	x21, x22, [sp, #32]
    28c0:	mov	x21, #0x0                   	// #0
    28c4:	mov	x22, #0x1                   	// #1
    28c8:	stp	x23, x24, [sp, #48]
    28cc:	add	x24, x25, #0x18
    28d0:	mov	w23, w26
    28d4:	b	2950 <PySequence_Fast@plt+0x720>
    28d8:	ldr	x0, [x25, #24]
    28dc:	ldr	x20, [x0, x21, lsl #3]
    28e0:	mov	x0, x20
    28e4:	cbz	x20, 2968 <PySequence_Fast@plt+0x738>
    28e8:	ldr	x2, [x20]
    28ec:	add	x2, x2, #0x1
    28f0:	str	x2, [x20]
    28f4:	bl	2180 <PyObject_AsFileDescriptor@plt>
    28f8:	cmn	w0, #0x1
    28fc:	b.eq	29b4 <PySequence_Fast@plt+0x784>  // b.none
    2900:	asr	w2, w0, #6
    2904:	cmp	w0, #0x3ff
    2908:	lsl	x1, x22, x0
    290c:	b.hi	299c <PySequence_Fast@plt+0x76c>  // b.pmore
    2910:	sxtw	x2, w2
    2914:	cmp	w26, w0
    2918:	csel	w26, w26, w0, ge  // ge = tcont
    291c:	cmp	x21, #0x400
    2920:	add	x21, x21, #0x1
    2924:	ldr	x3, [x27, x2, lsl #3]
    2928:	orr	x3, x3, x1
    292c:	str	x3, [x27, x2, lsl #3]
    2930:	b.eq	2a30 <PySequence_Fast@plt+0x800>  // b.none
    2934:	ldr	x1, [x25, #16]
    2938:	str	x20, [x19]
    293c:	stp	w0, wzr, [x19, #8]
    2940:	add	x19, x19, #0x10
    2944:	str	w23, [x19, #12]
    2948:	cmp	x1, x21
    294c:	b.le	2a08 <PySequence_Fast@plt+0x7d8>
    2950:	ldr	x0, [x25, #8]
    2954:	ldr	x0, [x0, #168]
    2958:	tbnz	w0, #25, 28d8 <PySequence_Fast@plt+0x6a8>
    295c:	ldr	x20, [x24, x21, lsl #3]
    2960:	mov	x0, x20
    2964:	cbnz	x20, 28e8 <PySequence_Fast@plt+0x6b8>
    2968:	ldr	x0, [x25]
    296c:	sub	x0, x0, #0x1
    2970:	str	x0, [x25]
    2974:	cbz	x0, 29dc <PySequence_Fast@plt+0x7ac>
    2978:	ldp	x21, x22, [sp, #32]
    297c:	ldp	x23, x24, [sp, #48]
    2980:	mov	w26, #0xffffffff            	// #-1
    2984:	mov	w0, w26
    2988:	ldp	x19, x20, [sp, #16]
    298c:	ldp	x25, x26, [sp, #64]
    2990:	ldr	x27, [sp, #80]
    2994:	ldp	x29, x30, [sp], #96
    2998:	ret
    299c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    29a0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    29a4:	add	x1, x1, #0x660
    29a8:	ldr	x0, [x0, #3984]
    29ac:	ldr	x0, [x0]
    29b0:	bl	1f70 <PyErr_SetString@plt>
    29b4:	ldr	x0, [x20]
    29b8:	sub	x0, x0, #0x1
    29bc:	str	x0, [x20]
    29c0:	cbnz	x0, 2968 <PySequence_Fast@plt+0x738>
    29c4:	mov	x0, x20
    29c8:	bl	1f40 <_Py_Dealloc@plt>
    29cc:	ldr	x0, [x25]
    29d0:	sub	x0, x0, #0x1
    29d4:	str	x0, [x25]
    29d8:	cbnz	x0, 2978 <PySequence_Fast@plt+0x748>
    29dc:	mov	x0, x25
    29e0:	mov	w26, #0xffffffff            	// #-1
    29e4:	bl	1f40 <_Py_Dealloc@plt>
    29e8:	mov	w0, w26
    29ec:	ldp	x19, x20, [sp, #16]
    29f0:	ldp	x21, x22, [sp, #32]
    29f4:	ldp	x23, x24, [sp, #48]
    29f8:	ldp	x25, x26, [sp, #64]
    29fc:	ldr	x27, [sp, #80]
    2a00:	ldp	x29, x30, [sp], #96
    2a04:	ret
    2a08:	ldp	x21, x22, [sp, #32]
    2a0c:	add	w26, w26, #0x1
    2a10:	ldp	x23, x24, [sp, #48]
    2a14:	ldr	x0, [x25]
    2a18:	sub	x0, x0, #0x1
    2a1c:	str	x0, [x25]
    2a20:	cbnz	x0, 2984 <PySequence_Fast@plt+0x754>
    2a24:	mov	x0, x25
    2a28:	bl	1f40 <_Py_Dealloc@plt>
    2a2c:	b	2984 <PySequence_Fast@plt+0x754>
    2a30:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2a34:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2a38:	add	x1, x1, #0x688
    2a3c:	ldr	x0, [x0, #3984]
    2a40:	ldr	x0, [x0]
    2a44:	bl	1f70 <PyErr_SetString@plt>
    2a48:	b	29b4 <PySequence_Fast@plt+0x784>
    2a4c:	mov	w26, #0x0                   	// #0
    2a50:	b	2a14 <PySequence_Fast@plt+0x7e4>
    2a54:	nop
    2a58:	stp	x29, x30, [sp, #-64]!
    2a5c:	mov	x29, sp
    2a60:	stp	x21, x22, [sp, #32]
    2a64:	mov	x21, x0
    2a68:	ldr	w0, [x1, #12]
    2a6c:	stp	x19, x20, [sp, #16]
    2a70:	mov	x20, x1
    2a74:	stp	x23, x24, [sp, #48]
    2a78:	tbnz	w0, #31, 2b9c <PySequence_Fast@plt+0x96c>
    2a7c:	mov	x4, x1
    2a80:	mov	w0, #0x0                   	// #0
    2a84:	mov	w1, #0x0                   	// #0
    2a88:	mov	x6, #0x1                   	// #1
    2a8c:	nop
    2a90:	ldr	w3, [x4, #8]
    2a94:	add	w1, w1, #0x1
    2a98:	negs	w2, w3
    2a9c:	and	w5, w3, #0x3f
    2aa0:	and	w2, w2, #0x3f
    2aa4:	add	w4, w3, #0x3f
    2aa8:	csneg	w2, w5, w2, mi  // mi = first
    2aac:	cmp	w3, #0x0
    2ab0:	csel	w3, w4, w3, lt  // lt = tstop
    2ab4:	add	x4, x20, w1, sxtw #4
    2ab8:	lsl	x2, x6, x2
    2abc:	asr	w3, w3, #6
    2ac0:	ldr	w5, [x4, #12]
    2ac4:	ldr	x3, [x21, w3, sxtw #3]
    2ac8:	tst	x2, x3
    2acc:	cinc	w0, w0, ne  // ne = any
    2ad0:	tbz	w5, #31, 2a90 <PySequence_Fast@plt+0x860>
    2ad4:	sxtw	x0, w0
    2ad8:	bl	1ed0 <PyList_New@plt>
    2adc:	mov	x24, x0
    2ae0:	cbz	x0, 2b70 <PySequence_Fast@plt+0x940>
    2ae4:	ldr	w0, [x20, #12]
    2ae8:	tbnz	w0, #31, 2b74 <PySequence_Fast@plt+0x944>
    2aec:	mov	x5, x20
    2af0:	mov	w19, #0x0                   	// #0
    2af4:	mov	w23, #0x0                   	// #0
    2af8:	mov	x22, #0x1                   	// #1
    2afc:	b	2b0c <PySequence_Fast@plt+0x8dc>
    2b00:	add	x5, x20, w19, sxtw #4
    2b04:	ldr	w1, [x5, #12]
    2b08:	tbnz	w1, #31, 2b74 <PySequence_Fast@plt+0x944>
    2b0c:	ldr	w2, [x5, #8]
    2b10:	add	w19, w19, #0x1
    2b14:	cmp	w2, #0x0
    2b18:	add	w4, w2, #0x3f
    2b1c:	csel	w4, w4, w2, lt  // lt = tstop
    2b20:	negs	w3, w2
    2b24:	and	w3, w3, #0x3f
    2b28:	and	w2, w2, #0x3f
    2b2c:	asr	w4, w4, #6
    2b30:	csneg	w2, w2, w3, mi  // mi = first
    2b34:	lsl	x2, x22, x2
    2b38:	ldr	x1, [x21, w4, sxtw #3]
    2b3c:	tst	x2, x1
    2b40:	b.eq	2b00 <PySequence_Fast@plt+0x8d0>  // b.none
    2b44:	ldr	x2, [x5]
    2b48:	str	xzr, [x5]
    2b4c:	sxtw	x1, w23
    2b50:	mov	x0, x24
    2b54:	add	w23, w23, #0x1
    2b58:	bl	20c0 <PyList_SetItem@plt>
    2b5c:	tbz	w0, #31, 2b00 <PySequence_Fast@plt+0x8d0>
    2b60:	ldr	x0, [x24]
    2b64:	sub	x0, x0, #0x1
    2b68:	str	x0, [x24]
    2b6c:	cbz	x0, 2b8c <PySequence_Fast@plt+0x95c>
    2b70:	mov	x24, #0x0                   	// #0
    2b74:	mov	x0, x24
    2b78:	ldp	x19, x20, [sp, #16]
    2b7c:	ldp	x21, x22, [sp, #32]
    2b80:	ldp	x23, x24, [sp, #48]
    2b84:	ldp	x29, x30, [sp], #64
    2b88:	ret
    2b8c:	mov	x0, x24
    2b90:	mov	x24, #0x0                   	// #0
    2b94:	bl	1f40 <_Py_Dealloc@plt>
    2b98:	b	2b74 <PySequence_Fast@plt+0x944>
    2b9c:	mov	x0, #0x0                   	// #0
    2ba0:	b	2ad8 <PySequence_Fast@plt+0x8a8>
    2ba4:	nop
    2ba8:	ldr	w0, [x0, #16]
    2bac:	tbnz	w0, #31, 2bcc <PySequence_Fast@plt+0x99c>
    2bb0:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    2bb4:	ldr	x1, [x1, #4008]
    2bb8:	mov	x0, x1
    2bbc:	ldr	x2, [x1]
    2bc0:	add	x2, x2, #0x1
    2bc4:	str	x2, [x1]
    2bc8:	ret
    2bcc:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    2bd0:	ldr	x1, [x1, #4048]
    2bd4:	mov	x0, x1
    2bd8:	ldr	x2, [x1]
    2bdc:	add	x2, x2, #0x1
    2be0:	str	x2, [x1]
    2be4:	ret
    2be8:	mov	x1, x0
    2bec:	ldr	w0, [x0, #16]
    2bf0:	tbnz	w0, #31, 2c08 <PySequence_Fast@plt+0x9d8>
    2bf4:	ldr	x2, [x1]
    2bf8:	mov	x0, x1
    2bfc:	add	x2, x2, #0x1
    2c00:	str	x2, [x1]
    2c04:	ret
    2c08:	stp	x29, x30, [sp, #-16]!
    2c0c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2c10:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2c14:	mov	x29, sp
    2c18:	ldr	x0, [x0, #3984]
    2c1c:	add	x1, x1, #0x6b0
    2c20:	ldr	x0, [x0]
    2c24:	bl	1f70 <PyErr_SetString@plt>
    2c28:	mov	x0, #0x0                   	// #0
    2c2c:	ldp	x29, x30, [sp], #16
    2c30:	ret
    2c34:	nop
    2c38:	sub	sp, sp, #0x60
    2c3c:	stp	x29, x30, [sp, #16]
    2c40:	add	x29, sp, #0x10
    2c44:	stp	x19, x20, [sp, #32]
    2c48:	add	x19, x1, #0x18
    2c4c:	stp	x21, x22, [sp, #48]
    2c50:	mov	x21, x0
    2c54:	ldr	x1, [x1, #16]
    2c58:	cbz	x2, 2d7c <PySequence_Fast@plt+0xb4c>
    2c5c:	ldr	x20, [x2, #16]
    2c60:	add	x20, x1, x20
    2c64:	add	x0, sp, #0x50
    2c68:	str	x0, [sp]
    2c6c:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    2c70:	add	x4, x4, #0x360
    2c74:	mov	x0, x19
    2c78:	add	x4, x4, #0x1b8
    2c7c:	mov	w7, #0x0                   	// #0
    2c80:	mov	w6, #0x2                   	// #2
    2c84:	mov	w5, #0x0                   	// #0
    2c88:	mov	x3, #0x0                   	// #0
    2c8c:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2c90:	mov	x19, x0
    2c94:	cbz	x0, 2ddc <PySequence_Fast@plt+0xbac>
    2c98:	cbz	x20, 2d28 <PySequence_Fast@plt+0xaf8>
    2c9c:	ldr	x0, [x19]
    2ca0:	str	x23, [sp, #64]
    2ca4:	cbz	x0, 2dc4 <PySequence_Fast@plt+0xb94>
    2ca8:	adrp	x22, 16000 <PyInit_select@@Base+0x11d38>
    2cac:	ldr	x0, [x0, #8]
    2cb0:	ldr	x1, [x22, #3960]
    2cb4:	cmp	x0, x1
    2cb8:	b.eq	2d8c <PySequence_Fast@plt+0xb5c>  // b.none
    2cbc:	bl	21b0 <PyType_IsSubtype@plt>
    2cc0:	cbnz	w0, 2d8c <PySequence_Fast@plt+0xb5c>
    2cc4:	ldr	x0, [x19]
    2cc8:	bl	21e0 <_PyLong_AsInt@plt>
    2ccc:	mov	w23, w0
    2cd0:	cmn	w0, #0x1
    2cd4:	b.eq	2dd0 <PySequence_Fast@plt+0xba0>  // b.none
    2cd8:	cmp	x20, #0x1
    2cdc:	b.eq	2e84 <PySequence_Fast@plt+0xc54>  // b.none
    2ce0:	ldr	x0, [x19, #8]
    2ce4:	ldr	x1, [x22, #3960]
    2ce8:	ldr	x0, [x0, #8]
    2cec:	cmp	x0, x1
    2cf0:	b.eq	2d8c <PySequence_Fast@plt+0xb5c>  // b.none
    2cf4:	bl	21b0 <PyType_IsSubtype@plt>
    2cf8:	cbnz	w0, 2d8c <PySequence_Fast@plt+0xb5c>
    2cfc:	ldr	x0, [x19, #8]
    2d00:	bl	21e0 <_PyLong_AsInt@plt>
    2d04:	cmn	w0, #0x1
    2d08:	b.eq	2e44 <PySequence_Fast@plt+0xc14>  // b.none
    2d0c:	cmn	w23, #0x1
    2d10:	b.eq	2d1c <PySequence_Fast@plt+0xaec>  // b.none
    2d14:	cmp	w23, #0x0
    2d18:	b.le	2e60 <PySequence_Fast@plt+0xc30>
    2d1c:	tst	w0, #0xfff7ffff
    2d20:	b.ne	2df8 <PySequence_Fast@plt+0xbc8>  // b.any
    2d24:	ldr	x23, [sp, #64]
    2d28:	mov	x0, x21
    2d2c:	ldr	x2, [x21, #304]
    2d30:	mov	x1, #0x0                   	// #0
    2d34:	blr	x2
    2d38:	mov	x19, x0
    2d3c:	cbz	x0, 2ddc <PySequence_Fast@plt+0xbac>
    2d40:	bl	2140 <PyEval_SaveThread@plt>
    2d44:	mov	x20, x0
    2d48:	mov	w0, #0x80000               	// #524288
    2d4c:	bl	20d0 <epoll_create1@plt>
    2d50:	str	w0, [x19, #16]
    2d54:	mov	x0, x20
    2d58:	bl	1f00 <PyEval_RestoreThread@plt>
    2d5c:	ldr	w0, [x19, #16]
    2d60:	tbnz	w0, #31, 2e1c <PySequence_Fast@plt+0xbec>
    2d64:	mov	x0, x19
    2d68:	ldp	x29, x30, [sp, #16]
    2d6c:	ldp	x19, x20, [sp, #32]
    2d70:	ldp	x21, x22, [sp, #48]
    2d74:	add	sp, sp, #0x60
    2d78:	ret
    2d7c:	mov	x20, x1
    2d80:	cmp	x1, #0x2
    2d84:	b.ls	2c98 <PySequence_Fast@plt+0xa68>  // b.plast
    2d88:	b	2c64 <PySequence_Fast@plt+0xa34>
    2d8c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2d90:	mov	x19, #0x0                   	// #0
    2d94:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2d98:	add	x1, x1, #0x6d8
    2d9c:	ldr	x0, [x0, #3992]
    2da0:	ldr	x0, [x0]
    2da4:	bl	1f70 <PyErr_SetString@plt>
    2da8:	mov	x0, x19
    2dac:	ldp	x29, x30, [sp, #16]
    2db0:	ldp	x19, x20, [sp, #32]
    2db4:	ldp	x21, x22, [sp, #48]
    2db8:	ldr	x23, [sp, #64]
    2dbc:	add	sp, sp, #0x60
    2dc0:	ret
    2dc4:	mov	w23, #0xffffffff            	// #-1
    2dc8:	adrp	x22, 16000 <PyInit_select@@Base+0x11d38>
    2dcc:	b	2ce0 <PySequence_Fast@plt+0xab0>
    2dd0:	bl	2080 <PyErr_Occurred@plt>
    2dd4:	cbz	x0, 2e94 <PySequence_Fast@plt+0xc64>
    2dd8:	ldr	x23, [sp, #64]
    2ddc:	mov	x19, #0x0                   	// #0
    2de0:	mov	x0, x19
    2de4:	ldp	x29, x30, [sp, #16]
    2de8:	ldp	x19, x20, [sp, #32]
    2dec:	ldp	x21, x22, [sp, #48]
    2df0:	add	sp, sp, #0x60
    2df4:	ret
    2df8:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2dfc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2e00:	mov	x19, #0x0                   	// #0
    2e04:	add	x1, x1, #0x718
    2e08:	ldr	x0, [x0, #4000]
    2e0c:	ldr	x0, [x0]
    2e10:	bl	1f70 <PyErr_SetString@plt>
    2e14:	ldr	x23, [sp, #64]
    2e18:	b	2d64 <PySequence_Fast@plt+0xb34>
    2e1c:	ldr	x0, [x19]
    2e20:	sub	x0, x0, #0x1
    2e24:	str	x0, [x19]
    2e28:	cbz	x0, 2ea4 <PySequence_Fast@plt+0xc74>
    2e2c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2e30:	mov	x19, #0x0                   	// #0
    2e34:	ldr	x0, [x0, #4000]
    2e38:	ldr	x0, [x0]
    2e3c:	bl	1f20 <PyErr_SetFromErrno@plt>
    2e40:	b	2d64 <PySequence_Fast@plt+0xb34>
    2e44:	bl	2080 <PyErr_Occurred@plt>
    2e48:	cbnz	x0, 2dd8 <PySequence_Fast@plt+0xba8>
    2e4c:	cmn	w23, #0x1
    2e50:	b.eq	2df8 <PySequence_Fast@plt+0xbc8>  // b.none
    2e54:	cmp	w23, #0x0
    2e58:	b.gt	2df8 <PySequence_Fast@plt+0xbc8>
    2e5c:	nop
    2e60:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2e64:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2e68:	mov	x19, #0x0                   	// #0
    2e6c:	add	x1, x1, #0x700
    2e70:	ldr	x0, [x0, #3984]
    2e74:	ldr	x0, [x0]
    2e78:	bl	1f70 <PyErr_SetString@plt>
    2e7c:	ldr	x23, [sp, #64]
    2e80:	b	2d64 <PySequence_Fast@plt+0xb34>
    2e84:	cmp	w0, #0x0
    2e88:	b.le	2e60 <PySequence_Fast@plt+0xc30>
    2e8c:	ldr	x23, [sp, #64]
    2e90:	b	2d28 <PySequence_Fast@plt+0xaf8>
    2e94:	cmp	x20, #0x1
    2e98:	b.ne	2ce0 <PySequence_Fast@plt+0xab0>  // b.any
    2e9c:	ldr	x23, [sp, #64]
    2ea0:	b	2d28 <PySequence_Fast@plt+0xaf8>
    2ea4:	mov	x0, x19
    2ea8:	bl	1f40 <_Py_Dealloc@plt>
    2eac:	b	2e2c <PySequence_Fast@plt+0xbfc>
    2eb0:	sub	sp, sp, #0x90
    2eb4:	stp	x29, x30, [sp, #16]
    2eb8:	add	x29, sp, #0x10
    2ebc:	stp	x19, x20, [sp, #32]
    2ec0:	mov	x19, x1
    2ec4:	mov	x20, x0
    2ec8:	stp	x21, x22, [sp, #48]
    2ecc:	mov	x1, x2
    2ed0:	mov	x2, x3
    2ed4:	stp	x23, x24, [sp, #64]
    2ed8:	cbz	x3, 30e4 <PySequence_Fast@plt+0xeb4>
    2edc:	ldr	x21, [x3, #16]
    2ee0:	add	x21, x1, x21
    2ee4:	add	x0, sp, #0x80
    2ee8:	str	x0, [sp]
    2eec:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    2ef0:	add	x4, x4, #0x360
    2ef4:	mov	x3, x2
    2ef8:	mov	x0, x19
    2efc:	add	x4, x4, #0x1f8
    2f00:	mov	w7, #0x0                   	// #0
    2f04:	mov	w6, #0x2                   	// #2
    2f08:	mov	w5, #0x0                   	// #0
    2f0c:	mov	x2, #0x0                   	// #0
    2f10:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2f14:	mov	x19, x0
    2f18:	cbz	x0, 3158 <PySequence_Fast@plt+0xf28>
    2f1c:	cbz	x21, 30fc <PySequence_Fast@plt+0xecc>
    2f20:	ldr	x22, [x19]
    2f24:	cbz	x22, 3138 <PySequence_Fast@plt+0xf08>
    2f28:	cmp	x21, #0x1
    2f2c:	b.eq	31c8 <PySequence_Fast@plt+0xf98>  // b.none
    2f30:	ldr	x0, [x19, #8]
    2f34:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    2f38:	ldr	x1, [x1, #3960]
    2f3c:	ldr	x0, [x0, #8]
    2f40:	cmp	x0, x1
    2f44:	b.eq	3190 <PySequence_Fast@plt+0xf60>  // b.none
    2f48:	bl	21b0 <PyType_IsSubtype@plt>
    2f4c:	cbnz	w0, 3190 <PySequence_Fast@plt+0xf60>
    2f50:	ldr	x0, [x19, #8]
    2f54:	bl	21e0 <_PyLong_AsInt@plt>
    2f58:	mov	w24, w0
    2f5c:	cmn	w0, #0x1
    2f60:	b.eq	31d0 <PySequence_Fast@plt+0xfa0>  // b.none
    2f64:	ldr	w0, [x20, #16]
    2f68:	mov	x19, #0xffffffffffffffff    	// #-1
    2f6c:	str	x19, [sp, #120]
    2f70:	tbnz	w0, #31, 31f0 <PySequence_Fast@plt+0xfc0>
    2f74:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    2f78:	ldr	x0, [x0, #4040]
    2f7c:	cmp	x22, x0
    2f80:	b.eq	3280 <PySequence_Fast@plt+0x1050>  // b.none
    2f84:	mov	x1, x22
    2f88:	add	x0, sp, #0x78
    2f8c:	mov	w2, #0x3                   	// #3
    2f90:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    2f94:	tbnz	w0, #31, 3210 <PySequence_Fast@plt+0xfe0>
    2f98:	ldr	x0, [sp, #120]
    2f9c:	mov	w1, #0x1                   	// #1
    2fa0:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    2fa4:	mov	x1, #0x80000000            	// #2147483648
    2fa8:	add	x1, x0, x1
    2fac:	mov	x2, #0xffffffff            	// #4294967295
    2fb0:	cmp	x1, x2
    2fb4:	b.hi	3260 <PySequence_Fast@plt+0x1030>  // b.pmore
    2fb8:	ldr	x1, [sp, #120]
    2fbc:	cmp	x0, #0x0
    2fc0:	csel	x19, x0, x19, ge  // ge = tcont
    2fc4:	mov	x21, #0x0                   	// #0
    2fc8:	tbz	x1, #63, 3144 <PySequence_Fast@plt+0xf14>
    2fcc:	cmn	w24, #0x1
    2fd0:	b.eq	310c <PySequence_Fast@plt+0xedc>  // b.none
    2fd4:	cmp	w24, #0x0
    2fd8:	b.le	323c <PySequence_Fast@plt+0x100c>
    2fdc:	sbfiz	x0, x24, #4, #32
    2fe0:	bl	21f0 <PyMem_Malloc@plt>
    2fe4:	mov	x23, x0
    2fe8:	cbz	x0, 3154 <PySequence_Fast@plt+0xf24>
    2fec:	stp	x25, x26, [sp, #80]
    2ff0:	bl	21d0 <__errno_location@plt>
    2ff4:	mov	x25, x0
    2ff8:	b	300c <PySequence_Fast@plt+0xddc>
    2ffc:	bl	21a0 <PyErr_CheckSignals@plt>
    3000:	cbnz	w0, 30b8 <PySequence_Fast@plt+0xe88>
    3004:	ldr	x0, [sp, #120]
    3008:	tbz	x0, #63, 3118 <PySequence_Fast@plt+0xee8>
    300c:	bl	2140 <PyEval_SaveThread@plt>
    3010:	str	wzr, [x25]
    3014:	mov	x22, x0
    3018:	mov	x1, x23
    301c:	ldr	w0, [x20, #16]
    3020:	mov	w3, w19
    3024:	mov	w2, w24
    3028:	bl	2000 <epoll_wait@plt>
    302c:	mov	w26, w0
    3030:	mov	x0, x22
    3034:	bl	1f00 <PyEval_RestoreThread@plt>
    3038:	ldr	w1, [x25]
    303c:	cmp	w1, #0x4
    3040:	b.eq	2ffc <PySequence_Fast@plt+0xdcc>  // b.none
    3044:	tbnz	w26, #31, 3178 <PySequence_Fast@plt+0xf48>
    3048:	sxtw	x0, w26
    304c:	bl	1ed0 <PyList_New@plt>
    3050:	mov	x21, x0
    3054:	cbz	x0, 30b8 <PySequence_Fast@plt+0xe88>
    3058:	cbz	w26, 30bc <PySequence_Fast@plt+0xe8c>
    305c:	sub	w22, w26, #0x1
    3060:	adrp	x24, 4000 <PySequence_Fast@plt+0x1dd0>
    3064:	add	x22, x22, #0x1
    3068:	add	x24, x24, #0x758
    306c:	add	x20, x23, #0x8
    3070:	mov	x19, #0x0                   	// #0
    3074:	lsl	x22, x22, #3
    3078:	b	3090 <PySequence_Fast@plt+0xe60>
    307c:	ldr	x1, [x21, #24]
    3080:	str	x0, [x1, x19]
    3084:	add	x19, x19, #0x8
    3088:	cmp	x22, x19
    308c:	b.eq	30bc <PySequence_Fast@plt+0xe8c>  // b.none
    3090:	ldur	w2, [x20, #-8]
    3094:	mov	x0, x24
    3098:	ldr	w1, [x20]
    309c:	add	x20, x20, #0x10
    30a0:	bl	2070 <Py_BuildValue@plt>
    30a4:	cbnz	x0, 307c <PySequence_Fast@plt+0xe4c>
    30a8:	ldr	x0, [x21]
    30ac:	sub	x0, x0, #0x1
    30b0:	str	x0, [x21]
    30b4:	cbz	x0, 31e0 <PySequence_Fast@plt+0xfb0>
    30b8:	mov	x21, #0x0                   	// #0
    30bc:	mov	x0, x23
    30c0:	bl	1f10 <PyMem_Free@plt>
    30c4:	ldp	x25, x26, [sp, #80]
    30c8:	mov	x0, x21
    30cc:	ldp	x29, x30, [sp, #16]
    30d0:	ldp	x19, x20, [sp, #32]
    30d4:	ldp	x21, x22, [sp, #48]
    30d8:	ldp	x23, x24, [sp, #64]
    30dc:	add	sp, sp, #0x90
    30e0:	ret
    30e4:	tbnz	x1, #63, 329c <PySequence_Fast@plt+0x106c>
    30e8:	cmp	x19, #0x0
    30ec:	mov	x21, x1
    30f0:	ccmp	x1, #0x2, #0x0, ne  // ne = any
    30f4:	b.gt	2ee4 <PySequence_Fast@plt+0xcb4>
    30f8:	cbnz	x21, 2f20 <PySequence_Fast@plt+0xcf0>
    30fc:	ldr	w0, [x20, #16]
    3100:	mov	x19, #0xffffffffffffffff    	// #-1
    3104:	str	x19, [sp, #120]
    3108:	tbnz	w0, #31, 31f0 <PySequence_Fast@plt+0xfc0>
    310c:	mov	x0, #0x3ff0                	// #16368
    3110:	mov	w24, #0x3ff                 	// #1023
    3114:	b	2fe0 <PySequence_Fast@plt+0xdb0>
    3118:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    311c:	sub	x0, x21, x0
    3120:	str	x0, [sp, #120]
    3124:	tbnz	x0, #63, 3288 <PySequence_Fast@plt+0x1058>
    3128:	mov	w1, #0x1                   	// #1
    312c:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    3130:	mov	x19, x0
    3134:	b	300c <PySequence_Fast@plt+0xddc>
    3138:	adrp	x22, 16000 <PyInit_select@@Base+0x11d38>
    313c:	ldr	x22, [x22, #4040]
    3140:	b	2f30 <PySequence_Fast@plt+0xd00>
    3144:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3148:	ldr	x1, [sp, #120]
    314c:	add	x21, x0, x1
    3150:	b	2fcc <PySequence_Fast@plt+0xd9c>
    3154:	bl	1f50 <PyErr_NoMemory@plt>
    3158:	mov	x21, #0x0                   	// #0
    315c:	mov	x0, x21
    3160:	ldp	x29, x30, [sp, #16]
    3164:	ldp	x19, x20, [sp, #32]
    3168:	ldp	x21, x22, [sp, #48]
    316c:	ldp	x23, x24, [sp, #64]
    3170:	add	sp, sp, #0x90
    3174:	ret
    3178:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    317c:	mov	x21, #0x0                   	// #0
    3180:	ldr	x0, [x0, #4000]
    3184:	ldr	x0, [x0]
    3188:	bl	1f20 <PyErr_SetFromErrno@plt>
    318c:	b	30bc <PySequence_Fast@plt+0xe8c>
    3190:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3194:	mov	x21, #0x0                   	// #0
    3198:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    319c:	add	x1, x1, #0x6d8
    31a0:	ldr	x0, [x0, #3992]
    31a4:	ldr	x0, [x0]
    31a8:	bl	1f70 <PyErr_SetString@plt>
    31ac:	mov	x0, x21
    31b0:	ldp	x29, x30, [sp, #16]
    31b4:	ldp	x19, x20, [sp, #32]
    31b8:	ldp	x21, x22, [sp, #48]
    31bc:	ldp	x23, x24, [sp, #64]
    31c0:	add	sp, sp, #0x90
    31c4:	ret
    31c8:	mov	w24, #0xffffffff            	// #-1
    31cc:	b	2f64 <PySequence_Fast@plt+0xd34>
    31d0:	bl	2080 <PyErr_Occurred@plt>
    31d4:	cbz	x0, 2f64 <PySequence_Fast@plt+0xd34>
    31d8:	mov	x21, #0x0                   	// #0
    31dc:	b	315c <PySequence_Fast@plt+0xf2c>
    31e0:	mov	x0, x21
    31e4:	mov	x21, #0x0                   	// #0
    31e8:	bl	1f40 <_Py_Dealloc@plt>
    31ec:	b	30bc <PySequence_Fast@plt+0xe8c>
    31f0:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    31f4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    31f8:	mov	x21, #0x0                   	// #0
    31fc:	add	x1, x1, #0x6b0
    3200:	ldr	x0, [x0, #3984]
    3204:	ldr	x0, [x0]
    3208:	bl	1f70 <PyErr_SetString@plt>
    320c:	b	30c8 <PySequence_Fast@plt+0xe98>
    3210:	adrp	x19, 16000 <PyInit_select@@Base+0x11d38>
    3214:	mov	x21, #0x0                   	// #0
    3218:	ldr	x19, [x19, #3992]
    321c:	ldr	x0, [x19]
    3220:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3224:	cbz	w0, 30c8 <PySequence_Fast@plt+0xe98>
    3228:	ldr	x0, [x19]
    322c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3230:	add	x1, x1, #0x5e0
    3234:	bl	1f70 <PyErr_SetString@plt>
    3238:	b	30c8 <PySequence_Fast@plt+0xe98>
    323c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3240:	mov	w2, w24
    3244:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3248:	mov	x21, #0x0                   	// #0
    324c:	ldr	x0, [x0, #3984]
    3250:	add	x1, x1, #0x728
    3254:	ldr	x0, [x0]
    3258:	bl	21c0 <PyErr_Format@plt>
    325c:	b	30c8 <PySequence_Fast@plt+0xe98>
    3260:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3264:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3268:	mov	x21, #0x0                   	// #0
    326c:	add	x1, x1, #0x608
    3270:	ldr	x0, [x0, #4024]
    3274:	ldr	x0, [x0]
    3278:	bl	1f70 <PyErr_SetString@plt>
    327c:	b	30c8 <PySequence_Fast@plt+0xe98>
    3280:	mov	x21, #0x0                   	// #0
    3284:	b	2fcc <PySequence_Fast@plt+0xd9c>
    3288:	mov	x0, #0x0                   	// #0
    328c:	bl	1ed0 <PyList_New@plt>
    3290:	mov	x21, x0
    3294:	cbnz	x0, 30bc <PySequence_Fast@plt+0xe8c>
    3298:	b	30b8 <PySequence_Fast@plt+0xe88>
    329c:	add	x0, sp, #0x80
    32a0:	str	x0, [sp]
    32a4:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    32a8:	add	x4, x4, #0x360
    32ac:	mov	x0, x19
    32b0:	add	x4, x4, #0x1f8
    32b4:	mov	w7, #0x0                   	// #0
    32b8:	mov	w6, #0x2                   	// #2
    32bc:	mov	w5, #0x0                   	// #0
    32c0:	mov	x2, #0x0                   	// #0
    32c4:	str	x1, [sp, #104]
    32c8:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    32cc:	mov	x19, x0
    32d0:	cbz	x0, 3158 <PySequence_Fast@plt+0xf28>
    32d4:	ldr	x1, [sp, #104]
    32d8:	mov	x21, x1
    32dc:	b	2f20 <PySequence_Fast@plt+0xcf0>
    32e0:	ldr	w0, [x0, #16]
    32e4:	tbnz	w0, #31, 32f0 <PySequence_Fast@plt+0x10c0>
    32e8:	sxtw	x0, w0
    32ec:	b	1ff0 <PyLong_FromLong@plt>
    32f0:	stp	x29, x30, [sp, #-16]!
    32f4:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    32f8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    32fc:	mov	x29, sp
    3300:	ldr	x0, [x0, #3984]
    3304:	add	x1, x1, #0x6b0
    3308:	ldr	x0, [x0]
    330c:	bl	1f70 <PyErr_SetString@plt>
    3310:	mov	x0, #0x0                   	// #0
    3314:	ldp	x29, x30, [sp], #16
    3318:	ret
    331c:	nop
    3320:	stp	x29, x30, [sp, #-48]!
    3324:	mov	x29, sp
    3328:	stp	x19, x20, [sp, #16]
    332c:	mov	x19, x0
    3330:	ldr	w20, [x0, #16]
    3334:	tbnz	w20, #31, 3360 <PySequence_Fast@plt+0x1130>
    3338:	str	x21, [sp, #32]
    333c:	mov	w0, #0xffffffff            	// #-1
    3340:	str	w0, [x19, #16]
    3344:	bl	2140 <PyEval_SaveThread@plt>
    3348:	mov	x21, x0
    334c:	mov	w0, w20
    3350:	bl	2010 <close@plt>
    3354:	mov	x0, x21
    3358:	bl	1f00 <PyEval_RestoreThread@plt>
    335c:	ldr	x21, [sp, #32]
    3360:	mov	x0, x19
    3364:	ldr	x1, [x19, #8]
    3368:	ldp	x19, x20, [sp, #16]
    336c:	ldp	x29, x30, [sp], #48
    3370:	ldr	x1, [x1, #320]
    3374:	mov	x16, x1
    3378:	br	x16
    337c:	nop
    3380:	stp	x29, x30, [sp, #-32]!
    3384:	mov	x29, sp
    3388:	stp	x19, x20, [sp, #16]
    338c:	mov	x20, x0
    3390:	mov	x0, x1
    3394:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3398:	cmn	w0, #0x1
    339c:	b.eq	3408 <PySequence_Fast@plt+0x11d8>  // b.none
    33a0:	sxtw	x0, w0
    33a4:	bl	1ff0 <PyLong_FromLong@plt>
    33a8:	mov	x19, x0
    33ac:	cbz	x0, 3408 <PySequence_Fast@plt+0x11d8>
    33b0:	mov	x1, x0
    33b4:	ldr	x0, [x20, #16]
    33b8:	bl	2060 <PyDict_DelItem@plt>
    33bc:	cmn	w0, #0x1
    33c0:	ldr	x0, [x19]
    33c4:	sub	x0, x0, #0x1
    33c8:	str	x0, [x19]
    33cc:	b.eq	33fc <PySequence_Fast@plt+0x11cc>  // b.none
    33d0:	cbz	x0, 3418 <PySequence_Fast@plt+0x11e8>
    33d4:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    33d8:	str	wzr, [x20, #24]
    33dc:	ldp	x19, x20, [sp, #16]
    33e0:	ldr	x1, [x1, #4040]
    33e4:	mov	x0, x1
    33e8:	ldr	x2, [x1]
    33ec:	add	x2, x2, #0x1
    33f0:	str	x2, [x1]
    33f4:	ldp	x29, x30, [sp], #32
    33f8:	ret
    33fc:	cbnz	x0, 3408 <PySequence_Fast@plt+0x11d8>
    3400:	mov	x0, x19
    3404:	bl	1f40 <_Py_Dealloc@plt>
    3408:	mov	x0, #0x0                   	// #0
    340c:	ldp	x19, x20, [sp, #16]
    3410:	ldp	x29, x30, [sp], #32
    3414:	ret
    3418:	mov	x0, x19
    341c:	bl	1f40 <_Py_Dealloc@plt>
    3420:	b	33d4 <PySequence_Fast@plt+0x11a4>
    3424:	nop
    3428:	stp	x29, x30, [sp, #-64]!
    342c:	cmp	x2, #0x2
    3430:	mov	x29, sp
    3434:	stp	x19, x20, [sp, #16]
    3438:	mov	x19, x1
    343c:	stp	x21, x22, [sp, #32]
    3440:	mov	x21, x0
    3444:	b.eq	3464 <PySequence_Fast@plt+0x1234>  // b.none
    3448:	mov	x1, x2
    344c:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3450:	mov	x3, #0x2                   	// #2
    3454:	add	x0, x0, #0x760
    3458:	mov	x2, x3
    345c:	bl	2050 <_PyArg_CheckPositional@plt>
    3460:	cbz	w0, 3560 <PySequence_Fast@plt+0x1330>
    3464:	ldr	x0, [x19]
    3468:	bl	2180 <PyObject_AsFileDescriptor@plt>
    346c:	mov	w20, w0
    3470:	cmn	w0, #0x1
    3474:	b.eq	3560 <PySequence_Fast@plt+0x1330>  // b.none
    3478:	ldr	x0, [x19, #8]
    347c:	add	x1, sp, #0x3e
    3480:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    3484:	cbz	w0, 3560 <PySequence_Fast@plt+0x1330>
    3488:	sxtw	x0, w20
    348c:	ldrh	w22, [sp, #62]
    3490:	bl	1ff0 <PyLong_FromLong@plt>
    3494:	mov	x20, x0
    3498:	cbz	x0, 3560 <PySequence_Fast@plt+0x1330>
    349c:	mov	x1, x0
    34a0:	ldr	x0, [x21, #16]
    34a4:	bl	2220 <PyDict_GetItemWithError@plt>
    34a8:	mov	x19, x0
    34ac:	cbz	x0, 3528 <PySequence_Fast@plt+0x12f8>
    34b0:	and	x0, x22, #0xffff
    34b4:	bl	1ff0 <PyLong_FromLong@plt>
    34b8:	mov	x19, x0
    34bc:	cbz	x0, 3550 <PySequence_Fast@plt+0x1320>
    34c0:	mov	x2, x0
    34c4:	mov	x1, x20
    34c8:	ldr	x0, [x21, #16]
    34cc:	bl	2160 <PyDict_SetItem@plt>
    34d0:	mov	w22, w0
    34d4:	ldr	x1, [x20]
    34d8:	sub	x1, x1, #0x1
    34dc:	str	x1, [x20]
    34e0:	cbz	x1, 3584 <PySequence_Fast@plt+0x1354>
    34e4:	ldr	x1, [x19]
    34e8:	sub	x1, x1, #0x1
    34ec:	str	x1, [x19]
    34f0:	cbz	x1, 3578 <PySequence_Fast@plt+0x1348>
    34f4:	tbnz	w22, #31, 3560 <PySequence_Fast@plt+0x1330>
    34f8:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    34fc:	str	wzr, [x21, #24]
    3500:	ldp	x21, x22, [sp, #32]
    3504:	ldr	x0, [x0, #4040]
    3508:	mov	x19, x0
    350c:	ldr	x1, [x0]
    3510:	add	x1, x1, #0x1
    3514:	str	x1, [x0]
    3518:	mov	x0, x19
    351c:	ldp	x19, x20, [sp, #16]
    3520:	ldp	x29, x30, [sp], #64
    3524:	ret
    3528:	bl	2080 <PyErr_Occurred@plt>
    352c:	cbnz	x0, 3550 <PySequence_Fast@plt+0x1320>
    3530:	bl	21d0 <__errno_location@plt>
    3534:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3538:	mov	w2, #0x2                   	// #2
    353c:	str	w2, [x0]
    3540:	ldr	x1, [x1, #4000]
    3544:	ldr	x0, [x1]
    3548:	bl	1f20 <PyErr_SetFromErrno@plt>
    354c:	nop
    3550:	ldr	x0, [x20]
    3554:	sub	x0, x0, #0x1
    3558:	str	x0, [x20]
    355c:	cbz	x0, 3590 <PySequence_Fast@plt+0x1360>
    3560:	mov	x19, #0x0                   	// #0
    3564:	mov	x0, x19
    3568:	ldp	x19, x20, [sp, #16]
    356c:	ldp	x21, x22, [sp, #32]
    3570:	ldp	x29, x30, [sp], #64
    3574:	ret
    3578:	mov	x0, x19
    357c:	bl	1f40 <_Py_Dealloc@plt>
    3580:	b	34f4 <PySequence_Fast@plt+0x12c4>
    3584:	mov	x0, x20
    3588:	bl	1f40 <_Py_Dealloc@plt>
    358c:	b	34e4 <PySequence_Fast@plt+0x12b4>
    3590:	mov	x0, x20
    3594:	bl	1f40 <_Py_Dealloc@plt>
    3598:	b	3564 <PySequence_Fast@plt+0x1334>
    359c:	nop
    35a0:	stp	x29, x30, [sp, #-64]!
    35a4:	mov	w3, #0x7                   	// #7
    35a8:	mov	x29, sp
    35ac:	stp	x19, x20, [sp, #16]
    35b0:	mov	x19, x2
    35b4:	sub	x2, x2, #0x1
    35b8:	stp	x21, x22, [sp, #32]
    35bc:	mov	x20, x1
    35c0:	mov	x22, x0
    35c4:	strh	w3, [sp, #62]
    35c8:	cmp	x2, #0x1
    35cc:	b.ls	35ec <PySequence_Fast@plt+0x13bc>  // b.plast
    35d0:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    35d4:	mov	x1, x19
    35d8:	add	x0, x0, #0x768
    35dc:	mov	x3, #0x2                   	// #2
    35e0:	mov	x2, #0x1                   	// #1
    35e4:	bl	2050 <_PyArg_CheckPositional@plt>
    35e8:	cbz	w0, 36b8 <PySequence_Fast@plt+0x1488>
    35ec:	ldr	x0, [x20]
    35f0:	bl	2180 <PyObject_AsFileDescriptor@plt>
    35f4:	mov	w21, w0
    35f8:	cmn	w0, #0x1
    35fc:	b.eq	36b8 <PySequence_Fast@plt+0x1488>  // b.none
    3600:	cmp	x19, #0x1
    3604:	b.le	3618 <PySequence_Fast@plt+0x13e8>
    3608:	ldr	x0, [x20, #8]
    360c:	add	x1, sp, #0x3e
    3610:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    3614:	cbz	w0, 36b8 <PySequence_Fast@plt+0x1488>
    3618:	ldrh	w19, [sp, #62]
    361c:	sxtw	x0, w21
    3620:	bl	1ff0 <PyLong_FromLong@plt>
    3624:	mov	x20, x0
    3628:	cbz	x0, 36b8 <PySequence_Fast@plt+0x1488>
    362c:	and	x0, x19, #0xffff
    3630:	bl	1ff0 <PyLong_FromLong@plt>
    3634:	mov	x19, x0
    3638:	cbz	x0, 36a4 <PySequence_Fast@plt+0x1474>
    363c:	mov	x2, x0
    3640:	mov	x1, x20
    3644:	ldr	x0, [x22, #16]
    3648:	bl	2160 <PyDict_SetItem@plt>
    364c:	mov	w21, w0
    3650:	ldr	x1, [x20]
    3654:	sub	x1, x1, #0x1
    3658:	str	x1, [x20]
    365c:	cbz	x1, 36dc <PySequence_Fast@plt+0x14ac>
    3660:	ldr	x1, [x19]
    3664:	sub	x1, x1, #0x1
    3668:	str	x1, [x19]
    366c:	cbz	x1, 36d0 <PySequence_Fast@plt+0x14a0>
    3670:	tbnz	w21, #31, 36b8 <PySequence_Fast@plt+0x1488>
    3674:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3678:	str	wzr, [x22, #24]
    367c:	ldp	x21, x22, [sp, #32]
    3680:	ldr	x0, [x0, #4040]
    3684:	mov	x19, x0
    3688:	ldr	x1, [x0]
    368c:	add	x1, x1, #0x1
    3690:	str	x1, [x0]
    3694:	mov	x0, x19
    3698:	ldp	x19, x20, [sp, #16]
    369c:	ldp	x29, x30, [sp], #64
    36a0:	ret
    36a4:	ldr	x0, [x20]
    36a8:	sub	x0, x0, #0x1
    36ac:	str	x0, [x20]
    36b0:	cbz	x0, 36e8 <PySequence_Fast@plt+0x14b8>
    36b4:	nop
    36b8:	mov	x19, #0x0                   	// #0
    36bc:	mov	x0, x19
    36c0:	ldp	x19, x20, [sp, #16]
    36c4:	ldp	x21, x22, [sp, #32]
    36c8:	ldp	x29, x30, [sp], #64
    36cc:	ret
    36d0:	mov	x0, x19
    36d4:	bl	1f40 <_Py_Dealloc@plt>
    36d8:	b	3670 <PySequence_Fast@plt+0x1440>
    36dc:	mov	x0, x20
    36e0:	bl	1f40 <_Py_Dealloc@plt>
    36e4:	b	3660 <PySequence_Fast@plt+0x1430>
    36e8:	mov	x0, x20
    36ec:	bl	1f40 <_Py_Dealloc@plt>
    36f0:	b	36bc <PySequence_Fast@plt+0x148c>
    36f4:	nop
    36f8:	stp	x29, x30, [sp, #-48]!
    36fc:	mov	x29, sp
    3700:	stp	x19, x20, [sp, #16]
    3704:	mov	x19, x0
    3708:	str	x21, [sp, #32]
    370c:	bl	21d0 <__errno_location@plt>
    3710:	ldr	w21, [x19, #16]
    3714:	mov	x20, x0
    3718:	tbz	w21, #31, 3748 <PySequence_Fast@plt+0x1518>
    371c:	str	wzr, [x20]
    3720:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3724:	ldr	x1, [x1, #4040]
    3728:	mov	x0, x1
    372c:	ldr	x2, [x1]
    3730:	add	x2, x2, #0x1
    3734:	str	x2, [x1]
    3738:	ldp	x19, x20, [sp, #16]
    373c:	ldr	x21, [sp, #32]
    3740:	ldp	x29, x30, [sp], #48
    3744:	ret
    3748:	mov	w0, #0xffffffff            	// #-1
    374c:	str	w0, [x19, #16]
    3750:	bl	2140 <PyEval_SaveThread@plt>
    3754:	mov	x19, x0
    3758:	mov	w0, w21
    375c:	bl	2010 <close@plt>
    3760:	tbnz	w0, #31, 3770 <PySequence_Fast@plt+0x1540>
    3764:	mov	x0, x19
    3768:	bl	1f00 <PyEval_RestoreThread@plt>
    376c:	b	371c <PySequence_Fast@plt+0x14ec>
    3770:	ldr	w21, [x20]
    3774:	mov	x0, x19
    3778:	bl	1f00 <PyEval_RestoreThread@plt>
    377c:	str	w21, [x20]
    3780:	tbz	w21, #31, 3720 <PySequence_Fast@plt+0x14f0>
    3784:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3788:	ldr	x0, [x0, #4000]
    378c:	ldr	x0, [x0]
    3790:	bl	1f20 <PyErr_SetFromErrno@plt>
    3794:	mov	x0, #0x0                   	// #0
    3798:	b	3738 <PySequence_Fast@plt+0x1508>
    379c:	nop
    37a0:	sub	sp, sp, #0x50
    37a4:	cmp	x3, #0x0
    37a8:	ccmp	x2, #0x1, #0x0, eq  // eq = none
    37ac:	stp	x29, x30, [sp, #16]
    37b0:	add	x29, sp, #0x10
    37b4:	stp	x19, x20, [sp, #32]
    37b8:	mov	x20, x0
    37bc:	mov	x0, x1
    37c0:	b.ne	3848 <PySequence_Fast@plt+0x1618>  // b.any
    37c4:	cbz	x1, 3848 <PySequence_Fast@plt+0x1618>
    37c8:	ldr	x0, [x0]
    37cc:	bl	2180 <PyObject_AsFileDescriptor@plt>
    37d0:	mov	w19, w0
    37d4:	cmn	w0, #0x1
    37d8:	b.eq	3878 <PySequence_Fast@plt+0x1648>  // b.none
    37dc:	ldr	w20, [x20, #16]
    37e0:	tbnz	w20, #31, 38b4 <PySequence_Fast@plt+0x1684>
    37e4:	bl	2140 <PyEval_SaveThread@plt>
    37e8:	mov	w2, w19
    37ec:	add	x3, sp, #0x40
    37f0:	mov	w1, #0x2                   	// #2
    37f4:	mov	x19, x0
    37f8:	mov	w0, w20
    37fc:	bl	2120 <epoll_ctl@plt>
    3800:	mov	w20, w0
    3804:	bl	21d0 <__errno_location@plt>
    3808:	ldr	w1, [x0]
    380c:	cmp	w1, #0x9
    3810:	b.eq	388c <PySequence_Fast@plt+0x165c>  // b.none
    3814:	mov	x0, x19
    3818:	bl	1f00 <PyEval_RestoreThread@plt>
    381c:	tbnz	w20, #31, 389c <PySequence_Fast@plt+0x166c>
    3820:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3824:	ldr	x1, [x1, #4040]
    3828:	mov	x0, x1
    382c:	ldr	x2, [x1]
    3830:	add	x2, x2, #0x1
    3834:	str	x2, [x1]
    3838:	ldp	x29, x30, [sp, #16]
    383c:	ldp	x19, x20, [sp, #32]
    3840:	add	sp, sp, #0x50
    3844:	ret
    3848:	add	x1, sp, #0x38
    384c:	str	x1, [sp]
    3850:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    3854:	add	x4, x4, #0x360
    3858:	mov	x1, x2
    385c:	mov	w6, #0x1                   	// #1
    3860:	add	x4, x4, #0x238
    3864:	mov	w5, w6
    3868:	mov	w7, #0x0                   	// #0
    386c:	mov	x2, #0x0                   	// #0
    3870:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    3874:	cbnz	x0, 37c8 <PySequence_Fast@plt+0x1598>
    3878:	mov	x0, #0x0                   	// #0
    387c:	ldp	x29, x30, [sp, #16]
    3880:	ldp	x19, x20, [sp, #32]
    3884:	add	sp, sp, #0x50
    3888:	ret
    388c:	str	wzr, [x0]
    3890:	mov	x0, x19
    3894:	bl	1f00 <PyEval_RestoreThread@plt>
    3898:	b	3820 <PySequence_Fast@plt+0x15f0>
    389c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    38a0:	ldr	x0, [x0, #4000]
    38a4:	ldr	x0, [x0]
    38a8:	bl	1f20 <PyErr_SetFromErrno@plt>
    38ac:	mov	x0, #0x0                   	// #0
    38b0:	b	3838 <PySequence_Fast@plt+0x1608>
    38b4:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    38b8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    38bc:	add	x1, x1, #0x6b0
    38c0:	ldr	x0, [x0, #3984]
    38c4:	ldr	x0, [x0]
    38c8:	bl	1f70 <PyErr_SetString@plt>
    38cc:	mov	x0, #0x0                   	// #0
    38d0:	b	387c <PySequence_Fast@plt+0x164c>
    38d4:	nop
    38d8:	sub	sp, sp, #0x60
    38dc:	cmp	x3, #0x0
    38e0:	ccmp	x2, #0x2, #0x0, eq  // eq = none
    38e4:	stp	x29, x30, [sp, #16]
    38e8:	add	x29, sp, #0x10
    38ec:	stp	x19, x20, [sp, #32]
    38f0:	mov	x19, x1
    38f4:	str	x21, [sp, #48]
    38f8:	mov	x21, x0
    38fc:	b.ne	39b4 <PySequence_Fast@plt+0x1784>  // b.any
    3900:	cbz	x1, 39b4 <PySequence_Fast@plt+0x1784>
    3904:	ldr	x0, [x19]
    3908:	bl	2180 <PyObject_AsFileDescriptor@plt>
    390c:	mov	w20, w0
    3910:	cmn	w0, #0x1
    3914:	b.eq	39ec <PySequence_Fast@plt+0x17bc>  // b.none
    3918:	ldr	x0, [x19, #8]
    391c:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3920:	ldr	x1, [x1, #3960]
    3924:	ldr	x0, [x0, #8]
    3928:	cmp	x0, x1
    392c:	b.eq	3a04 <PySequence_Fast@plt+0x17d4>  // b.none
    3930:	bl	21b0 <PyType_IsSubtype@plt>
    3934:	cbnz	w0, 3a04 <PySequence_Fast@plt+0x17d4>
    3938:	ldr	x0, [x19, #8]
    393c:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    3940:	mov	x19, x0
    3944:	cmn	w0, #0x1
    3948:	b.eq	3a34 <PySequence_Fast@plt+0x1804>  // b.none
    394c:	ldr	w21, [x21, #16]
    3950:	tbnz	w21, #31, 3a5c <PySequence_Fast@plt+0x182c>
    3954:	str	w19, [sp, #80]
    3958:	str	w20, [sp, #88]
    395c:	bl	2140 <PyEval_SaveThread@plt>
    3960:	mov	w2, w20
    3964:	add	x3, sp, #0x50
    3968:	mov	w1, #0x3                   	// #3
    396c:	mov	x20, x0
    3970:	mov	w0, w21
    3974:	bl	2120 <epoll_ctl@plt>
    3978:	mov	w19, w0
    397c:	mov	x0, x20
    3980:	bl	1f00 <PyEval_RestoreThread@plt>
    3984:	tbnz	w19, #31, 3a44 <PySequence_Fast@plt+0x1814>
    3988:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    398c:	ldr	x1, [x1, #4040]
    3990:	mov	x0, x1
    3994:	ldr	x2, [x1]
    3998:	add	x2, x2, #0x1
    399c:	str	x2, [x1]
    39a0:	ldp	x29, x30, [sp, #16]
    39a4:	ldp	x19, x20, [sp, #32]
    39a8:	ldr	x21, [sp, #48]
    39ac:	add	sp, sp, #0x60
    39b0:	ret
    39b4:	add	x0, sp, #0x40
    39b8:	str	x0, [sp]
    39bc:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    39c0:	add	x4, x4, #0x360
    39c4:	mov	x1, x2
    39c8:	mov	x0, x19
    39cc:	mov	w6, #0x2                   	// #2
    39d0:	add	x4, x4, #0x278
    39d4:	mov	w5, w6
    39d8:	mov	w7, #0x0                   	// #0
    39dc:	mov	x2, #0x0                   	// #0
    39e0:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    39e4:	mov	x19, x0
    39e8:	cbnz	x0, 3904 <PySequence_Fast@plt+0x16d4>
    39ec:	mov	x0, #0x0                   	// #0
    39f0:	ldp	x29, x30, [sp, #16]
    39f4:	ldp	x19, x20, [sp, #32]
    39f8:	ldr	x21, [sp, #48]
    39fc:	add	sp, sp, #0x60
    3a00:	ret
    3a04:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3a08:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3a0c:	add	x1, x1, #0x6d8
    3a10:	ldr	x0, [x0, #3992]
    3a14:	ldr	x0, [x0]
    3a18:	bl	1f70 <PyErr_SetString@plt>
    3a1c:	mov	x0, #0x0                   	// #0
    3a20:	ldp	x29, x30, [sp, #16]
    3a24:	ldp	x19, x20, [sp, #32]
    3a28:	ldr	x21, [sp, #48]
    3a2c:	add	sp, sp, #0x60
    3a30:	ret
    3a34:	bl	2080 <PyErr_Occurred@plt>
    3a38:	cbz	x0, 394c <PySequence_Fast@plt+0x171c>
    3a3c:	mov	x0, #0x0                   	// #0
    3a40:	b	39f0 <PySequence_Fast@plt+0x17c0>
    3a44:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3a48:	ldr	x0, [x0, #4000]
    3a4c:	ldr	x0, [x0]
    3a50:	bl	1f20 <PyErr_SetFromErrno@plt>
    3a54:	mov	x0, #0x0                   	// #0
    3a58:	b	39a0 <PySequence_Fast@plt+0x1770>
    3a5c:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3a60:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3a64:	add	x1, x1, #0x6b0
    3a68:	ldr	x0, [x0, #3984]
    3a6c:	ldr	x0, [x0]
    3a70:	bl	1f70 <PyErr_SetString@plt>
    3a74:	mov	x0, #0x0                   	// #0
    3a78:	b	39f0 <PySequence_Fast@plt+0x17c0>
    3a7c:	nop
    3a80:	stp	x29, x30, [sp, #-48]!
    3a84:	adrp	x2, 16000 <PyInit_select@@Base+0x11d38>
    3a88:	mov	x29, sp
    3a8c:	stp	x19, x20, [sp, #16]
    3a90:	mov	x19, x1
    3a94:	mov	x20, x0
    3a98:	ldr	x1, [x2, #3960]
    3a9c:	ldr	x0, [x19, #8]
    3aa0:	cmp	x0, x1
    3aa4:	b.eq	3b40 <PySequence_Fast@plt+0x1910>  // b.none
    3aa8:	bl	21b0 <PyType_IsSubtype@plt>
    3aac:	cbnz	w0, 3b40 <PySequence_Fast@plt+0x1910>
    3ab0:	mov	x0, x19
    3ab4:	str	x21, [sp, #32]
    3ab8:	bl	21e0 <_PyLong_AsInt@plt>
    3abc:	mov	w21, w0
    3ac0:	cmn	w0, #0x1
    3ac4:	b.eq	3afc <PySequence_Fast@plt+0x18cc>  // b.none
    3ac8:	ldr	x2, [x20, #304]
    3acc:	mov	x0, x20
    3ad0:	mov	x1, #0x0                   	// #0
    3ad4:	blr	x2
    3ad8:	mov	x19, x0
    3adc:	cbz	x0, 3b6c <PySequence_Fast@plt+0x193c>
    3ae0:	str	w21, [x19, #16]
    3ae4:	tbnz	w21, #31, 3b84 <PySequence_Fast@plt+0x1954>
    3ae8:	ldr	x21, [sp, #32]
    3aec:	mov	x0, x19
    3af0:	ldp	x19, x20, [sp, #16]
    3af4:	ldp	x29, x30, [sp], #48
    3af8:	ret
    3afc:	bl	2080 <PyErr_Occurred@plt>
    3b00:	cbnz	x0, 3b6c <PySequence_Fast@plt+0x193c>
    3b04:	ldr	x2, [x20, #304]
    3b08:	mov	x0, x20
    3b0c:	mov	x1, #0x0                   	// #0
    3b10:	blr	x2
    3b14:	mov	x19, x0
    3b18:	cbz	x0, 3b6c <PySequence_Fast@plt+0x193c>
    3b1c:	bl	2140 <PyEval_SaveThread@plt>
    3b20:	mov	x20, x0
    3b24:	mov	w0, #0x80000               	// #524288
    3b28:	bl	20d0 <epoll_create1@plt>
    3b2c:	str	w0, [x19, #16]
    3b30:	mov	x0, x20
    3b34:	bl	1f00 <PyEval_RestoreThread@plt>
    3b38:	ldr	w21, [x19, #16]
    3b3c:	b	3ae4 <PySequence_Fast@plt+0x18b4>
    3b40:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3b44:	mov	x19, #0x0                   	// #0
    3b48:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3b4c:	add	x1, x1, #0x6d8
    3b50:	ldr	x0, [x0, #3992]
    3b54:	ldr	x0, [x0]
    3b58:	bl	1f70 <PyErr_SetString@plt>
    3b5c:	mov	x0, x19
    3b60:	ldp	x19, x20, [sp, #16]
    3b64:	ldp	x29, x30, [sp], #48
    3b68:	ret
    3b6c:	mov	x19, #0x0                   	// #0
    3b70:	mov	x0, x19
    3b74:	ldp	x19, x20, [sp, #16]
    3b78:	ldr	x21, [sp, #32]
    3b7c:	ldp	x29, x30, [sp], #48
    3b80:	ret
    3b84:	ldr	x0, [x19]
    3b88:	sub	x0, x0, #0x1
    3b8c:	str	x0, [x19]
    3b90:	cbz	x0, 3bb0 <PySequence_Fast@plt+0x1980>
    3b94:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3b98:	mov	x19, #0x0                   	// #0
    3b9c:	ldr	x0, [x0, #4000]
    3ba0:	ldr	x0, [x0]
    3ba4:	bl	1f20 <PyErr_SetFromErrno@plt>
    3ba8:	ldr	x21, [sp, #32]
    3bac:	b	3aec <PySequence_Fast@plt+0x18bc>
    3bb0:	mov	x0, x19
    3bb4:	bl	1f40 <_Py_Dealloc@plt>
    3bb8:	b	3b94 <PySequence_Fast@plt+0x1964>
    3bbc:	nop
    3bc0:	sub	sp, sp, #0x60
    3bc4:	stp	x29, x30, [sp, #16]
    3bc8:	add	x29, sp, #0x10
    3bcc:	stp	x19, x20, [sp, #32]
    3bd0:	mov	x19, x1
    3bd4:	mov	x1, x2
    3bd8:	stp	x21, x22, [sp, #48]
    3bdc:	mov	x21, x0
    3be0:	cbz	x3, 3cd8 <PySequence_Fast@plt+0x1aa8>
    3be4:	ldr	x22, [x3, #16]
    3be8:	add	x22, x2, x22
    3bec:	add	x0, sp, #0x40
    3bf0:	str	x0, [sp]
    3bf4:	adrp	x4, 17000 <PyInit_select@@Base+0x12d38>
    3bf8:	add	x4, x4, #0x360
    3bfc:	mov	x0, x19
    3c00:	add	x4, x4, #0x2b8
    3c04:	mov	w7, #0x0                   	// #0
    3c08:	mov	w6, #0x2                   	// #2
    3c0c:	mov	w5, #0x1                   	// #1
    3c10:	mov	x2, #0x0                   	// #0
    3c14:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    3c18:	mov	x19, x0
    3c1c:	cbz	x0, 3d08 <PySequence_Fast@plt+0x1ad8>
    3c20:	ldr	x0, [x19]
    3c24:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3c28:	mov	w20, w0
    3c2c:	cmn	w0, #0x1
    3c30:	b.eq	3d08 <PySequence_Fast@plt+0x1ad8>  // b.none
    3c34:	cmp	x22, #0x1
    3c38:	b.eq	3d50 <PySequence_Fast@plt+0x1b20>  // b.none
    3c3c:	ldr	x0, [x19, #8]
    3c40:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3c44:	ldr	x1, [x1, #3960]
    3c48:	ldr	x0, [x0, #8]
    3c4c:	cmp	x0, x1
    3c50:	b.eq	3d20 <PySequence_Fast@plt+0x1af0>  // b.none
    3c54:	bl	21b0 <PyType_IsSubtype@plt>
    3c58:	cbnz	w0, 3d20 <PySequence_Fast@plt+0x1af0>
    3c5c:	ldr	x0, [x19, #8]
    3c60:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    3c64:	cmn	w0, #0x1
    3c68:	mov	w19, w0
    3c6c:	b.eq	3d58 <PySequence_Fast@plt+0x1b28>  // b.none
    3c70:	ldr	w21, [x21, #16]
    3c74:	tbnz	w21, #31, 3cf0 <PySequence_Fast@plt+0x1ac0>
    3c78:	str	w19, [sp, #80]
    3c7c:	str	w20, [sp, #88]
    3c80:	bl	2140 <PyEval_SaveThread@plt>
    3c84:	mov	w2, w20
    3c88:	add	x3, sp, #0x50
    3c8c:	mov	w1, #0x1                   	// #1
    3c90:	mov	x20, x0
    3c94:	mov	w0, w21
    3c98:	bl	2120 <epoll_ctl@plt>
    3c9c:	mov	w19, w0
    3ca0:	mov	x0, x20
    3ca4:	bl	1f00 <PyEval_RestoreThread@plt>
    3ca8:	tbnz	w19, #31, 3d68 <PySequence_Fast@plt+0x1b38>
    3cac:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    3cb0:	ldr	x1, [x1, #4040]
    3cb4:	mov	x0, x1
    3cb8:	ldr	x2, [x1]
    3cbc:	add	x2, x2, #0x1
    3cc0:	str	x2, [x1]
    3cc4:	ldp	x29, x30, [sp, #16]
    3cc8:	ldp	x19, x20, [sp, #32]
    3ccc:	ldp	x21, x22, [sp, #48]
    3cd0:	add	sp, sp, #0x60
    3cd4:	ret
    3cd8:	sub	x0, x2, #0x1
    3cdc:	mov	x22, x2
    3ce0:	cmp	x0, #0x1
    3ce4:	b.hi	3bec <PySequence_Fast@plt+0x19bc>  // b.pmore
    3ce8:	cbnz	x19, 3c20 <PySequence_Fast@plt+0x19f0>
    3cec:	b	3bec <PySequence_Fast@plt+0x19bc>
    3cf0:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3cf4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3cf8:	add	x1, x1, #0x6b0
    3cfc:	ldr	x0, [x0, #3984]
    3d00:	ldr	x0, [x0]
    3d04:	bl	1f70 <PyErr_SetString@plt>
    3d08:	mov	x0, #0x0                   	// #0
    3d0c:	ldp	x29, x30, [sp, #16]
    3d10:	ldp	x19, x20, [sp, #32]
    3d14:	ldp	x21, x22, [sp, #48]
    3d18:	add	sp, sp, #0x60
    3d1c:	ret
    3d20:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3d24:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3d28:	add	x1, x1, #0x6d8
    3d2c:	ldr	x0, [x0, #3992]
    3d30:	ldr	x0, [x0]
    3d34:	bl	1f70 <PyErr_SetString@plt>
    3d38:	mov	x0, #0x0                   	// #0
    3d3c:	ldp	x29, x30, [sp, #16]
    3d40:	ldp	x19, x20, [sp, #32]
    3d44:	ldp	x21, x22, [sp, #48]
    3d48:	add	sp, sp, #0x60
    3d4c:	ret
    3d50:	mov	w19, #0x7                   	// #7
    3d54:	b	3c70 <PySequence_Fast@plt+0x1a40>
    3d58:	bl	2080 <PyErr_Occurred@plt>
    3d5c:	cbz	x0, 3c70 <PySequence_Fast@plt+0x1a40>
    3d60:	mov	x0, #0x0                   	// #0
    3d64:	b	3d0c <PySequence_Fast@plt+0x1adc>
    3d68:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    3d6c:	ldr	x0, [x0, #4000]
    3d70:	ldr	x0, [x0]
    3d74:	bl	1f20 <PyErr_SetFromErrno@plt>
    3d78:	mov	x0, #0x0                   	// #0
    3d7c:	b	3cc4 <PySequence_Fast@plt+0x1a94>
    3d80:	mov	x12, #0xc250                	// #49744
    3d84:	sub	sp, sp, x12
    3d88:	adrp	x4, 16000 <PyInit_select@@Base+0x11d38>
    3d8c:	stp	x29, x30, [sp]
    3d90:	mov	x29, sp
    3d94:	ldr	x4, [x4, #4040]
    3d98:	stp	x19, x20, [sp, #16]
    3d9c:	mov	x19, x0
    3da0:	stp	x21, x22, [sp, #32]
    3da4:	mov	x20, x1
    3da8:	cmp	x3, x4
    3dac:	stp	x23, x24, [sp, #48]
    3db0:	mov	x23, x2
    3db4:	stp	x27, x28, [sp, #80]
    3db8:	b.eq	40c8 <PySequence_Fast@plt+0x1e98>  // b.none
    3dbc:	mov	x1, x3
    3dc0:	add	x0, sp, #0x88
    3dc4:	mov	w2, #0x3                   	// #3
    3dc8:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    3dcc:	tbnz	w0, #31, 40d0 <PySequence_Fast@plt+0x1ea0>
    3dd0:	ldr	x0, [sp, #136]
    3dd4:	add	x28, sp, #0x90
    3dd8:	mov	x1, x28
    3ddc:	mov	w2, #0x3                   	// #3
    3de0:	bl	2190 <_PyTime_AsTimeval@plt>
    3de4:	cmn	w0, #0x1
    3de8:	b.eq	40e4 <PySequence_Fast@plt+0x1eb4>  // b.none
    3dec:	ldr	x0, [sp, #144]
    3df0:	tbnz	x0, #63, 41c0 <PySequence_Fast@plt+0x1f90>
    3df4:	mov	x7, #0x4020                	// #16416
    3df8:	add	x4, sp, x7
    3dfc:	mov	w3, #0xffffffff            	// #-1
    3e00:	mov	x8, #0x8020                	// #32800
    3e04:	add	x21, sp, #0x220
    3e08:	add	x24, sp, #0xa0
    3e0c:	str	w3, [x4, #540]
    3e10:	add	x4, sp, x8
    3e14:	mov	x0, x19
    3e18:	mov	x2, x21
    3e1c:	mov	x1, x24
    3e20:	str	w3, [sp, #556]
    3e24:	str	w3, [x4, #556]
    3e28:	bl	2858 <PySequence_Fast@plt+0x628>
    3e2c:	mov	w22, w0
    3e30:	tbnz	w0, #31, 3f94 <PySequence_Fast@plt+0x1d64>
    3e34:	mov	x3, #0x4230                	// #16944
    3e38:	add	x19, sp, x3
    3e3c:	stp	x25, x26, [sp, #64]
    3e40:	add	x26, sp, #0x120
    3e44:	mov	x0, x20
    3e48:	mov	x2, x19
    3e4c:	mov	x1, x26
    3e50:	bl	2858 <PySequence_Fast@plt+0x628>
    3e54:	mov	w25, w0
    3e58:	mov	x4, #0x8240                	// #33344
    3e5c:	add	x20, sp, x4
    3e60:	tbnz	w0, #31, 40c0 <PySequence_Fast@plt+0x1e90>
    3e64:	add	x27, sp, #0x1a0
    3e68:	mov	x0, x23
    3e6c:	mov	x2, x20
    3e70:	mov	x1, x27
    3e74:	bl	2858 <PySequence_Fast@plt+0x628>
    3e78:	tbnz	w0, #31, 40c0 <PySequence_Fast@plt+0x1e90>
    3e7c:	cmp	w22, w25
    3e80:	str	xzr, [sp, #104]
    3e84:	csel	w22, w22, w25, ge  // ge = tcont
    3e88:	cmp	w0, w22
    3e8c:	csel	w25, w0, w22, ge  // ge = tcont
    3e90:	cbz	x28, 3ea4 <PySequence_Fast@plt+0x1c74>
    3e94:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3e98:	ldr	x1, [sp, #136]
    3e9c:	add	x0, x0, x1
    3ea0:	str	x0, [sp, #104]
    3ea4:	bl	21d0 <__errno_location@plt>
    3ea8:	mov	x23, x0
    3eac:	add	x0, sp, #0x90
    3eb0:	str	x0, [sp, #112]
    3eb4:	cbz	x28, 3ec4 <PySequence_Fast@plt+0x1c94>
    3eb8:	b	40ec <PySequence_Fast@plt+0x1ebc>
    3ebc:	bl	21a0 <PyErr_CheckSignals@plt>
    3ec0:	cbnz	w0, 40c0 <PySequence_Fast@plt+0x1e90>
    3ec4:	bl	2140 <PyEval_SaveThread@plt>
    3ec8:	str	wzr, [x23]
    3ecc:	mov	x3, x27
    3ed0:	mov	x2, x26
    3ed4:	mov	x1, x24
    3ed8:	mov	x4, #0x0                   	// #0
    3edc:	mov	x28, x0
    3ee0:	mov	w0, w25
    3ee4:	bl	2170 <select@plt>
    3ee8:	mov	w22, w0
    3eec:	mov	x0, x28
    3ef0:	bl	1f00 <PyEval_RestoreThread@plt>
    3ef4:	ldr	w0, [x23]
    3ef8:	cmp	w0, #0x4
    3efc:	b.eq	3ebc <PySequence_Fast@plt+0x1c8c>  // b.none
    3f00:	tbnz	w22, #31, 41a4 <PySequence_Fast@plt+0x1f74>
    3f04:	mov	x0, x24
    3f08:	mov	x1, x21
    3f0c:	bl	2a58 <PySequence_Fast@plt+0x828>
    3f10:	mov	x25, x0
    3f14:	mov	x1, x19
    3f18:	mov	x0, x26
    3f1c:	bl	2a58 <PySequence_Fast@plt+0x828>
    3f20:	mov	x24, x0
    3f24:	mov	x1, x20
    3f28:	mov	x0, x27
    3f2c:	bl	2a58 <PySequence_Fast@plt+0x828>
    3f30:	mov	x22, #0x0                   	// #0
    3f34:	mov	x23, x0
    3f38:	bl	2080 <PyErr_Occurred@plt>
    3f3c:	cbz	x0, 4184 <PySequence_Fast@plt+0x1f54>
    3f40:	cbz	x25, 3f5c <PySequence_Fast@plt+0x1d2c>
    3f44:	ldr	x0, [x25]
    3f48:	sub	x0, x0, #0x1
    3f4c:	str	x0, [x25]
    3f50:	cbnz	x0, 3f5c <PySequence_Fast@plt+0x1d2c>
    3f54:	mov	x0, x25
    3f58:	bl	1f40 <_Py_Dealloc@plt>
    3f5c:	cbz	x24, 3f78 <PySequence_Fast@plt+0x1d48>
    3f60:	ldr	x0, [x24]
    3f64:	sub	x0, x0, #0x1
    3f68:	str	x0, [x24]
    3f6c:	cbnz	x0, 3f78 <PySequence_Fast@plt+0x1d48>
    3f70:	mov	x0, x24
    3f74:	bl	1f40 <_Py_Dealloc@plt>
    3f78:	cbz	x23, 3f8c <PySequence_Fast@plt+0x1d5c>
    3f7c:	ldr	x0, [x23]
    3f80:	sub	x0, x0, #0x1
    3f84:	str	x0, [x23]
    3f88:	cbz	x0, 4174 <PySequence_Fast@plt+0x1f44>
    3f8c:	ldp	x25, x26, [sp, #64]
    3f90:	b	3fb8 <PySequence_Fast@plt+0x1d88>
    3f94:	mov	x5, #0x4230                	// #16944
    3f98:	mov	x6, #0x8240                	// #33344
    3f9c:	add	x19, sp, x5
    3fa0:	add	x20, sp, x6
    3fa4:	mov	x22, #0x0                   	// #0
    3fa8:	b	3fb8 <PySequence_Fast@plt+0x1d88>
    3fac:	add	x21, x21, #0x10
    3fb0:	cmp	x19, x21
    3fb4:	b.eq	3ff0 <PySequence_Fast@plt+0x1dc0>  // b.none
    3fb8:	ldr	w0, [x21, #12]
    3fbc:	tbnz	w0, #31, 3ff0 <PySequence_Fast@plt+0x1dc0>
    3fc0:	ldr	x0, [x21]
    3fc4:	cbz	x0, 3fac <PySequence_Fast@plt+0x1d7c>
    3fc8:	ldr	x1, [x0]
    3fcc:	str	xzr, [x21]
    3fd0:	sub	x1, x1, #0x1
    3fd4:	str	x1, [x0]
    3fd8:	cbnz	x1, 3fac <PySequence_Fast@plt+0x1d7c>
    3fdc:	add	x21, x21, #0x10
    3fe0:	bl	1f40 <_Py_Dealloc@plt>
    3fe4:	cmp	x19, x21
    3fe8:	b.ne	3fb8 <PySequence_Fast@plt+0x1d88>  // b.any
    3fec:	nop
    3ff0:	mov	w0, #0xffffffff            	// #-1
    3ff4:	str	w0, [sp, #556]
    3ff8:	b	4008 <PySequence_Fast@plt+0x1dd8>
    3ffc:	add	x19, x19, #0x10
    4000:	cmp	x19, x20
    4004:	b.eq	4040 <PySequence_Fast@plt+0x1e10>  // b.none
    4008:	ldr	w0, [x19, #12]
    400c:	tbnz	w0, #31, 4040 <PySequence_Fast@plt+0x1e10>
    4010:	ldr	x0, [x19]
    4014:	cbz	x0, 3ffc <PySequence_Fast@plt+0x1dcc>
    4018:	ldr	x1, [x0]
    401c:	str	xzr, [x19]
    4020:	sub	x1, x1, #0x1
    4024:	str	x1, [x0]
    4028:	cbnz	x1, 3ffc <PySequence_Fast@plt+0x1dcc>
    402c:	add	x19, x19, #0x10
    4030:	bl	1f40 <_Py_Dealloc@plt>
    4034:	cmp	x19, x20
    4038:	b.ne	4008 <PySequence_Fast@plt+0x1dd8>  // b.any
    403c:	nop
    4040:	mov	x1, #0xc250                	// #49744
    4044:	mov	x2, #0x4020                	// #16416
    4048:	add	x19, sp, x1
    404c:	add	x1, sp, x2
    4050:	mov	w0, #0xffffffff            	// #-1
    4054:	str	w0, [x1, #540]
    4058:	b	4068 <PySequence_Fast@plt+0x1e38>
    405c:	add	x20, x20, #0x10
    4060:	cmp	x19, x20
    4064:	b.eq	409c <PySequence_Fast@plt+0x1e6c>  // b.none
    4068:	ldr	w0, [x20, #12]
    406c:	tbnz	w0, #31, 409c <PySequence_Fast@plt+0x1e6c>
    4070:	ldr	x0, [x20]
    4074:	cbz	x0, 405c <PySequence_Fast@plt+0x1e2c>
    4078:	ldr	x1, [x0]
    407c:	str	xzr, [x20]
    4080:	sub	x1, x1, #0x1
    4084:	str	x1, [x0]
    4088:	cbnz	x1, 405c <PySequence_Fast@plt+0x1e2c>
    408c:	add	x20, x20, #0x10
    4090:	bl	1f40 <_Py_Dealloc@plt>
    4094:	cmp	x19, x20
    4098:	b.ne	4068 <PySequence_Fast@plt+0x1e38>  // b.any
    409c:	mov	x0, x22
    40a0:	mov	x12, #0xc250                	// #49744
    40a4:	ldp	x29, x30, [sp]
    40a8:	ldp	x19, x20, [sp, #16]
    40ac:	ldp	x21, x22, [sp, #32]
    40b0:	ldp	x23, x24, [sp, #48]
    40b4:	ldp	x27, x28, [sp, #80]
    40b8:	add	sp, sp, x12
    40bc:	ret
    40c0:	ldp	x25, x26, [sp, #64]
    40c4:	b	3fa4 <PySequence_Fast@plt+0x1d74>
    40c8:	mov	x28, #0x0                   	// #0
    40cc:	b	3df4 <PySequence_Fast@plt+0x1bc4>
    40d0:	adrp	x19, 16000 <PyInit_select@@Base+0x11d38>
    40d4:	ldr	x19, [x19, #3992]
    40d8:	ldr	x0, [x19]
    40dc:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    40e0:	cbnz	w0, 415c <PySequence_Fast@plt+0x1f2c>
    40e4:	mov	x22, #0x0                   	// #0
    40e8:	b	409c <PySequence_Fast@plt+0x1e6c>
    40ec:	bl	2140 <PyEval_SaveThread@plt>
    40f0:	mov	x5, x0
    40f4:	str	wzr, [x23]
    40f8:	mov	x4, x28
    40fc:	mov	x3, x27
    4100:	mov	x2, x26
    4104:	mov	x1, x24
    4108:	mov	w0, w25
    410c:	str	x5, [sp, #120]
    4110:	bl	2170 <select@plt>
    4114:	ldr	x5, [sp, #120]
    4118:	mov	w22, w0
    411c:	mov	x0, x5
    4120:	bl	1f00 <PyEval_RestoreThread@plt>
    4124:	ldr	w0, [x23]
    4128:	cmp	w0, #0x4
    412c:	b.ne	3f00 <PySequence_Fast@plt+0x1cd0>  // b.any
    4130:	bl	21a0 <PyErr_CheckSignals@plt>
    4134:	cbnz	w0, 40c0 <PySequence_Fast@plt+0x1e90>
    4138:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    413c:	ldr	x1, [sp, #104]
    4140:	sub	x0, x1, x0
    4144:	str	x0, [sp, #136]
    4148:	ldr	x1, [sp, #112]
    414c:	tbnz	x0, #63, 41e0 <PySequence_Fast@plt+0x1fb0>
    4150:	mov	w2, #0x1                   	// #1
    4154:	bl	20b0 <_PyTime_AsTimeval_noraise@plt>
    4158:	b	3eb4 <PySequence_Fast@plt+0x1c84>
    415c:	ldr	x0, [x19]
    4160:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4164:	mov	x22, #0x0                   	// #0
    4168:	add	x1, x1, #0x778
    416c:	bl	1f70 <PyErr_SetString@plt>
    4170:	b	409c <PySequence_Fast@plt+0x1e6c>
    4174:	mov	x0, x23
    4178:	bl	1f40 <_Py_Dealloc@plt>
    417c:	ldp	x25, x26, [sp, #64]
    4180:	b	3fb8 <PySequence_Fast@plt+0x1d88>
    4184:	mov	x3, x23
    4188:	mov	x2, x24
    418c:	mov	x1, x25
    4190:	mov	x0, #0x3                   	// #3
    4194:	bl	2210 <PyTuple_Pack@plt>
    4198:	mov	x22, x0
    419c:	cbnz	x25, 3f44 <PySequence_Fast@plt+0x1d14>
    41a0:	b	3f5c <PySequence_Fast@plt+0x1d2c>
    41a4:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    41a8:	mov	x22, #0x0                   	// #0
    41ac:	ldr	x0, [x0, #4000]
    41b0:	ldr	x0, [x0]
    41b4:	bl	1f20 <PyErr_SetFromErrno@plt>
    41b8:	ldp	x25, x26, [sp, #64]
    41bc:	b	3fb8 <PySequence_Fast@plt+0x1d88>
    41c0:	adrp	x0, 16000 <PyInit_select@@Base+0x11d38>
    41c4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41c8:	mov	x22, #0x0                   	// #0
    41cc:	add	x1, x1, #0x798
    41d0:	ldr	x0, [x0, #3984]
    41d4:	ldr	x0, [x0]
    41d8:	bl	1f70 <PyErr_SetString@plt>
    41dc:	b	409c <PySequence_Fast@plt+0x1e6c>
    41e0:	stp	xzr, xzr, [x24]
    41e4:	stp	xzr, xzr, [x26]
    41e8:	stp	xzr, xzr, [x27]
    41ec:	stp	xzr, xzr, [x24, #16]
    41f0:	stp	xzr, xzr, [x26, #16]
    41f4:	stp	xzr, xzr, [x27, #16]
    41f8:	stp	xzr, xzr, [x24, #32]
    41fc:	stp	xzr, xzr, [x26, #32]
    4200:	stp	xzr, xzr, [x27, #32]
    4204:	stp	xzr, xzr, [x24, #48]
    4208:	stp	xzr, xzr, [x26, #48]
    420c:	stp	xzr, xzr, [x27, #48]
    4210:	stp	xzr, xzr, [x24, #64]
    4214:	stp	xzr, xzr, [x26, #64]
    4218:	stp	xzr, xzr, [x27, #64]
    421c:	stp	xzr, xzr, [x24, #80]
    4220:	stp	xzr, xzr, [x26, #80]
    4224:	stp	xzr, xzr, [x27, #80]
    4228:	stp	xzr, xzr, [x24, #96]
    422c:	stp	xzr, xzr, [x26, #96]
    4230:	stp	xzr, xzr, [x27, #96]
    4234:	stp	xzr, xzr, [x24, #112]
    4238:	stp	xzr, xzr, [x26, #112]
    423c:	stp	xzr, xzr, [x27, #112]
    4240:	b	3f04 <PySequence_Fast@plt+0x1cd4>
    4244:	nop
    4248:	stp	x29, x30, [sp, #-32]!
    424c:	sub	x0, x2, #0x3
    4250:	cmp	x0, #0x1
    4254:	mov	x29, sp
    4258:	stp	x19, x20, [sp, #16]
    425c:	mov	x20, x2
    4260:	mov	x19, x1
    4264:	b.hi	4288 <PySequence_Fast@plt+0x2058>  // b.pmore
    4268:	cmp	x20, #0x3
    426c:	ldp	x0, x1, [x19]
    4270:	ldr	x2, [x19, #16]
    4274:	b.le	42b4 <PySequence_Fast@plt+0x2084>
    4278:	ldr	x3, [x19, #24]
    427c:	ldp	x19, x20, [sp, #16]
    4280:	ldp	x29, x30, [sp], #32
    4284:	b	3d80 <PySequence_Fast@plt+0x1b50>
    4288:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    428c:	mov	x1, x20
    4290:	add	x0, x0, #0x7b8
    4294:	mov	x3, #0x4                   	// #4
    4298:	mov	x2, #0x3                   	// #3
    429c:	bl	2050 <_PyArg_CheckPositional@plt>
    42a0:	cbnz	w0, 4268 <PySequence_Fast@plt+0x2038>
    42a4:	mov	x0, #0x0                   	// #0
    42a8:	ldp	x19, x20, [sp, #16]
    42ac:	ldp	x29, x30, [sp], #32
    42b0:	ret
    42b4:	adrp	x3, 16000 <PyInit_select@@Base+0x11d38>
    42b8:	ldp	x19, x20, [sp, #16]
    42bc:	ldp	x29, x30, [sp], #32
    42c0:	ldr	x3, [x3, #4040]
    42c4:	b	3d80 <PySequence_Fast@plt+0x1b50>

00000000000042c8 <PyInit_select@@Base>:
    42c8:	stp	x29, x30, [sp, #-48]!
    42cc:	mov	w1, #0x3f5                 	// #1013
    42d0:	mov	x29, sp
    42d4:	stp	x19, x20, [sp, #16]
    42d8:	adrp	x20, 17000 <PyInit_select@@Base+0x12d38>
    42dc:	add	x20, x20, #0x360
    42e0:	add	x0, x20, #0x2f8
    42e4:	bl	2090 <PyModule_Create2@plt>
    42e8:	cbz	x0, 45ac <PyInit_select@@Base+0x2e4>
    42ec:	adrp	x2, 16000 <PyInit_select@@Base+0x11d38>
    42f0:	mov	x19, x0
    42f4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42f8:	add	x1, x1, #0x7c0
    42fc:	ldr	x2, [x2, #4000]
    4300:	ldr	x2, [x2]
    4304:	ldr	x3, [x2]
    4308:	add	x3, x3, #0x1
    430c:	str	x3, [x2]
    4310:	bl	2150 <PyModule_AddObject@plt>
    4314:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4318:	add	x1, x1, #0x7c8
    431c:	mov	x2, #0x1000                	// #4096
    4320:	mov	x0, x19
    4324:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4328:	add	x0, x20, #0x18
    432c:	bl	1fe0 <PyType_Ready@plt>
    4330:	tbnz	w0, #31, 45ac <PyInit_select@@Base+0x2e4>
    4334:	mov	x2, #0x1                   	// #1
    4338:	mov	x0, x19
    433c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4340:	add	x1, x1, #0x7d8
    4344:	str	x21, [sp, #32]
    4348:	bl	1ee0 <PyModule_AddIntConstant@plt>
    434c:	mov	x2, #0x2                   	// #2
    4350:	mov	x0, x19
    4354:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4358:	add	x1, x1, #0x7e0
    435c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4360:	adrp	x21, 17000 <PyInit_select@@Base+0x12d38>
    4364:	mov	x2, #0x4                   	// #4
    4368:	mov	x0, x19
    436c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4370:	add	x1, x1, #0x7e8
    4374:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4378:	add	x20, x21, #0x1c0
    437c:	mov	x2, #0x8                   	// #8
    4380:	mov	x0, x19
    4384:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4388:	add	x1, x1, #0x7f0
    438c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4390:	mov	x2, #0x10                  	// #16
    4394:	mov	x0, x19
    4398:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    439c:	add	x1, x1, #0x7f8
    43a0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43a4:	mov	x2, #0x20                  	// #32
    43a8:	mov	x0, x19
    43ac:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43b0:	add	x1, x1, #0x800
    43b4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43b8:	mov	x2, #0x40                  	// #64
    43bc:	mov	x0, x19
    43c0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43c4:	add	x1, x1, #0x810
    43c8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43cc:	mov	x2, #0x80                  	// #128
    43d0:	mov	x0, x19
    43d4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43d8:	add	x1, x1, #0x820
    43dc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43e0:	mov	x2, #0x100                 	// #256
    43e4:	mov	x0, x19
    43e8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43ec:	add	x1, x1, #0x830
    43f0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43f4:	mov	x2, #0x200                 	// #512
    43f8:	mov	x0, x19
    43fc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4400:	add	x1, x1, #0x840
    4404:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4408:	mov	x2, #0x400                 	// #1024
    440c:	mov	x0, x19
    4410:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4414:	add	x1, x1, #0x850
    4418:	bl	1ee0 <PyModule_AddIntConstant@plt>
    441c:	mov	x0, x19
    4420:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4424:	mov	x2, #0x2000                	// #8192
    4428:	add	x1, x1, #0x858
    442c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4430:	adrp	x1, 16000 <PyInit_select@@Base+0x11d38>
    4434:	mov	x0, x20
    4438:	ldr	x1, [x1, #4032]
    443c:	str	x1, [x20, #8]
    4440:	bl	1fe0 <PyType_Ready@plt>
    4444:	tbnz	w0, #31, 45a8 <PyInit_select@@Base+0x2e0>
    4448:	ldr	x3, [x21, #448]
    444c:	mov	x2, x20
    4450:	mov	x0, x19
    4454:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4458:	add	x3, x3, #0x1
    445c:	add	x1, x1, #0x868
    4460:	str	x3, [x21, #448]
    4464:	bl	2150 <PyModule_AddObject@plt>
    4468:	mov	x0, x19
    446c:	mov	x2, #0x1                   	// #1
    4470:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4474:	add	x1, x1, #0x870
    4478:	bl	1ee0 <PyModule_AddIntConstant@plt>
    447c:	mov	x0, x19
    4480:	mov	x2, #0x4                   	// #4
    4484:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4488:	add	x1, x1, #0x878
    448c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4490:	mov	x0, x19
    4494:	mov	x2, #0x2                   	// #2
    4498:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    449c:	add	x1, x1, #0x888
    44a0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    44a4:	mov	x0, x19
    44a8:	mov	x2, #0x8                   	// #8
    44ac:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    44b0:	add	x1, x1, #0x898
    44b4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    44b8:	mov	x0, x19
    44bc:	mov	x2, #0x10                  	// #16
    44c0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    44c4:	add	x1, x1, #0x8a8
    44c8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    44cc:	mov	x0, x19
    44d0:	mov	x2, #0x2000                	// #8192
    44d4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    44d8:	add	x1, x1, #0x8b8
    44dc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    44e0:	mov	x0, x19
    44e4:	mov	x2, #0x80000000            	// #2147483648
    44e8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    44ec:	add	x1, x1, #0x8c8
    44f0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    44f4:	mov	x0, x19
    44f8:	mov	x2, #0x40000000            	// #1073741824
    44fc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4500:	add	x1, x1, #0x8d0
    4504:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4508:	mov	x0, x19
    450c:	mov	x2, #0x10000000            	// #268435456
    4510:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4514:	add	x1, x1, #0x8e0
    4518:	bl	1ee0 <PyModule_AddIntConstant@plt>
    451c:	mov	x0, x19
    4520:	mov	x2, #0x40                  	// #64
    4524:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4528:	add	x1, x1, #0x8f0
    452c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4530:	mov	x0, x19
    4534:	mov	x2, #0x80                  	// #128
    4538:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    453c:	add	x1, x1, #0x900
    4540:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4544:	mov	x0, x19
    4548:	mov	x2, #0x100                 	// #256
    454c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4550:	add	x1, x1, #0x910
    4554:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4558:	mov	x0, x19
    455c:	mov	x2, #0x200                 	// #512
    4560:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4564:	add	x1, x1, #0x920
    4568:	bl	1ee0 <PyModule_AddIntConstant@plt>
    456c:	mov	x0, x19
    4570:	mov	x2, #0x400                 	// #1024
    4574:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4578:	add	x1, x1, #0x930
    457c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4580:	mov	x0, x19
    4584:	mov	x2, #0x80000               	// #524288
    4588:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    458c:	add	x1, x1, #0x940
    4590:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4594:	mov	x0, x19
    4598:	ldp	x19, x20, [sp, #16]
    459c:	ldr	x21, [sp, #32]
    45a0:	ldp	x29, x30, [sp], #48
    45a4:	ret
    45a8:	ldr	x21, [sp, #32]
    45ac:	mov	x19, #0x0                   	// #0
    45b0:	mov	x0, x19
    45b4:	ldp	x19, x20, [sp, #16]
    45b8:	ldp	x29, x30, [sp], #48
    45bc:	ret

Disassembly of section .fini:

00000000000045c0 <.fini>:
    45c0:	stp	x29, x30, [sp, #-16]!
    45c4:	mov	x29, sp
    45c8:	ldp	x29, x30, [sp], #16
    45cc:	ret
