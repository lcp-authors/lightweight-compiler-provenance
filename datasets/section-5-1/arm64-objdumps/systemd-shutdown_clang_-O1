
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-shutdown_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000215678 <_start>:
  215678:	mov	x29, #0x0                   	// #0
  21567c:	mov	x30, #0x0                   	// #0
  215680:	mov	x5, x0
  215684:	ldr	x1, [sp]
  215688:	add	x2, sp, #0x8
  21568c:	mov	x6, sp
  215690:	movz	x0, #0x0, lsl #48
  215694:	movk	x0, #0x0, lsl #32
  215698:	movk	x0, #0x21, lsl #16
  21569c:	movk	x0, #0x57c8
  2156a0:	movz	x3, #0x0, lsl #48
  2156a4:	movk	x3, #0x0, lsl #32
  2156a8:	movk	x3, #0x21, lsl #16
  2156ac:	movk	x3, #0xa910
  2156b0:	movz	x4, #0x0, lsl #48
  2156b4:	movk	x4, #0x0, lsl #32
  2156b8:	movk	x4, #0x21, lsl #16
  2156bc:	movk	x4, #0xa990
  2156c0:	bl	21a9f0 <__libc_start_main@plt>
  2156c4:	bl	21aa00 <abort@plt>

00000000002156c8 <call_weak_fn>:
  2156c8:	adrp	x0, 22b000 <__lxstat64@plt+0xfc20>
  2156cc:	ldr	x0, [x0, #2664]
  2156d0:	cbz	x0, 2156d8 <call_weak_fn+0x10>
  2156d4:	b	21aa10 <__gmon_start__@plt>
  2156d8:	ret

00000000002156dc <deregister_tm_clones>:
  2156dc:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  2156e0:	add	x0, x0, #0xf90
  2156e4:	adrp	x1, 23b000 <_DYNAMIC+0xf778>
  2156e8:	add	x1, x1, #0xf90
  2156ec:	cmp	x0, x1
  2156f0:	b.eq	215724 <deregister_tm_clones+0x48>  // b.none
  2156f4:	stp	x29, x30, [sp, #-32]!
  2156f8:	mov	x29, sp
  2156fc:	adrp	x0, 203000 <main.dirs-0x548>
  215700:	ldr	x0, [x0, #1328]
  215704:	str	x0, [sp, #24]
  215708:	mov	x1, x0
  21570c:	cbz	x1, 21571c <deregister_tm_clones+0x40>
  215710:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  215714:	add	x0, x0, #0xf90
  215718:	blr	x1
  21571c:	ldp	x29, x30, [sp], #32
  215720:	ret
  215724:	ret

0000000000215728 <register_tm_clones>:
  215728:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  21572c:	add	x0, x0, #0xf90
  215730:	adrp	x1, 23b000 <_DYNAMIC+0xf778>
  215734:	add	x1, x1, #0xf90
  215738:	sub	x0, x0, x1
  21573c:	lsr	x1, x0, #63
  215740:	add	x0, x1, x0, asr #3
  215744:	cmp	xzr, x0, asr #1
  215748:	b.eq	215780 <register_tm_clones+0x58>  // b.none
  21574c:	stp	x29, x30, [sp, #-32]!
  215750:	mov	x29, sp
  215754:	asr	x1, x0, #1
  215758:	adrp	x0, 203000 <main.dirs-0x548>
  21575c:	ldr	x0, [x0, #1336]
  215760:	str	x0, [sp, #24]
  215764:	mov	x2, x0
  215768:	cbz	x2, 215778 <register_tm_clones+0x50>
  21576c:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  215770:	add	x0, x0, #0xf90
  215774:	blr	x2
  215778:	ldp	x29, x30, [sp], #32
  21577c:	ret
  215780:	ret

0000000000215784 <__do_global_dtors_aux>:
  215784:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  215788:	ldrb	w0, [x0, #3992]
  21578c:	cbnz	w0, 2157b0 <__do_global_dtors_aux+0x2c>
  215790:	stp	x29, x30, [sp, #-16]!
  215794:	mov	x29, sp
  215798:	bl	2156dc <deregister_tm_clones>
  21579c:	adrp	x0, 23b000 <_DYNAMIC+0xf778>
  2157a0:	mov	w1, #0x1                   	// #1
  2157a4:	strb	w1, [x0, #3992]
  2157a8:	ldp	x29, x30, [sp], #16
  2157ac:	ret
  2157b0:	ret

00000000002157b4 <frame_dummy>:
  2157b4:	stp	x29, x30, [sp, #-16]!
  2157b8:	mov	x29, sp
  2157bc:	bl	215728 <register_tm_clones>
  2157c0:	ldp	x29, x30, [sp], #16
  2157c4:	ret

00000000002157c8 <main>:
  2157c8:	sub	sp, sp, #0xd0
  2157cc:	stp	x29, x30, [sp, #112]
  2157d0:	stp	x20, x19, [sp, #192]
  2157d4:	add	x29, sp, #0x70
  2157d8:	mov	w19, w0
  2157dc:	mov	w0, wzr
  2157e0:	stp	x28, x27, [sp, #128]
  2157e4:	stp	x26, x25, [sp, #144]
  2157e8:	stp	x24, x23, [sp, #160]
  2157ec:	stp	x22, x21, [sp, #176]
  2157f0:	mov	x23, x1
  2157f4:	stur	xzr, [x29, #-8]
  2157f8:	bl	21aa20 <log_set_target@plt>
  2157fc:	mov	w0, #0x1                   	// #1
  215800:	bl	21aa30 <log_set_prohibit_ipc@plt>
  215804:	mov	w0, wzr
  215808:	bl	21aa40 <log_parse_environment_realm@plt>
  21580c:	mov	w0, w19
  215810:	mov	x1, x23
  215814:	bl	216538 <parse_argv>
  215818:	tbnz	w0, #31, 2163ac <main+0xbe4>
  21581c:	bl	21aa50 <log_open@plt>
  215820:	mov	w0, #0x12                  	// #18
  215824:	bl	21aa60 <umask@plt>
  215828:	bl	21aa70 <getpid_cached@plt>
  21582c:	cmp	w0, #0x1
  215830:	b.ne	2163b4 <main+0xbec>  // b.any
  215834:	adrp	x8, 23b000 <_DYNAMIC+0xf778>
  215838:	ldr	x19, [x8, #4000]
  21583c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  215840:	add	x1, x1, #0xb44
  215844:	mov	x0, x19
  215848:	bl	21aa80 <strcmp@plt>
  21584c:	mov	w8, #0x4567                	// #17767
  215850:	movk	w8, #0x123, lsl #16
  215854:	cbz	w0, 2158d0 <main+0x108>
  215858:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21585c:	add	x1, x1, #0x2ba
  215860:	mov	x0, x19
  215864:	bl	21aa80 <strcmp@plt>
  215868:	cbz	w0, 2158b0 <main+0xe8>
  21586c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  215870:	add	x1, x1, #0x4a7
  215874:	mov	x0, x19
  215878:	bl	21aa80 <strcmp@plt>
  21587c:	cbz	w0, 2158bc <main+0xf4>
  215880:	adrp	x1, 204000 <parse_argv.options+0xa90>
  215884:	add	x1, x1, #0x4ac
  215888:	mov	x0, x19
  21588c:	bl	21aa80 <strcmp@plt>
  215890:	cbz	w0, 2158c8 <main+0x100>
  215894:	adrp	x1, 204000 <parse_argv.options+0xa90>
  215898:	add	x1, x1, #0x1fb
  21589c:	mov	x0, x19
  2158a0:	bl	21aa80 <strcmp@plt>
  2158a4:	cbnz	w0, 21646c <main+0xca4>
  2158a8:	mov	w8, wzr
  2158ac:	b	2158d0 <main+0x108>
  2158b0:	mov	w8, #0xfedc                	// #65244
  2158b4:	movk	w8, #0x4321, lsl #16
  2158b8:	b	2158d0 <main+0x108>
  2158bc:	mov	w8, #0x123                 	// #291
  2158c0:	movk	w8, #0xcdef, lsl #16
  2158c4:	b	2158d0 <main+0x108>
  2158c8:	mov	w8, #0x4543                	// #17731
  2158cc:	movk	w8, #0x4558, lsl #16
  2158d0:	sub	x0, x29, #0x8
  2158d4:	str	w8, [sp, #40]
  2158d8:	bl	21aa90 <cg_get_root_path@plt>
  2158dc:	bl	21aaa0 <detect_container@plt>
  2158e0:	mov	w21, w0
  2158e4:	cmp	w0, #0x0
  2158e8:	b.gt	215910 <main+0x148>
  2158ec:	bl	21aab0 <log_get_target@plt>
  2158f0:	cmp	w0, #0x7
  2158f4:	b.hi	215910 <main+0x148>  // b.pmore
  2158f8:	mov	w8, #0x1                   	// #1
  2158fc:	lsl	w8, w8, w0
  215900:	mov	w9, #0xd4                  	// #212
  215904:	tst	w8, w9
  215908:	b.eq	215910 <main+0x148>  // b.none
  21590c:	bl	21690c <bump_sysctl_printk_log_level>
  215910:	adrp	x0, 204000 <parse_argv.options+0xa90>
  215914:	add	x0, x0, #0x61e
  215918:	bl	21aac0 <getenv@plt>
  21591c:	mov	x22, x0
  215920:	adrp	x0, 203000 <main.dirs-0x548>
  215924:	add	x0, x0, #0x8bc
  215928:	bl	21aac0 <getenv@plt>
  21592c:	cbz	x0, 21597c <main+0x1b4>
  215930:	mov	x19, x0
  215934:	bl	21aad0 <watchdog_set_device@plt>
  215938:	tbz	w0, #31, 21597c <main+0x1b4>
  21593c:	mov	w20, w0
  215940:	mov	w0, wzr
  215944:	bl	21aae0 <log_get_max_level_realm@plt>
  215948:	cmp	w0, #0x4
  21594c:	b.lt	21597c <main+0x1b4>  // b.tstop
  215950:	adrp	x2, 203000 <main.dirs-0x548>
  215954:	adrp	x4, 204000 <parse_argv.options+0xa90>
  215958:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21595c:	add	x2, x2, #0xd6a
  215960:	add	x4, x4, #0xb3f
  215964:	add	x5, x5, #0xb4b
  215968:	mov	w0, #0x4                   	// #4
  21596c:	mov	w3, #0x16a                 	// #362
  215970:	mov	w1, w20
  215974:	mov	x6, x19
  215978:	bl	21aaf0 <log_internal_realm@plt>
  21597c:	mov	w0, #0x3                   	// #3
  215980:	bl	21ab00 <mlockall@plt>
  215984:	cmp	w21, #0x0
  215988:	b.gt	215990 <main+0x1c8>
  21598c:	bl	21698c <sync_with_progress>
  215990:	bl	21ab10 <disable_coredumps@plt>
  215994:	mov	w0, wzr
  215998:	bl	21aae0 <log_get_max_level_realm@plt>
  21599c:	cmp	w0, #0x6
  2159a0:	b.lt	2159cc <main+0x204>  // b.tstop
  2159a4:	adrp	x2, 203000 <main.dirs-0x548>
  2159a8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2159ac:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2159b0:	add	x2, x2, #0xd6a
  2159b4:	add	x4, x4, #0xb3f
  2159b8:	add	x5, x5, #0xb7d
  2159bc:	mov	w0, #0x6                   	// #6
  2159c0:	mov	w3, #0x179                 	// #377
  2159c4:	mov	w1, wzr
  2159c8:	bl	21aaf0 <log_internal_realm@plt>
  2159cc:	adrp	x19, 23b000 <_DYNAMIC+0xf778>
  2159d0:	ldr	x3, [x19, #3984]
  2159d4:	mov	w0, #0xf                   	// #15
  2159d8:	mov	w1, #0x1                   	// #1
  2159dc:	mov	w2, #0x1                   	// #1
  2159e0:	bl	218d7c <broadcast_signal>
  2159e4:	mov	w0, wzr
  2159e8:	bl	21aae0 <log_get_max_level_realm@plt>
  2159ec:	cmp	w0, #0x6
  2159f0:	b.lt	215a1c <main+0x254>  // b.tstop
  2159f4:	adrp	x2, 203000 <main.dirs-0x548>
  2159f8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2159fc:	adrp	x5, 203000 <main.dirs-0x548>
  215a00:	add	x2, x2, #0xd6a
  215a04:	add	x4, x4, #0xb3f
  215a08:	add	x5, x5, #0x682
  215a0c:	mov	w0, #0x6                   	// #6
  215a10:	mov	w3, #0x17c                 	// #380
  215a14:	mov	w1, wzr
  215a18:	bl	21aaf0 <log_internal_realm@plt>
  215a1c:	ldr	x3, [x19, #3984]
  215a20:	cmp	w21, #0x1
  215a24:	mov	w0, #0x9                   	// #9
  215a28:	mov	w1, #0x1                   	// #1
  215a2c:	mov	w2, wzr
  215a30:	str	x23, [sp, #24]
  215a34:	cset	w20, lt  // lt = tstop
  215a38:	bl	218d7c <broadcast_signal>
  215a3c:	cmp	w21, #0x0
  215a40:	str	wzr, [sp, #44]
  215a44:	b.gt	215a74 <main+0x2ac>
  215a48:	bl	21ab20 <in_initrd@plt>
  215a4c:	tbz	w0, #0, 215a58 <main+0x290>
  215a50:	str	wzr, [sp, #44]
  215a54:	b	215a74 <main+0x2ac>
  215a58:	adrp	x0, 204000 <parse_argv.options+0xa90>
  215a5c:	add	x0, x0, #0xa21
  215a60:	mov	w1, #0x1                   	// #1
  215a64:	bl	21ab30 <access@plt>
  215a68:	cmp	w0, #0x0
  215a6c:	cset	w8, eq  // eq = none
  215a70:	str	w8, [sp, #44]
  215a74:	adrp	x24, 203000 <main.dirs-0x548>
  215a78:	adrp	x25, 204000 <parse_argv.options+0xa90>
  215a7c:	stp	w21, w20, [sp, #32]
  215a80:	mov	w23, #0x6                   	// #6
  215a84:	add	x24, x24, #0xd6a
  215a88:	add	x25, x25, #0xb3f
  215a8c:	mov	w27, w20
  215a90:	mov	w28, w20
  215a94:	mov	w21, w20
  215a98:	b	215aa4 <main+0x2dc>
  215a9c:	mov	w8, #0x1                   	// #1
  215aa0:	cbnz	w8, 215fdc <main+0x814>
  215aa4:	sturb	wzr, [x29, #-32]
  215aa8:	cbz	x22, 215ab0 <main+0x2e8>
  215aac:	bl	21ab40 <watchdog_ping@plt>
  215ab0:	ldur	x1, [x29, #-8]
  215ab4:	cbz	x1, 215ac8 <main+0x300>
  215ab8:	adrp	x0, 203000 <main.dirs-0x548>
  215abc:	add	x0, x0, #0xd82
  215ac0:	mov	w2, wzr
  215ac4:	bl	21ab50 <cg_trim@plt>
  215ac8:	tbz	w20, #0, 215bb0 <main+0x3e8>
  215acc:	mov	w0, wzr
  215ad0:	bl	21aae0 <log_get_max_level_realm@plt>
  215ad4:	cmp	w0, #0x6
  215ad8:	b.lt	215afc <main+0x334>  // b.tstop
  215adc:	adrp	x5, 203000 <main.dirs-0x548>
  215ae0:	mov	w0, #0x6                   	// #6
  215ae4:	mov	w3, #0x194                 	// #404
  215ae8:	mov	w1, wzr
  215aec:	mov	x2, x24
  215af0:	mov	x4, x25
  215af4:	add	x5, x5, #0xc6a
  215af8:	bl	21aaf0 <log_internal_realm@plt>
  215afc:	sub	x0, x29, #0x20
  215b00:	mov	w1, w23
  215b04:	bl	217aec <umount_all>
  215b08:	cbz	w0, 215b50 <main+0x388>
  215b0c:	mov	w26, w0
  215b10:	mov	w0, wzr
  215b14:	bl	21aae0 <log_get_max_level_realm@plt>
  215b18:	cmp	w26, #0x1
  215b1c:	b.lt	215b88 <main+0x3c0>  // b.tstop
  215b20:	cmp	w0, #0x6
  215b24:	b.lt	215bb0 <main+0x3e8>  // b.tstop
  215b28:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  215b2c:	mov	w0, #0x6                   	// #6
  215b30:	mov	w3, #0x19a                 	// #410
  215b34:	mov	w1, wzr
  215b38:	mov	x2, x24
  215b3c:	mov	x4, x25
  215b40:	add	x5, x5, #0x39c
  215b44:	mov	w6, w26
  215b48:	bl	21aaf0 <log_internal_realm@plt>
  215b4c:	b	215bb0 <main+0x3e8>
  215b50:	bl	21aae0 <log_get_max_level_realm@plt>
  215b54:	cmp	w0, #0x6
  215b58:	mov	w20, wzr
  215b5c:	b.lt	215bb0 <main+0x3e8>  // b.tstop
  215b60:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215b64:	mov	w0, #0x6                   	// #6
  215b68:	mov	w3, #0x198                 	// #408
  215b6c:	mov	w1, wzr
  215b70:	mov	x2, x24
  215b74:	mov	x4, x25
  215b78:	add	x5, x5, #0xa39
  215b7c:	bl	21aaf0 <log_internal_realm@plt>
  215b80:	mov	w20, wzr
  215b84:	b	215bb0 <main+0x3e8>
  215b88:	cmp	w0, #0x3
  215b8c:	b.lt	215bb0 <main+0x3e8>  // b.tstop
  215b90:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  215b94:	mov	w0, #0x3                   	// #3
  215b98:	mov	w3, #0x19c                 	// #412
  215b9c:	mov	w1, w26
  215ba0:	mov	x2, x24
  215ba4:	mov	x4, x25
  215ba8:	add	x5, x5, #0x27e
  215bac:	bl	21aaf0 <log_internal_realm@plt>
  215bb0:	tbz	w21, #0, 215c94 <main+0x4cc>
  215bb4:	mov	w0, wzr
  215bb8:	bl	21aae0 <log_get_max_level_realm@plt>
  215bbc:	cmp	w0, #0x6
  215bc0:	b.lt	215be4 <main+0x41c>  // b.tstop
  215bc4:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  215bc8:	mov	w0, #0x6                   	// #6
  215bcc:	mov	w3, #0x1a0                 	// #416
  215bd0:	mov	w1, wzr
  215bd4:	mov	x2, x24
  215bd8:	mov	x4, x25
  215bdc:	add	x5, x5, #0x2a1
  215be0:	bl	21aaf0 <log_internal_realm@plt>
  215be4:	sub	x0, x29, #0x20
  215be8:	bl	217bec <swapoff_all>
  215bec:	cbz	w0, 215c34 <main+0x46c>
  215bf0:	mov	w26, w0
  215bf4:	mov	w0, wzr
  215bf8:	bl	21aae0 <log_get_max_level_realm@plt>
  215bfc:	cmp	w26, #0x1
  215c00:	b.lt	215c6c <main+0x4a4>  // b.tstop
  215c04:	cmp	w0, #0x6
  215c08:	b.lt	215c94 <main+0x4cc>  // b.tstop
  215c0c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215c10:	mov	w0, #0x6                   	// #6
  215c14:	mov	w3, #0x1a6                 	// #422
  215c18:	mov	w1, wzr
  215c1c:	mov	x2, x24
  215c20:	mov	x4, x25
  215c24:	add	x5, x5, #0x905
  215c28:	mov	w6, w26
  215c2c:	bl	21aaf0 <log_internal_realm@plt>
  215c30:	b	215c94 <main+0x4cc>
  215c34:	bl	21aae0 <log_get_max_level_realm@plt>
  215c38:	cmp	w0, #0x6
  215c3c:	mov	w21, wzr
  215c40:	b.lt	215c94 <main+0x4cc>  // b.tstop
  215c44:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215c48:	mov	w0, #0x6                   	// #6
  215c4c:	mov	w3, #0x1a4                 	// #420
  215c50:	mov	w1, wzr
  215c54:	mov	x2, x24
  215c58:	mov	x4, x25
  215c5c:	add	x5, x5, #0xa54
  215c60:	bl	21aaf0 <log_internal_realm@plt>
  215c64:	mov	w21, wzr
  215c68:	b	215c94 <main+0x4cc>
  215c6c:	cmp	w0, #0x3
  215c70:	b.lt	215c94 <main+0x4cc>  // b.tstop
  215c74:	adrp	x5, 203000 <main.dirs-0x548>
  215c78:	mov	w0, #0x3                   	// #3
  215c7c:	mov	w3, #0x1a8                 	// #424
  215c80:	mov	w1, w26
  215c84:	mov	x2, x24
  215c88:	mov	x4, x25
  215c8c:	add	x5, x5, #0x6ac
  215c90:	bl	21aaf0 <log_internal_realm@plt>
  215c94:	tbz	w28, #0, 215d7c <main+0x5b4>
  215c98:	mov	w0, wzr
  215c9c:	bl	21aae0 <log_get_max_level_realm@plt>
  215ca0:	cmp	w0, #0x6
  215ca4:	b.lt	215cc8 <main+0x500>  // b.tstop
  215ca8:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215cac:	mov	w0, #0x6                   	// #6
  215cb0:	mov	w3, #0x1ac                 	// #428
  215cb4:	mov	w1, wzr
  215cb8:	mov	x2, x24
  215cbc:	mov	x4, x25
  215cc0:	add	x5, x5, #0xde6
  215cc4:	bl	21aaf0 <log_internal_realm@plt>
  215cc8:	sub	x0, x29, #0x20
  215ccc:	mov	w1, w23
  215cd0:	bl	217dcc <loopback_detach_all>
  215cd4:	cbz	w0, 215d1c <main+0x554>
  215cd8:	mov	w26, w0
  215cdc:	mov	w0, wzr
  215ce0:	bl	21aae0 <log_get_max_level_realm@plt>
  215ce4:	cmp	w26, #0x1
  215ce8:	b.lt	215d54 <main+0x58c>  // b.tstop
  215cec:	cmp	w0, #0x6
  215cf0:	b.lt	215d7c <main+0x5b4>  // b.tstop
  215cf4:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215cf8:	mov	w0, #0x6                   	// #6
  215cfc:	mov	w3, #0x1b2                 	// #434
  215d00:	mov	w1, wzr
  215d04:	mov	x2, x24
  215d08:	mov	x4, x25
  215d0c:	add	x5, x5, #0x4b2
  215d10:	mov	w6, w26
  215d14:	bl	21aaf0 <log_internal_realm@plt>
  215d18:	b	215d7c <main+0x5b4>
  215d1c:	bl	21aae0 <log_get_max_level_realm@plt>
  215d20:	cmp	w0, #0x6
  215d24:	mov	w28, wzr
  215d28:	b.lt	215d7c <main+0x5b4>  // b.tstop
  215d2c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215d30:	mov	w0, #0x6                   	// #6
  215d34:	mov	w3, #0x1b0                 	// #432
  215d38:	mov	w1, wzr
  215d3c:	mov	x2, x24
  215d40:	mov	x4, x25
  215d44:	add	x5, x5, #0xc11
  215d48:	bl	21aaf0 <log_internal_realm@plt>
  215d4c:	mov	w28, wzr
  215d50:	b	215d7c <main+0x5b4>
  215d54:	cmp	w0, #0x3
  215d58:	b.lt	215d7c <main+0x5b4>  // b.tstop
  215d5c:	adrp	x5, 203000 <main.dirs-0x548>
  215d60:	mov	w0, #0x3                   	// #3
  215d64:	mov	w3, #0x1b4                 	// #436
  215d68:	mov	w1, w26
  215d6c:	mov	x2, x24
  215d70:	mov	x4, x25
  215d74:	add	x5, x5, #0x6cb
  215d78:	bl	21aaf0 <log_internal_realm@plt>
  215d7c:	tbz	w27, #0, 215e64 <main+0x69c>
  215d80:	mov	w0, wzr
  215d84:	bl	21aae0 <log_get_max_level_realm@plt>
  215d88:	cmp	w0, #0x6
  215d8c:	b.lt	215db0 <main+0x5e8>  // b.tstop
  215d90:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  215d94:	mov	w0, #0x6                   	// #6
  215d98:	mov	w3, #0x1b8                 	// #440
  215d9c:	mov	w1, wzr
  215da0:	mov	x2, x24
  215da4:	mov	x4, x25
  215da8:	add	x5, x5, #0xd7
  215dac:	bl	21aaf0 <log_internal_realm@plt>
  215db0:	sub	x0, x29, #0x20
  215db4:	mov	w1, w23
  215db8:	bl	218170 <dm_detach_all>
  215dbc:	cbz	w0, 215e04 <main+0x63c>
  215dc0:	mov	w26, w0
  215dc4:	mov	w0, wzr
  215dc8:	bl	21aae0 <log_get_max_level_realm@plt>
  215dcc:	cmp	w26, #0x1
  215dd0:	b.lt	215e3c <main+0x674>  // b.tstop
  215dd4:	cmp	w0, #0x6
  215dd8:	b.lt	215e64 <main+0x69c>  // b.tstop
  215ddc:	adrp	x5, 203000 <main.dirs-0x548>
  215de0:	mov	w0, #0x6                   	// #6
  215de4:	mov	w3, #0x1be                 	// #446
  215de8:	mov	w1, wzr
  215dec:	mov	x2, x24
  215df0:	mov	x4, x25
  215df4:	add	x5, x5, #0x6ed
  215df8:	mov	w6, w26
  215dfc:	bl	21aaf0 <log_internal_realm@plt>
  215e00:	b	215e64 <main+0x69c>
  215e04:	bl	21aae0 <log_get_max_level_realm@plt>
  215e08:	cmp	w0, #0x6
  215e0c:	mov	w27, wzr
  215e10:	b.lt	215e64 <main+0x69c>  // b.tstop
  215e14:	adrp	x5, 203000 <main.dirs-0x548>
  215e18:	mov	w0, #0x6                   	// #6
  215e1c:	mov	w3, #0x1bc                 	// #444
  215e20:	mov	w1, wzr
  215e24:	mov	x2, x24
  215e28:	mov	x4, x25
  215e2c:	add	x5, x5, #0x8cc
  215e30:	bl	21aaf0 <log_internal_realm@plt>
  215e34:	mov	w27, wzr
  215e38:	b	215e64 <main+0x69c>
  215e3c:	cmp	w0, #0x3
  215e40:	b.lt	215e64 <main+0x69c>  // b.tstop
  215e44:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215e48:	mov	w0, #0x3                   	// #3
  215e4c:	mov	w3, #0x1c0                 	// #448
  215e50:	mov	w1, w26
  215e54:	mov	x2, x24
  215e58:	mov	x4, x25
  215e5c:	add	x5, x5, #0x200
  215e60:	bl	21aaf0 <log_internal_realm@plt>
  215e64:	orr	w8, w20, w21
  215e68:	orr	w8, w8, w28
  215e6c:	orr	w26, w8, w27
  215e70:	tbz	w26, #0, 215f24 <main+0x75c>
  215e74:	ldurb	w19, [x29, #-32]
  215e78:	cmp	w19, #0x0
  215e7c:	cset	w8, ne  // ne = any
  215e80:	cmp	w23, #0x6
  215e84:	cset	w9, ne  // ne = any
  215e88:	orr	w8, w9, w8
  215e8c:	ldr	w9, [sp, #44]
  215e90:	orr	w8, w9, w8
  215e94:	cmp	w8, #0x1
  215e98:	b.ne	215f58 <main+0x790>  // b.any
  215e9c:	mov	w0, wzr
  215ea0:	bl	21aae0 <log_get_max_level_realm@plt>
  215ea4:	cbz	w19, 215f64 <main+0x79c>
  215ea8:	cmp	w0, #0x7
  215eac:	b.lt	215f1c <main+0x754>  // b.tstop
  215eb0:	adrp	x9, 205000 <parse_argv.options+0x1a90>
  215eb4:	adrp	x8, 204000 <parse_argv.options+0xa90>
  215eb8:	tst	w20, #0x1
  215ebc:	add	x9, x9, #0xed
  215ec0:	add	x8, x8, #0x2c3
  215ec4:	csel	x6, x8, x9, ne  // ne = any
  215ec8:	adrp	x8, 203000 <main.dirs-0x548>
  215ecc:	tst	w21, #0x1
  215ed0:	add	x8, x8, #0xe18
  215ed4:	csel	x7, x8, x9, ne  // ne = any
  215ed8:	adrp	x8, 203000 <main.dirs-0x548>
  215edc:	tst	w28, #0x1
  215ee0:	add	x8, x8, #0xc83
  215ee4:	adrp	x10, 204000 <parse_argv.options+0xa90>
  215ee8:	csel	x8, x8, x9, ne  // ne = any
  215eec:	tst	w27, #0x1
  215ef0:	add	x10, x10, #0x721
  215ef4:	adrp	x5, 203000 <main.dirs-0x548>
  215ef8:	csel	x9, x10, x9, ne  // ne = any
  215efc:	mov	w0, #0x7                   	// #7
  215f00:	mov	w3, #0x1e2                 	// #482
  215f04:	mov	w1, wzr
  215f08:	mov	x2, x24
  215f0c:	mov	x4, x25
  215f10:	add	x5, x5, #0x8e5
  215f14:	stp	x8, x9, [sp]
  215f18:	bl	21aaf0 <log_internal_realm@plt>
  215f1c:	mov	w8, wzr
  215f20:	b	215aa0 <main+0x2d8>
  215f24:	mov	w0, wzr
  215f28:	bl	21aae0 <log_get_max_level_realm@plt>
  215f2c:	cmp	w0, #0x6
  215f30:	b.lt	215a9c <main+0x2d4>  // b.tstop
  215f34:	adrp	x5, 203000 <main.dirs-0x548>
  215f38:	mov	w0, #0x6                   	// #6
  215f3c:	mov	w3, #0x1c4                 	// #452
  215f40:	mov	w1, wzr
  215f44:	mov	x2, x24
  215f48:	mov	x4, x25
  215f4c:	add	x5, x5, #0xdda
  215f50:	bl	21aaf0 <log_internal_realm@plt>
  215f54:	b	215a9c <main+0x2d4>
  215f58:	mov	w8, wzr
  215f5c:	mov	w23, #0x3                   	// #3
  215f60:	b	215aa0 <main+0x2d8>
  215f64:	cmp	w0, #0x6
  215f68:	b.lt	215a9c <main+0x2d4>  // b.tstop
  215f6c:	adrp	x9, 205000 <parse_argv.options+0x1a90>
  215f70:	adrp	x8, 204000 <parse_argv.options+0xa90>
  215f74:	tst	w20, #0x1
  215f78:	add	x9, x9, #0xed
  215f7c:	add	x8, x8, #0x2c3
  215f80:	csel	x6, x8, x9, ne  // ne = any
  215f84:	adrp	x8, 203000 <main.dirs-0x548>
  215f88:	tst	w21, #0x1
  215f8c:	add	x8, x8, #0xe18
  215f90:	csel	x7, x8, x9, ne  // ne = any
  215f94:	adrp	x8, 203000 <main.dirs-0x548>
  215f98:	tst	w28, #0x1
  215f9c:	add	x8, x8, #0xc83
  215fa0:	adrp	x10, 204000 <parse_argv.options+0xa90>
  215fa4:	csel	x8, x8, x9, ne  // ne = any
  215fa8:	tst	w27, #0x1
  215fac:	add	x10, x10, #0x721
  215fb0:	adrp	x5, 204000 <parse_argv.options+0xa90>
  215fb4:	csel	x9, x10, x9, ne  // ne = any
  215fb8:	mov	w0, #0x6                   	// #6
  215fbc:	mov	w3, #0x1da                 	// #474
  215fc0:	mov	w1, wzr
  215fc4:	mov	x2, x24
  215fc8:	mov	x4, x25
  215fcc:	add	x5, x5, #0x220
  215fd0:	stp	x8, x9, [sp]
  215fd4:	bl	21aaf0 <log_internal_realm@plt>
  215fd8:	b	215a9c <main+0x2d4>
  215fdc:	bl	216b58 <watchdog_free_device>
  215fe0:	adrp	x22, 23b000 <_DYNAMIC+0xf778>
  215fe4:	ldr	x8, [x22, #4000]
  215fe8:	adrp	x0, 203000 <main.dirs-0x548>
  215fec:	mov	w1, #0x4a80                	// #19072
  215ff0:	add	x0, x0, #0x548
  215ff4:	sub	x4, x29, #0x20
  215ff8:	movk	w1, #0x55d, lsl #16
  215ffc:	mov	w6, #0x3                   	// #3
  216000:	mov	x2, xzr
  216004:	mov	x3, xzr
  216008:	mov	x5, xzr
  21600c:	stp	xzr, x8, [x29, #-32]
  216010:	stur	xzr, [x29, #-16]
  216014:	bl	21ab60 <execute_directories@plt>
  216018:	bl	21ab70 <rlimit_nofile_safe@plt>
  21601c:	ldr	w8, [sp, #44]
  216020:	cbz	w8, 216104 <main+0x93c>
  216024:	bl	216b70 <switch_root_initramfs>
  216028:	tbnz	w0, #31, 2160c8 <main+0x900>
  21602c:	ldr	x19, [sp, #24]
  216030:	adrp	x8, 203000 <main.dirs-0x548>
  216034:	add	x8, x8, #0x713
  216038:	str	x8, [x19]
  21603c:	bl	21ab80 <setsid@plt>
  216040:	bl	21ab90 <make_console_stdio@plt>
  216044:	mov	w0, wzr
  216048:	bl	21aae0 <log_get_max_level_realm@plt>
  21604c:	cmp	w0, #0x6
  216050:	b.lt	21607c <main+0x8b4>  // b.tstop
  216054:	adrp	x2, 203000 <main.dirs-0x548>
  216058:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21605c:	adrp	x5, 203000 <main.dirs-0x548>
  216060:	add	x2, x2, #0xd6a
  216064:	add	x4, x4, #0xb3f
  216068:	add	x5, x5, #0x918
  21606c:	mov	w0, #0x6                   	// #6
  216070:	mov	w3, #0x1f8                 	// #504
  216074:	mov	w1, wzr
  216078:	bl	21aaf0 <log_internal_realm@plt>
  21607c:	adrp	x0, 203000 <main.dirs-0x548>
  216080:	add	x0, x0, #0x713
  216084:	mov	x1, x19
  216088:	bl	21aba0 <execv@plt>
  21608c:	mov	w0, wzr
  216090:	bl	21aae0 <log_get_max_level_realm@plt>
  216094:	cmp	w0, #0x3
  216098:	b.lt	216104 <main+0x93c>  // b.tstop
  21609c:	bl	21abb0 <__errno_location@plt>
  2160a0:	ldr	w1, [x0]
  2160a4:	adrp	x2, 203000 <main.dirs-0x548>
  2160a8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2160ac:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2160b0:	add	x2, x2, #0xd6a
  2160b4:	add	x4, x4, #0xb3f
  2160b8:	add	x5, x5, #0x929
  2160bc:	mov	w0, #0x3                   	// #3
  2160c0:	mov	w3, #0x1fb                 	// #507
  2160c4:	b	216100 <main+0x938>
  2160c8:	mov	w19, w0
  2160cc:	mov	w0, wzr
  2160d0:	bl	21aae0 <log_get_max_level_realm@plt>
  2160d4:	cmp	w0, #0x3
  2160d8:	b.lt	216104 <main+0x93c>  // b.tstop
  2160dc:	adrp	x2, 203000 <main.dirs-0x548>
  2160e0:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2160e4:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2160e8:	add	x2, x2, #0xd6a
  2160ec:	add	x4, x4, #0xb3f
  2160f0:	add	x5, x5, #0xdfe
  2160f4:	mov	w0, #0x3                   	// #3
  2160f8:	mov	w3, #0x1fd                 	// #509
  2160fc:	mov	w1, w19
  216100:	bl	21aaf0 <log_internal_realm@plt>
  216104:	tbz	w26, #0, 21618c <main+0x9c4>
  216108:	mov	w0, wzr
  21610c:	bl	21aae0 <log_get_max_level_realm@plt>
  216110:	cmp	w0, #0x3
  216114:	b.lt	21618c <main+0x9c4>  // b.tstop
  216118:	adrp	x9, 205000 <parse_argv.options+0x1a90>
  21611c:	adrp	x8, 204000 <parse_argv.options+0xa90>
  216120:	tst	w20, #0x1
  216124:	add	x9, x9, #0xed
  216128:	add	x8, x8, #0x2c3
  21612c:	csel	x6, x8, x9, ne  // ne = any
  216130:	adrp	x8, 203000 <main.dirs-0x548>
  216134:	tst	w21, #0x1
  216138:	add	x8, x8, #0xe18
  21613c:	csel	x7, x8, x9, ne  // ne = any
  216140:	adrp	x8, 203000 <main.dirs-0x548>
  216144:	tst	w28, #0x1
  216148:	add	x8, x8, #0xc83
  21614c:	adrp	x10, 204000 <parse_argv.options+0xa90>
  216150:	csel	x8, x8, x9, ne  // ne = any
  216154:	tst	w27, #0x1
  216158:	add	x10, x10, #0x721
  21615c:	adrp	x2, 203000 <main.dirs-0x548>
  216160:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216164:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216168:	csel	x9, x10, x9, ne  // ne = any
  21616c:	add	x2, x2, #0xd6a
  216170:	add	x4, x4, #0xb3f
  216174:	add	x5, x5, #0xf13
  216178:	mov	w0, #0x3                   	// #3
  21617c:	mov	w3, #0x205                 	// #517
  216180:	mov	w1, wzr
  216184:	stp	x8, x9, [sp]
  216188:	bl	21aaf0 <log_internal_realm@plt>
  21618c:	ldr	w21, [sp, #32]
  216190:	cmp	w21, #0x0
  216194:	b.gt	21619c <main+0x9d4>
  216198:	bl	21698c <sync_with_progress>
  21619c:	ldr	x0, [x22, #4000]
  2161a0:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2161a4:	add	x1, x1, #0x1fb
  2161a8:	bl	21aa80 <strcmp@plt>
  2161ac:	ldp	w20, w10, [sp, #36]
  2161b0:	cmp	w0, #0x0
  2161b4:	mov	w9, #0xfedc                	// #65244
  2161b8:	cset	w8, ne  // ne = any
  2161bc:	movk	w9, #0x4321, lsl #16
  2161c0:	orr	w8, w8, w20
  2161c4:	csel	w19, w10, w9, ne  // ne = any
  2161c8:	tbz	w8, #0, 216220 <main+0xa58>
  2161cc:	mov	w8, #0xfedb                	// #65243
  2161d0:	movk	w8, #0x4321, lsl #16
  2161d4:	cmp	w19, w8
  2161d8:	b.gt	21622c <main+0xa64>
  2161dc:	mov	w8, #0x123                 	// #291
  2161e0:	movk	w8, #0xcdef, lsl #16
  2161e4:	cmp	w19, w8
  2161e8:	b.ne	216270 <main+0xaa8>  // b.any
  2161ec:	mov	w0, wzr
  2161f0:	bl	21aae0 <log_get_max_level_realm@plt>
  2161f4:	cmp	w0, #0x6
  2161f8:	b.lt	216324 <main+0xb5c>  // b.tstop
  2161fc:	adrp	x2, 203000 <main.dirs-0x548>
  216200:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216204:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216208:	add	x2, x2, #0xd6a
  21620c:	add	x4, x4, #0xb3f
  216210:	add	x5, x5, #0xf38
  216214:	mov	w0, #0x6                   	// #6
  216218:	mov	w3, #0x239                 	// #569
  21621c:	b	21631c <main+0xb54>
  216220:	adrp	x8, 23b000 <_DYNAMIC+0xf778>
  216224:	ldrb	w19, [x8, #4008]
  216228:	b	216380 <main+0xbb8>
  21622c:	mov	w8, #0xfedc                	// #65244
  216230:	movk	w8, #0x4321, lsl #16
  216234:	cmp	w19, w8
  216238:	b.ne	216284 <main+0xabc>  // b.any
  21623c:	mov	w0, wzr
  216240:	bl	21aae0 <log_get_max_level_realm@plt>
  216244:	cmp	w0, #0x6
  216248:	b.lt	216324 <main+0xb5c>  // b.tstop
  21624c:	adrp	x2, 203000 <main.dirs-0x548>
  216250:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216254:	adrp	x5, 203000 <main.dirs-0x548>
  216258:	add	x2, x2, #0xd6a
  21625c:	add	x4, x4, #0xb3f
  216260:	add	x5, x5, #0xc92
  216264:	mov	w0, #0x6                   	// #6
  216268:	mov	w3, #0x235                 	// #565
  21626c:	b	21631c <main+0xb54>
  216270:	mov	w8, #0x4567                	// #17767
  216274:	movk	w8, #0x123, lsl #16
  216278:	cmp	w19, w8
  21627c:	b.eq	2162e4 <main+0xb1c>  // b.none
  216280:	b	216434 <main+0xc6c>
  216284:	mov	w8, #0x4543                	// #17731
  216288:	movk	w8, #0x4558, lsl #16
  21628c:	cmp	w19, w8
  216290:	mov	w19, #0x4567                	// #17767
  216294:	movk	w19, #0x123, lsl #16
  216298:	b.ne	216434 <main+0xc6c>  // b.any
  21629c:	cmp	w21, #0x0
  2162a0:	b.gt	2162e4 <main+0xb1c>
  2162a4:	mov	w0, wzr
  2162a8:	bl	21aae0 <log_get_max_level_realm@plt>
  2162ac:	cmp	w0, #0x6
  2162b0:	b.lt	2162dc <main+0xb14>  // b.tstop
  2162b4:	adrp	x2, 203000 <main.dirs-0x548>
  2162b8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2162bc:	adrp	x5, 203000 <main.dirs-0x548>
  2162c0:	add	x2, x2, #0xd6a
  2162c4:	add	x4, x4, #0xb3f
  2162c8:	add	x5, x5, #0xd8b
  2162cc:	mov	w0, #0x6                   	// #6
  2162d0:	mov	w3, #0x21b                 	// #539
  2162d4:	mov	w1, wzr
  2162d8:	bl	21aaf0 <log_internal_realm@plt>
  2162dc:	bl	216c78 <safe_fork>
  2162e0:	cbz	w0, 2164f4 <main+0xd2c>
  2162e4:	mov	w0, #0x1                   	// #1
  2162e8:	bl	21abc0 <reboot_with_parameter@plt>
  2162ec:	mov	w0, wzr
  2162f0:	bl	21aae0 <log_get_max_level_realm@plt>
  2162f4:	cmp	w0, #0x6
  2162f8:	b.lt	216324 <main+0xb5c>  // b.tstop
  2162fc:	adrp	x2, 203000 <main.dirs-0x548>
  216300:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216304:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216308:	add	x2, x2, #0xd6a
  21630c:	add	x4, x4, #0xb3f
  216310:	add	x5, x5, #0x2d2
  216314:	mov	w0, #0x6                   	// #6
  216318:	mov	w3, #0x231                 	// #561
  21631c:	mov	w1, wzr
  216320:	bl	21aaf0 <log_internal_realm@plt>
  216324:	mov	w0, w19
  216328:	bl	21abd0 <reboot@plt>
  21632c:	bl	21abb0 <__errno_location@plt>
  216330:	ldr	w19, [x0]
  216334:	mov	w0, wzr
  216338:	cmp	w19, #0x1
  21633c:	cset	w8, ne  // ne = any
  216340:	orr	w20, w8, w20
  216344:	bl	21aae0 <log_get_max_level_realm@plt>
  216348:	tbnz	w20, #0, 2163f4 <main+0xc2c>
  21634c:	cmp	w0, #0x6
  216350:	b.lt	21637c <main+0xbb4>  // b.tstop
  216354:	adrp	x2, 203000 <main.dirs-0x548>
  216358:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21635c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216360:	add	x2, x2, #0xd6a
  216364:	add	x4, x4, #0xb3f
  216368:	add	x5, x5, #0xf48
  21636c:	mov	w0, #0x6                   	// #6
  216370:	mov	w3, #0x245                 	// #581
  216374:	mov	w1, wzr
  216378:	bl	21aaf0 <log_internal_realm@plt>
  21637c:	mov	w19, wzr
  216380:	sub	x0, x29, #0x8
  216384:	bl	216520 <freep>
  216388:	mov	w0, w19
  21638c:	ldp	x20, x19, [sp, #192]
  216390:	ldp	x22, x21, [sp, #176]
  216394:	ldp	x24, x23, [sp, #160]
  216398:	ldp	x26, x25, [sp, #144]
  21639c:	ldp	x28, x27, [sp, #128]
  2163a0:	ldp	x29, x30, [sp, #112]
  2163a4:	add	sp, sp, #0xd0
  2163a8:	ret
  2163ac:	mov	w19, w0
  2163b0:	b	2164ac <main+0xce4>
  2163b4:	mov	w0, wzr
  2163b8:	bl	21aae0 <log_get_max_level_realm@plt>
  2163bc:	cmp	w0, #0x3
  2163c0:	b.lt	21642c <main+0xc64>  // b.tstop
  2163c4:	adrp	x2, 203000 <main.dirs-0x548>
  2163c8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2163cc:	adrp	x5, 203000 <main.dirs-0x548>
  2163d0:	add	x2, x2, #0xd6a
  2163d4:	add	x4, x4, #0xb3f
  2163d8:	add	x5, x5, #0x89e
  2163dc:	mov	w0, #0x3                   	// #3
  2163e0:	mov	w3, #0x140                 	// #320
  2163e4:	mov	w1, wzr
  2163e8:	bl	21aaf0 <log_internal_realm@plt>
  2163ec:	mov	w19, #0xffffffff            	// #-1
  2163f0:	b	2164ac <main+0xce4>
  2163f4:	cmp	w0, #0x3
  2163f8:	b.lt	216458 <main+0xc90>  // b.tstop
  2163fc:	adrp	x2, 203000 <main.dirs-0x548>
  216400:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216404:	adrp	x5, 203000 <main.dirs-0x548>
  216408:	add	x2, x2, #0xd6a
  21640c:	add	x4, x4, #0xb3f
  216410:	add	x5, x5, #0xda1
  216414:	mov	w0, #0x3                   	// #3
  216418:	mov	w3, #0x249                 	// #585
  21641c:	mov	w1, w19
  216420:	bl	21aaf0 <log_internal_realm@plt>
  216424:	mov	w19, w0
  216428:	b	2164ac <main+0xce4>
  21642c:	mov	w19, #0xffffffff            	// #-1
  216430:	b	2164ac <main+0xce4>
  216434:	adrp	x1, 204000 <parse_argv.options+0xa90>
  216438:	adrp	x2, 203000 <main.dirs-0x548>
  21643c:	adrp	x4, 203000 <main.dirs-0x548>
  216440:	add	x1, x1, #0xa6b
  216444:	add	x2, x2, #0xd6a
  216448:	add	x4, x4, #0xe27
  21644c:	mov	w3, #0x23d                 	// #573
  216450:	mov	w0, wzr
  216454:	bl	21abe0 <log_assert_failed_unreachable_realm@plt>
  216458:	cmp	w19, #0x0
  21645c:	mov	w8, wzr
  216460:	cneg	w9, w19, mi  // mi = first
  216464:	sub	w19, w8, w9, uxtb
  216468:	b	2164ac <main+0xce4>
  21646c:	mov	w0, wzr
  216470:	bl	21aae0 <log_get_max_level_realm@plt>
  216474:	cmp	w0, #0x3
  216478:	b.lt	2164a8 <main+0xce0>  // b.tstop
  21647c:	adrp	x2, 203000 <main.dirs-0x548>
  216480:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216484:	adrp	x5, 203000 <main.dirs-0x548>
  216488:	add	x2, x2, #0xd6a
  21648c:	add	x4, x4, #0xb3f
  216490:	add	x5, x5, #0x66d
  216494:	mov	w0, #0x3                   	// #3
  216498:	mov	w3, #0x150                 	// #336
  21649c:	mov	w1, wzr
  2164a0:	mov	x6, x19
  2164a4:	bl	21aaf0 <log_internal_realm@plt>
  2164a8:	mov	w19, #0xffffffea            	// #-22
  2164ac:	bl	21abf0 <log_emergency_level@plt>
  2164b0:	mov	w20, w0
  2164b4:	mov	w0, wzr
  2164b8:	bl	21aae0 <log_get_max_level_realm@plt>
  2164bc:	and	w8, w20, #0x7
  2164c0:	cmp	w0, w8
  2164c4:	b.lt	2164f0 <main+0xd28>  // b.tstop
  2164c8:	adrp	x2, 203000 <main.dirs-0x548>
  2164cc:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2164d0:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2164d4:	add	x2, x2, #0xd6a
  2164d8:	add	x4, x4, #0xb3f
  2164dc:	add	x5, x5, #0xa79
  2164e0:	mov	w3, #0x24c                 	// #588
  2164e4:	mov	w0, w20
  2164e8:	mov	w1, w19
  2164ec:	bl	21aaf0 <log_internal_realm@plt>
  2164f0:	bl	21ac00 <freeze@plt>
  2164f4:	adrp	x8, 203000 <main.dirs-0x548>
  2164f8:	add	x8, x8, #0x558
  2164fc:	ldr	q0, [x8]
  216500:	ldr	x8, [x8, #16]
  216504:	add	x1, sp, #0x30
  216508:	str	q0, [sp, #48]
  21650c:	ldr	x0, [sp, #48]
  216510:	str	x8, [sp, #64]
  216514:	bl	21aba0 <execv@plt>
  216518:	mov	w0, #0x1                   	// #1
  21651c:	bl	21ac10 <_exit@plt>

0000000000216520 <freep>:
  216520:	stp	x29, x30, [sp, #-16]!
  216524:	ldr	x0, [x0]
  216528:	mov	x29, sp
  21652c:	bl	21ac20 <free@plt>
  216530:	ldp	x29, x30, [sp], #16
  216534:	ret

0000000000216538 <parse_argv>:
  216538:	stp	x29, x30, [sp, #-96]!
  21653c:	cmp	w0, #0x0
  216540:	stp	x28, x27, [sp, #16]
  216544:	stp	x26, x25, [sp, #32]
  216548:	stp	x24, x23, [sp, #48]
  21654c:	stp	x22, x21, [sp, #64]
  216550:	stp	x20, x19, [sp, #80]
  216554:	mov	x29, sp
  216558:	b.le	2168c4 <parse_argv+0x38c>
  21655c:	mov	x20, x1
  216560:	cbz	x1, 2168e8 <parse_argv+0x3b0>
  216564:	adrp	x2, 203000 <main.dirs-0x548>
  216568:	adrp	x3, 203000 <main.dirs-0x548>
  21656c:	add	x2, x2, #0xe3e
  216570:	add	x3, x3, #0x570
  216574:	mov	x1, x20
  216578:	mov	x4, xzr
  21657c:	mov	w19, w0
  216580:	bl	21ac30 <getopt_long@plt>
  216584:	tbnz	w0, #31, 216834 <parse_argv+0x2fc>
  216588:	adrp	x21, 203000 <main.dirs-0x548>
  21658c:	adrp	x22, 204000 <parse_argv.options+0xa90>
  216590:	adrp	x24, 203000 <main.dirs-0x548>
  216594:	adrp	x25, 203000 <main.dirs-0x548>
  216598:	adrp	x27, 203000 <main.dirs-0x548>
  21659c:	adrp	x23, 23b000 <_DYNAMIC+0xf778>
  2165a0:	adrp	x28, 23b000 <_DYNAMIC+0xf778>
  2165a4:	add	x21, x21, #0xd6a
  2165a8:	add	x22, x22, #0x2dd
  2165ac:	add	x24, x24, #0xe3e
  2165b0:	add	x25, x25, #0x570
  2165b4:	add	x27, x27, #0x540
  2165b8:	b	2165e0 <parse_argv+0xa8>
  2165bc:	ldr	x8, [x28, #4016]
  2165c0:	str	x8, [x23, #4000]
  2165c4:	mov	w0, w19
  2165c8:	mov	x1, x20
  2165cc:	mov	x2, x24
  2165d0:	mov	x3, x25
  2165d4:	mov	x4, xzr
  2165d8:	bl	21ac30 <getopt_long@plt>
  2165dc:	tbnz	w0, #31, 216834 <parse_argv+0x2fc>
  2165e0:	sub	w8, w0, #0x100
  2165e4:	cmp	w8, #0x5
  2165e8:	b.hi	216648 <parse_argv+0x110>  // b.pmore
  2165ec:	adr	x9, 2165fc <parse_argv+0xc4>
  2165f0:	ldrb	w10, [x27, x8]
  2165f4:	add	x9, x9, x10, lsl #2
  2165f8:	br	x9
  2165fc:	ldr	x1, [x28, #4016]
  216600:	mov	w0, wzr
  216604:	bl	21ac40 <log_set_max_level_from_string_realm@plt>
  216608:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  21660c:	mov	w26, w0
  216610:	mov	w0, wzr
  216614:	bl	21aae0 <log_get_max_level_realm@plt>
  216618:	cmp	w0, #0x3
  21661c:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  216620:	ldr	x6, [x28, #4016]
  216624:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216628:	mov	w0, #0x3                   	// #3
  21662c:	mov	w3, #0x51                  	// #81
  216630:	mov	w1, w26
  216634:	mov	x2, x21
  216638:	mov	x4, x22
  21663c:	add	x5, x5, #0xf65
  216640:	bl	21aaf0 <log_internal_realm@plt>
  216644:	b	2165c4 <parse_argv+0x8c>
  216648:	cmp	w0, #0x1
  21664c:	b.ne	216824 <parse_argv+0x2ec>  // b.any
  216650:	ldr	x8, [x23, #4000]
  216654:	cbz	x8, 2165bc <parse_argv+0x84>
  216658:	mov	w0, wzr
  21665c:	bl	21aae0 <log_get_max_level_realm@plt>
  216660:	cmp	w0, #0x3
  216664:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  216668:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21666c:	mov	w0, #0x3                   	// #3
  216670:	mov	w3, #0x83                  	// #131
  216674:	mov	w1, wzr
  216678:	mov	x2, x21
  21667c:	mov	x4, x22
  216680:	add	x5, x5, #0x2e8
  216684:	bl	21aaf0 <log_internal_realm@plt>
  216688:	b	2165c4 <parse_argv+0x8c>
  21668c:	ldr	x0, [x28, #4016]
  216690:	adrp	x1, 23b000 <_DYNAMIC+0xf778>
  216694:	add	x1, x1, #0xfa8
  216698:	bl	21ac50 <safe_atou8@plt>
  21669c:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  2166a0:	mov	w26, w0
  2166a4:	mov	w0, wzr
  2166a8:	bl	21aae0 <log_get_max_level_realm@plt>
  2166ac:	cmp	w0, #0x3
  2166b0:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  2166b4:	ldr	x6, [x28, #4016]
  2166b8:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  2166bc:	mov	w0, #0x3                   	// #3
  2166c0:	mov	w3, #0x74                  	// #116
  2166c4:	mov	w1, w26
  2166c8:	mov	x2, x21
  2166cc:	mov	x4, x22
  2166d0:	add	x5, x5, #0x3c5
  2166d4:	bl	21aaf0 <log_internal_realm@plt>
  2166d8:	b	2165c4 <parse_argv+0x8c>
  2166dc:	ldr	x0, [x28, #4016]
  2166e0:	cbz	x0, 21680c <parse_argv+0x2d4>
  2166e4:	bl	21ac60 <log_show_color_from_string@plt>
  2166e8:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  2166ec:	mov	w26, w0
  2166f0:	mov	w0, wzr
  2166f4:	bl	21aae0 <log_get_max_level_realm@plt>
  2166f8:	cmp	w0, #0x3
  2166fc:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  216700:	ldr	x6, [x28, #4016]
  216704:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216708:	mov	w0, #0x3                   	// #3
  21670c:	mov	w3, #0x61                  	// #97
  216710:	mov	w1, w26
  216714:	mov	x2, x21
  216718:	mov	x4, x22
  21671c:	add	x5, x5, #0xf90
  216720:	bl	21aaf0 <log_internal_realm@plt>
  216724:	b	2165c4 <parse_argv+0x8c>
  216728:	ldr	x0, [x28, #4016]
  21672c:	cbz	x0, 216818 <parse_argv+0x2e0>
  216730:	bl	21ac70 <log_show_location_from_string@plt>
  216734:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  216738:	mov	w26, w0
  21673c:	mov	w0, wzr
  216740:	bl	21aae0 <log_get_max_level_realm@plt>
  216744:	cmp	w0, #0x3
  216748:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  21674c:	ldr	x6, [x28, #4016]
  216750:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  216754:	mov	w0, #0x3                   	// #3
  216758:	mov	w3, #0x6b                  	// #107
  21675c:	mov	w1, w26
  216760:	mov	x2, x21
  216764:	mov	x4, x22
  216768:	add	x5, x5, #0x12b
  21676c:	bl	21aaf0 <log_internal_realm@plt>
  216770:	b	2165c4 <parse_argv+0x8c>
  216774:	ldr	x0, [x28, #4016]
  216778:	bl	21ac80 <log_set_target_from_string@plt>
  21677c:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  216780:	mov	w26, w0
  216784:	mov	w0, wzr
  216788:	bl	21aae0 <log_get_max_level_realm@plt>
  21678c:	cmp	w0, #0x3
  216790:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  216794:	ldr	x6, [x28, #4016]
  216798:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21679c:	mov	w0, #0x3                   	// #3
  2167a0:	mov	w3, #0x58                  	// #88
  2167a4:	mov	w1, w26
  2167a8:	mov	x2, x21
  2167ac:	mov	x4, x22
  2167b0:	add	x5, x5, #0xcca
  2167b4:	bl	21aaf0 <log_internal_realm@plt>
  2167b8:	b	2165c4 <parse_argv+0x8c>
  2167bc:	ldr	x0, [x28, #4016]
  2167c0:	adrp	x1, 23b000 <_DYNAMIC+0xf778>
  2167c4:	add	x1, x1, #0xf90
  2167c8:	bl	21ac90 <parse_sec@plt>
  2167cc:	tbz	w0, #31, 2165c4 <parse_argv+0x8c>
  2167d0:	mov	w26, w0
  2167d4:	mov	w0, wzr
  2167d8:	bl	21aae0 <log_get_max_level_realm@plt>
  2167dc:	cmp	w0, #0x3
  2167e0:	b.lt	2165c4 <parse_argv+0x8c>  // b.tstop
  2167e4:	ldr	x6, [x28, #4016]
  2167e8:	adrp	x5, 203000 <main.dirs-0x548>
  2167ec:	mov	w0, #0x3                   	// #3
  2167f0:	mov	w3, #0x7b                  	// #123
  2167f4:	mov	w1, w26
  2167f8:	mov	x2, x21
  2167fc:	mov	x4, x22
  216800:	add	x5, x5, #0xb1b
  216804:	bl	21aaf0 <log_internal_realm@plt>
  216808:	b	2165c4 <parse_argv+0x8c>
  21680c:	mov	w0, #0x1                   	// #1
  216810:	bl	21aca0 <log_show_color@plt>
  216814:	b	2165c4 <parse_argv+0x8c>
  216818:	mov	w0, #0x1                   	// #1
  21681c:	bl	21acb0 <log_show_location@plt>
  216820:	b	2165c4 <parse_argv+0x8c>
  216824:	cmp	w0, #0x3f
  216828:	b.ne	2168a0 <parse_argv+0x368>  // b.any
  21682c:	mov	w0, #0xffffffea            	// #-22
  216830:	b	216884 <parse_argv+0x34c>
  216834:	adrp	x8, 23b000 <_DYNAMIC+0xf778>
  216838:	ldr	x8, [x8, #4000]
  21683c:	cbz	x8, 216848 <parse_argv+0x310>
  216840:	mov	w0, wzr
  216844:	b	216884 <parse_argv+0x34c>
  216848:	mov	w0, wzr
  21684c:	bl	21aae0 <log_get_max_level_realm@plt>
  216850:	cmp	w0, #0x3
  216854:	b.lt	21682c <parse_argv+0x2f4>  // b.tstop
  216858:	adrp	x2, 203000 <main.dirs-0x548>
  21685c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216860:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  216864:	mov	w1, #0x16                  	// #22
  216868:	add	x2, x2, #0xd6a
  21686c:	add	x4, x4, #0x2dd
  216870:	add	x5, x5, #0x1c1
  216874:	mov	w0, #0x3                   	// #3
  216878:	movk	w1, #0x4000, lsl #16
  21687c:	mov	w3, #0x8f                  	// #143
  216880:	bl	21aaf0 <log_internal_realm@plt>
  216884:	ldp	x20, x19, [sp, #80]
  216888:	ldp	x22, x21, [sp, #64]
  21688c:	ldp	x24, x23, [sp, #48]
  216890:	ldp	x26, x25, [sp, #32]
  216894:	ldp	x28, x27, [sp, #16]
  216898:	ldp	x29, x30, [sp], #96
  21689c:	ret
  2168a0:	adrp	x1, 203000 <main.dirs-0x548>
  2168a4:	adrp	x2, 203000 <main.dirs-0x548>
  2168a8:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  2168ac:	add	x1, x1, #0xe40
  2168b0:	add	x2, x2, #0xd6a
  2168b4:	add	x4, x4, #0x1a4
  2168b8:	mov	w3, #0x8a                  	// #138
  2168bc:	mov	w0, wzr
  2168c0:	bl	21abe0 <log_assert_failed_unreachable_realm@plt>
  2168c4:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  2168c8:	adrp	x2, 203000 <main.dirs-0x548>
  2168cc:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  2168d0:	add	x1, x1, #0x2b5
  2168d4:	add	x2, x2, #0xd6a
  2168d8:	add	x4, x4, #0x1a4
  2168dc:	mov	w3, #0x46                  	// #70
  2168e0:	mov	w0, wzr
  2168e4:	bl	21acc0 <log_assert_failed_realm@plt>
  2168e8:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2168ec:	adrp	x2, 203000 <main.dirs-0x548>
  2168f0:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  2168f4:	add	x1, x1, #0x12f
  2168f8:	add	x2, x2, #0xd6a
  2168fc:	add	x4, x4, #0x1a4
  216900:	mov	w3, #0x47                  	// #71
  216904:	mov	w0, wzr
  216908:	bl	21acc0 <log_assert_failed_realm@plt>

000000000021690c <bump_sysctl_printk_log_level>:
  21690c:	stp	x29, x30, [sp, #-32]!
  216910:	str	x19, [sp, #16]
  216914:	mov	x29, sp
  216918:	bl	216ca4 <read_current_sysctl_printk_log_level>
  21691c:	cmp	w0, #0x4
  216920:	b.hi	216980 <bump_sysctl_printk_log_level+0x74>  // b.pmore
  216924:	adrp	x0, 204000 <parse_argv.options+0xa90>
  216928:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21692c:	add	x0, x0, #0xe2c
  216930:	add	x1, x1, #0x94f
  216934:	mov	w2, #0x5                   	// #5
  216938:	bl	21acd0 <sysctl_writef@plt>
  21693c:	tbz	w0, #31, 216980 <bump_sysctl_printk_log_level+0x74>
  216940:	mov	w19, w0
  216944:	mov	w0, wzr
  216948:	bl	21aae0 <log_get_max_level_realm@plt>
  21694c:	cmp	w0, #0x7
  216950:	b.lt	216980 <bump_sysctl_printk_log_level+0x74>  // b.tstop
  216954:	adrp	x2, 203000 <main.dirs-0x548>
  216958:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  21695c:	adrp	x5, 203000 <main.dirs-0x548>
  216960:	add	x2, x2, #0xd6a
  216964:	add	x4, x4, #0x161
  216968:	add	x5, x5, #0xfe6
  21696c:	mov	w0, #0x7                   	// #7
  216970:	mov	w3, #0x125                 	// #293
  216974:	mov	w6, #0x5                   	// #5
  216978:	mov	w1, w19
  21697c:	bl	21aaf0 <log_internal_realm@plt>
  216980:	ldr	x19, [sp, #16]
  216984:	ldp	x29, x30, [sp], #32
  216988:	ret

000000000021698c <sync_with_progress>:
  21698c:	sub	sp, sp, #0x140
  216990:	stp	x29, x30, [sp, #272]
  216994:	add	x29, sp, #0x110
  216998:	mov	x8, #0xffffffffffffffff    	// #-1
  21699c:	mov	x1, sp
  2169a0:	mov	w2, #0x11                  	// #17
  2169a4:	mov	w3, #0xffffffff            	// #-1
  2169a8:	mov	w0, wzr
  2169ac:	stp	x28, x21, [sp, #288]
  2169b0:	stp	x20, x19, [sp, #304]
  2169b4:	stur	x8, [x29, #-8]
  2169b8:	bl	21ace0 <sigprocmask_many@plt>
  2169bc:	tbnz	w0, #31, 216b34 <sync_with_progress+0x1a8>
  2169c0:	ldp	q0, q1, [sp, #64]
  2169c4:	ldp	q2, q3, [sp, #96]
  2169c8:	mov	x0, sp
  2169cc:	stp	q0, q1, [sp, #192]
  2169d0:	ldp	q0, q4, [sp]
  2169d4:	stp	q2, q3, [sp, #224]
  2169d8:	ldp	q2, q1, [sp, #32]
  2169dc:	stp	q0, q4, [sp, #128]
  2169e0:	stp	q2, q1, [sp, #160]
  2169e4:	bl	21acf0 <asynchronous_sync@plt>
  2169e8:	mov	w19, w0
  2169ec:	mov	w0, wzr
  2169f0:	bl	21aae0 <log_get_max_level_realm@plt>
  2169f4:	tbnz	w19, #31, 216aac <sync_with_progress+0x120>
  2169f8:	cmp	w0, #0x6
  2169fc:	b.lt	216a28 <sync_with_progress+0x9c>  // b.tstop
  216a00:	adrp	x2, 203000 <main.dirs-0x548>
  216a04:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216a08:	adrp	x5, 203000 <main.dirs-0x548>
  216a0c:	add	x2, x2, #0xd6a
  216a10:	add	x4, x4, #0x37f
  216a14:	add	x5, x5, #0xef1
  216a18:	mov	w0, #0x6                   	// #6
  216a1c:	mov	w3, #0xe6                  	// #230
  216a20:	mov	w1, wzr
  216a24:	bl	21aaf0 <log_internal_realm@plt>
  216a28:	mov	w20, wzr
  216a2c:	mov	w21, #0x1                   	// #1
  216a30:	ldr	w0, [sp]
  216a34:	mov	w1, #0x9680                	// #38528
  216a38:	movk	w1, #0x98, lsl #16
  216a3c:	bl	21ad00 <wait_for_terminate_with_timeout@plt>
  216a40:	cmn	w0, #0x6e
  216a44:	b.ne	216ad8 <sync_with_progress+0x14c>  // b.any
  216a48:	sub	x0, x29, #0x8
  216a4c:	bl	216e8c <sync_making_progress>
  216a50:	cmp	w0, #0x1
  216a54:	csinc	w20, w21, w20, ge  // ge = tcont
  216a58:	cmp	w20, #0x3
  216a5c:	b.cc	216a30 <sync_with_progress+0xa4>  // b.lo, b.ul, b.last
  216a60:	mov	w0, wzr
  216a64:	bl	21aae0 <log_get_max_level_realm@plt>
  216a68:	cmp	w0, #0x3
  216a6c:	b.lt	216a9c <sync_with_progress+0x110>  // b.tstop
  216a70:	ldr	w6, [sp]
  216a74:	adrp	x2, 203000 <main.dirs-0x548>
  216a78:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216a7c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216a80:	add	x2, x2, #0xd6a
  216a84:	add	x4, x4, #0x37f
  216a88:	add	x5, x5, #0x392
  216a8c:	mov	w0, #0x3                   	// #3
  216a90:	mov	w3, #0xfe                  	// #254
  216a94:	mov	w1, wzr
  216a98:	bl	21aaf0 <log_internal_realm@plt>
  216a9c:	ldr	w0, [sp]
  216aa0:	mov	w1, #0x9                   	// #9
  216aa4:	bl	21ad10 <kill@plt>
  216aa8:	b	216b18 <sync_with_progress+0x18c>
  216aac:	cmp	w0, #0x3
  216ab0:	b.lt	216b18 <sync_with_progress+0x18c>  // b.tstop
  216ab4:	adrp	x2, 203000 <main.dirs-0x548>
  216ab8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216abc:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216ac0:	add	x2, x2, #0xd6a
  216ac4:	add	x4, x4, #0x37f
  216ac8:	add	x5, x5, #0x7de
  216acc:	mov	w0, #0x3                   	// #3
  216ad0:	mov	w3, #0xe2                  	// #226
  216ad4:	b	216b10 <sync_with_progress+0x184>
  216ad8:	mov	w19, w0
  216adc:	cbz	w0, 216b18 <sync_with_progress+0x18c>
  216ae0:	mov	w0, wzr
  216ae4:	bl	21aae0 <log_get_max_level_realm@plt>
  216ae8:	cmp	w0, #0x3
  216aec:	b.lt	216b18 <sync_with_progress+0x18c>  // b.tstop
  216af0:	adrp	x2, 203000 <main.dirs-0x548>
  216af4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216af8:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  216afc:	add	x2, x2, #0xd6a
  216b00:	add	x4, x4, #0x37f
  216b04:	add	x5, x5, #0x2ee
  216b08:	mov	w0, #0x3                   	// #3
  216b0c:	mov	w3, #0xf7                  	// #247
  216b10:	mov	w1, w19
  216b14:	bl	21aaf0 <log_internal_realm@plt>
  216b18:	add	x0, sp, #0x80
  216b1c:	bl	216e44 <block_signals_reset>
  216b20:	ldp	x20, x19, [sp, #304]
  216b24:	ldp	x28, x21, [sp, #288]
  216b28:	ldp	x29, x30, [sp, #272]
  216b2c:	add	sp, sp, #0x140
  216b30:	ret
  216b34:	adrp	x1, 203000 <main.dirs-0x548>
  216b38:	adrp	x2, 203000 <main.dirs-0x548>
  216b3c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216b40:	add	x1, x1, #0x71d
  216b44:	add	x2, x2, #0xd6a
  216b48:	add	x4, x4, #0x880
  216b4c:	mov	w3, #0xdb                  	// #219
  216b50:	mov	w0, wzr
  216b54:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000216b58 <watchdog_free_device>:
  216b58:	stp	x29, x30, [sp, #-16]!
  216b5c:	mov	x0, xzr
  216b60:	mov	x29, sp
  216b64:	bl	21aad0 <watchdog_set_device@plt>
  216b68:	ldp	x29, x30, [sp], #16
  216b6c:	ret

0000000000216b70 <switch_root_initramfs>:
  216b70:	stp	x29, x30, [sp, #-32]!
  216b74:	adrp	x0, 205000 <parse_argv.options+0x1a90>
  216b78:	add	x0, x0, #0x4b
  216b7c:	mov	w3, #0x1000                	// #4096
  216b80:	mov	x1, x0
  216b84:	mov	x2, xzr
  216b88:	mov	x4, xzr
  216b8c:	str	x19, [sp, #16]
  216b90:	mov	x29, sp
  216b94:	bl	21ad20 <mount@plt>
  216b98:	tbnz	w0, #31, 216bdc <switch_root_initramfs+0x6c>
  216b9c:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  216ba0:	add	x1, x1, #0x4b
  216ba4:	mov	w3, #0x40000               	// #262144
  216ba8:	mov	x0, xzr
  216bac:	mov	x2, xzr
  216bb0:	mov	x4, xzr
  216bb4:	bl	21ad20 <mount@plt>
  216bb8:	tbnz	w0, #31, 216c18 <switch_root_initramfs+0xa8>
  216bbc:	adrp	x0, 205000 <parse_argv.options+0x1a90>
  216bc0:	adrp	x1, 203000 <main.dirs-0x548>
  216bc4:	add	x0, x0, #0x4b
  216bc8:	add	x1, x1, #0xca0
  216bcc:	mov	w3, #0x1000                	// #4096
  216bd0:	mov	w2, wzr
  216bd4:	bl	21ad30 <switch_root@plt>
  216bd8:	b	216c6c <switch_root_initramfs+0xfc>
  216bdc:	bl	21abb0 <__errno_location@plt>
  216be0:	ldr	w19, [x0]
  216be4:	mov	w0, wzr
  216be8:	bl	21aae0 <log_get_max_level_realm@plt>
  216bec:	cmp	w0, #0x3
  216bf0:	b.lt	216c5c <switch_root_initramfs+0xec>  // b.tstop
  216bf4:	adrp	x2, 203000 <main.dirs-0x548>
  216bf8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216bfc:	adrp	x5, 203000 <main.dirs-0x548>
  216c00:	add	x2, x2, #0xd6a
  216c04:	add	x4, x4, #0x89e
  216c08:	add	x5, x5, #0xf18
  216c0c:	mov	w0, #0x3                   	// #3
  216c10:	mov	w3, #0x96                  	// #150
  216c14:	b	216c50 <switch_root_initramfs+0xe0>
  216c18:	bl	21abb0 <__errno_location@plt>
  216c1c:	ldr	w19, [x0]
  216c20:	mov	w0, wzr
  216c24:	bl	21aae0 <log_get_max_level_realm@plt>
  216c28:	cmp	w0, #0x3
  216c2c:	b.lt	216c5c <switch_root_initramfs+0xec>  // b.tstop
  216c30:	adrp	x2, 203000 <main.dirs-0x548>
  216c34:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216c38:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  216c3c:	add	x2, x2, #0xd6a
  216c40:	add	x4, x4, #0x89e
  216c44:	add	x5, x5, #0x31f
  216c48:	mov	w0, #0x3                   	// #3
  216c4c:	mov	w3, #0x99                  	// #153
  216c50:	mov	w1, w19
  216c54:	bl	21aaf0 <log_internal_realm@plt>
  216c58:	b	216c6c <switch_root_initramfs+0xfc>
  216c5c:	cmp	w19, #0x0
  216c60:	mov	w8, wzr
  216c64:	cneg	w9, w19, mi  // mi = first
  216c68:	sub	w0, w8, w9, uxtb
  216c6c:	ldr	x19, [sp, #16]
  216c70:	ldp	x29, x30, [sp], #32
  216c74:	ret

0000000000216c78 <safe_fork>:
  216c78:	stp	x29, x30, [sp, #-16]!
  216c7c:	adrp	x0, 204000 <parse_argv.options+0xa90>
  216c80:	add	x0, x0, #0xc2c
  216c84:	mov	w3, #0x63                  	// #99
  216c88:	mov	x1, xzr
  216c8c:	mov	x2, xzr
  216c90:	mov	x4, xzr
  216c94:	mov	x29, sp
  216c98:	bl	21ad40 <safe_fork_full@plt>
  216c9c:	ldp	x29, x30, [sp], #16
  216ca0:	ret

0000000000216ca4 <read_current_sysctl_printk_log_level>:
  216ca4:	sub	sp, sp, #0x40
  216ca8:	stp	x29, x30, [sp, #32]
  216cac:	add	x29, sp, #0x20
  216cb0:	adrp	x0, 204000 <parse_argv.options+0xa90>
  216cb4:	add	x0, x0, #0xe2c
  216cb8:	add	x1, x29, #0x18
  216cbc:	str	x19, [sp, #48]
  216cc0:	str	xzr, [x29, #24]
  216cc4:	stur	xzr, [x29, #-8]
  216cc8:	bl	21ad50 <sysctl_read@plt>
  216ccc:	tbnz	w0, #31, 216d10 <read_current_sysctl_printk_log_level+0x6c>
  216cd0:	ldr	x8, [x29, #24]
  216cd4:	add	x0, sp, #0x8
  216cd8:	sub	x1, x29, #0x8
  216cdc:	mov	x2, xzr
  216ce0:	mov	w3, wzr
  216ce4:	str	x8, [sp, #8]
  216ce8:	bl	21ad60 <extract_first_word@plt>
  216cec:	mov	w19, w0
  216cf0:	tbnz	w0, #31, 216d48 <read_current_sysctl_printk_log_level+0xa4>
  216cf4:	cbz	w19, 216d88 <read_current_sysctl_printk_log_level+0xe4>
  216cf8:	ldur	x0, [x29, #-8]
  216cfc:	sub	x1, x29, #0xc
  216d00:	bl	21ad70 <safe_atoi@plt>
  216d04:	tbnz	w0, #31, 216dc4 <read_current_sysctl_printk_log_level+0x120>
  216d08:	ldur	w19, [x29, #-12]
  216d0c:	b	216e18 <read_current_sysctl_printk_log_level+0x174>
  216d10:	mov	w19, w0
  216d14:	mov	w0, wzr
  216d18:	bl	21aae0 <log_get_max_level_realm@plt>
  216d1c:	cmp	w0, #0x7
  216d20:	b.lt	216e0c <read_current_sysctl_printk_log_level+0x168>  // b.tstop
  216d24:	adrp	x2, 203000 <main.dirs-0x548>
  216d28:	adrp	x4, 203000 <main.dirs-0x548>
  216d2c:	adrp	x5, 203000 <main.dirs-0x548>
  216d30:	add	x2, x2, #0xd6a
  216d34:	add	x4, x4, #0xb4d
  216d38:	add	x5, x5, #0xb72
  216d3c:	mov	w0, #0x7                   	// #7
  216d40:	mov	w3, #0x10a                 	// #266
  216d44:	b	216d78 <read_current_sysctl_printk_log_level+0xd4>
  216d48:	mov	w0, wzr
  216d4c:	bl	21aae0 <log_get_max_level_realm@plt>
  216d50:	cmp	w0, #0x7
  216d54:	b.lt	216e0c <read_current_sysctl_printk_log_level+0x168>  // b.tstop
  216d58:	adrp	x2, 203000 <main.dirs-0x548>
  216d5c:	adrp	x4, 203000 <main.dirs-0x548>
  216d60:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  216d64:	add	x2, x2, #0xd6a
  216d68:	add	x4, x4, #0xb4d
  216d6c:	add	x5, x5, #0x2bf
  216d70:	mov	w0, #0x7                   	// #7
  216d74:	mov	w3, #0x10f                 	// #271
  216d78:	mov	w1, w19
  216d7c:	bl	21aaf0 <log_internal_realm@plt>
  216d80:	mov	w19, w0
  216d84:	b	216e18 <read_current_sysctl_printk_log_level+0x174>
  216d88:	mov	w0, wzr
  216d8c:	bl	21aae0 <log_get_max_level_realm@plt>
  216d90:	cmp	w0, #0x7
  216d94:	b.lt	216e3c <read_current_sysctl_printk_log_level+0x198>  // b.tstop
  216d98:	adrp	x2, 203000 <main.dirs-0x548>
  216d9c:	adrp	x4, 203000 <main.dirs-0x548>
  216da0:	adrp	x5, 204000 <parse_argv.options+0xa90>
  216da4:	mov	w1, #0x16                  	// #22
  216da8:	add	x2, x2, #0xd6a
  216dac:	add	x4, x4, #0xb4d
  216db0:	add	x5, x5, #0xaa8
  216db4:	mov	w0, #0x7                   	// #7
  216db8:	movk	w1, #0x4000, lsl #16
  216dbc:	mov	w3, #0x111                 	// #273
  216dc0:	b	216d7c <read_current_sysctl_printk_log_level+0xd8>
  216dc4:	mov	w19, w0
  216dc8:	mov	w0, wzr
  216dcc:	bl	21aae0 <log_get_max_level_realm@plt>
  216dd0:	cmp	w0, #0x7
  216dd4:	b.lt	216e0c <read_current_sysctl_printk_log_level+0x168>  // b.tstop
  216dd8:	ldr	x6, [x29, #24]
  216ddc:	adrp	x2, 203000 <main.dirs-0x548>
  216de0:	adrp	x4, 203000 <main.dirs-0x548>
  216de4:	adrp	x5, 203000 <main.dirs-0x548>
  216de8:	add	x2, x2, #0xd6a
  216dec:	add	x4, x4, #0xb4d
  216df0:	add	x5, x5, #0xa2b
  216df4:	mov	w0, #0x7                   	// #7
  216df8:	mov	w3, #0x115                 	// #277
  216dfc:	mov	w1, w19
  216e00:	bl	21aaf0 <log_internal_realm@plt>
  216e04:	mov	w19, w0
  216e08:	b	216e18 <read_current_sysctl_printk_log_level+0x174>
  216e0c:	mov	w8, wzr
  216e10:	neg	w9, w19
  216e14:	sub	w19, w8, w9, uxtb
  216e18:	sub	x0, x29, #0x8
  216e1c:	bl	216520 <freep>
  216e20:	add	x0, x29, #0x18
  216e24:	bl	216520 <freep>
  216e28:	mov	w0, w19
  216e2c:	ldr	x19, [sp, #48]
  216e30:	ldp	x29, x30, [sp, #32]
  216e34:	add	sp, sp, #0x40
  216e38:	ret
  216e3c:	mov	w19, #0xffffffea            	// #-22
  216e40:	b	216e18 <read_current_sysctl_printk_log_level+0x174>

0000000000216e44 <block_signals_reset>:
  216e44:	stp	x29, x30, [sp, #-16]!
  216e48:	mov	x1, x0
  216e4c:	mov	w0, #0x2                   	// #2
  216e50:	mov	x2, xzr
  216e54:	mov	x29, sp
  216e58:	bl	21ad80 <sigprocmask@plt>
  216e5c:	tbnz	w0, #31, 216e68 <block_signals_reset+0x24>
  216e60:	ldp	x29, x30, [sp], #16
  216e64:	ret
  216e68:	adrp	x1, 204000 <parse_argv.options+0xa90>
  216e6c:	adrp	x2, 203000 <main.dirs-0x548>
  216e70:	adrp	x4, 204000 <parse_argv.options+0xa90>
  216e74:	add	x1, x1, #0xfc3
  216e78:	add	x2, x2, #0xdc2
  216e7c:	add	x4, x4, #0x134
  216e80:	mov	w3, #0x18                  	// #24
  216e84:	mov	w0, wzr
  216e88:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000216e8c <sync_making_progress>:
  216e8c:	sub	sp, sp, #0x80
  216e90:	stp	x20, x19, [sp, #112]
  216e94:	mov	x19, x0
  216e98:	adrp	x0, 204000 <parse_argv.options+0xa90>
  216e9c:	adrp	x1, 203000 <main.dirs-0x548>
  216ea0:	stp	x29, x30, [sp, #32]
  216ea4:	add	x29, sp, #0x20
  216ea8:	add	x0, x0, #0xe3a
  216eac:	add	x1, x1, #0x955
  216eb0:	stp	x28, x27, [sp, #48]
  216eb4:	stp	x26, x25, [sp, #64]
  216eb8:	stp	x24, x23, [sp, #80]
  216ebc:	stp	x22, x21, [sp, #96]
  216ec0:	stur	xzr, [x29, #-8]
  216ec4:	bl	21ad90 <fopen64@plt>
  216ec8:	stur	x0, [x29, #-8]
  216ecc:	cbz	x0, 21707c <sync_making_progress+0x1f0>
  216ed0:	adrp	x21, 203000 <main.dirs-0x548>
  216ed4:	adrp	x22, 204000 <parse_argv.options+0xa90>
  216ed8:	adrp	x23, 204000 <parse_argv.options+0xa90>
  216edc:	adrp	x24, 204000 <parse_argv.options+0xa90>
  216ee0:	adrp	x27, 204000 <parse_argv.options+0xa90>
  216ee4:	mov	x20, x0
  216ee8:	mov	x25, xzr
  216eec:	add	x21, x21, #0xd6a
  216ef0:	add	x22, x22, #0xd
  216ef4:	add	x23, x23, #0x7f8
  216ef8:	add	x24, x24, #0x303
  216efc:	add	x27, x27, #0x24e
  216f00:	str	x19, [sp]
  216f04:	add	x1, sp, #0x10
  216f08:	mov	x0, x20
  216f0c:	stp	xzr, xzr, [sp, #8]
  216f10:	bl	217118 <read_line>
  216f14:	mov	w26, w0
  216f18:	tbnz	w0, #31, 216f90 <sync_making_progress+0x104>
  216f1c:	cbz	w26, 216fc4 <sync_making_progress+0x138>
  216f20:	ldr	x26, [sp, #16]
  216f24:	mov	x1, x24
  216f28:	mov	x0, x26
  216f2c:	bl	21ada0 <first_word@plt>
  216f30:	cbnz	x0, 216f5c <sync_making_progress+0xd0>
  216f34:	adrp	x1, 203000 <main.dirs-0x548>
  216f38:	mov	x0, x26
  216f3c:	add	x1, x1, #0xa54
  216f40:	bl	21ada0 <first_word@plt>
  216f44:	cbnz	x0, 216f5c <sync_making_progress+0xd0>
  216f48:	adrp	x1, 203000 <main.dirs-0x548>
  216f4c:	mov	x0, x26
  216f50:	add	x1, x1, #0x958
  216f54:	bl	21ada0 <first_word@plt>
  216f58:	cbz	x0, 217054 <sync_making_progress+0x1c8>
  216f5c:	bl	21abb0 <__errno_location@plt>
  216f60:	mov	x19, x0
  216f64:	str	wzr, [x0]
  216f68:	add	x2, sp, #0x8
  216f6c:	mov	x0, x26
  216f70:	mov	x1, x27
  216f74:	bl	21adb0 <__isoc99_sscanf@plt>
  216f78:	cmp	w0, #0x1
  216f7c:	b.ne	216fdc <sync_making_progress+0x150>  // b.any
  216f80:	ldr	x8, [sp, #8]
  216f84:	mov	w19, wzr
  216f88:	add	x25, x8, x25
  216f8c:	b	21703c <sync_making_progress+0x1b0>
  216f90:	mov	w0, wzr
  216f94:	bl	21aae0 <log_get_max_level_realm@plt>
  216f98:	cmp	w0, #0x4
  216f9c:	b.lt	216fcc <sync_making_progress+0x140>  // b.tstop
  216fa0:	mov	w0, #0x4                   	// #4
  216fa4:	mov	w3, #0xbc                  	// #188
  216fa8:	mov	w1, w26
  216fac:	mov	x2, x21
  216fb0:	mov	x4, x22
  216fb4:	mov	x5, x23
  216fb8:	bl	21aaf0 <log_internal_realm@plt>
  216fbc:	mov	w28, w0
  216fc0:	b	217038 <sync_making_progress+0x1ac>
  216fc4:	mov	w19, #0x2                   	// #2
  216fc8:	b	21703c <sync_making_progress+0x1b0>
  216fcc:	mov	w8, wzr
  216fd0:	neg	w9, w26
  216fd4:	sub	w28, w8, w9, uxtb
  216fd8:	b	217038 <sync_making_progress+0x1ac>
  216fdc:	ldr	w26, [x19]
  216fe0:	mov	w0, wzr
  216fe4:	bl	21aae0 <log_get_max_level_realm@plt>
  216fe8:	cmp	w0, #0x4
  216fec:	cbz	w26, 217010 <sync_making_progress+0x184>
  216ff0:	b.lt	217034 <sync_making_progress+0x1a8>  // b.tstop
  216ff4:	mov	w0, #0x4                   	// #4
  216ff8:	mov	w3, #0xc6                  	// #198
  216ffc:	mov	w1, w26
  217000:	mov	x2, x21
  217004:	mov	x4, x22
  217008:	mov	x5, x23
  21700c:	b	217030 <sync_making_progress+0x1a4>
  217010:	b.lt	217034 <sync_making_progress+0x1a8>  // b.tstop
  217014:	adrp	x5, 204000 <parse_argv.options+0xa90>
  217018:	mov	w0, #0x4                   	// #4
  21701c:	mov	w3, #0xc8                  	// #200
  217020:	mov	w1, wzr
  217024:	mov	x2, x21
  217028:	mov	x4, x22
  21702c:	add	x5, x5, #0x311
  217030:	bl	21aaf0 <log_internal_realm@plt>
  217034:	mov	w28, wzr
  217038:	mov	w19, #0x1                   	// #1
  21703c:	add	x0, sp, #0x10
  217040:	bl	216520 <freep>
  217044:	cbz	w19, 216f04 <sync_making_progress+0x78>
  217048:	cmp	w19, #0x3
  21704c:	b.eq	216f04 <sync_making_progress+0x78>  // b.none
  217050:	b	21705c <sync_making_progress+0x1d0>
  217054:	mov	w19, #0x3                   	// #3
  217058:	b	21703c <sync_making_progress+0x1b0>
  21705c:	cmp	w19, #0x2
  217060:	b.ne	2170d4 <sync_making_progress+0x248>  // b.any
  217064:	ldr	x9, [sp]
  217068:	ldr	x8, [x9]
  21706c:	str	x25, [x9]
  217070:	cmp	x8, x25
  217074:	cset	w28, hi  // hi = pmore
  217078:	b	2170d4 <sync_making_progress+0x248>
  21707c:	bl	21abb0 <__errno_location@plt>
  217080:	ldr	w19, [x0]
  217084:	mov	w0, wzr
  217088:	bl	21aae0 <log_get_max_level_realm@plt>
  21708c:	cmp	w0, #0x4
  217090:	b.lt	2170c4 <sync_making_progress+0x238>  // b.tstop
  217094:	adrp	x2, 203000 <main.dirs-0x548>
  217098:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21709c:	adrp	x5, 203000 <main.dirs-0x548>
  2170a0:	add	x2, x2, #0xd6a
  2170a4:	add	x4, x4, #0xd
  2170a8:	add	x5, x5, #0xe57
  2170ac:	mov	w0, #0x4                   	// #4
  2170b0:	mov	w3, #0xb3                  	// #179
  2170b4:	mov	w1, w19
  2170b8:	bl	21aaf0 <log_internal_realm@plt>
  2170bc:	mov	w28, w0
  2170c0:	b	2170d4 <sync_making_progress+0x248>
  2170c4:	cmp	w19, #0x0
  2170c8:	mov	w8, wzr
  2170cc:	cneg	w9, w19, mi  // mi = first
  2170d0:	sub	w28, w8, w9, uxtb
  2170d4:	sub	x0, x29, #0x8
  2170d8:	bl	217100 <fclosep>
  2170dc:	mov	w0, w28
  2170e0:	ldp	x20, x19, [sp, #112]
  2170e4:	ldp	x22, x21, [sp, #96]
  2170e8:	ldp	x24, x23, [sp, #80]
  2170ec:	ldp	x26, x25, [sp, #64]
  2170f0:	ldp	x28, x27, [sp, #48]
  2170f4:	ldp	x29, x30, [sp, #32]
  2170f8:	add	sp, sp, #0x80
  2170fc:	ret

0000000000217100 <fclosep>:
  217100:	stp	x29, x30, [sp, #-16]!
  217104:	ldr	x0, [x0]
  217108:	mov	x29, sp
  21710c:	bl	21adc0 <safe_fclose@plt>
  217110:	ldp	x29, x30, [sp], #16
  217114:	ret

0000000000217118 <read_line>:
  217118:	stp	x29, x30, [sp, #-16]!
  21711c:	mov	x3, x1
  217120:	mov	w1, #0x100000              	// #1048576
  217124:	mov	w2, wzr
  217128:	mov	x29, sp
  21712c:	bl	21add0 <read_line_full@plt>
  217130:	ldp	x29, x30, [sp], #16
  217134:	ret

0000000000217138 <mount_points_list_free>:
  217138:	stp	x29, x30, [sp, #-32]!
  21713c:	str	x19, [sp, #16]
  217140:	mov	x29, sp
  217144:	cbz	x0, 217170 <mount_points_list_free+0x38>
  217148:	mov	x19, x0
  21714c:	ldr	x1, [x19]
  217150:	cbz	x1, 217164 <mount_points_list_free+0x2c>
  217154:	mov	x0, x19
  217158:	bl	217190 <mount_point_free>
  21715c:	ldr	x1, [x19]
  217160:	cbnz	x1, 217154 <mount_points_list_free+0x1c>
  217164:	ldr	x19, [sp, #16]
  217168:	ldp	x29, x30, [sp], #32
  21716c:	ret
  217170:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217174:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217178:	adrp	x4, 203000 <main.dirs-0x548>
  21717c:	add	x1, x1, #0x159
  217180:	add	x2, x2, #0xfee
  217184:	add	x4, x4, #0xe78
  217188:	mov	w3, #0x32                  	// #50
  21718c:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217190 <mount_point_free>:
  217190:	stp	x29, x30, [sp, #-32]!
  217194:	str	x19, [sp, #16]
  217198:	mov	x29, sp
  21719c:	cbz	x0, 217208 <mount_point_free+0x78>
  2171a0:	mov	x19, x1
  2171a4:	cbz	x1, 217228 <mount_point_free+0x98>
  2171a8:	mov	x8, x19
  2171ac:	ldr	x9, [x8, #40]!
  2171b0:	cbz	x9, 2171bc <mount_point_free+0x2c>
  2171b4:	ldr	x10, [x19, #48]
  2171b8:	str	x10, [x9, #48]
  2171bc:	ldr	x9, [x19, #48]
  2171c0:	cbz	x9, 2171cc <mount_point_free+0x3c>
  2171c4:	add	x0, x9, #0x28
  2171c8:	b	2171d8 <mount_point_free+0x48>
  2171cc:	ldr	x9, [x0]
  2171d0:	cmp	x9, x19
  2171d4:	b.ne	21724c <mount_point_free+0xbc>  // b.any
  2171d8:	ldr	x9, [x19, #40]
  2171dc:	str	x9, [x0]
  2171e0:	stp	xzr, xzr, [x8]
  2171e4:	ldr	x0, [x19]
  2171e8:	bl	21ac20 <free@plt>
  2171ec:	ldr	x0, [x19, #8]
  2171f0:	bl	21ac20 <free@plt>
  2171f4:	mov	x0, x19
  2171f8:	bl	21ac20 <free@plt>
  2171fc:	ldr	x19, [sp, #16]
  217200:	ldp	x29, x30, [sp], #32
  217204:	ret
  217208:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21720c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217210:	adrp	x4, 203000 <main.dirs-0x548>
  217214:	add	x1, x1, #0x159
  217218:	add	x2, x2, #0xfee
  21721c:	add	x4, x4, #0x74b
  217220:	mov	w3, #0x27                  	// #39
  217224:	bl	21acc0 <log_assert_failed_realm@plt>
  217228:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21722c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217230:	adrp	x4, 203000 <main.dirs-0x548>
  217234:	add	x1, x1, #0x8b4
  217238:	add	x2, x2, #0xfee
  21723c:	add	x4, x4, #0x74b
  217240:	mov	w3, #0x28                  	// #40
  217244:	mov	w0, wzr
  217248:	bl	21acc0 <log_assert_failed_realm@plt>
  21724c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217250:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217254:	adrp	x4, 203000 <main.dirs-0x548>
  217258:	add	x1, x1, #0x25b
  21725c:	add	x2, x2, #0xfee
  217260:	add	x4, x4, #0x74b
  217264:	mov	w3, #0x2a                  	// #42
  217268:	mov	w0, wzr
  21726c:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217270 <mount_points_list_get>:
  217270:	sub	sp, sp, #0xc0
  217274:	stp	x29, x30, [sp, #96]
  217278:	add	x29, sp, #0x60
  21727c:	stp	x28, x27, [sp, #112]
  217280:	stp	x26, x25, [sp, #128]
  217284:	stp	x24, x23, [sp, #144]
  217288:	stp	x22, x21, [sp, #160]
  21728c:	stp	x20, x19, [sp, #176]
  217290:	stp	xzr, xzr, [x29, #-16]
  217294:	cbz	x1, 217678 <mount_points_list_get+0x408>
  217298:	mov	x19, x1
  21729c:	sub	x1, x29, #0x8
  2172a0:	sub	x2, x29, #0x10
  2172a4:	mov	x25, x0
  2172a8:	bl	2176f8 <libmount_parse>
  2172ac:	tbnz	w0, #31, 2175e4 <mount_points_list_get+0x374>
  2172b0:	adrp	x8, 204000 <parse_argv.options+0xa90>
  2172b4:	add	x8, x8, #0x81a
  2172b8:	cmp	x25, #0x0
  2172bc:	adrp	x20, 204000 <parse_argv.options+0xa90>
  2172c0:	adrp	x21, 203000 <main.dirs-0x548>
  2172c4:	adrp	x22, 204000 <parse_argv.options+0xa90>
  2172c8:	adrp	x23, 204000 <parse_argv.options+0xa90>
  2172cc:	adrp	x24, 205000 <parse_argv.options+0x1a90>
  2172d0:	add	x20, x20, #0xfee
  2172d4:	add	x21, x21, #0xa5f
  2172d8:	add	x22, x22, #0x32f
  2172dc:	add	x23, x23, #0x15e
  2172e0:	add	x24, x24, #0x4c8
  2172e4:	csel	x26, x8, x25, eq  // eq = none
  2172e8:	ldp	x1, x0, [x29, #-16]
  2172ec:	sub	x2, x29, #0x18
  2172f0:	stp	xzr, xzr, [x29, #-40]
  2172f4:	stp	xzr, xzr, [sp, #40]
  2172f8:	bl	21ade0 <mnt_table_next_fs@plt>
  2172fc:	cmp	w0, #0x1
  217300:	b.ne	21730c <mount_points_list_get+0x9c>  // b.any
  217304:	mov	w25, #0x4                   	// #4
  217308:	b	217410 <mount_points_list_get+0x1a0>
  21730c:	mov	w25, w0
  217310:	tbnz	w0, #31, 2173ac <mount_points_list_get+0x13c>
  217314:	ldur	x0, [x29, #-24]
  217318:	bl	21adf0 <mnt_fs_get_target@plt>
  21731c:	cbz	x0, 2173a4 <mount_points_list_get+0x134>
  217320:	mov	x28, x0
  217324:	ldur	x0, [x29, #-24]
  217328:	bl	21ae00 <mnt_fs_get_fstype@plt>
  21732c:	ldur	x8, [x29, #-24]
  217330:	mov	x25, x0
  217334:	mov	x0, x8
  217338:	bl	21ae10 <mnt_fs_get_vfs_options@plt>
  21733c:	mov	x2, x0
  217340:	sub	x0, x29, #0x20
  217344:	mov	x1, x23
  217348:	mov	x3, xzr
  21734c:	bl	21ae20 <strextend_with_separator@plt>
  217350:	cbz	x0, 2173f0 <mount_points_list_get+0x180>
  217354:	ldur	x0, [x29, #-24]
  217358:	bl	21ae30 <mnt_fs_get_fs_options@plt>
  21735c:	mov	x2, x0
  217360:	sub	x0, x29, #0x20
  217364:	mov	x1, x23
  217368:	mov	x3, xzr
  21736c:	bl	21ae20 <strextend_with_separator@plt>
  217370:	cbz	x0, 2173f8 <mount_points_list_get+0x188>
  217374:	mov	x0, x28
  217378:	bl	2198c0 <mount_point_is_api>
  21737c:	tbnz	w0, #0, 2173a4 <mount_points_list_get+0x134>
  217380:	mov	x0, x28
  217384:	bl	21992c <mount_point_ignore>
  217388:	tbnz	w0, #0, 2173a4 <mount_points_list_get+0x134>
  21738c:	ldp	q0, q1, [x24]
  217390:	mov	x1, sp
  217394:	mov	x0, x28
  217398:	stp	q0, q1, [sp]
  21739c:	bl	21ae40 <path_startswith_strv@plt>
  2173a0:	cbz	x0, 217438 <mount_points_list_get+0x1c8>
  2173a4:	mov	w25, #0x5                   	// #5
  2173a8:	b	217410 <mount_points_list_get+0x1a0>
  2173ac:	mov	w0, wzr
  2173b0:	bl	21aae0 <log_get_max_level_realm@plt>
  2173b4:	cmp	w0, #0x3
  2173b8:	b.lt	2173e0 <mount_points_list_get+0x170>  // b.tstop
  2173bc:	mov	w0, #0x3                   	// #3
  2173c0:	mov	w3, #0x50                  	// #80
  2173c4:	mov	w1, w25
  2173c8:	mov	x2, x20
  2173cc:	mov	x4, x21
  2173d0:	mov	x5, x22
  2173d4:	mov	x6, x26
  2173d8:	bl	21aaf0 <log_internal_realm@plt>
  2173dc:	b	217408 <mount_points_list_get+0x198>
  2173e0:	mov	w8, wzr
  2173e4:	neg	w9, w25
  2173e8:	sub	w27, w8, w9, uxtb
  2173ec:	b	21740c <mount_points_list_get+0x19c>
  2173f0:	mov	w2, #0x63                  	// #99
  2173f4:	b	2173fc <mount_points_list_get+0x18c>
  2173f8:	mov	w2, #0x67                  	// #103
  2173fc:	mov	x1, x20
  217400:	mov	x3, x21
  217404:	bl	21ae50 <log_oom_internal@plt>
  217408:	mov	w27, w0
  21740c:	mov	w25, #0x1                   	// #1
  217410:	add	x0, sp, #0x28
  217414:	bl	2177bc <freep>
  217418:	add	x0, sp, #0x30
  21741c:	bl	2177bc <freep>
  217420:	sub	x0, x29, #0x20
  217424:	bl	2177bc <freep>
  217428:	cbz	w25, 2172e8 <mount_points_list_get+0x78>
  21742c:	cmp	w25, #0x5
  217430:	b.eq	2172e8 <mount_points_list_get+0x78>  // b.none
  217434:	b	2175d4 <mount_points_list_get+0x364>
  217438:	bl	21aaa0 <detect_container@plt>
  21743c:	cmp	w0, #0x0
  217440:	b.gt	217468 <mount_points_list_get+0x1f8>
  217444:	mov	x0, x25
  217448:	bl	21ae60 <fstype_is_network@plt>
  21744c:	tbnz	w0, #0, 217468 <mount_points_list_get+0x1f8>
  217450:	mov	x0, x25
  217454:	bl	21ae70 <fstype_is_api_vfs@plt>
  217458:	tbnz	w0, #0, 217468 <mount_points_list_get+0x1f8>
  21745c:	mov	x0, x25
  217460:	bl	21ae80 <fstype_is_ro@plt>
  217464:	tbz	w0, #0, 2175c0 <mount_points_list_get+0x350>
  217468:	mov	w24, wzr
  21746c:	tbz	w24, #0, 2174a8 <mount_points_list_get+0x238>
  217470:	ldur	x0, [x29, #-24]
  217474:	sub	x1, x29, #0x28
  217478:	bl	21ae90 <mnt_fs_get_propagation@plt>
  21747c:	tbnz	w0, #31, 217520 <mount_points_list_get+0x2b0>
  217480:	ldp	x1, x0, [x29, #-40]
  217484:	sub	x2, x29, #0x28
  217488:	add	x3, sp, #0x30
  21748c:	bl	21aea0 <mount_option_mangle@plt>
  217490:	tbnz	w0, #31, 217578 <mount_points_list_get+0x308>
  217494:	ldur	x8, [x29, #-40]
  217498:	mov	w9, #0x21                  	// #33
  21749c:	and	x8, x8, #0xffffffffffffefff
  2174a0:	orr	x8, x8, x9
  2174a4:	stur	x8, [x29, #-40]
  2174a8:	mov	w0, #0x1                   	// #1
  2174ac:	mov	w1, #0x38                  	// #56
  2174b0:	bl	21aeb0 <calloc@plt>
  2174b4:	str	x0, [sp, #40]
  2174b8:	cbz	x0, 217518 <mount_points_list_get+0x2a8>
  2174bc:	mov	x0, x28
  2174c0:	bl	21aec0 <strdup@plt>
  2174c4:	ldr	x8, [sp, #40]
  2174c8:	str	x0, [x8]
  2174cc:	cbz	x0, 217554 <mount_points_list_get+0x2e4>
  2174d0:	ldr	x9, [sp, #48]
  2174d4:	stp	xzr, xzr, [sp, #40]
  2174d8:	and	w10, w24, #0x1
  2174dc:	str	x9, [x8, #8]
  2174e0:	ldur	x9, [x29, #-40]
  2174e4:	strb	w10, [x8, #24]
  2174e8:	str	x9, [x8, #16]
  2174ec:	cbz	x8, 21769c <mount_points_list_get+0x42c>
  2174f0:	ldr	x9, [x19]
  2174f4:	adrp	x24, 205000 <parse_argv.options+0x1a90>
  2174f8:	add	x24, x24, #0x4c8
  2174fc:	str	x9, [x8, #40]
  217500:	cbz	x9, 217508 <mount_points_list_get+0x298>
  217504:	str	x8, [x9, #48]
  217508:	mov	w25, wzr
  21750c:	str	xzr, [x8, #48]
  217510:	str	x8, [x19]
  217514:	b	217410 <mount_points_list_get+0x1a0>
  217518:	mov	w2, #0x9e                  	// #158
  21751c:	b	217558 <mount_points_list_get+0x2e8>
  217520:	mov	w25, w0
  217524:	mov	w0, wzr
  217528:	bl	21aae0 <log_get_max_level_realm@plt>
  21752c:	cmp	w0, #0x4
  217530:	b.lt	2175b0 <mount_points_list_get+0x340>  // b.tstop
  217534:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  217538:	mov	w0, #0x4                   	// #4
  21753c:	mov	w3, #0x8d                  	// #141
  217540:	mov	w1, w25
  217544:	mov	x2, x20
  217548:	mov	x4, x21
  21754c:	add	x5, x5, #0x1d8
  217550:	b	2175a8 <mount_points_list_get+0x338>
  217554:	mov	w2, #0xa2                  	// #162
  217558:	mov	x1, x20
  21755c:	mov	x3, x21
  217560:	bl	21ae50 <log_oom_internal@plt>
  217564:	adrp	x24, 205000 <parse_argv.options+0x1a90>
  217568:	mov	w27, w0
  21756c:	mov	w25, #0x1                   	// #1
  217570:	add	x24, x24, #0x4c8
  217574:	b	217410 <mount_points_list_get+0x1a0>
  217578:	mov	w25, w0
  21757c:	mov	w0, wzr
  217580:	bl	21aae0 <log_get_max_level_realm@plt>
  217584:	cmp	w0, #0x4
  217588:	b.lt	2175b0 <mount_points_list_get+0x340>  // b.tstop
  21758c:	adrp	x5, 203000 <main.dirs-0x548>
  217590:	mov	w0, #0x4                   	// #4
  217594:	mov	w3, #0x93                  	// #147
  217598:	mov	w1, w25
  21759c:	mov	x2, x20
  2175a0:	mov	x4, x21
  2175a4:	add	x5, x5, #0xa75
  2175a8:	mov	x6, x28
  2175ac:	bl	21aaf0 <log_internal_realm@plt>
  2175b0:	adrp	x24, 205000 <parse_argv.options+0x1a90>
  2175b4:	mov	w25, #0x5                   	// #5
  2175b8:	add	x24, x24, #0x4c8
  2175bc:	b	217410 <mount_points_list_get+0x1a0>
  2175c0:	ldur	x0, [x29, #-32]
  2175c4:	bl	2177d4 <fstab_test_yes_no_option>
  2175c8:	eor	w24, w0, #0x1
  2175cc:	tbz	w24, #0, 2174a8 <mount_points_list_get+0x238>
  2175d0:	b	217470 <mount_points_list_get+0x200>
  2175d4:	cmp	w25, #0x4
  2175d8:	b.ne	217644 <mount_points_list_get+0x3d4>  // b.any
  2175dc:	mov	w27, wzr
  2175e0:	b	217644 <mount_points_list_get+0x3d4>
  2175e4:	mov	w20, w0
  2175e8:	mov	w0, wzr
  2175ec:	bl	21aae0 <log_get_max_level_realm@plt>
  2175f0:	cmp	w0, #0x3
  2175f4:	b.lt	217638 <mount_points_list_get+0x3c8>  // b.tstop
  2175f8:	adrp	x8, 204000 <parse_argv.options+0xa90>
  2175fc:	add	x8, x8, #0x81a
  217600:	cmp	x25, #0x0
  217604:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217608:	adrp	x4, 203000 <main.dirs-0x548>
  21760c:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  217610:	csel	x6, x8, x25, eq  // eq = none
  217614:	add	x2, x2, #0xfee
  217618:	add	x4, x4, #0xa5f
  21761c:	add	x5, x5, #0x34f
  217620:	mov	w0, #0x3                   	// #3
  217624:	mov	w3, #0x41                  	// #65
  217628:	mov	w1, w20
  21762c:	bl	21aaf0 <log_internal_realm@plt>
  217630:	mov	w27, w0
  217634:	b	217644 <mount_points_list_get+0x3d4>
  217638:	mov	w8, wzr
  21763c:	neg	w9, w20
  217640:	sub	w27, w8, w9, uxtb
  217644:	sub	x0, x29, #0x10
  217648:	bl	2176dc <mnt_free_iterp>
  21764c:	sub	x0, x29, #0x8
  217650:	bl	2176c0 <mnt_free_tablep>
  217654:	mov	w0, w27
  217658:	ldp	x20, x19, [sp, #176]
  21765c:	ldp	x22, x21, [sp, #160]
  217660:	ldp	x24, x23, [sp, #144]
  217664:	ldp	x26, x25, [sp, #128]
  217668:	ldp	x28, x27, [sp, #112]
  21766c:	ldp	x29, x30, [sp, #96]
  217670:	add	sp, sp, #0xc0
  217674:	ret
  217678:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21767c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217680:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217684:	add	x1, x1, #0x159
  217688:	add	x2, x2, #0xfee
  21768c:	add	x4, x4, #0x22
  217690:	mov	w3, #0x3d                  	// #61
  217694:	mov	w0, wzr
  217698:	bl	21acc0 <log_assert_failed_realm@plt>
  21769c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2176a0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2176a4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2176a8:	add	x1, x1, #0x4e5
  2176ac:	add	x2, x2, #0xfee
  2176b0:	add	x4, x4, #0x22
  2176b4:	mov	w3, #0xa8                  	// #168
  2176b8:	mov	w0, wzr
  2176bc:	bl	21acc0 <log_assert_failed_realm@plt>

00000000002176c0 <mnt_free_tablep>:
  2176c0:	stp	x29, x30, [sp, #-16]!
  2176c4:	ldr	x0, [x0]
  2176c8:	mov	x29, sp
  2176cc:	cbz	x0, 2176d4 <mnt_free_tablep+0x14>
  2176d0:	bl	21aed0 <mnt_free_table@plt>
  2176d4:	ldp	x29, x30, [sp], #16
  2176d8:	ret

00000000002176dc <mnt_free_iterp>:
  2176dc:	stp	x29, x30, [sp, #-16]!
  2176e0:	ldr	x0, [x0]
  2176e4:	mov	x29, sp
  2176e8:	cbz	x0, 2176f0 <mnt_free_iterp+0x14>
  2176ec:	bl	21aee0 <mnt_free_iter@plt>
  2176f0:	ldp	x29, x30, [sp], #16
  2176f4:	ret

00000000002176f8 <libmount_parse>:
  2176f8:	sub	sp, sp, #0x50
  2176fc:	stp	x29, x30, [sp, #16]
  217700:	add	x29, sp, #0x10
  217704:	str	x23, [sp, #32]
  217708:	stp	x22, x21, [sp, #48]
  21770c:	stp	x20, x19, [sp, #64]
  217710:	mov	x19, x2
  217714:	mov	x20, x1
  217718:	mov	x22, x0
  21771c:	str	xzr, [x29, #24]
  217720:	str	xzr, [sp, #8]
  217724:	bl	21aef0 <mnt_new_table@plt>
  217728:	mov	x23, x0
  21772c:	str	x0, [x29, #24]
  217730:	mov	w0, wzr
  217734:	bl	21af00 <mnt_new_iter@plt>
  217738:	mov	w21, #0xfffffff4            	// #-12
  21773c:	str	x0, [sp, #8]
  217740:	cbz	x23, 21777c <libmount_parse+0x84>
  217744:	cbz	x0, 21777c <libmount_parse+0x84>
  217748:	mov	x0, x23
  21774c:	cbz	x22, 2177a8 <libmount_parse+0xb0>
  217750:	mov	x1, x22
  217754:	bl	21af10 <mnt_table_parse_file@plt>
  217758:	mov	w21, w0
  21775c:	tbnz	w0, #31, 21777c <libmount_parse+0x84>
  217760:	ldr	x8, [x29, #24]
  217764:	str	xzr, [x29, #24]
  217768:	mov	w21, wzr
  21776c:	str	x8, [x20]
  217770:	ldr	x8, [sp, #8]
  217774:	str	xzr, [sp, #8]
  217778:	str	x8, [x19]
  21777c:	add	x0, sp, #0x8
  217780:	bl	2176dc <mnt_free_iterp>
  217784:	add	x0, x29, #0x18
  217788:	bl	2176c0 <mnt_free_tablep>
  21778c:	mov	w0, w21
  217790:	ldp	x20, x19, [sp, #64]
  217794:	ldp	x22, x21, [sp, #48]
  217798:	ldr	x23, [sp, #32]
  21779c:	ldp	x29, x30, [sp, #16]
  2177a0:	add	sp, sp, #0x50
  2177a4:	ret
  2177a8:	mov	x1, xzr
  2177ac:	bl	21af20 <mnt_table_parse_mtab@plt>
  2177b0:	mov	w21, w0
  2177b4:	tbz	w0, #31, 217760 <libmount_parse+0x68>
  2177b8:	b	21777c <libmount_parse+0x84>

00000000002177bc <freep>:
  2177bc:	stp	x29, x30, [sp, #-16]!
  2177c0:	ldr	x0, [x0]
  2177c4:	mov	x29, sp
  2177c8:	bl	21ac20 <free@plt>
  2177cc:	ldp	x29, x30, [sp], #16
  2177d0:	ret

00000000002177d4 <fstab_test_yes_no_option>:
  2177d4:	stp	x29, x30, [sp, #-32]!
  2177d8:	str	x19, [sp, #16]
  2177dc:	adrp	x19, 205000 <parse_argv.options+0x1a90>
  2177e0:	mov	x29, sp
  2177e4:	add	x19, x19, #0x4e8
  2177e8:	add	x2, x29, #0x18
  2177ec:	mov	x1, x19
  2177f0:	mov	x3, xzr
  2177f4:	mov	x4, xzr
  2177f8:	bl	21af30 <fstab_filter_options@plt>
  2177fc:	tbnz	w0, #31, 217818 <fstab_test_yes_no_option+0x44>
  217800:	ldr	x8, [x29, #24]
  217804:	cmp	x8, x19
  217808:	ldr	x19, [sp, #16]
  21780c:	cset	w0, eq  // eq = none
  217810:	ldp	x29, x30, [sp], #32
  217814:	ret
  217818:	adrp	x1, 203000 <main.dirs-0x548>
  21781c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217820:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  217824:	add	x1, x1, #0xca9
  217828:	add	x2, x2, #0xbaa
  21782c:	add	x4, x4, #0x5a
  217830:	mov	w3, #0x1c                  	// #28
  217834:	mov	w0, wzr
  217838:	bl	21acc0 <log_assert_failed_realm@plt>

000000000021783c <swap_list_get>:
  21783c:	sub	sp, sp, #0x80
  217840:	stp	x29, x30, [sp, #32]
  217844:	add	x29, sp, #0x20
  217848:	str	x27, [sp, #48]
  21784c:	stp	x26, x25, [sp, #64]
  217850:	stp	x24, x23, [sp, #80]
  217854:	stp	x22, x21, [sp, #96]
  217858:	stp	x20, x19, [sp, #112]
  21785c:	str	xzr, [x29, #24]
  217860:	stur	xzr, [x29, #-8]
  217864:	cbz	x1, 217aa4 <swap_list_get+0x268>
  217868:	mov	x19, x1
  21786c:	mov	x24, x0
  217870:	bl	21aef0 <mnt_new_table@plt>
  217874:	mov	x20, x0
  217878:	str	x0, [x29, #24]
  21787c:	mov	w0, wzr
  217880:	bl	21af00 <mnt_new_iter@plt>
  217884:	stur	x0, [x29, #-8]
  217888:	cbz	x20, 2179f4 <swap_list_get+0x1b8>
  21788c:	mov	x21, x0
  217890:	cbz	x0, 2179f4 <swap_list_get+0x1b8>
  217894:	mov	x0, x20
  217898:	mov	x1, x24
  21789c:	bl	21af40 <mnt_table_parse_swaps@plt>
  2178a0:	cmn	w0, #0x2
  2178a4:	b.eq	2179ec <swap_list_get+0x1b0>  // b.none
  2178a8:	mov	w22, w0
  2178ac:	tbnz	w0, #31, 217a48 <swap_list_get+0x20c>
  2178b0:	adrp	x8, 204000 <parse_argv.options+0xa90>
  2178b4:	add	x8, x8, #0xc37
  2178b8:	cmp	x24, #0x0
  2178bc:	adrp	x22, 204000 <parse_argv.options+0xa90>
  2178c0:	adrp	x23, 205000 <parse_argv.options+0x1a90>
  2178c4:	adrp	x25, 204000 <parse_argv.options+0xa90>
  2178c8:	add	x22, x22, #0xfee
  2178cc:	add	x23, x23, #0x20d
  2178d0:	csel	x24, x8, x24, eq  // eq = none
  2178d4:	add	x25, x25, #0x32f
  2178d8:	add	x2, sp, #0x10
  2178dc:	mov	x0, x20
  2178e0:	mov	x1, x21
  2178e4:	str	xzr, [sp, #8]
  2178e8:	bl	21ade0 <mnt_table_next_fs@plt>
  2178ec:	cmp	w0, #0x1
  2178f0:	b.ne	2178fc <swap_list_get+0xc0>  // b.any
  2178f4:	mov	w27, #0x4                   	// #4
  2178f8:	b	2179d0 <swap_list_get+0x194>
  2178fc:	mov	w27, w0
  217900:	tbnz	w0, #31, 217964 <swap_list_get+0x128>
  217904:	ldr	x0, [sp, #16]
  217908:	bl	21af50 <mnt_fs_get_source@plt>
  21790c:	cbz	x0, 217998 <swap_list_get+0x15c>
  217910:	mov	x27, x0
  217914:	mov	w0, #0x1                   	// #1
  217918:	mov	w1, #0x38                  	// #56
  21791c:	bl	21aeb0 <calloc@plt>
  217920:	str	x0, [sp, #8]
  217924:	cbz	x0, 2179b0 <swap_list_get+0x174>
  217928:	mov	x0, x27
  21792c:	bl	21aec0 <strdup@plt>
  217930:	ldr	x8, [sp, #8]
  217934:	str	x0, [x8]
  217938:	cbz	x0, 2179b8 <swap_list_get+0x17c>
  21793c:	str	xzr, [sp, #8]
  217940:	cbz	x8, 217ac8 <swap_list_get+0x28c>
  217944:	ldr	x9, [x19]
  217948:	str	x9, [x8, #40]
  21794c:	cbz	x9, 217954 <swap_list_get+0x118>
  217950:	str	x8, [x9, #48]
  217954:	mov	w27, wzr
  217958:	str	xzr, [x8, #48]
  21795c:	str	x8, [x19]
  217960:	b	2179d0 <swap_list_get+0x194>
  217964:	mov	w0, wzr
  217968:	bl	21aae0 <log_get_max_level_realm@plt>
  21796c:	cmp	w0, #0x3
  217970:	b.lt	2179a0 <swap_list_get+0x164>  // b.tstop
  217974:	mov	w0, #0x3                   	// #3
  217978:	mov	w3, #0xc9                  	// #201
  21797c:	mov	w1, w27
  217980:	mov	x2, x22
  217984:	mov	x4, x23
  217988:	mov	x5, x25
  21798c:	mov	x6, x24
  217990:	bl	21aaf0 <log_internal_realm@plt>
  217994:	b	2179c8 <swap_list_get+0x18c>
  217998:	mov	w27, #0x5                   	// #5
  21799c:	b	2179d0 <swap_list_get+0x194>
  2179a0:	mov	w8, wzr
  2179a4:	neg	w9, w27
  2179a8:	sub	w26, w8, w9, uxtb
  2179ac:	b	2179cc <swap_list_get+0x190>
  2179b0:	mov	w2, #0xd1                  	// #209
  2179b4:	b	2179bc <swap_list_get+0x180>
  2179b8:	mov	w2, #0xd5                  	// #213
  2179bc:	mov	x1, x22
  2179c0:	mov	x3, x23
  2179c4:	bl	21ae50 <log_oom_internal@plt>
  2179c8:	mov	w26, w0
  2179cc:	mov	w27, #0x1                   	// #1
  2179d0:	add	x0, sp, #0x8
  2179d4:	bl	2177bc <freep>
  2179d8:	cbz	w27, 2178d8 <swap_list_get+0x9c>
  2179dc:	cmp	w27, #0x5
  2179e0:	b.eq	2178d8 <swap_list_get+0x9c>  // b.none
  2179e4:	cmp	w27, #0x4
  2179e8:	b.ne	217a14 <swap_list_get+0x1d8>  // b.any
  2179ec:	mov	w26, wzr
  2179f0:	b	217a14 <swap_list_get+0x1d8>
  2179f4:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2179f8:	adrp	x3, 205000 <parse_argv.options+0x1a90>
  2179fc:	add	x1, x1, #0xfee
  217a00:	add	x3, x3, #0x20d
  217a04:	mov	w2, #0xb8                  	// #184
  217a08:	mov	w0, wzr
  217a0c:	bl	21ae50 <log_oom_internal@plt>
  217a10:	mov	w26, w0
  217a14:	sub	x0, x29, #0x8
  217a18:	bl	2176dc <mnt_free_iterp>
  217a1c:	add	x0, x29, #0x18
  217a20:	bl	2176c0 <mnt_free_tablep>
  217a24:	mov	w0, w26
  217a28:	ldp	x20, x19, [sp, #112]
  217a2c:	ldp	x22, x21, [sp, #96]
  217a30:	ldp	x24, x23, [sp, #80]
  217a34:	ldp	x26, x25, [sp, #64]
  217a38:	ldr	x27, [sp, #48]
  217a3c:	ldp	x29, x30, [sp, #32]
  217a40:	add	sp, sp, #0x80
  217a44:	ret
  217a48:	mov	w0, wzr
  217a4c:	bl	21aae0 <log_get_max_level_realm@plt>
  217a50:	cmp	w0, #0x3
  217a54:	b.lt	217a94 <swap_list_get+0x258>  // b.tstop
  217a58:	adrp	x8, 204000 <parse_argv.options+0xa90>
  217a5c:	add	x8, x8, #0xc37
  217a60:	cmp	x24, #0x0
  217a64:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217a68:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  217a6c:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  217a70:	csel	x6, x8, x24, eq  // eq = none
  217a74:	add	x2, x2, #0xfee
  217a78:	add	x4, x4, #0x20d
  217a7c:	add	x5, x5, #0x34f
  217a80:	mov	w0, #0x3                   	// #3
  217a84:	mov	w3, #0xbe                  	// #190
  217a88:	mov	w1, w22
  217a8c:	bl	21aaf0 <log_internal_realm@plt>
  217a90:	b	217a10 <swap_list_get+0x1d4>
  217a94:	mov	w8, wzr
  217a98:	neg	w9, w22
  217a9c:	sub	w26, w8, w9, uxtb
  217aa0:	b	217a14 <swap_list_get+0x1d8>
  217aa4:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217aa8:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217aac:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217ab0:	add	x1, x1, #0x159
  217ab4:	add	x2, x2, #0xfee
  217ab8:	add	x4, x4, #0x62c
  217abc:	mov	w3, #0xb3                  	// #179
  217ac0:	mov	w0, wzr
  217ac4:	bl	21acc0 <log_assert_failed_realm@plt>
  217ac8:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217acc:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217ad0:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217ad4:	add	x1, x1, #0x4e5
  217ad8:	add	x2, x2, #0xfee
  217adc:	add	x4, x4, #0x62c
  217ae0:	mov	w3, #0xd7                  	// #215
  217ae4:	mov	w0, wzr
  217ae8:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217aec <umount_all>:
  217aec:	stp	x29, x30, [sp, #-48]!
  217af0:	str	x21, [sp, #16]
  217af4:	stp	x20, x19, [sp, #32]
  217af8:	mov	x29, sp
  217afc:	cbz	x0, 217b4c <umount_all+0x60>
  217b00:	mov	x20, x0
  217b04:	add	x0, x29, #0x1c
  217b08:	mov	w19, w1
  217b0c:	strb	wzr, [x29, #28]
  217b10:	bl	217b6c <umount_all_once>
  217b14:	ldrb	w8, [x29, #28]
  217b18:	cbz	w8, 217b3c <umount_all+0x50>
  217b1c:	mov	w21, #0x1                   	// #1
  217b20:	add	x0, x29, #0x1c
  217b24:	mov	w1, w19
  217b28:	strb	w21, [x20]
  217b2c:	strb	wzr, [x29, #28]
  217b30:	bl	217b6c <umount_all_once>
  217b34:	ldrb	w8, [x29, #28]
  217b38:	cbnz	w8, 217b20 <umount_all+0x34>
  217b3c:	ldp	x20, x19, [sp, #32]
  217b40:	ldr	x21, [sp, #16]
  217b44:	ldp	x29, x30, [sp], #48
  217b48:	ret
  217b4c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217b50:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217b54:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217b58:	add	x1, x1, #0x952
  217b5c:	add	x2, x2, #0xfee
  217b60:	add	x4, x4, #0xcf6
  217b64:	mov	w3, #0x276                 	// #630
  217b68:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217b6c <umount_all_once>:
  217b6c:	stp	x29, x30, [sp, #-48]!
  217b70:	str	x21, [sp, #16]
  217b74:	stp	x20, x19, [sp, #32]
  217b78:	mov	x29, sp
  217b7c:	cbz	x0, 217bcc <umount_all_once+0x60>
  217b80:	mov	w19, w1
  217b84:	mov	x20, x0
  217b88:	add	x1, x29, #0x18
  217b8c:	mov	x0, xzr
  217b90:	str	xzr, [x29, #24]
  217b94:	bl	217270 <mount_points_list_get>
  217b98:	tbnz	w0, #31, 217bac <umount_all_once+0x40>
  217b9c:	add	x0, x29, #0x18
  217ba0:	mov	x1, x20
  217ba4:	mov	w2, w19
  217ba8:	bl	218524 <mount_points_list_umount>
  217bac:	mov	w21, w0
  217bb0:	add	x0, x29, #0x18
  217bb4:	bl	217138 <mount_points_list_free>
  217bb8:	mov	w0, w21
  217bbc:	ldp	x20, x19, [sp, #32]
  217bc0:	ldr	x21, [sp, #16]
  217bc4:	ldp	x29, x30, [sp], #48
  217bc8:	ret
  217bcc:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217bd0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217bd4:	adrp	x4, 203000 <main.dirs-0x548>
  217bd8:	add	x1, x1, #0x952
  217bdc:	add	x2, x2, #0xfee
  217be0:	add	x4, x4, #0x77e
  217be4:	mov	w3, #0x268                 	// #616
  217be8:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217bec <swapoff_all>:
  217bec:	sub	sp, sp, #0x30
  217bf0:	stp	x29, x30, [sp, #16]
  217bf4:	stp	x20, x19, [sp, #32]
  217bf8:	add	x29, sp, #0x10
  217bfc:	cbz	x0, 217c44 <swapoff_all+0x58>
  217c00:	mov	x19, x0
  217c04:	add	x1, sp, #0x8
  217c08:	mov	x0, xzr
  217c0c:	str	xzr, [sp, #8]
  217c10:	bl	21783c <swap_list_get>
  217c14:	tbnz	w0, #31, 217c24 <swapoff_all+0x38>
  217c18:	add	x0, sp, #0x8
  217c1c:	mov	x1, x19
  217c20:	bl	217c64 <swap_points_list_off>
  217c24:	mov	w20, w0
  217c28:	add	x0, sp, #0x8
  217c2c:	bl	217138 <mount_points_list_free>
  217c30:	mov	w0, w20
  217c34:	ldp	x20, x19, [sp, #32]
  217c38:	ldp	x29, x30, [sp, #16]
  217c3c:	add	sp, sp, #0x30
  217c40:	ret
  217c44:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217c48:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217c4c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217c50:	add	x1, x1, #0x952
  217c54:	add	x2, x2, #0xfee
  217c58:	add	x4, x4, #0x65b
  217c5c:	mov	w3, #0x28a                 	// #650
  217c60:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217c64 <swap_points_list_off>:
  217c64:	stp	x29, x30, [sp, #-96]!
  217c68:	stp	x28, x27, [sp, #16]
  217c6c:	stp	x26, x25, [sp, #32]
  217c70:	stp	x24, x23, [sp, #48]
  217c74:	stp	x22, x21, [sp, #64]
  217c78:	stp	x20, x19, [sp, #80]
  217c7c:	mov	x29, sp
  217c80:	cbz	x0, 217d88 <swap_points_list_off+0x124>
  217c84:	mov	x19, x1
  217c88:	cbz	x1, 217da8 <swap_points_list_off+0x144>
  217c8c:	ldr	x26, [x0]
  217c90:	mov	x20, x0
  217c94:	cbz	x26, 217d64 <swap_points_list_off+0x100>
  217c98:	adrp	x22, 204000 <parse_argv.options+0xa90>
  217c9c:	adrp	x23, 204000 <parse_argv.options+0xa90>
  217ca0:	adrp	x24, 204000 <parse_argv.options+0xa90>
  217ca4:	adrp	x25, 204000 <parse_argv.options+0xa90>
  217ca8:	mov	w21, wzr
  217cac:	add	x22, x22, #0xfee
  217cb0:	add	x23, x23, #0x280
  217cb4:	add	x24, x24, #0x82f
  217cb8:	mov	w27, #0x1                   	// #1
  217cbc:	add	x25, x25, #0x41a
  217cc0:	b	217cd0 <swap_points_list_off+0x6c>
  217cc4:	add	w21, w21, #0x1
  217cc8:	mov	x26, x28
  217ccc:	cbz	x28, 217d68 <swap_points_list_off+0x104>
  217cd0:	ldr	x28, [x26, #40]
  217cd4:	mov	w0, wzr
  217cd8:	bl	21aae0 <log_get_max_level_realm@plt>
  217cdc:	cmp	w0, #0x6
  217ce0:	b.lt	217d04 <swap_points_list_off+0xa0>  // b.tstop
  217ce4:	ldr	x6, [x26]
  217ce8:	mov	w0, #0x6                   	// #6
  217cec:	mov	w3, #0x210                 	// #528
  217cf0:	mov	w1, wzr
  217cf4:	mov	x2, x22
  217cf8:	mov	x4, x23
  217cfc:	mov	x5, x24
  217d00:	bl	21aaf0 <log_internal_realm@plt>
  217d04:	ldr	x0, [x26]
  217d08:	bl	21af60 <swapoff@plt>
  217d0c:	cbz	w0, 217d48 <swap_points_list_off+0xe4>
  217d10:	mov	w0, wzr
  217d14:	bl	21aae0 <log_get_max_level_realm@plt>
  217d18:	cmp	w0, #0x4
  217d1c:	b.lt	217cc4 <swap_points_list_off+0x60>  // b.tstop
  217d20:	bl	21abb0 <__errno_location@plt>
  217d24:	ldr	w1, [x0]
  217d28:	ldr	x6, [x26]
  217d2c:	mov	w0, #0x4                   	// #4
  217d30:	mov	w3, #0x215                 	// #533
  217d34:	mov	x2, x22
  217d38:	mov	x4, x23
  217d3c:	mov	x5, x25
  217d40:	bl	21aaf0 <log_internal_realm@plt>
  217d44:	b	217cc4 <swap_points_list_off+0x60>
  217d48:	mov	x0, x20
  217d4c:	mov	x1, x26
  217d50:	strb	w27, [x19]
  217d54:	bl	217190 <mount_point_free>
  217d58:	mov	x26, x28
  217d5c:	cbnz	x28, 217cd0 <swap_points_list_off+0x6c>
  217d60:	b	217d68 <swap_points_list_off+0x104>
  217d64:	mov	w21, wzr
  217d68:	mov	w0, w21
  217d6c:	ldp	x20, x19, [sp, #80]
  217d70:	ldp	x22, x21, [sp, #64]
  217d74:	ldp	x24, x23, [sp, #48]
  217d78:	ldp	x26, x25, [sp, #32]
  217d7c:	ldp	x28, x27, [sp, #16]
  217d80:	ldp	x29, x30, [sp], #96
  217d84:	ret
  217d88:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217d8c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217d90:	adrp	x4, 203000 <main.dirs-0x548>
  217d94:	add	x1, x1, #0x159
  217d98:	add	x2, x2, #0xfee
  217d9c:	add	x4, x4, #0xf52
  217da0:	mov	w3, #0x20c                 	// #524
  217da4:	bl	21acc0 <log_assert_failed_realm@plt>
  217da8:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217dac:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217db0:	adrp	x4, 203000 <main.dirs-0x548>
  217db4:	add	x1, x1, #0x952
  217db8:	add	x2, x2, #0xfee
  217dbc:	add	x4, x4, #0xf52
  217dc0:	mov	w3, #0x20d                 	// #525
  217dc4:	mov	w0, wzr
  217dc8:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217dcc <loopback_detach_all>:
  217dcc:	stp	x29, x30, [sp, #-48]!
  217dd0:	str	x21, [sp, #16]
  217dd4:	stp	x20, x19, [sp, #32]
  217dd8:	mov	x29, sp
  217ddc:	cbz	x0, 217e28 <loopback_detach_all+0x5c>
  217de0:	mov	x20, x0
  217de4:	add	x0, x29, #0x18
  217de8:	mov	w19, w1
  217dec:	str	xzr, [x29, #24]
  217df0:	bl	217e48 <loopback_list_get>
  217df4:	tbnz	w0, #31, 217e08 <loopback_detach_all+0x3c>
  217df8:	add	x0, x29, #0x18
  217dfc:	mov	x1, x20
  217e00:	mov	w2, w19
  217e04:	bl	217fb4 <loopback_points_list_detach>
  217e08:	mov	w21, w0
  217e0c:	add	x0, x29, #0x18
  217e10:	bl	217138 <mount_points_list_free>
  217e14:	mov	w0, w21
  217e18:	ldp	x20, x19, [sp, #32]
  217e1c:	ldr	x21, [sp, #16]
  217e20:	ldp	x29, x30, [sp], #48
  217e24:	ret
  217e28:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217e2c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217e30:	adrp	x4, 203000 <main.dirs-0x548>
  217e34:	add	x1, x1, #0x952
  217e38:	add	x2, x2, #0xfee
  217e3c:	add	x4, x4, #0xaa5
  217e40:	mov	w3, #0x299                 	// #665
  217e44:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217e48 <loopback_list_get>:
  217e48:	sub	sp, sp, #0x40
  217e4c:	stp	x29, x30, [sp, #32]
  217e50:	add	x29, sp, #0x20
  217e54:	stp	x20, x19, [sp, #48]
  217e58:	stur	xzr, [x29, #-8]
  217e5c:	cbz	x0, 217f94 <loopback_list_get+0x14c>
  217e60:	mov	x19, x0
  217e64:	sub	x0, x29, #0x8
  217e68:	bl	21af70 <sd_device_enumerator_new@plt>
  217e6c:	tbnz	w0, #31, 217f74 <loopback_list_get+0x12c>
  217e70:	ldur	x0, [x29, #-8]
  217e74:	bl	21af80 <sd_device_enumerator_allow_uninitialized@plt>
  217e78:	tbnz	w0, #31, 217f74 <loopback_list_get+0x12c>
  217e7c:	ldur	x0, [x29, #-8]
  217e80:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  217e84:	add	x1, x1, #0xf4
  217e88:	mov	w2, #0x1                   	// #1
  217e8c:	bl	21af90 <sd_device_enumerator_add_match_subsystem@plt>
  217e90:	tbnz	w0, #31, 217f74 <loopback_list_get+0x12c>
  217e94:	ldur	x0, [x29, #-8]
  217e98:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  217e9c:	add	x1, x1, #0xfa
  217ea0:	bl	21afa0 <sd_device_enumerator_add_match_sysname@plt>
  217ea4:	tbnz	w0, #31, 217f74 <loopback_list_get+0x12c>
  217ea8:	ldur	x0, [x29, #-8]
  217eac:	adrp	x1, 203000 <main.dirs-0x548>
  217eb0:	add	x1, x1, #0x858
  217eb4:	mov	w3, #0x1                   	// #1
  217eb8:	mov	x2, xzr
  217ebc:	bl	21afb0 <sd_device_enumerator_add_match_sysattr@plt>
  217ec0:	tbnz	w0, #31, 217f74 <loopback_list_get+0x12c>
  217ec4:	ldur	x0, [x29, #-8]
  217ec8:	bl	21afc0 <sd_device_enumerator_get_device_first@plt>
  217ecc:	cbnz	x0, 217ee8 <loopback_list_get+0xa0>
  217ed0:	mov	w20, wzr
  217ed4:	b	217f78 <loopback_list_get+0x130>
  217ed8:	ldur	x0, [x29, #-8]
  217edc:	bl	21afd0 <sd_device_enumerator_get_device_next@plt>
  217ee0:	mov	w20, wzr
  217ee4:	cbz	x0, 217f78 <loopback_list_get+0x130>
  217ee8:	add	x1, sp, #0x8
  217eec:	str	xzr, [sp, #16]
  217ef0:	bl	21afe0 <sd_device_get_devname@plt>
  217ef4:	tbnz	w0, #31, 217f54 <loopback_list_get+0x10c>
  217ef8:	ldr	x0, [sp, #8]
  217efc:	bl	21aec0 <strdup@plt>
  217f00:	str	x0, [sp, #16]
  217f04:	cbz	x0, 217f4c <loopback_list_get+0x104>
  217f08:	mov	x20, x0
  217f0c:	bl	218bcc <malloc_multiply>
  217f10:	cbz	x0, 217f4c <loopback_list_get+0x104>
  217f14:	movi	v0.2d, #0x0
  217f18:	str	xzr, [sp, #16]
  217f1c:	str	x20, [x0]
  217f20:	stur	q0, [x0, #8]
  217f24:	stur	q0, [x0, #24]
  217f28:	stur	q0, [x0, #40]
  217f2c:	ldr	x8, [x19]
  217f30:	str	x8, [x0, #40]
  217f34:	cbz	x8, 217f3c <loopback_list_get+0xf4>
  217f38:	str	x0, [x8, #48]
  217f3c:	mov	w20, wzr
  217f40:	str	xzr, [x0, #48]
  217f44:	str	x0, [x19]
  217f48:	b	217f58 <loopback_list_get+0x110>
  217f4c:	mov	w20, #0x1                   	// #1
  217f50:	b	217f58 <loopback_list_get+0x110>
  217f54:	mov	w20, #0x6                   	// #6
  217f58:	add	x0, sp, #0x10
  217f5c:	bl	2177bc <freep>
  217f60:	cmp	w20, #0x6
  217f64:	b.eq	217ed8 <loopback_list_get+0x90>  // b.none
  217f68:	cbz	w20, 217ed8 <loopback_list_get+0x90>
  217f6c:	mov	w20, #0xfffffff4            	// #-12
  217f70:	b	217f78 <loopback_list_get+0x130>
  217f74:	mov	w20, w0
  217f78:	sub	x0, x29, #0x8
  217f7c:	bl	218bb0 <sd_device_enumerator_unrefp>
  217f80:	mov	w0, w20
  217f84:	ldp	x20, x19, [sp, #48]
  217f88:	ldp	x29, x30, [sp, #32]
  217f8c:	add	sp, sp, #0x40
  217f90:	ret
  217f94:	adrp	x1, 204000 <parse_argv.options+0xa90>
  217f98:	adrp	x2, 204000 <parse_argv.options+0xa90>
  217f9c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  217fa0:	add	x1, x1, #0x159
  217fa4:	add	x2, x2, #0xfee
  217fa8:	add	x4, x4, #0x295
  217fac:	mov	w3, #0xe2                  	// #226
  217fb0:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000217fb4 <loopback_points_list_detach>:
  217fb4:	sub	sp, sp, #0x170
  217fb8:	stp	x29, x30, [sp, #272]
  217fbc:	stp	x28, x27, [sp, #288]
  217fc0:	stp	x26, x25, [sp, #304]
  217fc4:	stp	x24, x23, [sp, #320]
  217fc8:	stp	x22, x21, [sp, #336]
  217fcc:	stp	x20, x19, [sp, #352]
  217fd0:	add	x29, sp, #0x110
  217fd4:	str	w2, [sp, #4]
  217fd8:	cbz	x0, 21812c <loopback_points_list_detach+0x178>
  217fdc:	mov	x20, x1
  217fe0:	cbz	x1, 21814c <loopback_points_list_detach+0x198>
  217fe4:	mov	x21, x0
  217fe8:	adrp	x0, 203000 <main.dirs-0x548>
  217fec:	add	x0, x0, #0x97f
  217ff0:	add	x1, sp, #0x88
  217ff4:	bl	21a998 <lstat64>
  217ff8:	ldr	x27, [x21]
  217ffc:	cbz	x27, 218104 <loopback_points_list_detach+0x150>
  218000:	ldr	w8, [sp, #4]
  218004:	adrp	x24, 204000 <parse_argv.options+0xa90>
  218008:	adrp	x25, 204000 <parse_argv.options+0xa90>
  21800c:	adrp	x26, 203000 <main.dirs-0x548>
  218010:	mov	w23, w0
  218014:	mov	w22, wzr
  218018:	and	w19, w8, #0x7
  21801c:	add	x24, x24, #0xfee
  218020:	add	x25, x25, #0xd49
  218024:	add	x26, x26, #0x9be
  218028:	b	218034 <loopback_points_list_detach+0x80>
  21802c:	add	w22, w22, #0x1
  218030:	cbz	x27, 218108 <loopback_points_list_detach+0x154>
  218034:	mov	x28, x27
  218038:	ldr	x27, [x27, #40]
  21803c:	tbnz	w23, #31, 21806c <loopback_points_list_detach+0xb8>
  218040:	ldr	x0, [sp, #136]
  218044:	bl	21aff0 <gnu_dev_major@plt>
  218048:	cbz	w0, 21806c <loopback_points_list_detach+0xb8>
  21804c:	ldr	x0, [x28]
  218050:	add	x1, sp, #0x8
  218054:	bl	21a998 <lstat64>
  218058:	tbnz	w0, #31, 21806c <loopback_points_list_detach+0xb8>
  21805c:	ldr	x8, [sp, #136]
  218060:	ldr	x9, [sp, #40]
  218064:	cmp	x8, x9
  218068:	b.eq	21802c <loopback_points_list_detach+0x78>  // b.none
  21806c:	mov	w0, wzr
  218070:	bl	21aae0 <log_get_max_level_realm@plt>
  218074:	cmp	w0, #0x6
  218078:	b.lt	21809c <loopback_points_list_detach+0xe8>  // b.tstop
  21807c:	ldr	x6, [x28]
  218080:	mov	w0, #0x6                   	// #6
  218084:	mov	w3, #0x233                 	// #563
  218088:	mov	w1, wzr
  21808c:	mov	x2, x24
  218090:	mov	x4, x25
  218094:	mov	x5, x26
  218098:	bl	21aaf0 <log_internal_realm@plt>
  21809c:	ldr	x0, [x28]
  2180a0:	bl	218be4 <delete_loopback>
  2180a4:	tbnz	w0, #31, 2180c8 <loopback_points_list_detach+0x114>
  2180a8:	cbz	w0, 2180b4 <loopback_points_list_detach+0x100>
  2180ac:	mov	w8, #0x1                   	// #1
  2180b0:	strb	w8, [x20]
  2180b4:	mov	x0, x21
  2180b8:	mov	x1, x28
  2180bc:	bl	217190 <mount_point_free>
  2180c0:	cbnz	x27, 218034 <loopback_points_list_detach+0x80>
  2180c4:	b	218108 <loopback_points_list_detach+0x154>
  2180c8:	mov	w0, wzr
  2180cc:	bl	21aae0 <log_get_max_level_realm@plt>
  2180d0:	cmp	w0, w19
  2180d4:	b.lt	21802c <loopback_points_list_detach+0x78>  // b.tstop
  2180d8:	bl	21abb0 <__errno_location@plt>
  2180dc:	ldr	w1, [x0]
  2180e0:	ldr	x6, [x28]
  2180e4:	ldr	w0, [sp, #4]
  2180e8:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2180ec:	mov	w3, #0x23b                 	// #571
  2180f0:	mov	x2, x24
  2180f4:	mov	x4, x25
  2180f8:	add	x5, x5, #0x43b
  2180fc:	bl	21aaf0 <log_internal_realm@plt>
  218100:	b	21802c <loopback_points_list_detach+0x78>
  218104:	mov	w22, wzr
  218108:	mov	w0, w22
  21810c:	ldp	x20, x19, [sp, #352]
  218110:	ldp	x22, x21, [sp, #336]
  218114:	ldp	x24, x23, [sp, #320]
  218118:	ldp	x26, x25, [sp, #304]
  21811c:	ldp	x28, x27, [sp, #288]
  218120:	ldp	x29, x30, [sp, #272]
  218124:	add	sp, sp, #0x170
  218128:	ret
  21812c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218130:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218134:	adrp	x4, 203000 <main.dirs-0x548>
  218138:	add	x1, x1, #0x159
  21813c:	add	x2, x2, #0xfee
  218140:	add	x4, x4, #0x981
  218144:	mov	w3, #0x222                 	// #546
  218148:	bl	21acc0 <log_assert_failed_realm@plt>
  21814c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218150:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218154:	adrp	x4, 203000 <main.dirs-0x548>
  218158:	add	x1, x1, #0x952
  21815c:	add	x2, x2, #0xfee
  218160:	add	x4, x4, #0x981
  218164:	mov	w3, #0x223                 	// #547
  218168:	mov	w0, wzr
  21816c:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218170 <dm_detach_all>:
  218170:	stp	x29, x30, [sp, #-48]!
  218174:	str	x21, [sp, #16]
  218178:	stp	x20, x19, [sp, #32]
  21817c:	mov	x29, sp
  218180:	cbz	x0, 2181cc <dm_detach_all+0x5c>
  218184:	mov	x20, x0
  218188:	add	x0, x29, #0x18
  21818c:	mov	w19, w1
  218190:	str	xzr, [x29, #24]
  218194:	bl	2181ec <dm_list_get>
  218198:	tbnz	w0, #31, 2181ac <dm_detach_all+0x3c>
  21819c:	add	x0, x29, #0x18
  2181a0:	mov	x1, x20
  2181a4:	mov	w2, w19
  2181a8:	bl	218358 <dm_points_list_detach>
  2181ac:	mov	w21, w0
  2181b0:	add	x0, x29, #0x18
  2181b4:	bl	217138 <mount_points_list_free>
  2181b8:	mov	w0, w21
  2181bc:	ldp	x20, x19, [sp, #32]
  2181c0:	ldr	x21, [sp, #16]
  2181c4:	ldp	x29, x30, [sp], #48
  2181c8:	ret
  2181cc:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2181d0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2181d4:	adrp	x4, 203000 <main.dirs-0x548>
  2181d8:	add	x1, x1, #0x952
  2181dc:	add	x2, x2, #0xfee
  2181e0:	add	x4, x4, #0x95f
  2181e4:	mov	w3, #0x2a8                 	// #680
  2181e8:	bl	21acc0 <log_assert_failed_realm@plt>

00000000002181ec <dm_list_get>:
  2181ec:	sub	sp, sp, #0x50
  2181f0:	stp	x29, x30, [sp, #48]
  2181f4:	add	x29, sp, #0x30
  2181f8:	stp	x20, x19, [sp, #64]
  2181fc:	stur	xzr, [x29, #-8]
  218200:	cbz	x0, 218338 <dm_list_get+0x14c>
  218204:	mov	x19, x0
  218208:	sub	x0, x29, #0x8
  21820c:	bl	21af70 <sd_device_enumerator_new@plt>
  218210:	tbnz	w0, #31, 218318 <dm_list_get+0x12c>
  218214:	ldur	x0, [x29, #-8]
  218218:	bl	21af80 <sd_device_enumerator_allow_uninitialized@plt>
  21821c:	tbnz	w0, #31, 218318 <dm_list_get+0x12c>
  218220:	ldur	x0, [x29, #-8]
  218224:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  218228:	add	x1, x1, #0xf4
  21822c:	mov	w2, #0x1                   	// #1
  218230:	bl	21af90 <sd_device_enumerator_add_match_subsystem@plt>
  218234:	tbnz	w0, #31, 218318 <dm_list_get+0x12c>
  218238:	ldur	x0, [x29, #-8]
  21823c:	adrp	x1, 203000 <main.dirs-0x548>
  218240:	add	x1, x1, #0xbe7
  218244:	bl	21afa0 <sd_device_enumerator_add_match_sysname@plt>
  218248:	tbnz	w0, #31, 218318 <dm_list_get+0x12c>
  21824c:	ldur	x0, [x29, #-8]
  218250:	bl	21afc0 <sd_device_enumerator_get_device_first@plt>
  218254:	b	218260 <dm_list_get+0x74>
  218258:	ldur	x0, [x29, #-8]
  21825c:	bl	21afd0 <sd_device_enumerator_get_device_next@plt>
  218260:	mov	x20, x0
  218264:	cbz	x0, 21831c <dm_list_get+0x130>
  218268:	add	x1, sp, #0x10
  21826c:	mov	x0, x20
  218270:	stur	xzr, [x29, #-16]
  218274:	bl	21b000 <sd_device_get_devnum@plt>
  218278:	tbnz	w0, #31, 2182f0 <dm_list_get+0x104>
  21827c:	add	x1, sp, #0x18
  218280:	mov	x0, x20
  218284:	bl	21afe0 <sd_device_get_devname@plt>
  218288:	tbnz	w0, #31, 2182f0 <dm_list_get+0x104>
  21828c:	ldr	x0, [sp, #24]
  218290:	bl	21aec0 <strdup@plt>
  218294:	stur	x0, [x29, #-16]
  218298:	cbz	x0, 2182f8 <dm_list_get+0x10c>
  21829c:	bl	218bcc <malloc_multiply>
  2182a0:	cbz	x0, 2182f8 <dm_list_get+0x10c>
  2182a4:	ldur	x8, [x29, #-16]
  2182a8:	ldr	w10, [sp, #8]
  2182ac:	ldur	w11, [sp, #11]
  2182b0:	stur	xzr, [x29, #-16]
  2182b4:	stp	xzr, xzr, [x0, #8]
  2182b8:	strb	wzr, [x0, #24]
  2182bc:	stp	xzr, xzr, [x0, #40]
  2182c0:	str	x8, [x0]
  2182c4:	str	w11, [x0, #28]
  2182c8:	stur	w10, [x0, #25]
  2182cc:	ldr	x9, [sp, #16]
  2182d0:	ldr	x8, [x19]
  2182d4:	stp	x9, x8, [x0, #32]
  2182d8:	cbz	x8, 2182e0 <dm_list_get+0xf4>
  2182dc:	str	x0, [x8, #48]
  2182e0:	mov	w20, wzr
  2182e4:	str	xzr, [x0, #48]
  2182e8:	str	x0, [x19]
  2182ec:	b	2182fc <dm_list_get+0x110>
  2182f0:	mov	w20, #0x6                   	// #6
  2182f4:	b	2182fc <dm_list_get+0x110>
  2182f8:	mov	w20, #0x1                   	// #1
  2182fc:	sub	x0, x29, #0x10
  218300:	bl	2177bc <freep>
  218304:	cmp	w20, #0x6
  218308:	b.eq	218258 <dm_list_get+0x6c>  // b.none
  21830c:	cbz	w20, 218258 <dm_list_get+0x6c>
  218310:	mov	w20, #0xfffffff4            	// #-12
  218314:	b	21831c <dm_list_get+0x130>
  218318:	mov	w20, w0
  21831c:	sub	x0, x29, #0x8
  218320:	bl	218bb0 <sd_device_enumerator_unrefp>
  218324:	mov	w0, w20
  218328:	ldp	x20, x19, [sp, #64]
  21832c:	ldp	x29, x30, [sp, #48]
  218330:	add	sp, sp, #0x50
  218334:	ret
  218338:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21833c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218340:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218344:	add	x1, x1, #0x159
  218348:	add	x2, x2, #0xfee
  21834c:	add	x4, x4, #0x59
  218350:	mov	w3, #0x117                 	// #279
  218354:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218358 <dm_points_list_detach>:
  218358:	sub	sp, sp, #0x70
  21835c:	stp	x29, x30, [sp, #16]
  218360:	stp	x28, x27, [sp, #32]
  218364:	stp	x26, x25, [sp, #48]
  218368:	stp	x24, x23, [sp, #64]
  21836c:	stp	x22, x21, [sp, #80]
  218370:	stp	x20, x19, [sp, #96]
  218374:	add	x29, sp, #0x10
  218378:	str	w2, [sp, #4]
  21837c:	cbz	x0, 2184e0 <dm_points_list_detach+0x188>
  218380:	mov	x20, x1
  218384:	cbz	x1, 218500 <dm_points_list_detach+0x1a8>
  218388:	mov	x21, x0
  21838c:	adrp	x0, 203000 <main.dirs-0x548>
  218390:	add	x0, x0, #0x97f
  218394:	add	x1, sp, #0x8
  218398:	bl	21b010 <get_block_device@plt>
  21839c:	cmp	w0, #0x0
  2183a0:	b.le	2184ac <dm_points_list_detach+0x154>
  2183a4:	ldr	x19, [x21]
  2183a8:	cbz	x19, 2184b8 <dm_points_list_detach+0x160>
  2183ac:	ldr	w8, [sp, #4]
  2183b0:	adrp	x23, 204000 <parse_argv.options+0xa90>
  2183b4:	adrp	x24, 205000 <parse_argv.options+0x1a90>
  2183b8:	mov	w22, wzr
  2183bc:	and	w25, w8, #0x7
  2183c0:	add	x23, x23, #0xfee
  2183c4:	add	x24, x24, #0x409
  2183c8:	b	2183d4 <dm_points_list_detach+0x7c>
  2183cc:	add	w22, w22, #0x1
  2183d0:	cbz	x19, 2184bc <dm_points_list_detach+0x164>
  2183d4:	ldr	x28, [sp, #8]
  2183d8:	mov	x27, x19
  2183dc:	ldr	x19, [x19, #40]
  2183e0:	mov	x0, x28
  2183e4:	bl	21aff0 <gnu_dev_major@plt>
  2183e8:	cbz	w0, 2183f8 <dm_points_list_detach+0xa0>
  2183ec:	ldr	x8, [x27, #32]
  2183f0:	cmp	x28, x8
  2183f4:	b.eq	2183cc <dm_points_list_detach+0x74>  // b.none
  2183f8:	mov	w0, wzr
  2183fc:	bl	21aae0 <log_get_max_level_realm@plt>
  218400:	cmp	w0, #0x6
  218404:	b.lt	218448 <dm_points_list_detach+0xf0>  // b.tstop
  218408:	ldr	x28, [x27, #32]
  21840c:	mov	x0, x28
  218410:	bl	21aff0 <gnu_dev_major@plt>
  218414:	mov	w26, w0
  218418:	mov	x0, x28
  21841c:	bl	21b020 <gnu_dev_minor@plt>
  218420:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218424:	mov	w7, w0
  218428:	mov	w0, #0x6                   	// #6
  21842c:	mov	w3, #0x256                 	// #598
  218430:	mov	w1, wzr
  218434:	mov	x2, x23
  218438:	mov	x4, x24
  21843c:	add	x5, x5, #0x95a
  218440:	mov	w6, w26
  218444:	bl	21aaf0 <log_internal_realm@plt>
  218448:	ldr	x0, [x27, #32]
  21844c:	bl	218c94 <delete_dm>
  218450:	tbnz	w0, #31, 218470 <dm_points_list_detach+0x118>
  218454:	mov	w8, #0x1                   	// #1
  218458:	mov	x0, x21
  21845c:	mov	x1, x27
  218460:	strb	w8, [x20]
  218464:	bl	217190 <mount_point_free>
  218468:	cbnz	x19, 2183d4 <dm_points_list_detach+0x7c>
  21846c:	b	2184bc <dm_points_list_detach+0x164>
  218470:	mov	w0, wzr
  218474:	bl	21aae0 <log_get_max_level_realm@plt>
  218478:	cmp	w0, w25
  21847c:	b.lt	2183cc <dm_points_list_detach+0x74>  // b.tstop
  218480:	bl	21abb0 <__errno_location@plt>
  218484:	ldr	w1, [x0]
  218488:	ldr	x6, [x27]
  21848c:	ldr	w0, [sp, #4]
  218490:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218494:	mov	w3, #0x25c                 	// #604
  218498:	mov	x2, x23
  21849c:	mov	x4, x24
  2184a0:	add	x5, x5, #0x18c
  2184a4:	bl	21aaf0 <log_internal_realm@plt>
  2184a8:	b	2183cc <dm_points_list_detach+0x74>
  2184ac:	str	xzr, [sp, #8]
  2184b0:	ldr	x19, [x21]
  2184b4:	cbnz	x19, 2183ac <dm_points_list_detach+0x54>
  2184b8:	mov	w22, wzr
  2184bc:	mov	w0, w22
  2184c0:	ldp	x20, x19, [sp, #96]
  2184c4:	ldp	x22, x21, [sp, #80]
  2184c8:	ldp	x24, x23, [sp, #64]
  2184cc:	ldp	x26, x25, [sp, #48]
  2184d0:	ldp	x28, x27, [sp, #32]
  2184d4:	ldp	x29, x30, [sp, #16]
  2184d8:	add	sp, sp, #0x70
  2184dc:	ret
  2184e0:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2184e4:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2184e8:	adrp	x4, 203000 <main.dirs-0x548>
  2184ec:	add	x1, x1, #0x159
  2184f0:	add	x2, x2, #0xfee
  2184f4:	add	x4, x4, #0x9d5
  2184f8:	mov	w3, #0x248                 	// #584
  2184fc:	bl	21acc0 <log_assert_failed_realm@plt>
  218500:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218504:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218508:	adrp	x4, 203000 <main.dirs-0x548>
  21850c:	add	x1, x1, #0x952
  218510:	add	x2, x2, #0xfee
  218514:	add	x4, x4, #0x9d5
  218518:	mov	w3, #0x249                 	// #585
  21851c:	mov	w0, wzr
  218520:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218524 <mount_points_list_umount>:
  218524:	stp	x29, x30, [sp, #-64]!
  218528:	str	x23, [sp, #16]
  21852c:	stp	x22, x21, [sp, #32]
  218530:	stp	x20, x19, [sp, #48]
  218534:	mov	x29, sp
  218538:	cbz	x0, 2185cc <mount_points_list_umount+0xa8>
  21853c:	mov	x20, x1
  218540:	cbz	x1, 2185ec <mount_points_list_umount+0xc8>
  218544:	ldr	x22, [x0]
  218548:	cbz	x22, 2185b0 <mount_points_list_umount+0x8c>
  21854c:	mov	w19, w2
  218550:	mov	w21, wzr
  218554:	mov	w23, #0x1                   	// #1
  218558:	b	218568 <mount_points_list_umount+0x44>
  21855c:	add	w21, w21, #0x1
  218560:	ldr	x22, [x22, #40]
  218564:	cbz	x22, 2185b4 <mount_points_list_umount+0x90>
  218568:	ldrb	w8, [x22, #24]
  21856c:	cbz	w8, 21858c <mount_points_list_umount+0x68>
  218570:	mov	x0, x22
  218574:	mov	w1, w19
  218578:	bl	218610 <remount_with_timeout>
  21857c:	tbz	w0, #31, 21858c <mount_points_list_umount+0x68>
  218580:	ldr	x0, [x22]
  218584:	bl	218888 <nonunmountable_path>
  218588:	tbnz	w0, #0, 21855c <mount_points_list_umount+0x38>
  21858c:	ldr	x0, [x22]
  218590:	bl	218888 <nonunmountable_path>
  218594:	tbnz	w0, #0, 218560 <mount_points_list_umount+0x3c>
  218598:	mov	x0, x22
  21859c:	mov	w1, w19
  2185a0:	bl	2188d4 <umount_with_timeout>
  2185a4:	tbnz	w0, #31, 21855c <mount_points_list_umount+0x38>
  2185a8:	strb	w23, [x20]
  2185ac:	b	218560 <mount_points_list_umount+0x3c>
  2185b0:	mov	w21, wzr
  2185b4:	mov	w0, w21
  2185b8:	ldp	x20, x19, [sp, #48]
  2185bc:	ldp	x22, x21, [sp, #32]
  2185c0:	ldr	x23, [sp, #16]
  2185c4:	ldp	x29, x30, [sp], #64
  2185c8:	ret
  2185cc:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2185d0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2185d4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2185d8:	add	x1, x1, #0x159
  2185dc:	add	x2, x2, #0xfee
  2185e0:	add	x4, x4, #0x3e0
  2185e4:	mov	w3, #0x1d5                 	// #469
  2185e8:	bl	21acc0 <log_assert_failed_realm@plt>
  2185ec:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2185f0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2185f4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2185f8:	add	x1, x1, #0x952
  2185fc:	add	x2, x2, #0xfee
  218600:	add	x4, x4, #0x3e0
  218604:	mov	w3, #0x1d6                 	// #470
  218608:	mov	w0, wzr
  21860c:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218610 <remount_with_timeout>:
  218610:	sub	sp, sp, #0x130
  218614:	stp	x28, x21, [sp, #272]
  218618:	stp	x20, x19, [sp, #288]
  21861c:	mov	w21, w1
  218620:	mov	x19, x0
  218624:	mov	x1, sp
  218628:	mov	w2, #0x11                  	// #17
  21862c:	mov	w3, #0xffffffff            	// #-1
  218630:	mov	w0, wzr
  218634:	stp	x29, x30, [sp, #256]
  218638:	add	x29, sp, #0x100
  21863c:	bl	21ace0 <sigprocmask_many@plt>
  218640:	tbnz	w0, #31, 21879c <remount_with_timeout+0x18c>
  218644:	ldp	q0, q1, [sp, #64]
  218648:	ldp	q2, q3, [sp, #96]
  21864c:	stp	q0, q1, [sp, #192]
  218650:	ldp	q0, q4, [sp]
  218654:	stp	q2, q3, [sp, #224]
  218658:	ldp	q2, q1, [sp, #32]
  21865c:	stp	q0, q4, [sp, #128]
  218660:	stp	q2, q1, [sp, #160]
  218664:	cbz	x19, 2187c0 <remount_with_timeout+0x1b0>
  218668:	adrp	x0, 204000 <parse_argv.options+0xa90>
  21866c:	add	x0, x0, #0x4eb
  218670:	mov	x1, sp
  218674:	bl	218b8c <safe_fork>
  218678:	mov	w20, w0
  21867c:	tbnz	w0, #31, 21877c <remount_with_timeout+0x16c>
  218680:	cbz	w20, 2187e4 <remount_with_timeout+0x1d4>
  218684:	ldr	w0, [sp]
  218688:	mov	w1, #0x4a80                	// #19072
  21868c:	movk	w1, #0x55d, lsl #16
  218690:	bl	21ad00 <wait_for_terminate_with_timeout@plt>
  218694:	mov	w20, w0
  218698:	cmn	w0, #0x47
  21869c:	b.eq	2186f8 <remount_with_timeout+0xe8>  // b.none
  2186a0:	cmn	w20, #0x6e
  2186a4:	b.ne	218738 <remount_with_timeout+0x128>  // b.any
  2186a8:	mov	w0, wzr
  2186ac:	bl	21aae0 <log_get_max_level_realm@plt>
  2186b0:	cmp	w0, #0x3
  2186b4:	b.lt	2186e8 <remount_with_timeout+0xd8>  // b.tstop
  2186b8:	ldr	x6, [x19]
  2186bc:	ldr	w7, [sp]
  2186c0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2186c4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2186c8:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2186cc:	add	x2, x2, #0xfee
  2186d0:	add	x4, x4, #0x26b
  2186d4:	add	x5, x5, #0xd13
  2186d8:	mov	w0, #0x3                   	// #3
  2186dc:	mov	w1, #0xffffff92            	// #-110
  2186e0:	mov	w3, #0x199                 	// #409
  2186e4:	bl	21aaf0 <log_internal_realm@plt>
  2186e8:	ldr	w0, [sp]
  2186ec:	mov	w1, #0x9                   	// #9
  2186f0:	bl	21ad10 <kill@plt>
  2186f4:	b	21877c <remount_with_timeout+0x16c>
  2186f8:	mov	w0, wzr
  2186fc:	bl	21aae0 <log_get_max_level_realm@plt>
  218700:	cmp	w0, #0x7
  218704:	b.lt	21877c <remount_with_timeout+0x16c>  // b.tstop
  218708:	ldr	x6, [x19]
  21870c:	ldr	w7, [sp]
  218710:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218714:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218718:	adrp	x5, 203000 <main.dirs-0x548>
  21871c:	add	x2, x2, #0xfee
  218720:	add	x4, x4, #0x26b
  218724:	add	x5, x5, #0xb97
  218728:	mov	w0, #0x7                   	// #7
  21872c:	mov	w1, #0xffffffb9            	// #-71
  218730:	mov	w3, #0x19c                 	// #412
  218734:	b	218778 <remount_with_timeout+0x168>
  218738:	tbz	w20, #31, 21877c <remount_with_timeout+0x16c>
  21873c:	mov	w0, wzr
  218740:	bl	21aae0 <log_get_max_level_realm@plt>
  218744:	cmp	w0, #0x3
  218748:	b.lt	21877c <remount_with_timeout+0x16c>  // b.tstop
  21874c:	ldr	x6, [x19]
  218750:	ldr	w7, [sp]
  218754:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218758:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21875c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218760:	add	x2, x2, #0xfee
  218764:	add	x4, x4, #0x26b
  218768:	add	x5, x5, #0x6a4
  21876c:	mov	w0, #0x3                   	// #3
  218770:	mov	w3, #0x19e                 	// #414
  218774:	mov	w1, w20
  218778:	bl	21aaf0 <log_internal_realm@plt>
  21877c:	add	x0, sp, #0x80
  218780:	bl	218b44 <block_signals_reset>
  218784:	mov	w0, w20
  218788:	ldp	x20, x19, [sp, #288]
  21878c:	ldp	x28, x21, [sp, #272]
  218790:	ldp	x29, x30, [sp, #256]
  218794:	add	sp, sp, #0x130
  218798:	ret
  21879c:	adrp	x1, 203000 <main.dirs-0x548>
  2187a0:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2187a4:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2187a8:	add	x1, x1, #0x71d
  2187ac:	add	x2, x2, #0xfee
  2187b0:	add	x4, x4, #0x160
  2187b4:	mov	w3, #0x181                 	// #385
  2187b8:	mov	w0, wzr
  2187bc:	bl	21acc0 <log_assert_failed_realm@plt>
  2187c0:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2187c4:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2187c8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  2187cc:	add	x1, x1, #0x8b4
  2187d0:	add	x2, x2, #0xfee
  2187d4:	add	x4, x4, #0x160
  2187d8:	mov	w3, #0x183                 	// #387
  2187dc:	mov	w0, wzr
  2187e0:	bl	21acc0 <log_assert_failed_realm@plt>
  2187e4:	mov	w0, wzr
  2187e8:	bl	21aae0 <log_get_max_level_realm@plt>
  2187ec:	cmp	w0, #0x6
  2187f0:	b.lt	218820 <remount_with_timeout+0x210>  // b.tstop
  2187f4:	ldp	x6, x7, [x19]
  2187f8:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2187fc:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218800:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218804:	add	x2, x2, #0xfee
  218808:	add	x4, x4, #0x26b
  21880c:	add	x5, x5, #0x674
  218810:	mov	w0, #0x6                   	// #6
  218814:	mov	w3, #0x18d                 	// #397
  218818:	mov	w1, wzr
  21881c:	bl	21aaf0 <log_internal_realm@plt>
  218820:	ldp	x4, x3, [x19, #8]
  218824:	ldr	x1, [x19]
  218828:	mov	x0, xzr
  21882c:	mov	x2, xzr
  218830:	bl	21ad20 <mount@plt>
  218834:	mov	w20, w0
  218838:	tbz	w0, #31, 218880 <remount_with_timeout+0x270>
  21883c:	mov	w0, wzr
  218840:	bl	21aae0 <log_get_max_level_realm@plt>
  218844:	and	w8, w21, #0x7
  218848:	cmp	w0, w8
  21884c:	b.lt	218880 <remount_with_timeout+0x270>  // b.tstop
  218850:	bl	21abb0 <__errno_location@plt>
  218854:	ldr	w1, [x0]
  218858:	ldr	x6, [x19]
  21885c:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218860:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218864:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218868:	add	x2, x2, #0xfee
  21886c:	add	x4, x4, #0x26b
  218870:	add	x5, x5, #0xe48
  218874:	mov	w3, #0x192                 	// #402
  218878:	mov	w0, w21
  21887c:	bl	21aaf0 <log_internal_realm@plt>
  218880:	lsr	w0, w20, #31
  218884:	bl	21ac10 <_exit@plt>

0000000000218888 <nonunmountable_path>:
  218888:	stp	x29, x30, [sp, #-32]!
  21888c:	adrp	x1, 203000 <main.dirs-0x548>
  218890:	add	x1, x1, #0x97f
  218894:	str	x19, [sp, #16]
  218898:	mov	x29, sp
  21889c:	mov	x19, x0
  2188a0:	bl	21b030 <path_equal@plt>
  2188a4:	tbz	w0, #0, 2188b0 <nonunmountable_path+0x28>
  2188a8:	mov	w0, #0x1                   	// #1
  2188ac:	b	2188c8 <nonunmountable_path+0x40>
  2188b0:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  2188b4:	add	x1, x1, #0x4b
  2188b8:	mov	x0, x19
  2188bc:	bl	21b040 <path_startswith@plt>
  2188c0:	cmp	x0, #0x0
  2188c4:	cset	w0, ne  // ne = any
  2188c8:	ldr	x19, [sp, #16]
  2188cc:	ldp	x29, x30, [sp], #32
  2188d0:	ret

00000000002188d4 <umount_with_timeout>:
  2188d4:	sub	sp, sp, #0x130
  2188d8:	stp	x28, x21, [sp, #272]
  2188dc:	stp	x20, x19, [sp, #288]
  2188e0:	mov	w21, w1
  2188e4:	mov	x19, x0
  2188e8:	mov	x1, sp
  2188ec:	mov	w2, #0x11                  	// #17
  2188f0:	mov	w3, #0xffffffff            	// #-1
  2188f4:	mov	w0, wzr
  2188f8:	stp	x29, x30, [sp, #256]
  2188fc:	add	x29, sp, #0x100
  218900:	bl	21ace0 <sigprocmask_many@plt>
  218904:	tbnz	w0, #31, 218a60 <umount_with_timeout+0x18c>
  218908:	ldp	q0, q1, [sp, #64]
  21890c:	ldp	q2, q3, [sp, #96]
  218910:	stp	q0, q1, [sp, #192]
  218914:	ldp	q0, q4, [sp]
  218918:	stp	q2, q3, [sp, #224]
  21891c:	ldp	q2, q1, [sp, #32]
  218920:	stp	q0, q4, [sp, #128]
  218924:	stp	q2, q1, [sp, #160]
  218928:	cbz	x19, 218a84 <umount_with_timeout+0x1b0>
  21892c:	adrp	x0, 203000 <main.dirs-0x548>
  218930:	add	x0, x0, #0x800
  218934:	mov	x1, sp
  218938:	bl	218b8c <safe_fork>
  21893c:	mov	w20, w0
  218940:	tbnz	w0, #31, 218a40 <umount_with_timeout+0x16c>
  218944:	cbz	w20, 218aa8 <umount_with_timeout+0x1d4>
  218948:	ldr	w0, [sp]
  21894c:	mov	w1, #0x4a80                	// #19072
  218950:	movk	w1, #0x55d, lsl #16
  218954:	bl	21ad00 <wait_for_terminate_with_timeout@plt>
  218958:	mov	w20, w0
  21895c:	cmn	w0, #0x47
  218960:	b.eq	2189bc <umount_with_timeout+0xe8>  // b.none
  218964:	cmn	w20, #0x6e
  218968:	b.ne	2189fc <umount_with_timeout+0x128>  // b.any
  21896c:	mov	w0, wzr
  218970:	bl	21aae0 <log_get_max_level_realm@plt>
  218974:	cmp	w0, #0x3
  218978:	b.lt	2189ac <umount_with_timeout+0xd8>  // b.tstop
  21897c:	ldr	x6, [x19]
  218980:	ldr	w7, [sp]
  218984:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218988:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  21898c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218990:	add	x2, x2, #0xfee
  218994:	add	x4, x4, #0x3f5
  218998:	add	x5, x5, #0xe6d
  21899c:	mov	w0, #0x3                   	// #3
  2189a0:	mov	w1, #0xffffff92            	// #-110
  2189a4:	mov	w3, #0x1c5                 	// #453
  2189a8:	bl	21aaf0 <log_internal_realm@plt>
  2189ac:	ldr	w0, [sp]
  2189b0:	mov	w1, #0x9                   	// #9
  2189b4:	bl	21ad10 <kill@plt>
  2189b8:	b	218a40 <umount_with_timeout+0x16c>
  2189bc:	mov	w0, wzr
  2189c0:	bl	21aae0 <log_get_max_level_realm@plt>
  2189c4:	cmp	w0, #0x7
  2189c8:	b.lt	218a40 <umount_with_timeout+0x16c>  // b.tstop
  2189cc:	ldr	x6, [x19]
  2189d0:	ldr	w7, [sp]
  2189d4:	adrp	x2, 204000 <parse_argv.options+0xa90>
  2189d8:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  2189dc:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2189e0:	add	x2, x2, #0xfee
  2189e4:	add	x4, x4, #0x3f5
  2189e8:	add	x5, x5, #0xea3
  2189ec:	mov	w0, #0x7                   	// #7
  2189f0:	mov	w1, #0xffffffb9            	// #-71
  2189f4:	mov	w3, #0x1c8                 	// #456
  2189f8:	b	218a3c <umount_with_timeout+0x168>
  2189fc:	tbz	w20, #31, 218a40 <umount_with_timeout+0x16c>
  218a00:	mov	w0, wzr
  218a04:	bl	21aae0 <log_get_max_level_realm@plt>
  218a08:	cmp	w0, #0x3
  218a0c:	b.lt	218a40 <umount_with_timeout+0x16c>  // b.tstop
  218a10:	ldr	x6, [x19]
  218a14:	ldr	w7, [sp]
  218a18:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218a1c:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  218a20:	adrp	x5, 203000 <main.dirs-0x548>
  218a24:	add	x2, x2, #0xfee
  218a28:	add	x4, x4, #0x3f5
  218a2c:	add	x5, x5, #0x80c
  218a30:	mov	w0, #0x3                   	// #3
  218a34:	mov	w3, #0x1ca                 	// #458
  218a38:	mov	w1, w20
  218a3c:	bl	21aaf0 <log_internal_realm@plt>
  218a40:	add	x0, sp, #0x80
  218a44:	bl	218b44 <block_signals_reset>
  218a48:	mov	w0, w20
  218a4c:	ldp	x20, x19, [sp, #288]
  218a50:	ldp	x28, x21, [sp, #272]
  218a54:	ldp	x29, x30, [sp, #256]
  218a58:	add	sp, sp, #0x130
  218a5c:	ret
  218a60:	adrp	x1, 203000 <main.dirs-0x548>
  218a64:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218a68:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218a6c:	add	x1, x1, #0x71d
  218a70:	add	x2, x2, #0xfee
  218a74:	add	x4, x4, #0x740
  218a78:	mov	w3, #0x1a7                 	// #423
  218a7c:	mov	w0, wzr
  218a80:	bl	21acc0 <log_assert_failed_realm@plt>
  218a84:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218a88:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218a8c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218a90:	add	x1, x1, #0x8b4
  218a94:	add	x2, x2, #0xfee
  218a98:	add	x4, x4, #0x740
  218a9c:	mov	w3, #0x1a9                 	// #425
  218aa0:	mov	w0, wzr
  218aa4:	bl	21acc0 <log_assert_failed_realm@plt>
  218aa8:	mov	w0, wzr
  218aac:	bl	21aae0 <log_get_max_level_realm@plt>
  218ab0:	cmp	w0, #0x6
  218ab4:	b.lt	218ae4 <umount_with_timeout+0x210>  // b.tstop
  218ab8:	ldr	x6, [x19]
  218abc:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218ac0:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  218ac4:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218ac8:	add	x2, x2, #0xfee
  218acc:	add	x4, x4, #0x3f5
  218ad0:	add	x5, x5, #0xbc2
  218ad4:	mov	w0, #0x6                   	// #6
  218ad8:	mov	w3, #0x1b3                 	// #435
  218adc:	mov	w1, wzr
  218ae0:	bl	21aaf0 <log_internal_realm@plt>
  218ae4:	ldr	x0, [x19]
  218ae8:	mov	w1, #0x1                   	// #1
  218aec:	bl	21b050 <umount2@plt>
  218af0:	mov	w20, w0
  218af4:	tbz	w0, #31, 218b3c <umount_with_timeout+0x268>
  218af8:	mov	w0, wzr
  218afc:	bl	21aae0 <log_get_max_level_realm@plt>
  218b00:	and	w8, w21, #0x7
  218b04:	cmp	w0, w8
  218b08:	b.lt	218b3c <umount_with_timeout+0x268>  // b.tstop
  218b0c:	bl	21abb0 <__errno_location@plt>
  218b10:	ldr	w1, [x0]
  218b14:	ldr	x6, [x19]
  218b18:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218b1c:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  218b20:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  218b24:	add	x2, x2, #0xfee
  218b28:	add	x4, x4, #0x3f5
  218b2c:	add	x5, x5, #0x4
  218b30:	mov	w3, #0x1be                 	// #446
  218b34:	mov	w0, w21
  218b38:	bl	21aaf0 <log_internal_realm@plt>
  218b3c:	lsr	w0, w20, #31
  218b40:	bl	21ac10 <_exit@plt>

0000000000218b44 <block_signals_reset>:
  218b44:	stp	x29, x30, [sp, #-16]!
  218b48:	mov	x1, x0
  218b4c:	mov	w0, #0x2                   	// #2
  218b50:	mov	x2, xzr
  218b54:	mov	x29, sp
  218b58:	bl	21ad80 <sigprocmask@plt>
  218b5c:	tbnz	w0, #31, 218b68 <block_signals_reset+0x24>
  218b60:	ldp	x29, x30, [sp], #16
  218b64:	ret
  218b68:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218b6c:	adrp	x2, 203000 <main.dirs-0x548>
  218b70:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218b74:	add	x1, x1, #0xfc3
  218b78:	add	x2, x2, #0xdc2
  218b7c:	add	x4, x4, #0x134
  218b80:	mov	w3, #0x18                  	// #24
  218b84:	mov	w0, wzr
  218b88:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218b8c <safe_fork>:
  218b8c:	stp	x29, x30, [sp, #-16]!
  218b90:	mov	x4, x1
  218b94:	mov	w3, #0x33                  	// #51
  218b98:	mov	x1, xzr
  218b9c:	mov	x2, xzr
  218ba0:	mov	x29, sp
  218ba4:	bl	21ad40 <safe_fork_full@plt>
  218ba8:	ldp	x29, x30, [sp], #16
  218bac:	ret

0000000000218bb0 <sd_device_enumerator_unrefp>:
  218bb0:	stp	x29, x30, [sp, #-16]!
  218bb4:	ldr	x0, [x0]
  218bb8:	mov	x29, sp
  218bbc:	cbz	x0, 218bc4 <sd_device_enumerator_unrefp+0x14>
  218bc0:	bl	21b060 <sd_device_enumerator_unref@plt>
  218bc4:	ldp	x29, x30, [sp], #16
  218bc8:	ret

0000000000218bcc <malloc_multiply>:
  218bcc:	stp	x29, x30, [sp, #-16]!
  218bd0:	mov	w0, #0x38                  	// #56
  218bd4:	mov	x29, sp
  218bd8:	bl	21b070 <malloc@plt>
  218bdc:	ldp	x29, x30, [sp], #16
  218be0:	ret

0000000000218be4 <delete_loopback>:
  218be4:	stp	x29, x30, [sp, #-32]!
  218be8:	mov	x29, sp
  218bec:	mov	w8, #0xffffffff            	// #-1
  218bf0:	str	x19, [sp, #16]
  218bf4:	str	w8, [x29, #28]
  218bf8:	cbz	x0, 218c5c <delete_loopback+0x78>
  218bfc:	mov	w1, #0x80000               	// #524288
  218c00:	bl	21b080 <open64@plt>
  218c04:	str	w0, [x29, #28]
  218c08:	tbnz	w0, #31, 218c24 <delete_loopback+0x40>
  218c0c:	mov	w1, #0x4c01                	// #19457
  218c10:	mov	w2, wzr
  218c14:	bl	21b090 <ioctl@plt>
  218c18:	tbnz	w0, #31, 218c34 <delete_loopback+0x50>
  218c1c:	mov	w19, #0x1                   	// #1
  218c20:	b	218c44 <delete_loopback+0x60>
  218c24:	bl	21abb0 <__errno_location@plt>
  218c28:	ldr	w8, [x0]
  218c2c:	cmp	w8, #0x2
  218c30:	b	218c40 <delete_loopback+0x5c>
  218c34:	bl	21abb0 <__errno_location@plt>
  218c38:	ldr	w8, [x0]
  218c3c:	cmp	w8, #0x6
  218c40:	csneg	w19, wzr, w8, eq  // eq = none
  218c44:	add	x0, x29, #0x1c
  218c48:	bl	218c7c <closep>
  218c4c:	mov	w0, w19
  218c50:	ldr	x19, [sp, #16]
  218c54:	ldp	x29, x30, [sp], #32
  218c58:	ret
  218c5c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218c60:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218c64:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218c68:	add	x1, x1, #0xc43
  218c6c:	add	x2, x2, #0xfee
  218c70:	add	x4, x4, #0x8b6
  218c74:	mov	w3, #0x14a                 	// #330
  218c78:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218c7c <closep>:
  218c7c:	stp	x29, x30, [sp, #-16]!
  218c80:	ldr	w0, [x0]
  218c84:	mov	x29, sp
  218c88:	bl	21b0a0 <safe_close@plt>
  218c8c:	ldp	x29, x30, [sp], #16
  218c90:	ret

0000000000218c94 <delete_dm>:
  218c94:	sub	sp, sp, #0x170
  218c98:	add	x8, sp, #0x10
  218c9c:	movi	v0.2d, #0x0
  218ca0:	mov	x9, #0x4                   	// #4
  218ca4:	movk	x9, #0x1b, lsl #32
  218ca8:	str	xzr, [x8, #304]
  218cac:	stp	q0, q0, [x8, #272]
  218cb0:	stp	q0, q0, [x8, #240]
  218cb4:	stp	q0, q0, [x8, #208]
  218cb8:	stp	q0, q0, [x8, #176]
  218cbc:	stp	q0, q0, [x8, #144]
  218cc0:	str	q0, [x8, #128]
  218cc4:	mov	x8, #0x13800000000         	// #1340029796352
  218cc8:	stp	q0, q0, [sp, #16]
  218ccc:	stp	x9, x8, [sp, #16]
  218cd0:	mov	w8, #0xffffffff            	// #-1
  218cd4:	stp	x29, x30, [sp, #336]
  218cd8:	stp	x28, x19, [sp, #352]
  218cdc:	add	x29, sp, #0x150
  218ce0:	stp	q0, q0, [sp, #112]
  218ce4:	stp	q0, q0, [sp, #80]
  218ce8:	stp	q0, q0, [sp, #48]
  218cec:	str	x0, [sp, #56]
  218cf0:	str	w8, [sp, #12]
  218cf4:	bl	21aff0 <gnu_dev_major@plt>
  218cf8:	cbz	w0, 218d5c <delete_dm+0xc8>
  218cfc:	adrp	x0, 204000 <parse_argv.options+0xa90>
  218d00:	mov	w1, #0x2                   	// #2
  218d04:	add	x0, x0, #0x8d8
  218d08:	movk	w1, #0x8, lsl #16
  218d0c:	bl	21b080 <open64@plt>
  218d10:	str	w0, [sp, #12]
  218d14:	tbnz	w0, #31, 218d34 <delete_dm+0xa0>
  218d18:	mov	w1, #0xfd04                	// #64772
  218d1c:	add	x2, sp, #0x10
  218d20:	movk	w1, #0xc138, lsl #16
  218d24:	bl	21b090 <ioctl@plt>
  218d28:	tbnz	w0, #31, 218d34 <delete_dm+0xa0>
  218d2c:	mov	w19, wzr
  218d30:	b	218d40 <delete_dm+0xac>
  218d34:	bl	21abb0 <__errno_location@plt>
  218d38:	ldr	w8, [x0]
  218d3c:	neg	w19, w8
  218d40:	add	x0, sp, #0xc
  218d44:	bl	218c7c <closep>
  218d48:	mov	w0, w19
  218d4c:	ldp	x28, x19, [sp, #352]
  218d50:	ldp	x29, x30, [sp, #336]
  218d54:	add	sp, sp, #0x170
  218d58:	ret
  218d5c:	adrp	x1, 203000 <main.dirs-0x548>
  218d60:	adrp	x2, 204000 <parse_argv.options+0xa90>
  218d64:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  218d68:	add	x1, x1, #0xf83
  218d6c:	add	x2, x2, #0xfee
  218d70:	add	x4, x4, #0x95
  218d74:	mov	w3, #0x169                 	// #361
  218d78:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218d7c <broadcast_signal>:
  218d7c:	sub	sp, sp, #0x150
  218d80:	stp	x22, x21, [sp, #304]
  218d84:	stp	x20, x19, [sp, #320]
  218d88:	mov	x19, x3
  218d8c:	mov	w21, w2
  218d90:	mov	w20, w1
  218d94:	mov	w22, w0
  218d98:	stp	x29, x30, [sp, #272]
  218d9c:	stp	x28, x23, [sp, #288]
  218da0:	add	x29, sp, #0x110
  218da4:	str	xzr, [sp, #8]
  218da8:	tbz	w1, #0, 218db8 <broadcast_signal+0x3c>
  218dac:	mov	x0, xzr
  218db0:	bl	21b0b0 <internal_set_new@plt>
  218db4:	str	x0, [sp, #8]
  218db8:	sub	x0, x29, #0x80
  218dbc:	bl	21b0c0 <sigemptyset@plt>
  218dc0:	cbnz	w0, 218f04 <broadcast_signal+0x188>
  218dc4:	sub	x0, x29, #0x80
  218dc8:	mov	w1, #0x11                  	// #17
  218dcc:	bl	21b0d0 <sigaddset@plt>
  218dd0:	cbnz	w0, 218f28 <broadcast_signal+0x1ac>
  218dd4:	sub	x1, x29, #0x80
  218dd8:	add	x2, sp, #0x10
  218ddc:	bl	21ad80 <sigprocmask@plt>
  218de0:	cbnz	w0, 218f4c <broadcast_signal+0x1d0>
  218de4:	mov	w0, #0xffffffff            	// #-1
  218de8:	mov	w1, #0x13                  	// #19
  218dec:	bl	21ad10 <kill@plt>
  218df0:	tbz	w0, #31, 218e3c <broadcast_signal+0xc0>
  218df4:	bl	21abb0 <__errno_location@plt>
  218df8:	ldr	w23, [x0]
  218dfc:	cmp	w23, #0x3
  218e00:	b.eq	218e3c <broadcast_signal+0xc0>  // b.none
  218e04:	mov	w0, wzr
  218e08:	bl	21aae0 <log_get_max_level_realm@plt>
  218e0c:	cmp	w0, #0x4
  218e10:	b.lt	218e3c <broadcast_signal+0xc0>  // b.tstop
  218e14:	adrp	x2, 203000 <main.dirs-0x548>
  218e18:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218e1c:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  218e20:	add	x2, x2, #0xace
  218e24:	add	x4, x4, #0x45c
  218e28:	add	x5, x5, #0x21b
  218e2c:	mov	w0, #0x4                   	// #4
  218e30:	mov	w3, #0x110                 	// #272
  218e34:	mov	w1, w23
  218e38:	bl	21aaf0 <log_internal_realm@plt>
  218e3c:	ldr	x23, [sp, #8]
  218e40:	and	w2, w21, #0x1
  218e44:	mov	w0, w22
  218e48:	mov	x1, x23
  218e4c:	bl	218fb0 <killall>
  218e50:	mov	w21, w0
  218e54:	mov	w0, #0xffffffff            	// #-1
  218e58:	mov	w1, #0x12                  	// #18
  218e5c:	bl	21ad10 <kill@plt>
  218e60:	tbz	w0, #31, 218eac <broadcast_signal+0x130>
  218e64:	bl	21abb0 <__errno_location@plt>
  218e68:	ldr	w22, [x0]
  218e6c:	cmp	w22, #0x3
  218e70:	b.eq	218eac <broadcast_signal+0x130>  // b.none
  218e74:	mov	w0, wzr
  218e78:	bl	21aae0 <log_get_max_level_realm@plt>
  218e7c:	cmp	w0, #0x4
  218e80:	b.lt	218eac <broadcast_signal+0x130>  // b.tstop
  218e84:	adrp	x2, 203000 <main.dirs-0x548>
  218e88:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218e8c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  218e90:	add	x2, x2, #0xace
  218e94:	add	x4, x4, #0x45c
  218e98:	add	x5, x5, #0x6f0
  218e9c:	mov	w0, #0x4                   	// #4
  218ea0:	mov	w3, #0x115                 	// #277
  218ea4:	mov	w1, w22
  218ea8:	bl	21aaf0 <log_internal_realm@plt>
  218eac:	cmp	w21, #0x1
  218eb0:	b.lt	218ecc <broadcast_signal+0x150>  // b.tstop
  218eb4:	tbz	w20, #0, 218ecc <broadcast_signal+0x150>
  218eb8:	sub	x1, x29, #0x80
  218ebc:	mov	x0, x23
  218ec0:	mov	x2, x19
  218ec4:	bl	219218 <wait_for_children>
  218ec8:	mov	w21, w0
  218ecc:	add	x1, sp, #0x10
  218ed0:	mov	w0, #0x2                   	// #2
  218ed4:	mov	x2, xzr
  218ed8:	bl	21ad80 <sigprocmask@plt>
  218edc:	cbnz	w0, 218f70 <broadcast_signal+0x1f4>
  218ee0:	add	x0, sp, #0x8
  218ee4:	bl	218f94 <set_freep>
  218ee8:	mov	w0, w21
  218eec:	ldp	x20, x19, [sp, #320]
  218ef0:	ldp	x22, x21, [sp, #304]
  218ef4:	ldp	x28, x23, [sp, #288]
  218ef8:	ldp	x29, x30, [sp, #272]
  218efc:	add	sp, sp, #0x150
  218f00:	ret
  218f04:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  218f08:	adrp	x2, 203000 <main.dirs-0x548>
  218f0c:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218f10:	add	x1, x1, #0xaa
  218f14:	add	x2, x2, #0xace
  218f18:	add	x4, x4, #0xd65
  218f1c:	mov	w3, #0x10b                 	// #267
  218f20:	mov	w0, wzr
  218f24:	bl	21acc0 <log_assert_failed_realm@plt>
  218f28:	adrp	x1, 203000 <main.dirs-0x548>
  218f2c:	adrp	x2, 203000 <main.dirs-0x548>
  218f30:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218f34:	add	x1, x1, #0xf96
  218f38:	add	x2, x2, #0xace
  218f3c:	add	x4, x4, #0xd65
  218f40:	mov	w3, #0x10c                 	// #268
  218f44:	mov	w0, wzr
  218f48:	bl	21acc0 <log_assert_failed_realm@plt>
  218f4c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218f50:	adrp	x2, 203000 <main.dirs-0x548>
  218f54:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218f58:	add	x1, x1, #0xd95
  218f5c:	add	x2, x2, #0xace
  218f60:	add	x4, x4, #0xd65
  218f64:	mov	w3, #0x10d                 	// #269
  218f68:	mov	w0, wzr
  218f6c:	bl	21acc0 <log_assert_failed_realm@plt>
  218f70:	adrp	x1, 204000 <parse_argv.options+0xa90>
  218f74:	adrp	x2, 203000 <main.dirs-0x548>
  218f78:	adrp	x4, 204000 <parse_argv.options+0xa90>
  218f7c:	add	x1, x1, #0xc4a
  218f80:	add	x2, x2, #0xace
  218f84:	add	x4, x4, #0xd65
  218f88:	mov	w3, #0x11a                 	// #282
  218f8c:	mov	w0, wzr
  218f90:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000218f94 <set_freep>:
  218f94:	stp	x29, x30, [sp, #-16]!
  218f98:	ldr	x0, [x0]
  218f9c:	mov	x29, sp
  218fa0:	cbz	x0, 218fa8 <set_freep+0x14>
  218fa4:	bl	219528 <set_free>
  218fa8:	ldp	x29, x30, [sp], #16
  218fac:	ret

0000000000218fb0 <killall>:
  218fb0:	sub	sp, sp, #0x80
  218fb4:	stp	x22, x21, [sp, #96]
  218fb8:	mov	w21, w0
  218fbc:	adrp	x0, 205000 <parse_argv.options+0x1a90>
  218fc0:	stp	x29, x30, [sp, #32]
  218fc4:	add	x29, sp, #0x20
  218fc8:	add	x0, x0, #0xee
  218fcc:	stp	x28, x27, [sp, #48]
  218fd0:	stp	x26, x25, [sp, #64]
  218fd4:	stp	x24, x23, [sp, #80]
  218fd8:	stp	x20, x19, [sp, #112]
  218fdc:	mov	w19, w2
  218fe0:	mov	x20, x1
  218fe4:	stur	xzr, [x29, #-8]
  218fe8:	bl	21b0e0 <opendir@plt>
  218fec:	mov	x22, x0
  218ff0:	stur	x0, [x29, #-8]
  218ff4:	bl	21abb0 <__errno_location@plt>
  218ff8:	mov	x24, x0
  218ffc:	cbz	x22, 219198 <killall+0x1e8>
  219000:	mov	x0, x22
  219004:	str	wzr, [x24]
  219008:	bl	21b0f0 <readdir64@plt>
  21900c:	mov	w23, wzr
  219010:	cbz	x0, 2191ec <killall+0x23c>
  219014:	adrp	x25, 203000 <main.dirs-0x548>
  219018:	adrp	x26, 203000 <main.dirs-0x548>
  21901c:	adrp	x27, 205000 <parse_argv.options+0x1a90>
  219020:	add	x25, x25, #0xace
  219024:	add	x26, x26, #0x7a0
  219028:	add	x27, x27, #0x1d
  21902c:	b	219040 <killall+0x90>
  219030:	mov	x0, x22
  219034:	str	wzr, [x24]
  219038:	bl	21b0f0 <readdir64@plt>
  21903c:	cbz	x0, 2191ec <killall+0x23c>
  219040:	ldrb	w8, [x0, #18]
  219044:	orr	w8, w8, #0x4
  219048:	cmp	w8, #0x4
  21904c:	b.ne	219030 <killall+0x80>  // b.any
  219050:	add	x0, x0, #0x13
  219054:	sub	x1, x29, #0xc
  219058:	bl	21b100 <parse_pid@plt>
  21905c:	tbnz	w0, #31, 219030 <killall+0x80>
  219060:	ldur	w28, [x29, #-12]
  219064:	cmp	w21, #0x9
  219068:	b.ne	219078 <killall+0xc8>  // b.any
  21906c:	bl	21ab20 <in_initrd@plt>
  219070:	eor	w8, w0, #0x1
  219074:	b	21907c <killall+0xcc>
  219078:	mov	w8, wzr
  21907c:	and	w1, w8, #0x1
  219080:	mov	w0, w28
  219084:	bl	219560 <ignore_proc>
  219088:	tbnz	w0, #0, 219030 <killall+0x80>
  21908c:	cmp	w21, #0x9
  219090:	b.ne	2190ec <killall+0x13c>  // b.any
  219094:	ldur	w0, [x29, #-12]
  219098:	add	x1, sp, #0x8
  21909c:	str	xzr, [sp, #8]
  2190a0:	bl	21b110 <get_process_comm@plt>
  2190a4:	mov	w0, wzr
  2190a8:	bl	21aae0 <log_get_max_level_realm@plt>
  2190ac:	cmp	w0, #0x5
  2190b0:	b.lt	2190e4 <killall+0x134>  // b.tstop
  2190b4:	ldr	x0, [sp, #8]
  2190b8:	ldur	w28, [x29, #-12]
  2190bc:	bl	2196cc <strna>
  2190c0:	mov	x7, x0
  2190c4:	mov	w0, #0x5                   	// #5
  2190c8:	mov	w3, #0xdc                  	// #220
  2190cc:	mov	w1, wzr
  2190d0:	mov	x2, x25
  2190d4:	mov	x4, x26
  2190d8:	mov	x5, x27
  2190dc:	mov	w6, w28
  2190e0:	bl	21aaf0 <log_internal_realm@plt>
  2190e4:	add	x0, sp, #0x8
  2190e8:	bl	2196b4 <freep>
  2190ec:	ldur	w0, [x29, #-12]
  2190f0:	mov	w1, w21
  2190f4:	bl	21ad10 <kill@plt>
  2190f8:	tbnz	w0, #31, 219134 <killall+0x184>
  2190fc:	add	w23, w23, #0x1
  219100:	cbz	x20, 219174 <killall+0x1c4>
  219104:	ldur	w0, [x29, #-12]
  219108:	bl	2196e0 <PID_TO_PTR>
  21910c:	mov	x1, x0
  219110:	mov	x0, x20
  219114:	bl	21b120 <set_put@plt>
  219118:	tbz	w0, #31, 219174 <killall+0x1c4>
  21911c:	mov	w2, #0xe4                  	// #228
  219120:	mov	w0, wzr
  219124:	mov	x1, x25
  219128:	mov	x3, x26
  21912c:	bl	21ae50 <log_oom_internal@plt>
  219130:	b	219174 <killall+0x1c4>
  219134:	ldr	w28, [x24]
  219138:	cmp	w28, #0x2
  21913c:	b.eq	219174 <killall+0x1c4>  // b.none
  219140:	mov	w0, wzr
  219144:	bl	21aae0 <log_get_max_level_realm@plt>
  219148:	cmp	w0, #0x4
  21914c:	b.lt	219174 <killall+0x1c4>  // b.tstop
  219150:	ldur	w6, [x29, #-12]
  219154:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219158:	mov	w0, #0x4                   	// #4
  21915c:	mov	w3, #0xe7                  	// #231
  219160:	mov	w1, w28
  219164:	mov	x2, x25
  219168:	mov	x4, x26
  21916c:	add	x5, x5, #0x4f8
  219170:	bl	21aaf0 <log_internal_realm@plt>
  219174:	tbz	w19, #0, 219030 <killall+0x80>
  219178:	ldur	w0, [x29, #-12]
  21917c:	mov	x1, xzr
  219180:	bl	21b130 <get_ctty_devnr@plt>
  219184:	tbnz	w0, #31, 219030 <killall+0x80>
  219188:	ldur	w0, [x29, #-12]
  21918c:	mov	w1, #0x1                   	// #1
  219190:	bl	21ad10 <kill@plt>
  219194:	b	219030 <killall+0x80>
  219198:	ldr	w19, [x24]
  21919c:	mov	w0, wzr
  2191a0:	bl	21aae0 <log_get_max_level_realm@plt>
  2191a4:	cmp	w0, #0x4
  2191a8:	b.lt	2191dc <killall+0x22c>  // b.tstop
  2191ac:	adrp	x2, 203000 <main.dirs-0x548>
  2191b0:	adrp	x4, 203000 <main.dirs-0x548>
  2191b4:	adrp	x5, 203000 <main.dirs-0x548>
  2191b8:	add	x2, x2, #0xace
  2191bc:	add	x4, x4, #0x7a0
  2191c0:	add	x5, x5, #0xae1
  2191c4:	mov	w0, #0x4                   	// #4
  2191c8:	mov	w3, #0xc9                  	// #201
  2191cc:	mov	w1, w19
  2191d0:	bl	21aaf0 <log_internal_realm@plt>
  2191d4:	mov	w23, w0
  2191d8:	b	2191ec <killall+0x23c>
  2191dc:	cmp	w19, #0x0
  2191e0:	mov	w8, wzr
  2191e4:	cneg	w9, w19, mi  // mi = first
  2191e8:	sub	w23, w8, w9, uxtb
  2191ec:	sub	x0, x29, #0x8
  2191f0:	bl	219544 <closedirp>
  2191f4:	mov	w0, w23
  2191f8:	ldp	x20, x19, [sp, #112]
  2191fc:	ldp	x22, x21, [sp, #96]
  219200:	ldp	x24, x23, [sp, #80]
  219204:	ldp	x26, x25, [sp, #64]
  219208:	ldp	x28, x27, [sp, #48]
  21920c:	ldp	x29, x30, [sp, #32]
  219210:	add	sp, sp, #0x80
  219214:	ret

0000000000219218 <wait_for_children>:
  219218:	sub	sp, sp, #0x90
  21921c:	stp	x29, x30, [sp, #48]
  219220:	stp	x28, x27, [sp, #64]
  219224:	stp	x26, x25, [sp, #80]
  219228:	stp	x24, x23, [sp, #96]
  21922c:	stp	x22, x21, [sp, #112]
  219230:	stp	x20, x19, [sp, #128]
  219234:	add	x29, sp, #0x30
  219238:	str	x1, [sp]
  21923c:	cbz	x1, 219504 <wait_for_children+0x2ec>
  219240:	mov	x23, x2
  219244:	mov	x20, x0
  219248:	bl	219700 <set_isempty>
  21924c:	tbz	w0, #0, 219278 <wait_for_children+0x60>
  219250:	mov	w28, wzr
  219254:	mov	w0, w28
  219258:	ldp	x20, x19, [sp, #128]
  21925c:	ldp	x22, x21, [sp, #112]
  219260:	ldp	x24, x23, [sp, #96]
  219264:	ldp	x26, x25, [sp, #80]
  219268:	ldp	x28, x27, [sp, #64]
  21926c:	ldp	x29, x30, [sp, #48]
  219270:	add	sp, sp, #0x90
  219274:	ret
  219278:	mov	w0, #0x1                   	// #1
  21927c:	bl	21b140 <now@plt>
  219280:	mov	x1, x23
  219284:	mov	x24, x0
  219288:	bl	21971c <usec_add>
  21928c:	mov	w1, #0x9680                	// #38528
  219290:	mov	x21, x0
  219294:	movk	w1, #0x98, lsl #16
  219298:	mov	x0, x24
  21929c:	bl	21971c <usec_add>
  2192a0:	mov	x22, x0
  2192a4:	cmp	x0, x21
  2192a8:	b.ls	2192bc <wait_for_children+0xa4>  // b.plast
  2192ac:	lsr	x1, x23, #1
  2192b0:	mov	x0, x24
  2192b4:	bl	21971c <usec_add>
  2192b8:	mov	x22, x0
  2192bc:	adrp	x23, 203000 <main.dirs-0x548>
  2192c0:	adrp	x24, 204000 <parse_argv.options+0xa90>
  2192c4:	adrp	x27, 205000 <parse_argv.options+0x1a90>
  2192c8:	mov	w19, #0xfffffffe            	// #-2
  2192cc:	add	x23, x23, #0xace
  2192d0:	add	x24, x24, #0x96e
  2192d4:	add	x27, x27, #0x41f
  2192d8:	b	2192e4 <wait_for_children+0xcc>
  2192dc:	mov	w8, #0x6                   	// #6
  2192e0:	cbnz	w8, 219374 <wait_for_children+0x15c>
  2192e4:	mov	w0, #0xffffffff            	// #-1
  2192e8:	mov	w2, #0x1                   	// #1
  2192ec:	mov	x1, xzr
  2192f0:	bl	21b150 <waitpid@plt>
  2192f4:	cbz	w0, 2192dc <wait_for_children+0xc4>
  2192f8:	tbnz	w0, #31, 219314 <wait_for_children+0xfc>
  2192fc:	bl	2196e0 <PID_TO_PTR>
  219300:	mov	x1, x0
  219304:	mov	x0, x20
  219308:	bl	21973c <set_remove>
  21930c:	mov	w8, wzr
  219310:	b	2192e0 <wait_for_children+0xc8>
  219314:	bl	21abb0 <__errno_location@plt>
  219318:	ldr	w25, [x0]
  21931c:	cmp	w25, #0xa
  219320:	b.eq	2192dc <wait_for_children+0xc4>  // b.none
  219324:	mov	w0, wzr
  219328:	bl	21aae0 <log_get_max_level_realm@plt>
  21932c:	cmp	w0, #0x3
  219330:	b.lt	21935c <wait_for_children+0x144>  // b.tstop
  219334:	mov	w0, #0x3                   	// #3
  219338:	mov	w3, #0x8c                  	// #140
  21933c:	mov	w1, w25
  219340:	mov	x2, x23
  219344:	mov	x4, x24
  219348:	mov	x5, x27
  21934c:	bl	21aaf0 <log_internal_realm@plt>
  219350:	mov	w28, w0
  219354:	mov	w8, #0x1                   	// #1
  219358:	b	2192e0 <wait_for_children+0xc8>
  21935c:	cmp	w25, #0x0
  219360:	mov	w8, wzr
  219364:	cneg	w9, w25, mi  // mi = first
  219368:	sub	w28, w8, w9, uxtb
  21936c:	mov	w8, #0x1                   	// #1
  219370:	b	2192e0 <wait_for_children+0xc8>
  219374:	cmp	w8, #0x6
  219378:	b.ne	2194ac <wait_for_children+0x294>  // b.any
  21937c:	str	w19, [sp, #8]
  219380:	str	xzr, [sp, #16]
  219384:	add	x1, sp, #0x8
  219388:	add	x2, sp, #0x18
  21938c:	mov	x0, x20
  219390:	bl	21b160 <set_iterate@plt>
  219394:	tbz	w0, #0, 2193cc <wait_for_children+0x1b4>
  219398:	ldr	x0, [sp, #24]
  21939c:	bl	219750 <PTR_TO_PID>
  2193a0:	mov	w1, wzr
  2193a4:	bl	21ad10 <kill@plt>
  2193a8:	cbz	w0, 219384 <wait_for_children+0x16c>
  2193ac:	bl	21abb0 <__errno_location@plt>
  2193b0:	ldr	w8, [x0]
  2193b4:	cmp	w8, #0x3
  2193b8:	b.ne	219384 <wait_for_children+0x16c>  // b.any
  2193bc:	ldr	x1, [sp, #24]
  2193c0:	mov	x0, x20
  2193c4:	bl	21973c <set_remove>
  2193c8:	b	219384 <wait_for_children+0x16c>
  2193cc:	mov	x0, x20
  2193d0:	bl	219700 <set_isempty>
  2193d4:	tbz	w0, #0, 2193e8 <wait_for_children+0x1d0>
  2193d8:	mov	w28, wzr
  2193dc:	mov	w8, #0x1                   	// #1
  2193e0:	cbz	w8, 2192e4 <wait_for_children+0xcc>
  2193e4:	b	219254 <wait_for_children+0x3c>
  2193e8:	mov	w0, #0x1                   	// #1
  2193ec:	bl	21b140 <now@plt>
  2193f0:	sub	x8, x22, #0x1
  2193f4:	mov	x25, x0
  2193f8:	cmp	x8, x0
  2193fc:	b.cs	21940c <wait_for_children+0x1f4>  // b.hs, b.nlast
  219400:	mov	x0, x20
  219404:	bl	219754 <log_children_no_yet_killed>
  219408:	mov	x22, xzr
  21940c:	subs	x8, x21, x25
  219410:	b.ls	21949c <wait_for_children+0x284>  // b.plast
  219414:	sub	x9, x22, x25
  219418:	cmp	x8, x9
  21941c:	ccmp	x22, #0x0, #0x4, cs  // cs = hs, nlast
  219420:	csel	x1, x8, x9, eq  // eq = none
  219424:	sub	x0, x29, #0x10
  219428:	bl	21b170 <timespec_store@plt>
  21942c:	ldr	x0, [sp]
  219430:	sub	x2, x29, #0x10
  219434:	mov	x1, xzr
  219438:	bl	21b180 <sigtimedwait@plt>
  21943c:	cmp	w0, #0x11
  219440:	b.eq	219490 <wait_for_children+0x278>  // b.none
  219444:	mov	w26, w0
  219448:	tbz	w0, #31, 21945c <wait_for_children+0x244>
  21944c:	bl	21abb0 <__errno_location@plt>
  219450:	ldr	w25, [x0]
  219454:	cmp	w25, #0xb
  219458:	b.ne	2194b4 <wait_for_children+0x29c>  // b.any
  21945c:	tbnz	w26, #31, 219490 <wait_for_children+0x278>
  219460:	mov	w0, wzr
  219464:	bl	21aae0 <log_get_max_level_realm@plt>
  219468:	cmp	w0, #0x4
  21946c:	b.lt	219490 <wait_for_children+0x278>  // b.tstop
  219470:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219474:	mov	w0, #0x4                   	// #4
  219478:	mov	w3, #0xba                  	// #186
  21947c:	mov	w1, wzr
  219480:	mov	x2, x23
  219484:	mov	x4, x24
  219488:	add	x5, x5, #0x1b8
  21948c:	bl	21aaf0 <log_internal_realm@plt>
  219490:	mov	w8, wzr
  219494:	cbz	w8, 2192e4 <wait_for_children+0xcc>
  219498:	b	219254 <wait_for_children+0x3c>
  21949c:	mov	x0, x20
  2194a0:	bl	219890 <set_size>
  2194a4:	mov	w28, w0
  2194a8:	mov	w8, #0x1                   	// #1
  2194ac:	cbz	w8, 2192e4 <wait_for_children+0xcc>
  2194b0:	b	219254 <wait_for_children+0x3c>
  2194b4:	mov	w0, wzr
  2194b8:	bl	21aae0 <log_get_max_level_realm@plt>
  2194bc:	cmp	w0, #0x3
  2194c0:	b.lt	2194e8 <wait_for_children+0x2d0>  // b.tstop
  2194c4:	adrp	x5, 204000 <parse_argv.options+0xa90>
  2194c8:	mov	w0, #0x3                   	// #3
  2194cc:	mov	w3, #0xb7                  	// #183
  2194d0:	mov	w1, w25
  2194d4:	mov	x2, x23
  2194d8:	mov	x4, x24
  2194dc:	add	x5, x5, #0x76b
  2194e0:	bl	21aaf0 <log_internal_realm@plt>
  2194e4:	b	2194a4 <wait_for_children+0x28c>
  2194e8:	cmp	w25, #0x0
  2194ec:	mov	w8, wzr
  2194f0:	cneg	w9, w25, mi  // mi = first
  2194f4:	sub	w28, w8, w9, uxtb
  2194f8:	mov	w8, #0x1                   	// #1
  2194fc:	cbz	w8, 2192e4 <wait_for_children+0xcc>
  219500:	b	219254 <wait_for_children+0x3c>
  219504:	adrp	x1, 203000 <main.dirs-0x548>
  219508:	adrp	x2, 203000 <main.dirs-0x548>
  21950c:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  219510:	add	x1, x1, #0x7a8
  219514:	add	x2, x2, #0xace
  219518:	add	x4, x4, #0x238
  21951c:	mov	w3, #0x6a                  	// #106
  219520:	mov	w0, wzr
  219524:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000219528 <set_free>:
  219528:	stp	x29, x30, [sp, #-16]!
  21952c:	mov	x1, xzr
  219530:	mov	x2, xzr
  219534:	mov	x29, sp
  219538:	bl	21b190 <internal_hashmap_free@plt>
  21953c:	ldp	x29, x30, [sp], #16
  219540:	ret

0000000000219544 <closedirp>:
  219544:	stp	x29, x30, [sp, #-16]!
  219548:	ldr	x0, [x0]
  21954c:	mov	x29, sp
  219550:	cbz	x0, 219558 <closedirp+0x14>
  219554:	bl	21b1a0 <closedir@plt>
  219558:	ldp	x29, x30, [sp], #16
  21955c:	ret

0000000000219560 <ignore_proc>:
  219560:	stp	x29, x30, [sp, #-48]!
  219564:	str	x21, [sp, #16]
  219568:	stp	x20, x19, [sp, #32]
  21956c:	mov	x29, sp
  219570:	sub	sp, sp, #0x10
  219574:	cmp	w0, #0x2
  219578:	str	xzr, [x29, #24]
  21957c:	sturb	wzr, [x29, #-4]
  219580:	b.lt	219594 <ignore_proc+0x34>  // b.tstop
  219584:	mov	w20, w1
  219588:	mov	w19, w0
  21958c:	bl	21b1b0 <is_kernel_thread@plt>
  219590:	cbz	w0, 2195b8 <ignore_proc+0x58>
  219594:	mov	w21, #0x1                   	// #1
  219598:	add	x0, x29, #0x18
  21959c:	bl	2196e8 <fclosep>
  2195a0:	mov	w0, w21
  2195a4:	mov	sp, x29
  2195a8:	ldp	x20, x19, [sp, #32]
  2195ac:	ldr	x21, [sp, #16]
  2195b0:	ldp	x29, x30, [sp], #48
  2195b4:	ret
  2195b8:	sub	x1, x29, #0x8
  2195bc:	mov	w0, w19
  2195c0:	bl	21b1c0 <get_process_uid@plt>
  2195c4:	tbnz	w0, #31, 219594 <ignore_proc+0x34>
  2195c8:	ldur	w8, [x29, #-8]
  2195cc:	cbz	w8, 2195d8 <ignore_proc+0x78>
  2195d0:	mov	w21, wzr
  2195d4:	b	219598 <ignore_proc+0x38>
  2195d8:	cbz	w19, 2195fc <ignore_proc+0x9c>
  2195dc:	sub	x21, sp, #0x20
  2195e0:	mov	sp, x21
  2195e4:	adrp	x1, 204000 <parse_argv.options+0xa90>
  2195e8:	add	x1, x1, #0x1a7
  2195ec:	mov	x0, x21
  2195f0:	mov	w2, w19
  2195f4:	bl	21b1d0 <sprintf@plt>
  2195f8:	b	219604 <ignore_proc+0xa4>
  2195fc:	adrp	x21, 204000 <parse_argv.options+0xa90>
  219600:	add	x21, x21, #0x78
  219604:	adrp	x1, 203000 <main.dirs-0x548>
  219608:	add	x1, x1, #0x955
  21960c:	mov	x0, x21
  219610:	bl	21ad90 <fopen64@plt>
  219614:	str	x0, [x29, #24]
  219618:	cbz	x0, 219594 <ignore_proc+0x34>
  21961c:	mov	x3, x0
  219620:	sub	x0, x29, #0x4
  219624:	mov	w1, #0x1                   	// #1
  219628:	mov	w2, #0x1                   	// #1
  21962c:	bl	21b1e0 <fread@plt>
  219630:	ldurb	w8, [x29, #-4]
  219634:	cmp	w8, #0x40
  219638:	cset	w21, eq  // eq = none
  21963c:	b.ne	219598 <ignore_proc+0x38>  // b.any
  219640:	tbz	w20, #0, 219598 <ignore_proc+0x38>
  219644:	mov	w0, w19
  219648:	bl	21b1f0 <pid_from_same_root_fs@plt>
  21964c:	cbnz	w0, 219594 <ignore_proc+0x34>
  219650:	sub	x1, x29, #0x10
  219654:	mov	w0, w19
  219658:	stur	xzr, [x29, #-16]
  21965c:	bl	21b110 <get_process_comm@plt>
  219660:	mov	w0, wzr
  219664:	bl	21aae0 <log_get_max_level_realm@plt>
  219668:	cmp	w0, #0x5
  21966c:	b.lt	2196a8 <ignore_proc+0x148>  // b.tstop
  219670:	ldur	x0, [x29, #-16]
  219674:	bl	2196cc <strna>
  219678:	adrp	x2, 203000 <main.dirs-0x548>
  21967c:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  219680:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219684:	mov	x7, x0
  219688:	add	x2, x2, #0xace
  21968c:	add	x4, x4, #0x366
  219690:	add	x5, x5, #0x50e
  219694:	mov	w0, #0x5                   	// #5
  219698:	mov	w3, #0x4a                  	// #74
  21969c:	mov	w1, wzr
  2196a0:	mov	w6, w19
  2196a4:	bl	21aaf0 <log_internal_realm@plt>
  2196a8:	sub	x0, x29, #0x10
  2196ac:	bl	2196b4 <freep>
  2196b0:	b	219594 <ignore_proc+0x34>

00000000002196b4 <freep>:
  2196b4:	stp	x29, x30, [sp, #-16]!
  2196b8:	ldr	x0, [x0]
  2196bc:	mov	x29, sp
  2196c0:	bl	21ac20 <free@plt>
  2196c4:	ldp	x29, x30, [sp], #16
  2196c8:	ret

00000000002196cc <strna>:
  2196cc:	adrp	x8, 204000 <parse_argv.options+0xa90>
  2196d0:	add	x8, x8, #0xad6
  2196d4:	cmp	x0, #0x0
  2196d8:	csel	x0, x8, x0, eq  // eq = none
  2196dc:	ret

00000000002196e0 <PID_TO_PTR>:
  2196e0:	sxtw	x0, w0
  2196e4:	ret

00000000002196e8 <fclosep>:
  2196e8:	stp	x29, x30, [sp, #-16]!
  2196ec:	ldr	x0, [x0]
  2196f0:	mov	x29, sp
  2196f4:	bl	21adc0 <safe_fclose@plt>
  2196f8:	ldp	x29, x30, [sp], #16
  2196fc:	ret

0000000000219700 <set_isempty>:
  219700:	stp	x29, x30, [sp, #-16]!
  219704:	mov	x29, sp
  219708:	bl	219890 <set_size>
  21970c:	cmp	w0, #0x0
  219710:	cset	w0, eq  // eq = none
  219714:	ldp	x29, x30, [sp], #16
  219718:	ret

000000000021971c <usec_add>:
  21971c:	adds	x8, x1, x0
  219720:	cset	w9, cs  // cs = hs, nlast
  219724:	cmp	x8, x1
  219728:	cset	w10, cc  // cc = lo, ul, last
  21972c:	orr	w9, w9, w10
  219730:	cmp	w9, #0x0
  219734:	csinv	x0, x8, xzr, eq  // eq = none
  219738:	ret

000000000021973c <set_remove>:
  21973c:	stp	x29, x30, [sp, #-16]!
  219740:	mov	x29, sp
  219744:	bl	21b200 <internal_hashmap_remove@plt>
  219748:	ldp	x29, x30, [sp], #16
  21974c:	ret

0000000000219750 <PTR_TO_PID>:
  219750:	ret

0000000000219754 <log_children_no_yet_killed>:
  219754:	sub	sp, sp, #0x50
  219758:	stp	x29, x30, [sp, #32]
  21975c:	add	x29, sp, #0x20
  219760:	mov	w8, #0xfffffffe            	// #-2
  219764:	add	x1, sp, #0x10
  219768:	add	x2, sp, #0x8
  21976c:	str	x21, [sp, #48]
  219770:	stp	x20, x19, [sp, #64]
  219774:	mov	x19, x0
  219778:	str	xzr, [x29, #24]
  21977c:	str	w8, [sp, #16]
  219780:	str	xzr, [sp, #24]
  219784:	bl	21b160 <set_iterate@plt>
  219788:	tbz	w0, #0, 219804 <log_children_no_yet_killed+0xb0>
  21978c:	adrp	x20, 204000 <parse_argv.options+0xa90>
  219790:	adrp	x21, 205000 <parse_argv.options+0x1a90>
  219794:	add	x20, x20, #0x94f
  219798:	add	x21, x21, #0xc2
  21979c:	ldr	x0, [sp, #8]
  2197a0:	str	xzr, [sp]
  2197a4:	bl	219750 <PTR_TO_PID>
  2197a8:	mov	x1, sp
  2197ac:	bl	21b110 <get_process_comm@plt>
  2197b0:	tbz	w0, #31, 2197cc <log_children_no_yet_killed+0x78>
  2197b4:	ldr	x0, [sp, #8]
  2197b8:	bl	219750 <PTR_TO_PID>
  2197bc:	mov	w2, w0
  2197c0:	mov	x0, sp
  2197c4:	mov	x1, x20
  2197c8:	bl	21b210 <asprintf@plt>
  2197cc:	ldr	x3, [sp]
  2197d0:	add	x0, x29, #0x18
  2197d4:	mov	x1, xzr
  2197d8:	mov	x2, x21
  2197dc:	mov	x4, xzr
  2197e0:	bl	21ae20 <strextend_with_separator@plt>
  2197e4:	cbz	x0, 219854 <log_children_no_yet_killed+0x100>
  2197e8:	mov	x0, sp
  2197ec:	bl	2196b4 <freep>
  2197f0:	add	x1, sp, #0x10
  2197f4:	add	x2, sp, #0x8
  2197f8:	mov	x0, x19
  2197fc:	bl	21b160 <set_iterate@plt>
  219800:	tbnz	w0, #0, 21979c <log_children_no_yet_killed+0x48>
  219804:	ldr	x19, [x29, #24]
  219808:	mov	x0, x19
  21980c:	bl	2198a4 <isempty>
  219810:	tbnz	w0, #0, 219874 <log_children_no_yet_killed+0x120>
  219814:	mov	w0, wzr
  219818:	bl	21aae0 <log_get_max_level_realm@plt>
  21981c:	cmp	w0, #0x4
  219820:	b.lt	219874 <log_children_no_yet_killed+0x120>  // b.tstop
  219824:	adrp	x2, 203000 <main.dirs-0x548>
  219828:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21982c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219830:	add	x6, x19, #0x2
  219834:	add	x2, x2, #0xace
  219838:	add	x4, x4, #0x8b
  21983c:	add	x5, x5, #0xc78
  219840:	mov	w0, #0x4                   	// #4
  219844:	mov	w3, #0x64                  	// #100
  219848:	mov	w1, wzr
  21984c:	bl	21aaf0 <log_internal_realm@plt>
  219850:	b	219874 <log_children_no_yet_killed+0x120>
  219854:	adrp	x1, 203000 <main.dirs-0x548>
  219858:	adrp	x3, 204000 <parse_argv.options+0xa90>
  21985c:	add	x1, x1, #0xace
  219860:	add	x3, x3, #0x8b
  219864:	mov	w2, #0x5c                  	// #92
  219868:	bl	21ae50 <log_oom_internal@plt>
  21986c:	mov	x0, sp
  219870:	bl	2196b4 <freep>
  219874:	add	x0, x29, #0x18
  219878:	bl	2196b4 <freep>
  21987c:	ldp	x20, x19, [sp, #64]
  219880:	ldr	x21, [sp, #48]
  219884:	ldp	x29, x30, [sp, #32]
  219888:	add	sp, sp, #0x50
  21988c:	ret

0000000000219890 <set_size>:
  219890:	stp	x29, x30, [sp, #-16]!
  219894:	mov	x29, sp
  219898:	bl	21b220 <internal_hashmap_size@plt>
  21989c:	ldp	x29, x30, [sp], #16
  2198a0:	ret

00000000002198a4 <isempty>:
  2198a4:	cbz	x0, 2198b8 <isempty+0x14>
  2198a8:	ldrb	w8, [x0]
  2198ac:	cmp	w8, #0x0
  2198b0:	cset	w0, eq  // eq = none
  2198b4:	ret
  2198b8:	mov	w0, #0x1                   	// #1
  2198bc:	ret

00000000002198c0 <mount_point_is_api>:
  2198c0:	stp	x29, x30, [sp, #-48]!
  2198c4:	str	x21, [sp, #16]
  2198c8:	adrp	x21, 22b000 <__lxstat64@plt+0xfc20>
  2198cc:	stp	x20, x19, [sp, #32]
  2198d0:	mov	x29, sp
  2198d4:	mov	x19, x0
  2198d8:	mov	w20, #0x8                   	// #8
  2198dc:	add	x21, x21, #0x400
  2198e0:	ldr	x1, [x21, x20]
  2198e4:	mov	x0, x19
  2198e8:	bl	21b030 <path_equal@plt>
  2198ec:	tbnz	w0, #0, 219918 <mount_point_is_api+0x58>
  2198f0:	add	x20, x20, #0x38
  2198f4:	cmp	x20, #0x468
  2198f8:	b.ne	2198e0 <mount_point_is_api+0x20>  // b.any
  2198fc:	adrp	x1, 203000 <main.dirs-0x548>
  219900:	add	x1, x1, #0x86a
  219904:	mov	x0, x19
  219908:	bl	21b040 <path_startswith@plt>
  21990c:	cmp	x0, #0x0
  219910:	cset	w0, ne  // ne = any
  219914:	b	21991c <mount_point_is_api+0x5c>
  219918:	mov	w0, #0x1                   	// #1
  21991c:	ldp	x20, x19, [sp, #32]
  219920:	ldr	x21, [sp, #16]
  219924:	ldp	x29, x30, [sp], #48
  219928:	ret

000000000021992c <mount_point_ignore>:
  21992c:	stp	x29, x30, [sp, #-32]!
  219930:	stp	x20, x19, [sp, #16]
  219934:	adrp	x20, 205000 <parse_argv.options+0x1a90>
  219938:	mov	x19, x0
  21993c:	add	x20, x20, #0x4ef
  219940:	mov	x29, sp
  219944:	mov	x0, x19
  219948:	mov	x1, x20
  21994c:	bl	21b030 <path_equal@plt>
  219950:	tbnz	w0, #0, 219970 <mount_point_ignore+0x44>
  219954:	mov	x0, x20
  219958:	bl	21b230 <strlen@plt>
  21995c:	add	x20, x20, x0
  219960:	ldrb	w8, [x20, #1]!
  219964:	cbnz	w8, 219944 <mount_point_ignore+0x18>
  219968:	mov	w0, wzr
  21996c:	b	219974 <mount_point_ignore+0x48>
  219970:	mov	w0, #0x1                   	// #1
  219974:	ldp	x20, x19, [sp, #16]
  219978:	ldp	x29, x30, [sp], #32
  21997c:	ret

0000000000219980 <mount_setup_early>:
  219980:	stp	x29, x30, [sp, #-16]!
  219984:	mov	w0, #0x5                   	// #5
  219988:	mov	w1, wzr
  21998c:	mov	x29, sp
  219990:	bl	21999c <mount_points_setup>
  219994:	ldp	x29, x30, [sp], #16
  219998:	ret

000000000021999c <mount_points_setup>:
  21999c:	stp	x29, x30, [sp, #-64]!
  2199a0:	stp	x20, x19, [sp, #48]
  2199a4:	mov	w19, wzr
  2199a8:	str	x23, [sp, #16]
  2199ac:	stp	x22, x21, [sp, #32]
  2199b0:	mov	x29, sp
  2199b4:	cbz	w0, 2199f0 <mount_points_setup+0x54>
  2199b8:	adrp	x20, 22b000 <__lxstat64@plt+0xfc20>
  2199bc:	mov	w22, w0
  2199c0:	add	x20, x20, #0x400
  2199c4:	and	w21, w1, #0x1
  2199c8:	mov	w23, #0xffffffff            	// #-1
  2199cc:	mov	x0, x20
  2199d0:	mov	w1, w21
  2199d4:	bl	219da4 <mount_one>
  2199d8:	cmp	w0, #0x0
  2199dc:	ccmp	w19, w23, #0x4, ne  // ne = any
  2199e0:	csel	w19, w0, w19, gt
  2199e4:	subs	x22, x22, #0x1
  2199e8:	add	x20, x20, #0x38
  2199ec:	b.ne	2199cc <mount_points_setup+0x30>  // b.any
  2199f0:	mov	w0, w19
  2199f4:	ldp	x20, x19, [sp, #48]
  2199f8:	ldp	x22, x21, [sp, #32]
  2199fc:	ldr	x23, [sp, #16]
  219a00:	ldp	x29, x30, [sp], #64
  219a04:	ret

0000000000219a08 <mount_cgroup_controllers>:
  219a08:	sub	sp, sp, #0xd0
  219a0c:	stp	x29, x30, [sp, #112]
  219a10:	add	x29, sp, #0x70
  219a14:	stp	x28, x27, [sp, #128]
  219a18:	stp	x26, x25, [sp, #144]
  219a1c:	stp	x24, x23, [sp, #160]
  219a20:	stp	x22, x21, [sp, #176]
  219a24:	stp	x20, x19, [sp, #192]
  219a28:	stur	xzr, [x29, #-8]
  219a2c:	bl	21b240 <cg_is_legacy_wanted@plt>
  219a30:	tbz	w0, #0, 219c1c <mount_cgroup_controllers+0x214>
  219a34:	sub	x0, x29, #0x8
  219a38:	bl	21b250 <cg_kernel_controllers@plt>
  219a3c:	tbnz	w0, #31, 219c4c <mount_cgroup_controllers+0x244>
  219a40:	adrp	x26, 204000 <parse_argv.options+0xa90>
  219a44:	adrp	x19, 204000 <parse_argv.options+0xa90>
  219a48:	adrp	x20, 203000 <main.dirs-0x548>
  219a4c:	adrp	x21, 203000 <main.dirs-0x548>
  219a50:	adrp	x22, 205000 <parse_argv.options+0x1a90>
  219a54:	add	x26, x26, #0x70d
  219a58:	mov	w27, #0xe                   	// #14
  219a5c:	add	x19, x19, #0x15e
  219a60:	add	x20, x20, #0xea6
  219a64:	add	x21, x21, #0x87a
  219a68:	add	x22, x22, #0x17e
  219a6c:	b	219aa4 <mount_cgroup_controllers+0x9c>
  219a70:	mov	w2, #0x152                 	// #338
  219a74:	mov	x1, x20
  219a78:	mov	x3, x21
  219a7c:	bl	21ae50 <log_oom_internal@plt>
  219a80:	mov	w23, w0
  219a84:	mov	w28, #0x1                   	// #1
  219a88:	sub	x0, x29, #0x20
  219a8c:	bl	219cbc <freep>
  219a90:	sub	x0, x29, #0x18
  219a94:	bl	219cbc <freep>
  219a98:	sub	x0, x29, #0x10
  219a9c:	bl	219cbc <freep>
  219aa0:	cbnz	w28, 219bec <mount_cgroup_controllers+0x1e4>
  219aa4:	ldur	x0, [x29, #-8]
  219aa8:	movi	v0.2d, #0x0
  219aac:	mov	w28, #0x2                   	// #2
  219ab0:	stp	xzr, xzr, [x29, #-24]
  219ab4:	stur	xzr, [x29, #-32]
  219ab8:	stp	q0, q0, [sp, #16]
  219abc:	str	q0, [sp, #48]
  219ac0:	str	xzr, [sp, #64]
  219ac4:	str	x26, [sp, #16]
  219ac8:	str	x26, [sp, #32]
  219acc:	str	x27, [sp, #48]
  219ad0:	str	w28, [sp, #64]
  219ad4:	bl	219cd4 <set_steal_first>
  219ad8:	stur	x0, [x29, #-24]
  219adc:	cbz	x0, 219a88 <mount_cgroup_controllers+0x80>
  219ae0:	mov	x25, x0
  219ae4:	bl	219cf0 <join_with>
  219ae8:	mov	x24, x0
  219aec:	cbz	x0, 219b70 <mount_cgroup_controllers+0x168>
  219af0:	ldur	x0, [x29, #-8]
  219af4:	mov	x1, x24
  219af8:	str	xzr, [sp, #8]
  219afc:	bl	219d90 <set_remove>
  219b00:	str	x0, [sp, #8]
  219b04:	cbz	x0, 219b44 <mount_cgroup_controllers+0x13c>
  219b08:	mov	x0, x25
  219b0c:	mov	x1, x24
  219b10:	bl	21aa80 <strcmp@plt>
  219b14:	tbz	w0, #31, 219b28 <mount_cgroup_controllers+0x120>
  219b18:	mov	x0, x25
  219b1c:	mov	x1, x19
  219b20:	mov	x2, x24
  219b24:	b	219b34 <mount_cgroup_controllers+0x12c>
  219b28:	mov	x0, x24
  219b2c:	mov	x1, x19
  219b30:	mov	x2, x25
  219b34:	mov	x3, xzr
  219b38:	bl	21b260 <strjoin_real@plt>
  219b3c:	stur	x0, [x29, #-16]
  219b40:	cbz	x0, 219b4c <mount_cgroup_controllers+0x144>
  219b44:	mov	w28, wzr
  219b48:	b	219b64 <mount_cgroup_controllers+0x15c>
  219b4c:	mov	w2, #0x148                 	// #328
  219b50:	mov	x1, x20
  219b54:	mov	x3, x21
  219b58:	bl	21ae50 <log_oom_internal@plt>
  219b5c:	mov	w23, w0
  219b60:	mov	w28, #0x1                   	// #1
  219b64:	add	x0, sp, #0x8
  219b68:	bl	219cbc <freep>
  219b6c:	cbnz	w28, 219a88 <mount_cgroup_controllers+0x80>
  219b70:	ldur	x8, [x29, #-16]
  219b74:	cbnz	x8, 219b80 <mount_cgroup_controllers+0x178>
  219b78:	ldur	x8, [x29, #-24]
  219b7c:	stp	xzr, x8, [x29, #-24]
  219b80:	ldur	x25, [x29, #-16]
  219b84:	mov	x2, #0xffffffffffffffff    	// #-1
  219b88:	mov	x0, x22
  219b8c:	mov	x1, x25
  219b90:	bl	21b270 <path_join_internal@plt>
  219b94:	stur	x0, [x29, #-32]
  219b98:	cbz	x0, 219a70 <mount_cgroup_controllers+0x68>
  219b9c:	ldur	x8, [x29, #-16]
  219ba0:	str	x0, [sp, #24]
  219ba4:	add	x0, sp, #0x10
  219ba8:	mov	w1, #0x1                   	// #1
  219bac:	str	x8, [sp, #40]
  219bb0:	mov	w28, #0x1                   	// #1
  219bb4:	bl	219da4 <mount_one>
  219bb8:	tbnz	w0, #31, 219be4 <mount_cgroup_controllers+0x1dc>
  219bbc:	ldur	x1, [x29, #-24]
  219bc0:	cbz	x1, 219bcc <mount_cgroup_controllers+0x1c4>
  219bc4:	mov	x0, x25
  219bc8:	bl	21a02c <symlink_controller>
  219bcc:	cbz	x24, 219bdc <mount_cgroup_controllers+0x1d4>
  219bd0:	mov	x0, x25
  219bd4:	mov	x1, x24
  219bd8:	bl	21a02c <symlink_controller>
  219bdc:	mov	w28, wzr
  219be0:	b	219a88 <mount_cgroup_controllers+0x80>
  219be4:	mov	w23, w0
  219be8:	b	219a88 <mount_cgroup_controllers+0x80>
  219bec:	cmp	w28, #0x2
  219bf0:	b.ne	219c20 <mount_cgroup_controllers+0x218>  // b.any
  219bf4:	adrp	x0, 204000 <parse_argv.options+0xa90>
  219bf8:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  219bfc:	add	x0, x0, #0x785
  219c00:	adrp	x4, 203000 <main.dirs-0x548>
  219c04:	mov	w3, #0x2f                  	// #47
  219c08:	add	x1, x1, #0x17e
  219c0c:	add	x4, x4, #0xce3
  219c10:	movk	w3, #0x100, lsl #16
  219c14:	mov	x2, x0
  219c18:	bl	21ad20 <mount@plt>
  219c1c:	mov	w23, wzr
  219c20:	sub	x0, x29, #0x8
  219c24:	bl	219ca0 <set_free_freep>
  219c28:	mov	w0, w23
  219c2c:	ldp	x20, x19, [sp, #192]
  219c30:	ldp	x22, x21, [sp, #176]
  219c34:	ldp	x24, x23, [sp, #160]
  219c38:	ldp	x26, x25, [sp, #144]
  219c3c:	ldp	x28, x27, [sp, #128]
  219c40:	ldp	x29, x30, [sp, #112]
  219c44:	add	sp, sp, #0xd0
  219c48:	ret
  219c4c:	mov	w19, w0
  219c50:	mov	w0, wzr
  219c54:	bl	21aae0 <log_get_max_level_realm@plt>
  219c58:	cmp	w0, #0x3
  219c5c:	b.lt	219c90 <mount_cgroup_controllers+0x288>  // b.tstop
  219c60:	adrp	x2, 203000 <main.dirs-0x548>
  219c64:	adrp	x4, 203000 <main.dirs-0x548>
  219c68:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219c6c:	add	x2, x2, #0xea6
  219c70:	add	x4, x4, #0x87a
  219c74:	add	x5, x5, #0x46d
  219c78:	mov	w0, #0x3                   	// #3
  219c7c:	mov	w3, #0x129                 	// #297
  219c80:	mov	w1, w19
  219c84:	bl	21aaf0 <log_internal_realm@plt>
  219c88:	mov	w23, w0
  219c8c:	b	219c20 <mount_cgroup_controllers+0x218>
  219c90:	mov	w8, wzr
  219c94:	neg	w9, w19
  219c98:	sub	w23, w8, w9, uxtb
  219c9c:	b	219c20 <mount_cgroup_controllers+0x218>

0000000000219ca0 <set_free_freep>:
  219ca0:	stp	x29, x30, [sp, #-16]!
  219ca4:	ldr	x0, [x0]
  219ca8:	mov	x29, sp
  219cac:	cbz	x0, 219cb4 <set_free_freep+0x14>
  219cb0:	bl	21a880 <set_free_free>
  219cb4:	ldp	x29, x30, [sp], #16
  219cb8:	ret

0000000000219cbc <freep>:
  219cbc:	stp	x29, x30, [sp, #-16]!
  219cc0:	ldr	x0, [x0]
  219cc4:	mov	x29, sp
  219cc8:	bl	21ac20 <free@plt>
  219ccc:	ldp	x29, x30, [sp], #16
  219cd0:	ret

0000000000219cd4 <set_steal_first>:
  219cd4:	stp	x29, x30, [sp, #-16]!
  219cd8:	mov	w1, #0x1                   	// #1
  219cdc:	mov	x2, xzr
  219ce0:	mov	x29, sp
  219ce4:	bl	21b280 <internal_hashmap_first_key_and_value@plt>
  219ce8:	ldp	x29, x30, [sp], #16
  219cec:	ret

0000000000219cf0 <join_with>:
  219cf0:	stp	x29, x30, [sp, #-48]!
  219cf4:	stp	x22, x21, [sp, #16]
  219cf8:	stp	x20, x19, [sp, #32]
  219cfc:	mov	x29, sp
  219d00:	cbz	x0, 219d70 <join_with+0x80>
  219d04:	adrp	x19, 204000 <parse_argv.options+0xa90>
  219d08:	adrp	x22, 22b000 <__lxstat64@plt+0xfc20>
  219d0c:	mov	x20, x0
  219d10:	add	x19, x19, #0xbd3
  219d14:	add	x22, x22, #0x868
  219d18:	ldr	x21, [x22]
  219d1c:	cbz	x21, 219d50 <join_with+0x60>
  219d20:	mov	x0, x20
  219d24:	mov	x1, x19
  219d28:	bl	21aa80 <strcmp@plt>
  219d2c:	cbz	w0, 219d58 <join_with+0x68>
  219d30:	mov	x0, x20
  219d34:	mov	x1, x21
  219d38:	bl	21aa80 <strcmp@plt>
  219d3c:	cbz	w0, 219d5c <join_with+0x6c>
  219d40:	ldr	x19, [x22, #8]
  219d44:	add	x22, x22, #0x10
  219d48:	cbnz	x19, 219d18 <join_with+0x28>
  219d4c:	b	219d5c <join_with+0x6c>
  219d50:	mov	x19, xzr
  219d54:	b	219d5c <join_with+0x6c>
  219d58:	mov	x19, x21
  219d5c:	mov	x0, x19
  219d60:	ldp	x20, x19, [sp, #32]
  219d64:	ldp	x22, x21, [sp, #16]
  219d68:	ldp	x29, x30, [sp], #48
  219d6c:	ret
  219d70:	adrp	x1, 203000 <main.dirs-0x548>
  219d74:	adrp	x2, 203000 <main.dirs-0x548>
  219d78:	adrp	x4, 204000 <parse_argv.options+0xa90>
  219d7c:	add	x1, x1, #0x893
  219d80:	add	x2, x2, #0xea6
  219d84:	add	x4, x4, #0xdc2
  219d88:	mov	w3, #0xf5                  	// #245
  219d8c:	bl	21acc0 <log_assert_failed_realm@plt>

0000000000219d90 <set_remove>:
  219d90:	stp	x29, x30, [sp, #-16]!
  219d94:	mov	x29, sp
  219d98:	bl	21b200 <internal_hashmap_remove@plt>
  219d9c:	ldp	x29, x30, [sp], #16
  219da0:	ret

0000000000219da4 <mount_one>:
  219da4:	sub	sp, sp, #0x50
  219da8:	stp	x29, x30, [sp, #16]
  219dac:	stp	x24, x23, [sp, #32]
  219db0:	stp	x22, x21, [sp, #48]
  219db4:	stp	x20, x19, [sp, #64]
  219db8:	add	x29, sp, #0x10
  219dbc:	cbz	x0, 21a00c <mount_one+0x268>
  219dc0:	ldrb	w9, [x0, #48]
  219dc4:	ldr	x8, [x0, #40]
  219dc8:	mov	w10, #0x3                   	// #3
  219dcc:	mov	w21, w1
  219dd0:	tst	w9, #0x1
  219dd4:	mov	w9, #0x7                   	// #7
  219dd8:	mov	x19, x0
  219ddc:	csel	w20, w9, w10, eq  // eq = none
  219de0:	cbz	x8, 219dec <mount_one+0x48>
  219de4:	blr	x8
  219de8:	tbz	w0, #0, 219e70 <mount_one+0xcc>
  219dec:	tbz	w21, #0, 219dfc <mount_one+0x58>
  219df0:	ldr	x0, [x19, #8]
  219df4:	mov	w1, #0x3                   	// #3
  219df8:	bl	21b290 <label_fix@plt>
  219dfc:	ldr	x0, [x19, #8]
  219e00:	mov	w2, #0x400                 	// #1024
  219e04:	mov	x1, xzr
  219e08:	bl	21b2a0 <path_is_mount_point@plt>
  219e0c:	mov	w22, w0
  219e10:	tbz	w0, #31, 219e68 <mount_one+0xc4>
  219e14:	cmn	w22, #0x2
  219e18:	b.eq	219e68 <mount_one+0xc4>  // b.none
  219e1c:	mov	w0, wzr
  219e20:	bl	21aae0 <log_get_max_level_realm@plt>
  219e24:	cmp	w0, w20
  219e28:	b.lt	219e58 <mount_one+0xb4>  // b.tstop
  219e2c:	ldr	x6, [x19, #8]
  219e30:	adrp	x2, 203000 <main.dirs-0x548>
  219e34:	adrp	x4, 204000 <parse_argv.options+0xa90>
  219e38:	adrp	x5, 203000 <main.dirs-0x548>
  219e3c:	add	x2, x2, #0xea6
  219e40:	add	x4, x4, #0xbd7
  219e44:	add	x5, x5, #0xebd
  219e48:	mov	w3, #0xa1                  	// #161
  219e4c:	mov	w0, w20
  219e50:	mov	w1, w22
  219e54:	bl	21aaf0 <log_internal_realm@plt>
  219e58:	ldrb	w8, [x19, #48]
  219e5c:	sbfx	w8, w8, #0, #1
  219e60:	and	w0, w8, w22
  219e64:	b	219e74 <mount_one+0xd0>
  219e68:	cmp	w22, #0x0
  219e6c:	b.le	219e8c <mount_one+0xe8>
  219e70:	mov	w0, wzr
  219e74:	ldp	x20, x19, [sp, #64]
  219e78:	ldp	x22, x21, [sp, #48]
  219e7c:	ldp	x24, x23, [sp, #32]
  219e80:	ldp	x29, x30, [sp, #16]
  219e84:	add	sp, sp, #0x50
  219e88:	ret
  219e8c:	ldrb	w8, [x19, #48]
  219e90:	tbnz	w8, #1, 219ea0 <mount_one+0xfc>
  219e94:	bl	21aaa0 <detect_container@plt>
  219e98:	cmp	w0, #0x0
  219e9c:	b.gt	219e70 <mount_one+0xcc>
  219ea0:	ldr	x0, [x19, #8]
  219ea4:	mov	w1, #0x1ed                 	// #493
  219ea8:	tbz	w21, #0, 219eb4 <mount_one+0x110>
  219eac:	bl	21b2b0 <mkdir_p_label@plt>
  219eb0:	b	219eb8 <mount_one+0x114>
  219eb4:	bl	21b2c0 <mkdir_p@plt>
  219eb8:	mov	w0, wzr
  219ebc:	bl	21aae0 <log_get_max_level_realm@plt>
  219ec0:	cmp	w0, #0x7
  219ec4:	b.lt	219f08 <mount_one+0x164>  // b.tstop
  219ec8:	ldp	x24, x0, [x19, #16]
  219ecc:	ldp	x22, x23, [x19]
  219ed0:	bl	21a8a0 <strna>
  219ed4:	adrp	x2, 203000 <main.dirs-0x548>
  219ed8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  219edc:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219ee0:	add	x2, x2, #0xea6
  219ee4:	add	x4, x4, #0xbd7
  219ee8:	add	x5, x5, #0xbb
  219eec:	stp	x24, x0, [sp]
  219ef0:	mov	w0, #0x7                   	// #7
  219ef4:	mov	w3, #0xb6                  	// #182
  219ef8:	mov	w1, wzr
  219efc:	mov	x6, x22
  219f00:	mov	x7, x23
  219f04:	bl	21aaf0 <log_internal_realm@plt>
  219f08:	ldp	x0, x1, [x19]
  219f0c:	ldp	x4, x3, [x19, #24]
  219f10:	ldr	x2, [x19, #16]
  219f14:	bl	21ad20 <mount@plt>
  219f18:	tbnz	w0, #31, 219f4c <mount_one+0x1a8>
  219f1c:	tbz	w21, #0, 219f2c <mount_one+0x188>
  219f20:	ldr	x0, [x19, #8]
  219f24:	mov	w1, wzr
  219f28:	bl	21b290 <label_fix@plt>
  219f2c:	ldrb	w8, [x19, #48]
  219f30:	tbz	w8, #2, 219f44 <mount_one+0x1a0>
  219f34:	ldr	x0, [x19, #8]
  219f38:	mov	w1, #0x2                   	// #2
  219f3c:	bl	21ab30 <access@plt>
  219f40:	tbnz	w0, #31, 219fa4 <mount_one+0x200>
  219f44:	mov	w0, #0x1                   	// #1
  219f48:	b	219e74 <mount_one+0xd0>
  219f4c:	bl	21abb0 <__errno_location@plt>
  219f50:	mov	x21, x0
  219f54:	mov	w0, wzr
  219f58:	bl	21aae0 <log_get_max_level_realm@plt>
  219f5c:	cmp	w0, w20
  219f60:	b.lt	219f90 <mount_one+0x1ec>  // b.tstop
  219f64:	ldr	w1, [x21]
  219f68:	ldp	x7, x6, [x19, #8]
  219f6c:	adrp	x2, 203000 <main.dirs-0x548>
  219f70:	adrp	x4, 204000 <parse_argv.options+0xa90>
  219f74:	adrp	x5, 204000 <parse_argv.options+0xa90>
  219f78:	add	x2, x2, #0xea6
  219f7c:	add	x4, x4, #0xbd7
  219f80:	add	x5, x5, #0x78b
  219f84:	mov	w3, #0xbd                  	// #189
  219f88:	mov	w0, w20
  219f8c:	bl	21aaf0 <log_internal_realm@plt>
  219f90:	ldrb	w8, [x19, #48]
  219f94:	tbz	w8, #0, 219e70 <mount_one+0xcc>
  219f98:	ldr	w8, [x21]
  219f9c:	neg	w0, w8
  219fa0:	b	219e74 <mount_one+0xd0>
  219fa4:	bl	21abb0 <__errno_location@plt>
  219fa8:	ldr	w8, [x0]
  219fac:	ldr	x0, [x19, #8]
  219fb0:	neg	w21, w8
  219fb4:	bl	21b2d0 <umount@plt>
  219fb8:	ldr	x0, [x19, #8]
  219fbc:	bl	21b2e0 <rmdir@plt>
  219fc0:	mov	w0, wzr
  219fc4:	bl	21aae0 <log_get_max_level_realm@plt>
  219fc8:	cmp	w0, w20
  219fcc:	b.lt	219ffc <mount_one+0x258>  // b.tstop
  219fd0:	ldr	x6, [x19, #8]
  219fd4:	adrp	x2, 203000 <main.dirs-0x548>
  219fd8:	adrp	x4, 204000 <parse_argv.options+0xa90>
  219fdc:	adrp	x5, 203000 <main.dirs-0x548>
  219fe0:	add	x2, x2, #0xea6
  219fe4:	add	x4, x4, #0xbd7
  219fe8:	add	x5, x5, #0x7d1
  219fec:	mov	w3, #0xcc                  	// #204
  219ff0:	mov	w0, w20
  219ff4:	mov	w1, w21
  219ff8:	bl	21aaf0 <log_internal_realm@plt>
  219ffc:	ldrb	w8, [x19, #48]
  21a000:	sbfx	w8, w8, #0, #1
  21a004:	and	w0, w8, w21
  21a008:	b	219e74 <mount_one+0xd0>
  21a00c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21a010:	adrp	x2, 203000 <main.dirs-0x548>
  21a014:	adrp	x4, 203000 <main.dirs-0x548>
  21a018:	add	x1, x1, #0x9d8
  21a01c:	add	x2, x2, #0xea6
  21a020:	add	x4, x4, #0xfb5
  21a024:	mov	w3, #0x94                  	// #148
  21a028:	bl	21acc0 <log_assert_failed_realm@plt>

000000000021a02c <symlink_controller>:
  21a02c:	stp	x29, x30, [sp, #-48]!
  21a030:	stp	x22, x21, [sp, #16]
  21a034:	stp	x20, x19, [sp, #32]
  21a038:	mov	x29, sp
  21a03c:	sub	sp, sp, #0x10
  21a040:	cbz	x0, 21a13c <symlink_controller+0x110>
  21a044:	cbz	x1, 21a15c <symlink_controller+0x130>
  21a048:	adrp	x8, 203000 <main.dirs-0x548>
  21a04c:	mov	x19, x0
  21a050:	mov	x21, xzr
  21a054:	mov	x20, xzr
  21a058:	add	x8, x8, #0x86a
  21a05c:	sub	x22, x29, #0x10
  21a060:	stp	x8, x1, [x29, #-16]
  21a064:	ldr	x0, [x22, x21]
  21a068:	cbz	x0, 21a080 <symlink_controller+0x54>
  21a06c:	bl	21b230 <strlen@plt>
  21a070:	add	x21, x21, #0x8
  21a074:	cmp	x21, #0x10
  21a078:	add	x20, x0, x20
  21a07c:	b.ne	21a064 <symlink_controller+0x38>  // b.any
  21a080:	add	x20, x20, #0x1
  21a084:	mov	x0, x20
  21a088:	bl	21a8b4 <size_multiply_overflow>
  21a08c:	tbnz	w0, #0, 21a180 <symlink_controller+0x154>
  21a090:	cmp	x20, #0x400, lsl #12
  21a094:	b.hi	21a18c <symlink_controller+0x160>  // b.pmore
  21a098:	add	x9, x20, #0xf
  21a09c:	mov	x8, sp
  21a0a0:	and	x9, x9, #0xfffffffffffffff0
  21a0a4:	sub	x20, x8, x9
  21a0a8:	mov	sp, x20
  21a0ac:	mov	x21, xzr
  21a0b0:	sub	x22, x29, #0x10
  21a0b4:	mov	x0, x20
  21a0b8:	ldr	x1, [x22, x21]
  21a0bc:	cbz	x1, 21a0d0 <symlink_controller+0xa4>
  21a0c0:	bl	21b2f0 <stpcpy@plt>
  21a0c4:	add	x21, x21, #0x8
  21a0c8:	cmp	x21, #0x10
  21a0cc:	b.ne	21a0b8 <symlink_controller+0x8c>  // b.any
  21a0d0:	strb	wzr, [x0]
  21a0d4:	mov	x0, x19
  21a0d8:	mov	x1, x20
  21a0dc:	mov	w2, wzr
  21a0e0:	bl	21b300 <symlink_idempotent@plt>
  21a0e4:	tbz	w0, #31, 21a128 <symlink_controller+0xfc>
  21a0e8:	mov	w19, w0
  21a0ec:	mov	w0, wzr
  21a0f0:	bl	21aae0 <log_get_max_level_realm@plt>
  21a0f4:	cmp	w0, #0x3
  21a0f8:	b.lt	21a128 <symlink_controller+0xfc>  // b.tstop
  21a0fc:	adrp	x2, 203000 <main.dirs-0x548>
  21a100:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21a104:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21a108:	add	x2, x2, #0xea6
  21a10c:	add	x4, x4, #0x7ae
  21a110:	add	x5, x5, #0xb1f
  21a114:	mov	w0, #0x3                   	// #3
  21a118:	mov	w3, #0x110                 	// #272
  21a11c:	mov	w1, w19
  21a120:	mov	x6, x20
  21a124:	bl	21aaf0 <log_internal_realm@plt>
  21a128:	mov	sp, x29
  21a12c:	ldp	x20, x19, [sp, #32]
  21a130:	ldp	x22, x21, [sp, #16]
  21a134:	ldp	x29, x30, [sp], #48
  21a138:	ret
  21a13c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21a140:	adrp	x2, 203000 <main.dirs-0x548>
  21a144:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21a148:	add	x1, x1, #0x9da
  21a14c:	add	x2, x2, #0xea6
  21a150:	add	x4, x4, #0x84d
  21a154:	mov	w3, #0x109                 	// #265
  21a158:	bl	21acc0 <log_assert_failed_realm@plt>
  21a15c:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21a160:	adrp	x2, 203000 <main.dirs-0x548>
  21a164:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21a168:	add	x1, x1, #0x7a8
  21a16c:	add	x2, x2, #0xea6
  21a170:	add	x4, x4, #0x84d
  21a174:	mov	w3, #0x10a                 	// #266
  21a178:	mov	w0, wzr
  21a17c:	bl	21acc0 <log_assert_failed_realm@plt>
  21a180:	adrp	x1, 204000 <parse_argv.options+0xa90>
  21a184:	add	x1, x1, #0x354
  21a188:	b	21a194 <symlink_controller+0x168>
  21a18c:	adrp	x1, 203000 <main.dirs-0x548>
  21a190:	add	x1, x1, #0xa0c
  21a194:	adrp	x2, 203000 <main.dirs-0x548>
  21a198:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21a19c:	add	x2, x2, #0xea6
  21a1a0:	add	x4, x4, #0x84d
  21a1a4:	mov	w3, #0x10c                 	// #268
  21a1a8:	mov	w0, wzr
  21a1ac:	bl	21acc0 <log_assert_failed_realm@plt>

000000000021a1b0 <mount_setup>:
  21a1b0:	sub	sp, sp, #0x90
  21a1b4:	stp	x20, x19, [sp, #128]
  21a1b8:	mov	w19, w0
  21a1bc:	and	w1, w0, #0x1
  21a1c0:	mov	w0, #0x14                  	// #20
  21a1c4:	stp	x29, x30, [sp, #96]
  21a1c8:	str	x21, [sp, #112]
  21a1cc:	add	x29, sp, #0x60
  21a1d0:	bl	21999c <mount_points_setup>
  21a1d4:	tbnz	w0, #31, 21a364 <mount_setup+0x1b4>
  21a1d8:	tbz	w19, #0, 21a2b4 <mount_setup+0x104>
  21a1dc:	mov	w0, #0x1                   	// #1
  21a1e0:	bl	21b140 <now@plt>
  21a1e4:	mov	x19, x0
  21a1e8:	adrp	x0, 204000 <parse_argv.options+0xa90>
  21a1ec:	mov	x8, sp
  21a1f0:	adrp	x9, 203000 <main.dirs-0x548>
  21a1f4:	adrp	x10, 204000 <parse_argv.options+0xa90>
  21a1f8:	adrp	x20, 21a000 <mount_one+0x25c>
  21a1fc:	add	x0, x0, #0x73b
  21a200:	add	x9, x9, #0xcec
  21a204:	add	x10, x10, #0x714
  21a208:	add	x21, x8, #0x8
  21a20c:	add	x20, x20, #0x378
  21a210:	stp	x0, x9, [sp]
  21a214:	stp	x10, xzr, [sp, #16]
  21a218:	mov	w2, #0x40                  	// #64
  21a21c:	mov	w3, #0x13                  	// #19
  21a220:	mov	x1, x20
  21a224:	bl	21b310 <nftw64@plt>
  21a228:	ldr	x0, [x21], #8
  21a22c:	cbnz	x0, 21a218 <mount_setup+0x68>
  21a230:	bl	21a3f0 <relabel_cgroup_filesystems>
  21a234:	bl	21a520 <relabel_extra>
  21a238:	mov	w20, w0
  21a23c:	mov	w0, #0x1                   	// #1
  21a240:	bl	21b140 <now@plt>
  21a244:	mov	x21, x0
  21a248:	mov	w0, wzr
  21a24c:	bl	21aae0 <log_get_max_level_realm@plt>
  21a250:	cmp	w0, #0x5
  21a254:	b.le	21a2b4 <mount_setup+0x104>
  21a258:	adrp	x8, 205000 <parse_argv.options+0x1a90>
  21a25c:	adrp	x9, 203000 <main.dirs-0x548>
  21a260:	add	x8, x8, #0xed
  21a264:	add	x9, x9, #0xbec
  21a268:	cmp	w20, #0x0
  21a26c:	sub	x2, x21, x19
  21a270:	add	x0, sp, #0x20
  21a274:	mov	w1, #0x40                  	// #64
  21a278:	mov	x3, xzr
  21a27c:	csel	x20, x9, x8, gt
  21a280:	bl	21b320 <format_timespan@plt>
  21a284:	adrp	x2, 203000 <main.dirs-0x548>
  21a288:	adrp	x4, 203000 <main.dirs-0x548>
  21a28c:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21a290:	mov	x7, x0
  21a294:	add	x2, x2, #0xea6
  21a298:	add	x4, x4, #0x7ad
  21a29c:	add	x5, x5, #0x980
  21a2a0:	mov	w0, #0x6                   	// #6
  21a2a4:	mov	w3, #0x200                 	// #512
  21a2a8:	mov	w1, wzr
  21a2ac:	mov	x6, x20
  21a2b0:	bl	21aaf0 <log_internal_realm@plt>
  21a2b4:	mov	w1, #0xffffffff            	// #-1
  21a2b8:	mov	w2, #0xffffffff            	// #-1
  21a2bc:	mov	x0, xzr
  21a2c0:	bl	21b330 <dev_setup@plt>
  21a2c4:	bl	21aaa0 <detect_container@plt>
  21a2c8:	cmp	w0, #0x0
  21a2cc:	b.gt	21a330 <mount_setup+0x180>
  21a2d0:	adrp	x1, 203000 <main.dirs-0x548>
  21a2d4:	mov	w3, #0x4000                	// #16384
  21a2d8:	add	x1, x1, #0x97f
  21a2dc:	movk	w3, #0x10, lsl #16
  21a2e0:	mov	x0, xzr
  21a2e4:	mov	x2, xzr
  21a2e8:	mov	x4, xzr
  21a2ec:	bl	21ad20 <mount@plt>
  21a2f0:	tbz	w0, #31, 21a330 <mount_setup+0x180>
  21a2f4:	mov	w0, wzr
  21a2f8:	bl	21aae0 <log_get_max_level_realm@plt>
  21a2fc:	cmp	w0, #0x4
  21a300:	b.lt	21a330 <mount_setup+0x180>  // b.tstop
  21a304:	bl	21abb0 <__errno_location@plt>
  21a308:	ldr	w1, [x0]
  21a30c:	adrp	x2, 203000 <main.dirs-0x548>
  21a310:	adrp	x4, 203000 <main.dirs-0x548>
  21a314:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21a318:	add	x2, x2, #0xea6
  21a31c:	add	x4, x4, #0x7ad
  21a320:	add	x5, x5, #0xada
  21a324:	mov	w0, #0x4                   	// #4
  21a328:	mov	w3, #0x211                 	// #529
  21a32c:	bl	21aaf0 <log_internal_realm@plt>
  21a330:	adrp	x0, 204000 <parse_argv.options+0xa90>
  21a334:	add	x0, x0, #0x8ec
  21a338:	mov	w1, #0x1ed                 	// #493
  21a33c:	bl	21b340 <mkdir_label@plt>
  21a340:	adrp	x0, 205000 <parse_argv.options+0x1a90>
  21a344:	add	x0, x0, #0x100
  21a348:	mov	w1, #0x1ed                 	// #493
  21a34c:	bl	21b340 <mkdir_label@plt>
  21a350:	mov	w1, #0xffffffff            	// #-1
  21a354:	mov	w2, #0xffffffff            	// #-1
  21a358:	mov	x0, xzr
  21a35c:	bl	21b350 <make_inaccessible_nodes@plt>
  21a360:	mov	w0, wzr
  21a364:	ldp	x20, x19, [sp, #128]
  21a368:	ldr	x21, [sp, #112]
  21a36c:	ldp	x29, x30, [sp, #96]
  21a370:	add	sp, sp, #0x90
  21a374:	ret

000000000021a378 <nftw_cb>:
  21a378:	stp	x29, x30, [sp, #-48]!
  21a37c:	stp	x20, x19, [sp, #32]
  21a380:	ldr	w8, [x3, #4]
  21a384:	str	x21, [sp, #16]
  21a388:	mov	x29, sp
  21a38c:	cbz	w8, 21a3e8 <nftw_cb+0x70>
  21a390:	mov	w1, wzr
  21a394:	mov	x20, x3
  21a398:	mov	w21, w2
  21a39c:	mov	x19, x0
  21a3a0:	bl	21b290 <label_fix@plt>
  21a3a4:	cmp	w21, #0x1
  21a3a8:	mov	w0, wzr
  21a3ac:	b.ne	21a3d8 <nftw_cb+0x60>  // b.any
  21a3b0:	ldr	w8, [x20, #4]
  21a3b4:	cmp	w8, #0x1
  21a3b8:	b.ne	21a3d8 <nftw_cb+0x60>  // b.any
  21a3bc:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  21a3c0:	add	x1, x1, #0x4b
  21a3c4:	mov	x0, x19
  21a3c8:	bl	21aa80 <strcmp@plt>
  21a3cc:	cmp	w0, #0x0
  21a3d0:	cset	w8, eq  // eq = none
  21a3d4:	lsl	w0, w8, #1
  21a3d8:	ldp	x20, x19, [sp, #32]
  21a3dc:	ldr	x21, [sp, #16]
  21a3e0:	ldp	x29, x30, [sp], #48
  21a3e4:	ret
  21a3e8:	mov	w0, wzr
  21a3ec:	b	21a3d8 <nftw_cb+0x60>

000000000021a3f0 <relabel_cgroup_filesystems>:
  21a3f0:	sub	sp, sp, #0xa0
  21a3f4:	stp	x29, x30, [sp, #128]
  21a3f8:	str	x19, [sp, #144]
  21a3fc:	add	x29, sp, #0x80
  21a400:	bl	21b360 <cg_all_unified@plt>
  21a404:	cbz	w0, 21a448 <relabel_cgroup_filesystems+0x58>
  21a408:	mov	w19, w0
  21a40c:	tbz	w0, #31, 21a510 <relabel_cgroup_filesystems+0x120>
  21a410:	mov	w0, wzr
  21a414:	bl	21aae0 <log_get_max_level_realm@plt>
  21a418:	cmp	w0, #0x3
  21a41c:	b.lt	21a510 <relabel_cgroup_filesystems+0x120>  // b.tstop
  21a420:	adrp	x2, 203000 <main.dirs-0x548>
  21a424:	adrp	x4, 203000 <main.dirs-0x548>
  21a428:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  21a42c:	add	x2, x2, #0xea6
  21a430:	add	x4, x4, #0xd15
  21a434:	add	x5, x5, #0x43f
  21a438:	mov	w0, #0x3                   	// #3
  21a43c:	mov	w3, #0x196                 	// #406
  21a440:	mov	w1, w19
  21a444:	b	21a50c <relabel_cgroup_filesystems+0x11c>
  21a448:	adrp	x0, 205000 <parse_argv.options+0x1a90>
  21a44c:	add	x0, x0, #0x17e
  21a450:	add	x1, sp, #0x8
  21a454:	bl	21b370 <statfs64@plt>
  21a458:	tbnz	w0, #31, 21a4d4 <relabel_cgroup_filesystems+0xe4>
  21a45c:	ldrb	w8, [sp, #88]
  21a460:	tbz	w8, #0, 21a480 <relabel_cgroup_filesystems+0x90>
  21a464:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  21a468:	add	x1, x1, #0x17e
  21a46c:	mov	w3, #0x20                  	// #32
  21a470:	mov	x0, xzr
  21a474:	mov	x2, xzr
  21a478:	mov	x4, xzr
  21a47c:	bl	21ad20 <mount@plt>
  21a480:	adrp	x19, 205000 <parse_argv.options+0x1a90>
  21a484:	add	x19, x19, #0x17e
  21a488:	mov	x0, x19
  21a48c:	mov	w1, wzr
  21a490:	bl	21b290 <label_fix@plt>
  21a494:	adrp	x1, 21a000 <mount_one+0x25c>
  21a498:	add	x1, x1, #0x378
  21a49c:	mov	w2, #0x40                  	// #64
  21a4a0:	mov	w3, #0x13                  	// #19
  21a4a4:	mov	x0, x19
  21a4a8:	bl	21b310 <nftw64@plt>
  21a4ac:	ldrb	w8, [sp, #88]
  21a4b0:	tbz	w8, #0, 21a510 <relabel_cgroup_filesystems+0x120>
  21a4b4:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  21a4b8:	add	x1, x1, #0x17e
  21a4bc:	mov	w3, #0x21                  	// #33
  21a4c0:	mov	x0, xzr
  21a4c4:	mov	x2, xzr
  21a4c8:	mov	x4, xzr
  21a4cc:	bl	21ad20 <mount@plt>
  21a4d0:	b	21a510 <relabel_cgroup_filesystems+0x120>
  21a4d4:	mov	w0, wzr
  21a4d8:	bl	21aae0 <log_get_max_level_realm@plt>
  21a4dc:	cmp	w0, #0x3
  21a4e0:	b.lt	21a510 <relabel_cgroup_filesystems+0x120>  // b.tstop
  21a4e4:	bl	21abb0 <__errno_location@plt>
  21a4e8:	ldr	w1, [x0]
  21a4ec:	adrp	x2, 203000 <main.dirs-0x548>
  21a4f0:	adrp	x4, 203000 <main.dirs-0x548>
  21a4f4:	adrp	x5, 203000 <main.dirs-0x548>
  21a4f8:	add	x2, x2, #0xea6
  21a4fc:	add	x4, x4, #0xd15
  21a500:	add	x5, x5, #0xd30
  21a504:	mov	w0, #0x3                   	// #3
  21a508:	mov	w3, #0x18a                 	// #394
  21a50c:	bl	21aaf0 <log_internal_realm@plt>
  21a510:	ldr	x19, [sp, #144]
  21a514:	ldp	x29, x30, [sp, #128]
  21a518:	add	sp, sp, #0xa0
  21a51c:	ret

000000000021a520 <relabel_extra>:
  21a520:	sub	sp, sp, #0x80
  21a524:	stp	x29, x30, [sp, #32]
  21a528:	add	x29, sp, #0x20
  21a52c:	adrp	x1, 205000 <parse_argv.options+0x1a90>
  21a530:	adrp	x4, 204000 <parse_argv.options+0xa90>
  21a534:	add	x1, x1, #0x47a
  21a538:	add	x4, x4, #0x9e1
  21a53c:	sub	x0, x29, #0x8
  21a540:	mov	w3, #0x12                  	// #18
  21a544:	mov	x2, xzr
  21a548:	stp	x28, x27, [sp, #48]
  21a54c:	stp	x26, x25, [sp, #64]
  21a550:	stp	x24, x23, [sp, #80]
  21a554:	stp	x22, x21, [sp, #96]
  21a558:	stp	x20, x19, [sp, #112]
  21a55c:	stur	xzr, [x29, #-8]
  21a560:	bl	21b380 <conf_files_list@plt>
  21a564:	tbnz	w0, #31, 21a804 <relabel_extra+0x2e4>
  21a568:	ldur	x28, [x29, #-8]
  21a56c:	cbz	x28, 21a7a4 <relabel_extra+0x284>
  21a570:	ldr	x8, [x28]
  21a574:	cbz	x8, 21a7a4 <relabel_extra+0x284>
  21a578:	adrp	x21, 203000 <main.dirs-0x548>
  21a57c:	adrp	x22, 205000 <parse_argv.options+0x1a90>
  21a580:	adrp	x24, 204000 <parse_argv.options+0xa90>
  21a584:	adrp	x27, 21a000 <mount_one+0x25c>
  21a588:	adrp	x25, 204000 <parse_argv.options+0xa90>
  21a58c:	mov	w19, wzr
  21a590:	add	x21, x21, #0xea6
  21a594:	add	x22, x22, #0x270
  21a598:	add	x24, x24, #0xcaa
  21a59c:	add	x27, x27, #0x378
  21a5a0:	add	x25, x25, #0xbe1
  21a5a4:	b	21a5c4 <relabel_extra+0xa4>
  21a5a8:	ldr	x0, [x28]
  21a5ac:	bl	21b390 <unlink@plt>
  21a5b0:	tbnz	w0, #31, 21a768 <relabel_extra+0x248>
  21a5b4:	add	x0, sp, #0x10
  21a5b8:	bl	21a8d8 <fclosep>
  21a5bc:	ldr	x8, [x28, #8]!
  21a5c0:	cbz	x8, 21a7a8 <relabel_extra+0x288>
  21a5c4:	str	xzr, [sp, #16]
  21a5c8:	ldr	x0, [x28]
  21a5cc:	adrp	x1, 203000 <main.dirs-0x548>
  21a5d0:	add	x1, x1, #0x955
  21a5d4:	bl	21ad90 <fopen64@plt>
  21a5d8:	str	x0, [sp, #16]
  21a5dc:	cbz	x0, 21a734 <relabel_extra+0x214>
  21a5e0:	mov	x23, x0
  21a5e4:	b	21a5f8 <relabel_extra+0xd8>
  21a5e8:	mov	w26, #0x1                   	// #1
  21a5ec:	add	x0, sp, #0x8
  21a5f0:	bl	219cbc <freep>
  21a5f4:	cbnz	w26, 21a5a8 <relabel_extra+0x88>
  21a5f8:	add	x1, sp, #0x8
  21a5fc:	mov	x0, x23
  21a600:	str	xzr, [sp, #8]
  21a604:	bl	21a8f0 <read_line>
  21a608:	mov	w20, w0
  21a60c:	tbnz	w0, #31, 21a6a0 <relabel_extra+0x180>
  21a610:	cbz	w20, 21a5e8 <relabel_extra+0xc8>
  21a614:	ldr	x0, [sp, #8]
  21a618:	mov	w1, #0x1                   	// #1
  21a61c:	bl	21b3a0 <path_simplify@plt>
  21a620:	ldr	x20, [sp, #8]
  21a624:	mov	x0, x20
  21a628:	bl	21b3b0 <path_is_normalized@plt>
  21a62c:	tbz	w0, #0, 21a6d4 <relabel_extra+0x1b4>
  21a630:	mov	x0, x20
  21a634:	bl	21b3c0 <path_is_absolute@plt>
  21a638:	mov	w26, w0
  21a63c:	mov	w0, wzr
  21a640:	bl	21aae0 <log_get_max_level_realm@plt>
  21a644:	tbz	w26, #0, 21a700 <relabel_extra+0x1e0>
  21a648:	cmp	w0, #0x7
  21a64c:	b.lt	21a674 <relabel_extra+0x154>  // b.tstop
  21a650:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21a654:	mov	w0, #0x7                   	// #7
  21a658:	mov	w3, #0x1ce                 	// #462
  21a65c:	mov	w1, wzr
  21a660:	mov	x2, x21
  21a664:	mov	x4, x22
  21a668:	add	x5, x5, #0xe9
  21a66c:	mov	x6, x20
  21a670:	bl	21aaf0 <log_internal_realm@plt>
  21a674:	ldr	x0, [sp, #8]
  21a678:	mov	w1, wzr
  21a67c:	bl	21b290 <label_fix@plt>
  21a680:	ldr	x0, [sp, #8]
  21a684:	mov	w2, #0x40                  	// #64
  21a688:	mov	w3, #0x13                  	// #19
  21a68c:	mov	x1, x27
  21a690:	bl	21b310 <nftw64@plt>
  21a694:	mov	w26, wzr
  21a698:	add	w19, w19, #0x1
  21a69c:	b	21a5ec <relabel_extra+0xcc>
  21a6a0:	mov	w0, wzr
  21a6a4:	bl	21aae0 <log_get_max_level_realm@plt>
  21a6a8:	cmp	w0, #0x4
  21a6ac:	b.lt	21a5e8 <relabel_extra+0xc8>  // b.tstop
  21a6b0:	ldr	x6, [x28]
  21a6b4:	mov	w0, #0x4                   	// #4
  21a6b8:	mov	w3, #0x1bc                 	// #444
  21a6bc:	mov	w1, w20
  21a6c0:	mov	x2, x21
  21a6c4:	mov	x4, x22
  21a6c8:	mov	x5, x24
  21a6cc:	bl	21aaf0 <log_internal_realm@plt>
  21a6d0:	b	21a5e8 <relabel_extra+0xc8>
  21a6d4:	mov	w0, wzr
  21a6d8:	bl	21aae0 <log_get_max_level_realm@plt>
  21a6dc:	cmp	w0, #0x4
  21a6e0:	b.lt	21a72c <relabel_extra+0x20c>  // b.tstop
  21a6e4:	mov	w0, #0x4                   	// #4
  21a6e8:	mov	w3, #0x1c5                 	// #453
  21a6ec:	mov	w1, wzr
  21a6f0:	mov	x2, x21
  21a6f4:	mov	x4, x22
  21a6f8:	mov	x5, x25
  21a6fc:	b	21a724 <relabel_extra+0x204>
  21a700:	cmp	w0, #0x4
  21a704:	b.lt	21a72c <relabel_extra+0x20c>  // b.tstop
  21a708:	adrp	x5, 203000 <main.dirs-0x548>
  21a70c:	mov	w0, #0x4                   	// #4
  21a710:	mov	w3, #0x1ca                 	// #458
  21a714:	mov	w1, wzr
  21a718:	mov	x2, x21
  21a71c:	mov	x4, x22
  21a720:	add	x5, x5, #0xbff
  21a724:	mov	x6, x20
  21a728:	bl	21aaf0 <log_internal_realm@plt>
  21a72c:	mov	w26, wzr
  21a730:	b	21a5ec <relabel_extra+0xcc>
  21a734:	bl	21aae0 <log_get_max_level_realm@plt>
  21a738:	cmp	w0, #0x4
  21a73c:	b.lt	21a5b4 <relabel_extra+0x94>  // b.tstop
  21a740:	bl	21abb0 <__errno_location@plt>
  21a744:	ldr	w1, [x0]
  21a748:	ldr	x6, [x28]
  21a74c:	adrp	x5, 203000 <main.dirs-0x548>
  21a750:	mov	w0, #0x4                   	// #4
  21a754:	mov	w3, #0x1b3                 	// #435
  21a758:	mov	x2, x21
  21a75c:	mov	x4, x22
  21a760:	add	x5, x5, #0xafb
  21a764:	b	21a79c <relabel_extra+0x27c>
  21a768:	mov	w0, wzr
  21a76c:	bl	21aae0 <log_get_max_level_realm@plt>
  21a770:	cmp	w0, #0x4
  21a774:	b.lt	21a5b4 <relabel_extra+0x94>  // b.tstop
  21a778:	bl	21abb0 <__errno_location@plt>
  21a77c:	ldr	w1, [x0]
  21a780:	ldr	x6, [x28]
  21a784:	adrp	x5, 204000 <parse_argv.options+0xa90>
  21a788:	mov	w0, #0x4                   	// #4
  21a78c:	mov	w3, #0x1d5                 	// #469
  21a790:	mov	x2, x21
  21a794:	mov	x4, x22
  21a798:	add	x5, x5, #0x9ff
  21a79c:	bl	21aaf0 <log_internal_realm@plt>
  21a7a0:	b	21a5b4 <relabel_extra+0x94>
  21a7a4:	mov	w19, wzr
  21a7a8:	adrp	x0, 204000 <parse_argv.options+0xa90>
  21a7ac:	add	x0, x0, #0x7c1
  21a7b0:	bl	21b2e0 <rmdir@plt>
  21a7b4:	tbz	w0, #31, 21a854 <relabel_extra+0x334>
  21a7b8:	bl	21abb0 <__errno_location@plt>
  21a7bc:	ldr	w20, [x0]
  21a7c0:	cmp	w20, #0x2
  21a7c4:	b.eq	21a854 <relabel_extra+0x334>  // b.none
  21a7c8:	mov	w0, wzr
  21a7cc:	bl	21aae0 <log_get_max_level_realm@plt>
  21a7d0:	cmp	w0, #0x4
  21a7d4:	b.lt	21a854 <relabel_extra+0x334>  // b.tstop
  21a7d8:	adrp	x2, 203000 <main.dirs-0x548>
  21a7dc:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  21a7e0:	adrp	x5, 203000 <main.dirs-0x548>
  21a7e4:	add	x2, x2, #0xea6
  21a7e8:	add	x4, x4, #0x270
  21a7ec:	add	x5, x5, #0xc2d
  21a7f0:	mov	w0, #0x4                   	// #4
  21a7f4:	mov	w3, #0x1db                 	// #475
  21a7f8:	mov	w1, w20
  21a7fc:	bl	21aaf0 <log_internal_realm@plt>
  21a800:	b	21a854 <relabel_extra+0x334>
  21a804:	mov	w19, w0
  21a808:	mov	w0, wzr
  21a80c:	bl	21aae0 <log_get_max_level_realm@plt>
  21a810:	cmp	w0, #0x3
  21a814:	b.lt	21a848 <relabel_extra+0x328>  // b.tstop
  21a818:	adrp	x2, 203000 <main.dirs-0x548>
  21a81c:	adrp	x4, 205000 <parse_argv.options+0x1a90>
  21a820:	adrp	x5, 205000 <parse_argv.options+0x1a90>
  21a824:	add	x2, x2, #0xea6
  21a828:	add	x4, x4, #0x270
  21a82c:	add	x5, x5, #0x483
  21a830:	mov	w0, #0x3                   	// #3
  21a834:	mov	w3, #0x1ac                 	// #428
  21a838:	mov	w1, w19
  21a83c:	bl	21aaf0 <log_internal_realm@plt>
  21a840:	mov	w19, w0
  21a844:	b	21a854 <relabel_extra+0x334>
  21a848:	mov	w8, wzr
  21a84c:	neg	w9, w19
  21a850:	sub	w19, w8, w9, uxtb
  21a854:	sub	x0, x29, #0x8
  21a858:	bl	21a8bc <strv_freep>
  21a85c:	mov	w0, w19
  21a860:	ldp	x20, x19, [sp, #112]
  21a864:	ldp	x22, x21, [sp, #96]
  21a868:	ldp	x24, x23, [sp, #80]
  21a86c:	ldp	x26, x25, [sp, #64]
  21a870:	ldp	x28, x27, [sp, #48]
  21a874:	ldp	x29, x30, [sp, #32]
  21a878:	add	sp, sp, #0x80
  21a87c:	ret

000000000021a880 <set_free_free>:
  21a880:	stp	x29, x30, [sp, #-16]!
  21a884:	adrp	x1, 22b000 <__lxstat64@plt+0xfc20>
  21a888:	ldr	x1, [x1, #2672]
  21a88c:	mov	x2, xzr
  21a890:	mov	x29, sp
  21a894:	bl	21b190 <internal_hashmap_free@plt>
  21a898:	ldp	x29, x30, [sp], #16
  21a89c:	ret

000000000021a8a0 <strna>:
  21a8a0:	adrp	x8, 204000 <parse_argv.options+0xa90>
  21a8a4:	add	x8, x8, #0xad6
  21a8a8:	cmp	x0, #0x0
  21a8ac:	csel	x0, x8, x0, eq  // eq = none
  21a8b0:	ret

000000000021a8b4 <size_multiply_overflow>:
  21a8b4:	mov	w0, wzr
  21a8b8:	ret

000000000021a8bc <strv_freep>:
  21a8bc:	stp	x29, x30, [sp, #-16]!
  21a8c0:	ldr	x0, [x0]
  21a8c4:	mov	x29, sp
  21a8c8:	cbz	x0, 21a8d0 <strv_freep+0x14>
  21a8cc:	bl	21b3d0 <strv_free@plt>
  21a8d0:	ldp	x29, x30, [sp], #16
  21a8d4:	ret

000000000021a8d8 <fclosep>:
  21a8d8:	stp	x29, x30, [sp, #-16]!
  21a8dc:	ldr	x0, [x0]
  21a8e0:	mov	x29, sp
  21a8e4:	bl	21adc0 <safe_fclose@plt>
  21a8e8:	ldp	x29, x30, [sp], #16
  21a8ec:	ret

000000000021a8f0 <read_line>:
  21a8f0:	stp	x29, x30, [sp, #-16]!
  21a8f4:	mov	x3, x1
  21a8f8:	mov	w1, #0x100000              	// #1048576
  21a8fc:	mov	w2, wzr
  21a900:	mov	x29, sp
  21a904:	bl	21add0 <read_line_full@plt>
  21a908:	ldp	x29, x30, [sp], #16
  21a90c:	ret

000000000021a910 <__libc_csu_init>:
  21a910:	stp	x29, x30, [sp, #-64]!
  21a914:	mov	x29, sp
  21a918:	stp	x19, x20, [sp, #16]
  21a91c:	adrp	x20, 22b000 <__lxstat64@plt+0xfc20>
  21a920:	add	x20, x20, #0x400
  21a924:	stp	x21, x22, [sp, #32]
  21a928:	adrp	x21, 22b000 <__lxstat64@plt+0xfc20>
  21a92c:	add	x21, x21, #0x3f8
  21a930:	sub	x20, x20, x21
  21a934:	mov	w22, w0
  21a938:	stp	x23, x24, [sp, #48]
  21a93c:	mov	x23, x1
  21a940:	mov	x24, x2
  21a944:	bl	21a9a8 <_init>
  21a948:	cmp	xzr, x20, asr #3
  21a94c:	b.eq	21a978 <__libc_csu_init+0x68>  // b.none
  21a950:	asr	x20, x20, #3
  21a954:	mov	x19, #0x0                   	// #0
  21a958:	ldr	x3, [x21, x19, lsl #3]
  21a95c:	mov	x2, x24
  21a960:	add	x19, x19, #0x1
  21a964:	mov	x1, x23
  21a968:	mov	w0, w22
  21a96c:	blr	x3
  21a970:	cmp	x20, x19
  21a974:	b.ne	21a958 <__libc_csu_init+0x48>  // b.any
  21a978:	ldp	x19, x20, [sp, #16]
  21a97c:	ldp	x21, x22, [sp, #32]
  21a980:	ldp	x23, x24, [sp, #48]
  21a984:	ldp	x29, x30, [sp], #64
  21a988:	ret
  21a98c:	nop

000000000021a990 <__libc_csu_fini>:
  21a990:	ret
  21a994:	udf	#0

000000000021a998 <lstat64>:
  21a998:	mov	x2, x1
  21a99c:	mov	x1, x0
  21a9a0:	mov	w0, #0x0                   	// #0
  21a9a4:	b	21b3e0 <__lxstat64@plt>

Disassembly of section .init:

000000000021a9a8 <_init>:
  21a9a8:	stp	x29, x30, [sp, #-16]!
  21a9ac:	mov	x29, sp
  21a9b0:	bl	2156c8 <call_weak_fn>
  21a9b4:	ldp	x29, x30, [sp], #16
  21a9b8:	ret

Disassembly of section .fini:

000000000021a9bc <_fini>:
  21a9bc:	stp	x29, x30, [sp, #-16]!
  21a9c0:	mov	x29, sp
  21a9c4:	ldp	x29, x30, [sp], #16
  21a9c8:	ret

Disassembly of section .plt:

000000000021a9d0 <__libc_start_main@plt-0x20>:
  21a9d0:	stp	x16, x30, [sp, #-16]!
  21a9d4:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21a9d8:	ldr	x17, [x16, #2696]
  21a9dc:	add	x16, x16, #0xa88
  21a9e0:	br	x17
  21a9e4:	nop
  21a9e8:	nop
  21a9ec:	nop

000000000021a9f0 <__libc_start_main@plt>:
  21a9f0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21a9f4:	ldr	x17, [x16, #2704]
  21a9f8:	add	x16, x16, #0xa90
  21a9fc:	br	x17

000000000021aa00 <abort@plt>:
  21aa00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa04:	ldr	x17, [x16, #2712]
  21aa08:	add	x16, x16, #0xa98
  21aa0c:	br	x17

000000000021aa10 <__gmon_start__@plt>:
  21aa10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa14:	ldr	x17, [x16, #2720]
  21aa18:	add	x16, x16, #0xaa0
  21aa1c:	br	x17

000000000021aa20 <log_set_target@plt>:
  21aa20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa24:	ldr	x17, [x16, #2728]
  21aa28:	add	x16, x16, #0xaa8
  21aa2c:	br	x17

000000000021aa30 <log_set_prohibit_ipc@plt>:
  21aa30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa34:	ldr	x17, [x16, #2736]
  21aa38:	add	x16, x16, #0xab0
  21aa3c:	br	x17

000000000021aa40 <log_parse_environment_realm@plt>:
  21aa40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa44:	ldr	x17, [x16, #2744]
  21aa48:	add	x16, x16, #0xab8
  21aa4c:	br	x17

000000000021aa50 <log_open@plt>:
  21aa50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa54:	ldr	x17, [x16, #2752]
  21aa58:	add	x16, x16, #0xac0
  21aa5c:	br	x17

000000000021aa60 <umask@plt>:
  21aa60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa64:	ldr	x17, [x16, #2760]
  21aa68:	add	x16, x16, #0xac8
  21aa6c:	br	x17

000000000021aa70 <getpid_cached@plt>:
  21aa70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa74:	ldr	x17, [x16, #2768]
  21aa78:	add	x16, x16, #0xad0
  21aa7c:	br	x17

000000000021aa80 <strcmp@plt>:
  21aa80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa84:	ldr	x17, [x16, #2776]
  21aa88:	add	x16, x16, #0xad8
  21aa8c:	br	x17

000000000021aa90 <cg_get_root_path@plt>:
  21aa90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aa94:	ldr	x17, [x16, #2784]
  21aa98:	add	x16, x16, #0xae0
  21aa9c:	br	x17

000000000021aaa0 <detect_container@plt>:
  21aaa0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aaa4:	ldr	x17, [x16, #2792]
  21aaa8:	add	x16, x16, #0xae8
  21aaac:	br	x17

000000000021aab0 <log_get_target@plt>:
  21aab0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aab4:	ldr	x17, [x16, #2800]
  21aab8:	add	x16, x16, #0xaf0
  21aabc:	br	x17

000000000021aac0 <getenv@plt>:
  21aac0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aac4:	ldr	x17, [x16, #2808]
  21aac8:	add	x16, x16, #0xaf8
  21aacc:	br	x17

000000000021aad0 <watchdog_set_device@plt>:
  21aad0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aad4:	ldr	x17, [x16, #2816]
  21aad8:	add	x16, x16, #0xb00
  21aadc:	br	x17

000000000021aae0 <log_get_max_level_realm@plt>:
  21aae0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aae4:	ldr	x17, [x16, #2824]
  21aae8:	add	x16, x16, #0xb08
  21aaec:	br	x17

000000000021aaf0 <log_internal_realm@plt>:
  21aaf0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aaf4:	ldr	x17, [x16, #2832]
  21aaf8:	add	x16, x16, #0xb10
  21aafc:	br	x17

000000000021ab00 <mlockall@plt>:
  21ab00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab04:	ldr	x17, [x16, #2840]
  21ab08:	add	x16, x16, #0xb18
  21ab0c:	br	x17

000000000021ab10 <disable_coredumps@plt>:
  21ab10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab14:	ldr	x17, [x16, #2848]
  21ab18:	add	x16, x16, #0xb20
  21ab1c:	br	x17

000000000021ab20 <in_initrd@plt>:
  21ab20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab24:	ldr	x17, [x16, #2856]
  21ab28:	add	x16, x16, #0xb28
  21ab2c:	br	x17

000000000021ab30 <access@plt>:
  21ab30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab34:	ldr	x17, [x16, #2864]
  21ab38:	add	x16, x16, #0xb30
  21ab3c:	br	x17

000000000021ab40 <watchdog_ping@plt>:
  21ab40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab44:	ldr	x17, [x16, #2872]
  21ab48:	add	x16, x16, #0xb38
  21ab4c:	br	x17

000000000021ab50 <cg_trim@plt>:
  21ab50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab54:	ldr	x17, [x16, #2880]
  21ab58:	add	x16, x16, #0xb40
  21ab5c:	br	x17

000000000021ab60 <execute_directories@plt>:
  21ab60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab64:	ldr	x17, [x16, #2888]
  21ab68:	add	x16, x16, #0xb48
  21ab6c:	br	x17

000000000021ab70 <rlimit_nofile_safe@plt>:
  21ab70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab74:	ldr	x17, [x16, #2896]
  21ab78:	add	x16, x16, #0xb50
  21ab7c:	br	x17

000000000021ab80 <setsid@plt>:
  21ab80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab84:	ldr	x17, [x16, #2904]
  21ab88:	add	x16, x16, #0xb58
  21ab8c:	br	x17

000000000021ab90 <make_console_stdio@plt>:
  21ab90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ab94:	ldr	x17, [x16, #2912]
  21ab98:	add	x16, x16, #0xb60
  21ab9c:	br	x17

000000000021aba0 <execv@plt>:
  21aba0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aba4:	ldr	x17, [x16, #2920]
  21aba8:	add	x16, x16, #0xb68
  21abac:	br	x17

000000000021abb0 <__errno_location@plt>:
  21abb0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21abb4:	ldr	x17, [x16, #2928]
  21abb8:	add	x16, x16, #0xb70
  21abbc:	br	x17

000000000021abc0 <reboot_with_parameter@plt>:
  21abc0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21abc4:	ldr	x17, [x16, #2936]
  21abc8:	add	x16, x16, #0xb78
  21abcc:	br	x17

000000000021abd0 <reboot@plt>:
  21abd0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21abd4:	ldr	x17, [x16, #2944]
  21abd8:	add	x16, x16, #0xb80
  21abdc:	br	x17

000000000021abe0 <log_assert_failed_unreachable_realm@plt>:
  21abe0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21abe4:	ldr	x17, [x16, #2952]
  21abe8:	add	x16, x16, #0xb88
  21abec:	br	x17

000000000021abf0 <log_emergency_level@plt>:
  21abf0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21abf4:	ldr	x17, [x16, #2960]
  21abf8:	add	x16, x16, #0xb90
  21abfc:	br	x17

000000000021ac00 <freeze@plt>:
  21ac00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac04:	ldr	x17, [x16, #2968]
  21ac08:	add	x16, x16, #0xb98
  21ac0c:	br	x17

000000000021ac10 <_exit@plt>:
  21ac10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac14:	ldr	x17, [x16, #2976]
  21ac18:	add	x16, x16, #0xba0
  21ac1c:	br	x17

000000000021ac20 <free@plt>:
  21ac20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac24:	ldr	x17, [x16, #2984]
  21ac28:	add	x16, x16, #0xba8
  21ac2c:	br	x17

000000000021ac30 <getopt_long@plt>:
  21ac30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac34:	ldr	x17, [x16, #2992]
  21ac38:	add	x16, x16, #0xbb0
  21ac3c:	br	x17

000000000021ac40 <log_set_max_level_from_string_realm@plt>:
  21ac40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac44:	ldr	x17, [x16, #3000]
  21ac48:	add	x16, x16, #0xbb8
  21ac4c:	br	x17

000000000021ac50 <safe_atou8@plt>:
  21ac50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac54:	ldr	x17, [x16, #3008]
  21ac58:	add	x16, x16, #0xbc0
  21ac5c:	br	x17

000000000021ac60 <log_show_color_from_string@plt>:
  21ac60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac64:	ldr	x17, [x16, #3016]
  21ac68:	add	x16, x16, #0xbc8
  21ac6c:	br	x17

000000000021ac70 <log_show_location_from_string@plt>:
  21ac70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac74:	ldr	x17, [x16, #3024]
  21ac78:	add	x16, x16, #0xbd0
  21ac7c:	br	x17

000000000021ac80 <log_set_target_from_string@plt>:
  21ac80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac84:	ldr	x17, [x16, #3032]
  21ac88:	add	x16, x16, #0xbd8
  21ac8c:	br	x17

000000000021ac90 <parse_sec@plt>:
  21ac90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ac94:	ldr	x17, [x16, #3040]
  21ac98:	add	x16, x16, #0xbe0
  21ac9c:	br	x17

000000000021aca0 <log_show_color@plt>:
  21aca0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aca4:	ldr	x17, [x16, #3048]
  21aca8:	add	x16, x16, #0xbe8
  21acac:	br	x17

000000000021acb0 <log_show_location@plt>:
  21acb0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21acb4:	ldr	x17, [x16, #3056]
  21acb8:	add	x16, x16, #0xbf0
  21acbc:	br	x17

000000000021acc0 <log_assert_failed_realm@plt>:
  21acc0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21acc4:	ldr	x17, [x16, #3064]
  21acc8:	add	x16, x16, #0xbf8
  21accc:	br	x17

000000000021acd0 <sysctl_writef@plt>:
  21acd0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21acd4:	ldr	x17, [x16, #3072]
  21acd8:	add	x16, x16, #0xc00
  21acdc:	br	x17

000000000021ace0 <sigprocmask_many@plt>:
  21ace0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ace4:	ldr	x17, [x16, #3080]
  21ace8:	add	x16, x16, #0xc08
  21acec:	br	x17

000000000021acf0 <asynchronous_sync@plt>:
  21acf0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21acf4:	ldr	x17, [x16, #3088]
  21acf8:	add	x16, x16, #0xc10
  21acfc:	br	x17

000000000021ad00 <wait_for_terminate_with_timeout@plt>:
  21ad00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad04:	ldr	x17, [x16, #3096]
  21ad08:	add	x16, x16, #0xc18
  21ad0c:	br	x17

000000000021ad10 <kill@plt>:
  21ad10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad14:	ldr	x17, [x16, #3104]
  21ad18:	add	x16, x16, #0xc20
  21ad1c:	br	x17

000000000021ad20 <mount@plt>:
  21ad20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad24:	ldr	x17, [x16, #3112]
  21ad28:	add	x16, x16, #0xc28
  21ad2c:	br	x17

000000000021ad30 <switch_root@plt>:
  21ad30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad34:	ldr	x17, [x16, #3120]
  21ad38:	add	x16, x16, #0xc30
  21ad3c:	br	x17

000000000021ad40 <safe_fork_full@plt>:
  21ad40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad44:	ldr	x17, [x16, #3128]
  21ad48:	add	x16, x16, #0xc38
  21ad4c:	br	x17

000000000021ad50 <sysctl_read@plt>:
  21ad50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad54:	ldr	x17, [x16, #3136]
  21ad58:	add	x16, x16, #0xc40
  21ad5c:	br	x17

000000000021ad60 <extract_first_word@plt>:
  21ad60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad64:	ldr	x17, [x16, #3144]
  21ad68:	add	x16, x16, #0xc48
  21ad6c:	br	x17

000000000021ad70 <safe_atoi@plt>:
  21ad70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad74:	ldr	x17, [x16, #3152]
  21ad78:	add	x16, x16, #0xc50
  21ad7c:	br	x17

000000000021ad80 <sigprocmask@plt>:
  21ad80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad84:	ldr	x17, [x16, #3160]
  21ad88:	add	x16, x16, #0xc58
  21ad8c:	br	x17

000000000021ad90 <fopen64@plt>:
  21ad90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ad94:	ldr	x17, [x16, #3168]
  21ad98:	add	x16, x16, #0xc60
  21ad9c:	br	x17

000000000021ada0 <first_word@plt>:
  21ada0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ada4:	ldr	x17, [x16, #3176]
  21ada8:	add	x16, x16, #0xc68
  21adac:	br	x17

000000000021adb0 <__isoc99_sscanf@plt>:
  21adb0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21adb4:	ldr	x17, [x16, #3184]
  21adb8:	add	x16, x16, #0xc70
  21adbc:	br	x17

000000000021adc0 <safe_fclose@plt>:
  21adc0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21adc4:	ldr	x17, [x16, #3192]
  21adc8:	add	x16, x16, #0xc78
  21adcc:	br	x17

000000000021add0 <read_line_full@plt>:
  21add0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21add4:	ldr	x17, [x16, #3200]
  21add8:	add	x16, x16, #0xc80
  21addc:	br	x17

000000000021ade0 <mnt_table_next_fs@plt>:
  21ade0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ade4:	ldr	x17, [x16, #3208]
  21ade8:	add	x16, x16, #0xc88
  21adec:	br	x17

000000000021adf0 <mnt_fs_get_target@plt>:
  21adf0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21adf4:	ldr	x17, [x16, #3216]
  21adf8:	add	x16, x16, #0xc90
  21adfc:	br	x17

000000000021ae00 <mnt_fs_get_fstype@plt>:
  21ae00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae04:	ldr	x17, [x16, #3224]
  21ae08:	add	x16, x16, #0xc98
  21ae0c:	br	x17

000000000021ae10 <mnt_fs_get_vfs_options@plt>:
  21ae10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae14:	ldr	x17, [x16, #3232]
  21ae18:	add	x16, x16, #0xca0
  21ae1c:	br	x17

000000000021ae20 <strextend_with_separator@plt>:
  21ae20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae24:	ldr	x17, [x16, #3240]
  21ae28:	add	x16, x16, #0xca8
  21ae2c:	br	x17

000000000021ae30 <mnt_fs_get_fs_options@plt>:
  21ae30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae34:	ldr	x17, [x16, #3248]
  21ae38:	add	x16, x16, #0xcb0
  21ae3c:	br	x17

000000000021ae40 <path_startswith_strv@plt>:
  21ae40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae44:	ldr	x17, [x16, #3256]
  21ae48:	add	x16, x16, #0xcb8
  21ae4c:	br	x17

000000000021ae50 <log_oom_internal@plt>:
  21ae50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae54:	ldr	x17, [x16, #3264]
  21ae58:	add	x16, x16, #0xcc0
  21ae5c:	br	x17

000000000021ae60 <fstype_is_network@plt>:
  21ae60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae64:	ldr	x17, [x16, #3272]
  21ae68:	add	x16, x16, #0xcc8
  21ae6c:	br	x17

000000000021ae70 <fstype_is_api_vfs@plt>:
  21ae70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae74:	ldr	x17, [x16, #3280]
  21ae78:	add	x16, x16, #0xcd0
  21ae7c:	br	x17

000000000021ae80 <fstype_is_ro@plt>:
  21ae80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae84:	ldr	x17, [x16, #3288]
  21ae88:	add	x16, x16, #0xcd8
  21ae8c:	br	x17

000000000021ae90 <mnt_fs_get_propagation@plt>:
  21ae90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21ae94:	ldr	x17, [x16, #3296]
  21ae98:	add	x16, x16, #0xce0
  21ae9c:	br	x17

000000000021aea0 <mount_option_mangle@plt>:
  21aea0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aea4:	ldr	x17, [x16, #3304]
  21aea8:	add	x16, x16, #0xce8
  21aeac:	br	x17

000000000021aeb0 <calloc@plt>:
  21aeb0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aeb4:	ldr	x17, [x16, #3312]
  21aeb8:	add	x16, x16, #0xcf0
  21aebc:	br	x17

000000000021aec0 <strdup@plt>:
  21aec0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aec4:	ldr	x17, [x16, #3320]
  21aec8:	add	x16, x16, #0xcf8
  21aecc:	br	x17

000000000021aed0 <mnt_free_table@plt>:
  21aed0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aed4:	ldr	x17, [x16, #3328]
  21aed8:	add	x16, x16, #0xd00
  21aedc:	br	x17

000000000021aee0 <mnt_free_iter@plt>:
  21aee0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aee4:	ldr	x17, [x16, #3336]
  21aee8:	add	x16, x16, #0xd08
  21aeec:	br	x17

000000000021aef0 <mnt_new_table@plt>:
  21aef0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aef4:	ldr	x17, [x16, #3344]
  21aef8:	add	x16, x16, #0xd10
  21aefc:	br	x17

000000000021af00 <mnt_new_iter@plt>:
  21af00:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af04:	ldr	x17, [x16, #3352]
  21af08:	add	x16, x16, #0xd18
  21af0c:	br	x17

000000000021af10 <mnt_table_parse_file@plt>:
  21af10:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af14:	ldr	x17, [x16, #3360]
  21af18:	add	x16, x16, #0xd20
  21af1c:	br	x17

000000000021af20 <mnt_table_parse_mtab@plt>:
  21af20:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af24:	ldr	x17, [x16, #3368]
  21af28:	add	x16, x16, #0xd28
  21af2c:	br	x17

000000000021af30 <fstab_filter_options@plt>:
  21af30:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af34:	ldr	x17, [x16, #3376]
  21af38:	add	x16, x16, #0xd30
  21af3c:	br	x17

000000000021af40 <mnt_table_parse_swaps@plt>:
  21af40:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af44:	ldr	x17, [x16, #3384]
  21af48:	add	x16, x16, #0xd38
  21af4c:	br	x17

000000000021af50 <mnt_fs_get_source@plt>:
  21af50:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af54:	ldr	x17, [x16, #3392]
  21af58:	add	x16, x16, #0xd40
  21af5c:	br	x17

000000000021af60 <swapoff@plt>:
  21af60:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af64:	ldr	x17, [x16, #3400]
  21af68:	add	x16, x16, #0xd48
  21af6c:	br	x17

000000000021af70 <sd_device_enumerator_new@plt>:
  21af70:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af74:	ldr	x17, [x16, #3408]
  21af78:	add	x16, x16, #0xd50
  21af7c:	br	x17

000000000021af80 <sd_device_enumerator_allow_uninitialized@plt>:
  21af80:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af84:	ldr	x17, [x16, #3416]
  21af88:	add	x16, x16, #0xd58
  21af8c:	br	x17

000000000021af90 <sd_device_enumerator_add_match_subsystem@plt>:
  21af90:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21af94:	ldr	x17, [x16, #3424]
  21af98:	add	x16, x16, #0xd60
  21af9c:	br	x17

000000000021afa0 <sd_device_enumerator_add_match_sysname@plt>:
  21afa0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21afa4:	ldr	x17, [x16, #3432]
  21afa8:	add	x16, x16, #0xd68
  21afac:	br	x17

000000000021afb0 <sd_device_enumerator_add_match_sysattr@plt>:
  21afb0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21afb4:	ldr	x17, [x16, #3440]
  21afb8:	add	x16, x16, #0xd70
  21afbc:	br	x17

000000000021afc0 <sd_device_enumerator_get_device_first@plt>:
  21afc0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21afc4:	ldr	x17, [x16, #3448]
  21afc8:	add	x16, x16, #0xd78
  21afcc:	br	x17

000000000021afd0 <sd_device_enumerator_get_device_next@plt>:
  21afd0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21afd4:	ldr	x17, [x16, #3456]
  21afd8:	add	x16, x16, #0xd80
  21afdc:	br	x17

000000000021afe0 <sd_device_get_devname@plt>:
  21afe0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21afe4:	ldr	x17, [x16, #3464]
  21afe8:	add	x16, x16, #0xd88
  21afec:	br	x17

000000000021aff0 <gnu_dev_major@plt>:
  21aff0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21aff4:	ldr	x17, [x16, #3472]
  21aff8:	add	x16, x16, #0xd90
  21affc:	br	x17

000000000021b000 <sd_device_get_devnum@plt>:
  21b000:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b004:	ldr	x17, [x16, #3480]
  21b008:	add	x16, x16, #0xd98
  21b00c:	br	x17

000000000021b010 <get_block_device@plt>:
  21b010:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b014:	ldr	x17, [x16, #3488]
  21b018:	add	x16, x16, #0xda0
  21b01c:	br	x17

000000000021b020 <gnu_dev_minor@plt>:
  21b020:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b024:	ldr	x17, [x16, #3496]
  21b028:	add	x16, x16, #0xda8
  21b02c:	br	x17

000000000021b030 <path_equal@plt>:
  21b030:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b034:	ldr	x17, [x16, #3504]
  21b038:	add	x16, x16, #0xdb0
  21b03c:	br	x17

000000000021b040 <path_startswith@plt>:
  21b040:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b044:	ldr	x17, [x16, #3512]
  21b048:	add	x16, x16, #0xdb8
  21b04c:	br	x17

000000000021b050 <umount2@plt>:
  21b050:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b054:	ldr	x17, [x16, #3520]
  21b058:	add	x16, x16, #0xdc0
  21b05c:	br	x17

000000000021b060 <sd_device_enumerator_unref@plt>:
  21b060:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b064:	ldr	x17, [x16, #3528]
  21b068:	add	x16, x16, #0xdc8
  21b06c:	br	x17

000000000021b070 <malloc@plt>:
  21b070:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b074:	ldr	x17, [x16, #3536]
  21b078:	add	x16, x16, #0xdd0
  21b07c:	br	x17

000000000021b080 <open64@plt>:
  21b080:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b084:	ldr	x17, [x16, #3544]
  21b088:	add	x16, x16, #0xdd8
  21b08c:	br	x17

000000000021b090 <ioctl@plt>:
  21b090:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b094:	ldr	x17, [x16, #3552]
  21b098:	add	x16, x16, #0xde0
  21b09c:	br	x17

000000000021b0a0 <safe_close@plt>:
  21b0a0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0a4:	ldr	x17, [x16, #3560]
  21b0a8:	add	x16, x16, #0xde8
  21b0ac:	br	x17

000000000021b0b0 <internal_set_new@plt>:
  21b0b0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0b4:	ldr	x17, [x16, #3568]
  21b0b8:	add	x16, x16, #0xdf0
  21b0bc:	br	x17

000000000021b0c0 <sigemptyset@plt>:
  21b0c0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0c4:	ldr	x17, [x16, #3576]
  21b0c8:	add	x16, x16, #0xdf8
  21b0cc:	br	x17

000000000021b0d0 <sigaddset@plt>:
  21b0d0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0d4:	ldr	x17, [x16, #3584]
  21b0d8:	add	x16, x16, #0xe00
  21b0dc:	br	x17

000000000021b0e0 <opendir@plt>:
  21b0e0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0e4:	ldr	x17, [x16, #3592]
  21b0e8:	add	x16, x16, #0xe08
  21b0ec:	br	x17

000000000021b0f0 <readdir64@plt>:
  21b0f0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b0f4:	ldr	x17, [x16, #3600]
  21b0f8:	add	x16, x16, #0xe10
  21b0fc:	br	x17

000000000021b100 <parse_pid@plt>:
  21b100:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b104:	ldr	x17, [x16, #3608]
  21b108:	add	x16, x16, #0xe18
  21b10c:	br	x17

000000000021b110 <get_process_comm@plt>:
  21b110:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b114:	ldr	x17, [x16, #3616]
  21b118:	add	x16, x16, #0xe20
  21b11c:	br	x17

000000000021b120 <set_put@plt>:
  21b120:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b124:	ldr	x17, [x16, #3624]
  21b128:	add	x16, x16, #0xe28
  21b12c:	br	x17

000000000021b130 <get_ctty_devnr@plt>:
  21b130:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b134:	ldr	x17, [x16, #3632]
  21b138:	add	x16, x16, #0xe30
  21b13c:	br	x17

000000000021b140 <now@plt>:
  21b140:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b144:	ldr	x17, [x16, #3640]
  21b148:	add	x16, x16, #0xe38
  21b14c:	br	x17

000000000021b150 <waitpid@plt>:
  21b150:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b154:	ldr	x17, [x16, #3648]
  21b158:	add	x16, x16, #0xe40
  21b15c:	br	x17

000000000021b160 <set_iterate@plt>:
  21b160:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b164:	ldr	x17, [x16, #3656]
  21b168:	add	x16, x16, #0xe48
  21b16c:	br	x17

000000000021b170 <timespec_store@plt>:
  21b170:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b174:	ldr	x17, [x16, #3664]
  21b178:	add	x16, x16, #0xe50
  21b17c:	br	x17

000000000021b180 <sigtimedwait@plt>:
  21b180:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b184:	ldr	x17, [x16, #3672]
  21b188:	add	x16, x16, #0xe58
  21b18c:	br	x17

000000000021b190 <internal_hashmap_free@plt>:
  21b190:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b194:	ldr	x17, [x16, #3680]
  21b198:	add	x16, x16, #0xe60
  21b19c:	br	x17

000000000021b1a0 <closedir@plt>:
  21b1a0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1a4:	ldr	x17, [x16, #3688]
  21b1a8:	add	x16, x16, #0xe68
  21b1ac:	br	x17

000000000021b1b0 <is_kernel_thread@plt>:
  21b1b0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1b4:	ldr	x17, [x16, #3696]
  21b1b8:	add	x16, x16, #0xe70
  21b1bc:	br	x17

000000000021b1c0 <get_process_uid@plt>:
  21b1c0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1c4:	ldr	x17, [x16, #3704]
  21b1c8:	add	x16, x16, #0xe78
  21b1cc:	br	x17

000000000021b1d0 <sprintf@plt>:
  21b1d0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1d4:	ldr	x17, [x16, #3712]
  21b1d8:	add	x16, x16, #0xe80
  21b1dc:	br	x17

000000000021b1e0 <fread@plt>:
  21b1e0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1e4:	ldr	x17, [x16, #3720]
  21b1e8:	add	x16, x16, #0xe88
  21b1ec:	br	x17

000000000021b1f0 <pid_from_same_root_fs@plt>:
  21b1f0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b1f4:	ldr	x17, [x16, #3728]
  21b1f8:	add	x16, x16, #0xe90
  21b1fc:	br	x17

000000000021b200 <internal_hashmap_remove@plt>:
  21b200:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b204:	ldr	x17, [x16, #3736]
  21b208:	add	x16, x16, #0xe98
  21b20c:	br	x17

000000000021b210 <asprintf@plt>:
  21b210:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b214:	ldr	x17, [x16, #3744]
  21b218:	add	x16, x16, #0xea0
  21b21c:	br	x17

000000000021b220 <internal_hashmap_size@plt>:
  21b220:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b224:	ldr	x17, [x16, #3752]
  21b228:	add	x16, x16, #0xea8
  21b22c:	br	x17

000000000021b230 <strlen@plt>:
  21b230:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b234:	ldr	x17, [x16, #3760]
  21b238:	add	x16, x16, #0xeb0
  21b23c:	br	x17

000000000021b240 <cg_is_legacy_wanted@plt>:
  21b240:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b244:	ldr	x17, [x16, #3768]
  21b248:	add	x16, x16, #0xeb8
  21b24c:	br	x17

000000000021b250 <cg_kernel_controllers@plt>:
  21b250:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b254:	ldr	x17, [x16, #3776]
  21b258:	add	x16, x16, #0xec0
  21b25c:	br	x17

000000000021b260 <strjoin_real@plt>:
  21b260:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b264:	ldr	x17, [x16, #3784]
  21b268:	add	x16, x16, #0xec8
  21b26c:	br	x17

000000000021b270 <path_join_internal@plt>:
  21b270:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b274:	ldr	x17, [x16, #3792]
  21b278:	add	x16, x16, #0xed0
  21b27c:	br	x17

000000000021b280 <internal_hashmap_first_key_and_value@plt>:
  21b280:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b284:	ldr	x17, [x16, #3800]
  21b288:	add	x16, x16, #0xed8
  21b28c:	br	x17

000000000021b290 <label_fix@plt>:
  21b290:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b294:	ldr	x17, [x16, #3808]
  21b298:	add	x16, x16, #0xee0
  21b29c:	br	x17

000000000021b2a0 <path_is_mount_point@plt>:
  21b2a0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2a4:	ldr	x17, [x16, #3816]
  21b2a8:	add	x16, x16, #0xee8
  21b2ac:	br	x17

000000000021b2b0 <mkdir_p_label@plt>:
  21b2b0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2b4:	ldr	x17, [x16, #3824]
  21b2b8:	add	x16, x16, #0xef0
  21b2bc:	br	x17

000000000021b2c0 <mkdir_p@plt>:
  21b2c0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2c4:	ldr	x17, [x16, #3832]
  21b2c8:	add	x16, x16, #0xef8
  21b2cc:	br	x17

000000000021b2d0 <umount@plt>:
  21b2d0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2d4:	ldr	x17, [x16, #3840]
  21b2d8:	add	x16, x16, #0xf00
  21b2dc:	br	x17

000000000021b2e0 <rmdir@plt>:
  21b2e0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2e4:	ldr	x17, [x16, #3848]
  21b2e8:	add	x16, x16, #0xf08
  21b2ec:	br	x17

000000000021b2f0 <stpcpy@plt>:
  21b2f0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b2f4:	ldr	x17, [x16, #3856]
  21b2f8:	add	x16, x16, #0xf10
  21b2fc:	br	x17

000000000021b300 <symlink_idempotent@plt>:
  21b300:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b304:	ldr	x17, [x16, #3864]
  21b308:	add	x16, x16, #0xf18
  21b30c:	br	x17

000000000021b310 <nftw64@plt>:
  21b310:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b314:	ldr	x17, [x16, #3872]
  21b318:	add	x16, x16, #0xf20
  21b31c:	br	x17

000000000021b320 <format_timespan@plt>:
  21b320:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b324:	ldr	x17, [x16, #3880]
  21b328:	add	x16, x16, #0xf28
  21b32c:	br	x17

000000000021b330 <dev_setup@plt>:
  21b330:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b334:	ldr	x17, [x16, #3888]
  21b338:	add	x16, x16, #0xf30
  21b33c:	br	x17

000000000021b340 <mkdir_label@plt>:
  21b340:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b344:	ldr	x17, [x16, #3896]
  21b348:	add	x16, x16, #0xf38
  21b34c:	br	x17

000000000021b350 <make_inaccessible_nodes@plt>:
  21b350:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b354:	ldr	x17, [x16, #3904]
  21b358:	add	x16, x16, #0xf40
  21b35c:	br	x17

000000000021b360 <cg_all_unified@plt>:
  21b360:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b364:	ldr	x17, [x16, #3912]
  21b368:	add	x16, x16, #0xf48
  21b36c:	br	x17

000000000021b370 <statfs64@plt>:
  21b370:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b374:	ldr	x17, [x16, #3920]
  21b378:	add	x16, x16, #0xf50
  21b37c:	br	x17

000000000021b380 <conf_files_list@plt>:
  21b380:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b384:	ldr	x17, [x16, #3928]
  21b388:	add	x16, x16, #0xf58
  21b38c:	br	x17

000000000021b390 <unlink@plt>:
  21b390:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b394:	ldr	x17, [x16, #3936]
  21b398:	add	x16, x16, #0xf60
  21b39c:	br	x17

000000000021b3a0 <path_simplify@plt>:
  21b3a0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b3a4:	ldr	x17, [x16, #3944]
  21b3a8:	add	x16, x16, #0xf68
  21b3ac:	br	x17

000000000021b3b0 <path_is_normalized@plt>:
  21b3b0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b3b4:	ldr	x17, [x16, #3952]
  21b3b8:	add	x16, x16, #0xf70
  21b3bc:	br	x17

000000000021b3c0 <path_is_absolute@plt>:
  21b3c0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b3c4:	ldr	x17, [x16, #3960]
  21b3c8:	add	x16, x16, #0xf78
  21b3cc:	br	x17

000000000021b3d0 <strv_free@plt>:
  21b3d0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b3d4:	ldr	x17, [x16, #3968]
  21b3d8:	add	x16, x16, #0xf80
  21b3dc:	br	x17

000000000021b3e0 <__lxstat64@plt>:
  21b3e0:	adrp	x16, 22b000 <__lxstat64@plt+0xfc20>
  21b3e4:	ldr	x17, [x16, #3976]
  21b3e8:	add	x16, x16, #0xf88
  21b3ec:	br	x17
