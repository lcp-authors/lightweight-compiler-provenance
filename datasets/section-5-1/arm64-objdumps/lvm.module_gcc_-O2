
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lvm.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_lvm_getvalue>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	mov	x0, x1
      14:	ldrb	w4, [x1]
      18:	ldr	x2, [x19]
      1c:	cbz	w4, 88 <grub_lvm_getvalue+0x88>
      20:	ldrb	w1, [x2]
      24:	add	x6, x0, #0x1
      28:	cbnz	w1, 38 <grub_lvm_getvalue+0x38>
      2c:	b	74 <grub_lvm_getvalue+0x74>
      30:	ldrb	w1, [x2]
      34:	cbz	w1, 74 <grub_lvm_getvalue+0x74>
      38:	mov	x7, x2
      3c:	cmp	w4, w1
      40:	add	x2, x2, #0x1
      44:	b.ne	30 <grub_lvm_getvalue+0x30>  // b.any
      48:	ldrb	w3, [x0, #1]
      4c:	cbz	w3, b0 <grub_lvm_getvalue+0xb0>
      50:	mov	x1, #0x0                   	// #0
      54:	b	64 <grub_lvm_getvalue+0x64>
      58:	b.ne	30 <grub_lvm_getvalue+0x30>  // b.any
      5c:	ldrb	w3, [x6, x1]
      60:	cbz	w3, b0 <grub_lvm_getvalue+0xb0>
      64:	ldrb	w5, [x2, x1]
      68:	add	x1, x1, #0x1
      6c:	cmp	w5, w3
      70:	cbnz	w5, 58 <grub_lvm_getvalue+0x58>
      74:	str	xzr, [x19]
      78:	mov	x0, #0x0                   	// #0
      7c:	ldr	x19, [sp, #16]
      80:	ldp	x29, x30, [sp], #32
      84:	ret
      88:	cbz	x2, 78 <grub_lvm_getvalue+0x78>
      8c:	bl	0 <grub_strlen>
      90:	ldr	x3, [x19]
      94:	mov	x1, x19
      98:	mov	w2, #0xa                   	// #10
      9c:	add	x0, x3, x0
      a0:	str	x0, [x19]
      a4:	ldr	x19, [sp, #16]
      a8:	ldp	x29, x30, [sp], #32
      ac:	b	0 <grub_strtoull>
      b0:	str	x7, [x19]
      b4:	b	8c <grub_lvm_getvalue+0x8c>

00000000000000b8 <grub_lvm_check_flag.constprop.0>:
      b8:	stp	x29, x30, [sp, #-64]!
      bc:	adrp	x2, 0 <grub_lvm_getvalue>
      c0:	mov	x29, sp
      c4:	stp	x19, x20, [sp, #16]
      c8:	mov	x20, x0
      cc:	adrp	x19, 0 <grub_lvm_getvalue>
      d0:	ldr	x0, [x2]
      d4:	stp	x21, x22, [sp, #32]
      d8:	mov	x22, x1
      dc:	str	x23, [sp, #48]
      e0:	bl	0 <grub_strlen>
      e4:	mov	x23, x0
      e8:	mov	x0, x22
      ec:	bl	0 <grub_strlen>
      f0:	mov	x21, x0
      f4:	nop
      f8:	ldrb	w1, [x20]
      fc:	cbz	w1, 13c <grub_lvm_check_flag.constprop.0+0x84>
     100:	mov	x0, x20
     104:	cmp	w1, #0x73
     108:	add	x20, x20, #0x1
     10c:	b.ne	f8 <grub_lvm_check_flag.constprop.0+0x40>  // b.any
     110:	mov	x2, #0x0                   	// #0
     114:	mov	w4, #0x74                  	// #116
     118:	b	12c <grub_lvm_check_flag.constprop.0+0x74>
     11c:	b.ne	f8 <grub_lvm_check_flag.constprop.0+0x40>  // b.any
     120:	ldr	x1, [x19]
     124:	ldrb	w4, [x2, x1]
     128:	cbz	w4, 154 <grub_lvm_check_flag.constprop.0+0x9c>
     12c:	ldrb	w3, [x20, x2]
     130:	add	x2, x2, #0x1
     134:	cmp	w3, w4
     138:	cbnz	w3, 11c <grub_lvm_check_flag.constprop.0+0x64>
     13c:	mov	w0, #0x0                   	// #0
     140:	ldp	x19, x20, [sp, #16]
     144:	ldp	x21, x22, [sp, #32]
     148:	ldr	x23, [sp, #48]
     14c:	ldp	x29, x30, [sp], #64
     150:	ret
     154:	adrp	x1, 0 <grub_lvm_getvalue>
     158:	add	x20, x0, x23
     15c:	mov	x0, x20
     160:	mov	x2, #0x4                   	// #4
     164:	ldr	x1, [x1]
     168:	bl	0 <grub_memcmp>
     16c:	cbnz	w0, f8 <grub_lvm_check_flag.constprop.0+0x40>
     170:	add	x20, x20, #0x4
     174:	nop
     178:	ldrb	w0, [x20]
     17c:	bl	0 <grub_isspace>
     180:	cbnz	w0, 1e8 <grub_lvm_check_flag.constprop.0+0x130>
     184:	ldrb	w0, [x20]
     188:	cmp	w0, #0x22
     18c:	b.ne	13c <grub_lvm_check_flag.constprop.0+0x84>  // b.any
     190:	add	x19, x20, #0x1
     194:	mov	x2, x21
     198:	mov	x0, x19
     19c:	mov	x1, x22
     1a0:	bl	0 <grub_memcmp>
     1a4:	cbnz	w0, 1b4 <grub_lvm_check_flag.constprop.0+0xfc>
     1a8:	ldrb	w0, [x19, x21]
     1ac:	cmp	w0, #0x22
     1b0:	b.eq	1f0 <grub_lvm_check_flag.constprop.0+0x138>  // b.none
     1b4:	ldrb	w0, [x20, #1]
     1b8:	cmp	w0, #0x22
     1bc:	b.eq	1cc <grub_lvm_check_flag.constprop.0+0x114>  // b.none
     1c0:	ldrb	w2, [x19, #1]!
     1c4:	cmp	w2, #0x22
     1c8:	b.ne	1c0 <grub_lvm_check_flag.constprop.0+0x108>  // b.any
     1cc:	ldrb	w0, [x19, #1]
     1d0:	cmp	w0, #0x5d
     1d4:	b.eq	13c <grub_lvm_check_flag.constprop.0+0x84>  // b.none
     1d8:	ldrb	w0, [x19, #2]
     1dc:	add	x20, x19, #0x2
     1e0:	bl	0 <grub_isspace>
     1e4:	cbz	w0, 184 <grub_lvm_check_flag.constprop.0+0xcc>
     1e8:	add	x20, x20, #0x1
     1ec:	b	178 <grub_lvm_check_flag.constprop.0+0xc0>
     1f0:	mov	w0, #0x1                   	// #1
     1f4:	ldp	x19, x20, [sp, #16]
     1f8:	ldp	x21, x22, [sp, #32]
     1fc:	ldr	x23, [sp, #48]
     200:	ldp	x29, x30, [sp], #64
     204:	ret
	...

0000000000000220 <grub_lvm_detect>:
     220:	sub	sp, sp, #0x300
     224:	stp	x29, x30, [sp]
     228:	mov	x29, sp
     22c:	stp	x19, x20, [sp, #16]
     230:	mov	x20, x1
     234:	stp	x21, x22, [sp, #32]
     238:	mov	x22, x0
     23c:	stp	x25, x26, [sp, #64]
     240:	add	x26, sp, #0x118
     244:	adrp	x25, 0 <grub_lvm_getvalue>
     248:	stp	x23, x24, [sp, #48]
     24c:	mov	x23, #0x0                   	// #0
     250:	adrp	x24, 0 <grub_lvm_getvalue>
     254:	str	x2, [sp, #96]
     258:	mov	x1, x23
     25c:	add	x4, sp, #0x100
     260:	mov	x0, x22
     264:	mov	x3, #0x200                 	// #512
     268:	mov	x2, #0x0                   	// #0
     26c:	add	x23, x23, #0x1
     270:	bl	0 <grub_disk_read>
     274:	mov	w19, w0
     278:	cbnz	w0, 298 <grub_lvm_detect+0x78>
     27c:	ldr	x1, [x24]
     280:	add	x0, sp, #0x100
     284:	mov	x2, #0x8                   	// #8
     288:	bl	0 <grub_strncmp>
     28c:	cbz	w0, 2bc <grub_lvm_detect+0x9c>
     290:	cmp	x23, #0x4
     294:	b.ne	258 <grub_lvm_detect+0x38>  // b.any
     298:	mov	x26, #0x0                   	// #0
     29c:	mov	x0, x26
     2a0:	ldp	x29, x30, [sp]
     2a4:	ldp	x19, x20, [sp, #16]
     2a8:	ldp	x21, x22, [sp, #32]
     2ac:	ldp	x23, x24, [sp, #48]
     2b0:	ldp	x25, x26, [sp, #64]
     2b4:	add	sp, sp, #0x300
     2b8:	ret
     2bc:	ldr	x1, [x25]
     2c0:	mov	x0, x26
     2c4:	mov	x2, #0x8                   	// #8
     2c8:	bl	0 <grub_strncmp>
     2cc:	cbnz	w0, 290 <grub_lvm_detect+0x70>
     2d0:	ldr	w0, [sp, #276]
     2d4:	add	x2, sp, #0x100
     2d8:	stp	x27, x28, [sp, #80]
     2dc:	add	x28, sp, #0xd8
     2e0:	add	x0, x2, x0
     2e4:	mov	x1, #0x0                   	// #0
     2e8:	mov	w4, #0x2d                  	// #45
     2ec:	nop
     2f0:	ldrb	w2, [x0, x1]
     2f4:	cmp	w1, #0x1
     2f8:	strb	w2, [x28, w19, uxtw]
     2fc:	and	w3, w1, #0x3
     300:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
     304:	add	w2, w19, #0x1
     308:	b.eq	314 <grub_lvm_detect+0xf4>  // b.none
     30c:	cmp	w3, #0x1
     310:	b.eq	498 <grub_lvm_detect+0x278>  // b.none
     314:	mov	w19, w2
     318:	add	x1, x1, #0x1
     31c:	cmp	x1, #0x20
     320:	b.ne	2f0 <grub_lvm_detect+0xd0>  // b.any
     324:	ldr	x1, [x0, #56]
     328:	strb	wzr, [x28, w19, uxtw]
     32c:	cbnz	x1, 52c <grub_lvm_detect+0x30c>
     330:	ldp	x24, x23, [x0, #72]
     334:	lsl	x0, x23, #1
     338:	bl	0 <grub_malloc>
     33c:	mov	x19, x0
     340:	cbz	x0, 564 <grub_lvm_detect+0x344>
     344:	mov	x2, x24
     348:	mov	x0, x22
     34c:	mov	x4, x19
     350:	mov	x3, x23
     354:	mov	x1, #0x0                   	// #0
     358:	bl	0 <grub_disk_read>
     35c:	cbnz	w0, 468 <grub_lvm_detect+0x248>
     360:	adrp	x1, 0 <grub_lvm_getvalue>
     364:	add	x0, x19, #0x4
     368:	mov	x2, #0x10                  	// #16
     36c:	ldr	x1, [x1]
     370:	bl	0 <grub_strncmp>
     374:	cbnz	w0, 518 <grub_lvm_detect+0x2f8>
     378:	ldr	w0, [x19, #20]
     37c:	cmp	w0, #0x1
     380:	b.ne	518 <grub_lvm_detect+0x2f8>  // b.any
     384:	ldp	x2, x0, [x19, #32]
     388:	add	x22, x19, x23
     38c:	ldr	x1, [x19, #48]
     390:	add	x1, x0, x1
     394:	cmp	x1, x2
     398:	b.hi	56c <grub_lvm_detect+0x34c>  // b.pmore
     39c:	add	x25, x19, x0
     3a0:	str	x25, [sp, #168]
     3a4:	mov	x23, x25
     3a8:	ldrb	w0, [x19, x0]
     3ac:	cmp	w0, #0x20
     3b0:	b.eq	3d4 <grub_lvm_detect+0x1b4>  // b.none
     3b4:	cmp	x25, x22
     3b8:	b.cc	3c8 <grub_lvm_detect+0x1a8>  // b.lo, b.ul, b.last
     3bc:	b	3d4 <grub_lvm_detect+0x1b4>
     3c0:	cmp	x23, x22
     3c4:	b.eq	468 <grub_lvm_detect+0x248>  // b.none
     3c8:	ldrb	w0, [x23, #1]!
     3cc:	cmp	w0, #0x20
     3d0:	b.ne	3c0 <grub_lvm_detect+0x1a0>  // b.any
     3d4:	cmp	x23, x22
     3d8:	b.eq	468 <grub_lvm_detect+0x248>  // b.none
     3dc:	sub	x25, x23, x25
     3e0:	add	x0, x25, #0x1
     3e4:	bl	0 <grub_malloc>
     3e8:	mov	x24, x0
     3ec:	cbz	x0, 468 <grub_lvm_detect+0x248>
     3f0:	ldr	x1, [sp, #168]
     3f4:	add	x3, x0, x25
     3f8:	mov	x2, x25
     3fc:	str	x3, [sp, #104]
     400:	bl	0 <grub_memmove>
     404:	strb	wzr, [x24, x25]
     408:	ldrb	w0, [x23]
     40c:	cbz	w0, 45c <grub_lvm_detect+0x23c>
     410:	adrp	x4, 0 <grub_lvm_getvalue>
     414:	b	420 <grub_lvm_detect+0x200>
     418:	ldrb	w0, [x23]
     41c:	cbz	w0, 45c <grub_lvm_detect+0x23c>
     420:	mov	x3, x23
     424:	cmp	w0, #0x69
     428:	add	x23, x23, #0x1
     42c:	b.ne	418 <grub_lvm_detect+0x1f8>  // b.any
     430:	mov	x0, #0x0                   	// #0
     434:	mov	w2, #0x64                  	// #100
     438:	b	44c <grub_lvm_detect+0x22c>
     43c:	b.ne	418 <grub_lvm_detect+0x1f8>  // b.any
     440:	ldr	x22, [x4]
     444:	ldrb	w2, [x22, x0]
     448:	cbz	w2, 4a4 <grub_lvm_detect+0x284>
     44c:	ldrb	w1, [x23, x0]
     450:	add	x0, x0, #0x1
     454:	cmp	w1, w2
     458:	cbnz	w1, 43c <grub_lvm_detect+0x21c>
     45c:	str	xzr, [sp, #168]
     460:	mov	x0, x24
     464:	bl	0 <grub_free>
     468:	mov	x0, x19
     46c:	mov	x26, #0x0                   	// #0
     470:	bl	0 <grub_free>
     474:	mov	x0, x26
     478:	ldp	x29, x30, [sp]
     47c:	ldp	x19, x20, [sp, #16]
     480:	ldp	x21, x22, [sp, #32]
     484:	ldp	x23, x24, [sp, #48]
     488:	ldp	x25, x26, [sp, #64]
     48c:	ldp	x27, x28, [sp, #80]
     490:	add	sp, sp, #0x300
     494:	ret
     498:	add	w19, w19, #0x2
     49c:	strb	w4, [x28, w2, uxtw]
     4a0:	b	318 <grub_lvm_detect+0xf8>
     4a4:	mov	x2, #0x26                  	// #38
     4a8:	add	x1, x3, #0x6
     4ac:	add	x0, sp, #0xb0
     4b0:	str	x1, [sp, #168]
     4b4:	bl	0 <grub_memmove>
     4b8:	strb	wzr, [sp, #214]
     4bc:	add	x1, sp, #0xb0
     4c0:	mov	x0, #0x26                  	// #38
     4c4:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     4c8:	mov	x26, x0
     4cc:	cbz	x0, 584 <grub_lvm_detect+0x364>
     4d0:	mov	x0, x24
     4d4:	bl	0 <grub_free>
     4d8:	mov	x0, #0x26                  	// #38
     4dc:	bl	0 <grub_malloc>
     4e0:	str	x0, [x20]
     4e4:	cbz	x0, 9c8 <grub_lvm_detect+0x7a8>
     4e8:	mov	x1, x28
     4ec:	mov	x2, #0x26                  	// #38
     4f0:	bl	0 <grub_memmove>
     4f4:	mov	x0, #0x26                  	// #38
     4f8:	str	x0, [x20, #8]
     4fc:	mov	x0, x19
     500:	bl	0 <grub_free>
     504:	ldr	x1, [sp, #96]
     508:	mov	x0, #0xffffffffffffffff    	// #-1
     50c:	ldp	x27, x28, [sp, #80]
     510:	str	x0, [x1]
     514:	b	29c <grub_lvm_detect+0x7c>
     518:	adrp	x1, 0 <grub_lvm_getvalue>
     51c:	mov	w0, #0x18                  	// #24
     520:	ldr	x1, [x1]
     524:	bl	0 <grub_error>
     528:	b	468 <grub_lvm_detect+0x248>
     52c:	adrp	x1, 0 <grub_lvm_getvalue>
     530:	mov	x26, #0x0                   	// #0
     534:	mov	w0, #0x18                  	// #24
     538:	ldr	x1, [x1]
     53c:	bl	0 <grub_error>
     540:	mov	x0, x26
     544:	ldp	x29, x30, [sp]
     548:	ldp	x19, x20, [sp, #16]
     54c:	ldp	x21, x22, [sp, #32]
     550:	ldp	x23, x24, [sp, #48]
     554:	ldp	x25, x26, [sp, #64]
     558:	ldp	x27, x28, [sp, #80]
     55c:	add	sp, sp, #0x300
     560:	ret
     564:	ldp	x27, x28, [sp, #80]
     568:	b	298 <grub_lvm_detect+0x78>
     56c:	sub	x2, x1, x2
     570:	mov	x0, x22
     574:	add	x1, x19, #0x200
     578:	bl	0 <grub_memmove>
     57c:	ldr	x0, [x19, #40]
     580:	b	39c <grub_lvm_detect+0x17c>
     584:	mov	x0, #0x38                  	// #56
     588:	bl	0 <grub_malloc>
     58c:	mov	x23, x0
     590:	cbz	x0, 460 <grub_lvm_detect+0x240>
     594:	str	x24, [x23, #16]
     598:	mov	x0, #0x26                  	// #38
     59c:	bl	0 <grub_malloc>
     5a0:	str	x0, [x23]
     5a4:	cbz	x0, 460 <grub_lvm_detect+0x240>
     5a8:	add	x1, sp, #0xb0
     5ac:	mov	x2, #0x26                  	// #38
     5b0:	bl	0 <grub_memmove>
     5b4:	adrp	x0, 0 <grub_lvm_getvalue>
     5b8:	mov	x1, #0x26                  	// #38
     5bc:	str	x1, [x23, #8]
     5c0:	ldr	x1, [x0]
     5c4:	add	x0, sp, #0xa8
     5c8:	bl	0 <grub_lvm_getvalue>
     5cc:	str	x0, [x23, #24]
     5d0:	ldr	x1, [sp, #168]
     5d4:	cbz	x1, 860 <grub_lvm_detect+0x640>
     5d8:	stp	xzr, xzr, [x23, #32]
     5dc:	ldrb	w0, [x1]
     5e0:	cbz	w0, 630 <grub_lvm_detect+0x410>
     5e4:	adrp	x6, 0 <grub_lvm_getvalue>
     5e8:	b	5f4 <grub_lvm_detect+0x3d4>
     5ec:	ldrb	w0, [x1]
     5f0:	cbz	w0, 630 <grub_lvm_detect+0x410>
     5f4:	cmp	w0, #0x70
     5f8:	mov	x0, x1
     5fc:	add	x1, x1, #0x1
     600:	b.ne	5ec <grub_lvm_detect+0x3cc>  // b.any
     604:	mov	x2, #0x0                   	// #0
     608:	mov	w3, #0x68                  	// #104
     60c:	b	620 <grub_lvm_detect+0x400>
     610:	b.ne	5ec <grub_lvm_detect+0x3cc>  // b.any
     614:	ldr	x3, [x6]
     618:	ldrb	w3, [x2, x3]
     61c:	cbz	w3, 86c <grub_lvm_detect+0x64c>
     620:	ldrb	w4, [x1, x2]
     624:	add	x2, x2, #0x1
     628:	cmp	w4, w3
     62c:	cbnz	w4, 610 <grub_lvm_detect+0x3f0>
     630:	mov	x0, #0x0                   	// #0
     634:	str	xzr, [sp, #168]
     638:	ldrb	w0, [x0]
     63c:	cbz	w0, 68c <grub_lvm_detect+0x46c>
     640:	adrp	x4, 0 <grub_lvm_getvalue>
     644:	b	650 <grub_lvm_detect+0x430>
     648:	ldrb	w0, [x26]
     64c:	cbz	w0, 68c <grub_lvm_detect+0x46c>
     650:	cmp	w0, #0x6c
     654:	mov	x0, x26
     658:	add	x26, x26, #0x1
     65c:	b.ne	648 <grub_lvm_detect+0x428>  // b.any
     660:	mov	x1, #0x0                   	// #0
     664:	mov	w2, #0x6f                  	// #111
     668:	b	67c <grub_lvm_detect+0x45c>
     66c:	b.ne	648 <grub_lvm_detect+0x428>  // b.any
     670:	ldr	x2, [x4]
     674:	ldrb	w2, [x1, x2]
     678:	cbz	w2, 9dc <grub_lvm_detect+0x7bc>
     67c:	ldrb	w3, [x26, x1]
     680:	add	x1, x1, #0x1
     684:	cmp	w3, w2
     688:	cbnz	w3, 66c <grub_lvm_detect+0x44c>
     68c:	str	xzr, [sp, #168]
     690:	ldr	x25, [x23, #40]
     694:	cbz	x25, 7b8 <grub_lvm_detect+0x598>
     698:	ldr	w2, [x25, #28]
     69c:	cbz	w2, 7b0 <grub_lvm_detect+0x590>
     6a0:	ldr	x1, [x25, #64]
     6a4:	str	wzr, [sp, #104]
     6a8:	ldr	w0, [sp, #104]
     6ac:	mov	w3, #0x38                  	// #56
     6b0:	mov	w27, #0x0                   	// #0
     6b4:	umull	x26, w0, w3
     6b8:	add	x0, x1, x26
     6bc:	ldr	w3, [x0, #32]
     6c0:	cbnz	w3, 6e8 <grub_lvm_detect+0x4c8>
     6c4:	b	79c <grub_lvm_detect+0x57c>
     6c8:	ldr	x2, [x0, #40]
     6cc:	add	x2, x2, x22
     6d0:	ldr	x3, [x2, #16]
     6d4:	cbz	x3, 704 <grub_lvm_detect+0x4e4>
     6d8:	ldr	w2, [x0, #32]
     6dc:	add	w27, w27, #0x1
     6e0:	cmp	w2, w27
     6e4:	b.ls	798 <grub_lvm_detect+0x578>  // b.plast
     6e8:	ldr	x21, [x23, #32]
     6ec:	ubfiz	x22, x27, #5, #32
     6f0:	cbnz	x21, 75c <grub_lvm_detect+0x53c>
     6f4:	ldr	x2, [x0, #40]
     6f8:	add	x2, x2, x22
     6fc:	ldr	x3, [x2, #16]
     700:	cbnz	x3, 6d8 <grub_lvm_detect+0x4b8>
     704:	ldr	x21, [x23, #40]
     708:	cbnz	x21, 724 <grub_lvm_detect+0x504>
     70c:	b	6d8 <grub_lvm_detect+0x4b8>
     710:	add	x0, x1, x26
     714:	ldr	x21, [x21, #80]
     718:	cbz	x21, 6d8 <grub_lvm_detect+0x4b8>
     71c:	ldr	x2, [x0, #40]
     720:	add	x2, x2, x22
     724:	ldr	x1, [x2, #8]
     728:	ldr	x0, [x21, #16]
     72c:	bl	0 <grub_strcmp>
     730:	ldr	x1, [x25, #64]
     734:	cbnz	w0, 710 <grub_lvm_detect+0x4f0>
     738:	add	x0, x1, x26
     73c:	ldr	x2, [x0, #40]
     740:	add	x2, x2, x22
     744:	str	x21, [x2, #24]
     748:	b	714 <grub_lvm_detect+0x4f4>
     74c:	ldr	x21, [x21, #56]
     750:	ldr	x1, [x25, #64]
     754:	add	x0, x1, x26
     758:	cbz	x21, 6c8 <grub_lvm_detect+0x4a8>
     75c:	ldr	x1, [x0, #40]
     760:	ldr	x0, [x21, #16]
     764:	add	x1, x1, x22
     768:	ldr	x1, [x1, #8]
     76c:	bl	0 <grub_strcmp>
     770:	cbnz	w0, 74c <grub_lvm_detect+0x52c>
     774:	ldr	x1, [x25, #64]
     778:	add	w27, w27, #0x1
     77c:	add	x0, x1, x26
     780:	ldr	x3, [x0, #40]
     784:	ldr	w2, [x0, #32]
     788:	add	x22, x3, x22
     78c:	cmp	w2, w27
     790:	str	x21, [x22, #16]
     794:	b.hi	6e8 <grub_lvm_detect+0x4c8>  // b.pmore
     798:	ldr	w2, [x25, #28]
     79c:	ldr	w0, [sp, #104]
     7a0:	add	w0, w0, #0x1
     7a4:	str	w0, [sp, #104]
     7a8:	cmp	w2, w0
     7ac:	b.hi	6a8 <grub_lvm_detect+0x488>  // b.pmore
     7b0:	ldr	x25, [x25, #80]
     7b4:	cbnz	x25, 698 <grub_lvm_detect+0x478>
     7b8:	mov	x0, x23
     7bc:	bl	0 <grub_diskfilter_vg_register>
     7c0:	cbnz	w0, 860 <grub_lvm_detect+0x640>
     7c4:	mov	x26, x23
     7c8:	b	4d8 <grub_lvm_detect+0x2b8>
     7cc:	adrp	x1, 0 <grub_lvm_getvalue>
     7d0:	mov	w0, #0x1                   	// #1
     7d4:	str	w0, [x25, #16]
     7d8:	add	x0, sp, #0xa8
     7dc:	ldr	x1, [x1]
     7e0:	bl	0 <grub_lvm_getvalue>
     7e4:	ldr	x1, [sp, #168]
     7e8:	str	w0, [x25, #32]
     7ec:	cbz	x1, 860 <grub_lvm_detect+0x640>
     7f0:	ubfiz	x0, x0, #5, #32
     7f4:	bl	0 <grub_zalloc>
     7f8:	ldr	x1, [sp, #168]
     7fc:	str	x0, [x25, #40]
     800:	ldrb	w0, [x1]
     804:	cbz	w0, 854 <grub_lvm_detect+0x634>
     808:	adrp	x6, 0 <grub_lvm_getvalue>
     80c:	b	818 <grub_lvm_detect+0x5f8>
     810:	ldrb	w0, [x1]
     814:	cbz	w0, 854 <grub_lvm_detect+0x634>
     818:	cmp	w0, #0x6d
     81c:	mov	x0, x1
     820:	add	x1, x1, #0x1
     824:	b.ne	810 <grub_lvm_detect+0x5f0>  // b.any
     828:	mov	x2, #0x0                   	// #0
     82c:	mov	w3, #0x69                  	// #105
     830:	b	844 <grub_lvm_detect+0x624>
     834:	b.ne	810 <grub_lvm_detect+0x5f0>  // b.any
     838:	ldr	x3, [x6]
     83c:	ldrb	w3, [x2, x3]
     840:	cbz	w3, 1148 <grub_lvm_detect+0xf28>
     844:	ldrb	w4, [x1, x2]
     848:	add	x2, x2, #0x1
     84c:	cmp	w3, w4
     850:	cbnz	w4, 834 <grub_lvm_detect+0x614>
     854:	str	xzr, [sp, #168]
     858:	ldr	x0, [x25, #40]
     85c:	bl	0 <grub_free>
     860:	mov	x0, x23
     864:	bl	0 <grub_free>
     868:	b	460 <grub_lvm_detect+0x240>
     86c:	add	x0, x0, #0x12
     870:	mov	x27, #0x26                  	// #38
     874:	str	x0, [sp, #168]
     878:	ldrb	w0, [x0]
     87c:	bl	0 <grub_isspace>
     880:	cbnz	w0, 948 <grub_lvm_detect+0x728>
     884:	ldr	x26, [sp, #168]
     888:	ldrb	w0, [x26]
     88c:	cmp	w0, #0x7d
     890:	b.eq	640 <grub_lvm_detect+0x420>  // b.none
     894:	mov	x0, #0x48                  	// #72
     898:	bl	0 <grub_zalloc>
     89c:	ldr	x2, [sp, #168]
     8a0:	mov	x26, x0
     8a4:	ldrb	w0, [x2]
     8a8:	cmp	w0, #0x20
     8ac:	b.eq	9d0 <grub_lvm_detect+0x7b0>  // b.none
     8b0:	mov	x0, x2
     8b4:	nop
     8b8:	ldrb	w1, [x0, #1]!
     8bc:	cmp	w1, #0x20
     8c0:	b.ne	8b8 <grub_lvm_detect+0x698>  // b.any
     8c4:	sub	x2, x0, x2
     8c8:	add	x0, x2, #0x1
     8cc:	mov	x21, x2
     8d0:	bl	0 <grub_malloc>
     8d4:	str	x0, [x26, #16]
     8d8:	ldr	x1, [sp, #168]
     8dc:	mov	x2, x21
     8e0:	bl	0 <grub_memmove>
     8e4:	ldr	x0, [x26, #16]
     8e8:	strb	wzr, [x0, x21]
     8ec:	ldr	x1, [sp, #168]
     8f0:	ldrb	w0, [x1]
     8f4:	cbz	w0, 930 <grub_lvm_detect+0x710>
     8f8:	mov	x4, x1
     8fc:	cmp	w0, #0x69
     900:	add	x1, x1, #0x1
     904:	b.ne	8f0 <grub_lvm_detect+0x6d0>  // b.any
     908:	mov	x0, #0x0                   	// #0
     90c:	mov	w3, #0x64                  	// #100
     910:	b	920 <grub_lvm_detect+0x700>
     914:	b.ne	8f0 <grub_lvm_detect+0x6d0>  // b.any
     918:	ldrb	w3, [x22, x0]
     91c:	cbz	w3, 958 <grub_lvm_detect+0x738>
     920:	ldrb	w2, [x1, x0]
     924:	add	x0, x0, #0x1
     928:	cmp	w2, w3
     92c:	cbnz	w2, 914 <grub_lvm_detect+0x6f4>
     930:	str	xzr, [sp, #168]
     934:	ldr	x0, [x26, #16]
     938:	bl	0 <grub_free>
     93c:	mov	x0, x26
     940:	bl	0 <grub_free>
     944:	b	860 <grub_lvm_detect+0x640>
     948:	ldr	x0, [sp, #168]
     94c:	add	x0, x0, #0x1
     950:	str	x0, [sp, #168]
     954:	b	878 <grub_lvm_detect+0x658>
     958:	add	x4, x4, #0x6
     95c:	mov	x0, #0x26                  	// #38
     960:	str	x4, [sp, #168]
     964:	bl	0 <grub_malloc>
     968:	str	x0, [x26]
     96c:	cbz	x0, 934 <grub_lvm_detect+0x714>
     970:	ldr	x1, [sp, #168]
     974:	mov	x2, #0x26                  	// #38
     978:	bl	0 <grub_memmove>
     97c:	str	x27, [x26, #8]
     980:	adrp	x0, 0 <grub_lvm_getvalue>
     984:	ldr	x1, [x0]
     988:	add	x0, sp, #0xa8
     98c:	bl	0 <grub_lvm_getvalue>
     990:	mov	x1, x0
     994:	ldr	x0, [sp, #168]
     998:	str	x1, [x26, #48]
     99c:	cbz	x0, 934 <grub_lvm_detect+0x714>
     9a0:	mov	w1, #0x7d                  	// #125
     9a4:	bl	0 <grub_strchr>
     9a8:	cbz	x0, 930 <grub_lvm_detect+0x710>
     9ac:	ldr	x1, [x23, #32]
     9b0:	str	xzr, [x26, #24]
     9b4:	str	x1, [x26, #56]
     9b8:	add	x0, x0, #0x1
     9bc:	str	x26, [x23, #32]
     9c0:	str	x0, [sp, #168]
     9c4:	b	878 <grub_lvm_detect+0x658>
     9c8:	mov	x23, x26
     9cc:	b	860 <grub_lvm_detect+0x640>
     9d0:	mov	x21, #0x0                   	// #0
     9d4:	mov	x0, #0x1                   	// #1
     9d8:	b	8d0 <grub_lvm_detect+0x6b0>
     9dc:	add	x25, x25, #0x3
     9e0:	add	x0, x0, #0x11
     9e4:	adrp	x27, 0 <grub_lvm_getvalue>
     9e8:	str	x0, [sp, #168]
     9ec:	lsl	x1, x25, #1
     9f0:	str	x1, [sp, #136]
     9f4:	b	a04 <grub_lvm_detect+0x7e4>
     9f8:	ldr	x0, [sp, #168]
     9fc:	add	x0, x0, #0x1
     a00:	str	x0, [sp, #168]
     a04:	ldrb	w0, [x0]
     a08:	bl	0 <grub_isspace>
     a0c:	str	w0, [sp, #116]
     a10:	cbnz	w0, 9f8 <grub_lvm_detect+0x7d8>
     a14:	ldr	x0, [sp, #168]
     a18:	ldrb	w0, [x0]
     a1c:	cmp	w0, #0x7d
     a20:	b.eq	690 <grub_lvm_detect+0x470>  // b.none
     a24:	mov	x0, #0x60                  	// #96
     a28:	bl	0 <grub_zalloc>
     a2c:	mov	x26, x0
     a30:	ldr	x0, [sp, #168]
     a34:	mov	x25, x0
     a38:	ldrb	w1, [x0]
     a3c:	cmp	w1, #0x20
     a40:	b.eq	a50 <grub_lvm_detect+0x830>  // b.none
     a44:	ldrb	w1, [x25, #1]!
     a48:	cmp	w1, #0x20
     a4c:	b.ne	a44 <grub_lvm_detect+0x824>  // b.any
     a50:	sub	x21, x25, x0
     a54:	mov	x1, x21
     a58:	bl	0 <grub_strndup>
     a5c:	str	x0, [x26, #16]
     a60:	cbz	x0, 934 <grub_lvm_detect+0x714>
     a64:	ldr	x0, [sp, #136]
     a68:	add	x0, x0, x21, lsl #1
     a6c:	bl	0 <grub_malloc>
     a70:	str	x0, [x26]
     a74:	cbz	x0, 934 <grub_lvm_detect+0x714>
     a78:	adrp	x1, 0 <grub_lvm_getvalue>
     a7c:	mov	x2, #0x4                   	// #4
     a80:	ldr	x1, [x1]
     a84:	bl	0 <grub_memmove>
     a88:	ldr	x0, [x26]
     a8c:	ldr	x1, [sp, #104]
     a90:	add	x0, x0, #0x4
     a94:	cmp	x1, x24
     a98:	b.ls	ad8 <grub_lvm_detect+0x8b8>  // b.plast
     a9c:	mov	x1, x24
     aa0:	b	ab8 <grub_lvm_detect+0x898>
     aa4:	add	x0, x0, #0x1
     aa8:	ldr	x2, [sp, #104]
     aac:	add	x1, x1, #0x1
     ab0:	cmp	x2, x1
     ab4:	b.eq	ad8 <grub_lvm_detect+0x8b8>  // b.none
     ab8:	ldrb	w2, [x1]
     abc:	strb	w2, [x0]
     ac0:	ldrb	w2, [x1]
     ac4:	cmp	w2, #0x2d
     ac8:	b.ne	aa4 <grub_lvm_detect+0x884>  // b.any
     acc:	add	x0, x0, #0x2
     ad0:	sturb	w2, [x0, #-1]
     ad4:	b	aa8 <grub_lvm_detect+0x888>
     ad8:	mov	w1, #0x2d                  	// #45
     adc:	strb	w1, [x0], #1
     ae0:	ldr	x1, [sp, #168]
     ae4:	add	x2, x1, x21
     ae8:	cmp	x1, x2
     aec:	b.cc	b0c <grub_lvm_detect+0x8ec>  // b.lo, b.ul, b.last
     af0:	b	b2c <grub_lvm_detect+0x90c>
     af4:	add	x0, x0, #0x1
     af8:	ldr	x2, [sp, #168]
     afc:	add	x1, x1, #0x1
     b00:	add	x2, x2, x21
     b04:	cmp	x1, x2
     b08:	b.cs	b2c <grub_lvm_detect+0x90c>  // b.hs, b.nlast
     b0c:	ldrb	w2, [x1]
     b10:	strb	w2, [x0]
     b14:	ldrb	w2, [x1]
     b18:	cmp	w2, #0x2d
     b1c:	b.ne	af4 <grub_lvm_detect+0x8d4>  // b.any
     b20:	add	x0, x0, #0x2
     b24:	sturb	w2, [x0, #-1]
     b28:	b	af8 <grub_lvm_detect+0x8d8>
     b2c:	strb	wzr, [x0]
     b30:	mov	x0, #0x54                  	// #84
     b34:	bl	0 <grub_malloc>
     b38:	str	x0, [x26, #8]
     b3c:	cbz	x0, 934 <grub_lvm_detect+0x714>
     b40:	adrp	x1, 0 <grub_lvm_getvalue>
     b44:	mov	x2, #0x6                   	// #6
     b48:	ldr	x1, [x1]
     b4c:	bl	0 <grub_memmove>
     b50:	ldr	x0, [x26, #8]
     b54:	add	x1, sp, #0xb0
     b58:	mov	x2, #0x26                  	// #38
     b5c:	add	x0, x0, #0x6
     b60:	bl	0 <grub_memmove>
     b64:	ldr	x0, [x26, #8]
     b68:	mov	w1, #0x2f                  	// #47
     b6c:	strb	w1, [x0, #44]
     b70:	ldrb	w0, [x25]
     b74:	cbz	w0, 930 <grub_lvm_detect+0x710>
     b78:	mov	x1, x25
     b7c:	cmp	w0, #0x69
     b80:	add	x25, x25, #0x1
     b84:	b.ne	b70 <grub_lvm_detect+0x950>  // b.any
     b88:	mov	x0, #0x0                   	// #0
     b8c:	mov	w2, #0x64                  	// #100
     b90:	b	ba0 <grub_lvm_detect+0x980>
     b94:	b.ne	b70 <grub_lvm_detect+0x950>  // b.any
     b98:	ldrb	w2, [x22, x0]
     b9c:	cbz	w2, bb4 <grub_lvm_detect+0x994>
     ba0:	ldrb	w4, [x25, x0]
     ba4:	add	x0, x0, #0x1
     ba8:	cmp	w2, w4
     bac:	cbnz	w4, b94 <grub_lvm_detect+0x974>
     bb0:	b	930 <grub_lvm_detect+0x710>
     bb4:	ldr	x0, [x26, #8]
     bb8:	add	x1, x1, #0x6
     bbc:	mov	x2, #0x26                  	// #38
     bc0:	str	x1, [sp, #168]
     bc4:	add	x0, x0, #0x2d
     bc8:	bl	0 <grub_memmove>
     bcc:	ldr	x2, [x26, #8]
     bd0:	adrp	x0, 0 <grub_lvm_getvalue>
     bd4:	ldr	x1, [x0]
     bd8:	strb	wzr, [x2, #83]
     bdc:	ldr	x0, [sp, #168]
     be0:	str	xzr, [x26, #40]
     be4:	bl	b8 <grub_lvm_check_flag.constprop.0>
     be8:	str	w0, [x26, #56]
     bec:	adrp	x1, 0 <grub_lvm_getvalue>
     bf0:	ldr	x0, [sp, #168]
     bf4:	ldr	x1, [x1]
     bf8:	bl	b8 <grub_lvm_check_flag.constprop.0>
     bfc:	str	w0, [sp, #132]
     c00:	adrp	x1, 0 <grub_lvm_getvalue>
     c04:	add	x0, sp, #0xa8
     c08:	ldr	x1, [x1]
     c0c:	bl	0 <grub_lvm_getvalue>
     c10:	str	w0, [x26, #28]
     c14:	ldr	x1, [sp, #168]
     c18:	cbz	x1, 934 <grub_lvm_detect+0x714>
     c1c:	ubfiz	x1, x0, #3, #32
     c20:	sub	x0, x1, w0, uxtw
     c24:	lsl	x0, x0, #3
     c28:	bl	0 <grub_zalloc>
     c2c:	ldr	w1, [x26, #28]
     c30:	mov	x25, x0
     c34:	str	x0, [x26, #64]
     c38:	cbz	w1, f84 <grub_lvm_detect+0xd64>
     c3c:	ldr	x0, [sp, #168]
     c40:	str	wzr, [sp, #128]
     c44:	ldrb	w1, [x0]
     c48:	cbz	w1, c88 <grub_lvm_detect+0xa68>
     c4c:	mov	x4, x0
     c50:	cmp	w1, #0x73
     c54:	add	x0, x0, #0x1
     c58:	b.ne	c44 <grub_lvm_detect+0xa24>  // b.any
     c5c:	mov	x1, #0x0                   	// #0
     c60:	mov	w3, #0x65                  	// #101
     c64:	b	c78 <grub_lvm_detect+0xa58>
     c68:	b.ne	c44 <grub_lvm_detect+0xa24>  // b.any
     c6c:	ldr	x2, [x27]
     c70:	ldrb	w3, [x1, x2]
     c74:	cbz	w3, c90 <grub_lvm_detect+0xa70>
     c78:	ldrb	w2, [x0, x1]
     c7c:	add	x1, x1, #0x1
     c80:	cmp	w2, w3
     c84:	cbnz	w2, c68 <grub_lvm_detect+0xa48>
     c88:	str	xzr, [sp, #168]
     c8c:	b	860 <grub_lvm_detect+0x640>
     c90:	adrp	x1, 0 <grub_lvm_getvalue>
     c94:	add	x0, sp, #0xa8
     c98:	str	x4, [sp, #168]
     c9c:	ldr	x1, [x1]
     ca0:	bl	0 <grub_lvm_getvalue>
     ca4:	ldr	x1, [sp, #168]
     ca8:	str	x0, [x25]
     cac:	cbz	x1, 860 <grub_lvm_detect+0x640>
     cb0:	adrp	x1, 0 <grub_lvm_getvalue>
     cb4:	add	x0, sp, #0xa8
     cb8:	ldr	x1, [x1]
     cbc:	bl	0 <grub_lvm_getvalue>
     cc0:	mov	x6, x0
     cc4:	ldr	x1, [sp, #168]
     cc8:	str	x0, [x25, #8]
     ccc:	cbz	x1, 860 <grub_lvm_detect+0x640>
     cd0:	ldrb	w0, [x1]
     cd4:	cbz	w0, c88 <grub_lvm_detect+0xa68>
     cd8:	adrp	x7, 0 <grub_lvm_getvalue>
     cdc:	b	ce8 <grub_lvm_detect+0xac8>
     ce0:	ldrb	w0, [x1]
     ce4:	cbz	w0, c88 <grub_lvm_detect+0xa68>
     ce8:	mov	x4, x1
     cec:	cmp	w0, #0x74
     cf0:	add	x1, x1, #0x1
     cf4:	b.ne	ce0 <grub_lvm_detect+0xac0>  // b.any
     cf8:	mov	x0, #0x0                   	// #0
     cfc:	mov	w2, #0x79                  	// #121
     d00:	b	d14 <grub_lvm_detect+0xaf4>
     d04:	b.ne	ce0 <grub_lvm_detect+0xac0>  // b.any
     d08:	ldr	x2, [x7]
     d0c:	ldrb	w2, [x0, x2]
     d10:	cbz	w2, d2c <grub_lvm_detect+0xb0c>
     d14:	ldrb	w3, [x1, x0]
     d18:	add	x0, x0, #0x1
     d1c:	cmp	w3, w2
     d20:	cbnz	w3, d04 <grub_lvm_detect+0xae4>
     d24:	str	xzr, [sp, #168]
     d28:	b	860 <grub_lvm_detect+0x640>
     d2c:	ldr	x3, [x23, #24]
     d30:	adrp	x1, 0 <grub_lvm_getvalue>
     d34:	ldr	x2, [x26, #40]
     d38:	add	x0, x4, #0x8
     d3c:	ldr	x1, [x1]
     d40:	str	x0, [sp, #168]
     d44:	madd	x6, x6, x3, x2
     d48:	mov	x2, #0x8                   	// #8
     d4c:	str	x6, [x26, #40]
     d50:	bl	0 <grub_memcmp>
     d54:	cbz	w0, fd4 <grub_lvm_detect+0xdb4>
     d58:	adrp	x1, 0 <grub_lvm_getvalue>
     d5c:	mov	x2, #0x7                   	// #7
     d60:	ldr	x0, [sp, #168]
     d64:	ldr	x1, [x1]
     d68:	bl	0 <grub_memcmp>
     d6c:	cbz	w0, 7cc <grub_lvm_detect+0x5ac>
     d70:	adrp	x1, 0 <grub_lvm_getvalue>
     d74:	mov	x2, #0x4                   	// #4
     d78:	ldr	x0, [sp, #168]
     d7c:	ldr	x1, [x1]
     d80:	bl	0 <grub_memcmp>
     d84:	cbnz	w0, 1288 <grub_lvm_detect+0x1068>
     d88:	ldr	x0, [sp, #168]
     d8c:	ldrb	w1, [x0, #4]
     d90:	sub	w2, w1, #0x34
     d94:	cmp	w1, #0x31
     d98:	and	w2, w2, #0xff
     d9c:	ccmp	w2, #0x2, #0x0, ne  // ne = any
     da0:	b.hi	125c <grub_lvm_detect+0x103c>  // b.pmore
     da4:	ldrb	w2, [x0, #5]
     da8:	cmp	w2, #0x22
     dac:	b.ne	125c <grub_lvm_detect+0x103c>  // b.any
     db0:	cmp	w1, #0x35
     db4:	b.eq	124c <grub_lvm_detect+0x102c>  // b.none
     db8:	b.hi	fbc <grub_lvm_detect+0xd9c>  // b.pmore
     dbc:	cmp	w1, #0x31
     dc0:	b.eq	120c <grub_lvm_detect+0xfec>  // b.none
     dc4:	cmp	w1, #0x34
     dc8:	b.ne	dd4 <grub_lvm_detect+0xbb4>  // b.any
     dcc:	mov	w0, #0x4                   	// #4
     dd0:	stp	w0, wzr, [x25, #16]
     dd4:	adrp	x1, 0 <grub_lvm_getvalue>
     dd8:	add	x0, sp, #0xa8
     ddc:	ldr	x1, [x1]
     de0:	bl	0 <grub_lvm_getvalue>
     de4:	ldr	x1, [sp, #168]
     de8:	str	w0, [x25, #32]
     dec:	cbz	x1, 860 <grub_lvm_detect+0x640>
     df0:	ldr	w1, [x25, #16]
     df4:	cmp	w1, #0x1
     df8:	b.eq	e1c <grub_lvm_detect+0xbfc>  // b.none
     dfc:	adrp	x1, 0 <grub_lvm_getvalue>
     e00:	add	x0, sp, #0xa8
     e04:	ldr	x1, [x1]
     e08:	bl	0 <grub_lvm_getvalue>
     e0c:	ldr	x1, [sp, #168]
     e10:	str	w0, [x25, #48]
     e14:	cbz	x1, 860 <grub_lvm_detect+0x640>
     e18:	ldr	w0, [x25, #32]
     e1c:	ubfiz	x0, x0, #5, #32
     e20:	bl	0 <grub_zalloc>
     e24:	str	x0, [x25, #40]
     e28:	ldr	x0, [sp, #168]
     e2c:	ldrb	w1, [x0]
     e30:	cbz	w1, 854 <grub_lvm_detect+0x634>
     e34:	adrp	x6, 0 <grub_lvm_getvalue>
     e38:	b	e44 <grub_lvm_detect+0xc24>
     e3c:	ldrb	w1, [x0]
     e40:	cbz	w1, 854 <grub_lvm_detect+0x634>
     e44:	mov	x4, x0
     e48:	cmp	w1, #0x72
     e4c:	add	x0, x0, #0x1
     e50:	b.ne	e3c <grub_lvm_detect+0xc1c>  // b.any
     e54:	mov	x1, #0x0                   	// #0
     e58:	mov	w3, #0x61                  	// #97
     e5c:	b	e70 <grub_lvm_detect+0xc50>
     e60:	b.ne	e3c <grub_lvm_detect+0xc1c>  // b.any
     e64:	ldr	x2, [x6]
     e68:	ldrb	w3, [x1, x2]
     e6c:	cbz	w3, e84 <grub_lvm_detect+0xc64>
     e70:	ldrb	w2, [x0, x1]
     e74:	add	x1, x1, #0x1
     e78:	cmp	w2, w3
     e7c:	cbnz	w2, e60 <grub_lvm_detect+0xc40>
     e80:	b	854 <grub_lvm_detect+0x634>
     e84:	ldr	w1, [x25, #32]
     e88:	add	x0, x4, #0x9
     e8c:	str	x0, [sp, #168]
     e90:	cbz	w1, f58 <grub_lvm_detect+0xd38>
     e94:	mov	w21, #0x0                   	// #0
     e98:	mov	w1, #0x22                  	// #34
     e9c:	bl	0 <grub_strchr>
     ea0:	str	x0, [sp, #168]
     ea4:	cbz	x0, f40 <grub_lvm_detect+0xd20>
     ea8:	add	x0, x0, #0x1
     eac:	mov	w1, #0x22                  	// #34
     eb0:	bl	0 <grub_strchr>
     eb4:	str	x0, [sp, #168]
     eb8:	cbz	x0, f40 <grub_lvm_detect+0xd20>
     ebc:	mov	w1, #0x22                  	// #34
     ec0:	add	x0, x0, #0x1
     ec4:	bl	0 <grub_strchr>
     ec8:	mov	x1, x0
     ecc:	cbz	x0, 1294 <grub_lvm_detect+0x1074>
     ed0:	add	x0, x0, #0x1
     ed4:	str	x0, [sp, #168]
     ed8:	mov	x3, x0
     edc:	ldrb	w1, [x1, #1]
     ee0:	cmp	w1, #0x22
     ee4:	b.eq	ef4 <grub_lvm_detect+0xcd4>  // b.none
     ee8:	ldrb	w1, [x3, #1]!
     eec:	cmp	w1, #0x22
     ef0:	b.ne	ee8 <grub_lvm_detect+0xcc8>  // b.any
     ef4:	sub	x2, x3, x0
     ef8:	str	x2, [sp, #120]
     efc:	add	x0, x2, #0x1
     f00:	str	x3, [sp, #152]
     f04:	bl	0 <grub_malloc>
     f08:	str	x0, [sp, #144]
     f0c:	cbz	x0, 858 <grub_lvm_detect+0x638>
     f10:	ldr	x2, [sp, #120]
     f14:	ldr	x1, [sp, #168]
     f18:	bl	0 <grub_memmove>
     f1c:	ldr	x2, [sp, #120]
     f20:	ubfiz	x1, x21, #5, #32
     f24:	ldp	x4, x3, [sp, #144]
     f28:	strb	wzr, [x4, x2]
     f2c:	ldr	x0, [x25, #40]
     f30:	add	x3, x3, #0x1
     f34:	str	x3, [sp, #168]
     f38:	add	x0, x0, x1
     f3c:	str	x4, [x0, #8]
     f40:	ldr	w1, [x25, #32]
     f44:	add	w21, w21, #0x1
     f48:	cmp	w1, w21
     f4c:	b.ls	f58 <grub_lvm_detect+0xd38>  // b.plast
     f50:	ldr	x0, [sp, #168]
     f54:	b	e98 <grub_lvm_detect+0xc78>
     f58:	ldr	w0, [x25, #16]
     f5c:	cmp	w0, #0x4
     f60:	b.eq	1218 <grub_lvm_detect+0xff8>  // b.none
     f64:	ldr	x0, [sp, #168]
     f68:	add	x25, x25, #0x38
     f6c:	ldr	w2, [sp, #128]
     f70:	ldr	w1, [x26, #28]
     f74:	add	w2, w2, #0x1
     f78:	str	w2, [sp, #128]
     f7c:	cmp	w1, w2
     f80:	b.hi	c44 <grub_lvm_detect+0xa24>  // b.pmore
     f84:	ldr	x0, [sp, #168]
     f88:	cbz	x0, 934 <grub_lvm_detect+0x714>
     f8c:	mov	w1, #0x7d                  	// #125
     f90:	bl	0 <grub_strchr>
     f94:	cbz	x0, 930 <grub_lvm_detect+0x710>
     f98:	add	x0, x0, #0x3
     f9c:	str	x0, [sp, #168]
     fa0:	ldr	w0, [sp, #116]
     fa4:	cbnz	w0, 1270 <grub_lvm_detect+0x1050>
     fa8:	ldr	x0, [x23, #40]
     fac:	stp	x23, x0, [x26, #72]
     fb0:	str	x26, [x23, #40]
     fb4:	ldr	x0, [sp, #168]
     fb8:	b	a04 <grub_lvm_detect+0x7e4>
     fbc:	cmp	w1, #0x36
     fc0:	b.ne	dd4 <grub_lvm_detect+0xbb4>  // b.any
     fc4:	mov	w1, #0x6                   	// #6
     fc8:	mov	w0, #0x5                   	// #5
     fcc:	stp	w1, w0, [x25, #16]
     fd0:	b	dd4 <grub_lvm_detect+0xbb4>
     fd4:	adrp	x1, 0 <grub_lvm_getvalue>
     fd8:	str	wzr, [x25, #16]
     fdc:	add	x0, sp, #0xa8
     fe0:	ldr	x1, [x1]
     fe4:	bl	0 <grub_lvm_getvalue>
     fe8:	mov	w2, w0
     fec:	ldr	x3, [sp, #168]
     ff0:	str	w0, [x25, #32]
     ff4:	cbz	x3, 860 <grub_lvm_detect+0x640>
     ff8:	cmp	w0, #0x1
     ffc:	b.eq	1018 <grub_lvm_detect+0xdf8>  // b.none
    1000:	adrp	x1, 0 <grub_lvm_getvalue>
    1004:	add	x0, sp, #0xa8
    1008:	ldr	x1, [x1]
    100c:	bl	0 <grub_lvm_getvalue>
    1010:	str	w0, [x25, #48]
    1014:	ldr	w2, [x25, #32]
    1018:	ubfiz	x0, x2, #5, #32
    101c:	bl	0 <grub_zalloc>
    1020:	ldr	x1, [sp, #168]
    1024:	str	x0, [x25, #40]
    1028:	mov	x21, x0
    102c:	ldrb	w0, [x1]
    1030:	cbz	w0, 854 <grub_lvm_detect+0x634>
    1034:	adrp	x7, 0 <grub_lvm_getvalue>
    1038:	b	1044 <grub_lvm_detect+0xe24>
    103c:	ldrb	w0, [x1]
    1040:	cbz	w0, 854 <grub_lvm_detect+0x634>
    1044:	cmp	w0, #0x73
    1048:	mov	x0, x1
    104c:	add	x1, x1, #0x1
    1050:	b.ne	103c <grub_lvm_detect+0xe1c>  // b.any
    1054:	mov	x2, #0x0                   	// #0
    1058:	mov	w3, #0x74                  	// #116
    105c:	b	1070 <grub_lvm_detect+0xe50>
    1060:	b.ne	103c <grub_lvm_detect+0xe1c>  // b.any
    1064:	ldr	x3, [x7]
    1068:	ldrb	w3, [x2, x3]
    106c:	cbz	w3, 1084 <grub_lvm_detect+0xe64>
    1070:	ldrb	w6, [x1, x2]
    1074:	add	x2, x2, #0x1
    1078:	cmp	w6, w3
    107c:	cbnz	w6, 1060 <grub_lvm_detect+0xe40>
    1080:	b	854 <grub_lvm_detect+0x634>
    1084:	ldr	w1, [x25, #32]
    1088:	add	x0, x0, #0xb
    108c:	str	x0, [sp, #168]
    1090:	cbz	w1, f68 <grub_lvm_detect+0xd48>
    1094:	str	wzr, [sp, #120]
    1098:	mov	w1, #0x22                  	// #34
    109c:	bl	0 <grub_strchr>
    10a0:	cbz	x0, 1204 <grub_lvm_detect+0xfe4>
    10a4:	add	x1, x0, #0x1
    10a8:	str	x1, [sp, #168]
    10ac:	mov	x3, x1
    10b0:	ldrb	w0, [x0, #1]
    10b4:	cmp	w0, #0x22
    10b8:	b.eq	10c8 <grub_lvm_detect+0xea8>  // b.none
    10bc:	ldrb	w0, [x3, #1]!
    10c0:	cmp	w0, #0x22
    10c4:	b.ne	10bc <grub_lvm_detect+0xe9c>  // b.any
    10c8:	sub	x2, x3, x1
    10cc:	stp	x2, x3, [sp, #144]
    10d0:	add	x0, x2, #0x1
    10d4:	bl	0 <grub_malloc>
    10d8:	str	x0, [x21, #8]
    10dc:	cbz	x0, 858 <grub_lvm_detect+0x638>
    10e0:	ldr	x2, [sp, #144]
    10e4:	ldr	x1, [sp, #168]
    10e8:	bl	0 <grub_memmove>
    10ec:	ldp	x2, x3, [sp, #144]
    10f0:	adrp	x1, 0 <grub_lvm_getvalue>
    10f4:	ldr	x6, [x21, #8]
    10f8:	add	x0, sp, #0xa8
    10fc:	ldr	x1, [x1]
    1100:	add	x3, x3, #0x1
    1104:	strb	wzr, [x6, x2]
    1108:	str	x3, [sp, #168]
    110c:	bl	0 <grub_lvm_getvalue>
    1110:	ldr	x2, [x23, #24]
    1114:	mov	x1, x21
    1118:	mul	x2, x2, x0
    111c:	ldr	x0, [sp, #168]
    1120:	str	x2, [x1], #32
    1124:	cmp	x0, #0x0
    1128:	csel	x21, x1, x21, ne  // ne = any
    112c:	ldr	w2, [sp, #120]
    1130:	ldr	w1, [x25, #32]
    1134:	add	w2, w2, #0x1
    1138:	str	w2, [sp, #120]
    113c:	cmp	w1, w2
    1140:	b.hi	1098 <grub_lvm_detect+0xe78>  // b.pmore
    1144:	b	f68 <grub_lvm_detect+0xd48>
    1148:	ldr	w1, [x25, #32]
    114c:	add	x0, x0, #0xb
    1150:	str	x0, [sp, #168]
    1154:	cbz	w1, 11e8 <grub_lvm_detect+0xfc8>
    1158:	mov	w21, #0x0                   	// #0
    115c:	mov	w1, #0x22                  	// #34
    1160:	bl	0 <grub_strchr>
    1164:	cbz	x0, 11fc <grub_lvm_detect+0xfdc>
    1168:	add	x1, x0, #0x1
    116c:	str	x1, [sp, #168]
    1170:	mov	x4, x1
    1174:	ldrb	w0, [x0, #1]
    1178:	cmp	w0, #0x22
    117c:	b.eq	118c <grub_lvm_detect+0xf6c>  // b.none
    1180:	ldrb	w0, [x4, #1]!
    1184:	cmp	w0, #0x22
    1188:	b.ne	1180 <grub_lvm_detect+0xf60>  // b.any
    118c:	sub	x2, x4, x1
    1190:	str	x2, [sp, #120]
    1194:	add	x0, x2, #0x1
    1198:	str	x4, [sp, #152]
    119c:	bl	0 <grub_malloc>
    11a0:	str	x0, [sp, #144]
    11a4:	cbz	x0, 858 <grub_lvm_detect+0x638>
    11a8:	ldr	x2, [sp, #120]
    11ac:	ldr	x1, [sp, #168]
    11b0:	bl	0 <grub_memmove>
    11b4:	ldr	x2, [sp, #120]
    11b8:	ldp	x3, x4, [sp, #144]
    11bc:	strb	wzr, [x3, x2]
    11c0:	ubfiz	x2, x21, #5, #32
    11c4:	ldr	x1, [x25, #40]
    11c8:	add	x0, x4, #0x1
    11cc:	str	x0, [sp, #168]
    11d0:	add	x1, x1, x2
    11d4:	str	x3, [x1, #8]
    11d8:	ldr	w1, [x25, #32]
    11dc:	add	w21, w21, #0x1
    11e0:	cmp	w1, w21
    11e4:	b.hi	115c <grub_lvm_detect+0xf3c>  // b.pmore
    11e8:	ldr	w1, [sp, #132]
    11ec:	cbz	w1, f68 <grub_lvm_detect+0xd48>
    11f0:	mov	w1, #0x1                   	// #1
    11f4:	str	w1, [x25, #32]
    11f8:	b	f68 <grub_lvm_detect+0xd48>
    11fc:	str	xzr, [sp, #168]
    1200:	b	11d8 <grub_lvm_detect+0xfb8>
    1204:	str	xzr, [sp, #168]
    1208:	b	112c <grub_lvm_detect+0xf0c>
    120c:	mov	w0, #0x1                   	// #1
    1210:	str	w0, [x25, #16]
    1214:	b	dd4 <grub_lvm_detect+0xbb4>
    1218:	ldr	x0, [x25, #40]
    121c:	sub	w2, w1, #0x1
    1220:	add	x1, x0, #0x20
    1224:	lsl	x2, x2, #5
    1228:	ldr	x21, [x0, #8]
    122c:	bl	0 <grub_memmove>
    1230:	ldr	w1, [x25, #32]
    1234:	ldr	x2, [x25, #40]
    1238:	sub	w1, w1, #0x1
    123c:	ldr	x0, [sp, #168]
    1240:	add	x1, x2, x1, lsl #5
    1244:	str	x21, [x1, #8]
    1248:	b	f68 <grub_lvm_detect+0xd48>
    124c:	mov	w1, #0x5                   	// #5
    1250:	mov	w0, #0x2                   	// #2
    1254:	stp	w1, w0, [x25, #16]
    1258:	b	dd4 <grub_lvm_detect+0xbb4>
    125c:	mov	w1, #0x7d                  	// #125
    1260:	bl	0 <grub_strchr>
    1264:	cbz	x0, 930 <grub_lvm_detect+0x710>
    1268:	add	x0, x0, #0x3
    126c:	str	x0, [sp, #168]
    1270:	ldr	x0, [x26, #16]
    1274:	bl	0 <grub_free>
    1278:	mov	x0, x26
    127c:	bl	0 <grub_free>
    1280:	ldr	x0, [sp, #168]
    1284:	b	a04 <grub_lvm_detect+0x7e4>
    1288:	mov	w0, #0x1                   	// #1
    128c:	str	w0, [sp, #116]
    1290:	b	f84 <grub_lvm_detect+0xd64>
    1294:	str	xzr, [sp, #168]
    1298:	b	f40 <grub_lvm_detect+0xd20>
    129c:	nop
	...

0000000000001390 <grub_mod_init>:
    1390:	adrp	x0, 0 <grub_lvm_getvalue>
    1394:	ldr	x1, [x0]
    1398:	ldr	x0, [x1]
    139c:	cbz	x0, 13ac <grub_mod_init+0x1c>
    13a0:	mov	x1, x0
    13a4:	ldr	x0, [x0]
    13a8:	cbnz	x0, 13a0 <grub_mod_init+0x10>
    13ac:	adrp	x0, 0 <grub_lvm_getvalue>
    13b0:	ldr	x0, [x0]
    13b4:	stp	xzr, x1, [x0]
    13b8:	str	x0, [x1]
    13bc:	ret
	...

00000000000013d0 <grub_mod_fini>:
    13d0:	adrp	x0, 0 <grub_lvm_getvalue>
    13d4:	ldr	x0, [x0]
    13d8:	b	0 <grub_list_remove>
    13dc:	nop
	...
