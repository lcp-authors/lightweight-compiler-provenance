
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-dissect_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401070 <_init>:
  401070:	stp	x29, x30, [sp, #-16]!
  401074:	mov	x29, sp
  401078:	bl	401318 <call_weak_fn>
  40107c:	ldp	x29, x30, [sp], #16
  401080:	ret

Disassembly of section .plt:

0000000000401088 <__libc_start_main@plt-0x20>:
  401088:	stp	x16, x30, [sp, #-16]!
  40108c:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  401090:	ldr	x17, [x16, #3816]
  401094:	add	x16, x16, #0xee8
  401098:	br	x17
  40109c:	nop
  4010a0:	nop
  4010a4:	nop

00000000004010a8 <__libc_start_main@plt>:
  4010a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010ac:	ldr	x17, [x16, #3824]
  4010b0:	add	x16, x16, #0xef0
  4010b4:	br	x17

00000000004010b8 <abort@plt>:
  4010b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010bc:	ldr	x17, [x16, #3832]
  4010c0:	add	x16, x16, #0xef8
  4010c4:	br	x17

00000000004010c8 <__gmon_start__@plt>:
  4010c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010cc:	ldr	x17, [x16, #3840]
  4010d0:	add	x16, x16, #0xf00
  4010d4:	br	x17

00000000004010d8 <free@plt>:
  4010d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010dc:	ldr	x17, [x16, #3848]
  4010e0:	add	x16, x16, #0xf08
  4010e4:	br	x17

00000000004010e8 <log_parse_environment_realm@plt>:
  4010e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010ec:	ldr	x17, [x16, #3856]
  4010f0:	add	x16, x16, #0xf10
  4010f4:	br	x17

00000000004010f8 <log_open@plt>:
  4010f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4010fc:	ldr	x17, [x16, #3864]
  401100:	add	x16, x16, #0xf18
  401104:	br	x17

0000000000401108 <getopt_long@plt>:
  401108:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40110c:	ldr	x17, [x16, #3872]
  401110:	add	x16, x16, #0xf20
  401114:	br	x17

0000000000401118 <strcmp@plt>:
  401118:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40111c:	ldr	x17, [x16, #3880]
  401120:	add	x16, x16, #0xf28
  401124:	br	x17

0000000000401128 <strlen@plt>:
  401128:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40112c:	ldr	x17, [x16, #3888]
  401130:	add	x16, x16, #0xf30
  401134:	br	x17

0000000000401138 <unhexmem_full@plt>:
  401138:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40113c:	ldr	x17, [x16, #3896]
  401140:	add	x16, x16, #0xf38
  401144:	br	x17

0000000000401148 <printf@plt>:
  401148:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40114c:	ldr	x17, [x16, #3904]
  401150:	add	x16, x16, #0xf40
  401154:	br	x17

0000000000401158 <version@plt>:
  401158:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40115c:	ldr	x17, [x16, #3912]
  401160:	add	x16, x16, #0xf48
  401164:	br	x17

0000000000401168 <log_get_max_level_realm@plt>:
  401168:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40116c:	ldr	x17, [x16, #3920]
  401170:	add	x16, x16, #0xf50
  401174:	br	x17

0000000000401178 <log_internal_realm@plt>:
  401178:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40117c:	ldr	x17, [x16, #3928]
  401180:	add	x16, x16, #0xf58
  401184:	br	x17

0000000000401188 <loop_device_make_by_path@plt>:
  401188:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40118c:	ldr	x17, [x16, #3936]
  401190:	add	x16, x16, #0xf60
  401194:	br	x17

0000000000401198 <root_hash_load@plt>:
  401198:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40119c:	ldr	x17, [x16, #3944]
  4011a0:	add	x16, x16, #0xf68
  4011a4:	br	x17

00000000004011a8 <dissect_image_and_warn@plt>:
  4011a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011ac:	ldr	x17, [x16, #3952]
  4011b0:	add	x16, x16, #0xf70
  4011b4:	br	x17

00000000004011b8 <dissected_image_decrypt_interactively@plt>:
  4011b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011bc:	ldr	x17, [x16, #3960]
  4011c0:	add	x16, x16, #0xf78
  4011c4:	br	x17

00000000004011c8 <dissected_image_mount@plt>:
  4011c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011cc:	ldr	x17, [x16, #3968]
  4011d0:	add	x16, x16, #0xf80
  4011d4:	br	x17

00000000004011d8 <decrypted_image_relinquish@plt>:
  4011d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011dc:	ldr	x17, [x16, #3976]
  4011e0:	add	x16, x16, #0xf88
  4011e4:	br	x17

00000000004011e8 <loop_device_relinquish@plt>:
  4011e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011ec:	ldr	x17, [x16, #3984]
  4011f0:	add	x16, x16, #0xf90
  4011f4:	br	x17

00000000004011f8 <putc@plt>:
  4011f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4011fc:	ldr	x17, [x16, #3992]
  401200:	add	x16, x16, #0xf98
  401204:	br	x17

0000000000401208 <partition_designator_to_string@plt>:
  401208:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40120c:	ldr	x17, [x16, #4000]
  401210:	add	x16, x16, #0xfa0
  401214:	br	x17

0000000000401218 <architecture_to_string@plt>:
  401218:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40121c:	ldr	x17, [x16, #4008]
  401220:	add	x16, x16, #0xfa8
  401224:	br	x17

0000000000401228 <dissected_image_acquire_metadata@plt>:
  401228:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40122c:	ldr	x17, [x16, #4016]
  401230:	add	x16, x16, #0xfb0
  401234:	br	x17

0000000000401238 <dissected_image_unref@plt>:
  401238:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40123c:	ldr	x17, [x16, #4024]
  401240:	add	x16, x16, #0xfb8
  401244:	br	x17

0000000000401248 <decrypted_image_unref@plt>:
  401248:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40124c:	ldr	x17, [x16, #4032]
  401250:	add	x16, x16, #0xfc0
  401254:	br	x17

0000000000401258 <loop_device_unref@plt>:
  401258:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40125c:	ldr	x17, [x16, #4040]
  401260:	add	x16, x16, #0xfc8
  401264:	br	x17

0000000000401268 <ask_password_agent_close@plt>:
  401268:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40126c:	ldr	x17, [x16, #4048]
  401270:	add	x16, x16, #0xfd0
  401274:	br	x17

0000000000401278 <polkit_agent_close@plt>:
  401278:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40127c:	ldr	x17, [x16, #4056]
  401280:	add	x16, x16, #0xfd8
  401284:	br	x17

0000000000401288 <pager_close@plt>:
  401288:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40128c:	ldr	x17, [x16, #4064]
  401290:	add	x16, x16, #0xfe0
  401294:	br	x17

0000000000401298 <mac_selinux_finish@plt>:
  401298:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  40129c:	ldr	x17, [x16, #4072]
  4012a0:	add	x16, x16, #0xfe8
  4012a4:	br	x17

00000000004012a8 <log_assert_failed_realm@plt>:
  4012a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4012ac:	ldr	x17, [x16, #4080]
  4012b0:	add	x16, x16, #0xff0
  4012b4:	br	x17

00000000004012b8 <log_assert_failed_unreachable_realm@plt>:
  4012b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca78>
  4012bc:	ldr	x17, [x16, #4088]
  4012c0:	add	x16, x16, #0xff8
  4012c4:	br	x17

Disassembly of section .text:

00000000004012c8 <_start>:
  4012c8:	mov	x29, #0x0                   	// #0
  4012cc:	mov	x30, #0x0                   	// #0
  4012d0:	mov	x5, x0
  4012d4:	ldr	x1, [sp]
  4012d8:	add	x2, sp, #0x8
  4012dc:	mov	x6, sp
  4012e0:	movz	x0, #0x0, lsl #48
  4012e4:	movk	x0, #0x0, lsl #32
  4012e8:	movk	x0, #0x40, lsl #16
  4012ec:	movk	x0, #0x13dc
  4012f0:	movz	x3, #0x0, lsl #48
  4012f4:	movk	x3, #0x0, lsl #32
  4012f8:	movk	x3, #0x40, lsl #16
  4012fc:	movk	x3, #0x1e10
  401300:	movz	x4, #0x0, lsl #48
  401304:	movk	x4, #0x0, lsl #32
  401308:	movk	x4, #0x40, lsl #16
  40130c:	movk	x4, #0x1e90
  401310:	bl	4010a8 <__libc_start_main@plt>
  401314:	bl	4010b8 <abort@plt>

0000000000401318 <call_weak_fn>:
  401318:	adrp	x0, 41f000 <__FRAME_END__+0x1ca78>
  40131c:	ldr	x0, [x0, #3776]
  401320:	cbz	x0, 401328 <call_weak_fn+0x10>
  401324:	b	4010c8 <__gmon_start__@plt>
  401328:	ret
  40132c:	udf	#0

0000000000401330 <deregister_tm_clones>:
  401330:	adrp	x0, 420000 <arg_flags>
  401334:	add	x0, x0, #0x0
  401338:	adrp	x1, 420000 <arg_flags>
  40133c:	add	x1, x1, #0x0
  401340:	cmp	x1, x0
  401344:	b.eq	40135c <deregister_tm_clones+0x2c>  // b.none
  401348:	adrp	x1, 401000 <_init-0x70>
  40134c:	ldr	x1, [x1, #3752]
  401350:	cbz	x1, 40135c <deregister_tm_clones+0x2c>
  401354:	mov	x16, x1
  401358:	br	x16
  40135c:	ret

0000000000401360 <register_tm_clones>:
  401360:	adrp	x0, 420000 <arg_flags>
  401364:	add	x0, x0, #0x0
  401368:	adrp	x1, 420000 <arg_flags>
  40136c:	add	x1, x1, #0x0
  401370:	sub	x1, x1, x0
  401374:	lsr	x2, x1, #63
  401378:	add	x1, x2, x1, asr #3
  40137c:	cmp	xzr, x1, asr #1
  401380:	asr	x1, x1, #1
  401384:	b.eq	40139c <register_tm_clones+0x3c>  // b.none
  401388:	adrp	x2, 401000 <_init-0x70>
  40138c:	ldr	x2, [x2, #3760]
  401390:	cbz	x2, 40139c <register_tm_clones+0x3c>
  401394:	mov	x16, x2
  401398:	br	x16
  40139c:	ret

00000000004013a0 <__do_global_dtors_aux>:
  4013a0:	stp	x29, x30, [sp, #-32]!
  4013a4:	mov	x29, sp
  4013a8:	str	x19, [sp, #16]
  4013ac:	adrp	x19, 420000 <arg_flags>
  4013b0:	ldrb	w0, [x19, #8]
  4013b4:	cbnz	w0, 4013c4 <__do_global_dtors_aux+0x24>
  4013b8:	bl	401330 <deregister_tm_clones>
  4013bc:	mov	w0, #0x1                   	// #1
  4013c0:	strb	w0, [x19, #8]
  4013c4:	ldr	x19, [sp, #16]
  4013c8:	ldp	x29, x30, [sp], #32
  4013cc:	ret

00000000004013d0 <frame_dummy>:
  4013d0:	b	401360 <register_tm_clones>

00000000004013d4 <__unique_prefix_static_destructor_wrapper0>:
  4013d4:	ldr	x0, [x0]
  4013d8:	b	4010d8 <free@plt>

00000000004013dc <main>:
  4013dc:	sub	sp, sp, #0xd0
  4013e0:	adrp	x8, 420000 <arg_flags>
  4013e4:	stp	x29, x30, [sp, #112]
  4013e8:	stp	x20, x19, [sp, #192]
  4013ec:	add	x29, sp, #0x70
  4013f0:	mov	w20, w0
  4013f4:	adrp	x9, 420000 <arg_flags>
  4013f8:	str	w0, [x8, #56]
  4013fc:	mov	w0, wzr
  401400:	stp	x28, x27, [sp, #128]
  401404:	stp	x26, x25, [sp, #144]
  401408:	stp	x24, x23, [sp, #160]
  40140c:	stp	x22, x21, [sp, #176]
  401410:	mov	x19, x1
  401414:	stp	xzr, xzr, [x29, #-32]
  401418:	str	x1, [x9, #64]
  40141c:	stur	xzr, [x29, #-40]
  401420:	bl	4010e8 <log_parse_environment_realm@plt>
  401424:	bl	4010f8 <log_open@plt>
  401428:	tbnz	w20, #31, 401da4 <main+0x9c8>
  40142c:	cbz	x19, 401dc8 <main+0x9ec>
  401430:	adrp	x2, 402000 <_fini+0x16c>
  401434:	adrp	x3, 402000 <_fini+0x16c>
  401438:	add	x2, x2, #0x11b
  40143c:	add	x3, x3, #0x3c0
  401440:	mov	w0, w20
  401444:	mov	x1, x19
  401448:	mov	x4, xzr
  40144c:	bl	401108 <getopt_long@plt>
  401450:	tbnz	w0, #31, 4015cc <main+0x1f0>
  401454:	adrp	x21, 402000 <_fini+0x16c>
  401458:	adrp	x22, 402000 <_fini+0x16c>
  40145c:	adrp	x27, 420000 <arg_flags>
  401460:	mov	w23, #0x1                   	// #1
  401464:	add	x21, x21, #0x11b
  401468:	add	x22, x22, #0x3c0
  40146c:	adrp	x24, 420000 <arg_flags>
  401470:	adrp	x28, 420000 <arg_flags>
  401474:	adrp	x26, 420000 <arg_flags>
  401478:	adrp	x25, 420000 <arg_flags>
  40147c:	cmp	w0, #0x71
  401480:	b.le	4014a4 <main+0xc8>
  401484:	cmp	w0, #0x100
  401488:	b.gt	4014c4 <main+0xe8>
  40148c:	cmp	w0, #0x72
  401490:	b.ne	401658 <main+0x27c>  // b.any
  401494:	ldr	w8, [x24]
  401498:	orr	w8, w8, #0x1
  40149c:	str	w8, [x24]
  4014a0:	b	4015b0 <main+0x1d4>
  4014a4:	cmp	w0, #0x3f
  4014a8:	b.eq	401d08 <main+0x92c>  // b.none
  4014ac:	cmp	w0, #0x68
  4014b0:	b.eq	401638 <main+0x25c>  // b.none
  4014b4:	cmp	w0, #0x6d
  4014b8:	b.ne	401dec <main+0xa10>  // b.any
  4014bc:	strb	w23, [x27, #40]
  4014c0:	b	4015b0 <main+0x1d4>
  4014c4:	cmp	w0, #0x101
  4014c8:	b.ne	40152c <main+0x150>  // b.any
  4014cc:	mov	x23, x27
  4014d0:	ldr	x27, [x28, #72]
  4014d4:	adrp	x1, 402000 <_fini+0x16c>
  4014d8:	add	x1, x1, #0x11f
  4014dc:	mov	x0, x27
  4014e0:	bl	401118 <strcmp@plt>
  4014e4:	cbz	w0, 401584 <main+0x1a8>
  4014e8:	adrp	x1, 402000 <_fini+0x16c>
  4014ec:	mov	x0, x27
  4014f0:	add	x1, x1, #0x128
  4014f4:	bl	401118 <strcmp@plt>
  4014f8:	cbz	w0, 40158c <main+0x1b0>
  4014fc:	adrp	x1, 402000 <_fini+0x16c>
  401500:	mov	x0, x27
  401504:	add	x1, x1, #0x12d
  401508:	bl	401118 <strcmp@plt>
  40150c:	cbz	w0, 401594 <main+0x1b8>
  401510:	adrp	x1, 402000 <_fini+0x16c>
  401514:	mov	x0, x27
  401518:	add	x1, x1, #0x131
  40151c:	bl	401118 <strcmp@plt>
  401520:	cbnz	w0, 401cc8 <main+0x8ec>
  401524:	mov	w8, #0xe                   	// #14
  401528:	b	401598 <main+0x1bc>
  40152c:	cmp	w0, #0x102
  401530:	b.ne	401dec <main+0xa10>  // b.any
  401534:	mov	x23, x27
  401538:	ldr	x27, [x28, #72]
  40153c:	mov	x0, x27
  401540:	bl	401128 <strlen@plt>
  401544:	mov	x1, x0
  401548:	sub	x3, x29, #0x8
  40154c:	sub	x4, x29, #0x10
  401550:	mov	x0, x27
  401554:	mov	w2, wzr
  401558:	bl	401138 <unhexmem_full@plt>
  40155c:	tbnz	w0, #31, 401be0 <main+0x804>
  401560:	ldur	x8, [x29, #-16]
  401564:	cmp	x8, #0xf
  401568:	b.ls	401c6c <main+0x890>  // b.plast
  40156c:	ldr	x0, [x26, #16]
  401570:	bl	4010d8 <free@plt>
  401574:	ldp	x9, x8, [x29, #-16]
  401578:	str	x8, [x26, #16]
  40157c:	str	x9, [x25, #32]
  401580:	b	4015a8 <main+0x1cc>
  401584:	mov	w8, wzr
  401588:	b	401598 <main+0x1bc>
  40158c:	mov	w8, #0x2                   	// #2
  401590:	b	401598 <main+0x1bc>
  401594:	mov	w8, #0x6                   	// #6
  401598:	ldr	w9, [x24]
  40159c:	and	w9, w9, #0xfffffff1
  4015a0:	orr	w8, w9, w8
  4015a4:	str	w8, [x24]
  4015a8:	mov	x27, x23
  4015ac:	mov	w23, #0x1                   	// #1
  4015b0:	mov	w0, w20
  4015b4:	mov	x1, x19
  4015b8:	mov	x2, x21
  4015bc:	mov	x3, x22
  4015c0:	mov	x4, xzr
  4015c4:	bl	401108 <getopt_long@plt>
  4015c8:	tbz	w0, #31, 40147c <main+0xa0>
  4015cc:	adrp	x8, 420000 <arg_flags>
  4015d0:	ldrb	w9, [x8, #40]
  4015d4:	adrp	x8, 420000 <arg_flags>
  4015d8:	ldrsw	x8, [x8, #80]
  4015dc:	tbz	w9, #0, 40160c <main+0x230>
  4015e0:	add	w9, w8, #0x2
  4015e4:	cmp	w9, w20
  4015e8:	b.ne	401668 <main+0x28c>  // b.any
  4015ec:	ldr	x0, [x19, x8, lsl #3]
  4015f0:	adrp	x9, 420000 <arg_flags>
  4015f4:	add	w8, w8, #0x1
  4015f8:	str	x0, [x9, #24]
  4015fc:	ldr	x8, [x19, w8, sxtw #3]
  401600:	adrp	x9, 420000 <arg_flags>
  401604:	str	x8, [x9, #48]
  401608:	b	4016f4 <main+0x318>
  40160c:	add	w9, w8, #0x1
  401610:	cmp	w9, w20
  401614:	b.ne	4016a4 <main+0x2c8>  // b.any
  401618:	ldr	x0, [x19, x8, lsl #3]
  40161c:	adrp	x8, 420000 <arg_flags>
  401620:	ldr	w9, [x8]
  401624:	adrp	x10, 420000 <arg_flags>
  401628:	str	x0, [x10, #24]
  40162c:	orr	w9, w9, #0x1
  401630:	str	w9, [x8]
  401634:	b	4016f4 <main+0x318>
  401638:	adrp	x8, 420000 <arg_flags>
  40163c:	ldr	x1, [x8, #88]
  401640:	adrp	x0, 402000 <_fini+0x16c>
  401644:	add	x0, x0, #0x226
  401648:	mov	x2, x1
  40164c:	bl	401148 <printf@plt>
  401650:	mov	w19, wzr
  401654:	b	401d0c <main+0x930>
  401658:	cmp	w0, #0x100
  40165c:	b.ne	401dec <main+0xa10>  // b.any
  401660:	bl	401158 <version@plt>
  401664:	b	4016e0 <main+0x304>
  401668:	mov	w0, wzr
  40166c:	bl	401168 <log_get_max_level_realm@plt>
  401670:	cmp	w0, #0x3
  401674:	b.lt	401d08 <main+0x92c>  // b.tstop
  401678:	adrp	x2, 401000 <_init-0x70>
  40167c:	adrp	x4, 402000 <_fini+0x16c>
  401680:	adrp	x5, 402000 <_fini+0x16c>
  401684:	mov	w1, #0x16                  	// #22
  401688:	add	x2, x2, #0xebb
  40168c:	add	x4, x4, #0x137
  401690:	add	x5, x5, #0x1e9
  401694:	mov	w0, #0x3                   	// #3
  401698:	movk	w1, #0x4000, lsl #16
  40169c:	mov	w3, #0x94                  	// #148
  4016a0:	b	4016dc <main+0x300>
  4016a4:	mov	w0, wzr
  4016a8:	bl	401168 <log_get_max_level_realm@plt>
  4016ac:	cmp	w0, #0x3
  4016b0:	b.lt	401d08 <main+0x92c>  // b.tstop
  4016b4:	adrp	x2, 401000 <_init-0x70>
  4016b8:	adrp	x4, 402000 <_fini+0x16c>
  4016bc:	adrp	x5, 402000 <_fini+0x16c>
  4016c0:	mov	w1, #0x16                  	// #22
  4016c4:	add	x2, x2, #0xebb
  4016c8:	add	x4, x4, #0x137
  4016cc:	add	x5, x5, #0x1c2
  4016d0:	mov	w0, #0x3                   	// #3
  4016d4:	movk	w1, #0x4000, lsl #16
  4016d8:	mov	w3, #0x8b                  	// #139
  4016dc:	bl	401178 <log_internal_realm@plt>
  4016e0:	mov	w19, w0
  4016e4:	cmp	w19, #0x1
  4016e8:	b.lt	401d0c <main+0x930>  // b.tstop
  4016ec:	adrp	x8, 420000 <arg_flags>
  4016f0:	ldr	x0, [x8, #24]
  4016f4:	adrp	x20, 420000 <arg_flags>
  4016f8:	ldr	w8, [x20]
  4016fc:	mov	w9, #0x2                   	// #2
  401700:	sub	x2, x29, #0x18
  401704:	bic	w1, w9, w8, lsl #1
  401708:	bl	401188 <loop_device_make_by_path@plt>
  40170c:	tbnz	w0, #31, 4017d4 <main+0x3f8>
  401710:	adrp	x21, 420000 <arg_flags>
  401714:	ldr	x2, [x21, #16]
  401718:	cbnz	x2, 401740 <main+0x364>
  40171c:	adrp	x22, 420000 <arg_flags>
  401720:	ldr	x0, [x22, #24]
  401724:	adrp	x1, 420000 <arg_flags>
  401728:	adrp	x2, 420000 <arg_flags>
  40172c:	add	x1, x1, #0x10
  401730:	add	x2, x2, #0x20
  401734:	bl	401198 <root_hash_load@plt>
  401738:	tbnz	w0, #31, 401b1c <main+0x740>
  40173c:	ldr	x2, [x21, #16]
  401740:	ldur	x8, [x29, #-24]
  401744:	adrp	x9, 420000 <arg_flags>
  401748:	adrp	x22, 420000 <arg_flags>
  40174c:	ldr	x1, [x9, #24]
  401750:	ldr	x3, [x22, #32]
  401754:	ldr	w0, [x8]
  401758:	ldr	w4, [x20]
  40175c:	sub	x5, x29, #0x28
  401760:	bl	4011a8 <dissect_image_and_warn@plt>
  401764:	tbnz	w0, #31, 401810 <main+0x434>
  401768:	adrp	x8, 420000 <arg_flags>
  40176c:	ldrb	w8, [x8, #40]
  401770:	ldur	x19, [x29, #-40]
  401774:	tbz	w8, #0, 401818 <main+0x43c>
  401778:	ldr	x2, [x21, #16]
  40177c:	ldr	x3, [x22, #32]
  401780:	ldr	w4, [x20]
  401784:	sub	x5, x29, #0x20
  401788:	mov	x0, x19
  40178c:	mov	x1, xzr
  401790:	bl	4011b8 <dissected_image_decrypt_interactively@plt>
  401794:	tbnz	w0, #31, 401810 <main+0x434>
  401798:	adrp	x8, 420000 <arg_flags>
  40179c:	ldur	x0, [x29, #-40]
  4017a0:	ldr	x1, [x8, #48]
  4017a4:	ldr	w3, [x20]
  4017a8:	mov	w2, #0xffffffff            	// #-1
  4017ac:	bl	4011c8 <dissected_image_mount@plt>
  4017b0:	tbnz	w0, #31, 401ba0 <main+0x7c4>
  4017b4:	ldur	x0, [x29, #-32]
  4017b8:	cbz	x0, 4017c4 <main+0x3e8>
  4017bc:	bl	4011d8 <decrypted_image_relinquish@plt>
  4017c0:	tbnz	w0, #31, 401c24 <main+0x848>
  4017c4:	ldur	x0, [x29, #-24]
  4017c8:	bl	4011e8 <loop_device_relinquish@plt>
  4017cc:	mov	w19, wzr
  4017d0:	b	401d0c <main+0x930>
  4017d4:	mov	w19, w0
  4017d8:	mov	w0, wzr
  4017dc:	bl	401168 <log_get_max_level_realm@plt>
  4017e0:	cmp	w0, #0x3
  4017e4:	b.lt	401c5c <main+0x880>  // b.tstop
  4017e8:	adrp	x2, 401000 <_init-0x70>
  4017ec:	adrp	x4, 401000 <_init-0x70>
  4017f0:	adrp	x5, 401000 <_init-0x70>
  4017f4:	add	x2, x2, #0xebb
  4017f8:	add	x4, x4, #0xed1
  4017fc:	add	x5, x5, #0xed5
  401800:	mov	w0, #0x3                   	// #3
  401804:	mov	w3, #0xb0                  	// #176
  401808:	mov	w1, w19
  40180c:	bl	401178 <log_internal_realm@plt>
  401810:	mov	w19, w0
  401814:	b	401d0c <main+0x930>
  401818:	adrp	x24, 401000 <_init-0x70>
  40181c:	adrp	x21, 401000 <_init-0x70>
  401820:	mov	w20, wzr
  401824:	mov	w22, #0x30                  	// #48
  401828:	add	x24, x24, #0xf44
  40182c:	add	x21, x21, #0xf23
  401830:	mov	w25, #0x8                   	// #8
  401834:	mov	w26, #0x7                   	// #7
  401838:	adrp	x27, 420000 <arg_flags>
  40183c:	b	401860 <main+0x484>
  401840:	ldr	x1, [x27, #96]
  401844:	mov	w0, #0xa                   	// #10
  401848:	bl	4011f8 <putc@plt>
  40184c:	ldur	x19, [x29, #-40]
  401850:	add	x22, x22, #0x40
  401854:	cmp	x22, #0x270
  401858:	add	w20, w20, #0x1
  40185c:	b.eq	4019c4 <main+0x5e8>  // b.none
  401860:	add	x23, x19, x22
  401864:	ldurb	w8, [x23, #-40]
  401868:	tbz	w8, #0, 401850 <main+0x474>
  40186c:	tst	w8, #0x2
  401870:	adrp	x8, 401000 <_init-0x70>
  401874:	add	x8, x8, #0xf3b
  401878:	mov	w0, w20
  40187c:	csel	x28, x24, x8, eq  // eq = none
  401880:	bl	401208 <partition_designator_to_string@plt>
  401884:	mov	x2, x0
  401888:	mov	x0, x21
  40188c:	mov	x1, x28
  401890:	bl	401148 <printf@plt>
  401894:	ldp	x8, x9, [x23, #-24]
  401898:	orr	x10, x9, x8
  40189c:	cbz	x10, 401914 <main+0x538>
  4018a0:	add	x10, x19, x22
  4018a4:	ldurb	w2, [x10, #-23]
  4018a8:	ldurb	w3, [x10, #-22]
  4018ac:	ldurb	w4, [x10, #-21]
  4018b0:	ldurb	w5, [x10, #-20]
  4018b4:	ldurb	w6, [x10, #-19]
  4018b8:	ldurb	w7, [x10, #-18]
  4018bc:	ldurb	w11, [x10, #-17]
  4018c0:	ldurb	w12, [x10, #-15]
  4018c4:	ldurb	w13, [x10, #-14]
  4018c8:	ldurb	w14, [x10, #-13]
  4018cc:	ldurb	w15, [x10, #-12]
  4018d0:	ldurb	w16, [x10, #-11]
  4018d4:	ldurb	w17, [x10, #-10]
  4018d8:	ldurb	w10, [x10, #-9]
  4018dc:	adrp	x0, 401000 <_init-0x70>
  4018e0:	and	w1, w8, #0xff
  4018e4:	and	w8, w9, #0xff
  4018e8:	add	x0, x0, #0xf4e
  4018ec:	str	w10, [sp, #64]
  4018f0:	str	w17, [sp, #56]
  4018f4:	str	w16, [sp, #48]
  4018f8:	str	w15, [sp, #40]
  4018fc:	str	w14, [sp, #32]
  401900:	str	w13, [sp, #24]
  401904:	str	w12, [sp, #16]
  401908:	str	w8, [sp, #8]
  40190c:	str	w11, [sp]
  401910:	bl	401148 <printf@plt>
  401914:	add	x23, x19, x22
  401918:	ldur	x1, [x23, #-8]
  40191c:	cbz	x1, 40192c <main+0x550>
  401920:	adrp	x0, 401000 <_init-0x70>
  401924:	add	x0, x0, #0xf97
  401928:	bl	401148 <printf@plt>
  40192c:	ldur	w0, [x23, #-32]
  401930:	cmn	w0, #0x1
  401934:	b.eq	40194c <main+0x570>  // b.none
  401938:	bl	401218 <architecture_to_string@plt>
  40193c:	mov	x1, x0
  401940:	adrp	x0, 401000 <_init-0x70>
  401944:	add	x0, x0, #0xfa3
  401948:	bl	401148 <printf@plt>
  40194c:	cmp	x22, #0x70
  401950:	csinv	w8, w25, wzr, eq  // eq = none
  401954:	cmp	x22, #0x30
  401958:	csel	w8, w26, w8, eq  // eq = none
  40195c:	tbnz	w8, #31, 401994 <main+0x5b8>
  401960:	ldur	x9, [x29, #-40]
  401964:	mov	w8, w8
  401968:	adrp	x0, 401000 <_init-0x70>
  40196c:	add	x0, x0, #0xfab
  401970:	add	x8, x9, x8, lsl #6
  401974:	ldrb	w8, [x8, #8]
  401978:	adrp	x9, 401000 <_init-0x70>
  40197c:	add	x9, x9, #0xfbb
  401980:	tst	w8, #0x1
  401984:	adrp	x8, 401000 <_init-0x70>
  401988:	add	x8, x8, #0xfb6
  40198c:	csel	x1, x9, x8, eq  // eq = none
  401990:	bl	401148 <printf@plt>
  401994:	add	x8, x19, x22
  401998:	ldur	w1, [x8, #-36]
  40199c:	tbnz	w1, #31, 4019ac <main+0x5d0>
  4019a0:	adrp	x0, 401000 <_init-0x70>
  4019a4:	add	x0, x0, #0xfc3
  4019a8:	bl	401148 <printf@plt>
  4019ac:	ldr	x1, [x19, x22]
  4019b0:	cbz	x1, 401840 <main+0x464>
  4019b4:	adrp	x0, 401000 <_init-0x70>
  4019b8:	add	x0, x0, #0xfd5
  4019bc:	bl	401148 <printf@plt>
  4019c0:	b	401840 <main+0x464>
  4019c4:	mov	x0, x19
  4019c8:	bl	401228 <dissected_image_acquire_metadata@plt>
  4019cc:	tbnz	w0, #31, 401b60 <main+0x784>
  4019d0:	ldur	x0, [x29, #-40]
  4019d4:	ldr	x1, [x0, #584]
  4019d8:	cbz	x1, 4019ec <main+0x610>
  4019dc:	adrp	x0, 402000 <_fini+0x16c>
  4019e0:	add	x0, x0, #0x0
  4019e4:	bl	401148 <printf@plt>
  4019e8:	ldur	x0, [x29, #-40]
  4019ec:	ldr	x8, [x0, #592]
  4019f0:	ldr	x9, [x0, #600]
  4019f4:	orr	x10, x9, x8
  4019f8:	cbz	x10, 401a70 <main+0x694>
  4019fc:	ldrb	w2, [x0, #593]
  401a00:	ldrb	w3, [x0, #594]
  401a04:	ldrb	w4, [x0, #595]
  401a08:	ldrb	w5, [x0, #596]
  401a0c:	ldrb	w6, [x0, #597]
  401a10:	ldrb	w7, [x0, #598]
  401a14:	ldrb	w10, [x0, #599]
  401a18:	ldrb	w11, [x0, #601]
  401a1c:	ldrb	w12, [x0, #602]
  401a20:	ldrb	w13, [x0, #603]
  401a24:	ldrb	w14, [x0, #604]
  401a28:	ldrb	w15, [x0, #605]
  401a2c:	ldrb	w16, [x0, #606]
  401a30:	ldrb	w17, [x0, #607]
  401a34:	adrp	x0, 402000 <_fini+0x16c>
  401a38:	and	w1, w8, #0xff
  401a3c:	and	w8, w9, #0xff
  401a40:	add	x0, x0, #0x10
  401a44:	str	w17, [sp, #64]
  401a48:	str	w16, [sp, #56]
  401a4c:	str	w15, [sp, #48]
  401a50:	str	w14, [sp, #40]
  401a54:	str	w13, [sp, #32]
  401a58:	str	w12, [sp, #24]
  401a5c:	str	w11, [sp, #16]
  401a60:	str	w8, [sp, #8]
  401a64:	str	w10, [sp]
  401a68:	bl	401148 <printf@plt>
  401a6c:	ldur	x0, [x29, #-40]
  401a70:	ldr	x20, [x0, #608]
  401a74:	cbz	x20, 401ac4 <main+0x6e8>
  401a78:	ldr	x2, [x20]
  401a7c:	cbz	x2, 401ac4 <main+0x6e8>
  401a80:	adrp	x21, 402000 <_fini+0x16c>
  401a84:	adrp	x22, 402000 <_fini+0x16c>
  401a88:	adrp	x19, 402000 <_fini+0x16c>
  401a8c:	add	x21, x21, #0x74
  401a90:	add	x22, x22, #0x68
  401a94:	add	x19, x19, #0x5e
  401a98:	ldr	x3, [x20, #8]
  401a9c:	cbz	x3, 401ac0 <main+0x6e4>
  401aa0:	ldur	x8, [x29, #-40]
  401aa4:	mov	x0, x19
  401aa8:	ldr	x8, [x8, #608]
  401aac:	cmp	x20, x8
  401ab0:	csel	x1, x22, x21, eq  // eq = none
  401ab4:	bl	401148 <printf@plt>
  401ab8:	ldr	x2, [x20, #16]!
  401abc:	cbnz	x2, 401a98 <main+0x6bc>
  401ac0:	ldur	x0, [x29, #-40]
  401ac4:	ldr	x21, [x0, #616]
  401ac8:	cbz	x21, 401bd8 <main+0x7fc>
  401acc:	ldr	x2, [x21]
  401ad0:	cbz	x2, 401b98 <main+0x7bc>
  401ad4:	adrp	x22, 402000 <_fini+0x16c>
  401ad8:	adrp	x23, 402000 <_fini+0x16c>
  401adc:	adrp	x20, 402000 <_fini+0x16c>
  401ae0:	add	x22, x22, #0x74
  401ae4:	add	x23, x23, #0x80
  401ae8:	add	x20, x20, #0x5e
  401aec:	ldr	x3, [x21, #8]
  401af0:	cbz	x3, 401b98 <main+0x7bc>
  401af4:	ldur	x8, [x29, #-40]
  401af8:	mov	x0, x20
  401afc:	ldr	x8, [x8, #616]
  401b00:	cmp	x21, x8
  401b04:	csel	x1, x23, x22, eq  // eq = none
  401b08:	bl	401148 <printf@plt>
  401b0c:	ldr	x2, [x21, #16]!
  401b10:	mov	w19, wzr
  401b14:	cbnz	x2, 401aec <main+0x710>
  401b18:	b	401d0c <main+0x930>
  401b1c:	mov	w19, w0
  401b20:	mov	w0, wzr
  401b24:	bl	401168 <log_get_max_level_realm@plt>
  401b28:	cmp	w0, #0x3
  401b2c:	b.lt	401c5c <main+0x880>  // b.tstop
  401b30:	ldr	x6, [x22, #24]
  401b34:	adrp	x2, 401000 <_init-0x70>
  401b38:	adrp	x4, 401000 <_init-0x70>
  401b3c:	adrp	x5, 401000 <_init-0x70>
  401b40:	add	x2, x2, #0xebb
  401b44:	add	x4, x4, #0xed1
  401b48:	add	x5, x5, #0xefa
  401b4c:	mov	w0, #0x3                   	// #3
  401b50:	mov	w3, #0xb5                  	// #181
  401b54:	mov	w1, w19
  401b58:	bl	401178 <log_internal_realm@plt>
  401b5c:	b	401810 <main+0x434>
  401b60:	mov	w19, w0
  401b64:	mov	w0, wzr
  401b68:	bl	401168 <log_get_max_level_realm@plt>
  401b6c:	cmp	w0, #0x3
  401b70:	b.lt	401c5c <main+0x880>  // b.tstop
  401b74:	adrp	x2, 401000 <_init-0x70>
  401b78:	adrp	x4, 401000 <_init-0x70>
  401b7c:	adrp	x5, 401000 <_init-0x70>
  401b80:	add	x2, x2, #0xebb
  401b84:	add	x4, x4, #0xed1
  401b88:	add	x5, x5, #0xfdb
  401b8c:	mov	w0, #0x3                   	// #3
  401b90:	mov	w3, #0xe4                  	// #228
  401b94:	b	401808 <main+0x42c>
  401b98:	mov	w19, wzr
  401b9c:	b	401d0c <main+0x930>
  401ba0:	mov	w19, w0
  401ba4:	mov	w0, wzr
  401ba8:	bl	401168 <log_get_max_level_realm@plt>
  401bac:	cmp	w0, #0x3
  401bb0:	b.lt	401c5c <main+0x880>  // b.tstop
  401bb4:	adrp	x2, 401000 <_init-0x70>
  401bb8:	adrp	x4, 401000 <_init-0x70>
  401bbc:	adrp	x5, 402000 <_fini+0x16c>
  401bc0:	add	x2, x2, #0xebb
  401bc4:	add	x4, x4, #0xed1
  401bc8:	add	x5, x5, #0x8c
  401bcc:	mov	w0, #0x3                   	// #3
  401bd0:	mov	w3, #0x108                 	// #264
  401bd4:	b	401808 <main+0x42c>
  401bd8:	mov	w19, wzr
  401bdc:	b	401d10 <main+0x934>
  401be0:	mov	w27, w0
  401be4:	mov	w0, wzr
  401be8:	bl	401168 <log_get_max_level_realm@plt>
  401bec:	cmp	w0, #0x3
  401bf0:	b.lt	401cb8 <main+0x8dc>  // b.tstop
  401bf4:	ldr	x6, [x28, #72]
  401bf8:	adrp	x2, 401000 <_init-0x70>
  401bfc:	adrp	x4, 402000 <_fini+0x16c>
  401c00:	adrp	x5, 402000 <_fini+0x16c>
  401c04:	add	x2, x2, #0xebb
  401c08:	add	x4, x4, #0x137
  401c0c:	add	x5, x5, #0x163
  401c10:	mov	w0, #0x3                   	// #3
  401c14:	mov	w3, #0x70                  	// #112
  401c18:	mov	w1, w27
  401c1c:	bl	401178 <log_internal_realm@plt>
  401c20:	b	4016e0 <main+0x304>
  401c24:	mov	w19, w0
  401c28:	mov	w0, wzr
  401c2c:	bl	401168 <log_get_max_level_realm@plt>
  401c30:	cmp	w0, #0x3
  401c34:	b.lt	401c5c <main+0x880>  // b.tstop
  401c38:	adrp	x2, 401000 <_init-0x70>
  401c3c:	adrp	x4, 401000 <_init-0x70>
  401c40:	adrp	x5, 402000 <_fini+0x16c>
  401c44:	add	x2, x2, #0xebb
  401c48:	add	x4, x4, #0xed1
  401c4c:	add	x5, x5, #0xa6
  401c50:	mov	w0, #0x3                   	// #3
  401c54:	mov	w3, #0x10d                 	// #269
  401c58:	b	401808 <main+0x42c>
  401c5c:	mov	w8, wzr
  401c60:	neg	w9, w19
  401c64:	sub	w19, w8, w9, uxtb
  401c68:	b	401d0c <main+0x930>
  401c6c:	mov	w0, wzr
  401c70:	bl	401168 <log_get_max_level_realm@plt>
  401c74:	cmp	w0, #0x3
  401c78:	b.lt	401ca8 <main+0x8cc>  // b.tstop
  401c7c:	ldr	x6, [x28, #72]
  401c80:	adrp	x2, 401000 <_init-0x70>
  401c84:	adrp	x4, 402000 <_fini+0x16c>
  401c88:	adrp	x5, 402000 <_fini+0x16c>
  401c8c:	add	x2, x2, #0xebb
  401c90:	add	x4, x4, #0x137
  401c94:	add	x5, x5, #0x186
  401c98:	mov	w0, #0x3                   	// #3
  401c9c:	mov	w3, #0x72                  	// #114
  401ca0:	mov	w1, wzr
  401ca4:	bl	401178 <log_internal_realm@plt>
  401ca8:	ldur	x0, [x29, #-8]
  401cac:	bl	4010d8 <free@plt>
  401cb0:	mov	w19, #0xffffffea            	// #-22
  401cb4:	b	4016e4 <main+0x308>
  401cb8:	mov	w8, wzr
  401cbc:	neg	w9, w27
  401cc0:	sub	w19, w8, w9, uxtb
  401cc4:	b	4016e4 <main+0x308>
  401cc8:	mov	w0, wzr
  401ccc:	bl	401168 <log_get_max_level_realm@plt>
  401cd0:	cmp	w0, #0x3
  401cd4:	b.lt	401d08 <main+0x92c>  // b.tstop
  401cd8:	adrp	x2, 401000 <_init-0x70>
  401cdc:	adrp	x4, 402000 <_fini+0x16c>
  401ce0:	adrp	x5, 402000 <_fini+0x16c>
  401ce4:	mov	w1, #0x16                  	// #22
  401ce8:	add	x2, x2, #0xebb
  401cec:	add	x4, x4, #0x137
  401cf0:	add	x5, x5, #0x142
  401cf4:	mov	w0, #0x3                   	// #3
  401cf8:	movk	w1, #0x4000, lsl #16
  401cfc:	mov	w3, #0x64                  	// #100
  401d00:	mov	x6, x27
  401d04:	b	401c1c <main+0x840>
  401d08:	mov	w19, #0xffffffea            	// #-22
  401d0c:	ldur	x0, [x29, #-40]
  401d10:	cbz	x0, 401d18 <main+0x93c>
  401d14:	bl	401238 <dissected_image_unref@plt>
  401d18:	ldur	x0, [x29, #-32]
  401d1c:	cbz	x0, 401d24 <main+0x948>
  401d20:	bl	401248 <decrypted_image_unref@plt>
  401d24:	ldur	x0, [x29, #-24]
  401d28:	cbz	x0, 401d30 <main+0x954>
  401d2c:	bl	401258 <loop_device_unref@plt>
  401d30:	bl	401268 <ask_password_agent_close@plt>
  401d34:	bl	401278 <polkit_agent_close@plt>
  401d38:	bl	401288 <pager_close@plt>
  401d3c:	bl	401298 <mac_selinux_finish@plt>
  401d40:	adrp	x8, 41f000 <__FRAME_END__+0x1ca78>
  401d44:	ldr	x8, [x8, #3784]
  401d48:	adrp	x20, 41f000 <__FRAME_END__+0x1ca78>
  401d4c:	ldr	x20, [x20, #3792]
  401d50:	add	x9, x8, #0x7
  401d54:	and	x21, x9, #0xfffffffffffffff8
  401d58:	cmp	x21, x20
  401d5c:	cset	w9, cs  // cs = hs, nlast
  401d60:	cmp	x8, #0x0
  401d64:	cset	w8, eq  // eq = none
  401d68:	orr	w8, w8, w9
  401d6c:	tbnz	w8, #0, 401d80 <main+0x9a4>
  401d70:	ldp	x0, x8, [x21], #16
  401d74:	blr	x8
  401d78:	cmp	x21, x20
  401d7c:	b.cc	401d70 <main+0x994>  // b.lo, b.ul, b.last
  401d80:	lsr	w0, w19, #31
  401d84:	ldp	x20, x19, [sp, #192]
  401d88:	ldp	x22, x21, [sp, #176]
  401d8c:	ldp	x24, x23, [sp, #160]
  401d90:	ldp	x26, x25, [sp, #144]
  401d94:	ldp	x28, x27, [sp, #128]
  401d98:	ldp	x29, x30, [sp, #112]
  401d9c:	add	sp, sp, #0xd0
  401da0:	ret
  401da4:	adrp	x1, 402000 <_fini+0x16c>
  401da8:	adrp	x2, 401000 <_init-0x70>
  401dac:	adrp	x4, 402000 <_fini+0x16c>
  401db0:	add	x1, x1, #0xef
  401db4:	add	x2, x2, #0xebb
  401db8:	add	x4, x4, #0xf9
  401dbc:	mov	w3, #0x40                  	// #64
  401dc0:	mov	w0, wzr
  401dc4:	bl	4012a8 <log_assert_failed_realm@plt>
  401dc8:	adrp	x1, 402000 <_fini+0x16c>
  401dcc:	adrp	x2, 401000 <_init-0x70>
  401dd0:	adrp	x4, 402000 <_fini+0x16c>
  401dd4:	add	x1, x1, #0x116
  401dd8:	add	x2, x2, #0xebb
  401ddc:	add	x4, x4, #0xf9
  401de0:	mov	w3, #0x41                  	// #65
  401de4:	mov	w0, wzr
  401de8:	bl	4012a8 <log_assert_failed_realm@plt>
  401dec:	adrp	x1, 402000 <_fini+0x16c>
  401df0:	adrp	x2, 401000 <_init-0x70>
  401df4:	adrp	x4, 402000 <_fini+0x16c>
  401df8:	add	x1, x1, #0x1b1
  401dfc:	add	x2, x2, #0xebb
  401e00:	add	x4, x4, #0xf9
  401e04:	mov	w3, #0x81                  	// #129
  401e08:	mov	w0, wzr
  401e0c:	bl	4012b8 <log_assert_failed_unreachable_realm@plt>

0000000000401e10 <__libc_csu_init>:
  401e10:	stp	x29, x30, [sp, #-64]!
  401e14:	mov	x29, sp
  401e18:	stp	x19, x20, [sp, #16]
  401e1c:	adrp	x20, 41f000 <__FRAME_END__+0x1ca78>
  401e20:	add	x20, x20, #0xc98
  401e24:	stp	x21, x22, [sp, #32]
  401e28:	adrp	x21, 41f000 <__FRAME_END__+0x1ca78>
  401e2c:	add	x21, x21, #0xc90
  401e30:	sub	x20, x20, x21
  401e34:	mov	w22, w0
  401e38:	stp	x23, x24, [sp, #48]
  401e3c:	mov	x23, x1
  401e40:	mov	x24, x2
  401e44:	bl	401070 <_init>
  401e48:	cmp	xzr, x20, asr #3
  401e4c:	b.eq	401e78 <__libc_csu_init+0x68>  // b.none
  401e50:	asr	x20, x20, #3
  401e54:	mov	x19, #0x0                   	// #0
  401e58:	ldr	x3, [x21, x19, lsl #3]
  401e5c:	mov	x2, x24
  401e60:	add	x19, x19, #0x1
  401e64:	mov	x1, x23
  401e68:	mov	w0, w22
  401e6c:	blr	x3
  401e70:	cmp	x20, x19
  401e74:	b.ne	401e58 <__libc_csu_init+0x48>  // b.any
  401e78:	ldp	x19, x20, [sp, #16]
  401e7c:	ldp	x21, x22, [sp, #32]
  401e80:	ldp	x23, x24, [sp, #48]
  401e84:	ldp	x29, x30, [sp], #64
  401e88:	ret
  401e8c:	nop

0000000000401e90 <__libc_csu_fini>:
  401e90:	ret

Disassembly of section .fini:

0000000000401e94 <_fini>:
  401e94:	stp	x29, x30, [sp, #-16]!
  401e98:	mov	x29, sp
  401e9c:	ldp	x29, x30, [sp], #16
  401ea0:	ret
