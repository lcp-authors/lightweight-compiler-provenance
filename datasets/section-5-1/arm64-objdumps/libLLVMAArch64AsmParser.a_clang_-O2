In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAArch64AsmParser.a_clang_-O2:

AArch64AsmParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMInitializeAArch64AsmParser>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
      10:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
      14:	add	x19, x19, #0x0
      18:	str	x19, [x0, #104]
      1c:	bl	0 <_ZN4llvm21getTheAArch64beTargetEv>
      20:	str	x19, [x0, #104]
      24:	bl	0 <_ZN4llvm17getTheARM64TargetEv>
      28:	str	x19, [x0, #104]
      2c:	bl	0 <_ZN4llvm20getTheARM64_32TargetEv>
      30:	str	x19, [x0, #104]
      34:	bl	0 <_ZN4llvm22getTheAArch64_32TargetEv>
      38:	str	x19, [x0, #104]
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret

0000000000000048 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE>:
      48:	sub	sp, sp, #0x60
      4c:	stp	x29, x30, [sp, #32]
      50:	str	x23, [sp, #48]
      54:	stp	x22, x21, [sp, #64]
      58:	stp	x20, x19, [sp, #80]
      5c:	add	x29, sp, #0x20
      60:	mov	x23, x0
      64:	mov	w0, #0xf8                  	// #248
      68:	mov	x21, x3
      6c:	mov	x22, x2
      70:	mov	x20, x1
      74:	bl	0 <_Znwm>
      78:	mov	x1, x21
      7c:	mov	x2, x23
      80:	mov	x3, x22
      84:	mov	x19, x0
      88:	bl	0 <_ZN4llvm17MCTargetAsmParserC2ERKNS_15MCTargetOptionsERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoE>
      8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
      90:	add	x8, x8, #0x0
      94:	movi	v0.2d, #0x0
      98:	mov	x9, #0x1000000000          	// #68719476736
      9c:	mov	x0, x21
      a0:	str	x8, [x19]
      a4:	stp	q0, q0, [x19, #176]
      a8:	str	x9, [x19, #208]
      ac:	strh	wzr, [x19, #224]
      b0:	bl	0 <_ZNK4llvm15MCTargetOptions10getABINameEv>
      b4:	cmp	x1, #0x5
      b8:	mov	w8, wzr
      bc:	b.ne	e8 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xa0>  // b.any
      c0:	ldr	w8, [x0]
      c4:	ldrb	w9, [x0, #4]
      c8:	mov	w10, #0x6c69                	// #27753
      cc:	movk	w10, #0x3370, lsl #16
      d0:	mov	w11, #0x32                  	// #50
      d4:	eor	w8, w8, w10
      d8:	eor	w9, w9, w11
      dc:	orr	w8, w8, w9
      e0:	cmp	w8, #0x0
      e4:	cset	w8, eq  // eq = none
      e8:	mov	x0, x19
      ec:	mov	x1, x20
      f0:	strb	w8, [x19, #240]
      f4:	bl	0 <_ZN4llvm20MCAsmParserExtension10InitializeERNS_11MCAsmParserE>
      f8:	ldr	x0, [x19, #8]
      fc:	ldr	x8, [x0]
     100:	ldr	x8, [x8, #56]
     104:	blr	x8
     108:	ldr	x8, [x0, #16]
     10c:	cbnz	x8, 124 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xdc>
     110:	mov	x21, x0
     114:	mov	w0, #0x18                  	// #24
     118:	bl	0 <_Znwm>
     11c:	mov	x1, x21
     120:	bl	0 <_ZN4llvm21AArch64TargetStreamerC1ERNS_10MCStreamerE>
     124:	ldr	x8, [x20]
     128:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     12c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     130:	add	x1, x1, #0x0
     134:	ldr	x8, [x8, #24]
     138:	add	x3, x3, #0x0
     13c:	mov	w2, #0x6                   	// #6
     140:	mov	w4, #0x6                   	// #6
     144:	mov	x0, x20
     148:	blr	x8
     14c:	ldr	x8, [x20]
     150:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     154:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     158:	add	x1, x1, #0x0
     15c:	ldr	x8, [x8, #24]
     160:	add	x3, x3, #0x0
     164:	mov	w2, #0x5                   	// #5
     168:	mov	w4, #0x6                   	// #6
     16c:	mov	x0, x20
     170:	blr	x8
     174:	ldr	x8, [x20]
     178:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
     17c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     180:	add	x21, x21, #0x0
     184:	ldr	x8, [x8, #24]
     188:	add	x1, x1, #0x0
     18c:	mov	w2, #0x6                   	// #6
     190:	mov	w4, #0x6                   	// #6
     194:	mov	x0, x20
     198:	mov	x3, x21
     19c:	blr	x8
     1a0:	ldr	x8, [x20]
     1a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     1a8:	add	x1, x1, #0x0
     1ac:	mov	w2, #0x6                   	// #6
     1b0:	ldr	x8, [x8, #24]
     1b4:	mov	w4, #0x6                   	// #6
     1b8:	mov	x0, x20
     1bc:	mov	x3, x21
     1c0:	blr	x8
     1c4:	mov	x0, x19
     1c8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     1cc:	add	x0, x0, #0xb8
     1d0:	add	x8, sp, #0x8
     1d4:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
     1d8:	ldr	x8, [sp, #24]
     1dc:	ldur	q0, [sp, #8]
     1e0:	mov	x0, x19
     1e4:	ldp	x22, x21, [sp, #64]
     1e8:	str	x8, [x19, #40]
     1ec:	stur	q0, [x19, #24]
     1f0:	ldp	x20, x19, [sp, #80]
     1f4:	ldr	x23, [sp, #48]
     1f8:	ldp	x29, x30, [sp, #32]
     1fc:	add	sp, sp, #0x60
     200:	ret

0000000000000204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>:
     204:	stp	xzr, xzr, [x8]
     208:	str	xzr, [x8, #16]
     20c:	ldr	x10, [x0, #8]
     210:	mov	x9, xzr
     214:	tbnz	x10, #60, 310 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x10c>
     218:	tbnz	x10, #61, 31c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x118>
     21c:	tbnz	x10, #62, 328 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x124>
     220:	tbnz	x10, #63, 334 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x130>
     224:	ldrb	w11, [x0, #16]
     228:	tbnz	w11, #0, 344 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x140>
     22c:	tbnz	x10, #54, 350 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x14c>
     230:	ldr	x11, [x0]
     234:	tbnz	x11, #43, 360 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x15c>
     238:	tbnz	x11, #51, 36c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x168>
     23c:	tbnz	x11, #42, 378 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x174>
     240:	tbnz	w11, #9, 384 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x180>
     244:	tbnz	w11, #22, 390 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x18c>
     248:	tbnz	x11, #49, 39c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x198>
     24c:	tbnz	x11, #61, 3a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1a4>
     250:	tbnz	x11, #46, 3b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1b0>
     254:	tbnz	w11, #25, 3c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1bc>
     258:	tbnz	x10, #46, 3cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c8>
     25c:	tbnz	w11, #1, 3d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1d4>
     260:	tbnz	w10, #27, 3e4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1e0>
     264:	tbnz	x11, #54, 3f0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1ec>
     268:	tbnz	x10, #44, 3fc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1f8>
     26c:	tbnz	w11, #30, 408 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x204>
     270:	tbnz	x11, #63, 414 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x210>
     274:	tbnz	x11, #32, 420 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x21c>
     278:	tbnz	x11, #48, 42c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x228>
     27c:	tbnz	w11, #23, 438 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x234>
     280:	tbnz	w10, #30, 444 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x240>
     284:	tbnz	w10, #29, 450 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x24c>
     288:	tbnz	w10, #28, 45c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x258>
     28c:	tbnz	w11, #0, 468 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x264>
     290:	tbnz	w11, #27, 474 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x270>
     294:	tbnz	w11, #11, 480 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x27c>
     298:	tbnz	x11, #44, 48c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x288>
     29c:	tbnz	x11, #60, 498 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x294>
     2a0:	tbnz	w10, #0, 4a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2a0>
     2a4:	tbnz	x11, #35, 4b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2ac>
     2a8:	tbnz	w11, #31, 4bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2b8>
     2ac:	tbnz	w10, #31, 4c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2c4>
     2b0:	tbnz	x11, #36, 4d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2d0>
     2b4:	tbnz	x10, #33, 4e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2dc>
     2b8:	tbnz	x10, #34, 4ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2e8>
     2bc:	tbnz	x10, #35, 4f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2f4>
     2c0:	tbnz	x10, #38, 504 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x300>
     2c4:	tbnz	x10, #37, 510 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x30c>
     2c8:	tbnz	x10, #36, 51c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x318>
     2cc:	tbnz	x11, #62, 528 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x324>
     2d0:	tbnz	w11, #3, 534 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x330>
     2d4:	tbnz	x11, #33, 540 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x33c>
     2d8:	tbnz	w10, #26, 54c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x348>
     2dc:	tbnz	x11, #57, 558 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x354>
     2e0:	tbnz	w11, #12, 564 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x360>
     2e4:	tbnz	w11, #8, 570 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x36c>
     2e8:	tbnz	x11, #47, 57c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x378>
     2ec:	tbnz	x10, #45, 588 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x384>
     2f0:	tbnz	w11, #28, 594 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x390>
     2f4:	tbnz	x10, #47, 5a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x39c>
     2f8:	tbz	x11, #50, 5ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3a8>
     2fc:	tbnz	w11, #10, 5b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3b4>
     300:	tbnz	x11, #52, 5c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c0>
     304:	tbnz	x11, #59, 5d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3cc>
     308:	tbnz	x11, #53, 5dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3d8>
     30c:	ret
     310:	mov	x9, #0x20000000000000      	// #9007199254740992
     314:	str	x9, [x8]
     318:	tbz	x10, #61, 21c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x18>
     31c:	orr	x9, x9, #0x40000000000000
     320:	str	x9, [x8]
     324:	tbz	x10, #62, 220 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c>
     328:	orr	x9, x9, #0x80000000000000
     32c:	str	x9, [x8]
     330:	tbz	x10, #63, 224 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x20>
     334:	orr	x9, x9, #0x100000000000000
     338:	str	x9, [x8]
     33c:	ldrb	w11, [x0, #16]
     340:	tbz	w11, #0, 22c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x28>
     344:	orr	x9, x9, #0x200000000000000
     348:	str	x9, [x8]
     34c:	tbz	x10, #54, 230 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2c>
     350:	orr	x9, x9, #0x400000000000000
     354:	str	x9, [x8]
     358:	ldr	x11, [x0]
     35c:	tbz	x11, #43, 238 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x34>
     360:	orr	x9, x9, #0x100000
     364:	str	x9, [x8]
     368:	tbz	x11, #51, 23c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x38>
     36c:	orr	x9, x9, #0x4000000
     370:	str	x9, [x8]
     374:	tbz	x11, #42, 240 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c>
     378:	orr	x9, x9, #0x80000
     37c:	str	x9, [x8]
     380:	tbz	w11, #9, 244 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x40>
     384:	orr	x9, x9, #0x20
     388:	str	x9, [x8]
     38c:	tbz	w11, #22, 248 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x44>
     390:	orr	x9, x9, #0x100
     394:	str	x9, [x8]
     398:	tbz	x11, #49, 24c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x48>
     39c:	orr	x9, x9, #0x2000000
     3a0:	str	x9, [x8]
     3a4:	tbz	x11, #61, 250 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x4c>
     3a8:	orr	x9, x9, #0x200000000
     3ac:	str	x9, [x8]
     3b0:	tbz	x11, #46, 254 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x50>
     3b4:	orr	x9, x9, #0x400000
     3b8:	str	x9, [x8]
     3bc:	tbz	w11, #25, 258 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x54>
     3c0:	orr	x9, x9, #0x400
     3c4:	str	x9, [x8]
     3c8:	tbz	x10, #46, 25c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x58>
     3cc:	orr	x9, x9, #0x8000000000000
     3d0:	str	x9, [x8]
     3d4:	tbz	w11, #1, 260 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x5c>
     3d8:	orr	x9, x9, #0x2
     3dc:	str	x9, [x8]
     3e0:	tbz	w10, #27, 264 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x60>
     3e4:	orr	x9, x9, #0x4000000000
     3e8:	str	x9, [x8]
     3ec:	tbz	x11, #54, 268 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x64>
     3f0:	orr	x9, x9, #0x20000000
     3f4:	str	x9, [x8]
     3f8:	tbz	x10, #44, 26c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x68>
     3fc:	orr	x9, x9, #0x2000000000000
     400:	str	x9, [x8]
     404:	tbz	w11, #30, 270 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x6c>
     408:	orr	x9, x9, #0x2000
     40c:	str	x9, [x8]
     410:	tbz	x11, #63, 274 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x70>
     414:	orr	x9, x9, #0x800000000
     418:	str	x9, [x8]
     41c:	tbz	x11, #32, 278 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x74>
     420:	orr	x9, x9, #0x8000
     424:	str	x9, [x8]
     428:	tbz	x11, #48, 27c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x78>
     42c:	orr	x9, x9, #0x1000000
     430:	str	x9, [x8]
     434:	tbz	w11, #23, 280 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x7c>
     438:	orr	x9, x9, #0x200
     43c:	str	x9, [x8]
     440:	tbz	w10, #30, 284 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x80>
     444:	orr	x9, x9, #0x20000000000
     448:	str	x9, [x8]
     44c:	tbz	w10, #29, 288 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x84>
     450:	orr	x9, x9, #0x10000000000
     454:	str	x9, [x8]
     458:	tbz	w10, #28, 28c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x88>
     45c:	orr	x9, x9, #0x8000000000
     460:	str	x9, [x8]
     464:	tbz	w11, #0, 290 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x8c>
     468:	orr	x9, x9, #0x1
     46c:	str	x9, [x8]
     470:	tbz	w11, #27, 294 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x90>
     474:	orr	x9, x9, #0x800
     478:	str	x9, [x8]
     47c:	tbz	w11, #11, 298 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x94>
     480:	orr	x9, x9, #0x80
     484:	str	x9, [x8]
     488:	tbz	x11, #44, 29c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x98>
     48c:	orr	x9, x9, #0x200000
     490:	str	x9, [x8]
     494:	tbz	x11, #60, 2a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x9c>
     498:	orr	x9, x9, #0x100000000
     49c:	str	x9, [x8]
     4a0:	tbz	w10, #0, 2a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa0>
     4a4:	orr	x9, x9, #0x1000000000
     4a8:	str	x9, [x8]
     4ac:	tbz	x11, #35, 2a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa4>
     4b0:	orr	x9, x9, #0x20000
     4b4:	str	x9, [x8]
     4b8:	tbz	w11, #31, 2ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa8>
     4bc:	orr	x9, x9, #0x4000
     4c0:	str	x9, [x8]
     4c4:	tbz	w10, #31, 2b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xac>
     4c8:	orr	x9, x9, #0x40000000000
     4cc:	str	x9, [x8]
     4d0:	tbz	x11, #36, 2b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb0>
     4d4:	orr	x9, x9, #0x40000
     4d8:	str	x9, [x8]
     4dc:	tbz	x10, #33, 2b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb4>
     4e0:	orr	x9, x9, #0x80000000000
     4e4:	str	x9, [x8]
     4e8:	tbz	x10, #34, 2bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb8>
     4ec:	orr	x9, x9, #0x100000000000
     4f0:	str	x9, [x8]
     4f4:	tbz	x10, #35, 2c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xbc>
     4f8:	orr	x9, x9, #0x200000000000
     4fc:	str	x9, [x8]
     500:	tbz	x10, #38, 2c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc0>
     504:	orr	x9, x9, #0x1000000000000
     508:	str	x9, [x8]
     50c:	tbz	x10, #37, 2c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc4>
     510:	orr	x9, x9, #0x800000000000
     514:	str	x9, [x8]
     518:	tbz	x10, #36, 2cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc8>
     51c:	orr	x9, x9, #0x400000000000
     520:	str	x9, [x8]
     524:	tbz	x11, #62, 2d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xcc>
     528:	orr	x9, x9, #0x400000000
     52c:	str	x9, [x8]
     530:	tbz	w11, #3, 2d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd0>
     534:	orr	x9, x9, #0x4
     538:	str	x9, [x8]
     53c:	tbz	x11, #33, 2d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd4>
     540:	orr	x9, x9, #0x10000
     544:	str	x9, [x8]
     548:	tbz	w10, #26, 2dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd8>
     54c:	orr	x9, x9, #0x2000000000
     550:	str	x9, [x8]
     554:	tbz	x11, #57, 2e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xdc>
     558:	orr	x9, x9, #0x40000000
     55c:	str	x9, [x8]
     560:	tbz	w11, #12, 2e4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe0>
     564:	orr	x9, x9, #0x10
     568:	str	x9, [x8]
     56c:	tbz	w11, #8, 2e8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe4>
     570:	orr	x9, x9, #0x8
     574:	str	x9, [x8]
     578:	tbz	x11, #47, 2ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe8>
     57c:	orr	x9, x9, #0x800000
     580:	str	x9, [x8]
     584:	tbz	x10, #45, 2f0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xec>
     588:	orr	x9, x9, #0x4000000000000
     58c:	str	x9, [x8]
     590:	tbz	w11, #28, 2f4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf0>
     594:	orr	x9, x9, #0x1000
     598:	str	x9, [x8]
     59c:	tbz	x10, #47, 2f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf4>
     5a0:	orr	x9, x9, #0x10000000000000
     5a4:	str	x9, [x8]
     5a8:	tbnz	x11, #50, 2fc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf8>
     5ac:	orr	x9, x9, #0x800000000000000
     5b0:	str	x9, [x8]
     5b4:	tbz	w11, #10, 300 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xfc>
     5b8:	orr	x9, x9, #0x40
     5bc:	str	x9, [x8]
     5c0:	tbz	x11, #52, 304 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x100>
     5c4:	orr	x9, x9, #0x8000000
     5c8:	str	x9, [x8]
     5cc:	tbz	x11, #59, 308 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x104>
     5d0:	orr	x9, x9, #0x80000000
     5d4:	str	x9, [x8]
     5d8:	tbz	x11, #53, 30c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x108>
     5dc:	orr	x9, x9, #0x10000000
     5e0:	str	x9, [x8]
     5e4:	ret

00000000000005e8 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev>:
     5e8:	stp	x29, x30, [sp, #-48]!
     5ec:	str	x21, [sp, #16]
     5f0:	stp	x20, x19, [sp, #32]
     5f4:	mov	x29, sp
     5f8:	ldr	w8, [x0, #204]
     5fc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     600:	mov	x19, x0
     604:	add	x9, x9, #0x0
     608:	str	x9, [x0]
     60c:	cbz	w8, 64c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>
     610:	ldr	w8, [x19, #200]
     614:	cbz	w8, 64c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>
     618:	mov	x20, xzr
     61c:	lsl	x21, x8, #3
     620:	b	630 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x48>
     624:	add	x20, x20, #0x8
     628:	cmp	x21, x20
     62c:	b.eq	64c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>  // b.none
     630:	ldr	x8, [x19, #192]
     634:	ldr	x0, [x8, x20]
     638:	cmn	x0, #0x8
     63c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     640:	b.eq	624 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x3c>  // b.none
     644:	bl	0 <free>
     648:	b	624 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x3c>
     64c:	ldr	x0, [x19, #192]
     650:	bl	0 <free>
     654:	mov	x0, x19
     658:	ldp	x20, x19, [sp, #32]
     65c:	ldr	x21, [sp, #16]
     660:	ldp	x29, x30, [sp], #48
     664:	b	0 <_ZN4llvm17MCTargetAsmParserD2Ev>

0000000000000668 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev>:
     668:	stp	x29, x30, [sp, #-48]!
     66c:	str	x21, [sp, #16]
     670:	stp	x20, x19, [sp, #32]
     674:	mov	x29, sp
     678:	ldr	w8, [x0, #204]
     67c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     680:	mov	x19, x0
     684:	add	x9, x9, #0x0
     688:	str	x9, [x0]
     68c:	cbz	w8, 6cc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>
     690:	ldr	w8, [x19, #200]
     694:	cbz	w8, 6cc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>
     698:	mov	x20, xzr
     69c:	lsl	x21, x8, #3
     6a0:	b	6b0 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x48>
     6a4:	add	x20, x20, #0x8
     6a8:	cmp	x21, x20
     6ac:	b.eq	6cc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>  // b.none
     6b0:	ldr	x8, [x19, #192]
     6b4:	ldr	x0, [x8, x20]
     6b8:	cmn	x0, #0x8
     6bc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     6c0:	b.eq	6a4 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x3c>  // b.none
     6c4:	bl	0 <free>
     6c8:	b	6a4 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x3c>
     6cc:	ldr	x0, [x19, #192]
     6d0:	bl	0 <free>
     6d4:	mov	x0, x19
     6d8:	bl	0 <_ZN4llvm17MCTargetAsmParserD2Ev>
     6dc:	mov	x0, x19
     6e0:	ldp	x20, x19, [sp, #32]
     6e4:	ldr	x21, [sp, #16]
     6e8:	ldp	x29, x30, [sp], #48
     6ec:	b	0 <_ZdlPv>

00000000000006f0 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_>:
     6f0:	stp	x29, x30, [sp, #-48]!
     6f4:	stp	x22, x21, [sp, #16]
     6f8:	stp	x20, x19, [sp, #32]
     6fc:	mov	x29, sp
     700:	mov	x21, x0
     704:	ldr	x0, [x0, #8]
     708:	mov	x19, x3
     70c:	mov	x20, x2
     710:	mov	x22, x1
     714:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     718:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     71c:	str	x0, [x20]
     720:	mov	x0, x21
     724:	mov	x1, x22
     728:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
     72c:	ldr	x8, [x21, #8]
     730:	mov	w20, w0
     734:	mov	x0, x8
     738:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     73c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     740:	sub	x8, x0, #0x1
     744:	str	x8, [x19]
     748:	cmp	w20, #0x0
     74c:	ldp	x20, x19, [sp, #32]
     750:	ldp	x22, x21, [sp, #16]
     754:	cset	w0, ne  // ne = any
     758:	ldp	x29, x30, [sp], #48
     75c:	ret

0000000000000760 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE>:
     760:	sub	sp, sp, #0x1d0
     764:	stp	x29, x30, [sp, #368]
     768:	stp	x28, x27, [sp, #384]
     76c:	stp	x26, x25, [sp, #400]
     770:	stp	x24, x23, [sp, #416]
     774:	stp	x22, x21, [sp, #432]
     778:	stp	x20, x19, [sp, #448]
     77c:	add	x29, sp, #0x170
     780:	stp	x5, x2, [sp, #24]
     784:	str	x3, [sp, #40]
     788:	mov	x20, x0
     78c:	ldr	x27, [x20, #8]!
     790:	mov	x28, x0
     794:	sub	x8, x29, #0x40
     798:	add	x0, sp, #0x20
     79c:	mov	x19, x4
     7a0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
     7a4:	ldp	x0, x8, [x29, #-64]
     7a8:	cmp	x8, #0x3
     7ac:	b.ne	a2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2cc>  // b.any
     7b0:	ldrh	w8, [x0]
     7b4:	ldrb	w9, [x0, #2]
     7b8:	mov	w10, #0x6562                	// #25954
     7bc:	mov	w11, #0x71                  	// #113
     7c0:	eor	w8, w8, w10
     7c4:	eor	w9, w9, w11
     7c8:	orr	w8, w8, w9
     7cc:	tst	w8, #0xffff
     7d0:	b.eq	a34 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2d4>  // b.none
     7d4:	ldrh	w8, [x0]
     7d8:	ldrb	w9, [x0, #2]
     7dc:	mov	w10, #0x6e62                	// #28258
     7e0:	mov	w11, #0x65                  	// #101
     7e4:	eor	w8, w8, w10
     7e8:	eor	w9, w9, w11
     7ec:	orr	w8, w8, w9
     7f0:	tst	w8, #0xffff
     7f4:	b.eq	a40 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2e0>  // b.none
     7f8:	ldrh	w9, [x0]
     7fc:	ldrb	w10, [x0, #2]
     800:	mov	w11, #0x6862                	// #26722
     804:	mov	w8, #0x73                  	// #115
     808:	eor	w9, w9, w11
     80c:	eor	w10, w10, w8
     810:	orr	w9, w9, w10
     814:	tst	w9, #0xffff
     818:	b.eq	a4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2ec>  // b.none
     81c:	ldrh	w9, [x0]
     820:	ldrb	w10, [x0, #2]
     824:	mov	w11, #0x6362                	// #25442
     828:	eor	w9, w9, w11
     82c:	eor	w8, w10, w8
     830:	orr	w8, w9, w8
     834:	tst	w8, #0xffff
     838:	b.eq	a58 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2f8>  // b.none
     83c:	ldrh	w8, [x0]
     840:	ldrb	w9, [x0, #2]
     844:	mov	w10, #0x6c62                	// #27746
     848:	mov	w11, #0x6f                  	// #111
     84c:	eor	w8, w8, w10
     850:	eor	w9, w9, w11
     854:	orr	w8, w8, w9
     858:	tst	w8, #0xffff
     85c:	b.eq	a64 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x304>  // b.none
     860:	ldrh	w8, [x0]
     864:	ldrb	w9, [x0, #2]
     868:	mov	w10, #0x6362                	// #25442
     86c:	mov	w11, #0x63                  	// #99
     870:	eor	w8, w8, w10
     874:	eor	w9, w9, w11
     878:	orr	w8, w8, w9
     87c:	tst	w8, #0xffff
     880:	b.eq	a70 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x310>  // b.none
     884:	ldrh	w8, [x0]
     888:	ldrb	w9, [x0, #2]
     88c:	mov	w10, #0x6d62                	// #28002
     890:	mov	w11, #0x69                  	// #105
     894:	eor	w8, w8, w10
     898:	eor	w9, w9, w11
     89c:	orr	w8, w8, w9
     8a0:	tst	w8, #0xffff
     8a4:	b.eq	a7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x31c>  // b.none
     8a8:	ldrh	w8, [x0]
     8ac:	ldrb	w9, [x0, #2]
     8b0:	mov	w10, #0x7062                	// #28770
     8b4:	mov	w11, #0x6c                  	// #108
     8b8:	eor	w8, w8, w10
     8bc:	eor	w9, w9, w11
     8c0:	orr	w8, w8, w9
     8c4:	tst	w8, #0xffff
     8c8:	b.eq	a88 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x328>  // b.none
     8cc:	ldrh	w9, [x0]
     8d0:	ldrb	w10, [x0, #2]
     8d4:	mov	w8, #0x7662                	// #30306
     8d8:	mov	w11, #0x73                  	// #115
     8dc:	eor	w9, w9, w8
     8e0:	eor	w10, w10, w11
     8e4:	orr	w9, w9, w10
     8e8:	tst	w9, #0xffff
     8ec:	b.eq	a94 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x334>  // b.none
     8f0:	ldrh	w9, [x0]
     8f4:	ldrb	w10, [x0, #2]
     8f8:	mov	w11, #0x63                  	// #99
     8fc:	eor	w8, w9, w8
     900:	eor	w9, w10, w11
     904:	orr	w8, w8, w9
     908:	tst	w8, #0xffff
     90c:	b.eq	aa0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x340>  // b.none
     910:	ldrh	w8, [x0]
     914:	ldrb	w9, [x0, #2]
     918:	mov	w10, #0x6862                	// #26722
     91c:	mov	w11, #0x69                  	// #105
     920:	eor	w8, w8, w10
     924:	eor	w9, w9, w11
     928:	orr	w8, w8, w9
     92c:	tst	w8, #0xffff
     930:	b.eq	aac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x34c>  // b.none
     934:	ldrh	w8, [x0]
     938:	ldrb	w9, [x0, #2]
     93c:	mov	w10, #0x6c62                	// #27746
     940:	mov	w11, #0x73                  	// #115
     944:	eor	w8, w8, w10
     948:	eor	w9, w9, w11
     94c:	orr	w8, w8, w9
     950:	tst	w8, #0xffff
     954:	b.eq	ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x358>  // b.none
     958:	ldrh	w8, [x0]
     95c:	ldrb	w9, [x0, #2]
     960:	mov	w10, #0x6762                	// #26466
     964:	mov	w11, #0x65                  	// #101
     968:	eor	w8, w8, w10
     96c:	eor	w9, w9, w11
     970:	orr	w8, w8, w9
     974:	tst	w8, #0xffff
     978:	b.eq	ac4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x364>  // b.none
     97c:	ldrh	w9, [x0]
     980:	ldrb	w10, [x0, #2]
     984:	mov	w11, #0x6c62                	// #27746
     988:	mov	w8, #0x74                  	// #116
     98c:	eor	w9, w9, w11
     990:	eor	w10, w10, w8
     994:	orr	w9, w9, w10
     998:	tst	w9, #0xffff
     99c:	b.eq	ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x370>  // b.none
     9a0:	ldrh	w9, [x0]
     9a4:	ldrb	w10, [x0, #2]
     9a8:	mov	w11, #0x6762                	// #26466
     9ac:	eor	w9, w9, w11
     9b0:	eor	w8, w10, w8
     9b4:	orr	w8, w9, w8
     9b8:	tst	w8, #0xffff
     9bc:	b.eq	adc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x37c>  // b.none
     9c0:	ldrh	w8, [x0]
     9c4:	ldrb	w9, [x0, #2]
     9c8:	mov	w10, #0x6c62                	// #27746
     9cc:	mov	w11, #0x65                  	// #101
     9d0:	eor	w8, w8, w10
     9d4:	eor	w9, w9, w11
     9d8:	orr	w8, w8, w9
     9dc:	tst	w8, #0xffff
     9e0:	b.eq	ae8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x388>  // b.none
     9e4:	ldrh	w8, [x0]
     9e8:	ldrb	w9, [x0, #2]
     9ec:	mov	w10, #0x6162                	// #24930
     9f0:	mov	w11, #0x6c                  	// #108
     9f4:	eor	w8, w8, w10
     9f8:	eor	w9, w9, w11
     9fc:	orr	w8, w8, w9
     a00:	tst	w8, #0xffff
     a04:	b.eq	af4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x394>  // b.none
     a08:	ldrh	w8, [x0]
     a0c:	ldrb	w9, [x0, #2]
     a10:	mov	w10, #0x6e62                	// #28258
     a14:	mov	w11, #0x76                  	// #118
     a18:	eor	w8, w8, w10
     a1c:	eor	w9, w9, w11
     a20:	orr	w8, w8, w9
     a24:	tst	w8, #0xffff
     a28:	b.eq	b00 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a0>  // b.none
     a2c:	ldp	x8, x9, [sp, #32]
     a30:	b	b18 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3b8>
     a34:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a38:	add	x9, x9, #0x0
     a3c:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a40:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a44:	add	x9, x9, #0x0
     a48:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a4c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a50:	add	x9, x9, #0x0
     a54:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a58:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a5c:	add	x9, x9, #0x0
     a60:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a64:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a68:	add	x9, x9, #0x0
     a6c:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a70:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a74:	add	x9, x9, #0x0
     a78:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a7c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a80:	add	x9, x9, #0x0
     a84:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a88:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a8c:	add	x9, x9, #0x0
     a90:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     a94:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     a98:	add	x9, x9, #0x0
     a9c:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     aa0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     aa4:	add	x9, x9, #0x0
     aa8:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     aac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ab0:	add	x9, x9, #0x0
     ab4:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ab8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     abc:	add	x9, x9, #0x0
     ac0:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ac4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ac8:	add	x9, x9, #0x0
     acc:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ad0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ad4:	add	x9, x9, #0x0
     ad8:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     adc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ae0:	add	x9, x9, #0x0
     ae4:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ae8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     aec:	add	x9, x9, #0x0
     af0:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     af4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     af8:	add	x9, x9, #0x0
     afc:	b	b08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b00:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b04:	add	x9, x9, #0x0
     b08:	and	x8, x9, #0xffffffffffffff00
     b0c:	and	x9, x9, #0xff
     b10:	orr	x8, x8, x9
     b14:	mov	w9, #0x4                   	// #4
     b18:	sub	x10, x29, #0x40
     b1c:	add	x10, x10, #0x10
     b20:	cmp	x0, x10
     b24:	stp	x8, x9, [sp, #32]
     b28:	b.eq	b30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3d0>  // b.none
     b2c:	bl	0 <_ZdlPv>
     b30:	mov	x0, x27
     b34:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     b38:	ldr	w8, [x0]
     b3c:	cmp	w8, #0x2
     b40:	b.ne	bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x450>  // b.any
     b44:	mov	x0, x27
     b48:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     b4c:	ldr	w8, [x0]
     b50:	cmp	w8, #0x3
     b54:	b.eq	b70 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x410>  // b.none
     b58:	cmp	w8, #0x2
     b5c:	b.ne	2630 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ed0>  // b.any
     b60:	ldp	x8, x9, [x0, #8]
     b64:	cmp	x9, #0x4
     b68:	b.eq	b9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x43c>  // b.none
     b6c:	b	bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x450>
     b70:	ldp	x8, x9, [x0, #8]
     b74:	subs	x10, x9, #0x1
     b78:	cset	w11, cs  // cs = hs, nlast
     b7c:	cinc	x8, x8, cs  // cs = hs, nlast
     b80:	cmp	x10, x11
     b84:	csel	x10, x10, x11, hi  // hi = pmore
     b88:	cmp	x9, x10
     b8c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
     b90:	sub	x9, x9, x11
     b94:	cmp	x9, #0x4
     b98:	b.ne	bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x450>  // b.any
     b9c:	ldr	w8, [x8]
     ba0:	mov	w9, #0x722e                	// #29230
     ba4:	movk	w9, #0x7165, lsl #16
     ba8:	cmp	w8, w9
     bac:	b.eq	f74 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x814>  // b.none
     bb0:	ldp	x23, x24, [sp, #32]
     bb4:	cbz	x24, bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x474>
     bb8:	mov	w1, #0x2e                  	// #46
     bbc:	mov	x0, x23
     bc0:	mov	x2, x24
     bc4:	bl	0 <memchr>
     bc8:	cbz	x0, bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x474>
     bcc:	sub	x22, x0, x23
     bd0:	b	bd8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x478>
     bd4:	mov	x22, #0xffffffffffffffff    	// #-1
     bd8:	cmp	x24, x22
     bdc:	csel	x24, x24, x22, cc  // cc = lo, ul, last
     be0:	cmp	x24, #0x4
     be4:	b.eq	cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x570>  // b.none
     be8:	cmp	x24, #0x3
     bec:	b.eq	c2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4cc>  // b.none
     bf0:	cmp	x24, #0x2
     bf4:	b.ne	ce8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x588>  // b.any
     bf8:	ldrh	w8, [x23]
     bfc:	mov	w9, #0x6369                	// #25449
     c00:	cmp	w8, w9
     c04:	b.eq	c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>  // b.none
     c08:	ldrh	w8, [x23]
     c0c:	mov	w9, #0x6364                	// #25444
     c10:	cmp	w8, w9
     c14:	b.eq	c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>  // b.none
     c18:	ldrh	w8, [x23]
     c1c:	mov	w9, #0x7461                	// #29793
     c20:	cmp	w8, w9
     c24:	b.ne	ce8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x588>  // b.any
     c28:	b	c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>
     c2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     c30:	add	x1, x1, #0x0
     c34:	mov	x0, x23
     c38:	mov	x2, x24
     c3c:	bl	0 <bcmp>
     c40:	cbz	w0, c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>
     c44:	ldrh	w8, [x23]
     c48:	ldrb	w9, [x23, #2]
     c4c:	mov	w10, #0x7664                	// #30308
     c50:	eor	w8, w8, w10
     c54:	eor	w9, w9, #0x70
     c58:	orr	w8, w8, w9
     c5c:	tst	w8, #0xffff
     c60:	b.eq	c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>  // b.none
     c64:	ldrh	w8, [x23]
     c68:	ldrb	w9, [x23, #2]
     c6c:	mov	w10, #0x7063                	// #28771
     c70:	eor	w8, w8, w10
     c74:	eor	w9, w9, #0x70
     c78:	orr	w8, w8, w9
     c7c:	tst	w8, #0xffff
     c80:	b.ne	ce8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x588>  // b.any
     c84:	mov	w1, #0x2e                  	// #46
     c88:	mov	x0, x23
     c8c:	mov	x2, x24
     c90:	bl	0 <memchr>
     c94:	cbz	x0, dbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x65c>
     c98:	sub	x8, x0, x23
     c9c:	cmn	x8, #0x1
     ca0:	b.eq	dbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x65c>  // b.none
     ca4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
     ca8:	add	x8, x8, #0x0
     cac:	mov	w9, #0x103                 	// #259
     cb0:	stp	x8, xzr, [x29, #-64]
     cb4:	sturh	w9, [x29, #-48]
     cb8:	ldr	x0, [x20]
     cbc:	sub	x1, x29, #0x40
     cc0:	mov	x2, xzr
     cc4:	mov	x3, xzr
     cc8:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
     ccc:	b	1478 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd18>
     cd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     cd4:	add	x1, x1, #0x0
     cd8:	mov	x0, x23
     cdc:	mov	x2, x24
     ce0:	bl	0 <bcmp>
     ce4:	cbz	w0, c84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x524>
     ce8:	ldr	x0, [x20]
     cec:	ldr	x8, [x0]
     cf0:	ldr	x8, [x8, #48]
     cf4:	blr	x8
     cf8:	mov	x26, x0
     cfc:	mov	w0, #0x70                  	// #112
     d00:	bl	0 <_Znwm>
     d04:	mov	x8, x0
     d08:	mov	w9, #0x6                   	// #6
     d0c:	strb	wzr, [x8, #32]!
     d10:	str	w9, [x0, #48]
     d14:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     d18:	add	x9, x9, #0x0
     d1c:	mov	x25, x0
     d20:	str	x9, [x0]
     d24:	str	x26, [x0, #104]
     d28:	stp	x19, x23, [x0, #64]
     d2c:	str	w24, [x0, #80]
     d30:	strb	wzr, [x0, #84]
     d34:	str	x19, [x0, #56]
     d38:	stp	x8, xzr, [x0, #16]
     d3c:	ldr	x0, [sp, #24]
     d40:	ldp	w8, w9, [x0, #8]
     d44:	cmp	w8, w9
     d48:	b.cs	25ac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e4c>  // b.hs, b.nlast
     d4c:	ldr	x10, [x0]
     d50:	cmp	w8, w9
     d54:	str	x25, [x10, w8, uxtw #3]
     d58:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
     d5c:	add	w8, w8, #0x1
     d60:	cmp	x24, #0x1
     d64:	str	w8, [x0, #8]
     d68:	stp	x23, x24, [x28, #176]
     d6c:	b.ne	1150 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x9f0>  // b.any
     d70:	cmn	x22, #0x1
     d74:	b.eq	1150 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x9f0>  // b.none
     d78:	ldrb	w8, [x23]
     d7c:	cmp	w8, #0x62
     d80:	b.ne	1150 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x9f0>  // b.any
     d84:	str	x19, [sp, #8]
     d88:	ldp	x23, x19, [sp, #32]
     d8c:	add	x8, x22, #0x1
     d90:	cmp	x19, x22
     d94:	csinc	x21, x19, x22, ls  // ls = plast
     d98:	cmp	x19, x8
     d9c:	b.ls	fe8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x888>  // b.plast
     da0:	add	x0, x23, x21
     da4:	sub	x2, x19, x21
     da8:	mov	w1, #0x2e                  	// #46
     dac:	bl	0 <memchr>
     db0:	cbz	x0, fe8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x888>
     db4:	sub	x22, x0, x23
     db8:	b	fec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x88c>
     dbc:	mov	x21, x28
     dc0:	str	x23, [x21, #176]!
     dc4:	ldur	x0, [x21, #-168]
     dc8:	str	x24, [x21, #8]
     dcc:	ldr	x8, [x0]
     dd0:	ldr	x8, [x8, #48]
     dd4:	blr	x8
     dd8:	mov	x24, x0
     ddc:	mov	w0, #0x70                  	// #112
     de0:	bl	0 <_Znwm>
     de4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     de8:	mov	x8, x0
     dec:	add	x9, x9, #0x0
     df0:	strb	wzr, [x8, #32]!
     df4:	str	x9, [x0]
     df8:	mov	w9, #0x6                   	// #6
     dfc:	str	w9, [x0, #48]
     e00:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     e04:	add	x9, x9, #0x0
     e08:	stp	x19, x9, [x0, #64]
     e0c:	mov	w9, #0x3                   	// #3
     e10:	mov	x23, x0
     e14:	str	x24, [x0, #104]
     e18:	str	w9, [x0, #80]
     e1c:	strb	wzr, [x0, #84]
     e20:	str	x19, [x0, #56]
     e24:	stp	x8, xzr, [x0, #16]
     e28:	ldr	x0, [sp, #24]
     e2c:	ldp	w8, w9, [x0, #8]
     e30:	cmp	w8, w9
     e34:	b.cs	25c0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e60>  // b.hs, b.nlast
     e38:	ldr	x10, [x0]
     e3c:	cmp	w8, w9
     e40:	str	x23, [x10, w8, uxtw #3]
     e44:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
     e48:	add	w8, w8, #0x1
     e4c:	str	w8, [x0, #8]
     e50:	ldr	x23, [x28, #8]
     e54:	mov	x0, x23
     e58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     e5c:	ldp	x26, x25, [x0, #8]
     e60:	mov	x22, x0
     e64:	stp	x26, x25, [x29, #-24]
     e68:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     e6c:	ldp	x8, x9, [x28, #176]
     e70:	mov	x24, x0
     e74:	cmp	x9, #0x4
     e78:	b.eq	17b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1054>  // b.none
     e7c:	cmp	x9, #0x3
     e80:	b.eq	1690 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf30>  // b.none
     e84:	cmp	x9, #0x2
     e88:	b.ne	20b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1958>  // b.any
     e8c:	ldrh	w9, [x8]
     e90:	mov	w10, #0x6369                	// #25449
     e94:	cmp	w9, w10
     e98:	b.eq	1900 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x11a0>  // b.none
     e9c:	ldrh	w9, [x8]
     ea0:	mov	w10, #0x6364                	// #25444
     ea4:	cmp	w9, w10
     ea8:	b.eq	19fc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x129c>  // b.none
     eac:	ldrh	w8, [x8]
     eb0:	mov	w9, #0x7461                	// #29793
     eb4:	cmp	w8, w9
     eb8:	b.ne	20b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1958>  // b.any
     ebc:	mov	x0, x26
     ec0:	mov	x1, x25
     ec4:	bl	0 <_ZN4llvm9AArch64AT14lookupATByNameENS_9StringRefE>
     ec8:	cbz	x0, 1e1c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16bc>
     ecc:	mov	x25, x0
     ed0:	mov	x0, x28
     ed4:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     ed8:	ldr	q0, [x25, #16]
     edc:	ldp	x8, x9, [x0, #184]
     ee0:	ldr	x10, [x0, #200]
     ee4:	ldr	x11, [x25, #32]
     ee8:	stur	q0, [x29, #-64]
     eec:	ldp	x12, x13, [x29, #-64]
     ef0:	and	x10, x11, x10
     ef4:	and	x8, x12, x8
     ef8:	and	x9, x13, x9
     efc:	stur	x8, [x29, #-64]
     f00:	stp	x9, x10, [x29, #-56]
     f04:	ldp	x11, x12, [x25, #16]
     f08:	ldr	x13, [x25, #32]
     f0c:	eor	x8, x8, x11
     f10:	eor	x9, x9, x12
     f14:	eor	x10, x10, x13
     f18:	orr	x8, x8, x9
     f1c:	orr	x8, x8, x10
     f20:	cbz	x8, 1ab4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1354>
     f24:	ldr	x19, [x25]
     f28:	sub	x8, x29, #0x80
     f2c:	add	x21, x8, #0x10
     f30:	stur	x21, [x29, #-128]
     f34:	cbz	x19, 2670 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f10>
     f38:	mov	x0, x19
     f3c:	mov	x22, x20
     f40:	bl	0 <strlen>
     f44:	mov	x20, x0
     f48:	cmp	x0, #0xf
     f4c:	stur	x0, [x29, #-64]
     f50:	b.ls	2400 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ca0>  // b.plast
     f54:	sub	x0, x29, #0x80
     f58:	sub	x1, x29, #0x40
     f5c:	mov	x2, xzr
     f60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     f64:	ldur	x8, [x29, #-64]
     f68:	stur	x0, [x29, #-128]
     f6c:	stur	x8, [x29, #-112]
     f70:	b	2404 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ca4>
     f74:	ldp	x8, x9, [sp, #32]
     f78:	mov	x22, x20
     f7c:	stp	x8, x9, [x29, #-128]
     f80:	ldr	x0, [x28, #8]
     f84:	ldr	x8, [x0]
     f88:	ldr	x8, [x8, #136]
     f8c:	blr	x8
     f90:	ldr	x0, [x28, #8]
     f94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     f98:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     f9c:	mov	x20, x0
     fa0:	add	x1, sp, #0x50
     fa4:	mov	x0, x28
     fa8:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
     fac:	cbz	w0, 1880 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1120>
     fb0:	add	x1, sp, #0x50
     fb4:	sub	x2, x29, #0x60
     fb8:	mov	w3, #0x1                   	// #1
     fbc:	mov	x0, x28
     fc0:	stp	xzr, xzr, [x29, #-96]
     fc4:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
     fc8:	cmp	w0, #0x2
     fcc:	b.eq	22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>  // b.none
     fd0:	cbnz	w0, 19b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1258>
     fd4:	ldur	x8, [x29, #-88]
     fd8:	cbz	x8, 1bc4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1464>
     fdc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
     fe0:	add	x8, x8, #0x0
     fe4:	b	21a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a48>
     fe8:	mov	x22, #0xffffffffffffffff    	// #-1
     fec:	cmp	x21, x22
     ff0:	csel	x8, x22, x21, cc  // cc = lo, ul, last
     ff4:	cmp	x19, x8
     ff8:	csel	x8, x19, x8, cc  // cc = lo, ul, last
     ffc:	ldr	x19, [sp, #8]
    1000:	add	x23, x23, x21
    1004:	sub	x24, x8, x21
    1008:	mov	x0, x28
    100c:	mov	x1, x23
    1010:	mov	x2, x24
    1014:	add	x26, x19, x21
    1018:	bl	8840 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
    101c:	cmp	w0, #0x10
    1020:	b.ne	1054 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x8f4>  // b.any
    1024:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1028:	add	x8, x8, #0x0
    102c:	mov	w9, #0x103                 	// #259
    1030:	stp	x8, xzr, [x29, #-64]
    1034:	sturh	w9, [x29, #-48]
    1038:	ldr	x0, [x20]
    103c:	sub	x2, x29, #0x40
    1040:	mov	x1, x26
    1044:	mov	x3, xzr
    1048:	mov	x4, xzr
    104c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    1050:	b	1478 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd18>
    1054:	mov	w21, w0
    1058:	ldr	x0, [x20]
    105c:	ldr	x8, [x0]
    1060:	ldr	x8, [x8, #48]
    1064:	blr	x8
    1068:	mov	x25, x0
    106c:	mov	w0, #0x70                  	// #112
    1070:	bl	0 <_Znwm>
    1074:	mov	x8, x0
    1078:	mov	w9, #0x6                   	// #6
    107c:	strb	wzr, [x8, #32]!
    1080:	str	w9, [x0, #48]
    1084:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1088:	ldr	x11, [sp, #24]
    108c:	add	x9, x9, #0x0
    1090:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    1094:	stp	x26, x9, [x0, #64]
    1098:	mov	w9, #0x1                   	// #1
    109c:	add	x10, x10, #0x0
    10a0:	str	x25, [x0, #104]
    10a4:	str	x10, [x0]
    10a8:	str	w9, [x0, #80]
    10ac:	strb	w9, [x0, #84]
    10b0:	str	x26, [x0, #56]
    10b4:	stp	x8, xzr, [x0, #16]
    10b8:	ldp	w8, w9, [x11, #8]
    10bc:	cmp	w8, w9
    10c0:	b.cs	25d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e74>  // b.hs, b.nlast
    10c4:	ldr	x10, [x11]
    10c8:	cmp	w8, w9
    10cc:	str	x0, [x10, w8, uxtw #3]
    10d0:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
    10d4:	add	w8, w8, #0x1
    10d8:	str	w8, [x11, #8]
    10dc:	ldr	x0, [x20]
    10e0:	ldr	x8, [x0]
    10e4:	ldr	x8, [x8, #48]
    10e8:	blr	x8
    10ec:	mov	x25, x0
    10f0:	mov	w0, #0x70                  	// #112
    10f4:	bl	0 <_Znwm>
    10f8:	ldr	x11, [sp, #24]
    10fc:	mov	x8, x0
    1100:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    1104:	mov	w9, #0x2                   	// #2
    1108:	strb	wzr, [x8, #32]!
    110c:	add	x10, x10, #0x0
    1110:	str	x10, [x0]
    1114:	str	w9, [x0, #48]
    1118:	str	x25, [x0, #104]
    111c:	str	w21, [x0, #72]
    1120:	stp	x19, x19, [x0, #56]
    1124:	stp	x8, xzr, [x0, #16]
    1128:	ldp	w8, w9, [x11, #8]
    112c:	mov	x26, x0
    1130:	cmp	w8, w9
    1134:	b.cs	25f8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e98>  // b.hs, b.nlast
    1138:	ldr	x10, [x11]
    113c:	cmp	w8, w9
    1140:	str	x26, [x10, w8, uxtw #3]
    1144:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
    1148:	add	w8, w8, #0x1
    114c:	str	w8, [x11, #8]
    1150:	cmn	x22, #0x1
    1154:	b.eq	1270 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb10>  // b.none
    1158:	add	x19, x19, #0x1
    115c:	stp	x27, x28, [sp, #8]
    1160:	ldp	x26, x23, [sp, #32]
    1164:	add	x9, x22, #0x1
    1168:	cmp	x23, x22
    116c:	csinc	x8, x23, x22, ls  // ls = plast
    1170:	cmp	x23, x9
    1174:	b.ls	1194 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa34>  // b.plast
    1178:	add	x0, x26, x8
    117c:	sub	x2, x23, x8
    1180:	mov	w1, #0x2e                  	// #46
    1184:	bl	0 <memchr>
    1188:	cbz	x0, 1194 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa34>
    118c:	sub	x27, x0, x26
    1190:	b	1198 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa38>
    1194:	mov	x27, #0xffffffffffffffff    	// #-1
    1198:	ldr	x0, [x20]
    119c:	cmp	x23, x22
    11a0:	csel	x28, x23, x22, cc  // cc = lo, ul, last
    11a4:	cmp	x28, x27
    11a8:	ldr	x8, [x0]
    11ac:	csel	x9, x27, x28, cc  // cc = lo, ul, last
    11b0:	cmp	x23, x9
    11b4:	csel	x9, x23, x9, cc  // cc = lo, ul, last
    11b8:	ldr	x8, [x8, #48]
    11bc:	mov	x25, x20
    11c0:	add	x20, x26, x28
    11c4:	sub	x24, x9, x28
    11c8:	add	x21, x19, x28
    11cc:	blr	x8
    11d0:	mov	x23, x0
    11d4:	mov	w0, #0x70                  	// #112
    11d8:	bl	0 <_Znwm>
    11dc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    11e0:	mov	x8, x0
    11e4:	add	x9, x9, #0x0
    11e8:	strb	wzr, [x8, #32]!
    11ec:	str	x9, [x0]
    11f0:	mov	w9, #0x6                   	// #6
    11f4:	str	w9, [x0, #48]
    11f8:	mov	w9, #0x1                   	// #1
    11fc:	mov	x22, x0
    1200:	str	x23, [x0, #104]
    1204:	stp	x21, x20, [x0, #64]
    1208:	str	w24, [x0, #80]
    120c:	strb	w9, [x0, #84]
    1210:	str	x21, [x0, #56]
    1214:	stp	x8, xzr, [x0, #16]
    1218:	ldr	x0, [sp, #24]
    121c:	ldp	w8, w9, [x0, #8]
    1220:	cmp	w8, w9
    1224:	b.cs	1254 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaf4>  // b.hs, b.nlast
    1228:	ldr	x10, [x0]
    122c:	cmp	w8, w9
    1230:	str	x22, [x10, w8, uxtw #3]
    1234:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
    1238:	mov	x20, x25
    123c:	add	w8, w8, #0x1
    1240:	cmn	x27, #0x1
    1244:	mov	x22, x27
    1248:	str	w8, [x0, #8]
    124c:	b.ne	1160 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa00>  // b.any
    1250:	b	1268 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb08>
    1254:	mov	x1, xzr
    1258:	bl	0 <LLVMInitializeAArch64AsmParser>
    125c:	ldr	x0, [sp, #24]
    1260:	ldp	w8, w9, [x0, #8]
    1264:	b	1228 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xac8>
    1268:	add	x23, x26, x28
    126c:	ldp	x27, x28, [sp, #8]
    1270:	cmp	x24, #0x6
    1274:	b.eq	136c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc0c>  // b.none
    1278:	cmp	x24, #0x5
    127c:	b.eq	12d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb74>  // b.none
    1280:	cmp	x24, #0x4
    1284:	b.ne	1394 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc34>  // b.any
    1288:	ldr	w8, [x23]
    128c:	mov	w9, #0x6363                	// #25443
    1290:	movk	w9, #0x706d, lsl #16
    1294:	cmp	w8, w9
    1298:	b.eq	13d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc70>  // b.none
    129c:	ldr	w8, [x23]
    12a0:	mov	w9, #0x7363                	// #29539
    12a4:	movk	w9, #0x6e69, lsl #16
    12a8:	add	w9, w9, #0x3f, lsl #12
    12ac:	cmp	w8, w9
    12b0:	b.eq	13d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc70>  // b.none
    12b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    12b8:	add	x1, x1, #0x0
    12bc:	mov	x0, x23
    12c0:	mov	x2, x24
    12c4:	bl	0 <bcmp>
    12c8:	cmp	w0, #0x0
    12cc:	cset	w26, ne  // ne = any
    12d0:	b	13d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc74>
    12d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    12d8:	add	x1, x1, #0x0
    12dc:	mov	x0, x23
    12e0:	mov	x2, x24
    12e4:	bl	0 <bcmp>
    12e8:	cbz	w0, 13a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc44>
    12ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    12f0:	add	x1, x1, #0x0
    12f4:	mov	x0, x23
    12f8:	mov	x2, x24
    12fc:	bl	0 <bcmp>
    1300:	cbz	w0, 13a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc44>
    1304:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1308:	add	x1, x1, #0x0
    130c:	mov	x0, x23
    1310:	mov	x2, x24
    1314:	bl	0 <bcmp>
    1318:	cbz	w0, 13a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc44>
    131c:	ldr	w8, [x23]
    1320:	ldrb	w9, [x23, #4]
    1324:	mov	w10, #0x7363                	// #29539
    1328:	movk	w10, #0x6e69, lsl #16
    132c:	mov	w11, #0x76                  	// #118
    1330:	eor	w8, w8, w10
    1334:	eor	w9, w9, w11
    1338:	orr	w8, w8, w9
    133c:	cbz	w8, 13a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc44>
    1340:	ldr	w8, [x23]
    1344:	ldrb	w9, [x23, #4]
    1348:	mov	w10, #0x7363                	// #29539
    134c:	movk	w10, #0x656e, lsl #16
    1350:	mov	w11, #0x67                  	// #103
    1354:	eor	w8, w8, w10
    1358:	eor	w9, w9, w11
    135c:	orr	w8, w8, w9
    1360:	cmp	w8, #0x0
    1364:	cset	w26, ne  // ne = any
    1368:	b	13a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc48>
    136c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1370:	add	x1, x1, #0x0
    1374:	mov	x0, x23
    1378:	mov	x2, x24
    137c:	bl	0 <bcmp>
    1380:	cmp	w0, #0x0
    1384:	str	wzr, [sp, #16]
    1388:	mov	w19, wzr
    138c:	cset	w26, ne  // ne = any
    1390:	b	142c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xccc>
    1394:	str	wzr, [sp, #16]
    1398:	mov	w19, wzr
    139c:	mov	w26, #0x1                   	// #1
    13a0:	b	142c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xccc>
    13a4:	mov	w26, wzr
    13a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    13ac:	add	x1, x1, #0x0
    13b0:	mov	x0, x23
    13b4:	mov	x2, x24
    13b8:	bl	0 <bcmp>
    13bc:	cmp	w0, #0x0
    13c0:	cset	w8, eq  // eq = none
    13c4:	mov	w19, wzr
    13c8:	str	w8, [sp, #16]
    13cc:	b	142c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xccc>
    13d0:	mov	w26, wzr
    13d4:	ldr	w8, [x23]
    13d8:	mov	w9, #0x7363                	// #29539
    13dc:	movk	w9, #0x7465, lsl #16
    13e0:	mov	w10, #0x6963                	// #26979
    13e4:	movk	w10, #0x636e, lsl #16
    13e8:	cmp	w8, w9
    13ec:	cset	w9, eq  // eq = none
    13f0:	cmp	w8, w10
    13f4:	str	w9, [sp, #16]
    13f8:	b.eq	1428 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcc8>  // b.none
    13fc:	ldr	w8, [x23]
    1400:	mov	w9, #0x6963                	// #26979
    1404:	movk	w9, #0x766e, lsl #16
    1408:	cmp	w8, w9
    140c:	b.eq	1428 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcc8>  // b.none
    1410:	ldr	w8, [x23]
    1414:	mov	w9, #0x6e63                	// #28259
    1418:	movk	w9, #0x6765, lsl #16
    141c:	cmp	w8, w9
    1420:	cset	w19, eq  // eq = none
    1424:	b	142c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xccc>
    1428:	mov	w19, #0x1                   	// #1
    142c:	ldr	x0, [x20]
    1430:	ldr	x8, [x0]
    1434:	ldr	x8, [x8, #40]
    1438:	blr	x8
    143c:	ldr	w8, [x0, #16]
    1440:	cbz	w8, 2650 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ef0>
    1444:	ldr	x8, [x0, #8]
    1448:	ldr	w8, [x8]
    144c:	cmp	w8, #0x9
    1450:	b.ne	14a0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd40>  // b.any
    1454:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1458:	add	x8, x8, #0x0
    145c:	mov	w9, #0x103                 	// #259
    1460:	stp	x8, xzr, [x29, #-64]
    1464:	sturh	w9, [x29, #-48]
    1468:	ldr	x0, [x20]
    146c:	sub	x2, x29, #0x40
    1470:	mov	w1, #0x9                   	// #9
    1474:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    1478:	mov	w19, w0
    147c:	and	w0, w19, #0x1
    1480:	ldp	x20, x19, [sp, #448]
    1484:	ldp	x22, x21, [sp, #432]
    1488:	ldp	x24, x23, [sp, #416]
    148c:	ldp	x26, x25, [sp, #400]
    1490:	ldp	x28, x27, [sp, #384]
    1494:	ldp	x29, x30, [sp, #368]
    1498:	add	sp, sp, #0x1d0
    149c:	ret
    14a0:	ldr	w8, [sp, #16]
    14a4:	eor	w21, w19, #0x1
    14a8:	orr	w22, w8, w19
    14ac:	mov	w8, #0x3                   	// #3
    14b0:	b	14e0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd80>
    14b4:	ldr	x10, [x0]
    14b8:	cmp	w8, w9
    14bc:	str	x23, [x10, w8, uxtw #3]
    14c0:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
    14c4:	add	w8, w8, #0x1
    14c8:	str	w8, [x0, #8]
    14cc:	ldr	x0, [x20]
    14d0:	mov	w1, #0x19                  	// #25
    14d4:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    14d8:	mov	w8, w19
    14dc:	tbz	w0, #0, 1454 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf4>
    14e0:	cmp	w8, #0x0
    14e4:	cset	w10, eq  // eq = none
    14e8:	subs	w19, w8, #0x1
    14ec:	cset	w9, ne  // ne = any
    14f0:	bic	w10, w10, w26
    14f4:	mov	w2, #0x1                   	// #1
    14f8:	tbnz	w10, #0, 1514 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xdb4>
    14fc:	orr	w9, w9, w21
    1500:	cbz	w9, 1514 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xdb4>
    1504:	ldr	w9, [sp, #16]
    1508:	cmp	w8, #0x2
    150c:	cset	w8, eq  // eq = none
    1510:	and	w2, w9, w8
    1514:	ldr	x1, [sp, #24]
    1518:	mov	x0, x28
    151c:	mov	w3, w22
    1520:	bl	8c28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    1524:	tbnz	w0, #0, 22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>
    1528:	mov	x0, x27
    152c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    1530:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    1534:	ldr	x8, [x20]
    1538:	mov	x24, x0
    153c:	mov	w1, #0x14                  	// #20
    1540:	mov	x0, x8
    1544:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    1548:	tbz	w0, #0, 15d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe74>
    154c:	ldr	x0, [x20]
    1550:	ldr	x8, [x0]
    1554:	ldr	x8, [x8, #48]
    1558:	blr	x8
    155c:	mov	x25, x0
    1560:	mov	w0, #0x70                  	// #112
    1564:	bl	0 <_Znwm>
    1568:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    156c:	mov	x8, x0
    1570:	add	x9, x9, #0x0
    1574:	strb	wzr, [x8, #32]!
    1578:	str	x9, [x0]
    157c:	mov	w9, #0x6                   	// #6
    1580:	str	w9, [x0, #48]
    1584:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1588:	add	x9, x9, #0x0
    158c:	stp	x24, x9, [x0, #64]
    1590:	mov	w9, #0x1                   	// #1
    1594:	mov	x23, x0
    1598:	str	x25, [x0, #104]
    159c:	str	w9, [x0, #80]
    15a0:	strb	wzr, [x0, #84]
    15a4:	str	x24, [x0, #56]
    15a8:	stp	x8, xzr, [x0, #16]
    15ac:	ldr	x0, [sp, #24]
    15b0:	ldp	w8, w9, [x0, #8]
    15b4:	cmp	w8, w9
    15b8:	b.cs	167c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf1c>  // b.hs, b.nlast
    15bc:	ldr	x10, [x0]
    15c0:	cmp	w8, w9
    15c4:	str	x23, [x10, w8, uxtw #3]
    15c8:	b.cs	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb0>  // b.hs, b.nlast
    15cc:	add	w8, w8, #0x1
    15d0:	str	w8, [x0, #8]
    15d4:	mov	x0, x27
    15d8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    15dc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    15e0:	ldr	x8, [x20]
    15e4:	mov	x24, x0
    15e8:	mov	w1, #0x22                  	// #34
    15ec:	mov	x0, x8
    15f0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    15f4:	tbz	w0, #0, 14cc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd6c>
    15f8:	ldr	x0, [x20]
    15fc:	ldr	x8, [x0]
    1600:	ldr	x8, [x8, #48]
    1604:	blr	x8
    1608:	mov	x25, x0
    160c:	mov	w0, #0x70                  	// #112
    1610:	bl	0 <_Znwm>
    1614:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1618:	mov	x8, x0
    161c:	add	x9, x9, #0x0
    1620:	strb	wzr, [x8, #32]!
    1624:	str	x9, [x0]
    1628:	mov	w9, #0x6                   	// #6
    162c:	str	w9, [x0, #48]
    1630:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1634:	add	x9, x9, #0x0
    1638:	stp	x24, x9, [x0, #64]
    163c:	mov	w9, #0x1                   	// #1
    1640:	mov	x23, x0
    1644:	str	x25, [x0, #104]
    1648:	str	w9, [x0, #80]
    164c:	strb	wzr, [x0, #84]
    1650:	str	x24, [x0, #56]
    1654:	stp	x8, xzr, [x0, #16]
    1658:	ldr	x0, [sp, #24]
    165c:	ldp	w8, w9, [x0, #8]
    1660:	cmp	w8, w9
    1664:	b.cc	14b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd54>  // b.lo, b.ul, b.last
    1668:	mov	x1, xzr
    166c:	bl	0 <LLVMInitializeAArch64AsmParser>
    1670:	ldr	x0, [sp, #24]
    1674:	ldp	w8, w9, [x0, #8]
    1678:	b	14b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd54>
    167c:	mov	x1, xzr
    1680:	bl	0 <LLVMInitializeAArch64AsmParser>
    1684:	ldr	x0, [sp, #24]
    1688:	ldp	w8, w9, [x0, #8]
    168c:	b	15bc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe5c>
    1690:	ldrh	w9, [x8]
    1694:	ldrb	w10, [x8, #2]
    1698:	mov	w11, #0x6663                	// #26211
    169c:	eor	w9, w9, w11
    16a0:	eor	w10, w10, #0x70
    16a4:	orr	w9, w9, w10
    16a8:	tst	w9, #0xffff
    16ac:	b.eq	16f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf90>  // b.none
    16b0:	ldrh	w9, [x8]
    16b4:	ldrb	w10, [x8, #2]
    16b8:	mov	w11, #0x7664                	// #30308
    16bc:	eor	w9, w9, w11
    16c0:	eor	w10, w10, #0x70
    16c4:	orr	w9, w9, w10
    16c8:	tst	w9, #0xffff
    16cc:	b.eq	16f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf90>  // b.none
    16d0:	ldrh	w9, [x8]
    16d4:	ldrb	w8, [x8, #2]
    16d8:	mov	w10, #0x7063                	// #28771
    16dc:	eor	w9, w9, w10
    16e0:	eor	w8, w8, #0x70
    16e4:	orr	w8, w9, w8
    16e8:	tst	w8, #0xffff
    16ec:	b.ne	20b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1958>  // b.any
    16f0:	mov	x0, x26
    16f4:	mov	x1, x25
    16f8:	bl	0 <_ZN4llvm12AArch64PRCTX17lookupPRCTXByNameENS_9StringRefE>
    16fc:	cbz	x0, 19f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1290>
    1700:	mov	x25, x0
    1704:	mov	x0, x28
    1708:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    170c:	ldr	q0, [x25, #16]
    1710:	ldp	x8, x9, [x0, #184]
    1714:	ldr	x10, [x0, #200]
    1718:	ldr	x11, [x25, #32]
    171c:	stur	q0, [x29, #-64]
    1720:	ldp	x12, x13, [x29, #-64]
    1724:	and	x10, x11, x10
    1728:	and	x8, x12, x8
    172c:	and	x9, x13, x9
    1730:	stur	x8, [x29, #-64]
    1734:	stp	x9, x10, [x29, #-56]
    1738:	ldp	x11, x12, [x25, #16]
    173c:	ldr	x13, [x25, #32]
    1740:	eor	x8, x8, x11
    1744:	eor	x9, x9, x12
    1748:	eor	x10, x10, x13
    174c:	orr	x8, x8, x9
    1750:	orr	x8, x8, x10
    1754:	cbz	x8, 1ac4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1364>
    1758:	sub	x8, x29, #0x80
    175c:	mov	x0, x21
    1760:	mov	x23, x20
    1764:	bl	0 <_ZNK4llvm9StringRef5upperB5cxx11Ev>
    1768:	ldr	x19, [x25]
    176c:	add	x8, sp, #0x50
    1770:	add	x21, x8, #0x10
    1774:	str	x21, [sp, #80]
    1778:	cbz	x19, 2670 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f10>
    177c:	mov	x0, x19
    1780:	bl	0 <strlen>
    1784:	mov	x20, x0
    1788:	cmp	x0, #0xf
    178c:	stur	x0, [x29, #-64]
    1790:	b.ls	1b40 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e0>  // b.plast
    1794:	add	x0, sp, #0x50
    1798:	sub	x1, x29, #0x40
    179c:	mov	x2, xzr
    17a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    17a4:	ldur	x8, [x29, #-64]
    17a8:	str	x0, [sp, #80]
    17ac:	str	x8, [sp, #96]
    17b0:	b	1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13e4>
    17b4:	ldr	w8, [x8]
    17b8:	mov	w9, #0x6c74                	// #27764
    17bc:	movk	w9, #0x6962, lsl #16
    17c0:	cmp	w8, w9
    17c4:	b.ne	20b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1958>  // b.any
    17c8:	mov	x0, x26
    17cc:	mov	x1, x25
    17d0:	bl	0 <_ZN4llvm11AArch64TLBI16lookupTLBIByNameENS_9StringRefE>
    17d4:	cbz	x0, 1bac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x144c>
    17d8:	mov	x25, x0
    17dc:	mov	x0, x28
    17e0:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    17e4:	ldr	q0, [x25, #16]
    17e8:	ldp	x8, x9, [x0, #184]
    17ec:	ldr	x10, [x0, #200]
    17f0:	ldr	x11, [x25, #32]
    17f4:	stur	q0, [x29, #-64]
    17f8:	ldp	x12, x13, [x29, #-64]
    17fc:	and	x10, x11, x10
    1800:	and	x8, x12, x8
    1804:	and	x9, x13, x9
    1808:	stur	x8, [x29, #-64]
    180c:	stp	x9, x10, [x29, #-56]
    1810:	ldp	x11, x12, [x25, #16]
    1814:	ldr	x13, [x25, #32]
    1818:	eor	x8, x8, x11
    181c:	eor	x9, x9, x12
    1820:	eor	x10, x10, x13
    1824:	orr	x8, x8, x9
    1828:	orr	x8, x8, x10
    182c:	cbz	x8, 1ab4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1354>
    1830:	ldr	x19, [x25]
    1834:	sub	x8, x29, #0x80
    1838:	add	x21, x8, #0x10
    183c:	stur	x21, [x29, #-128]
    1840:	cbz	x19, 2670 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f10>
    1844:	mov	x0, x19
    1848:	mov	x22, x20
    184c:	bl	0 <strlen>
    1850:	mov	x20, x0
    1854:	cmp	x0, #0xf
    1858:	stur	x0, [x29, #-64]
    185c:	b.ls	1ddc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x167c>  // b.plast
    1860:	sub	x0, x29, #0x80
    1864:	sub	x1, x29, #0x40
    1868:	mov	x2, xzr
    186c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1870:	ldur	x8, [x29, #-64]
    1874:	stur	x0, [x29, #-128]
    1878:	stur	x8, [x29, #-112]
    187c:	b	1de0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1680>
    1880:	str	x19, [sp, #8]
    1884:	mov	w19, wzr
    1888:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    188c:	add	x8, x8, #0x0
    1890:	mov	w9, #0x103                 	// #259
    1894:	stp	x8, xzr, [x29, #-64]
    1898:	sturh	w9, [x29, #-48]
    189c:	ldr	x0, [x22]
    18a0:	sub	x2, x29, #0x40
    18a4:	mov	w1, #0x9                   	// #9
    18a8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    18ac:	tbnz	w0, #0, 22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>
    18b0:	ldp	x24, x23, [x29, #-128]
    18b4:	ldr	w25, [sp, #80]
    18b8:	add	x20, x28, #0xc0
    18bc:	mov	x0, x20
    18c0:	mov	x1, x24
    18c4:	mov	x2, x23
    18c8:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    18cc:	ldr	x8, [x28, #192]
    18d0:	mov	w21, w0
    18d4:	add	x27, x8, w0, uxtw #3
    18d8:	ldr	x8, [x27]
    18dc:	cmn	x8, #0x8
    18e0:	b.eq	1b5c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x13fc>  // b.none
    18e4:	cbz	x8, 1b68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1408>
    18e8:	b	18f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1190>
    18ec:	ldr	x8, [x27, #8]!
    18f0:	cbz	x8, 18ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x118c>
    18f4:	cmn	x8, #0x8
    18f8:	b.eq	18ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x118c>  // b.none
    18fc:	b	2264 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b04>
    1900:	mov	x0, x26
    1904:	mov	x1, x25
    1908:	bl	0 <_ZN4llvm9AArch64IC14lookupICByNameENS_9StringRefE>
    190c:	cbz	x0, 1bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1458>
    1910:	mov	x25, x0
    1914:	mov	x0, x28
    1918:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    191c:	ldr	q0, [x25, #16]
    1920:	ldp	x8, x9, [x0, #184]
    1924:	ldr	x10, [x0, #200]
    1928:	ldr	x11, [x25, #32]
    192c:	stur	q0, [x29, #-64]
    1930:	ldp	x12, x13, [x29, #-64]
    1934:	and	x10, x11, x10
    1938:	and	x8, x12, x8
    193c:	and	x9, x13, x9
    1940:	stur	x8, [x29, #-64]
    1944:	stp	x9, x10, [x29, #-56]
    1948:	ldp	x11, x12, [x25, #16]
    194c:	ldr	x13, [x25, #32]
    1950:	eor	x8, x8, x11
    1954:	eor	x9, x9, x12
    1958:	eor	x10, x10, x13
    195c:	orr	x8, x8, x9
    1960:	orr	x8, x8, x10
    1964:	cbz	x8, 1ab4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1354>
    1968:	ldr	x19, [x25]
    196c:	sub	x8, x29, #0x80
    1970:	add	x21, x8, #0x10
    1974:	stur	x21, [x29, #-128]
    1978:	cbz	x19, 2670 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f10>
    197c:	mov	x0, x19
    1980:	mov	x22, x20
    1984:	bl	0 <strlen>
    1988:	mov	x20, x0
    198c:	cmp	x0, #0xf
    1990:	stur	x0, [x29, #-64]
    1994:	b.ls	1df8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1698>  // b.plast
    1998:	sub	x0, x29, #0x80
    199c:	sub	x1, x29, #0x40
    19a0:	mov	x2, xzr
    19a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    19a8:	ldur	x8, [x29, #-64]
    19ac:	stur	x0, [x29, #-128]
    19b0:	stur	x8, [x29, #-112]
    19b4:	b	1dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x169c>
    19b8:	add	x1, sp, #0x50
    19bc:	sub	x2, x29, #0x60
    19c0:	mov	w3, #0x2                   	// #2
    19c4:	mov	x0, x28
    19c8:	stp	xzr, xzr, [x29, #-96]
    19cc:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    19d0:	cmp	w0, #0x2
    19d4:	b.eq	22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>  // b.none
    19d8:	cbnz	w0, 1bd0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1470>
    19dc:	ldur	x8, [x29, #-88]
    19e0:	cbz	x8, 2094 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1934>
    19e4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    19e8:	add	x8, x8, #0x0
    19ec:	b	21a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a48>
    19f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    19f4:	add	x8, x8, #0x0
    19f8:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    19fc:	mov	x0, x26
    1a00:	mov	x1, x25
    1a04:	bl	0 <_ZN4llvm9AArch64DC14lookupDCByNameENS_9StringRefE>
    1a08:	cbz	x0, 1c74 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1514>
    1a0c:	mov	x25, x0
    1a10:	mov	x0, x28
    1a14:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    1a18:	ldr	q0, [x25, #16]
    1a1c:	ldp	x8, x9, [x0, #184]
    1a20:	ldr	x10, [x0, #200]
    1a24:	ldr	x11, [x25, #32]
    1a28:	stur	q0, [x29, #-64]
    1a2c:	ldp	x12, x13, [x29, #-64]
    1a30:	and	x10, x11, x10
    1a34:	and	x8, x12, x8
    1a38:	and	x9, x13, x9
    1a3c:	stur	x8, [x29, #-64]
    1a40:	stp	x9, x10, [x29, #-56]
    1a44:	ldp	x11, x12, [x25, #16]
    1a48:	ldr	x13, [x25, #32]
    1a4c:	eor	x8, x8, x11
    1a50:	eor	x9, x9, x12
    1a54:	eor	x10, x10, x13
    1a58:	orr	x8, x8, x9
    1a5c:	orr	x8, x8, x10
    1a60:	cbz	x8, 1ab4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1354>
    1a64:	ldr	x19, [x25]
    1a68:	sub	x8, x29, #0x80
    1a6c:	add	x21, x8, #0x10
    1a70:	stur	x21, [x29, #-128]
    1a74:	cbz	x19, 2670 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f10>
    1a78:	mov	x0, x19
    1a7c:	mov	x22, x20
    1a80:	bl	0 <strlen>
    1a84:	mov	x20, x0
    1a88:	cmp	x0, #0xf
    1a8c:	stur	x0, [x29, #-64]
    1a90:	b.ls	2078 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1918>  // b.plast
    1a94:	sub	x0, x29, #0x80
    1a98:	sub	x1, x29, #0x40
    1a9c:	mov	x2, xzr
    1aa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1aa4:	ldur	x8, [x29, #-64]
    1aa8:	stur	x0, [x29, #-128]
    1aac:	stur	x8, [x29, #-112]
    1ab0:	b	207c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x191c>
    1ab4:	ldrh	w1, [x25, #8]
    1ab8:	ldr	x2, [sp, #24]
    1abc:	mov	x0, x28
    1ac0:	b	20b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1950>
    1ac4:	ldr	x8, [x28, #184]
    1ac8:	ldr	x2, [sp, #24]
    1acc:	cmp	x8, #0x3
    1ad0:	b.ne	26a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f48>  // b.any
    1ad4:	ldr	x8, [x21]
    1ad8:	mov	w11, #0x6663                	// #26211
    1adc:	ldrh	w9, [x8]
    1ae0:	ldrb	w10, [x8, #2]
    1ae4:	eor	w9, w9, w11
    1ae8:	eor	w10, w10, #0x70
    1aec:	orr	w9, w9, w10
    1af0:	tst	w9, #0xffff
    1af4:	b.eq	1e14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16b4>  // b.none
    1af8:	ldrh	w9, [x8]
    1afc:	ldrb	w10, [x8, #2]
    1b00:	mov	w11, #0x7664                	// #30308
    1b04:	eor	w9, w9, w11
    1b08:	eor	w10, w10, #0x70
    1b0c:	orr	w9, w9, w10
    1b10:	tst	w9, #0xffff
    1b14:	b.eq	20a0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1940>  // b.none
    1b18:	ldrh	w9, [x8]
    1b1c:	ldrb	w8, [x8, #2]
    1b20:	mov	w10, #0x7063                	// #28771
    1b24:	eor	w9, w9, w10
    1b28:	eor	w8, w8, #0x70
    1b2c:	orr	w8, w9, w8
    1b30:	tst	w8, #0xffff
    1b34:	b.ne	26a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f48>  // b.any
    1b38:	mov	w1, #0x7                   	// #7
    1b3c:	b	20a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1944>
    1b40:	mov	x0, x21
    1b44:	cbz	x20, 1c14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14b4>
    1b48:	cmp	x20, #0x1
    1b4c:	b.ne	1c08 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14a8>  // b.any
    1b50:	ldrb	w8, [x19]
    1b54:	strb	w8, [x0]
    1b58:	b	1c14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14b4>
    1b5c:	ldr	w8, [x28, #208]
    1b60:	sub	w8, w8, #0x1
    1b64:	str	w8, [x28, #208]
    1b68:	add	x26, x23, #0x11
    1b6c:	stp	x28, x25, [sp, #16]
    1b70:	mov	x28, x19
    1b74:	mov	x0, x26
    1b78:	bfi	x28, x25, #32, #32
    1b7c:	bl	0 <malloc>
    1b80:	mov	x25, x0
    1b84:	cbnz	x0, 1b9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x143c>
    1b88:	cbz	x26, 21d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a74>
    1b8c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    1b90:	add	x0, x0, #0x0
    1b94:	mov	w1, #0x1                   	// #1
    1b98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1b9c:	add	x26, x25, #0x10
    1ba0:	stp	x23, x28, [x25]
    1ba4:	cbnz	x23, 21fc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a9c>
    1ba8:	b	220c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1aac>
    1bac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1bb0:	add	x8, x8, #0x0
    1bb4:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    1bb8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1bbc:	add	x8, x8, #0x0
    1bc0:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    1bc4:	str	x19, [sp, #8]
    1bc8:	mov	w19, #0x1                   	// #1
    1bcc:	b	1888 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1128>
    1bd0:	add	x1, sp, #0x50
    1bd4:	sub	x2, x29, #0x60
    1bd8:	mov	w3, #0x3                   	// #3
    1bdc:	mov	x0, x28
    1be0:	stp	xzr, xzr, [x29, #-96]
    1be4:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    1be8:	cmp	w0, #0x2
    1bec:	b.eq	22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>  // b.none
    1bf0:	cbnz	w0, 21a0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a40>
    1bf4:	ldur	x8, [x29, #-88]
    1bf8:	cbz	x8, 25a0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e40>
    1bfc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1c00:	add	x8, x8, #0x0
    1c04:	b	21a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a48>
    1c08:	mov	x1, x19
    1c0c:	mov	x2, x20
    1c10:	bl	0 <memcpy>
    1c14:	ldur	x8, [x29, #-64]
    1c18:	ldr	x9, [sp, #80]
    1c1c:	sub	x10, x29, #0x80
    1c20:	add	x19, x10, #0x10
    1c24:	str	x8, [sp, #88]
    1c28:	strb	wzr, [x9, x8]
    1c2c:	ldp	x3, x4, [x29, #-128]
    1c30:	ldur	x8, [x29, #-112]
    1c34:	ldp	x1, x2, [sp, #80]
    1c38:	mov	w11, #0xf                   	// #15
    1c3c:	cmp	x3, x19
    1c40:	csel	x9, x11, x8, eq  // eq = none
    1c44:	add	x8, x2, x4
    1c48:	cmp	x8, x9
    1c4c:	b.ls	1c68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1508>  // b.plast
    1c50:	ldr	x9, [sp, #96]
    1c54:	cmp	x1, x21
    1c58:	mov	w10, #0xf                   	// #15
    1c5c:	csel	x9, x10, x9, eq  // eq = none
    1c60:	cmp	x8, x9
    1c64:	b.ls	1c80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1520>  // b.plast
    1c68:	sub	x0, x29, #0x80
    1c6c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1c70:	b	1c90 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1530>
    1c74:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1c78:	add	x8, x8, #0x0
    1c7c:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    1c80:	add	x0, sp, #0x50
    1c84:	mov	x1, xzr
    1c88:	mov	x2, xzr
    1c8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1c90:	sub	x8, x29, #0x60
    1c94:	add	x22, x8, #0x10
    1c98:	stur	x22, [x29, #-96]
    1c9c:	mov	x8, x0
    1ca0:	ldr	x9, [x8], #16
    1ca4:	cmp	x9, x8
    1ca8:	b.eq	1cbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x155c>  // b.none
    1cac:	stur	x9, [x29, #-96]
    1cb0:	ldr	x9, [x0, #16]
    1cb4:	stur	x9, [x29, #-80]
    1cb8:	b	1cc4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1564>
    1cbc:	ldr	q0, [x9]
    1cc0:	str	q0, [x22]
    1cc4:	ldr	x9, [x0, #8]
    1cc8:	stur	x9, [x29, #-88]
    1ccc:	stp	x8, xzr, [x0]
    1cd0:	strb	wzr, [x0, #16]
    1cd4:	ldur	x8, [x29, #-88]
    1cd8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1cdc:	sub	x8, x9, x8
    1ce0:	cmp	x8, #0x9
    1ce4:	b.ls	267c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f1c>  // b.plast
    1ce8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1cec:	add	x1, x1, #0x0
    1cf0:	sub	x0, x29, #0x60
    1cf4:	mov	w2, #0xa                   	// #10
    1cf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1cfc:	sub	x8, x29, #0x40
    1d00:	add	x20, x8, #0x10
    1d04:	stur	x20, [x29, #-64]
    1d08:	mov	x8, x0
    1d0c:	ldr	x9, [x8], #16
    1d10:	cmp	x9, x8
    1d14:	b.eq	1d28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15c8>  // b.none
    1d18:	stur	x9, [x29, #-64]
    1d1c:	ldr	x9, [x0, #16]
    1d20:	stur	x9, [x29, #-48]
    1d24:	b	1d30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15d0>
    1d28:	ldr	q0, [x9]
    1d2c:	str	q0, [x20]
    1d30:	ldr	x9, [x0, #8]
    1d34:	stur	x9, [x29, #-56]
    1d38:	stp	x8, xzr, [x0]
    1d3c:	strb	wzr, [x0, #16]
    1d40:	ldur	x0, [x29, #-96]
    1d44:	cmp	x0, x22
    1d48:	b.eq	1d50 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15f0>  // b.none
    1d4c:	bl	0 <_ZdlPv>
    1d50:	ldr	x0, [sp, #80]
    1d54:	cmp	x0, x21
    1d58:	b.eq	1d60 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1600>  // b.none
    1d5c:	bl	0 <_ZdlPv>
    1d60:	ldur	x0, [x29, #-128]
    1d64:	cmp	x0, x19
    1d68:	add	x19, x25, #0x10
    1d6c:	b.eq	1d74 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1614>  // b.none
    1d70:	bl	0 <_ZdlPv>
    1d74:	ldr	x8, [x19, #16]
    1d78:	ldr	q0, [x19]
    1d7c:	add	x0, sp, #0x30
    1d80:	sub	x1, x29, #0x40
    1d84:	str	x8, [sp, #64]
    1d88:	str	q0, [sp, #48]
    1d8c:	bl	aa4c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    1d90:	ldur	x8, [x29, #-64]
    1d94:	mov	w9, #0x101                 	// #257
    1d98:	stp	xzr, xzr, [x29, #-96]
    1d9c:	sturh	w9, [x29, #-80]
    1da0:	ldrb	w9, [x8]
    1da4:	cbz	w9, 1db4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1654>
    1da8:	stur	x8, [x29, #-96]
    1dac:	mov	w8, #0x3                   	// #3
    1db0:	b	1db8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1658>
    1db4:	mov	w8, #0x1                   	// #1
    1db8:	sturb	w8, [x29, #-80]
    1dbc:	ldr	x0, [x23]
    1dc0:	sub	x1, x29, #0x60
    1dc4:	mov	x2, xzr
    1dc8:	mov	x3, xzr
    1dcc:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    1dd0:	ldur	x8, [x29, #-64]
    1dd4:	cmp	x8, x20
    1dd8:	b	258c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e2c>
    1ddc:	mov	x0, x21
    1de0:	cbz	x20, 1e34 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16d4>
    1de4:	cmp	x20, #0x1
    1de8:	b.ne	1e28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16c8>  // b.any
    1dec:	ldrb	w8, [x19]
    1df0:	strb	w8, [x0]
    1df4:	b	1e34 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16d4>
    1df8:	mov	x0, x21
    1dfc:	cbz	x20, 1f5c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17fc>
    1e00:	cmp	x20, #0x1
    1e04:	b.ne	1f50 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17f0>  // b.any
    1e08:	ldrb	w8, [x19]
    1e0c:	strb	w8, [x0]
    1e10:	b	1f5c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17fc>
    1e14:	mov	w1, #0x4                   	// #4
    1e18:	b	20a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1944>
    1e1c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1e20:	add	x8, x8, #0x0
    1e24:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    1e28:	mov	x1, x19
    1e2c:	mov	x2, x20
    1e30:	bl	0 <memcpy>
    1e34:	ldur	x8, [x29, #-64]
    1e38:	ldur	x9, [x29, #-128]
    1e3c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1e40:	add	x3, x3, #0x0
    1e44:	sub	x0, x29, #0x80
    1e48:	mov	w4, #0x5                   	// #5
    1e4c:	mov	x1, xzr
    1e50:	mov	x2, xzr
    1e54:	stur	x8, [x29, #-120]
    1e58:	strb	wzr, [x9, x8]
    1e5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1e60:	sub	x8, x29, #0x60
    1e64:	add	x20, x8, #0x10
    1e68:	stur	x20, [x29, #-96]
    1e6c:	mov	x8, x0
    1e70:	ldr	x9, [x8], #16
    1e74:	cmp	x9, x8
    1e78:	b.eq	1e8c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x172c>  // b.none
    1e7c:	stur	x9, [x29, #-96]
    1e80:	ldr	x9, [x0, #16]
    1e84:	stur	x9, [x29, #-80]
    1e88:	b	1e94 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1734>
    1e8c:	ldr	q0, [x9]
    1e90:	str	q0, [x20]
    1e94:	ldr	x9, [x0, #8]
    1e98:	stur	x9, [x29, #-88]
    1e9c:	stp	x8, xzr, [x0]
    1ea0:	strb	wzr, [x0, #16]
    1ea4:	ldur	x8, [x29, #-88]
    1ea8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1eac:	sub	x8, x9, x8
    1eb0:	cmp	x8, #0x9
    1eb4:	b.ls	267c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f1c>  // b.plast
    1eb8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1ebc:	add	x1, x1, #0x0
    1ec0:	sub	x0, x29, #0x60
    1ec4:	mov	w2, #0xa                   	// #10
    1ec8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1ecc:	sub	x8, x29, #0x40
    1ed0:	add	x19, x8, #0x10
    1ed4:	stur	x19, [x29, #-64]
    1ed8:	mov	x8, x0
    1edc:	ldr	x9, [x8], #16
    1ee0:	cmp	x9, x8
    1ee4:	b.eq	1ef8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1798>  // b.none
    1ee8:	stur	x9, [x29, #-64]
    1eec:	ldr	x9, [x0, #16]
    1ef0:	stur	x9, [x29, #-48]
    1ef4:	b	1f00 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17a0>
    1ef8:	ldr	q0, [x9]
    1efc:	str	q0, [x19]
    1f00:	ldr	x9, [x0, #8]
    1f04:	stur	x9, [x29, #-56]
    1f08:	stp	x8, xzr, [x0]
    1f0c:	strb	wzr, [x0, #16]
    1f10:	ldur	x0, [x29, #-96]
    1f14:	cmp	x0, x20
    1f18:	b.eq	1f20 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17c0>  // b.none
    1f1c:	bl	0 <_ZdlPv>
    1f20:	ldur	x0, [x29, #-128]
    1f24:	add	x20, x25, #0x10
    1f28:	cmp	x0, x21
    1f2c:	b.eq	1f34 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17d4>  // b.none
    1f30:	bl	0 <_ZdlPv>
    1f34:	ldr	x8, [x20, #16]
    1f38:	ldr	q0, [x20]
    1f3c:	add	x0, sp, #0x70
    1f40:	sub	x1, x29, #0x40
    1f44:	str	x8, [sp, #128]
    1f48:	str	q0, [sp, #112]
    1f4c:	b	2540 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1de0>
    1f50:	mov	x1, x19
    1f54:	mov	x2, x20
    1f58:	bl	0 <memcpy>
    1f5c:	ldur	x8, [x29, #-64]
    1f60:	ldur	x9, [x29, #-128]
    1f64:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1f68:	add	x3, x3, #0x0
    1f6c:	sub	x0, x29, #0x80
    1f70:	mov	w4, #0x3                   	// #3
    1f74:	mov	x1, xzr
    1f78:	mov	x2, xzr
    1f7c:	stur	x8, [x29, #-120]
    1f80:	strb	wzr, [x9, x8]
    1f84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1f88:	sub	x8, x29, #0x60
    1f8c:	add	x20, x8, #0x10
    1f90:	stur	x20, [x29, #-96]
    1f94:	mov	x8, x0
    1f98:	ldr	x9, [x8], #16
    1f9c:	cmp	x9, x8
    1fa0:	b.eq	1fb4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1854>  // b.none
    1fa4:	stur	x9, [x29, #-96]
    1fa8:	ldr	x9, [x0, #16]
    1fac:	stur	x9, [x29, #-80]
    1fb0:	b	1fbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x185c>
    1fb4:	ldr	q0, [x9]
    1fb8:	str	q0, [x20]
    1fbc:	ldr	x9, [x0, #8]
    1fc0:	stur	x9, [x29, #-88]
    1fc4:	stp	x8, xzr, [x0]
    1fc8:	strb	wzr, [x0, #16]
    1fcc:	ldur	x8, [x29, #-88]
    1fd0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1fd4:	sub	x8, x9, x8
    1fd8:	cmp	x8, #0x9
    1fdc:	b.ls	267c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f1c>  // b.plast
    1fe0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1fe4:	add	x1, x1, #0x0
    1fe8:	sub	x0, x29, #0x60
    1fec:	mov	w2, #0xa                   	// #10
    1ff0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1ff4:	sub	x8, x29, #0x40
    1ff8:	add	x19, x8, #0x10
    1ffc:	stur	x19, [x29, #-64]
    2000:	mov	x8, x0
    2004:	ldr	x9, [x8], #16
    2008:	cmp	x9, x8
    200c:	b.eq	2020 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18c0>  // b.none
    2010:	stur	x9, [x29, #-64]
    2014:	ldr	x9, [x0, #16]
    2018:	stur	x9, [x29, #-48]
    201c:	b	2028 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18c8>
    2020:	ldr	q0, [x9]
    2024:	str	q0, [x19]
    2028:	ldr	x9, [x0, #8]
    202c:	stur	x9, [x29, #-56]
    2030:	stp	x8, xzr, [x0]
    2034:	strb	wzr, [x0, #16]
    2038:	ldur	x0, [x29, #-96]
    203c:	cmp	x0, x20
    2040:	b.eq	2048 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18e8>  // b.none
    2044:	bl	0 <_ZdlPv>
    2048:	ldur	x0, [x29, #-128]
    204c:	add	x20, x25, #0x10
    2050:	cmp	x0, x21
    2054:	b.eq	205c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18fc>  // b.none
    2058:	bl	0 <_ZdlPv>
    205c:	ldr	x8, [x20, #16]
    2060:	ldr	q0, [x20]
    2064:	sub	x0, x29, #0xa0
    2068:	sub	x1, x29, #0x40
    206c:	stur	x8, [x29, #-144]
    2070:	stur	q0, [x29, #-160]
    2074:	b	2540 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1de0>
    2078:	mov	x0, x21
    207c:	cbz	x20, 22e4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b84>
    2080:	cmp	x20, #0x1
    2084:	b.ne	22d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b78>  // b.any
    2088:	ldrb	w8, [x19]
    208c:	strb	w8, [x0]
    2090:	b	22e4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b84>
    2094:	str	x19, [sp, #8]
    2098:	mov	w19, #0x2                   	// #2
    209c:	b	1888 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1128>
    20a0:	mov	w1, #0x5                   	// #5
    20a4:	ldrh	w8, [x25, #8]
    20a8:	mov	x0, x28
    20ac:	bfi	w1, w8, #3, #29
    20b0:	mov	x3, x24
    20b4:	bl	ad78 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>
    20b8:	ldr	x8, [x23]
    20bc:	mov	x0, x23
    20c0:	ldr	x8, [x8, #136]
    20c4:	blr	x8
    20c8:	sub	x8, x29, #0x40
    20cc:	sub	x0, x29, #0x18
    20d0:	sub	x19, x29, #0x40
    20d4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    20d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    20dc:	add	x1, x1, #0x0
    20e0:	sub	x0, x29, #0x40
    20e4:	mov	w3, #0x3                   	// #3
    20e8:	mov	x2, xzr
    20ec:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    20f0:	ldur	x8, [x29, #-64]
    20f4:	add	x9, x19, #0x10
    20f8:	mov	x23, x0
    20fc:	cmp	x8, x9
    2100:	b.eq	210c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19ac>  // b.none
    2104:	mov	x0, x8
    2108:	bl	0 <_ZdlPv>
    210c:	ldr	x0, [x20]
    2110:	mov	w1, #0x19                  	// #25
    2114:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    2118:	tbz	w0, #0, 2144 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19e4>
    211c:	ldr	w8, [x22]
    2120:	cmp	w8, #0x2
    2124:	b.ne	2138 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19d8>  // b.any
    2128:	ldr	x1, [sp, #24]
    212c:	mov	x0, x28
    2130:	bl	b084 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    2134:	tbz	w0, #0, 2168 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a08>
    2138:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    213c:	add	x8, x8, #0x0
    2140:	b	cac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x54c>
    2144:	cmn	x23, #0x1
    2148:	b.ne	1454 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf4>  // b.any
    214c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    2150:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    2154:	mov	w8, #0x503                 	// #1283
    2158:	add	x9, x9, #0x0
    215c:	sub	x10, x29, #0x60
    2160:	add	x11, x11, #0x0
    2164:	b	2188 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a28>
    2168:	cmn	x23, #0x1
    216c:	b.eq	1454 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf4>  // b.none
    2170:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    2174:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    2178:	mov	w8, #0x503                 	// #1283
    217c:	add	x9, x9, #0x0
    2180:	sub	x10, x29, #0x60
    2184:	add	x11, x11, #0x0
    2188:	mov	w12, #0x302                 	// #770
    218c:	sturh	w8, [x29, #-80]
    2190:	stp	x9, x21, [x29, #-96]
    2194:	stp	x10, x11, [x29, #-64]
    2198:	sturh	w12, [x29, #-48]
    219c:	b	cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x558>
    21a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    21a4:	add	x8, x8, #0x0
    21a8:	mov	w9, #0x103                 	// #259
    21ac:	stp	x8, xzr, [x29, #-64]
    21b0:	sturh	w9, [x29, #-48]
    21b4:	ldr	x0, [x22]
    21b8:	sub	x2, x29, #0x40
    21bc:	mov	x1, x20
    21c0:	mov	x3, xzr
    21c4:	mov	x4, xzr
    21c8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    21cc:	mov	w19, #0x1                   	// #1
    21d0:	b	147c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd1c>
    21d4:	mov	w0, #0x1                   	// #1
    21d8:	bl	0 <malloc>
    21dc:	mov	x25, x0
    21e0:	cbnz	x0, 21f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a94>
    21e4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    21e8:	add	x0, x0, #0x0
    21ec:	mov	w1, #0x1                   	// #1
    21f0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    21f4:	stp	x23, x28, [x25]
    21f8:	add	x26, x25, #0x10
    21fc:	mov	x0, x26
    2200:	mov	x1, x24
    2204:	mov	x2, x23
    2208:	bl	0 <memcpy>
    220c:	ldr	x11, [sp, #16]
    2210:	strb	wzr, [x26, x23]
    2214:	str	x25, [x27]
    2218:	ldp	w8, w9, [x11, #204]
    221c:	ldr	w10, [x11, #200]
    2220:	add	w8, w8, #0x1
    2224:	add	w9, w9, w8
    2228:	cmp	w9, w10
    222c:	str	w8, [x11, #204]
    2230:	b.hi	2688 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f28>  // b.pmore
    2234:	mov	x0, x20
    2238:	mov	w1, w21
    223c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    2240:	ldr	x8, [x20]
    2244:	ldr	x25, [sp, #24]
    2248:	add	x27, x8, w0, uxtw #3
    224c:	b	2254 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1af4>
    2250:	add	x27, x27, #0x8
    2254:	ldr	x8, [x27]
    2258:	cbz	x8, 2250 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1af0>
    225c:	cmn	x8, #0x8
    2260:	b.eq	2250 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1af0>  // b.none
    2264:	ldr	x8, [x27]
    2268:	ldr	w9, [x8, #8]
    226c:	cmp	w9, w19
    2270:	b.ne	2280 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b20>  // b.any
    2274:	ldr	w8, [x8, #12]
    2278:	cmp	w8, w25
    227c:	b.eq	22d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>  // b.none
    2280:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    2284:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    2288:	mov	w8, #0x503                 	// #1283
    228c:	add	x9, x9, #0x0
    2290:	sub	x10, x29, #0x80
    2294:	sub	x11, x29, #0x60
    2298:	add	x12, x12, #0x0
    229c:	mov	w13, #0x302                 	// #770
    22a0:	sturh	w8, [x29, #-80]
    22a4:	stp	x9, x10, [x29, #-96]
    22a8:	stp	x11, x12, [x29, #-64]
    22ac:	sturh	w13, [x29, #-48]
    22b0:	ldr	x0, [x22]
    22b4:	ldr	x1, [sp, #8]
    22b8:	sub	x2, x29, #0x40
    22bc:	mov	x3, xzr
    22c0:	ldr	x8, [x0]
    22c4:	mov	x4, xzr
    22c8:	ldr	x8, [x8, #120]
    22cc:	blr	x8
    22d0:	mov	w19, #0x1                   	// #1
    22d4:	b	147c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd1c>
    22d8:	mov	x1, x19
    22dc:	mov	x2, x20
    22e0:	bl	0 <memcpy>
    22e4:	ldur	x8, [x29, #-64]
    22e8:	ldur	x9, [x29, #-128]
    22ec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    22f0:	add	x3, x3, #0x0
    22f4:	sub	x0, x29, #0x80
    22f8:	mov	w4, #0x3                   	// #3
    22fc:	mov	x1, xzr
    2300:	mov	x2, xzr
    2304:	stur	x8, [x29, #-120]
    2308:	strb	wzr, [x9, x8]
    230c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2310:	sub	x8, x29, #0x60
    2314:	add	x20, x8, #0x10
    2318:	stur	x20, [x29, #-96]
    231c:	mov	x8, x0
    2320:	ldr	x9, [x8], #16
    2324:	cmp	x9, x8
    2328:	b.eq	233c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1bdc>  // b.none
    232c:	stur	x9, [x29, #-96]
    2330:	ldr	x9, [x0, #16]
    2334:	stur	x9, [x29, #-80]
    2338:	b	2344 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1be4>
    233c:	ldr	q0, [x9]
    2340:	str	q0, [x20]
    2344:	ldr	x9, [x0, #8]
    2348:	stur	x9, [x29, #-88]
    234c:	stp	x8, xzr, [x0]
    2350:	strb	wzr, [x0, #16]
    2354:	ldur	x8, [x29, #-88]
    2358:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    235c:	sub	x8, x9, x8
    2360:	cmp	x8, #0x9
    2364:	b.ls	267c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f1c>  // b.plast
    2368:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    236c:	add	x1, x1, #0x0
    2370:	sub	x0, x29, #0x60
    2374:	mov	w2, #0xa                   	// #10
    2378:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    237c:	sub	x8, x29, #0x40
    2380:	add	x19, x8, #0x10
    2384:	stur	x19, [x29, #-64]
    2388:	mov	x8, x0
    238c:	ldr	x9, [x8], #16
    2390:	cmp	x9, x8
    2394:	b.eq	23a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c48>  // b.none
    2398:	stur	x9, [x29, #-64]
    239c:	ldr	x9, [x0, #16]
    23a0:	stur	x9, [x29, #-48]
    23a4:	b	23b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c50>
    23a8:	ldr	q0, [x9]
    23ac:	str	q0, [x19]
    23b0:	ldr	x9, [x0, #8]
    23b4:	stur	x9, [x29, #-56]
    23b8:	stp	x8, xzr, [x0]
    23bc:	strb	wzr, [x0, #16]
    23c0:	ldur	x0, [x29, #-96]
    23c4:	cmp	x0, x20
    23c8:	b.eq	23d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c70>  // b.none
    23cc:	bl	0 <_ZdlPv>
    23d0:	ldur	x0, [x29, #-128]
    23d4:	add	x20, x25, #0x10
    23d8:	cmp	x0, x21
    23dc:	b.eq	23e4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c84>  // b.none
    23e0:	bl	0 <_ZdlPv>
    23e4:	ldr	x8, [x20, #16]
    23e8:	ldr	q0, [x20]
    23ec:	add	x0, sp, #0xb0
    23f0:	sub	x1, x29, #0x40
    23f4:	str	x8, [sp, #192]
    23f8:	str	q0, [sp, #176]
    23fc:	b	2540 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1de0>
    2400:	mov	x0, x21
    2404:	cbz	x20, 2428 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1cc8>
    2408:	cmp	x20, #0x1
    240c:	b.ne	241c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1cbc>  // b.any
    2410:	ldrb	w8, [x19]
    2414:	strb	w8, [x0]
    2418:	b	2428 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1cc8>
    241c:	mov	x1, x19
    2420:	mov	x2, x20
    2424:	bl	0 <memcpy>
    2428:	ldur	x8, [x29, #-64]
    242c:	ldur	x9, [x29, #-128]
    2430:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2434:	add	x3, x3, #0x0
    2438:	sub	x0, x29, #0x80
    243c:	mov	w4, #0x3                   	// #3
    2440:	mov	x1, xzr
    2444:	mov	x2, xzr
    2448:	stur	x8, [x29, #-120]
    244c:	strb	wzr, [x9, x8]
    2450:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2454:	sub	x8, x29, #0x60
    2458:	add	x20, x8, #0x10
    245c:	stur	x20, [x29, #-96]
    2460:	mov	x8, x0
    2464:	ldr	x9, [x8], #16
    2468:	cmp	x9, x8
    246c:	b.eq	2480 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d20>  // b.none
    2470:	stur	x9, [x29, #-96]
    2474:	ldr	x9, [x0, #16]
    2478:	stur	x9, [x29, #-80]
    247c:	b	2488 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d28>
    2480:	ldr	q0, [x9]
    2484:	str	q0, [x20]
    2488:	ldr	x9, [x0, #8]
    248c:	stur	x9, [x29, #-88]
    2490:	stp	x8, xzr, [x0]
    2494:	strb	wzr, [x0, #16]
    2498:	ldur	x8, [x29, #-88]
    249c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    24a0:	sub	x8, x9, x8
    24a4:	cmp	x8, #0x9
    24a8:	b.ls	267c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f1c>  // b.plast
    24ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    24b0:	add	x1, x1, #0x0
    24b4:	sub	x0, x29, #0x60
    24b8:	mov	w2, #0xa                   	// #10
    24bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    24c0:	sub	x8, x29, #0x40
    24c4:	add	x19, x8, #0x10
    24c8:	stur	x19, [x29, #-64]
    24cc:	mov	x8, x0
    24d0:	ldr	x9, [x8], #16
    24d4:	cmp	x9, x8
    24d8:	b.eq	24ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d8c>  // b.none
    24dc:	stur	x9, [x29, #-64]
    24e0:	ldr	x9, [x0, #16]
    24e4:	stur	x9, [x29, #-48]
    24e8:	b	24f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d94>
    24ec:	ldr	q0, [x9]
    24f0:	str	q0, [x19]
    24f4:	ldr	x9, [x0, #8]
    24f8:	stur	x9, [x29, #-56]
    24fc:	stp	x8, xzr, [x0]
    2500:	strb	wzr, [x0, #16]
    2504:	ldur	x0, [x29, #-96]
    2508:	cmp	x0, x20
    250c:	b.eq	2514 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1db4>  // b.none
    2510:	bl	0 <_ZdlPv>
    2514:	ldur	x0, [x29, #-128]
    2518:	add	x20, x25, #0x10
    251c:	cmp	x0, x21
    2520:	b.eq	2528 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1dc8>  // b.none
    2524:	bl	0 <_ZdlPv>
    2528:	ldr	x8, [x20, #16]
    252c:	ldr	q0, [x20]
    2530:	add	x0, sp, #0x90
    2534:	sub	x1, x29, #0x40
    2538:	str	x8, [sp, #160]
    253c:	str	q0, [sp, #144]
    2540:	bl	aa4c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    2544:	ldur	x8, [x29, #-64]
    2548:	mov	w9, #0x101                 	// #257
    254c:	stp	xzr, xzr, [x29, #-96]
    2550:	sturh	w9, [x29, #-80]
    2554:	ldrb	w9, [x8]
    2558:	cbz	w9, 2568 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e08>
    255c:	stur	x8, [x29, #-96]
    2560:	mov	w8, #0x3                   	// #3
    2564:	b	256c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e0c>
    2568:	mov	w8, #0x1                   	// #1
    256c:	sturb	w8, [x29, #-80]
    2570:	ldr	x0, [x22]
    2574:	sub	x1, x29, #0x60
    2578:	mov	x2, xzr
    257c:	mov	x3, xzr
    2580:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    2584:	ldur	x8, [x29, #-64]
    2588:	cmp	x8, x19
    258c:	mov	w19, w0
    2590:	b.eq	147c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd1c>  // b.none
    2594:	mov	x0, x8
    2598:	bl	0 <_ZdlPv>
    259c:	b	147c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd1c>
    25a0:	str	x19, [sp, #8]
    25a4:	mov	w19, #0x3                   	// #3
    25a8:	b	1888 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1128>
    25ac:	mov	x1, xzr
    25b0:	bl	0 <LLVMInitializeAArch64AsmParser>
    25b4:	ldr	x0, [sp, #24]
    25b8:	ldp	w8, w9, [x0, #8]
    25bc:	b	d4c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x5ec>
    25c0:	mov	x1, xzr
    25c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    25c8:	ldr	x0, [sp, #24]
    25cc:	ldp	w8, w9, [x0, #8]
    25d0:	b	e38 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x6d8>
    25d4:	mov	x19, x0
    25d8:	mov	x0, x11
    25dc:	mov	x1, xzr
    25e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    25e4:	ldr	x11, [sp, #24]
    25e8:	mov	x0, x19
    25ec:	ldr	x19, [sp, #8]
    25f0:	ldp	w8, w9, [x11, #8]
    25f4:	b	10c4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x964>
    25f8:	mov	x0, x11
    25fc:	mov	x1, xzr
    2600:	bl	0 <LLVMInitializeAArch64AsmParser>
    2604:	ldr	x11, [sp, #24]
    2608:	ldp	w8, w9, [x11, #8]
    260c:	b	1138 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x9d8>
    2610:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2614:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2618:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    261c:	add	x0, x0, #0x0
    2620:	add	x1, x1, #0x0
    2624:	add	x3, x3, #0x0
    2628:	mov	w2, #0x43                  	// #67
    262c:	bl	0 <__assert_fail>
    2630:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2634:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2638:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    263c:	add	x0, x0, #0x0
    2640:	add	x1, x1, #0x0
    2644:	add	x3, x3, #0x0
    2648:	mov	w2, #0x5b                  	// #91
    264c:	bl	0 <__assert_fail>
    2650:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2654:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2658:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    265c:	add	x0, x0, #0x0
    2660:	add	x1, x1, #0x0
    2664:	add	x3, x3, #0x0
    2668:	mov	w2, #0x99                  	// #153
    266c:	bl	0 <__assert_fail>
    2670:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2674:	add	x0, x0, #0x0
    2678:	bl	0 <_ZSt19__throw_logic_errorPKc>
    267c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2680:	add	x0, x0, #0x0
    2684:	bl	0 <_ZSt20__throw_length_errorPKc>
    2688:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    268c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2690:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2694:	add	x0, x0, #0x0
    2698:	add	x1, x1, #0x0
    269c:	add	x3, x3, #0x0
    26a0:	mov	w2, #0x1bb                 	// #443
    26a4:	bl	0 <__assert_fail>
    26a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    26ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    26b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    26b4:	add	x0, x0, #0x0
    26b8:	add	x1, x1, #0x0
    26bc:	add	x3, x3, #0x0
    26c0:	mov	w2, #0xb8d                 	// #2957
    26c4:	bl	0 <__assert_fail>

00000000000026c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE>:
    26c8:	sub	sp, sp, #0x1e0
    26cc:	stp	x29, x30, [sp, #384]
    26d0:	stp	x28, x27, [sp, #400]
    26d4:	stp	x26, x25, [sp, #416]
    26d8:	stp	x24, x23, [sp, #432]
    26dc:	stp	x22, x21, [sp, #448]
    26e0:	stp	x20, x19, [sp, #464]
    26e4:	add	x29, sp, #0x180
    26e8:	mov	x25, x0
    26ec:	mov	x19, x0
    26f0:	ldr	x0, [x25, #8]!
    26f4:	mov	x20, x1
    26f8:	ldr	x8, [x0]
    26fc:	ldr	x8, [x8, #48]
    2700:	blr	x8
    2704:	ldr	x9, [x0, #32]
    2708:	ldr	w8, [x20]
    270c:	ldr	w23, [x9, #704]
    2710:	cmp	w8, #0x3
    2714:	b.eq	2728 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x60>  // b.none
    2718:	cmp	w8, #0x2
    271c:	b.ne	3be8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1520>  // b.any
    2720:	ldp	x21, x22, [x20, #8]
    2724:	b	274c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x84>
    2728:	ldp	x9, x8, [x20, #8]
    272c:	subs	x10, x8, #0x1
    2730:	cset	w11, cs  // cs = hs, nlast
    2734:	cinc	x21, x9, cs  // cs = hs, nlast
    2738:	cmp	x10, x11
    273c:	csel	x9, x10, x11, hi  // hi = pmore
    2740:	cmp	x8, x9
    2744:	csel	x8, x8, x9, cc  // cc = lo, ul, last
    2748:	sub	x22, x8, x11
    274c:	mov	x0, x20
    2750:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2754:	sub	x8, x22, #0x4
    2758:	mov	x20, x0
    275c:	cmp	x8, #0x10
    2760:	mov	w0, #0x1                   	// #1
    2764:	b.hi	373c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1074>  // b.pmore
    2768:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    276c:	add	x9, x9, #0x0
    2770:	adr	x10, 2780 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb8>
    2774:	ldrh	w11, [x9, x8, lsl #1]
    2778:	add	x10, x10, x11, lsl #2
    277c:	br	x10
    2780:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2784:	add	x1, x1, #0x0
    2788:	mov	x0, x21
    278c:	mov	x2, x22
    2790:	bl	0 <bcmp>
    2794:	cbz	w0, 2c60 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x598>
    2798:	cbnz	w23, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    279c:	ldr	w8, [x21]
    27a0:	mov	w9, #0x6c2e                	// #27694
    27a4:	movk	w9, #0x686f, lsl #16
    27a8:	cmp	w8, w9
    27ac:	b.ne	2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>  // b.any
    27b0:	mov	w8, #0x4                   	// #4
    27b4:	stp	x21, x8, [sp, #144]
    27b8:	ldr	x0, [x25]
    27bc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    27c0:	ldr	w19, [x0]
    27c4:	ldr	x0, [x25]
    27c8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    27cc:	ldr	w8, [x0]
    27d0:	cmp	w19, #0x2
    27d4:	b.ne	375c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1094>  // b.any
    27d8:	cmp	w8, #0x3
    27dc:	b.eq	37d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x110c>  // b.none
    27e0:	cmp	w8, #0x2
    27e4:	b.ne	3be8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1520>  // b.any
    27e8:	ldp	x8, x9, [x0, #8]
    27ec:	b	37f8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1130>
    27f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    27f4:	add	x1, x1, #0x0
    27f8:	mov	x0, x21
    27fc:	mov	x2, x22
    2800:	bl	0 <bcmp>
    2804:	cbnz	w0, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2808:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    280c:	add	x8, x8, #0x0
    2810:	mov	w9, #0x103                 	// #259
    2814:	stp	x8, xzr, [sp, #168]
    2818:	strh	w9, [sp, #184]
    281c:	ldr	x0, [x25]
    2820:	add	x2, sp, #0xa8
    2824:	mov	w1, #0x9                   	// #9
    2828:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    282c:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2830:	ldr	x0, [x25]
    2834:	ldr	x8, [x0]
    2838:	ldr	x8, [x8, #56]
    283c:	blr	x8
    2840:	ldr	x8, [x0]
    2844:	ldr	x8, [x8, #600]
    2848:	blr	x8
    284c:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2850:	ldr	w8, [x21]
    2854:	ldrb	w9, [x21, #4]
    2858:	mov	w10, #0x612e                	// #24878
    285c:	movk	w10, #0x6372, lsl #16
    2860:	mov	w11, #0x68                  	// #104
    2864:	eor	w8, w8, w10
    2868:	eor	w9, w9, w11
    286c:	orr	w8, w8, w9
    2870:	cbz	w8, 2b84 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x4bc>
    2874:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2878:	add	x1, x1, #0x0
    287c:	mov	x0, x21
    2880:	mov	x2, x22
    2884:	bl	0 <bcmp>
    2888:	cbz	w0, 2b40 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x478>
    288c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2890:	add	x1, x1, #0x0
    2894:	mov	x0, x21
    2898:	mov	x2, x22
    289c:	bl	0 <bcmp>
    28a0:	cbnz	w0, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    28a4:	ldr	x0, [x25]
    28a8:	ldr	x8, [x0]
    28ac:	ldr	x8, [x8, #40]
    28b0:	blr	x8
    28b4:	ldr	w8, [x0, #16]
    28b8:	cbz	w8, 3c54 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x158c>
    28bc:	ldr	x8, [x0, #8]
    28c0:	ldr	w8, [x8]
    28c4:	cmp	w8, #0x9
    28c8:	b.ne	35b0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xee8>  // b.any
    28cc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    28d0:	add	x8, x8, #0x0
    28d4:	b	3178 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xab0>
    28d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    28dc:	add	x1, x1, #0x0
    28e0:	mov	x0, x21
    28e4:	mov	x2, x22
    28e8:	bl	0 <bcmp>
    28ec:	cbnz	w0, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    28f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    28f4:	add	x8, x8, #0x0
    28f8:	mov	w9, #0x103                 	// #259
    28fc:	stp	x8, xzr, [sp, #168]
    2900:	strh	w9, [sp, #184]
    2904:	ldr	x0, [x25]
    2908:	add	x2, sp, #0xa8
    290c:	mov	w1, #0x9                   	// #9
    2910:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2914:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2918:	ldr	x0, [x25]
    291c:	ldr	x8, [x0]
    2920:	ldr	x8, [x8, #56]
    2924:	blr	x8
    2928:	ldr	x8, [x0]
    292c:	ldr	x8, [x8, #920]
    2930:	blr	x8
    2934:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2938:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    293c:	add	x1, x1, #0x0
    2940:	mov	x0, x21
    2944:	mov	x2, x22
    2948:	bl	0 <bcmp>
    294c:	cbz	w0, 2b40 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x478>
    2950:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2954:	add	x1, x1, #0x0
    2958:	mov	x0, x21
    295c:	mov	x2, x22
    2960:	bl	0 <bcmp>
    2964:	cbnz	w0, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2968:	ldr	x20, [x25]
    296c:	mov	x0, x20
    2970:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2974:	ldr	w8, [x0]
    2978:	cmp	w8, #0x2
    297c:	b.ne	3410 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd48>  // b.any
    2980:	mov	x0, x20
    2984:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2988:	ldr	w8, [x0]
    298c:	cmp	w8, #0x3
    2990:	b.eq	3654 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf8c>  // b.none
    2994:	cmp	w8, #0x2
    2998:	b.ne	3be8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1520>  // b.any
    299c:	ldp	x8, x9, [x0, #8]
    29a0:	b	3678 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfb0>
    29a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    29a8:	add	x1, x1, #0x0
    29ac:	mov	x0, x21
    29b0:	mov	x2, x22
    29b4:	bl	0 <bcmp>
    29b8:	cbnz	w0, 2b38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    29bc:	stp	xzr, xzr, [x29, #-56]
    29c0:	ldr	x0, [x25]
    29c4:	sub	x1, x29, #0x38
    29c8:	ldr	x8, [x0]
    29cc:	ldr	x8, [x8, #144]
    29d0:	blr	x8
    29d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    29d8:	add	x8, x8, #0x0
    29dc:	mov	w21, #0x103                 	// #259
    29e0:	stp	x8, xzr, [sp, #168]
    29e4:	strh	w21, [sp, #184]
    29e8:	ldr	x8, [x25]
    29ec:	and	w1, w0, #0x1
    29f0:	add	x3, sp, #0xa8
    29f4:	mov	x2, x20
    29f8:	mov	x0, x8
    29fc:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
    2a00:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2a04:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2a08:	add	x8, x8, #0x0
    2a0c:	stp	x8, xzr, [x29, #-32]
    2a10:	sturh	w21, [x29, #-16]
    2a14:	ldr	x0, [x25]
    2a18:	sub	x2, x29, #0x20
    2a1c:	mov	w1, #0x9                   	// #9
    2a20:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2a24:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2a28:	ldr	x0, [x19, #8]
    2a2c:	ldr	x8, [x0]
    2a30:	ldr	x8, [x8, #48]
    2a34:	blr	x8
    2a38:	mov	w8, #0x105                 	// #261
    2a3c:	sub	x9, x29, #0x38
    2a40:	add	x1, sp, #0xa8
    2a44:	strh	w8, [sp, #184]
    2a48:	stp	x9, xzr, [sp, #168]
    2a4c:	add	x21, sp, #0xa8
    2a50:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    2a54:	ldr	x8, [x19, #8]
    2a58:	mov	x20, x0
    2a5c:	ldr	x9, [x8]
    2a60:	mov	x0, x8
    2a64:	ldr	x9, [x9, #48]
    2a68:	blr	x9
    2a6c:	mov	x2, x0
    2a70:	mov	x0, x20
    2a74:	mov	w1, wzr
    2a78:	mov	x3, xzr
    2a7c:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
    2a80:	ldr	x8, [x19, #8]
    2a84:	mov	x20, x0
    2a88:	ldr	x9, [x8]
    2a8c:	mov	x0, x8
    2a90:	ldr	x9, [x9, #48]
    2a94:	blr	x9
    2a98:	mov	x2, x0
    2a9c:	mov	w1, #0x8                   	// #8
    2aa0:	mov	x0, x20
    2aa4:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    2aa8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    2aac:	ldr	d0, [x10]
    2ab0:	add	x8, x0, #0x8
    2ab4:	mov	w9, #0x11cc                	// #4556
    2ab8:	cmp	x0, #0x0
    2abc:	add	x21, x21, #0x20
    2ac0:	stp	xzr, xzr, [sp, #168]
    2ac4:	str	w9, [sp, #168]
    2ac8:	csel	x8, xzr, x8, eq  // eq = none
    2acc:	mov	w9, #0x4                   	// #4
    2ad0:	str	x21, [sp, #184]
    2ad4:	stp	x9, x8, [sp, #200]
    2ad8:	str	d0, [sp, #192]
    2adc:	ldr	x0, [x19, #8]
    2ae0:	ldr	x8, [x0]
    2ae4:	ldr	x8, [x8, #56]
    2ae8:	blr	x8
    2aec:	mov	x20, x0
    2af0:	mov	x0, x19
    2af4:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    2af8:	ldr	x8, [x20]
    2afc:	mov	x2, x0
    2b00:	add	x1, sp, #0xa8
    2b04:	mov	x0, x20
    2b08:	ldr	x8, [x8, #1080]
    2b0c:	blr	x8
    2b10:	ldr	x0, [sp, #184]
    2b14:	cmp	x0, x21
    2b18:	b.ne	347c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>  // b.any
    2b1c:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2b20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2b24:	add	x1, x1, #0x0
    2b28:	mov	x0, x21
    2b2c:	mov	x2, x22
    2b30:	bl	0 <bcmp>
    2b34:	cbz	w0, 2d38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x670>
    2b38:	mov	w0, #0x1                   	// #1
    2b3c:	b	373c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1074>
    2b40:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2b44:	add	x8, x8, #0x0
    2b48:	mov	w9, #0x103                 	// #259
    2b4c:	stp	x8, xzr, [sp, #168]
    2b50:	strh	w9, [sp, #184]
    2b54:	ldr	x0, [x25]
    2b58:	add	x2, sp, #0xa8
    2b5c:	mov	w1, #0x9                   	// #9
    2b60:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2b64:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2b68:	ldr	x0, [x25]
    2b6c:	ldr	x8, [x0]
    2b70:	ldr	x8, [x8, #56]
    2b74:	blr	x8
    2b78:	ldr	x0, [x0, #16]
    2b7c:	bl	0 <_ZN4llvm21AArch64TargetStreamer23emitCurrentConstantPoolEv>
    2b80:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2b84:	ldr	x0, [x25]
    2b88:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2b8c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2b90:	stp	xzr, xzr, [sp, #128]
    2b94:	ldr	x8, [x25]
    2b98:	mov	x20, x0
    2b9c:	ldr	x9, [x8]
    2ba0:	mov	x0, x8
    2ba4:	ldr	x9, [x9, #152]
    2ba8:	blr	x9
    2bac:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    2bb0:	add	x21, x21, #0x0
    2bb4:	stp	x0, x1, [x29, #-32]
    2bb8:	sub	x0, x29, #0x20
    2bbc:	mov	w2, #0x6                   	// #6
    2bc0:	mov	x1, x21
    2bc4:	mov	x3, xzr
    2bc8:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    2bcc:	ldp	x9, x8, [x29, #-32]
    2bd0:	mov	w2, #0x6                   	// #6
    2bd4:	mov	x3, #0xffffffffffffffff    	// #-1
    2bd8:	mov	x1, x21
    2bdc:	cmp	x0, x8
    2be0:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    2be4:	add	x9, x9, x10
    2be8:	sub	x22, x8, x10
    2bec:	add	x0, sp, #0xa8
    2bf0:	stp	x9, x22, [sp, #168]
    2bf4:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    2bf8:	ldr	x8, [sp, #176]
    2bfc:	add	x9, x0, #0x1
    2c00:	cmp	x9, x8
    2c04:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    2c08:	sub	x9, x22, x9
    2c0c:	subs	x8, x8, x9
    2c10:	b.cc	3c14 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.lo, b.ul, b.last
    2c14:	ldr	x9, [sp, #168]
    2c18:	add	x0, sp, #0xa8
    2c1c:	sub	x1, x29, #0x38
    2c20:	mov	w2, #0x1                   	// #1
    2c24:	stp	x9, x8, [sp, #168]
    2c28:	mov	w8, #0x2b                  	// #43
    2c2c:	mov	x3, xzr
    2c30:	sturb	w8, [x29, #-56]
    2c34:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
    2c38:	cmn	x0, #0x1
    2c3c:	b.eq	2e34 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x76c>  // b.none
    2c40:	mov	x8, x0
    2c44:	ldp	x0, x10, [sp, #168]
    2c48:	cmp	x10, x8
    2c4c:	csel	x1, x10, x8, cc  // cc = lo, ul, last
    2c50:	csinc	x8, x10, x8, ls  // ls = plast
    2c54:	add	x9, x0, x8
    2c58:	sub	x8, x10, x8
    2c5c:	b	2e40 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x778>
    2c60:	ldr	x0, [x25]
    2c64:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2c68:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2c6c:	stp	xzr, xzr, [sp, #88]
    2c70:	ldr	x8, [x25]
    2c74:	mov	x21, x0
    2c78:	ldr	x9, [x8]
    2c7c:	mov	x0, x8
    2c80:	ldr	x9, [x9, #152]
    2c84:	blr	x9
    2c88:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    2c8c:	add	x20, x20, #0x0
    2c90:	stp	x0, x1, [x29, #-32]
    2c94:	sub	x0, x29, #0x20
    2c98:	mov	w2, #0x6                   	// #6
    2c9c:	mov	x1, x20
    2ca0:	mov	x3, xzr
    2ca4:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    2ca8:	ldp	x9, x8, [x29, #-32]
    2cac:	mov	w2, #0x6                   	// #6
    2cb0:	mov	x3, #0xffffffffffffffff    	// #-1
    2cb4:	mov	x1, x20
    2cb8:	cmp	x0, x8
    2cbc:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    2cc0:	add	x9, x9, x10
    2cc4:	sub	x22, x8, x10
    2cc8:	add	x0, sp, #0xa8
    2ccc:	stp	x9, x22, [sp, #168]
    2cd0:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    2cd4:	ldr	x8, [sp, #176]
    2cd8:	add	x9, x0, #0x1
    2cdc:	cmp	x9, x8
    2ce0:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    2ce4:	sub	x9, x22, x9
    2ce8:	subs	x8, x8, x9
    2cec:	b.cc	3c14 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.lo, b.ul, b.last
    2cf0:	ldr	x9, [sp, #168]
    2cf4:	add	x0, sp, #0xa8
    2cf8:	sub	x1, x29, #0x38
    2cfc:	mov	w2, #0x1                   	// #1
    2d00:	stp	x9, x8, [sp, #168]
    2d04:	mov	w8, #0x2b                  	// #43
    2d08:	mov	x3, xzr
    2d0c:	sturb	w8, [x29, #-56]
    2d10:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
    2d14:	cmn	x0, #0x1
    2d18:	b.eq	3194 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xacc>  // b.none
    2d1c:	ldp	x23, x9, [sp, #168]
    2d20:	cmp	x9, x0
    2d24:	csinc	x10, x9, x0, ls  // ls = plast
    2d28:	csel	x22, x9, x0, cc  // cc = lo, ul, last
    2d2c:	add	x8, x23, x10
    2d30:	sub	x20, x9, x10
    2d34:	b	31a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xad8>
    2d38:	ldr	x0, [x25]
    2d3c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2d40:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2d44:	ldr	x8, [x25]
    2d48:	mov	x22, x0
    2d4c:	ldr	x9, [x8]
    2d50:	mov	x0, x8
    2d54:	ldr	x9, [x9, #152]
    2d58:	blr	x9
    2d5c:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    2d60:	add	x21, x21, #0x0
    2d64:	stp	x0, x1, [x29, #-32]
    2d68:	sub	x0, x29, #0x20
    2d6c:	mov	w2, #0x6                   	// #6
    2d70:	mov	x1, x21
    2d74:	mov	x3, xzr
    2d78:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    2d7c:	ldp	x9, x8, [x29, #-32]
    2d80:	mov	w2, #0x6                   	// #6
    2d84:	mov	x3, #0xffffffffffffffff    	// #-1
    2d88:	mov	x1, x21
    2d8c:	cmp	x0, x8
    2d90:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    2d94:	add	x9, x9, x10
    2d98:	sub	x20, x8, x10
    2d9c:	add	x0, sp, #0xa8
    2da0:	stp	x9, x20, [sp, #168]
    2da4:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    2da8:	ldr	x8, [sp, #176]
    2dac:	add	x9, x0, #0x1
    2db0:	cmp	x9, x8
    2db4:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    2db8:	sub	x9, x20, x9
    2dbc:	subs	x8, x8, x9
    2dc0:	b.cc	3c14 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.lo, b.ul, b.last
    2dc4:	ldr	x9, [sp, #168]
    2dc8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    2dcc:	add	x10, x10, #0x0
    2dd0:	mov	w11, #0x103                 	// #259
    2dd4:	stp	x10, xzr, [sp, #168]
    2dd8:	stp	x9, x8, [sp, #144]
    2ddc:	strh	w11, [sp, #184]
    2de0:	ldr	x0, [x25]
    2de4:	add	x2, sp, #0xa8
    2de8:	mov	w1, #0x9                   	// #9
    2dec:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2df0:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2df4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2df8:	add	x1, x1, #0x0
    2dfc:	add	x0, sp, #0x90
    2e00:	mov	w2, #0x2                   	// #2
    2e04:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    2e08:	str	x22, [sp, #56]
    2e0c:	tbz	w0, #0, 3484 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdbc>
    2e10:	ldp	x9, x8, [sp, #144]
    2e14:	mov	w10, #0x2                   	// #2
    2e18:	mov	x26, xzr
    2e1c:	cmp	x8, #0x2
    2e20:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    2e24:	add	x9, x9, x10
    2e28:	sub	x8, x8, x10
    2e2c:	stp	x9, x8, [sp, #144]
    2e30:	b	3488 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdc0>
    2e34:	ldp	x0, x1, [sp, #168]
    2e38:	mov	x8, xzr
    2e3c:	mov	x9, xzr
    2e40:	stp	x9, x8, [sp, #128]
    2e44:	bl	0 <_ZN4llvm7AArch649parseArchENS_9StringRefE>
    2e48:	cbz	w0, 3170 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xaa8>
    2e4c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2e50:	add	x8, x8, #0x0
    2e54:	mov	w9, #0x103                 	// #259
    2e58:	stp	x8, xzr, [sp, #168]
    2e5c:	strh	w9, [sp, #184]
    2e60:	mov	w21, w0
    2e64:	ldr	x0, [x25]
    2e68:	add	x2, sp, #0xa8
    2e6c:	mov	w1, #0x9                   	// #9
    2e70:	add	x20, sp, #0xa8
    2e74:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2e78:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    2e7c:	sub	x1, x29, #0x20
    2e80:	mov	w0, w21
    2e84:	stp	xzr, xzr, [x29, #-32]
    2e88:	stur	xzr, [x29, #-16]
    2e8c:	bl	0 <_ZN4llvm7AArch6415getArchFeaturesENS0_8ArchKindERSt6vectorINS_9StringRefESaIS3_EE>
    2e90:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2e94:	add	x0, x0, #0x0
    2e98:	mov	w1, #0x7                   	// #7
    2e9c:	mov	w2, w21
    2ea0:	bl	0 <_ZN4llvm7AArch6420getDefaultExtensionsENS_9StringRefENS0_8ArchKindE>
    2ea4:	sub	x1, x29, #0x20
    2ea8:	bl	0 <_ZN4llvm7AArch6420getExtensionFeaturesEjRSt6vectorINS_9StringRefESaIS2_EE>
    2eac:	mov	x0, x19
    2eb0:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    2eb4:	ldp	x1, x2, [x29, #-32]
    2eb8:	str	x0, [sp, #56]
    2ebc:	sub	x0, x29, #0x38
    2ec0:	stp	xzr, xzr, [x29, #-48]
    2ec4:	stur	xzr, [x29, #-56]
    2ec8:	bl	0 <LLVMInitializeAArch64AsmParser>
    2ecc:	ldp	x22, x23, [x29, #-56]
    2ed0:	add	x20, x20, #0x10
    2ed4:	stp	x20, xzr, [sp, #168]
    2ed8:	strb	wzr, [sp, #184]
    2edc:	cmp	x22, x23
    2ee0:	b.eq	2f64 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x89c>  // b.none
    2ee4:	sub	x8, x23, x22
    2ee8:	ldr	x9, [x22, #8]
    2eec:	sub	x10, x8, #0x20
    2ef0:	lsr	x10, x10, #5
    2ef4:	add	x10, x10, #0x1
    2ef8:	mul	x9, x9, x10
    2efc:	add	x8, x9, x8, asr #5
    2f00:	sub	x1, x8, #0x1
    2f04:	add	x0, sp, #0xa8
    2f08:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    2f0c:	ldp	x1, x2, [x22]
    2f10:	add	x0, sp, #0xa8
    2f14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2f18:	add	x24, x22, #0x20
    2f1c:	cmp	x24, x23
    2f20:	b.eq	2f64 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x89c>  // b.none
    2f24:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    2f28:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    2f2c:	add	x22, x22, #0x0
    2f30:	ldr	x8, [sp, #176]
    2f34:	cmp	x8, x25
    2f38:	b.eq	3c08 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1540>  // b.none
    2f3c:	add	x0, sp, #0xa8
    2f40:	mov	w2, #0x1                   	// #1
    2f44:	mov	x1, x22
    2f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2f4c:	ldp	x1, x2, [x24]
    2f50:	add	x0, sp, #0xa8
    2f54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2f58:	add	x24, x24, #0x20
    2f5c:	cmp	x24, x23
    2f60:	b.ne	2f30 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x868>  // b.any
    2f64:	ldp	x3, x4, [sp, #168]
    2f68:	ldr	x0, [sp, #56]
    2f6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2f70:	add	x1, x1, #0x0
    2f74:	mov	w2, #0x7                   	// #7
    2f78:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    2f7c:	ldr	x0, [sp, #168]
    2f80:	cmp	x0, x20
    2f84:	b.eq	2f8c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x8c4>  // b.none
    2f88:	bl	0 <_ZdlPv>
    2f8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2f90:	ldr	d0, [x8]
    2f94:	ldr	x8, [sp, #136]
    2f98:	add	x9, sp, #0xa8
    2f9c:	add	x9, x9, #0x10
    2fa0:	str	x9, [sp, #168]
    2fa4:	str	d0, [sp, #176]
    2fa8:	cbz	x8, 2fc4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x8fc>
    2fac:	add	x0, sp, #0x80
    2fb0:	add	x1, sp, #0xa8
    2fb4:	mov	w2, #0x2b                  	// #43
    2fb8:	mov	w3, #0xffffffff            	// #-1
    2fbc:	mov	w4, #0x1                   	// #1
    2fc0:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    2fc4:	add	x1, sp, #0xa8
    2fc8:	mov	w0, w21
    2fcc:	add	x20, sp, #0xa8
    2fd0:	bl	11084 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    2fd4:	ldr	w8, [sp, #176]
    2fd8:	ldr	x21, [sp, #168]
    2fdc:	cbz	w8, 35f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf28>
    2fe0:	ldr	x9, [sp, #56]
    2fe4:	add	x25, x21, x8, lsl #4
    2fe8:	add	x20, x19, #0x18
    2fec:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    2ff0:	ldp	x10, x11, [x9, #184]
    2ff4:	ldr	x9, [x9, #200]
    2ff8:	add	x19, x19, #0x0
    2ffc:	mvn	x8, x10
    3000:	str	x8, [sp, #32]
    3004:	mvn	x8, x11
    3008:	str	x8, [sp, #24]
    300c:	mov	x27, x9
    3010:	mvn	x8, x9
    3014:	stp	x11, x10, [sp, #40]
    3018:	str	x8, [sp, #16]
    301c:	b	308c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x9c4>
    3020:	ldp	x12, x0, [sp, #48]
    3024:	ldr	x13, [sp, #32]
    3028:	cmp	w26, #0x0
    302c:	ldp	x11, x14, [sp, #16]
    3030:	ldp	x10, x9, [x9, #16]
    3034:	csel	x12, x13, x12, ne  // ne = any
    3038:	ldr	x13, [sp, #40]
    303c:	csel	x11, x11, x27, ne  // ne = any
    3040:	and	x8, x8, x12
    3044:	and	x9, x9, x11
    3048:	csel	x13, x14, x13, ne  // ne = any
    304c:	and	x10, x10, x13
    3050:	stp	x8, x10, [sp, #144]
    3054:	add	x8, sp, #0x40
    3058:	add	x1, sp, #0x90
    305c:	str	x9, [sp, #160]
    3060:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    3064:	add	x8, sp, #0x58
    3068:	add	x0, sp, #0x40
    306c:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    3070:	ldr	x8, [sp, #104]
    3074:	ldur	q0, [sp, #88]
    3078:	str	x8, [x20, #16]
    307c:	str	q0, [x20]
    3080:	add	x21, x21, #0x10
    3084:	cmp	x21, x25
    3088:	b.eq	35e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf20>  // b.none
    308c:	ldr	q0, [x21]
    3090:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3094:	add	x0, sp, #0x70
    3098:	mov	w2, #0x2                   	// #2
    309c:	add	x1, x1, #0x0
    30a0:	str	q0, [sp, #112]
    30a4:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    30a8:	tbz	w0, #0, 30d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa08>
    30ac:	ldp	x9, x8, [sp, #112]
    30b0:	mov	w10, #0x2                   	// #2
    30b4:	mov	w26, wzr
    30b8:	cmp	x8, #0x2
    30bc:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    30c0:	add	x22, x9, x10
    30c4:	sub	x23, x8, x10
    30c8:	stp	x22, x23, [sp, #112]
    30cc:	b	30d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa10>
    30d0:	ldp	x22, x23, [sp, #112]
    30d4:	mov	w26, #0x1                   	// #1
    30d8:	mov	x28, xzr
    30dc:	b	30ec <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa24>
    30e0:	add	x28, x28, #0x20
    30e4:	cmp	x28, #0x340
    30e8:	b.eq	3080 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x9b8>  // b.none
    30ec:	ldr	x24, [x19, x28]
    30f0:	cbz	x24, 3108 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa40>
    30f4:	mov	x0, x24
    30f8:	bl	0 <strlen>
    30fc:	cmp	x0, x23
    3100:	b.ne	30e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa18>  // b.any
    3104:	b	3114 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa4c>
    3108:	mov	x0, xzr
    310c:	cmp	x0, x23
    3110:	b.ne	30e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa18>  // b.any
    3114:	cbz	x23, 312c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa64>
    3118:	mov	x0, x24
    311c:	mov	x1, x22
    3120:	mov	x2, x23
    3124:	bl	0 <bcmp>
    3128:	cbnz	w0, 30e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xa18>
    312c:	add	x9, x19, x28
    3130:	ldr	x8, [x9, #8]
    3134:	cbnz	x8, 3020 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x958>
    3138:	ldr	x10, [x9, #16]
    313c:	cbnz	x10, 3020 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x958>
    3140:	add	x10, x19, x28
    3144:	ldr	x10, [x10, #24]
    3148:	cbnz	x10, 3020 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x958>
    314c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3150:	mov	w8, #0x503                 	// #1283
    3154:	add	x9, x9, #0x0
    3158:	add	x10, sp, #0x70
    315c:	add	x0, sp, #0x90
    3160:	mov	w1, #0x1                   	// #1
    3164:	strh	w8, [sp, #160]
    3168:	stp	x9, x10, [sp, #144]
    316c:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    3170:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3174:	add	x8, x8, #0x0
    3178:	mov	w9, #0x103                 	// #259
    317c:	stp	x8, xzr, [sp, #168]
    3180:	strh	w9, [sp, #184]
    3184:	ldr	x0, [x25]
    3188:	add	x2, sp, #0xa8
    318c:	mov	x1, x20
    3190:	b	35a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xed8>
    3194:	ldp	x23, x22, [sp, #168]
    3198:	mov	x20, xzr
    319c:	mov	x8, xzr
    31a0:	stp	x8, x20, [sp, #88]
    31a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    31a8:	add	x8, x8, #0x0
    31ac:	mov	w9, #0x103                 	// #259
    31b0:	stp	x8, xzr, [sp, #168]
    31b4:	strh	w9, [sp, #184]
    31b8:	ldr	x0, [x25]
    31bc:	add	x2, sp, #0xa8
    31c0:	mov	w1, #0x9                   	// #9
    31c4:	add	x24, sp, #0xa8
    31c8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    31cc:	tbnz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    31d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    31d4:	ldr	d0, [x8]
    31d8:	add	x8, x24, #0x10
    31dc:	str	x8, [sp, #168]
    31e0:	str	d0, [sp, #176]
    31e4:	cbz	x20, 3200 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb38>
    31e8:	add	x0, sp, #0x58
    31ec:	add	x1, sp, #0xa8
    31f0:	mov	w2, #0x2b                  	// #43
    31f4:	mov	w3, #0xffffffff            	// #-1
    31f8:	mov	w4, #0x1                   	// #1
    31fc:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    3200:	mov	x0, x19
    3204:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    3208:	mov	x1, x23
    320c:	mov	x2, x22
    3210:	bl	0 <LLVMInitializeAArch64AsmParser>
    3214:	tbz	w0, #0, 343c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd74>
    3218:	mov	x0, x19
    321c:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    3220:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3224:	add	x3, x3, #0x0
    3228:	mov	x1, x23
    322c:	mov	x2, x22
    3230:	mov	x4, xzr
    3234:	str	x0, [sp, #56]
    3238:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    323c:	mov	x0, x23
    3240:	mov	x1, x22
    3244:	bl	0 <_ZN4llvm7AArch6414getCPUArchKindENS_9StringRefE>
    3248:	add	x1, sp, #0xa8
    324c:	bl	11084 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    3250:	ldr	w8, [sp, #176]
    3254:	cbz	w8, 3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>
    3258:	ldr	x9, [sp, #56]
    325c:	ldr	x26, [sp, #168]
    3260:	add	x13, x19, #0x18
    3264:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    3268:	ldp	x10, x11, [x9, #184]
    326c:	ldr	x12, [x9, #200]
    3270:	add	x28, x26, x8, lsl #4
    3274:	add	x9, x21, w22, sxtw
    3278:	mvn	x8, x10
    327c:	stp	x8, x13, [sp, #16]
    3280:	mvn	x8, x11
    3284:	add	x27, x27, #0x0
    3288:	str	x8, [sp, #8]
    328c:	mvn	x8, x12
    3290:	stp	x11, x10, [sp, #40]
    3294:	str	x12, [sp, #32]
    3298:	str	x8, [sp]
    329c:	b	32e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc18>
    32a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    32a4:	add	x8, x8, #0x0
    32a8:	stp	x8, xzr, [x29, #-32]
    32ac:	mov	w8, #0x103                 	// #259
    32b0:	sturh	w8, [x29, #-16]
    32b4:	ldr	x0, [x25]
    32b8:	sub	x2, x29, #0x20
    32bc:	mov	x1, x21
    32c0:	mov	x3, xzr
    32c4:	mov	x4, xzr
    32c8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    32cc:	ldrsw	x8, [sp, #72]
    32d0:	add	x26, x26, #0x10
    32d4:	cmp	x26, x28
    32d8:	add	x9, x21, x8
    32dc:	b.eq	3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>  // b.none
    32e0:	ldr	q0, [x26]
    32e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    32e8:	add	x0, sp, #0x40
    32ec:	mov	w2, #0x2                   	// #2
    32f0:	add	x1, x1, #0x0
    32f4:	str	q0, [sp, #64]
    32f8:	add	x21, x9, #0x1
    32fc:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    3300:	tbz	w0, #0, 3328 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc60>
    3304:	ldp	x9, x8, [sp, #64]
    3308:	mov	w10, #0x2                   	// #2
    330c:	mov	w20, wzr
    3310:	cmp	x8, #0x2
    3314:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    3318:	add	x22, x9, x10
    331c:	sub	x23, x8, x10
    3320:	stp	x22, x23, [sp, #64]
    3324:	b	3330 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc68>
    3328:	ldp	x22, x23, [sp, #64]
    332c:	mov	w20, #0x1                   	// #1
    3330:	mov	x19, xzr
    3334:	b	3344 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc7c>
    3338:	add	x19, x19, #0x20
    333c:	cmp	x19, #0x340
    3340:	b.eq	32a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xbd8>  // b.none
    3344:	ldr	x24, [x27, x19]
    3348:	cbz	x24, 3360 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc98>
    334c:	mov	x0, x24
    3350:	bl	0 <strlen>
    3354:	cmp	x0, x23
    3358:	b.ne	3338 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc70>  // b.any
    335c:	b	336c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xca4>
    3360:	mov	x0, xzr
    3364:	cmp	x0, x23
    3368:	b.ne	3338 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc70>  // b.any
    336c:	cbz	x23, 3384 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcbc>
    3370:	mov	x0, x24
    3374:	mov	x1, x22
    3378:	mov	x2, x23
    337c:	bl	0 <bcmp>
    3380:	cbnz	w0, 3338 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc70>
    3384:	add	x9, x27, x19
    3388:	ldr	x8, [x9, #8]
    338c:	cbnz	x8, 33a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcdc>
    3390:	ldr	x10, [x9, #16]
    3394:	cbnz	x10, 33a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcdc>
    3398:	add	x10, x27, x19
    339c:	ldr	x10, [x10, #24]
    33a0:	cbz	x10, 3c74 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15ac>
    33a4:	ldr	x11, [sp, #32]
    33a8:	ldp	x12, x14, [sp]
    33ac:	cmp	w20, #0x0
    33b0:	ldr	x13, [sp, #16]
    33b4:	ldp	x10, x9, [x9, #16]
    33b8:	csel	x11, x12, x11, ne  // ne = any
    33bc:	ldp	x12, x0, [sp, #48]
    33c0:	sub	x1, x29, #0x20
    33c4:	and	x9, x9, x11
    33c8:	stur	x9, [x29, #-16]
    33cc:	csel	x12, x13, x12, ne  // ne = any
    33d0:	ldr	x13, [sp, #40]
    33d4:	and	x8, x8, x12
    33d8:	csel	x13, x14, x13, ne  // ne = any
    33dc:	and	x10, x10, x13
    33e0:	stp	x8, x10, [x29, #-32]
    33e4:	add	x8, sp, #0x90
    33e8:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    33ec:	sub	x8, x29, #0x38
    33f0:	add	x0, sp, #0x90
    33f4:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    33f8:	ldur	x8, [x29, #-40]
    33fc:	ldur	q0, [x29, #-56]
    3400:	ldr	x9, [sp, #24]
    3404:	str	x8, [x9, #16]
    3408:	str	q0, [x9]
    340c:	b	32cc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc04>
    3410:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3414:	add	x8, x8, #0x0
    3418:	mov	w9, #0x103                 	// #259
    341c:	stp	x8, xzr, [sp, #168]
    3420:	strh	w9, [sp, #184]
    3424:	ldr	x0, [x25]
    3428:	add	x1, sp, #0xa8
    342c:	mov	x2, xzr
    3430:	mov	x3, xzr
    3434:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    3438:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    343c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3440:	add	x8, x8, #0x0
    3444:	mov	w9, #0x103                 	// #259
    3448:	stp	x8, xzr, [x29, #-32]
    344c:	sturh	w9, [x29, #-16]
    3450:	ldr	x0, [x25]
    3454:	sub	x2, x29, #0x20
    3458:	mov	x1, x21
    345c:	mov	x3, xzr
    3460:	mov	x4, xzr
    3464:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    3468:	ldr	x0, [sp, #168]
    346c:	add	x8, sp, #0xa8
    3470:	add	x8, x8, #0x10
    3474:	cmp	x0, x8
    3478:	b.eq	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>  // b.none
    347c:	bl	0 <free>
    3480:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    3484:	mov	x26, #0xffffffffffffffff    	// #-1
    3488:	mov	x0, x19
    348c:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    3490:	ldp	x8, x28, [x0, #184]
    3494:	ldp	x22, x23, [sp, #144]
    3498:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    349c:	mov	x21, x0
    34a0:	str	x8, [sp, #48]
    34a4:	ldr	x8, [x0, #200]
    34a8:	mov	x27, xzr
    34ac:	add	x20, x20, #0x0
    34b0:	str	x8, [sp, #40]
    34b4:	b	34c4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdfc>
    34b8:	add	x27, x27, #0x20
    34bc:	cmp	x27, #0x340
    34c0:	b.eq	357c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xeb4>  // b.none
    34c4:	ldr	x24, [x20, x27]
    34c8:	cbz	x24, 34e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe18>
    34cc:	mov	x0, x24
    34d0:	bl	0 <strlen>
    34d4:	cmp	x0, x23
    34d8:	b.ne	34b8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdf0>  // b.any
    34dc:	b	34ec <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe24>
    34e0:	mov	x0, xzr
    34e4:	cmp	x0, x23
    34e8:	b.ne	34b8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdf0>  // b.any
    34ec:	cbz	x23, 3504 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe3c>
    34f0:	mov	x0, x24
    34f4:	mov	x1, x22
    34f8:	mov	x2, x23
    34fc:	bl	0 <bcmp>
    3500:	cbnz	w0, 34b8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdf0>
    3504:	add	x9, x20, x27
    3508:	ldr	x8, [x9, #8]
    350c:	cbnz	x8, 3524 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe5c>
    3510:	ldr	x10, [x9, #16]
    3514:	cbnz	x10, 3524 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe5c>
    3518:	add	x10, x20, x27
    351c:	ldr	x10, [x10, #24]
    3520:	cbz	x10, 39e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1318>
    3524:	ldp	x11, x13, [sp, #40]
    3528:	ldp	x12, x9, [x9, #16]
    352c:	eor	x10, x28, x26
    3530:	add	x1, sp, #0xa8
    3534:	eor	x13, x13, x26
    3538:	eor	x11, x11, x26
    353c:	and	x8, x8, x13
    3540:	and	x10, x12, x10
    3544:	and	x9, x9, x11
    3548:	stp	x8, x10, [sp, #168]
    354c:	sub	x8, x29, #0x38
    3550:	mov	x0, x21
    3554:	str	x9, [sp, #184]
    3558:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    355c:	sub	x8, x29, #0x20
    3560:	sub	x0, x29, #0x38
    3564:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    3568:	ldur	x8, [x29, #-16]
    356c:	ldur	q0, [x29, #-32]
    3570:	str	x8, [x19, #40]
    3574:	stur	q0, [x19, #24]
    3578:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    357c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3580:	mov	w8, #0x503                 	// #1283
    3584:	add	x9, x9, #0x0
    3588:	add	x10, sp, #0x90
    358c:	strh	w8, [sp, #184]
    3590:	stp	x9, x10, [sp, #168]
    3594:	ldr	x0, [x25]
    3598:	ldr	x1, [sp, #56]
    359c:	add	x2, sp, #0xa8
    35a0:	mov	x3, xzr
    35a4:	mov	x4, xzr
    35a8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    35ac:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    35b0:	stur	x19, [x29, #-32]
    35b4:	ldr	x0, [x19, #8]
    35b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    35bc:	add	x1, x1, #0x0
    35c0:	sub	x2, x29, #0x20
    35c4:	mov	w3, #0x1                   	// #1
    35c8:	bl	0 <_ZN4llvm11MCAsmParser9parseManyENS_12function_refIFbvEEEb>
    35cc:	tbz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    35d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    35d4:	add	x8, x8, #0x0
    35d8:	mov	w9, #0x103                 	// #259
    35dc:	stp	x8, xzr, [sp, #168]
    35e0:	strh	w9, [sp, #184]
    35e4:	b	372c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1064>
    35e8:	ldr	x21, [sp, #168]
    35ec:	add	x20, sp, #0xa8
    35f0:	add	x8, x20, #0x10
    35f4:	cmp	x21, x8
    35f8:	b.eq	3604 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf3c>  // b.none
    35fc:	mov	x0, x21
    3600:	bl	0 <free>
    3604:	ldp	x19, x20, [x29, #-56]
    3608:	cmp	x19, x20
    360c:	b.ne	3620 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf58>  // b.any
    3610:	b	3638 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf70>
    3614:	add	x19, x19, #0x10
    3618:	cmp	x19, x20
    361c:	b.eq	3634 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf6c>  // b.none
    3620:	ldr	x0, [x19], #16
    3624:	cmp	x0, x19
    3628:	b.eq	3614 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf4c>  // b.none
    362c:	bl	0 <_ZdlPv>
    3630:	b	3614 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf4c>
    3634:	ldur	x19, [x29, #-56]
    3638:	cbz	x19, 3644 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf7c>
    363c:	mov	x0, x19
    3640:	bl	0 <_ZdlPv>
    3644:	ldur	x0, [x29, #-32]
    3648:	cbz	x0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    364c:	bl	0 <_ZdlPv>
    3650:	b	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    3654:	ldp	x8, x9, [x0, #8]
    3658:	subs	x10, x9, #0x1
    365c:	cset	w11, cs  // cs = hs, nlast
    3660:	cinc	x8, x8, cs  // cs = hs, nlast
    3664:	cmp	x10, x11
    3668:	csel	x10, x10, x11, hi  // hi = pmore
    366c:	cmp	x9, x10
    3670:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    3674:	sub	x9, x9, x11
    3678:	stp	x8, x9, [x29, #-32]
    367c:	add	x8, sp, #0xa8
    3680:	sub	x0, x29, #0x20
    3684:	add	x21, x19, #0xc0
    3688:	add	x22, sp, #0xa8
    368c:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    3690:	ldp	x1, x2, [sp, #168]
    3694:	mov	x0, x21
    3698:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    369c:	cmn	w0, #0x1
    36a0:	b.eq	36d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1008>  // b.none
    36a4:	ldr	w9, [x19, #200]
    36a8:	sxtw	x8, w0
    36ac:	cmp	x8, x9
    36b0:	b.eq	36d0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1008>  // b.none
    36b4:	ldr	x9, [x21]
    36b8:	mov	x0, x21
    36bc:	ldr	x19, [x9, x8, lsl #3]
    36c0:	mov	x1, x19
    36c4:	bl	0 <_ZN4llvm13StringMapImpl9RemoveKeyEPNS_18StringMapEntryBaseE>
    36c8:	mov	x0, x19
    36cc:	bl	0 <free>
    36d0:	ldr	x0, [sp, #168]
    36d4:	add	x8, x22, #0x10
    36d8:	cmp	x0, x8
    36dc:	b.eq	36e4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x101c>  // b.none
    36e0:	bl	0 <_ZdlPv>
    36e4:	ldr	x8, [x20]
    36e8:	mov	x0, x20
    36ec:	ldr	x8, [x8, #136]
    36f0:	blr	x8
    36f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    36f8:	add	x8, x8, #0x0
    36fc:	mov	w19, #0x103                 	// #259
    3700:	stp	x8, xzr, [sp, #168]
    3704:	strh	w19, [sp, #184]
    3708:	ldr	x0, [x25]
    370c:	add	x2, sp, #0xa8
    3710:	mov	w1, #0x9                   	// #9
    3714:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3718:	tbz	w0, #0, 3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1070>
    371c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3720:	add	x8, x8, #0x0
    3724:	stp	x8, xzr, [sp, #168]
    3728:	strh	w19, [sp, #184]
    372c:	ldr	x0, [x25]
    3730:	add	x1, sp, #0xa8
    3734:	bl	0 <_ZN4llvm11MCAsmParser14addErrorSuffixERKNS_5TwineE>
    3738:	mov	w0, wzr
    373c:	ldp	x20, x19, [sp, #464]
    3740:	ldp	x22, x21, [sp, #448]
    3744:	ldp	x24, x23, [sp, #432]
    3748:	ldp	x26, x25, [sp, #416]
    374c:	ldp	x28, x27, [sp, #400]
    3750:	ldp	x29, x30, [sp, #384]
    3754:	add	sp, sp, #0x1e0
    3758:	ret
    375c:	cmp	w8, #0x4
    3760:	b.ne	37c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1100>  // b.any
    3764:	ldr	x0, [x25]
    3768:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    376c:	ldr	w8, [x0]
    3770:	cmp	w8, #0x4
    3774:	b.ne	3c98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15d0>  // b.any
    3778:	ldr	w20, [x0, #32]
    377c:	add	x19, x0, #0x18
    3780:	cmp	w20, #0x40
    3784:	b.ls	37a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x10d8>  // b.plast
    3788:	mov	x0, x19
    378c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3790:	sub	w8, w20, w0
    3794:	cmp	w8, #0x41
    3798:	b.cs	3cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15f0>  // b.hs, b.nlast
    379c:	ldr	x19, [x19]
    37a0:	ldr	x19, [x19]
    37a4:	mov	w8, #0xffffffff            	// #-1
    37a8:	cmp	x19, x8
    37ac:	b.gt	386c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>
    37b0:	sub	w8, w19, #0x1
    37b4:	cmp	w8, #0x8
    37b8:	b.cc	386c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11a4>  // b.lo, b.ul, b.last
    37bc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    37c0:	add	x8, x8, #0x0
    37c4:	b	3418 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd50>
    37c8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    37cc:	add	x8, x8, #0x0
    37d0:	b	3418 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd50>
    37d4:	ldp	x8, x9, [x0, #8]
    37d8:	subs	x10, x9, #0x1
    37dc:	cset	w11, cs  // cs = hs, nlast
    37e0:	cinc	x8, x8, cs  // cs = hs, nlast
    37e4:	cmp	x10, x11
    37e8:	csel	x10, x10, x11, hi  // hi = pmore
    37ec:	cmp	x9, x10
    37f0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    37f4:	sub	x9, x9, x11
    37f8:	sub	x9, x9, #0x7
    37fc:	cmp	x9, #0x6
    3800:	b.hi	39d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x130c>  // b.pmore
    3804:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    3808:	add	x10, x10, #0x0
    380c:	adr	x11, 381c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1154>
    3810:	ldrb	w12, [x10, x9]
    3814:	add	x11, x11, x12, lsl #2
    3818:	br	x11
    381c:	ldr	w10, [x8]
    3820:	ldur	w11, [x8, #3]
    3824:	mov	w9, #0x6441                	// #25665
    3828:	mov	w12, #0x4c70                	// #19568
    382c:	movk	w9, #0x7072, lsl #16
    3830:	movk	w12, #0x7264, lsl #16
    3834:	eor	w10, w10, w9
    3838:	eor	w11, w11, w12
    383c:	orr	w10, w10, w11
    3840:	cbz	w10, 39f8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1330>
    3844:	ldr	w10, [x8]
    3848:	ldur	w8, [x8, #3]
    384c:	mov	w11, #0x4170                	// #16752
    3850:	movk	w11, #0x6464, lsl #16
    3854:	eor	w9, w10, w9
    3858:	eor	w8, w8, w11
    385c:	orr	w8, w9, w8
    3860:	cbnz	w8, 39d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x130c>
    3864:	mov	w8, #0x7                   	// #7
    3868:	b	39fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1334>
    386c:	ldr	x0, [x25]
    3870:	ldr	x8, [x0]
    3874:	ldr	x8, [x8, #136]
    3878:	blr	x8
    387c:	cmp	w19, #0x8
    3880:	b.hi	38a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11dc>  // b.pmore
    3884:	mov	w8, #0x1                   	// #1
    3888:	lsl	w8, w8, w19
    388c:	tst	w8, #0x78
    3890:	str	x19, [sp, #56]
    3894:	b.ne	3a40 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1378>  // b.any
    3898:	mov	w9, #0x186                 	// #390
    389c:	tst	w8, w9
    38a0:	b.ne	3a10 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1348>  // b.any
    38a4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    38a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    38ac:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    38b0:	add	x0, x0, #0x0
    38b4:	add	x1, x1, #0x0
    38b8:	add	x3, x3, #0x0
    38bc:	mov	w2, #0x14e5                	// #5349
    38c0:	bl	0 <__assert_fail>
    38c4:	ldr	x9, [x8]
    38c8:	ldrh	w10, [x8, #8]
    38cc:	mov	x11, #0x6441                	// #25665
    38d0:	movk	x11, #0x7072, lsl #16
    38d4:	movk	x11, #0x6441, lsl #32
    38d8:	movk	x11, #0x4c64, lsl #48
    38dc:	mov	w12, #0x7264                	// #29284
    38e0:	eor	x9, x9, x11
    38e4:	eor	x10, x10, x12
    38e8:	orr	x9, x9, x10
    38ec:	cbz	x9, 39f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1328>
    38f0:	ldr	x9, [x8]
    38f4:	ldrh	w10, [x8, #8]
    38f8:	mov	x11, #0x6441                	// #25665
    38fc:	movk	x11, #0x7072, lsl #16
    3900:	movk	x11, #0x6441, lsl #32
    3904:	movk	x11, #0x5364, lsl #48
    3908:	mov	w12, #0x7274                	// #29300
    390c:	eor	x9, x9, x11
    3910:	eor	x10, x10, x12
    3914:	orr	x9, x9, x10
    3918:	cbz	x9, 3a20 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1358>
    391c:	ldr	x9, [x8]
    3920:	ldrh	w8, [x8, #8]
    3924:	mov	x10, #0x6441                	// #25665
    3928:	movk	x10, #0x7072, lsl #16
    392c:	movk	x10, #0x644c, lsl #32
    3930:	movk	x10, #0x4772, lsl #48
    3934:	mov	w11, #0x746f                	// #29807
    3938:	eor	x9, x9, x10
    393c:	eor	x8, x8, x11
    3940:	orr	x8, x9, x8
    3944:	cbnz	x8, 39d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x130c>
    3948:	mov	w8, #0x8                   	// #8
    394c:	b	39fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1334>
    3950:	ldr	x8, [x8]
    3954:	mov	x9, #0x6441                	// #25665
    3958:	movk	x9, #0x7072, lsl #16
    395c:	movk	x9, #0x6441, lsl #32
    3960:	movk	x9, #0x7072, lsl #48
    3964:	cmp	x8, x9
    3968:	b.ne	39d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x130c>  // b.any
    396c:	mov	w8, #0x1                   	// #1
    3970:	b	39fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1334>
    3974:	ldr	x10, [x8]
    3978:	ldur	x11, [x8, #5]
    397c:	mov	x9, #0x6441                	// #25665
    3980:	mov	x12, #0x7264                	// #29284
    3984:	movk	x9, #0x7072, lsl #16
    3988:	movk	x12, #0x6f47, lsl #16
    398c:	movk	x9, #0x644c, lsl #32
    3990:	movk	x12, #0x4c74, lsl #32
    3994:	movk	x9, #0x4772, lsl #48
    3998:	movk	x12, #0x7264, lsl #48
    399c:	eor	x10, x10, x9
    39a0:	eor	x11, x11, x12
    39a4:	orr	x10, x10, x11
    39a8:	cbz	x10, 3a18 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1350>
    39ac:	ldr	x10, [x8]
    39b0:	ldur	x8, [x8, #5]
    39b4:	mov	x11, #0x7264                	// #29284
    39b8:	movk	x11, #0x6f47, lsl #16
    39bc:	movk	x11, #0x5374, lsl #32
    39c0:	movk	x11, #0x7274, lsl #48
    39c4:	eor	x9, x10, x9
    39c8:	eor	x8, x8, x11
    39cc:	orr	x8, x9, x8
    39d0:	cbz	x8, 3a28 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1360>
    39d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    39d8:	add	x8, x8, #0x0
    39dc:	b	3418 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd50>
    39e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    39e4:	mov	w8, #0x503                 	// #1283
    39e8:	add	x9, x9, #0x0
    39ec:	b	3588 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xec0>
    39f0:	mov	w8, #0x3                   	// #3
    39f4:	b	3a2c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1364>
    39f8:	mov	w8, #0x2                   	// #2
    39fc:	ldr	x0, [x25]
    3a00:	str	x8, [sp, #56]
    3a04:	ldr	x8, [x0]
    3a08:	ldr	x8, [x8, #136]
    3a0c:	blr	x8
    3a10:	mov	w22, #0x2                   	// #2
    3a14:	b	3a44 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x137c>
    3a18:	mov	w8, #0x4                   	// #4
    3a1c:	b	3a2c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1364>
    3a20:	mov	w8, #0x5                   	// #5
    3a24:	b	3a2c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1364>
    3a28:	mov	w8, #0x6                   	// #6
    3a2c:	ldr	x0, [x25]
    3a30:	str	x8, [sp, #56]
    3a34:	ldr	x8, [x0]
    3a38:	ldr	x8, [x8, #136]
    3a3c:	blr	x8
    3a40:	mov	w22, #0x3                   	// #3
    3a44:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3a48:	ldr	d0, [x8]
    3a4c:	add	x8, sp, #0xa8
    3a50:	add	x8, x8, #0x10
    3a54:	str	x8, [sp, #168]
    3a58:	str	d0, [sp, #176]
    3a5c:	stp	xzr, xzr, [sp, #88]
    3a60:	ldr	x0, [x25]
    3a64:	str	x8, [sp, #48]
    3a68:	add	x1, sp, #0x58
    3a6c:	add	x24, sp, #0x58
    3a70:	ldr	x8, [x0]
    3a74:	ldr	x8, [x8, #144]
    3a78:	blr	x8
    3a7c:	tbz	w0, #0, 3aac <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13e4>
    3a80:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3a84:	add	x8, x8, #0x0
    3a88:	mov	w9, #0x103                 	// #259
    3a8c:	stp	x8, xzr, [x29, #-32]
    3a90:	sturh	w9, [x29, #-16]
    3a94:	ldr	x0, [x25]
    3a98:	sub	x1, x29, #0x20
    3a9c:	mov	x2, xzr
    3aa0:	mov	x3, xzr
    3aa4:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    3aa8:	b	3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>
    3aac:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    3ab0:	mov	w27, #0x105                 	// #261
    3ab4:	add	x28, sp, #0x90
    3ab8:	mov	w19, #0x503                 	// #1283
    3abc:	sub	x20, x29, #0x38
    3ac0:	add	x26, x26, #0x0
    3ac4:	mov	w23, #0x302                 	// #770
    3ac8:	ldr	x0, [x25]
    3acc:	ldr	x8, [x0]
    3ad0:	ldr	x8, [x8, #48]
    3ad4:	blr	x8
    3ad8:	sub	x1, x29, #0x20
    3adc:	sturh	w27, [x29, #-16]
    3ae0:	stp	x24, xzr, [x29, #-32]
    3ae4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    3ae8:	ldp	w8, w9, [sp, #176]
    3aec:	mov	x21, x0
    3af0:	cmp	w8, w9
    3af4:	b.cs	3b68 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14a0>  // b.hs, b.nlast
    3af8:	ldr	x9, [sp, #168]
    3afc:	str	x21, [x9, w8, uxtw #3]
    3b00:	ldp	w8, w9, [sp, #176]
    3b04:	cmp	w8, w9
    3b08:	b.cs	3c34 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x156c>  // b.hs, b.nlast
    3b0c:	add	w8, w8, #0x1
    3b10:	subs	w22, w22, #0x1
    3b14:	str	w8, [sp, #176]
    3b18:	b.eq	3b84 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14bc>  // b.none
    3b1c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3b20:	add	x8, x8, #0x0
    3b24:	stp	x8, x28, [x29, #-56]
    3b28:	sturh	w19, [x29, #-40]
    3b2c:	stp	x20, x26, [x29, #-32]
    3b30:	sturh	w23, [x29, #-16]
    3b34:	ldr	x0, [x25]
    3b38:	sub	x2, x29, #0x20
    3b3c:	mov	w1, #0x19                  	// #25
    3b40:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3b44:	tbnz	w0, #0, 3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>
    3b48:	stp	xzr, xzr, [sp, #88]
    3b4c:	ldr	x0, [x25]
    3b50:	add	x1, sp, #0x58
    3b54:	ldr	x8, [x0]
    3b58:	ldr	x8, [x8, #144]
    3b5c:	blr	x8
    3b60:	tbz	w0, #0, 3ac8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1400>
    3b64:	b	3a80 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13b8>
    3b68:	ldr	x1, [sp, #48]
    3b6c:	add	x0, sp, #0xa8
    3b70:	mov	w3, #0x8                   	// #8
    3b74:	mov	x2, xzr
    3b78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3b7c:	ldr	w8, [sp, #176]
    3b80:	b	3af8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1430>
    3b84:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    3b88:	add	x8, sp, #0x90
    3b8c:	mov	w9, #0x503                 	// #1283
    3b90:	sub	x10, x29, #0x38
    3b94:	mov	w11, #0x302                 	// #770
    3b98:	add	x12, x12, #0x0
    3b9c:	stp	x12, x8, [x29, #-56]
    3ba0:	sturh	w9, [x29, #-40]
    3ba4:	stp	x10, x26, [x29, #-32]
    3ba8:	sturh	w11, [x29, #-16]
    3bac:	ldr	x0, [x25]
    3bb0:	sub	x2, x29, #0x20
    3bb4:	mov	w1, #0x9                   	// #9
    3bb8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3bbc:	tbnz	w0, #0, 3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>
    3bc0:	ldr	x0, [x25]
    3bc4:	ldr	x8, [x0]
    3bc8:	ldr	x8, [x8, #56]
    3bcc:	blr	x8
    3bd0:	ldr	x8, [x0]
    3bd4:	add	x2, sp, #0xa8
    3bd8:	ldr	x1, [sp, #56]
    3bdc:	ldr	x8, [x8, #368]
    3be0:	blr	x8
    3be4:	b	3468 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xda0>
    3be8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3bec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3bf0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3bf4:	add	x0, x0, #0x0
    3bf8:	add	x1, x1, #0x0
    3bfc:	add	x3, x3, #0x0
    3c00:	mov	w2, #0x5b                  	// #91
    3c04:	bl	0 <__assert_fail>
    3c08:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3c0c:	add	x0, x0, #0x0
    3c10:	bl	0 <_ZSt20__throw_length_errorPKc>
    3c14:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3c18:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3c1c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3c20:	add	x0, x0, #0x0
    3c24:	add	x1, x1, #0x0
    3c28:	add	x3, x3, #0x0
    3c2c:	mov	w2, #0x28b                 	// #651
    3c30:	bl	0 <__assert_fail>
    3c34:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3c38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3c3c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3c40:	add	x0, x0, #0x0
    3c44:	add	x1, x1, #0x0
    3c48:	add	x3, x3, #0x0
    3c4c:	mov	w2, #0x43                  	// #67
    3c50:	bl	0 <__assert_fail>
    3c54:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3c58:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3c5c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3c60:	add	x0, x0, #0x0
    3c64:	add	x1, x1, #0x0
    3c68:	add	x3, x3, #0x0
    3c6c:	mov	w2, #0x99                  	// #153
    3c70:	bl	0 <__assert_fail>
    3c74:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3c78:	mov	w8, #0x503                 	// #1283
    3c7c:	add	x9, x9, #0x0
    3c80:	add	x10, sp, #0x40
    3c84:	sub	x0, x29, #0x20
    3c88:	mov	w1, #0x1                   	// #1
    3c8c:	sturh	w8, [x29, #-16]
    3c90:	stp	x9, x10, [x29, #-32]
    3c94:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    3c98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3c9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3ca0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3ca4:	add	x0, x0, #0x0
    3ca8:	add	x1, x1, #0x0
    3cac:	add	x3, x3, #0x0
    3cb0:	mov	w2, #0x74                  	// #116
    3cb4:	bl	0 <__assert_fail>
    3cb8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3cbc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3cc0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3cc4:	add	x0, x0, #0x0
    3cc8:	add	x1, x1, #0x0
    3ccc:	add	x3, x3, #0x0
    3cd0:	mov	w2, #0x657                 	// #1623
    3cd4:	bl	0 <__assert_fail>

0000000000003cd8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb>:
    3cd8:	str	d8, [sp, #-112]!
    3cdc:	stp	x29, x30, [sp, #16]
    3ce0:	stp	x28, x27, [sp, #32]
    3ce4:	stp	x26, x25, [sp, #48]
    3ce8:	stp	x24, x23, [sp, #64]
    3cec:	stp	x22, x21, [sp, #80]
    3cf0:	stp	x20, x19, [sp, #96]
    3cf4:	mov	x29, sp
    3cf8:	sub	sp, sp, #0x1b0
    3cfc:	str	x4, [sp, #48]
    3d00:	mov	x26, x3
    3d04:	ldr	w8, [x26, #8]!
    3d08:	cbz	w8, 65f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2920>
    3d0c:	ldr	x8, [x3]
    3d10:	mov	x19, x0
    3d14:	mov	w21, w6
    3d18:	mov	x23, x5
    3d1c:	ldr	x27, [x8]
    3d20:	mov	x22, x3
    3d24:	mov	x20, x1
    3d28:	ldr	x8, [x27]
    3d2c:	mov	x0, x27
    3d30:	ldr	x8, [x8, #32]
    3d34:	blr	x8
    3d38:	tbz	w0, #0, 6618 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2940>
    3d3c:	ldr	w8, [x27, #48]
    3d40:	str	x20, [x29, #8]
    3d44:	cmp	w8, #0x6
    3d48:	b.ne	65d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2900>  // b.any
    3d4c:	ldr	w24, [x26]
    3d50:	ldr	x20, [x27, #72]
    3d54:	ldr	w25, [x27, #80]
    3d58:	str	w21, [sp, #60]
    3d5c:	cmp	w24, #0x4
    3d60:	b.ne	3e1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x144>  // b.any
    3d64:	cmp	w25, #0x3
    3d68:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3d6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3d70:	add	x1, x1, #0x0
    3d74:	mov	x0, x20
    3d78:	mov	x2, x25
    3d7c:	bl	0 <bcmp>
    3d80:	cbz	w0, 3e58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x180>
    3d84:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3d88:	add	x1, x1, #0x0
    3d8c:	mov	x0, x20
    3d90:	mov	x2, x25
    3d94:	bl	0 <bcmp>
    3d98:	cbnz	w0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3d9c:	ldr	x10, [x22]
    3da0:	add	x8, sp, #0x60
    3da4:	adrp	x17, 0 <LLVMInitializeAArch64AsmParser>
    3da8:	movi	v0.2d, #0x0
    3dac:	ldp	x0, x11, [x10, #8]
    3db0:	add	x17, x17, #0x0
    3db4:	add	x15, x8, #0x20
    3db8:	stur	q0, [sp, #104]
    3dbc:	stur	q0, [sp, #120]
    3dc0:	stp	x15, xzr, [sp, #112]
    3dc4:	strb	wzr, [sp, #128]
    3dc8:	str	x17, [sp, #96]
    3dcc:	stp	xzr, xzr, [sp, #152]
    3dd0:	str	xzr, [sp, #136]
    3dd4:	ldr	x8, [x11, #104]
    3dd8:	sub	x9, x29, #0xb0
    3ddc:	str	x8, [sp, #200]
    3de0:	ldr	w8, [x11, #48]
    3de4:	str	w8, [sp, #144]
    3de8:	ldur	q1, [x11, #56]
    3dec:	cmp	w8, #0xe
    3df0:	stur	q1, [sp, #152]
    3df4:	b.hi	4184 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4ac>  // b.pmore
    3df8:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    3dfc:	add	x12, x12, #0x0
    3e00:	adr	x13, 3e10 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x138>
    3e04:	ldrh	w14, [x12, x8, lsl #1]
    3e08:	add	x13, x13, x14, lsl #2
    3e0c:	br	x13
    3e10:	ldur	q1, [x11, #72]
    3e14:	stur	q1, [sp, #168]
    3e18:	b	4184 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4ac>
    3e1c:	cmp	w24, #0x5
    3e20:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3e24:	cmp	w25, #0x5
    3e28:	b.eq	3f2c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x254>  // b.none
    3e2c:	cmp	w25, #0x4
    3e30:	b.eq	3f08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x230>  // b.none
    3e34:	cmp	w25, #0x3
    3e38:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3e3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3e40:	add	x1, x1, #0x0
    3e44:	mov	x0, x20
    3e48:	mov	x2, x25
    3e4c:	bl	0 <bcmp>
    3e50:	cbnz	w0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3e54:	b	4060 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x388>
    3e58:	ldr	x8, [x22]
    3e5c:	ldr	x21, [x8, #16]
    3e60:	ldr	w9, [x21, #48]
    3e64:	cmp	w9, #0x3
    3e68:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3e6c:	ldr	w9, [x21, #76]
    3e70:	cbnz	w9, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3e74:	ldr	x28, [x8, #24]
    3e78:	ldr	x8, [x28]
    3e7c:	mov	x0, x28
    3e80:	ldr	x8, [x8, #40]
    3e84:	blr	x8
    3e88:	tbz	w0, #0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3e8c:	ldr	w8, [x28, #48]
    3e90:	cbnz	w8, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    3e94:	ldr	x8, [x28, #72]
    3e98:	cbz	x8, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    3e9c:	ldr	w9, [x8]
    3ea0:	cmp	w9, #0x1
    3ea4:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3ea8:	ldr	x9, [x21]
    3eac:	ldr	x8, [x8, #16]
    3eb0:	mov	x0, x21
    3eb4:	str	x8, [sp, #32]
    3eb8:	ldr	x8, [x9, #56]
    3ebc:	blr	x8
    3ec0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3ec4:	ldr	x8, [x8]
    3ec8:	mov	w9, w0
    3ecc:	lsr	x9, x9, #3
    3ed0:	ldrh	w10, [x8, #150]
    3ed4:	cmp	w9, w10
    3ed8:	b.cs	58dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c04>  // b.hs, b.nlast
    3edc:	ldr	x8, [x8, #136]
    3ee0:	ldr	x10, [sp, #32]
    3ee4:	ldrb	w8, [x8, x9]
    3ee8:	and	w9, w0, #0x7
    3eec:	lsr	w9, w8, w9
    3ef0:	neg	x8, x10
    3ef4:	tbz	w9, #0, 58e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c0c>
    3ef8:	and	x8, x8, #0x1f
    3efc:	str	x8, [sp, #24]
    3f00:	mov	w8, #0x1f                  	// #31
    3f04:	b	58f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c18>
    3f08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f0c:	add	x1, x1, #0x0
    3f10:	mov	x0, x20
    3f14:	mov	x2, x25
    3f18:	bl	0 <bcmp>
    3f1c:	cbz	w0, 3f74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29c>
    3f20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f24:	add	x1, x1, #0x0
    3f28:	b	3f64 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28c>
    3f2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f30:	add	x1, x1, #0x0
    3f34:	mov	x0, x20
    3f38:	mov	x2, x25
    3f3c:	bl	0 <bcmp>
    3f40:	cbz	w0, 4060 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x388>
    3f44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f48:	add	x1, x1, #0x0
    3f4c:	mov	x0, x20
    3f50:	mov	x2, x25
    3f54:	bl	0 <bcmp>
    3f58:	cbz	w0, 4060 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x388>
    3f5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f60:	add	x1, x1, #0x0
    3f64:	mov	x0, x20
    3f68:	mov	x2, x25
    3f6c:	bl	0 <bcmp>
    3f70:	cbnz	w0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3f74:	ldr	x8, [x22]
    3f78:	ldr	x28, [x8, #8]
    3f7c:	ldr	w9, [x28, #48]
    3f80:	cmp	w9, #0x3
    3f84:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3f88:	ldr	w9, [x28, #76]
    3f8c:	cbnz	w9, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3f90:	ldp	x0, x21, [x8, #24]
    3f94:	ldr	x8, [x0]
    3f98:	str	x0, [sp, #32]
    3f9c:	ldr	x8, [x8, #40]
    3fa0:	blr	x8
    3fa4:	tbz	w0, #0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3fa8:	ldr	x8, [x21]
    3fac:	mov	x0, x21
    3fb0:	ldr	x8, [x8, #40]
    3fb4:	blr	x8
    3fb8:	tbz	w0, #0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    3fbc:	ldr	x9, [sp, #32]
    3fc0:	ldr	w8, [x9, #48]
    3fc4:	cbnz	w8, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    3fc8:	ldr	x8, [x9, #72]
    3fcc:	cbz	x8, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    3fd0:	ldr	w10, [x8]
    3fd4:	ldr	w9, [x21, #48]
    3fd8:	cmp	w10, #0x1
    3fdc:	csel	x8, x8, xzr, eq  // eq = none
    3fe0:	cbnz	w9, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    3fe4:	ldr	x9, [x21, #72]
    3fe8:	cbz	x9, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    3fec:	cmp	w10, #0x1
    3ff0:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    3ff4:	ldr	w10, [x9]
    3ff8:	cmp	w10, #0x1
    3ffc:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    4000:	str	x21, [sp, #24]
    4004:	ldr	x10, [x28]
    4008:	ldr	x21, [x8, #16]
    400c:	ldr	x8, [x9, #16]
    4010:	mov	x0, x28
    4014:	str	x8, [sp, #16]
    4018:	ldr	x8, [x10, #56]
    401c:	blr	x8
    4020:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4024:	ldr	x8, [x8]
    4028:	mov	w9, w0
    402c:	lsr	x9, x9, #3
    4030:	ldrh	w10, [x8, #502]
    4034:	cmp	w9, w10
    4038:	b.cs	5f38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2260>  // b.hs, b.nlast
    403c:	ldr	x8, [x8, #488]
    4040:	mov	w10, #0x40                  	// #64
    4044:	ldrb	w8, [x8, x9]
    4048:	and	w9, w0, #0x7
    404c:	lsr	w8, w8, w9
    4050:	tst	w8, #0x1
    4054:	mov	w8, #0x20                  	// #32
    4058:	csel	x8, x8, x10, eq  // eq = none
    405c:	b	5f3c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2264>
    4060:	ldr	x8, [x22]
    4064:	ldr	x28, [x8, #8]
    4068:	ldr	w9, [x28, #48]
    406c:	cmp	w9, #0x3
    4070:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    4074:	ldr	w9, [x28, #76]
    4078:	cbnz	w9, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    407c:	ldp	x0, x21, [x8, #24]
    4080:	ldr	x8, [x0]
    4084:	str	x0, [sp, #32]
    4088:	ldr	x8, [x8, #40]
    408c:	blr	x8
    4090:	tbz	w0, #0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    4094:	ldr	x8, [x21]
    4098:	mov	x0, x21
    409c:	ldr	x8, [x8, #40]
    40a0:	blr	x8
    40a4:	tbz	w0, #0, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    40a8:	ldr	x9, [sp, #32]
    40ac:	ldr	w8, [x9, #48]
    40b0:	cbnz	w8, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    40b4:	ldr	x8, [x9, #72]
    40b8:	cbz	x8, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    40bc:	ldr	w10, [x8]
    40c0:	ldr	w9, [x21, #48]
    40c4:	cmp	w10, #0x1
    40c8:	csel	x8, x8, xzr, eq  // eq = none
    40cc:	cbnz	w9, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    40d0:	ldr	x9, [x21, #72]
    40d4:	cbz	x9, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    40d8:	cmp	w10, #0x1
    40dc:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    40e0:	ldr	w10, [x9]
    40e4:	cmp	w10, #0x1
    40e8:	b.ne	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>  // b.any
    40ec:	str	x21, [sp, #24]
    40f0:	ldr	x10, [x28]
    40f4:	ldr	x21, [x8, #16]
    40f8:	ldr	x8, [x9, #16]
    40fc:	mov	x0, x28
    4100:	str	x8, [sp, #16]
    4104:	ldr	x8, [x10, #56]
    4108:	blr	x8
    410c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4110:	ldr	x8, [x8]
    4114:	mov	w9, w0
    4118:	lsr	x9, x9, #3
    411c:	ldrh	w10, [x8, #502]
    4120:	cmp	w9, w10
    4124:	b.cs	5c38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f60>  // b.hs, b.nlast
    4128:	ldr	x8, [x8, #488]
    412c:	mov	w10, #0x40                  	// #64
    4130:	ldrb	w8, [x8, x9]
    4134:	and	w9, w0, #0x7
    4138:	lsr	w8, w8, w9
    413c:	tst	w8, #0x1
    4140:	mov	w8, #0x20                  	// #32
    4144:	csel	x8, x8, x10, eq  // eq = none
    4148:	b	5c3c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f64>
    414c:	ldr	w11, [x11, #72]
    4150:	str	w11, [sp, #168]
    4154:	b	4184 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4ac>
    4158:	ldr	w12, [x11, #80]
    415c:	ldr	x11, [x11, #72]
    4160:	str	w12, [sp, #176]
    4164:	b	4180 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4a8>
    4168:	ldur	q1, [x11, #84]
    416c:	ldur	q2, [x11, #72]
    4170:	stur	q1, [sp, #180]
    4174:	stur	q2, [sp, #168]
    4178:	b	4184 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4ac>
    417c:	ldr	x11, [x11, #72]
    4180:	str	x11, [sp, #168]
    4184:	ldr	x11, [x10, #24]
    4188:	sub	x10, x29, #0xb0
    418c:	add	x16, x10, #0x20
    4190:	stur	q0, [x9, #8]
    4194:	stur	q0, [x9, #24]
    4198:	stur	xzr, [x29, #-136]
    419c:	sturb	wzr, [x29, #-144]
    41a0:	stp	x16, xzr, [x29, #-160]
    41a4:	stur	x17, [x29, #-176]
    41a8:	stp	xzr, xzr, [x29, #-120]
    41ac:	ldr	x10, [x11, #104]
    41b0:	stur	x10, [x29, #-72]
    41b4:	ldr	w10, [x11, #48]
    41b8:	stur	w10, [x29, #-128]
    41bc:	ldur	q0, [x11, #56]
    41c0:	cmp	w10, #0xe
    41c4:	stur	q0, [x9, #56]
    41c8:	b.hi	422c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x554>  // b.pmore
    41cc:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    41d0:	add	x12, x12, #0x0
    41d4:	adr	x13, 41e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x50c>
    41d8:	ldrh	w14, [x12, x10, lsl #1]
    41dc:	add	x13, x13, x14, lsl #2
    41e0:	br	x13
    41e4:	ldur	q0, [x11, #72]
    41e8:	stur	q0, [x9, #72]
    41ec:	b	422c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x554>
    41f0:	ldr	w9, [x11, #72]
    41f4:	stur	w9, [x29, #-104]
    41f8:	b	422c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x554>
    41fc:	ldr	w9, [x11, #80]
    4200:	ldr	x11, [x11, #72]
    4204:	stur	w9, [x29, #-96]
    4208:	stur	x11, [x29, #-104]
    420c:	b	422c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x554>
    4210:	ldur	q0, [x11, #84]
    4214:	ldur	q1, [x11, #72]
    4218:	stur	q0, [x9, #84]
    421c:	stur	q1, [x9, #72]
    4220:	b	422c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x554>
    4224:	ldr	x9, [x11, #72]
    4228:	stur	x9, [x29, #-104]
    422c:	ldr	w9, [x0, #48]
    4230:	str	x23, [sp, #40]
    4234:	cmp	w9, #0x3
    4238:	b.ne	424c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x574>  // b.any
    423c:	ldr	w9, [x0, #76]
    4240:	orr	w9, w9, w10
    4244:	orr	w8, w9, w8
    4248:	cbz	w8, 521c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1544>
    424c:	mov	w21, wzr
    4250:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    4254:	ldur	x0, [x29, #-160]
    4258:	ldr	x8, [x8]
    425c:	cmp	x0, x16
    4260:	add	x27, x8, #0x10
    4264:	stur	x27, [x29, #-176]
    4268:	b.eq	4288 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5b0>  // b.none
    426c:	mov	w23, w21
    4270:	mov	x21, x20
    4274:	mov	x20, x15
    4278:	bl	0 <_ZdlPv>
    427c:	mov	x15, x20
    4280:	mov	x20, x21
    4284:	mov	w21, w23
    4288:	ldr	x0, [sp, #112]
    428c:	str	x27, [sp, #96]
    4290:	cmp	x0, x15
    4294:	b.eq	429c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5c4>  // b.none
    4298:	bl	0 <_ZdlPv>
    429c:	ldr	x23, [sp, #40]
    42a0:	cbnz	w21, 5408 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1730>
    42a4:	mov	x0, x19
    42a8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    42ac:	cmp	w24, #0x4
    42b0:	b.ne	43b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6d8>  // b.any
    42b4:	ldr	x8, [x0, #192]
    42b8:	tbz	x8, #58, 43b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6d8>
    42bc:	cmp	w25, #0x4
    42c0:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    42c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    42c8:	add	x1, x1, #0x0
    42cc:	mov	x0, x20
    42d0:	mov	x2, x25
    42d4:	bl	0 <bcmp>
    42d8:	cbnz	w0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    42dc:	ldr	w8, [x26]
    42e0:	cmp	w8, #0x1
    42e4:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    42e8:	cmp	w8, #0x2
    42ec:	b.eq	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.none
    42f0:	cmp	w8, #0x3
    42f4:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    42f8:	ldr	x8, [x22]
    42fc:	ldp	x25, x27, [x8, #8]
    4300:	ldr	x20, [x8, #24]
    4304:	ldr	x9, [x25]
    4308:	mov	x0, x25
    430c:	ldr	x8, [x9, #32]
    4310:	blr	x8
    4314:	tbz	w0, #0, 4344 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x66c>
    4318:	ldr	w8, [x27, #48]
    431c:	cmp	w8, #0x3
    4320:	b.ne	4344 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x66c>  // b.any
    4324:	ldr	w8, [x27, #76]
    4328:	cmp	w8, #0x1
    432c:	b.ne	4344 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x66c>  // b.any
    4330:	ldr	x8, [x20]
    4334:	mov	x0, x20
    4338:	ldr	x8, [x8, #40]
    433c:	blr	x8
    4340:	tbnz	w0, #0, 4384 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6ac>
    4344:	ldr	w8, [x25, #48]
    4348:	cmp	w8, #0x3
    434c:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    4350:	ldr	w8, [x25, #76]
    4354:	cmp	w8, #0x1
    4358:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    435c:	ldr	x8, [x27]
    4360:	mov	x0, x27
    4364:	ldr	x8, [x8, #32]
    4368:	blr	x8
    436c:	tbz	w0, #0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4370:	ldr	x8, [x20]
    4374:	mov	x0, x20
    4378:	ldr	x8, [x8, #40]
    437c:	blr	x8
    4380:	tbz	w0, #0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4384:	ldr	x8, [x25]
    4388:	mov	x0, x25
    438c:	ldr	x8, [x8, #32]
    4390:	blr	x8
    4394:	tbz	w0, #0, 5508 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1830>
    4398:	ldr	w8, [x25, #48]
    439c:	cmp	w8, #0x6
    43a0:	b.ne	65d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2900>  // b.any
    43a4:	ldr	x9, [x25, #72]
    43a8:	ldr	w8, [x25, #80]
    43ac:	b	551c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1844>
    43b0:	cmp	w25, #0x4
    43b4:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    43b8:	cmp	w24, #0x3
    43bc:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    43c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    43c4:	add	x1, x1, #0x0
    43c8:	mov	x0, x20
    43cc:	mov	x2, x25
    43d0:	bl	0 <bcmp>
    43d4:	cbz	w0, 45f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x920>
    43d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    43dc:	add	x1, x1, #0x0
    43e0:	mov	x0, x20
    43e4:	mov	x2, x25
    43e8:	bl	0 <bcmp>
    43ec:	cbz	w0, 45f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x920>
    43f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    43f4:	add	x1, x1, #0x0
    43f8:	mov	x0, x20
    43fc:	mov	x2, x25
    4400:	bl	0 <bcmp>
    4404:	cbz	w0, 4594 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x8bc>
    4408:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    440c:	add	x1, x1, #0x0
    4410:	mov	x0, x20
    4414:	mov	x2, x25
    4418:	bl	0 <bcmp>
    441c:	cbz	w0, 4594 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x8bc>
    4420:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4424:	add	x1, x1, #0x0
    4428:	mov	x0, x20
    442c:	mov	x2, x25
    4430:	bl	0 <bcmp>
    4434:	cbz	w0, 4450 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x778>
    4438:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    443c:	add	x1, x1, #0x0
    4440:	mov	x0, x20
    4444:	mov	x2, x25
    4448:	bl	0 <bcmp>
    444c:	cbnz	w0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4450:	ldr	w8, [x26]
    4454:	cmp	w8, #0x1
    4458:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    445c:	ldr	x8, [x22]
    4460:	ldr	x0, [x8, #8]
    4464:	ldr	w8, [x0, #48]
    4468:	cmp	w8, #0x3
    446c:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    4470:	ldr	w8, [x0, #76]
    4474:	cbnz	w8, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4478:	ldr	x8, [x0]
    447c:	ldr	x8, [x8, #56]
    4480:	blr	x8
    4484:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4488:	ldr	x8, [x8]
    448c:	mov	w9, w0
    4490:	lsr	x9, x9, #3
    4494:	ldrh	w10, [x8, #502]
    4498:	cmp	w9, w10
    449c:	b.cs	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.hs, b.nlast
    44a0:	ldr	x8, [x8, #488]
    44a4:	ldrb	w8, [x8, x9]
    44a8:	and	w9, w0, #0x7
    44ac:	lsr	w8, w8, w9
    44b0:	tbz	w8, #0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    44b4:	ldr	w8, [x26]
    44b8:	cmp	w8, #0x1
    44bc:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    44c0:	ldr	x8, [x22]
    44c4:	ldr	x21, [x8, #8]
    44c8:	ldr	w8, [x21, #48]
    44cc:	cmp	w8, #0x3
    44d0:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    44d4:	ldr	w8, [x21, #76]
    44d8:	cbnz	w8, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    44dc:	ldr	x8, [x21]
    44e0:	mov	x0, x21
    44e4:	ldr	x8, [x8, #56]
    44e8:	blr	x8
    44ec:	bl	11660 <_ZN4llvmL15getWRegFromXRegEj>
    44f0:	ldr	x8, [x21]
    44f4:	mov	w25, w0
    44f8:	mov	x0, x21
    44fc:	ldr	x8, [x8, #72]
    4500:	blr	x8
    4504:	ldr	x8, [x21]
    4508:	mov	x20, x0
    450c:	mov	x0, x21
    4510:	ldr	x8, [x8, #80]
    4514:	blr	x8
    4518:	ldr	x8, [x19, #8]
    451c:	mov	x21, x0
    4520:	ldr	x9, [x8]
    4524:	mov	x0, x8
    4528:	ldr	x9, [x9, #48]
    452c:	blr	x9
    4530:	mov	x27, x0
    4534:	mov	w0, #0x70                  	// #112
    4538:	bl	0 <_Znwm>
    453c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4540:	mov	x8, x0
    4544:	add	x9, x9, #0x0
    4548:	strb	wzr, [x8, #32]!
    454c:	str	x9, [x0]
    4550:	mov	w9, #0x3                   	// #3
    4554:	str	w9, [x0, #48]
    4558:	str	x27, [x0, #104]
    455c:	str	w25, [x0, #72]
    4560:	stur	xzr, [x0, #89]
    4564:	stur	xzr, [x0, #84]
    4568:	stur	xzr, [x0, #76]
    456c:	stp	x8, xzr, [x0, #16]
    4570:	stp	x20, x21, [x0, #56]
    4574:	ldr	w8, [x26]
    4578:	cmp	w8, #0x1
    457c:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    4580:	ldr	x9, [x22]
    4584:	ldr	x8, [x9, #8]
    4588:	str	x0, [x9, #8]
    458c:	cbnz	x8, 46d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x9fc>
    4590:	b	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4594:	ldr	w8, [x26]
    4598:	cmp	w8, #0x1
    459c:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    45a0:	ldr	x8, [x22]
    45a4:	ldr	x0, [x8, #8]
    45a8:	ldr	w8, [x0, #48]
    45ac:	cmp	w8, #0x3
    45b0:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    45b4:	ldr	w8, [x0, #76]
    45b8:	cbnz	w8, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    45bc:	ldr	x8, [x0]
    45c0:	ldr	x8, [x8, #56]
    45c4:	blr	x8
    45c8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    45cc:	ldr	x8, [x8]
    45d0:	mov	w9, w0
    45d4:	lsr	x9, x9, #3
    45d8:	ldrh	w10, [x8, #502]
    45dc:	cmp	w9, w10
    45e0:	b.cs	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.hs, b.nlast
    45e4:	ldr	x8, [x8, #488]
    45e8:	ldrb	w8, [x8, x9]
    45ec:	and	w9, w0, #0x7
    45f0:	lsr	w8, w8, w9
    45f4:	tbz	w8, #0, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    45f8:	ldr	w8, [x26]
    45fc:	cmp	w8, #0x2
    4600:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    4604:	ldr	x8, [x22]
    4608:	ldr	x21, [x8, #16]
    460c:	ldr	w8, [x21, #48]
    4610:	cmp	w8, #0x3
    4614:	b.ne	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.any
    4618:	ldr	w8, [x21, #76]
    461c:	cbnz	w8, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4620:	ldr	x8, [x21]
    4624:	mov	x0, x21
    4628:	ldr	x8, [x8, #56]
    462c:	blr	x8
    4630:	bl	1152c <_ZN4llvmL15getXRegFromWRegEj>
    4634:	ldr	x8, [x21]
    4638:	mov	w25, w0
    463c:	mov	x0, x21
    4640:	ldr	x8, [x8, #72]
    4644:	blr	x8
    4648:	ldr	x8, [x21]
    464c:	mov	x20, x0
    4650:	mov	x0, x21
    4654:	ldr	x8, [x8, #80]
    4658:	blr	x8
    465c:	ldr	x8, [x19, #8]
    4660:	mov	x21, x0
    4664:	ldr	x9, [x8]
    4668:	mov	x0, x8
    466c:	ldr	x9, [x9, #48]
    4670:	blr	x9
    4674:	mov	x27, x0
    4678:	mov	w0, #0x70                  	// #112
    467c:	bl	0 <_Znwm>
    4680:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4684:	mov	x8, x0
    4688:	add	x9, x9, #0x0
    468c:	strb	wzr, [x8, #32]!
    4690:	str	x9, [x0]
    4694:	mov	w9, #0x3                   	// #3
    4698:	str	w9, [x0, #48]
    469c:	str	x27, [x0, #104]
    46a0:	str	w25, [x0, #72]
    46a4:	stur	xzr, [x0, #89]
    46a8:	stur	xzr, [x0, #84]
    46ac:	stur	xzr, [x0, #76]
    46b0:	stp	x8, xzr, [x0, #16]
    46b4:	stp	x20, x21, [x0, #56]
    46b8:	ldr	w8, [x26]
    46bc:	cmp	w8, #0x2
    46c0:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    46c4:	ldr	x9, [x22]
    46c8:	ldr	x8, [x9, #16]
    46cc:	str	x0, [x9, #16]
    46d0:	cbz	x8, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    46d4:	ldr	x9, [x8]
    46d8:	mov	x0, x8
    46dc:	ldr	x9, [x9, #8]
    46e0:	blr	x9
    46e4:	add	x27, sp, #0x60
    46e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    46ec:	ldr	d8, [x8]
    46f0:	add	x8, x27, #0x20
    46f4:	str	x8, [sp, #112]
    46f8:	ldr	w8, [sp, #60]
    46fc:	add	x2, sp, #0x60
    4700:	add	x4, sp, #0x40
    4704:	mov	w6, #0x1                   	// #1
    4708:	and	w21, w8, #0x1
    470c:	mov	x0, x19
    4710:	mov	x1, x22
    4714:	mov	x3, x23
    4718:	mov	w5, w21
    471c:	stp	xzr, xzr, [sp, #96]
    4720:	stp	xzr, xzr, [sp, #64]
    4724:	str	d8, [sp, #120]
    4728:	str	xzr, [sp, #80]
    472c:	bl	11794 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    4730:	cmp	w0, #0x4
    4734:	b.ne	487c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xba4>  // b.any
    4738:	sub	x8, x29, #0xb0
    473c:	add	x23, x8, #0x10
    4740:	stur	x23, [x29, #-176]
    4744:	stur	d8, [x29, #-168]
    4748:	ldr	w8, [x26]
    474c:	cmp	w8, #0x2
    4750:	b.cc	47dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb04>  // b.lo, b.ul, b.last
    4754:	mov	w9, #0x2                   	// #2
    4758:	sub	x20, x9, x8
    475c:	mov	w24, #0x1                   	// #1
    4760:	ldr	x8, [x22]
    4764:	ldr	x0, [x8, x24, lsl #3]
    4768:	ldr	x8, [x0]
    476c:	ldr	x8, [x8, #72]
    4770:	blr	x8
    4774:	ldp	w8, w9, [x29, #-168]
    4778:	mov	x21, x0
    477c:	cmp	w8, w9
    4780:	b.cs	47c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xae8>  // b.hs, b.nlast
    4784:	ldur	x9, [x29, #-176]
    4788:	str	x21, [x9, w8, uxtw #3]
    478c:	ldp	w8, w9, [x29, #-168]
    4790:	cmp	w8, w9
    4794:	b.cs	6598 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28c0>  // b.hs, b.nlast
    4798:	add	x9, x20, x24
    479c:	add	w8, w8, #0x1
    47a0:	cmp	x9, #0x1
    47a4:	stur	w8, [x29, #-168]
    47a8:	b.eq	47dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb04>  // b.none
    47ac:	ldr	w8, [x26]
    47b0:	add	x24, x24, #0x1
    47b4:	cmp	x24, x8
    47b8:	b.cc	4760 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa88>  // b.lo, b.ul, b.last
    47bc:	b	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>
    47c0:	sub	x0, x29, #0xb0
    47c4:	mov	w3, #0x8                   	// #8
    47c8:	mov	x1, x23
    47cc:	mov	x2, xzr
    47d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    47d4:	ldur	w8, [x29, #-168]
    47d8:	b	4784 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xaac>
    47dc:	ldr	x0, [x19, #8]
    47e0:	ldr	x8, [x0]
    47e4:	ldr	x8, [x8, #48]
    47e8:	blr	x8
    47ec:	ldr	x10, [x19, #168]
    47f0:	ldr	w8, [sp, #96]
    47f4:	ldr	w9, [x10, #24]
    47f8:	cmp	w9, w8
    47fc:	b.ls	6678 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29a0>  // b.plast
    4800:	ldr	x14, [x10]
    4804:	ldr	x9, [x0, #24]
    4808:	ldrb	w16, [x19, #224]
    480c:	ldrb	w12, [x19, #225]
    4810:	add	x15, x14, x8, lsl #6
    4814:	ldp	w10, w13, [x19, #228]
    4818:	ldr	w11, [x19, #236]
    481c:	ldr	x17, [x15, #16]!
    4820:	sub	w18, w8, #0xae1
    4824:	cmp	w18, #0x4
    4828:	b.cc	4908 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc30>  // b.lo, b.ul, b.last
    482c:	sub	w18, w8, #0xae5
    4830:	cmp	w18, #0x4
    4834:	b.cs	4b54 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe7c>  // b.hs, b.nlast
    4838:	ldr	x20, [x29, #8]
    483c:	ands	w17, w17, #0x7
    4840:	b.eq	66d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.none
    4844:	ldr	w18, [sp, #120]
    4848:	cbz	w18, 6638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2960>
    484c:	ldr	x0, [sp, #112]
    4850:	ldrb	w1, [x0]
    4854:	cmp	w1, #0x1
    4858:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    485c:	cmp	w18, #0x1
    4860:	b.ls	6638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2960>  // b.plast
    4864:	ldrb	w18, [x0, #16]
    4868:	cmp	w18, #0x1
    486c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4870:	ldr	w18, [x0, #8]
    4874:	ldr	w2, [x0, #24]
    4878:	b	4948 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc70>
    487c:	ldr	q0, [sp, #64]
    4880:	ldr	x8, [sp, #80]
    4884:	ldr	x20, [x23]
    4888:	mov	w24, w0
    488c:	add	x2, sp, #0x60
    4890:	add	x4, sp, #0x40
    4894:	mov	x0, x19
    4898:	mov	x1, x22
    489c:	mov	x3, x23
    48a0:	mov	w5, w21
    48a4:	mov	w6, wzr
    48a8:	stur	q0, [x29, #-176]
    48ac:	stur	x8, [x29, #-160]
    48b0:	bl	11794 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    48b4:	mov	w25, w0
    48b8:	cbz	w0, 49ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcd4>
    48bc:	sub	w8, w25, #0x7
    48c0:	cmp	w8, #0x8d
    48c4:	b.cs	50f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1418>  // b.hs, b.nlast
    48c8:	ldr	x9, [x23]
    48cc:	ldr	w8, [x26]
    48d0:	cmp	x9, x8
    48d4:	b.cs	4a20 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd48>  // b.hs, b.nlast
    48d8:	ldr	x8, [x22]
    48dc:	ldr	x0, [x8, x9, lsl #3]
    48e0:	ldr	x8, [x0]
    48e4:	ldr	x8, [x8, #72]
    48e8:	blr	x8
    48ec:	ldr	x8, [x29, #8]
    48f0:	ldr	x3, [x23]
    48f4:	cmp	x0, #0x0
    48f8:	mov	w2, w25
    48fc:	csel	x1, x8, x0, eq  // eq = none
    4900:	mov	x0, x19
    4904:	b	520c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1534>
    4908:	ands	w17, w17, #0x7
    490c:	b.eq	66f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a18>  // b.none
    4910:	ldr	w18, [sp, #120]
    4914:	ldr	x20, [x29, #8]
    4918:	cbz	w18, 6638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2960>
    491c:	ldr	x0, [sp, #112]
    4920:	ldrb	w1, [x0]
    4924:	cmp	w1, #0x1
    4928:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    492c:	cmp	w18, #0x2
    4930:	b.ls	6638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2960>  // b.plast
    4934:	ldrb	w18, [x0, #32]
    4938:	cmp	w18, #0x1
    493c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4940:	ldr	w18, [x0, #8]
    4944:	ldr	w2, [x0, #40]
    4948:	mov	w1, #0x1                   	// #1
    494c:	mov	w0, #0x100                 	// #256
    4950:	bfi	x0, x17, #32, #32
    4954:	mov	w17, w18
    4958:	orr	x18, x0, x1
    495c:	bfi	x17, x2, #32, #32
    4960:	stp	x18, x17, [x19, #224]
    4964:	cbz	w16, 4d38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1060>
    4968:	cmp	w8, #0x1b7
    496c:	b.eq	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.none
    4970:	cmp	w8, #0x7be
    4974:	b.ne	4b40 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe68>  // b.any
    4978:	sub	w9, w8, #0xf2
    497c:	cmp	w9, #0x13
    4980:	b.ls	4a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd80>  // b.plast
    4984:	mov	w9, #0xffffeeb1            	// #-4431
    4988:	add	w8, w8, w9
    498c:	cmp	w8, #0xd
    4990:	b.hi	53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>  // b.pmore
    4994:	mov	w9, #0x1                   	// #1
    4998:	lsl	w8, w9, w8
    499c:	mov	w9, #0x2211                	// #8721
    49a0:	tst	w8, w9
    49a4:	b.ne	4a70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd98>  // b.any
    49a8:	b	53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>
    49ac:	ldr	x8, [x23]
    49b0:	cmp	x8, #0x1
    49b4:	b.ne	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x143c>  // b.any
    49b8:	ldr	w8, [x26]
    49bc:	cmp	w8, #0x2
    49c0:	b.cc	5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x143c>  // b.lo, b.ul, b.last
    49c4:	ldr	x8, [x22]
    49c8:	ldr	x0, [x8, #8]
    49cc:	ldr	x8, [x0]
    49d0:	ldr	x8, [x8, #32]
    49d4:	blr	x8
    49d8:	tbz	w0, #0, 5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x143c>
    49dc:	ldr	w8, [x26]
    49e0:	cmp	w8, #0x1
    49e4:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    49e8:	ldr	x8, [x22]
    49ec:	ldr	x8, [x8, #8]
    49f0:	ldr	w9, [x8, #48]
    49f4:	cmp	w9, #0x6
    49f8:	b.ne	677c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2aa4>  // b.any
    49fc:	ldrb	w8, [x8, #84]
    4a00:	cbz	w8, 5114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x143c>
    4a04:	str	x20, [x23]
    4a08:	ldur	q0, [x29, #-176]
    4a0c:	ldur	x8, [x29, #-160]
    4a10:	mov	w25, w24
    4a14:	str	q0, [sp, #64]
    4a18:	str	x8, [sp, #80]
    4a1c:	b	48bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbe4>
    4a20:	ldr	x20, [x29, #8]
    4a24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4a28:	add	x9, x9, #0x0
    4a2c:	mov	w10, #0x103                 	// #259
    4a30:	stp	x9, xzr, [x29, #-176]
    4a34:	sturh	w10, [x29, #-160]
    4a38:	cbz	w8, 6730 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a58>
    4a3c:	ldr	x9, [x22]
    4a40:	add	x8, x9, x8, lsl #3
    4a44:	ldur	x0, [x8, #-8]
    4a48:	ldr	x8, [x0]
    4a4c:	ldr	x8, [x8, #80]
    4a50:	blr	x8
    4a54:	b	51cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x14f4>
    4a58:	mov	w10, #0x1                   	// #1
    4a5c:	lsl	w9, w10, w9
    4a60:	mov	w10, #0x8011                	// #32785
    4a64:	movk	w10, #0x8, lsl #16
    4a68:	tst	w9, w10
    4a6c:	b.eq	4984 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.none
    4a70:	ldr	w8, [sp, #120]
    4a74:	cmp	w8, #0x2
    4a78:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4a7c:	ldr	x8, [sp, #112]
    4a80:	ldrb	w9, [x8, #32]
    4a84:	cmp	w9, #0x4
    4a88:	b.ne	53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>  // b.any
    4a8c:	ldr	x0, [x8, #40]
    4a90:	sub	x1, x29, #0x2c
    4a94:	sub	x2, x29, #0x30
    4a98:	sub	x3, x29, #0x38
    4a9c:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    4aa0:	tbz	w0, #0, 53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>
    4aa4:	ldurh	w8, [x29, #-48]
    4aa8:	orr	w8, w8, #0x2
    4aac:	cmp	w8, #0x16
    4ab0:	b.ne	4ac0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xde8>  // b.any
    4ab4:	ldr	w8, [sp, #96]
    4ab8:	cmp	w8, #0x105
    4abc:	b.eq	53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>  // b.none
    4ac0:	ldur	w8, [x29, #-44]
    4ac4:	cmp	w8, #0x39
    4ac8:	b.hi	4ae4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe0c>  // b.pmore
    4acc:	mov	w9, #0x1                   	// #1
    4ad0:	mov	x10, #0x3a000000000         	// #3985729650688
    4ad4:	lsl	x9, x9, x8
    4ad8:	movk	x10, #0x2a0, lsl #48
    4adc:	tst	x9, x10
    4ae0:	b.ne	4b04 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe2c>  // b.any
    4ae4:	sub	w8, w8, #0x121
    4ae8:	cmp	w8, #0x6
    4aec:	b.hi	4b14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe3c>  // b.pmore
    4af0:	mov	w9, #0x1                   	// #1
    4af4:	lsl	w8, w9, w8
    4af8:	mov	w9, #0x51                  	// #81
    4afc:	tst	w8, w9
    4b00:	b.eq	4b14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe3c>  // b.none
    4b04:	ldr	w8, [sp, #96]
    4b08:	orr	w8, w8, #0x4
    4b0c:	cmp	w8, #0x105
    4b10:	b.eq	53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>  // b.none
    4b14:	ldur	w8, [x29, #-168]
    4b18:	cbz	w8, 681c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b44>
    4b1c:	ldur	x9, [x29, #-176]
    4b20:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    4b24:	add	x10, x10, #0x0
    4b28:	mov	w11, #0x103                 	// #259
    4b2c:	add	x8, x9, x8, lsl #3
    4b30:	ldur	x1, [x8, #-8]
    4b34:	stp	x10, xzr, [x29, #-40]
    4b38:	sturh	w11, [x29, #-24]
    4b3c:	b	538c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16b4>
    4b40:	ldr	x17, [x15]
    4b44:	tbnz	w17, #3, 4b88 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xeb0>
    4b48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4b4c:	add	x8, x8, #0x0
    4b50:	b	4ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x131c>
    4b54:	ldr	x20, [x29, #8]
    4b58:	cmp	w8, #0xae9
    4b5c:	b.ne	4c74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf9c>  // b.any
    4b60:	ldr	w17, [sp, #120]
    4b64:	cbz	w17, 6638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2960>
    4b68:	ldr	x17, [sp, #112]
    4b6c:	ldrb	w18, [x17]
    4b70:	cmp	w18, #0x1
    4b74:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4b78:	ldr	w18, [x17, #8]
    4b7c:	mov	x0, xzr
    4b80:	mov	w1, #0x1                   	// #1
    4b84:	b	4950 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc78>
    4b88:	ldr	w16, [sp, #120]
    4b8c:	cbz	w16, 6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>
    4b90:	ldr	x15, [sp, #112]
    4b94:	ldrb	w18, [x15]
    4b98:	cmp	w18, #0x1
    4b9c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4ba0:	ldr	w18, [x15, #8]
    4ba4:	cmp	w18, w13
    4ba8:	b.ne	4c80 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfa8>  // b.any
    4bac:	cmp	w16, #0x2
    4bb0:	b.cc	4c98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfc0>  // b.lo, b.ul, b.last
    4bb4:	add	x2, x14, x8, lsl #6
    4bb8:	sub	w14, w13, #0xf5
    4bbc:	add	x18, x15, #0x18
    4bc0:	mov	w0, #0x1                   	// #1
    4bc4:	add	x1, x2, #0x2
    4bc8:	add	x2, x2, #0x28
    4bcc:	mov	w3, #0xc                   	// #12
    4bd0:	b	4be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf10>
    4bd4:	add	x0, x0, #0x1
    4bd8:	add	x3, x3, #0x8
    4bdc:	cmp	x16, x0
    4be0:	add	x18, x18, #0x10
    4be4:	b.eq	4c98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfc0>  // b.none
    4be8:	ldurb	w4, [x18, #-8]
    4bec:	cmp	w4, #0x1
    4bf0:	b.ne	4bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xefc>  // b.any
    4bf4:	ldrh	w4, [x1]
    4bf8:	cmp	x0, x4
    4bfc:	b.cs	4c0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf34>  // b.hs, b.nlast
    4c00:	ldr	x4, [x2]
    4c04:	ldrb	w4, [x4, x3]
    4c08:	tbnz	w4, #0, 4bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xefc>
    4c0c:	cmp	w14, #0x20
    4c10:	b.cs	6750 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>  // b.hs, b.nlast
    4c14:	ldr	w4, [x18]
    4c18:	cmp	w13, w4
    4c1c:	b.eq	4c5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf84>  // b.none
    4c20:	add	w5, w4, #0x7c
    4c24:	cmp	w5, w13
    4c28:	b.eq	4c5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf84>  // b.none
    4c2c:	add	w5, w4, #0xcc
    4c30:	cmp	w5, w13
    4c34:	b.eq	4c5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf84>  // b.none
    4c38:	add	w5, w4, #0x5c
    4c3c:	cmp	w5, w13
    4c40:	b.eq	4c5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf84>  // b.none
    4c44:	add	w5, w4, #0xec
    4c48:	cmp	w5, w13
    4c4c:	b.eq	4c5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf84>  // b.none
    4c50:	add	w4, w4, #0xac
    4c54:	cmp	w4, w13
    4c58:	b.ne	4bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xefc>  // b.any
    4c5c:	ldur	w8, [x29, #-168]
    4c60:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4c64:	ldur	x8, [x29, #-176]
    4c68:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4c6c:	add	x9, x9, #0x0
    4c70:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4c74:	mov	x0, xzr
    4c78:	mov	x1, xzr
    4c7c:	b	4950 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc78>
    4c80:	ldur	w8, [x29, #-168]
    4c84:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4c88:	ldur	x8, [x29, #-176]
    4c8c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4c90:	add	x9, x9, #0x0
    4c94:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4c98:	cbz	w12, 4d38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1060>
    4c9c:	cmp	w16, #0x2
    4ca0:	b.cc	4fec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1314>  // b.lo, b.ul, b.last
    4ca4:	adrp	x12, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4ca8:	ldr	x12, [x12]
    4cac:	add	x18, x15, #0x18
    4cb0:	ldr	x13, [x12, #72]
    4cb4:	ldrh	w14, [x12, #86]
    4cb8:	mov	w12, #0x1                   	// #1
    4cbc:	b	4cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xff8>
    4cc0:	add	x12, x12, #0x1
    4cc4:	cmp	x16, x12
    4cc8:	add	x18, x18, #0x10
    4ccc:	b.eq	4fec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1314>  // b.none
    4cd0:	ldurb	w0, [x18, #-8]
    4cd4:	cmp	w0, #0x1
    4cd8:	b.ne	4cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfe8>  // b.any
    4cdc:	ldr	w0, [x18]
    4ce0:	lsr	x1, x0, #3
    4ce4:	cmp	w1, w14
    4ce8:	b.cs	4cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfe8>  // b.hs, b.nlast
    4cec:	ldrb	w1, [x13, x1]
    4cf0:	and	w0, w0, #0x7
    4cf4:	lsr	w0, w1, w0
    4cf8:	tbz	w0, #0, 4cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfe8>
    4cfc:	ands	x13, x17, #0x7
    4d00:	b.eq	4fec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1314>  // b.none
    4d04:	cmp	w16, w12
    4d08:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4d0c:	and	x12, x12, #0xffffffff
    4d10:	lsl	x14, x12, #4
    4d14:	ldrb	w14, [x15, x14]
    4d18:	cmp	w14, #0x1
    4d1c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4d20:	add	x12, x15, x12, lsl #4
    4d24:	ldr	w12, [x12, #8]
    4d28:	cmp	w12, w11
    4d2c:	b.ne	60c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23e8>  // b.any
    4d30:	cmp	x13, x10
    4d34:	b.ne	60cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23f4>  // b.any
    4d38:	sub	w10, w8, #0x9a6
    4d3c:	cmp	w10, #0x5e
    4d40:	b.hi	4db4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10dc>  // b.pmore
    4d44:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    4d48:	add	x11, x11, #0x0
    4d4c:	adr	x12, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4d50:	ldrh	w13, [x11, x10, lsl #1]
    4d54:	add	x12, x12, x13, lsl #2
    4d58:	br	x12
    4d5c:	ldr	w11, [sp, #120]
    4d60:	cmp	w11, #0x1
    4d64:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4d68:	ldr	x10, [sp, #112]
    4d6c:	ldrb	w12, [x10, #16]
    4d70:	cmp	w12, #0x1
    4d74:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4d78:	cmp	w11, #0x2
    4d7c:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4d80:	ldrb	w11, [x10, #32]
    4d84:	cmp	w11, #0x1
    4d88:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4d8c:	ldr	w11, [x10, #24]
    4d90:	ldr	w10, [x10, #40]
    4d94:	cmp	w11, w10
    4d98:	b.ne	4e34 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x115c>  // b.any
    4d9c:	ldur	w8, [x29, #-168]
    4da0:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4da4:	ldur	x8, [x29, #-176]
    4da8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4dac:	add	x9, x9, #0x0
    4db0:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4db4:	mov	w10, #0xffffef3b            	// #-4293
    4db8:	add	w10, w8, w10
    4dbc:	cmp	w10, #0x6a
    4dc0:	b.hi	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.pmore
    4dc4:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    4dc8:	add	x11, x11, #0x0
    4dcc:	adr	x12, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4dd0:	ldrh	w13, [x11, x10, lsl #1]
    4dd4:	add	x12, x12, x13, lsl #2
    4dd8:	br	x12
    4ddc:	ldr	w11, [sp, #120]
    4de0:	cmp	w11, #0x1
    4de4:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4de8:	ldr	x10, [sp, #112]
    4dec:	ldrb	w12, [x10, #16]
    4df0:	cmp	w12, #0x1
    4df4:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4df8:	cmp	w11, #0x2
    4dfc:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4e00:	ldrb	w11, [x10, #32]
    4e04:	cmp	w11, #0x1
    4e08:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4e0c:	ldr	w11, [x10, #24]
    4e10:	ldr	w10, [x10, #40]
    4e14:	cmp	w11, w10
    4e18:	b.ne	4f9c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12c4>  // b.any
    4e1c:	ldur	w8, [x29, #-168]
    4e20:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4e24:	ldur	x8, [x29, #-176]
    4e28:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4e2c:	add	x9, x9, #0x0
    4e30:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4e34:	ldr	w12, [x9, #8]
    4e38:	cmp	w12, w11
    4e3c:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    4e40:	ldr	x12, [x9, #48]
    4e44:	cbz	x12, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    4e48:	ldr	x9, [x9]
    4e4c:	mov	w13, #0x18                  	// #24
    4e50:	madd	x9, x11, x13, x9
    4e54:	ldr	w13, [x9, #8]
    4e58:	ldrh	w9, [x12, x13, lsl #1]
    4e5c:	cbz	w9, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4e60:	add	w9, w9, w11
    4e64:	add	x11, x12, x13, lsl #1
    4e68:	add	x11, x11, #0x2
    4e6c:	cmp	w10, w9, uxth
    4e70:	b.eq	4d9c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10c4>  // b.none
    4e74:	ldrh	w12, [x11], #2
    4e78:	add	w9, w12, w9
    4e7c:	cbnz	w12, 4e6c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1194>
    4e80:	b	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4e84:	ldr	w10, [sp, #120]
    4e88:	cmp	w10, #0x1
    4e8c:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4e90:	ldr	x13, [sp, #112]
    4e94:	ldrb	w11, [x13, #16]
    4e98:	cmp	w11, #0x1
    4e9c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4ea0:	cmp	w10, #0x2
    4ea4:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4ea8:	ldrb	w11, [x13, #32]
    4eac:	cmp	w11, #0x1
    4eb0:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4eb4:	cmp	w10, #0x3
    4eb8:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4ebc:	ldrb	w10, [x13, #48]
    4ec0:	cmp	w10, #0x1
    4ec4:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4ec8:	ldr	w15, [x13, #24]
    4ecc:	ldr	w10, [x13, #56]
    4ed0:	cmp	w15, w10
    4ed4:	b.ne	507c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13a4>  // b.any
    4ed8:	ldur	w8, [x29, #-168]
    4edc:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4ee0:	ldur	x8, [x29, #-176]
    4ee4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4ee8:	add	x9, x9, #0x0
    4eec:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4ef0:	ldr	w10, [sp, #120]
    4ef4:	cbz	w10, 6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>
    4ef8:	ldr	x13, [sp, #112]
    4efc:	ldrb	w11, [x13]
    4f00:	cmp	w11, #0x1
    4f04:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4f08:	cmp	w10, #0x1
    4f0c:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4f10:	ldrb	w11, [x13, #16]
    4f14:	cmp	w11, #0x1
    4f18:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4f1c:	cmp	w10, #0x2
    4f20:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4f24:	ldrb	w10, [x13, #32]
    4f28:	cmp	w10, #0x1
    4f2c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4f30:	ldr	w10, [x13, #8]
    4f34:	ldr	w12, [x13, #24]
    4f38:	cmp	w10, w12
    4f3c:	b.ne	5430 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1758>  // b.any
    4f40:	ldur	w8, [x29, #-168]
    4f44:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    4f48:	ldur	x8, [x29, #-176]
    4f4c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4f50:	add	x9, x9, #0x0
    4f54:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    4f58:	ldr	w10, [sp, #120]
    4f5c:	cmp	w10, #0x1
    4f60:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4f64:	ldr	x9, [sp, #112]
    4f68:	ldrb	w11, [x9, #16]
    4f6c:	cmp	w11, #0x1
    4f70:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4f74:	cmp	w10, #0x2
    4f78:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    4f7c:	ldrb	w10, [x9, #32]
    4f80:	cmp	w10, #0x1
    4f84:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    4f88:	ldr	w10, [x9, #24]
    4f8c:	ldr	w9, [x9, #40]
    4f90:	cmp	w10, w9
    4f94:	b.ne	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.any
    4f98:	b	5ba0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ec8>
    4f9c:	ldr	w12, [x9, #8]
    4fa0:	cmp	w12, w11
    4fa4:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    4fa8:	ldr	x12, [x9, #48]
    4fac:	cbz	x12, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    4fb0:	ldr	x9, [x9]
    4fb4:	mov	w13, #0x18                  	// #24
    4fb8:	madd	x9, x11, x13, x9
    4fbc:	ldr	w13, [x9, #8]
    4fc0:	ldrh	w9, [x12, x13, lsl #1]
    4fc4:	cbz	w9, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4fc8:	add	w9, w9, w11
    4fcc:	add	x11, x12, x13, lsl #1
    4fd0:	add	x11, x11, #0x2
    4fd4:	cmp	w10, w9, uxth
    4fd8:	b.eq	4e1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1144>  // b.none
    4fdc:	ldrh	w12, [x11], #2
    4fe0:	add	w9, w12, w9
    4fe4:	cbnz	w12, 4fd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x12fc>
    4fe8:	b	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    4fec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4ff0:	add	x8, x8, #0x0
    4ff4:	mov	w9, #0x103                 	// #259
    4ff8:	stp	x8, xzr, [x29, #-40]
    4ffc:	sturh	w9, [x29, #-24]
    5000:	ldr	x0, [x19, #8]
    5004:	sub	x2, x29, #0x28
    5008:	mov	x1, x20
    500c:	b	5394 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16bc>
    5010:	ldr	w10, [sp, #120]
    5014:	cmp	w10, #0x1
    5018:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    501c:	ldr	x13, [sp, #112]
    5020:	ldrb	w11, [x13, #16]
    5024:	cmp	w11, #0x1
    5028:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    502c:	cmp	w10, #0x2
    5030:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    5034:	ldrb	w11, [x13, #32]
    5038:	cmp	w11, #0x1
    503c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    5040:	cmp	w10, #0x3
    5044:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    5048:	ldrb	w10, [x13, #48]
    504c:	cmp	w10, #0x1
    5050:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    5054:	ldr	w15, [x13, #24]
    5058:	ldr	w10, [x13, #56]
    505c:	cmp	w15, w10
    5060:	b.ne	5494 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17bc>  // b.any
    5064:	ldur	w8, [x29, #-168]
    5068:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    506c:	ldur	x8, [x29, #-176]
    5070:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5074:	add	x9, x9, #0x0
    5078:	b	537c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16a4>
    507c:	ldr	w12, [x9, #8]
    5080:	cmp	w12, w15
    5084:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    5088:	ldr	x11, [x9, #48]
    508c:	cbz	x11, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    5090:	ldr	x14, [x9]
    5094:	mov	w9, #0x18                  	// #24
    5098:	madd	x9, x15, x9, x14
    509c:	ldr	w16, [x9, #8]
    50a0:	ldr	w9, [x13, #40]
    50a4:	ldrh	w17, [x11, x16, lsl #1]
    50a8:	cbz	w17, 50cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13f4>
    50ac:	add	w13, w17, w15
    50b0:	add	x15, x11, x16, lsl #1
    50b4:	add	x15, x15, #0x2
    50b8:	cmp	w10, w13, uxth
    50bc:	b.eq	4ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1200>  // b.none
    50c0:	ldrh	w16, [x15], #2
    50c4:	add	w13, w16, w13
    50c8:	cbnz	w16, 50b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13e0>
    50cc:	cmp	w9, w10
    50d0:	b.ne	5560 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1888>  // b.any
    50d4:	ldur	w8, [x29, #-168]
    50d8:	cmp	w8, #0x1
    50dc:	b.ls	6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>  // b.plast
    50e0:	ldur	x8, [x29, #-176]
    50e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    50e8:	add	x9, x9, #0x0
    50ec:	b	5bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ee0>
    50f0:	cmp	w25, #0x4
    50f4:	b.hi	6698 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29c0>  // b.pmore
    50f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    50fc:	mov	w8, w25
    5100:	add	x9, x9, #0x0
    5104:	adr	x10, 4738 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa60>
    5108:	ldrh	w11, [x9, x8, lsl #1]
    510c:	add	x10, x10, x11, lsl #2
    5110:	br	x10
    5114:	ldr	x8, [x23]
    5118:	cmn	x8, #0x1
    511c:	b.eq	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.none
    5120:	ldr	w9, [x26]
    5124:	ldr	x20, [x29, #8]
    5128:	cmp	x8, x9
    512c:	b.cs	51ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x14d4>  // b.hs, b.nlast
    5130:	ldr	x9, [x22]
    5134:	ldr	x0, [x9, x8, lsl #3]
    5138:	ldr	x8, [x0]
    513c:	ldr	x8, [x8, #72]
    5140:	blr	x8
    5144:	ldr	x8, [x23]
    5148:	ldr	w9, [x22, #8]
    514c:	cmp	x0, #0x0
    5150:	csel	x20, x20, x0, eq  // eq = none
    5154:	cmp	x8, x9
    5158:	b.cs	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.hs, b.nlast
    515c:	ldr	x9, [x22]
    5160:	ldr	x0, [x9, x8, lsl #3]
    5164:	ldr	x8, [x0]
    5168:	ldr	x8, [x8, #32]
    516c:	blr	x8
    5170:	ldr	x3, [x23]
    5174:	tbz	w0, #0, 5200 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1528>
    5178:	ldr	w8, [x26]
    517c:	cmp	x3, x8
    5180:	b.cs	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.hs, b.nlast
    5184:	ldr	x8, [x22]
    5188:	ldr	x8, [x8, x3, lsl #3]
    518c:	ldr	w9, [x8, #48]
    5190:	cmp	w9, #0x6
    5194:	b.ne	677c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2aa4>  // b.any
    5198:	ldrb	w8, [x8, #84]
    519c:	cmp	w8, #0x0
    51a0:	mov	w8, #0x6                   	// #6
    51a4:	csel	w2, wzr, w8, eq  // eq = none
    51a8:	b	5204 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x152c>
    51ac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    51b0:	add	x8, x8, #0x0
    51b4:	mov	w9, #0x103                 	// #259
    51b8:	stp	x8, xzr, [x29, #-176]
    51bc:	sturh	w9, [x29, #-160]
    51c0:	ldr	x0, [x19, #8]
    51c4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    51c8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    51cc:	cmp	x20, #0x0
    51d0:	cset	w8, ne  // ne = any
    51d4:	cmp	x0, #0x0
    51d8:	cset	w9, ne  // ne = any
    51dc:	cmp	w8, w9
    51e0:	b.ne	66b0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.any
    51e4:	mov	x4, x0
    51e8:	ldr	x0, [x19, #8]
    51ec:	sub	x2, x29, #0xb0
    51f0:	mov	x1, x20
    51f4:	mov	x3, x20
    51f8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    51fc:	b	5214 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x153c>
    5200:	mov	w2, wzr
    5204:	mov	x0, x19
    5208:	mov	x1, x20
    520c:	mov	x4, x22
    5210:	bl	12958 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>
    5214:	mov	w28, w0
    5218:	b	53f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1718>
    521c:	ldr	x9, [sp, #168]
    5220:	cbz	x9, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    5224:	ldr	w10, [x9]
    5228:	ldur	x8, [x29, #-104]
    522c:	cmp	w10, #0x1
    5230:	csel	x9, x9, xzr, eq  // eq = none
    5234:	cbz	x8, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    5238:	cmp	w10, #0x1
    523c:	mov	w21, wzr
    5240:	b.ne	4250 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x578>  // b.any
    5244:	ldr	w10, [x8]
    5248:	cmp	w10, #0x1
    524c:	b.ne	4250 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x578>  // b.any
    5250:	stp	x16, x15, [sp, #24]
    5254:	ldr	x10, [x0]
    5258:	ldr	x28, [x8, #16]
    525c:	ldr	x21, [x9, #16]
    5260:	ldr	x8, [x10, #56]
    5264:	blr	x8
    5268:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    526c:	ldr	x8, [x8]
    5270:	mov	w9, w0
    5274:	lsr	x9, x9, #3
    5278:	ldrh	w10, [x8, #502]
    527c:	cmp	w9, w10
    5280:	b.cs	5720 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a48>  // b.hs, b.nlast
    5284:	ldr	x8, [x8, #488]
    5288:	mov	w10, #0x40                  	// #64
    528c:	ldrb	w8, [x8, x9]
    5290:	and	w9, w0, #0x7
    5294:	lsr	w8, w8, w9
    5298:	tst	w8, #0x1
    529c:	mov	w8, #0x20                  	// #32
    52a0:	csel	x11, x8, x10, eq  // eq = none
    52a4:	b	5724 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a4c>
    52a8:	ldr	w10, [sp, #120]
    52ac:	cbz	w10, 6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>
    52b0:	ldr	x15, [sp, #112]
    52b4:	ldrb	w11, [x15]
    52b8:	cmp	w11, #0x1
    52bc:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    52c0:	cmp	w10, #0x1
    52c4:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    52c8:	ldrb	w11, [x15, #16]
    52cc:	cmp	w11, #0x1
    52d0:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    52d4:	cmp	w10, #0x2
    52d8:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    52dc:	ldrb	w11, [x15, #32]
    52e0:	cmp	w11, #0x1
    52e4:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    52e8:	cmp	w10, #0x3
    52ec:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    52f0:	ldrb	w10, [x15, #48]
    52f4:	cmp	w10, #0x1
    52f8:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    52fc:	ldr	w10, [x15, #8]
    5300:	ldr	w16, [x15, #24]
    5304:	cmp	w10, w16
    5308:	b.eq	5368 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1690>  // b.none
    530c:	ldr	w11, [x9, #8]
    5310:	cmp	w11, w10
    5314:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    5318:	ldr	x11, [x9, #48]
    531c:	cbz	x11, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    5320:	ldr	x9, [x9]
    5324:	mov	w12, #0x18                  	// #24
    5328:	ldr	w14, [x15, #40]
    532c:	madd	x9, x10, x12, x9
    5330:	ldr	w12, [x9, #8]
    5334:	ldr	w9, [x15, #56]
    5338:	ldrh	w13, [x11, x12, lsl #1]
    533c:	cbz	w13, 5360 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1688>
    5340:	add	x17, x11, x12, lsl #1
    5344:	add	w15, w13, w10
    5348:	add	x17, x17, #0x2
    534c:	cmp	w16, w15, uxth
    5350:	b.eq	5368 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1690>  // b.none
    5354:	ldrh	w18, [x17], #2
    5358:	add	w15, w18, w15
    535c:	cbnz	w18, 534c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1674>
    5360:	cmp	w10, w14
    5364:	b.ne	5bc4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1eec>  // b.any
    5368:	ldur	w8, [x29, #-168]
    536c:	cbz	w8, 6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    5370:	ldur	x8, [x29, #-176]
    5374:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5378:	add	x9, x9, #0x0
    537c:	mov	w10, #0x103                 	// #259
    5380:	ldr	x1, [x8]
    5384:	stp	x9, xzr, [x29, #-40]
    5388:	sturh	w10, [x29, #-24]
    538c:	ldr	x0, [x19, #8]
    5390:	sub	x2, x29, #0x28
    5394:	mov	x3, xzr
    5398:	mov	x4, xzr
    539c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    53a0:	tbz	w0, #0, 53ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16d4>
    53a4:	mov	w28, #0x1                   	// #1
    53a8:	b	53d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1700>
    53ac:	mov	x0, x19
    53b0:	str	x20, [sp, #104]
    53b4:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    53b8:	ldr	x9, [sp, #48]
    53bc:	mov	x2, x0
    53c0:	add	x1, sp, #0x60
    53c4:	ldr	x8, [x9]
    53c8:	mov	x0, x9
    53cc:	ldr	x8, [x8, #1080]
    53d0:	blr	x8
    53d4:	mov	w28, wzr
    53d8:	ldur	x0, [x29, #-176]
    53dc:	sub	x8, x29, #0xb0
    53e0:	add	x8, x8, #0x10
    53e4:	cmp	x0, x8
    53e8:	b.eq	53f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1718>  // b.none
    53ec:	bl	0 <free>
    53f0:	ldr	x0, [sp, #112]
    53f4:	add	x8, x27, #0x10
    53f8:	add	x8, x8, #0x10
    53fc:	cmp	x0, x8
    5400:	b.eq	5408 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1730>  // b.none
    5404:	bl	0 <free>
    5408:	and	w0, w28, #0x1
    540c:	add	sp, sp, #0x1b0
    5410:	ldp	x20, x19, [sp, #96]
    5414:	ldp	x22, x21, [sp, #80]
    5418:	ldp	x24, x23, [sp, #64]
    541c:	ldp	x26, x25, [sp, #48]
    5420:	ldp	x28, x27, [sp, #32]
    5424:	ldp	x29, x30, [sp, #16]
    5428:	ldr	d8, [sp], #112
    542c:	ret
    5430:	ldr	w11, [x9, #8]
    5434:	cmp	w11, w10
    5438:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    543c:	ldr	x11, [x9, #48]
    5440:	cbz	x11, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    5444:	ldr	x9, [x9]
    5448:	mov	w14, #0x18                  	// #24
    544c:	madd	x9, x10, x14, x9
    5450:	ldr	w14, [x9, #8]
    5454:	ldr	w9, [x13, #40]
    5458:	ldrh	w15, [x11, x14, lsl #1]
    545c:	cbz	w15, 5480 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17a8>
    5460:	add	x16, x11, x14, lsl #1
    5464:	add	w13, w15, w10
    5468:	add	x16, x16, #0x2
    546c:	cmp	w12, w13, uxth
    5470:	b.eq	4f40 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1268>  // b.none
    5474:	ldrh	w17, [x16], #2
    5478:	add	w13, w17, w13
    547c:	cbnz	w17, 546c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1794>
    5480:	cmp	w10, w9
    5484:	b.ne	56f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a20>  // b.any
    5488:	cmp	w9, #0x5
    548c:	b.eq	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.none
    5490:	b	4f40 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1268>
    5494:	ldr	w12, [x9, #8]
    5498:	cmp	w12, w15
    549c:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    54a0:	ldr	x11, [x9, #48]
    54a4:	cbz	x11, 67bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ae4>
    54a8:	ldr	x14, [x9]
    54ac:	mov	w9, #0x18                  	// #24
    54b0:	madd	x9, x15, x9, x14
    54b4:	ldr	w16, [x9, #8]
    54b8:	ldr	w9, [x13, #40]
    54bc:	ldrh	w17, [x11, x16, lsl #1]
    54c0:	cbz	w17, 54e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x180c>
    54c4:	add	w13, w17, w15
    54c8:	add	x15, x11, x16, lsl #1
    54cc:	add	x15, x15, #0x2
    54d0:	cmp	w10, w13, uxth
    54d4:	b.eq	5064 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x138c>  // b.none
    54d8:	ldrh	w16, [x15], #2
    54dc:	add	w13, w16, w13
    54e0:	cbnz	w16, 54d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17f8>
    54e4:	cmp	w9, w10
    54e8:	b.ne	5b28 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e50>  // b.any
    54ec:	ldur	w8, [x29, #-168]
    54f0:	cmp	w8, #0x1
    54f4:	b.ls	6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>  // b.plast
    54f8:	ldur	x8, [x29, #-176]
    54fc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5500:	add	x9, x9, #0x0
    5504:	b	5bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ee0>
    5508:	ldr	w8, [x27, #48]
    550c:	cmp	w8, #0x6
    5510:	b.ne	65d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2900>  // b.any
    5514:	ldr	x9, [x27, #72]
    5518:	ldr	w8, [x27, #80]
    551c:	mov	w8, w8
    5520:	stp	x9, x8, [x29, #-176]
    5524:	add	x8, sp, #0x60
    5528:	sub	x0, x29, #0xb0
    552c:	add	x21, sp, #0x60
    5530:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    5534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    5538:	add	x1, x1, #0x0
    553c:	add	x0, sp, #0x60
    5540:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    5544:	cbz	w0, 55a0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18c8>
    5548:	ldr	x0, [sp, #96]
    554c:	add	x8, x21, #0x10
    5550:	cmp	x0, x8
    5554:	b.eq	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>  // b.none
    5558:	bl	0 <_ZdlPv>
    555c:	b	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    5560:	cmp	w12, w9
    5564:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    5568:	mov	w12, #0x18                  	// #24
    556c:	madd	x12, x9, x12, x14
    5570:	ldr	w12, [x12, #8]
    5574:	ldrh	w13, [x11, x12, lsl #1]
    5578:	cbz	w13, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    557c:	add	x11, x11, x12, lsl #1
    5580:	add	w9, w13, w9
    5584:	add	x11, x11, #0x2
    5588:	cmp	w10, w9, uxth
    558c:	b.eq	50d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13fc>  // b.none
    5590:	ldrh	w12, [x11], #2
    5594:	add	w9, w12, w9
    5598:	cbnz	w12, 5588 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18b0>
    559c:	b	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    55a0:	ldr	w8, [x20, #48]
    55a4:	cbnz	w8, 67fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b24>
    55a8:	ldr	x8, [x20, #72]
    55ac:	cbz	x8, 67dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b04>
    55b0:	ldr	w9, [x8]
    55b4:	cmp	w9, #0x1
    55b8:	b.ne	683c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b64>  // b.any
    55bc:	ldr	x0, [sp, #96]
    55c0:	ldr	x20, [x8, #16]
    55c4:	add	x8, sp, #0x60
    55c8:	add	x8, x8, #0x10
    55cc:	cmp	x0, x8
    55d0:	b.eq	55d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1900>  // b.none
    55d4:	bl	0 <_ZdlPv>
    55d8:	cbnz	x20, 46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    55dc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    55e0:	add	x8, x8, #0x0
    55e4:	mov	w9, #0x103                 	// #259
    55e8:	stp	x8, xzr, [sp, #96]
    55ec:	strh	w9, [sp, #112]
    55f0:	ldr	x0, [x19, #8]
    55f4:	ldr	x20, [x29, #8]
    55f8:	add	x2, sp, #0x60
    55fc:	mov	x3, xzr
    5600:	ldr	x8, [x0]
    5604:	mov	x1, x20
    5608:	mov	x4, xzr
    560c:	ldr	x8, [x8, #120]
    5610:	blr	x8
    5614:	ldr	x8, [x25]
    5618:	mov	x0, x25
    561c:	ldr	x8, [x8, #32]
    5620:	blr	x8
    5624:	ldr	x8, [x19, #8]
    5628:	mov	w21, w0
    562c:	ldr	x9, [x8]
    5630:	mov	x0, x8
    5634:	ldr	x9, [x9, #48]
    5638:	blr	x9
    563c:	mov	x25, x0
    5640:	mov	w0, #0x70                  	// #112
    5644:	bl	0 <_Znwm>
    5648:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    564c:	mov	x8, x0
    5650:	add	x9, x9, #0x0
    5654:	strb	wzr, [x8, #32]!
    5658:	str	x9, [x0]
    565c:	mov	w9, #0x6                   	// #6
    5660:	str	w9, [x0, #48]
    5664:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5668:	add	x9, x9, #0x0
    566c:	stp	x20, x9, [x0, #64]
    5670:	mov	w9, #0x4                   	// #4
    5674:	str	x25, [x0, #104]
    5678:	str	w9, [x0, #80]
    567c:	strb	wzr, [x0, #84]
    5680:	stp	x8, xzr, [x0, #16]
    5684:	str	x20, [x0, #56]
    5688:	ldr	w9, [x26]
    568c:	tst	w21, #0x1
    5690:	mov	w8, #0x1                   	// #1
    5694:	cinc	x8, x8, eq  // eq = none
    5698:	cmp	x8, x9
    569c:	b.cs	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.hs, b.nlast
    56a0:	ldr	x9, [x22]
    56a4:	lsl	x10, x8, #3
    56a8:	ldr	x8, [x9, x10]
    56ac:	str	x0, [x9, x10]
    56b0:	cbnz	x8, 46d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x9fc>
    56b4:	b	46e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    56b8:	ldr	x12, [x11, #88]
    56bc:	ldur	q1, [x11, #72]
    56c0:	str	x12, [sp, #184]
    56c4:	b	3e14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13c>
    56c8:	ldr	x12, [x11, #88]
    56cc:	ldur	q0, [x11, #72]
    56d0:	stur	x12, [x29, #-88]
    56d4:	b	41e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x510>
    56d8:	ldr	w12, [x11, #88]
    56dc:	ldur	q1, [x11, #72]
    56e0:	str	w12, [sp, #184]
    56e4:	b	3e14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13c>
    56e8:	ldr	w12, [x11, #88]
    56ec:	ldur	q0, [x11, #72]
    56f0:	stur	w12, [x29, #-88]
    56f4:	b	41e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x510>
    56f8:	cbz	w15, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    56fc:	add	x11, x11, x14, lsl #1
    5700:	add	w10, w15, w10
    5704:	add	x11, x11, #0x2
    5708:	cmp	w9, w10, uxth
    570c:	b.eq	5488 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17b0>  // b.none
    5710:	ldrh	w12, [x11], #2
    5714:	add	w10, w12, w10
    5718:	cbnz	w12, 5708 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a30>
    571c:	b	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    5720:	mov	w11, #0x20                  	// #32
    5724:	cmp	x21, x11
    5728:	b.cs	576c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a94>  // b.hs, b.nlast
    572c:	sub	x28, x28, #0x1
    5730:	cmp	x28, x11
    5734:	b.cs	5bfc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f24>  // b.hs, b.nlast
    5738:	cmp	x11, #0x20
    573c:	mov	w9, #0x3f                  	// #63
    5740:	mov	w10, #0x1f                  	// #31
    5744:	neg	x8, x21
    5748:	csel	x9, x10, x9, eq  // eq = none
    574c:	and	x21, x9, x8
    5750:	sub	x8, x21, #0x1
    5754:	cmp	x8, x28
    5758:	b.cs	5c98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1fc0>  // b.hs, b.nlast
    575c:	ldur	x1, [x29, #-120]
    5760:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5764:	add	x8, x8, #0x0
    5768:	b	5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f30>
    576c:	ldr	x1, [sp, #152]
    5770:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5774:	add	x8, x8, #0x0
    5778:	b	5c08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f30>
    577c:	ldr	x3, [x23]
    5780:	ldr	x1, [x29, #8]
    5784:	mov	w2, #0x3                   	// #3
    5788:	mov	x0, x19
    578c:	b	520c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1534>
    5790:	ldr	x8, [sp, #64]
    5794:	cbnz	x8, 57a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ad0>
    5798:	ldr	x8, [sp, #72]
    579c:	cbnz	x8, 57a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ad0>
    57a0:	ldr	x8, [sp, #80]
    57a4:	cbz	x8, 685c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b84>
    57a8:	sub	x8, x29, #0xb0
    57ac:	mov	w9, #0x15                  	// #21
    57b0:	add	x20, x8, #0x10
    57b4:	sub	x0, x29, #0xb0
    57b8:	sub	x1, x29, #0x28
    57bc:	mov	x2, xzr
    57c0:	stur	x20, [x29, #-176]
    57c4:	stur	x9, [x29, #-40]
    57c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    57cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    57d0:	add	x9, x9, #0x0
    57d4:	ldur	x8, [x29, #-40]
    57d8:	ldur	x10, [x9, #13]
    57dc:	ldr	q0, [x9]
    57e0:	stur	x0, [x29, #-176]
    57e4:	stur	x8, [x29, #-160]
    57e8:	stur	x10, [x0, #13]
    57ec:	str	q0, [x0]
    57f0:	ldur	x9, [x29, #-176]
    57f4:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    57f8:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    57fc:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    5800:	mov	x23, xzr
    5804:	add	x24, sp, #0x40
    5808:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    580c:	add	x21, x21, #0x0
    5810:	add	x26, x26, #0x0
    5814:	add	x28, x28, #0x0
    5818:	stur	x8, [x29, #-168]
    581c:	strb	wzr, [x9, x8]
    5820:	b	5858 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b80>
    5824:	mov	x0, x22
    5828:	bl	0 <strlen>
    582c:	ldur	x8, [x29, #-168]
    5830:	sub	x8, x25, x8
    5834:	cmp	x8, x0
    5838:	b.cc	6770 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.lo, b.ul, b.last
    583c:	mov	x2, x0
    5840:	sub	x0, x29, #0xb0
    5844:	mov	x1, x22
    5848:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    584c:	add	x23, x23, #0x1
    5850:	cmp	w23, #0xc0
    5854:	b.eq	5898 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1bc0>  // b.none
    5858:	ubfx	x8, x23, #6, #26
    585c:	ldr	x8, [x24, w8, uxtw #3]
    5860:	lsr	x8, x8, x23
    5864:	tbz	w8, #0, 584c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b74>
    5868:	ldur	x8, [x29, #-168]
    586c:	cmp	x8, x25
    5870:	b.eq	6770 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.none
    5874:	sub	x0, x29, #0xb0
    5878:	mov	w2, #0x1                   	// #1
    587c:	mov	x1, x21
    5880:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5884:	cmp	w23, #0x3b
    5888:	mov	x22, x26
    588c:	b.hi	5824 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b4c>  // b.pmore
    5890:	ldr	x22, [x28, x23, lsl #3]
    5894:	b	5824 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b4c>
    5898:	mov	w8, #0x104                 	// #260
    589c:	sub	x9, x29, #0xb0
    58a0:	sturh	w8, [x29, #-24]
    58a4:	stp	x9, xzr, [x29, #-40]
    58a8:	ldr	x0, [x19, #8]
    58ac:	ldr	x1, [x29, #8]
    58b0:	sub	x2, x29, #0x28
    58b4:	mov	x3, xzr
    58b8:	mov	x4, xzr
    58bc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    58c0:	ldur	x8, [x29, #-176]
    58c4:	mov	w28, w0
    58c8:	cmp	x8, x20
    58cc:	b.eq	53f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1718>  // b.none
    58d0:	mov	x0, x8
    58d4:	bl	0 <_ZdlPv>
    58d8:	b	53f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1718>
    58dc:	ldr	x10, [sp, #32]
    58e0:	neg	x8, x10
    58e4:	and	x8, x8, #0x3f
    58e8:	str	x8, [sp, #24]
    58ec:	mov	w8, #0x3f                  	// #63
    58f0:	ldr	x0, [x19, #8]
    58f4:	sub	x21, x8, x10
    58f8:	ldr	x9, [x0]
    58fc:	ldr	x9, [x9, #48]
    5900:	blr	x9
    5904:	mov	x1, x0
    5908:	ldr	x0, [sp, #24]
    590c:	mov	w2, wzr
    5910:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5914:	ldr	x8, [x19, #8]
    5918:	str	x0, [sp, #32]
    591c:	ldr	x9, [x8]
    5920:	mov	x0, x8
    5924:	ldr	x9, [x9, #48]
    5928:	blr	x9
    592c:	mov	x1, x0
    5930:	mov	x0, x21
    5934:	mov	w2, wzr
    5938:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    593c:	ldr	x8, [x27]
    5940:	str	x0, [sp, #24]
    5944:	mov	x0, x27
    5948:	ldr	x8, [x8, #72]
    594c:	blr	x8
    5950:	ldr	x8, [x19, #8]
    5954:	mov	x21, x0
    5958:	ldr	x9, [x8]
    595c:	mov	x0, x8
    5960:	ldr	x9, [x9, #48]
    5964:	blr	x9
    5968:	mov	x27, x0
    596c:	mov	w0, #0x70                  	// #112
    5970:	bl	0 <_Znwm>
    5974:	mov	x8, x0
    5978:	mov	w9, #0x6                   	// #6
    597c:	strb	wzr, [x8, #32]!
    5980:	str	w9, [x0, #48]
    5984:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5988:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    598c:	add	x9, x9, #0x0
    5990:	add	x10, x10, #0x0
    5994:	stp	x21, x9, [x0, #64]
    5998:	mov	w9, #0x4                   	// #4
    599c:	str	x27, [x0, #104]
    59a0:	str	x10, [x0]
    59a4:	str	w9, [x0, #80]
    59a8:	strb	wzr, [x0, #84]
    59ac:	stp	x8, xzr, [x0, #16]
    59b0:	str	x21, [x0, #56]
    59b4:	ldr	w8, [x26]
    59b8:	cbz	w8, 6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>
    59bc:	ldr	x9, [x22]
    59c0:	ldr	x8, [x9]
    59c4:	str	x0, [x9]
    59c8:	cbz	x8, 59dc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d04>
    59cc:	ldr	x9, [x8]
    59d0:	mov	x0, x8
    59d4:	ldr	x9, [x9, #8]
    59d8:	blr	x9
    59dc:	ldr	x8, [x28]
    59e0:	mov	x0, x28
    59e4:	ldr	x8, [x8, #72]
    59e8:	blr	x8
    59ec:	ldr	x8, [x28]
    59f0:	str	x0, [sp, #16]
    59f4:	mov	x0, x28
    59f8:	ldr	x8, [x8, #80]
    59fc:	blr	x8
    5a00:	ldr	x8, [x19, #8]
    5a04:	str	x0, [sp, #8]
    5a08:	ldr	x9, [x8]
    5a0c:	mov	x0, x8
    5a10:	ldr	x9, [x9, #48]
    5a14:	blr	x9
    5a18:	mov	x21, x0
    5a1c:	mov	w0, #0x70                  	// #112
    5a20:	bl	0 <_Znwm>
    5a24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5a28:	mov	x8, x0
    5a2c:	add	x9, x9, #0x0
    5a30:	strb	wzr, [x8, #32]!
    5a34:	str	x9, [x0]
    5a38:	ldr	x9, [sp, #24]
    5a3c:	str	wzr, [x0, #48]
    5a40:	str	x21, [x0, #104]
    5a44:	stp	x8, xzr, [x0, #16]
    5a48:	str	x9, [x0, #72]
    5a4c:	ldr	x9, [sp, #16]
    5a50:	mov	x27, x0
    5a54:	str	x9, [x0, #56]
    5a58:	ldr	x9, [sp, #8]
    5a5c:	str	x9, [x0, #64]
    5a60:	ldp	w8, w9, [x22, #8]
    5a64:	cmp	w8, w9
    5a68:	b.cs	6550 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2878>  // b.hs, b.nlast
    5a6c:	ldr	x10, [x22]
    5a70:	cmp	w8, w9
    5a74:	str	x27, [x10, w8, uxtw #3]
    5a78:	b.cs	6598 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28c0>  // b.hs, b.nlast
    5a7c:	add	w8, w8, #0x1
    5a80:	str	w8, [x26]
    5a84:	ldr	x8, [x28]
    5a88:	mov	x0, x28
    5a8c:	ldr	x8, [x8, #72]
    5a90:	blr	x8
    5a94:	ldr	x8, [x28]
    5a98:	mov	x21, x0
    5a9c:	mov	x0, x28
    5aa0:	ldr	x8, [x8, #80]
    5aa4:	blr	x8
    5aa8:	ldr	x8, [x19, #8]
    5aac:	mov	x27, x0
    5ab0:	ldr	x9, [x8]
    5ab4:	mov	x0, x8
    5ab8:	ldr	x9, [x9, #48]
    5abc:	blr	x9
    5ac0:	mov	x28, x0
    5ac4:	mov	w0, #0x70                  	// #112
    5ac8:	bl	0 <_Znwm>
    5acc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5ad0:	mov	x8, x0
    5ad4:	add	x9, x9, #0x0
    5ad8:	strb	wzr, [x8, #32]!
    5adc:	str	x9, [x0]
    5ae0:	ldr	x9, [sp, #32]
    5ae4:	str	wzr, [x0, #48]
    5ae8:	str	x28, [x0, #104]
    5aec:	stp	x8, xzr, [x0, #16]
    5af0:	stp	x27, x9, [x0, #64]
    5af4:	str	x21, [x0, #56]
    5af8:	ldr	w8, [x26]
    5afc:	cmp	w8, #0x3
    5b00:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    5b04:	ldr	x9, [x22]
    5b08:	ldr	x8, [x9, #24]
    5b0c:	str	x0, [x9, #24]
    5b10:	cbz	x8, 42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    5b14:	ldr	x9, [x8]
    5b18:	mov	x0, x8
    5b1c:	ldr	x9, [x9, #8]
    5b20:	blr	x9
    5b24:	b	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    5b28:	cmp	w12, w9
    5b2c:	b.ls	679c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac4>  // b.plast
    5b30:	mov	w12, #0x18                  	// #24
    5b34:	madd	x12, x9, x12, x14
    5b38:	ldr	w12, [x12, #8]
    5b3c:	ldrh	w13, [x11, x12, lsl #1]
    5b40:	cbz	w13, 5b64 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e8c>
    5b44:	add	x11, x11, x12, lsl #1
    5b48:	add	w9, w13, w9
    5b4c:	add	x11, x11, #0x2
    5b50:	cmp	w10, w9, uxth
    5b54:	b.eq	54ec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1814>  // b.none
    5b58:	ldrh	w12, [x11], #2
    5b5c:	add	w9, w12, w9
    5b60:	cbnz	w12, 5b50 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e78>
    5b64:	ldr	w10, [sp, #120]
    5b68:	cbz	w10, 6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>
    5b6c:	ldr	x9, [sp, #112]
    5b70:	ldrb	w11, [x9]
    5b74:	cmp	w11, #0x1
    5b78:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    5b7c:	cmp	w10, #0x1
    5b80:	b.ls	6658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2980>  // b.plast
    5b84:	ldrb	w10, [x9, #16]
    5b88:	cmp	w10, #0x1
    5b8c:	b.ne	65b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28e0>  // b.any
    5b90:	ldr	w10, [x9, #8]
    5b94:	ldr	w9, [x9, #24]
    5b98:	cmp	w10, w9
    5b9c:	b.ne	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.any
    5ba0:	ldur	w8, [x29, #-168]
    5ba4:	cmp	w8, #0x1
    5ba8:	b.ls	6710 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>  // b.plast
    5bac:	ldur	x8, [x29, #-176]
    5bb0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5bb4:	add	x9, x9, #0x0
    5bb8:	mov	w10, #0x103                 	// #259
    5bbc:	ldr	x1, [x8, #8]
    5bc0:	b	5384 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16ac>
    5bc4:	cbz	w13, 5be8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f10>
    5bc8:	add	x16, x11, x12, lsl #1
    5bcc:	add	w15, w13, w10
    5bd0:	add	x16, x16, #0x2
    5bd4:	cmp	w14, w15, uxth
    5bd8:	b.eq	5368 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1690>  // b.none
    5bdc:	ldrh	w17, [x16], #2
    5be0:	add	w15, w17, w15
    5be4:	cbnz	w17, 5bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1efc>
    5be8:	cmp	w10, w9
    5bec:	b.ne	5f10 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2238>  // b.any
    5bf0:	cmp	w9, #0x5
    5bf4:	b.eq	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>  // b.none
    5bf8:	b	5368 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1690>
    5bfc:	ldur	x1, [x29, #-120]
    5c00:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5c04:	add	x8, x8, #0x0
    5c08:	mov	w9, #0x103                 	// #259
    5c0c:	stp	x8, xzr, [x29, #-40]
    5c10:	sturh	w9, [x29, #-24]
    5c14:	ldr	x0, [x19, #8]
    5c18:	sub	x2, x29, #0x28
    5c1c:	mov	x3, xzr
    5c20:	mov	x4, xzr
    5c24:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5c28:	ldp	x16, x15, [sp, #24]
    5c2c:	mov	w28, w0
    5c30:	mov	w21, #0x1                   	// #1
    5c34:	b	4250 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x578>
    5c38:	mov	w8, #0x20                  	// #32
    5c3c:	ldr	x0, [sp, #32]
    5c40:	cmp	x21, x8
    5c44:	b.cs	6060 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2388>  // b.hs, b.nlast
    5c48:	ldr	x9, [sp, #16]
    5c4c:	sub	x28, x9, #0x1
    5c50:	cmp	x28, x8
    5c54:	b.cs	6078 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23a0>  // b.hs, b.nlast
    5c58:	cmp	x8, #0x20
    5c5c:	mov	w8, #0x3f                  	// #63
    5c60:	mov	w10, #0x1f                  	// #31
    5c64:	neg	x9, x21
    5c68:	csel	x8, x10, x8, eq  // eq = none
    5c6c:	and	x21, x8, x9
    5c70:	sub	x8, x21, #0x1
    5c74:	cmp	x8, x28
    5c78:	b.cs	60d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2400>  // b.hs, b.nlast
    5c7c:	ldr	x0, [sp, #24]
    5c80:	ldr	x8, [x0]
    5c84:	ldr	x8, [x8, #72]
    5c88:	blr	x8
    5c8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5c90:	add	x8, x8, #0x0
    5c94:	b	6090 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23b8>
    5c98:	ldr	x0, [x19, #8]
    5c9c:	str	x11, [sp]
    5ca0:	ldr	x8, [x0]
    5ca4:	ldr	x8, [x8, #48]
    5ca8:	blr	x8
    5cac:	mov	x1, x0
    5cb0:	mov	x0, x21
    5cb4:	mov	w2, wzr
    5cb8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5cbc:	ldr	x8, [x19, #8]
    5cc0:	str	x0, [sp, #8]
    5cc4:	ldr	x9, [x8]
    5cc8:	mov	x0, x8
    5ccc:	ldr	x9, [x9, #48]
    5cd0:	blr	x9
    5cd4:	mov	x1, x0
    5cd8:	mov	x0, x28
    5cdc:	mov	w2, wzr
    5ce0:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5ce4:	ldr	x8, [x27]
    5ce8:	mov	x21, x0
    5cec:	mov	x0, x27
    5cf0:	ldr	x8, [x8, #72]
    5cf4:	blr	x8
    5cf8:	ldr	x8, [x19, #8]
    5cfc:	mov	x28, x0
    5d00:	ldr	x9, [x8]
    5d04:	mov	x0, x8
    5d08:	ldr	x9, [x9, #48]
    5d0c:	blr	x9
    5d10:	mov	x27, x0
    5d14:	mov	w0, #0x70                  	// #112
    5d18:	bl	0 <_Znwm>
    5d1c:	mov	x8, x0
    5d20:	mov	w9, #0x6                   	// #6
    5d24:	strb	wzr, [x8, #32]!
    5d28:	str	w9, [x0, #48]
    5d2c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5d30:	add	x9, x9, #0x0
    5d34:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    5d38:	stp	x28, x9, [x0, #64]
    5d3c:	mov	w9, #0x3                   	// #3
    5d40:	add	x10, x10, #0x0
    5d44:	str	x27, [x0, #104]
    5d48:	str	x10, [x0]
    5d4c:	str	w9, [x0, #80]
    5d50:	strb	wzr, [x0, #84]
    5d54:	stp	x8, xzr, [x0, #16]
    5d58:	str	x28, [x0, #56]
    5d5c:	ldr	w8, [x26]
    5d60:	cbz	w8, 6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>
    5d64:	ldr	x9, [x22]
    5d68:	str	x21, [sp, #16]
    5d6c:	ldr	x8, [x9]
    5d70:	str	x0, [x9]
    5d74:	cbz	x8, 5d88 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x20b0>
    5d78:	ldr	x9, [x8]
    5d7c:	mov	x0, x8
    5d80:	ldr	x9, [x9, #8]
    5d84:	blr	x9
    5d88:	ldr	x0, [x19, #8]
    5d8c:	ldr	x9, [sp]
    5d90:	ldr	x8, [x0]
    5d94:	cmp	x9, #0x20
    5d98:	mov	w9, #0x7                   	// #7
    5d9c:	cinc	w21, w9, ne  // ne = any
    5da0:	ldr	x8, [x8, #48]
    5da4:	blr	x8
    5da8:	mov	x27, x0
    5dac:	mov	w0, #0x70                  	// #112
    5db0:	bl	0 <_Znwm>
    5db4:	mov	x8, x0
    5db8:	mov	w9, #0x3                   	// #3
    5dbc:	strb	wzr, [x8, #32]!
    5dc0:	str	w9, [x0, #48]
    5dc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5dc8:	add	x9, x9, #0x0
    5dcc:	str	x9, [x0]
    5dd0:	str	x27, [x0, #104]
    5dd4:	str	w21, [x0, #72]
    5dd8:	stp	xzr, xzr, [x0, #56]
    5ddc:	stur	xzr, [x0, #84]
    5de0:	stur	xzr, [x0, #76]
    5de4:	stp	x8, xzr, [x0, #16]
    5de8:	stur	xzr, [x0, #89]
    5dec:	ldr	w8, [x26]
    5df0:	cmp	w8, #0x2
    5df4:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    5df8:	ldr	x9, [x22]
    5dfc:	ldr	x8, [x9, #16]
    5e00:	str	x0, [x9, #16]
    5e04:	cbz	x8, 5e18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2140>
    5e08:	ldr	x9, [x8]
    5e0c:	mov	x0, x8
    5e10:	ldr	x9, [x9, #8]
    5e14:	blr	x9
    5e18:	ldr	x0, [x19, #8]
    5e1c:	ldp	x21, x28, [sp, #152]
    5e20:	ldr	x8, [x0]
    5e24:	ldr	x8, [x8, #48]
    5e28:	blr	x8
    5e2c:	mov	x27, x0
    5e30:	mov	w0, #0x70                  	// #112
    5e34:	bl	0 <_Znwm>
    5e38:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5e3c:	mov	x8, x0
    5e40:	add	x9, x9, #0x0
    5e44:	strb	wzr, [x8, #32]!
    5e48:	str	x9, [x0]
    5e4c:	ldr	x9, [sp, #8]
    5e50:	str	wzr, [x0, #48]
    5e54:	str	x27, [x0, #104]
    5e58:	stp	x8, xzr, [x0, #16]
    5e5c:	stp	x28, x9, [x0, #64]
    5e60:	str	x21, [x0, #56]
    5e64:	ldr	w8, [x26]
    5e68:	cmp	w8, #0x3
    5e6c:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    5e70:	ldr	x9, [x22]
    5e74:	ldr	x8, [x9, #24]
    5e78:	str	x0, [x9, #24]
    5e7c:	cbz	x8, 5e90 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x21b8>
    5e80:	ldr	x9, [x8]
    5e84:	mov	x0, x8
    5e88:	ldr	x9, [x9, #8]
    5e8c:	blr	x9
    5e90:	ldr	x0, [x19, #8]
    5e94:	ldp	x21, x23, [x29, #-120]
    5e98:	ldr	x8, [x0]
    5e9c:	ldr	x8, [x8, #48]
    5ea0:	blr	x8
    5ea4:	mov	x28, x0
    5ea8:	mov	w0, #0x70                  	// #112
    5eac:	bl	0 <_Znwm>
    5eb0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5eb4:	mov	x8, x0
    5eb8:	add	x9, x9, #0x0
    5ebc:	strb	wzr, [x8, #32]!
    5ec0:	str	x9, [x0]
    5ec4:	ldr	x9, [sp, #16]
    5ec8:	str	wzr, [x0, #48]
    5ecc:	str	x28, [x0, #104]
    5ed0:	str	x21, [x0, #56]
    5ed4:	stp	x23, x9, [x0, #64]
    5ed8:	stp	x8, xzr, [x0, #16]
    5edc:	ldp	w8, w9, [x22, #8]
    5ee0:	mov	x27, x0
    5ee4:	cmp	w8, w9
    5ee8:	b.cs	6564 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x288c>  // b.hs, b.nlast
    5eec:	ldp	x16, x15, [sp, #24]
    5ef0:	ldr	x10, [x22]
    5ef4:	cmp	w8, w9
    5ef8:	str	x27, [x10, w8, uxtw #3]
    5efc:	b.cs	6598 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28c0>  // b.hs, b.nlast
    5f00:	mov	w21, wzr
    5f04:	add	w8, w8, #0x1
    5f08:	str	w8, [x26]
    5f0c:	b	4250 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x578>
    5f10:	cbz	w13, 4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    5f14:	add	x11, x11, x12, lsl #1
    5f18:	add	w10, w13, w10
    5f1c:	add	x11, x11, #0x2
    5f20:	cmp	w9, w10, uxth
    5f24:	b.eq	5bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f18>  // b.none
    5f28:	ldrh	w12, [x11], #2
    5f2c:	add	w10, w12, w10
    5f30:	cbnz	w12, 5f20 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2248>
    5f34:	b	4978 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xca0>
    5f38:	mov	w8, #0x20                  	// #32
    5f3c:	ldr	x0, [sp, #32]
    5f40:	cmp	x21, x8
    5f44:	b.cs	6060 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2388>  // b.hs, b.nlast
    5f48:	ldr	x9, [sp, #16]
    5f4c:	sub	x9, x9, #0x1
    5f50:	cmp	x9, x8
    5f54:	b.cs	6078 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23a0>  // b.hs, b.nlast
    5f58:	adds	x21, x9, x21
    5f5c:	b.cs	6300 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2628>  // b.hs, b.nlast
    5f60:	cmp	x21, x8
    5f64:	b.cs	6300 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2628>  // b.hs, b.nlast
    5f68:	ldr	x0, [x19, #8]
    5f6c:	ldr	x8, [x0]
    5f70:	ldr	x8, [x8, #48]
    5f74:	blr	x8
    5f78:	mov	x1, x0
    5f7c:	mov	x0, x21
    5f80:	mov	w2, wzr
    5f84:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5f88:	ldr	x21, [sp, #24]
    5f8c:	str	x0, [sp, #32]
    5f90:	ldr	x8, [x21]
    5f94:	mov	x0, x21
    5f98:	ldr	x8, [x8, #72]
    5f9c:	blr	x8
    5fa0:	ldr	x8, [x21]
    5fa4:	str	x0, [sp, #16]
    5fa8:	mov	x0, x21
    5fac:	ldr	x8, [x8, #80]
    5fb0:	blr	x8
    5fb4:	ldr	x8, [x19, #8]
    5fb8:	mov	x21, x0
    5fbc:	ldr	x9, [x8]
    5fc0:	mov	x0, x8
    5fc4:	ldr	x9, [x9, #48]
    5fc8:	blr	x9
    5fcc:	mov	x28, x0
    5fd0:	mov	w0, #0x70                  	// #112
    5fd4:	bl	0 <_Znwm>
    5fd8:	mov	x8, x0
    5fdc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5fe0:	add	x9, x9, #0x0
    5fe4:	strb	wzr, [x8, #32]!
    5fe8:	str	x9, [x0]
    5fec:	ldr	x9, [sp, #32]
    5ff0:	stp	x8, xzr, [x0, #16]
    5ff4:	ldr	x8, [sp, #16]
    5ff8:	str	wzr, [x0, #48]
    5ffc:	str	x28, [x0, #104]
    6000:	stp	x21, x9, [x0, #64]
    6004:	str	x8, [x0, #56]
    6008:	ldr	w8, [x26]
    600c:	cmp	w8, #0x4
    6010:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    6014:	ldr	x9, [x22]
    6018:	ldr	x8, [x9, #32]
    601c:	str	x0, [x9, #32]
    6020:	cbz	x8, 6034 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x235c>
    6024:	ldr	x9, [x8]
    6028:	mov	x0, x8
    602c:	ldr	x9, [x9, #8]
    6030:	blr	x9
    6034:	cmp	w25, #0x4
    6038:	b.eq	63a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x26d0>  // b.none
    603c:	cmp	w25, #0x5
    6040:	b.ne	6894 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.any
    6044:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6048:	add	x1, x1, #0x0
    604c:	mov	x0, x20
    6050:	mov	x2, x25
    6054:	bl	0 <bcmp>
    6058:	cbz	w0, 629c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x25c4>
    605c:	b	6894 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>
    6060:	ldr	x8, [x0]
    6064:	ldr	x8, [x8, #72]
    6068:	blr	x8
    606c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6070:	add	x8, x8, #0x0
    6074:	b	6090 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23b8>
    6078:	ldr	x0, [sp, #24]
    607c:	ldr	x8, [x0]
    6080:	ldr	x8, [x8, #72]
    6084:	blr	x8
    6088:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    608c:	add	x8, x8, #0x0
    6090:	mov	w9, #0x103                 	// #259
    6094:	stp	x8, xzr, [sp, #96]
    6098:	strh	w9, [sp, #112]
    609c:	ldr	x8, [x19, #8]
    60a0:	mov	x1, x0
    60a4:	add	x2, sp, #0x60
    60a8:	mov	x3, xzr
    60ac:	mov	x0, x8
    60b0:	mov	x4, xzr
    60b4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    60b8:	mov	w28, w0
    60bc:	b	5408 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1730>
    60c0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    60c4:	add	x8, x8, #0x0
    60c8:	b	4ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x131c>
    60cc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    60d0:	add	x8, x8, #0x0
    60d4:	b	4ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x131c>
    60d8:	ldr	x0, [x19, #8]
    60dc:	ldr	x8, [x0]
    60e0:	ldr	x8, [x8, #48]
    60e4:	blr	x8
    60e8:	mov	x1, x0
    60ec:	mov	x0, x21
    60f0:	mov	w2, wzr
    60f4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    60f8:	ldr	x8, [x19, #8]
    60fc:	str	x0, [sp, #8]
    6100:	ldr	x9, [x8]
    6104:	mov	x0, x8
    6108:	ldr	x9, [x9, #48]
    610c:	blr	x9
    6110:	mov	x1, x0
    6114:	mov	x0, x28
    6118:	mov	w2, wzr
    611c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    6120:	ldr	x21, [sp, #32]
    6124:	str	x0, [sp, #16]
    6128:	ldr	x8, [x21]
    612c:	mov	x0, x21
    6130:	ldr	x8, [x8, #72]
    6134:	blr	x8
    6138:	ldr	x8, [x21]
    613c:	str	x0, [sp]
    6140:	mov	x0, x21
    6144:	ldr	x8, [x8, #80]
    6148:	blr	x8
    614c:	ldr	x8, [x19, #8]
    6150:	mov	x21, x0
    6154:	ldr	x9, [x8]
    6158:	mov	x0, x8
    615c:	ldr	x9, [x9, #48]
    6160:	blr	x9
    6164:	mov	x28, x0
    6168:	mov	w0, #0x70                  	// #112
    616c:	bl	0 <_Znwm>
    6170:	mov	x8, x0
    6174:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6178:	add	x9, x9, #0x0
    617c:	strb	wzr, [x8, #32]!
    6180:	str	x9, [x0]
    6184:	ldr	x9, [sp, #8]
    6188:	stp	x8, xzr, [x0, #16]
    618c:	ldr	x8, [sp]
    6190:	str	wzr, [x0, #48]
    6194:	str	x28, [x0, #104]
    6198:	stp	x21, x9, [x0, #64]
    619c:	str	x8, [x0, #56]
    61a0:	ldr	w8, [x26]
    61a4:	cmp	w8, #0x3
    61a8:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    61ac:	ldr	x9, [x22]
    61b0:	ldr	x21, [sp, #24]
    61b4:	ldr	x8, [x9, #24]
    61b8:	str	x0, [x9, #24]
    61bc:	cbz	x8, 61d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24f8>
    61c0:	ldr	x9, [x8]
    61c4:	mov	x0, x8
    61c8:	ldr	x9, [x9, #8]
    61cc:	blr	x9
    61d0:	ldr	x8, [x21]
    61d4:	mov	x0, x21
    61d8:	ldr	x8, [x8, #72]
    61dc:	blr	x8
    61e0:	ldr	x8, [x21]
    61e4:	str	x0, [sp, #32]
    61e8:	mov	x0, x21
    61ec:	ldr	x8, [x8, #80]
    61f0:	blr	x8
    61f4:	ldr	x8, [x19, #8]
    61f8:	mov	x28, x0
    61fc:	ldr	x9, [x8]
    6200:	mov	x0, x8
    6204:	ldr	x9, [x9, #48]
    6208:	blr	x9
    620c:	mov	x21, x0
    6210:	mov	w0, #0x70                  	// #112
    6214:	bl	0 <_Znwm>
    6218:	mov	x8, x0
    621c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6220:	strb	wzr, [x8, #32]!
    6224:	add	x9, x9, #0x0
    6228:	str	x9, [x0]
    622c:	ldr	x9, [sp, #16]
    6230:	stp	x8, xzr, [x0, #16]
    6234:	ldr	x8, [sp, #32]
    6238:	str	wzr, [x0, #48]
    623c:	str	x21, [x0, #104]
    6240:	stp	x28, x9, [x0, #64]
    6244:	str	x8, [x0, #56]
    6248:	ldr	w8, [x26]
    624c:	cmp	w8, #0x4
    6250:	b.ls	6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>  // b.plast
    6254:	ldr	x9, [x22]
    6258:	ldr	x8, [x9, #32]
    625c:	str	x0, [x9, #32]
    6260:	cbz	x8, 6274 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x259c>
    6264:	ldr	x9, [x8]
    6268:	mov	x0, x8
    626c:	ldr	x9, [x9, #8]
    6270:	blr	x9
    6274:	cmp	w25, #0x5
    6278:	b.eq	631c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2644>  // b.none
    627c:	cmp	w25, #0x3
    6280:	b.ne	687c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ba4>  // b.any
    6284:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6288:	add	x1, x1, #0x0
    628c:	mov	x0, x20
    6290:	mov	x2, x25
    6294:	bl	0 <bcmp>
    6298:	cbnz	w0, 687c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ba4>
    629c:	ldr	x8, [x27]
    62a0:	mov	x0, x27
    62a4:	ldr	x8, [x8, #72]
    62a8:	blr	x8
    62ac:	ldr	x8, [x19, #8]
    62b0:	mov	x21, x0
    62b4:	ldr	x9, [x8]
    62b8:	mov	x0, x8
    62bc:	ldr	x9, [x9, #48]
    62c0:	blr	x9
    62c4:	mov	x27, x0
    62c8:	mov	w0, #0x70                  	// #112
    62cc:	bl	0 <_Znwm>
    62d0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    62d4:	mov	x8, x0
    62d8:	add	x9, x9, #0x0
    62dc:	strb	wzr, [x8, #32]!
    62e0:	str	x9, [x0]
    62e4:	mov	w9, #0x6                   	// #6
    62e8:	str	w9, [x0, #48]
    62ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    62f0:	add	x9, x9, #0x0
    62f4:	mov	w10, #0x3                   	// #3
    62f8:	str	x27, [x0, #104]
    62fc:	b	6498 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x27c0>
    6300:	ldr	x0, [sp, #24]
    6304:	ldr	x8, [x0]
    6308:	ldr	x8, [x8, #72]
    630c:	blr	x8
    6310:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6314:	add	x8, x8, #0x0
    6318:	b	6090 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x23b8>
    631c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6320:	add	x1, x1, #0x0
    6324:	mov	x0, x20
    6328:	mov	x2, x25
    632c:	bl	0 <bcmp>
    6330:	cbz	w0, 6438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2760>
    6334:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6338:	add	x1, x1, #0x0
    633c:	mov	x0, x20
    6340:	mov	x2, x25
    6344:	bl	0 <bcmp>
    6348:	cbnz	w0, 687c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ba4>
    634c:	ldr	x8, [x27]
    6350:	mov	x0, x27
    6354:	ldr	x8, [x8, #72]
    6358:	blr	x8
    635c:	ldr	x8, [x19, #8]
    6360:	mov	x21, x0
    6364:	ldr	x9, [x8]
    6368:	mov	x0, x8
    636c:	ldr	x9, [x9, #48]
    6370:	blr	x9
    6374:	mov	x27, x0
    6378:	mov	w0, #0x70                  	// #112
    637c:	bl	0 <_Znwm>
    6380:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6384:	mov	x8, x0
    6388:	add	x9, x9, #0x0
    638c:	strb	wzr, [x8, #32]!
    6390:	str	x9, [x0]
    6394:	mov	w9, #0x6                   	// #6
    6398:	str	w9, [x0, #48]
    639c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    63a0:	add	x9, x9, #0x0
    63a4:	b	6490 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x27b8>
    63a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    63ac:	add	x1, x1, #0x0
    63b0:	mov	x0, x20
    63b4:	mov	x2, x25
    63b8:	mov	x28, x20
    63bc:	bl	0 <bcmp>
    63c0:	cbz	w0, 64bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x27e4>
    63c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    63c8:	add	x1, x1, #0x0
    63cc:	mov	x0, x28
    63d0:	mov	x2, x25
    63d4:	bl	0 <bcmp>
    63d8:	cbnz	w0, 6894 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>
    63dc:	ldr	x8, [x27]
    63e0:	mov	x0, x27
    63e4:	ldr	x8, [x8, #72]
    63e8:	blr	x8
    63ec:	ldr	x8, [x19, #8]
    63f0:	mov	x21, x0
    63f4:	ldr	x9, [x8]
    63f8:	mov	x0, x8
    63fc:	ldr	x9, [x9, #48]
    6400:	blr	x9
    6404:	mov	x27, x0
    6408:	mov	w0, #0x70                  	// #112
    640c:	bl	0 <_Znwm>
    6410:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6414:	mov	x8, x0
    6418:	add	x9, x9, #0x0
    641c:	strb	wzr, [x8, #32]!
    6420:	str	x9, [x0]
    6424:	mov	w9, #0x6                   	// #6
    6428:	str	w9, [x0, #48]
    642c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6430:	add	x9, x9, #0x0
    6434:	b	6514 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x283c>
    6438:	ldr	x8, [x27]
    643c:	mov	x0, x27
    6440:	ldr	x8, [x8, #72]
    6444:	blr	x8
    6448:	ldr	x8, [x19, #8]
    644c:	mov	x21, x0
    6450:	ldr	x9, [x8]
    6454:	mov	x0, x8
    6458:	ldr	x9, [x9, #48]
    645c:	blr	x9
    6460:	mov	x27, x0
    6464:	mov	w0, #0x70                  	// #112
    6468:	bl	0 <_Znwm>
    646c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6470:	mov	x8, x0
    6474:	add	x9, x9, #0x0
    6478:	strb	wzr, [x8, #32]!
    647c:	str	x9, [x0]
    6480:	mov	w9, #0x6                   	// #6
    6484:	str	w9, [x0, #48]
    6488:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    648c:	add	x9, x9, #0x0
    6490:	str	x27, [x0, #104]
    6494:	mov	w10, #0x4                   	// #4
    6498:	stp	x21, x9, [x0, #64]
    649c:	str	w10, [x0, #80]
    64a0:	strb	wzr, [x0, #84]
    64a4:	stp	x8, xzr, [x0, #16]
    64a8:	str	x21, [x0, #56]
    64ac:	ldr	w8, [x26]
    64b0:	cbz	w8, 6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>
    64b4:	ldr	x9, [x22]
    64b8:	b	6540 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2868>
    64bc:	ldr	x8, [x27]
    64c0:	mov	x0, x27
    64c4:	ldr	x8, [x8, #72]
    64c8:	blr	x8
    64cc:	ldr	x8, [x19, #8]
    64d0:	mov	x21, x0
    64d4:	ldr	x9, [x8]
    64d8:	mov	x0, x8
    64dc:	ldr	x9, [x9, #48]
    64e0:	blr	x9
    64e4:	mov	x27, x0
    64e8:	mov	w0, #0x70                  	// #112
    64ec:	bl	0 <_Znwm>
    64f0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    64f4:	mov	x8, x0
    64f8:	add	x9, x9, #0x0
    64fc:	strb	wzr, [x8, #32]!
    6500:	str	x9, [x0]
    6504:	mov	w9, #0x6                   	// #6
    6508:	str	w9, [x0, #48]
    650c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6510:	add	x9, x9, #0x0
    6514:	mov	w10, #0x4                   	// #4
    6518:	str	x27, [x0, #104]
    651c:	stp	x21, x9, [x0, #64]
    6520:	str	w10, [x0, #80]
    6524:	strb	wzr, [x0, #84]
    6528:	stp	x8, xzr, [x0, #16]
    652c:	str	x21, [x0, #56]
    6530:	ldr	w8, [x26]
    6534:	cbz	w8, 6578 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28a0>
    6538:	ldr	x9, [x22]
    653c:	mov	x20, x28
    6540:	ldr	x8, [x9]
    6544:	str	x0, [x9]
    6548:	cbnz	x8, 5b14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e3c>
    654c:	b	42a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5cc>
    6550:	mov	x0, x22
    6554:	mov	x1, xzr
    6558:	bl	0 <LLVMInitializeAArch64AsmParser>
    655c:	ldp	w8, w9, [x22, #8]
    6560:	b	5a6c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d94>
    6564:	mov	x0, x22
    6568:	mov	x1, xzr
    656c:	bl	0 <LLVMInitializeAArch64AsmParser>
    6570:	ldp	w8, w9, [x22, #8]
    6574:	b	5eec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2214>
    6578:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    657c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6580:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6584:	add	x0, x0, #0x0
    6588:	add	x1, x1, #0x0
    658c:	add	x3, x3, #0x0
    6590:	mov	w2, #0x95                  	// #149
    6594:	bl	0 <__assert_fail>
    6598:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    659c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    65a0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    65a4:	add	x0, x0, #0x0
    65a8:	add	x1, x1, #0x0
    65ac:	add	x3, x3, #0x0
    65b0:	mov	w2, #0x43                  	// #67
    65b4:	bl	0 <__assert_fail>
    65b8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    65bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    65c0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    65c4:	add	x0, x0, #0x0
    65c8:	add	x1, x1, #0x0
    65cc:	add	x3, x3, #0x0
    65d0:	mov	w2, #0x41                  	// #65
    65d4:	bl	0 <__assert_fail>
    65d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    65dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    65e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    65e4:	add	x0, x0, #0x0
    65e8:	add	x1, x1, #0x0
    65ec:	add	x3, x3, #0x0
    65f0:	mov	w2, #0x1ea                 	// #490
    65f4:	bl	0 <__assert_fail>
    65f8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    65fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6600:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6604:	add	x0, x0, #0x0
    6608:	add	x1, x1, #0x0
    660c:	add	x3, x3, #0x0
    6610:	mov	w2, #0x1194                	// #4500
    6614:	bl	0 <__assert_fail>
    6618:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    661c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6620:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6624:	add	x0, x0, #0x0
    6628:	add	x1, x1, #0x0
    662c:	add	x3, x3, #0x0
    6630:	mov	w2, #0x1196                	// #4502
    6634:	bl	0 <__assert_fail>
    6638:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    663c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6640:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6644:	add	x0, x0, #0x0
    6648:	add	x1, x1, #0x0
    664c:	add	x3, x3, #0x0
    6650:	mov	w2, #0x99                  	// #153
    6654:	bl	0 <__assert_fail>
    6658:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    665c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6660:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6664:	add	x0, x0, #0x0
    6668:	add	x1, x1, #0x0
    666c:	add	x3, x3, #0x0
    6670:	mov	w2, #0x95                  	// #149
    6674:	bl	0 <__assert_fail>
    6678:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    667c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6680:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6684:	add	x0, x0, #0x0
    6688:	add	x1, x1, #0x0
    668c:	add	x3, x3, #0x0
    6690:	mov	w2, #0x2d                  	// #45
    6694:	bl	0 <__assert_fail>
    6698:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    669c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    66a0:	add	x0, x0, #0x0
    66a4:	add	x1, x1, #0x0
    66a8:	mov	w2, #0x139a                	// #5018
    66ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    66b0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    66b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    66b8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    66bc:	add	x0, x0, #0x0
    66c0:	add	x1, x1, #0x0
    66c4:	add	x3, x3, #0x0
    66c8:	mov	w2, #0x38                  	// #56
    66cc:	bl	0 <__assert_fail>
    66d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    66d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    66d8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    66dc:	add	x0, x0, #0x0
    66e0:	add	x1, x1, #0x0
    66e4:	add	x3, x3, #0x0
    66e8:	mov	w2, #0x71                  	// #113
    66ec:	bl	0 <__assert_fail>
    66f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    66f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    66f8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    66fc:	add	x0, x0, #0x0
    6700:	add	x1, x1, #0x0
    6704:	add	x3, x3, #0x0
    6708:	mov	w2, #0x65                  	// #101
    670c:	bl	0 <__assert_fail>
    6710:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6714:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6718:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    671c:	add	x0, x0, #0x0
    6720:	add	x1, x1, #0x0
    6724:	add	x3, x3, #0x0
    6728:	mov	w2, #0x95                  	// #149
    672c:	bl	0 <__assert_fail>
    6730:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6734:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6738:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    673c:	add	x0, x0, #0x0
    6740:	add	x1, x1, #0x0
    6744:	add	x3, x3, #0x0
    6748:	mov	w2, #0xa7                  	// #167
    674c:	bl	0 <__assert_fail>
    6750:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6754:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6758:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    675c:	add	x0, x0, #0x0
    6760:	add	x1, x1, #0x0
    6764:	add	x3, x3, #0x0
    6768:	mov	w2, #0xf2a                 	// #3882
    676c:	bl	0 <__assert_fail>
    6770:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6774:	add	x0, x0, #0x0
    6778:	bl	0 <_ZSt20__throw_length_errorPKc>
    677c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6780:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6784:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6788:	add	x0, x0, #0x0
    678c:	add	x1, x1, #0x0
    6790:	add	x3, x3, #0x0
    6794:	mov	w2, #0x1ef                 	// #495
    6798:	bl	0 <__assert_fail>
    679c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    67a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    67a4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    67a8:	add	x0, x0, #0x0
    67ac:	add	x1, x1, #0x0
    67b0:	add	x3, x3, #0x0
    67b4:	mov	w2, #0x1b9                 	// #441
    67b8:	bl	0 <__assert_fail>
    67bc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    67c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    67c4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    67c8:	add	x0, x0, #0x0
    67cc:	add	x1, x1, #0x0
    67d0:	add	x3, x3, #0x0
    67d4:	mov	w2, #0xd1                  	// #209
    67d8:	bl	0 <__assert_fail>
    67dc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    67e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    67e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    67e8:	add	x0, x0, #0x0
    67ec:	add	x1, x1, #0x0
    67f0:	add	x3, x3, #0x0
    67f4:	mov	w2, #0x69                  	// #105
    67f8:	bl	0 <__assert_fail>
    67fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6800:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6804:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6808:	add	x0, x0, #0x0
    680c:	add	x1, x1, #0x0
    6810:	add	x3, x3, #0x0
    6814:	mov	w2, #0x1f4                 	// #500
    6818:	bl	0 <__assert_fail>
    681c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6820:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6824:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6828:	add	x0, x0, #0x0
    682c:	add	x1, x1, #0x0
    6830:	add	x3, x3, #0x0
    6834:	mov	w2, #0xa7                  	// #167
    6838:	bl	0 <__assert_fail>
    683c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6840:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6844:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6848:	add	x0, x0, #0x0
    684c:	add	x1, x1, #0x0
    6850:	add	x3, x3, #0x0
    6854:	mov	w2, #0x108                 	// #264
    6858:	bl	0 <__assert_fail>
    685c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6860:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6864:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6868:	add	x0, x0, #0x0
    686c:	add	x1, x1, #0x0
    6870:	add	x3, x3, #0x0
    6874:	mov	w2, #0x12df                	// #4831
    6878:	bl	0 <__assert_fail>
    687c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6880:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6884:	add	x0, x0, #0x0
    6888:	add	x1, x1, #0x0
    688c:	mov	w2, #0x122a                	// #4650
    6890:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6894:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6898:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    689c:	add	x0, x0, #0x0
    68a0:	add	x1, x1, #0x0
    68a4:	mov	w2, #0x1260                	// #4704
    68a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000068ac <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj>:
    68ac:	stp	x29, x30, [sp, #-32]!
    68b0:	stp	x20, x19, [sp, #16]
    68b4:	mov	x29, sp
    68b8:	sub	w20, w2, #0x13
    68bc:	cmp	w20, #0x16
    68c0:	b.hi	6928 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>  // b.pmore
    68c4:	mov	w8, #0x20eb                	// #8427
    68c8:	movk	w8, #0x5f, lsl #16
    68cc:	lsr	w8, w8, w20
    68d0:	tbz	w8, #0, 6928 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>
    68d4:	ldr	x8, [x1]
    68d8:	mov	x0, x1
    68dc:	mov	x19, x1
    68e0:	ldr	x8, [x8, #40]
    68e4:	blr	x8
    68e8:	tbz	w0, #0, 6928 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>
    68ec:	ldr	w8, [x19, #48]
    68f0:	cbnz	w8, 6938 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x8c>
    68f4:	ldr	x8, [x19, #72]
    68f8:	cbz	x8, 6958 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0xac>
    68fc:	ldr	w9, [x8]
    6900:	cmp	w9, #0x1
    6904:	b.ne	6928 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x7c>  // b.any
    6908:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    690c:	add	x9, x9, #0x0
    6910:	ldr	x9, [x9, w20, sxtw #3]
    6914:	ldr	x8, [x8, #16]
    6918:	cmp	x8, x9
    691c:	cset	w8, eq  // eq = none
    6920:	lsl	w0, w8, #2
    6924:	b	692c <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x80>
    6928:	mov	w0, wzr
    692c:	ldp	x20, x19, [sp, #16]
    6930:	ldp	x29, x30, [sp], #32
    6934:	ret
    6938:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    693c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6940:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6944:	add	x0, x0, #0x0
    6948:	add	x1, x1, #0x0
    694c:	add	x3, x3, #0x0
    6950:	mov	w2, #0x1f4                 	// #500
    6954:	bl	0 <__assert_fail>
    6958:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    695c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6960:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6964:	add	x0, x0, #0x0
    6968:	add	x1, x1, #0x0
    696c:	add	x3, x3, #0x0
    6970:	mov	w2, #0x69                  	// #105
    6974:	bl	0 <__assert_fail>

0000000000006978 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    6978:	stp	x29, x30, [sp, #-64]!
    697c:	stp	x24, x23, [sp, #16]
    6980:	stp	x22, x21, [sp, #32]
    6984:	stp	x20, x19, [sp, #48]
    6988:	mov	x29, sp
    698c:	cmp	w1, #0x68d
    6990:	b.cs	6b74 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>  // b.hs, b.nlast
    6994:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6998:	add	x8, x8, #0x0
    699c:	mov	w9, #0xd                   	// #13
    69a0:	umaddl	x20, w1, w9, x8
    69a4:	ldrb	w8, [x20]
    69a8:	cbz	w8, 6b28 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>
    69ac:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    69b0:	mov	x19, x2
    69b4:	mov	w21, wzr
    69b8:	add	x22, x2, #0x8
    69bc:	add	x23, x23, #0x0
    69c0:	and	w8, w8, #0xff
    69c4:	sub	w8, w8, #0x1
    69c8:	cmp	w8, #0x67
    69cc:	b.hi	6b5c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e4>  // b.pmore
    69d0:	adr	x9, 69e4 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x6c>
    69d4:	ldrb	w10, [x23, x8]
    69d8:	add	x9, x9, x10, lsl #2
    69dc:	mov	w24, #0x1                   	// #1
    69e0:	br	x9
    69e4:	ldrb	w9, [x20, #1]
    69e8:	ldr	w8, [x22]
    69ec:	cmp	x8, x9
    69f0:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    69f4:	ldr	x10, [x19]
    69f8:	ldr	x9, [x10, x9, lsl #3]
    69fc:	str	w21, [x9, #8]
    6a00:	ldrb	w9, [x20, #1]
    6a04:	cmp	x8, x9
    6a08:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6a0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a10:	add	x8, x10, x9, lsl #3
    6a14:	add	x1, x1, #0x0
    6a18:	mov	w2, #0x1                   	// #1
    6a1c:	b	6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    6a20:	ldrb	w9, [x20, #1]
    6a24:	ldr	w8, [x22]
    6a28:	cmp	x8, x9
    6a2c:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6a30:	ldr	x10, [x19]
    6a34:	ldr	x9, [x10, x9, lsl #3]
    6a38:	str	w21, [x9, #8]
    6a3c:	ldrb	w9, [x20, #1]
    6a40:	cmp	x8, x9
    6a44:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6a48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a4c:	add	x8, x10, x9, lsl #3
    6a50:	add	x1, x1, #0x0
    6a54:	mov	w24, #0x1                   	// #1
    6a58:	mov	w2, #0x1                   	// #1
    6a5c:	b	6a9c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x124>
    6a60:	ldrb	w9, [x20, #1]
    6a64:	ldr	w8, [x22]
    6a68:	cmp	x8, x9
    6a6c:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6a70:	ldr	x10, [x19]
    6a74:	ldr	x9, [x10, x9, lsl #3]
    6a78:	str	w21, [x9, #8]
    6a7c:	ldrb	w9, [x20, #1]
    6a80:	cmp	x8, x9
    6a84:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6a88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a8c:	mov	x2, xzr
    6a90:	add	x8, x10, x9, lsl #3
    6a94:	add	x1, x1, #0x0
    6a98:	mov	w24, #0x1                   	// #1
    6a9c:	ldr	x0, [x8]
    6aa0:	bl	0 <LLVMInitializeAArch64AsmParser>
    6aa4:	ldrb	w8, [x20, #2]!
    6aa8:	add	w21, w21, w24
    6aac:	cbnz	w8, 69c0 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x48>
    6ab0:	b	6b28 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>
    6ab4:	ldrb	w9, [x20, #1]
    6ab8:	ldr	w8, [x22]
    6abc:	cmp	x8, x9
    6ac0:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6ac4:	ldr	x10, [x19]
    6ac8:	ldr	x9, [x10, x9, lsl #3]
    6acc:	str	w21, [x9, #8]
    6ad0:	ldrb	w9, [x20, #1]
    6ad4:	cmp	x8, x9
    6ad8:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6adc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6ae0:	add	x8, x10, x9, lsl #3
    6ae4:	add	x1, x1, #0x0
    6ae8:	mov	w24, #0x2                   	// #2
    6aec:	b	6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe0>
    6af0:	ldrb	w9, [x20, #1]
    6af4:	ldr	w8, [x22]
    6af8:	cmp	x8, x9
    6afc:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6b00:	ldr	x10, [x19]
    6b04:	ldr	x9, [x10, x9, lsl #3]
    6b08:	str	w21, [x9, #8]
    6b0c:	ldrb	w9, [x20, #1]
    6b10:	cmp	x8, x9
    6b14:	b.ls	6b3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c4>  // b.plast
    6b18:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b1c:	add	x8, x10, x9, lsl #3
    6b20:	add	x1, x1, #0x0
    6b24:	b	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa0>
    6b28:	ldp	x20, x19, [sp, #48]
    6b2c:	ldp	x22, x21, [sp, #32]
    6b30:	ldp	x24, x23, [sp, #16]
    6b34:	ldp	x29, x30, [sp], #64
    6b38:	ret
    6b3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6b48:	add	x0, x0, #0x0
    6b4c:	add	x1, x1, #0x0
    6b50:	add	x3, x3, #0x0
    6b54:	mov	w2, #0x99                  	// #153
    6b58:	bl	0 <__assert_fail>
    6b5c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b60:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b64:	add	x0, x0, #0x0
    6b68:	add	x1, x1, #0x0
    6b6c:	mov	w2, #0x1a94                	// #6804
    6b70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6b74:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b7c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6b80:	add	x0, x0, #0x0
    6b84:	add	x1, x1, #0x0
    6b88:	add	x3, x3, #0x0
    6b8c:	mov	w2, #0x1a8f                	// #6799
    6b90:	bl	0 <__assert_fail>

0000000000006b94 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_>:
    6b94:	stp	x29, x30, [sp, #-32]!
    6b98:	stp	x20, x19, [sp, #16]
    6b9c:	mov	x29, sp
    6ba0:	ldr	w8, [x1, #48]
    6ba4:	cmp	w8, #0x3
    6ba8:	b.ne	6d10 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x17c>  // b.any
    6bac:	ldr	w8, [x1, #84]
    6bb0:	mov	x20, x1
    6bb4:	mov	x19, x2
    6bb8:	cbnz	w8, 6bd0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x3c>
    6bbc:	ldr	w9, [x19, #48]
    6bc0:	cmp	w9, #0x3
    6bc4:	b.ne	6d10 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x17c>  // b.any
    6bc8:	ldr	w9, [x19, #84]
    6bcc:	cbz	w9, 6c58 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xc4>
    6bd0:	ldr	w9, [x20, #76]
    6bd4:	cbnz	w9, 6cf0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x15c>
    6bd8:	ldr	w9, [x19, #48]
    6bdc:	cmp	w9, #0x3
    6be0:	b.ne	6cf0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x15c>  // b.any
    6be4:	ldr	w9, [x19, #76]
    6be8:	cbnz	w9, 6cf0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x15c>
    6bec:	cmp	w8, #0x2
    6bf0:	b.eq	6c14 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x80>  // b.none
    6bf4:	cmp	w8, #0x1
    6bf8:	b.ne	6c2c <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x98>  // b.any
    6bfc:	ldr	x8, [x20]
    6c00:	mov	x0, x20
    6c04:	ldr	x8, [x8, #56]
    6c08:	blr	x8
    6c0c:	bl	1152c <_ZN4llvmL15getXRegFromWRegEj>
    6c10:	b	6c90 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xfc>
    6c14:	ldr	x8, [x20]
    6c18:	mov	x0, x20
    6c1c:	ldr	x8, [x8, #56]
    6c20:	blr	x8
    6c24:	bl	11660 <_ZN4llvmL15getWRegFromXRegEj>
    6c28:	b	6c90 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xfc>
    6c2c:	ldr	w8, [x19, #84]
    6c30:	cmp	w8, #0x2
    6c34:	b.eq	6cac <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x118>  // b.none
    6c38:	cmp	w8, #0x1
    6c3c:	b.ne	6ce8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x154>  // b.any
    6c40:	ldr	x8, [x19]
    6c44:	mov	x0, x19
    6c48:	ldr	x8, [x8, #56]
    6c4c:	blr	x8
    6c50:	bl	1152c <_ZN4llvmL15getXRegFromWRegEj>
    6c54:	b	6cc0 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x12c>
    6c58:	ldr	x8, [x20]
    6c5c:	mov	x0, x20
    6c60:	ldr	x8, [x8, #48]
    6c64:	blr	x8
    6c68:	tbz	w0, #0, 6d30 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x19c>
    6c6c:	ldr	x8, [x19]
    6c70:	mov	x0, x19
    6c74:	ldr	x8, [x8, #48]
    6c78:	blr	x8
    6c7c:	tbz	w0, #0, 6d30 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x19c>
    6c80:	ldr	x8, [x20]
    6c84:	mov	x0, x20
    6c88:	ldr	x8, [x8, #56]
    6c8c:	blr	x8
    6c90:	ldr	x8, [x19]
    6c94:	mov	w20, w0
    6c98:	mov	x0, x19
    6c9c:	ldr	x8, [x8, #56]
    6ca0:	blr	x8
    6ca4:	cmp	w20, w0
    6ca8:	b	6cd8 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x144>
    6cac:	ldr	x8, [x19]
    6cb0:	mov	x0, x19
    6cb4:	ldr	x8, [x8, #56]
    6cb8:	blr	x8
    6cbc:	bl	11660 <_ZN4llvmL15getWRegFromXRegEj>
    6cc0:	ldr	x8, [x20]
    6cc4:	mov	w19, w0
    6cc8:	mov	x0, x20
    6ccc:	ldr	x8, [x8, #56]
    6cd0:	blr	x8
    6cd4:	cmp	w19, w0
    6cd8:	cset	w0, eq  // eq = none
    6cdc:	ldp	x20, x19, [sp, #16]
    6ce0:	ldp	x29, x30, [sp], #32
    6ce4:	ret
    6ce8:	mov	w0, wzr
    6cec:	b	6cdc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x148>
    6cf0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6cf4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6cf8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6cfc:	add	x0, x0, #0x0
    6d00:	add	x1, x1, #0x0
    6d04:	add	x3, x3, #0x0
    6d08:	mov	w2, #0xe92                 	// #3730
    6d0c:	bl	0 <__assert_fail>
    6d10:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6d14:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6d18:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6d1c:	add	x0, x0, #0x0
    6d20:	add	x1, x1, #0x0
    6d24:	add	x3, x3, #0x0
    6d28:	mov	w2, #0x221                 	// #545
    6d2c:	bl	0 <__assert_fail>
    6d30:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6d34:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6d38:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6d3c:	add	x0, x0, #0x0
    6d40:	add	x1, x1, #0x0
    6d44:	add	x3, x3, #0x0
    6d48:	mov	w2, #0x1c7                 	// #455
    6d4c:	bl	0 <__assert_fail>

0000000000006d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>:
    6d50:	sub	sp, sp, #0x60
    6d54:	stp	x29, x30, [sp, #48]
    6d58:	stp	x22, x21, [sp, #64]
    6d5c:	stp	x20, x19, [sp, #80]
    6d60:	add	x29, sp, #0x30
    6d64:	ldr	x19, [x0, #8]
    6d68:	mov	x21, x0
    6d6c:	mov	x20, x1
    6d70:	mov	x0, x19
    6d74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    6d78:	ldr	w8, [x0]
    6d7c:	cmp	w8, #0x2
    6d80:	b.ne	6dcc <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x7c>  // b.any
    6d84:	ldur	q0, [x0, #8]
    6d88:	add	x8, sp, #0x10
    6d8c:	mov	x0, sp
    6d90:	add	x22, sp, #0x10
    6d94:	str	q0, [sp]
    6d98:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    6d9c:	ldp	x1, x2, [sp, #16]
    6da0:	mov	x0, x21
    6da4:	mov	w3, wzr
    6da8:	bl	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    6dac:	cbz	w0, 6dd4 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x84>
    6db0:	str	w0, [x20]
    6db4:	ldr	x8, [x19]
    6db8:	mov	x0, x19
    6dbc:	ldr	x8, [x8, #136]
    6dc0:	blr	x8
    6dc4:	mov	w19, wzr
    6dc8:	b	6dd8 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x88>
    6dcc:	mov	w19, #0x1                   	// #1
    6dd0:	b	6dec <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x9c>
    6dd4:	mov	w19, #0x1                   	// #1
    6dd8:	ldr	x0, [sp, #16]
    6ddc:	add	x8, x22, #0x10
    6de0:	cmp	x0, x8
    6de4:	b.eq	6dec <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj+0x9c>  // b.none
    6de8:	bl	0 <_ZdlPv>
    6dec:	mov	w0, w19
    6df0:	ldp	x20, x19, [sp, #80]
    6df4:	ldp	x22, x21, [sp, #64]
    6df8:	ldp	x29, x30, [sp, #48]
    6dfc:	add	sp, sp, #0x60
    6e00:	ret

0000000000006e04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>:
    6e04:	sub	sp, sp, #0x70
    6e08:	stp	x29, x30, [sp, #64]
    6e0c:	stp	x22, x21, [sp, #80]
    6e10:	stp	x20, x19, [sp, #96]
    6e14:	add	x29, sp, #0x40
    6e18:	mov	x20, x0
    6e1c:	add	x8, sp, #0x10
    6e20:	sub	x0, x29, #0x10
    6e24:	mov	w19, w3
    6e28:	stp	x1, x2, [sp]
    6e2c:	stp	x1, x2, [x29, #-16]
    6e30:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    6e34:	ldp	x0, x8, [sp, #16]
    6e38:	cmp	x8, #0x3
    6e3c:	b.eq	6ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xf0>  // b.none
    6e40:	cmp	x8, #0x2
    6e44:	b.ne	71cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3c8>  // b.any
    6e48:	ldrh	w8, [x0]
    6e4c:	mov	w9, #0x307a                	// #12410
    6e50:	cmp	w8, w9
    6e54:	b.eq	71d4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3d0>  // b.none
    6e58:	ldrh	w8, [x0]
    6e5c:	mov	w9, #0x317a                	// #12666
    6e60:	cmp	w8, w9
    6e64:	b.eq	71ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3e8>  // b.none
    6e68:	ldrh	w8, [x0]
    6e6c:	mov	w9, #0x327a                	// #12922
    6e70:	cmp	w8, w9
    6e74:	b.eq	7204 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x400>  // b.none
    6e78:	ldrh	w8, [x0]
    6e7c:	mov	w9, #0x337a                	// #13178
    6e80:	cmp	w8, w9
    6e84:	b.eq	721c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x418>  // b.none
    6e88:	ldrh	w8, [x0]
    6e8c:	mov	w9, #0x347a                	// #13434
    6e90:	cmp	w8, w9
    6e94:	b.eq	7234 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x430>  // b.none
    6e98:	ldrh	w8, [x0]
    6e9c:	mov	w9, #0x357a                	// #13690
    6ea0:	cmp	w8, w9
    6ea4:	b.eq	724c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x448>  // b.none
    6ea8:	ldrh	w8, [x0]
    6eac:	mov	w9, #0x367a                	// #13946
    6eb0:	cmp	w8, w9
    6eb4:	b.eq	7264 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x460>  // b.none
    6eb8:	ldrh	w8, [x0]
    6ebc:	mov	w9, #0x377a                	// #14202
    6ec0:	cmp	w8, w9
    6ec4:	b.eq	727c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x478>  // b.none
    6ec8:	ldrh	w8, [x0]
    6ecc:	mov	w9, #0x387a                	// #14458
    6ed0:	cmp	w8, w9
    6ed4:	b.eq	7294 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x490>  // b.none
    6ed8:	ldrh	w8, [x0]
    6edc:	mov	w9, #0x397a                	// #14714
    6ee0:	mov	w21, wzr
    6ee4:	cmp	w8, w9
    6ee8:	b.ne	7348 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x544>  // b.any
    6eec:	mov	w8, #0xfe                  	// #254
    6ef0:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    6ef4:	ldrh	w9, [x0]
    6ef8:	ldrb	w10, [x0, #2]
    6efc:	mov	w8, #0x317a                	// #12666
    6f00:	eor	w9, w9, w8
    6f04:	eor	w10, w10, #0x30
    6f08:	orr	w9, w9, w10
    6f0c:	tst	w9, #0xffff
    6f10:	b.eq	71e0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3dc>  // b.none
    6f14:	ldrh	w9, [x0]
    6f18:	ldrb	w10, [x0, #2]
    6f1c:	mov	w11, #0x31                  	// #49
    6f20:	eor	w8, w9, w8
    6f24:	eor	w9, w10, w11
    6f28:	orr	w8, w8, w9
    6f2c:	tst	w8, #0xffff
    6f30:	b.eq	71f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f4>  // b.none
    6f34:	ldrh	w9, [x0]
    6f38:	ldrb	w10, [x0, #2]
    6f3c:	mov	w8, #0x317a                	// #12666
    6f40:	mov	w11, #0x32                  	// #50
    6f44:	eor	w9, w9, w8
    6f48:	eor	w10, w10, w11
    6f4c:	orr	w9, w9, w10
    6f50:	tst	w9, #0xffff
    6f54:	b.eq	7210 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x40c>  // b.none
    6f58:	ldrh	w9, [x0]
    6f5c:	ldrb	w10, [x0, #2]
    6f60:	mov	w11, #0x33                  	// #51
    6f64:	eor	w8, w9, w8
    6f68:	eor	w9, w10, w11
    6f6c:	orr	w8, w8, w9
    6f70:	tst	w8, #0xffff
    6f74:	b.eq	7228 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x424>  // b.none
    6f78:	ldrh	w9, [x0]
    6f7c:	ldrb	w10, [x0, #2]
    6f80:	mov	w8, #0x317a                	// #12666
    6f84:	mov	w11, #0x34                  	// #52
    6f88:	eor	w9, w9, w8
    6f8c:	eor	w10, w10, w11
    6f90:	orr	w9, w9, w10
    6f94:	tst	w9, #0xffff
    6f98:	b.eq	7240 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x43c>  // b.none
    6f9c:	ldrh	w9, [x0]
    6fa0:	ldrb	w10, [x0, #2]
    6fa4:	mov	w11, #0x35                  	// #53
    6fa8:	eor	w8, w9, w8
    6fac:	eor	w9, w10, w11
    6fb0:	orr	w8, w8, w9
    6fb4:	tst	w8, #0xffff
    6fb8:	b.eq	7258 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x454>  // b.none
    6fbc:	ldrh	w9, [x0]
    6fc0:	ldrb	w10, [x0, #2]
    6fc4:	mov	w8, #0x317a                	// #12666
    6fc8:	mov	w11, #0x36                  	// #54
    6fcc:	eor	w9, w9, w8
    6fd0:	eor	w10, w10, w11
    6fd4:	orr	w9, w9, w10
    6fd8:	tst	w9, #0xffff
    6fdc:	b.eq	7270 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x46c>  // b.none
    6fe0:	ldrh	w9, [x0]
    6fe4:	ldrb	w10, [x0, #2]
    6fe8:	mov	w11, #0x37                  	// #55
    6fec:	eor	w8, w9, w8
    6ff0:	eor	w9, w10, w11
    6ff4:	orr	w8, w8, w9
    6ff8:	tst	w8, #0xffff
    6ffc:	b.eq	7288 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x484>  // b.none
    7000:	ldrh	w9, [x0]
    7004:	ldrb	w10, [x0, #2]
    7008:	mov	w8, #0x317a                	// #12666
    700c:	eor	w9, w9, w8
    7010:	eor	w10, w10, #0x38
    7014:	orr	w9, w9, w10
    7018:	tst	w9, #0xffff
    701c:	b.eq	72a0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x49c>  // b.none
    7020:	ldrh	w9, [x0]
    7024:	ldrb	w10, [x0, #2]
    7028:	mov	w11, #0x39                  	// #57
    702c:	eor	w8, w9, w8
    7030:	eor	w9, w10, w11
    7034:	orr	w8, w8, w9
    7038:	tst	w8, #0xffff
    703c:	b.eq	72ac <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4a8>  // b.none
    7040:	ldrh	w9, [x0]
    7044:	ldrb	w10, [x0, #2]
    7048:	mov	w8, #0x327a                	// #12922
    704c:	eor	w9, w9, w8
    7050:	eor	w10, w10, #0x30
    7054:	orr	w9, w9, w10
    7058:	tst	w9, #0xffff
    705c:	b.eq	72b8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4b4>  // b.none
    7060:	ldrh	w9, [x0]
    7064:	ldrb	w10, [x0, #2]
    7068:	mov	w11, #0x31                  	// #49
    706c:	eor	w8, w9, w8
    7070:	eor	w9, w10, w11
    7074:	orr	w8, w8, w9
    7078:	tst	w8, #0xffff
    707c:	b.eq	72c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4c0>  // b.none
    7080:	ldrh	w9, [x0]
    7084:	ldrb	w10, [x0, #2]
    7088:	mov	w8, #0x327a                	// #12922
    708c:	mov	w11, #0x32                  	// #50
    7090:	eor	w9, w9, w8
    7094:	eor	w10, w10, w11
    7098:	orr	w9, w9, w10
    709c:	tst	w9, #0xffff
    70a0:	b.eq	72d0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4cc>  // b.none
    70a4:	ldrh	w9, [x0]
    70a8:	ldrb	w10, [x0, #2]
    70ac:	mov	w11, #0x33                  	// #51
    70b0:	eor	w8, w9, w8
    70b4:	eor	w9, w10, w11
    70b8:	orr	w8, w8, w9
    70bc:	tst	w8, #0xffff
    70c0:	b.eq	72dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4d8>  // b.none
    70c4:	ldrh	w9, [x0]
    70c8:	ldrb	w10, [x0, #2]
    70cc:	mov	w8, #0x327a                	// #12922
    70d0:	mov	w11, #0x34                  	// #52
    70d4:	eor	w9, w9, w8
    70d8:	eor	w10, w10, w11
    70dc:	orr	w9, w9, w10
    70e0:	tst	w9, #0xffff
    70e4:	b.eq	72e8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4e4>  // b.none
    70e8:	ldrh	w9, [x0]
    70ec:	ldrb	w10, [x0, #2]
    70f0:	mov	w11, #0x35                  	// #53
    70f4:	eor	w8, w9, w8
    70f8:	eor	w9, w10, w11
    70fc:	orr	w8, w8, w9
    7100:	tst	w8, #0xffff
    7104:	b.eq	72f4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4f0>  // b.none
    7108:	ldrh	w9, [x0]
    710c:	ldrb	w10, [x0, #2]
    7110:	mov	w8, #0x327a                	// #12922
    7114:	mov	w11, #0x36                  	// #54
    7118:	eor	w9, w9, w8
    711c:	eor	w10, w10, w11
    7120:	orr	w9, w9, w10
    7124:	tst	w9, #0xffff
    7128:	b.eq	7300 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4fc>  // b.none
    712c:	ldrh	w9, [x0]
    7130:	ldrb	w10, [x0, #2]
    7134:	mov	w11, #0x37                  	// #55
    7138:	eor	w8, w9, w8
    713c:	eor	w9, w10, w11
    7140:	orr	w8, w8, w9
    7144:	tst	w8, #0xffff
    7148:	b.eq	730c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x508>  // b.none
    714c:	ldrh	w9, [x0]
    7150:	ldrb	w10, [x0, #2]
    7154:	mov	w8, #0x327a                	// #12922
    7158:	eor	w9, w9, w8
    715c:	eor	w10, w10, #0x38
    7160:	orr	w9, w9, w10
    7164:	tst	w9, #0xffff
    7168:	b.eq	7318 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x514>  // b.none
    716c:	ldrh	w9, [x0]
    7170:	ldrb	w10, [x0, #2]
    7174:	mov	w11, #0x39                  	// #57
    7178:	eor	w8, w9, w8
    717c:	eor	w9, w10, w11
    7180:	orr	w8, w8, w9
    7184:	tst	w8, #0xffff
    7188:	b.eq	7324 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x520>  // b.none
    718c:	ldrh	w9, [x0]
    7190:	ldrb	w10, [x0, #2]
    7194:	mov	w8, #0x337a                	// #13178
    7198:	eor	w9, w9, w8
    719c:	eor	w10, w10, #0x30
    71a0:	orr	w9, w9, w10
    71a4:	tst	w9, #0xffff
    71a8:	b.eq	7330 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x52c>  // b.none
    71ac:	ldrh	w9, [x0]
    71b0:	ldrb	w10, [x0, #2]
    71b4:	mov	w11, #0x31                  	// #49
    71b8:	eor	w8, w9, w8
    71bc:	eor	w9, w10, w11
    71c0:	orr	w8, w8, w9
    71c4:	tst	w8, #0xffff
    71c8:	b.eq	733c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x538>  // b.none
    71cc:	mov	w21, wzr
    71d0:	b	7348 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x544>
    71d4:	mov	w21, wzr
    71d8:	mov	w8, #0xf5                  	// #245
    71dc:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    71e0:	mov	w21, wzr
    71e4:	mov	w8, #0xff                  	// #255
    71e8:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    71ec:	mov	w21, wzr
    71f0:	mov	w8, #0xf6                  	// #246
    71f4:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    71f8:	mov	w8, wzr
    71fc:	mov	w21, #0x100                 	// #256
    7200:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7204:	mov	w21, wzr
    7208:	mov	w8, #0xf7                  	// #247
    720c:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7210:	mov	w21, #0x100                 	// #256
    7214:	mov	w8, #0x1                   	// #1
    7218:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    721c:	mov	w21, wzr
    7220:	mov	w8, #0xf8                  	// #248
    7224:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7228:	mov	w21, #0x100                 	// #256
    722c:	mov	w8, #0x2                   	// #2
    7230:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7234:	mov	w21, wzr
    7238:	mov	w8, #0xf9                  	// #249
    723c:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7240:	mov	w21, #0x100                 	// #256
    7244:	mov	w8, #0x3                   	// #3
    7248:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    724c:	mov	w21, wzr
    7250:	mov	w8, #0xfa                  	// #250
    7254:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7258:	mov	w21, #0x100                 	// #256
    725c:	mov	w8, #0x4                   	// #4
    7260:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7264:	mov	w21, wzr
    7268:	mov	w8, #0xfb                  	// #251
    726c:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7270:	mov	w21, #0x100                 	// #256
    7274:	mov	w8, #0x5                   	// #5
    7278:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    727c:	mov	w21, wzr
    7280:	mov	w8, #0xfc                  	// #252
    7284:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7288:	mov	w21, #0x100                 	// #256
    728c:	mov	w8, #0x6                   	// #6
    7290:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7294:	mov	w21, wzr
    7298:	mov	w8, #0xfd                  	// #253
    729c:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72a0:	mov	w21, #0x100                 	// #256
    72a4:	mov	w8, #0x7                   	// #7
    72a8:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72ac:	mov	w21, #0x100                 	// #256
    72b0:	mov	w8, #0x8                   	// #8
    72b4:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72b8:	mov	w21, #0x100                 	// #256
    72bc:	mov	w8, #0x9                   	// #9
    72c0:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72c4:	mov	w21, #0x100                 	// #256
    72c8:	mov	w8, #0xa                   	// #10
    72cc:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72d0:	mov	w21, #0x100                 	// #256
    72d4:	mov	w8, #0xb                   	// #11
    72d8:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72dc:	mov	w21, #0x100                 	// #256
    72e0:	mov	w8, #0xc                   	// #12
    72e4:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72e8:	mov	w21, #0x100                 	// #256
    72ec:	mov	w8, #0xd                   	// #13
    72f0:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    72f4:	mov	w21, #0x100                 	// #256
    72f8:	mov	w8, #0xe                   	// #14
    72fc:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7300:	mov	w21, #0x100                 	// #256
    7304:	mov	w8, #0xf                   	// #15
    7308:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    730c:	mov	w21, #0x100                 	// #256
    7310:	mov	w8, #0x10                  	// #16
    7314:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7318:	mov	w21, #0x100                 	// #256
    731c:	mov	w8, #0x11                  	// #17
    7320:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7324:	mov	w21, #0x100                 	// #256
    7328:	mov	w8, #0x12                  	// #18
    732c:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    7330:	mov	w21, #0x100                 	// #256
    7334:	mov	w8, #0x13                  	// #19
    7338:	b	7344 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x540>
    733c:	mov	w21, #0x100                 	// #256
    7340:	mov	w8, #0x14                  	// #20
    7344:	orr	w21, w21, w8
    7348:	add	x8, sp, #0x10
    734c:	add	x8, x8, #0x10
    7350:	cmp	x0, x8
    7354:	b.eq	735c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x558>  // b.none
    7358:	bl	0 <_ZdlPv>
    735c:	cbz	w21, 736c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x568>
    7360:	cmp	w19, #0x2
    7364:	csel	w0, w21, wzr, eq  // eq = none
    7368:	b	87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    736c:	ldp	x8, x9, [sp]
    7370:	sub	x0, x29, #0x10
    7374:	stp	x8, x9, [x29, #-16]
    7378:	add	x8, sp, #0x10
    737c:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7380:	ldp	x0, x8, [sp, #16]
    7384:	cmp	x8, #0x3
    7388:	b.eq	743c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x638>  // b.none
    738c:	cmp	x8, #0x2
    7390:	b.ne	7504 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x700>  // b.any
    7394:	ldrh	w8, [x0]
    7398:	mov	w9, #0x3070                	// #12400
    739c:	cmp	w8, w9
    73a0:	b.eq	750c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x708>  // b.none
    73a4:	ldrh	w8, [x0]
    73a8:	mov	w9, #0x3170                	// #12656
    73ac:	cmp	w8, w9
    73b0:	b.eq	751c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x718>  // b.none
    73b4:	ldrh	w8, [x0]
    73b8:	mov	w9, #0x3270                	// #12912
    73bc:	cmp	w8, w9
    73c0:	b.eq	752c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x728>  // b.none
    73c4:	ldrh	w8, [x0]
    73c8:	mov	w9, #0x3370                	// #13168
    73cc:	cmp	w8, w9
    73d0:	b.eq	753c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x738>  // b.none
    73d4:	ldrh	w8, [x0]
    73d8:	mov	w9, #0x3470                	// #13424
    73dc:	cmp	w8, w9
    73e0:	b.eq	754c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x748>  // b.none
    73e4:	ldrh	w8, [x0]
    73e8:	mov	w9, #0x3570                	// #13680
    73ec:	cmp	w8, w9
    73f0:	b.eq	755c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x758>  // b.none
    73f4:	ldrh	w8, [x0]
    73f8:	mov	w9, #0x3670                	// #13936
    73fc:	cmp	w8, w9
    7400:	b.eq	756c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x768>  // b.none
    7404:	ldrh	w8, [x0]
    7408:	mov	w9, #0x3770                	// #14192
    740c:	cmp	w8, w9
    7410:	b.eq	7574 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x770>  // b.none
    7414:	ldrh	w8, [x0]
    7418:	mov	w9, #0x3870                	// #14448
    741c:	cmp	w8, w9
    7420:	b.eq	757c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x778>  // b.none
    7424:	ldrh	w8, [x0]
    7428:	mov	w9, #0x3970                	// #14704
    742c:	cmp	w8, w9
    7430:	b.ne	7504 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x700>  // b.any
    7434:	mov	w21, #0x72                  	// #114
    7438:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    743c:	ldrh	w9, [x0]
    7440:	ldrb	w10, [x0, #2]
    7444:	mov	w8, #0x3170                	// #12656
    7448:	eor	w9, w9, w8
    744c:	eor	w10, w10, #0x30
    7450:	orr	w9, w9, w10
    7454:	tst	w9, #0xffff
    7458:	b.eq	7514 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x710>  // b.none
    745c:	ldrh	w9, [x0]
    7460:	ldrb	w10, [x0, #2]
    7464:	mov	w11, #0x31                  	// #49
    7468:	eor	w8, w9, w8
    746c:	eor	w9, w10, w11
    7470:	orr	w8, w8, w9
    7474:	tst	w8, #0xffff
    7478:	b.eq	7524 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x720>  // b.none
    747c:	ldrh	w9, [x0]
    7480:	ldrb	w10, [x0, #2]
    7484:	mov	w8, #0x3170                	// #12656
    7488:	mov	w11, #0x32                  	// #50
    748c:	eor	w9, w9, w8
    7490:	eor	w10, w10, w11
    7494:	orr	w9, w9, w10
    7498:	tst	w9, #0xffff
    749c:	b.eq	7534 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x730>  // b.none
    74a0:	ldrh	w9, [x0]
    74a4:	ldrb	w10, [x0, #2]
    74a8:	mov	w11, #0x33                  	// #51
    74ac:	eor	w8, w9, w8
    74b0:	eor	w9, w10, w11
    74b4:	orr	w8, w8, w9
    74b8:	tst	w8, #0xffff
    74bc:	b.eq	7544 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x740>  // b.none
    74c0:	ldrh	w9, [x0]
    74c4:	ldrb	w10, [x0, #2]
    74c8:	mov	w8, #0x3170                	// #12656
    74cc:	mov	w11, #0x34                  	// #52
    74d0:	eor	w9, w9, w8
    74d4:	eor	w10, w10, w11
    74d8:	orr	w9, w9, w10
    74dc:	tst	w9, #0xffff
    74e0:	b.eq	7554 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x750>  // b.none
    74e4:	ldrh	w9, [x0]
    74e8:	ldrb	w10, [x0, #2]
    74ec:	mov	w11, #0x35                  	// #53
    74f0:	eor	w8, w9, w8
    74f4:	eor	w9, w10, w11
    74f8:	orr	w8, w8, w9
    74fc:	tst	w8, #0xffff
    7500:	b.eq	7564 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x760>  // b.none
    7504:	mov	w21, wzr
    7508:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    750c:	mov	w21, #0x69                  	// #105
    7510:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7514:	mov	w21, #0x73                  	// #115
    7518:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    751c:	mov	w21, #0x6a                  	// #106
    7520:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7524:	mov	w21, #0x74                  	// #116
    7528:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    752c:	mov	w21, #0x6b                  	// #107
    7530:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7534:	mov	w21, #0x75                  	// #117
    7538:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    753c:	mov	w21, #0x6c                  	// #108
    7540:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7544:	mov	w21, #0x76                  	// #118
    7548:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    754c:	mov	w21, #0x6d                  	// #109
    7550:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7554:	mov	w21, #0x77                  	// #119
    7558:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    755c:	mov	w21, #0x6e                  	// #110
    7560:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7564:	mov	w21, #0x78                  	// #120
    7568:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    756c:	mov	w21, #0x6f                  	// #111
    7570:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    7574:	mov	w21, #0x70                  	// #112
    7578:	b	7580 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x77c>
    757c:	mov	w21, #0x71                  	// #113
    7580:	add	x8, sp, #0x10
    7584:	add	x8, x8, #0x10
    7588:	cmp	x0, x8
    758c:	b.eq	7594 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x790>  // b.none
    7590:	bl	0 <_ZdlPv>
    7594:	cbz	w21, 75a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x7a0>
    7598:	cmp	w19, #0x3
    759c:	csel	w0, w21, wzr, eq  // eq = none
    75a0:	b	87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    75a4:	ldp	x8, x9, [sp]
    75a8:	sub	x0, x29, #0x10
    75ac:	stp	x8, x9, [x29, #-16]
    75b0:	add	x8, sp, #0x10
    75b4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    75b8:	ldp	x0, x8, [sp, #16]
    75bc:	cmp	x8, #0x3
    75c0:	b.eq	7674 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x870>  // b.none
    75c4:	cmp	x8, #0x2
    75c8:	b.ne	766c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x868>  // b.any
    75cc:	ldrh	w8, [x0]
    75d0:	mov	w9, #0x3076                	// #12406
    75d4:	cmp	w8, w9
    75d8:	b.eq	7954 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb50>  // b.none
    75dc:	ldrh	w8, [x0]
    75e0:	mov	w9, #0x3176                	// #12662
    75e4:	cmp	w8, w9
    75e8:	b.eq	7964 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb60>  // b.none
    75ec:	ldrh	w8, [x0]
    75f0:	mov	w9, #0x3276                	// #12918
    75f4:	cmp	w8, w9
    75f8:	b.eq	7974 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb70>  // b.none
    75fc:	ldrh	w8, [x0]
    7600:	mov	w9, #0x3376                	// #13174
    7604:	cmp	w8, w9
    7608:	b.eq	7984 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb80>  // b.none
    760c:	ldrh	w8, [x0]
    7610:	mov	w9, #0x3476                	// #13430
    7614:	cmp	w8, w9
    7618:	b.eq	7994 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb90>  // b.none
    761c:	ldrh	w8, [x0]
    7620:	mov	w9, #0x3576                	// #13686
    7624:	cmp	w8, w9
    7628:	b.eq	79a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xba0>  // b.none
    762c:	ldrh	w8, [x0]
    7630:	mov	w9, #0x3676                	// #13942
    7634:	cmp	w8, w9
    7638:	b.eq	79b4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb0>  // b.none
    763c:	ldrh	w8, [x0]
    7640:	mov	w9, #0x3776                	// #14198
    7644:	cmp	w8, w9
    7648:	b.eq	79c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbc0>  // b.none
    764c:	ldrh	w8, [x0]
    7650:	mov	w9, #0x3876                	// #14454
    7654:	cmp	w8, w9
    7658:	b.eq	79d4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbd0>  // b.none
    765c:	ldrh	w8, [x0]
    7660:	mov	w9, #0x3976                	// #14710
    7664:	cmp	w8, w9
    7668:	b.eq	79e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbe0>  // b.none
    766c:	mov	w21, wzr
    7670:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7674:	ldrh	w9, [x0]
    7678:	ldrb	w10, [x0, #2]
    767c:	mov	w8, #0x3176                	// #12662
    7680:	eor	w9, w9, w8
    7684:	eor	w10, w10, #0x30
    7688:	orr	w9, w9, w10
    768c:	tst	w9, #0xffff
    7690:	b.eq	795c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb58>  // b.none
    7694:	ldrh	w9, [x0]
    7698:	ldrb	w10, [x0, #2]
    769c:	mov	w11, #0x31                  	// #49
    76a0:	eor	w8, w9, w8
    76a4:	eor	w9, w10, w11
    76a8:	orr	w8, w8, w9
    76ac:	tst	w8, #0xffff
    76b0:	b.eq	796c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb68>  // b.none
    76b4:	ldrh	w9, [x0]
    76b8:	ldrb	w10, [x0, #2]
    76bc:	mov	w8, #0x3176                	// #12662
    76c0:	mov	w11, #0x32                  	// #50
    76c4:	eor	w9, w9, w8
    76c8:	eor	w10, w10, w11
    76cc:	orr	w9, w9, w10
    76d0:	tst	w9, #0xffff
    76d4:	b.eq	797c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb78>  // b.none
    76d8:	ldrh	w9, [x0]
    76dc:	ldrb	w10, [x0, #2]
    76e0:	mov	w11, #0x33                  	// #51
    76e4:	eor	w8, w9, w8
    76e8:	eor	w9, w10, w11
    76ec:	orr	w8, w8, w9
    76f0:	tst	w8, #0xffff
    76f4:	b.eq	798c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb88>  // b.none
    76f8:	ldrh	w9, [x0]
    76fc:	ldrb	w10, [x0, #2]
    7700:	mov	w8, #0x3176                	// #12662
    7704:	mov	w11, #0x34                  	// #52
    7708:	eor	w9, w9, w8
    770c:	eor	w10, w10, w11
    7710:	orr	w9, w9, w10
    7714:	tst	w9, #0xffff
    7718:	b.eq	799c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb98>  // b.none
    771c:	ldrh	w9, [x0]
    7720:	ldrb	w10, [x0, #2]
    7724:	mov	w11, #0x35                  	// #53
    7728:	eor	w8, w9, w8
    772c:	eor	w9, w10, w11
    7730:	orr	w8, w8, w9
    7734:	tst	w8, #0xffff
    7738:	b.eq	79ac <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xba8>  // b.none
    773c:	ldrh	w9, [x0]
    7740:	ldrb	w10, [x0, #2]
    7744:	mov	w8, #0x3176                	// #12662
    7748:	mov	w11, #0x36                  	// #54
    774c:	eor	w9, w9, w8
    7750:	eor	w10, w10, w11
    7754:	orr	w9, w9, w10
    7758:	tst	w9, #0xffff
    775c:	b.eq	79bc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb8>  // b.none
    7760:	ldrh	w9, [x0]
    7764:	ldrb	w10, [x0, #2]
    7768:	mov	w11, #0x37                  	// #55
    776c:	eor	w8, w9, w8
    7770:	eor	w9, w10, w11
    7774:	orr	w8, w8, w9
    7778:	tst	w8, #0xffff
    777c:	b.eq	79cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbc8>  // b.none
    7780:	ldrh	w9, [x0]
    7784:	ldrb	w10, [x0, #2]
    7788:	mov	w8, #0x3176                	// #12662
    778c:	eor	w9, w9, w8
    7790:	eor	w10, w10, #0x38
    7794:	orr	w9, w9, w10
    7798:	tst	w9, #0xffff
    779c:	b.eq	79dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbd8>  // b.none
    77a0:	ldrh	w9, [x0]
    77a4:	ldrb	w10, [x0, #2]
    77a8:	mov	w11, #0x39                  	// #57
    77ac:	eor	w8, w9, w8
    77b0:	eor	w9, w10, w11
    77b4:	orr	w8, w8, w9
    77b8:	tst	w8, #0xffff
    77bc:	b.eq	79ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbe8>  // b.none
    77c0:	ldrh	w9, [x0]
    77c4:	ldrb	w10, [x0, #2]
    77c8:	mov	w8, #0x3276                	// #12918
    77cc:	eor	w9, w9, w8
    77d0:	eor	w10, w10, #0x30
    77d4:	orr	w9, w9, w10
    77d8:	tst	w9, #0xffff
    77dc:	b.eq	79f4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbf0>  // b.none
    77e0:	ldrh	w9, [x0]
    77e4:	ldrb	w10, [x0, #2]
    77e8:	mov	w11, #0x31                  	// #49
    77ec:	eor	w8, w9, w8
    77f0:	eor	w9, w10, w11
    77f4:	orr	w8, w8, w9
    77f8:	tst	w8, #0xffff
    77fc:	b.eq	79fc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbf8>  // b.none
    7800:	ldrh	w9, [x0]
    7804:	ldrb	w10, [x0, #2]
    7808:	mov	w8, #0x3276                	// #12918
    780c:	mov	w11, #0x32                  	// #50
    7810:	eor	w9, w9, w8
    7814:	eor	w10, w10, w11
    7818:	orr	w9, w9, w10
    781c:	tst	w9, #0xffff
    7820:	b.eq	7a04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc00>  // b.none
    7824:	ldrh	w9, [x0]
    7828:	ldrb	w10, [x0, #2]
    782c:	mov	w11, #0x33                  	// #51
    7830:	eor	w8, w9, w8
    7834:	eor	w9, w10, w11
    7838:	orr	w8, w8, w9
    783c:	tst	w8, #0xffff
    7840:	b.eq	7a0c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc08>  // b.none
    7844:	ldrh	w9, [x0]
    7848:	ldrb	w10, [x0, #2]
    784c:	mov	w8, #0x3276                	// #12918
    7850:	mov	w11, #0x34                  	// #52
    7854:	eor	w9, w9, w8
    7858:	eor	w10, w10, w11
    785c:	orr	w9, w9, w10
    7860:	tst	w9, #0xffff
    7864:	b.eq	7a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc10>  // b.none
    7868:	ldrh	w9, [x0]
    786c:	ldrb	w10, [x0, #2]
    7870:	mov	w11, #0x35                  	// #53
    7874:	eor	w8, w9, w8
    7878:	eor	w9, w10, w11
    787c:	orr	w8, w8, w9
    7880:	tst	w8, #0xffff
    7884:	b.eq	7a1c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc18>  // b.none
    7888:	ldrh	w9, [x0]
    788c:	ldrb	w10, [x0, #2]
    7890:	mov	w8, #0x3276                	// #12918
    7894:	mov	w11, #0x36                  	// #54
    7898:	eor	w9, w9, w8
    789c:	eor	w10, w10, w11
    78a0:	orr	w9, w9, w10
    78a4:	tst	w9, #0xffff
    78a8:	b.eq	7a24 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc20>  // b.none
    78ac:	ldrh	w9, [x0]
    78b0:	ldrb	w10, [x0, #2]
    78b4:	mov	w11, #0x37                  	// #55
    78b8:	eor	w8, w9, w8
    78bc:	eor	w9, w10, w11
    78c0:	orr	w8, w8, w9
    78c4:	tst	w8, #0xffff
    78c8:	b.eq	7a2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc28>  // b.none
    78cc:	ldrh	w9, [x0]
    78d0:	ldrb	w10, [x0, #2]
    78d4:	mov	w8, #0x3276                	// #12918
    78d8:	eor	w9, w9, w8
    78dc:	eor	w10, w10, #0x38
    78e0:	orr	w9, w9, w10
    78e4:	tst	w9, #0xffff
    78e8:	b.eq	7a34 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc30>  // b.none
    78ec:	ldrh	w9, [x0]
    78f0:	ldrb	w10, [x0, #2]
    78f4:	mov	w11, #0x39                  	// #57
    78f8:	eor	w8, w9, w8
    78fc:	eor	w9, w10, w11
    7900:	orr	w8, w8, w9
    7904:	tst	w8, #0xffff
    7908:	b.eq	7a3c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>  // b.none
    790c:	ldrh	w9, [x0]
    7910:	ldrb	w10, [x0, #2]
    7914:	mov	w8, #0x3376                	// #13174
    7918:	eor	w9, w9, w8
    791c:	eor	w10, w10, #0x30
    7920:	orr	w9, w9, w10
    7924:	tst	w9, #0xffff
    7928:	b.eq	7a44 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc40>  // b.none
    792c:	ldrh	w9, [x0]
    7930:	ldrb	w10, [x0, #2]
    7934:	mov	w11, #0x31                  	// #49
    7938:	eor	w8, w9, w8
    793c:	eor	w9, w10, w11
    7940:	orr	w8, w8, w9
    7944:	tst	w8, #0xffff
    7948:	b.ne	766c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x868>  // b.any
    794c:	mov	w21, #0x98                  	// #152
    7950:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7954:	mov	w21, #0x79                  	// #121
    7958:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    795c:	mov	w21, #0x83                  	// #131
    7960:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7964:	mov	w21, #0x7a                  	// #122
    7968:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    796c:	mov	w21, #0x84                  	// #132
    7970:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7974:	mov	w21, #0x7b                  	// #123
    7978:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    797c:	mov	w21, #0x85                  	// #133
    7980:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7984:	mov	w21, #0x7c                  	// #124
    7988:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    798c:	mov	w21, #0x86                  	// #134
    7990:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7994:	mov	w21, #0x7d                  	// #125
    7998:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    799c:	mov	w21, #0x87                  	// #135
    79a0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79a4:	mov	w21, #0x7e                  	// #126
    79a8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79ac:	mov	w21, #0x88                  	// #136
    79b0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79b4:	mov	w21, #0x7f                  	// #127
    79b8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79bc:	mov	w21, #0x89                  	// #137
    79c0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79c4:	mov	w21, #0x80                  	// #128
    79c8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79cc:	mov	w21, #0x8a                  	// #138
    79d0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79d4:	mov	w21, #0x81                  	// #129
    79d8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79dc:	mov	w21, #0x8b                  	// #139
    79e0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79e4:	mov	w21, #0x82                  	// #130
    79e8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79ec:	mov	w21, #0x8c                  	// #140
    79f0:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79f4:	mov	w21, #0x8d                  	// #141
    79f8:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    79fc:	mov	w21, #0x8e                  	// #142
    7a00:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a04:	mov	w21, #0x8f                  	// #143
    7a08:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a0c:	mov	w21, #0x90                  	// #144
    7a10:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a14:	mov	w21, #0x91                  	// #145
    7a18:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a1c:	mov	w21, #0x92                  	// #146
    7a20:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a24:	mov	w21, #0x93                  	// #147
    7a28:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a2c:	mov	w21, #0x94                  	// #148
    7a30:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a34:	mov	w21, #0x95                  	// #149
    7a38:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a3c:	mov	w21, #0x96                  	// #150
    7a40:	b	7a48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc44>
    7a44:	mov	w21, #0x97                  	// #151
    7a48:	add	x8, sp, #0x10
    7a4c:	add	x8, x8, #0x10
    7a50:	cmp	x0, x8
    7a54:	b.eq	7a5c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc58>  // b.none
    7a58:	bl	0 <_ZdlPv>
    7a5c:	cbz	w21, 7a6c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc68>
    7a60:	cmp	w19, #0x1
    7a64:	csel	w0, w21, wzr, eq  // eq = none
    7a68:	b	87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    7a6c:	ldr	x8, [sp, #8]
    7a70:	sub	x9, x8, #0x2
    7a74:	cmp	x9, #0x4
    7a78:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7a7c:	ldr	x8, [sp]
    7a80:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7a84:	add	x10, x10, #0x0
    7a88:	adr	x11, 7a98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc94>
    7a8c:	ldrb	w12, [x10, x9]
    7a90:	add	x11, x11, x12, lsl #2
    7a94:	br	x11
    7a98:	ldrb	w9, [x8]
    7a9c:	sub	w9, w9, #0x62
    7aa0:	cmp	w9, #0x18
    7aa4:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7aa8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7aac:	add	x10, x10, #0x0
    7ab0:	adr	x11, 7ac0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xcbc>
    7ab4:	ldrh	w12, [x10, x9, lsl #1]
    7ab8:	add	x11, x11, x12, lsl #2
    7abc:	br	x11
    7ac0:	ldrb	w8, [x8, #1]
    7ac4:	sub	w8, w8, #0x30
    7ac8:	cmp	w8, #0xa
    7acc:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7ad0:	and	w8, w8, #0xff
    7ad4:	add	w8, w8, #0x9
    7ad8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7adc:	ldrb	w9, [x8]
    7ae0:	sub	w9, w9, #0x62
    7ae4:	cmp	w9, #0x18
    7ae8:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7aec:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7af0:	add	x10, x10, #0x0
    7af4:	adr	x11, 7b04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd00>
    7af8:	ldrh	w12, [x10, x9, lsl #1]
    7afc:	add	x11, x11, x12, lsl #2
    7b00:	br	x11
    7b04:	ldrb	w9, [x8, #1]
    7b08:	cmp	w9, #0x33
    7b0c:	b.eq	81a0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x139c>  // b.none
    7b10:	cmp	w9, #0x32
    7b14:	b.eq	81c0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13bc>  // b.none
    7b18:	cmp	w9, #0x31
    7b1c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7b20:	ldrb	w8, [x8, #2]
    7b24:	sub	w8, w8, #0x30
    7b28:	cmp	w8, #0xa
    7b2c:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7b30:	and	w8, w8, #0xff
    7b34:	add	w8, w8, #0x13
    7b38:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7b3c:	ldr	w8, [x8]
    7b40:	mov	w9, #0x7a6e                	// #31342
    7b44:	movk	w9, #0x7663, lsl #16
    7b48:	cmp	w8, w9
    7b4c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7b50:	mov	w8, #0x4                   	// #4
    7b54:	cmp	w19, #0x0
    7b58:	csel	w0, w8, wzr, eq  // eq = none
    7b5c:	b	87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    7b60:	ldrb	w9, [x8]
    7b64:	cmp	w9, #0x7a
    7b68:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7b6c:	ldrb	w9, [x8, #1]
    7b70:	sub	w9, w9, #0x30
    7b74:	cmp	w9, #0x9
    7b78:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7b7c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7b80:	add	x10, x10, #0x0
    7b84:	adr	x11, 7b94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd90>
    7b88:	ldrh	w12, [x10, x9, lsl #1]
    7b8c:	add	x11, x11, x12, lsl #2
    7b90:	br	x11
    7b94:	ldrh	w9, [x8, #2]
    7b98:	ldrb	w8, [x8, #4]
    7b9c:	mov	w10, #0x685f                	// #26719
    7ba0:	mov	w11, #0x69                  	// #105
    7ba4:	eor	w9, w9, w10
    7ba8:	eor	w8, w8, w11
    7bac:	orr	w8, w9, w8
    7bb0:	tst	w8, #0xffff
    7bb4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7bb8:	mov	w8, #0x115                 	// #277
    7bbc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7bc0:	ldrb	w9, [x8]
    7bc4:	cmp	w9, #0x7a
    7bc8:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7bcc:	ldrb	w9, [x8, #1]
    7bd0:	cmp	w9, #0x33
    7bd4:	b.eq	7c3c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe38>  // b.none
    7bd8:	cmp	w9, #0x32
    7bdc:	b.eq	7c7c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe78>  // b.none
    7be0:	cmp	w9, #0x31
    7be4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7be8:	ldrb	w9, [x8, #2]
    7bec:	sub	w9, w9, #0x30
    7bf0:	cmp	w9, #0x9
    7bf4:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7bf8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7bfc:	add	x10, x10, #0x0
    7c00:	adr	x11, 7c10 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe0c>
    7c04:	ldrh	w12, [x10, x9, lsl #1]
    7c08:	add	x11, x11, x12, lsl #2
    7c0c:	br	x11
    7c10:	ldurh	w9, [x8, #3]
    7c14:	ldrb	w8, [x8, #5]
    7c18:	mov	w10, #0x685f                	// #26719
    7c1c:	mov	w11, #0x69                  	// #105
    7c20:	eor	w9, w9, w10
    7c24:	eor	w8, w8, w11
    7c28:	orr	w8, w9, w8
    7c2c:	tst	w8, #0xffff
    7c30:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7c34:	mov	w8, #0x11f                 	// #287
    7c38:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7c3c:	ldrb	w9, [x8, #2]
    7c40:	cmp	w9, #0x31
    7c44:	b.eq	8148 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1344>  // b.none
    7c48:	cmp	w9, #0x30
    7c4c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7c50:	ldurh	w9, [x8, #3]
    7c54:	ldrb	w8, [x8, #5]
    7c58:	mov	w10, #0x685f                	// #26719
    7c5c:	mov	w11, #0x69                  	// #105
    7c60:	eor	w9, w9, w10
    7c64:	eor	w8, w8, w11
    7c68:	orr	w8, w9, w8
    7c6c:	tst	w8, #0xffff
    7c70:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7c74:	mov	w8, #0x133                 	// #307
    7c78:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7c7c:	ldrb	w9, [x8, #2]
    7c80:	sub	w9, w9, #0x30
    7c84:	cmp	w9, #0x9
    7c88:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7c8c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7c90:	add	x10, x10, #0x0
    7c94:	adr	x11, 7ca4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xea0>
    7c98:	ldrh	w12, [x10, x9, lsl #1]
    7c9c:	add	x11, x11, x12, lsl #2
    7ca0:	br	x11
    7ca4:	ldurh	w9, [x8, #3]
    7ca8:	ldrb	w8, [x8, #5]
    7cac:	mov	w10, #0x685f                	// #26719
    7cb0:	mov	w11, #0x69                  	// #105
    7cb4:	eor	w9, w9, w10
    7cb8:	eor	w8, w8, w11
    7cbc:	orr	w8, w9, w8
    7cc0:	tst	w8, #0xffff
    7cc4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7cc8:	mov	w8, #0x129                 	// #297
    7ccc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7cd0:	ldrb	w8, [x8, #1]
    7cd4:	sub	w8, w8, #0x30
    7cd8:	cmp	w8, #0xa
    7cdc:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7ce0:	and	w8, w8, #0xff
    7ce4:	add	w8, w8, #0x29
    7ce8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7cec:	ldrb	w8, [x8, #1]
    7cf0:	sub	w8, w8, #0x30
    7cf4:	cmp	w8, #0xa
    7cf8:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7cfc:	and	w8, w8, #0xff
    7d00:	add	w8, w8, #0x49
    7d04:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d08:	ldrb	w8, [x8, #1]
    7d0c:	sub	w8, w8, #0x30
    7d10:	cmp	w8, #0xa
    7d14:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7d18:	and	w8, w8, #0xff
    7d1c:	add	w8, w8, #0x69
    7d20:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d24:	ldrb	w8, [x8, #1]
    7d28:	sub	w8, w8, #0x30
    7d2c:	cmp	w8, #0xa
    7d30:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7d34:	and	w8, w8, #0xff
    7d38:	add	w8, w8, #0x79
    7d3c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d40:	ldrb	w8, [x8, #1]
    7d44:	sub	w8, w8, #0x30
    7d48:	cmp	w8, #0x40
    7d4c:	b.hi	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.pmore
    7d50:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    7d54:	add	x9, x9, #0x0
    7d58:	adr	x10, 7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d5c:	ldrh	w11, [x9, x8, lsl #1]
    7d60:	add	x10, x10, x11, lsl #2
    7d64:	mov	w8, #0x99                  	// #153
    7d68:	br	x10
    7d6c:	mov	w8, #0x9a                  	// #154
    7d70:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d74:	ldrb	w8, [x8, #1]
    7d78:	sub	w8, w8, #0x30
    7d7c:	cmp	w8, #0xa
    7d80:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7d84:	and	w8, w8, #0xff
    7d88:	add	w8, w8, #0xb9
    7d8c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7d90:	ldrb	w8, [x8, #1]
    7d94:	sub	w8, w8, #0x30
    7d98:	cmp	w8, #0xa
    7d9c:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7da0:	and	w8, w8, #0xff
    7da4:	add	w8, w8, #0xd8
    7da8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7dac:	ldrb	w8, [x8, #1]
    7db0:	sub	w8, w8, #0x30
    7db4:	cmp	w8, #0xa
    7db8:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7dbc:	and	w8, w8, #0xff
    7dc0:	add	w8, w8, #0xf5
    7dc4:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7dc8:	ldrb	w9, [x8, #1]
    7dcc:	cmp	w9, #0x33
    7dd0:	b.eq	81dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13d8>  // b.none
    7dd4:	cmp	w9, #0x32
    7dd8:	b.eq	81fc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13f8>  // b.none
    7ddc:	cmp	w9, #0x31
    7de0:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7de4:	ldrb	w8, [x8, #2]
    7de8:	sub	w8, w8, #0x30
    7dec:	cmp	w8, #0xa
    7df0:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7df4:	and	w8, w8, #0xff
    7df8:	add	w8, w8, #0x33
    7dfc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7e00:	ldurh	w8, [x8, #1]
    7e04:	mov	w9, #0x7266                	// #29286
    7e08:	cmp	w8, w9
    7e0c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7e10:	mov	w8, #0x1                   	// #1
    7e14:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7e18:	ldrb	w9, [x8, #1]
    7e1c:	cmp	w9, #0x33
    7e20:	b.eq	8218 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1414>  // b.none
    7e24:	cmp	w9, #0x32
    7e28:	b.eq	8238 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1434>  // b.none
    7e2c:	cmp	w9, #0x31
    7e30:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7e34:	ldrb	w8, [x8, #2]
    7e38:	sub	w8, w8, #0x30
    7e3c:	cmp	w8, #0xa
    7e40:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7e44:	and	w8, w8, #0xff
    7e48:	add	w8, w8, #0x53
    7e4c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7e50:	ldrb	w9, [x8, #1]
    7e54:	cmp	w9, #0x31
    7e58:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7e5c:	ldrb	w8, [x8, #2]
    7e60:	sub	w8, w8, #0x30
    7e64:	cmp	w8, #0x6
    7e68:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7e6c:	and	w8, w8, #0xff
    7e70:	add	w8, w8, #0x73
    7e74:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7e78:	ldrb	w9, [x8, #1]
    7e7c:	cmp	w9, #0x33
    7e80:	b.eq	8254 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1450>  // b.none
    7e84:	cmp	w9, #0x32
    7e88:	b.eq	8274 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1470>  // b.none
    7e8c:	cmp	w9, #0x31
    7e90:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7e94:	ldrb	w8, [x8, #2]
    7e98:	sub	w8, w8, #0x30
    7e9c:	cmp	w8, #0xa
    7ea0:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7ea4:	and	w8, w8, #0xff
    7ea8:	add	w8, w8, #0x83
    7eac:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7eb0:	ldrb	w9, [x8, #1]
    7eb4:	cmp	w9, #0x33
    7eb8:	b.eq	8290 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x148c>  // b.none
    7ebc:	cmp	w9, #0x32
    7ec0:	b.eq	82b0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14ac>  // b.none
    7ec4:	cmp	w9, #0x31
    7ec8:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7ecc:	ldrb	w8, [x8, #2]
    7ed0:	sub	w8, w8, #0x30
    7ed4:	cmp	w8, #0xa
    7ed8:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7edc:	and	w8, w8, #0xff
    7ee0:	add	w8, w8, #0xa3
    7ee4:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7ee8:	ldrb	w9, [x8, #1]
    7eec:	cmp	w9, #0x32
    7ef0:	b.le	8174 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1370>
    7ef4:	cmp	w9, #0x33
    7ef8:	b.eq	8340 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x153c>  // b.none
    7efc:	cmp	w9, #0x73
    7f00:	b.eq	8354 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1550>  // b.none
    7f04:	cmp	w9, #0x7a
    7f08:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7f0c:	ldrb	w8, [x8, #2]
    7f10:	cmp	w8, #0x72
    7f14:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7f18:	mov	w8, #0x7                   	// #7
    7f1c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7f20:	ldrb	w9, [x8, #1]
    7f24:	cmp	w9, #0x32
    7f28:	b.gt	8124 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1320>
    7f2c:	cmp	w9, #0x31
    7f30:	b.eq	8310 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x150c>  // b.none
    7f34:	cmp	w9, #0x32
    7f38:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7f3c:	ldrb	w8, [x8, #2]
    7f40:	sub	w8, w8, #0x30
    7f44:	cmp	w8, #0xa
    7f48:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7f4c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    7f50:	sxtb	x8, w8
    7f54:	add	x9, x9, #0x0
    7f58:	ldr	w8, [x9, x8, lsl #2]
    7f5c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7f60:	ldrb	w9, [x8, #1]
    7f64:	cmp	w9, #0x33
    7f68:	b.eq	82cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14c8>  // b.none
    7f6c:	cmp	w9, #0x32
    7f70:	b.eq	82f4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14f0>  // b.none
    7f74:	cmp	w9, #0x31
    7f78:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7f7c:	ldrb	w8, [x8, #2]
    7f80:	sub	w8, w8, #0x30
    7f84:	cmp	w8, #0xa
    7f88:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    7f8c:	and	w8, w8, #0xff
    7f90:	add	w8, w8, #0xff
    7f94:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7f98:	ldrh	w9, [x8, #2]
    7f9c:	ldrb	w8, [x8, #4]
    7fa0:	mov	w10, #0x685f                	// #26719
    7fa4:	mov	w11, #0x69                  	// #105
    7fa8:	eor	w9, w9, w10
    7fac:	eor	w8, w8, w11
    7fb0:	orr	w8, w9, w8
    7fb4:	tst	w8, #0xffff
    7fb8:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7fbc:	mov	w8, #0x116                 	// #278
    7fc0:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7fc4:	ldrh	w9, [x8, #2]
    7fc8:	ldrb	w8, [x8, #4]
    7fcc:	mov	w10, #0x685f                	// #26719
    7fd0:	mov	w11, #0x69                  	// #105
    7fd4:	eor	w9, w9, w10
    7fd8:	eor	w8, w8, w11
    7fdc:	orr	w8, w9, w8
    7fe0:	tst	w8, #0xffff
    7fe4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    7fe8:	mov	w8, #0x117                 	// #279
    7fec:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    7ff0:	ldrh	w9, [x8, #2]
    7ff4:	ldrb	w8, [x8, #4]
    7ff8:	mov	w10, #0x685f                	// #26719
    7ffc:	mov	w11, #0x69                  	// #105
    8000:	eor	w9, w9, w10
    8004:	eor	w8, w8, w11
    8008:	orr	w8, w9, w8
    800c:	tst	w8, #0xffff
    8010:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8014:	mov	w8, #0x118                 	// #280
    8018:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    801c:	ldrh	w9, [x8, #2]
    8020:	ldrb	w8, [x8, #4]
    8024:	mov	w10, #0x685f                	// #26719
    8028:	mov	w11, #0x69                  	// #105
    802c:	eor	w9, w9, w10
    8030:	eor	w8, w8, w11
    8034:	orr	w8, w9, w8
    8038:	tst	w8, #0xffff
    803c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8040:	mov	w8, #0x119                 	// #281
    8044:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8048:	ldrh	w9, [x8, #2]
    804c:	ldrb	w8, [x8, #4]
    8050:	mov	w10, #0x685f                	// #26719
    8054:	mov	w11, #0x69                  	// #105
    8058:	eor	w9, w9, w10
    805c:	eor	w8, w8, w11
    8060:	orr	w8, w9, w8
    8064:	tst	w8, #0xffff
    8068:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    806c:	mov	w8, #0x11a                 	// #282
    8070:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8074:	ldrh	w9, [x8, #2]
    8078:	ldrb	w8, [x8, #4]
    807c:	mov	w10, #0x685f                	// #26719
    8080:	mov	w11, #0x69                  	// #105
    8084:	eor	w9, w9, w10
    8088:	eor	w8, w8, w11
    808c:	orr	w8, w9, w8
    8090:	tst	w8, #0xffff
    8094:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8098:	mov	w8, #0x11b                 	// #283
    809c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    80a0:	ldrh	w9, [x8, #2]
    80a4:	ldrb	w8, [x8, #4]
    80a8:	mov	w10, #0x685f                	// #26719
    80ac:	mov	w11, #0x69                  	// #105
    80b0:	eor	w9, w9, w10
    80b4:	eor	w8, w8, w11
    80b8:	orr	w8, w9, w8
    80bc:	tst	w8, #0xffff
    80c0:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    80c4:	mov	w8, #0x11c                 	// #284
    80c8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    80cc:	ldrh	w9, [x8, #2]
    80d0:	ldrb	w8, [x8, #4]
    80d4:	mov	w10, #0x685f                	// #26719
    80d8:	mov	w11, #0x69                  	// #105
    80dc:	eor	w9, w9, w10
    80e0:	eor	w8, w8, w11
    80e4:	orr	w8, w9, w8
    80e8:	tst	w8, #0xffff
    80ec:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    80f0:	mov	w8, #0x11d                 	// #285
    80f4:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    80f8:	ldrh	w9, [x8, #2]
    80fc:	ldrb	w8, [x8, #4]
    8100:	mov	w10, #0x685f                	// #26719
    8104:	mov	w11, #0x69                  	// #105
    8108:	eor	w9, w9, w10
    810c:	eor	w8, w8, w11
    8110:	orr	w8, w9, w8
    8114:	tst	w8, #0xffff
    8118:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    811c:	mov	w8, #0x11e                 	// #286
    8120:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8124:	cmp	w9, #0x33
    8128:	b.eq	832c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1528>  // b.none
    812c:	cmp	w9, #0x7a
    8130:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8134:	ldrb	w8, [x8, #2]
    8138:	cmp	w8, #0x72
    813c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8140:	mov	w8, #0x8                   	// #8
    8144:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8148:	ldurh	w9, [x8, #3]
    814c:	ldrb	w8, [x8, #5]
    8150:	mov	w10, #0x685f                	// #26719
    8154:	mov	w11, #0x69                  	// #105
    8158:	eor	w9, w9, w10
    815c:	eor	w8, w8, w11
    8160:	orr	w8, w9, w8
    8164:	tst	w8, #0xffff
    8168:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    816c:	mov	w8, #0x134                 	// #308
    8170:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8174:	cmp	w9, #0x31
    8178:	b.eq	8368 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1564>  // b.none
    817c:	cmp	w9, #0x32
    8180:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8184:	ldrb	w8, [x8, #2]
    8188:	sub	w8, w8, #0x30
    818c:	cmp	w8, #0xa
    8190:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8194:	and	w8, w8, #0xff
    8198:	add	w8, w8, #0xcd
    819c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    81a0:	ldrb	w9, [x8, #2]
    81a4:	mov	w8, #0x28                  	// #40
    81a8:	cmp	w9, #0x31
    81ac:	csel	w8, w8, wzr, eq  // eq = none
    81b0:	cmp	w9, #0x30
    81b4:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    81b8:	mov	w8, #0x27                  	// #39
    81bc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    81c0:	ldrb	w8, [x8, #2]
    81c4:	sub	w8, w8, #0x30
    81c8:	cmp	w8, #0xa
    81cc:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    81d0:	and	w8, w8, #0xff
    81d4:	add	w8, w8, #0x1d
    81d8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    81dc:	ldrb	w9, [x8, #2]
    81e0:	mov	w8, #0x48                  	// #72
    81e4:	cmp	w9, #0x31
    81e8:	csel	w8, w8, wzr, eq  // eq = none
    81ec:	cmp	w9, #0x30
    81f0:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    81f4:	mov	w8, #0x47                  	// #71
    81f8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    81fc:	ldrb	w8, [x8, #2]
    8200:	sub	w8, w8, #0x30
    8204:	cmp	w8, #0xa
    8208:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    820c:	and	w8, w8, #0xff
    8210:	add	w8, w8, #0x3d
    8214:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8218:	ldrb	w9, [x8, #2]
    821c:	mov	w8, #0x68                  	// #104
    8220:	cmp	w9, #0x31
    8224:	csel	w8, w8, wzr, eq  // eq = none
    8228:	cmp	w9, #0x30
    822c:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    8230:	mov	w8, #0x67                  	// #103
    8234:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8238:	ldrb	w8, [x8, #2]
    823c:	sub	w8, w8, #0x30
    8240:	cmp	w8, #0xa
    8244:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8248:	and	w8, w8, #0xff
    824c:	add	w8, w8, #0x5d
    8250:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8254:	ldrb	w9, [x8, #2]
    8258:	mov	w8, #0x98                  	// #152
    825c:	cmp	w9, #0x31
    8260:	csel	w8, w8, wzr, eq  // eq = none
    8264:	cmp	w9, #0x30
    8268:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    826c:	mov	w8, #0x97                  	// #151
    8270:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8274:	ldrb	w8, [x8, #2]
    8278:	sub	w8, w8, #0x30
    827c:	cmp	w8, #0xa
    8280:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8284:	and	w8, w8, #0xff
    8288:	add	w8, w8, #0x8d
    828c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8290:	ldrb	w9, [x8, #2]
    8294:	mov	w8, #0xb8                  	// #184
    8298:	cmp	w9, #0x31
    829c:	csel	w8, w8, wzr, eq  // eq = none
    82a0:	cmp	w9, #0x30
    82a4:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    82a8:	mov	w8, #0xb7                  	// #183
    82ac:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    82b0:	ldrb	w8, [x8, #2]
    82b4:	sub	w8, w8, #0x30
    82b8:	cmp	w8, #0xa
    82bc:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    82c0:	and	w8, w8, #0xff
    82c4:	add	w8, w8, #0xad
    82c8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    82cc:	ldrb	w9, [x8, #2]
    82d0:	mov	w8, #0x114                 	// #276
    82d4:	cmp	w9, #0x31
    82d8:	csel	w8, w8, wzr, eq  // eq = none
    82dc:	cmp	w9, #0x30
    82e0:	b.ne	82ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14e8>  // b.any
    82e4:	mov	w8, #0x113                 	// #275
    82e8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    82ec:	cbnz	w8, 7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    82f0:	b	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>
    82f4:	ldrb	w8, [x8, #2]
    82f8:	sub	w8, w8, #0x30
    82fc:	cmp	w8, #0xa
    8300:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8304:	and	w8, w8, #0xff
    8308:	add	w8, w8, #0x109
    830c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8310:	ldrb	w8, [x8, #2]
    8314:	sub	w8, w8, #0x30
    8318:	cmp	w8, #0xa
    831c:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8320:	and	w8, w8, #0xff
    8324:	add	w8, w8, #0xe2
    8328:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    832c:	ldrb	w8, [x8, #2]
    8330:	cmp	w8, #0x30
    8334:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8338:	mov	w8, #0x3                   	// #3
    833c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8340:	ldrb	w8, [x8, #2]
    8344:	cmp	w8, #0x30
    8348:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    834c:	mov	w8, #0xd7                  	// #215
    8350:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8354:	ldrb	w8, [x8, #2]
    8358:	cmp	w8, #0x70
    835c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8360:	mov	w8, #0x6                   	// #6
    8364:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8368:	ldrb	w8, [x8, #2]
    836c:	sub	w8, w8, #0x30
    8370:	cmp	w8, #0xa
    8374:	b.cs	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.hs, b.nlast
    8378:	and	w8, w8, #0xff
    837c:	add	w8, w8, #0xc3
    8380:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8384:	ldurh	w9, [x8, #3]
    8388:	ldrb	w8, [x8, #5]
    838c:	mov	w10, #0x685f                	// #26719
    8390:	mov	w11, #0x69                  	// #105
    8394:	eor	w9, w9, w10
    8398:	eor	w8, w8, w11
    839c:	orr	w8, w9, w8
    83a0:	tst	w8, #0xffff
    83a4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    83a8:	mov	w8, #0x120                 	// #288
    83ac:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    83b0:	ldurh	w9, [x8, #3]
    83b4:	ldrb	w8, [x8, #5]
    83b8:	mov	w10, #0x685f                	// #26719
    83bc:	mov	w11, #0x69                  	// #105
    83c0:	eor	w9, w9, w10
    83c4:	eor	w8, w8, w11
    83c8:	orr	w8, w9, w8
    83cc:	tst	w8, #0xffff
    83d0:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    83d4:	mov	w8, #0x121                 	// #289
    83d8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    83dc:	ldurh	w9, [x8, #3]
    83e0:	ldrb	w8, [x8, #5]
    83e4:	mov	w10, #0x685f                	// #26719
    83e8:	mov	w11, #0x69                  	// #105
    83ec:	eor	w9, w9, w10
    83f0:	eor	w8, w8, w11
    83f4:	orr	w8, w9, w8
    83f8:	tst	w8, #0xffff
    83fc:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8400:	mov	w8, #0x122                 	// #290
    8404:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8408:	ldurh	w9, [x8, #3]
    840c:	ldrb	w8, [x8, #5]
    8410:	mov	w10, #0x685f                	// #26719
    8414:	mov	w11, #0x69                  	// #105
    8418:	eor	w9, w9, w10
    841c:	eor	w8, w8, w11
    8420:	orr	w8, w9, w8
    8424:	tst	w8, #0xffff
    8428:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    842c:	mov	w8, #0x123                 	// #291
    8430:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8434:	ldurh	w9, [x8, #3]
    8438:	ldrb	w8, [x8, #5]
    843c:	mov	w10, #0x685f                	// #26719
    8440:	mov	w11, #0x69                  	// #105
    8444:	eor	w9, w9, w10
    8448:	eor	w8, w8, w11
    844c:	orr	w8, w9, w8
    8450:	tst	w8, #0xffff
    8454:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8458:	mov	w8, #0x124                 	// #292
    845c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8460:	ldurh	w9, [x8, #3]
    8464:	ldrb	w8, [x8, #5]
    8468:	mov	w10, #0x685f                	// #26719
    846c:	mov	w11, #0x69                  	// #105
    8470:	eor	w9, w9, w10
    8474:	eor	w8, w8, w11
    8478:	orr	w8, w9, w8
    847c:	tst	w8, #0xffff
    8480:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8484:	mov	w8, #0x125                 	// #293
    8488:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    848c:	ldurh	w9, [x8, #3]
    8490:	ldrb	w8, [x8, #5]
    8494:	mov	w10, #0x685f                	// #26719
    8498:	mov	w11, #0x69                  	// #105
    849c:	eor	w9, w9, w10
    84a0:	eor	w8, w8, w11
    84a4:	orr	w8, w9, w8
    84a8:	tst	w8, #0xffff
    84ac:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    84b0:	mov	w8, #0x126                 	// #294
    84b4:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    84b8:	ldurh	w9, [x8, #3]
    84bc:	ldrb	w8, [x8, #5]
    84c0:	mov	w10, #0x685f                	// #26719
    84c4:	mov	w11, #0x69                  	// #105
    84c8:	eor	w9, w9, w10
    84cc:	eor	w8, w8, w11
    84d0:	orr	w8, w9, w8
    84d4:	tst	w8, #0xffff
    84d8:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    84dc:	mov	w8, #0x127                 	// #295
    84e0:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    84e4:	ldurh	w9, [x8, #3]
    84e8:	ldrb	w8, [x8, #5]
    84ec:	mov	w10, #0x685f                	// #26719
    84f0:	mov	w11, #0x69                  	// #105
    84f4:	eor	w9, w9, w10
    84f8:	eor	w8, w8, w11
    84fc:	orr	w8, w9, w8
    8500:	tst	w8, #0xffff
    8504:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8508:	mov	w8, #0x128                 	// #296
    850c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8510:	ldurh	w9, [x8, #3]
    8514:	ldrb	w8, [x8, #5]
    8518:	mov	w10, #0x685f                	// #26719
    851c:	mov	w11, #0x69                  	// #105
    8520:	eor	w9, w9, w10
    8524:	eor	w8, w8, w11
    8528:	orr	w8, w9, w8
    852c:	tst	w8, #0xffff
    8530:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8534:	mov	w8, #0x12a                 	// #298
    8538:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    853c:	ldurh	w9, [x8, #3]
    8540:	ldrb	w8, [x8, #5]
    8544:	mov	w10, #0x685f                	// #26719
    8548:	mov	w11, #0x69                  	// #105
    854c:	eor	w9, w9, w10
    8550:	eor	w8, w8, w11
    8554:	orr	w8, w9, w8
    8558:	tst	w8, #0xffff
    855c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8560:	mov	w8, #0x12b                 	// #299
    8564:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8568:	ldurh	w9, [x8, #3]
    856c:	ldrb	w8, [x8, #5]
    8570:	mov	w10, #0x685f                	// #26719
    8574:	mov	w11, #0x69                  	// #105
    8578:	eor	w9, w9, w10
    857c:	eor	w8, w8, w11
    8580:	orr	w8, w9, w8
    8584:	tst	w8, #0xffff
    8588:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    858c:	mov	w8, #0x12c                 	// #300
    8590:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8594:	ldurh	w9, [x8, #3]
    8598:	ldrb	w8, [x8, #5]
    859c:	mov	w10, #0x685f                	// #26719
    85a0:	mov	w11, #0x69                  	// #105
    85a4:	eor	w9, w9, w10
    85a8:	eor	w8, w8, w11
    85ac:	orr	w8, w9, w8
    85b0:	tst	w8, #0xffff
    85b4:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    85b8:	mov	w8, #0x12d                 	// #301
    85bc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    85c0:	ldurh	w9, [x8, #3]
    85c4:	ldrb	w8, [x8, #5]
    85c8:	mov	w10, #0x685f                	// #26719
    85cc:	mov	w11, #0x69                  	// #105
    85d0:	eor	w9, w9, w10
    85d4:	eor	w8, w8, w11
    85d8:	orr	w8, w9, w8
    85dc:	tst	w8, #0xffff
    85e0:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    85e4:	mov	w8, #0x12e                 	// #302
    85e8:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    85ec:	ldurh	w9, [x8, #3]
    85f0:	ldrb	w8, [x8, #5]
    85f4:	mov	w10, #0x685f                	// #26719
    85f8:	mov	w11, #0x69                  	// #105
    85fc:	eor	w9, w9, w10
    8600:	eor	w8, w8, w11
    8604:	orr	w8, w9, w8
    8608:	tst	w8, #0xffff
    860c:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8610:	mov	w8, #0x12f                 	// #303
    8614:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8618:	ldurh	w9, [x8, #3]
    861c:	ldrb	w8, [x8, #5]
    8620:	mov	w10, #0x685f                	// #26719
    8624:	mov	w11, #0x69                  	// #105
    8628:	eor	w9, w9, w10
    862c:	eor	w8, w8, w11
    8630:	orr	w8, w9, w8
    8634:	tst	w8, #0xffff
    8638:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    863c:	mov	w8, #0x130                 	// #304
    8640:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8644:	ldurh	w9, [x8, #3]
    8648:	ldrb	w8, [x8, #5]
    864c:	mov	w10, #0x685f                	// #26719
    8650:	mov	w11, #0x69                  	// #105
    8654:	eor	w9, w9, w10
    8658:	eor	w8, w8, w11
    865c:	orr	w8, w9, w8
    8660:	tst	w8, #0xffff
    8664:	b.ne	8694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1890>  // b.any
    8668:	mov	w8, #0x131                 	// #305
    866c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8670:	ldurh	w9, [x8, #3]
    8674:	ldrb	w8, [x8, #5]
    8678:	mov	w10, #0x685f                	// #26719
    867c:	mov	w11, #0x69                  	// #105
    8680:	eor	w9, w9, w10
    8684:	eor	w8, w8, w11
    8688:	orr	w8, w9, w8
    868c:	tst	w8, #0xffff
    8690:	b.eq	8838 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1a34>  // b.none
    8694:	add	x8, sp, #0x10
    8698:	mov	x0, sp
    869c:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    86a0:	ldp	x0, x8, [sp, #16]
    86a4:	cmp	x8, #0x3
    86a8:	b.eq	86dc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18d8>  // b.none
    86ac:	cmp	x8, #0x2
    86b0:	b.ne	8720 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x191c>  // b.any
    86b4:	ldrh	w8, [x0]
    86b8:	mov	w9, #0x7066                	// #28774
    86bc:	cmp	w8, w9
    86c0:	b.eq	87d8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19d4>  // b.none
    86c4:	ldrh	w8, [x0]
    86c8:	mov	w9, #0x726c                	// #29292
    86cc:	cmp	w8, w9
    86d0:	b.ne	8720 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x191c>  // b.any
    86d4:	mov	w21, #0x3                   	// #3
    86d8:	b	8724 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1920>
    86dc:	ldrh	w9, [x0]
    86e0:	ldrb	w10, [x0, #2]
    86e4:	mov	w11, #0x3378                	// #13176
    86e8:	mov	w8, #0x31                  	// #49
    86ec:	eor	w9, w9, w11
    86f0:	eor	w10, w10, w8
    86f4:	orr	w9, w9, w10
    86f8:	tst	w9, #0xffff
    86fc:	b.eq	87e0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19dc>  // b.none
    8700:	ldrh	w9, [x0]
    8704:	ldrb	w10, [x0, #2]
    8708:	mov	w11, #0x3377                	// #13175
    870c:	eor	w9, w9, w11
    8710:	eor	w8, w10, w8
    8714:	orr	w8, w9, w8
    8718:	tst	w8, #0xffff
    871c:	b.eq	87e8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e4>  // b.none
    8720:	mov	w21, wzr
    8724:	add	x8, sp, #0x10
    8728:	add	x8, x8, #0x10
    872c:	cmp	x0, x8
    8730:	b.eq	8738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1934>  // b.none
    8734:	bl	0 <_ZdlPv>
    8738:	cmp	w19, #0x0
    873c:	csel	w0, w21, wzr, eq  // eq = none
    8740:	cbnz	w21, 87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    8744:	add	x8, sp, #0x10
    8748:	mov	x0, sp
    874c:	add	x21, x20, #0xc0
    8750:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    8754:	ldp	x1, x2, [sp, #16]
    8758:	mov	x0, x21
    875c:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    8760:	ldr	x8, [x20, #192]
    8764:	cmn	w0, #0x1
    8768:	b.eq	8774 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1970>  // b.none
    876c:	sxtw	x9, w0
    8770:	b	8778 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1974>
    8774:	ldr	w9, [x20, #200]
    8778:	ldr	x0, [sp, #16]
    877c:	add	x10, sp, #0x10
    8780:	add	x10, x10, #0x10
    8784:	add	x22, x8, x9, lsl #3
    8788:	cmp	x0, x10
    878c:	b.eq	8798 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1994>  // b.none
    8790:	bl	0 <_ZdlPv>
    8794:	ldr	x8, [x21]
    8798:	ldr	w9, [x20, #200]
    879c:	add	x8, x8, x9, lsl #3
    87a0:	cmp	x22, x8
    87a4:	b.eq	87c0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19bc>  // b.none
    87a8:	ldr	x8, [x22]
    87ac:	ldr	w9, [x8, #8]
    87b0:	cmp	w9, w19
    87b4:	b.ne	87c0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19bc>  // b.any
    87b8:	ldr	w0, [x8, #12]
    87bc:	b	87c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19c0>
    87c0:	mov	w0, wzr
    87c4:	ldp	x20, x19, [sp, #96]
    87c8:	ldp	x22, x21, [sp, #80]
    87cc:	ldp	x29, x30, [sp, #64]
    87d0:	add	sp, sp, #0x70
    87d4:	ret
    87d8:	mov	w21, #0x2                   	// #2
    87dc:	b	8724 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1920>
    87e0:	mov	w21, #0x8                   	// #8
    87e4:	b	8724 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1920>
    87e8:	mov	w21, #0x7                   	// #7
    87ec:	b	8724 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1920>
    87f0:	mov	w8, #0x9b                  	// #155
    87f4:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    87f8:	mov	w8, #0x9c                  	// #156
    87fc:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8800:	mov	w8, #0x9d                  	// #157
    8804:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8808:	mov	w8, #0x9e                  	// #158
    880c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8810:	mov	w8, #0x9f                  	// #159
    8814:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8818:	mov	w8, #0xa0                  	// #160
    881c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8820:	mov	w8, #0xa1                  	// #161
    8824:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8828:	mov	w8, #0xa2                  	// #162
    882c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8830:	mov	w8, #0x5                   	// #5
    8834:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>
    8838:	mov	w8, #0x132                 	// #306
    883c:	b	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd50>

0000000000008840 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>:
    8840:	sub	sp, sp, #0x60
    8844:	stp	x29, x30, [sp, #48]
    8848:	str	x21, [sp, #64]
    884c:	stp	x20, x19, [sp, #80]
    8850:	add	x29, sp, #0x30
    8854:	mov	x19, x0
    8858:	mov	x8, sp
    885c:	sub	x0, x29, #0x10
    8860:	stp	x1, x2, [x29, #-16]
    8864:	mov	x21, sp
    8868:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    886c:	ldp	x0, x8, [sp]
    8870:	cmp	x8, #0x2
    8874:	b.ne	8998 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x158>  // b.any
    8878:	ldrh	w8, [x0]
    887c:	mov	w9, #0x7165                	// #29029
    8880:	cmp	w8, w9
    8884:	b.eq	89a0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x160>  // b.none
    8888:	ldrh	w8, [x0]
    888c:	mov	w9, #0x656e                	// #25966
    8890:	cmp	w8, w9
    8894:	b.eq	89b0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x170>  // b.none
    8898:	ldrh	w8, [x0]
    889c:	mov	w9, #0x7363                	// #29539
    88a0:	cmp	w8, w9
    88a4:	b.eq	89a8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x168>  // b.none
    88a8:	ldrh	w8, [x0]
    88ac:	mov	w9, #0x7368                	// #29544
    88b0:	cmp	w8, w9
    88b4:	b.eq	89a8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x168>  // b.none
    88b8:	ldrh	w8, [x0]
    88bc:	mov	w9, #0x6363                	// #25443
    88c0:	cmp	w8, w9
    88c4:	b.eq	89b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x178>  // b.none
    88c8:	ldrh	w8, [x0]
    88cc:	mov	w9, #0x6f6c                	// #28524
    88d0:	cmp	w8, w9
    88d4:	b.eq	89b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x178>  // b.none
    88d8:	ldrh	w8, [x0]
    88dc:	mov	w9, #0x696d                	// #26989
    88e0:	cmp	w8, w9
    88e4:	b.eq	8ba8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x368>  // b.none
    88e8:	ldrh	w8, [x0]
    88ec:	mov	w9, #0x6c70                	// #27760
    88f0:	cmp	w8, w9
    88f4:	b.eq	8bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x378>  // b.none
    88f8:	ldrh	w8, [x0]
    88fc:	mov	w9, #0x7376                	// #29558
    8900:	cmp	w8, w9
    8904:	b.eq	8bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x388>  // b.none
    8908:	ldrh	w8, [x0]
    890c:	mov	w9, #0x6376                	// #25462
    8910:	cmp	w8, w9
    8914:	b.eq	8bd8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x398>  // b.none
    8918:	ldrh	w8, [x0]
    891c:	mov	w9, #0x6968                	// #26984
    8920:	cmp	w8, w9
    8924:	b.eq	8be8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3a8>  // b.none
    8928:	ldrh	w8, [x0]
    892c:	mov	w9, #0x736c                	// #29548
    8930:	cmp	w8, w9
    8934:	b.eq	8bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3b0>  // b.none
    8938:	ldrh	w8, [x0]
    893c:	mov	w9, #0x6567                	// #25959
    8940:	cmp	w8, w9
    8944:	b.eq	8bf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3b8>  // b.none
    8948:	ldrh	w8, [x0]
    894c:	mov	w9, #0x746c                	// #29804
    8950:	cmp	w8, w9
    8954:	b.eq	8c00 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3c0>  // b.none
    8958:	ldrh	w8, [x0]
    895c:	mov	w9, #0x7467                	// #29799
    8960:	cmp	w8, w9
    8964:	b.eq	8c08 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3c8>  // b.none
    8968:	ldrh	w8, [x0]
    896c:	mov	w9, #0x656c                	// #25964
    8970:	cmp	w8, w9
    8974:	b.eq	8c10 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3d0>  // b.none
    8978:	ldrh	w8, [x0]
    897c:	mov	w9, #0x6c61                	// #27745
    8980:	cmp	w8, w9
    8984:	b.eq	8c18 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3d8>  // b.none
    8988:	ldrh	w8, [x0]
    898c:	mov	w9, #0x766e                	// #30318
    8990:	cmp	w8, w9
    8994:	b.eq	8c20 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3e0>  // b.none
    8998:	mov	w20, #0x10                  	// #16
    899c:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    89a0:	mov	w20, wzr
    89a4:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    89a8:	mov	w20, #0x2                   	// #2
    89ac:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    89b0:	mov	w20, #0x1                   	// #1
    89b4:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    89b8:	mov	w20, #0x3                   	// #3
    89bc:	add	x8, x21, #0x10
    89c0:	cmp	x0, x8
    89c4:	b.eq	89cc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x18c>  // b.none
    89c8:	bl	0 <_ZdlPv>
    89cc:	cmp	w20, #0x10
    89d0:	b.ne	8a80 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>  // b.any
    89d4:	mov	x0, x19
    89d8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    89dc:	ldrb	w8, [x0, #196]
    89e0:	tbnz	w8, #1, 89ec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x1ac>
    89e4:	mov	w20, #0x10                  	// #16
    89e8:	b	8a80 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>
    89ec:	mov	x8, sp
    89f0:	sub	x0, x29, #0x10
    89f4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    89f8:	ldp	x0, x8, [sp]
    89fc:	cmp	x8, #0x3
    8a00:	b.eq	8a44 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x204>  // b.none
    8a04:	cmp	x8, #0x5
    8a08:	b.eq	8a98 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x258>  // b.none
    8a0c:	cmp	x8, #0x4
    8a10:	b.ne	8a68 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>  // b.any
    8a14:	ldr	w8, [x0]
    8a18:	mov	w9, #0x6f6e                	// #28526
    8a1c:	movk	w9, #0x656e, lsl #16
    8a20:	cmp	w8, w9
    8a24:	b.eq	8b88 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x348>  // b.none
    8a28:	ldr	w8, [x0]
    8a2c:	mov	w9, #0x616c                	// #24940
    8a30:	movk	w9, #0x7473, lsl #16
    8a34:	cmp	w8, w9
    8a38:	b.ne	8a68 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>  // b.any
    8a3c:	mov	w20, #0x3                   	// #3
    8a40:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8a44:	ldrh	w8, [x0]
    8a48:	ldrb	w9, [x0, #2]
    8a4c:	mov	w10, #0x6e61                	// #28257
    8a50:	mov	w11, #0x79                  	// #121
    8a54:	eor	w8, w8, w10
    8a58:	eor	w9, w9, w11
    8a5c:	orr	w8, w8, w9
    8a60:	tst	w8, #0xffff
    8a64:	b.eq	8b90 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x350>  // b.none
    8a68:	mov	w20, #0x10                  	// #16
    8a6c:	mov	x8, sp
    8a70:	add	x8, x8, #0x10
    8a74:	cmp	x0, x8
    8a78:	b.eq	8a80 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>  // b.none
    8a7c:	bl	0 <_ZdlPv>
    8a80:	mov	w0, w20
    8a84:	ldp	x20, x19, [sp, #80]
    8a88:	ldr	x21, [sp, #64]
    8a8c:	ldp	x29, x30, [sp, #48]
    8a90:	add	sp, sp, #0x60
    8a94:	ret
    8a98:	ldr	w10, [x0]
    8a9c:	ldrb	w11, [x0, #4]
    8aa0:	mov	w8, #0x6c6e                	// #27758
    8aa4:	movk	w8, #0x7361, lsl #16
    8aa8:	mov	w9, #0x74                  	// #116
    8aac:	eor	w10, w10, w8
    8ab0:	eor	w11, w11, w9
    8ab4:	orr	w10, w10, w11
    8ab8:	cbz	w10, 8b98 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x358>
    8abc:	ldr	w11, [x0]
    8ac0:	ldrb	w12, [x0, #4]
    8ac4:	mov	w10, #0x666e                	// #26222
    8ac8:	movk	w10, #0x7372, lsl #16
    8acc:	add	w13, w10, #0x2f8
    8ad0:	eor	w11, w11, w13
    8ad4:	eor	w9, w12, w9
    8ad8:	orr	w9, w11, w9
    8adc:	cbz	w9, 8ba0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x360>
    8ae0:	ldr	w9, [x0]
    8ae4:	ldrb	w11, [x0, #4]
    8ae8:	mov	w12, #0x74                  	// #116
    8aec:	eor	w9, w9, w10
    8af0:	eor	w10, w11, w12
    8af4:	orr	w9, w9, w10
    8af8:	cbz	w9, 8bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x370>
    8afc:	ldr	w9, [x0]
    8b00:	ldrb	w10, [x0, #4]
    8b04:	mov	w11, #0x6d70                	// #28016
    8b08:	movk	w11, #0x726f, lsl #16
    8b0c:	mov	w12, #0x65                  	// #101
    8b10:	eor	w9, w9, w11
    8b14:	eor	w10, w10, w12
    8b18:	orr	w9, w9, w10
    8b1c:	cbz	w9, 8bc0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x380>
    8b20:	ldr	w9, [x0]
    8b24:	ldrb	w10, [x0, #4]
    8b28:	add	w11, w8, #0x2
    8b2c:	mov	w8, #0x74                  	// #116
    8b30:	eor	w9, w9, w11
    8b34:	eor	w10, w10, w8
    8b38:	orr	w9, w9, w10
    8b3c:	cbz	w9, 8bd0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x390>
    8b40:	ldr	w9, [x0]
    8b44:	ldrb	w10, [x0, #4]
    8b48:	mov	w11, #0x6374                	// #25460
    8b4c:	movk	w11, #0x6e6f, lsl #16
    8b50:	eor	w9, w9, w11
    8b54:	eor	w8, w10, w8
    8b58:	orr	w8, w9, w8
    8b5c:	cbz	w8, 8be0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3a0>
    8b60:	ldr	w8, [x0]
    8b64:	ldrb	w9, [x0, #4]
    8b68:	mov	w10, #0x7374                	// #29556
    8b6c:	movk	w10, #0x6f74, lsl #16
    8b70:	eor	w8, w8, w10
    8b74:	eor	w9, w9, #0x70
    8b78:	orr	w8, w8, w9
    8b7c:	cbnz	w8, 8a68 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>
    8b80:	mov	w20, #0xb                   	// #11
    8b84:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8b88:	mov	w20, wzr
    8b8c:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8b90:	mov	w20, #0x1                   	// #1
    8b94:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8b98:	mov	w20, #0x2                   	// #2
    8b9c:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8ba0:	mov	w20, #0x4                   	// #4
    8ba4:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8ba8:	mov	w20, #0x4                   	// #4
    8bac:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bb0:	mov	w20, #0x5                   	// #5
    8bb4:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8bb8:	mov	w20, #0x5                   	// #5
    8bbc:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bc0:	mov	w20, #0x8                   	// #8
    8bc4:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8bc8:	mov	w20, #0x6                   	// #6
    8bcc:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bd0:	mov	w20, #0x9                   	// #9
    8bd4:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8bd8:	mov	w20, #0x7                   	// #7
    8bdc:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8be0:	mov	w20, #0xa                   	// #10
    8be4:	b	8a6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8be8:	mov	w20, #0x8                   	// #8
    8bec:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bf0:	mov	w20, #0x9                   	// #9
    8bf4:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bf8:	mov	w20, #0xa                   	// #10
    8bfc:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c00:	mov	w20, #0xb                   	// #11
    8c04:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c08:	mov	w20, #0xc                   	// #12
    8c0c:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c10:	mov	w20, #0xd                   	// #13
    8c14:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c18:	mov	w20, #0xe                   	// #14
    8c1c:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c20:	mov	w20, #0xf                   	// #15
    8c24:	b	89bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>

0000000000008c28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>:
    8c28:	sub	sp, sp, #0x120
    8c2c:	stp	x29, x30, [sp, #192]
    8c30:	stp	x28, x27, [sp, #208]
    8c34:	stp	x26, x25, [sp, #224]
    8c38:	stp	x24, x23, [sp, #240]
    8c3c:	stp	x22, x21, [sp, #256]
    8c40:	stp	x20, x19, [sp, #272]
    8c44:	add	x29, sp, #0xc0
    8c48:	stp	w3, w2, [sp, #4]
    8c4c:	str	x0, [sp, #48]
    8c50:	mov	x9, x0
    8c54:	ldr	x8, [x9, #8]!
    8c58:	str	x1, [sp, #16]
    8c5c:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    8c60:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    8c64:	stp	x9, x8, [sp, #24]
    8c68:	ldr	w8, [x1, #8]
    8c6c:	ldp	x24, x25, [x9, #168]
    8c70:	add	x19, x19, #0x0
    8c74:	mov	w27, #0x32c8                	// #13000
    8c78:	sub	w8, w8, #0x1
    8c7c:	add	x28, x28, #0x0
    8c80:	str	w8, [sp, #12]
    8c84:	b	8ca4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7c>
    8c88:	mvn	x8, x23
    8c8c:	add	x19, x21, #0x8
    8c90:	add	x23, x27, x8
    8c94:	cmp	x23, #0x0
    8c98:	mov	x27, x23
    8c9c:	mov	x26, x19
    8ca0:	b.le	8e44 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x21c>
    8ca4:	lsr	x23, x27, #1
    8ca8:	add	x21, x19, x23, lsl #3
    8cac:	ldrh	w8, [x21]
    8cb0:	add	x22, x28, x8
    8cb4:	ldrb	w20, [x22]
    8cb8:	cmp	x25, x20
    8cbc:	csel	x26, x25, x20, cc  // cc = lo, ul, last
    8cc0:	cbz	x26, 8ce0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb8>
    8cc4:	add	x0, x22, #0x1
    8cc8:	mov	x1, x24
    8ccc:	mov	x2, x26
    8cd0:	bl	0 <memcmp>
    8cd4:	cbz	w0, 8ce0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb8>
    8cd8:	tbnz	w0, #31, 8c88 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x60>
    8cdc:	b	8cec <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc4>
    8ce0:	cmp	x25, x20
    8ce4:	b.hi	8c88 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x60>  // b.pmore
    8ce8:	cbz	x26, 8d08 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe0>
    8cec:	add	x1, x22, #0x1
    8cf0:	mov	x0, x24
    8cf4:	mov	x2, x26
    8cf8:	bl	0 <memcmp>
    8cfc:	cbz	w0, 8d08 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe0>
    8d00:	tbnz	w0, #31, 8c94 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6c>
    8d04:	b	8d10 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe8>
    8d08:	cmp	x25, x20
    8d0c:	b.cc	8c94 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6c>  // b.lo, b.ul, b.last
    8d10:	sub	x8, x21, x19
    8d14:	cmp	x8, #0x1
    8d18:	b.lt	8da4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c>  // b.tstop
    8d1c:	lsr	x26, x8, #3
    8d20:	mov	x23, x19
    8d24:	b	8d58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x130>
    8d28:	mov	w8, #0xffffffff            	// #-1
    8d2c:	cneg	w8, w8, ls  // ls = plast
    8d30:	mvn	x10, x22
    8d34:	cmn	w8, #0x1
    8d38:	add	x8, x26, x10
    8d3c:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    8d40:	add	x9, x20, #0x8
    8d44:	csel	x26, x8, x22, eq  // eq = none
    8d48:	add	x28, x28, #0x0
    8d4c:	csel	x23, x9, x23, eq  // eq = none
    8d50:	cmp	x26, #0x0
    8d54:	b.le	8da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x180>
    8d58:	lsr	x22, x26, #1
    8d5c:	add	x20, x23, x22, lsl #3
    8d60:	ldrh	w8, [x20]
    8d64:	add	x8, x28, x8
    8d68:	ldrb	w28, [x8]
    8d6c:	cmp	x25, x28
    8d70:	csel	x2, x25, x28, cc  // cc = lo, ul, last
    8d74:	cbz	x2, 8d94 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16c>
    8d78:	add	x0, x8, #0x1
    8d7c:	mov	x1, x24
    8d80:	bl	0 <memcmp>
    8d84:	cmp	w0, #0x0
    8d88:	mov	w8, #0x1                   	// #1
    8d8c:	cneg	w8, w8, lt  // lt = tstop
    8d90:	cbnz	w0, 8d30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x108>
    8d94:	cmp	x25, x28
    8d98:	b.ne	8d28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x100>  // b.any
    8d9c:	mov	w8, wzr
    8da0:	b	8d30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x108>
    8da4:	mov	x23, x19
    8da8:	add	x8, x19, x27, lsl #3
    8dac:	add	x26, x21, #0x8
    8db0:	sub	x8, x8, x26
    8db4:	cmp	x8, #0x1
    8db8:	b.lt	8e40 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x218>  // b.tstop
    8dbc:	lsr	x19, x8, #3
    8dc0:	mov	w20, #0xffffffff            	// #-1
    8dc4:	mov	w21, #0x1                   	// #1
    8dc8:	b	8df8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1d0>
    8dcc:	cneg	w8, w20, cs  // cs = hs, nlast
    8dd0:	mvn	x10, x22
    8dd4:	cmn	w8, #0x1
    8dd8:	add	x8, x19, x10
    8ddc:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    8de0:	add	x9, x27, #0x8
    8de4:	csel	x19, x22, x8, eq  // eq = none
    8de8:	add	x28, x28, #0x0
    8dec:	csel	x26, x26, x9, eq  // eq = none
    8df0:	cmp	x19, #0x0
    8df4:	b.le	8e40 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x218>
    8df8:	lsr	x22, x19, #1
    8dfc:	add	x27, x26, x22, lsl #3
    8e00:	ldrh	w8, [x27]
    8e04:	add	x8, x28, x8
    8e08:	ldrb	w28, [x8]
    8e0c:	cmp	x25, x28
    8e10:	csel	x2, x28, x25, hi  // hi = pmore
    8e14:	cbz	x2, 8e30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x208>
    8e18:	add	x1, x8, #0x1
    8e1c:	mov	x0, x24
    8e20:	bl	0 <memcmp>
    8e24:	cmp	w0, #0x0
    8e28:	cneg	w8, w21, lt  // lt = tstop
    8e2c:	cbnz	w0, 8dd0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a8>
    8e30:	cmp	x25, x28
    8e34:	b.ne	8dcc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a4>  // b.any
    8e38:	mov	w8, wzr
    8e3c:	b	8dd0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a8>
    8e40:	mov	x19, x23
    8e44:	ldp	x23, x21, [sp, #24]
    8e48:	ldr	x27, [sp, #16]
    8e4c:	cmp	x19, x26
    8e50:	mov	x0, x21
    8e54:	b.eq	8ee0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2b8>  // b.none
    8e58:	ldr	w9, [sp, #12]
    8e5c:	mov	w8, #0x1                   	// #1
    8e60:	add	x19, x19, #0x4
    8e64:	lsl	w20, w8, w9
    8e68:	b	8e7c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x254>
    8e6c:	add	x8, x21, #0x8
    8e70:	cmp	x8, x26
    8e74:	add	x19, x19, #0x8
    8e78:	b.eq	8ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2b0>  // b.none
    8e7c:	mov	x21, x19
    8e80:	ldrh	w8, [x21, #-4]!
    8e84:	add	x1, x28, x8
    8e88:	ldrb	w8, [x1], #1
    8e8c:	cmp	x25, x8
    8e90:	b.ne	a420 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17f8>  // b.any
    8e94:	cbz	x25, 8ea8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x280>
    8e98:	mov	x0, x24
    8e9c:	mov	x2, x25
    8ea0:	bl	0 <bcmp>
    8ea4:	cbnz	w0, a420 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17f8>
    8ea8:	ldrb	w8, [x21, #2]
    8eac:	tst	w20, w8
    8eb0:	b.eq	8e6c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x244>  // b.none
    8eb4:	ldrh	w2, [x19]
    8eb8:	ldr	x0, [sp, #48]
    8ebc:	mov	x1, x27
    8ec0:	bl	d1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>
    8ec4:	cmp	w0, #0x1
    8ec8:	b.eq	8e6c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x244>  // b.none
    8ecc:	cbz	w0, a214 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15ec>
    8ed0:	cmp	w0, #0x2
    8ed4:	b.eq	a034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x140c>  // b.none
    8ed8:	ldr	x0, [x23]
    8edc:	ldr	x21, [sp, #32]
    8ee0:	ldr	x8, [x0]
    8ee4:	ldr	x8, [x8, #40]
    8ee8:	blr	x8
    8eec:	ldr	w8, [x0, #16]
    8ef0:	cbz	w8, a440 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1818>
    8ef4:	ldr	x8, [x0, #8]
    8ef8:	ldr	x25, [sp, #48]
    8efc:	ldr	w8, [x8]
    8f00:	sub	w8, w8, #0x2
    8f04:	cmp	w8, #0x23
    8f08:	b.hi	909c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x474>  // b.pmore
    8f0c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    8f10:	add	x9, x9, #0x0
    8f14:	adr	x10, 8f24 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2fc>
    8f18:	ldrb	w11, [x9, x8]
    8f1c:	add	x10, x10, x11, lsl #2
    8f20:	br	x10
    8f24:	ldr	x0, [x23]
    8f28:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8f2c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    8f30:	ldr	x8, [x23]
    8f34:	mov	x22, x0
    8f38:	mov	w1, #0x25                  	// #37
    8f3c:	mov	x0, x8
    8f40:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    8f44:	mov	x0, x21
    8f48:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8f4c:	ldr	w8, [x0]
    8f50:	cmp	w8, #0xd
    8f54:	b.ne	8fd4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3ac>  // b.any
    8f58:	ldr	x8, [x21]
    8f5c:	mov	x0, x21
    8f60:	ldr	x8, [x8, #40]
    8f64:	blr	x8
    8f68:	mov	w8, #0x1                   	// #1
    8f6c:	stp	xzr, xzr, [x29, #-32]
    8f70:	stur	xzr, [x29, #-40]
    8f74:	stur	w8, [x29, #-16]
    8f78:	ldr	x8, [x0]
    8f7c:	sub	x1, x29, #0x30
    8f80:	mov	w2, #0x1                   	// #1
    8f84:	mov	w3, #0x1                   	// #1
    8f88:	ldr	x8, [x8, #32]
    8f8c:	blr	x8
    8f90:	cmp	x0, #0x1
    8f94:	b.ne	a460 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1838>  // b.any
    8f98:	ldur	w8, [x29, #-16]
    8f9c:	ldur	w19, [x29, #-48]
    8fa0:	cmp	w8, #0x41
    8fa4:	b.cc	8fb4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x38c>  // b.lo, b.ul, b.last
    8fa8:	ldur	x0, [x29, #-24]
    8fac:	cbz	x0, 8fb4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x38c>
    8fb0:	bl	0 <_ZdaPv>
    8fb4:	cmp	w19, #0x6
    8fb8:	b.ne	8fcc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3a4>  // b.any
    8fbc:	ldr	x8, [x21]
    8fc0:	mov	x0, x21
    8fc4:	ldr	x8, [x8, #136]
    8fc8:	blr	x8
    8fcc:	mov	w24, #0x1                   	// #1
    8fd0:	b	8fd8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3b0>
    8fd4:	mov	w24, wzr
    8fd8:	mov	x0, x21
    8fdc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    8fe0:	ldr	w8, [x0]
    8fe4:	cmp	w8, #0x6
    8fe8:	b.ne	9028 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x400>  // b.any
    8fec:	mov	x23, x0
    8ff0:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    8ff4:	ldp	x2, x3, [x23, #8]
    8ff8:	mov	x1, x0
    8ffc:	sub	x0, x29, #0x30
    9000:	sub	x19, x29, #0x30
    9004:	bl	0 <_ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS_9StringRefE>
    9008:	ldur	x20, [x29, #-40]
    900c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    9010:	cmp	x0, x20
    9014:	b.eq	9300 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6d8>  // b.none
    9018:	add	x0, x19, #0x8
    901c:	add	x8, sp, #0x38
    9020:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    9024:	b	930c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6e4>
    9028:	sub	x1, x29, #0x30
    902c:	mov	x0, x25
    9030:	bl	c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    9034:	tbnz	w0, #0, a034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x140c>
    9038:	ldr	x19, [sp, #24]
    903c:	ldr	x0, [x19]
    9040:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9044:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9048:	ldr	x8, [x19]
    904c:	ldur	x19, [x29, #-48]
    9050:	sub	x23, x0, #0x1
    9054:	ldr	x9, [x8]
    9058:	mov	x0, x8
    905c:	ldr	x9, [x9, #48]
    9060:	blr	x9
    9064:	mov	x21, x0
    9068:	mov	w0, #0x70                  	// #112
    906c:	bl	0 <_Znwm>
    9070:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9074:	mov	x8, x0
    9078:	add	x9, x9, #0x0
    907c:	mov	x20, x0
    9080:	strb	wzr, [x8, #32]!
    9084:	str	x9, [x0]
    9088:	str	wzr, [x0, #48]
    908c:	str	x21, [x0, #104]
    9090:	str	x19, [x0, #72]
    9094:	str	x22, [x0, #56]
    9098:	b	93d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7ac>
    909c:	ldr	x0, [x25, #8]
    90a0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    90a4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    90a8:	mov	x21, x0
    90ac:	add	x1, sp, #0x38
    90b0:	mov	x0, x25
    90b4:	bl	c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    90b8:	tbz	w0, #0, 9378 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x750>
    90bc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    90c0:	add	x8, x8, #0x0
    90c4:	mov	w9, #0x103                 	// #259
    90c8:	stp	x8, xzr, [x29, #-48]
    90cc:	sturh	w9, [x29, #-32]
    90d0:	ldr	x0, [x23]
    90d4:	sub	x2, x29, #0x30
    90d8:	mov	x1, x21
    90dc:	mov	x3, xzr
    90e0:	mov	x4, xzr
    90e4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    90e8:	mov	w21, w0
    90ec:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    90f0:	ldr	x22, [x23]
    90f4:	mov	x0, x22
    90f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    90fc:	ldr	w8, [x0]
    9100:	cmp	w8, #0x15
    9104:	b.ne	a034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x140c>  // b.any
    9108:	stp	x25, x22, [x29, #-64]
    910c:	ldr	x0, [x25, #8]
    9110:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9114:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9118:	mov	x21, x0
    911c:	mov	x0, x22
    9120:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9124:	ldr	q0, [x0]
    9128:	ldr	x8, [x0, #16]
    912c:	add	x1, x0, #0x18
    9130:	stur	q0, [x29, #-48]
    9134:	stur	x8, [x29, #-32]
    9138:	ldr	w8, [x0, #32]
    913c:	cmp	w8, #0x40
    9140:	stur	w8, [x29, #-16]
    9144:	b.hi	96c8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xaa0>  // b.pmore
    9148:	ldr	x8, [x1]
    914c:	stur	x8, [x29, #-24]
    9150:	b	96d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xaac>
    9154:	ldr	x0, [x25, #8]
    9158:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    915c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9160:	ldr	x8, [x25, #184]
    9164:	cmp	x8, #0x3
    9168:	b.ne	9194 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x56c>  // b.any
    916c:	ldr	x8, [x25, #176]
    9170:	mov	w10, #0x646c                	// #25708
    9174:	mov	w11, #0x72                  	// #114
    9178:	ldrh	w9, [x8]
    917c:	ldrb	w8, [x8, #2]
    9180:	eor	w9, w9, w10
    9184:	eor	w8, w8, w11
    9188:	orr	w8, w9, w8
    918c:	tst	w8, #0xffff
    9190:	b.eq	9784 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb5c>  // b.none
    9194:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9198:	add	x8, x8, #0x0
    919c:	mov	w9, #0x103                 	// #259
    91a0:	stp	x8, xzr, [x29, #-48]
    91a4:	sturh	w9, [x29, #-32]
    91a8:	ldr	x0, [x23]
    91ac:	b	9210 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x5e8>
    91b0:	ldr	w8, [sp, #8]
    91b4:	tbz	w8, #0, 9524 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8fc>
    91b8:	ldr	x23, [x23]
    91bc:	mov	x0, x23
    91c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    91c4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    91c8:	mov	x21, x0
    91cc:	mov	x0, x23
    91d0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    91d4:	ldr	w8, [x0]
    91d8:	cmp	w8, #0x2
    91dc:	b.ne	a4c0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1898>  // b.any
    91e0:	ldp	x1, x2, [x0, #8]
    91e4:	mov	x0, x25
    91e8:	bl	8840 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
    91ec:	cmp	w0, #0x10
    91f0:	b.ne	973c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb14>  // b.any
    91f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    91f8:	add	x8, x8, #0x0
    91fc:	stp	x8, xzr, [x29, #-48]
    9200:	ldr	x8, [sp, #24]
    9204:	mov	w9, #0x103                 	// #259
    9208:	sturh	w9, [x29, #-32]
    920c:	ldr	x0, [x8]
    9210:	sub	x1, x29, #0x30
    9214:	mov	x2, xzr
    9218:	mov	x3, xzr
    921c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    9220:	mov	w21, w0
    9224:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    9228:	mov	x0, x21
    922c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9230:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9234:	ldr	x8, [x23]
    9238:	mov	x23, x0
    923c:	ldr	x9, [x8]
    9240:	mov	x0, x8
    9244:	ldr	x9, [x9, #48]
    9248:	blr	x9
    924c:	mov	x24, x0
    9250:	mov	w0, #0x70                  	// #112
    9254:	bl	0 <_Znwm>
    9258:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    925c:	mov	x8, x0
    9260:	add	x9, x9, #0x0
    9264:	strb	wzr, [x8, #32]!
    9268:	str	x9, [x0]
    926c:	mov	w9, #0x6                   	// #6
    9270:	str	w9, [x0, #48]
    9274:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9278:	add	x9, x9, #0x0
    927c:	stp	x23, x9, [x0, #64]
    9280:	mov	w9, #0x1                   	// #1
    9284:	str	x24, [x0, #104]
    9288:	str	w9, [x0, #80]
    928c:	strb	wzr, [x0, #84]
    9290:	str	x23, [x0, #56]
    9294:	stp	x8, xzr, [x0, #16]
    9298:	ldp	w8, w9, [x27, #8]
    929c:	mov	x22, x0
    92a0:	cmp	w8, w9
    92a4:	b.cs	a290 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1668>  // b.hs, b.nlast
    92a8:	ldr	x10, [x27]
    92ac:	cmp	w8, w9
    92b0:	str	x22, [x10, w8, uxtw #3]
    92b4:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    92b8:	add	w8, w8, #0x1
    92bc:	str	w8, [x27, #8]
    92c0:	ldr	x8, [x21]
    92c4:	mov	x0, x21
    92c8:	ldr	x8, [x8, #136]
    92cc:	blr	x8
    92d0:	mov	x0, x25
    92d4:	mov	x1, x27
    92d8:	ldp	x20, x19, [sp, #272]
    92dc:	ldp	x22, x21, [sp, #256]
    92e0:	ldp	x24, x23, [sp, #240]
    92e4:	ldp	x26, x25, [sp, #224]
    92e8:	ldp	x28, x27, [sp, #208]
    92ec:	ldp	x29, x30, [sp, #192]
    92f0:	mov	w2, wzr
    92f4:	mov	w3, wzr
    92f8:	add	sp, sp, #0x120
    92fc:	b	8c28 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    9300:	add	x0, x19, #0x8
    9304:	add	x8, sp, #0x38
    9308:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    930c:	ldr	w19, [sp, #64]
    9310:	ldr	x23, [sp, #24]
    9314:	cmp	w19, #0x41
    9318:	b.cs	9324 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6fc>  // b.hs, b.nlast
    931c:	ldr	x19, [sp, #56]
    9320:	b	9344 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x71c>
    9324:	add	x0, sp, #0x38
    9328:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    932c:	sub	w8, w19, w0
    9330:	cmp	w8, #0x41
    9334:	b.cs	a480 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1858>  // b.hs, b.nlast
    9338:	ldr	x0, [sp, #56]
    933c:	ldr	x19, [x0]
    9340:	bl	0 <_ZdaPv>
    9344:	ldp	x20, x2, [x25, #176]
    9348:	cmp	x2, #0x5
    934c:	b.eq	9408 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7e0>  // b.none
    9350:	cmp	x2, #0x4
    9354:	b.ne	936c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x744>  // b.any
    9358:	ldr	w8, [x20]
    935c:	mov	w9, #0x6366                	// #25446
    9360:	movk	w9, #0x706d, lsl #16
    9364:	cmp	w8, w9
    9368:	b.eq	94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>  // b.none
    936c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9370:	add	x8, x8, #0x0
    9374:	b	94fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8d4>
    9378:	ldr	x0, [x23]
    937c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9380:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9384:	ldr	x8, [x23]
    9388:	ldr	x19, [sp, #56]
    938c:	sub	x23, x0, #0x1
    9390:	ldr	x9, [x8]
    9394:	mov	x0, x8
    9398:	ldr	x9, [x9, #48]
    939c:	blr	x9
    93a0:	mov	x22, x0
    93a4:	mov	w0, #0x70                  	// #112
    93a8:	bl	0 <_Znwm>
    93ac:	mov	x8, x0
    93b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    93b4:	mov	x20, x0
    93b8:	add	x9, x9, #0x0
    93bc:	strb	wzr, [x8, #32]!
    93c0:	str	x9, [x0]
    93c4:	str	wzr, [x0, #48]
    93c8:	str	x22, [x0, #104]
    93cc:	str	x19, [x0, #72]
    93d0:	str	x21, [x0, #56]
    93d4:	str	x23, [x0, #64]
    93d8:	stp	x8, xzr, [x0, #16]
    93dc:	ldp	w8, w9, [x27, #8]
    93e0:	cmp	w8, w9
    93e4:	b.cs	a27c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1654>  // b.hs, b.nlast
    93e8:	ldr	x10, [x27]
    93ec:	cmp	w8, w9
    93f0:	str	x20, [x10, w8, uxtw #3]
    93f4:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    93f8:	add	w8, w8, #0x1
    93fc:	mov	w21, wzr
    9400:	str	w8, [x27, #8]
    9404:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    9408:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    940c:	add	x1, x1, #0x0
    9410:	mov	x0, x20
    9414:	bl	0 <bcmp>
    9418:	cbz	w0, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    941c:	ldr	w8, [x20]
    9420:	ldrb	w9, [x20, #4]
    9424:	mov	w10, #0x6366                	// #25446
    9428:	movk	w10, #0x656d, lsl #16
    942c:	mov	w11, #0x71                  	// #113
    9430:	eor	w8, w8, w10
    9434:	eor	w9, w9, w11
    9438:	orr	w8, w8, w9
    943c:	cbz	w8, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    9440:	ldr	w9, [x20]
    9444:	ldrb	w10, [x20, #4]
    9448:	mov	w8, #0x6366                	// #25446
    944c:	movk	w8, #0x676d, lsl #16
    9450:	mov	w11, #0x65                  	// #101
    9454:	eor	w9, w9, w8
    9458:	eor	w10, w10, w11
    945c:	orr	w9, w9, w10
    9460:	cbz	w9, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    9464:	ldr	w9, [x20]
    9468:	ldrb	w10, [x20, #4]
    946c:	mov	w11, #0x74                  	// #116
    9470:	eor	w8, w9, w8
    9474:	eor	w9, w10, w11
    9478:	orr	w8, w8, w9
    947c:	cbz	w8, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    9480:	ldr	w9, [x20]
    9484:	ldrb	w10, [x20, #4]
    9488:	mov	w8, #0x6366                	// #25446
    948c:	movk	w8, #0x6c6d, lsl #16
    9490:	mov	w11, #0x65                  	// #101
    9494:	eor	w9, w9, w8
    9498:	eor	w10, w10, w11
    949c:	orr	w9, w9, w10
    94a0:	cbz	w9, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    94a4:	ldr	w9, [x20]
    94a8:	ldrb	w10, [x20, #4]
    94ac:	mov	w11, #0x74                  	// #116
    94b0:	eor	w8, w9, w8
    94b4:	eor	w9, w10, w11
    94b8:	orr	w8, w8, w9
    94bc:	cbz	w8, 94e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8bc>
    94c0:	ldr	w8, [x20]
    94c4:	ldrb	w9, [x20, #4]
    94c8:	mov	w10, #0x6366                	// #25446
    94cc:	movk	w10, #0x6e6d, lsl #16
    94d0:	mov	w11, #0x65                  	// #101
    94d4:	eor	w8, w8, w10
    94d8:	eor	w9, w9, w11
    94dc:	orr	w8, w8, w9
    94e0:	cbnz	w8, 936c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x744>
    94e4:	cmp	x19, #0x0
    94e8:	cset	w8, eq  // eq = none
    94ec:	bic	w8, w8, w24
    94f0:	tbnz	w8, #0, 95a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x980>
    94f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    94f8:	add	x8, x8, #0x0
    94fc:	mov	w9, #0x103                 	// #259
    9500:	stp	x8, xzr, [sp, #56]
    9504:	strh	w9, [sp, #72]
    9508:	ldr	x0, [x23]
    950c:	add	x1, sp, #0x38
    9510:	mov	x2, xzr
    9514:	mov	x3, xzr
    9518:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    951c:	mov	w21, w0
    9520:	b	96bc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa94>
    9524:	mov	x0, x25
    9528:	mov	x1, x27
    952c:	bl	b084 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    9530:	tbz	w0, #0, a214 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15ec>
    9534:	ldr	x21, [x23]
    9538:	ldr	x8, [x21]
    953c:	mov	x0, x21
    9540:	ldr	x8, [x8, #40]
    9544:	blr	x8
    9548:	mov	w8, #0x1                   	// #1
    954c:	stp	xzr, xzr, [x29, #-32]
    9550:	stur	xzr, [x29, #-40]
    9554:	stur	w8, [x29, #-16]
    9558:	ldr	x8, [x0]
    955c:	sub	x1, x29, #0x30
    9560:	mov	w2, #0x1                   	// #1
    9564:	mov	w3, #0x1                   	// #1
    9568:	ldr	x8, [x8, #32]
    956c:	blr	x8
    9570:	cmp	x0, #0x1
    9574:	b.ne	a460 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1838>  // b.any
    9578:	ldp	x8, x9, [x29, #-40]
    957c:	cmp	x9, #0x2
    9580:	stp	x8, x9, [sp, #56]
    9584:	b.ne	9894 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc6c>  // b.any
    9588:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    958c:	add	x1, x1, #0x0
    9590:	add	x0, sp, #0x38
    9594:	mov	w2, #0x2                   	// #2
    9598:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    959c:	cmp	w0, #0x0
    95a0:	cset	w26, eq  // eq = none
    95a4:	b	9898 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc70>
    95a8:	ldr	x8, [x21]
    95ac:	mov	x0, x21
    95b0:	ldr	x8, [x8, #136]
    95b4:	blr	x8
    95b8:	ldr	x0, [x23]
    95bc:	ldr	x8, [x0]
    95c0:	ldr	x8, [x8, #48]
    95c4:	blr	x8
    95c8:	mov	x21, x0
    95cc:	mov	w0, #0x70                  	// #112
    95d0:	bl	0 <_Znwm>
    95d4:	mov	x8, x0
    95d8:	mov	w9, #0x6                   	// #6
    95dc:	strb	wzr, [x8, #32]!
    95e0:	str	w9, [x0, #48]
    95e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    95e8:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    95ec:	add	x9, x9, #0x0
    95f0:	add	x19, x19, #0x0
    95f4:	stp	x22, x9, [x0, #64]
    95f8:	mov	w9, #0x2                   	// #2
    95fc:	str	x21, [x0, #104]
    9600:	str	x19, [x0]
    9604:	str	w9, [x0, #80]
    9608:	strb	wzr, [x0, #84]
    960c:	str	x22, [x0, #56]
    9610:	stp	x8, xzr, [x0, #16]
    9614:	ldp	w8, w9, [x27, #8]
    9618:	mov	x20, x0
    961c:	cmp	w8, w9
    9620:	b.cs	a368 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1740>  // b.hs, b.nlast
    9624:	ldr	x10, [x27]
    9628:	cmp	w8, w9
    962c:	str	x20, [x10, w8, uxtw #3]
    9630:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    9634:	add	w8, w8, #0x1
    9638:	str	w8, [x27, #8]
    963c:	ldr	x0, [x23]
    9640:	ldr	x8, [x0]
    9644:	ldr	x8, [x8, #48]
    9648:	blr	x8
    964c:	mov	x21, x0
    9650:	mov	w0, #0x70                  	// #112
    9654:	bl	0 <_Znwm>
    9658:	mov	x8, x0
    965c:	mov	w9, #0x6                   	// #6
    9660:	strb	wzr, [x8, #32]!
    9664:	str	w9, [x0, #48]
    9668:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    966c:	add	x9, x9, #0x0
    9670:	mov	w10, #0x2                   	// #2
    9674:	str	x19, [x0]
    9678:	str	x21, [x0, #104]
    967c:	stp	x22, x9, [x0, #64]
    9680:	str	w10, [x0, #80]
    9684:	strb	wzr, [x0, #84]
    9688:	str	x22, [x0, #56]
    968c:	stp	x8, xzr, [x0, #16]
    9690:	ldp	w8, w9, [x27, #8]
    9694:	mov	x20, x0
    9698:	cmp	w8, w9
    969c:	b.cs	a37c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1754>  // b.hs, b.nlast
    96a0:	ldr	x10, [x27]
    96a4:	cmp	w8, w9
    96a8:	str	x20, [x10, w8, uxtw #3]
    96ac:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    96b0:	mov	w21, wzr
    96b4:	add	w8, w8, #0x1
    96b8:	str	w8, [x27, #8]
    96bc:	sub	x0, x29, #0x30
    96c0:	bl	0 <LLVMInitializeAArch64AsmParser>
    96c4:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    96c8:	sub	x8, x29, #0x30
    96cc:	add	x0, x8, #0x18
    96d0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    96d4:	ldr	x8, [x22]
    96d8:	mov	x0, x22
    96dc:	ldr	x8, [x8, #136]
    96e0:	blr	x8
    96e4:	stp	xzr, xzr, [x29, #-80]
    96e8:	ldr	x0, [x23]
    96ec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    96f0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    96f4:	mov	x3, x0
    96f8:	sub	x0, x29, #0x40
    96fc:	sub	x1, x29, #0x54
    9700:	sub	x2, x29, #0x50
    9704:	bl	10f50 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9708:	cbz	w0, 97f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xbcc>
    970c:	mov	w25, w0
    9710:	cmp	w0, #0x1
    9714:	b.ne	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>  // b.any
    9718:	ldr	x8, [x22]
    971c:	mov	x0, x22
    9720:	ldr	x8, [x8, #40]
    9724:	blr	x8
    9728:	ldr	x1, [x0, #8]!
    972c:	sub	x2, x29, #0x30
    9730:	strb	wzr, [x0, #106]
    9734:	bl	0 <LLVMInitializeAArch64AsmParser>
    9738:	b	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    973c:	ldr	x8, [x23]
    9740:	mov	w20, w0
    9744:	mov	x0, x23
    9748:	ldr	x8, [x8, #136]
    974c:	blr	x8
    9750:	ldr	x19, [sp, #24]
    9754:	ldr	w8, [sp, #4]
    9758:	tbz	w8, #0, 9bac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf84>
    975c:	orr	w8, w20, #0x1
    9760:	cmp	w8, #0xf
    9764:	b.ne	9ba8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf80>  // b.any
    9768:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    976c:	add	x8, x8, #0x0
    9770:	mov	w9, #0x103                 	// #259
    9774:	stp	x8, xzr, [x29, #-48]
    9778:	sturh	w9, [x29, #-32]
    977c:	ldr	x0, [x19]
    9780:	b	9210 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x5e8>
    9784:	ldr	x8, [x21]
    9788:	mov	x22, x0
    978c:	mov	x0, x21
    9790:	ldr	x8, [x8, #136]
    9794:	blr	x8
    9798:	ldr	x0, [x23]
    979c:	sub	x1, x29, #0x40
    97a0:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    97a4:	tbnz	w0, #0, a034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x140c>
    97a8:	ldr	w8, [x27, #8]
    97ac:	cmp	w8, #0x2
    97b0:	b.cc	97d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xba8>  // b.lo, b.ul, b.last
    97b4:	ldr	x8, [x27]
    97b8:	ldr	x0, [x8, #8]
    97bc:	ldr	w8, [x0, #48]
    97c0:	cmp	w8, #0x3
    97c4:	b.ne	97d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xba8>  // b.any
    97c8:	ldr	w8, [x0, #76]
    97cc:	cbz	w8, 9f00 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12d8>
    97d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    97d4:	add	x8, x8, #0x0
    97d8:	mov	w9, #0x103                 	// #259
    97dc:	stp	x8, xzr, [x29, #-48]
    97e0:	sturh	w9, [x29, #-32]
    97e4:	ldr	x0, [x23]
    97e8:	sub	x2, x29, #0x30
    97ec:	mov	x1, x22
    97f0:	b	90dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x4b4>
    97f4:	ldr	x0, [x23]
    97f8:	ldur	w26, [x29, #-84]
    97fc:	mov	w1, #0xd                   	// #13
    9800:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9804:	ldr	x8, [x23]
    9808:	tbz	w0, #0, 9aa0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe78>
    980c:	mov	x0, x8
    9810:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9814:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9818:	stp	xzr, xzr, [sp, #88]
    981c:	ldr	x8, [x23]
    9820:	mov	x22, x0
    9824:	mov	x0, x8
    9828:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    982c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9830:	mov	x3, x0
    9834:	sub	x0, x29, #0x40
    9838:	add	x1, sp, #0x54
    983c:	add	x2, sp, #0x58
    9840:	bl	10f50 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9844:	mov	w25, w0
    9848:	cbnz	w0, a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    984c:	ldur	x2, [x29, #-72]
    9850:	ldr	x8, [sp, #96]
    9854:	cmp	x2, x8
    9858:	b.ne	9870 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc48>  // b.any
    985c:	cbz	x2, 9ed4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12ac>
    9860:	ldur	x0, [x29, #-80]
    9864:	ldr	x1, [sp, #88]
    9868:	bl	0 <bcmp>
    986c:	cbz	w0, 9ed4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12ac>
    9870:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9874:	add	x8, x8, #0x0
    9878:	mov	w9, #0x103                 	// #259
    987c:	stp	x8, xzr, [sp, #56]
    9880:	strh	w9, [sp, #72]
    9884:	ldr	x0, [x23]
    9888:	add	x2, sp, #0x38
    988c:	mov	x1, x22
    9890:	b	9f64 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x133c>
    9894:	mov	w26, wzr
    9898:	ldur	w8, [x29, #-16]
    989c:	cmp	w8, #0x41
    98a0:	b.cc	98b0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc88>  // b.lo, b.ul, b.last
    98a4:	ldur	x0, [x29, #-24]
    98a8:	cbz	x0, 98b0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc88>
    98ac:	bl	0 <_ZdaPv>
    98b0:	ldr	x8, [x21]
    98b4:	mov	x0, x21
    98b8:	ldr	x8, [x8, #40]
    98bc:	blr	x8
    98c0:	mov	w8, #0x1                   	// #1
    98c4:	stp	xzr, xzr, [x29, #-32]
    98c8:	stur	xzr, [x29, #-40]
    98cc:	stur	w8, [x29, #-16]
    98d0:	ldr	x8, [x0]
    98d4:	sub	x1, x29, #0x30
    98d8:	mov	w2, #0x1                   	// #1
    98dc:	mov	w3, #0x1                   	// #1
    98e0:	ldr	x8, [x8, #32]
    98e4:	blr	x8
    98e8:	cmp	x0, #0x1
    98ec:	b.ne	a460 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1838>  // b.any
    98f0:	ldur	w8, [x29, #-16]
    98f4:	ldur	w19, [x29, #-48]
    98f8:	cmp	w8, #0x41
    98fc:	b.cc	990c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xce4>  // b.lo, b.ul, b.last
    9900:	ldur	x0, [x29, #-24]
    9904:	cbz	x0, 990c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xce4>
    9908:	bl	0 <_ZdaPv>
    990c:	mov	x0, x21
    9910:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9914:	ldp	x9, x8, [x0, #8]
    9918:	cmp	x8, #0x3
    991c:	stp	x9, x8, [x29, #-48]
    9920:	b.ne	9de8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c0>  // b.any
    9924:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    9928:	add	x22, x22, #0x0
    992c:	sub	x0, x29, #0x30
    9930:	mov	w2, #0x3                   	// #3
    9934:	mov	x1, x22
    9938:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    993c:	cbnz	w0, 9de8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c0>
    9940:	cmp	w19, #0x25
    9944:	cset	w8, eq  // eq = none
    9948:	orr	w8, w26, w8
    994c:	tbz	w8, #0, 9de8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11c0>
    9950:	ldr	x0, [x23]
    9954:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9958:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    995c:	ldr	x8, [x23]
    9960:	mov	x24, x0
    9964:	ldr	x9, [x8]
    9968:	mov	x0, x8
    996c:	ldr	x9, [x9, #48]
    9970:	blr	x9
    9974:	mov	x25, x0
    9978:	mov	w0, #0x70                  	// #112
    997c:	bl	0 <_Znwm>
    9980:	mov	x8, x0
    9984:	mov	w9, #0x6                   	// #6
    9988:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    998c:	strb	wzr, [x8, #32]!
    9990:	str	w9, [x0, #48]
    9994:	add	x28, x28, #0x0
    9998:	mov	w9, #0x3                   	// #3
    999c:	str	x25, [x0, #104]
    99a0:	str	x28, [x0]
    99a4:	stp	x24, x22, [x0, #64]
    99a8:	str	w9, [x0, #80]
    99ac:	strb	wzr, [x0, #84]
    99b0:	str	x24, [x0, #56]
    99b4:	stp	x8, xzr, [x0, #16]
    99b8:	ldp	w8, w9, [x27, #8]
    99bc:	mov	x23, x0
    99c0:	cmp	w8, w9
    99c4:	b.cs	a3b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1790>  // b.hs, b.nlast
    99c8:	ldr	x10, [x27]
    99cc:	ldr	x25, [sp, #48]
    99d0:	cmp	w8, w9
    99d4:	str	x23, [x10, w8, uxtw #3]
    99d8:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    99dc:	add	w8, w8, #0x1
    99e0:	str	w8, [x27, #8]
    99e4:	ldr	x8, [x21]
    99e8:	mov	x0, x21
    99ec:	ldr	x8, [x8, #136]
    99f0:	blr	x8
    99f4:	ldr	x23, [sp, #24]
    99f8:	cbz	w26, 9cdc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x10b4>
    99fc:	ldr	x0, [x23]
    9a00:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9a04:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9a08:	ldr	x8, [x23]
    9a0c:	mov	x22, x0
    9a10:	ldr	x9, [x8]
    9a14:	mov	x0, x8
    9a18:	ldr	x9, [x9, #48]
    9a1c:	blr	x9
    9a20:	mov	x23, x0
    9a24:	mov	w0, #0x70                  	// #112
    9a28:	bl	0 <_Znwm>
    9a2c:	mov	x8, x0
    9a30:	mov	w9, #0x6                   	// #6
    9a34:	strb	wzr, [x8, #32]!
    9a38:	str	w9, [x0, #48]
    9a3c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9a40:	add	x9, x9, #0x0
    9a44:	mov	w10, #0x2                   	// #2
    9a48:	str	x28, [x0]
    9a4c:	str	x23, [x0, #104]
    9a50:	stp	x22, x9, [x0, #64]
    9a54:	str	w10, [x0, #80]
    9a58:	strb	wzr, [x0, #84]
    9a5c:	str	x22, [x0, #56]
    9a60:	stp	x8, xzr, [x0, #16]
    9a64:	ldp	w8, w9, [x27, #8]
    9a68:	mov	x20, x0
    9a6c:	cmp	w8, w9
    9a70:	b.cs	a3e0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17b8>  // b.hs, b.nlast
    9a74:	ldr	x10, [x27]
    9a78:	cmp	w8, w9
    9a7c:	str	x20, [x10, w8, uxtw #3]
    9a80:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    9a84:	add	w8, w8, #0x1
    9a88:	str	w8, [x27, #8]
    9a8c:	ldr	x8, [x21]
    9a90:	mov	x0, x21
    9a94:	ldr	x8, [x8, #136]
    9a98:	blr	x8
    9a9c:	b	a214 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15ec>
    9aa0:	mov	w1, #0x19                  	// #25
    9aa4:	mov	x0, x8
    9aa8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9aac:	tbz	w0, #0, 9c2c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1004>
    9ab0:	ldp	x22, x23, [x29, #-80]
    9ab4:	ldr	x24, [sp, #24]
    9ab8:	mov	w28, #0x1                   	// #1
    9abc:	mov	w19, w26
    9ac0:	ldr	x0, [x24]
    9ac4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ac8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9acc:	stp	xzr, xzr, [sp, #88]
    9ad0:	ldr	x8, [x24]
    9ad4:	mov	x24, x0
    9ad8:	mov	x0, x8
    9adc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ae0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9ae4:	mov	x3, x0
    9ae8:	sub	x0, x29, #0x40
    9aec:	add	x1, sp, #0x54
    9af0:	add	x2, sp, #0x58
    9af4:	bl	10f50 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9af8:	cbnz	w0, 9ecc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12a4>
    9afc:	ldr	x8, [sp, #96]
    9b00:	cmp	x23, x8
    9b04:	b.ne	9ca4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x107c>  // b.any
    9b08:	cbz	x23, 9b20 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xef8>
    9b0c:	ldr	x1, [sp, #88]
    9b10:	mov	x0, x22
    9b14:	mov	x2, x23
    9b18:	bl	0 <bcmp>
    9b1c:	cbnz	w0, 9ca4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x107c>
    9b20:	ldr	x25, [sp, #24]
    9b24:	ldr	x0, [x25]
    9b28:	ldr	x8, [x0]
    9b2c:	ldr	x8, [x8, #48]
    9b30:	blr	x8
    9b34:	ldr	x8, [x0, #24]
    9b38:	ldr	w20, [sp, #84]
    9b3c:	ldr	w9, [x8, #8]
    9b40:	cmp	w9, w20
    9b44:	b.ls	a4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1878>  // b.plast
    9b48:	ldr	x0, [x25]
    9b4c:	ldr	x8, [x8, #104]
    9b50:	ldr	x9, [x0]
    9b54:	ldrh	w25, [x8, x20, lsl #1]
    9b58:	ldr	x8, [x9, #48]
    9b5c:	blr	x8
    9b60:	ldr	x8, [x0, #24]
    9b64:	ldr	w9, [x8, #8]
    9b68:	cmp	w9, w19
    9b6c:	b.ls	a4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1878>  // b.plast
    9b70:	ldr	x8, [x8, #104]
    9b74:	ldrh	w8, [x8, w19, uxtw #1]
    9b78:	add	w8, w8, #0x1
    9b7c:	and	w8, w8, #0x1f
    9b80:	cmp	w25, w8
    9b84:	b.ne	9f40 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1318>  // b.any
    9b88:	ldr	x24, [sp, #24]
    9b8c:	mov	w1, #0x19                  	// #25
    9b90:	add	w28, w28, #0x1
    9b94:	ldr	x0, [x24]
    9b98:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9b9c:	mov	w19, w20
    9ba0:	tbnz	w0, #0, 9ac0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe98>
    9ba4:	b	9c34 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x100c>
    9ba8:	eor	w20, w20, #0x1
    9bac:	ldr	x0, [x19]
    9bb0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9bb4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9bb8:	ldr	x8, [x19]
    9bbc:	mov	x23, x0
    9bc0:	ldr	x9, [x8]
    9bc4:	mov	x0, x8
    9bc8:	ldr	x9, [x9, #48]
    9bcc:	blr	x9
    9bd0:	mov	x24, x0
    9bd4:	mov	w0, #0x70                  	// #112
    9bd8:	bl	0 <_Znwm>
    9bdc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9be0:	mov	x8, x0
    9be4:	add	x9, x9, #0x0
    9be8:	strb	wzr, [x8, #32]!
    9bec:	str	x9, [x0]
    9bf0:	mov	w9, #0x2                   	// #2
    9bf4:	str	w9, [x0, #48]
    9bf8:	str	x24, [x0, #104]
    9bfc:	str	w20, [x0, #72]
    9c00:	stp	x21, x23, [x0, #56]
    9c04:	stp	x8, xzr, [x0, #16]
    9c08:	ldp	w8, w9, [x27, #8]
    9c0c:	mov	x22, x0
    9c10:	cmp	w8, w9
    9c14:	b.cs	a390 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1768>  // b.hs, b.nlast
    9c18:	ldr	x10, [x27]
    9c1c:	cmp	w8, w9
    9c20:	str	x22, [x10, w8, uxtw #3]
    9c24:	b.cc	93f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7d0>  // b.lo, b.ul, b.last
    9c28:	b	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>
    9c2c:	ldr	x24, [sp, #24]
    9c30:	mov	w28, #0x1                   	// #1
    9c34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9c38:	add	x8, x8, #0x0
    9c3c:	mov	w9, #0x103                 	// #259
    9c40:	stp	x8, xzr, [sp, #56]
    9c44:	strh	w9, [sp, #72]
    9c48:	ldr	x0, [x24]
    9c4c:	add	x2, sp, #0x38
    9c50:	mov	w1, #0x16                  	// #22
    9c54:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    9c58:	tbz	w0, #0, 9c64 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x103c>
    9c5c:	mov	w25, #0x1                   	// #1
    9c60:	b	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    9c64:	mov	x19, x24
    9c68:	cmp	w28, #0x5
    9c6c:	b.cc	9cb0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1088>  // b.lo, b.ul, b.last
    9c70:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9c74:	add	x8, x8, #0x0
    9c78:	mov	w9, #0x103                 	// #259
    9c7c:	stp	x8, xzr, [sp, #56]
    9c80:	strh	w9, [sp, #72]
    9c84:	ldr	x0, [x19]
    9c88:	add	x2, sp, #0x38
    9c8c:	mov	x1, x21
    9c90:	mov	x3, xzr
    9c94:	mov	x4, xzr
    9c98:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    9c9c:	mov	w25, #0x1                   	// #1
    9ca0:	b	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    9ca4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9ca8:	add	x8, x8, #0x0
    9cac:	b	9f48 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1320>
    9cb0:	ldur	x1, [x29, #-72]
    9cb4:	cbz	x1, 9f78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1350>
    9cb8:	ldur	x0, [x29, #-80]
    9cbc:	add	x8, sp, #0x38
    9cc0:	mov	w2, #0x1                   	// #1
    9cc4:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    9cc8:	ldrb	w8, [sp, #64]
    9ccc:	cbz	w8, 9f78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1350>
    9cd0:	ldr	d0, [sp, #56]
    9cd4:	strb	wzr, [sp, #64]
    9cd8:	b	9f7c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1354>
    9cdc:	cmp	w19, #0x25
    9ce0:	b.ne	9da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1180>  // b.any
    9ce4:	ldr	x8, [x21]
    9ce8:	mov	x0, x21
    9cec:	ldr	x8, [x8, #136]
    9cf0:	blr	x8
    9cf4:	ldr	x0, [x23]
    9cf8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9cfc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9d00:	mov	x22, x0
    9d04:	sub	x1, x29, #0x30
    9d08:	mov	x0, x21
    9d0c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    9d10:	tbnz	w0, #0, 9da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1180>
    9d14:	ldur	x8, [x29, #-48]
    9d18:	cbz	x8, a4e0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18b8>
    9d1c:	ldr	w9, [x8]
    9d20:	cmp	w9, #0x1
    9d24:	b.ne	9da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1180>  // b.any
    9d28:	ldr	x0, [x23]
    9d2c:	ldr	x20, [x8, #16]
    9d30:	ldr	x9, [x0]
    9d34:	ldr	x8, [x9, #48]
    9d38:	blr	x8
    9d3c:	mov	x1, x0
    9d40:	mov	x0, x20
    9d44:	mov	w2, wzr
    9d48:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    9d4c:	ldr	x8, [x23]
    9d50:	mov	x21, x0
    9d54:	mov	x0, x8
    9d58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9d5c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9d60:	ldr	x8, [x23]
    9d64:	mov	x23, x0
    9d68:	ldr	x9, [x8]
    9d6c:	mov	x0, x8
    9d70:	ldr	x9, [x9, #48]
    9d74:	blr	x9
    9d78:	mov	x24, x0
    9d7c:	mov	w0, #0x70                  	// #112
    9d80:	bl	0 <_Znwm>
    9d84:	mov	x8, x0
    9d88:	mov	x20, x0
    9d8c:	strb	wzr, [x8, #32]!
    9d90:	str	x28, [x0]
    9d94:	str	wzr, [x0, #48]
    9d98:	str	x24, [x0, #104]
    9d9c:	str	x21, [x0, #72]
    9da0:	str	x22, [x0, #56]
    9da4:	b	93d4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7ac>
    9da8:	ldr	x0, [x23]
    9dac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9db0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9db4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9db8:	add	x8, x8, #0x0
    9dbc:	mov	w9, #0x103                 	// #259
    9dc0:	stp	x8, xzr, [x29, #-48]
    9dc4:	sturh	w9, [x29, #-32]
    9dc8:	ldr	x8, [x23]
    9dcc:	mov	x1, x0
    9dd0:	sub	x2, x29, #0x30
    9dd4:	mov	x3, xzr
    9dd8:	mov	x0, x8
    9ddc:	mov	x4, xzr
    9de0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    9de4:	tbz	w0, #0, a214 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15ec>
    9de8:	mov	x0, x25
    9dec:	mov	x1, x27
    9df0:	bl	ccd0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    9df4:	cmp	w0, #0x1
    9df8:	b.ne	9ec0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1298>  // b.any
    9dfc:	ldr	x0, [x23]
    9e00:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9e04:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9e08:	ldr	x8, [x23]
    9e0c:	mov	x20, x0
    9e10:	sub	x1, x29, #0x30
    9e14:	mov	x0, x8
    9e18:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    9e1c:	tbnz	w0, #0, a034 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x140c>
    9e20:	ldr	x0, [x23]
    9e24:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9e28:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9e2c:	ldr	x8, [x23]
    9e30:	ldur	x19, [x29, #-48]
    9e34:	sub	x23, x0, #0x1
    9e38:	ldr	x9, [x8]
    9e3c:	mov	x0, x8
    9e40:	ldr	x9, [x9, #48]
    9e44:	blr	x9
    9e48:	mov	x22, x0
    9e4c:	mov	w0, #0x70                  	// #112
    9e50:	bl	0 <_Znwm>
    9e54:	mov	x8, x0
    9e58:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9e5c:	mov	x21, x0
    9e60:	add	x9, x9, #0x0
    9e64:	strb	wzr, [x8, #32]!
    9e68:	str	x9, [x0]
    9e6c:	str	wzr, [x0, #48]
    9e70:	str	x22, [x0, #104]
    9e74:	str	x19, [x0, #72]
    9e78:	str	x20, [x0, #56]
    9e7c:	str	x23, [x0, #64]
    9e80:	stp	x8, xzr, [x0, #16]
    9e84:	ldp	w8, w9, [x27, #8]
    9e88:	cmp	w8, w9
    9e8c:	b.cs	a3a4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x177c>  // b.hs, b.nlast
    9e90:	ldr	x10, [x27]
    9e94:	cmp	w8, w9
    9e98:	str	x21, [x10, w8, uxtw #3]
    9e9c:	b.cc	93f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7d0>  // b.lo, b.ul, b.last
    9ea0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    9ea4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9ea8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    9eac:	add	x0, x0, #0x0
    9eb0:	add	x1, x1, #0x0
    9eb4:	add	x3, x3, #0x0
    9eb8:	mov	w2, #0x43                  	// #67
    9ebc:	bl	0 <__assert_fail>
    9ec0:	cmp	w0, #0x0
    9ec4:	cset	w21, ne  // ne = any
    9ec8:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    9ecc:	mov	w25, w0
    9ed0:	b	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    9ed4:	ldr	w8, [sp, #84]
    9ed8:	add	w9, w8, #0x20
    9edc:	cmp	w8, w26
    9ee0:	csel	w8, w8, w9, hi  // hi = pmore
    9ee4:	sub	w8, w8, w26
    9ee8:	sub	w9, w8, #0x1
    9eec:	cmp	w9, #0x3
    9ef0:	b.cc	a054 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x142c>  // b.lo, b.ul, b.last
    9ef4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9ef8:	add	x8, x8, #0x0
    9efc:	b	9878 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc50>
    9f00:	ldr	x8, [x0]
    9f04:	ldr	x8, [x8, #56]
    9f08:	blr	x8
    9f0c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    9f10:	ldr	x8, [x8]
    9f14:	mov	w9, w0
    9f18:	lsr	x9, x9, #3
    9f1c:	ldrh	w10, [x8, #502]
    9f20:	cmp	w9, w10
    9f24:	b.cs	a060 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1438>  // b.hs, b.nlast
    9f28:	ldr	x8, [x8, #488]
    9f2c:	ldrb	w8, [x8, x9]
    9f30:	and	w9, w0, #0x7
    9f34:	lsr	w8, w8, w9
    9f38:	and	w25, w8, #0x1
    9f3c:	b	a064 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x143c>
    9f40:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9f44:	add	x8, x8, #0x0
    9f48:	stp	x8, xzr, [sp, #56]
    9f4c:	ldr	x8, [sp, #24]
    9f50:	mov	w9, #0x103                 	// #259
    9f54:	strh	w9, [sp, #72]
    9f58:	add	x2, sp, #0x38
    9f5c:	ldr	x0, [x8]
    9f60:	mov	x1, x24
    9f64:	mov	x3, xzr
    9f68:	mov	x4, xzr
    9f6c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    9f70:	mov	w25, #0x2                   	// #2
    9f74:	b	a018 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13f0>
    9f78:	movi	v0.2d, #0x0
    9f7c:	ldr	x0, [x19]
    9f80:	str	q0, [sp, #32]
    9f84:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9f88:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9f8c:	ldr	x8, [x19]
    9f90:	mov	x23, x0
    9f94:	ldr	x9, [x8]
    9f98:	mov	x0, x8
    9f9c:	ldr	x9, [x9, #48]
    9fa0:	blr	x9
    9fa4:	mov	x24, x0
    9fa8:	mov	w0, #0x70                  	// #112
    9fac:	bl	0 <_Znwm>
    9fb0:	mov	x8, x0
    9fb4:	strb	wzr, [x8, #32]!
    9fb8:	stp	w26, w28, [x0, #72]
    9fbc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9fc0:	ldr	q0, [sp, #32]
    9fc4:	add	x9, x9, #0x0
    9fc8:	str	x9, [x0]
    9fcc:	mov	w9, #0x4                   	// #4
    9fd0:	str	w9, [x0, #48]
    9fd4:	mov	w9, #0x1                   	// #1
    9fd8:	str	x24, [x0, #104]
    9fdc:	str	d0, [x0, #80]
    9fe0:	str	w9, [x0, #88]
    9fe4:	stp	x21, x23, [x0, #56]
    9fe8:	stp	x8, xzr, [x0, #16]
    9fec:	ldp	w8, w9, [x27, #8]
    9ff0:	mov	x22, x0
    9ff4:	cmp	w8, w9
    9ff8:	b.cs	a3cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17a4>  // b.hs, b.nlast
    9ffc:	ldr	x10, [x27]
    a000:	cmp	w8, w9
    a004:	str	x22, [x10, w8, uxtw #3]
    a008:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    a00c:	mov	w25, wzr
    a010:	add	w8, w8, #0x1
    a014:	str	w8, [x27, #8]
    a018:	ldur	w8, [x29, #-16]
    a01c:	cmp	w8, #0x41
    a020:	b.cc	a030 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1408>  // b.lo, b.ul, b.last
    a024:	ldur	x0, [x29, #-24]
    a028:	cbz	x0, a030 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1408>
    a02c:	bl	0 <_ZdaPv>
    a030:	cbz	w25, a03c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1414>
    a034:	mov	w21, #0x1                   	// #1
    a038:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    a03c:	ldr	x0, [sp, #48]
    a040:	mov	x1, x27
    a044:	bl	c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    a048:	cmp	w0, #0x2
    a04c:	cset	w21, eq  // eq = none
    a050:	b	a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    a054:	add	w28, w8, #0x1
    a058:	mov	x24, x23
    a05c:	b	9c34 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x100c>
    a060:	mov	w25, wzr
    a064:	ldr	x0, [x23]
    a068:	ldr	x8, [x0]
    a06c:	ldr	x8, [x8, #48]
    a070:	blr	x8
    a074:	ldur	x8, [x29, #-64]
    a078:	cbz	x8, a4e0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18b8>
    a07c:	ldr	w9, [x8]
    a080:	mov	x20, x0
    a084:	sub	x23, x22, #0x1
    a088:	cmp	w9, #0x1
    a08c:	b.ne	a2fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16d4>  // b.any
    a090:	ldr	x21, [x8, #16]
    a094:	cmp	w25, #0x0
    a098:	mov	w8, #0x10                  	// #16
    a09c:	mov	w9, #0x30                  	// #48
    a0a0:	csel	w8, w9, w8, ne  // ne = any
    a0a4:	cmp	x21, #0x10, lsl #12
    a0a8:	b.cc	a0e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14bc>  // b.lo, b.ul, b.last
    a0ac:	mov	w24, wzr
    a0b0:	mov	x9, x21
    a0b4:	rbit	x10, x9
    a0b8:	clz	x10, x10
    a0bc:	cmp	w10, #0x10
    a0c0:	b.cc	a23c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1614>  // b.lo, b.ul, b.last
    a0c4:	lsr	x21, x9, #16
    a0c8:	lsr	x10, x9, #32
    a0cc:	add	w24, w24, #0x10
    a0d0:	mov	x9, x21
    a0d4:	cbnz	x10, a0b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x148c>
    a0d8:	cmp	w24, w8
    a0dc:	b.ls	a0e8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14c0>  // b.plast
    a0e0:	b	a240 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1618>
    a0e4:	mov	w24, wzr
    a0e8:	mov	w0, #0x70                  	// #112
    a0ec:	bl	0 <_Znwm>
    a0f0:	mov	x8, x0
    a0f4:	mov	w9, #0x6                   	// #6
    a0f8:	strb	wzr, [x8, #32]!
    a0fc:	str	w9, [x0, #48]
    a100:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a104:	add	x9, x9, #0x0
    a108:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    a10c:	stp	x22, x9, [x0, #64]
    a110:	mov	w9, #0x4                   	// #4
    a114:	add	x19, x19, #0x0
    a118:	str	w9, [x0, #80]
    a11c:	str	x19, [x0]
    a120:	str	x20, [x0, #104]
    a124:	strb	wzr, [x0, #84]
    a128:	stp	x8, xzr, [x0, #16]
    a12c:	str	x22, [x0, #56]
    a130:	ldr	w8, [x27, #8]
    a134:	cbz	w8, a500 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18d8>
    a138:	ldr	x9, [x27]
    a13c:	ldr	x8, [x9]
    a140:	str	x0, [x9]
    a144:	cbz	x8, a158 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1530>
    a148:	ldr	x9, [x8]
    a14c:	mov	x0, x8
    a150:	ldr	x9, [x9, #8]
    a154:	blr	x9
    a158:	mov	x0, x21
    a15c:	mov	x1, x20
    a160:	mov	w2, wzr
    a164:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    a168:	mov	x22, x0
    a16c:	mov	w0, #0x70                  	// #112
    a170:	bl	0 <_Znwm>
    a174:	mov	x8, x0
    a178:	strb	wzr, [x8, #32]!
    a17c:	str	x19, [x0]
    a180:	str	wzr, [x0, #48]
    a184:	str	x20, [x0, #104]
    a188:	stp	x23, x22, [x0, #64]
    a18c:	str	xzr, [x0, #56]
    a190:	stp	x8, xzr, [x0, #16]
    a194:	ldp	w8, w22, [x27, #8]
    a198:	mov	x21, x0
    a19c:	cmp	w8, w22
    a1a0:	b.cs	a3f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17cc>  // b.hs, b.nlast
    a1a4:	ldr	x26, [x27]
    a1a8:	cmp	w8, w22
    a1ac:	str	x21, [x26, w8, uxtw #3]
    a1b0:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    a1b4:	add	w25, w8, #0x1
    a1b8:	str	w25, [x27, #8]
    a1bc:	cbz	w24, a214 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15ec>
    a1c0:	mov	w0, #0x70                  	// #112
    a1c4:	bl	0 <_Znwm>
    a1c8:	mov	x8, x0
    a1cc:	mov	w9, #0xa                   	// #10
    a1d0:	mov	x21, x0
    a1d4:	strb	wzr, [x8, #32]!
    a1d8:	str	w9, [x0, #48]
    a1dc:	mov	w9, #0x1                   	// #1
    a1e0:	cmp	w25, w22
    a1e4:	str	x19, [x0]
    a1e8:	str	x20, [x0, #104]
    a1ec:	stp	wzr, w24, [x0, #72]
    a1f0:	strb	w9, [x0, #80]
    a1f4:	stp	x8, xzr, [x0, #16]
    a1f8:	stp	xzr, x23, [x0, #56]
    a1fc:	b.cs	a408 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17e0>  // b.hs, b.nlast
    a200:	cmp	w25, w22
    a204:	str	x21, [x26, w25, uxtw #3]
    a208:	b.cs	9ea0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1278>  // b.hs, b.nlast
    a20c:	add	w8, w25, #0x1
    a210:	b	93fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7d4>
    a214:	mov	w21, wzr
    a218:	and	w0, w21, #0x1
    a21c:	ldp	x20, x19, [sp, #272]
    a220:	ldp	x22, x21, [sp, #256]
    a224:	ldp	x24, x23, [sp, #240]
    a228:	ldp	x26, x25, [sp, #224]
    a22c:	ldp	x28, x27, [sp, #208]
    a230:	ldp	x29, x30, [sp, #192]
    a234:	add	sp, sp, #0x120
    a238:	ret
    a23c:	mov	x21, x9
    a240:	lsl	x9, x21, x24
    a244:	mov	w8, #0x40                  	// #64
    a248:	str	w8, [sp, #64]
    a24c:	str	x9, [sp, #56]
    a250:	cbnz	w25, a2fc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16d4>
    a254:	clz	x9, x9
    a258:	sub	w8, w8, w9
    a25c:	cmp	w8, #0x21
    a260:	b.cc	a274 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x164c>  // b.lo, b.ul, b.last
    a264:	add	x0, sp, #0x38
    a268:	bl	0 <LLVMInitializeAArch64AsmParser>
    a26c:	cmp	w0, #0x21
    a270:	b.cs	a2a4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x167c>  // b.hs, b.nlast
    a274:	mov	w19, wzr
    a278:	b	a2dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16b4>
    a27c:	mov	x0, x27
    a280:	mov	x1, xzr
    a284:	bl	0 <LLVMInitializeAArch64AsmParser>
    a288:	ldp	w8, w9, [x27, #8]
    a28c:	b	93e8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7c0>
    a290:	mov	x0, x27
    a294:	mov	x1, xzr
    a298:	bl	0 <LLVMInitializeAArch64AsmParser>
    a29c:	ldp	w8, w9, [x27, #8]
    a2a0:	b	92a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x680>
    a2a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a2a8:	add	x8, x8, #0x0
    a2ac:	stp	x8, xzr, [x29, #-48]
    a2b0:	ldr	x8, [sp, #24]
    a2b4:	mov	w9, #0x103                 	// #259
    a2b8:	sturh	w9, [x29, #-32]
    a2bc:	sub	x2, x29, #0x30
    a2c0:	ldr	x0, [x8]
    a2c4:	mov	x1, x22
    a2c8:	mov	x3, xzr
    a2cc:	mov	x4, xzr
    a2d0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    a2d4:	mov	w21, w0
    a2d8:	mov	w19, #0x1                   	// #1
    a2dc:	ldr	w8, [sp, #64]
    a2e0:	cmp	w8, #0x41
    a2e4:	b.cc	a2f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16cc>  // b.lo, b.ul, b.last
    a2e8:	ldr	x0, [sp, #56]
    a2ec:	cbz	x0, a2f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16cc>
    a2f0:	bl	0 <_ZdaPv>
    a2f4:	ldr	x27, [sp, #16]
    a2f8:	cbnz	w19, a218 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15f0>
    a2fc:	ldr	x8, [sp, #24]
    a300:	ldr	x0, [x8]
    a304:	ldr	x8, [x0]
    a308:	ldr	x8, [x8, #56]
    a30c:	blr	x8
    a310:	ldr	x0, [x0, #16]
    a314:	ldur	x1, [x29, #-64]
    a318:	cmp	w25, #0x0
    a31c:	mov	w8, #0x4                   	// #4
    a320:	mov	w9, #0x8                   	// #8
    a324:	csel	w2, w9, w8, ne  // ne = any
    a328:	mov	x3, x22
    a32c:	bl	0 <_ZN4llvm21AArch64TargetStreamer20addConstantPoolEntryEPKNS_6MCExprEjNS_5SMLocE>
    a330:	mov	x22, x0
    a334:	mov	w0, #0x70                  	// #112
    a338:	bl	0 <_Znwm>
    a33c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a340:	mov	x8, x0
    a344:	add	x9, x9, #0x0
    a348:	mov	x21, x0
    a34c:	strb	wzr, [x8, #32]!
    a350:	str	x9, [x0]
    a354:	str	wzr, [x0, #48]
    a358:	str	x20, [x0, #104]
    a35c:	str	x22, [x0, #72]
    a360:	str	xzr, [x0, #56]
    a364:	b	9e7c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1254>
    a368:	mov	x0, x27
    a36c:	mov	x1, xzr
    a370:	bl	0 <LLVMInitializeAArch64AsmParser>
    a374:	ldp	w8, w9, [x27, #8]
    a378:	b	9624 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x9fc>
    a37c:	mov	x0, x27
    a380:	mov	x1, xzr
    a384:	bl	0 <LLVMInitializeAArch64AsmParser>
    a388:	ldp	w8, w9, [x27, #8]
    a38c:	b	96a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa78>
    a390:	mov	x0, x27
    a394:	mov	x1, xzr
    a398:	bl	0 <LLVMInitializeAArch64AsmParser>
    a39c:	ldp	w8, w9, [x27, #8]
    a3a0:	b	9c18 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xff0>
    a3a4:	mov	x0, x27
    a3a8:	mov	x1, xzr
    a3ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3b0:	ldp	w8, w9, [x27, #8]
    a3b4:	b	9e90 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1268>
    a3b8:	mov	x0, x27
    a3bc:	mov	x1, xzr
    a3c0:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3c4:	ldp	w8, w9, [x27, #8]
    a3c8:	b	99c8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xda0>
    a3cc:	mov	x0, x27
    a3d0:	mov	x1, xzr
    a3d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3d8:	ldp	w8, w9, [x27, #8]
    a3dc:	b	9ffc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x13d4>
    a3e0:	mov	x0, x27
    a3e4:	mov	x1, xzr
    a3e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    a3ec:	ldp	w8, w9, [x27, #8]
    a3f0:	b	9a74 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe4c>
    a3f4:	mov	x0, x27
    a3f8:	mov	x1, xzr
    a3fc:	bl	0 <LLVMInitializeAArch64AsmParser>
    a400:	ldp	w8, w22, [x27, #8]
    a404:	b	a1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x157c>
    a408:	mov	x0, x27
    a40c:	mov	x1, xzr
    a410:	bl	0 <LLVMInitializeAArch64AsmParser>
    a414:	ldp	w25, w22, [x27, #8]
    a418:	ldr	x26, [x27]
    a41c:	b	a200 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15d8>
    a420:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a424:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a428:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a42c:	add	x0, x0, #0x0
    a430:	add	x1, x1, #0x0
    a434:	add	x3, x3, #0x0
    a438:	mov	w2, #0x9ff8                	// #40952
    a43c:	bl	0 <__assert_fail>
    a440:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a444:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a448:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a44c:	add	x0, x0, #0x0
    a450:	add	x1, x1, #0x0
    a454:	add	x3, x3, #0x0
    a458:	mov	w2, #0x99                  	// #153
    a45c:	bl	0 <__assert_fail>
    a460:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a464:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a468:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a46c:	add	x0, x0, #0x0
    a470:	add	x1, x1, #0x0
    a474:	add	x3, x3, #0x0
    a478:	mov	w2, #0x6f                  	// #111
    a47c:	bl	0 <__assert_fail>
    a480:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a484:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a488:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a48c:	add	x0, x0, #0x0
    a490:	add	x1, x1, #0x0
    a494:	add	x3, x3, #0x0
    a498:	mov	w2, #0x657                 	// #1623
    a49c:	bl	0 <__assert_fail>
    a4a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a4a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a4a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a4ac:	add	x0, x0, #0x0
    a4b0:	add	x1, x1, #0x0
    a4b4:	add	x3, x3, #0x0
    a4b8:	mov	w2, #0x224                 	// #548
    a4bc:	bl	0 <__assert_fail>
    a4c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a4c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a4c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a4cc:	add	x0, x0, #0x0
    a4d0:	add	x1, x1, #0x0
    a4d4:	add	x3, x3, #0x0
    a4d8:	mov	w2, #0xa9d                 	// #2717
    a4dc:	bl	0 <__assert_fail>
    a4e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a4e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a4e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a4ec:	add	x0, x0, #0x0
    a4f0:	add	x1, x1, #0x0
    a4f4:	add	x3, x3, #0x0
    a4f8:	mov	w2, #0x69                  	// #105
    a4fc:	bl	0 <__assert_fail>
    a500:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a504:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a508:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a50c:	add	x0, x0, #0x0
    a510:	add	x1, x1, #0x0
    a514:	add	x3, x3, #0x0
    a518:	mov	w2, #0x95                  	// #149
    a51c:	bl	0 <__assert_fail>

000000000000a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>:
    a520:	sub	sp, sp, #0x80
    a524:	stp	x29, x30, [sp, #32]
    a528:	stp	x28, x27, [sp, #48]
    a52c:	stp	x26, x25, [sp, #64]
    a530:	stp	x24, x23, [sp, #80]
    a534:	stp	x22, x21, [sp, #96]
    a538:	stp	x20, x19, [sp, #112]
    a53c:	add	x29, sp, #0x20
    a540:	ldr	x21, [x0, #8]
    a544:	mov	x20, x0
    a548:	mov	w22, w3
    a54c:	mov	x23, x2
    a550:	mov	x0, x21
    a554:	mov	x19, x1
    a558:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a55c:	ldr	w8, [x0]
    a560:	cmp	w8, #0x2
    a564:	b.ne	a5f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>  // b.any
    a568:	ldp	x25, x24, [x0, #8]
    a56c:	cbz	x24, a58c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    a570:	mov	w1, #0x2e                  	// #46
    a574:	mov	x0, x25
    a578:	mov	x2, x24
    a57c:	bl	0 <memchr>
    a580:	cbz	x0, a58c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    a584:	sub	x28, x0, x25
    a588:	b	a590 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x70>
    a58c:	mov	x28, #0xffffffffffffffff    	// #-1
    a590:	cmp	x24, x28
    a594:	csel	x27, x24, x28, cc  // cc = lo, ul, last
    a598:	mov	x0, x20
    a59c:	mov	x1, x25
    a5a0:	mov	x2, x27
    a5a4:	mov	w3, w22
    a5a8:	bl	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    a5ac:	cbz	w0, a5f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>
    a5b0:	mov	w26, w0
    a5b4:	cmn	x28, #0x1
    a5b8:	b.eq	a5dc <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xbc>  // b.none
    a5bc:	add	x0, x25, x27
    a5c0:	sub	x1, x24, x27
    a5c4:	add	x8, sp, #0x8
    a5c8:	mov	w2, w22
    a5cc:	stp	x0, x1, [x23]
    a5d0:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    a5d4:	ldrb	w8, [sp, #16]
    a5d8:	cbz	w8, a61c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xfc>
    a5dc:	ldr	x8, [x21]
    a5e0:	mov	x0, x21
    a5e4:	ldr	x8, [x8, #136]
    a5e8:	blr	x8
    a5ec:	mov	w0, wzr
    a5f0:	str	w26, [x19]
    a5f4:	b	a5fc <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>
    a5f8:	mov	w0, #0x1                   	// #1
    a5fc:	ldp	x20, x19, [sp, #112]
    a600:	ldp	x22, x21, [sp, #96]
    a604:	ldp	x24, x23, [sp, #80]
    a608:	ldp	x26, x25, [sp, #64]
    a60c:	ldp	x28, x27, [sp, #48]
    a610:	ldp	x29, x30, [sp, #32]
    a614:	add	sp, sp, #0x80
    a618:	ret
    a61c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a620:	add	x8, x8, #0x0
    a624:	mov	w9, #0x103                 	// #259
    a628:	stp	x8, xzr, [sp, #8]
    a62c:	strh	w9, [sp, #24]
    a630:	ldr	x0, [x20, #8]
    a634:	add	x1, sp, #0x8
    a638:	mov	x2, xzr
    a63c:	mov	x3, xzr
    a640:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    a644:	mov	w0, #0x2                   	// #2
    a648:	b	a5fc <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>

000000000000a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>:
    a64c:	sub	sp, sp, #0x60
    a650:	stp	x29, x30, [sp, #48]
    a654:	stp	x22, x21, [sp, #64]
    a658:	stp	x20, x19, [sp, #80]
    a65c:	add	x29, sp, #0x30
    a660:	mov	x19, x8
    a664:	sub	w8, w2, #0x2
    a668:	cmp	w8, #0x2
    a66c:	stp	x0, x1, [x29, #-16]
    a670:	b.cs	a6ec <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0xa0>  // b.hs, b.nlast
    a674:	mov	x8, sp
    a678:	sub	x0, x29, #0x10
    a67c:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    a680:	ldp	x0, x8, [sp]
    a684:	cbz	x8, a784 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x138>
    a688:	cmp	x8, #0x2
    a68c:	b.ne	a6e0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x94>  // b.any
    a690:	ldrh	w8, [x0]
    a694:	mov	w9, #0x622e                	// #25134
    a698:	cmp	w8, w9
    a69c:	b.eq	a78c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x140>  // b.none
    a6a0:	ldrh	w8, [x0]
    a6a4:	mov	w9, #0x682e                	// #26670
    a6a8:	cmp	w8, w9
    a6ac:	b.eq	a918 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2cc>  // b.none
    a6b0:	ldrh	w8, [x0]
    a6b4:	mov	w9, #0x732e                	// #29486
    a6b8:	cmp	w8, w9
    a6bc:	b.eq	a920 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2d4>  // b.none
    a6c0:	ldrh	w8, [x0]
    a6c4:	mov	w9, #0x642e                	// #25646
    a6c8:	cmp	w8, w9
    a6cc:	b.eq	a94c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x300>  // b.none
    a6d0:	ldrh	w8, [x0]
    a6d4:	mov	w9, #0x712e                	// #28974
    a6d8:	cmp	w8, w9
    a6dc:	b.eq	a96c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x320>  // b.none
    a6e0:	mov	w21, #0xffffffff            	// #-1
    a6e4:	mov	w22, #0xffffffff            	// #-1
    a6e8:	b	a974 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x328>
    a6ec:	cmp	w2, #0x1
    a6f0:	b.ne	aa34 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3e8>  // b.any
    a6f4:	mov	x8, sp
    a6f8:	sub	x0, x29, #0x10
    a6fc:	mov	x20, sp
    a700:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    a704:	ldp	x0, x10, [sp]
    a708:	mov	w21, #0xffffffff            	// #-1
    a70c:	cmp	x10, #0x4
    a710:	b.hi	a910 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2c4>  // b.pmore
    a714:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    a718:	add	x11, x11, #0x0
    a71c:	adr	x12, a738 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0xec>
    a720:	ldrb	w13, [x11, x10]
    a724:	add	x12, x12, x13, lsl #2
    a728:	mov	w9, wzr
    a72c:	mov	w8, wzr
    a730:	mov	w22, #0xffffffff            	// #-1
    a734:	br	x12
    a738:	ldrh	w8, [x0]
    a73c:	mov	w9, #0x622e                	// #25134
    a740:	cmp	w8, w9
    a744:	b.eq	a928 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2dc>  // b.none
    a748:	ldrh	w8, [x0]
    a74c:	mov	w9, #0x682e                	// #26670
    a750:	cmp	w8, w9
    a754:	b.eq	a960 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x314>  // b.none
    a758:	ldrh	w8, [x0]
    a75c:	mov	w9, #0x732e                	// #29486
    a760:	cmp	w8, w9
    a764:	b.eq	a9d0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x384>  // b.none
    a768:	ldrh	w8, [x0]
    a76c:	mov	w9, #0x642e                	// #25646
    a770:	cmp	w8, w9
    a774:	b.ne	a90c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2c0>  // b.any
    a778:	mov	w9, wzr
    a77c:	mov	w8, #0x40                  	// #64
    a780:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a784:	mov	w21, wzr
    a788:	b	a970 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>
    a78c:	mov	w21, #0x8                   	// #8
    a790:	b	a970 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>
    a794:	ldrh	w9, [x0]
    a798:	ldrb	w10, [x0, #2]
    a79c:	mov	w8, #0x312e                	// #12590
    a7a0:	mov	w11, #0x64                  	// #100
    a7a4:	eor	w9, w9, w8
    a7a8:	eor	w10, w10, w11
    a7ac:	orr	w9, w9, w10
    a7b0:	tst	w9, #0xffff
    a7b4:	b.eq	a934 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2e8>  // b.none
    a7b8:	ldrh	w9, [x0]
    a7bc:	ldrb	w10, [x0, #2]
    a7c0:	mov	w11, #0x71                  	// #113
    a7c4:	eor	w8, w9, w8
    a7c8:	eor	w9, w10, w11
    a7cc:	orr	w8, w8, w9
    a7d0:	tst	w8, #0xffff
    a7d4:	b.eq	a954 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x308>  // b.none
    a7d8:	ldrh	w9, [x0]
    a7dc:	ldrb	w10, [x0, #2]
    a7e0:	mov	w8, #0x322e                	// #12846
    a7e4:	mov	w11, #0x68                  	// #104
    a7e8:	eor	w9, w9, w8
    a7ec:	eor	w10, w10, w11
    a7f0:	orr	w9, w9, w10
    a7f4:	tst	w9, #0xffff
    a7f8:	b.eq	a9c4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x378>  // b.none
    a7fc:	ldrh	w9, [x0]
    a800:	ldrb	w10, [x0, #2]
    a804:	mov	w11, #0x73                  	// #115
    a808:	eor	w8, w9, w8
    a80c:	eor	w9, w10, w11
    a810:	orr	w8, w8, w9
    a814:	tst	w8, #0xffff
    a818:	b.eq	a9dc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x390>  // b.none
    a81c:	ldrh	w8, [x0]
    a820:	ldrb	w9, [x0, #2]
    a824:	mov	w10, #0x322e                	// #12846
    a828:	mov	w11, #0x64                  	// #100
    a82c:	eor	w8, w8, w10
    a830:	eor	w9, w9, w11
    a834:	orr	w8, w8, w9
    a838:	tst	w8, #0xffff
    a83c:	b.eq	a9e8 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x39c>  // b.none
    a840:	ldrh	w9, [x0]
    a844:	ldrb	w10, [x0, #2]
    a848:	mov	w8, #0x342e                	// #13358
    a84c:	mov	w11, #0x62                  	// #98
    a850:	eor	w9, w9, w8
    a854:	eor	w10, w10, w11
    a858:	orr	w9, w9, w10
    a85c:	tst	w9, #0xffff
    a860:	b.eq	a9f4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3a8>  // b.none
    a864:	ldrh	w9, [x0]
    a868:	ldrb	w10, [x0, #2]
    a86c:	mov	w11, #0x68                  	// #104
    a870:	eor	w8, w9, w8
    a874:	eor	w9, w10, w11
    a878:	orr	w8, w8, w9
    a87c:	tst	w8, #0xffff
    a880:	b.eq	aa00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3b4>  // b.none
    a884:	ldrh	w8, [x0]
    a888:	ldrb	w9, [x0, #2]
    a88c:	mov	w10, #0x342e                	// #13358
    a890:	mov	w11, #0x73                  	// #115
    a894:	eor	w8, w8, w10
    a898:	eor	w9, w9, w11
    a89c:	orr	w8, w8, w9
    a8a0:	tst	w8, #0xffff
    a8a4:	b.eq	aa0c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c0>  // b.none
    a8a8:	ldrh	w9, [x0]
    a8ac:	ldrb	w10, [x0, #2]
    a8b0:	mov	w8, #0x382e                	// #14382
    a8b4:	mov	w11, #0x62                  	// #98
    a8b8:	eor	w9, w9, w8
    a8bc:	eor	w10, w10, w11
    a8c0:	orr	w9, w9, w10
    a8c4:	tst	w9, #0xffff
    a8c8:	b.eq	aa2c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3e0>  // b.none
    a8cc:	ldrh	w9, [x0]
    a8d0:	ldrb	w10, [x0, #2]
    a8d4:	mov	w11, #0x68                  	// #104
    a8d8:	eor	w8, w9, w8
    a8dc:	eor	w9, w10, w11
    a8e0:	orr	w8, w8, w9
    a8e4:	tst	w8, #0xffff
    a8e8:	b.ne	a90c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2c0>  // b.any
    a8ec:	mov	w8, #0x10                  	// #16
    a8f0:	mov	w9, #0x8                   	// #8
    a8f4:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a8f8:	ldr	w8, [x0]
    a8fc:	mov	w9, #0x312e                	// #12590
    a900:	movk	w9, #0x6236, lsl #16
    a904:	cmp	w8, w9
    a908:	b.eq	a940 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2f4>  // b.none
    a90c:	mov	w21, #0xffffffff            	// #-1
    a910:	mov	w22, #0xffffffff            	// #-1
    a914:	b	aa1c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3d0>
    a918:	mov	w21, #0x10                  	// #16
    a91c:	b	a970 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>
    a920:	mov	w21, #0x20                  	// #32
    a924:	b	a970 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>
    a928:	mov	w9, wzr
    a92c:	mov	w8, #0x8                   	// #8
    a930:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a934:	mov	w8, #0x40                  	// #64
    a938:	mov	w9, #0x1                   	// #1
    a93c:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a940:	mov	w8, #0x8                   	// #8
    a944:	mov	w9, #0x10                  	// #16
    a948:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a94c:	mov	w21, #0x40                  	// #64
    a950:	b	a970 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>
    a954:	mov	w8, #0x80                  	// #128
    a958:	mov	w9, #0x1                   	// #1
    a95c:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a960:	mov	w9, wzr
    a964:	mov	w8, #0x10                  	// #16
    a968:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a96c:	mov	w21, #0x80                  	// #128
    a970:	mov	w22, wzr
    a974:	mov	x8, sp
    a978:	add	x8, x8, #0x10
    a97c:	cmp	x0, x8
    a980:	b.eq	a988 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x33c>  // b.none
    a984:	bl	0 <_ZdlPv>
    a988:	and	w8, w21, w22
    a98c:	cmn	w8, #0x1
    a990:	b.eq	a9a4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x358>  // b.none
    a994:	bfi	x22, x21, #32, #32
    a998:	mov	w8, #0x1                   	// #1
    a99c:	str	x22, [x19]
    a9a0:	b	a9ac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x360>
    a9a4:	mov	w8, wzr
    a9a8:	strb	wzr, [x19]
    a9ac:	strb	w8, [x19, #8]
    a9b0:	ldp	x20, x19, [sp, #80]
    a9b4:	ldp	x22, x21, [sp, #64]
    a9b8:	ldp	x29, x30, [sp, #48]
    a9bc:	add	sp, sp, #0x60
    a9c0:	ret
    a9c4:	mov	w8, #0x10                  	// #16
    a9c8:	mov	w9, #0x2                   	// #2
    a9cc:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a9d0:	mov	w9, wzr
    a9d4:	mov	w8, #0x20                  	// #32
    a9d8:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a9dc:	mov	w8, #0x20                  	// #32
    a9e0:	mov	w9, #0x2                   	// #2
    a9e4:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a9e8:	mov	w8, #0x40                  	// #64
    a9ec:	mov	w9, #0x2                   	// #2
    a9f0:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    a9f4:	mov	w8, #0x8                   	// #8
    a9f8:	mov	w9, #0x4                   	// #4
    a9fc:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    aa00:	mov	w8, #0x10                  	// #16
    aa04:	mov	w9, #0x4                   	// #4
    aa08:	b	aa14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c8>
    aa0c:	mov	w8, #0x20                  	// #32
    aa10:	mov	w9, #0x4                   	// #4
    aa14:	mov	w21, w8
    aa18:	mov	w22, w9
    aa1c:	add	x8, x20, #0x10
    aa20:	cmp	x0, x8
    aa24:	b.ne	a984 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x338>  // b.any
    aa28:	b	a988 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x33c>
    aa2c:	mov	w9, #0x8                   	// #8
    aa30:	b	a92c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2e0>
    aa34:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    aa38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    aa3c:	add	x0, x0, #0x0
    aa40:	add	x1, x1, #0x0
    aa44:	mov	w2, #0x87d                 	// #2173
    aa48:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000aa4c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    aa4c:	sub	sp, sp, #0xf0
    aa50:	stp	x29, x30, [sp, #208]
    aa54:	stp	x20, x19, [sp, #224]
    aa58:	add	x29, sp, #0xd0
    aa5c:	ldr	x8, [x0, #8]
    aa60:	mov	x19, x1
    aa64:	tbnz	x8, #60, aba8 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x15c>
    aa68:	tbnz	x8, #61, abc8 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x17c>
    aa6c:	tbnz	x8, #62, abe8 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x19c>
    aa70:	tbnz	x8, #63, ac08 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1bc>
    aa74:	ldrb	w8, [x0, #16]
    aa78:	tbnz	w8, #0, ac28 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1dc>
    aa7c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    aa80:	add	x10, x10, #0x0
    aa84:	sub	x9, x29, #0x20
    aa88:	mov	w11, #0x7                   	// #7
    aa8c:	mov	x8, x10
    aa90:	ldr	x12, [x0, #16]
    aa94:	ldr	q0, [x0]
    aa98:	ldur	q1, [x8, #8]
    aa9c:	ldr	x13, [x8, #24]
    aaa0:	stur	x12, [x29, #-16]
    aaa4:	str	q0, [x9]
    aaa8:	ldr	q0, [x9]
    aaac:	and	x12, x12, x13
    aab0:	and	v0.16b, v0.16b, v1.16b
    aab4:	str	q0, [x9]
    aab8:	ldp	x14, x15, [x29, #-32]
    aabc:	orr	x13, x14, x15
    aac0:	orr	x12, x13, x12
    aac4:	cbnz	x12, ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    aac8:	ldr	x12, [x0, #16]
    aacc:	ldr	q0, [x0]
    aad0:	ldur	q1, [x8, #40]
    aad4:	ldr	x13, [x8, #56]
    aad8:	stur	x12, [x29, #-16]
    aadc:	str	q0, [x9]
    aae0:	ldr	q0, [x9]
    aae4:	and	x12, x12, x13
    aae8:	and	v0.16b, v0.16b, v1.16b
    aaec:	str	q0, [x9]
    aaf0:	ldp	x14, x15, [x29, #-32]
    aaf4:	orr	x13, x14, x15
    aaf8:	orr	x12, x13, x12
    aafc:	cbnz	x12, ac5c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x210>
    ab00:	ldr	x12, [x0, #16]
    ab04:	ldr	q0, [x0]
    ab08:	ldur	q1, [x8, #72]
    ab0c:	ldr	x13, [x8, #88]
    ab10:	stur	x12, [x29, #-16]
    ab14:	str	q0, [x9]
    ab18:	ldr	q0, [x9]
    ab1c:	and	x12, x12, x13
    ab20:	and	v0.16b, v0.16b, v1.16b
    ab24:	str	q0, [x9]
    ab28:	ldp	x14, x15, [x29, #-32]
    ab2c:	orr	x13, x14, x15
    ab30:	orr	x12, x13, x12
    ab34:	cbnz	x12, ac64 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x218>
    ab38:	ldr	x12, [x0, #16]
    ab3c:	ldr	q0, [x0]
    ab40:	ldur	q1, [x8, #104]
    ab44:	ldr	x13, [x8, #120]
    ab48:	stur	x12, [x29, #-16]
    ab4c:	str	q0, [x9]
    ab50:	ldr	q0, [x9]
    ab54:	and	x12, x12, x13
    ab58:	and	v0.16b, v0.16b, v1.16b
    ab5c:	str	q0, [x9]
    ab60:	ldp	x14, x15, [x29, #-32]
    ab64:	orr	x13, x14, x15
    ab68:	orr	x12, x13, x12
    ab6c:	cbnz	x12, ac6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x220>
    ab70:	sub	x11, x11, #0x1
    ab74:	cmp	x11, #0x1
    ab78:	add	x8, x8, #0x80
    ab7c:	b.hi	aa90 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44>  // b.pmore
    ab80:	sub	x10, x10, x8
    ab84:	add	x10, x10, #0x340
    ab88:	asr	x10, x10, #5
    ab8c:	cmp	x10, #0x1
    ab90:	b.eq	ad00 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2b4>  // b.none
    ab94:	cmp	x10, #0x3
    ab98:	b.eq	ac88 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x23c>  // b.none
    ab9c:	cmp	x10, #0x2
    aba0:	b.eq	acc4 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x278>  // b.none
    aba4:	b	ad38 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ec>
    aba8:	ldr	x8, [x19, #8]
    abac:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    abb0:	orr	x8, x8, #0x7
    abb4:	cmp	x8, x9
    abb8:	b.eq	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    abbc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    abc0:	add	x1, x1, #0x0
    abc4:	b	ac44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f8>
    abc8:	ldr	x8, [x19, #8]
    abcc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    abd0:	orr	x8, x8, #0x7
    abd4:	cmp	x8, x9
    abd8:	b.eq	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    abdc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    abe0:	add	x1, x1, #0x0
    abe4:	b	ac44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f8>
    abe8:	ldr	x8, [x19, #8]
    abec:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    abf0:	orr	x8, x8, #0x7
    abf4:	cmp	x8, x9
    abf8:	b.eq	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    abfc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ac00:	add	x1, x1, #0x0
    ac04:	b	ac44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f8>
    ac08:	ldr	x8, [x19, #8]
    ac0c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    ac10:	orr	x8, x8, #0x7
    ac14:	cmp	x8, x9
    ac18:	b.eq	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    ac1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ac20:	add	x1, x1, #0x0
    ac24:	b	ac44 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f8>
    ac28:	ldr	x8, [x19, #8]
    ac2c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    ac30:	orr	x8, x8, #0x7
    ac34:	cmp	x8, x9
    ac38:	b.eq	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    ac3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ac40:	add	x1, x1, #0x0
    ac44:	mov	w2, #0x8                   	// #8
    ac48:	mov	x0, x19
    ac4c:	ldp	x20, x19, [sp, #224]
    ac50:	ldp	x29, x30, [sp, #208]
    ac54:	add	sp, sp, #0xf0
    ac58:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    ac5c:	add	x8, x8, #0x20
    ac60:	b	ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    ac64:	add	x8, x8, #0x40
    ac68:	b	ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    ac6c:	add	x8, x8, #0x60
    ac70:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ac74:	add	x9, x9, #0x0
    ac78:	cmp	x8, x9
    ac7c:	b.eq	ad38 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ec>  // b.none
    ac80:	ldr	x20, [x8]
    ac84:	b	ad40 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2f4>
    ac88:	ldr	x10, [x0, #16]
    ac8c:	ldr	q0, [x0]
    ac90:	ldur	q1, [x8, #8]
    ac94:	ldr	x11, [x8, #24]
    ac98:	stur	x10, [x29, #-16]
    ac9c:	str	q0, [x9]
    aca0:	ldr	q0, [x9]
    aca4:	and	x10, x10, x11
    aca8:	and	v0.16b, v0.16b, v1.16b
    acac:	str	q0, [x9]
    acb0:	ldp	x12, x13, [x29, #-32]
    acb4:	orr	x11, x12, x13
    acb8:	orr	x10, x11, x10
    acbc:	cbnz	x10, ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    acc0:	add	x8, x8, #0x20
    acc4:	ldr	x10, [x0, #16]
    acc8:	ldr	q0, [x0]
    accc:	ldur	q1, [x8, #8]
    acd0:	ldr	x11, [x8, #24]
    acd4:	stur	x10, [x29, #-16]
    acd8:	str	q0, [x9]
    acdc:	ldr	q0, [x9]
    ace0:	and	x10, x10, x11
    ace4:	and	v0.16b, v0.16b, v1.16b
    ace8:	str	q0, [x9]
    acec:	ldp	x12, x13, [x29, #-32]
    acf0:	orr	x11, x12, x13
    acf4:	orr	x10, x11, x10
    acf8:	cbnz	x10, ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    acfc:	add	x8, x8, #0x20
    ad00:	ldr	x10, [x0, #16]
    ad04:	ldr	q0, [x0]
    ad08:	ldur	q1, [x8, #8]
    ad0c:	ldr	x11, [x8, #24]
    ad10:	stur	x10, [x29, #-16]
    ad14:	str	q0, [x9]
    ad18:	ldr	q0, [x9]
    ad1c:	and	x10, x10, x11
    ad20:	and	v0.16b, v0.16b, v1.16b
    ad24:	str	q0, [x9]
    ad28:	ldp	x9, x12, [x29, #-32]
    ad2c:	orr	x9, x9, x12
    ad30:	orr	x9, x9, x10
    ad34:	cbnz	x9, ac70 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    ad38:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    ad3c:	add	x20, x20, #0x0
    ad40:	mov	x0, x20
    ad44:	bl	0 <strlen>
    ad48:	ldr	x8, [x19, #8]
    ad4c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    ad50:	sub	x8, x9, x8
    ad54:	cmp	x8, x0
    ad58:	b.cc	ad6c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.lo, b.ul, b.last
    ad5c:	mov	x2, x0
    ad60:	mov	x0, x19
    ad64:	mov	x1, x20
    ad68:	b	ac4c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x200>
    ad6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ad70:	add	x0, x0, #0x0
    ad74:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000ad78 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>:
    ad78:	stp	x29, x30, [sp, #-96]!
    ad7c:	stp	x28, x27, [sp, #16]
    ad80:	stp	x26, x25, [sp, #32]
    ad84:	stp	x24, x23, [sp, #48]
    ad88:	stp	x22, x21, [sp, #64]
    ad8c:	stp	x20, x19, [sp, #80]
    ad90:	mov	x29, sp
    ad94:	mov	x21, x0
    ad98:	ldr	x0, [x0, #8]
    ad9c:	and	w28, w1, #0xffff
    ada0:	mov	x20, x3
    ada4:	mov	x19, x2
    ada8:	ldr	x8, [x0]
    adac:	mov	w22, w1
    adb0:	ubfx	w23, w28, #11, #3
    adb4:	ldr	x8, [x8, #48]
    adb8:	blr	x8
    adbc:	mov	x1, x0
    adc0:	mov	x0, x23
    adc4:	mov	w2, wzr
    adc8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    adcc:	ldr	x8, [x21, #8]
    add0:	mov	x24, x0
    add4:	mov	x0, x8
    add8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    addc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ade0:	ldr	x8, [x21, #8]
    ade4:	mov	x25, x0
    ade8:	ldr	x9, [x8]
    adec:	mov	x0, x8
    adf0:	ldr	x9, [x9, #48]
    adf4:	blr	x9
    adf8:	mov	x26, x0
    adfc:	mov	w0, #0x70                  	// #112
    ae00:	bl	0 <_Znwm>
    ae04:	mov	x8, x0
    ae08:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    ae0c:	add	x27, x27, #0x0
    ae10:	strb	wzr, [x8, #32]!
    ae14:	str	x27, [x0]
    ae18:	str	wzr, [x0, #48]
    ae1c:	str	x26, [x0, #104]
    ae20:	stp	x25, x24, [x0, #64]
    ae24:	str	x20, [x0, #56]
    ae28:	stp	x8, xzr, [x0, #16]
    ae2c:	ldp	w8, w9, [x19, #8]
    ae30:	mov	x23, x0
    ae34:	cmp	w8, w9
    ae38:	b.cs	b014 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x29c>  // b.hs, b.nlast
    ae3c:	ldr	x10, [x19]
    ae40:	cmp	w8, w9
    ae44:	str	x23, [x10, w8, uxtw #3]
    ae48:	b.cs	b064 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2ec>  // b.hs, b.nlast
    ae4c:	add	w8, w8, #0x1
    ae50:	str	w8, [x19, #8]
    ae54:	ldr	x0, [x21, #8]
    ae58:	ubfx	w26, w28, #7, #4
    ae5c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ae60:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ae64:	ldr	x8, [x21, #8]
    ae68:	mov	x24, x0
    ae6c:	ldr	x9, [x8]
    ae70:	mov	x0, x8
    ae74:	ldr	x9, [x9, #48]
    ae78:	blr	x9
    ae7c:	mov	x25, x0
    ae80:	mov	w0, #0x70                  	// #112
    ae84:	bl	0 <_Znwm>
    ae88:	mov	x8, x0
    ae8c:	mov	w9, #0x8                   	// #8
    ae90:	strb	wzr, [x8, #32]!
    ae94:	str	x27, [x0]
    ae98:	str	w9, [x0, #48]
    ae9c:	str	x25, [x0, #104]
    aea0:	str	w26, [x0, #72]
    aea4:	stp	x20, x24, [x0, #56]
    aea8:	stp	x8, xzr, [x0, #16]
    aeac:	ldp	w8, w9, [x19, #8]
    aeb0:	mov	x23, x0
    aeb4:	cmp	w8, w9
    aeb8:	b.cs	b028 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2b0>  // b.hs, b.nlast
    aebc:	ldr	x10, [x19]
    aec0:	cmp	w8, w9
    aec4:	str	x23, [x10, w8, uxtw #3]
    aec8:	b.cs	b064 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2ec>  // b.hs, b.nlast
    aecc:	add	w8, w8, #0x1
    aed0:	str	w8, [x19, #8]
    aed4:	ldr	x0, [x21, #8]
    aed8:	ubfx	w26, w28, #3, #4
    aedc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    aee0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    aee4:	ldr	x8, [x21, #8]
    aee8:	mov	x24, x0
    aeec:	ldr	x9, [x8]
    aef0:	mov	x0, x8
    aef4:	ldr	x9, [x9, #48]
    aef8:	blr	x9
    aefc:	mov	x25, x0
    af00:	mov	w0, #0x70                  	// #112
    af04:	bl	0 <_Znwm>
    af08:	mov	x8, x0
    af0c:	mov	w9, #0x8                   	// #8
    af10:	strb	wzr, [x8, #32]!
    af14:	str	x27, [x0]
    af18:	str	w9, [x0, #48]
    af1c:	str	x25, [x0, #104]
    af20:	str	w26, [x0, #72]
    af24:	stp	x20, x24, [x0, #56]
    af28:	stp	x8, xzr, [x0, #16]
    af2c:	ldp	w8, w9, [x19, #8]
    af30:	mov	x23, x0
    af34:	cmp	w8, w9
    af38:	b.cs	b03c <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2c4>  // b.hs, b.nlast
    af3c:	ldr	x10, [x19]
    af40:	cmp	w8, w9
    af44:	str	x23, [x10, w8, uxtw #3]
    af48:	b.cs	b064 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2ec>  // b.hs, b.nlast
    af4c:	add	w8, w8, #0x1
    af50:	str	w8, [x19, #8]
    af54:	ldr	x0, [x21, #8]
    af58:	and	w22, w22, #0x7
    af5c:	ldr	x8, [x0]
    af60:	ldr	x8, [x8, #48]
    af64:	blr	x8
    af68:	mov	x1, x0
    af6c:	mov	x0, x22
    af70:	mov	w2, wzr
    af74:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    af78:	ldr	x8, [x21, #8]
    af7c:	mov	x22, x0
    af80:	mov	x0, x8
    af84:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    af88:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    af8c:	ldr	x8, [x21, #8]
    af90:	mov	x23, x0
    af94:	ldr	x9, [x8]
    af98:	mov	x0, x8
    af9c:	ldr	x9, [x9, #48]
    afa0:	blr	x9
    afa4:	mov	x24, x0
    afa8:	mov	w0, #0x70                  	// #112
    afac:	bl	0 <_Znwm>
    afb0:	mov	x8, x0
    afb4:	strb	wzr, [x8, #32]!
    afb8:	str	x27, [x0]
    afbc:	str	wzr, [x0, #48]
    afc0:	str	x24, [x0, #104]
    afc4:	stp	x23, x22, [x0, #64]
    afc8:	str	x20, [x0, #56]
    afcc:	stp	x8, xzr, [x0, #16]
    afd0:	ldp	w8, w9, [x19, #8]
    afd4:	mov	x21, x0
    afd8:	cmp	w8, w9
    afdc:	b.cs	b050 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2d8>  // b.hs, b.nlast
    afe0:	ldr	x10, [x19]
    afe4:	cmp	w8, w9
    afe8:	str	x21, [x10, w8, uxtw #3]
    afec:	b.cs	b064 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2ec>  // b.hs, b.nlast
    aff0:	add	w8, w8, #0x1
    aff4:	str	w8, [x19, #8]
    aff8:	ldp	x20, x19, [sp, #80]
    affc:	ldp	x22, x21, [sp, #64]
    b000:	ldp	x24, x23, [sp, #48]
    b004:	ldp	x26, x25, [sp, #32]
    b008:	ldp	x28, x27, [sp, #16]
    b00c:	ldp	x29, x30, [sp], #96
    b010:	ret
    b014:	mov	x0, x19
    b018:	mov	x1, xzr
    b01c:	bl	0 <LLVMInitializeAArch64AsmParser>
    b020:	ldp	w8, w9, [x19, #8]
    b024:	b	ae3c <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0xc4>
    b028:	mov	x0, x19
    b02c:	mov	x1, xzr
    b030:	bl	0 <LLVMInitializeAArch64AsmParser>
    b034:	ldp	w8, w9, [x19, #8]
    b038:	b	aebc <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x144>
    b03c:	mov	x0, x19
    b040:	mov	x1, xzr
    b044:	bl	0 <LLVMInitializeAArch64AsmParser>
    b048:	ldp	w8, w9, [x19, #8]
    b04c:	b	af3c <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x1c4>
    b050:	mov	x0, x19
    b054:	mov	x1, xzr
    b058:	bl	0 <LLVMInitializeAArch64AsmParser>
    b05c:	ldp	w8, w9, [x19, #8]
    b060:	b	afe0 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x268>
    b064:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b068:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b06c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b070:	add	x0, x0, #0x0
    b074:	add	x1, x1, #0x0
    b078:	add	x3, x3, #0x0
    b07c:	mov	w2, #0x43                  	// #67
    b080:	bl	0 <__assert_fail>

000000000000b084 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    b084:	sub	sp, sp, #0x80
    b088:	stp	x29, x30, [sp, #32]
    b08c:	stp	x28, x27, [sp, #48]
    b090:	stp	x26, x25, [sp, #64]
    b094:	stp	x24, x23, [sp, #80]
    b098:	stp	x22, x21, [sp, #96]
    b09c:	stp	x20, x19, [sp, #112]
    b0a0:	add	x29, sp, #0x20
    b0a4:	mov	x20, x0
    b0a8:	ldr	x0, [x0, #8]
    b0ac:	mov	x19, x1
    b0b0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b0b4:	ldr	w8, [x0]
    b0b8:	cmp	w8, #0x2
    b0bc:	b.ne	b0ec <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.any
    b0c0:	ldr	x0, [x20, #8]
    b0c4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b0c8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b0cc:	mov	x21, x0
    b0d0:	add	x1, sp, #0xc
    b0d4:	add	x2, sp, #0x10
    b0d8:	mov	w3, #0x1                   	// #1
    b0dc:	mov	x0, x20
    b0e0:	stp	xzr, xzr, [sp, #16]
    b0e4:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    b0e8:	cbz	w0, b1cc <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x148>
    b0ec:	ldr	x0, [x20, #8]
    b0f0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b0f4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b0f8:	mov	x22, x0
    b0fc:	add	x1, sp, #0x10
    b100:	mov	x0, x20
    b104:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    b108:	mov	w21, w0
    b10c:	cbnz	w0, b1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    b110:	ldr	x0, [x20, #8]
    b114:	ldr	w25, [sp, #16]
    b118:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b11c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b120:	ldr	x8, [x20, #8]
    b124:	mov	x23, x0
    b128:	ldr	x9, [x8]
    b12c:	mov	x0, x8
    b130:	ldr	x9, [x9, #48]
    b134:	blr	x9
    b138:	mov	x24, x0
    b13c:	mov	w0, #0x70                  	// #112
    b140:	bl	0 <_Znwm>
    b144:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b148:	mov	x8, x0
    b14c:	add	x9, x9, #0x0
    b150:	strb	wzr, [x8, #32]!
    b154:	str	x9, [x0]
    b158:	mov	w9, #0x3                   	// #3
    b15c:	str	w9, [x0, #48]
    b160:	str	x24, [x0, #104]
    b164:	str	w25, [x0, #72]
    b168:	stur	xzr, [x0, #89]
    b16c:	stur	xzr, [x0, #84]
    b170:	stur	xzr, [x0, #76]
    b174:	stp	x22, x23, [x0, #56]
    b178:	stp	x8, xzr, [x0, #16]
    b17c:	ldp	w8, w9, [x19, #8]
    b180:	mov	x20, x0
    b184:	cmp	w8, w9
    b188:	b.cs	b314 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x290>  // b.hs, b.nlast
    b18c:	ldr	x10, [x19]
    b190:	cmp	w8, w9
    b194:	str	x20, [x10, w8, uxtw #3]
    b198:	b.cs	b368 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2e4>  // b.hs, b.nlast
    b19c:	add	w8, w8, #0x1
    b1a0:	str	w8, [x19, #8]
    b1a4:	cmp	w21, #0x0
    b1a8:	cset	w0, ne  // ne = any
    b1ac:	ldp	x20, x19, [sp, #112]
    b1b0:	ldp	x22, x21, [sp, #96]
    b1b4:	ldp	x24, x23, [sp, #80]
    b1b8:	ldp	x26, x25, [sp, #64]
    b1bc:	ldp	x28, x27, [sp, #48]
    b1c0:	ldp	x29, x30, [sp, #32]
    b1c4:	add	sp, sp, #0x80
    b1c8:	ret
    b1cc:	ldp	x23, x22, [sp, #16]
    b1d0:	mov	x8, sp
    b1d4:	mov	w2, #0x1                   	// #1
    b1d8:	mov	w27, #0x1                   	// #1
    b1dc:	mov	x0, x23
    b1e0:	mov	x1, x22
    b1e4:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    b1e8:	ldrb	w8, [sp, #8]
    b1ec:	cbz	w8, b0ec <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>
    b1f0:	ldr	x0, [x20, #8]
    b1f4:	ldr	w28, [sp, #4]
    b1f8:	ldr	w26, [sp, #12]
    b1fc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b200:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b204:	ldr	x8, [x20, #8]
    b208:	mov	x24, x0
    b20c:	ldr	x9, [x8]
    b210:	mov	x0, x8
    b214:	ldr	x9, [x9, #48]
    b218:	blr	x9
    b21c:	mov	x25, x0
    b220:	mov	w0, #0x70                  	// #112
    b224:	bl	0 <_Znwm>
    b228:	mov	x8, x0
    b22c:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    b230:	mov	w9, #0x3                   	// #3
    b234:	strb	wzr, [x8, #32]!
    b238:	add	x11, x11, #0x0
    b23c:	str	w9, [x0, #48]
    b240:	str	x11, [x0]
    b244:	str	x25, [x0, #104]
    b248:	stp	w26, w27, [x0, #72]
    b24c:	stur	xzr, [x0, #89]
    b250:	stur	xzr, [x0, #84]
    b254:	stp	x21, x24, [x0, #56]
    b258:	str	w28, [x0, #80]
    b25c:	stp	x8, xzr, [x0, #16]
    b260:	ldp	w8, w9, [x19, #8]
    b264:	cmp	w8, w9
    b268:	b.cs	b328 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a4>  // b.hs, b.nlast
    b26c:	ldr	x10, [x19]
    b270:	cmp	w8, w9
    b274:	str	x0, [x10, w8, uxtw #3]
    b278:	b.cs	b368 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2e4>  // b.hs, b.nlast
    b27c:	add	w8, w8, #0x1
    b280:	str	w8, [x19, #8]
    b284:	cbz	x22, b2f8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x274>
    b288:	ldr	x0, [x20, #8]
    b28c:	mov	x25, x11
    b290:	ldr	x8, [x0]
    b294:	ldr	x8, [x8, #48]
    b298:	blr	x8
    b29c:	mov	x24, x0
    b2a0:	mov	w0, #0x70                  	// #112
    b2a4:	bl	0 <_Znwm>
    b2a8:	mov	x8, x0
    b2ac:	strb	wzr, [x8, #32]!
    b2b0:	mov	w9, #0x6                   	// #6
    b2b4:	str	x25, [x0]
    b2b8:	str	w9, [x0, #48]
    b2bc:	str	x24, [x0, #104]
    b2c0:	stp	x21, x23, [x0, #64]
    b2c4:	str	w22, [x0, #80]
    b2c8:	strb	wzr, [x0, #84]
    b2cc:	str	x21, [x0, #56]
    b2d0:	stp	x8, xzr, [x0, #16]
    b2d4:	ldp	w8, w9, [x19, #8]
    b2d8:	cmp	w8, w9
    b2dc:	b.cs	b34c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2c8>  // b.hs, b.nlast
    b2e0:	ldr	x10, [x19]
    b2e4:	cmp	w8, w9
    b2e8:	str	x0, [x10, w8, uxtw #3]
    b2ec:	b.cs	b368 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2e4>  // b.hs, b.nlast
    b2f0:	add	w8, w8, #0x1
    b2f4:	str	w8, [x19, #8]
    b2f8:	mov	x0, x20
    b2fc:	mov	x1, x19
    b300:	bl	c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    b304:	cmp	w0, #0x2
    b308:	b.eq	b0ec <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.none
    b30c:	mov	w0, wzr
    b310:	b	b1ac <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x128>
    b314:	mov	x0, x19
    b318:	mov	x1, xzr
    b31c:	bl	0 <LLVMInitializeAArch64AsmParser>
    b320:	ldp	w8, w9, [x19, #8]
    b324:	b	b18c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>
    b328:	mov	x24, x0
    b32c:	mov	x0, x19
    b330:	mov	x1, xzr
    b334:	mov	x25, x11
    b338:	bl	0 <LLVMInitializeAArch64AsmParser>
    b33c:	ldp	w8, w9, [x19, #8]
    b340:	mov	x11, x25
    b344:	mov	x0, x24
    b348:	b	b26c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e8>
    b34c:	mov	x21, x0
    b350:	mov	x0, x19
    b354:	mov	x1, xzr
    b358:	bl	0 <LLVMInitializeAArch64AsmParser>
    b35c:	ldp	w8, w9, [x19, #8]
    b360:	mov	x0, x21
    b364:	b	b2e0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x25c>
    b368:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b36c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b370:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b374:	add	x0, x0, #0x0
    b378:	add	x1, x1, #0x0
    b37c:	add	x3, x3, #0x0
    b380:	mov	w2, #0x43                  	// #67
    b384:	bl	0 <__assert_fail>

000000000000b388 <_ZN12_GLOBAL__N_114AArch64OperandD0Ev>:
    b388:	stp	x29, x30, [sp, #-32]!
    b38c:	str	x19, [sp, #16]
    b390:	mov	x29, sp
    b394:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    b398:	mov	x19, x0
    b39c:	ldr	x0, [x0, #16]
    b3a0:	ldr	x8, [x8]
    b3a4:	add	x9, x19, #0x20
    b3a8:	cmp	x0, x9
    b3ac:	add	x8, x8, #0x10
    b3b0:	str	x8, [x19]
    b3b4:	b.eq	b3bc <_ZN12_GLOBAL__N_114AArch64OperandD0Ev+0x34>  // b.none
    b3b8:	bl	0 <_ZdlPv>
    b3bc:	mov	x0, x19
    b3c0:	ldr	x19, [sp, #16]
    b3c4:	ldp	x29, x30, [sp], #32
    b3c8:	b	0 <_ZdlPv>

000000000000b3cc <_ZNK12_GLOBAL__N_114AArch64Operand7isTokenEv>:
    b3cc:	ldr	w8, [x0, #48]
    b3d0:	cmp	w8, #0x6
    b3d4:	cset	w0, eq  // eq = none
    b3d8:	ret

000000000000b3dc <_ZNK12_GLOBAL__N_114AArch64Operand5isImmEv>:
    b3dc:	ldr	w8, [x0, #48]
    b3e0:	cmp	w8, #0x0
    b3e4:	cset	w0, eq  // eq = none
    b3e8:	ret

000000000000b3ec <_ZNK12_GLOBAL__N_114AArch64Operand5isRegEv>:
    b3ec:	ldr	w8, [x0, #48]
    b3f0:	cmp	w8, #0x3
    b3f4:	cset	w0, eq  // eq = none
    b3f8:	ret

000000000000b3fc <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv>:
    b3fc:	stp	x29, x30, [sp, #-16]!
    b400:	mov	x29, sp
    b404:	ldr	w8, [x0, #48]
    b408:	cmp	w8, #0x3
    b40c:	b.ne	b41c <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv+0x20>  // b.any
    b410:	ldr	w0, [x0, #72]
    b414:	ldp	x29, x30, [sp], #16
    b418:	ret
    b41c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b420:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b424:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b428:	add	x0, x0, #0x0
    b42c:	add	x1, x1, #0x0
    b430:	add	x3, x3, #0x0
    b434:	mov	w2, #0x21c                 	// #540
    b438:	bl	0 <__assert_fail>

000000000000b43c <_ZNK12_GLOBAL__N_114AArch64Operand5isMemEv>:
    b43c:	mov	w0, wzr
    b440:	ret

000000000000b444 <_ZNK12_GLOBAL__N_114AArch64Operand11getStartLocEv>:
    b444:	ldr	x0, [x0, #56]
    b448:	ret

000000000000b44c <_ZNK12_GLOBAL__N_114AArch64Operand9getEndLocEv>:
    b44c:	ldr	x0, [x0, #64]
    b450:	ret

000000000000b454 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE>:
    b454:	sub	sp, sp, #0x70
    b458:	stp	x29, x30, [sp, #48]
    b45c:	stp	x24, x23, [sp, #64]
    b460:	stp	x22, x21, [sp, #80]
    b464:	stp	x20, x19, [sp, #96]
    b468:	add	x29, sp, #0x30
    b46c:	ldr	w8, [x0, #48]
    b470:	cmp	w8, #0xe
    b474:	b.hi	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>  // b.pmore
    b478:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b47c:	add	x9, x9, #0x0
    b480:	adr	x10, b498 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x44>
    b484:	ldrb	w11, [x9, x8]
    b488:	add	x10, x10, x11, lsl #2
    b48c:	mov	x20, x0
    b490:	mov	x19, x1
    b494:	br	x10
    b498:	ldp	x8, x0, [x19, #16]
    b49c:	ldr	w21, [x20, #80]
    b4a0:	ldr	x1, [x20, #72]
    b4a4:	sub	x8, x8, x0
    b4a8:	cmp	x8, x21
    b4ac:	b.cs	b4e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x94>  // b.hs, b.nlast
    b4b0:	mov	x0, x19
    b4b4:	mov	x2, x21
    b4b8:	b	bf5c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb08>
    b4bc:	ldp	x9, x8, [x19, #16]
    b4c0:	sub	x9, x9, x8
    b4c4:	cmp	x9, #0x6
    b4c8:	b.hi	b70c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x2b8>  // b.pmore
    b4cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b4d0:	add	x1, x1, #0x0
    b4d4:	mov	w2, #0x7                   	// #7
    b4d8:	mov	x0, x19
    b4dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b4e0:	mov	x21, x0
    b4e4:	b	b734 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x2e0>
    b4e8:	cbz	w21, bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    b4ec:	mov	x2, x21
    b4f0:	bl	0 <memcpy>
    b4f4:	ldr	x8, [x19, #24]
    b4f8:	add	x8, x8, x21
    b4fc:	b	bfe4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb90>
    b500:	ldp	x9, x8, [x19, #16]
    b504:	sub	x9, x9, x8
    b508:	cmp	x9, #0xb
    b50c:	b.hi	b784 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x330>  // b.pmore
    b510:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b514:	add	x1, x1, #0x0
    b518:	mov	w2, #0xc                   	// #12
    b51c:	mov	x0, x19
    b520:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b524:	b	b7ac <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x358>
    b528:	ldp	x9, x8, [x19, #16]
    b52c:	ldr	w21, [x20, #80]
    b530:	sub	x9, x9, x8
    b534:	cbz	w21, bdcc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x978>
    b538:	ldr	x20, [x20, #72]
    b53c:	cmp	x9, #0x8
    b540:	b.hi	be14 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x9c0>  // b.pmore
    b544:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b548:	add	x1, x1, #0x0
    b54c:	mov	w2, #0x9                   	// #9
    b550:	b	b57c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x128>
    b554:	ldp	x9, x8, [x19, #16]
    b558:	ldr	w21, [x20, #80]
    b55c:	sub	x9, x9, x8
    b560:	cbz	w21, bdf0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x99c>
    b564:	ldr	x20, [x20, #72]
    b568:	cmp	x9, #0x6
    b56c:	b.hi	be38 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x9e4>  // b.pmore
    b570:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b574:	add	x1, x1, #0x0
    b578:	mov	w2, #0x7                   	// #7
    b57c:	mov	x0, x19
    b580:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b584:	mov	x19, x0
    b588:	ldr	x0, [x0, #24]
    b58c:	b	be5c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa08>
    b590:	ldp	x9, x8, [x19, #16]
    b594:	sub	x9, x9, x8
    b598:	cmp	x9, #0x9
    b59c:	b.hi	b828 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3d4>  // b.pmore
    b5a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b5a4:	add	x1, x1, #0x0
    b5a8:	mov	w2, #0xa                   	// #10
    b5ac:	mov	x0, x19
    b5b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b5b4:	mov	x19, x0
    b5b8:	b	b84c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3f8>
    b5bc:	ldp	x9, x8, [x19, #16]
    b5c0:	sub	x9, x9, x8
    b5c4:	cmp	x9, #0x9
    b5c8:	b.hi	b868 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x414>  // b.pmore
    b5cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b5d0:	add	x1, x1, #0x0
    b5d4:	mov	w2, #0xa                   	// #10
    b5d8:	mov	x0, x19
    b5dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b5e0:	mov	x19, x0
    b5e4:	b	b88c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x438>
    b5e8:	ldp	x9, x8, [x19, #16]
    b5ec:	sub	x9, x9, x8
    b5f0:	cmp	x9, #0x8
    b5f4:	b.hi	b8f8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4a4>  // b.pmore
    b5f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b5fc:	add	x1, x1, #0x0
    b600:	mov	w2, #0x9                   	// #9
    b604:	mov	x0, x19
    b608:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b60c:	mov	x19, x0
    b610:	b	b91c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4c8>
    b614:	ldr	x0, [x20, #72]
    b618:	mov	x1, x19
    b61c:	ldp	x20, x19, [sp, #96]
    b620:	ldp	x22, x21, [sp, #80]
    b624:	ldp	x24, x23, [sp, #64]
    b628:	ldp	x29, x30, [sp, #48]
    b62c:	mov	x2, xzr
    b630:	mov	w3, wzr
    b634:	add	sp, sp, #0x70
    b638:	b	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    b63c:	ldp	x9, x8, [x19, #16]
    b640:	ldr	w21, [x20, #80]
    b644:	sub	x9, x9, x8
    b648:	cmp	x9, #0xb
    b64c:	b.hi	b958 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x504>  // b.pmore
    b650:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b654:	add	x1, x1, #0x0
    b658:	mov	w2, #0xc                   	// #12
    b65c:	mov	x0, x19
    b660:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b664:	b	b980 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x52c>
    b668:	ldp	x9, x8, [x19, #16]
    b66c:	sub	x9, x9, x8
    b670:	cmp	x9, #0xc
    b674:	b.hi	ba34 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5e0>  // b.pmore
    b678:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b67c:	add	x1, x1, #0x0
    b680:	mov	w2, #0xd                   	// #13
    b684:	mov	x0, x19
    b688:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b68c:	mov	x19, x0
    b690:	b	ba58 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x604>
    b694:	ldp	x9, x8, [x19, #16]
    b698:	cmp	x9, x8
    b69c:	b.ne	ba90 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x63c>  // b.any
    b6a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b6a4:	add	x1, x1, #0x0
    b6a8:	mov	w2, #0x1                   	// #1
    b6ac:	mov	x0, x19
    b6b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b6b4:	mov	x19, x0
    b6b8:	b	baa4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x650>
    b6bc:	ldp	x9, x8, [x19, #16]
    b6c0:	cmp	x9, x8
    b6c4:	b.ne	bae0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x68c>  // b.any
    b6c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b6cc:	add	x1, x1, #0x0
    b6d0:	mov	w2, #0x1                   	// #1
    b6d4:	mov	x0, x19
    b6d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b6dc:	mov	x19, x0
    b6e0:	b	baf4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6a0>
    b6e4:	ldp	x9, x8, [x19, #16]
    b6e8:	cmp	x9, x8
    b6ec:	b.ne	bb20 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6cc>  // b.any
    b6f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b6f4:	add	x1, x1, #0x0
    b6f8:	mov	w2, #0x1                   	// #1
    b6fc:	mov	x0, x19
    b700:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b704:	mov	x21, x0
    b708:	b	bb38 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6e4>
    b70c:	mov	w9, #0x6d69                	// #28009
    b710:	mov	w10, #0x663c                	// #26172
    b714:	movk	w9, #0x206d, lsl #16
    b718:	movk	w10, #0x6970, lsl #16
    b71c:	stur	w9, [x8, #3]
    b720:	str	w10, [x8]
    b724:	ldr	x8, [x19, #24]
    b728:	mov	x21, x19
    b72c:	add	x8, x8, #0x7
    b730:	str	x8, [x19, #24]
    b734:	ldr	w8, [x20, #48]
    b738:	cmp	w8, #0xb
    b73c:	b.ne	c090 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc3c>  // b.any
    b740:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    b744:	ldr	x8, [x20, #72]
    b748:	mov	w9, #0x40                  	// #64
    b74c:	mov	x10, sp
    b750:	mov	x24, x0
    b754:	stur	w9, [x29, #-8]
    b758:	stur	x8, [x29, #-16]
    b75c:	add	x22, x10, #0x8
    b760:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    b764:	mov	x23, x0
    b768:	sub	x2, x29, #0x10
    b76c:	cmp	x0, x24
    b770:	b.eq	bce8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x894>  // b.none
    b774:	mov	x0, x22
    b778:	mov	x1, x24
    b77c:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
    b780:	b	bcf4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8a0>
    b784:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b788:	add	x9, x9, #0x0
    b78c:	ldr	x9, [x9]
    b790:	mov	w10, #0x7369                	// #29545
    b794:	movk	w10, #0x2074, lsl #16
    b798:	str	w10, [x8, #8]
    b79c:	str	x9, [x8]
    b7a0:	ldr	x8, [x19, #24]
    b7a4:	add	x8, x8, #0xc
    b7a8:	str	x8, [x19, #24]
    b7ac:	ldr	w8, [x20, #48]
    b7b0:	cmp	w8, #0x4
    b7b4:	b.ne	c0b0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc5c>  // b.any
    b7b8:	ldr	w21, [x20, #76]
    b7bc:	cbz	w21, b818 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3c4>
    b7c0:	ldr	w22, [x20, #72]
    b7c4:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    b7c8:	add	x20, x20, #0x0
    b7cc:	mov	w23, #0x20                  	// #32
    b7d0:	b	b7f0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x39c>
    b7d4:	strb	w23, [x8]
    b7d8:	ldr	x8, [x0, #24]
    b7dc:	add	x8, x8, #0x1
    b7e0:	str	x8, [x0, #24]
    b7e4:	subs	x21, x21, #0x1
    b7e8:	add	w22, w22, #0x1
    b7ec:	b.eq	b818 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3c4>  // b.none
    b7f0:	mov	w1, w22
    b7f4:	mov	x0, x19
    b7f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    b7fc:	ldp	x9, x8, [x0, #16]
    b800:	cmp	x9, x8
    b804:	b.ne	b7d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x380>  // b.any
    b808:	mov	w2, #0x1                   	// #1
    b80c:	mov	x1, x20
    b810:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b814:	b	b7e4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x390>
    b818:	ldp	x9, x8, [x19, #16]
    b81c:	cmp	x9, x8
    b820:	b.eq	beac <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa58>  // b.none
    b824:	b	bfd4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb80>
    b828:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b82c:	add	x9, x9, #0x0
    b830:	ldr	x9, [x9]
    b834:	mov	w10, #0x2065                	// #8293
    b838:	strh	w10, [x8, #8]
    b83c:	str	x9, [x8]
    b840:	ldr	x8, [x19, #24]
    b844:	add	x8, x8, #0xa
    b848:	str	x8, [x19, #24]
    b84c:	ldr	w8, [x20, #48]
    b850:	cmp	w8, #0x2
    b854:	b.ne	c0d0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc7c>  // b.any
    b858:	ldrsw	x1, [x20, #72]
    b85c:	mov	x0, x19
    b860:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    b864:	b	bf44 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xaf0>
    b868:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b86c:	add	x9, x9, #0x0
    b870:	ldr	x9, [x9]
    b874:	mov	w10, #0x2072                	// #8306
    b878:	strh	w10, [x8, #8]
    b87c:	str	x9, [x8]
    b880:	ldr	x8, [x19, #24]
    b884:	add	x8, x8, #0xa
    b888:	str	x8, [x19, #24]
    b88c:	ldr	x8, [x20]
    b890:	mov	x0, x20
    b894:	ldr	x8, [x8, #56]
    b898:	blr	x8
    b89c:	mov	w1, w0
    b8a0:	mov	x0, x19
    b8a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    b8a8:	ldp	x9, x8, [x0, #16]
    b8ac:	cmp	x9, x8
    b8b0:	b.ne	b8c8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x474>  // b.any
    b8b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b8b8:	add	x1, x1, #0x0
    b8bc:	mov	w2, #0x1                   	// #1
    b8c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b8c4:	b	b8dc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x488>
    b8c8:	mov	w9, #0x3e                  	// #62
    b8cc:	strb	w9, [x8]
    b8d0:	ldr	x8, [x0, #24]
    b8d4:	add	x8, x8, #0x1
    b8d8:	str	x8, [x0, #24]
    b8dc:	ldr	w8, [x20, #48]
    b8e0:	cmp	w8, #0x3
    b8e4:	b.eq	ba6c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x618>  // b.none
    b8e8:	cmp	w8, #0xa
    b8ec:	b.ne	c060 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc0c>  // b.any
    b8f0:	add	x9, x20, #0x4c
    b8f4:	b	ba70 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x61c>
    b8f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b8fc:	add	x9, x9, #0x0
    b900:	ldr	x9, [x9]
    b904:	mov	w10, #0x20                  	// #32
    b908:	strb	w10, [x8, #8]
    b90c:	str	x9, [x8]
    b910:	ldr	x8, [x19, #24]
    b914:	add	x8, x8, #0x9
    b918:	str	x8, [x19, #24]
    b91c:	ldr	w8, [x20, #48]
    b920:	cmp	w8, #0x7
    b924:	b.ne	c0f0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc9c>  // b.any
    b928:	ldp	x8, x0, [x19, #16]
    b92c:	ldr	w21, [x20, #80]
    b930:	ldr	x1, [x20, #72]
    b934:	sub	x8, x8, x0
    b938:	cmp	x8, x21
    b93c:	b.cs	b9d0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x57c>  // b.hs, b.nlast
    b940:	mov	x0, x19
    b944:	mov	x2, x21
    b948:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b94c:	mov	x19, x0
    b950:	ldr	x0, [x0, #24]
    b954:	b	b9e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x594>
    b958:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b95c:	add	x9, x9, #0x0
    b960:	ldr	x9, [x9]
    b964:	mov	w10, #0x6d69                	// #28009
    b968:	movk	w10, #0x206d, lsl #16
    b96c:	str	w10, [x8, #8]
    b970:	str	x9, [x8]
    b974:	ldr	x8, [x19, #24]
    b978:	add	x8, x8, #0xc
    b97c:	str	x8, [x19, #24]
    b980:	ldr	w8, [x20, #48]
    b984:	cmp	w8, #0x1
    b988:	b.ne	c110 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xcbc>  // b.any
    b98c:	ldr	x0, [x20, #72]
    b990:	mov	x1, x19
    b994:	mov	x2, xzr
    b998:	mov	w3, wzr
    b99c:	bl	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    b9a0:	ldp	x9, x8, [x19, #16]
    b9a4:	sub	x9, x9, x8
    b9a8:	cmp	x9, #0x6
    b9ac:	b.hi	ba08 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5b4>  // b.pmore
    b9b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b9b4:	add	x1, x1, #0x0
    b9b8:	mov	w2, #0x7                   	// #7
    b9bc:	mov	x0, x19
    b9c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    b9c4:	mov	x19, x0
    b9c8:	and	x1, x21, #0x3f
    b9cc:	b	bf3c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xae8>
    b9d0:	cbz	w21, b9e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x594>
    b9d4:	mov	x2, x21
    b9d8:	bl	0 <memcpy>
    b9dc:	ldr	x8, [x19, #24]
    b9e0:	add	x0, x8, x21
    b9e4:	str	x0, [x19, #24]
    b9e8:	ldr	x8, [x19, #16]
    b9ec:	cmp	x0, x8
    b9f0:	b.cs	c040 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbec>  // b.hs, b.nlast
    b9f4:	add	x8, x0, #0x1
    b9f8:	mov	w9, #0x3e                  	// #62
    b9fc:	str	x8, [x19, #24]
    ba00:	strb	w9, [x0]
    ba04:	b	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    ba08:	mov	w9, #0x6c73                	// #27763
    ba0c:	mov	w10, #0x202c                	// #8236
    ba10:	movk	w9, #0x2320, lsl #16
    ba14:	movk	w10, #0x736c, lsl #16
    ba18:	stur	w9, [x8, #3]
    ba1c:	str	w10, [x8]
    ba20:	ldr	x8, [x19, #24]
    ba24:	and	x1, x21, #0x3f
    ba28:	add	x8, x8, #0x7
    ba2c:	str	x8, [x19, #24]
    ba30:	b	bf3c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xae8>
    ba34:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ba38:	add	x9, x9, #0x0
    ba3c:	ldur	x10, [x9, #5]
    ba40:	ldr	x9, [x9]
    ba44:	stur	x10, [x8, #5]
    ba48:	str	x9, [x8]
    ba4c:	ldr	x8, [x19, #24]
    ba50:	add	x8, x8, #0xd
    ba54:	str	x8, [x19, #24]
    ba58:	ldr	w8, [x20, #48]
    ba5c:	cmp	w8, #0x5
    ba60:	b.ne	c130 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xcdc>  // b.any
    ba64:	ldr	w1, [x20, #72]
    ba68:	b	bf3c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xae8>
    ba6c:	add	x9, x20, #0x5c
    ba70:	ldr	w9, [x9]
    ba74:	cbnz	w9, bb9c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x748>
    ba78:	cmp	w8, #0x3
    ba7c:	b.eq	bb90 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x73c>  // b.none
    ba80:	cmp	w8, #0xa
    ba84:	b.ne	c078 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc24>  // b.any
    ba88:	add	x8, x20, #0x50
    ba8c:	b	bb94 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x740>
    ba90:	mov	w9, #0x27                  	// #39
    ba94:	strb	w9, [x8]
    ba98:	ldr	x8, [x19, #24]
    ba9c:	add	x8, x8, #0x1
    baa0:	str	x8, [x19, #24]
    baa4:	ldr	w8, [x20, #48]
    baa8:	cmp	w8, #0x6
    baac:	b.ne	c150 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xcfc>  // b.any
    bab0:	ldp	x8, x0, [x19, #16]
    bab4:	ldr	w21, [x20, #80]
    bab8:	ldr	x1, [x20, #72]
    babc:	sub	x8, x8, x0
    bac0:	cmp	x8, x21
    bac4:	b.cs	bb54 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x700>  // b.hs, b.nlast
    bac8:	mov	x0, x19
    bacc:	mov	x2, x21
    bad0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bad4:	mov	x19, x0
    bad8:	ldr	x0, [x0, #24]
    badc:	b	bb6c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x718>
    bae0:	mov	w9, #0x63                  	// #99
    bae4:	strb	w9, [x8]
    bae8:	ldr	x8, [x19, #24]
    baec:	add	x8, x8, #0x1
    baf0:	str	x8, [x19, #24]
    baf4:	ldr	w8, [x20, #48]
    baf8:	cmp	w8, #0x8
    bafc:	b.ne	c170 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd1c>  // b.any
    bb00:	ldr	w1, [x20, #72]
    bb04:	mov	x0, x19
    bb08:	ldp	x20, x19, [sp, #96]
    bb0c:	ldp	x22, x21, [sp, #80]
    bb10:	ldp	x24, x23, [sp, #64]
    bb14:	ldp	x29, x30, [sp, #48]
    bb18:	add	sp, sp, #0x70
    bb1c:	b	0 <_ZN4llvm11raw_ostreamlsEm>
    bb20:	mov	w9, #0x3c                  	// #60
    bb24:	strb	w9, [x8]
    bb28:	ldr	x8, [x19, #24]
    bb2c:	mov	x21, x19
    bb30:	add	x8, x8, #0x1
    bb34:	str	x8, [x19, #24]
    bb38:	ldr	w8, [x20, #48]
    bb3c:	cmp	w8, #0x3
    bb40:	b.eq	bbbc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x768>  // b.none
    bb44:	cmp	w8, #0xa
    bb48:	b.ne	c190 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd3c>  // b.any
    bb4c:	add	x8, x20, #0x48
    bb50:	b	bbc0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x76c>
    bb54:	cbz	w21, bb6c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x718>
    bb58:	mov	x2, x21
    bb5c:	bl	0 <memcpy>
    bb60:	ldr	x8, [x19, #24]
    bb64:	add	x0, x8, x21
    bb68:	str	x0, [x19, #24]
    bb6c:	ldr	x8, [x19, #16]
    bb70:	cmp	x8, x0
    bb74:	b.ne	bb84 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x730>  // b.any
    bb78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bb7c:	add	x1, x1, #0x0
    bb80:	b	beb4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa60>
    bb84:	mov	w8, #0x27                  	// #39
    bb88:	strb	w8, [x0]
    bb8c:	b	bfdc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb88>
    bb90:	add	x8, x20, #0x60
    bb94:	ldrb	w8, [x8]
    bb98:	cbz	w8, bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    bb9c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    bba0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bba4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    bba8:	add	x0, x0, #0x0
    bbac:	add	x1, x1, #0x0
    bbb0:	add	x3, x3, #0x0
    bbb4:	mov	w2, #0x253                 	// #595
    bbb8:	bl	0 <__assert_fail>
    bbbc:	add	x8, x20, #0x58
    bbc0:	ldrsw	x8, [x8]
    bbc4:	cmp	w8, #0xd
    bbc8:	b.cs	c1a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd54>  // b.hs, b.nlast
    bbcc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bbd0:	add	x9, x9, #0x0
    bbd4:	ldr	x22, [x9, x8, lsl #3]
    bbd8:	mov	x0, x22
    bbdc:	bl	0 <strlen>
    bbe0:	mov	x23, x0
    bbe4:	ldp	x8, x0, [x21, #16]
    bbe8:	sub	x8, x8, x0
    bbec:	cmp	x23, x8
    bbf0:	b.ls	bc10 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7bc>  // b.plast
    bbf4:	mov	x0, x21
    bbf8:	mov	x1, x22
    bbfc:	mov	x2, x23
    bc00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc04:	mov	x21, x0
    bc08:	ldr	x0, [x0, #24]
    bc0c:	b	bc2c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7d8>
    bc10:	cbz	x23, bc2c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7d8>
    bc14:	mov	x1, x22
    bc18:	mov	x2, x23
    bc1c:	bl	0 <memcpy>
    bc20:	ldr	x8, [x21, #24]
    bc24:	add	x0, x8, x23
    bc28:	str	x0, [x21, #24]
    bc2c:	ldr	x8, [x21, #16]
    bc30:	sub	x8, x8, x0
    bc34:	cmp	x8, #0x1
    bc38:	b.hi	bc58 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x804>  // b.pmore
    bc3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bc40:	add	x1, x1, #0x0
    bc44:	mov	w2, #0x2                   	// #2
    bc48:	mov	x0, x21
    bc4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc50:	mov	x21, x0
    bc54:	b	bc6c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x818>
    bc58:	mov	w8, #0x2320                	// #8992
    bc5c:	strh	w8, [x0]
    bc60:	ldr	x8, [x21, #24]
    bc64:	add	x8, x8, #0x2
    bc68:	str	x8, [x21, #24]
    bc6c:	ldr	w8, [x20, #48]
    bc70:	cmp	w8, #0x3
    bc74:	b.eq	bc88 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x834>  // b.none
    bc78:	cmp	w8, #0xa
    bc7c:	b.ne	c060 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc0c>  // b.any
    bc80:	add	x8, x20, #0x4c
    bc84:	b	bc8c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x838>
    bc88:	add	x8, x20, #0x5c
    bc8c:	ldr	w1, [x8]
    bc90:	mov	x0, x21
    bc94:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bc98:	ldr	w8, [x20, #48]
    bc9c:	cmp	w8, #0x3
    bca0:	b.eq	bcb4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x860>  // b.none
    bca4:	cmp	w8, #0xa
    bca8:	b.ne	c078 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc24>  // b.any
    bcac:	add	x8, x20, #0x50
    bcb0:	b	bcb8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x864>
    bcb4:	add	x8, x20, #0x60
    bcb8:	ldrb	w8, [x8]
    bcbc:	cbnz	w8, c020 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbcc>
    bcc0:	ldp	x9, x8, [x19, #16]
    bcc4:	sub	x9, x9, x8
    bcc8:	cmp	x9, #0x4
    bccc:	b.hi	c000 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbac>  // b.pmore
    bcd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bcd4:	add	x1, x1, #0x0
    bcd8:	mov	w2, #0x5                   	// #5
    bcdc:	mov	x0, x19
    bce0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bce4:	b	c020 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbcc>
    bce8:	mov	x0, x22
    bcec:	mov	x1, x24
    bcf0:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
    bcf4:	ldur	w8, [x29, #-8]
    bcf8:	cmp	w8, #0x41
    bcfc:	b.cc	bd0c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8b8>  // b.lo, b.ul, b.last
    bd00:	ldur	x0, [x29, #-16]
    bd04:	cbz	x0, bd0c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8b8>
    bd08:	bl	0 <_ZdaPv>
    bd0c:	ldr	x8, [sp, #8]
    bd10:	cmp	x23, x8
    bd14:	b.eq	bd28 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8d4>  // b.none
    bd18:	sub	x8, x29, #0x10
    bd1c:	mov	x0, x22
    bd20:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    bd24:	b	bd38 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8e4>
    bd28:	mov	x8, sp
    bd2c:	add	x0, x8, #0x8
    bd30:	sub	x8, x29, #0x10
    bd34:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    bd38:	ldur	w22, [x29, #-8]
    bd3c:	cmp	w22, #0x40
    bd40:	b.hi	bd4c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8f8>  // b.pmore
    bd44:	sub	x8, x29, #0x10
    bd48:	b	bd64 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x910>
    bd4c:	sub	x0, x29, #0x10
    bd50:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    bd54:	sub	w8, w22, w0
    bd58:	cmp	w8, #0x41
    bd5c:	b.cs	c1e0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd8c>  // b.hs, b.nlast
    bd60:	ldur	x8, [x29, #-16]
    bd64:	ldr	x1, [x8]
    bd68:	mov	x0, x21
    bd6c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bd70:	ldur	w8, [x29, #-8]
    bd74:	cmp	w8, #0x41
    bd78:	b.cc	bd88 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x934>  // b.lo, b.ul, b.last
    bd7c:	ldur	x0, [x29, #-16]
    bd80:	cbz	x0, bd88 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x934>
    bd84:	bl	0 <_ZdaPv>
    bd88:	mov	x0, sp
    bd8c:	bl	0 <LLVMInitializeAArch64AsmParser>
    bd90:	ldr	w8, [x20, #48]
    bd94:	cmp	w8, #0xb
    bd98:	b.ne	c1c0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd6c>  // b.any
    bd9c:	ldrb	w8, [x20, #80]
    bda0:	cbnz	w8, bfb0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb5c>
    bda4:	ldp	x9, x8, [x19, #16]
    bda8:	sub	x9, x9, x8
    bdac:	cmp	x9, #0x9
    bdb0:	b.hi	bf8c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb38>  // b.pmore
    bdb4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bdb8:	add	x1, x1, #0x0
    bdbc:	mov	w2, #0xa                   	// #10
    bdc0:	mov	x0, x19
    bdc4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bdc8:	b	bfb0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb5c>
    bdcc:	cmp	x9, #0x11
    bdd0:	b.hi	bec0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa6c>  // b.pmore
    bdd4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bdd8:	add	x1, x1, #0x0
    bddc:	mov	w2, #0x12                  	// #18
    bde0:	mov	x0, x19
    bde4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bde8:	mov	x19, x0
    bdec:	b	bee4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa90>
    bdf0:	cmp	x9, #0xf
    bdf4:	b.hi	bf10 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xabc>  // b.pmore
    bdf8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bdfc:	add	x1, x1, #0x0
    be00:	mov	w2, #0x10                  	// #16
    be04:	mov	x0, x19
    be08:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    be0c:	mov	x19, x0
    be10:	b	bf2c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xad8>
    be14:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    be18:	add	x9, x9, #0x0
    be1c:	ldr	x9, [x9]
    be20:	mov	w10, #0x20                  	// #32
    be24:	strb	w10, [x8, #8]
    be28:	str	x9, [x8]
    be2c:	ldr	x8, [x19, #24]
    be30:	add	x0, x8, #0x9
    be34:	b	be58 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa04>
    be38:	mov	w9, #0x6f66                	// #28518
    be3c:	mov	w10, #0x703c                	// #28732
    be40:	movk	w9, #0x2070, lsl #16
    be44:	movk	w10, #0x6672, lsl #16
    be48:	stur	w9, [x8, #3]
    be4c:	str	w10, [x8]
    be50:	ldr	x8, [x19, #24]
    be54:	add	x0, x8, #0x7
    be58:	str	x0, [x19, #24]
    be5c:	ldr	x8, [x19, #16]
    be60:	sub	x8, x8, x0
    be64:	cmp	x8, x21
    be68:	b.cs	be88 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa34>  // b.hs, b.nlast
    be6c:	mov	x0, x19
    be70:	mov	x1, x20
    be74:	mov	x2, x21
    be78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    be7c:	ldr	x8, [x0, #24]
    be80:	mov	x19, x0
    be84:	b	bea0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa4c>
    be88:	mov	x1, x20
    be8c:	mov	x2, x21
    be90:	bl	0 <memcpy>
    be94:	ldr	x8, [x19, #24]
    be98:	add	x8, x8, x21
    be9c:	str	x8, [x19, #24]
    bea0:	ldr	x9, [x19, #16]
    bea4:	cmp	x9, x8
    bea8:	b.ne	bfd4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb80>  // b.any
    beac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    beb0:	add	x1, x1, #0x0
    beb4:	mov	w2, #0x1                   	// #1
    beb8:	mov	x0, x19
    bebc:	b	bf5c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb08>
    bec0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bec4:	add	x9, x9, #0x0
    bec8:	ldr	q0, [x9]
    becc:	mov	w9, #0x2320                	// #8992
    bed0:	strh	w9, [x8, #16]
    bed4:	str	q0, [x8]
    bed8:	ldr	x8, [x19, #24]
    bedc:	add	x8, x8, #0x12
    bee0:	str	x8, [x19, #24]
    bee4:	ldr	w8, [x20, #48]
    bee8:	cmp	w8, #0xc
    beec:	b.eq	bf38 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xae4>  // b.none
    bef0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    bef4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bef8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    befc:	add	x0, x0, #0x0
    bf00:	add	x1, x1, #0x0
    bf04:	add	x3, x3, #0x0
    bf08:	mov	w2, #0x212                 	// #530
    bf0c:	bl	0 <__assert_fail>
    bf10:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bf14:	add	x9, x9, #0x0
    bf18:	ldr	q0, [x9]
    bf1c:	str	q0, [x8]
    bf20:	ldr	x8, [x19, #24]
    bf24:	add	x8, x8, #0x10
    bf28:	str	x8, [x19, #24]
    bf2c:	ldr	w8, [x20, #48]
    bf30:	cmp	w8, #0x9
    bf34:	b.ne	c200 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xdac>  // b.any
    bf38:	ldr	w1, [x20, #84]
    bf3c:	mov	x0, x19
    bf40:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bf44:	ldp	x9, x8, [x0, #16]
    bf48:	cmp	x9, x8
    bf4c:	b.ne	bf74 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb20>  // b.any
    bf50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bf54:	add	x1, x1, #0x0
    bf58:	mov	w2, #0x1                   	// #1
    bf5c:	ldp	x20, x19, [sp, #96]
    bf60:	ldp	x22, x21, [sp, #80]
    bf64:	ldp	x24, x23, [sp, #64]
    bf68:	ldp	x29, x30, [sp, #48]
    bf6c:	add	sp, sp, #0x70
    bf70:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bf74:	mov	w9, #0x3e                  	// #62
    bf78:	strb	w9, [x8]
    bf7c:	ldr	x8, [x0, #24]
    bf80:	add	x8, x8, #0x1
    bf84:	str	x8, [x0, #24]
    bf88:	b	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    bf8c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bf90:	add	x9, x9, #0x0
    bf94:	ldr	x9, [x9]
    bf98:	mov	w10, #0x2974                	// #10612
    bf9c:	strh	w10, [x8, #8]
    bfa0:	str	x9, [x8]
    bfa4:	ldr	x8, [x19, #24]
    bfa8:	add	x8, x8, #0xa
    bfac:	str	x8, [x19, #24]
    bfb0:	ldp	x9, x8, [x19, #16]
    bfb4:	cmp	x9, x8
    bfb8:	b.ne	bfd4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb80>  // b.any
    bfbc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bfc0:	add	x1, x1, #0x0
    bfc4:	mov	w2, #0x1                   	// #1
    bfc8:	mov	x0, x19
    bfcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bfd0:	b	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    bfd4:	mov	w9, #0x3e                  	// #62
    bfd8:	strb	w9, [x8]
    bfdc:	ldr	x8, [x19, #24]
    bfe0:	add	x8, x8, #0x1
    bfe4:	str	x8, [x19, #24]
    bfe8:	ldp	x20, x19, [sp, #96]
    bfec:	ldp	x22, x21, [sp, #80]
    bff0:	ldp	x24, x23, [sp, #64]
    bff4:	ldp	x29, x30, [sp, #48]
    bff8:	add	sp, sp, #0x70
    bffc:	ret
    c000:	mov	w10, #0x693c                	// #26940
    c004:	mov	w9, #0x3e                  	// #62
    c008:	movk	w10, #0x706d, lsl #16
    c00c:	strb	w9, [x8, #4]
    c010:	str	w10, [x8]
    c014:	ldr	x8, [x19, #24]
    c018:	add	x8, x8, #0x5
    c01c:	str	x8, [x19, #24]
    c020:	ldp	x9, x8, [x19, #16]
    c024:	cmp	x8, x9
    c028:	b.cs	c040 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbec>  // b.hs, b.nlast
    c02c:	add	x9, x8, #0x1
    c030:	mov	w10, #0x3e                  	// #62
    c034:	str	x9, [x19, #24]
    c038:	strb	w10, [x8]
    c03c:	b	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb94>
    c040:	mov	x0, x19
    c044:	ldp	x20, x19, [sp, #96]
    c048:	ldp	x22, x21, [sp, #80]
    c04c:	ldp	x24, x23, [sp, #64]
    c050:	ldp	x29, x30, [sp, #48]
    c054:	mov	w1, #0x3e                  	// #62
    c058:	add	sp, sp, #0x70
    c05c:	b	0 <_ZN4llvm11raw_ostream5writeEh>
    c060:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c064:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c068:	add	x0, x0, #0x0
    c06c:	add	x1, x1, #0x0
    c070:	mov	w2, #0x269                 	// #617
    c074:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c078:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c07c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c080:	add	x0, x0, #0x0
    c084:	add	x1, x1, #0x0
    c088:	mov	w2, #0x271                 	// #625
    c08c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c090:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c094:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c098:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c09c:	add	x0, x0, #0x0
    c0a0:	add	x1, x1, #0x0
    c0a4:	add	x3, x3, #0x0
    c0a8:	mov	w2, #0x208                 	// #520
    c0ac:	bl	0 <__assert_fail>
    c0b0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c0b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c0b8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c0bc:	add	x0, x0, #0x0
    c0c0:	add	x1, x1, #0x0
    c0c4:	add	x3, x3, #0x0
    c0c8:	mov	w2, #0x226                 	// #550
    c0cc:	bl	0 <__assert_fail>
    c0d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c0d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c0d8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c0dc:	add	x0, x0, #0x0
    c0e0:	add	x1, x1, #0x0
    c0e4:	add	x3, x3, #0x0
    c0e8:	mov	w2, #0x203                 	// #515
    c0ec:	bl	0 <__assert_fail>
    c0f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c0f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c0f8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c0fc:	add	x0, x0, #0x0
    c100:	add	x1, x1, #0x0
    c104:	add	x3, x3, #0x0
    c108:	mov	w2, #0x235                 	// #565
    c10c:	bl	0 <__assert_fail>
    c110:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c114:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c118:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c11c:	add	x0, x0, #0x0
    c120:	add	x1, x1, #0x0
    c124:	add	x3, x3, #0x0
    c128:	mov	w2, #0x1f9                 	// #505
    c12c:	bl	0 <__assert_fail>
    c130:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c134:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c138:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c13c:	add	x0, x0, #0x0
    c140:	add	x1, x1, #0x0
    c144:	add	x3, x3, #0x0
    c148:	mov	w2, #0x230                 	// #560
    c14c:	bl	0 <__assert_fail>
    c150:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c154:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c158:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c15c:	add	x0, x0, #0x0
    c160:	add	x1, x1, #0x0
    c164:	add	x3, x3, #0x0
    c168:	mov	w2, #0x1ea                 	// #490
    c16c:	bl	0 <__assert_fail>
    c170:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c174:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c178:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c17c:	add	x0, x0, #0x0
    c180:	add	x1, x1, #0x0
    c184:	add	x3, x3, #0x0
    c188:	mov	w2, #0x23a                 	// #570
    c18c:	bl	0 <__assert_fail>
    c190:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c194:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c198:	add	x0, x0, #0x0
    c19c:	add	x1, x1, #0x0
    c1a0:	mov	w2, #0x261                 	// #609
    c1a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c1a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c1ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1b0:	add	x0, x0, #0x0
    c1b4:	add	x1, x1, #0x0
    c1b8:	mov	w2, #0x36                  	// #54
    c1bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c1c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c1c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c1cc:	add	x0, x0, #0x0
    c1d0:	add	x1, x1, #0x0
    c1d4:	add	x3, x3, #0x0
    c1d8:	mov	w2, #0x20d                 	// #525
    c1dc:	bl	0 <__assert_fail>
    c1e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c1e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c1ec:	add	x0, x0, #0x0
    c1f0:	add	x1, x1, #0x0
    c1f4:	add	x3, x3, #0x0
    c1f8:	mov	w2, #0x657                 	// #1623
    c1fc:	bl	0 <__assert_fail>
    c200:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c204:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c208:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c20c:	add	x0, x0, #0x0
    c210:	add	x1, x1, #0x0
    c214:	add	x3, x3, #0x0
    c218:	mov	w2, #0x23f                 	// #575
    c21c:	bl	0 <__assert_fail>

000000000000c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    c220:	sub	sp, sp, #0x60
    c224:	stp	x29, x30, [sp, #32]
    c228:	stp	x24, x23, [sp, #48]
    c22c:	stp	x22, x21, [sp, #64]
    c230:	stp	x20, x19, [sp, #80]
    c234:	add	x29, sp, #0x20
    c238:	mov	x21, x0
    c23c:	ldr	x0, [x0, #8]
    c240:	mov	x19, x1
    c244:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c248:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c24c:	ldr	x8, [x21, #8]
    c250:	mov	x20, x0
    c254:	mov	w1, #0x13                  	// #19
    c258:	mov	x0, x8
    c25c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c260:	tbz	w0, #0, c274 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x54>
    c264:	ldr	x0, [x21, #8]
    c268:	sub	x1, x29, #0x8
    c26c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c270:	tbz	w0, #0, c290 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x70>
    c274:	mov	w0, #0x1                   	// #1
    c278:	ldp	x20, x19, [sp, #80]
    c27c:	ldp	x22, x21, [sp, #64]
    c280:	ldp	x24, x23, [sp, #48]
    c284:	ldp	x29, x30, [sp, #32]
    c288:	add	sp, sp, #0x60
    c28c:	ret
    c290:	ldur	x23, [x29, #-8]
    c294:	cbz	x23, c3a8 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x188>
    c298:	ldr	w8, [x23]
    c29c:	cmp	w8, #0x1
    c2a0:	b.ne	c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc8>  // b.any
    c2a4:	ldr	x0, [x21, #8]
    c2a8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c2ac:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c2b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    c2b4:	add	x8, x8, #0x0
    c2b8:	mov	w9, #0x103                 	// #259
    c2bc:	stp	x8, xzr, [sp]
    c2c0:	strh	w9, [sp, #16]
    c2c4:	ldr	x8, [x21, #8]
    c2c8:	mov	x22, x0
    c2cc:	mov	x2, sp
    c2d0:	mov	w1, #0x14                  	// #20
    c2d4:	mov	x0, x8
    c2d8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    c2dc:	tbz	w0, #0, c318 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf8>
    c2e0:	mov	w0, #0x2                   	// #2
    c2e4:	b	c278 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c2e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    c2ec:	add	x8, x8, #0x0
    c2f0:	mov	w9, #0x103                 	// #259
    c2f4:	stp	x8, xzr, [sp]
    c2f8:	strh	w9, [sp, #16]
    c2fc:	ldr	x0, [x21, #8]
    c300:	mov	x1, sp
    c304:	mov	x2, xzr
    c308:	mov	x3, xzr
    c30c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    c310:	mov	w0, #0x2                   	// #2
    c314:	b	c278 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c318:	ldr	x0, [x21, #8]
    c31c:	ldr	x24, [x23, #16]
    c320:	ldr	x8, [x0]
    c324:	ldr	x8, [x8, #48]
    c328:	blr	x8
    c32c:	mov	x23, x0
    c330:	mov	w0, #0x70                  	// #112
    c334:	bl	0 <_Znwm>
    c338:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c33c:	mov	x8, x0
    c340:	add	x9, x9, #0x0
    c344:	strb	wzr, [x8, #32]!
    c348:	str	x9, [x0]
    c34c:	mov	w9, #0x5                   	// #5
    c350:	str	w9, [x0, #48]
    c354:	str	x23, [x0, #104]
    c358:	str	w24, [x0, #72]
    c35c:	stp	x20, x22, [x0, #56]
    c360:	stp	x8, xzr, [x0, #16]
    c364:	ldp	w8, w9, [x19, #8]
    c368:	mov	x21, x0
    c36c:	cmp	w8, w9
    c370:	b.cs	c394 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x174>  // b.hs, b.nlast
    c374:	ldr	x10, [x19]
    c378:	cmp	w8, w9
    c37c:	str	x21, [x10, w8, uxtw #3]
    c380:	b.cs	c3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a8>  // b.hs, b.nlast
    c384:	mov	w0, wzr
    c388:	add	w8, w8, #0x1
    c38c:	str	w8, [x19, #8]
    c390:	b	c278 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c394:	mov	x0, x19
    c398:	mov	x1, xzr
    c39c:	bl	0 <LLVMInitializeAArch64AsmParser>
    c3a0:	ldp	w8, w9, [x19, #8]
    c3a4:	b	c374 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x154>
    c3a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c3ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c3b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c3b4:	add	x0, x0, #0x0
    c3b8:	add	x1, x1, #0x0
    c3bc:	add	x3, x3, #0x0
    c3c0:	mov	w2, #0x69                  	// #105
    c3c4:	bl	0 <__assert_fail>
    c3c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c3cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c3d0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c3d4:	add	x0, x0, #0x0
    c3d8:	add	x1, x1, #0x0
    c3dc:	add	x3, x3, #0x0
    c3e0:	mov	w2, #0x43                  	// #67
    c3e4:	bl	0 <__assert_fail>

000000000000c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>:
    c3e8:	sub	sp, sp, #0x80
    c3ec:	stp	x29, x30, [sp, #64]
    c3f0:	str	x23, [sp, #80]
    c3f4:	stp	x22, x21, [sp, #96]
    c3f8:	stp	x20, x19, [sp, #112]
    c3fc:	add	x29, sp, #0x40
    c400:	ldr	x21, [x0, #8]
    c404:	mov	x20, x0
    c408:	mov	x19, x1
    c40c:	mov	w1, #0xa                   	// #10
    c410:	mov	x0, x21
    c414:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c418:	tbz	w0, #0, c454 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6c>
    c41c:	mov	x0, x21
    c420:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c424:	ldr	w8, [x0]
    c428:	cmp	w8, #0x2
    c42c:	b.ne	c468 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x80>  // b.any
    c430:	mov	x0, x21
    c434:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c438:	ldr	w8, [x0]
    c43c:	cmp	w8, #0x3
    c440:	b.eq	c498 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xb0>  // b.none
    c444:	cmp	w8, #0x2
    c448:	b.ne	ccb0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8c8>  // b.any
    c44c:	ldp	x8, x9, [x0, #8]
    c450:	b	c4bc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xd4>
    c454:	ldr	x0, [x20, #8]
    c458:	mov	x1, x19
    c45c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c460:	mov	w21, w0
    c464:	b	cc94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    c468:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    c46c:	add	x8, x8, #0x0
    c470:	mov	w9, #0x103                 	// #259
    c474:	stp	x8, xzr, [sp, #32]
    c478:	strh	w9, [sp, #48]
    c47c:	ldr	x0, [x20, #8]
    c480:	add	x1, sp, #0x20
    c484:	mov	x2, xzr
    c488:	mov	x3, xzr
    c48c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    c490:	mov	w21, w0
    c494:	b	cc94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    c498:	ldp	x8, x9, [x0, #8]
    c49c:	subs	x10, x9, #0x1
    c4a0:	cset	w11, cs  // cs = hs, nlast
    c4a4:	cinc	x8, x8, cs  // cs = hs, nlast
    c4a8:	cmp	x10, x11
    c4ac:	csel	x10, x10, x11, hi  // hi = pmore
    c4b0:	cmp	x9, x10
    c4b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    c4b8:	sub	x9, x9, x11
    c4bc:	stp	x8, x9, [sp, #8]
    c4c0:	add	x8, sp, #0x20
    c4c4:	add	x0, sp, #0x8
    c4c8:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    c4cc:	ldr	x23, [sp, #40]
    c4d0:	sub	x8, x23, #0x3
    c4d4:	cmp	x8, #0xb
    c4d8:	b.hi	ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>  // b.pmore
    c4dc:	ldr	x22, [sp, #32]
    c4e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c4e4:	add	x9, x9, #0x0
    c4e8:	adr	x10, c4f8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x110>
    c4ec:	ldrh	w11, [x9, x8, lsl #1]
    c4f0:	add	x10, x10, x11, lsl #2
    c4f4:	br	x10
    c4f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c4fc:	add	x1, x1, #0x0
    c500:	mov	x0, x22
    c504:	mov	x2, x23
    c508:	bl	0 <bcmp>
    c50c:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c510:	mov	w8, wzr
    c514:	mov	w9, #0x14                  	// #20
    c518:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c51c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c520:	add	x1, x1, #0x0
    c524:	mov	x0, x22
    c528:	mov	x2, x23
    c52c:	bl	0 <bcmp>
    c530:	cbz	w0, ca4c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x664>
    c534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c538:	add	x1, x1, #0x0
    c53c:	mov	x0, x22
    c540:	mov	x2, x23
    c544:	bl	0 <bcmp>
    c548:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c54c:	mov	w8, #0x100                 	// #256
    c550:	mov	w9, #0x46                  	// #70
    c554:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c558:	ldr	x8, [x22]
    c55c:	mov	x9, #0x6261                	// #25185
    c560:	movk	x9, #0x5f73, lsl #16
    c564:	movk	x9, #0x3267, lsl #32
    c568:	movk	x9, #0x735f, lsl #48
    c56c:	cmp	x8, x9
    c570:	b.eq	ca58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x670>  // b.none
    c574:	ldr	x8, [x22]
    c578:	mov	x9, #0x6261                	// #25185
    c57c:	movk	x9, #0x5f73, lsl #16
    c580:	movk	x9, #0x3167, lsl #32
    c584:	movk	x9, #0x735f, lsl #48
    c588:	cmp	x8, x9
    c58c:	b.eq	cab8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6d0>  // b.none
    c590:	ldr	x8, [x22]
    c594:	mov	x9, #0x6261                	// #25185
    c598:	movk	x9, #0x5f73, lsl #16
    c59c:	movk	x9, #0x3067, lsl #32
    c5a0:	movk	x9, #0x735f, lsl #48
    c5a4:	cmp	x8, x9
    c5a8:	b.eq	cb0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x724>  // b.none
    c5ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c5b0:	add	x1, x1, #0x0
    c5b4:	mov	x0, x22
    c5b8:	mov	x2, x23
    c5bc:	bl	0 <bcmp>
    c5c0:	cbz	w0, cb60 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x778>
    c5c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c5c8:	add	x1, x1, #0x0
    c5cc:	mov	x0, x22
    c5d0:	mov	x2, x23
    c5d4:	bl	0 <bcmp>
    c5d8:	cbz	w0, cb9c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7b4>
    c5dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c5e0:	add	x1, x1, #0x0
    c5e4:	mov	x0, x22
    c5e8:	mov	x2, x23
    c5ec:	bl	0 <bcmp>
    c5f0:	cbz	w0, cbcc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7e4>
    c5f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c5f8:	add	x1, x1, #0x0
    c5fc:	mov	x0, x22
    c600:	mov	x2, x23
    c604:	bl	0 <bcmp>
    c608:	cbz	w0, cbe4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7fc>
    c60c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c610:	add	x1, x1, #0x0
    c614:	mov	x0, x22
    c618:	mov	x2, x23
    c61c:	bl	0 <bcmp>
    c620:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c624:	mov	w8, wzr
    c628:	mov	w9, #0x16                  	// #22
    c62c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c630:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c634:	add	x1, x1, #0x0
    c638:	mov	x0, x22
    c63c:	mov	x2, x23
    c640:	bl	0 <bcmp>
    c644:	cbz	w0, ca64 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x67c>
    c648:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c64c:	add	x1, x1, #0x0
    c650:	mov	x0, x22
    c654:	mov	x2, x23
    c658:	bl	0 <bcmp>
    c65c:	cbz	w0, cac4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6dc>
    c660:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c664:	add	x1, x1, #0x0
    c668:	mov	x0, x22
    c66c:	mov	x2, x23
    c670:	bl	0 <bcmp>
    c674:	cbz	w0, cb18 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x730>
    c678:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c67c:	add	x1, x1, #0x0
    c680:	mov	x0, x22
    c684:	mov	x2, x23
    c688:	bl	0 <bcmp>
    c68c:	cbz	w0, cb6c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x784>
    c690:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c694:	add	x1, x1, #0x0
    c698:	mov	x0, x22
    c69c:	mov	x2, x23
    c6a0:	bl	0 <bcmp>
    c6a4:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c6a8:	mov	w8, wzr
    c6ac:	mov	w9, #0x18                  	// #24
    c6b0:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c6b4:	ldr	x8, [x22]
    c6b8:	ldrb	w9, [x22, #8]
    c6bc:	mov	x10, #0x6261                	// #25185
    c6c0:	movk	x10, #0x5f73, lsl #16
    c6c4:	movk	x10, #0x3267, lsl #32
    c6c8:	movk	x10, #0x6e5f, lsl #48
    c6cc:	mov	w11, #0x63                  	// #99
    c6d0:	eor	x8, x8, x10
    c6d4:	eor	x9, x9, x11
    c6d8:	orr	x8, x8, x9
    c6dc:	cbz	x8, ca70 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x688>
    c6e0:	ldr	x8, [x22]
    c6e4:	ldrb	w9, [x22, #8]
    c6e8:	mov	x10, #0x6261                	// #25185
    c6ec:	movk	x10, #0x5f73, lsl #16
    c6f0:	movk	x10, #0x3167, lsl #32
    c6f4:	movk	x10, #0x6e5f, lsl #48
    c6f8:	mov	w11, #0x63                  	// #99
    c6fc:	eor	x8, x8, x10
    c700:	eor	x9, x9, x11
    c704:	orr	x8, x8, x9
    c708:	cbz	x8, cad0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6e8>
    c70c:	ldr	x8, [x22]
    c710:	ldrb	w9, [x22, #8]
    c714:	mov	x10, #0x6261                	// #25185
    c718:	movk	x10, #0x5f73, lsl #16
    c71c:	movk	x10, #0x3067, lsl #32
    c720:	movk	x10, #0x6e5f, lsl #48
    c724:	mov	w11, #0x63                  	// #99
    c728:	eor	x8, x8, x10
    c72c:	eor	x9, x9, x11
    c730:	orr	x8, x8, x9
    c734:	cbz	x8, cb24 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x73c>
    c738:	ldr	x9, [x22]
    c73c:	ldrb	w10, [x22, #8]
    c740:	mov	x8, #0x7464                	// #29796
    c744:	movk	x8, #0x7270, lsl #16
    c748:	movk	x8, #0x6c65, lsl #32
    c74c:	movk	x8, #0x675f, lsl #48
    c750:	mov	w11, #0x32                  	// #50
    c754:	eor	x9, x9, x8
    c758:	eor	x10, x10, x11
    c75c:	orr	x9, x9, x10
    c760:	cbz	x9, cb78 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x790>
    c764:	ldr	x9, [x22]
    c768:	ldrb	w10, [x22, #8]
    c76c:	mov	w11, #0x31                  	// #49
    c770:	eor	x9, x9, x8
    c774:	eor	x10, x10, x11
    c778:	orr	x9, x9, x10
    c77c:	cbz	x9, cba8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7c0>
    c780:	ldr	x9, [x22]
    c784:	ldrb	w10, [x22, #8]
    c788:	eor	x8, x9, x8
    c78c:	eor	x9, x10, #0x30
    c790:	orr	x8, x8, x9
    c794:	cbnz	x8, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c798:	mov	w9, #0x45                  	// #69
    c79c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c7a0:	ldr	w8, [x22]
    c7a4:	mov	w9, #0x6f6c                	// #28524
    c7a8:	movk	w9, #0x3231, lsl #16
    c7ac:	cmp	w8, w9
    c7b0:	b.ne	ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>  // b.any
    c7b4:	mov	w8, #0x100                 	// #256
    c7b8:	mov	w9, #0x21                  	// #33
    c7bc:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c7c0:	ldr	w9, [x22]
    c7c4:	ldrh	w10, [x22, #4]
    c7c8:	mov	w8, #0x6261                	// #25185
    c7cc:	movk	w8, #0x5f73, lsl #16
    c7d0:	mov	w11, #0x3367                	// #13159
    c7d4:	eor	w9, w9, w8
    c7d8:	eor	w10, w10, w11
    c7dc:	orr	w9, w9, w10
    c7e0:	cbz	w9, ca7c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x694>
    c7e4:	ldr	w9, [x22]
    c7e8:	ldrh	w10, [x22, #4]
    c7ec:	mov	w11, #0x3267                	// #12903
    c7f0:	eor	w9, w9, w8
    c7f4:	eor	w10, w10, w11
    c7f8:	orr	w9, w9, w10
    c7fc:	cbz	w9, cadc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6f4>
    c800:	ldr	w9, [x22]
    c804:	ldrh	w10, [x22, #4]
    c808:	mov	w11, #0x3167                	// #12647
    c80c:	eor	w9, w9, w8
    c810:	eor	w10, w10, w11
    c814:	orr	w9, w9, w10
    c818:	cbz	w9, cb30 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x748>
    c81c:	ldr	w9, [x22]
    c820:	ldrh	w10, [x22, #4]
    c824:	mov	w11, #0x3067                	// #12391
    c828:	eor	w8, w9, w8
    c82c:	eor	w9, w10, w11
    c830:	orr	w8, w8, w9
    c834:	cbnz	w8, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c838:	mov	w9, #0x41                  	// #65
    c83c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c840:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c844:	add	x1, x1, #0x0
    c848:	mov	x0, x22
    c84c:	mov	x2, x23
    c850:	bl	0 <bcmp>
    c854:	cbz	w0, ca88 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6a0>
    c858:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c85c:	add	x1, x1, #0x0
    c860:	mov	x0, x22
    c864:	mov	x2, x23
    c868:	bl	0 <bcmp>
    c86c:	cbz	w0, cae8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x700>
    c870:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c874:	add	x1, x1, #0x0
    c878:	mov	x0, x22
    c87c:	mov	x2, x23
    c880:	bl	0 <bcmp>
    c884:	cbz	w0, cb3c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x754>
    c888:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c88c:	add	x1, x1, #0x0
    c890:	mov	x0, x22
    c894:	mov	x2, x23
    c898:	bl	0 <bcmp>
    c89c:	cbz	w0, cb84 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x79c>
    c8a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c8a4:	add	x1, x1, #0x0
    c8a8:	mov	x0, x22
    c8ac:	mov	x2, x23
    c8b0:	bl	0 <bcmp>
    c8b4:	cbz	w0, cbb4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7cc>
    c8b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c8bc:	add	x1, x1, #0x0
    c8c0:	mov	x0, x22
    c8c4:	mov	x2, x23
    c8c8:	bl	0 <bcmp>
    c8cc:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c8d0:	mov	w8, wzr
    c8d4:	mov	w9, #0x27                  	// #39
    c8d8:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c8dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c8e0:	add	x1, x1, #0x0
    c8e4:	mov	x0, x22
    c8e8:	mov	x2, x23
    c8ec:	bl	0 <bcmp>
    c8f0:	cbz	w0, ca94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6ac>
    c8f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c8f8:	add	x1, x1, #0x0
    c8fc:	mov	x0, x22
    c900:	mov	x2, x23
    c904:	bl	0 <bcmp>
    c908:	cbz	w0, caf4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x70c>
    c90c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c910:	add	x1, x1, #0x0
    c914:	mov	x0, x22
    c918:	mov	x2, x23
    c91c:	bl	0 <bcmp>
    c920:	cbz	w0, cb48 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x760>
    c924:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c928:	add	x1, x1, #0x0
    c92c:	mov	x0, x22
    c930:	mov	x2, x23
    c934:	bl	0 <bcmp>
    c938:	cbz	w0, cb90 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7a8>
    c93c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c940:	add	x1, x1, #0x0
    c944:	mov	x0, x22
    c948:	mov	x2, x23
    c94c:	bl	0 <bcmp>
    c950:	cbz	w0, cbc0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7d8>
    c954:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c958:	add	x1, x1, #0x0
    c95c:	mov	x0, x22
    c960:	mov	x2, x23
    c964:	bl	0 <bcmp>
    c968:	cbz	w0, cbd8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7f0>
    c96c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c970:	add	x1, x1, #0x0
    c974:	mov	x0, x22
    c978:	mov	x2, x23
    c97c:	bl	0 <bcmp>
    c980:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c984:	mov	w8, wzr
    c988:	mov	w9, #0x39                  	// #57
    c98c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c990:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c994:	add	x1, x1, #0x0
    c998:	mov	x0, x22
    c99c:	mov	x2, x23
    c9a0:	bl	0 <bcmp>
    c9a4:	cbz	w0, caa0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6b8>
    c9a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c9ac:	add	x1, x1, #0x0
    c9b0:	mov	x0, x22
    c9b4:	mov	x2, x23
    c9b8:	bl	0 <bcmp>
    c9bc:	cbnz	w0, ca14 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    c9c0:	mov	w8, #0x100                 	// #256
    c9c4:	mov	w9, #0x26                  	// #38
    c9c8:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    c9cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c9d0:	add	x1, x1, #0x0
    c9d4:	mov	x0, x22
    c9d8:	mov	x2, x23
    c9dc:	bl	0 <bcmp>
    c9e0:	cbz	w0, caac <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6c4>
    c9e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c9e8:	add	x1, x1, #0x0
    c9ec:	mov	x0, x22
    c9f0:	mov	x2, x23
    c9f4:	bl	0 <bcmp>
    c9f8:	cbz	w0, cb00 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x718>
    c9fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ca00:	add	x1, x1, #0x0
    ca04:	mov	x0, x22
    ca08:	mov	x2, x23
    ca0c:	bl	0 <bcmp>
    ca10:	cbz	w0, cb54 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x76c>
    ca14:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ca18:	add	x8, x8, #0x0
    ca1c:	mov	w9, #0x103                 	// #259
    ca20:	stp	x8, xzr, [sp, #8]
    ca24:	strh	w9, [sp, #24]
    ca28:	ldr	x0, [x20, #8]
    ca2c:	add	x1, sp, #0x8
    ca30:	mov	x2, xzr
    ca34:	mov	x3, xzr
    ca38:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    ca3c:	mov	w21, w0
    ca40:	mov	w23, wzr
    ca44:	mov	w22, #0xfff                 	// #4095
    ca48:	b	cc2c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x844>
    ca4c:	mov	w8, #0x100                 	// #256
    ca50:	mov	w9, #0x25                  	// #37
    ca54:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca58:	mov	w8, wzr
    ca5c:	mov	w9, #0x62                  	// #98
    ca60:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca64:	mov	w8, wzr
    ca68:	mov	w9, #0x73                  	// #115
    ca6c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca70:	mov	w8, #0x100                 	// #256
    ca74:	mov	w9, #0x61                  	// #97
    ca78:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca7c:	mov	w8, wzr
    ca80:	mov	w9, #0x71                  	// #113
    ca84:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca88:	mov	w8, #0x100                 	// #256
    ca8c:	mov	w9, #0x63                  	// #99
    ca90:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ca94:	mov	w8, wzr
    ca98:	mov	w9, #0x35                  	// #53
    ca9c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    caa0:	mov	w8, #0x100                 	// #256
    caa4:	mov	w9, #0x27                  	// #39
    caa8:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    caac:	mov	w8, #0x100                 	// #256
    cab0:	mov	w9, #0x55                  	// #85
    cab4:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cab8:	mov	w8, wzr
    cabc:	mov	w9, #0x52                  	// #82
    cac0:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cac4:	mov	w8, wzr
    cac8:	mov	w9, #0x63                  	// #99
    cacc:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cad0:	mov	w8, #0x100                 	// #256
    cad4:	mov	w9, #0x51                  	// #81
    cad8:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cadc:	mov	w8, wzr
    cae0:	mov	w9, #0x61                  	// #97
    cae4:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cae8:	mov	w8, #0x100                 	// #256
    caec:	mov	w9, #0x53                  	// #83
    caf0:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    caf4:	mov	w8, wzr
    caf8:	mov	w9, #0x25                  	// #37
    cafc:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb00:	mov	w8, #0x100                 	// #256
    cb04:	mov	w9, #0x45                  	// #69
    cb08:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb0c:	mov	w8, wzr
    cb10:	mov	w9, #0x42                  	// #66
    cb14:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb18:	mov	w8, wzr
    cb1c:	mov	w9, #0x53                  	// #83
    cb20:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb24:	mov	w8, #0x100                 	// #256
    cb28:	mov	w9, #0x41                  	// #65
    cb2c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb30:	mov	w8, wzr
    cb34:	mov	w9, #0x51                  	// #81
    cb38:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb3c:	mov	w8, #0x100                 	// #256
    cb40:	mov	w9, #0x43                  	// #67
    cb44:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb48:	mov	w8, #0x100                 	// #256
    cb4c:	mov	w9, #0x57                  	// #87
    cb50:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb54:	mov	w8, wzr
    cb58:	mov	w9, #0x28                  	// #40
    cb5c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb60:	mov	w8, wzr
    cb64:	mov	w9, #0x67                  	// #103
    cb68:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb6c:	mov	w8, wzr
    cb70:	mov	w9, #0x43                  	// #67
    cb74:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb78:	mov	w8, wzr
    cb7c:	mov	w9, #0x65                  	// #101
    cb80:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb84:	mov	w8, #0x100                 	// #256
    cb88:	mov	w9, #0x11                  	// #17
    cb8c:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb90:	mov	w8, #0x100                 	// #256
    cb94:	mov	w9, #0x47                  	// #71
    cb98:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb9c:	mov	w8, wzr
    cba0:	mov	w9, #0x57                  	// #87
    cba4:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cba8:	mov	w8, wzr
    cbac:	mov	w9, #0x55                  	// #85
    cbb0:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbb4:	mov	w8, wzr
    cbb8:	mov	w9, #0x37                  	// #55
    cbbc:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbc0:	mov	w8, wzr
    cbc4:	mov	w9, #0x56                  	// #86
    cbc8:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbcc:	mov	w8, wzr
    cbd0:	mov	w9, #0x47                  	// #71
    cbd4:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbd8:	mov	w8, wzr
    cbdc:	mov	w9, #0x29                  	// #41
    cbe0:	b	cbec <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbe4:	mov	w8, #0x100                 	// #256
    cbe8:	mov	w9, #0x24                  	// #36
    cbec:	ldr	x10, [x21]
    cbf0:	mov	x0, x21
    cbf4:	orr	w22, w8, w9
    cbf8:	ldr	x10, [x10, #136]
    cbfc:	blr	x10
    cc00:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    cc04:	add	x8, x8, #0x0
    cc08:	mov	w9, #0x103                 	// #259
    cc0c:	stp	x8, xzr, [sp, #8]
    cc10:	strh	w9, [sp, #24]
    cc14:	ldr	x0, [x20, #8]
    cc18:	add	x2, sp, #0x8
    cc1c:	mov	w1, #0xa                   	// #10
    cc20:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    cc24:	eor	w23, w0, #0x1
    cc28:	mov	w21, #0x1                   	// #1
    cc2c:	ldr	x0, [sp, #32]
    cc30:	add	x8, sp, #0x20
    cc34:	add	x8, x8, #0x10
    cc38:	cmp	x0, x8
    cc3c:	b.eq	cc44 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x85c>  // b.none
    cc40:	bl	0 <_ZdlPv>
    cc44:	tbz	w23, #0, cc94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    cc48:	ldr	x0, [x20, #8]
    cc4c:	mov	x1, x19
    cc50:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    cc54:	mov	w21, w0
    cc58:	tbnz	w0, #0, cc94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    cc5c:	ldr	x0, [x20, #8]
    cc60:	ldr	x20, [x19]
    cc64:	ldr	x8, [x0]
    cc68:	ldr	x8, [x8, #48]
    cc6c:	blr	x8
    cc70:	mov	x2, x0
    cc74:	mov	x0, x20
    cc78:	mov	w1, w22
    cc7c:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    cc80:	add	x8, x0, #0x8
    cc84:	cmp	x0, #0x0
    cc88:	mov	w21, wzr
    cc8c:	csel	x8, xzr, x8, eq  // eq = none
    cc90:	str	x8, [x19]
    cc94:	and	w0, w21, #0x1
    cc98:	ldp	x20, x19, [sp, #112]
    cc9c:	ldp	x22, x21, [sp, #96]
    cca0:	ldr	x23, [sp, #80]
    cca4:	ldp	x29, x30, [sp, #64]
    cca8:	add	sp, sp, #0x80
    ccac:	ret
    ccb0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ccb4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ccb8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ccbc:	add	x0, x0, #0x0
    ccc0:	add	x1, x1, #0x0
    ccc4:	add	x3, x3, #0x0
    ccc8:	mov	w2, #0x5b                  	// #91
    cccc:	bl	0 <__assert_fail>

000000000000ccd0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    ccd0:	sub	sp, sp, #0x90
    ccd4:	stp	x29, x30, [sp, #64]
    ccd8:	str	x25, [sp, #80]
    ccdc:	stp	x24, x23, [sp, #96]
    cce0:	stp	x22, x21, [sp, #112]
    cce4:	stp	x20, x19, [sp, #128]
    cce8:	add	x29, sp, #0x40
    ccec:	ldr	x21, [x0, #8]
    ccf0:	mov	x20, x0
    ccf4:	mov	x19, x1
    ccf8:	mov	x0, x21
    ccfc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cd00:	ldur	q0, [x0, #8]
    cd04:	mov	x22, x0
    cd08:	add	x8, sp, #0x20
    cd0c:	mov	x0, sp
    cd10:	str	q0, [sp]
    cd14:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    cd18:	ldp	x8, x9, [sp, #32]
    cd1c:	cmp	x9, #0x4
    cd20:	b.eq	cde0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x110>  // b.none
    cd24:	cmp	x9, #0x3
    cd28:	b.ne	cdd8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>  // b.any
    cd2c:	ldrh	w10, [x8]
    cd30:	ldrb	w11, [x8, #2]
    cd34:	mov	w9, #0x736c                	// #29548
    cd38:	mov	w12, #0x6c                  	// #108
    cd3c:	eor	w10, w10, w9
    cd40:	eor	w11, w11, w12
    cd44:	orr	w10, w10, w11
    cd48:	tst	w10, #0xffff
    cd4c:	b.eq	ce78 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a8>  // b.none
    cd50:	ldrh	w11, [x8]
    cd54:	ldrb	w12, [x8, #2]
    cd58:	mov	w10, #0x72                  	// #114
    cd5c:	eor	w9, w11, w9
    cd60:	eor	w11, w12, w10
    cd64:	orr	w9, w9, w11
    cd68:	tst	w9, #0xffff
    cd6c:	b.eq	ce88 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b8>  // b.none
    cd70:	ldrh	w9, [x8]
    cd74:	ldrb	w11, [x8, #2]
    cd78:	mov	w12, #0x7361                	// #29537
    cd7c:	eor	w9, w9, w12
    cd80:	eor	w10, w11, w10
    cd84:	orr	w9, w9, w10
    cd88:	tst	w9, #0xffff
    cd8c:	b.eq	ce98 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.none
    cd90:	ldrh	w9, [x8]
    cd94:	ldrb	w10, [x8, #2]
    cd98:	mov	w11, #0x6f72                	// #28530
    cd9c:	mov	w12, #0x72                  	// #114
    cda0:	eor	w9, w9, w11
    cda4:	eor	w10, w10, w12
    cda8:	orr	w9, w9, w10
    cdac:	tst	w9, #0xffff
    cdb0:	b.eq	cea8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d8>  // b.none
    cdb4:	ldrh	w9, [x8]
    cdb8:	ldrb	w8, [x8, #2]
    cdbc:	mov	w10, #0x736d                	// #29549
    cdc0:	mov	w11, #0x6c                  	// #108
    cdc4:	eor	w9, w9, w10
    cdc8:	eor	w8, w8, w11
    cdcc:	orr	w8, w9, w8
    cdd0:	tst	w8, #0xffff
    cdd4:	b.eq	ceb8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e8>  // b.none
    cdd8:	mov	w20, #0x1                   	// #1
    cddc:	b	d104 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x434>
    cde0:	ldr	w10, [x8]
    cde4:	mov	w9, #0x7873                	// #30835
    cde8:	movk	w9, #0x6274, lsl #16
    cdec:	add	w11, w9, #0x2
    cdf0:	cmp	w10, w11
    cdf4:	b.eq	ce80 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>  // b.none
    cdf8:	ldr	w11, [x8]
    cdfc:	mov	w10, #0x7873                	// #30835
    ce00:	movk	w10, #0x6874, lsl #16
    ce04:	add	w12, w10, #0x2
    ce08:	cmp	w11, w12
    ce0c:	b.eq	ce90 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>  // b.none
    ce10:	ldr	w12, [x8]
    ce14:	mov	w11, #0x7873                	// #30835
    ce18:	movk	w11, #0x7774, lsl #16
    ce1c:	add	w13, w11, #0x2
    ce20:	cmp	w12, w13
    ce24:	b.eq	cea0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>  // b.none
    ce28:	ldr	w13, [x8]
    ce2c:	mov	w12, #0x7873                	// #30835
    ce30:	movk	w12, #0x7874, lsl #16
    ce34:	add	w14, w12, #0x2
    ce38:	cmp	w13, w14
    ce3c:	b.eq	ceb0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e0>  // b.none
    ce40:	ldr	w13, [x8]
    ce44:	cmp	w13, w9
    ce48:	b.eq	cec0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>  // b.none
    ce4c:	ldr	w9, [x8]
    ce50:	cmp	w9, w10
    ce54:	b.eq	cec8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f8>  // b.none
    ce58:	ldr	w9, [x8]
    ce5c:	cmp	w9, w11
    ce60:	b.eq	ced0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>  // b.none
    ce64:	ldr	w8, [x8]
    ce68:	cmp	w8, w12
    ce6c:	b.ne	cdd8 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>  // b.any
    ce70:	mov	w24, #0xc                   	// #12
    ce74:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ce78:	mov	w24, wzr
    ce7c:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ce80:	mov	w24, #0x5                   	// #5
    ce84:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ce88:	mov	w24, #0x1                   	// #1
    ce8c:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ce90:	mov	w24, #0x6                   	// #6
    ce94:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ce98:	mov	w24, #0x2                   	// #2
    ce9c:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    cea0:	mov	w24, #0x7                   	// #7
    cea4:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    cea8:	mov	w24, #0x3                   	// #3
    ceac:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ceb0:	mov	w24, #0x8                   	// #8
    ceb4:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ceb8:	mov	w24, #0x4                   	// #4
    cebc:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    cec0:	mov	w24, #0x9                   	// #9
    cec4:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    cec8:	mov	w24, #0xa                   	// #10
    cecc:	b	ced4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    ced0:	mov	w24, #0xb                   	// #11
    ced4:	mov	x0, x22
    ced8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    cedc:	ldr	x8, [x21]
    cee0:	mov	x22, x0
    cee4:	mov	x0, x21
    cee8:	ldr	x8, [x8, #136]
    ceec:	blr	x8
    cef0:	ldr	x0, [x20, #8]
    cef4:	mov	w1, #0x25                  	// #37
    cef8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    cefc:	tbnz	w0, #0, cf28 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x258>
    cf00:	ldr	x0, [x20, #8]
    cf04:	ldr	x8, [x0]
    cf08:	ldr	x8, [x8, #40]
    cf0c:	blr	x8
    cf10:	ldr	w8, [x0, #16]
    cf14:	cbz	w8, d150 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x480>
    cf18:	ldr	x8, [x0, #8]
    cf1c:	ldr	w8, [x8]
    cf20:	cmp	w8, #0x4
    cf24:	b.ne	d004 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x334>  // b.any
    cf28:	mov	x0, x21
    cf2c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf30:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    cf34:	mov	x23, x0
    cf38:	mov	x0, x21
    cf3c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf40:	ldr	w8, [x0]
    cf44:	cmp	w8, #0x4
    cf48:	b.eq	cf74 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a4>  // b.none
    cf4c:	mov	x0, x21
    cf50:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf54:	ldr	w8, [x0]
    cf58:	cmp	w8, #0x11
    cf5c:	b.eq	cf74 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a4>  // b.none
    cf60:	mov	x0, x21
    cf64:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cf68:	ldr	w8, [x0]
    cf6c:	cmp	w8, #0x2
    cf70:	b.ne	d0d4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x404>  // b.any
    cf74:	ldr	x0, [x20, #8]
    cf78:	add	x1, x29, #0x18
    cf7c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    cf80:	tbnz	w0, #0, d100 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x430>
    cf84:	ldr	x21, [x29, #24]
    cf88:	cbz	x21, d170 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x4a0>
    cf8c:	ldr	w8, [x21]
    cf90:	cmp	w8, #0x1
    cf94:	b.ne	d038 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x368>  // b.any
    cf98:	ldr	x0, [x20, #8]
    cf9c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    cfa0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    cfa4:	ldr	x8, [x20, #8]
    cfa8:	ldr	x23, [x21, #16]
    cfac:	sub	x25, x0, #0x1
    cfb0:	ldr	x9, [x8]
    cfb4:	mov	x0, x8
    cfb8:	ldr	x9, [x9, #48]
    cfbc:	blr	x9
    cfc0:	mov	x21, x0
    cfc4:	mov	w0, #0x70                  	// #112
    cfc8:	bl	0 <_Znwm>
    cfcc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    cfd0:	mov	x8, x0
    cfd4:	add	x9, x9, #0x0
    cfd8:	strb	wzr, [x8, #32]!
    cfdc:	str	x9, [x0]
    cfe0:	mov	w9, #0xa                   	// #10
    cfe4:	str	w9, [x0, #48]
    cfe8:	mov	w9, #0x1                   	// #1
    cfec:	mov	x20, x0
    cff0:	str	x21, [x0, #104]
    cff4:	stp	w24, w23, [x0, #72]
    cff8:	strb	w9, [x0, #80]
    cffc:	stp	x22, x25, [x0, #56]
    d000:	b	d0a4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3d4>
    d004:	cmp	w24, #0x4
    d008:	b.hi	d044 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x374>  // b.pmore
    d00c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d010:	add	x8, x8, #0x0
    d014:	mov	w9, #0x103                 	// #259
    d018:	stp	x8, xzr, [sp]
    d01c:	strh	w9, [sp, #16]
    d020:	ldr	x0, [x20, #8]
    d024:	mov	x1, sp
    d028:	mov	x2, xzr
    d02c:	mov	x3, xzr
    d030:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    d034:	b	d100 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x430>
    d038:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d03c:	add	x8, x8, #0x0
    d040:	b	d0dc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x40c>
    d044:	ldr	x0, [x20, #8]
    d048:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d04c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d050:	ldr	x8, [x20, #8]
    d054:	sub	x23, x0, #0x1
    d058:	ldr	x9, [x8]
    d05c:	mov	x0, x8
    d060:	ldr	x9, [x9, #48]
    d064:	blr	x9
    d068:	mov	x21, x0
    d06c:	mov	w0, #0x70                  	// #112
    d070:	bl	0 <_Znwm>
    d074:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d078:	mov	x8, x0
    d07c:	add	x9, x9, #0x0
    d080:	mov	x20, x0
    d084:	strb	wzr, [x8, #32]!
    d088:	str	x9, [x0]
    d08c:	mov	w9, #0xa                   	// #10
    d090:	str	w9, [x0, #48]
    d094:	str	x21, [x0, #104]
    d098:	stp	w24, wzr, [x0, #72]
    d09c:	strb	wzr, [x0, #80]
    d0a0:	stp	x22, x23, [x0, #56]
    d0a4:	stp	x8, xzr, [x0, #16]
    d0a8:	ldp	w8, w9, [x19, #8]
    d0ac:	cmp	w8, w9
    d0b0:	b.cs	d13c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x46c>  // b.hs, b.nlast
    d0b4:	ldr	x10, [x19]
    d0b8:	cmp	w8, w9
    d0bc:	str	x20, [x10, w8, uxtw #3]
    d0c0:	b.cs	d190 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x4c0>  // b.hs, b.nlast
    d0c4:	mov	w20, wzr
    d0c8:	add	w8, w8, #0x1
    d0cc:	str	w8, [x19, #8]
    d0d0:	b	d104 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x434>
    d0d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d0d8:	add	x8, x8, #0x0
    d0dc:	mov	w9, #0x103                 	// #259
    d0e0:	stp	x8, xzr, [sp]
    d0e4:	strh	w9, [sp, #16]
    d0e8:	ldr	x0, [x20, #8]
    d0ec:	mov	x2, sp
    d0f0:	mov	x1, x23
    d0f4:	mov	x3, xzr
    d0f8:	mov	x4, xzr
    d0fc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    d100:	mov	w20, #0x2                   	// #2
    d104:	ldr	x0, [sp, #32]
    d108:	add	x8, sp, #0x20
    d10c:	add	x8, x8, #0x10
    d110:	cmp	x0, x8
    d114:	b.eq	d11c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x44c>  // b.none
    d118:	bl	0 <_ZdlPv>
    d11c:	mov	w0, w20
    d120:	ldp	x20, x19, [sp, #128]
    d124:	ldp	x22, x21, [sp, #112]
    d128:	ldp	x24, x23, [sp, #96]
    d12c:	ldr	x25, [sp, #80]
    d130:	ldp	x29, x30, [sp, #64]
    d134:	add	sp, sp, #0x90
    d138:	ret
    d13c:	mov	x0, x19
    d140:	mov	x1, xzr
    d144:	bl	0 <LLVMInitializeAArch64AsmParser>
    d148:	ldp	w8, w9, [x19, #8]
    d14c:	b	d0b4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3e4>
    d150:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d154:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d158:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d15c:	add	x0, x0, #0x0
    d160:	add	x1, x1, #0x0
    d164:	add	x3, x3, #0x0
    d168:	mov	w2, #0x99                  	// #153
    d16c:	bl	0 <__assert_fail>
    d170:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d174:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d178:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d17c:	add	x0, x0, #0x0
    d180:	add	x1, x1, #0x0
    d184:	add	x3, x3, #0x0
    d188:	mov	w2, #0x69                  	// #105
    d18c:	bl	0 <__assert_fail>
    d190:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d194:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d198:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d19c:	add	x0, x0, #0x0
    d1a0:	add	x1, x1, #0x0
    d1a4:	add	x3, x3, #0x0
    d1a8:	mov	w2, #0x43                  	// #67
    d1ac:	bl	0 <__assert_fail>

000000000000d1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>:
    d1b0:	sub	sp, sp, #0xe0
    d1b4:	stp	x29, x30, [sp, #128]
    d1b8:	str	x27, [sp, #144]
    d1bc:	stp	x26, x25, [sp, #160]
    d1c0:	stp	x24, x23, [sp, #176]
    d1c4:	stp	x22, x21, [sp, #192]
    d1c8:	stp	x20, x19, [sp, #208]
    d1cc:	add	x29, sp, #0x80
    d1d0:	sub	w8, w2, #0xaf
    d1d4:	cmp	w8, #0x118
    d1d8:	mov	w21, #0x1                   	// #1
    d1dc:	b.hi	e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>  // b.pmore
    d1e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d1e4:	add	x9, x9, #0x0
    d1e8:	adr	x10, d200 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x50>
    d1ec:	ldrh	w11, [x9, x8, lsl #1]
    d1f0:	add	x10, x10, x11, lsl #2
    d1f4:	mov	x19, x1
    d1f8:	mov	x20, x0
    d1fc:	br	x10
    d200:	mov	x0, x20
    d204:	mov	x1, x19
    d208:	ldp	x20, x19, [sp, #208]
    d20c:	ldp	x22, x21, [sp, #192]
    d210:	ldp	x24, x23, [sp, #176]
    d214:	ldp	x26, x25, [sp, #160]
    d218:	ldr	x27, [sp, #144]
    d21c:	ldp	x29, x30, [sp, #128]
    d220:	add	sp, sp, #0xe0
    d224:	b	fc68 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d228:	mov	x0, x20
    d22c:	mov	x1, x19
    d230:	ldp	x20, x19, [sp, #208]
    d234:	ldp	x22, x21, [sp, #192]
    d238:	ldp	x24, x23, [sp, #176]
    d23c:	ldp	x26, x25, [sp, #160]
    d240:	ldr	x27, [sp, #144]
    d244:	ldp	x29, x30, [sp, #128]
    d248:	add	sp, sp, #0xe0
    d24c:	b	10138 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>
    d250:	mov	x0, x20
    d254:	mov	x1, x19
    d258:	ldp	x20, x19, [sp, #208]
    d25c:	ldp	x22, x21, [sp, #192]
    d260:	ldp	x24, x23, [sp, #176]
    d264:	ldp	x26, x25, [sp, #160]
    d268:	ldr	x27, [sp, #144]
    d26c:	ldp	x29, x30, [sp, #128]
    d270:	add	sp, sp, #0xe0
    d274:	b	ffc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d278:	mov	x0, x20
    d27c:	mov	x1, x19
    d280:	ldp	x20, x19, [sp, #208]
    d284:	ldp	x22, x21, [sp, #192]
    d288:	ldp	x24, x23, [sp, #176]
    d28c:	ldp	x26, x25, [sp, #160]
    d290:	ldr	x27, [sp, #144]
    d294:	ldp	x29, x30, [sp, #128]
    d298:	add	sp, sp, #0xe0
    d29c:	b	f500 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d2a0:	mov	x0, x20
    d2a4:	mov	x1, x19
    d2a8:	ldp	x20, x19, [sp, #208]
    d2ac:	ldp	x22, x21, [sp, #192]
    d2b0:	ldp	x24, x23, [sp, #176]
    d2b4:	ldp	x26, x25, [sp, #160]
    d2b8:	ldr	x27, [sp, #144]
    d2bc:	ldp	x29, x30, [sp, #128]
    d2c0:	add	sp, sp, #0xe0
    d2c4:	b	ebbc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d2c8:	mov	x0, x20
    d2cc:	mov	x1, x19
    d2d0:	ldp	x20, x19, [sp, #208]
    d2d4:	ldp	x22, x21, [sp, #192]
    d2d8:	ldp	x24, x23, [sp, #176]
    d2dc:	ldp	x26, x25, [sp, #160]
    d2e0:	ldr	x27, [sp, #144]
    d2e4:	ldp	x29, x30, [sp, #128]
    d2e8:	add	sp, sp, #0xe0
    d2ec:	b	ef88 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>
    d2f0:	mov	x0, x20
    d2f4:	mov	x1, x19
    d2f8:	ldp	x20, x19, [sp, #208]
    d2fc:	ldp	x22, x21, [sp, #192]
    d300:	ldp	x24, x23, [sp, #176]
    d304:	ldp	x26, x25, [sp, #160]
    d308:	ldr	x27, [sp, #144]
    d30c:	ldp	x29, x30, [sp, #128]
    d310:	add	sp, sp, #0xe0
    d314:	b	f2a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d318:	mov	x0, x20
    d31c:	mov	x1, x19
    d320:	ldp	x20, x19, [sp, #208]
    d324:	ldp	x22, x21, [sp, #192]
    d328:	ldp	x24, x23, [sp, #176]
    d32c:	ldp	x26, x25, [sp, #160]
    d330:	ldr	x27, [sp, #144]
    d334:	ldp	x29, x30, [sp, #128]
    d338:	add	sp, sp, #0xe0
    d33c:	b	10624 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d340:	mov	x0, x20
    d344:	mov	x1, x19
    d348:	ldp	x20, x19, [sp, #208]
    d34c:	ldp	x22, x21, [sp, #192]
    d350:	ldp	x24, x23, [sp, #176]
    d354:	ldp	x26, x25, [sp, #160]
    d358:	ldr	x27, [sp, #144]
    d35c:	ldp	x29, x30, [sp, #128]
    d360:	add	sp, sp, #0xe0
    d364:	b	f8f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d368:	ldr	x22, [x20, #8]
    d36c:	mov	x0, x22
    d370:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d374:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d378:	mov	x21, x0
    d37c:	mov	x0, x22
    d380:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d384:	ldr	x8, [x20, #8]
    d388:	mov	x23, x0
    d38c:	mov	w1, #0x25                  	// #37
    d390:	mov	x0, x8
    d394:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d398:	tbnz	w0, #0, d3b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x200>
    d39c:	ldr	w8, [x23]
    d3a0:	cmp	w8, #0x2
    d3a4:	b.eq	dfbc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe0c>  // b.none
    d3a8:	cmp	w8, #0x4
    d3ac:	b.ne	e068 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xeb8>  // b.any
    d3b0:	ldr	x0, [x20, #8]
    d3b4:	add	x1, x29, #0x18
    d3b8:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d3bc:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    d3c0:	ldr	x8, [x29, #24]
    d3c4:	cbz	x8, ea98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>
    d3c8:	ldr	w9, [x8]
    d3cc:	cmp	w9, #0x1
    d3d0:	b.ne	dcac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xafc>  // b.any
    d3d4:	ldr	x22, [x8, #16]
    d3d8:	cmp	w22, #0x10
    d3dc:	b.cc	e178 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfc8>  // b.lo, b.ul, b.last
    d3e0:	add	x8, sp, #0x8
    d3e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d3e8:	mov	w9, #0x3531                	// #13617
    d3ec:	b	d854 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x6a4>
    d3f0:	ldr	x0, [x20, #8]
    d3f4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d3f8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d3fc:	mov	x22, x0
    d400:	sub	x1, x29, #0x38
    d404:	mov	x0, x20
    d408:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    d40c:	mov	w21, w0
    d410:	cbnz	w0, e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    d414:	ldr	x0, [x20, #8]
    d418:	ldur	w25, [x29, #-56]
    d41c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d420:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d424:	ldr	x8, [x20, #8]
    d428:	mov	x23, x0
    d42c:	ldr	x9, [x8]
    d430:	mov	x0, x8
    d434:	ldr	x9, [x9, #48]
    d438:	blr	x9
    d43c:	mov	x24, x0
    d440:	mov	w0, #0x70                  	// #112
    d444:	bl	0 <_Znwm>
    d448:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d44c:	mov	x8, x0
    d450:	add	x9, x9, #0x0
    d454:	strb	wzr, [x8, #32]!
    d458:	str	x9, [x0]
    d45c:	mov	w9, #0x3                   	// #3
    d460:	mov	x20, x0
    d464:	str	w9, [x0, #48]
    d468:	mov	w9, #0x2                   	// #2
    d46c:	str	x24, [x0, #104]
    d470:	b	d92c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x77c>
    d474:	ldr	x22, [x20, #8]
    d478:	mov	x0, x22
    d47c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d480:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d484:	mov	x21, x0
    d488:	mov	x0, x22
    d48c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d490:	ldr	w8, [x0]
    d494:	cmp	w8, #0x2
    d498:	b.ne	de24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc74>  // b.any
    d49c:	mov	x0, x22
    d4a0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d4a4:	ldr	w8, [x0]
    d4a8:	cmp	w8, #0x3
    d4ac:	b.eq	ddc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc10>  // b.none
    d4b0:	cmp	w8, #0x2
    d4b4:	b.ne	eac8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1918>  // b.any
    d4b8:	ldp	x8, x9, [x0, #8]
    d4bc:	b	dde4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc34>
    d4c0:	ldr	x21, [x20, #8]
    d4c4:	mov	x0, x21
    d4c8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d4cc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d4d0:	ldr	x8, [x20, #8]
    d4d4:	mov	x22, x0
    d4d8:	mov	w1, #0x25                  	// #37
    d4dc:	mov	x0, x8
    d4e0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d4e4:	ldr	x8, [x20, #8]
    d4e8:	mov	w23, w0
    d4ec:	mov	w1, #0xd                   	// #13
    d4f0:	mov	x0, x8
    d4f4:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d4f8:	mov	w24, w0
    d4fc:	mov	x0, x21
    d500:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d504:	ldr	w8, [x0]
    d508:	mov	x26, x0
    d50c:	cmp	w8, #0x4
    d510:	b.eq	dcb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb08>  // b.none
    d514:	cmp	w8, #0x6
    d518:	b.eq	dcd8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb28>  // b.none
    d51c:	tbz	w23, #0, ddb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc08>
    d520:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d524:	add	x8, x8, #0x0
    d528:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    d52c:	ldr	x22, [x20, #8]
    d530:	mov	x0, x22
    d534:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d538:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d53c:	mov	x21, x0
    d540:	mov	x0, x22
    d544:	str	xzr, [sp, #40]
    d548:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d54c:	ldr	w8, [x0]
    d550:	cmp	w8, #0x25
    d554:	b.ne	d568 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x3b8>  // b.any
    d558:	ldr	x8, [x22]
    d55c:	mov	x0, x22
    d560:	ldr	x8, [x8, #136]
    d564:	blr	x8
    d568:	add	x1, sp, #0x28
    d56c:	mov	x0, x20
    d570:	bl	c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    d574:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    d578:	ldr	x0, [sp, #40]
    d57c:	sub	x1, x29, #0x18
    d580:	add	x2, x29, #0x18
    d584:	add	x3, sp, #0x8
    d588:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    d58c:	tbz	w0, #0, da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>
    d590:	ldrh	w9, [x29, #24]
    d594:	ldur	w8, [x29, #-24]
    d598:	cbnz	w9, e14c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf9c>
    d59c:	cmp	w8, #0xfff
    d5a0:	b.ne	e14c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf9c>  // b.any
    d5a4:	ldr	x0, [x20, #8]
    d5a8:	ldr	x22, [sp, #40]
    d5ac:	ldr	x8, [x0]
    d5b0:	ldr	x8, [x8, #48]
    d5b4:	blr	x8
    d5b8:	mov	x2, x0
    d5bc:	mov	w1, #0x11                  	// #17
    d5c0:	b	da0c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x85c>
    d5c4:	ldr	x0, [x20, #8]
    d5c8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d5cc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d5d0:	mov	x22, x0
    d5d4:	add	x1, sp, #0x8
    d5d8:	mov	x0, x20
    d5dc:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    d5e0:	mov	w21, w0
    d5e4:	cbnz	w0, e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    d5e8:	ldr	x0, [x20, #8]
    d5ec:	mov	w1, #0x19                  	// #25
    d5f0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d5f4:	tbz	w0, #0, df4c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd9c>
    d5f8:	ldr	x0, [x20, #8]
    d5fc:	mov	w1, #0x25                  	// #37
    d600:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d604:	ldr	x0, [x20, #8]
    d608:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d60c:	ldr	w8, [x0]
    d610:	cmp	w8, #0x4
    d614:	b.ne	d644 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x494>  // b.any
    d618:	ldr	x0, [x20, #8]
    d61c:	add	x1, sp, #0x28
    d620:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d624:	tbnz	w0, #0, d644 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x494>
    d628:	ldr	x8, [sp, #40]
    d62c:	cbz	x8, ea98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>
    d630:	ldr	w9, [x8]
    d634:	cmp	w9, #0x1
    d638:	b.ne	d644 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x494>  // b.any
    d63c:	ldr	x8, [x8, #16]
    d640:	cbz	x8, df4c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd9c>
    d644:	ldr	x0, [x20, #8]
    d648:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d64c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d650:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d654:	add	x8, x8, #0x0
    d658:	mov	w9, #0x103                 	// #259
    d65c:	stp	x8, xzr, [x29, #-56]
    d660:	sturh	w9, [x29, #-40]
    d664:	ldr	x8, [x20, #8]
    d668:	mov	x1, x0
    d66c:	sub	x2, x29, #0x38
    d670:	mov	x0, x8
    d674:	b	de44 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc94>
    d678:	ldr	x22, [x20, #8]
    d67c:	mov	x0, x22
    d680:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d684:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d688:	mov	x21, x0
    d68c:	mov	x0, x22
    d690:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d694:	ldr	w8, [x0]
    d698:	cmp	w8, #0x2
    d69c:	b.ne	db34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>  // b.any
    d6a0:	mov	x23, x0
    d6a4:	ldr	x0, [x0, #8]
    d6a8:	ldr	x1, [x23, #16]
    d6ac:	bl	0 <_ZN4llvm14AArch64PSBHint15lookupPSBByNameENS_9StringRefE>
    d6b0:	cbz	x0, db34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>
    d6b4:	ldr	x8, [x22]
    d6b8:	mov	x24, x0
    d6bc:	mov	x0, x22
    d6c0:	ldr	x8, [x8, #136]
    d6c4:	blr	x8
    d6c8:	ldr	x0, [x20, #8]
    d6cc:	ldrh	w24, [x24, #8]
    d6d0:	ldp	x25, x23, [x23, #8]
    d6d4:	ldr	x8, [x0]
    d6d8:	ldr	x8, [x8, #48]
    d6dc:	blr	x8
    d6e0:	mov	x22, x0
    d6e4:	mov	w0, #0x70                  	// #112
    d6e8:	bl	0 <_Znwm>
    d6ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d6f0:	mov	x8, x0
    d6f4:	add	x9, x9, #0x0
    d6f8:	mov	x20, x0
    d6fc:	strb	wzr, [x8, #32]!
    d700:	str	x9, [x0]
    d704:	mov	w9, #0xd                   	// #13
    d708:	b	e018 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe68>
    d70c:	ldr	x21, [x20, #8]
    d710:	mov	x0, x21
    d714:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d718:	ldr	x8, [x20, #184]
    d71c:	mov	x22, x0
    d720:	cmp	x8, #0x3
    d724:	b.ne	d75c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x5ac>  // b.any
    d728:	ldr	x8, [x20, #176]
    d72c:	mov	w10, #0x7374                	// #29556
    d730:	mov	w11, #0x62                  	// #98
    d734:	ldrh	w9, [x8]
    d738:	ldrb	w8, [x8, #2]
    d73c:	eor	w9, w9, w10
    d740:	eor	w8, w8, w11
    d744:	orr	w8, w9, w8
    d748:	tst	w8, #0xffff
    d74c:	b.ne	d75c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x5ac>  // b.any
    d750:	ldr	w8, [x22]
    d754:	cmp	w8, #0x2
    d758:	b.ne	e7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1644>  // b.any
    d75c:	ldr	x0, [x20, #8]
    d760:	mov	w1, #0x25                  	// #37
    d764:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d768:	tbnz	w0, #0, d780 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x5d0>
    d76c:	ldr	w8, [x22]
    d770:	cmp	w8, #0x2
    d774:	b.eq	e0b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf08>  // b.none
    d778:	cmp	w8, #0x4
    d77c:	b.ne	db34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>  // b.any
    d780:	ldr	x0, [x20, #8]
    d784:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d788:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d78c:	ldr	x8, [x20, #8]
    d790:	mov	x21, x0
    d794:	add	x1, sp, #0x28
    d798:	mov	x0, x8
    d79c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d7a0:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    d7a4:	ldr	x22, [sp, #40]
    d7a8:	cbz	x22, ea98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>
    d7ac:	ldr	w8, [x22]
    d7b0:	cmp	w8, #0x1
    d7b4:	b.ne	e140 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf90>  // b.any
    d7b8:	ldr	x0, [x22, #16]
    d7bc:	cmp	x0, #0x10
    d7c0:	b.cc	e1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1008>  // b.lo, b.ul, b.last
    d7c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d7c8:	add	x8, x8, #0x0
    d7cc:	b	de2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc7c>
    d7d0:	ldr	x22, [x20, #8]
    d7d4:	mov	x0, x22
    d7d8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d7dc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d7e0:	mov	x21, x0
    d7e4:	mov	x0, x22
    d7e8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d7ec:	ldr	x8, [x20, #8]
    d7f0:	mov	x23, x0
    d7f4:	mov	w1, #0x25                  	// #37
    d7f8:	mov	x0, x8
    d7fc:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d800:	tbnz	w0, #0, d818 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x668>
    d804:	ldr	w8, [x23]
    d808:	cmp	w8, #0x2
    d80c:	b.eq	e05c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xeac>  // b.none
    d810:	cmp	w8, #0x4
    d814:	b.ne	e068 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xeb8>  // b.any
    d818:	ldr	x0, [x20, #8]
    d81c:	add	x1, x29, #0x18
    d820:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d824:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    d828:	ldr	x8, [x29, #24]
    d82c:	cbz	x8, ea98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>
    d830:	ldr	w9, [x8]
    d834:	cmp	w9, #0x1
    d838:	b.ne	dcac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xafc>  // b.any
    d83c:	ldr	x22, [x8, #16]
    d840:	cmp	w22, #0x20
    d844:	b.cc	e19c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfec>  // b.lo, b.ul, b.last
    d848:	add	x8, sp, #0x8
    d84c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d850:	mov	w9, #0x3133                	// #12595
    d854:	mov	w10, #0x2                   	// #2
    d858:	add	x19, x8, #0x10
    d85c:	add	x3, x3, #0x0
    d860:	add	x0, sp, #0x8
    d864:	mov	w4, #0x22                  	// #34
    d868:	mov	x1, xzr
    d86c:	mov	x2, xzr
    d870:	strh	w9, [sp, #24]
    d874:	stp	x19, x10, [sp, #8]
    d878:	strb	wzr, [sp, #26]
    d87c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    d880:	add	x8, sp, #0x28
    d884:	add	x21, x8, #0x10
    d888:	str	x21, [sp, #40]
    d88c:	mov	x8, x0
    d890:	ldr	x9, [x8], #16
    d894:	cmp	x9, x8
    d898:	b.eq	e1d4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1024>  // b.none
    d89c:	str	x9, [sp, #40]
    d8a0:	ldr	x9, [x0, #16]
    d8a4:	str	x9, [sp, #56]
    d8a8:	b	e1dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x102c>
    d8ac:	ldr	x0, [x20, #8]
    d8b0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d8b4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d8b8:	mov	x22, x0
    d8bc:	sub	x1, x29, #0x38
    d8c0:	mov	x0, x20
    d8c4:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    d8c8:	mov	w21, w0
    d8cc:	cbnz	w0, e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    d8d0:	ldr	x0, [x20, #8]
    d8d4:	ldur	w25, [x29, #-56]
    d8d8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d8dc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d8e0:	ldr	x8, [x20, #8]
    d8e4:	mov	x23, x0
    d8e8:	ldr	x9, [x8]
    d8ec:	mov	x0, x8
    d8f0:	ldr	x9, [x9, #48]
    d8f4:	blr	x9
    d8f8:	mov	x24, x0
    d8fc:	mov	w0, #0x70                  	// #112
    d900:	bl	0 <_Znwm>
    d904:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d908:	mov	x8, x0
    d90c:	add	x9, x9, #0x0
    d910:	strb	wzr, [x8, #32]!
    d914:	str	x9, [x0]
    d918:	mov	w9, #0x3                   	// #3
    d91c:	mov	x20, x0
    d920:	str	w9, [x0, #48]
    d924:	str	x24, [x0, #104]
    d928:	mov	w9, #0x1                   	// #1
    d92c:	stp	w25, wzr, [x0, #72]
    d930:	stp	wzr, w9, [x0, #80]
    d934:	strb	wzr, [x0, #96]
    d938:	str	xzr, [x0, #88]
    d93c:	stp	x22, x23, [x0, #56]
    d940:	stp	x8, xzr, [x0, #16]
    d944:	ldp	w8, w9, [x19, #8]
    d948:	cmp	w8, w9
    d94c:	b.cs	e9ec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x183c>  // b.hs, b.nlast
    d950:	ldr	x10, [x19]
    d954:	cmp	w8, w9
    d958:	str	x20, [x10, w8, uxtw #3]
    d95c:	b.cc	e050 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xea0>  // b.lo, b.ul, b.last
    d960:	b	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>
    d964:	ldr	x0, [x20, #8]
    d968:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d96c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d970:	str	xzr, [sp, #40]
    d974:	ldr	x8, [x20, #8]
    d978:	mov	x21, x0
    d97c:	mov	x0, x8
    d980:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d984:	ldr	w8, [x0]
    d988:	cmp	w8, #0x13
    d98c:	b.eq	ddb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc08>  // b.none
    d990:	ldr	x0, [x20, #8]
    d994:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d998:	ldr	w8, [x0]
    d99c:	cmp	w8, #0x25
    d9a0:	b.ne	d9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x804>  // b.any
    d9a4:	ldr	x0, [x20, #8]
    d9a8:	ldr	x8, [x0]
    d9ac:	ldr	x8, [x8, #136]
    d9b0:	blr	x8
    d9b4:	add	x1, sp, #0x28
    d9b8:	mov	x0, x20
    d9bc:	bl	c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    d9c0:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    d9c4:	ldr	x0, [sp, #40]
    d9c8:	sub	x1, x29, #0x18
    d9cc:	add	x2, x29, #0x18
    d9d0:	add	x3, sp, #0x8
    d9d4:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
    d9d8:	tbz	w0, #0, da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>
    d9dc:	ldrh	w8, [x29, #24]
    d9e0:	cbnz	w8, e320 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1170>
    d9e4:	ldur	w8, [x29, #-24]
    d9e8:	cmp	w8, #0xfff
    d9ec:	b.ne	e320 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1170>  // b.any
    d9f0:	ldr	x0, [x20, #8]
    d9f4:	ldr	x22, [sp, #40]
    d9f8:	ldr	x8, [x0]
    d9fc:	ldr	x8, [x8, #48]
    da00:	blr	x8
    da04:	mov	x2, x0
    da08:	mov	w1, #0x1                   	// #1
    da0c:	mov	x0, x22
    da10:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    da14:	add	x8, x0, #0x8
    da18:	cmp	x0, #0x0
    da1c:	csel	x8, xzr, x8, eq  // eq = none
    da20:	str	x8, [sp, #40]
    da24:	ldr	x0, [x20, #8]
    da28:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da2c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    da30:	ldr	x8, [x20, #8]
    da34:	ldr	x23, [sp, #40]
    da38:	sub	x24, x0, #0x1
    da3c:	ldr	x9, [x8]
    da40:	mov	x0, x8
    da44:	ldr	x9, [x9, #48]
    da48:	blr	x9
    da4c:	mov	x22, x0
    da50:	mov	w0, #0x70                  	// #112
    da54:	bl	0 <_Znwm>
    da58:	mov	x8, x0
    da5c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    da60:	mov	x20, x0
    da64:	add	x9, x9, #0x0
    da68:	strb	wzr, [x8, #32]!
    da6c:	str	x9, [x0]
    da70:	str	wzr, [x0, #48]
    da74:	str	x22, [x0, #104]
    da78:	stp	x24, x23, [x0, #64]
    da7c:	b	e028 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe78>
    da80:	ldr	x22, [x20, #8]
    da84:	mov	x0, x22
    da88:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da8c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    da90:	mov	x21, x0
    da94:	mov	x0, x22
    da98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da9c:	ldr	w8, [x0]
    daa0:	cmp	w8, #0x2
    daa4:	b.ne	db34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>  // b.any
    daa8:	mov	x23, x0
    daac:	ldr	x0, [x0, #8]
    dab0:	ldr	x1, [x23, #16]
    dab4:	bl	0 <_ZN4llvm14AArch64BTIHint15lookupBTIByNameENS_9StringRefE>
    dab8:	cbz	x0, db34 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>
    dabc:	ldr	x8, [x22]
    dac0:	mov	x24, x0
    dac4:	mov	x0, x22
    dac8:	ldr	x8, [x8, #136]
    dacc:	blr	x8
    dad0:	ldr	x0, [x20, #8]
    dad4:	ldrh	w24, [x24, #8]
    dad8:	ldp	x25, x23, [x23, #8]
    dadc:	ldr	x8, [x0]
    dae0:	ldr	x8, [x8, #48]
    dae4:	blr	x8
    dae8:	mov	x22, x0
    daec:	mov	w0, #0x70                  	// #112
    daf0:	bl	0 <_Znwm>
    daf4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    daf8:	mov	x8, x0
    dafc:	add	x9, x9, #0x0
    db00:	strb	wzr, [x8, #32]!
    db04:	str	x9, [x0]
    db08:	mov	w9, #0xe                   	// #14
    db0c:	str	w9, [x0, #48]
    db10:	lsl	w9, w24, #1
    db14:	orr	w9, w9, #0x20
    db18:	mov	x20, x0
    db1c:	str	x22, [x0, #104]
    db20:	stp	x21, x25, [x0, #64]
    db24:	str	x21, [x0, #56]
    db28:	stp	x8, xzr, [x0, #16]
    db2c:	stp	w23, w9, [x0, #80]
    db30:	b	e030 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe80>
    db34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    db38:	add	x8, x8, #0x0
    db3c:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    db40:	ldr	x22, [x20, #8]
    db44:	mov	x0, x22
    db48:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db4c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    db50:	mov	x21, x0
    db54:	mov	x0, x22
    db58:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db5c:	ldr	w8, [x0]
    db60:	cmp	w8, #0x2
    db64:	b.eq	dd08 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb58>  // b.none
    db68:	cmp	w8, #0x25
    db6c:	b.ne	ddb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc08>  // b.any
    db70:	ldr	x8, [x22]
    db74:	mov	x0, x22
    db78:	ldr	x8, [x8, #136]
    db7c:	blr	x8
    db80:	ldr	x0, [x20, #8]
    db84:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db88:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    db8c:	mov	x21, x0
    db90:	sub	x1, x29, #0x38
    db94:	mov	x0, x22
    db98:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    db9c:	tbnz	w0, #0, e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    dba0:	ldur	x8, [x29, #-56]
    dba4:	cbz	x8, ea98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>
    dba8:	ldr	w9, [x8]
    dbac:	cmp	w9, #0x1
    dbb0:	b.ne	e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>  // b.any
    dbb4:	ldr	x22, [x8, #16]
    dbb8:	b	dd38 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb88>
    dbbc:	ldr	x0, [x20, #8]
    dbc0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dbc4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dbc8:	mov	x22, x0
    dbcc:	add	x1, sp, #0x8
    dbd0:	sub	x2, x29, #0x38
    dbd4:	mov	w3, #0x2                   	// #2
    dbd8:	mov	x0, x20
    dbdc:	stp	xzr, xzr, [x29, #-56]
    dbe0:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    dbe4:	mov	w21, w0
    dbe8:	cbnz	w0, e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    dbec:	ldp	x0, x1, [x29, #-56]
    dbf0:	add	x8, sp, #0x28
    dbf4:	mov	w2, #0x2                   	// #2
    dbf8:	mov	w24, #0x2                   	// #2
    dbfc:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    dc00:	ldrb	w8, [sp, #48]
    dc04:	cbz	w8, ddb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc08>
    dc08:	ldr	x0, [x20, #8]
    dc0c:	ldr	w25, [sp, #44]
    dc10:	ldr	w26, [sp, #8]
    dc14:	ldr	x8, [x0]
    dc18:	ldr	x8, [x8, #48]
    dc1c:	blr	x8
    dc20:	mov	x23, x0
    dc24:	mov	w0, #0x70                  	// #112
    dc28:	bl	0 <_Znwm>
    dc2c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    dc30:	mov	x8, x0
    dc34:	add	x9, x9, #0x0
    dc38:	strb	wzr, [x8, #32]!
    dc3c:	str	x9, [x0]
    dc40:	mov	w9, #0x3                   	// #3
    dc44:	str	w9, [x0, #48]
    dc48:	str	x23, [x0, #104]
    dc4c:	stp	w26, w24, [x0, #72]
    dc50:	stur	xzr, [x0, #89]
    dc54:	stur	xzr, [x0, #84]
    dc58:	stp	x22, x22, [x0, #56]
    dc5c:	str	w25, [x0, #80]
    dc60:	stp	x8, xzr, [x0, #16]
    dc64:	ldp	w8, w9, [x19, #8]
    dc68:	mov	x21, x0
    dc6c:	cmp	w8, w9
    dc70:	b.cs	ea00 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1850>  // b.hs, b.nlast
    dc74:	ldr	x10, [x19]
    dc78:	cmp	w8, w9
    dc7c:	str	x21, [x10, w8, uxtw #3]
    dc80:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    dc84:	add	w8, w8, #0x1
    dc88:	mov	x0, x20
    dc8c:	mov	x1, x19
    dc90:	str	w8, [x19, #8]
    dc94:	bl	c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    dc98:	cmp	w0, #0x2
    dc9c:	cset	w8, eq  // eq = none
    dca0:	lsl	w21, w8, #1
    dca4:	strb	wzr, [sp, #48]
    dca8:	b	e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    dcac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    dcb0:	add	x8, x8, #0x0
    dcb4:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    dcb8:	ldr	x8, [x26, #16]
    dcbc:	cmp	x8, #0x2
    dcc0:	b.cc	dcd8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb28>  // b.lo, b.ul, b.last
    dcc4:	ldr	x8, [x26, #8]
    dcc8:	mov	w9, #0x7830                	// #30768
    dccc:	ldrh	w8, [x8]
    dcd0:	cmp	w8, w9
    dcd4:	b.eq	e298 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10e8>  // b.none
    dcd8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    dcdc:	sub	x8, x29, #0x38
    dce0:	mov	x27, x0
    dce4:	add	x25, x8, #0x8
    dce8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    dcec:	mov	x23, x0
    dcf0:	cmp	x0, x27
    dcf4:	b.eq	de54 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xca4>  // b.none
    dcf8:	mov	x0, x25
    dcfc:	mov	x1, x27
    dd00:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
    dd04:	b	de60 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcb0>
    dd08:	ldp	x8, x1, [x0, #8]
    dd0c:	mov	x0, x8
    dd10:	bl	0 <_ZN4llvm21AArch64SVEPredPattern22lookupSVEPREDPATByNameENS_9StringRefE>
    dd14:	cbz	x0, ddb8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc08>
    dd18:	ldr	x8, [x22]
    dd1c:	mov	x23, x0
    dd20:	mov	x0, x22
    dd24:	ldr	x8, [x8, #136]
    dd28:	blr	x8
    dd2c:	ldrh	w22, [x23, #8]
    dd30:	cmp	x22, #0x20
    dd34:	b.cs	eb10 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1960>  // b.hs, b.nlast
    dd38:	ldr	x0, [x20, #8]
    dd3c:	ldr	x8, [x0]
    dd40:	ldr	x8, [x8, #48]
    dd44:	blr	x8
    dd48:	mov	x1, x0
    dd4c:	mov	x0, x22
    dd50:	mov	w2, wzr
    dd54:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    dd58:	ldr	x8, [x20, #8]
    dd5c:	mov	x22, x0
    dd60:	mov	x0, x8
    dd64:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dd68:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dd6c:	ldr	x8, [x20, #8]
    dd70:	mov	x23, x0
    dd74:	ldr	x9, [x8]
    dd78:	mov	x0, x8
    dd7c:	ldr	x9, [x9, #48]
    dd80:	blr	x9
    dd84:	mov	x24, x0
    dd88:	mov	w0, #0x70                  	// #112
    dd8c:	bl	0 <_Znwm>
    dd90:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    dd94:	mov	x8, x0
    dd98:	add	x9, x9, #0x0
    dd9c:	mov	x20, x0
    dda0:	strb	wzr, [x8, #32]!
    dda4:	str	x9, [x0]
    dda8:	str	wzr, [x0, #48]
    ddac:	str	x24, [x0, #104]
    ddb0:	stp	x23, x22, [x0, #64]
    ddb4:	b	e028 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe78>
    ddb8:	mov	w21, #0x1                   	// #1
    ddbc:	b	e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    ddc0:	ldp	x8, x9, [x0, #8]
    ddc4:	subs	x10, x9, #0x1
    ddc8:	cset	w11, cs  // cs = hs, nlast
    ddcc:	cinc	x8, x8, cs  // cs = hs, nlast
    ddd0:	cmp	x10, x11
    ddd4:	csel	x10, x10, x11, hi  // hi = pmore
    ddd8:	cmp	x9, x10
    dddc:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    dde0:	sub	x9, x9, x11
    dde4:	cbz	x9, eae8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1938>
    dde8:	ldrb	w10, [x8]
    ddec:	orr	w10, w10, #0x20
    ddf0:	cmp	w10, #0x63
    ddf4:	b.ne	de24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc74>  // b.any
    ddf8:	add	x0, x8, #0x1
    ddfc:	sub	x1, x9, #0x1
    de00:	sub	x3, x29, #0x38
    de04:	mov	w2, #0xa                   	// #10
    de08:	bl	0 <_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy>
    de0c:	tbnz	w0, #0, de24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc74>
    de10:	ldur	x24, [x29, #-56]
    de14:	lsr	x8, x24, #32
    de18:	cbnz	x8, de24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc74>
    de1c:	cmp	w24, #0x10
    de20:	b.cc	e5c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1410>  // b.lo, b.ul, b.last
    de24:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    de28:	add	x8, x8, #0x0
    de2c:	mov	w9, #0x103                 	// #259
    de30:	stp	x8, xzr, [x29, #-56]
    de34:	sturh	w9, [x29, #-40]
    de38:	ldr	x0, [x20, #8]
    de3c:	sub	x2, x29, #0x38
    de40:	mov	x1, x21
    de44:	mov	x3, xzr
    de48:	mov	x4, xzr
    de4c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    de50:	b	e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    de54:	mov	x0, x25
    de58:	mov	x1, x27
    de5c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
    de60:	ldp	x1, x2, [x26, #8]
    de64:	sub	x8, x29, #0x18
    de68:	sub	x0, x29, #0x38
    de6c:	mov	w3, #0x3                   	// #3
    de70:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
    de74:	ldurb	w8, [x29, #-16]
    de78:	and	w9, w8, #0xfffffffd
    de7c:	sturb	w9, [x29, #-16]
    de80:	tbnz	w8, #0, de8c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcdc>
    de84:	mov	w8, #0x1                   	// #1
    de88:	b	de98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xce8>
    de8c:	ldur	x8, [x29, #-24]
    de90:	stur	xzr, [x29, #-24]
    de94:	orr	x8, x8, #0x1
    de98:	tst	x8, #0xfffffffffffffffe
    de9c:	and	x26, x8, #0xfffffffffffffffe
    dea0:	cset	w9, ne  // ne = any
    dea4:	orr	x9, x26, x9
    dea8:	str	x9, [x29, #24]
    deac:	cbz	x26, ded0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd20>
    deb0:	orr	x8, x8, #0x1
    deb4:	add	x0, sp, #0x28
    deb8:	str	x8, [sp, #40]
    debc:	str	xzr, [x29, #24]
    dec0:	bl	0 <LLVMInitializeAArch64AsmParser>
    dec4:	ldr	x8, [sp, #40]
    dec8:	cbnz	x8, eb08 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1958>
    decc:	ldr	x9, [x29, #24]
    ded0:	cbnz	x9, eac0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1910>
    ded4:	cbz	x26, df30 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd80>
    ded8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    dedc:	add	x8, x8, #0x0
    dee0:	mov	w9, #0x103                 	// #259
    dee4:	stp	x8, xzr, [sp, #40]
    dee8:	strh	w9, [sp, #56]
    deec:	ldr	x0, [x20, #8]
    def0:	add	x1, sp, #0x28
    def4:	mov	x2, xzr
    def8:	mov	x3, xzr
    defc:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    df00:	ldurb	w8, [x29, #-16]
    df04:	tbnz	w8, #1, eab8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1908>
    df08:	tbz	w8, #0, df24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd74>
    df0c:	ldur	x0, [x29, #-24]
    df10:	cbz	x0, df20 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd70>
    df14:	ldr	x8, [x0]
    df18:	ldr	x8, [x8, #8]
    df1c:	blr	x8
    df20:	stur	xzr, [x29, #-24]
    df24:	sub	x0, x29, #0x38
    df28:	bl	0 <LLVMInitializeAArch64AsmParser>
    df2c:	b	e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    df30:	tbz	w24, #0, e338 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1188>
    df34:	ldur	x8, [x29, #-48]
    df38:	cmp	x23, x8
    df3c:	b.eq	e32c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x117c>  // b.none
    df40:	mov	x0, x25
    df44:	bl	0 <_ZN4llvm6detail9IEEEFloat10changeSignEv>
    df48:	b	e338 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1188>
    df4c:	ldr	x0, [x20, #8]
    df50:	ldr	w24, [sp, #8]
    df54:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    df58:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    df5c:	ldr	x8, [x20, #8]
    df60:	mov	x21, x0
    df64:	ldr	x9, [x8]
    df68:	mov	x0, x8
    df6c:	ldr	x9, [x9, #48]
    df70:	blr	x9
    df74:	mov	x23, x0
    df78:	mov	w0, #0x70                  	// #112
    df7c:	bl	0 <_Znwm>
    df80:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    df84:	mov	x8, x0
    df88:	add	x9, x9, #0x0
    df8c:	strb	wzr, [x8, #32]!
    df90:	str	x9, [x0]
    df94:	mov	w9, #0x3                   	// #3
    df98:	mov	x20, x0
    df9c:	str	w9, [x0, #48]
    dfa0:	str	x23, [x0, #104]
    dfa4:	str	w24, [x0, #72]
    dfa8:	stur	xzr, [x0, #89]
    dfac:	stur	xzr, [x0, #84]
    dfb0:	stur	xzr, [x0, #76]
    dfb4:	stp	x22, x21, [x0, #56]
    dfb8:	b	e02c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe7c>
    dfbc:	ldp	x0, x1, [x23, #8]
    dfc0:	bl	0 <_ZN4llvm14AArch64SVEPRFM19lookupSVEPRFMByNameENS_9StringRefE>
    dfc4:	cbz	x0, e068 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xeb8>
    dfc8:	ldr	x8, [x22]
    dfcc:	ldrh	w24, [x0, #8]
    dfd0:	mov	x0, x22
    dfd4:	ldr	x8, [x8, #136]
    dfd8:	blr	x8
    dfdc:	ldr	x0, [x20, #8]
    dfe0:	ldp	x25, x23, [x23, #8]
    dfe4:	ldr	x8, [x0]
    dfe8:	ldr	x8, [x8, #48]
    dfec:	blr	x8
    dff0:	mov	x22, x0
    dff4:	mov	w0, #0x70                  	// #112
    dff8:	bl	0 <_Znwm>
    dffc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e000:	mov	x8, x0
    e004:	add	x9, x9, #0x0
    e008:	mov	x20, x0
    e00c:	strb	wzr, [x8, #32]!
    e010:	str	x9, [x0]
    e014:	mov	w9, #0x9                   	// #9
    e018:	str	w9, [x0, #48]
    e01c:	str	x22, [x0, #104]
    e020:	stp	x21, x25, [x0, #64]
    e024:	stp	w23, w24, [x0, #80]
    e028:	str	x21, [x0, #56]
    e02c:	stp	x8, xzr, [x0, #16]
    e030:	ldp	w8, w9, [x19, #8]
    e034:	cmp	w8, w9
    e038:	b.cs	e9d8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1828>  // b.hs, b.nlast
    e03c:	ldr	x10, [x19]
    e040:	cmp	w8, w9
    e044:	str	x20, [x10, w8, uxtw #3]
    e048:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e04c:	mov	w21, wzr
    e050:	add	w8, w8, #0x1
    e054:	str	w8, [x19, #8]
    e058:	b	e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    e05c:	ldp	x0, x1, [x23, #8]
    e060:	bl	0 <_ZN4llvm11AArch64PRFM16lookupPRFMByNameENS_9StringRefE>
    e064:	cbnz	x0, dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe18>
    e068:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e06c:	add	x8, x8, #0x0
    e070:	mov	w9, #0x103                 	// #259
    e074:	stp	x8, xzr, [x29, #-56]
    e078:	sturh	w9, [x29, #-40]
    e07c:	ldr	x0, [x20, #8]
    e080:	sub	x1, x29, #0x38
    e084:	mov	x2, xzr
    e088:	mov	x3, xzr
    e08c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e090:	mov	w21, #0x2                   	// #2
    e094:	mov	w0, w21
    e098:	ldp	x20, x19, [sp, #208]
    e09c:	ldp	x22, x21, [sp, #192]
    e0a0:	ldp	x24, x23, [sp, #176]
    e0a4:	ldp	x26, x25, [sp, #160]
    e0a8:	ldr	x27, [sp, #144]
    e0ac:	ldp	x29, x30, [sp, #128]
    e0b0:	add	sp, sp, #0xe0
    e0b4:	ret
    e0b8:	ldp	x0, x1, [x22, #8]
    e0bc:	bl	0 <_ZN4llvm10AArch64TSB15lookupTSBByNameENS_9StringRefE>
    e0c0:	ldp	x8, x1, [x22, #8]
    e0c4:	mov	x23, x0
    e0c8:	mov	x0, x8
    e0cc:	bl	0 <_ZN4llvm9AArch64DB14lookupDBByNameENS_9StringRefE>
    e0d0:	ldr	x8, [x20, #184]
    e0d4:	cmp	x8, #0x3
    e0d8:	b.ne	e124 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf74>  // b.any
    e0dc:	ldr	x8, [x20, #176]
    e0e0:	mov	w12, #0x7369                	// #29545
    e0e4:	mov	w9, #0x62                  	// #98
    e0e8:	ldrh	w10, [x8]
    e0ec:	ldrb	w11, [x8, #2]
    e0f0:	eor	w10, w10, w12
    e0f4:	eor	w11, w11, w9
    e0f8:	orr	w10, w10, w11
    e0fc:	tst	w10, #0xffff
    e100:	b.eq	e71c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x156c>  // b.none
    e104:	ldrh	w10, [x8]
    e108:	ldrb	w8, [x8, #2]
    e10c:	mov	w11, #0x7374                	// #29556
    e110:	eor	w10, w10, w11
    e114:	eor	w8, w8, w9
    e118:	orr	w8, w10, w8
    e11c:	tst	w8, #0xffff
    e120:	b.eq	e7e8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1638>  // b.none
    e124:	cmp	x0, #0x0
    e128:	cset	w8, ne  // ne = any
    e12c:	cbnz	x23, e934 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1784>
    e130:	cbnz	x0, e934 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1784>
    e134:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e138:	add	x8, x8, #0x0
    e13c:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    e140:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e144:	add	x8, x8, #0x0
    e148:	b	de2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc7c>
    e14c:	cmp	w9, #0x17
    e150:	b.eq	e164 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfb4>  // b.none
    e154:	cmp	w9, #0x15
    e158:	b.eq	da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>  // b.none
    e15c:	cmp	w9, #0x13
    e160:	b.ne	e7b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1608>  // b.any
    e164:	ldr	x10, [sp, #8]
    e168:	cbz	x10, e79c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15ec>
    e16c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e170:	add	x8, x8, #0x0
    e174:	b	de2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc7c>
    e178:	mov	w0, w22
    e17c:	bl	0 <_ZN4llvm14AArch64SVEPRFM23lookupSVEPRFMByEncodingEh>
    e180:	cbz	x0, e240 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1090>
    e184:	ldr	x23, [x0]
    e188:	cbz	x23, e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1000>
    e18c:	mov	x0, x23
    e190:	bl	0 <strlen>
    e194:	mov	x24, x0
    e198:	b	e24c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x109c>
    e19c:	mov	w0, w22
    e1a0:	bl	0 <_ZN4llvm11AArch64PRFM20lookupPRFMByEncodingEh>
    e1a4:	cbz	x0, e240 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1090>
    e1a8:	ldr	x23, [x0]
    e1ac:	cbnz	x23, e18c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfdc>
    e1b0:	mov	x24, xzr
    e1b4:	b	e24c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x109c>
    e1b8:	bl	0 <_ZN4llvm9AArch64DB18lookupDBByEncodingEh>
    e1bc:	ldr	w25, [x22, #16]
    e1c0:	cbz	x0, e738 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1588>
    e1c4:	ldr	x22, [x0]
    e1c8:	cbnz	x22, e740 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1590>
    e1cc:	mov	w23, wzr
    e1d0:	b	e74c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x159c>
    e1d4:	ldr	q0, [x9]
    e1d8:	str	q0, [x21]
    e1dc:	ldr	x9, [x0, #8]
    e1e0:	str	x9, [sp, #48]
    e1e4:	stp	x8, xzr, [x0]
    e1e8:	strb	wzr, [x0, #16]
    e1ec:	ldr	x8, [sp, #48]
    e1f0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    e1f4:	sub	x8, x9, x8
    e1f8:	cmp	x8, #0x9
    e1fc:	b.ls	eb30 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1980>  // b.plast
    e200:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e204:	add	x1, x1, #0x0
    e208:	add	x0, sp, #0x28
    e20c:	mov	w2, #0xa                   	// #10
    e210:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    e214:	sub	x8, x29, #0x38
    e218:	add	x22, x8, #0x10
    e21c:	stur	x22, [x29, #-56]
    e220:	mov	x8, x0
    e224:	ldr	x9, [x8], #16
    e228:	cmp	x9, x8
    e22c:	b.eq	e2b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1100>  // b.none
    e230:	stur	x9, [x29, #-56]
    e234:	ldr	x9, [x0, #16]
    e238:	stur	x9, [x29, #-40]
    e23c:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1108>
    e240:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    e244:	mov	x24, xzr
    e248:	add	x23, x23, #0x0
    e24c:	ldr	x0, [x20, #8]
    e250:	ldr	x8, [x0]
    e254:	ldr	x8, [x8, #48]
    e258:	blr	x8
    e25c:	mov	x25, x0
    e260:	mov	w0, #0x70                  	// #112
    e264:	bl	0 <_Znwm>
    e268:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e26c:	mov	x8, x0
    e270:	add	x9, x9, #0x0
    e274:	strb	wzr, [x8, #32]!
    e278:	str	x9, [x0]
    e27c:	mov	w9, #0x9                   	// #9
    e280:	mov	x20, x0
    e284:	str	w9, [x0, #48]
    e288:	str	x25, [x0, #104]
    e28c:	str	x23, [x0, #72]
    e290:	stp	w24, w22, [x0, #80]
    e294:	b	e794 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15e4>
    e298:	ldr	w25, [x26, #32]
    e29c:	add	x23, x26, #0x18
    e2a0:	cmp	w25, #0x40
    e2a4:	b.hi	e630 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1480>  // b.pmore
    e2a8:	mov	x8, x23
    e2ac:	b	e648 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1498>
    e2b0:	ldr	q0, [x9]
    e2b4:	str	q0, [x22]
    e2b8:	ldr	x9, [x0, #8]
    e2bc:	mov	w10, #0x104                 	// #260
    e2c0:	sub	x11, x29, #0x38
    e2c4:	sub	x1, x29, #0x18
    e2c8:	stur	x9, [x29, #-48]
    e2cc:	stp	x8, xzr, [x0]
    e2d0:	strb	wzr, [x0, #16]
    e2d4:	sturh	w10, [x29, #-8]
    e2d8:	stp	x11, xzr, [x29, #-24]
    e2dc:	ldr	x0, [x20, #8]
    e2e0:	mov	x2, xzr
    e2e4:	mov	x3, xzr
    e2e8:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e2ec:	ldur	x0, [x29, #-56]
    e2f0:	cmp	x0, x22
    e2f4:	b.eq	e2fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x114c>  // b.none
    e2f8:	bl	0 <_ZdlPv>
    e2fc:	ldr	x0, [sp, #40]
    e300:	cmp	x0, x21
    e304:	b.eq	e30c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x115c>  // b.none
    e308:	bl	0 <_ZdlPv>
    e30c:	ldr	x0, [sp, #8]
    e310:	cmp	x0, x19
    e314:	b.eq	e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>  // b.none
    e318:	bl	0 <_ZdlPv>
    e31c:	b	e090 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee0>
    e320:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e324:	add	x8, x8, #0x0
    e328:	b	de2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc7c>
    e32c:	sub	x8, x29, #0x38
    e330:	add	x0, x8, #0x8
    e334:	bl	0 <_ZN4llvm6detail13DoubleAPFloat10changeSignEv>
    e338:	ldp	x8, x9, [x29, #-48]
    e33c:	sub	x10, x29, #0x38
    e340:	cmp	x23, x8
    e344:	csel	x9, x9, x10, eq  // eq = none
    e348:	ldrb	w9, [x9, #28]
    e34c:	and	w10, w9, #0x7
    e350:	cmp	w10, #0x3
    e354:	b.ne	e460 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12b0>  // b.any
    e358:	tbnz	w9, #3, e460 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12b0>
    e35c:	ldr	x0, [x20, #8]
    e360:	ldr	x8, [x0]
    e364:	ldr	x8, [x8, #48]
    e368:	blr	x8
    e36c:	mov	x24, x0
    e370:	mov	w0, #0x70                  	// #112
    e374:	bl	0 <_Znwm>
    e378:	mov	x8, x0
    e37c:	mov	w9, #0x6                   	// #6
    e380:	strb	wzr, [x8, #32]!
    e384:	str	w9, [x0, #48]
    e388:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e38c:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    e390:	add	x9, x9, #0x0
    e394:	add	x25, x25, #0x0
    e398:	stp	x22, x9, [x0, #64]
    e39c:	mov	w9, #0x2                   	// #2
    e3a0:	str	x24, [x0, #104]
    e3a4:	str	x25, [x0]
    e3a8:	str	w9, [x0, #80]
    e3ac:	strb	wzr, [x0, #84]
    e3b0:	str	x22, [x0, #56]
    e3b4:	stp	x8, xzr, [x0, #16]
    e3b8:	ldp	w8, w9, [x19, #8]
    e3bc:	mov	x23, x0
    e3c0:	cmp	w8, w9
    e3c4:	b.cs	ea3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x188c>  // b.hs, b.nlast
    e3c8:	ldr	x10, [x19]
    e3cc:	cmp	w8, w9
    e3d0:	str	x23, [x10, w8, uxtw #3]
    e3d4:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e3d8:	add	w8, w8, #0x1
    e3dc:	str	w8, [x19, #8]
    e3e0:	ldr	x0, [x20, #8]
    e3e4:	ldr	x8, [x0]
    e3e8:	ldr	x8, [x8, #48]
    e3ec:	blr	x8
    e3f0:	mov	x23, x0
    e3f4:	mov	w0, #0x70                  	// #112
    e3f8:	bl	0 <_Znwm>
    e3fc:	mov	x8, x0
    e400:	mov	w9, #0x6                   	// #6
    e404:	strb	wzr, [x8, #32]!
    e408:	str	w9, [x0, #48]
    e40c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e410:	add	x9, x9, #0x0
    e414:	mov	w10, #0x2                   	// #2
    e418:	str	x25, [x0]
    e41c:	str	x23, [x0, #104]
    e420:	stp	x22, x9, [x0, #64]
    e424:	str	w10, [x0, #80]
    e428:	strb	wzr, [x0, #84]
    e42c:	str	x22, [x0, #56]
    e430:	stp	x8, xzr, [x0, #16]
    e434:	ldp	w8, w9, [x19, #8]
    e438:	mov	x20, x0
    e43c:	cmp	w8, w9
    e440:	b.cs	ea50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18a0>  // b.hs, b.nlast
    e444:	ldr	x10, [x19]
    e448:	cmp	w8, w9
    e44c:	str	x20, [x10, w8, uxtw #3]
    e450:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e454:	add	w8, w8, #0x1
    e458:	str	w8, [x19, #8]
    e45c:	b	e598 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13e8>
    e460:	add	x9, sp, #0x28
    e464:	add	x24, x9, #0x8
    e468:	cmp	x23, x8
    e46c:	mov	x0, x24
    e470:	mov	x1, x25
    e474:	b.eq	e480 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12d0>  // b.none
    e478:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
    e47c:	b	e484 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12d4>
    e480:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
    e484:	ldurb	w8, [x29, #-16]
    e488:	tbnz	w8, #1, eab8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1908>
    e48c:	tbnz	w8, #0, eb3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x198c>
    e490:	ldr	x0, [x20, #8]
    e494:	ldur	w9, [x29, #-24]
    e498:	ldr	x8, [x0]
    e49c:	cmp	w9, #0x0
    e4a0:	cset	w26, eq  // eq = none
    e4a4:	ldr	x8, [x8, #48]
    e4a8:	blr	x8
    e4ac:	mov	x25, x0
    e4b0:	mov	w0, #0x70                  	// #112
    e4b4:	bl	0 <_Znwm>
    e4b8:	ldr	x11, [sp, #48]
    e4bc:	mov	x8, x0
    e4c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e4c4:	mov	x20, x0
    e4c8:	add	x9, x9, #0x0
    e4cc:	mov	w10, #0xb                   	// #11
    e4d0:	strb	wzr, [x8, #32]!
    e4d4:	cmp	x23, x11
    e4d8:	str	x9, [x0]
    e4dc:	str	w10, [x0, #48]
    e4e0:	stp	x8, xzr, [x0, #16]
    e4e4:	stp	xzr, xzr, [x0, #56]
    e4e8:	str	x25, [x0, #104]
    e4ec:	b.eq	e500 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1350>  // b.none
    e4f0:	add	x8, sp, #0x8
    e4f4:	mov	x0, x24
    e4f8:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    e4fc:	b	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1360>
    e500:	add	x8, sp, #0x28
    e504:	add	x0, x8, #0x8
    e508:	add	x8, sp, #0x8
    e50c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    e510:	ldr	w8, [sp, #16]
    e514:	cmp	w8, #0x40
    e518:	b.hi	e538 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1388>  // b.pmore
    e51c:	cbz	w8, eb5c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19ac>
    e520:	ldr	x9, [sp, #8]
    e524:	neg	x8, x8
    e528:	lsl	x9, x9, x8
    e52c:	asr	x8, x9, x8
    e530:	str	x8, [x20, #72]
    e534:	b	e564 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13b4>
    e538:	add	x0, sp, #0x8
    e53c:	bl	0 <LLVMInitializeAArch64AsmParser>
    e540:	cmp	w0, #0x41
    e544:	b.cs	eb7c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19cc>  // b.hs, b.nlast
    e548:	ldr	x0, [sp, #8]
    e54c:	ldr	w8, [sp, #16]
    e550:	ldr	x9, [x0]
    e554:	cmp	w8, #0x41
    e558:	str	x9, [x20, #72]
    e55c:	b.cc	e564 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13b4>  // b.lo, b.ul, b.last
    e560:	bl	0 <_ZdaPv>
    e564:	strb	w26, [x20, #80]
    e568:	stp	x22, x22, [x20, #56]
    e56c:	ldp	w8, w9, [x19, #8]
    e570:	cmp	w8, w9
    e574:	b.cs	ea14 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1864>  // b.hs, b.nlast
    e578:	ldr	x10, [x19]
    e57c:	cmp	w8, w9
    e580:	str	x20, [x10, w8, uxtw #3]
    e584:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e588:	add	w8, w8, #0x1
    e58c:	add	x0, sp, #0x28
    e590:	str	w8, [x19, #8]
    e594:	bl	0 <LLVMInitializeAArch64AsmParser>
    e598:	ldurb	w8, [x29, #-16]
    e59c:	tbnz	w8, #1, eab8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1908>
    e5a0:	tbz	w8, #0, e90c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x175c>
    e5a4:	ldur	x0, [x29, #-24]
    e5a8:	cbz	x0, e5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1408>
    e5ac:	ldr	x8, [x0]
    e5b0:	ldr	x8, [x8, #8]
    e5b4:	blr	x8
    e5b8:	stur	xzr, [x29, #-24]
    e5bc:	b	e90c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x175c>
    e5c0:	ldr	x8, [x22]
    e5c4:	mov	x0, x22
    e5c8:	ldr	x8, [x8, #136]
    e5cc:	blr	x8
    e5d0:	ldr	x0, [x20, #8]
    e5d4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e5d8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e5dc:	ldr	x8, [x20, #8]
    e5e0:	mov	x22, x0
    e5e4:	ldr	x9, [x8]
    e5e8:	mov	x0, x8
    e5ec:	ldr	x9, [x9, #48]
    e5f0:	blr	x9
    e5f4:	mov	x23, x0
    e5f8:	mov	w0, #0x70                  	// #112
    e5fc:	bl	0 <_Znwm>
    e600:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e604:	mov	x8, x0
    e608:	add	x9, x9, #0x0
    e60c:	strb	wzr, [x8, #32]!
    e610:	str	x9, [x0]
    e614:	mov	w9, #0x8                   	// #8
    e618:	mov	x20, x0
    e61c:	str	w9, [x0, #48]
    e620:	str	x23, [x0, #104]
    e624:	str	w24, [x0, #72]
    e628:	stp	x21, x22, [x0, #56]
    e62c:	b	e02c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe7c>
    e630:	mov	x0, x23
    e634:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e638:	sub	w8, w25, w0
    e63c:	cmp	w8, #0x41
    e640:	b.cs	eb9c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19ec>  // b.hs, b.nlast
    e644:	ldr	x8, [x23]
    e648:	ldr	x8, [x8]
    e64c:	cmp	x8, #0x100
    e650:	cset	w8, lt  // lt = tstop
    e654:	bic	w8, w8, w24
    e658:	tbnz	w8, #0, e668 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14b8>
    e65c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e660:	add	x8, x8, #0x0
    e664:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    e668:	cmp	w25, #0x40
    e66c:	b.ls	e688 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14d8>  // b.plast
    e670:	mov	x0, x23
    e674:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e678:	sub	w8, w25, w0
    e67c:	cmp	w8, #0x41
    e680:	b.cs	eb9c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19ec>  // b.hs, b.nlast
    e684:	ldr	x23, [x23]
    e688:	ldr	w8, [x23]
    e68c:	add	x0, sp, #0x28
    e690:	add	x23, sp, #0x28
    e694:	lsl	w10, w8, #24
    e698:	and	w12, w8, #0x40
    e69c:	and	w10, w10, #0x80000000
    e6a0:	lsr	w12, w12, #6
    e6a4:	lsr	w9, w8, #4
    e6a8:	bfi	w10, w12, #30, #1
    e6ac:	sbfx	w11, w8, #6, #1
    e6b0:	bfi	w10, w9, #23, #2
    e6b4:	and	w11, w11, #0x3e000000
    e6b8:	bfi	w10, w8, #19, #4
    e6bc:	orr	w8, w10, w11
    e6c0:	eor	w8, w8, #0x40000000
    e6c4:	fmov	s0, w8
    e6c8:	sub	x9, x29, #0x38
    e6cc:	fcvt	d0, s0
    e6d0:	add	x25, x9, #0x8
    e6d4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1Ed>
    e6d8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    e6dc:	mov	x2, x0
    e6e0:	add	x1, sp, #0x28
    e6e4:	mov	x0, x25
    e6e8:	bl	0 <_ZN4llvm7APFloat7StorageC1ENS_6detail9IEEEFloatERKNS_12fltSemanticsE>
    e6ec:	add	x0, sp, #0x28
    e6f0:	bl	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
    e6f4:	ldur	x26, [x29, #-48]
    e6f8:	add	x23, x23, #0x8
    e6fc:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    e700:	mov	x24, x0
    e704:	cmp	x0, x26
    e708:	b.eq	e800 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1650>  // b.none
    e70c:	mov	x0, x23
    e710:	mov	x1, x25
    e714:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
    e718:	b	e80c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x165c>
    e71c:	cbz	x0, e72c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x157c>
    e720:	ldrh	w10, [x0, #8]
    e724:	cmp	w10, #0xf
    e728:	b.eq	e104 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf54>  // b.none
    e72c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e730:	add	x8, x8, #0x0
    e734:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    e738:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    e73c:	add	x22, x22, #0x0
    e740:	mov	x0, x22
    e744:	bl	0 <strlen>
    e748:	mov	x23, x0
    e74c:	ldr	x0, [x20, #8]
    e750:	ldr	x8, [x0]
    e754:	ldr	x8, [x8, #48]
    e758:	blr	x8
    e75c:	mov	x24, x0
    e760:	mov	w0, #0x70                  	// #112
    e764:	bl	0 <_Znwm>
    e768:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e76c:	mov	x8, x0
    e770:	add	x9, x9, #0x0
    e774:	mov	x20, x0
    e778:	strb	wzr, [x8, #32]!
    e77c:	str	x9, [x0]
    e780:	mov	w9, #0xc                   	// #12
    e784:	str	w9, [x0, #48]
    e788:	str	x24, [x0, #104]
    e78c:	str	x22, [x0, #72]
    e790:	stp	w23, w25, [x0, #80]
    e794:	stp	x21, x21, [x0, #56]
    e798:	b	e02c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe7c>
    e79c:	cmp	w9, #0x17
    e7a0:	b.hi	e7b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1608>  // b.pmore
    e7a4:	mov	w10, #0x1                   	// #1
    e7a8:	lsl	w9, w10, w9
    e7ac:	mov	w10, #0xa80000              	// #11010048
    e7b0:	tst	w9, w10
    e7b4:	b.ne	da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>  // b.any
    e7b8:	cmp	w8, #0x18
    e7bc:	b.hi	e7d4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1624>  // b.pmore
    e7c0:	mov	w9, #0x1                   	// #1
    e7c4:	lsl	w9, w9, w8
    e7c8:	mov	w10, #0x1500000             	// #22020096
    e7cc:	tst	w9, w10
    e7d0:	b.ne	da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>  // b.any
    e7d4:	cmp	w8, #0x111
    e7d8:	b.eq	da24 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x874>  // b.none
    e7dc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e7e0:	add	x8, x8, #0x0
    e7e4:	b	de2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc7c>
    e7e8:	cbz	x23, e7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1644>
    e7ec:	ldrh	w8, [x23, #8]
    e7f0:	cbz	w8, e92c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x177c>
    e7f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e7f8:	add	x8, x8, #0x0
    e7fc:	b	e070 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xec0>
    e800:	mov	x0, x23
    e804:	mov	x1, x25
    e808:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
    e80c:	ldr	x0, [x20, #8]
    e810:	ldr	x8, [x0]
    e814:	ldr	x8, [x8, #48]
    e818:	blr	x8
    e81c:	mov	x25, x0
    e820:	mov	w0, #0x70                  	// #112
    e824:	bl	0 <_Znwm>
    e828:	ldr	x11, [sp, #48]
    e82c:	mov	x8, x0
    e830:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e834:	mov	x20, x0
    e838:	add	x9, x9, #0x0
    e83c:	mov	w10, #0xb                   	// #11
    e840:	strb	wzr, [x8, #32]!
    e844:	cmp	x24, x11
    e848:	str	x9, [x0]
    e84c:	str	w10, [x0, #48]
    e850:	stp	x8, xzr, [x0, #16]
    e854:	stp	xzr, xzr, [x0, #56]
    e858:	str	x25, [x0, #104]
    e85c:	b.eq	e870 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16c0>  // b.none
    e860:	add	x8, sp, #0x8
    e864:	mov	x0, x23
    e868:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    e86c:	b	e880 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16d0>
    e870:	add	x8, sp, #0x28
    e874:	add	x0, x8, #0x8
    e878:	add	x8, sp, #0x8
    e87c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    e880:	ldr	w8, [sp, #16]
    e884:	cmp	w8, #0x40
    e888:	b.hi	e8a8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16f8>  // b.pmore
    e88c:	cbz	w8, eb5c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19ac>
    e890:	ldr	x9, [sp, #8]
    e894:	neg	x8, x8
    e898:	lsl	x9, x9, x8
    e89c:	asr	x8, x9, x8
    e8a0:	str	x8, [x20, #72]
    e8a4:	b	e8d4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1724>
    e8a8:	add	x0, sp, #0x8
    e8ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    e8b0:	cmp	w0, #0x41
    e8b4:	b.cs	eb7c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19cc>  // b.hs, b.nlast
    e8b8:	ldr	x0, [sp, #8]
    e8bc:	ldr	w8, [sp, #16]
    e8c0:	ldr	x9, [x0]
    e8c4:	cmp	w8, #0x41
    e8c8:	str	x9, [x20, #72]
    e8cc:	b.cc	e8d4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1724>  // b.lo, b.ul, b.last
    e8d0:	bl	0 <_ZdaPv>
    e8d4:	mov	w8, #0x1                   	// #1
    e8d8:	stp	x22, x22, [x20, #56]
    e8dc:	strb	w8, [x20, #80]
    e8e0:	ldp	w8, w9, [x19, #8]
    e8e4:	cmp	w8, w9
    e8e8:	b.cs	ea64 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18b4>  // b.hs, b.nlast
    e8ec:	ldr	x10, [x19]
    e8f0:	cmp	w8, w9
    e8f4:	str	x20, [x10, w8, uxtw #3]
    e8f8:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e8fc:	add	w8, w8, #0x1
    e900:	add	x0, sp, #0x28
    e904:	str	w8, [x19, #8]
    e908:	bl	0 <LLVMInitializeAArch64AsmParser>
    e90c:	sub	x0, x29, #0x38
    e910:	bl	0 <LLVMInitializeAArch64AsmParser>
    e914:	ldr	x8, [x21]
    e918:	mov	x0, x21
    e91c:	ldr	x8, [x8, #136]
    e920:	blr	x8
    e924:	mov	w21, wzr
    e928:	b	e094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xee4>
    e92c:	cmp	x0, #0x0
    e930:	cset	w8, ne  // ne = any
    e934:	add	x9, x0, #0x8
    e938:	add	x10, x23, #0x8
    e93c:	cmp	w8, #0x0
    e940:	csel	x8, x9, x10, ne  // ne = any
    e944:	ldr	x0, [x20, #8]
    e948:	ldp	x24, x25, [x22, #8]
    e94c:	ldrh	w26, [x8]
    e950:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e954:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e958:	ldr	x8, [x20, #8]
    e95c:	mov	x22, x0
    e960:	ldr	x9, [x8]
    e964:	mov	x0, x8
    e968:	ldr	x9, [x9, #48]
    e96c:	blr	x9
    e970:	mov	x23, x0
    e974:	mov	w0, #0x70                  	// #112
    e978:	bl	0 <_Znwm>
    e97c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e980:	mov	x8, x0
    e984:	add	x9, x9, #0x0
    e988:	strb	wzr, [x8, #32]!
    e98c:	str	x9, [x0]
    e990:	mov	w9, #0xc                   	// #12
    e994:	str	w9, [x0, #48]
    e998:	str	x23, [x0, #104]
    e99c:	stp	x22, x24, [x0, #64]
    e9a0:	stp	w25, w26, [x0, #80]
    e9a4:	str	x22, [x0, #56]
    e9a8:	stp	x8, xzr, [x0, #16]
    e9ac:	ldp	w8, w9, [x19, #8]
    e9b0:	mov	x20, x0
    e9b4:	cmp	w8, w9
    e9b8:	b.cs	ea28 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1878>  // b.hs, b.nlast
    e9bc:	ldr	x10, [x19]
    e9c0:	cmp	w8, w9
    e9c4:	str	x20, [x10, w8, uxtw #3]
    e9c8:	b.cs	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c8>  // b.hs, b.nlast
    e9cc:	add	w8, w8, #0x1
    e9d0:	str	w8, [x19, #8]
    e9d4:	b	e914 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1764>
    e9d8:	mov	x0, x19
    e9dc:	mov	x1, xzr
    e9e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    e9e4:	ldp	w8, w9, [x19, #8]
    e9e8:	b	e03c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe8c>
    e9ec:	mov	x0, x19
    e9f0:	mov	x1, xzr
    e9f4:	bl	0 <LLVMInitializeAArch64AsmParser>
    e9f8:	ldp	w8, w9, [x19, #8]
    e9fc:	b	d950 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x7a0>
    ea00:	mov	x0, x19
    ea04:	mov	x1, xzr
    ea08:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea0c:	ldp	w8, w9, [x19, #8]
    ea10:	b	dc74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xac4>
    ea14:	mov	x0, x19
    ea18:	mov	x1, xzr
    ea1c:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea20:	ldp	w8, w9, [x19, #8]
    ea24:	b	e578 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x13c8>
    ea28:	mov	x0, x19
    ea2c:	mov	x1, xzr
    ea30:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea34:	ldp	w8, w9, [x19, #8]
    ea38:	b	e9bc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x180c>
    ea3c:	mov	x0, x19
    ea40:	mov	x1, xzr
    ea44:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea48:	ldp	w8, w9, [x19, #8]
    ea4c:	b	e3c8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1218>
    ea50:	mov	x0, x19
    ea54:	mov	x1, xzr
    ea58:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea5c:	ldp	w8, w9, [x19, #8]
    ea60:	b	e444 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1294>
    ea64:	mov	x0, x19
    ea68:	mov	x1, xzr
    ea6c:	bl	0 <LLVMInitializeAArch64AsmParser>
    ea70:	ldp	w8, w9, [x19, #8]
    ea74:	b	e8ec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x173c>
    ea78:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ea7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ea80:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ea84:	add	x0, x0, #0x0
    ea88:	add	x1, x1, #0x0
    ea8c:	add	x3, x3, #0x0
    ea90:	mov	w2, #0x43                  	// #67
    ea94:	bl	0 <__assert_fail>
    ea98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ea9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eaa0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eaa4:	add	x0, x0, #0x0
    eaa8:	add	x1, x1, #0x0
    eaac:	add	x3, x3, #0x0
    eab0:	mov	w2, #0x69                  	// #105
    eab4:	bl	0 <__assert_fail>
    eab8:	sub	x0, x29, #0x18
    eabc:	bl	0 <LLVMInitializeAArch64AsmParser>
    eac0:	add	x0, x29, #0x18
    eac4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    eac8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eacc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ead0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ead4:	add	x0, x0, #0x0
    ead8:	add	x1, x1, #0x0
    eadc:	add	x3, x3, #0x0
    eae0:	mov	w2, #0x5b                  	// #91
    eae4:	bl	0 <__assert_fail>
    eae8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eaec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eaf0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eaf4:	add	x0, x0, #0x0
    eaf8:	add	x1, x1, #0x0
    eafc:	add	x3, x3, #0x0
    eb00:	mov	w2, #0xfa                  	// #250
    eb04:	bl	0 <__assert_fail>
    eb08:	add	x0, sp, #0x28
    eb0c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    eb10:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eb14:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eb18:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eb1c:	add	x0, x0, #0x0
    eb20:	add	x1, x1, #0x0
    eb24:	add	x3, x3, #0x0
    eb28:	mov	w2, #0x1679                	// #5753
    eb2c:	bl	0 <__assert_fail>
    eb30:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eb34:	add	x0, x0, #0x0
    eb38:	bl	0 <_ZSt20__throw_length_errorPKc>
    eb3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eb40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eb44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eb48:	add	x0, x0, #0x0
    eb4c:	add	x1, x1, #0x0
    eb50:	add	x3, x3, #0x0
    eb54:	mov	w2, #0x272                 	// #626
    eb58:	bl	0 <__assert_fail>
    eb5c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eb60:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eb64:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eb68:	add	x0, x0, #0x0
    eb6c:	add	x1, x1, #0x0
    eb70:	add	x3, x3, #0x0
    eb74:	mov	w2, #0x307                 	// #775
    eb78:	bl	0 <__assert_fail>
    eb7c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eb80:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eb84:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eb88:	add	x0, x0, #0x0
    eb8c:	add	x1, x1, #0x0
    eb90:	add	x3, x3, #0x0
    eb94:	mov	w2, #0x663                 	// #1635
    eb98:	bl	0 <__assert_fail>
    eb9c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    eba0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    eba4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    eba8:	add	x0, x0, #0x0
    ebac:	add	x1, x1, #0x0
    ebb0:	add	x3, x3, #0x0
    ebb4:	mov	w2, #0x657                 	// #1623
    ebb8:	bl	0 <__assert_fail>

000000000000ebbc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    ebbc:	sub	sp, sp, #0x70
    ebc0:	stp	x29, x30, [sp, #32]
    ebc4:	str	x25, [sp, #48]
    ebc8:	stp	x24, x23, [sp, #64]
    ebcc:	stp	x22, x21, [sp, #80]
    ebd0:	stp	x20, x19, [sp, #96]
    ebd4:	add	x29, sp, #0x20
    ebd8:	ldr	x22, [x0, #8]
    ebdc:	mov	x21, x0
    ebe0:	mov	x19, x1
    ebe4:	mov	x0, x22
    ebe8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ebec:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ebf0:	mov	x20, x0
    ebf4:	mov	x0, x22
    ebf8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ebfc:	ldr	w8, [x0]
    ec00:	cmp	w8, #0x25
    ec04:	b.ne	ec1c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x60>  // b.any
    ec08:	ldr	x8, [x22]
    ec0c:	mov	x0, x22
    ec10:	ldr	x8, [x8, #136]
    ec14:	blr	x8
    ec18:	b	ec30 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x74>
    ec1c:	mov	x0, x22
    ec20:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ec24:	ldr	w8, [x0]
    ec28:	cmp	w8, #0x4
    ec2c:	b.ne	eca0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe4>  // b.any
    ec30:	add	x1, x29, #0x18
    ec34:	mov	x0, x21
    ec38:	str	xzr, [x29, #24]
    ec3c:	bl	c3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    ec40:	tbnz	w0, #0, edb8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>
    ec44:	mov	x0, x22
    ec48:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ec4c:	ldr	w8, [x0]
    ec50:	cmp	w8, #0x19
    ec54:	b.ne	eca8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xec>  // b.any
    ec58:	ldr	x8, [x22]
    ec5c:	mov	x0, x22
    ec60:	ldr	x8, [x8, #136]
    ec64:	blr	x8
    ec68:	mov	x0, x22
    ec6c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ec70:	ldr	w8, [x0]
    ec74:	cmp	w8, #0x2
    ec78:	b.ne	ed7c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>  // b.any
    ec7c:	mov	x0, x22
    ec80:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ec84:	ldr	w8, [x0]
    ec88:	cmp	w8, #0x3
    ec8c:	b.eq	ed34 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x178>  // b.none
    ec90:	cmp	w8, #0x2
    ec94:	b.ne	ef28 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x36c>  // b.any
    ec98:	ldp	x8, x9, [x0, #8]
    ec9c:	b	ed58 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x19c>
    eca0:	mov	w0, #0x1                   	// #1
    eca4:	b	edbc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    eca8:	mov	x0, x22
    ecac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ecb0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ecb4:	ldr	x8, [x21, #8]
    ecb8:	ldr	x24, [x29, #24]
    ecbc:	mov	x22, x0
    ecc0:	ldr	x9, [x8]
    ecc4:	mov	x0, x8
    ecc8:	ldr	x9, [x9, #48]
    eccc:	blr	x9
    ecd0:	mov	x23, x0
    ecd4:	mov	w0, #0x70                  	// #112
    ecd8:	bl	0 <_Znwm>
    ecdc:	mov	x8, x0
    ece0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ece4:	mov	x21, x0
    ece8:	add	x9, x9, #0x0
    ecec:	strb	wzr, [x8, #32]!
    ecf0:	str	x9, [x0]
    ecf4:	str	wzr, [x0, #48]
    ecf8:	str	x23, [x0, #104]
    ecfc:	str	x24, [x0, #72]
    ed00:	stp	x20, x22, [x0, #56]
    ed04:	stp	x8, xzr, [x0, #16]
    ed08:	ldp	w8, w9, [x19, #8]
    ed0c:	cmp	w8, w9
    ed10:	b.cs	eef4 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x338>  // b.hs, b.nlast
    ed14:	ldr	x10, [x19]
    ed18:	cmp	w8, w9
    ed1c:	str	x21, [x10, w8, uxtw #3]
    ed20:	b.cs	ef08 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x34c>  // b.hs, b.nlast
    ed24:	mov	w0, wzr
    ed28:	add	w8, w8, #0x1
    ed2c:	str	w8, [x19, #8]
    ed30:	b	edbc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    ed34:	ldp	x8, x9, [x0, #8]
    ed38:	subs	x10, x9, #0x1
    ed3c:	cset	w11, cs  // cs = hs, nlast
    ed40:	cinc	x8, x8, cs  // cs = hs, nlast
    ed44:	cmp	x10, x11
    ed48:	csel	x10, x10, x11, hi  // hi = pmore
    ed4c:	cmp	x9, x10
    ed50:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    ed54:	sub	x9, x9, x11
    ed58:	cmp	x9, #0x3
    ed5c:	stp	x8, x9, [sp, #8]
    ed60:	b.ne	ed7c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>  // b.any
    ed64:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ed68:	add	x1, x1, #0x0
    ed6c:	add	x0, sp, #0x8
    ed70:	mov	w2, #0x3                   	// #3
    ed74:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    ed78:	cbz	w0, edd8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x21c>
    ed7c:	mov	x0, x22
    ed80:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ed84:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ed88:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ed8c:	add	x8, x8, #0x0
    ed90:	mov	w9, #0x103                 	// #259
    ed94:	stp	x8, xzr, [sp, #8]
    ed98:	strh	w9, [sp, #24]
    ed9c:	ldr	x8, [x21, #8]
    eda0:	mov	x1, x0
    eda4:	add	x2, sp, #0x8
    eda8:	mov	x3, xzr
    edac:	mov	x0, x8
    edb0:	mov	x4, xzr
    edb4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    edb8:	mov	w0, #0x2                   	// #2
    edbc:	ldp	x20, x19, [sp, #96]
    edc0:	ldp	x22, x21, [sp, #80]
    edc4:	ldp	x24, x23, [sp, #64]
    edc8:	ldr	x25, [sp, #48]
    edcc:	ldp	x29, x30, [sp, #32]
    edd0:	add	sp, sp, #0x70
    edd4:	ret
    edd8:	ldr	x8, [x22]
    eddc:	mov	x0, x22
    ede0:	ldr	x8, [x8, #136]
    ede4:	blr	x8
    ede8:	ldr	x0, [x21, #8]
    edec:	mov	w1, #0x25                  	// #37
    edf0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    edf4:	mov	x0, x22
    edf8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    edfc:	ldr	w23, [x0]
    ee00:	mov	x0, x22
    ee04:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ee08:	cmp	w23, #0x4
    ee0c:	b.ne	ed84 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.any
    ee10:	ldr	w8, [x0]
    ee14:	cmp	w8, #0x4
    ee18:	b.ne	ef48 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x38c>  // b.any
    ee1c:	ldr	w24, [x0, #32]
    ee20:	add	x23, x0, #0x18
    ee24:	cmp	w24, #0x40
    ee28:	b.ls	ee44 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x288>  // b.plast
    ee2c:	mov	x0, x23
    ee30:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ee34:	sub	w8, w24, w0
    ee38:	cmp	w8, #0x41
    ee3c:	b.cs	ef68 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3ac>  // b.hs, b.nlast
    ee40:	ldr	x23, [x23]
    ee44:	ldr	x25, [x23]
    ee48:	tbnz	x25, #63, ee90 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2d4>
    ee4c:	ldr	x8, [x22]
    ee50:	mov	x0, x22
    ee54:	ldr	x8, [x8, #136]
    ee58:	blr	x8
    ee5c:	ldr	x23, [x29, #24]
    ee60:	mov	x0, x22
    ee64:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ee68:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ee6c:	ldr	x24, [x29, #24]
    ee70:	mov	x22, x0
    ee74:	cbnz	x25, eea8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2ec>
    ee78:	cbz	x23, eea8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2ec>
    ee7c:	ldr	x0, [x21, #8]
    ee80:	ldr	x8, [x0]
    ee84:	ldr	x8, [x8, #48]
    ee88:	blr	x8
    ee8c:	b	ecd0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x114>
    ee90:	mov	x0, x22
    ee94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ee98:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ee9c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    eea0:	add	x8, x8, #0x0
    eea4:	b	ed90 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d4>
    eea8:	ldr	x0, [x21, #8]
    eeac:	ldr	x8, [x0]
    eeb0:	ldr	x8, [x8, #48]
    eeb4:	blr	x8
    eeb8:	mov	x23, x0
    eebc:	mov	w0, #0x70                  	// #112
    eec0:	bl	0 <_Znwm>
    eec4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    eec8:	mov	x8, x0
    eecc:	add	x9, x9, #0x0
    eed0:	strb	wzr, [x8, #32]!
    eed4:	str	x9, [x0]
    eed8:	mov	w9, #0x1                   	// #1
    eedc:	mov	x21, x0
    eee0:	str	w9, [x0, #48]
    eee4:	str	x23, [x0, #104]
    eee8:	str	x24, [x0, #72]
    eeec:	str	w25, [x0, #80]
    eef0:	b	ed00 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x144>
    eef4:	mov	x0, x19
    eef8:	mov	x1, xzr
    eefc:	bl	0 <LLVMInitializeAArch64AsmParser>
    ef00:	ldp	w8, w9, [x19, #8]
    ef04:	b	ed14 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x158>
    ef08:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ef0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ef10:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ef14:	add	x0, x0, #0x0
    ef18:	add	x1, x1, #0x0
    ef1c:	add	x3, x3, #0x0
    ef20:	mov	w2, #0x43                  	// #67
    ef24:	bl	0 <__assert_fail>
    ef28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ef2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ef30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ef34:	add	x0, x0, #0x0
    ef38:	add	x1, x1, #0x0
    ef3c:	add	x3, x3, #0x0
    ef40:	mov	w2, #0x5b                  	// #91
    ef44:	bl	0 <__assert_fail>
    ef48:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ef4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ef50:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ef54:	add	x0, x0, #0x0
    ef58:	add	x1, x1, #0x0
    ef5c:	add	x3, x3, #0x0
    ef60:	mov	w2, #0x74                  	// #116
    ef64:	bl	0 <__assert_fail>
    ef68:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ef6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ef70:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ef74:	add	x0, x0, #0x0
    ef78:	add	x1, x1, #0x0
    ef7c:	add	x3, x3, #0x0
    ef80:	mov	w2, #0x657                 	// #1623
    ef84:	bl	0 <__assert_fail>

000000000000ef88 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
    ef88:	sub	sp, sp, #0x80
    ef8c:	stp	x29, x30, [sp, #32]
    ef90:	str	x27, [sp, #48]
    ef94:	stp	x26, x25, [sp, #64]
    ef98:	stp	x24, x23, [sp, #80]
    ef9c:	stp	x22, x21, [sp, #96]
    efa0:	stp	x20, x19, [sp, #112]
    efa4:	add	x29, sp, #0x20
    efa8:	mov	x22, x0
    efac:	ldr	x0, [x0, #8]
    efb0:	mov	x19, x1
    efb4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    efb8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    efbc:	mov	x21, x0
    efc0:	add	x1, x29, #0x1c
    efc4:	mov	x0, x22
    efc8:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    efcc:	mov	w20, w0
    efd0:	cbnz	w0, f1f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x270>
    efd4:	ldr	x0, [x22, #8]
    efd8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    efdc:	ldr	w8, [x0]
    efe0:	cmp	w8, #0x19
    efe4:	b.ne	f08c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x104>  // b.any
    efe8:	ldr	x0, [x22, #8]
    efec:	ldr	x8, [x0]
    eff0:	ldr	x8, [x8, #136]
    eff4:	blr	x8
    eff8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    effc:	ldr	d0, [x8]
    f000:	add	x8, sp, #0x8
    f004:	add	x8, x8, #0x10
    f008:	add	x1, sp, #0x8
    f00c:	mov	x0, x22
    f010:	str	x8, [sp, #8]
    f014:	str	d0, [sp, #16]
    f018:	bl	ccd0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    f01c:	mov	w20, w0
    f020:	cbnz	w0, f1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x21c>
    f024:	ldr	w8, [sp, #16]
    f028:	cbz	w8, f26c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2e4>
    f02c:	ldr	x9, [sp, #8]
    f030:	ldr	w25, [x29, #28]
    f034:	add	x8, x9, x8, lsl #3
    f038:	ldur	x24, [x8, #-8]
    f03c:	ldr	x8, [x24]
    f040:	mov	x0, x24
    f044:	ldr	x8, [x8, #80]
    f048:	blr	x8
    f04c:	ldr	x8, [x22, #8]
    f050:	mov	x22, x0
    f054:	ldr	x9, [x8]
    f058:	mov	x0, x8
    f05c:	ldr	x9, [x9, #48]
    f060:	blr	x9
    f064:	ldr	w8, [x24, #48]
    f068:	mov	x23, x0
    f06c:	cmp	w8, #0x3
    f070:	b.eq	f128 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x1a0>  // b.none
    f074:	cmp	w8, #0xa
    f078:	b.ne	f28c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x304>  // b.any
    f07c:	add	x8, x24, #0x48
    f080:	add	x9, x24, #0x4c
    f084:	add	x10, x24, #0x50
    f088:	b	f134 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x1ac>
    f08c:	ldr	x0, [x22, #8]
    f090:	ldr	w24, [x29, #28]
    f094:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f098:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f09c:	ldr	x8, [x22, #8]
    f0a0:	mov	x22, x0
    f0a4:	ldr	x9, [x8]
    f0a8:	mov	x0, x8
    f0ac:	ldr	x9, [x9, #48]
    f0b0:	blr	x9
    f0b4:	mov	x23, x0
    f0b8:	mov	w0, #0x70                  	// #112
    f0bc:	bl	0 <_Znwm>
    f0c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f0c4:	mov	x8, x0
    f0c8:	add	x9, x9, #0x0
    f0cc:	strb	wzr, [x8, #32]!
    f0d0:	str	x9, [x0]
    f0d4:	mov	w9, #0x3                   	// #3
    f0d8:	str	w9, [x0, #48]
    f0dc:	str	x23, [x0, #104]
    f0e0:	str	w24, [x0, #72]
    f0e4:	stur	xzr, [x0, #89]
    f0e8:	stur	xzr, [x0, #84]
    f0ec:	stur	xzr, [x0, #76]
    f0f0:	stp	x21, x22, [x0, #56]
    f0f4:	stp	x8, xzr, [x0, #16]
    f0f8:	ldp	w8, w9, [x19, #8]
    f0fc:	mov	x20, x0
    f100:	cmp	w8, w9
    f104:	b.cs	f21c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x294>  // b.hs, b.nlast
    f108:	ldr	x10, [x19]
    f10c:	cmp	w8, w9
    f110:	str	x20, [x10, w8, uxtw #3]
    f114:	b.cs	f24c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2c4>  // b.hs, b.nlast
    f118:	add	w8, w8, #0x1
    f11c:	mov	w20, wzr
    f120:	str	w8, [x19, #8]
    f124:	b	f1f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x270>
    f128:	add	x8, x24, #0x58
    f12c:	add	x9, x24, #0x5c
    f130:	add	x10, x24, #0x60
    f134:	ldr	w24, [x8]
    f138:	ldr	w26, [x9]
    f13c:	ldrb	w27, [x10]
    f140:	mov	w0, #0x70                  	// #112
    f144:	bl	0 <_Znwm>
    f148:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f14c:	mov	x8, x0
    f150:	add	x9, x9, #0x0
    f154:	strb	wzr, [x8, #32]!
    f158:	str	x9, [x0]
    f15c:	mov	w9, #0x3                   	// #3
    f160:	str	w9, [x0, #48]
    f164:	str	x23, [x0, #104]
    f168:	stp	w25, wzr, [x0, #72]
    f16c:	str	xzr, [x0, #80]
    f170:	stp	w24, w26, [x0, #88]
    f174:	strb	w27, [x0, #96]
    f178:	stp	x21, x22, [x0, #56]
    f17c:	stp	x8, xzr, [x0, #16]
    f180:	ldp	w8, w9, [x19, #8]
    f184:	cmp	w8, w9
    f188:	b.cs	f230 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2a8>  // b.hs, b.nlast
    f18c:	ldr	x10, [x19]
    f190:	cmp	w8, w9
    f194:	str	x0, [x10, w8, uxtw #3]
    f198:	b.cs	f24c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2c4>  // b.hs, b.nlast
    f19c:	add	w8, w8, #0x1
    f1a0:	str	w8, [x19, #8]
    f1a4:	ldr	w8, [sp, #16]
    f1a8:	ldr	x0, [sp, #8]
    f1ac:	cbz	w8, f1e4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x25c>
    f1b0:	lsl	x19, x8, #3
    f1b4:	sub	x21, x0, #0x8
    f1b8:	b	f1c8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x240>
    f1bc:	str	xzr, [x21, x19]
    f1c0:	subs	x19, x19, #0x8
    f1c4:	b.eq	f1e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x258>  // b.none
    f1c8:	ldr	x0, [x21, x19]
    f1cc:	cbz	x0, f1bc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x234>
    f1d0:	ldr	x8, [x0]
    f1d4:	ldr	x8, [x8, #8]
    f1d8:	blr	x8
    f1dc:	b	f1bc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x234>
    f1e0:	ldr	x0, [sp, #8]
    f1e4:	add	x8, sp, #0x8
    f1e8:	add	x8, x8, #0x10
    f1ec:	cmp	x0, x8
    f1f0:	b.eq	f1f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x270>  // b.none
    f1f4:	bl	0 <free>
    f1f8:	mov	w0, w20
    f1fc:	ldp	x20, x19, [sp, #112]
    f200:	ldp	x22, x21, [sp, #96]
    f204:	ldp	x24, x23, [sp, #80]
    f208:	ldp	x26, x25, [sp, #64]
    f20c:	ldr	x27, [sp, #48]
    f210:	ldp	x29, x30, [sp, #32]
    f214:	add	sp, sp, #0x80
    f218:	ret
    f21c:	mov	x0, x19
    f220:	mov	x1, xzr
    f224:	bl	0 <LLVMInitializeAArch64AsmParser>
    f228:	ldp	w8, w9, [x19, #8]
    f22c:	b	f108 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x180>
    f230:	mov	x21, x0
    f234:	mov	x0, x19
    f238:	mov	x1, xzr
    f23c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f240:	ldp	w8, w9, [x19, #8]
    f244:	mov	x0, x21
    f248:	b	f18c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x204>
    f24c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f250:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f254:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f258:	add	x0, x0, #0x0
    f25c:	add	x1, x1, #0x0
    f260:	add	x3, x3, #0x0
    f264:	mov	w2, #0x43                  	// #67
    f268:	bl	0 <__assert_fail>
    f26c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f270:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f274:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f278:	add	x0, x0, #0x0
    f27c:	add	x1, x1, #0x0
    f280:	add	x3, x3, #0x0
    f284:	mov	w2, #0xa7                  	// #167
    f288:	bl	0 <__assert_fail>
    f28c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f290:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f294:	add	x0, x0, #0x0
    f298:	add	x1, x1, #0x0
    f29c:	mov	w2, #0x261                 	// #609
    f2a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000f2a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    f2a4:	sub	sp, sp, #0x80
    f2a8:	stp	x29, x30, [sp, #32]
    f2ac:	stp	x28, x27, [sp, #48]
    f2b0:	stp	x26, x25, [sp, #64]
    f2b4:	stp	x24, x23, [sp, #80]
    f2b8:	stp	x22, x21, [sp, #96]
    f2bc:	stp	x20, x19, [sp, #112]
    f2c0:	add	x29, sp, #0x20
    f2c4:	ldr	x19, [x0, #8]
    f2c8:	mov	x21, x0
    f2cc:	mov	x20, x1
    f2d0:	mov	x0, x19
    f2d4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f2d8:	ldr	w8, [x0]
    f2dc:	cmp	w8, #0x2
    f2e0:	b.ne	f3cc <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x128>  // b.any
    f2e4:	mov	x22, x0
    f2e8:	ldr	x0, [x0, #8]
    f2ec:	ldr	x1, [x22, #16]
    f2f0:	bl	0 <_ZN4llvm13AArch64SysReg18lookupSysRegByNameENS_9StringRefE>
    f2f4:	cbz	x0, f350 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xac>
    f2f8:	mov	x23, x0
    f2fc:	mov	x0, x21
    f300:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    f304:	ldr	q0, [x23, #16]
    f308:	ldp	x8, x9, [x0, #184]
    f30c:	ldr	x10, [x0, #200]
    f310:	ldr	x11, [x23, #32]
    f314:	str	q0, [sp]
    f318:	ldp	x12, x13, [sp]
    f31c:	and	x10, x11, x10
    f320:	and	x8, x12, x8
    f324:	and	x9, x13, x9
    f328:	str	x8, [sp]
    f32c:	stp	x9, x10, [sp, #8]
    f330:	ldp	x11, x12, [x23, #16]
    f334:	ldr	x13, [x23, #32]
    f338:	eor	x8, x8, x11
    f33c:	eor	x9, x9, x12
    f340:	eor	x10, x10, x13
    f344:	orr	x8, x8, x9
    f348:	orr	x8, x8, x10
    f34c:	cbz	x8, f3d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x130>
    f350:	ldp	x0, x1, [x22, #8]
    f354:	bl	0 <_ZN4llvm13AArch64SysReg20parseGenericRegisterENS_9StringRefE>
    f358:	mov	w23, w0
    f35c:	mov	w25, w0
    f360:	ldp	x0, x1, [x22, #8]
    f364:	bl	0 <_ZN4llvm13AArch64PState18lookupPStateByNameENS_9StringRefE>
    f368:	cbz	x0, f3c4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    f36c:	mov	x24, x0
    f370:	mov	x0, x21
    f374:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    f378:	ldr	q0, [x24, #16]
    f37c:	ldp	x8, x9, [x0, #184]
    f380:	ldr	x10, [x0, #200]
    f384:	ldr	x11, [x24, #32]
    f388:	str	q0, [sp]
    f38c:	ldp	x12, x13, [sp]
    f390:	and	x10, x11, x10
    f394:	and	x8, x12, x8
    f398:	and	x9, x13, x9
    f39c:	str	x8, [sp]
    f3a0:	stp	x9, x10, [sp, #8]
    f3a4:	ldp	x11, x12, [x24, #16]
    f3a8:	ldr	x13, [x24, #32]
    f3ac:	eor	x8, x8, x11
    f3b0:	eor	x9, x9, x12
    f3b4:	eor	x10, x10, x13
    f3b8:	orr	x8, x8, x9
    f3bc:	orr	x8, x8, x10
    f3c0:	cbz	x8, f3f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x14c>
    f3c4:	mov	w26, #0xffffffff            	// #-1
    f3c8:	b	f3f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x150>
    f3cc:	mov	w0, #0x1                   	// #1
    f3d0:	b	f498 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f4>
    f3d4:	ldrb	w8, [x23, #12]
    f3d8:	cbz	w8, f4b8 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x214>
    f3dc:	ldr	w25, [x23, #8]
    f3e0:	ldrb	w8, [x23, #13]
    f3e4:	cbz	w8, f4c4 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x220>
    f3e8:	ldr	w23, [x23, #8]
    f3ec:	b	f360 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xbc>
    f3f0:	ldrh	w26, [x24, #8]
    f3f4:	ldr	x0, [x21, #8]
    f3f8:	ldp	x27, x28, [x22, #8]
    f3fc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f400:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f404:	ldr	x8, [x21, #8]
    f408:	mov	x22, x0
    f40c:	ldr	x9, [x8]
    f410:	mov	x0, x8
    f414:	ldr	x9, [x9, #48]
    f418:	blr	x9
    f41c:	mov	x24, x0
    f420:	mov	w0, #0x70                  	// #112
    f424:	bl	0 <_Znwm>
    f428:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f42c:	mov	x8, x0
    f430:	add	x9, x9, #0x0
    f434:	strb	wzr, [x8, #32]!
    f438:	str	x9, [x0]
    f43c:	mov	w9, #0x7                   	// #7
    f440:	str	w9, [x0, #48]
    f444:	str	x24, [x0, #104]
    f448:	stp	x22, x27, [x0, #64]
    f44c:	stp	w28, w25, [x0, #80]
    f450:	stp	w23, w26, [x0, #88]
    f454:	str	x22, [x0, #56]
    f458:	stp	x8, xzr, [x0, #16]
    f45c:	ldp	w8, w9, [x20, #8]
    f460:	mov	x21, x0
    f464:	cmp	w8, w9
    f468:	b.cs	f4cc <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x228>  // b.hs, b.nlast
    f46c:	ldr	x10, [x20]
    f470:	cmp	w8, w9
    f474:	str	x21, [x10, w8, uxtw #3]
    f478:	b.cs	f4e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x23c>  // b.hs, b.nlast
    f47c:	add	w8, w8, #0x1
    f480:	str	w8, [x20, #8]
    f484:	ldr	x8, [x19]
    f488:	mov	x0, x19
    f48c:	ldr	x8, [x8, #136]
    f490:	blr	x8
    f494:	mov	w0, wzr
    f498:	ldp	x20, x19, [sp, #112]
    f49c:	ldp	x22, x21, [sp, #96]
    f4a0:	ldp	x24, x23, [sp, #80]
    f4a4:	ldp	x26, x25, [sp, #64]
    f4a8:	ldp	x28, x27, [sp, #48]
    f4ac:	ldp	x29, x30, [sp, #32]
    f4b0:	add	sp, sp, #0x80
    f4b4:	ret
    f4b8:	mov	w25, #0xffffffff            	// #-1
    f4bc:	ldrb	w8, [x23, #13]
    f4c0:	cbnz	w8, f3e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x144>
    f4c4:	mov	w23, #0xffffffff            	// #-1
    f4c8:	b	f360 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xbc>
    f4cc:	mov	x0, x20
    f4d0:	mov	x1, xzr
    f4d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    f4d8:	ldp	w8, w9, [x20, #8]
    f4dc:	b	f46c <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>
    f4e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f4e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f4e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f4ec:	add	x0, x0, #0x0
    f4f0:	add	x1, x1, #0x0
    f4f4:	add	x3, x3, #0x0
    f4f8:	mov	w2, #0x43                  	// #67
    f4fc:	bl	0 <__assert_fail>

000000000000f500 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    f500:	sub	sp, sp, #0xc0
    f504:	stp	x29, x30, [sp, #96]
    f508:	stp	x28, x27, [sp, #112]
    f50c:	stp	x26, x25, [sp, #128]
    f510:	stp	x24, x23, [sp, #144]
    f514:	stp	x22, x21, [sp, #160]
    f518:	stp	x20, x19, [sp, #176]
    f51c:	add	x29, sp, #0x60
    f520:	mov	x20, x0
    f524:	ldr	x0, [x0, #8]
    f528:	mov	x19, x1
    f52c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f530:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f534:	mov	x22, x0
    f538:	sub	x1, x29, #0x14
    f53c:	sub	x2, x29, #0x10
    f540:	mov	w3, #0x3                   	// #3
    f544:	mov	x0, x20
    f548:	stp	xzr, xzr, [x29, #-16]
    f54c:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    f550:	mov	w21, w0
    f554:	cbnz	w0, f66c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x16c>
    f558:	ldp	x0, x23, [x29, #-16]
    f55c:	sub	x8, x29, #0x20
    f560:	mov	w2, #0x3                   	// #3
    f564:	mov	w26, #0x3                   	// #3
    f568:	mov	x1, x23
    f56c:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    f570:	ldurb	w8, [x29, #-24]
    f574:	cbz	w8, f65c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x15c>
    f578:	ldr	x0, [x20, #8]
    f57c:	ldur	w27, [x29, #-28]
    f580:	ldur	w28, [x29, #-20]
    f584:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f588:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f58c:	ldr	x8, [x20, #8]
    f590:	mov	x24, x0
    f594:	ldr	x9, [x8]
    f598:	mov	x0, x8
    f59c:	ldr	x9, [x9, #48]
    f5a0:	blr	x9
    f5a4:	mov	x25, x0
    f5a8:	mov	w0, #0x70                  	// #112
    f5ac:	bl	0 <_Znwm>
    f5b0:	mov	x8, x0
    f5b4:	strb	wzr, [x8, #32]!
    f5b8:	str	x25, [x0, #104]
    f5bc:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    f5c0:	add	x25, x25, #0x0
    f5c4:	str	x25, [x0]
    f5c8:	str	w26, [x0, #48]
    f5cc:	stp	w28, w26, [x0, #72]
    f5d0:	stur	xzr, [x0, #89]
    f5d4:	stur	xzr, [x0, #84]
    f5d8:	stp	x22, x24, [x0, #56]
    f5dc:	str	w27, [x0, #80]
    f5e0:	stp	x8, xzr, [x0, #16]
    f5e4:	ldp	w8, w9, [x19, #8]
    f5e8:	mov	x21, x0
    f5ec:	cmp	w8, w9
    f5f0:	b.cs	f894 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x394>  // b.hs, b.nlast
    f5f4:	ldr	x10, [x19]
    f5f8:	cmp	w8, w9
    f5fc:	str	x21, [x10, w8, uxtw #3]
    f600:	b.cs	f8d0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3d0>  // b.hs, b.nlast
    f604:	add	w8, w8, #0x1
    f608:	str	w8, [x19, #8]
    f60c:	ldr	x21, [x20, #8]
    f610:	mov	x0, x21
    f614:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f618:	ldr	w8, [x0]
    f61c:	cmp	w8, #0xf
    f620:	b.ne	f664 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>  // b.any
    f624:	cbz	x23, f690 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x190>
    f628:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f62c:	add	x8, x8, #0x0
    f630:	mov	w9, #0x103                 	// #259
    f634:	stp	x8, xzr, [sp, #32]
    f638:	strh	w9, [sp, #48]
    f63c:	ldr	x0, [x20, #8]
    f640:	add	x2, sp, #0x20
    f644:	mov	x1, x22
    f648:	mov	x3, xzr
    f64c:	mov	x4, xzr
    f650:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    f654:	mov	w21, #0x2                   	// #2
    f658:	b	f668 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>
    f65c:	mov	w21, #0x1                   	// #1
    f660:	b	f66c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x16c>
    f664:	mov	w21, wzr
    f668:	sturb	wzr, [x29, #-24]
    f66c:	mov	w0, w21
    f670:	ldp	x20, x19, [sp, #176]
    f674:	ldp	x22, x21, [sp, #160]
    f678:	ldp	x24, x23, [sp, #144]
    f67c:	ldp	x26, x25, [sp, #128]
    f680:	ldp	x28, x27, [sp, #112]
    f684:	ldp	x29, x30, [sp, #96]
    f688:	add	sp, sp, #0xc0
    f68c:	ret
    f690:	ldr	x0, [x20, #8]
    f694:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f698:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f69c:	ldr	x8, [x20, #8]
    f6a0:	mov	x23, x0
    f6a4:	ldr	x9, [x8]
    f6a8:	mov	x0, x8
    f6ac:	ldr	x9, [x9, #48]
    f6b0:	blr	x9
    f6b4:	mov	x24, x0
    f6b8:	mov	w0, #0x70                  	// #112
    f6bc:	bl	0 <_Znwm>
    f6c0:	mov	x8, x0
    f6c4:	mov	w9, #0x6                   	// #6
    f6c8:	strb	wzr, [x8, #32]!
    f6cc:	str	w9, [x0, #48]
    f6d0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f6d4:	add	x9, x9, #0x0
    f6d8:	stp	x23, x9, [x0, #64]
    f6dc:	mov	w9, #0x1                   	// #1
    f6e0:	str	x24, [x0, #104]
    f6e4:	str	x25, [x0]
    f6e8:	str	w9, [x0, #80]
    f6ec:	strb	wzr, [x0, #84]
    f6f0:	str	x23, [x0, #56]
    f6f4:	stp	x8, xzr, [x0, #16]
    f6f8:	ldp	w8, w9, [x19, #8]
    f6fc:	mov	x22, x0
    f700:	cmp	w8, w9
    f704:	b.cs	f8a8 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3a8>  // b.hs, b.nlast
    f708:	ldr	x10, [x19]
    f70c:	cmp	w8, w9
    f710:	str	x22, [x10, w8, uxtw #3]
    f714:	b.cs	f8d0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3d0>  // b.hs, b.nlast
    f718:	add	w8, w8, #0x1
    f71c:	str	w8, [x19, #8]
    f720:	ldr	x8, [x21]
    f724:	mov	x0, x21
    f728:	ldr	x8, [x8, #136]
    f72c:	blr	x8
    f730:	mov	x0, x21
    f734:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f738:	ldur	q0, [x0, #8]
    f73c:	add	x8, sp, #0x20
    f740:	mov	x0, sp
    f744:	str	q0, [sp]
    f748:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    f74c:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    f750:	add	x22, x22, #0x0
    f754:	add	x0, sp, #0x20
    f758:	mov	x1, x22
    f75c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    f760:	cbz	w0, f7bc <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
    f764:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f768:	add	x1, x1, #0x0
    f76c:	add	x0, sp, #0x20
    f770:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    f774:	cbz	w0, f7bc <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
    f778:	ldr	x0, [x20, #8]
    f77c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f780:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f784:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f788:	add	x8, x8, #0x0
    f78c:	mov	w9, #0x103                 	// #259
    f790:	stp	x8, xzr, [sp]
    f794:	strh	w9, [sp, #16]
    f798:	ldr	x8, [x20, #8]
    f79c:	mov	x1, x0
    f7a0:	mov	x2, sp
    f7a4:	mov	x3, xzr
    f7a8:	mov	x0, x8
    f7ac:	mov	x4, xzr
    f7b0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    f7b4:	mov	w21, #0x2                   	// #2
    f7b8:	b	f878 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x378>
    f7bc:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    f7c0:	add	x0, sp, #0x20
    f7c4:	mov	x1, x22
    f7c8:	add	x23, x23, #0x0
    f7cc:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    f7d0:	ldr	x8, [x20, #8]
    f7d4:	cmp	w0, #0x0
    f7d8:	csel	x24, x22, x23, eq  // eq = none
    f7dc:	mov	x0, x8
    f7e0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f7e4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f7e8:	ldr	x8, [x20, #8]
    f7ec:	mov	x22, x0
    f7f0:	ldr	x9, [x8]
    f7f4:	mov	x0, x8
    f7f8:	ldr	x9, [x9, #48]
    f7fc:	blr	x9
    f800:	mov	x23, x0
    f804:	mov	w0, #0x70                  	// #112
    f808:	bl	0 <_Znwm>
    f80c:	mov	x8, x0
    f810:	mov	w9, #0x6                   	// #6
    f814:	strb	wzr, [x8, #32]!
    f818:	str	w9, [x0, #48]
    f81c:	mov	w9, #0x1                   	// #1
    f820:	str	x25, [x0]
    f824:	str	x23, [x0, #104]
    f828:	stp	x22, x24, [x0, #64]
    f82c:	str	w9, [x0, #80]
    f830:	strb	wzr, [x0, #84]
    f834:	str	x22, [x0, #56]
    f838:	stp	x8, xzr, [x0, #16]
    f83c:	ldp	w8, w9, [x19, #8]
    f840:	mov	x20, x0
    f844:	cmp	w8, w9
    f848:	b.cs	f8bc <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3bc>  // b.hs, b.nlast
    f84c:	ldr	x10, [x19]
    f850:	cmp	w8, w9
    f854:	str	x20, [x10, w8, uxtw #3]
    f858:	b.cs	f8d0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3d0>  // b.hs, b.nlast
    f85c:	add	w8, w8, #0x1
    f860:	str	w8, [x19, #8]
    f864:	ldr	x8, [x21]
    f868:	mov	x0, x21
    f86c:	ldr	x8, [x8, #136]
    f870:	blr	x8
    f874:	mov	w21, wzr
    f878:	ldr	x0, [sp, #32]
    f87c:	add	x8, sp, #0x20
    f880:	add	x8, x8, #0x10
    f884:	cmp	x0, x8
    f888:	b.eq	f668 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>  // b.none
    f88c:	bl	0 <_ZdlPv>
    f890:	b	f668 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>
    f894:	mov	x0, x19
    f898:	mov	x1, xzr
    f89c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8a0:	ldp	w8, w9, [x19, #8]
    f8a4:	b	f5f4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf4>
    f8a8:	mov	x0, x19
    f8ac:	mov	x1, xzr
    f8b0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8b4:	ldp	w8, w9, [x19, #8]
    f8b8:	b	f708 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x208>
    f8bc:	mov	x0, x19
    f8c0:	mov	x1, xzr
    f8c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    f8c8:	ldp	w8, w9, [x19, #8]
    f8cc:	b	f84c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x34c>
    f8d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f8d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f8d8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f8dc:	add	x0, x0, #0x0
    f8e0:	add	x1, x1, #0x0
    f8e4:	add	x3, x3, #0x0
    f8e8:	mov	w2, #0x43                  	// #67
    f8ec:	bl	0 <__assert_fail>

000000000000f8f0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    f8f0:	sub	sp, sp, #0x80
    f8f4:	stp	x29, x30, [sp, #32]
    f8f8:	stp	x28, x27, [sp, #48]
    f8fc:	stp	x26, x25, [sp, #64]
    f900:	stp	x24, x23, [sp, #80]
    f904:	stp	x22, x21, [sp, #96]
    f908:	stp	x20, x19, [sp, #112]
    f90c:	add	x29, sp, #0x20
    f910:	mov	x21, x0
    f914:	ldr	x0, [x0, #8]
    f918:	mov	x19, x1
    f91c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f920:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f924:	ldr	x8, [x21, #8]
    f928:	mov	x20, x0
    f92c:	mov	x0, x8
    f930:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f934:	ldr	w8, [x0]
    f938:	cmp	w8, #0x2
    f93c:	b.ne	f984 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x94>  // b.any
    f940:	add	x1, sp, #0x4
    f944:	mov	x0, x21
    f948:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    f94c:	cbnz	w0, faec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>
    f950:	adrp	x25, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    f954:	ldr	w22, [sp, #4]
    f958:	ldr	x25, [x25]
    f95c:	lsr	x8, x22, #3
    f960:	ldrh	w9, [x25, #566]
    f964:	cmp	w8, w9
    f968:	b.cs	f990 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa0>  // b.hs, b.nlast
    f96c:	ldr	x9, [x25, #552]
    f970:	and	w10, w22, #0x7
    f974:	ldrb	w9, [x9, x8]
    f978:	lsr	w9, w9, w10
    f97c:	and	w26, w9, #0x1
    f980:	b	f994 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xa4>
    f984:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f988:	add	x8, x8, #0x0
    f98c:	b	fac8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d8>
    f990:	mov	w26, wzr
    f994:	ldrh	w9, [x25, #214]
    f998:	cmp	w8, w9
    f99c:	b.cs	f9c0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xd0>  // b.hs, b.nlast
    f9a0:	ldr	x9, [x25, #200]
    f9a4:	ldrb	w8, [x9, x8]
    f9a8:	and	w9, w22, #0x7
    f9ac:	lsr	w8, w8, w9
    f9b0:	and	w27, w8, #0x1
    f9b4:	orr	w8, w26, w27
    f9b8:	tbnz	w8, #0, f9cc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xdc>
    f9bc:	b	fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    f9c0:	mov	w27, wzr
    f9c4:	orr	w8, w26, w27
    f9c8:	tbz	w8, #0, fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    f9cc:	ldr	x0, [x21, #8]
    f9d0:	ldr	x8, [x0]
    f9d4:	ldr	x8, [x8, #48]
    f9d8:	blr	x8
    f9dc:	ldr	x23, [x0, #24]
    f9e0:	ldr	w8, [x23, #8]
    f9e4:	cmp	w8, w22
    f9e8:	b.ls	fc28 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x338>  // b.plast
    f9ec:	ldr	x8, [x23, #104]
    f9f0:	ldrh	w28, [x8, x22, lsl #1]
    f9f4:	tbnz	w28, #0, fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>
    f9f8:	ldr	x0, [x21, #8]
    f9fc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fa00:	ldr	w8, [x0]
    fa04:	ldr	x0, [x21, #8]
    fa08:	cmp	w8, #0x19
    fa0c:	b.ne	fb10 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x220>  // b.any
    fa10:	ldr	x8, [x0]
    fa14:	ldr	x8, [x8, #136]
    fa18:	blr	x8
    fa1c:	ldr	x0, [x21, #8]
    fa20:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fa24:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fa28:	mov	x24, x0
    fa2c:	mov	x1, sp
    fa30:	mov	x0, x21
    fa34:	bl	6d50 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseScalarRegisterERj>
    fa38:	cbnz	w0, faec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1fc>
    fa3c:	ldr	w8, [sp]
    fa40:	ldr	w9, [x23, #8]
    fa44:	cmp	w9, w8
    fa48:	b.ls	fc28 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x338>  // b.plast
    fa4c:	ldr	x9, [x23, #104]
    fa50:	add	w10, w28, #0x1
    fa54:	ldrh	w9, [x9, x8, lsl #1]
    fa58:	cmp	w10, w9
    fa5c:	b.ne	fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x250>  // b.any
    fa60:	cbz	w26, fa88 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x198>
    fa64:	ldrh	w10, [x25, #566]
    fa68:	lsr	x9, x8, #3
    fa6c:	cmp	w9, w10
    fa70:	b.cs	fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x250>  // b.hs, b.nlast
    fa74:	ldr	x10, [x25, #552]
    fa78:	ldrb	w9, [x10, x9]
    fa7c:	and	w10, w8, #0x7
    fa80:	lsr	w9, w9, w10
    fa84:	tbz	w9, #0, fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x250>
    fa88:	cbz	w27, fab0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>
    fa8c:	ldrh	w10, [x25, #214]
    fa90:	lsr	x9, x8, #3
    fa94:	cmp	w9, w10
    fa98:	b.cs	fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x250>  // b.hs, b.nlast
    fa9c:	ldr	x10, [x25, #200]
    faa0:	and	w8, w8, #0x7
    faa4:	ldrb	w9, [x10, x9]
    faa8:	lsr	w8, w9, w8
    faac:	tbz	w8, #0, fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x250>
    fab0:	cbz	w26, fb64 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x274>
    fab4:	add	x3, x25, #0x380
    fab8:	mov	w2, #0x11                  	// #17
    fabc:	b	fb6c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x27c>
    fac0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    fac4:	add	x8, x8, #0x0
    fac8:	mov	w9, #0x103                 	// #259
    facc:	stp	x8, xzr, [sp, #8]
    fad0:	strh	w9, [sp, #24]
    fad4:	ldr	x0, [x21, #8]
    fad8:	add	x2, sp, #0x8
    fadc:	mov	x1, x20
    fae0:	mov	x3, xzr
    fae4:	mov	x4, xzr
    fae8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    faec:	mov	w0, #0x2                   	// #2
    faf0:	ldp	x20, x19, [sp, #112]
    faf4:	ldp	x22, x21, [sp, #96]
    faf8:	ldp	x24, x23, [sp, #80]
    fafc:	ldp	x26, x25, [sp, #64]
    fb00:	ldp	x28, x27, [sp, #48]
    fb04:	ldp	x29, x30, [sp, #32]
    fb08:	add	sp, sp, #0x80
    fb0c:	ret
    fb10:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fb14:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fb18:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    fb1c:	add	x8, x8, #0x0
    fb20:	mov	w9, #0x103                 	// #259
    fb24:	stp	x8, xzr, [sp, #8]
    fb28:	strh	w9, [sp, #24]
    fb2c:	ldr	x8, [x21, #8]
    fb30:	mov	x1, x0
    fb34:	add	x2, sp, #0x8
    fb38:	mov	x0, x8
    fb3c:	b	fae0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>
    fb40:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    fb44:	add	x8, x8, #0x0
    fb48:	mov	w9, #0x103                 	// #259
    fb4c:	stp	x8, xzr, [sp, #8]
    fb50:	strh	w9, [sp, #24]
    fb54:	ldr	x0, [x21, #8]
    fb58:	add	x2, sp, #0x8
    fb5c:	mov	x1, x24
    fb60:	b	fae0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>
    fb64:	add	x3, x25, #0x180
    fb68:	mov	w2, #0x10                  	// #16
    fb6c:	mov	x0, x23
    fb70:	mov	x1, x22
    fb74:	bl	0 <_ZNK4llvm14MCRegisterInfo19getMatchingSuperRegENS_10MCRegisterEjPKNS_15MCRegisterClassE>
    fb78:	mov	x22, x0
    fb7c:	ldr	x0, [x21, #8]
    fb80:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fb84:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fb88:	ldr	x8, [x21, #8]
    fb8c:	mov	x23, x0
    fb90:	ldr	x9, [x8]
    fb94:	mov	x0, x8
    fb98:	ldr	x9, [x9, #48]
    fb9c:	blr	x9
    fba0:	mov	x24, x0
    fba4:	mov	w0, #0x70                  	// #112
    fba8:	bl	0 <_Znwm>
    fbac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    fbb0:	mov	x8, x0
    fbb4:	add	x9, x9, #0x0
    fbb8:	strb	wzr, [x8, #32]!
    fbbc:	str	x9, [x0]
    fbc0:	mov	w9, #0x3                   	// #3
    fbc4:	str	w9, [x0, #48]
    fbc8:	str	x24, [x0, #104]
    fbcc:	str	w22, [x0, #72]
    fbd0:	stur	xzr, [x0, #89]
    fbd4:	stur	xzr, [x0, #84]
    fbd8:	stur	xzr, [x0, #76]
    fbdc:	stp	x20, x23, [x0, #56]
    fbe0:	stp	x8, xzr, [x0, #16]
    fbe4:	ldp	w8, w9, [x19, #8]
    fbe8:	mov	x21, x0
    fbec:	cmp	w8, w9
    fbf0:	b.cs	fc14 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x324>  // b.hs, b.nlast
    fbf4:	ldr	x10, [x19]
    fbf8:	cmp	w8, w9
    fbfc:	str	x21, [x10, w8, uxtw #3]
    fc00:	b.cs	fc48 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x358>  // b.hs, b.nlast
    fc04:	mov	w0, wzr
    fc08:	add	w8, w8, #0x1
    fc0c:	str	w8, [x19, #8]
    fc10:	b	faf0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>
    fc14:	mov	x0, x19
    fc18:	mov	x1, xzr
    fc1c:	bl	0 <LLVMInitializeAArch64AsmParser>
    fc20:	ldp	w8, w9, [x19, #8]
    fc24:	b	fbf4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x304>
    fc28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fc2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fc30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    fc34:	add	x0, x0, #0x0
    fc38:	add	x1, x1, #0x0
    fc3c:	add	x3, x3, #0x0
    fc40:	mov	w2, #0x224                 	// #548
    fc44:	bl	0 <__assert_fail>
    fc48:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fc4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fc50:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    fc54:	add	x0, x0, #0x0
    fc58:	add	x1, x1, #0x0
    fc5c:	add	x3, x3, #0x0
    fc60:	mov	w2, #0x43                  	// #67
    fc64:	bl	0 <__assert_fail>

000000000000fc68 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
    fc68:	sub	sp, sp, #0xa0
    fc6c:	stp	x29, x30, [sp, #64]
    fc70:	stp	x28, x27, [sp, #80]
    fc74:	stp	x26, x25, [sp, #96]
    fc78:	stp	x24, x23, [sp, #112]
    fc7c:	stp	x22, x21, [sp, #128]
    fc80:	stp	x20, x19, [sp, #144]
    fc84:	add	x29, sp, #0x40
    fc88:	mov	x22, x0
    fc8c:	ldr	x0, [x0, #8]
    fc90:	mov	x19, x1
    fc94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fc98:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fc9c:	mov	x21, x0
    fca0:	sub	x1, x29, #0x4
    fca4:	sub	x2, x29, #0x18
    fca8:	mov	w3, #0x2                   	// #2
    fcac:	mov	x0, x22
    fcb0:	stp	xzr, xzr, [x29, #-24]
    fcb4:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    fcb8:	mov	w20, w0
    fcbc:	cbnz	w0, ff1c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b4>
    fcc0:	ldur	x1, [x29, #-16]
    fcc4:	cbz	x1, fd9c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>
    fcc8:	ldur	x0, [x29, #-24]
    fccc:	add	x8, sp, #0x18
    fcd0:	mov	w2, #0x2                   	// #2
    fcd4:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    fcd8:	ldrb	w8, [sp, #32]
    fcdc:	cbz	w8, fd9c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>
    fce0:	ldr	x0, [x22, #8]
    fce4:	ldr	w25, [sp, #28]
    fce8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fcec:	ldr	w8, [x0]
    fcf0:	cmp	w8, #0x19
    fcf4:	b.ne	fda4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13c>  // b.any
    fcf8:	ldr	x0, [x22, #8]
    fcfc:	ldr	x8, [x0]
    fd00:	ldr	x8, [x8, #136]
    fd04:	blr	x8
    fd08:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    fd0c:	ldr	d0, [x8]
    fd10:	mov	x8, sp
    fd14:	add	x8, x8, #0x10
    fd18:	mov	x1, sp
    fd1c:	mov	x0, x22
    fd20:	str	x8, [sp]
    fd24:	str	d0, [sp, #8]
    fd28:	bl	ccd0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    fd2c:	mov	w20, w0
    fd30:	cbnz	w0, fec4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
    fd34:	ldr	w8, [sp, #8]
    fd38:	cbz	w8, ff90 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x328>
    fd3c:	ldr	x9, [sp]
    fd40:	ldur	w26, [x29, #-4]
    fd44:	add	x8, x9, x8, lsl #3
    fd48:	ldur	x24, [x8, #-8]
    fd4c:	ldr	x8, [x24]
    fd50:	mov	x0, x24
    fd54:	ldr	x8, [x8, #80]
    fd58:	blr	x8
    fd5c:	ldr	x8, [x22, #8]
    fd60:	mov	x22, x0
    fd64:	ldr	x9, [x8]
    fd68:	mov	x0, x8
    fd6c:	ldr	x9, [x9, #48]
    fd70:	blr	x9
    fd74:	ldr	w8, [x24, #48]
    fd78:	mov	x23, x0
    fd7c:	cmp	w8, #0x3
    fd80:	b.eq	fe44 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dc>  // b.none
    fd84:	cmp	w8, #0xa
    fd88:	b.ne	ffb0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x348>  // b.any
    fd8c:	add	x8, x24, #0x48
    fd90:	add	x9, x24, #0x4c
    fd94:	add	x10, x24, #0x50
    fd98:	b	fe50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e8>
    fd9c:	mov	w20, #0x1                   	// #1
    fda0:	b	ff1c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b4>
    fda4:	ldr	x0, [x22, #8]
    fda8:	ldur	w24, [x29, #-4]
    fdac:	ldr	x8, [x0]
    fdb0:	ldr	x8, [x8, #48]
    fdb4:	blr	x8
    fdb8:	mov	x23, x0
    fdbc:	mov	w0, #0x70                  	// #112
    fdc0:	bl	0 <_Znwm>
    fdc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    fdc8:	mov	x8, x0
    fdcc:	add	x9, x9, #0x0
    fdd0:	strb	wzr, [x8, #32]!
    fdd4:	str	x9, [x0]
    fdd8:	mov	w9, #0x3                   	// #3
    fddc:	str	w9, [x0, #48]
    fde0:	mov	w9, #0x2                   	// #2
    fde4:	str	x23, [x0, #104]
    fde8:	stp	w24, w9, [x0, #72]
    fdec:	stur	xzr, [x0, #89]
    fdf0:	stur	xzr, [x0, #84]
    fdf4:	stp	x21, x21, [x0, #56]
    fdf8:	str	w25, [x0, #80]
    fdfc:	stp	x8, xzr, [x0, #16]
    fe00:	ldp	w8, w9, [x19, #8]
    fe04:	mov	x20, x0
    fe08:	cmp	w8, w9
    fe0c:	b.cs	ff40 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2d8>  // b.hs, b.nlast
    fe10:	ldr	x10, [x19]
    fe14:	cmp	w8, w9
    fe18:	str	x20, [x10, w8, uxtw #3]
    fe1c:	b.cs	ff70 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x308>  // b.hs, b.nlast
    fe20:	add	w8, w8, #0x1
    fe24:	mov	x0, x22
    fe28:	mov	x1, x19
    fe2c:	str	w8, [x19, #8]
    fe30:	bl	c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    fe34:	cmp	w0, #0x2
    fe38:	cset	w8, eq  // eq = none
    fe3c:	lsl	w20, w8, #1
    fe40:	b	ff18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b0>
    fe44:	add	x8, x24, #0x58
    fe48:	add	x9, x24, #0x5c
    fe4c:	add	x10, x24, #0x60
    fe50:	ldr	w24, [x8]
    fe54:	ldr	w27, [x9]
    fe58:	ldrb	w28, [x10]
    fe5c:	mov	w0, #0x70                  	// #112
    fe60:	bl	0 <_Znwm>
    fe64:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    fe68:	mov	x8, x0
    fe6c:	add	x9, x9, #0x0
    fe70:	strb	wzr, [x8, #32]!
    fe74:	str	x9, [x0]
    fe78:	mov	w9, #0x3                   	// #3
    fe7c:	str	w9, [x0, #48]
    fe80:	mov	w9, #0x2                   	// #2
    fe84:	str	x23, [x0, #104]
    fe88:	stp	w26, w9, [x0, #72]
    fe8c:	stp	w24, w27, [x0, #88]
    fe90:	strb	w28, [x0, #96]
    fe94:	stp	x21, x22, [x0, #56]
    fe98:	stp	w25, wzr, [x0, #80]
    fe9c:	stp	x8, xzr, [x0, #16]
    fea0:	ldp	w8, w9, [x19, #8]
    fea4:	cmp	w8, w9
    fea8:	b.cs	ff54 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2ec>  // b.hs, b.nlast
    feac:	ldr	x10, [x19]
    feb0:	cmp	w8, w9
    feb4:	str	x0, [x10, w8, uxtw #3]
    feb8:	b.cs	ff70 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x308>  // b.hs, b.nlast
    febc:	add	w8, w8, #0x1
    fec0:	str	w8, [x19, #8]
    fec4:	ldr	w8, [sp, #8]
    fec8:	ldr	x0, [sp]
    fecc:	cbz	w8, ff04 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x29c>
    fed0:	lsl	x19, x8, #3
    fed4:	sub	x21, x0, #0x8
    fed8:	b	fee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x280>
    fedc:	str	xzr, [x21, x19]
    fee0:	subs	x19, x19, #0x8
    fee4:	b.eq	ff00 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x298>  // b.none
    fee8:	ldr	x0, [x21, x19]
    feec:	cbz	x0, fedc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x274>
    fef0:	ldr	x8, [x0]
    fef4:	ldr	x8, [x8, #8]
    fef8:	blr	x8
    fefc:	b	fedc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x274>
    ff00:	ldr	x0, [sp]
    ff04:	mov	x8, sp
    ff08:	add	x8, x8, #0x10
    ff0c:	cmp	x0, x8
    ff10:	b.eq	ff18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b0>  // b.none
    ff14:	bl	0 <free>
    ff18:	strb	wzr, [sp, #32]
    ff1c:	mov	w0, w20
    ff20:	ldp	x20, x19, [sp, #144]
    ff24:	ldp	x22, x21, [sp, #128]
    ff28:	ldp	x24, x23, [sp, #112]
    ff2c:	ldp	x26, x25, [sp, #96]
    ff30:	ldp	x28, x27, [sp, #80]
    ff34:	ldp	x29, x30, [sp, #64]
    ff38:	add	sp, sp, #0xa0
    ff3c:	ret
    ff40:	mov	x0, x19
    ff44:	mov	x1, xzr
    ff48:	bl	0 <LLVMInitializeAArch64AsmParser>
    ff4c:	ldp	w8, w9, [x19, #8]
    ff50:	b	fe10 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a8>
    ff54:	mov	x21, x0
    ff58:	mov	x0, x19
    ff5c:	mov	x1, xzr
    ff60:	bl	0 <LLVMInitializeAArch64AsmParser>
    ff64:	ldp	w8, w9, [x19, #8]
    ff68:	mov	x0, x21
    ff6c:	b	feac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x244>
    ff70:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff74:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff78:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ff7c:	add	x0, x0, #0x0
    ff80:	add	x1, x1, #0x0
    ff84:	add	x3, x3, #0x0
    ff88:	mov	w2, #0x43                  	// #67
    ff8c:	bl	0 <__assert_fail>
    ff90:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ff94:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ff98:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ff9c:	add	x0, x0, #0x0
    ffa0:	add	x1, x1, #0x0
    ffa4:	add	x3, x3, #0x0
    ffa8:	mov	w2, #0xa7                  	// #167
    ffac:	bl	0 <__assert_fail>
    ffb0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    ffb4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ffb8:	add	x0, x0, #0x0
    ffbc:	add	x1, x1, #0x0
    ffc0:	mov	w2, #0x261                 	// #609
    ffc4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000ffc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
    ffc8:	sub	sp, sp, #0x70
    ffcc:	stp	x29, x30, [sp, #32]
    ffd0:	str	x25, [sp, #48]
    ffd4:	stp	x24, x23, [sp, #64]
    ffd8:	stp	x22, x21, [sp, #80]
    ffdc:	stp	x20, x19, [sp, #96]
    ffe0:	add	x29, sp, #0x20
    ffe4:	mov	x19, x0
    ffe8:	ldr	x0, [x0, #8]
    ffec:	mov	x20, x1
    fff0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fff4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fff8:	mov	x21, x0
    fffc:	add	x1, x29, #0x1c
   10000:	add	x2, sp, #0x10
   10004:	mov	w3, #0x2                   	// #2
   10008:	mov	x0, x19
   1000c:	stp	xzr, xzr, [sp, #16]
   10010:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   10014:	cbnz	w0, 100e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
   10018:	ldr	x1, [sp, #24]
   1001c:	cbz	x1, 100dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   10020:	ldr	x0, [sp, #16]
   10024:	mov	x8, sp
   10028:	mov	w2, #0x2                   	// #2
   1002c:	mov	w23, #0x2                   	// #2
   10030:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10034:	ldrb	w8, [sp, #8]
   10038:	cbz	w8, 100dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   1003c:	ldr	x0, [x19, #8]
   10040:	ldr	w24, [sp, #4]
   10044:	ldr	w25, [x29, #28]
   10048:	ldr	x8, [x0]
   1004c:	ldr	x8, [x8, #48]
   10050:	blr	x8
   10054:	mov	x22, x0
   10058:	mov	w0, #0x70                  	// #112
   1005c:	bl	0 <_Znwm>
   10060:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10064:	mov	x8, x0
   10068:	add	x9, x9, #0x0
   1006c:	strb	wzr, [x8, #32]!
   10070:	str	x9, [x0]
   10074:	mov	w9, #0x3                   	// #3
   10078:	str	w9, [x0, #48]
   1007c:	str	x22, [x0, #104]
   10080:	stp	w25, w23, [x0, #72]
   10084:	stur	xzr, [x0, #89]
   10088:	stur	xzr, [x0, #84]
   1008c:	stp	x21, x21, [x0, #56]
   10090:	str	w24, [x0, #80]
   10094:	stp	x8, xzr, [x0, #16]
   10098:	ldp	w8, w9, [x20, #8]
   1009c:	cmp	w8, w9
   100a0:	b.cs	100fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>  // b.hs, b.nlast
   100a4:	ldr	x10, [x20]
   100a8:	cmp	w8, w9
   100ac:	str	x0, [x10, w8, uxtw #3]
   100b0:	b.cs	10118 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x150>  // b.hs, b.nlast
   100b4:	add	w8, w8, #0x1
   100b8:	mov	x0, x19
   100bc:	mov	x1, x20
   100c0:	str	w8, [x20, #8]
   100c4:	bl	c220 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
   100c8:	cmp	w0, #0x2
   100cc:	cset	w8, eq  // eq = none
   100d0:	lsl	w0, w8, #1
   100d4:	strb	wzr, [sp, #8]
   100d8:	b	100e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
   100dc:	mov	w0, #0x1                   	// #1
   100e0:	ldp	x20, x19, [sp, #96]
   100e4:	ldp	x22, x21, [sp, #80]
   100e8:	ldp	x24, x23, [sp, #64]
   100ec:	ldr	x25, [sp, #48]
   100f0:	ldp	x29, x30, [sp, #32]
   100f4:	add	sp, sp, #0x70
   100f8:	ret
   100fc:	mov	x21, x0
   10100:	mov	x0, x20
   10104:	mov	x1, xzr
   10108:	bl	0 <LLVMInitializeAArch64AsmParser>
   1010c:	ldp	w8, w9, [x20, #8]
   10110:	mov	x0, x21
   10114:	b	100a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xdc>
   10118:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1011c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10120:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10124:	add	x0, x0, #0x0
   10128:	add	x1, x1, #0x0
   1012c:	add	x3, x3, #0x0
   10130:	mov	w2, #0x43                  	// #67
   10134:	bl	0 <__assert_fail>

0000000000010138 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>:
   10138:	sub	sp, sp, #0x100
   1013c:	stp	x29, x30, [sp, #160]
   10140:	stp	x28, x27, [sp, #176]
   10144:	stp	x26, x25, [sp, #192]
   10148:	stp	x24, x23, [sp, #208]
   1014c:	stp	x22, x21, [sp, #224]
   10150:	stp	x20, x19, [sp, #240]
   10154:	add	x29, sp, #0xa0
   10158:	ldr	x22, [x0, #8]
   1015c:	mov	x20, x0
   10160:	mov	x19, x1
   10164:	mov	x0, x22
   10168:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   1016c:	ldr	w8, [x0]
   10170:	cmp	w8, #0x15
   10174:	b.ne	101c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x8c>  // b.any
   10178:	stp	x20, x22, [x29, #-16]
   1017c:	ldr	x0, [x20, #8]
   10180:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10184:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10188:	mov	x21, x0
   1018c:	mov	x0, x22
   10190:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10194:	ldr	q0, [x0]
   10198:	ldr	x8, [x0, #16]
   1019c:	add	x1, x0, #0x18
   101a0:	stur	q0, [x29, #-64]
   101a4:	stur	x8, [x29, #-48]
   101a8:	ldr	w8, [x0, #32]
   101ac:	cmp	w8, #0x40
   101b0:	stur	w8, [x29, #-32]
   101b4:	b.hi	101cc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x94>  // b.pmore
   101b8:	ldr	x8, [x1]
   101bc:	stur	x8, [x29, #-40]
   101c0:	b	101d8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0xa0>
   101c4:	mov	w25, #0x1                   	// #1
   101c8:	b	104f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3c0>
   101cc:	sub	x8, x29, #0x40
   101d0:	add	x0, x8, #0x18
   101d4:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   101d8:	ldr	x8, [x22]
   101dc:	mov	x0, x22
   101e0:	ldr	x8, [x8, #136]
   101e4:	blr	x8
   101e8:	stp	xzr, xzr, [sp, #80]
   101ec:	ldr	x0, [x20, #8]
   101f0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   101f4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   101f8:	mov	x3, x0
   101fc:	sub	x0, x29, #0x10
   10200:	add	x1, sp, #0x4c
   10204:	add	x2, sp, #0x50
   10208:	mov	w4, wzr
   1020c:	bl	10e0c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10210:	cbz	w0, 10244 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x10c>
   10214:	mov	w25, w0
   10218:	cmp	w0, #0x1
   1021c:	b.ne	104e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a8>  // b.any
   10220:	ldr	x8, [x22]
   10224:	mov	x0, x22
   10228:	ldr	x8, [x8, #40]
   1022c:	blr	x8
   10230:	ldr	x1, [x0, #8]!
   10234:	sub	x2, x29, #0x40
   10238:	strb	wzr, [x0, #106]
   1023c:	bl	0 <LLVMInitializeAArch64AsmParser>
   10240:	b	104e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a8>
   10244:	ldr	x0, [x20, #8]
   10248:	ldr	w28, [sp, #76]
   1024c:	mov	w1, #0xd                   	// #13
   10250:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10254:	ldr	x8, [x20, #8]
   10258:	tbz	w0, #0, 102e8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1b0>
   1025c:	mov	x0, x8
   10260:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10264:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10268:	stp	xzr, xzr, [sp, #56]
   1026c:	ldr	x8, [x20, #8]
   10270:	mov	x22, x0
   10274:	mov	x0, x8
   10278:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   1027c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10280:	mov	x3, x0
   10284:	sub	x0, x29, #0x10
   10288:	add	x1, sp, #0x34
   1028c:	add	x2, sp, #0x38
   10290:	mov	w4, #0x1                   	// #1
   10294:	bl	10e0c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10298:	mov	w25, w0
   1029c:	cbnz	w0, 104e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a8>
   102a0:	ldr	x2, [sp, #88]
   102a4:	ldr	x8, [sp, #64]
   102a8:	cmp	x2, x8
   102ac:	b.ne	102c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x18c>  // b.any
   102b0:	cbz	x2, 10484 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x34c>
   102b4:	ldr	x0, [sp, #80]
   102b8:	ldr	x1, [sp, #56]
   102bc:	bl	0 <bcmp>
   102c0:	cbz	w0, 10484 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x34c>
   102c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   102c8:	add	x8, x8, #0x0
   102cc:	mov	w9, #0x103                 	// #259
   102d0:	stp	x8, xzr, [sp, #24]
   102d4:	strh	w9, [sp, #40]
   102d8:	ldr	x0, [x20, #8]
   102dc:	add	x2, sp, #0x18
   102e0:	mov	x1, x22
   102e4:	b	104d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
   102e8:	mov	w1, #0x19                  	// #25
   102ec:	mov	x0, x8
   102f0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   102f4:	str	w28, [sp, #20]
   102f8:	tbz	w0, #0, 103e8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2b0>
   102fc:	ldp	x22, x23, [sp, #80]
   10300:	mov	w27, #0x1                   	// #1
   10304:	ldr	x0, [x20, #8]
   10308:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   1030c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10310:	stp	xzr, xzr, [sp, #56]
   10314:	ldr	x8, [x20, #8]
   10318:	mov	x24, x0
   1031c:	mov	x0, x8
   10320:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10324:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10328:	mov	x3, x0
   1032c:	sub	x0, x29, #0x10
   10330:	add	x1, sp, #0x34
   10334:	add	x2, sp, #0x38
   10338:	mov	w4, #0x1                   	// #1
   1033c:	bl	10e0c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10340:	cbnz	w0, 1047c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x344>
   10344:	ldr	x8, [sp, #64]
   10348:	cmp	x23, x8
   1034c:	b.ne	10440 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x308>  // b.any
   10350:	cbz	x23, 10368 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x230>
   10354:	ldr	x1, [sp, #56]
   10358:	mov	x0, x22
   1035c:	mov	x2, x23
   10360:	bl	0 <bcmp>
   10364:	cbnz	w0, 10440 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x308>
   10368:	ldr	x0, [x20, #8]
   1036c:	ldr	x8, [x0]
   10370:	ldr	x8, [x8, #48]
   10374:	blr	x8
   10378:	ldr	x8, [x0, #24]
   1037c:	ldr	w25, [sp, #52]
   10380:	ldr	w9, [x8, #8]
   10384:	cmp	w9, w25
   10388:	b.ls	105e4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4ac>  // b.plast
   1038c:	ldr	x0, [x20, #8]
   10390:	ldr	x8, [x8, #104]
   10394:	ldr	x9, [x0]
   10398:	ldrh	w26, [x8, x25, lsl #1]
   1039c:	ldr	x8, [x9, #48]
   103a0:	blr	x8
   103a4:	ldr	x8, [x0, #24]
   103a8:	ldr	w9, [x8, #8]
   103ac:	cmp	w9, w28
   103b0:	b.ls	105e4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4ac>  // b.plast
   103b4:	ldr	x8, [x8, #104]
   103b8:	ldrh	w8, [x8, w28, uxtw #1]
   103bc:	add	w8, w8, #0x1
   103c0:	and	w8, w8, #0x1f
   103c4:	cmp	w26, w8
   103c8:	b.ne	104b0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x378>  // b.any
   103cc:	ldr	x0, [x20, #8]
   103d0:	mov	w1, #0x19                  	// #25
   103d4:	add	w27, w27, #0x1
   103d8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   103dc:	mov	w28, w25
   103e0:	tbnz	w0, #0, 10304 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1cc>
   103e4:	b	103ec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2b4>
   103e8:	mov	w27, #0x1                   	// #1
   103ec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   103f0:	add	x8, x8, #0x0
   103f4:	mov	w9, #0x103                 	// #259
   103f8:	stp	x8, xzr, [sp, #24]
   103fc:	strh	w9, [sp, #40]
   10400:	ldr	x0, [x20, #8]
   10404:	add	x2, sp, #0x18
   10408:	mov	w1, #0x16                  	// #22
   1040c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
   10410:	tbnz	w0, #0, 104dc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a4>
   10414:	cmp	w27, #0x5
   10418:	b.cc	1044c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x314>  // b.lo, b.ul, b.last
   1041c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10420:	add	x8, x8, #0x0
   10424:	mov	w9, #0x103                 	// #259
   10428:	stp	x8, xzr, [sp, #24]
   1042c:	strh	w9, [sp, #40]
   10430:	ldr	x0, [x20, #8]
   10434:	add	x2, sp, #0x18
   10438:	mov	x1, x21
   1043c:	b	104d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x398>
   10440:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10444:	add	x8, x8, #0x0
   10448:	b	104b8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x380>
   1044c:	ldr	x1, [sp, #88]
   10450:	cbz	x1, 1051c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3e4>
   10454:	ldr	x0, [sp, #80]
   10458:	add	x8, sp, #0x18
   1045c:	mov	w2, #0x2                   	// #2
   10460:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10464:	ldrb	w8, [sp, #32]
   10468:	ldr	w24, [sp, #20]
   1046c:	cbz	w8, 10520 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3e8>
   10470:	ldr	d0, [sp, #24]
   10474:	strb	wzr, [sp, #32]
   10478:	b	10524 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3ec>
   1047c:	mov	w25, w0
   10480:	b	104e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a8>
   10484:	ldr	w8, [sp, #52]
   10488:	add	w9, w8, #0x20
   1048c:	cmp	w8, w28
   10490:	csel	w8, w8, w9, hi  // hi = pmore
   10494:	sub	w8, w8, w28
   10498:	sub	w9, w8, #0x1
   1049c:	cmp	w9, #0x3
   104a0:	b.cc	105c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x48c>  // b.lo, b.ul, b.last
   104a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   104a8:	add	x8, x8, #0x0
   104ac:	b	102cc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x194>
   104b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   104b4:	add	x8, x8, #0x0
   104b8:	mov	w9, #0x103                 	// #259
   104bc:	stp	x8, xzr, [sp, #24]
   104c0:	strh	w9, [sp, #40]
   104c4:	ldr	x0, [x20, #8]
   104c8:	add	x2, sp, #0x18
   104cc:	mov	x1, x24
   104d0:	mov	x3, xzr
   104d4:	mov	x4, xzr
   104d8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   104dc:	mov	w25, #0x2                   	// #2
   104e0:	ldur	w8, [x29, #-32]
   104e4:	cmp	w8, #0x41
   104e8:	b.cc	104f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3c0>  // b.lo, b.ul, b.last
   104ec:	ldur	x0, [x29, #-40]
   104f0:	cbz	x0, 104f8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3c0>
   104f4:	bl	0 <_ZdaPv>
   104f8:	mov	w0, w25
   104fc:	ldp	x20, x19, [sp, #240]
   10500:	ldp	x22, x21, [sp, #224]
   10504:	ldp	x24, x23, [sp, #208]
   10508:	ldp	x26, x25, [sp, #192]
   1050c:	ldp	x28, x27, [sp, #176]
   10510:	ldp	x29, x30, [sp, #160]
   10514:	add	sp, sp, #0x100
   10518:	ret
   1051c:	ldr	w24, [sp, #20]
   10520:	movi	v0.2d, #0x0
   10524:	str	q0, [sp]
   10528:	ldr	x0, [x20, #8]
   1052c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10530:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10534:	ldr	x8, [x20, #8]
   10538:	mov	x22, x0
   1053c:	ldr	x9, [x8]
   10540:	mov	x0, x8
   10544:	ldr	x9, [x9, #48]
   10548:	blr	x9
   1054c:	mov	x23, x0
   10550:	mov	w0, #0x70                  	// #112
   10554:	bl	0 <_Znwm>
   10558:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1055c:	ldr	q0, [sp]
   10560:	mov	x8, x0
   10564:	add	x9, x9, #0x0
   10568:	strb	wzr, [x8, #32]!
   1056c:	str	x9, [x0]
   10570:	mov	w9, #0x4                   	// #4
   10574:	str	w9, [x0, #48]
   10578:	mov	w9, #0x2                   	// #2
   1057c:	str	x23, [x0, #104]
   10580:	stp	w24, w27, [x0, #72]
   10584:	str	d0, [x0, #80]
   10588:	str	w9, [x0, #88]
   1058c:	stp	x21, x22, [x0, #56]
   10590:	stp	x8, xzr, [x0, #16]
   10594:	ldp	w8, w9, [x19, #8]
   10598:	mov	x20, x0
   1059c:	cmp	w8, w9
   105a0:	b.cs	105d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x498>  // b.hs, b.nlast
   105a4:	ldr	x10, [x19]
   105a8:	cmp	w8, w9
   105ac:	str	x20, [x10, w8, uxtw #3]
   105b0:	b.cs	10604 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4cc>  // b.hs, b.nlast
   105b4:	mov	w25, wzr
   105b8:	add	w8, w8, #0x1
   105bc:	str	w8, [x19, #8]
   105c0:	b	104e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x3a8>
   105c4:	str	w28, [sp, #20]
   105c8:	add	w27, w8, #0x1
   105cc:	b	103ec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2b4>
   105d0:	mov	x0, x19
   105d4:	mov	x1, xzr
   105d8:	bl	0 <LLVMInitializeAArch64AsmParser>
   105dc:	ldp	w8, w9, [x19, #8]
   105e0:	b	105a4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x46c>
   105e4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   105e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   105ec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   105f0:	add	x0, x0, #0x0
   105f4:	add	x1, x1, #0x0
   105f8:	add	x3, x3, #0x0
   105fc:	mov	w2, #0x224                 	// #548
   10600:	bl	0 <__assert_fail>
   10604:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10608:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1060c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10610:	add	x0, x0, #0x0
   10614:	add	x1, x1, #0x0
   10618:	add	x3, x3, #0x0
   1061c:	mov	w2, #0x43                  	// #67
   10620:	bl	0 <__assert_fail>

0000000000010624 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   10624:	sub	sp, sp, #0xf0
   10628:	stp	x29, x30, [sp, #144]
   1062c:	str	x27, [sp, #160]
   10630:	stp	x26, x25, [sp, #176]
   10634:	stp	x24, x23, [sp, #192]
   10638:	stp	x22, x21, [sp, #208]
   1063c:	stp	x20, x19, [sp, #224]
   10640:	add	x29, sp, #0x90
   10644:	ldr	x19, [x0, #8]
   10648:	mov	x22, x0
   1064c:	mov	x20, x1
   10650:	mov	x0, x19
   10654:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10658:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   1065c:	ldr	x8, [x22, #8]
   10660:	mov	x21, x0
   10664:	mov	w1, #0x25                  	// #37
   10668:	mov	x0, x8
   1066c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10670:	ldr	x8, [x22, #8]
   10674:	mov	w23, w0
   10678:	mov	w1, #0xd                   	// #13
   1067c:	mov	x0, x8
   10680:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10684:	mov	w24, w0
   10688:	mov	x0, x19
   1068c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10690:	ldr	w8, [x0]
   10694:	mov	x26, x0
   10698:	cmp	w8, #0x4
   1069c:	b.eq	106dc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb8>  // b.none
   106a0:	cmp	w8, #0x6
   106a4:	b.eq	106fc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd8>  // b.none
   106a8:	tbz	w23, #0, 10828 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x204>
   106ac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   106b0:	add	x8, x8, #0x0
   106b4:	mov	w9, #0x103                 	// #259
   106b8:	stp	x8, xzr, [x29, #-56]
   106bc:	sturh	w9, [x29, #-40]
   106c0:	ldr	x0, [x22, #8]
   106c4:	sub	x1, x29, #0x38
   106c8:	mov	x2, xzr
   106cc:	mov	x3, xzr
   106d0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
   106d4:	mov	w0, #0x2                   	// #2
   106d8:	b	10bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b0>
   106dc:	ldr	x8, [x26, #16]
   106e0:	cmp	x8, #0x2
   106e4:	b.cc	106fc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd8>  // b.lo, b.ul, b.last
   106e8:	ldr	x8, [x26, #8]
   106ec:	mov	w9, #0x7830                	// #30768
   106f0:	ldrh	w8, [x8]
   106f4:	cmp	w8, w9
   106f8:	b.eq	10830 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20c>  // b.none
   106fc:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   10700:	sub	x8, x29, #0x38
   10704:	mov	x27, x0
   10708:	add	x25, x8, #0x8
   1070c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   10710:	mov	x23, x0
   10714:	cmp	x0, x27
   10718:	b.eq	1072c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x108>  // b.none
   1071c:	mov	x0, x25
   10720:	mov	x1, x27
   10724:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   10728:	b	10738 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   1072c:	mov	x0, x25
   10730:	mov	x1, x27
   10734:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   10738:	ldp	x1, x2, [x26, #8]
   1073c:	add	x8, sp, #0x28
   10740:	sub	x0, x29, #0x38
   10744:	mov	w3, #0x3                   	// #3
   10748:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1074c:	ldrb	w8, [sp, #48]
   10750:	and	w9, w8, #0xfffffffd
   10754:	strb	w9, [sp, #48]
   10758:	tbnz	w8, #0, 10764 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x140>
   1075c:	mov	w8, #0x1                   	// #1
   10760:	b	10770 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14c>
   10764:	ldr	x8, [sp, #40]
   10768:	str	xzr, [sp, #40]
   1076c:	orr	x8, x8, #0x1
   10770:	tst	x8, #0xfffffffffffffffe
   10774:	and	x26, x8, #0xfffffffffffffffe
   10778:	cset	w9, ne  // ne = any
   1077c:	orr	x9, x26, x9
   10780:	str	x9, [x29, #24]
   10784:	cbz	x26, 107a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x184>
   10788:	orr	x8, x8, #0x1
   1078c:	sub	x0, x29, #0x18
   10790:	stur	x8, [x29, #-24]
   10794:	str	xzr, [x29, #24]
   10798:	bl	0 <LLVMInitializeAArch64AsmParser>
   1079c:	ldur	x8, [x29, #-24]
   107a0:	cbnz	x8, 10c2c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x608>
   107a4:	ldr	x9, [x29, #24]
   107a8:	cbnz	x9, 10c24 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x600>
   107ac:	cbz	x26, 1080c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e8>
   107b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   107b4:	add	x8, x8, #0x0
   107b8:	mov	w9, #0x103                 	// #259
   107bc:	stp	x8, xzr, [x29, #-24]
   107c0:	sturh	w9, [x29, #-8]
   107c4:	ldr	x0, [x22, #8]
   107c8:	sub	x1, x29, #0x18
   107cc:	mov	x2, xzr
   107d0:	mov	x3, xzr
   107d4:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
   107d8:	ldrb	w8, [sp, #48]
   107dc:	tbnz	w8, #1, 10c1c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5f8>
   107e0:	tbz	w8, #0, 107fc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d8>
   107e4:	ldr	x0, [sp, #40]
   107e8:	cbz	x0, 107f8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d4>
   107ec:	ldr	x8, [x0]
   107f0:	ldr	x8, [x8, #8]
   107f4:	blr	x8
   107f8:	str	xzr, [sp, #40]
   107fc:	sub	x0, x29, #0x38
   10800:	bl	0 <LLVMInitializeAArch64AsmParser>
   10804:	mov	w0, #0x2                   	// #2
   10808:	b	10bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b0>
   1080c:	tbz	w24, #0, 10854 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x230>
   10810:	ldur	x8, [x29, #-48]
   10814:	cmp	x23, x8
   10818:	b.eq	10848 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x224>  // b.none
   1081c:	mov	x0, x25
   10820:	bl	0 <_ZN4llvm6detail9IEEEFloat10changeSignEv>
   10824:	b	10854 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x230>
   10828:	mov	w0, #0x1                   	// #1
   1082c:	b	10bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b0>
   10830:	ldr	w25, [x26, #32]
   10834:	add	x23, x26, #0x18
   10838:	cmp	w25, #0x40
   1083c:	b.hi	109c0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x39c>  // b.pmore
   10840:	mov	x8, x23
   10844:	b	109d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3b4>
   10848:	sub	x8, x29, #0x38
   1084c:	add	x0, x8, #0x8
   10850:	bl	0 <_ZN4llvm6detail13DoubleAPFloat10changeSignEv>
   10854:	ldur	x8, [x29, #-48]
   10858:	add	x9, sp, #0x8
   1085c:	add	x24, x9, #0x8
   10860:	mov	x0, x24
   10864:	cmp	x23, x8
   10868:	mov	x1, x25
   1086c:	b.eq	10880 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>  // b.none
   10870:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
   10874:	ldrb	w8, [sp, #48]
   10878:	tbz	w8, #1, 1088c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x268>
   1087c:	b	10c1c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5f8>
   10880:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
   10884:	ldrb	w8, [sp, #48]
   10888:	tbnz	w8, #1, 10c1c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5f8>
   1088c:	tbnz	w8, #0, 10c54 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x630>
   10890:	ldr	x0, [x22, #8]
   10894:	ldr	w9, [sp, #40]
   10898:	ldr	x8, [x0]
   1089c:	cmp	w9, #0x0
   108a0:	cset	w26, eq  // eq = none
   108a4:	ldr	x8, [x8, #48]
   108a8:	blr	x8
   108ac:	mov	x25, x0
   108b0:	mov	w0, #0x70                  	// #112
   108b4:	bl	0 <_Znwm>
   108b8:	ldr	x11, [sp, #16]
   108bc:	mov	x8, x0
   108c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   108c4:	mov	x22, x0
   108c8:	add	x9, x9, #0x0
   108cc:	mov	w10, #0xb                   	// #11
   108d0:	strb	wzr, [x8, #32]!
   108d4:	cmp	x23, x11
   108d8:	str	x9, [x0]
   108dc:	str	w10, [x0, #48]
   108e0:	stp	x8, xzr, [x0, #16]
   108e4:	stp	xzr, xzr, [x0, #56]
   108e8:	str	x25, [x0, #104]
   108ec:	b.eq	10900 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2dc>  // b.none
   108f0:	sub	x8, x29, #0x18
   108f4:	mov	x0, x24
   108f8:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   108fc:	b	10910 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2ec>
   10900:	add	x8, sp, #0x8
   10904:	add	x0, x8, #0x8
   10908:	sub	x8, x29, #0x18
   1090c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   10910:	ldur	w8, [x29, #-16]
   10914:	cmp	w8, #0x40
   10918:	b.hi	10938 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x314>  // b.pmore
   1091c:	cbz	w8, 10c74 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x650>
   10920:	ldur	x9, [x29, #-24]
   10924:	neg	x8, x8
   10928:	lsl	x9, x9, x8
   1092c:	asr	x8, x9, x8
   10930:	str	x8, [x22, #72]
   10934:	b	10964 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x340>
   10938:	sub	x0, x29, #0x18
   1093c:	bl	0 <LLVMInitializeAArch64AsmParser>
   10940:	cmp	w0, #0x41
   10944:	b.cs	10c94 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x670>  // b.hs, b.nlast
   10948:	ldur	x0, [x29, #-24]
   1094c:	ldur	w8, [x29, #-16]
   10950:	ldr	x9, [x0]
   10954:	cmp	w8, #0x41
   10958:	str	x9, [x22, #72]
   1095c:	b.cc	10964 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x340>  // b.lo, b.ul, b.last
   10960:	bl	0 <_ZdaPv>
   10964:	strb	w26, [x22, #80]
   10968:	stp	x21, x21, [x22, #56]
   1096c:	ldp	w8, w9, [x20, #8]
   10970:	cmp	w8, w9
   10974:	b.cs	10bf4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5d0>  // b.hs, b.nlast
   10978:	ldr	x10, [x20]
   1097c:	cmp	w8, w9
   10980:	str	x22, [x10, w8, uxtw #3]
   10984:	b.cs	10c34 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x610>  // b.hs, b.nlast
   10988:	add	w8, w8, #0x1
   1098c:	add	x0, sp, #0x8
   10990:	str	w8, [x20, #8]
   10994:	bl	0 <LLVMInitializeAArch64AsmParser>
   10998:	ldrb	w8, [sp, #48]
   1099c:	tbnz	w8, #1, 10c1c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5f8>
   109a0:	tbz	w8, #0, 10bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x594>
   109a4:	ldr	x0, [sp, #40]
   109a8:	cbz	x0, 109b8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x394>
   109ac:	ldr	x8, [x0]
   109b0:	ldr	x8, [x8, #8]
   109b4:	blr	x8
   109b8:	str	xzr, [sp, #40]
   109bc:	b	10bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x594>
   109c0:	mov	x0, x23
   109c4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   109c8:	sub	w8, w25, w0
   109cc:	cmp	w8, #0x41
   109d0:	b.cs	10cb4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x690>  // b.hs, b.nlast
   109d4:	ldr	x8, [x23]
   109d8:	ldr	x8, [x8]
   109dc:	cmp	x8, #0x100
   109e0:	cset	w8, lt  // lt = tstop
   109e4:	bic	w8, w8, w24
   109e8:	tbnz	w8, #0, 109f8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3d4>
   109ec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   109f0:	add	x8, x8, #0x0
   109f4:	b	106b4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x90>
   109f8:	cmp	w25, #0x40
   109fc:	b.ls	10a18 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f4>  // b.plast
   10a00:	mov	x0, x23
   10a04:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   10a08:	sub	w8, w25, w0
   10a0c:	cmp	w8, #0x41
   10a10:	b.cs	10cb4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x690>  // b.hs, b.nlast
   10a14:	ldr	x23, [x23]
   10a18:	ldr	w8, [x23]
   10a1c:	sub	x0, x29, #0x18
   10a20:	lsl	w10, w8, #24
   10a24:	and	w12, w8, #0x40
   10a28:	and	w10, w10, #0x80000000
   10a2c:	lsr	w12, w12, #6
   10a30:	lsr	w9, w8, #4
   10a34:	bfi	w10, w12, #30, #1
   10a38:	sbfx	w11, w8, #6, #1
   10a3c:	bfi	w10, w9, #23, #2
   10a40:	and	w11, w11, #0x3e000000
   10a44:	bfi	w10, w8, #19, #4
   10a48:	orr	w8, w10, w11
   10a4c:	eor	w8, w8, #0x40000000
   10a50:	fmov	s0, w8
   10a54:	sub	x9, x29, #0x38
   10a58:	fcvt	d0, s0
   10a5c:	add	x25, x9, #0x8
   10a60:	bl	0 <_ZN4llvm6detail9IEEEFloatC1Ed>
   10a64:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   10a68:	mov	x2, x0
   10a6c:	sub	x1, x29, #0x18
   10a70:	mov	x0, x25
   10a74:	bl	0 <_ZN4llvm7APFloat7StorageC1ENS_6detail9IEEEFloatERKNS_12fltSemanticsE>
   10a78:	sub	x0, x29, #0x18
   10a7c:	bl	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
   10a80:	ldur	x26, [x29, #-48]
   10a84:	add	x8, sp, #0x38
   10a88:	add	x23, x8, #0x8
   10a8c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   10a90:	mov	x24, x0
   10a94:	cmp	x0, x26
   10a98:	b.eq	10aac <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x488>  // b.none
   10a9c:	mov	x0, x23
   10aa0:	mov	x1, x25
   10aa4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
   10aa8:	b	10ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x494>
   10aac:	mov	x0, x23
   10ab0:	mov	x1, x25
   10ab4:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
   10ab8:	ldr	x0, [x22, #8]
   10abc:	ldr	x8, [x0]
   10ac0:	ldr	x8, [x8, #48]
   10ac4:	blr	x8
   10ac8:	mov	x25, x0
   10acc:	mov	w0, #0x70                  	// #112
   10ad0:	bl	0 <_Znwm>
   10ad4:	ldr	x11, [sp, #64]
   10ad8:	mov	x8, x0
   10adc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10ae0:	mov	x22, x0
   10ae4:	add	x9, x9, #0x0
   10ae8:	mov	w10, #0xb                   	// #11
   10aec:	strb	wzr, [x8, #32]!
   10af0:	cmp	x24, x11
   10af4:	str	x9, [x0]
   10af8:	str	w10, [x0, #48]
   10afc:	stp	x8, xzr, [x0, #16]
   10b00:	stp	xzr, xzr, [x0, #56]
   10b04:	str	x25, [x0, #104]
   10b08:	b.eq	10b1c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x4f8>  // b.none
   10b0c:	sub	x8, x29, #0x18
   10b10:	mov	x0, x23
   10b14:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   10b18:	b	10b2c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x508>
   10b1c:	add	x8, sp, #0x38
   10b20:	add	x0, x8, #0x8
   10b24:	sub	x8, x29, #0x18
   10b28:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   10b2c:	ldur	w8, [x29, #-16]
   10b30:	cmp	w8, #0x40
   10b34:	b.hi	10b54 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x530>  // b.pmore
   10b38:	cbz	w8, 10c74 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x650>
   10b3c:	ldur	x9, [x29, #-24]
   10b40:	neg	x8, x8
   10b44:	lsl	x9, x9, x8
   10b48:	asr	x8, x9, x8
   10b4c:	str	x8, [x22, #72]
   10b50:	b	10b80 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x55c>
   10b54:	sub	x0, x29, #0x18
   10b58:	bl	0 <LLVMInitializeAArch64AsmParser>
   10b5c:	cmp	w0, #0x41
   10b60:	b.cs	10c94 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x670>  // b.hs, b.nlast
   10b64:	ldur	x0, [x29, #-24]
   10b68:	ldur	w8, [x29, #-16]
   10b6c:	ldr	x9, [x0]
   10b70:	cmp	w8, #0x41
   10b74:	str	x9, [x22, #72]
   10b78:	b.cc	10b80 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x55c>  // b.lo, b.ul, b.last
   10b7c:	bl	0 <_ZdaPv>
   10b80:	mov	w8, #0x1                   	// #1
   10b84:	stp	x21, x21, [x22, #56]
   10b88:	strb	w8, [x22, #80]
   10b8c:	ldp	w8, w9, [x20, #8]
   10b90:	cmp	w8, w9
   10b94:	b.cs	10c08 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5e4>  // b.hs, b.nlast
   10b98:	ldr	x10, [x20]
   10b9c:	cmp	w8, w9
   10ba0:	str	x22, [x10, w8, uxtw #3]
   10ba4:	b.cs	10c34 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x610>  // b.hs, b.nlast
   10ba8:	add	w8, w8, #0x1
   10bac:	add	x0, sp, #0x38
   10bb0:	str	w8, [x20, #8]
   10bb4:	bl	0 <LLVMInitializeAArch64AsmParser>
   10bb8:	sub	x0, x29, #0x38
   10bbc:	bl	0 <LLVMInitializeAArch64AsmParser>
   10bc0:	ldr	x8, [x19]
   10bc4:	mov	x0, x19
   10bc8:	ldr	x8, [x8, #136]
   10bcc:	blr	x8
   10bd0:	mov	w0, wzr
   10bd4:	ldp	x20, x19, [sp, #224]
   10bd8:	ldp	x22, x21, [sp, #208]
   10bdc:	ldp	x24, x23, [sp, #192]
   10be0:	ldp	x26, x25, [sp, #176]
   10be4:	ldr	x27, [sp, #160]
   10be8:	ldp	x29, x30, [sp, #144]
   10bec:	add	sp, sp, #0xf0
   10bf0:	ret
   10bf4:	mov	x0, x20
   10bf8:	mov	x1, xzr
   10bfc:	bl	0 <LLVMInitializeAArch64AsmParser>
   10c00:	ldp	w8, w9, [x20, #8]
   10c04:	b	10978 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x354>
   10c08:	mov	x0, x20
   10c0c:	mov	x1, xzr
   10c10:	bl	0 <LLVMInitializeAArch64AsmParser>
   10c14:	ldp	w8, w9, [x20, #8]
   10c18:	b	10b98 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x574>
   10c1c:	add	x0, sp, #0x28
   10c20:	bl	0 <LLVMInitializeAArch64AsmParser>
   10c24:	add	x0, x29, #0x18
   10c28:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   10c2c:	sub	x0, x29, #0x18
   10c30:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   10c34:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10c38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10c3c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10c40:	add	x0, x0, #0x0
   10c44:	add	x1, x1, #0x0
   10c48:	add	x3, x3, #0x0
   10c4c:	mov	w2, #0x43                  	// #67
   10c50:	bl	0 <__assert_fail>
   10c54:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10c58:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10c5c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10c60:	add	x0, x0, #0x0
   10c64:	add	x1, x1, #0x0
   10c68:	add	x3, x3, #0x0
   10c6c:	mov	w2, #0x272                 	// #626
   10c70:	bl	0 <__assert_fail>
   10c74:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10c78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10c7c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10c80:	add	x0, x0, #0x0
   10c84:	add	x1, x1, #0x0
   10c88:	add	x3, x3, #0x0
   10c8c:	mov	w2, #0x307                 	// #775
   10c90:	bl	0 <__assert_fail>
   10c94:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10c98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10c9c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10ca0:	add	x0, x0, #0x0
   10ca4:	add	x1, x1, #0x0
   10ca8:	add	x3, x3, #0x0
   10cac:	mov	w2, #0x663                 	// #1635
   10cb0:	bl	0 <__assert_fail>
   10cb4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10cb8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10cbc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10cc0:	add	x0, x0, #0x0
   10cc4:	add	x1, x1, #0x0
   10cc8:	add	x3, x3, #0x0
   10ccc:	mov	w2, #0x657                 	// #1623
   10cd0:	bl	0 <__assert_fail>

0000000000010cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>:
   10cd4:	sub	sp, sp, #0x50
   10cd8:	stp	x29, x30, [sp, #32]
   10cdc:	str	x21, [sp, #48]
   10ce0:	stp	x20, x19, [sp, #64]
   10ce4:	add	x29, sp, #0x20
   10ce8:	mov	w8, #0xfff                 	// #4095
   10cec:	str	w8, [x1]
   10cf0:	strh	wzr, [x2]
   10cf4:	str	xzr, [x3]
   10cf8:	cbz	x0, 10dcc <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xf8>
   10cfc:	ldr	w8, [x0]
   10d00:	mov	x20, x3
   10d04:	mov	x19, x2
   10d08:	mov	x21, x1
   10d0c:	cmp	w8, #0x4
   10d10:	b.ne	10d28 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x54>  // b.any
   10d14:	ldr	w8, [x0, #24]
   10d18:	str	w8, [x21]
   10d1c:	ldr	x0, [x0, #16]
   10d20:	cbz	x0, 10dec <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x118>
   10d24:	ldr	w8, [x0]
   10d28:	cmp	w8, #0x2
   10d2c:	b.ne	10d40 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0x6c>  // b.any
   10d30:	ldrh	w8, [x0, #16]
   10d34:	mov	w0, #0x1                   	// #1
   10d38:	strh	w8, [x19]
   10d3c:	b	10d88 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
   10d40:	mov	x1, sp
   10d44:	mov	x2, xzr
   10d48:	mov	x3, xzr
   10d4c:	stp	xzr, xzr, [sp]
   10d50:	str	wzr, [sp, #24]
   10d54:	str	xzr, [sp, #16]
   10d58:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   10d5c:	mov	w8, w0
   10d60:	mov	w0, wzr
   10d64:	tbz	w8, #0, 10d88 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
   10d68:	ldr	x8, [sp, #8]
   10d6c:	cbnz	x8, 10d84 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb0>
   10d70:	ldr	x9, [sp]
   10d74:	ldr	w8, [x21]
   10d78:	cbnz	x9, 10d9c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xc8>
   10d7c:	cmp	w8, #0xfff
   10d80:	b.ne	10d9c <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xc8>  // b.any
   10d84:	mov	w0, wzr
   10d88:	ldp	x20, x19, [sp, #64]
   10d8c:	ldr	x21, [sp, #48]
   10d90:	ldp	x29, x30, [sp, #32]
   10d94:	add	sp, sp, #0x50
   10d98:	ret
   10d9c:	cbz	x9, 10da8 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xd4>
   10da0:	ldrh	w9, [x9, #16]
   10da4:	strh	w9, [x19]
   10da8:	ldr	x9, [sp, #16]
   10dac:	cmp	w8, #0xfff
   10db0:	cset	w8, eq  // eq = none
   10db4:	str	x9, [x20]
   10db8:	ldrh	w9, [x19]
   10dbc:	cmp	w9, #0x0
   10dc0:	cset	w9, eq  // eq = none
   10dc4:	orr	w0, w8, w9
   10dc8:	b	10d88 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl+0xb4>
   10dcc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10dd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10dd4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10dd8:	add	x0, x0, #0x0
   10ddc:	add	x1, x1, #0x0
   10de0:	add	x3, x3, #0x0
   10de4:	mov	w2, #0x69                  	// #105
   10de8:	bl	0 <__assert_fail>
   10dec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10df0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10df4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10df8:	add	x0, x0, #0x0
   10dfc:	add	x1, x1, #0x0
   10e00:	add	x3, x3, #0x0
   10e04:	mov	w2, #0x69                  	// #105
   10e08:	bl	0 <__assert_fail>

0000000000010e0c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
   10e0c:	sub	sp, sp, #0x90
   10e10:	stp	x29, x30, [sp, #80]
   10e14:	str	x23, [sp, #96]
   10e18:	stp	x22, x21, [sp, #112]
   10e1c:	stp	x20, x19, [sp, #128]
   10e20:	add	x29, sp, #0x50
   10e24:	ldp	x20, x0, [x0]
   10e28:	mov	w21, w4
   10e2c:	mov	x19, x3
   10e30:	mov	x22, x2
   10e34:	mov	x23, x1
   10e38:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10e3c:	ldr	q0, [x0]
   10e40:	ldr	x8, [x0, #16]
   10e44:	add	x1, x0, #0x18
   10e48:	str	q0, [sp, #32]
   10e4c:	str	x8, [sp, #48]
   10e50:	ldr	w8, [x0, #32]
   10e54:	cmp	w8, #0x40
   10e58:	str	w8, [sp, #64]
   10e5c:	b.hi	10e6c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x60>  // b.pmore
   10e60:	ldr	x8, [x1]
   10e64:	str	x8, [sp, #56]
   10e68:	b	10e78 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x6c>
   10e6c:	add	x8, sp, #0x20
   10e70:	add	x0, x8, #0x18
   10e74:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10e78:	mov	w3, #0x2                   	// #2
   10e7c:	mov	x0, x20
   10e80:	mov	x1, x23
   10e84:	mov	x2, x22
   10e88:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   10e8c:	cbz	w0, 10ee8 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xdc>
   10e90:	cmp	w0, #0x2
   10e94:	b.eq	10eb4 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xa8>  // b.none
   10e98:	ldr	w8, [sp, #32]
   10e9c:	cmp	w8, #0x2
   10ea0:	b.ne	10eb4 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xa8>  // b.any
   10ea4:	cmp	w0, #0x1
   10ea8:	mov	w22, #0x1                   	// #1
   10eac:	b.ne	10f04 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf8>  // b.any
   10eb0:	tbz	w21, #0, 10f04 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf8>
   10eb4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10eb8:	add	x8, x8, #0x0
   10ebc:	mov	w9, #0x103                 	// #259
   10ec0:	stp	x8, xzr, [sp, #8]
   10ec4:	strh	w9, [sp, #24]
   10ec8:	ldr	x0, [x20, #8]
   10ecc:	add	x2, sp, #0x8
   10ed0:	mov	x1, x19
   10ed4:	mov	x3, xzr
   10ed8:	mov	x4, xzr
   10edc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   10ee0:	mov	w22, #0x2                   	// #2
   10ee4:	b	10f04 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xf8>
   10ee8:	ldp	x0, x1, [x22]
   10eec:	add	x8, sp, #0x8
   10ef0:	mov	w2, #0x2                   	// #2
   10ef4:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10ef8:	ldrb	w8, [sp, #16]
   10efc:	cbz	w8, 10f38 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x12c>
   10f00:	mov	w22, wzr
   10f04:	ldr	w8, [sp, #64]
   10f08:	cmp	w8, #0x41
   10f0c:	b.cc	10f1c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x110>  // b.lo, b.ul, b.last
   10f10:	ldr	x0, [sp, #56]
   10f14:	cbz	x0, 10f1c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x110>
   10f18:	bl	0 <_ZdaPv>
   10f1c:	mov	w0, w22
   10f20:	ldp	x20, x19, [sp, #128]
   10f24:	ldp	x22, x21, [sp, #112]
   10f28:	ldr	x23, [sp, #96]
   10f2c:	ldp	x29, x30, [sp, #80]
   10f30:	add	sp, sp, #0x90
   10f34:	ret
   10f38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10f3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10f40:	add	x0, x0, #0x0
   10f44:	add	x1, x1, #0x0
   10f48:	mov	w2, #0xcfd                 	// #3325
   10f4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000010f50 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
   10f50:	sub	sp, sp, #0x80
   10f54:	stp	x29, x30, [sp, #80]
   10f58:	stp	x22, x21, [sp, #96]
   10f5c:	stp	x20, x19, [sp, #112]
   10f60:	add	x29, sp, #0x50
   10f64:	ldp	x20, x0, [x0]
   10f68:	mov	x19, x3
   10f6c:	mov	x21, x2
   10f70:	mov	x22, x1
   10f74:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10f78:	ldr	q0, [x0]
   10f7c:	ldr	x8, [x0, #16]
   10f80:	add	x1, x0, #0x18
   10f84:	str	q0, [sp, #32]
   10f88:	str	x8, [sp, #48]
   10f8c:	ldr	w8, [x0, #32]
   10f90:	cmp	w8, #0x40
   10f94:	str	w8, [sp, #64]
   10f98:	b.hi	10fa8 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x58>  // b.pmore
   10f9c:	ldr	x8, [x1]
   10fa0:	str	x8, [sp, #56]
   10fa4:	b	10fb4 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x64>
   10fa8:	add	x8, sp, #0x20
   10fac:	add	x0, x8, #0x18
   10fb0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10fb4:	mov	w3, #0x1                   	// #1
   10fb8:	mov	x0, x20
   10fbc:	mov	x1, x22
   10fc0:	mov	x2, x21
   10fc4:	bl	a520 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   10fc8:	cbz	w0, 10fec <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x9c>
   10fcc:	sub	w8, w0, #0x1
   10fd0:	cmp	w8, #0x2
   10fd4:	b.cc	1100c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xbc>  // b.lo, b.ul, b.last
   10fd8:	ldr	w8, [sp, #32]
   10fdc:	cmp	w8, #0x2
   10fe0:	b.ne	1100c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xbc>  // b.any
   10fe4:	mov	w19, #0x1                   	// #1
   10fe8:	b	1103c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xec>
   10fec:	ldp	x0, x1, [x21]
   10ff0:	add	x8, sp, #0x8
   10ff4:	mov	w2, #0x1                   	// #1
   10ff8:	bl	a64c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10ffc:	ldrb	w8, [sp, #16]
   11000:	cbz	w8, 1106c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x11c>
   11004:	mov	w19, wzr
   11008:	b	1103c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xec>
   1100c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11010:	add	x8, x8, #0x0
   11014:	mov	w9, #0x103                 	// #259
   11018:	stp	x8, xzr, [sp, #8]
   1101c:	strh	w9, [sp, #24]
   11020:	ldr	x0, [x20, #8]
   11024:	add	x2, sp, #0x8
   11028:	mov	x1, x19
   1102c:	mov	x3, xzr
   11030:	mov	x4, xzr
   11034:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   11038:	mov	w19, #0x2                   	// #2
   1103c:	ldr	w8, [sp, #64]
   11040:	cmp	w8, #0x41
   11044:	b.cc	11054 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x104>  // b.lo, b.ul, b.last
   11048:	ldr	x0, [sp, #56]
   1104c:	cbz	x0, 11054 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x104>
   11050:	bl	0 <_ZdaPv>
   11054:	mov	w0, w19
   11058:	ldp	x20, x19, [sp, #112]
   1105c:	ldp	x22, x21, [sp, #96]
   11060:	ldp	x29, x30, [sp, #80]
   11064:	add	sp, sp, #0x80
   11068:	ret
   1106c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11070:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11074:	add	x0, x0, #0x0
   11078:	add	x1, x1, #0x0
   1107c:	mov	w2, #0xcfd                 	// #3325
   11080:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000011084 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>:
   11084:	stp	x29, x30, [sp, #-48]!
   11088:	stp	x22, x21, [sp, #16]
   1108c:	stp	x20, x19, [sp, #32]
   11090:	mov	x29, sp
   11094:	mov	w20, w0
   11098:	ldr	x0, [x1]
   1109c:	ldr	w8, [x1, #8]
   110a0:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
   110a4:	mov	x19, x1
   110a8:	add	x2, x2, #0x0
   110ac:	add	x1, x0, x8, lsl #4
   110b0:	bl	0 <LLVMInitializeAArch64AsmParser>
   110b4:	mov	x21, x0
   110b8:	ldr	x0, [x19]
   110bc:	ldr	w8, [x19, #8]
   110c0:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
   110c4:	add	x2, x2, #0x0
   110c8:	add	x22, x0, x8, lsl #4
   110cc:	mov	x1, x22
   110d0:	bl	0 <LLVMInitializeAArch64AsmParser>
   110d4:	ldr	x9, [x19]
   110d8:	ldr	w8, [x19, #8]
   110dc:	cmp	x21, x22
   110e0:	b.ne	11188 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x104>  // b.any
   110e4:	add	x10, x9, x8, lsl #4
   110e8:	cmp	x0, x10
   110ec:	b.eq	11188 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x104>  // b.none
   110f0:	ldr	w10, [x19, #12]
   110f4:	sub	w11, w20, #0x5
   110f8:	cmp	w11, #0x2
   110fc:	b.cs	11228 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1a4>  // b.hs, b.nlast
   11100:	cmp	w8, w10
   11104:	b.cs	11320 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x29c>  // b.hs, b.nlast
   11108:	add	x8, x9, x8, lsl #4
   1110c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11110:	add	x9, x9, #0x0
   11114:	mov	w10, #0x3                   	// #3
   11118:	stp	x9, x10, [x8]
   1111c:	ldp	w8, w9, [x19, #8]
   11120:	cmp	w8, w9
   11124:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11128:	add	w8, w8, #0x1
   1112c:	cmp	w8, w9
   11130:	str	w8, [x19, #8]
   11134:	b.cs	11340 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2bc>  // b.hs, b.nlast
   11138:	ldr	x9, [x19]
   1113c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11140:	add	x10, x10, #0x0
   11144:	mov	w11, #0x4                   	// #4
   11148:	add	x8, x9, w8, uxtw #4
   1114c:	stp	x10, x11, [x8]
   11150:	ldp	w8, w9, [x19, #8]
   11154:	cmp	w8, w9
   11158:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   1115c:	add	w8, w8, #0x1
   11160:	cmp	w8, w9
   11164:	str	w8, [x19, #8]
   11168:	b.cs	1135c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2d8>  // b.hs, b.nlast
   1116c:	ldr	x9, [x19]
   11170:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11174:	add	x10, x10, #0x0
   11178:	mov	w11, #0x4                   	// #4
   1117c:	add	x8, x9, w8, uxtw #4
   11180:	stp	x10, x11, [x8]
   11184:	b	11244 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1c0>
   11188:	cmp	x21, x22
   1118c:	b.eq	112d8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x254>  // b.none
   11190:	ldr	w10, [x19, #12]
   11194:	sub	w11, w20, #0x5
   11198:	cmp	w11, #0x2
   1119c:	b.cs	11274 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1f0>  // b.hs, b.nlast
   111a0:	cmp	w8, w10
   111a4:	b.cs	11398 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x314>  // b.hs, b.nlast
   111a8:	add	x8, x9, x8, lsl #4
   111ac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   111b0:	add	x9, x9, #0x0
   111b4:	mov	w10, #0x5                   	// #5
   111b8:	stp	x9, x10, [x8]
   111bc:	ldp	w8, w9, [x19, #8]
   111c0:	cmp	w8, w9
   111c4:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   111c8:	add	w8, w8, #0x1
   111cc:	cmp	w8, w9
   111d0:	str	w8, [x19, #8]
   111d4:	b.cs	113b8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x334>  // b.hs, b.nlast
   111d8:	ldr	x9, [x19]
   111dc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   111e0:	add	x10, x10, #0x0
   111e4:	mov	w11, #0x6                   	// #6
   111e8:	add	x8, x9, w8, uxtw #4
   111ec:	stp	x10, x11, [x8]
   111f0:	ldp	w8, w9, [x19, #8]
   111f4:	cmp	w8, w9
   111f8:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   111fc:	add	w8, w8, #0x1
   11200:	cmp	w8, w9
   11204:	str	w8, [x19, #8]
   11208:	b.cs	113d4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x350>  // b.hs, b.nlast
   1120c:	ldr	x9, [x19]
   11210:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11214:	add	x10, x10, #0x0
   11218:	mov	w11, #0x6                   	// #6
   1121c:	add	x8, x9, w8, uxtw #4
   11220:	stp	x10, x11, [x8]
   11224:	b	11290 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x20c>
   11228:	cmp	w8, w10
   1122c:	b.cs	11378 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2f4>  // b.hs, b.nlast
   11230:	add	x8, x9, x8, lsl #4
   11234:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11238:	add	x9, x9, #0x0
   1123c:	mov	w10, #0x4                   	// #4
   11240:	stp	x9, x10, [x8]
   11244:	ldp	w8, w9, [x19, #8]
   11248:	cmp	w8, w9
   1124c:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11250:	add	w8, w8, #0x1
   11254:	cmp	w8, w9
   11258:	str	w8, [x19, #8]
   1125c:	b.cs	112e8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x264>  // b.hs, b.nlast
   11260:	ldr	x9, [x19]
   11264:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11268:	add	x10, x10, #0x0
   1126c:	mov	w11, #0x3                   	// #3
   11270:	b	112bc <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x238>
   11274:	cmp	w8, w10
   11278:	b.cs	113f0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x36c>  // b.hs, b.nlast
   1127c:	add	x8, x9, x8, lsl #4
   11280:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11284:	add	x9, x9, #0x0
   11288:	mov	w10, #0x6                   	// #6
   1128c:	stp	x9, x10, [x8]
   11290:	ldp	w8, w9, [x19, #8]
   11294:	cmp	w8, w9
   11298:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   1129c:	add	w8, w8, #0x1
   112a0:	cmp	w8, w9
   112a4:	str	w8, [x19, #8]
   112a8:	b.cs	11304 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x280>  // b.hs, b.nlast
   112ac:	ldr	x9, [x19]
   112b0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   112b4:	add	x10, x10, #0x0
   112b8:	mov	w11, #0x5                   	// #5
   112bc:	add	x8, x9, w8, uxtw #4
   112c0:	stp	x10, x11, [x8]
   112c4:	ldp	w8, w9, [x19, #8]
   112c8:	cmp	w8, w9
   112cc:	b.cs	11410 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   112d0:	add	w8, w8, #0x1
   112d4:	str	w8, [x19, #8]
   112d8:	ldp	x20, x19, [sp, #32]
   112dc:	ldp	x22, x21, [sp, #16]
   112e0:	ldp	x29, x30, [sp], #48
   112e4:	ret
   112e8:	add	x1, x19, #0x10
   112ec:	mov	w3, #0x10                  	// #16
   112f0:	mov	x0, x19
   112f4:	mov	x2, xzr
   112f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   112fc:	ldr	w8, [x19, #8]
   11300:	b	11260 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1dc>
   11304:	add	x1, x19, #0x10
   11308:	mov	w3, #0x10                  	// #16
   1130c:	mov	x0, x19
   11310:	mov	x2, xzr
   11314:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11318:	ldr	w8, [x19, #8]
   1131c:	b	112ac <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x228>
   11320:	add	x1, x19, #0x10
   11324:	mov	w3, #0x10                  	// #16
   11328:	mov	x0, x19
   1132c:	mov	x2, xzr
   11330:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11334:	ldr	w8, [x19, #8]
   11338:	ldr	x9, [x19]
   1133c:	b	11108 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x84>
   11340:	add	x1, x19, #0x10
   11344:	mov	w3, #0x10                  	// #16
   11348:	mov	x0, x19
   1134c:	mov	x2, xzr
   11350:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11354:	ldr	w8, [x19, #8]
   11358:	b	11138 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xb4>
   1135c:	add	x1, x19, #0x10
   11360:	mov	w3, #0x10                  	// #16
   11364:	mov	x0, x19
   11368:	mov	x2, xzr
   1136c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11370:	ldr	w8, [x19, #8]
   11374:	b	1116c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xe8>
   11378:	add	x1, x19, #0x10
   1137c:	mov	w3, #0x10                  	// #16
   11380:	mov	x0, x19
   11384:	mov	x2, xzr
   11388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1138c:	ldr	w8, [x19, #8]
   11390:	ldr	x9, [x19]
   11394:	b	11230 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1ac>
   11398:	add	x1, x19, #0x10
   1139c:	mov	w3, #0x10                  	// #16
   113a0:	mov	x0, x19
   113a4:	mov	x2, xzr
   113a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   113ac:	ldr	w8, [x19, #8]
   113b0:	ldr	x9, [x19]
   113b4:	b	111a8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x124>
   113b8:	add	x1, x19, #0x10
   113bc:	mov	w3, #0x10                  	// #16
   113c0:	mov	x0, x19
   113c4:	mov	x2, xzr
   113c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   113cc:	ldr	w8, [x19, #8]
   113d0:	b	111d8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x154>
   113d4:	add	x1, x19, #0x10
   113d8:	mov	w3, #0x10                  	// #16
   113dc:	mov	x0, x19
   113e0:	mov	x2, xzr
   113e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   113e8:	ldr	w8, [x19, #8]
   113ec:	b	1120c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x188>
   113f0:	add	x1, x19, #0x10
   113f4:	mov	w3, #0x10                  	// #16
   113f8:	mov	x0, x19
   113fc:	mov	x2, xzr
   11400:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11404:	ldr	w8, [x19, #8]
   11408:	ldr	x9, [x19]
   1140c:	b	1127c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1f8>
   11410:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11414:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11418:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1141c:	add	x0, x0, #0x0
   11420:	add	x1, x1, #0x0
   11424:	add	x3, x3, #0x0
   11428:	mov	w2, #0x43                  	// #67
   1142c:	bl	0 <__assert_fail>

0000000000011430 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl>:
   11430:	sub	sp, sp, #0x50
   11434:	stp	x29, x30, [sp, #32]
   11438:	str	x21, [sp, #48]
   1143c:	stp	x20, x19, [sp, #64]
   11440:	add	x29, sp, #0x20
   11444:	ldr	x20, [x0]
   11448:	ldr	x0, [x20, #8]
   1144c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   11450:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   11454:	str	xzr, [x29, #24]
   11458:	ldr	x8, [x20, #8]
   1145c:	mov	x19, x0
   11460:	add	x1, x29, #0x18
   11464:	mov	x0, x8
   11468:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
   1146c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11470:	add	x8, x8, #0x0
   11474:	mov	w9, #0x103                 	// #259
   11478:	stp	x8, xzr, [sp, #8]
   1147c:	strh	w9, [sp, #24]
   11480:	ldr	x8, [x20, #8]
   11484:	and	w1, w0, #0x1
   11488:	add	x3, sp, #0x8
   1148c:	mov	x2, x19
   11490:	mov	x0, x8
   11494:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
   11498:	tbnz	w0, #0, 114e8 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xb8>
   1149c:	ldr	x8, [x29, #24]
   114a0:	cbz	x8, 114b4 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x84>
   114a4:	ldr	w9, [x8]
   114a8:	cmp	w9, #0x1
   114ac:	csel	x21, x8, xzr, eq  // eq = none
   114b0:	b	114b8 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x88>
   114b4:	mov	x21, xzr
   114b8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   114bc:	add	x8, x8, #0x0
   114c0:	mov	w9, #0x103                 	// #259
   114c4:	stp	x8, xzr, [sp, #8]
   114c8:	strh	w9, [sp, #24]
   114cc:	ldr	x0, [x20, #8]
   114d0:	cmp	x21, #0x0
   114d4:	cset	w1, eq  // eq = none
   114d8:	add	x3, sp, #0x8
   114dc:	mov	x2, x19
   114e0:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
   114e4:	tbz	w0, #0, 114f0 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xc0>
   114e8:	mov	w0, #0x1                   	// #1
   114ec:	b	11518 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xe8>
   114f0:	ldr	x0, [x20, #8]
   114f4:	ldr	x8, [x0]
   114f8:	ldr	x8, [x8, #56]
   114fc:	blr	x8
   11500:	ldr	x0, [x0, #16]
   11504:	ldr	w1, [x21, #16]
   11508:	ldr	x8, [x0]
   1150c:	ldr	x8, [x8, #80]
   11510:	blr	x8
   11514:	mov	w0, wzr
   11518:	ldp	x20, x19, [sp, #64]
   1151c:	ldr	x21, [sp, #48]
   11520:	ldp	x29, x30, [sp, #32]
   11524:	add	sp, sp, #0x50
   11528:	ret

000000000001152c <_ZN4llvmL15getXRegFromWRegEj>:
   1152c:	sub	w9, w0, #0x6
   11530:	mov	w8, w0
   11534:	cmp	w9, #0xd1
   11538:	b.hi	11658 <_ZN4llvmL15getXRegFromWRegEj+0x12c>  // b.pmore
   1153c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11540:	add	x10, x10, #0x0
   11544:	adr	x11, 11558 <_ZN4llvmL15getXRegFromWRegEj+0x2c>
   11548:	ldrb	w12, [x10, x9]
   1154c:	add	x11, x11, x12, lsl #2
   11550:	mov	w0, #0xd8                  	// #216
   11554:	br	x11
   11558:	mov	w0, #0x5                   	// #5
   1155c:	ret
   11560:	mov	w0, #0x8                   	// #8
   11564:	ret
   11568:	mov	w0, #0xd9                  	// #217
   1156c:	ret
   11570:	mov	w0, #0xda                  	// #218
   11574:	ret
   11578:	mov	w0, #0xdb                  	// #219
   1157c:	ret
   11580:	mov	w0, #0xdc                  	// #220
   11584:	ret
   11588:	mov	w0, #0xdd                  	// #221
   1158c:	ret
   11590:	mov	w0, #0xde                  	// #222
   11594:	ret
   11598:	mov	w0, #0xdf                  	// #223
   1159c:	ret
   115a0:	mov	w0, #0xe0                  	// #224
   115a4:	ret
   115a8:	mov	w0, #0xe1                  	// #225
   115ac:	ret
   115b0:	mov	w0, #0xe2                  	// #226
   115b4:	ret
   115b8:	mov	w0, #0xe3                  	// #227
   115bc:	ret
   115c0:	mov	w0, #0xe4                  	// #228
   115c4:	ret
   115c8:	mov	w0, #0xe5                  	// #229
   115cc:	ret
   115d0:	mov	w0, #0xe6                  	// #230
   115d4:	ret
   115d8:	mov	w0, #0xe7                  	// #231
   115dc:	ret
   115e0:	mov	w0, #0xe8                  	// #232
   115e4:	ret
   115e8:	mov	w0, #0xe9                  	// #233
   115ec:	ret
   115f0:	mov	w0, #0xea                  	// #234
   115f4:	ret
   115f8:	mov	w0, #0xeb                  	// #235
   115fc:	ret
   11600:	mov	w0, #0xec                  	// #236
   11604:	ret
   11608:	mov	w0, #0xed                  	// #237
   1160c:	ret
   11610:	mov	w0, #0xee                  	// #238
   11614:	ret
   11618:	mov	w0, #0xef                  	// #239
   1161c:	ret
   11620:	mov	w0, #0xf0                  	// #240
   11624:	ret
   11628:	mov	w0, #0xf1                  	// #241
   1162c:	ret
   11630:	mov	w0, #0xf2                  	// #242
   11634:	ret
   11638:	mov	w0, #0xf3                  	// #243
   1163c:	ret
   11640:	mov	w0, #0xf4                  	// #244
   11644:	ret
   11648:	mov	w0, #0x2                   	// #2
   1164c:	ret
   11650:	mov	w0, #0x3                   	// #3
   11654:	ret
   11658:	mov	w0, w8
   1165c:	ret

0000000000011660 <_ZN4llvmL15getWRegFromXRegEj>:
   11660:	sub	w9, w0, #0x2
   11664:	mov	w8, w0
   11668:	cmp	w9, #0xf2
   1166c:	b.hi	1178c <_ZN4llvmL15getWRegFromXRegEj+0x12c>  // b.pmore
   11670:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11674:	add	x10, x10, #0x0
   11678:	adr	x11, 1168c <_ZN4llvmL15getWRegFromXRegEj+0x2c>
   1167c:	ldrb	w12, [x10, x9]
   11680:	add	x11, x11, x12, lsl #2
   11684:	mov	w0, #0xb9                  	// #185
   11688:	br	x11
   1168c:	mov	w0, #0xd6                  	// #214
   11690:	ret
   11694:	mov	w0, #0xd7                  	// #215
   11698:	ret
   1169c:	mov	w0, #0x6                   	// #6
   116a0:	ret
   116a4:	mov	w0, #0x7                   	// #7
   116a8:	ret
   116ac:	mov	w0, #0xba                  	// #186
   116b0:	ret
   116b4:	mov	w0, #0xbb                  	// #187
   116b8:	ret
   116bc:	mov	w0, #0xbc                  	// #188
   116c0:	ret
   116c4:	mov	w0, #0xbd                  	// #189
   116c8:	ret
   116cc:	mov	w0, #0xbe                  	// #190
   116d0:	ret
   116d4:	mov	w0, #0xbf                  	// #191
   116d8:	ret
   116dc:	mov	w0, #0xc0                  	// #192
   116e0:	ret
   116e4:	mov	w0, #0xc1                  	// #193
   116e8:	ret
   116ec:	mov	w0, #0xc2                  	// #194
   116f0:	ret
   116f4:	mov	w0, #0xc3                  	// #195
   116f8:	ret
   116fc:	mov	w0, #0xc4                  	// #196
   11700:	ret
   11704:	mov	w0, #0xc5                  	// #197
   11708:	ret
   1170c:	mov	w0, #0xc6                  	// #198
   11710:	ret
   11714:	mov	w0, #0xc7                  	// #199
   11718:	ret
   1171c:	mov	w0, #0xc8                  	// #200
   11720:	ret
   11724:	mov	w0, #0xc9                  	// #201
   11728:	ret
   1172c:	mov	w0, #0xca                  	// #202
   11730:	ret
   11734:	mov	w0, #0xcb                  	// #203
   11738:	ret
   1173c:	mov	w0, #0xcc                  	// #204
   11740:	ret
   11744:	mov	w0, #0xcd                  	// #205
   11748:	ret
   1174c:	mov	w0, #0xce                  	// #206
   11750:	ret
   11754:	mov	w0, #0xcf                  	// #207
   11758:	ret
   1175c:	mov	w0, #0xd0                  	// #208
   11760:	ret
   11764:	mov	w0, #0xd1                  	// #209
   11768:	ret
   1176c:	mov	w0, #0xd2                  	// #210
   11770:	ret
   11774:	mov	w0, #0xd3                  	// #211
   11778:	ret
   1177c:	mov	w0, #0xd4                  	// #212
   11780:	ret
   11784:	mov	w0, #0xd5                  	// #213
   11788:	ret
   1178c:	mov	w0, w8
   11790:	ret

0000000000011794 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>:
   11794:	sub	sp, sp, #0x110
   11798:	stp	x29, x30, [sp, #176]
   1179c:	stp	x28, x27, [sp, #192]
   117a0:	stp	x26, x25, [sp, #208]
   117a4:	stp	x24, x23, [sp, #224]
   117a8:	stp	x22, x21, [sp, #240]
   117ac:	stp	x20, x19, [sp, #256]
   117b0:	add	x29, sp, #0xb0
   117b4:	ldr	w8, [x1, #8]
   117b8:	str	w5, [sp, #12]
   117bc:	str	x4, [sp, #56]
   117c0:	stur	x0, [x29, #-40]
   117c4:	cmp	w8, #0xc
   117c8:	b.cc	117dc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48>  // b.lo, b.ul, b.last
   117cc:	mov	w8, #0xb                   	// #11
   117d0:	mov	w0, wzr
   117d4:	str	x8, [x3]
   117d8:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   117dc:	cbz	w8, 128e0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x114c>
   117e0:	ldr	x8, [x1]
   117e4:	mov	x20, x1
   117e8:	ldr	x8, [x8]
   117ec:	ldr	w9, [x8, #48]
   117f0:	cmp	w9, #0x6
   117f4:	b.ne	12920 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x118c>  // b.any
   117f8:	ldr	x9, [x8, #72]
   117fc:	ldr	w28, [x8, #80]
   11800:	mov	x8, #0xffffffffffffffff    	// #-1
   11804:	stur	x9, [x29, #-56]
   11808:	ldr	x9, [sp, #56]
   1180c:	stp	x8, x8, [x9, #8]
   11810:	str	x8, [x9]
   11814:	str	x8, [x3]
   11818:	cbz	w6, 11830 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9c>
   1181c:	cmp	w6, #0x1
   11820:	b.ne	12940 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x11ac>  // b.any
   11824:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   11828:	add	x19, x19, #0x0
   1182c:	b	11838 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa4>
   11830:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   11834:	add	x19, x19, #0x0
   11838:	mov	w8, #0x2618                	// #9752
   1183c:	movk	w8, #0x3, lsl #16
   11840:	add	x8, x19, x8
   11844:	sub	x8, x8, x19
   11848:	cmp	x8, #0x1
   1184c:	str	x2, [sp, #32]
   11850:	str	x3, [sp, #16]
   11854:	stur	x28, [x29, #-64]
   11858:	b.lt	1191c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x188>  // b.tstop
   1185c:	mov	x9, #0x4925                	// #18725
   11860:	movk	x9, #0x2492, lsl #16
   11864:	movk	x9, #0x9249, lsl #32
   11868:	lsr	x8, x8, #2
   1186c:	movk	x9, #0x4924, lsl #48
   11870:	umulh	x8, x8, x9
   11874:	lsr	x21, x8, #1
   11878:	mov	w27, #0x1c                  	// #28
   1187c:	b	1189c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x108>
   11880:	mvn	x8, x24
   11884:	add	x19, x22, #0x1c
   11888:	add	x24, x21, x8
   1188c:	cmp	x24, #0x0
   11890:	mov	x21, x24
   11894:	mov	x26, x19
   11898:	b.le	11920 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x18c>
   1189c:	lsr	x24, x21, #1
   118a0:	madd	x22, x24, x27, x19
   118a4:	ldrh	w8, [x22]
   118a8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   118ac:	add	x9, x9, #0x0
   118b0:	mov	x23, x19
   118b4:	add	x26, x9, x8
   118b8:	ldrb	w25, [x26]
   118bc:	cmp	x28, x25
   118c0:	csel	x19, x28, x25, cc  // cc = lo, ul, last
   118c4:	cbz	x19, 118e4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x150>
   118c8:	ldur	x1, [x29, #-56]
   118cc:	add	x0, x26, #0x1
   118d0:	mov	x2, x19
   118d4:	bl	0 <memcmp>
   118d8:	cbz	w0, 118e4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x150>
   118dc:	tbnz	w0, #31, 11880 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xec>
   118e0:	b	118f0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x15c>
   118e4:	cmp	x28, x25
   118e8:	b.hi	11880 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xec>  // b.pmore
   118ec:	cbz	x19, 1190c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x178>
   118f0:	ldur	x0, [x29, #-56]
   118f4:	add	x1, x26, #0x1
   118f8:	mov	x2, x19
   118fc:	bl	0 <memcmp>
   11900:	cbz	w0, 1190c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x178>
   11904:	tbnz	w0, #31, 11914 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x180>
   11908:	b	11968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1d4>
   1190c:	cmp	x28, x25
   11910:	b.cs	11968 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1d4>  // b.hs, b.nlast
   11914:	mov	x19, x23
   11918:	b	1188c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf8>
   1191c:	mov	x26, x19
   11920:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
   11924:	ldr	x24, [x24]
   11928:	ldrb	w8, [x24]
   1192c:	cbz	w8, 11bec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   11930:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11934:	add	x0, x0, #0x0
   11938:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   1193c:	tbz	w0, #0, 11bec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   11940:	bl	0 <_ZN4llvm4dbgsEv>
   11944:	ldp	x9, x8, [x0, #16]
   11948:	sub	x9, x9, x8
   1194c:	cmp	x9, #0x11
   11950:	b.hi	11ae4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x350>  // b.pmore
   11954:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11958:	add	x1, x1, #0x0
   1195c:	mov	w2, #0x12                  	// #18
   11960:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11964:	b	11b08 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x374>
   11968:	sub	x8, x22, x23
   1196c:	mov	x19, x23
   11970:	cmp	x8, #0x1
   11974:	b.lt	11a20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x28c>  // b.tstop
   11978:	mov	x9, #0x4925                	// #18725
   1197c:	movk	x9, #0x2492, lsl #16
   11980:	movk	x9, #0x9249, lsl #32
   11984:	lsr	x8, x8, #2
   11988:	movk	x9, #0x4924, lsl #48
   1198c:	umulh	x8, x8, x9
   11990:	mov	w25, #0x1c                  	// #28
   11994:	lsr	x26, x8, #1
   11998:	b	119c4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x230>
   1199c:	mov	w8, #0xffffffff            	// #-1
   119a0:	cneg	w8, w8, ls  // ls = plast
   119a4:	mvn	x10, x27
   119a8:	cmn	w8, #0x1
   119ac:	add	x8, x26, x10
   119b0:	add	x9, x28, #0x1c
   119b4:	csel	x26, x8, x27, eq  // eq = none
   119b8:	csel	x19, x9, x19, eq  // eq = none
   119bc:	cmp	x26, #0x0
   119c0:	b.le	11a20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x28c>
   119c4:	lsr	x27, x26, #1
   119c8:	madd	x28, x27, x25, x19
   119cc:	ldrh	w8, [x28]
   119d0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   119d4:	add	x9, x9, #0x0
   119d8:	add	x8, x9, x8
   119dc:	ldrb	w24, [x8]
   119e0:	ldur	x9, [x29, #-64]
   119e4:	cmp	x9, x24
   119e8:	csel	x2, x9, x24, cc  // cc = lo, ul, last
   119ec:	cbz	x2, 11a0c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x278>
   119f0:	ldur	x1, [x29, #-56]
   119f4:	add	x0, x8, #0x1
   119f8:	bl	0 <memcmp>
   119fc:	cmp	w0, #0x0
   11a00:	mov	w8, #0x1                   	// #1
   11a04:	cneg	w8, w8, lt  // lt = tstop
   11a08:	cbnz	w0, 119a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x210>
   11a0c:	ldur	x8, [x29, #-64]
   11a10:	cmp	x8, x24
   11a14:	b.ne	1199c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x208>  // b.any
   11a18:	mov	w8, wzr
   11a1c:	b	119a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x210>
   11a20:	mov	w8, #0x1c                  	// #28
   11a24:	madd	x8, x21, x8, x23
   11a28:	add	x26, x22, #0x1c
   11a2c:	sub	x8, x8, x26
   11a30:	cmp	x8, #0x1
   11a34:	b.lt	127c4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1030>  // b.tstop
   11a38:	mov	x9, #0x4925                	// #18725
   11a3c:	movk	x9, #0x2492, lsl #16
   11a40:	movk	x9, #0x9249, lsl #32
   11a44:	ldur	x28, [x29, #-64]
   11a48:	lsr	x8, x8, #2
   11a4c:	movk	x9, #0x4924, lsl #48
   11a50:	umulh	x8, x8, x9
   11a54:	mov	w21, #0x1c                  	// #28
   11a58:	lsr	x24, x8, #1
   11a5c:	mov	w23, #0x1                   	// #1
   11a60:	b	11a90 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2fc>
   11a64:	mov	w8, #0xffffffff            	// #-1
   11a68:	cneg	w8, w8, cs  // cs = hs, nlast
   11a6c:	mvn	x10, x25
   11a70:	cmn	w8, #0x1
   11a74:	add	x8, x24, x10
   11a78:	add	x9, x26, #0x1c
   11a7c:	csel	x24, x25, x8, eq  // eq = none
   11a80:	mov	x26, x22
   11a84:	csel	x26, x22, x9, eq  // eq = none
   11a88:	cmp	x24, #0x0
   11a8c:	b.le	11920 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x18c>
   11a90:	lsr	x25, x24, #1
   11a94:	mov	x22, x26
   11a98:	madd	x26, x25, x21, x26
   11a9c:	ldrh	w8, [x26]
   11aa0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11aa4:	add	x9, x9, #0x0
   11aa8:	add	x8, x9, x8
   11aac:	ldrb	w27, [x8]
   11ab0:	cmp	x28, x27
   11ab4:	csel	x2, x27, x28, hi  // hi = pmore
   11ab8:	cbz	x2, 11ad4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x340>
   11abc:	ldur	x0, [x29, #-56]
   11ac0:	add	x1, x8, #0x1
   11ac4:	bl	0 <memcmp>
   11ac8:	cmp	w0, #0x0
   11acc:	cneg	w8, w23, lt  // lt = tstop
   11ad0:	cbnz	w0, 11a6c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2d8>
   11ad4:	cmp	x28, x27
   11ad8:	b.ne	11a64 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2d0>  // b.any
   11adc:	mov	w8, wzr
   11ae0:	b	11a6c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2d8>
   11ae4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11ae8:	add	x9, x9, #0x0
   11aec:	ldr	q0, [x9]
   11af0:	mov	w9, #0x2064                	// #8292
   11af4:	strh	w9, [x8, #16]
   11af8:	str	q0, [x8]
   11afc:	ldr	x8, [x0, #24]
   11b00:	add	x8, x8, #0x12
   11b04:	str	x8, [x0, #24]
   11b08:	mov	x9, #0x6db7                	// #28087
   11b0c:	movk	x9, #0xb6db, lsl #16
   11b10:	sub	x8, x26, x19
   11b14:	movk	x9, #0xdb6d, lsl #32
   11b18:	asr	x8, x8, #2
   11b1c:	movk	x9, #0x6db6, lsl #48
   11b20:	mul	x1, x8, x9
   11b24:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
   11b28:	ldp	x9, x8, [x0, #16]
   11b2c:	mov	x22, x0
   11b30:	sub	x9, x9, x8
   11b34:	cmp	x9, #0x19
   11b38:	b.hi	11b5c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x3c8>  // b.pmore
   11b3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11b40:	add	x1, x1, #0x0
   11b44:	mov	w2, #0x1a                  	// #26
   11b48:	mov	x0, x22
   11b4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11b50:	mov	x22, x0
   11b54:	ldr	x0, [x0, #24]
   11b58:	b	11b80 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x3ec>
   11b5c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11b60:	add	x9, x9, #0x0
   11b64:	ldur	q0, [x9, #10]
   11b68:	ldr	q1, [x9]
   11b6c:	stur	q0, [x8, #10]
   11b70:	str	q1, [x8]
   11b74:	ldr	x8, [x22, #24]
   11b78:	add	x0, x8, #0x1a
   11b7c:	str	x0, [x22, #24]
   11b80:	ldr	x8, [x22, #16]
   11b84:	sub	x8, x8, x0
   11b88:	cmp	x8, x28
   11b8c:	b.cs	11bac <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x418>  // b.hs, b.nlast
   11b90:	ldur	x1, [x29, #-56]
   11b94:	mov	x0, x22
   11b98:	mov	x2, x28
   11b9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11ba0:	mov	x22, x0
   11ba4:	ldr	x0, [x0, #24]
   11ba8:	b	11bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x434>
   11bac:	cbz	w28, 11bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x434>
   11bb0:	ldur	x1, [x29, #-56]
   11bb4:	mov	x2, x28
   11bb8:	bl	0 <memcpy>
   11bbc:	ldr	x8, [x22, #24]
   11bc0:	add	x0, x8, x28
   11bc4:	str	x0, [x22, #24]
   11bc8:	ldr	x8, [x22, #16]
   11bcc:	sub	x8, x8, x0
   11bd0:	cmp	x8, #0x1
   11bd4:	b.hi	12784 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xff0>  // b.pmore
   11bd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11bdc:	add	x1, x1, #0x0
   11be0:	mov	w2, #0x2                   	// #2
   11be4:	mov	x0, x22
   11be8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11bec:	cmp	x19, x26
   11bf0:	b.eq	127a0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x100c>  // b.none
   11bf4:	ldur	x8, [x29, #-40]
   11bf8:	str	wzr, [sp, #28]
   11bfc:	str	xzr, [sp, #48]
   11c00:	str	wzr, [sp, #44]
   11c04:	add	x8, x8, #0x18
   11c08:	stp	x8, x26, [sp, #64]
   11c0c:	str	x19, [sp]
   11c10:	b	11c2c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x498>
   11c14:	ldur	x28, [x29, #-64]
   11c18:	mov	w8, #0x1                   	// #1
   11c1c:	str	w8, [sp, #28]
   11c20:	add	x19, x19, #0x1c
   11c24:	cmp	x19, x26
   11c28:	b.eq	12760 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfcc>  // b.none
   11c2c:	ldr	x9, [sp, #64]
   11c30:	ldrb	w8, [x19, #6]
   11c34:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
   11c38:	mov	w10, #0x18                  	// #24
   11c3c:	ldr	q0, [x9]
   11c40:	add	x11, x11, #0x0
   11c44:	ldr	x9, [x9, #16]
   11c48:	madd	x8, x8, x10, x11
   11c4c:	stur	q0, [x29, #-32]
   11c50:	ldr	q1, [x8]
   11c54:	ldur	q0, [x29, #-32]
   11c58:	ldr	x11, [x8]
   11c5c:	ldp	x8, x21, [x8, #8]
   11c60:	str	q1, [sp, #80]
   11c64:	and	v0.16b, v0.16b, v1.16b
   11c68:	stur	q0, [x29, #-32]
   11c6c:	ldp	x10, x12, [x29, #-32]
   11c70:	bic	x9, x21, x9
   11c74:	eor	x10, x10, x11
   11c78:	eor	x8, x12, x8
   11c7c:	ldrb	w11, [x24]
   11c80:	orr	x8, x10, x8
   11c84:	orr	x8, x8, x9
   11c88:	cmp	x8, #0x0
   11c8c:	cset	w8, ne  // ne = any
   11c90:	stur	w8, [x29, #-44]
   11c94:	cbz	w11, 11dbc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x628>
   11c98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11c9c:	add	x0, x0, #0x0
   11ca0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11ca4:	tbz	w0, #0, 11dbc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x628>
   11ca8:	bl	0 <_ZN4llvm4dbgsEv>
   11cac:	ldp	x9, x8, [x0, #16]
   11cb0:	mov	x27, x0
   11cb4:	sub	x9, x9, x8
   11cb8:	cmp	x9, #0x16
   11cbc:	b.hi	11cdc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x548>  // b.pmore
   11cc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11cc4:	mov	w2, #0x17                  	// #23
   11cc8:	mov	x0, x27
   11ccc:	add	x1, x1, #0x0
   11cd0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11cd4:	mov	x27, x0
   11cd8:	b	11d00 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x56c>
   11cdc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11ce0:	add	x10, x10, #0x0
   11ce4:	ldur	x9, [x10, #15]
   11ce8:	ldr	q0, [x10]
   11cec:	stur	x9, [x8, #15]
   11cf0:	str	q0, [x8]
   11cf4:	ldr	x8, [x27, #24]
   11cf8:	add	x8, x8, #0x17
   11cfc:	str	x8, [x27, #24]
   11d00:	ldur	x8, [x29, #-40]
   11d04:	ldrh	w9, [x19, #2]
   11d08:	ldr	x8, [x8, #168]
   11d0c:	ldr	w10, [x8, #24]
   11d10:	cmp	w10, w9
   11d14:	b.ls	12900 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x116c>  // b.plast
   11d18:	ldp	x10, x8, [x8, #8]
   11d1c:	ldr	w9, [x10, x9, lsl #2]
   11d20:	add	x23, x8, x9
   11d24:	cbz	x8, 11d38 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a4>
   11d28:	mov	x0, x23
   11d2c:	bl	0 <strlen>
   11d30:	mov	x22, x0
   11d34:	b	11d3c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5a8>
   11d38:	mov	x22, xzr
   11d3c:	ldp	x8, x0, [x27, #16]
   11d40:	sub	x8, x8, x0
   11d44:	cmp	x22, x8
   11d48:	b.ls	11d68 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5d4>  // b.plast
   11d4c:	mov	x0, x27
   11d50:	mov	x1, x23
   11d54:	mov	x2, x22
   11d58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11d5c:	mov	x27, x0
   11d60:	ldr	x0, [x0, #24]
   11d64:	b	11d84 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5f0>
   11d68:	cbz	x22, 11d84 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5f0>
   11d6c:	mov	x1, x23
   11d70:	mov	x2, x22
   11d74:	bl	0 <memcpy>
   11d78:	ldr	x8, [x27, #24]
   11d7c:	add	x0, x8, x22
   11d80:	str	x0, [x27, #24]
   11d84:	ldr	x8, [x27, #16]
   11d88:	cmp	x8, x0
   11d8c:	b.ne	11da8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x614>  // b.any
   11d90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11d94:	mov	w2, #0x1                   	// #1
   11d98:	mov	x0, x27
   11d9c:	add	x1, x1, #0x0
   11da0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11da4:	b	11dbc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x628>
   11da8:	mov	w8, #0xa                   	// #10
   11dac:	strb	w8, [x0]
   11db0:	ldr	x8, [x27, #24]
   11db4:	add	x8, x8, #0x1
   11db8:	str	x8, [x27, #24]
   11dbc:	ldrh	w8, [x19]
   11dc0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11dc4:	add	x9, x9, #0x0
   11dc8:	stur	x21, [x29, #-72]
   11dcc:	add	x1, x9, x8
   11dd0:	ldrb	w8, [x1], #1
   11dd4:	cmp	w28, w8
   11dd8:	b.ne	128c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x112c>  // b.any
   11ddc:	cbz	w28, 11df0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x65c>
   11de0:	ldur	x0, [x29, #-56]
   11de4:	mov	x2, x28
   11de8:	bl	0 <bcmp>
   11dec:	cbnz	w0, 128c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x112c>
   11df0:	mov	w26, #0x1                   	// #1
   11df4:	mov	w21, #0x8                   	// #8
   11df8:	b	11e34 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6a0>
   11dfc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11e00:	add	x9, x9, #0x0
   11e04:	ldp	q1, q0, [x9]
   11e08:	mov	w9, #0x6568                	// #25960
   11e0c:	movk	w9, #0xa72, lsl #16
   11e10:	str	w9, [x8, #32]
   11e14:	stp	q1, q0, [x8]
   11e18:	ldr	x8, [x0, #24]
   11e1c:	add	x8, x8, #0x24
   11e20:	str	x8, [x0, #24]
   11e24:	add	w26, w26, #0x1
   11e28:	add	x21, x21, #0x2
   11e2c:	cmp	x21, #0x1c
   11e30:	b.eq	12258 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xac4>  // b.none
   11e34:	ldrh	w27, [x19, x21]
   11e38:	ldrb	w8, [x24]
   11e3c:	sxth	x28, w27
   11e40:	cbz	w8, 11f70 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7dc>
   11e44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11e48:	add	x0, x0, #0x0
   11e4c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11e50:	tbz	w0, #0, 11f6c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7d8>
   11e54:	bl	0 <_ZN4llvm4dbgsEv>
   11e58:	ldp	x9, x8, [x0, #16]
   11e5c:	mov	x23, x0
   11e60:	sub	x9, x9, x8
   11e64:	cmp	x9, #0x1f
   11e68:	b.hi	11e88 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6f4>  // b.pmore
   11e6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11e70:	mov	w2, #0x20                  	// #32
   11e74:	mov	x0, x23
   11e78:	add	x1, x1, #0x0
   11e7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11e80:	mov	x23, x0
   11e84:	b	11ea4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x710>
   11e88:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11e8c:	add	x9, x9, #0x0
   11e90:	ldp	q1, q0, [x9]
   11e94:	stp	q1, q0, [x8]
   11e98:	ldr	x8, [x23, #24]
   11e9c:	add	x8, x8, #0x20
   11ea0:	str	x8, [x23, #24]
   11ea4:	and	w8, w28, #0xffff
   11ea8:	cmp	w8, #0x1d5
   11eac:	b.cs	128a8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1114>  // b.hs, b.nlast
   11eb0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11eb4:	add	x8, x8, #0x0
   11eb8:	ldr	x22, [x8, x28, lsl #3]
   11ebc:	mov	x0, x22
   11ec0:	bl	0 <strlen>
   11ec4:	mov	x25, x0
   11ec8:	ldp	x8, x0, [x23, #16]
   11ecc:	sub	x8, x8, x0
   11ed0:	cmp	x25, x8
   11ed4:	b.ls	11ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x760>  // b.plast
   11ed8:	mov	x0, x23
   11edc:	mov	x1, x22
   11ee0:	mov	x2, x25
   11ee4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11ee8:	mov	x23, x0
   11eec:	ldr	x0, [x0, #24]
   11ef0:	b	11f10 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x77c>
   11ef4:	cbz	x25, 11f10 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x77c>
   11ef8:	mov	x1, x22
   11efc:	mov	x2, x25
   11f00:	bl	0 <memcpy>
   11f04:	ldr	x8, [x23, #24]
   11f08:	add	x0, x8, x25
   11f0c:	str	x0, [x23, #24]
   11f10:	ldr	x8, [x23, #16]
   11f14:	sub	x8, x8, x0
   11f18:	cmp	x8, #0x20
   11f1c:	b.hi	11f3c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7a8>  // b.pmore
   11f20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11f24:	mov	w2, #0x21                  	// #33
   11f28:	mov	x0, x23
   11f2c:	add	x1, x1, #0x0
   11f30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11f34:	mov	x23, x0
   11f38:	b	11f60 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7cc>
   11f3c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11f40:	add	x8, x8, #0x0
   11f44:	ldp	q1, q0, [x8]
   11f48:	mov	w8, #0x20                  	// #32
   11f4c:	strb	w8, [x0, #32]
   11f50:	stp	q1, q0, [x0]
   11f54:	ldr	x8, [x23, #24]
   11f58:	add	x8, x8, #0x21
   11f5c:	str	x8, [x23, #24]
   11f60:	mov	w1, w26
   11f64:	mov	x0, x23
   11f68:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   11f6c:	ldrb	w8, [x24]
   11f70:	ldr	w9, [x20, #8]
   11f74:	mov	w25, w26
   11f78:	cmp	w9, w26
   11f7c:	b.ls	11fbc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x828>  // b.plast
   11f80:	cbz	w8, 12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   11f84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11f88:	add	x0, x0, #0x0
   11f8c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11f90:	tbz	w0, #0, 12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   11f94:	bl	0 <_ZN4llvm4dbgsEv>
   11f98:	ldp	x9, x8, [x0, #16]
   11f9c:	sub	x9, x9, x8
   11fa0:	cmp	x9, #0x1
   11fa4:	b.hi	11ff8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x864>  // b.pmore
   11fa8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11fac:	mov	w2, #0x2                   	// #2
   11fb0:	add	x1, x1, #0x0
   11fb4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11fb8:	b	1200c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x878>
   11fbc:	cbz	w8, 12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   11fc0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11fc4:	add	x0, x0, #0x0
   11fc8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   11fcc:	tbz	w0, #0, 12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   11fd0:	bl	0 <_ZN4llvm4dbgsEv>
   11fd4:	ldp	x9, x8, [x0, #16]
   11fd8:	sub	x9, x9, x8
   11fdc:	cmp	x9, #0x1
   11fe0:	b.hi	12060 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8cc>  // b.pmore
   11fe4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11fe8:	mov	w2, #0x2                   	// #2
   11fec:	add	x1, x1, #0x0
   11ff0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   11ff4:	b	12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   11ff8:	mov	w9, #0x2820                	// #10272
   11ffc:	strh	w9, [x8]
   12000:	ldr	x8, [x0, #24]
   12004:	add	x8, x8, #0x2
   12008:	str	x8, [x0, #24]
   1200c:	ldr	w8, [x20, #8]
   12010:	cmp	w8, w26
   12014:	b.ls	128e0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x114c>  // b.plast
   12018:	ldr	x8, [x20]
   1201c:	ldr	x22, [x8, x25, lsl #3]
   12020:	bl	0 <_ZN4llvm4dbgsEv>
   12024:	ldr	x8, [x22]
   12028:	mov	x1, x0
   1202c:	mov	x0, x22
   12030:	ldr	x8, [x8, #112]
   12034:	blr	x8
   12038:	bl	0 <_ZN4llvm4dbgsEv>
   1203c:	ldp	x9, x8, [x0, #16]
   12040:	sub	x9, x9, x8
   12044:	cmp	x9, #0x2
   12048:	b.hi	12074 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8e0>  // b.pmore
   1204c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12050:	mov	w2, #0x3                   	// #3
   12054:	add	x1, x1, #0x0
   12058:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   1205c:	b	12090 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8fc>
   12060:	mov	w9, #0x203a                	// #8250
   12064:	strh	w9, [x8]
   12068:	ldr	x8, [x0, #24]
   1206c:	add	x8, x8, #0x2
   12070:	b	1208c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8f8>
   12074:	mov	w9, #0x20                  	// #32
   12078:	strb	w9, [x8, #2]
   1207c:	mov	w9, #0x3a29                	// #14889
   12080:	strh	w9, [x8]
   12084:	ldr	x8, [x0, #24]
   12088:	add	x8, x8, #0x3
   1208c:	str	x8, [x0, #24]
   12090:	ldr	w8, [x20, #8]
   12094:	cmp	w8, w26
   12098:	b.ls	12208 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa74>  // b.plast
   1209c:	ldr	x8, [x20]
   120a0:	mov	w1, w27
   120a4:	ldr	x22, [x8, x25, lsl #3]
   120a8:	mov	x0, x22
   120ac:	bl	13f04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>
   120b0:	cmp	w0, #0x4
   120b4:	b.ne	120f4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x960>  // b.any
   120b8:	ldrb	w8, [x24]
   120bc:	cbz	w8, 11e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x690>
   120c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   120c4:	add	x0, x0, #0x0
   120c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   120cc:	tbz	w0, #0, 11e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x690>
   120d0:	bl	0 <_ZN4llvm4dbgsEv>
   120d4:	ldp	x9, x8, [x0, #16]
   120d8:	sub	x9, x9, x8
   120dc:	cmp	x9, #0x23
   120e0:	b.hi	11dfc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x668>  // b.pmore
   120e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   120e8:	mov	w2, #0x24                  	// #36
   120ec:	add	x1, x1, #0x0
   120f0:	b	12154 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9c0>
   120f4:	mov	w23, w0
   120f8:	ldur	x0, [x29, #-40]
   120fc:	mov	x1, x22
   12100:	mov	w2, w27
   12104:	ldr	x8, [x0]
   12108:	ldr	x8, [x8, #80]
   1210c:	blr	x8
   12110:	cbz	w0, 12164 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9d0>
   12114:	cmp	w0, #0x4
   12118:	b.ne	1215c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9c8>  // b.any
   1211c:	ldrb	w8, [x24]
   12120:	cbz	w8, 11e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x690>
   12124:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12128:	add	x0, x0, #0x0
   1212c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12130:	tbz	w0, #0, 11e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x690>
   12134:	bl	0 <_ZN4llvm4dbgsEv>
   12138:	ldp	x9, x8, [x0, #16]
   1213c:	sub	x9, x9, x8
   12140:	cmp	x9, #0x22
   12144:	b.hi	121e0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa4c>  // b.pmore
   12148:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1214c:	mov	w2, #0x23                  	// #35
   12150:	add	x1, x1, #0x0
   12154:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12158:	b	11e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x690>
   1215c:	ldur	w8, [x29, #-44]
   12160:	cbz	w8, 12408 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc74>
   12164:	cbnz	w23, 123a8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc14>
   12168:	mov	w1, #0x1                   	// #1
   1216c:	mov	w0, w27
   12170:	bl	136c8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   12174:	tbz	w0, #0, 123a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc10>
   12178:	ldrb	w8, [x24]
   1217c:	cbz	w8, 11e28 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x694>
   12180:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12184:	add	x0, x0, #0x0
   12188:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   1218c:	tbz	w0, #0, 11e28 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x694>
   12190:	bl	0 <_ZN4llvm4dbgsEv>
   12194:	ldp	x9, x8, [x0, #16]
   12198:	sub	x9, x9, x8
   1219c:	cmp	x9, #0x19
   121a0:	b.hi	121b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa24>  // b.pmore
   121a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   121a8:	mov	w2, #0x1a                  	// #26
   121ac:	add	x1, x1, #0x0
   121b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   121b4:	b	11e28 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x694>
   121b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   121bc:	add	x9, x9, #0x0
   121c0:	ldur	q0, [x9, #10]
   121c4:	ldr	q1, [x9]
   121c8:	stur	q0, [x8, #10]
   121cc:	str	q1, [x8]
   121d0:	ldr	x8, [x0, #24]
   121d4:	add	x8, x8, #0x1a
   121d8:	str	x8, [x0, #24]
   121dc:	b	11e28 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x694>
   121e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   121e4:	add	x9, x9, #0x0
   121e8:	ldp	q1, q0, [x9]
   121ec:	mov	w9, #0x6568                	// #25960
   121f0:	movk	w9, #0xa72, lsl #16
   121f4:	stur	w9, [x8, #31]
   121f8:	stp	q1, q0, [x8]
   121fc:	ldr	x8, [x0, #24]
   12200:	add	x8, x8, #0x23
   12204:	b	11e20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x68c>
   12208:	ldrb	w8, [x24]
   1220c:	cbz	w8, 12244 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xab0>
   12210:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12214:	add	x0, x0, #0x0
   12218:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   1221c:	tbz	w0, #0, 12244 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xab0>
   12220:	bl	0 <_ZN4llvm4dbgsEv>
   12224:	ldp	x9, x8, [x0, #16]
   12228:	sub	x9, x9, x8
   1222c:	cmp	x9, #0x21
   12230:	b.hi	12608 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xe74>  // b.pmore
   12234:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12238:	mov	w2, #0x22                  	// #34
   1223c:	add	x1, x1, #0x0
   12240:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12244:	cbz	w28, 12258 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xac4>
   12248:	mov	w1, #0x1                   	// #1
   1224c:	mov	w0, w27
   12250:	bl	136c8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   12254:	tbz	w0, #0, 12398 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc04>
   12258:	ldur	w8, [x29, #-44]
   1225c:	cbz	w8, 122d8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb44>
   12260:	ldur	x10, [x29, #-40]
   12264:	ldr	q0, [sp, #80]
   12268:	ldur	x14, [x29, #-72]
   1226c:	ldrb	w13, [x24]
   12270:	ldp	x8, x9, [x10, #24]
   12274:	ldr	x10, [x10, #40]
   12278:	stur	q0, [x29, #-32]
   1227c:	ldp	x11, x12, [x29, #-32]
   12280:	ldr	x26, [sp, #72]
   12284:	bic	x21, x14, x10
   12288:	sub	x27, x29, #0x20
   1228c:	bic	x25, x11, x8
   12290:	bic	x22, x12, x9
   12294:	stp	x25, x22, [x29, #-32]
   12298:	stur	x21, [x29, #-16]
   1229c:	cbz	w13, 12578 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xde4>
   122a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   122a4:	add	x0, x0, #0x0
   122a8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   122ac:	tbz	w0, #0, 12578 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xde4>
   122b0:	bl	0 <_ZN4llvm4dbgsEv>
   122b4:	ldp	x9, x8, [x0, #16]
   122b8:	sub	x9, x9, x8
   122bc:	cmp	x9, #0x17
   122c0:	b.hi	124c4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd30>  // b.pmore
   122c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   122c8:	mov	w2, #0x18                  	// #24
   122cc:	add	x1, x1, #0x0
   122d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   122d4:	b	124e8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd54>
   122d8:	ldr	x21, [sp, #32]
   122dc:	ldur	x0, [x29, #-40]
   122e0:	mov	x2, x20
   122e4:	str	wzr, [x21, #24]
   122e8:	ldrh	w8, [x19, #2]
   122ec:	mov	x1, x21
   122f0:	str	w8, [x21]
   122f4:	ldr	x8, [x0]
   122f8:	ldr	x8, [x8, #88]
   122fc:	blr	x8
   12300:	ldr	x26, [sp, #72]
   12304:	cmp	w0, #0x4
   12308:	str	w0, [sp, #44]
   1230c:	b.ne	123c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc2c>  // b.any
   12310:	ldrh	w1, [x19, #4]
   12314:	ldr	w8, [sp, #12]
   12318:	tbnz	w8, #0, 127cc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1038>
   1231c:	ldr	x21, [sp, #32]
   12320:	ldrh	w2, [x19, #2]
   12324:	mov	w0, w1
   12328:	mov	x3, x20
   1232c:	mov	x1, x21
   12330:	bl	1a850 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
   12334:	ldur	x0, [x29, #-40]
   12338:	mov	x1, x21
   1233c:	ldr	x8, [x0]
   12340:	ldr	x8, [x8, #96]
   12344:	blr	x8
   12348:	cmp	w0, #0x4
   1234c:	str	w0, [sp, #44]
   12350:	b.eq	12808 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1074>  // b.none
   12354:	ldrb	w8, [x24]
   12358:	ldur	x28, [x29, #-64]
   1235c:	cbz	w8, 1274c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfb8>
   12360:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12364:	add	x0, x0, #0x0
   12368:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   1236c:	tbz	w0, #0, 1274c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfb8>
   12370:	bl	0 <_ZN4llvm4dbgsEv>
   12374:	ldp	x9, x8, [x0, #16]
   12378:	sub	x9, x9, x8
   1237c:	cmp	x9, #0x2c
   12380:	b.hi	126e8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf54>  // b.pmore
   12384:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12388:	mov	w2, #0x2d                  	// #45
   1238c:	add	x1, x1, #0x0
   12390:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12394:	b	1270c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf78>
   12398:	ldr	x8, [sp, #16]
   1239c:	str	x25, [x8]
   123a0:	b	123b0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc1c>
   123a4:	mov	w23, wzr
   123a8:	ldr	x8, [sp, #48]
   123ac:	tbz	w8, #0, 12414 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc80>
   123b0:	ldr	x26, [sp, #72]
   123b4:	ldrb	w8, [x24]
   123b8:	cbnz	w8, 1243c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xca8>
   123bc:	b	12664 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xed0>
   123c0:	str	wzr, [x21, #24]
   123c4:	ldrb	w8, [x24]
   123c8:	cbz	w8, 12634 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xea0>
   123cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   123d0:	add	x0, x0, #0x0
   123d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   123d8:	ldur	x28, [x29, #-64]
   123dc:	tbz	w0, #0, 12754 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfc0>
   123e0:	bl	0 <_ZN4llvm4dbgsEv>
   123e4:	ldp	x9, x8, [x0, #16]
   123e8:	sub	x9, x9, x8
   123ec:	cmp	x9, #0x32
   123f0:	b.hi	1266c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xed8>  // b.pmore
   123f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   123f8:	mov	w2, #0x33                  	// #51
   123fc:	add	x1, x1, #0x0
   12400:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12404:	b	1269c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf08>
   12408:	mov	w23, w0
   1240c:	ldr	x8, [sp, #48]
   12410:	tbnz	w8, #0, 123b0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc1c>
   12414:	ldr	x8, [sp]
   12418:	ldr	x26, [sp, #72]
   1241c:	cmp	x19, x8
   12420:	b.eq	12478 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xce4>  // b.none
   12424:	ldr	x8, [sp, #16]
   12428:	ldr	x8, [x8]
   1242c:	cmp	x8, x25
   12430:	b.ls	12478 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xce4>  // b.plast
   12434:	ldrb	w8, [x24]
   12438:	cbz	w8, 12664 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xed0>
   1243c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12440:	add	x0, x0, #0x0
   12444:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12448:	tbz	w0, #0, 12664 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xed0>
   1244c:	bl	0 <_ZN4llvm4dbgsEv>
   12450:	ldp	x9, x8, [x0, #16]
   12454:	ldur	x28, [x29, #-64]
   12458:	sub	x9, x9, x8
   1245c:	cmp	x9, #0x40
   12460:	b.hi	12494 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd00>  // b.pmore
   12464:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12468:	mov	w2, #0x41                  	// #65
   1246c:	add	x1, x1, #0x0
   12470:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12474:	b	11c20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48c>
   12478:	ldur	w8, [x29, #-44]
   1247c:	cbz	w8, 1263c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xea8>
   12480:	ldr	x9, [sp, #16]
   12484:	str	x25, [x9]
   12488:	ldrb	w8, [x24]
   1248c:	cbnz	w8, 1243c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xca8>
   12490:	b	12664 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xed0>
   12494:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12498:	add	x9, x9, #0x0
   1249c:	ldp	q0, q1, [x9, #32]
   124a0:	ldp	q2, q3, [x9]
   124a4:	mov	w9, #0xa                   	// #10
   124a8:	strb	w9, [x8, #64]
   124ac:	stp	q0, q1, [x8, #32]
   124b0:	stp	q2, q3, [x8]
   124b4:	ldr	x8, [x0, #24]
   124b8:	add	x8, x8, #0x41
   124bc:	str	x8, [x0, #24]
   124c0:	b	11c20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48c>
   124c4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   124c8:	add	x10, x10, #0x0
   124cc:	ldr	x9, [x10, #16]
   124d0:	ldr	q0, [x10]
   124d4:	str	x9, [x8, #16]
   124d8:	str	q0, [x8]
   124dc:	ldr	x8, [x0, #24]
   124e0:	add	x8, x8, #0x18
   124e4:	str	x8, [x0, #24]
   124e8:	mov	x23, xzr
   124ec:	b	12514 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd80>
   124f0:	add	x9, x8, #0x1
   124f4:	str	x9, [x0, #24]
   124f8:	mov	w9, #0x20                  	// #32
   124fc:	strb	w9, [x8]
   12500:	mov	x1, x23
   12504:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   12508:	add	x23, x23, #0x1
   1250c:	cmp	x23, #0xc0
   12510:	b.eq	12540 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdac>  // b.none
   12514:	ubfx	x8, x23, #6, #26
   12518:	ldr	x8, [x27, x8, lsl #3]
   1251c:	lsr	x8, x8, x23
   12520:	tbz	w8, #0, 12508 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd74>
   12524:	bl	0 <_ZN4llvm4dbgsEv>
   12528:	ldp	x9, x8, [x0, #16]
   1252c:	cmp	x8, x9
   12530:	b.cc	124f0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd5c>  // b.lo, b.ul, b.last
   12534:	mov	w1, #0x20                  	// #32
   12538:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
   1253c:	b	12500 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd6c>
   12540:	bl	0 <_ZN4llvm4dbgsEv>
   12544:	ldp	x9, x8, [x0, #16]
   12548:	cmp	x9, x8
   1254c:	b.ne	12564 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdd0>  // b.any
   12550:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12554:	mov	w2, #0x1                   	// #1
   12558:	add	x1, x1, #0x0
   1255c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12560:	b	12578 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xde4>
   12564:	mov	w9, #0xa                   	// #10
   12568:	strb	w9, [x8]
   1256c:	ldr	x8, [x0, #24]
   12570:	add	x8, x8, #0x1
   12574:	str	x8, [x0, #24]
   12578:	ldr	x8, [sp, #56]
   1257c:	fmov	d0, x25
   12580:	fmov	d1, x22
   12584:	cnt	v0.8b, v0.8b
   12588:	ldp	d3, d4, [x8]
   1258c:	ldr	d5, [x8, #16]
   12590:	cnt	v1.8b, v1.8b
   12594:	fmov	d2, x21
   12598:	cnt	v2.8b, v2.8b
   1259c:	uaddlv	h0, v0.8b
   125a0:	uaddlv	h1, v1.8b
   125a4:	cnt	v3.8b, v3.8b
   125a8:	cnt	v4.8b, v4.8b
   125ac:	uaddlv	h2, v2.8b
   125b0:	uaddlv	h3, v3.8b
   125b4:	uaddlv	h4, v4.8b
   125b8:	fmov	w8, s0
   125bc:	fmov	w9, s1
   125c0:	cnt	v0.8b, v5.8b
   125c4:	fmov	w10, s2
   125c8:	fmov	w11, s3
   125cc:	fmov	w12, s4
   125d0:	add	x8, x9, x8
   125d4:	uaddlv	h0, v0.8b
   125d8:	add	x8, x8, x10
   125dc:	add	x9, x12, x11
   125e0:	fmov	w10, s0
   125e4:	add	x9, x9, x10
   125e8:	cmp	x8, x9
   125ec:	b.hi	11c14 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x480>  // b.pmore
   125f0:	ldur	x8, [x29, #-16]
   125f4:	ldur	q0, [x29, #-32]
   125f8:	ldr	x9, [sp, #56]
   125fc:	str	x8, [x9, #16]
   12600:	str	q0, [x9]
   12604:	b	11c14 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x480>
   12608:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1260c:	add	x9, x9, #0x0
   12610:	ldp	q1, q0, [x9]
   12614:	mov	w9, #0x2065                	// #8293
   12618:	strh	w9, [x8, #32]
   1261c:	stp	q1, q0, [x8]
   12620:	ldr	x8, [x0, #24]
   12624:	add	x8, x8, #0x22
   12628:	str	x8, [x0, #24]
   1262c:	cbnz	w28, 12248 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xab4>
   12630:	b	12258 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xac4>
   12634:	ldur	x28, [x29, #-64]
   12638:	b	12754 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfc0>
   1263c:	ldr	x9, [sp, #16]
   12640:	ldr	x8, [x9]
   12644:	str	x25, [x9]
   12648:	cmp	x8, x25
   1264c:	ldr	w8, [sp, #44]
   12650:	ccmp	w23, #0x0, #0x0, eq  // eq = none
   12654:	csel	w8, w23, w8, ne  // ne = any
   12658:	str	w8, [sp, #44]
   1265c:	ldrb	w8, [x24]
   12660:	cbnz	w8, 1243c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xca8>
   12664:	ldur	x28, [x29, #-64]
   12668:	b	11c20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48c>
   1266c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12670:	add	x9, x9, #0x0
   12674:	ldp	q1, q0, [x9, #16]
   12678:	ldr	q2, [x9]
   1267c:	mov	w9, #0x646f                	// #25711
   12680:	movk	w9, #0x2065, lsl #16
   12684:	stur	w9, [x8, #47]
   12688:	stp	q1, q0, [x8, #16]
   1268c:	str	q2, [x8]
   12690:	ldr	x8, [x0, #24]
   12694:	add	x8, x8, #0x33
   12698:	str	x8, [x0, #24]
   1269c:	ldr	w8, [sp, #44]
   126a0:	mov	w1, w8
   126a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   126a8:	ldp	x9, x8, [x0, #16]
   126ac:	cmp	x9, x8
   126b0:	b.ne	126d0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf3c>  // b.any
   126b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   126b8:	mov	w2, #0x1                   	// #1
   126bc:	mov	w8, #0x1                   	// #1
   126c0:	add	x1, x1, #0x0
   126c4:	str	x8, [sp, #48]
   126c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   126cc:	b	11c20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48c>
   126d0:	mov	w9, #0xa                   	// #10
   126d4:	strb	w9, [x8]
   126d8:	ldr	x8, [x0, #24]
   126dc:	add	x8, x8, #0x1
   126e0:	str	x8, [x0, #24]
   126e4:	b	12754 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfc0>
   126e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   126ec:	add	x9, x9, #0x0
   126f0:	ldur	q0, [x9, #29]
   126f4:	ldp	q2, q1, [x9]
   126f8:	stur	q0, [x8, #29]
   126fc:	stp	q2, q1, [x8]
   12700:	ldr	x8, [x0, #24]
   12704:	add	x8, x8, #0x2d
   12708:	str	x8, [x0, #24]
   1270c:	ldr	w8, [sp, #44]
   12710:	mov	w1, w8
   12714:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   12718:	ldp	x9, x8, [x0, #16]
   1271c:	cmp	x9, x8
   12720:	b.ne	12738 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfa4>  // b.any
   12724:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12728:	mov	w2, #0x1                   	// #1
   1272c:	add	x1, x1, #0x0
   12730:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12734:	b	1274c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfb8>
   12738:	mov	w9, #0xa                   	// #10
   1273c:	strb	w9, [x8]
   12740:	ldr	x8, [x0, #24]
   12744:	add	x8, x8, #0x1
   12748:	str	x8, [x0, #24]
   1274c:	ldr	x8, [sp, #32]
   12750:	str	wzr, [x8, #24]
   12754:	mov	w8, #0x1                   	// #1
   12758:	str	x8, [sp, #48]
   1275c:	b	11c20 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48c>
   12760:	ldr	w8, [sp, #28]
   12764:	ldr	x9, [sp, #48]
   12768:	ldr	w0, [sp, #44]
   1276c:	orn	w8, w9, w8
   12770:	tbnz	w8, #0, 127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   12774:	ldr	x8, [sp, #16]
   12778:	mov	w0, #0x2                   	// #2
   1277c:	str	xzr, [x8]
   12780:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   12784:	mov	w8, #0xa27                 	// #2599
   12788:	strh	w8, [x0]
   1278c:	ldr	x8, [x22, #24]
   12790:	add	x8, x8, #0x2
   12794:	str	x8, [x22, #24]
   12798:	cmp	x19, x26
   1279c:	b.ne	11bf4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x460>  // b.any
   127a0:	mov	w0, #0x3                   	// #3
   127a4:	ldp	x20, x19, [sp, #256]
   127a8:	ldp	x22, x21, [sp, #240]
   127ac:	ldp	x24, x23, [sp, #224]
   127b0:	ldp	x26, x25, [sp, #208]
   127b4:	ldp	x28, x27, [sp, #192]
   127b8:	ldp	x29, x30, [sp, #176]
   127bc:	add	sp, sp, #0x110
   127c0:	ret
   127c4:	ldur	x28, [x29, #-64]
   127c8:	b	11920 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x18c>
   127cc:	ldur	x21, [x29, #-40]
   127d0:	mov	x2, x20
   127d4:	ldr	x8, [x21]
   127d8:	mov	x0, x21
   127dc:	ldr	x8, [x8, #104]
   127e0:	blr	x8
   127e4:	ldrh	w1, [x19, #4]
   127e8:	ldr	x3, [sp, #16]
   127ec:	mov	x0, x21
   127f0:	mov	x2, x20
   127f4:	bl	1a6e8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
   127f8:	tst	w0, #0x1
   127fc:	mov	w8, #0x4                   	// #4
   12800:	csinc	w0, w8, wzr, ne  // ne = any
   12804:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   12808:	ldrh	w1, [x19, #4]
   1280c:	ldur	x0, [x29, #-40]
   12810:	ldr	x3, [sp, #16]
   12814:	mov	x2, x20
   12818:	bl	1a6e8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
   1281c:	tbz	w0, #0, 12864 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x10d0>
   12820:	ldrb	w8, [x24]
   12824:	cbz	w8, 1286c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x10d8>
   12828:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1282c:	add	x0, x0, #0x0
   12830:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12834:	tbz	w0, #0, 1286c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x10d8>
   12838:	bl	0 <_ZN4llvm4dbgsEv>
   1283c:	ldp	x9, x8, [x0, #16]
   12840:	sub	x9, x9, x8
   12844:	cmp	x9, #0x34
   12848:	b.hi	12874 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x10e0>  // b.pmore
   1284c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12850:	add	x1, x1, #0x0
   12854:	mov	w2, #0x35                  	// #53
   12858:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   1285c:	mov	w0, #0x4                   	// #4
   12860:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   12864:	mov	w0, #0x1                   	// #1
   12868:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   1286c:	mov	w0, #0x4                   	// #4
   12870:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   12874:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12878:	add	x9, x9, #0x0
   1287c:	ldur	x10, [x9, #45]
   12880:	ldp	q1, q0, [x9, #16]
   12884:	ldr	q2, [x9]
   12888:	stur	x10, [x8, #45]
   1288c:	stp	q1, q0, [x8, #16]
   12890:	str	q2, [x8]
   12894:	ldr	x8, [x0, #24]
   12898:	add	x8, x8, #0x35
   1289c:	str	x8, [x0, #24]
   128a0:	mov	w0, #0x4                   	// #4
   128a4:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1010>
   128a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   128ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   128b0:	add	x0, x0, #0x0
   128b4:	add	x1, x1, #0x0
   128b8:	mov	w2, #0x3015                	// #12309
   128bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   128c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   128c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   128c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   128cc:	add	x0, x0, #0x0
   128d0:	add	x1, x1, #0x0
   128d4:	add	x3, x3, #0x0
   128d8:	mov	w2, #0x6b8d                	// #27533
   128dc:	bl	0 <__assert_fail>
   128e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   128e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   128e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   128ec:	add	x0, x0, #0x0
   128f0:	add	x1, x1, #0x0
   128f4:	add	x3, x3, #0x0
   128f8:	mov	w2, #0x99                  	// #153
   128fc:	bl	0 <__assert_fail>
   12900:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12904:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12908:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1290c:	add	x0, x0, #0x0
   12910:	add	x1, x1, #0x0
   12914:	add	x3, x3, #0x0
   12918:	mov	w2, #0x33                  	// #51
   1291c:	bl	0 <__assert_fail>
   12920:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12924:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12928:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1292c:	add	x0, x0, #0x0
   12930:	add	x1, x1, #0x0
   12934:	add	x3, x3, #0x0
   12938:	mov	w2, #0x1ea                 	// #490
   1293c:	bl	0 <__assert_fail>
   12940:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12944:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12948:	add	x0, x0, #0x0
   1294c:	add	x1, x1, #0x0
   12950:	mov	w2, #0x6b76                	// #27510
   12954:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000012958 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
   12958:	sub	sp, sp, #0x130
   1295c:	stp	x29, x30, [sp, #208]
   12960:	stp	x28, x27, [sp, #224]
   12964:	stp	x26, x25, [sp, #240]
   12968:	stp	x24, x23, [sp, #256]
   1296c:	stp	x22, x21, [sp, #272]
   12970:	stp	x20, x19, [sp, #288]
   12974:	add	x29, sp, #0xd0
   12978:	cmp	w2, #0x93
   1297c:	b.hi	13620 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcc8>  // b.pmore
   12980:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12984:	mov	w8, w2
   12988:	add	x9, x9, #0x0
   1298c:	adr	x10, 129a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x48>
   12990:	ldrh	w11, [x9, x8, lsl #1]
   12994:	add	x10, x10, x11, lsl #2
   12998:	mov	x20, x0
   1299c:	br	x10
   129a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129a4:	add	x8, x8, #0x0
   129a8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129ac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129b0:	add	x8, x8, #0x0
   129b4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129b8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129bc:	add	x8, x8, #0x0
   129c0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129c8:	add	x8, x8, #0x0
   129cc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129d4:	add	x8, x8, #0x0
   129d8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129dc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129e0:	add	x8, x8, #0x0
   129e4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129ec:	add	x8, x8, #0x0
   129f0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   129f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   129f8:	add	x8, x8, #0x0
   129fc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a00:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a04:	add	x8, x8, #0x0
   12a08:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a0c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a10:	add	x8, x8, #0x0
   12a14:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a18:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a1c:	add	x8, x8, #0x0
   12a20:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a24:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a28:	add	x8, x8, #0x0
   12a2c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a30:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a34:	add	x8, x8, #0x0
   12a38:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a3c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a40:	add	x8, x8, #0x0
   12a44:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a4c:	add	x8, x8, #0x0
   12a50:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a54:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a58:	add	x8, x8, #0x0
   12a5c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a60:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a64:	add	x8, x8, #0x0
   12a68:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a6c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a70:	add	x8, x8, #0x0
   12a74:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a78:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a7c:	add	x8, x8, #0x0
   12a80:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a84:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a88:	add	x8, x8, #0x0
   12a8c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a90:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12a94:	add	x8, x8, #0x0
   12a98:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12a9c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12aa0:	add	x8, x8, #0x0
   12aa4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12aa8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12aac:	add	x8, x8, #0x0
   12ab0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ab4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12ab8:	add	x8, x8, #0x0
   12abc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ac0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12ac4:	add	x8, x8, #0x0
   12ac8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12acc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12ad0:	add	x8, x8, #0x0
   12ad4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ad8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12adc:	add	x8, x8, #0x0
   12ae0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ae4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12ae8:	add	x8, x8, #0x0
   12aec:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12af0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12af4:	add	x8, x8, #0x0
   12af8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12afc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b00:	add	x8, x8, #0x0
   12b04:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b08:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b0c:	add	x8, x8, #0x0
   12b10:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b14:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b18:	add	x8, x8, #0x0
   12b1c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b20:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b24:	add	x8, x8, #0x0
   12b28:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b2c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b30:	add	x8, x8, #0x0
   12b34:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b38:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b3c:	add	x8, x8, #0x0
   12b40:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b44:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b48:	add	x8, x8, #0x0
   12b4c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b50:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b54:	add	x8, x8, #0x0
   12b58:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b5c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b60:	add	x8, x8, #0x0
   12b64:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b68:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b6c:	add	x8, x8, #0x0
   12b70:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b74:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b78:	add	x8, x8, #0x0
   12b7c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b80:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b84:	add	x8, x8, #0x0
   12b88:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b90:	add	x8, x8, #0x0
   12b94:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12b98:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12b9c:	add	x8, x8, #0x0
   12ba0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ba4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12ba8:	add	x8, x8, #0x0
   12bac:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bb0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bb4:	add	x8, x8, #0x0
   12bb8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bbc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bc0:	add	x8, x8, #0x0
   12bc4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bc8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bcc:	add	x8, x8, #0x0
   12bd0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bd4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bd8:	add	x8, x8, #0x0
   12bdc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12be0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12be4:	add	x8, x8, #0x0
   12be8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bf0:	add	x8, x8, #0x0
   12bf4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12bf8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12bfc:	add	x8, x8, #0x0
   12c00:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c04:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c08:	add	x8, x8, #0x0
   12c0c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c10:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c14:	add	x8, x8, #0x0
   12c18:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c1c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c20:	add	x8, x8, #0x0
   12c24:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c28:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c2c:	add	x8, x8, #0x0
   12c30:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c38:	add	x8, x8, #0x0
   12c3c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c40:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c44:	add	x8, x8, #0x0
   12c48:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c4c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c50:	add	x8, x8, #0x0
   12c54:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c5c:	add	x8, x8, #0x0
   12c60:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c64:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c68:	add	x8, x8, #0x0
   12c6c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c70:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12c74:	add	x8, x8, #0x0
   12c78:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12c7c:	ldr	w8, [x4, #8]
   12c80:	cmp	x8, x3
   12c84:	b.ls	13644 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcec>  // b.plast
   12c88:	ldr	x8, [x4]
   12c8c:	ldr	x8, [x8, x3, lsl #3]
   12c90:	ldr	w9, [x8, #48]
   12c94:	cmp	w9, #0x3
   12c98:	b.ne	13670 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd18>  // b.any
   12c9c:	ldr	w8, [x8, #84]
   12ca0:	cbz	w8, 13390 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa38>
   12ca4:	cmp	w8, #0x1
   12ca8:	b.eq	13384 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa2c>  // b.none
   12cac:	cmp	w8, #0x2
   12cb0:	b.ne	13690 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd38>  // b.any
   12cb4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12cb8:	add	x8, x8, #0x0
   12cbc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12cc0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12cc4:	add	x8, x8, #0x0
   12cc8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ccc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12cd0:	add	x8, x8, #0x0
   12cd4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12cd8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12cdc:	add	x8, x8, #0x0
   12ce0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12ce4:	ldr	w8, [x4, #8]
   12ce8:	cbz	w8, 13644 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcec>
   12cec:	ldr	x8, [x4]
   12cf0:	str	x1, [sp, #8]
   12cf4:	ldr	x8, [x8]
   12cf8:	ldr	w9, [x8, #48]
   12cfc:	cmp	w9, #0x6
   12d00:	b.ne	136a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd50>  // b.any
   12d04:	ldr	x9, [x20, #160]
   12d08:	ldr	x22, [x8, #72]
   12d0c:	ldr	w23, [x8, #80]
   12d10:	add	x8, sp, #0x18
   12d14:	add	x0, x9, #0xb8
   12d18:	bl	204 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
   12d1c:	stp	x22, x23, [x29, #-24]
   12d20:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   12d24:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
   12d28:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   12d2c:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
   12d30:	mov	x24, xzr
   12d34:	mov	x21, xzr
   12d38:	mov	x25, xzr
   12d3c:	add	x19, x19, #0x0
   12d40:	add	x26, x26, #0x0
   12d44:	mov	w14, #0x18                  	// #24
   12d48:	add	x23, x23, #0x0
   12d4c:	add	x28, x28, #0x0
   12d50:	str	xzr, [sp, #16]
   12d54:	b	12d6c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x414>
   12d58:	mov	x22, x25
   12d5c:	add	x26, x26, #0x1c
   12d60:	cmp	x26, x28
   12d64:	mov	x25, x22
   12d68:	b.cs	12fe0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x688>  // b.hs, b.nlast
   12d6c:	ldrb	w8, [x26, #6]
   12d70:	ldur	q0, [sp, #24]
   12d74:	ldr	x9, [sp, #40]
   12d78:	madd	x8, x8, x14, x23
   12d7c:	stur	q0, [x29, #-64]
   12d80:	ldr	q0, [x8]
   12d84:	ldur	q1, [x29, #-64]
   12d88:	ldp	x10, x11, [x8]
   12d8c:	ldr	x8, [x8, #16]
   12d90:	and	v0.16b, v1.16b, v0.16b
   12d94:	stur	q0, [x29, #-64]
   12d98:	ldp	x12, x13, [x29, #-64]
   12d9c:	bic	x8, x8, x9
   12da0:	eor	x10, x12, x10
   12da4:	eor	x11, x13, x11
   12da8:	orr	x9, x10, x11
   12dac:	orr	x8, x9, x8
   12db0:	cbnz	x8, 12d58 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x400>
   12db4:	ldrh	w8, [x26]
   12db8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12dbc:	add	x9, x9, #0x0
   12dc0:	mov	x27, x24
   12dc4:	add	x24, x9, x8
   12dc8:	ldrb	w22, [x24], #1
   12dcc:	cmp	x25, x22
   12dd0:	b.ne	12dec <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x494>  // b.any
   12dd4:	cbz	x25, 12e2c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4d4>
   12dd8:	mov	x0, x24
   12ddc:	mov	x1, x19
   12de0:	mov	x2, x25
   12de4:	bl	0 <bcmp>
   12de8:	cbz	w0, 12e8c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x534>
   12dec:	sub	x0, x29, #0x18
   12df0:	mov	w4, #0x2                   	// #2
   12df4:	mov	x1, x24
   12df8:	mov	x2, x22
   12dfc:	mov	w3, wzr
   12e00:	bl	0 <_ZNK4llvm9StringRef13edit_distanceES0_bj>
   12e04:	cmp	w0, #0x2
   12e08:	b.hi	12e20 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4c8>  // b.pmore
   12e0c:	ldr	x8, [sp, #16]
   12e10:	cmp	x21, x8
   12e14:	b.eq	12e38 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4e0>  // b.none
   12e18:	stp	x24, x22, [x8], #16
   12e1c:	str	x8, [sp, #16]
   12e20:	mov	x19, x24
   12e24:	mov	x24, x27
   12e28:	b	12ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x59c>
   12e2c:	mov	x22, xzr
   12e30:	mov	x24, x27
   12e34:	b	12ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x59c>
   12e38:	sub	x8, x8, x27
   12e3c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
   12e40:	cmp	x8, x9
   12e44:	b.eq	13664 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd0c>  // b.none
   12e48:	asr	x25, x8, #4
   12e4c:	cmp	x8, #0x0
   12e50:	csinc	x8, x25, xzr, ne  // ne = any
   12e54:	adds	x8, x8, x25
   12e58:	lsr	x10, x8, #59
   12e5c:	cset	w9, cs  // cs = hs, nlast
   12e60:	cmp	x10, #0x0
   12e64:	cset	w10, ne  // ne = any
   12e68:	orr	w9, w9, w10
   12e6c:	cmp	w9, #0x0
   12e70:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
   12e74:	csel	x19, x9, x8, ne  // ne = any
   12e78:	cbz	x19, 12e98 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x540>
   12e7c:	lsl	x0, x19, #4
   12e80:	bl	0 <_Znwm>
   12e84:	mov	x10, x0
   12e88:	b	12e9c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x544>
   12e8c:	mov	x22, x25
   12e90:	mov	x24, x27
   12e94:	b	12ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x59c>
   12e98:	mov	x10, xzr
   12e9c:	add	x8, x10, x25, lsl #4
   12ea0:	cmp	x21, x27
   12ea4:	stp	x24, x22, [x8]
   12ea8:	mov	x8, x10
   12eac:	b.eq	12ecc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x574>  // b.none
   12eb0:	mov	x8, x10
   12eb4:	mov	x9, x27
   12eb8:	ldr	q0, [x9], #16
   12ebc:	cmp	x21, x9
   12ec0:	str	q0, [x8]
   12ec4:	add	x8, x8, #0x10
   12ec8:	b.ne	12eb8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x560>  // b.any
   12ecc:	add	x8, x8, #0x10
   12ed0:	str	x8, [sp, #16]
   12ed4:	cbz	x27, 12ee8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x590>
   12ed8:	mov	x0, x27
   12edc:	mov	x21, x10
   12ee0:	bl	0 <_ZdlPv>
   12ee4:	mov	x10, x21
   12ee8:	add	x21, x10, x19, lsl #4
   12eec:	mov	x19, x24
   12ef0:	mov	x24, x10
   12ef4:	mov	w14, #0x18                  	// #24
   12ef8:	b	12d5c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x404>
   12efc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f00:	add	x8, x8, #0x0
   12f04:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f08:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f0c:	add	x8, x8, #0x0
   12f10:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f14:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f18:	add	x8, x8, #0x0
   12f1c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f20:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f24:	add	x8, x8, #0x0
   12f28:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f2c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f30:	add	x8, x8, #0x0
   12f34:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f38:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f3c:	add	x8, x8, #0x0
   12f40:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f44:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f48:	add	x8, x8, #0x0
   12f4c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f50:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f54:	add	x8, x8, #0x0
   12f58:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f5c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f60:	add	x8, x8, #0x0
   12f64:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f68:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f6c:	add	x8, x8, #0x0
   12f70:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f74:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f78:	add	x8, x8, #0x0
   12f7c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f80:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f84:	add	x8, x8, #0x0
   12f88:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f90:	add	x8, x8, #0x0
   12f94:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12f98:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12f9c:	add	x8, x8, #0x0
   12fa0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fa4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12fa8:	add	x8, x8, #0x0
   12fac:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fb0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12fb4:	add	x8, x8, #0x0
   12fb8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fbc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12fc0:	add	x8, x8, #0x0
   12fc4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fc8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12fcc:	add	x8, x8, #0x0
   12fd0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fd4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12fd8:	add	x8, x8, #0x0
   12fdc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   12fe0:	ldr	x10, [sp, #16]
   12fe4:	cmp	x24, x10
   12fe8:	b.eq	13368 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa10>  // b.none
   12fec:	sub	x8, x29, #0x40
   12ff0:	mov	w9, #0x10                  	// #16
   12ff4:	add	x25, x8, #0x10
   12ff8:	sub	x0, x29, #0x40
   12ffc:	sub	x1, x29, #0x60
   13000:	mov	x2, xzr
   13004:	stur	x25, [x29, #-64]
   13008:	stur	x9, [x29, #-96]
   1300c:	sub	x22, x29, #0x60
   13010:	mov	x21, x10
   13014:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   13018:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1301c:	add	x9, x9, #0x0
   13020:	ldur	x8, [x29, #-96]
   13024:	ldr	q0, [x9]
   13028:	stur	x0, [x29, #-64]
   1302c:	sub	x10, x21, x24
   13030:	stur	x8, [x29, #-48]
   13034:	str	q0, [x0]
   13038:	ldur	x9, [x29, #-64]
   1303c:	asr	x10, x10, #4
   13040:	subs	x26, x10, #0x1
   13044:	stur	x8, [x29, #-56]
   13048:	strb	wzr, [x9, x8]
   1304c:	b.eq	133e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa88>  // b.none
   13050:	add	x8, sp, #0x50
   13054:	add	x27, x22, #0x10
   13058:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
   1305c:	mov	x21, xzr
   13060:	add	x22, x22, #0x0
   13064:	add	x28, x8, #0x10
   13068:	str	x25, [sp, #16]
   1306c:	b	1307c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x724>
   13070:	add	w21, w21, #0x1
   13074:	cmp	x26, x21
   13078:	b.ls	13360 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa08>  // b.plast
   1307c:	lsl	x8, x21, #4
   13080:	ldr	x23, [x24, x8]
   13084:	cbz	x23, 130dc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x784>
   13088:	add	x8, x24, x21, lsl #4
   1308c:	mov	x25, x24
   13090:	ldr	x24, [x8, #8]
   13094:	mov	x0, x28
   13098:	str	x28, [sp, #80]
   1309c:	cmp	x24, #0x10
   130a0:	str	x24, [sp, #48]
   130a4:	b.cc	130c4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x76c>  // b.lo, b.ul, b.last
   130a8:	add	x0, sp, #0x50
   130ac:	add	x1, sp, #0x30
   130b0:	mov	x2, xzr
   130b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   130b8:	ldr	x8, [sp, #48]
   130bc:	str	x0, [sp, #80]
   130c0:	str	x8, [sp, #96]
   130c4:	cbz	x24, 130f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x79c>
   130c8:	cmp	x24, #0x1
   130cc:	b.ne	130e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x790>  // b.any
   130d0:	ldrb	w8, [x23]
   130d4:	strb	w8, [x0]
   130d8:	b	130f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x79c>
   130dc:	stp	x28, xzr, [sp, #80]
   130e0:	strb	wzr, [sp, #96]
   130e4:	b	1311c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x7c4>
   130e8:	mov	x1, x23
   130ec:	mov	x2, x24
   130f0:	bl	0 <memcpy>
   130f4:	ldr	x8, [sp, #48]
   130f8:	ldr	x9, [sp, #80]
   130fc:	mov	x24, x25
   13100:	str	x8, [sp, #88]
   13104:	strb	wzr, [x9, x8]
   13108:	ldr	x8, [sp, #88]
   1310c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   13110:	orr	x8, x8, #0x1
   13114:	cmp	x8, x9
   13118:	b.eq	13638 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xce0>  // b.none
   1311c:	add	x0, sp, #0x50
   13120:	mov	w2, #0x2                   	// #2
   13124:	mov	x1, x22
   13128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   1312c:	stur	x27, [x29, #-96]
   13130:	mov	x8, x0
   13134:	ldr	x9, [x8], #16
   13138:	cmp	x9, x8
   1313c:	b.eq	13150 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x7f8>  // b.none
   13140:	stur	x9, [x29, #-96]
   13144:	ldr	x9, [x0, #16]
   13148:	stur	x9, [x29, #-80]
   1314c:	b	13158 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x800>
   13150:	ldr	q0, [x9]
   13154:	str	q0, [x27]
   13158:	ldr	x9, [x0, #8]
   1315c:	stur	x9, [x29, #-88]
   13160:	stp	x8, xzr, [x0]
   13164:	strb	wzr, [x0, #16]
   13168:	ldp	x1, x2, [x29, #-96]
   1316c:	sub	x0, x29, #0x40
   13170:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   13174:	ldur	x0, [x29, #-96]
   13178:	cmp	x0, x27
   1317c:	b.eq	13184 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x82c>  // b.none
   13180:	bl	0 <_ZdlPv>
   13184:	ldr	x0, [sp, #80]
   13188:	cmp	x0, x28
   1318c:	b.eq	13070 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x718>  // b.none
   13190:	bl	0 <_ZdlPv>
   13194:	b	13070 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x718>
   13198:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1319c:	add	x8, x8, #0x0
   131a0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131a8:	add	x8, x8, #0x0
   131ac:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131b4:	add	x8, x8, #0x0
   131b8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131bc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131c0:	add	x8, x8, #0x0
   131c4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131c8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131cc:	add	x8, x8, #0x0
   131d0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131d8:	add	x8, x8, #0x0
   131dc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131e0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131e4:	add	x8, x8, #0x0
   131e8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131ec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131f0:	add	x8, x8, #0x0
   131f4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   131f8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   131fc:	add	x8, x8, #0x0
   13200:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13204:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13208:	add	x8, x8, #0x0
   1320c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13210:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13214:	add	x8, x8, #0x0
   13218:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   1321c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13220:	add	x8, x8, #0x0
   13224:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13228:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1322c:	add	x8, x8, #0x0
   13230:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13234:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13238:	add	x8, x8, #0x0
   1323c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13240:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13244:	add	x8, x8, #0x0
   13248:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   1324c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13250:	add	x8, x8, #0x0
   13254:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13258:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1325c:	add	x8, x8, #0x0
   13260:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13264:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13268:	add	x8, x8, #0x0
   1326c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13270:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13274:	add	x8, x8, #0x0
   13278:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   1327c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13280:	add	x8, x8, #0x0
   13284:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13288:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1328c:	add	x8, x8, #0x0
   13290:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13294:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13298:	add	x8, x8, #0x0
   1329c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132a4:	add	x8, x8, #0x0
   132a8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132ac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132b0:	add	x8, x8, #0x0
   132b4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132b8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132bc:	add	x8, x8, #0x0
   132c0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132c8:	add	x8, x8, #0x0
   132cc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132d4:	add	x8, x8, #0x0
   132d8:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132dc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132e0:	add	x8, x8, #0x0
   132e4:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132ec:	add	x8, x8, #0x0
   132f0:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   132f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   132f8:	add	x8, x8, #0x0
   132fc:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13300:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13304:	add	x8, x8, #0x0
   13308:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   1330c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13310:	add	x8, x8, #0x0
   13314:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13318:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1331c:	add	x8, x8, #0x0
   13320:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13324:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13328:	add	x8, x8, #0x0
   1332c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13330:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13334:	add	x8, x8, #0x0
   13338:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   1333c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13340:	add	x8, x8, #0x0
   13344:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13348:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1334c:	add	x8, x8, #0x0
   13350:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13354:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13358:	add	x8, x8, #0x0
   1335c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13360:	ldr	x25, [sp, #16]
   13364:	b	133e4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa8c>
   13368:	add	x8, sp, #0x30
   1336c:	add	x8, x8, #0x10
   13370:	stp	x8, xzr, [sp, #48]
   13374:	strb	wzr, [sp, #64]
   13378:	cbnz	x24, 1356c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc14>
   1337c:	mov	w1, #0x21                  	// #33
   13380:	b	1357c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc24>
   13384:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13388:	add	x8, x8, #0x0
   1338c:	b	13398 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa40>
   13390:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13394:	add	x8, x8, #0x0
   13398:	mov	w9, #0x103                 	// #259
   1339c:	stp	x8, xzr, [x29, #-64]
   133a0:	sturh	w9, [x29, #-48]
   133a4:	ldr	x0, [x20, #8]
   133a8:	sub	x2, x29, #0x40
   133ac:	mov	x3, xzr
   133b0:	mov	x4, xzr
   133b4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   133b8:	mov	w19, w0
   133bc:	and	w0, w19, #0x1
   133c0:	ldp	x20, x19, [sp, #288]
   133c4:	ldp	x22, x21, [sp, #272]
   133c8:	ldp	x24, x23, [sp, #256]
   133cc:	ldp	x26, x25, [sp, #240]
   133d0:	ldp	x28, x27, [sp, #224]
   133d4:	ldp	x29, x30, [sp, #208]
   133d8:	add	sp, sp, #0x130
   133dc:	ret
   133e0:	mov	x21, xzr
   133e4:	lsl	x8, x21, #4
   133e8:	ldr	x22, [x24, x8]
   133ec:	cbz	x22, 13444 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xaec>
   133f0:	add	x8, x24, x21, lsl #4
   133f4:	ldr	x23, [x8, #8]
   133f8:	add	x8, sp, #0x50
   133fc:	add	x0, x8, #0x10
   13400:	str	x0, [sp, #80]
   13404:	cmp	x23, #0x10
   13408:	stur	x23, [x29, #-96]
   1340c:	b.cc	1342c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xad4>  // b.lo, b.ul, b.last
   13410:	add	x0, sp, #0x50
   13414:	sub	x1, x29, #0x60
   13418:	mov	x2, xzr
   1341c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   13420:	ldur	x8, [x29, #-96]
   13424:	str	x0, [sp, #80]
   13428:	str	x8, [sp, #96]
   1342c:	cbz	x23, 13464 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb0c>
   13430:	cmp	x23, #0x1
   13434:	b.ne	13458 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb00>  // b.any
   13438:	ldrb	w8, [x22]
   1343c:	strb	w8, [x0]
   13440:	b	13464 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb0c>
   13444:	add	x8, sp, #0x50
   13448:	add	x8, x8, #0x10
   1344c:	stp	x8, xzr, [sp, #80]
   13450:	strb	wzr, [sp, #96]
   13454:	b	13474 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb1c>
   13458:	mov	x1, x22
   1345c:	mov	x2, x23
   13460:	bl	0 <memcpy>
   13464:	ldur	x8, [x29, #-96]
   13468:	ldr	x9, [sp, #80]
   1346c:	str	x8, [sp, #88]
   13470:	strb	wzr, [x9, x8]
   13474:	ldp	x3, x4, [x29, #-64]
   13478:	add	x0, sp, #0x50
   1347c:	mov	x1, xzr
   13480:	mov	x2, xzr
   13484:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
   13488:	sub	x8, x29, #0x60
   1348c:	add	x21, x8, #0x10
   13490:	stur	x21, [x29, #-96]
   13494:	mov	x8, x0
   13498:	ldr	x9, [x8], #16
   1349c:	cmp	x9, x8
   134a0:	b.eq	134b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb5c>  // b.none
   134a4:	stur	x9, [x29, #-96]
   134a8:	ldr	x9, [x0, #16]
   134ac:	stur	x9, [x29, #-80]
   134b0:	b	134bc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb64>
   134b4:	ldr	q0, [x9]
   134b8:	str	q0, [x21]
   134bc:	ldr	x9, [x0, #8]
   134c0:	stur	x9, [x29, #-88]
   134c4:	stp	x8, xzr, [x0]
   134c8:	strb	wzr, [x0, #16]
   134cc:	ldur	x8, [x29, #-88]
   134d0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   134d4:	cmp	x8, x9
   134d8:	b.eq	13638 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xce0>  // b.none
   134dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   134e0:	add	x1, x1, #0x0
   134e4:	sub	x0, x29, #0x60
   134e8:	mov	w2, #0x1                   	// #1
   134ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   134f0:	add	x8, sp, #0x30
   134f4:	add	x9, x8, #0x10
   134f8:	str	x9, [sp, #48]
   134fc:	mov	x8, x0
   13500:	ldr	x10, [x8], #16
   13504:	cmp	x10, x8
   13508:	b.eq	1351c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbc4>  // b.none
   1350c:	str	x10, [sp, #48]
   13510:	ldr	x9, [x0, #16]
   13514:	str	x9, [sp, #64]
   13518:	b	13524 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbcc>
   1351c:	ldr	q0, [x10]
   13520:	str	q0, [x9]
   13524:	ldr	x9, [x0, #8]
   13528:	str	x9, [sp, #56]
   1352c:	stp	x8, xzr, [x0]
   13530:	strb	wzr, [x0, #16]
   13534:	ldur	x0, [x29, #-96]
   13538:	cmp	x0, x21
   1353c:	b.eq	13544 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbec>  // b.none
   13540:	bl	0 <_ZdlPv>
   13544:	ldr	x0, [sp, #80]
   13548:	add	x8, sp, #0x50
   1354c:	add	x8, x8, #0x10
   13550:	cmp	x0, x8
   13554:	b.eq	1355c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc04>  // b.none
   13558:	bl	0 <_ZdlPv>
   1355c:	ldur	x0, [x29, #-64]
   13560:	cmp	x0, x25
   13564:	b.eq	1356c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc14>  // b.none
   13568:	bl	0 <_ZdlPv>
   1356c:	mov	x0, x24
   13570:	bl	0 <_ZdlPv>
   13574:	ldr	x8, [sp, #56]
   13578:	add	x1, x8, #0x21
   1357c:	sub	x22, x29, #0x40
   13580:	add	x21, x22, #0x10
   13584:	sub	x0, x29, #0x40
   13588:	stp	x21, xzr, [x29, #-64]
   1358c:	sturb	wzr, [x29, #-48]
   13590:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
   13594:	ldur	x8, [x29, #-56]
   13598:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   1359c:	sub	x8, x9, x8
   135a0:	cmp	x8, #0x20
   135a4:	b.ls	13638 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xce0>  // b.plast
   135a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   135ac:	add	x1, x1, #0x0
   135b0:	sub	x0, x29, #0x40
   135b4:	mov	w2, #0x21                  	// #33
   135b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   135bc:	ldp	x1, x2, [sp, #48]
   135c0:	sub	x0, x29, #0x40
   135c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   135c8:	mov	w8, #0x104                 	// #260
   135cc:	sturh	w8, [x29, #-80]
   135d0:	stp	x22, xzr, [x29, #-96]
   135d4:	ldr	x0, [x20, #8]
   135d8:	ldr	x1, [sp, #8]
   135dc:	sub	x2, x29, #0x60
   135e0:	mov	x3, xzr
   135e4:	mov	x4, xzr
   135e8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   135ec:	ldur	x8, [x29, #-64]
   135f0:	mov	w19, w0
   135f4:	cmp	x8, x21
   135f8:	b.eq	13604 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcac>  // b.none
   135fc:	mov	x0, x8
   13600:	bl	0 <_ZdlPv>
   13604:	ldr	x0, [sp, #48]
   13608:	add	x8, sp, #0x30
   1360c:	add	x8, x8, #0x10
   13610:	cmp	x0, x8
   13614:	b.eq	133bc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa64>  // b.none
   13618:	bl	0 <_ZdlPv>
   1361c:	b	133bc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa64>
   13620:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13624:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13628:	add	x0, x0, #0x0
   1362c:	add	x1, x1, #0x0
   13630:	mov	w2, #0x1189                	// #4489
   13634:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13638:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1363c:	add	x0, x0, #0x0
   13640:	bl	0 <_ZSt20__throw_length_errorPKc>
   13644:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13648:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1364c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   13650:	add	x0, x0, #0x0
   13654:	add	x1, x1, #0x0
   13658:	add	x3, x3, #0x0
   1365c:	mov	w2, #0x95                  	// #149
   13660:	bl	0 <__assert_fail>
   13664:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13668:	add	x0, x0, #0x0
   1366c:	bl	0 <_ZSt20__throw_length_errorPKc>
   13670:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13674:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13678:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1367c:	add	x0, x0, #0x0
   13680:	add	x1, x1, #0x0
   13684:	add	x3, x3, #0x0
   13688:	mov	w2, #0x221                 	// #545
   1368c:	bl	0 <__assert_fail>
   13690:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13694:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13698:	add	x0, x0, #0x0
   1369c:	add	x1, x1, #0x0
   136a0:	mov	w2, #0x105d                	// #4189
   136a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   136a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   136ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   136b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   136b4:	add	x0, x0, #0x0
   136b8:	add	x1, x1, #0x0
   136bc:	add	x3, x3, #0x0
   136c0:	mov	w2, #0x1ea                 	// #490
   136c4:	bl	0 <__assert_fail>

00000000000136c8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>:
   136c8:	cmp	w0, w1
   136cc:	b.ne	136d8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x10>  // b.any
   136d0:	mov	w0, #0x1                   	// #1
   136d4:	ret
   136d8:	sub	w8, w0, #0x2
   136dc:	cmp	w8, #0x11d
   136e0:	mov	w0, wzr
   136e4:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   136e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   136ec:	add	x9, x9, #0x0
   136f0:	adr	x10, 13700 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x38>
   136f4:	ldrh	w11, [x9, x8, lsl #1]
   136f8:	add	x10, x10, x11, lsl #2
   136fc:	br	x10
   13700:	cmp	w1, #0x120
   13704:	cset	w0, eq  // eq = none
   13708:	ret
   1370c:	cmp	w1, #0xac
   13710:	cset	w0, eq  // eq = none
   13714:	ret
   13718:	cmp	w1, #0xa8
   1371c:	cset	w0, eq  // eq = none
   13720:	ret
   13724:	cmp	w1, #0xab
   13728:	cset	w0, eq  // eq = none
   1372c:	ret
   13730:	cmp	w1, #0xa7
   13734:	cset	w0, eq  // eq = none
   13738:	ret
   1373c:	cmp	w1, #0xaa
   13740:	cset	w0, eq  // eq = none
   13744:	ret
   13748:	cmp	w1, #0xad
   1374c:	cset	w0, eq  // eq = none
   13750:	ret
   13754:	cmp	w1, #0xae
   13758:	cset	w0, eq  // eq = none
   1375c:	ret
   13760:	cmp	w1, #0xba
   13764:	cset	w0, eq  // eq = none
   13768:	ret
   1376c:	cmp	w1, #0x92
   13770:	cset	w0, eq  // eq = none
   13774:	ret
   13778:	cmp	w1, #0xa6
   1377c:	cset	w0, eq  // eq = none
   13780:	ret
   13784:	sub	w8, w1, #0x55
   13788:	cmp	w8, #0x56
   1378c:	mov	w0, wzr
   13790:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13794:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13798:	add	x9, x9, #0x0
   1379c:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   137a0:	ldrb	w11, [x9, x8]
   137a4:	add	x10, x10, x11, lsl #2
   137a8:	br	x10
   137ac:	cmp	w1, #0xab
   137b0:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   137b4:	cmp	w1, #0x7d
   137b8:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   137bc:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   137c0:	cmp	w1, #0xac
   137c4:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   137c8:	cmp	w1, #0x80
   137cc:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   137d0:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   137d4:	sub	w8, w1, #0x70
   137d8:	cmp	w8, #0x3d
   137dc:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   137e0:	mov	x9, #0x1                   	// #1
   137e4:	movk	x9, #0x3, lsl #16
   137e8:	movk	x9, #0x1000, lsl #48
   137ec:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   137f0:	sub	w8, w1, #0x65
   137f4:	cmp	w8, #0x47
   137f8:	mov	w0, wzr
   137fc:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13800:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13804:	add	x9, x9, #0x0
   13808:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   1380c:	ldrb	w11, [x9, x8]
   13810:	add	x10, x10, x11, lsl #2
   13814:	br	x10
   13818:	cmp	w1, #0xaa
   1381c:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13820:	cmp	w1, #0x84
   13824:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13828:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   1382c:	sub	w8, w1, #0x94
   13830:	cmp	w8, #0x1b
   13834:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13838:	mov	w9, #0x2f                  	// #47
   1383c:	movk	w9, #0x403, lsl #16
   13840:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13844:	sub	w8, w1, #0x68
   13848:	cmp	w8, #0x44
   1384c:	mov	w0, wzr
   13850:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13854:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13858:	add	x9, x9, #0x0
   1385c:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13860:	ldrb	w11, [x9, x8]
   13864:	add	x10, x10, x11, lsl #2
   13868:	br	x10
   1386c:	sub	w8, w1, #0x6c
   13870:	cmp	w8, #0x3d
   13874:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13878:	mov	x9, #0x1e0000000           	// #8053063680
   1387c:	movk	x9, #0xe003
   13880:	movk	x9, #0x1000, lsl #48
   13884:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13888:	sub	w8, w1, #0x71
   1388c:	cmp	w8, #0x3c
   13890:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13894:	mov	x9, #0x3                   	// #3
   13898:	movk	x9, #0x7, lsl #16
   1389c:	movk	x9, #0x800, lsl #48
   138a0:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   138a4:	sub	w8, w1, #0x79
   138a8:	cmp	w8, #0x30
   138ac:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   138b0:	mov	x9, #0x3                   	// #3
   138b4:	movk	x9, #0x7, lsl #16
   138b8:	movk	x9, #0x8000, lsl #32
   138bc:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   138c0:	sub	w8, w1, #0x7e
   138c4:	cmp	w8, #0x2e
   138c8:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   138cc:	mov	x9, #0x3                   	// #3
   138d0:	movk	x9, #0x2000, lsl #32
   138d4:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   138d8:	cmp	w1, #0x91
   138dc:	cset	w0, eq  // eq = none
   138e0:	ret
   138e4:	sub	w8, w1, #0x8d
   138e8:	cmp	w8, #0x1a
   138ec:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   138f0:	mov	w9, #0x3                   	// #3
   138f4:	movk	w9, #0x200, lsl #16
   138f8:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   138fc:	cmp	w1, #0xa9
   13900:	cset	w0, eq  // eq = none
   13904:	ret
   13908:	sub	w8, w1, #0x95
   1390c:	cmp	w8, #0x1a
   13910:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13914:	mov	w9, #0x8011                	// #32785
   13918:	movk	w9, #0x201, lsl #16
   1391c:	orr	w9, w9, #0x6
   13920:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13924:	sub	w8, w1, #0x99
   13928:	cmp	w8, #0x16
   1392c:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13930:	mov	w9, #0xc01                 	// #3073
   13934:	movk	w9, #0x20, lsl #16
   13938:	add	w9, w9, #0xc00
   1393c:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13940:	sub	w8, w1, #0x97
   13944:	cmp	w8, #0x18
   13948:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1394c:	mov	w9, #0x6005                	// #24581
   13950:	movk	w9, #0x80, lsl #16
   13954:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13958:	cmp	w1, #0x120
   1395c:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13960:	cmp	w1, #0x11c
   13964:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13968:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   1396c:	cmp	w1, #0x2c
   13970:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   13974:	cmp	w1, #0x2d
   13978:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1397c:	cmp	w1, #0x2e
   13980:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   13984:	cmp	w1, #0x2f
   13988:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1398c:	cmp	w1, #0x30
   13990:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   13994:	cmp	w1, #0x31
   13998:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1399c:	cmp	w1, #0x32
   139a0:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139a4:	cmp	w1, #0x33
   139a8:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139ac:	cmp	w1, #0x34
   139b0:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139b4:	cmp	w1, #0x35
   139b8:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139bc:	cmp	w1, #0x36
   139c0:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139c4:	cmp	w1, #0x37
   139c8:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139cc:	cmp	w1, #0x38
   139d0:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139d4:	cmp	w1, #0x39
   139d8:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139dc:	cmp	w1, #0x3a
   139e0:	b	139e8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   139e4:	cmp	w1, #0x3b
   139e8:	cset	w0, eq  // eq = none
   139ec:	ret
   139f0:	sub	w8, w1, #0x63
   139f4:	cmp	w8, #0x30
   139f8:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   139fc:	mov	x9, #0x3                   	// #3
   13a00:	movk	x9, #0x4, lsl #16
   13a04:	movk	x9, #0x8000, lsl #32
   13a08:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13a0c:	cmp	w1, #0xad
   13a10:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a14:	cmp	w1, #0xa3
   13a18:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a1c:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13a20:	cmp	w1, #0xae
   13a24:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a28:	cmp	w1, #0xa5
   13a2c:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a30:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13a34:	sub	w8, w1, #0x95
   13a38:	cmp	w8, #0x1a
   13a3c:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13a40:	mov	w9, #0x8011                	// #32785
   13a44:	movk	w9, #0x201, lsl #16
   13a48:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13a4c:	sub	w8, w1, #0x5d
   13a50:	cmp	w8, #0x36
   13a54:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13a58:	mov	x9, #0x20e1                	// #8417
   13a5c:	movk	x9, #0x180, lsl #16
   13a60:	movk	x9, #0x20, lsl #48
   13a64:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13a68:	cmp	w1, #0x91
   13a6c:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a70:	cmp	w1, #0x76
   13a74:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13a78:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13a7c:	sub	w8, w1, #0x4c
   13a80:	cmp	w8, #0x60
   13a84:	mov	w0, wzr
   13a88:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13a8c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13a90:	add	x9, x9, #0x0
   13a94:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13a98:	ldrb	w11, [x9, x8]
   13a9c:	add	x10, x10, x11, lsl #2
   13aa0:	br	x10
   13aa4:	sub	w8, w1, #0x4e
   13aa8:	cmp	w8, #0x5d
   13aac:	mov	w0, wzr
   13ab0:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13ab4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13ab8:	add	x9, x9, #0x0
   13abc:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13ac0:	ldrb	w11, [x9, x8]
   13ac4:	add	x10, x10, x11, lsl #2
   13ac8:	br	x10
   13acc:	sub	w8, w1, #0x50
   13ad0:	cmp	w8, #0x5c
   13ad4:	mov	w0, wzr
   13ad8:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13adc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13ae0:	add	x9, x9, #0x0
   13ae4:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13ae8:	ldrb	w11, [x9, x8]
   13aec:	add	x10, x10, x11, lsl #2
   13af0:	br	x10
   13af4:	sub	w8, w1, #0x51
   13af8:	cmp	w8, #0x5b
   13afc:	mov	w0, wzr
   13b00:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13b04:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13b08:	add	x9, x9, #0x0
   13b0c:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13b10:	ldrb	w11, [x9, x8]
   13b14:	add	x10, x10, x11, lsl #2
   13b18:	br	x10
   13b1c:	sub	w8, w1, #0x54
   13b20:	cmp	w8, #0x2a
   13b24:	mov	w0, wzr
   13b28:	b.hi	13ee0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x818>  // b.pmore
   13b2c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13b30:	add	x9, x9, #0x0
   13b34:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13b38:	ldrb	w11, [x9, x8]
   13b3c:	add	x10, x10, x11, lsl #2
   13b40:	br	x10
   13b44:	sub	w8, w1, #0x57
   13b48:	cmp	w8, #0x2a
   13b4c:	mov	w0, wzr
   13b50:	b.hi	13eec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x824>  // b.pmore
   13b54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13b58:	add	x9, x9, #0x0
   13b5c:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13b60:	ldrb	w11, [x9, x8]
   13b64:	add	x10, x10, x11, lsl #2
   13b68:	br	x10
   13b6c:	sub	w8, w1, #0x58
   13b70:	cmp	w8, #0x54
   13b74:	mov	w0, wzr
   13b78:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13b7c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13b80:	add	x9, x9, #0x0
   13b84:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13b88:	ldrb	w11, [x9, x8]
   13b8c:	add	x10, x10, x11, lsl #2
   13b90:	br	x10
   13b94:	sub	w8, w1, #0x59
   13b98:	cmp	w8, #0x53
   13b9c:	mov	w0, wzr
   13ba0:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13ba4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13ba8:	add	x9, x9, #0x0
   13bac:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13bb0:	ldrb	w11, [x9, x8]
   13bb4:	add	x10, x10, x11, lsl #2
   13bb8:	br	x10
   13bbc:	sub	w8, w1, #0x5b
   13bc0:	cmp	w8, #0x2a
   13bc4:	mov	w0, wzr
   13bc8:	b.hi	13ef8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x830>  // b.pmore
   13bcc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13bd0:	add	x9, x9, #0x0
   13bd4:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13bd8:	ldrb	w11, [x9, x8]
   13bdc:	add	x10, x10, x11, lsl #2
   13be0:	br	x10
   13be4:	sub	w8, w1, #0x6e
   13be8:	cmp	w8, #0x3e
   13bec:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13bf0:	mov	x9, #0x8001                	// #32769
   13bf4:	movk	x9, #0x1, lsl #16
   13bf8:	movk	x9, #0x2000, lsl #48
   13bfc:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13c00:	sub	w8, w1, #0x67
   13c04:	cmp	w8, #0x44
   13c08:	mov	w0, wzr
   13c0c:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13c10:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13c14:	add	x9, x9, #0x0
   13c18:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13c1c:	ldrb	w11, [x9, x8]
   13c20:	add	x10, x10, x11, lsl #2
   13c24:	br	x10
   13c28:	sub	w8, w1, #0x68
   13c2c:	cmp	w8, #0x44
   13c30:	mov	w0, wzr
   13c34:	b.hi	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   13c38:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13c3c:	add	x9, x9, #0x0
   13c40:	adr	x10, 136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13c44:	ldrb	w11, [x9, x8]
   13c48:	add	x10, x10, x11, lsl #2
   13c4c:	br	x10
   13c50:	sub	w8, w1, #0x73
   13c54:	cmp	w8, #0x38
   13c58:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13c5c:	mov	x9, #0x1                   	// #1
   13c60:	movk	x9, #0x6, lsl #16
   13c64:	movk	x9, #0x80, lsl #48
   13c68:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13c6c:	sub	w8, w1, #0x62
   13c70:	cmp	w8, #0x31
   13c74:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13c78:	mov	x9, #0x107                 	// #263
   13c7c:	movk	x9, #0xc, lsl #16
   13c80:	movk	x9, #0x1, lsl #48
   13c84:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13c88:	sub	w8, w1, #0x98
   13c8c:	cmp	w8, #0x16
   13c90:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13c94:	mov	w9, #0xc01                 	// #3073
   13c98:	movk	w9, #0x20, lsl #16
   13c9c:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13ca0:	cmp	w1, #0x90
   13ca4:	cset	w0, eq  // eq = none
   13ca8:	ret
   13cac:	cmp	w1, #0xa9
   13cb0:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13cb4:	cmp	w1, #0x93
   13cb8:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13cbc:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13cc0:	sub	w8, w1, #0x64
   13cc4:	cmp	w8, #0x2f
   13cc8:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13ccc:	mov	x9, #0x41                  	// #65
   13cd0:	movk	x9, #0x3, lsl #16
   13cd4:	movk	x9, #0x4000, lsl #32
   13cd8:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13cdc:	sub	w8, w1, #0x64
   13ce0:	cmp	w8, #0x2f
   13ce4:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13ce8:	mov	x9, #0x1                   	// #1
   13cec:	movk	x9, #0x2, lsl #16
   13cf0:	movk	x9, #0x4000, lsl #32
   13cf4:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13cf8:	cmp	w1, #0x92
   13cfc:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13d00:	cmp	w1, #0x75
   13d04:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13d08:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13d0c:	sub	w8, w1, #0x6e
   13d10:	cmp	w8, #0x3e
   13d14:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13d18:	mov	x9, #0x8003                	// #32771
   13d1c:	movk	x9, #0x3, lsl #16
   13d20:	movk	x9, #0x2000, lsl #48
   13d24:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13d28:	sub	w8, w1, #0x70
   13d2c:	cmp	w8, #0x3d
   13d30:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13d34:	mov	x9, #0x3                   	// #3
   13d38:	movk	x9, #0x7, lsl #16
   13d3c:	movk	x9, #0x1000, lsl #48
   13d40:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13d44:	sub	w8, w1, #0x74
   13d48:	cmp	w8, #0x1f
   13d4c:	b.cc	13e64 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x79c>  // b.lo, b.ul, b.last
   13d50:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13d54:	sub	w8, w1, #0x77
   13d58:	cmp	w8, #0x31
   13d5c:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13d60:	mov	x9, #0x8003                	// #32771
   13d64:	movk	x9, #0x3, lsl #16
   13d68:	movk	x9, #0x1, lsl #48
   13d6c:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13d70:	sub	w8, w1, #0x7a
   13d74:	cmp	w8, #0x2f
   13d78:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13d7c:	mov	x9, #0x3                   	// #3
   13d80:	movk	x9, #0x7, lsl #16
   13d84:	movk	x9, #0x4000, lsl #32
   13d88:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13d8c:	sub	w8, w1, #0x7d
   13d90:	cmp	w8, #0x2f
   13d94:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13d98:	mov	x9, #0x3                   	// #3
   13d9c:	movk	x9, #0x4000, lsl #32
   13da0:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13da4:	sub	w8, w1, #0x80
   13da8:	cmp	w8, #0x2d
   13dac:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13db0:	mov	x9, #0x3                   	// #3
   13db4:	movk	x9, #0x1000, lsl #32
   13db8:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13dbc:	sub	w8, w1, #0x81
   13dc0:	cmp	w8, #0x2c
   13dc4:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13dc8:	mov	x9, #0x3                   	// #3
   13dcc:	movk	x9, #0x800, lsl #32
   13dd0:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13dd4:	sub	w8, w1, #0x82
   13dd8:	cmp	w8, #0x2b
   13ddc:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13de0:	mov	x9, #0x3                   	// #3
   13de4:	movk	x9, #0x400, lsl #32
   13de8:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13dec:	sub	w8, w1, #0x84
   13df0:	cmp	w8, #0x27
   13df4:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13df8:	mov	x9, #0x3                   	// #3
   13dfc:	movk	x9, #0x40, lsl #32
   13e00:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13e04:	sub	w8, w1, #0x86
   13e08:	cmp	w8, #0x22
   13e0c:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13e10:	mov	x9, #0x3                   	// #3
   13e14:	movk	x9, #0x2, lsl #32
   13e18:	b	13e30 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   13e1c:	sub	w8, w1, #0x87
   13e20:	cmp	w8, #0x21
   13e24:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13e28:	mov	x9, #0x3                   	// #3
   13e2c:	movk	x9, #0x1, lsl #32
   13e30:	lsr	x8, x9, x8
   13e34:	and	w0, w8, #0x1
   13e38:	ret
   13e3c:	sub	w8, w1, #0x89
   13e40:	cmp	w8, #0x20
   13e44:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13e48:	mov	w9, #0x80000003            	// #-2147483645
   13e4c:	lsr	w8, w9, w8
   13e50:	and	w0, w8, #0x1
   13e54:	ret
   13e58:	sub	w8, w1, #0x8a
   13e5c:	cmp	w8, #0x1f
   13e60:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13e64:	mov	w9, #0x3                   	// #3
   13e68:	movk	w9, #0x4000, lsl #16
   13e6c:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13e70:	sub	w8, w1, #0x8b
   13e74:	cmp	w8, #0x1e
   13e78:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13e7c:	mov	w9, #0x3                   	// #3
   13e80:	movk	w9, #0x2000, lsl #16
   13e84:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13e88:	cmp	w1, #0x9d
   13e8c:	cset	w0, eq  // eq = none
   13e90:	ret
   13e94:	cmp	w1, #0xae
   13e98:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13e9c:	cmp	w1, #0xa4
   13ea0:	b.eq	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   13ea4:	b	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   13ea8:	sub	w8, w1, #0xa2
   13eac:	cmp	w8, #0xc
   13eb0:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13eb4:	mov	w9, #0x803                 	// #2051
   13eb8:	b	13ecc <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   13ebc:	sub	w8, w1, #0xa4
   13ec0:	cmp	w8, #0xb
   13ec4:	b.cs	13ed8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   13ec8:	mov	w9, #0x403                 	// #1027
   13ecc:	lsr	w8, w9, w8
   13ed0:	and	w0, w8, #0x1
   13ed4:	ret
   13ed8:	mov	w0, wzr
   13edc:	ret
   13ee0:	cmp	w1, #0xab
   13ee4:	b.ne	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   13ee8:	b	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13eec:	cmp	w1, #0xac
   13ef0:	b.ne	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   13ef4:	b	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   13ef8:	cmp	w1, #0xaa
   13efc:	b.ne	139ec <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   13f00:	b	136d0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>

0000000000013f04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>:
   13f04:	sub	sp, sp, #0x70
   13f08:	stp	x29, x30, [sp, #64]
   13f0c:	str	x21, [sp, #80]
   13f10:	stp	x20, x19, [sp, #96]
   13f14:	add	x29, sp, #0x40
   13f18:	cbz	w1, 13fac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa8>
   13f1c:	ldr	x8, [x0]
   13f20:	mov	w20, w1
   13f24:	mov	x19, x0
   13f28:	ldr	x8, [x8, #32]
   13f2c:	blr	x8
   13f30:	cmp	w20, #0x42
   13f34:	b.gt	13fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb0>
   13f38:	tbz	w0, #0, 13fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb0>
   13f3c:	ldr	w8, [x19, #48]
   13f40:	cmp	w8, #0x6
   13f44:	b.ne	1a670 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x676c>  // b.any
   13f48:	ldr	w8, [x19, #80]
   13f4c:	sub	w9, w8, #0x1
   13f50:	cmp	w9, #0x3
   13f54:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   13f58:	ldr	x8, [x19, #72]
   13f5c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   13f60:	add	x10, x10, #0x0
   13f64:	adr	x11, 13f74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70>
   13f68:	ldrb	w12, [x10, x9]
   13f6c:	add	x11, x11, x12, lsl #2
   13f70:	br	x11
   13f74:	ldrb	w8, [x8]
   13f78:	cmp	w8, #0x5a
   13f7c:	b.le	14124 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x220>
   13f80:	sub	w8, w8, #0x5b
   13f84:	cmp	w8, #0x1f
   13f88:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   13f8c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13f90:	add	x9, x9, #0x0
   13f94:	adr	x10, 13fa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa0>
   13f98:	ldrh	w11, [x9, x8, lsl #1]
   13f9c:	add	x10, x10, x11, lsl #2
   13fa0:	br	x10
   13fa4:	mov	w0, #0x3d                  	// #61
   13fa8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   13fac:	mov	w21, wzr
   13fb0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   13fb4:	sub	w8, w20, #0xaf
   13fb8:	cmp	w8, #0x124
   13fbc:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   13fc0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13fc4:	add	x9, x9, #0x0
   13fc8:	adr	x10, 13fd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd4>
   13fcc:	ldrh	w11, [x9, x8, lsl #1]
   13fd0:	add	x10, x10, x11, lsl #2
   13fd4:	br	x10
   13fd8:	ldr	x8, [x19]
   13fdc:	mov	x0, x19
   13fe0:	ldr	x8, [x8, #40]
   13fe4:	blr	x8
   13fe8:	tbz	w0, #0, 1776c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3868>
   13fec:	ldr	w8, [x19, #48]
   13ff0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   13ff4:	ldr	x8, [x19, #72]
   13ff8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   13ffc:	ldr	w9, [x8]
   14000:	cmp	w9, #0x1
   14004:	b.ne	1776c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3868>  // b.any
   14008:	ldr	x8, [x8, #16]
   1400c:	mov	w21, #0x91                  	// #145
   14010:	lsr	x9, x8, #32
   14014:	cbz	x9, 14028 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x124>
   14018:	mov	w9, #0x80000000            	// #-2147483648
   1401c:	add	x9, x8, x9
   14020:	lsr	x9, x9, #32
   14024:	cbnz	x9, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14028:	and	x0, x8, #0xffffffff
   1402c:	add	x2, sp, #0x10
   14030:	mov	w1, #0x20                  	// #32
   14034:	b	17758 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3854>
   14038:	ldrb	w9, [x8]
   1403c:	cmp	w9, #0x6d
   14040:	b.eq	14190 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x28c>  // b.none
   14044:	cmp	w9, #0x2e
   14048:	b.eq	14144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x240>  // b.none
   1404c:	cmp	w9, #0x23
   14050:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   14054:	ldrb	w9, [x8, #1]
   14058:	sub	w9, w9, #0x31
   1405c:	cmp	w9, #0x5
   14060:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   14064:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   14068:	add	x10, x10, #0x0
   1406c:	adr	x11, 1407c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x178>
   14070:	ldrb	w12, [x10, x9]
   14074:	add	x11, x11, x12, lsl #2
   14078:	br	x11
   1407c:	ldrb	w8, [x8, #2]
   14080:	sub	w8, w8, #0x30
   14084:	cmp	w8, #0x7
   14088:	b.cs	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.hs, b.nlast
   1408c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14090:	sxtb	x8, w8
   14094:	add	x9, x9, #0x0
   14098:	ldr	w0, [x9, x8, lsl #2]
   1409c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   140a0:	ldrh	w9, [x8]
   140a4:	ldrb	w10, [x8, #2]
   140a8:	mov	w11, #0x312e                	// #12590
   140ac:	mov	w12, #0x36                  	// #54
   140b0:	eor	w9, w9, w11
   140b4:	eor	w10, w10, w12
   140b8:	orr	w9, w9, w10
   140bc:	tst	w9, #0xffff
   140c0:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   140c4:	ldrb	w8, [x8, #3]
   140c8:	mov	w9, #0x2c                  	// #44
   140cc:	cmp	w8, #0x62
   140d0:	csel	w9, w9, wzr, eq  // eq = none
   140d4:	cmp	w8, #0x42
   140d8:	mov	w8, #0x2                   	// #2
   140dc:	csel	w0, w8, w9, eq  // eq = none
   140e0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   140e4:	ldrb	w9, [x8]
   140e8:	cmp	w9, #0x76
   140ec:	b.eq	141dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d8>  // b.none
   140f0:	cmp	w9, #0x2e
   140f4:	b.eq	141a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2a4>  // b.none
   140f8:	cmp	w9, #0x23
   140fc:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   14100:	ldrb	w8, [x8, #1]
   14104:	sub	w8, w8, #0x30
   14108:	cmp	w8, #0x9
   1410c:	b.cs	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.hs, b.nlast
   14110:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14114:	sxtb	x8, w8
   14118:	add	x9, x9, #0x0
   1411c:	ldr	w0, [x9, x8, lsl #2]
   14120:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14124:	cmp	w8, #0x21
   14128:	b.eq	14208 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x304>  // b.none
   1412c:	cmp	w8, #0x2e
   14130:	b.eq	14210 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x30c>  // b.none
   14134:	cmp	w8, #0x2f
   14138:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   1413c:	mov	w0, #0x3c                  	// #60
   14140:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14144:	ldrb	w9, [x8, #1]
   14148:	sub	w9, w9, #0x31
   1414c:	cmp	w9, #0x7
   14150:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   14154:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   14158:	add	x10, x10, #0x0
   1415c:	adr	x11, 1416c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x268>
   14160:	ldrb	w12, [x10, x9]
   14164:	add	x11, x11, x12, lsl #2
   14168:	br	x11
   1416c:	ldrb	w8, [x8, #2]
   14170:	cmp	w8, #0x63
   14174:	b.gt	14460 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55c>
   14178:	cmp	w8, #0x44
   1417c:	b.eq	1980c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5908>  // b.none
   14180:	cmp	w8, #0x51
   14184:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   14188:	mov	w0, #0x4                   	// #4
   1418c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14190:	ldurh	w8, [x8, #1]
   14194:	mov	w9, #0x6c75                	// #27765
   14198:	cmp	w8, w9
   1419c:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   141a0:	mov	w0, #0x40                  	// #64
   141a4:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   141a8:	ldrb	w8, [x8, #1]
   141ac:	sub	w8, w8, #0x30
   141b0:	cmp	w8, #0x43
   141b4:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   141b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   141bc:	add	x9, x9, #0x0
   141c0:	adr	x10, 141d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d0>
   141c4:	ldrb	w11, [x9, x8]
   141c8:	add	x10, x10, x11, lsl #2
   141cc:	mov	w0, #0x2b                  	// #43
   141d0:	br	x10
   141d4:	mov	w0, #0xd                   	// #13
   141d8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   141dc:	ldrb	w8, [x8, #1]
   141e0:	cmp	w8, #0x6c
   141e4:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   141e8:	mov	w0, #0x41                  	// #65
   141ec:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   141f0:	mov	w0, #0x3f                  	// #63
   141f4:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   141f8:	mov	w0, #0x42                  	// #66
   141fc:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14200:	mov	w0, #0x3e                  	// #62
   14204:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14208:	mov	w0, #0x12                  	// #18
   1420c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14210:	mov	w0, #0x2a                  	// #42
   14214:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14218:	ldrb	w8, [x8, #2]
   1421c:	sub	w8, w8, #0x42
   14220:	cmp	w8, #0x31
   14224:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   14228:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1422c:	add	x9, x9, #0x0
   14230:	adr	x10, 14244 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x340>
   14234:	ldrh	w11, [x9, x8, lsl #1]
   14238:	add	x10, x10, x11, lsl #2
   1423c:	mov	w0, #0x8                   	// #8
   14240:	br	x10
   14244:	mov	w0, #0x9                   	// #9
   14248:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   1424c:	ldrb	w8, [x8, #2]
   14250:	sub	w8, w8, #0x44
   14254:	cmp	w8, #0x2f
   14258:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   1425c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14260:	add	x9, x9, #0x0
   14264:	adr	x10, 14278 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x374>
   14268:	ldrh	w11, [x9, x8, lsl #1]
   1426c:	add	x10, x10, x11, lsl #2
   14270:	mov	w0, #0x5                   	// #5
   14274:	br	x10
   14278:	mov	w0, #0x6                   	// #6
   1427c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14280:	ldrb	w8, [x8, #2]
   14284:	sub	w8, w8, #0x42
   14288:	cmp	w8, #0x26
   1428c:	b.hi	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.pmore
   14290:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14294:	add	x9, x9, #0x0
   14298:	adr	x10, 142ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a8>
   1429c:	ldrh	w11, [x9, x8, lsl #1]
   142a0:	add	x10, x10, x11, lsl #2
   142a4:	mov	w0, #0xb                   	// #11
   142a8:	br	x10
   142ac:	mov	w0, #0xc                   	// #12
   142b0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   142b4:	ldrb	w8, [x8, #2]
   142b8:	sub	w8, w8, #0x30
   142bc:	cmp	w8, #0x3
   142c0:	b.cs	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.hs, b.nlast
   142c4:	and	w8, w8, #0xff
   142c8:	add	w0, w8, #0x21
   142cc:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   142d0:	ldrb	w8, [x8, #2]
   142d4:	sub	w8, w8, #0x34
   142d8:	cmp	w8, #0x6
   142dc:	b.cs	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.hs, b.nlast
   142e0:	and	w8, w8, #0xff
   142e4:	add	w0, w8, #0x1a
   142e8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   142ec:	ldrb	w8, [x8, #2]
   142f0:	cmp	w8, #0x38
   142f4:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   142f8:	mov	w0, #0x25                  	// #37
   142fc:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14300:	ldrb	w8, [x8, #2]
   14304:	cmp	w8, #0x34
   14308:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   1430c:	mov	w0, #0x27                  	// #39
   14310:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14314:	ldr	w8, [x19, #48]
   14318:	cmp	w8, #0x9
   1431c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   14320:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14324:	ldr	x8, [x19]
   14328:	mov	x0, x19
   1432c:	ldr	x8, [x8, #40]
   14330:	blr	x8
   14334:	tbz	w0, #0, 14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>
   14338:	ldr	w8, [x19, #48]
   1433c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14340:	ldr	x8, [x19, #72]
   14344:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14348:	ldr	w9, [x8]
   1434c:	cmp	w9, #0x1
   14350:	b.ne	14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>  // b.any
   14354:	ldr	x8, [x8, #16]
   14358:	mov	w19, #0x91                  	// #145
   1435c:	cmp	x8, #0x10, lsl #12
   14360:	b.cc	14374 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x470>  // b.lo, b.ul, b.last
   14364:	add	x9, x8, #0x8, lsl #12
   14368:	lsr	x9, x9, #16
   1436c:	mov	w21, #0x91                  	// #145
   14370:	cbnz	x9, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14374:	and	x0, x8, #0xffff
   14378:	add	x2, sp, #0x10
   1437c:	mov	w1, #0x10                  	// #16
   14380:	b	14444 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x540>
   14384:	ldr	x8, [x19]
   14388:	mov	x0, x19
   1438c:	ldr	x8, [x8, #40]
   14390:	blr	x8
   14394:	tbz	w0, #0, 14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>
   14398:	ldr	w8, [x19, #48]
   1439c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   143a0:	ldr	x8, [x19, #72]
   143a4:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   143a8:	ldr	w9, [x8]
   143ac:	cmp	w9, #0x1
   143b0:	b.ne	14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>  // b.any
   143b4:	ldr	x8, [x8, #16]
   143b8:	mov	w19, #0x91                  	// #145
   143bc:	lsr	x9, x8, #32
   143c0:	cbz	x9, 143d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d4>
   143c4:	mov	w9, #0x80000000            	// #-2147483648
   143c8:	add	x9, x8, x9
   143cc:	lsr	x9, x9, #32
   143d0:	mov	w21, #0x91                  	// #145
   143d4:	cbnz	x9, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   143d8:	and	x0, x8, #0xffffffff
   143dc:	add	x2, sp, #0x10
   143e0:	mov	w1, #0x20                  	// #32
   143e4:	b	14444 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x540>
   143e8:	ldr	x8, [x19]
   143ec:	mov	x0, x19
   143f0:	ldr	x8, [x8, #40]
   143f4:	blr	x8
   143f8:	tbz	w0, #0, 14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>
   143fc:	ldr	w8, [x19, #48]
   14400:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14404:	ldr	x8, [x19, #72]
   14408:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1440c:	ldr	w9, [x8]
   14410:	cmp	w9, #0x1
   14414:	b.ne	14458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x554>  // b.any
   14418:	ldr	x8, [x8, #16]
   1441c:	mov	w19, #0x91                  	// #145
   14420:	cmp	x8, #0x100
   14424:	b.cc	14438 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x534>  // b.lo, b.ul, b.last
   14428:	add	x9, x8, #0x80
   1442c:	cmp	x9, #0xff
   14430:	mov	w21, #0x91                  	// #145
   14434:	b.hi	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.pmore
   14438:	and	x0, x8, #0xff
   1443c:	add	x2, sp, #0x10
   14440:	mov	w1, #0x8                   	// #8
   14444:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   14448:	tst	w0, #0x1
   1444c:	mov	w8, #0x4                   	// #4
   14450:	csel	w21, w8, w19, ne  // ne = any
   14454:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14458:	mov	w21, #0x91                  	// #145
   1445c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14460:	cmp	w8, #0x64
   14464:	b.eq	19814 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5910>  // b.none
   14468:	cmp	w8, #0x71
   1446c:	b.ne	14478 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x574>  // b.any
   14470:	mov	w0, #0x2e                  	// #46
   14474:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   14478:	mov	w0, wzr
   1447c:	mov	w1, w20
   14480:	bl	136c8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   14484:	tst	w0, #0x1
   14488:	mov	w8, #0x4                   	// #4
   1448c:	csel	w21, w8, wzr, ne  // ne = any
   14490:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14494:	mov	w0, #0x3b                  	// #59
   14498:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   1449c:	mov	w0, #0x10                  	// #16
   144a0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144a4:	mov	w0, #0x11                  	// #17
   144a8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144ac:	mov	w0, #0xf                   	// #15
   144b0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144b4:	mov	w0, #0xe                   	// #14
   144b8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144bc:	mov	w0, #0x37                  	// #55
   144c0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144c4:	mov	w0, #0x38                  	// #56
   144c8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144cc:	mov	w0, #0x3a                  	// #58
   144d0:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144d4:	mov	w0, #0x39                  	// #57
   144d8:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   144dc:	ldr	x8, [x19]
   144e0:	mov	x0, x19
   144e4:	ldr	x8, [x8, #40]
   144e8:	blr	x8
   144ec:	tbz	w0, #0, 1776c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3868>
   144f0:	ldr	w8, [x19, #48]
   144f4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   144f8:	ldr	x8, [x19, #72]
   144fc:	cbnz	x8, 1773c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3838>
   14500:	b	1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14504:	ldr	w8, [x19, #48]
   14508:	cmp	w8, #0x3
   1450c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14510:	ldr	w8, [x19, #76]
   14514:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14518:	ldr	x8, [x19]
   1451c:	mov	x0, x19
   14520:	ldr	x8, [x8, #56]
   14524:	blr	x8
   14528:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1452c:	ldr	x8, [x8]
   14530:	mov	w9, w0
   14534:	lsr	x9, x9, #3
   14538:	ldrh	w10, [x8, #630]
   1453c:	cmp	w9, w10
   14540:	b.cs	1a358 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6454>  // b.hs, b.nlast
   14544:	ldr	x8, [x8, #616]
   14548:	ldrb	w8, [x8, x9]
   1454c:	and	w9, w0, #0x7
   14550:	lsr	w8, w8, w9
   14554:	tbz	w8, #0, 1a358 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6454>
   14558:	ldr	w9, [x19, #48]
   1455c:	add	x8, x19, #0x48
   14560:	cmp	w9, #0x3
   14564:	b.eq	19cc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dc4>  // b.none
   14568:	cmp	w9, #0xa
   1456c:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   14570:	mov	x10, x8
   14574:	b	19ccc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dc8>
   14578:	ldr	w8, [x19, #48]
   1457c:	cmp	w8, #0xb
   14580:	b.ne	19824 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5920>  // b.any
   14584:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   14588:	ldr	x8, [x19, #72]
   1458c:	mov	w9, #0x40                  	// #64
   14590:	add	x10, sp, #0x10
   14594:	mov	x21, x0
   14598:	str	w9, [sp, #8]
   1459c:	str	x8, [sp]
   145a0:	add	x19, x10, #0x8
   145a4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   145a8:	mov	x20, x0
   145ac:	mov	x2, sp
   145b0:	cmp	x0, x21
   145b4:	b.eq	19a70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b6c>  // b.none
   145b8:	mov	x0, x19
   145bc:	mov	x1, x21
   145c0:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   145c4:	b	19a7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b78>
   145c8:	ldr	w8, [x19, #48]
   145cc:	mov	w21, #0x93                  	// #147
   145d0:	cmp	w8, #0x7
   145d4:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   145d8:	ldr	w8, [x19, #88]
   145dc:	b	14970 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa6c>
   145e0:	ldr	w8, [x19, #48]
   145e4:	cmp	w8, #0x3
   145e8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   145ec:	ldr	w8, [x19, #76]
   145f0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   145f4:	ldr	x8, [x19]
   145f8:	mov	x0, x19
   145fc:	ldr	x8, [x8, #56]
   14600:	blr	x8
   14604:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14608:	ldr	x8, [x8]
   1460c:	mov	w9, w0
   14610:	lsr	x9, x9, #3
   14614:	ldrh	w10, [x8, #566]
   14618:	cmp	w9, w10
   1461c:	b.cs	1a370 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x646c>  // b.hs, b.nlast
   14620:	ldr	x8, [x8, #552]
   14624:	ldrb	w8, [x8, x9]
   14628:	and	w9, w0, #0x7
   1462c:	lsr	w8, w8, w9
   14630:	tbz	w8, #0, 1a370 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x646c>
   14634:	ldr	w9, [x19, #48]
   14638:	add	x8, x19, #0x48
   1463c:	cmp	w9, #0x3
   14640:	b.eq	19cec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5de8>  // b.none
   14644:	cmp	w9, #0xa
   14648:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   1464c:	mov	x10, x8
   14650:	b	19cf0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dec>
   14654:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   14658:	add	x8, x8, #0x0
   1465c:	b	146a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7a4>
   14660:	ldr	x8, [x19]
   14664:	mov	x0, x19
   14668:	ldr	x8, [x8, #40]
   1466c:	blr	x8
   14670:	tbz	w0, #0, 1982c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5928>
   14674:	ldr	w8, [x19, #48]
   14678:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1467c:	ldr	x8, [x19, #72]
   14680:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14684:	ldr	w9, [x8]
   14688:	mov	w21, #0x19                  	// #25
   1468c:	cmp	w9, #0x1
   14690:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14694:	ldr	x8, [x8, #16]
   14698:	cmp	x8, #0x80
   1469c:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   146a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   146a4:	add	x8, x8, #0x0
   146a8:	ldp	q0, q1, [x8]
   146ac:	ldr	x8, [x8, #32]
   146b0:	add	x1, sp, #0x10
   146b4:	mov	w2, #0xa                   	// #10
   146b8:	mov	x0, x19
   146bc:	stp	q0, q1, [sp, #16]
   146c0:	str	x8, [sp, #48]
   146c4:	bl	1d700 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>
   146c8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   146cc:	b	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   146d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   146d4:	ldr	d0, [x8]
   146d8:	add	x1, sp, #0x10
   146dc:	mov	w2, #0x2                   	// #2
   146e0:	mov	x0, x19
   146e4:	str	d0, [sp, #16]
   146e8:	bl	1d700 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>
   146ec:	tbnz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   146f0:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   146f4:	ldr	x8, [x19]
   146f8:	mov	x0, x19
   146fc:	ldr	x8, [x8, #40]
   14700:	blr	x8
   14704:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14708:	ldr	w8, [x19, #48]
   1470c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14710:	ldr	x8, [x19, #72]
   14714:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14718:	ldr	w9, [x8]
   1471c:	cmp	w9, #0x1
   14720:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14724:	ldr	x8, [x8, #16]
   14728:	mov	w9, #0x1ff9                	// #8185
   1472c:	mov	w10, #0x3e                  	// #62
   14730:	add	x11, x8, #0x1, lsl #12
   14734:	b	154f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x15f0>
   14738:	ldr	w8, [x19, #48]
   1473c:	cmp	w8, #0x3
   14740:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14744:	ldr	w8, [x19, #76]
   14748:	cmp	w8, #0x3
   1474c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14750:	ldr	x8, [x19]
   14754:	mov	x0, x19
   14758:	ldr	x8, [x8, #56]
   1475c:	blr	x8
   14760:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14764:	ldr	x8, [x8]
   14768:	mov	w9, w0
   1476c:	lsr	x9, x9, #3
   14770:	ldrh	w10, [x8, #118]
   14774:	cmp	w9, w10
   14778:	b.cs	1479c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x898>  // b.hs, b.nlast
   1477c:	ldr	x8, [x8, #104]
   14780:	ldrb	w8, [x8, x9]
   14784:	and	w9, w0, #0x7
   14788:	lsr	w8, w8, w9
   1478c:	tbz	w8, #0, 1479c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x898>
   14790:	ldr	w8, [x19, #80]
   14794:	cmp	w8, #0x10
   14798:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1479c:	mov	w21, #0x66                  	// #102
   147a0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   147a4:	ldr	w8, [x19, #48]
   147a8:	cmp	w8, #0xa
   147ac:	b.ne	19c34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d30>  // b.any
   147b0:	ldr	w8, [x19, #72]
   147b4:	sub	w9, w8, #0x5
   147b8:	cmp	w9, #0x8
   147bc:	b.cs	19c30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d2c>  // b.hs, b.nlast
   147c0:	ldr	w9, [x19, #76]
   147c4:	cmp	w9, #0x4
   147c8:	b.hi	19c34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d30>  // b.pmore
   147cc:	cmp	w8, #0xb
   147d0:	mov	w21, #0x47                  	// #71
   147d4:	b.eq	19418 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5514>  // b.none
   147d8:	cmp	w8, #0x7
   147dc:	b.eq	19418 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5514>  // b.none
   147e0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   147e4:	ldr	x8, [x19]
   147e8:	mov	x0, x19
   147ec:	ldr	x8, [x8, #40]
   147f0:	blr	x8
   147f4:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   147f8:	ldr	w8, [x19, #48]
   147fc:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14800:	ldr	x8, [x19, #72]
   14804:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14808:	ldr	w9, [x8]
   1480c:	cmp	w9, #0x1
   14810:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14814:	ldr	x8, [x8, #16]
   14818:	mov	x9, #0xff00000000000000    	// #-72057594037927936
   1481c:	add	x9, x8, x9
   14820:	lsr	x9, x9, #57
   14824:	cmp	x9, #0x7f
   14828:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   1482c:	and	x9, x8, #0xff000000000000
   14830:	mov	x10, #0xff000000000000      	// #71776119061217280
   14834:	cmp	x9, x10
   14838:	b.eq	14840 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x93c>  // b.none
   1483c:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14840:	and	x9, x8, #0xff0000000000
   14844:	mov	x10, #0xff0000000000        	// #280375465082880
   14848:	cmp	x9, x10
   1484c:	b.eq	14854 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x950>  // b.none
   14850:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14854:	and	x9, x8, #0xff00000000
   14858:	mov	x10, #0xff00000000          	// #1095216660480
   1485c:	cmp	x9, x10
   14860:	b.eq	14868 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x964>  // b.none
   14864:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14868:	ands	w9, w8, #0xff000000
   1486c:	b.eq	1487c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x978>  // b.none
   14870:	mov	w10, #0xff000000            	// #-16777216
   14874:	cmp	w9, w10
   14878:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1487c:	and	x9, x8, #0xff0000
   14880:	cmp	x9, #0xff0, lsl #12
   14884:	b.eq	1488c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x988>  // b.none
   14888:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1488c:	and	w9, w8, #0xff00
   14890:	mov	w10, #0xff00                	// #65280
   14894:	cmp	w9, w10
   14898:	b.eq	148a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x99c>  // b.none
   1489c:	cbnz	w9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   148a0:	ands	w8, w8, #0xff
   148a4:	mov	w21, #0x4                   	// #4
   148a8:	b.eq	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.none
   148ac:	cmp	w8, #0xff
   148b0:	b.eq	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.none
   148b4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   148b8:	ldr	x8, [x19]
   148bc:	mov	x0, x19
   148c0:	ldr	x8, [x8, #40]
   148c4:	blr	x8
   148c8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   148cc:	ldr	w8, [x19, #48]
   148d0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   148d4:	ldr	x8, [x19, #72]
   148d8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   148dc:	ldr	w9, [x8]
   148e0:	cmp	w9, #0x1
   148e4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   148e8:	ldr	x8, [x8, #16]
   148ec:	mov	w9, #0x30                  	// #48
   148f0:	add	x8, x8, #0x8
   148f4:	cmp	x8, #0x10
   148f8:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   148fc:	ldr	w8, [x19, #48]
   14900:	cmp	w8, #0x5
   14904:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14908:	ldr	w8, [x19, #72]
   1490c:	mov	w9, #0x5d                  	// #93
   14910:	cmp	w8, #0x10
   14914:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   14918:	ldr	x8, [x19]
   1491c:	mov	x0, x19
   14920:	ldr	x8, [x8, #40]
   14924:	blr	x8
   14928:	tbz	w0, #0, 19834 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5930>
   1492c:	ldr	w8, [x19, #48]
   14930:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14934:	ldr	x8, [x19, #72]
   14938:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1493c:	ldr	w9, [x8]
   14940:	mov	w21, #0x23                  	// #35
   14944:	cmp	w9, #0x1
   14948:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   1494c:	ldr	x8, [x8, #16]
   14950:	sub	x8, x8, #0x1
   14954:	cmp	x8, #0x8
   14958:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   1495c:	ldr	w8, [x19, #48]
   14960:	mov	w21, #0x92                  	// #146
   14964:	cmp	w8, #0x7
   14968:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   1496c:	ldr	w8, [x19, #84]
   14970:	cmn	w8, #0x1
   14974:	mov	w8, #0x4                   	// #4
   14978:	csel	w21, w21, w8, eq  // eq = none
   1497c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14980:	ldr	x8, [x19]
   14984:	mov	x0, x19
   14988:	ldr	x8, [x8, #40]
   1498c:	blr	x8
   14990:	tbz	w0, #0, 1983c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5938>
   14994:	ldr	w8, [x19, #48]
   14998:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1499c:	ldr	x8, [x19, #72]
   149a0:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   149a4:	ldr	w9, [x8]
   149a8:	mov	w21, #0x1a                  	// #26
   149ac:	cmp	w9, #0x1
   149b0:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   149b4:	ldr	x8, [x8, #16]
   149b8:	b	19620 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x571c>
   149bc:	ldr	w8, [x19, #48]
   149c0:	cmp	w8, #0xa
   149c4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   149c8:	ldr	w8, [x19, #72]
   149cc:	cmp	w8, #0x4
   149d0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   149d4:	ldr	w8, [x19, #76]
   149d8:	mov	w21, #0x4                   	// #4
   149dc:	cmp	w8, #0x8
   149e0:	b.eq	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.none
   149e4:	cmp	w8, #0x10
   149e8:	b.eq	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.none
   149ec:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   149f0:	ldr	x8, [x19]
   149f4:	mov	x0, x19
   149f8:	ldr	x8, [x8, #40]
   149fc:	blr	x8
   14a00:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14a04:	ldr	w8, [x19, #48]
   14a08:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14a0c:	ldr	x8, [x19, #72]
   14a10:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14a14:	ldr	w9, [x8]
   14a18:	cmp	w9, #0x1
   14a1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14a20:	ldr	x8, [x8, #16]
   14a24:	add	x8, x8, #0x100
   14a28:	cmp	x8, #0x1ff
   14a2c:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   14a30:	ldr	x8, [x19]
   14a34:	mov	x0, x19
   14a38:	ldr	x8, [x8, #40]
   14a3c:	blr	x8
   14a40:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   14a44:	ldr	w8, [x19, #48]
   14a48:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14a4c:	ldr	x0, [x19, #72]
   14a50:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14a54:	ldr	w8, [x0]
   14a58:	cmp	w8, #0x1
   14a5c:	b.ne	19b00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bfc>  // b.any
   14a60:	ldr	x8, [x0, #16]
   14a64:	mov	w21, #0x4                   	// #4
   14a68:	cmp	x8, #0x10, lsl #12
   14a6c:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   14a70:	and	x8, x8, #0x800000000000000f
   14a74:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14a78:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14a7c:	ldr	x8, [x19]
   14a80:	mov	x0, x19
   14a84:	ldr	x8, [x8, #40]
   14a88:	blr	x8
   14a8c:	tbz	w0, #0, 19844 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5940>
   14a90:	ldr	w8, [x19, #48]
   14a94:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14a98:	ldr	x8, [x19, #72]
   14a9c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14aa0:	ldr	w9, [x8]
   14aa4:	mov	w21, #0x21                  	// #33
   14aa8:	cmp	w9, #0x1
   14aac:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14ab0:	ldr	x8, [x8, #16]
   14ab4:	sub	x8, x8, #0x1
   14ab8:	cmp	x8, #0x20
   14abc:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   14ac0:	ldr	x8, [x19]
   14ac4:	mov	x0, x19
   14ac8:	ldr	x8, [x8, #40]
   14acc:	blr	x8
   14ad0:	tbz	w0, #0, 1984c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5948>
   14ad4:	ldr	w8, [x19, #48]
   14ad8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14adc:	ldr	x8, [x19, #72]
   14ae0:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14ae4:	ldr	w10, [x8]
   14ae8:	mov	w9, #0x44                  	// #68
   14aec:	mov	w21, #0x44                  	// #68
   14af0:	cmp	w10, #0x1
   14af4:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14af8:	ldr	x8, [x8, #16]
   14afc:	cmp	x8, w8, sxtb
   14b00:	b	18558 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4654>
   14b04:	ldr	x8, [x19]
   14b08:	mov	x0, x19
   14b0c:	ldr	x8, [x8, #40]
   14b10:	blr	x8
   14b14:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14b18:	ldr	w8, [x19, #48]
   14b1c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14b20:	ldr	x8, [x19, #72]
   14b24:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14b28:	ldr	w9, [x8]
   14b2c:	cmp	w9, #0x1
   14b30:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14b34:	ldr	x8, [x8, #16]
   14b38:	add	x8, x8, #0x100
   14b3c:	cmp	x8, #0x1ff
   14b40:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   14b44:	ldr	x8, [x19]
   14b48:	mov	x0, x19
   14b4c:	ldr	x8, [x8, #40]
   14b50:	blr	x8
   14b54:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   14b58:	ldr	w8, [x19, #48]
   14b5c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14b60:	ldr	x0, [x19, #72]
   14b64:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14b68:	ldr	w8, [x0]
   14b6c:	cmp	w8, #0x1
   14b70:	b.ne	19b00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bfc>  // b.any
   14b74:	ldr	x8, [x0, #16]
   14b78:	mov	w21, #0x4                   	// #4
   14b7c:	cmp	x8, #0x4, lsl #12
   14b80:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   14b84:	and	x8, x8, #0x8000000000000003
   14b88:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14b8c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14b90:	ldr	w8, [x19, #48]
   14b94:	cmp	w8, #0x1
   14b98:	b.eq	14bb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xcac>  // b.none
   14b9c:	ldr	x8, [x19]
   14ba0:	mov	x0, x19
   14ba4:	ldr	x8, [x8, #40]
   14ba8:	blr	x8
   14bac:	tbz	w0, #0, 19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>
   14bb0:	add	x8, sp, #0x10
   14bb4:	mov	x0, x19
   14bb8:	bl	1d228 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   14bbc:	ldrb	w8, [sp, #32]
   14bc0:	cbz	w8, 19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>
   14bc4:	ldr	x8, [sp, #16]
   14bc8:	mov	w9, #0xb                   	// #11
   14bcc:	cmn	x8, #0x1, lsl #12
   14bd0:	mov	w8, #0x4                   	// #4
   14bd4:	csel	w21, w8, w9, hi  // hi = pmore
   14bd8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14bdc:	ldr	x8, [x19]
   14be0:	mov	x0, x19
   14be4:	ldr	x8, [x8, #40]
   14be8:	blr	x8
   14bec:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14bf0:	ldr	w8, [x19, #48]
   14bf4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14bf8:	ldr	x8, [x19, #72]
   14bfc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14c00:	ldr	w9, [x8]
   14c04:	cmp	w9, #0x1
   14c08:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14c0c:	ldr	x8, [x8, #16]
   14c10:	mov	w9, #0xf9                  	// #249
   14c14:	mov	w10, #0x40                  	// #64
   14c18:	b	15204 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1300>
   14c1c:	ldr	w8, [x19, #48]
   14c20:	cmp	w8, #0x1
   14c24:	b.ne	19854 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5950>  // b.any
   14c28:	add	x8, sp, #0x10
   14c2c:	mov	x0, x19
   14c30:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   14c34:	ldrb	w8, [sp, #32]
   14c38:	cbz	w8, 14c60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd5c>
   14c3c:	ldr	x8, [sp, #16]
   14c40:	ldr	w9, [sp, #24]
   14c44:	strb	wzr, [sp, #32]
   14c48:	lsl	x8, x8, x9
   14c4c:	cmp	x8, #0x100
   14c50:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   14c54:	and	x9, x8, #0xff00
   14c58:	cmp	x9, x8
   14c5c:	b.eq	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.none
   14c60:	mov	w21, #0x52                  	// #82
   14c64:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14c68:	ldr	x8, [x19]
   14c6c:	mov	x0, x19
   14c70:	ldr	x8, [x8, #40]
   14c74:	blr	x8
   14c78:	tbz	w0, #0, 191f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52f4>
   14c7c:	ldr	w8, [x19, #48]
   14c80:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14c84:	ldr	x8, [x19, #72]
   14c88:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14c8c:	ldr	w9, [x8]
   14c90:	mov	w21, #0x1d                  	// #29
   14c94:	cmp	w9, #0x1
   14c98:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14c9c:	ldr	x8, [x8, #16]
   14ca0:	b	19798 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5894>
   14ca4:	ldr	w8, [x19, #48]
   14ca8:	cmp	w8, #0x5
   14cac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14cb0:	ldr	w8, [x19, #72]
   14cb4:	mov	w9, #0x5f                  	// #95
   14cb8:	cmp	w8, #0x20
   14cbc:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   14cc0:	ldr	w8, [x19, #48]
   14cc4:	cmp	w8, #0xa
   14cc8:	b.ne	19c40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d3c>  // b.any
   14ccc:	ldr	w8, [x19, #72]
   14cd0:	sub	w9, w8, #0x5
   14cd4:	cmp	w9, #0x8
   14cd8:	b.cs	19c3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d38>  // b.hs, b.nlast
   14cdc:	ldr	w9, [x19, #76]
   14ce0:	cmp	w9, #0x4
   14ce4:	b.hi	19c40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d3c>  // b.pmore
   14ce8:	cmp	w8, #0xb
   14cec:	mov	w21, #0x46                  	// #70
   14cf0:	b.eq	1911c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5218>  // b.none
   14cf4:	cmp	w8, #0x7
   14cf8:	b.eq	1911c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5218>  // b.none
   14cfc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14d00:	ldr	x8, [x19]
   14d04:	mov	x0, x19
   14d08:	ldr	x8, [x8, #40]
   14d0c:	blr	x8
   14d10:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14d14:	ldr	w8, [x19, #48]
   14d18:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14d1c:	ldr	x8, [x19, #72]
   14d20:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14d24:	ldr	w9, [x8]
   14d28:	cmp	w9, #0x1
   14d2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d30:	ldr	x8, [x8, #16]
   14d34:	cmp	x8, #0x20
   14d38:	b.cc	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.lo, b.ul, b.last
   14d3c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14d40:	ldr	w8, [x19, #48]
   14d44:	cmp	w8, #0x4
   14d48:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d4c:	ldr	w8, [x19, #76]
   14d50:	cmp	w8, #0x3
   14d54:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d58:	ldr	w8, [x19, #80]
   14d5c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14d60:	b	1822c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4328>
   14d64:	ldr	w8, [x19, #48]
   14d68:	cmp	w8, #0x4
   14d6c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d70:	ldr	w8, [x19, #76]
   14d74:	cmp	w8, #0x3
   14d78:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d7c:	ldr	w8, [x19, #88]
   14d80:	cmp	w8, #0x1
   14d84:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d88:	ldr	w8, [x19, #84]
   14d8c:	cmp	w8, #0x8
   14d90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14d94:	b	1804c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4148>
   14d98:	ldr	x8, [x19]
   14d9c:	mov	x0, x19
   14da0:	ldr	x8, [x8, #40]
   14da4:	blr	x8
   14da8:	tbz	w0, #0, 19888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5984>
   14dac:	ldr	w8, [x19, #48]
   14db0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14db4:	ldr	x8, [x19, #72]
   14db8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14dbc:	ldr	w9, [x8]
   14dc0:	mov	w21, #0x1b                  	// #27
   14dc4:	cmp	w9, #0x1
   14dc8:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14dcc:	ldr	x8, [x8, #16]
   14dd0:	cmp	x8, #0x100
   14dd4:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   14dd8:	ldr	w8, [x19, #48]
   14ddc:	cmp	w8, #0xa
   14de0:	b.ne	19890 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>  // b.any
   14de4:	ldr	w9, [x19, #72]
   14de8:	mov	w8, #0x51                  	// #81
   14dec:	mov	w21, #0x51                  	// #81
   14df0:	cbnz	w9, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14df4:	ldr	w9, [x19, #76]
   14df8:	ror	w9, w9, #4
   14dfc:	cmp	w9, #0x4
   14e00:	b	18f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5008>
   14e04:	ldr	w8, [x19, #48]
   14e08:	cmp	w8, #0x4
   14e0c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e10:	ldr	w8, [x19, #76]
   14e14:	cmp	w8, #0x4
   14e18:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e1c:	ldr	w8, [x19, #88]
   14e20:	cmp	w8, #0x1
   14e24:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e28:	ldr	w8, [x19, #84]
   14e2c:	cmp	w8, #0x40
   14e30:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e34:	ldr	w8, [x19, #80]
   14e38:	cmp	w8, #0x1
   14e3c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   14e40:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14e44:	ldr	w8, [x19, #48]
   14e48:	cmp	w8, #0x4
   14e4c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e50:	ldr	w8, [x19, #76]
   14e54:	cmp	w8, #0x1
   14e58:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e5c:	ldr	w8, [x19, #88]
   14e60:	cmp	w8, #0x1
   14e64:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e68:	ldr	w8, [x19, #84]
   14e6c:	cmp	w8, #0x20
   14e70:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14e74:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   14e78:	ldr	w8, [x19, #48]
   14e7c:	cmp	w8, #0xa
   14e80:	b.ne	19c4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d48>  // b.any
   14e84:	ldr	w8, [x19, #72]
   14e88:	sub	w9, w8, #0x5
   14e8c:	cmp	w9, #0x8
   14e90:	b.cs	19c48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d44>  // b.hs, b.nlast
   14e94:	ldr	w9, [x19, #76]
   14e98:	cmp	w9, #0x4
   14e9c:	b.hi	19c4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d48>  // b.pmore
   14ea0:	cmp	w8, #0xb
   14ea4:	mov	w21, #0x4a                  	// #74
   14ea8:	b.eq	14eb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xfb0>  // b.none
   14eac:	cmp	w8, #0x7
   14eb0:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   14eb4:	cmp	w9, #0x0
   14eb8:	b	191a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x529c>
   14ebc:	ldr	w8, [x19, #48]
   14ec0:	cmp	w8, #0xa
   14ec4:	b.ne	15024 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1120>  // b.any
   14ec8:	ldr	w9, [x19, #72]
   14ecc:	mov	w21, #0xa                   	// #10
   14ed0:	cmp	w9, #0x3
   14ed4:	b.ls	15018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1114>  // b.plast
   14ed8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   14edc:	ldr	x8, [x19]
   14ee0:	mov	x0, x19
   14ee4:	ldr	x8, [x8, #40]
   14ee8:	blr	x8
   14eec:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14ef0:	ldr	w8, [x19, #48]
   14ef4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   14ef8:	ldr	x8, [x19, #72]
   14efc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   14f00:	ldr	w9, [x8]
   14f04:	cmp	w9, #0x1
   14f08:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f0c:	ldr	x8, [x8, #16]
   14f10:	mov	w9, #0xf1                  	// #241
   14f14:	mov	w10, #0x2c                  	// #44
   14f18:	add	x11, x8, #0x80
   14f1c:	tst	x8, #0xf
   14f20:	b	193d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54cc>
   14f24:	ldr	w8, [x19, #48]
   14f28:	cmp	w8, #0xa
   14f2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f30:	ldr	w8, [x19, #72]
   14f34:	cmp	w8, #0x5
   14f38:	b.cc	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.lo, b.ul, b.last
   14f3c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14f40:	ldr	w8, [x19, #48]
   14f44:	cmp	w8, #0x4
   14f48:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f4c:	ldr	w8, [x19, #76]
   14f50:	cmp	w8, #0x4
   14f54:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f58:	ldr	w8, [x19, #88]
   14f5c:	cmp	w8, #0x1
   14f60:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f64:	ldr	w8, [x19, #84]
   14f68:	cmp	w8, #0x8
   14f6c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f70:	b	162fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23f8>
   14f74:	ldr	w8, [x19, #48]
   14f78:	cmp	w8, #0x4
   14f7c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f80:	ldr	w8, [x19, #76]
   14f84:	cmp	w8, #0x4
   14f88:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f8c:	ldr	w8, [x19, #88]
   14f90:	cmp	w8, #0x1
   14f94:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14f98:	ldr	w8, [x19, #84]
   14f9c:	cmp	w8, #0x10
   14fa0:	b.eq	162fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23f8>  // b.none
   14fa4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14fa8:	ldr	w8, [x19, #48]
   14fac:	cmp	w8, #0x4
   14fb0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14fb4:	ldr	w8, [x19, #76]
   14fb8:	cmp	w8, #0x2
   14fbc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14fc0:	ldr	w8, [x19, #80]
   14fc4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14fc8:	ldr	w8, [x19, #88]
   14fcc:	cmp	w8, #0x1
   14fd0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14fd4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   14fd8:	ldr	w8, [x19, #48]
   14fdc:	cmp	w8, #0x4
   14fe0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14fe4:	ldr	w8, [x19, #76]
   14fe8:	cmp	w8, #0x1
   14fec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   14ff0:	ldr	w8, [x19, #80]
   14ff4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   14ff8:	b	1822c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4328>
   14ffc:	ldr	w8, [x19, #48]
   15000:	cmp	w8, #0xa
   15004:	b.ne	15024 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1120>  // b.any
   15008:	ldr	w9, [x19, #72]
   1500c:	mov	w21, #0xa                   	// #10
   15010:	cmp	w9, #0x2
   15014:	b.hi	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.pmore
   15018:	ldr	w9, [x19, #76]
   1501c:	cmp	w9, #0x40
   15020:	b	18f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5008>
   15024:	mov	w21, #0xa                   	// #10
   15028:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1502c:	ldr	w8, [x19, #48]
   15030:	cmp	w8, #0x3
   15034:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15038:	ldr	w8, [x19, #76]
   1503c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15040:	ldr	x8, [x19]
   15044:	mov	x0, x19
   15048:	ldr	x8, [x8, #56]
   1504c:	blr	x8
   15050:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15054:	ldr	x8, [x8]
   15058:	mov	w9, w0
   1505c:	lsr	x9, x9, #3
   15060:	ldrh	w10, [x8, #630]
   15064:	cmp	w9, w10
   15068:	b.cs	1a384 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6480>  // b.hs, b.nlast
   1506c:	ldr	x8, [x8, #616]
   15070:	ldrb	w8, [x8, x9]
   15074:	and	w9, w0, #0x7
   15078:	lsr	w8, w8, w9
   1507c:	tbz	w8, #0, 1a384 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6480>
   15080:	ldr	w9, [x19, #48]
   15084:	add	x8, x19, #0x48
   15088:	cmp	w9, #0x3
   1508c:	b.eq	19d10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e0c>  // b.none
   15090:	cmp	w9, #0xa
   15094:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   15098:	mov	x10, x8
   1509c:	b	19d14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e10>
   150a0:	ldr	w8, [x19, #48]
   150a4:	cmp	w8, #0x4
   150a8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   150ac:	ldr	w8, [x19, #76]
   150b0:	cmp	w8, #0x3
   150b4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   150b8:	ldr	w8, [x19, #88]
   150bc:	cmp	w8, #0x1
   150c0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   150c4:	ldr	w8, [x19, #84]
   150c8:	cmp	w8, #0x10
   150cc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   150d0:	b	1804c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4148>
   150d4:	ldr	x8, [x19]
   150d8:	mov	x0, x19
   150dc:	ldr	x8, [x8, #40]
   150e0:	blr	x8
   150e4:	tbz	w0, #0, 19a28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b24>
   150e8:	ldr	w8, [x19, #48]
   150ec:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   150f0:	ldr	x0, [x19, #72]
   150f4:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   150f8:	ldr	w8, [x0]
   150fc:	cmp	w8, #0x1
   15100:	b.ne	19a20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b1c>  // b.any
   15104:	ldr	x8, [x0, #16]
   15108:	mov	w21, #0x3d                  	// #61
   1510c:	cmp	x8, #0x8, lsl #12
   15110:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   15114:	and	x8, x8, #0x8000000000000007
   15118:	cbz	x8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   1511c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15120:	ldr	w8, [x19, #48]
   15124:	cmp	w8, #0x3
   15128:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1512c:	ldr	w8, [x19, #76]
   15130:	cmp	w8, #0x2
   15134:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15138:	ldr	x8, [x19]
   1513c:	mov	x0, x19
   15140:	ldr	x8, [x8, #56]
   15144:	blr	x8
   15148:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1514c:	ldr	x8, [x8]
   15150:	mov	w9, w0
   15154:	lsr	x9, x9, #3
   15158:	ldrh	w10, [x8, #1270]
   1515c:	cmp	w9, w10
   15160:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15164:	ldr	x8, [x8, #1256]
   15168:	ldrb	w8, [x8, x9]
   1516c:	and	w9, w0, #0x7
   15170:	lsr	w8, w8, w9
   15174:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15178:	ldr	w8, [x19, #80]
   1517c:	cmp	w8, #0x20
   15180:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15184:	ldr	w9, [x19, #48]
   15188:	add	x8, x19, #0x48
   1518c:	cmp	w9, #0x3
   15190:	b.eq	19de8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ee4>  // b.none
   15194:	cmp	w9, #0xa
   15198:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   1519c:	add	x10, x8, #0x4
   151a0:	b	19dec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ee8>
   151a4:	ldr	w8, [x19, #48]
   151a8:	cmp	w8, #0xa
   151ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   151b0:	ldr	w8, [x19, #72]
   151b4:	cmp	w8, #0x4
   151b8:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   151bc:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   151c0:	ldr	w8, [x19, #76]
   151c4:	b	18dd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4ecc>
   151c8:	ldr	x8, [x19]
   151cc:	mov	x0, x19
   151d0:	ldr	x8, [x8, #40]
   151d4:	blr	x8
   151d8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   151dc:	ldr	w8, [x19, #48]
   151e0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   151e4:	ldr	x8, [x19, #72]
   151e8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   151ec:	ldr	w9, [x8]
   151f0:	cmp	w9, #0x1
   151f4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   151f8:	ldr	x8, [x8, #16]
   151fc:	mov	w9, #0x1f9                 	// #505
   15200:	mov	w10, #0x41                  	// #65
   15204:	tst	x8, #0x7
   15208:	ccmp	x8, x9, #0x2, eq  // eq = none
   1520c:	b	193d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54d0>
   15210:	ldr	w8, [x19, #48]
   15214:	cmp	w8, #0x4
   15218:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1521c:	ldr	w8, [x19, #76]
   15220:	cmp	w8, #0x2
   15224:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15228:	ldr	w8, [x19, #88]
   1522c:	cmp	w8, #0x1
   15230:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15234:	ldr	w8, [x19, #84]
   15238:	cmp	w8, #0x8
   1523c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15240:	ldr	w8, [x19, #80]
   15244:	cmp	w8, #0x8
   15248:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1524c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15250:	ldr	w8, [x19, #48]
   15254:	cmp	w8, #0x4
   15258:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1525c:	ldr	w8, [x19, #76]
   15260:	cmp	w8, #0x1
   15264:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15268:	ldr	w8, [x19, #88]
   1526c:	cmp	w8, #0x1
   15270:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15274:	ldr	w8, [x19, #84]
   15278:	cmp	w8, #0x8
   1527c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15280:	b	1804c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4148>
   15284:	ldr	x8, [x19]
   15288:	mov	x0, x19
   1528c:	ldr	x8, [x8, #40]
   15290:	blr	x8
   15294:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15298:	ldr	w8, [x19, #48]
   1529c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   152a0:	ldr	x8, [x19, #72]
   152a4:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   152a8:	ldr	w9, [x8]
   152ac:	cmp	w9, #0x1
   152b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   152b4:	ldr	x8, [x8, #16]
   152b8:	mov	w9, #0x7d                  	// #125
   152bc:	mov	w10, #0x3b                  	// #59
   152c0:	b	15cfc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1df8>
   152c4:	ldr	w8, [x19, #48]
   152c8:	cmp	w8, #0x3
   152cc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   152d0:	ldr	w8, [x19, #76]
   152d4:	cmp	w8, #0x2
   152d8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   152dc:	ldr	x8, [x19]
   152e0:	mov	x0, x19
   152e4:	ldr	x8, [x8, #56]
   152e8:	blr	x8
   152ec:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   152f0:	ldr	x8, [x8]
   152f4:	mov	w9, w0
   152f8:	lsr	x9, x9, #3
   152fc:	ldrh	w10, [x8, #1270]
   15300:	cmp	w9, w10
   15304:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15308:	ldr	x8, [x8, #1256]
   1530c:	ldrb	w8, [x8, x9]
   15310:	and	w9, w0, #0x7
   15314:	lsr	w8, w8, w9
   15318:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1531c:	ldr	w8, [x19, #80]
   15320:	cmp	w8, #0x20
   15324:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15328:	ldr	w9, [x19, #48]
   1532c:	add	x8, x19, #0x48
   15330:	cmp	w9, #0x3
   15334:	b.eq	19e20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f1c>  // b.none
   15338:	cmp	w9, #0xa
   1533c:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   15340:	add	x10, x8, #0x4
   15344:	b	19e24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f20>
   15348:	ldr	w8, [x19, #48]
   1534c:	cmp	w8, #0x3
   15350:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15354:	ldr	w8, [x19, #76]
   15358:	cmp	w8, #0x2
   1535c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15360:	ldr	x8, [x19]
   15364:	mov	x0, x19
   15368:	ldr	x8, [x8, #56]
   1536c:	blr	x8
   15370:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15374:	ldr	x8, [x8]
   15378:	mov	w9, w0
   1537c:	lsr	x9, x9, #3
   15380:	ldrh	w10, [x8, #1270]
   15384:	cmp	w9, w10
   15388:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1538c:	ldr	x8, [x8, #1256]
   15390:	ldrb	w8, [x8, x9]
   15394:	and	w9, w0, #0x7
   15398:	lsr	w8, w8, w9
   1539c:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   153a0:	ldr	w8, [x19, #80]
   153a4:	cmp	w8, #0x20
   153a8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   153ac:	ldr	w9, [x19, #48]
   153b0:	add	x8, x19, #0x48
   153b4:	cmp	w9, #0x3
   153b8:	b.eq	19e58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f54>  // b.none
   153bc:	cmp	w9, #0xa
   153c0:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   153c4:	add	x10, x8, #0x4
   153c8:	b	19e5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f58>
   153cc:	ldr	w8, [x19, #48]
   153d0:	cmp	w8, #0x4
   153d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   153d8:	ldr	w8, [x19, #76]
   153dc:	cmp	w8, #0x2
   153e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   153e4:	ldr	w8, [x19, #88]
   153e8:	cmp	w8, #0x1
   153ec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   153f0:	ldr	w8, [x19, #84]
   153f4:	cmp	w8, #0x40
   153f8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   153fc:	ldr	w8, [x19, #80]
   15400:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15404:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15408:	ldr	w8, [x19, #48]
   1540c:	cmp	w8, #0x3
   15410:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15414:	ldr	w8, [x19, #76]
   15418:	cmp	w8, #0x3
   1541c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15420:	ldr	x8, [x19]
   15424:	mov	x0, x19
   15428:	ldr	x8, [x8, #56]
   1542c:	blr	x8
   15430:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15434:	ldr	x8, [x8]
   15438:	mov	w9, w0
   1543c:	lsr	x9, x9, #3
   15440:	ldrh	w10, [x8, #86]
   15444:	cmp	w9, w10
   15448:	b.cs	1546c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1568>  // b.hs, b.nlast
   1544c:	ldr	x8, [x8, #72]
   15450:	ldrb	w8, [x8, x9]
   15454:	and	w9, w0, #0x7
   15458:	lsr	w8, w8, w9
   1545c:	tbz	w8, #0, 1546c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1568>
   15460:	ldr	w8, [x19, #80]
   15464:	cmp	w8, #0x40
   15468:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1546c:	mov	w21, #0x6a                  	// #106
   15470:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15474:	ldr	x8, [x19]
   15478:	mov	x0, x19
   1547c:	ldr	x8, [x8, #40]
   15480:	blr	x8
   15484:	tbz	w0, #0, 19898 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5994>
   15488:	ldr	w8, [x19, #48]
   1548c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15490:	ldr	x8, [x19, #72]
   15494:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15498:	ldr	w9, [x8]
   1549c:	mov	w21, #0x1c                  	// #28
   154a0:	cmp	w9, #0x1
   154a4:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   154a8:	ldr	x8, [x8, #16]
   154ac:	cmp	x8, #0x20
   154b0:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   154b4:	ldr	x8, [x19]
   154b8:	mov	x0, x19
   154bc:	ldr	x8, [x8, #40]
   154c0:	blr	x8
   154c4:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   154c8:	ldr	w8, [x19, #48]
   154cc:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   154d0:	ldr	x8, [x19, #72]
   154d4:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   154d8:	ldr	w9, [x8]
   154dc:	cmp	w9, #0x1
   154e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   154e4:	ldr	x8, [x8, #16]
   154e8:	mov	w9, #0x3f9                 	// #1017
   154ec:	mov	w10, #0x3f                  	// #63
   154f0:	add	x11, x8, #0x200
   154f4:	tst	x8, #0x7
   154f8:	b	193d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54cc>
   154fc:	ldr	w8, [x19, #48]
   15500:	cmp	w8, #0x4
   15504:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15508:	b	15920 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1a1c>
   1550c:	ldr	x8, [x19]
   15510:	mov	x0, x19
   15514:	ldr	x8, [x8, #40]
   15518:	blr	x8
   1551c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15520:	ldr	w8, [x19, #48]
   15524:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15528:	ldr	x8, [x19, #72]
   1552c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15530:	ldr	w9, [x8]
   15534:	cmp	w9, #0x1
   15538:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1553c:	ldr	x8, [x8, #16]
   15540:	mov	w9, #0x1fd                 	// #509
   15544:	mov	w10, #0x3a                  	// #58
   15548:	add	x11, x8, #0x100
   1554c:	b	193cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54c8>
   15550:	ldr	w8, [x19, #48]
   15554:	cmp	w8, #0x4
   15558:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1555c:	ldr	w8, [x19, #76]
   15560:	cmp	w8, #0x4
   15564:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15568:	ldr	w8, [x19, #88]
   1556c:	cmp	w8, #0x1
   15570:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15574:	ldr	w8, [x19, #84]
   15578:	cmp	w8, #0x40
   1557c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15580:	b	15828 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1924>
   15584:	ldr	x8, [x19]
   15588:	mov	x0, x19
   1558c:	ldr	x8, [x8, #40]
   15590:	blr	x8
   15594:	tbz	w0, #0, 195a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56a0>
   15598:	ldr	x8, [x19, #72]
   1559c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   155a0:	ldr	w9, [x8]
   155a4:	mov	w21, #0x4                   	// #4
   155a8:	cmp	w9, #0x1
   155ac:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   155b0:	ldr	x8, [x8, #16]
   155b4:	add	x8, x8, #0x100, lsl #12
   155b8:	cmp	x8, #0x200, lsl #12
   155bc:	b	178b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x39b0>
   155c0:	ldr	w8, [x19, #48]
   155c4:	cmp	w8, #0x3
   155c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   155cc:	ldr	w8, [x19, #76]
   155d0:	cmp	w8, #0x2
   155d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   155d8:	ldr	x8, [x19]
   155dc:	mov	x0, x19
   155e0:	ldr	x8, [x8, #56]
   155e4:	blr	x8
   155e8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   155ec:	ldr	x8, [x8]
   155f0:	mov	w9, w0
   155f4:	lsr	x9, x9, #3
   155f8:	ldrh	w10, [x8, #1270]
   155fc:	cmp	w9, w10
   15600:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15604:	ldr	x8, [x8, #1256]
   15608:	ldrb	w8, [x8, x9]
   1560c:	and	w9, w0, #0x7
   15610:	lsr	w8, w8, w9
   15614:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15618:	ldr	w8, [x19, #80]
   1561c:	cmp	w8, #0x40
   15620:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15624:	ldr	w9, [x19, #48]
   15628:	add	x8, x19, #0x48
   1562c:	cmp	w9, #0x3
   15630:	b.eq	19e7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f78>  // b.none
   15634:	cmp	w9, #0xa
   15638:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   1563c:	add	x10, x8, #0x4
   15640:	b	19e80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f7c>
   15644:	ldr	w8, [x19, #48]
   15648:	cmp	w8, #0x4
   1564c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15650:	ldr	w8, [x19, #76]
   15654:	cmp	w8, #0x3
   15658:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1565c:	ldr	w8, [x19, #88]
   15660:	cmp	w8, #0x1
   15664:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15668:	ldr	w8, [x19, #84]
   1566c:	cmp	w8, #0x40
   15670:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15674:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   15678:	ldr	w8, [x19, #48]
   1567c:	cmp	w8, #0x3
   15680:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15684:	ldr	w8, [x19, #76]
   15688:	cmp	w8, #0x1
   1568c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15690:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15694:	ldr	w8, [x19, #72]
   15698:	ldr	x9, [x9]
   1569c:	lsr	x10, x8, #3
   156a0:	ldrh	w11, [x9, #1302]
   156a4:	cmp	w10, w11
   156a8:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   156ac:	ldr	x9, [x9, #1288]
   156b0:	and	w8, w8, #0x7
   156b4:	ldrb	w9, [x9, x10]
   156b8:	lsr	w8, w9, w8
   156bc:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   156c0:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   156c4:	ldr	w8, [x19, #48]
   156c8:	cmp	w8, #0x4
   156cc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   156d0:	ldr	w8, [x19, #76]
   156d4:	cmp	w8, #0x2
   156d8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   156dc:	ldr	w8, [x19, #88]
   156e0:	cmp	w8, #0x1
   156e4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   156e8:	ldr	w8, [x19, #84]
   156ec:	cmp	w8, #0x10
   156f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   156f4:	ldr	w8, [x19, #80]
   156f8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   156fc:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15700:	ldr	w8, [x19, #48]
   15704:	cmp	w8, #0x3
   15708:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1570c:	ldr	w8, [x19, #76]
   15710:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15714:	ldr	x8, [x19]
   15718:	mov	x0, x19
   1571c:	ldr	x8, [x8, #56]
   15720:	blr	x8
   15724:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15728:	ldr	x8, [x8]
   1572c:	mov	w9, w0
   15730:	lsr	x9, x9, #3
   15734:	ldrh	w10, [x8, #566]
   15738:	cmp	w9, w10
   1573c:	b.cs	1a398 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6494>  // b.hs, b.nlast
   15740:	ldr	x8, [x8, #552]
   15744:	ldrb	w8, [x8, x9]
   15748:	and	w9, w0, #0x7
   1574c:	lsr	w8, w8, w9
   15750:	tbz	w8, #0, 1a398 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6494>
   15754:	ldr	w9, [x19, #48]
   15758:	add	x8, x19, #0x48
   1575c:	cmp	w9, #0x3
   15760:	b.eq	19d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e30>  // b.none
   15764:	cmp	w9, #0xa
   15768:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   1576c:	mov	x10, x8
   15770:	b	19d38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e34>
   15774:	ldr	w8, [x19, #48]
   15778:	cmp	w8, #0x3
   1577c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15780:	ldr	w8, [x19, #76]
   15784:	cmp	w8, #0x2
   15788:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1578c:	ldr	x8, [x19]
   15790:	mov	x0, x19
   15794:	ldr	x8, [x8, #56]
   15798:	blr	x8
   1579c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   157a0:	ldr	x8, [x8]
   157a4:	mov	w9, w0
   157a8:	lsr	x9, x9, #3
   157ac:	ldrh	w10, [x8, #1270]
   157b0:	cmp	w9, w10
   157b4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   157b8:	ldr	x8, [x8, #1256]
   157bc:	ldrb	w8, [x8, x9]
   157c0:	and	w9, w0, #0x7
   157c4:	lsr	w8, w8, w9
   157c8:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   157cc:	ldr	w8, [x19, #80]
   157d0:	cmp	w8, #0x40
   157d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   157d8:	ldr	w9, [x19, #48]
   157dc:	add	x8, x19, #0x48
   157e0:	cmp	w9, #0x3
   157e4:	b.eq	19ea0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f9c>  // b.none
   157e8:	cmp	w9, #0xa
   157ec:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   157f0:	add	x10, x8, #0x4
   157f4:	b	19ea4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fa0>
   157f8:	ldr	w8, [x19, #48]
   157fc:	cmp	w8, #0x4
   15800:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15804:	ldr	w8, [x19, #76]
   15808:	cmp	w8, #0x4
   1580c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15810:	ldr	w8, [x19, #88]
   15814:	cmp	w8, #0x1
   15818:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1581c:	ldr	w8, [x19, #84]
   15820:	cmp	w8, #0x20
   15824:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15828:	ldr	w8, [x19, #80]
   1582c:	cmp	w8, #0x2
   15830:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   15834:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15838:	ldr	x8, [x19]
   1583c:	mov	x0, x19
   15840:	ldr	x8, [x8, #40]
   15844:	blr	x8
   15848:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1584c:	ldr	w8, [x19, #48]
   15850:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15854:	ldr	x8, [x19, #72]
   15858:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1585c:	ldr	w9, [x8]
   15860:	cmp	w9, #0x1
   15864:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15868:	ldr	x8, [x8, #16]
   1586c:	mov	w9, #0x4                   	// #4
   15870:	cmp	x8, #0x3e
   15874:	and	x8, x8, #0x1
   15878:	cset	w10, hi  // hi = pmore
   1587c:	orr	x8, x8, x10
   15880:	cmp	x8, #0x1
   15884:	mov	w8, #0x35                  	// #53
   15888:	csel	w21, w8, w9, eq  // eq = none
   1588c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15890:	ldr	w8, [x19, #48]
   15894:	cmp	w8, #0x3
   15898:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1589c:	ldr	w8, [x19, #76]
   158a0:	cmp	w8, #0x2
   158a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   158a8:	ldr	x8, [x19]
   158ac:	mov	x0, x19
   158b0:	ldr	x8, [x8, #56]
   158b4:	blr	x8
   158b8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   158bc:	ldr	x8, [x8]
   158c0:	mov	w9, w0
   158c4:	lsr	x9, x9, #3
   158c8:	ldrh	w10, [x8, #1270]
   158cc:	cmp	w9, w10
   158d0:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   158d4:	ldr	x8, [x8, #1256]
   158d8:	ldrb	w8, [x8, x9]
   158dc:	and	w9, w0, #0x7
   158e0:	lsr	w8, w8, w9
   158e4:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   158e8:	ldr	w8, [x19, #80]
   158ec:	cmp	w8, #0x40
   158f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   158f4:	ldr	w9, [x19, #48]
   158f8:	add	x8, x19, #0x48
   158fc:	cmp	w9, #0x3
   15900:	b.eq	19ed8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fd4>  // b.none
   15904:	cmp	w9, #0xa
   15908:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   1590c:	add	x10, x8, #0x4
   15910:	b	19edc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fd8>
   15914:	ldr	w8, [x19, #48]
   15918:	cmp	w8, #0x4
   1591c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15920:	ldr	w8, [x19, #76]
   15924:	cmp	w8, #0x4
   15928:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1592c:	ldr	w8, [x19, #80]
   15930:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15934:	ldr	w8, [x19, #88]
   15938:	cmp	w8, #0x1
   1593c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   15940:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15944:	ldr	w8, [x19, #48]
   15948:	cmp	w8, #0x3
   1594c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15950:	ldr	w8, [x19, #76]
   15954:	cmp	w8, #0x2
   15958:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1595c:	ldr	x8, [x19]
   15960:	mov	x0, x19
   15964:	ldr	x8, [x8, #56]
   15968:	blr	x8
   1596c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15970:	ldr	x8, [x8]
   15974:	mov	w9, w0
   15978:	lsr	x9, x9, #3
   1597c:	ldrh	w10, [x8, #1270]
   15980:	cmp	w9, w10
   15984:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15988:	ldr	x8, [x8, #1256]
   1598c:	ldrb	w8, [x8, x9]
   15990:	and	w9, w0, #0x7
   15994:	lsr	w8, w8, w9
   15998:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1599c:	ldr	w8, [x19, #80]
   159a0:	cmp	w8, #0x20
   159a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   159a8:	ldr	w9, [x19, #48]
   159ac:	add	x8, x19, #0x48
   159b0:	cmp	w9, #0x3
   159b4:	b.eq	19efc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ff8>  // b.none
   159b8:	cmp	w9, #0xa
   159bc:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   159c0:	add	x10, x8, #0x4
   159c4:	b	19f00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ffc>
   159c8:	ldr	x8, [x19]
   159cc:	mov	x0, x19
   159d0:	ldr	x8, [x8, #40]
   159d4:	blr	x8
   159d8:	tbz	w0, #0, 198a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x599c>
   159dc:	ldr	w8, [x19, #48]
   159e0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   159e4:	ldr	x8, [x19, #72]
   159e8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   159ec:	ldr	w9, [x8]
   159f0:	mov	w21, #0x18                  	// #24
   159f4:	cmp	w9, #0x1
   159f8:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   159fc:	ldr	x8, [x8, #16]
   15a00:	cmp	x8, #0x2
   15a04:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   15a08:	ldr	w8, [x19, #48]
   15a0c:	cmp	w8, #0x3
   15a10:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15a14:	ldr	w8, [x19, #76]
   15a18:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15a1c:	ldr	x8, [x19]
   15a20:	mov	x0, x19
   15a24:	ldr	x8, [x8, #56]
   15a28:	blr	x8
   15a2c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15a30:	ldr	x8, [x8]
   15a34:	mov	w9, w0
   15a38:	lsr	x9, x9, #3
   15a3c:	ldrh	w10, [x8, #534]
   15a40:	cmp	w9, w10
   15a44:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15a48:	ldr	x8, [x8, #520]
   15a4c:	ldrb	w8, [x8, x9]
   15a50:	and	w9, w0, #0x7
   15a54:	lsr	w8, w8, w9
   15a58:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15a5c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15a60:	ldr	w8, [x19, #48]
   15a64:	cmp	w8, #0x5
   15a68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15a6c:	ldr	w8, [x19, #72]
   15a70:	mov	w9, #0x5e                  	// #94
   15a74:	cmp	w8, #0x4
   15a78:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   15a7c:	ldr	w8, [x19, #48]
   15a80:	cmp	w8, #0x7
   15a84:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15a88:	ldr	w8, [x19, #92]
   15a8c:	mov	w21, #0x4                   	// #4
   15a90:	add	w8, w8, #0x1
   15a94:	cmp	w8, #0x1b
   15a98:	b.hi	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.pmore
   15a9c:	mov	w9, #0x1                   	// #1
   15aa0:	lsl	w8, w9, w8
   15aa4:	mov	w9, #0x31                  	// #49
   15aa8:	movk	w9, #0xc00, lsl #16
   15aac:	tst	w8, w9
   15ab0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15ab4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15ab8:	ldr	w8, [x19, #48]
   15abc:	cmp	w8, #0x3
   15ac0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15ac4:	ldr	w8, [x19, #76]
   15ac8:	cmp	w8, #0x2
   15acc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15ad0:	ldr	x8, [x19]
   15ad4:	mov	x0, x19
   15ad8:	ldr	x8, [x8, #56]
   15adc:	blr	x8
   15ae0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15ae4:	ldr	x8, [x8]
   15ae8:	mov	w9, w0
   15aec:	lsr	x9, x9, #3
   15af0:	ldrh	w10, [x8, #1270]
   15af4:	cmp	w9, w10
   15af8:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15afc:	ldr	x8, [x8, #1256]
   15b00:	ldrb	w8, [x8, x9]
   15b04:	and	w9, w0, #0x7
   15b08:	lsr	w8, w8, w9
   15b0c:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15b10:	ldr	w8, [x19, #80]
   15b14:	cmp	w8, #0x20
   15b18:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15b1c:	ldr	w9, [x19, #48]
   15b20:	add	x8, x19, #0x48
   15b24:	cmp	w9, #0x3
   15b28:	b.eq	19f20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x601c>  // b.none
   15b2c:	cmp	w9, #0xa
   15b30:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   15b34:	add	x10, x8, #0x4
   15b38:	b	19f24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6020>
   15b3c:	ldr	x8, [x19]
   15b40:	mov	x0, x19
   15b44:	ldr	x8, [x8, #40]
   15b48:	blr	x8
   15b4c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15b50:	ldr	w8, [x19, #48]
   15b54:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15b58:	ldr	x8, [x19, #72]
   15b5c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15b60:	ldr	w9, [x8]
   15b64:	cmp	w9, #0x1
   15b68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15b6c:	ldr	x8, [x8, #16]
   15b70:	add	x8, x8, #0x100
   15b74:	cmp	x8, #0x1ff
   15b78:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   15b7c:	ldr	x8, [x19]
   15b80:	mov	x0, x19
   15b84:	ldr	x8, [x8, #40]
   15b88:	blr	x8
   15b8c:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   15b90:	ldr	w8, [x19, #48]
   15b94:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15b98:	ldr	x0, [x19, #72]
   15b9c:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15ba0:	ldr	w8, [x0]
   15ba4:	cmp	w8, #0x1
   15ba8:	b.ne	19b00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bfc>  // b.any
   15bac:	ldr	x8, [x0, #16]
   15bb0:	cmp	x8, #0x1, lsl #12
   15bb4:	b.cs	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.hs, b.nlast
   15bb8:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15bbc:	ldr	w8, [x19, #48]
   15bc0:	cmp	w8, #0x4
   15bc4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15bc8:	ldr	w8, [x19, #76]
   15bcc:	cmp	w8, #0x1
   15bd0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15bd4:	ldr	w8, [x19, #88]
   15bd8:	cmp	w8, #0x2
   15bdc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15be0:	ldr	w8, [x19, #84]
   15be4:	cmp	w8, #0x8
   15be8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15bec:	ldr	w8, [x19, #80]
   15bf0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15bf4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15bf8:	ldr	w8, [x19, #48]
   15bfc:	cmp	w8, #0x5
   15c00:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15c04:	ldr	w8, [x19, #72]
   15c08:	mov	w9, #0x25                  	// #37
   15c0c:	cmp	w8, #0x10
   15c10:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   15c14:	ldr	w8, [x19, #48]
   15c18:	cmp	w8, #0x3
   15c1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15c20:	ldr	w8, [x19, #76]
   15c24:	cmp	w8, #0x3
   15c28:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15c2c:	ldr	x8, [x19]
   15c30:	mov	x0, x19
   15c34:	ldr	x8, [x8, #56]
   15c38:	blr	x8
   15c3c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15c40:	ldr	x8, [x8]
   15c44:	mov	w9, w0
   15c48:	lsr	x9, x9, #3
   15c4c:	ldrh	w10, [x8, #86]
   15c50:	cmp	w9, w10
   15c54:	b.cs	15c78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d74>  // b.hs, b.nlast
   15c58:	ldr	x8, [x8, #72]
   15c5c:	ldrb	w8, [x8, x9]
   15c60:	and	w9, w0, #0x7
   15c64:	lsr	w8, w8, w9
   15c68:	tbz	w8, #0, 15c78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d74>
   15c6c:	ldr	w8, [x19, #80]
   15c70:	cmp	w8, #0x8
   15c74:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   15c78:	mov	w21, #0x69                  	// #105
   15c7c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15c80:	ldr	x8, [x19]
   15c84:	mov	x0, x19
   15c88:	ldr	x8, [x8, #40]
   15c8c:	blr	x8
   15c90:	tbz	w0, #0, 198a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59a4>
   15c94:	ldr	w8, [x19, #48]
   15c98:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15c9c:	ldr	x8, [x19, #72]
   15ca0:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15ca4:	ldr	w10, [x8]
   15ca8:	mov	w9, #0x43                  	// #67
   15cac:	mov	w21, #0x43                  	// #67
   15cb0:	cmp	w10, #0x1
   15cb4:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   15cb8:	ldr	x8, [x8, #16]
   15cbc:	b	17818 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3914>
   15cc0:	ldr	x8, [x19]
   15cc4:	mov	x0, x19
   15cc8:	ldr	x8, [x8, #40]
   15ccc:	blr	x8
   15cd0:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15cd4:	ldr	w8, [x19, #48]
   15cd8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15cdc:	ldr	x8, [x19, #72]
   15ce0:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15ce4:	ldr	w9, [x8]
   15ce8:	cmp	w9, #0x1
   15cec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15cf0:	ldr	x8, [x8, #16]
   15cf4:	mov	w9, #0xfd                  	// #253
   15cf8:	mov	w10, #0x3c                  	// #60
   15cfc:	tst	x8, #0x3
   15d00:	ccmp	x8, x9, #0x2, eq  // eq = none
   15d04:	b	193d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54d0>
   15d08:	ldr	x8, [x19]
   15d0c:	mov	x0, x19
   15d10:	ldr	x8, [x8, #40]
   15d14:	blr	x8
   15d18:	tbz	w0, #0, 19a38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b34>
   15d1c:	ldr	w8, [x19, #48]
   15d20:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   15d24:	ldr	x0, [x19, #72]
   15d28:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   15d2c:	ldr	w8, [x0]
   15d30:	cmp	w8, #0x1
   15d34:	b.ne	19a30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b2c>  // b.any
   15d38:	ldr	x8, [x0, #16]
   15d3c:	mov	w21, #0x38                  	// #56
   15d40:	cmp	x8, #0x4, lsl #12
   15d44:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   15d48:	and	x8, x8, #0x8000000000000003
   15d4c:	cbz	x8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   15d50:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   15d54:	ldr	w8, [x19, #48]
   15d58:	cmp	w8, #0x4
   15d5c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15d60:	ldr	w8, [x19, #76]
   15d64:	cmp	w8, #0x4
   15d68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15d6c:	ldr	w8, [x19, #88]
   15d70:	cmp	w8, #0x1
   15d74:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15d78:	ldr	w8, [x19, #84]
   15d7c:	cmp	w8, #0x8
   15d80:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15d84:	b	16eb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2fb4>
   15d88:	ldr	w8, [x19, #48]
   15d8c:	cmp	w8, #0x4
   15d90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15d94:	ldr	w8, [x19, #76]
   15d98:	cmp	w8, #0x2
   15d9c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15da0:	ldr	w8, [x19, #88]
   15da4:	cmp	w8, #0x1
   15da8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15dac:	ldr	w8, [x19, #84]
   15db0:	cmp	w8, #0x40
   15db4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15db8:	ldr	w8, [x19, #80]
   15dbc:	cmp	w8, #0x2
   15dc0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15dc4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15dc8:	ldr	w8, [x19, #48]
   15dcc:	cmp	w8, #0x4
   15dd0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15dd4:	ldr	w8, [x19, #76]
   15dd8:	cmp	w8, #0x1
   15ddc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15de0:	ldr	w8, [x19, #88]
   15de4:	cmp	w8, #0x1
   15de8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15dec:	ldr	w8, [x19, #84]
   15df0:	cmp	w8, #0x40
   15df4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15df8:	b	17b3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c38>
   15dfc:	ldr	w8, [x19, #48]
   15e00:	cmp	w8, #0x4
   15e04:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e08:	ldr	w8, [x19, #76]
   15e0c:	cmp	w8, #0x2
   15e10:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e14:	ldr	w8, [x19, #88]
   15e18:	cmp	w8, #0x1
   15e1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e20:	ldr	w8, [x19, #84]
   15e24:	cmp	w8, #0x10
   15e28:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e2c:	ldr	w8, [x19, #80]
   15e30:	cmp	w8, #0x8
   15e34:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e38:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15e3c:	ldr	w8, [x19, #48]
   15e40:	cmp	w8, #0x4
   15e44:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e48:	ldr	w8, [x19, #76]
   15e4c:	cmp	w8, #0x2
   15e50:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e54:	ldr	w8, [x19, #88]
   15e58:	cmp	w8, #0x1
   15e5c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e60:	ldr	w8, [x19, #84]
   15e64:	cmp	w8, #0x20
   15e68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e6c:	ldr	w8, [x19, #80]
   15e70:	cmp	w8, #0x2
   15e74:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e78:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   15e7c:	ldr	w8, [x19, #48]
   15e80:	cmp	w8, #0x3
   15e84:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e88:	ldr	w8, [x19, #76]
   15e8c:	cmp	w8, #0x2
   15e90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15e94:	ldr	x8, [x19]
   15e98:	mov	x0, x19
   15e9c:	ldr	x8, [x8, #56]
   15ea0:	blr	x8
   15ea4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15ea8:	ldr	x8, [x8]
   15eac:	mov	w9, w0
   15eb0:	lsr	x9, x9, #3
   15eb4:	ldrh	w10, [x8, #1270]
   15eb8:	cmp	w9, w10
   15ebc:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15ec0:	ldr	x8, [x8, #1256]
   15ec4:	ldrb	w8, [x8, x9]
   15ec8:	and	w9, w0, #0x7
   15ecc:	lsr	w8, w8, w9
   15ed0:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15ed4:	ldr	w8, [x19, #80]
   15ed8:	cmp	w8, #0x40
   15edc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15ee0:	ldr	w9, [x19, #48]
   15ee4:	add	x8, x19, #0x48
   15ee8:	cmp	w9, #0x3
   15eec:	b.eq	19f58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6054>  // b.none
   15ef0:	cmp	w9, #0xa
   15ef4:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   15ef8:	add	x10, x8, #0x4
   15efc:	b	19f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6058>
   15f00:	ldr	w8, [x19, #48]
   15f04:	cmp	w8, #0x3
   15f08:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15f0c:	ldr	w8, [x19, #76]
   15f10:	cmp	w8, #0x2
   15f14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15f18:	ldr	x8, [x19]
   15f1c:	mov	x0, x19
   15f20:	ldr	x8, [x8, #56]
   15f24:	blr	x8
   15f28:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15f2c:	ldr	x8, [x8]
   15f30:	mov	w9, w0
   15f34:	lsr	x9, x9, #3
   15f38:	ldrh	w10, [x8, #1270]
   15f3c:	cmp	w9, w10
   15f40:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15f44:	ldr	x8, [x8, #1256]
   15f48:	ldrb	w8, [x8, x9]
   15f4c:	and	w9, w0, #0x7
   15f50:	lsr	w8, w8, w9
   15f54:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15f58:	ldr	w8, [x19, #80]
   15f5c:	cmp	w8, #0x20
   15f60:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15f64:	ldr	w9, [x19, #48]
   15f68:	add	x8, x19, #0x48
   15f6c:	cmp	w9, #0x3
   15f70:	b.eq	19f78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6074>  // b.none
   15f74:	cmp	w9, #0xa
   15f78:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   15f7c:	add	x10, x8, #0x4
   15f80:	b	19f7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6078>
   15f84:	ldr	w8, [x19, #48]
   15f88:	cmp	w8, #0x3
   15f8c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15f90:	ldr	w8, [x19, #76]
   15f94:	cmp	w8, #0x2
   15f98:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15f9c:	ldr	x8, [x19]
   15fa0:	mov	x0, x19
   15fa4:	ldr	x8, [x8, #56]
   15fa8:	blr	x8
   15fac:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15fb0:	ldr	x8, [x8]
   15fb4:	mov	w9, w0
   15fb8:	lsr	x9, x9, #3
   15fbc:	ldrh	w10, [x8, #1270]
   15fc0:	cmp	w9, w10
   15fc4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   15fc8:	ldr	x8, [x8, #1256]
   15fcc:	ldrb	w8, [x8, x9]
   15fd0:	and	w9, w0, #0x7
   15fd4:	lsr	w8, w8, w9
   15fd8:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   15fdc:	ldr	w8, [x19, #80]
   15fe0:	cmp	w8, #0x40
   15fe4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   15fe8:	ldr	w9, [x19, #48]
   15fec:	add	x8, x19, #0x48
   15ff0:	cmp	w9, #0x3
   15ff4:	b.eq	19f98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6094>  // b.none
   15ff8:	cmp	w9, #0xa
   15ffc:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   16000:	add	x10, x8, #0x4
   16004:	b	19f9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6098>
   16008:	ldr	w8, [x19, #48]
   1600c:	cmp	w8, #0x4
   16010:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16014:	ldr	w8, [x19, #76]
   16018:	cmp	w8, #0x2
   1601c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16020:	ldr	w8, [x19, #88]
   16024:	cmp	w8, #0x2
   16028:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1602c:	ldr	w8, [x19, #84]
   16030:	cmp	w8, #0x20
   16034:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16038:	ldr	w8, [x19, #80]
   1603c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16040:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16044:	ldr	w8, [x19, #48]
   16048:	cmp	w8, #0x3
   1604c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16050:	ldr	w8, [x19, #76]
   16054:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16058:	ldr	x8, [x19]
   1605c:	mov	x0, x19
   16060:	ldr	x8, [x8, #56]
   16064:	blr	x8
   16068:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1606c:	ldr	x8, [x8]
   16070:	mov	w9, w0
   16074:	lsr	x9, x9, #3
   16078:	ldrh	w10, [x8, #22]
   1607c:	cmp	w9, w10
   16080:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   16084:	ldr	x8, [x8, #8]
   16088:	ldrb	w8, [x8, x9]
   1608c:	and	w9, w0, #0x7
   16090:	lsr	w8, w8, w9
   16094:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16098:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1609c:	ldr	w8, [x19, #48]
   160a0:	cmp	w8, #0x4
   160a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   160a8:	ldr	w8, [x19, #76]
   160ac:	cmp	w8, #0x2
   160b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   160b4:	ldr	w8, [x19, #88]
   160b8:	cmp	w8, #0x1
   160bc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   160c0:	ldr	w8, [x19, #84]
   160c4:	cmp	w8, #0x8
   160c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   160cc:	ldr	w8, [x19, #80]
   160d0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   160d4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   160d8:	ldr	w8, [x19, #48]
   160dc:	cmp	w8, #0x3
   160e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   160e4:	ldr	w8, [x19, #76]
   160e8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   160ec:	ldr	x8, [x19]
   160f0:	mov	x0, x19
   160f4:	ldr	x8, [x8, #56]
   160f8:	blr	x8
   160fc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16100:	ldr	x8, [x8]
   16104:	mov	w9, w0
   16108:	lsr	x9, x9, #3
   1610c:	ldrh	w10, [x8, #54]
   16110:	cmp	w9, w10
   16114:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   16118:	ldr	x8, [x8, #40]
   1611c:	ldrb	w8, [x8, x9]
   16120:	and	w9, w0, #0x7
   16124:	lsr	w8, w8, w9
   16128:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1612c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16130:	ldr	w8, [x19, #48]
   16134:	cmp	w8, #0x3
   16138:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1613c:	ldr	w8, [x19, #76]
   16140:	cmp	w8, #0x2
   16144:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16148:	ldr	x8, [x19]
   1614c:	mov	x0, x19
   16150:	ldr	x8, [x8, #56]
   16154:	blr	x8
   16158:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1615c:	ldr	x8, [x8]
   16160:	mov	w9, w0
   16164:	lsr	x9, x9, #3
   16168:	ldrh	w10, [x8, #1270]
   1616c:	cmp	w9, w10
   16170:	b.cs	16194 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2290>  // b.hs, b.nlast
   16174:	ldr	x8, [x8, #1256]
   16178:	ldrb	w8, [x8, x9]
   1617c:	and	w9, w0, #0x7
   16180:	lsr	w8, w8, w9
   16184:	tbz	w8, #0, 16194 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2290>
   16188:	ldr	w8, [x19, #80]
   1618c:	cmp	w8, #0x40
   16190:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   16194:	mov	w21, #0x7d                  	// #125
   16198:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1619c:	ldr	w8, [x19, #48]
   161a0:	cmp	w8, #0x3
   161a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   161a8:	ldr	w8, [x19, #76]
   161ac:	cmp	w8, #0x2
   161b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   161b4:	ldr	x8, [x19]
   161b8:	mov	x0, x19
   161bc:	ldr	x8, [x8, #56]
   161c0:	blr	x8
   161c4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   161c8:	ldr	x8, [x8]
   161cc:	mov	w9, w0
   161d0:	lsr	x9, x9, #3
   161d4:	ldrh	w10, [x8, #1270]
   161d8:	cmp	w9, w10
   161dc:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   161e0:	ldr	x8, [x8, #1256]
   161e4:	ldrb	w8, [x8, x9]
   161e8:	and	w9, w0, #0x7
   161ec:	lsr	w8, w8, w9
   161f0:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   161f4:	ldr	w8, [x19, #80]
   161f8:	cmp	w8, #0x40
   161fc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16200:	ldr	w9, [x19, #48]
   16204:	add	x8, x19, #0x48
   16208:	cmp	w9, #0x3
   1620c:	b.eq	19fb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60b4>  // b.none
   16210:	cmp	w9, #0xa
   16214:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   16218:	add	x10, x8, #0x4
   1621c:	b	19fbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60b8>
   16220:	ldr	w8, [x19, #48]
   16224:	cmp	w8, #0x4
   16228:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1622c:	ldr	w8, [x19, #76]
   16230:	cmp	w8, #0x3
   16234:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16238:	ldr	w8, [x19, #88]
   1623c:	cmp	w8, #0x2
   16240:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16244:	ldr	w8, [x19, #84]
   16248:	cmp	w8, #0x8
   1624c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16250:	ldr	w8, [x19, #80]
   16254:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16258:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1625c:	ldr	w8, [x19, #48]
   16260:	cmp	w8, #0x4
   16264:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16268:	ldr	w8, [x19, #76]
   1626c:	cmp	w8, #0x2
   16270:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16274:	ldr	w8, [x19, #88]
   16278:	cmp	w8, #0x2
   1627c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16280:	ldr	w8, [x19, #84]
   16284:	cmp	w8, #0x40
   16288:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1628c:	ldr	w8, [x19, #80]
   16290:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16294:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16298:	ldr	w8, [x19, #48]
   1629c:	cmp	w8, #0x4
   162a0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162a4:	ldr	w8, [x19, #76]
   162a8:	cmp	w8, #0x1
   162ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162b0:	ldr	w8, [x19, #88]
   162b4:	cmp	w8, #0x1
   162b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162bc:	ldr	w8, [x19, #84]
   162c0:	cmp	w8, #0x20
   162c4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162c8:	b	18f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x504c>
   162cc:	ldr	w8, [x19, #48]
   162d0:	cmp	w8, #0x4
   162d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162d8:	ldr	w8, [x19, #76]
   162dc:	cmp	w8, #0x4
   162e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162e4:	ldr	w8, [x19, #88]
   162e8:	cmp	w8, #0x1
   162ec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162f0:	ldr	w8, [x19, #84]
   162f4:	cmp	w8, #0x40
   162f8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   162fc:	ldr	w8, [x19, #80]
   16300:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16304:	b	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   16308:	ldr	w8, [x19, #48]
   1630c:	cmp	w8, #0x3
   16310:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16314:	ldr	w8, [x19, #76]
   16318:	cmp	w8, #0x2
   1631c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16320:	ldr	x8, [x19]
   16324:	mov	x0, x19
   16328:	ldr	x8, [x8, #56]
   1632c:	blr	x8
   16330:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16334:	ldr	x8, [x8]
   16338:	mov	w9, w0
   1633c:	lsr	x9, x9, #3
   16340:	ldrh	w10, [x8, #1270]
   16344:	cmp	w9, w10
   16348:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1634c:	ldr	x8, [x8, #1256]
   16350:	ldrb	w8, [x8, x9]
   16354:	and	w9, w0, #0x7
   16358:	lsr	w8, w8, w9
   1635c:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16360:	ldr	w8, [x19, #80]
   16364:	cmp	w8, #0x40
   16368:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1636c:	ldr	w9, [x19, #48]
   16370:	add	x8, x19, #0x48
   16374:	cmp	w9, #0x3
   16378:	b.eq	19ff0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60ec>  // b.none
   1637c:	cmp	w9, #0xa
   16380:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   16384:	add	x10, x8, #0x4
   16388:	b	19ff4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60f0>
   1638c:	ldr	x8, [x19]
   16390:	mov	x0, x19
   16394:	ldr	x8, [x8, #40]
   16398:	blr	x8
   1639c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   163a0:	ldr	w8, [x19, #48]
   163a4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   163a8:	ldr	x8, [x19, #72]
   163ac:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   163b0:	ldr	w9, [x8]
   163b4:	cmp	w9, #0x1
   163b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   163bc:	ldr	x8, [x8, #16]
   163c0:	mov	w9, #0x1ff1                	// #8177
   163c4:	mov	w10, #0x2e                  	// #46
   163c8:	add	x11, x8, #0x1, lsl #12
   163cc:	tst	x8, #0xf
   163d0:	b	193d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54cc>
   163d4:	ldr	w8, [x19, #48]
   163d8:	cmp	w8, #0x4
   163dc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   163e0:	ldr	w8, [x19, #76]
   163e4:	cmp	w8, #0x3
   163e8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   163ec:	ldr	w8, [x19, #88]
   163f0:	cmp	w8, #0x2
   163f4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   163f8:	ldr	w8, [x19, #84]
   163fc:	cmp	w8, #0x10
   16400:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16404:	ldr	w8, [x19, #80]
   16408:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1640c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16410:	ldr	w8, [x19, #48]
   16414:	cmp	w8, #0x4
   16418:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1641c:	ldr	w8, [x19, #76]
   16420:	cmp	w8, #0x1
   16424:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16428:	ldr	w8, [x19, #88]
   1642c:	cmp	w8, #0x1
   16430:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16434:	ldr	w8, [x19, #84]
   16438:	cmp	w8, #0x8
   1643c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16440:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   16444:	ldr	w8, [x19, #48]
   16448:	cmp	w8, #0x4
   1644c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16450:	ldr	w8, [x19, #76]
   16454:	cmp	w8, #0x3
   16458:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1645c:	ldr	w8, [x19, #88]
   16460:	cmp	w8, #0x1
   16464:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16468:	ldr	w8, [x19, #84]
   1646c:	cmp	w8, #0x8
   16470:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16474:	b	17e5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f58>
   16478:	ldr	w8, [x19, #48]
   1647c:	cmp	w8, #0x3
   16480:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16484:	ldr	w8, [x19, #76]
   16488:	cmp	w8, #0x2
   1648c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16490:	ldr	x8, [x19]
   16494:	mov	x0, x19
   16498:	ldr	x8, [x8, #56]
   1649c:	blr	x8
   164a0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   164a4:	ldr	x8, [x8]
   164a8:	mov	w9, w0
   164ac:	lsr	x9, x9, #3
   164b0:	ldrh	w10, [x8, #1270]
   164b4:	cmp	w9, w10
   164b8:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   164bc:	ldr	x8, [x8, #1256]
   164c0:	ldrb	w8, [x8, x9]
   164c4:	and	w9, w0, #0x7
   164c8:	lsr	w8, w8, w9
   164cc:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   164d0:	mov	x8, x19
   164d4:	ldr	w9, [x8, #80]!
   164d8:	cmp	w9, #0x40
   164dc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   164e0:	ldr	w10, [x19, #48]
   164e4:	add	x9, x19, #0x48
   164e8:	cmp	w10, #0x3
   164ec:	b.eq	1a028 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6124>  // b.none
   164f0:	cmp	w10, #0xa
   164f4:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   164f8:	add	x11, x9, #0x4
   164fc:	b	1a02c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6128>
   16500:	ldr	w8, [x19, #48]
   16504:	cmp	w8, #0x3
   16508:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1650c:	ldr	w8, [x19, #76]
   16510:	cmp	w8, #0x3
   16514:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16518:	ldr	x8, [x19]
   1651c:	mov	x0, x19
   16520:	ldr	x8, [x8, #56]
   16524:	blr	x8
   16528:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1652c:	ldr	x8, [x8]
   16530:	mov	w9, w0
   16534:	lsr	x9, x9, #3
   16538:	ldrh	w10, [x8, #86]
   1653c:	cmp	w9, w10
   16540:	b.cs	16564 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2660>  // b.hs, b.nlast
   16544:	ldr	x8, [x8, #72]
   16548:	ldrb	w8, [x8, x9]
   1654c:	and	w9, w0, #0x7
   16550:	lsr	w8, w8, w9
   16554:	tbz	w8, #0, 16564 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2660>
   16558:	ldr	w8, [x19, #80]
   1655c:	cmp	w8, #0x10
   16560:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   16564:	mov	w21, #0x6b                  	// #107
   16568:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1656c:	ldr	w8, [x19, #48]
   16570:	cmp	w8, #0x3
   16574:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16578:	ldr	w8, [x19, #76]
   1657c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16580:	ldr	x8, [x19]
   16584:	mov	x0, x19
   16588:	ldr	x8, [x8, #56]
   1658c:	blr	x8
   16590:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16594:	ldr	x8, [x8]
   16598:	mov	w9, w0
   1659c:	lsr	x9, x9, #3
   165a0:	ldrh	w10, [x8, #1238]
   165a4:	cmp	w9, w10
   165a8:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   165ac:	ldr	x8, [x8, #1224]
   165b0:	ldrb	w8, [x8, x9]
   165b4:	and	w9, w0, #0x7
   165b8:	lsr	w8, w8, w9
   165bc:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   165c0:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   165c4:	mov	x0, x19
   165c8:	bl	1d9a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   165cc:	cbz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   165d0:	mov	x0, x19
   165d4:	bl	1dc90 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   165d8:	cbz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   165dc:	cmp	w0, #0x1
   165e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   165e4:	mov	w21, #0x5a                  	// #90
   165e8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   165ec:	ldr	w8, [x19, #48]
   165f0:	cmp	w8, #0x4
   165f4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   165f8:	ldr	w8, [x19, #76]
   165fc:	cmp	w8, #0x3
   16600:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16604:	ldr	w8, [x19, #88]
   16608:	cmp	w8, #0x2
   1660c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16610:	ldr	w8, [x19, #84]
   16614:	cmp	w8, #0x20
   16618:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1661c:	ldr	w8, [x19, #80]
   16620:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16624:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16628:	ldr	w8, [x19, #48]
   1662c:	cmp	w8, #0x7
   16630:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16634:	ldr	w8, [x19, #92]
   16638:	cmp	w8, #0x1a
   1663c:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   16640:	mov	w9, #0x1                   	// #1
   16644:	lsl	w8, w9, w8
   16648:	mov	w9, #0x18                  	// #24
   1664c:	movk	w9, #0x600, lsl #16
   16650:	tst	w8, w9
   16654:	b.ne	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.any
   16658:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1665c:	ldr	w8, [x19, #48]
   16660:	cmp	w8, #0x3
   16664:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16668:	ldr	w8, [x19, #76]
   1666c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16670:	ldr	x8, [x19]
   16674:	mov	x0, x19
   16678:	ldr	x8, [x8, #56]
   1667c:	blr	x8
   16680:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16684:	ldr	x8, [x8]
   16688:	mov	w9, w0
   1668c:	lsr	x9, x9, #3
   16690:	ldrh	w10, [x8, #22]
   16694:	cmp	w9, w10
   16698:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1669c:	ldr	x8, [x8, #8]
   166a0:	ldrb	w8, [x8, x9]
   166a4:	and	w9, w0, #0x7
   166a8:	lsr	w8, w8, w9
   166ac:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   166b0:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   166b4:	ldr	w8, [x19, #48]
   166b8:	cmp	w8, #0x4
   166bc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   166c0:	ldr	w8, [x19, #76]
   166c4:	cmp	w8, #0x2
   166c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   166cc:	ldr	w8, [x19, #80]
   166d0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   166d4:	b	1822c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4328>
   166d8:	ldr	x8, [x19]
   166dc:	mov	x0, x19
   166e0:	ldr	x8, [x8, #40]
   166e4:	blr	x8
   166e8:	tbz	w0, #0, 198b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59ac>
   166ec:	ldr	w8, [x19, #48]
   166f0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   166f4:	ldr	x8, [x19, #72]
   166f8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   166fc:	ldr	w10, [x8]
   16700:	mov	w9, #0x45                  	// #69
   16704:	mov	w21, #0x45                  	// #69
   16708:	cmp	w10, #0x1
   1670c:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   16710:	ldr	x8, [x8, #16]
   16714:	add	x8, x8, #0x100
   16718:	cmp	x8, #0x200
   1671c:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   16720:	ldr	w8, [x19, #48]
   16724:	cmp	w8, #0x3
   16728:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1672c:	ldr	w8, [x19, #76]
   16730:	cmp	w8, #0x2
   16734:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16738:	ldr	x8, [x19]
   1673c:	mov	x0, x19
   16740:	ldr	x8, [x8, #56]
   16744:	blr	x8
   16748:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1674c:	ldr	x8, [x8]
   16750:	mov	w9, w0
   16754:	lsr	x9, x9, #3
   16758:	ldrh	w10, [x8, #1334]
   1675c:	cmp	w9, w10
   16760:	b.cs	16784 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2880>  // b.hs, b.nlast
   16764:	ldr	x8, [x8, #1320]
   16768:	ldrb	w8, [x8, x9]
   1676c:	and	w9, w0, #0x7
   16770:	lsr	w8, w8, w9
   16774:	tbz	w8, #0, 16784 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2880>
   16778:	ldr	w8, [x19, #80]
   1677c:	cmp	w8, #0x20
   16780:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   16784:	mov	w21, #0x8f                  	// #143
   16788:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1678c:	ldr	w8, [x19, #48]
   16790:	cmp	w8, #0x4
   16794:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16798:	ldr	w8, [x19, #76]
   1679c:	cmp	w8, #0x3
   167a0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   167a4:	ldr	w8, [x19, #88]
   167a8:	cmp	w8, #0x1
   167ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   167b0:	ldr	w8, [x19, #84]
   167b4:	cmp	w8, #0x40
   167b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   167bc:	b	17b3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c38>
   167c0:	ldr	w8, [x19, #48]
   167c4:	cmp	w8, #0x3
   167c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   167cc:	ldr	w8, [x19, #76]
   167d0:	cmp	w8, #0x2
   167d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   167d8:	ldr	x8, [x19]
   167dc:	mov	x0, x19
   167e0:	ldr	x8, [x8, #56]
   167e4:	blr	x8
   167e8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   167ec:	ldr	x8, [x8]
   167f0:	mov	w9, w0
   167f4:	lsr	x9, x9, #3
   167f8:	ldrh	w10, [x8, #1270]
   167fc:	cmp	w9, w10
   16800:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   16804:	ldr	x8, [x8, #1256]
   16808:	ldrb	w8, [x8, x9]
   1680c:	and	w9, w0, #0x7
   16810:	lsr	w8, w8, w9
   16814:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16818:	ldr	w8, [x19, #80]
   1681c:	cmp	w8, #0x20
   16820:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16824:	ldr	w9, [x19, #48]
   16828:	add	x8, x19, #0x48
   1682c:	cmp	w9, #0x3
   16830:	b.eq	1a054 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6150>  // b.none
   16834:	cmp	w9, #0xa
   16838:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   1683c:	add	x10, x8, #0x4
   16840:	b	1a058 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6154>
   16844:	ldr	x8, [x19]
   16848:	mov	x0, x19
   1684c:	ldr	x8, [x8, #40]
   16850:	blr	x8
   16854:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16858:	ldr	w8, [x19, #48]
   1685c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16860:	ldr	x8, [x19, #72]
   16864:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16868:	ldr	w9, [x8]
   1686c:	cmp	w9, #0x1
   16870:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16874:	ldrh	w8, [x8, #18]
   16878:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1687c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16880:	ldr	w8, [x19, #48]
   16884:	cmp	w8, #0x4
   16888:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1688c:	ldr	w8, [x19, #76]
   16890:	cmp	w8, #0x3
   16894:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16898:	ldr	w8, [x19, #88]
   1689c:	cmp	w8, #0x1
   168a0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   168a4:	ldr	w8, [x19, #84]
   168a8:	cmp	w8, #0x8
   168ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   168b0:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   168b4:	ldr	w8, [x19, #48]
   168b8:	cmp	w8, #0x3
   168bc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   168c0:	ldr	w8, [x19, #76]
   168c4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   168c8:	ldr	x8, [x19]
   168cc:	mov	x0, x19
   168d0:	ldr	x8, [x8, #56]
   168d4:	blr	x8
   168d8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   168dc:	ldr	x8, [x8]
   168e0:	mov	w9, w0
   168e4:	lsr	x9, x9, #3
   168e8:	ldrh	w10, [x8, #630]
   168ec:	cmp	w9, w10
   168f0:	b.cs	1a3b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64ac>  // b.hs, b.nlast
   168f4:	ldr	x8, [x8, #616]
   168f8:	ldrb	w8, [x8, x9]
   168fc:	and	w9, w0, #0x7
   16900:	lsr	w8, w8, w9
   16904:	tbz	w8, #0, 1a3b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64ac>
   16908:	ldr	w9, [x19, #48]
   1690c:	add	x8, x19, #0x48
   16910:	cmp	w9, #0x3
   16914:	b.eq	19d58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e54>  // b.none
   16918:	cmp	w9, #0xa
   1691c:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   16920:	mov	x10, x8
   16924:	b	19d5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e58>
   16928:	ldr	w8, [x19, #48]
   1692c:	cmp	w8, #0x3
   16930:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16934:	ldr	w8, [x19, #76]
   16938:	cmp	w8, #0x2
   1693c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16940:	ldr	x8, [x19]
   16944:	mov	x0, x19
   16948:	ldr	x8, [x8, #56]
   1694c:	blr	x8
   16950:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16954:	ldr	x8, [x8]
   16958:	mov	w9, w0
   1695c:	lsr	x9, x9, #3
   16960:	ldrh	w10, [x8, #1270]
   16964:	cmp	w9, w10
   16968:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1696c:	ldr	x8, [x8, #1256]
   16970:	ldrb	w8, [x8, x9]
   16974:	and	w9, w0, #0x7
   16978:	lsr	w8, w8, w9
   1697c:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16980:	mov	x8, x19
   16984:	ldr	w9, [x8, #80]!
   16988:	cmp	w9, #0x20
   1698c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16990:	ldr	w10, [x19, #48]
   16994:	add	x9, x19, #0x48
   16998:	cmp	w10, #0x3
   1699c:	b.eq	1a08c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6188>  // b.none
   169a0:	cmp	w10, #0xa
   169a4:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   169a8:	add	x11, x9, #0x4
   169ac:	b	1a090 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x618c>
   169b0:	ldr	w8, [x19, #48]
   169b4:	cmp	w8, #0x3
   169b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   169bc:	ldr	w8, [x19, #76]
   169c0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   169c4:	ldr	x8, [x19]
   169c8:	mov	x0, x19
   169cc:	ldr	x8, [x8, #56]
   169d0:	blr	x8
   169d4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   169d8:	ldr	x8, [x8]
   169dc:	mov	w9, w0
   169e0:	lsr	x9, x9, #3
   169e4:	ldrh	w10, [x8, #1238]
   169e8:	cmp	w9, w10
   169ec:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   169f0:	ldr	x8, [x8, #1224]
   169f4:	ldrb	w8, [x8, x9]
   169f8:	and	w9, w0, #0x7
   169fc:	lsr	w8, w8, w9
   16a00:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16a04:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16a08:	ldr	x8, [x19]
   16a0c:	mov	x0, x19
   16a10:	ldr	x8, [x8, #40]
   16a14:	blr	x8
   16a18:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16a1c:	ldr	w8, [x19, #48]
   16a20:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16a24:	ldr	x8, [x19, #72]
   16a28:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16a2c:	ldr	w9, [x8]
   16a30:	cmp	w9, #0x1
   16a34:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16a38:	ldr	x8, [x8, #16]
   16a3c:	cmp	x8, #0x10, lsl #12
   16a40:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   16a44:	and	x9, x8, #0xffffffff0000ffff
   16a48:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16a4c:	mov	w9, #0xffffffff            	// #-1
   16a50:	cmp	x9, w8, uxtw
   16a54:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   16a58:	mvn	w8, w8
   16a5c:	and	x8, x8, #0xffff
   16a60:	cbz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16a64:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16a68:	ldr	w8, [x19, #48]
   16a6c:	cmp	w8, #0x4
   16a70:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16a74:	ldr	w8, [x19, #76]
   16a78:	cmp	w8, #0x1
   16a7c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16a80:	ldr	w8, [x19, #88]
   16a84:	cmp	w8, #0x2
   16a88:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16a8c:	ldr	w8, [x19, #84]
   16a90:	cmp	w8, #0x40
   16a94:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16a98:	ldr	w8, [x19, #80]
   16a9c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16aa0:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16aa4:	ldr	w8, [x19, #48]
   16aa8:	cmp	w8, #0x4
   16aac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ab0:	ldr	w8, [x19, #76]
   16ab4:	cmp	w8, #0x3
   16ab8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16abc:	ldr	w8, [x19, #88]
   16ac0:	cmp	w8, #0x1
   16ac4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ac8:	ldr	w8, [x19, #84]
   16acc:	cmp	w8, #0x20
   16ad0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ad4:	b	18a54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4b50>
   16ad8:	ldr	w8, [x19, #48]
   16adc:	cmp	w8, #0x3
   16ae0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ae4:	ldr	w8, [x19, #76]
   16ae8:	cmp	w8, #0x2
   16aec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16af0:	ldr	x8, [x19]
   16af4:	mov	x0, x19
   16af8:	ldr	x8, [x8, #56]
   16afc:	blr	x8
   16b00:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16b04:	ldr	x8, [x8]
   16b08:	mov	w9, w0
   16b0c:	lsr	x9, x9, #3
   16b10:	ldrh	w10, [x8, #1366]
   16b14:	cmp	w9, w10
   16b18:	b.cs	16b3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>  // b.hs, b.nlast
   16b1c:	ldr	x8, [x8, #1352]
   16b20:	ldrb	w8, [x8, x9]
   16b24:	and	w9, w0, #0x7
   16b28:	lsr	w8, w8, w9
   16b2c:	tbz	w8, #0, 16b3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c38>
   16b30:	ldr	w8, [x19, #80]
   16b34:	cmp	w8, #0x8
   16b38:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   16b3c:	mov	w21, #0x8d                  	// #141
   16b40:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16b44:	ldr	w8, [x19, #48]
   16b48:	cmp	w8, #0x3
   16b4c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16b50:	ldr	w8, [x19, #76]
   16b54:	cmp	w8, #0x2
   16b58:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16b5c:	ldr	x8, [x19]
   16b60:	mov	x0, x19
   16b64:	ldr	x8, [x8, #56]
   16b68:	blr	x8
   16b6c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16b70:	ldr	x8, [x8]
   16b74:	mov	w9, w0
   16b78:	lsr	x9, x9, #3
   16b7c:	ldrh	w10, [x8, #1270]
   16b80:	cmp	w9, w10
   16b84:	b.cs	16ba8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2ca4>  // b.hs, b.nlast
   16b88:	ldr	x8, [x8, #1256]
   16b8c:	ldrb	w8, [x8, x9]
   16b90:	and	w9, w0, #0x7
   16b94:	lsr	w8, w8, w9
   16b98:	tbz	w8, #0, 16ba8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2ca4>
   16b9c:	ldr	w8, [x19, #80]
   16ba0:	cmp	w8, #0x10
   16ba4:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   16ba8:	mov	w21, #0x6f                  	// #111
   16bac:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16bb0:	mov	x0, x19
   16bb4:	bl	1cf40 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   16bb8:	cbz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16bbc:	cmp	w0, #0x1
   16bc0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16bc4:	mov	w21, #0x5c                  	// #92
   16bc8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16bcc:	ldr	w8, [x19, #48]
   16bd0:	cmp	w8, #0xa
   16bd4:	b.ne	18f18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5014>  // b.any
   16bd8:	ldr	w9, [x19, #72]
   16bdc:	mov	w8, #0x9                   	// #9
   16be0:	mov	w21, #0x9                   	// #9
   16be4:	cmp	w9, #0x3
   16be8:	b.ls	18f04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5000>  // b.plast
   16bec:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16bf0:	ldr	x8, [x19]
   16bf4:	mov	x0, x19
   16bf8:	ldr	x8, [x8, #40]
   16bfc:	blr	x8
   16c00:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16c04:	ldr	w8, [x19, #48]
   16c08:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16c0c:	ldr	x8, [x19, #72]
   16c10:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16c14:	ldr	w9, [x8]
   16c18:	cmp	w9, #0x1
   16c1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16c20:	ldr	x8, [x8, #16]
   16c24:	cmp	x8, #0x10, lsl #12
   16c28:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   16c2c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16c30:	ldr	w8, [x19, #48]
   16c34:	cmp	w8, #0x3
   16c38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16c3c:	ldr	w8, [x19, #76]
   16c40:	cmp	w8, #0x3
   16c44:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16c48:	ldr	x8, [x19]
   16c4c:	mov	x0, x19
   16c50:	ldr	x8, [x8, #56]
   16c54:	blr	x8
   16c58:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16c5c:	ldr	x8, [x8]
   16c60:	mov	w9, w0
   16c64:	lsr	x9, x9, #3
   16c68:	ldrh	w10, [x8, #118]
   16c6c:	cmp	w9, w10
   16c70:	b.cs	16c94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d90>  // b.hs, b.nlast
   16c74:	ldr	x8, [x8, #104]
   16c78:	ldrb	w8, [x8, x9]
   16c7c:	and	w9, w0, #0x7
   16c80:	lsr	w8, w8, w9
   16c84:	tbz	w8, #0, 16c94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d90>
   16c88:	ldr	w8, [x19, #80]
   16c8c:	cmp	w8, #0x8
   16c90:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   16c94:	mov	w21, #0x64                  	// #100
   16c98:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16c9c:	ldr	x8, [x19]
   16ca0:	mov	x0, x19
   16ca4:	ldr	x8, [x8, #40]
   16ca8:	blr	x8
   16cac:	tbz	w0, #0, 198b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59b4>
   16cb0:	ldr	w8, [x19, #48]
   16cb4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16cb8:	ldr	x8, [x19, #72]
   16cbc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16cc0:	ldr	w10, [x8]
   16cc4:	mov	w9, #0x42                  	// #66
   16cc8:	mov	w21, #0x42                  	// #66
   16ccc:	cmp	w10, #0x1
   16cd0:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   16cd4:	ldr	x8, [x8, #16]
   16cd8:	add	x8, x8, #0x10
   16cdc:	b	18a9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4b98>
   16ce0:	ldr	x8, [x19]
   16ce4:	mov	x0, x19
   16ce8:	ldr	x8, [x8, #40]
   16cec:	blr	x8
   16cf0:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16cf4:	ldr	w8, [x19, #48]
   16cf8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16cfc:	ldr	x8, [x19, #72]
   16d00:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16d04:	ldr	w9, [x8]
   16d08:	cmp	w9, #0x1
   16d0c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16d10:	ldr	x8, [x8, #16]
   16d14:	mov	x9, #0x4fa5                	// #20389
   16d18:	movk	x9, #0xa4fa, lsl #16
   16d1c:	movk	x9, #0xfa4f, lsl #32
   16d20:	mov	x10, #0x82d9                	// #33497
   16d24:	movk	x9, #0x4fa4, lsl #48
   16d28:	movk	x10, #0xd82d, lsl #16
   16d2c:	movk	x10, #0x2d82, lsl #32
   16d30:	mul	x9, x8, x9
   16d34:	movk	x10, #0x2d8, lsl #48
   16d38:	ror	x9, x9, #1
   16d3c:	mov	w11, #0x10f                 	// #271
   16d40:	cmp	x9, x10
   16d44:	mov	w12, #0xc                   	// #12
   16d48:	ccmp	x8, x11, #0x2, cc  // cc = lo, ul, last
   16d4c:	mov	w8, #0x4                   	// #4
   16d50:	csel	w21, w8, w12, cc  // cc = lo, ul, last
   16d54:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16d58:	mov	x0, x19
   16d5c:	bl	1ce50 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   16d60:	cbz	w0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   16d64:	cmp	w0, #0x1
   16d68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16d6c:	mov	w21, #0x58                  	// #88
   16d70:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16d74:	ldr	x8, [x19]
   16d78:	mov	x0, x19
   16d7c:	ldr	x8, [x8, #40]
   16d80:	blr	x8
   16d84:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16d88:	ldr	w8, [x19, #48]
   16d8c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16d90:	ldr	x8, [x19, #72]
   16d94:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16d98:	ldr	w9, [x8]
   16d9c:	cmp	w9, #0x1
   16da0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16da4:	ldr	x8, [x8, #16]
   16da8:	mov	x9, #0x4fa5                	// #20389
   16dac:	movk	x9, #0xa4fa, lsl #16
   16db0:	movk	x9, #0xfa4f, lsl #32
   16db4:	mov	x11, #0xc16c                	// #49516
   16db8:	movk	x9, #0x4fa4, lsl #48
   16dbc:	orr	x10, xzr, #0xfffffffffffffffe
   16dc0:	movk	x11, #0x6c16, lsl #16
   16dc4:	movk	x11, #0x16c1, lsl #32
   16dc8:	madd	x9, x8, x9, x10
   16dcc:	movk	x11, #0x16c, lsl #48
   16dd0:	ror	x9, x9, #2
   16dd4:	mov	w12, #0x10f                 	// #271
   16dd8:	cmp	x9, x11
   16ddc:	mov	w13, #0xd                   	// #13
   16de0:	ccmp	x8, x12, #0x2, cc  // cc = lo, ul, last
   16de4:	b	19380 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x547c>
   16de8:	ldr	x8, [x19]
   16dec:	mov	x0, x19
   16df0:	ldr	x8, [x8, #40]
   16df4:	blr	x8
   16df8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16dfc:	ldr	w8, [x19, #48]
   16e00:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16e04:	ldr	x8, [x19, #72]
   16e08:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16e0c:	ldr	w9, [x8]
   16e10:	cmp	w9, #0x1
   16e14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e18:	ldr	x8, [x8, #16]
   16e1c:	cmp	x8, #0x10, lsl #12
   16e20:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   16e24:	and	x9, x8, #0xffffffff0000ffff
   16e28:	mov	x10, #0xffffffff0000ffff    	// #-4294901761
   16e2c:	cmp	x9, x10
   16e30:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e34:	cmn	x8, #0x1
   16e38:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   16e3c:	and	x10, x8, #0xffffffffffff
   16e40:	cbz	x10, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16e44:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16e48:	and	x8, x8, #0xffff0000ffffffff
   16e4c:	cbnz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16e50:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16e54:	ldr	w8, [x19, #48]
   16e58:	cmp	w8, #0x4
   16e5c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e60:	ldr	w8, [x19, #76]
   16e64:	cmp	w8, #0x4
   16e68:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e6c:	ldr	w8, [x19, #88]
   16e70:	cmp	w8, #0x1
   16e74:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e78:	ldr	w8, [x19, #84]
   16e7c:	cmp	w8, #0x20
   16e80:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e84:	b	18744 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4840>
   16e88:	ldr	w8, [x19, #48]
   16e8c:	cmp	w8, #0x4
   16e90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16e94:	ldr	w8, [x19, #76]
   16e98:	cmp	w8, #0x4
   16e9c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ea0:	ldr	w8, [x19, #88]
   16ea4:	cmp	w8, #0x1
   16ea8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16eac:	ldr	w8, [x19, #84]
   16eb0:	cmp	w8, #0x10
   16eb4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16eb8:	ldr	w8, [x19, #80]
   16ebc:	cmp	w8, #0x8
   16ec0:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   16ec4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16ec8:	ldr	w8, [x19, #48]
   16ecc:	cmp	w8, #0x4
   16ed0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ed4:	ldr	w8, [x19, #76]
   16ed8:	cmp	w8, #0x3
   16edc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ee0:	ldr	w8, [x19, #88]
   16ee4:	cmp	w8, #0x1
   16ee8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16eec:	ldr	w8, [x19, #84]
   16ef0:	cmp	w8, #0x20
   16ef4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ef8:	b	18f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x504c>
   16efc:	ldr	w8, [x19, #48]
   16f00:	cmp	w8, #0x3
   16f04:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16f08:	ldr	w8, [x19, #76]
   16f0c:	cmp	w8, #0x2
   16f10:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16f14:	ldr	x8, [x19]
   16f18:	mov	x0, x19
   16f1c:	ldr	x8, [x8, #56]
   16f20:	blr	x8
   16f24:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16f28:	ldr	x8, [x8]
   16f2c:	mov	w9, w0
   16f30:	lsr	x9, x9, #3
   16f34:	ldrh	w10, [x8, #1270]
   16f38:	cmp	w9, w10
   16f3c:	b.cs	16f60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x305c>  // b.hs, b.nlast
   16f40:	ldr	x8, [x8, #1256]
   16f44:	ldrb	w8, [x8, x9]
   16f48:	and	w9, w0, #0x7
   16f4c:	lsr	w8, w8, w9
   16f50:	tbz	w8, #0, 16f60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x305c>
   16f54:	ldr	w8, [x19, #80]
   16f58:	cmp	w8, #0x20
   16f5c:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   16f60:	mov	w21, #0x70                  	// #112
   16f64:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   16f68:	ldr	x8, [x19]
   16f6c:	mov	x0, x19
   16f70:	ldr	x8, [x8, #40]
   16f74:	blr	x8
   16f78:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16f7c:	ldr	w8, [x19, #48]
   16f80:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16f84:	ldr	x8, [x19, #72]
   16f88:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16f8c:	ldr	w9, [x8]
   16f90:	cmp	w9, #0x1
   16f94:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16f98:	ldr	x8, [x8, #16]
   16f9c:	cmn	x8, #0x10, lsl #12
   16fa0:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   16fa4:	and	x9, x8, #0xffffffffffff
   16fa8:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16fac:	and	x9, x8, #0xffff0000ffffffff
   16fb0:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16fb4:	cmp	x8, #0x10, lsl #12
   16fb8:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   16fbc:	and	x8, x8, #0xffffffff0000ffff
   16fc0:	cbnz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   16fc4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16fc8:	ldr	x8, [x19]
   16fcc:	mov	x0, x19
   16fd0:	ldr	x8, [x8, #40]
   16fd4:	blr	x8
   16fd8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   16fdc:	ldr	w8, [x19, #48]
   16fe0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   16fe4:	ldr	x8, [x19, #72]
   16fe8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   16fec:	ldr	w9, [x8]
   16ff0:	cmp	w9, #0x1
   16ff4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   16ff8:	ldr	x8, [x8, #16]
   16ffc:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17000:	and	x8, x8, #0xffff0000ffffffff
   17004:	cbz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17008:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1700c:	ldr	w8, [x19, #48]
   17010:	cmp	w8, #0x3
   17014:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17018:	ldr	w8, [x19, #76]
   1701c:	cmp	w8, #0x3
   17020:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17024:	ldr	x8, [x19]
   17028:	mov	x0, x19
   1702c:	ldr	x8, [x8, #56]
   17030:	blr	x8
   17034:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17038:	ldr	x8, [x8]
   1703c:	mov	w9, w0
   17040:	lsr	x9, x9, #3
   17044:	ldrh	w10, [x8, #118]
   17048:	cmp	w9, w10
   1704c:	b.cs	17070 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x316c>  // b.hs, b.nlast
   17050:	ldr	x8, [x8, #104]
   17054:	ldrb	w8, [x8, x9]
   17058:	and	w9, w0, #0x7
   1705c:	lsr	w8, w8, w9
   17060:	tbz	w8, #0, 17070 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x316c>
   17064:	ldr	w8, [x19, #80]
   17068:	cmp	w8, #0x20
   1706c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   17070:	mov	w21, #0x67                  	// #103
   17074:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17078:	ldr	x8, [x19]
   1707c:	mov	x0, x19
   17080:	ldr	x8, [x8, #40]
   17084:	blr	x8
   17088:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1708c:	ldr	w8, [x19, #48]
   17090:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17094:	ldr	x8, [x19, #72]
   17098:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1709c:	ldr	w9, [x8]
   170a0:	cmp	w9, #0x1
   170a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   170a8:	ldr	x8, [x8, #16]
   170ac:	cmp	x8, #0x10, lsl #12
   170b0:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   170b4:	and	x9, x8, #0xffffffff0000ffff
   170b8:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   170bc:	and	x9, x8, #0xffff0000ffffffff
   170c0:	mov	x10, #0xffff0000ffffffff    	// #-281470681743361
   170c4:	cmp	x9, x10
   170c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   170cc:	cmn	x8, #0x1
   170d0:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   170d4:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   170d8:	and	x8, x8, #0xffffffffffff
   170dc:	cbnz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   170e0:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   170e4:	ldr	x8, [x19]
   170e8:	mov	x0, x19
   170ec:	ldr	x8, [x8, #40]
   170f0:	blr	x8
   170f4:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   170f8:	ldr	w8, [x19, #48]
   170fc:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17100:	ldr	x8, [x19, #72]
   17104:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17108:	ldr	w9, [x8]
   1710c:	cmp	w9, #0x1
   17110:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17114:	ldr	x8, [x8, #16]
   17118:	tst	x8, #0xffff0000ffffffff
   1711c:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   17120:	cmp	x8, #0x10, lsl #12
   17124:	b.cc	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.lo, b.ul, b.last
   17128:	and	x9, x8, #0xffffffff0000ffff
   1712c:	cbz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17130:	cmn	x8, #0x1
   17134:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   17138:	and	x8, x8, #0xffffffffffff
   1713c:	mov	x9, #0xffffffffffff        	// #281474976710655
   17140:	cmp	x8, x9
   17144:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17148:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1714c:	ldr	w8, [x19, #48]
   17150:	cmp	w8, #0x3
   17154:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17158:	ldr	w8, [x19, #76]
   1715c:	cmp	w8, #0x2
   17160:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17164:	ldr	x8, [x19]
   17168:	mov	x0, x19
   1716c:	ldr	x8, [x8, #56]
   17170:	blr	x8
   17174:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17178:	ldr	x8, [x8]
   1717c:	mov	w9, w0
   17180:	lsr	x9, x9, #3
   17184:	ldrh	w10, [x8, #1270]
   17188:	cmp	w9, w10
   1718c:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   17190:	ldr	x8, [x8, #1256]
   17194:	ldrb	w8, [x8, x9]
   17198:	and	w9, w0, #0x7
   1719c:	lsr	w8, w8, w9
   171a0:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   171a4:	ldr	w8, [x19, #80]
   171a8:	cmp	w8, #0x20
   171ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   171b0:	ldr	w9, [x19, #48]
   171b4:	add	x8, x19, #0x48
   171b8:	cmp	w9, #0x3
   171bc:	b.eq	1a0b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61b4>  // b.none
   171c0:	cmp	w9, #0xa
   171c4:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   171c8:	add	x10, x8, #0x4
   171cc:	b	1a0bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61b8>
   171d0:	ldr	w8, [x19, #48]
   171d4:	cmp	w8, #0x3
   171d8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   171dc:	ldr	w8, [x19, #76]
   171e0:	cmp	w8, #0x1
   171e4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   171e8:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   171ec:	ldr	w8, [x19, #48]
   171f0:	cmp	w8, #0x4
   171f4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   171f8:	ldr	w8, [x19, #76]
   171fc:	cmp	w8, #0x4
   17200:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17204:	ldr	w8, [x19, #88]
   17208:	cmp	w8, #0x2
   1720c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17210:	ldr	w8, [x19, #84]
   17214:	cmp	w8, #0x8
   17218:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1721c:	ldr	w8, [x19, #80]
   17220:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17224:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17228:	ldr	w8, [x19, #48]
   1722c:	cmp	w8, #0x3
   17230:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17234:	ldr	w8, [x19, #76]
   17238:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1723c:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17240:	ldr	w8, [x19, #72]
   17244:	ldr	x9, [x9]
   17248:	lsr	x10, x8, #3
   1724c:	ldrh	w11, [x9, #918]
   17250:	cmp	w10, w11
   17254:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   17258:	ldr	x9, [x9, #904]
   1725c:	and	w8, w8, #0x7
   17260:	ldrb	w9, [x9, x10]
   17264:	lsr	w8, w9, w8
   17268:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1726c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17270:	ldr	w8, [x19, #48]
   17274:	cmp	w8, #0x4
   17278:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1727c:	ldr	w8, [x19, #76]
   17280:	cmp	w8, #0x1
   17284:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17288:	ldr	w8, [x19, #88]
   1728c:	cmp	w8, #0x2
   17290:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17294:	ldr	w8, [x19, #84]
   17298:	cmp	w8, #0x20
   1729c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   172a0:	ldr	w8, [x19, #80]
   172a4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   172a8:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   172ac:	ldr	w8, [x19, #48]
   172b0:	cmp	w8, #0x3
   172b4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   172b8:	ldr	w8, [x19, #76]
   172bc:	cmp	w8, #0x2
   172c0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   172c4:	ldr	x8, [x19]
   172c8:	mov	x0, x19
   172cc:	ldr	x8, [x8, #56]
   172d0:	blr	x8
   172d4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   172d8:	ldr	x8, [x8]
   172dc:	mov	w9, w0
   172e0:	lsr	x9, x9, #3
   172e4:	ldrh	w10, [x8, #1270]
   172e8:	cmp	w9, w10
   172ec:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   172f0:	ldr	x8, [x8, #1256]
   172f4:	ldrb	w8, [x8, x9]
   172f8:	and	w9, w0, #0x7
   172fc:	lsr	w8, w8, w9
   17300:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17304:	ldr	w8, [x19, #80]
   17308:	cmp	w8, #0x40
   1730c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17310:	ldr	w9, [x19, #48]
   17314:	add	x8, x19, #0x48
   17318:	cmp	w9, #0x3
   1731c:	b.eq	1a0dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61d8>  // b.none
   17320:	cmp	w9, #0xa
   17324:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   17328:	add	x10, x8, #0x4
   1732c:	b	1a0e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61dc>
   17330:	ldr	x8, [x19]
   17334:	mov	x0, x19
   17338:	ldr	x8, [x8, #40]
   1733c:	blr	x8
   17340:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17344:	ldr	w8, [x19, #48]
   17348:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1734c:	ldr	x8, [x19, #72]
   17350:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17354:	ldr	w9, [x8]
   17358:	cmp	w9, #0x1
   1735c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17360:	ldr	x8, [x8, #16]
   17364:	cmp	x8, #0x10, lsl #12
   17368:	b.cc	17378 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3474>  // b.lo, b.ul, b.last
   1736c:	add	x9, x8, #0x8, lsl #12
   17370:	lsr	x9, x9, #16
   17374:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17378:	and	x0, x8, #0xffff
   1737c:	add	x2, sp, #0x10
   17380:	mov	w1, #0x10                  	// #16
   17384:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17388:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1738c:	mov	x0, x19
   17390:	bl	1cc64 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   17394:	cbnz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17398:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1739c:	ldr	w8, [x19, #48]
   173a0:	cmp	w8, #0x3
   173a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   173a8:	ldr	w8, [x19, #76]
   173ac:	cmp	w8, #0x2
   173b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   173b4:	ldr	x8, [x19]
   173b8:	mov	x0, x19
   173bc:	ldr	x8, [x8, #56]
   173c0:	blr	x8
   173c4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   173c8:	ldr	x8, [x8]
   173cc:	mov	w9, w0
   173d0:	lsr	x9, x9, #3
   173d4:	ldrh	w10, [x8, #1366]
   173d8:	cmp	w9, w10
   173dc:	b.cs	17400 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34fc>  // b.hs, b.nlast
   173e0:	ldr	x8, [x8, #1352]
   173e4:	ldrb	w8, [x8, x9]
   173e8:	and	w9, w0, #0x7
   173ec:	lsr	w8, w8, w9
   173f0:	tbz	w8, #0, 17400 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34fc>
   173f4:	ldr	w8, [x19, #80]
   173f8:	cmp	w8, #0x20
   173fc:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17400:	mov	w21, #0x8c                  	// #140
   17404:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17408:	ldr	x8, [x19]
   1740c:	mov	x0, x19
   17410:	ldr	x8, [x8, #40]
   17414:	blr	x8
   17418:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1741c:	ldr	w8, [x19, #48]
   17420:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17424:	ldr	x8, [x19, #72]
   17428:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1742c:	ldr	w9, [x8]
   17430:	cmp	w9, #0x1
   17434:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17438:	ldr	x8, [x8, #16]
   1743c:	mvn	w9, w8
   17440:	tst	x9, #0xffff0000
   17444:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17448:	and	x8, x8, #0xffffffff0000ffff
   1744c:	cbnz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17450:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17454:	ldr	w8, [x19, #48]
   17458:	cmp	w8, #0x3
   1745c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17460:	ldr	w8, [x19, #76]
   17464:	cmp	w8, #0x2
   17468:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1746c:	ldr	x8, [x19]
   17470:	mov	x0, x19
   17474:	ldr	x8, [x8, #56]
   17478:	blr	x8
   1747c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17480:	ldr	x8, [x8]
   17484:	mov	w9, w0
   17488:	lsr	x9, x9, #3
   1748c:	ldrh	w10, [x8, #1270]
   17490:	cmp	w9, w10
   17494:	b.cs	174b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35b4>  // b.hs, b.nlast
   17498:	ldr	x8, [x8, #1256]
   1749c:	ldrb	w8, [x8, x9]
   174a0:	and	w9, w0, #0x7
   174a4:	lsr	w8, w8, w9
   174a8:	tbz	w8, #0, 174b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x35b4>
   174ac:	ldr	w8, [x19, #80]
   174b0:	cmp	w8, #0x80
   174b4:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   174b8:	mov	w21, #0x6e                  	// #110
   174bc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   174c0:	ldr	w8, [x19, #48]
   174c4:	cmp	w8, #0x3
   174c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   174cc:	ldr	w8, [x19, #76]
   174d0:	cmp	w8, #0x2
   174d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   174d8:	ldr	x8, [x19]
   174dc:	mov	x0, x19
   174e0:	ldr	x8, [x8, #56]
   174e4:	blr	x8
   174e8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   174ec:	ldr	x8, [x8]
   174f0:	mov	w9, w0
   174f4:	lsr	x9, x9, #3
   174f8:	ldrh	w10, [x8, #1366]
   174fc:	cmp	w9, w10
   17500:	b.cs	17524 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3620>  // b.hs, b.nlast
   17504:	ldr	x8, [x8, #1352]
   17508:	ldrb	w8, [x8, x9]
   1750c:	and	w9, w0, #0x7
   17510:	lsr	w8, w8, w9
   17514:	tbz	w8, #0, 17524 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3620>
   17518:	ldr	w8, [x19, #80]
   1751c:	cmp	w8, #0x10
   17520:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17524:	mov	w21, #0x8b                  	// #139
   17528:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1752c:	mov	x0, x19
   17530:	bl	1d9a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   17534:	cbz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17538:	mov	x0, x19
   1753c:	bl	1df78 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   17540:	cbz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17544:	cmp	w0, #0x1
   17548:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1754c:	mov	w21, #0x5b                  	// #91
   17550:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17554:	ldr	x8, [x19]
   17558:	mov	x0, x19
   1755c:	ldr	x8, [x8, #40]
   17560:	blr	x8
   17564:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17568:	ldr	w8, [x19, #48]
   1756c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17570:	ldr	x8, [x19, #72]
   17574:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17578:	ldr	w9, [x8]
   1757c:	cmp	w9, #0x1
   17580:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17584:	ldr	x8, [x8, #16]
   17588:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1758c:	and	x8, x8, #0xffffffffffff
   17590:	cbz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17594:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17598:	ldr	x8, [x19]
   1759c:	mov	x0, x19
   175a0:	ldr	x8, [x8, #40]
   175a4:	blr	x8
   175a8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   175ac:	ldr	w8, [x19, #48]
   175b0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   175b4:	ldr	x8, [x19, #72]
   175b8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   175bc:	ldr	w9, [x8]
   175c0:	cmp	w9, #0x1
   175c4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   175c8:	ldr	x0, [x8, #16]
   175cc:	add	x2, sp, #0x10
   175d0:	mov	w1, #0x40                  	// #64
   175d4:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   175d8:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   175dc:	mov	x0, x19
   175e0:	bl	1ce50 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   175e4:	cbnz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   175e8:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   175ec:	ldr	x8, [x19]
   175f0:	mov	x0, x19
   175f4:	ldr	x8, [x8, #40]
   175f8:	blr	x8
   175fc:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17600:	ldr	w8, [x19, #48]
   17604:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17608:	ldr	x8, [x19, #72]
   1760c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17610:	ldr	w9, [x8]
   17614:	cmp	w9, #0x1
   17618:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1761c:	ldr	x8, [x8, #16]
   17620:	tst	x8, #0xffffffff
   17624:	b.eq	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.none
   17628:	and	x8, x8, #0xffff
   1762c:	cbz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17630:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17634:	ldr	x8, [x19]
   17638:	mov	x0, x19
   1763c:	ldr	x8, [x8, #40]
   17640:	blr	x8
   17644:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17648:	ldr	w8, [x19, #48]
   1764c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17650:	ldr	x8, [x19, #72]
   17654:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17658:	ldr	w9, [x8]
   1765c:	cmp	w9, #0x1
   17660:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17664:	ldr	x8, [x8, #16]
   17668:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1766c:	and	x8, x8, #0xffffffff0000ffff
   17670:	cbz	x8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17674:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17678:	ldr	w8, [x19, #48]
   1767c:	cmp	w8, #0x4
   17680:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17684:	ldr	w8, [x19, #76]
   17688:	cmp	w8, #0x4
   1768c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17690:	ldr	w8, [x19, #88]
   17694:	cmp	w8, #0x2
   17698:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1769c:	ldr	w8, [x19, #84]
   176a0:	cmp	w8, #0x10
   176a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   176a8:	ldr	w8, [x19, #80]
   176ac:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   176b0:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   176b4:	ldr	w8, [x19, #48]
   176b8:	cmp	w8, #0x4
   176bc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   176c0:	ldr	w8, [x19, #76]
   176c4:	cmp	w8, #0x3
   176c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   176cc:	ldr	w8, [x19, #88]
   176d0:	cmp	w8, #0x2
   176d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   176d8:	ldr	w8, [x19, #84]
   176dc:	cmp	w8, #0x40
   176e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   176e4:	ldr	w8, [x19, #80]
   176e8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   176ec:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   176f0:	ldr	x8, [x19]
   176f4:	mov	x0, x19
   176f8:	ldr	x8, [x8, #40]
   176fc:	blr	x8
   17700:	tbnz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   17704:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17708:	ldr	w8, [x19, #48]
   1770c:	cmp	w8, #0xd
   17710:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   17714:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17718:	ldr	x8, [x19]
   1771c:	mov	x0, x19
   17720:	ldr	x8, [x8, #40]
   17724:	blr	x8
   17728:	tbz	w0, #0, 1776c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3868>
   1772c:	ldr	w8, [x19, #48]
   17730:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17734:	ldr	x8, [x19, #72]
   17738:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1773c:	ldr	w9, [x8]
   17740:	mov	w21, #0x91                  	// #145
   17744:	cmp	w9, #0x1
   17748:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   1774c:	ldr	x0, [x8, #16]
   17750:	add	x2, sp, #0x10
   17754:	mov	w1, #0x40                  	// #64
   17758:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   1775c:	tst	w0, #0x1
   17760:	mov	w8, #0x4                   	// #4
   17764:	csel	w21, w8, w21, ne  // ne = any
   17768:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1776c:	mov	w21, #0x91                  	// #145
   17770:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17774:	ldr	w8, [x19, #48]
   17778:	cmp	w8, #0x3
   1777c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17780:	ldr	w8, [x19, #76]
   17784:	cmp	w8, #0x3
   17788:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1778c:	ldr	x8, [x19]
   17790:	mov	x0, x19
   17794:	ldr	x8, [x8, #56]
   17798:	blr	x8
   1779c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   177a0:	ldr	x8, [x8]
   177a4:	mov	w9, w0
   177a8:	lsr	x9, x9, #3
   177ac:	ldrh	w10, [x8, #118]
   177b0:	cmp	w9, w10
   177b4:	b.cs	177d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38d4>  // b.hs, b.nlast
   177b8:	ldr	x8, [x8, #104]
   177bc:	ldrb	w8, [x8, x9]
   177c0:	and	w9, w0, #0x7
   177c4:	lsr	w8, w8, w9
   177c8:	tbz	w8, #0, 177d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38d4>
   177cc:	ldr	w8, [x19, #80]
   177d0:	cmp	w8, #0x40
   177d4:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   177d8:	mov	w21, #0x65                  	// #101
   177dc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   177e0:	ldr	x8, [x19]
   177e4:	mov	x0, x19
   177e8:	ldr	x8, [x8, #40]
   177ec:	blr	x8
   177f0:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   177f4:	ldr	w8, [x19, #48]
   177f8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   177fc:	ldr	x8, [x19, #72]
   17800:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17804:	ldr	w9, [x8]
   17808:	cmp	w9, #0x1
   1780c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17810:	ldr	x8, [x8, #16]
   17814:	mov	w9, #0x31                  	// #49
   17818:	add	x8, x8, #0x20
   1781c:	b	191e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e4>
   17820:	ldr	x8, [x19]
   17824:	mov	x0, x19
   17828:	ldr	x8, [x8, #40]
   1782c:	blr	x8
   17830:	tbz	w0, #0, 19a48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b44>
   17834:	ldr	w8, [x19, #48]
   17838:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1783c:	ldr	x0, [x19, #72]
   17840:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17844:	ldr	w8, [x0]
   17848:	cmp	w8, #0x1
   1784c:	b.ne	19a40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b3c>  // b.any
   17850:	ldr	x8, [x0, #16]
   17854:	mov	w21, #0x33                  	// #51
   17858:	cmp	x8, #0x2, lsl #12
   1785c:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   17860:	and	x8, x8, #0x8000000000000001
   17864:	cbz	x8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   17868:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1786c:	ldr	x8, [x19]
   17870:	mov	x0, x19
   17874:	ldr	x8, [x8, #40]
   17878:	blr	x8
   1787c:	tbz	w0, #0, 195a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56a0>
   17880:	ldr	x8, [x19, #72]
   17884:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17888:	ldr	w9, [x8]
   1788c:	mov	w21, #0x4                   	// #4
   17890:	cmp	w9, #0x1
   17894:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   17898:	ldr	x8, [x8, #16]
   1789c:	mov	x9, #0x100000000           	// #4294967296
   178a0:	mov	x10, #0x1ffff0000           	// #8589869056
   178a4:	movk	x10, #0xf001
   178a8:	tst	x8, #0xfff
   178ac:	add	x8, x8, x9
   178b0:	ccmp	x8, x10, #0x2, eq  // eq = none
   178b4:	mov	w8, #0x29                  	// #41
   178b8:	csel	w21, w21, w8, cc  // cc = lo, ul, last
   178bc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   178c0:	ldr	w8, [x19, #48]
   178c4:	cmp	w8, #0x3
   178c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   178cc:	ldr	w8, [x19, #76]
   178d0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   178d4:	ldr	x8, [x19]
   178d8:	mov	x0, x19
   178dc:	ldr	x8, [x8, #56]
   178e0:	blr	x8
   178e4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   178e8:	ldr	x8, [x8]
   178ec:	mov	w9, w0
   178f0:	lsr	x9, x9, #3
   178f4:	ldrh	w10, [x8, #534]
   178f8:	cmp	w9, w10
   178fc:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   17900:	ldr	x8, [x8, #520]
   17904:	ldrb	w8, [x8, x9]
   17908:	and	w9, w0, #0x7
   1790c:	lsr	w8, w8, w9
   17910:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17914:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17918:	ldr	x8, [x19]
   1791c:	mov	x0, x19
   17920:	ldr	x8, [x8, #40]
   17924:	blr	x8
   17928:	tbz	w0, #0, 19a58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b54>
   1792c:	ldr	w8, [x19, #48]
   17930:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17934:	ldr	x0, [x19, #72]
   17938:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1793c:	ldr	w8, [x0]
   17940:	cmp	w8, #0x1
   17944:	b.ne	19a50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b4c>  // b.any
   17948:	ldr	x8, [x0, #16]
   1794c:	mov	w21, #0x2b                  	// #43
   17950:	cmp	x8, #0x10, lsl #12
   17954:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   17958:	and	x8, x8, #0x800000000000000f
   1795c:	cbz	x8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   17960:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17964:	ldr	w8, [x19, #48]
   17968:	cmp	w8, #0x4
   1796c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17970:	ldr	w8, [x19, #76]
   17974:	cmp	w8, #0x1
   17978:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1797c:	ldr	w8, [x19, #88]
   17980:	cmp	w8, #0x1
   17984:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17988:	ldr	w8, [x19, #84]
   1798c:	cmp	w8, #0x8
   17990:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17994:	b	17e5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f58>
   17998:	ldr	w8, [x19, #48]
   1799c:	cmp	w8, #0x4
   179a0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179a4:	ldr	w8, [x19, #76]
   179a8:	cmp	w8, #0x3
   179ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179b0:	ldr	w8, [x19, #88]
   179b4:	cmp	w8, #0x1
   179b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179bc:	ldr	w8, [x19, #84]
   179c0:	cmp	w8, #0x10
   179c4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179c8:	b	18f50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x504c>
   179cc:	ldr	w8, [x19, #48]
   179d0:	cmp	w8, #0x4
   179d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179d8:	ldr	w8, [x19, #76]
   179dc:	cmp	w8, #0x3
   179e0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179e4:	ldr	w8, [x19, #88]
   179e8:	cmp	w8, #0x1
   179ec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179f0:	ldr	w8, [x19, #84]
   179f4:	cmp	w8, #0x40
   179f8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   179fc:	b	18a54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4b50>
   17a00:	ldr	w8, [x19, #48]
   17a04:	cmp	w8, #0x3
   17a08:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17a0c:	ldr	w8, [x19, #76]
   17a10:	cmp	w8, #0x2
   17a14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17a18:	ldr	x8, [x19]
   17a1c:	mov	x0, x19
   17a20:	ldr	x8, [x8, #56]
   17a24:	blr	x8
   17a28:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17a2c:	ldr	x8, [x8]
   17a30:	mov	w9, w0
   17a34:	lsr	x9, x9, #3
   17a38:	ldrh	w10, [x8, #1270]
   17a3c:	cmp	w9, w10
   17a40:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   17a44:	ldr	x8, [x8, #1256]
   17a48:	ldrb	w8, [x8, x9]
   17a4c:	and	w9, w0, #0x7
   17a50:	lsr	w8, w8, w9
   17a54:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17a58:	ldr	w8, [x19, #80]
   17a5c:	cmp	w8, #0x20
   17a60:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17a64:	ldr	w9, [x19, #48]
   17a68:	add	x8, x19, #0x48
   17a6c:	cmp	w9, #0x3
   17a70:	b.eq	1a0fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61f8>  // b.none
   17a74:	cmp	w9, #0xa
   17a78:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   17a7c:	add	x10, x8, #0x4
   17a80:	b	1a100 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61fc>
   17a84:	ldr	w8, [x19, #48]
   17a88:	cmp	w8, #0x3
   17a8c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17a90:	ldr	w8, [x19, #76]
   17a94:	cmp	w8, #0x2
   17a98:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17a9c:	ldr	x8, [x19]
   17aa0:	mov	x0, x19
   17aa4:	ldr	x8, [x8, #56]
   17aa8:	blr	x8
   17aac:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17ab0:	ldr	x8, [x8]
   17ab4:	mov	w9, w0
   17ab8:	lsr	x9, x9, #3
   17abc:	ldrh	w10, [x8, #1270]
   17ac0:	cmp	w9, w10
   17ac4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   17ac8:	ldr	x8, [x8, #1256]
   17acc:	ldrb	w8, [x8, x9]
   17ad0:	and	w9, w0, #0x7
   17ad4:	lsr	w8, w8, w9
   17ad8:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17adc:	mov	x8, x19
   17ae0:	ldr	w9, [x8, #80]!
   17ae4:	cmp	w9, #0x20
   17ae8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17aec:	ldr	w10, [x19, #48]
   17af0:	add	x9, x19, #0x48
   17af4:	cmp	w10, #0x3
   17af8:	b.eq	1a11c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6218>  // b.none
   17afc:	cmp	w10, #0xa
   17b00:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   17b04:	add	x11, x9, #0x4
   17b08:	b	1a120 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x621c>
   17b0c:	ldr	w8, [x19, #48]
   17b10:	cmp	w8, #0x4
   17b14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b18:	ldr	w8, [x19, #76]
   17b1c:	cmp	w8, #0x2
   17b20:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b24:	ldr	w8, [x19, #88]
   17b28:	cmp	w8, #0x1
   17b2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b30:	ldr	w8, [x19, #84]
   17b34:	cmp	w8, #0x40
   17b38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b3c:	ldr	w8, [x19, #80]
   17b40:	cmp	w8, #0x1
   17b44:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17b48:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17b4c:	ldr	w8, [x19, #48]
   17b50:	cmp	w8, #0x4
   17b54:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b58:	ldr	w8, [x19, #76]
   17b5c:	cmp	w8, #0x3
   17b60:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b64:	ldr	w8, [x19, #88]
   17b68:	cmp	w8, #0x1
   17b6c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b70:	ldr	w8, [x19, #84]
   17b74:	cmp	w8, #0x10
   17b78:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b7c:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   17b80:	ldr	w8, [x19, #48]
   17b84:	cmp	w8, #0x4
   17b88:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b8c:	ldr	w8, [x19, #76]
   17b90:	cmp	w8, #0x2
   17b94:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17b98:	ldr	w8, [x19, #88]
   17b9c:	cmp	w8, #0x1
   17ba0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17ba4:	ldr	w8, [x19, #84]
   17ba8:	cmp	w8, #0x10
   17bac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17bb0:	ldr	w8, [x19, #80]
   17bb4:	cmp	w8, #0x4
   17bb8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17bbc:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17bc0:	ldr	w8, [x19, #48]
   17bc4:	cmp	w8, #0x4
   17bc8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17bcc:	ldr	w8, [x19, #76]
   17bd0:	cmp	w8, #0x3
   17bd4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17bd8:	ldr	w8, [x19, #88]
   17bdc:	cmp	w8, #0x1
   17be0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17be4:	ldr	w8, [x19, #84]
   17be8:	cmp	w8, #0x20
   17bec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17bf0:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   17bf4:	ldr	w8, [x19, #48]
   17bf8:	cmp	w8, #0x4
   17bfc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17c00:	ldr	w8, [x19, #76]
   17c04:	cmp	w8, #0x2
   17c08:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17c0c:	ldr	w8, [x19, #88]
   17c10:	cmp	w8, #0x2
   17c14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17c18:	ldr	w8, [x19, #84]
   17c1c:	cmp	w8, #0x8
   17c20:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17c24:	ldr	w8, [x19, #80]
   17c28:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17c2c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17c30:	ldr	x8, [x19]
   17c34:	mov	x0, x19
   17c38:	ldr	x8, [x8, #40]
   17c3c:	blr	x8
   17c40:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17c44:	ldr	w8, [x19, #48]
   17c48:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17c4c:	ldr	x8, [x19, #72]
   17c50:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17c54:	ldr	w9, [x8]
   17c58:	cmp	w9, #0x1
   17c5c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17c60:	ldr	x8, [x8, #16]
   17c64:	lsr	x9, x8, #32
   17c68:	cbz	x9, 17c7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d78>
   17c6c:	mov	w9, #0x80000000            	// #-2147483648
   17c70:	add	x9, x8, x9
   17c74:	lsr	x9, x9, #32
   17c78:	cbnz	x9, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17c7c:	and	x0, x8, #0xffffffff
   17c80:	add	x2, sp, #0x10
   17c84:	mov	w1, #0x20                  	// #32
   17c88:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17c8c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17c90:	mov	x0, x19
   17c94:	bl	1cd60 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   17c98:	cbnz	w0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17c9c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17ca0:	ldr	w8, [x19, #48]
   17ca4:	cmp	w8, #0x3
   17ca8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17cac:	ldr	w8, [x19, #76]
   17cb0:	cmp	w8, #0x2
   17cb4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17cb8:	ldr	x8, [x19]
   17cbc:	mov	x0, x19
   17cc0:	ldr	x8, [x8, #56]
   17cc4:	blr	x8
   17cc8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17ccc:	ldr	x8, [x8]
   17cd0:	mov	w9, w0
   17cd4:	lsr	x9, x9, #3
   17cd8:	ldrh	w10, [x8, #1334]
   17cdc:	cmp	w9, w10
   17ce0:	b.cs	17d04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e00>  // b.hs, b.nlast
   17ce4:	ldr	x8, [x8, #1320]
   17ce8:	ldrb	w8, [x8, x9]
   17cec:	and	w9, w0, #0x7
   17cf0:	lsr	w8, w8, w9
   17cf4:	tbz	w8, #0, 17d04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e00>
   17cf8:	ldr	w8, [x19, #80]
   17cfc:	cmp	w8, #0x40
   17d00:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17d04:	mov	w21, #0x90                  	// #144
   17d08:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17d0c:	ldr	w8, [x19, #48]
   17d10:	cmp	w8, #0x4
   17d14:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d18:	ldr	w8, [x19, #76]
   17d1c:	cmp	w8, #0x1
   17d20:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d24:	ldr	w8, [x19, #88]
   17d28:	cmp	w8, #0x2
   17d2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d30:	ldr	w8, [x19, #84]
   17d34:	cmp	w8, #0x10
   17d38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d3c:	ldr	w8, [x19, #80]
   17d40:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17d44:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17d48:	ldr	w8, [x19, #48]
   17d4c:	cmp	w8, #0x3
   17d50:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d54:	ldr	w8, [x19, #76]
   17d58:	cmp	w8, #0x2
   17d5c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17d60:	ldr	x8, [x19]
   17d64:	mov	x0, x19
   17d68:	ldr	x8, [x8, #56]
   17d6c:	blr	x8
   17d70:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17d74:	ldr	x8, [x8]
   17d78:	mov	w9, w0
   17d7c:	lsr	x9, x9, #3
   17d80:	ldrh	w10, [x8, #1334]
   17d84:	cmp	w9, w10
   17d88:	b.cs	17dac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ea8>  // b.hs, b.nlast
   17d8c:	ldr	x8, [x8, #1320]
   17d90:	ldrb	w8, [x8, x9]
   17d94:	and	w9, w0, #0x7
   17d98:	lsr	w8, w8, w9
   17d9c:	tbz	w8, #0, 17dac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ea8>
   17da0:	ldr	w8, [x19, #80]
   17da4:	cmp	w8, #0x10
   17da8:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17dac:	mov	w21, #0x8e                  	// #142
   17db0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17db4:	ldr	w8, [x19, #48]
   17db8:	cmp	w8, #0x4
   17dbc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17dc0:	ldr	w8, [x19, #76]
   17dc4:	cmp	w8, #0x4
   17dc8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17dcc:	ldr	w8, [x19, #88]
   17dd0:	cmp	w8, #0x2
   17dd4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17dd8:	ldr	w8, [x19, #84]
   17ddc:	cmp	w8, #0x40
   17de0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17de4:	ldr	w8, [x19, #80]
   17de8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17dec:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17df0:	ldr	w8, [x19, #48]
   17df4:	cmp	w8, #0x4
   17df8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17dfc:	ldr	w8, [x19, #76]
   17e00:	cmp	w8, #0x4
   17e04:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e08:	ldr	w8, [x19, #88]
   17e0c:	cmp	w8, #0x2
   17e10:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e14:	ldr	w8, [x19, #84]
   17e18:	cmp	w8, #0x20
   17e1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e20:	ldr	w8, [x19, #80]
   17e24:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17e28:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17e2c:	ldr	w8, [x19, #48]
   17e30:	cmp	w8, #0x4
   17e34:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e38:	ldr	w8, [x19, #76]
   17e3c:	cmp	w8, #0x2
   17e40:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e44:	ldr	w8, [x19, #88]
   17e48:	cmp	w8, #0x1
   17e4c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e50:	ldr	w8, [x19, #84]
   17e54:	cmp	w8, #0x8
   17e58:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e5c:	ldr	w8, [x19, #80]
   17e60:	cmp	w8, #0x10
   17e64:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   17e68:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17e6c:	ldr	w8, [x19, #48]
   17e70:	cmp	w8, #0x4
   17e74:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e78:	ldr	w8, [x19, #76]
   17e7c:	cmp	w8, #0x2
   17e80:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e84:	ldr	w8, [x19, #88]
   17e88:	cmp	w8, #0x2
   17e8c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e90:	ldr	w8, [x19, #84]
   17e94:	cmp	w8, #0x10
   17e98:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17e9c:	ldr	w8, [x19, #80]
   17ea0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17ea4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17ea8:	ldr	x8, [x19]
   17eac:	mov	x0, x19
   17eb0:	ldr	x8, [x8, #40]
   17eb4:	blr	x8
   17eb8:	tbz	w0, #0, 198c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59bc>
   17ebc:	ldr	w8, [x19, #48]
   17ec0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17ec4:	ldr	x8, [x19, #72]
   17ec8:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17ecc:	ldr	w10, [x8]
   17ed0:	mov	w9, #0x1e                  	// #30
   17ed4:	mov	w21, #0x1e                  	// #30
   17ed8:	cmp	w10, #0x1
   17edc:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   17ee0:	ldr	x8, [x8, #16]
   17ee4:	cmp	x8, #0x10, lsl #12
   17ee8:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   17eec:	ldr	x8, [x19]
   17ef0:	mov	x0, x19
   17ef4:	ldr	x8, [x8, #40]
   17ef8:	blr	x8
   17efc:	tbz	w0, #0, 198c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59c4>
   17f00:	ldr	w8, [x19, #48]
   17f04:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   17f08:	ldr	x8, [x19, #72]
   17f0c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   17f10:	ldr	w9, [x8]
   17f14:	mov	w21, #0x1f                  	// #31
   17f18:	cmp	w9, #0x1
   17f1c:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   17f20:	ldr	x8, [x8, #16]
   17f24:	cmp	x8, #0x8
   17f28:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   17f2c:	ldr	w8, [x19, #48]
   17f30:	cmp	w8, #0x3
   17f34:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17f38:	ldr	w8, [x19, #76]
   17f3c:	cmp	w8, #0x2
   17f40:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17f44:	ldr	x8, [x19]
   17f48:	mov	x0, x19
   17f4c:	ldr	x8, [x8, #56]
   17f50:	blr	x8
   17f54:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17f58:	ldr	x8, [x8]
   17f5c:	mov	w9, w0
   17f60:	lsr	x9, x9, #3
   17f64:	ldrh	w10, [x8, #1270]
   17f68:	cmp	w9, w10
   17f6c:	b.cs	17f8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4088>  // b.hs, b.nlast
   17f70:	ldr	x8, [x8, #1256]
   17f74:	ldrb	w8, [x8, x9]
   17f78:	and	w9, w0, #0x7
   17f7c:	lsr	w8, w8, w9
   17f80:	tbz	w8, #0, 17f8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4088>
   17f84:	ldr	w8, [x19, #80]
   17f88:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   17f8c:	mov	w21, #0x6d                  	// #109
   17f90:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   17f94:	ldr	w8, [x19, #48]
   17f98:	cmp	w8, #0x1
   17f9c:	b.ne	198d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59cc>  // b.any
   17fa0:	ldr	w8, [x19, #80]
   17fa4:	ldr	x0, [x19, #72]
   17fa8:	cbz	w8, 19b84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c80>
   17fac:	cmp	w8, #0xc
   17fb0:	b.eq	19b84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c80>  // b.none
   17fb4:	b	19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>
   17fb8:	ldr	w8, [x19, #48]
   17fbc:	cmp	w8, #0x4
   17fc0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17fc4:	ldr	w8, [x19, #76]
   17fc8:	cmp	w8, #0x1
   17fcc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17fd0:	ldr	w8, [x19, #80]
   17fd4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   17fd8:	b	1822c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4328>
   17fdc:	ldr	w8, [x19, #48]
   17fe0:	cmp	w8, #0x4
   17fe4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17fe8:	ldr	w8, [x19, #76]
   17fec:	cmp	w8, #0x2
   17ff0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   17ff4:	ldr	w8, [x19, #88]
   17ff8:	cmp	w8, #0x1
   17ffc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18000:	ldr	w8, [x19, #84]
   18004:	cmp	w8, #0x20
   18008:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1800c:	ldr	w8, [x19, #80]
   18010:	cmp	w8, #0x4
   18014:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18018:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1801c:	ldr	w8, [x19, #48]
   18020:	cmp	w8, #0x4
   18024:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18028:	ldr	w8, [x19, #76]
   1802c:	cmp	w8, #0x1
   18030:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18034:	ldr	w8, [x19, #88]
   18038:	cmp	w8, #0x1
   1803c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18040:	ldr	w8, [x19, #84]
   18044:	cmp	w8, #0x10
   18048:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1804c:	ldr	w8, [x19, #80]
   18050:	cmp	w8, #0x8
   18054:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   18058:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1805c:	ldr	w8, [x19, #48]
   18060:	cmp	w8, #0x3
   18064:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18068:	ldr	w8, [x19, #76]
   1806c:	cmp	w8, #0x2
   18070:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18074:	ldr	x8, [x19]
   18078:	mov	x0, x19
   1807c:	ldr	x8, [x8, #56]
   18080:	blr	x8
   18084:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18088:	ldr	x8, [x8]
   1808c:	mov	w9, w0
   18090:	lsr	x9, x9, #3
   18094:	ldrh	w10, [x8, #1270]
   18098:	cmp	w9, w10
   1809c:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   180a0:	ldr	x8, [x8, #1256]
   180a4:	ldrb	w8, [x8, x9]
   180a8:	and	w9, w0, #0x7
   180ac:	lsr	w8, w8, w9
   180b0:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   180b4:	mov	x8, x19
   180b8:	ldr	w9, [x8, #80]!
   180bc:	cmp	w9, #0x40
   180c0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   180c4:	ldr	w10, [x19, #48]
   180c8:	add	x9, x19, #0x48
   180cc:	cmp	w10, #0x3
   180d0:	b.eq	1a148 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6244>  // b.none
   180d4:	cmp	w10, #0xa
   180d8:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   180dc:	add	x11, x9, #0x4
   180e0:	b	1a14c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6248>
   180e4:	ldr	w8, [x19, #48]
   180e8:	cmp	w8, #0x3
   180ec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   180f0:	ldr	w8, [x19, #76]
   180f4:	cmp	w8, #0x2
   180f8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   180fc:	ldr	x8, [x19]
   18100:	mov	x0, x19
   18104:	ldr	x8, [x8, #56]
   18108:	blr	x8
   1810c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18110:	ldr	x8, [x8]
   18114:	mov	w9, w0
   18118:	lsr	x9, x9, #3
   1811c:	ldrh	w10, [x8, #1270]
   18120:	cmp	w9, w10
   18124:	b.cs	18148 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4244>  // b.hs, b.nlast
   18128:	ldr	x8, [x8, #1256]
   1812c:	ldrb	w8, [x8, x9]
   18130:	and	w9, w0, #0x7
   18134:	lsr	w8, w8, w9
   18138:	tbz	w8, #0, 18148 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4244>
   1813c:	ldr	w8, [x19, #80]
   18140:	cmp	w8, #0x8
   18144:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   18148:	mov	w21, #0x8a                  	// #138
   1814c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18150:	mov	x0, x19
   18154:	bl	1cd60 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   18158:	cbz	w0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   1815c:	cmp	w0, #0x1
   18160:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18164:	mov	w21, #0x57                  	// #87
   18168:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1816c:	ldr	x8, [x19]
   18170:	mov	x0, x19
   18174:	ldr	x8, [x8, #40]
   18178:	blr	x8
   1817c:	tbz	w0, #0, 195a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56a0>
   18180:	ldr	w8, [x19, #48]
   18184:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18188:	ldr	x8, [x19, #72]
   1818c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18190:	ldr	w9, [x8]
   18194:	mov	w21, #0x4                   	// #4
   18198:	cmp	w9, #0x1
   1819c:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   181a0:	ldr	x8, [x8, #16]
   181a4:	mov	w9, #0x8000000             	// #134217728
   181a8:	mov	w10, #0xfffd                	// #65533
   181ac:	movk	w10, #0xfff, lsl #16
   181b0:	and	x11, x8, #0x3
   181b4:	add	x8, x8, x9
   181b8:	cmp	x8, x10
   181bc:	ccmp	x11, #0x0, #0x0, cc  // cc = lo, ul, last
   181c0:	b	19598 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5694>
   181c4:	ldr	x8, [x19]
   181c8:	mov	x0, x19
   181cc:	ldr	x8, [x8, #40]
   181d0:	blr	x8
   181d4:	tbz	w0, #0, 191f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52f4>
   181d8:	ldr	w8, [x19, #48]
   181dc:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   181e0:	ldr	x8, [x19, #72]
   181e4:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   181e8:	ldr	w10, [x8]
   181ec:	mov	w9, #0x1d                  	// #29
   181f0:	mov	w21, #0x1d                  	// #29
   181f4:	cmp	w10, #0x1
   181f8:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   181fc:	ldr	x8, [x8, #16]
   18200:	and	x8, x8, #0xffffffffffffffe0
   18204:	cmp	x8, #0x20
   18208:	b	18558 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4654>
   1820c:	ldr	w8, [x19, #48]
   18210:	cmp	w8, #0x4
   18214:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18218:	ldr	w8, [x19, #76]
   1821c:	cmp	w8, #0x3
   18220:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18224:	ldr	w8, [x19, #80]
   18228:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1822c:	ldr	w8, [x19, #88]
   18230:	cmp	w8, #0x1
   18234:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18238:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1823c:	ldr	w8, [x19, #48]
   18240:	cmp	w8, #0x3
   18244:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18248:	ldr	w8, [x19, #76]
   1824c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18250:	ldr	x8, [x19]
   18254:	mov	x0, x19
   18258:	ldr	x8, [x8, #56]
   1825c:	blr	x8
   18260:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18264:	ldr	x8, [x8]
   18268:	mov	w9, w0
   1826c:	lsr	x9, x9, #3
   18270:	ldrh	w10, [x8, #54]
   18274:	cmp	w9, w10
   18278:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1827c:	ldr	x8, [x8, #40]
   18280:	ldrb	w8, [x8, x9]
   18284:	and	w9, w0, #0x7
   18288:	lsr	w8, w8, w9
   1828c:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   18290:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18294:	ldr	w8, [x19, #48]
   18298:	cmp	w8, #0x3
   1829c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   182a0:	ldr	w8, [x19, #76]
   182a4:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   182a8:	ldr	x8, [x19]
   182ac:	mov	x0, x19
   182b0:	ldr	x8, [x8, #56]
   182b4:	blr	x8
   182b8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   182bc:	ldr	x8, [x8]
   182c0:	mov	w9, w0
   182c4:	lsr	x9, x9, #3
   182c8:	ldrh	w10, [x8, #182]
   182cc:	cmp	w9, w10
   182d0:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   182d4:	ldr	x8, [x8, #168]
   182d8:	ldrb	w8, [x8, x9]
   182dc:	and	w9, w0, #0x7
   182e0:	lsr	w8, w8, w9
   182e4:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   182e8:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   182ec:	ldr	w8, [x19, #48]
   182f0:	cmp	w8, #0x3
   182f4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   182f8:	ldr	w8, [x19, #76]
   182fc:	cmp	w8, #0x2
   18300:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18304:	ldr	x8, [x19]
   18308:	mov	x0, x19
   1830c:	ldr	x8, [x8, #56]
   18310:	blr	x8
   18314:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18318:	ldr	x8, [x8]
   1831c:	mov	w9, w0
   18320:	lsr	x9, x9, #3
   18324:	ldrh	w10, [x8, #1270]
   18328:	cmp	w9, w10
   1832c:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   18330:	ldr	x8, [x8, #1256]
   18334:	ldrb	w8, [x8, x9]
   18338:	and	w9, w0, #0x7
   1833c:	lsr	w8, w8, w9
   18340:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18344:	ldr	w8, [x19, #80]
   18348:	cmp	w8, #0x40
   1834c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18350:	ldr	w9, [x19, #48]
   18354:	add	x8, x19, #0x48
   18358:	cmp	w9, #0x3
   1835c:	b.eq	1a174 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6270>  // b.none
   18360:	cmp	w9, #0xa
   18364:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   18368:	add	x10, x8, #0x4
   1836c:	b	1a178 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6274>
   18370:	ldr	w8, [x19, #48]
   18374:	cmp	w8, #0x4
   18378:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1837c:	ldr	w8, [x19, #76]
   18380:	cmp	w8, #0x1
   18384:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18388:	ldr	w8, [x19, #88]
   1838c:	cmp	w8, #0x1
   18390:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18394:	ldr	w8, [x19, #84]
   18398:	cmp	w8, #0x40
   1839c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   183a0:	b	18a54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4b50>
   183a4:	ldr	w8, [x19, #48]
   183a8:	cmp	w8, #0x3
   183ac:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   183b0:	ldr	w8, [x19, #76]
   183b4:	cmp	w8, #0x2
   183b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   183bc:	ldr	x8, [x19]
   183c0:	mov	x0, x19
   183c4:	ldr	x8, [x8, #56]
   183c8:	blr	x8
   183cc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   183d0:	ldr	x8, [x8]
   183d4:	mov	w9, w0
   183d8:	lsr	x9, x9, #3
   183dc:	ldrh	w10, [x8, #1270]
   183e0:	cmp	w9, w10
   183e4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   183e8:	ldr	x8, [x8, #1256]
   183ec:	ldrb	w8, [x8, x9]
   183f0:	and	w9, w0, #0x7
   183f4:	lsr	w8, w8, w9
   183f8:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   183fc:	ldr	w8, [x19, #80]
   18400:	cmp	w8, #0x20
   18404:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18408:	ldr	w9, [x19, #48]
   1840c:	add	x8, x19, #0x48
   18410:	cmp	w9, #0x3
   18414:	b.eq	1a1ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62a8>  // b.none
   18418:	cmp	w9, #0xa
   1841c:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   18420:	add	x10, x8, #0x4
   18424:	b	1a1b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62ac>
   18428:	ldr	w8, [x19, #48]
   1842c:	cmp	w8, #0x3
   18430:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18434:	ldr	w8, [x19, #76]
   18438:	cmp	w8, #0x2
   1843c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18440:	ldr	x8, [x19]
   18444:	mov	x0, x19
   18448:	ldr	x8, [x8, #56]
   1844c:	blr	x8
   18450:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18454:	ldr	x8, [x8]
   18458:	mov	w9, w0
   1845c:	lsr	x9, x9, #3
   18460:	ldrh	w10, [x8, #1270]
   18464:	cmp	w9, w10
   18468:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   1846c:	ldr	x8, [x8, #1256]
   18470:	ldrb	w8, [x8, x9]
   18474:	and	w9, w0, #0x7
   18478:	lsr	w8, w8, w9
   1847c:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18480:	ldr	w8, [x19, #80]
   18484:	cmp	w8, #0x40
   18488:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1848c:	ldr	w9, [x19, #48]
   18490:	add	x8, x19, #0x48
   18494:	cmp	w9, #0x3
   18498:	b.eq	1a1e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62e0>  // b.none
   1849c:	cmp	w9, #0xa
   184a0:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   184a4:	add	x10, x8, #0x4
   184a8:	b	1a1e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62e4>
   184ac:	ldr	w8, [x19, #48]
   184b0:	cmp	w8, #0x4
   184b4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   184b8:	ldr	w8, [x19, #76]
   184bc:	cmp	w8, #0x2
   184c0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   184c4:	ldr	w8, [x19, #88]
   184c8:	cmp	w8, #0x1
   184cc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   184d0:	ldr	w8, [x19, #84]
   184d4:	cmp	w8, #0x20
   184d8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   184dc:	ldr	w8, [x19, #80]
   184e0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   184e4:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   184e8:	ldr	w8, [x19, #48]
   184ec:	cmp	w8, #0x3
   184f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   184f4:	ldr	w8, [x19, #76]
   184f8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   184fc:	ldr	x8, [x19]
   18500:	mov	x0, x19
   18504:	ldr	x8, [x8, #56]
   18508:	blr	x8
   1850c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18510:	ldr	x8, [x8]
   18514:	mov	w9, w0
   18518:	lsr	x9, x9, #3
   1851c:	ldrh	w10, [x8, #182]
   18520:	cmp	w9, w10
   18524:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   18528:	ldr	x8, [x8, #168]
   1852c:	ldrb	w8, [x8, x9]
   18530:	and	w9, w0, #0x7
   18534:	lsr	w8, w8, w9
   18538:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1853c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18540:	ldr	w8, [x19, #48]
   18544:	cmp	w8, #0x5
   18548:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1854c:	ldr	w8, [x19, #72]
   18550:	mov	w9, #0x28                  	// #40
   18554:	cmp	w8, #0x1
   18558:	mov	w8, #0x4                   	// #4
   1855c:	csel	w21, w8, w9, eq  // eq = none
   18560:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18564:	ldr	w8, [x19, #48]
   18568:	cmp	w8, #0x3
   1856c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18570:	ldr	w8, [x19, #76]
   18574:	cmp	w8, #0x2
   18578:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1857c:	ldr	x8, [x19]
   18580:	mov	x0, x19
   18584:	ldr	x8, [x8, #56]
   18588:	blr	x8
   1858c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18590:	ldr	x8, [x8]
   18594:	mov	w9, w0
   18598:	lsr	x9, x9, #3
   1859c:	ldrh	w10, [x8, #1270]
   185a0:	cmp	w9, w10
   185a4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   185a8:	ldr	x8, [x8, #1256]
   185ac:	ldrb	w8, [x8, x9]
   185b0:	and	w9, w0, #0x7
   185b4:	lsr	w8, w8, w9
   185b8:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   185bc:	ldr	w8, [x19, #80]
   185c0:	cmp	w8, #0x40
   185c4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   185c8:	ldr	w9, [x19, #48]
   185cc:	add	x8, x19, #0x48
   185d0:	cmp	w9, #0x3
   185d4:	b.eq	1a21c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6318>  // b.none
   185d8:	cmp	w9, #0xa
   185dc:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   185e0:	add	x10, x8, #0x4
   185e4:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x631c>
   185e8:	ldr	w8, [x19, #48]
   185ec:	cmp	w8, #0x5
   185f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   185f4:	ldr	w8, [x19, #72]
   185f8:	mov	w9, #0x24                  	// #36
   185fc:	cmp	w8, #0x2
   18600:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   18604:	ldr	x8, [x19]
   18608:	mov	x0, x19
   1860c:	ldr	x8, [x8, #40]
   18610:	blr	x8
   18614:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18618:	ldr	w8, [x19, #48]
   1861c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18620:	ldr	x8, [x19, #72]
   18624:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18628:	ldr	w9, [x8]
   1862c:	cmp	w9, #0x1
   18630:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18634:	ldr	x8, [x8, #16]
   18638:	add	x8, x8, #0x100
   1863c:	cmp	x8, #0x1ff
   18640:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   18644:	ldr	x8, [x19]
   18648:	mov	x0, x19
   1864c:	ldr	x8, [x8, #40]
   18650:	blr	x8
   18654:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   18658:	ldr	w8, [x19, #48]
   1865c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18660:	ldr	x0, [x19, #72]
   18664:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18668:	ldr	w8, [x0]
   1866c:	cmp	w8, #0x1
   18670:	b.ne	19b00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bfc>  // b.any
   18674:	ldr	x8, [x0, #16]
   18678:	mov	w21, #0x4                   	// #4
   1867c:	cmp	x8, #0x8, lsl #12
   18680:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   18684:	and	x8, x8, #0x8000000000000007
   18688:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1868c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18690:	ldr	w8, [x19, #48]
   18694:	cmp	w8, #0x3
   18698:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1869c:	ldr	w8, [x19, #76]
   186a0:	cmp	w8, #0x2
   186a4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   186a8:	ldr	x8, [x19]
   186ac:	mov	x0, x19
   186b0:	ldr	x8, [x8, #56]
   186b4:	blr	x8
   186b8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   186bc:	ldr	x8, [x8]
   186c0:	mov	w9, w0
   186c4:	lsr	x9, x9, #3
   186c8:	ldrh	w10, [x8, #1270]
   186cc:	cmp	w9, w10
   186d0:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   186d4:	ldr	x8, [x8, #1256]
   186d8:	ldrb	w8, [x8, x9]
   186dc:	and	w9, w0, #0x7
   186e0:	lsr	w8, w8, w9
   186e4:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   186e8:	ldr	w8, [x19, #80]
   186ec:	cmp	w8, #0x40
   186f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   186f4:	ldr	w9, [x19, #48]
   186f8:	add	x8, x19, #0x48
   186fc:	cmp	w9, #0x3
   18700:	b.eq	1a240 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x633c>  // b.none
   18704:	cmp	w9, #0xa
   18708:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   1870c:	add	x10, x8, #0x4
   18710:	b	1a244 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6340>
   18714:	ldr	w8, [x19, #48]
   18718:	cmp	w8, #0x4
   1871c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18720:	ldr	w8, [x19, #76]
   18724:	cmp	w8, #0x4
   18728:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1872c:	ldr	w8, [x19, #88]
   18730:	cmp	w8, #0x1
   18734:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18738:	ldr	w8, [x19, #84]
   1873c:	cmp	w8, #0x10
   18740:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18744:	ldr	w8, [x19, #80]
   18748:	cmp	w8, #0x4
   1874c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   18750:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18754:	ldr	w8, [x19, #48]
   18758:	cmp	w8, #0x3
   1875c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18760:	ldr	w8, [x19, #76]
   18764:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18768:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1876c:	ldr	w8, [x19, #72]
   18770:	ldr	x9, [x9]
   18774:	lsr	x10, x8, #3
   18778:	ldrh	w11, [x9, #406]
   1877c:	cmp	w10, w11
   18780:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   18784:	ldr	x9, [x9, #392]
   18788:	and	w8, w8, #0x7
   1878c:	ldrb	w9, [x9, x10]
   18790:	lsr	w8, w9, w8
   18794:	tbnz	w8, #0, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   18798:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1879c:	ldr	w8, [x19, #48]
   187a0:	cmp	w8, #0x1
   187a4:	b.ne	198f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59f4>  // b.any
   187a8:	add	x8, sp, #0x10
   187ac:	mov	x0, x19
   187b0:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   187b4:	ldrb	w8, [sp, #32]
   187b8:	cbz	w8, 187e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48dc>
   187bc:	ldr	x8, [sp, #16]
   187c0:	ldr	w9, [sp, #24]
   187c4:	strb	wzr, [sp, #32]
   187c8:	lsl	x8, x8, x9
   187cc:	cmp	x8, #0x100
   187d0:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   187d4:	and	x9, x8, #0xff00
   187d8:	cmp	x9, x8
   187dc:	b.eq	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.none
   187e0:	mov	w21, #0x54                  	// #84
   187e4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   187e8:	ldr	w8, [x19, #48]
   187ec:	cmp	w8, #0x3
   187f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   187f4:	ldr	w8, [x19, #76]
   187f8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   187fc:	ldr	x8, [x19]
   18800:	mov	x0, x19
   18804:	ldr	x8, [x8, #56]
   18808:	blr	x8
   1880c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18810:	ldr	x8, [x8]
   18814:	mov	w9, w0
   18818:	lsr	x9, x9, #3
   1881c:	ldrh	w10, [x8, #598]
   18820:	cmp	w9, w10
   18824:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   18828:	ldr	x8, [x8, #584]
   1882c:	ldrb	w8, [x8, x9]
   18830:	and	w9, w0, #0x7
   18834:	lsr	w8, w8, w9
   18838:	tbnz	w8, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   1883c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18840:	ldr	w8, [x19, #48]
   18844:	cmp	w8, #0x5
   18848:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1884c:	ldr	w8, [x19, #72]
   18850:	mov	w9, #0x27                  	// #39
   18854:	cmp	w8, #0x8
   18858:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   1885c:	ldr	w8, [x19, #48]
   18860:	cmp	w8, #0x1
   18864:	b.ne	1992c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a28>  // b.any
   18868:	add	x8, sp, #0x10
   1886c:	mov	x0, x19
   18870:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   18874:	ldrb	w8, [sp, #32]
   18878:	cbz	w8, 188a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x499c>
   1887c:	ldr	x8, [sp, #16]
   18880:	ldr	w9, [sp, #24]
   18884:	strb	wzr, [sp, #32]
   18888:	lsl	x8, x8, x9
   1888c:	cmp	x8, #0x100
   18890:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   18894:	and	x9, x8, #0xff00
   18898:	cmp	x9, x8
   1889c:	b.eq	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.none
   188a0:	mov	w21, #0x53                  	// #83
   188a4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   188a8:	ldr	w8, [x19, #48]
   188ac:	cmp	w8, #0x4
   188b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   188b4:	ldr	w8, [x19, #76]
   188b8:	cmp	w8, #0x1
   188bc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   188c0:	ldr	w8, [x19, #88]
   188c4:	cmp	w8, #0x1
   188c8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   188cc:	ldr	w8, [x19, #84]
   188d0:	cmp	w8, #0x40
   188d4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   188d8:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   188dc:	ldr	w8, [x19, #48]
   188e0:	cmp	w8, #0xa
   188e4:	b.ne	19c58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d54>  // b.any
   188e8:	ldr	w9, [x19, #72]
   188ec:	sub	w8, w9, #0x5
   188f0:	cmp	w8, #0x8
   188f4:	b.cs	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d50>  // b.hs, b.nlast
   188f8:	ldr	w9, [x19, #76]
   188fc:	cmp	w9, #0x4
   18900:	b.hi	19c58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d54>  // b.pmore
   18904:	cmp	w8, #0x7
   18908:	b.cs	19c58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d54>  // b.hs, b.nlast
   1890c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   18910:	add	x9, x9, #0x0
   18914:	ldr	w0, [x9, w8, sxtw #2]
   18918:	b	19b50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c4c>
   1891c:	ldr	w8, [x19, #48]
   18920:	cmp	w8, #0x3
   18924:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18928:	ldr	w8, [x19, #76]
   1892c:	cmp	w8, #0x2
   18930:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18934:	ldr	x8, [x19]
   18938:	mov	x0, x19
   1893c:	ldr	x8, [x8, #56]
   18940:	blr	x8
   18944:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18948:	ldr	x8, [x8]
   1894c:	mov	w9, w0
   18950:	lsr	x9, x9, #3
   18954:	ldrh	w10, [x8, #1270]
   18958:	cmp	w9, w10
   1895c:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   18960:	ldr	x8, [x8, #1256]
   18964:	ldrb	w8, [x8, x9]
   18968:	and	w9, w0, #0x7
   1896c:	lsr	w8, w8, w9
   18970:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18974:	ldr	w8, [x19, #80]
   18978:	cmp	w8, #0x20
   1897c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18980:	ldr	w9, [x19, #48]
   18984:	add	x8, x19, #0x48
   18988:	cmp	w9, #0x3
   1898c:	b.eq	1a278 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6374>  // b.none
   18990:	cmp	w9, #0xa
   18994:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   18998:	add	x10, x8, #0x4
   1899c:	b	1a27c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6378>
   189a0:	ldr	w8, [x19, #48]
   189a4:	cmp	w8, #0x3
   189a8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   189ac:	ldr	w8, [x19, #76]
   189b0:	cmp	w8, #0x2
   189b4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   189b8:	ldr	x8, [x19]
   189bc:	mov	x0, x19
   189c0:	ldr	x8, [x8, #56]
   189c4:	blr	x8
   189c8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   189cc:	ldr	x8, [x8]
   189d0:	mov	w9, w0
   189d4:	lsr	x9, x9, #3
   189d8:	ldrh	w10, [x8, #1270]
   189dc:	cmp	w9, w10
   189e0:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   189e4:	ldr	x8, [x8, #1256]
   189e8:	ldrb	w8, [x8, x9]
   189ec:	and	w9, w0, #0x7
   189f0:	lsr	w8, w8, w9
   189f4:	tbz	w8, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   189f8:	ldr	w8, [x19, #80]
   189fc:	cmp	w8, #0x20
   18a00:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a04:	ldr	w9, [x19, #48]
   18a08:	add	x8, x19, #0x48
   18a0c:	cmp	w9, #0x3
   18a10:	b.eq	1a298 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6394>  // b.none
   18a14:	cmp	w9, #0xa
   18a18:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   18a1c:	add	x10, x8, #0x4
   18a20:	b	1a29c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6398>
   18a24:	ldr	w8, [x19, #48]
   18a28:	cmp	w8, #0x4
   18a2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a30:	ldr	w8, [x19, #76]
   18a34:	cmp	w8, #0x1
   18a38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a3c:	ldr	w8, [x19, #88]
   18a40:	cmp	w8, #0x1
   18a44:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a48:	ldr	w8, [x19, #84]
   18a4c:	cmp	w8, #0x20
   18a50:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a54:	ldr	w8, [x19, #80]
   18a58:	cmp	w8, #0x2
   18a5c:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   18a60:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18a64:	ldr	x8, [x19]
   18a68:	mov	x0, x19
   18a6c:	ldr	x8, [x8, #40]
   18a70:	blr	x8
   18a74:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18a78:	ldr	w8, [x19, #48]
   18a7c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18a80:	ldr	x8, [x19, #72]
   18a84:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18a88:	ldr	w9, [x8]
   18a8c:	cmp	w9, #0x1
   18a90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18a94:	ldr	x8, [x8, #16]
   18a98:	mov	w9, #0x62                  	// #98
   18a9c:	cmp	x8, #0x20
   18aa0:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   18aa4:	ldr	w8, [x19, #48]
   18aa8:	cmp	w8, #0x1
   18aac:	b.ne	19960 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a5c>  // b.any
   18ab0:	add	x8, sp, #0x10
   18ab4:	mov	x0, x19
   18ab8:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   18abc:	ldrb	w8, [sp, #32]
   18ac0:	cbz	w8, 18ae8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4be4>
   18ac4:	ldr	w8, [sp, #24]
   18ac8:	cbnz	w8, 18ae4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4be0>
   18acc:	ldr	x8, [sp, #16]
   18ad0:	cmp	x8, #0x100
   18ad4:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   18ad8:	add	x8, x8, #0x80
   18adc:	cmp	x8, #0x100
   18ae0:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   18ae4:	strb	wzr, [sp, #32]
   18ae8:	mov	w21, #0x59                  	// #89
   18aec:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18af0:	ldr	w8, [x19, #48]
   18af4:	cmp	w8, #0x4
   18af8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18afc:	ldr	w8, [x19, #76]
   18b00:	cmp	w8, #0x4
   18b04:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b08:	ldr	w8, [x19, #88]
   18b0c:	cmp	w8, #0x1
   18b10:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b14:	ldr	w8, [x19, #84]
   18b18:	cmp	w8, #0x20
   18b1c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b20:	b	18c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d60>
   18b24:	ldr	w8, [x19, #48]
   18b28:	cmp	w8, #0x3
   18b2c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b30:	ldr	w8, [x19, #76]
   18b34:	cmp	w8, #0x1
   18b38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b3c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   18b40:	mov	x0, x19
   18b44:	bl	1cc64 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   18b48:	cbz	w0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   18b4c:	cmp	w0, #0x1
   18b50:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18b54:	mov	w21, #0x56                  	// #86
   18b58:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18b5c:	ldr	x8, [x19]
   18b60:	mov	x0, x19
   18b64:	ldr	x8, [x8, #40]
   18b68:	blr	x8
   18b6c:	tbz	w0, #0, 19a68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b64>
   18b70:	ldr	w8, [x19, #48]
   18b74:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18b78:	ldr	x0, [x19, #72]
   18b7c:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18b80:	ldr	w8, [x0]
   18b84:	cmp	w8, #0x1
   18b88:	b.ne	19a60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b5c>  // b.any
   18b8c:	ldr	x8, [x0, #16]
   18b90:	cmp	x8, #0x1, lsl #12
   18b94:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   18b98:	b	19a68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b64>
   18b9c:	ldr	x8, [x19]
   18ba0:	mov	x0, x19
   18ba4:	ldr	x8, [x8, #40]
   18ba8:	blr	x8
   18bac:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18bb0:	ldr	w8, [x19, #48]
   18bb4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18bb8:	ldr	x8, [x19, #72]
   18bbc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18bc0:	ldr	w9, [x8]
   18bc4:	cmp	w9, #0x1
   18bc8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18bcc:	ldr	x8, [x8, #16]
   18bd0:	mov	w9, #0x4                   	// #4
   18bd4:	cmp	x8, #0x7e
   18bd8:	and	x8, x8, #0x1
   18bdc:	cset	w10, hi  // hi = pmore
   18be0:	orr	x8, x8, x10
   18be4:	cmp	x8, #0x1
   18be8:	mov	w8, #0x36                  	// #54
   18bec:	csel	w21, w8, w9, eq  // eq = none
   18bf0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18bf4:	ldr	w8, [x19, #48]
   18bf8:	cmp	w8, #0x1
   18bfc:	b.ne	19994 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a90>  // b.any
   18c00:	add	x8, sp, #0x10
   18c04:	mov	x0, x19
   18c08:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   18c0c:	ldrb	w8, [sp, #32]
   18c10:	cbz	w8, 18c2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d28>
   18c14:	ldr	w8, [sp, #24]
   18c18:	cbnz	w8, 18c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d24>
   18c1c:	ldr	x8, [sp, #16]
   18c20:	cmp	x8, #0x100
   18c24:	b.cc	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.lo, b.ul, b.last
   18c28:	strb	wzr, [sp, #32]
   18c2c:	mov	w21, #0x55                  	// #85
   18c30:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18c34:	ldr	w8, [x19, #48]
   18c38:	cmp	w8, #0x4
   18c3c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c40:	ldr	w8, [x19, #76]
   18c44:	cmp	w8, #0x1
   18c48:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c4c:	ldr	w8, [x19, #88]
   18c50:	cmp	w8, #0x1
   18c54:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c58:	ldr	w8, [x19, #84]
   18c5c:	cmp	w8, #0x10
   18c60:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c64:	ldr	w8, [x19, #80]
   18c68:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18c6c:	b	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   18c70:	ldr	w8, [x19, #48]
   18c74:	cmp	w8, #0x5
   18c78:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c7c:	ldr	w8, [x19, #72]
   18c80:	mov	w9, #0x26                  	// #38
   18c84:	cmp	w8, #0x4
   18c88:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   18c8c:	ldr	w8, [x19, #48]
   18c90:	cmp	w8, #0x5
   18c94:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18c98:	ldr	w8, [x19, #72]
   18c9c:	mov	w9, #0x61                  	// #97
   18ca0:	cmp	w8, #0x8
   18ca4:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   18ca8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   18cac:	add	x8, x8, #0x0
   18cb0:	ldr	q0, [x8]
   18cb4:	ldur	q1, [x8, #12]
   18cb8:	add	x1, sp, #0x10
   18cbc:	mov	w2, #0x7                   	// #7
   18cc0:	mov	x0, x19
   18cc4:	str	q0, [sp, #16]
   18cc8:	stur	q1, [sp, #28]
   18ccc:	bl	1d700 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>
   18cd0:	tbnz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   18cd4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18cd8:	ldr	w8, [x19, #48]
   18cdc:	cmp	w8, #0xa
   18ce0:	b.ne	199c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ac4>  // b.any
   18ce4:	ldr	w9, [x19, #72]
   18ce8:	mov	w8, #0x50                  	// #80
   18cec:	mov	w21, #0x50                  	// #80
   18cf0:	cbnz	w9, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18cf4:	ldr	w9, [x19, #76]
   18cf8:	tst	w9, #0xffffffef
   18cfc:	mov	w9, #0x4                   	// #4
   18d00:	csel	w21, w9, w8, eq  // eq = none
   18d04:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18d08:	ldr	w8, [x19, #48]
   18d0c:	cmp	w8, #0x8
   18d10:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   18d14:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18d18:	ldr	w8, [x19, #48]
   18d1c:	cmp	w8, #0xa
   18d20:	b.ne	19c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d60>  // b.any
   18d24:	ldr	w8, [x19, #72]
   18d28:	sub	w9, w8, #0x5
   18d2c:	cmp	w9, #0x8
   18d30:	b.cs	19c60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d5c>  // b.hs, b.nlast
   18d34:	ldr	w9, [x19, #76]
   18d38:	cmp	w9, #0x4
   18d3c:	b.hi	19c64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d60>  // b.pmore
   18d40:	cmp	w8, #0xc
   18d44:	mov	w10, #0x4e                  	// #78
   18d48:	b.eq	18d54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e50>  // b.none
   18d4c:	mov	w21, #0x4e                  	// #78
   18d50:	cbnz	w8, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18d54:	cmp	w9, #0x0
   18d58:	ccmp	w9, #0x3, #0x4, ne  // ne = any
   18d5c:	b	19540 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x563c>
   18d60:	ldr	w8, [x19, #48]
   18d64:	cmp	w8, #0xa
   18d68:	b.ne	19c70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d6c>  // b.any
   18d6c:	ldr	w8, [x19, #72]
   18d70:	sub	w9, w8, #0x5
   18d74:	cmp	w9, #0x8
   18d78:	b.cs	19c6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d68>  // b.hs, b.nlast
   18d7c:	ldr	w9, [x19, #76]
   18d80:	cmp	w9, #0x4
   18d84:	b.hi	19c70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d6c>  // b.pmore
   18d88:	cmp	w8, #0xb
   18d8c:	mov	w21, #0x49                  	// #73
   18d90:	b.eq	18d9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e98>  // b.none
   18d94:	cmp	w8, #0x7
   18d98:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   18d9c:	cmp	w9, #0x0
   18da0:	ccmp	w9, #0x3, #0x4, ne  // ne = any
   18da4:	b	191a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x529c>
   18da8:	ldr	w8, [x19, #48]
   18dac:	cmp	w8, #0xa
   18db0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18db4:	ldr	w8, [x19, #72]
   18db8:	cmp	w8, #0x4
   18dbc:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   18dc0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18dc4:	ldr	w8, [x19, #76]
   18dc8:	tst	w8, #0xfffffff7
   18dcc:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18dd0:	ror	w8, w8, #3
   18dd4:	cmp	w8, #0x4
   18dd8:	b.cc	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.lo, b.ul, b.last
   18ddc:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18de0:	ldr	w8, [x19, #48]
   18de4:	cmp	w8, #0x5
   18de8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18dec:	ldr	w8, [x19, #72]
   18df0:	mov	w9, #0x60                  	// #96
   18df4:	cmp	w8, #0x40
   18df8:	b	191ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e8>
   18dfc:	ldr	w8, [x19, #48]
   18e00:	cmp	w8, #0xa
   18e04:	b.ne	19cc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dbc>  // b.any
   18e08:	ldr	w8, [x19, #72]
   18e0c:	mov	w21, #0x7                   	// #7
   18e10:	sub	w9, w8, #0x5
   18e14:	cmp	w9, #0x8
   18e18:	b.cs	19c78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d74>  // b.hs, b.nlast
   18e1c:	ldr	w8, [x19, #76]
   18e20:	cmp	w8, #0x4
   18e24:	mov	w8, #0x4                   	// #4
   18e28:	csel	w21, w21, w8, hi  // hi = pmore
   18e2c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18e30:	ldr	w8, [x19, #48]
   18e34:	cmp	w8, #0x3
   18e38:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18e3c:	ldr	w8, [x19, #76]
   18e40:	cmp	w8, #0x3
   18e44:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18e48:	ldr	x8, [x19]
   18e4c:	mov	x0, x19
   18e50:	ldr	x8, [x8, #56]
   18e54:	blr	x8
   18e58:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18e5c:	ldr	x8, [x8]
   18e60:	mov	w9, w0
   18e64:	lsr	x9, x9, #3
   18e68:	ldrh	w10, [x8, #86]
   18e6c:	cmp	w9, w10
   18e70:	b.cs	18e94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f90>  // b.hs, b.nlast
   18e74:	ldr	x8, [x8, #72]
   18e78:	ldrb	w8, [x8, x9]
   18e7c:	and	w9, w0, #0x7
   18e80:	lsr	w8, w8, w9
   18e84:	tbz	w8, #0, 18e94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f90>
   18e88:	ldr	w8, [x19, #80]
   18e8c:	cmp	w8, #0x20
   18e90:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   18e94:	mov	w21, #0x6c                  	// #108
   18e98:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18e9c:	ldr	x8, [x19]
   18ea0:	mov	x0, x19
   18ea4:	ldr	x8, [x8, #40]
   18ea8:	blr	x8
   18eac:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18eb0:	ldr	w8, [x19, #48]
   18eb4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18eb8:	ldr	x8, [x19, #72]
   18ebc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18ec0:	ldr	w9, [x8]
   18ec4:	cmp	w9, #0x1
   18ec8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18ecc:	ldr	x8, [x8, #16]
   18ed0:	mov	w9, #0x7f1                 	// #2033
   18ed4:	mov	w10, #0x2d                  	// #45
   18ed8:	add	x11, x8, #0x400
   18edc:	tst	x8, #0xf
   18ee0:	b	193d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54cc>
   18ee4:	ldr	w8, [x19, #48]
   18ee8:	cmp	w8, #0xa
   18eec:	b.ne	18f18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5014>  // b.any
   18ef0:	ldr	w9, [x19, #72]
   18ef4:	mov	w8, #0x9                   	// #9
   18ef8:	mov	w21, #0x9                   	// #9
   18efc:	cmp	w9, #0x2
   18f00:	b.hi	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.pmore
   18f04:	ldr	w9, [x19, #76]
   18f08:	cmp	w9, #0x20
   18f0c:	mov	w9, #0x4                   	// #4
   18f10:	csel	w21, w9, w8, cc  // cc = lo, ul, last
   18f14:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18f18:	mov	w21, #0x9                   	// #9
   18f1c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18f20:	ldr	w8, [x19, #48]
   18f24:	cmp	w8, #0x4
   18f28:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f2c:	ldr	w8, [x19, #76]
   18f30:	cmp	w8, #0x1
   18f34:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f38:	ldr	w8, [x19, #88]
   18f3c:	cmp	w8, #0x1
   18f40:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f44:	ldr	w8, [x19, #84]
   18f48:	cmp	w8, #0x10
   18f4c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f50:	ldr	w8, [x19, #80]
   18f54:	cmp	w8, #0x4
   18f58:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f5c:	mov	w21, #0x4                   	// #4
   18f60:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   18f64:	ldr	x8, [x19]
   18f68:	mov	x0, x19
   18f6c:	ldr	x8, [x8, #40]
   18f70:	blr	x8
   18f74:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18f78:	ldr	w8, [x19, #48]
   18f7c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18f80:	ldr	x8, [x19, #72]
   18f84:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18f88:	ldr	w9, [x8]
   18f8c:	cmp	w9, #0x1
   18f90:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18f94:	ldr	x8, [x8, #16]
   18f98:	mov	w9, #0x4                   	// #4
   18f9c:	add	x10, x8, #0x10
   18fa0:	cmp	x10, #0x1e
   18fa4:	and	x8, x8, #0x1
   18fa8:	cset	w10, hi  // hi = pmore
   18fac:	orr	x8, x8, x10
   18fb0:	cmp	x8, #0x1
   18fb4:	mov	w8, #0x34                  	// #52
   18fb8:	csel	w0, w8, w9, eq  // eq = none
   18fbc:	b	19b50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c4c>
   18fc0:	ldr	x8, [x19]
   18fc4:	mov	x0, x19
   18fc8:	ldr	x8, [x8, #40]
   18fcc:	blr	x8
   18fd0:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   18fd4:	ldr	w8, [x19, #48]
   18fd8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   18fdc:	ldr	x8, [x19, #72]
   18fe0:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   18fe4:	ldr	w9, [x8]
   18fe8:	cmp	w9, #0x1
   18fec:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   18ff0:	ldr	x8, [x8, #16]
   18ff4:	mov	w9, #0x3f1                 	// #1009
   18ff8:	mov	w10, #0x2f                  	// #47
   18ffc:	tst	x8, #0xf
   19000:	ccmp	x8, x9, #0x2, eq  // eq = none
   19004:	b	193d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54d0>
   19008:	ldr	w8, [x19, #48]
   1900c:	cmp	w8, #0x4
   19010:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19014:	ldr	w8, [x19, #76]
   19018:	cmp	w8, #0x4
   1901c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19020:	ldr	w8, [x19, #88]
   19024:	cmp	w8, #0x1
   19028:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1902c:	ldr	w8, [x19, #84]
   19030:	cmp	w8, #0x8
   19034:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19038:	ldr	w8, [x19, #80]
   1903c:	cmp	w8, #0x10
   19040:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   19044:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19048:	ldr	w8, [x19, #48]
   1904c:	cmp	w8, #0xe
   19050:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   19054:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19058:	ldr	x8, [x19]
   1905c:	mov	x0, x19
   19060:	ldr	x8, [x8, #40]
   19064:	blr	x8
   19068:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1906c:	ldr	w8, [x19, #48]
   19070:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19074:	ldr	x8, [x19, #72]
   19078:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1907c:	ldr	w9, [x8]
   19080:	cmp	w9, #0x1
   19084:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19088:	ldr	x8, [x8, #16]
   1908c:	add	x8, x8, #0x100
   19090:	cmp	x8, #0x1ff
   19094:	b.hi	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.pmore
   19098:	ldr	x8, [x19]
   1909c:	mov	x0, x19
   190a0:	ldr	x8, [x8, #40]
   190a4:	blr	x8
   190a8:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   190ac:	ldr	w8, [x19, #48]
   190b0:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   190b4:	ldr	x0, [x19, #72]
   190b8:	cbz	x0, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   190bc:	ldr	w8, [x0]
   190c0:	cmp	w8, #0x1
   190c4:	b.ne	19b00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bfc>  // b.any
   190c8:	ldr	x8, [x0, #16]
   190cc:	mov	w21, #0x4                   	// #4
   190d0:	cmp	x8, #0x2, lsl #12
   190d4:	b.ge	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.tcont
   190d8:	and	x8, x8, #0x8000000000000001
   190dc:	cbz	x8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   190e0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   190e4:	ldr	w8, [x19, #48]
   190e8:	cmp	w8, #0xa
   190ec:	b.ne	19c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d80>  // b.any
   190f0:	ldr	w8, [x19, #72]
   190f4:	sub	w9, w8, #0x5
   190f8:	cmp	w9, #0x8
   190fc:	b.cs	19c80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d7c>  // b.hs, b.nlast
   19100:	ldr	w9, [x19, #76]
   19104:	cmp	w9, #0x4
   19108:	b.hi	19c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d80>  // b.pmore
   1910c:	cmp	w8, #0xc
   19110:	mov	w21, #0x4b                  	// #75
   19114:	b.eq	1911c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5218>  // b.none
   19118:	cbnz	w8, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1911c:	tst	w9, #0xfffffffb
   19120:	b	191a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x529c>
   19124:	ldr	x8, [x19]
   19128:	mov	x0, x19
   1912c:	ldr	x8, [x8, #40]
   19130:	blr	x8
   19134:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19138:	ldr	w8, [x19, #48]
   1913c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19140:	ldr	x8, [x19, #72]
   19144:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19148:	ldr	w9, [x8]
   1914c:	cmp	w9, #0x1
   19150:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19154:	ldr	x8, [x8, #16]
   19158:	mov	w9, #0x32                  	// #50
   1915c:	b	191e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52e4>
   19160:	ldr	w8, [x19, #48]
   19164:	cmp	w8, #0xa
   19168:	b.ne	19c90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d8c>  // b.any
   1916c:	ldr	w8, [x19, #72]
   19170:	sub	w9, w8, #0x5
   19174:	cmp	w9, #0x8
   19178:	b.cs	19c8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d88>  // b.hs, b.nlast
   1917c:	ldr	w9, [x19, #76]
   19180:	cmp	w9, #0x4
   19184:	b.hi	19c90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d8c>  // b.pmore
   19188:	cmp	w8, #0xb
   1918c:	mov	w21, #0x48                  	// #72
   19190:	b.eq	1919c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5298>  // b.none
   19194:	cmp	w8, #0x7
   19198:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   1919c:	tst	w9, #0xfffffffd
   191a0:	mov	w8, #0x4                   	// #4
   191a4:	csel	w21, w8, w21, eq  // eq = none
   191a8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   191ac:	ldr	x8, [x19]
   191b0:	mov	x0, x19
   191b4:	ldr	x8, [x8, #40]
   191b8:	blr	x8
   191bc:	tbz	w0, #0, 191f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52f4>
   191c0:	ldr	w8, [x19, #48]
   191c4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   191c8:	ldr	x8, [x19, #72]
   191cc:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   191d0:	ldr	w10, [x8]
   191d4:	mov	w9, #0x1d                  	// #29
   191d8:	mov	w21, #0x1d                  	// #29
   191dc:	cmp	w10, #0x1
   191e0:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   191e4:	ldr	x8, [x8, #16]
   191e8:	cmp	x8, #0x40
   191ec:	mov	w8, #0x4                   	// #4
   191f0:	csel	w21, w8, w9, cc  // cc = lo, ul, last
   191f4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   191f8:	mov	w21, #0x1d                  	// #29
   191fc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19200:	ldr	w8, [x19, #48]
   19204:	cmp	w8, #0x3
   19208:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   1920c:	ldr	w8, [x19, #76]
   19210:	cmp	w8, #0x3
   19214:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19218:	ldr	x8, [x19]
   1921c:	mov	x0, x19
   19220:	ldr	x8, [x8, #56]
   19224:	blr	x8
   19228:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1922c:	ldr	x8, [x8]
   19230:	mov	w9, w0
   19234:	lsr	x9, x9, #3
   19238:	ldrh	w10, [x8, #86]
   1923c:	cmp	w9, w10
   19240:	b.cs	19260 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x535c>  // b.hs, b.nlast
   19244:	ldr	x8, [x8, #72]
   19248:	ldrb	w8, [x8, x9]
   1924c:	and	w9, w0, #0x7
   19250:	lsr	w8, w8, w9
   19254:	tbz	w8, #0, 19260 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x535c>
   19258:	ldr	w8, [x19, #80]
   1925c:	cbz	w8, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   19260:	mov	w21, #0x68                  	// #104
   19264:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19268:	ldr	w8, [x19, #48]
   1926c:	cmp	w8, #0x3
   19270:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19274:	ldr	w8, [x19, #76]
   19278:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1927c:	ldr	x8, [x19]
   19280:	mov	x0, x19
   19284:	ldr	x8, [x8, #56]
   19288:	blr	x8
   1928c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19290:	ldr	x8, [x8]
   19294:	mov	w9, w0
   19298:	lsr	x9, x9, #3
   1929c:	ldrh	w10, [x8, #630]
   192a0:	cmp	w9, w10
   192a4:	b.cs	1a3c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64c4>  // b.hs, b.nlast
   192a8:	ldr	x8, [x8, #616]
   192ac:	ldrb	w8, [x8, x9]
   192b0:	and	w9, w0, #0x7
   192b4:	lsr	w8, w8, w9
   192b8:	tbz	w8, #0, 1a3c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64c4>
   192bc:	ldr	w9, [x19, #48]
   192c0:	add	x8, x19, #0x48
   192c4:	cmp	w9, #0x3
   192c8:	b.eq	19d7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e78>  // b.none
   192cc:	cmp	w9, #0xa
   192d0:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   192d4:	mov	x10, x8
   192d8:	b	19d80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e7c>
   192dc:	ldr	w8, [x19, #48]
   192e0:	cmp	w8, #0xa
   192e4:	b.ne	19c9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d98>  // b.any
   192e8:	ldr	w8, [x19, #72]
   192ec:	sub	w9, w8, #0x5
   192f0:	cmp	w9, #0x8
   192f4:	b.cs	19c98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d94>  // b.hs, b.nlast
   192f8:	ldr	w9, [x19, #76]
   192fc:	cmp	w9, #0x4
   19300:	b.hi	19c9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d98>  // b.pmore
   19304:	cmp	w8, #0xc
   19308:	mov	w10, #0x4f                  	// #79
   1930c:	b.eq	19318 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5414>  // b.none
   19310:	mov	w21, #0x4f                  	// #79
   19314:	cbnz	w8, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19318:	cmp	w9, #0x0
   1931c:	b	19540 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x563c>
   19320:	ldr	x8, [x19]
   19324:	mov	x0, x19
   19328:	ldr	x8, [x8, #40]
   1932c:	blr	x8
   19330:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19334:	ldr	w8, [x19, #48]
   19338:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1933c:	ldr	x8, [x19, #72]
   19340:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19344:	ldr	w9, [x8]
   19348:	cmp	w9, #0x1
   1934c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19350:	ldr	x8, [x8, #16]
   19354:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   19358:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1935c:	movk	x9, #0xaaab
   19360:	movk	x10, #0x2aaa, lsl #48
   19364:	mov	x11, #0x5555555555555555    	// #6148914691236517205
   19368:	add	x14, x8, #0x18
   1936c:	madd	x8, x8, x9, x10
   19370:	mov	w12, #0x2e                  	// #46
   19374:	cmp	x8, x11
   19378:	mov	w13, #0x37                  	// #55
   1937c:	ccmp	x14, x12, #0x2, cc  // cc = lo, ul, last
   19380:	mov	w8, #0x4                   	// #4
   19384:	csel	w21, w8, w13, cc  // cc = lo, ul, last
   19388:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1938c:	ldr	x8, [x19]
   19390:	mov	x0, x19
   19394:	ldr	x8, [x8, #40]
   19398:	blr	x8
   1939c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   193a0:	ldr	w8, [x19, #48]
   193a4:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   193a8:	ldr	x8, [x19, #72]
   193ac:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   193b0:	ldr	w9, [x8]
   193b4:	cmp	w9, #0x1
   193b8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   193bc:	ldr	x8, [x8, #16]
   193c0:	mov	w9, #0x3d                  	// #61
   193c4:	mov	w10, #0x39                  	// #57
   193c8:	add	x11, x8, #0x20
   193cc:	tst	x8, #0x3
   193d0:	ccmp	x11, x9, #0x2, eq  // eq = none
   193d4:	mov	w8, #0x4                   	// #4
   193d8:	csel	w21, w8, w10, cc  // cc = lo, ul, last
   193dc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   193e0:	ldr	w8, [x19, #48]
   193e4:	cmp	w8, #0xa
   193e8:	b.ne	19ca8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5da4>  // b.any
   193ec:	ldr	w8, [x19, #72]
   193f0:	sub	w9, w8, #0x5
   193f4:	cmp	w9, #0x8
   193f8:	b.cs	19ca4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5da0>  // b.hs, b.nlast
   193fc:	ldr	w9, [x19, #76]
   19400:	cmp	w9, #0x4
   19404:	b.hi	19ca8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5da4>  // b.pmore
   19408:	cmp	w8, #0xc
   1940c:	mov	w21, #0x4c                  	// #76
   19410:	b.eq	19418 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5514>  // b.none
   19414:	cbnz	w8, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19418:	cmp	w9, #0x2
   1941c:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   19420:	ldr	w8, [x19, #48]
   19424:	mov	w9, #0xe                   	// #14
   19428:	cmp	w8, #0x2
   1942c:	mov	w8, #0x4                   	// #4
   19430:	csel	w21, w8, w9, eq  // eq = none
   19434:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19438:	ldr	w8, [x19, #48]
   1943c:	cmp	w8, #0x3
   19440:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19444:	ldr	w8, [x19, #76]
   19448:	cmp	w8, #0x3
   1944c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19450:	ldr	x8, [x19]
   19454:	mov	x0, x19
   19458:	ldr	x8, [x8, #56]
   1945c:	blr	x8
   19460:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19464:	ldr	x8, [x8]
   19468:	mov	w9, w0
   1946c:	lsr	x9, x9, #3
   19470:	ldrh	w10, [x8, #118]
   19474:	cmp	w9, w10
   19478:	b.cs	19498 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5594>  // b.hs, b.nlast
   1947c:	ldr	x8, [x8, #104]
   19480:	ldrb	w8, [x8, x9]
   19484:	and	w9, w0, #0x7
   19488:	lsr	w8, w8, w9
   1948c:	tbz	w8, #0, 19498 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5594>
   19490:	ldr	w8, [x19, #80]
   19494:	cbz	w8, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   19498:	mov	w21, #0x63                  	// #99
   1949c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   194a0:	ldr	x8, [x19]
   194a4:	mov	x0, x19
   194a8:	ldr	x8, [x8, #40]
   194ac:	blr	x8
   194b0:	tbz	w0, #0, 195a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56a0>
   194b4:	ldr	w8, [x19, #48]
   194b8:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   194bc:	ldr	x9, [x19, #72]
   194c0:	cbz	x9, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   194c4:	ldr	w10, [x9]
   194c8:	mov	w8, #0x4                   	// #4
   194cc:	mov	w21, #0x4                   	// #4
   194d0:	cmp	w10, #0x1
   194d4:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   194d8:	ldr	x9, [x9, #16]
   194dc:	mov	w10, #0xfffd                	// #65533
   194e0:	movk	w10, #0x1f, lsl #16
   194e4:	and	x11, x9, #0x3
   194e8:	add	x9, x9, #0x100, lsl #12
   194ec:	cmp	x9, x10
   194f0:	ccmp	x11, #0x0, #0x0, cc  // cc = lo, ul, last
   194f4:	mov	w9, #0x29                  	// #41
   194f8:	csel	w21, w8, w9, eq  // eq = none
   194fc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19500:	ldr	w8, [x19, #48]
   19504:	cmp	w8, #0xa
   19508:	b.ne	19cb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5db0>  // b.any
   1950c:	ldr	w8, [x19, #72]
   19510:	sub	w9, w8, #0x5
   19514:	cmp	w9, #0x8
   19518:	b.cs	19cb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dac>  // b.hs, b.nlast
   1951c:	ldr	w9, [x19, #76]
   19520:	cmp	w9, #0x4
   19524:	b.hi	19cb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5db0>  // b.pmore
   19528:	cmp	w8, #0xc
   1952c:	mov	w10, #0x4d                  	// #77
   19530:	b.eq	1953c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5638>  // b.none
   19534:	mov	w21, #0x4d                  	// #77
   19538:	cbnz	w8, 19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1953c:	tst	w9, #0xfffffffd
   19540:	mov	w8, #0x4                   	// #4
   19544:	csel	w21, w8, w10, eq  // eq = none
   19548:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1954c:	ldr	x8, [x19]
   19550:	mov	x0, x19
   19554:	ldr	x8, [x8, #40]
   19558:	blr	x8
   1955c:	tbz	w0, #0, 195a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56a0>
   19560:	ldr	w8, [x19, #48]
   19564:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19568:	ldr	x8, [x19, #72]
   1956c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19570:	ldr	w9, [x8]
   19574:	mov	w21, #0x4                   	// #4
   19578:	cmp	w9, #0x1
   1957c:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   19580:	ldr	x8, [x8, #16]
   19584:	mov	w9, #0xfffd                	// #65533
   19588:	and	x10, x8, #0x3
   1958c:	add	x8, x8, #0x8, lsl #12
   19590:	cmp	x8, x9
   19594:	ccmp	x10, #0x0, #0x0, cc  // cc = lo, ul, last
   19598:	mov	w8, #0x29                  	// #41
   1959c:	csel	w21, w21, w8, eq  // eq = none
   195a0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   195a4:	mov	w21, #0x29                  	// #41
   195a8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   195ac:	ldr	w8, [x19, #48]
   195b0:	cmp	w8, #0x3
   195b4:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   195b8:	ldr	w8, [x19, #76]
   195bc:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   195c0:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   195c4:	ldr	w8, [x19, #72]
   195c8:	ldr	x9, [x9]
   195cc:	lsr	x10, x8, #3
   195d0:	ldrh	w11, [x9, #214]
   195d4:	cmp	w10, w11
   195d8:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   195dc:	ldr	x9, [x9, #200]
   195e0:	b	197dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58d8>
   195e4:	ldr	x8, [x19]
   195e8:	mov	x0, x19
   195ec:	ldr	x8, [x8, #40]
   195f0:	blr	x8
   195f4:	tbz	w0, #0, 199d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5acc>
   195f8:	ldr	w8, [x19, #48]
   195fc:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19600:	ldr	x8, [x19, #72]
   19604:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19608:	ldr	w9, [x8]
   1960c:	mov	w21, #0x20                  	// #32
   19610:	cmp	w9, #0x1
   19614:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   19618:	ldr	x8, [x8, #16]
   1961c:	sub	x8, x8, #0x1
   19620:	cmp	x8, #0x10
   19624:	b	1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5898>
   19628:	ldr	w8, [x19, #48]
   1962c:	cmp	w8, #0xa
   19630:	b.ne	19cc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dbc>  // b.any
   19634:	ldr	w8, [x19, #72]
   19638:	sub	w9, w8, #0x5
   1963c:	cmp	w9, #0x8
   19640:	b.cs	19cbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5db8>  // b.hs, b.nlast
   19644:	ldr	w9, [x19, #76]
   19648:	cmp	w9, #0x4
   1964c:	b.hi	19cc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dbc>  // b.pmore
   19650:	cmp	w8, #0xc
   19654:	mov	w21, #0x7                   	// #7
   19658:	b.hi	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.pmore
   1965c:	mov	w9, #0x1                   	// #1
   19660:	lsl	w8, w9, w8
   19664:	mov	w9, #0x1101                	// #4353
   19668:	tst	w8, w9
   1966c:	b.ne	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.any
   19670:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19674:	ldr	w8, [x19, #48]
   19678:	cmp	w8, #0x3
   1967c:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   19680:	ldr	w8, [x19, #76]
   19684:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19688:	ldr	x8, [x19]
   1968c:	mov	x0, x19
   19690:	ldr	x8, [x8, #56]
   19694:	blr	x8
   19698:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1969c:	ldr	x8, [x8]
   196a0:	mov	w9, w0
   196a4:	lsr	x9, x9, #3
   196a8:	ldrh	w10, [x8, #566]
   196ac:	cmp	w9, w10
   196b0:	b.cs	1a3e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64dc>  // b.hs, b.nlast
   196b4:	ldr	x8, [x8, #552]
   196b8:	ldrb	w8, [x8, x9]
   196bc:	and	w9, w0, #0x7
   196c0:	lsr	w8, w8, w9
   196c4:	tbz	w8, #0, 1a3e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64dc>
   196c8:	ldr	w9, [x19, #48]
   196cc:	add	x8, x19, #0x48
   196d0:	cmp	w9, #0x3
   196d4:	b.eq	19da0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e9c>  // b.none
   196d8:	cmp	w9, #0xa
   196dc:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   196e0:	mov	x10, x8
   196e4:	b	19da4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ea0>
   196e8:	ldr	w8, [x19, #48]
   196ec:	cmp	w8, #0x3
   196f0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   196f4:	ldr	w8, [x19, #76]
   196f8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   196fc:	ldr	x8, [x19]
   19700:	mov	x0, x19
   19704:	ldr	x8, [x8, #56]
   19708:	blr	x8
   1970c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19710:	ldr	x8, [x8]
   19714:	mov	w9, w0
   19718:	lsr	x9, x9, #3
   1971c:	ldrh	w10, [x8, #566]
   19720:	cmp	w9, w10
   19724:	b.cs	1a3f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64f4>  // b.hs, b.nlast
   19728:	ldr	x8, [x8, #552]
   1972c:	ldrb	w8, [x8, x9]
   19730:	and	w9, w0, #0x7
   19734:	lsr	w8, w8, w9
   19738:	tbz	w8, #0, 1a3f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64f4>
   1973c:	ldr	w9, [x19, #48]
   19740:	add	x8, x19, #0x48
   19744:	cmp	w9, #0x3
   19748:	b.eq	19dc4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ec0>  // b.none
   1974c:	cmp	w9, #0xa
   19750:	b.ne	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.any
   19754:	mov	x10, x8
   19758:	b	19dc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ec4>
   1975c:	ldr	x8, [x19]
   19760:	mov	x0, x19
   19764:	ldr	x8, [x8, #40]
   19768:	blr	x8
   1976c:	tbz	w0, #0, 199d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ad4>
   19770:	ldr	w8, [x19, #48]
   19774:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19778:	ldr	x8, [x19, #72]
   1977c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19780:	ldr	w9, [x8]
   19784:	mov	w21, #0x22                  	// #34
   19788:	cmp	w9, #0x1
   1978c:	b.ne	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>  // b.any
   19790:	ldr	x8, [x8, #16]
   19794:	sub	x8, x8, #0x1
   19798:	cmp	x8, #0x40
   1979c:	mov	w8, #0x4                   	// #4
   197a0:	csel	w21, w8, w21, cc  // cc = lo, ul, last
   197a4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   197a8:	ldr	w8, [x19, #48]
   197ac:	cmp	w8, #0x3
   197b0:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   197b4:	ldr	w8, [x19, #76]
   197b8:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   197bc:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   197c0:	ldr	w8, [x19, #72]
   197c4:	ldr	x9, [x9]
   197c8:	lsr	x10, x8, #3
   197cc:	ldrh	w11, [x9, #566]
   197d0:	cmp	w10, w11
   197d4:	b.cs	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.hs, b.nlast
   197d8:	ldr	x9, [x9, #552]
   197dc:	and	w8, w8, #0x7
   197e0:	ldrb	w9, [x9, x10]
   197e4:	lsr	w8, w9, w8
   197e8:	tbnz	w8, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   197ec:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   197f0:	ldr	w8, [x19, #48]
   197f4:	cmp	w8, #0xc
   197f8:	b.ne	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>  // b.any
   197fc:	mov	w21, #0x4                   	// #4
   19800:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19804:	mov	w0, #0x35                  	// #53
   19808:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   1980c:	mov	w0, #0x3                   	// #3
   19810:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19814:	mov	w0, #0x2d                  	// #45
   19818:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   1981c:	mov	w0, #0x36                  	// #54
   19820:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19824:	mov	w21, #0xf                   	// #15
   19828:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1982c:	mov	w21, #0x19                  	// #25
   19830:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19834:	mov	w21, #0x23                  	// #35
   19838:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1983c:	mov	w21, #0x1a                  	// #26
   19840:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19844:	mov	w21, #0x21                  	// #33
   19848:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1984c:	mov	w21, #0x44                  	// #68
   19850:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19854:	ldr	x8, [x19]
   19858:	mov	x0, x19
   1985c:	ldr	x8, [x8, #40]
   19860:	blr	x8
   19864:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19868:	ldr	w8, [x19, #48]
   1986c:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19870:	ldr	x8, [x19, #72]
   19874:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19878:	ldr	w8, [x8]
   1987c:	cmp	w8, #0x1
   19880:	b.eq	14c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd24>  // b.none
   19884:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19888:	mov	w21, #0x1b                  	// #27
   1988c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19890:	mov	w21, #0x51                  	// #81
   19894:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19898:	mov	w21, #0x1c                  	// #28
   1989c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198a0:	mov	w21, #0x18                  	// #24
   198a4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198a8:	mov	w21, #0x43                  	// #67
   198ac:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198b0:	mov	w21, #0x45                  	// #69
   198b4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198b8:	mov	w21, #0x42                  	// #66
   198bc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198c0:	mov	w21, #0x1e                  	// #30
   198c4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198c8:	mov	w21, #0x1f                  	// #31
   198cc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   198d0:	ldr	x8, [x19]
   198d4:	mov	x0, x19
   198d8:	ldr	x8, [x8, #40]
   198dc:	blr	x8
   198e0:	tbz	w0, #0, 19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>
   198e4:	ldr	w8, [x19, #48]
   198e8:	cbz	w8, 19b80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c7c>
   198ec:	cmp	w8, #0x1
   198f0:	b.eq	17fa0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x409c>  // b.none
   198f4:	b	1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   198f8:	ldr	x8, [x19]
   198fc:	mov	x0, x19
   19900:	ldr	x8, [x8, #40]
   19904:	blr	x8
   19908:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1990c:	ldr	w8, [x19, #48]
   19910:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19914:	ldr	x8, [x19, #72]
   19918:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   1991c:	ldr	w8, [x8]
   19920:	cmp	w8, #0x1
   19924:	b.eq	187a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x48a4>  // b.none
   19928:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1992c:	ldr	x8, [x19]
   19930:	mov	x0, x19
   19934:	ldr	x8, [x8, #40]
   19938:	blr	x8
   1993c:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19940:	ldr	w8, [x19, #48]
   19944:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   19948:	ldr	x8, [x19, #72]
   1994c:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19950:	ldr	w8, [x8]
   19954:	cmp	w8, #0x1
   19958:	b.eq	18868 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4964>  // b.none
   1995c:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19960:	ldr	x8, [x19]
   19964:	mov	x0, x19
   19968:	ldr	x8, [x8, #40]
   1996c:	blr	x8
   19970:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19974:	ldr	w8, [x19, #48]
   19978:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   1997c:	ldr	x8, [x19, #72]
   19980:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   19984:	ldr	w8, [x8]
   19988:	cmp	w8, #0x1
   1998c:	b.eq	18ab0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4bac>  // b.none
   19990:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   19994:	ldr	x8, [x19]
   19998:	mov	x0, x19
   1999c:	ldr	x8, [x8, #40]
   199a0:	blr	x8
   199a4:	tbz	w0, #0, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   199a8:	ldr	w8, [x19, #48]
   199ac:	cbnz	w8, 1a6b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67ac>
   199b0:	ldr	x8, [x19, #72]
   199b4:	cbz	x8, 1a690 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x678c>
   199b8:	ldr	w8, [x8]
   199bc:	cmp	w8, #0x1
   199c0:	b.eq	18c00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4cfc>  // b.none
   199c4:	b	19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   199c8:	mov	w21, #0x50                  	// #80
   199cc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   199d0:	mov	w21, #0x20                  	// #32
   199d4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   199d8:	mov	w21, #0x22                  	// #34
   199dc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   199e0:	mov	w0, #0xa                   	// #10
   199e4:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   199e8:	mov	w0, #0x34                  	// #52
   199ec:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   199f0:	mov	w0, #0x7                   	// #7
   199f4:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   199f8:	mov	w0, #0x31                  	// #49
   199fc:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19a00:	mov	w0, #0x32                  	// #50
   19a04:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19a08:	mov	w0, #0x33                  	// #51
   19a0c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19a10:	mov	w0, #0x2f                  	// #47
   19a14:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19a18:	mov	w0, #0x30                  	// #48
   19a1c:	b	1447c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x578>
   19a20:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19a24:	tbnz	w0, #0, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19a28:	mov	w21, #0x3d                  	// #61
   19a2c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19a30:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19a34:	tbnz	w0, #0, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19a38:	mov	w21, #0x38                  	// #56
   19a3c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19a40:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19a44:	tbnz	w0, #0, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19a48:	mov	w21, #0x33                  	// #51
   19a4c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19a50:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19a54:	tbnz	w0, #0, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19a58:	mov	w21, #0x2b                  	// #43
   19a5c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19a60:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19a64:	tbnz	w0, #0, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19a68:	mov	w21, #0x2a                  	// #42
   19a6c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19a70:	mov	x0, x19
   19a74:	mov	x1, x21
   19a78:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   19a7c:	ldr	w8, [sp, #8]
   19a80:	cmp	w8, #0x41
   19a84:	b.cc	19a94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b90>  // b.lo, b.ul, b.last
   19a88:	ldr	x0, [sp]
   19a8c:	cbz	x0, 19a94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b90>
   19a90:	bl	0 <_ZdaPv>
   19a94:	ldr	x8, [sp, #24]
   19a98:	cmp	x20, x8
   19a9c:	b.eq	19ab0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bac>  // b.none
   19aa0:	mov	x8, sp
   19aa4:	mov	x0, x19
   19aa8:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   19aac:	b	19ac0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bbc>
   19ab0:	add	x8, sp, #0x10
   19ab4:	add	x0, x8, #0x8
   19ab8:	mov	x8, sp
   19abc:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   19ac0:	mov	x0, sp
   19ac4:	bl	1d32c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   19ac8:	ldr	w8, [sp, #8]
   19acc:	mov	w19, w0
   19ad0:	cmp	w8, #0x41
   19ad4:	b.cc	19ae4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5be0>  // b.lo, b.ul, b.last
   19ad8:	ldr	x0, [sp]
   19adc:	cbz	x0, 19ae4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5be0>
   19ae0:	bl	0 <_ZdaPv>
   19ae4:	add	x0, sp, #0x10
   19ae8:	bl	0 <LLVMInitializeAArch64AsmParser>
   19aec:	cmn	w19, #0x1
   19af0:	mov	w8, #0x4                   	// #4
   19af4:	mov	w9, #0xf                   	// #15
   19af8:	csel	w21, w9, w8, eq  // eq = none
   19afc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19b00:	bl	1d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>
   19b04:	tbz	w0, #0, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   19b08:	ldr	x8, [x19]
   19b0c:	mov	x0, x19
   19b10:	ldr	x8, [x8, #48]
   19b14:	blr	x8
   19b18:	tbz	w0, #0, 19b48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c44>
   19b1c:	ldr	x8, [x19]
   19b20:	mov	x0, x19
   19b24:	ldr	x8, [x8, #56]
   19b28:	blr	x8
   19b2c:	sub	w8, w0, #0x2
   19b30:	cmp	w8, #0x272
   19b34:	b.hi	19b64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c60>  // b.pmore
   19b38:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   19b3c:	add	x9, x9, #0x0
   19b40:	ldr	w0, [x9, w8, sxtw #2]
   19b44:	b	19b68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c64>
   19b48:	mov	w21, wzr
   19b4c:	mov	w0, w21
   19b50:	ldp	x20, x19, [sp, #96]
   19b54:	ldr	x21, [sp, #80]
   19b58:	ldp	x29, x30, [sp, #64]
   19b5c:	add	sp, sp, #0x70
   19b60:	ret
   19b64:	mov	w0, wzr
   19b68:	mov	w1, w20
   19b6c:	bl	136c8 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   19b70:	tst	w0, #0x1
   19b74:	mov	w8, #0x4                   	// #4
   19b78:	csel	w0, w8, wzr, ne  // ne = any
   19b7c:	b	19b50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c4c>
   19b80:	ldr	x0, [x19, #72]
   19b84:	add	x1, x29, #0x1c
   19b88:	add	x2, x29, #0x18
   19b8c:	mov	x3, sp
   19b90:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   19b94:	tbz	w0, #0, 19c00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cfc>
   19b98:	ldrh	w8, [x29, #24]
   19b9c:	orr	w9, w8, #0x2
   19ba0:	cmp	w9, #0x16
   19ba4:	b.eq	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.none
   19ba8:	cmp	w8, #0x18
   19bac:	b.ne	19bb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cb4>  // b.any
   19bb0:	ldr	x8, [sp]
   19bb4:	cbz	x8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19bb8:	ldr	w8, [x29, #28]
   19bbc:	cmp	w8, #0x39
   19bc0:	b.hi	19bdc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cd8>  // b.pmore
   19bc4:	mov	w9, #0x1                   	// #1
   19bc8:	mov	x10, #0x3a000000000         	// #3985729650688
   19bcc:	lsl	x9, x9, x8
   19bd0:	movk	x10, #0x2a0, lsl #48
   19bd4:	tst	x9, x10
   19bd8:	b.ne	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.any
   19bdc:	sub	w8, w8, #0x121
   19be0:	cmp	w8, #0x6
   19be4:	b.hi	19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>  // b.pmore
   19be8:	mov	w9, #0x1                   	// #1
   19bec:	lsl	w8, w9, w8
   19bf0:	mov	w9, #0x51                  	// #81
   19bf4:	tst	w8, w9
   19bf8:	b.ne	19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.any
   19bfc:	b	19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>
   19c00:	add	x8, sp, #0x10
   19c04:	mov	x0, x19
   19c08:	bl	1d228 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   19c0c:	ldrb	w8, [sp, #32]
   19c10:	cbz	w8, 19c20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>
   19c14:	ldr	x8, [sp, #16]
   19c18:	cmp	x8, #0xfff
   19c1c:	b.hi	19c28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d24>  // b.pmore
   19c20:	mov	w21, #0x4                   	// #4
   19c24:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c28:	mov	w21, #0xb                   	// #11
   19c2c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c30:	cbz	w8, 147c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x8bc>
   19c34:	mov	w21, #0x47                  	// #71
   19c38:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c3c:	cbz	w8, 14cdc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdd8>
   19c40:	mov	w21, #0x46                  	// #70
   19c44:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c48:	cbz	w8, 14e94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xf90>
   19c4c:	mov	w21, #0x4a                  	// #74
   19c50:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c54:	cbz	w9, 188f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49f4>
   19c58:	mov	w21, #0x8                   	// #8
   19c5c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c60:	cbz	w8, 18d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e30>
   19c64:	mov	w21, #0x4e                  	// #78
   19c68:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c6c:	cbz	w8, 18d7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e78>
   19c70:	mov	w21, #0x49                  	// #73
   19c74:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c78:	cbz	w8, 18e1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f18>
   19c7c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c80:	cbz	w8, 19100 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x51fc>
   19c84:	mov	w21, #0x4b                  	// #75
   19c88:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c8c:	cbz	w8, 1917c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5278>
   19c90:	mov	w21, #0x48                  	// #72
   19c94:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19c98:	cbz	w8, 192f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53f4>
   19c9c:	mov	w21, #0x4f                  	// #79
   19ca0:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19ca4:	cbz	w8, 193fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54f8>
   19ca8:	mov	w21, #0x4c                  	// #76
   19cac:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19cb0:	cbz	w8, 1951c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5618>
   19cb4:	mov	w21, #0x4d                  	// #77
   19cb8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19cbc:	cbz	w8, 19644 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5740>
   19cc0:	mov	w21, #0x7                   	// #7
   19cc4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   19cc8:	add	x10, x19, #0x58
   19ccc:	ldr	w10, [x10]
   19cd0:	cbnz	w10, 1a358 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6454>
   19cd4:	cmp	w9, #0x3
   19cd8:	b.eq	1a348 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6444>  // b.none
   19cdc:	cmp	w9, #0xa
   19ce0:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19ce4:	add	x8, x8, #0x4
   19ce8:	b	1a34c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6448>
   19cec:	add	x10, x19, #0x58
   19cf0:	ldr	w10, [x10]
   19cf4:	cbnz	w10, 1a370 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x646c>
   19cf8:	cmp	w9, #0x3
   19cfc:	b.eq	1a360 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x645c>  // b.none
   19d00:	cmp	w9, #0xa
   19d04:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19d08:	add	x8, x8, #0x4
   19d0c:	b	1a364 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6460>
   19d10:	add	x10, x19, #0x58
   19d14:	ldr	w10, [x10]
   19d18:	cbnz	w10, 1a384 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6480>
   19d1c:	cmp	w9, #0x3
   19d20:	b.eq	1a378 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6474>  // b.none
   19d24:	cmp	w9, #0xa
   19d28:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19d2c:	add	x8, x8, #0x4
   19d30:	b	1a37c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6478>
   19d34:	add	x10, x19, #0x58
   19d38:	ldr	w10, [x10]
   19d3c:	cbnz	w10, 1a398 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6494>
   19d40:	cmp	w9, #0x3
   19d44:	b.eq	1a38c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6488>  // b.none
   19d48:	cmp	w9, #0xa
   19d4c:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19d50:	add	x8, x8, #0x4
   19d54:	b	1a390 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>
   19d58:	add	x10, x19, #0x58
   19d5c:	ldr	w10, [x10]
   19d60:	cbnz	w10, 1a3b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64ac>
   19d64:	cmp	w9, #0x3
   19d68:	b.eq	1a3a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x649c>  // b.none
   19d6c:	cmp	w9, #0xa
   19d70:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19d74:	add	x8, x8, #0x4
   19d78:	b	1a3a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64a0>
   19d7c:	add	x10, x19, #0x58
   19d80:	ldr	w10, [x10]
   19d84:	cbnz	w10, 1a3c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64c4>
   19d88:	cmp	w9, #0x3
   19d8c:	b.eq	1a3b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64b4>  // b.none
   19d90:	cmp	w9, #0xa
   19d94:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19d98:	add	x8, x8, #0x4
   19d9c:	b	1a3bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64b8>
   19da0:	add	x10, x19, #0x58
   19da4:	ldr	w10, [x10]
   19da8:	cbnz	w10, 1a3e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64dc>
   19dac:	cmp	w9, #0x3
   19db0:	b.eq	1a3d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64cc>  // b.none
   19db4:	cmp	w9, #0xa
   19db8:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19dbc:	add	x8, x8, #0x4
   19dc0:	b	1a3d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64d0>
   19dc4:	add	x10, x19, #0x58
   19dc8:	ldr	w10, [x10]
   19dcc:	cbnz	w10, 1a3f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64f4>
   19dd0:	cmp	w9, #0x3
   19dd4:	b.eq	1a3e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64e4>  // b.none
   19dd8:	cmp	w9, #0xa
   19ddc:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67cc>  // b.any
   19de0:	add	x8, x8, #0x4
   19de4:	b	1a3ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64e8>
   19de8:	add	x10, x19, #0x5c
   19dec:	ldr	w10, [x10]
   19df0:	cmp	w10, #0x1
   19df4:	b.ne	19e0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f08>  // b.any
   19df8:	cmp	w9, #0x3
   19dfc:	b.eq	1a400 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64fc>  // b.none
   19e00:	cmp	w9, #0xa
   19e04:	b.eq	1a404 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6500>  // b.none
   19e08:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19e0c:	cmp	w9, #0x3
   19e10:	b.eq	1a410 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x650c>  // b.none
   19e14:	cmp	w9, #0xa
   19e18:	b.eq	1a410 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x650c>  // b.none
   19e1c:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   19e20:	add	x10, x19, #0x5c
   19e24:	ldr	w10, [x10]
   19e28:	cmp	w10, #0x2
   19e2c:	b.ne	19e44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f40>  // b.any
   19e30:	cmp	w9, #0x3
   19e34:	b.eq	1a418 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6514>  // b.none
   19e38:	cmp	w9, #0xa
   19e3c:	b.eq	1a41c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6518>  // b.none
   19e40:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19e44:	cmp	w9, #0x3
   19e48:	b.eq	1a428 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6524>  // b.none
   19e4c:	cmp	w9, #0xa
   19e50:	b.eq	1a428 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6524>  // b.none
   19e54:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   19e58:	add	x10, x19, #0x5c
   19e5c:	ldr	w10, [x10]
   19e60:	cmp	w10, #0x3
   19e64:	b.ne	1a43c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6538>  // b.any
   19e68:	cmp	w9, #0x3
   19e6c:	b.eq	1a430 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x652c>  // b.none
   19e70:	cmp	w9, #0xa
   19e74:	b.eq	1a434 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6530>  // b.none
   19e78:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19e7c:	add	x10, x19, #0x5c
   19e80:	ldr	w10, [x10]
   19e84:	cmp	w10, #0x1
   19e88:	b.ne	1a450 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x654c>  // b.any
   19e8c:	cmp	w9, #0x3
   19e90:	b.eq	1a444 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6540>  // b.none
   19e94:	cmp	w9, #0xa
   19e98:	b.eq	1a448 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6544>  // b.none
   19e9c:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19ea0:	add	x10, x19, #0x5c
   19ea4:	ldr	w10, [x10]
   19ea8:	cmp	w10, #0x1
   19eac:	b.ne	19ec4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fc0>  // b.any
   19eb0:	cmp	w9, #0x3
   19eb4:	b.eq	1a458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6554>  // b.none
   19eb8:	cmp	w9, #0xa
   19ebc:	b.eq	1a45c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6558>  // b.none
   19ec0:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19ec4:	cmp	w9, #0x3
   19ec8:	b.eq	1a468 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6564>  // b.none
   19ecc:	cmp	w9, #0xa
   19ed0:	b.eq	1a468 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6564>  // b.none
   19ed4:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   19ed8:	add	x10, x19, #0x5c
   19edc:	ldr	w10, [x10]
   19ee0:	cmp	w10, #0x3
   19ee4:	b.ne	1a47c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6578>  // b.any
   19ee8:	cmp	w9, #0x3
   19eec:	b.eq	1a470 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x656c>  // b.none
   19ef0:	cmp	w9, #0xa
   19ef4:	b.eq	1a474 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6570>  // b.none
   19ef8:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19efc:	add	x10, x19, #0x5c
   19f00:	ldr	w10, [x10]
   19f04:	cmp	w10, #0x1
   19f08:	b.ne	1a490 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x658c>  // b.any
   19f0c:	cmp	w9, #0x3
   19f10:	b.eq	1a484 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6580>  // b.none
   19f14:	cmp	w9, #0xa
   19f18:	b.eq	1a488 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6584>  // b.none
   19f1c:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19f20:	add	x10, x19, #0x5c
   19f24:	ldr	w10, [x10]
   19f28:	cmp	w10, #0x2
   19f2c:	b.ne	19f44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6040>  // b.any
   19f30:	cmp	w9, #0x3
   19f34:	b.eq	1a498 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6594>  // b.none
   19f38:	cmp	w9, #0xa
   19f3c:	b.eq	1a49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6598>  // b.none
   19f40:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19f44:	cmp	w9, #0x3
   19f48:	b.eq	1a4a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65a4>  // b.none
   19f4c:	cmp	w9, #0xa
   19f50:	b.eq	1a4a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65a4>  // b.none
   19f54:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   19f58:	add	x10, x19, #0x5c
   19f5c:	ldr	w10, [x10]
   19f60:	cbnz	w10, 1a5e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66e0>
   19f64:	cmp	w9, #0x3
   19f68:	b.eq	1a598 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6694>  // b.none
   19f6c:	cmp	w9, #0xa
   19f70:	b.eq	1a59c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6698>  // b.none
   19f74:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19f78:	add	x10, x19, #0x5c
   19f7c:	ldr	w10, [x10]
   19f80:	cbnz	w10, 1a5fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66f8>
   19f84:	cmp	w9, #0x3
   19f88:	b.eq	1a5ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66a8>  // b.none
   19f8c:	cmp	w9, #0xa
   19f90:	b.eq	1a5b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66ac>  // b.none
   19f94:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19f98:	add	x10, x19, #0x5c
   19f9c:	ldr	w10, [x10]
   19fa0:	cbnz	w10, 1a654 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6750>
   19fa4:	cmp	w9, #0x3
   19fa8:	b.eq	1a5c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66bc>  // b.none
   19fac:	cmp	w9, #0xa
   19fb0:	b.eq	1a5c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66c0>  // b.none
   19fb4:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19fb8:	add	x10, x19, #0x5c
   19fbc:	ldr	w10, [x10]
   19fc0:	cmp	w10, #0x1
   19fc4:	b.ne	19fdc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60d8>  // b.any
   19fc8:	cmp	w9, #0x3
   19fcc:	b.eq	1a4b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65ac>  // b.none
   19fd0:	cmp	w9, #0xa
   19fd4:	b.eq	1a4b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65b0>  // b.none
   19fd8:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   19fdc:	cmp	w9, #0x3
   19fe0:	b.eq	1a4c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65bc>  // b.none
   19fe4:	cmp	w9, #0xa
   19fe8:	b.eq	1a4c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65bc>  // b.none
   19fec:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   19ff0:	add	x10, x19, #0x5c
   19ff4:	ldr	w10, [x10]
   19ff8:	cmp	w10, #0x2
   19ffc:	b.ne	1a014 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6110>  // b.any
   1a000:	cmp	w9, #0x3
   1a004:	b.eq	1a4c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65c4>  // b.none
   1a008:	cmp	w9, #0xa
   1a00c:	b.eq	1a4cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65c8>  // b.none
   1a010:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a014:	cmp	w9, #0x3
   1a018:	b.eq	1a4d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65d4>  // b.none
   1a01c:	cmp	w9, #0xa
   1a020:	b.eq	1a4d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65d4>  // b.none
   1a024:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a028:	add	x11, x19, #0x5c
   1a02c:	ldr	w11, [x11]
   1a030:	cbz	w11, 1a2e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63e0>
   1a034:	cmp	w10, #0xa
   1a038:	b.eq	1a048 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6144>  // b.none
   1a03c:	cmp	w10, #0x3
   1a040:	b.ne	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.any
   1a044:	add	x8, x19, #0x60
   1a048:	ldrb	w8, [x8]
   1a04c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1a050:	b	1a5e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66e0>
   1a054:	add	x10, x19, #0x5c
   1a058:	ldr	w10, [x10]
   1a05c:	cmp	w10, #0x3
   1a060:	b.ne	1a078 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6174>  // b.any
   1a064:	cmp	w9, #0x3
   1a068:	b.eq	1a4e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65dc>  // b.none
   1a06c:	cmp	w9, #0xa
   1a070:	b.eq	1a4e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65e0>  // b.none
   1a074:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a078:	cmp	w9, #0x3
   1a07c:	b.eq	1a4f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65ec>  // b.none
   1a080:	cmp	w9, #0xa
   1a084:	b.eq	1a4f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65ec>  // b.none
   1a088:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a08c:	add	x11, x19, #0x5c
   1a090:	ldr	w11, [x11]
   1a094:	cbz	w11, 1a2f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63f4>
   1a098:	cmp	w10, #0xa
   1a09c:	b.eq	1a0ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61a8>  // b.none
   1a0a0:	cmp	w10, #0x3
   1a0a4:	b.ne	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.any
   1a0a8:	add	x8, x19, #0x60
   1a0ac:	ldrb	w8, [x8]
   1a0b0:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1a0b4:	b	1a5fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66f8>
   1a0b8:	add	x10, x19, #0x5c
   1a0bc:	ldr	w10, [x10]
   1a0c0:	cmp	w10, #0x2
   1a0c4:	b.ne	1a504 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6600>  // b.any
   1a0c8:	cmp	w9, #0x3
   1a0cc:	b.eq	1a4f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65f4>  // b.none
   1a0d0:	cmp	w9, #0xa
   1a0d4:	b.eq	1a4fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65f8>  // b.none
   1a0d8:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a0dc:	add	x10, x19, #0x5c
   1a0e0:	ldr	w10, [x10]
   1a0e4:	cbnz	w10, 1a610 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x670c>
   1a0e8:	cmp	w9, #0x3
   1a0ec:	b.eq	1a604 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6700>  // b.none
   1a0f0:	cmp	w9, #0xa
   1a0f4:	b.eq	1a608 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6704>  // b.none
   1a0f8:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a0fc:	add	x10, x19, #0x5c
   1a100:	ldr	w10, [x10]
   1a104:	cbnz	w10, 1a63c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6738>
   1a108:	cmp	w9, #0x3
   1a10c:	b.eq	1a618 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6714>  // b.none
   1a110:	cmp	w9, #0xa
   1a114:	b.eq	1a61c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6718>  // b.none
   1a118:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a11c:	add	x11, x19, #0x5c
   1a120:	ldr	w11, [x11]
   1a124:	cbz	w11, 1a30c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6408>
   1a128:	cmp	w10, #0xa
   1a12c:	b.eq	1a13c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6238>  // b.none
   1a130:	cmp	w10, #0x3
   1a134:	b.ne	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.any
   1a138:	add	x8, x19, #0x60
   1a13c:	ldrb	w8, [x8]
   1a140:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1a144:	b	1a63c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6738>
   1a148:	add	x11, x19, #0x5c
   1a14c:	ldr	w11, [x11]
   1a150:	cbz	w11, 1a320 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x641c>
   1a154:	cmp	w10, #0xa
   1a158:	b.eq	1a168 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6264>  // b.none
   1a15c:	cmp	w10, #0x3
   1a160:	b.ne	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.any
   1a164:	add	x8, x19, #0x60
   1a168:	ldrb	w8, [x8]
   1a16c:	cbnz	w8, 19b08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c04>
   1a170:	b	1a654 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6750>
   1a174:	add	x10, x19, #0x5c
   1a178:	ldr	w10, [x10]
   1a17c:	cmp	w10, #0x3
   1a180:	b.ne	1a198 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6294>  // b.any
   1a184:	cmp	w9, #0x3
   1a188:	b.eq	1a50c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6608>  // b.none
   1a18c:	cmp	w9, #0xa
   1a190:	b.eq	1a510 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x660c>  // b.none
   1a194:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a198:	cmp	w9, #0x3
   1a19c:	b.eq	1a51c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6618>  // b.none
   1a1a0:	cmp	w9, #0xa
   1a1a4:	b.eq	1a51c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6618>  // b.none
   1a1a8:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a1ac:	add	x10, x19, #0x5c
   1a1b0:	ldr	w10, [x10]
   1a1b4:	cmp	w10, #0x3
   1a1b8:	b.ne	1a1d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62cc>  // b.any
   1a1bc:	cmp	w9, #0x3
   1a1c0:	b.eq	1a524 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6620>  // b.none
   1a1c4:	cmp	w9, #0xa
   1a1c8:	b.eq	1a528 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6624>  // b.none
   1a1cc:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a1d0:	cmp	w9, #0x3
   1a1d4:	b.eq	1a534 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6630>  // b.none
   1a1d8:	cmp	w9, #0xa
   1a1dc:	b.eq	1a534 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6630>  // b.none
   1a1e0:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a1e4:	add	x10, x19, #0x5c
   1a1e8:	ldr	w10, [x10]
   1a1ec:	cmp	w10, #0x2
   1a1f0:	b.ne	1a208 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6304>  // b.any
   1a1f4:	cmp	w9, #0x3
   1a1f8:	b.eq	1a53c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6638>  // b.none
   1a1fc:	cmp	w9, #0xa
   1a200:	b.eq	1a540 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x663c>  // b.none
   1a204:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a208:	cmp	w9, #0x3
   1a20c:	b.eq	1a54c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6648>  // b.none
   1a210:	cmp	w9, #0xa
   1a214:	b.eq	1a54c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6648>  // b.none
   1a218:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a21c:	add	x10, x19, #0x5c
   1a220:	ldr	w10, [x10]
   1a224:	cmp	w10, #0x2
   1a228:	b.ne	1a560 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x665c>  // b.any
   1a22c:	cmp	w9, #0x3
   1a230:	b.eq	1a554 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6650>  // b.none
   1a234:	cmp	w9, #0xa
   1a238:	b.eq	1a558 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6654>  // b.none
   1a23c:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a240:	add	x10, x19, #0x5c
   1a244:	ldr	w10, [x10]
   1a248:	cmp	w10, #0x3
   1a24c:	b.ne	1a264 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6360>  // b.any
   1a250:	cmp	w9, #0x3
   1a254:	b.eq	1a568 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6664>  // b.none
   1a258:	cmp	w9, #0xa
   1a25c:	b.eq	1a56c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6668>  // b.none
   1a260:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a264:	cmp	w9, #0x3
   1a268:	b.eq	1a578 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6674>  // b.none
   1a26c:	cmp	w9, #0xa
   1a270:	b.eq	1a578 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6674>  // b.none
   1a274:	b	1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>
   1a278:	add	x10, x19, #0x5c
   1a27c:	ldr	w10, [x10]
   1a280:	cbnz	w10, 1a668 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6764>
   1a284:	cmp	w9, #0x3
   1a288:	b.eq	1a65c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6758>  // b.none
   1a28c:	cmp	w9, #0xa
   1a290:	b.eq	1a660 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x675c>  // b.none
   1a294:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a298:	add	x10, x19, #0x5c
   1a29c:	ldr	w10, [x10]
   1a2a0:	cmp	w10, #0x1
   1a2a4:	b.ne	1a2bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63b8>  // b.any
   1a2a8:	cmp	w9, #0x3
   1a2ac:	b.eq	1a580 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x667c>  // b.none
   1a2b0:	cmp	w9, #0xa
   1a2b4:	b.eq	1a584 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6680>  // b.none
   1a2b8:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a2bc:	cmp	w9, #0x3
   1a2c0:	b.eq	1a590 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x668c>  // b.none
   1a2c4:	cmp	w9, #0xa
   1a2c8:	b.eq	1a590 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x668c>  // b.none
   1a2cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a2d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a2d4:	add	x0, x0, #0x0
   1a2d8:	add	x1, x1, #0x0
   1a2dc:	mov	w2, #0x271                 	// #625
   1a2e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1a2e4:	cmp	w10, #0x3
   1a2e8:	b.eq	1a5d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66d0>  // b.none
   1a2ec:	cmp	w10, #0xa
   1a2f0:	b.eq	1a5d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66d4>  // b.none
   1a2f4:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a2f8:	cmp	w10, #0x3
   1a2fc:	b.eq	1a5ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66e8>  // b.none
   1a300:	cmp	w10, #0xa
   1a304:	b.eq	1a5f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66ec>  // b.none
   1a308:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a30c:	cmp	w10, #0x3
   1a310:	b.eq	1a62c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6728>  // b.none
   1a314:	cmp	w10, #0xa
   1a318:	b.eq	1a630 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x672c>  // b.none
   1a31c:	b	1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>
   1a320:	cmp	w10, #0x3
   1a324:	b.eq	1a644 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6740>  // b.none
   1a328:	cmp	w10, #0xa
   1a32c:	b.eq	1a648 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6744>  // b.none
   1a330:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a334:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a338:	add	x0, x0, #0x0
   1a33c:	add	x1, x1, #0x0
   1a340:	mov	w2, #0x261                 	// #609
   1a344:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1a348:	add	x8, x19, #0x5c
   1a34c:	ldr	w8, [x8]
   1a350:	cmp	w8, #0x3
   1a354:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a358:	mov	w21, #0x12                  	// #18
   1a35c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a360:	add	x8, x19, #0x5c
   1a364:	ldr	w8, [x8]
   1a368:	cmp	w8, #0x1
   1a36c:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a370:	mov	w21, #0x14                  	// #20
   1a374:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a378:	add	x8, x19, #0x5c
   1a37c:	ldr	w8, [x8]
   1a380:	cbz	w8, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   1a384:	mov	w21, #0x13                  	// #19
   1a388:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a38c:	add	x8, x19, #0x5c
   1a390:	ldr	w8, [x8]
   1a394:	cbz	w8, 197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>
   1a398:	mov	w21, #0x17                  	// #23
   1a39c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a3a0:	add	x8, x19, #0x5c
   1a3a4:	ldr	w8, [x8]
   1a3a8:	cmp	w8, #0x1
   1a3ac:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a3b0:	mov	w21, #0x10                  	// #16
   1a3b4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a3b8:	add	x8, x19, #0x5c
   1a3bc:	ldr	w8, [x8]
   1a3c0:	cmp	w8, #0x2
   1a3c4:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a3c8:	mov	w21, #0x11                  	// #17
   1a3cc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a3d0:	add	x8, x19, #0x5c
   1a3d4:	ldr	w8, [x8]
   1a3d8:	cmp	w8, #0x3
   1a3dc:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a3e0:	mov	w21, #0x16                  	// #22
   1a3e4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a3e8:	add	x8, x19, #0x5c
   1a3ec:	ldr	w8, [x8]
   1a3f0:	cmp	w8, #0x2
   1a3f4:	b.eq	197fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x58f8>  // b.none
   1a3f8:	mov	w21, #0x15                  	// #21
   1a3fc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a400:	add	x8, x19, #0x58
   1a404:	ldr	w8, [x8]
   1a408:	cmp	w8, #0x7
   1a40c:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a410:	mov	w21, #0x79                  	// #121
   1a414:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a418:	add	x8, x19, #0x58
   1a41c:	ldr	w8, [x8]
   1a420:	cmp	w8, #0x7
   1a424:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a428:	mov	w21, #0x7a                  	// #122
   1a42c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a430:	add	x8, x19, #0x58
   1a434:	ldr	w8, [x8]
   1a438:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a43c:	mov	w21, #0x73                  	// #115
   1a440:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a444:	add	x8, x19, #0x58
   1a448:	ldr	w8, [x8]
   1a44c:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a450:	mov	w21, #0x7e                  	// #126
   1a454:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a458:	add	x8, x19, #0x58
   1a45c:	ldr	w8, [x8]
   1a460:	cmp	w8, #0x7
   1a464:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a468:	mov	w21, #0x86                  	// #134
   1a46c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a470:	add	x8, x19, #0x58
   1a474:	ldr	w8, [x8]
   1a478:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a47c:	mov	w21, #0x80                  	// #128
   1a480:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a484:	add	x8, x19, #0x58
   1a488:	ldr	w8, [x8]
   1a48c:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a490:	mov	w21, #0x71                  	// #113
   1a494:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a498:	add	x8, x19, #0x58
   1a49c:	ldr	w8, [x8]
   1a4a0:	cmp	w8, #0xb
   1a4a4:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a4a8:	mov	w21, #0x76                  	// #118
   1a4ac:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a4b0:	add	x8, x19, #0x58
   1a4b4:	ldr	w8, [x8]
   1a4b8:	cmp	w8, #0xb
   1a4bc:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a4c0:	mov	w21, #0x82                  	// #130
   1a4c4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a4c8:	add	x8, x19, #0x58
   1a4cc:	ldr	w8, [x8]
   1a4d0:	cmp	w8, #0x7
   1a4d4:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a4d8:	mov	w21, #0x87                  	// #135
   1a4dc:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a4e0:	add	x8, x19, #0x58
   1a4e4:	ldr	w8, [x8]
   1a4e8:	cmp	w8, #0x7
   1a4ec:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a4f0:	mov	w21, #0x7b                  	// #123
   1a4f4:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a4f8:	add	x8, x19, #0x58
   1a4fc:	ldr	w8, [x8]
   1a500:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a504:	mov	w21, #0x72                  	// #114
   1a508:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a50c:	add	x8, x19, #0x58
   1a510:	ldr	w8, [x8]
   1a514:	cmp	w8, #0xb
   1a518:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a51c:	mov	w21, #0x84                  	// #132
   1a520:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a524:	add	x8, x19, #0x58
   1a528:	ldr	w8, [x8]
   1a52c:	cmp	w8, #0xb
   1a530:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a534:	mov	w21, #0x77                  	// #119
   1a538:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a53c:	add	x8, x19, #0x58
   1a540:	ldr	w8, [x8]
   1a544:	cmp	w8, #0xb
   1a548:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a54c:	mov	w21, #0x83                  	// #131
   1a550:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a554:	add	x8, x19, #0x58
   1a558:	ldr	w8, [x8]
   1a55c:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a560:	mov	w21, #0x7f                  	// #127
   1a564:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a568:	add	x8, x19, #0x58
   1a56c:	ldr	w8, [x8]
   1a570:	cmp	w8, #0x7
   1a574:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a578:	mov	w21, #0x88                  	// #136
   1a57c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a580:	add	x8, x19, #0x58
   1a584:	ldr	w8, [x8]
   1a588:	cmp	w8, #0xb
   1a58c:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a590:	mov	w21, #0x75                  	// #117
   1a594:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a598:	add	x8, x19, #0x58
   1a59c:	ldr	w8, [x8]
   1a5a0:	cmp	w8, #0x7
   1a5a4:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a5a8:	b	1a5e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66e0>
   1a5ac:	add	x8, x19, #0x58
   1a5b0:	ldr	w8, [x8]
   1a5b4:	cmp	w8, #0x7
   1a5b8:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a5bc:	b	1a5fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66f8>
   1a5c0:	add	x8, x19, #0x58
   1a5c4:	ldr	w8, [x8]
   1a5c8:	cmp	w8, #0xb
   1a5cc:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a5d0:	b	1a654 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6750>
   1a5d4:	add	x9, x19, #0x58
   1a5d8:	ldr	w8, [x9]
   1a5dc:	cmp	w8, #0x7
   1a5e0:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a5e4:	mov	w21, #0x89                  	// #137
   1a5e8:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a5ec:	add	x9, x19, #0x58
   1a5f0:	ldr	w8, [x9]
   1a5f4:	cmp	w8, #0x7
   1a5f8:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a5fc:	mov	w21, #0x7c                  	// #124
   1a600:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a604:	add	x8, x19, #0x58
   1a608:	ldr	w8, [x8]
   1a60c:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a610:	mov	w21, #0x81                  	// #129
   1a614:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a618:	add	x8, x19, #0x58
   1a61c:	ldr	w8, [x8]
   1a620:	cmp	w8, #0xb
   1a624:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a628:	b	1a63c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6738>
   1a62c:	add	x9, x19, #0x58
   1a630:	ldr	w8, [x9]
   1a634:	cmp	w8, #0xb
   1a638:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a63c:	mov	w21, #0x78                  	// #120
   1a640:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a644:	add	x9, x19, #0x58
   1a648:	ldr	w8, [x9]
   1a64c:	cmp	w8, #0xb
   1a650:	b.eq	18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>  // b.none
   1a654:	mov	w21, #0x85                  	// #133
   1a658:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a65c:	add	x8, x19, #0x58
   1a660:	ldr	w8, [x8]
   1a664:	cbz	w8, 18f5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5058>
   1a668:	mov	w21, #0x74                  	// #116
   1a66c:	b	19b4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c48>
   1a670:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a674:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a678:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a67c:	add	x0, x0, #0x0
   1a680:	add	x1, x1, #0x0
   1a684:	add	x3, x3, #0x0
   1a688:	mov	w2, #0x1ea                 	// #490
   1a68c:	bl	0 <__assert_fail>
   1a690:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a694:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a698:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a69c:	add	x0, x0, #0x0
   1a6a0:	add	x1, x1, #0x0
   1a6a4:	add	x3, x3, #0x0
   1a6a8:	mov	w2, #0x69                  	// #105
   1a6ac:	bl	0 <__assert_fail>
   1a6b0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a6b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a6b8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a6bc:	add	x0, x0, #0x0
   1a6c0:	add	x1, x1, #0x0
   1a6c4:	add	x3, x3, #0x0
   1a6c8:	mov	w2, #0x1f4                 	// #500
   1a6cc:	bl	0 <__assert_fail>
   1a6d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a6d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a6d8:	add	x0, x0, #0x0
   1a6dc:	add	x1, x1, #0x0
   1a6e0:	mov	w2, #0x269                 	// #617
   1a6e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000001a6e8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>:
   1a6e8:	stp	x29, x30, [sp, #-80]!
   1a6ec:	stp	x26, x25, [sp, #16]
   1a6f0:	stp	x24, x23, [sp, #32]
   1a6f4:	stp	x22, x21, [sp, #48]
   1a6f8:	stp	x20, x19, [sp, #64]
   1a6fc:	mov	x29, sp
   1a700:	cmp	w1, #0x68d
   1a704:	b.cs	1a830 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x148>  // b.hs, b.nlast
   1a708:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1a70c:	mov	w8, #0xd                   	// #13
   1a710:	add	x9, x9, #0x0
   1a714:	umaddl	x8, w1, w8, x9
   1a718:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   1a71c:	mov	x19, x3
   1a720:	mov	x20, x2
   1a724:	mov	x21, x0
   1a728:	add	x22, x8, #0x1
   1a72c:	add	x23, x23, #0x0
   1a730:	b	1a73c <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x54>
   1a734:	cbz	w8, 1a7d4 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xec>
   1a738:	add	x22, x22, #0x2
   1a73c:	ldurb	w8, [x22, #-1]
   1a740:	cmp	w8, #0x2
   1a744:	b.ne	1a734 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x4c>  // b.any
   1a748:	ldrb	w8, [x22]
   1a74c:	cmp	x8, #0xc
   1a750:	b.cs	1a7f0 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x108>  // b.hs, b.nlast
   1a754:	add	x8, x8, x8, lsl #1
   1a758:	add	x8, x23, x8
   1a75c:	ldrb	w25, [x8, #1]
   1a760:	ldrb	w24, [x8, #2]
   1a764:	cmp	w25, w24
   1a768:	b.eq	1a738 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>  // b.none
   1a76c:	ldr	w8, [x20, #8]
   1a770:	cmp	x8, x25
   1a774:	b.ls	1a810 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x128>  // b.plast
   1a778:	cmp	x8, x24
   1a77c:	b.ls	1a810 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x128>  // b.plast
   1a780:	ldr	x26, [x20]
   1a784:	ldr	x0, [x26, x25, lsl #3]
   1a788:	ldr	x8, [x0]
   1a78c:	ldr	x8, [x8, #48]
   1a790:	blr	x8
   1a794:	tbz	w0, #0, 1a738 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1a798:	ldr	x0, [x26, x24, lsl #3]
   1a79c:	ldr	x8, [x0]
   1a7a0:	ldr	x8, [x8, #48]
   1a7a4:	blr	x8
   1a7a8:	tbz	w0, #0, 1a738 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1a7ac:	ldr	x8, [x21]
   1a7b0:	ldr	x1, [x26, x25, lsl #3]
   1a7b4:	ldr	x2, [x26, x24, lsl #3]
   1a7b8:	mov	x0, x21
   1a7bc:	ldr	x8, [x8, #112]
   1a7c0:	blr	x8
   1a7c4:	tbnz	w0, #0, 1a738 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1a7c8:	mov	w0, wzr
   1a7cc:	str	x24, [x19]
   1a7d0:	b	1a7d8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xf0>
   1a7d4:	mov	w0, #0x1                   	// #1
   1a7d8:	ldp	x20, x19, [sp, #64]
   1a7dc:	ldp	x22, x21, [sp, #48]
   1a7e0:	ldp	x24, x23, [sp, #32]
   1a7e4:	ldp	x26, x25, [sp, #16]
   1a7e8:	ldp	x29, x30, [sp], #80
   1a7ec:	ret
   1a7f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a7f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a7f8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a7fc:	add	x0, x0, #0x0
   1a800:	add	x1, x1, #0x0
   1a804:	add	x3, x3, #0x0
   1a808:	mov	w2, #0x30a3                	// #12451
   1a80c:	bl	0 <__assert_fail>
   1a810:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a814:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a818:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a81c:	add	x0, x0, #0x0
   1a820:	add	x1, x1, #0x0
   1a824:	add	x3, x3, #0x0
   1a828:	mov	w2, #0x99                  	// #153
   1a82c:	bl	0 <__assert_fail>
   1a830:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1a834:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1a838:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1a83c:	add	x0, x0, #0x0
   1a840:	add	x1, x1, #0x0
   1a844:	add	x3, x3, #0x0
   1a848:	mov	w2, #0x309b                	// #12443
   1a84c:	bl	0 <__assert_fail>

000000000001a850 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   1a850:	sub	sp, sp, #0xb0
   1a854:	stp	x29, x30, [sp, #80]
   1a858:	stp	x28, x27, [sp, #96]
   1a85c:	stp	x26, x25, [sp, #112]
   1a860:	stp	x24, x23, [sp, #128]
   1a864:	stp	x22, x21, [sp, #144]
   1a868:	stp	x20, x19, [sp, #160]
   1a86c:	add	x29, sp, #0x50
   1a870:	cmp	w0, #0x68d
   1a874:	b.cs	1cc44 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23f4>  // b.hs, b.nlast
   1a878:	mov	w8, #0xd                   	// #13
   1a87c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1a880:	umull	x8, w0, w8
   1a884:	add	x9, x9, #0x0
   1a888:	ldrb	w8, [x9, x8]
   1a88c:	mov	x20, x1
   1a890:	str	w2, [x1]
   1a894:	cbz	w8, 1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1a898:	mov	w10, w0
   1a89c:	add	x11, x20, #0x20
   1a8a0:	mov	w12, #0xd                   	// #13
   1a8a4:	str	x11, [sp, #8]
   1a8a8:	add	x11, sp, #0x20
   1a8ac:	madd	x9, x10, x12, x9
   1a8b0:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   1a8b4:	mov	x25, x3
   1a8b8:	add	x21, x20, #0x10
   1a8bc:	add	x26, x20, #0x18
   1a8c0:	add	x27, x20, #0x1c
   1a8c4:	add	x28, x3, #0x8
   1a8c8:	add	x11, x11, #0x8
   1a8cc:	add	x22, x9, #0x2
   1a8d0:	add	x23, x23, #0x0
   1a8d4:	stp	x11, x3, [sp, #16]
   1a8d8:	and	w8, w8, #0xff
   1a8dc:	sub	w9, w8, #0x1
   1a8e0:	cmp	w9, #0x67
   1a8e4:	b.hi	1c7dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f8c>  // b.pmore
   1a8e8:	ldurb	w8, [x22, #-1]
   1a8ec:	adr	x10, 1a8fc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xac>
   1a8f0:	ldrh	w11, [x23, x9, lsl #1]
   1a8f4:	add	x10, x10, x11, lsl #2
   1a8f8:	br	x10
   1a8fc:	ldr	w9, [x28]
   1a900:	cmp	w9, w8
   1a904:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1a908:	ldr	x9, [x25]
   1a90c:	ldr	x0, [x9, x8, lsl #3]
   1a910:	ldr	x8, [x0]
   1a914:	ldr	x8, [x8, #56]
   1a918:	blr	x8
   1a91c:	ldr	w8, [x26]
   1a920:	ldr	w9, [x27]
   1a924:	mov	w24, w0
   1a928:	cmp	w8, w9
   1a92c:	b.cs	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>  // b.hs, b.nlast
   1a930:	ldr	x9, [x21]
   1a934:	mov	w10, #0x1                   	// #1
   1a938:	b	1c2f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa8>
   1a93c:	ldr	w9, [x28]
   1a940:	cmp	w9, w8
   1a944:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1a948:	ldr	x9, [x25]
   1a94c:	ldr	x8, [x9, x8, lsl #3]
   1a950:	ldr	w9, [x8, #48]
   1a954:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1a958:	ldr	x1, [x8, #72]
   1a95c:	cbz	x1, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1a960:	ldr	w8, [x1]
   1a964:	cmp	w8, #0x1
   1a968:	b.ne	1aa24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d4>  // b.any
   1a96c:	ldr	w8, [x26]
   1a970:	ldr	w9, [x27]
   1a974:	ldr	x10, [x1, #16]
   1a978:	cmp	w8, w9
   1a97c:	asr	x24, x10, #2
   1a980:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1a984:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1a988:	ldr	w9, [x28]
   1a98c:	cmp	w9, w8
   1a990:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1a994:	ldr	x9, [x25]
   1a998:	ldr	w10, [x27]
   1a99c:	ldr	x9, [x9, x8, lsl #3]
   1a9a0:	ldr	w8, [x26]
   1a9a4:	ldr	w24, [x9, #92]
   1a9a8:	cmp	w8, w10
   1a9ac:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1a9b0:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1a9b4:	ldr	w9, [x28]
   1a9b8:	cmp	w9, w8
   1a9bc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1a9c0:	ldr	x9, [x25]
   1a9c4:	ldr	x9, [x9, x8, lsl #3]
   1a9c8:	ldr	w8, [x9, #48]
   1a9cc:	cmp	w8, #0x4
   1a9d0:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1a9d4:	ldr	w8, [x26]
   1a9d8:	ldr	w10, [x27]
   1a9dc:	ldr	w24, [x9, #72]
   1a9e0:	cmp	w8, w10
   1a9e4:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1a9e8:	ldr	x1, [sp, #8]
   1a9ec:	mov	w3, #0x10                  	// #16
   1a9f0:	mov	x0, x21
   1a9f4:	mov	x2, xzr
   1a9f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a9fc:	ldr	w8, [x26]
   1aa00:	b	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>
   1aa04:	ldr	w9, [x28]
   1aa08:	cmp	w9, w8
   1aa0c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aa10:	ldr	x9, [x25]
   1aa14:	ldr	x8, [x9, x8, lsl #3]
   1aa18:	ldr	w9, [x8, #48]
   1aa1c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1aa20:	ldr	x1, [x8, #72]
   1aa24:	mov	x0, x20
   1aa28:	bl	1e260 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1aa2c:	ldrb	w8, [x22], #2
   1aa30:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1aa34:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1aa38:	ldr	w9, [x28]
   1aa3c:	cmp	w9, w8
   1aa40:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aa44:	ldr	x9, [x25]
   1aa48:	ldr	x0, [x9, x8, lsl #3]
   1aa4c:	ldr	x8, [x0]
   1aa50:	ldr	x8, [x8, #56]
   1aa54:	blr	x8
   1aa58:	ldr	w8, [x26]
   1aa5c:	ldr	w9, [x27]
   1aa60:	add	w24, w0, #0xcc
   1aa64:	cmp	w8, w9
   1aa68:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1aa6c:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1aa70:	ldr	w9, [x28]
   1aa74:	cmp	w9, w8
   1aa78:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aa7c:	ldr	x9, [x25]
   1aa80:	ldr	x9, [x9, x8, lsl #3]
   1aa84:	ldr	w8, [x9, #48]
   1aa88:	cmp	w8, #0x9
   1aa8c:	b.eq	1bed8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1688>  // b.none
   1aa90:	b	1c8cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x207c>
   1aa94:	ldr	w9, [x28]
   1aa98:	cmp	w9, w8
   1aa9c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aaa0:	ldr	x9, [x25]
   1aaa4:	ldr	x0, [x9, x8, lsl #3]
   1aaa8:	ldr	x8, [x0]
   1aaac:	ldr	x8, [x8, #56]
   1aab0:	blr	x8
   1aab4:	ldr	w8, [x26]
   1aab8:	ldr	w9, [x27]
   1aabc:	add	w24, w0, #0x5c
   1aac0:	cmp	w8, w9
   1aac4:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1aac8:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1aacc:	ldr	w8, [x26]
   1aad0:	ldr	w9, [x27]
   1aad4:	cmp	w8, w9
   1aad8:	b.cs	1c534 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ce4>  // b.hs, b.nlast
   1aadc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1aae0:	ldr	x9, [x21]
   1aae4:	ldr	q0, [x10]
   1aae8:	str	q0, [x9, w8, uxtw #4]
   1aaec:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1aaf0:	ldr	w9, [x28]
   1aaf4:	cmp	w9, w8
   1aaf8:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aafc:	ldr	x9, [x25]
   1ab00:	ldr	x8, [x9, x8, lsl #3]
   1ab04:	ldr	w9, [x8, #48]
   1ab08:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1ab0c:	ldr	x8, [x8, #72]
   1ab10:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1ab14:	ldr	w9, [x8]
   1ab18:	cmp	w9, #0x1
   1ab1c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ab20:	ldr	w9, [x8, #20]
   1ab24:	b	1bea8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1658>
   1ab28:	ldr	w9, [x28]
   1ab2c:	cmp	w9, w8
   1ab30:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ab34:	ldr	x9, [x25]
   1ab38:	ldr	x24, [x9, x8, lsl #3]
   1ab3c:	ldr	w8, [x24, #48]
   1ab40:	cmp	w8, #0x3
   1ab44:	b.eq	1c1f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x19a4>  // b.none
   1ab48:	cmp	w8, #0xa
   1ab4c:	b.ne	1c8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2064>  // b.any
   1ab50:	add	x8, x24, #0x48
   1ab54:	b	1c1f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x19a8>
   1ab58:	ldr	w9, [x28]
   1ab5c:	cmp	w9, w8
   1ab60:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ab64:	ldr	x9, [x25]
   1ab68:	ldr	x8, [x9, x8, lsl #3]
   1ab6c:	ldr	w9, [x8, #48]
   1ab70:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1ab74:	ldr	x8, [x8, #72]
   1ab78:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1ab7c:	ldr	w9, [x8]
   1ab80:	cmp	w9, #0x1
   1ab84:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ab88:	ldr	w9, [x26]
   1ab8c:	ldr	w10, [x27]
   1ab90:	ldrh	w24, [x8, #22]
   1ab94:	b	1be20 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1ab98:	ldr	w8, [x26]
   1ab9c:	ldr	w9, [x27]
   1aba0:	cmp	w8, w9
   1aba4:	b.cs	1c550 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d00>  // b.hs, b.nlast
   1aba8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1abac:	ldr	x9, [x21]
   1abb0:	ldr	q0, [x10]
   1abb4:	str	q0, [x9, w8, uxtw #4]
   1abb8:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1abbc:	ldr	w9, [x28]
   1abc0:	cmp	w9, w8
   1abc4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1abc8:	ldr	x9, [x25]
   1abcc:	ldr	x9, [x9, x8, lsl #3]
   1abd0:	ldr	w8, [x9, #48]
   1abd4:	cmp	w8, #0x4
   1abd8:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1abdc:	ldr	w8, [x26]
   1abe0:	ldr	w10, [x27]
   1abe4:	ldr	w9, [x9, #72]
   1abe8:	cmp	w8, w10
   1abec:	add	w24, w9, #0xdc
   1abf0:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1abf4:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1abf8:	ldr	w9, [x28]
   1abfc:	cmp	w9, w8
   1ac00:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ac04:	ldr	x9, [x25]
   1ac08:	ldr	w10, [x27]
   1ac0c:	ldr	x9, [x9, x8, lsl #3]
   1ac10:	ldr	w8, [x26]
   1ac14:	ldr	w24, [x9, #88]
   1ac18:	cmp	w8, w10
   1ac1c:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1ac20:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1ac24:	ldr	w8, [x26]
   1ac28:	ldr	w9, [x27]
   1ac2c:	cmp	w8, w9
   1ac30:	b.cs	1c56c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d1c>  // b.hs, b.nlast
   1ac34:	ldr	x9, [x21]
   1ac38:	mov	w10, #0x2                   	// #2
   1ac3c:	dup	v0.2d, x10
   1ac40:	str	q0, [x9, w8, uxtw #4]
   1ac44:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1ac48:	ldr	w9, [x28]
   1ac4c:	cmp	w9, w8
   1ac50:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ac54:	ldr	x9, [x25]
   1ac58:	ldr	x9, [x9, x8, lsl #3]
   1ac5c:	ldr	w8, [x9, #48]
   1ac60:	cmp	w8, #0x4
   1ac64:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1ac68:	ldr	w8, [x26]
   1ac6c:	ldr	w10, [x27]
   1ac70:	ldr	w9, [x9, #72]
   1ac74:	cmp	w8, w10
   1ac78:	add	w24, w9, #0x120
   1ac7c:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1ac80:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1ac84:	ldr	w9, [x28]
   1ac88:	cmp	w9, w8
   1ac8c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ac90:	ldr	x9, [x25]
   1ac94:	ldr	x8, [x9, x8, lsl #3]
   1ac98:	ldr	w9, [x8, #48]
   1ac9c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1aca0:	ldr	x24, [x8, #72]
   1aca4:	cbz	x24, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1aca8:	ldr	w8, [x24]
   1acac:	cmp	w8, #0x1
   1acb0:	b.ne	1c054 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.any
   1acb4:	ldr	x9, [x24, #16]
   1acb8:	b	1bb98 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1348>
   1acbc:	ldr	w9, [x28]
   1acc0:	cmp	w9, w8
   1acc4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1acc8:	ldr	x9, [x25]
   1accc:	ldr	x24, [x9, x8, lsl #3]
   1acd0:	ldr	w8, [x24, #48]
   1acd4:	cmp	w8, #0x3
   1acd8:	b.eq	1c274 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a24>  // b.none
   1acdc:	cmp	w8, #0xa
   1ace0:	b.ne	1c8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2064>  // b.any
   1ace4:	add	x8, x24, #0x48
   1ace8:	b	1c278 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a28>
   1acec:	ldr	w9, [x28]
   1acf0:	cmp	w9, w8
   1acf4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1acf8:	ldr	x9, [x25]
   1acfc:	ldr	x8, [x9, x8, lsl #3]
   1ad00:	ldr	w9, [x8, #48]
   1ad04:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1ad08:	ldr	x8, [x8, #72]
   1ad0c:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1ad10:	ldr	w9, [x8]
   1ad14:	cmp	w9, #0x1
   1ad18:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ad1c:	ldr	x9, [x8, #16]
   1ad20:	ldr	w8, [x26]
   1ad24:	ldr	w10, [x27]
   1ad28:	mvn	x9, x9
   1ad2c:	lsr	x24, x9, #48
   1ad30:	cmp	w8, w10
   1ad34:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1ad38:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1ad3c:	ldr	w9, [x28]
   1ad40:	cmp	w9, w8
   1ad44:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ad48:	ldr	x9, [x25]
   1ad4c:	ldr	x9, [x9, x8, lsl #3]
   1ad50:	ldr	w8, [x9, #48]
   1ad54:	cmp	w8, #0x4
   1ad58:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1ad5c:	ldr	w8, [x26]
   1ad60:	ldr	w10, [x27]
   1ad64:	ldr	w9, [x9, #72]
   1ad68:	cmp	w8, w10
   1ad6c:	sub	w24, w9, #0x50
   1ad70:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1ad74:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1ad78:	ldr	w9, [x28]
   1ad7c:	cmp	w9, w8
   1ad80:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ad84:	ldr	x9, [x25]
   1ad88:	ldr	x9, [x9, x8, lsl #3]
   1ad8c:	ldr	w8, [x9, #48]
   1ad90:	cmp	w8, #0x4
   1ad94:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1ad98:	ldr	w8, [x26]
   1ad9c:	ldr	w10, [x27]
   1ada0:	ldr	w9, [x9, #72]
   1ada4:	cmp	w8, w10
   1ada8:	add	w24, w9, #0x11c
   1adac:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1adb0:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1adb4:	ldr	w9, [x28]
   1adb8:	cmp	w9, w8
   1adbc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1adc0:	ldr	x9, [x25]
   1adc4:	ldr	x8, [x9, x8, lsl #3]
   1adc8:	ldr	w9, [x8, #48]
   1adcc:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1add0:	ldr	x8, [x8, #72]
   1add4:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1add8:	ldr	w9, [x8]
   1addc:	cmp	w9, #0x1
   1ade0:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ade4:	ldrh	w9, [x8, #18]
   1ade8:	b	1bea8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1658>
   1adec:	ldr	w8, [x26]
   1adf0:	ldr	w9, [x27]
   1adf4:	cmp	w8, w9
   1adf8:	b.cs	1c588 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d38>  // b.hs, b.nlast
   1adfc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1ae00:	ldr	x9, [x21]
   1ae04:	ldr	q0, [x10]
   1ae08:	str	q0, [x9, w8, uxtw #4]
   1ae0c:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1ae10:	ldr	w9, [x28]
   1ae14:	cmp	w9, w8
   1ae18:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ae1c:	ldr	x9, [x25]
   1ae20:	ldr	x8, [x9, x8, lsl #3]
   1ae24:	ldr	w9, [x8, #48]
   1ae28:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1ae2c:	ldr	x8, [x8, #72]
   1ae30:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1ae34:	ldr	w9, [x8]
   1ae38:	cmp	w9, #0x1
   1ae3c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ae40:	ldr	x9, [x8, #16]
   1ae44:	mov	x11, #0x2d83                	// #11651
   1ae48:	movk	x11, #0x82d8, lsl #16
   1ae4c:	ldr	w8, [x26]
   1ae50:	ldr	w10, [x27]
   1ae54:	movk	x11, #0xd82d, lsl #32
   1ae58:	movk	x11, #0x2d82, lsl #48
   1ae5c:	smulh	x9, x9, x11
   1ae60:	asr	x11, x9, #4
   1ae64:	cmp	w8, w10
   1ae68:	add	x24, x11, x9, lsr #63
   1ae6c:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1ae70:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1ae74:	ldr	w9, [x28]
   1ae78:	cmp	w9, w8
   1ae7c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ae80:	ldr	x9, [x25]
   1ae84:	ldr	x9, [x9, x8, lsl #3]
   1ae88:	ldr	w8, [x9, #48]
   1ae8c:	cmp	w8, #0x5
   1ae90:	b.eq	1aef0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6a0>  // b.none
   1ae94:	b	1c8ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x209c>
   1ae98:	ldr	w9, [x28]
   1ae9c:	cmp	w9, w8
   1aea0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aea4:	ldr	x9, [x25]
   1aea8:	ldr	x8, [x9, x8, lsl #3]
   1aeac:	ldr	w9, [x8, #48]
   1aeb0:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1aeb4:	ldr	x24, [x8, #72]
   1aeb8:	cbz	x24, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1aebc:	ldr	w8, [x24]
   1aec0:	cmp	w8, #0x1
   1aec4:	b.ne	1c054 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.any
   1aec8:	ldr	x9, [x24, #16]
   1aecc:	b	1b488 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xc38>
   1aed0:	ldr	w9, [x28]
   1aed4:	cmp	w9, w8
   1aed8:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1aedc:	ldr	x9, [x25]
   1aee0:	ldr	x9, [x9, x8, lsl #3]
   1aee4:	ldr	w8, [x9, #48]
   1aee8:	cmp	w8, #0x2
   1aeec:	b.ne	1c90c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20bc>  // b.any
   1aef0:	ldr	w8, [x26]
   1aef4:	ldr	w10, [x27]
   1aef8:	ldr	w24, [x9, #72]
   1aefc:	b	1b038 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x7e8>
   1af00:	ldr	w9, [x28]
   1af04:	cmp	w9, w8
   1af08:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1af0c:	ldr	x9, [x25]
   1af10:	ldr	x8, [x9, x8, lsl #3]
   1af14:	ldr	w9, [x8, #48]
   1af18:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1af1c:	ldr	x8, [x8, #72]
   1af20:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1af24:	ldr	w9, [x8]
   1af28:	cmp	w9, #0x1
   1af2c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1af30:	ldr	x9, [x8, #16]
   1af34:	mov	x10, #0x2d83                	// #11651
   1af38:	movk	x10, #0x82d8, lsl #16
   1af3c:	movk	x10, #0xd82d, lsl #32
   1af40:	ldr	w8, [x26]
   1af44:	ldr	w11, [x27]
   1af48:	movk	x10, #0x2d82, lsl #48
   1af4c:	sub	x9, x9, #0x5a
   1af50:	smulh	x9, x9, x10
   1af54:	asr	x10, x9, #5
   1af58:	cmp	w8, w11
   1af5c:	add	x24, x10, x9, lsr #63
   1af60:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1af64:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1af68:	ldr	w9, [x28]
   1af6c:	cmp	w9, w8
   1af70:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1af74:	ldr	x9, [x25]
   1af78:	ldr	x8, [x9, x8, lsl #3]
   1af7c:	ldr	w9, [x8, #48]
   1af80:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1af84:	ldr	x24, [x8, #72]
   1af88:	cbz	x24, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1af8c:	ldr	w8, [x24]
   1af90:	cmp	w8, #0x1
   1af94:	b.ne	1c054 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.any
   1af98:	ldr	w8, [x26]
   1af9c:	ldr	w9, [x27]
   1afa0:	ldr	x24, [x24, #16]
   1afa4:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1afa8:	ldr	w9, [x28]
   1afac:	cmp	w9, w8
   1afb0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1afb4:	ldr	x9, [x25]
   1afb8:	ldr	x9, [x9, x8, lsl #3]
   1afbc:	ldr	w8, [x9, #48]
   1afc0:	cmp	w8, #0x3
   1afc4:	b.eq	1c324 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ad4>  // b.none
   1afc8:	cmp	w8, #0xa
   1afcc:	b.ne	1c8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2064>  // b.any
   1afd0:	ldr	w8, [x9, #72]
   1afd4:	mov	w10, #0x8                   	// #8
   1afd8:	b	1b81c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xfcc>
   1afdc:	ldr	w9, [x28]
   1afe0:	cmp	w9, w8
   1afe4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1afe8:	ldr	x9, [x25]
   1afec:	ldr	x24, [x9, x8, lsl #3]
   1aff0:	mov	x0, x24
   1aff4:	bl	1d9a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   1aff8:	cbz	w0, 1be58 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1608>
   1affc:	mov	x0, x24
   1b000:	bl	1dc90 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1b004:	cbz	w0, 1be58 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1608>
   1b008:	b	1c92c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20dc>
   1b00c:	ldr	w9, [x28]
   1b010:	cmp	w9, w8
   1b014:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b018:	ldr	x9, [x25]
   1b01c:	ldr	x9, [x9, x8, lsl #3]
   1b020:	ldr	w8, [x9, #48]
   1b024:	cmp	w8, #0xe
   1b028:	b.ne	1c94c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20fc>  // b.any
   1b02c:	ldr	w8, [x26]
   1b030:	ldr	w10, [x27]
   1b034:	ldr	w24, [x9, #84]
   1b038:	cmp	w8, w10
   1b03c:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1b040:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1b044:	ldr	w9, [x28]
   1b048:	cmp	w9, w8
   1b04c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b050:	ldr	x9, [x25]
   1b054:	ldr	x24, [x9, x8, lsl #3]
   1b058:	mov	x0, x24
   1b05c:	bl	1d9a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   1b060:	cbz	w0, 1b070 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x820>
   1b064:	mov	x0, x24
   1b068:	bl	1df78 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   1b06c:	cbnz	w0, 1c96c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x211c>
   1b070:	mov	x0, x24
   1b074:	bl	1df78 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   1b078:	b	1be60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1610>
   1b07c:	ldr	w9, [x28]
   1b080:	cmp	w9, w8
   1b084:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b088:	ldr	x9, [x25]
   1b08c:	ldr	x8, [x9, x8, lsl #3]
   1b090:	ldr	w9, [x8, #48]
   1b094:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b098:	ldr	x9, [x8, #72]
   1b09c:	cbnz	x9, 1c094 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1844>
   1b0a0:	b	1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b0a4:	ldr	w9, [x28]
   1b0a8:	cmp	w9, w8
   1b0ac:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b0b0:	ldr	x9, [x25]
   1b0b4:	ldr	x0, [x9, x8, lsl #3]
   1b0b8:	ldr	x8, [x0]
   1b0bc:	ldr	x8, [x8, #56]
   1b0c0:	blr	x8
   1b0c4:	ldr	w8, [x26]
   1b0c8:	ldr	w9, [x27]
   1b0cc:	add	w24, w0, #0xac
   1b0d0:	cmp	w8, w9
   1b0d4:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b0d8:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b0dc:	ldr	w9, [x28]
   1b0e0:	cmp	w9, w8
   1b0e4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b0e8:	ldr	x9, [x25]
   1b0ec:	ldr	x24, [x9, x8, lsl #3]
   1b0f0:	add	x8, sp, #0x20
   1b0f4:	mov	x0, x24
   1b0f8:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1b0fc:	ldrb	w8, [sp, #48]
   1b100:	cbz	w8, 1b7b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf64>
   1b104:	ldr	w8, [x26]
   1b108:	ldr	w9, [x27]
   1b10c:	ldr	x24, [sp, #32]
   1b110:	cmp	w8, w9
   1b114:	b.cs	1c4fc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1cac>  // b.hs, b.nlast
   1b118:	ldr	x9, [x21]
   1b11c:	mov	w10, #0x2                   	// #2
   1b120:	add	x8, x9, w8, uxtw #4
   1b124:	stp	x10, x24, [x8]
   1b128:	ldr	w8, [x26]
   1b12c:	ldr	w9, [x27]
   1b130:	cmp	w8, w9
   1b134:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1b138:	add	w8, w8, #0x1
   1b13c:	str	w8, [x26]
   1b140:	ldr	w24, [sp, #40]
   1b144:	cmp	w8, w9
   1b148:	b.cs	1c518 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1cc8>  // b.hs, b.nlast
   1b14c:	ldr	x9, [x21]
   1b150:	mov	w10, #0x2                   	// #2
   1b154:	add	x8, x9, w8, uxtw #4
   1b158:	stp	x10, x24, [x8]
   1b15c:	ldr	w8, [x26]
   1b160:	ldr	w9, [x27]
   1b164:	cmp	w8, w9
   1b168:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1b16c:	add	w8, w8, #0x1
   1b170:	str	w8, [x26]
   1b174:	strb	wzr, [sp, #48]
   1b178:	ldrb	w8, [x22], #2
   1b17c:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1b180:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1b184:	ldr	w9, [x28]
   1b188:	cmp	w9, w8
   1b18c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b190:	ldr	x9, [x25]
   1b194:	ldr	x0, [x9, x8, lsl #3]
   1b198:	ldr	x8, [x0]
   1b19c:	ldr	x8, [x8, #56]
   1b1a0:	blr	x8
   1b1a4:	ldr	w8, [x26]
   1b1a8:	ldr	w9, [x27]
   1b1ac:	add	w24, w0, #0x7c
   1b1b0:	cmp	w8, w9
   1b1b4:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b1b8:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b1bc:	ldr	w9, [x28]
   1b1c0:	cmp	w9, w8
   1b1c4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b1c8:	ldr	x9, [x25]
   1b1cc:	ldr	x8, [x9, x8, lsl #3]
   1b1d0:	ldr	w9, [x8, #48]
   1b1d4:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b1d8:	ldr	x8, [x8, #72]
   1b1dc:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b1e0:	ldr	w9, [x8]
   1b1e4:	cmp	w9, #0x1
   1b1e8:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b1ec:	ldr	x9, [x8, #16]
   1b1f0:	b	1c034 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17e4>
   1b1f4:	ldr	w9, [x28]
   1b1f8:	cmp	w9, w8
   1b1fc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b200:	ldr	x9, [x25]
   1b204:	ldr	x9, [x9, x8, lsl #3]
   1b208:	ldr	w8, [x9, #48]
   1b20c:	cmp	w8, #0x4
   1b210:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1b214:	ldr	w8, [x26]
   1b218:	ldr	w10, [x27]
   1b21c:	ldr	w9, [x9, #72]
   1b220:	cmp	w8, w10
   1b224:	add	w24, w9, #0x140
   1b228:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b22c:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b230:	ldr	w9, [x28]
   1b234:	cmp	w9, w8
   1b238:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b23c:	ldr	x9, [x25]
   1b240:	ldr	x24, [x9, x8, lsl #3]
   1b244:	ldr	x8, [x24]
   1b248:	mov	x0, x24
   1b24c:	ldr	x8, [x8, #56]
   1b250:	blr	x8
   1b254:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1b258:	ldr	x8, [x8]
   1b25c:	mov	w9, w0
   1b260:	lsr	x9, x9, #3
   1b264:	ldrh	w10, [x8, #1238]
   1b268:	cmp	w9, w10
   1b26c:	b.cs	1c98c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x213c>  // b.hs, b.nlast
   1b270:	ldr	x8, [x8, #1224]
   1b274:	ldrb	w8, [x8, x9]
   1b278:	and	w9, w0, #0x7
   1b27c:	lsr	w8, w8, w9
   1b280:	tbz	w8, #0, 1c98c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x213c>
   1b284:	ldr	x8, [x24]
   1b288:	mov	x0, x24
   1b28c:	b	1a914 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xc4>
   1b290:	ldr	w9, [x28]
   1b294:	cmp	w9, w8
   1b298:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b29c:	ldr	x9, [x25]
   1b2a0:	ldr	x9, [x9, x8, lsl #3]
   1b2a4:	ldr	w8, [x9, #48]
   1b2a8:	cmp	w8, #0x3
   1b2ac:	b.eq	1c330 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ae0>  // b.none
   1b2b0:	cmp	w8, #0xa
   1b2b4:	b.ne	1c8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2064>  // b.any
   1b2b8:	add	x8, x9, #0x48
   1b2bc:	add	x9, x9, #0x4c
   1b2c0:	b	1c338 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ae8>
   1b2c4:	ldr	w8, [x26]
   1b2c8:	ldr	w9, [x27]
   1b2cc:	cmp	w8, w9
   1b2d0:	b.cs	1c5a4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d54>  // b.hs, b.nlast
   1b2d4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b2d8:	ldr	x9, [x21]
   1b2dc:	ldr	q0, [x10]
   1b2e0:	str	q0, [x9, w8, uxtw #4]
   1b2e4:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b2e8:	ldr	w9, [x28]
   1b2ec:	cmp	w9, w8
   1b2f0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b2f4:	ldr	x9, [x25]
   1b2f8:	ldr	x9, [x9, x8, lsl #3]
   1b2fc:	ldr	w8, [x9, #48]
   1b300:	cmp	w8, #0x4
   1b304:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1b308:	ldr	w8, [x26]
   1b30c:	ldr	w10, [x27]
   1b310:	ldr	w9, [x9, #72]
   1b314:	cmp	w8, w10
   1b318:	add	w24, w9, #0x13c
   1b31c:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b320:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b324:	ldr	w9, [x28]
   1b328:	cmp	w9, w8
   1b32c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b330:	ldr	x9, [x25]
   1b334:	ldr	x0, [x9, x8, lsl #3]
   1b338:	add	x8, sp, #0x20
   1b33c:	bl	1d228 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   1b340:	ldrb	w8, [sp, #48]
   1b344:	cbz	w8, 1c9ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x215c>
   1b348:	ldr	w8, [x26]
   1b34c:	ldr	w9, [x27]
   1b350:	ldr	x10, [sp, #32]
   1b354:	cmp	w8, w9
   1b358:	neg	x24, x10
   1b35c:	b.cs	1c5c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d70>  // b.hs, b.nlast
   1b360:	ldr	x9, [x21]
   1b364:	mov	w10, #0x2                   	// #2
   1b368:	add	x8, x9, w8, uxtw #4
   1b36c:	stp	x10, x24, [x8]
   1b370:	ldr	w8, [x26]
   1b374:	ldr	w9, [x27]
   1b378:	cmp	w8, w9
   1b37c:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1b380:	add	w8, w8, #0x1
   1b384:	str	w8, [x26]
   1b388:	ldr	w24, [sp, #40]
   1b38c:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1b390:	ldr	w8, [x26]
   1b394:	ldr	w9, [x27]
   1b398:	cmp	w8, w9
   1b39c:	b.cs	1c5dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d8c>  // b.hs, b.nlast
   1b3a0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b3a4:	ldr	x9, [x21]
   1b3a8:	ldr	q0, [x10]
   1b3ac:	str	q0, [x9, w8, uxtw #4]
   1b3b0:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b3b4:	ldr	w9, [x28]
   1b3b8:	cmp	w9, w8
   1b3bc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b3c0:	ldr	x9, [x25]
   1b3c4:	ldr	x8, [x9, x8, lsl #3]
   1b3c8:	ldr	w9, [x8, #48]
   1b3cc:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b3d0:	ldr	x8, [x8, #72]
   1b3d4:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b3d8:	ldr	w9, [x8]
   1b3dc:	cmp	w9, #0x1
   1b3e0:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b3e4:	ldr	x9, [x8, #16]
   1b3e8:	ldr	w8, [x26]
   1b3ec:	ldr	w10, [x27]
   1b3f0:	mov	x11, #0x5555555555555555    	// #6148914691236517205
   1b3f4:	movk	x11, #0x5556
   1b3f8:	smulh	x9, x9, x11
   1b3fc:	cmp	w8, w10
   1b400:	add	x24, x9, x9, lsr #63
   1b404:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1b408:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1b40c:	ldr	w9, [x28]
   1b410:	cmp	w9, w8
   1b414:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b418:	ldr	x9, [x25]
   1b41c:	ldr	x9, [x9, x8, lsl #3]
   1b420:	ldr	w8, [x9, #48]
   1b424:	cmp	w8, #0xd
   1b428:	b.eq	1bed8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1688>  // b.none
   1b42c:	b	1c9c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2174>
   1b430:	ldr	w8, [x26]
   1b434:	ldr	w9, [x27]
   1b438:	cmp	w8, w9
   1b43c:	b.cs	1c5f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1da8>  // b.hs, b.nlast
   1b440:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b444:	ldr	x9, [x21]
   1b448:	ldr	q0, [x10]
   1b44c:	str	q0, [x9, w8, uxtw #4]
   1b450:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b454:	ldr	w9, [x28]
   1b458:	cmp	w9, w8
   1b45c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b460:	ldr	x9, [x25]
   1b464:	ldr	x8, [x9, x8, lsl #3]
   1b468:	ldr	w9, [x8, #48]
   1b46c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b470:	ldr	x8, [x8, #72]
   1b474:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b478:	ldr	w9, [x8]
   1b47c:	cmp	w9, #0x1
   1b480:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b484:	ldr	x9, [x8, #16]
   1b488:	ldr	w8, [x26]
   1b48c:	ldr	w10, [x27]
   1b490:	add	x11, x9, #0xf
   1b494:	cmp	x9, #0x0
   1b498:	csel	x9, x11, x9, lt  // lt = tstop
   1b49c:	cmp	w8, w10
   1b4a0:	asr	x24, x9, #4
   1b4a4:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1b4a8:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1b4ac:	ldr	w8, [x26]
   1b4b0:	ldr	w9, [x27]
   1b4b4:	cmp	w8, w9
   1b4b8:	b.cs	1c614 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dc4>  // b.hs, b.nlast
   1b4bc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b4c0:	ldr	x9, [x21]
   1b4c4:	ldr	q0, [x10]
   1b4c8:	str	q0, [x9, w8, uxtw #4]
   1b4cc:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b4d0:	cmp	w8, #0xc
   1b4d4:	b.cs	1c9e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2194>  // b.hs, b.nlast
   1b4d8:	cmp	w8, #0xb
   1b4dc:	b.eq	1c318 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ac8>  // b.none
   1b4e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1b4e4:	add	x8, x8, x8, lsl #1
   1b4e8:	add	x9, x9, #0x0
   1b4ec:	ldrb	w24, [x9, x8]
   1b4f0:	ldr	w8, [x26]
   1b4f4:	cmp	w8, w24
   1b4f8:	b.ls	1ca04 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b4>  // b.plast
   1b4fc:	ldr	w9, [x20, #28]
   1b500:	ldr	x25, [x20, #16]
   1b504:	cmp	w8, w9
   1b508:	mov	x9, x25
   1b50c:	b.cs	1c79c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f4c>  // b.hs, b.nlast
   1b510:	ldr	q0, [x25, x24, lsl #4]
   1b514:	str	q0, [x9, w8, uxtw #4]
   1b518:	ldr	w8, [x26]
   1b51c:	ldr	w9, [x27]
   1b520:	cmp	w8, w9
   1b524:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1b528:	ldr	x25, [sp, #24]
   1b52c:	b	1c310 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ac0>
   1b530:	ldr	w8, [x26]
   1b534:	ldr	w9, [x27]
   1b538:	cmp	w8, w9
   1b53c:	b.cs	1c630 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1de0>  // b.hs, b.nlast
   1b540:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b544:	ldr	x9, [x21]
   1b548:	ldr	q0, [x10]
   1b54c:	str	q0, [x9, w8, uxtw #4]
   1b550:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b554:	ldr	w9, [x28]
   1b558:	cmp	w9, w8
   1b55c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b560:	ldr	x9, [x25]
   1b564:	ldr	x8, [x9, x8, lsl #3]
   1b568:	ldr	w9, [x8, #48]
   1b56c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b570:	ldr	x8, [x8, #72]
   1b574:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b578:	ldr	w9, [x8]
   1b57c:	cmp	w9, #0x1
   1b580:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b584:	ldr	w8, [x8, #16]
   1b588:	str	xzr, [sp, #32]
   1b58c:	mvn	w8, w8
   1b590:	and	x0, x8, #0xff
   1b594:	b	1bb1c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x12cc>
   1b598:	ldr	w9, [x28]
   1b59c:	cmp	w9, w8
   1b5a0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b5a4:	ldr	x9, [x25]
   1b5a8:	ldr	x8, [x9, x8, lsl #3]
   1b5ac:	ldr	w9, [x8, #48]
   1b5b0:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b5b4:	ldr	x8, [x8, #72]
   1b5b8:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b5bc:	ldr	w9, [x8]
   1b5c0:	cmp	w9, #0x1
   1b5c4:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b5c8:	ldr	x9, [x8, #16]
   1b5cc:	b	1b640 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xdf0>
   1b5d0:	ldr	w9, [x28]
   1b5d4:	cmp	w9, w8
   1b5d8:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b5dc:	ldr	x9, [x25]
   1b5e0:	ldr	x9, [x9, x8, lsl #3]
   1b5e4:	ldr	w8, [x9, #48]
   1b5e8:	cmp	w8, #0x4
   1b5ec:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1b5f0:	ldr	w8, [x26]
   1b5f4:	ldr	w10, [x27]
   1b5f8:	ldr	w9, [x9, #72]
   1b5fc:	cmp	w8, w10
   1b600:	add	w24, w9, #0x160
   1b604:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b608:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b60c:	ldr	w9, [x28]
   1b610:	cmp	w9, w8
   1b614:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b618:	ldr	x9, [x25]
   1b61c:	ldr	x8, [x9, x8, lsl #3]
   1b620:	ldr	w9, [x8, #48]
   1b624:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b628:	ldr	x24, [x8, #72]
   1b62c:	cbz	x24, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b630:	ldr	w8, [x24]
   1b634:	cmp	w8, #0x1
   1b638:	b.ne	1c054 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.any
   1b63c:	ldr	x9, [x24, #16]
   1b640:	ldr	w8, [x26]
   1b644:	ldr	w10, [x27]
   1b648:	add	x11, x9, #0x3
   1b64c:	cmp	x9, #0x0
   1b650:	csel	x9, x11, x9, lt  // lt = tstop
   1b654:	cmp	w8, w10
   1b658:	asr	x24, x9, #2
   1b65c:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1b660:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1b664:	ldr	w9, [x28]
   1b668:	cmp	w9, w8
   1b66c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b670:	ldr	x9, [x25]
   1b674:	ldr	x8, [x9, x8, lsl #3]
   1b678:	ldr	w9, [x8, #48]
   1b67c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b680:	ldr	x8, [x8, #72]
   1b684:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b688:	ldr	w9, [x8]
   1b68c:	cmp	w9, #0x1
   1b690:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b694:	ldr	w9, [x26]
   1b698:	ldr	w10, [x27]
   1b69c:	ldrh	w24, [x8, #20]
   1b6a0:	b	1be20 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1b6a4:	ldr	w9, [x28]
   1b6a8:	cmp	w9, w8
   1b6ac:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b6b0:	ldr	x9, [x25]
   1b6b4:	ldr	x24, [x9, x8, lsl #3]
   1b6b8:	ldr	x8, [x24]
   1b6bc:	mov	x0, x24
   1b6c0:	ldr	x8, [x8, #56]
   1b6c4:	blr	x8
   1b6c8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1b6cc:	ldr	x8, [x8]
   1b6d0:	mov	w9, w0
   1b6d4:	lsr	x9, x9, #3
   1b6d8:	ldrh	w10, [x8, #1238]
   1b6dc:	cmp	w9, w10
   1b6e0:	b.cs	1ca24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d4>  // b.hs, b.nlast
   1b6e4:	ldr	x8, [x8, #1224]
   1b6e8:	ldrb	w8, [x8, x9]
   1b6ec:	and	w9, w0, #0x7
   1b6f0:	lsr	w8, w8, w9
   1b6f4:	tbz	w8, #0, 1ca24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d4>
   1b6f8:	ldr	x8, [x24]
   1b6fc:	mov	x0, x24
   1b700:	ldr	x8, [x8, #56]
   1b704:	blr	x8
   1b708:	ldr	w8, [x26]
   1b70c:	ldr	w9, [x27]
   1b710:	sub	w24, w0, #0x50
   1b714:	cmp	w8, w9
   1b718:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1b71c:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1b720:	ldr	w8, [x26]
   1b724:	ldr	w9, [x27]
   1b728:	cmp	w8, w9
   1b72c:	b.cs	1c64c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dfc>  // b.hs, b.nlast
   1b730:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b734:	ldr	x9, [x21]
   1b738:	ldr	q0, [x10]
   1b73c:	str	q0, [x9, w8, uxtw #4]
   1b740:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b744:	ldr	w8, [x26]
   1b748:	ldr	w9, [x27]
   1b74c:	cmp	w8, w9
   1b750:	b.cs	1c668 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e18>  // b.hs, b.nlast
   1b754:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b758:	ldr	x9, [x21]
   1b75c:	ldr	q0, [x10]
   1b760:	str	q0, [x9, w8, uxtw #4]
   1b764:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b768:	ldr	w8, [x26]
   1b76c:	ldr	w9, [x27]
   1b770:	cmp	w8, w9
   1b774:	b.cs	1c3c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b74>  // b.hs, b.nlast
   1b778:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b77c:	ldr	x9, [x21]
   1b780:	ldr	q0, [x10]
   1b784:	str	q0, [x9, w8, uxtw #4]
   1b788:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b78c:	ldr	w9, [x28]
   1b790:	cmp	w9, w8
   1b794:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b798:	ldr	x9, [x25]
   1b79c:	ldr	x24, [x9, x8, lsl #3]
   1b7a0:	add	x8, sp, #0x20
   1b7a4:	mov	x0, x24
   1b7a8:	bl	1d228 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   1b7ac:	ldrb	w8, [sp, #48]
   1b7b0:	cbnz	w8, 1b104 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x8b4>
   1b7b4:	ldr	w8, [x24, #48]
   1b7b8:	cbz	w8, 1c3ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b5c>
   1b7bc:	cmp	w8, #0x1
   1b7c0:	b.ne	1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>  // b.any
   1b7c4:	ldr	x1, [x24, #72]
   1b7c8:	mov	x0, x20
   1b7cc:	bl	1e260 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1b7d0:	ldr	w8, [x24, #48]
   1b7d4:	cmp	w8, #0x1
   1b7d8:	b.ne	1ca44 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f4>  // b.any
   1b7dc:	ldr	w8, [x26]
   1b7e0:	ldr	w9, [x27]
   1b7e4:	ldr	w24, [x24, #80]
   1b7e8:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1b7ec:	ldr	w9, [x28]
   1b7f0:	cmp	w9, w8
   1b7f4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b7f8:	ldr	x9, [x25]
   1b7fc:	ldr	x9, [x9, x8, lsl #3]
   1b800:	ldr	w8, [x9, #48]
   1b804:	cmp	w8, #0x3
   1b808:	b.eq	1c364 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b14>  // b.none
   1b80c:	cmp	w8, #0xa
   1b810:	b.ne	1c8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2064>  // b.any
   1b814:	ldr	w8, [x9, #72]
   1b818:	mov	w10, #0x7                   	// #7
   1b81c:	cmp	w8, #0x0
   1b820:	csel	w8, w10, w8, eq  // eq = none
   1b824:	add	x9, x9, #0x4c
   1b828:	b	1c378 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b28>
   1b82c:	ldr	w9, [x28]
   1b830:	cmp	w9, w8
   1b834:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b838:	ldr	x9, [x25]
   1b83c:	ldr	x8, [x9, x8, lsl #3]
   1b840:	ldr	w9, [x8, #48]
   1b844:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b848:	ldr	x8, [x8, #72]
   1b84c:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b850:	ldr	w9, [x8]
   1b854:	cmp	w9, #0x1
   1b858:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b85c:	ldr	x0, [x8, #16]
   1b860:	str	xzr, [sp, #32]
   1b864:	b	1bce8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1498>
   1b868:	ldr	w9, [x28]
   1b86c:	cmp	w9, w8
   1b870:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b874:	ldr	x9, [x25]
   1b878:	ldr	x8, [x9, x8, lsl #3]
   1b87c:	ldr	w9, [x8, #48]
   1b880:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b884:	ldr	x1, [x8, #72]
   1b888:	cbz	x1, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b88c:	ldr	w8, [x1]
   1b890:	cmp	w8, #0x1
   1b894:	b.ne	1aa24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d4>  // b.any
   1b898:	ldr	w8, [x26]
   1b89c:	ldr	w9, [x27]
   1b8a0:	ldr	x10, [x1, #16]
   1b8a4:	cmp	w8, w9
   1b8a8:	asr	x24, x10, #12
   1b8ac:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1b8b0:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1b8b4:	ldr	w9, [x28]
   1b8b8:	cmp	w9, w8
   1b8bc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b8c0:	ldr	x9, [x25]
   1b8c4:	ldr	x8, [x9, x8, lsl #3]
   1b8c8:	ldr	w9, [x8, #48]
   1b8cc:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b8d0:	ldr	x8, [x8, #72]
   1b8d4:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b8d8:	ldr	w9, [x8]
   1b8dc:	cmp	w9, #0x1
   1b8e0:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b8e4:	ldrh	w0, [x8, #16]
   1b8e8:	str	xzr, [sp, #32]
   1b8ec:	b	1b930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x10e0>
   1b8f0:	ldr	w9, [x28]
   1b8f4:	cmp	w9, w8
   1b8f8:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b8fc:	ldr	x9, [x25]
   1b900:	ldr	x8, [x9, x8, lsl #3]
   1b904:	ldr	w9, [x8, #48]
   1b908:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1b90c:	ldr	x8, [x8, #72]
   1b910:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1b914:	ldr	w9, [x8]
   1b918:	cmp	w9, #0x1
   1b91c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1b920:	ldr	w8, [x8, #16]
   1b924:	str	xzr, [sp, #32]
   1b928:	mvn	w8, w8
   1b92c:	and	x0, x8, #0xffff
   1b930:	add	x2, sp, #0x20
   1b934:	mov	w1, #0x10                  	// #16
   1b938:	b	1bcf0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14a0>
   1b93c:	ldr	w8, [x26]
   1b940:	ldr	w9, [x27]
   1b944:	cmp	w8, w9
   1b948:	b.cs	1c684 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e34>  // b.hs, b.nlast
   1b94c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1b950:	ldr	x9, [x21]
   1b954:	ldr	q0, [x10]
   1b958:	str	q0, [x9, w8, uxtw #4]
   1b95c:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1b960:	mov	x9, x28
   1b964:	ldr	w9, [x28]
   1b968:	mov	x19, x28
   1b96c:	cmp	w9, w8
   1b970:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b974:	ldr	x9, [x25]
   1b978:	mov	x28, x23
   1b97c:	mov	x23, x20
   1b980:	ldr	x20, [x9, x8, lsl #3]
   1b984:	ldr	w8, [x20, #48]
   1b988:	cmp	w8, #0xb
   1b98c:	b.ne	1ca64 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2214>  // b.any
   1b990:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1b994:	ldr	x8, [x20, #72]
   1b998:	mov	w9, #0x40                  	// #64
   1b99c:	mov	x25, x0
   1b9a0:	stur	w9, [x29, #-8]
   1b9a4:	stur	x8, [x29, #-16]
   1b9a8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1b9ac:	mov	x24, x0
   1b9b0:	sub	x2, x29, #0x10
   1b9b4:	cmp	x0, x25
   1b9b8:	b.eq	1c3e0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b90>  // b.none
   1b9bc:	ldr	x0, [sp, #16]
   1b9c0:	mov	x1, x25
   1b9c4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1b9c8:	b	1c3ec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b9c>
   1b9cc:	ldr	w9, [x28]
   1b9d0:	cmp	w9, w8
   1b9d4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1b9d8:	ldr	x9, [x25]
   1b9dc:	ldr	x0, [x9, x8, lsl #3]
   1b9e0:	ldr	x8, [x0]
   1b9e4:	ldr	x8, [x8, #56]
   1b9e8:	blr	x8
   1b9ec:	ldr	w8, [x26]
   1b9f0:	ldr	w9, [x27]
   1b9f4:	add	w24, w0, #0xec
   1b9f8:	cmp	w8, w9
   1b9fc:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1ba00:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1ba04:	ldr	w9, [x28]
   1ba08:	cmp	w9, w8
   1ba0c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1ba10:	ldr	x9, [x25]
   1ba14:	ldr	x8, [x9, x8, lsl #3]
   1ba18:	ldr	w9, [x8, #48]
   1ba1c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1ba20:	ldr	x8, [x8, #72]
   1ba24:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1ba28:	ldr	w9, [x8]
   1ba2c:	cmp	w9, #0x1
   1ba30:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1ba34:	ldr	x9, [x8, #16]
   1ba38:	ldr	w8, [x26]
   1ba3c:	ldr	w10, [x27]
   1ba40:	mov	x24, x20
   1ba44:	tst	x9, #0xff000000000000
   1ba48:	cset	w11, ne  // ne = any
   1ba4c:	tst	x9, #0xff0000000000
   1ba50:	cset	w12, ne  // ne = any
   1ba54:	tst	x9, #0xff00000000
   1ba58:	cset	w13, ne  // ne = any
   1ba5c:	tst	x9, #0xff000000
   1ba60:	cset	w14, ne  // ne = any
   1ba64:	tst	x9, #0xff0000
   1ba68:	bfi	x13, x12, #1, #1
   1ba6c:	cset	w12, ne  // ne = any
   1ba70:	tst	x9, #0xff00
   1ba74:	cset	w15, ne  // ne = any
   1ba78:	tst	x9, #0xff
   1ba7c:	lsr	x9, x9, #56
   1ba80:	bfi	x12, x14, #1, #1
   1ba84:	cset	w14, ne  // ne = any
   1ba88:	cmp	x9, #0x0
   1ba8c:	bfi	x14, x15, #1, #1
   1ba90:	cset	w9, ne  // ne = any
   1ba94:	bfi	x14, x12, #2, #2
   1ba98:	bfi	x11, x9, #1, #1
   1ba9c:	bfi	x14, x13, #4, #2
   1baa0:	cmp	w8, w10
   1baa4:	orr	x20, x14, x11, lsl #6
   1baa8:	b.cs	1c6a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e50>  // b.hs, b.nlast
   1baac:	ldr	x9, [x21]
   1bab0:	mov	w10, #0x2                   	// #2
   1bab4:	add	x8, x9, w8, uxtw #4
   1bab8:	stp	x10, x20, [x8]
   1babc:	ldr	w8, [x26]
   1bac0:	ldr	w9, [x27]
   1bac4:	cmp	w8, w9
   1bac8:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1bacc:	add	w8, w8, #0x1
   1bad0:	str	w8, [x26]
   1bad4:	mov	x20, x24
   1bad8:	ldrb	w8, [x22], #2
   1badc:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1bae0:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1bae4:	ldr	w9, [x28]
   1bae8:	cmp	w9, w8
   1baec:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1baf0:	ldr	x9, [x25]
   1baf4:	ldr	x8, [x9, x8, lsl #3]
   1baf8:	ldr	w9, [x8, #48]
   1bafc:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bb00:	ldr	x8, [x8, #72]
   1bb04:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bb08:	ldr	w9, [x8]
   1bb0c:	cmp	w9, #0x1
   1bb10:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bb14:	ldrb	w0, [x8, #16]
   1bb18:	str	xzr, [sp, #32]
   1bb1c:	add	x2, sp, #0x20
   1bb20:	mov	w1, #0x8                   	// #8
   1bb24:	b	1bcf0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14a0>
   1bb28:	ldr	w9, [x28]
   1bb2c:	cmp	w9, w8
   1bb30:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bb34:	ldr	x9, [x25]
   1bb38:	ldr	x9, [x9, x8, lsl #3]
   1bb3c:	ldr	w8, [x9, #48]
   1bb40:	cmp	w8, #0x4
   1bb44:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1bb48:	ldr	w8, [x26]
   1bb4c:	ldr	w10, [x27]
   1bb50:	ldr	w9, [x9, #72]
   1bb54:	cmp	w8, w10
   1bb58:	add	w24, w9, #0xbc
   1bb5c:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1bb60:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1bb64:	ldr	w9, [x28]
   1bb68:	cmp	w9, w8
   1bb6c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bb70:	ldr	x9, [x25]
   1bb74:	ldr	x8, [x9, x8, lsl #3]
   1bb78:	ldr	w9, [x8, #48]
   1bb7c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bb80:	ldr	x8, [x8, #72]
   1bb84:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bb88:	ldr	w9, [x8]
   1bb8c:	cmp	w9, #0x1
   1bb90:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bb94:	ldr	x9, [x8, #16]
   1bb98:	ldr	w8, [x26]
   1bb9c:	ldr	w10, [x27]
   1bba0:	add	x11, x9, #0x7
   1bba4:	cmp	x9, #0x0
   1bba8:	csel	x9, x11, x9, lt  // lt = tstop
   1bbac:	cmp	w8, w10
   1bbb0:	asr	x24, x9, #3
   1bbb4:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1bbb8:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1bbbc:	ldr	w8, [x26]
   1bbc0:	ldr	w9, [x27]
   1bbc4:	cmp	w8, w9
   1bbc8:	b.cs	1c6bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e6c>  // b.hs, b.nlast
   1bbcc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1bbd0:	ldr	x9, [x21]
   1bbd4:	ldr	q0, [x10]
   1bbd8:	str	q0, [x9, w8, uxtw #4]
   1bbdc:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1bbe0:	ldr	w9, [x28]
   1bbe4:	cmp	w9, w8
   1bbe8:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bbec:	ldr	x9, [x25]
   1bbf0:	ldr	x9, [x9, x8, lsl #3]
   1bbf4:	ldr	w8, [x9, #48]
   1bbf8:	cmp	w8, #0xc
   1bbfc:	b.eq	1bed8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1688>  // b.none
   1bc00:	b	1ca84 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2234>
   1bc04:	ldr	w9, [x28]
   1bc08:	cmp	w9, w8
   1bc0c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bc10:	ldr	x9, [x25]
   1bc14:	ldr	x8, [x9, x8, lsl #3]
   1bc18:	ldr	w9, [x8, #48]
   1bc1c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bc20:	ldr	x8, [x8, #72]
   1bc24:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bc28:	ldr	w9, [x8]
   1bc2c:	cmp	w9, #0x1
   1bc30:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bc34:	ldr	w0, [x8, #16]
   1bc38:	str	xzr, [sp, #32]
   1bc3c:	b	1bc7c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x142c>
   1bc40:	ldr	w9, [x28]
   1bc44:	cmp	w9, w8
   1bc48:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bc4c:	ldr	x9, [x25]
   1bc50:	ldr	x8, [x9, x8, lsl #3]
   1bc54:	ldr	w9, [x8, #48]
   1bc58:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bc5c:	ldr	x8, [x8, #72]
   1bc60:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bc64:	ldr	w9, [x8]
   1bc68:	cmp	w9, #0x1
   1bc6c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bc70:	ldr	w8, [x8, #16]
   1bc74:	str	xzr, [sp, #32]
   1bc78:	mvn	w0, w8
   1bc7c:	add	x2, sp, #0x20
   1bc80:	mov	w1, #0x20                  	// #32
   1bc84:	b	1bcf0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14a0>
   1bc88:	ldr	w8, [x26]
   1bc8c:	ldr	w9, [x27]
   1bc90:	cmp	w8, w9
   1bc94:	b.cs	1c6d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e88>  // b.hs, b.nlast
   1bc98:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1bc9c:	ldr	x9, [x21]
   1bca0:	ldr	q0, [x10]
   1bca4:	str	q0, [x9, w8, uxtw #4]
   1bca8:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1bcac:	ldr	w9, [x28]
   1bcb0:	cmp	w9, w8
   1bcb4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bcb8:	ldr	x9, [x25]
   1bcbc:	ldr	x8, [x9, x8, lsl #3]
   1bcc0:	ldr	w9, [x8, #48]
   1bcc4:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bcc8:	ldr	x8, [x8, #72]
   1bccc:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bcd0:	ldr	w9, [x8]
   1bcd4:	cmp	w9, #0x1
   1bcd8:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bcdc:	ldr	x8, [x8, #16]
   1bce0:	str	xzr, [sp, #32]
   1bce4:	mvn	x0, x8
   1bce8:	add	x2, sp, #0x20
   1bcec:	mov	w1, #0x40                  	// #64
   1bcf0:	bl	1d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   1bcf4:	tbz	w0, #0, 1caa4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2254>
   1bcf8:	ldr	w8, [x26]
   1bcfc:	ldr	w9, [x27]
   1bd00:	ldr	x24, [sp, #32]
   1bd04:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1bd08:	ldr	w8, [x26]
   1bd0c:	ldr	w9, [x27]
   1bd10:	cmp	w8, w9
   1bd14:	b.cs	1c6f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ea4>  // b.hs, b.nlast
   1bd18:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1bd1c:	ldr	x9, [x21]
   1bd20:	ldr	q0, [x10]
   1bd24:	str	q0, [x9, w8, uxtw #4]
   1bd28:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1bd2c:	ldr	w9, [x28]
   1bd30:	cmp	w9, w8
   1bd34:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bd38:	ldr	x9, [x25]
   1bd3c:	ldr	x9, [x9, x8, lsl #3]
   1bd40:	ldr	w8, [x9, #48]
   1bd44:	cmp	w8, #0x4
   1bd48:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1bd4c:	ldr	w8, [x26]
   1bd50:	ldr	w10, [x27]
   1bd54:	ldr	w9, [x9, #72]
   1bd58:	cmp	w8, w10
   1bd5c:	add	w24, w9, #0x15c
   1bd60:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1bd64:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1bd68:	ldr	w9, [x28]
   1bd6c:	cmp	w9, w8
   1bd70:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bd74:	ldr	x9, [x25]
   1bd78:	ldr	x8, [x9, x8, lsl #3]
   1bd7c:	ldr	w9, [x8, #48]
   1bd80:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1bd84:	ldr	x8, [x8, #72]
   1bd88:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1bd8c:	ldr	w9, [x8]
   1bd90:	cmp	w9, #0x1
   1bd94:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bd98:	ldr	w9, [x26]
   1bd9c:	ldr	w10, [x27]
   1bda0:	ldrh	w24, [x8, #16]
   1bda4:	b	1be20 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1bda8:	ldr	w9, [x28]
   1bdac:	cmp	w9, w8
   1bdb0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bdb4:	ldr	x9, [x25]
   1bdb8:	ldr	x9, [x9, x8, lsl #3]
   1bdbc:	ldr	w8, [x9, #48]
   1bdc0:	cmp	w8, #0x4
   1bdc4:	b.ne	1c894 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2044>  // b.any
   1bdc8:	ldr	w8, [x26]
   1bdcc:	ldr	w10, [x27]
   1bdd0:	ldr	w9, [x9, #72]
   1bdd4:	cmp	w8, w10
   1bdd8:	add	w24, w9, #0xfc
   1bddc:	b.cc	1a930 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xe0>  // b.lo, b.ul, b.last
   1bde0:	b	1a9e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x198>
   1bde4:	ldr	w9, [x28]
   1bde8:	cmp	w9, w8
   1bdec:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bdf0:	ldr	x9, [x25]
   1bdf4:	ldr	x8, [x9, x8, lsl #3]
   1bdf8:	ldr	w9, [x8, #48]
   1bdfc:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1be00:	ldr	x8, [x8, #72]
   1be04:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1be08:	ldr	w9, [x8]
   1be0c:	cmp	w9, #0x1
   1be10:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1be14:	ldr	w9, [x26]
   1be18:	ldr	w10, [x27]
   1be1c:	ldrh	w24, [x8, #18]
   1be20:	cmp	w9, w10
   1be24:	b.cs	1c4a8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c58>  // b.hs, b.nlast
   1be28:	ldr	x8, [x21]
   1be2c:	mov	w10, #0x2                   	// #2
   1be30:	add	x8, x8, w9, uxtw #4
   1be34:	b	1c2fc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aac>
   1be38:	ldr	w9, [x28]
   1be3c:	cmp	w9, w8
   1be40:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1be44:	ldr	x9, [x25]
   1be48:	ldr	x24, [x9, x8, lsl #3]
   1be4c:	mov	x0, x24
   1be50:	bl	1cf40 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   1be54:	cbnz	w0, 1cac4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2274>
   1be58:	mov	x0, x24
   1be5c:	bl	1dc90 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1be60:	ldr	w8, [x26]
   1be64:	ldr	w9, [x27]
   1be68:	cmp	w0, #0x0
   1be6c:	cset	w24, eq  // eq = none
   1be70:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1be74:	ldr	w9, [x28]
   1be78:	cmp	w9, w8
   1be7c:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1be80:	ldr	x9, [x25]
   1be84:	ldr	x8, [x9, x8, lsl #3]
   1be88:	ldr	w9, [x8, #48]
   1be8c:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1be90:	ldr	x8, [x8, #72]
   1be94:	cbz	x8, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1be98:	ldr	w9, [x8]
   1be9c:	cmp	w9, #0x1
   1bea0:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1bea4:	ldr	w9, [x8, #16]
   1bea8:	ldr	w8, [x26]
   1beac:	ldr	w10, [x27]
   1beb0:	mvn	w9, w9
   1beb4:	and	x24, x9, #0xffff
   1beb8:	cmp	w8, w10
   1bebc:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1bec0:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1bec4:	ldr	w9, [x28]
   1bec8:	cmp	w9, w8
   1becc:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bed0:	ldr	x9, [x25]
   1bed4:	ldr	x9, [x9, x8, lsl #3]
   1bed8:	ldr	w8, [x26]
   1bedc:	ldr	w10, [x27]
   1bee0:	ldr	w24, [x9, #84]
   1bee4:	cmp	w8, w10
   1bee8:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1beec:	ldr	x1, [sp, #8]
   1bef0:	mov	w3, #0x10                  	// #16
   1bef4:	mov	x0, x21
   1bef8:	mov	x2, xzr
   1befc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bf00:	ldr	w8, [x26]
   1bf04:	b	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>
   1bf08:	ldr	w8, [x26]
   1bf0c:	ldr	w9, [x27]
   1bf10:	cmp	w8, w9
   1bf14:	b.cs	1c710 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ec0>  // b.hs, b.nlast
   1bf18:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1bf1c:	ldr	x9, [x21]
   1bf20:	ldr	q0, [x10]
   1bf24:	str	q0, [x9, w8, uxtw #4]
   1bf28:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1bf2c:	ldr	w8, [x26]
   1bf30:	ldr	w9, [x27]
   1bf34:	cmp	w8, w9
   1bf38:	b.cs	1c72c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1edc>  // b.hs, b.nlast
   1bf3c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1bf40:	ldr	x9, [x21]
   1bf44:	ldr	q0, [x10]
   1bf48:	str	q0, [x9, w8, uxtw #4]
   1bf4c:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ab0>
   1bf50:	ldr	w9, [x28]
   1bf54:	cmp	w9, w8
   1bf58:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1bf5c:	ldr	x9, [x25]
   1bf60:	mov	x19, x28
   1bf64:	mov	x28, x23
   1bf68:	ldr	x24, [x9, x8, lsl #3]
   1bf6c:	ldr	x8, [x24]
   1bf70:	mov	x0, x24
   1bf74:	ldr	x8, [x8, #56]
   1bf78:	blr	x8
   1bf7c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1bf80:	ldr	x8, [x8]
   1bf84:	mov	w9, w0
   1bf88:	lsr	x9, x9, #3
   1bf8c:	ldrh	w10, [x8, #566]
   1bf90:	cmp	w9, w10
   1bf94:	b.cs	1cae4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2294>  // b.hs, b.nlast
   1bf98:	ldr	x8, [x8, #552]
   1bf9c:	ldrb	w8, [x8, x9]
   1bfa0:	and	w9, w0, #0x7
   1bfa4:	lsr	w8, w8, w9
   1bfa8:	tbz	w8, #0, 1cae4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2294>
   1bfac:	ldr	x8, [x24, #104]
   1bfb0:	ldr	x25, [x8, #24]
   1bfb4:	ldr	w8, [x25, #32]
   1bfb8:	cmp	w8, #0x6
   1bfbc:	b.ls	1cb24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22d4>  // b.plast
   1bfc0:	ldr	x8, [x24]
   1bfc4:	mov	x23, x20
   1bfc8:	ldr	x20, [x25, #24]
   1bfcc:	mov	x0, x24
   1bfd0:	ldr	x8, [x8, #56]
   1bfd4:	blr	x8
   1bfd8:	ldr	w8, [x25, #8]
   1bfdc:	cmp	w8, w0
   1bfe0:	b.ls	1cb44 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22f4>  // b.plast
   1bfe4:	ldr	x8, [x25, #104]
   1bfe8:	ldrh	w9, [x8, w0, uxtw #1]
   1bfec:	ldrh	w8, [x20, #212]
   1bff0:	cmp	w8, w9
   1bff4:	b.ls	1cb64 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2314>  // b.plast
   1bff8:	ldr	x10, [x20, #192]
   1bffc:	b	1c164 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1914>
   1c000:	ldr	w9, [x28]
   1c004:	cmp	w9, w8
   1c008:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1c00c:	ldr	x9, [x25]
   1c010:	ldr	x8, [x9, x8, lsl #3]
   1c014:	ldr	w9, [x8, #48]
   1c018:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1c01c:	ldr	x24, [x8, #72]
   1c020:	cbz	x24, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1c024:	ldr	w8, [x24]
   1c028:	cmp	w8, #0x1
   1c02c:	b.ne	1c054 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.any
   1c030:	ldr	x9, [x24, #16]
   1c034:	ldr	w8, [x26]
   1c038:	ldr	w10, [x27]
   1c03c:	cmp	x9, #0x0
   1c040:	cinc	x9, x9, lt  // lt = tstop
   1c044:	asr	x24, x9, #1
   1c048:	cmp	w8, w10
   1c04c:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1c050:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1c054:	ldr	w8, [x26]
   1c058:	ldr	w9, [x27]
   1c05c:	cmp	w8, w9
   1c060:	b.cs	1c4c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c74>  // b.hs, b.nlast
   1c064:	ldr	x9, [x21]
   1c068:	mov	w10, #0x4                   	// #4
   1c06c:	b	1c2f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa8>
   1c070:	ldr	w9, [x28]
   1c074:	cmp	w9, w8
   1c078:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1c07c:	ldr	x9, [x25]
   1c080:	ldr	x8, [x9, x8, lsl #3]
   1c084:	ldr	w9, [x8, #48]
   1c088:	cbnz	w9, 1c834 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>
   1c08c:	ldr	x9, [x8, #72]
   1c090:	cbz	x9, 1c854 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2004>
   1c094:	ldr	w8, [x9]
   1c098:	cmp	w8, #0x1
   1c09c:	b.ne	1c874 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2024>  // b.any
   1c0a0:	ldr	w8, [x26]
   1c0a4:	ldr	w10, [x27]
   1c0a8:	ldr	x24, [x9, #16]
   1c0ac:	cmp	w8, w10
   1c0b0:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1c0b4:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1c0b8:	ldr	w9, [x28]
   1c0bc:	cmp	w9, w8
   1c0c0:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1c0c4:	ldr	x9, [x25]
   1c0c8:	mov	x19, x28
   1c0cc:	mov	x28, x23
   1c0d0:	ldr	x24, [x9, x8, lsl #3]
   1c0d4:	ldr	x8, [x24]
   1c0d8:	mov	x0, x24
   1c0dc:	ldr	x8, [x8, #56]
   1c0e0:	blr	x8
   1c0e4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1c0e8:	ldr	x8, [x8]
   1c0ec:	mov	w9, w0
   1c0f0:	lsr	x9, x9, #3
   1c0f4:	ldrh	w10, [x8, #214]
   1c0f8:	cmp	w9, w10
   1c0fc:	b.cs	1cb04 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22b4>  // b.hs, b.nlast
   1c100:	ldr	x8, [x8, #200]
   1c104:	ldrb	w8, [x8, x9]
   1c108:	and	w9, w0, #0x7
   1c10c:	lsr	w8, w8, w9
   1c110:	tbz	w8, #0, 1cb04 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22b4>
   1c114:	ldr	x8, [x24, #104]
   1c118:	ldr	x25, [x8, #24]
   1c11c:	ldr	w8, [x25, #32]
   1c120:	cmp	w8, #0x11
   1c124:	b.ls	1cb24 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22d4>  // b.plast
   1c128:	ldr	x8, [x24]
   1c12c:	mov	x23, x20
   1c130:	ldr	x20, [x25, #24]
   1c134:	mov	x0, x24
   1c138:	ldr	x8, [x8, #56]
   1c13c:	blr	x8
   1c140:	ldr	w8, [x25, #8]
   1c144:	cmp	w8, w0
   1c148:	b.ls	1cb44 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22f4>  // b.plast
   1c14c:	ldr	x8, [x25, #104]
   1c150:	ldrh	w9, [x8, w0, uxtw #1]
   1c154:	ldrh	w8, [x20, #564]
   1c158:	cmp	w8, w9
   1c15c:	b.ls	1cb64 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2314>  // b.plast
   1c160:	ldr	x10, [x20, #544]
   1c164:	ldr	w8, [x26]
   1c168:	ldr	w11, [x27]
   1c16c:	ldr	x25, [sp, #24]
   1c170:	ldrh	w24, [x10, x9, lsl #1]
   1c174:	cmp	w8, w11
   1c178:	b.cs	1c4e0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c90>  // b.hs, b.nlast
   1c17c:	ldr	x9, [x21]
   1c180:	mov	w10, #0x1                   	// #1
   1c184:	add	x8, x9, w8, uxtw #4
   1c188:	stp	x10, x24, [x8]
   1c18c:	ldr	w8, [x26]
   1c190:	ldr	w9, [x27]
   1c194:	cmp	w8, w9
   1c198:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1c19c:	add	w8, w8, #0x1
   1c1a0:	mov	x20, x23
   1c1a4:	str	w8, [x26]
   1c1a8:	mov	x23, x28
   1c1ac:	mov	x28, x19
   1c1b0:	ldrb	w8, [x22], #2
   1c1b4:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1c1b8:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1c1bc:	ldr	w9, [x28]
   1c1c0:	cmp	w9, w8
   1c1c4:	b.ls	1c814 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc4>  // b.plast
   1c1c8:	ldr	x9, [x25]
   1c1cc:	ldr	x9, [x9, x8, lsl #3]
   1c1d0:	ldr	w8, [x9, #48]
   1c1d4:	cmp	w8, #0x8
   1c1d8:	b.ne	1cb84 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2334>  // b.any
   1c1dc:	ldr	w8, [x26]
   1c1e0:	ldr	w10, [x27]
   1c1e4:	ldr	w24, [x9, #72]
   1c1e8:	cmp	w8, w10
   1c1ec:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1c1f0:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1c1f4:	add	x8, x24, #0x58
   1c1f8:	ldr	w9, [x8]
   1c1fc:	ldr	w8, [x26]
   1c200:	ldr	w10, [x27]
   1c204:	sub	w9, w9, #0xb
   1c208:	cmp	w9, #0x2
   1c20c:	cset	w25, cc  // cc = lo, ul, last
   1c210:	cmp	w8, w10
   1c214:	b.cs	1c748 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ef8>  // b.hs, b.nlast
   1c218:	ldr	x9, [x21]
   1c21c:	mov	w10, #0x2                   	// #2
   1c220:	add	x8, x9, w8, uxtw #4
   1c224:	stp	x10, x25, [x8]
   1c228:	ldr	w8, [x26]
   1c22c:	ldr	w9, [x27]
   1c230:	cmp	w8, w9
   1c234:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1c238:	add	w8, w8, #0x1
   1c23c:	str	w8, [x26]
   1c240:	ldr	w10, [x24, #48]
   1c244:	ldr	x25, [sp, #24]
   1c248:	cmp	w10, #0x3
   1c24c:	b.eq	1c260 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a10>  // b.none
   1c250:	cmp	w10, #0xa
   1c254:	b.ne	1cba4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2354>  // b.any
   1c258:	add	x10, x24, #0x4c
   1c25c:	b	1c264 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a14>
   1c260:	add	x10, x24, #0x5c
   1c264:	ldr	w10, [x10]
   1c268:	cmp	w10, #0x0
   1c26c:	cset	w24, ne  // ne = any
   1c270:	b	1c2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a98>
   1c274:	add	x8, x24, #0x58
   1c278:	ldr	w9, [x8]
   1c27c:	ldr	w8, [x26]
   1c280:	ldr	w10, [x27]
   1c284:	sub	w9, w9, #0xb
   1c288:	cmp	w9, #0x2
   1c28c:	cset	w25, cc  // cc = lo, ul, last
   1c290:	cmp	w8, w10
   1c294:	b.cs	1c764 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f14>  // b.hs, b.nlast
   1c298:	ldr	x9, [x21]
   1c29c:	mov	w10, #0x2                   	// #2
   1c2a0:	add	x8, x9, w8, uxtw #4
   1c2a4:	stp	x10, x25, [x8]
   1c2a8:	ldr	w8, [x26]
   1c2ac:	ldr	w9, [x27]
   1c2b0:	cmp	w8, w9
   1c2b4:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1c2b8:	add	w8, w8, #0x1
   1c2bc:	str	w8, [x26]
   1c2c0:	ldr	w10, [x24, #48]
   1c2c4:	ldr	x25, [sp, #24]
   1c2c8:	cmp	w10, #0x3
   1c2cc:	b.eq	1c2e0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a90>  // b.none
   1c2d0:	cmp	w10, #0xa
   1c2d4:	b.ne	1cbbc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x236c>  // b.any
   1c2d8:	add	x10, x24, #0x50
   1c2dc:	b	1c2e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a94>
   1c2e0:	add	x10, x24, #0x60
   1c2e4:	ldrb	w24, [x10]
   1c2e8:	cmp	w8, w9
   1c2ec:	b.cs	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>  // b.hs, b.nlast
   1c2f0:	ldr	x9, [x21]
   1c2f4:	mov	w10, #0x2                   	// #2
   1c2f8:	add	x8, x9, w8, uxtw #4
   1c2fc:	stp	x10, x24, [x8]
   1c300:	ldr	w8, [x26]
   1c304:	ldr	w9, [x27]
   1c308:	cmp	w8, w9
   1c30c:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1c310:	add	w8, w8, #0x1
   1c314:	str	w8, [x26]
   1c318:	ldrb	w8, [x22], #2
   1c31c:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1c320:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1c324:	ldr	w8, [x9, #88]
   1c328:	mov	w10, #0x8                   	// #8
   1c32c:	b	1c36c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b1c>
   1c330:	add	x8, x9, #0x58
   1c334:	add	x9, x9, #0x5c
   1c338:	ldr	w9, [x9]
   1c33c:	cmp	w9, #0x40
   1c340:	b.cs	1cbd4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2384>  // b.hs, b.nlast
   1c344:	ldr	w10, [x8]
   1c348:	cmp	w10, #0x5
   1c34c:	b.cs	1cbf4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23a4>  // b.hs, b.nlast
   1c350:	ldr	w8, [x26]
   1c354:	ldr	w11, [x27]
   1c358:	and	x9, x9, #0x3f
   1c35c:	lsl	w10, w10, #6
   1c360:	b	1c39c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b4c>
   1c364:	ldr	w8, [x9, #88]
   1c368:	mov	w10, #0x7                   	// #7
   1c36c:	cmp	w8, #0x0
   1c370:	csel	w8, w10, w8, eq  // eq = none
   1c374:	add	x9, x9, #0x5c
   1c378:	ldr	w9, [x9]
   1c37c:	cmp	w9, #0x8
   1c380:	b.cs	1cc0c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23bc>  // b.hs, b.nlast
   1c384:	sub	w10, w8, #0x5
   1c388:	cmp	w10, #0x8
   1c38c:	b.cs	1cc2c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23dc>  // b.hs, b.nlast
   1c390:	ldr	w8, [x26]
   1c394:	ldr	w11, [x27]
   1c398:	lsl	w10, w10, #3
   1c39c:	cmp	w8, w11
   1c3a0:	orr	x24, x10, x9
   1c3a4:	b.cc	1c2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aa0>  // b.lo, b.ul, b.last
   1c3a8:	b	1beec <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x169c>
   1c3ac:	ldr	x1, [x24, #72]
   1c3b0:	mov	x0, x20
   1c3b4:	bl	1e260 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1c3b8:	ldp	w8, w9, [x20, #24]
   1c3bc:	cmp	w8, w9
   1c3c0:	b.cc	1b778 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf28>  // b.lo, b.ul, b.last
   1c3c4:	ldr	x1, [sp, #8]
   1c3c8:	mov	w3, #0x10                  	// #16
   1c3cc:	mov	x0, x21
   1c3d0:	mov	x2, xzr
   1c3d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c3d8:	ldr	w8, [x26]
   1c3dc:	b	1b778 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf28>
   1c3e0:	ldr	x0, [sp, #16]
   1c3e4:	mov	x1, x25
   1c3e8:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1c3ec:	ldur	w8, [x29, #-8]
   1c3f0:	ldr	x25, [sp, #24]
   1c3f4:	mov	x20, x23
   1c3f8:	mov	x23, x28
   1c3fc:	cmp	w8, #0x41
   1c400:	b.cc	1c410 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1bc0>  // b.lo, b.ul, b.last
   1c404:	ldur	x0, [x29, #-16]
   1c408:	cbz	x0, 1c410 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1bc0>
   1c40c:	bl	0 <_ZdaPv>
   1c410:	ldr	x8, [sp, #40]
   1c414:	mov	x28, x19
   1c418:	cmp	x24, x8
   1c41c:	sub	x8, x29, #0x10
   1c420:	b.eq	1c430 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1be0>  // b.none
   1c424:	ldr	x0, [sp, #16]
   1c428:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   1c42c:	b	1c438 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1be8>
   1c430:	ldr	x0, [sp, #16]
   1c434:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1c438:	sub	x0, x29, #0x10
   1c43c:	bl	1d32c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   1c440:	ldr	w8, [x26]
   1c444:	ldr	w9, [x27]
   1c448:	sxtw	x24, w0
   1c44c:	cmp	w8, w9
   1c450:	b.cs	1c780 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f30>  // b.hs, b.nlast
   1c454:	ldr	x9, [x21]
   1c458:	mov	w10, #0x2                   	// #2
   1c45c:	add	x8, x9, w8, uxtw #4
   1c460:	stp	x10, x24, [x8]
   1c464:	ldr	w8, [x26]
   1c468:	ldr	w9, [x27]
   1c46c:	cmp	w8, w9
   1c470:	b.cs	1c7f4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fa4>  // b.hs, b.nlast
   1c474:	add	w8, w8, #0x1
   1c478:	str	w8, [x26]
   1c47c:	ldur	w8, [x29, #-8]
   1c480:	cmp	w8, #0x41
   1c484:	b.cc	1c494 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c44>  // b.lo, b.ul, b.last
   1c488:	ldur	x0, [x29, #-16]
   1c48c:	cbz	x0, 1c494 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c44>
   1c490:	bl	0 <_ZdaPv>
   1c494:	add	x0, sp, #0x20
   1c498:	bl	0 <LLVMInitializeAArch64AsmParser>
   1c49c:	ldrb	w8, [x22], #2
   1c4a0:	cbnz	w8, 1a8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1c4a4:	b	1c7bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f6c>
   1c4a8:	ldr	x1, [sp, #8]
   1c4ac:	mov	w3, #0x10                  	// #16
   1c4b0:	mov	x0, x21
   1c4b4:	mov	x2, xzr
   1c4b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4bc:	ldr	w9, [x26]
   1c4c0:	b	1be28 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d8>
   1c4c4:	ldr	x1, [sp, #8]
   1c4c8:	mov	w3, #0x10                  	// #16
   1c4cc:	mov	x0, x21
   1c4d0:	mov	x2, xzr
   1c4d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4d8:	ldr	w8, [x26]
   1c4dc:	b	1c064 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1814>
   1c4e0:	ldr	x1, [sp, #8]
   1c4e4:	mov	w3, #0x10                  	// #16
   1c4e8:	mov	x0, x21
   1c4ec:	mov	x2, xzr
   1c4f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4f4:	ldr	w8, [x26]
   1c4f8:	b	1c17c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x192c>
   1c4fc:	ldr	x1, [sp, #8]
   1c500:	mov	w3, #0x10                  	// #16
   1c504:	mov	x0, x21
   1c508:	mov	x2, xzr
   1c50c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c510:	ldr	w8, [x26]
   1c514:	b	1b118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x8c8>
   1c518:	ldr	x1, [sp, #8]
   1c51c:	mov	w3, #0x10                  	// #16
   1c520:	mov	x0, x21
   1c524:	mov	x2, xzr
   1c528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c52c:	ldr	w8, [x26]
   1c530:	b	1b14c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x8fc>
   1c534:	ldr	x1, [sp, #8]
   1c538:	mov	w3, #0x10                  	// #16
   1c53c:	mov	x0, x21
   1c540:	mov	x2, xzr
   1c544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c548:	ldr	w8, [x26]
   1c54c:	b	1aadc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x28c>
   1c550:	ldr	x1, [sp, #8]
   1c554:	mov	w3, #0x10                  	// #16
   1c558:	mov	x0, x21
   1c55c:	mov	x2, xzr
   1c560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c564:	ldr	w8, [x26]
   1c568:	b	1aba8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x358>
   1c56c:	ldr	x1, [sp, #8]
   1c570:	mov	w3, #0x10                  	// #16
   1c574:	mov	x0, x21
   1c578:	mov	x2, xzr
   1c57c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c580:	ldr	w8, [x26]
   1c584:	b	1ac34 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3e4>
   1c588:	ldr	x1, [sp, #8]
   1c58c:	mov	w3, #0x10                  	// #16
   1c590:	mov	x0, x21
   1c594:	mov	x2, xzr
   1c598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c59c:	ldr	w8, [x26]
   1c5a0:	b	1adfc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5ac>
   1c5a4:	ldr	x1, [sp, #8]
   1c5a8:	mov	w3, #0x10                  	// #16
   1c5ac:	mov	x0, x21
   1c5b0:	mov	x2, xzr
   1c5b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c5b8:	ldr	w8, [x26]
   1c5bc:	b	1b2d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xa84>
   1c5c0:	ldr	x1, [sp, #8]
   1c5c4:	mov	w3, #0x10                  	// #16
   1c5c8:	mov	x0, x21
   1c5cc:	mov	x2, xzr
   1c5d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c5d4:	ldr	w8, [x26]
   1c5d8:	b	1b360 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb10>
   1c5dc:	ldr	x1, [sp, #8]
   1c5e0:	mov	w3, #0x10                  	// #16
   1c5e4:	mov	x0, x21
   1c5e8:	mov	x2, xzr
   1c5ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c5f0:	ldr	w8, [x26]
   1c5f4:	b	1b3a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb50>
   1c5f8:	ldr	x1, [sp, #8]
   1c5fc:	mov	w3, #0x10                  	// #16
   1c600:	mov	x0, x21
   1c604:	mov	x2, xzr
   1c608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c60c:	ldr	w8, [x26]
   1c610:	b	1b440 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xbf0>
   1c614:	ldr	x1, [sp, #8]
   1c618:	mov	w3, #0x10                  	// #16
   1c61c:	mov	x0, x21
   1c620:	mov	x2, xzr
   1c624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c628:	ldr	w8, [x26]
   1c62c:	b	1b4bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xc6c>
   1c630:	ldr	x1, [sp, #8]
   1c634:	mov	w3, #0x10                  	// #16
   1c638:	mov	x0, x21
   1c63c:	mov	x2, xzr
   1c640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c644:	ldr	w8, [x26]
   1c648:	b	1b540 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xcf0>
   1c64c:	ldr	x1, [sp, #8]
   1c650:	mov	w3, #0x10                  	// #16
   1c654:	mov	x0, x21
   1c658:	mov	x2, xzr
   1c65c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c660:	ldr	w8, [x26]
   1c664:	b	1b730 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xee0>
   1c668:	ldr	x1, [sp, #8]
   1c66c:	mov	w3, #0x10                  	// #16
   1c670:	mov	x0, x21
   1c674:	mov	x2, xzr
   1c678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c67c:	ldr	w8, [x26]
   1c680:	b	1b754 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf04>
   1c684:	ldr	x1, [sp, #8]
   1c688:	mov	w3, #0x10                  	// #16
   1c68c:	mov	x0, x21
   1c690:	mov	x2, xzr
   1c694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c698:	ldr	w8, [x26]
   1c69c:	b	1b94c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x10fc>
   1c6a0:	ldr	x1, [sp, #8]
   1c6a4:	mov	w3, #0x10                  	// #16
   1c6a8:	mov	x0, x21
   1c6ac:	mov	x2, xzr
   1c6b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c6b4:	ldr	w8, [x26]
   1c6b8:	b	1baac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x125c>
   1c6bc:	ldr	x1, [sp, #8]
   1c6c0:	mov	w3, #0x10                  	// #16
   1c6c4:	mov	x0, x21
   1c6c8:	mov	x2, xzr
   1c6cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c6d0:	ldr	w8, [x26]
   1c6d4:	b	1bbcc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x137c>
   1c6d8:	ldr	x1, [sp, #8]
   1c6dc:	mov	w3, #0x10                  	// #16
   1c6e0:	mov	x0, x21
   1c6e4:	mov	x2, xzr
   1c6e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c6ec:	ldr	w8, [x26]
   1c6f0:	b	1bc98 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1448>
   1c6f4:	ldr	x1, [sp, #8]
   1c6f8:	mov	w3, #0x10                  	// #16
   1c6fc:	mov	x0, x21
   1c700:	mov	x2, xzr
   1c704:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c708:	ldr	w8, [x26]
   1c70c:	b	1bd18 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14c8>
   1c710:	ldr	x1, [sp, #8]
   1c714:	mov	w3, #0x10                  	// #16
   1c718:	mov	x0, x21
   1c71c:	mov	x2, xzr
   1c720:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c724:	ldr	w8, [x26]
   1c728:	b	1bf18 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x16c8>
   1c72c:	ldr	x1, [sp, #8]
   1c730:	mov	w3, #0x10                  	// #16
   1c734:	mov	x0, x21
   1c738:	mov	x2, xzr
   1c73c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c740:	ldr	w8, [x26]
   1c744:	b	1bf3c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x16ec>
   1c748:	ldr	x1, [sp, #8]
   1c74c:	mov	w3, #0x10                  	// #16
   1c750:	mov	x0, x21
   1c754:	mov	x2, xzr
   1c758:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c75c:	ldr	w8, [x26]
   1c760:	b	1c218 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x19c8>
   1c764:	ldr	x1, [sp, #8]
   1c768:	mov	w3, #0x10                  	// #16
   1c76c:	mov	x0, x21
   1c770:	mov	x2, xzr
   1c774:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c778:	ldr	w8, [x26]
   1c77c:	b	1c298 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a48>
   1c780:	ldr	x1, [sp, #8]
   1c784:	mov	w3, #0x10                  	// #16
   1c788:	mov	x0, x21
   1c78c:	mov	x2, xzr
   1c790:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c794:	ldr	w8, [x26]
   1c798:	b	1c454 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c04>
   1c79c:	ldr	x1, [sp, #8]
   1c7a0:	mov	w3, #0x10                  	// #16
   1c7a4:	mov	x0, x21
   1c7a8:	mov	x2, xzr
   1c7ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c7b0:	ldr	w8, [x26]
   1c7b4:	ldr	x9, [x21]
   1c7b8:	b	1b510 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xcc0>
   1c7bc:	ldp	x20, x19, [sp, #160]
   1c7c0:	ldp	x22, x21, [sp, #144]
   1c7c4:	ldp	x24, x23, [sp, #128]
   1c7c8:	ldp	x26, x25, [sp, #112]
   1c7cc:	ldp	x28, x27, [sp, #96]
   1c7d0:	ldp	x29, x30, [sp, #80]
   1c7d4:	add	sp, sp, #0xb0
   1c7d8:	ret
   1c7dc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c7e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c7e4:	add	x0, x0, #0x0
   1c7e8:	add	x1, x1, #0x0
   1c7ec:	mov	w2, #0x1949                	// #6473
   1c7f0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1c7f4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c7f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c7fc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c800:	add	x0, x0, #0x0
   1c804:	add	x1, x1, #0x0
   1c808:	add	x3, x3, #0x0
   1c80c:	mov	w2, #0x43                  	// #67
   1c810:	bl	0 <__assert_fail>
   1c814:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c818:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c81c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c820:	add	x0, x0, #0x0
   1c824:	add	x1, x1, #0x0
   1c828:	add	x3, x3, #0x0
   1c82c:	mov	w2, #0x99                  	// #153
   1c830:	bl	0 <__assert_fail>
   1c834:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c838:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c83c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c840:	add	x0, x0, #0x0
   1c844:	add	x1, x1, #0x0
   1c848:	add	x3, x3, #0x0
   1c84c:	mov	w2, #0x1f4                 	// #500
   1c850:	bl	0 <__assert_fail>
   1c854:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c858:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c85c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c860:	add	x0, x0, #0x0
   1c864:	add	x1, x1, #0x0
   1c868:	add	x3, x3, #0x0
   1c86c:	mov	w2, #0x69                  	// #105
   1c870:	bl	0 <__assert_fail>
   1c874:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c878:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c87c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c880:	add	x0, x0, #0x0
   1c884:	add	x1, x1, #0x0
   1c888:	add	x3, x3, #0x0
   1c88c:	mov	w2, #0x108                 	// #264
   1c890:	bl	0 <__assert_fail>
   1c894:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c898:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c89c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c8a0:	add	x0, x0, #0x0
   1c8a4:	add	x1, x1, #0x0
   1c8a8:	add	x3, x3, #0x0
   1c8ac:	mov	w2, #0x226                 	// #550
   1c8b0:	bl	0 <__assert_fail>
   1c8b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c8b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c8bc:	add	x0, x0, #0x0
   1c8c0:	add	x1, x1, #0x0
   1c8c4:	mov	w2, #0x261                 	// #609
   1c8c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1c8cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c8d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c8d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c8d8:	add	x0, x0, #0x0
   1c8dc:	add	x1, x1, #0x0
   1c8e0:	add	x3, x3, #0x0
   1c8e4:	mov	w2, #0x23f                 	// #575
   1c8e8:	bl	0 <__assert_fail>
   1c8ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c8f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c8f4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c8f8:	add	x0, x0, #0x0
   1c8fc:	add	x1, x1, #0x0
   1c900:	add	x3, x3, #0x0
   1c904:	mov	w2, #0x230                 	// #560
   1c908:	bl	0 <__assert_fail>
   1c90c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c910:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c914:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c918:	add	x0, x0, #0x0
   1c91c:	add	x1, x1, #0x0
   1c920:	add	x3, x3, #0x0
   1c924:	mov	w2, #0x203                 	// #515
   1c928:	bl	0 <__assert_fail>
   1c92c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c930:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c934:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c938:	add	x0, x0, #0x0
   1c93c:	add	x1, x1, #0x0
   1c940:	add	x3, x3, #0x0
   1c944:	mov	w2, #0x5f5                 	// #1525
   1c948:	bl	0 <__assert_fail>
   1c94c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c950:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c954:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c958:	add	x0, x0, #0x0
   1c95c:	add	x1, x1, #0x0
   1c960:	add	x3, x3, #0x0
   1c964:	mov	w2, #0x24e                 	// #590
   1c968:	bl	0 <__assert_fail>
   1c96c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c970:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c974:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c978:	add	x0, x0, #0x0
   1c97c:	add	x1, x1, #0x0
   1c980:	add	x3, x3, #0x0
   1c984:	mov	w2, #0x5f5                 	// #1525
   1c988:	bl	0 <__assert_fail>
   1c98c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c990:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c994:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c998:	add	x0, x0, #0x0
   1c99c:	add	x1, x1, #0x0
   1c9a0:	add	x3, x3, #0x0
   1c9a4:	mov	w2, #0x5c7                 	// #1479
   1c9a8:	bl	0 <__assert_fail>
   1c9ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c9b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c9b4:	add	x0, x0, #0x0
   1c9b8:	add	x1, x1, #0x0
   1c9bc:	mov	w2, #0x617                 	// #1559
   1c9c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1c9c4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c9c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c9cc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c9d0:	add	x0, x0, #0x0
   1c9d4:	add	x1, x1, #0x0
   1c9d8:	add	x3, x3, #0x0
   1c9dc:	mov	w2, #0x244                 	// #580
   1c9e0:	bl	0 <__assert_fail>
   1c9e4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1c9e8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1c9ec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1c9f0:	add	x0, x0, #0x0
   1c9f4:	add	x1, x1, #0x0
   1c9f8:	add	x3, x3, #0x0
   1c9fc:	mov	w2, #0x1950                	// #6480
   1ca00:	bl	0 <__assert_fail>
   1ca04:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ca08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ca0c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ca10:	add	x0, x0, #0x0
   1ca14:	add	x1, x1, #0x0
   1ca18:	add	x3, x3, #0x0
   1ca1c:	mov	w2, #0x95                  	// #149
   1ca20:	bl	0 <__assert_fail>
   1ca24:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ca28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ca2c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ca30:	add	x0, x0, #0x0
   1ca34:	add	x1, x1, #0x0
   1ca38:	add	x3, x3, #0x0
   1ca3c:	mov	w2, #0x5c0                 	// #1472
   1ca40:	bl	0 <__assert_fail>
   1ca44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ca48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ca4c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ca50:	add	x0, x0, #0x0
   1ca54:	add	x1, x1, #0x0
   1ca58:	add	x3, x3, #0x0
   1ca5c:	mov	w2, #0x1fe                 	// #510
   1ca60:	bl	0 <__assert_fail>
   1ca64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ca68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ca6c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ca70:	add	x0, x0, #0x0
   1ca74:	add	x1, x1, #0x0
   1ca78:	add	x3, x3, #0x0
   1ca7c:	mov	w2, #0x208                 	// #520
   1ca80:	bl	0 <__assert_fail>
   1ca84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ca88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ca8c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ca90:	add	x0, x0, #0x0
   1ca94:	add	x1, x1, #0x0
   1ca98:	add	x3, x3, #0x0
   1ca9c:	mov	w2, #0x212                 	// #530
   1caa0:	bl	0 <__assert_fail>
   1caa4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1caa8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1caac:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cab0:	add	x0, x0, #0x0
   1cab4:	add	x1, x1, #0x0
   1cab8:	add	x3, x3, #0x0
   1cabc:	mov	w2, #0x11d                 	// #285
   1cac0:	bl	0 <__assert_fail>
   1cac4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cac8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cacc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cad0:	add	x0, x0, #0x0
   1cad4:	add	x1, x1, #0x0
   1cad8:	add	x3, x3, #0x0
   1cadc:	mov	w2, #0x5f5                 	// #1525
   1cae0:	bl	0 <__assert_fail>
   1cae4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cae8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1caec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1caf0:	add	x0, x0, #0x0
   1caf4:	add	x1, x1, #0x0
   1caf8:	add	x3, x3, #0x0
   1cafc:	mov	w2, #0x599                 	// #1433
   1cb00:	bl	0 <__assert_fail>
   1cb04:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cb08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cb0c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cb10:	add	x0, x0, #0x0
   1cb14:	add	x1, x1, #0x0
   1cb18:	add	x3, x3, #0x0
   1cb1c:	mov	w2, #0x5a5                 	// #1445
   1cb20:	bl	0 <__assert_fail>
   1cb24:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cb28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cb2c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cb30:	add	x0, x0, #0x0
   1cb34:	add	x1, x1, #0x0
   1cb38:	add	x3, x3, #0x0
   1cb3c:	mov	w2, #0x219                 	// #537
   1cb40:	bl	0 <__assert_fail>
   1cb44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cb48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cb4c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cb50:	add	x0, x0, #0x0
   1cb54:	add	x1, x1, #0x0
   1cb58:	add	x3, x3, #0x0
   1cb5c:	mov	w2, #0x224                 	// #548
   1cb60:	bl	0 <__assert_fail>
   1cb64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cb68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cb6c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cb70:	add	x0, x0, #0x0
   1cb74:	add	x1, x1, #0x0
   1cb78:	add	x3, x3, #0x0
   1cb7c:	mov	w2, #0x3d                  	// #61
   1cb80:	bl	0 <__assert_fail>
   1cb84:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cb88:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cb8c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cb90:	add	x0, x0, #0x0
   1cb94:	add	x1, x1, #0x0
   1cb98:	add	x3, x3, #0x0
   1cb9c:	mov	w2, #0x23a                 	// #570
   1cba0:	bl	0 <__assert_fail>
   1cba4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cba8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cbac:	add	x0, x0, #0x0
   1cbb0:	add	x1, x1, #0x0
   1cbb4:	mov	w2, #0x269                 	// #617
   1cbb8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1cbbc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cbc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cbc4:	add	x0, x0, #0x0
   1cbc8:	add	x1, x1, #0x0
   1cbcc:	mov	w2, #0x271                 	// #625
   1cbd0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1cbd4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cbd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cbdc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cbe0:	add	x0, x0, #0x0
   1cbe4:	add	x1, x1, #0x0
   1cbe8:	add	x3, x3, #0x0
   1cbec:	mov	w2, #0x64                  	// #100
   1cbf0:	bl	0 <__assert_fail>
   1cbf4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cbf8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cbfc:	add	x0, x0, #0x0
   1cc00:	add	x1, x1, #0x0
   1cc04:	mov	w2, #0x67                  	// #103
   1cc08:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1cc0c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cc10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cc14:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cc18:	add	x0, x0, #0x0
   1cc1c:	add	x1, x1, #0x0
   1cc20:	add	x3, x3, #0x0
   1cc24:	mov	w2, #0xac                  	// #172
   1cc28:	bl	0 <__assert_fail>
   1cc2c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cc30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cc34:	add	x0, x0, #0x0
   1cc38:	add	x1, x1, #0x0
   1cc3c:	mov	w2, #0x99                  	// #153
   1cc40:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1cc44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cc48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cc4c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cc50:	add	x0, x0, #0x0
   1cc54:	add	x1, x1, #0x0
   1cc58:	add	x3, x3, #0x0
   1cc5c:	mov	w2, #0x1942                	// #6466
   1cc60:	bl	0 <__assert_fail>

000000000001cc64 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>:
   1cc64:	sub	sp, sp, #0x40
   1cc68:	stp	x29, x30, [sp, #32]
   1cc6c:	str	x19, [sp, #48]
   1cc70:	add	x29, sp, #0x20
   1cc74:	ldr	w8, [x0, #48]
   1cc78:	mov	x19, x0
   1cc7c:	cmp	w8, #0x1
   1cc80:	b.ne	1ccd4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x70>  // b.any
   1cc84:	add	x8, sp, #0x8
   1cc88:	mov	x0, x19
   1cc8c:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1cc90:	ldrb	w8, [sp, #24]
   1cc94:	cbz	w8, 1cccc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x68>
   1cc98:	ldr	x8, [sp, #8]
   1cc9c:	ldr	w9, [sp, #16]
   1cca0:	strb	wzr, [sp, #24]
   1cca4:	lsl	x8, x8, x9
   1cca8:	tst	x8, #0xffffffffffff00ff
   1ccac:	b.eq	1cd0c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.none
   1ccb0:	add	x9, x8, #0x80
   1ccb4:	cmp	x9, #0x100
   1ccb8:	b.cc	1cd0c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.lo, b.ul, b.last
   1ccbc:	and	w9, w8, #0xff00
   1ccc0:	sxth	x9, w9
   1ccc4:	cmp	x8, x9
   1ccc8:	b.eq	1cd0c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa8>  // b.none
   1cccc:	mov	w0, #0x1                   	// #1
   1ccd0:	b	1cd10 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xac>
   1ccd4:	ldr	x8, [x19]
   1ccd8:	mov	x0, x19
   1ccdc:	ldr	x8, [x8, #40]
   1cce0:	blr	x8
   1cce4:	tbz	w0, #0, 1cd04 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xa0>
   1cce8:	ldr	w8, [x19, #48]
   1ccec:	cbnz	w8, 1cd20 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xbc>
   1ccf0:	ldr	x8, [x19, #72]
   1ccf4:	cbz	x8, 1cd40 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xdc>
   1ccf8:	ldr	w8, [x8]
   1ccfc:	cmp	w8, #0x1
   1cd00:	b.eq	1cc84 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1cd04:	mov	w0, #0x2                   	// #2
   1cd08:	b	1cd10 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xac>
   1cd0c:	mov	x0, xzr
   1cd10:	ldr	x19, [sp, #48]
   1cd14:	ldp	x29, x30, [sp, #32]
   1cd18:	add	sp, sp, #0x40
   1cd1c:	ret
   1cd20:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cd24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cd28:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cd2c:	add	x0, x0, #0x0
   1cd30:	add	x1, x1, #0x0
   1cd34:	add	x3, x3, #0x0
   1cd38:	mov	w2, #0x1f4                 	// #500
   1cd3c:	bl	0 <__assert_fail>
   1cd40:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cd44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cd48:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cd4c:	add	x0, x0, #0x0
   1cd50:	add	x1, x1, #0x0
   1cd54:	add	x3, x3, #0x0
   1cd58:	mov	w2, #0x69                  	// #105
   1cd5c:	bl	0 <__assert_fail>

000000000001cd60 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>:
   1cd60:	sub	sp, sp, #0x40
   1cd64:	stp	x29, x30, [sp, #32]
   1cd68:	str	x19, [sp, #48]
   1cd6c:	add	x29, sp, #0x20
   1cd70:	ldr	w8, [x0, #48]
   1cd74:	mov	x19, x0
   1cd78:	cmp	w8, #0x1
   1cd7c:	b.ne	1cdc4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x64>  // b.any
   1cd80:	add	x8, sp, #0x8
   1cd84:	mov	x0, x19
   1cd88:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1cd8c:	ldrb	w8, [sp, #24]
   1cd90:	cbz	w8, 1cdbc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x5c>
   1cd94:	ldr	x8, [sp, #8]
   1cd98:	ldr	w9, [sp, #16]
   1cd9c:	strb	wzr, [sp, #24]
   1cda0:	lsl	x8, x8, x9
   1cda4:	cmp	x8, w8, sxtb
   1cda8:	b.eq	1cdfc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   1cdac:	sxth	x9, w8
   1cdb0:	and	x9, x9, #0xffffffffffffff00
   1cdb4:	cmp	x9, x8
   1cdb8:	b.eq	1cdfc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   1cdbc:	mov	w0, #0x1                   	// #1
   1cdc0:	b	1ce00 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xa0>
   1cdc4:	ldr	x8, [x19]
   1cdc8:	mov	x0, x19
   1cdcc:	ldr	x8, [x8, #40]
   1cdd0:	blr	x8
   1cdd4:	tbz	w0, #0, 1cdf4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x94>
   1cdd8:	ldr	w8, [x19, #48]
   1cddc:	cbnz	w8, 1ce10 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xb0>
   1cde0:	ldr	x8, [x19, #72]
   1cde4:	cbz	x8, 1ce30 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xd0>
   1cde8:	ldr	w8, [x8]
   1cdec:	cmp	w8, #0x1
   1cdf0:	b.eq	1cd80 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1cdf4:	mov	w0, #0x2                   	// #2
   1cdf8:	b	1ce00 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xa0>
   1cdfc:	mov	x0, xzr
   1ce00:	ldr	x19, [sp, #48]
   1ce04:	ldp	x29, x30, [sp, #32]
   1ce08:	add	sp, sp, #0x40
   1ce0c:	ret
   1ce10:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ce14:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ce18:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ce1c:	add	x0, x0, #0x0
   1ce20:	add	x1, x1, #0x0
   1ce24:	add	x3, x3, #0x0
   1ce28:	mov	w2, #0x1f4                 	// #500
   1ce2c:	bl	0 <__assert_fail>
   1ce30:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ce34:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ce38:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ce3c:	add	x0, x0, #0x0
   1ce40:	add	x1, x1, #0x0
   1ce44:	add	x3, x3, #0x0
   1ce48:	mov	w2, #0x69                  	// #105
   1ce4c:	bl	0 <__assert_fail>

000000000001ce50 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>:
   1ce50:	sub	sp, sp, #0x40
   1ce54:	stp	x29, x30, [sp, #32]
   1ce58:	str	x19, [sp, #48]
   1ce5c:	add	x29, sp, #0x20
   1ce60:	ldr	w8, [x0, #48]
   1ce64:	mov	x19, x0
   1ce68:	cmp	w8, #0x1
   1ce6c:	b.ne	1ceb4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x64>  // b.any
   1ce70:	add	x8, sp, #0x8
   1ce74:	mov	x0, x19
   1ce78:	bl	1d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1ce7c:	ldrb	w8, [sp, #24]
   1ce80:	cbz	w8, 1ceac <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x5c>
   1ce84:	ldr	x8, [sp, #8]
   1ce88:	ldr	w9, [sp, #16]
   1ce8c:	strb	wzr, [sp, #24]
   1ce90:	lsl	x8, x8, x9
   1ce94:	cmp	x8, w8, sxtb
   1ce98:	b.eq	1ceec <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   1ce9c:	sxth	x9, w8
   1cea0:	and	x9, x9, #0xffffffffffffff00
   1cea4:	cmp	x9, x8
   1cea8:	b.eq	1ceec <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x9c>  // b.none
   1ceac:	mov	w0, #0x1                   	// #1
   1ceb0:	b	1cef0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xa0>
   1ceb4:	ldr	x8, [x19]
   1ceb8:	mov	x0, x19
   1cebc:	ldr	x8, [x8, #40]
   1cec0:	blr	x8
   1cec4:	tbz	w0, #0, 1cee4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x94>
   1cec8:	ldr	w8, [x19, #48]
   1cecc:	cbnz	w8, 1cf00 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xb0>
   1ced0:	ldr	x8, [x19, #72]
   1ced4:	cbz	x8, 1cf20 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xd0>
   1ced8:	ldr	w8, [x8]
   1cedc:	cmp	w8, #0x1
   1cee0:	b.eq	1ce70 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1cee4:	mov	w0, #0x2                   	// #2
   1cee8:	b	1cef0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xa0>
   1ceec:	mov	x0, xzr
   1cef0:	ldr	x19, [sp, #48]
   1cef4:	ldp	x29, x30, [sp, #32]
   1cef8:	add	sp, sp, #0x40
   1cefc:	ret
   1cf00:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cf04:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cf08:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cf0c:	add	x0, x0, #0x0
   1cf10:	add	x1, x1, #0x0
   1cf14:	add	x3, x3, #0x0
   1cf18:	mov	w2, #0x1f4                 	// #500
   1cf1c:	bl	0 <__assert_fail>
   1cf20:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1cf24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1cf28:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1cf2c:	add	x0, x0, #0x0
   1cf30:	add	x1, x1, #0x0
   1cf34:	add	x3, x3, #0x0
   1cf38:	mov	w2, #0x69                  	// #105
   1cf3c:	bl	0 <__assert_fail>

000000000001cf40 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>:
   1cf40:	sub	sp, sp, #0xa0
   1cf44:	stp	x29, x30, [sp, #96]
   1cf48:	str	x23, [sp, #112]
   1cf4c:	stp	x22, x21, [sp, #128]
   1cf50:	stp	x20, x19, [sp, #144]
   1cf54:	add	x29, sp, #0x60
   1cf58:	ldr	w8, [x0, #48]
   1cf5c:	mov	x19, x0
   1cf60:	cmp	w8, #0xb
   1cf64:	b.ne	1d150 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x210>  // b.any
   1cf68:	ldrb	w8, [x19, #80]
   1cf6c:	cbz	w8, 1d150 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x210>
   1cf70:	mov	w0, wzr
   1cf74:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1cf78:	cbz	x0, 1d174 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x234>
   1cf7c:	mov	x23, x0
   1cf80:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1cf84:	add	x8, sp, #0x30
   1cf88:	mov	x22, x0
   1cf8c:	add	x20, x8, #0x8
   1cf90:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1cf94:	mov	x21, x0
   1cf98:	cmp	x0, x22
   1cf9c:	b.eq	1cfc4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.none
   1cfa0:	mov	x0, x20
   1cfa4:	mov	x1, x22
   1cfa8:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1cfac:	ldr	x23, [x23, #16]
   1cfb0:	cbz	x23, 1cfd8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x98>
   1cfb4:	mov	x0, x23
   1cfb8:	bl	0 <strlen>
   1cfbc:	mov	x2, x0
   1cfc0:	b	1cfdc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x9c>
   1cfc4:	mov	x0, x20
   1cfc8:	mov	x1, x22
   1cfcc:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1cfd0:	ldr	x23, [x23, #16]
   1cfd4:	cbnz	x23, 1cfb4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x74>
   1cfd8:	mov	x2, xzr
   1cfdc:	add	x8, sp, #0x20
   1cfe0:	add	x0, sp, #0x30
   1cfe4:	mov	w3, #0x3                   	// #3
   1cfe8:	mov	x1, x23
   1cfec:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1cff0:	ldrb	w8, [sp, #40]
   1cff4:	and	w9, w8, #0xfffffffd
   1cff8:	strb	w9, [sp, #40]
   1cffc:	tbnz	w8, #0, 1d008 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0xc8>
   1d000:	mov	w9, #0x1                   	// #1
   1d004:	b	1d014 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0xd4>
   1d008:	ldr	x9, [sp, #32]
   1d00c:	str	xzr, [sp, #32]
   1d010:	orr	x9, x9, #0x1
   1d014:	tst	x9, #0xfffffffffffffffe
   1d018:	and	x11, x9, #0xfffffffffffffffe
   1d01c:	cset	w10, ne  // ne = any
   1d020:	orr	x10, x11, x10
   1d024:	str	x10, [x29, #24]
   1d028:	cbnz	x11, 1d194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x254>
   1d02c:	tbnz	w8, #0, 1d1d8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x298>
   1d030:	cbnz	x10, 1d1d0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1d034:	ldr	w8, [sp, #32]
   1d038:	cbnz	w8, 1d1b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x278>
   1d03c:	ldr	w8, [x19, #48]
   1d040:	cmp	w8, #0xb
   1d044:	b.ne	1d1f8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2b8>  // b.any
   1d048:	ldr	x8, [x19, #72]
   1d04c:	mov	x10, sp
   1d050:	add	x23, x10, #0x8
   1d054:	mov	w9, #0x40                  	// #64
   1d058:	cmp	x21, x22
   1d05c:	sub	x2, x29, #0x10
   1d060:	mov	x0, x23
   1d064:	mov	x1, x22
   1d068:	stur	w9, [x29, #-8]
   1d06c:	stur	x8, [x29, #-16]
   1d070:	b.eq	1d07c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x13c>  // b.none
   1d074:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1d078:	b	1d080 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x140>
   1d07c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1d080:	ldur	w8, [x29, #-8]
   1d084:	cmp	w8, #0x41
   1d088:	b.cc	1d098 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x158>  // b.lo, b.ul, b.last
   1d08c:	ldur	x0, [x29, #-16]
   1d090:	cbz	x0, 1d098 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x158>
   1d094:	bl	0 <_ZdaPv>
   1d098:	ldr	x8, [sp, #8]
   1d09c:	ldr	x9, [sp, #56]
   1d0a0:	cmp	x8, x9
   1d0a4:	b.eq	1d0b4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x174>  // b.none
   1d0a8:	mov	x0, sp
   1d0ac:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d0b0:	b	1d124 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1e4>
   1d0b4:	cmp	x21, x8
   1d0b8:	b.eq	1d0cc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x18c>  // b.none
   1d0bc:	mov	x0, x23
   1d0c0:	mov	x1, x20
   1d0c4:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1d0c8:	b	1d0e0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1a0>
   1d0cc:	mov	x8, sp
   1d0d0:	add	x9, sp, #0x30
   1d0d4:	add	x0, x8, #0x8
   1d0d8:	add	x1, x9, #0x8
   1d0dc:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1d0e0:	mov	w20, w0
   1d0e4:	mov	x0, sp
   1d0e8:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d0ec:	tbz	w20, #0, 1d124 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1e4>
   1d0f0:	ldrb	w8, [sp, #40]
   1d0f4:	tbnz	w8, #1, 1d218 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1d0f8:	tbz	w8, #0, 1d114 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1d4>
   1d0fc:	ldr	x0, [sp, #32]
   1d100:	cbz	x0, 1d110 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1d0>
   1d104:	ldr	x8, [x0]
   1d108:	ldr	x8, [x8, #8]
   1d10c:	blr	x8
   1d110:	str	xzr, [sp, #32]
   1d114:	add	x0, sp, #0x30
   1d118:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d11c:	mov	x0, xzr
   1d120:	b	1d15c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1d124:	ldrb	w8, [sp, #40]
   1d128:	tbnz	w8, #1, 1d218 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1d12c:	tbz	w8, #0, 1d148 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x208>
   1d130:	ldr	x0, [sp, #32]
   1d134:	cbz	x0, 1d144 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x204>
   1d138:	ldr	x8, [x0]
   1d13c:	ldr	x8, [x8, #8]
   1d140:	blr	x8
   1d144:	str	xzr, [sp, #32]
   1d148:	add	x0, sp, #0x30
   1d14c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d150:	mov	x0, x19
   1d154:	bl	1dc90 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1d158:	and	x0, x0, #0xffffffff
   1d15c:	ldp	x20, x19, [sp, #144]
   1d160:	ldp	x22, x21, [sp, #128]
   1d164:	ldr	x23, [sp, #112]
   1d168:	ldp	x29, x30, [sp, #96]
   1d16c:	add	sp, sp, #0xa0
   1d170:	ret
   1d174:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d178:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d17c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d180:	add	x0, x0, #0x0
   1d184:	add	x1, x1, #0x0
   1d188:	add	x3, x3, #0x0
   1d18c:	mov	w2, #0x4c4                 	// #1220
   1d190:	bl	0 <__assert_fail>
   1d194:	orr	x8, x9, #0x1
   1d198:	mov	x0, sp
   1d19c:	str	x8, [sp]
   1d1a0:	str	xzr, [x29, #24]
   1d1a4:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d1a8:	ldr	x8, [sp]
   1d1ac:	cbnz	x8, 1d220 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2e0>
   1d1b0:	ldr	x8, [x29, #24]
   1d1b4:	cbnz	x8, 1d1d0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1d1b8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d1bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d1c0:	add	x0, x0, #0x0
   1d1c4:	add	x1, x1, #0x0
   1d1c8:	mov	w2, #0x4cb                 	// #1227
   1d1cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1d1d0:	add	x0, x29, #0x18
   1d1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1d1d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d1dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d1e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d1e4:	add	x0, x0, #0x0
   1d1e8:	add	x1, x1, #0x0
   1d1ec:	add	x3, x3, #0x0
   1d1f0:	mov	w2, #0x272                 	// #626
   1d1f4:	bl	0 <__assert_fail>
   1d1f8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d1fc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d200:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d204:	add	x0, x0, #0x0
   1d208:	add	x1, x1, #0x0
   1d20c:	add	x3, x3, #0x0
   1d210:	mov	w2, #0x208                 	// #520
   1d214:	bl	0 <__assert_fail>
   1d218:	add	x0, sp, #0x20
   1d21c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d220:	mov	x0, sp
   1d224:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001d228 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>:
   1d228:	stp	x29, x30, [sp, #-32]!
   1d22c:	stp	x20, x19, [sp, #16]
   1d230:	mov	x29, sp
   1d234:	ldr	w9, [x0, #48]
   1d238:	mov	x20, x0
   1d23c:	mov	x19, x8
   1d240:	cmp	w9, #0x1
   1d244:	b.ne	1d270 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d248:	ldr	w8, [x20, #80]
   1d24c:	cmp	w8, #0xc
   1d250:	b.ne	1d270 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d254:	ldr	x8, [x20, #72]
   1d258:	cbz	x8, 1d2ec <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xc4>
   1d25c:	ldr	w9, [x8]
   1d260:	cmp	w9, #0x1
   1d264:	b.ne	1d270 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d268:	ldr	x8, [x8, #16]
   1d26c:	b	1d2b8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   1d270:	ldr	x8, [x20]
   1d274:	mov	x0, x20
   1d278:	ldr	x8, [x8, #40]
   1d27c:	blr	x8
   1d280:	tbz	w0, #0, 1d2c8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa0>
   1d284:	ldr	w8, [x20, #48]
   1d288:	cbnz	w8, 1d30c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xe4>
   1d28c:	ldr	x8, [x20, #72]
   1d290:	cbz	x8, 1d2ec <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xc4>
   1d294:	ldr	w9, [x8]
   1d298:	cmp	w9, #0x1
   1d29c:	b.ne	1d2c8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa0>  // b.any
   1d2a0:	ldr	x8, [x8, #16]
   1d2a4:	cbz	x8, 1d2e0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>
   1d2a8:	and	x9, x8, #0xfffffffffffff000
   1d2ac:	cmp	x9, x8
   1d2b0:	b.ne	1d2e0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>  // b.any
   1d2b4:	asr	x8, x8, #12
   1d2b8:	mov	w9, #0xc                   	// #12
   1d2bc:	stp	x8, x9, [x19]
   1d2c0:	mov	w8, #0x1                   	// #1
   1d2c4:	b	1d2d0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   1d2c8:	mov	w8, wzr
   1d2cc:	strb	wzr, [x19]
   1d2d0:	strb	w8, [x19, #16]
   1d2d4:	ldp	x20, x19, [sp, #16]
   1d2d8:	ldp	x29, x30, [sp], #32
   1d2dc:	ret
   1d2e0:	stp	x8, xzr, [x19]
   1d2e4:	mov	w8, #0x1                   	// #1
   1d2e8:	b	1d2d0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   1d2ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d2f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d2f4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d2f8:	add	x0, x0, #0x0
   1d2fc:	add	x1, x1, #0x0
   1d300:	add	x3, x3, #0x0
   1d304:	mov	w2, #0x69                  	// #105
   1d308:	bl	0 <__assert_fail>
   1d30c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d310:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d314:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d318:	add	x0, x0, #0x0
   1d31c:	add	x1, x1, #0x0
   1d320:	add	x3, x3, #0x0
   1d324:	mov	w2, #0x1f4                 	// #500
   1d328:	bl	0 <__assert_fail>

000000000001d32c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>:
   1d32c:	sub	sp, sp, #0x50
   1d330:	stp	x29, x30, [sp, #16]
   1d334:	str	x23, [sp, #32]
   1d338:	stp	x22, x21, [sp, #48]
   1d33c:	stp	x20, x19, [sp, #64]
   1d340:	add	x29, sp, #0x10
   1d344:	ldr	w8, [x0, #8]
   1d348:	mov	x19, x0
   1d34c:	cmp	w8, #0x40
   1d350:	str	w8, [sp, #8]
   1d354:	b.hi	1d364 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x38>  // b.pmore
   1d358:	ldr	x9, [x19]
   1d35c:	str	x9, [sp]
   1d360:	b	1d374 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x48>
   1d364:	mov	x0, sp
   1d368:	mov	x1, x19
   1d36c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   1d370:	ldr	w8, [sp, #8]
   1d374:	cmp	w8, #0x3e
   1d378:	b.ls	1d530 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x204>  // b.plast
   1d37c:	cmp	w8, #0x40
   1d380:	b.hi	1d398 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x6c>  // b.pmore
   1d384:	cmp	w8, #0x3f
   1d388:	b.ne	1d3d4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xa8>  // b.any
   1d38c:	str	xzr, [sp]
   1d390:	mov	x20, xzr
   1d394:	b	1d3e4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xb8>
   1d398:	mov	x0, sp
   1d39c:	mov	w1, #0x3f                  	// #63
   1d3a0:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
   1d3a4:	ldr	w20, [sp, #8]
   1d3a8:	cmp	w20, #0x41
   1d3ac:	b.cc	1d3e0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xb4>  // b.lo, b.ul, b.last
   1d3b0:	mov	x0, sp
   1d3b4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   1d3b8:	sub	w8, w20, w0
   1d3bc:	cmp	w8, #0x41
   1d3c0:	b.cs	1d550 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x224>  // b.hs, b.nlast
   1d3c4:	ldr	x0, [sp]
   1d3c8:	ldr	x20, [x0]
   1d3cc:	bl	0 <_ZdaPv>
   1d3d0:	b	1d3e4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xb8>
   1d3d4:	ldr	x8, [sp]
   1d3d8:	lsr	x8, x8, #63
   1d3dc:	str	x8, [sp]
   1d3e0:	ldr	x20, [sp]
   1d3e4:	ldr	w8, [x19, #8]
   1d3e8:	cmp	w8, #0x40
   1d3ec:	str	w8, [sp, #8]
   1d3f0:	b.hi	1d400 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xd4>  // b.pmore
   1d3f4:	ldr	x9, [x19]
   1d3f8:	str	x9, [sp]
   1d3fc:	b	1d410 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xe4>
   1d400:	mov	x0, sp
   1d404:	mov	x1, x19
   1d408:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   1d40c:	ldr	w8, [sp, #8]
   1d410:	cmp	w8, #0x33
   1d414:	b.ls	1d530 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x204>  // b.plast
   1d418:	cmp	w8, #0x40
   1d41c:	b.hi	1d430 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x104>  // b.pmore
   1d420:	cmp	w8, #0x34
   1d424:	b.ne	1d46c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x140>  // b.any
   1d428:	str	xzr, [sp]
   1d42c:	b	1d478 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x14c>
   1d430:	mov	x0, sp
   1d434:	mov	w1, #0x34                  	// #52
   1d438:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
   1d43c:	ldr	w8, [sp, #8]
   1d440:	cmp	w8, #0x40
   1d444:	b.hi	1d500 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1d4>  // b.pmore
   1d448:	cbnz	w8, 1d478 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x14c>
   1d44c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d450:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d454:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d458:	add	x0, x0, #0x0
   1d45c:	add	x1, x1, #0x0
   1d460:	add	x3, x3, #0x0
   1d464:	mov	w2, #0x307                 	// #775
   1d468:	bl	0 <__assert_fail>
   1d46c:	ldr	x9, [sp]
   1d470:	lsr	x9, x9, #52
   1d474:	str	x9, [sp]
   1d478:	ldr	x9, [sp]
   1d47c:	neg	w8, w8
   1d480:	lsl	x9, x9, x8
   1d484:	asr	x21, x9, x8
   1d488:	and	x22, x21, #0x7ff
   1d48c:	ldr	w23, [x19, #8]
   1d490:	cmp	w23, #0x40
   1d494:	b.ls	1d4b0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x184>  // b.plast
   1d498:	mov	x0, x19
   1d49c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   1d4a0:	sub	w8, w23, w0
   1d4a4:	cmp	w8, #0x41
   1d4a8:	b.cs	1d550 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x224>  // b.hs, b.nlast
   1d4ac:	ldr	x19, [x19]
   1d4b0:	sub	x8, x22, #0x3fc
   1d4b4:	cmp	x8, #0x7
   1d4b8:	mov	w0, #0xffffffff            	// #-1
   1d4bc:	b.hi	1d4e8 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1bc>  // b.pmore
   1d4c0:	ldr	x8, [x19]
   1d4c4:	and	x9, x8, #0xffffffffffff
   1d4c8:	cbnz	x9, 1d4e8 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1bc>
   1d4cc:	lsl	w9, w21, #4
   1d4d0:	add	w9, w9, #0x40
   1d4d4:	and	w9, w9, #0x70
   1d4d8:	ubfx	x8, x8, #48, #4
   1d4dc:	bfi	w9, w20, #7, #1
   1d4e0:	orr	w8, w9, w8
   1d4e4:	eor	w0, w8, #0x40
   1d4e8:	ldp	x20, x19, [sp, #64]
   1d4ec:	ldp	x22, x21, [sp, #48]
   1d4f0:	ldr	x23, [sp, #32]
   1d4f4:	ldp	x29, x30, [sp, #16]
   1d4f8:	add	sp, sp, #0x50
   1d4fc:	ret
   1d500:	mov	x0, sp
   1d504:	bl	0 <LLVMInitializeAArch64AsmParser>
   1d508:	cmp	w0, #0x41
   1d50c:	b.cs	1d570 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x244>  // b.hs, b.nlast
   1d510:	ldr	x0, [sp]
   1d514:	ldr	w8, [sp, #8]
   1d518:	ldr	x21, [x0]
   1d51c:	cmp	w8, #0x41
   1d520:	and	x22, x21, #0x7ff
   1d524:	b.cc	1d48c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x160>  // b.lo, b.ul, b.last
   1d528:	bl	0 <_ZdaPv>
   1d52c:	b	1d48c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x160>
   1d530:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d538:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d53c:	add	x0, x0, #0x0
   1d540:	add	x1, x1, #0x0
   1d544:	add	x3, x3, #0x0
   1d548:	mov	w2, #0x3e3                 	// #995
   1d54c:	bl	0 <__assert_fail>
   1d550:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d554:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d558:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d55c:	add	x0, x0, #0x0
   1d560:	add	x1, x1, #0x0
   1d564:	add	x3, x3, #0x0
   1d568:	mov	w2, #0x657                 	// #1623
   1d56c:	bl	0 <__assert_fail>
   1d570:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d574:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d578:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d57c:	add	x0, x0, #0x0
   1d580:	add	x1, x1, #0x0
   1d584:	add	x3, x3, #0x0
   1d588:	mov	w2, #0x663                 	// #1635
   1d58c:	bl	0 <__assert_fail>

000000000001d590 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>:
   1d590:	stp	x29, x30, [sp, #-16]!
   1d594:	mov	x29, sp
   1d598:	add	x8, x0, #0x1
   1d59c:	cmp	x8, #0x2
   1d5a0:	b.cc	1d658 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.lo, b.ul, b.last
   1d5a4:	cmp	w1, #0x40
   1d5a8:	b.ne	1d650 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc0>  // b.any
   1d5ac:	mov	x8, #0xffffffffffffffff    	// #-1
   1d5b0:	lsr	w9, w1, #1
   1d5b4:	lsr	x12, x0, x9
   1d5b8:	lsl	x11, x8, x9
   1d5bc:	eor	x12, x12, x0
   1d5c0:	and	w10, w1, #0xfffffffe
   1d5c4:	bics	xzr, x12, x11
   1d5c8:	bic	x13, x12, x11
   1d5cc:	csel	w1, w9, w10, eq  // eq = none
   1d5d0:	cbnz	x13, 1d5dc <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x4c>
   1d5d4:	cmp	w1, #0x2
   1d5d8:	b.hi	1d5b0 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x20>  // b.pmore
   1d5dc:	neg	w8, w1
   1d5e0:	mov	x9, #0xffffffffffffffff    	// #-1
   1d5e4:	lsr	x8, x9, x8
   1d5e8:	ands	x9, x8, x0
   1d5ec:	b.eq	1d604 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x74>  // b.none
   1d5f0:	sub	x10, x9, #0x1
   1d5f4:	orr	x10, x10, x9
   1d5f8:	add	x11, x10, #0x1
   1d5fc:	tst	x11, x10
   1d600:	b.eq	1d684 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xf4>  // b.none
   1d604:	orn	x9, x0, x8
   1d608:	cmn	x9, #0x1
   1d60c:	b.eq	1d658 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.none
   1d610:	mov	x10, #0xfffffffffffffffe    	// #-2
   1d614:	mvn	x8, x9
   1d618:	sub	x9, x10, x9
   1d61c:	orr	x9, x9, x8
   1d620:	add	x10, x9, #0x1
   1d624:	tst	x10, x9
   1d628:	b.ne	1d658 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xc8>  // b.any
   1d62c:	clz	x9, x8
   1d630:	mov	w10, #0x40                  	// #64
   1d634:	rbit	x11, x8
   1d638:	sub	w8, w10, w9
   1d63c:	clz	x10, x11
   1d640:	add	w10, w1, w10
   1d644:	add	w9, w10, w9
   1d648:	sub	w9, w9, #0x40
   1d64c:	b	1d6a8 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x118>
   1d650:	lsr	x8, x0, x1
   1d654:	cbz	x8, 1d668 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xd8>
   1d658:	mov	w8, wzr
   1d65c:	mov	w0, w8
   1d660:	ldp	x29, x30, [sp], #16
   1d664:	ret
   1d668:	neg	w8, w1
   1d66c:	mov	x9, #0xffffffffffffffff    	// #-1
   1d670:	lsr	x8, x9, x8
   1d674:	cmp	x8, x0
   1d678:	mov	w8, wzr
   1d67c:	b.ne	1d5ac <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x1c>  // b.any
   1d680:	b	1d65c <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xcc>
   1d684:	rbit	x8, x9
   1d688:	clz	x8, x8
   1d68c:	lsr	x9, x9, x8
   1d690:	mvn	x10, x9
   1d694:	cmn	x9, #0x1
   1d698:	rbit	x9, x10
   1d69c:	clz	x9, x9
   1d6a0:	mov	w10, #0x40                  	// #64
   1d6a4:	csel	w9, w10, w9, eq  // eq = none
   1d6a8:	subs	w8, w1, w8
   1d6ac:	b.ls	1d6e0 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x150>  // b.plast
   1d6b0:	sub	w10, w1, #0x1
   1d6b4:	neg	w11, w1, lsl #1
   1d6b8:	sub	w9, w9, #0x1
   1d6bc:	mov	w12, #0x1000                	// #4096
   1d6c0:	and	w8, w8, w10
   1d6c4:	orr	w9, w9, w11
   1d6c8:	bic	w10, w12, w9, lsl #6
   1d6cc:	bfi	w9, w8, #6, #26
   1d6d0:	orr	w8, w9, w10
   1d6d4:	str	x8, [x2]
   1d6d8:	mov	w8, #0x1                   	// #1
   1d6dc:	b	1d65c <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xcc>
   1d6e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d6e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d6e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d6ec:	add	x0, x0, #0x0
   1d6f0:	add	x1, x1, #0x0
   1d6f4:	add	x3, x3, #0x0
   1d6f8:	mov	w2, #0xff                  	// #255
   1d6fc:	bl	0 <__assert_fail>

000000000001d700 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE>:
   1d700:	sub	sp, sp, #0x40
   1d704:	stp	x29, x30, [sp, #16]
   1d708:	str	x21, [sp, #32]
   1d70c:	stp	x20, x19, [sp, #48]
   1d710:	add	x29, sp, #0x10
   1d714:	ldr	x8, [x0]
   1d718:	mov	x19, x2
   1d71c:	mov	x21, x0
   1d720:	mov	x20, x1
   1d724:	ldr	x8, [x8, #40]
   1d728:	blr	x8
   1d72c:	tbz	w0, #0, 1d794 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x94>
   1d730:	ldr	w8, [x21, #48]
   1d734:	cbnz	w8, 1d7d4 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xd4>
   1d738:	ldr	x0, [x21, #72]
   1d73c:	add	x1, x29, #0x1c
   1d740:	add	x2, x29, #0x18
   1d744:	add	x3, sp, #0x8
   1d748:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   1d74c:	mov	w8, w0
   1d750:	mov	w0, wzr
   1d754:	cbz	x19, 1d798 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x98>
   1d758:	tbz	w8, #0, 1d798 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x98>
   1d75c:	ldrh	w8, [x29, #24]
   1d760:	cbnz	w8, 1d798 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x98>
   1d764:	ldr	w9, [x29, #28]
   1d768:	mov	x8, xzr
   1d76c:	mov	w10, #0x1                   	// #1
   1d770:	cmp	x19, x8
   1d774:	b.ls	1d7b4 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xb4>  // b.plast
   1d778:	ldr	w8, [x20, x8, lsl #2]
   1d77c:	cmp	w9, w8
   1d780:	b.eq	1d7ac <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0xac>  // b.none
   1d784:	mov	w8, w10
   1d788:	cmp	x19, x8
   1d78c:	add	w10, w10, #0x1
   1d790:	b.ne	1d770 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x70>  // b.any
   1d794:	mov	w0, wzr
   1d798:	ldp	x20, x19, [sp, #48]
   1d79c:	ldr	x21, [sp, #32]
   1d7a0:	ldp	x29, x30, [sp, #16]
   1d7a4:	add	sp, sp, #0x40
   1d7a8:	ret
   1d7ac:	mov	w0, #0x1                   	// #1
   1d7b0:	b	1d798 <_ZNK12_GLOBAL__N_114AArch64Operand12isMovWSymbolEN4llvm8ArrayRefINS1_13AArch64MCExpr11VariantKindEEE+0x98>
   1d7b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d7b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d7bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d7c0:	add	x0, x0, #0x0
   1d7c4:	add	x1, x1, #0x0
   1d7c8:	add	x3, x3, #0x0
   1d7cc:	mov	w2, #0xfa                  	// #250
   1d7d0:	bl	0 <__assert_fail>
   1d7d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d7d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d7dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d7e0:	add	x0, x0, #0x0
   1d7e4:	add	x1, x1, #0x0
   1d7e8:	add	x3, x3, #0x0
   1d7ec:	mov	w2, #0x1f4                 	// #500
   1d7f0:	bl	0 <__assert_fail>

000000000001d7f4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>:
   1d7f4:	stp	x29, x30, [sp, #-32]!
   1d7f8:	stp	x20, x19, [sp, #16]
   1d7fc:	mov	x29, sp
   1d800:	ldr	w9, [x0, #48]
   1d804:	mov	x20, x0
   1d808:	mov	x19, x8
   1d80c:	cmp	w9, #0x1
   1d810:	b.ne	1d83c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d814:	ldr	w8, [x20, #80]
   1d818:	cmp	w8, #0x8
   1d81c:	b.ne	1d83c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d820:	ldr	x8, [x20, #72]
   1d824:	cbz	x8, 1d8b8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xc4>
   1d828:	ldr	w9, [x8]
   1d82c:	cmp	w9, #0x1
   1d830:	b.ne	1d83c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1d834:	ldr	x8, [x8, #16]
   1d838:	b	1d884 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   1d83c:	ldr	x8, [x20]
   1d840:	mov	x0, x20
   1d844:	ldr	x8, [x8, #40]
   1d848:	blr	x8
   1d84c:	tbz	w0, #0, 1d894 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa0>
   1d850:	ldr	w8, [x20, #48]
   1d854:	cbnz	w8, 1d8d8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xe4>
   1d858:	ldr	x8, [x20, #72]
   1d85c:	cbz	x8, 1d8b8 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xc4>
   1d860:	ldr	w9, [x8]
   1d864:	cmp	w9, #0x1
   1d868:	b.ne	1d894 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa0>  // b.any
   1d86c:	ldr	x8, [x8, #16]
   1d870:	cbz	x8, 1d8ac <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>
   1d874:	and	x9, x8, #0xffffffffffffff00
   1d878:	cmp	x9, x8
   1d87c:	b.ne	1d8ac <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>  // b.any
   1d880:	asr	x8, x8, #8
   1d884:	mov	w9, #0x8                   	// #8
   1d888:	stp	x8, x9, [x19]
   1d88c:	mov	w8, #0x1                   	// #1
   1d890:	b	1d89c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   1d894:	mov	w8, wzr
   1d898:	strb	wzr, [x19]
   1d89c:	strb	w8, [x19, #16]
   1d8a0:	ldp	x20, x19, [sp, #16]
   1d8a4:	ldp	x29, x30, [sp], #32
   1d8a8:	ret
   1d8ac:	stp	x8, xzr, [x19]
   1d8b0:	mov	w8, #0x1                   	// #1
   1d8b4:	b	1d89c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xa8>
   1d8b8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d8bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d8c0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d8c4:	add	x0, x0, #0x0
   1d8c8:	add	x1, x1, #0x0
   1d8cc:	add	x3, x3, #0x0
   1d8d0:	mov	w2, #0x69                  	// #105
   1d8d4:	bl	0 <__assert_fail>
   1d8d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1d8dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1d8e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1d8e4:	add	x0, x0, #0x0
   1d8e8:	add	x1, x1, #0x0
   1d8ec:	add	x3, x3, #0x0
   1d8f0:	mov	w2, #0x1f4                 	// #500
   1d8f4:	bl	0 <__assert_fail>

000000000001d8f8 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE>:
   1d8f8:	sub	sp, sp, #0x20
   1d8fc:	stp	x29, x30, [sp, #16]
   1d900:	add	x29, sp, #0x10
   1d904:	sub	x1, x29, #0x4
   1d908:	add	x2, sp, #0x8
   1d90c:	mov	x3, sp
   1d910:	bl	10cd4 <_ZN12_GLOBAL__N_116AArch64AsmParser17classifySymbolRefEPKN4llvm6MCExprERNS1_13AArch64MCExpr11VariantKindERNS1_15MCSymbolRefExpr11VariantKindERl>
   1d914:	tbz	w0, #0, 1d924 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x2c>
   1d918:	ldrh	w8, [sp, #8]
   1d91c:	cmp	w8, #0x16
   1d920:	b.ne	1d934 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x3c>  // b.any
   1d924:	mov	w0, #0x1                   	// #1
   1d928:	ldp	x29, x30, [sp, #16]
   1d92c:	add	sp, sp, #0x20
   1d930:	ret
   1d934:	ldur	w9, [x29, #-4]
   1d938:	mov	w0, #0x1                   	// #1
   1d93c:	cmp	w9, #0x39
   1d940:	b.ls	1d984 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x8c>  // b.plast
   1d944:	sub	w9, w9, #0x121
   1d948:	cmp	w9, #0x6
   1d94c:	b.hi	1d964 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x6c>  // b.pmore
   1d950:	mov	w10, #0x1                   	// #1
   1d954:	lsl	w9, w10, w9
   1d958:	mov	w10, #0x79                  	// #121
   1d95c:	tst	w9, w10
   1d960:	b.ne	1d928 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>  // b.any
   1d964:	cmp	w8, #0x18
   1d968:	b.eq	1d974 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x7c>  // b.none
   1d96c:	cmp	w8, #0x14
   1d970:	b.ne	1d9a0 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0xa8>  // b.any
   1d974:	ldr	x8, [sp]
   1d978:	cmp	x8, #0x0
   1d97c:	cset	w0, eq  // eq = none
   1d980:	b	1d928 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>
   1d984:	mov	w10, #0x1                   	// #1
   1d988:	mov	x11, #0x3a000000000         	// #3985729650688
   1d98c:	lsl	x10, x10, x9
   1d990:	movk	x11, #0x200, lsl #48
   1d994:	tst	x10, x11
   1d998:	b.ne	1d928 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>  // b.any
   1d99c:	b	1d944 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x4c>
   1d9a0:	mov	w0, wzr
   1d9a4:	b	1d928 <_ZNK12_GLOBAL__N_114AArch64Operand22isSymbolicUImm12OffsetEPKN4llvm6MCExprE+0x30>

000000000001d9a8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>:
   1d9a8:	sub	sp, sp, #0xa0
   1d9ac:	stp	x29, x30, [sp, #96]
   1d9b0:	str	x23, [sp, #112]
   1d9b4:	stp	x22, x21, [sp, #128]
   1d9b8:	stp	x20, x19, [sp, #144]
   1d9bc:	add	x29, sp, #0x60
   1d9c0:	ldr	w8, [x0, #48]
   1d9c4:	cmp	w8, #0xb
   1d9c8:	b.ne	1da2c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1d9cc:	ldrb	w8, [x0, #80]
   1d9d0:	mov	x22, x0
   1d9d4:	cbz	w8, 1dbc0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x218>
   1d9d8:	mov	w0, #0x1                   	// #1
   1d9dc:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1d9e0:	cbz	x0, 1dbdc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x234>
   1d9e4:	mov	x23, x0
   1d9e8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1d9ec:	add	x8, sp, #0x30
   1d9f0:	mov	x21, x0
   1d9f4:	add	x19, x8, #0x8
   1d9f8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1d9fc:	mov	x20, x0
   1da00:	cmp	x0, x21
   1da04:	b.eq	1da34 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1da08:	mov	x0, x19
   1da0c:	mov	x1, x21
   1da10:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1da14:	ldr	x23, [x23, #16]
   1da18:	cbz	x23, 1da48 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1da1c:	mov	x0, x23
   1da20:	bl	0 <strlen>
   1da24:	mov	x2, x0
   1da28:	b	1da4c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1da2c:	mov	w0, #0x2                   	// #2
   1da30:	b	1dbc4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1da34:	mov	x0, x19
   1da38:	mov	x1, x21
   1da3c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1da40:	ldr	x23, [x23, #16]
   1da44:	cbnz	x23, 1da1c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x74>
   1da48:	mov	x2, xzr
   1da4c:	add	x8, sp, #0x20
   1da50:	add	x0, sp, #0x30
   1da54:	mov	w3, #0x3                   	// #3
   1da58:	mov	x1, x23
   1da5c:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1da60:	ldrb	w8, [sp, #40]
   1da64:	and	w9, w8, #0xfffffffd
   1da68:	strb	w9, [sp, #40]
   1da6c:	tbnz	w8, #0, 1da78 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1da70:	mov	w9, #0x1                   	// #1
   1da74:	b	1da84 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1da78:	ldr	x9, [sp, #32]
   1da7c:	str	xzr, [sp, #32]
   1da80:	orr	x9, x9, #0x1
   1da84:	tst	x9, #0xfffffffffffffffe
   1da88:	and	x11, x9, #0xfffffffffffffffe
   1da8c:	cset	w10, ne  // ne = any
   1da90:	orr	x10, x11, x10
   1da94:	str	x10, [x29, #24]
   1da98:	cbnz	x11, 1dbfc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x254>
   1da9c:	tbnz	w8, #0, 1dc40 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x298>
   1daa0:	cbnz	x10, 1dc38 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x290>
   1daa4:	ldr	w8, [sp, #32]
   1daa8:	cbnz	w8, 1dc20 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x278>
   1daac:	ldr	w8, [x22, #48]
   1dab0:	cmp	w8, #0xb
   1dab4:	b.ne	1dc60 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2b8>  // b.any
   1dab8:	ldr	x8, [x22, #72]
   1dabc:	mov	x10, sp
   1dac0:	add	x22, x10, #0x8
   1dac4:	mov	w9, #0x40                  	// #64
   1dac8:	cmp	x20, x21
   1dacc:	sub	x2, x29, #0x10
   1dad0:	mov	x0, x22
   1dad4:	mov	x1, x21
   1dad8:	stur	w9, [x29, #-8]
   1dadc:	stur	x8, [x29, #-16]
   1dae0:	b.eq	1daec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x144>  // b.none
   1dae4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1dae8:	b	1daf0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x148>
   1daec:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1daf0:	ldur	w8, [x29, #-8]
   1daf4:	cmp	w8, #0x41
   1daf8:	b.cc	1db08 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.lo, b.ul, b.last
   1dafc:	ldur	x0, [x29, #-16]
   1db00:	cbz	x0, 1db08 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x160>
   1db04:	bl	0 <_ZdaPv>
   1db08:	ldr	x8, [sp, #8]
   1db0c:	ldr	x9, [sp, #56]
   1db10:	cmp	x8, x9
   1db14:	b.eq	1db24 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x17c>  // b.none
   1db18:	mov	x0, sp
   1db1c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1db20:	b	1db94 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1db24:	cmp	x20, x8
   1db28:	b.eq	1db3c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x194>  // b.none
   1db2c:	mov	x0, x22
   1db30:	mov	x1, x19
   1db34:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1db38:	b	1db50 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1a8>
   1db3c:	mov	x8, sp
   1db40:	add	x9, sp, #0x30
   1db44:	add	x0, x8, #0x8
   1db48:	add	x1, x9, #0x8
   1db4c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1db50:	mov	w19, w0
   1db54:	mov	x0, sp
   1db58:	bl	0 <LLVMInitializeAArch64AsmParser>
   1db5c:	tbz	w19, #0, 1db94 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1db60:	ldrb	w8, [sp, #40]
   1db64:	tbnz	w8, #1, 1dc80 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1db68:	tbz	w8, #0, 1db84 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1dc>
   1db6c:	ldr	x0, [sp, #32]
   1db70:	cbz	x0, 1db80 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1d8>
   1db74:	ldr	x8, [x0]
   1db78:	ldr	x8, [x8, #8]
   1db7c:	blr	x8
   1db80:	str	xzr, [sp, #32]
   1db84:	add	x0, sp, #0x30
   1db88:	bl	0 <LLVMInitializeAArch64AsmParser>
   1db8c:	mov	x0, xzr
   1db90:	b	1dbc4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1db94:	ldrb	w8, [sp, #40]
   1db98:	tbnz	w8, #1, 1dc80 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1db9c:	tbz	w8, #0, 1dbb8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x210>
   1dba0:	ldr	x0, [sp, #32]
   1dba4:	cbz	x0, 1dbb4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x20c>
   1dba8:	ldr	x8, [x0]
   1dbac:	ldr	x8, [x8, #8]
   1dbb0:	blr	x8
   1dbb4:	str	xzr, [sp, #32]
   1dbb8:	add	x0, sp, #0x30
   1dbbc:	bl	0 <LLVMInitializeAArch64AsmParser>
   1dbc0:	mov	w0, #0x1                   	// #1
   1dbc4:	ldp	x20, x19, [sp, #144]
   1dbc8:	ldp	x22, x21, [sp, #128]
   1dbcc:	ldr	x23, [sp, #112]
   1dbd0:	ldp	x29, x30, [sp, #96]
   1dbd4:	add	sp, sp, #0xa0
   1dbd8:	ret
   1dbdc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1dbe0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1dbe4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1dbe8:	add	x0, x0, #0x0
   1dbec:	add	x1, x1, #0x0
   1dbf0:	add	x3, x3, #0x0
   1dbf4:	mov	w2, #0x4c4                 	// #1220
   1dbf8:	bl	0 <__assert_fail>
   1dbfc:	orr	x8, x9, #0x1
   1dc00:	mov	x0, sp
   1dc04:	str	x8, [sp]
   1dc08:	str	xzr, [x29, #24]
   1dc0c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1dc10:	ldr	x8, [sp]
   1dc14:	cbnz	x8, 1dc88 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2e0>
   1dc18:	ldr	x8, [x29, #24]
   1dc1c:	cbnz	x8, 1dc38 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x290>
   1dc20:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1dc24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1dc28:	add	x0, x0, #0x0
   1dc2c:	add	x1, x1, #0x0
   1dc30:	mov	w2, #0x4cb                 	// #1227
   1dc34:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1dc38:	add	x0, x29, #0x18
   1dc3c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1dc40:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1dc44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1dc48:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1dc4c:	add	x0, x0, #0x0
   1dc50:	add	x1, x1, #0x0
   1dc54:	add	x3, x3, #0x0
   1dc58:	mov	w2, #0x272                 	// #626
   1dc5c:	bl	0 <__assert_fail>
   1dc60:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1dc64:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1dc68:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1dc6c:	add	x0, x0, #0x0
   1dc70:	add	x1, x1, #0x0
   1dc74:	add	x3, x3, #0x0
   1dc78:	mov	w2, #0x208                 	// #520
   1dc7c:	bl	0 <__assert_fail>
   1dc80:	add	x0, sp, #0x20
   1dc84:	bl	0 <LLVMInitializeAArch64AsmParser>
   1dc88:	mov	x0, sp
   1dc8c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001dc90 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>:
   1dc90:	sub	sp, sp, #0xa0
   1dc94:	stp	x29, x30, [sp, #96]
   1dc98:	str	x23, [sp, #112]
   1dc9c:	stp	x22, x21, [sp, #128]
   1dca0:	stp	x20, x19, [sp, #144]
   1dca4:	add	x29, sp, #0x60
   1dca8:	ldr	w8, [x0, #48]
   1dcac:	cmp	w8, #0xb
   1dcb0:	b.ne	1dd14 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1dcb4:	ldrb	w8, [x0, #80]
   1dcb8:	mov	x22, x0
   1dcbc:	cbz	w8, 1dea8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x218>
   1dcc0:	mov	w0, #0x2                   	// #2
   1dcc4:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1dcc8:	cbz	x0, 1dec4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x234>
   1dccc:	mov	x23, x0
   1dcd0:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1dcd4:	add	x8, sp, #0x30
   1dcd8:	mov	x21, x0
   1dcdc:	add	x19, x8, #0x8
   1dce0:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1dce4:	mov	x20, x0
   1dce8:	cmp	x0, x21
   1dcec:	b.eq	1dd1c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1dcf0:	mov	x0, x19
   1dcf4:	mov	x1, x21
   1dcf8:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1dcfc:	ldr	x23, [x23, #16]
   1dd00:	cbz	x23, 1dd30 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1dd04:	mov	x0, x23
   1dd08:	bl	0 <strlen>
   1dd0c:	mov	x2, x0
   1dd10:	b	1dd34 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1dd14:	mov	w0, #0x2                   	// #2
   1dd18:	b	1deac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1dd1c:	mov	x0, x19
   1dd20:	mov	x1, x21
   1dd24:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1dd28:	ldr	x23, [x23, #16]
   1dd2c:	cbnz	x23, 1dd04 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x74>
   1dd30:	mov	x2, xzr
   1dd34:	add	x8, sp, #0x20
   1dd38:	add	x0, sp, #0x30
   1dd3c:	mov	w3, #0x3                   	// #3
   1dd40:	mov	x1, x23
   1dd44:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1dd48:	ldrb	w8, [sp, #40]
   1dd4c:	and	w9, w8, #0xfffffffd
   1dd50:	strb	w9, [sp, #40]
   1dd54:	tbnz	w8, #0, 1dd60 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1dd58:	mov	w9, #0x1                   	// #1
   1dd5c:	b	1dd6c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1dd60:	ldr	x9, [sp, #32]
   1dd64:	str	xzr, [sp, #32]
   1dd68:	orr	x9, x9, #0x1
   1dd6c:	tst	x9, #0xfffffffffffffffe
   1dd70:	and	x11, x9, #0xfffffffffffffffe
   1dd74:	cset	w10, ne  // ne = any
   1dd78:	orr	x10, x11, x10
   1dd7c:	str	x10, [x29, #24]
   1dd80:	cbnz	x11, 1dee4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x254>
   1dd84:	tbnz	w8, #0, 1df28 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x298>
   1dd88:	cbnz	x10, 1df20 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1dd8c:	ldr	w8, [sp, #32]
   1dd90:	cbnz	w8, 1df08 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x278>
   1dd94:	ldr	w8, [x22, #48]
   1dd98:	cmp	w8, #0xb
   1dd9c:	b.ne	1df48 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2b8>  // b.any
   1dda0:	ldr	x8, [x22, #72]
   1dda4:	mov	x10, sp
   1dda8:	add	x22, x10, #0x8
   1ddac:	mov	w9, #0x40                  	// #64
   1ddb0:	cmp	x20, x21
   1ddb4:	sub	x2, x29, #0x10
   1ddb8:	mov	x0, x22
   1ddbc:	mov	x1, x21
   1ddc0:	stur	w9, [x29, #-8]
   1ddc4:	stur	x8, [x29, #-16]
   1ddc8:	b.eq	1ddd4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x144>  // b.none
   1ddcc:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1ddd0:	b	1ddd8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x148>
   1ddd4:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1ddd8:	ldur	w8, [x29, #-8]
   1dddc:	cmp	w8, #0x41
   1dde0:	b.cc	1ddf0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.lo, b.ul, b.last
   1dde4:	ldur	x0, [x29, #-16]
   1dde8:	cbz	x0, 1ddf0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x160>
   1ddec:	bl	0 <_ZdaPv>
   1ddf0:	ldr	x8, [sp, #8]
   1ddf4:	ldr	x9, [sp, #56]
   1ddf8:	cmp	x8, x9
   1ddfc:	b.eq	1de0c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x17c>  // b.none
   1de00:	mov	x0, sp
   1de04:	bl	0 <LLVMInitializeAArch64AsmParser>
   1de08:	b	1de7c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1de0c:	cmp	x20, x8
   1de10:	b.eq	1de24 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x194>  // b.none
   1de14:	mov	x0, x22
   1de18:	mov	x1, x19
   1de1c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1de20:	b	1de38 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1a8>
   1de24:	mov	x8, sp
   1de28:	add	x9, sp, #0x30
   1de2c:	add	x0, x8, #0x8
   1de30:	add	x1, x9, #0x8
   1de34:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1de38:	mov	w19, w0
   1de3c:	mov	x0, sp
   1de40:	bl	0 <LLVMInitializeAArch64AsmParser>
   1de44:	tbz	w19, #0, 1de7c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1de48:	ldrb	w8, [sp, #40]
   1de4c:	tbnz	w8, #1, 1df68 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1de50:	tbz	w8, #0, 1de6c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1dc>
   1de54:	ldr	x0, [sp, #32]
   1de58:	cbz	x0, 1de68 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1d8>
   1de5c:	ldr	x8, [x0]
   1de60:	ldr	x8, [x8, #8]
   1de64:	blr	x8
   1de68:	str	xzr, [sp, #32]
   1de6c:	add	x0, sp, #0x30
   1de70:	bl	0 <LLVMInitializeAArch64AsmParser>
   1de74:	mov	x0, xzr
   1de78:	b	1deac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1de7c:	ldrb	w8, [sp, #40]
   1de80:	tbnz	w8, #1, 1df68 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1de84:	tbz	w8, #0, 1dea0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x210>
   1de88:	ldr	x0, [sp, #32]
   1de8c:	cbz	x0, 1de9c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x20c>
   1de90:	ldr	x8, [x0]
   1de94:	ldr	x8, [x8, #8]
   1de98:	blr	x8
   1de9c:	str	xzr, [sp, #32]
   1dea0:	add	x0, sp, #0x30
   1dea4:	bl	0 <LLVMInitializeAArch64AsmParser>
   1dea8:	mov	w0, #0x1                   	// #1
   1deac:	ldp	x20, x19, [sp, #144]
   1deb0:	ldp	x22, x21, [sp, #128]
   1deb4:	ldr	x23, [sp, #112]
   1deb8:	ldp	x29, x30, [sp, #96]
   1debc:	add	sp, sp, #0xa0
   1dec0:	ret
   1dec4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1dec8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1decc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ded0:	add	x0, x0, #0x0
   1ded4:	add	x1, x1, #0x0
   1ded8:	add	x3, x3, #0x0
   1dedc:	mov	w2, #0x4c4                 	// #1220
   1dee0:	bl	0 <__assert_fail>
   1dee4:	orr	x8, x9, #0x1
   1dee8:	mov	x0, sp
   1deec:	str	x8, [sp]
   1def0:	str	xzr, [x29, #24]
   1def4:	bl	0 <LLVMInitializeAArch64AsmParser>
   1def8:	ldr	x8, [sp]
   1defc:	cbnz	x8, 1df70 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2e0>
   1df00:	ldr	x8, [x29, #24]
   1df04:	cbnz	x8, 1df20 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1df08:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1df0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1df10:	add	x0, x0, #0x0
   1df14:	add	x1, x1, #0x0
   1df18:	mov	w2, #0x4cb                 	// #1227
   1df1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1df20:	add	x0, x29, #0x18
   1df24:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1df28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1df2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1df30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1df34:	add	x0, x0, #0x0
   1df38:	add	x1, x1, #0x0
   1df3c:	add	x3, x3, #0x0
   1df40:	mov	w2, #0x272                 	// #626
   1df44:	bl	0 <__assert_fail>
   1df48:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1df4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1df50:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1df54:	add	x0, x0, #0x0
   1df58:	add	x1, x1, #0x0
   1df5c:	add	x3, x3, #0x0
   1df60:	mov	w2, #0x208                 	// #520
   1df64:	bl	0 <__assert_fail>
   1df68:	add	x0, sp, #0x20
   1df6c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1df70:	mov	x0, sp
   1df74:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001df78 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>:
   1df78:	sub	sp, sp, #0xa0
   1df7c:	stp	x29, x30, [sp, #96]
   1df80:	str	x23, [sp, #112]
   1df84:	stp	x22, x21, [sp, #128]
   1df88:	stp	x20, x19, [sp, #144]
   1df8c:	add	x29, sp, #0x60
   1df90:	ldr	w8, [x0, #48]
   1df94:	cmp	w8, #0xb
   1df98:	b.ne	1dffc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1df9c:	ldrb	w8, [x0, #80]
   1dfa0:	mov	x22, x0
   1dfa4:	cbz	w8, 1e190 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x218>
   1dfa8:	mov	w0, #0x3                   	// #3
   1dfac:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1dfb0:	cbz	x0, 1e1ac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x234>
   1dfb4:	mov	x23, x0
   1dfb8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1dfbc:	add	x8, sp, #0x30
   1dfc0:	mov	x21, x0
   1dfc4:	add	x19, x8, #0x8
   1dfc8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1dfcc:	mov	x20, x0
   1dfd0:	cmp	x0, x21
   1dfd4:	b.eq	1e004 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1dfd8:	mov	x0, x19
   1dfdc:	mov	x1, x21
   1dfe0:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1dfe4:	ldr	x23, [x23, #16]
   1dfe8:	cbz	x23, 1e018 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1dfec:	mov	x0, x23
   1dff0:	bl	0 <strlen>
   1dff4:	mov	x2, x0
   1dff8:	b	1e01c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1dffc:	mov	w0, #0x2                   	// #2
   1e000:	b	1e194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1e004:	mov	x0, x19
   1e008:	mov	x1, x21
   1e00c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1e010:	ldr	x23, [x23, #16]
   1e014:	cbnz	x23, 1dfec <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x74>
   1e018:	mov	x2, xzr
   1e01c:	add	x8, sp, #0x20
   1e020:	add	x0, sp, #0x30
   1e024:	mov	w3, #0x3                   	// #3
   1e028:	mov	x1, x23
   1e02c:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1e030:	ldrb	w8, [sp, #40]
   1e034:	and	w9, w8, #0xfffffffd
   1e038:	strb	w9, [sp, #40]
   1e03c:	tbnz	w8, #0, 1e048 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1e040:	mov	w9, #0x1                   	// #1
   1e044:	b	1e054 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1e048:	ldr	x9, [sp, #32]
   1e04c:	str	xzr, [sp, #32]
   1e050:	orr	x9, x9, #0x1
   1e054:	tst	x9, #0xfffffffffffffffe
   1e058:	and	x11, x9, #0xfffffffffffffffe
   1e05c:	cset	w10, ne  // ne = any
   1e060:	orr	x10, x11, x10
   1e064:	str	x10, [x29, #24]
   1e068:	cbnz	x11, 1e1cc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x254>
   1e06c:	tbnz	w8, #0, 1e210 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x298>
   1e070:	cbnz	x10, 1e208 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x290>
   1e074:	ldr	w8, [sp, #32]
   1e078:	cbnz	w8, 1e1f0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x278>
   1e07c:	ldr	w8, [x22, #48]
   1e080:	cmp	w8, #0xb
   1e084:	b.ne	1e230 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2b8>  // b.any
   1e088:	ldr	x8, [x22, #72]
   1e08c:	mov	x10, sp
   1e090:	add	x22, x10, #0x8
   1e094:	mov	w9, #0x40                  	// #64
   1e098:	cmp	x20, x21
   1e09c:	sub	x2, x29, #0x10
   1e0a0:	mov	x0, x22
   1e0a4:	mov	x1, x21
   1e0a8:	stur	w9, [x29, #-8]
   1e0ac:	stur	x8, [x29, #-16]
   1e0b0:	b.eq	1e0bc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x144>  // b.none
   1e0b4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1e0b8:	b	1e0c0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x148>
   1e0bc:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1e0c0:	ldur	w8, [x29, #-8]
   1e0c4:	cmp	w8, #0x41
   1e0c8:	b.cc	1e0d8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.lo, b.ul, b.last
   1e0cc:	ldur	x0, [x29, #-16]
   1e0d0:	cbz	x0, 1e0d8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x160>
   1e0d4:	bl	0 <_ZdaPv>
   1e0d8:	ldr	x8, [sp, #8]
   1e0dc:	ldr	x9, [sp, #56]
   1e0e0:	cmp	x8, x9
   1e0e4:	b.eq	1e0f4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x17c>  // b.none
   1e0e8:	mov	x0, sp
   1e0ec:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e0f0:	b	1e164 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1e0f4:	cmp	x20, x8
   1e0f8:	b.eq	1e10c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x194>  // b.none
   1e0fc:	mov	x0, x22
   1e100:	mov	x1, x19
   1e104:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1e108:	b	1e120 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1a8>
   1e10c:	mov	x8, sp
   1e110:	add	x9, sp, #0x30
   1e114:	add	x0, x8, #0x8
   1e118:	add	x1, x9, #0x8
   1e11c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1e120:	mov	w19, w0
   1e124:	mov	x0, sp
   1e128:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e12c:	tbz	w19, #0, 1e164 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1ec>
   1e130:	ldrb	w8, [sp, #40]
   1e134:	tbnz	w8, #1, 1e250 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1e138:	tbz	w8, #0, 1e154 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1dc>
   1e13c:	ldr	x0, [sp, #32]
   1e140:	cbz	x0, 1e150 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1d8>
   1e144:	ldr	x8, [x0]
   1e148:	ldr	x8, [x8, #8]
   1e14c:	blr	x8
   1e150:	str	xzr, [sp, #32]
   1e154:	add	x0, sp, #0x30
   1e158:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e15c:	mov	x0, xzr
   1e160:	b	1e194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1e164:	ldrb	w8, [sp, #40]
   1e168:	tbnz	w8, #1, 1e250 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2d8>
   1e16c:	tbz	w8, #0, 1e188 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x210>
   1e170:	ldr	x0, [sp, #32]
   1e174:	cbz	x0, 1e184 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x20c>
   1e178:	ldr	x8, [x0]
   1e17c:	ldr	x8, [x8, #8]
   1e180:	blr	x8
   1e184:	str	xzr, [sp, #32]
   1e188:	add	x0, sp, #0x30
   1e18c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e190:	mov	w0, #0x1                   	// #1
   1e194:	ldp	x20, x19, [sp, #144]
   1e198:	ldp	x22, x21, [sp, #128]
   1e19c:	ldr	x23, [sp, #112]
   1e1a0:	ldp	x29, x30, [sp, #96]
   1e1a4:	add	sp, sp, #0xa0
   1e1a8:	ret
   1e1ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e1b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e1b4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e1b8:	add	x0, x0, #0x0
   1e1bc:	add	x1, x1, #0x0
   1e1c0:	add	x3, x3, #0x0
   1e1c4:	mov	w2, #0x4c4                 	// #1220
   1e1c8:	bl	0 <__assert_fail>
   1e1cc:	orr	x8, x9, #0x1
   1e1d0:	mov	x0, sp
   1e1d4:	str	x8, [sp]
   1e1d8:	str	xzr, [x29, #24]
   1e1dc:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e1e0:	ldr	x8, [sp]
   1e1e4:	cbnz	x8, 1e258 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2e0>
   1e1e8:	ldr	x8, [x29, #24]
   1e1ec:	cbnz	x8, 1e208 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x290>
   1e1f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e1f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e1f8:	add	x0, x0, #0x0
   1e1fc:	add	x1, x1, #0x0
   1e200:	mov	w2, #0x4cb                 	// #1227
   1e204:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e208:	add	x0, x29, #0x18
   1e20c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1e210:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e214:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e218:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e21c:	add	x0, x0, #0x0
   1e220:	add	x1, x1, #0x0
   1e224:	add	x3, x3, #0x0
   1e228:	mov	w2, #0x272                 	// #626
   1e22c:	bl	0 <__assert_fail>
   1e230:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e234:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e238:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e23c:	add	x0, x0, #0x0
   1e240:	add	x1, x1, #0x0
   1e244:	add	x3, x3, #0x0
   1e248:	mov	w2, #0x208                 	// #520
   1e24c:	bl	0 <__assert_fail>
   1e250:	add	x0, sp, #0x20
   1e254:	bl	0 <LLVMInitializeAArch64AsmParser>
   1e258:	mov	x0, sp
   1e25c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001e260 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>:
   1e260:	stp	x29, x30, [sp, #-48]!
   1e264:	str	x21, [sp, #16]
   1e268:	stp	x20, x19, [sp, #32]
   1e26c:	mov	x29, sp
   1e270:	mov	x19, x0
   1e274:	cbz	x1, 1e2ac <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x4c>
   1e278:	ldr	w8, [x1]
   1e27c:	mov	x20, x1
   1e280:	cmp	w8, #0x1
   1e284:	b.ne	1e2d4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x74>  // b.any
   1e288:	mov	x21, x19
   1e28c:	ldr	x20, [x20, #16]
   1e290:	ldr	w8, [x21, #24]!
   1e294:	ldr	w9, [x21, #4]
   1e298:	cmp	w8, w9
   1e29c:	b.cs	1e338 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xd8>  // b.hs, b.nlast
   1e2a0:	ldr	x9, [x19, #16]
   1e2a4:	mov	w10, #0x2                   	// #2
   1e2a8:	b	1e2f0 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x90>
   1e2ac:	mov	x21, x19
   1e2b0:	ldr	w8, [x21, #24]!
   1e2b4:	ldr	w9, [x21, #4]
   1e2b8:	cmp	w8, w9
   1e2bc:	b.cs	1e31c <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xbc>  // b.hs, b.nlast
   1e2c0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1e2c4:	ldr	x9, [x19, #16]
   1e2c8:	ldr	q0, [x10]
   1e2cc:	str	q0, [x9, w8, uxtw #4]
   1e2d0:	b	1e2f8 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x98>
   1e2d4:	mov	x21, x19
   1e2d8:	ldr	w8, [x21, #24]!
   1e2dc:	ldr	w9, [x21, #4]
   1e2e0:	cmp	w8, w9
   1e2e4:	b.cs	1e354 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xf4>  // b.hs, b.nlast
   1e2e8:	ldr	x9, [x19, #16]
   1e2ec:	mov	w10, #0x4                   	// #4
   1e2f0:	add	x8, x9, w8, uxtw #4
   1e2f4:	stp	x10, x20, [x8]
   1e2f8:	ldp	w8, w9, [x19, #24]
   1e2fc:	cmp	w8, w9
   1e300:	b.cs	1e370 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x110>  // b.hs, b.nlast
   1e304:	add	w8, w8, #0x1
   1e308:	str	w8, [x21]
   1e30c:	ldp	x20, x19, [sp, #32]
   1e310:	ldr	x21, [sp, #16]
   1e314:	ldp	x29, x30, [sp], #48
   1e318:	ret
   1e31c:	sub	x0, x21, #0x8
   1e320:	add	x1, x0, #0x10
   1e324:	mov	w3, #0x10                  	// #16
   1e328:	mov	x2, xzr
   1e32c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e330:	ldr	w8, [x21]
   1e334:	b	1e2c0 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x60>
   1e338:	sub	x0, x21, #0x8
   1e33c:	add	x1, x0, #0x10
   1e340:	mov	w3, #0x10                  	// #16
   1e344:	mov	x2, xzr
   1e348:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e34c:	ldr	w8, [x21]
   1e350:	b	1e2a0 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x40>
   1e354:	sub	x0, x21, #0x8
   1e358:	add	x1, x0, #0x10
   1e35c:	mov	w3, #0x10                  	// #16
   1e360:	mov	x2, xzr
   1e364:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e368:	ldr	w8, [x21]
   1e36c:	b	1e2e8 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x88>
   1e370:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e374:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e378:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e37c:	add	x0, x0, #0x0
   1e380:	add	x1, x1, #0x0
   1e384:	add	x3, x3, #0x0
   1e388:	mov	w2, #0x43                  	// #67
   1e38c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE>:
   0:	ldr	x0, [x0, #8]
   4:	ldr	x8, [x0]
   8:	ldr	x3, [x8, #184]
   c:	br	x3

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x4
  1c:	mov	x19, x5
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
  30:	ldr	x8, [x23]
  34:	mov	x4, x0
  38:	mov	x0, x23
  3c:	mov	x1, x22
  40:	ldr	x6, [x8, #40]
  44:	mov	x2, x21
  48:	mov	x3, x20
  4c:	mov	x5, x19
  50:	ldp	x20, x19, [sp, #48]
  54:	ldp	x22, x21, [sp, #32]
  58:	ldr	x23, [sp, #16]
  5c:	ldp	x29, x30, [sp], #64
  60:	br	x6

Disassembly of section .text._ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj:

0000000000000000 <_ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser11onEndOfFileEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser11onEndOfFileEv>:
   0:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperandD2Ev:

0000000000000000 <_ZN4llvm18MCParsedAsmOperandD2Ev>:
   0:	adrp	x9, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #16]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x20
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm18MCParsedAsmOperandD2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand10getSymNameEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand10getSymNameEv>:
   0:	mov	x0, xzr
   4:	mov	x1, xzr
   8:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand9getOpDeclEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand9getOpDeclEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand13needAddressOfEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand13needAddressOfEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm7APFloatD2Ev:

0000000000000000 <_ZN4llvm7APFloatD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x0
  14:	ldr	x21, [x20, #8]!
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	3c <_ZN4llvm7APFloatD2Ev+0x3c>  // b.none
  28:	mov	x0, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  3c:	ldr	x8, [x19, #16]
  40:	cbz	x8, 70 <_ZN4llvm7APFloatD2Ev+0x70>
  44:	mov	x20, x8
  48:	ldr	x9, [x20, #-8]!
  4c:	cbz	x9, 68 <_ZN4llvm7APFloatD2Ev+0x68>
  50:	lsl	x21, x9, #5
  54:	sub	x22, x8, #0x20
  58:	add	x0, x22, x21
  5c:	bl	0 <_ZN4llvm7APFloatD2Ev>
  60:	subs	x21, x21, #0x20
  64:	b.ne	58 <_ZN4llvm7APFloatD2Ev+0x58>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZdaPv>
  70:	str	xzr, [x19, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cbz	w19, b0 <_ZNK4llvm5APInt16getMinSignedBitsEv+0xb0>
  14:	sub	w9, w19, #0x1
  18:	mov	w8, #0x1                   	// #1
  1c:	cmp	w19, #0x40
  20:	lsl	x8, x8, x9
  24:	b.hi	30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>  // b.pmore
  28:	mov	x9, x0
  2c:	b	3c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x3c>
  30:	ldr	x10, [x0]
  34:	lsr	w9, w9, #6
  38:	add	x9, x10, w9, uxtw #3
  3c:	ldr	x9, [x9]
  40:	tst	x9, x8
  44:	b.eq	74 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x74>  // b.none
  48:	cmp	w19, #0x40
  4c:	b.hi	90 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x90>  // b.pmore
  50:	ldr	x8, [x0]
  54:	neg	x9, x19
  58:	lsl	x8, x8, x9
  5c:	mvn	x9, x8
  60:	cmn	x8, #0x1
  64:	clz	x8, x9
  68:	mov	w9, #0x40                  	// #64
  6c:	csel	w0, w9, w8, eq  // eq = none
  70:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  74:	cmp	w19, #0x40
  78:	b.hi	98 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x98>  // b.pmore
  7c:	ldr	x8, [x0]
  80:	clz	x8, x8
  84:	add	w8, w19, w8
  88:	sub	w0, w8, #0x40
  8c:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  90:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  94:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  98:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  9c:	sub	w8, w19, w0
  a0:	ldr	x19, [sp, #16]
  a4:	add	w0, w8, #0x1
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b4:	adrp	x1, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b8:	adrp	x3, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x472                 	// #1138
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12consumeErrorENS_5ErrorE:

0000000000000000 <_ZN4llvm12consumeErrorENS_5ErrorE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #112]
   8:	add	x29, sp, #0x70
   c:	ldr	x8, [x0]
  10:	str	xzr, [x0]
  14:	add	x0, sp, #0x10
  18:	add	x1, sp, #0x8
  1c:	orr	x8, x8, #0x1
  20:	str	x8, [sp, #16]
  24:	add	x8, sp, #0x18
  28:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  2c:	ldr	x8, [sp, #24]
  30:	tst	x8, #0xfffffffffffffffe
  34:	and	x9, x8, #0xfffffffffffffffe
  38:	cset	w8, ne  // ne = any
  3c:	orr	x8, x9, x8
  40:	str	x8, [sp, #24]
  44:	cbnz	x9, 60 <_ZN4llvm12consumeErrorENS_5ErrorE+0x60>
  48:	cbnz	x8, d0 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd0>
  4c:	ldr	x8, [sp, #16]
  50:	cbnz	x8, d8 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd8>
  54:	ldp	x29, x30, [sp, #112]
  58:	add	sp, sp, #0x80
  5c:	ret
  60:	sturb	wzr, [x29, #-16]
  64:	stp	xzr, xzr, [sp, #48]
  68:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  6c:	ldr	x10, [x10]
  70:	sub	x8, x29, #0x20
  74:	mov	w9, #0x1                   	// #1
  78:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  7c:	add	x11, x8, #0x10
  80:	str	w9, [sp, #64]
  84:	add	x9, x10, #0x10
  88:	add	x1, x1, #0x0
  8c:	add	x0, sp, #0x20
  90:	stp	x11, xzr, [x29, #-32]
  94:	stp	x9, xzr, [sp, #32]
  98:	str	x8, [sp, #72]
  9c:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  ac:	add	x1, sp, #0x18
  b0:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  b4:	add	x0, sp, #0x20
  b8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  bc:	ldr	x0, [x0]
  c0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  c4:	add	x1, x1, #0x0
  c8:	mov	w2, #0x2c9                 	// #713
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	add	x0, sp, #0x18
  d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d8:	add	x0, sp, #0x10
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x21, [x0]
  20:	mov	x19, x8
  24:	tst	x21, #0xfffffffffffffffe
  28:	and	x20, x21, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x20, x8
  34:	str	x8, [x0]
  38:	cbz	x20, 13c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x13c>
  3c:	str	xzr, [x0]
  40:	ldr	x8, [x20]
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x20
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 144 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x144>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x23, x24, [x20, #8]
  68:	cmp	x23, x24
  6c:	b.eq	128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x21, [x21]
  78:	mov	w25, #0x1                   	// #1
  7c:	mov	w8, #0x1                   	// #1
  80:	str	x8, [sp, #8]
  84:	str	xzr, [x19]
  88:	ldr	x22, [x23]
  8c:	str	xzr, [x23]
  90:	mov	x1, x21
  94:	ldr	x8, [x22]
  98:	mov	x0, x22
  9c:	ldr	x8, [x8, #48]
  a0:	blr	x8
  a4:	tbz	w0, #0, dc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xdc>
  a8:	ldr	x8, [x22]
  ac:	mov	x0, x22
  b0:	mov	x1, x21
  b4:	ldr	x8, [x8, #48]
  b8:	blr	x8
  bc:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
  c0:	str	x25, [sp]
  c4:	cbz	x22, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  c8:	ldr	x8, [x22]
  cc:	mov	x0, x22
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  dc:	orr	x8, x22, #0x1
  e0:	str	x8, [sp]
  e4:	add	x8, x29, #0x18
  e8:	add	x0, sp, #0x8
  ec:	mov	x1, sp
  f0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f4:	ldr	x8, [x19]
  f8:	cbnz	x8, 1d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d0>
  fc:	ldr	x8, [x29, #24]
 100:	ldr	x9, [sp]
 104:	str	xzr, [x29, #24]
 108:	orr	x8, x8, #0x1
 10c:	str	x8, [x19]
 110:	cbnz	x9, 1d8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d8>
 114:	ldr	x9, [sp, #8]
 118:	cbnz	x9, 1e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e0>
 11c:	add	x23, x23, #0x8
 120:	cmp	x24, x23
 124:	b.ne	80 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x80>  // b.any
 128:	ldr	x8, [x20]
 12c:	mov	x0, x20
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	b	1b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b4>
 13c:	mov	w8, #0x1                   	// #1
 140:	b	1b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b0>
 144:	ldr	x8, [x20]
 148:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 14c:	mov	x0, x20
 150:	ldr	x8, [x8, #48]
 154:	ldr	x1, [x1]
 158:	blr	x8
 15c:	tbz	w0, #0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 160:	ldr	x8, [x20]
 164:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 168:	mov	x0, x20
 16c:	ldr	x8, [x8, #48]
 170:	ldr	x1, [x1]
 174:	blr	x8
 178:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	x8, [x19]
 184:	ldr	x8, [x20]
 188:	mov	x0, x20
 18c:	ldp	x20, x19, [sp, #80]
 190:	ldp	x22, x21, [sp, #64]
 194:	ldr	x1, [x8, #8]
 198:	ldp	x24, x23, [sp, #48]
 19c:	ldr	x25, [sp, #32]
 1a0:	ldp	x29, x30, [sp, #16]
 1a4:	add	sp, sp, #0x60
 1a8:	br	x1
 1ac:	orr	x8, x21, #0x1
 1b0:	str	x8, [x19]
 1b4:	ldp	x20, x19, [sp, #80]
 1b8:	ldp	x22, x21, [sp, #64]
 1bc:	ldp	x24, x23, [sp, #48]
 1c0:	ldr	x25, [sp, #32]
 1c4:	ldp	x29, x30, [sp, #16]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1d8:	mov	x0, sp
 1dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e0:	add	x0, sp, #0x8
 1e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e8:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1ec:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x329                 	// #809
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  34:	ldp	x9, x8, [x19, #16]
  38:	sub	x9, x9, x8
  3c:	cmp	x9, #0x6
  40:	b.hi	5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x5c>  // b.pmore
  44:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x7                   	// #7
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  5c:	mov	w9, #0x6563                	// #25955
  60:	mov	w10, #0x7573                	// #30067
  64:	movk	w9, #0x7373, lsl #16
  68:	movk	w10, #0x6363, lsl #16
  6c:	stur	w9, [x8, #3]
  70:	str	w10, [x8]
  74:	ldr	x8, [x19, #24]
  78:	add	x8, x8, #0x7
  7c:	str	x8, [x19, #24]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x21, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
  40:	ldr	x8, [x21]
  44:	mov	x20, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x21]
  5c:	cbz	x9, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
  60:	ldr	x9, [x20]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 110 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x110>
  84:	ldr	x8, [x21]
  88:	ldr	x9, [x20]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x21]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 1f8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f8>
  b8:	str	xzr, [x21]
  bc:	ldp	x21, x25, [x22, #8]
  c0:	cmp	x21, x25
  c4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x21
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x21, x21, #0x8
  e0:	cmp	x25, x21
  e4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x21]
  f8:	str	xzr, [x21]
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	b	dc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xdc>
 110:	ldr	x8, [x21]
 114:	ands	x0, x8, #0xfffffffffffffffe
 118:	b.eq	180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>  // b.none
 11c:	ldr	x8, [x0]
 120:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 124:	ldr	x8, [x8, #48]
 128:	ldr	x1, [x1]
 12c:	blr	x8
 130:	tbz	w0, #0, 180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>
 134:	ldr	x8, [x21]
 138:	add	x2, x29, #0x18
 13c:	and	x0, x8, #0xfffffffffffffffe
 140:	ldr	x1, [x0, #8]!
 144:	ldr	x8, [x20]
 148:	and	x8, x8, #0xfffffffffffffffe
 14c:	str	x8, [x29, #24]
 150:	str	xzr, [x20]
 154:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 158:	ldr	x0, [x29, #24]
 15c:	cbz	x0, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
 160:	ldr	x8, [x0]
 164:	ldr	x8, [x8, #8]
 168:	blr	x8
 16c:	ldr	x8, [x21]
 170:	orr	x8, x8, #0x1
 174:	str	x8, [x19]
 178:	str	xzr, [x21]
 17c:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 180:	mov	w0, #0x20                  	// #32
 184:	bl	0 <_Znwm>
 188:	ldr	x8, [x20]
 18c:	add	x1, sp, #0x8
 190:	mov	x2, sp
 194:	mov	x22, x0
 198:	and	x8, x8, #0xfffffffffffffffe
 19c:	str	x8, [sp, #8]
 1a0:	str	xzr, [x20]
 1a4:	ldr	x8, [x21]
 1a8:	and	x8, x8, #0xfffffffffffffffe
 1ac:	str	x8, [sp]
 1b0:	str	xzr, [x21]
 1b4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1b8:	ldr	x0, [sp]
 1bc:	orr	x8, x22, #0x1
 1c0:	str	x8, [x19]
 1c4:	cbz	x0, 1d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d4>
 1c8:	ldr	x8, [x0]
 1cc:	ldr	x8, [x8, #8]
 1d0:	blr	x8
 1d4:	ldr	x0, [sp, #8]
 1d8:	str	xzr, [sp]
 1dc:	cbz	x0, 1ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1ec>
 1e0:	ldr	x8, [x0]
 1e4:	ldr	x8, [x8, #8]
 1e8:	blr	x8
 1ec:	str	xzr, [sp, #8]
 1f0:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 1f4:	mov	x22, xzr
 1f8:	str	x22, [x29, #24]
 1fc:	str	xzr, [x21]
 200:	ldp	x1, x8, [x24, #16]
 204:	cmp	x1, x8
 208:	b.eq	234 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x234>  // b.none
 20c:	str	xzr, [x29, #24]
 210:	str	x22, [x1], #8
 214:	str	x1, [x24, #16]
 218:	ldr	x0, [x29, #24]
 21c:	cbnz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 220:	b	254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 224:	cbz	x22, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 228:	ldr	x8, [x22]
 22c:	mov	x0, x22
 230:	b	24c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x24c>
 234:	add	x0, x24, #0x8
 238:	add	x2, x29, #0x18
 23c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 240:	ldr	x0, [x29, #24]
 244:	cbz	x0, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 248:	ldr	x8, [x0]
 24c:	ldr	x8, [x8, #8]
 250:	blr	x8
 254:	ldr	x8, [x20]
 258:	orr	x8, x8, #0x1
 25c:	str	x8, [x19]
 260:	str	xzr, [x20]
 264:	ldp	x20, x19, [sp, #80]
 268:	ldp	x22, x21, [sp, #64]
 26c:	ldp	x24, x23, [sp, #48]
 270:	ldr	x25, [sp, #32]
 274:	ldp	x29, x30, [sp, #16]
 278:	add	sp, sp, #0x60
 27c:	ret

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	98 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x98>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	b	a8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa8>
  98:	mov	x0, x20
  9c:	mov	x2, x22
  a0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  a4:	ldr	x1, [x19, #16]
  a8:	ldr	x8, [x19, #24]
  ac:	cmp	x1, x8
  b0:	b.eq	dc <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xdc>  // b.none
  b4:	ldr	x8, [x21]
  b8:	str	xzr, [x21]
  bc:	str	x8, [x1]
  c0:	ldr	x8, [x19, #16]
  c4:	add	x8, x8, #0x8
  c8:	str	x8, [x19, #16]
  cc:	ldp	x20, x19, [sp, #32]
  d0:	ldp	x22, x21, [sp, #16]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	mov	x0, x20
  e0:	mov	x2, x21
  e4:	ldp	x20, x19, [sp, #32]
  e8:	ldp	x22, x21, [sp, #16]
  ec:	ldp	x29, x30, [sp], #48
  f0:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f4:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x182                 	// #386
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x8, x9, [x0]
  18:	ldr	x10, [x0, #16]
  1c:	mov	x20, x2
  20:	mov	x19, x0
  24:	sub	x11, x1, x8
  28:	cmp	x9, x10
  2c:	asr	x21, x11, #3
  30:	b.eq	cc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xcc>  // b.none
  34:	cmp	x9, x1
  38:	b.eq	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xe0>  // b.none
  3c:	ldur	x10, [x9, #-8]
  40:	add	x22, x8, x21, lsl #3
  44:	stp	xzr, x10, [x9, #-8]
  48:	ldr	x9, [x19, #8]
  4c:	sub	x8, x9, #0x8
  50:	add	x10, x9, #0x8
  54:	sub	x9, x8, x22
  58:	cmp	x9, #0x1
  5c:	str	x10, [x19, #8]
  60:	b.lt	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>  // b.tstop
  64:	lsr	x9, x9, #3
  68:	add	x23, x9, #0x1
  6c:	mov	x24, x8
  70:	b	84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x84>
  74:	sub	x23, x23, #0x1
  78:	cmp	x23, #0x1
  7c:	mov	x8, x24
  80:	b.le	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>
  84:	ldr	x9, [x24, #-8]!
  88:	str	xzr, [x24]
  8c:	ldr	x0, [x8]
  90:	str	x9, [x8]
  94:	cbz	x0, 74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  98:	ldr	x8, [x0]
  9c:	ldr	x8, [x8, #8]
  a0:	blr	x8
  a4:	b	74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  a8:	ldr	x8, [x20]
  ac:	str	xzr, [x20]
  b0:	ldr	x0, [x22]
  b4:	str	x8, [x22]
  b8:	cbz	x0, f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  bc:	ldr	x8, [x0]
  c0:	ldr	x8, [x8, #8]
  c4:	blr	x8
  c8:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  cc:	add	x1, x8, x21, lsl #3
  d0:	mov	x0, x19
  d4:	mov	x2, x20
  d8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  dc:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  e0:	ldr	x8, [x20]
  e4:	str	xzr, [x20]
  e8:	str	x8, [x9]
  ec:	ldr	x8, [x19, #8]
  f0:	add	x8, x8, #0x8
  f4:	str	x8, [x19, #8]
  f8:	ldr	x8, [x19]
  fc:	ldp	x20, x19, [sp, #48]
 100:	ldp	x24, x23, [sp, #16]
 104:	add	x0, x8, x21, lsl #3
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0]
  18:	ldr	w9, [x0, #8]
  1c:	mov	w10, #0x28                  	// #40
  20:	mov	x20, x0
  24:	mov	x21, x2
  28:	umaddl	x10, w9, w10, x8
  2c:	cmp	x10, x1
  30:	b.eq	1d0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1d0>  // b.none
  34:	mov	x19, x1
  38:	cmp	x8, x1
  3c:	b.hi	2b0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2b0>  // b.pmore
  40:	cmp	x10, x19
  44:	b.cc	2d0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2d0>  // b.lo, b.ul, b.last
  48:	ldr	w10, [x20, #12]
  4c:	cmp	w9, w10
  50:	b.cc	70 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x70>  // b.lo, b.ul, b.last
  54:	mov	x0, x20
  58:	mov	x1, xzr
  5c:	sub	x19, x19, x8
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
  64:	ldr	x8, [x20]
  68:	ldr	w9, [x20, #8]
  6c:	add	x19, x8, x19
  70:	cbz	w9, 2f0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2f0>
  74:	mov	w10, #0x28                  	// #40
  78:	madd	x10, x9, x10, x8
  7c:	ldur	x12, [x10, #-24]
  80:	ldur	q0, [x10, #-40]
  84:	ldur	w13, [x10, #-8]
  88:	mov	w11, #0x28                  	// #40
  8c:	madd	x8, x9, x11, x8
  90:	str	x12, [x10, #16]
  94:	str	q0, [x10]
  98:	str	w13, [x8, #32]
  9c:	ldur	x9, [x10, #-16]
  a0:	str	x9, [x8, #24]
  a4:	stur	wzr, [x10, #-8]
  a8:	ldr	x9, [x20]
  ac:	ldr	w8, [x20, #8]
  b0:	madd	x9, x8, x11, x9
  b4:	sub	x22, x9, #0x28
  b8:	sub	x9, x22, x19
  bc:	cmp	x9, #0x1
  c0:	b.lt	134 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x134>  // b.tstop
  c4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  c8:	movk	x8, #0xcccd
  cc:	umulh	x8, x9, x8
  d0:	lsr	x8, x8, #5
  d4:	add	x23, x8, #0x1
  d8:	b	100 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x100>
  dc:	ldur	x8, [x22, #-16]
  e0:	ldur	w9, [x22, #-8]
  e4:	sub	x23, x23, #0x1
  e8:	cmp	x23, #0x1
  ec:	str	x8, [x22, #24]
  f0:	str	w9, [x22, #32]
  f4:	stur	wzr, [x22, #-8]
  f8:	mov	x22, x24
  fc:	b.le	130 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x130>
 100:	ldr	w8, [x22, #32]
 104:	ldur	q0, [x22, #-40]
 108:	ldur	x9, [x22, #-24]
 10c:	sub	x24, x22, #0x28
 110:	cmp	w8, #0x41
 114:	str	q0, [x22]
 118:	str	x9, [x22, #16]
 11c:	b.cc	dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>  // b.lo, b.ul, b.last
 120:	ldr	x0, [x22, #24]
 124:	cbz	x0, dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>
 128:	bl	0 <_ZdaPv>
 12c:	b	dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>
 130:	ldr	w8, [x20, #8]
 134:	ldr	w9, [x20, #12]
 138:	cmp	w8, w9
 13c:	b.cs	290 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x290>  // b.hs, b.nlast
 140:	add	w8, w8, #0x1
 144:	cmp	x19, x21
 148:	str	w8, [x20, #8]
 14c:	b.hi	168 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x168>  // b.pmore
 150:	ldr	x9, [x20]
 154:	mov	w10, #0x28                  	// #40
 158:	umaddl	x8, w8, w10, x9
 15c:	add	x9, x21, #0x28
 160:	cmp	x8, x21
 164:	csel	x21, x9, x21, hi  // hi = pmore
 168:	ldr	w9, [x19, #32]
 16c:	ldr	x8, [x21, #16]
 170:	ldr	q0, [x21]
 174:	add	x0, x19, #0x18
 178:	cmp	w9, #0x40
 17c:	str	x8, [x19, #16]
 180:	str	q0, [x19]
 184:	b.hi	1c4 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1c4>  // b.pmore
 188:	ldr	w8, [x21, #32]
 18c:	cmp	w8, #0x40
 190:	b.hi	1c4 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1c4>  // b.pmore
 194:	ldr	x8, [x21, #24]
 198:	mov	x10, #0xffffffffffffffff    	// #-1
 19c:	str	x8, [x19, #24]
 1a0:	ldr	w9, [x21, #32]
 1a4:	neg	w11, w9
 1a8:	cmp	w9, #0x40
 1ac:	lsr	x10, x10, x11
 1b0:	str	w9, [x19, #32]
 1b4:	b.hi	258 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x258>  // b.pmore
 1b8:	and	x8, x10, x8
 1bc:	str	x8, [x0]
 1c0:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 1c4:	add	x1, x21, #0x18
 1c8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 1cc:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 1d0:	ldr	w10, [x20, #12]
 1d4:	cmp	w9, w10
 1d8:	b.cs	278 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x278>  // b.hs, b.nlast
 1dc:	ldr	x10, [x21, #16]
 1e0:	ldr	q0, [x21]
 1e4:	mov	w11, #0x28                  	// #40
 1e8:	madd	x8, x9, x11, x8
 1ec:	str	x10, [x8, #16]
 1f0:	str	q0, [x8]
 1f4:	ldr	w9, [x21, #32]
 1f8:	add	x0, x8, #0x18
 1fc:	add	x1, x21, #0x18
 200:	cmp	w9, #0x40
 204:	str	w9, [x8, #32]
 208:	b.hi	218 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x218>  // b.pmore
 20c:	ldr	x8, [x1]
 210:	str	x8, [x0]
 214:	b	21c <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x21c>
 218:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 21c:	ldp	w8, w9, [x20, #8]
 220:	cmp	w8, w9
 224:	b.cs	290 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x290>  // b.hs, b.nlast
 228:	ldr	x9, [x20]
 22c:	add	x8, x8, #0x1
 230:	mov	w10, #0x28                  	// #40
 234:	str	w8, [x20, #8]
 238:	madd	x8, x8, x10, x9
 23c:	sub	x19, x8, #0x28
 240:	mov	x0, x19
 244:	ldp	x20, x19, [sp, #48]
 248:	ldp	x22, x21, [sp, #32]
 24c:	ldp	x24, x23, [sp, #16]
 250:	ldp	x29, x30, [sp], #64
 254:	ret
 258:	add	x9, x9, #0x3f
 25c:	lsr	x9, x9, #6
 260:	sub	w9, w9, #0x1
 264:	lsl	x9, x9, #3
 268:	ldr	x11, [x8, x9]
 26c:	and	x10, x11, x10
 270:	str	x10, [x8, x9]
 274:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 278:	mov	x0, x20
 27c:	mov	x1, xzr
 280:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 284:	ldr	w9, [x20, #8]
 288:	ldr	x8, [x20]
 28c:	b	1dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1dc>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x1f7                 	// #503
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x1f8                 	// #504
 2ec:	bl	0 <__assert_fail>
 2f0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2f8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2fc:	add	x0, x0, #0x0
 300:	add	x1, x1, #0x0
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0xa7                  	// #167
 30c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x22, x22, lsl #2
  70:	lsl	x0, x8, #3
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w8, 14c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x14c>
  c8:	mov	w9, #0x28                  	// #40
  cc:	madd	x8, x8, x9, x21
  d0:	mov	x9, x20
  d4:	ldr	x10, [x21, #16]
  d8:	ldr	q0, [x21]
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9]
  e4:	ldr	w10, [x21, #32]
  e8:	str	w10, [x9, #32]
  ec:	ldr	x10, [x21, #24]
  f0:	str	x10, [x9, #24]
  f4:	str	wzr, [x21, #32]
  f8:	add	x21, x21, #0x28
  fc:	cmp	x21, x8
 100:	add	x9, x9, #0x28
 104:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xd4>  // b.any
 108:	ldr	w8, [x19, #8]
 10c:	ldr	x21, [x19]
 110:	cbz	w8, 14c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x14c>
 114:	add	x8, x8, x8, lsl #2
 118:	lsl	x23, x8, #3
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x128>
 120:	subs	x23, x23, #0x28
 124:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x148>  // b.none
 128:	add	x8, x21, x23
 12c:	ldur	w9, [x8, #-8]
 130:	cmp	w9, #0x41
 134:	b.cc	120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>  // b.lo, b.ul, b.last
 138:	ldur	x0, [x8, #-16]
 13c:	cbz	x0, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>
 140:	bl	0 <_ZdaPv>
 144:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>
 148:	ldr	x21, [x19]
 14c:	add	x8, x19, #0x10
 150:	cmp	x21, x8
 154:	b.eq	160 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x160>  // b.none
 158:	mov	x0, x21
 15c:	bl	0 <free>
 160:	str	x20, [x19]
 164:	str	w22, [x19, #12]
 168:	ldp	x20, x19, [sp, #48]
 16c:	ldp	x22, x21, [sp, #32]
 170:	ldr	x23, [sp, #16]
 174:	ldp	x29, x30, [sp], #64
 178:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	sub	x8, x2, x1
  1c:	asr	x22, x8, #4
  20:	lsr	x9, x22, #58
  24:	cbnz	x9, 114 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x114>
  28:	mov	x20, x2
  2c:	mov	x21, x1
  30:	mov	x19, x0
  34:	cbz	x8, 44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x44>
  38:	lsl	x0, x8, #1
  3c:	bl	0 <_Znwm>
  40:	b	48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x48>
  44:	mov	x0, xzr
  48:	add	x8, x0, x22, lsl #5
  4c:	cmp	x21, x20
  50:	str	x0, [x19]
  54:	str	x8, [x19, #16]
  58:	b.eq	f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xf8>  // b.none
  5c:	add	x24, x0, #0x8
  60:	b	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x90>
  64:	mov	x1, x22
  68:	mov	x2, x23
  6c:	bl	0 <memcpy>
  70:	ldr	x8, [sp, #8]
  74:	ldur	x9, [x24, #-8]
  78:	str	x8, [x24]
  7c:	strb	wzr, [x9, x8]
  80:	add	x21, x21, #0x10
  84:	cmp	x20, x21
  88:	add	x24, x24, #0x20
  8c:	b.eq	f4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xf4>  // b.none
  90:	ldr	x22, [x21]
  94:	cbz	x22, e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xe4>
  98:	ldr	x23, [x21, #8]
  9c:	add	x0, x24, #0x8
  a0:	stur	x0, [x24, #-8]
  a4:	cmp	x23, #0x10
  a8:	str	x23, [sp, #8]
  ac:	b.cc	cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xcc>  // b.lo, b.ul, b.last
  b0:	sub	x0, x24, #0x8
  b4:	add	x1, sp, #0x8
  b8:	mov	x2, xzr
  bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c0:	stur	x0, [x24, #-8]
  c4:	ldr	x8, [sp, #8]
  c8:	str	x8, [x24, #8]
  cc:	cbz	x23, 70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x70>
  d0:	cmp	x23, #0x1
  d4:	b.ne	64 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x64>  // b.any
  d8:	ldrb	w8, [x22]
  dc:	strb	w8, [x0]
  e0:	b	70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x70>
  e4:	mov	x8, x24
  e8:	strb	wzr, [x8, #8]!
  ec:	stp	x8, xzr, [x24, #-8]
  f0:	b	80 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x80>
  f4:	sub	x0, x24, #0x8
  f8:	str	x0, [x19, #8]
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldp	x29, x30, [sp, #16]
 10c:	add	sp, sp, #0x50
 110:	ret
 114:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cmp	x8, #0x40
  28:	mov	x21, x2
  2c:	b.lt	170 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x170>  // b.tstop
  30:	lsr	x8, x8, #6
  34:	add	x24, x8, #0x1
  38:	b	4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>
  3c:	sub	x24, x24, #0x1
  40:	cmp	x24, #0x1
  44:	add	x19, x19, #0x40
  48:	b.le	16c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x16c>
  4c:	ldp	x23, x22, [x19]
  50:	cbz	x21, 68 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x68>
  54:	mov	x0, x21
  58:	bl	0 <strlen>
  5c:	cmp	x22, x0
  60:	b.eq	74 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x74>  // b.none
  64:	b	8c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x8c>
  68:	mov	x0, xzr
  6c:	cmp	x22, x0
  70:	b.ne	8c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x8c>  // b.any
  74:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  78:	mov	x0, x23
  7c:	mov	x1, x21
  80:	mov	x2, x22
  84:	bl	0 <bcmp>
  88:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  8c:	mov	x25, x19
  90:	ldr	x23, [x25, #16]!
  94:	ldr	x22, [x25, #8]
  98:	cbz	x21, b0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>
  9c:	mov	x0, x21
  a0:	bl	0 <strlen>
  a4:	cmp	x22, x0
  a8:	b.eq	bc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xbc>  // b.none
  ac:	b	d4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd4>
  b0:	mov	x0, xzr
  b4:	cmp	x22, x0
  b8:	b.ne	d4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd4>  // b.any
  bc:	cbz	x22, 274 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x274>
  c0:	mov	x0, x23
  c4:	mov	x1, x21
  c8:	mov	x2, x22
  cc:	bl	0 <bcmp>
  d0:	cbz	w0, 164 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x164>
  d4:	mov	x25, x19
  d8:	ldr	x23, [x25, #32]!
  dc:	ldr	x22, [x25, #8]
  e0:	cbz	x21, f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf8>
  e4:	mov	x0, x21
  e8:	bl	0 <strlen>
  ec:	cmp	x22, x0
  f0:	b.eq	104 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x104>  // b.none
  f4:	b	11c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x11c>
  f8:	mov	x0, xzr
  fc:	cmp	x22, x0
 100:	b.ne	11c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x11c>  // b.any
 104:	cbz	x22, 164 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x164>
 108:	mov	x0, x23
 10c:	mov	x1, x21
 110:	mov	x2, x22
 114:	bl	0 <bcmp>
 118:	cbz	w0, 27c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x27c>
 11c:	mov	x25, x19
 120:	ldr	x23, [x25, #48]!
 124:	ldr	x22, [x25, #8]
 128:	cbz	x21, 140 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x140>
 12c:	mov	x0, x21
 130:	bl	0 <strlen>
 134:	cmp	x22, x0
 138:	b.ne	3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>  // b.any
 13c:	b	14c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x14c>
 140:	mov	x0, xzr
 144:	cmp	x22, x0
 148:	b.ne	3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>  // b.any
 14c:	cbz	x22, 284 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x284>
 150:	mov	x0, x23
 154:	mov	x1, x21
 158:	mov	x2, x22
 15c:	bl	0 <bcmp>
 160:	cbnz	w0, 3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>
 164:	mov	x19, x25
 168:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 16c:	sub	x8, x20, x19
 170:	asr	x8, x8, #4
 174:	cmp	x8, #0x1
 178:	b.eq	214 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x214>  // b.none
 17c:	cmp	x8, #0x2
 180:	b.eq	1d0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1d0>  // b.none
 184:	cmp	x8, #0x3
 188:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 18c:	ldp	x23, x22, [x19]
 190:	cbz	x21, 1a8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>
 194:	mov	x0, x21
 198:	bl	0 <strlen>
 19c:	cmp	x22, x0
 1a0:	b.eq	1b4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>  // b.none
 1a4:	b	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>
 1a8:	mov	x0, xzr
 1ac:	cmp	x22, x0
 1b0:	b.ne	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>  // b.any
 1b4:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1b8:	mov	x0, x23
 1bc:	mov	x1, x21
 1c0:	mov	x2, x22
 1c4:	bl	0 <bcmp>
 1c8:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1cc:	add	x19, x19, #0x10
 1d0:	ldp	x23, x22, [x19]
 1d4:	cbz	x21, 1ec <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1ec>
 1d8:	mov	x0, x21
 1dc:	bl	0 <strlen>
 1e0:	cmp	x22, x0
 1e4:	b.eq	1f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1f8>  // b.none
 1e8:	b	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>
 1ec:	mov	x0, xzr
 1f0:	cmp	x22, x0
 1f4:	b.ne	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>  // b.any
 1f8:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1fc:	mov	x0, x23
 200:	mov	x1, x21
 204:	mov	x2, x22
 208:	bl	0 <bcmp>
 20c:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 210:	add	x19, x19, #0x10
 214:	ldp	x23, x22, [x19]
 218:	cbz	x21, 230 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x230>
 21c:	mov	x0, x21
 220:	bl	0 <strlen>
 224:	cmp	x22, x0
 228:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 22c:	b	23c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x23c>
 230:	mov	x0, xzr
 234:	cmp	x22, x0
 238:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 23c:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 240:	mov	x0, x23
 244:	mov	x1, x21
 248:	mov	x2, x22
 24c:	bl	0 <bcmp>
 250:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 254:	mov	x19, x20
 258:	mov	x0, x19
 25c:	ldp	x20, x19, [sp, #64]
 260:	ldp	x22, x21, [sp, #48]
 264:	ldp	x24, x23, [sp, #32]
 268:	ldr	x25, [sp, #16]
 26c:	ldp	x29, x30, [sp], #80
 270:	ret
 274:	add	x19, x19, #0x10
 278:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 27c:	add	x19, x19, #0x20
 280:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 284:	add	x19, x19, #0x30
 288:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cmp	x8, #0x40
  28:	mov	x21, x2
  2c:	b.lt	170 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x170>  // b.tstop
  30:	lsr	x8, x8, #6
  34:	add	x24, x8, #0x1
  38:	b	4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>
  3c:	sub	x24, x24, #0x1
  40:	cmp	x24, #0x1
  44:	add	x19, x19, #0x40
  48:	b.le	16c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x16c>
  4c:	ldp	x23, x22, [x19]
  50:	cbz	x21, 68 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x68>
  54:	mov	x0, x21
  58:	bl	0 <strlen>
  5c:	cmp	x22, x0
  60:	b.eq	74 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x74>  // b.none
  64:	b	8c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x8c>
  68:	mov	x0, xzr
  6c:	cmp	x22, x0
  70:	b.ne	8c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x8c>  // b.any
  74:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  78:	mov	x0, x23
  7c:	mov	x1, x21
  80:	mov	x2, x22
  84:	bl	0 <bcmp>
  88:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  8c:	mov	x25, x19
  90:	ldr	x23, [x25, #16]!
  94:	ldr	x22, [x25, #8]
  98:	cbz	x21, b0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>
  9c:	mov	x0, x21
  a0:	bl	0 <strlen>
  a4:	cmp	x22, x0
  a8:	b.eq	bc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xbc>  // b.none
  ac:	b	d4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd4>
  b0:	mov	x0, xzr
  b4:	cmp	x22, x0
  b8:	b.ne	d4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xd4>  // b.any
  bc:	cbz	x22, 274 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x274>
  c0:	mov	x0, x23
  c4:	mov	x1, x21
  c8:	mov	x2, x22
  cc:	bl	0 <bcmp>
  d0:	cbz	w0, 164 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x164>
  d4:	mov	x25, x19
  d8:	ldr	x23, [x25, #32]!
  dc:	ldr	x22, [x25, #8]
  e0:	cbz	x21, f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xf8>
  e4:	mov	x0, x21
  e8:	bl	0 <strlen>
  ec:	cmp	x22, x0
  f0:	b.eq	104 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x104>  // b.none
  f4:	b	11c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x11c>
  f8:	mov	x0, xzr
  fc:	cmp	x22, x0
 100:	b.ne	11c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x11c>  // b.any
 104:	cbz	x22, 164 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x164>
 108:	mov	x0, x23
 10c:	mov	x1, x21
 110:	mov	x2, x22
 114:	bl	0 <bcmp>
 118:	cbz	w0, 27c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x27c>
 11c:	mov	x25, x19
 120:	ldr	x23, [x25, #48]!
 124:	ldr	x22, [x25, #8]
 128:	cbz	x21, 140 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x140>
 12c:	mov	x0, x21
 130:	bl	0 <strlen>
 134:	cmp	x22, x0
 138:	b.ne	3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>  // b.any
 13c:	b	14c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x14c>
 140:	mov	x0, xzr
 144:	cmp	x22, x0
 148:	b.ne	3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>  // b.any
 14c:	cbz	x22, 284 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x284>
 150:	mov	x0, x23
 154:	mov	x1, x21
 158:	mov	x2, x22
 15c:	bl	0 <bcmp>
 160:	cbnz	w0, 3c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x3c>
 164:	mov	x19, x25
 168:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 16c:	sub	x8, x20, x19
 170:	asr	x8, x8, #4
 174:	cmp	x8, #0x1
 178:	b.eq	214 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x214>  // b.none
 17c:	cmp	x8, #0x2
 180:	b.eq	1d0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1d0>  // b.none
 184:	cmp	x8, #0x3
 188:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 18c:	ldp	x23, x22, [x19]
 190:	cbz	x21, 1a8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>
 194:	mov	x0, x21
 198:	bl	0 <strlen>
 19c:	cmp	x22, x0
 1a0:	b.eq	1b4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>  // b.none
 1a4:	b	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>
 1a8:	mov	x0, xzr
 1ac:	cmp	x22, x0
 1b0:	b.ne	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>  // b.any
 1b4:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1b8:	mov	x0, x23
 1bc:	mov	x1, x21
 1c0:	mov	x2, x22
 1c4:	bl	0 <bcmp>
 1c8:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1cc:	add	x19, x19, #0x10
 1d0:	ldp	x23, x22, [x19]
 1d4:	cbz	x21, 1ec <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1ec>
 1d8:	mov	x0, x21
 1dc:	bl	0 <strlen>
 1e0:	cmp	x22, x0
 1e4:	b.eq	1f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1f8>  // b.none
 1e8:	b	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>
 1ec:	mov	x0, xzr
 1f0:	cmp	x22, x0
 1f4:	b.ne	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>  // b.any
 1f8:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1fc:	mov	x0, x23
 200:	mov	x1, x21
 204:	mov	x2, x22
 208:	bl	0 <bcmp>
 20c:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 210:	add	x19, x19, #0x10
 214:	ldp	x23, x22, [x19]
 218:	cbz	x21, 230 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x230>
 21c:	mov	x0, x21
 220:	bl	0 <strlen>
 224:	cmp	x22, x0
 228:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 22c:	b	23c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x23c>
 230:	mov	x0, xzr
 234:	cmp	x22, x0
 238:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 23c:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 240:	mov	x0, x23
 244:	mov	x1, x21
 248:	mov	x2, x22
 24c:	bl	0 <bcmp>
 250:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 254:	mov	x19, x20
 258:	mov	x0, x19
 25c:	ldp	x20, x19, [sp, #64]
 260:	ldp	x22, x21, [sp, #48]
 264:	ldp	x24, x23, [sp, #32]
 268:	ldr	x25, [sp, #16]
 26c:	ldp	x29, x30, [sp], #80
 270:	ret
 274:	add	x19, x19, #0x10
 278:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 27c:	add	x19, x19, #0x20
 280:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 284:	add	x19, x19, #0x30
 288:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x23, x8, [x0, #112]
  24:	mov	w9, #0x28                  	// #40
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	cmp	x8, #0x1
  34:	madd	x9, x8, x9, x23
  38:	str	x9, [sp, #8]
  3c:	b.lt	e4 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xe4>  // b.tstop
  40:	add	x8, x8, x8, lsl #2
  44:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  48:	movk	x9, #0xcccd
  4c:	lsl	x8, x8, #3
  50:	umulh	x8, x8, x9
  54:	mov	w25, #0x28                  	// #40
  58:	lsr	x28, x8, #5
  5c:	mov	w27, #0x1                   	// #1
  60:	b	8c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x8c>
  64:	mov	w8, #0xffffffff            	// #-1
  68:	cneg	w8, w8, cs  // cs = hs, nlast
  6c:	mvn	x10, x24
  70:	cmn	w8, #0x1
  74:	add	x8, x28, x10
  78:	add	x9, x26, #0x28
  7c:	csel	x28, x8, x24, eq  // eq = none
  80:	csel	x23, x9, x23, eq  // eq = none
  84:	cmp	x28, #0x0
  88:	b.le	e4 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xe4>
  8c:	lsr	x24, x28, #1
  90:	madd	x26, x24, x25, x23
  94:	ldr	x21, [x26]
  98:	cbz	x21, ac <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xac>
  9c:	mov	x0, x21
  a0:	bl	0 <strlen>
  a4:	mov	x22, x0
  a8:	b	b0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xb0>
  ac:	mov	x22, xzr
  b0:	cmp	x19, x22
  b4:	csel	x2, x19, x22, cc  // cc = lo, ul, last
  b8:	cbz	x2, d4 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xd4>
  bc:	mov	x0, x21
  c0:	mov	x1, x20
  c4:	bl	0 <memcmp>
  c8:	cmp	w0, #0x0
  cc:	cneg	w8, w27, lt  // lt = tstop
  d0:	cbnz	w0, 6c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x6c>
  d4:	cmp	x22, x19
  d8:	b.ne	64 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x64>  // b.any
  dc:	mov	w8, wzr
  e0:	b	6c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x6c>
  e4:	ldr	x8, [sp, #8]
  e8:	cmp	x23, x8
  ec:	b.eq	134 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x134>  // b.none
  f0:	ldr	x21, [x23]
  f4:	cbz	x21, 128 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x128>
  f8:	mov	x0, x21
  fc:	bl	0 <strlen>
 100:	cmp	x0, x19
 104:	b.ne	134 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x134>  // b.any
 108:	cbz	x19, 158 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x158>
 10c:	mov	x0, x21
 110:	mov	x1, x20
 114:	mov	x2, x19
 118:	bl	0 <bcmp>
 11c:	cmp	w0, #0x0
 120:	cset	w0, eq  // eq = none
 124:	b	138 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x138>
 128:	mov	x0, xzr
 12c:	cmp	x0, x19
 130:	b.eq	108 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x108>  // b.none
 134:	mov	w0, wzr
 138:	ldp	x20, x19, [sp, #96]
 13c:	ldp	x22, x21, [sp, #80]
 140:	ldp	x24, x23, [sp, #64]
 144:	ldp	x26, x25, [sp, #48]
 148:	ldp	x28, x27, [sp, #32]
 14c:	ldp	x29, x30, [sp, #16]
 150:	add	sp, sp, #0x70
 154:	ret
 158:	mov	w0, #0x1                   	// #1
 15c:	b	138 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x138>

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	add	x8, sp, #0x8
  18:	mov	x20, x0
  1c:	add	x19, x8, #0x10
  20:	str	x19, [sp, #8]
  24:	cbz	x1, 74 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x74>
  28:	mov	x21, x2
  2c:	mov	x22, x1
  30:	cmp	x2, #0x10
  34:	mov	x0, x19
  38:	stur	x2, [x29, #-8]
  3c:	b.cc	5c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x5c>  // b.lo, b.ul, b.last
  40:	add	x0, sp, #0x8
  44:	sub	x1, x29, #0x8
  48:	mov	x2, xzr
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	ldur	x8, [x29, #-8]
  54:	str	x0, [sp, #8]
  58:	str	x8, [sp, #24]
  5c:	cbz	x21, 8c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x8c>
  60:	cmp	x21, #0x1
  64:	b.ne	80 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x80>  // b.any
  68:	ldrb	w8, [x22]
  6c:	strb	w8, [x0]
  70:	b	8c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x8c>
  74:	str	xzr, [sp, #16]
  78:	strb	wzr, [sp, #24]
  7c:	b	c0 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xc0>
  80:	mov	x1, x22
  84:	mov	x2, x21
  88:	bl	0 <memcpy>
  8c:	ldur	x8, [x29, #-8]
  90:	ldr	x9, [sp, #8]
  94:	str	x8, [sp, #16]
  98:	strb	wzr, [x9, x8]
  9c:	ldr	x9, [sp, #8]
  a0:	cmp	x9, x19
  a4:	b.eq	c0 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xc0>  // b.none
  a8:	ldr	x8, [x20, #16]
  ac:	add	x10, x20, #0x20
  b0:	cmp	x8, x10
  b4:	b.eq	100 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x100>  // b.none
  b8:	ldr	x10, [x20, #32]
  bc:	b	104 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x104>
  c0:	ldr	x2, [sp, #16]
  c4:	cbz	x2, e8 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xe8>
  c8:	ldr	x0, [x20, #16]
  cc:	cmp	x2, #0x1
  d0:	b.ne	e0 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xe0>  // b.any
  d4:	ldrb	w8, [sp, #24]
  d8:	strb	w8, [x0]
  dc:	b	e8 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xe8>
  e0:	mov	x1, x19
  e4:	bl	0 <memcpy>
  e8:	ldr	x8, [sp, #16]
  ec:	ldr	x9, [x20, #16]
  f0:	str	x8, [x20, #24]
  f4:	strb	wzr, [x9, x8]
  f8:	ldr	x8, [sp, #8]
  fc:	b	128 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x128>
 100:	mov	x8, xzr
 104:	str	x9, [x20, #16]
 108:	ldur	q0, [sp, #16]
 10c:	stur	q0, [x20, #24]
 110:	cbz	x8, 120 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x120>
 114:	str	x8, [sp, #8]
 118:	str	x10, [sp, #24]
 11c:	b	128 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x128>
 120:	mov	x8, x19
 124:	str	x19, [sp, #8]
 128:	str	xzr, [sp, #16]
 12c:	strb	wzr, [x8]
 130:	ldr	x0, [sp, #8]
 134:	cmp	x0, x19
 138:	b.eq	140 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x140>  // b.none
 13c:	bl	0 <_ZdlPv>
 140:	ldp	x20, x19, [sp, #80]
 144:	ldp	x22, x21, [sp, #64]
 148:	ldp	x29, x30, [sp, #48]
 14c:	add	sp, sp, #0x60
 150:	ret
