
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ifconfig_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401a60 <.init>:
  401a60:	stp	x29, x30, [sp, #-16]!
  401a64:	mov	x29, sp
  401a68:	bl	4020d8 <ferror@plt+0x1e8>
  401a6c:	ldp	x29, x30, [sp], #16
  401a70:	ret

Disassembly of section .plt:

0000000000401a80 <memcpy@plt-0x20>:
  401a80:	stp	x16, x30, [sp, #-16]!
  401a84:	adrp	x16, 428000 <argp_error@@Base+0x18650>
  401a88:	ldr	x17, [x16, #4088]
  401a8c:	add	x16, x16, #0xff8
  401a90:	br	x17
  401a94:	nop
  401a98:	nop
  401a9c:	nop

0000000000401aa0 <memcpy@plt>:
  401aa0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401aa4:	ldr	x17, [x16]
  401aa8:	add	x16, x16, #0x0
  401aac:	br	x17

0000000000401ab0 <memmove@plt>:
  401ab0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #8]
  401ab8:	add	x16, x16, #0x8
  401abc:	br	x17

0000000000401ac0 <gai_strerror@plt>:
  401ac0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #16]
  401ac8:	add	x16, x16, #0x10
  401acc:	br	x17

0000000000401ad0 <freeaddrinfo@plt>:
  401ad0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #24]
  401ad8:	add	x16, x16, #0x18
  401adc:	br	x17

0000000000401ae0 <fwrite_unlocked@plt>:
  401ae0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #32]
  401ae8:	add	x16, x16, #0x20
  401aec:	br	x17

0000000000401af0 <strtoul@plt>:
  401af0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #40]
  401af8:	add	x16, x16, #0x28
  401afc:	br	x17

0000000000401b00 <strlen@plt>:
  401b00:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #48]
  401b08:	add	x16, x16, #0x30
  401b0c:	br	x17

0000000000401b10 <fputs@plt>:
  401b10:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #56]
  401b18:	add	x16, x16, #0x38
  401b1c:	br	x17

0000000000401b20 <exit@plt>:
  401b20:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #64]
  401b28:	add	x16, x16, #0x40
  401b2c:	br	x17

0000000000401b30 <error@plt>:
  401b30:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #72]
  401b38:	add	x16, x16, #0x48
  401b3c:	br	x17

0000000000401b40 <flockfile@plt>:
  401b40:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #80]
  401b48:	add	x16, x16, #0x50
  401b4c:	br	x17

0000000000401b50 <getnameinfo@plt>:
  401b50:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #88]
  401b58:	add	x16, x16, #0x58
  401b5c:	br	x17

0000000000401b60 <putc@plt>:
  401b60:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #96]
  401b68:	add	x16, x16, #0x60
  401b6c:	br	x17

0000000000401b70 <fputc@plt>:
  401b70:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #104]
  401b78:	add	x16, x16, #0x68
  401b7c:	br	x17

0000000000401b80 <qsort@plt>:
  401b80:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #112]
  401b88:	add	x16, x16, #0x70
  401b8c:	br	x17

0000000000401b90 <inet_ntoa@plt>:
  401b90:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #120]
  401b98:	add	x16, x16, #0x78
  401b9c:	br	x17

0000000000401ba0 <__ctype_tolower_loc@plt>:
  401ba0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #128]
  401ba8:	add	x16, x16, #0x80
  401bac:	br	x17

0000000000401bb0 <fileno@plt>:
  401bb0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #136]
  401bb8:	add	x16, x16, #0x88
  401bbc:	br	x17

0000000000401bc0 <fclose@plt>:
  401bc0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #144]
  401bc8:	add	x16, x16, #0x90
  401bcc:	br	x17

0000000000401bd0 <fopen@plt>:
  401bd0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #152]
  401bd8:	add	x16, x16, #0x98
  401bdc:	br	x17

0000000000401be0 <malloc@plt>:
  401be0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #160]
  401be8:	add	x16, x16, #0xa0
  401bec:	br	x17

0000000000401bf0 <funlockfile@plt>:
  401bf0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #168]
  401bf8:	add	x16, x16, #0xa8
  401bfc:	br	x17

0000000000401c00 <strncmp@plt>:
  401c00:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #176]
  401c08:	add	x16, x16, #0xb0
  401c0c:	br	x17

0000000000401c10 <__libc_start_main@plt>:
  401c10:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #184]
  401c18:	add	x16, x16, #0xb8
  401c1c:	br	x17

0000000000401c20 <memset@plt>:
  401c20:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #192]
  401c28:	add	x16, x16, #0xc0
  401c2c:	br	x17

0000000000401c30 <sleep@plt>:
  401c30:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #200]
  401c38:	add	x16, x16, #0xc8
  401c3c:	br	x17

0000000000401c40 <strerror_r@plt>:
  401c40:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #208]
  401c48:	add	x16, x16, #0xd0
  401c4c:	br	x17

0000000000401c50 <calloc@plt>:
  401c50:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #216]
  401c58:	add	x16, x16, #0xd8
  401c5c:	br	x17

0000000000401c60 <strcasecmp@plt>:
  401c60:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #224]
  401c68:	add	x16, x16, #0xe0
  401c6c:	br	x17

0000000000401c70 <realloc@plt>:
  401c70:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #232]
  401c78:	add	x16, x16, #0xe8
  401c7c:	br	x17

0000000000401c80 <strdup@plt>:
  401c80:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #240]
  401c88:	add	x16, x16, #0xf0
  401c8c:	br	x17

0000000000401c90 <strerror@plt>:
  401c90:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #248]
  401c98:	add	x16, x16, #0xf8
  401c9c:	br	x17

0000000000401ca0 <close@plt>:
  401ca0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #256]
  401ca8:	add	x16, x16, #0x100
  401cac:	br	x17

0000000000401cb0 <strrchr@plt>:
  401cb0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #264]
  401cb8:	add	x16, x16, #0x108
  401cbc:	br	x17

0000000000401cc0 <__gmon_start__@plt>:
  401cc0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #272]
  401cc8:	add	x16, x16, #0x110
  401ccc:	br	x17

0000000000401cd0 <abort@plt>:
  401cd0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #280]
  401cd8:	add	x16, x16, #0x118
  401cdc:	br	x17

0000000000401ce0 <__overflow@plt>:
  401ce0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #288]
  401ce8:	add	x16, x16, #0x120
  401cec:	br	x17

0000000000401cf0 <strcmp@plt>:
  401cf0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #296]
  401cf8:	add	x16, x16, #0x128
  401cfc:	br	x17

0000000000401d00 <__ctype_b_loc@plt>:
  401d00:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #304]
  401d08:	add	x16, x16, #0x130
  401d0c:	br	x17

0000000000401d10 <strtol@plt>:
  401d10:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d14:	ldr	x17, [x16, #312]
  401d18:	add	x16, x16, #0x138
  401d1c:	br	x17

0000000000401d20 <fread@plt>:
  401d20:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d24:	ldr	x17, [x16, #320]
  401d28:	add	x16, x16, #0x140
  401d2c:	br	x17

0000000000401d30 <free@plt>:
  401d30:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d34:	ldr	x17, [x16, #328]
  401d38:	add	x16, x16, #0x148
  401d3c:	br	x17

0000000000401d40 <mempcpy@plt>:
  401d40:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d44:	ldr	x17, [x16, #336]
  401d48:	add	x16, x16, #0x150
  401d4c:	br	x17

0000000000401d50 <strncasecmp@plt>:
  401d50:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d54:	ldr	x17, [x16, #344]
  401d58:	add	x16, x16, #0x158
  401d5c:	br	x17

0000000000401d60 <strndup@plt>:
  401d60:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d64:	ldr	x17, [x16, #352]
  401d68:	add	x16, x16, #0x160
  401d6c:	br	x17

0000000000401d70 <strchr@plt>:
  401d70:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d74:	ldr	x17, [x16, #360]
  401d78:	add	x16, x16, #0x168
  401d7c:	br	x17

0000000000401d80 <fwrite@plt>:
  401d80:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d84:	ldr	x17, [x16, #368]
  401d88:	add	x16, x16, #0x170
  401d8c:	br	x17

0000000000401d90 <socket@plt>:
  401d90:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401d94:	ldr	x17, [x16, #376]
  401d98:	add	x16, x16, #0x178
  401d9c:	br	x17

0000000000401da0 <ftello@plt>:
  401da0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401da4:	ldr	x17, [x16, #384]
  401da8:	add	x16, x16, #0x180
  401dac:	br	x17

0000000000401db0 <strcpy@plt>:
  401db0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401db4:	ldr	x17, [x16, #392]
  401db8:	add	x16, x16, #0x188
  401dbc:	br	x17

0000000000401dc0 <getaddrinfo@plt>:
  401dc0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401dc4:	ldr	x17, [x16, #400]
  401dc8:	add	x16, x16, #0x190
  401dcc:	br	x17

0000000000401dd0 <memchr@plt>:
  401dd0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401dd4:	ldr	x17, [x16, #408]
  401dd8:	add	x16, x16, #0x198
  401ddc:	br	x17

0000000000401de0 <inet_aton@plt>:
  401de0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401de4:	ldr	x17, [x16, #416]
  401de8:	add	x16, x16, #0x1a0
  401dec:	br	x17

0000000000401df0 <__fxstat@plt>:
  401df0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401df4:	ldr	x17, [x16, #424]
  401df8:	add	x16, x16, #0x1a8
  401dfc:	br	x17

0000000000401e00 <if_nametoindex@plt>:
  401e00:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e04:	ldr	x17, [x16, #432]
  401e08:	add	x16, x16, #0x1b0
  401e0c:	br	x17

0000000000401e10 <strchrnul@plt>:
  401e10:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e14:	ldr	x17, [x16, #440]
  401e18:	add	x16, x16, #0x1b8
  401e1c:	br	x17

0000000000401e20 <strstr@plt>:
  401e20:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e24:	ldr	x17, [x16, #448]
  401e28:	add	x16, x16, #0x1c0
  401e2c:	br	x17

0000000000401e30 <__isoc99_sscanf@plt>:
  401e30:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e34:	ldr	x17, [x16, #456]
  401e38:	add	x16, x16, #0x1c8
  401e3c:	br	x17

0000000000401e40 <vsnprintf@plt>:
  401e40:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e44:	ldr	x17, [x16, #464]
  401e48:	add	x16, x16, #0x1d0
  401e4c:	br	x17

0000000000401e50 <fputs_unlocked@plt>:
  401e50:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e54:	ldr	x17, [x16, #472]
  401e58:	add	x16, x16, #0x1d8
  401e5c:	br	x17

0000000000401e60 <strncpy@plt>:
  401e60:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e64:	ldr	x17, [x16, #480]
  401e68:	add	x16, x16, #0x1e0
  401e6c:	br	x17

0000000000401e70 <vfprintf@plt>:
  401e70:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e74:	ldr	x17, [x16, #488]
  401e78:	add	x16, x16, #0x1e8
  401e7c:	br	x17

0000000000401e80 <printf@plt>:
  401e80:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e84:	ldr	x17, [x16, #496]
  401e88:	add	x16, x16, #0x1f0
  401e8c:	br	x17

0000000000401e90 <__assert_fail@plt>:
  401e90:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401e94:	ldr	x17, [x16, #504]
  401e98:	add	x16, x16, #0x1f8
  401e9c:	br	x17

0000000000401ea0 <__errno_location@plt>:
  401ea0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ea4:	ldr	x17, [x16, #512]
  401ea8:	add	x16, x16, #0x200
  401eac:	br	x17

0000000000401eb0 <getenv@plt>:
  401eb0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401eb4:	ldr	x17, [x16, #520]
  401eb8:	add	x16, x16, #0x208
  401ebc:	br	x17

0000000000401ec0 <__getdelim@plt>:
  401ec0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ec4:	ldr	x17, [x16, #528]
  401ec8:	add	x16, x16, #0x210
  401ecc:	br	x17

0000000000401ed0 <fprintf@plt>:
  401ed0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ed4:	ldr	x17, [x16, #536]
  401ed8:	add	x16, x16, #0x218
  401edc:	br	x17

0000000000401ee0 <ioctl@plt>:
  401ee0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ee4:	ldr	x17, [x16, #544]
  401ee8:	add	x16, x16, #0x220
  401eec:	br	x17

0000000000401ef0 <ferror@plt>:
  401ef0:	adrp	x16, 429000 <memcpy@GLIBC_2.17>
  401ef4:	ldr	x17, [x16, #552]
  401ef8:	add	x16, x16, #0x228
  401efc:	br	x17

Disassembly of section .text:

0000000000401f00 <argp_parse@@Base-0x8290>:
  401f00:	stp	x29, x30, [sp, #-96]!
  401f04:	mov	x29, sp
  401f08:	stp	x19, x20, [sp, #16]
  401f0c:	mov	w20, w0
  401f10:	mov	x19, x1
  401f14:	ldr	x0, [x1]
  401f18:	bl	40af38 <argp_parse@@Base+0xda8>
  401f1c:	mov	x1, x19
  401f20:	mov	w0, w20
  401f24:	bl	404008 <ferror@plt+0x2118>
  401f28:	mov	w2, #0x0                   	// #0
  401f2c:	mov	w1, #0x1                   	// #1
  401f30:	mov	w0, #0x2                   	// #2
  401f34:	bl	401d90 <socket@plt>
  401f38:	stp	x21, x22, [sp, #32]
  401f3c:	stp	x23, x24, [sp, #48]
  401f40:	tbnz	w0, #31, 40205c <ferror@plt+0x16c>
  401f44:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  401f48:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  401f4c:	mov	w23, w0
  401f50:	mov	w1, #0x58                  	// #88
  401f54:	ldr	x19, [x21, #1536]
  401f58:	stp	x27, x28, [sp, #80]
  401f5c:	ldr	w0, [x20, #1552]
  401f60:	smaddl	x0, w0, w1, x19
  401f64:	cmp	x19, x0
  401f68:	b.cs	402054 <ferror@plt+0x164>  // b.hs, b.nlast
  401f6c:	adrp	x24, 411000 <argp_error@@Base+0x1650>
  401f70:	add	x20, x20, #0x610
  401f74:	add	x24, x24, #0xf68
  401f78:	mov	w27, #0x0                   	// #0
  401f7c:	stp	x25, x26, [sp, #64]
  401f80:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  401f84:	adrp	x26, 42a000 <argp_error@@Base+0x1a650>
  401f88:	add	x22, x25, #0x62c
  401f8c:	b	401fd0 <ferror@plt+0xe0>
  401f90:	ldr	x0, [x19]
  401f94:	bl	401e00 <if_nametoindex@plt>
  401f98:	cbz	w0, 401fb4 <ferror@plt+0xc4>
  401f9c:	add	w28, w27, #0x1
  401fa0:	cbnz	w27, 40201c <ferror@plt+0x12c>
  401fa4:	ldr	x1, [x19]
  401fa8:	mov	w27, w28
  401fac:	mov	x0, x24
  401fb0:	bl	401e80 <printf@plt>
  401fb4:	ldr	x0, [x21, #1536]
  401fb8:	mov	w2, #0x58                  	// #88
  401fbc:	ldr	w1, [x20]
  401fc0:	add	x19, x19, #0x58
  401fc4:	smaddl	x1, w1, w2, x0
  401fc8:	cmp	x19, x1
  401fcc:	b.cs	40202c <ferror@plt+0x13c>  // b.hs, b.nlast
  401fd0:	ldr	w0, [x22]
  401fd4:	cbnz	w0, 401f90 <ferror@plt+0xa0>
  401fd8:	mov	x1, x19
  401fdc:	mov	w0, w23
  401fe0:	bl	402e20 <ferror@plt+0xf30>
  401fe4:	mov	w27, w0
  401fe8:	cbz	w0, 401fb4 <ferror@plt+0xc4>
  401fec:	ldr	w0, [x22]
  401ff0:	cbnz	w0, 40203c <ferror@plt+0x14c>
  401ff4:	ldp	x25, x26, [sp, #64]
  401ff8:	mov	w0, w23
  401ffc:	bl	401ca0 <close@plt>
  402000:	mov	w0, w27
  402004:	ldp	x19, x20, [sp, #16]
  402008:	ldp	x21, x22, [sp, #32]
  40200c:	ldp	x23, x24, [sp, #48]
  402010:	ldp	x27, x28, [sp, #80]
  402014:	ldp	x29, x30, [sp], #96
  402018:	ret
  40201c:	ldr	x1, [x26, #1256]
  402020:	mov	w0, #0x20                  	// #32
  402024:	bl	401b60 <putc@plt>
  402028:	b	401fa4 <ferror@plt+0xb4>
  40202c:	ldr	w0, [x25, #1580]
  402030:	cmp	w0, #0x0
  402034:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  402038:	b.eq	401ff4 <ferror@plt+0x104>  // b.none
  40203c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  402040:	mov	w0, #0xa                   	// #10
  402044:	ldr	x1, [x1, #1256]
  402048:	bl	401b60 <putc@plt>
  40204c:	ldp	x25, x26, [sp, #64]
  402050:	b	401ff8 <ferror@plt+0x108>
  402054:	mov	w27, #0x0                   	// #0
  402058:	b	401ff8 <ferror@plt+0x108>
  40205c:	stp	x25, x26, [sp, #64]
  402060:	stp	x27, x28, [sp, #80]
  402064:	bl	401ea0 <__errno_location@plt>
  402068:	mov	x1, x0
  40206c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402070:	add	x2, x2, #0xa18
  402074:	mov	w0, #0x0                   	// #0
  402078:	ldr	w1, [x1]
  40207c:	bl	401b30 <error@plt>
  402080:	mov	w0, #0x1                   	// #1
  402084:	bl	401b20 <exit@plt>
  402088:	mov	x29, #0x0                   	// #0
  40208c:	mov	x30, #0x0                   	// #0
  402090:	mov	x5, x0
  402094:	ldr	x1, [sp]
  402098:	add	x2, sp, #0x8
  40209c:	mov	x6, sp
  4020a0:	movz	x0, #0x0, lsl #48
  4020a4:	movk	x0, #0x0, lsl #32
  4020a8:	movk	x0, #0x40, lsl #16
  4020ac:	movk	x0, #0x1f00
  4020b0:	movz	x3, #0x0, lsl #48
  4020b4:	movk	x3, #0x0, lsl #32
  4020b8:	movk	x3, #0x41, lsl #16
  4020bc:	movk	x3, #0x1960
  4020c0:	movz	x4, #0x0, lsl #48
  4020c4:	movk	x4, #0x0, lsl #32
  4020c8:	movk	x4, #0x41, lsl #16
  4020cc:	movk	x4, #0x19e0
  4020d0:	bl	401c10 <__libc_start_main@plt>
  4020d4:	bl	401cd0 <abort@plt>
  4020d8:	adrp	x0, 428000 <argp_error@@Base+0x18650>
  4020dc:	ldr	x0, [x0, #4064]
  4020e0:	cbz	x0, 4020e8 <ferror@plt+0x1f8>
  4020e4:	b	401cc0 <__gmon_start__@plt>
  4020e8:	ret
  4020ec:	nop
  4020f0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4020f4:	add	x0, x0, #0x4d8
  4020f8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  4020fc:	add	x1, x1, #0x4d8
  402100:	cmp	x1, x0
  402104:	b.eq	40211c <ferror@plt+0x22c>  // b.none
  402108:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  40210c:	ldr	x1, [x1, #2568]
  402110:	cbz	x1, 40211c <ferror@plt+0x22c>
  402114:	mov	x16, x1
  402118:	br	x16
  40211c:	ret
  402120:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402124:	add	x0, x0, #0x4d8
  402128:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40212c:	add	x1, x1, #0x4d8
  402130:	sub	x1, x1, x0
  402134:	lsr	x2, x1, #63
  402138:	add	x1, x2, x1, asr #3
  40213c:	cmp	xzr, x1, asr #1
  402140:	asr	x1, x1, #1
  402144:	b.eq	40215c <ferror@plt+0x26c>  // b.none
  402148:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40214c:	ldr	x2, [x2, #2576]
  402150:	cbz	x2, 40215c <ferror@plt+0x26c>
  402154:	mov	x16, x2
  402158:	br	x16
  40215c:	ret
  402160:	stp	x29, x30, [sp, #-32]!
  402164:	mov	x29, sp
  402168:	str	x19, [sp, #16]
  40216c:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  402170:	ldrb	w0, [x19, #1272]
  402174:	cbnz	w0, 402184 <ferror@plt+0x294>
  402178:	bl	4020f0 <ferror@plt+0x200>
  40217c:	mov	w0, #0x1                   	// #1
  402180:	strb	w0, [x19, #1272]
  402184:	ldr	x19, [sp, #16]
  402188:	ldp	x29, x30, [sp], #32
  40218c:	ret
  402190:	b	402120 <ferror@plt+0x230>
  402194:	nop
  402198:	ldr	x0, [x0]
  40219c:	ldr	x1, [x1]
  4021a0:	b	401cf0 <strcmp@plt>
  4021a4:	nop
  4021a8:	stp	x29, x30, [sp, #-96]!
  4021ac:	mov	x29, sp
  4021b0:	stp	x19, x20, [sp, #16]
  4021b4:	adrp	x20, 429000 <argp_error@@Base+0x19650>
  4021b8:	stp	x25, x26, [sp, #64]
  4021bc:	mov	x26, x0
  4021c0:	ldr	x0, [x20, #576]
  4021c4:	stp	x21, x22, [sp, #32]
  4021c8:	stp	x23, x24, [sp, #48]
  4021cc:	add	x23, x20, #0x240
  4021d0:	cbz	x0, 4023d8 <ferror@plt+0x4e8>
  4021d4:	mov	x19, x23
  4021d8:	mov	x24, #0x0                   	// #0
  4021dc:	nop
  4021e0:	ldr	w1, [x19, #12]
  4021e4:	cbnz	w1, 4021f4 <ferror@plt+0x304>
  4021e8:	add	x24, x24, #0x1
  4021ec:	bl	401b00 <strlen@plt>
  4021f0:	add	x24, x0, x24
  4021f4:	ldr	x0, [x19, #16]!
  4021f8:	cbnz	x0, 4021e0 <ferror@plt+0x2f0>
  4021fc:	add	x0, x24, #0xa0
  402200:	bl	40bea0 <argp_parse@@Base+0x1d10>
  402204:	ldr	x20, [x20, #576]
  402208:	mov	x22, x0
  40220c:	add	x21, x0, #0xa0
  402210:	cbz	x20, 4023f4 <ferror@plt+0x504>
  402214:	mov	x25, #0x0                   	// #0
  402218:	str	x27, [sp, #80]
  40221c:	mov	w27, #0x48                  	// #72
  402220:	b	40222c <ferror@plt+0x33c>
  402224:	ldr	x20, [x23, #16]!
  402228:	cbz	x20, 402298 <ferror@plt+0x3a8>
  40222c:	ldr	w0, [x23, #12]
  402230:	cbnz	w0, 402224 <ferror@plt+0x334>
  402234:	ldr	w0, [x23, #8]
  402238:	tst	w0, w27
  40223c:	b.ne	402224 <ferror@plt+0x334>  // b.any
  402240:	str	x21, [x22, x25, lsl #3]
  402244:	add	x25, x25, #0x1
  402248:	ldrb	w0, [x20]
  40224c:	cmp	w0, #0x4e
  402250:	b.ne	402264 <ferror@plt+0x374>  // b.any
  402254:	ldrb	w1, [x20, #1]
  402258:	add	x0, x20, #0x2
  40225c:	cmp	w1, #0x4f
  402260:	csel	x20, x0, x20, eq  // eq = none
  402264:	ldrb	w19, [x20]
  402268:	cbz	w19, 4023c8 <ferror@plt+0x4d8>
  40226c:	bl	401ba0 <__ctype_tolower_loc@plt>
  402270:	ldr	x1, [x0]
  402274:	mov	x2, x21
  402278:	ldr	w0, [x1, x19, lsl #2]
  40227c:	strb	w0, [x2], #1
  402280:	ldrb	w19, [x20, #1]!
  402284:	cbnz	w19, 402278 <ferror@plt+0x388>
  402288:	mov	x21, x2
  40228c:	strb	wzr, [x21], #1
  402290:	ldr	x20, [x23, #16]!
  402294:	cbnz	x20, 40222c <ferror@plt+0x33c>
  402298:	ldr	x27, [sp, #80]
  40229c:	add	x24, x24, x25, lsl #1
  4022a0:	adrp	x3, 402000 <ferror@plt+0x110>
  4022a4:	add	x24, x24, #0x24
  4022a8:	add	x3, x3, #0x198
  4022ac:	mov	x1, x25
  4022b0:	mov	x0, x22
  4022b4:	mov	x2, #0x8                   	// #8
  4022b8:	bl	401b80 <qsort@plt>
  4022bc:	cbz	x26, 4023b4 <ferror@plt+0x4c4>
  4022c0:	mov	x0, x26
  4022c4:	bl	401b00 <strlen@plt>
  4022c8:	add	x0, x0, x24
  4022cc:	bl	40bea0 <argp_parse@@Base+0x1d10>
  4022d0:	mov	x1, x26
  4022d4:	mov	x23, x0
  4022d8:	bl	401db0 <strcpy@plt>
  4022dc:	mov	x0, x26
  4022e0:	bl	401b00 <strlen@plt>
  4022e4:	add	x20, x23, x0
  4022e8:	cbz	x25, 402370 <ferror@plt+0x480>
  4022ec:	sub	x24, x22, #0x8
  4022f0:	mov	x19, #0x0                   	// #0
  4022f4:	mov	w26, #0x202c                	// #8236
  4022f8:	cbz	x19, 40235c <ferror@plt+0x46c>
  4022fc:	ldr	x21, [x24, x19, lsl #3]
  402300:	mov	x0, x21
  402304:	bl	401b00 <strlen@plt>
  402308:	mov	x2, x0
  40230c:	mov	x0, x21
  402310:	ldr	x21, [x22, x19, lsl #3]
  402314:	mov	x1, x21
  402318:	bl	401c00 <strncmp@plt>
  40231c:	add	x2, x19, #0x1
  402320:	cbz	w0, 402364 <ferror@plt+0x474>
  402324:	mov	x1, x21
  402328:	mov	x0, x20
  40232c:	bl	401db0 <strcpy@plt>
  402330:	mov	x0, x21
  402334:	bl	401b00 <strlen@plt>
  402338:	add	x20, x20, x0
  40233c:	add	x2, x19, #0x1
  402340:	mov	x0, x20
  402344:	cmp	x25, x2
  402348:	b.ls	402364 <ferror@plt+0x474>  // b.plast
  40234c:	strh	w26, [x0], #2
  402350:	mov	x19, x2
  402354:	mov	x20, x0
  402358:	cbnz	x19, 4022fc <ferror@plt+0x40c>
  40235c:	ldr	x21, [x22]
  402360:	b	402324 <ferror@plt+0x434>
  402364:	mov	x19, x2
  402368:	cmp	x25, x2
  40236c:	b.ne	4022f8 <ferror@plt+0x408>  // b.any
  402370:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  402374:	add	x1, x1, #0xa28
  402378:	mov	x0, x22
  40237c:	ldp	x2, x3, [x1]
  402380:	stp	x2, x3, [x20]
  402384:	ldr	w2, [x1, #32]
  402388:	ldp	x4, x5, [x1, #16]
  40238c:	stp	x4, x5, [x20, #16]
  402390:	str	w2, [x20, #32]
  402394:	bl	401d30 <free@plt>
  402398:	mov	x0, x23
  40239c:	ldp	x19, x20, [sp, #16]
  4023a0:	ldp	x21, x22, [sp, #32]
  4023a4:	ldp	x23, x24, [sp, #48]
  4023a8:	ldp	x25, x26, [sp, #64]
  4023ac:	ldp	x29, x30, [sp], #96
  4023b0:	ret
  4023b4:	mov	x0, x24
  4023b8:	bl	40bea0 <argp_parse@@Base+0x1d10>
  4023bc:	mov	x20, x0
  4023c0:	mov	x23, x0
  4023c4:	b	4022e8 <ferror@plt+0x3f8>
  4023c8:	mov	x2, x21
  4023cc:	mov	x21, x2
  4023d0:	strb	wzr, [x21], #1
  4023d4:	b	402290 <ferror@plt+0x3a0>
  4023d8:	mov	x0, #0xa0                  	// #160
  4023dc:	bl	40bea0 <argp_parse@@Base+0x1d10>
  4023e0:	ldr	x20, [x20, #576]
  4023e4:	mov	x22, x0
  4023e8:	add	x21, x0, #0xa0
  4023ec:	mov	x24, #0x0                   	// #0
  4023f0:	cbnz	x20, 402214 <ferror@plt+0x324>
  4023f4:	mov	x25, #0x0                   	// #0
  4023f8:	b	4022a0 <ferror@plt+0x3b0>
  4023fc:	nop
  402400:	stp	x29, x30, [sp, #-64]!
  402404:	mov	x29, sp
  402408:	stp	x19, x20, [sp, #16]
  40240c:	adrp	x19, 429000 <argp_error@@Base+0x19650>
  402410:	ldr	x20, [x19, #576]
  402414:	cbz	x20, 40249c <ferror@plt+0x5ac>
  402418:	add	x19, x19, #0x240
  40241c:	stp	x21, x22, [sp, #32]
  402420:	mov	x22, x1
  402424:	b	402430 <ferror@plt+0x540>
  402428:	ldr	x20, [x19, #16]!
  40242c:	cbz	x20, 4024ac <ferror@plt+0x5bc>
  402430:	ldr	w2, [x19, #8]
  402434:	cmp	w2, w0
  402438:	b.ne	402428 <ferror@plt+0x538>  // b.any
  40243c:	ldr	w2, [x19, #12]
  402440:	cbnz	w2, 402428 <ferror@plt+0x538>
  402444:	cbz	x22, 4024ac <ferror@plt+0x5bc>
  402448:	str	x23, [sp, #48]
  40244c:	b	402474 <ferror@plt+0x584>
  402450:	ldurb	w1, [x21, #-1]
  402454:	cmp	w1, #0x3a
  402458:	b.ne	402490 <ferror@plt+0x5a0>  // b.any
  40245c:	bl	401b00 <strlen@plt>
  402460:	ldrb	w0, [x21, x0]
  402464:	cmp	w0, #0x3a
  402468:	b.ne	402490 <ferror@plt+0x5a0>  // b.any
  40246c:	ldr	x0, [x19, #16]!
  402470:	cbz	x0, 402494 <ferror@plt+0x5a4>
  402474:	ldr	x23, [x19]
  402478:	mov	x0, x22
  40247c:	mov	x1, x23
  402480:	bl	401e20 <strstr@plt>
  402484:	mov	x21, x0
  402488:	mov	x0, x23
  40248c:	cbnz	x21, 402450 <ferror@plt+0x560>
  402490:	mov	x20, x23
  402494:	ldp	x21, x22, [sp, #32]
  402498:	ldr	x23, [sp, #48]
  40249c:	mov	x0, x20
  4024a0:	ldp	x19, x20, [sp, #16]
  4024a4:	ldp	x29, x30, [sp], #64
  4024a8:	ret
  4024ac:	mov	x0, x20
  4024b0:	ldp	x19, x20, [sp, #16]
  4024b4:	ldp	x21, x22, [sp, #32]
  4024b8:	ldp	x29, x30, [sp], #64
  4024bc:	ret
  4024c0:	stp	x29, x30, [sp, #-64]!
  4024c4:	cmp	x1, #0x1
  4024c8:	mov	x29, sp
  4024cc:	stp	x19, x20, [sp, #16]
  4024d0:	mov	x20, x1
  4024d4:	stp	x21, x22, [sp, #32]
  4024d8:	mov	x22, x2
  4024dc:	mov	x21, x0
  4024e0:	str	x23, [sp, #48]
  4024e4:	mov	w23, #0x0                   	// #0
  4024e8:	b.ls	402518 <ferror@plt+0x628>  // b.plast
  4024ec:	ldrb	w1, [x0]
  4024f0:	cmp	w1, #0x2d
  4024f4:	b.eq	402568 <ferror@plt+0x678>  // b.none
  4024f8:	cmp	x20, #0x2
  4024fc:	b.eq	402518 <ferror@plt+0x628>  // b.none
  402500:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  402504:	mov	x2, #0x2                   	// #2
  402508:	add	x1, x1, #0xa50
  40250c:	bl	401d50 <strncasecmp@plt>
  402510:	cbz	w0, 402578 <ferror@plt+0x688>
  402514:	nop
  402518:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  40251c:	add	x19, x0, #0x240
  402520:	ldr	x0, [x0, #576]
  402524:	cbnz	x0, 402534 <ferror@plt+0x644>
  402528:	b	402588 <ferror@plt+0x698>
  40252c:	ldr	x0, [x19, #16]!
  402530:	cbz	x0, 402554 <ferror@plt+0x664>
  402534:	mov	x2, x20
  402538:	mov	x1, x21
  40253c:	bl	401d50 <strncasecmp@plt>
  402540:	cbnz	w0, 40252c <ferror@plt+0x63c>
  402544:	ldr	w0, [x19, #12]
  402548:	eor	w0, w0, w23
  40254c:	str	w0, [x22]
  402550:	ldr	w0, [x19, #8]
  402554:	ldp	x19, x20, [sp, #16]
  402558:	ldp	x21, x22, [sp, #32]
  40255c:	ldr	x23, [sp, #48]
  402560:	ldp	x29, x30, [sp], #64
  402564:	ret
  402568:	add	x21, x0, #0x1
  40256c:	sub	x20, x20, #0x1
  402570:	mov	w23, #0x1                   	// #1
  402574:	b	402518 <ferror@plt+0x628>
  402578:	add	x21, x21, #0x2
  40257c:	sub	x20, x20, #0x2
  402580:	mov	w23, #0x1                   	// #1
  402584:	b	402518 <ferror@plt+0x628>
  402588:	mov	w0, #0x0                   	// #0
  40258c:	b	402554 <ferror@plt+0x664>
  402590:	stp	x29, x30, [sp, #-64]!
  402594:	mov	x29, sp
  402598:	stp	x19, x20, [sp, #16]
  40259c:	stp	x21, x22, [sp, #32]
  4025a0:	mov	x22, x1
  4025a4:	mov	x21, x0
  4025a8:	str	x23, [sp, #48]
  4025ac:	bl	401b00 <strlen@plt>
  4025b0:	mov	w23, #0x0                   	// #0
  4025b4:	mov	x19, x0
  4025b8:	cmp	x0, #0x1
  4025bc:	b.ls	4025f0 <ferror@plt+0x700>  // b.plast
  4025c0:	ldrb	w0, [x21]
  4025c4:	cmp	w0, #0x2d
  4025c8:	b.eq	402640 <ferror@plt+0x750>  // b.none
  4025cc:	cmp	x19, #0x2
  4025d0:	b.eq	4025f0 <ferror@plt+0x700>  // b.none
  4025d4:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  4025d8:	mov	x0, x21
  4025dc:	add	x1, x1, #0xa50
  4025e0:	mov	x2, #0x2                   	// #2
  4025e4:	bl	401d50 <strncasecmp@plt>
  4025e8:	cbz	w0, 402650 <ferror@plt+0x760>
  4025ec:	nop
  4025f0:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  4025f4:	add	x20, x0, #0x240
  4025f8:	ldr	x0, [x0, #576]
  4025fc:	cbnz	x0, 40260c <ferror@plt+0x71c>
  402600:	b	402660 <ferror@plt+0x770>
  402604:	ldr	x0, [x20, #16]!
  402608:	cbz	x0, 40262c <ferror@plt+0x73c>
  40260c:	mov	x2, x19
  402610:	mov	x1, x21
  402614:	bl	401d50 <strncasecmp@plt>
  402618:	cbnz	w0, 402604 <ferror@plt+0x714>
  40261c:	ldr	w0, [x20, #12]
  402620:	eor	w0, w0, w23
  402624:	str	w0, [x22]
  402628:	ldr	w0, [x20, #8]
  40262c:	ldp	x19, x20, [sp, #16]
  402630:	ldp	x21, x22, [sp, #32]
  402634:	ldr	x23, [sp, #48]
  402638:	ldp	x29, x30, [sp], #64
  40263c:	ret
  402640:	add	x21, x21, #0x1
  402644:	sub	x19, x19, #0x1
  402648:	mov	w23, #0x1                   	// #1
  40264c:	b	4025f0 <ferror@plt+0x700>
  402650:	add	x21, x21, #0x2
  402654:	sub	x19, x19, #0x2
  402658:	mov	w23, #0x1                   	// #1
  40265c:	b	4025f0 <ferror@plt+0x700>
  402660:	mov	w0, #0x0                   	// #0
  402664:	b	40262c <ferror@plt+0x73c>
  402668:	adrp	x3, 429000 <argp_error@@Base+0x19650>
  40266c:	add	x3, x3, #0x240
  402670:	subs	x2, x2, #0x1
  402674:	add	x3, x3, #0x150
  402678:	b.eq	4026ac <ferror@plt+0x7bc>  // b.none
  40267c:	nop
  402680:	ldr	w4, [x3]
  402684:	mov	x5, x1
  402688:	tst	w4, w0
  40268c:	cbz	w4, 4026ac <ferror@plt+0x7bc>
  402690:	b.eq	4026b4 <ferror@plt+0x7c4>  // b.none
  402694:	ldr	w1, [x3, #4]
  402698:	subs	x2, x2, #0x1
  40269c:	strb	w1, [x5], #1
  4026a0:	add	x3, x3, #0x8
  4026a4:	mov	x1, x5
  4026a8:	b.ne	402680 <ferror@plt+0x790>  // b.any
  4026ac:	strb	wzr, [x1]
  4026b0:	ret
  4026b4:	add	x3, x3, #0x8
  4026b8:	b	402680 <ferror@plt+0x790>
  4026bc:	nop
  4026c0:	stp	x29, x30, [sp, #-96]!
  4026c4:	mov	x29, sp
  4026c8:	stp	x21, x22, [sp, #32]
  4026cc:	cbz	w0, 4027e4 <ferror@plt+0x8f4>
  4026d0:	mov	w22, #0x0                   	// #0
  4026d4:	stp	x19, x20, [sp, #16]
  4026d8:	mov	w20, w0
  4026dc:	stp	x23, x24, [sp, #48]
  4026e0:	mov	w23, #0x1                   	// #1
  4026e4:	mov	x24, x1
  4026e8:	mov	w19, w23
  4026ec:	stp	x25, x26, [sp, #64]
  4026f0:	adrp	x25, 411000 <argp_error@@Base+0x1650>
  4026f4:	and	w26, w2, #0xff
  4026f8:	add	x25, x25, #0xf68
  4026fc:	str	x27, [sp, #80]
  402700:	adrp	x27, 42a000 <argp_error@@Base+0x1a650>
  402704:	b	402718 <ferror@plt+0x828>
  402708:	lsl	w19, w19, #1
  40270c:	cmp	w20, #0x0
  402710:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  402714:	b.eq	402760 <ferror@plt+0x870>  // b.none
  402718:	tst	w20, w19
  40271c:	b.eq	402708 <ferror@plt+0x818>  // b.none
  402720:	mov	x1, x24
  402724:	mov	w0, w19
  402728:	bl	402400 <ferror@plt+0x510>
  40272c:	mov	x21, x0
  402730:	cbz	x0, 402708 <ferror@plt+0x818>
  402734:	bic	w20, w20, w19
  402738:	cbz	w23, 4027b0 <ferror@plt+0x8c0>
  40273c:	mov	x1, x21
  402740:	mov	x0, x25
  402744:	bl	401e80 <printf@plt>
  402748:	lsl	w19, w19, #1
  40274c:	cmp	w20, #0x0
  402750:	add	w22, w22, w0
  402754:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  402758:	mov	w23, #0x0                   	// #0
  40275c:	b.ne	402718 <ferror@plt+0x828>  // b.any
  402760:	cbz	w20, 4027c4 <ferror@plt+0x8d4>
  402764:	cbnz	w23, 40277c <ferror@plt+0x88c>
  402768:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40276c:	add	w22, w22, #0x1
  402770:	mov	w0, w26
  402774:	ldr	x1, [x1, #1256]
  402778:	bl	401b60 <putc@plt>
  40277c:	mov	w1, w20
  402780:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402784:	add	x0, x0, #0xa58
  402788:	bl	401e80 <printf@plt>
  40278c:	add	w22, w22, w0
  402790:	mov	w0, w22
  402794:	ldp	x19, x20, [sp, #16]
  402798:	ldp	x21, x22, [sp, #32]
  40279c:	ldp	x23, x24, [sp, #48]
  4027a0:	ldp	x25, x26, [sp, #64]
  4027a4:	ldr	x27, [sp, #80]
  4027a8:	ldp	x29, x30, [sp], #96
  4027ac:	ret
  4027b0:	ldr	x1, [x27, #1256]
  4027b4:	add	w22, w22, #0x1
  4027b8:	mov	w0, w26
  4027bc:	bl	401b60 <putc@plt>
  4027c0:	b	40273c <ferror@plt+0x84c>
  4027c4:	mov	w0, w22
  4027c8:	ldp	x19, x20, [sp, #16]
  4027cc:	ldp	x21, x22, [sp, #32]
  4027d0:	ldp	x23, x24, [sp, #48]
  4027d4:	ldp	x25, x26, [sp, #64]
  4027d8:	ldr	x27, [sp, #80]
  4027dc:	ldp	x29, x30, [sp], #96
  4027e0:	ret
  4027e4:	mov	w22, #0x0                   	// #0
  4027e8:	mov	w0, w22
  4027ec:	ldp	x21, x22, [sp, #32]
  4027f0:	ldp	x29, x30, [sp], #96
  4027f4:	ret
  4027f8:	stp	x29, x30, [sp, #-144]!
  4027fc:	mov	w4, #0x2                   	// #2
  402800:	mov	x29, sp
  402804:	stp	xzr, xzr, [sp, #96]
  402808:	add	x3, sp, #0x48
  40280c:	stp	x19, x20, [sp, #16]
  402810:	mov	x20, x1
  402814:	mov	x1, #0x0                   	// #0
  402818:	stp	x21, x22, [sp, #32]
  40281c:	mov	x22, x2
  402820:	str	x23, [sp, #48]
  402824:	mov	w23, w0
  402828:	mov	x0, x2
  40282c:	add	x2, sp, #0x60
  402830:	str	w4, [sp, #100]
  402834:	stp	xzr, xzr, [sp, #112]
  402838:	stp	xzr, xzr, [sp, #128]
  40283c:	bl	401dc0 <getaddrinfo@plt>
  402840:	cbnz	w0, 402958 <ferror@plt+0xa68>
  402844:	ldr	x3, [sp, #72]
  402848:	cbnz	x3, 402858 <ferror@plt+0x968>
  40284c:	b	402968 <ferror@plt+0xa78>
  402850:	ldr	x3, [x3, #40]
  402854:	cbz	x3, 402968 <ferror@plt+0xa78>
  402858:	ldr	w19, [x3, #4]
  40285c:	cmp	w19, #0x2
  402860:	b.ne	402850 <ferror@plt+0x960>  // b.any
  402864:	ldr	w1, [x3, #16]
  402868:	add	x2, sp, #0x50
  40286c:	ldr	x0, [x3, #24]
  402870:	mov	w6, #0x1                   	// #1
  402874:	mov	w5, #0x0                   	// #0
  402878:	mov	x4, #0x0                   	// #0
  40287c:	mov	w3, #0x10                  	// #16
  402880:	bl	401b50 <getnameinfo@plt>
  402884:	mov	w21, w0
  402888:	ldr	x0, [sp, #72]
  40288c:	bl	401ad0 <freeaddrinfo@plt>
  402890:	cbnz	w21, 40292c <ferror@plt+0xa3c>
  402894:	strh	w19, [x20, #16]
  402898:	add	x1, x20, #0x14
  40289c:	add	x0, sp, #0x50
  4028a0:	bl	401de0 <inet_aton@plt>
  4028a4:	cbz	w0, 402910 <ferror@plt+0xa20>
  4028a8:	mov	w0, w23
  4028ac:	mov	x2, x20
  4028b0:	mov	w1, #0x8916                	// #35094
  4028b4:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4028b8:	tbnz	w0, #31, 402990 <ferror@plt+0xaa0>
  4028bc:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4028c0:	ldr	w0, [x0, #1576]
  4028c4:	cbnz	w0, 4028dc <ferror@plt+0x9ec>
  4028c8:	ldp	x19, x20, [sp, #16]
  4028cc:	ldp	x21, x22, [sp, #32]
  4028d0:	ldr	x23, [sp, #48]
  4028d4:	ldp	x29, x30, [sp], #144
  4028d8:	ret
  4028dc:	ldr	w0, [x20, #20]
  4028e0:	bl	401b90 <inet_ntoa@plt>
  4028e4:	mov	x2, x0
  4028e8:	mov	x1, x20
  4028ec:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  4028f0:	add	x0, x0, #0xb88
  4028f4:	bl	401e80 <printf@plt>
  4028f8:	mov	w0, #0x0                   	// #0
  4028fc:	ldp	x19, x20, [sp, #16]
  402900:	ldp	x21, x22, [sp, #32]
  402904:	ldr	x23, [sp, #48]
  402908:	ldp	x29, x30, [sp], #144
  40290c:	ret
  402910:	add	x3, sp, #0x50
  402914:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402918:	mov	w1, #0x0                   	// #0
  40291c:	add	x2, x2, #0xb48
  402920:	bl	401b30 <error@plt>
  402924:	mov	w0, #0xffffffff            	// #-1
  402928:	b	4028c8 <ferror@plt+0x9d8>
  40292c:	mov	w0, w21
  402930:	bl	401ac0 <gai_strerror@plt>
  402934:	mov	x3, x22
  402938:	mov	x4, x0
  40293c:	mov	w0, #0x0                   	// #0
  402940:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402944:	mov	w1, #0x0                   	// #0
  402948:	add	x2, x2, #0xb30
  40294c:	bl	401b30 <error@plt>
  402950:	mov	w0, #0xffffffff            	// #-1
  402954:	b	4028c8 <ferror@plt+0x9d8>
  402958:	bl	401ac0 <gai_strerror@plt>
  40295c:	mov	x4, x0
  402960:	mov	x3, x22
  402964:	b	40293c <ferror@plt+0xa4c>
  402968:	mov	x3, x22
  40296c:	mov	w1, #0x0                   	// #0
  402970:	mov	w0, #0x0                   	// #0
  402974:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402978:	add	x2, x2, #0xbb0
  40297c:	bl	401b30 <error@plt>
  402980:	ldr	x0, [sp, #72]
  402984:	bl	401ad0 <freeaddrinfo@plt>
  402988:	mov	w0, #0xffffffff            	// #-1
  40298c:	b	4028c8 <ferror@plt+0x9d8>
  402990:	bl	401ea0 <__errno_location@plt>
  402994:	ldr	w1, [x0]
  402998:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  40299c:	mov	w0, #0x0                   	// #0
  4029a0:	add	x3, x3, #0xb68
  4029a4:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4029a8:	add	x2, x2, #0xb78
  4029ac:	bl	401b30 <error@plt>
  4029b0:	mov	w0, #0xffffffff            	// #-1
  4029b4:	b	4028c8 <ferror@plt+0x9d8>
  4029b8:	stp	x29, x30, [sp, #-48]!
  4029bc:	mov	w3, #0x2                   	// #2
  4029c0:	mov	x29, sp
  4029c4:	stp	x19, x20, [sp, #16]
  4029c8:	mov	x19, x1
  4029cc:	mov	x20, x2
  4029d0:	str	x21, [sp, #32]
  4029d4:	add	x1, x1, #0x14
  4029d8:	strh	w3, [x19, #16]
  4029dc:	mov	w21, w0
  4029e0:	mov	x0, x2
  4029e4:	bl	401de0 <inet_aton@plt>
  4029e8:	cbz	w0, 402a4c <ferror@plt+0xb5c>
  4029ec:	mov	w0, w21
  4029f0:	mov	x2, x19
  4029f4:	mov	w1, #0x891c                	// #35100
  4029f8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4029fc:	tbnz	w0, #31, 402a68 <ferror@plt+0xb78>
  402a00:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402a04:	ldr	w0, [x0, #1576]
  402a08:	cbnz	w0, 402a1c <ferror@plt+0xb2c>
  402a0c:	ldp	x19, x20, [sp, #16]
  402a10:	ldr	x21, [sp, #32]
  402a14:	ldp	x29, x30, [sp], #48
  402a18:	ret
  402a1c:	ldr	w0, [x19, #20]
  402a20:	bl	401b90 <inet_ntoa@plt>
  402a24:	mov	x2, x0
  402a28:	mov	x1, x19
  402a2c:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402a30:	add	x0, x0, #0xbe8
  402a34:	bl	401e80 <printf@plt>
  402a38:	mov	w0, #0x0                   	// #0
  402a3c:	ldp	x19, x20, [sp, #16]
  402a40:	ldr	x21, [sp, #32]
  402a44:	ldp	x29, x30, [sp], #48
  402a48:	ret
  402a4c:	mov	x3, x20
  402a50:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402a54:	mov	w1, #0x0                   	// #0
  402a58:	add	x2, x2, #0xb48
  402a5c:	bl	401b30 <error@plt>
  402a60:	mov	w0, #0xffffffff            	// #-1
  402a64:	b	402a0c <ferror@plt+0xb1c>
  402a68:	bl	401ea0 <__errno_location@plt>
  402a6c:	ldr	w1, [x0]
  402a70:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  402a74:	mov	w0, #0x0                   	// #0
  402a78:	add	x3, x3, #0xbd8
  402a7c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402a80:	add	x2, x2, #0xb78
  402a84:	bl	401b30 <error@plt>
  402a88:	mov	w0, #0xffffffff            	// #-1
  402a8c:	b	402a0c <ferror@plt+0xb1c>
  402a90:	stp	x29, x30, [sp, #-48]!
  402a94:	mov	w3, #0x2                   	// #2
  402a98:	mov	x29, sp
  402a9c:	stp	x19, x20, [sp, #16]
  402aa0:	mov	x19, x1
  402aa4:	mov	x20, x2
  402aa8:	str	x21, [sp, #32]
  402aac:	add	x1, x1, #0x14
  402ab0:	strh	w3, [x19, #16]
  402ab4:	mov	w21, w0
  402ab8:	mov	x0, x2
  402abc:	bl	401de0 <inet_aton@plt>
  402ac0:	cbz	w0, 402b24 <ferror@plt+0xc34>
  402ac4:	mov	w0, w21
  402ac8:	mov	x2, x19
  402acc:	mov	w1, #0x8918                	// #35096
  402ad0:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402ad4:	tbnz	w0, #31, 402b40 <ferror@plt+0xc50>
  402ad8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402adc:	ldr	w0, [x0, #1576]
  402ae0:	cbnz	w0, 402af4 <ferror@plt+0xc04>
  402ae4:	ldp	x19, x20, [sp, #16]
  402ae8:	ldr	x21, [sp, #32]
  402aec:	ldp	x29, x30, [sp], #48
  402af0:	ret
  402af4:	ldr	w0, [x19, #20]
  402af8:	bl	401b90 <inet_ntoa@plt>
  402afc:	mov	x2, x0
  402b00:	mov	x1, x19
  402b04:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402b08:	add	x0, x0, #0xc20
  402b0c:	bl	401e80 <printf@plt>
  402b10:	mov	w0, #0x0                   	// #0
  402b14:	ldp	x19, x20, [sp, #16]
  402b18:	ldr	x21, [sp, #32]
  402b1c:	ldp	x29, x30, [sp], #48
  402b20:	ret
  402b24:	mov	x3, x20
  402b28:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402b2c:	mov	w1, #0x0                   	// #0
  402b30:	add	x2, x2, #0xb48
  402b34:	bl	401b30 <error@plt>
  402b38:	mov	w0, #0xffffffff            	// #-1
  402b3c:	b	402ae4 <ferror@plt+0xbf4>
  402b40:	bl	401ea0 <__errno_location@plt>
  402b44:	ldr	w1, [x0]
  402b48:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  402b4c:	mov	w0, #0x0                   	// #0
  402b50:	add	x3, x3, #0xc10
  402b54:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402b58:	add	x2, x2, #0xb78
  402b5c:	bl	401b30 <error@plt>
  402b60:	mov	w0, #0xffffffff            	// #-1
  402b64:	b	402ae4 <ferror@plt+0xbf4>
  402b68:	stp	x29, x30, [sp, #-48]!
  402b6c:	mov	w3, #0x2                   	// #2
  402b70:	mov	x29, sp
  402b74:	stp	x19, x20, [sp, #16]
  402b78:	mov	x19, x1
  402b7c:	mov	x20, x2
  402b80:	str	x21, [sp, #32]
  402b84:	add	x1, x1, #0x14
  402b88:	strh	w3, [x19, #16]
  402b8c:	mov	w21, w0
  402b90:	mov	x0, x2
  402b94:	bl	401de0 <inet_aton@plt>
  402b98:	cbz	w0, 402bfc <ferror@plt+0xd0c>
  402b9c:	mov	w0, w21
  402ba0:	mov	x2, x19
  402ba4:	mov	w1, #0x891a                	// #35098
  402ba8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402bac:	tbnz	w0, #31, 402c18 <ferror@plt+0xd28>
  402bb0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402bb4:	ldr	w0, [x0, #1576]
  402bb8:	cbnz	w0, 402bcc <ferror@plt+0xcdc>
  402bbc:	ldp	x19, x20, [sp, #16]
  402bc0:	ldr	x21, [sp, #32]
  402bc4:	ldp	x29, x30, [sp], #48
  402bc8:	ret
  402bcc:	ldr	w0, [x19, #20]
  402bd0:	bl	401b90 <inet_ntoa@plt>
  402bd4:	mov	x2, x0
  402bd8:	mov	x1, x19
  402bdc:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402be0:	add	x0, x0, #0xc60
  402be4:	bl	401e80 <printf@plt>
  402be8:	mov	w0, #0x0                   	// #0
  402bec:	ldp	x19, x20, [sp, #16]
  402bf0:	ldr	x21, [sp, #32]
  402bf4:	ldp	x29, x30, [sp], #48
  402bf8:	ret
  402bfc:	mov	x3, x20
  402c00:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402c04:	mov	w1, #0x0                   	// #0
  402c08:	add	x2, x2, #0xb48
  402c0c:	bl	401b30 <error@plt>
  402c10:	mov	w0, #0xffffffff            	// #-1
  402c14:	b	402bbc <ferror@plt+0xccc>
  402c18:	bl	401ea0 <__errno_location@plt>
  402c1c:	ldr	w1, [x0]
  402c20:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  402c24:	mov	w0, #0x0                   	// #0
  402c28:	add	x3, x3, #0xc50
  402c2c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402c30:	add	x2, x2, #0xb78
  402c34:	bl	401b30 <error@plt>
  402c38:	mov	w0, #0xffffffff            	// #-1
  402c3c:	b	402bbc <ferror@plt+0xccc>
  402c40:	stp	x29, x30, [sp, #-32]!
  402c44:	mov	w3, w2
  402c48:	mov	x29, sp
  402c4c:	str	x19, [sp, #16]
  402c50:	mov	x19, x1
  402c54:	mov	x2, x19
  402c58:	mov	w1, #0x8922                	// #35106
  402c5c:	str	w3, [x19, #16]
  402c60:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402c64:	tbnz	w0, #31, 402ca4 <ferror@plt+0xdb4>
  402c68:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402c6c:	ldr	w0, [x0, #1576]
  402c70:	cbnz	w0, 402c80 <ferror@plt+0xd90>
  402c74:	ldr	x19, [sp, #16]
  402c78:	ldp	x29, x30, [sp], #32
  402c7c:	ret
  402c80:	ldr	w2, [x19, #16]
  402c84:	mov	x1, x19
  402c88:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402c8c:	add	x0, x0, #0xca8
  402c90:	bl	401e80 <printf@plt>
  402c94:	mov	w0, #0x0                   	// #0
  402c98:	ldr	x19, [sp, #16]
  402c9c:	ldp	x29, x30, [sp], #32
  402ca0:	ret
  402ca4:	bl	401ea0 <__errno_location@plt>
  402ca8:	mov	x1, x0
  402cac:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402cb0:	mov	w0, #0x0                   	// #0
  402cb4:	add	x2, x2, #0xc90
  402cb8:	ldr	w1, [x1]
  402cbc:	bl	401b30 <error@plt>
  402cc0:	mov	w0, #0xffffffff            	// #-1
  402cc4:	b	402c74 <ferror@plt+0xd84>
  402cc8:	stp	x29, x30, [sp, #-32]!
  402ccc:	mov	w3, w2
  402cd0:	mov	x29, sp
  402cd4:	str	x19, [sp, #16]
  402cd8:	mov	x19, x1
  402cdc:	mov	x2, x19
  402ce0:	mov	w1, #0x891e                	// #35102
  402ce4:	str	w3, [x19, #16]
  402ce8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402cec:	tbnz	w0, #31, 402d2c <ferror@plt+0xe3c>
  402cf0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402cf4:	ldr	w0, [x0, #1576]
  402cf8:	cbnz	w0, 402d08 <ferror@plt+0xe18>
  402cfc:	ldr	x19, [sp, #16]
  402d00:	ldp	x29, x30, [sp], #32
  402d04:	ret
  402d08:	ldr	w2, [x19, #16]
  402d0c:	mov	x1, x19
  402d10:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402d14:	add	x0, x0, #0xce0
  402d18:	bl	401e80 <printf@plt>
  402d1c:	mov	w0, #0x0                   	// #0
  402d20:	ldr	x19, [sp, #16]
  402d24:	ldp	x29, x30, [sp], #32
  402d28:	ret
  402d2c:	bl	401ea0 <__errno_location@plt>
  402d30:	mov	x1, x0
  402d34:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402d38:	mov	w0, #0x0                   	// #0
  402d3c:	add	x2, x2, #0xcc8
  402d40:	ldr	w1, [x1]
  402d44:	bl	401b30 <error@plt>
  402d48:	mov	w0, #0xffffffff            	// #-1
  402d4c:	b	402cfc <ferror@plt+0xe0c>
  402d50:	stp	x29, x30, [sp, #-96]!
  402d54:	mov	x29, sp
  402d58:	stp	x19, x20, [sp, #16]
  402d5c:	mov	x19, x1
  402d60:	mov	w20, w3
  402d64:	ldp	x6, x7, [x1]
  402d68:	stp	x21, x22, [sp, #32]
  402d6c:	mov	w21, w2
  402d70:	ldp	x4, x5, [x1, #16]
  402d74:	mov	w22, w0
  402d78:	ldr	x3, [x19, #32]
  402d7c:	add	x2, sp, #0x38
  402d80:	mov	w1, #0x8913                	// #35091
  402d84:	stp	x6, x7, [sp, #56]
  402d88:	stp	x4, x5, [sp, #72]
  402d8c:	str	x3, [sp, #88]
  402d90:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402d94:	tbnz	w0, #31, 402dd4 <ferror@plt+0xee4>
  402d98:	ldrh	w3, [sp, #72]
  402d9c:	mov	w1, #0x8914                	// #35092
  402da0:	mov	w0, w22
  402da4:	mov	x2, x19
  402da8:	orr	w21, w21, w3
  402dac:	bic	w20, w21, w20
  402db0:	strh	w20, [x19, #16]
  402db4:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402db8:	mov	w1, w0
  402dbc:	mov	w0, #0x0                   	// #0
  402dc0:	tbnz	w1, #31, 402df8 <ferror@plt+0xf08>
  402dc4:	ldp	x19, x20, [sp, #16]
  402dc8:	ldp	x21, x22, [sp, #32]
  402dcc:	ldp	x29, x30, [sp], #96
  402dd0:	ret
  402dd4:	bl	401ea0 <__errno_location@plt>
  402dd8:	mov	x1, x0
  402ddc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402de0:	mov	w0, #0x0                   	// #0
  402de4:	add	x2, x2, #0xd08
  402de8:	ldr	w1, [x1]
  402dec:	bl	401b30 <error@plt>
  402df0:	mov	w0, #0xffffffff            	// #-1
  402df4:	b	402dc4 <ferror@plt+0xed4>
  402df8:	bl	401ea0 <__errno_location@plt>
  402dfc:	mov	x1, x0
  402e00:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402e04:	mov	w0, #0x0                   	// #0
  402e08:	add	x2, x2, #0xd20
  402e0c:	ldr	w1, [x1]
  402e10:	bl	401b30 <error@plt>
  402e14:	mov	w0, #0xffffffff            	// #-1
  402e18:	b	402dc4 <ferror@plt+0xed4>
  402e1c:	nop
  402e20:	stp	x29, x30, [sp, #-80]!
  402e24:	mov	x2, #0x10                  	// #16
  402e28:	mov	x29, sp
  402e2c:	stp	x19, x20, [sp, #16]
  402e30:	mov	x19, x1
  402e34:	mov	w20, w0
  402e38:	ldr	x1, [x1]
  402e3c:	add	x0, sp, #0x28
  402e40:	stp	xzr, xzr, [sp, #40]
  402e44:	stp	xzr, xzr, [sp, #56]
  402e48:	str	xzr, [sp, #72]
  402e4c:	bl	401e60 <strncpy@plt>
  402e50:	ldr	w1, [x19, #8]
  402e54:	strb	wzr, [sp, #55]
  402e58:	tbnz	w1, #3, 402ed8 <ferror@plt+0xfe8>
  402e5c:	tbnz	w1, #4, 402ef8 <ferror@plt+0x1008>
  402e60:	tbnz	w1, #5, 402f18 <ferror@plt+0x1028>
  402e64:	tbz	w1, #6, 402e80 <ferror@plt+0xf90>
  402e68:	ldr	x2, [x19, #64]
  402e6c:	add	x1, sp, #0x28
  402e70:	mov	w0, w20
  402e74:	bl	402b68 <ferror@plt+0xc78>
  402e78:	cbnz	w0, 402f0c <ferror@plt+0x101c>
  402e7c:	ldr	w1, [x19, #8]
  402e80:	tbnz	w1, #7, 402f64 <ferror@plt+0x1074>
  402e84:	tbnz	w1, #8, 402f34 <ferror@plt+0x1044>
  402e88:	tbz	w1, #0, 402ea0 <ferror@plt+0xfb0>
  402e8c:	ldr	x2, [x19, #16]
  402e90:	add	x1, sp, #0x28
  402e94:	mov	w0, w20
  402e98:	bl	409bb8 <ferror@plt+0x7cc8>
  402e9c:	cbnz	w0, 402f0c <ferror@plt+0x101c>
  402ea0:	ldr	x0, [x19, #80]
  402ea4:	cbnz	x0, 402fd0 <ferror@plt+0x10e0>
  402ea8:	ldr	w1, [x19, #8]
  402eac:	and	w0, w1, #0x2
  402eb0:	tbz	w1, #1, 402f0c <ferror@plt+0x101c>
  402eb4:	ldr	x1, [x19]
  402eb8:	add	x2, sp, #0x28
  402ebc:	ldr	x3, [x19, #24]
  402ec0:	mov	w0, w20
  402ec4:	bl	4075e0 <ferror@plt+0x56f0>
  402ec8:	mov	w0, #0x0                   	// #0
  402ecc:	ldp	x19, x20, [sp, #16]
  402ed0:	ldp	x29, x30, [sp], #80
  402ed4:	ret
  402ed8:	ldr	x2, [x19, #40]
  402edc:	add	x1, sp, #0x28
  402ee0:	mov	w0, w20
  402ee4:	bl	4027f8 <ferror@plt+0x908>
  402ee8:	cbnz	w0, 402f0c <ferror@plt+0x101c>
  402eec:	ldr	w1, [x19, #8]
  402ef0:	tbz	w1, #4, 402e60 <ferror@plt+0xf70>
  402ef4:	nop
  402ef8:	ldr	x2, [x19, #48]
  402efc:	add	x1, sp, #0x28
  402f00:	mov	w0, w20
  402f04:	bl	4029b8 <ferror@plt+0xac8>
  402f08:	cbz	w0, 403038 <ferror@plt+0x1148>
  402f0c:	ldp	x19, x20, [sp, #16]
  402f10:	ldp	x29, x30, [sp], #80
  402f14:	ret
  402f18:	ldr	x2, [x19, #56]
  402f1c:	add	x1, sp, #0x28
  402f20:	mov	w0, w20
  402f24:	bl	402a90 <ferror@plt+0xba0>
  402f28:	cbnz	w0, 402f0c <ferror@plt+0x101c>
  402f2c:	ldr	w1, [x19, #8]
  402f30:	b	402e64 <ferror@plt+0xf74>
  402f34:	ldr	w3, [x19, #76]
  402f38:	add	x2, sp, #0x28
  402f3c:	mov	w0, w20
  402f40:	mov	w1, #0x891e                	// #35102
  402f44:	str	w3, [sp, #56]
  402f48:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402f4c:	tbnz	w0, #31, 402ff0 <ferror@plt+0x1100>
  402f50:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402f54:	ldr	w0, [x0, #1576]
  402f58:	cbnz	w0, 402f98 <ferror@plt+0x10a8>
  402f5c:	ldr	w1, [x19, #8]
  402f60:	b	402e88 <ferror@plt+0xf98>
  402f64:	ldr	w3, [x19, #72]
  402f68:	add	x2, sp, #0x28
  402f6c:	mov	w0, w20
  402f70:	mov	w1, #0x8922                	// #35106
  402f74:	str	w3, [sp, #56]
  402f78:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  402f7c:	tbnz	w0, #31, 403014 <ferror@plt+0x1124>
  402f80:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  402f84:	ldr	w0, [x0, #1576]
  402f88:	cbnz	w0, 402fb4 <ferror@plt+0x10c4>
  402f8c:	ldr	w1, [x19, #8]
  402f90:	tbz	w1, #8, 402e88 <ferror@plt+0xf98>
  402f94:	b	402f34 <ferror@plt+0x1044>
  402f98:	ldr	w2, [sp, #56]
  402f9c:	add	x1, sp, #0x28
  402fa0:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402fa4:	add	x0, x0, #0xce0
  402fa8:	bl	401e80 <printf@plt>
  402fac:	ldr	w1, [x19, #8]
  402fb0:	b	402e88 <ferror@plt+0xf98>
  402fb4:	ldr	w2, [sp, #56]
  402fb8:	add	x1, sp, #0x28
  402fbc:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  402fc0:	add	x0, x0, #0xca8
  402fc4:	bl	401e80 <printf@plt>
  402fc8:	ldr	w1, [x19, #8]
  402fcc:	b	402f90 <ferror@plt+0x10a0>
  402fd0:	ldp	w2, w3, [x19, #80]
  402fd4:	add	x1, sp, #0x28
  402fd8:	mov	w0, w20
  402fdc:	bl	402d50 <ferror@plt+0xe60>
  402fe0:	cbz	w0, 402ea8 <ferror@plt+0xfb8>
  402fe4:	ldp	x19, x20, [sp, #16]
  402fe8:	ldp	x29, x30, [sp], #80
  402fec:	ret
  402ff0:	bl	401ea0 <__errno_location@plt>
  402ff4:	mov	x1, x0
  402ff8:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  402ffc:	mov	w0, #0x0                   	// #0
  403000:	add	x2, x2, #0xcc8
  403004:	ldr	w1, [x1]
  403008:	bl	401b30 <error@plt>
  40300c:	mov	w0, #0xffffffff            	// #-1
  403010:	b	402f0c <ferror@plt+0x101c>
  403014:	bl	401ea0 <__errno_location@plt>
  403018:	mov	x1, x0
  40301c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403020:	mov	w0, #0x0                   	// #0
  403024:	add	x2, x2, #0xc90
  403028:	ldr	w1, [x1]
  40302c:	bl	401b30 <error@plt>
  403030:	mov	w0, #0xffffffff            	// #-1
  403034:	b	402f0c <ferror@plt+0x101c>
  403038:	ldr	w1, [x19, #8]
  40303c:	tbz	w1, #5, 402e64 <ferror@plt+0xf74>
  403040:	b	402f18 <ferror@plt+0x1028>
  403044:	nop
  403048:	ldr	x0, [x0]
  40304c:	ldr	x1, [x1]
  403050:	b	401cf0 <strcmp@plt>
  403054:	nop
  403058:	mov	w2, #0x4                   	// #4
  40305c:	movk	w2, #0x200, lsl #16
  403060:	cmp	w0, w2
  403064:	b.eq	403070 <ferror@plt+0x1180>  // b.none
  403068:	mov	x0, x1
  40306c:	ret
  403070:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  403074:	add	x0, x0, #0xd38
  403078:	b	4021a8 <ferror@plt+0x2b8>
  40307c:	nop
  403080:	stp	x29, x30, [sp, #-32]!
  403084:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  403088:	mov	x29, sp
  40308c:	stp	x19, x20, [sp, #16]
  403090:	mov	x20, x0
  403094:	ldr	x0, [x1, #1024]
  403098:	cbz	x0, 4030c8 <ferror@plt+0x11d8>
  40309c:	add	x19, x1, #0x400
  4030a0:	b	4030ac <ferror@plt+0x11bc>
  4030a4:	ldr	x0, [x19, #24]!
  4030a8:	cbz	x0, 4030c8 <ferror@plt+0x11d8>
  4030ac:	mov	x1, x20
  4030b0:	bl	401cf0 <strcmp@plt>
  4030b4:	cbnz	w0, 4030a4 <ferror@plt+0x11b4>
  4030b8:	mov	x0, x19
  4030bc:	ldp	x19, x20, [sp, #16]
  4030c0:	ldp	x29, x30, [sp], #32
  4030c4:	ret
  4030c8:	mov	x19, #0x0                   	// #0
  4030cc:	mov	x0, x19
  4030d0:	ldp	x19, x20, [sp, #16]
  4030d4:	ldp	x29, x30, [sp], #32
  4030d8:	ret
  4030dc:	nop
  4030e0:	stp	x29, x30, [sp, #-48]!
  4030e4:	mov	w2, #0x58                  	// #88
  4030e8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4030ec:	mov	x29, sp
  4030f0:	stp	x19, x20, [sp, #16]
  4030f4:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4030f8:	mov	x19, x0
  4030fc:	ldr	w1, [x20, #1552]
  403100:	stp	x21, x22, [sp, #32]
  403104:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  403108:	add	w1, w1, #0x1
  40310c:	ldr	x0, [x21, #1536]
  403110:	str	w1, [x20, #1552]
  403114:	smull	x1, w1, w2
  403118:	mov	w22, #0x1                   	// #1
  40311c:	str	w22, [x3, #1572]
  403120:	bl	401c70 <realloc@plt>
  403124:	str	x0, [x21, #1536]
  403128:	mov	x8, x0
  40312c:	cbz	x0, 403190 <ferror@plt+0x12a0>
  403130:	ldr	w9, [x20, #1552]
  403134:	mov	w2, #0x58                  	// #88
  403138:	mov	x0, #0xffffffffffffffa8    	// #-88
  40313c:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  403140:	add	x1, x1, #0x2b0
  403144:	ldp	x21, x22, [sp, #32]
  403148:	smaddl	x9, w9, w2, x0
  40314c:	ldp	x6, x7, [x1]
  403150:	add	x0, x8, x9
  403154:	ldp	x4, x5, [x1, #16]
  403158:	stp	x6, x7, [x0]
  40315c:	stp	x4, x5, [x0, #16]
  403160:	ldp	x2, x3, [x1, #32]
  403164:	stp	x2, x3, [x0, #32]
  403168:	ldp	x6, x7, [x1, #48]
  40316c:	stp	x6, x7, [x0, #48]
  403170:	ldp	x4, x5, [x1, #64]
  403174:	stp	x4, x5, [x0, #64]
  403178:	ldr	x1, [x1, #80]
  40317c:	str	x1, [x0, #80]
  403180:	str	x19, [x8, x9]
  403184:	ldp	x19, x20, [sp, #16]
  403188:	ldp	x29, x30, [sp], #48
  40318c:	ret
  403190:	bl	401ea0 <__errno_location@plt>
  403194:	mov	x1, x0
  403198:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40319c:	mov	w0, w22
  4031a0:	add	x2, x2, #0xd50
  4031a4:	ldr	w1, [x1]
  4031a8:	bl	401b30 <error@plt>
  4031ac:	ldr	x8, [x21, #1536]
  4031b0:	b	403130 <ferror@plt+0x1240>
  4031b4:	nop
  4031b8:	stp	x29, x30, [sp, #-32]!
  4031bc:	mov	x29, sp
  4031c0:	stp	x19, x20, [sp, #16]
  4031c4:	mov	x19, x0
  4031c8:	mov	x20, x1
  4031cc:	cbz	x0, 40322c <ferror@plt+0x133c>
  4031d0:	ldr	w0, [x19, #8]
  4031d4:	tbnz	w0, #3, 4031f0 <ferror@plt+0x1300>
  4031d8:	orr	w0, w0, #0x8
  4031dc:	str	w0, [x19, #8]
  4031e0:	str	x20, [x19, #40]
  4031e4:	ldp	x19, x20, [sp, #16]
  4031e8:	ldp	x29, x30, [sp], #32
  4031ec:	ret
  4031f0:	ldr	x4, [x19]
  4031f4:	mov	w1, #0x0                   	// #0
  4031f8:	mov	w0, #0x1                   	// #1
  4031fc:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403200:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403204:	add	x3, x3, #0xd80
  403208:	add	x2, x2, #0xdb0
  40320c:	bl	401b30 <error@plt>
  403210:	ldr	w0, [x19, #8]
  403214:	str	x20, [x19, #40]
  403218:	orr	w0, w0, #0x8
  40321c:	str	w0, [x19, #8]
  403220:	ldp	x19, x20, [sp, #16]
  403224:	ldp	x29, x30, [sp], #32
  403228:	ret
  40322c:	mov	x4, x1
  403230:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403234:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403238:	add	x3, x3, #0xd80
  40323c:	add	x2, x2, #0xd88
  403240:	mov	w1, #0x0                   	// #0
  403244:	mov	w0, #0x1                   	// #1
  403248:	bl	401b30 <error@plt>
  40324c:	b	4031d0 <ferror@plt+0x12e0>
  403250:	stp	x29, x30, [sp, #-32]!
  403254:	mov	x29, sp
  403258:	stp	x19, x20, [sp, #16]
  40325c:	mov	x19, x0
  403260:	mov	x20, x1
  403264:	cbz	x0, 4032c4 <ferror@plt+0x13d4>
  403268:	ldr	w0, [x19, #8]
  40326c:	tbnz	w0, #4, 403288 <ferror@plt+0x1398>
  403270:	orr	w0, w0, #0x10
  403274:	str	w0, [x19, #8]
  403278:	str	x20, [x19, #48]
  40327c:	ldp	x19, x20, [sp, #16]
  403280:	ldp	x29, x30, [sp], #32
  403284:	ret
  403288:	ldr	x4, [x19]
  40328c:	mov	w1, #0x0                   	// #0
  403290:	mov	w0, #0x1                   	// #1
  403294:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403298:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40329c:	add	x3, x3, #0xdd8
  4032a0:	add	x2, x2, #0xdb0
  4032a4:	bl	401b30 <error@plt>
  4032a8:	ldr	w0, [x19, #8]
  4032ac:	str	x20, [x19, #48]
  4032b0:	orr	w0, w0, #0x10
  4032b4:	str	w0, [x19, #8]
  4032b8:	ldp	x19, x20, [sp, #16]
  4032bc:	ldp	x29, x30, [sp], #32
  4032c0:	ret
  4032c4:	mov	x4, x1
  4032c8:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  4032cc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4032d0:	add	x3, x3, #0xdd8
  4032d4:	add	x2, x2, #0xd88
  4032d8:	mov	w1, #0x0                   	// #0
  4032dc:	mov	w0, #0x1                   	// #1
  4032e0:	bl	401b30 <error@plt>
  4032e4:	b	403268 <ferror@plt+0x1378>
  4032e8:	stp	x29, x30, [sp, #-32]!
  4032ec:	mov	x29, sp
  4032f0:	stp	x19, x20, [sp, #16]
  4032f4:	mov	x19, x0
  4032f8:	mov	x20, x1
  4032fc:	cbz	x0, 40335c <ferror@plt+0x146c>
  403300:	ldr	w0, [x19, #8]
  403304:	tbnz	w0, #5, 403320 <ferror@plt+0x1430>
  403308:	orr	w0, w0, #0x20
  40330c:	str	w0, [x19, #8]
  403310:	str	x20, [x19, #56]
  403314:	ldp	x19, x20, [sp, #16]
  403318:	ldp	x29, x30, [sp], #32
  40331c:	ret
  403320:	ldr	x4, [x19]
  403324:	mov	w1, #0x0                   	// #0
  403328:	mov	w0, #0x1                   	// #1
  40332c:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403330:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403334:	add	x3, x3, #0xde0
  403338:	add	x2, x2, #0xdb0
  40333c:	bl	401b30 <error@plt>
  403340:	ldr	w0, [x19, #8]
  403344:	str	x20, [x19, #56]
  403348:	orr	w0, w0, #0x20
  40334c:	str	w0, [x19, #8]
  403350:	ldp	x19, x20, [sp, #16]
  403354:	ldp	x29, x30, [sp], #32
  403358:	ret
  40335c:	mov	x4, x1
  403360:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403364:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403368:	add	x3, x3, #0xde0
  40336c:	add	x2, x2, #0xd88
  403370:	mov	w1, #0x0                   	// #0
  403374:	mov	w0, #0x1                   	// #1
  403378:	bl	401b30 <error@plt>
  40337c:	b	403300 <ferror@plt+0x1410>
  403380:	stp	x29, x30, [sp, #-32]!
  403384:	mov	x29, sp
  403388:	stp	x19, x20, [sp, #16]
  40338c:	mov	x19, x0
  403390:	mov	x20, x1
  403394:	cbz	x0, 4033f4 <ferror@plt+0x1504>
  403398:	ldr	w0, [x19, #8]
  40339c:	tbnz	w0, #6, 4033b8 <ferror@plt+0x14c8>
  4033a0:	orr	w0, w0, #0x40
  4033a4:	str	w0, [x19, #8]
  4033a8:	str	x20, [x19, #64]
  4033ac:	ldp	x19, x20, [sp, #16]
  4033b0:	ldp	x29, x30, [sp], #32
  4033b4:	ret
  4033b8:	ldr	x4, [x19]
  4033bc:	mov	w1, #0x0                   	// #0
  4033c0:	mov	w0, #0x1                   	// #1
  4033c4:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  4033c8:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4033cc:	add	x3, x3, #0xe00
  4033d0:	add	x2, x2, #0xdb0
  4033d4:	bl	401b30 <error@plt>
  4033d8:	ldr	w0, [x19, #8]
  4033dc:	str	x20, [x19, #64]
  4033e0:	orr	w0, w0, #0x40
  4033e4:	str	w0, [x19, #8]
  4033e8:	ldp	x19, x20, [sp, #16]
  4033ec:	ldp	x29, x30, [sp], #32
  4033f0:	ret
  4033f4:	mov	x4, x1
  4033f8:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  4033fc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403400:	add	x3, x3, #0xe00
  403404:	add	x2, x2, #0xd88
  403408:	mov	w1, #0x0                   	// #0
  40340c:	mov	w0, #0x1                   	// #1
  403410:	bl	401b30 <error@plt>
  403414:	b	403398 <ferror@plt+0x14a8>
  403418:	stp	x29, x30, [sp, #-48]!
  40341c:	mov	x29, sp
  403420:	stp	x19, x20, [sp, #16]
  403424:	mov	x19, x0
  403428:	mov	x20, x1
  40342c:	cbz	x0, 4034b8 <ferror@plt+0x15c8>
  403430:	ldr	w0, [x19, #8]
  403434:	tbnz	w0, #7, 403494 <ferror@plt+0x15a4>
  403438:	add	x1, sp, #0x28
  40343c:	mov	x0, x20
  403440:	mov	w2, #0x0                   	// #0
  403444:	bl	401d10 <strtol@plt>
  403448:	str	w0, [x19, #72]
  40344c:	ldrb	w0, [x20]
  403450:	cbz	w0, 403460 <ferror@plt+0x1570>
  403454:	ldr	x0, [sp, #40]
  403458:	ldrb	w0, [x0]
  40345c:	cbz	w0, 40347c <ferror@plt+0x158c>
  403460:	ldr	x4, [x19]
  403464:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403468:	mov	x3, x20
  40346c:	add	x2, x2, #0xe50
  403470:	mov	w1, #0x0                   	// #0
  403474:	mov	w0, #0x1                   	// #1
  403478:	bl	401b30 <error@plt>
  40347c:	ldr	w0, [x19, #8]
  403480:	orr	w0, w0, #0x80
  403484:	str	w0, [x19, #8]
  403488:	ldp	x19, x20, [sp, #16]
  40348c:	ldp	x29, x30, [sp], #48
  403490:	ret
  403494:	ldr	x4, [x19]
  403498:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  40349c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4034a0:	add	x3, x3, #0xe18
  4034a4:	add	x2, x2, #0xdb0
  4034a8:	mov	w1, #0x0                   	// #0
  4034ac:	mov	w0, #0x1                   	// #1
  4034b0:	bl	401b30 <error@plt>
  4034b4:	b	403438 <ferror@plt+0x1548>
  4034b8:	mov	x4, x1
  4034bc:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  4034c0:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4034c4:	add	x3, x3, #0xe18
  4034c8:	add	x2, x2, #0xe28
  4034cc:	mov	w1, #0x0                   	// #0
  4034d0:	mov	w0, #0x1                   	// #1
  4034d4:	bl	401b30 <error@plt>
  4034d8:	b	403430 <ferror@plt+0x1540>
  4034dc:	nop
  4034e0:	stp	x29, x30, [sp, #-48]!
  4034e4:	mov	x29, sp
  4034e8:	stp	x19, x20, [sp, #16]
  4034ec:	mov	x19, x0
  4034f0:	mov	x20, x1
  4034f4:	cbz	x0, 403580 <ferror@plt+0x1690>
  4034f8:	ldr	w0, [x19, #8]
  4034fc:	tbnz	w0, #8, 40355c <ferror@plt+0x166c>
  403500:	add	x1, sp, #0x28
  403504:	mov	x0, x20
  403508:	mov	w2, #0x0                   	// #0
  40350c:	bl	401d10 <strtol@plt>
  403510:	str	w0, [x19, #76]
  403514:	ldrb	w0, [x20]
  403518:	cbz	w0, 403528 <ferror@plt+0x1638>
  40351c:	ldr	x0, [sp, #40]
  403520:	ldrb	w0, [x0]
  403524:	cbz	w0, 403544 <ferror@plt+0x1654>
  403528:	ldr	x4, [x19]
  40352c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403530:	mov	x3, x20
  403534:	add	x2, x2, #0xe50
  403538:	mov	w1, #0x0                   	// #0
  40353c:	mov	w0, #0x1                   	// #1
  403540:	bl	401b30 <error@plt>
  403544:	ldr	w0, [x19, #8]
  403548:	orr	w0, w0, #0x100
  40354c:	str	w0, [x19, #8]
  403550:	ldp	x19, x20, [sp, #16]
  403554:	ldp	x29, x30, [sp], #48
  403558:	ret
  40355c:	ldr	x4, [x19]
  403560:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403564:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403568:	add	x3, x3, #0xe88
  40356c:	add	x2, x2, #0xdb0
  403570:	mov	w1, #0x0                   	// #0
  403574:	mov	w0, #0x1                   	// #1
  403578:	bl	401b30 <error@plt>
  40357c:	b	403500 <ferror@plt+0x1610>
  403580:	mov	x4, x1
  403584:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403588:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40358c:	add	x3, x3, #0xe88
  403590:	add	x2, x2, #0xe28
  403594:	mov	w1, #0x0                   	// #0
  403598:	mov	w0, #0x1                   	// #1
  40359c:	bl	401b30 <error@plt>
  4035a0:	b	4034f8 <ferror@plt+0x1608>
  4035a4:	nop
  4035a8:	stp	x29, x30, [sp, #-32]!
  4035ac:	mov	x29, sp
  4035b0:	stp	x19, x20, [sp, #16]
  4035b4:	mov	x19, x0
  4035b8:	mov	x20, x1
  4035bc:	cbz	x0, 403628 <ferror@plt+0x1738>
  4035c0:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  4035c4:	mov	x0, x20
  4035c8:	add	x1, x1, #0xec8
  4035cc:	bl	401c60 <strcasecmp@plt>
  4035d0:	cbnz	w0, 4035f4 <ferror@plt+0x1704>
  4035d4:	mov	w0, #0x2                   	// #2
  4035d8:	strh	w0, [x19, #32]
  4035dc:	ldr	w0, [x19, #8]
  4035e0:	orr	w0, w0, #0x4
  4035e4:	str	w0, [x19, #8]
  4035e8:	ldp	x19, x20, [sp, #16]
  4035ec:	ldp	x29, x30, [sp], #32
  4035f0:	ret
  4035f4:	ldr	x4, [x19]
  4035f8:	mov	x3, x20
  4035fc:	mov	w1, #0x0                   	// #0
  403600:	mov	w0, #0x1                   	// #1
  403604:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403608:	add	x2, x2, #0xed0
  40360c:	bl	401b30 <error@plt>
  403610:	ldr	w0, [x19, #8]
  403614:	orr	w0, w0, #0x4
  403618:	str	w0, [x19, #8]
  40361c:	ldp	x19, x20, [sp, #16]
  403620:	ldp	x29, x30, [sp], #32
  403624:	ret
  403628:	mov	x3, x1
  40362c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403630:	mov	w1, #0x0                   	// #0
  403634:	add	x2, x2, #0xe98
  403638:	mov	w0, #0x1                   	// #1
  40363c:	bl	401b30 <error@plt>
  403640:	b	4035c0 <ferror@plt+0x16d0>
  403644:	nop
  403648:	adrp	x5, 42a000 <argp_error@@Base+0x1a650>
  40364c:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  403650:	mvn	w6, w1
  403654:	ldr	w3, [x5, #1548]
  403658:	ldr	w0, [x4, #1544]
  40365c:	cbz	w2, 403674 <ferror@plt+0x1784>
  403660:	orr	w0, w1, w0
  403664:	and	w3, w6, w3
  403668:	str	w0, [x4, #1544]
  40366c:	str	w3, [x5, #1548]
  403670:	ret
  403674:	orr	w3, w1, w3
  403678:	and	w0, w6, w0
  40367c:	str	w3, [x5, #1548]
  403680:	str	w0, [x4, #1544]
  403684:	ret
  403688:	ldrb	w0, [x1]
  40368c:	cbz	w0, 403788 <ferror@plt+0x1898>
  403690:	stp	x29, x30, [sp, #-96]!
  403694:	mov	x29, sp
  403698:	stp	x19, x20, [sp, #16]
  40369c:	stp	x21, x22, [sp, #32]
  4036a0:	mov	x21, x1
  4036a4:	stp	x23, x24, [sp, #48]
  4036a8:	adrp	x24, 42a000 <argp_error@@Base+0x1a650>
  4036ac:	adrp	x23, 42a000 <argp_error@@Base+0x1a650>
  4036b0:	add	x24, x24, #0x60c
  4036b4:	add	x23, x23, #0x608
  4036b8:	stp	x25, x26, [sp, #64]
  4036bc:	adrp	x25, 411000 <argp_error@@Base+0x1650>
  4036c0:	add	x25, x25, #0xf10
  4036c4:	b	403708 <ferror@plt+0x1818>
  4036c8:	ldr	w5, [sp, #92]
  4036cc:	mvn	w2, w19
  4036d0:	ldr	w4, [x23]
  4036d4:	ldr	w3, [x24]
  4036d8:	and	w0, w2, w4
  4036dc:	orr	w1, w19, w3
  4036e0:	cbz	w5, 4036ec <ferror@plt+0x17fc>
  4036e4:	orr	w0, w19, w4
  4036e8:	and	w1, w3, w2
  4036ec:	cmp	x20, #0x0
  4036f0:	str	w1, [x24]
  4036f4:	cset	w1, ne  // ne = any
  4036f8:	str	w0, [x23]
  4036fc:	cinc	x21, x26, ne  // ne = any
  403700:	ldrb	w0, [x26, w1, uxtw]
  403704:	cbz	w0, 403770 <ferror@plt+0x1880>
  403708:	mov	x0, x21
  40370c:	mov	w1, #0x2c                  	// #44
  403710:	bl	401d70 <strchr@plt>
  403714:	mov	x20, x0
  403718:	cbz	x0, 40375c <ferror@plt+0x186c>
  40371c:	sub	x22, x0, x21
  403720:	mov	x26, x0
  403724:	add	x2, sp, #0x5c
  403728:	mov	x1, x22
  40372c:	mov	x0, x21
  403730:	bl	4024c0 <ferror@plt+0x5d0>
  403734:	mov	w19, w0
  403738:	cbnz	w0, 4036c8 <ferror@plt+0x17d8>
  40373c:	mov	x5, x21
  403740:	mov	w4, w22
  403744:	mov	w3, w22
  403748:	mov	x2, x25
  40374c:	mov	w1, #0x0                   	// #0
  403750:	mov	w0, #0x1                   	// #1
  403754:	bl	401b30 <error@plt>
  403758:	b	4036c8 <ferror@plt+0x17d8>
  40375c:	mov	x0, x21
  403760:	bl	401b00 <strlen@plt>
  403764:	mov	x22, x0
  403768:	add	x26, x21, x0
  40376c:	b	403724 <ferror@plt+0x1834>
  403770:	ldp	x19, x20, [sp, #16]
  403774:	ldp	x21, x22, [sp, #32]
  403778:	ldp	x23, x24, [sp, #48]
  40377c:	ldp	x25, x26, [sp, #64]
  403780:	ldp	x29, x30, [sp], #96
  403784:	ret
  403788:	ret
  40378c:	nop
  403790:	stp	x29, x30, [sp, #-32]!
  403794:	mov	x29, sp
  403798:	stp	x19, x20, [sp, #16]
  40379c:	mov	x19, x0
  4037a0:	mov	x20, x1
  4037a4:	cbz	x0, 403810 <ferror@plt+0x1920>
  4037a8:	ldr	w0, [x19, #8]
  4037ac:	tbnz	w0, #5, 4037e8 <ferror@plt+0x18f8>
  4037b0:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4037b4:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  4037b8:	orr	w0, w0, #0x20
  4037bc:	str	w0, [x19, #8]
  4037c0:	ldr	w1, [x3, #1548]
  4037c4:	ldr	w0, [x2, #1544]
  4037c8:	str	x20, [x19, #56]
  4037cc:	orr	w1, w1, #0x10
  4037d0:	and	w0, w0, #0xffffffef
  4037d4:	str	w1, [x3, #1548]
  4037d8:	str	w0, [x2, #1544]
  4037dc:	ldp	x19, x20, [sp, #16]
  4037e0:	ldp	x29, x30, [sp], #32
  4037e4:	ret
  4037e8:	ldr	x4, [x19]
  4037ec:	mov	w0, #0x1                   	// #1
  4037f0:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  4037f4:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4037f8:	add	x3, x3, #0xde0
  4037fc:	add	x2, x2, #0xdb0
  403800:	mov	w1, #0x0                   	// #0
  403804:	bl	401b30 <error@plt>
  403808:	ldr	w0, [x19, #8]
  40380c:	b	4037b0 <ferror@plt+0x18c0>
  403810:	mov	x4, x1
  403814:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403818:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40381c:	add	x3, x3, #0xde0
  403820:	add	x2, x2, #0xd88
  403824:	mov	w1, #0x0                   	// #0
  403828:	mov	w0, #0x1                   	// #1
  40382c:	bl	401b30 <error@plt>
  403830:	b	4037a8 <ferror@plt+0x18b8>
  403834:	nop
  403838:	stp	x29, x30, [sp, #-32]!
  40383c:	mov	x29, sp
  403840:	stp	x19, x20, [sp, #16]
  403844:	mov	x20, x0
  403848:	cbz	x0, 403890 <ferror@plt+0x19a0>
  40384c:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  403850:	add	x19, x0, #0x400
  403854:	ldr	x1, [x0, #1024]
  403858:	cbnz	x1, 403868 <ferror@plt+0x1978>
  40385c:	b	403874 <ferror@plt+0x1984>
  403860:	ldr	x1, [x19, #24]!
  403864:	cbz	x1, 403874 <ferror@plt+0x1984>
  403868:	mov	x0, x20
  40386c:	bl	401cf0 <strcmp@plt>
  403870:	cbnz	w0, 403860 <ferror@plt+0x1970>
  403874:	ldr	x0, [x19, #16]
  403878:	cbz	x0, 4038ac <ferror@plt+0x19bc>
  40387c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403880:	ldp	x19, x20, [sp, #16]
  403884:	str	x0, [x1, #1560]
  403888:	ldp	x29, x30, [sp], #32
  40388c:	ret
  403890:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403894:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  403898:	add	x0, x0, #0xf28
  40389c:	ldr	x20, [x1, #1160]
  4038a0:	cmp	x20, #0x0
  4038a4:	csel	x20, x0, x20, eq  // eq = none
  4038a8:	b	40384c <ferror@plt+0x195c>
  4038ac:	mov	x3, x20
  4038b0:	mov	w1, #0x0                   	// #0
  4038b4:	mov	w0, #0x1                   	// #1
  4038b8:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4038bc:	add	x2, x2, #0xf30
  4038c0:	bl	401b30 <error@plt>
  4038c4:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  4038c8:	ldr	x0, [x19, #16]
  4038cc:	str	x0, [x1, #1560]
  4038d0:	ldp	x19, x20, [sp, #16]
  4038d4:	ldp	x29, x30, [sp], #32
  4038d8:	ret
  4038dc:	nop
  4038e0:	stp	x29, x30, [sp, #-64]!
  4038e4:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  4038e8:	add	x1, x1, #0xe80
  4038ec:	mov	x29, sp
  4038f0:	stp	x19, x20, [sp, #16]
  4038f4:	mov	x19, x0
  4038f8:	stp	x21, x22, [sp, #32]
  4038fc:	stp	xzr, xzr, [sp, #48]
  403900:	bl	401bd0 <fopen@plt>
  403904:	mov	x22, x0
  403908:	cbz	x0, 403ab0 <ferror@plt+0x1bc0>
  40390c:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  403910:	add	x21, x21, #0x500
  403914:	adrp	x4, 401000 <memcpy@plt-0xaa0>
  403918:	adrp	x3, 401000 <memcpy@plt-0xaa0>
  40391c:	mov	x0, x21
  403920:	add	x4, x4, #0xd30
  403924:	add	x3, x3, #0xbe0
  403928:	mov	x2, #0x0                   	// #0
  40392c:	mov	x1, #0x0                   	// #0
  403930:	bl	40c120 <_obstack_begin@@Base>
  403934:	nop
  403938:	mov	x3, x22
  40393c:	add	x1, sp, #0x38
  403940:	add	x0, sp, #0x30
  403944:	mov	w2, #0xa                   	// #10
  403948:	bl	401ec0 <__getdelim@plt>
  40394c:	cmp	x0, #0x0
  403950:	b.le	4039e8 <ferror@plt+0x1af8>
  403954:	ldr	x20, [sp, #48]
  403958:	mov	x0, x20
  40395c:	bl	401b00 <strlen@plt>
  403960:	mov	x19, x0
  403964:	cbz	x0, 403938 <ferror@plt+0x1a48>
  403968:	sub	x0, x0, #0x1
  40396c:	ldrb	w1, [x20, x0]
  403970:	cmp	w1, #0xa
  403974:	b.eq	403a68 <ferror@plt+0x1b78>  // b.none
  403978:	add	x0, x20, x19
  40397c:	mov	x2, x20
  403980:	cmp	x2, x0
  403984:	b.eq	4039a4 <ferror@plt+0x1ab4>  // b.none
  403988:	ldrb	w1, [x2], #1
  40398c:	cmp	w1, #0x20
  403990:	b.eq	403980 <ferror@plt+0x1a90>  // b.none
  403994:	cmp	w1, #0x23
  403998:	b.eq	403938 <ferror@plt+0x1a48>  // b.none
  40399c:	cmp	w1, #0x9
  4039a0:	b.eq	403980 <ferror@plt+0x1a90>  // b.none
  4039a4:	ldp	x0, x1, [x21, #24]
  4039a8:	sub	x1, x1, x0
  4039ac:	cmp	x1, x19
  4039b0:	b.cc	403a74 <ferror@plt+0x1b84>  // b.lo, b.ul, b.last
  4039b4:	mov	x1, x20
  4039b8:	mov	x2, x19
  4039bc:	bl	401aa0 <memcpy@plt>
  4039c0:	ldr	x0, [x21, #24]
  4039c4:	mov	x3, x22
  4039c8:	add	x1, sp, #0x38
  4039cc:	mov	w2, #0xa                   	// #10
  4039d0:	add	x0, x0, x19
  4039d4:	str	x0, [x21, #24]
  4039d8:	add	x0, sp, #0x30
  4039dc:	bl	401ec0 <__getdelim@plt>
  4039e0:	cmp	x0, #0x0
  4039e4:	b.gt	403954 <ferror@plt+0x1a64>
  4039e8:	ldr	x0, [sp, #48]
  4039ec:	bl	401d30 <free@plt>
  4039f0:	mov	x0, x22
  4039f4:	bl	401bc0 <fclose@plt>
  4039f8:	ldp	x0, x1, [x21, #24]
  4039fc:	cmp	x1, x0
  403a00:	b.eq	403a9c <ferror@plt+0x1bac>  // b.none
  403a04:	add	x1, x0, #0x1
  403a08:	str	x1, [x21, #24]
  403a0c:	strb	wzr, [x0]
  403a10:	ldp	x3, x2, [x21, #16]
  403a14:	cmp	x2, x3
  403a18:	b.eq	403a8c <ferror@plt+0x1b9c>  // b.none
  403a1c:	ldr	x0, [x21, #48]
  403a20:	ldr	x1, [x21, #8]
  403a24:	add	x2, x2, x0
  403a28:	ldr	x4, [x21, #32]
  403a2c:	bic	x0, x2, x0
  403a30:	str	x0, [x21, #24]
  403a34:	sub	x2, x0, x1
  403a38:	sub	x1, x4, x1
  403a3c:	cmp	x2, x1
  403a40:	b.ls	403a4c <ferror@plt+0x1b5c>  // b.plast
  403a44:	mov	x0, x4
  403a48:	str	x4, [x21, #24]
  403a4c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403a50:	str	x0, [x21, #16]
  403a54:	ldp	x19, x20, [sp, #16]
  403a58:	str	x3, [x1, #1560]
  403a5c:	ldp	x21, x22, [sp, #32]
  403a60:	ldp	x29, x30, [sp], #64
  403a64:	ret
  403a68:	cbz	x0, 403938 <ferror@plt+0x1a48>
  403a6c:	mov	x19, x0
  403a70:	b	403978 <ferror@plt+0x1a88>
  403a74:	mov	x0, x21
  403a78:	mov	x1, x19
  403a7c:	bl	40c308 <_obstack_newchunk@@Base>
  403a80:	ldr	x0, [x21, #24]
  403a84:	ldr	x20, [sp, #48]
  403a88:	b	4039b4 <ferror@plt+0x1ac4>
  403a8c:	ldrb	w0, [x21, #80]
  403a90:	orr	w0, w0, #0x2
  403a94:	strb	w0, [x21, #80]
  403a98:	b	403a1c <ferror@plt+0x1b2c>
  403a9c:	mov	x0, x21
  403aa0:	mov	x1, #0x1                   	// #1
  403aa4:	bl	40c308 <_obstack_newchunk@@Base>
  403aa8:	ldr	x0, [x21, #24]
  403aac:	b	403a04 <ferror@plt+0x1b14>
  403ab0:	bl	401ea0 <__errno_location@plt>
  403ab4:	mov	x1, x0
  403ab8:	mov	x3, x19
  403abc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403ac0:	mov	w0, #0x1                   	// #1
  403ac4:	add	x2, x2, #0xf50
  403ac8:	ldr	w1, [x1]
  403acc:	bl	401b30 <error@plt>
  403ad0:	b	40390c <ferror@plt+0x1a1c>
  403ad4:	nop
  403ad8:	stp	x29, x30, [sp, #-48]!
  403adc:	cmp	w0, #0x6d
  403ae0:	mov	x29, sp
  403ae4:	ldr	x3, [x2, #40]
  403ae8:	stp	x19, x20, [sp, #16]
  403aec:	mov	x20, x1
  403af0:	ldr	x19, [x3]
  403af4:	b.eq	403d74 <ferror@plt+0x1e84>  // b.none
  403af8:	b.gt	403bb0 <ferror@plt+0x1cc0>
  403afc:	cmp	w0, #0x61
  403b00:	b.eq	403cfc <ferror@plt+0x1e0c>  // b.none
  403b04:	b.le	403b8c <ferror@plt+0x1c9c>
  403b08:	cmp	w0, #0x69
  403b0c:	b.eq	403d10 <ferror@plt+0x1e20>  // b.none
  403b10:	b.le	403b3c <ferror@plt+0x1c4c>
  403b14:	cmp	w0, #0x6c
  403b18:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403b1c:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  403b20:	mov	w0, #0x0                   	// #0
  403b24:	ldr	w1, [x2, #1580]
  403b28:	add	w1, w1, #0x1
  403b2c:	str	w1, [x2, #1580]
  403b30:	ldp	x19, x20, [sp, #16]
  403b34:	ldp	x29, x30, [sp], #48
  403b38:	ret
  403b3c:	cmp	w0, #0x62
  403b40:	b.eq	403c70 <ferror@plt+0x1d80>  // b.none
  403b44:	cmp	w0, #0x64
  403b48:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403b4c:	cbz	x19, 403efc <ferror@plt+0x200c>
  403b50:	ldr	w0, [x19, #8]
  403b54:	tbnz	w0, #5, 403eb8 <ferror@plt+0x1fc8>
  403b58:	adrp	x5, 42a000 <argp_error@@Base+0x1a650>
  403b5c:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  403b60:	orr	w1, w0, #0x20
  403b64:	mov	w0, #0x0                   	// #0
  403b68:	ldr	w3, [x5, #1548]
  403b6c:	ldr	w2, [x4, #1544]
  403b70:	orr	w3, w3, #0x10
  403b74:	str	w3, [x5, #1548]
  403b78:	and	w2, w2, #0xffffffef
  403b7c:	str	w2, [x4, #1544]
  403b80:	str	w1, [x19, #8]
  403b84:	str	x20, [x19, #56]
  403b88:	b	403b30 <ferror@plt+0x1c40>
  403b8c:	cmp	w0, #0x46
  403b90:	b.eq	403e30 <ferror@plt+0x1f40>  // b.none
  403b94:	b.le	403be4 <ferror@plt+0x1cf4>
  403b98:	cmp	w0, #0x4d
  403b9c:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403ba0:	mov	x0, x19
  403ba4:	bl	403418 <ferror@plt+0x1528>
  403ba8:	mov	w0, #0x0                   	// #0
  403bac:	b	403b30 <ferror@plt+0x1c40>
  403bb0:	cmp	w0, #0x101
  403bb4:	b.eq	403dac <ferror@plt+0x1ebc>  // b.none
  403bb8:	b.le	403c44 <ferror@plt+0x1d54>
  403bbc:	cmp	w0, #0x103
  403bc0:	b.eq	403e08 <ferror@plt+0x1f18>  // b.none
  403bc4:	mov	w1, #0x3                   	// #3
  403bc8:	movk	w1, #0x100, lsl #16
  403bcc:	cmp	w0, w1
  403bd0:	b.ne	403c0c <ferror@plt+0x1d1c>  // b.any
  403bd4:	ldr	x1, [x2, #48]
  403bd8:	mov	w0, #0x0                   	// #0
  403bdc:	str	x3, [x1]
  403be0:	b	403b30 <ferror@plt+0x1c40>
  403be4:	cmp	w0, #0x41
  403be8:	b.ne	403c68 <ferror@plt+0x1d78>  // b.any
  403bec:	cbz	x19, 403f68 <ferror@plt+0x2078>
  403bf0:	ldr	w0, [x19, #8]
  403bf4:	tbnz	w0, #3, 403e90 <ferror@plt+0x1fa0>
  403bf8:	orr	w1, w0, #0x8
  403bfc:	mov	w0, #0x0                   	// #0
  403c00:	str	w1, [x19, #8]
  403c04:	str	x20, [x19, #40]
  403c08:	b	403b30 <ferror@plt+0x1c40>
  403c0c:	cmp	w0, #0x102
  403c10:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403c14:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  403c18:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  403c1c:	mov	w6, #0x41                  	// #65
  403c20:	mov	w5, #0xffffffbe            	// #-66
  403c24:	ldr	w2, [x4, #1548]
  403c28:	mov	w0, #0x0                   	// #0
  403c2c:	ldr	w1, [x3, #1544]
  403c30:	orr	w2, w2, w6
  403c34:	str	w2, [x4, #1548]
  403c38:	and	w1, w1, w5
  403c3c:	str	w1, [x3, #1544]
  403c40:	b	403b30 <ferror@plt+0x1c40>
  403c44:	cmp	w0, #0x76
  403c48:	b.eq	403d94 <ferror@plt+0x1ea4>  // b.none
  403c4c:	b.le	403c90 <ferror@plt+0x1da0>
  403c50:	cmp	w0, #0x100
  403c54:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403c58:	mov	x0, x19
  403c5c:	bl	4034e0 <ferror@plt+0x15f0>
  403c60:	mov	w0, #0x0                   	// #0
  403c64:	b	403b30 <ferror@plt+0x1c40>
  403c68:	cmp	w0, #0x42
  403c6c:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403c70:	cbz	x19, 403f20 <ferror@plt+0x2030>
  403c74:	ldr	w0, [x19, #8]
  403c78:	tbnz	w0, #6, 403e68 <ferror@plt+0x1f78>
  403c7c:	orr	w1, w0, #0x40
  403c80:	mov	w0, #0x0                   	// #0
  403c84:	str	w1, [x19, #8]
  403c88:	str	x20, [x19, #64]
  403c8c:	b	403b30 <ferror@plt+0x1c40>
  403c90:	cmp	w0, #0x70
  403c94:	b.eq	403b4c <ferror@plt+0x1c5c>  // b.none
  403c98:	cmp	w0, #0x73
  403c9c:	b.ne	403cec <ferror@plt+0x1dfc>  // b.any
  403ca0:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  403ca4:	adrp	x20, 411000 <argp_error@@Base+0x1650>
  403ca8:	add	x19, x0, #0x400
  403cac:	add	x20, x20, #0xf70
  403cb0:	ldr	x1, [x0, #1024]
  403cb4:	cbz	x1, 403ccc <ferror@plt+0x1ddc>
  403cb8:	mov	x0, x20
  403cbc:	bl	401cf0 <strcmp@plt>
  403cc0:	cbz	w0, 403ccc <ferror@plt+0x1ddc>
  403cc4:	ldr	x1, [x19, #24]!
  403cc8:	cbnz	x1, 403cb8 <ferror@plt+0x1dc8>
  403ccc:	ldr	x1, [x19, #16]
  403cd0:	cbz	x1, 403f8c <ferror@plt+0x209c>
  403cd4:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  403cd8:	mov	w0, #0x0                   	// #0
  403cdc:	ldp	x19, x20, [sp, #16]
  403ce0:	str	x1, [x2, #1560]
  403ce4:	ldp	x29, x30, [sp], #48
  403ce8:	ret
  403cec:	mov	w0, #0x7                   	// #7
  403cf0:	ldp	x19, x20, [sp, #16]
  403cf4:	ldp	x29, x30, [sp], #48
  403cf8:	ret
  403cfc:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403d00:	mov	w2, #0x1                   	// #1
  403d04:	mov	w0, #0x0                   	// #0
  403d08:	str	w2, [x1, #1568]
  403d0c:	b	403b30 <ferror@plt+0x1c40>
  403d10:	cbz	x19, 403d50 <ferror@plt+0x1e60>
  403d14:	ldr	w0, [x19, #8]
  403d18:	cbnz	w0, 403d50 <ferror@plt+0x1e60>
  403d1c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403d20:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  403d24:	ldr	d1, [x19, #80]
  403d28:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  403d2c:	ldr	s0, [x1, #1548]
  403d30:	mov	w1, #0x2                   	// #2
  403d34:	ldr	s2, [x3, #1544]
  403d38:	ldr	x0, [x0, #1560]
  403d3c:	str	w1, [x19, #8]
  403d40:	mov	v0.s[1], v2.s[0]
  403d44:	str	x0, [x19, #24]
  403d48:	orr	v0.8b, v1.8b, v0.8b
  403d4c:	str	d0, [x19, #80]
  403d50:	mov	x0, x20
  403d54:	str	x2, [sp, #40]
  403d58:	bl	4030e0 <ferror@plt+0x11f0>
  403d5c:	mov	x3, x0
  403d60:	ldr	x2, [sp, #40]
  403d64:	mov	w0, #0x0                   	// #0
  403d68:	ldr	x1, [x2, #40]
  403d6c:	str	x3, [x1]
  403d70:	b	403b30 <ferror@plt+0x1c40>
  403d74:	cbz	x19, 403f44 <ferror@plt+0x2054>
  403d78:	ldr	w0, [x19, #8]
  403d7c:	tbnz	w0, #4, 403e40 <ferror@plt+0x1f50>
  403d80:	orr	w1, w0, #0x10
  403d84:	mov	w0, #0x0                   	// #0
  403d88:	str	w1, [x19, #8]
  403d8c:	str	x20, [x19, #48]
  403d90:	b	403b30 <ferror@plt+0x1c40>
  403d94:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  403d98:	mov	w0, #0x0                   	// #0
  403d9c:	ldr	w1, [x2, #1576]
  403da0:	add	w1, w1, #0x1
  403da4:	str	w1, [x2, #1576]
  403da8:	b	403b30 <ferror@plt+0x1c40>
  403dac:	cbz	x1, 403ee0 <ferror@plt+0x1ff0>
  403db0:	ldrb	w0, [x1]
  403db4:	cmp	w0, #0x40
  403db8:	b.eq	403fac <ferror@plt+0x20bc>  // b.none
  403dbc:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  403dc0:	add	x19, x0, #0x400
  403dc4:	ldr	x1, [x0, #1024]
  403dc8:	cbnz	x1, 403dd8 <ferror@plt+0x1ee8>
  403dcc:	b	403de4 <ferror@plt+0x1ef4>
  403dd0:	ldr	x1, [x19, #24]!
  403dd4:	cbz	x1, 403de4 <ferror@plt+0x1ef4>
  403dd8:	mov	x0, x20
  403ddc:	bl	401cf0 <strcmp@plt>
  403de0:	cbnz	w0, 403dd0 <ferror@plt+0x1ee0>
  403de4:	ldr	x1, [x19, #16]
  403de8:	cbnz	x1, 403cd4 <ferror@plt+0x1de4>
  403dec:	mov	x3, x20
  403df0:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403df4:	mov	w0, #0x1                   	// #1
  403df8:	add	x2, x2, #0xf30
  403dfc:	bl	401b30 <error@plt>
  403e00:	ldr	x1, [x19, #16]
  403e04:	b	403cd4 <ferror@plt+0x1de4>
  403e08:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  403e0c:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  403e10:	mov	w0, #0x0                   	// #0
  403e14:	ldr	w2, [x4, #1544]
  403e18:	ldr	w1, [x3, #1548]
  403e1c:	orr	w2, w2, #0x1
  403e20:	str	w2, [x4, #1544]
  403e24:	and	w1, w1, #0xfffffffe
  403e28:	str	w1, [x3, #1548]
  403e2c:	b	403b30 <ferror@plt+0x1c40>
  403e30:	mov	x0, x19
  403e34:	bl	403688 <ferror@plt+0x1798>
  403e38:	mov	w0, #0x0                   	// #0
  403e3c:	b	403b30 <ferror@plt+0x1c40>
  403e40:	ldr	x4, [x19]
  403e44:	mov	w0, #0x1                   	// #1
  403e48:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403e4c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403e50:	add	x3, x3, #0xdd8
  403e54:	add	x2, x2, #0xdb0
  403e58:	mov	w1, #0x0                   	// #0
  403e5c:	bl	401b30 <error@plt>
  403e60:	ldr	w0, [x19, #8]
  403e64:	b	403d80 <ferror@plt+0x1e90>
  403e68:	ldr	x4, [x19]
  403e6c:	mov	w0, #0x1                   	// #1
  403e70:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403e74:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403e78:	add	x3, x3, #0xe00
  403e7c:	add	x2, x2, #0xdb0
  403e80:	mov	w1, #0x0                   	// #0
  403e84:	bl	401b30 <error@plt>
  403e88:	ldr	w0, [x19, #8]
  403e8c:	b	403c7c <ferror@plt+0x1d8c>
  403e90:	ldr	x4, [x19]
  403e94:	mov	w0, #0x1                   	// #1
  403e98:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403e9c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403ea0:	add	x3, x3, #0xd80
  403ea4:	add	x2, x2, #0xdb0
  403ea8:	mov	w1, #0x0                   	// #0
  403eac:	bl	401b30 <error@plt>
  403eb0:	ldr	w0, [x19, #8]
  403eb4:	b	403bf8 <ferror@plt+0x1d08>
  403eb8:	ldr	x4, [x19]
  403ebc:	mov	w0, #0x1                   	// #1
  403ec0:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403ec4:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403ec8:	add	x3, x3, #0xde0
  403ecc:	add	x2, x2, #0xdb0
  403ed0:	mov	w1, #0x0                   	// #0
  403ed4:	bl	401b30 <error@plt>
  403ed8:	ldr	w0, [x19, #8]
  403edc:	b	403b58 <ferror@plt+0x1c68>
  403ee0:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403ee4:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  403ee8:	add	x0, x0, #0xf28
  403eec:	ldr	x20, [x1, #1160]
  403ef0:	cmp	x20, #0x0
  403ef4:	csel	x20, x0, x20, eq  // eq = none
  403ef8:	b	403dbc <ferror@plt+0x1ecc>
  403efc:	mov	x4, x20
  403f00:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403f04:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403f08:	add	x3, x3, #0xde0
  403f0c:	add	x2, x2, #0xd88
  403f10:	mov	w1, #0x0                   	// #0
  403f14:	mov	w0, #0x1                   	// #1
  403f18:	bl	401b30 <error@plt>
  403f1c:	b	403b50 <ferror@plt+0x1c60>
  403f20:	mov	x4, x20
  403f24:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403f28:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403f2c:	add	x3, x3, #0xe00
  403f30:	add	x2, x2, #0xd88
  403f34:	mov	w1, #0x0                   	// #0
  403f38:	mov	w0, #0x1                   	// #1
  403f3c:	bl	401b30 <error@plt>
  403f40:	b	403c74 <ferror@plt+0x1d84>
  403f44:	mov	x4, x1
  403f48:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403f4c:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403f50:	add	x3, x3, #0xdd8
  403f54:	add	x2, x2, #0xd88
  403f58:	mov	w1, #0x0                   	// #0
  403f5c:	mov	w0, #0x1                   	// #1
  403f60:	bl	401b30 <error@plt>
  403f64:	b	403d78 <ferror@plt+0x1e88>
  403f68:	mov	x4, x1
  403f6c:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403f70:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403f74:	add	x3, x3, #0xd80
  403f78:	add	x2, x2, #0xd88
  403f7c:	mov	w1, #0x0                   	// #0
  403f80:	mov	w0, #0x1                   	// #1
  403f84:	bl	401b30 <error@plt>
  403f88:	b	403bf0 <ferror@plt+0x1d00>
  403f8c:	adrp	x3, 411000 <argp_error@@Base+0x1650>
  403f90:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  403f94:	add	x3, x3, #0xf70
  403f98:	add	x2, x2, #0xf30
  403f9c:	mov	w0, #0x1                   	// #1
  403fa0:	bl	401b30 <error@plt>
  403fa4:	ldr	x1, [x19, #16]
  403fa8:	b	403cd4 <ferror@plt+0x1de4>
  403fac:	add	x0, x1, #0x1
  403fb0:	bl	4038e0 <ferror@plt+0x19f0>
  403fb4:	mov	w0, #0x0                   	// #0
  403fb8:	b	403b30 <ferror@plt+0x1c40>
  403fbc:	nop
  403fc0:	cbz	x0, 404000 <ferror@plt+0x2110>
  403fc4:	ldr	w1, [x0, #8]
  403fc8:	cbnz	w1, 404000 <ferror@plt+0x2110>
  403fcc:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  403fd0:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  403fd4:	ldr	d1, [x0, #80]
  403fd8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  403fdc:	ldr	s0, [x2, #1548]
  403fe0:	mov	w2, #0x2                   	// #2
  403fe4:	ldr	s2, [x3, #1544]
  403fe8:	ldr	x1, [x1, #1560]
  403fec:	str	w2, [x0, #8]
  403ff0:	mov	v0.s[1], v2.s[0]
  403ff4:	str	x1, [x0, #24]
  403ff8:	orr	v0.8b, v1.8b, v0.8b
  403ffc:	str	d0, [x0, #80]
  404000:	ret
  404004:	nop
  404008:	stp	x29, x30, [sp, #-80]!
  40400c:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  404010:	mov	x29, sp
  404014:	stp	x21, x22, [sp, #32]
  404018:	adrp	x21, 429000 <argp_error@@Base+0x19650>
  40401c:	stp	x19, x20, [sp, #16]
  404020:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  404024:	ldr	x22, [x2, #1160]
  404028:	stp	x23, x24, [sp, #48]
  40402c:	mov	x24, x1
  404030:	ldr	x1, [x21, #1024]
  404034:	cmp	x22, #0x0
  404038:	ldr	x2, [x19, #1536]
  40403c:	str	x2, [sp, #72]
  404040:	add	x21, x21, #0x400
  404044:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  404048:	add	x2, x2, #0xf28
  40404c:	mov	w23, w0
  404050:	mov	x20, x21
  404054:	csel	x22, x2, x22, eq  // eq = none
  404058:	cbnz	x1, 404068 <ferror@plt+0x2178>
  40405c:	b	404074 <ferror@plt+0x2184>
  404060:	ldr	x1, [x20, #24]!
  404064:	cbz	x1, 404074 <ferror@plt+0x2184>
  404068:	mov	x0, x22
  40406c:	bl	401cf0 <strcmp@plt>
  404070:	cbnz	w0, 404060 <ferror@plt+0x2170>
  404074:	ldr	x2, [x20, #16]
  404078:	cbz	x2, 4042bc <ferror@plt+0x23cc>
  40407c:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404080:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404084:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  404088:	add	x1, x1, #0xf78
  40408c:	str	x2, [x20, #1560]
  404090:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  404094:	str	x1, [x3, #1624]
  404098:	add	x0, x0, #0xf90
  40409c:	add	x1, x21, #0x120
  4040a0:	bl	40ae78 <argp_parse@@Base+0xce8>
  4040a4:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  4040a8:	add	x1, x1, #0x3c8
  4040ac:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  4040b0:	adrp	x6, 42a000 <argp_error@@Base+0x1a650>
  4040b4:	add	x6, x6, #0x500
  4040b8:	add	x0, x21, #0x130
  4040bc:	ldp	x10, x11, [x1]
  4040c0:	add	x7, x6, #0x58
  4040c4:	ldp	x8, x9, [x1, #16]
  4040c8:	add	x5, sp, #0x48
  4040cc:	ldr	x12, [x2, #1152]
  4040d0:	add	x4, sp, #0x44
  4040d4:	mov	x2, x24
  4040d8:	mov	w1, w23
  4040dc:	mov	w3, #0x8                   	// #8
  4040e0:	str	x12, [x0, #16]
  4040e4:	str	x7, [x0, #32]
  4040e8:	stp	x10, x11, [x6, #88]
  4040ec:	stp	x8, x9, [x6, #104]
  4040f0:	bl	40a190 <argp_parse@@Base>
  4040f4:	ldr	x0, [sp, #72]
  4040f8:	cbz	x0, 404104 <ferror@plt+0x2214>
  4040fc:	ldr	w1, [x0, #8]
  404100:	cbz	w1, 40412c <ferror@plt+0x223c>
  404104:	ldr	w1, [sp, #68]
  404108:	cmp	w1, w23
  40410c:	b.lt	404168 <ferror@plt+0x2278>  // b.tstop
  404110:	ldr	x0, [x19, #1536]
  404114:	cbz	x0, 4041c8 <ferror@plt+0x22d8>
  404118:	ldp	x19, x20, [sp, #16]
  40411c:	ldp	x21, x22, [sp, #32]
  404120:	ldp	x23, x24, [sp, #48]
  404124:	ldp	x29, x30, [sp], #80
  404128:	ret
  40412c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404130:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404134:	ldr	d1, [x0, #80]
  404138:	mov	w2, #0x2                   	// #2
  40413c:	ldr	s2, [x1, #1544]
  404140:	ldr	s0, [x3, #1548]
  404144:	ldr	x1, [x20, #1560]
  404148:	str	w2, [x0, #8]
  40414c:	mov	v0.s[1], v2.s[0]
  404150:	str	x1, [x0, #24]
  404154:	ldr	w1, [sp, #68]
  404158:	cmp	w1, w23
  40415c:	orr	v0.8b, v1.8b, v0.8b
  404160:	str	d0, [x0, #80]
  404164:	b.ge	404110 <ferror@plt+0x2220>  // b.tcont
  404168:	add	x2, x24, w1, sxtw #3
  40416c:	add	x0, sp, #0x48
  404170:	sub	w1, w23, w1
  404174:	bl	409778 <ferror@plt+0x7888>
  404178:	cbz	w0, 4042dc <ferror@plt+0x23ec>
  40417c:	ldr	x0, [sp, #72]
  404180:	cbz	x0, 404110 <ferror@plt+0x2220>
  404184:	ldr	w1, [x0, #8]
  404188:	cbnz	w1, 404110 <ferror@plt+0x2220>
  40418c:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404190:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404194:	ldr	d1, [x0, #80]
  404198:	mov	w2, #0x2                   	// #2
  40419c:	ldr	s2, [x1, #1544]
  4041a0:	ldr	s0, [x3, #1548]
  4041a4:	ldr	x1, [x20, #1560]
  4041a8:	str	w2, [x0, #8]
  4041ac:	mov	v0.s[1], v2.s[0]
  4041b0:	str	x1, [x0, #24]
  4041b4:	orr	v0.8b, v1.8b, v0.8b
  4041b8:	str	d0, [x0, #80]
  4041bc:	ldr	x0, [x19, #1536]
  4041c0:	cbnz	x0, 404118 <ferror@plt+0x2228>
  4041c4:	nop
  4041c8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4041cc:	ldr	x0, [x0, #960]
  4041d0:	blr	x0
  4041d4:	mov	x23, x0
  4041d8:	cbz	x0, 4042f4 <ferror@plt+0x2404>
  4041dc:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4041e0:	adrp	x21, 411000 <argp_error@@Base+0x1650>
  4041e4:	adrp	x22, 413000 <argp_error@@Base+0x3650>
  4041e8:	add	x24, x0, #0x610
  4041ec:	ldr	w13, [x0, #1552]
  4041f0:	add	x21, x21, #0xd50
  4041f4:	ldr	x12, [x19, #1536]
  4041f8:	add	x22, x22, #0x2b0
  4041fc:	b	404274 <ferror@plt+0x2384>
  404200:	str	w2, [x24]
  404204:	bl	401c70 <realloc@plt>
  404208:	str	x0, [x19, #1536]
  40420c:	mov	x12, x0
  404210:	cbz	x0, 40430c <ferror@plt+0x241c>
  404214:	ldr	w13, [x24]
  404218:	mov	x1, #0xffffffffffffffa8    	// #-88
  40421c:	mov	w0, #0x58                  	// #88
  404220:	add	x23, x23, #0x10
  404224:	ldp	x6, x7, [x22]
  404228:	mov	w14, #0x2                   	// #2
  40422c:	smaddl	x0, w13, w0, x1
  404230:	ldp	x4, x5, [x22, #16]
  404234:	add	x1, x12, x0
  404238:	ldp	x2, x3, [x22, #32]
  40423c:	stp	x6, x7, [x1]
  404240:	ldp	x8, x9, [x22, #48]
  404244:	stp	x4, x5, [x1, #16]
  404248:	ldp	x10, x11, [x22, #64]
  40424c:	stp	x2, x3, [x1, #32]
  404250:	ldr	x6, [x22, #80]
  404254:	stp	x8, x9, [x1, #48]
  404258:	stp	x10, x11, [x1, #64]
  40425c:	str	x6, [x1, #80]
  404260:	ldr	x2, [x20, #1560]
  404264:	ldur	x3, [x23, #-8]
  404268:	str	x3, [x12, x0]
  40426c:	str	w14, [x1, #8]
  404270:	str	x2, [x1, #24]
  404274:	ldr	w3, [x23]
  404278:	add	w2, w13, #0x1
  40427c:	mov	w1, #0x58                  	// #88
  404280:	mov	x0, x12
  404284:	smull	x1, w2, w1
  404288:	cbnz	w3, 404200 <ferror@plt+0x2310>
  40428c:	ldr	x3, [x23, #8]
  404290:	cbnz	x3, 404200 <ferror@plt+0x2310>
  404294:	sxtw	x1, w13
  404298:	mov	x2, #0x58                  	// #88
  40429c:	adrp	x3, 403000 <ferror@plt+0x1110>
  4042a0:	add	x3, x3, #0x48
  4042a4:	bl	401b80 <qsort@plt>
  4042a8:	ldp	x19, x20, [sp, #16]
  4042ac:	ldp	x21, x22, [sp, #32]
  4042b0:	ldp	x23, x24, [sp, #48]
  4042b4:	ldp	x29, x30, [sp], #80
  4042b8:	ret
  4042bc:	mov	x3, x22
  4042c0:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4042c4:	mov	w1, #0x0                   	// #0
  4042c8:	add	x2, x2, #0xf30
  4042cc:	mov	w0, #0x1                   	// #1
  4042d0:	bl	401b30 <error@plt>
  4042d4:	ldr	x2, [x20, #16]
  4042d8:	b	40407c <ferror@plt+0x218c>
  4042dc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4042e0:	mov	w1, #0x0                   	// #0
  4042e4:	add	x2, x2, #0xfa0
  4042e8:	mov	w0, #0x1                   	// #1
  4042ec:	bl	401b30 <error@plt>
  4042f0:	b	40417c <ferror@plt+0x228c>
  4042f4:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  4042f8:	mov	w1, #0x0                   	// #0
  4042fc:	add	x2, x2, #0xfb8
  404300:	mov	w0, #0x1                   	// #1
  404304:	bl	401b30 <error@plt>
  404308:	b	4041dc <ferror@plt+0x22ec>
  40430c:	bl	401ea0 <__errno_location@plt>
  404310:	mov	x1, x0
  404314:	mov	x2, x21
  404318:	mov	w0, #0x1                   	// #1
  40431c:	ldr	w1, [x1]
  404320:	bl	401b30 <error@plt>
  404324:	ldr	x12, [x19, #1536]
  404328:	b	404214 <ferror@plt+0x2324>
  40432c:	nop
  404330:	ret
  404334:	nop
  404338:	stp	x29, x30, [sp, #-64]!
  40433c:	mov	x29, sp
  404340:	stp	x19, x20, [sp, #16]
  404344:	mov	w19, w1
  404348:	mov	x20, x2
  40434c:	bl	401ea0 <__errno_location@plt>
  404350:	str	wzr, [x0]
  404354:	cmp	w19, #0x0
  404358:	b.gt	4043ec <ferror@plt+0x24fc>
  40435c:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  404360:	ldr	x3, [x0, #2248]
  404364:	ldr	w2, [x3]
  404368:	cmp	w2, #0x0
  40436c:	add	w19, w2, #0x7
  404370:	csel	w19, w19, w2, lt  // lt = tstop
  404374:	and	w19, w19, #0xfffffff8
  404378:	add	w19, w19, #0x8
  40437c:	sxtw	x19, w19
  404380:	cmp	x19, w2, sxtw
  404384:	b.le	4043e0 <ferror@plt+0x24f0>
  404388:	adrp	x20, 429000 <argp_error@@Base+0x19650>
  40438c:	add	x20, x20, #0x8c8
  404390:	stp	x21, x22, [sp, #32]
  404394:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  404398:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  40439c:	add	x22, x22, #0x640
  4043a0:	add	x21, x21, #0x630
  4043a4:	str	x23, [sp, #48]
  4043a8:	mov	w23, #0x1                   	// #1
  4043ac:	nop
  4043b0:	ldr	x1, [x22]
  4043b4:	add	w2, w2, #0x1
  4043b8:	str	w2, [x3]
  4043bc:	mov	w0, #0x20                  	// #32
  4043c0:	bl	401b60 <putc@plt>
  4043c4:	str	w23, [x21]
  4043c8:	ldr	x3, [x20]
  4043cc:	ldr	w2, [x3]
  4043d0:	cmp	x19, w2, sxtw
  4043d4:	b.gt	4043b0 <ferror@plt+0x24c0>
  4043d8:	ldp	x21, x22, [sp, #32]
  4043dc:	ldr	x23, [sp, #48]
  4043e0:	ldp	x19, x20, [sp, #16]
  4043e4:	ldp	x29, x30, [sp], #64
  4043e8:	ret
  4043ec:	ldr	x0, [x20]
  4043f0:	mov	w2, #0x0                   	// #0
  4043f4:	mov	x1, #0x0                   	// #0
  4043f8:	bl	401d10 <strtol@plt>
  4043fc:	mov	x19, x0
  404400:	cmp	x0, #0x0
  404404:	b.le	40435c <ferror@plt+0x246c>
  404408:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  40440c:	ldr	x3, [x0, #2248]
  404410:	ldr	w2, [x3]
  404414:	b	404380 <ferror@plt+0x2490>
  404418:	stp	x29, x30, [sp, #-16]!
  40441c:	cmp	w1, #0x0
  404420:	mov	w0, #0x0                   	// #0
  404424:	mov	x29, sp
  404428:	b.gt	404430 <ferror@plt+0x2540>
  40442c:	bl	401b20 <exit@plt>
  404430:	ldr	x0, [x2]
  404434:	mov	x1, #0x0                   	// #0
  404438:	mov	w2, #0x0                   	// #0
  40443c:	bl	401af0 <strtoul@plt>
  404440:	bl	401b20 <exit@plt>
  404444:	nop
  404448:	stp	x29, x30, [sp, #-32]!
  40444c:	mov	x29, sp
  404450:	stp	x19, x20, [sp, #16]
  404454:	mov	x20, x0
  404458:	ldr	x0, [x0]
  40445c:	bl	401e00 <if_nametoindex@plt>
  404460:	mov	w19, w0
  404464:	cbz	w0, 4044a4 <ferror@plt+0x25b4>
  404468:	mov	w1, w19
  40446c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  404470:	add	x0, x0, #0x360
  404474:	bl	401e80 <printf@plt>
  404478:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  40447c:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404480:	ldp	x19, x20, [sp, #16]
  404484:	mov	w4, #0x1                   	// #1
  404488:	ldr	x2, [x1, #2248]
  40448c:	ldr	w1, [x2]
  404490:	add	w1, w1, w0
  404494:	str	w1, [x2]
  404498:	str	w4, [x3, #1584]
  40449c:	ldp	x29, x30, [sp], #32
  4044a0:	ret
  4044a4:	bl	401ea0 <__errno_location@plt>
  4044a8:	ldr	w1, [x0]
  4044ac:	ldr	x3, [x20]
  4044b0:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4044b4:	mov	w0, #0x1                   	// #1
  4044b8:	add	x2, x2, #0x330
  4044bc:	bl	401b30 <error@plt>
  4044c0:	b	404468 <ferror@plt+0x2578>
  4044c4:	nop
  4044c8:	stp	x29, x30, [sp, #-64]!
  4044cc:	mov	w0, #0x28                  	// #40
  4044d0:	mov	x29, sp
  4044d4:	stp	x19, x20, [sp, #16]
  4044d8:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4044dc:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4044e0:	add	x19, x19, #0x368
  4044e4:	add	x20, x20, #0x630
  4044e8:	stp	x21, x22, [sp, #32]
  4044ec:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4044f0:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4044f4:	add	x22, x22, #0x8c8
  4044f8:	add	x21, x21, #0x640
  4044fc:	str	x23, [sp, #48]
  404500:	mov	w23, #0x1                   	// #1
  404504:	b	404520 <ferror@plt+0x2630>
  404508:	str	wzr, [x1]
  40450c:	ldr	x1, [x21]
  404510:	bl	401b60 <putc@plt>
  404514:	str	w23, [x20]
  404518:	ldrb	w0, [x19]
  40451c:	cbz	w0, 404558 <ferror@plt+0x2668>
  404520:	add	x19, x19, #0x1
  404524:	cmp	w0, #0x9
  404528:	ldr	x1, [x22]
  40452c:	b.eq	40456c <ferror@plt+0x267c>  // b.none
  404530:	cmp	w0, #0xa
  404534:	b.eq	404508 <ferror@plt+0x2618>  // b.none
  404538:	ldr	w2, [x1]
  40453c:	add	w2, w2, #0x1
  404540:	str	w2, [x1]
  404544:	ldr	x1, [x21]
  404548:	bl	401b60 <putc@plt>
  40454c:	str	w23, [x20]
  404550:	ldrb	w0, [x19]
  404554:	cbnz	w0, 404520 <ferror@plt+0x2630>
  404558:	ldp	x19, x20, [sp, #16]
  40455c:	ldp	x21, x22, [sp, #32]
  404560:	ldr	x23, [sp, #48]
  404564:	ldp	x29, x30, [sp], #64
  404568:	ret
  40456c:	ldr	w3, [x1]
  404570:	cmp	w3, #0x0
  404574:	add	w2, w3, #0x7
  404578:	csel	w2, w2, w3, lt  // lt = tstop
  40457c:	and	w2, w2, #0xfffffff8
  404580:	add	w2, w2, #0x8
  404584:	str	w2, [x1]
  404588:	b	40450c <ferror@plt+0x261c>
  40458c:	nop
  404590:	stp	x29, x30, [sp, #-64]!
  404594:	mov	w0, #0x28                  	// #40
  404598:	mov	x29, sp
  40459c:	stp	x19, x20, [sp, #16]
  4045a0:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4045a4:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4045a8:	add	x19, x19, #0x368
  4045ac:	add	x20, x20, #0x630
  4045b0:	stp	x21, x22, [sp, #32]
  4045b4:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4045b8:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4045bc:	add	x22, x22, #0x8c8
  4045c0:	add	x21, x21, #0x640
  4045c4:	str	x23, [sp, #48]
  4045c8:	mov	w23, #0x1                   	// #1
  4045cc:	b	4045e8 <ferror@plt+0x26f8>
  4045d0:	str	wzr, [x1]
  4045d4:	ldr	x1, [x21]
  4045d8:	bl	401b60 <putc@plt>
  4045dc:	str	w23, [x20]
  4045e0:	ldrb	w0, [x19]
  4045e4:	cbz	w0, 404620 <ferror@plt+0x2730>
  4045e8:	add	x19, x19, #0x1
  4045ec:	cmp	w0, #0x9
  4045f0:	ldr	x1, [x22]
  4045f4:	b.eq	404634 <ferror@plt+0x2744>  // b.none
  4045f8:	cmp	w0, #0xa
  4045fc:	b.eq	4045d0 <ferror@plt+0x26e0>  // b.none
  404600:	ldr	w2, [x1]
  404604:	add	w2, w2, #0x1
  404608:	str	w2, [x1]
  40460c:	ldr	x1, [x21]
  404610:	bl	401b60 <putc@plt>
  404614:	str	w23, [x20]
  404618:	ldrb	w0, [x19]
  40461c:	cbnz	w0, 4045e8 <ferror@plt+0x26f8>
  404620:	ldp	x19, x20, [sp, #16]
  404624:	ldp	x21, x22, [sp, #32]
  404628:	ldr	x23, [sp, #48]
  40462c:	ldp	x29, x30, [sp], #64
  404630:	ret
  404634:	ldr	w3, [x1]
  404638:	cmp	w3, #0x0
  40463c:	add	w2, w3, #0x7
  404640:	csel	w2, w2, w3, lt  // lt = tstop
  404644:	and	w2, w2, #0xfffffff8
  404648:	add	w2, w2, #0x8
  40464c:	str	w2, [x1]
  404650:	b	4045d4 <ferror@plt+0x26e4>
  404654:	nop
  404658:	stp	x29, x30, [sp, #-64]!
  40465c:	mov	x29, sp
  404660:	stp	x19, x20, [sp, #16]
  404664:	ldr	x19, [x0]
  404668:	ldrb	w0, [x19]
  40466c:	cbz	w0, 4046f0 <ferror@plt+0x2800>
  404670:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404674:	add	x20, x20, #0x630
  404678:	stp	x21, x22, [sp, #32]
  40467c:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  404680:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  404684:	add	x22, x22, #0x8c8
  404688:	add	x21, x21, #0x640
  40468c:	str	x23, [sp, #48]
  404690:	mov	w23, #0x1                   	// #1
  404694:	b	4046b0 <ferror@plt+0x27c0>
  404698:	str	wzr, [x1]
  40469c:	ldr	x1, [x21]
  4046a0:	bl	401b60 <putc@plt>
  4046a4:	str	w23, [x20]
  4046a8:	ldrb	w0, [x19]
  4046ac:	cbz	w0, 4046e8 <ferror@plt+0x27f8>
  4046b0:	add	x19, x19, #0x1
  4046b4:	cmp	w0, #0x9
  4046b8:	ldr	x1, [x22]
  4046bc:	b.eq	4046fc <ferror@plt+0x280c>  // b.none
  4046c0:	cmp	w0, #0xa
  4046c4:	b.eq	404698 <ferror@plt+0x27a8>  // b.none
  4046c8:	ldr	w2, [x1]
  4046cc:	add	w2, w2, #0x1
  4046d0:	str	w2, [x1]
  4046d4:	ldr	x1, [x21]
  4046d8:	bl	401b60 <putc@plt>
  4046dc:	str	w23, [x20]
  4046e0:	ldrb	w0, [x19]
  4046e4:	cbnz	w0, 4046b0 <ferror@plt+0x27c0>
  4046e8:	ldp	x21, x22, [sp, #32]
  4046ec:	ldr	x23, [sp, #48]
  4046f0:	ldp	x19, x20, [sp, #16]
  4046f4:	ldp	x29, x30, [sp], #64
  4046f8:	ret
  4046fc:	ldr	w3, [x1]
  404700:	cmp	w3, #0x0
  404704:	add	w2, w3, #0x7
  404708:	csel	w2, w2, w3, lt  // lt = tstop
  40470c:	and	w2, w2, #0xfffffff8
  404710:	add	w2, w2, #0x8
  404714:	str	w2, [x1]
  404718:	b	40469c <ferror@plt+0x27ac>
  40471c:	nop
  404720:	stp	x29, x30, [sp, #-64]!
  404724:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404728:	mov	x29, sp
  40472c:	stp	x19, x20, [sp, #16]
  404730:	ldr	x19, [x0, #1472]
  404734:	ldrb	w0, [x19]
  404738:	cbz	w0, 4047bc <ferror@plt+0x28cc>
  40473c:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404740:	add	x20, x20, #0x630
  404744:	stp	x21, x22, [sp, #32]
  404748:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  40474c:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  404750:	add	x22, x22, #0x8c8
  404754:	add	x21, x21, #0x640
  404758:	str	x23, [sp, #48]
  40475c:	mov	w23, #0x1                   	// #1
  404760:	b	40477c <ferror@plt+0x288c>
  404764:	str	wzr, [x1]
  404768:	ldr	x1, [x21]
  40476c:	bl	401b60 <putc@plt>
  404770:	str	w23, [x20]
  404774:	ldrb	w0, [x19]
  404778:	cbz	w0, 4047b4 <ferror@plt+0x28c4>
  40477c:	add	x19, x19, #0x1
  404780:	cmp	w0, #0x9
  404784:	ldr	x1, [x22]
  404788:	b.eq	4047c8 <ferror@plt+0x28d8>  // b.none
  40478c:	cmp	w0, #0xa
  404790:	b.eq	404764 <ferror@plt+0x2874>  // b.none
  404794:	ldr	w2, [x1]
  404798:	add	w2, w2, #0x1
  40479c:	str	w2, [x1]
  4047a0:	ldr	x1, [x21]
  4047a4:	bl	401b60 <putc@plt>
  4047a8:	str	w23, [x20]
  4047ac:	ldrb	w0, [x19]
  4047b0:	cbnz	w0, 40477c <ferror@plt+0x288c>
  4047b4:	ldp	x21, x22, [sp, #32]
  4047b8:	ldr	x23, [sp, #48]
  4047bc:	ldp	x19, x20, [sp, #16]
  4047c0:	ldp	x29, x30, [sp], #64
  4047c4:	ret
  4047c8:	ldr	w3, [x1]
  4047cc:	cmp	w3, #0x0
  4047d0:	add	w2, w3, #0x7
  4047d4:	csel	w2, w2, w3, lt  // lt = tstop
  4047d8:	and	w2, w2, #0xfffffff8
  4047dc:	add	w2, w2, #0x8
  4047e0:	str	w2, [x1]
  4047e4:	b	404768 <ferror@plt+0x2878>
  4047e8:	stp	x29, x30, [sp, #-16]!
  4047ec:	adrp	x2, 429000 <argp_error@@Base+0x19650>
  4047f0:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  4047f4:	mov	x29, sp
  4047f8:	ldr	x2, [x2, #2248]
  4047fc:	mov	w0, #0xa                   	// #10
  404800:	ldr	x1, [x1, #1600]
  404804:	str	wzr, [x2]
  404808:	bl	401b60 <putc@plt>
  40480c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404810:	mov	w1, #0x1                   	// #1
  404814:	ldp	x29, x30, [sp], #16
  404818:	str	w1, [x0, #1584]
  40481c:	ret
  404820:	cmp	w1, #0x0
  404824:	stp	x29, x30, [sp, #-64]!
  404828:	csel	x0, x0, x2, eq  // eq = none
  40482c:	mov	x29, sp
  404830:	stp	x19, x20, [sp, #16]
  404834:	ldr	x20, [x0]
  404838:	mov	x0, x20
  40483c:	bl	403080 <ferror@plt+0x1190>
  404840:	mov	x19, x0
  404844:	cbz	x0, 404900 <ferror@plt+0x2a10>
  404848:	ldr	x19, [x19, #8]
  40484c:	ldrb	w0, [x19]
  404850:	cbz	w0, 4048d4 <ferror@plt+0x29e4>
  404854:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404858:	add	x20, x20, #0x630
  40485c:	stp	x21, x22, [sp, #32]
  404860:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  404864:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  404868:	add	x22, x22, #0x8c8
  40486c:	add	x21, x21, #0x640
  404870:	str	x23, [sp, #48]
  404874:	mov	w23, #0x1                   	// #1
  404878:	b	404894 <ferror@plt+0x29a4>
  40487c:	str	wzr, [x1]
  404880:	ldr	x1, [x21]
  404884:	bl	401b60 <putc@plt>
  404888:	str	w23, [x20]
  40488c:	ldrb	w0, [x19]
  404890:	cbz	w0, 4048cc <ferror@plt+0x29dc>
  404894:	add	x19, x19, #0x1
  404898:	cmp	w0, #0x9
  40489c:	ldr	x1, [x22]
  4048a0:	b.eq	4048e0 <ferror@plt+0x29f0>  // b.none
  4048a4:	cmp	w0, #0xa
  4048a8:	b.eq	40487c <ferror@plt+0x298c>  // b.none
  4048ac:	ldr	w2, [x1]
  4048b0:	add	w2, w2, #0x1
  4048b4:	str	w2, [x1]
  4048b8:	ldr	x1, [x21]
  4048bc:	bl	401b60 <putc@plt>
  4048c0:	str	w23, [x20]
  4048c4:	ldrb	w0, [x19]
  4048c8:	cbnz	w0, 404894 <ferror@plt+0x29a4>
  4048cc:	ldp	x21, x22, [sp, #32]
  4048d0:	ldr	x23, [sp, #48]
  4048d4:	ldp	x19, x20, [sp, #16]
  4048d8:	ldp	x29, x30, [sp], #64
  4048dc:	ret
  4048e0:	ldr	w3, [x1]
  4048e4:	cmp	w3, #0x0
  4048e8:	add	w2, w3, #0x7
  4048ec:	csel	w2, w2, w3, lt  // lt = tstop
  4048f0:	and	w2, w2, #0xfffffff8
  4048f4:	add	w2, w2, #0x8
  4048f8:	str	w2, [x1]
  4048fc:	b	404880 <ferror@plt+0x2990>
  404900:	bl	401ea0 <__errno_location@plt>
  404904:	mov	x1, x0
  404908:	mov	x3, x20
  40490c:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  404910:	mov	w0, #0x1                   	// #1
  404914:	add	x2, x2, #0x378
  404918:	ldr	w1, [x1]
  40491c:	bl	401b30 <error@plt>
  404920:	b	404848 <ferror@plt+0x2958>
  404924:	nop
  404928:	cmp	w1, #0x0
  40492c:	stp	x29, x30, [sp, #-64]!
  404930:	csel	x0, x0, x2, eq  // eq = none
  404934:	mov	x29, sp
  404938:	stp	x19, x20, [sp, #16]
  40493c:	ldr	x20, [x0]
  404940:	mov	x0, x20
  404944:	bl	403080 <ferror@plt+0x1190>
  404948:	mov	x19, x0
  40494c:	cbz	x0, 404a08 <ferror@plt+0x2b18>
  404950:	ldr	x19, [x19, #16]
  404954:	ldrb	w0, [x19]
  404958:	cbz	w0, 4049dc <ferror@plt+0x2aec>
  40495c:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404960:	add	x20, x20, #0x630
  404964:	stp	x21, x22, [sp, #32]
  404968:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  40496c:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  404970:	add	x22, x22, #0x8c8
  404974:	add	x21, x21, #0x640
  404978:	str	x23, [sp, #48]
  40497c:	mov	w23, #0x1                   	// #1
  404980:	b	40499c <ferror@plt+0x2aac>
  404984:	str	wzr, [x1]
  404988:	ldr	x1, [x21]
  40498c:	bl	401b60 <putc@plt>
  404990:	str	w23, [x20]
  404994:	ldrb	w0, [x19]
  404998:	cbz	w0, 4049d4 <ferror@plt+0x2ae4>
  40499c:	add	x19, x19, #0x1
  4049a0:	cmp	w0, #0x9
  4049a4:	ldr	x1, [x22]
  4049a8:	b.eq	4049e8 <ferror@plt+0x2af8>  // b.none
  4049ac:	cmp	w0, #0xa
  4049b0:	b.eq	404984 <ferror@plt+0x2a94>  // b.none
  4049b4:	ldr	w2, [x1]
  4049b8:	add	w2, w2, #0x1
  4049bc:	str	w2, [x1]
  4049c0:	ldr	x1, [x21]
  4049c4:	bl	401b60 <putc@plt>
  4049c8:	str	w23, [x20]
  4049cc:	ldrb	w0, [x19]
  4049d0:	cbnz	w0, 40499c <ferror@plt+0x2aac>
  4049d4:	ldp	x21, x22, [sp, #32]
  4049d8:	ldr	x23, [sp, #48]
  4049dc:	ldp	x19, x20, [sp, #16]
  4049e0:	ldp	x29, x30, [sp], #64
  4049e4:	ret
  4049e8:	ldr	w3, [x1]
  4049ec:	cmp	w3, #0x0
  4049f0:	add	w2, w3, #0x7
  4049f4:	csel	w2, w2, w3, lt  // lt = tstop
  4049f8:	and	w2, w2, #0xfffffff8
  4049fc:	add	w2, w2, #0x8
  404a00:	str	w2, [x1]
  404a04:	b	404988 <ferror@plt+0x2a98>
  404a08:	bl	401ea0 <__errno_location@plt>
  404a0c:	mov	x1, x0
  404a10:	mov	x3, x20
  404a14:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  404a18:	mov	w0, #0x1                   	// #1
  404a1c:	add	x2, x2, #0x378
  404a20:	ldr	w1, [x1]
  404a24:	bl	401b30 <error@plt>
  404a28:	b	404950 <ferror@plt+0x2a60>
  404a2c:	nop
  404a30:	stp	x29, x30, [sp, #-16]!
  404a34:	adrp	x2, 429000 <argp_error@@Base+0x19650>
  404a38:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404a3c:	mov	x29, sp
  404a40:	ldr	x4, [x2, #2248]
  404a44:	mov	w0, #0x9                   	// #9
  404a48:	ldr	x1, [x1, #1600]
  404a4c:	ldr	w3, [x4]
  404a50:	cmp	w3, #0x0
  404a54:	add	w2, w3, #0x7
  404a58:	csel	w2, w2, w3, lt  // lt = tstop
  404a5c:	and	w2, w2, #0xfffffff8
  404a60:	add	w2, w2, #0x8
  404a64:	str	w2, [x4]
  404a68:	bl	401b60 <putc@plt>
  404a6c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404a70:	mov	w1, #0x1                   	// #1
  404a74:	ldp	x29, x30, [sp], #16
  404a78:	str	w1, [x0, #1584]
  404a7c:	ret
  404a80:	stp	x29, x30, [sp, #-80]!
  404a84:	mov	x29, sp
  404a88:	stp	x21, x22, [sp, #32]
  404a8c:	mov	x21, x0
  404a90:	stp	x19, x20, [sp, #16]
  404a94:	ldr	x20, [x0, #24]
  404a98:	stp	x23, x24, [sp, #48]
  404a9c:	ldr	w0, [x0, #32]
  404aa0:	stp	x25, x26, [sp, #64]
  404aa4:	add	w2, w0, #0x1
  404aa8:	str	w2, [x21, #32]
  404aac:	ldrb	w19, [x20]
  404ab0:	cbz	w19, 404b1c <ferror@plt+0x2c2c>
  404ab4:	nop
  404ab8:	cmp	w2, #0x1
  404abc:	cset	w1, le
  404ac0:	cmp	w19, #0x7d
  404ac4:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  404ac8:	b.eq	404b18 <ferror@plt+0x2c28>  // b.none
  404acc:	cmp	w19, #0x24
  404ad0:	b.eq	404afc <ferror@plt+0x2c0c>  // b.none
  404ad4:	nop
  404ad8:	cmp	w19, #0x7d
  404adc:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  404ae0:	b.eq	404b18 <ferror@plt+0x2c28>  // b.none
  404ae4:	ldrb	w19, [x20, #1]!
  404ae8:	cmp	w19, #0x24
  404aec:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  404af0:	b.ne	404ad8 <ferror@plt+0x2be8>  // b.any
  404af4:	cmp	w19, #0x24
  404af8:	b.ne	404b18 <ferror@plt+0x2c28>  // b.any
  404afc:	ldrb	w0, [x20, #1]
  404b00:	add	x22, x20, #0x2
  404b04:	cmp	w0, #0x7b
  404b08:	b.eq	404b40 <ferror@plt+0x2c50>  // b.none
  404b0c:	ldrb	w19, [x20, #2]
  404b10:	mov	x20, x22
  404b14:	cbnz	w19, 404ab8 <ferror@plt+0x2bc8>
  404b18:	sub	w0, w2, #0x1
  404b1c:	str	x20, [x21, #24]
  404b20:	str	w0, [x21, #32]
  404b24:	mov	sp, x29
  404b28:	ldp	x19, x20, [sp, #16]
  404b2c:	ldp	x21, x22, [sp, #32]
  404b30:	ldp	x23, x24, [sp, #48]
  404b34:	ldp	x25, x26, [sp, #64]
  404b38:	ldp	x29, x30, [sp], #80
  404b3c:	ret
  404b40:	mov	x0, x22
  404b44:	mov	w1, #0x7d                  	// #125
  404b48:	bl	401d70 <strchr@plt>
  404b4c:	cbz	x0, 404bc4 <ferror@plt+0x2cd4>
  404b50:	sub	x19, x0, x22
  404b54:	add	x20, x0, #0x1
  404b58:	add	x2, x19, #0x10
  404b5c:	mov	x1, x22
  404b60:	and	x0, x2, #0xfffffffffffffff0
  404b64:	mov	x2, x19
  404b68:	sub	sp, sp, x0
  404b6c:	mov	x3, sp
  404b70:	mov	x0, x3
  404b74:	bl	401aa0 <memcpy@plt>
  404b78:	strb	wzr, [x0, x19]
  404b7c:	str	x20, [x21, #24]
  404b80:	ldrb	w19, [x20]
  404b84:	add	x1, x20, #0x1
  404b88:	mov	x0, x21
  404b8c:	cmp	w19, #0x7b
  404b90:	b.ne	404bb8 <ferror@plt+0x2cc8>  // b.any
  404b94:	str	x1, [x21, #24]
  404b98:	bl	404a80 <ferror@plt+0x2b90>
  404b9c:	ldr	x20, [x21, #24]
  404ba0:	ldrb	w19, [x20]
  404ba4:	cmp	w19, #0x7d
  404ba8:	b.ne	404b84 <ferror@plt+0x2c94>  // b.any
  404bac:	add	x20, x20, #0x1
  404bb0:	str	x20, [x21, #24]
  404bb4:	b	404b80 <ferror@plt+0x2c90>
  404bb8:	ldr	w2, [x21, #32]
  404bbc:	cbnz	w19, 404ab8 <ferror@plt+0x2bc8>
  404bc0:	b	404b18 <ferror@plt+0x2c28>
  404bc4:	adrp	x25, 429000 <argp_error@@Base+0x19650>
  404bc8:	adrp	x24, 42a000 <argp_error@@Base+0x1a650>
  404bcc:	adrp	x23, 42a000 <argp_error@@Base+0x1a650>
  404bd0:	add	x25, x25, #0x8c8
  404bd4:	add	x24, x24, #0x640
  404bd8:	mov	x22, x20
  404bdc:	add	x23, x23, #0x630
  404be0:	mov	w26, #0x1                   	// #1
  404be4:	b	404c04 <ferror@plt+0x2d14>
  404be8:	str	wzr, [x0]
  404bec:	ldr	x1, [x24]
  404bf0:	mov	w0, w19
  404bf4:	bl	401b60 <putc@plt>
  404bf8:	str	w26, [x23]
  404bfc:	ldrb	w19, [x22]
  404c00:	cbz	w19, 404c40 <ferror@plt+0x2d50>
  404c04:	add	x22, x22, #0x1
  404c08:	cmp	w19, #0x9
  404c0c:	ldr	x0, [x25]
  404c10:	b.eq	404c54 <ferror@plt+0x2d64>  // b.none
  404c14:	cmp	w19, #0xa
  404c18:	b.eq	404be8 <ferror@plt+0x2cf8>  // b.none
  404c1c:	ldr	w1, [x0]
  404c20:	add	w1, w1, #0x1
  404c24:	str	w1, [x0]
  404c28:	ldr	x1, [x24]
  404c2c:	mov	w0, w19
  404c30:	bl	401b60 <putc@plt>
  404c34:	str	w26, [x23]
  404c38:	ldrb	w19, [x22]
  404c3c:	cbnz	w19, 404c04 <ferror@plt+0x2d14>
  404c40:	mov	x0, x20
  404c44:	bl	401b00 <strlen@plt>
  404c48:	ldr	w2, [x21, #32]
  404c4c:	add	x20, x20, x0
  404c50:	b	404b18 <ferror@plt+0x2c28>
  404c54:	ldr	w2, [x0]
  404c58:	cmp	w2, #0x0
  404c5c:	add	w1, w2, #0x7
  404c60:	csel	w1, w1, w2, lt  // lt = tstop
  404c64:	and	w1, w1, #0xfffffff8
  404c68:	add	w1, w1, #0x8
  404c6c:	str	w1, [x0]
  404c70:	b	404bec <ferror@plt+0x2cfc>
  404c74:	nop
  404c78:	stp	x29, x30, [sp, #-64]!
  404c7c:	cmp	w1, #0x0
  404c80:	mov	x29, sp
  404c84:	ldr	x0, [x0, #8]
  404c88:	ldrb	w1, [x0, #34]
  404c8c:	b.le	404d98 <ferror@plt+0x2ea8>
  404c90:	stp	x19, x20, [sp, #16]
  404c94:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  404c98:	add	x0, x0, #0x360
  404c9c:	ldr	x20, [x2]
  404ca0:	str	x21, [sp, #32]
  404ca4:	mov	x21, x2
  404ca8:	ldrb	w2, [x20]
  404cac:	cmp	w2, #0x25
  404cb0:	b.eq	404ce8 <ferror@plt+0x2df8>  // b.none
  404cb4:	ldp	x19, x20, [sp, #16]
  404cb8:	ldr	x21, [sp, #32]
  404cbc:	bl	401e80 <printf@plt>
  404cc0:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  404cc4:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404cc8:	mov	w4, #0x1                   	// #1
  404ccc:	ldr	x2, [x1, #2248]
  404cd0:	ldr	w1, [x2]
  404cd4:	add	w1, w1, w0
  404cd8:	str	w1, [x2]
  404cdc:	str	w4, [x3, #1584]
  404ce0:	ldp	x29, x30, [sp], #64
  404ce4:	ret
  404ce8:	ldrb	w19, [x20, #1]
  404cec:	cmp	w19, #0x23
  404cf0:	b.eq	404da4 <ferror@plt+0x2eb4>  // b.none
  404cf4:	add	x20, x20, #0x1
  404cf8:	str	w1, [sp, #60]
  404cfc:	bl	401d00 <__ctype_b_loc@plt>
  404d00:	ldr	x2, [x0]
  404d04:	ubfiz	x3, x19, #1, #8
  404d08:	ldr	w1, [sp, #60]
  404d0c:	ldrh	w0, [x2, x3]
  404d10:	tbz	w0, #11, 404d28 <ferror@plt+0x2e38>
  404d14:	nop
  404d18:	ldrb	w19, [x20, #1]!
  404d1c:	ubfiz	x0, x19, #1, #8
  404d20:	ldrh	w0, [x2, x0]
  404d24:	tbnz	w0, #11, 404d18 <ferror@plt+0x2e28>
  404d28:	and	w0, w19, #0xffffffdf
  404d2c:	cmp	w0, #0x48
  404d30:	b.ne	404d44 <ferror@plt+0x2e54>  // b.any
  404d34:	ldrb	w0, [x20, #1]
  404d38:	cbz	w0, 404dbc <ferror@plt+0x2ecc>
  404d3c:	add	x20, x20, #0x1
  404d40:	mov	w19, w0
  404d44:	sub	w19, w19, #0x48
  404d48:	and	w19, w19, #0xff
  404d4c:	cmp	w19, #0x30
  404d50:	b.hi	404d7c <ferror@plt+0x2e8c>  // b.pmore
  404d54:	mov	x0, #0x1                   	// #1
  404d58:	lsl	x0, x0, x19
  404d5c:	tst	x0, #0x8000000080
  404d60:	b.ne	404dd4 <ferror@plt+0x2ee4>  // b.any
  404d64:	and	x3, x0, #0x1ffff
  404d68:	and	x3, x3, #0xffffffffffff0001
  404d6c:	cbnz	x3, 404dc8 <ferror@plt+0x2ed8>
  404d70:	and	x0, x0, #0x1ffff00000000
  404d74:	and	x0, x0, #0xffff0001ffffffff
  404d78:	cbnz	x0, 404db0 <ferror@plt+0x2ec0>
  404d7c:	mov	w0, #0x69                  	// #105
  404d80:	strb	w0, [x20]
  404d84:	strb	wzr, [x20, #1]
  404d88:	ldr	x0, [x21]
  404d8c:	ldp	x19, x20, [sp, #16]
  404d90:	ldr	x21, [sp, #32]
  404d94:	b	404cbc <ferror@plt+0x2dcc>
  404d98:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  404d9c:	add	x0, x0, #0x360
  404da0:	b	404cbc <ferror@plt+0x2dcc>
  404da4:	ldrb	w19, [x20, #2]
  404da8:	add	x20, x20, #0x2
  404dac:	b	404cf8 <ferror@plt+0x2e08>
  404db0:	mov	w0, #0x78                  	// #120
  404db4:	strb	w0, [x20]
  404db8:	b	404d84 <ferror@plt+0x2e94>
  404dbc:	sub	w19, w19, #0x48
  404dc0:	and	w19, w19, #0xff
  404dc4:	b	404d54 <ferror@plt+0x2e64>
  404dc8:	mov	w0, #0x58                  	// #88
  404dcc:	strb	w0, [x20]
  404dd0:	b	404d84 <ferror@plt+0x2e94>
  404dd4:	mov	w0, #0x6f                  	// #111
  404dd8:	strb	w0, [x20]
  404ddc:	b	404d84 <ferror@plt+0x2e94>
  404de0:	stp	x29, x30, [sp, #-16]!
  404de4:	adrp	x2, 429000 <argp_error@@Base+0x19650>
  404de8:	and	w0, w1, #0xff
  404dec:	mov	x29, sp
  404df0:	cmp	w0, #0x9
  404df4:	ldr	x1, [x2, #2248]
  404df8:	b.eq	404e28 <ferror@plt+0x2f38>  // b.none
  404dfc:	cmp	w0, #0xa
  404e00:	b.ne	404e64 <ferror@plt+0x2f74>  // b.any
  404e04:	str	wzr, [x1]
  404e08:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404e0c:	ldr	x1, [x1, #1600]
  404e10:	bl	401b60 <putc@plt>
  404e14:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404e18:	mov	w1, #0x1                   	// #1
  404e1c:	ldp	x29, x30, [sp], #16
  404e20:	str	w1, [x0, #1584]
  404e24:	ret
  404e28:	ldr	w3, [x1]
  404e2c:	cmp	w3, #0x0
  404e30:	add	w2, w3, #0x7
  404e34:	csel	w2, w2, w3, lt  // lt = tstop
  404e38:	and	w2, w2, #0xfffffff8
  404e3c:	add	w2, w2, #0x8
  404e40:	str	w2, [x1]
  404e44:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404e48:	ldr	x1, [x1, #1600]
  404e4c:	bl	401b60 <putc@plt>
  404e50:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404e54:	mov	w1, #0x1                   	// #1
  404e58:	ldp	x29, x30, [sp], #16
  404e5c:	str	w1, [x0, #1584]
  404e60:	ret
  404e64:	ldr	w2, [x1]
  404e68:	add	w2, w2, #0x1
  404e6c:	str	w2, [x1]
  404e70:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  404e74:	ldr	x1, [x1, #1600]
  404e78:	bl	401b60 <putc@plt>
  404e7c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  404e80:	mov	w1, #0x1                   	// #1
  404e84:	ldp	x29, x30, [sp], #16
  404e88:	str	w1, [x0, #1584]
  404e8c:	ret
  404e90:	ldrb	w0, [x1]
  404e94:	cbz	w0, 404f54 <ferror@plt+0x3064>
  404e98:	stp	x29, x30, [sp, #-64]!
  404e9c:	mov	x29, sp
  404ea0:	stp	x19, x20, [sp, #16]
  404ea4:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  404ea8:	mov	x19, x1
  404eac:	add	x20, x20, #0x630
  404eb0:	stp	x21, x22, [sp, #32]
  404eb4:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  404eb8:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  404ebc:	add	x22, x22, #0x8c8
  404ec0:	add	x21, x21, #0x640
  404ec4:	str	x23, [sp, #48]
  404ec8:	mov	w23, #0x1                   	// #1
  404ecc:	b	404ee8 <ferror@plt+0x2ff8>
  404ed0:	str	wzr, [x1]
  404ed4:	ldr	x1, [x21]
  404ed8:	bl	401b60 <putc@plt>
  404edc:	str	w23, [x20]
  404ee0:	ldrb	w0, [x19]
  404ee4:	cbz	w0, 404f20 <ferror@plt+0x3030>
  404ee8:	add	x19, x19, #0x1
  404eec:	cmp	w0, #0x9
  404ef0:	ldr	x1, [x22]
  404ef4:	b.eq	404f34 <ferror@plt+0x3044>  // b.none
  404ef8:	cmp	w0, #0xa
  404efc:	b.eq	404ed0 <ferror@plt+0x2fe0>  // b.none
  404f00:	ldr	w2, [x1]
  404f04:	add	w2, w2, #0x1
  404f08:	str	w2, [x1]
  404f0c:	ldr	x1, [x21]
  404f10:	bl	401b60 <putc@plt>
  404f14:	str	w23, [x20]
  404f18:	ldrb	w0, [x19]
  404f1c:	cbnz	w0, 404ee8 <ferror@plt+0x2ff8>
  404f20:	ldp	x19, x20, [sp, #16]
  404f24:	ldp	x21, x22, [sp, #32]
  404f28:	ldr	x23, [sp, #48]
  404f2c:	ldp	x29, x30, [sp], #64
  404f30:	ret
  404f34:	ldr	w3, [x1]
  404f38:	cmp	w3, #0x0
  404f3c:	add	w2, w3, #0x7
  404f40:	csel	w2, w2, w3, lt  // lt = tstop
  404f44:	and	w2, w2, #0xfffffff8
  404f48:	add	w2, w2, #0x8
  404f4c:	str	w2, [x1]
  404f50:	b	404ed4 <ferror@plt+0x2fe4>
  404f54:	ret
  404f58:	stp	x29, x30, [sp, #-64]!
  404f5c:	cmp	w1, #0x0
  404f60:	mov	w1, w3
  404f64:	mov	x29, sp
  404f68:	b.le	405070 <ferror@plt+0x3180>
  404f6c:	stp	x19, x20, [sp, #16]
  404f70:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  404f74:	add	x0, x0, #0x360
  404f78:	ldr	x20, [x2]
  404f7c:	str	x21, [sp, #32]
  404f80:	mov	x21, x2
  404f84:	ldrb	w2, [x20]
  404f88:	cmp	w2, #0x25
  404f8c:	b.eq	404fc4 <ferror@plt+0x30d4>  // b.none
  404f90:	ldp	x19, x20, [sp, #16]
  404f94:	ldr	x21, [sp, #32]
  404f98:	bl	401e80 <printf@plt>
  404f9c:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  404fa0:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  404fa4:	mov	w4, #0x1                   	// #1
  404fa8:	ldr	x2, [x1, #2248]
  404fac:	ldr	w1, [x2]
  404fb0:	add	w1, w1, w0
  404fb4:	str	w1, [x2]
  404fb8:	str	w4, [x3, #1584]
  404fbc:	ldp	x29, x30, [sp], #64
  404fc0:	ret
  404fc4:	ldrb	w19, [x20, #1]
  404fc8:	cmp	w19, #0x23
  404fcc:	b.eq	40507c <ferror@plt+0x318c>  // b.none
  404fd0:	add	x20, x20, #0x1
  404fd4:	str	w1, [sp, #60]
  404fd8:	bl	401d00 <__ctype_b_loc@plt>
  404fdc:	ldr	x3, [x0]
  404fe0:	ubfiz	x2, x19, #1, #8
  404fe4:	ldr	w1, [sp, #60]
  404fe8:	ldrh	w0, [x3, x2]
  404fec:	tbz	w0, #11, 405000 <ferror@plt+0x3110>
  404ff0:	ldrb	w19, [x20, #1]!
  404ff4:	ubfiz	x0, x19, #1, #8
  404ff8:	ldrh	w0, [x3, x0]
  404ffc:	tbnz	w0, #11, 404ff0 <ferror@plt+0x3100>
  405000:	and	w0, w19, #0xffffffdf
  405004:	cmp	w0, #0x48
  405008:	b.ne	40501c <ferror@plt+0x312c>  // b.any
  40500c:	ldrb	w0, [x20, #1]
  405010:	cbz	w0, 405094 <ferror@plt+0x31a4>
  405014:	add	x20, x20, #0x1
  405018:	mov	w19, w0
  40501c:	sub	w19, w19, #0x48
  405020:	and	w19, w19, #0xff
  405024:	cmp	w19, #0x30
  405028:	b.hi	405054 <ferror@plt+0x3164>  // b.pmore
  40502c:	mov	x0, #0x1                   	// #1
  405030:	lsl	x0, x0, x19
  405034:	tst	x0, #0x8000000080
  405038:	b.ne	4050ac <ferror@plt+0x31bc>  // b.any
  40503c:	and	x4, x0, #0x1ffff
  405040:	and	x4, x4, #0xffffffffffff0001
  405044:	cbnz	x4, 4050a0 <ferror@plt+0x31b0>
  405048:	and	x0, x0, #0x1ffff00000000
  40504c:	and	x0, x0, #0xffff0001ffffffff
  405050:	cbnz	x0, 405088 <ferror@plt+0x3198>
  405054:	mov	w0, #0x69                  	// #105
  405058:	strb	w0, [x20]
  40505c:	strb	wzr, [x20, #1]
  405060:	ldr	x0, [x21]
  405064:	ldp	x19, x20, [sp, #16]
  405068:	ldr	x21, [sp, #32]
  40506c:	b	404f98 <ferror@plt+0x30a8>
  405070:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  405074:	add	x0, x0, #0x360
  405078:	b	404f98 <ferror@plt+0x30a8>
  40507c:	ldrb	w19, [x20, #2]
  405080:	add	x20, x20, #0x2
  405084:	b	404fd4 <ferror@plt+0x30e4>
  405088:	mov	w0, #0x78                  	// #120
  40508c:	strb	w0, [x20]
  405090:	b	40505c <ferror@plt+0x316c>
  405094:	sub	w19, w19, #0x48
  405098:	and	w19, w19, #0xff
  40509c:	b	40502c <ferror@plt+0x313c>
  4050a0:	mov	w0, #0x58                  	// #88
  4050a4:	strb	w0, [x20]
  4050a8:	b	40505c <ferror@plt+0x316c>
  4050ac:	mov	w0, #0x6f                  	// #111
  4050b0:	strb	w0, [x20]
  4050b4:	b	40505c <ferror@plt+0x316c>
  4050b8:	stp	x29, x30, [sp, #-48]!
  4050bc:	mov	x29, sp
  4050c0:	stp	x19, x20, [sp, #16]
  4050c4:	mov	x19, x0
  4050c8:	mov	w20, w1
  4050cc:	str	x21, [sp, #32]
  4050d0:	mov	x21, x2
  4050d4:	ldr	x2, [x0, #8]
  4050d8:	mov	w1, #0x8921                	// #35105
  4050dc:	ldr	w0, [x0, #16]
  4050e0:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4050e4:	tbnz	w0, #31, 40510c <ferror@plt+0x321c>
  4050e8:	ldr	x3, [x19, #8]
  4050ec:	mov	x2, x21
  4050f0:	mov	w1, w20
  4050f4:	mov	x0, x19
  4050f8:	ldp	x19, x20, [sp, #16]
  4050fc:	ldr	x21, [sp, #32]
  405100:	ldp	x29, x30, [sp], #48
  405104:	ldr	w3, [x3, #16]
  405108:	b	404f58 <ferror@plt+0x3068>
  40510c:	bl	401ea0 <__errno_location@plt>
  405110:	ldr	w1, [x0]
  405114:	ldr	x3, [x19, #8]
  405118:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40511c:	ldp	x19, x20, [sp, #16]
  405120:	add	x2, x2, #0x390
  405124:	ldr	x21, [sp, #32]
  405128:	mov	w0, #0x1                   	// #1
  40512c:	ldp	x29, x30, [sp], #48
  405130:	b	401b30 <error@plt>
  405134:	nop
  405138:	stp	x29, x30, [sp, #-48]!
  40513c:	mov	x29, sp
  405140:	stp	x19, x20, [sp, #16]
  405144:	mov	x19, x0
  405148:	mov	w20, w1
  40514c:	str	x21, [sp, #32]
  405150:	mov	x21, x2
  405154:	ldr	x2, [x0, #8]
  405158:	mov	w1, #0x891d                	// #35101
  40515c:	ldr	w0, [x0, #16]
  405160:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  405164:	tbnz	w0, #31, 40518c <ferror@plt+0x329c>
  405168:	ldr	x3, [x19, #8]
  40516c:	mov	x2, x21
  405170:	mov	w1, w20
  405174:	mov	x0, x19
  405178:	ldp	x19, x20, [sp, #16]
  40517c:	ldr	x21, [sp, #32]
  405180:	ldp	x29, x30, [sp], #48
  405184:	ldr	w3, [x3, #16]
  405188:	b	404f58 <ferror@plt+0x3068>
  40518c:	bl	401ea0 <__errno_location@plt>
  405190:	ldr	w1, [x0]
  405194:	ldr	x3, [x19, #8]
  405198:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40519c:	ldp	x19, x20, [sp, #16]
  4051a0:	add	x2, x2, #0x3b8
  4051a4:	ldr	x21, [sp, #32]
  4051a8:	mov	w0, #0x1                   	// #1
  4051ac:	ldp	x29, x30, [sp], #48
  4051b0:	b	401b30 <error@plt>
  4051b4:	nop
  4051b8:	ldr	x3, [x0, #8]
  4051bc:	ldrh	w3, [x3, #32]
  4051c0:	cmp	w3, #0xff
  4051c4:	b.hi	40528c <ferror@plt+0x339c>  // b.pmore
  4051c8:	stp	x29, x30, [sp, #-64]!
  4051cc:	mov	w0, #0x28                  	// #40
  4051d0:	mov	x29, sp
  4051d4:	stp	x19, x20, [sp, #16]
  4051d8:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4051dc:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4051e0:	add	x19, x19, #0x3e0
  4051e4:	add	x20, x20, #0x630
  4051e8:	stp	x21, x22, [sp, #32]
  4051ec:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4051f0:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4051f4:	add	x22, x22, #0x8c8
  4051f8:	add	x21, x21, #0x640
  4051fc:	str	x23, [sp, #48]
  405200:	mov	w23, #0x1                   	// #1
  405204:	b	405220 <ferror@plt+0x3330>
  405208:	str	wzr, [x1]
  40520c:	ldr	x1, [x21]
  405210:	bl	401b60 <putc@plt>
  405214:	str	w23, [x20]
  405218:	ldrb	w0, [x19]
  40521c:	cbz	w0, 405258 <ferror@plt+0x3368>
  405220:	add	x19, x19, #0x1
  405224:	cmp	w0, #0x9
  405228:	ldr	x1, [x22]
  40522c:	b.eq	40526c <ferror@plt+0x337c>  // b.none
  405230:	cmp	w0, #0xa
  405234:	b.eq	405208 <ferror@plt+0x3318>  // b.none
  405238:	ldr	w2, [x1]
  40523c:	add	w2, w2, #0x1
  405240:	str	w2, [x1]
  405244:	ldr	x1, [x21]
  405248:	bl	401b60 <putc@plt>
  40524c:	str	w23, [x20]
  405250:	ldrb	w0, [x19]
  405254:	cbnz	w0, 405220 <ferror@plt+0x3330>
  405258:	ldp	x19, x20, [sp, #16]
  40525c:	ldp	x21, x22, [sp, #32]
  405260:	ldr	x23, [sp, #48]
  405264:	ldp	x29, x30, [sp], #64
  405268:	ret
  40526c:	ldr	w3, [x1]
  405270:	cmp	w3, #0x0
  405274:	add	w2, w3, #0x7
  405278:	csel	w2, w2, w3, lt  // lt = tstop
  40527c:	and	w2, w2, #0xfffffff8
  405280:	add	w2, w2, #0x8
  405284:	str	w2, [x1]
  405288:	b	40520c <ferror@plt+0x331c>
  40528c:	b	404f58 <ferror@plt+0x3068>
  405290:	ldr	x3, [x0, #8]
  405294:	ldrb	w3, [x3, #35]
  405298:	cbnz	w3, 405360 <ferror@plt+0x3470>
  40529c:	stp	x29, x30, [sp, #-64]!
  4052a0:	mov	w0, #0x28                  	// #40
  4052a4:	mov	x29, sp
  4052a8:	stp	x19, x20, [sp, #16]
  4052ac:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4052b0:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4052b4:	add	x19, x19, #0x3e0
  4052b8:	add	x20, x20, #0x630
  4052bc:	stp	x21, x22, [sp, #32]
  4052c0:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4052c4:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4052c8:	add	x22, x22, #0x8c8
  4052cc:	add	x21, x21, #0x640
  4052d0:	str	x23, [sp, #48]
  4052d4:	mov	w23, #0x1                   	// #1
  4052d8:	b	4052f4 <ferror@plt+0x3404>
  4052dc:	str	wzr, [x1]
  4052e0:	ldr	x1, [x21]
  4052e4:	bl	401b60 <putc@plt>
  4052e8:	str	w23, [x20]
  4052ec:	ldrb	w0, [x19]
  4052f0:	cbz	w0, 40532c <ferror@plt+0x343c>
  4052f4:	add	x19, x19, #0x1
  4052f8:	cmp	w0, #0x9
  4052fc:	ldr	x1, [x22]
  405300:	b.eq	405340 <ferror@plt+0x3450>  // b.none
  405304:	cmp	w0, #0xa
  405308:	b.eq	4052dc <ferror@plt+0x33ec>  // b.none
  40530c:	ldr	w2, [x1]
  405310:	add	w2, w2, #0x1
  405314:	str	w2, [x1]
  405318:	ldr	x1, [x21]
  40531c:	bl	401b60 <putc@plt>
  405320:	str	w23, [x20]
  405324:	ldrb	w0, [x19]
  405328:	cbnz	w0, 4052f4 <ferror@plt+0x3404>
  40532c:	ldp	x19, x20, [sp, #16]
  405330:	ldp	x21, x22, [sp, #32]
  405334:	ldr	x23, [sp, #48]
  405338:	ldp	x29, x30, [sp], #64
  40533c:	ret
  405340:	ldr	w3, [x1]
  405344:	cmp	w3, #0x0
  405348:	add	w2, w3, #0x7
  40534c:	csel	w2, w2, w3, lt  // lt = tstop
  405350:	and	w2, w2, #0xfffffff8
  405354:	add	w2, w2, #0x8
  405358:	str	w2, [x1]
  40535c:	b	4052e0 <ferror@plt+0x33f0>
  405360:	b	404f58 <ferror@plt+0x3068>
  405364:	nop
  405368:	stp	x29, x30, [sp, #-48]!
  40536c:	cmp	w1, #0x0
  405370:	mov	x1, x3
  405374:	mov	x29, sp
  405378:	b.le	405460 <ferror@plt+0x3570>
  40537c:	stp	x19, x20, [sp, #16]
  405380:	mov	x20, x2
  405384:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  405388:	ldr	x19, [x2]
  40538c:	add	x0, x0, #0x8d8
  405390:	ldrb	w2, [x19]
  405394:	cmp	w2, #0x25
  405398:	b.eq	4053cc <ferror@plt+0x34dc>  // b.none
  40539c:	ldp	x19, x20, [sp, #16]
  4053a0:	bl	401e80 <printf@plt>
  4053a4:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  4053a8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4053ac:	mov	w4, #0x1                   	// #1
  4053b0:	ldr	x2, [x1, #2248]
  4053b4:	ldr	w1, [x2]
  4053b8:	add	w1, w1, w0
  4053bc:	str	w1, [x2]
  4053c0:	str	w4, [x3, #1584]
  4053c4:	ldp	x29, x30, [sp], #48
  4053c8:	ret
  4053cc:	str	x3, [sp, #40]
  4053d0:	bl	401d00 <__ctype_b_loc@plt>
  4053d4:	ldrb	w4, [x19, #1]
  4053d8:	add	x5, x19, #0x1
  4053dc:	ldr	x2, [x0]
  4053e0:	ubfiz	x0, x4, #1, #8
  4053e4:	ldr	x1, [sp, #40]
  4053e8:	ldrh	w0, [x2, x0]
  4053ec:	tbz	w0, #11, 405400 <ferror@plt+0x3510>
  4053f0:	ldrb	w4, [x5, #1]!
  4053f4:	ubfiz	x0, x4, #1, #8
  4053f8:	ldrh	w0, [x2, x0]
  4053fc:	tbnz	w0, #11, 4053f0 <ferror@plt+0x3500>
  405400:	cmp	w4, #0x23
  405404:	b.eq	405478 <ferror@plt+0x3588>  // b.none
  405408:	cmp	w4, #0x6c
  40540c:	b.eq	40546c <ferror@plt+0x357c>  // b.none
  405410:	sub	w4, w4, #0x48
  405414:	and	w4, w4, #0xff
  405418:	cmp	w4, #0x30
  40541c:	b.hi	405448 <ferror@plt+0x3558>  // b.pmore
  405420:	mov	x0, #0x1                   	// #1
  405424:	lsl	x0, x0, x4
  405428:	tst	x0, #0x8000000080
  40542c:	b.ne	40549c <ferror@plt+0x35ac>  // b.any
  405430:	and	x4, x0, #0x1ffff
  405434:	and	x4, x4, #0xffffffffffff0001
  405438:	cbnz	x4, 405490 <ferror@plt+0x35a0>
  40543c:	and	x0, x0, #0x1ffff00000000
  405440:	and	x0, x0, #0xffff0001ffffffff
  405444:	cbnz	x0, 405484 <ferror@plt+0x3594>
  405448:	mov	w0, #0x69                  	// #105
  40544c:	strb	w0, [x5]
  405450:	strb	wzr, [x5, #1]
  405454:	ldr	x0, [x20]
  405458:	ldp	x19, x20, [sp, #16]
  40545c:	b	4053a0 <ferror@plt+0x34b0>
  405460:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  405464:	add	x0, x0, #0x8d8
  405468:	b	4053a0 <ferror@plt+0x34b0>
  40546c:	ldrb	w4, [x5, #1]
  405470:	add	x5, x5, #0x1
  405474:	b	405410 <ferror@plt+0x3520>
  405478:	ldrb	w4, [x5, #1]
  40547c:	add	x5, x5, #0x1
  405480:	b	405408 <ferror@plt+0x3518>
  405484:	mov	w0, #0x78                  	// #120
  405488:	strb	w0, [x5]
  40548c:	b	405450 <ferror@plt+0x3560>
  405490:	mov	w0, #0x58                  	// #88
  405494:	strb	w0, [x5]
  405498:	b	405450 <ferror@plt+0x3560>
  40549c:	mov	w0, #0x6f                  	// #111
  4054a0:	strb	w0, [x5]
  4054a4:	b	405450 <ferror@plt+0x3560>
  4054a8:	ldr	x3, [x0, #8]
  4054ac:	ldr	x3, [x3, #16]
  4054b0:	cbnz	x3, 405578 <ferror@plt+0x3688>
  4054b4:	stp	x29, x30, [sp, #-64]!
  4054b8:	mov	w0, #0x28                  	// #40
  4054bc:	mov	x29, sp
  4054c0:	stp	x19, x20, [sp, #16]
  4054c4:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4054c8:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4054cc:	add	x19, x19, #0x3e0
  4054d0:	add	x20, x20, #0x630
  4054d4:	stp	x21, x22, [sp, #32]
  4054d8:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4054dc:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4054e0:	add	x22, x22, #0x8c8
  4054e4:	add	x21, x21, #0x640
  4054e8:	str	x23, [sp, #48]
  4054ec:	mov	w23, #0x1                   	// #1
  4054f0:	b	40550c <ferror@plt+0x361c>
  4054f4:	str	wzr, [x1]
  4054f8:	ldr	x1, [x21]
  4054fc:	bl	401b60 <putc@plt>
  405500:	str	w23, [x20]
  405504:	ldrb	w0, [x19]
  405508:	cbz	w0, 405544 <ferror@plt+0x3654>
  40550c:	add	x19, x19, #0x1
  405510:	cmp	w0, #0x9
  405514:	ldr	x1, [x22]
  405518:	b.eq	405558 <ferror@plt+0x3668>  // b.none
  40551c:	cmp	w0, #0xa
  405520:	b.eq	4054f4 <ferror@plt+0x3604>  // b.none
  405524:	ldr	w2, [x1]
  405528:	add	w2, w2, #0x1
  40552c:	str	w2, [x1]
  405530:	ldr	x1, [x21]
  405534:	bl	401b60 <putc@plt>
  405538:	str	w23, [x20]
  40553c:	ldrb	w0, [x19]
  405540:	cbnz	w0, 40550c <ferror@plt+0x361c>
  405544:	ldp	x19, x20, [sp, #16]
  405548:	ldp	x21, x22, [sp, #32]
  40554c:	ldr	x23, [sp, #48]
  405550:	ldp	x29, x30, [sp], #64
  405554:	ret
  405558:	ldr	w3, [x1]
  40555c:	cmp	w3, #0x0
  405560:	add	w2, w3, #0x7
  405564:	csel	w2, w2, w3, lt  // lt = tstop
  405568:	and	w2, w2, #0xfffffff8
  40556c:	add	w2, w2, #0x8
  405570:	str	w2, [x1]
  405574:	b	4054f8 <ferror@plt+0x3608>
  405578:	b	405368 <ferror@plt+0x3478>
  40557c:	nop
  405580:	ldr	x3, [x0, #8]
  405584:	ldr	x3, [x3, #24]
  405588:	cbnz	x3, 405650 <ferror@plt+0x3760>
  40558c:	stp	x29, x30, [sp, #-64]!
  405590:	mov	w0, #0x28                  	// #40
  405594:	mov	x29, sp
  405598:	stp	x19, x20, [sp, #16]
  40559c:	adrp	x19, 413000 <argp_error@@Base+0x3650>
  4055a0:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  4055a4:	add	x19, x19, #0x3e0
  4055a8:	add	x20, x20, #0x630
  4055ac:	stp	x21, x22, [sp, #32]
  4055b0:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  4055b4:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  4055b8:	add	x22, x22, #0x8c8
  4055bc:	add	x21, x21, #0x640
  4055c0:	str	x23, [sp, #48]
  4055c4:	mov	w23, #0x1                   	// #1
  4055c8:	b	4055e4 <ferror@plt+0x36f4>
  4055cc:	str	wzr, [x1]
  4055d0:	ldr	x1, [x21]
  4055d4:	bl	401b60 <putc@plt>
  4055d8:	str	w23, [x20]
  4055dc:	ldrb	w0, [x19]
  4055e0:	cbz	w0, 40561c <ferror@plt+0x372c>
  4055e4:	add	x19, x19, #0x1
  4055e8:	cmp	w0, #0x9
  4055ec:	ldr	x1, [x22]
  4055f0:	b.eq	405630 <ferror@plt+0x3740>  // b.none
  4055f4:	cmp	w0, #0xa
  4055f8:	b.eq	4055cc <ferror@plt+0x36dc>  // b.none
  4055fc:	ldr	w2, [x1]
  405600:	add	w2, w2, #0x1
  405604:	str	w2, [x1]
  405608:	ldr	x1, [x21]
  40560c:	bl	401b60 <putc@plt>
  405610:	str	w23, [x20]
  405614:	ldrb	w0, [x19]
  405618:	cbnz	w0, 4055e4 <ferror@plt+0x36f4>
  40561c:	ldp	x19, x20, [sp, #16]
  405620:	ldp	x21, x22, [sp, #32]
  405624:	ldr	x23, [sp, #48]
  405628:	ldp	x29, x30, [sp], #64
  40562c:	ret
  405630:	ldr	w3, [x1]
  405634:	cmp	w3, #0x0
  405638:	add	w2, w3, #0x7
  40563c:	csel	w2, w2, w3, lt  // lt = tstop
  405640:	and	w2, w2, #0xfffffff8
  405644:	add	w2, w2, #0x8
  405648:	str	w2, [x1]
  40564c:	b	4055d0 <ferror@plt+0x36e0>
  405650:	b	405368 <ferror@plt+0x3478>
  405654:	nop
  405658:	stp	x29, x30, [sp, #-96]!
  40565c:	mov	x29, sp
  405660:	stp	x23, x24, [sp, #48]
  405664:	mov	x23, x0
  405668:	ldr	w0, [x3, #4]
  40566c:	mov	x24, x3
  405670:	stp	x19, x20, [sp, #16]
  405674:	stp	x21, x22, [sp, #32]
  405678:	mov	w21, w1
  40567c:	mov	x22, x2
  405680:	bl	401b90 <inet_ntoa@plt>
  405684:	mov	x19, x0
  405688:	mov	w1, #0x2e                  	// #46
  40568c:	bl	401d70 <strchr@plt>
  405690:	mov	x20, x0
  405694:	mov	w2, #0x0                   	// #0
  405698:	mov	x0, x19
  40569c:	mov	x1, #0x0                   	// #0
  4056a0:	strb	wzr, [x20], #1
  4056a4:	bl	401d10 <strtol@plt>
  4056a8:	mov	x2, x0
  4056ac:	mov	w1, #0x2e                  	// #46
  4056b0:	mov	x0, x20
  4056b4:	str	x2, [sp, #64]
  4056b8:	bl	401d70 <strchr@plt>
  4056bc:	mov	x19, x0
  4056c0:	mov	w2, #0x0                   	// #0
  4056c4:	mov	x0, x20
  4056c8:	mov	x1, #0x0                   	// #0
  4056cc:	strb	wzr, [x19], #1
  4056d0:	bl	401d10 <strtol@plt>
  4056d4:	mov	x2, x0
  4056d8:	mov	w1, #0x2e                  	// #46
  4056dc:	mov	x0, x19
  4056e0:	str	x2, [sp, #72]
  4056e4:	bl	401d70 <strchr@plt>
  4056e8:	mov	x20, x0
  4056ec:	mov	w2, #0x0                   	// #0
  4056f0:	mov	x1, #0x0                   	// #0
  4056f4:	mov	x0, x19
  4056f8:	strb	wzr, [x20], #1
  4056fc:	bl	401d10 <strtol@plt>
  405700:	mov	x3, x0
  405704:	mov	w2, #0x0                   	// #0
  405708:	mov	x1, #0x0                   	// #0
  40570c:	mov	x0, x20
  405710:	str	x3, [sp, #80]
  405714:	bl	401d10 <strtol@plt>
  405718:	mov	x1, x0
  40571c:	ldr	w0, [x24, #4]
  405720:	str	x1, [sp, #88]
  405724:	bl	401b90 <inet_ntoa@plt>
  405728:	cmp	w21, #0x0
  40572c:	b.gt	4057e0 <ferror@plt+0x38f0>
  405730:	mov	x19, x0
  405734:	ldrb	w0, [x0]
  405738:	cbz	w0, 4057ac <ferror@plt+0x38bc>
  40573c:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  405740:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  405744:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  405748:	add	x22, x22, #0x8c8
  40574c:	add	x21, x21, #0x640
  405750:	add	x20, x20, #0x630
  405754:	mov	w23, #0x1                   	// #1
  405758:	b	405774 <ferror@plt+0x3884>
  40575c:	str	wzr, [x1]
  405760:	ldr	x1, [x21]
  405764:	bl	401b60 <putc@plt>
  405768:	str	w23, [x20]
  40576c:	ldrb	w0, [x19]
  405770:	cbz	w0, 4057ac <ferror@plt+0x38bc>
  405774:	add	x19, x19, #0x1
  405778:	cmp	w0, #0x9
  40577c:	ldr	x1, [x22]
  405780:	b.eq	4057c0 <ferror@plt+0x38d0>  // b.none
  405784:	cmp	w0, #0xa
  405788:	b.eq	40575c <ferror@plt+0x386c>  // b.none
  40578c:	ldr	w2, [x1]
  405790:	add	w2, w2, #0x1
  405794:	str	w2, [x1]
  405798:	ldr	x1, [x21]
  40579c:	bl	401b60 <putc@plt>
  4057a0:	str	w23, [x20]
  4057a4:	ldrb	w0, [x19]
  4057a8:	cbnz	w0, 405774 <ferror@plt+0x3884>
  4057ac:	ldp	x19, x20, [sp, #16]
  4057b0:	ldp	x21, x22, [sp, #32]
  4057b4:	ldp	x23, x24, [sp, #48]
  4057b8:	ldp	x29, x30, [sp], #96
  4057bc:	ret
  4057c0:	ldr	w3, [x1]
  4057c4:	cmp	w3, #0x0
  4057c8:	add	w2, w3, #0x7
  4057cc:	csel	w2, w2, w3, lt  // lt = tstop
  4057d0:	and	w2, w2, #0xfffffff8
  4057d4:	add	w2, w2, #0x8
  4057d8:	str	w2, [x1]
  4057dc:	b	405760 <ferror@plt+0x3870>
  4057e0:	ldr	x0, [x22]
  4057e4:	mov	w2, #0x0                   	// #0
  4057e8:	mov	x1, #0x0                   	// #0
  4057ec:	bl	401d10 <strtol@plt>
  4057f0:	cmp	x0, #0x3
  4057f4:	b.hi	4057ac <ferror@plt+0x38bc>  // b.pmore
  4057f8:	add	x1, sp, #0x40
  4057fc:	add	x2, x22, #0x8
  405800:	ldp	x19, x20, [sp, #16]
  405804:	ldr	x3, [x1, x0, lsl #3]
  405808:	sub	w1, w21, #0x1
  40580c:	mov	x0, x23
  405810:	ldp	x21, x22, [sp, #32]
  405814:	ldp	x23, x24, [sp, #48]
  405818:	ldp	x29, x30, [sp], #96
  40581c:	b	404f58 <ferror@plt+0x3068>
  405820:	stp	x29, x30, [sp, #-48]!
  405824:	mov	x29, sp
  405828:	stp	x19, x20, [sp, #16]
  40582c:	mov	x19, x0
  405830:	mov	w20, w1
  405834:	str	x21, [sp, #32]
  405838:	mov	x21, x2
  40583c:	ldr	x2, [x0, #8]
  405840:	mov	w1, #0x8915                	// #35093
  405844:	ldr	w0, [x0, #16]
  405848:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  40584c:	tbnz	w0, #31, 405874 <ferror@plt+0x3984>
  405850:	mov	x2, x21
  405854:	mov	w1, w20
  405858:	mov	x0, x19
  40585c:	ldr	x3, [x19, #8]
  405860:	ldp	x19, x20, [sp, #16]
  405864:	add	x3, x3, #0x10
  405868:	ldr	x21, [sp, #32]
  40586c:	ldp	x29, x30, [sp], #48
  405870:	b	405658 <ferror@plt+0x3768>
  405874:	bl	401ea0 <__errno_location@plt>
  405878:	ldr	w1, [x0]
  40587c:	ldr	x3, [x19, #8]
  405880:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  405884:	ldp	x19, x20, [sp, #16]
  405888:	add	x2, x2, #0x3f0
  40588c:	ldr	x21, [sp, #32]
  405890:	mov	w0, #0x1                   	// #1
  405894:	ldp	x29, x30, [sp], #48
  405898:	b	401b30 <error@plt>
  40589c:	nop
  4058a0:	stp	x29, x30, [sp, #-48]!
  4058a4:	mov	x29, sp
  4058a8:	stp	x19, x20, [sp, #16]
  4058ac:	mov	x19, x0
  4058b0:	mov	w20, w1
  4058b4:	str	x21, [sp, #32]
  4058b8:	mov	x21, x2
  4058bc:	ldr	x2, [x0, #8]
  4058c0:	mov	w1, #0x891b                	// #35099
  4058c4:	ldr	w0, [x0, #16]
  4058c8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4058cc:	tbnz	w0, #31, 4058f4 <ferror@plt+0x3a04>
  4058d0:	mov	x2, x21
  4058d4:	mov	w1, w20
  4058d8:	mov	x0, x19
  4058dc:	ldr	x3, [x19, #8]
  4058e0:	ldp	x19, x20, [sp, #16]
  4058e4:	add	x3, x3, #0x10
  4058e8:	ldr	x21, [sp, #32]
  4058ec:	ldp	x29, x30, [sp], #48
  4058f0:	b	405658 <ferror@plt+0x3768>
  4058f4:	bl	401ea0 <__errno_location@plt>
  4058f8:	ldr	w1, [x0]
  4058fc:	ldr	x3, [x19, #8]
  405900:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  405904:	ldp	x19, x20, [sp, #16]
  405908:	add	x2, x2, #0x418
  40590c:	ldr	x21, [sp, #32]
  405910:	mov	w0, #0x1                   	// #1
  405914:	ldp	x29, x30, [sp], #48
  405918:	b	401b30 <error@plt>
  40591c:	nop
  405920:	stp	x29, x30, [sp, #-48]!
  405924:	mov	x29, sp
  405928:	stp	x19, x20, [sp, #16]
  40592c:	mov	x19, x0
  405930:	mov	w20, w1
  405934:	str	x21, [sp, #32]
  405938:	mov	x21, x2
  40593c:	ldr	x2, [x0, #8]
  405940:	mov	w1, #0x8919                	// #35097
  405944:	ldr	w0, [x0, #16]
  405948:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  40594c:	tbnz	w0, #31, 405974 <ferror@plt+0x3a84>
  405950:	mov	x2, x21
  405954:	mov	w1, w20
  405958:	mov	x0, x19
  40595c:	ldr	x3, [x19, #8]
  405960:	ldp	x19, x20, [sp, #16]
  405964:	add	x3, x3, #0x10
  405968:	ldr	x21, [sp, #32]
  40596c:	ldp	x29, x30, [sp], #48
  405970:	b	405658 <ferror@plt+0x3768>
  405974:	bl	401ea0 <__errno_location@plt>
  405978:	ldr	w1, [x0]
  40597c:	ldr	x3, [x19, #8]
  405980:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  405984:	ldp	x19, x20, [sp, #16]
  405988:	add	x2, x2, #0x448
  40598c:	ldr	x21, [sp, #32]
  405990:	mov	w0, #0x1                   	// #1
  405994:	ldp	x29, x30, [sp], #48
  405998:	b	401b30 <error@plt>
  40599c:	nop
  4059a0:	stp	x29, x30, [sp, #-48]!
  4059a4:	mov	x29, sp
  4059a8:	stp	x19, x20, [sp, #16]
  4059ac:	mov	x19, x0
  4059b0:	mov	w20, w1
  4059b4:	str	x21, [sp, #32]
  4059b8:	mov	x21, x2
  4059bc:	ldr	x2, [x0, #8]
  4059c0:	mov	w1, #0x8917                	// #35095
  4059c4:	ldr	w0, [x0, #16]
  4059c8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4059cc:	tbnz	w0, #31, 4059f4 <ferror@plt+0x3b04>
  4059d0:	mov	x2, x21
  4059d4:	mov	w1, w20
  4059d8:	mov	x0, x19
  4059dc:	ldr	x3, [x19, #8]
  4059e0:	ldp	x19, x20, [sp, #16]
  4059e4:	add	x3, x3, #0x10
  4059e8:	ldr	x21, [sp, #32]
  4059ec:	ldp	x29, x30, [sp], #48
  4059f0:	b	405658 <ferror@plt+0x3768>
  4059f4:	bl	401ea0 <__errno_location@plt>
  4059f8:	ldr	w1, [x0]
  4059fc:	ldr	x3, [x19, #8]
  405a00:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  405a04:	ldp	x19, x20, [sp, #16]
  405a08:	add	x2, x2, #0x478
  405a0c:	ldr	x21, [sp, #32]
  405a10:	mov	w0, #0x1                   	// #1
  405a14:	ldp	x29, x30, [sp], #48
  405a18:	b	401b30 <error@plt>
  405a1c:	nop
  405a20:	stp	x29, x30, [sp, #-128]!
  405a24:	mov	x29, sp
  405a28:	str	w1, [sp, #108]
  405a2c:	stp	x2, x0, [sp, #112]
  405a30:	cbz	w3, 405c94 <ferror@plt+0x3da4>
  405a34:	stp	x19, x20, [sp, #16]
  405a38:	mov	w20, #0x1                   	// #1
  405a3c:	mov	w19, w3
  405a40:	stp	x21, x22, [sp, #32]
  405a44:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  405a48:	add	x22, x22, #0x630
  405a4c:	stp	x23, x24, [sp, #48]
  405a50:	stp	x25, x26, [sp, #64]
  405a54:	mov	w26, w20
  405a58:	stp	x27, x28, [sp, #80]
  405a5c:	adrp	x28, 429000 <argp_error@@Base+0x19650>
  405a60:	adrp	x27, 42a000 <argp_error@@Base+0x1a650>
  405a64:	b	405a78 <ferror@plt+0x3b88>
  405a68:	lsl	w26, w26, #1
  405a6c:	cmp	w19, #0x0
  405a70:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  405a74:	b.eq	405b98 <ferror@plt+0x3ca8>  // b.none
  405a78:	tst	w19, w26
  405a7c:	b.eq	405a68 <ferror@plt+0x3b78>  // b.none
  405a80:	mov	w0, w26
  405a84:	mov	x1, #0x0                   	// #0
  405a88:	bl	402400 <ferror@plt+0x510>
  405a8c:	mov	x25, x0
  405a90:	cbz	x0, 405a68 <ferror@plt+0x3b78>
  405a94:	cbnz	w20, 405b18 <ferror@plt+0x3c28>
  405a98:	ldr	w0, [sp, #108]
  405a9c:	cmp	w0, #0x0
  405aa0:	b.le	405c9c <ferror@plt+0x3dac>
  405aa4:	ldr	x0, [sp, #112]
  405aa8:	ldr	x24, [x0]
  405aac:	ldrb	w0, [x24]
  405ab0:	cbz	w0, 405b18 <ferror@plt+0x3c28>
  405ab4:	add	x20, x28, #0x8c8
  405ab8:	add	x21, x27, #0x640
  405abc:	mov	w23, #0x1                   	// #1
  405ac0:	b	405adc <ferror@plt+0x3bec>
  405ac4:	str	wzr, [x1]
  405ac8:	ldr	x1, [x21]
  405acc:	bl	401b60 <putc@plt>
  405ad0:	str	w23, [x22]
  405ad4:	ldrb	w0, [x24]
  405ad8:	cbz	w0, 405b18 <ferror@plt+0x3c28>
  405adc:	add	x24, x24, #0x1
  405ae0:	cmp	w0, #0x9
  405ae4:	ldr	x1, [x20]
  405ae8:	b.eq	405cc4 <ferror@plt+0x3dd4>  // b.none
  405aec:	cmp	w0, #0xa
  405af0:	b.eq	405ac4 <ferror@plt+0x3bd4>  // b.none
  405af4:	ldr	w5, [x1]
  405af8:	add	w5, w5, #0x1
  405afc:	str	w5, [x1]
  405b00:	ldr	x1, [x21]
  405b04:	bl	401b60 <putc@plt>
  405b08:	str	w23, [x22]
  405b0c:	ldrb	w0, [x24]
  405b10:	cbnz	w0, 405adc <ferror@plt+0x3bec>
  405b14:	nop
  405b18:	ldrb	w0, [x25]
  405b1c:	add	x20, x28, #0x8c8
  405b20:	add	x21, x27, #0x640
  405b24:	mov	w23, #0x1                   	// #1
  405b28:	cbnz	w0, 405b48 <ferror@plt+0x3c58>
  405b2c:	b	405b80 <ferror@plt+0x3c90>
  405b30:	str	wzr, [x1]
  405b34:	ldr	x1, [x21]
  405b38:	bl	401b60 <putc@plt>
  405b3c:	str	w23, [x22]
  405b40:	ldrb	w0, [x25]
  405b44:	cbz	w0, 405b80 <ferror@plt+0x3c90>
  405b48:	add	x25, x25, #0x1
  405b4c:	cmp	w0, #0x9
  405b50:	ldr	x1, [x20]
  405b54:	b.eq	405c60 <ferror@plt+0x3d70>  // b.none
  405b58:	cmp	w0, #0xa
  405b5c:	b.eq	405b30 <ferror@plt+0x3c40>  // b.none
  405b60:	ldr	w4, [x1]
  405b64:	add	w4, w4, #0x1
  405b68:	str	w4, [x1]
  405b6c:	ldr	x1, [x21]
  405b70:	bl	401b60 <putc@plt>
  405b74:	str	w23, [x22]
  405b78:	ldrb	w0, [x25]
  405b7c:	cbnz	w0, 405b48 <ferror@plt+0x3c58>
  405b80:	bic	w19, w19, w26
  405b84:	lsl	w26, w26, #1
  405b88:	cmp	w19, #0x0
  405b8c:	mov	w20, #0x0                   	// #0
  405b90:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  405b94:	b.ne	405a78 <ferror@plt+0x3b88>  // b.any
  405b98:	cbz	w19, 405c80 <ferror@plt+0x3d90>
  405b9c:	cbnz	w20, 405c2c <ferror@plt+0x3d3c>
  405ba0:	ldr	w0, [sp, #108]
  405ba4:	cmp	w0, #0x0
  405ba8:	b.le	405ce4 <ferror@plt+0x3df4>
  405bac:	ldr	x0, [sp, #112]
  405bb0:	ldr	x22, [x0]
  405bb4:	ldrb	w0, [x22]
  405bb8:	cbz	w0, 405c2c <ferror@plt+0x3d3c>
  405bbc:	adrp	x20, 429000 <argp_error@@Base+0x19650>
  405bc0:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  405bc4:	adrp	x23, 42a000 <argp_error@@Base+0x1a650>
  405bc8:	add	x20, x20, #0x8c8
  405bcc:	add	x21, x21, #0x640
  405bd0:	add	x23, x23, #0x630
  405bd4:	mov	w27, #0x1                   	// #1
  405bd8:	b	405bf4 <ferror@plt+0x3d04>
  405bdc:	str	wzr, [x1]
  405be0:	ldr	x1, [x21]
  405be4:	bl	401b60 <putc@plt>
  405be8:	str	w27, [x23]
  405bec:	ldrb	w0, [x22]
  405bf0:	cbz	w0, 405c2c <ferror@plt+0x3d3c>
  405bf4:	add	x22, x22, #0x1
  405bf8:	cmp	w0, #0x9
  405bfc:	ldr	x1, [x20]
  405c00:	b.eq	405d18 <ferror@plt+0x3e28>  // b.none
  405c04:	cmp	w0, #0xa
  405c08:	b.eq	405bdc <ferror@plt+0x3cec>  // b.none
  405c0c:	ldr	w2, [x1]
  405c10:	add	w2, w2, #0x1
  405c14:	str	w2, [x1]
  405c18:	ldr	x1, [x21]
  405c1c:	bl	401b60 <putc@plt>
  405c20:	str	w27, [x23]
  405c24:	ldrb	w0, [x22]
  405c28:	cbnz	w0, 405bf4 <ferror@plt+0x3d04>
  405c2c:	ldr	x0, [sp, #112]
  405c30:	mov	w3, w19
  405c34:	ldp	x19, x20, [sp, #16]
  405c38:	add	x2, x0, #0x8
  405c3c:	ldr	w0, [sp, #108]
  405c40:	ldp	x21, x22, [sp, #32]
  405c44:	sub	w1, w0, #0x1
  405c48:	ldp	x23, x24, [sp, #48]
  405c4c:	ldp	x25, x26, [sp, #64]
  405c50:	ldp	x27, x28, [sp, #80]
  405c54:	ldr	x0, [sp, #120]
  405c58:	ldp	x29, x30, [sp], #128
  405c5c:	b	404f58 <ferror@plt+0x3068>
  405c60:	ldr	w5, [x1]
  405c64:	cmp	w5, #0x0
  405c68:	add	w4, w5, #0x7
  405c6c:	csel	w4, w4, w5, lt  // lt = tstop
  405c70:	and	w4, w4, #0xfffffff8
  405c74:	add	w4, w4, #0x8
  405c78:	str	w4, [x1]
  405c7c:	b	405b34 <ferror@plt+0x3c44>
  405c80:	ldp	x19, x20, [sp, #16]
  405c84:	ldp	x21, x22, [sp, #32]
  405c88:	ldp	x23, x24, [sp, #48]
  405c8c:	ldp	x25, x26, [sp, #64]
  405c90:	ldp	x27, x28, [sp, #80]
  405c94:	ldp	x29, x30, [sp], #128
  405c98:	ret
  405c9c:	ldr	x5, [x28, #2248]
  405ca0:	mov	w0, #0x20                  	// #32
  405ca4:	ldr	x1, [x27, #1600]
  405ca8:	ldr	w4, [x5]
  405cac:	add	w4, w4, #0x1
  405cb0:	str	w4, [x5]
  405cb4:	bl	401b60 <putc@plt>
  405cb8:	mov	w0, #0x1                   	// #1
  405cbc:	str	w0, [x22]
  405cc0:	b	405b18 <ferror@plt+0x3c28>
  405cc4:	ldr	w6, [x1]
  405cc8:	cmp	w6, #0x0
  405ccc:	add	w5, w6, #0x7
  405cd0:	csel	w5, w5, w6, lt  // lt = tstop
  405cd4:	and	w5, w5, #0xfffffff8
  405cd8:	add	w5, w5, #0x8
  405cdc:	str	w5, [x1]
  405ce0:	b	405ac8 <ferror@plt+0x3bd8>
  405ce4:	adrp	x2, 429000 <argp_error@@Base+0x19650>
  405ce8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  405cec:	mov	w0, #0x20                  	// #32
  405cf0:	ldr	x3, [x2, #2248]
  405cf4:	ldr	x1, [x1, #1600]
  405cf8:	ldr	w2, [x3]
  405cfc:	add	w2, w2, #0x1
  405d00:	str	w2, [x3]
  405d04:	bl	401b60 <putc@plt>
  405d08:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  405d0c:	mov	w1, #0x1                   	// #1
  405d10:	str	w1, [x0, #1584]
  405d14:	b	405c2c <ferror@plt+0x3d3c>
  405d18:	ldr	w3, [x1]
  405d1c:	cmp	w3, #0x0
  405d20:	add	w2, w3, #0x7
  405d24:	csel	w2, w2, w3, lt  // lt = tstop
  405d28:	and	w2, w2, #0xfffffff8
  405d2c:	add	w2, w2, #0x8
  405d30:	str	w2, [x1]
  405d34:	b	405be0 <ferror@plt+0x3cf0>
  405d38:	stp	x29, x30, [sp, #-80]!
  405d3c:	mov	x29, sp
  405d40:	stp	x19, x20, [sp, #16]
  405d44:	mov	x19, x0
  405d48:	mov	w20, w1
  405d4c:	stp	x21, x22, [sp, #32]
  405d50:	mov	x21, x2
  405d54:	mov	w1, #0x8913                	// #35091
  405d58:	ldr	x2, [x0, #8]
  405d5c:	ldr	w0, [x0, #16]
  405d60:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  405d64:	tbnz	w0, #31, 405dd0 <ferror@plt+0x3ee0>
  405d68:	ldr	x0, [x19, #8]
  405d6c:	str	x23, [sp, #48]
  405d70:	cmp	w20, #0x0
  405d74:	ldrh	w23, [x0, #16]
  405d78:	b.le	405e40 <ferror@plt+0x3f50>
  405d7c:	ldr	x22, [x21]
  405d80:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  405d84:	add	x1, x1, #0x4d0
  405d88:	mov	x0, x22
  405d8c:	bl	401cf0 <strcmp@plt>
  405d90:	cbz	w0, 405dfc <ferror@plt+0x3f0c>
  405d94:	adrp	x1, 412000 <argp_error@@Base+0x2650>
  405d98:	mov	x0, x22
  405d9c:	add	x1, x1, #0x2d8
  405da0:	bl	401cf0 <strcmp@plt>
  405da4:	cbz	w0, 405e68 <ferror@plt+0x3f78>
  405da8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  405dac:	mov	x0, x22
  405db0:	add	x1, x1, #0x4d8
  405db4:	bl	401cf0 <strcmp@plt>
  405db8:	cbz	w0, 405e24 <ferror@plt+0x3f34>
  405dbc:	ldr	x23, [sp, #48]
  405dc0:	ldp	x19, x20, [sp, #16]
  405dc4:	ldp	x21, x22, [sp, #32]
  405dc8:	ldp	x29, x30, [sp], #80
  405dcc:	ret
  405dd0:	bl	401ea0 <__errno_location@plt>
  405dd4:	ldr	w1, [x0]
  405dd8:	ldr	x3, [x19, #8]
  405ddc:	mov	w0, #0x1                   	// #1
  405de0:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  405de4:	add	x2, x2, #0x4a8
  405de8:	bl	401b30 <error@plt>
  405dec:	ldp	x19, x20, [sp, #16]
  405df0:	ldp	x21, x22, [sp, #32]
  405df4:	ldp	x29, x30, [sp], #80
  405df8:	ret
  405dfc:	mov	w3, w23
  405e00:	add	x2, x21, #0x8
  405e04:	sub	w1, w20, #0x1
  405e08:	mov	x0, x19
  405e0c:	bl	404f58 <ferror@plt+0x3068>
  405e10:	ldp	x19, x20, [sp, #16]
  405e14:	ldp	x21, x22, [sp, #32]
  405e18:	ldr	x23, [sp, #48]
  405e1c:	ldp	x29, x30, [sp], #80
  405e20:	ret
  405e24:	mov	w3, w23
  405e28:	add	x2, x21, #0x8
  405e2c:	sub	w1, w20, #0x1
  405e30:	mov	x0, x19
  405e34:	bl	405a20 <ferror@plt+0x3b30>
  405e38:	ldr	x23, [sp, #48]
  405e3c:	b	405dc0 <ferror@plt+0x3ed0>
  405e40:	mov	w3, w23
  405e44:	mov	x2, x21
  405e48:	mov	w1, w20
  405e4c:	mov	x0, x19
  405e50:	bl	405a20 <ferror@plt+0x3b30>
  405e54:	ldp	x19, x20, [sp, #16]
  405e58:	ldp	x21, x22, [sp, #32]
  405e5c:	ldr	x23, [sp, #48]
  405e60:	ldp	x29, x30, [sp], #80
  405e64:	ret
  405e68:	mov	w0, w23
  405e6c:	add	x1, sp, #0x40
  405e70:	mov	x2, #0xf                   	// #15
  405e74:	bl	402668 <ferror@plt+0x778>
  405e78:	ldrb	w0, [sp, #64]
  405e7c:	cbz	w0, 405dbc <ferror@plt+0x3ecc>
  405e80:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  405e84:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  405e88:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  405e8c:	add	x19, sp, #0x40
  405e90:	add	x22, x22, #0x8c8
  405e94:	add	x21, x21, #0x640
  405e98:	add	x20, x20, #0x630
  405e9c:	mov	w23, #0x1                   	// #1
  405ea0:	b	405ebc <ferror@plt+0x3fcc>
  405ea4:	str	wzr, [x1]
  405ea8:	ldr	x1, [x21]
  405eac:	bl	401b60 <putc@plt>
  405eb0:	str	w23, [x20]
  405eb4:	ldrb	w0, [x19]
  405eb8:	cbz	w0, 405dbc <ferror@plt+0x3ecc>
  405ebc:	add	x19, x19, #0x1
  405ec0:	cmp	w0, #0x9
  405ec4:	ldr	x1, [x22]
  405ec8:	b.eq	405ee4 <ferror@plt+0x3ff4>  // b.none
  405ecc:	cmp	w0, #0xa
  405ed0:	b.eq	405ea4 <ferror@plt+0x3fb4>  // b.none
  405ed4:	ldr	w2, [x1]
  405ed8:	add	w2, w2, #0x1
  405edc:	str	w2, [x1]
  405ee0:	b	405ea8 <ferror@plt+0x3fb8>
  405ee4:	ldr	w3, [x1]
  405ee8:	cmp	w3, #0x0
  405eec:	add	w2, w3, #0x7
  405ef0:	csel	w2, w2, w3, lt  // lt = tstop
  405ef4:	and	w2, w2, #0xfffffff8
  405ef8:	add	w2, w2, #0x8
  405efc:	str	w2, [x1]
  405f00:	b	405ea8 <ferror@plt+0x3fb8>
  405f04:	nop
  405f08:	stp	x29, x30, [sp, #-80]!
  405f0c:	mov	w0, w3
  405f10:	mov	x2, #0xf                   	// #15
  405f14:	mov	x29, sp
  405f18:	add	x1, sp, #0x40
  405f1c:	bl	402668 <ferror@plt+0x778>
  405f20:	ldrb	w0, [sp, #64]
  405f24:	cbz	w0, 405fb4 <ferror@plt+0x40c4>
  405f28:	stp	x19, x20, [sp, #16]
  405f2c:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  405f30:	add	x19, sp, #0x40
  405f34:	add	x20, x20, #0x630
  405f38:	stp	x21, x22, [sp, #32]
  405f3c:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  405f40:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  405f44:	add	x22, x22, #0x8c8
  405f48:	add	x21, x21, #0x640
  405f4c:	str	x23, [sp, #48]
  405f50:	mov	w23, #0x1                   	// #1
  405f54:	b	405f70 <ferror@plt+0x4080>
  405f58:	str	wzr, [x1]
  405f5c:	ldr	x1, [x21]
  405f60:	bl	401b60 <putc@plt>
  405f64:	str	w23, [x20]
  405f68:	ldrb	w0, [x19]
  405f6c:	cbz	w0, 405fa8 <ferror@plt+0x40b8>
  405f70:	add	x19, x19, #0x1
  405f74:	cmp	w0, #0x9
  405f78:	ldr	x1, [x22]
  405f7c:	b.eq	405fbc <ferror@plt+0x40cc>  // b.none
  405f80:	cmp	w0, #0xa
  405f84:	b.eq	405f58 <ferror@plt+0x4068>  // b.none
  405f88:	ldr	w2, [x1]
  405f8c:	add	w2, w2, #0x1
  405f90:	str	w2, [x1]
  405f94:	ldr	x1, [x21]
  405f98:	bl	401b60 <putc@plt>
  405f9c:	str	w23, [x20]
  405fa0:	ldrb	w0, [x19]
  405fa4:	cbnz	w0, 405f70 <ferror@plt+0x4080>
  405fa8:	ldp	x19, x20, [sp, #16]
  405fac:	ldp	x21, x22, [sp, #32]
  405fb0:	ldr	x23, [sp, #48]
  405fb4:	ldp	x29, x30, [sp], #80
  405fb8:	ret
  405fbc:	ldr	w3, [x1]
  405fc0:	cmp	w3, #0x0
  405fc4:	add	w2, w3, #0x7
  405fc8:	csel	w2, w2, w3, lt  // lt = tstop
  405fcc:	and	w2, w2, #0xfffffff8
  405fd0:	add	w2, w2, #0x8
  405fd4:	str	w2, [x1]
  405fd8:	b	405f5c <ferror@plt+0x406c>
  405fdc:	nop
  405fe0:	stp	x29, x30, [sp, #-80]!
  405fe4:	mov	x29, sp
  405fe8:	stp	x21, x22, [sp, #32]
  405fec:	adrp	x22, 429000 <argp_error@@Base+0x19650>
  405ff0:	add	x21, x22, #0x8c8
  405ff4:	stp	x19, x20, [sp, #16]
  405ff8:	mov	x19, x0
  405ffc:	ldr	x0, [x21, #8]
  406000:	stp	x23, x24, [sp, #48]
  406004:	str	x25, [sp, #64]
  406008:	cbz	x0, 406064 <ferror@plt+0x4174>
  40600c:	mov	x23, x1
  406010:	mov	w24, w2
  406014:	mov	x25, x3
  406018:	add	x20, x21, #0x8
  40601c:	b	406028 <ferror@plt+0x4138>
  406020:	ldr	x0, [x20, #16]!
  406024:	cbz	x0, 406064 <ferror@plt+0x4174>
  406028:	mov	x1, x19
  40602c:	bl	401cf0 <strcmp@plt>
  406030:	cbnz	w0, 406020 <ferror@plt+0x4130>
  406034:	ldr	x3, [x20, #8]
  406038:	cbz	x3, 406118 <ferror@plt+0x4228>
  40603c:	mov	x2, x25
  406040:	mov	w1, w24
  406044:	mov	x0, x23
  406048:	mov	x16, x3
  40604c:	ldp	x19, x20, [sp, #16]
  406050:	ldp	x21, x22, [sp, #32]
  406054:	ldp	x23, x24, [sp, #48]
  406058:	ldr	x25, [sp, #64]
  40605c:	ldp	x29, x30, [sp], #80
  406060:	br	x16
  406064:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  406068:	add	x0, x0, #0x4e0
  40606c:	bl	401e80 <printf@plt>
  406070:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  406074:	ldr	x1, [x22, #2248]
  406078:	ldr	w2, [x1]
  40607c:	add	w2, w2, w0
  406080:	str	w2, [x1]
  406084:	ldrb	w0, [x19]
  406088:	cbz	w0, 4060f4 <ferror@plt+0x4204>
  40608c:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  406090:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  406094:	add	x20, x20, #0x640
  406098:	add	x24, x25, #0x630
  40609c:	mov	w23, #0x1                   	// #1
  4060a0:	b	4060c0 <ferror@plt+0x41d0>
  4060a4:	str	wzr, [x1]
  4060a8:	ldr	x1, [x20]
  4060ac:	bl	401b60 <putc@plt>
  4060b0:	str	w23, [x24]
  4060b4:	ldrb	w0, [x19]
  4060b8:	cbz	w0, 4060f4 <ferror@plt+0x4204>
  4060bc:	ldr	x1, [x21]
  4060c0:	add	x19, x19, #0x1
  4060c4:	cmp	w0, #0x9
  4060c8:	b.eq	406130 <ferror@plt+0x4240>  // b.none
  4060cc:	cmp	w0, #0xa
  4060d0:	b.eq	4060a4 <ferror@plt+0x41b4>  // b.none
  4060d4:	ldr	w2, [x1]
  4060d8:	add	w2, w2, #0x1
  4060dc:	str	w2, [x1]
  4060e0:	ldr	x1, [x20]
  4060e4:	bl	401b60 <putc@plt>
  4060e8:	str	w23, [x24]
  4060ec:	ldrb	w0, [x19]
  4060f0:	cbnz	w0, 4060bc <ferror@plt+0x41cc>
  4060f4:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  4060f8:	add	x0, x0, #0xbe0
  4060fc:	bl	401e80 <printf@plt>
  406100:	ldr	x2, [x22, #2248]
  406104:	mov	w3, #0x1                   	// #1
  406108:	ldr	w1, [x2]
  40610c:	add	w1, w1, w0
  406110:	str	w1, [x2]
  406114:	str	w3, [x25, #1584]
  406118:	ldp	x19, x20, [sp, #16]
  40611c:	ldp	x21, x22, [sp, #32]
  406120:	ldp	x23, x24, [sp, #48]
  406124:	ldr	x25, [sp, #64]
  406128:	ldp	x29, x30, [sp], #80
  40612c:	ret
  406130:	ldr	w3, [x1]
  406134:	cmp	w3, #0x0
  406138:	add	w2, w3, #0x7
  40613c:	csel	w2, w2, w3, lt  // lt = tstop
  406140:	and	w2, w2, #0xfffffff8
  406144:	add	w2, w2, #0x8
  406148:	str	w2, [x1]
  40614c:	b	4060a8 <ferror@plt+0x41b8>
  406150:	stp	x29, x30, [sp, #-96]!
  406154:	mov	x29, sp
  406158:	stp	x21, x22, [sp, #32]
  40615c:	mov	x21, x0
  406160:	ldr	w1, [x0, #32]
  406164:	stp	x19, x20, [sp, #16]
  406168:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  40616c:	add	x22, x22, #0x630
  406170:	ldr	x20, [x0, #24]
  406174:	stp	x23, x24, [sp, #48]
  406178:	add	w0, w1, #0x1
  40617c:	stp	x25, x26, [sp, #64]
  406180:	adrp	x23, 429000 <argp_error@@Base+0x19650>
  406184:	stp	x27, x28, [sp, #80]
  406188:	str	w0, [x21, #32]
  40618c:	ldrb	w19, [x20]
  406190:	cbz	w19, 4062d4 <ferror@plt+0x43e4>
  406194:	nop
  406198:	cmp	w19, #0x7d
  40619c:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  4061a0:	b.gt	4062d0 <ferror@plt+0x43e0>
  4061a4:	cmp	w19, #0x24
  4061a8:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  4061ac:	mov	w24, #0x1                   	// #1
  4061b0:	b.ne	4061e0 <ferror@plt+0x42f0>  // b.any
  4061b4:	b	406234 <ferror@plt+0x4344>
  4061b8:	str	wzr, [x1]
  4061bc:	ldr	x1, [x25, #1600]
  4061c0:	mov	w0, w19
  4061c4:	bl	401b60 <putc@plt>
  4061c8:	str	w24, [x22]
  4061cc:	ldrb	w19, [x20, #1]!
  4061d0:	cmp	w19, #0x24
  4061d4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4061d8:	b.eq	40622c <ferror@plt+0x433c>  // b.none
  4061dc:	ldr	w0, [x21, #32]
  4061e0:	cmp	w19, #0x7d
  4061e4:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  4061e8:	b.gt	4062d0 <ferror@plt+0x43e0>
  4061ec:	ldr	x1, [x23, #2248]
  4061f0:	cmp	w19, #0x9
  4061f4:	b.eq	4062fc <ferror@plt+0x440c>  // b.none
  4061f8:	cmp	w19, #0xa
  4061fc:	b.eq	4061b8 <ferror@plt+0x42c8>  // b.none
  406200:	ldr	w0, [x1]
  406204:	add	w0, w0, #0x1
  406208:	str	w0, [x1]
  40620c:	ldr	x1, [x25, #1600]
  406210:	mov	w0, w19
  406214:	bl	401b60 <putc@plt>
  406218:	str	w24, [x22]
  40621c:	ldrb	w19, [x20, #1]!
  406220:	cmp	w19, #0x24
  406224:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  406228:	b.ne	4061dc <ferror@plt+0x42ec>  // b.any
  40622c:	cmp	w19, #0x24
  406230:	b.ne	40650c <ferror@plt+0x461c>  // b.any
  406234:	ldrb	w0, [x20, #1]
  406238:	add	x24, x20, #0x2
  40623c:	cmp	w0, #0x7b
  406240:	b.eq	406348 <ferror@plt+0x4458>  // b.none
  406244:	cmp	w0, #0x7d
  406248:	b.eq	40632c <ferror@plt+0x443c>  // b.none
  40624c:	cmp	w0, #0x24
  406250:	b.eq	40632c <ferror@plt+0x443c>  // b.none
  406254:	ldr	x3, [x23, #2248]
  406258:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40625c:	add	x25, x1, #0x640
  406260:	mov	w0, #0x24                  	// #36
  406264:	ldr	x1, [x1, #1600]
  406268:	ldr	w2, [x3]
  40626c:	add	w2, w2, #0x1
  406270:	str	w2, [x3]
  406274:	bl	401b60 <putc@plt>
  406278:	mov	w0, #0x1                   	// #1
  40627c:	str	w0, [x22]
  406280:	ldr	x1, [x23, #2248]
  406284:	ldrb	w0, [x20, #1]
  406288:	cmp	w0, #0x9
  40628c:	b.ne	40631c <ferror@plt+0x442c>  // b.any
  406290:	ldr	w3, [x1]
  406294:	cmp	w3, #0x0
  406298:	add	w2, w3, #0x7
  40629c:	csel	w2, w2, w3, lt  // lt = tstop
  4062a0:	and	w2, w2, #0xfffffff8
  4062a4:	add	w2, w2, #0x8
  4062a8:	str	w2, [x1]
  4062ac:	ldr	x1, [x25]
  4062b0:	mov	x20, x24
  4062b4:	bl	401b60 <putc@plt>
  4062b8:	mov	w0, #0x1                   	// #1
  4062bc:	str	w0, [x22]
  4062c0:	ldrb	w19, [x20]
  4062c4:	ldr	w0, [x21, #32]
  4062c8:	cbnz	w19, 406198 <ferror@plt+0x42a8>
  4062cc:	nop
  4062d0:	sub	w1, w0, #0x1
  4062d4:	str	x20, [x21, #24]
  4062d8:	str	w1, [x21, #32]
  4062dc:	mov	sp, x29
  4062e0:	ldp	x19, x20, [sp, #16]
  4062e4:	ldp	x21, x22, [sp, #32]
  4062e8:	ldp	x23, x24, [sp, #48]
  4062ec:	ldp	x25, x26, [sp, #64]
  4062f0:	ldp	x27, x28, [sp, #80]
  4062f4:	ldp	x29, x30, [sp], #96
  4062f8:	ret
  4062fc:	ldr	w0, [x1]
  406300:	cmp	w0, #0x0
  406304:	add	w2, w0, #0x7
  406308:	csel	w2, w2, w0, lt  // lt = tstop
  40630c:	and	w2, w2, #0xfffffff8
  406310:	add	w2, w2, #0x8
  406314:	str	w2, [x1]
  406318:	b	4061bc <ferror@plt+0x42cc>
  40631c:	cmp	w0, #0xa
  406320:	b.ne	406338 <ferror@plt+0x4448>  // b.any
  406324:	str	wzr, [x1]
  406328:	b	4062ac <ferror@plt+0x43bc>
  40632c:	ldr	x1, [x23, #2248]
  406330:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  406334:	add	x25, x25, #0x640
  406338:	ldr	w2, [x1]
  40633c:	add	w2, w2, #0x1
  406340:	str	w2, [x1]
  406344:	b	4062ac <ferror@plt+0x43bc>
  406348:	mov	x0, x24
  40634c:	mov	w1, #0x7d                  	// #125
  406350:	bl	401d70 <strchr@plt>
  406354:	mov	x25, x0
  406358:	cbz	x0, 406450 <ferror@plt+0x4560>
  40635c:	sub	x19, x0, x24
  406360:	mov	x1, x24
  406364:	add	x0, x19, #0x10
  406368:	mov	x2, x19
  40636c:	and	x0, x0, #0xfffffffffffffff0
  406370:	add	x20, x25, #0x1
  406374:	sub	sp, sp, x0
  406378:	mov	x27, sp
  40637c:	mov	x0, x27
  406380:	bl	401aa0 <memcpy@plt>
  406384:	mov	x0, x25
  406388:	strb	wzr, [x27, x19]
  40638c:	bl	401b00 <strlen@plt>
  406390:	lsr	x0, x0, #1
  406394:	add	x0, x0, #0xf
  406398:	ldrb	w1, [x25, #1]
  40639c:	and	x0, x0, #0xfffffffffffffff0
  4063a0:	sub	sp, sp, x0
  4063a4:	cmp	w1, #0x7b
  4063a8:	mov	x26, sp
  4063ac:	b.ne	4064f0 <ferror@plt+0x4600>  // b.any
  4063b0:	mov	x24, #0x0                   	// #0
  4063b4:	add	x25, x20, #0x1
  4063b8:	str	x25, [x21, #24]
  4063bc:	mov	x0, x21
  4063c0:	sxtw	x19, w24
  4063c4:	bl	404a80 <ferror@plt+0x2b90>
  4063c8:	ldr	x20, [x21, #24]
  4063cc:	sub	x28, x20, x25
  4063d0:	add	x0, x28, #0x1
  4063d4:	bl	40bea0 <argp_parse@@Base+0x1d10>
  4063d8:	mov	x1, x25
  4063dc:	mov	x25, x0
  4063e0:	str	x0, [x26, x24, lsl #3]
  4063e4:	mov	x2, x28
  4063e8:	bl	401aa0 <memcpy@plt>
  4063ec:	strb	wzr, [x25, x28]
  4063f0:	add	w2, w24, #0x1
  4063f4:	ldrb	w0, [x20]
  4063f8:	cmp	w0, #0x7d
  4063fc:	b.eq	406438 <ferror@plt+0x4548>  // b.none
  406400:	add	x24, x24, #0x1
  406404:	cmp	w0, #0x7b
  406408:	b.eq	4063b4 <ferror@plt+0x44c4>  // b.none
  40640c:	mov	x0, x27
  406410:	mov	x3, x26
  406414:	mov	x1, x21
  406418:	bl	405fe0 <ferror@plt+0x40f0>
  40641c:	str	x20, [x21, #24]
  406420:	ldr	x0, [x26, x19, lsl #3]
  406424:	sub	x19, x19, #0x1
  406428:	bl	401d30 <free@plt>
  40642c:	cmn	w19, #0x1
  406430:	b.ne	406420 <ferror@plt+0x4530>  // b.any
  406434:	b	4062c0 <ferror@plt+0x43d0>
  406438:	ldrb	w0, [x20, #1]
  40643c:	add	x24, x24, #0x1
  406440:	add	x20, x20, #0x1
  406444:	cmp	w0, #0x7b
  406448:	b.eq	4063b4 <ferror@plt+0x44c4>  // b.none
  40644c:	b	40640c <ferror@plt+0x451c>
  406450:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  406454:	mov	x24, x20
  406458:	add	x25, x1, #0x640
  40645c:	add	x27, x23, #0x8c8
  406460:	mov	w26, #0x1                   	// #1
  406464:	b	406484 <ferror@plt+0x4594>
  406468:	str	wzr, [x0]
  40646c:	ldr	x1, [x25]
  406470:	mov	w0, w19
  406474:	bl	401b60 <putc@plt>
  406478:	str	w26, [x22]
  40647c:	ldrb	w19, [x24]
  406480:	cbz	w19, 4064c0 <ferror@plt+0x45d0>
  406484:	add	x24, x24, #0x1
  406488:	cmp	w19, #0x9
  40648c:	ldr	x0, [x27]
  406490:	b.eq	4064d0 <ferror@plt+0x45e0>  // b.none
  406494:	cmp	w19, #0xa
  406498:	b.eq	406468 <ferror@plt+0x4578>  // b.none
  40649c:	ldr	w1, [x0]
  4064a0:	add	w1, w1, #0x1
  4064a4:	str	w1, [x0]
  4064a8:	ldr	x1, [x25]
  4064ac:	mov	w0, w19
  4064b0:	bl	401b60 <putc@plt>
  4064b4:	str	w26, [x22]
  4064b8:	ldrb	w19, [x24]
  4064bc:	cbnz	w19, 406484 <ferror@plt+0x4594>
  4064c0:	mov	x0, x20
  4064c4:	bl	401b00 <strlen@plt>
  4064c8:	add	x20, x20, x0
  4064cc:	b	4062c0 <ferror@plt+0x43d0>
  4064d0:	ldr	w2, [x0]
  4064d4:	cmp	w2, #0x0
  4064d8:	add	w1, w2, #0x7
  4064dc:	csel	w1, w1, w2, lt  // lt = tstop
  4064e0:	and	w1, w1, #0xfffffff8
  4064e4:	add	w1, w1, #0x8
  4064e8:	str	w1, [x0]
  4064ec:	b	40646c <ferror@plt+0x457c>
  4064f0:	mov	x3, x26
  4064f4:	mov	x0, x27
  4064f8:	mov	x1, x21
  4064fc:	mov	w2, #0x0                   	// #0
  406500:	bl	405fe0 <ferror@plt+0x40f0>
  406504:	str	x20, [x21, #24]
  406508:	b	4062c0 <ferror@plt+0x43d0>
  40650c:	ldr	w1, [x21, #32]
  406510:	sub	w1, w1, #0x1
  406514:	b	4062d4 <ferror@plt+0x43e4>
  406518:	cbz	w1, 406578 <ferror@plt+0x4688>
  40651c:	stp	x29, x30, [sp, #-48]!
  406520:	mov	x29, sp
  406524:	stp	x19, x20, [sp, #16]
  406528:	mov	x19, x0
  40652c:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  406530:	add	x20, x0, #0x400
  406534:	stp	x21, x22, [sp, #32]
  406538:	mov	x21, x2
  40653c:	ldr	x0, [x0, #1024]
  406540:	ldr	x22, [x19]
  406544:	cbz	x0, 406564 <ferror@plt+0x4674>
  406548:	str	x0, [x19]
  40654c:	mov	x0, x19
  406550:	ldr	x1, [x21]
  406554:	str	x1, [x19, #24]
  406558:	bl	406150 <ferror@plt+0x4260>
  40655c:	ldr	x0, [x20, #24]!
  406560:	cbnz	x0, 406548 <ferror@plt+0x4658>
  406564:	str	x22, [x19]
  406568:	ldp	x19, x20, [sp, #16]
  40656c:	ldp	x21, x22, [sp, #32]
  406570:	ldp	x29, x30, [sp], #48
  406574:	ret
  406578:	ret
  40657c:	nop
  406580:	cmp	w1, #0x1
  406584:	b.le	4065f4 <ferror@plt+0x4704>
  406588:	stp	x29, x30, [sp, #-64]!
  40658c:	mov	x29, sp
  406590:	stp	x21, x22, [sp, #32]
  406594:	mov	x21, x2
  406598:	add	x1, sp, #0x38
  40659c:	stp	x19, x20, [sp, #16]
  4065a0:	mov	x20, x0
  4065a4:	mov	w2, #0xa                   	// #10
  4065a8:	ldr	x0, [x21]
  4065ac:	bl	401af0 <strtoul@plt>
  4065b0:	mov	x22, x0
  4065b4:	ldr	x1, [sp, #56]
  4065b8:	ldrb	w0, [x1]
  4065bc:	cbnz	w0, 4065f8 <ferror@plt+0x4708>
  4065c0:	sub	w19, w22, #0x1
  4065c4:	cbz	w22, 4065e4 <ferror@plt+0x46f4>
  4065c8:	ldr	x0, [x21, #8]
  4065cc:	str	x0, [x20, #24]
  4065d0:	sub	w19, w19, #0x1
  4065d4:	mov	x0, x20
  4065d8:	bl	406150 <ferror@plt+0x4260>
  4065dc:	cmn	w19, #0x1
  4065e0:	b.ne	4065c8 <ferror@plt+0x46d8>  // b.any
  4065e4:	ldp	x19, x20, [sp, #16]
  4065e8:	ldp	x21, x22, [sp, #32]
  4065ec:	ldp	x29, x30, [sp], #64
  4065f0:	ret
  4065f4:	ret
  4065f8:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4065fc:	mov	w1, #0x0                   	// #0
  406600:	add	x2, x2, #0x4e8
  406604:	mov	w0, #0x1                   	// #1
  406608:	bl	401b30 <error@plt>
  40660c:	b	4065c0 <ferror@plt+0x46d0>
  406610:	cmp	w1, #0x1
  406614:	b.le	40675c <ferror@plt+0x486c>
  406618:	stp	x29, x30, [sp, #-96]!
  40661c:	sub	w1, w1, #0x2
  406620:	mov	x29, sp
  406624:	stp	x19, x20, [sp, #16]
  406628:	mov	x19, x2
  40662c:	stp	x21, x22, [sp, #32]
  406630:	mov	x21, x0
  406634:	stp	x23, x24, [sp, #48]
  406638:	mov	w24, #0x1                   	// #1
  40663c:	stp	x25, x26, [sp, #64]
  406640:	add	x25, x2, w1, uxtw #3
  406644:	mov	x26, x2
  406648:	stp	x27, x28, [sp, #80]
  40664c:	adrp	x27, 42a000 <argp_error@@Base+0x1a650>
  406650:	add	x20, x27, #0x630
  406654:	ldr	x0, [x19, #8]
  406658:	str	x0, [x21, #24]
  40665c:	ldr	w22, [x27, #1584]
  406660:	mov	x0, x21
  406664:	str	wzr, [x27, #1584]
  406668:	bl	406150 <ferror@plt+0x4260>
  40666c:	cmp	x25, x19
  406670:	b.eq	40669c <ferror@plt+0x47ac>  // b.none
  406674:	nop
  406678:	ldr	w0, [x20]
  40667c:	cbnz	w0, 4066bc <ferror@plt+0x47cc>
  406680:	add	x19, x19, #0x8
  406684:	ldr	x0, [x19, #8]
  406688:	str	x0, [x21, #24]
  40668c:	mov	x0, x21
  406690:	bl	406150 <ferror@plt+0x4260>
  406694:	cmp	x25, x19
  406698:	b.ne	406678 <ferror@plt+0x4788>  // b.any
  40669c:	str	w22, [x27, #1584]
  4066a0:	ldp	x19, x20, [sp, #16]
  4066a4:	ldp	x21, x22, [sp, #32]
  4066a8:	ldp	x23, x24, [sp, #48]
  4066ac:	ldp	x25, x26, [sp, #64]
  4066b0:	ldp	x27, x28, [sp, #80]
  4066b4:	ldp	x29, x30, [sp], #96
  4066b8:	ret
  4066bc:	ldr	x28, [x26]
  4066c0:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  4066c4:	add	x23, x0, #0x8c8
  4066c8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4066cc:	add	x22, x0, #0x640
  4066d0:	ldrb	w0, [x28]
  4066d4:	cbnz	w0, 4066f4 <ferror@plt+0x4804>
  4066d8:	b	40672c <ferror@plt+0x483c>
  4066dc:	str	wzr, [x1]
  4066e0:	ldr	x1, [x22]
  4066e4:	bl	401b60 <putc@plt>
  4066e8:	str	w24, [x20]
  4066ec:	ldrb	w0, [x28]
  4066f0:	cbz	w0, 40672c <ferror@plt+0x483c>
  4066f4:	add	x28, x28, #0x1
  4066f8:	cmp	w0, #0x9
  4066fc:	ldr	x1, [x23]
  406700:	b.eq	40673c <ferror@plt+0x484c>  // b.none
  406704:	cmp	w0, #0xa
  406708:	b.eq	4066dc <ferror@plt+0x47ec>  // b.none
  40670c:	ldr	w3, [x1]
  406710:	add	w3, w3, #0x1
  406714:	str	w3, [x1]
  406718:	ldr	x1, [x22]
  40671c:	bl	401b60 <putc@plt>
  406720:	str	w24, [x20]
  406724:	ldrb	w0, [x28]
  406728:	cbnz	w0, 4066f4 <ferror@plt+0x4804>
  40672c:	add	x19, x19, #0x8
  406730:	mov	w22, #0x1                   	// #1
  406734:	str	wzr, [x20]
  406738:	b	406684 <ferror@plt+0x4794>
  40673c:	ldr	w4, [x1]
  406740:	cmp	w4, #0x0
  406744:	add	w3, w4, #0x7
  406748:	csel	w3, w3, w4, lt  // lt = tstop
  40674c:	and	w3, w3, #0xfffffff8
  406750:	add	w3, w3, #0x8
  406754:	str	w3, [x1]
  406758:	b	4066e0 <ferror@plt+0x47f0>
  40675c:	ret
  406760:	cmp	w1, #0x0
  406764:	b.le	4067d4 <ferror@plt+0x48e4>
  406768:	stp	x29, x30, [sp, #-48]!
  40676c:	sub	w1, w1, #0x1
  406770:	mov	x29, sp
  406774:	stp	x19, x20, [sp, #16]
  406778:	add	x20, x2, #0x8
  40677c:	mov	x19, x2
  406780:	add	x20, x20, w1, uxtw #3
  406784:	str	x21, [sp, #32]
  406788:	mov	x21, x0
  40678c:	b	406798 <ferror@plt+0x48a8>
  406790:	cmp	x19, x20
  406794:	b.eq	4067c4 <ferror@plt+0x48d4>  // b.none
  406798:	ldr	x0, [x19]
  40679c:	add	x19, x19, #0x8
  4067a0:	bl	403080 <ferror@plt+0x1190>
  4067a4:	cbz	x0, 406790 <ferror@plt+0x48a0>
  4067a8:	ldr	x0, [x0, #16]
  4067ac:	ldp	x19, x20, [sp, #16]
  4067b0:	str	x0, [x21, #24]
  4067b4:	mov	x0, x21
  4067b8:	ldr	x21, [sp, #32]
  4067bc:	ldp	x29, x30, [sp], #48
  4067c0:	b	406150 <ferror@plt+0x4260>
  4067c4:	ldp	x19, x20, [sp, #16]
  4067c8:	ldr	x21, [sp, #32]
  4067cc:	ldp	x29, x30, [sp], #48
  4067d0:	ret
  4067d4:	ret
  4067d8:	stp	x29, x30, [sp, #-80]!
  4067dc:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4067e0:	cmp	w1, #0x0
  4067e4:	mov	x29, sp
  4067e8:	stp	x21, x22, [sp, #32]
  4067ec:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  4067f0:	adrp	x21, 429000 <argp_error@@Base+0x19650>
  4067f4:	ldr	x4, [x3, #1248]
  4067f8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4067fc:	add	x3, x3, #0x634
  406800:	stp	x23, x24, [sp, #48]
  406804:	ldr	x24, [x22, #1600]
  406808:	str	x4, [x22, #1600]
  40680c:	ldr	x23, [x21, #2248]
  406810:	str	x3, [x21, #2248]
  406814:	b.le	406858 <ferror@plt+0x4968>
  406818:	sub	w1, w1, #0x1
  40681c:	str	x25, [sp, #64]
  406820:	add	x25, x2, #0x8
  406824:	stp	x19, x20, [sp, #16]
  406828:	add	x25, x25, w1, uxtw #3
  40682c:	mov	x20, x0
  406830:	mov	x19, x2
  406834:	nop
  406838:	ldr	x0, [x19], #8
  40683c:	str	x0, [x20, #24]
  406840:	mov	x0, x20
  406844:	bl	406150 <ferror@plt+0x4260>
  406848:	cmp	x19, x25
  40684c:	b.ne	406838 <ferror@plt+0x4948>  // b.any
  406850:	ldp	x19, x20, [sp, #16]
  406854:	ldr	x25, [sp, #64]
  406858:	str	x24, [x22, #1600]
  40685c:	str	x23, [x21, #2248]
  406860:	ldp	x21, x22, [sp, #32]
  406864:	ldp	x23, x24, [sp, #48]
  406868:	ldp	x29, x30, [sp], #80
  40686c:	ret
  406870:	cmp	w1, #0x1
  406874:	b.gt	40687c <ferror@plt+0x498c>
  406878:	ret
  40687c:	ldr	x2, [x2, #8]
  406880:	str	x2, [x0, #24]
  406884:	b	406150 <ferror@plt+0x4260>
  406888:	cmp	w1, #0x1
  40688c:	b.gt	406894 <ferror@plt+0x49a4>
  406890:	ret
  406894:	ldr	x2, [x2, #8]
  406898:	str	x2, [x0, #24]
  40689c:	b	406150 <ferror@plt+0x4260>
  4068a0:	cmp	w3, w1
  4068a4:	b.lt	4068ac <ferror@plt+0x49bc>  // b.tstop
  4068a8:	ret
  4068ac:	ldr	x2, [x2, w3, sxtw #3]
  4068b0:	str	x2, [x0, #24]
  4068b4:	b	406150 <ferror@plt+0x4260>
  4068b8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4068bc:	ldr	w4, [x3, #1576]
  4068c0:	cmp	w4, #0x0
  4068c4:	cset	w4, eq  // eq = none
  4068c8:	cmp	w4, w1
  4068cc:	b.lt	4068d4 <ferror@plt+0x49e4>  // b.tstop
  4068d0:	ret
  4068d4:	and	x4, x4, #0xff
  4068d8:	ldr	x1, [x2, x4, lsl #3]
  4068dc:	str	x1, [x0, #24]
  4068e0:	b	406150 <ferror@plt+0x4260>
  4068e4:	nop
  4068e8:	ldr	w4, [x0, #20]
  4068ec:	cmp	w4, #0x0
  4068f0:	cset	w4, eq  // eq = none
  4068f4:	cmp	w4, w1
  4068f8:	b.lt	406900 <ferror@plt+0x4a10>  // b.tstop
  4068fc:	ret
  406900:	and	x4, x4, #0xff
  406904:	ldr	x1, [x2, x4, lsl #3]
  406908:	str	x1, [x0, #24]
  40690c:	b	406150 <ferror@plt+0x4260>
  406910:	stp	x29, x30, [sp, #-48]!
  406914:	mov	x29, sp
  406918:	stp	x19, x20, [sp, #16]
  40691c:	mov	x19, x0
  406920:	mov	w20, w1
  406924:	ldr	x0, [x0]
  406928:	str	x21, [sp, #32]
  40692c:	mov	x21, x2
  406930:	bl	401e00 <if_nametoindex@plt>
  406934:	cmp	w0, #0x0
  406938:	cset	w0, eq  // eq = none
  40693c:	cmp	w0, w20
  406940:	b.lt	406954 <ferror@plt+0x4a64>  // b.tstop
  406944:	ldp	x19, x20, [sp, #16]
  406948:	ldr	x21, [sp, #32]
  40694c:	ldp	x29, x30, [sp], #48
  406950:	ret
  406954:	and	x1, x0, #0xff
  406958:	mov	x0, x19
  40695c:	ldr	x1, [x21, x1, lsl #3]
  406960:	ldr	x21, [sp, #32]
  406964:	str	x1, [x19, #24]
  406968:	ldp	x19, x20, [sp, #16]
  40696c:	ldp	x29, x30, [sp], #48
  406970:	b	406150 <ferror@plt+0x4260>
  406974:	nop
  406978:	cmp	w1, #0x0
  40697c:	b.le	4069f4 <ferror@plt+0x4b04>
  406980:	stp	x29, x30, [sp, #-64]!
  406984:	mov	x29, sp
  406988:	stp	x21, x22, [sp, #32]
  40698c:	mov	w21, w1
  406990:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  406994:	add	x1, x1, #0x8c8
  406998:	mov	x22, x0
  40699c:	stp	x19, x20, [sp, #16]
  4069a0:	add	x19, x1, #0x8
  4069a4:	ldr	x0, [x1, #8]
  4069a8:	str	x23, [sp, #48]
  4069ac:	mov	x23, x2
  4069b0:	cbz	x0, 4069f8 <ferror@plt+0x4b08>
  4069b4:	ldr	x20, [x2]
  4069b8:	b	4069c4 <ferror@plt+0x4ad4>
  4069bc:	ldr	x0, [x19, #16]!
  4069c0:	cbz	x0, 4069f8 <ferror@plt+0x4b08>
  4069c4:	mov	x1, x20
  4069c8:	bl	401cf0 <strcmp@plt>
  4069cc:	cbnz	w0, 4069bc <ferror@plt+0x4acc>
  4069d0:	mov	w0, #0x1                   	// #1
  4069d4:	mov	x1, #0x8                   	// #8
  4069d8:	cmp	w21, w0
  4069dc:	b.gt	406a08 <ferror@plt+0x4b18>
  4069e0:	ldp	x19, x20, [sp, #16]
  4069e4:	ldp	x21, x22, [sp, #32]
  4069e8:	ldr	x23, [sp, #48]
  4069ec:	ldp	x29, x30, [sp], #64
  4069f0:	ret
  4069f4:	ret
  4069f8:	mov	w0, #0x2                   	// #2
  4069fc:	mov	x1, #0x10                  	// #16
  406a00:	cmp	w21, w0
  406a04:	b.le	4069e0 <ferror@plt+0x4af0>
  406a08:	ldr	x0, [x23, x1]
  406a0c:	ldp	x19, x20, [sp, #16]
  406a10:	ldr	x23, [sp, #48]
  406a14:	str	x0, [x22, #24]
  406a18:	mov	x0, x22
  406a1c:	ldp	x21, x22, [sp, #32]
  406a20:	ldp	x29, x30, [sp], #64
  406a24:	b	406150 <ferror@plt+0x4260>
  406a28:	cmp	w1, #0x0
  406a2c:	b.le	406a84 <ferror@plt+0x4b94>
  406a30:	stp	x29, x30, [sp, #-48]!
  406a34:	mov	x29, sp
  406a38:	str	x21, [sp, #32]
  406a3c:	mov	x21, x0
  406a40:	ldr	x0, [x2]
  406a44:	stp	x19, x20, [sp, #16]
  406a48:	mov	w19, w1
  406a4c:	mov	x20, x2
  406a50:	bl	403080 <ferror@plt+0x1190>
  406a54:	cmp	x0, #0x0
  406a58:	mov	w0, #0x2                   	// #2
  406a5c:	csinc	w0, w0, wzr, eq  // eq = none
  406a60:	mov	x1, #0x8                   	// #8
  406a64:	mov	x2, #0x10                  	// #16
  406a68:	csel	x1, x1, x2, ne  // ne = any
  406a6c:	cmp	w19, w0
  406a70:	b.gt	406a88 <ferror@plt+0x4b98>
  406a74:	ldp	x19, x20, [sp, #16]
  406a78:	ldr	x21, [sp, #32]
  406a7c:	ldp	x29, x30, [sp], #48
  406a80:	ret
  406a84:	ret
  406a88:	ldr	x0, [x20, x1]
  406a8c:	ldp	x19, x20, [sp, #16]
  406a90:	str	x0, [x21, #24]
  406a94:	mov	x0, x21
  406a98:	ldr	x21, [sp, #32]
  406a9c:	ldp	x29, x30, [sp], #48
  406aa0:	b	406150 <ferror@plt+0x4260>
  406aa4:	nop
  406aa8:	ldr	x4, [x0, #8]
  406aac:	ldrb	w4, [x4, #35]
  406ab0:	cbz	w4, 406ac0 <ferror@plt+0x4bd0>
  406ab4:	cmp	w1, #0x0
  406ab8:	b.gt	406ad4 <ferror@plt+0x4be4>
  406abc:	ret
  406ac0:	cmp	w1, #0x1
  406ac4:	b.le	406abc <ferror@plt+0x4bcc>
  406ac8:	ldr	x1, [x2, #8]
  406acc:	str	x1, [x0, #24]
  406ad0:	b	406150 <ferror@plt+0x4260>
  406ad4:	ldr	x1, [x2]
  406ad8:	str	x1, [x0, #24]
  406adc:	b	406150 <ferror@plt+0x4260>
  406ae0:	ldr	x4, [x0, #8]
  406ae4:	ldr	x4, [x4, #16]
  406ae8:	cbz	x4, 406af8 <ferror@plt+0x4c08>
  406aec:	cmp	w1, #0x0
  406af0:	b.gt	406b0c <ferror@plt+0x4c1c>
  406af4:	ret
  406af8:	cmp	w1, #0x1
  406afc:	b.le	406af4 <ferror@plt+0x4c04>
  406b00:	ldr	x1, [x2, #8]
  406b04:	str	x1, [x0, #24]
  406b08:	b	406150 <ferror@plt+0x4260>
  406b0c:	ldr	x1, [x2]
  406b10:	str	x1, [x0, #24]
  406b14:	b	406150 <ferror@plt+0x4260>
  406b18:	ldr	x4, [x0, #8]
  406b1c:	ldr	x4, [x4, #24]
  406b20:	cbz	x4, 406b30 <ferror@plt+0x4c40>
  406b24:	cmp	w1, #0x0
  406b28:	b.gt	406b44 <ferror@plt+0x4c54>
  406b2c:	ret
  406b30:	cmp	w1, #0x1
  406b34:	b.le	406b2c <ferror@plt+0x4c3c>
  406b38:	ldr	x1, [x2, #8]
  406b3c:	str	x1, [x0, #24]
  406b40:	b	406150 <ferror@plt+0x4260>
  406b44:	ldr	x1, [x2]
  406b48:	str	x1, [x0, #24]
  406b4c:	b	406150 <ferror@plt+0x4260>
  406b50:	ldr	x4, [x0, #8]
  406b54:	ldrh	w4, [x4, #32]
  406b58:	cmp	w4, #0xff
  406b5c:	b.ls	406b6c <ferror@plt+0x4c7c>  // b.plast
  406b60:	cmp	w1, #0x0
  406b64:	b.gt	406b80 <ferror@plt+0x4c90>
  406b68:	ret
  406b6c:	cmp	w1, #0x1
  406b70:	b.le	406b68 <ferror@plt+0x4c78>
  406b74:	ldr	x1, [x2, #8]
  406b78:	str	x1, [x0, #24]
  406b7c:	b	406150 <ferror@plt+0x4260>
  406b80:	ldr	x1, [x2]
  406b84:	str	x1, [x0, #24]
  406b88:	b	406150 <ferror@plt+0x4260>
  406b8c:	nop
  406b90:	ldr	x4, [x0, #8]
  406b94:	ldrb	w4, [x4, #34]
  406b98:	cbz	w4, 406ba8 <ferror@plt+0x4cb8>
  406b9c:	cmp	w1, #0x0
  406ba0:	b.gt	406bbc <ferror@plt+0x4ccc>
  406ba4:	ret
  406ba8:	cmp	w1, #0x1
  406bac:	b.le	406ba4 <ferror@plt+0x4cb4>
  406bb0:	ldr	x1, [x2, #8]
  406bb4:	str	x1, [x0, #24]
  406bb8:	b	406150 <ferror@plt+0x4260>
  406bbc:	ldr	x1, [x2]
  406bc0:	str	x1, [x0, #24]
  406bc4:	b	406150 <ferror@plt+0x4260>
  406bc8:	stp	x29, x30, [sp, #-48]!
  406bcc:	mov	x29, sp
  406bd0:	stp	x19, x20, [sp, #16]
  406bd4:	mov	x19, x0
  406bd8:	mov	w20, w1
  406bdc:	str	x21, [sp, #32]
  406be0:	mov	x21, x2
  406be4:	ldr	x2, [x0, #8]
  406be8:	mov	w1, #0x8913                	// #35091
  406bec:	ldr	w0, [x0, #16]
  406bf0:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406bf4:	tbnz	w0, #31, 406c10 <ferror@plt+0x4d20>
  406bf8:	cmp	w20, #0x0
  406bfc:	b.gt	406c34 <ferror@plt+0x4d44>
  406c00:	ldp	x19, x20, [sp, #16]
  406c04:	ldr	x21, [sp, #32]
  406c08:	ldp	x29, x30, [sp], #48
  406c0c:	ret
  406c10:	cmp	w20, #0x1
  406c14:	b.le	406c00 <ferror@plt+0x4d10>
  406c18:	ldr	x0, [x21, #8]
  406c1c:	ldr	x21, [sp, #32]
  406c20:	str	x0, [x19, #24]
  406c24:	mov	x0, x19
  406c28:	ldp	x19, x20, [sp, #16]
  406c2c:	ldp	x29, x30, [sp], #48
  406c30:	b	406150 <ferror@plt+0x4260>
  406c34:	ldr	x0, [x21]
  406c38:	ldr	x21, [sp, #32]
  406c3c:	str	x0, [x19, #24]
  406c40:	mov	x0, x19
  406c44:	ldp	x19, x20, [sp, #16]
  406c48:	ldp	x29, x30, [sp], #48
  406c4c:	b	406150 <ferror@plt+0x4260>
  406c50:	stp	x29, x30, [sp, #-48]!
  406c54:	mov	x29, sp
  406c58:	stp	x19, x20, [sp, #16]
  406c5c:	mov	x19, x0
  406c60:	mov	w20, w1
  406c64:	str	x21, [sp, #32]
  406c68:	mov	x21, x2
  406c6c:	ldr	x2, [x0, #8]
  406c70:	mov	w1, #0x8915                	// #35093
  406c74:	ldr	w0, [x0, #16]
  406c78:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406c7c:	tbnz	w0, #31, 406c98 <ferror@plt+0x4da8>
  406c80:	cmp	w20, #0x0
  406c84:	b.gt	406cbc <ferror@plt+0x4dcc>
  406c88:	ldp	x19, x20, [sp, #16]
  406c8c:	ldr	x21, [sp, #32]
  406c90:	ldp	x29, x30, [sp], #48
  406c94:	ret
  406c98:	cmp	w20, #0x1
  406c9c:	b.le	406c88 <ferror@plt+0x4d98>
  406ca0:	ldr	x0, [x21, #8]
  406ca4:	ldr	x21, [sp, #32]
  406ca8:	str	x0, [x19, #24]
  406cac:	mov	x0, x19
  406cb0:	ldp	x19, x20, [sp, #16]
  406cb4:	ldp	x29, x30, [sp], #48
  406cb8:	b	406150 <ferror@plt+0x4260>
  406cbc:	ldr	x0, [x21]
  406cc0:	ldr	x21, [sp, #32]
  406cc4:	str	x0, [x19, #24]
  406cc8:	mov	x0, x19
  406ccc:	ldp	x19, x20, [sp, #16]
  406cd0:	ldp	x29, x30, [sp], #48
  406cd4:	b	406150 <ferror@plt+0x4260>
  406cd8:	stp	x29, x30, [sp, #-48]!
  406cdc:	mov	x29, sp
  406ce0:	stp	x19, x20, [sp, #16]
  406ce4:	mov	x19, x0
  406ce8:	mov	w20, w1
  406cec:	str	x21, [sp, #32]
  406cf0:	mov	x21, x2
  406cf4:	ldr	x2, [x0, #8]
  406cf8:	mov	w1, #0x891b                	// #35099
  406cfc:	ldr	w0, [x0, #16]
  406d00:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406d04:	tbnz	w0, #31, 406d20 <ferror@plt+0x4e30>
  406d08:	cmp	w20, #0x0
  406d0c:	b.gt	406d44 <ferror@plt+0x4e54>
  406d10:	ldp	x19, x20, [sp, #16]
  406d14:	ldr	x21, [sp, #32]
  406d18:	ldp	x29, x30, [sp], #48
  406d1c:	ret
  406d20:	cmp	w20, #0x1
  406d24:	b.le	406d10 <ferror@plt+0x4e20>
  406d28:	ldr	x0, [x21, #8]
  406d2c:	ldr	x21, [sp, #32]
  406d30:	str	x0, [x19, #24]
  406d34:	mov	x0, x19
  406d38:	ldp	x19, x20, [sp, #16]
  406d3c:	ldp	x29, x30, [sp], #48
  406d40:	b	406150 <ferror@plt+0x4260>
  406d44:	ldr	x0, [x21]
  406d48:	ldr	x21, [sp, #32]
  406d4c:	str	x0, [x19, #24]
  406d50:	mov	x0, x19
  406d54:	ldp	x19, x20, [sp, #16]
  406d58:	ldp	x29, x30, [sp], #48
  406d5c:	b	406150 <ferror@plt+0x4260>
  406d60:	stp	x29, x30, [sp, #-48]!
  406d64:	mov	x29, sp
  406d68:	stp	x19, x20, [sp, #16]
  406d6c:	mov	x19, x0
  406d70:	mov	w20, w1
  406d74:	str	x21, [sp, #32]
  406d78:	mov	x21, x2
  406d7c:	ldr	x2, [x0, #8]
  406d80:	mov	w1, #0x8921                	// #35105
  406d84:	ldr	w0, [x0, #16]
  406d88:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406d8c:	tbnz	w0, #31, 406da8 <ferror@plt+0x4eb8>
  406d90:	cmp	w20, #0x0
  406d94:	b.gt	406dcc <ferror@plt+0x4edc>
  406d98:	ldp	x19, x20, [sp, #16]
  406d9c:	ldr	x21, [sp, #32]
  406da0:	ldp	x29, x30, [sp], #48
  406da4:	ret
  406da8:	cmp	w20, #0x1
  406dac:	b.le	406d98 <ferror@plt+0x4ea8>
  406db0:	ldr	x0, [x21, #8]
  406db4:	ldr	x21, [sp, #32]
  406db8:	str	x0, [x19, #24]
  406dbc:	mov	x0, x19
  406dc0:	ldp	x19, x20, [sp, #16]
  406dc4:	ldp	x29, x30, [sp], #48
  406dc8:	b	406150 <ferror@plt+0x4260>
  406dcc:	ldr	x0, [x21]
  406dd0:	ldr	x21, [sp, #32]
  406dd4:	str	x0, [x19, #24]
  406dd8:	mov	x0, x19
  406ddc:	ldp	x19, x20, [sp, #16]
  406de0:	ldp	x29, x30, [sp], #48
  406de4:	b	406150 <ferror@plt+0x4260>
  406de8:	stp	x29, x30, [sp, #-48]!
  406dec:	mov	x29, sp
  406df0:	stp	x19, x20, [sp, #16]
  406df4:	mov	x19, x0
  406df8:	mov	w20, w1
  406dfc:	str	x21, [sp, #32]
  406e00:	mov	x21, x2
  406e04:	ldr	x2, [x0, #8]
  406e08:	mov	w1, #0x8970                	// #35184
  406e0c:	ldr	w0, [x0, #16]
  406e10:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406e14:	tbnz	w0, #31, 406e30 <ferror@plt+0x4f40>
  406e18:	cmp	w20, #0x0
  406e1c:	b.gt	406e54 <ferror@plt+0x4f64>
  406e20:	ldp	x19, x20, [sp, #16]
  406e24:	ldr	x21, [sp, #32]
  406e28:	ldp	x29, x30, [sp], #48
  406e2c:	ret
  406e30:	cmp	w20, #0x1
  406e34:	b.le	406e20 <ferror@plt+0x4f30>
  406e38:	ldr	x0, [x21, #8]
  406e3c:	ldr	x21, [sp, #32]
  406e40:	str	x0, [x19, #24]
  406e44:	mov	x0, x19
  406e48:	ldp	x19, x20, [sp, #16]
  406e4c:	ldp	x29, x30, [sp], #48
  406e50:	b	406150 <ferror@plt+0x4260>
  406e54:	ldr	x0, [x21]
  406e58:	ldr	x21, [sp, #32]
  406e5c:	str	x0, [x19, #24]
  406e60:	mov	x0, x19
  406e64:	ldp	x19, x20, [sp, #16]
  406e68:	ldp	x29, x30, [sp], #48
  406e6c:	b	406150 <ferror@plt+0x4260>
  406e70:	stp	x29, x30, [sp, #-64]!
  406e74:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  406e78:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  406e7c:	mov	x29, sp
  406e80:	ldr	w3, [x3, #1568]
  406e84:	ldr	w4, [x4, #1572]
  406e88:	stp	x19, x20, [sp, #16]
  406e8c:	mov	x20, x0
  406e90:	mov	w19, w1
  406e94:	stp	x21, x22, [sp, #32]
  406e98:	orr	w3, w3, w4
  406e9c:	mov	x21, x2
  406ea0:	mov	w0, #0x0                   	// #0
  406ea4:	cbz	w3, 406ee4 <ferror@plt+0x4ff4>
  406ea8:	cmp	w19, w0
  406eac:	b.gt	406ec0 <ferror@plt+0x4fd0>
  406eb0:	ldp	x19, x20, [sp, #16]
  406eb4:	ldp	x21, x22, [sp, #32]
  406eb8:	ldp	x29, x30, [sp], #64
  406ebc:	ret
  406ec0:	sxtw	x1, w0
  406ec4:	mov	x0, x20
  406ec8:	ldr	x1, [x21, x1, lsl #3]
  406ecc:	str	x1, [x20, #24]
  406ed0:	bl	406150 <ferror@plt+0x4260>
  406ed4:	ldp	x19, x20, [sp, #16]
  406ed8:	ldp	x21, x22, [sp, #32]
  406edc:	ldp	x29, x30, [sp], #64
  406ee0:	ret
  406ee4:	add	x1, sp, #0x3c
  406ee8:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  406eec:	add	x0, x0, #0xa60
  406ef0:	str	wzr, [sp, #60]
  406ef4:	bl	402590 <ferror@plt+0x6a0>
  406ef8:	mov	w22, w0
  406efc:	cbnz	w0, 406f08 <ferror@plt+0x5018>
  406f00:	mov	w0, #0x1                   	// #1
  406f04:	b	406ea8 <ferror@plt+0x4fb8>
  406f08:	ldr	w0, [x20, #16]
  406f0c:	mov	w1, #0x8913                	// #35091
  406f10:	ldr	x2, [x20, #8]
  406f14:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406f18:	cbnz	w0, 406f00 <ferror@plt+0x5010>
  406f1c:	ldr	x0, [x20, #8]
  406f20:	ldrh	w0, [x0, #16]
  406f24:	tst	w0, w22
  406f28:	cset	w0, eq  // eq = none
  406f2c:	b	406ea8 <ferror@plt+0x4fb8>
  406f30:	stp	x29, x30, [sp, #-48]!
  406f34:	mov	x29, sp
  406f38:	stp	x19, x20, [sp, #16]
  406f3c:	mov	x19, x0
  406f40:	mov	w20, w1
  406f44:	str	x21, [sp, #32]
  406f48:	mov	x21, x2
  406f4c:	ldr	x2, [x0, #8]
  406f50:	mov	w1, #0x891d                	// #35101
  406f54:	ldr	w0, [x0, #16]
  406f58:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  406f5c:	tbnz	w0, #31, 406f88 <ferror@plt+0x5098>
  406f60:	ldr	x0, [x19, #8]
  406f64:	ldr	w0, [x0, #16]
  406f68:	cmp	w0, #0x0
  406f6c:	b.le	406f88 <ferror@plt+0x5098>
  406f70:	cmp	w20, #0x0
  406f74:	b.gt	406fac <ferror@plt+0x50bc>
  406f78:	ldp	x19, x20, [sp, #16]
  406f7c:	ldr	x21, [sp, #32]
  406f80:	ldp	x29, x30, [sp], #48
  406f84:	ret
  406f88:	cmp	w20, #0x1
  406f8c:	b.le	406f78 <ferror@plt+0x5088>
  406f90:	ldr	x0, [x21, #8]
  406f94:	ldr	x21, [sp, #32]
  406f98:	str	x0, [x19, #24]
  406f9c:	mov	x0, x19
  406fa0:	ldp	x19, x20, [sp, #16]
  406fa4:	ldp	x29, x30, [sp], #48
  406fa8:	b	406150 <ferror@plt+0x4260>
  406fac:	ldr	x0, [x21]
  406fb0:	ldr	x21, [sp, #32]
  406fb4:	str	x0, [x19, #24]
  406fb8:	mov	x0, x19
  406fbc:	ldp	x19, x20, [sp, #16]
  406fc0:	ldp	x29, x30, [sp], #48
  406fc4:	b	406150 <ferror@plt+0x4260>
  406fc8:	stp	x29, x30, [sp, #-80]!
  406fcc:	mov	x29, sp
  406fd0:	stp	x19, x20, [sp, #16]
  406fd4:	mov	x19, x0
  406fd8:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  406fdc:	add	x0, x0, #0xa68
  406fe0:	stp	x21, x22, [sp, #32]
  406fe4:	mov	x22, x2
  406fe8:	ldr	x3, [x19, #8]
  406fec:	ldrsh	w21, [x3, #16]
  406ff0:	str	x23, [sp, #48]
  406ff4:	mov	w23, w1
  406ff8:	add	x1, sp, #0x4c
  406ffc:	bl	402590 <ferror@plt+0x6a0>
  407000:	cbnz	w0, 407020 <ferror@plt+0x5130>
  407004:	cmp	w23, #0x1
  407008:	b.gt	407074 <ferror@plt+0x5184>
  40700c:	ldp	x19, x20, [sp, #16]
  407010:	ldp	x21, x22, [sp, #32]
  407014:	ldr	x23, [sp, #48]
  407018:	ldp	x29, x30, [sp], #80
  40701c:	ret
  407020:	mov	w20, w0
  407024:	ldr	w0, [x19, #16]
  407028:	ldr	x2, [x19, #8]
  40702c:	mov	w1, #0x8913                	// #35091
  407030:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  407034:	tbnz	w0, #31, 407004 <ferror@plt+0x5114>
  407038:	and	w21, w21, #0xffff
  40703c:	tst	w20, w21
  407040:	b.eq	407004 <ferror@plt+0x5114>  // b.none
  407044:	ldr	w0, [x19, #16]
  407048:	mov	w1, #0x8919                	// #35097
  40704c:	ldr	x2, [x19, #8]
  407050:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  407054:	tbnz	w0, #31, 407004 <ferror@plt+0x5114>
  407058:	cmp	w23, #0x0
  40705c:	b.le	40700c <ferror@plt+0x511c>
  407060:	ldr	x0, [x22]
  407064:	str	x0, [x19, #24]
  407068:	mov	x0, x19
  40706c:	bl	406150 <ferror@plt+0x4260>
  407070:	b	40700c <ferror@plt+0x511c>
  407074:	ldr	x0, [x22, #8]
  407078:	str	x0, [x19, #24]
  40707c:	mov	x0, x19
  407080:	bl	406150 <ferror@plt+0x4260>
  407084:	ldp	x19, x20, [sp, #16]
  407088:	ldp	x21, x22, [sp, #32]
  40708c:	ldr	x23, [sp, #48]
  407090:	ldp	x29, x30, [sp], #80
  407094:	ret
  407098:	stp	x29, x30, [sp, #-80]!
  40709c:	mov	x29, sp
  4070a0:	stp	x19, x20, [sp, #16]
  4070a4:	mov	x19, x0
  4070a8:	adrp	x0, 411000 <argp_error@@Base+0x1650>
  4070ac:	add	x0, x0, #0xa90
  4070b0:	stp	x21, x22, [sp, #32]
  4070b4:	mov	x22, x2
  4070b8:	ldr	x3, [x19, #8]
  4070bc:	ldrsh	w21, [x3, #16]
  4070c0:	str	x23, [sp, #48]
  4070c4:	mov	w23, w1
  4070c8:	add	x1, sp, #0x4c
  4070cc:	bl	402590 <ferror@plt+0x6a0>
  4070d0:	cbnz	w0, 4070f0 <ferror@plt+0x5200>
  4070d4:	cmp	w23, #0x1
  4070d8:	b.gt	407144 <ferror@plt+0x5254>
  4070dc:	ldp	x19, x20, [sp, #16]
  4070e0:	ldp	x21, x22, [sp, #32]
  4070e4:	ldr	x23, [sp, #48]
  4070e8:	ldp	x29, x30, [sp], #80
  4070ec:	ret
  4070f0:	mov	w20, w0
  4070f4:	ldr	w0, [x19, #16]
  4070f8:	ldr	x2, [x19, #8]
  4070fc:	mov	w1, #0x8913                	// #35091
  407100:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  407104:	tbnz	w0, #31, 4070d4 <ferror@plt+0x51e4>
  407108:	and	w21, w21, #0xffff
  40710c:	tst	w20, w21
  407110:	b.eq	4070d4 <ferror@plt+0x51e4>  // b.none
  407114:	ldr	w0, [x19, #16]
  407118:	mov	w1, #0x8917                	// #35095
  40711c:	ldr	x2, [x19, #8]
  407120:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  407124:	tbnz	w0, #31, 4070d4 <ferror@plt+0x51e4>
  407128:	cmp	w23, #0x0
  40712c:	b.le	4070dc <ferror@plt+0x51ec>
  407130:	ldr	x0, [x22]
  407134:	str	x0, [x19, #24]
  407138:	mov	x0, x19
  40713c:	bl	406150 <ferror@plt+0x4260>
  407140:	b	4070dc <ferror@plt+0x51ec>
  407144:	ldr	x0, [x22, #8]
  407148:	str	x0, [x19, #24]
  40714c:	mov	x0, x19
  407150:	bl	406150 <ferror@plt+0x4260>
  407154:	ldp	x19, x20, [sp, #16]
  407158:	ldp	x21, x22, [sp, #32]
  40715c:	ldr	x23, [sp, #48]
  407160:	ldp	x29, x30, [sp], #80
  407164:	ret
  407168:	stp	x29, x30, [sp, #-112]!
  40716c:	mov	x29, sp
  407170:	stp	x21, x22, [sp, #32]
  407174:	mov	x21, x0
  407178:	stp	x19, x20, [sp, #16]
  40717c:	ldr	x20, [x0, #24]
  407180:	stp	x23, x24, [sp, #48]
  407184:	ldr	w0, [x0, #32]
  407188:	stp	x25, x26, [sp, #64]
  40718c:	add	w2, w0, #0x1
  407190:	stp	x27, x28, [sp, #80]
  407194:	str	w2, [x21, #32]
  407198:	ldrb	w19, [x20]
  40719c:	cbz	w19, 4075a8 <ferror@plt+0x56b8>
  4071a0:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  4071a4:	mov	w23, w1
  4071a8:	add	x22, x22, #0x630
  4071ac:	mov	w0, w2
  4071b0:	adrp	x24, 429000 <argp_error@@Base+0x19650>
  4071b4:	nop
  4071b8:	cmp	w19, #0x7d
  4071bc:	ccmp	w2, #0x1, #0x4, eq  // eq = none
  4071c0:	b.gt	407230 <ferror@plt+0x5340>
  4071c4:	cmp	w19, #0x24
  4071c8:	b.eq	4074f0 <ferror@plt+0x5600>  // b.none
  4071cc:	cbz	w23, 4072e8 <ferror@plt+0x53f8>
  4071d0:	cmp	w19, #0x7d
  4071d4:	ccmp	w2, #0x1, #0x4, eq  // eq = none
  4071d8:	b.gt	407230 <ferror@plt+0x5340>
  4071dc:	ldrb	w19, [x20, #1]!
  4071e0:	mov	w2, w0
  4071e4:	cmp	w19, #0x24
  4071e8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4071ec:	b.ne	4071d0 <ferror@plt+0x52e0>  // b.any
  4071f0:	cmp	w19, #0x24
  4071f4:	mov	x25, x20
  4071f8:	b.ne	4075d0 <ferror@plt+0x56e0>  // b.any
  4071fc:	ldrb	w0, [x20, #1]
  407200:	add	x20, x20, #0x2
  407204:	cmp	w0, #0x7b
  407208:	b.eq	40739c <ferror@plt+0x54ac>  // b.none
  40720c:	cmp	w0, #0x7d
  407210:	b.eq	40736c <ferror@plt+0x547c>  // b.none
  407214:	cmp	w0, #0x24
  407218:	b.eq	40736c <ferror@plt+0x547c>  // b.none
  40721c:	cbz	w23, 40725c <ferror@plt+0x536c>
  407220:	ldrb	w19, [x25, #2]
  407224:	ldr	w0, [x21, #32]
  407228:	mov	w2, w0
  40722c:	cbnz	w19, 4071b8 <ferror@plt+0x52c8>
  407230:	sub	w1, w2, #0x1
  407234:	str	x20, [x21, #24]
  407238:	str	w1, [x21, #32]
  40723c:	mov	sp, x29
  407240:	ldp	x19, x20, [sp, #16]
  407244:	ldp	x21, x22, [sp, #32]
  407248:	ldp	x23, x24, [sp, #48]
  40724c:	ldp	x25, x26, [sp, #64]
  407250:	ldp	x27, x28, [sp, #80]
  407254:	ldp	x29, x30, [sp], #112
  407258:	ret
  40725c:	ldr	x3, [x24, #2248]
  407260:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  407264:	add	x26, x1, #0x640
  407268:	mov	w0, #0x24                  	// #36
  40726c:	ldr	x1, [x1, #1600]
  407270:	ldr	w2, [x3]
  407274:	add	w2, w2, #0x1
  407278:	str	w2, [x3]
  40727c:	bl	401b60 <putc@plt>
  407280:	mov	w0, #0x1                   	// #1
  407284:	str	w0, [x22]
  407288:	ldr	x1, [x24, #2248]
  40728c:	ldrb	w0, [x25, #1]
  407290:	cmp	w0, #0x9
  407294:	b.ne	4072c8 <ferror@plt+0x53d8>  // b.any
  407298:	ldr	w3, [x1]
  40729c:	cmp	w3, #0x0
  4072a0:	add	w2, w3, #0x7
  4072a4:	csel	w2, w2, w3, lt  // lt = tstop
  4072a8:	and	w2, w2, #0xfffffff8
  4072ac:	add	w2, w2, #0x8
  4072b0:	str	w2, [x1]
  4072b4:	ldr	x1, [x26]
  4072b8:	bl	401b60 <putc@plt>
  4072bc:	mov	w0, #0x1                   	// #1
  4072c0:	str	w0, [x22]
  4072c4:	b	407220 <ferror@plt+0x5330>
  4072c8:	cmp	w0, #0xa
  4072cc:	b.ne	40737c <ferror@plt+0x548c>  // b.any
  4072d0:	str	wzr, [x1]
  4072d4:	ldr	x1, [x26]
  4072d8:	bl	401b60 <putc@plt>
  4072dc:	mov	w0, #0x1                   	// #1
  4072e0:	str	w0, [x22]
  4072e4:	b	407220 <ferror@plt+0x5330>
  4072e8:	adrp	x26, 42a000 <argp_error@@Base+0x1a650>
  4072ec:	mov	w25, #0x1                   	// #1
  4072f0:	b	407324 <ferror@plt+0x5434>
  4072f4:	ldr	w1, [x0]
  4072f8:	add	w1, w1, #0x1
  4072fc:	str	w1, [x0]
  407300:	ldr	x1, [x26, #1600]
  407304:	mov	w0, w19
  407308:	bl	401b60 <putc@plt>
  40730c:	str	w25, [x22]
  407310:	ldrb	w19, [x20, #1]!
  407314:	cmp	w19, #0x24
  407318:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  40731c:	b.eq	4071f0 <ferror@plt+0x5300>  // b.none
  407320:	ldr	w2, [x21, #32]
  407324:	cmp	w19, #0x7d
  407328:	ccmp	w2, #0x1, #0x4, eq  // eq = none
  40732c:	b.gt	407230 <ferror@plt+0x5340>
  407330:	ldr	x0, [x24, #2248]
  407334:	cmp	w19, #0x9
  407338:	b.eq	40734c <ferror@plt+0x545c>  // b.none
  40733c:	cmp	w19, #0xa
  407340:	b.ne	4072f4 <ferror@plt+0x5404>  // b.any
  407344:	str	wzr, [x0]
  407348:	b	407300 <ferror@plt+0x5410>
  40734c:	ldr	w2, [x0]
  407350:	cmp	w2, #0x0
  407354:	add	w1, w2, #0x7
  407358:	csel	w1, w1, w2, lt  // lt = tstop
  40735c:	and	w1, w1, #0xfffffff8
  407360:	add	w1, w1, #0x8
  407364:	str	w1, [x0]
  407368:	b	407300 <ferror@plt+0x5410>
  40736c:	cbnz	w23, 407220 <ferror@plt+0x5330>
  407370:	ldr	x1, [x24, #2248]
  407374:	adrp	x26, 42a000 <argp_error@@Base+0x1a650>
  407378:	add	x26, x26, #0x640
  40737c:	ldr	w2, [x1]
  407380:	add	w2, w2, #0x1
  407384:	str	w2, [x1]
  407388:	ldr	x1, [x26]
  40738c:	bl	401b60 <putc@plt>
  407390:	mov	w0, #0x1                   	// #1
  407394:	str	w0, [x22]
  407398:	b	407220 <ferror@plt+0x5330>
  40739c:	mov	x0, x20
  4073a0:	mov	w1, #0x7d                  	// #125
  4073a4:	bl	401d70 <strchr@plt>
  4073a8:	mov	x26, x0
  4073ac:	cbz	x0, 4074f8 <ferror@plt+0x5608>
  4073b0:	sub	x19, x0, x20
  4073b4:	mov	x1, x20
  4073b8:	add	x0, x19, #0x10
  4073bc:	mov	x2, x19
  4073c0:	and	x0, x0, #0xfffffffffffffff0
  4073c4:	add	x20, x26, #0x1
  4073c8:	sub	sp, sp, x0
  4073cc:	mov	x27, sp
  4073d0:	mov	x0, x27
  4073d4:	bl	401aa0 <memcpy@plt>
  4073d8:	strb	wzr, [x27, x19]
  4073dc:	cbz	w23, 407418 <ferror@plt+0x5528>
  4073e0:	str	x20, [x21, #24]
  4073e4:	ldrb	w19, [x20]
  4073e8:	add	x1, x20, #0x1
  4073ec:	mov	x0, x21
  4073f0:	cmp	w19, #0x7b
  4073f4:	b.ne	407224 <ferror@plt+0x5334>  // b.any
  4073f8:	str	x1, [x21, #24]
  4073fc:	bl	404a80 <ferror@plt+0x2b90>
  407400:	ldr	x20, [x21, #24]
  407404:	ldrb	w19, [x20]
  407408:	cmp	w19, #0x7d
  40740c:	b.ne	4073e8 <ferror@plt+0x54f8>  // b.any
  407410:	add	x20, x20, #0x1
  407414:	b	4073e0 <ferror@plt+0x54f0>
  407418:	mov	x0, x26
  40741c:	bl	401b00 <strlen@plt>
  407420:	lsr	x0, x0, #1
  407424:	ldrb	w1, [x26, #1]
  407428:	add	x0, x0, #0xf
  40742c:	and	x0, x0, #0xfffffffffffffff0
  407430:	cmp	w1, #0x7b
  407434:	sub	sp, sp, x0
  407438:	mov	x0, sp
  40743c:	str	x0, [x29, #104]
  407440:	b.ne	4075b0 <ferror@plt+0x56c0>  // b.any
  407444:	mov	x25, #0x0                   	// #0
  407448:	add	x26, x20, #0x1
  40744c:	str	x26, [x21, #24]
  407450:	mov	x0, x21
  407454:	sxtw	x19, w25
  407458:	bl	404a80 <ferror@plt+0x2b90>
  40745c:	ldr	x20, [x21, #24]
  407460:	sub	x28, x20, x26
  407464:	add	x0, x28, #0x1
  407468:	bl	40bea0 <argp_parse@@Base+0x1d10>
  40746c:	ldr	x3, [x29, #104]
  407470:	mov	x1, x26
  407474:	mov	x26, x0
  407478:	mov	x2, x28
  40747c:	str	x0, [x3, x25, lsl #3]
  407480:	bl	401aa0 <memcpy@plt>
  407484:	strb	wzr, [x26, x28]
  407488:	add	w2, w25, #0x1
  40748c:	ldrb	w0, [x20]
  407490:	cmp	w0, #0x7d
  407494:	b.eq	4074d8 <ferror@plt+0x55e8>  // b.none
  407498:	add	x25, x25, #0x1
  40749c:	cmp	w0, #0x7b
  4074a0:	b.eq	407448 <ferror@plt+0x5558>  // b.none
  4074a4:	ldr	x3, [x29, #104]
  4074a8:	mov	x0, x27
  4074ac:	mov	x1, x21
  4074b0:	bl	405fe0 <ferror@plt+0x40f0>
  4074b4:	str	x20, [x21, #24]
  4074b8:	ldr	x0, [x29, #104]
  4074bc:	ldr	x0, [x0, x19, lsl #3]
  4074c0:	sub	x19, x19, #0x1
  4074c4:	bl	401d30 <free@plt>
  4074c8:	cmn	w19, #0x1
  4074cc:	b.ne	4074b8 <ferror@plt+0x55c8>  // b.any
  4074d0:	ldrb	w19, [x20]
  4074d4:	b	407224 <ferror@plt+0x5334>
  4074d8:	ldrb	w0, [x20, #1]
  4074dc:	add	x25, x25, #0x1
  4074e0:	add	x20, x20, #0x1
  4074e4:	cmp	w0, #0x7b
  4074e8:	b.eq	407448 <ferror@plt+0x5558>  // b.none
  4074ec:	b	4074a4 <ferror@plt+0x55b4>
  4074f0:	mov	x25, x20
  4074f4:	b	4071fc <ferror@plt+0x530c>
  4074f8:	adrp	x23, 429000 <argp_error@@Base+0x19650>
  4074fc:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  407500:	adrp	x22, 42a000 <argp_error@@Base+0x1a650>
  407504:	add	x23, x23, #0x8c8
  407508:	add	x26, x1, #0x640
  40750c:	mov	x20, x25
  407510:	add	x22, x22, #0x630
  407514:	mov	w24, #0x1                   	// #1
  407518:	b	407538 <ferror@plt+0x5648>
  40751c:	str	wzr, [x0]
  407520:	ldr	x1, [x26]
  407524:	mov	w0, w19
  407528:	bl	401b60 <putc@plt>
  40752c:	str	w24, [x22]
  407530:	ldrb	w19, [x20]
  407534:	cbz	w19, 407574 <ferror@plt+0x5684>
  407538:	add	x20, x20, #0x1
  40753c:	cmp	w19, #0x9
  407540:	ldr	x0, [x23]
  407544:	b.eq	407588 <ferror@plt+0x5698>  // b.none
  407548:	cmp	w19, #0xa
  40754c:	b.eq	40751c <ferror@plt+0x562c>  // b.none
  407550:	ldr	w1, [x0]
  407554:	add	w1, w1, #0x1
  407558:	str	w1, [x0]
  40755c:	ldr	x1, [x26]
  407560:	mov	w0, w19
  407564:	bl	401b60 <putc@plt>
  407568:	str	w24, [x22]
  40756c:	ldrb	w19, [x20]
  407570:	cbnz	w19, 407538 <ferror@plt+0x5648>
  407574:	mov	x0, x25
  407578:	bl	401b00 <strlen@plt>
  40757c:	ldr	w2, [x21, #32]
  407580:	add	x20, x25, x0
  407584:	b	407230 <ferror@plt+0x5340>
  407588:	ldr	w2, [x0]
  40758c:	cmp	w2, #0x0
  407590:	add	w1, w2, #0x7
  407594:	csel	w1, w1, w2, lt  // lt = tstop
  407598:	and	w1, w1, #0xfffffff8
  40759c:	add	w1, w1, #0x8
  4075a0:	str	w1, [x0]
  4075a4:	b	407520 <ferror@plt+0x5630>
  4075a8:	mov	w1, w0
  4075ac:	b	407234 <ferror@plt+0x5344>
  4075b0:	mov	x3, x0
  4075b4:	mov	x1, x21
  4075b8:	mov	x0, x27
  4075bc:	mov	w2, #0x0                   	// #0
  4075c0:	bl	405fe0 <ferror@plt+0x40f0>
  4075c4:	str	x20, [x21, #24]
  4075c8:	ldrb	w19, [x26, #1]
  4075cc:	b	407224 <ferror@plt+0x5334>
  4075d0:	ldr	w1, [x21, #32]
  4075d4:	sub	w1, w1, #0x1
  4075d8:	b	407234 <ferror@plt+0x5344>
  4075dc:	nop
  4075e0:	stp	x29, x30, [sp, #-64]!
  4075e4:	adrp	x5, 42a000 <argp_error@@Base+0x1a650>
  4075e8:	mov	w4, w0
  4075ec:	mov	x29, sp
  4075f0:	ldr	x6, [x5, #1600]
  4075f4:	cbz	x6, 407634 <ferror@plt+0x5744>
  4075f8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4075fc:	mov	w5, #0x0                   	// #0
  407600:	ldr	w6, [x0, #1432]
  407604:	cbnz	w6, 407614 <ferror@plt+0x5724>
  407608:	mov	w6, #0x1                   	// #1
  40760c:	mov	w5, w6
  407610:	str	w6, [x0, #1432]
  407614:	add	x0, sp, #0x18
  407618:	stp	x1, x2, [sp, #24]
  40761c:	stp	w4, w5, [sp, #40]
  407620:	str	x3, [sp, #48]
  407624:	str	wzr, [sp, #56]
  407628:	bl	406150 <ferror@plt+0x4260>
  40762c:	ldp	x29, x30, [sp], #64
  407630:	ret
  407634:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  407638:	ldr	x0, [x0, #1256]
  40763c:	str	x0, [x5, #1600]
  407640:	b	4075f8 <ferror@plt+0x5708>
  407644:	nop
  407648:	stp	x29, x30, [sp, #-16]!
  40764c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  407650:	add	x0, x0, #0x840
  407654:	mov	x29, sp
  407658:	ldrb	w4, [x1]
  40765c:	ldrb	w3, [x1, #1]
  407660:	ldrb	w2, [x1, #2]
  407664:	ldrb	w1, [x1, #3]
  407668:	bl	401e80 <printf@plt>
  40766c:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407670:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  407674:	mov	w4, #0x1                   	// #1
  407678:	ldr	x2, [x1, #2248]
  40767c:	ldr	w1, [x2]
  407680:	add	w1, w1, w0
  407684:	str	w1, [x2]
  407688:	str	w4, [x3, #1584]
  40768c:	ldp	x29, x30, [sp], #16
  407690:	ret
  407694:	nop
  407698:	stp	x29, x30, [sp, #-16]!
  40769c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  4076a0:	add	x0, x0, #0x858
  4076a4:	mov	x29, sp
  4076a8:	ldrb	w5, [x1, #4]
  4076ac:	ldrb	w4, [x1, #3]
  4076b0:	ldrb	w3, [x1, #2]
  4076b4:	ldrb	w2, [x1, #1]
  4076b8:	ldrb	w1, [x1]
  4076bc:	bl	401e80 <printf@plt>
  4076c0:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  4076c4:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4076c8:	mov	w4, #0x1                   	// #1
  4076cc:	ldr	x2, [x1, #2248]
  4076d0:	ldr	w1, [x2]
  4076d4:	add	w1, w1, w0
  4076d8:	str	w1, [x2]
  4076dc:	str	w4, [x3, #1584]
  4076e0:	ldp	x29, x30, [sp], #16
  4076e4:	ret
  4076e8:	stp	x29, x30, [sp, #-16]!
  4076ec:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  4076f0:	add	x0, x0, #0x360
  4076f4:	mov	x29, sp
  4076f8:	ldrsh	w1, [x1]
  4076fc:	bl	401e80 <printf@plt>
  407700:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407704:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  407708:	mov	w4, #0x1                   	// #1
  40770c:	ldr	x2, [x1, #2248]
  407710:	ldr	w1, [x2]
  407714:	add	w1, w1, w0
  407718:	str	w1, [x2]
  40771c:	str	w4, [x3, #1584]
  407720:	ldp	x29, x30, [sp], #16
  407724:	ret
  407728:	stp	x29, x30, [sp, #-16]!
  40772c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  407730:	add	x0, x0, #0x868
  407734:	mov	x29, sp
  407738:	ldrb	w1, [x1]
  40773c:	bl	401e80 <printf@plt>
  407740:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407744:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  407748:	mov	w4, #0x1                   	// #1
  40774c:	ldr	x2, [x1, #2248]
  407750:	ldr	w1, [x2]
  407754:	add	w1, w1, w0
  407758:	str	w1, [x2]
  40775c:	str	w4, [x3, #1584]
  407760:	ldp	x29, x30, [sp], #16
  407764:	ret
  407768:	stp	x29, x30, [sp, #-16]!
  40776c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  407770:	add	x0, x0, #0x870
  407774:	mov	x29, sp
  407778:	ldrb	w6, [x1, #5]
  40777c:	ldrb	w5, [x1, #4]
  407780:	ldrb	w4, [x1, #3]
  407784:	ldrb	w3, [x1, #2]
  407788:	ldrb	w2, [x1, #1]
  40778c:	ldrb	w1, [x1]
  407790:	bl	401e80 <printf@plt>
  407794:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407798:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  40779c:	mov	w4, #0x1                   	// #1
  4077a0:	ldr	x2, [x1, #2248]
  4077a4:	ldr	w1, [x2]
  4077a8:	add	w1, w1, w0
  4077ac:	str	w1, [x2]
  4077b0:	str	w4, [x3, #1584]
  4077b4:	ldp	x29, x30, [sp], #16
  4077b8:	ret
  4077bc:	nop
  4077c0:	stp	x29, x30, [sp, #-48]!
  4077c4:	mov	x29, sp
  4077c8:	stp	x19, x20, [sp, #16]
  4077cc:	mov	x20, x0
  4077d0:	mov	x19, x1
  4077d4:	stp	x21, x22, [sp, #32]
  4077d8:	mov	x21, x1
  4077dc:	add	x22, x1, #0x6
  4077e0:	ldrb	w2, [x19]
  4077e4:	mov	x0, x20
  4077e8:	add	x19, x19, #0x1
  4077ec:	lsr	w2, w2, #1
  4077f0:	mov	w1, w2
  4077f4:	cmp	w2, #0x20
  4077f8:	b.eq	407808 <ferror@plt+0x5918>  // b.none
  4077fc:	bl	404de0 <ferror@plt+0x2ef0>
  407800:	cmp	x22, x19
  407804:	b.ne	4077e0 <ferror@plt+0x58f0>  // b.any
  407808:	ldrb	w1, [x21, #6]
  40780c:	ubfx	x1, x1, #1, #4
  407810:	cbnz	w1, 407824 <ferror@plt+0x5934>
  407814:	ldp	x19, x20, [sp, #16]
  407818:	ldp	x21, x22, [sp, #32]
  40781c:	ldp	x29, x30, [sp], #48
  407820:	ret
  407824:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  407828:	add	x0, x0, #0x890
  40782c:	bl	401e80 <printf@plt>
  407830:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407834:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  407838:	mov	w4, #0x1                   	// #1
  40783c:	ldr	x2, [x1, #2248]
  407840:	ldp	x19, x20, [sp, #16]
  407844:	ldr	w1, [x2]
  407848:	ldp	x21, x22, [sp, #32]
  40784c:	add	w1, w1, w0
  407850:	str	w1, [x2]
  407854:	str	w4, [x3, #1584]
  407858:	ldp	x29, x30, [sp], #48
  40785c:	ret
  407860:	sub	sp, sp, #0x60
  407864:	mov	x2, x1
  407868:	add	x8, x2, #0x60
  40786c:	add	x9, x2, #0xa8
  407870:	add	x10, x2, #0x68
  407874:	add	x11, x2, #0xb0
  407878:	stp	x29, x30, [sp, #80]
  40787c:	add	x12, x2, #0x48
  407880:	add	x29, sp, #0x50
  407884:	adrp	x3, 413000 <argp_error@@Base+0x3650>
  407888:	add	x1, x3, #0x898
  40788c:	add	x4, x2, #0x18
  407890:	add	x3, x2, #0x38
  407894:	add	x5, x2, #0x28
  407898:	add	x6, x2, #0x50
  40789c:	add	x7, x2, #0x58
  4078a0:	stp	x7, x6, [sp]
  4078a4:	add	x7, x2, #0x88
  4078a8:	add	x6, x2, #0x90
  4078ac:	stp	x5, x4, [sp, #16]
  4078b0:	add	x5, x2, #0x40
  4078b4:	add	x4, x2, #0x30
  4078b8:	stp	x3, x12, [sp, #32]
  4078bc:	add	x3, x2, #0x10
  4078c0:	add	x2, x2, #0x20
  4078c4:	stp	x11, x10, [sp, #48]
  4078c8:	stp	x9, x8, [sp, #64]
  4078cc:	bl	401e30 <__isoc99_sscanf@plt>
  4078d0:	cmp	w0, #0x10
  4078d4:	cset	w0, eq  // eq = none
  4078d8:	ldp	x29, x30, [sp, #80]
  4078dc:	add	sp, sp, #0x60
  4078e0:	ret
  4078e4:	nop
  4078e8:	sub	sp, sp, #0x60
  4078ec:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4078f0:	stp	x29, x30, [sp, #64]
  4078f4:	add	x29, sp, #0x40
  4078f8:	str	x19, [sp, #80]
  4078fc:	mov	x19, x1
  407900:	add	x8, x19, #0x28
  407904:	add	x1, x2, #0x8e0
  407908:	add	x3, x19, #0x68
  40790c:	add	x2, x19, #0xa8
  407910:	add	x4, x19, #0xb0
  407914:	add	x5, x19, #0x48
  407918:	add	x6, x19, #0x38
  40791c:	add	x7, x19, #0x18
  407920:	stp	x8, x7, [sp]
  407924:	add	x7, x19, #0x88
  407928:	stp	x6, x5, [sp, #16]
  40792c:	add	x6, x19, #0x90
  407930:	add	x5, x19, #0x40
  407934:	stp	x4, x3, [sp, #32]
  407938:	add	x4, x19, #0x30
  40793c:	add	x3, x19, #0x10
  407940:	str	x2, [sp, #48]
  407944:	add	x2, x19, #0x20
  407948:	bl	401e30 <__isoc99_sscanf@plt>
  40794c:	cmp	w0, #0xd
  407950:	cset	w0, eq  // eq = none
  407954:	ldp	x29, x30, [sp, #64]
  407958:	str	xzr, [x19, #80]
  40795c:	ldr	x19, [sp, #80]
  407960:	add	sp, sp, #0x60
  407964:	ret
  407968:	sub	sp, sp, #0x50
  40796c:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407970:	stp	x29, x30, [sp, #48]
  407974:	add	x29, sp, #0x30
  407978:	str	x19, [sp, #64]
  40797c:	mov	x19, x1
  407980:	add	x3, x19, #0x68
  407984:	add	x1, x2, #0x918
  407988:	add	x4, x19, #0xb0
  40798c:	add	x2, x19, #0xa8
  407990:	add	x5, x19, #0x48
  407994:	add	x6, x19, #0x38
  407998:	stp	x6, x5, [sp]
  40799c:	add	x7, x19, #0x18
  4079a0:	add	x6, x19, #0x88
  4079a4:	stp	x4, x3, [sp, #16]
  4079a8:	add	x5, x19, #0x90
  4079ac:	add	x4, x19, #0x40
  4079b0:	str	x2, [sp, #32]
  4079b4:	add	x3, x19, #0x30
  4079b8:	add	x2, x19, #0x10
  4079bc:	bl	401e30 <__isoc99_sscanf@plt>
  4079c0:	cmp	w0, #0xb
  4079c4:	cset	w0, eq  // eq = none
  4079c8:	stp	xzr, xzr, [x19, #32]
  4079cc:	ldp	x29, x30, [sp, #48]
  4079d0:	str	xzr, [x19, #80]
  4079d4:	ldr	x19, [sp, #64]
  4079d8:	add	sp, sp, #0x50
  4079dc:	ret
  4079e0:	stp	x29, x30, [sp, #-96]!
  4079e4:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  4079e8:	add	x1, x1, #0xe80
  4079ec:	mov	x29, sp
  4079f0:	stp	x23, x24, [sp, #48]
  4079f4:	adrp	x24, 413000 <argp_error@@Base+0x3650>
  4079f8:	add	x24, x24, #0x948
  4079fc:	mov	x0, x24
  407a00:	stp	xzr, xzr, [sp, #80]
  407a04:	bl	401bd0 <fopen@plt>
  407a08:	cbz	x0, 407c20 <ferror@plt+0x5d30>
  407a0c:	stp	x21, x22, [sp, #32]
  407a10:	mov	x22, x0
  407a14:	add	x1, sp, #0x58
  407a18:	add	x0, sp, #0x50
  407a1c:	mov	x3, x22
  407a20:	mov	w2, #0xa                   	// #10
  407a24:	bl	401ec0 <__getdelim@plt>
  407a28:	tbnz	x0, #63, 407b88 <ferror@plt+0x5c98>
  407a2c:	mov	x3, x22
  407a30:	add	x1, sp, #0x58
  407a34:	add	x0, sp, #0x50
  407a38:	mov	w2, #0xa                   	// #10
  407a3c:	bl	401ec0 <__getdelim@plt>
  407a40:	tbnz	x0, #63, 407b88 <ferror@plt+0x5c98>
  407a44:	stp	x19, x20, [sp, #16]
  407a48:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  407a4c:	add	x1, x1, #0x978
  407a50:	ldr	x19, [sp, #80]
  407a54:	stp	x25, x26, [sp, #64]
  407a58:	mov	w25, #0x2                   	// #2
  407a5c:	mov	x0, x19
  407a60:	bl	401e20 <strstr@plt>
  407a64:	cbnz	x0, 407a80 <ferror@plt+0x5b90>
  407a68:	mov	x0, x19
  407a6c:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  407a70:	add	x1, x1, #0x988
  407a74:	bl	401e20 <strstr@plt>
  407a78:	cmp	x0, #0x0
  407a7c:	cset	w25, ne  // ne = any
  407a80:	mov	x3, x22
  407a84:	add	x1, sp, #0x58
  407a88:	add	x0, sp, #0x50
  407a8c:	adrp	x23, 414000 <argp_error@@Base+0x4650>
  407a90:	mov	w2, #0xa                   	// #10
  407a94:	add	x23, x23, #0x3e0
  407a98:	bl	401ec0 <__getdelim@plt>
  407a9c:	cmp	x0, #0x0
  407aa0:	b.le	407b60 <ferror@plt+0x5c70>
  407aa4:	nop
  407aa8:	mov	x0, #0xc8                  	// #200
  407aac:	bl	40bf70 <argp_parse@@Base+0x1de0>
  407ab0:	ldr	x20, [sp, #80]
  407ab4:	mov	x21, x0
  407ab8:	ldrb	w19, [x20]
  407abc:	cbz	w19, 407ae0 <ferror@plt+0x5bf0>
  407ac0:	tbnz	w19, #7, 407ae0 <ferror@plt+0x5bf0>
  407ac4:	bl	401d00 <__ctype_b_loc@plt>
  407ac8:	ubfiz	x19, x19, #1, #8
  407acc:	ldr	x1, [x0]
  407ad0:	ldrh	w1, [x1, x19]
  407ad4:	tbz	w1, #13, 407ae0 <ferror@plt+0x5bf0>
  407ad8:	ldrb	w19, [x20, #1]!
  407adc:	cbnz	w19, 407ac0 <ferror@plt+0x5bd0>
  407ae0:	mov	x0, x20
  407ae4:	mov	w1, #0x3a                  	// #58
  407ae8:	bl	401d70 <strchr@plt>
  407aec:	mov	x19, x0
  407af0:	cbz	x0, 407bd8 <ferror@plt+0x5ce8>
  407af4:	sub	x26, x0, x20
  407af8:	add	x0, x26, #0x1
  407afc:	bl	40bea0 <argp_parse@@Base+0x1d10>
  407b00:	mov	x1, x20
  407b04:	mov	x2, x26
  407b08:	mov	x20, x0
  407b0c:	str	x0, [x21, #8]
  407b10:	bl	401aa0 <memcpy@plt>
  407b14:	ldr	x2, [x23, w25, sxtw #3]
  407b18:	strb	wzr, [x20, x26]
  407b1c:	add	x0, x19, #0x1
  407b20:	mov	x1, x21
  407b24:	blr	x2
  407b28:	cbz	w0, 407bd8 <ferror@plt+0x5ce8>
  407b2c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  407b30:	str	xzr, [x21]
  407b34:	ldr	x1, [x0, #1608]
  407b38:	cbz	x1, 407bc8 <ferror@plt+0x5cd8>
  407b3c:	str	x21, [x1]
  407b40:	str	x21, [x0, #1608]
  407b44:	mov	x3, x22
  407b48:	add	x1, sp, #0x58
  407b4c:	add	x0, sp, #0x50
  407b50:	mov	w2, #0xa                   	// #10
  407b54:	bl	401ec0 <__getdelim@plt>
  407b58:	cmp	x0, #0x0
  407b5c:	b.gt	407aa8 <ferror@plt+0x5bb8>
  407b60:	mov	x0, x22
  407b64:	bl	401bc0 <fclose@plt>
  407b68:	ldr	x0, [sp, #80]
  407b6c:	bl	401d30 <free@plt>
  407b70:	ldp	x19, x20, [sp, #16]
  407b74:	ldp	x21, x22, [sp, #32]
  407b78:	ldp	x25, x26, [sp, #64]
  407b7c:	ldp	x23, x24, [sp, #48]
  407b80:	ldp	x29, x30, [sp], #96
  407b84:	ret
  407b88:	bl	401ea0 <__errno_location@plt>
  407b8c:	mov	x1, x0
  407b90:	mov	x3, x24
  407b94:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407b98:	add	x2, x2, #0x968
  407b9c:	mov	w0, #0x0                   	// #0
  407ba0:	ldr	w1, [x1]
  407ba4:	bl	401b30 <error@plt>
  407ba8:	mov	x0, x22
  407bac:	bl	401bc0 <fclose@plt>
  407bb0:	ldr	x0, [sp, #80]
  407bb4:	bl	401d30 <free@plt>
  407bb8:	ldp	x21, x22, [sp, #32]
  407bbc:	ldp	x23, x24, [sp, #48]
  407bc0:	ldp	x29, x30, [sp], #96
  407bc4:	ret
  407bc8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  407bcc:	str	x21, [x0, #1608]
  407bd0:	str	x21, [x1, #1616]
  407bd4:	b	407b44 <ferror@plt+0x5c54>
  407bd8:	bl	401ea0 <__errno_location@plt>
  407bdc:	mov	x1, x0
  407be0:	mov	x3, x24
  407be4:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407be8:	add	x2, x2, #0x968
  407bec:	mov	w0, #0x0                   	// #0
  407bf0:	ldr	w1, [x1]
  407bf4:	bl	401b30 <error@plt>
  407bf8:	mov	x0, x21
  407bfc:	bl	401d30 <free@plt>
  407c00:	mov	x0, x22
  407c04:	bl	401bc0 <fclose@plt>
  407c08:	ldr	x0, [sp, #80]
  407c0c:	bl	401d30 <free@plt>
  407c10:	ldp	x19, x20, [sp, #16]
  407c14:	ldp	x21, x22, [sp, #32]
  407c18:	ldp	x25, x26, [sp, #64]
  407c1c:	b	407b7c <ferror@plt+0x5c8c>
  407c20:	bl	401ea0 <__errno_location@plt>
  407c24:	mov	x1, x0
  407c28:	mov	x3, x24
  407c2c:	mov	w0, #0x0                   	// #0
  407c30:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407c34:	add	x2, x2, #0x958
  407c38:	ldr	w1, [x1]
  407c3c:	bl	401b30 <error@plt>
  407c40:	ldp	x23, x24, [sp, #48]
  407c44:	ldp	x29, x30, [sp], #96
  407c48:	ret
  407c4c:	nop
  407c50:	stp	x29, x30, [sp, #-128]!
  407c54:	mov	w1, #0x2                   	// #2
  407c58:	mov	w2, #0x0                   	// #0
  407c5c:	mov	x29, sp
  407c60:	mov	w0, w1
  407c64:	stp	x23, x24, [sp, #48]
  407c68:	bl	401d90 <socket@plt>
  407c6c:	tbnz	w0, #31, 407e28 <ferror@plt+0x5f38>
  407c70:	add	x1, sp, #0x50
  407c74:	stp	x19, x20, [sp, #16]
  407c78:	stp	x21, x22, [sp, #32]
  407c7c:	mov	w21, w0
  407c80:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  407c84:	add	x0, x0, #0x948
  407c88:	bl	40b1f8 <argp_parse@@Base+0x1068>
  407c8c:	mov	x20, x0
  407c90:	cbz	x0, 407e20 <ferror@plt+0x5f30>
  407c94:	ldr	x22, [sp, #80]
  407c98:	mov	x19, #0x0                   	// #0
  407c9c:	nop
  407ca0:	sub	x2, x0, x20
  407ca4:	mov	w1, #0x3a                  	// #58
  407ca8:	add	x0, x0, #0x1
  407cac:	sub	x2, x22, x2
  407cb0:	add	x19, x19, #0x1
  407cb4:	bl	401dd0 <memchr@plt>
  407cb8:	cbnz	x0, 407ca0 <ferror@plt+0x5db0>
  407cbc:	lsl	x0, x19, #4
  407cc0:	bl	401be0 <malloc@plt>
  407cc4:	mov	x23, x0
  407cc8:	cbz	x0, 407e44 <ferror@plt+0x5f54>
  407ccc:	mov	x2, x22
  407cd0:	mov	x0, x20
  407cd4:	mov	w1, #0x3a                  	// #58
  407cd8:	bl	401dd0 <memchr@plt>
  407cdc:	mov	x19, x0
  407ce0:	cbz	x0, 407e3c <ferror@plt+0x5f4c>
  407ce4:	mov	x1, x19
  407ce8:	str	x25, [sp, #64]
  407cec:	mov	x22, #0x1                   	// #1
  407cf0:	mov	x25, x23
  407cf4:	mov	w24, #0xffffffff            	// #-1
  407cf8:	strb	wzr, [x1], #-1
  407cfc:	ldurb	w0, [x19, #-1]
  407d00:	cmp	w0, #0x20
  407d04:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  407d08:	b.eq	407da8 <ferror@plt+0x5eb8>  // b.none
  407d0c:	nop
  407d10:	mov	x0, x1
  407d14:	ldrb	w2, [x1, #-1]!
  407d18:	cmp	w2, #0x20
  407d1c:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  407d20:	b.ne	407d10 <ferror@plt+0x5e20>  // b.any
  407d24:	bl	401c80 <strdup@plt>
  407d28:	mov	x1, x0
  407d2c:	str	w22, [x25]
  407d30:	add	x0, sp, #0x58
  407d34:	str	x1, [x25, #8]
  407d38:	bl	401db0 <strcpy@plt>
  407d3c:	str	w24, [sp, #104]
  407d40:	add	x2, sp, #0x58
  407d44:	mov	w0, w21
  407d48:	mov	w1, #0x8933                	// #35123
  407d4c:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  407d50:	tbnz	w0, #31, 407d5c <ferror@plt+0x5e6c>
  407d54:	ldr	w0, [sp, #104]
  407d58:	str	w0, [x25]
  407d5c:	ldr	x0, [x25, #8]
  407d60:	cbz	x0, 407db0 <ferror@plt+0x5ec0>
  407d64:	ldr	x3, [sp, #80]
  407d68:	sub	x2, x19, x20
  407d6c:	mov	x0, x19
  407d70:	mov	w1, #0x3a                  	// #58
  407d74:	sub	x2, x3, x2
  407d78:	add	x25, x25, #0x10
  407d7c:	bl	401dd0 <memchr@plt>
  407d80:	mov	x19, x0
  407d84:	add	x0, x22, #0x1
  407d88:	cbz	x19, 407df0 <ferror@plt+0x5f00>
  407d8c:	mov	x1, x19
  407d90:	mov	x22, x0
  407d94:	strb	wzr, [x1], #-1
  407d98:	ldurb	w0, [x19, #-1]
  407d9c:	cmp	w0, #0x20
  407da0:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  407da4:	b.ne	407d10 <ferror@plt+0x5e20>  // b.any
  407da8:	mov	x0, x19
  407dac:	b	407d24 <ferror@plt+0x5e34>
  407db0:	bl	401ea0 <__errno_location@plt>
  407db4:	mov	x19, x0
  407db8:	mov	w0, w21
  407dbc:	mov	x23, #0x0                   	// #0
  407dc0:	ldr	w21, [x19]
  407dc4:	bl	401ca0 <close@plt>
  407dc8:	mov	x0, x20
  407dcc:	bl	401d30 <free@plt>
  407dd0:	ldr	x25, [sp, #64]
  407dd4:	str	w21, [x19]
  407dd8:	ldp	x19, x20, [sp, #16]
  407ddc:	ldp	x21, x22, [sp, #32]
  407de0:	mov	x0, x23
  407de4:	ldp	x23, x24, [sp, #48]
  407de8:	ldp	x29, x30, [sp], #128
  407dec:	ret
  407df0:	ldr	x25, [sp, #64]
  407df4:	add	x22, x23, x22, lsl #4
  407df8:	str	wzr, [x22]
  407dfc:	mov	x0, x20
  407e00:	str	xzr, [x22, #8]
  407e04:	bl	401d30 <free@plt>
  407e08:	mov	x0, x23
  407e0c:	ldp	x19, x20, [sp, #16]
  407e10:	ldp	x21, x22, [sp, #32]
  407e14:	ldp	x23, x24, [sp, #48]
  407e18:	ldp	x29, x30, [sp], #128
  407e1c:	ret
  407e20:	ldp	x19, x20, [sp, #16]
  407e24:	ldp	x21, x22, [sp, #32]
  407e28:	mov	x23, #0x0                   	// #0
  407e2c:	mov	x0, x23
  407e30:	ldp	x23, x24, [sp, #48]
  407e34:	ldp	x29, x30, [sp], #128
  407e38:	ret
  407e3c:	mov	x22, x23
  407e40:	b	407df8 <ferror@plt+0x5f08>
  407e44:	bl	401ea0 <__errno_location@plt>
  407e48:	mov	x19, x0
  407e4c:	mov	w0, w21
  407e50:	ldr	w21, [x19]
  407e54:	bl	401ca0 <close@plt>
  407e58:	mov	x0, x20
  407e5c:	bl	401d30 <free@plt>
  407e60:	str	w21, [x19]
  407e64:	ldp	x19, x20, [sp, #16]
  407e68:	ldp	x21, x22, [sp, #32]
  407e6c:	b	407de0 <ferror@plt+0x5ef0>
  407e70:	cmp	w0, #0x54
  407e74:	b.eq	407e80 <ferror@plt+0x5f90>  // b.none
  407e78:	mov	w0, #0x7                   	// #7
  407e7c:	ret
  407e80:	stp	x29, x30, [sp, #-64]!
  407e84:	mov	x29, sp
  407e88:	ldr	x0, [x2, #40]
  407e8c:	stp	x19, x20, [sp, #16]
  407e90:	mov	x19, x1
  407e94:	ldr	x20, [x0]
  407e98:	str	x21, [sp, #32]
  407e9c:	cbz	x20, 407f5c <ferror@plt+0x606c>
  407ea0:	ldr	w21, [x20, #8]
  407ea4:	tbz	w21, #0, 407f3c <ferror@plt+0x604c>
  407ea8:	ldr	x0, [x20, #16]
  407eac:	ldr	w0, [x0]
  407eb0:	tbnz	w0, #0, 407f20 <ferror@plt+0x6030>
  407eb4:	add	x1, sp, #0x38
  407eb8:	mov	x0, x19
  407ebc:	mov	w2, #0x0                   	// #0
  407ec0:	bl	401d10 <strtol@plt>
  407ec4:	ldr	x1, [x20, #16]
  407ec8:	str	w0, [x1, #4]
  407ecc:	ldrb	w0, [x19]
  407ed0:	cbz	w0, 407ee0 <ferror@plt+0x5ff0>
  407ed4:	ldr	x0, [sp, #56]
  407ed8:	ldrb	w0, [x0]
  407edc:	cbz	w0, 407f00 <ferror@plt+0x6010>
  407ee0:	ldr	x4, [x20]
  407ee4:	mov	w1, #0x0                   	// #0
  407ee8:	mov	x3, x19
  407eec:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407ef0:	mov	w0, #0x1                   	// #1
  407ef4:	add	x2, x2, #0xa20
  407ef8:	bl	401b30 <error@plt>
  407efc:	ldr	x1, [x20, #16]
  407f00:	mov	w0, #0x0                   	// #0
  407f04:	ldr	w2, [x1]
  407f08:	ldp	x19, x20, [sp, #16]
  407f0c:	orr	w2, w2, #0x1
  407f10:	ldr	x21, [sp, #32]
  407f14:	str	w2, [x1]
  407f18:	ldp	x29, x30, [sp], #64
  407f1c:	ret
  407f20:	ldr	x3, [x20]
  407f24:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407f28:	mov	w1, #0x0                   	// #0
  407f2c:	add	x2, x2, #0x9f0
  407f30:	mov	w0, #0x1                   	// #1
  407f34:	bl	401b30 <error@plt>
  407f38:	b	407eb4 <ferror@plt+0x5fc4>
  407f3c:	mov	x0, #0x8                   	// #8
  407f40:	bl	401be0 <malloc@plt>
  407f44:	str	x0, [x20, #16]
  407f48:	cbz	x0, 407f78 <ferror@plt+0x6088>
  407f4c:	str	wzr, [x0]
  407f50:	orr	w21, w21, #0x1
  407f54:	str	w21, [x20, #8]
  407f58:	b	407eb4 <ferror@plt+0x5fc4>
  407f5c:	mov	x3, x1
  407f60:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407f64:	mov	w1, #0x0                   	// #0
  407f68:	add	x2, x2, #0x990
  407f6c:	mov	w0, #0x1                   	// #1
  407f70:	bl	401b30 <error@plt>
  407f74:	b	407ea0 <ferror@plt+0x5fb0>
  407f78:	bl	401ea0 <__errno_location@plt>
  407f7c:	mov	x1, x0
  407f80:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  407f84:	mov	w0, #0x1                   	// #1
  407f88:	add	x2, x2, #0x9b8
  407f8c:	ldr	w1, [x1]
  407f90:	bl	401b30 <error@plt>
  407f94:	ldr	w21, [x20, #8]
  407f98:	ldr	x0, [x20, #16]
  407f9c:	b	407f4c <ferror@plt+0x605c>
  407fa0:	adrp	x1, 429000 <argp_error@@Base+0x19650>
  407fa4:	mov	w2, w0
  407fa8:	add	x3, x1, #0xe20
  407fac:	ldr	x0, [x1, #3616]
  407fb0:	cbz	x0, 407fd0 <ferror@plt+0x60e0>
  407fb4:	mov	x0, x3
  407fb8:	b	407fc4 <ferror@plt+0x60d4>
  407fbc:	ldr	x1, [x0, #32]!
  407fc0:	cbz	x1, 407fd4 <ferror@plt+0x60e4>
  407fc4:	ldr	w1, [x0, #16]
  407fc8:	cmp	w1, w2
  407fcc:	b.ne	407fbc <ferror@plt+0x60cc>  // b.any
  407fd0:	ret
  407fd4:	mov	x0, #0x0                   	// #0
  407fd8:	ret
  407fdc:	nop
  407fe0:	stp	x29, x30, [sp, #-32]!
  407fe4:	mov	x29, sp
  407fe8:	stp	x19, x20, [sp, #16]
  407fec:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  407ff0:	mov	x20, x0
  407ff4:	ldr	w0, [x19, #1436]
  407ff8:	cbz	w0, 408034 <ferror@plt+0x6144>
  407ffc:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408000:	ldr	x19, [x0, #1616]
  408004:	cbnz	x19, 408014 <ferror@plt+0x6124>
  408008:	b	408024 <ferror@plt+0x6134>
  40800c:	ldr	x19, [x19]
  408010:	cbz	x19, 408024 <ferror@plt+0x6134>
  408014:	ldr	x0, [x19, #8]
  408018:	mov	x1, x20
  40801c:	bl	401cf0 <strcmp@plt>
  408020:	cbnz	w0, 40800c <ferror@plt+0x611c>
  408024:	mov	x0, x19
  408028:	ldp	x19, x20, [sp, #16]
  40802c:	ldp	x29, x30, [sp], #32
  408030:	ret
  408034:	bl	4079e0 <ferror@plt+0x5af0>
  408038:	mov	w0, #0x1                   	// #1
  40803c:	str	w0, [x19, #1436]
  408040:	b	407ffc <ferror@plt+0x610c>
  408044:	nop
  408048:	stp	x29, x30, [sp, #-64]!
  40804c:	mov	x29, sp
  408050:	stp	x19, x20, [sp, #16]
  408054:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408058:	mov	x20, x0
  40805c:	ldr	w0, [x19, #1436]
  408060:	stp	x21, x22, [sp, #32]
  408064:	mov	w21, w1
  408068:	mov	x22, x2
  40806c:	str	x23, [sp, #48]
  408070:	ldr	x23, [x20, #8]
  408074:	cbz	w0, 4080e8 <ferror@plt+0x61f8>
  408078:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40807c:	ldr	x19, [x0, #1616]
  408080:	cbnz	x19, 408090 <ferror@plt+0x61a0>
  408084:	b	4080c4 <ferror@plt+0x61d4>
  408088:	ldr	x19, [x19]
  40808c:	cbz	x19, 4080c4 <ferror@plt+0x61d4>
  408090:	ldr	x0, [x19, #8]
  408094:	mov	x1, x23
  408098:	bl	401cf0 <strcmp@plt>
  40809c:	mov	w3, w0
  4080a0:	cbnz	w0, 408088 <ferror@plt+0x6198>
  4080a4:	mov	x2, x22
  4080a8:	mov	w1, w21
  4080ac:	mov	x0, x20
  4080b0:	ldp	x19, x20, [sp, #16]
  4080b4:	ldp	x21, x22, [sp, #32]
  4080b8:	ldr	x23, [sp, #48]
  4080bc:	ldp	x29, x30, [sp], #64
  4080c0:	b	4068a0 <ferror@plt+0x49b0>
  4080c4:	mov	x2, x22
  4080c8:	mov	w1, w21
  4080cc:	mov	x0, x20
  4080d0:	mov	w3, #0x1                   	// #1
  4080d4:	ldp	x19, x20, [sp, #16]
  4080d8:	ldp	x21, x22, [sp, #32]
  4080dc:	ldr	x23, [sp, #48]
  4080e0:	ldp	x29, x30, [sp], #64
  4080e4:	b	4068a0 <ferror@plt+0x49b0>
  4080e8:	bl	4079e0 <ferror@plt+0x5af0>
  4080ec:	mov	w0, #0x1                   	// #1
  4080f0:	str	w0, [x19, #1436]
  4080f4:	b	408078 <ferror@plt+0x6188>
  4080f8:	stp	x29, x30, [sp, #-64]!
  4080fc:	mov	x29, sp
  408100:	stp	x19, x20, [sp, #16]
  408104:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408108:	mov	x20, x0
  40810c:	ldr	w0, [x19, #1436]
  408110:	stp	x21, x22, [sp, #32]
  408114:	mov	x21, x2
  408118:	ldr	x22, [x20, #8]
  40811c:	str	x23, [sp, #48]
  408120:	mov	w23, w1
  408124:	cbz	w0, 408174 <ferror@plt+0x6284>
  408128:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40812c:	ldr	x19, [x0, #1616]
  408130:	cbnz	x19, 408140 <ferror@plt+0x6250>
  408134:	b	408184 <ferror@plt+0x6294>
  408138:	ldr	x19, [x19]
  40813c:	cbz	x19, 408184 <ferror@plt+0x6294>
  408140:	ldr	x0, [x19, #8]
  408144:	mov	x1, x22
  408148:	bl	401cf0 <strcmp@plt>
  40814c:	cbnz	w0, 408138 <ferror@plt+0x6248>
  408150:	mov	x2, x21
  408154:	mov	w1, w23
  408158:	mov	x0, x20
  40815c:	ldr	x3, [x19, #16]
  408160:	ldp	x19, x20, [sp, #16]
  408164:	ldp	x21, x22, [sp, #32]
  408168:	ldr	x23, [sp, #48]
  40816c:	ldp	x29, x30, [sp], #64
  408170:	b	405368 <ferror@plt+0x3478>
  408174:	bl	4079e0 <ferror@plt+0x5af0>
  408178:	mov	w0, #0x1                   	// #1
  40817c:	str	w0, [x19, #1436]
  408180:	b	408128 <ferror@plt+0x6238>
  408184:	mov	x0, x20
  408188:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40818c:	ldp	x19, x20, [sp, #16]
  408190:	add	x1, x1, #0xa58
  408194:	ldp	x21, x22, [sp, #32]
  408198:	ldr	x23, [sp, #48]
  40819c:	ldp	x29, x30, [sp], #64
  4081a0:	b	404e90 <ferror@plt+0x2fa0>
  4081a4:	nop
  4081a8:	stp	x29, x30, [sp, #-64]!
  4081ac:	mov	x29, sp
  4081b0:	stp	x19, x20, [sp, #16]
  4081b4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  4081b8:	mov	x20, x0
  4081bc:	ldr	w0, [x19, #1436]
  4081c0:	stp	x21, x22, [sp, #32]
  4081c4:	mov	x21, x2
  4081c8:	ldr	x22, [x20, #8]
  4081cc:	str	x23, [sp, #48]
  4081d0:	mov	w23, w1
  4081d4:	cbz	w0, 408224 <ferror@plt+0x6334>
  4081d8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4081dc:	ldr	x19, [x0, #1616]
  4081e0:	cbnz	x19, 4081f0 <ferror@plt+0x6300>
  4081e4:	b	408234 <ferror@plt+0x6344>
  4081e8:	ldr	x19, [x19]
  4081ec:	cbz	x19, 408234 <ferror@plt+0x6344>
  4081f0:	ldr	x0, [x19, #8]
  4081f4:	mov	x1, x22
  4081f8:	bl	401cf0 <strcmp@plt>
  4081fc:	cbnz	w0, 4081e8 <ferror@plt+0x62f8>
  408200:	mov	x2, x21
  408204:	mov	w1, w23
  408208:	mov	x0, x20
  40820c:	ldr	x3, [x19, #24]
  408210:	ldp	x19, x20, [sp, #16]
  408214:	ldp	x21, x22, [sp, #32]
  408218:	ldr	x23, [sp, #48]
  40821c:	ldp	x29, x30, [sp], #64
  408220:	b	405368 <ferror@plt+0x3478>
  408224:	bl	4079e0 <ferror@plt+0x5af0>
  408228:	mov	w0, #0x1                   	// #1
  40822c:	str	w0, [x19, #1436]
  408230:	b	4081d8 <ferror@plt+0x62e8>
  408234:	mov	x0, x20
  408238:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40823c:	ldp	x19, x20, [sp, #16]
  408240:	add	x1, x1, #0xa70
  408244:	ldp	x21, x22, [sp, #32]
  408248:	ldr	x23, [sp, #48]
  40824c:	ldp	x29, x30, [sp], #64
  408250:	b	404e90 <ferror@plt+0x2fa0>
  408254:	nop
  408258:	stp	x29, x30, [sp, #-64]!
  40825c:	mov	x29, sp
  408260:	stp	x19, x20, [sp, #16]
  408264:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408268:	mov	x20, x0
  40826c:	ldr	w0, [x19, #1436]
  408270:	stp	x21, x22, [sp, #32]
  408274:	mov	x21, x2
  408278:	ldr	x22, [x20, #8]
  40827c:	str	x23, [sp, #48]
  408280:	mov	w23, w1
  408284:	cbz	w0, 4082d4 <ferror@plt+0x63e4>
  408288:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40828c:	ldr	x19, [x0, #1616]
  408290:	cbnz	x19, 4082a0 <ferror@plt+0x63b0>
  408294:	b	4082e4 <ferror@plt+0x63f4>
  408298:	ldr	x19, [x19]
  40829c:	cbz	x19, 4082e4 <ferror@plt+0x63f4>
  4082a0:	ldr	x0, [x19, #8]
  4082a4:	mov	x1, x22
  4082a8:	bl	401cf0 <strcmp@plt>
  4082ac:	cbnz	w0, 408298 <ferror@plt+0x63a8>
  4082b0:	mov	x2, x21
  4082b4:	mov	w1, w23
  4082b8:	mov	x0, x20
  4082bc:	ldp	x21, x22, [sp, #32]
  4082c0:	ldr	x3, [x19, #32]
  4082c4:	ldp	x19, x20, [sp, #16]
  4082c8:	ldr	x23, [sp, #48]
  4082cc:	ldp	x29, x30, [sp], #64
  4082d0:	b	405368 <ferror@plt+0x3478>
  4082d4:	bl	4079e0 <ferror@plt+0x5af0>
  4082d8:	mov	w0, #0x1                   	// #1
  4082dc:	str	w0, [x19, #1436]
  4082e0:	b	408288 <ferror@plt+0x6398>
  4082e4:	mov	x0, x20
  4082e8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4082ec:	ldp	x19, x20, [sp, #16]
  4082f0:	add	x1, x1, #0xa88
  4082f4:	ldp	x21, x22, [sp, #32]
  4082f8:	ldr	x23, [sp, #48]
  4082fc:	ldp	x29, x30, [sp], #64
  408300:	b	404e90 <ferror@plt+0x2fa0>
  408304:	nop
  408308:	stp	x29, x30, [sp, #-64]!
  40830c:	mov	x29, sp
  408310:	stp	x19, x20, [sp, #16]
  408314:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408318:	mov	x20, x0
  40831c:	ldr	w0, [x19, #1436]
  408320:	stp	x21, x22, [sp, #32]
  408324:	mov	x21, x2
  408328:	ldr	x22, [x20, #8]
  40832c:	str	x23, [sp, #48]
  408330:	mov	w23, w1
  408334:	cbz	w0, 408384 <ferror@plt+0x6494>
  408338:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40833c:	ldr	x19, [x0, #1616]
  408340:	cbnz	x19, 408350 <ferror@plt+0x6460>
  408344:	b	408394 <ferror@plt+0x64a4>
  408348:	ldr	x19, [x19]
  40834c:	cbz	x19, 408394 <ferror@plt+0x64a4>
  408350:	ldr	x0, [x19, #8]
  408354:	mov	x1, x22
  408358:	bl	401cf0 <strcmp@plt>
  40835c:	cbnz	w0, 408348 <ferror@plt+0x6458>
  408360:	mov	x2, x21
  408364:	mov	w1, w23
  408368:	mov	x0, x20
  40836c:	ldp	x21, x22, [sp, #32]
  408370:	ldr	x3, [x19, #40]
  408374:	ldp	x19, x20, [sp, #16]
  408378:	ldr	x23, [sp, #48]
  40837c:	ldp	x29, x30, [sp], #64
  408380:	b	405368 <ferror@plt+0x3478>
  408384:	bl	4079e0 <ferror@plt+0x5af0>
  408388:	mov	w0, #0x1                   	// #1
  40838c:	str	w0, [x19, #1436]
  408390:	b	408338 <ferror@plt+0x6448>
  408394:	mov	x0, x20
  408398:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40839c:	ldp	x19, x20, [sp, #16]
  4083a0:	add	x1, x1, #0xaa0
  4083a4:	ldp	x21, x22, [sp, #32]
  4083a8:	ldr	x23, [sp, #48]
  4083ac:	ldp	x29, x30, [sp], #64
  4083b0:	b	404e90 <ferror@plt+0x2fa0>
  4083b4:	nop
  4083b8:	stp	x29, x30, [sp, #-64]!
  4083bc:	mov	x29, sp
  4083c0:	stp	x19, x20, [sp, #16]
  4083c4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  4083c8:	mov	x20, x0
  4083cc:	ldr	w0, [x19, #1436]
  4083d0:	stp	x21, x22, [sp, #32]
  4083d4:	mov	x21, x2
  4083d8:	ldr	x22, [x20, #8]
  4083dc:	str	x23, [sp, #48]
  4083e0:	mov	w23, w1
  4083e4:	cbz	w0, 408434 <ferror@plt+0x6544>
  4083e8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4083ec:	ldr	x19, [x0, #1616]
  4083f0:	cbnz	x19, 408400 <ferror@plt+0x6510>
  4083f4:	b	408444 <ferror@plt+0x6554>
  4083f8:	ldr	x19, [x19]
  4083fc:	cbz	x19, 408444 <ferror@plt+0x6554>
  408400:	ldr	x0, [x19, #8]
  408404:	mov	x1, x22
  408408:	bl	401cf0 <strcmp@plt>
  40840c:	cbnz	w0, 4083f8 <ferror@plt+0x6508>
  408410:	mov	x2, x21
  408414:	mov	w1, w23
  408418:	mov	x0, x20
  40841c:	ldp	x21, x22, [sp, #32]
  408420:	ldr	x3, [x19, #48]
  408424:	ldp	x19, x20, [sp, #16]
  408428:	ldr	x23, [sp, #48]
  40842c:	ldp	x29, x30, [sp], #64
  408430:	b	405368 <ferror@plt+0x3478>
  408434:	bl	4079e0 <ferror@plt+0x5af0>
  408438:	mov	w0, #0x1                   	// #1
  40843c:	str	w0, [x19, #1436]
  408440:	b	4083e8 <ferror@plt+0x64f8>
  408444:	mov	x0, x20
  408448:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40844c:	ldp	x19, x20, [sp, #16]
  408450:	add	x1, x1, #0xab8
  408454:	ldp	x21, x22, [sp, #32]
  408458:	ldr	x23, [sp, #48]
  40845c:	ldp	x29, x30, [sp], #64
  408460:	b	404e90 <ferror@plt+0x2fa0>
  408464:	nop
  408468:	stp	x29, x30, [sp, #-64]!
  40846c:	mov	x29, sp
  408470:	stp	x19, x20, [sp, #16]
  408474:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408478:	mov	x20, x0
  40847c:	ldr	w0, [x19, #1436]
  408480:	stp	x21, x22, [sp, #32]
  408484:	mov	x21, x2
  408488:	ldr	x22, [x20, #8]
  40848c:	str	x23, [sp, #48]
  408490:	mov	w23, w1
  408494:	cbz	w0, 4084e4 <ferror@plt+0x65f4>
  408498:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40849c:	ldr	x19, [x0, #1616]
  4084a0:	cbnz	x19, 4084b0 <ferror@plt+0x65c0>
  4084a4:	b	4084f4 <ferror@plt+0x6604>
  4084a8:	ldr	x19, [x19]
  4084ac:	cbz	x19, 4084f4 <ferror@plt+0x6604>
  4084b0:	ldr	x0, [x19, #8]
  4084b4:	mov	x1, x22
  4084b8:	bl	401cf0 <strcmp@plt>
  4084bc:	cbnz	w0, 4084a8 <ferror@plt+0x65b8>
  4084c0:	mov	x2, x21
  4084c4:	mov	w1, w23
  4084c8:	mov	x0, x20
  4084cc:	ldp	x21, x22, [sp, #32]
  4084d0:	ldr	x23, [sp, #48]
  4084d4:	ldr	x3, [x19, #56]
  4084d8:	ldp	x19, x20, [sp, #16]
  4084dc:	ldp	x29, x30, [sp], #64
  4084e0:	b	405368 <ferror@plt+0x3478>
  4084e4:	bl	4079e0 <ferror@plt+0x5af0>
  4084e8:	mov	w0, #0x1                   	// #1
  4084ec:	str	w0, [x19, #1436]
  4084f0:	b	408498 <ferror@plt+0x65a8>
  4084f4:	mov	x0, x20
  4084f8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4084fc:	ldp	x19, x20, [sp, #16]
  408500:	add	x1, x1, #0xad0
  408504:	ldp	x21, x22, [sp, #32]
  408508:	ldr	x23, [sp, #48]
  40850c:	ldp	x29, x30, [sp], #64
  408510:	b	404e90 <ferror@plt+0x2fa0>
  408514:	nop
  408518:	stp	x29, x30, [sp, #-64]!
  40851c:	mov	x29, sp
  408520:	stp	x19, x20, [sp, #16]
  408524:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408528:	mov	x20, x0
  40852c:	ldr	w0, [x19, #1436]
  408530:	stp	x21, x22, [sp, #32]
  408534:	mov	x21, x2
  408538:	ldr	x22, [x20, #8]
  40853c:	str	x23, [sp, #48]
  408540:	mov	w23, w1
  408544:	cbz	w0, 408594 <ferror@plt+0x66a4>
  408548:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40854c:	ldr	x19, [x0, #1616]
  408550:	cbnz	x19, 408560 <ferror@plt+0x6670>
  408554:	b	4085a4 <ferror@plt+0x66b4>
  408558:	ldr	x19, [x19]
  40855c:	cbz	x19, 4085a4 <ferror@plt+0x66b4>
  408560:	ldr	x0, [x19, #8]
  408564:	mov	x1, x22
  408568:	bl	401cf0 <strcmp@plt>
  40856c:	cbnz	w0, 408558 <ferror@plt+0x6668>
  408570:	mov	x2, x21
  408574:	mov	w1, w23
  408578:	mov	x0, x20
  40857c:	ldp	x21, x22, [sp, #32]
  408580:	ldr	x23, [sp, #48]
  408584:	ldr	x3, [x19, #64]
  408588:	ldp	x19, x20, [sp, #16]
  40858c:	ldp	x29, x30, [sp], #64
  408590:	b	405368 <ferror@plt+0x3478>
  408594:	bl	4079e0 <ferror@plt+0x5af0>
  408598:	mov	w0, #0x1                   	// #1
  40859c:	str	w0, [x19, #1436]
  4085a0:	b	408548 <ferror@plt+0x6658>
  4085a4:	mov	x0, x20
  4085a8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4085ac:	ldp	x19, x20, [sp, #16]
  4085b0:	add	x1, x1, #0xae8
  4085b4:	ldp	x21, x22, [sp, #32]
  4085b8:	ldr	x23, [sp, #48]
  4085bc:	ldp	x29, x30, [sp], #64
  4085c0:	b	404e90 <ferror@plt+0x2fa0>
  4085c4:	nop
  4085c8:	stp	x29, x30, [sp, #-64]!
  4085cc:	mov	x29, sp
  4085d0:	stp	x19, x20, [sp, #16]
  4085d4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  4085d8:	mov	x20, x0
  4085dc:	ldr	w0, [x19, #1436]
  4085e0:	stp	x21, x22, [sp, #32]
  4085e4:	mov	x21, x2
  4085e8:	ldr	x22, [x20, #8]
  4085ec:	str	x23, [sp, #48]
  4085f0:	mov	w23, w1
  4085f4:	cbz	w0, 408644 <ferror@plt+0x6754>
  4085f8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4085fc:	ldr	x19, [x0, #1616]
  408600:	cbnz	x19, 408610 <ferror@plt+0x6720>
  408604:	b	408654 <ferror@plt+0x6764>
  408608:	ldr	x19, [x19]
  40860c:	cbz	x19, 408654 <ferror@plt+0x6764>
  408610:	ldr	x0, [x19, #8]
  408614:	mov	x1, x22
  408618:	bl	401cf0 <strcmp@plt>
  40861c:	cbnz	w0, 408608 <ferror@plt+0x6718>
  408620:	mov	x2, x21
  408624:	mov	w1, w23
  408628:	mov	x0, x20
  40862c:	ldp	x21, x22, [sp, #32]
  408630:	ldr	x23, [sp, #48]
  408634:	ldr	x3, [x19, #72]
  408638:	ldp	x19, x20, [sp, #16]
  40863c:	ldp	x29, x30, [sp], #64
  408640:	b	405368 <ferror@plt+0x3478>
  408644:	bl	4079e0 <ferror@plt+0x5af0>
  408648:	mov	w0, #0x1                   	// #1
  40864c:	str	w0, [x19, #1436]
  408650:	b	4085f8 <ferror@plt+0x6708>
  408654:	mov	x0, x20
  408658:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40865c:	ldp	x19, x20, [sp, #16]
  408660:	add	x1, x1, #0xb00
  408664:	ldp	x21, x22, [sp, #32]
  408668:	ldr	x23, [sp, #48]
  40866c:	ldp	x29, x30, [sp], #64
  408670:	b	404e90 <ferror@plt+0x2fa0>
  408674:	nop
  408678:	stp	x29, x30, [sp, #-64]!
  40867c:	mov	x29, sp
  408680:	stp	x19, x20, [sp, #16]
  408684:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408688:	mov	x20, x0
  40868c:	ldr	w0, [x19, #1436]
  408690:	stp	x21, x22, [sp, #32]
  408694:	mov	x21, x2
  408698:	ldr	x22, [x20, #8]
  40869c:	str	x23, [sp, #48]
  4086a0:	mov	w23, w1
  4086a4:	cbz	w0, 4086f4 <ferror@plt+0x6804>
  4086a8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4086ac:	ldr	x19, [x0, #1616]
  4086b0:	cbnz	x19, 4086c0 <ferror@plt+0x67d0>
  4086b4:	b	408704 <ferror@plt+0x6814>
  4086b8:	ldr	x19, [x19]
  4086bc:	cbz	x19, 408704 <ferror@plt+0x6814>
  4086c0:	ldr	x0, [x19, #8]
  4086c4:	mov	x1, x22
  4086c8:	bl	401cf0 <strcmp@plt>
  4086cc:	cbnz	w0, 4086b8 <ferror@plt+0x67c8>
  4086d0:	mov	x2, x21
  4086d4:	mov	w1, w23
  4086d8:	mov	x0, x20
  4086dc:	ldp	x21, x22, [sp, #32]
  4086e0:	ldr	x23, [sp, #48]
  4086e4:	ldr	x3, [x19, #80]
  4086e8:	ldp	x19, x20, [sp, #16]
  4086ec:	ldp	x29, x30, [sp], #64
  4086f0:	b	405368 <ferror@plt+0x3478>
  4086f4:	bl	4079e0 <ferror@plt+0x5af0>
  4086f8:	mov	w0, #0x1                   	// #1
  4086fc:	str	w0, [x19, #1436]
  408700:	b	4086a8 <ferror@plt+0x67b8>
  408704:	mov	x0, x20
  408708:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40870c:	ldp	x19, x20, [sp, #16]
  408710:	add	x1, x1, #0xb18
  408714:	ldp	x21, x22, [sp, #32]
  408718:	ldr	x23, [sp, #48]
  40871c:	ldp	x29, x30, [sp], #64
  408720:	b	404e90 <ferror@plt+0x2fa0>
  408724:	nop
  408728:	stp	x29, x30, [sp, #-64]!
  40872c:	mov	x29, sp
  408730:	stp	x19, x20, [sp, #16]
  408734:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408738:	mov	x20, x0
  40873c:	ldr	w0, [x19, #1436]
  408740:	stp	x21, x22, [sp, #32]
  408744:	mov	x21, x2
  408748:	ldr	x22, [x20, #8]
  40874c:	str	x23, [sp, #48]
  408750:	mov	w23, w1
  408754:	cbz	w0, 4087a4 <ferror@plt+0x68b4>
  408758:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40875c:	ldr	x19, [x0, #1616]
  408760:	cbnz	x19, 408770 <ferror@plt+0x6880>
  408764:	b	4087b4 <ferror@plt+0x68c4>
  408768:	ldr	x19, [x19]
  40876c:	cbz	x19, 4087b4 <ferror@plt+0x68c4>
  408770:	ldr	x0, [x19, #8]
  408774:	mov	x1, x22
  408778:	bl	401cf0 <strcmp@plt>
  40877c:	cbnz	w0, 408768 <ferror@plt+0x6878>
  408780:	mov	x2, x21
  408784:	mov	w1, w23
  408788:	mov	x0, x20
  40878c:	ldp	x21, x22, [sp, #32]
  408790:	ldr	x23, [sp, #48]
  408794:	ldr	x3, [x19, #88]
  408798:	ldp	x19, x20, [sp, #16]
  40879c:	ldp	x29, x30, [sp], #64
  4087a0:	b	405368 <ferror@plt+0x3478>
  4087a4:	bl	4079e0 <ferror@plt+0x5af0>
  4087a8:	mov	w0, #0x1                   	// #1
  4087ac:	str	w0, [x19, #1436]
  4087b0:	b	408758 <ferror@plt+0x6868>
  4087b4:	mov	x0, x20
  4087b8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4087bc:	ldp	x19, x20, [sp, #16]
  4087c0:	add	x1, x1, #0xb30
  4087c4:	ldp	x21, x22, [sp, #32]
  4087c8:	ldr	x23, [sp, #48]
  4087cc:	ldp	x29, x30, [sp], #64
  4087d0:	b	404e90 <ferror@plt+0x2fa0>
  4087d4:	nop
  4087d8:	stp	x29, x30, [sp, #-64]!
  4087dc:	mov	x29, sp
  4087e0:	stp	x19, x20, [sp, #16]
  4087e4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  4087e8:	mov	x20, x0
  4087ec:	ldr	w0, [x19, #1436]
  4087f0:	stp	x21, x22, [sp, #32]
  4087f4:	mov	x21, x2
  4087f8:	ldr	x22, [x20, #8]
  4087fc:	str	x23, [sp, #48]
  408800:	mov	w23, w1
  408804:	cbz	w0, 408854 <ferror@plt+0x6964>
  408808:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40880c:	ldr	x19, [x0, #1616]
  408810:	cbnz	x19, 408820 <ferror@plt+0x6930>
  408814:	b	408864 <ferror@plt+0x6974>
  408818:	ldr	x19, [x19]
  40881c:	cbz	x19, 408864 <ferror@plt+0x6974>
  408820:	ldr	x0, [x19, #8]
  408824:	mov	x1, x22
  408828:	bl	401cf0 <strcmp@plt>
  40882c:	cbnz	w0, 408818 <ferror@plt+0x6928>
  408830:	mov	x2, x21
  408834:	mov	w1, w23
  408838:	mov	x0, x20
  40883c:	ldp	x21, x22, [sp, #32]
  408840:	ldr	x23, [sp, #48]
  408844:	ldr	x3, [x19, #96]
  408848:	ldp	x19, x20, [sp, #16]
  40884c:	ldp	x29, x30, [sp], #64
  408850:	b	405368 <ferror@plt+0x3478>
  408854:	bl	4079e0 <ferror@plt+0x5af0>
  408858:	mov	w0, #0x1                   	// #1
  40885c:	str	w0, [x19, #1436]
  408860:	b	408808 <ferror@plt+0x6918>
  408864:	mov	x0, x20
  408868:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40886c:	ldp	x19, x20, [sp, #16]
  408870:	add	x1, x1, #0xb48
  408874:	ldp	x21, x22, [sp, #32]
  408878:	ldr	x23, [sp, #48]
  40887c:	ldp	x29, x30, [sp], #64
  408880:	b	404e90 <ferror@plt+0x2fa0>
  408884:	nop
  408888:	stp	x29, x30, [sp, #-64]!
  40888c:	mov	x29, sp
  408890:	stp	x19, x20, [sp, #16]
  408894:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408898:	mov	x20, x0
  40889c:	ldr	w0, [x19, #1436]
  4088a0:	stp	x21, x22, [sp, #32]
  4088a4:	mov	x21, x2
  4088a8:	ldr	x22, [x20, #8]
  4088ac:	str	x23, [sp, #48]
  4088b0:	mov	w23, w1
  4088b4:	cbz	w0, 408904 <ferror@plt+0x6a14>
  4088b8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4088bc:	ldr	x19, [x0, #1616]
  4088c0:	cbnz	x19, 4088d0 <ferror@plt+0x69e0>
  4088c4:	b	408914 <ferror@plt+0x6a24>
  4088c8:	ldr	x19, [x19]
  4088cc:	cbz	x19, 408914 <ferror@plt+0x6a24>
  4088d0:	ldr	x0, [x19, #8]
  4088d4:	mov	x1, x22
  4088d8:	bl	401cf0 <strcmp@plt>
  4088dc:	cbnz	w0, 4088c8 <ferror@plt+0x69d8>
  4088e0:	mov	x2, x21
  4088e4:	mov	w1, w23
  4088e8:	mov	x0, x20
  4088ec:	ldp	x21, x22, [sp, #32]
  4088f0:	ldr	x23, [sp, #48]
  4088f4:	ldr	x3, [x19, #104]
  4088f8:	ldp	x19, x20, [sp, #16]
  4088fc:	ldp	x29, x30, [sp], #64
  408900:	b	405368 <ferror@plt+0x3478>
  408904:	bl	4079e0 <ferror@plt+0x5af0>
  408908:	mov	w0, #0x1                   	// #1
  40890c:	str	w0, [x19, #1436]
  408910:	b	4088b8 <ferror@plt+0x69c8>
  408914:	mov	x0, x20
  408918:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  40891c:	ldp	x19, x20, [sp, #16]
  408920:	add	x1, x1, #0xb60
  408924:	ldp	x21, x22, [sp, #32]
  408928:	ldr	x23, [sp, #48]
  40892c:	ldp	x29, x30, [sp], #64
  408930:	b	404e90 <ferror@plt+0x2fa0>
  408934:	nop
  408938:	stp	x29, x30, [sp, #-64]!
  40893c:	mov	x29, sp
  408940:	stp	x19, x20, [sp, #16]
  408944:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408948:	mov	x20, x0
  40894c:	ldr	w0, [x19, #1436]
  408950:	stp	x21, x22, [sp, #32]
  408954:	mov	x21, x2
  408958:	ldr	x22, [x20, #8]
  40895c:	str	x23, [sp, #48]
  408960:	mov	w23, w1
  408964:	cbz	w0, 4089b4 <ferror@plt+0x6ac4>
  408968:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40896c:	ldr	x19, [x0, #1616]
  408970:	cbnz	x19, 408980 <ferror@plt+0x6a90>
  408974:	b	4089c4 <ferror@plt+0x6ad4>
  408978:	ldr	x19, [x19]
  40897c:	cbz	x19, 4089c4 <ferror@plt+0x6ad4>
  408980:	ldr	x0, [x19, #8]
  408984:	mov	x1, x22
  408988:	bl	401cf0 <strcmp@plt>
  40898c:	cbnz	w0, 408978 <ferror@plt+0x6a88>
  408990:	mov	x2, x21
  408994:	mov	w1, w23
  408998:	mov	x0, x20
  40899c:	ldp	x21, x22, [sp, #32]
  4089a0:	ldr	x23, [sp, #48]
  4089a4:	ldr	x3, [x19, #112]
  4089a8:	ldp	x19, x20, [sp, #16]
  4089ac:	ldp	x29, x30, [sp], #64
  4089b0:	b	405368 <ferror@plt+0x3478>
  4089b4:	bl	4079e0 <ferror@plt+0x5af0>
  4089b8:	mov	w0, #0x1                   	// #1
  4089bc:	str	w0, [x19, #1436]
  4089c0:	b	408968 <ferror@plt+0x6a78>
  4089c4:	mov	x0, x20
  4089c8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4089cc:	ldp	x19, x20, [sp, #16]
  4089d0:	add	x1, x1, #0xb78
  4089d4:	ldp	x21, x22, [sp, #32]
  4089d8:	ldr	x23, [sp, #48]
  4089dc:	ldp	x29, x30, [sp], #64
  4089e0:	b	404e90 <ferror@plt+0x2fa0>
  4089e4:	nop
  4089e8:	stp	x29, x30, [sp, #-64]!
  4089ec:	mov	x29, sp
  4089f0:	stp	x19, x20, [sp, #16]
  4089f4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  4089f8:	mov	x20, x0
  4089fc:	ldr	w0, [x19, #1436]
  408a00:	stp	x21, x22, [sp, #32]
  408a04:	mov	x21, x2
  408a08:	ldr	x22, [x20, #8]
  408a0c:	str	x23, [sp, #48]
  408a10:	mov	w23, w1
  408a14:	cbz	w0, 408a64 <ferror@plt+0x6b74>
  408a18:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408a1c:	ldr	x19, [x0, #1616]
  408a20:	cbnz	x19, 408a30 <ferror@plt+0x6b40>
  408a24:	b	408a74 <ferror@plt+0x6b84>
  408a28:	ldr	x19, [x19]
  408a2c:	cbz	x19, 408a74 <ferror@plt+0x6b84>
  408a30:	ldr	x0, [x19, #8]
  408a34:	mov	x1, x22
  408a38:	bl	401cf0 <strcmp@plt>
  408a3c:	cbnz	w0, 408a28 <ferror@plt+0x6b38>
  408a40:	mov	x2, x21
  408a44:	mov	w1, w23
  408a48:	mov	x0, x20
  408a4c:	ldp	x21, x22, [sp, #32]
  408a50:	ldr	x23, [sp, #48]
  408a54:	ldr	x3, [x19, #120]
  408a58:	ldp	x19, x20, [sp, #16]
  408a5c:	ldp	x29, x30, [sp], #64
  408a60:	b	405368 <ferror@plt+0x3478>
  408a64:	bl	4079e0 <ferror@plt+0x5af0>
  408a68:	mov	w0, #0x1                   	// #1
  408a6c:	str	w0, [x19, #1436]
  408a70:	b	408a18 <ferror@plt+0x6b28>
  408a74:	mov	x0, x20
  408a78:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408a7c:	ldp	x19, x20, [sp, #16]
  408a80:	add	x1, x1, #0xb98
  408a84:	ldp	x21, x22, [sp, #32]
  408a88:	ldr	x23, [sp, #48]
  408a8c:	ldp	x29, x30, [sp], #64
  408a90:	b	404e90 <ferror@plt+0x2fa0>
  408a94:	nop
  408a98:	stp	x29, x30, [sp, #-64]!
  408a9c:	mov	x29, sp
  408aa0:	stp	x19, x20, [sp, #16]
  408aa4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408aa8:	mov	x20, x0
  408aac:	ldr	w0, [x19, #1436]
  408ab0:	stp	x21, x22, [sp, #32]
  408ab4:	mov	x21, x2
  408ab8:	ldr	x22, [x20, #8]
  408abc:	str	x23, [sp, #48]
  408ac0:	mov	w23, w1
  408ac4:	cbz	w0, 408b14 <ferror@plt+0x6c24>
  408ac8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408acc:	ldr	x19, [x0, #1616]
  408ad0:	cbnz	x19, 408ae0 <ferror@plt+0x6bf0>
  408ad4:	b	408b24 <ferror@plt+0x6c34>
  408ad8:	ldr	x19, [x19]
  408adc:	cbz	x19, 408b24 <ferror@plt+0x6c34>
  408ae0:	ldr	x0, [x19, #8]
  408ae4:	mov	x1, x22
  408ae8:	bl	401cf0 <strcmp@plt>
  408aec:	cbnz	w0, 408ad8 <ferror@plt+0x6be8>
  408af0:	mov	x2, x21
  408af4:	mov	w1, w23
  408af8:	mov	x0, x20
  408afc:	ldp	x21, x22, [sp, #32]
  408b00:	ldr	x23, [sp, #48]
  408b04:	ldr	x3, [x19, #128]
  408b08:	ldp	x19, x20, [sp, #16]
  408b0c:	ldp	x29, x30, [sp], #64
  408b10:	b	405368 <ferror@plt+0x3478>
  408b14:	bl	4079e0 <ferror@plt+0x5af0>
  408b18:	mov	w0, #0x1                   	// #1
  408b1c:	str	w0, [x19, #1436]
  408b20:	b	408ac8 <ferror@plt+0x6bd8>
  408b24:	mov	x0, x20
  408b28:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408b2c:	ldp	x19, x20, [sp, #16]
  408b30:	add	x1, x1, #0xbb8
  408b34:	ldp	x21, x22, [sp, #32]
  408b38:	ldr	x23, [sp, #48]
  408b3c:	ldp	x29, x30, [sp], #64
  408b40:	b	404e90 <ferror@plt+0x2fa0>
  408b44:	nop
  408b48:	stp	x29, x30, [sp, #-64]!
  408b4c:	mov	x29, sp
  408b50:	stp	x19, x20, [sp, #16]
  408b54:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408b58:	mov	x20, x0
  408b5c:	ldr	w0, [x19, #1436]
  408b60:	stp	x21, x22, [sp, #32]
  408b64:	mov	x21, x2
  408b68:	ldr	x22, [x20, #8]
  408b6c:	str	x23, [sp, #48]
  408b70:	mov	w23, w1
  408b74:	cbz	w0, 408bc4 <ferror@plt+0x6cd4>
  408b78:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408b7c:	ldr	x19, [x0, #1616]
  408b80:	cbnz	x19, 408b90 <ferror@plt+0x6ca0>
  408b84:	b	408bd4 <ferror@plt+0x6ce4>
  408b88:	ldr	x19, [x19]
  408b8c:	cbz	x19, 408bd4 <ferror@plt+0x6ce4>
  408b90:	ldr	x0, [x19, #8]
  408b94:	mov	x1, x22
  408b98:	bl	401cf0 <strcmp@plt>
  408b9c:	cbnz	w0, 408b88 <ferror@plt+0x6c98>
  408ba0:	mov	x2, x21
  408ba4:	mov	w1, w23
  408ba8:	mov	x0, x20
  408bac:	ldp	x21, x22, [sp, #32]
  408bb0:	ldr	x23, [sp, #48]
  408bb4:	ldr	x3, [x19, #136]
  408bb8:	ldp	x19, x20, [sp, #16]
  408bbc:	ldp	x29, x30, [sp], #64
  408bc0:	b	405368 <ferror@plt+0x3478>
  408bc4:	bl	4079e0 <ferror@plt+0x5af0>
  408bc8:	mov	w0, #0x1                   	// #1
  408bcc:	str	w0, [x19, #1436]
  408bd0:	b	408b78 <ferror@plt+0x6c88>
  408bd4:	mov	x0, x20
  408bd8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408bdc:	ldp	x19, x20, [sp, #16]
  408be0:	add	x1, x1, #0xbd0
  408be4:	ldp	x21, x22, [sp, #32]
  408be8:	ldr	x23, [sp, #48]
  408bec:	ldp	x29, x30, [sp], #64
  408bf0:	b	404e90 <ferror@plt+0x2fa0>
  408bf4:	nop
  408bf8:	stp	x29, x30, [sp, #-64]!
  408bfc:	mov	x29, sp
  408c00:	stp	x19, x20, [sp, #16]
  408c04:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408c08:	mov	x20, x0
  408c0c:	ldr	w0, [x19, #1436]
  408c10:	stp	x21, x22, [sp, #32]
  408c14:	mov	x21, x2
  408c18:	ldr	x22, [x20, #8]
  408c1c:	str	x23, [sp, #48]
  408c20:	mov	w23, w1
  408c24:	cbz	w0, 408c74 <ferror@plt+0x6d84>
  408c28:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408c2c:	ldr	x19, [x0, #1616]
  408c30:	cbnz	x19, 408c40 <ferror@plt+0x6d50>
  408c34:	b	408c84 <ferror@plt+0x6d94>
  408c38:	ldr	x19, [x19]
  408c3c:	cbz	x19, 408c84 <ferror@plt+0x6d94>
  408c40:	ldr	x0, [x19, #8]
  408c44:	mov	x1, x22
  408c48:	bl	401cf0 <strcmp@plt>
  408c4c:	cbnz	w0, 408c38 <ferror@plt+0x6d48>
  408c50:	mov	x2, x21
  408c54:	mov	w1, w23
  408c58:	mov	x0, x20
  408c5c:	ldp	x21, x22, [sp, #32]
  408c60:	ldr	x23, [sp, #48]
  408c64:	ldr	x3, [x19, #144]
  408c68:	ldp	x19, x20, [sp, #16]
  408c6c:	ldp	x29, x30, [sp], #64
  408c70:	b	405368 <ferror@plt+0x3478>
  408c74:	bl	4079e0 <ferror@plt+0x5af0>
  408c78:	mov	w0, #0x1                   	// #1
  408c7c:	str	w0, [x19, #1436]
  408c80:	b	408c28 <ferror@plt+0x6d38>
  408c84:	mov	x0, x20
  408c88:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408c8c:	ldp	x19, x20, [sp, #16]
  408c90:	add	x1, x1, #0xbf0
  408c94:	ldp	x21, x22, [sp, #32]
  408c98:	ldr	x23, [sp, #48]
  408c9c:	ldp	x29, x30, [sp], #64
  408ca0:	b	404e90 <ferror@plt+0x2fa0>
  408ca4:	nop
  408ca8:	stp	x29, x30, [sp, #-64]!
  408cac:	mov	x29, sp
  408cb0:	stp	x19, x20, [sp, #16]
  408cb4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408cb8:	mov	x20, x0
  408cbc:	ldr	w0, [x19, #1436]
  408cc0:	stp	x21, x22, [sp, #32]
  408cc4:	mov	x21, x2
  408cc8:	ldr	x22, [x20, #8]
  408ccc:	str	x23, [sp, #48]
  408cd0:	mov	w23, w1
  408cd4:	cbz	w0, 408d24 <ferror@plt+0x6e34>
  408cd8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408cdc:	ldr	x19, [x0, #1616]
  408ce0:	cbnz	x19, 408cf0 <ferror@plt+0x6e00>
  408ce4:	b	408d34 <ferror@plt+0x6e44>
  408ce8:	ldr	x19, [x19]
  408cec:	cbz	x19, 408d34 <ferror@plt+0x6e44>
  408cf0:	ldr	x0, [x19, #8]
  408cf4:	mov	x1, x22
  408cf8:	bl	401cf0 <strcmp@plt>
  408cfc:	cbnz	w0, 408ce8 <ferror@plt+0x6df8>
  408d00:	mov	x2, x21
  408d04:	mov	w1, w23
  408d08:	mov	x0, x20
  408d0c:	ldp	x21, x22, [sp, #32]
  408d10:	ldr	x23, [sp, #48]
  408d14:	ldr	x3, [x19, #152]
  408d18:	ldp	x19, x20, [sp, #16]
  408d1c:	ldp	x29, x30, [sp], #64
  408d20:	b	405368 <ferror@plt+0x3478>
  408d24:	bl	4079e0 <ferror@plt+0x5af0>
  408d28:	mov	w0, #0x1                   	// #1
  408d2c:	str	w0, [x19, #1436]
  408d30:	b	408cd8 <ferror@plt+0x6de8>
  408d34:	mov	x0, x20
  408d38:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408d3c:	ldp	x19, x20, [sp, #16]
  408d40:	add	x1, x1, #0xc10
  408d44:	ldp	x21, x22, [sp, #32]
  408d48:	ldr	x23, [sp, #48]
  408d4c:	ldp	x29, x30, [sp], #64
  408d50:	b	404e90 <ferror@plt+0x2fa0>
  408d54:	nop
  408d58:	stp	x29, x30, [sp, #-64]!
  408d5c:	mov	x29, sp
  408d60:	stp	x19, x20, [sp, #16]
  408d64:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408d68:	mov	x20, x0
  408d6c:	ldr	w0, [x19, #1436]
  408d70:	stp	x21, x22, [sp, #32]
  408d74:	mov	x21, x2
  408d78:	ldr	x22, [x20, #8]
  408d7c:	str	x23, [sp, #48]
  408d80:	mov	w23, w1
  408d84:	cbz	w0, 408dd4 <ferror@plt+0x6ee4>
  408d88:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408d8c:	ldr	x19, [x0, #1616]
  408d90:	cbnz	x19, 408da0 <ferror@plt+0x6eb0>
  408d94:	b	408de4 <ferror@plt+0x6ef4>
  408d98:	ldr	x19, [x19]
  408d9c:	cbz	x19, 408de4 <ferror@plt+0x6ef4>
  408da0:	ldr	x0, [x19, #8]
  408da4:	mov	x1, x22
  408da8:	bl	401cf0 <strcmp@plt>
  408dac:	cbnz	w0, 408d98 <ferror@plt+0x6ea8>
  408db0:	mov	x2, x21
  408db4:	mov	w1, w23
  408db8:	mov	x0, x20
  408dbc:	ldp	x21, x22, [sp, #32]
  408dc0:	ldr	x23, [sp, #48]
  408dc4:	ldr	x3, [x19, #160]
  408dc8:	ldp	x19, x20, [sp, #16]
  408dcc:	ldp	x29, x30, [sp], #64
  408dd0:	b	405368 <ferror@plt+0x3478>
  408dd4:	bl	4079e0 <ferror@plt+0x5af0>
  408dd8:	mov	w0, #0x1                   	// #1
  408ddc:	str	w0, [x19, #1436]
  408de0:	b	408d88 <ferror@plt+0x6e98>
  408de4:	mov	x0, x20
  408de8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408dec:	ldp	x19, x20, [sp, #16]
  408df0:	add	x1, x1, #0xc30
  408df4:	ldp	x21, x22, [sp, #32]
  408df8:	ldr	x23, [sp, #48]
  408dfc:	ldp	x29, x30, [sp], #64
  408e00:	b	404e90 <ferror@plt+0x2fa0>
  408e04:	nop
  408e08:	stp	x29, x30, [sp, #-64]!
  408e0c:	mov	x29, sp
  408e10:	stp	x19, x20, [sp, #16]
  408e14:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408e18:	mov	x20, x0
  408e1c:	ldr	w0, [x19, #1436]
  408e20:	stp	x21, x22, [sp, #32]
  408e24:	mov	x21, x2
  408e28:	ldr	x22, [x20, #8]
  408e2c:	str	x23, [sp, #48]
  408e30:	mov	w23, w1
  408e34:	cbz	w0, 408e84 <ferror@plt+0x6f94>
  408e38:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408e3c:	ldr	x19, [x0, #1616]
  408e40:	cbnz	x19, 408e50 <ferror@plt+0x6f60>
  408e44:	b	408e94 <ferror@plt+0x6fa4>
  408e48:	ldr	x19, [x19]
  408e4c:	cbz	x19, 408e94 <ferror@plt+0x6fa4>
  408e50:	ldr	x0, [x19, #8]
  408e54:	mov	x1, x22
  408e58:	bl	401cf0 <strcmp@plt>
  408e5c:	cbnz	w0, 408e48 <ferror@plt+0x6f58>
  408e60:	mov	x2, x21
  408e64:	mov	w1, w23
  408e68:	mov	x0, x20
  408e6c:	ldp	x21, x22, [sp, #32]
  408e70:	ldr	x23, [sp, #48]
  408e74:	ldr	x3, [x19, #168]
  408e78:	ldp	x19, x20, [sp, #16]
  408e7c:	ldp	x29, x30, [sp], #64
  408e80:	b	405368 <ferror@plt+0x3478>
  408e84:	bl	4079e0 <ferror@plt+0x5af0>
  408e88:	mov	w0, #0x1                   	// #1
  408e8c:	str	w0, [x19, #1436]
  408e90:	b	408e38 <ferror@plt+0x6f48>
  408e94:	mov	x0, x20
  408e98:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408e9c:	ldp	x19, x20, [sp, #16]
  408ea0:	add	x1, x1, #0xc50
  408ea4:	ldp	x21, x22, [sp, #32]
  408ea8:	ldr	x23, [sp, #48]
  408eac:	ldp	x29, x30, [sp], #64
  408eb0:	b	404e90 <ferror@plt+0x2fa0>
  408eb4:	nop
  408eb8:	stp	x29, x30, [sp, #-64]!
  408ebc:	mov	x29, sp
  408ec0:	stp	x19, x20, [sp, #16]
  408ec4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408ec8:	mov	x20, x0
  408ecc:	ldr	w0, [x19, #1436]
  408ed0:	stp	x21, x22, [sp, #32]
  408ed4:	mov	x21, x2
  408ed8:	ldr	x22, [x20, #8]
  408edc:	str	x23, [sp, #48]
  408ee0:	mov	w23, w1
  408ee4:	cbz	w0, 408f34 <ferror@plt+0x7044>
  408ee8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408eec:	ldr	x19, [x0, #1616]
  408ef0:	cbnz	x19, 408f00 <ferror@plt+0x7010>
  408ef4:	b	408f44 <ferror@plt+0x7054>
  408ef8:	ldr	x19, [x19]
  408efc:	cbz	x19, 408f44 <ferror@plt+0x7054>
  408f00:	ldr	x0, [x19, #8]
  408f04:	mov	x1, x22
  408f08:	bl	401cf0 <strcmp@plt>
  408f0c:	cbnz	w0, 408ef8 <ferror@plt+0x7008>
  408f10:	mov	x2, x21
  408f14:	mov	w1, w23
  408f18:	mov	x0, x20
  408f1c:	ldp	x21, x22, [sp, #32]
  408f20:	ldr	x23, [sp, #48]
  408f24:	ldr	x3, [x19, #176]
  408f28:	ldp	x19, x20, [sp, #16]
  408f2c:	ldp	x29, x30, [sp], #64
  408f30:	b	405368 <ferror@plt+0x3478>
  408f34:	bl	4079e0 <ferror@plt+0x5af0>
  408f38:	mov	w0, #0x1                   	// #1
  408f3c:	str	w0, [x19, #1436]
  408f40:	b	408ee8 <ferror@plt+0x6ff8>
  408f44:	mov	x0, x20
  408f48:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408f4c:	ldp	x19, x20, [sp, #16]
  408f50:	add	x1, x1, #0xc70
  408f54:	ldp	x21, x22, [sp, #32]
  408f58:	ldr	x23, [sp, #48]
  408f5c:	ldp	x29, x30, [sp], #64
  408f60:	b	404e90 <ferror@plt+0x2fa0>
  408f64:	nop
  408f68:	stp	x29, x30, [sp, #-64]!
  408f6c:	mov	x29, sp
  408f70:	stp	x19, x20, [sp, #16]
  408f74:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  408f78:	mov	x20, x0
  408f7c:	ldr	w0, [x19, #1436]
  408f80:	stp	x21, x22, [sp, #32]
  408f84:	mov	x21, x2
  408f88:	ldr	x22, [x20, #8]
  408f8c:	str	x23, [sp, #48]
  408f90:	mov	w23, w1
  408f94:	cbz	w0, 408fe4 <ferror@plt+0x70f4>
  408f98:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  408f9c:	ldr	x19, [x0, #1616]
  408fa0:	cbnz	x19, 408fb0 <ferror@plt+0x70c0>
  408fa4:	b	408ff4 <ferror@plt+0x7104>
  408fa8:	ldr	x19, [x19]
  408fac:	cbz	x19, 408ff4 <ferror@plt+0x7104>
  408fb0:	ldr	x0, [x19, #8]
  408fb4:	mov	x1, x22
  408fb8:	bl	401cf0 <strcmp@plt>
  408fbc:	cbnz	w0, 408fa8 <ferror@plt+0x70b8>
  408fc0:	mov	x2, x21
  408fc4:	mov	w1, w23
  408fc8:	mov	x0, x20
  408fcc:	ldp	x21, x22, [sp, #32]
  408fd0:	ldr	x23, [sp, #48]
  408fd4:	ldr	x3, [x19, #184]
  408fd8:	ldp	x19, x20, [sp, #16]
  408fdc:	ldp	x29, x30, [sp], #64
  408fe0:	b	405368 <ferror@plt+0x3478>
  408fe4:	bl	4079e0 <ferror@plt+0x5af0>
  408fe8:	mov	w0, #0x1                   	// #1
  408fec:	str	w0, [x19, #1436]
  408ff0:	b	408f98 <ferror@plt+0x70a8>
  408ff4:	mov	x0, x20
  408ff8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  408ffc:	ldp	x19, x20, [sp, #16]
  409000:	add	x1, x1, #0xc90
  409004:	ldp	x21, x22, [sp, #32]
  409008:	ldr	x23, [sp, #48]
  40900c:	ldp	x29, x30, [sp], #64
  409010:	b	404e90 <ferror@plt+0x2fa0>
  409014:	nop
  409018:	stp	x29, x30, [sp, #-64]!
  40901c:	mov	x29, sp
  409020:	stp	x19, x20, [sp, #16]
  409024:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  409028:	mov	x20, x0
  40902c:	ldr	w0, [x19, #1436]
  409030:	stp	x21, x22, [sp, #32]
  409034:	mov	x21, x2
  409038:	ldr	x22, [x20, #8]
  40903c:	str	x23, [sp, #48]
  409040:	mov	w23, w1
  409044:	cbz	w0, 409094 <ferror@plt+0x71a4>
  409048:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40904c:	ldr	x19, [x0, #1616]
  409050:	cbnz	x19, 409060 <ferror@plt+0x7170>
  409054:	b	4090a4 <ferror@plt+0x71b4>
  409058:	ldr	x19, [x19]
  40905c:	cbz	x19, 4090a4 <ferror@plt+0x71b4>
  409060:	ldr	x0, [x19, #8]
  409064:	mov	x1, x22
  409068:	bl	401cf0 <strcmp@plt>
  40906c:	cbnz	w0, 409058 <ferror@plt+0x7168>
  409070:	mov	x2, x21
  409074:	mov	w1, w23
  409078:	mov	x0, x20
  40907c:	ldp	x21, x22, [sp, #32]
  409080:	ldr	x23, [sp, #48]
  409084:	ldr	x3, [x19, #192]
  409088:	ldp	x19, x20, [sp, #16]
  40908c:	ldp	x29, x30, [sp], #64
  409090:	b	405368 <ferror@plt+0x3478>
  409094:	bl	4079e0 <ferror@plt+0x5af0>
  409098:	mov	w0, #0x1                   	// #1
  40909c:	str	w0, [x19, #1436]
  4090a0:	b	409048 <ferror@plt+0x7158>
  4090a4:	mov	x0, x20
  4090a8:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4090ac:	ldp	x19, x20, [sp, #16]
  4090b0:	add	x1, x1, #0xcb0
  4090b4:	ldp	x21, x22, [sp, #32]
  4090b8:	ldr	x23, [sp, #48]
  4090bc:	ldp	x29, x30, [sp], #64
  4090c0:	b	404e90 <ferror@plt+0x2fa0>
  4090c4:	nop
  4090c8:	stp	x29, x30, [sp, #-48]!
  4090cc:	mov	x29, sp
  4090d0:	stp	x19, x20, [sp, #16]
  4090d4:	mov	x19, x0
  4090d8:	mov	w20, w1
  4090dc:	str	x21, [sp, #32]
  4090e0:	mov	x21, x2
  4090e4:	ldr	x2, [x0, #8]
  4090e8:	mov	w1, #0x8927                	// #35111
  4090ec:	ldr	w0, [x0, #16]
  4090f0:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4090f4:	tbnz	w0, #31, 409170 <ferror@plt+0x7280>
  4090f8:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  4090fc:	add	x3, x0, #0xe20
  409100:	ldr	x1, [x19, #8]
  409104:	ldr	x0, [x0, #3616]
  409108:	ldrh	w5, [x1, #16]
  40910c:	cbnz	x0, 40911c <ferror@plt+0x722c>
  409110:	b	409150 <ferror@plt+0x7260>
  409114:	ldr	x4, [x3, #32]!
  409118:	cbz	x4, 409150 <ferror@plt+0x7260>
  40911c:	ldr	w4, [x3, #16]
  409120:	cmp	w5, w4
  409124:	b.ne	409114 <ferror@plt+0x7224>  // b.any
  409128:	ldr	x0, [x3, #24]
  40912c:	mov	x2, x21
  409130:	mov	w1, w20
  409134:	cmp	x0, #0x0
  409138:	mov	x0, x19
  40913c:	ldp	x19, x20, [sp, #16]
  409140:	cset	w3, eq  // eq = none
  409144:	ldr	x21, [sp, #32]
  409148:	ldp	x29, x30, [sp], #48
  40914c:	b	4068a0 <ferror@plt+0x49b0>
  409150:	mov	x2, x21
  409154:	mov	w1, w20
  409158:	mov	x0, x19
  40915c:	mov	w3, #0x1                   	// #1
  409160:	ldp	x19, x20, [sp, #16]
  409164:	ldr	x21, [sp, #32]
  409168:	ldp	x29, x30, [sp], #48
  40916c:	b	4068a0 <ferror@plt+0x49b0>
  409170:	mov	x2, x21
  409174:	mov	w1, w20
  409178:	mov	x0, x19
  40917c:	mov	w3, #0x1                   	// #1
  409180:	bl	4068a0 <ferror@plt+0x49b0>
  409184:	b	4090f8 <ferror@plt+0x7208>
  409188:	stp	x29, x30, [sp, #-32]!
  40918c:	mov	w1, #0x8927                	// #35111
  409190:	mov	x29, sp
  409194:	ldr	x2, [x0, #8]
  409198:	str	x19, [sp, #16]
  40919c:	mov	x19, x0
  4091a0:	ldr	w0, [x0, #16]
  4091a4:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4091a8:	tbnz	w0, #31, 409214 <ferror@plt+0x7324>
  4091ac:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  4091b0:	add	x2, x0, #0xe20
  4091b4:	ldr	x1, [x19, #8]
  4091b8:	ldr	x0, [x0, #3616]
  4091bc:	ldrh	w4, [x1, #16]
  4091c0:	cbnz	x0, 4091d0 <ferror@plt+0x72e0>
  4091c4:	b	4091fc <ferror@plt+0x730c>
  4091c8:	ldr	x3, [x2, #32]!
  4091cc:	cbz	x3, 4091fc <ferror@plt+0x730c>
  4091d0:	ldr	w3, [x2, #16]
  4091d4:	cmp	w4, w3
  4091d8:	b.ne	4091c8 <ferror@plt+0x72d8>  // b.any
  4091dc:	ldr	x2, [x2, #24]
  4091e0:	cbz	x2, 4091fc <ferror@plt+0x730c>
  4091e4:	mov	x0, x19
  4091e8:	add	x1, x1, #0x12
  4091ec:	ldr	x19, [sp, #16]
  4091f0:	mov	x16, x2
  4091f4:	ldp	x29, x30, [sp], #32
  4091f8:	br	x16
  4091fc:	mov	x0, x19
  409200:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  409204:	ldr	x19, [sp, #16]
  409208:	add	x1, x1, #0xcf8
  40920c:	ldp	x29, x30, [sp], #32
  409210:	b	404e90 <ferror@plt+0x2fa0>
  409214:	bl	401ea0 <__errno_location@plt>
  409218:	ldr	w1, [x0]
  40921c:	ldr	x3, [x19, #8]
  409220:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409224:	ldr	x19, [sp, #16]
  409228:	add	x2, x2, #0xcd0
  40922c:	ldp	x29, x30, [sp], #32
  409230:	mov	w0, #0x1                   	// #1
  409234:	b	401b30 <error@plt>
  409238:	stp	x29, x30, [sp, #-48]!
  40923c:	mov	x29, sp
  409240:	stp	x19, x20, [sp, #16]
  409244:	mov	x19, x0
  409248:	mov	w20, w1
  40924c:	str	x21, [sp, #32]
  409250:	mov	x21, x2
  409254:	ldr	x2, [x0, #8]
  409258:	mov	w1, #0x8927                	// #35111
  40925c:	ldr	w0, [x0, #16]
  409260:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  409264:	mov	x2, x21
  409268:	mov	w1, w20
  40926c:	tbnz	w0, #31, 409288 <ferror@plt+0x7398>
  409270:	mov	x0, x19
  409274:	mov	w3, #0x0                   	// #0
  409278:	ldp	x19, x20, [sp, #16]
  40927c:	ldr	x21, [sp, #32]
  409280:	ldp	x29, x30, [sp], #48
  409284:	b	4068a0 <ferror@plt+0x49b0>
  409288:	mov	x0, x19
  40928c:	mov	w3, #0x1                   	// #1
  409290:	ldp	x19, x20, [sp, #16]
  409294:	ldr	x21, [sp, #32]
  409298:	ldp	x29, x30, [sp], #48
  40929c:	b	4068a0 <ferror@plt+0x49b0>
  4092a0:	stp	x29, x30, [sp, #-32]!
  4092a4:	mov	w1, #0x8927                	// #35111
  4092a8:	mov	x29, sp
  4092ac:	ldr	x2, [x0, #8]
  4092b0:	str	x19, [sp, #16]
  4092b4:	mov	x19, x0
  4092b8:	ldr	w0, [x0, #16]
  4092bc:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4092c0:	tbnz	w0, #31, 409308 <ferror@plt+0x7418>
  4092c4:	adrp	x0, 429000 <argp_error@@Base+0x19650>
  4092c8:	add	x1, x0, #0xe20
  4092cc:	ldr	x2, [x19, #8]
  4092d0:	ldr	x0, [x0, #3616]
  4092d4:	ldrh	w3, [x2, #16]
  4092d8:	cbnz	x0, 4092e8 <ferror@plt+0x73f8>
  4092dc:	b	40932c <ferror@plt+0x743c>
  4092e0:	ldr	x2, [x1, #32]!
  4092e4:	cbz	x2, 40932c <ferror@plt+0x743c>
  4092e8:	ldr	w2, [x1, #16]
  4092ec:	cmp	w3, w2
  4092f0:	b.ne	4092e0 <ferror@plt+0x73f0>  // b.any
  4092f4:	mov	x0, x19
  4092f8:	ldr	x19, [sp, #16]
  4092fc:	ldp	x29, x30, [sp], #32
  409300:	ldr	x1, [x1, #8]
  409304:	b	404e90 <ferror@plt+0x2fa0>
  409308:	bl	401ea0 <__errno_location@plt>
  40930c:	ldr	w1, [x0]
  409310:	ldr	x3, [x19, #8]
  409314:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409318:	ldr	x19, [sp, #16]
  40931c:	add	x2, x2, #0xcd0
  409320:	ldp	x29, x30, [sp], #32
  409324:	mov	w0, #0x1                   	// #1
  409328:	b	401b30 <error@plt>
  40932c:	mov	x0, x19
  409330:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  409334:	ldr	x19, [sp, #16]
  409338:	add	x1, x1, #0xd10
  40933c:	ldp	x29, x30, [sp], #32
  409340:	b	404e90 <ferror@plt+0x2fa0>
  409344:	nop
  409348:	stp	x29, x30, [sp, #-48]!
  40934c:	mov	x29, sp
  409350:	stp	x19, x20, [sp, #16]
  409354:	mov	x19, x0
  409358:	mov	w20, w1
  40935c:	str	x21, [sp, #32]
  409360:	mov	x21, x2
  409364:	ldr	x2, [x0, #8]
  409368:	mov	w1, #0x891d                	// #35101
  40936c:	ldr	w0, [x0, #16]
  409370:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  409374:	mov	x2, x21
  409378:	mov	w1, w20
  40937c:	tbnz	w0, #31, 409398 <ferror@plt+0x74a8>
  409380:	mov	x0, x19
  409384:	mov	w3, #0x0                   	// #0
  409388:	ldp	x19, x20, [sp, #16]
  40938c:	ldr	x21, [sp, #32]
  409390:	ldp	x29, x30, [sp], #48
  409394:	b	4068a0 <ferror@plt+0x49b0>
  409398:	mov	x0, x19
  40939c:	mov	w3, #0x1                   	// #1
  4093a0:	ldp	x19, x20, [sp, #16]
  4093a4:	ldr	x21, [sp, #32]
  4093a8:	ldp	x29, x30, [sp], #48
  4093ac:	b	4068a0 <ferror@plt+0x49b0>
  4093b0:	stp	x29, x30, [sp, #-48]!
  4093b4:	mov	x29, sp
  4093b8:	stp	x19, x20, [sp, #16]
  4093bc:	mov	x19, x0
  4093c0:	mov	w20, w1
  4093c4:	str	x21, [sp, #32]
  4093c8:	mov	x21, x2
  4093cc:	ldr	x2, [x0, #8]
  4093d0:	mov	w1, #0x891d                	// #35101
  4093d4:	ldr	w0, [x0, #16]
  4093d8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4093dc:	tbnz	w0, #31, 40940c <ferror@plt+0x751c>
  4093e0:	ldr	x3, [x19, #8]
  4093e4:	mov	x2, x21
  4093e8:	mov	w1, w20
  4093ec:	mov	x0, x19
  4093f0:	ldp	x19, x20, [sp, #16]
  4093f4:	ldr	x21, [sp, #32]
  4093f8:	ldp	x29, x30, [sp], #48
  4093fc:	ldr	w3, [x3, #16]
  409400:	cmp	w3, #0x0
  409404:	csinc	w3, w3, wzr, ne  // ne = any
  409408:	b	404f58 <ferror@plt+0x3068>
  40940c:	bl	401ea0 <__errno_location@plt>
  409410:	ldr	w1, [x0]
  409414:	ldr	x3, [x19, #8]
  409418:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40941c:	ldp	x19, x20, [sp, #16]
  409420:	add	x2, x2, #0x3b8
  409424:	ldr	x21, [sp, #32]
  409428:	mov	w0, #0x1                   	// #1
  40942c:	ldp	x29, x30, [sp], #48
  409430:	b	401b30 <error@plt>
  409434:	nop
  409438:	stp	x29, x30, [sp, #-48]!
  40943c:	mov	x29, sp
  409440:	stp	x19, x20, [sp, #16]
  409444:	mov	x19, x0
  409448:	mov	w20, w1
  40944c:	str	x21, [sp, #32]
  409450:	mov	x21, x2
  409454:	ldr	x2, [x0, #8]
  409458:	mov	w1, #0x8942                	// #35138
  40945c:	ldr	w0, [x0, #16]
  409460:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  409464:	tbnz	w0, #31, 409490 <ferror@plt+0x75a0>
  409468:	ldr	x3, [x19, #8]
  40946c:	mov	x2, x21
  409470:	mov	w1, w20
  409474:	mov	x0, x19
  409478:	ldp	x19, x20, [sp, #16]
  40947c:	ldr	x21, [sp, #32]
  409480:	ldp	x29, x30, [sp], #48
  409484:	ldr	w3, [x3, #16]
  409488:	lsr	w3, w3, #31
  40948c:	b	4068a0 <ferror@plt+0x49b0>
  409490:	mov	x2, x21
  409494:	mov	w1, w20
  409498:	mov	x0, x19
  40949c:	mov	w3, #0x1                   	// #1
  4094a0:	ldp	x19, x20, [sp, #16]
  4094a4:	ldr	x21, [sp, #32]
  4094a8:	ldp	x29, x30, [sp], #48
  4094ac:	b	4068a0 <ferror@plt+0x49b0>
  4094b0:	stp	x29, x30, [sp, #-48]!
  4094b4:	mov	x29, sp
  4094b8:	stp	x19, x20, [sp, #16]
  4094bc:	mov	x19, x0
  4094c0:	mov	w20, w1
  4094c4:	str	x21, [sp, #32]
  4094c8:	mov	x21, x2
  4094cc:	ldr	x2, [x0, #8]
  4094d0:	mov	w1, #0x8942                	// #35138
  4094d4:	ldr	w0, [x0, #16]
  4094d8:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  4094dc:	tbnz	w0, #31, 409504 <ferror@plt+0x7614>
  4094e0:	ldr	x3, [x19, #8]
  4094e4:	mov	x2, x21
  4094e8:	mov	w1, w20
  4094ec:	mov	x0, x19
  4094f0:	ldp	x19, x20, [sp, #16]
  4094f4:	ldr	x21, [sp, #32]
  4094f8:	ldp	x29, x30, [sp], #48
  4094fc:	ldr	w3, [x3, #16]
  409500:	b	404f58 <ferror@plt+0x3068>
  409504:	bl	401ea0 <__errno_location@plt>
  409508:	ldr	w1, [x0]
  40950c:	ldr	x3, [x19, #8]
  409510:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409514:	ldp	x19, x20, [sp, #16]
  409518:	add	x2, x2, #0xd28
  40951c:	ldr	x21, [sp, #32]
  409520:	mov	w0, #0x1                   	// #1
  409524:	ldp	x29, x30, [sp], #48
  409528:	b	401b30 <error@plt>
  40952c:	nop
  409530:	stp	x29, x30, [sp, #-64]!
  409534:	mov	x29, sp
  409538:	stp	x19, x20, [sp, #16]
  40953c:	mov	x19, x0
  409540:	mov	x20, x1
  409544:	str	x21, [sp, #32]
  409548:	cbz	x0, 409604 <ferror@plt+0x7714>
  40954c:	ldr	w21, [x19, #8]
  409550:	tbz	w21, #0, 4095e4 <ferror@plt+0x76f4>
  409554:	ldr	x0, [x19, #16]
  409558:	ldr	w0, [x0]
  40955c:	tbnz	w0, #0, 4095c8 <ferror@plt+0x76d8>
  409560:	add	x1, sp, #0x38
  409564:	mov	x0, x20
  409568:	mov	w2, #0x0                   	// #0
  40956c:	bl	401d10 <strtol@plt>
  409570:	ldr	x1, [x19, #16]
  409574:	str	w0, [x1, #4]
  409578:	ldrb	w0, [x20]
  40957c:	cbz	w0, 40958c <ferror@plt+0x769c>
  409580:	ldr	x0, [sp, #56]
  409584:	ldrb	w0, [x0]
  409588:	cbz	w0, 4095ac <ferror@plt+0x76bc>
  40958c:	ldr	x4, [x19]
  409590:	mov	w1, #0x0                   	// #0
  409594:	mov	x3, x20
  409598:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40959c:	mov	w0, #0x1                   	// #1
  4095a0:	add	x2, x2, #0xa20
  4095a4:	bl	401b30 <error@plt>
  4095a8:	ldr	x1, [x19, #16]
  4095ac:	ldr	w0, [x1]
  4095b0:	ldp	x19, x20, [sp, #16]
  4095b4:	orr	w0, w0, #0x1
  4095b8:	ldr	x21, [sp, #32]
  4095bc:	str	w0, [x1]
  4095c0:	ldp	x29, x30, [sp], #64
  4095c4:	ret
  4095c8:	ldr	x3, [x19]
  4095cc:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4095d0:	mov	w1, #0x0                   	// #0
  4095d4:	add	x2, x2, #0x9f0
  4095d8:	mov	w0, #0x1                   	// #1
  4095dc:	bl	401b30 <error@plt>
  4095e0:	b	409560 <ferror@plt+0x7670>
  4095e4:	mov	x0, #0x8                   	// #8
  4095e8:	bl	401be0 <malloc@plt>
  4095ec:	str	x0, [x19, #16]
  4095f0:	cbz	x0, 409620 <ferror@plt+0x7730>
  4095f4:	str	wzr, [x0]
  4095f8:	orr	w21, w21, #0x1
  4095fc:	str	w21, [x19, #8]
  409600:	b	409560 <ferror@plt+0x7670>
  409604:	mov	x3, x1
  409608:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40960c:	mov	w1, #0x0                   	// #0
  409610:	add	x2, x2, #0x990
  409614:	mov	w0, #0x1                   	// #1
  409618:	bl	401b30 <error@plt>
  40961c:	b	40954c <ferror@plt+0x765c>
  409620:	bl	401ea0 <__errno_location@plt>
  409624:	mov	x1, x0
  409628:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  40962c:	mov	w0, #0x1                   	// #1
  409630:	add	x2, x2, #0x9b8
  409634:	ldr	w1, [x1]
  409638:	bl	401b30 <error@plt>
  40963c:	ldr	w21, [x19, #8]
  409640:	ldr	x0, [x19, #16]
  409644:	b	4095f4 <ferror@plt+0x7704>
  409648:	and	w1, w1, #0xff
  40964c:	cmp	w1, #0x54
  409650:	b.eq	40965c <ferror@plt+0x776c>  // b.none
  409654:	mov	w0, #0x0                   	// #0
  409658:	ret
  40965c:	stp	x29, x30, [sp, #-64]!
  409660:	mov	x29, sp
  409664:	stp	x19, x20, [sp, #16]
  409668:	mov	x19, x2
  40966c:	ldr	x20, [x0]
  409670:	str	x21, [sp, #32]
  409674:	cbz	x20, 409730 <ferror@plt+0x7840>
  409678:	ldr	w21, [x20, #8]
  40967c:	tbz	w21, #0, 409710 <ferror@plt+0x7820>
  409680:	ldr	x0, [x20, #16]
  409684:	ldr	w0, [x0]
  409688:	tbz	w0, #0, 4096a4 <ferror@plt+0x77b4>
  40968c:	ldr	x3, [x20]
  409690:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409694:	mov	w1, #0x0                   	// #0
  409698:	add	x2, x2, #0x9f0
  40969c:	mov	w0, #0x1                   	// #1
  4096a0:	bl	401b30 <error@plt>
  4096a4:	add	x1, sp, #0x38
  4096a8:	mov	x0, x19
  4096ac:	mov	w2, #0x0                   	// #0
  4096b0:	bl	401d10 <strtol@plt>
  4096b4:	ldr	x1, [x20, #16]
  4096b8:	str	w0, [x1, #4]
  4096bc:	ldrb	w0, [x19]
  4096c0:	cbz	w0, 4096d0 <ferror@plt+0x77e0>
  4096c4:	ldr	x0, [sp, #56]
  4096c8:	ldrb	w0, [x0]
  4096cc:	cbz	w0, 4096f0 <ferror@plt+0x7800>
  4096d0:	ldr	x4, [x20]
  4096d4:	mov	w1, #0x0                   	// #0
  4096d8:	mov	x3, x19
  4096dc:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4096e0:	mov	w0, #0x1                   	// #1
  4096e4:	add	x2, x2, #0xa20
  4096e8:	bl	401b30 <error@plt>
  4096ec:	ldr	x1, [x20, #16]
  4096f0:	mov	w0, #0x1                   	// #1
  4096f4:	ldr	w2, [x1]
  4096f8:	ldp	x19, x20, [sp, #16]
  4096fc:	orr	w2, w2, w0
  409700:	ldr	x21, [sp, #32]
  409704:	str	w2, [x1]
  409708:	ldp	x29, x30, [sp], #64
  40970c:	ret
  409710:	mov	x0, #0x8                   	// #8
  409714:	bl	401be0 <malloc@plt>
  409718:	str	x0, [x20, #16]
  40971c:	cbz	x0, 40974c <ferror@plt+0x785c>
  409720:	str	wzr, [x0]
  409724:	orr	w21, w21, #0x1
  409728:	str	w21, [x20, #8]
  40972c:	b	4096a4 <ferror@plt+0x77b4>
  409730:	mov	x3, x19
  409734:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409738:	mov	w1, #0x0                   	// #0
  40973c:	add	x2, x2, #0x990
  409740:	mov	w0, #0x1                   	// #1
  409744:	bl	401b30 <error@plt>
  409748:	b	409678 <ferror@plt+0x7788>
  40974c:	bl	401ea0 <__errno_location@plt>
  409750:	mov	x1, x0
  409754:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409758:	mov	w0, #0x1                   	// #1
  40975c:	add	x2, x2, #0x9b8
  409760:	ldr	w1, [x1]
  409764:	bl	401b30 <error@plt>
  409768:	ldr	w21, [x20, #8]
  40976c:	ldr	x0, [x20, #16]
  409770:	b	409720 <ferror@plt+0x7830>
  409774:	nop
  409778:	stp	x29, x30, [sp, #-128]!
  40977c:	mov	x29, sp
  409780:	stp	x23, x24, [sp, #48]
  409784:	mov	x23, x0
  409788:	ldr	x0, [x2]
  40978c:	stp	x19, x20, [sp, #16]
  409790:	mov	w20, w1
  409794:	stp	x21, x22, [sp, #32]
  409798:	mov	x21, x2
  40979c:	stp	x25, x26, [sp, #64]
  4097a0:	stp	x27, x28, [sp, #80]
  4097a4:	bl	4030e0 <ferror@plt+0x11f0>
  4097a8:	cmp	w20, #0x1
  4097ac:	str	x0, [x23]
  4097b0:	b.le	409898 <ferror@plt+0x79a8>
  4097b4:	ldr	x22, [x21, #8]
  4097b8:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  4097bc:	add	x1, x1, #0xec8
  4097c0:	mov	x0, x22
  4097c4:	bl	401cf0 <strcmp@plt>
  4097c8:	cbz	w0, 4098d8 <ferror@plt+0x79e8>
  4097cc:	mov	x0, x22
  4097d0:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  4097d4:	mov	w19, #0x1                   	// #1
  4097d8:	add	x1, x1, #0xd50
  4097dc:	bl	401cf0 <strcmp@plt>
  4097e0:	cbz	w0, 409abc <ferror@plt+0x7bcc>
  4097e4:	adrp	x26, 412000 <argp_error@@Base+0x2650>
  4097e8:	adrp	x27, 412000 <argp_error@@Base+0x2650>
  4097ec:	adrp	x28, 413000 <argp_error@@Base+0x3650>
  4097f0:	add	x26, x26, #0x138
  4097f4:	add	x0, x28, #0xd80
  4097f8:	add	x27, x27, #0xe8
  4097fc:	str	x0, [sp, #104]
  409800:	b	409824 <ferror@plt+0x7934>
  409804:	cmp	w24, w20
  409808:	b.ge	4099f8 <ferror@plt+0x7b08>  // b.tcont
  40980c:	ldr	x0, [x23]
  409810:	add	w19, w19, #0x2
  409814:	ldr	x1, [x22, #8]
  409818:	bl	403380 <ferror@plt+0x1490>
  40981c:	cmp	w19, w20
  409820:	b.ge	409898 <ferror@plt+0x79a8>  // b.tcont
  409824:	sxtw	x25, w19
  409828:	mov	x1, x26
  40982c:	add	x22, x21, w19, sxtw #3
  409830:	add	w24, w19, #0x1
  409834:	ldr	x28, [x21, x25, lsl #3]
  409838:	mov	x0, x28
  40983c:	bl	401cf0 <strcmp@plt>
  409840:	cbz	w0, 409804 <ferror@plt+0x7914>
  409844:	mov	x1, x27
  409848:	mov	x0, x28
  40984c:	bl	401cf0 <strcmp@plt>
  409850:	cbz	w0, 4098bc <ferror@plt+0x79cc>
  409854:	ldr	x1, [sp, #104]
  409858:	mov	x0, x28
  40985c:	bl	401cf0 <strcmp@plt>
  409860:	cbz	w0, 4098bc <ferror@plt+0x79cc>
  409864:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  409868:	mov	x0, x28
  40986c:	add	x1, x1, #0xdd8
  409870:	bl	401cf0 <strcmp@plt>
  409874:	cbnz	w0, 4098e8 <ferror@plt+0x79f8>
  409878:	cmp	w24, w20
  40987c:	b.ge	409a30 <ferror@plt+0x7b40>  // b.tcont
  409880:	ldr	x0, [x23]
  409884:	add	w19, w19, #0x2
  409888:	ldr	x1, [x22, #8]
  40988c:	bl	403250 <ferror@plt+0x1360>
  409890:	cmp	w19, w20
  409894:	b.lt	409824 <ferror@plt+0x7934>  // b.tstop
  409898:	mov	w4, #0x1                   	// #1
  40989c:	mov	w0, w4
  4098a0:	ldp	x19, x20, [sp, #16]
  4098a4:	ldp	x21, x22, [sp, #32]
  4098a8:	ldp	x23, x24, [sp, #48]
  4098ac:	ldp	x25, x26, [sp, #64]
  4098b0:	ldp	x27, x28, [sp, #80]
  4098b4:	ldp	x29, x30, [sp], #128
  4098b8:	ret
  4098bc:	cmp	w24, w20
  4098c0:	b.ge	4099b8 <ferror@plt+0x7ac8>  // b.tcont
  4098c4:	ldr	x0, [x23]
  4098c8:	add	w19, w19, #0x2
  4098cc:	ldr	x1, [x22, #8]
  4098d0:	bl	403790 <ferror@plt+0x18a0>
  4098d4:	b	40981c <ferror@plt+0x792c>
  4098d8:	cmp	w20, #0x2
  4098dc:	mov	w19, #0x2                   	// #2
  4098e0:	b.ne	4097e4 <ferror@plt+0x78f4>  // b.any
  4098e4:	b	409898 <ferror@plt+0x79a8>
  4098e8:	adrp	x1, 412000 <argp_error@@Base+0x2650>
  4098ec:	mov	x0, x28
  4098f0:	add	x1, x1, #0x1b0
  4098f4:	bl	401cf0 <strcmp@plt>
  4098f8:	cbz	w0, 40992c <ferror@plt+0x7a3c>
  4098fc:	adrp	x1, 412000 <argp_error@@Base+0x2650>
  409900:	mov	x0, x28
  409904:	add	x1, x1, #0x188
  409908:	bl	401cf0 <strcmp@plt>
  40990c:	cbnz	w0, 409a68 <ferror@plt+0x7b78>
  409910:	cmp	w24, w20
  409914:	b.ge	409948 <ferror@plt+0x7a58>  // b.tcont
  409918:	ldr	x0, [x23]
  40991c:	add	w19, w19, #0x2
  409920:	ldr	x1, [x22, #8]
  409924:	bl	403418 <ferror@plt+0x1528>
  409928:	b	40981c <ferror@plt+0x792c>
  40992c:	cmp	w24, w20
  409930:	b.ge	409980 <ferror@plt+0x7a90>  // b.tcont
  409934:	ldr	x0, [x23]
  409938:	add	w19, w19, #0x2
  40993c:	ldr	x1, [x22, #8]
  409940:	bl	4034e0 <ferror@plt+0x15f0>
  409944:	b	40981c <ferror@plt+0x792c>
  409948:	mov	w1, #0x0                   	// #0
  40994c:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409950:	add	x2, x2, #0xe50
  409954:	str	w0, [sp, #104]
  409958:	bl	401b30 <error@plt>
  40995c:	ldr	w4, [sp, #104]
  409960:	ldp	x19, x20, [sp, #16]
  409964:	mov	w0, w4
  409968:	ldp	x21, x22, [sp, #32]
  40996c:	ldp	x23, x24, [sp, #48]
  409970:	ldp	x25, x26, [sp, #64]
  409974:	ldp	x27, x28, [sp, #80]
  409978:	ldp	x29, x30, [sp], #128
  40997c:	ret
  409980:	mov	w1, #0x0                   	// #0
  409984:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409988:	add	x2, x2, #0xe28
  40998c:	str	w0, [sp, #104]
  409990:	bl	401b30 <error@plt>
  409994:	ldr	w4, [sp, #104]
  409998:	ldp	x19, x20, [sp, #16]
  40999c:	mov	w0, w4
  4099a0:	ldp	x21, x22, [sp, #32]
  4099a4:	ldp	x23, x24, [sp, #48]
  4099a8:	ldp	x25, x26, [sp, #64]
  4099ac:	ldp	x27, x28, [sp, #80]
  4099b0:	ldp	x29, x30, [sp], #128
  4099b4:	ret
  4099b8:	mov	w4, #0x0                   	// #0
  4099bc:	mov	w1, #0x0                   	// #0
  4099c0:	mov	w0, #0x0                   	// #0
  4099c4:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  4099c8:	add	x2, x2, #0xdc8
  4099cc:	str	w4, [sp, #104]
  4099d0:	bl	401b30 <error@plt>
  4099d4:	ldr	w4, [sp, #104]
  4099d8:	ldp	x19, x20, [sp, #16]
  4099dc:	mov	w0, w4
  4099e0:	ldp	x21, x22, [sp, #32]
  4099e4:	ldp	x23, x24, [sp, #48]
  4099e8:	ldp	x25, x26, [sp, #64]
  4099ec:	ldp	x27, x28, [sp, #80]
  4099f0:	ldp	x29, x30, [sp], #128
  4099f4:	ret
  4099f8:	mov	w1, #0x0                   	// #0
  4099fc:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409a00:	add	x2, x2, #0xda0
  409a04:	str	w0, [sp, #104]
  409a08:	bl	401b30 <error@plt>
  409a0c:	ldr	w4, [sp, #104]
  409a10:	ldp	x19, x20, [sp, #16]
  409a14:	mov	w0, w4
  409a18:	ldp	x21, x22, [sp, #32]
  409a1c:	ldp	x23, x24, [sp, #48]
  409a20:	ldp	x25, x26, [sp, #64]
  409a24:	ldp	x27, x28, [sp, #80]
  409a28:	ldp	x29, x30, [sp], #128
  409a2c:	ret
  409a30:	mov	w1, #0x0                   	// #0
  409a34:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409a38:	add	x2, x2, #0xe00
  409a3c:	str	w0, [sp, #104]
  409a40:	bl	401b30 <error@plt>
  409a44:	ldr	w4, [sp, #104]
  409a48:	ldp	x19, x20, [sp, #16]
  409a4c:	mov	w0, w4
  409a50:	ldp	x21, x22, [sp, #32]
  409a54:	ldp	x23, x24, [sp, #48]
  409a58:	ldp	x25, x26, [sp, #64]
  409a5c:	ldp	x27, x28, [sp, #80]
  409a60:	ldp	x29, x30, [sp], #128
  409a64:	ret
  409a68:	adrp	x1, 413000 <argp_error@@Base+0x3650>
  409a6c:	mov	x0, x28
  409a70:	add	x1, x1, #0xd90
  409a74:	bl	401cf0 <strcmp@plt>
  409a78:	cbz	w0, 409adc <ferror@plt+0x7bec>
  409a7c:	ldrb	w0, [x28]
  409a80:	cmp	w0, #0x75
  409a84:	b.ne	409b30 <ferror@plt+0x7c40>  // b.any
  409a88:	ldrb	w0, [x28, #1]
  409a8c:	cmp	w0, #0x70
  409a90:	b.ne	409b30 <ferror@plt+0x7c40>  // b.any
  409a94:	ldrb	w0, [x28, #2]
  409a98:	cbnz	w0, 409b30 <ferror@plt+0x7c40>
  409a9c:	ldr	x0, [x23]
  409aa0:	mov	w2, #0x0                   	// #0
  409aa4:	mov	w1, #0x41                  	// #65
  409aa8:	bl	403648 <ferror@plt+0x1758>
  409aac:	cmp	w24, w20
  409ab0:	b.ge	409898 <ferror@plt+0x79a8>  // b.tcont
  409ab4:	mov	w19, w24
  409ab8:	b	409824 <ferror@plt+0x7934>
  409abc:	mov	x3, x22
  409ac0:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409ac4:	mov	w1, #0x0                   	// #0
  409ac8:	add	x2, x2, #0xd58
  409acc:	str	w0, [sp, #104]
  409ad0:	bl	401b30 <error@plt>
  409ad4:	ldr	w4, [sp, #104]
  409ad8:	b	40989c <ferror@plt+0x79ac>
  409adc:	cmp	w24, w20
  409ae0:	b.ge	409af8 <ferror@plt+0x7c08>  // b.tcont
  409ae4:	ldr	x0, [x23]
  409ae8:	add	w19, w19, #0x2
  409aec:	ldr	x1, [x22, #8]
  409af0:	bl	409530 <ferror@plt+0x7640>
  409af4:	b	40981c <ferror@plt+0x792c>
  409af8:	mov	w1, #0x0                   	// #0
  409afc:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409b00:	add	x2, x2, #0xe78
  409b04:	str	w0, [sp, #104]
  409b08:	bl	401b30 <error@plt>
  409b0c:	ldr	w4, [sp, #104]
  409b10:	ldp	x19, x20, [sp, #16]
  409b14:	mov	w0, w4
  409b18:	ldp	x21, x22, [sp, #32]
  409b1c:	ldp	x23, x24, [sp, #48]
  409b20:	ldp	x25, x26, [sp, #64]
  409b24:	ldp	x27, x28, [sp, #80]
  409b28:	ldp	x29, x30, [sp], #128
  409b2c:	ret
  409b30:	adrp	x1, 412000 <argp_error@@Base+0x2650>
  409b34:	mov	x0, x28
  409b38:	add	x1, x1, #0x258
  409b3c:	bl	401cf0 <strcmp@plt>
  409b40:	cbnz	w0, 409b64 <ferror@plt+0x7c74>
  409b44:	ldr	x0, [x23]
  409b48:	mov	w2, #0x1                   	// #1
  409b4c:	mov	w1, w2
  409b50:	bl	403648 <ferror@plt+0x1758>
  409b54:	cmp	w24, w20
  409b58:	b.ge	409898 <ferror@plt+0x79a8>  // b.tcont
  409b5c:	mov	w19, w24
  409b60:	b	409824 <ferror@plt+0x7934>
  409b64:	add	x1, sp, #0x7c
  409b68:	mov	x0, x28
  409b6c:	bl	402590 <ferror@plt+0x6a0>
  409b70:	mov	w1, w0
  409b74:	mov	w0, #0xffffffb7            	// #-73
  409b78:	tst	w1, w0
  409b7c:	b.eq	409b9c <ferror@plt+0x7cac>  // b.none
  409b80:	ldr	w2, [sp, #124]
  409b84:	ldr	x0, [x23]
  409b88:	bl	403648 <ferror@plt+0x1758>
  409b8c:	cmp	w24, w20
  409b90:	b.ge	409898 <ferror@plt+0x79a8>  // b.tcont
  409b94:	mov	w19, w24
  409b98:	b	409824 <ferror@plt+0x7934>
  409b9c:	ldr	x1, [x21, x25, lsl #3]
  409ba0:	ldr	x0, [x23]
  409ba4:	bl	4031b8 <ferror@plt+0x12c8>
  409ba8:	cmp	w24, w20
  409bac:	b.ge	409898 <ferror@plt+0x79a8>  // b.tcont
  409bb0:	mov	w19, w24
  409bb4:	b	409824 <ferror@plt+0x7934>
  409bb8:	stp	x29, x30, [sp, #-32]!
  409bbc:	mov	x29, sp
  409bc0:	str	x19, [sp, #16]
  409bc4:	mov	x19, x1
  409bc8:	ldr	w1, [x2]
  409bcc:	tbnz	w1, #0, 409be0 <ferror@plt+0x7cf0>
  409bd0:	mov	w0, #0x0                   	// #0
  409bd4:	ldr	x19, [sp, #16]
  409bd8:	ldp	x29, x30, [sp], #32
  409bdc:	ret
  409be0:	ldr	w1, [x2, #4]
  409be4:	mov	x2, x19
  409be8:	str	w1, [x19, #16]
  409bec:	mov	w1, #0x8943                	// #35139
  409bf0:	bl	40c0b8 <argp_parse@@Base+0x1f28>
  409bf4:	tbnz	w0, #31, 409c28 <ferror@plt+0x7d38>
  409bf8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  409bfc:	ldr	w0, [x0, #1576]
  409c00:	cbz	w0, 409bd0 <ferror@plt+0x7ce0>
  409c04:	ldr	w2, [x19, #16]
  409c08:	mov	x1, x19
  409c0c:	adrp	x0, 413000 <argp_error@@Base+0x3650>
  409c10:	add	x0, x0, #0xec0
  409c14:	bl	401e80 <printf@plt>
  409c18:	mov	w0, #0x0                   	// #0
  409c1c:	ldr	x19, [sp, #16]
  409c20:	ldp	x29, x30, [sp], #32
  409c24:	ret
  409c28:	bl	401ea0 <__errno_location@plt>
  409c2c:	mov	x1, x0
  409c30:	adrp	x2, 413000 <argp_error@@Base+0x3650>
  409c34:	mov	w0, #0x0                   	// #0
  409c38:	add	x2, x2, #0xea8
  409c3c:	ldr	w1, [x1]
  409c40:	bl	401b30 <error@plt>
  409c44:	b	409bf8 <ferror@plt+0x7d08>
  409c48:	stp	x29, x30, [sp, #-32]!
  409c4c:	mov	x29, sp
  409c50:	ldr	x2, [x0]
  409c54:	stp	x19, x20, [sp, #16]
  409c58:	mov	x19, x1
  409c5c:	ldr	x20, [x0, #32]
  409c60:	cbz	x2, 409cfc <ferror@plt+0x7e0c>
  409c64:	ldr	x1, [x1, #16]
  409c68:	mov	w0, #0x0                   	// #0
  409c6c:	add	x1, x1, #0x1
  409c70:	str	x1, [x19, #16]
  409c74:	nop
  409c78:	ldr	w3, [x2, #8]
  409c7c:	add	x2, x2, #0x30
  409c80:	cbnz	w3, 409c8c <ferror@plt+0x7d9c>
  409c84:	ldur	x3, [x2, #-48]
  409c88:	cbz	x3, 409c94 <ferror@plt+0x7da4>
  409c8c:	add	w0, w0, #0x1
  409c90:	b	409c78 <ferror@plt+0x7d88>
  409c94:	ldur	x1, [x2, #-16]
  409c98:	cbnz	x1, 409c8c <ferror@plt+0x7d9c>
  409c9c:	ldur	w1, [x2, #-8]
  409ca0:	cbnz	w1, 409c8c <ferror@plt+0x7d9c>
  409ca4:	add	w2, w0, w0, lsl #1
  409ca8:	sxtw	x0, w0
  409cac:	ldr	q1, [x19]
  409cb0:	sxtw	x2, w2
  409cb4:	fmov	d0, x2
  409cb8:	mov	v0.d[1], x3
  409cbc:	mov	v0.d[1], x0
  409cc0:	add	v0.2d, v0.2d, v1.2d
  409cc4:	str	q0, [x19]
  409cc8:	cbz	x20, 409cf0 <ferror@plt+0x7e00>
  409ccc:	ldr	x0, [x20]
  409cd0:	cbz	x0, 409cf0 <ferror@plt+0x7e00>
  409cd4:	mov	x1, x19
  409cd8:	bl	409c48 <ferror@plt+0x7d58>
  409cdc:	ldr	x1, [x19, #24]
  409ce0:	ldr	x0, [x20, #32]!
  409ce4:	add	x1, x1, #0x1
  409ce8:	str	x1, [x19, #24]
  409cec:	cbnz	x0, 409cd4 <ferror@plt+0x7de4>
  409cf0:	ldp	x19, x20, [sp, #16]
  409cf4:	ldp	x29, x30, [sp], #32
  409cf8:	ret
  409cfc:	ldr	x0, [x0, #8]
  409d00:	cbz	x0, 409cc8 <ferror@plt+0x7dd8>
  409d04:	ldr	x0, [x1, #16]
  409d08:	add	x0, x0, #0x1
  409d0c:	str	x0, [x1, #16]
  409d10:	b	409cc8 <ferror@plt+0x7dd8>
  409d14:	nop
  409d18:	cmp	w0, #0x56
  409d1c:	b.eq	409d28 <ferror@plt+0x7e38>  // b.none
  409d20:	mov	w0, #0x7                   	// #7
  409d24:	ret
  409d28:	stp	x29, x30, [sp, #-32]!
  409d2c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  409d30:	mov	x29, sp
  409d34:	str	x19, [sp, #16]
  409d38:	mov	x19, x2
  409d3c:	ldr	x2, [x0, #1448]
  409d40:	cbz	x2, 409d6c <ferror@plt+0x7e7c>
  409d44:	ldr	x0, [x19, #80]
  409d48:	mov	x1, x19
  409d4c:	blr	x2
  409d50:	ldr	w1, [x19, #28]
  409d54:	mov	w0, #0x0                   	// #0
  409d58:	tbz	w1, #5, 409d68 <ferror@plt+0x7e78>
  409d5c:	ldr	x19, [sp, #16]
  409d60:	ldp	x29, x30, [sp], #32
  409d64:	ret
  409d68:	bl	401b20 <exit@plt>
  409d6c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  409d70:	ldr	x2, [x0, #1632]
  409d74:	cbz	x2, 409d8c <ferror@plt+0x7e9c>
  409d78:	ldr	x0, [x19, #80]
  409d7c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  409d80:	add	x1, x1, #0x790
  409d84:	bl	401ed0 <fprintf@plt>
  409d88:	b	409d50 <ferror@plt+0x7e60>
  409d8c:	mov	x0, x19
  409d90:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  409d94:	adrp	x1, 411000 <argp_error@@Base+0x1650>
  409d98:	add	x2, x2, #0x3f8
  409d9c:	add	x1, x1, #0xf68
  409da0:	bl	40f9b0 <argp_error@@Base>
  409da4:	b	409d50 <ferror@plt+0x7e60>
  409da8:	stp	x29, x30, [sp, #-32]!
  409dac:	cmn	w0, #0x2
  409db0:	mov	x29, sp
  409db4:	stp	x19, x20, [sp, #16]
  409db8:	mov	x20, x1
  409dbc:	mov	x19, x2
  409dc0:	b.eq	409e28 <ferror@plt+0x7f38>  // b.none
  409dc4:	cmn	w0, #0x1
  409dc8:	b.ge	409dfc <ferror@plt+0x7f0c>  // b.tcont
  409dcc:	cmn	w0, #0x4
  409dd0:	b.eq	409e64 <ferror@plt+0x7f74>  // b.none
  409dd4:	cmn	w0, #0x3
  409dd8:	b.ne	409ed4 <ferror@plt+0x7fe4>  // b.any
  409ddc:	ldr	x1, [x19, #80]
  409de0:	mov	x0, x2
  409de4:	mov	w2, #0x201                 	// #513
  409de8:	bl	40f910 <argp_state_help@@Base>
  409dec:	mov	w0, #0x0                   	// #0
  409df0:	ldp	x19, x20, [sp, #16]
  409df4:	ldp	x29, x30, [sp], #32
  409df8:	ret
  409dfc:	cmp	w0, #0x3f
  409e00:	mov	w0, #0x7                   	// #7
  409e04:	b.ne	409df0 <ferror@plt+0x7f00>  // b.any
  409e08:	ldr	x1, [x19, #80]
  409e0c:	mov	x0, x2
  409e10:	mov	w2, #0x27a                 	// #634
  409e14:	bl	40f910 <argp_state_help@@Base>
  409e18:	mov	w0, #0x0                   	// #0
  409e1c:	ldp	x19, x20, [sp, #16]
  409e20:	ldp	x29, x30, [sp], #32
  409e24:	ret
  409e28:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  409e2c:	mov	x0, x20
  409e30:	str	x20, [x1, #1240]
  409e34:	bl	40aea0 <argp_parse@@Base+0xd10>
  409e38:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  409e3c:	ldr	w1, [x19, #28]
  409e40:	str	x0, [x19, #64]
  409e44:	str	x0, [x2, #1264]
  409e48:	and	w1, w1, #0x3
  409e4c:	cmp	w1, #0x1
  409e50:	b.eq	409ec4 <ferror@plt+0x7fd4>  // b.none
  409e54:	mov	w0, #0x0                   	// #0
  409e58:	ldp	x19, x20, [sp, #16]
  409e5c:	ldp	x29, x30, [sp], #32
  409e60:	ret
  409e64:	cmp	x1, #0x0
  409e68:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  409e6c:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  409e70:	add	x0, x0, #0x420
  409e74:	csel	x0, x0, x1, eq  // eq = none
  409e78:	mov	w2, #0xa                   	// #10
  409e7c:	mov	x1, #0x0                   	// #0
  409e80:	bl	401d10 <strtol@plt>
  409e84:	str	w0, [x19, #1440]
  409e88:	ldr	w0, [x19, #1440]
  409e8c:	sub	w1, w0, #0x1
  409e90:	str	w1, [x19, #1440]
  409e94:	cmp	w0, #0x0
  409e98:	b.le	409e54 <ferror@plt+0x7f64>
  409e9c:	add	x19, x19, #0x5a0
  409ea0:	mov	w0, #0x1                   	// #1
  409ea4:	bl	401c30 <sleep@plt>
  409ea8:	ldr	w0, [x19]
  409eac:	sub	w1, w0, #0x1
  409eb0:	str	w1, [x19]
  409eb4:	cmp	w0, #0x0
  409eb8:	b.gt	409ea0 <ferror@plt+0x7fb0>
  409ebc:	mov	w0, #0x0                   	// #0
  409ec0:	b	409e58 <ferror@plt+0x7f68>
  409ec4:	ldr	x1, [x19, #16]
  409ec8:	mov	w0, #0x0                   	// #0
  409ecc:	str	x20, [x1]
  409ed0:	b	409df0 <ferror@plt+0x7f00>
  409ed4:	mov	w0, #0x7                   	// #7
  409ed8:	b	409df0 <ferror@plt+0x7f00>
  409edc:	nop
  409ee0:	stp	x29, x30, [sp, #-128]!
  409ee4:	mov	x29, sp
  409ee8:	stp	x19, x20, [sp, #16]
  409eec:	mov	x19, x4
  409ef0:	ldr	x20, [x0]
  409ef4:	stp	x0, x1, [sp, #104]
  409ef8:	ldr	x0, [x0, #32]
  409efc:	stp	x23, x24, [sp, #48]
  409f00:	mov	x24, x3
  409f04:	str	x0, [sp, #96]
  409f08:	str	w2, [sp, #124]
  409f0c:	cbz	x20, 40a168 <ferror@plt+0x8278>
  409f10:	ldr	x23, [x4, #8]
  409f14:	stp	x27, x28, [sp, #80]
  409f18:	mov	x28, x20
  409f1c:	stp	x21, x22, [sp, #32]
  409f20:	stp	x25, x26, [sp, #64]
  409f24:	nop
  409f28:	ldr	w22, [x28, #8]
  409f2c:	cbnz	w22, 409f38 <ferror@plt+0x8048>
  409f30:	ldr	x0, [x28]
  409f34:	cbz	x0, 40a080 <ferror@plt+0x8190>
  409f38:	ldr	w1, [x28, #24]
  409f3c:	tbz	w1, #2, 40a060 <ferror@plt+0x8170>
  409f40:	ldr	w0, [x20, #24]
  409f44:	and	w21, w0, #0x8
  409f48:	tbnz	w0, #3, 40a058 <ferror@plt+0x8168>
  409f4c:	tbnz	w1, #3, 409fbc <ferror@plt+0x80cc>
  409f50:	sub	w0, w22, #0x1
  409f54:	cmp	w0, #0xfe
  409f58:	b.hi	409fbc <ferror@plt+0x80cc>  // b.pmore
  409f5c:	bl	401d00 <__ctype_b_loc@plt>
  409f60:	ldr	x0, [x0]
  409f64:	ldrh	w0, [x0, w22, sxtw #1]
  409f68:	tbz	w0, #14, 409fbc <ferror@plt+0x80cc>
  409f6c:	add	x0, x23, #0x1
  409f70:	str	x0, [x19, #8]
  409f74:	strb	w22, [x23]
  409f78:	ldr	x0, [x20, #16]
  409f7c:	cbz	x0, 409fb0 <ferror@plt+0x80c0>
  409f80:	ldr	x0, [x19, #8]
  409f84:	add	x1, x0, #0x1
  409f88:	str	x1, [x19, #8]
  409f8c:	mov	w1, #0x3a                  	// #58
  409f90:	strb	w1, [x0]
  409f94:	ldr	w0, [x20, #24]
  409f98:	tbz	w0, #0, 409fb0 <ferror@plt+0x80c0>
  409f9c:	ldr	x0, [x19, #8]
  409fa0:	add	x1, x0, #0x1
  409fa4:	str	x1, [x19, #8]
  409fa8:	mov	w1, #0x3a                  	// #58
  409fac:	strb	w1, [x0]
  409fb0:	ldr	x0, [x19, #8]
  409fb4:	strb	wzr, [x0]
  409fb8:	ldr	x23, [x19, #8]
  409fbc:	ldr	x27, [x28]
  409fc0:	cbz	x27, 40a058 <ferror@plt+0x8168>
  409fc4:	ldr	x25, [x19]
  409fc8:	ldr	x22, [x25, #16]
  409fcc:	ldr	x0, [x22]
  409fd0:	cbz	x0, 409fec <ferror@plt+0x80fc>
  409fd4:	mov	x26, x22
  409fd8:	mov	x1, x27
  409fdc:	bl	401cf0 <strcmp@plt>
  409fe0:	cbz	w0, 40a06c <ferror@plt+0x817c>
  409fe4:	ldr	x0, [x26, #32]!
  409fe8:	cbnz	x0, 409fd8 <ferror@plt+0x80e8>
  409fec:	ldr	x3, [x19, #16]
  409ff0:	ldr	x0, [x20, #16]
  409ff4:	str	x27, [x3]
  409ff8:	cbz	x0, 40a008 <ferror@plt+0x8118>
  409ffc:	ldr	w21, [x20, #24]
  40a000:	and	w21, w21, #0x1
  40a004:	add	w21, w21, #0x1
  40a008:	str	w21, [x3, #8]
  40a00c:	str	xzr, [x3, #16]
  40a010:	ldr	w0, [x28, #8]
  40a014:	cbnz	w0, 40a01c <ferror@plt+0x812c>
  40a018:	ldr	w0, [x20, #8]
  40a01c:	and	w1, w0, #0xffffff
  40a020:	mov	x2, #0x8e39                	// #36409
  40a024:	ldr	x0, [x25, #80]
  40a028:	movk	x2, #0x38e3, lsl #16
  40a02c:	movk	x2, #0xe38e, lsl #32
  40a030:	add	x4, x3, #0x20
  40a034:	sub	x0, x24, x0
  40a038:	movk	x2, #0x8e38, lsl #48
  40a03c:	asr	x0, x0, #3
  40a040:	mul	x0, x0, x2
  40a044:	add	w0, w0, #0x1
  40a048:	add	w0, w1, w0, lsl #24
  40a04c:	str	w0, [x3, #24]
  40a050:	str	x4, [x19, #16]
  40a054:	str	xzr, [x3, #32]
  40a058:	add	x28, x28, #0x30
  40a05c:	b	409f28 <ferror@plt+0x8038>
  40a060:	mov	w0, w1
  40a064:	mov	x20, x28
  40a068:	b	409f44 <ferror@plt+0x8054>
  40a06c:	sub	x22, x26, x22
  40a070:	asr	x22, x22, #5
  40a074:	tbnz	w22, #31, 409fec <ferror@plt+0x80fc>
  40a078:	add	x28, x28, #0x30
  40a07c:	b	409f28 <ferror@plt+0x8038>
  40a080:	ldr	x0, [x28, #32]
  40a084:	cbnz	x0, 409f38 <ferror@plt+0x8048>
  40a088:	ldr	w0, [x28, #40]
  40a08c:	cbnz	w0, 409f38 <ferror@plt+0x8048>
  40a090:	ldr	x0, [sp, #104]
  40a094:	ldp	x21, x22, [sp, #32]
  40a098:	ldp	x25, x26, [sp, #64]
  40a09c:	ldp	x27, x28, [sp, #80]
  40a0a0:	ldr	x0, [x0, #8]
  40a0a4:	str	x0, [x24]
  40a0a8:	ldr	x0, [sp, #104]
  40a0ac:	str	x0, [x24, #8]
  40a0b0:	ldr	x0, [sp, #112]
  40a0b4:	str	x0, [x24, #32]
  40a0b8:	ldr	w0, [sp, #124]
  40a0bc:	str	w0, [x24, #40]
  40a0c0:	ldr	x0, [sp, #96]
  40a0c4:	str	x23, [x24, #16]
  40a0c8:	str	wzr, [x24, #24]
  40a0cc:	stp	xzr, xzr, [x24, #48]
  40a0d0:	str	xzr, [x24, #64]
  40a0d4:	cbz	x0, 40a114 <ferror@plt+0x8224>
  40a0d8:	ldr	x0, [x0]
  40a0dc:	cbz	x0, 40a184 <ferror@plt+0x8294>
  40a0e0:	mov	w0, #0x0                   	// #0
  40a0e4:	nop
  40a0e8:	add	w2, w0, #0x1
  40a0ec:	ldr	x3, [sp, #96]
  40a0f0:	ubfiz	x1, x2, #5, #32
  40a0f4:	mov	x0, x2
  40a0f8:	ldr	x1, [x3, x1]
  40a0fc:	cbnz	x1, 40a0e8 <ferror@plt+0x81f8>
  40a100:	lsl	x2, x2, #3
  40a104:	ldr	x0, [x19, #24]
  40a108:	str	x0, [x24, #56]
  40a10c:	add	x2, x0, x2
  40a110:	str	x2, [x19, #24]
  40a114:	add	x3, x24, #0x48
  40a118:	ldr	x0, [sp, #96]
  40a11c:	cbz	x0, 40a154 <ferror@plt+0x8264>
  40a120:	ldr	x0, [x0]
  40a124:	cbz	x0, 40a154 <ferror@plt+0x8264>
  40a128:	mov	w20, #0x0                   	// #0
  40a12c:	mov	w2, w20
  40a130:	mov	x1, x24
  40a134:	mov	x4, x19
  40a138:	bl	409ee0 <ferror@plt+0x7ff0>
  40a13c:	ldr	x1, [sp, #96]
  40a140:	mov	x3, x0
  40a144:	add	w20, w20, #0x1
  40a148:	ldr	x0, [x1, #32]!
  40a14c:	str	x1, [sp, #96]
  40a150:	cbnz	x0, 40a12c <ferror@plt+0x823c>
  40a154:	mov	x0, x3
  40a158:	ldp	x19, x20, [sp, #16]
  40a15c:	ldp	x23, x24, [sp, #48]
  40a160:	ldp	x29, x30, [sp], #128
  40a164:	ret
  40a168:	ldr	x0, [sp, #104]
  40a16c:	ldr	x0, [x0, #8]
  40a170:	cbz	x0, 40a17c <ferror@plt+0x828c>
  40a174:	ldr	x23, [x4, #8]
  40a178:	b	40a0a4 <ferror@plt+0x81b4>
  40a17c:	mov	x24, #0x0                   	// #0
  40a180:	b	40a118 <ferror@plt+0x8228>
  40a184:	mov	x2, #0x0                   	// #0
  40a188:	b	40a104 <ferror@plt+0x8214>
  40a18c:	nop

000000000040a190 <argp_parse@@Base>:
  40a190:	stp	x29, x30, [sp, #-464]!
  40a194:	mov	x29, sp
  40a198:	stp	x19, x20, [sp, #16]
  40a19c:	mov	w20, w1
  40a1a0:	stp	x21, x22, [sp, #32]
  40a1a4:	mov	x22, x2
  40a1a8:	stp	x23, x24, [sp, #48]
  40a1ac:	mov	x23, x0
  40a1b0:	mov	w24, w3
  40a1b4:	stp	x25, x26, [sp, #64]
  40a1b8:	mov	x26, x5
  40a1bc:	stp	x27, x28, [sp, #80]
  40a1c0:	str	x4, [x29, #104]
  40a1c4:	tbnz	w24, #0, 40a1e0 <argp_parse@@Base+0x50>
  40a1c8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40a1cc:	ldr	x1, [x0, #1240]
  40a1d0:	cbz	x1, 40aa98 <argp_parse@@Base+0x908>
  40a1d4:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  40a1d8:	ldr	x0, [x19, #1264]
  40a1dc:	cbz	x0, 40aaac <argp_parse@@Base+0x91c>
  40a1e0:	ands	w0, w24, #0x4
  40a1e4:	str	w0, [x29, #100]
  40a1e8:	cset	x0, eq  // eq = none
  40a1ec:	tbz	w24, #4, 40a220 <argp_parse@@Base+0x90>
  40a1f0:	stp	x0, xzr, [x29, #120]
  40a1f4:	stp	xzr, xzr, [x29, #136]
  40a1f8:	stp	xzr, xzr, [x29, #184]
  40a1fc:	stp	xzr, xzr, [x29, #200]
  40a200:	stp	xzr, xzr, [x29, #216]
  40a204:	str	xzr, [x29, #232]
  40a208:	cbnz	x23, 40a2b8 <argp_parse@@Base+0x128>
  40a20c:	mov	x28, #0x48                  	// #72
  40a210:	mov	x19, #0x68                  	// #104
  40a214:	mov	x21, x28
  40a218:	mov	x25, #0x0                   	// #0
  40a21c:	b	40a2e8 <argp_parse@@Base+0x158>
  40a220:	sub	sp, sp, #0x80
  40a224:	mov	x1, sp
  40a228:	sub	sp, sp, #0x40
  40a22c:	mov	x2, sp
  40a230:	mov	x3, x1
  40a234:	stp	xzr, xzr, [x1]
  40a238:	stp	xzr, xzr, [x2, #32]
  40a23c:	stp	xzr, xzr, [x2]
  40a240:	stp	xzr, xzr, [x1, #16]
  40a244:	stp	xzr, xzr, [x2, #16]
  40a248:	stp	xzr, xzr, [x1, #32]
  40a24c:	str	x1, [x2, #32]
  40a250:	stp	xzr, xzr, [x1, #48]
  40a254:	str	xzr, [x2, #48]
  40a258:	stp	xzr, xzr, [x1, #64]
  40a25c:	stp	xzr, xzr, [x1, #80]
  40a260:	stp	xzr, xzr, [x1, #96]
  40a264:	stp	xzr, xzr, [x1, #112]
  40a268:	cbz	x23, 40a274 <argp_parse@@Base+0xe4>
  40a26c:	add	x3, x1, #0x20
  40a270:	str	x23, [x1]
  40a274:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  40a278:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40a27c:	add	x1, x1, #0x530
  40a280:	str	x1, [x3]
  40a284:	ldr	x4, [x4, #1632]
  40a288:	cbz	x4, 40acb0 <argp_parse@@Base+0xb20>
  40a28c:	add	x4, x3, #0x40
  40a290:	add	x1, x1, #0x38
  40a294:	str	x1, [x3, #32]
  40a298:	mov	x23, x2
  40a29c:	str	xzr, [x4]
  40a2a0:	stp	x0, xzr, [x29, #120]
  40a2a4:	stp	xzr, xzr, [x29, #136]
  40a2a8:	stp	xzr, xzr, [x29, #184]
  40a2ac:	stp	xzr, xzr, [x29, #200]
  40a2b0:	stp	xzr, xzr, [x29, #216]
  40a2b4:	str	xzr, [x29, #232]
  40a2b8:	mov	x0, x23
  40a2bc:	add	x1, x29, #0x78
  40a2c0:	bl	409c48 <ferror@plt+0x7d58>
  40a2c4:	ldp	x3, x2, [x29, #136]
  40a2c8:	ldp	x0, x19, [x29, #120]
  40a2cc:	add	x3, x3, #0x1
  40a2d0:	lsl	x25, x2, #3
  40a2d4:	add	x3, x3, x3, lsl #3
  40a2d8:	add	x19, x19, #0x1
  40a2dc:	lsl	x21, x3, #3
  40a2e0:	add	x28, x25, x21
  40a2e4:	add	x19, x28, x19, lsl #5
  40a2e8:	add	x0, x19, x0
  40a2ec:	add	x0, x0, #0x1
  40a2f0:	bl	401be0 <malloc@plt>
  40a2f4:	str	x0, [x29, #448]
  40a2f8:	mov	x27, x0
  40a2fc:	cbz	x0, 40add4 <argp_parse@@Base+0xc44>
  40a300:	movi	v0.2s, #0x1
  40a304:	add	x1, x29, #0x200
  40a308:	ldp	x6, x7, [x29, #200]
  40a30c:	add	x3, x0, x21
  40a310:	ldp	x4, x5, [x29, #216]
  40a314:	str	d0, [x29, #184]
  40a318:	ldp	x8, x9, [x29, #184]
  40a31c:	stp	x8, x9, [x1, #-248]
  40a320:	add	x28, x0, x28
  40a324:	ldr	x12, [x29, #232]
  40a328:	add	x8, x29, #0x210
  40a32c:	mov	x2, x25
  40a330:	mov	x0, x3
  40a334:	add	x25, x27, x19
  40a338:	add	x21, x29, #0xf0
  40a33c:	mov	w1, #0x0                   	// #0
  40a340:	stp	x6, x7, [x8, #-248]
  40a344:	stp	x4, x5, [x8, #-232]
  40a348:	stp	x25, x28, [x29, #248]
  40a34c:	stp	x12, x27, [x29, #312]
  40a350:	str	x3, [x29, #336]
  40a354:	bl	401c20 <memset@plt>
  40a358:	stp	x21, x25, [x29, #152]
  40a35c:	stp	x28, x0, [x29, #168]
  40a360:	tbnz	w24, #3, 40a498 <argp_parse@@Base+0x308>
  40a364:	mov	x0, x25
  40a368:	ands	w1, w24, #0x4
  40a36c:	cbz	w1, 40a380 <argp_parse@@Base+0x1f0>
  40a370:	add	x0, x25, #0x1
  40a374:	mov	w1, #0x2b                  	// #43
  40a378:	strb	w1, [x25]
  40a37c:	str	x0, [x29, #160]
  40a380:	ldr	x1, [x29, #168]
  40a384:	strb	wzr, [x0]
  40a388:	str	xzr, [x1]
  40a38c:	str	x23, [x29, #240]
  40a390:	cbz	x23, 40a4bc <argp_parse@@Base+0x32c>
  40a394:	ldr	x3, [x29, #320]
  40a398:	add	x4, x29, #0x98
  40a39c:	mov	w2, #0x0                   	// #0
  40a3a0:	mov	x1, #0x0                   	// #0
  40a3a4:	mov	x0, x23
  40a3a8:	bl	409ee0 <ferror@plt+0x7ff0>
  40a3ac:	str	x21, [x29, #440]
  40a3b0:	add	x4, x29, #0x210
  40a3b4:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  40a3b8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  40a3bc:	str	x0, [x29, #328]
  40a3c0:	ldr	x5, [x29, #240]
  40a3c4:	stp	xzr, xzr, [x4, #-168]
  40a3c8:	mov	x1, x22
  40a3cc:	ldr	x4, [x2, #1248]
  40a3d0:	mov	w2, #0x1                   	// #1
  40a3d4:	ldr	x3, [x3, #1256]
  40a3d8:	stp	xzr, xzr, [x21, #136]
  40a3dc:	str	w2, [x29, #344]
  40a3e0:	stp	x4, x3, [x29, #424]
  40a3e4:	ldr	x2, [x29, #320]
  40a3e8:	stp	xzr, xzr, [x21, #152]
  40a3ec:	stp	xzr, xzr, [x21, #168]
  40a3f0:	cmp	x0, x2
  40a3f4:	str	x5, [x29, #352]
  40a3f8:	str	w20, [x29, #360]
  40a3fc:	str	x22, [x29, #368]
  40a400:	str	w24, [x29, #380]
  40a404:	b.ls	40a50c <argp_parse@@Base+0x37c>  // b.plast
  40a408:	mov	w23, #0x3                   	// #3
  40a40c:	add	x20, x2, #0x48
  40a410:	add	x24, x21, #0x70
  40a414:	movk	w23, #0x100, lsl #16
  40a418:	str	x26, [x2, #48]
  40a41c:	nop
  40a420:	ldur	x3, [x20, #-40]
  40a424:	mov	x2, x24
  40a428:	mov	w0, w23
  40a42c:	mov	x1, #0x0                   	// #0
  40a430:	cbz	x3, 40a444 <argp_parse@@Base+0x2b4>
  40a434:	ldur	w4, [x20, #-32]
  40a438:	ldr	x3, [x3, #56]
  40a43c:	ldr	x3, [x3, x4, lsl #3]
  40a440:	stur	x3, [x20, #-24]
  40a444:	ldur	x3, [x20, #-72]
  40a448:	cbz	x3, 40a6cc <argp_parse@@Base+0x53c>
  40a44c:	ldur	x4, [x20, #-8]
  40a450:	str	x4, [x29, #408]
  40a454:	ldur	w4, [x20, #-48]
  40a458:	ldur	q0, [x20, #-24]
  40a45c:	str	w4, [x29, #384]
  40a460:	add	x4, x29, #0x210
  40a464:	stur	q0, [x4, #-136]
  40a468:	blr	x3
  40a46c:	mov	w19, w0
  40a470:	ldr	x1, [x29, #408]
  40a474:	stur	x1, [x20, #-8]
  40a478:	ldr	x3, [x29, #328]
  40a47c:	cmp	x3, x20
  40a480:	b.ls	40a924 <argp_parse@@Base+0x794>  // b.plast
  40a484:	cmp	w0, #0x0
  40a488:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  40a48c:	b.ne	40a6a8 <argp_parse@@Base+0x518>  // b.any
  40a490:	add	x20, x20, #0x48
  40a494:	b	40a420 <argp_parse@@Base+0x290>
  40a498:	mov	w1, #0x2d                  	// #45
  40a49c:	add	x0, x25, #0x1
  40a4a0:	strb	w1, [x27, x19]
  40a4a4:	ldr	x1, [x29, #168]
  40a4a8:	str	x0, [x29, #160]
  40a4ac:	strb	wzr, [x0]
  40a4b0:	str	xzr, [x1]
  40a4b4:	str	x23, [x29, #240]
  40a4b8:	cbnz	x23, 40a394 <argp_parse@@Base+0x204>
  40a4bc:	add	x3, x29, #0x210
  40a4c0:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40a4c4:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  40a4c8:	mov	w4, #0x1                   	// #1
  40a4cc:	str	w4, [x29, #344]
  40a4d0:	stp	xzr, xzr, [x3, #-168]
  40a4d4:	ldr	x2, [x2, #1256]
  40a4d8:	stp	xzr, xzr, [x21, #136]
  40a4dc:	ldr	x3, [x1, #1248]
  40a4e0:	mov	x1, x22
  40a4e4:	stp	x3, x2, [x29, #424]
  40a4e8:	str	x21, [x29, #440]
  40a4ec:	ldr	x4, [x29, #320]
  40a4f0:	stp	xzr, xzr, [x21, #152]
  40a4f4:	stp	xzr, xzr, [x21, #168]
  40a4f8:	str	x4, [x29, #328]
  40a4fc:	str	xzr, [x29, #352]
  40a500:	str	w20, [x29, #360]
  40a504:	str	x22, [x29, #368]
  40a508:	str	w24, [x29, #380]
  40a50c:	tbz	w24, #1, 40a70c <argp_parse@@Base+0x57c>
  40a510:	str	wzr, [x29, #268]
  40a514:	ldr	w19, [x29, #360]
  40a518:	tbnz	w24, #0, 40aa84 <argp_parse@@Base+0x8f4>
  40a51c:	cmp	x1, x22
  40a520:	b.eq	40a720 <argp_parse@@Base+0x590>  // b.none
  40a524:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40a528:	ldr	x0, [x0, #1264]
  40a52c:	str	x0, [x29, #416]
  40a530:	ldr	w2, [x29, #344]
  40a534:	mov	w24, #0x6                   	// #6
  40a538:	ldr	w28, [x29, #376]
  40a53c:	mov	w0, w19
  40a540:	add	x22, x21, #0x70
  40a544:	mov	w26, #0xffffffff            	// #-1
  40a548:	movk	w24, #0x100, lsl #16
  40a54c:	ldr	w1, [x29, #388]
  40a550:	cbz	w1, 40a560 <argp_parse@@Base+0x3d0>
  40a554:	cmp	w1, w28
  40a558:	b.le	40a564 <argp_parse@@Base+0x3d4>
  40a55c:	str	wzr, [x29, #388]
  40a560:	cbnz	w2, 40a854 <argp_parse@@Base+0x6c4>
  40a564:	cmp	w28, w0
  40a568:	b.ge	40a7b8 <argp_parse@@Base+0x628>  // b.tcont
  40a56c:	ldr	w0, [x29, #380]
  40a570:	tbnz	w0, #2, 40a944 <argp_parse@@Base+0x7b4>
  40a574:	ldr	x0, [x29, #368]
  40a578:	ldr	x23, [x0, w28, sxtw #3]
  40a57c:	str	x23, [x29, #280]
  40a580:	ldp	x27, x3, [x29, #320]
  40a584:	str	w28, [x29, #376]
  40a588:	cmp	x27, x3
  40a58c:	b.cs	40a7ac <argp_parse@@Base+0x61c>  // b.hs, b.nlast
  40a590:	mov	w5, w28
  40a594:	nop
  40a598:	mov	x20, x27
  40a59c:	ldr	x4, [x20]
  40a5a0:	add	w6, w5, #0x1
  40a5a4:	str	w6, [x29, #376]
  40a5a8:	mov	x2, x22
  40a5ac:	mov	x1, x23
  40a5b0:	mov	w0, #0x0                   	// #0
  40a5b4:	cbz	x4, 40a79c <argp_parse@@Base+0x60c>
  40a5b8:	ldr	x3, [x20, #64]
  40a5bc:	str	x3, [x29, #408]
  40a5c0:	ldr	w3, [x20, #24]
  40a5c4:	ldr	q0, [x20, #48]
  40a5c8:	str	w3, [x29, #384]
  40a5cc:	add	x3, x29, #0x210
  40a5d0:	stur	q0, [x3, #-136]
  40a5d4:	blr	x4
  40a5d8:	mov	w19, w0
  40a5dc:	ldr	x1, [x29, #408]
  40a5e0:	str	x1, [x20, #64]
  40a5e4:	cmp	w0, #0x7
  40a5e8:	b.eq	40a734 <argp_parse@@Base+0x5a4>  // b.none
  40a5ec:	add	x27, x20, #0x48
  40a5f0:	cbnz	w0, 40aabc <argp_parse@@Base+0x92c>
  40a5f4:	ldr	w0, [x29, #360]
  40a5f8:	ldr	w1, [x29, #376]
  40a5fc:	cmp	w28, w1
  40a600:	b.ge	40a8a8 <argp_parse@@Base+0x718>  // b.tcont
  40a604:	ldur	w3, [x27, #-48]
  40a608:	sub	w4, w1, w28
  40a60c:	ldr	w2, [x29, #344]
  40a610:	mov	w28, w1
  40a614:	add	w1, w3, w4
  40a618:	stur	w1, [x27, #-48]
  40a61c:	b	40a54c <argp_parse@@Base+0x3bc>
  40a620:	cmp	w0, #0x7
  40a624:	b.eq	40a9e0 <argp_parse@@Base+0x850>  // b.none
  40a628:	ldr	x3, [x29, #328]
  40a62c:	sub	x20, x3, #0x48
  40a630:	cmp	x20, x4
  40a634:	b.cc	40a694 <argp_parse@@Base+0x504>  // b.lo, b.ul, b.last
  40a638:	mov	w22, #0x7                   	// #7
  40a63c:	add	x21, x21, #0x70
  40a640:	movk	w22, #0x100, lsl #16
  40a644:	nop
  40a648:	ldr	x3, [x20]
  40a64c:	mov	x2, x21
  40a650:	mov	w0, w22
  40a654:	mov	x1, #0x0                   	// #0
  40a658:	cbz	x3, 40abb0 <argp_parse@@Base+0xa20>
  40a65c:	ldr	x4, [x20, #64]
  40a660:	str	x4, [x29, #408]
  40a664:	ldr	w4, [x20, #24]
  40a668:	sub	x20, x20, #0x48
  40a66c:	ldur	q0, [x20, #120]
  40a670:	str	w4, [x29, #384]
  40a674:	add	x4, x29, #0x210
  40a678:	stur	q0, [x4, #-136]
  40a67c:	blr	x3
  40a680:	ldr	x0, [x29, #408]
  40a684:	str	x0, [x20, #136]
  40a688:	ldr	x4, [x29, #320]
  40a68c:	cmp	x20, x4
  40a690:	b.cs	40a648 <argp_parse@@Base+0x4b8>  // b.hs, b.nlast
  40a694:	cmp	w19, #0x7
  40a698:	mov	w0, #0x16                  	// #22
  40a69c:	csel	w19, w19, w0, ne  // ne = any
  40a6a0:	ldr	x0, [x29, #448]
  40a6a4:	bl	401d30 <free@plt>
  40a6a8:	mov	sp, x29
  40a6ac:	mov	w0, w19
  40a6b0:	ldp	x19, x20, [sp, #16]
  40a6b4:	ldp	x21, x22, [sp, #32]
  40a6b8:	ldp	x23, x24, [sp, #48]
  40a6bc:	ldp	x25, x26, [sp, #64]
  40a6c0:	ldp	x27, x28, [sp, #80]
  40a6c4:	ldp	x29, x30, [sp], #464
  40a6c8:	ret
  40a6cc:	ldur	x3, [x20, #-64]
  40a6d0:	ldr	x3, [x3, #32]
  40a6d4:	cbz	x3, 40a6f0 <argp_parse@@Base+0x560>
  40a6d8:	ldr	x3, [x3]
  40a6dc:	cbz	x3, 40a6f0 <argp_parse@@Base+0x560>
  40a6e0:	ldp	x4, x3, [x20, #-24]
  40a6e4:	str	x4, [x3]
  40a6e8:	ldur	x3, [x20, #-72]
  40a6ec:	cbnz	x3, 40a44c <argp_parse@@Base+0x2bc>
  40a6f0:	ldr	x3, [x29, #328]
  40a6f4:	cmp	x20, x3
  40a6f8:	b.cc	40a490 <argp_parse@@Base+0x300>  // b.lo, b.ul, b.last
  40a6fc:	ldr	w24, [x29, #380]
  40a700:	ldr	x1, [x29, #368]
  40a704:	nop
  40a708:	tbnz	w24, #1, 40a510 <argp_parse@@Base+0x380>
  40a70c:	mov	w0, #0x1                   	// #1
  40a710:	str	w0, [x29, #268]
  40a714:	ldr	w19, [x29, #360]
  40a718:	cmp	x1, x22
  40a71c:	b.ne	40a524 <argp_parse@@Base+0x394>  // b.any
  40a720:	ldr	x0, [x1]
  40a724:	cbz	x0, 40a524 <argp_parse@@Base+0x394>
  40a728:	bl	40aea0 <argp_parse@@Base+0xd10>
  40a72c:	str	x0, [x29, #416]
  40a730:	b	40a530 <argp_parse@@Base+0x3a0>
  40a734:	mov	x27, x20
  40a738:	ldr	w5, [x29, #376]
  40a73c:	sub	w5, w5, #0x1
  40a740:	ldr	x3, [x27], #72
  40a744:	str	w5, [x29, #376]
  40a748:	cbz	x3, 40ae00 <argp_parse@@Base+0xc70>
  40a74c:	ldr	x0, [x20, #64]
  40a750:	str	x0, [x29, #408]
  40a754:	add	x4, x29, #0x210
  40a758:	ldr	w0, [x20, #24]
  40a75c:	ldr	q0, [x20, #48]
  40a760:	str	w0, [x29, #384]
  40a764:	mov	x2, x22
  40a768:	mov	w0, w24
  40a76c:	mov	x1, #0x0                   	// #0
  40a770:	stur	q0, [x4, #-136]
  40a774:	blr	x3
  40a778:	mov	w19, w0
  40a77c:	ldr	x3, [x29, #328]
  40a780:	ldr	x0, [x29, #408]
  40a784:	str	x0, [x20, #64]
  40a788:	cmp	x3, x27
  40a78c:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
  40a790:	b.ne	40addc <argp_parse@@Base+0xc4c>  // b.any
  40a794:	ldr	w5, [x29, #376]
  40a798:	b	40a598 <argp_parse@@Base+0x408>
  40a79c:	add	x20, x20, #0x48
  40a7a0:	str	w5, [x29, #376]
  40a7a4:	cmp	x20, x3
  40a7a8:	b.cc	40a59c <argp_parse@@Base+0x40c>  // b.lo, b.ul, b.last
  40a7ac:	ldr	w0, [x29, #360]
  40a7b0:	ldr	w28, [x29, #376]
  40a7b4:	nop
  40a7b8:	cmp	w28, w0
  40a7bc:	b.ne	40a944 <argp_parse@@Base+0x7b4>  // b.any
  40a7c0:	ldp	x20, x3, [x29, #320]
  40a7c4:	mov	x4, x20
  40a7c8:	cmp	x20, x3
  40a7cc:	b.cs	40ada4 <argp_parse@@Base+0xc14>  // b.hs, b.nlast
  40a7d0:	mov	w22, #0x2                   	// #2
  40a7d4:	add	x23, x21, #0x70
  40a7d8:	mov	w19, #0x0                   	// #0
  40a7dc:	movk	w22, #0x100, lsl #16
  40a7e0:	b	40a824 <argp_parse@@Base+0x694>
  40a7e4:	ldur	x3, [x20, #-8]
  40a7e8:	str	x3, [x29, #408]
  40a7ec:	add	x3, x29, #0x210
  40a7f0:	ldur	q0, [x20, #-24]
  40a7f4:	str	wzr, [x29, #384]
  40a7f8:	stur	q0, [x3, #-136]
  40a7fc:	blr	x4
  40a800:	mov	w19, w0
  40a804:	ldr	x1, [x29, #408]
  40a808:	stur	x1, [x20, #-8]
  40a80c:	ldr	x3, [x29, #328]
  40a810:	cmp	x3, x20
  40a814:	b.ls	40acd0 <argp_parse@@Base+0xb40>  // b.plast
  40a818:	cmp	w19, #0x0
  40a81c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  40a820:	b.ne	40ad8c <argp_parse@@Base+0xbfc>  // b.any
  40a824:	ldr	w4, [x20, #24]
  40a828:	mov	x2, x23
  40a82c:	mov	w0, w22
  40a830:	add	x20, x20, #0x48
  40a834:	mov	x1, #0x0                   	// #0
  40a838:	cbnz	w4, 40a810 <argp_parse@@Base+0x680>
  40a83c:	ldur	x4, [x20, #-72]
  40a840:	cbnz	x4, 40a7e4 <argp_parse@@Base+0x654>
  40a844:	cmp	x3, x20
  40a848:	b.ls	40adc0 <argp_parse@@Base+0xc30>  // b.plast
  40a84c:	mov	w19, #0x7                   	// #7
  40a850:	b	40a824 <argp_parse@@Base+0x694>
  40a854:	ldr	w4, [x29, #380]
  40a858:	str	w28, [x29, #264]
  40a85c:	str	w26, [x29, #272]
  40a860:	ldp	x2, x3, [x29, #248]
  40a864:	ldr	x1, [x29, #368]
  40a868:	tbz	w4, #6, 40a8bc <argp_parse@@Base+0x72c>
  40a86c:	add	x5, x21, #0x18
  40a870:	mov	x4, #0x0                   	// #0
  40a874:	bl	40c0a8 <argp_parse@@Base+0x1f18>
  40a878:	ldr	w28, [x29, #264]
  40a87c:	str	w28, [x29, #376]
  40a880:	mov	w20, w0
  40a884:	cmn	w20, #0x1
  40a888:	b.eq	40a8dc <argp_parse@@Base+0x74c>  // b.none
  40a88c:	cmp	w20, #0x3f
  40a890:	b.eq	40a9f8 <argp_parse@@Base+0x868>  // b.none
  40a894:	cmp	w20, #0x1
  40a898:	b.ne	40abd4 <argp_parse@@Base+0xa44>  // b.any
  40a89c:	sub	w28, w28, #0x1
  40a8a0:	ldr	x23, [x29, #280]
  40a8a4:	b	40a580 <argp_parse@@Base+0x3f0>
  40a8a8:	mov	w28, w1
  40a8ac:	mov	w1, #0x1                   	// #1
  40a8b0:	mov	w2, w1
  40a8b4:	str	w1, [x29, #344]
  40a8b8:	b	40a54c <argp_parse@@Base+0x3bc>
  40a8bc:	add	x5, x21, #0x18
  40a8c0:	mov	x4, #0x0                   	// #0
  40a8c4:	bl	40c088 <argp_parse@@Base+0x1ef8>
  40a8c8:	ldr	w28, [x29, #264]
  40a8cc:	str	w28, [x29, #376]
  40a8d0:	mov	w20, w0
  40a8d4:	cmn	w20, #0x1
  40a8d8:	b.ne	40a88c <argp_parse@@Base+0x6fc>  // b.any
  40a8dc:	str	wzr, [x29, #344]
  40a8e0:	cmp	w28, #0x1
  40a8e4:	b.le	40a93c <argp_parse@@Base+0x7ac>
  40a8e8:	mov	x0, #0xfffffffffffffff8    	// #-8
  40a8ec:	ldr	x1, [x29, #368]
  40a8f0:	add	x0, x0, w28, sxtw #3
  40a8f4:	ldr	x0, [x1, x0]
  40a8f8:	ldrb	w1, [x0]
  40a8fc:	cmp	w1, #0x2d
  40a900:	b.ne	40a93c <argp_parse@@Base+0x7ac>  // b.any
  40a904:	ldrb	w1, [x0, #1]
  40a908:	cmp	w1, #0x2d
  40a90c:	b.ne	40a93c <argp_parse@@Base+0x7ac>  // b.any
  40a910:	ldrb	w0, [x0, #2]
  40a914:	cbnz	w0, 40a93c <argp_parse@@Base+0x7ac>
  40a918:	ldr	w0, [x29, #360]
  40a91c:	str	w28, [x29, #388]
  40a920:	b	40a564 <argp_parse@@Base+0x3d4>
  40a924:	cmp	w0, #0x0
  40a928:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  40a92c:	b.ne	40a6a8 <argp_parse@@Base+0x518>  // b.any
  40a930:	ldr	w24, [x29, #380]
  40a934:	ldr	x1, [x29, #368]
  40a938:	b	40a708 <argp_parse@@Base+0x578>
  40a93c:	ldr	w0, [x29, #360]
  40a940:	b	40a564 <argp_parse@@Base+0x3d4>
  40a944:	ldr	x0, [x29, #104]
  40a948:	cbz	x0, 40ab4c <argp_parse@@Base+0x9bc>
  40a94c:	ldp	x4, x3, [x29, #320]
  40a950:	str	w28, [x0]
  40a954:	sub	x20, x3, #0x48
  40a958:	cmp	x20, x4
  40a95c:	b.cc	40adb8 <argp_parse@@Base+0xc28>  // b.lo, b.ul, b.last
  40a960:	mov	w22, #0x4                   	// #4
  40a964:	add	x23, x21, #0x70
  40a968:	movk	w22, #0x100, lsl #16
  40a96c:	ldr	x3, [x20], #-72
  40a970:	mov	x2, x23
  40a974:	mov	w0, w22
  40a978:	mov	x1, #0x0                   	// #0
  40a97c:	cbz	x3, 40a9d8 <argp_parse@@Base+0x848>
  40a980:	ldr	x4, [x20, #136]
  40a984:	str	x4, [x29, #408]
  40a988:	ldr	w4, [x20, #96]
  40a98c:	ldur	q0, [x20, #120]
  40a990:	str	w4, [x29, #384]
  40a994:	add	x4, x29, #0x210
  40a998:	stur	q0, [x4, #-136]
  40a99c:	blr	x3
  40a9a0:	mov	w19, w0
  40a9a4:	ldr	x1, [x29, #408]
  40a9a8:	str	x1, [x20, #136]
  40a9ac:	ldr	x4, [x29, #320]
  40a9b0:	cmp	x4, x20
  40a9b4:	b.hi	40a620 <argp_parse@@Base+0x490>  // b.pmore
  40a9b8:	cmp	w0, #0x0
  40a9bc:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  40a9c0:	b.ne	40a628 <argp_parse@@Base+0x498>  // b.any
  40a9c4:	ldr	x3, [x20], #-72
  40a9c8:	mov	x2, x23
  40a9cc:	mov	w0, w22
  40a9d0:	mov	x1, #0x0                   	// #0
  40a9d4:	cbnz	x3, 40a980 <argp_parse@@Base+0x7f0>
  40a9d8:	cmp	x4, x20
  40a9dc:	b.ls	40a96c <argp_parse@@Base+0x7dc>  // b.plast
  40a9e0:	ldr	x20, [x29, #328]
  40a9e4:	mov	w19, #0x0                   	// #0
  40a9e8:	sub	x20, x20, #0x48
  40a9ec:	cmp	x20, x4
  40a9f0:	b.cs	40a638 <argp_parse@@Base+0x4a8>  // b.hs, b.nlast
  40a9f4:	b	40a6a0 <argp_parse@@Base+0x510>
  40a9f8:	ldr	w0, [x29, #272]
  40a9fc:	cmn	w0, #0x1
  40aa00:	b.ne	40aac8 <argp_parse@@Base+0x938>  // b.any
  40aa04:	ldr	x0, [x29, #248]
  40aa08:	mov	w1, w20
  40aa0c:	bl	401d70 <strchr@plt>
  40aa10:	cbz	x0, 40ab80 <argp_parse@@Base+0x9f0>
  40aa14:	ldp	x23, x2, [x29, #320]
  40aa18:	cmp	x23, x2
  40aa1c:	b.cc	40aa30 <argp_parse@@Base+0x8a0>  // b.lo, b.ul, b.last
  40aa20:	b	40ab80 <argp_parse@@Base+0x9f0>
  40aa24:	add	x23, x23, #0x48
  40aa28:	cmp	x23, x2
  40aa2c:	b.cs	40ab80 <argp_parse@@Base+0x9f0>  // b.hs, b.nlast
  40aa30:	ldr	x1, [x23, #16]
  40aa34:	cmp	x0, x1
  40aa38:	b.cs	40aa24 <argp_parse@@Base+0x894>  // b.hs, b.nlast
  40aa3c:	ldr	x3, [x23]
  40aa40:	cbz	x3, 40ab80 <argp_parse@@Base+0x9f0>
  40aa44:	ldr	x0, [x23, #64]
  40aa48:	mov	x2, x22
  40aa4c:	ldr	w4, [x23, #24]
  40aa50:	mov	w27, #0x0                   	// #0
  40aa54:	str	x0, [x29, #408]
  40aa58:	mov	w0, w20
  40aa5c:	ldr	x1, [x29, #280]
  40aa60:	ldr	q0, [x23, #48]
  40aa64:	str	w4, [x29, #384]
  40aa68:	add	x4, x29, #0x210
  40aa6c:	stur	q0, [x4, #-136]
  40aa70:	blr	x3
  40aa74:	mov	w19, w0
  40aa78:	ldr	x1, [x29, #408]
  40aa7c:	str	x1, [x23, #64]
  40aa80:	b	40ac34 <argp_parse@@Base+0xaa4>
  40aa84:	sub	x1, x1, #0x8
  40aa88:	add	w19, w19, #0x1
  40aa8c:	str	w19, [x29, #360]
  40aa90:	str	x1, [x29, #368]
  40aa94:	b	40a51c <argp_parse@@Base+0x38c>
  40aa98:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  40aa9c:	ldr	x1, [x2]
  40aaa0:	str	x1, [x0, #1240]
  40aaa4:	ldr	x0, [x19, #1264]
  40aaa8:	cbnz	x0, 40a1e0 <argp_parse@@Base+0x50>
  40aaac:	ldr	x0, [x22]
  40aab0:	bl	40aea0 <argp_parse@@Base+0xd10>
  40aab4:	str	x0, [x19, #1264]
  40aab8:	b	40a1e0 <argp_parse@@Base+0x50>
  40aabc:	cmp	w19, #0x7
  40aac0:	b.ne	40aadc <argp_parse@@Base+0x94c>  // b.any
  40aac4:	nop
  40aac8:	ldr	x1, [x29, #424]
  40aacc:	mov	w19, #0x7                   	// #7
  40aad0:	add	x0, x21, #0x70
  40aad4:	mov	w2, #0x104                 	// #260
  40aad8:	bl	40f910 <argp_state_help@@Base>
  40aadc:	ldp	x4, x3, [x29, #320]
  40aae0:	mov	x20, x4
  40aae4:	cmp	x3, x4
  40aae8:	b.ls	40a62c <argp_parse@@Base+0x49c>  // b.plast
  40aaec:	mov	w22, #0x5                   	// #5
  40aaf0:	add	x23, x21, #0x70
  40aaf4:	movk	w22, #0x100, lsl #16
  40aaf8:	ldr	x4, [x20]
  40aafc:	mov	x2, x23
  40ab00:	mov	w0, w22
  40ab04:	mov	x1, #0x0                   	// #0
  40ab08:	cbz	x4, 40abc0 <argp_parse@@Base+0xa30>
  40ab0c:	ldr	x3, [x20, #64]
  40ab10:	str	x3, [x29, #408]
  40ab14:	ldr	w3, [x20, #24]
  40ab18:	add	x20, x20, #0x48
  40ab1c:	ldur	q0, [x20, #-24]
  40ab20:	str	w3, [x29, #384]
  40ab24:	add	x3, x29, #0x210
  40ab28:	stur	q0, [x3, #-136]
  40ab2c:	blr	x4
  40ab30:	ldr	x0, [x29, #408]
  40ab34:	stur	x0, [x20, #-8]
  40ab38:	ldr	x3, [x29, #328]
  40ab3c:	cmp	x20, x3
  40ab40:	b.cc	40aaf8 <argp_parse@@Base+0x968>  // b.lo, b.ul, b.last
  40ab44:	ldr	x4, [x29, #320]
  40ab48:	b	40a62c <argp_parse@@Base+0x49c>
  40ab4c:	ldr	w0, [x29, #380]
  40ab50:	ldr	x1, [x29, #424]
  40ab54:	tbnz	w0, #1, 40aacc <argp_parse@@Base+0x93c>
  40ab58:	cbz	x1, 40aacc <argp_parse@@Base+0x93c>
  40ab5c:	ldr	x2, [x29, #416]
  40ab60:	mov	x0, x1
  40ab64:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40ab68:	add	x1, x1, #0x448
  40ab6c:	bl	401ed0 <fprintf@plt>
  40ab70:	ldr	x1, [x29, #424]
  40ab74:	b	40aacc <argp_parse@@Base+0x93c>
  40ab78:	cbnz	w27, 40ac50 <argp_parse@@Base+0xac0>
  40ab7c:	nop
  40ab80:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40ab84:	add	x3, x3, #0x530
  40ab88:	add	x0, x21, #0x70
  40ab8c:	add	x3, x3, #0x70
  40ab90:	mov	w2, w20
  40ab94:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40ab98:	add	x1, x1, #0x430
  40ab9c:	bl	40f9b0 <argp_error@@Base>
  40aba0:	add	w0, w20, #0x1
  40aba4:	and	w0, w0, #0xfffffffd
  40aba8:	cbnz	w0, 40aac8 <argp_parse@@Base+0x938>
  40abac:	b	40a7ac <argp_parse@@Base+0x61c>
  40abb0:	sub	x20, x20, #0x48
  40abb4:	cmp	x20, x4
  40abb8:	b.cs	40a648 <argp_parse@@Base+0x4b8>  // b.hs, b.nlast
  40abbc:	b	40a694 <argp_parse@@Base+0x504>
  40abc0:	add	x20, x20, #0x48
  40abc4:	cmp	x20, x3
  40abc8:	b.cc	40aaf8 <argp_parse@@Base+0x968>  // b.lo, b.ul, b.last
  40abcc:	ldr	x4, [x29, #320]
  40abd0:	b	40a62c <argp_parse@@Base+0x49c>
  40abd4:	cmp	wzr, w20, asr #24
  40abd8:	asr	w27, w20, #24
  40abdc:	b.eq	40aa04 <argp_parse@@Base+0x874>  // b.none
  40abe0:	mov	x0, #0xffffffffffffffb8    	// #-72
  40abe4:	mov	w1, #0x48                  	// #72
  40abe8:	ldr	x2, [x29, #320]
  40abec:	smaddl	x1, w27, w1, x0
  40abf0:	sbfx	x0, x20, #0, #24
  40abf4:	add	x23, x2, x1
  40abf8:	ldr	x3, [x2, x1]
  40abfc:	cbz	x3, 40ac50 <argp_parse@@Base+0xac0>
  40ac00:	ldr	x1, [x23, #64]
  40ac04:	mov	x2, x22
  40ac08:	ldr	w4, [x23, #24]
  40ac0c:	str	x1, [x29, #408]
  40ac10:	ldr	x1, [x29, #280]
  40ac14:	ldr	q0, [x23, #48]
  40ac18:	str	w4, [x29, #384]
  40ac1c:	add	x4, x29, #0x210
  40ac20:	stur	q0, [x4, #-136]
  40ac24:	blr	x3
  40ac28:	mov	w19, w0
  40ac2c:	ldr	x0, [x29, #408]
  40ac30:	str	x0, [x23, #64]
  40ac34:	cmp	w19, #0x7
  40ac38:	b.eq	40ab78 <argp_parse@@Base+0x9e8>  // b.none
  40ac3c:	cbnz	w19, 40aabc <argp_parse@@Base+0x92c>
  40ac40:	ldr	w2, [x29, #344]
  40ac44:	ldr	w0, [x29, #360]
  40ac48:	ldr	w28, [x29, #376]
  40ac4c:	b	40a54c <argp_parse@@Base+0x3bc>
  40ac50:	ldr	x0, [x29, #256]
  40ac54:	ldr	w1, [x0, #24]
  40ac58:	cmp	w20, w1
  40ac5c:	b.ne	40ac70 <argp_parse@@Base+0xae0>  // b.any
  40ac60:	b	40acc4 <argp_parse@@Base+0xb34>
  40ac64:	ldr	w1, [x0, #24]
  40ac68:	cmp	w20, w1
  40ac6c:	b.eq	40acc4 <argp_parse@@Base+0xb34>  // b.none
  40ac70:	ldr	x1, [x0]
  40ac74:	add	x0, x0, #0x20
  40ac78:	cbnz	x1, 40ac64 <argp_parse@@Base+0xad4>
  40ac7c:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40ac80:	add	x2, x2, #0x428
  40ac84:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40ac88:	add	x3, x3, #0x530
  40ac8c:	add	x0, x21, #0x70
  40ac90:	add	x3, x3, #0x70
  40ac94:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40ac98:	add	x1, x1, #0x438
  40ac9c:	bl	40f9b0 <argp_error@@Base>
  40aca0:	add	w0, w20, #0x1
  40aca4:	and	w0, w0, #0xfffffffd
  40aca8:	cbnz	w0, 40aac8 <argp_parse@@Base+0x938>
  40acac:	b	40a7ac <argp_parse@@Base+0x61c>
  40acb0:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  40acb4:	ldr	x4, [x4, #1448]
  40acb8:	cbnz	x4, 40a28c <argp_parse@@Base+0xfc>
  40acbc:	add	x4, x3, #0x20
  40acc0:	b	40a298 <argp_parse@@Base+0x108>
  40acc4:	ldr	x2, [x0]
  40acc8:	cbnz	x2, 40ac84 <argp_parse@@Base+0xaf4>
  40accc:	b	40ac7c <argp_parse@@Base+0xaec>
  40acd0:	ldr	x4, [x29, #320]
  40acd4:	sub	x20, x3, #0x48
  40acd8:	cmp	x20, x4
  40acdc:	b.cc	40ad98 <argp_parse@@Base+0xc08>  // b.lo, b.ul, b.last
  40ace0:	cmp	w19, #0x0
  40ace4:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  40ace8:	b.ne	40ad54 <argp_parse@@Base+0xbc4>  // b.any
  40acec:	mov	w22, #0x1                   	// #1
  40acf0:	add	x23, x21, #0x70
  40acf4:	movk	w22, #0x100, lsl #16
  40acf8:	ldr	x3, [x20], #-72
  40acfc:	mov	x2, x23
  40ad00:	mov	w0, w22
  40ad04:	mov	x1, #0x0                   	// #0
  40ad08:	cbz	x3, 40ad6c <argp_parse@@Base+0xbdc>
  40ad0c:	ldr	x4, [x20, #136]
  40ad10:	str	x4, [x29, #408]
  40ad14:	ldr	w4, [x20, #96]
  40ad18:	ldur	q0, [x20, #120]
  40ad1c:	str	w4, [x29, #384]
  40ad20:	add	x4, x29, #0x210
  40ad24:	stur	q0, [x4, #-136]
  40ad28:	blr	x3
  40ad2c:	mov	w19, w0
  40ad30:	ldr	x1, [x29, #408]
  40ad34:	str	x1, [x20, #136]
  40ad38:	ldr	x4, [x29, #320]
  40ad3c:	cmp	x4, x20
  40ad40:	b.hi	40ad94 <argp_parse@@Base+0xc04>  // b.pmore
  40ad44:	cmp	w0, #0x0
  40ad48:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  40ad4c:	b.eq	40acf8 <argp_parse@@Base+0xb68>  // b.none
  40ad50:	ldr	x3, [x29, #328]
  40ad54:	ldr	x1, [x29, #104]
  40ad58:	cbz	x1, 40ad64 <argp_parse@@Base+0xbd4>
  40ad5c:	ldr	w0, [x29, #376]
  40ad60:	str	w0, [x1]
  40ad64:	cbz	w19, 40a954 <argp_parse@@Base+0x7c4>
  40ad68:	b	40aae0 <argp_parse@@Base+0x950>
  40ad6c:	cmp	x4, x20
  40ad70:	b.ls	40acf8 <argp_parse@@Base+0xb68>  // b.plast
  40ad74:	ldr	x3, [x29, #328]
  40ad78:	ldr	x1, [x29, #104]
  40ad7c:	cbz	x1, 40a954 <argp_parse@@Base+0x7c4>
  40ad80:	ldr	w0, [x29, #376]
  40ad84:	str	w0, [x1]
  40ad88:	b	40a954 <argp_parse@@Base+0x7c4>
  40ad8c:	ldr	x4, [x29, #320]
  40ad90:	b	40ad54 <argp_parse@@Base+0xbc4>
  40ad94:	ldr	x3, [x29, #328]
  40ad98:	cmp	w19, #0x7
  40ad9c:	b.eq	40ad78 <argp_parse@@Base+0xbe8>  // b.none
  40ada0:	b	40ad54 <argp_parse@@Base+0xbc4>
  40ada4:	sub	x20, x3, #0x48
  40ada8:	cmp	x4, x20
  40adac:	b.ls	40acec <argp_parse@@Base+0xb5c>  // b.plast
  40adb0:	ldr	x1, [x29, #104]
  40adb4:	cbnz	x1, 40ad80 <argp_parse@@Base+0xbf0>
  40adb8:	mov	w19, #0x0                   	// #0
  40adbc:	b	40a6a0 <argp_parse@@Base+0x510>
  40adc0:	ldr	x4, [x29, #320]
  40adc4:	sub	x20, x3, #0x48
  40adc8:	cmp	x4, x20
  40adcc:	b.ls	40acec <argp_parse@@Base+0xb5c>  // b.plast
  40add0:	b	40ad78 <argp_parse@@Base+0xbe8>
  40add4:	mov	w19, #0xc                   	// #12
  40add8:	b	40a6a8 <argp_parse@@Base+0x518>
  40addc:	cbnz	w19, 40adf0 <argp_parse@@Base+0xc60>
  40ade0:	ldr	w1, [x29, #360]
  40ade4:	str	w1, [x29, #376]
  40ade8:	mov	w0, w1
  40adec:	b	40a5fc <argp_parse@@Base+0x46c>
  40adf0:	cmp	w19, #0x7
  40adf4:	ldr	x4, [x29, #320]
  40adf8:	b.eq	40a7ac <argp_parse@@Base+0x61c>  // b.none
  40adfc:	b	40aae0 <argp_parse@@Base+0x950>
  40ae00:	mov	x20, x27
  40ae04:	ldr	x3, [x29, #328]
  40ae08:	b	40a7a4 <argp_parse@@Base+0x614>
  40ae0c:	nop
  40ae10:	cbz	x1, 40ae48 <argp_parse@@Base+0xcb8>
  40ae14:	ldr	x2, [x1, #88]
  40ae18:	ldp	x1, x3, [x2, #80]
  40ae1c:	cmp	x1, x3
  40ae20:	b.cc	40ae34 <argp_parse@@Base+0xca4>  // b.lo, b.ul, b.last
  40ae24:	b	40ae48 <argp_parse@@Base+0xcb8>
  40ae28:	add	x1, x1, #0x48
  40ae2c:	cmp	x1, x3
  40ae30:	b.cs	40ae48 <argp_parse@@Base+0xcb8>  // b.hs, b.nlast
  40ae34:	ldr	x2, [x1, #8]
  40ae38:	cmp	x2, x0
  40ae3c:	b.ne	40ae28 <argp_parse@@Base+0xc98>  // b.any
  40ae40:	ldr	x0, [x1, #48]
  40ae44:	ret
  40ae48:	mov	x0, #0x0                   	// #0
  40ae4c:	ret
  40ae50:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40ae54:	add	x5, x1, #0x5b0
  40ae58:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40ae5c:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40ae60:	ldr	x4, [x1, #1456]
  40ae64:	add	x3, x3, #0x728
  40ae68:	ldr	x1, [x5, #8]
  40ae6c:	add	x2, x2, #0x730
  40ae70:	b	40b600 <argp_parse@@Base+0x1470>
  40ae74:	nop
  40ae78:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  40ae7c:	add	x4, x3, #0x5b0
  40ae80:	adrp	x5, 42a000 <argp_error@@Base+0x1a650>
  40ae84:	adrp	x2, 40a000 <ferror@plt+0x8110>
  40ae88:	str	x1, [x3, #1456]
  40ae8c:	add	x2, x2, #0xe50
  40ae90:	str	x2, [x5, #1448]
  40ae94:	str	x0, [x4, #8]
  40ae98:	ret
  40ae9c:	nop
  40aea0:	ldrb	w1, [x0]
  40aea4:	cmp	w1, #0x2f
  40aea8:	b.ne	40aebc <argp_parse@@Base+0xd2c>  // b.any
  40aeac:	nop
  40aeb0:	ldrb	w1, [x0, #1]!
  40aeb4:	cmp	w1, #0x2f
  40aeb8:	b.eq	40aeb0 <argp_parse@@Base+0xd20>  // b.none
  40aebc:	cbz	w1, 40aef4 <argp_parse@@Base+0xd64>
  40aec0:	mov	x2, x0
  40aec4:	mov	w3, #0x0                   	// #0
  40aec8:	b	40aee0 <argp_parse@@Base+0xd50>
  40aecc:	cbz	w3, 40aed8 <argp_parse@@Base+0xd48>
  40aed0:	mov	x0, x2
  40aed4:	mov	w3, #0x0                   	// #0
  40aed8:	ldrb	w1, [x2, #1]!
  40aedc:	cbz	w1, 40aef4 <argp_parse@@Base+0xd64>
  40aee0:	cmp	w1, #0x2f
  40aee4:	b.ne	40aecc <argp_parse@@Base+0xd3c>  // b.any
  40aee8:	ldrb	w1, [x2, #1]!
  40aeec:	mov	w3, #0x1                   	// #1
  40aef0:	cbnz	w1, 40aee0 <argp_parse@@Base+0xd50>
  40aef4:	ret
  40aef8:	stp	x29, x30, [sp, #-32]!
  40aefc:	mov	x29, sp
  40af00:	str	x19, [sp, #16]
  40af04:	mov	x19, x0
  40af08:	bl	401b00 <strlen@plt>
  40af0c:	subs	x1, x0, #0x1
  40af10:	b.ls	40af20 <argp_parse@@Base+0xd90>  // b.plast
  40af14:	ldrb	w2, [x19, x1]
  40af18:	cmp	w2, #0x2f
  40af1c:	b.eq	40af2c <argp_parse@@Base+0xd9c>  // b.none
  40af20:	ldr	x19, [sp, #16]
  40af24:	ldp	x29, x30, [sp], #32
  40af28:	ret
  40af2c:	mov	x0, x1
  40af30:	b	40af0c <argp_parse@@Base+0xd7c>
  40af34:	nop
  40af38:	stp	x29, x30, [sp, #-48]!
  40af3c:	mov	x29, sp
  40af40:	stp	x19, x20, [sp, #16]
  40af44:	cbz	x0, 40b01c <argp_parse@@Base+0xe8c>
  40af48:	mov	x19, x0
  40af4c:	mov	w1, #0x2f                  	// #47
  40af50:	bl	401cb0 <strrchr@plt>
  40af54:	mov	x20, x0
  40af58:	cbz	x0, 40afbc <argp_parse@@Base+0xe2c>
  40af5c:	str	x21, [sp, #32]
  40af60:	add	x21, x0, #0x1
  40af64:	sub	x0, x21, x19
  40af68:	cmp	x0, #0x6
  40af6c:	b.le	40afd8 <argp_parse@@Base+0xe48>
  40af70:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40af74:	sub	x0, x20, #0x6
  40af78:	add	x1, x1, #0x778
  40af7c:	mov	x2, #0x7                   	// #7
  40af80:	bl	401c00 <strncmp@plt>
  40af84:	cbnz	w0, 40afd8 <argp_parse@@Base+0xe48>
  40af88:	ldrb	w0, [x20, #1]
  40af8c:	cmp	w0, #0x6c
  40af90:	b.ne	40aff8 <argp_parse@@Base+0xe68>  // b.any
  40af94:	ldrb	w0, [x21, #1]
  40af98:	cmp	w0, #0x74
  40af9c:	b.ne	40aff8 <argp_parse@@Base+0xe68>  // b.any
  40afa0:	ldrb	w0, [x21, #2]
  40afa4:	cmp	w0, #0x2d
  40afa8:	b.ne	40aff8 <argp_parse@@Base+0xe68>  // b.any
  40afac:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40afb0:	add	x19, x20, #0x4
  40afb4:	ldr	x21, [sp, #32]
  40afb8:	str	x19, [x0, #1264]
  40afbc:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40afc0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40afc4:	str	x19, [x1, #1472]
  40afc8:	str	x19, [x0, #1240]
  40afcc:	ldp	x19, x20, [sp, #16]
  40afd0:	ldp	x29, x30, [sp], #48
  40afd4:	ret
  40afd8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40afdc:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40afe0:	ldr	x21, [sp, #32]
  40afe4:	str	x19, [x1, #1472]
  40afe8:	str	x19, [x0, #1240]
  40afec:	ldp	x19, x20, [sp, #16]
  40aff0:	ldp	x29, x30, [sp], #48
  40aff4:	ret
  40aff8:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40affc:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40b000:	mov	x19, x21
  40b004:	str	x19, [x1, #1472]
  40b008:	str	x19, [x0, #1240]
  40b00c:	ldp	x19, x20, [sp, #16]
  40b010:	ldr	x21, [sp, #32]
  40b014:	ldp	x29, x30, [sp], #48
  40b018:	ret
  40b01c:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  40b020:	mov	x2, #0x37                  	// #55
  40b024:	mov	x1, #0x1                   	// #1
  40b028:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40b02c:	ldr	x3, [x3, #1248]
  40b030:	add	x0, x0, #0x740
  40b034:	str	x21, [sp, #32]
  40b038:	bl	401d80 <fwrite@plt>
  40b03c:	bl	401cd0 <abort@plt>
  40b040:	stp	x29, x30, [sp, #-192]!
  40b044:	mov	x29, sp
  40b048:	stp	x19, x20, [sp, #16]
  40b04c:	mov	x20, x1
  40b050:	stp	x21, x22, [sp, #32]
  40b054:	mov	x21, x0
  40b058:	stp	x23, x24, [sp, #48]
  40b05c:	bl	401bb0 <fileno@plt>
  40b060:	add	x2, sp, #0x40
  40b064:	mov	w1, w0
  40b068:	mov	w0, #0x0                   	// #0
  40b06c:	bl	401df0 <__fxstat@plt>
  40b070:	tbnz	w0, #31, 40b084 <argp_parse@@Base+0xef4>
  40b074:	ldr	w0, [sp, #80]
  40b078:	and	w0, w0, #0xf000
  40b07c:	cmp	w0, #0x8, lsl #12
  40b080:	b.eq	40b1a4 <argp_parse@@Base+0x1014>  // b.none
  40b084:	mov	x19, #0x2000                	// #8192
  40b088:	mov	x0, x19
  40b08c:	bl	401be0 <malloc@plt>
  40b090:	mov	x23, x0
  40b094:	cbz	x0, 40b128 <argp_parse@@Base+0xf98>
  40b098:	mov	x22, #0x0                   	// #0
  40b09c:	nop
  40b0a0:	sub	x24, x19, x22
  40b0a4:	mov	x3, x21
  40b0a8:	mov	x2, x24
  40b0ac:	add	x0, x23, x22
  40b0b0:	mov	x1, #0x1                   	// #1
  40b0b4:	bl	401d20 <fread@plt>
  40b0b8:	lsr	x2, x19, #1
  40b0bc:	mov	x3, x0
  40b0c0:	mvn	x4, x2
  40b0c4:	mov	x0, x23
  40b0c8:	add	x22, x22, x3
  40b0cc:	cmp	x24, x3
  40b0d0:	mov	x1, #0xffffffffffffffff    	// #-1
  40b0d4:	b.ne	40b140 <argp_parse@@Base+0xfb0>  // b.any
  40b0d8:	cmn	x19, #0x1
  40b0dc:	b.eq	40b184 <argp_parse@@Base+0xff4>  // b.none
  40b0e0:	cmp	x4, x19
  40b0e4:	add	x19, x19, x2
  40b0e8:	b.ls	40b100 <argp_parse@@Base+0xf70>  // b.plast
  40b0ec:	mov	x1, x19
  40b0f0:	bl	401c70 <realloc@plt>
  40b0f4:	cbz	x0, 40b10c <argp_parse@@Base+0xf7c>
  40b0f8:	mov	x23, x0
  40b0fc:	b	40b0a0 <argp_parse@@Base+0xf10>
  40b100:	mov	x19, #0xffffffffffffffff    	// #-1
  40b104:	bl	401c70 <realloc@plt>
  40b108:	cbnz	x0, 40b0f8 <argp_parse@@Base+0xf68>
  40b10c:	bl	401ea0 <__errno_location@plt>
  40b110:	ldr	w21, [x0]
  40b114:	mov	x24, x0
  40b118:	mov	x0, x23
  40b11c:	mov	x23, #0x0                   	// #0
  40b120:	bl	401d30 <free@plt>
  40b124:	str	w21, [x24]
  40b128:	mov	x0, x23
  40b12c:	ldp	x19, x20, [sp, #16]
  40b130:	ldp	x21, x22, [sp, #32]
  40b134:	ldp	x23, x24, [sp, #48]
  40b138:	ldp	x29, x30, [sp], #192
  40b13c:	ret
  40b140:	bl	401ea0 <__errno_location@plt>
  40b144:	mov	x24, x0
  40b148:	mov	x0, x21
  40b14c:	ldr	w21, [x24]
  40b150:	bl	401ef0 <ferror@plt>
  40b154:	cbnz	w0, 40b118 <argp_parse@@Base+0xf88>
  40b158:	sub	x19, x19, #0x1
  40b15c:	cmp	x19, x22
  40b160:	b.hi	40b1dc <argp_parse@@Base+0x104c>  // b.pmore
  40b164:	strb	wzr, [x23, x22]
  40b168:	mov	x0, x23
  40b16c:	str	x22, [x20]
  40b170:	ldp	x19, x20, [sp, #16]
  40b174:	ldp	x21, x22, [sp, #32]
  40b178:	ldp	x23, x24, [sp, #48]
  40b17c:	ldp	x29, x30, [sp], #192
  40b180:	ret
  40b184:	bl	401ea0 <__errno_location@plt>
  40b188:	mov	x24, x0
  40b18c:	mov	w21, #0xc                   	// #12
  40b190:	mov	x0, x23
  40b194:	mov	x23, #0x0                   	// #0
  40b198:	bl	401d30 <free@plt>
  40b19c:	str	w21, [x24]
  40b1a0:	b	40b128 <argp_parse@@Base+0xf98>
  40b1a4:	mov	x0, x21
  40b1a8:	bl	401da0 <ftello@plt>
  40b1ac:	tbnz	x0, #63, 40b084 <argp_parse@@Base+0xef4>
  40b1b0:	ldr	x2, [sp, #112]
  40b1b4:	cmp	x2, x0
  40b1b8:	b.le	40b084 <argp_parse@@Base+0xef4>
  40b1bc:	sub	x2, x2, x0
  40b1c0:	adds	x19, x2, #0x1
  40b1c4:	b.ne	40b088 <argp_parse@@Base+0xef8>  // b.any
  40b1c8:	bl	401ea0 <__errno_location@plt>
  40b1cc:	mov	x23, #0x0                   	// #0
  40b1d0:	mov	w1, #0xc                   	// #12
  40b1d4:	str	w1, [x0]
  40b1d8:	b	40b128 <argp_parse@@Base+0xf98>
  40b1dc:	mov	x0, x23
  40b1e0:	add	x1, x22, #0x1
  40b1e4:	bl	401c70 <realloc@plt>
  40b1e8:	cmp	x0, #0x0
  40b1ec:	csel	x23, x23, x0, eq  // eq = none
  40b1f0:	b	40b164 <argp_parse@@Base+0xfd4>
  40b1f4:	nop
  40b1f8:	stp	x29, x30, [sp, #-48]!
  40b1fc:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40b200:	mov	x29, sp
  40b204:	stp	x19, x20, [sp, #16]
  40b208:	mov	x20, x1
  40b20c:	add	x1, x2, #0xe80
  40b210:	bl	401bd0 <fopen@plt>
  40b214:	cbz	x0, 40b258 <argp_parse@@Base+0x10c8>
  40b218:	mov	x1, x20
  40b21c:	mov	x19, x0
  40b220:	str	x21, [sp, #32]
  40b224:	bl	40b040 <argp_parse@@Base+0xeb0>
  40b228:	mov	x20, x0
  40b22c:	bl	401ea0 <__errno_location@plt>
  40b230:	mov	x21, x0
  40b234:	mov	x0, x19
  40b238:	ldr	w19, [x21]
  40b23c:	bl	401bc0 <fclose@plt>
  40b240:	cbnz	w0, 40b26c <argp_parse@@Base+0x10dc>
  40b244:	mov	x0, x20
  40b248:	ldp	x19, x20, [sp, #16]
  40b24c:	ldr	x21, [sp, #32]
  40b250:	ldp	x29, x30, [sp], #48
  40b254:	ret
  40b258:	mov	x20, #0x0                   	// #0
  40b25c:	mov	x0, x20
  40b260:	ldp	x19, x20, [sp, #16]
  40b264:	ldp	x29, x30, [sp], #48
  40b268:	ret
  40b26c:	cbz	x20, 40b27c <argp_parse@@Base+0x10ec>
  40b270:	ldr	w19, [x21]
  40b274:	mov	x0, x20
  40b278:	bl	401d30 <free@plt>
  40b27c:	str	w19, [x21]
  40b280:	mov	x20, #0x0                   	// #0
  40b284:	mov	x0, x20
  40b288:	ldp	x19, x20, [sp, #16]
  40b28c:	ldr	x21, [sp, #32]
  40b290:	ldp	x29, x30, [sp], #48
  40b294:	ret
  40b298:	stp	x29, x30, [sp, #-48]!
  40b29c:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40b2a0:	mov	x29, sp
  40b2a4:	stp	x19, x20, [sp, #16]
  40b2a8:	mov	x20, x1
  40b2ac:	add	x1, x2, #0x780
  40b2b0:	bl	401bd0 <fopen@plt>
  40b2b4:	cbz	x0, 40b2f8 <argp_parse@@Base+0x1168>
  40b2b8:	mov	x1, x20
  40b2bc:	mov	x19, x0
  40b2c0:	str	x21, [sp, #32]
  40b2c4:	bl	40b040 <argp_parse@@Base+0xeb0>
  40b2c8:	mov	x20, x0
  40b2cc:	bl	401ea0 <__errno_location@plt>
  40b2d0:	mov	x21, x0
  40b2d4:	mov	x0, x19
  40b2d8:	ldr	w19, [x21]
  40b2dc:	bl	401bc0 <fclose@plt>
  40b2e0:	cbnz	w0, 40b30c <argp_parse@@Base+0x117c>
  40b2e4:	mov	x0, x20
  40b2e8:	ldp	x19, x20, [sp, #16]
  40b2ec:	ldr	x21, [sp, #32]
  40b2f0:	ldp	x29, x30, [sp], #48
  40b2f4:	ret
  40b2f8:	mov	x20, #0x0                   	// #0
  40b2fc:	mov	x0, x20
  40b300:	ldp	x19, x20, [sp, #16]
  40b304:	ldp	x29, x30, [sp], #48
  40b308:	ret
  40b30c:	cbz	x20, 40b31c <argp_parse@@Base+0x118c>
  40b310:	ldr	w19, [x21]
  40b314:	mov	x0, x20
  40b318:	bl	401d30 <free@plt>
  40b31c:	str	w19, [x21]
  40b320:	mov	x20, #0x0                   	// #0
  40b324:	mov	x0, x20
  40b328:	ldp	x19, x20, [sp, #16]
  40b32c:	ldr	x21, [sp, #32]
  40b330:	ldp	x29, x30, [sp], #48
  40b334:	ret
  40b338:	sub	sp, sp, #0x50
  40b33c:	stp	x29, x30, [sp, #32]
  40b340:	add	x29, sp, #0x20
  40b344:	stp	x19, x20, [sp, #48]
  40b348:	mov	x20, x4
  40b34c:	mov	x19, x5
  40b350:	str	x21, [sp, #64]
  40b354:	mov	x21, x0
  40b358:	cbz	x1, 40b508 <argp_parse@@Base+0x1378>
  40b35c:	mov	x4, x3
  40b360:	mov	x3, x2
  40b364:	mov	x2, x1
  40b368:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b36c:	add	x1, x1, #0x788
  40b370:	bl	401ed0 <fprintf@plt>
  40b374:	mov	w3, #0x7df                 	// #2015
  40b378:	mov	x0, x21
  40b37c:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40b380:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b384:	add	x2, x2, #0x7a0
  40b388:	add	x1, x1, #0xac0
  40b38c:	bl	401ed0 <fprintf@plt>
  40b390:	mov	x3, x21
  40b394:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40b398:	mov	x2, #0xca                  	// #202
  40b39c:	add	x0, x0, #0x7a8
  40b3a0:	mov	x1, #0x1                   	// #1
  40b3a4:	bl	401d80 <fwrite@plt>
  40b3a8:	cmp	x19, #0x5
  40b3ac:	b.eq	40b590 <argp_parse@@Base+0x1400>  // b.none
  40b3b0:	b.ls	40b410 <argp_parse@@Base+0x1280>  // b.plast
  40b3b4:	cmp	x19, #0x8
  40b3b8:	b.eq	40b5bc <argp_parse@@Base+0x142c>  // b.none
  40b3bc:	b.ls	40b448 <argp_parse@@Base+0x12b8>  // b.plast
  40b3c0:	cmp	x19, #0x9
  40b3c4:	b.ne	40b4a0 <argp_parse@@Base+0x1310>  // b.any
  40b3c8:	ldp	x7, x8, [x20, #40]
  40b3cc:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b3d0:	ldp	x2, x3, [x20]
  40b3d4:	mov	x0, x21
  40b3d8:	ldr	x4, [x20, #16]
  40b3dc:	add	x1, x1, #0x990
  40b3e0:	ldp	x5, x6, [x20, #24]
  40b3e4:	str	x8, [sp]
  40b3e8:	ldr	x8, [x20, #56]
  40b3ec:	str	x8, [sp, #8]
  40b3f0:	ldr	x8, [x20, #64]
  40b3f4:	str	x8, [sp, #16]
  40b3f8:	bl	401ed0 <fprintf@plt>
  40b3fc:	ldp	x29, x30, [sp, #32]
  40b400:	ldp	x19, x20, [sp, #48]
  40b404:	ldr	x21, [sp, #64]
  40b408:	add	sp, sp, #0x50
  40b40c:	ret
  40b410:	cmp	x19, #0x3
  40b414:	b.eq	40b518 <argp_parse@@Base+0x1388>  // b.none
  40b418:	cmp	x19, #0x4
  40b41c:	b.ne	40b490 <argp_parse@@Base+0x1300>  // b.any
  40b420:	ldp	x2, x3, [x20]
  40b424:	mov	x0, x21
  40b428:	ldp	x4, x5, [x20, #16]
  40b42c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b430:	ldp	x29, x30, [sp, #32]
  40b434:	add	x1, x1, #0x8c0
  40b438:	ldp	x19, x20, [sp, #48]
  40b43c:	ldr	x21, [sp, #64]
  40b440:	add	sp, sp, #0x50
  40b444:	b	401ed0 <fprintf@plt>
  40b448:	cmp	x19, #0x6
  40b44c:	b.eq	40b540 <argp_parse@@Base+0x13b0>  // b.none
  40b450:	cmp	x19, #0x7
  40b454:	b.ne	40b4a0 <argp_parse@@Base+0x1310>  // b.any
  40b458:	ldp	x2, x3, [x20]
  40b45c:	mov	x0, x21
  40b460:	ldp	x4, x5, [x20, #16]
  40b464:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b468:	ldp	x6, x7, [x20, #32]
  40b46c:	add	x1, x1, #0x930
  40b470:	ldr	x8, [x20, #48]
  40b474:	str	x8, [sp]
  40b478:	bl	401ed0 <fprintf@plt>
  40b47c:	ldp	x29, x30, [sp, #32]
  40b480:	ldp	x19, x20, [sp, #48]
  40b484:	ldr	x21, [sp, #64]
  40b488:	add	sp, sp, #0x50
  40b48c:	ret
  40b490:	cmp	x19, #0x2
  40b494:	b.eq	40b56c <argp_parse@@Base+0x13dc>  // b.none
  40b498:	cmp	x19, #0x3
  40b49c:	b.ne	40b4d8 <argp_parse@@Base+0x1348>  // b.any
  40b4a0:	ldp	x7, x8, [x20, #40]
  40b4a4:	mov	x0, x21
  40b4a8:	ldp	x2, x3, [x20]
  40b4ac:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b4b0:	ldr	x4, [x20, #16]
  40b4b4:	add	x1, x1, #0x9c8
  40b4b8:	ldp	x5, x6, [x20, #24]
  40b4bc:	str	x8, [sp]
  40b4c0:	ldr	x8, [x20, #56]
  40b4c4:	str	x8, [sp, #8]
  40b4c8:	ldr	x8, [x20, #64]
  40b4cc:	str	x8, [sp, #16]
  40b4d0:	bl	401ed0 <fprintf@plt>
  40b4d4:	b	40b3fc <argp_parse@@Base+0x126c>
  40b4d8:	cbz	x19, 40b5fc <argp_parse@@Base+0x146c>
  40b4dc:	cmp	x19, #0x1
  40b4e0:	b.ne	40b4a0 <argp_parse@@Base+0x1310>  // b.any
  40b4e4:	ldr	x2, [x20]
  40b4e8:	mov	x0, x21
  40b4ec:	ldp	x29, x30, [sp, #32]
  40b4f0:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b4f4:	ldp	x19, x20, [sp, #48]
  40b4f8:	add	x1, x1, #0x878
  40b4fc:	ldr	x21, [sp, #64]
  40b500:	add	sp, sp, #0x50
  40b504:	b	401ed0 <fprintf@plt>
  40b508:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b50c:	add	x1, x1, #0x798
  40b510:	bl	401ed0 <fprintf@plt>
  40b514:	b	40b374 <argp_parse@@Base+0x11e4>
  40b518:	ldp	x2, x3, [x20]
  40b51c:	mov	x0, x21
  40b520:	ldr	x4, [x20, #16]
  40b524:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b528:	ldp	x29, x30, [sp, #32]
  40b52c:	add	x1, x1, #0x8a0
  40b530:	ldp	x19, x20, [sp, #48]
  40b534:	ldr	x21, [sp, #64]
  40b538:	add	sp, sp, #0x50
  40b53c:	b	401ed0 <fprintf@plt>
  40b540:	ldp	x2, x3, [x20]
  40b544:	mov	x0, x21
  40b548:	ldp	x4, x5, [x20, #16]
  40b54c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b550:	ldp	x29, x30, [sp, #32]
  40b554:	add	x1, x1, #0x908
  40b558:	ldp	x6, x7, [x20, #32]
  40b55c:	ldp	x19, x20, [sp, #48]
  40b560:	ldr	x21, [sp, #64]
  40b564:	add	sp, sp, #0x50
  40b568:	b	401ed0 <fprintf@plt>
  40b56c:	ldp	x2, x3, [x20]
  40b570:	mov	x0, x21
  40b574:	ldp	x29, x30, [sp, #32]
  40b578:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b57c:	ldp	x19, x20, [sp, #48]
  40b580:	add	x1, x1, #0x888
  40b584:	ldr	x21, [sp, #64]
  40b588:	add	sp, sp, #0x50
  40b58c:	b	401ed0 <fprintf@plt>
  40b590:	ldp	x2, x3, [x20]
  40b594:	mov	x0, x21
  40b598:	ldp	x4, x5, [x20, #16]
  40b59c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b5a0:	ldp	x29, x30, [sp, #32]
  40b5a4:	add	x1, x1, #0x8e0
  40b5a8:	ldr	x6, [x20, #32]
  40b5ac:	ldp	x19, x20, [sp, #48]
  40b5b0:	ldr	x21, [sp, #64]
  40b5b4:	add	sp, sp, #0x50
  40b5b8:	b	401ed0 <fprintf@plt>
  40b5bc:	ldr	x8, [x20, #48]
  40b5c0:	mov	x0, x21
  40b5c4:	ldp	x2, x3, [x20]
  40b5c8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b5cc:	ldp	x4, x5, [x20, #16]
  40b5d0:	add	x1, x1, #0x960
  40b5d4:	ldp	x6, x7, [x20, #32]
  40b5d8:	str	x8, [sp]
  40b5dc:	ldr	x8, [x20, #56]
  40b5e0:	str	x8, [sp, #8]
  40b5e4:	bl	401ed0 <fprintf@plt>
  40b5e8:	ldp	x29, x30, [sp, #32]
  40b5ec:	ldp	x19, x20, [sp, #48]
  40b5f0:	ldr	x21, [sp, #64]
  40b5f4:	add	sp, sp, #0x50
  40b5f8:	ret
  40b5fc:	bl	401cd0 <abort@plt>
  40b600:	ldr	x5, [x4]
  40b604:	cbz	x5, 40b620 <argp_parse@@Base+0x1490>
  40b608:	mov	x5, #0x0                   	// #0
  40b60c:	nop
  40b610:	add	x5, x5, #0x1
  40b614:	ldr	x6, [x4, x5, lsl #3]
  40b618:	cbnz	x6, 40b610 <argp_parse@@Base+0x1480>
  40b61c:	b	40b338 <argp_parse@@Base+0x11a8>
  40b620:	mov	x5, #0x0                   	// #0
  40b624:	b	40b338 <argp_parse@@Base+0x11a8>
  40b628:	sub	sp, sp, #0xa0
  40b62c:	mov	x7, x4
  40b630:	stp	x29, x30, [sp, #32]
  40b634:	add	x29, sp, #0x20
  40b638:	ldr	x6, [x4]
  40b63c:	stp	x19, x20, [sp, #48]
  40b640:	mov	x20, x0
  40b644:	ldr	w0, [x4, #24]
  40b648:	add	x5, x6, #0xf
  40b64c:	ldr	x7, [x7, #8]
  40b650:	str	x21, [sp, #64]
  40b654:	mov	x4, x3
  40b658:	and	x5, x5, #0xfffffffffffffff8
  40b65c:	tbnz	w0, #31, 40b8d4 <argp_parse@@Base+0x1744>
  40b660:	ldr	x21, [x6]
  40b664:	cbz	x21, 40b914 <argp_parse@@Base+0x1784>
  40b668:	ldr	x0, [x5]
  40b66c:	str	x0, [sp, #88]
  40b670:	add	x3, x5, #0xf
  40b674:	and	x3, x3, #0xfffffffffffffff8
  40b678:	cbz	x0, 40b90c <argp_parse@@Base+0x177c>
  40b67c:	add	x5, x3, #0xf
  40b680:	and	x5, x5, #0xfffffffffffffff8
  40b684:	ldr	x0, [x3]
  40b688:	str	x0, [sp, #96]
  40b68c:	cbz	x0, 40b7b4 <argp_parse@@Base+0x1624>
  40b690:	add	x6, x5, #0xf
  40b694:	and	x6, x6, #0xfffffffffffffff8
  40b698:	ldr	x0, [x5]
  40b69c:	str	x0, [sp, #104]
  40b6a0:	cbz	x0, 40b91c <argp_parse@@Base+0x178c>
  40b6a4:	ldr	x3, [x6]
  40b6a8:	str	x3, [sp, #112]
  40b6ac:	add	x0, x6, #0xf
  40b6b0:	and	x0, x0, #0xfffffffffffffff8
  40b6b4:	cbz	x3, 40b924 <argp_parse@@Base+0x1794>
  40b6b8:	add	x6, x0, #0xf
  40b6bc:	and	x6, x6, #0xfffffffffffffff8
  40b6c0:	ldr	x0, [x0]
  40b6c4:	str	x0, [sp, #120]
  40b6c8:	cbz	x0, 40b92c <argp_parse@@Base+0x179c>
  40b6cc:	ldr	x3, [x6]
  40b6d0:	str	x3, [sp, #128]
  40b6d4:	add	x0, x6, #0xf
  40b6d8:	and	x0, x0, #0xfffffffffffffff8
  40b6dc:	cbz	x3, 40b934 <argp_parse@@Base+0x17a4>
  40b6e0:	add	x3, x0, #0xf
  40b6e4:	and	x3, x3, #0xfffffffffffffff8
  40b6e8:	ldr	x0, [x0]
  40b6ec:	str	x0, [sp, #136]
  40b6f0:	cbz	x0, 40b93c <argp_parse@@Base+0x17ac>
  40b6f4:	add	x6, x3, #0xf
  40b6f8:	and	x6, x6, #0xfffffffffffffff8
  40b6fc:	ldr	x0, [x3]
  40b700:	str	x0, [sp, #144]
  40b704:	cbz	x0, 40b944 <argp_parse@@Base+0x17b4>
  40b708:	ldr	x0, [x6]
  40b70c:	cmp	x0, #0x0
  40b710:	cset	x19, ne  // ne = any
  40b714:	add	x19, x19, #0x9
  40b718:	cbz	x1, 40b7bc <argp_parse@@Base+0x162c>
  40b71c:	mov	x3, x2
  40b720:	mov	x0, x20
  40b724:	mov	x2, x1
  40b728:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b72c:	add	x1, x1, #0x788
  40b730:	bl	401ed0 <fprintf@plt>
  40b734:	mov	w3, #0x7df                 	// #2015
  40b738:	mov	x0, x20
  40b73c:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40b740:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b744:	add	x2, x2, #0x7a0
  40b748:	add	x1, x1, #0xac0
  40b74c:	bl	401ed0 <fprintf@plt>
  40b750:	mov	x3, x20
  40b754:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40b758:	mov	x2, #0xca                  	// #202
  40b75c:	add	x0, x0, #0x7a8
  40b760:	mov	x1, #0x1                   	// #1
  40b764:	bl	401d80 <fwrite@plt>
  40b768:	cmp	x19, #0x5
  40b76c:	b.eq	40ba74 <argp_parse@@Base+0x18e4>  // b.none
  40b770:	b.hi	40b85c <argp_parse@@Base+0x16cc>  // b.pmore
  40b774:	cmp	x19, #0x3
  40b778:	b.eq	40bb10 <argp_parse@@Base+0x1980>  // b.none
  40b77c:	b.ls	40b7d4 <argp_parse@@Base+0x1644>  // b.plast
  40b780:	cmp	x19, #0x4
  40b784:	b.ne	40b7e4 <argp_parse@@Base+0x1654>  // b.any
  40b788:	mov	x0, x20
  40b78c:	mov	x2, x21
  40b790:	ldp	x29, x30, [sp, #32]
  40b794:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b798:	ldp	x19, x20, [sp, #48]
  40b79c:	add	x1, x1, #0x8c0
  40b7a0:	ldp	x3, x4, [sp, #88]
  40b7a4:	ldr	x21, [sp, #64]
  40b7a8:	ldr	x5, [sp, #104]
  40b7ac:	add	sp, sp, #0xa0
  40b7b0:	b	401ed0 <fprintf@plt>
  40b7b4:	mov	x19, #0x2                   	// #2
  40b7b8:	cbnz	x1, 40b71c <argp_parse@@Base+0x158c>
  40b7bc:	mov	x3, x4
  40b7c0:	mov	x0, x20
  40b7c4:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b7c8:	add	x1, x1, #0x798
  40b7cc:	bl	401ed0 <fprintf@plt>
  40b7d0:	b	40b734 <argp_parse@@Base+0x15a4>
  40b7d4:	cmp	x19, #0x2
  40b7d8:	b.eq	40bb38 <argp_parse@@Base+0x19a8>  // b.none
  40b7dc:	cmp	x19, #0x3
  40b7e0:	b.ne	40b82c <argp_parse@@Base+0x169c>  // b.any
  40b7e4:	ldp	x3, x4, [sp, #88]
  40b7e8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b7ec:	ldp	x5, x6, [sp, #104]
  40b7f0:	mov	x2, x21
  40b7f4:	mov	x0, x20
  40b7f8:	add	x1, x1, #0x9c8
  40b7fc:	ldp	x7, x8, [sp, #120]
  40b800:	str	x8, [sp]
  40b804:	ldr	x8, [sp, #136]
  40b808:	str	x8, [sp, #8]
  40b80c:	ldr	x8, [sp, #144]
  40b810:	str	x8, [sp, #16]
  40b814:	bl	401ed0 <fprintf@plt>
  40b818:	ldp	x29, x30, [sp, #32]
  40b81c:	ldp	x19, x20, [sp, #48]
  40b820:	ldr	x21, [sp, #64]
  40b824:	add	sp, sp, #0xa0
  40b828:	ret
  40b82c:	cbz	x19, 40bb90 <argp_parse@@Base+0x1a00>
  40b830:	cmp	x19, #0x1
  40b834:	b.ne	40b7e4 <argp_parse@@Base+0x1654>  // b.any
  40b838:	mov	x0, x20
  40b83c:	mov	x2, x21
  40b840:	ldp	x29, x30, [sp, #32]
  40b844:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b848:	ldp	x19, x20, [sp, #48]
  40b84c:	add	x1, x1, #0x878
  40b850:	ldr	x21, [sp, #64]
  40b854:	add	sp, sp, #0xa0
  40b858:	b	401ed0 <fprintf@plt>
  40b85c:	cmp	x19, #0x8
  40b860:	b.eq	40bad0 <argp_parse@@Base+0x1940>  // b.none
  40b864:	b.ls	40b88c <argp_parse@@Base+0x16fc>  // b.plast
  40b868:	cmp	x19, #0x9
  40b86c:	b.ne	40b7e4 <argp_parse@@Base+0x1654>  // b.any
  40b870:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b874:	mov	x2, x21
  40b878:	mov	x0, x20
  40b87c:	add	x1, x1, #0x990
  40b880:	ldp	x3, x4, [sp, #88]
  40b884:	ldp	x5, x6, [sp, #104]
  40b888:	b	40b7fc <argp_parse@@Base+0x166c>
  40b88c:	cmp	x19, #0x6
  40b890:	b.eq	40baa0 <argp_parse@@Base+0x1910>  // b.none
  40b894:	cmp	x19, #0x7
  40b898:	b.ne	40b7e4 <argp_parse@@Base+0x1654>  // b.any
  40b89c:	ldp	x3, x4, [sp, #88]
  40b8a0:	mov	x2, x21
  40b8a4:	ldp	x5, x6, [sp, #104]
  40b8a8:	mov	x0, x20
  40b8ac:	ldp	x7, x8, [sp, #120]
  40b8b0:	str	x8, [sp]
  40b8b4:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40b8b8:	add	x1, x1, #0x930
  40b8bc:	bl	401ed0 <fprintf@plt>
  40b8c0:	ldp	x29, x30, [sp, #32]
  40b8c4:	ldp	x19, x20, [sp, #48]
  40b8c8:	ldr	x21, [sp, #64]
  40b8cc:	add	sp, sp, #0xa0
  40b8d0:	ret
  40b8d4:	add	w3, w0, #0x8
  40b8d8:	cmp	w3, #0x0
  40b8dc:	b.gt	40b660 <argp_parse@@Base+0x14d0>
  40b8e0:	ldr	x21, [x7, w0, sxtw]
  40b8e4:	cbz	x21, 40b914 <argp_parse@@Base+0x1784>
  40b8e8:	cbz	w3, 40bb60 <argp_parse@@Base+0x19d0>
  40b8ec:	add	w8, w0, #0x10
  40b8f0:	cmp	w8, #0x0
  40b8f4:	b.le	40b94c <argp_parse@@Base+0x17bc>
  40b8f8:	mov	x3, x5
  40b8fc:	mov	x5, x6
  40b900:	ldr	x0, [x5]
  40b904:	str	x0, [sp, #88]
  40b908:	cbnz	x0, 40b67c <argp_parse@@Base+0x14ec>
  40b90c:	mov	x19, #0x1                   	// #1
  40b910:	b	40b718 <argp_parse@@Base+0x1588>
  40b914:	mov	x19, #0x0                   	// #0
  40b918:	b	40b718 <argp_parse@@Base+0x1588>
  40b91c:	mov	x19, #0x3                   	// #3
  40b920:	b	40b718 <argp_parse@@Base+0x1588>
  40b924:	mov	x19, #0x4                   	// #4
  40b928:	b	40b718 <argp_parse@@Base+0x1588>
  40b92c:	mov	x19, #0x5                   	// #5
  40b930:	b	40b718 <argp_parse@@Base+0x1588>
  40b934:	mov	x19, #0x6                   	// #6
  40b938:	b	40b718 <argp_parse@@Base+0x1588>
  40b93c:	mov	x19, #0x7                   	// #7
  40b940:	b	40b718 <argp_parse@@Base+0x1588>
  40b944:	mov	x19, #0x8                   	// #8
  40b948:	b	40b718 <argp_parse@@Base+0x1588>
  40b94c:	ldr	x3, [x7, w3, sxtw]
  40b950:	str	x3, [sp, #88]
  40b954:	cbz	x3, 40b90c <argp_parse@@Base+0x177c>
  40b958:	cbz	w8, 40bb88 <argp_parse@@Base+0x19f8>
  40b95c:	add	w9, w0, #0x18
  40b960:	mov	x3, x6
  40b964:	cmp	w9, #0x0
  40b968:	b.gt	40b684 <argp_parse@@Base+0x14f4>
  40b96c:	ldr	x3, [x7, w8, sxtw]
  40b970:	str	x3, [sp, #96]
  40b974:	cbz	x3, 40b7b4 <argp_parse@@Base+0x1624>
  40b978:	cbz	w9, 40bb80 <argp_parse@@Base+0x19f0>
  40b97c:	add	w3, w0, #0x20
  40b980:	cmp	w3, #0x0
  40b984:	b.le	40b998 <argp_parse@@Base+0x1808>
  40b988:	add	x0, x6, #0xf
  40b98c:	mov	x5, x6
  40b990:	and	x6, x0, #0xfffffffffffffff8
  40b994:	b	40b698 <argp_parse@@Base+0x1508>
  40b998:	ldr	x5, [x7, w9, sxtw]
  40b99c:	str	x5, [sp, #104]
  40b9a0:	cbz	x5, 40b91c <argp_parse@@Base+0x178c>
  40b9a4:	cbz	w3, 40b6a4 <argp_parse@@Base+0x1514>
  40b9a8:	add	w5, w0, #0x28
  40b9ac:	cmp	w5, #0x0
  40b9b0:	b.gt	40b6a4 <argp_parse@@Base+0x1514>
  40b9b4:	ldr	x3, [x7, w3, sxtw]
  40b9b8:	str	x3, [sp, #112]
  40b9bc:	cbz	x3, 40b924 <argp_parse@@Base+0x1794>
  40b9c0:	cbz	w5, 40bb78 <argp_parse@@Base+0x19e8>
  40b9c4:	add	w3, w0, #0x30
  40b9c8:	cmp	w3, #0x0
  40b9cc:	b.le	40b9e0 <argp_parse@@Base+0x1850>
  40b9d0:	add	x3, x6, #0xf
  40b9d4:	mov	x0, x6
  40b9d8:	and	x6, x3, #0xfffffffffffffff8
  40b9dc:	b	40b6c0 <argp_parse@@Base+0x1530>
  40b9e0:	ldr	x5, [x7, w5, sxtw]
  40b9e4:	str	x5, [sp, #120]
  40b9e8:	cbz	x5, 40b92c <argp_parse@@Base+0x179c>
  40b9ec:	cbz	w3, 40b6cc <argp_parse@@Base+0x153c>
  40b9f0:	add	w5, w0, #0x38
  40b9f4:	cmp	w5, #0x0
  40b9f8:	b.gt	40b6cc <argp_parse@@Base+0x153c>
  40b9fc:	ldr	x3, [x7, w3, sxtw]
  40ba00:	str	x3, [sp, #128]
  40ba04:	cbz	x3, 40b934 <argp_parse@@Base+0x17a4>
  40ba08:	cbz	w5, 40bb70 <argp_parse@@Base+0x19e0>
  40ba0c:	add	w8, w0, #0x40
  40ba10:	cmp	w8, #0x0
  40ba14:	b.le	40ba28 <argp_parse@@Base+0x1898>
  40ba18:	add	x3, x6, #0xf
  40ba1c:	mov	x0, x6
  40ba20:	and	x3, x3, #0xfffffffffffffff8
  40ba24:	b	40b6e8 <argp_parse@@Base+0x1558>
  40ba28:	ldr	x3, [x7, w5, sxtw]
  40ba2c:	str	x3, [sp, #136]
  40ba30:	cbz	x3, 40b93c <argp_parse@@Base+0x17ac>
  40ba34:	cbz	w8, 40bb68 <argp_parse@@Base+0x19d8>
  40ba38:	add	w3, w0, #0x48
  40ba3c:	cmp	w3, #0x0
  40ba40:	b.le	40ba54 <argp_parse@@Base+0x18c4>
  40ba44:	add	x0, x6, #0xf
  40ba48:	mov	x3, x6
  40ba4c:	and	x6, x0, #0xfffffffffffffff8
  40ba50:	b	40b6fc <argp_parse@@Base+0x156c>
  40ba54:	ldr	x5, [x7, w8, sxtw]
  40ba58:	str	x5, [sp, #144]
  40ba5c:	cbz	x5, 40b944 <argp_parse@@Base+0x17b4>
  40ba60:	cbz	w3, 40b708 <argp_parse@@Base+0x1578>
  40ba64:	add	x7, x7, w3, sxtw
  40ba68:	cmn	w0, #0x4f
  40ba6c:	csel	x6, x7, x6, lt  // lt = tstop
  40ba70:	b	40b708 <argp_parse@@Base+0x1578>
  40ba74:	mov	x0, x20
  40ba78:	mov	x2, x21
  40ba7c:	ldp	x29, x30, [sp, #32]
  40ba80:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40ba84:	ldp	x19, x20, [sp, #48]
  40ba88:	add	x1, x1, #0x8e0
  40ba8c:	ldp	x3, x4, [sp, #88]
  40ba90:	ldp	x5, x6, [sp, #104]
  40ba94:	ldr	x21, [sp, #64]
  40ba98:	add	sp, sp, #0xa0
  40ba9c:	b	401ed0 <fprintf@plt>
  40baa0:	mov	x0, x20
  40baa4:	mov	x2, x21
  40baa8:	ldp	x29, x30, [sp, #32]
  40baac:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40bab0:	ldp	x19, x20, [sp, #48]
  40bab4:	add	x1, x1, #0x908
  40bab8:	ldp	x3, x4, [sp, #88]
  40babc:	ldp	x5, x6, [sp, #104]
  40bac0:	ldr	x21, [sp, #64]
  40bac4:	ldr	x7, [sp, #120]
  40bac8:	add	sp, sp, #0xa0
  40bacc:	b	401ed0 <fprintf@plt>
  40bad0:	ldp	x3, x4, [sp, #88]
  40bad4:	mov	x2, x21
  40bad8:	ldp	x5, x6, [sp, #104]
  40badc:	mov	x0, x20
  40bae0:	ldp	x7, x8, [sp, #120]
  40bae4:	str	x8, [sp]
  40bae8:	ldr	x8, [sp, #136]
  40baec:	str	x8, [sp, #8]
  40baf0:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40baf4:	add	x1, x1, #0x960
  40baf8:	bl	401ed0 <fprintf@plt>
  40bafc:	ldp	x29, x30, [sp, #32]
  40bb00:	ldp	x19, x20, [sp, #48]
  40bb04:	ldr	x21, [sp, #64]
  40bb08:	add	sp, sp, #0xa0
  40bb0c:	ret
  40bb10:	mov	x0, x20
  40bb14:	mov	x2, x21
  40bb18:	ldp	x29, x30, [sp, #32]
  40bb1c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40bb20:	ldp	x19, x20, [sp, #48]
  40bb24:	add	x1, x1, #0x8a0
  40bb28:	ldp	x3, x4, [sp, #88]
  40bb2c:	ldr	x21, [sp, #64]
  40bb30:	add	sp, sp, #0xa0
  40bb34:	b	401ed0 <fprintf@plt>
  40bb38:	mov	x0, x20
  40bb3c:	mov	x2, x21
  40bb40:	ldp	x29, x30, [sp, #32]
  40bb44:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40bb48:	ldp	x19, x20, [sp, #48]
  40bb4c:	add	x1, x1, #0x888
  40bb50:	ldr	x21, [sp, #64]
  40bb54:	ldr	x3, [sp, #88]
  40bb58:	add	sp, sp, #0xa0
  40bb5c:	b	401ed0 <fprintf@plt>
  40bb60:	mov	x5, x6
  40bb64:	b	40b668 <argp_parse@@Base+0x14d8>
  40bb68:	mov	x3, x6
  40bb6c:	b	40b6f4 <argp_parse@@Base+0x1564>
  40bb70:	mov	x0, x6
  40bb74:	b	40b6e0 <argp_parse@@Base+0x1550>
  40bb78:	mov	x0, x6
  40bb7c:	b	40b6b8 <argp_parse@@Base+0x1528>
  40bb80:	mov	x5, x6
  40bb84:	b	40b690 <argp_parse@@Base+0x1500>
  40bb88:	mov	x3, x6
  40bb8c:	b	40b67c <argp_parse@@Base+0x14ec>
  40bb90:	bl	401cd0 <abort@plt>
  40bb94:	nop
  40bb98:	stp	x29, x30, [sp, #-288]!
  40bb9c:	mov	w10, #0xffffffe0            	// #-32
  40bba0:	mov	w9, #0xffffff80            	// #-128
  40bba4:	mov	x29, sp
  40bba8:	add	x11, sp, #0x100
  40bbac:	add	x12, sp, #0x120
  40bbb0:	stp	x12, x12, [sp, #16]
  40bbb4:	str	x11, [sp, #32]
  40bbb8:	stp	w10, w9, [sp, #40]
  40bbbc:	str	x4, [sp, #48]
  40bbc0:	str	q0, [sp, #128]
  40bbc4:	str	q1, [sp, #144]
  40bbc8:	str	q2, [sp, #160]
  40bbcc:	str	q3, [sp, #176]
  40bbd0:	str	q4, [sp, #192]
  40bbd4:	str	q5, [sp, #208]
  40bbd8:	str	q6, [sp, #224]
  40bbdc:	str	q7, [sp, #240]
  40bbe0:	stp	x4, x5, [sp, #256]
  40bbe4:	stp	x6, x7, [sp, #272]
  40bbe8:	cbz	x4, 40bcd8 <argp_parse@@Base+0x1b48>
  40bbec:	str	x5, [sp, #56]
  40bbf0:	cbz	x5, 40bcd0 <argp_parse@@Base+0x1b40>
  40bbf4:	str	x6, [sp, #64]
  40bbf8:	mov	x5, #0x2                   	// #2
  40bbfc:	cbz	x6, 40bc70 <argp_parse@@Base+0x1ae0>
  40bc00:	str	x7, [sp, #72]
  40bc04:	mov	x5, #0x3                   	// #3
  40bc08:	cbz	x7, 40bc70 <argp_parse@@Base+0x1ae0>
  40bc0c:	ldr	x4, [sp, #288]
  40bc10:	str	x4, [sp, #80]
  40bc14:	mov	x5, #0x4                   	// #4
  40bc18:	cbz	x4, 40bc70 <argp_parse@@Base+0x1ae0>
  40bc1c:	ldr	x5, [sp, #296]
  40bc20:	str	x5, [sp, #88]
  40bc24:	add	x4, sp, #0x130
  40bc28:	cbz	x5, 40bc80 <argp_parse@@Base+0x1af0>
  40bc2c:	ldr	x5, [x4]
  40bc30:	str	x5, [sp, #96]
  40bc34:	add	x4, x4, #0x8
  40bc38:	cbz	x5, 40bc94 <argp_parse@@Base+0x1b04>
  40bc3c:	ldr	x5, [x4]
  40bc40:	str	x5, [sp, #104]
  40bc44:	add	x4, x4, #0x8
  40bc48:	cbz	x5, 40bca8 <argp_parse@@Base+0x1b18>
  40bc4c:	ldr	x5, [x4]
  40bc50:	str	x5, [sp, #112]
  40bc54:	add	x4, x4, #0x8
  40bc58:	cbz	x5, 40bcbc <argp_parse@@Base+0x1b2c>
  40bc5c:	ldr	x4, [x4]
  40bc60:	str	x4, [sp, #120]
  40bc64:	cmp	x4, #0x0
  40bc68:	cset	x5, ne  // ne = any
  40bc6c:	add	x5, x5, #0x9
  40bc70:	add	x4, sp, #0x30
  40bc74:	bl	40b338 <argp_parse@@Base+0x11a8>
  40bc78:	ldp	x29, x30, [sp], #288
  40bc7c:	ret
  40bc80:	add	x4, sp, #0x30
  40bc84:	mov	x5, #0x5                   	// #5
  40bc88:	bl	40b338 <argp_parse@@Base+0x11a8>
  40bc8c:	ldp	x29, x30, [sp], #288
  40bc90:	ret
  40bc94:	add	x4, sp, #0x30
  40bc98:	mov	x5, #0x6                   	// #6
  40bc9c:	bl	40b338 <argp_parse@@Base+0x11a8>
  40bca0:	ldp	x29, x30, [sp], #288
  40bca4:	ret
  40bca8:	add	x4, sp, #0x30
  40bcac:	mov	x5, #0x7                   	// #7
  40bcb0:	bl	40b338 <argp_parse@@Base+0x11a8>
  40bcb4:	ldp	x29, x30, [sp], #288
  40bcb8:	ret
  40bcbc:	add	x4, sp, #0x30
  40bcc0:	mov	x5, #0x8                   	// #8
  40bcc4:	bl	40b338 <argp_parse@@Base+0x11a8>
  40bcc8:	ldp	x29, x30, [sp], #288
  40bccc:	ret
  40bcd0:	mov	x5, #0x1                   	// #1
  40bcd4:	b	40bc70 <argp_parse@@Base+0x1ae0>
  40bcd8:	mov	x5, #0x0                   	// #0
  40bcdc:	b	40bc70 <argp_parse@@Base+0x1ae0>
  40bce0:	stp	x29, x30, [sp, #-16]!
  40bce4:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40bce8:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40bcec:	mov	x29, sp
  40bcf0:	add	x1, x1, #0xa08
  40bcf4:	add	x0, x0, #0xa20
  40bcf8:	bl	401e80 <printf@plt>
  40bcfc:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40bd00:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40bd04:	add	x2, x2, #0xa38
  40bd08:	add	x1, x1, #0x730
  40bd0c:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40bd10:	add	x0, x0, #0xa60
  40bd14:	bl	401e80 <printf@plt>
  40bd18:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  40bd1c:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40bd20:	ldp	x29, x30, [sp], #16
  40bd24:	add	x0, x0, #0xa78
  40bd28:	ldr	x3, [x1, #1256]
  40bd2c:	mov	x2, #0x3f                  	// #63
  40bd30:	mov	x1, #0x1                   	// #1
  40bd34:	b	401d80 <fwrite@plt>
  40bd38:	stp	x29, x30, [sp, #-32]!
  40bd3c:	umulh	x2, x0, x1
  40bd40:	mov	x29, sp
  40bd44:	str	x19, [sp, #16]
  40bd48:	cbnz	x2, 40bd70 <argp_parse@@Base+0x1be0>
  40bd4c:	mul	x19, x0, x1
  40bd50:	mov	x0, x19
  40bd54:	bl	401be0 <malloc@plt>
  40bd58:	cmp	x0, #0x0
  40bd5c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bd60:	b.ne	40bd70 <argp_parse@@Base+0x1be0>  // b.any
  40bd64:	ldr	x19, [sp, #16]
  40bd68:	ldp	x29, x30, [sp], #32
  40bd6c:	ret
  40bd70:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bd74:	nop
  40bd78:	stp	x29, x30, [sp, #-32]!
  40bd7c:	umulh	x4, x1, x2
  40bd80:	mov	x29, sp
  40bd84:	str	x19, [sp, #16]
  40bd88:	cbnz	x4, 40bdd0 <argp_parse@@Base+0x1c40>
  40bd8c:	mul	x19, x1, x2
  40bd90:	cmp	x19, #0x0
  40bd94:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40bd98:	b.ne	40bdbc <argp_parse@@Base+0x1c2c>  // b.any
  40bd9c:	mov	x1, x19
  40bda0:	bl	401c70 <realloc@plt>
  40bda4:	cmp	x0, #0x0
  40bda8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bdac:	b.ne	40bdd0 <argp_parse@@Base+0x1c40>  // b.any
  40bdb0:	ldr	x19, [sp, #16]
  40bdb4:	ldp	x29, x30, [sp], #32
  40bdb8:	ret
  40bdbc:	bl	401d30 <free@plt>
  40bdc0:	mov	x0, #0x0                   	// #0
  40bdc4:	ldr	x19, [sp, #16]
  40bdc8:	ldp	x29, x30, [sp], #32
  40bdcc:	ret
  40bdd0:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bdd4:	nop
  40bdd8:	stp	x29, x30, [sp, #-32]!
  40bddc:	mov	x4, x0
  40bde0:	mov	x29, sp
  40bde4:	ldr	x3, [x1]
  40bde8:	str	x19, [sp, #16]
  40bdec:	cbz	x0, 40be38 <argp_parse@@Base+0x1ca8>
  40bdf0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40bdf4:	udiv	x5, x5, x2
  40bdf8:	cmp	x5, x3
  40bdfc:	b.ls	40be6c <argp_parse@@Base+0x1cdc>  // b.plast
  40be00:	add	x19, x3, #0x1
  40be04:	add	x19, x19, x3, lsr #1
  40be08:	str	x19, [x1]
  40be0c:	mul	x19, x2, x19
  40be10:	cbz	x19, 40be58 <argp_parse@@Base+0x1cc8>
  40be14:	mov	x0, x4
  40be18:	mov	x1, x19
  40be1c:	bl	401c70 <realloc@plt>
  40be20:	cmp	x0, #0x0
  40be24:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40be28:	b.ne	40be6c <argp_parse@@Base+0x1cdc>  // b.any
  40be2c:	ldr	x19, [sp, #16]
  40be30:	ldp	x29, x30, [sp], #32
  40be34:	ret
  40be38:	cbnz	x3, 40be4c <argp_parse@@Base+0x1cbc>
  40be3c:	mov	x3, #0x80                  	// #128
  40be40:	cmp	x2, x3
  40be44:	udiv	x3, x3, x2
  40be48:	cinc	x3, x3, hi  // hi = pmore
  40be4c:	mul	x19, x2, x3
  40be50:	str	x3, [x1]
  40be54:	b	40be14 <argp_parse@@Base+0x1c84>
  40be58:	bl	401d30 <free@plt>
  40be5c:	mov	x0, #0x0                   	// #0
  40be60:	ldr	x19, [sp, #16]
  40be64:	ldp	x29, x30, [sp], #32
  40be68:	ret
  40be6c:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40be70:	stp	x29, x30, [sp, #-32]!
  40be74:	mov	x29, sp
  40be78:	str	x19, [sp, #16]
  40be7c:	mov	x19, x0
  40be80:	bl	401be0 <malloc@plt>
  40be84:	cmp	x0, #0x0
  40be88:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40be8c:	b.ne	40be9c <argp_parse@@Base+0x1d0c>  // b.any
  40be90:	ldr	x19, [sp, #16]
  40be94:	ldp	x29, x30, [sp], #32
  40be98:	ret
  40be9c:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bea0:	stp	x29, x30, [sp, #-32]!
  40bea4:	mov	x29, sp
  40bea8:	str	x19, [sp, #16]
  40beac:	mov	x19, x0
  40beb0:	bl	401be0 <malloc@plt>
  40beb4:	cmp	x0, #0x0
  40beb8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bebc:	b.ne	40becc <argp_parse@@Base+0x1d3c>  // b.any
  40bec0:	ldr	x19, [sp, #16]
  40bec4:	ldp	x29, x30, [sp], #32
  40bec8:	ret
  40becc:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bed0:	stp	x29, x30, [sp, #-32]!
  40bed4:	cmp	x1, #0x0
  40bed8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40bedc:	mov	x29, sp
  40bee0:	b.ne	40bf08 <argp_parse@@Base+0x1d78>  // b.any
  40bee4:	str	x19, [sp, #16]
  40bee8:	mov	x19, x1
  40beec:	bl	401c70 <realloc@plt>
  40bef0:	cmp	x0, #0x0
  40bef4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bef8:	b.ne	40bf18 <argp_parse@@Base+0x1d88>  // b.any
  40befc:	ldr	x19, [sp, #16]
  40bf00:	ldp	x29, x30, [sp], #32
  40bf04:	ret
  40bf08:	bl	401d30 <free@plt>
  40bf0c:	mov	x0, #0x0                   	// #0
  40bf10:	ldp	x29, x30, [sp], #32
  40bf14:	ret
  40bf18:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bf1c:	nop
  40bf20:	stp	x29, x30, [sp, #-16]!
  40bf24:	mov	x2, x1
  40bf28:	mov	x29, sp
  40bf2c:	ldr	x1, [x1]
  40bf30:	cbz	x0, 40bf5c <argp_parse@@Base+0x1dcc>
  40bf34:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40bf38:	cmp	x1, x3
  40bf3c:	b.cs	40bf6c <argp_parse@@Base+0x1ddc>  // b.hs, b.nlast
  40bf40:	add	x3, x1, #0x1
  40bf44:	add	x1, x3, x1, lsr #1
  40bf48:	str	x1, [x2]
  40bf4c:	bl	401c70 <realloc@plt>
  40bf50:	cbz	x0, 40bf6c <argp_parse@@Base+0x1ddc>
  40bf54:	ldp	x29, x30, [sp], #16
  40bf58:	ret
  40bf5c:	cmp	x1, #0x0
  40bf60:	mov	x3, #0x80                  	// #128
  40bf64:	csel	x1, x1, x3, ne  // ne = any
  40bf68:	b	40bf48 <argp_parse@@Base+0x1db8>
  40bf6c:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bf70:	stp	x29, x30, [sp, #-32]!
  40bf74:	mov	x1, #0x1                   	// #1
  40bf78:	mov	x29, sp
  40bf7c:	str	x19, [sp, #16]
  40bf80:	mov	x19, x0
  40bf84:	bl	401c50 <calloc@plt>
  40bf88:	cmp	x0, #0x0
  40bf8c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bf90:	b.ne	40bfa0 <argp_parse@@Base+0x1e10>  // b.any
  40bf94:	ldr	x19, [sp, #16]
  40bf98:	ldp	x29, x30, [sp], #32
  40bf9c:	ret
  40bfa0:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bfa4:	nop
  40bfa8:	stp	x29, x30, [sp, #-16]!
  40bfac:	mov	x29, sp
  40bfb0:	bl	401c50 <calloc@plt>
  40bfb4:	cbz	x0, 40bfc0 <argp_parse@@Base+0x1e30>
  40bfb8:	ldp	x29, x30, [sp], #16
  40bfbc:	ret
  40bfc0:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40bfc4:	nop
  40bfc8:	stp	x29, x30, [sp, #-32]!
  40bfcc:	mov	x29, sp
  40bfd0:	stp	x19, x20, [sp, #16]
  40bfd4:	mov	x19, x1
  40bfd8:	mov	x20, x0
  40bfdc:	mov	x0, x1
  40bfe0:	bl	401be0 <malloc@plt>
  40bfe4:	cmp	x0, #0x0
  40bfe8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40bfec:	b.ne	40c004 <argp_parse@@Base+0x1e74>  // b.any
  40bff0:	mov	x2, x19
  40bff4:	mov	x1, x20
  40bff8:	ldp	x19, x20, [sp, #16]
  40bffc:	ldp	x29, x30, [sp], #32
  40c000:	b	401aa0 <memcpy@plt>
  40c004:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40c008:	stp	x29, x30, [sp, #-32]!
  40c00c:	mov	x29, sp
  40c010:	stp	x19, x20, [sp, #16]
  40c014:	mov	x20, x0
  40c018:	bl	401b00 <strlen@plt>
  40c01c:	add	x19, x0, #0x1
  40c020:	mov	x0, x19
  40c024:	bl	401be0 <malloc@plt>
  40c028:	cbz	x0, 40c040 <argp_parse@@Base+0x1eb0>
  40c02c:	mov	x2, x19
  40c030:	mov	x1, x20
  40c034:	ldp	x19, x20, [sp, #16]
  40c038:	ldp	x29, x30, [sp], #32
  40c03c:	b	401aa0 <memcpy@plt>
  40c040:	bl	40c048 <argp_parse@@Base+0x1eb8>
  40c044:	nop
  40c048:	stp	x29, x30, [sp, #-16]!
  40c04c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c050:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40c054:	mov	x29, sp
  40c058:	ldr	w0, [x0, #1216]
  40c05c:	add	x3, x3, #0xaf0
  40c060:	adrp	x2, 411000 <argp_error@@Base+0x1650>
  40c064:	add	x2, x2, #0xf68
  40c068:	mov	w1, #0x0                   	// #0
  40c06c:	bl	401b30 <error@plt>
  40c070:	bl	401cd0 <abort@plt>
  40c074:	nop
  40c078:	mov	w6, #0x0                   	// #0
  40c07c:	mov	w5, #0x0                   	// #0
  40c080:	b	410b48 <argp_error@@Base+0x1198>
  40c084:	nop
  40c088:	mov	x6, x5
  40c08c:	mov	w7, #0x0                   	// #0
  40c090:	mov	w5, #0x0                   	// #0
  40c094:	b	40fd30 <argp_error@@Base+0x380>
  40c098:	mov	w6, #0x0                   	// #0
  40c09c:	mov	w5, #0x1                   	// #1
  40c0a0:	b	410b48 <argp_error@@Base+0x1198>
  40c0a4:	nop
  40c0a8:	mov	x6, x5
  40c0ac:	mov	w7, #0x0                   	// #0
  40c0b0:	mov	w5, #0x1                   	// #1
  40c0b4:	b	40fd30 <argp_error@@Base+0x380>
  40c0b8:	stp	x29, x30, [sp, #-64]!
  40c0bc:	mov	w3, #0xfffffff8            	// #-8
  40c0c0:	mov	w1, w1
  40c0c4:	add	x4, sp, #0x30
  40c0c8:	add	x5, sp, #0x40
  40c0cc:	mov	x29, sp
  40c0d0:	stp	x5, x5, [sp, #16]
  40c0d4:	str	x4, [sp, #32]
  40c0d8:	stp	w3, wzr, [sp, #40]
  40c0dc:	str	x2, [sp, #56]
  40c0e0:	bl	401ee0 <ioctl@plt>
  40c0e4:	ldp	x29, x30, [sp], #64
  40c0e8:	ret
  40c0ec:	nop
  40c0f0:	stp	x29, x30, [sp, #-16]!
  40c0f4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c0f8:	adrp	x2, 414000 <argp_error@@Base+0x4650>
  40c0fc:	mov	x29, sp
  40c100:	ldr	x0, [x0, #1248]
  40c104:	add	x2, x2, #0xaf0
  40c108:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40c10c:	add	x1, x1, #0x790
  40c110:	bl	401ed0 <fprintf@plt>
  40c114:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c118:	ldr	w0, [x0, #1216]
  40c11c:	bl	401b20 <exit@plt>

000000000040c120 <_obstack_begin@@Base>:
  40c120:	stp	x29, x30, [sp, #-48]!
  40c124:	mov	x29, sp
  40c128:	stp	x19, x20, [sp, #16]
  40c12c:	mov	x19, x0
  40c130:	ldrb	w0, [x0, #80]
  40c134:	stp	x21, x22, [sp, #32]
  40c138:	and	w0, w0, #0xfffffffe
  40c13c:	stp	x3, x4, [x19, #56]
  40c140:	strb	w0, [x19, #80]
  40c144:	cbz	x2, 40c1c8 <_obstack_begin@@Base+0xa8>
  40c148:	ldrb	w0, [x19, #80]
  40c14c:	cmp	x1, #0x0
  40c150:	sub	x22, x2, #0x1
  40c154:	neg	x21, x2
  40c158:	mov	x2, #0xfe0                 	// #4064
  40c15c:	csel	x1, x1, x2, ne  // ne = any
  40c160:	str	x1, [x19]
  40c164:	str	x22, [x19, #48]
  40c168:	tbz	w0, #0, 40c1ec <_obstack_begin@@Base+0xcc>
  40c16c:	ldr	x0, [x19, #72]
  40c170:	blr	x3
  40c174:	mov	x20, x0
  40c178:	str	x20, [x19, #8]
  40c17c:	cbz	x20, 40c200 <_obstack_begin@@Base+0xe0>
  40c180:	add	x2, x20, #0x10
  40c184:	ldrb	w3, [x19, #80]
  40c188:	add	x2, x2, x22
  40c18c:	mov	w0, #0x1                   	// #1
  40c190:	and	x2, x2, x21
  40c194:	and	w3, w3, #0xfffffff9
  40c198:	ldr	x1, [x19]
  40c19c:	dup	v0.2d, x2
  40c1a0:	ldp	x21, x22, [sp, #32]
  40c1a4:	add	x1, x20, x1
  40c1a8:	str	q0, [x19, #16]
  40c1ac:	str	x1, [x20]
  40c1b0:	str	x1, [x19, #32]
  40c1b4:	str	xzr, [x20, #8]
  40c1b8:	strb	w3, [x19, #80]
  40c1bc:	ldp	x19, x20, [sp, #16]
  40c1c0:	ldp	x29, x30, [sp], #48
  40c1c4:	ret
  40c1c8:	ldrb	w0, [x19, #80]
  40c1cc:	cmp	x1, #0x0
  40c1d0:	mov	x22, #0xf                   	// #15
  40c1d4:	mov	x2, #0xfe0                 	// #4064
  40c1d8:	csel	x1, x1, x2, ne  // ne = any
  40c1dc:	str	x1, [x19]
  40c1e0:	str	x22, [x19, #48]
  40c1e4:	mov	x21, #0xfffffffffffffff0    	// #-16
  40c1e8:	tbnz	w0, #0, 40c16c <_obstack_begin@@Base+0x4c>
  40c1ec:	mov	x0, x1
  40c1f0:	blr	x3
  40c1f4:	mov	x20, x0
  40c1f8:	str	x20, [x19, #8]
  40c1fc:	cbnz	x20, 40c180 <_obstack_begin@@Base+0x60>
  40c200:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c204:	ldr	x0, [x0, #1168]
  40c208:	blr	x0
  40c20c:	b	40c180 <_obstack_begin@@Base+0x60>

000000000040c210 <_obstack_begin_1@@Base>:
  40c210:	stp	x29, x30, [sp, #-48]!
  40c214:	mov	x29, sp
  40c218:	stp	x19, x20, [sp, #16]
  40c21c:	mov	x19, x0
  40c220:	mov	x0, x5
  40c224:	stp	x21, x22, [sp, #32]
  40c228:	ldrb	w5, [x19, #80]
  40c22c:	stp	x3, x4, [x19, #56]
  40c230:	orr	w5, w5, #0x1
  40c234:	str	x0, [x19, #72]
  40c238:	strb	w5, [x19, #80]
  40c23c:	cbz	x2, 40c2bc <_obstack_begin_1@@Base+0xac>
  40c240:	sub	x22, x2, #0x1
  40c244:	neg	x21, x2
  40c248:	ldrb	w2, [x19, #80]
  40c24c:	cmp	x1, #0x0
  40c250:	mov	x4, #0xfe0                 	// #4064
  40c254:	csel	x1, x1, x4, ne  // ne = any
  40c258:	str	x1, [x19]
  40c25c:	str	x22, [x19, #48]
  40c260:	tbz	w2, #0, 40c2e0 <_obstack_begin_1@@Base+0xd0>
  40c264:	blr	x3
  40c268:	mov	x20, x0
  40c26c:	str	x20, [x19, #8]
  40c270:	cbz	x20, 40c2f4 <_obstack_begin_1@@Base+0xe4>
  40c274:	add	x2, x20, #0x10
  40c278:	ldrb	w3, [x19, #80]
  40c27c:	add	x2, x2, x22
  40c280:	mov	w0, #0x1                   	// #1
  40c284:	and	x2, x2, x21
  40c288:	and	w3, w3, #0xfffffff9
  40c28c:	ldr	x1, [x19]
  40c290:	dup	v0.2d, x2
  40c294:	ldp	x21, x22, [sp, #32]
  40c298:	add	x1, x20, x1
  40c29c:	str	q0, [x19, #16]
  40c2a0:	str	x1, [x20]
  40c2a4:	str	x1, [x19, #32]
  40c2a8:	str	xzr, [x20, #8]
  40c2ac:	strb	w3, [x19, #80]
  40c2b0:	ldp	x19, x20, [sp, #16]
  40c2b4:	ldp	x29, x30, [sp], #48
  40c2b8:	ret
  40c2bc:	ldrb	w2, [x19, #80]
  40c2c0:	cmp	x1, #0x0
  40c2c4:	mov	x22, #0xf                   	// #15
  40c2c8:	mov	x4, #0xfe0                 	// #4064
  40c2cc:	csel	x1, x1, x4, ne  // ne = any
  40c2d0:	str	x1, [x19]
  40c2d4:	str	x22, [x19, #48]
  40c2d8:	mov	x21, #0xfffffffffffffff0    	// #-16
  40c2dc:	tbnz	w2, #0, 40c264 <_obstack_begin_1@@Base+0x54>
  40c2e0:	mov	x0, x1
  40c2e4:	blr	x3
  40c2e8:	mov	x20, x0
  40c2ec:	str	x20, [x19, #8]
  40c2f0:	cbnz	x20, 40c274 <_obstack_begin_1@@Base+0x64>
  40c2f4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c2f8:	ldr	x0, [x0, #1168]
  40c2fc:	blr	x0
  40c300:	b	40c274 <_obstack_begin_1@@Base+0x64>
  40c304:	nop

000000000040c308 <_obstack_newchunk@@Base>:
  40c308:	stp	x29, x30, [sp, #-64]!
  40c30c:	mov	x29, sp
  40c310:	stp	x19, x20, [sp, #16]
  40c314:	mov	x19, x0
  40c318:	ldp	x2, x20, [x0, #16]
  40c31c:	stp	x21, x22, [sp, #32]
  40c320:	ldr	x0, [x0, #48]
  40c324:	str	x23, [sp, #48]
  40c328:	ldr	x23, [x19, #8]
  40c32c:	sub	x20, x20, x2
  40c330:	adds	x1, x20, x1
  40c334:	cset	x2, cs  // cs = hs, nlast
  40c338:	adds	x1, x0, x1
  40c33c:	cset	x0, cs  // cs = hs, nlast
  40c340:	cmp	x2, #0x0
  40c344:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  40c348:	b.eq	40c368 <_obstack_newchunk@@Base+0x60>  // b.none
  40c34c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40c350:	ldr	x0, [x0, #1168]
  40c354:	blr	x0
  40c358:	str	xzr, [x19, #8]
  40c35c:	mov	x0, #0x0                   	// #0
  40c360:	str	x23, [x0, #8]
  40c364:	brk	#0x3e8
  40c368:	ldr	x0, [x19]
  40c36c:	lsr	x21, x20, #3
  40c370:	add	x21, x21, #0x64
  40c374:	ldrb	w3, [x19, #80]
  40c378:	cmp	x0, x1
  40c37c:	add	x21, x21, x1
  40c380:	csel	x1, x0, x1, cs  // cs = hs, nlast
  40c384:	cmp	x1, x21
  40c388:	csel	x21, x1, x21, cs  // cs = hs, nlast
  40c38c:	ldr	x2, [x19, #56]
  40c390:	tbz	w3, #0, 40c428 <_obstack_newchunk@@Base+0x120>
  40c394:	ldr	x0, [x19, #72]
  40c398:	mov	x1, x21
  40c39c:	blr	x2
  40c3a0:	mov	x22, x0
  40c3a4:	cbz	x22, 40c34c <_obstack_newchunk@@Base+0x44>
  40c3a8:	mov	x0, x22
  40c3ac:	str	x22, [x19, #8]
  40c3b0:	add	x1, x22, x21
  40c3b4:	mov	x2, x20
  40c3b8:	ldr	x21, [x19, #48]
  40c3bc:	str	x23, [x22, #8]
  40c3c0:	str	x1, [x19, #32]
  40c3c4:	str	x1, [x0], #16
  40c3c8:	ldr	x1, [x19, #16]
  40c3cc:	add	x0, x0, x21
  40c3d0:	bic	x21, x0, x21
  40c3d4:	mov	x0, x21
  40c3d8:	bl	401aa0 <memcpy@plt>
  40c3dc:	ldrb	w3, [x19, #80]
  40c3e0:	tbnz	w3, #1, 40c400 <_obstack_newchunk@@Base+0xf8>
  40c3e4:	ldr	x2, [x19, #48]
  40c3e8:	add	x1, x23, #0x10
  40c3ec:	ldr	x0, [x19, #16]
  40c3f0:	add	x1, x1, x2
  40c3f4:	bic	x1, x1, x2
  40c3f8:	cmp	x0, x1
  40c3fc:	b.eq	40c438 <_obstack_newchunk@@Base+0x130>  // b.none
  40c400:	ldrb	w0, [x19, #80]
  40c404:	add	x20, x21, x20
  40c408:	ldr	x23, [sp, #48]
  40c40c:	and	w0, w0, #0xfffffffd
  40c410:	stp	x21, x20, [x19, #16]
  40c414:	strb	w0, [x19, #80]
  40c418:	ldp	x19, x20, [sp, #16]
  40c41c:	ldp	x21, x22, [sp, #32]
  40c420:	ldp	x29, x30, [sp], #64
  40c424:	ret
  40c428:	mov	x0, x21
  40c42c:	blr	x2
  40c430:	mov	x22, x0
  40c434:	b	40c3a4 <_obstack_newchunk@@Base+0x9c>
  40c438:	ldr	x0, [x23, #8]
  40c43c:	ldr	x2, [x19, #64]
  40c440:	str	x0, [x22, #8]
  40c444:	tbz	w3, #0, 40c458 <_obstack_newchunk@@Base+0x150>
  40c448:	ldr	x0, [x19, #72]
  40c44c:	mov	x1, x23
  40c450:	blr	x2
  40c454:	b	40c400 <_obstack_newchunk@@Base+0xf8>
  40c458:	mov	x0, x23
  40c45c:	blr	x2
  40c460:	b	40c400 <_obstack_newchunk@@Base+0xf8>
  40c464:	nop

000000000040c468 <_obstack_allocated_p@@Base>:
  40c468:	ldr	x0, [x0, #8]
  40c46c:	cbz	x0, 40c490 <_obstack_allocated_p@@Base+0x28>
  40c470:	cmp	x1, x0
  40c474:	b.ls	40c484 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  40c478:	ldr	x2, [x0]
  40c47c:	cmp	x2, x1
  40c480:	b.cs	40c494 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  40c484:	ldr	x0, [x0, #8]
  40c488:	cbnz	x0, 40c470 <_obstack_allocated_p@@Base+0x8>
  40c48c:	mov	w0, #0x0                   	// #0
  40c490:	ret
  40c494:	mov	w0, #0x1                   	// #1
  40c498:	ret
  40c49c:	nop

000000000040c4a0 <_obstack_free@@Base>:
  40c4a0:	stp	x29, x30, [sp, #-48]!
  40c4a4:	mov	x29, sp
  40c4a8:	str	x21, [sp, #32]
  40c4ac:	mov	x21, x1
  40c4b0:	ldr	x1, [x0, #8]
  40c4b4:	cbz	x1, 40c520 <_obstack_free@@Base+0x80>
  40c4b8:	stp	x19, x20, [sp, #16]
  40c4bc:	mov	x19, x0
  40c4c0:	cmp	x1, x21
  40c4c4:	b.cs	40c4d4 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  40c4c8:	ldr	x0, [x1]
  40c4cc:	cmp	x0, x21
  40c4d0:	b.cs	40c530 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  40c4d4:	ldrb	w0, [x19, #80]
  40c4d8:	ldr	x20, [x1, #8]
  40c4dc:	ldr	x2, [x19, #64]
  40c4e0:	tbz	w0, #0, 40c504 <_obstack_free@@Base+0x64>
  40c4e4:	ldr	x0, [x19, #72]
  40c4e8:	blr	x2
  40c4ec:	ldrb	w0, [x19, #80]
  40c4f0:	orr	w0, w0, #0x2
  40c4f4:	strb	w0, [x19, #80]
  40c4f8:	cbz	x20, 40c51c <_obstack_free@@Base+0x7c>
  40c4fc:	mov	x1, x20
  40c500:	b	40c4c0 <_obstack_free@@Base+0x20>
  40c504:	mov	x0, x1
  40c508:	blr	x2
  40c50c:	ldrb	w0, [x19, #80]
  40c510:	orr	w0, w0, #0x2
  40c514:	strb	w0, [x19, #80]
  40c518:	cbnz	x20, 40c4fc <_obstack_free@@Base+0x5c>
  40c51c:	ldp	x19, x20, [sp, #16]
  40c520:	cbnz	x21, 40c548 <_obstack_free@@Base+0xa8>
  40c524:	ldr	x21, [sp, #32]
  40c528:	ldp	x29, x30, [sp], #48
  40c52c:	ret
  40c530:	stp	x1, x21, [x19, #8]
  40c534:	stp	x21, x0, [x19, #24]
  40c538:	ldp	x19, x20, [sp, #16]
  40c53c:	ldr	x21, [sp, #32]
  40c540:	ldp	x29, x30, [sp], #48
  40c544:	ret
  40c548:	stp	x19, x20, [sp, #16]
  40c54c:	bl	401cd0 <abort@plt>

000000000040c550 <_obstack_memory_used@@Base>:
  40c550:	ldr	x1, [x0, #8]
  40c554:	mov	x0, #0x0                   	// #0
  40c558:	cbz	x1, 40c574 <_obstack_memory_used@@Base+0x24>
  40c55c:	nop
  40c560:	ldr	x2, [x1]
  40c564:	sub	x2, x2, x1
  40c568:	ldr	x1, [x1, #8]
  40c56c:	add	x0, x0, x2
  40c570:	cbnz	x1, 40c560 <_obstack_memory_used@@Base+0x10>
  40c574:	ret
  40c578:	stp	x29, x30, [sp, #-32]!
  40c57c:	mov	x29, sp
  40c580:	stp	x19, x20, [sp, #16]
  40c584:	mov	x19, x1
  40c588:	mov	x20, #0x0                   	// #0
  40c58c:	cbz	x0, 40c5a0 <_obstack_memory_used@@Base+0x50>
  40c590:	mov	w1, #0xa                   	// #10
  40c594:	bl	401d70 <strchr@plt>
  40c598:	cmp	x0, #0x0
  40c59c:	cset	x20, ne  // ne = any
  40c5a0:	cbz	x19, 40c5c4 <_obstack_memory_used@@Base+0x74>
  40c5a4:	ldr	x2, [x19]
  40c5a8:	cbz	x2, 40c5c4 <_obstack_memory_used@@Base+0x74>
  40c5ac:	ldr	x0, [x2, #16]
  40c5b0:	ldr	x1, [x2, #32]
  40c5b4:	bl	40c578 <_obstack_memory_used@@Base+0x28>
  40c5b8:	add	x20, x20, x0
  40c5bc:	ldr	x2, [x19, #32]!
  40c5c0:	cbnz	x2, 40c5ac <_obstack_memory_used@@Base+0x5c>
  40c5c4:	mov	x0, x20
  40c5c8:	ldp	x19, x20, [sp, #16]
  40c5cc:	ldp	x29, x30, [sp], #32
  40c5d0:	ret
  40c5d4:	nop
  40c5d8:	stp	x29, x30, [sp, #-160]!
  40c5dc:	mov	x29, sp
  40c5e0:	stp	x21, x22, [sp, #32]
  40c5e4:	mov	x22, x0
  40c5e8:	mov	x21, x1
  40c5ec:	mov	x0, #0x20                  	// #32
  40c5f0:	stp	x19, x20, [sp, #16]
  40c5f4:	stp	x23, x24, [sp, #48]
  40c5f8:	stp	x25, x26, [sp, #64]
  40c5fc:	stp	x27, x28, [sp, #80]
  40c600:	ldr	x23, [x22]
  40c604:	ldr	x20, [x22, #32]
  40c608:	bl	401be0 <malloc@plt>
  40c60c:	cbz	x0, 40cb90 <_obstack_memory_used@@Base+0x640>
  40c610:	str	wzr, [x0, #8]
  40c614:	mov	x19, x0
  40c618:	str	xzr, [x0, #24]
  40c61c:	cbz	x23, 40c808 <_obstack_memory_used@@Base+0x2b8>
  40c620:	ldr	w0, [x23, #24]
  40c624:	tbnz	w0, #2, 40cb70 <_obstack_memory_used@@Base+0x620>
  40c628:	mov	x24, x23
  40c62c:	mov	w25, #0x0                   	// #0
  40c630:	mov	w27, #0x0                   	// #0
  40c634:	nop
  40c638:	ldr	w0, [x24, #8]
  40c63c:	cbnz	w0, 40c648 <_obstack_memory_used@@Base+0xf8>
  40c640:	ldr	x0, [x24]
  40c644:	cbz	x0, 40c68c <_obstack_memory_used@@Base+0x13c>
  40c648:	ldr	w0, [x24, #24]
  40c64c:	tbnz	w0, #2, 40c658 <_obstack_memory_used@@Base+0x108>
  40c650:	add	w25, w25, #0x1
  40c654:	str	w25, [x19, #8]
  40c658:	ldr	w0, [x24, #24]
  40c65c:	tbnz	w0, #3, 40c684 <_obstack_memory_used@@Base+0x134>
  40c660:	ldr	w26, [x24, #8]
  40c664:	sub	w0, w26, #0x1
  40c668:	cmp	w0, #0xfe
  40c66c:	b.hi	40c684 <_obstack_memory_used@@Base+0x134>  // b.pmore
  40c670:	bl	401d00 <__ctype_b_loc@plt>
  40c674:	ldr	x0, [x0]
  40c678:	ldrh	w0, [x0, w26, sxtw #1]
  40c67c:	ubfx	x0, x0, #14, #1
  40c680:	add	w27, w27, w0
  40c684:	add	x24, x24, #0x30
  40c688:	b	40c638 <_obstack_memory_used@@Base+0xe8>
  40c68c:	ldr	x0, [x24, #32]
  40c690:	cbnz	x0, 40c648 <_obstack_memory_used@@Base+0xf8>
  40c694:	ldr	w28, [x24, #40]
  40c698:	cbnz	w28, 40c648 <_obstack_memory_used@@Base+0xf8>
  40c69c:	mov	w0, #0x38                  	// #56
  40c6a0:	umull	x0, w25, w0
  40c6a4:	bl	401be0 <malloc@plt>
  40c6a8:	mov	x24, x0
  40c6ac:	str	x24, [x19]
  40c6b0:	add	w0, w27, #0x1
  40c6b4:	bl	401be0 <malloc@plt>
  40c6b8:	str	x0, [x19, #16]
  40c6bc:	cmp	x24, #0x0
  40c6c0:	mov	x3, x0
  40c6c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40c6c8:	b.eq	40cb50 <_obstack_memory_used@@Base+0x600>  // b.none
  40c6cc:	ldr	w2, [x23, #8]
  40c6d0:	mov	x25, x0
  40c6d4:	ldr	w1, [x23, #40]
  40c6d8:	cbnz	w2, 40c7a8 <_obstack_memory_used@@Base+0x258>
  40c6dc:	nop
  40c6e0:	ldr	x0, [x23]
  40c6e4:	cbz	x0, 40c7d8 <_obstack_memory_used@@Base+0x288>
  40c6e8:	str	x23, [x24]
  40c6ec:	str	wzr, [x24, #8]
  40c6f0:	str	x25, [x24, #16]
  40c6f4:	cbnz	w1, 40c7b8 <_obstack_memory_used@@Base+0x268>
  40c6f8:	ldr	x0, [x23]
  40c6fc:	cmp	x0, #0x0
  40c700:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  40c704:	b.eq	40c7f0 <_obstack_memory_used@@Base+0x2a0>  // b.none
  40c708:	mov	w27, #0x1                   	// #1
  40c70c:	str	w28, [x24, #24]
  40c710:	stp	x21, x22, [x24, #32]
  40c714:	nop
  40c718:	str	w27, [x24, #8]
  40c71c:	ldr	w0, [x23, #24]
  40c720:	tbnz	w0, #3, 40c778 <_obstack_memory_used@@Base+0x228>
  40c724:	ldr	w26, [x23, #8]
  40c728:	sub	w0, w26, #0x1
  40c72c:	cmp	w0, #0xfe
  40c730:	b.hi	40c778 <_obstack_memory_used@@Base+0x228>  // b.pmore
  40c734:	str	x3, [sp, #104]
  40c738:	bl	401d00 <__ctype_b_loc@plt>
  40c73c:	ldr	x0, [x0]
  40c740:	ldr	x3, [sp, #104]
  40c744:	ldrh	w0, [x0, w26, sxtw #1]
  40c748:	tbz	w0, #14, 40c778 <_obstack_memory_used@@Base+0x228>
  40c74c:	and	w26, w26, #0xff
  40c750:	cmp	x3, x25
  40c754:	b.cs	40c7f8 <_obstack_memory_used@@Base+0x2a8>  // b.hs, b.nlast
  40c758:	mov	x1, x3
  40c75c:	b	40c76c <_obstack_memory_used@@Base+0x21c>
  40c760:	add	x1, x1, #0x1
  40c764:	cmp	x1, x25
  40c768:	b.eq	40c7f8 <_obstack_memory_used@@Base+0x2a8>  // b.none
  40c76c:	ldrb	w0, [x1]
  40c770:	cmp	w0, w26
  40c774:	b.ne	40c760 <_obstack_memory_used@@Base+0x210>  // b.any
  40c778:	ldr	w0, [x23, #56]
  40c77c:	add	x23, x23, #0x30
  40c780:	cbnz	w0, 40c78c <_obstack_memory_used@@Base+0x23c>
  40c784:	ldr	x1, [x23]
  40c788:	cbz	x1, 40c7c0 <_obstack_memory_used@@Base+0x270>
  40c78c:	ldr	w1, [x23, #24]
  40c790:	add	w27, w27, #0x1
  40c794:	tbnz	w1, #2, 40c718 <_obstack_memory_used@@Base+0x1c8>
  40c798:	mov	w2, w0
  40c79c:	add	x24, x24, #0x38
  40c7a0:	ldr	w1, [x23, #40]
  40c7a4:	cbz	w2, 40c6e0 <_obstack_memory_used@@Base+0x190>
  40c7a8:	str	x23, [x24]
  40c7ac:	str	wzr, [x24, #8]
  40c7b0:	str	x25, [x24, #16]
  40c7b4:	cbz	w1, 40c708 <_obstack_memory_used@@Base+0x1b8>
  40c7b8:	mov	w28, w1
  40c7bc:	b	40c708 <_obstack_memory_used@@Base+0x1b8>
  40c7c0:	ldr	x1, [x23, #32]
  40c7c4:	cbnz	x1, 40c78c <_obstack_memory_used@@Base+0x23c>
  40c7c8:	ldr	w2, [x23, #40]
  40c7cc:	cbnz	w2, 40c78c <_obstack_memory_used@@Base+0x23c>
  40c7d0:	add	x24, x24, #0x38
  40c7d4:	b	40c7a0 <_obstack_memory_used@@Base+0x250>
  40c7d8:	ldr	x0, [x23, #32]
  40c7dc:	cbz	x0, 40c800 <_obstack_memory_used@@Base+0x2b0>
  40c7e0:	str	x23, [x24]
  40c7e4:	str	wzr, [x24, #8]
  40c7e8:	str	x25, [x24, #16]
  40c7ec:	cbnz	w1, 40c7b8 <_obstack_memory_used@@Base+0x268>
  40c7f0:	add	w28, w28, #0x1
  40c7f4:	b	40c708 <_obstack_memory_used@@Base+0x1b8>
  40c7f8:	strb	w26, [x25], #1
  40c7fc:	b	40c778 <_obstack_memory_used@@Base+0x228>
  40c800:	cbnz	w1, 40c900 <_obstack_memory_used@@Base+0x3b0>
  40c804:	strb	wzr, [x25]
  40c808:	cbz	x20, 40c8e0 <_obstack_memory_used@@Base+0x390>
  40c80c:	ldr	x24, [x20]
  40c810:	cbz	x24, 40c8e0 <_obstack_memory_used@@Base+0x390>
  40c814:	add	x0, x19, #0x18
  40c818:	str	x0, [sp, #152]
  40c81c:	ldr	w25, [x20, #24]
  40c820:	ldr	x26, [x20, #16]
  40c824:	cbnz	w25, 40c830 <_obstack_memory_used@@Base+0x2e0>
  40c828:	mov	x1, x21
  40c82c:	cbz	x26, 40c878 <_obstack_memory_used@@Base+0x328>
  40c830:	ldr	x23, [x22, #32]
  40c834:	mov	x0, #0x30                  	// #48
  40c838:	bl	401be0 <malloc@plt>
  40c83c:	mov	x1, x0
  40c840:	sub	x23, x20, x23
  40c844:	asr	x23, x23, #5
  40c848:	cbz	x0, 40c878 <_obstack_memory_used@@Base+0x328>
  40c84c:	str	x26, [x1]
  40c850:	mov	w0, #0x0                   	// #0
  40c854:	stp	w23, w25, [x1, #8]
  40c858:	stp	x21, x22, [x1, #16]
  40c85c:	cbz	x21, 40c868 <_obstack_memory_used@@Base+0x318>
  40c860:	ldr	w0, [x21, #32]
  40c864:	add	w0, w0, #0x1
  40c868:	ldr	x2, [x19, #24]
  40c86c:	str	x1, [x19, #24]
  40c870:	str	w0, [x1, #32]
  40c874:	str	x2, [x1, #40]
  40c878:	mov	x0, x24
  40c87c:	bl	40c5d8 <_obstack_memory_used@@Base+0x88>
  40c880:	ldr	x1, [x19, #24]
  40c884:	mov	x26, x0
  40c888:	cbz	x1, 40cb48 <_obstack_memory_used@@Base+0x5f8>
  40c88c:	nop
  40c890:	mov	x0, x1
  40c894:	ldr	x1, [x1, #40]
  40c898:	cbnz	x1, 40c890 <_obstack_memory_used@@Base+0x340>
  40c89c:	add	x0, x0, #0x28
  40c8a0:	ldr	w27, [x26, #8]
  40c8a4:	ldr	x1, [x26, #24]
  40c8a8:	str	x1, [x0]
  40c8ac:	str	xzr, [x26, #24]
  40c8b0:	cbz	w27, 40c8d0 <_obstack_memory_used@@Base+0x380>
  40c8b4:	ldr	w28, [x19, #8]
  40c8b8:	cbnz	w28, 40c910 <_obstack_memory_used@@Base+0x3c0>
  40c8bc:	ldr	x0, [x26]
  40c8c0:	str	x0, [x19]
  40c8c4:	ldr	x0, [x26, #16]
  40c8c8:	str	w27, [x19, #8]
  40c8cc:	str	x0, [x19, #16]
  40c8d0:	mov	x0, x26
  40c8d4:	bl	401d30 <free@plt>
  40c8d8:	ldr	x24, [x20, #32]!
  40c8dc:	cbnz	x24, 40c81c <_obstack_memory_used@@Base+0x2cc>
  40c8e0:	mov	x0, x19
  40c8e4:	ldp	x19, x20, [sp, #16]
  40c8e8:	ldp	x21, x22, [sp, #32]
  40c8ec:	ldp	x23, x24, [sp, #48]
  40c8f0:	ldp	x25, x26, [sp, #64]
  40c8f4:	ldp	x27, x28, [sp, #80]
  40c8f8:	ldp	x29, x30, [sp], #160
  40c8fc:	ret
  40c900:	mov	w28, w1
  40c904:	str	x23, [x24]
  40c908:	str	x25, [x24, #16]
  40c90c:	b	40c708 <_obstack_memory_used@@Base+0x1b8>
  40c910:	add	w0, w27, w28
  40c914:	mov	w1, #0x38                  	// #56
  40c918:	str	w0, [sp, #140]
  40c91c:	umull	x0, w0, w1
  40c920:	bl	401be0 <malloc@plt>
  40c924:	str	x0, [sp, #120]
  40c928:	ldr	x24, [x19, #16]
  40c92c:	mov	x0, x24
  40c930:	bl	401b00 <strlen@plt>
  40c934:	ldr	x25, [x26, #16]
  40c938:	mov	w23, w0
  40c93c:	str	x23, [sp, #104]
  40c940:	mov	x0, x25
  40c944:	bl	401b00 <strlen@plt>
  40c948:	add	x0, x0, #0x1
  40c94c:	add	x0, x0, x23
  40c950:	bl	401be0 <malloc@plt>
  40c954:	ldr	x1, [sp, #120]
  40c958:	mov	x23, x0
  40c95c:	cmp	x1, #0x0
  40c960:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40c964:	b.eq	40cbb0 <_obstack_memory_used@@Base+0x660>  // b.none
  40c968:	mov	w0, #0x38                  	// #56
  40c96c:	ldr	x3, [x19]
  40c970:	umull	x2, w28, w0
  40c974:	ldr	x0, [sp, #120]
  40c978:	mov	x1, x3
  40c97c:	str	x3, [sp, #144]
  40c980:	bl	401d40 <mempcpy@plt>
  40c984:	mov	w2, #0x38                  	// #56
  40c988:	ldr	x1, [x26]
  40c98c:	umull	x2, w27, w2
  40c990:	bl	401aa0 <memcpy@plt>
  40c994:	ldr	x2, [sp, #104]
  40c998:	mov	x1, x24
  40c99c:	mov	x0, x23
  40c9a0:	bl	401aa0 <memcpy@plt>
  40c9a4:	sub	w4, w28, #0x1
  40c9a8:	add	x4, x4, #0x1
  40c9ac:	ldr	x1, [sp, #120]
  40c9b0:	lsl	x0, x4, #3
  40c9b4:	sub	x4, x0, x4
  40c9b8:	mov	x2, x1
  40c9bc:	add	x28, x1, x4, lsl #3
  40c9c0:	ldr	x1, [x2, #16]
  40c9c4:	add	x2, x2, #0x38
  40c9c8:	sub	x1, x1, x24
  40c9cc:	add	x1, x23, x1
  40c9d0:	stur	x1, [x2, #-40]
  40c9d4:	cmp	x2, x28
  40c9d8:	b.ne	40c9c0 <_obstack_memory_used@@Base+0x470>  // b.any
  40c9dc:	sub	w27, w27, #0x1
  40c9e0:	ldr	x0, [sp, #104]
  40c9e4:	add	x27, x27, #0x1
  40c9e8:	add	x24, x23, x0
  40c9ec:	lsl	x0, x27, #3
  40c9f0:	sub	x27, x0, x27
  40c9f4:	str	x24, [sp, #112]
  40c9f8:	add	x0, x28, x27, lsl #3
  40c9fc:	str	x0, [sp, #128]
  40ca00:	ldr	w1, [x28, #8]
  40ca04:	str	x24, [x28, #16]
  40ca08:	ldr	x5, [x28]
  40ca0c:	cbz	w1, 40ca70 <_obstack_memory_used@@Base+0x520>
  40ca10:	sub	w1, w1, #0x1
  40ca14:	add	x1, x1, #0x1
  40ca18:	add	x1, x1, x1, lsl #1
  40ca1c:	add	x27, x5, x1, lsl #4
  40ca20:	ldr	w0, [x5, #24]
  40ca24:	tbnz	w0, #3, 40ca64 <_obstack_memory_used@@Base+0x514>
  40ca28:	ldr	w2, [x5, #8]
  40ca2c:	str	w2, [sp, #136]
  40ca30:	sub	w0, w2, #0x1
  40ca34:	cmp	w0, #0xfe
  40ca38:	b.hi	40ca64 <_obstack_memory_used@@Base+0x514>  // b.pmore
  40ca3c:	str	x5, [sp, #104]
  40ca40:	bl	401d00 <__ctype_b_loc@plt>
  40ca44:	ldr	w2, [sp, #136]
  40ca48:	ldr	x0, [x0]
  40ca4c:	ldrb	w6, [x25]
  40ca50:	ldr	x5, [sp, #104]
  40ca54:	ldrh	w0, [x0, w2, sxtw #1]
  40ca58:	tst	x0, #0x4000
  40ca5c:	ccmp	w6, w2, #0x0, ne  // ne = any
  40ca60:	b.eq	40cb08 <_obstack_memory_used@@Base+0x5b8>  // b.none
  40ca64:	add	x5, x5, #0x30
  40ca68:	cmp	x5, x27
  40ca6c:	b.ne	40ca20 <_obstack_memory_used@@Base+0x4d0>  // b.any
  40ca70:	ldr	x0, [sp, #128]
  40ca74:	add	x28, x28, #0x38
  40ca78:	cmp	x28, x0
  40ca7c:	b.ne	40ca00 <_obstack_memory_used@@Base+0x4b0>  // b.any
  40ca80:	ldr	x0, [sp, #144]
  40ca84:	strb	wzr, [x24]
  40ca88:	bl	401d30 <free@plt>
  40ca8c:	ldr	x0, [x19, #16]
  40ca90:	bl	401d30 <free@plt>
  40ca94:	ldr	x24, [x26, #24]
  40ca98:	str	x23, [x19, #16]
  40ca9c:	ldr	x0, [sp, #120]
  40caa0:	str	x0, [x19]
  40caa4:	ldr	w0, [sp, #140]
  40caa8:	str	w0, [x19, #8]
  40caac:	cbz	x24, 40cac0 <_obstack_memory_used@@Base+0x570>
  40cab0:	mov	x0, x24
  40cab4:	ldr	x24, [x24, #40]
  40cab8:	bl	401d30 <free@plt>
  40cabc:	cbnz	x24, 40cab0 <_obstack_memory_used@@Base+0x560>
  40cac0:	ldr	w0, [x26, #8]
  40cac4:	cbz	w0, 40c8d0 <_obstack_memory_used@@Base+0x380>
  40cac8:	ldr	x0, [x26]
  40cacc:	bl	401d30 <free@plt>
  40cad0:	ldr	x0, [x26, #16]
  40cad4:	bl	401d30 <free@plt>
  40cad8:	mov	x0, x26
  40cadc:	bl	401d30 <free@plt>
  40cae0:	ldr	x24, [x20, #32]!
  40cae4:	cbnz	x24, 40c81c <_obstack_memory_used@@Base+0x2cc>
  40cae8:	mov	x0, x19
  40caec:	ldp	x19, x20, [sp, #16]
  40caf0:	ldp	x21, x22, [sp, #32]
  40caf4:	ldp	x23, x24, [sp, #48]
  40caf8:	ldp	x25, x26, [sp, #64]
  40cafc:	ldp	x27, x28, [sp, #80]
  40cb00:	ldp	x29, x30, [sp], #160
  40cb04:	ret
  40cb08:	ldr	x0, [sp, #112]
  40cb0c:	cmp	x23, x0
  40cb10:	b.cs	40cb34 <_obstack_memory_used@@Base+0x5e4>  // b.hs, b.nlast
  40cb14:	mov	x2, x23
  40cb18:	ldrb	w0, [x2]
  40cb1c:	cmp	w0, w6
  40cb20:	b.eq	40cb40 <_obstack_memory_used@@Base+0x5f0>  // b.none
  40cb24:	ldr	x0, [sp, #112]
  40cb28:	add	x2, x2, #0x1
  40cb2c:	cmp	x0, x2
  40cb30:	b.ne	40cb18 <_obstack_memory_used@@Base+0x5c8>  // b.any
  40cb34:	mov	x7, x24
  40cb38:	strb	w6, [x7], #1
  40cb3c:	mov	x24, x7
  40cb40:	add	x25, x25, #0x1
  40cb44:	b	40ca64 <_obstack_memory_used@@Base+0x514>
  40cb48:	ldr	x0, [sp, #152]
  40cb4c:	b	40c8a0 <_obstack_memory_used@@Base+0x350>
  40cb50:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40cb54:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40cb58:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40cb5c:	add	x3, x3, #0xe70
  40cb60:	add	x1, x1, #0xb08
  40cb64:	add	x0, x0, #0xb30
  40cb68:	mov	w2, #0x1d2                 	// #466
  40cb6c:	bl	401e90 <__assert_fail@plt>
  40cb70:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40cb74:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40cb78:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40cb7c:	add	x3, x3, #0xe70
  40cb80:	add	x1, x1, #0xb08
  40cb84:	add	x0, x0, #0xb20
  40cb88:	mov	w2, #0x1c4                 	// #452
  40cb8c:	bl	401e90 <__assert_fail@plt>
  40cb90:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40cb94:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40cb98:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40cb9c:	add	x3, x3, #0xe70
  40cba0:	add	x1, x1, #0xb08
  40cba4:	add	x0, x0, #0xb18
  40cba8:	mov	w2, #0x1ba                 	// #442
  40cbac:	bl	401e90 <__assert_fail@plt>
  40cbb0:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40cbb4:	add	x3, x3, #0xe70
  40cbb8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40cbbc:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40cbc0:	add	x3, x3, #0x10
  40cbc4:	add	x1, x1, #0xb08
  40cbc8:	add	x0, x0, #0xb58
  40cbcc:	mov	w2, #0x372                 	// #882
  40cbd0:	bl	401e90 <__assert_fail@plt>
  40cbd4:	nop
  40cbd8:	stp	x29, x30, [sp, #-144]!
  40cbdc:	mov	x29, sp
  40cbe0:	ldr	x3, [x1, #32]
  40cbe4:	stp	x19, x20, [sp, #16]
  40cbe8:	ldr	w4, [x0, #24]
  40cbec:	ldr	x2, [x0, #32]
  40cbf0:	stp	x21, x22, [sp, #32]
  40cbf4:	mov	x20, x0
  40cbf8:	mov	x21, x1
  40cbfc:	cmp	x2, x3
  40cc00:	ldr	w1, [x1, #24]
  40cc04:	b.eq	40cd04 <_obstack_memory_used@@Base+0x7b4>  // b.none
  40cc08:	cbz	x2, 40cca0 <_obstack_memory_used@@Base+0x750>
  40cc0c:	cbz	x3, 40ccc0 <_obstack_memory_used@@Base+0x770>
  40cc10:	ldr	w0, [x2, #32]
  40cc14:	ldr	w1, [x3, #32]
  40cc18:	cmp	w1, w0
  40cc1c:	b.ge	40cc40 <_obstack_memory_used@@Base+0x6f0>  // b.tcont
  40cc20:	ldr	x2, [x2, #16]
  40cc24:	ldr	w0, [x2, #32]
  40cc28:	cmp	w1, w0
  40cc2c:	b.lt	40cc20 <_obstack_memory_used@@Base+0x6d0>  // b.tstop
  40cc30:	cmp	w1, w0
  40cc34:	b.le	40cc48 <_obstack_memory_used@@Base+0x6f8>
  40cc38:	ldr	x3, [x3, #16]
  40cc3c:	ldr	w1, [x3, #32]
  40cc40:	cmp	w1, w0
  40cc44:	b.gt	40cc38 <_obstack_memory_used@@Base+0x6e8>
  40cc48:	mov	x0, x2
  40cc4c:	mov	x1, x3
  40cc50:	ldr	x2, [x2, #16]
  40cc54:	ldr	x3, [x3, #16]
  40cc58:	cmp	x2, x3
  40cc5c:	b.ne	40cc48 <_obstack_memory_used@@Base+0x6f8>  // b.any
  40cc60:	ldr	w3, [x0, #12]
  40cc64:	ldr	w2, [x1, #12]
  40cc68:	ldr	w0, [x0, #8]
  40cc6c:	ldr	w1, [x1, #8]
  40cc70:	cmp	w3, w2
  40cc74:	b.eq	40cd34 <_obstack_memory_used@@Base+0x7e4>  // b.none
  40cc78:	mvn	w1, w2
  40cc7c:	sub	w4, w3, w2
  40cc80:	sub	w0, w2, w3
  40cc84:	lsr	w1, w1, #31
  40cc88:	cmp	w1, w3, lsr #31
  40cc8c:	csel	w0, w0, w4, eq  // eq = none
  40cc90:	ldp	x19, x20, [sp, #16]
  40cc94:	ldp	x21, x22, [sp, #32]
  40cc98:	ldp	x29, x30, [sp], #144
  40cc9c:	ret
  40cca0:	mov	x0, x3
  40cca4:	ldr	x3, [x3, #16]
  40cca8:	cbnz	x3, 40cca0 <_obstack_memory_used@@Base+0x750>
  40ccac:	ldr	w1, [x0, #12]
  40ccb0:	mov	w0, #0xffffffff            	// #-1
  40ccb4:	cmp	w4, w1
  40ccb8:	b.ne	40cd0c <_obstack_memory_used@@Base+0x7bc>  // b.any
  40ccbc:	b	40cc90 <_obstack_memory_used@@Base+0x740>
  40ccc0:	mov	x0, x2
  40ccc4:	ldr	x2, [x2, #16]
  40ccc8:	cbnz	x2, 40ccc0 <_obstack_memory_used@@Base+0x770>
  40cccc:	ldr	w2, [x0, #12]
  40ccd0:	mov	w0, #0x1                   	// #1
  40ccd4:	cmp	w1, w2
  40ccd8:	b.eq	40cc90 <_obstack_memory_used@@Base+0x740>  // b.none
  40ccdc:	mvn	w3, w1
  40cce0:	sub	w0, w2, w1
  40cce4:	sub	w1, w1, w2
  40cce8:	lsr	w3, w3, #31
  40ccec:	cmp	w3, w2, lsr #31
  40ccf0:	csel	w0, w1, w0, eq  // eq = none
  40ccf4:	ldp	x19, x20, [sp, #16]
  40ccf8:	ldp	x21, x22, [sp, #32]
  40ccfc:	ldp	x29, x30, [sp], #144
  40cd00:	ret
  40cd04:	cmp	w4, w1
  40cd08:	b.eq	40cd60 <_obstack_memory_used@@Base+0x810>  // b.none
  40cd0c:	mvn	w2, w1
  40cd10:	sub	w0, w4, w1
  40cd14:	sub	w1, w1, w4
  40cd18:	lsr	w2, w2, #31
  40cd1c:	cmp	w2, w4, lsr #31
  40cd20:	csel	w0, w1, w0, eq  // eq = none
  40cd24:	ldp	x19, x20, [sp, #16]
  40cd28:	ldp	x21, x22, [sp, #32]
  40cd2c:	ldp	x29, x30, [sp], #144
  40cd30:	ret
  40cd34:	subs	w0, w1, w0
  40cd38:	b.ne	40cc90 <_obstack_memory_used@@Base+0x740>  // b.any
  40cd3c:	ldr	w2, [x20, #48]
  40cd40:	mov	w0, #0xffffffff            	// #-1
  40cd44:	ldr	w1, [x21, #48]
  40cd48:	ldp	x19, x20, [sp, #16]
  40cd4c:	cmp	w2, w1
  40cd50:	cneg	w0, w0, cs  // cs = hs, nlast
  40cd54:	ldp	x21, x22, [sp, #32]
  40cd58:	ldp	x29, x30, [sp], #144
  40cd5c:	ret
  40cd60:	stp	x27, x28, [sp, #80]
  40cd64:	ldr	w28, [x0, #8]
  40cd68:	stp	x23, x24, [sp, #48]
  40cd6c:	stp	x25, x26, [sp, #64]
  40cd70:	ldr	x22, [x0]
  40cd74:	ldr	x1, [x0, #16]
  40cd78:	cbz	w28, 40cfe8 <_obstack_memory_used@@Base+0xa98>
  40cd7c:	mov	w24, w28
  40cd80:	mov	x19, x22
  40cd84:	b	40cde0 <_obstack_memory_used@@Base+0x890>
  40cd88:	ldr	w27, [x19, #8]
  40cd8c:	sub	w0, w27, #0x1
  40cd90:	cmp	w0, #0xfe
  40cd94:	b.hi	40cdd0 <_obstack_memory_used@@Base+0x880>  // b.pmore
  40cd98:	str	x1, [sp, #104]
  40cd9c:	bl	401d00 <__ctype_b_loc@plt>
  40cda0:	ldr	x0, [x0]
  40cda4:	ldr	x1, [sp, #104]
  40cda8:	ldrh	w0, [x0, w27, sxtw #1]
  40cdac:	tbz	w0, #14, 40cdd0 <_obstack_memory_used@@Base+0x880>
  40cdb0:	ldrb	w0, [x1]
  40cdb4:	cmp	w27, w0
  40cdb8:	b.ne	40cdd0 <_obstack_memory_used@@Base+0x880>  // b.any
  40cdbc:	ands	w23, w23, #0x2
  40cdc0:	add	x1, x1, #0x1
  40cdc4:	csel	w25, wzr, w25, eq  // eq = none
  40cdc8:	cmp	w23, #0x0
  40cdcc:	csel	w26, w27, wzr, eq  // eq = none
  40cdd0:	subs	w24, w24, #0x1
  40cdd4:	add	x19, x19, #0x30
  40cdd8:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  40cddc:	b.eq	40cdf8 <_obstack_memory_used@@Base+0x8a8>  // b.none
  40cde0:	ldr	w23, [x19, #24]
  40cde4:	mov	w25, #0x1                   	// #1
  40cde8:	and	w26, w23, #0x8
  40cdec:	tbz	w23, #3, 40cd88 <_obstack_memory_used@@Base+0x838>
  40cdf0:	mov	w26, #0x0                   	// #0
  40cdf4:	b	40cdd0 <_obstack_memory_used@@Base+0x880>
  40cdf8:	ldr	x23, [x21]
  40cdfc:	and	w0, w26, #0xff
  40ce00:	str	w0, [sp, #136]
  40ce04:	ldr	w0, [x22, #24]
  40ce08:	ldr	w27, [x23, #24]
  40ce0c:	ldr	w25, [x21, #8]
  40ce10:	and	w0, w0, #0x8
  40ce14:	str	w0, [sp, #132]
  40ce18:	and	w0, w27, #0x8
  40ce1c:	str	w0, [sp, #128]
  40ce20:	ldr	x19, [x21, #16]
  40ce24:	cbz	w25, 40d138 <_obstack_memory_used@@Base+0xbe8>
  40ce28:	mov	w2, w25
  40ce2c:	mov	x24, x23
  40ce30:	b	40ce98 <_obstack_memory_used@@Base+0x948>
  40ce34:	ldr	w7, [x24, #8]
  40ce38:	str	w7, [sp, #116]
  40ce3c:	sub	w0, w7, #0x1
  40ce40:	cmp	w0, #0xfe
  40ce44:	b.hi	40ce88 <_obstack_memory_used@@Base+0x938>  // b.pmore
  40ce48:	stp	w2, w3, [sp, #120]
  40ce4c:	bl	401d00 <__ctype_b_loc@plt>
  40ce50:	ldp	w7, w2, [sp, #116]
  40ce54:	ldr	x0, [x0]
  40ce58:	ldr	w3, [sp, #124]
  40ce5c:	ldrh	w0, [x0, w7, sxtw #1]
  40ce60:	tbz	w0, #14, 40ce88 <_obstack_memory_used@@Base+0x938>
  40ce64:	ldrb	w0, [x19]
  40ce68:	ldr	w1, [sp, #104]
  40ce6c:	cmp	w7, w0
  40ce70:	b.ne	40ce88 <_obstack_memory_used@@Base+0x938>  // b.any
  40ce74:	ands	w1, w1, #0x2
  40ce78:	add	x19, x19, #0x1
  40ce7c:	cset	w3, ne  // ne = any
  40ce80:	cmp	w1, #0x0
  40ce84:	csel	w27, w7, wzr, eq  // eq = none
  40ce88:	subs	w2, w2, #0x1
  40ce8c:	add	x24, x24, #0x30
  40ce90:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40ce94:	b.eq	40ceb4 <_obstack_memory_used@@Base+0x964>  // b.none
  40ce98:	ldr	w1, [x24, #24]
  40ce9c:	mov	w3, #0x1                   	// #1
  40cea0:	str	w1, [sp, #104]
  40cea4:	and	w27, w1, #0x8
  40cea8:	tbz	w1, #3, 40ce34 <_obstack_memory_used@@Base+0x8e4>
  40ceac:	mov	w27, #0x0                   	// #0
  40ceb0:	b	40ce88 <_obstack_memory_used@@Base+0x938>
  40ceb4:	and	w19, w27, #0xff
  40ceb8:	mov	x24, #0x0                   	// #0
  40cebc:	cbz	w28, 40cef4 <_obstack_memory_used@@Base+0x9a4>
  40cec0:	sub	w0, w28, #0x1
  40cec4:	add	x0, x0, #0x1
  40cec8:	add	x0, x0, x0, lsl #1
  40cecc:	add	x0, x22, x0, lsl #4
  40ced0:	ldr	x24, [x22]
  40ced4:	cbz	x24, 40cee0 <_obstack_memory_used@@Base+0x990>
  40ced8:	ldr	w1, [x22, #24]
  40cedc:	tbz	w1, #1, 40cef0 <_obstack_memory_used@@Base+0x9a0>
  40cee0:	add	x22, x22, #0x30
  40cee4:	cmp	x22, x0
  40cee8:	b.ne	40ced0 <_obstack_memory_used@@Base+0x980>  // b.any
  40ceec:	mov	x24, #0x0                   	// #0
  40cef0:	cbz	w25, 40cf24 <_obstack_memory_used@@Base+0x9d4>
  40cef4:	sub	w0, w25, #0x1
  40cef8:	add	x0, x0, #0x1
  40cefc:	add	x0, x0, x0, lsl #1
  40cf00:	add	x0, x23, x0, lsl #4
  40cf04:	nop
  40cf08:	ldr	x22, [x23]
  40cf0c:	cbz	x22, 40cf18 <_obstack_memory_used@@Base+0x9c8>
  40cf10:	ldr	w1, [x23, #24]
  40cf14:	tbz	w1, #1, 40cf28 <_obstack_memory_used@@Base+0x9d8>
  40cf18:	add	x23, x23, #0x30
  40cf1c:	cmp	x23, x0
  40cf20:	b.ne	40cf08 <_obstack_memory_used@@Base+0x9b8>  // b.any
  40cf24:	mov	x22, #0x0                   	// #0
  40cf28:	ldr	w0, [sp, #132]
  40cf2c:	cbnz	w0, 40cf90 <_obstack_memory_used@@Base+0xa40>
  40cf30:	ldr	w0, [sp, #128]
  40cf34:	cbz	w0, 40d074 <_obstack_memory_used@@Base+0xb24>
  40cf38:	cbz	x22, 40d144 <_obstack_memory_used@@Base+0xbf4>
  40cf3c:	bl	401d00 <__ctype_b_loc@plt>
  40cf40:	ldrb	w1, [x22]
  40cf44:	ldr	x2, [x0]
  40cf48:	ubfiz	x0, x1, #1, #8
  40cf4c:	ldrh	w0, [x2, x0]
  40cf50:	tbz	w0, #13, 40cf68 <_obstack_memory_used@@Base+0xa18>
  40cf54:	nop
  40cf58:	ldrb	w1, [x22, #1]!
  40cf5c:	ubfiz	x0, x1, #1, #8
  40cf60:	ldrh	w0, [x2, x0]
  40cf64:	tbnz	w0, #13, 40cf58 <_obstack_memory_used@@Base+0xa08>
  40cf68:	cmp	w1, #0x2d
  40cf6c:	cset	w3, ne  // ne = any
  40cf70:	str	w3, [sp, #128]
  40cf74:	cbz	w1, 40d050 <_obstack_memory_used@@Base+0xb00>
  40cf78:	tbnz	w0, #3, 40d050 <_obstack_memory_used@@Base+0xb00>
  40cf7c:	ldrb	w0, [x22, #1]!
  40cf80:	ubfiz	x1, x0, #1, #8
  40cf84:	cbz	w0, 40d050 <_obstack_memory_used@@Base+0xb00>
  40cf88:	ldrh	w0, [x2, x1]
  40cf8c:	b	40cf78 <_obstack_memory_used@@Base+0xa28>
  40cf90:	cbz	x24, 40d108 <_obstack_memory_used@@Base+0xbb8>
  40cf94:	bl	401d00 <__ctype_b_loc@plt>
  40cf98:	ldrb	w1, [x24]
  40cf9c:	ldr	x2, [x0]
  40cfa0:	ubfiz	x0, x1, #1, #8
  40cfa4:	ldrh	w0, [x2, x0]
  40cfa8:	tbz	w0, #13, 40cfc0 <_obstack_memory_used@@Base+0xa70>
  40cfac:	nop
  40cfb0:	ldrb	w1, [x24, #1]!
  40cfb4:	ubfiz	x0, x1, #1, #8
  40cfb8:	ldrh	w0, [x2, x0]
  40cfbc:	tbnz	w0, #13, 40cfb0 <_obstack_memory_used@@Base+0xa60>
  40cfc0:	cmp	w1, #0x2d
  40cfc4:	cset	w3, ne  // ne = any
  40cfc8:	str	w3, [sp, #132]
  40cfcc:	cbz	w1, 40d038 <_obstack_memory_used@@Base+0xae8>
  40cfd0:	tbnz	w0, #3, 40d038 <_obstack_memory_used@@Base+0xae8>
  40cfd4:	ldrb	w0, [x24, #1]!
  40cfd8:	ubfiz	x1, x0, #1, #8
  40cfdc:	cbz	w0, 40d038 <_obstack_memory_used@@Base+0xae8>
  40cfe0:	ldrh	w0, [x2, x1]
  40cfe4:	b	40cfd0 <_obstack_memory_used@@Base+0xa80>
  40cfe8:	ldr	x23, [x21]
  40cfec:	mov	w26, #0x0                   	// #0
  40cff0:	ldr	w0, [x22, #24]
  40cff4:	ldr	w25, [x21, #8]
  40cff8:	ldr	w27, [x23, #24]
  40cffc:	and	w0, w0, #0x8
  40d000:	stp	w0, wzr, [sp, #132]
  40d004:	and	w0, w27, #0x8
  40d008:	str	w0, [sp, #128]
  40d00c:	ldr	x19, [x21, #16]
  40d010:	cbnz	w25, 40ce28 <_obstack_memory_used@@Base+0x8d8>
  40d014:	ldr	w0, [sp, #132]
  40d018:	mov	w27, #0x0                   	// #0
  40d01c:	mov	w19, #0x0                   	// #0
  40d020:	mov	x22, #0x0                   	// #0
  40d024:	cmp	w0, #0x0
  40d028:	mov	x24, #0x0                   	// #0
  40d02c:	cset	w0, ne  // ne = any
  40d030:	stp	w0, w26, [sp, #132]
  40d034:	nop
  40d038:	ldr	w0, [sp, #128]
  40d03c:	cbz	w0, 40d050 <_obstack_memory_used@@Base+0xb00>
  40d040:	mov	w0, #0x1                   	// #1
  40d044:	str	w0, [sp, #128]
  40d048:	cbnz	x22, 40cf3c <_obstack_memory_used@@Base+0x9ec>
  40d04c:	nop
  40d050:	ldp	w0, w1, [sp, #128]
  40d054:	cmp	w0, w1
  40d058:	b.eq	40d074 <_obstack_memory_used@@Base+0xb24>  // b.none
  40d05c:	ldp	w1, w0, [sp, #128]
  40d060:	ldp	x23, x24, [sp, #48]
  40d064:	sub	w0, w0, w1
  40d068:	ldp	x25, x26, [sp, #64]
  40d06c:	ldp	x27, x28, [sp, #80]
  40d070:	b	40cc90 <_obstack_memory_used@@Base+0x740>
  40d074:	cmp	x24, #0x0
  40d078:	orr	w0, w27, w26
  40d07c:	cset	w1, ne  // ne = any
  40d080:	cmp	w0, #0x0
  40d084:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  40d088:	b.eq	40d0b8 <_obstack_memory_used@@Base+0xb68>  // b.none
  40d08c:	cbz	x22, 40d128 <_obstack_memory_used@@Base+0xbd8>
  40d090:	mov	x1, x22
  40d094:	mov	x0, x24
  40d098:	bl	401c60 <strcasecmp@plt>
  40d09c:	cbnz	w0, 40d0f8 <_obstack_memory_used@@Base+0xba8>
  40d0a0:	ldp	x23, x24, [sp, #48]
  40d0a4:	ldp	x25, x26, [sp, #64]
  40d0a8:	ldp	x27, x28, [sp, #80]
  40d0ac:	b	40cd3c <_obstack_memory_used@@Base+0x7ec>
  40d0b0:	mov	x24, x22
  40d0b4:	mov	w1, #0x0                   	// #0
  40d0b8:	cbz	w26, 40d124 <_obstack_memory_used@@Base+0xbd4>
  40d0bc:	ldr	x0, [sp, #136]
  40d0c0:	ubfiz	x23, x0, #2, #8
  40d0c4:	cbnz	w27, 40d0d0 <_obstack_memory_used@@Base+0xb80>
  40d0c8:	cbz	x22, 40d160 <_obstack_memory_used@@Base+0xc10>
  40d0cc:	ldrb	w19, [x22]
  40d0d0:	ubfiz	x22, x19, #2, #8
  40d0d4:	bl	401ba0 <__ctype_tolower_loc@plt>
  40d0d8:	ldr	x0, [x0]
  40d0dc:	ldr	w2, [x0, x23]
  40d0e0:	ldr	w0, [x0, x22]
  40d0e4:	subs	w0, w2, w0
  40d0e8:	b.ne	40d0f8 <_obstack_memory_used@@Base+0xba8>  // b.any
  40d0ec:	ldr	w0, [sp, #136]
  40d0f0:	subs	w0, w19, w0
  40d0f4:	b.eq	40d0a0 <_obstack_memory_used@@Base+0xb50>  // b.none
  40d0f8:	ldp	x23, x24, [sp, #48]
  40d0fc:	ldp	x25, x26, [sp, #64]
  40d100:	ldp	x27, x28, [sp, #80]
  40d104:	b	40cc90 <_obstack_memory_used@@Base+0x740>
  40d108:	ldr	w0, [sp, #128]
  40d10c:	cbnz	w0, 40d150 <_obstack_memory_used@@Base+0xc00>
  40d110:	mov	w0, #0x1                   	// #1
  40d114:	ldp	x23, x24, [sp, #48]
  40d118:	ldp	x25, x26, [sp, #64]
  40d11c:	ldp	x27, x28, [sp, #80]
  40d120:	b	40cc90 <_obstack_memory_used@@Base+0x740>
  40d124:	cbz	w1, 40d16c <_obstack_memory_used@@Base+0xc1c>
  40d128:	ldrb	w0, [x24]
  40d12c:	str	w0, [sp, #136]
  40d130:	ubfiz	x23, x0, #2, #8
  40d134:	b	40d0c4 <_obstack_memory_used@@Base+0xb74>
  40d138:	mov	w27, #0x0                   	// #0
  40d13c:	mov	w19, #0x0                   	// #0
  40d140:	b	40cec0 <_obstack_memory_used@@Base+0x970>
  40d144:	mov	w0, #0x1                   	// #1
  40d148:	str	w0, [sp, #128]
  40d14c:	b	40d05c <_obstack_memory_used@@Base+0xb0c>
  40d150:	cbz	x22, 40d0b0 <_obstack_memory_used@@Base+0xb60>
  40d154:	mov	w0, #0x1                   	// #1
  40d158:	str	w0, [sp, #132]
  40d15c:	b	40cf3c <_obstack_memory_used@@Base+0x9ec>
  40d160:	mov	x22, #0x0                   	// #0
  40d164:	mov	w19, #0x0                   	// #0
  40d168:	b	40d0d4 <_obstack_memory_used@@Base+0xb84>
  40d16c:	mov	x23, #0x0                   	// #0
  40d170:	str	wzr, [sp, #136]
  40d174:	b	40d0c4 <_obstack_memory_used@@Base+0xb74>
  40d178:	stp	x29, x30, [sp, #-112]!
  40d17c:	mov	x29, sp
  40d180:	stp	x21, x22, [sp, #32]
  40d184:	stp	x23, x24, [sp, #48]
  40d188:	mov	x23, x2
  40d18c:	ldp	x22, x2, [x0, #32]
  40d190:	stp	x19, x20, [sp, #16]
  40d194:	mov	w20, w3
  40d198:	ldr	x3, [x23]
  40d19c:	stp	x25, x26, [sp, #64]
  40d1a0:	mov	x25, x1
  40d1a4:	ldr	x21, [x0, #16]
  40d1a8:	stp	x27, x28, [sp, #80]
  40d1ac:	mov	x27, x4
  40d1b0:	stp	x3, x21, [sp, #96]
  40d1b4:	mov	x24, x21
  40d1b8:	cbz	x2, 40d1e0 <_obstack_memory_used@@Base+0xc90>
  40d1bc:	mov	x19, x0
  40d1c0:	bl	40ae10 <argp_parse@@Base+0xc80>
  40d1c4:	mov	x2, x0
  40d1c8:	mov	w0, #0x6                   	// #6
  40d1cc:	mov	x1, x21
  40d1d0:	movk	w0, #0x200, lsl #16
  40d1d4:	ldr	x3, [x19, #40]
  40d1d8:	blr	x3
  40d1dc:	mov	x24, x0
  40d1e0:	cbz	x24, 40d3d0 <_obstack_memory_used@@Base+0xe80>
  40d1e4:	mov	x0, x24
  40d1e8:	mov	w1, #0xa                   	// #10
  40d1ec:	bl	401e10 <strchrnul@plt>
  40d1f0:	mov	x19, x0
  40d1f4:	ldrb	w0, [x0]
  40d1f8:	cbnz	w0, 40d31c <_obstack_memory_used@@Base+0xdcc>
  40d1fc:	ldp	x2, x1, [x27, #48]
  40d200:	add	x0, x19, #0x1
  40d204:	ldr	x5, [x27, #32]
  40d208:	mov	x28, x24
  40d20c:	sub	x26, x0, x28
  40d210:	mov	w21, #0x0                   	// #0
  40d214:	sub	x0, x1, x2
  40d218:	cmp	x0, x5
  40d21c:	b.hi	40d37c <_obstack_memory_used@@Base+0xe2c>  // b.pmore
  40d220:	ldr	x0, [x27, #40]
  40d224:	ldr	x2, [x27, #16]
  40d228:	cmp	x0, #0x0
  40d22c:	csel	x0, x0, xzr, ge  // ge = tcont
  40d230:	add	x0, x0, x26
  40d234:	cmp	x0, x2
  40d238:	ldr	x0, [x27, #64]
  40d23c:	b.cc	40d3a8 <_obstack_memory_used@@Base+0xe58>  // b.lo, b.ul, b.last
  40d240:	cmp	x1, x0
  40d244:	b.cs	40d458 <_obstack_memory_used@@Base+0xf08>  // b.hs, b.nlast
  40d248:	add	x0, x1, #0x1
  40d24c:	str	x0, [x27, #56]
  40d250:	mov	w0, #0xa                   	// #10
  40d254:	strb	w0, [x1]
  40d258:	ldp	x0, x2, [x27, #56]
  40d25c:	sub	x26, x19, x28
  40d260:	add	x1, x0, x26
  40d264:	cmp	x2, x1
  40d268:	b.cs	40d280 <_obstack_memory_used@@Base+0xd30>  // b.hs, b.nlast
  40d26c:	mov	x1, x26
  40d270:	mov	x0, x27
  40d274:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d278:	cbz	w0, 40d298 <_obstack_memory_used@@Base+0xd48>
  40d27c:	ldr	x0, [x27, #56]
  40d280:	mov	x2, x26
  40d284:	mov	x1, x28
  40d288:	bl	401aa0 <memcpy@plt>
  40d28c:	ldr	x2, [x27, #56]
  40d290:	add	x2, x2, x26
  40d294:	str	x2, [x27, #56]
  40d298:	ldr	x0, [sp, #104]
  40d29c:	cmp	x0, x24
  40d2a0:	b.ne	40d3c4 <_obstack_memory_used@@Base+0xe74>  // b.any
  40d2a4:	cbz	x22, 40d2d8 <_obstack_memory_used@@Base+0xd88>
  40d2a8:	ldr	x0, [x22]
  40d2ac:	cbz	x0, 40d2d8 <_obstack_memory_used@@Base+0xd88>
  40d2b0:	mov	w3, w20
  40d2b4:	mov	x1, x25
  40d2b8:	mov	x4, x27
  40d2bc:	mov	x2, x23
  40d2c0:	bl	40d178 <_obstack_memory_used@@Base+0xc28>
  40d2c4:	mov	w1, w0
  40d2c8:	ldr	x0, [x22, #32]!
  40d2cc:	cmp	w1, #0x0
  40d2d0:	cset	w20, eq  // eq = none
  40d2d4:	cbnz	x0, 40d2b0 <_obstack_memory_used@@Base+0xd60>
  40d2d8:	cmp	w20, #0x0
  40d2dc:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  40d2e0:	b.eq	40d3e4 <_obstack_memory_used@@Base+0xe94>  // b.none
  40d2e4:	ldrb	w0, [x19]
  40d2e8:	ldr	x2, [sp, #96]
  40d2ec:	ldrb	w1, [x2]
  40d2f0:	cbz	w0, 40d408 <_obstack_memory_used@@Base+0xeb8>
  40d2f4:	add	w1, w1, #0x1
  40d2f8:	mov	w0, #0x1                   	// #1
  40d2fc:	strb	w1, [x2]
  40d300:	ldp	x19, x20, [sp, #16]
  40d304:	ldp	x21, x22, [sp, #32]
  40d308:	ldp	x23, x24, [sp, #48]
  40d30c:	ldp	x25, x26, [sp, #64]
  40d310:	ldp	x27, x28, [sp, #80]
  40d314:	ldp	x29, x30, [sp], #112
  40d318:	ret
  40d31c:	ldr	x0, [sp, #96]
  40d320:	ldrb	w26, [x0]
  40d324:	cbz	w26, 40d470 <_obstack_memory_used@@Base+0xf20>
  40d328:	mov	w21, #0x0                   	// #0
  40d32c:	nop
  40d330:	add	x28, x19, #0x1
  40d334:	add	w21, w21, #0x1
  40d338:	mov	x0, x28
  40d33c:	mov	w1, #0xa                   	// #10
  40d340:	bl	401e10 <strchrnul@plt>
  40d344:	mov	x19, x0
  40d348:	cmp	w21, w26
  40d34c:	b.ne	40d330 <_obstack_memory_used@@Base+0xde0>  // b.any
  40d350:	ldr	x0, [x23]
  40d354:	mov	w21, #0x1                   	// #1
  40d358:	ldr	x5, [x27, #32]
  40d35c:	add	x0, x0, #0x1
  40d360:	str	x0, [x23]
  40d364:	add	x0, x19, #0x1
  40d368:	sub	x26, x0, x28
  40d36c:	ldp	x2, x1, [x27, #48]
  40d370:	sub	x0, x1, x2
  40d374:	cmp	x0, x5
  40d378:	b.ls	40d220 <_obstack_memory_used@@Base+0xcd0>  // b.plast
  40d37c:	mov	x0, x27
  40d380:	bl	411118 <argp_error@@Base+0x1768>
  40d384:	ldr	x0, [x27, #40]
  40d388:	ldr	x2, [x27, #16]
  40d38c:	cmp	x0, #0x0
  40d390:	csel	x0, x0, xzr, ge  // ge = tcont
  40d394:	add	x0, x0, x26
  40d398:	cmp	x0, x2
  40d39c:	ldr	x1, [x27, #56]
  40d3a0:	ldr	x0, [x27, #64]
  40d3a4:	b.cs	40d240 <_obstack_memory_used@@Base+0xcf0>  // b.hs, b.nlast
  40d3a8:	cmp	x1, x0
  40d3ac:	b.cs	40d430 <_obstack_memory_used@@Base+0xee0>  // b.hs, b.nlast
  40d3b0:	add	x0, x1, #0x1
  40d3b4:	str	x0, [x27, #56]
  40d3b8:	mov	w0, #0x20                  	// #32
  40d3bc:	strb	w0, [x1]
  40d3c0:	b	40d258 <_obstack_memory_used@@Base+0xd08>
  40d3c4:	mov	x0, x24
  40d3c8:	bl	401d30 <free@plt>
  40d3cc:	b	40d2a4 <_obstack_memory_used@@Base+0xd54>
  40d3d0:	cbz	x22, 40d3e4 <_obstack_memory_used@@Base+0xe94>
  40d3d4:	ldr	x0, [x22]
  40d3d8:	mov	x19, #0x0                   	// #0
  40d3dc:	mov	w21, #0x0                   	// #0
  40d3e0:	cbnz	x0, 40d2b0 <_obstack_memory_used@@Base+0xd60>
  40d3e4:	cmp	w20, #0x0
  40d3e8:	cset	w0, eq  // eq = none
  40d3ec:	ldp	x19, x20, [sp, #16]
  40d3f0:	ldp	x21, x22, [sp, #32]
  40d3f4:	ldp	x23, x24, [sp, #48]
  40d3f8:	ldp	x25, x26, [sp, #64]
  40d3fc:	ldp	x27, x28, [sp, #80]
  40d400:	ldp	x29, x30, [sp], #112
  40d404:	ret
  40d408:	mov	w0, #0x0                   	// #0
  40d40c:	cbz	w1, 40d300 <_obstack_memory_used@@Base+0xdb0>
  40d410:	strb	wzr, [x2]
  40d414:	ldp	x19, x20, [sp, #16]
  40d418:	ldp	x21, x22, [sp, #32]
  40d41c:	ldp	x23, x24, [sp, #48]
  40d420:	ldp	x25, x26, [sp, #64]
  40d424:	ldp	x27, x28, [sp, #80]
  40d428:	ldp	x29, x30, [sp], #112
  40d42c:	ret
  40d430:	mov	x0, x27
  40d434:	mov	x1, #0x1                   	// #1
  40d438:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d43c:	cbz	w0, 40d258 <_obstack_memory_used@@Base+0xd08>
  40d440:	ldr	x1, [x27, #56]
  40d444:	add	x0, x1, #0x1
  40d448:	str	x0, [x27, #56]
  40d44c:	mov	w0, #0x20                  	// #32
  40d450:	strb	w0, [x1]
  40d454:	b	40d258 <_obstack_memory_used@@Base+0xd08>
  40d458:	mov	x0, x27
  40d45c:	mov	x1, #0x1                   	// #1
  40d460:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d464:	cbz	w0, 40d258 <_obstack_memory_used@@Base+0xd08>
  40d468:	ldr	x1, [x27, #56]
  40d46c:	b	40d248 <_obstack_memory_used@@Base+0xcf8>
  40d470:	mov	x28, x24
  40d474:	b	40d350 <_obstack_memory_used@@Base+0xe00>
  40d478:	stp	x29, x30, [sp, #-96]!
  40d47c:	mov	x29, sp
  40d480:	stp	x21, x22, [sp, #32]
  40d484:	mov	x21, x0
  40d488:	mov	x22, x2
  40d48c:	stp	x23, x24, [sp, #48]
  40d490:	mov	x24, x0
  40d494:	ldr	x0, [x1, #40]
  40d498:	cbz	x0, 40d4d0 <_obstack_memory_used@@Base+0xf80>
  40d49c:	mov	x0, x1
  40d4a0:	stp	x19, x20, [sp, #16]
  40d4a4:	mov	x19, x1
  40d4a8:	ldr	x1, [x2, #32]
  40d4ac:	bl	40ae10 <argp_parse@@Base+0xc80>
  40d4b0:	mov	x2, x0
  40d4b4:	ldr	x3, [x19, #40]
  40d4b8:	mov	w0, #0x3                   	// #3
  40d4bc:	mov	x1, x24
  40d4c0:	movk	w0, #0x200, lsl #16
  40d4c4:	blr	x3
  40d4c8:	mov	x21, x0
  40d4cc:	ldp	x19, x20, [sp, #16]
  40d4d0:	cbz	x21, 40d4e8 <_obstack_memory_used@@Base+0xf98>
  40d4d4:	ldrb	w1, [x21]
  40d4d8:	ldr	x0, [x22, #16]
  40d4dc:	cbnz	w1, 40d504 <_obstack_memory_used@@Base+0xfb4>
  40d4e0:	mov	w1, #0x1                   	// #1
  40d4e4:	str	w1, [x0, #8]
  40d4e8:	cmp	x24, x21
  40d4ec:	b.eq	40d660 <_obstack_memory_used@@Base+0x1110>  // b.none
  40d4f0:	mov	x0, x21
  40d4f4:	ldp	x21, x22, [sp, #32]
  40d4f8:	ldp	x23, x24, [sp, #48]
  40d4fc:	ldp	x29, x30, [sp], #96
  40d500:	b	401d30 <free@plt>
  40d504:	stp	x19, x20, [sp, #16]
  40d508:	ldr	x0, [x0]
  40d50c:	stp	x25, x26, [sp, #64]
  40d510:	ldr	x19, [x22, #8]
  40d514:	stp	x27, x28, [sp, #80]
  40d518:	ldr	x20, [x19, #56]
  40d51c:	cbz	x0, 40d558 <_obstack_memory_used@@Base+0x1008>
  40d520:	ldr	x0, [x19, #64]
  40d524:	cmp	x0, x20
  40d528:	b.hi	40d540 <_obstack_memory_used@@Base+0xff0>  // b.pmore
  40d52c:	mov	x0, x19
  40d530:	mov	x1, #0x1                   	// #1
  40d534:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d538:	cbz	w0, 40d550 <_obstack_memory_used@@Base+0x1000>
  40d53c:	ldr	x20, [x19, #56]
  40d540:	add	x0, x20, #0x1
  40d544:	str	x0, [x19, #56]
  40d548:	mov	w0, #0xa                   	// #10
  40d54c:	strb	w0, [x20]
  40d550:	ldr	x19, [x22, #8]
  40d554:	ldr	x20, [x19, #56]
  40d558:	adrp	x25, 42a000 <argp_error@@Base+0x1a650>
  40d55c:	ldr	x0, [x19, #48]
  40d560:	add	x25, x25, #0x498
  40d564:	ldr	x1, [x19, #32]
  40d568:	sub	x0, x20, x0
  40d56c:	ldr	w26, [x25, #24]
  40d570:	cmp	x0, x1
  40d574:	b.hi	40d69c <_obstack_memory_used@@Base+0x114c>  // b.pmore
  40d578:	ldr	x23, [x19, #40]
  40d57c:	cmp	x23, #0x0
  40d580:	csel	x23, x23, xzr, ge  // ge = tcont
  40d584:	sub	w23, w26, w23
  40d588:	cmp	w23, #0x0
  40d58c:	sub	w23, w23, #0x1
  40d590:	b.le	40d754 <_obstack_memory_used@@Base+0x1204>
  40d594:	mov	w26, #0x20                  	// #32
  40d598:	b	40d5a0 <_obstack_memory_used@@Base+0x1050>
  40d59c:	ldr	x20, [x19, #56]
  40d5a0:	mov	x0, x19
  40d5a4:	ldr	x2, [x19, #64]
  40d5a8:	mov	x1, #0x1                   	// #1
  40d5ac:	cmp	x2, x20
  40d5b0:	b.hi	40d5c0 <_obstack_memory_used@@Base+0x1070>  // b.pmore
  40d5b4:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d5b8:	cbz	w0, 40d5cc <_obstack_memory_used@@Base+0x107c>
  40d5bc:	ldr	x20, [x19, #56]
  40d5c0:	add	x0, x20, #0x1
  40d5c4:	str	x0, [x19, #56]
  40d5c8:	strb	w26, [x20]
  40d5cc:	cmp	w23, #0x0
  40d5d0:	sub	w23, w23, #0x1
  40d5d4:	b.gt	40d59c <_obstack_memory_used@@Base+0x104c>
  40d5d8:	ldr	x19, [x22, #8]
  40d5dc:	ldrsw	x27, [x25, #24]
  40d5e0:	mov	x23, x19
  40d5e4:	ldp	x0, x20, [x19, #48]
  40d5e8:	ldr	x1, [x19, #32]
  40d5ec:	sub	x0, x20, x0
  40d5f0:	cmp	x0, x1
  40d5f4:	b.hi	40d714 <_obstack_memory_used@@Base+0x11c4>  // b.pmore
  40d5f8:	mov	x28, x19
  40d5fc:	str	x27, [x19, #8]
  40d600:	str	x27, [x28, #24]
  40d604:	mov	x0, x21
  40d608:	bl	401b00 <strlen@plt>
  40d60c:	mov	x19, x0
  40d610:	cbnz	x0, 40d6c8 <_obstack_memory_used@@Base+0x1178>
  40d614:	ldr	x0, [x23, #48]
  40d618:	mov	x19, x23
  40d61c:	ldr	x1, [x23, #32]
  40d620:	sub	x0, x20, x0
  40d624:	cmp	x0, x1
  40d628:	b.hi	40d688 <_obstack_memory_used@@Base+0x1138>  // b.pmore
  40d62c:	ldr	x0, [x19, #64]
  40d630:	str	xzr, [x23, #8]
  40d634:	cmp	x0, x20
  40d638:	b.ls	40d670 <_obstack_memory_used@@Base+0x1120>  // b.plast
  40d63c:	add	x0, x20, #0x1
  40d640:	str	x0, [x19, #56]
  40d644:	mov	w0, #0xa                   	// #10
  40d648:	strb	w0, [x20]
  40d64c:	ldp	x19, x20, [sp, #16]
  40d650:	ldr	x0, [x22, #16]
  40d654:	ldp	x25, x26, [sp, #64]
  40d658:	ldp	x27, x28, [sp, #80]
  40d65c:	b	40d4e0 <_obstack_memory_used@@Base+0xf90>
  40d660:	ldp	x21, x22, [sp, #32]
  40d664:	ldp	x23, x24, [sp, #48]
  40d668:	ldp	x29, x30, [sp], #96
  40d66c:	ret
  40d670:	mov	x0, x19
  40d674:	mov	x1, #0x1                   	// #1
  40d678:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d67c:	cbz	w0, 40d64c <_obstack_memory_used@@Base+0x10fc>
  40d680:	ldr	x20, [x19, #56]
  40d684:	b	40d63c <_obstack_memory_used@@Base+0x10ec>
  40d688:	mov	x0, x23
  40d68c:	bl	411118 <argp_error@@Base+0x1768>
  40d690:	ldr	x19, [x22, #8]
  40d694:	ldr	x20, [x19, #56]
  40d698:	b	40d62c <_obstack_memory_used@@Base+0x10dc>
  40d69c:	mov	x0, x19
  40d6a0:	bl	411118 <argp_error@@Base+0x1768>
  40d6a4:	ldr	x23, [x19, #40]
  40d6a8:	cmp	x23, #0x0
  40d6ac:	csel	x23, x23, xzr, ge  // ge = tcont
  40d6b0:	sub	w23, w26, w23
  40d6b4:	cmp	w23, #0x0
  40d6b8:	sub	w23, w23, #0x1
  40d6bc:	b.le	40d5d8 <_obstack_memory_used@@Base+0x1088>
  40d6c0:	ldr	x20, [x19, #56]
  40d6c4:	b	40d594 <_obstack_memory_used@@Base+0x1044>
  40d6c8:	ldr	x1, [x23, #64]
  40d6cc:	add	x0, x20, x0
  40d6d0:	cmp	x1, x0
  40d6d4:	b.cs	40d6ec <_obstack_memory_used@@Base+0x119c>  // b.hs, b.nlast
  40d6d8:	mov	x1, x19
  40d6dc:	mov	x0, x23
  40d6e0:	bl	4116c0 <argp_error@@Base+0x1d10>
  40d6e4:	cbz	w0, 40d708 <_obstack_memory_used@@Base+0x11b8>
  40d6e8:	ldr	x20, [x23, #56]
  40d6ec:	mov	x0, x20
  40d6f0:	mov	x2, x19
  40d6f4:	mov	x1, x21
  40d6f8:	bl	401aa0 <memcpy@plt>
  40d6fc:	ldr	x0, [x23, #56]
  40d700:	add	x0, x0, x19
  40d704:	str	x0, [x23, #56]
  40d708:	ldr	x23, [x22, #8]
  40d70c:	ldr	x20, [x23, #56]
  40d710:	b	40d614 <_obstack_memory_used@@Base+0x10c4>
  40d714:	mov	x0, x19
  40d718:	bl	411118 <argp_error@@Base+0x1768>
  40d71c:	ldr	x28, [x22, #8]
  40d720:	ldr	w26, [x25, #24]
  40d724:	ldp	x0, x20, [x28, #48]
  40d728:	ldr	x1, [x28, #32]
  40d72c:	str	x27, [x19, #8]
  40d730:	sub	x0, x20, x0
  40d734:	cmp	x0, x1
  40d738:	b.ls	40d760 <_obstack_memory_used@@Base+0x1210>  // b.plast
  40d73c:	mov	x0, x28
  40d740:	bl	411118 <argp_error@@Base+0x1768>
  40d744:	ldr	x23, [x22, #8]
  40d748:	sxtw	x27, w26
  40d74c:	ldr	x20, [x23, #56]
  40d750:	b	40d600 <_obstack_memory_used@@Base+0x10b0>
  40d754:	sxtw	x27, w26
  40d758:	mov	x23, x19
  40d75c:	b	40d5f8 <_obstack_memory_used@@Base+0x10a8>
  40d760:	sxtw	x27, w26
  40d764:	mov	x23, x28
  40d768:	b	40d600 <_obstack_memory_used@@Base+0x10b0>
  40d76c:	nop
  40d770:	stp	x29, x30, [sp, #-128]!
  40d774:	mov	x29, sp
  40d778:	stp	x21, x22, [sp, #32]
  40d77c:	ldr	w22, [x0, #8]
  40d780:	stp	x19, x20, [sp, #16]
  40d784:	stp	x23, x24, [sp, #48]
  40d788:	stp	x25, x26, [sp, #64]
  40d78c:	stp	x27, x28, [sp, #80]
  40d790:	str	x0, [x29, #120]
  40d794:	cbz	w22, 40d9c0 <_obstack_memory_used@@Base+0x1470>
  40d798:	mov	x19, x0
  40d79c:	mov	x23, x1
  40d7a0:	ldr	x0, [x0, #16]
  40d7a4:	sub	w1, w22, #0x1
  40d7a8:	mov	w20, w1
  40d7ac:	str	w1, [x29, #100]
  40d7b0:	bl	401b00 <strlen@plt>
  40d7b4:	add	x0, x0, #0x10
  40d7b8:	mov	w1, w20
  40d7bc:	and	x0, x0, #0xfffffffffffffff0
  40d7c0:	add	x1, x1, #0x1
  40d7c4:	sub	sp, sp, x0
  40d7c8:	ldr	x21, [x19]
  40d7cc:	lsl	x24, x1, #3
  40d7d0:	sub	x1, x24, x1
  40d7d4:	mov	x0, sp
  40d7d8:	mov	x27, x21
  40d7dc:	stp	x0, x0, [x29, #104]
  40d7e0:	add	x24, x21, x1, lsl #3
  40d7e4:	nop
  40d7e8:	ldr	w0, [x27, #8]
  40d7ec:	ldr	x22, [x27]
  40d7f0:	ldr	x26, [x27, #16]
  40d7f4:	cbz	w0, 40d854 <_obstack_memory_used@@Base+0x1304>
  40d7f8:	sub	w0, w0, #0x1
  40d7fc:	mov	x19, x22
  40d800:	add	x20, x0, #0x1
  40d804:	add	x20, x20, x20, lsl #1
  40d808:	add	x20, x22, x20, lsl #4
  40d80c:	nop
  40d810:	ldr	w28, [x19, #24]
  40d814:	tbnz	w28, #3, 40d848 <_obstack_memory_used@@Base+0x12f8>
  40d818:	ldr	w25, [x19, #8]
  40d81c:	sub	w0, w25, #0x1
  40d820:	cmp	w0, #0xfe
  40d824:	b.hi	40d848 <_obstack_memory_used@@Base+0x12f8>  // b.pmore
  40d828:	bl	401d00 <__ctype_b_loc@plt>
  40d82c:	ldr	x0, [x0]
  40d830:	ldrh	w0, [x0, w25, sxtw #1]
  40d834:	tbz	w0, #14, 40d848 <_obstack_memory_used@@Base+0x12f8>
  40d838:	ldrb	w0, [x26]
  40d83c:	cmp	w25, w0
  40d840:	b.eq	40d9e0 <_obstack_memory_used@@Base+0x1490>  // b.none
  40d844:	nop
  40d848:	add	x19, x19, #0x30
  40d84c:	cmp	x19, x20
  40d850:	b.ne	40d810 <_obstack_memory_used@@Base+0x12c0>  // b.any
  40d854:	add	x27, x27, #0x38
  40d858:	cmp	x27, x24
  40d85c:	b.ne	40d7e8 <_obstack_memory_used@@Base+0x1298>  // b.any
  40d860:	ldp	x0, x1, [x29, #104]
  40d864:	cmp	x0, x1
  40d868:	b.cc	40db54 <_obstack_memory_used@@Base+0x1604>  // b.lo, b.ul, b.last
  40d86c:	ldr	w0, [x29, #100]
  40d870:	adrp	x27, 414000 <argp_error@@Base+0x4650>
  40d874:	add	x25, x27, #0xb80
  40d878:	adrp	x28, 414000 <argp_error@@Base+0x4650>
  40d87c:	add	x0, x0, #0x1
  40d880:	add	x1, x28, #0xb90
  40d884:	str	x1, [x29, #112]
  40d888:	lsl	x24, x0, #3
  40d88c:	sub	x0, x24, x0
  40d890:	add	x24, x21, x0, lsl #3
  40d894:	nop
  40d898:	ldr	w0, [x21, #8]
  40d89c:	ldr	x28, [x21]
  40d8a0:	ldr	x22, [x21, #16]
  40d8a4:	cbz	w0, 40d904 <_obstack_memory_used@@Base+0x13b4>
  40d8a8:	sub	w0, w0, #0x1
  40d8ac:	mov	x19, x28
  40d8b0:	add	x4, x0, #0x1
  40d8b4:	add	x4, x4, x4, lsl #1
  40d8b8:	add	x27, x28, x4, lsl #4
  40d8bc:	nop
  40d8c0:	ldr	w20, [x19, #24]
  40d8c4:	tbnz	w20, #3, 40d8f8 <_obstack_memory_used@@Base+0x13a8>
  40d8c8:	ldr	w26, [x19, #8]
  40d8cc:	sub	w0, w26, #0x1
  40d8d0:	cmp	w0, #0xfe
  40d8d4:	b.hi	40d8f8 <_obstack_memory_used@@Base+0x13a8>  // b.pmore
  40d8d8:	bl	401d00 <__ctype_b_loc@plt>
  40d8dc:	ldr	x0, [x0]
  40d8e0:	ldrh	w0, [x0, w26, sxtw #1]
  40d8e4:	tbz	w0, #14, 40d8f8 <_obstack_memory_used@@Base+0x13a8>
  40d8e8:	ldrb	w0, [x22]
  40d8ec:	cmp	w26, w0
  40d8f0:	b.eq	40da48 <_obstack_memory_used@@Base+0x14f8>  // b.none
  40d8f4:	nop
  40d8f8:	add	x19, x19, #0x30
  40d8fc:	cmp	x19, x27
  40d900:	b.ne	40d8c0 <_obstack_memory_used@@Base+0x1370>  // b.any
  40d904:	add	x21, x21, #0x38
  40d908:	cmp	x21, x24
  40d90c:	b.ne	40d898 <_obstack_memory_used@@Base+0x1348>  // b.any
  40d910:	ldr	x1, [x29, #120]
  40d914:	ldr	w0, [x1, #8]
  40d918:	ldr	x27, [x1]
  40d91c:	cbz	w0, 40d9c0 <_obstack_memory_used@@Base+0x1470>
  40d920:	sub	w0, w0, #0x1
  40d924:	adrp	x24, 414000 <argp_error@@Base+0x4650>
  40d928:	add	x0, x0, #0x1
  40d92c:	adrp	x22, 414000 <argp_error@@Base+0x4650>
  40d930:	add	x24, x24, #0xbb0
  40d934:	add	x22, x22, #0xba0
  40d938:	lsl	x21, x0, #3
  40d93c:	sub	x0, x21, x0
  40d940:	add	x21, x27, x0, lsl #3
  40d944:	nop
  40d948:	ldr	w0, [x27, #8]
  40d94c:	ldr	x26, [x27]
  40d950:	cbz	w0, 40d9b4 <_obstack_memory_used@@Base+0x1464>
  40d954:	sub	w0, w0, #0x1
  40d958:	mov	x19, x26
  40d95c:	add	x20, x0, #0x1
  40d960:	adrp	x25, 414000 <argp_error@@Base+0x4650>
  40d964:	add	x20, x20, x20, lsl #1
  40d968:	add	x20, x26, x20, lsl #4
  40d96c:	nop
  40d970:	ldr	x2, [x19]
  40d974:	cbz	x2, 40d9a8 <_obstack_memory_used@@Base+0x1458>
  40d978:	ldr	w0, [x19, #24]
  40d97c:	tst	x0, #0x4
  40d980:	csel	x26, x26, x19, ne  // ne = any
  40d984:	tbnz	w0, #1, 40d9a8 <_obstack_memory_used@@Base+0x1458>
  40d988:	ldr	x3, [x19, #16]
  40d98c:	ldr	w1, [x26, #24]
  40d990:	orr	w1, w0, w1
  40d994:	and	w0, w0, #0x8
  40d998:	cbz	x3, 40da24 <_obstack_memory_used@@Base+0x14d4>
  40d99c:	and	w4, w1, #0x10
  40d9a0:	orr	w0, w4, w0
  40d9a4:	cbz	w0, 40da88 <_obstack_memory_used@@Base+0x1538>
  40d9a8:	add	x19, x19, #0x30
  40d9ac:	cmp	x19, x20
  40d9b0:	b.ne	40d970 <_obstack_memory_used@@Base+0x1420>  // b.any
  40d9b4:	add	x27, x27, #0x38
  40d9b8:	cmp	x27, x21
  40d9bc:	b.ne	40d948 <_obstack_memory_used@@Base+0x13f8>  // b.any
  40d9c0:	mov	sp, x29
  40d9c4:	ldp	x19, x20, [sp, #16]
  40d9c8:	ldp	x21, x22, [sp, #32]
  40d9cc:	ldp	x23, x24, [sp, #48]
  40d9d0:	ldp	x25, x26, [sp, #64]
  40d9d4:	ldp	x27, x28, [sp, #80]
  40d9d8:	ldp	x29, x30, [sp], #128
  40d9dc:	ret
  40d9e0:	tst	x28, #0x4
  40d9e4:	csel	x22, x22, x19, ne  // ne = any
  40d9e8:	tbnz	w28, #1, 40d9f4 <_obstack_memory_used@@Base+0x14a4>
  40d9ec:	ldr	x0, [x19, #16]
  40d9f0:	cbz	x0, 40d9fc <_obstack_memory_used@@Base+0x14ac>
  40d9f4:	add	x26, x26, #0x1
  40d9f8:	b	40d848 <_obstack_memory_used@@Base+0x12f8>
  40d9fc:	ldr	x0, [x22, #16]
  40da00:	cbnz	x0, 40d9f4 <_obstack_memory_used@@Base+0x14a4>
  40da04:	ldr	w0, [x22, #24]
  40da08:	orr	w28, w28, w0
  40da0c:	tbnz	w28, #4, 40d9f4 <_obstack_memory_used@@Base+0x14a4>
  40da10:	ldr	x0, [x29, #112]
  40da14:	add	x26, x26, #0x1
  40da18:	strb	w25, [x0], #1
  40da1c:	str	x0, [x29, #112]
  40da20:	b	40d848 <_obstack_memory_used@@Base+0x12f8>
  40da24:	and	w3, w1, #0x10
  40da28:	orr	w0, w3, w0
  40da2c:	ldr	x3, [x26, #16]
  40da30:	cbnz	w0, 40d9a8 <_obstack_memory_used@@Base+0x1458>
  40da34:	cbnz	x3, 40da88 <_obstack_memory_used@@Base+0x1538>
  40da38:	add	x1, x25, #0xbc0
  40da3c:	mov	x0, x23
  40da40:	bl	4117b0 <argp_error@@Base+0x1e00>
  40da44:	b	40d9a8 <_obstack_memory_used@@Base+0x1458>
  40da48:	tst	x20, #0x4
  40da4c:	csel	x28, x28, x19, ne  // ne = any
  40da50:	tbnz	w20, #1, 40da80 <_obstack_memory_used@@Base+0x1530>
  40da54:	ldr	x3, [x19, #16]
  40da58:	cbz	x3, 40daac <_obstack_memory_used@@Base+0x155c>
  40da5c:	ldr	w0, [x28, #24]
  40da60:	orr	w20, w20, w0
  40da64:	tbnz	w20, #4, 40da80 <_obstack_memory_used@@Base+0x1530>
  40da68:	tbz	w20, #0, 40dabc <_obstack_memory_used@@Base+0x156c>
  40da6c:	mov	w2, w26
  40da70:	mov	x1, x25
  40da74:	mov	x0, x23
  40da78:	bl	4117b0 <argp_error@@Base+0x1e00>
  40da7c:	nop
  40da80:	add	x22, x22, #0x1
  40da84:	b	40d8f8 <_obstack_memory_used@@Base+0x13a8>
  40da88:	tbz	w1, #0, 40da9c <_obstack_memory_used@@Base+0x154c>
  40da8c:	mov	x1, x22
  40da90:	mov	x0, x23
  40da94:	bl	4117b0 <argp_error@@Base+0x1e00>
  40da98:	b	40d9a8 <_obstack_memory_used@@Base+0x1458>
  40da9c:	mov	x1, x24
  40daa0:	mov	x0, x23
  40daa4:	bl	4117b0 <argp_error@@Base+0x1e00>
  40daa8:	b	40d9a8 <_obstack_memory_used@@Base+0x1458>
  40daac:	ldr	x3, [x28, #16]
  40dab0:	cbnz	x3, 40da5c <_obstack_memory_used@@Base+0x150c>
  40dab4:	add	x22, x22, #0x1
  40dab8:	b	40d8f8 <_obstack_memory_used@@Base+0x13a8>
  40dabc:	mov	x0, x3
  40dac0:	str	x3, [x29, #104]
  40dac4:	bl	401b00 <strlen@plt>
  40dac8:	mov	x20, x0
  40dacc:	ldp	x1, x2, [x23, #48]
  40dad0:	ldr	x0, [x23, #32]
  40dad4:	ldr	x3, [x29, #104]
  40dad8:	sub	x1, x2, x1
  40dadc:	cmp	x1, x0
  40dae0:	b.hi	40dbc0 <_obstack_memory_used@@Base+0x1670>  // b.pmore
  40dae4:	ldr	x1, [x23, #40]
  40dae8:	ldr	x6, [x23, #16]
  40daec:	cmp	x1, #0x0
  40daf0:	csel	x0, x1, xzr, ge  // ge = tcont
  40daf4:	add	x0, x0, #0x6
  40daf8:	add	x0, x0, x20
  40dafc:	cmp	x0, x6
  40db00:	ldr	x0, [x23, #64]
  40db04:	b.cs	40db88 <_obstack_memory_used@@Base+0x1638>  // b.hs, b.nlast
  40db08:	cmp	x2, x0
  40db0c:	b.cc	40db2c <_obstack_memory_used@@Base+0x15dc>  // b.lo, b.ul, b.last
  40db10:	mov	x0, x23
  40db14:	mov	x1, #0x1                   	// #1
  40db18:	str	x3, [x29, #104]
  40db1c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40db20:	ldr	x3, [x29, #104]
  40db24:	cbz	w0, 40db3c <_obstack_memory_used@@Base+0x15ec>
  40db28:	ldr	x2, [x23, #56]
  40db2c:	add	x0, x2, #0x1
  40db30:	str	x0, [x23, #56]
  40db34:	mov	w0, #0x20                  	// #32
  40db38:	strb	w0, [x2]
  40db3c:	ldr	w2, [x19, #8]
  40db40:	mov	x0, x23
  40db44:	ldr	x1, [x29, #112]
  40db48:	add	x22, x22, #0x1
  40db4c:	bl	4117b0 <argp_error@@Base+0x1e00>
  40db50:	b	40d8f8 <_obstack_memory_used@@Base+0x13a8>
  40db54:	strb	wzr, [x1]
  40db58:	mov	x2, x0
  40db5c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40db60:	mov	x0, x23
  40db64:	add	x1, x1, #0xb78
  40db68:	bl	4117b0 <argp_error@@Base+0x1e00>
  40db6c:	ldr	x0, [x29, #120]
  40db70:	ldr	w22, [x0, #8]
  40db74:	cbz	w22, 40d9c0 <_obstack_memory_used@@Base+0x1470>
  40db78:	ldr	x21, [x0]
  40db7c:	sub	w0, w22, #0x1
  40db80:	str	w0, [x29, #100]
  40db84:	b	40d86c <_obstack_memory_used@@Base+0x131c>
  40db88:	cmp	x2, x0
  40db8c:	b.cc	40dbac <_obstack_memory_used@@Base+0x165c>  // b.lo, b.ul, b.last
  40db90:	mov	x0, x23
  40db94:	mov	x1, #0x1                   	// #1
  40db98:	str	x3, [x29, #104]
  40db9c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40dba0:	ldr	x3, [x29, #104]
  40dba4:	cbz	w0, 40db3c <_obstack_memory_used@@Base+0x15ec>
  40dba8:	ldr	x2, [x23, #56]
  40dbac:	add	x0, x2, #0x1
  40dbb0:	str	x0, [x23, #56]
  40dbb4:	mov	w0, #0xa                   	// #10
  40dbb8:	strb	w0, [x2]
  40dbbc:	b	40db3c <_obstack_memory_used@@Base+0x15ec>
  40dbc0:	mov	x0, x23
  40dbc4:	bl	411118 <argp_error@@Base+0x1768>
  40dbc8:	ldr	x2, [x23, #56]
  40dbcc:	ldr	x3, [x29, #104]
  40dbd0:	b	40dae4 <_obstack_memory_used@@Base+0x1594>
  40dbd4:	nop
  40dbd8:	stp	x29, x30, [sp, #-64]!
  40dbdc:	mov	x29, sp
  40dbe0:	stp	x19, x20, [sp, #16]
  40dbe4:	mov	w20, w0
  40dbe8:	ldr	w0, [x1, #24]
  40dbec:	stp	x21, x22, [sp, #32]
  40dbf0:	mov	x21, x1
  40dbf4:	ldr	x19, [x1, #8]
  40dbf8:	cbz	w0, 40dd04 <_obstack_memory_used@@Base+0x17b4>
  40dbfc:	ldr	x1, [x1]
  40dc00:	ldr	x0, [x21, #16]
  40dc04:	ldr	x22, [x1, #32]
  40dc08:	str	x23, [sp, #48]
  40dc0c:	ldr	x23, [x0]
  40dc10:	ldr	w0, [x0, #8]
  40dc14:	cmp	w0, #0x0
  40dc18:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  40dc1c:	b.ne	40dcb8 <_obstack_memory_used@@Base+0x1768>  // b.any
  40dc20:	cbz	x22, 40dc34 <_obstack_memory_used@@Base+0x16e4>
  40dc24:	ldr	x0, [x22]
  40dc28:	cbz	x0, 40dc34 <_obstack_memory_used@@Base+0x16e4>
  40dc2c:	ldrb	w1, [x0]
  40dc30:	cbnz	w1, 40dd64 <_obstack_memory_used@@Base+0x1814>
  40dc34:	ldp	x2, x0, [x19, #48]
  40dc38:	ldr	x1, [x19, #32]
  40dc3c:	sub	x0, x0, x2
  40dc40:	ldr	x23, [sp, #48]
  40dc44:	str	wzr, [x21, #24]
  40dc48:	cmp	x0, x1
  40dc4c:	b.hi	40dd58 <_obstack_memory_used@@Base+0x1808>  // b.pmore
  40dc50:	ldr	x0, [x19, #40]
  40dc54:	mov	w21, #0x20                  	// #32
  40dc58:	cmp	x0, #0x0
  40dc5c:	csel	x0, x0, xzr, ge  // ge = tcont
  40dc60:	sub	w20, w20, w0
  40dc64:	cmp	w20, #0x0
  40dc68:	sub	w20, w20, #0x1
  40dc6c:	b.le	40dca8 <_obstack_memory_used@@Base+0x1758>
  40dc70:	ldp	x2, x3, [x19, #56]
  40dc74:	sub	w20, w20, #0x1
  40dc78:	mov	x0, x19
  40dc7c:	mov	x1, #0x1                   	// #1
  40dc80:	cmp	x2, x3
  40dc84:	b.cc	40dc94 <_obstack_memory_used@@Base+0x1744>  // b.lo, b.ul, b.last
  40dc88:	bl	4116c0 <argp_error@@Base+0x1d10>
  40dc8c:	cbz	w0, 40dca0 <_obstack_memory_used@@Base+0x1750>
  40dc90:	ldr	x2, [x19, #56]
  40dc94:	add	x0, x2, #0x1
  40dc98:	str	x0, [x19, #56]
  40dc9c:	strb	w21, [x2]
  40dca0:	cmn	w20, #0x1
  40dca4:	b.ne	40dc70 <_obstack_memory_used@@Base+0x1720>  // b.any
  40dca8:	ldp	x19, x20, [sp, #16]
  40dcac:	ldp	x21, x22, [sp, #32]
  40dcb0:	ldp	x29, x30, [sp], #64
  40dcb4:	ret
  40dcb8:	ldr	w1, [x1, #24]
  40dcbc:	ldr	w0, [x23, #24]
  40dcc0:	cmp	w1, w0
  40dcc4:	b.eq	40dc20 <_obstack_memory_used@@Base+0x16d0>  // b.none
  40dcc8:	ldp	x0, x1, [x19, #56]
  40dccc:	cmp	x0, x1
  40dcd0:	b.cc	40dce8 <_obstack_memory_used@@Base+0x1798>  // b.lo, b.ul, b.last
  40dcd4:	mov	x0, x19
  40dcd8:	mov	x1, #0x1                   	// #1
  40dcdc:	bl	4116c0 <argp_error@@Base+0x1d10>
  40dce0:	cbz	w0, 40dcf8 <_obstack_memory_used@@Base+0x17a8>
  40dce4:	ldr	x0, [x19, #56]
  40dce8:	add	x1, x0, #0x1
  40dcec:	str	x1, [x19, #56]
  40dcf0:	mov	w1, #0xa                   	// #10
  40dcf4:	strb	w1, [x0]
  40dcf8:	ldr	x19, [x21, #8]
  40dcfc:	cbnz	x22, 40dc24 <_obstack_memory_used@@Base+0x16d4>
  40dd00:	b	40dc34 <_obstack_memory_used@@Base+0x16e4>
  40dd04:	ldp	x0, x2, [x19, #56]
  40dd08:	add	x1, x0, #0x2
  40dd0c:	cmp	x2, x1
  40dd10:	b.cs	40dd28 <_obstack_memory_used@@Base+0x17d8>  // b.hs, b.nlast
  40dd14:	mov	x0, x19
  40dd18:	mov	x1, #0x2                   	// #2
  40dd1c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40dd20:	cbz	w0, 40dd3c <_obstack_memory_used@@Base+0x17ec>
  40dd24:	ldr	x0, [x19, #56]
  40dd28:	mov	w1, #0x202c                	// #8236
  40dd2c:	strh	w1, [x0]
  40dd30:	ldr	x0, [x19, #56]
  40dd34:	add	x0, x0, #0x2
  40dd38:	str	x0, [x19, #56]
  40dd3c:	ldr	x19, [x21, #8]
  40dd40:	ldp	x2, x0, [x19, #48]
  40dd44:	ldr	x1, [x19, #32]
  40dd48:	sub	x0, x0, x2
  40dd4c:	cmp	x0, x1
  40dd50:	b.ls	40dc50 <_obstack_memory_used@@Base+0x1700>  // b.plast
  40dd54:	nop
  40dd58:	mov	x0, x19
  40dd5c:	bl	411118 <argp_error@@Base+0x1768>
  40dd60:	b	40dc50 <_obstack_memory_used@@Base+0x1700>
  40dd64:	cbz	x23, 40dd90 <_obstack_memory_used@@Base+0x1840>
  40dd68:	ldr	x1, [x23, #32]
  40dd6c:	cmp	x1, x22
  40dd70:	b.eq	40dc34 <_obstack_memory_used@@Base+0x16e4>  // b.none
  40dd74:	cbz	x1, 40dd90 <_obstack_memory_used@@Base+0x1840>
  40dd78:	ldr	x1, [x1, #16]
  40dd7c:	cmp	x1, #0x0
  40dd80:	ccmp	x22, x1, #0x4, ne  // ne = any
  40dd84:	b.ne	40dd78 <_obstack_memory_used@@Base+0x1828>  // b.any
  40dd88:	cmp	x22, x1
  40dd8c:	b.eq	40dc34 <_obstack_memory_used@@Base+0x16e4>  // b.none
  40dd90:	ldr	x1, [x22, #24]
  40dd94:	mov	x2, x21
  40dd98:	ldr	x23, [x19, #24]
  40dd9c:	bl	40d478 <_obstack_memory_used@@Base+0xf28>
  40dda0:	ldr	x22, [x21, #8]
  40dda4:	mov	x19, x22
  40dda8:	ldp	x2, x0, [x22, #48]
  40ddac:	ldr	x1, [x22, #32]
  40ddb0:	sub	x0, x0, x2
  40ddb4:	cmp	x0, x1
  40ddb8:	b.hi	40ddc8 <_obstack_memory_used@@Base+0x1878>  // b.pmore
  40ddbc:	sxtw	x23, w23
  40ddc0:	str	x23, [x22, #24]
  40ddc4:	b	40dc40 <_obstack_memory_used@@Base+0x16f0>
  40ddc8:	mov	x0, x22
  40ddcc:	bl	411118 <argp_error@@Base+0x1768>
  40ddd0:	ldr	x19, [x21, #8]
  40ddd4:	ldp	x2, x0, [x19, #48]
  40ddd8:	ldr	x1, [x19, #32]
  40dddc:	sub	x0, x0, x2
  40dde0:	b	40ddbc <_obstack_memory_used@@Base+0x186c>
  40dde4:	nop
  40dde8:	stp	x29, x30, [sp, #-128]!
  40ddec:	mov	x29, sp
  40ddf0:	stp	x19, x20, [sp, #16]
  40ddf4:	stp	x27, x28, [sp, #80]
  40ddf8:	mov	x28, x5
  40ddfc:	ldp	x27, x20, [x0, #24]
  40de00:	stp	x21, x22, [sp, #32]
  40de04:	mov	x22, x0
  40de08:	stp	x23, x24, [sp, #48]
  40de0c:	mov	w21, w2
  40de10:	mov	w23, w3
  40de14:	stp	x25, x26, [sp, #64]
  40de18:	mov	w25, w4
  40de1c:	mov	x26, x1
  40de20:	cbz	x27, 40e054 <_obstack_memory_used@@Base+0x1b04>
  40de24:	mov	x0, x27
  40de28:	mov	w1, #0xb                   	// #11
  40de2c:	bl	401d70 <strchr@plt>
  40de30:	mov	x24, x0
  40de34:	cbz	x0, 40de80 <_obstack_memory_used@@Base+0x1930>
  40de38:	cbz	w21, 40e064 <_obstack_memory_used@@Base+0x1b14>
  40de3c:	ldrb	w0, [x0, #1]
  40de40:	ldr	x4, [x22, #40]
  40de44:	cbz	w0, 40deb0 <_obstack_memory_used@@Base+0x1960>
  40de48:	add	x3, x24, #0x1
  40de4c:	cbz	x4, 40e29c <_obstack_memory_used@@Base+0x1d4c>
  40de50:	mov	x1, x26
  40de54:	mov	x0, x22
  40de58:	str	x3, [sp, #104]
  40de5c:	bl	40ae10 <argp_parse@@Base+0xc80>
  40de60:	ldr	x3, [sp, #104]
  40de64:	mov	x24, x0
  40de68:	mov	w0, #0x2                   	// #2
  40de6c:	str	wzr, [sp, #116]
  40de70:	mov	x27, x3
  40de74:	movk	w0, #0x200, lsl #16
  40de78:	ldr	x3, [x22, #40]
  40de7c:	b	40e098 <_obstack_memory_used@@Base+0x1b48>
  40de80:	ldr	x4, [x22, #40]
  40de84:	cbnz	w21, 40deb0 <_obstack_memory_used@@Base+0x1960>
  40de88:	str	wzr, [sp, #116]
  40de8c:	cbz	x4, 40e2f0 <_obstack_memory_used@@Base+0x1da0>
  40de90:	mov	x1, x26
  40de94:	mov	x0, x22
  40de98:	bl	40ae10 <argp_parse@@Base+0xc80>
  40de9c:	mov	x24, x0
  40dea0:	mov	w0, #0x1                   	// #1
  40dea4:	movk	w0, #0x200, lsl #16
  40dea8:	ldr	x3, [x22, #40]
  40deac:	b	40e098 <_obstack_memory_used@@Base+0x1b48>
  40deb0:	cbz	x4, 40e05c <_obstack_memory_used@@Base+0x1b0c>
  40deb4:	mov	x1, x26
  40deb8:	mov	x0, x22
  40debc:	bl	40ae10 <argp_parse@@Base+0xc80>
  40dec0:	mov	x24, x0
  40dec4:	ldr	x3, [x22, #40]
  40dec8:	mov	w0, #0x2                   	// #2
  40decc:	mov	x2, x24
  40ded0:	mov	x27, #0x0                   	// #0
  40ded4:	movk	w0, #0x200, lsl #16
  40ded8:	mov	x1, x27
  40dedc:	str	wzr, [sp, #116]
  40dee0:	blr	x3
  40dee4:	mov	x3, x0
  40dee8:	cbz	x3, 40e2fc <_obstack_memory_used@@Base+0x1dac>
  40deec:	ldr	x19, [x28, #56]
  40def0:	cbnz	w23, 40e1e8 <_obstack_memory_used@@Base+0x1c98>
  40def4:	mov	x0, x3
  40def8:	str	x3, [sp, #104]
  40defc:	bl	401b00 <strlen@plt>
  40df00:	mov	x2, x0
  40df04:	ldr	x3, [sp, #104]
  40df08:	cbnz	x0, 40e114 <_obstack_memory_used@@Base+0x1bc4>
  40df0c:	ldr	x1, [x28, #48]
  40df10:	ldr	x0, [x28, #32]
  40df14:	sub	x19, x19, x1
  40df18:	cmp	x19, x0
  40df1c:	b.hi	40e184 <_obstack_memory_used@@Base+0x1c34>  // b.pmore
  40df20:	ldr	x0, [x28, #40]
  40df24:	ldr	x1, [x28, #8]
  40df28:	cmp	x0, #0x0
  40df2c:	csel	x0, x0, xzr, ge  // ge = tcont
  40df30:	cmp	x1, x0
  40df34:	b.cc	40e1ac <_obstack_memory_used@@Base+0x1c5c>  // b.lo, b.ul, b.last
  40df38:	cmp	x27, x3
  40df3c:	mov	w19, #0x1                   	// #1
  40df40:	b.eq	40df4c <_obstack_memory_used@@Base+0x19fc>  // b.none
  40df44:	mov	x0, x3
  40df48:	bl	401d30 <free@plt>
  40df4c:	ldr	w0, [sp, #116]
  40df50:	cbz	w0, 40df5c <_obstack_memory_used@@Base+0x1a0c>
  40df54:	mov	x0, x27
  40df58:	bl	401d30 <free@plt>
  40df5c:	cbz	w21, 40dfd8 <_obstack_memory_used@@Base+0x1a88>
  40df60:	ldr	x4, [x22, #40]
  40df64:	cbz	x4, 40dfd8 <_obstack_memory_used@@Base+0x1a88>
  40df68:	mov	w0, #0x4                   	// #4
  40df6c:	mov	x2, x24
  40df70:	movk	w0, #0x200, lsl #16
  40df74:	mov	x1, #0x0                   	// #0
  40df78:	blr	x4
  40df7c:	mov	x22, x0
  40df80:	cbz	x0, 40dfd8 <_obstack_memory_used@@Base+0x1a88>
  40df84:	orr	w19, w23, w19
  40df88:	cbnz	w19, 40e274 <_obstack_memory_used@@Base+0x1d24>
  40df8c:	mov	x0, x22
  40df90:	bl	401b00 <strlen@plt>
  40df94:	mov	x19, x0
  40df98:	cbnz	x0, 40e234 <_obstack_memory_used@@Base+0x1ce4>
  40df9c:	mov	x0, x22
  40dfa0:	bl	401d30 <free@plt>
  40dfa4:	ldp	x2, x0, [x28, #48]
  40dfa8:	ldr	x1, [x28, #32]
  40dfac:	sub	x0, x0, x2
  40dfb0:	cmp	x0, x1
  40dfb4:	b.hi	40e228 <_obstack_memory_used@@Base+0x1cd8>  // b.pmore
  40dfb8:	ldr	x0, [x28, #40]
  40dfbc:	ldr	x1, [x28, #8]
  40dfc0:	cmp	x0, #0x0
  40dfc4:	csel	x0, x0, xzr, ge  // ge = tcont
  40dfc8:	cmp	x1, x0
  40dfcc:	b.cc	40e0f0 <_obstack_memory_used@@Base+0x1ba0>  // b.lo, b.ul, b.last
  40dfd0:	mov	w19, #0x1                   	// #1
  40dfd4:	nop
  40dfd8:	cbz	x20, 40e034 <_obstack_memory_used@@Base+0x1ae4>
  40dfdc:	ldr	x0, [x20]
  40dfe0:	cbz	x0, 40e034 <_obstack_memory_used@@Base+0x1ae4>
  40dfe4:	eor	w2, w25, #0x1
  40dfe8:	eor	w1, w19, #0x1
  40dfec:	and	w22, w2, #0x1
  40dff0:	orr	w1, w1, w2
  40dff4:	tbz	w1, #0, 40e294 <_obstack_memory_used@@Base+0x1d44>
  40dff8:	orr	w1, w23, w19
  40dffc:	mov	x5, x28
  40e000:	cmp	w1, #0x0
  40e004:	mov	w4, w25
  40e008:	cset	w3, ne  // ne = any
  40e00c:	mov	x1, x26
  40e010:	mov	w2, w21
  40e014:	bl	40dde8 <_obstack_memory_used@@Base+0x1898>
  40e018:	mov	w1, w0
  40e01c:	ldr	x0, [x20, #32]!
  40e020:	orr	w19, w19, w1
  40e024:	cmp	w19, #0x0
  40e028:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  40e02c:	cbz	x0, 40e034 <_obstack_memory_used@@Base+0x1ae4>
  40e030:	b.ne	40dff8 <_obstack_memory_used@@Base+0x1aa8>  // b.any
  40e034:	mov	w0, w19
  40e038:	ldp	x19, x20, [sp, #16]
  40e03c:	ldp	x21, x22, [sp, #32]
  40e040:	ldp	x23, x24, [sp, #48]
  40e044:	ldp	x25, x26, [sp, #64]
  40e048:	ldp	x27, x28, [sp, #80]
  40e04c:	ldp	x29, x30, [sp], #128
  40e050:	ret
  40e054:	ldr	x2, [x0, #40]
  40e058:	cbnz	x2, 40e0ac <_obstack_memory_used@@Base+0x1b5c>
  40e05c:	mov	w19, #0x0                   	// #0
  40e060:	b	40dfd8 <_obstack_memory_used@@Base+0x1a88>
  40e064:	subs	x1, x0, x27
  40e068:	b.ne	40e0cc <_obstack_memory_used@@Base+0x1b7c>  // b.any
  40e06c:	ldr	x0, [x22, #40]
  40e070:	cbz	x0, 40e05c <_obstack_memory_used@@Base+0x1b0c>
  40e074:	mov	x1, x26
  40e078:	mov	x0, x22
  40e07c:	bl	40ae10 <argp_parse@@Base+0xc80>
  40e080:	mov	x24, x0
  40e084:	ldr	x3, [x22, #40]
  40e088:	mov	w0, #0x1                   	// #1
  40e08c:	mov	x27, #0x0                   	// #0
  40e090:	movk	w0, #0x200, lsl #16
  40e094:	str	wzr, [sp, #116]
  40e098:	mov	x2, x24
  40e09c:	mov	x1, x27
  40e0a0:	blr	x3
  40e0a4:	mov	x3, x0
  40e0a8:	b	40dee8 <_obstack_memory_used@@Base+0x1998>
  40e0ac:	bl	40ae10 <argp_parse@@Base+0xc80>
  40e0b0:	mov	x24, x0
  40e0b4:	mov	w0, #0x1                   	// #1
  40e0b8:	str	wzr, [sp, #116]
  40e0bc:	movk	w0, #0x200, lsl #16
  40e0c0:	add	w0, w21, w0
  40e0c4:	ldr	x3, [x22, #40]
  40e0c8:	b	40e098 <_obstack_memory_used@@Base+0x1b48>
  40e0cc:	mov	x0, x27
  40e0d0:	bl	401d60 <strndup@plt>
  40e0d4:	ldr	x4, [x22, #40]
  40e0d8:	mov	x27, x0
  40e0dc:	cmp	x0, #0x0
  40e0e0:	cbz	x4, 40e2dc <_obstack_memory_used@@Base+0x1d8c>
  40e0e4:	cset	w0, ne  // ne = any
  40e0e8:	str	w0, [sp, #116]
  40e0ec:	b	40de90 <_obstack_memory_used@@Base+0x1940>
  40e0f0:	ldp	x0, x1, [x28, #56]
  40e0f4:	cmp	x0, x1
  40e0f8:	b.cs	40e2c4 <_obstack_memory_used@@Base+0x1d74>  // b.hs, b.nlast
  40e0fc:	add	x1, x0, #0x1
  40e100:	str	x1, [x28, #56]
  40e104:	mov	w19, #0x1                   	// #1
  40e108:	mov	w1, #0xa                   	// #10
  40e10c:	strb	w1, [x0]
  40e110:	b	40dfd8 <_obstack_memory_used@@Base+0x1a88>
  40e114:	ldr	x1, [x28, #64]
  40e118:	add	x0, x19, x0
  40e11c:	cmp	x1, x0
  40e120:	b.cs	40e148 <_obstack_memory_used@@Base+0x1bf8>  // b.hs, b.nlast
  40e124:	mov	x1, x2
  40e128:	mov	x0, x28
  40e12c:	str	x2, [sp, #104]
  40e130:	str	x3, [sp, #120]
  40e134:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e138:	ldr	x19, [x28, #56]
  40e13c:	ldr	x2, [sp, #104]
  40e140:	ldr	x3, [sp, #120]
  40e144:	cbz	w0, 40df0c <_obstack_memory_used@@Base+0x19bc>
  40e148:	mov	x1, x3
  40e14c:	mov	x0, x19
  40e150:	str	x3, [sp, #104]
  40e154:	str	x2, [sp, #120]
  40e158:	bl	401aa0 <memcpy@plt>
  40e15c:	ldr	x19, [x28, #56]
  40e160:	ldr	x2, [sp, #120]
  40e164:	ldr	x1, [x28, #48]
  40e168:	add	x19, x19, x2
  40e16c:	ldr	x0, [x28, #32]
  40e170:	str	x19, [x28, #56]
  40e174:	sub	x19, x19, x1
  40e178:	cmp	x19, x0
  40e17c:	ldr	x3, [sp, #104]
  40e180:	b.ls	40df20 <_obstack_memory_used@@Base+0x19d0>  // b.plast
  40e184:	mov	x0, x28
  40e188:	str	x3, [sp, #104]
  40e18c:	bl	411118 <argp_error@@Base+0x1768>
  40e190:	ldr	x0, [x28, #40]
  40e194:	ldr	x1, [x28, #8]
  40e198:	cmp	x0, #0x0
  40e19c:	csel	x0, x0, xzr, ge  // ge = tcont
  40e1a0:	cmp	x1, x0
  40e1a4:	ldr	x3, [sp, #104]
  40e1a8:	b.cs	40df38 <_obstack_memory_used@@Base+0x19e8>  // b.hs, b.nlast
  40e1ac:	ldp	x0, x1, [x28, #56]
  40e1b0:	cmp	x0, x1
  40e1b4:	b.cc	40e1d4 <_obstack_memory_used@@Base+0x1c84>  // b.lo, b.ul, b.last
  40e1b8:	mov	x0, x28
  40e1bc:	mov	x1, #0x1                   	// #1
  40e1c0:	str	x3, [sp, #104]
  40e1c4:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e1c8:	ldr	x3, [sp, #104]
  40e1cc:	cbz	w0, 40df38 <_obstack_memory_used@@Base+0x19e8>
  40e1d0:	ldr	x0, [x28, #56]
  40e1d4:	add	x1, x0, #0x1
  40e1d8:	str	x1, [x28, #56]
  40e1dc:	mov	w1, #0xa                   	// #10
  40e1e0:	strb	w1, [x0]
  40e1e4:	b	40df38 <_obstack_memory_used@@Base+0x19e8>
  40e1e8:	ldr	x0, [x28, #64]
  40e1ec:	cmp	x0, x19
  40e1f0:	b.hi	40e210 <_obstack_memory_used@@Base+0x1cc0>  // b.pmore
  40e1f4:	mov	x0, x28
  40e1f8:	mov	x1, #0x1                   	// #1
  40e1fc:	str	x3, [sp, #104]
  40e200:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e204:	ldr	x19, [x28, #56]
  40e208:	ldr	x3, [sp, #104]
  40e20c:	cbz	w0, 40def4 <_obstack_memory_used@@Base+0x19a4>
  40e210:	add	x0, x19, #0x1
  40e214:	str	x0, [x28, #56]
  40e218:	mov	w0, #0xa                   	// #10
  40e21c:	strb	w0, [x19]
  40e220:	ldr	x19, [x28, #56]
  40e224:	b	40def4 <_obstack_memory_used@@Base+0x19a4>
  40e228:	mov	x0, x28
  40e22c:	bl	411118 <argp_error@@Base+0x1768>
  40e230:	b	40dfb8 <_obstack_memory_used@@Base+0x1a68>
  40e234:	ldp	x0, x2, [x28, #56]
  40e238:	add	x1, x0, x19
  40e23c:	cmp	x2, x1
  40e240:	b.cs	40e258 <_obstack_memory_used@@Base+0x1d08>  // b.hs, b.nlast
  40e244:	mov	x1, x19
  40e248:	mov	x0, x28
  40e24c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e250:	cbz	w0, 40df9c <_obstack_memory_used@@Base+0x1a4c>
  40e254:	ldr	x0, [x28, #56]
  40e258:	mov	x2, x19
  40e25c:	mov	x1, x22
  40e260:	bl	401aa0 <memcpy@plt>
  40e264:	ldr	x0, [x28, #56]
  40e268:	add	x0, x0, x19
  40e26c:	str	x0, [x28, #56]
  40e270:	b	40df9c <_obstack_memory_used@@Base+0x1a4c>
  40e274:	ldp	x0, x1, [x28, #56]
  40e278:	cmp	x0, x1
  40e27c:	b.cs	40e2ac <_obstack_memory_used@@Base+0x1d5c>  // b.hs, b.nlast
  40e280:	add	x1, x0, #0x1
  40e284:	str	x1, [x28, #56]
  40e288:	mov	w1, #0xa                   	// #10
  40e28c:	strb	w1, [x0]
  40e290:	b	40df8c <_obstack_memory_used@@Base+0x1a3c>
  40e294:	mov	w19, #0x1                   	// #1
  40e298:	b	40e034 <_obstack_memory_used@@Base+0x1ae4>
  40e29c:	mov	x27, x3
  40e2a0:	mov	x24, #0x0                   	// #0
  40e2a4:	str	wzr, [sp, #116]
  40e2a8:	b	40deec <_obstack_memory_used@@Base+0x199c>
  40e2ac:	mov	x0, x28
  40e2b0:	mov	x1, #0x1                   	// #1
  40e2b4:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e2b8:	cbz	w0, 40df8c <_obstack_memory_used@@Base+0x1a3c>
  40e2bc:	ldr	x0, [x28, #56]
  40e2c0:	b	40e280 <_obstack_memory_used@@Base+0x1d30>
  40e2c4:	mov	x0, x28
  40e2c8:	mov	x1, #0x1                   	// #1
  40e2cc:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e2d0:	cbz	w0, 40dfd0 <_obstack_memory_used@@Base+0x1a80>
  40e2d4:	ldr	x0, [x28, #56]
  40e2d8:	b	40e0fc <_obstack_memory_used@@Base+0x1bac>
  40e2dc:	mov	x3, x0
  40e2e0:	mov	x24, #0x0                   	// #0
  40e2e4:	cset	w0, ne  // ne = any
  40e2e8:	str	w0, [sp, #116]
  40e2ec:	b	40dee8 <_obstack_memory_used@@Base+0x1998>
  40e2f0:	mov	x3, x27
  40e2f4:	str	w21, [sp, #116]
  40e2f8:	b	40deec <_obstack_memory_used@@Base+0x199c>
  40e2fc:	mov	w19, #0x0                   	// #0
  40e300:	b	40df4c <_obstack_memory_used@@Base+0x19fc>
  40e304:	nop

000000000040e308 <argp_failure@@Base>:
  40e308:	stp	x29, x30, [sp, #-464]!
  40e30c:	mov	x29, sp
  40e310:	stp	x19, x20, [sp, #16]
  40e314:	mov	x20, x0
  40e318:	stp	x21, x22, [sp, #32]
  40e31c:	mov	w22, w2
  40e320:	mov	x21, x3
  40e324:	str	x23, [sp, #48]
  40e328:	mov	w23, w1
  40e32c:	str	q0, [sp, #304]
  40e330:	str	q1, [sp, #320]
  40e334:	str	q2, [sp, #336]
  40e338:	str	q3, [sp, #352]
  40e33c:	str	q4, [sp, #368]
  40e340:	str	q5, [sp, #384]
  40e344:	str	q6, [sp, #400]
  40e348:	str	q7, [sp, #416]
  40e34c:	stp	x4, x5, [sp, #432]
  40e350:	stp	x6, x7, [sp, #448]
  40e354:	cbz	x0, 40e494 <argp_failure@@Base+0x18c>
  40e358:	ldr	w0, [x0, #28]
  40e35c:	tbnz	w0, #1, 40e480 <argp_failure@@Base+0x178>
  40e360:	ldr	x19, [x20, #72]
  40e364:	cbz	x19, 40e480 <argp_failure@@Base+0x178>
  40e368:	mov	x0, x19
  40e36c:	bl	401b40 <flockfile@plt>
  40e370:	ldr	x0, [x20, #64]
  40e374:	mov	x1, x19
  40e378:	bl	401e50 <fputs_unlocked@plt>
  40e37c:	cbz	x21, 40e3f4 <argp_failure@@Base+0xec>
  40e380:	ldp	x0, x4, [x19, #40]
  40e384:	add	x3, sp, #0x1b0
  40e388:	add	x5, sp, #0x1d0
  40e38c:	mov	w2, #0xffffffe0            	// #-32
  40e390:	mov	w1, #0xffffff80            	// #-128
  40e394:	stp	x5, x5, [sp, #104]
  40e398:	str	x3, [sp, #120]
  40e39c:	stp	w2, w1, [sp, #128]
  40e3a0:	cmp	x0, x4
  40e3a4:	b.cs	40e4f8 <argp_failure@@Base+0x1f0>  // b.hs, b.nlast
  40e3a8:	add	x1, x0, #0x1
  40e3ac:	str	x1, [x19, #40]
  40e3b0:	mov	w1, #0x3a                  	// #58
  40e3b4:	strb	w1, [x0]
  40e3b8:	ldp	x0, x1, [x19, #40]
  40e3bc:	cmp	x0, x1
  40e3c0:	b.cs	40e4e8 <argp_failure@@Base+0x1e0>  // b.hs, b.nlast
  40e3c4:	add	x1, x0, #0x1
  40e3c8:	str	x1, [x19, #40]
  40e3cc:	mov	w1, #0x20                  	// #32
  40e3d0:	strb	w1, [x0]
  40e3d4:	ldp	x4, x5, [sp, #104]
  40e3d8:	mov	x1, x21
  40e3dc:	ldp	x6, x7, [sp, #120]
  40e3e0:	add	x2, sp, #0x40
  40e3e4:	mov	x0, x19
  40e3e8:	stp	x4, x5, [sp, #64]
  40e3ec:	stp	x6, x7, [sp, #80]
  40e3f0:	bl	401e70 <vfprintf@plt>
  40e3f4:	ldp	x0, x1, [x19, #40]
  40e3f8:	cbz	w22, 40e450 <argp_failure@@Base+0x148>
  40e3fc:	cmp	x0, x1
  40e400:	b.cs	40e518 <argp_failure@@Base+0x210>  // b.hs, b.nlast
  40e404:	add	x1, x0, #0x1
  40e408:	str	x1, [x19, #40]
  40e40c:	mov	w1, #0x3a                  	// #58
  40e410:	strb	w1, [x0]
  40e414:	ldp	x0, x1, [x19, #40]
  40e418:	cmp	x0, x1
  40e41c:	b.cs	40e508 <argp_failure@@Base+0x200>  // b.hs, b.nlast
  40e420:	add	x1, x0, #0x1
  40e424:	str	x1, [x19, #40]
  40e428:	mov	w1, #0x20                  	// #32
  40e42c:	strb	w1, [x0]
  40e430:	add	x1, sp, #0x68
  40e434:	mov	w0, w22
  40e438:	mov	x2, #0xc8                  	// #200
  40e43c:	bl	401c40 <strerror_r@plt>
  40e440:	cbz	x0, 40e4cc <argp_failure@@Base+0x1c4>
  40e444:	mov	x1, x19
  40e448:	bl	401b10 <fputs@plt>
  40e44c:	ldp	x0, x1, [x19, #40]
  40e450:	cmp	x1, x0
  40e454:	b.ls	40e4bc <argp_failure@@Base+0x1b4>  // b.plast
  40e458:	add	x1, x0, #0x1
  40e45c:	str	x1, [x19, #40]
  40e460:	mov	w1, #0xa                   	// #10
  40e464:	strb	w1, [x0]
  40e468:	mov	x0, x19
  40e46c:	bl	401bf0 <funlockfile@plt>
  40e470:	cbz	w23, 40e480 <argp_failure@@Base+0x178>
  40e474:	cbz	x20, 40e4b4 <argp_failure@@Base+0x1ac>
  40e478:	ldr	w0, [x20, #28]
  40e47c:	tbz	w0, #5, 40e4b4 <argp_failure@@Base+0x1ac>
  40e480:	ldp	x19, x20, [sp, #16]
  40e484:	ldp	x21, x22, [sp, #32]
  40e488:	ldr	x23, [sp, #48]
  40e48c:	ldp	x29, x30, [sp], #464
  40e490:	ret
  40e494:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40e498:	ldr	x19, [x0, #1248]
  40e49c:	cbz	x19, 40e480 <argp_failure@@Base+0x178>
  40e4a0:	mov	x0, x19
  40e4a4:	bl	401b40 <flockfile@plt>
  40e4a8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40e4ac:	ldr	x0, [x0, #1264]
  40e4b0:	b	40e374 <argp_failure@@Base+0x6c>
  40e4b4:	mov	w0, w23
  40e4b8:	bl	401b20 <exit@plt>
  40e4bc:	mov	x0, x19
  40e4c0:	mov	w1, #0xa                   	// #10
  40e4c4:	bl	401ce0 <__overflow@plt>
  40e4c8:	b	40e468 <argp_failure@@Base+0x160>
  40e4cc:	mov	w0, w22
  40e4d0:	bl	401c90 <strerror@plt>
  40e4d4:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40e4d8:	cmp	x0, #0x0
  40e4dc:	add	x1, x1, #0xbc8
  40e4e0:	csel	x0, x1, x0, eq  // eq = none
  40e4e4:	b	40e444 <argp_failure@@Base+0x13c>
  40e4e8:	mov	x0, x19
  40e4ec:	mov	w1, #0x20                  	// #32
  40e4f0:	bl	401ce0 <__overflow@plt>
  40e4f4:	b	40e3d4 <argp_failure@@Base+0xcc>
  40e4f8:	mov	x0, x19
  40e4fc:	mov	w1, #0x3a                  	// #58
  40e500:	bl	401ce0 <__overflow@plt>
  40e504:	b	40e3b8 <argp_failure@@Base+0xb0>
  40e508:	mov	x0, x19
  40e50c:	mov	w1, #0x20                  	// #32
  40e510:	bl	401ce0 <__overflow@plt>
  40e514:	b	40e430 <argp_failure@@Base+0x128>
  40e518:	mov	x0, x19
  40e51c:	mov	w1, #0x3a                  	// #58
  40e520:	bl	401ce0 <__overflow@plt>
  40e524:	b	40e414 <argp_failure@@Base+0x10c>
  40e528:	stp	x29, x30, [sp, #-240]!
  40e52c:	mov	x29, sp
  40e530:	stp	x19, x20, [sp, #16]
  40e534:	stp	x21, x22, [sp, #32]
  40e538:	stp	x23, x24, [sp, #48]
  40e53c:	stp	x25, x26, [sp, #64]
  40e540:	stp	x27, x28, [sp, #80]
  40e544:	str	x2, [x29, #120]
  40e548:	cbz	x2, 40e980 <argp_failure@@Base+0x678>
  40e54c:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  40e550:	add	x19, x19, #0x498
  40e554:	mov	x27, x0
  40e558:	mov	x24, x1
  40e55c:	mov	x0, x2
  40e560:	mov	w20, w3
  40e564:	mov	x28, x4
  40e568:	bl	401b40 <flockfile@plt>
  40e56c:	ldr	w0, [x19, #36]
  40e570:	cbz	w0, 40e9a0 <argp_failure@@Base+0x698>
  40e574:	ldrsw	x2, [x19, #32]
  40e578:	mov	x3, #0x0                   	// #0
  40e57c:	ldr	x0, [x29, #120]
  40e580:	mov	x1, #0x0                   	// #0
  40e584:	bl	411098 <argp_error@@Base+0x16e8>
  40e588:	mov	x26, x0
  40e58c:	cbz	x0, 40f680 <argp_failure@@Base+0x1378>
  40e590:	mov	w0, #0xb                   	// #11
  40e594:	mov	x25, #0x0                   	// #0
  40e598:	tst	w20, w0
  40e59c:	b.ne	40ecc8 <argp_failure@@Base+0x9c0>  // b.any
  40e5a0:	tst	x20, #0x3
  40e5a4:	mov	w21, #0x0                   	// #0
  40e5a8:	b.ne	40eb08 <argp_failure@@Base+0x800>  // b.any
  40e5ac:	tbnz	w20, #4, 40eadc <argp_failure@@Base+0x7d4>
  40e5b0:	and	w22, w20, #0x8
  40e5b4:	tbnz	w20, #2, 40ea7c <argp_failure@@Base+0x774>
  40e5b8:	cbz	w22, 40e91c <argp_failure@@Base+0x614>
  40e5bc:	ldr	w0, [x25, #8]
  40e5c0:	cbz	w0, 40e91c <argp_failure@@Base+0x614>
  40e5c4:	cbnz	w21, 40eaa4 <argp_failure@@Base+0x79c>
  40e5c8:	ldr	x22, [x25]
  40e5cc:	str	xzr, [x29, #184]
  40e5d0:	str	xzr, [x29, #192]
  40e5d4:	sub	w0, w0, #0x1
  40e5d8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40e5dc:	add	x0, x0, #0x1
  40e5e0:	add	x1, x1, #0xd58
  40e5e4:	str	x1, [x29, #96]
  40e5e8:	lsl	x2, x0, #3
  40e5ec:	sub	x0, x2, x0
  40e5f0:	ldr	x1, [x26, #32]
  40e5f4:	add	x0, x22, x0, lsl #3
  40e5f8:	str	x0, [x29, #112]
  40e5fc:	ldr	x2, [x26, #48]
  40e600:	ldr	x0, [x26, #56]
  40e604:	nop
  40e608:	sub	x0, x0, x2
  40e60c:	cmp	x0, x1
  40e610:	mov	x2, x1
  40e614:	ldr	x28, [x22]
  40e618:	ldr	x23, [x22, #16]
  40e61c:	b.hi	40f15c <argp_failure@@Base+0xe54>  // b.pmore
  40e620:	ldr	w1, [x28, #24]
  40e624:	mov	w4, #0x1                   	// #1
  40e628:	ldr	x3, [x26, #8]
  40e62c:	str	x3, [x29, #144]
  40e630:	ldr	x3, [x26, #24]
  40e634:	str	xzr, [x26, #8]
  40e638:	str	x3, [x29, #136]
  40e63c:	and	w3, w1, #0x8
  40e640:	str	w3, [x29, #132]
  40e644:	add	x3, x29, #0xb8
  40e648:	stp	x22, x26, [x29, #200]
  40e64c:	str	x3, [x29, #216]
  40e650:	str	w4, [x29, #224]
  40e654:	str	x24, [x29, #232]
  40e658:	tbnz	w1, #3, 40f220 <argp_failure@@Base+0xf18>
  40e65c:	ldr	w1, [x22, #8]
  40e660:	cbz	w1, 40e694 <argp_failure@@Base+0x38c>
  40e664:	sub	w4, w1, #0x1
  40e668:	mov	x1, x28
  40e66c:	add	x4, x4, #0x1
  40e670:	add	x4, x4, x4, lsl #1
  40e674:	add	x4, x28, x4, lsl #4
  40e678:	ldr	x6, [x1]
  40e67c:	cbz	x6, 40e688 <argp_failure@@Base+0x380>
  40e680:	ldr	w6, [x1, #24]
  40e684:	tbz	w6, #1, 40f398 <argp_failure@@Base+0x1090>
  40e688:	add	x1, x1, #0x30
  40e68c:	cmp	x1, x4
  40e690:	b.ne	40e678 <argp_failure@@Base+0x370>  // b.any
  40e694:	ldr	w1, [x19, #8]
  40e698:	cmp	x0, x2
  40e69c:	b.hi	40f230 <argp_failure@@Base+0xf28>  // b.pmore
  40e6a0:	ldr	w21, [x22, #8]
  40e6a4:	sxtw	x1, w1
  40e6a8:	str	x1, [x26, #24]
  40e6ac:	cbz	w21, 40e730 <argp_failure@@Base+0x428>
  40e6b0:	sub	w21, w21, #0x1
  40e6b4:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40e6b8:	add	x21, x21, #0x1
  40e6bc:	add	x0, x0, #0xdc0
  40e6c0:	mov	x4, x28
  40e6c4:	str	x0, [x29, #104]
  40e6c8:	add	x21, x21, x21, lsl #1
  40e6cc:	add	x0, x28, x21, lsl #4
  40e6d0:	str	x0, [x29, #152]
  40e6d4:	nop
  40e6d8:	ldr	w21, [x4, #24]
  40e6dc:	tbnz	w21, #3, 40e720 <argp_failure@@Base+0x418>
  40e6e0:	ldr	w1, [x4, #8]
  40e6e4:	str	w1, [x29, #160]
  40e6e8:	sub	w0, w1, #0x1
  40e6ec:	cmp	w0, #0xfe
  40e6f0:	b.hi	40e720 <argp_failure@@Base+0x418>  // b.pmore
  40e6f4:	str	x4, [x29, #168]
  40e6f8:	bl	401d00 <__ctype_b_loc@plt>
  40e6fc:	ldr	w1, [x29, #160]
  40e700:	ldr	x0, [x0]
  40e704:	ldr	x4, [x29, #168]
  40e708:	ldrh	w0, [x0, w1, sxtw #1]
  40e70c:	tbz	w0, #14, 40e720 <argp_failure@@Base+0x418>
  40e710:	ldrb	w0, [x23]
  40e714:	cmp	w1, w0
  40e718:	b.eq	40ee90 <argp_failure@@Base+0xb88>  // b.none
  40e71c:	nop
  40e720:	ldr	x0, [x29, #152]
  40e724:	add	x4, x4, #0x30
  40e728:	cmp	x4, x0
  40e72c:	b.ne	40e6d8 <argp_failure@@Base+0x3d0>  // b.any
  40e730:	ldp	x4, x0, [x26, #48]
  40e734:	ldr	w2, [x28, #24]
  40e738:	ldr	x1, [x26, #32]
  40e73c:	sub	x0, x0, x4
  40e740:	tbz	w2, #3, 40f174 <argp_failure@@Base+0xe6c>
  40e744:	ldr	w21, [x19, #16]
  40e748:	cmp	x0, x1
  40e74c:	b.hi	40f3e0 <argp_failure@@Base+0x10d8>  // b.pmore
  40e750:	ldr	w0, [x22, #8]
  40e754:	sxtw	x21, w21
  40e758:	str	x21, [x26, #24]
  40e75c:	cbz	w0, 40e820 <argp_failure@@Base+0x518>
  40e760:	sub	w23, w0, #0x1
  40e764:	mov	x21, x28
  40e768:	add	x23, x23, #0x1
  40e76c:	add	x23, x23, x23, lsl #1
  40e770:	add	x23, x28, x23, lsl #4
  40e774:	b	40e784 <argp_failure@@Base+0x47c>
  40e778:	add	x21, x21, #0x30
  40e77c:	cmp	x21, x23
  40e780:	b.eq	40e820 <argp_failure@@Base+0x518>  // b.none
  40e784:	ldr	x0, [x21]
  40e788:	cbz	x0, 40e778 <argp_failure@@Base+0x470>
  40e78c:	ldrb	w0, [x0]
  40e790:	cbz	w0, 40e778 <argp_failure@@Base+0x470>
  40e794:	ldr	w0, [x21, #24]
  40e798:	tbnz	w0, #1, 40e778 <argp_failure@@Base+0x470>
  40e79c:	ldr	w0, [x19, #16]
  40e7a0:	add	x1, x29, #0xc8
  40e7a4:	bl	40dbd8 <_obstack_memory_used@@Base+0x1688>
  40e7a8:	ldr	x4, [x21]
  40e7ac:	str	x4, [x29, #168]
  40e7b0:	mov	x0, x4
  40e7b4:	bl	401b00 <strlen@plt>
  40e7b8:	mov	x2, x0
  40e7bc:	ldr	x4, [x29, #168]
  40e7c0:	cbz	x0, 40e778 <argp_failure@@Base+0x470>
  40e7c4:	ldp	x6, x8, [x26, #56]
  40e7c8:	mov	x1, x0
  40e7cc:	mov	x0, x26
  40e7d0:	add	x7, x6, x2
  40e7d4:	cmp	x8, x7
  40e7d8:	b.cs	40e7f0 <argp_failure@@Base+0x4e8>  // b.hs, b.nlast
  40e7dc:	str	x2, [x29, #160]
  40e7e0:	bl	4116c0 <argp_error@@Base+0x1d10>
  40e7e4:	cbz	w0, 40e778 <argp_failure@@Base+0x470>
  40e7e8:	ldp	x2, x4, [x29, #160]
  40e7ec:	ldr	x6, [x26, #56]
  40e7f0:	mov	x1, x4
  40e7f4:	mov	x0, x6
  40e7f8:	str	x2, [x29, #168]
  40e7fc:	bl	401aa0 <memcpy@plt>
  40e800:	add	x21, x21, #0x30
  40e804:	ldr	x0, [x26, #56]
  40e808:	cmp	x21, x23
  40e80c:	ldr	x2, [x29, #168]
  40e810:	add	x2, x0, x2
  40e814:	str	x2, [x26, #56]
  40e818:	b.ne	40e784 <argp_failure@@Base+0x47c>  // b.any
  40e81c:	nop
  40e820:	ldp	x2, x0, [x26, #48]
  40e824:	ldr	x1, [x26, #32]
  40e828:	sub	x0, x0, x2
  40e82c:	cmp	x0, x1
  40e830:	b.hi	40f350 <argp_failure@@Base+0x1048>  // b.pmore
  40e834:	ldr	w0, [x29, #224]
  40e838:	ldr	w4, [x28, #8]
  40e83c:	str	xzr, [x26, #8]
  40e840:	cbz	w0, 40ef48 <argp_failure@@Base+0xc40>
  40e844:	ldr	w0, [x28, #24]
  40e848:	tbnz	w0, #3, 40e870 <argp_failure@@Base+0x568>
  40e84c:	str	w4, [x29, #168]
  40e850:	sub	w0, w4, #0x1
  40e854:	cmp	w0, #0xfe
  40e858:	b.hi	40e870 <argp_failure@@Base+0x568>  // b.pmore
  40e85c:	bl	401d00 <__ctype_b_loc@plt>
  40e860:	ldr	w4, [x29, #168]
  40e864:	ldr	x0, [x0]
  40e868:	ldrh	w0, [x0, w4, sxtw #1]
  40e86c:	tbnz	w0, #14, 40e878 <argp_failure@@Base+0x570>
  40e870:	ldr	x0, [x28]
  40e874:	cbz	x0, 40f48c <argp_failure@@Base+0x1184>
  40e878:	ldp	x2, x0, [x26, #48]
  40e87c:	ldr	x1, [x26, #32]
  40e880:	ldrsw	x28, [x29, #144]
  40e884:	sub	x3, x0, x2
  40e888:	cmp	x3, x1
  40e88c:	b.hi	40f0fc <argp_failure@@Base+0xdf4>  // b.pmore
  40e890:	str	x28, [x26, #8]
  40e894:	ldrsw	x3, [x29, #136]
  40e898:	add	x22, x22, #0x38
  40e89c:	str	x3, [x26, #24]
  40e8a0:	ldr	x3, [x29, #112]
  40e8a4:	cmp	x22, x3
  40e8a8:	b.ne	40e608 <argp_failure@@Base+0x300>  // b.any
  40e8ac:	ldr	w0, [x29, #196]
  40e8b0:	cbz	w0, 40e918 <argp_failure@@Base+0x610>
  40e8b4:	ldr	w0, [x19, #4]
  40e8b8:	cbz	w0, 40e918 <argp_failure@@Base+0x610>
  40e8bc:	ldr	x19, [x24]
  40e8c0:	ldr	x0, [x19, #40]
  40e8c4:	cbz	x0, 40f7cc <argp_failure@@Base+0x14c4>
  40e8c8:	mov	x1, x24
  40e8cc:	mov	x0, x19
  40e8d0:	bl	40ae10 <argp_parse@@Base+0xc80>
  40e8d4:	mov	x2, x0
  40e8d8:	ldr	x3, [x19, #40]
  40e8dc:	mov	w0, #0x5                   	// #5
  40e8e0:	adrp	x19, 414000 <argp_error@@Base+0x4650>
  40e8e4:	add	x19, x19, #0xbf0
  40e8e8:	mov	x1, x19
  40e8ec:	movk	w0, #0x200, lsl #16
  40e8f0:	blr	x3
  40e8f4:	mov	x21, x0
  40e8f8:	cbz	x0, 40e918 <argp_failure@@Base+0x610>
  40e8fc:	ldrb	w0, [x0]
  40e900:	cbnz	w0, 40f7d8 <argp_failure@@Base+0x14d0>
  40e904:	cmp	x21, x19
  40e908:	b.eq	40e918 <argp_failure@@Base+0x610>  // b.none
  40e90c:	mov	x0, x21
  40e910:	bl	401d30 <free@plt>
  40e914:	nop
  40e918:	mov	w21, #0x1                   	// #1
  40e91c:	tbnz	w20, #5, 40edf8 <argp_failure@@Base+0xaf0>
  40e920:	tbz	w20, #6, 40e944 <argp_failure@@Base+0x63c>
  40e924:	adrp	x19, 42a000 <argp_error@@Base+0x1a650>
  40e928:	ldr	x2, [x19, #1624]
  40e92c:	cbz	x2, 40e944 <argp_failure@@Base+0x63c>
  40e930:	cbnz	w21, 40ee6c <argp_failure@@Base+0xb64>
  40e934:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40e938:	mov	x0, x26
  40e93c:	add	x1, x1, #0xde8
  40e940:	bl	4117b0 <argp_error@@Base+0x1e00>
  40e944:	ldr	x0, [x29, #120]
  40e948:	bl	401bf0 <funlockfile@plt>
  40e94c:	cbz	x25, 40e978 <argp_failure@@Base+0x670>
  40e950:	ldr	x19, [x25, #24]
  40e954:	cbz	x19, 40e968 <argp_failure@@Base+0x660>
  40e958:	mov	x0, x19
  40e95c:	ldr	x19, [x19, #40]
  40e960:	bl	401d30 <free@plt>
  40e964:	cbnz	x19, 40e958 <argp_failure@@Base+0x650>
  40e968:	ldr	w0, [x25, #8]
  40e96c:	cbnz	w0, 40f4f0 <argp_failure@@Base+0x11e8>
  40e970:	mov	x0, x25
  40e974:	bl	401d30 <free@plt>
  40e978:	mov	x0, x26
  40e97c:	bl	411678 <argp_error@@Base+0x1cc8>
  40e980:	mov	sp, x29
  40e984:	ldp	x19, x20, [sp, #16]
  40e988:	ldp	x21, x22, [sp, #32]
  40e98c:	ldp	x23, x24, [sp, #48]
  40e990:	ldp	x25, x26, [sp, #64]
  40e994:	ldp	x27, x28, [sp, #80]
  40e998:	ldp	x29, x30, [sp], #240
  40e99c:	ret
  40e9a0:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40e9a4:	add	x0, x0, #0xc68
  40e9a8:	bl	401eb0 <getenv@plt>
  40e9ac:	mov	x21, x0
  40e9b0:	ldp	x0, x1, [x19, #16]
  40e9b4:	stp	x0, x1, [x29, #216]
  40e9b8:	ldp	x2, x3, [x19]
  40e9bc:	stp	x2, x3, [x29, #200]
  40e9c0:	ldr	x0, [x19, #32]
  40e9c4:	str	x0, [x29, #232]
  40e9c8:	cbz	x21, 40e574 <argp_failure@@Base+0x26c>
  40e9cc:	ldrb	w22, [x21]
  40e9d0:	cbz	w22, 40f85c <argp_failure@@Base+0x1554>
  40e9d4:	bl	401d00 <__ctype_b_loc@plt>
  40e9d8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40e9dc:	add	x1, x1, #0xe70
  40e9e0:	stp	x1, x0, [x29, #152]
  40e9e4:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40e9e8:	add	x0, x0, #0xbe0
  40e9ec:	str	x0, [x29, #136]
  40e9f0:	ldr	x0, [x29, #160]
  40e9f4:	ldr	x2, [x0]
  40e9f8:	ubfiz	x0, x22, #1, #8
  40e9fc:	ldrh	w0, [x2, x0]
  40ea00:	tbz	w0, #13, 40ea18 <argp_failure@@Base+0x710>
  40ea04:	nop
  40ea08:	ldrb	w22, [x21, #1]!
  40ea0c:	ubfiz	x0, x22, #1, #8
  40ea10:	ldrh	w0, [x2, x0]
  40ea14:	tbnz	w0, #13, 40ea08 <argp_failure@@Base+0x700>
  40ea18:	tbnz	w0, #10, 40f244 <argp_failure@@Base+0xf3c>
  40ea1c:	cbnz	w22, 40f6a4 <argp_failure@@Base+0x139c>
  40ea20:	ldr	x0, [x29, #152]
  40ea24:	add	x3, x29, #0xc8
  40ea28:	ldr	w2, [x29, #232]
  40ea2c:	add	x0, x0, #0x20
  40ea30:	ldr	x5, [x0, #24]!
  40ea34:	cbz	x5, 40f504 <argp_failure@@Base+0x11fc>
  40ea38:	ldr	w1, [x0, #8]
  40ea3c:	cbnz	w1, 40ea30 <argp_failure@@Base+0x728>
  40ea40:	ldr	x1, [x0, #16]
  40ea44:	cmp	x1, #0x20
  40ea48:	b.eq	40ea30 <argp_failure@@Base+0x728>  // b.none
  40ea4c:	ldr	w1, [x3, x1]
  40ea50:	cmp	w1, w2
  40ea54:	b.lt	40ea30 <argp_failure@@Base+0x728>  // b.tstop
  40ea58:	mov	x0, x24
  40ea5c:	adrp	x4, 414000 <argp_error@@Base+0x4650>
  40ea60:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40ea64:	add	x4, x4, #0xd20
  40ea68:	add	x3, x3, #0xd28
  40ea6c:	mov	w2, #0x0                   	// #0
  40ea70:	mov	w1, #0x0                   	// #0
  40ea74:	bl	40e308 <argp_failure@@Base>
  40ea78:	b	40e574 <argp_failure@@Base+0x26c>
  40ea7c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40ea80:	mov	x3, x28
  40ea84:	add	x1, x1, #0xd88
  40ea88:	mov	x2, x28
  40ea8c:	mov	x0, x26
  40ea90:	mov	w21, #0x1                   	// #1
  40ea94:	bl	4117b0 <argp_error@@Base+0x1e00>
  40ea98:	cbz	w22, 40e91c <argp_failure@@Base+0x614>
  40ea9c:	ldr	w0, [x25, #8]
  40eaa0:	cbz	w0, 40e91c <argp_failure@@Base+0x614>
  40eaa4:	ldp	x0, x1, [x26, #56]
  40eaa8:	cmp	x0, x1
  40eaac:	b.cs	40f718 <argp_failure@@Base+0x1410>  // b.hs, b.nlast
  40eab0:	add	x1, x0, #0x1
  40eab4:	str	x1, [x26, #56]
  40eab8:	mov	w1, #0xa                   	// #10
  40eabc:	strb	w1, [x0]
  40eac0:	ldr	w0, [x25, #8]
  40eac4:	ldr	x22, [x25]
  40eac8:	str	xzr, [x29, #184]
  40eacc:	str	xzr, [x29, #192]
  40ead0:	cbnz	w0, 40e5d4 <argp_failure@@Base+0x2cc>
  40ead4:	mov	w21, #0x1                   	// #1
  40ead8:	b	40e91c <argp_failure@@Base+0x614>
  40eadc:	mov	x5, x26
  40eae0:	mov	x1, x24
  40eae4:	mov	x0, x27
  40eae8:	mov	w4, #0x1                   	// #1
  40eaec:	mov	w3, #0x0                   	// #0
  40eaf0:	mov	w2, #0x0                   	// #0
  40eaf4:	and	w22, w20, #0x8
  40eaf8:	bl	40dde8 <_obstack_memory_used@@Base+0x1898>
  40eafc:	orr	w21, w21, w0
  40eb00:	tbz	w20, #2, 40e5b8 <argp_failure@@Base+0x2b0>
  40eb04:	b	40ea7c <argp_failure@@Base+0x774>
  40eb08:	ldr	x0, [x27, #16]
  40eb0c:	mov	x21, #0x0                   	// #0
  40eb10:	ldr	x22, [x27, #32]
  40eb14:	cbz	x0, 40eb28 <argp_failure@@Base+0x820>
  40eb18:	mov	w1, #0xa                   	// #10
  40eb1c:	bl	401d70 <strchr@plt>
  40eb20:	cmp	x0, #0x0
  40eb24:	cset	x21, ne  // ne = any
  40eb28:	cbz	x22, 40eb4c <argp_failure@@Base+0x844>
  40eb2c:	ldr	x1, [x22]
  40eb30:	cbz	x1, 40eb4c <argp_failure@@Base+0x844>
  40eb34:	ldr	x0, [x1, #16]
  40eb38:	ldr	x1, [x1, #32]
  40eb3c:	bl	40c578 <_obstack_memory_used@@Base+0x28>
  40eb40:	add	x21, x21, x0
  40eb44:	ldr	x1, [x22, #32]!
  40eb48:	cbnz	x1, 40eb34 <argp_failure@@Base+0x82c>
  40eb4c:	add	x0, x21, #0xf
  40eb50:	mov	w1, #0x0                   	// #0
  40eb54:	and	x0, x0, #0xfffffffffffffff0
  40eb58:	mov	x2, x21
  40eb5c:	sub	sp, sp, x0
  40eb60:	mov	w22, #0x1                   	// #1
  40eb64:	mov	x0, sp
  40eb68:	str	x0, [x29, #168]
  40eb6c:	bl	401c20 <memset@plt>
  40eb70:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40eb74:	add	x0, x0, #0xd70
  40eb78:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40eb7c:	add	x1, x1, #0xd68
  40eb80:	stp	x0, x1, [x29, #152]
  40eb84:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40eb88:	add	x0, x0, #0xd60
  40eb8c:	str	x0, [x29, #144]
  40eb90:	b	40ec48 <argp_failure@@Base+0x940>
  40eb94:	ldr	x2, [x29, #144]
  40eb98:	mov	x0, x26
  40eb9c:	ldr	x1, [x29, #160]
  40eba0:	bl	4117b0 <argp_error@@Base+0x1e00>
  40eba4:	ldrsw	x23, [x19, #28]
  40eba8:	ldp	x2, x0, [x26, #48]
  40ebac:	ldr	x1, [x26, #32]
  40ebb0:	sub	x0, x0, x2
  40ebb4:	cmp	x0, x1
  40ebb8:	b.hi	40eca0 <argp_failure@@Base+0x998>  // b.pmore
  40ebbc:	ldr	x22, [x26, #8]
  40ebc0:	str	x23, [x26, #8]
  40ebc4:	tbz	w20, #1, 40ecb4 <argp_failure@@Base+0x9ac>
  40ebc8:	ldr	w0, [x25, #8]
  40ebcc:	cbnz	w0, 40f4a4 <argp_failure@@Base+0x119c>
  40ebd0:	add	x2, x29, #0xc8
  40ebd4:	mov	x1, x24
  40ebd8:	mov	x4, x26
  40ebdc:	mov	x0, x27
  40ebe0:	mov	w3, #0x1                   	// #1
  40ebe4:	bl	40d178 <_obstack_memory_used@@Base+0xc28>
  40ebe8:	mov	w23, w0
  40ebec:	ldp	x1, x0, [x26, #48]
  40ebf0:	ldr	x2, [x26, #32]
  40ebf4:	sub	x1, x0, x1
  40ebf8:	cmp	x1, x2
  40ebfc:	b.hi	40ee28 <argp_failure@@Base+0xb20>  // b.pmore
  40ec00:	sxtw	x22, w22
  40ec04:	sxtw	x21, w21
  40ec08:	str	x21, [x26, #24]
  40ec0c:	ldr	x1, [x26, #64]
  40ec10:	str	x22, [x26, #8]
  40ec14:	cmp	x1, x0
  40ec18:	b.hi	40ec30 <argp_failure@@Base+0x928>  // b.pmore
  40ec1c:	mov	x0, x26
  40ec20:	mov	x1, #0x1                   	// #1
  40ec24:	bl	4116c0 <argp_error@@Base+0x1d10>
  40ec28:	cbz	w0, 40ec40 <argp_failure@@Base+0x938>
  40ec2c:	ldr	x0, [x26, #56]
  40ec30:	add	x1, x0, #0x1
  40ec34:	str	x1, [x26, #56]
  40ec38:	mov	w1, #0xa                   	// #10
  40ec3c:	strb	w1, [x0]
  40ec40:	mov	w22, #0x0                   	// #0
  40ec44:	cbz	w23, 40ee60 <argp_failure@@Base+0xb58>
  40ec48:	ldp	x2, x0, [x26, #48]
  40ec4c:	ldr	x1, [x26, #32]
  40ec50:	ldr	w21, [x19, #28]
  40ec54:	sub	x0, x0, x2
  40ec58:	cmp	x0, x1
  40ec5c:	b.hi	40ee1c <argp_failure@@Base+0xb14>  // b.pmore
  40ec60:	sxtw	x0, w21
  40ec64:	mov	x3, x28
  40ec68:	ldr	x21, [x26, #24]
  40ec6c:	str	x0, [x26, #24]
  40ec70:	ldr	x0, [x29, #168]
  40ec74:	str	x0, [x29, #200]
  40ec78:	cbnz	w22, 40eb94 <argp_failure@@Base+0x88c>
  40ec7c:	ldp	x2, x1, [x29, #152]
  40ec80:	mov	x0, x26
  40ec84:	bl	4117b0 <argp_error@@Base+0x1e00>
  40ec88:	ldrsw	x23, [x19, #28]
  40ec8c:	ldp	x2, x0, [x26, #48]
  40ec90:	ldr	x1, [x26, #32]
  40ec94:	sub	x0, x0, x2
  40ec98:	cmp	x0, x1
  40ec9c:	b.ls	40ebbc <argp_failure@@Base+0x8b4>  // b.plast
  40eca0:	mov	x0, x26
  40eca4:	bl	411118 <argp_error@@Base+0x1768>
  40eca8:	ldr	x22, [x26, #8]
  40ecac:	str	x23, [x26, #8]
  40ecb0:	tbnz	w20, #1, 40ebc8 <argp_failure@@Base+0x8c0>
  40ecb4:	orr	w20, w20, #0x2
  40ecb8:	mov	x1, x26
  40ecbc:	mov	x0, x25
  40ecc0:	bl	40d770 <_obstack_memory_used@@Base+0x1220>
  40ecc4:	b	40ebd0 <argp_failure@@Base+0x8c8>
  40ecc8:	mov	x1, #0x0                   	// #0
  40eccc:	mov	x0, x27
  40ecd0:	bl	40c5d8 <_obstack_memory_used@@Base+0x88>
  40ecd4:	mov	x25, x0
  40ecd8:	ldr	w1, [x0, #8]
  40ecdc:	str	w1, [x29, #136]
  40ece0:	ldr	x2, [x25]
  40ece4:	str	x2, [x29, #152]
  40ece8:	sub	w0, w1, #0x1
  40ecec:	cbz	w1, 40e5a0 <argp_failure@@Base+0x298>
  40ecf0:	add	x1, x0, #0x1
  40ecf4:	adrp	x23, 413000 <argp_error@@Base+0x3650>
  40ecf8:	str	x0, [x29, #144]
  40ecfc:	add	x0, x23, #0x200
  40ed00:	str	x0, [x29, #168]
  40ed04:	lsl	x0, x1, #3
  40ed08:	sub	x0, x0, x1
  40ed0c:	mov	x22, x2
  40ed10:	add	x0, x2, x0, lsl #3
  40ed14:	str	x0, [x29, #160]
  40ed18:	ldr	w0, [x22, #8]
  40ed1c:	ldr	x23, [x22]
  40ed20:	sub	w21, w0, #0x1
  40ed24:	cbz	w0, 40ed60 <argp_failure@@Base+0xa58>
  40ed28:	add	x21, x21, #0x1
  40ed2c:	add	x21, x21, x21, lsl #1
  40ed30:	add	x21, x23, x21, lsl #4
  40ed34:	nop
  40ed38:	ldr	x0, [x23]
  40ed3c:	cbz	x0, 40ed54 <argp_failure@@Base+0xa4c>
  40ed40:	ldr	w3, [x23, #24]
  40ed44:	ldr	x1, [x29, #168]
  40ed48:	tbnz	w3, #1, 40ed54 <argp_failure@@Base+0xa4c>
  40ed4c:	bl	401cf0 <strcmp@plt>
  40ed50:	cbz	w0, 40f414 <argp_failure@@Base+0x110c>
  40ed54:	add	x23, x23, #0x30
  40ed58:	cmp	x23, x21
  40ed5c:	b.ne	40ed38 <argp_failure@@Base+0xa30>  // b.any
  40ed60:	ldr	x0, [x29, #160]
  40ed64:	add	x22, x22, #0x38
  40ed68:	cmp	x22, x0
  40ed6c:	b.ne	40ed18 <argp_failure@@Base+0xa10>  // b.any
  40ed70:	ldp	x0, x2, [x29, #144]
  40ed74:	adrp	x23, 414000 <argp_error@@Base+0x4650>
  40ed78:	add	x1, x0, #0x1
  40ed7c:	add	x0, x23, #0x468
  40ed80:	str	x0, [x29, #168]
  40ed84:	mov	x22, x2
  40ed88:	lsl	x0, x1, #3
  40ed8c:	sub	x0, x0, x1
  40ed90:	add	x0, x2, x0, lsl #3
  40ed94:	str	x0, [x29, #160]
  40ed98:	ldr	w0, [x22, #8]
  40ed9c:	ldr	x23, [x22]
  40eda0:	sub	w21, w0, #0x1
  40eda4:	cbz	w0, 40ede0 <argp_failure@@Base+0xad8>
  40eda8:	add	x21, x21, #0x1
  40edac:	add	x21, x21, x21, lsl #1
  40edb0:	add	x21, x23, x21, lsl #4
  40edb4:	nop
  40edb8:	ldr	x0, [x23]
  40edbc:	cbz	x0, 40edd4 <argp_failure@@Base+0xacc>
  40edc0:	ldr	w3, [x23, #24]
  40edc4:	ldr	x1, [x29, #168]
  40edc8:	tbnz	w3, #1, 40edd4 <argp_failure@@Base+0xacc>
  40edcc:	bl	401cf0 <strcmp@plt>
  40edd0:	cbz	w0, 40f434 <argp_failure@@Base+0x112c>
  40edd4:	add	x23, x23, #0x30
  40edd8:	cmp	x23, x21
  40eddc:	b.ne	40edb8 <argp_failure@@Base+0xab0>  // b.any
  40ede0:	ldr	x0, [x29, #160]
  40ede4:	add	x22, x22, #0x38
  40ede8:	cmp	x22, x0
  40edec:	b.ne	40ed98 <argp_failure@@Base+0xa90>  // b.any
  40edf0:	ldr	w1, [x29, #136]
  40edf4:	b	40f444 <argp_failure@@Base+0x113c>
  40edf8:	mov	w3, w21
  40edfc:	mov	x1, x24
  40ee00:	mov	x0, x27
  40ee04:	mov	x5, x26
  40ee08:	mov	w4, #0x0                   	// #0
  40ee0c:	mov	w2, #0x1                   	// #1
  40ee10:	bl	40dde8 <_obstack_memory_used@@Base+0x1898>
  40ee14:	orr	w21, w21, w0
  40ee18:	b	40e920 <argp_failure@@Base+0x618>
  40ee1c:	mov	x0, x26
  40ee20:	bl	411118 <argp_error@@Base+0x1768>
  40ee24:	b	40ec60 <argp_failure@@Base+0x958>
  40ee28:	mov	x0, x26
  40ee2c:	bl	411118 <argp_error@@Base+0x1768>
  40ee30:	ldp	x1, x0, [x26, #48]
  40ee34:	sxtw	x21, w21
  40ee38:	ldr	x2, [x26, #32]
  40ee3c:	str	x21, [x26, #24]
  40ee40:	sxtw	x22, w22
  40ee44:	sub	x1, x0, x1
  40ee48:	cmp	x1, x2
  40ee4c:	b.ls	40ec0c <argp_failure@@Base+0x904>  // b.plast
  40ee50:	mov	x0, x26
  40ee54:	bl	411118 <argp_error@@Base+0x1768>
  40ee58:	ldr	x0, [x26, #56]
  40ee5c:	b	40ec0c <argp_failure@@Base+0x904>
  40ee60:	mov	w21, #0x1                   	// #1
  40ee64:	tbz	w20, #4, 40e5b0 <argp_failure@@Base+0x2a8>
  40ee68:	b	40eadc <argp_failure@@Base+0x7d4>
  40ee6c:	ldp	x0, x1, [x26, #56]
  40ee70:	cmp	x0, x1
  40ee74:	b.cs	40f6dc <argp_failure@@Base+0x13d4>  // b.hs, b.nlast
  40ee78:	add	x1, x0, #0x1
  40ee7c:	str	x1, [x26, #56]
  40ee80:	mov	w1, #0xa                   	// #10
  40ee84:	strb	w1, [x0]
  40ee88:	ldr	x2, [x19, #1624]
  40ee8c:	b	40e934 <argp_failure@@Base+0x62c>
  40ee90:	tbz	w21, #1, 40ee9c <argp_failure@@Base+0xb94>
  40ee94:	add	x23, x23, #0x1
  40ee98:	b	40e720 <argp_failure@@Base+0x418>
  40ee9c:	ldr	w0, [x19, #8]
  40eea0:	add	x1, x29, #0xc8
  40eea4:	bl	40dbd8 <_obstack_memory_used@@Base+0x1688>
  40eea8:	ldp	x0, x1, [x26, #56]
  40eeac:	ldr	x4, [x29, #168]
  40eeb0:	cmp	x0, x1
  40eeb4:	b.cc	40eed0 <argp_failure@@Base+0xbc8>  // b.lo, b.ul, b.last
  40eeb8:	mov	x0, x26
  40eebc:	mov	x1, #0x1                   	// #1
  40eec0:	bl	4116c0 <argp_error@@Base+0x1d10>
  40eec4:	ldr	x4, [x29, #168]
  40eec8:	cbz	w0, 40eee0 <argp_failure@@Base+0xbd8>
  40eecc:	ldr	x0, [x26, #56]
  40eed0:	add	x1, x0, #0x1
  40eed4:	str	x1, [x26, #56]
  40eed8:	mov	w1, #0x2d                  	// #45
  40eedc:	strb	w1, [x0]
  40eee0:	ldp	x0, x1, [x26, #56]
  40eee4:	ldrb	w2, [x23]
  40eee8:	cmp	x0, x1
  40eeec:	b.cc	40ef14 <argp_failure@@Base+0xc0c>  // b.lo, b.ul, b.last
  40eef0:	mov	x0, x26
  40eef4:	mov	x1, #0x1                   	// #1
  40eef8:	str	w2, [x29, #160]
  40eefc:	str	x4, [x29, #168]
  40ef00:	bl	4116c0 <argp_error@@Base+0x1d10>
  40ef04:	ldr	x4, [x29, #168]
  40ef08:	cbz	w0, 40ef20 <argp_failure@@Base+0xc18>
  40ef0c:	ldr	w2, [x29, #160]
  40ef10:	ldr	x0, [x26, #56]
  40ef14:	add	x1, x0, #0x1
  40ef18:	str	x1, [x26, #56]
  40ef1c:	strb	w2, [x0]
  40ef20:	ldr	w0, [x29, #132]
  40ef24:	ldr	x2, [x28, #16]
  40ef28:	cbz	w0, 40f3ec <argp_failure@@Base+0x10e4>
  40ef2c:	ldr	w0, [x19]
  40ef30:	cbnz	w0, 40f3ec <argp_failure@@Base+0x10e4>
  40ef34:	cbz	x2, 40ee94 <argp_failure@@Base+0xb8c>
  40ef38:	mov	w0, #0x1                   	// #1
  40ef3c:	add	x23, x23, #0x1
  40ef40:	str	w0, [x29, #196]
  40ef44:	b	40e720 <argp_failure@@Base+0x418>
  40ef48:	ldr	x6, [x22, #40]
  40ef4c:	str	w4, [x29, #168]
  40ef50:	ldr	x21, [x28, #32]
  40ef54:	ldr	x0, [x6, #40]
  40ef58:	mov	x23, x21
  40ef5c:	cbz	x0, 40ef90 <argp_failure@@Base+0xc88>
  40ef60:	mov	x1, x24
  40ef64:	mov	x0, x6
  40ef68:	str	x6, [x29, #160]
  40ef6c:	bl	40ae10 <argp_parse@@Base+0xc80>
  40ef70:	ldr	x6, [x29, #160]
  40ef74:	mov	x2, x0
  40ef78:	ldr	w4, [x29, #168]
  40ef7c:	mov	x1, x21
  40ef80:	ldr	x3, [x6, #40]
  40ef84:	mov	w0, w4
  40ef88:	blr	x3
  40ef8c:	mov	x23, x0
  40ef90:	cbz	x23, 40f098 <argp_failure@@Base+0xd90>
  40ef94:	ldrb	w0, [x23]
  40ef98:	cbz	w0, 40f088 <argp_failure@@Base+0xd80>
  40ef9c:	ldp	x1, x0, [x26, #48]
  40efa0:	ldr	x2, [x26, #32]
  40efa4:	sub	x1, x0, x1
  40efa8:	cmp	x1, x2
  40efac:	b.hi	40f5fc <argp_failure@@Base+0x12f4>  // b.pmore
  40efb0:	ldr	x1, [x26, #40]
  40efb4:	ldr	w2, [x19, #20]
  40efb8:	cmp	x1, #0x0
  40efbc:	csel	x1, x1, xzr, ge  // ge = tcont
  40efc0:	sxtw	x3, w2
  40efc4:	str	x3, [x26, #8]
  40efc8:	mov	w3, w2
  40efcc:	sxtw	x3, w3
  40efd0:	str	x3, [x26, #24]
  40efd4:	add	w3, w2, #0x3
  40efd8:	cmp	w3, w1
  40efdc:	b.cc	40f5dc <argp_failure@@Base+0x12d4>  // b.lo, b.ul, b.last
  40efe0:	cmp	w2, w1
  40efe4:	b.hi	40f55c <argp_failure@@Base+0x1254>  // b.pmore
  40efe8:	ldr	x2, [x26, #64]
  40efec:	add	x1, x0, #0x3
  40eff0:	cmp	x2, x1
  40eff4:	b.cs	40f00c <argp_failure@@Base+0xd04>  // b.hs, b.nlast
  40eff8:	mov	x0, x26
  40effc:	mov	x1, #0x3                   	// #3
  40f000:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f004:	cbz	w0, 40f030 <argp_failure@@Base+0xd28>
  40f008:	ldr	x0, [x26, #56]
  40f00c:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40f010:	add	x1, x1, #0xde0
  40f014:	ldrh	w2, [x1]
  40f018:	ldrb	w1, [x1, #2]
  40f01c:	strh	w2, [x0]
  40f020:	strb	w1, [x0, #2]
  40f024:	ldr	x0, [x26, #56]
  40f028:	add	x0, x0, #0x3
  40f02c:	str	x0, [x26, #56]
  40f030:	mov	x0, x23
  40f034:	bl	401b00 <strlen@plt>
  40f038:	mov	x2, x0
  40f03c:	cbz	x0, 40f088 <argp_failure@@Base+0xd80>
  40f040:	ldp	x0, x3, [x26, #56]
  40f044:	add	x1, x0, x2
  40f048:	cmp	x3, x1
  40f04c:	b.cs	40f06c <argp_failure@@Base+0xd64>  // b.hs, b.nlast
  40f050:	mov	x1, x2
  40f054:	mov	x0, x26
  40f058:	str	x2, [x29, #168]
  40f05c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f060:	cbz	w0, 40f088 <argp_failure@@Base+0xd80>
  40f064:	ldr	x0, [x26, #56]
  40f068:	ldr	x2, [x29, #168]
  40f06c:	mov	x1, x23
  40f070:	str	x2, [x29, #168]
  40f074:	bl	401aa0 <memcpy@plt>
  40f078:	ldr	x0, [x26, #56]
  40f07c:	ldr	x2, [x29, #168]
  40f080:	add	x0, x0, x2
  40f084:	str	x0, [x26, #56]
  40f088:	cmp	x21, x23
  40f08c:	b.eq	40f098 <argp_failure@@Base+0xd90>  // b.none
  40f090:	mov	x0, x23
  40f094:	bl	401d30 <free@plt>
  40f098:	ldp	x1, x0, [x26, #48]
  40f09c:	ldr	x2, [x26, #32]
  40f0a0:	sub	x1, x0, x1
  40f0a4:	cmp	x1, x2
  40f0a8:	b.hi	40f3d0 <argp_failure@@Base+0x10c8>  // b.pmore
  40f0ac:	ldr	x1, [x26, #64]
  40f0b0:	str	xzr, [x26, #8]
  40f0b4:	cmp	x1, x0
  40f0b8:	b.hi	40f0d0 <argp_failure@@Base+0xdc8>  // b.pmore
  40f0bc:	mov	x0, x26
  40f0c0:	mov	x1, #0x1                   	// #1
  40f0c4:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f0c8:	cbz	w0, 40f0e0 <argp_failure@@Base+0xdd8>
  40f0cc:	ldr	x0, [x26, #56]
  40f0d0:	add	x1, x0, #0x1
  40f0d4:	str	x1, [x26, #56]
  40f0d8:	mov	w1, #0xa                   	// #10
  40f0dc:	strb	w1, [x0]
  40f0e0:	str	x22, [x29, #184]
  40f0e4:	ldp	x2, x0, [x26, #48]
  40f0e8:	ldr	x1, [x26, #32]
  40f0ec:	ldrsw	x28, [x29, #144]
  40f0f0:	sub	x3, x0, x2
  40f0f4:	cmp	x3, x1
  40f0f8:	b.ls	40e890 <argp_failure@@Base+0x588>  // b.plast
  40f0fc:	mov	x0, x26
  40f100:	bl	411118 <argp_error@@Base+0x1768>
  40f104:	ldp	x2, x0, [x26, #48]
  40f108:	str	x28, [x26, #8]
  40f10c:	ldr	x1, [x26, #32]
  40f110:	sub	x3, x0, x2
  40f114:	cmp	x3, x1
  40f118:	b.ls	40e894 <argp_failure@@Base+0x58c>  // b.plast
  40f11c:	mov	x0, x26
  40f120:	bl	411118 <argp_error@@Base+0x1768>
  40f124:	ldrsw	x0, [x29, #136]
  40f128:	add	x22, x22, #0x38
  40f12c:	str	x0, [x26, #24]
  40f130:	ldr	x0, [x29, #112]
  40f134:	cmp	x22, x0
  40f138:	b.eq	40e8ac <argp_failure@@Base+0x5a4>  // b.none
  40f13c:	ldp	x2, x0, [x26, #48]
  40f140:	ldr	x1, [x26, #32]
  40f144:	ldr	x28, [x22]
  40f148:	sub	x0, x0, x2
  40f14c:	mov	x2, x1
  40f150:	cmp	x0, x1
  40f154:	ldr	x23, [x22, #16]
  40f158:	b.ls	40e620 <argp_failure@@Base+0x318>  // b.plast
  40f15c:	mov	x0, x26
  40f160:	bl	411118 <argp_error@@Base+0x1768>
  40f164:	ldp	x1, x0, [x26, #48]
  40f168:	ldr	x2, [x26, #32]
  40f16c:	sub	x0, x0, x1
  40f170:	b	40e620 <argp_failure@@Base+0x318>
  40f174:	ldr	w21, [x19, #12]
  40f178:	cmp	x0, x1
  40f17c:	b.hi	40f3c4 <argp_failure@@Base+0x10bc>  // b.pmore
  40f180:	ldr	w0, [x22, #8]
  40f184:	sxtw	x21, w21
  40f188:	str	x21, [x26, #24]
  40f18c:	cbz	w0, 40e820 <argp_failure@@Base+0x518>
  40f190:	sub	w23, w0, #0x1
  40f194:	adrp	x21, 414000 <argp_error@@Base+0x4650>
  40f198:	add	x23, x23, #0x1
  40f19c:	add	x0, x21, #0xdc8
  40f1a0:	mov	x21, x28
  40f1a4:	str	x0, [x29, #168]
  40f1a8:	add	x23, x23, x23, lsl #1
  40f1ac:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40f1b0:	add	x0, x0, #0xdd8
  40f1b4:	str	x0, [x29, #160]
  40f1b8:	add	x23, x28, x23, lsl #4
  40f1bc:	b	40f1cc <argp_failure@@Base+0xec4>
  40f1c0:	add	x21, x21, #0x30
  40f1c4:	cmp	x21, x23
  40f1c8:	b.eq	40e820 <argp_failure@@Base+0x518>  // b.none
  40f1cc:	ldr	x0, [x21]
  40f1d0:	cbz	x0, 40f1c0 <argp_failure@@Base+0xeb8>
  40f1d4:	ldr	w0, [x21, #24]
  40f1d8:	tbnz	w0, #1, 40f1c0 <argp_failure@@Base+0xeb8>
  40f1dc:	ldr	w0, [x19, #12]
  40f1e0:	add	x1, x29, #0xc8
  40f1e4:	bl	40dbd8 <_obstack_memory_used@@Base+0x1688>
  40f1e8:	ldr	x2, [x21]
  40f1ec:	mov	x0, x26
  40f1f0:	ldr	x1, [x29, #168]
  40f1f4:	bl	4117b0 <argp_error@@Base+0x1e00>
  40f1f8:	ldr	x2, [x28, #16]
  40f1fc:	cbz	x2, 40f1c0 <argp_failure@@Base+0xeb8>
  40f200:	ldr	w6, [x28, #24]
  40f204:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40f208:	mov	x0, x26
  40f20c:	add	x1, x1, #0xdd0
  40f210:	tbnz	w6, #0, 40f218 <argp_failure@@Base+0xf10>
  40f214:	ldr	x1, [x29, #160]
  40f218:	bl	4117b0 <argp_error@@Base+0x1e00>
  40f21c:	b	40f1c0 <argp_failure@@Base+0xeb8>
  40f220:	str	wzr, [x29, #132]
  40f224:	cmp	x0, x2
  40f228:	ldr	w1, [x19, #8]
  40f22c:	b.ls	40e6a0 <argp_failure@@Base+0x398>  // b.plast
  40f230:	mov	x0, x26
  40f234:	str	w1, [x29, #168]
  40f238:	bl	411118 <argp_error@@Base+0x1768>
  40f23c:	ldr	w1, [x29, #168]
  40f240:	b	40e6a0 <argp_failure@@Base+0x398>
  40f244:	cmp	w22, #0x2d
  40f248:	and	w1, w0, #0x8
  40f24c:	mov	w3, #0x5f                  	// #95
  40f250:	ccmp	w22, w3, #0x4, ne  // ne = any
  40f254:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40f258:	b.eq	40f84c <argp_failure@@Base+0x1544>  // b.none
  40f25c:	mov	x26, x21
  40f260:	mov	w4, #0x2d                  	// #45
  40f264:	nop
  40f268:	ldrb	w1, [x26, #1]!
  40f26c:	cmp	w1, #0x5f
  40f270:	ubfiz	x0, x1, #1, #8
  40f274:	ccmp	w1, w4, #0x4, ne  // ne = any
  40f278:	ldrh	w0, [x2, x0]
  40f27c:	and	w3, w0, #0x8
  40f280:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  40f284:	b.ne	40f268 <argp_failure@@Base+0xf60>  // b.any
  40f288:	sub	x23, x26, x21
  40f28c:	tbz	w0, #13, 40f2a0 <argp_failure@@Base+0xf98>
  40f290:	ldrb	w1, [x26, #1]!
  40f294:	ubfiz	x0, x1, #1, #8
  40f298:	ldrh	w0, [x2, x0]
  40f29c:	tbnz	w0, #13, 40f290 <argp_failure@@Base+0xf88>
  40f2a0:	cmp	w1, #0x2c
  40f2a4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40f2a8:	b.eq	40f3a4 <argp_failure@@Base+0x109c>  // b.none
  40f2ac:	cmp	w1, #0x3d
  40f2b0:	b.eq	40f6f4 <argp_failure@@Base+0x13ec>  // b.none
  40f2b4:	tbnz	w0, #11, 40f768 <argp_failure@@Base+0x1460>
  40f2b8:	mov	x25, x21
  40f2bc:	mov	x21, x26
  40f2c0:	str	wzr, [x29, #132]
  40f2c4:	str	wzr, [x29, #144]
  40f2c8:	ldr	x0, [x29, #152]
  40f2cc:	ldr	x1, [x29, #136]
  40f2d0:	add	x22, x0, #0x20
  40f2d4:	mov	x0, #0x8                   	// #8
  40f2d8:	b	40f2f4 <argp_failure@@Base+0xfec>
  40f2dc:	ldr	x1, [x22, #24]!
  40f2e0:	mov	x0, x1
  40f2e4:	cbz	x1, 40f35c <argp_failure@@Base+0x1054>
  40f2e8:	str	x1, [x29, #168]
  40f2ec:	bl	401b00 <strlen@plt>
  40f2f0:	ldr	x1, [x29, #168]
  40f2f4:	cmp	x23, x0
  40f2f8:	b.ne	40f2dc <argp_failure@@Base+0xfd4>  // b.any
  40f2fc:	mov	x2, x23
  40f300:	mov	x0, x25
  40f304:	bl	401c00 <strncmp@plt>
  40f308:	cbnz	w0, 40f2dc <argp_failure@@Base+0xfd4>
  40f30c:	ldr	w0, [x29, #132]
  40f310:	cbz	w0, 40f31c <argp_failure@@Base+0x1014>
  40f314:	ldr	w0, [x22, #8]
  40f318:	cbz	w0, 40f744 <argp_failure@@Base+0x143c>
  40f31c:	ldr	w0, [x29, #144]
  40f320:	tbnz	w0, #31, 40f7bc <argp_failure@@Base+0x14b4>
  40f324:	ldr	x0, [x22, #16]
  40f328:	add	x1, x29, #0xc8
  40f32c:	ldr	w2, [x29, #144]
  40f330:	str	w2, [x1, x0]
  40f334:	ldr	x0, [x22]
  40f338:	cbz	x0, 40f35c <argp_failure@@Base+0x1054>
  40f33c:	ldrb	w22, [x26]
  40f340:	cmp	w22, #0x2c
  40f344:	b.eq	40f388 <argp_failure@@Base+0x1080>  // b.none
  40f348:	cbnz	w22, 40e9f0 <argp_failure@@Base+0x6e8>
  40f34c:	b	40ea20 <argp_failure@@Base+0x718>
  40f350:	mov	x0, x26
  40f354:	bl	411118 <argp_error@@Base+0x1768>
  40f358:	b	40e834 <argp_failure@@Base+0x52c>
  40f35c:	mov	x5, x25
  40f360:	mov	w4, w23
  40f364:	mov	x0, x24
  40f368:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40f36c:	mov	w2, #0x0                   	// #0
  40f370:	add	x3, x3, #0xcd8
  40f374:	mov	w1, #0x0                   	// #0
  40f378:	bl	40e308 <argp_failure@@Base>
  40f37c:	ldrb	w22, [x26]
  40f380:	cmp	w22, #0x2c
  40f384:	b.ne	40f348 <argp_failure@@Base+0x1040>  // b.any
  40f388:	ldrb	w22, [x26, #1]
  40f38c:	add	x21, x26, #0x1
  40f390:	cbnz	w22, 40e9f0 <argp_failure@@Base+0x6e8>
  40f394:	b	40ea20 <argp_failure@@Base+0x718>
  40f398:	mov	w1, #0x1                   	// #1
  40f39c:	str	w1, [x29, #132]
  40f3a0:	b	40e694 <argp_failure@@Base+0x38c>
  40f3a4:	cmp	w22, #0x6e
  40f3a8:	b.eq	40f528 <argp_failure@@Base+0x1220>  // b.none
  40f3ac:	mov	w0, #0x1                   	// #1
  40f3b0:	mov	x25, x21
  40f3b4:	mov	x21, x26
  40f3b8:	str	w0, [x29, #132]
  40f3bc:	str	w0, [x29, #144]
  40f3c0:	b	40f2c8 <argp_failure@@Base+0xfc0>
  40f3c4:	mov	x0, x26
  40f3c8:	bl	411118 <argp_error@@Base+0x1768>
  40f3cc:	b	40f180 <argp_failure@@Base+0xe78>
  40f3d0:	mov	x0, x26
  40f3d4:	bl	411118 <argp_error@@Base+0x1768>
  40f3d8:	ldr	x0, [x26, #56]
  40f3dc:	b	40f0ac <argp_failure@@Base+0xda4>
  40f3e0:	mov	x0, x26
  40f3e4:	bl	411118 <argp_error@@Base+0x1768>
  40f3e8:	b	40e750 <argp_failure@@Base+0x448>
  40f3ec:	cbz	x2, 40ee94 <argp_failure@@Base+0xb8c>
  40f3f0:	ldr	w0, [x28, #24]
  40f3f4:	str	x4, [x29, #168]
  40f3f8:	tbz	w0, #0, 40f68c <argp_failure@@Base+0x1384>
  40f3fc:	ldr	x1, [x29, #104]
  40f400:	mov	x0, x26
  40f404:	add	x23, x23, #0x1
  40f408:	bl	4117b0 <argp_error@@Base+0x1e00>
  40f40c:	ldr	x4, [x29, #168]
  40f410:	b	40e720 <argp_failure@@Base+0x418>
  40f414:	mov	w0, #0xffffffff            	// #-1
  40f418:	str	w0, [x22, #24]
  40f41c:	ldr	w0, [x25, #8]
  40f420:	str	w0, [x29, #136]
  40f424:	sub	w1, w0, #0x1
  40f428:	str	x1, [x29, #144]
  40f42c:	cbnz	w0, 40ed70 <argp_failure@@Base+0xa68>
  40f430:	b	40e5a0 <argp_failure@@Base+0x298>
  40f434:	mov	w0, #0xffffffff            	// #-1
  40f438:	str	w0, [x22, #24]
  40f43c:	ldr	w1, [x25, #8]
  40f440:	cbz	w1, 40e5a0 <argp_failure@@Base+0x298>
  40f444:	ldr	x2, [x29, #152]
  40f448:	mov	w0, #0x0                   	// #0
  40f44c:	nop
  40f450:	str	w0, [x2, #48]
  40f454:	add	w0, w0, #0x1
  40f458:	cmp	w1, w0
  40f45c:	add	x2, x2, #0x38
  40f460:	b.hi	40f450 <argp_failure@@Base+0x1148>  // b.pmore
  40f464:	ldr	x0, [x29, #152]
  40f468:	mov	w1, w1
  40f46c:	adrp	x3, 40c000 <argp_parse@@Base+0x1e70>
  40f470:	mov	x2, #0x38                  	// #56
  40f474:	add	x3, x3, #0xbd8
  40f478:	mov	w21, #0x0                   	// #0
  40f47c:	bl	401b80 <qsort@plt>
  40f480:	tst	x20, #0x3
  40f484:	b.eq	40e5ac <argp_failure@@Base+0x2a4>  // b.none
  40f488:	b	40eb08 <argp_failure@@Base+0x800>
  40f48c:	ldr	x0, [x28, #32]
  40f490:	add	x2, x29, #0xc8
  40f494:	ldr	x1, [x22, #40]
  40f498:	bl	40d478 <_obstack_memory_used@@Base+0xf28>
  40f49c:	str	x22, [x29, #184]
  40f4a0:	b	40f0e4 <argp_failure@@Base+0xddc>
  40f4a4:	ldp	x0, x2, [x26, #56]
  40f4a8:	add	x1, x0, #0xc
  40f4ac:	cmp	x2, x1
  40f4b0:	b.cs	40f4c8 <argp_failure@@Base+0x11c0>  // b.hs, b.nlast
  40f4b4:	mov	x0, x26
  40f4b8:	mov	x1, #0xc                   	// #12
  40f4bc:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f4c0:	cbz	w0, 40ebd0 <argp_failure@@Base+0x8c8>
  40f4c4:	ldr	x0, [x26, #56]
  40f4c8:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  40f4cc:	add	x1, x1, #0xd78
  40f4d0:	ldr	x2, [x1]
  40f4d4:	str	x2, [x0]
  40f4d8:	ldr	w1, [x1, #8]
  40f4dc:	str	w1, [x0, #8]
  40f4e0:	ldr	x0, [x26, #56]
  40f4e4:	add	x0, x0, #0xc
  40f4e8:	str	x0, [x26, #56]
  40f4ec:	b	40ebd0 <argp_failure@@Base+0x8c8>
  40f4f0:	ldr	x0, [x25]
  40f4f4:	bl	401d30 <free@plt>
  40f4f8:	ldr	x0, [x25, #16]
  40f4fc:	bl	401d30 <free@plt>
  40f500:	b	40e970 <argp_failure@@Base+0x668>
  40f504:	ldr	x0, [x29, #232]
  40f508:	str	x0, [x19, #32]
  40f50c:	ldp	x4, x5, [x29, #200]
  40f510:	mov	w0, #0x1                   	// #1
  40f514:	ldp	x2, x3, [x29, #216]
  40f518:	stp	x4, x5, [x19]
  40f51c:	stp	x2, x3, [x19, #16]
  40f520:	str	w0, [x19, #36]
  40f524:	b	40e574 <argp_failure@@Base+0x26c>
  40f528:	ldrb	w0, [x21, #1]
  40f52c:	cmp	w0, #0x6f
  40f530:	b.ne	40f3ac <argp_failure@@Base+0x10a4>  // b.any
  40f534:	ldrb	w0, [x21, #2]
  40f538:	cmp	w0, #0x2d
  40f53c:	b.ne	40f3ac <argp_failure@@Base+0x10a4>  // b.any
  40f540:	add	x25, x21, #0x3
  40f544:	mov	w0, #0x1                   	// #1
  40f548:	sub	x23, x23, #0x3
  40f54c:	mov	x21, x26
  40f550:	str	w0, [x29, #132]
  40f554:	str	wzr, [x29, #144]
  40f558:	b	40f2c8 <argp_failure@@Base+0xfc0>
  40f55c:	ldr	x1, [x26, #48]
  40f560:	ldr	x3, [x26, #32]
  40f564:	sub	x0, x0, x1
  40f568:	cmp	x0, x3
  40f56c:	b.hi	40f730 <argp_failure@@Base+0x1428>  // b.pmore
  40f570:	ldr	x0, [x26, #40]
  40f574:	cmp	x0, #0x0
  40f578:	csel	x3, x0, xzr, ge  // ge = tcont
  40f57c:	sub	w3, w2, w3
  40f580:	cmp	w3, #0x0
  40f584:	sub	w3, w3, #0x1
  40f588:	b.le	40f030 <argp_failure@@Base+0xd28>
  40f58c:	mov	w6, #0x20                  	// #32
  40f590:	ldp	x2, x4, [x26, #56]
  40f594:	sub	w3, w3, #0x1
  40f598:	mov	x0, x26
  40f59c:	mov	x1, #0x1                   	// #1
  40f5a0:	cmp	x2, x4
  40f5a4:	b.cc	40f5c4 <argp_failure@@Base+0x12bc>  // b.lo, b.ul, b.last
  40f5a8:	str	w6, [x29, #160]
  40f5ac:	str	w3, [x29, #168]
  40f5b0:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f5b4:	ldr	w6, [x29, #160]
  40f5b8:	ldr	w3, [x29, #168]
  40f5bc:	cbz	w0, 40f5d0 <argp_failure@@Base+0x12c8>
  40f5c0:	ldr	x2, [x26, #56]
  40f5c4:	add	x0, x2, #0x1
  40f5c8:	str	x0, [x26, #56]
  40f5cc:	strb	w6, [x2]
  40f5d0:	cmn	w3, #0x1
  40f5d4:	b.ne	40f590 <argp_failure@@Base+0x1288>  // b.any
  40f5d8:	b	40f030 <argp_failure@@Base+0xd28>
  40f5dc:	ldr	x1, [x26, #64]
  40f5e0:	cmp	x1, x0
  40f5e4:	b.ls	40f6c4 <argp_failure@@Base+0x13bc>  // b.plast
  40f5e8:	add	x1, x0, #0x1
  40f5ec:	str	x1, [x26, #56]
  40f5f0:	mov	w1, #0xa                   	// #10
  40f5f4:	strb	w1, [x0]
  40f5f8:	b	40f030 <argp_failure@@Base+0xd28>
  40f5fc:	mov	x0, x26
  40f600:	bl	411118 <argp_error@@Base+0x1768>
  40f604:	ldp	x4, x1, [x26, #32]
  40f608:	ldp	x3, x0, [x26, #48]
  40f60c:	ldr	w2, [x19, #20]
  40f610:	cmp	x1, #0x0
  40f614:	csel	x1, x1, xzr, ge  // ge = tcont
  40f618:	sub	x3, x0, x3
  40f61c:	cmp	x3, x4
  40f620:	sxtw	x3, w2
  40f624:	b.ls	40efc4 <argp_failure@@Base+0xcbc>  // b.plast
  40f628:	mov	x0, x26
  40f62c:	str	x3, [x29, #160]
  40f630:	str	w1, [x29, #168]
  40f634:	bl	411118 <argp_error@@Base+0x1768>
  40f638:	ldp	x2, x0, [x26, #48]
  40f63c:	ldr	x4, [x26, #32]
  40f640:	ldr	x3, [x29, #160]
  40f644:	str	x3, [x26, #8]
  40f648:	sub	x2, x0, x2
  40f64c:	ldr	w1, [x29, #168]
  40f650:	ldr	w3, [x19, #20]
  40f654:	cmp	x2, x4
  40f658:	b.ls	40f8c0 <argp_failure@@Base+0x15b8>  // b.plast
  40f65c:	mov	x0, x26
  40f660:	str	w3, [x29, #160]
  40f664:	str	w1, [x29, #168]
  40f668:	bl	411118 <argp_error@@Base+0x1768>
  40f66c:	ldr	w2, [x19, #20]
  40f670:	ldr	w3, [x29, #160]
  40f674:	ldr	w1, [x29, #168]
  40f678:	ldr	x0, [x26, #56]
  40f67c:	b	40efcc <argp_failure@@Base+0xcc4>
  40f680:	ldr	x0, [x29, #120]
  40f684:	bl	401bf0 <funlockfile@plt>
  40f688:	b	40e980 <argp_failure@@Base+0x678>
  40f68c:	ldr	x1, [x29, #96]
  40f690:	mov	x0, x26
  40f694:	add	x23, x23, #0x1
  40f698:	bl	4117b0 <argp_error@@Base+0x1e00>
  40f69c:	ldr	x4, [x29, #168]
  40f6a0:	b	40e720 <argp_failure@@Base+0x418>
  40f6a4:	mov	x4, x21
  40f6a8:	mov	x0, x24
  40f6ac:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40f6b0:	mov	w2, #0x0                   	// #0
  40f6b4:	add	x3, x3, #0xd00
  40f6b8:	mov	w1, #0x0                   	// #0
  40f6bc:	bl	40e308 <argp_failure@@Base>
  40f6c0:	b	40ea20 <argp_failure@@Base+0x718>
  40f6c4:	mov	x0, x26
  40f6c8:	mov	x1, #0x1                   	// #1
  40f6cc:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f6d0:	cbz	w0, 40f030 <argp_failure@@Base+0xd28>
  40f6d4:	ldr	x0, [x26, #56]
  40f6d8:	b	40f5e8 <argp_failure@@Base+0x12e0>
  40f6dc:	mov	x0, x26
  40f6e0:	mov	x1, #0x1                   	// #1
  40f6e4:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f6e8:	cbz	w0, 40ee88 <argp_failure@@Base+0xb80>
  40f6ec:	ldr	x0, [x26, #56]
  40f6f0:	b	40ee78 <argp_failure@@Base+0xb70>
  40f6f4:	ldrb	w0, [x26, #1]
  40f6f8:	add	x6, x26, #0x1
  40f6fc:	mov	x26, x6
  40f700:	ldrh	w0, [x2, x0, lsl #1]
  40f704:	tbz	w0, #13, 40f2b4 <argp_failure@@Base+0xfac>
  40f708:	ldrb	w0, [x26, #1]!
  40f70c:	ldrh	w0, [x2, x0, lsl #1]
  40f710:	tbnz	w0, #13, 40f708 <argp_failure@@Base+0x1400>
  40f714:	b	40f2b4 <argp_failure@@Base+0xfac>
  40f718:	mov	x0, x26
  40f71c:	mov	x1, #0x1                   	// #1
  40f720:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f724:	cbz	w0, 40eac0 <argp_failure@@Base+0x7b8>
  40f728:	ldr	x0, [x26, #56]
  40f72c:	b	40eab0 <argp_failure@@Base+0x7a8>
  40f730:	mov	x0, x26
  40f734:	str	w2, [x29, #168]
  40f738:	bl	411118 <argp_error@@Base+0x1768>
  40f73c:	ldr	w2, [x29, #168]
  40f740:	b	40f570 <argp_failure@@Base+0x1268>
  40f744:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40f748:	mov	x5, x25
  40f74c:	add	x3, x3, #0xc78
  40f750:	mov	w4, w23
  40f754:	mov	x0, x24
  40f758:	mov	w2, #0x0                   	// #0
  40f75c:	mov	w1, #0x0                   	// #0
  40f760:	bl	40e308 <argp_failure@@Base>
  40f764:	b	40f334 <argp_failure@@Base+0x102c>
  40f768:	mov	w2, #0xa                   	// #10
  40f76c:	mov	x1, #0x0                   	// #0
  40f770:	mov	x0, x26
  40f774:	bl	401d10 <strtol@plt>
  40f778:	ldr	x1, [x29, #160]
  40f77c:	str	w0, [x29, #144]
  40f780:	ldrb	w2, [x26]
  40f784:	ldr	x1, [x1]
  40f788:	ldrh	w0, [x1, x2, lsl #1]
  40f78c:	tbz	w0, #11, 40f79c <argp_failure@@Base+0x1494>
  40f790:	ldrb	w0, [x26, #1]!
  40f794:	ldrh	w0, [x1, x0, lsl #1]
  40f798:	tbnz	w0, #11, 40f790 <argp_failure@@Base+0x1488>
  40f79c:	tbz	w0, #13, 40f86c <argp_failure@@Base+0x1564>
  40f7a0:	ldrb	w0, [x26, #1]!
  40f7a4:	ldrh	w0, [x1, x0, lsl #1]
  40f7a8:	tbnz	w0, #13, 40f7a0 <argp_failure@@Base+0x1498>
  40f7ac:	mov	x25, x21
  40f7b0:	mov	x21, x26
  40f7b4:	str	wzr, [x29, #132]
  40f7b8:	b	40f2c8 <argp_failure@@Base+0xfc0>
  40f7bc:	adrp	x3, 414000 <argp_error@@Base+0x4650>
  40f7c0:	mov	x5, x25
  40f7c4:	add	x3, x3, #0xca8
  40f7c8:	b	40f750 <argp_failure@@Base+0x1448>
  40f7cc:	adrp	x19, 414000 <argp_error@@Base+0x4650>
  40f7d0:	add	x19, x19, #0xbf0
  40f7d4:	mov	x21, x19
  40f7d8:	ldp	x0, x1, [x26, #56]
  40f7dc:	cmp	x0, x1
  40f7e0:	b.cc	40f7f8 <argp_failure@@Base+0x14f0>  // b.lo, b.ul, b.last
  40f7e4:	mov	x0, x26
  40f7e8:	mov	x1, #0x1                   	// #1
  40f7ec:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f7f0:	cbz	w0, 40f808 <argp_failure@@Base+0x1500>
  40f7f4:	ldr	x0, [x26, #56]
  40f7f8:	add	x1, x0, #0x1
  40f7fc:	str	x1, [x26, #56]
  40f800:	mov	w1, #0xa                   	// #10
  40f804:	strb	w1, [x0]
  40f808:	mov	x0, x21
  40f80c:	bl	401b00 <strlen@plt>
  40f810:	mov	x22, x0
  40f814:	ldp	x0, x1, [x26, #56]
  40f818:	cbnz	x22, 40f87c <argp_failure@@Base+0x1574>
  40f81c:	cmp	x0, x1
  40f820:	b.cc	40f838 <argp_failure@@Base+0x1530>  // b.lo, b.ul, b.last
  40f824:	mov	x0, x26
  40f828:	mov	x1, #0x1                   	// #1
  40f82c:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f830:	cbz	w0, 40e904 <argp_failure@@Base+0x5fc>
  40f834:	ldr	x0, [x26, #56]
  40f838:	add	x1, x0, #0x1
  40f83c:	str	x1, [x26, #56]
  40f840:	mov	w1, #0xa                   	// #10
  40f844:	strb	w1, [x0]
  40f848:	b	40e904 <argp_failure@@Base+0x5fc>
  40f84c:	mov	w1, w22
  40f850:	mov	x26, x21
  40f854:	mov	x23, #0x0                   	// #0
  40f858:	b	40f2a0 <argp_failure@@Base+0xf98>
  40f85c:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40f860:	add	x0, x0, #0xe70
  40f864:	str	x0, [x29, #152]
  40f868:	b	40ea20 <argp_failure@@Base+0x718>
  40f86c:	mov	x25, x21
  40f870:	mov	x21, x26
  40f874:	str	wzr, [x29, #132]
  40f878:	b	40f2c8 <argp_failure@@Base+0xfc0>
  40f87c:	add	x2, x0, x22
  40f880:	cmp	x1, x2
  40f884:	b.cs	40f8a4 <argp_failure@@Base+0x159c>  // b.hs, b.nlast
  40f888:	mov	x1, x22
  40f88c:	mov	x0, x26
  40f890:	bl	4116c0 <argp_error@@Base+0x1d10>
  40f894:	cbnz	w0, 40f8a0 <argp_failure@@Base+0x1598>
  40f898:	ldp	x0, x1, [x26, #56]
  40f89c:	b	40f81c <argp_failure@@Base+0x1514>
  40f8a0:	ldr	x0, [x26, #56]
  40f8a4:	mov	x1, x21
  40f8a8:	mov	x2, x22
  40f8ac:	bl	401aa0 <memcpy@plt>
  40f8b0:	ldp	x0, x1, [x26, #56]
  40f8b4:	add	x0, x0, x22
  40f8b8:	str	x0, [x26, #56]
  40f8bc:	b	40f81c <argp_failure@@Base+0x1514>
  40f8c0:	mov	w2, w3
  40f8c4:	b	40efcc <argp_failure@@Base+0xcc4>

000000000040f8c8 <argp_help@@Base>:
  40f8c8:	stp	x29, x30, [sp, #-112]!
  40f8cc:	mov	w6, w2
  40f8d0:	mov	x4, x3
  40f8d4:	add	x5, sp, #0x18
  40f8d8:	mov	x29, sp
  40f8dc:	mov	x2, x1
  40f8e0:	stp	xzr, xzr, [sp, #24]
  40f8e4:	add	x1, sp, #0x10
  40f8e8:	mov	w3, w6
  40f8ec:	stp	xzr, xzr, [x5, #16]
  40f8f0:	stp	xzr, xzr, [x5, #32]
  40f8f4:	stp	xzr, xzr, [x5, #48]
  40f8f8:	stp	xzr, xzr, [x5, #64]
  40f8fc:	str	xzr, [x5, #80]
  40f900:	str	x0, [sp, #16]
  40f904:	bl	40e528 <argp_failure@@Base+0x220>
  40f908:	ldp	x29, x30, [sp], #112
  40f90c:	ret

000000000040f910 <argp_state_help@@Base>:
  40f910:	stp	x29, x30, [sp, #-32]!
  40f914:	mov	x29, sp
  40f918:	stp	x19, x20, [sp, #16]
  40f91c:	mov	w20, w2
  40f920:	cbz	x0, 40f980 <argp_state_help@@Base+0x70>
  40f924:	ldr	w2, [x0, #28]
  40f928:	mov	x19, x0
  40f92c:	tst	x2, #0x2
  40f930:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  40f934:	b.ne	40f944 <argp_state_help@@Base+0x34>  // b.any
  40f938:	ldp	x19, x20, [sp, #16]
  40f93c:	ldp	x29, x30, [sp], #32
  40f940:	ret
  40f944:	tst	x2, #0x40
  40f948:	orr	w2, w20, #0x80
  40f94c:	csel	w20, w2, w20, ne  // ne = any
  40f950:	mov	x2, x1
  40f954:	mov	x1, x0
  40f958:	mov	w3, w20
  40f95c:	ldr	x0, [x0]
  40f960:	ldr	x4, [x19, #64]
  40f964:	bl	40e528 <argp_failure@@Base+0x220>
  40f968:	ldr	w0, [x19, #28]
  40f96c:	tbnz	w0, #5, 40f938 <argp_state_help@@Base+0x28>
  40f970:	tbnz	w20, #8, 40f9a0 <argp_state_help@@Base+0x90>
  40f974:	tbz	w20, #9, 40f938 <argp_state_help@@Base+0x28>
  40f978:	mov	w0, #0x0                   	// #0
  40f97c:	bl	401b20 <exit@plt>
  40f980:	cbz	x1, 40f938 <argp_state_help@@Base+0x28>
  40f984:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  40f988:	mov	x2, x1
  40f98c:	mov	w3, w20
  40f990:	mov	x1, #0x0                   	// #0
  40f994:	ldr	x4, [x4, #1264]
  40f998:	bl	40e528 <argp_failure@@Base+0x220>
  40f99c:	b	40f970 <argp_state_help@@Base+0x60>
  40f9a0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40f9a4:	ldr	w0, [x0, #1232]
  40f9a8:	bl	401b20 <exit@plt>
  40f9ac:	nop

000000000040f9b0 <argp_error@@Base>:
  40f9b0:	stp	x29, x30, [sp, #-288]!
  40f9b4:	mov	x29, sp
  40f9b8:	stp	x19, x20, [sp, #16]
  40f9bc:	mov	x20, x0
  40f9c0:	str	x21, [sp, #32]
  40f9c4:	mov	x21, x1
  40f9c8:	str	q0, [sp, #112]
  40f9cc:	str	q1, [sp, #128]
  40f9d0:	str	q2, [sp, #144]
  40f9d4:	str	q3, [sp, #160]
  40f9d8:	str	q4, [sp, #176]
  40f9dc:	str	q5, [sp, #192]
  40f9e0:	str	q6, [sp, #208]
  40f9e4:	str	q7, [sp, #224]
  40f9e8:	stp	x2, x3, [sp, #240]
  40f9ec:	stp	x4, x5, [sp, #256]
  40f9f0:	stp	x6, x7, [sp, #272]
  40f9f4:	cbz	x0, 40fad4 <argp_error@@Base+0x124>
  40f9f8:	ldr	w0, [x0, #28]
  40f9fc:	tbnz	w0, #1, 40fac4 <argp_error@@Base+0x114>
  40fa00:	ldr	x19, [x20, #72]
  40fa04:	cbz	x19, 40fac4 <argp_error@@Base+0x114>
  40fa08:	mov	x0, x19
  40fa0c:	bl	401b40 <flockfile@plt>
  40fa10:	mov	w0, #0xffffff80            	// #-128
  40fa14:	mov	w1, #0xffffffd0            	// #-48
  40fa18:	stp	w1, w0, [sp, #104]
  40fa1c:	add	x2, sp, #0xf0
  40fa20:	ldr	x0, [x20, #64]
  40fa24:	add	x3, sp, #0x120
  40fa28:	stp	x3, x3, [sp, #80]
  40fa2c:	str	x2, [sp, #96]
  40fa30:	mov	x1, x19
  40fa34:	bl	401e50 <fputs_unlocked@plt>
  40fa38:	ldp	x0, x1, [x19, #40]
  40fa3c:	cmp	x0, x1
  40fa40:	b.cs	40fb20 <argp_error@@Base+0x170>  // b.hs, b.nlast
  40fa44:	add	x1, x0, #0x1
  40fa48:	str	x1, [x19, #40]
  40fa4c:	mov	w1, #0x3a                  	// #58
  40fa50:	strb	w1, [x0]
  40fa54:	ldp	x0, x1, [x19, #40]
  40fa58:	cmp	x0, x1
  40fa5c:	b.cs	40fb30 <argp_error@@Base+0x180>  // b.hs, b.nlast
  40fa60:	add	x1, x0, #0x1
  40fa64:	str	x1, [x19, #40]
  40fa68:	mov	w1, #0x20                  	// #32
  40fa6c:	strb	w1, [x0]
  40fa70:	ldp	x6, x7, [sp, #80]
  40fa74:	mov	x1, x21
  40fa78:	ldp	x4, x5, [sp, #96]
  40fa7c:	add	x2, sp, #0x30
  40fa80:	mov	x0, x19
  40fa84:	stp	x6, x7, [sp, #48]
  40fa88:	stp	x4, x5, [sp, #64]
  40fa8c:	bl	401e70 <vfprintf@plt>
  40fa90:	ldp	x0, x1, [x19, #40]
  40fa94:	cmp	x0, x1
  40fa98:	b.cs	40fb10 <argp_error@@Base+0x160>  // b.hs, b.nlast
  40fa9c:	add	x1, x0, #0x1
  40faa0:	str	x1, [x19, #40]
  40faa4:	mov	w1, #0xa                   	// #10
  40faa8:	strb	w1, [x0]
  40faac:	mov	x1, x19
  40fab0:	mov	w2, #0x104                 	// #260
  40fab4:	mov	x0, x20
  40fab8:	bl	40f910 <argp_state_help@@Base>
  40fabc:	mov	x0, x19
  40fac0:	bl	401bf0 <funlockfile@plt>
  40fac4:	ldp	x19, x20, [sp, #16]
  40fac8:	ldr	x21, [sp, #32]
  40facc:	ldp	x29, x30, [sp], #288
  40fad0:	ret
  40fad4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40fad8:	ldr	x19, [x0, #1248]
  40fadc:	cbz	x19, 40fac4 <argp_error@@Base+0x114>
  40fae0:	mov	x0, x19
  40fae4:	bl	401b40 <flockfile@plt>
  40fae8:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  40faec:	add	x3, sp, #0xf0
  40faf0:	add	x4, sp, #0x120
  40faf4:	mov	w2, #0xffffffd0            	// #-48
  40faf8:	mov	w1, #0xffffff80            	// #-128
  40fafc:	stp	x4, x4, [sp, #80]
  40fb00:	ldr	x0, [x0, #1264]
  40fb04:	str	x3, [sp, #96]
  40fb08:	stp	w2, w1, [sp, #104]
  40fb0c:	b	40fa30 <argp_error@@Base+0x80>
  40fb10:	mov	x0, x19
  40fb14:	mov	w1, #0xa                   	// #10
  40fb18:	bl	401ce0 <__overflow@plt>
  40fb1c:	b	40faac <argp_error@@Base+0xfc>
  40fb20:	mov	x0, x19
  40fb24:	mov	w1, #0x3a                  	// #58
  40fb28:	bl	401ce0 <__overflow@plt>
  40fb2c:	b	40fa54 <argp_error@@Base+0xa4>
  40fb30:	mov	x0, x19
  40fb34:	mov	w1, #0x20                  	// #32
  40fb38:	bl	401ce0 <__overflow@plt>
  40fb3c:	b	40fa70 <argp_error@@Base+0xc0>
  40fb40:	ldp	w11, w5, [x1, #48]
  40fb44:	ldr	w10, [x1]
  40fb48:	cmp	w11, w5
  40fb4c:	ccmp	w5, w10, #0x0, lt  // lt = tstop
  40fb50:	b.ge	40fd20 <argp_error@@Base+0x370>  // b.tcont
  40fb54:	sbfiz	x8, x5, #3, #32
  40fb58:	sxtw	x13, w5
  40fb5c:	add	x9, x8, #0x10
  40fb60:	add	x7, x0, x8
  40fb64:	mov	w6, w10
  40fb68:	mov	w4, w11
  40fb6c:	add	x12, x0, #0x8
  40fb70:	stp	x29, x30, [sp, #-16]!
  40fb74:	mov	x29, sp
  40fb78:	sub	w16, w6, w5
  40fb7c:	sub	w17, w5, w4
  40fb80:	cmp	w16, w17
  40fb84:	b.le	40fc34 <argp_error@@Base+0x284>
  40fb88:	sxtw	x18, w4
  40fb8c:	sub	w6, w6, w17
  40fb90:	add	x2, x18, #0x2
  40fb94:	sub	w16, w17, #0x1
  40fb98:	sbfiz	x14, x6, #3, #32
  40fb9c:	sxtw	x15, w6
  40fba0:	lsl	x2, x2, #3
  40fba4:	add	x30, x14, #0x10
  40fba8:	sub	x3, x2, #0x10
  40fbac:	cmp	x3, x30
  40fbb0:	ccmp	x14, x2, #0x0, lt  // lt = tstop
  40fbb4:	ccmp	w16, #0x4, #0x0, ge  // ge = tcont
  40fbb8:	b.ls	40fcec <argp_error@@Base+0x33c>  // b.plast
  40fbbc:	lsr	w15, w17, #1
  40fbc0:	add	x3, x0, x3
  40fbc4:	add	x14, x0, x14
  40fbc8:	mov	x2, #0x0                   	// #0
  40fbcc:	lsl	x15, x15, #4
  40fbd0:	ldr	q1, [x14, x2]
  40fbd4:	ldr	q0, [x3, x2]
  40fbd8:	str	q1, [x3, x2]
  40fbdc:	str	q0, [x14, x2]
  40fbe0:	add	x2, x2, #0x10
  40fbe4:	cmp	x15, x2
  40fbe8:	b.ne	40fbd0 <argp_error@@Base+0x220>  // b.any
  40fbec:	and	w2, w17, #0xfffffffe
  40fbf0:	tbz	w17, #0, 40fc14 <argp_error@@Base+0x264>
  40fbf4:	add	w3, w2, w6
  40fbf8:	add	w2, w2, w4
  40fbfc:	sxtw	x3, w3
  40fc00:	sxtw	x2, w2
  40fc04:	ldr	x15, [x0, x3, lsl #3]
  40fc08:	ldr	x14, [x0, x2, lsl #3]
  40fc0c:	str	x15, [x0, x2, lsl #3]
  40fc10:	str	x14, [x0, x3, lsl #3]
  40fc14:	cmp	w6, w5
  40fc18:	ccmp	w4, w5, #0x0, gt
  40fc1c:	b.lt	40fb78 <argp_error@@Base+0x1c8>  // b.tstop
  40fc20:	sub	w5, w10, w5
  40fc24:	add	w11, w5, w11
  40fc28:	stp	w11, w10, [x1, #48]
  40fc2c:	ldp	x29, x30, [sp], #16
  40fc30:	ret
  40fc34:	sxtw	x14, w4
  40fc38:	sub	w2, w16, #0x1
  40fc3c:	add	x3, x14, #0x2
  40fc40:	lsl	x3, x3, #3
  40fc44:	cmp	x3, x8
  40fc48:	sub	x3, x3, #0x10
  40fc4c:	ccmp	x9, x3, #0x4, gt
  40fc50:	ccmp	w2, #0x4, #0x0, le
  40fc54:	b.ls	40fcb4 <argp_error@@Base+0x304>  // b.plast
  40fc58:	lsr	w14, w16, #1
  40fc5c:	add	x3, x0, x3
  40fc60:	mov	x2, #0x0                   	// #0
  40fc64:	lsl	x14, x14, #4
  40fc68:	ldr	q1, [x7, x2]
  40fc6c:	ldr	q0, [x3, x2]
  40fc70:	str	q1, [x3, x2]
  40fc74:	str	q0, [x7, x2]
  40fc78:	add	x2, x2, #0x10
  40fc7c:	cmp	x2, x14
  40fc80:	b.ne	40fc68 <argp_error@@Base+0x2b8>  // b.any
  40fc84:	and	w2, w16, #0xfffffffe
  40fc88:	tbz	w16, #0, 40fcac <argp_error@@Base+0x2fc>
  40fc8c:	add	w3, w5, w2
  40fc90:	add	w2, w4, w2
  40fc94:	sxtw	x3, w3
  40fc98:	sxtw	x2, w2
  40fc9c:	ldr	x15, [x0, x3, lsl #3]
  40fca0:	ldr	x14, [x0, x2, lsl #3]
  40fca4:	str	x15, [x0, x2, lsl #3]
  40fca8:	str	x14, [x0, x3, lsl #3]
  40fcac:	add	w4, w4, w16
  40fcb0:	b	40fc14 <argp_error@@Base+0x264>
  40fcb4:	add	x15, x14, w2, uxtw
  40fcb8:	add	x2, x0, x3
  40fcbc:	sub	x3, x13, x14
  40fcc0:	add	x14, x12, x15, lsl #3
  40fcc4:	nop
  40fcc8:	ldr	x17, [x2, x3, lsl #3]
  40fccc:	ldr	x15, [x2]
  40fcd0:	str	x17, [x2]
  40fcd4:	str	x15, [x2, x3, lsl #3]
  40fcd8:	add	x2, x2, #0x8
  40fcdc:	cmp	x2, x14
  40fce0:	b.ne	40fcc8 <argp_error@@Base+0x318>  // b.any
  40fce4:	add	w4, w4, w16
  40fce8:	b	40fc14 <argp_error@@Base+0x264>
  40fcec:	add	x14, x18, w16, uxtw
  40fcf0:	add	x2, x0, x3
  40fcf4:	sub	x3, x15, x18
  40fcf8:	add	x14, x12, x14, lsl #3
  40fcfc:	nop
  40fd00:	ldr	x16, [x2, x3, lsl #3]
  40fd04:	ldr	x15, [x2]
  40fd08:	str	x16, [x2]
  40fd0c:	str	x15, [x2, x3, lsl #3]
  40fd10:	add	x2, x2, #0x8
  40fd14:	cmp	x14, x2
  40fd18:	b.ne	40fd00 <argp_error@@Base+0x350>  // b.any
  40fd1c:	b	40fc14 <argp_error@@Base+0x264>
  40fd20:	sub	w5, w10, w5
  40fd24:	add	w11, w5, w11
  40fd28:	stp	w11, w10, [x1, #48]
  40fd2c:	ret
  40fd30:	stp	x29, x30, [sp, #-160]!
  40fd34:	cmp	w0, #0x0
  40fd38:	mov	x29, sp
  40fd3c:	stp	x19, x20, [sp, #16]
  40fd40:	mov	w19, w0
  40fd44:	ldr	w0, [x6, #4]
  40fd48:	stp	x23, x24, [sp, #48]
  40fd4c:	str	x3, [sp, #96]
  40fd50:	stp	w0, w5, [sp, #112]
  40fd54:	str	x4, [sp, #128]
  40fd58:	b.le	410528 <argp_error@@Base+0xb78>
  40fd5c:	ldr	w0, [x6]
  40fd60:	mov	x20, x1
  40fd64:	str	xzr, [x6, #16]
  40fd68:	stp	x21, x22, [sp, #32]
  40fd6c:	mov	x22, x2
  40fd70:	stp	x25, x26, [sp, #64]
  40fd74:	mov	x26, x6
  40fd78:	cbnz	w0, 40fe9c <argp_error@@Base+0x4ec>
  40fd7c:	mov	w1, #0x1                   	// #1
  40fd80:	mov	w0, w1
  40fd84:	str	w1, [x6]
  40fd88:	dup	v0.2s, w0
  40fd8c:	str	xzr, [x26, #32]
  40fd90:	str	d0, [x26, #48]
  40fd94:	cbz	w7, 40ffb0 <argp_error@@Base+0x600>
  40fd98:	mov	w0, #0x1                   	// #1
  40fd9c:	str	w0, [x26, #44]
  40fda0:	mov	x4, #0x0                   	// #0
  40fda4:	ldrb	w0, [x22]
  40fda8:	cmp	w0, #0x2d
  40fdac:	b.eq	40ffd8 <argp_error@@Base+0x628>  // b.none
  40fdb0:	cmp	w0, #0x2b
  40fdb4:	b.eq	410364 <argp_error@@Base+0x9b4>  // b.none
  40fdb8:	str	wzr, [x26, #40]
  40fdbc:	mov	w0, #0x1                   	// #1
  40fdc0:	str	w0, [x26, #24]
  40fdc4:	ldrb	w0, [x22]
  40fdc8:	cmp	w0, #0x3a
  40fdcc:	ldr	w0, [sp, #112]
  40fdd0:	csel	w0, w0, wzr, ne  // ne = any
  40fdd4:	str	w0, [sp, #112]
  40fdd8:	cbz	x4, 40fed8 <argp_error@@Base+0x528>
  40fddc:	ldrb	w0, [x4]
  40fde0:	cbz	w0, 40fed8 <argp_error@@Base+0x528>
  40fde4:	ldr	x0, [sp, #96]
  40fde8:	cbz	x0, 40fe28 <argp_error@@Base+0x478>
  40fdec:	ldr	w21, [x26]
  40fdf0:	ldr	x0, [x20, w21, sxtw #3]
  40fdf4:	ldrb	w1, [x0, #1]
  40fdf8:	cmp	w1, #0x2d
  40fdfc:	b.eq	4101e8 <argp_error@@Base+0x838>  // b.none
  40fe00:	ldr	w2, [sp, #116]
  40fe04:	cbz	w2, 40fe28 <argp_error@@Base+0x478>
  40fe08:	ldrb	w0, [x0, #2]
  40fe0c:	cbnz	w0, 4101e8 <argp_error@@Base+0x838>
  40fe10:	mov	x0, x22
  40fe14:	str	x4, [sp, #104]
  40fe18:	bl	401d70 <strchr@plt>
  40fe1c:	ldr	x4, [sp, #104]
  40fe20:	cbz	x0, 4101e8 <argp_error@@Base+0x838>
  40fe24:	nop
  40fe28:	add	x21, x4, #0x1
  40fe2c:	str	x21, [x26, #32]
  40fe30:	mov	x0, x22
  40fe34:	str	x4, [sp, #104]
  40fe38:	ldrb	w24, [x4]
  40fe3c:	mov	w1, w24
  40fe40:	bl	401d70 <strchr@plt>
  40fe44:	ldr	x4, [sp, #104]
  40fe48:	mov	w23, w24
  40fe4c:	ldrb	w1, [x4, #1]
  40fe50:	cbz	w1, 4100a0 <argp_error@@Base+0x6f0>
  40fe54:	sub	w1, w24, #0x3a
  40fe58:	cmp	x0, #0x0
  40fe5c:	and	w1, w1, #0xff
  40fe60:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  40fe64:	b.ls	410370 <argp_error@@Base+0x9c0>  // b.plast
  40fe68:	ldrb	w2, [x0]
  40fe6c:	ldrb	w1, [x0, #1]
  40fe70:	cmp	w2, #0x57
  40fe74:	b.eq	4100ec <argp_error@@Base+0x73c>  // b.none
  40fe78:	cmp	w1, #0x3a
  40fe7c:	b.eq	4103c0 <argp_error@@Base+0xa10>  // b.none
  40fe80:	mov	w0, w23
  40fe84:	ldp	x19, x20, [sp, #16]
  40fe88:	ldp	x21, x22, [sp, #32]
  40fe8c:	ldp	x23, x24, [sp, #48]
  40fe90:	ldp	x25, x26, [sp, #64]
  40fe94:	ldp	x29, x30, [sp], #160
  40fe98:	ret
  40fe9c:	ldr	w1, [x6, #24]
  40fea0:	cbz	w1, 40fd88 <argp_error@@Base+0x3d8>
  40fea4:	ldrb	w0, [x2]
  40fea8:	mov	w1, #0xfd                  	// #253
  40feac:	ldr	x4, [x6, #32]
  40feb0:	sub	w2, w0, #0x2b
  40feb4:	tst	w2, w1
  40feb8:	b.ne	40fdc8 <argp_error@@Base+0x418>  // b.any
  40febc:	ldrb	w0, [x22, #1]
  40fec0:	add	x22, x22, #0x1
  40fec4:	cmp	w0, #0x3a
  40fec8:	ldr	w0, [sp, #112]
  40fecc:	csel	w0, w0, wzr, ne  // ne = any
  40fed0:	str	w0, [sp, #112]
  40fed4:	cbnz	x4, 40fddc <argp_error@@Base+0x42c>
  40fed8:	ldr	w1, [x26]
  40fedc:	ldr	w0, [x26, #52]
  40fee0:	cmp	w0, w1
  40fee4:	b.le	40feec <argp_error@@Base+0x53c>
  40fee8:	str	w1, [x26, #52]
  40feec:	ldr	w2, [x26, #48]
  40fef0:	cmp	w1, w2
  40fef4:	b.ge	40ff00 <argp_error@@Base+0x550>  // b.tcont
  40fef8:	mov	w2, w1
  40fefc:	str	w1, [x26, #48]
  40ff00:	ldr	w0, [x26, #40]
  40ff04:	cmp	w0, #0x1
  40ff08:	b.eq	410008 <argp_error@@Base+0x658>  // b.none
  40ff0c:	cmp	w19, w1
  40ff10:	b.eq	40ffe8 <argp_error@@Base+0x638>  // b.none
  40ff14:	ldr	x4, [x20, w1, sxtw #3]
  40ff18:	ldrb	w0, [x4]
  40ff1c:	cmp	w0, #0x2d
  40ff20:	b.ne	40ff70 <argp_error@@Base+0x5c0>  // b.any
  40ff24:	ldrb	w0, [x4, #1]
  40ff28:	cmp	w0, #0x2d
  40ff2c:	b.ne	40ff70 <argp_error@@Base+0x5c0>  // b.any
  40ff30:	ldrb	w0, [x4, #2]
  40ff34:	cbnz	w0, 40ff70 <argp_error@@Base+0x5c0>
  40ff38:	ldp	w0, w2, [x26, #48]
  40ff3c:	add	w1, w1, #0x1
  40ff40:	str	w1, [x26]
  40ff44:	cmp	w0, w2
  40ff48:	b.eq	410530 <argp_error@@Base+0xb80>  // b.none
  40ff4c:	cmp	w1, w2
  40ff50:	b.eq	40ff64 <argp_error@@Base+0x5b4>  // b.none
  40ff54:	mov	x0, x20
  40ff58:	mov	x1, x26
  40ff5c:	bl	40fb40 <argp_error@@Base+0x190>
  40ff60:	ldr	w0, [x26, #48]
  40ff64:	str	w19, [x26]
  40ff68:	str	w19, [x26, #52]
  40ff6c:	b	40ffec <argp_error@@Base+0x63c>
  40ff70:	ldrb	w0, [x4]
  40ff74:	cmp	w0, #0x2d
  40ff78:	b.eq	410078 <argp_error@@Base+0x6c8>  // b.none
  40ff7c:	ldr	w0, [x26, #40]
  40ff80:	cbz	w0, 410520 <argp_error@@Base+0xb70>
  40ff84:	add	w1, w1, #0x1
  40ff88:	mov	w23, #0x1                   	// #1
  40ff8c:	ldp	x21, x22, [sp, #32]
  40ff90:	str	w1, [x26]
  40ff94:	str	x4, [x26, #16]
  40ff98:	ldp	x25, x26, [sp, #64]
  40ff9c:	mov	w0, w23
  40ffa0:	ldp	x19, x20, [sp, #16]
  40ffa4:	ldp	x23, x24, [sp, #48]
  40ffa8:	ldp	x29, x30, [sp], #160
  40ffac:	ret
  40ffb0:	adrp	x0, 414000 <argp_error@@Base+0x4650>
  40ffb4:	add	x0, x0, #0xf80
  40ffb8:	bl	401eb0 <getenv@plt>
  40ffbc:	cbz	x0, 4100c4 <argp_error@@Base+0x714>
  40ffc0:	mov	w0, #0x1                   	// #1
  40ffc4:	str	w0, [x26, #44]
  40ffc8:	ldr	x4, [x26, #32]
  40ffcc:	ldrb	w0, [x22]
  40ffd0:	cmp	w0, #0x2d
  40ffd4:	b.ne	40fdb0 <argp_error@@Base+0x400>  // b.any
  40ffd8:	mov	w0, #0x2                   	// #2
  40ffdc:	add	x22, x22, #0x1
  40ffe0:	str	w0, [x26, #40]
  40ffe4:	b	40fdbc <argp_error@@Base+0x40c>
  40ffe8:	ldp	w0, w19, [x26, #48]
  40ffec:	cmp	w19, w0
  40fff0:	b.eq	410520 <argp_error@@Base+0xb70>  // b.none
  40fff4:	mov	w23, #0xffffffff            	// #-1
  40fff8:	ldp	x21, x22, [sp, #32]
  40fffc:	str	w0, [x26]
  410000:	ldp	x25, x26, [sp, #64]
  410004:	b	40ff9c <argp_error@@Base+0x5ec>
  410008:	ldr	w0, [x26, #52]
  41000c:	cmp	w0, w2
  410010:	b.eq	4100b0 <argp_error@@Base+0x700>  // b.none
  410014:	cmp	w1, w0
  410018:	b.eq	41002c <argp_error@@Base+0x67c>  // b.none
  41001c:	mov	x0, x20
  410020:	mov	x1, x26
  410024:	bl	40fb40 <argp_error@@Base+0x190>
  410028:	ldr	w0, [x26]
  41002c:	cmp	w19, w0
  410030:	b.le	410604 <argp_error@@Base+0xc54>
  410034:	sxtw	x0, w0
  410038:	b	41004c <argp_error@@Base+0x69c>
  41003c:	add	w1, w4, #0x1
  410040:	str	w1, [x26]
  410044:	cmp	w19, w0
  410048:	b.le	410070 <argp_error@@Base+0x6c0>
  41004c:	ldr	x2, [x20, x0, lsl #3]
  410050:	mov	w4, w0
  410054:	mov	w1, w0
  410058:	add	x0, x0, #0x1
  41005c:	ldrb	w3, [x2]
  410060:	cmp	w3, #0x2d
  410064:	b.ne	41003c <argp_error@@Base+0x68c>  // b.any
  410068:	ldrb	w2, [x2, #1]
  41006c:	cbz	w2, 41003c <argp_error@@Base+0x68c>
  410070:	str	w1, [x26, #52]
  410074:	b	40ff0c <argp_error@@Base+0x55c>
  410078:	ldrb	w0, [x4, #1]
  41007c:	cbz	w0, 40ff7c <argp_error@@Base+0x5cc>
  410080:	cmp	w0, #0x2d
  410084:	ldr	x0, [sp, #96]
  410088:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41008c:	cset	x0, ne  // ne = any
  410090:	add	x0, x0, #0x1
  410094:	add	x4, x4, x0
  410098:	str	x4, [x26, #32]
  41009c:	b	40fde4 <argp_error@@Base+0x434>
  4100a0:	ldr	w1, [x26]
  4100a4:	add	w1, w1, #0x1
  4100a8:	str	w1, [x26]
  4100ac:	b	40fe54 <argp_error@@Base+0x4a4>
  4100b0:	cmp	w1, w2
  4100b4:	b.eq	410b0c <argp_error@@Base+0x115c>  // b.none
  4100b8:	mov	w0, w1
  4100bc:	str	w1, [x26, #48]
  4100c0:	b	41002c <argp_error@@Base+0x67c>
  4100c4:	str	wzr, [x26, #44]
  4100c8:	ldr	x4, [x26, #32]
  4100cc:	ldrb	w0, [x22]
  4100d0:	cmp	w0, #0x2d
  4100d4:	b.eq	40ffd8 <argp_error@@Base+0x628>  // b.none
  4100d8:	cmp	w0, #0x2b
  4100dc:	b.eq	410364 <argp_error@@Base+0x9b4>  // b.none
  4100e0:	mov	w0, #0x1                   	// #1
  4100e4:	str	w0, [x26, #40]
  4100e8:	b	40fdbc <argp_error@@Base+0x40c>
  4100ec:	cmp	w1, #0x3b
  4100f0:	b.ne	40fe78 <argp_error@@Base+0x4c8>  // b.any
  4100f4:	ldr	x0, [sp, #96]
  4100f8:	cbz	x0, 410960 <argp_error@@Base+0xfb0>
  4100fc:	ldrb	w1, [x4, #1]
  410100:	ldr	w0, [x26]
  410104:	cbz	w1, 41065c <argp_error@@Base+0xcac>
  410108:	stp	x27, x28, [sp, #80]
  41010c:	add	w0, w0, #0x1
  410110:	str	w0, [x26]
  410114:	str	x21, [x26, #16]
  410118:	str	x21, [x26, #32]
  41011c:	mov	x25, x21
  410120:	ldrb	w23, [x21]
  410124:	cmp	w23, #0x3d
  410128:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  41012c:	b.eq	410140 <argp_error@@Base+0x790>  // b.none
  410130:	ldrb	w23, [x25, #1]!
  410134:	cmp	w23, #0x3d
  410138:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  41013c:	b.ne	410130 <argp_error@@Base+0x780>  // b.any
  410140:	ldr	x0, [sp, #96]
  410144:	ldr	x27, [x0]
  410148:	cbz	x27, 41095c <argp_error@@Base+0xfac>
  41014c:	ldr	w0, [sp, #116]
  410150:	sub	x24, x25, x21
  410154:	cbnz	w0, 4106f0 <argp_error@@Base+0xd40>
  410158:	and	x0, x24, #0xffffffff
  41015c:	mov	w28, #0x0                   	// #0
  410160:	str	xzr, [sp, #104]
  410164:	str	x0, [sp, #120]
  410168:	str	wzr, [sp, #136]
  41016c:	b	4101a4 <argp_error@@Base+0x7f4>
  410170:	ldr	x1, [sp, #96]
  410174:	ldr	w0, [x0, #8]
  410178:	ldr	w1, [x1, #8]
  41017c:	cmp	w1, w0
  410180:	b.eq	4107b0 <argp_error@@Base+0xe00>  // b.none
  410184:	mov	w0, #0x1                   	// #1
  410188:	str	w0, [sp, #116]
  41018c:	nop
  410190:	ldr	x0, [sp, #96]
  410194:	add	w28, w28, #0x1
  410198:	ldr	x27, [x0, #32]!
  41019c:	str	x0, [sp, #96]
  4101a0:	cbz	x27, 410610 <argp_error@@Base+0xc60>
  4101a4:	mov	x1, x21
  4101a8:	mov	x2, x24
  4101ac:	mov	x0, x27
  4101b0:	bl	401c00 <strncmp@plt>
  4101b4:	mov	w1, w0
  4101b8:	mov	x0, x27
  4101bc:	cbnz	w1, 410190 <argp_error@@Base+0x7e0>
  4101c0:	bl	401b00 <strlen@plt>
  4101c4:	ldr	x1, [sp, #120]
  4101c8:	cmp	x0, x1
  4101cc:	b.eq	4107a0 <argp_error@@Base+0xdf0>  // b.none
  4101d0:	ldr	x0, [sp, #104]
  4101d4:	cbnz	x0, 410170 <argp_error@@Base+0x7c0>
  4101d8:	ldr	x0, [sp, #96]
  4101dc:	str	x0, [sp, #104]
  4101e0:	str	w28, [sp, #136]
  4101e4:	b	410190 <argp_error@@Base+0x7e0>
  4101e8:	stp	x27, x28, [sp, #80]
  4101ec:	mov	x25, x4
  4101f0:	ldrb	w0, [x4]
  4101f4:	cmp	w0, #0x3d
  4101f8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4101fc:	b.eq	410588 <argp_error@@Base+0xbd8>  // b.none
  410200:	ldrb	w0, [x25, #1]!
  410204:	cmp	w0, #0x3d
  410208:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41020c:	b.ne	410200 <argp_error@@Base+0x850>  // b.any
  410210:	sub	x27, x25, x4
  410214:	str	w27, [sp, #120]
  410218:	ldr	x23, [sp, #96]
  41021c:	ldr	x28, [x23]
  410220:	cbz	x28, 41044c <argp_error@@Base+0xa9c>
  410224:	mov	w0, #0xffffffff            	// #-1
  410228:	and	x27, x27, #0xffffffff
  41022c:	mov	w24, #0x0                   	// #0
  410230:	mov	x21, #0x0                   	// #0
  410234:	str	xzr, [sp, #104]
  410238:	stp	wzr, w0, [sp, #136]
  41023c:	b	410288 <argp_error@@Base+0x8d8>
  410240:	ldr	w1, [sp, #136]
  410244:	cbnz	w1, 410278 <argp_error@@Base+0x8c8>
  410248:	ldr	w1, [sp, #116]
  41024c:	cbnz	w1, 410260 <argp_error@@Base+0x8b0>
  410250:	ldr	w1, [x0, #8]
  410254:	ldr	w0, [x23, #8]
  410258:	cmp	w1, w0
  41025c:	b.eq	41038c <argp_error@@Base+0x9dc>  // b.none
  410260:	mov	x0, #0x10                  	// #16
  410264:	bl	401be0 <malloc@plt>
  410268:	cbz	x0, 410b14 <argp_error@@Base+0x1164>
  41026c:	stp	x23, x21, [x0]
  410270:	mov	x21, x0
  410274:	nop
  410278:	add	w24, w24, #0x1
  41027c:	ldr	x28, [x23, #32]!
  410280:	cbz	x28, 4102d0 <argp_error@@Base+0x920>
  410284:	ldr	x4, [x26, #32]
  410288:	mov	x1, x4
  41028c:	mov	x2, x27
  410290:	mov	x0, x28
  410294:	bl	401c00 <strncmp@plt>
  410298:	cbnz	w0, 410278 <argp_error@@Base+0x8c8>
  41029c:	mov	x0, x28
  4102a0:	bl	401b00 <strlen@plt>
  4102a4:	ldr	w1, [sp, #120]
  4102a8:	cmp	w1, w0
  4102ac:	b.eq	4103f4 <argp_error@@Base+0xa44>  // b.none
  4102b0:	ldr	x0, [sp, #104]
  4102b4:	cbnz	x0, 410240 <argp_error@@Base+0x890>
  4102b8:	str	x23, [sp, #104]
  4102bc:	ldr	x28, [x23, #32]!
  4102c0:	str	w24, [sp, #140]
  4102c4:	add	w24, w24, #0x1
  4102c8:	cbnz	x28, 410284 <argp_error@@Base+0x8d4>
  4102cc:	nop
  4102d0:	ldr	w0, [sp, #136]
  4102d4:	cmp	x21, #0x0
  4102d8:	cset	w1, ne  // ne = any
  4102dc:	cmp	w0, #0x0
  4102e0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  4102e4:	b.ne	410594 <argp_error@@Base+0xbe4>  // b.any
  4102e8:	ldr	x0, [sp, #104]
  4102ec:	ldr	w21, [x26]
  4102f0:	cbz	x0, 41044c <argp_error@@Base+0xa9c>
  4102f4:	ldr	x1, [sp, #104]
  4102f8:	add	w0, w21, #0x1
  4102fc:	ldr	w1, [x1, #8]
  410300:	str	w0, [x26]
  410304:	ldrb	w2, [x25]
  410308:	cbz	w2, 410428 <argp_error@@Base+0xa78>
  41030c:	cbz	w1, 4104ac <argp_error@@Base+0xafc>
  410310:	add	x25, x25, #0x1
  410314:	str	x25, [x26, #16]
  410318:	ldr	x19, [x26, #32]
  41031c:	mov	x0, x19
  410320:	bl	401b00 <strlen@plt>
  410324:	add	x19, x19, x0
  410328:	str	x19, [x26, #32]
  41032c:	ldr	x0, [sp, #128]
  410330:	cbz	x0, 41033c <argp_error@@Base+0x98c>
  410334:	ldr	w1, [sp, #140]
  410338:	str	w1, [x0]
  41033c:	ldr	x1, [sp, #104]
  410340:	ldr	x0, [x1, #16]
  410344:	ldr	w23, [x1, #24]
  410348:	cbz	x0, 41055c <argp_error@@Base+0xbac>
  41034c:	ldp	x21, x22, [sp, #32]
  410350:	ldp	x25, x26, [sp, #64]
  410354:	ldp	x27, x28, [sp, #80]
  410358:	str	w23, [x0]
  41035c:	mov	w23, #0x0                   	// #0
  410360:	b	40ff9c <argp_error@@Base+0x5ec>
  410364:	add	x22, x22, #0x1
  410368:	str	wzr, [x26, #40]
  41036c:	b	40fdbc <argp_error@@Base+0x40c>
  410370:	ldr	w0, [sp, #112]
  410374:	cbnz	w0, 41053c <argp_error@@Base+0xb8c>
  410378:	mov	w23, #0x3f                  	// #63
  41037c:	ldp	x21, x22, [sp, #32]
  410380:	str	w24, [x26, #8]
  410384:	ldp	x25, x26, [sp, #64]
  410388:	b	40ff9c <argp_error@@Base+0x5ec>
  41038c:	ldr	x0, [sp, #104]
  410390:	ldr	x1, [x0, #16]
  410394:	ldr	x0, [x23, #16]
  410398:	cmp	x1, x0
  41039c:	b.ne	410260 <argp_error@@Base+0x8b0>  // b.any
  4103a0:	ldr	x0, [sp, #104]
  4103a4:	ldr	w1, [x0, #24]
  4103a8:	ldr	w0, [x23, #24]
  4103ac:	cmp	w1, w0
  4103b0:	b.ne	410260 <argp_error@@Base+0x8b0>  // b.any
  4103b4:	ldr	w0, [sp, #116]
  4103b8:	str	w0, [sp, #136]
  4103bc:	b	410278 <argp_error@@Base+0x8c8>
  4103c0:	ldrb	w0, [x0, #2]
  4103c4:	ldrb	w1, [x4, #1]
  4103c8:	cmp	w0, #0x3a
  4103cc:	b.eq	410488 <argp_error@@Base+0xad8>  // b.none
  4103d0:	ldr	w0, [x26]
  4103d4:	cbz	w1, 41056c <argp_error@@Base+0xbbc>
  4103d8:	add	w0, w0, #0x1
  4103dc:	str	w0, [x26]
  4103e0:	str	x21, [x26, #16]
  4103e4:	ldp	x21, x22, [sp, #32]
  4103e8:	str	xzr, [x26, #32]
  4103ec:	ldp	x25, x26, [sp, #64]
  4103f0:	b	40ff9c <argp_error@@Base+0x5ec>
  4103f4:	ldr	w0, [sp, #136]
  4103f8:	cmp	w0, #0x0
  4103fc:	ccmp	x21, #0x0, #0x0, eq  // eq = none
  410400:	b.eq	410418 <argp_error@@Base+0xa68>  // b.none
  410404:	cbz	x21, 410418 <argp_error@@Base+0xa68>
  410408:	mov	x0, x21
  41040c:	ldr	x21, [x21, #8]
  410410:	bl	401d30 <free@plt>
  410414:	cbnz	x21, 410408 <argp_error@@Base+0xa58>
  410418:	ldr	w21, [x26]
  41041c:	str	x23, [sp, #104]
  410420:	str	w24, [sp, #140]
  410424:	b	4102f4 <argp_error@@Base+0x944>
  410428:	cmp	w1, #0x1
  41042c:	b.ne	410318 <argp_error@@Base+0x968>  // b.any
  410430:	cmp	w0, w19
  410434:	b.ge	4107ec <argp_error@@Base+0xe3c>  // b.tcont
  410438:	ldr	x0, [x20, w0, sxtw #3]
  41043c:	add	w21, w21, #0x2
  410440:	str	w21, [x26]
  410444:	str	x0, [x26, #16]
  410448:	b	410318 <argp_error@@Base+0x968>
  41044c:	ldr	w0, [sp, #116]
  410450:	cbz	w0, 410684 <argp_error@@Base+0xcd4>
  410454:	ldr	x23, [x20, w21, sxtw #3]
  410458:	ldrb	w0, [x23, #1]
  41045c:	cmp	w0, #0x2d
  410460:	b.eq	41090c <argp_error@@Base+0xf5c>  // b.none
  410464:	ldr	x4, [x26, #32]
  410468:	mov	x0, x22
  41046c:	str	x4, [sp, #104]
  410470:	ldrb	w1, [x4]
  410474:	bl	401d70 <strchr@plt>
  410478:	ldr	x4, [sp, #104]
  41047c:	cbz	x0, 410974 <argp_error@@Base+0xfc4>
  410480:	ldp	x27, x28, [sp, #80]
  410484:	b	40fe28 <argp_error@@Base+0x478>
  410488:	cbz	w1, 41067c <argp_error@@Base+0xccc>
  41048c:	ldr	w0, [x26]
  410490:	add	w0, w0, #0x1
  410494:	str	w0, [x26]
  410498:	str	x21, [x26, #16]
  41049c:	str	xzr, [x26, #32]
  4104a0:	ldp	x21, x22, [sp, #32]
  4104a4:	ldp	x25, x26, [sp, #64]
  4104a8:	b	40ff9c <argp_error@@Base+0x5ec>
  4104ac:	ldr	w1, [sp, #112]
  4104b0:	cbz	w1, 4104ec <argp_error@@Base+0xb3c>
  4104b4:	add	x0, x20, w0, sxtw #3
  4104b8:	adrp	x3, 42a000 <argp_error@@Base+0x1a650>
  4104bc:	ldr	x4, [sp, #104]
  4104c0:	ldur	x1, [x0, #-8]
  4104c4:	ldr	x0, [x3, #1248]
  4104c8:	ldrb	w3, [x1, #1]
  4104cc:	ldr	x2, [x20]
  4104d0:	cmp	w3, #0x2d
  4104d4:	ldr	x4, [x4]
  4104d8:	b.eq	410a10 <argp_error@@Base+0x1060>  // b.none
  4104dc:	ldrb	w3, [x1]
  4104e0:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  4104e4:	add	x1, x1, #0x18
  4104e8:	bl	401ed0 <fprintf@plt>
  4104ec:	ldr	x19, [x26, #32]
  4104f0:	mov	w23, #0x3f                  	// #63
  4104f4:	mov	x0, x19
  4104f8:	bl	401b00 <strlen@plt>
  4104fc:	ldr	x1, [sp, #104]
  410500:	add	x19, x19, x0
  410504:	ldp	x21, x22, [sp, #32]
  410508:	ldr	w1, [x1, #24]
  41050c:	ldp	x27, x28, [sp, #80]
  410510:	str	w1, [x26, #8]
  410514:	str	x19, [x26, #32]
  410518:	ldp	x25, x26, [sp, #64]
  41051c:	b	40ff9c <argp_error@@Base+0x5ec>
  410520:	ldp	x21, x22, [sp, #32]
  410524:	ldp	x25, x26, [sp, #64]
  410528:	mov	w23, #0xffffffff            	// #-1
  41052c:	b	40ff9c <argp_error@@Base+0x5ec>
  410530:	mov	w0, w1
  410534:	str	w1, [x26, #48]
  410538:	b	40ff64 <argp_error@@Base+0x5b4>
  41053c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410540:	mov	w3, w24
  410544:	ldr	x2, [x20]
  410548:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  41054c:	ldr	x0, [x0, #1248]
  410550:	add	x1, x1, #0xb0
  410554:	bl	401ed0 <fprintf@plt>
  410558:	b	410378 <argp_error@@Base+0x9c8>
  41055c:	ldp	x21, x22, [sp, #32]
  410560:	ldp	x25, x26, [sp, #64]
  410564:	ldp	x27, x28, [sp, #80]
  410568:	b	40ff9c <argp_error@@Base+0x5ec>
  41056c:	cmp	w19, w0
  410570:	b.eq	41077c <argp_error@@Base+0xdcc>  // b.none
  410574:	ldr	x1, [x20, w0, sxtw #3]
  410578:	add	w0, w0, #0x1
  41057c:	str	w0, [x26]
  410580:	str	x1, [x26, #16]
  410584:	b	4103e4 <argp_error@@Base+0xa34>
  410588:	mov	x27, #0x0                   	// #0
  41058c:	str	wzr, [sp, #120]
  410590:	b	410218 <argp_error@@Base+0x868>
  410594:	ldr	w2, [sp, #112]
  410598:	cmp	w2, #0x0
  41059c:	cset	w2, ne  // ne = any
  4105a0:	cmp	w2, #0x0
  4105a4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4105a8:	b.ne	410834 <argp_error@@Base+0xe84>  // b.any
  4105ac:	cmp	w2, #0x0
  4105b0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4105b4:	b.ne	410938 <argp_error@@Base+0xf88>  // b.any
  4105b8:	ldr	x19, [x26, #32]
  4105bc:	mov	x0, x19
  4105c0:	bl	401b00 <strlen@plt>
  4105c4:	ldr	w1, [x26]
  4105c8:	add	x19, x19, x0
  4105cc:	str	wzr, [x26, #8]
  4105d0:	add	w1, w1, #0x1
  4105d4:	str	w1, [x26]
  4105d8:	str	x19, [x26, #32]
  4105dc:	cbz	x21, 4105f0 <argp_error@@Base+0xc40>
  4105e0:	mov	x0, x21
  4105e4:	ldr	x21, [x21, #8]
  4105e8:	bl	401d30 <free@plt>
  4105ec:	cbnz	x21, 4105e0 <argp_error@@Base+0xc30>
  4105f0:	mov	w23, #0x3f                  	// #63
  4105f4:	ldp	x21, x22, [sp, #32]
  4105f8:	ldp	x25, x26, [sp, #64]
  4105fc:	ldp	x27, x28, [sp, #80]
  410600:	b	40ff9c <argp_error@@Base+0x5ec>
  410604:	mov	w1, w0
  410608:	str	w1, [x26, #52]
  41060c:	b	40ff0c <argp_error@@Base+0x55c>
  410610:	ldr	w0, [sp, #116]
  410614:	cbnz	w0, 4108d4 <argp_error@@Base+0xf24>
  410618:	ldr	x0, [sp, #104]
  41061c:	cbz	x0, 41095c <argp_error@@Base+0xfac>
  410620:	ldr	x0, [sp, #104]
  410624:	ldr	w0, [x0, #8]
  410628:	cbz	w23, 41076c <argp_error@@Base+0xdbc>
  41062c:	cbz	w0, 410a24 <argp_error@@Base+0x1074>
  410630:	add	x25, x25, #0x1
  410634:	str	x25, [x26, #16]
  410638:	mov	x0, x21
  41063c:	bl	401b00 <strlen@plt>
  410640:	add	x21, x21, x0
  410644:	str	x21, [x26, #32]
  410648:	ldr	x0, [sp, #128]
  41064c:	cbz	x0, 41033c <argp_error@@Base+0x98c>
  410650:	ldr	w1, [sp, #136]
  410654:	str	w1, [x0]
  410658:	b	41033c <argp_error@@Base+0x98c>
  41065c:	cmp	w19, w0
  410660:	b.eq	410980 <argp_error@@Base+0xfd0>  // b.none
  410664:	stp	x27, x28, [sp, #80]
  410668:	ldr	x21, [x20, w0, sxtw #3]
  41066c:	add	w0, w0, #0x1
  410670:	str	w0, [x26]
  410674:	str	x21, [x26, #16]
  410678:	b	410118 <argp_error@@Base+0x768>
  41067c:	mov	x21, #0x0                   	// #0
  410680:	b	410498 <argp_error@@Base+0xae8>
  410684:	ldr	w0, [sp, #112]
  410688:	cbz	w0, 4106c4 <argp_error@@Base+0xd14>
  41068c:	ldr	x23, [x20, w21, sxtw #3]
  410690:	ldr	x3, [x26, #32]
  410694:	ldrb	w0, [x23, #1]
  410698:	mov	x4, x3
  41069c:	cmp	w0, #0x2d
  4106a0:	b.eq	410918 <argp_error@@Base+0xf68>  // b.none
  4106a4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4106a8:	ldrb	w3, [x23]
  4106ac:	ldr	x2, [x20]
  4106b0:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  4106b4:	ldr	x0, [x0, #1248]
  4106b8:	add	x1, x1, #0x90
  4106bc:	bl	401ed0 <fprintf@plt>
  4106c0:	ldr	w21, [x26]
  4106c4:	add	w21, w21, #0x1
  4106c8:	adrp	x0, 415000 <argp_error@@Base+0x5650>
  4106cc:	mov	w23, #0x3f                  	// #63
  4106d0:	add	x0, x0, #0xf8
  4106d4:	ldp	x27, x28, [sp, #80]
  4106d8:	str	w21, [x26]
  4106dc:	str	wzr, [x26, #8]
  4106e0:	str	x0, [x26, #32]
  4106e4:	ldp	x21, x22, [sp, #32]
  4106e8:	ldp	x25, x26, [sp, #64]
  4106ec:	b	40ff9c <argp_error@@Base+0x5ec>
  4106f0:	and	x0, x24, #0xffffffff
  4106f4:	mov	w28, #0x0                   	// #0
  4106f8:	str	xzr, [sp, #104]
  4106fc:	str	wzr, [sp, #116]
  410700:	str	x0, [sp, #120]
  410704:	str	wzr, [sp, #136]
  410708:	b	410728 <argp_error@@Base+0xd78>
  41070c:	mov	w0, #0x1                   	// #1
  410710:	str	w0, [sp, #116]
  410714:	ldr	x0, [sp, #96]
  410718:	add	w28, w28, #0x1
  41071c:	ldr	x27, [x0, #32]!
  410720:	str	x0, [sp, #96]
  410724:	cbz	x27, 410610 <argp_error@@Base+0xc60>
  410728:	mov	x1, x21
  41072c:	mov	x2, x24
  410730:	mov	x0, x27
  410734:	bl	401c00 <strncmp@plt>
  410738:	mov	w1, w0
  41073c:	mov	x0, x27
  410740:	cbnz	w1, 410714 <argp_error@@Base+0xd64>
  410744:	bl	401b00 <strlen@plt>
  410748:	ldr	x1, [sp, #120]
  41074c:	cmp	x1, x0
  410750:	b.eq	4107a0 <argp_error@@Base+0xdf0>  // b.none
  410754:	ldr	x0, [sp, #104]
  410758:	cbnz	x0, 41070c <argp_error@@Base+0xd5c>
  41075c:	ldr	x0, [sp, #96]
  410760:	str	x0, [sp, #104]
  410764:	str	w28, [sp, #136]
  410768:	b	410714 <argp_error@@Base+0xd64>
  41076c:	cmp	w0, #0x1
  410770:	b.eq	4109cc <argp_error@@Base+0x101c>  // b.none
  410774:	str	xzr, [x26, #16]
  410778:	b	410638 <argp_error@@Base+0xc88>
  41077c:	ldr	w0, [sp, #112]
  410780:	cbnz	w0, 4109ac <argp_error@@Base+0xffc>
  410784:	str	w24, [x26, #8]
  410788:	mov	w23, #0x3a                  	// #58
  41078c:	mov	w0, #0x3f                  	// #63
  410790:	ldrb	w1, [x22]
  410794:	cmp	w1, w23
  410798:	csel	w23, w23, w0, eq  // eq = none
  41079c:	b	4103e4 <argp_error@@Base+0xa34>
  4107a0:	ldr	x0, [sp, #96]
  4107a4:	str	x0, [sp, #104]
  4107a8:	str	w28, [sp, #136]
  4107ac:	b	410620 <argp_error@@Base+0xc70>
  4107b0:	ldr	x0, [sp, #96]
  4107b4:	ldr	x1, [x0, #16]
  4107b8:	ldr	x0, [sp, #104]
  4107bc:	ldr	x0, [x0, #16]
  4107c0:	cmp	x1, x0
  4107c4:	b.ne	410184 <argp_error@@Base+0x7d4>  // b.any
  4107c8:	ldr	x0, [sp, #96]
  4107cc:	ldr	w1, [x0, #24]
  4107d0:	ldr	x0, [sp, #104]
  4107d4:	ldr	w0, [x0, #24]
  4107d8:	cmp	w1, w0
  4107dc:	ldr	w0, [sp, #116]
  4107e0:	csinc	w0, w0, wzr, eq  // eq = none
  4107e4:	str	w0, [sp, #116]
  4107e8:	b	410190 <argp_error@@Base+0x7e0>
  4107ec:	ldr	w0, [sp, #112]
  4107f0:	cbnz	w0, 4109ec <argp_error@@Base+0x103c>
  4107f4:	ldr	x19, [x26, #32]
  4107f8:	mov	x0, x19
  4107fc:	bl	401b00 <strlen@plt>
  410800:	ldr	x1, [sp, #104]
  410804:	add	x19, x19, x0
  410808:	ldr	w1, [x1, #24]
  41080c:	str	w1, [x26, #8]
  410810:	str	x19, [x26, #32]
  410814:	ldrb	w0, [x22]
  410818:	cmp	w0, #0x3a
  41081c:	b.ne	4105f0 <argp_error@@Base+0xc40>  // b.any
  410820:	mov	w23, #0x3a                  	// #58
  410824:	ldp	x21, x22, [sp, #32]
  410828:	ldp	x25, x26, [sp, #64]
  41082c:	ldp	x27, x28, [sp, #80]
  410830:	b	40ff9c <argp_error@@Base+0x5ec>
  410834:	ldrsw	x3, [x26]
  410838:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  41083c:	add	x22, x0, #0x4e0
  410840:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  410844:	ldr	x0, [x0, #1248]
  410848:	add	x1, x1, #0xf90
  41084c:	ldr	x3, [x20, x3, lsl #3]
  410850:	str	x21, [sp, #152]
  410854:	ldr	x2, [x20]
  410858:	add	x19, sp, #0x90
  41085c:	adrp	x20, 414000 <argp_error@@Base+0x4650>
  410860:	add	x20, x20, #0xfc0
  410864:	bl	401ed0 <fprintf@plt>
  410868:	ldr	x0, [sp, #104]
  41086c:	b	410878 <argp_error@@Base+0xec8>
  410870:	ldr	x0, [x19]
  410874:	str	x0, [sp, #104]
  410878:	ldr	x2, [x0]
  41087c:	mov	x1, x20
  410880:	ldr	x0, [x22]
  410884:	bl	401ed0 <fprintf@plt>
  410888:	ldr	x19, [x19, #8]
  41088c:	cbnz	x19, 410870 <argp_error@@Base+0xec0>
  410890:	ldr	x1, [x22]
  410894:	mov	w0, #0xa                   	// #10
  410898:	bl	401b70 <fputc@plt>
  41089c:	ldr	x19, [x26, #32]
  4108a0:	mov	w23, #0x3f                  	// #63
  4108a4:	mov	x0, x19
  4108a8:	bl	401b00 <strlen@plt>
  4108ac:	ldr	w1, [x26]
  4108b0:	add	x19, x19, x0
  4108b4:	ldp	x21, x22, [sp, #32]
  4108b8:	add	w1, w1, #0x1
  4108bc:	ldp	x27, x28, [sp, #80]
  4108c0:	str	w1, [x26]
  4108c4:	str	wzr, [x26, #8]
  4108c8:	str	x19, [x26, #32]
  4108cc:	ldp	x25, x26, [sp, #64]
  4108d0:	b	40ff9c <argp_error@@Base+0x5ec>
  4108d4:	ldr	w0, [sp, #112]
  4108d8:	cbnz	w0, 410a50 <argp_error@@Base+0x10a0>
  4108dc:	mov	x0, x21
  4108e0:	bl	401b00 <strlen@plt>
  4108e4:	ldr	w1, [x26]
  4108e8:	add	x21, x21, x0
  4108ec:	mov	w23, #0x3f                  	// #63
  4108f0:	add	w1, w1, #0x1
  4108f4:	ldp	x27, x28, [sp, #80]
  4108f8:	str	w1, [x26]
  4108fc:	str	x21, [x26, #32]
  410900:	ldp	x21, x22, [sp, #32]
  410904:	ldp	x25, x26, [sp, #64]
  410908:	b	40ff9c <argp_error@@Base+0x5ec>
  41090c:	ldr	w0, [sp, #112]
  410910:	cbz	w0, 4106c4 <argp_error@@Base+0xd14>
  410914:	ldr	x3, [x26, #32]
  410918:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  41091c:	ldr	x2, [x20]
  410920:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410924:	ldr	x0, [x0, #1248]
  410928:	add	x1, x1, #0x70
  41092c:	bl	401ed0 <fprintf@plt>
  410930:	ldr	w21, [x26]
  410934:	b	4106c4 <argp_error@@Base+0xd14>
  410938:	ldrsw	x3, [x26]
  41093c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410940:	ldr	x2, [x20]
  410944:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  410948:	ldr	x0, [x0, #1248]
  41094c:	add	x1, x1, #0xfc8
  410950:	ldr	x3, [x20, x3, lsl #3]
  410954:	bl	401ed0 <fprintf@plt>
  410958:	b	41089c <argp_error@@Base+0xeec>
  41095c:	ldp	x27, x28, [sp, #80]
  410960:	mov	w23, #0x57                  	// #87
  410964:	ldp	x21, x22, [sp, #32]
  410968:	str	xzr, [x26, #32]
  41096c:	ldp	x25, x26, [sp, #64]
  410970:	b	40ff9c <argp_error@@Base+0x5ec>
  410974:	ldr	w0, [sp, #112]
  410978:	cbnz	w0, 4106a4 <argp_error@@Base+0xcf4>
  41097c:	b	4106c4 <argp_error@@Base+0xd14>
  410980:	ldr	w0, [sp, #112]
  410984:	cbnz	w0, 410a74 <argp_error@@Base+0x10c4>
  410988:	str	w24, [x26, #8]
  41098c:	mov	w23, #0x3a                  	// #58
  410990:	mov	w0, #0x3f                  	// #63
  410994:	ldrb	w1, [x22]
  410998:	ldp	x21, x22, [sp, #32]
  41099c:	cmp	w1, w23
  4109a0:	csel	w23, w23, w0, eq  // eq = none
  4109a4:	ldp	x25, x26, [sp, #64]
  4109a8:	b	40ff9c <argp_error@@Base+0x5ec>
  4109ac:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4109b0:	mov	w3, w24
  4109b4:	ldr	x2, [x20]
  4109b8:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  4109bc:	ldr	x0, [x0, #1248]
  4109c0:	add	x1, x1, #0xd0
  4109c4:	bl	401ed0 <fprintf@plt>
  4109c8:	b	410784 <argp_error@@Base+0xdd4>
  4109cc:	ldr	w0, [x26]
  4109d0:	cmp	w0, w19
  4109d4:	b.ge	410a94 <argp_error@@Base+0x10e4>  // b.tcont
  4109d8:	ldr	x1, [x20, w0, sxtw #3]
  4109dc:	add	w0, w0, #0x1
  4109e0:	str	w0, [x26]
  4109e4:	str	x1, [x26, #16]
  4109e8:	b	410638 <argp_error@@Base+0xc88>
  4109ec:	ldr	x3, [sp, #104]
  4109f0:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  4109f4:	ldr	x2, [x20]
  4109f8:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  4109fc:	ldr	x0, [x0, #1248]
  410a00:	add	x1, x1, #0x48
  410a04:	ldr	x3, [x3]
  410a08:	bl	401ed0 <fprintf@plt>
  410a0c:	b	4107f4 <argp_error@@Base+0xe44>
  410a10:	mov	x3, x4
  410a14:	adrp	x1, 414000 <argp_error@@Base+0x4650>
  410a18:	add	x1, x1, #0xfe8
  410a1c:	bl	401ed0 <fprintf@plt>
  410a20:	b	4104ec <argp_error@@Base+0xb3c>
  410a24:	ldr	w0, [sp, #112]
  410a28:	cbnz	w0, 410ac0 <argp_error@@Base+0x1110>
  410a2c:	mov	x0, x21
  410a30:	bl	401b00 <strlen@plt>
  410a34:	add	x21, x21, x0
  410a38:	mov	w23, #0x3f                  	// #63
  410a3c:	ldp	x27, x28, [sp, #80]
  410a40:	str	x21, [x26, #32]
  410a44:	ldp	x21, x22, [sp, #32]
  410a48:	ldp	x25, x26, [sp, #64]
  410a4c:	b	40ff9c <argp_error@@Base+0x5ec>
  410a50:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410a54:	mov	x3, x21
  410a58:	ldr	x2, [x20]
  410a5c:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410a60:	ldr	x0, [x0, #1248]
  410a64:	add	x1, x1, #0x100
  410a68:	bl	401ed0 <fprintf@plt>
  410a6c:	ldr	x21, [x26, #32]
  410a70:	b	4108dc <argp_error@@Base+0xf2c>
  410a74:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410a78:	mov	w3, w24
  410a7c:	ldr	x2, [x20]
  410a80:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410a84:	ldr	x0, [x0, #1248]
  410a88:	add	x1, x1, #0xd0
  410a8c:	bl	401ed0 <fprintf@plt>
  410a90:	b	410988 <argp_error@@Base+0xfd8>
  410a94:	ldr	w0, [sp, #112]
  410a98:	cbnz	w0, 410ae8 <argp_error@@Base+0x1138>
  410a9c:	ldr	x19, [x26, #32]
  410aa0:	mov	x0, x19
  410aa4:	bl	401b00 <strlen@plt>
  410aa8:	add	x19, x19, x0
  410aac:	str	x19, [x26, #32]
  410ab0:	ldrb	w0, [x22]
  410ab4:	cmp	w0, #0x3a
  410ab8:	b.ne	4105f0 <argp_error@@Base+0xc40>  // b.any
  410abc:	b	410820 <argp_error@@Base+0xe70>
  410ac0:	ldr	x2, [sp, #104]
  410ac4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410ac8:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410acc:	add	x1, x1, #0x128
  410ad0:	ldr	x0, [x0, #1248]
  410ad4:	ldr	x3, [x2]
  410ad8:	ldr	x2, [x20]
  410adc:	bl	401ed0 <fprintf@plt>
  410ae0:	ldr	x21, [x26, #32]
  410ae4:	b	410a2c <argp_error@@Base+0x107c>
  410ae8:	ldr	x2, [sp, #104]
  410aec:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410af0:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410af4:	add	x1, x1, #0x158
  410af8:	ldr	x0, [x0, #1248]
  410afc:	ldr	x3, [x2]
  410b00:	ldr	x2, [x20]
  410b04:	bl	401ed0 <fprintf@plt>
  410b08:	b	410a9c <argp_error@@Base+0x10ec>
  410b0c:	mov	w0, w2
  410b10:	b	41002c <argp_error@@Base+0x67c>
  410b14:	cbz	x21, 410b3c <argp_error@@Base+0x118c>
  410b18:	ldr	x28, [x21, #8]
  410b1c:	mov	x0, x21
  410b20:	bl	401d30 <free@plt>
  410b24:	mov	x21, x28
  410b28:	cbnz	x28, 410b18 <argp_error@@Base+0x1168>
  410b2c:	mov	w0, #0x1                   	// #1
  410b30:	mov	x21, #0x0                   	// #0
  410b34:	str	w0, [sp, #136]
  410b38:	b	410278 <argp_error@@Base+0x8c8>
  410b3c:	mov	w0, #0x1                   	// #1
  410b40:	str	w0, [sp, #136]
  410b44:	b	410278 <argp_error@@Base+0x8c8>
  410b48:	stp	x29, x30, [sp, #-48]!
  410b4c:	mov	w7, w6
  410b50:	mov	x29, sp
  410b54:	stp	x19, x20, [sp, #16]
  410b58:	adrp	x20, 42a000 <argp_error@@Base+0x1a650>
  410b5c:	stp	x21, x22, [sp, #32]
  410b60:	add	x22, x20, #0x4c4
  410b64:	ldr	w9, [x20, #1220]
  410b68:	adrp	x21, 42a000 <argp_error@@Base+0x1a650>
  410b6c:	add	x19, x21, #0x5c8
  410b70:	ldr	w8, [x22, #4]
  410b74:	mov	x6, x19
  410b78:	str	w9, [x21, #1480]
  410b7c:	str	w8, [x19, #4]
  410b80:	bl	40fd30 <argp_error@@Base+0x380>
  410b84:	adrp	x2, 42a000 <argp_error@@Base+0x1a650>
  410b88:	ldr	w4, [x21, #1480]
  410b8c:	ldr	w1, [x19, #8]
  410b90:	ldr	x3, [x19, #16]
  410b94:	str	w4, [x20, #1220]
  410b98:	str	x3, [x2, #1640]
  410b9c:	str	w1, [x22, #8]
  410ba0:	ldp	x19, x20, [sp, #16]
  410ba4:	ldp	x21, x22, [sp, #32]
  410ba8:	ldp	x29, x30, [sp], #48
  410bac:	ret
  410bb0:	stp	x29, x30, [sp, #-112]!
  410bb4:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  410bb8:	cmp	w0, #0x0
  410bbc:	mov	x29, sp
  410bc0:	stp	x27, x28, [sp, #80]
  410bc4:	adrp	x27, 42a000 <argp_error@@Base+0x1a650>
  410bc8:	add	x28, x27, #0x4c4
  410bcc:	stp	x19, x20, [sp, #16]
  410bd0:	add	x20, x4, #0x5c8
  410bd4:	ldr	w19, [x27, #1220]
  410bd8:	ldr	w3, [x28, #4]
  410bdc:	str	w19, [x4, #1480]
  410be0:	str	w3, [x20, #4]
  410be4:	stp	x23, x24, [sp, #48]
  410be8:	b.le	411054 <argp_error@@Base+0x16a4>
  410bec:	str	xzr, [x20, #16]
  410bf0:	mov	x24, x1
  410bf4:	stp	x21, x22, [sp, #32]
  410bf8:	mov	w21, w0
  410bfc:	mov	x22, x2
  410c00:	cbnz	w19, 410c5c <argp_error@@Base+0x12ac>
  410c04:	mov	w0, #0x1                   	// #1
  410c08:	mov	w19, w0
  410c0c:	str	w0, [x4, #1480]
  410c10:	mov	w0, #0x1                   	// #1
  410c14:	str	xzr, [x20, #32]
  410c18:	stp	w0, w19, [x20, #44]
  410c1c:	str	w19, [x20, #52]
  410c20:	ldrb	w0, [x22]
  410c24:	cmp	w0, #0x2d
  410c28:	b.eq	410ed0 <argp_error@@Base+0x1520>  // b.none
  410c2c:	cmp	w0, #0x2b
  410c30:	b.eq	410f44 <argp_error@@Base+0x1594>  // b.none
  410c34:	mov	w1, #0x0                   	// #0
  410c38:	str	wzr, [x20, #40]
  410c3c:	mov	w0, #0x1                   	// #1
  410c40:	str	w0, [x20, #24]
  410c44:	ldrb	w0, [x22]
  410c48:	cmp	w0, #0x3a
  410c4c:	b.eq	410e14 <argp_error@@Base+0x1464>  // b.none
  410c50:	ldr	w1, [x20, #40]
  410c54:	ldp	w2, w0, [x20, #48]
  410c58:	b	410ca0 <argp_error@@Base+0x12f0>
  410c5c:	ldr	w0, [x20, #24]
  410c60:	cbz	w0, 410c10 <argp_error@@Base+0x1260>
  410c64:	stp	x25, x26, [sp, #64]
  410c68:	mov	w1, #0xfd                  	// #253
  410c6c:	ldrb	w0, [x2]
  410c70:	sub	w2, w0, #0x2b
  410c74:	tst	w2, w1
  410c78:	b.eq	410ee4 <argp_error@@Base+0x1534>  // b.none
  410c7c:	ldr	x25, [x20, #32]
  410c80:	cmp	w0, #0x3a
  410c84:	csel	w3, w3, wzr, ne  // ne = any
  410c88:	cbz	x25, 411064 <argp_error@@Base+0x16b4>
  410c8c:	ldrb	w0, [x25]
  410c90:	cbnz	w0, 410d98 <argp_error@@Base+0x13e8>
  410c94:	ldp	x25, x26, [sp, #64]
  410c98:	ldr	w1, [x20, #40]
  410c9c:	ldp	w2, w0, [x20, #48]
  410ca0:	cmp	w19, w0
  410ca4:	b.ge	410cb0 <argp_error@@Base+0x1300>  // b.tcont
  410ca8:	mov	w0, w19
  410cac:	str	w19, [x20, #52]
  410cb0:	cmp	w2, w19
  410cb4:	b.le	410cc0 <argp_error@@Base+0x1310>
  410cb8:	mov	w2, w19
  410cbc:	str	w19, [x20, #48]
  410cc0:	cmp	w1, #0x1
  410cc4:	b.eq	410e28 <argp_error@@Base+0x1478>  // b.none
  410cc8:	cmp	w21, w19
  410ccc:	b.eq	410ea8 <argp_error@@Base+0x14f8>  // b.none
  410cd0:	ldr	x23, [x24, w19, sxtw #3]
  410cd4:	ldrb	w1, [x23]
  410cd8:	cmp	w1, #0x2d
  410cdc:	b.ne	410d38 <argp_error@@Base+0x1388>  // b.any
  410ce0:	ldrb	w1, [x23, #1]
  410ce4:	cmp	w1, #0x2d
  410ce8:	b.ne	410d38 <argp_error@@Base+0x1388>  // b.any
  410cec:	ldrb	w1, [x23, #2]
  410cf0:	cbnz	w1, 410d38 <argp_error@@Base+0x1388>
  410cf4:	ldr	w1, [x20, #48]
  410cf8:	add	w19, w19, #0x1
  410cfc:	str	w19, [x4, #1480]
  410d00:	cmp	w1, w0
  410d04:	b.eq	410fb8 <argp_error@@Base+0x1608>  // b.none
  410d08:	cmp	w19, w0
  410d0c:	b.eq	410d24 <argp_error@@Base+0x1374>  // b.none
  410d10:	mov	x1, x20
  410d14:	mov	x0, x24
  410d18:	bl	40fb40 <argp_error@@Base+0x190>
  410d1c:	ldr	w1, [x20, #48]
  410d20:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  410d24:	mov	w19, w21
  410d28:	mov	w0, w21
  410d2c:	str	w21, [x4, #1480]
  410d30:	str	w21, [x20, #52]
  410d34:	b	410eac <argp_error@@Base+0x14fc>
  410d38:	ldrb	w0, [x23]
  410d3c:	cmp	w0, #0x2d
  410d40:	b.eq	410d88 <argp_error@@Base+0x13d8>  // b.none
  410d44:	ldr	w0, [x20, #40]
  410d48:	cbz	w0, 411018 <argp_error@@Base+0x1668>
  410d4c:	ldp	x21, x22, [sp, #32]
  410d50:	add	w19, w19, #0x1
  410d54:	ldr	w2, [x20, #8]
  410d58:	mov	w0, #0x1                   	// #1
  410d5c:	str	w19, [x4, #1480]
  410d60:	str	x23, [x20, #16]
  410d64:	adrp	x1, 42a000 <argp_error@@Base+0x1a650>
  410d68:	str	w19, [x27, #1220]
  410d6c:	str	w2, [x28, #8]
  410d70:	str	x23, [x1, #1640]
  410d74:	ldp	x19, x20, [sp, #16]
  410d78:	ldp	x23, x24, [sp, #48]
  410d7c:	ldp	x27, x28, [sp, #80]
  410d80:	ldp	x29, x30, [sp], #112
  410d84:	ret
  410d88:	ldrb	w0, [x23, #1]
  410d8c:	cbz	w0, 410d44 <argp_error@@Base+0x1394>
  410d90:	stp	x25, x26, [sp, #64]
  410d94:	add	x25, x23, #0x1
  410d98:	add	x23, x25, #0x1
  410d9c:	str	x23, [x20, #32]
  410da0:	mov	x0, x22
  410da4:	str	w3, [sp, #108]
  410da8:	ldrb	w26, [x25]
  410dac:	mov	w1, w26
  410db0:	bl	401d70 <strchr@plt>
  410db4:	ldrb	w1, [x25, #1]
  410db8:	mov	x2, x0
  410dbc:	ldr	w3, [sp, #108]
  410dc0:	mov	w0, w26
  410dc4:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  410dc8:	cbnz	w1, 410dd4 <argp_error@@Base+0x1424>
  410dcc:	add	w19, w19, #0x1
  410dd0:	str	w19, [x4, #1480]
  410dd4:	sub	w1, w26, #0x3a
  410dd8:	cmp	x2, #0x0
  410ddc:	and	w1, w1, #0xff
  410de0:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  410de4:	b.ls	410f54 <argp_error@@Base+0x15a4>  // b.plast
  410de8:	ldrb	w5, [x2]
  410dec:	ldrb	w1, [x2, #1]
  410df0:	cmp	w5, #0x57
  410df4:	b.eq	410f74 <argp_error@@Base+0x15c4>  // b.none
  410df8:	cmp	w1, #0x3a
  410dfc:	b.eq	410ef0 <argp_error@@Base+0x1540>  // b.none
  410e00:	ldr	w2, [x20, #8]
  410e04:	ldr	x23, [x20, #16]
  410e08:	ldp	x21, x22, [sp, #32]
  410e0c:	ldp	x25, x26, [sp, #64]
  410e10:	b	410d64 <argp_error@@Base+0x13b4>
  410e14:	mov	w2, w19
  410e18:	mov	w0, w19
  410e1c:	cmp	w1, #0x1
  410e20:	mov	w3, #0x0                   	// #0
  410e24:	b.ne	410cc8 <argp_error@@Base+0x1318>  // b.any
  410e28:	cmp	w2, w0
  410e2c:	b.eq	410f34 <argp_error@@Base+0x1584>  // b.none
  410e30:	cmp	w19, w0
  410e34:	b.eq	410e54 <argp_error@@Base+0x14a4>  // b.none
  410e38:	mov	x1, x20
  410e3c:	mov	x0, x24
  410e40:	str	w3, [sp, #108]
  410e44:	bl	40fb40 <argp_error@@Base+0x190>
  410e48:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  410e4c:	ldr	w3, [sp, #108]
  410e50:	ldr	w19, [x4, #1480]
  410e54:	cmp	w21, w19
  410e58:	b.le	410e98 <argp_error@@Base+0x14e8>
  410e5c:	sxtw	x0, w19
  410e60:	b	410e74 <argp_error@@Base+0x14c4>
  410e64:	add	w19, w2, #0x1
  410e68:	str	w19, [x20]
  410e6c:	cmp	w21, w0
  410e70:	b.le	410e98 <argp_error@@Base+0x14e8>
  410e74:	ldr	x1, [x24, x0, lsl #3]
  410e78:	mov	w2, w0
  410e7c:	mov	w19, w0
  410e80:	add	x0, x0, #0x1
  410e84:	ldrb	w5, [x1]
  410e88:	cmp	w5, #0x2d
  410e8c:	b.ne	410e64 <argp_error@@Base+0x14b4>  // b.any
  410e90:	ldrb	w1, [x1, #1]
  410e94:	cbz	w1, 410e64 <argp_error@@Base+0x14b4>
  410e98:	str	w19, [x20, #52]
  410e9c:	mov	w0, w19
  410ea0:	cmp	w21, w19
  410ea4:	b.ne	410cd0 <argp_error@@Base+0x1320>  // b.any
  410ea8:	ldr	w1, [x20, #48]
  410eac:	ldr	w2, [x20, #8]
  410eb0:	cmp	w1, w0
  410eb4:	ldr	x23, [x20, #16]
  410eb8:	b.eq	410fac <argp_error@@Base+0x15fc>  // b.none
  410ebc:	mov	w19, w1
  410ec0:	str	w1, [x4, #1480]
  410ec4:	mov	w0, #0xffffffff            	// #-1
  410ec8:	ldp	x21, x22, [sp, #32]
  410ecc:	b	410d64 <argp_error@@Base+0x13b4>
  410ed0:	mov	w0, #0x2                   	// #2
  410ed4:	add	x22, x22, #0x1
  410ed8:	mov	w1, w0
  410edc:	str	w0, [x20, #40]
  410ee0:	b	410c3c <argp_error@@Base+0x128c>
  410ee4:	ldrb	w0, [x22, #1]
  410ee8:	add	x22, x22, #0x1
  410eec:	b	410c7c <argp_error@@Base+0x12cc>
  410ef0:	ldrb	w2, [x2, #2]
  410ef4:	ldrb	w1, [x25, #1]
  410ef8:	cmp	w2, #0x3a
  410efc:	b.eq	410fec <argp_error@@Base+0x163c>  // b.none
  410f00:	cbnz	w1, 410f98 <argp_error@@Base+0x15e8>
  410f04:	cmp	w21, w19
  410f08:	b.eq	41102c <argp_error@@Base+0x167c>  // b.none
  410f0c:	add	w1, w19, #0x1
  410f10:	ldr	w2, [x20, #8]
  410f14:	ldr	x23, [x24, w19, sxtw #3]
  410f18:	mov	w19, w1
  410f1c:	str	w1, [x4, #1480]
  410f20:	str	x23, [x20, #16]
  410f24:	str	xzr, [x20, #32]
  410f28:	ldp	x21, x22, [sp, #32]
  410f2c:	ldp	x25, x26, [sp, #64]
  410f30:	b	410d64 <argp_error@@Base+0x13b4>
  410f34:	cmp	w19, w2
  410f38:	b.eq	410e54 <argp_error@@Base+0x14a4>  // b.none
  410f3c:	str	w19, [x20, #48]
  410f40:	b	410e54 <argp_error@@Base+0x14a4>
  410f44:	add	x22, x22, #0x1
  410f48:	mov	w1, #0x0                   	// #0
  410f4c:	str	wzr, [x20, #40]
  410f50:	b	410c3c <argp_error@@Base+0x128c>
  410f54:	cbnz	w3, 410fc4 <argp_error@@Base+0x1614>
  410f58:	mov	w2, w26
  410f5c:	mov	w0, #0x3f                  	// #63
  410f60:	str	w26, [x20, #8]
  410f64:	ldr	x23, [x20, #16]
  410f68:	ldp	x21, x22, [sp, #32]
  410f6c:	ldp	x25, x26, [sp, #64]
  410f70:	b	410d64 <argp_error@@Base+0x13b4>
  410f74:	cmp	w1, #0x3b
  410f78:	b.ne	410df8 <argp_error@@Base+0x1448>  // b.any
  410f7c:	ldr	w2, [x20, #8]
  410f80:	mov	w0, w5
  410f84:	str	xzr, [x20, #32]
  410f88:	ldr	x23, [x20, #16]
  410f8c:	ldp	x21, x22, [sp, #32]
  410f90:	ldp	x25, x26, [sp, #64]
  410f94:	b	410d64 <argp_error@@Base+0x13b4>
  410f98:	add	w19, w19, #0x1
  410f9c:	ldr	w2, [x20, #8]
  410fa0:	str	w19, [x4, #1480]
  410fa4:	str	x23, [x20, #16]
  410fa8:	b	410f24 <argp_error@@Base+0x1574>
  410fac:	mov	w0, #0xffffffff            	// #-1
  410fb0:	ldp	x21, x22, [sp, #32]
  410fb4:	b	410d64 <argp_error@@Base+0x13b4>
  410fb8:	mov	w1, w19
  410fbc:	str	w19, [x20, #48]
  410fc0:	b	410d24 <argp_error@@Base+0x1374>
  410fc4:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  410fc8:	mov	w3, w26
  410fcc:	ldr	x2, [x24]
  410fd0:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  410fd4:	ldr	x0, [x0, #1248]
  410fd8:	add	x1, x1, #0xb0
  410fdc:	bl	401ed0 <fprintf@plt>
  410fe0:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  410fe4:	ldr	w19, [x4, #1480]
  410fe8:	b	410f58 <argp_error@@Base+0x15a8>
  410fec:	cbz	w1, 411010 <argp_error@@Base+0x1660>
  410ff0:	add	w19, w19, #0x1
  410ff4:	str	w19, [x4, #1480]
  410ff8:	ldr	w2, [x20, #8]
  410ffc:	str	x23, [x20, #16]
  411000:	str	xzr, [x20, #32]
  411004:	ldp	x21, x22, [sp, #32]
  411008:	ldp	x25, x26, [sp, #64]
  41100c:	b	410d64 <argp_error@@Base+0x13b4>
  411010:	mov	x23, #0x0                   	// #0
  411014:	b	410ff8 <argp_error@@Base+0x1648>
  411018:	ldr	w2, [x20, #8]
  41101c:	mov	w0, #0xffffffff            	// #-1
  411020:	ldr	x23, [x20, #16]
  411024:	ldp	x21, x22, [sp, #32]
  411028:	b	410d64 <argp_error@@Base+0x13b4>
  41102c:	cbnz	w3, 41106c <argp_error@@Base+0x16bc>
  411030:	str	w26, [x20, #8]
  411034:	mov	w0, #0x3a                  	// #58
  411038:	mov	w1, #0x3f                  	// #63
  41103c:	mov	w2, w26
  411040:	ldrb	w3, [x22]
  411044:	ldr	x23, [x20, #16]
  411048:	cmp	w3, w0
  41104c:	csel	w0, w0, w1, eq  // eq = none
  411050:	b	410f24 <argp_error@@Base+0x1574>
  411054:	ldr	w2, [x20, #8]
  411058:	mov	w0, #0xffffffff            	// #-1
  41105c:	ldr	x23, [x20, #16]
  411060:	b	410d64 <argp_error@@Base+0x13b4>
  411064:	ldp	x25, x26, [sp, #64]
  411068:	b	410c50 <argp_error@@Base+0x12a0>
  41106c:	adrp	x0, 42a000 <argp_error@@Base+0x1a650>
  411070:	mov	w3, w26
  411074:	ldr	x2, [x24]
  411078:	adrp	x1, 415000 <argp_error@@Base+0x5650>
  41107c:	ldr	x0, [x0, #1248]
  411080:	add	x1, x1, #0xd0
  411084:	bl	401ed0 <fprintf@plt>
  411088:	adrp	x4, 42a000 <argp_error@@Base+0x1a650>
  41108c:	ldr	w19, [x4, #1480]
  411090:	b	411030 <argp_error@@Base+0x1680>
  411094:	nop
  411098:	stp	x29, x30, [sp, #-64]!
  41109c:	mov	x29, sp
  4110a0:	stp	x19, x20, [sp, #16]
  4110a4:	mov	x20, x3
  4110a8:	stp	x21, x22, [sp, #32]
  4110ac:	mov	x22, x1
  4110b0:	mov	x21, x2
  4110b4:	str	x23, [sp, #48]
  4110b8:	mov	x23, x0
  4110bc:	mov	x0, #0x48                  	// #72
  4110c0:	bl	401be0 <malloc@plt>
  4110c4:	mov	x19, x0
  4110c8:	cbz	x0, 4110f0 <argp_error@@Base+0x1740>
  4110cc:	stp	x23, x22, [x19]
  4110d0:	mov	x0, #0xc8                  	// #200
  4110d4:	stp	x21, x20, [x19, #16]
  4110d8:	stp	xzr, xzr, [x19, #32]
  4110dc:	bl	401be0 <malloc@plt>
  4110e0:	str	x0, [x19, #48]
  4110e4:	cbz	x0, 411108 <argp_error@@Base+0x1758>
  4110e8:	add	x1, x0, #0xc8
  4110ec:	stp	x0, x1, [x19, #56]
  4110f0:	mov	x0, x19
  4110f4:	ldp	x19, x20, [sp, #16]
  4110f8:	ldp	x21, x22, [sp, #32]
  4110fc:	ldr	x23, [sp, #48]
  411100:	ldp	x29, x30, [sp], #64
  411104:	ret
  411108:	mov	x0, x19
  41110c:	mov	x19, #0x0                   	// #0
  411110:	bl	401d30 <free@plt>
  411114:	b	4110f0 <argp_error@@Base+0x1740>
  411118:	stp	x29, x30, [sp, #-96]!
  41111c:	mov	x29, sp
  411120:	stp	x21, x22, [sp, #32]
  411124:	mov	x21, x0
  411128:	stp	x19, x20, [sp, #16]
  41112c:	ldr	x19, [x0, #32]
  411130:	ldr	x0, [x0, #48]
  411134:	ldr	x2, [x21, #56]
  411138:	add	x19, x0, x19
  41113c:	cmp	x2, x19
  411140:	b.ls	4113d0 <argp_error@@Base+0x1a20>  // b.plast
  411144:	ldr	x22, [x21, #40]
  411148:	stp	x27, x28, [sp, #80]
  41114c:	mov	x27, x2
  411150:	stp	x23, x24, [sp, #48]
  411154:	mov	w23, #0x20                  	// #32
  411158:	stp	x25, x26, [sp, #64]
  41115c:	nop
  411160:	cbnz	x22, 4111c0 <argp_error@@Base+0x1810>
  411164:	ldr	x20, [x21, #8]
  411168:	cbz	x20, 4113e8 <argp_error@@Base+0x1a38>
  41116c:	ldr	x1, [x21, #64]
  411170:	add	x0, x2, x20
  411174:	cmp	x1, x0
  411178:	b.ls	41156c <argp_error@@Base+0x1bbc>  // b.plast
  41117c:	add	x3, x19, x20
  411180:	sub	x2, x2, x19
  411184:	mov	x1, x19
  411188:	mov	x0, x3
  41118c:	bl	401ab0 <memmove@plt>
  411190:	mov	x3, x0
  411194:	ldr	x1, [x21, #56]
  411198:	mov	x0, x19
  41119c:	mov	x2, x20
  4111a0:	mov	x19, x3
  4111a4:	add	x1, x1, x20
  4111a8:	str	x1, [x21, #56]
  4111ac:	mov	w1, #0x20                  	// #32
  4111b0:	bl	401c20 <memset@plt>
  4111b4:	ldr	x27, [x21, #56]
  4111b8:	mov	x22, x20
  4111bc:	str	x20, [x21, #40]
  4111c0:	sub	x25, x27, x19
  4111c4:	mov	x0, x19
  4111c8:	mov	x2, x25
  4111cc:	mov	w1, #0xa                   	// #10
  4111d0:	bl	401dd0 <memchr@plt>
  4111d4:	mov	x26, x0
  4111d8:	tbz	x22, #63, 4111e4 <argp_error@@Base+0x1834>
  4111dc:	mov	x22, #0x0                   	// #0
  4111e0:	str	xzr, [x21, #40]
  4111e4:	ldr	x28, [x21, #16]
  4111e8:	cbz	x26, 41125c <argp_error@@Base+0x18ac>
  4111ec:	sub	x0, x26, x19
  4111f0:	add	x0, x0, x22
  4111f4:	cmp	x0, x28
  4111f8:	b.lt	4113a8 <argp_error@@Base+0x19f8>  // b.tstop
  4111fc:	ldr	x24, [x21, #24]
  411200:	sub	x20, x28, #0x1
  411204:	tbz	x24, #63, 411278 <argp_error@@Base+0x18c8>
  411208:	cmp	x27, x26
  41120c:	b.ls	4115b4 <argp_error@@Base+0x1c04>  // b.plast
  411210:	sub	x0, x20, x22
  411214:	sub	x2, x27, x26
  411218:	add	x0, x19, x0
  41121c:	mov	x1, x26
  411220:	bl	401ab0 <memmove@plt>
  411224:	mov	x22, #0x0                   	// #0
  411228:	ldr	x0, [x21, #40]
  41122c:	str	xzr, [x21, #40]
  411230:	ldr	x2, [x21, #56]
  411234:	sub	x20, x20, x0
  411238:	add	x20, x19, x20
  41123c:	add	x19, x19, x28
  411240:	sub	x20, x20, x26
  411244:	sub	x2, x2, x20
  411248:	str	x2, [x21, #56]
  41124c:	cmp	x19, x2
  411250:	b.cs	4113c0 <argp_error@@Base+0x1a10>  // b.hs, b.nlast
  411254:	mov	x27, x2
  411258:	b	411160 <argp_error@@Base+0x17b0>
  41125c:	add	x0, x22, x25
  411260:	cmp	x0, x28
  411264:	b.cc	411644 <argp_error@@Base+0x1c94>  // b.lo, b.ul, b.last
  411268:	ldr	x24, [x21, #24]
  41126c:	sub	x20, x28, #0x1
  411270:	tbnz	x24, #63, 4115b8 <argp_error@@Base+0x1c08>
  411274:	mov	x26, x27
  411278:	add	x3, x20, #0x1
  41127c:	sub	x22, x3, x22
  411280:	adds	x22, x19, x22
  411284:	b.cs	4114b0 <argp_error@@Base+0x1b00>  // b.hs, b.nlast
  411288:	bl	401d00 <__ctype_b_loc@plt>
  41128c:	mov	x20, x22
  411290:	ldr	x1, [x0]
  411294:	b	4112a4 <argp_error@@Base+0x18f4>
  411298:	cmp	x19, x3
  41129c:	b.hi	4114b8 <argp_error@@Base+0x1b08>  // b.pmore
  4112a0:	mov	x20, x3
  4112a4:	ldrb	w0, [x20]
  4112a8:	sub	x3, x20, #0x1
  4112ac:	ldrh	w0, [x1, x0, lsl #1]
  4112b0:	tbz	w0, #0, 411298 <argp_error@@Base+0x18e8>
  4112b4:	add	x3, x20, #0x1
  4112b8:	cmp	x19, x3
  4112bc:	b.cs	4114c8 <argp_error@@Base+0x1b18>  // b.hs, b.nlast
  4112c0:	cmp	x19, x20
  4112c4:	b.ls	4112d8 <argp_error@@Base+0x1928>  // b.plast
  4112c8:	b	4115a8 <argp_error@@Base+0x1bf8>
  4112cc:	ldrb	w0, [x20]
  4112d0:	ldrh	w0, [x1, x0, lsl #1]
  4112d4:	tbz	w0, #0, 4112e8 <argp_error@@Base+0x1938>
  4112d8:	mov	x22, x20
  4112dc:	sub	x20, x20, #0x1
  4112e0:	cmp	x19, x20
  4112e4:	b.ls	4112cc <argp_error@@Base+0x191c>  // b.plast
  4112e8:	mov	x20, x3
  4112ec:	nop
  4112f0:	add	x0, x25, #0x1
  4112f4:	add	x0, x19, x0
  4112f8:	cmp	x20, x0
  4112fc:	b.eq	411404 <argp_error@@Base+0x1a54>  // b.none
  411300:	add	x1, x22, #0x1
  411304:	sub	x0, x20, x1
  411308:	cmp	x0, x24
  41130c:	b.ge	41141c <argp_error@@Base+0x1a6c>  // b.tcont
  411310:	cmp	x27, x20
  411314:	b.ls	411414 <argp_error@@Base+0x1a64>  // b.plast
  411318:	ldr	x1, [x21, #64]
  41131c:	add	x24, x24, #0x1
  411320:	sub	x1, x1, x27
  411324:	cmp	x1, x24
  411328:	b.gt	4115f0 <argp_error@@Base+0x1c40>
  41132c:	ldr	x0, [x21, #48]
  411330:	ldr	x3, [x21]
  411334:	cmp	x0, x22
  411338:	b.cs	41134c <argp_error@@Base+0x199c>  // b.hs, b.nlast
  41133c:	sub	x2, x22, x0
  411340:	mov	x1, #0x1                   	// #1
  411344:	bl	401ae0 <fwrite_unlocked@plt>
  411348:	ldr	x3, [x21]
  41134c:	ldp	x0, x1, [x3, #40]
  411350:	cmp	x0, x1
  411354:	b.cs	411634 <argp_error@@Base+0x1c84>  // b.hs, b.nlast
  411358:	add	x1, x0, #0x1
  41135c:	str	x1, [x3, #40]
  411360:	mov	w1, #0xa                   	// #10
  411364:	strb	w1, [x0]
  411368:	ldr	x28, [x21, #48]
  41136c:	sub	x19, x19, x28
  411370:	sub	x0, x20, x28
  411374:	add	x25, x25, x19
  411378:	mov	x27, x0
  41137c:	mov	x19, x28
  411380:	b	411430 <argp_error@@Base+0x1a80>
  411384:	bl	401d00 <__ctype_b_loc@plt>
  411388:	ldrb	w3, [x22]
  41138c:	ldr	x1, [x0]
  411390:	ldrh	w0, [x1, x3, lsl #1]
  411394:	tbnz	w0, #0, 4114dc <argp_error@@Base+0x1b2c>
  411398:	add	x22, x22, #0x1
  41139c:	cmp	x22, x26
  4113a0:	b.ne	411384 <argp_error@@Base+0x19d4>  // b.any
  4113a4:	nop
  4113a8:	ldr	x2, [x21, #56]
  4113ac:	str	xzr, [x21, #40]
  4113b0:	add	x19, x26, #0x1
  4113b4:	mov	x22, #0x0                   	// #0
  4113b8:	cmp	x19, x2
  4113bc:	b.cc	411254 <argp_error@@Base+0x18a4>  // b.lo, b.ul, b.last
  4113c0:	ldp	x23, x24, [sp, #48]
  4113c4:	ldp	x25, x26, [sp, #64]
  4113c8:	ldp	x27, x28, [sp, #80]
  4113cc:	ldr	x0, [x21, #48]
  4113d0:	sub	x2, x2, x0
  4113d4:	ldp	x19, x20, [sp, #16]
  4113d8:	str	x2, [x21, #32]
  4113dc:	ldp	x21, x22, [sp, #32]
  4113e0:	ldp	x29, x30, [sp], #96
  4113e4:	ret
  4113e8:	sub	x25, x2, x19
  4113ec:	mov	x0, x19
  4113f0:	mov	x2, x25
  4113f4:	mov	w1, #0xa                   	// #10
  4113f8:	bl	401dd0 <memchr@plt>
  4113fc:	mov	x26, x0
  411400:	b	4111e4 <argp_error@@Base+0x1834>
  411404:	ldr	x0, [x21, #64]
  411408:	sub	x0, x0, x22
  41140c:	cmp	x0, x24
  411410:	b.le	411310 <argp_error@@Base+0x1960>
  411414:	add	x1, x22, #0x1
  411418:	sub	x0, x20, x1
  41141c:	sub	x27, x20, x19
  411420:	mov	x28, x19
  411424:	mov	x19, x1
  411428:	mov	w1, #0xa                   	// #10
  41142c:	strb	w1, [x22]
  411430:	ldr	x22, [x21, #24]
  411434:	cmp	x22, x0
  411438:	b.le	41145c <argp_error@@Base+0x1aac>
  41143c:	add	x0, x25, #0x1
  411440:	add	x0, x28, x0
  411444:	cmp	x20, x0
  411448:	b.ne	4114f0 <argp_error@@Base+0x1b40>  // b.any
  41144c:	ldr	x0, [x21, #64]
  411450:	sub	x0, x0, x20
  411454:	cmp	x22, x0
  411458:	b.gt	4114f0 <argp_error@@Base+0x1b40>
  41145c:	cmp	x22, #0x0
  411460:	b.le	41148c <argp_error@@Base+0x1adc>
  411464:	add	x0, x19, #0x1
  411468:	mvn	x2, x19
  41146c:	nop
  411470:	sturb	w23, [x0, #-1]
  411474:	mov	x19, x0
  411478:	add	x0, x0, #0x1
  41147c:	ldr	x22, [x21, #24]
  411480:	add	x1, x2, x0
  411484:	cmp	x22, x1
  411488:	b.gt	411470 <argp_error@@Base+0x1ac0>
  41148c:	cmp	x19, x20
  411490:	b.cc	411550 <argp_error@@Base+0x1ba0>  // b.lo, b.ul, b.last
  411494:	sub	x2, x25, x27
  411498:	cmp	x22, #0x0
  41149c:	add	x2, x19, x2
  4114a0:	csinv	x22, x22, xzr, ne  // ne = any
  4114a4:	str	x22, [x21, #40]
  4114a8:	str	x2, [x21, #56]
  4114ac:	b	41124c <argp_error@@Base+0x189c>
  4114b0:	add	x20, x22, #0x1
  4114b4:	nop
  4114b8:	cmp	x19, x20
  4114bc:	b.cs	4114c8 <argp_error@@Base+0x1b18>  // b.hs, b.nlast
  4114c0:	mov	x22, x20
  4114c4:	b	4112f0 <argp_error@@Base+0x1940>
  4114c8:	cmp	x22, x26
  4114cc:	b.cc	411398 <argp_error@@Base+0x19e8>  // b.lo, b.ul, b.last
  4114d0:	b.eq	4113a8 <argp_error@@Base+0x19f8>  // b.none
  4114d4:	bl	401d00 <__ctype_b_loc@plt>
  4114d8:	ldr	x1, [x0]
  4114dc:	mov	x20, x22
  4114e0:	ldrb	w0, [x20, #1]!
  4114e4:	ldrh	w0, [x1, x0, lsl #1]
  4114e8:	tbnz	w0, #0, 4114e0 <argp_error@@Base+0x1b30>
  4114ec:	b	4112f0 <argp_error@@Base+0x1940>
  4114f0:	cmp	x22, #0x0
  4114f4:	mov	x26, #0x0                   	// #0
  4114f8:	b.gt	411518 <argp_error@@Base+0x1b68>
  4114fc:	b	41148c <argp_error@@Base+0x1adc>
  411500:	str	x3, [x0, #40]
  411504:	add	x26, x26, #0x1
  411508:	strb	w23, [x1]
  41150c:	ldr	x22, [x21, #24]
  411510:	cmp	x22, x26
  411514:	b.le	41148c <argp_error@@Base+0x1adc>
  411518:	ldr	x0, [x21]
  41151c:	ldp	x1, x2, [x0, #40]
  411520:	add	x3, x1, #0x1
  411524:	cmp	x1, x2
  411528:	b.cc	411500 <argp_error@@Base+0x1b50>  // b.lo, b.ul, b.last
  41152c:	mov	w1, #0x20                  	// #32
  411530:	bl	401ce0 <__overflow@plt>
  411534:	ldr	x22, [x21, #24]
  411538:	add	x26, x26, #0x1
  41153c:	cmp	x26, x22
  411540:	b.lt	411518 <argp_error@@Base+0x1b68>  // b.tstop
  411544:	cmp	x19, x20
  411548:	b.cs	411494 <argp_error@@Base+0x1ae4>  // b.hs, b.nlast
  41154c:	nop
  411550:	add	x2, x28, x25
  411554:	mov	x1, x20
  411558:	sub	x2, x2, x20
  41155c:	mov	x0, x19
  411560:	bl	401ab0 <memmove@plt>
  411564:	ldr	x22, [x21, #24]
  411568:	b	411494 <argp_error@@Base+0x1ae4>
  41156c:	mov	x22, #0x0                   	// #0
  411570:	b	411588 <argp_error@@Base+0x1bd8>
  411574:	str	x3, [x0, #40]
  411578:	strb	w23, [x1]
  41157c:	add	x22, x22, #0x1
  411580:	cmp	x20, x22
  411584:	b.eq	4111b4 <argp_error@@Base+0x1804>  // b.none
  411588:	ldr	x0, [x21]
  41158c:	ldp	x1, x2, [x0, #40]
  411590:	add	x3, x1, #0x1
  411594:	cmp	x1, x2
  411598:	b.cc	411574 <argp_error@@Base+0x1bc4>  // b.lo, b.ul, b.last
  41159c:	mov	w1, #0x20                  	// #32
  4115a0:	bl	401ce0 <__overflow@plt>
  4115a4:	b	41157c <argp_error@@Base+0x1bcc>
  4115a8:	mov	x22, x3
  4115ac:	mov	x20, x3
  4115b0:	b	4112f0 <argp_error@@Base+0x1940>
  4115b4:	add	x0, x25, x22
  4115b8:	sub	x2, x20, x0
  4115bc:	add	x2, x27, x2
  4115c0:	ldp	x23, x24, [sp, #48]
  4115c4:	ldp	x25, x26, [sp, #64]
  4115c8:	ldp	x27, x28, [sp, #80]
  4115cc:	str	x0, [x21, #40]
  4115d0:	ldr	x0, [x21, #48]
  4115d4:	str	x2, [x21, #56]
  4115d8:	ldp	x19, x20, [sp, #16]
  4115dc:	sub	x2, x2, x0
  4115e0:	str	x2, [x21, #32]
  4115e4:	ldp	x21, x22, [sp, #32]
  4115e8:	ldp	x29, x30, [sp], #96
  4115ec:	ret
  4115f0:	sub	x27, x27, x20
  4115f4:	mov	x1, x20
  4115f8:	mov	x2, x27
  4115fc:	add	x0, x22, x24
  411600:	bl	401ab0 <memmove@plt>
  411604:	mov	x28, x19
  411608:	ldr	x0, [x21, #24]
  41160c:	mov	x1, x22
  411610:	mov	w2, #0xa                   	// #10
  411614:	add	x20, x0, #0x1
  411618:	add	x20, x22, x20
  41161c:	strb	w2, [x1], #1
  411620:	add	x2, x20, x27
  411624:	sub	x27, x20, x19
  411628:	sub	x25, x2, x19
  41162c:	mov	x19, x1
  411630:	b	411430 <argp_error@@Base+0x1a80>
  411634:	mov	x0, x3
  411638:	mov	w1, #0xa                   	// #10
  41163c:	bl	401ce0 <__overflow@plt>
  411640:	b	411368 <argp_error@@Base+0x19b8>
  411644:	ldp	x23, x24, [sp, #48]
  411648:	ldr	x2, [x21, #56]
  41164c:	ldp	x25, x26, [sp, #64]
  411650:	ldp	x27, x28, [sp, #80]
  411654:	str	x0, [x21, #40]
  411658:	ldr	x0, [x21, #48]
  41165c:	ldp	x19, x20, [sp, #16]
  411660:	sub	x2, x2, x0
  411664:	str	x2, [x21, #32]
  411668:	ldp	x21, x22, [sp, #32]
  41166c:	ldp	x29, x30, [sp], #96
  411670:	ret
  411674:	nop
  411678:	stp	x29, x30, [sp, #-32]!
  41167c:	mov	x29, sp
  411680:	str	x19, [sp, #16]
  411684:	mov	x19, x0
  411688:	bl	411118 <argp_error@@Base+0x1768>
  41168c:	ldp	x0, x2, [x19, #48]
  411690:	cmp	x2, x0
  411694:	b.ls	4116ac <argp_error@@Base+0x1cfc>  // b.plast
  411698:	ldr	x3, [x19]
  41169c:	sub	x2, x2, x0
  4116a0:	mov	x1, #0x1                   	// #1
  4116a4:	bl	401ae0 <fwrite_unlocked@plt>
  4116a8:	ldr	x0, [x19, #48]
  4116ac:	bl	401d30 <free@plt>
  4116b0:	mov	x0, x19
  4116b4:	ldr	x19, [sp, #16]
  4116b8:	ldp	x29, x30, [sp], #32
  4116bc:	b	401d30 <free@plt>
  4116c0:	stp	x29, x30, [sp, #-32]!
  4116c4:	mov	x29, sp
  4116c8:	stp	x19, x20, [sp, #16]
  4116cc:	mov	x20, x1
  4116d0:	ldp	x2, x1, [x0, #56]
  4116d4:	sub	x1, x1, x2
  4116d8:	cmp	x1, x20
  4116dc:	b.cc	4116f0 <argp_error@@Base+0x1d40>  // b.lo, b.ul, b.last
  4116e0:	mov	w0, #0x1                   	// #1
  4116e4:	ldp	x19, x20, [sp, #16]
  4116e8:	ldp	x29, x30, [sp], #32
  4116ec:	ret
  4116f0:	mov	x19, x0
  4116f4:	bl	411118 <argp_error@@Base+0x1768>
  4116f8:	mov	x1, #0x1                   	// #1
  4116fc:	ldp	x0, x2, [x19, #48]
  411700:	ldr	x3, [x19]
  411704:	sub	x2, x2, x0
  411708:	bl	401ae0 <fwrite_unlocked@plt>
  41170c:	mov	x1, x0
  411710:	ldp	x0, x2, [x19, #48]
  411714:	sub	x3, x2, x0
  411718:	cmp	x1, x3
  41171c:	b.ne	411764 <argp_error@@Base+0x1db4>  // b.any
  411720:	ldr	x1, [x19, #64]
  411724:	str	xzr, [x19, #32]
  411728:	str	x0, [x19, #56]
  41172c:	sub	x1, x1, x0
  411730:	cmp	x20, x1
  411734:	b.ls	4116e0 <argp_error@@Base+0x1d30>  // b.plast
  411738:	adds	x20, x20, x1
  41173c:	b.cs	411794 <argp_error@@Base+0x1de4>  // b.hs, b.nlast
  411740:	mov	x1, x20
  411744:	bl	401c70 <realloc@plt>
  411748:	cbz	x0, 411794 <argp_error@@Base+0x1de4>
  41174c:	dup	v0.2d, x0
  411750:	add	x20, x0, x20
  411754:	mov	w0, #0x1                   	// #1
  411758:	str	x20, [x19, #64]
  41175c:	str	q0, [x19, #48]
  411760:	b	4116e4 <argp_error@@Base+0x1d34>
  411764:	ldr	x3, [x19, #32]
  411768:	sub	x2, x2, x1
  41176c:	str	x2, [x19, #56]
  411770:	sub	x2, x2, x0
  411774:	sub	x3, x3, x1
  411778:	str	x3, [x19, #32]
  41177c:	add	x1, x0, x1
  411780:	bl	401ab0 <memmove@plt>
  411784:	mov	w0, #0x0                   	// #0
  411788:	ldp	x19, x20, [sp, #16]
  41178c:	ldp	x29, x30, [sp], #32
  411790:	ret
  411794:	bl	401ea0 <__errno_location@plt>
  411798:	mov	x1, x0
  41179c:	mov	w2, #0xc                   	// #12
  4117a0:	mov	w0, #0x0                   	// #0
  4117a4:	str	w2, [x1]
  4117a8:	b	4116e4 <argp_error@@Base+0x1d34>
  4117ac:	nop
  4117b0:	stp	x29, x30, [sp, #-304]!
  4117b4:	mov	x29, sp
  4117b8:	stp	x23, x24, [sp, #48]
  4117bc:	mov	x24, x0
  4117c0:	add	x23, sp, #0x100
  4117c4:	str	q0, [sp, #128]
  4117c8:	str	q1, [sp, #144]
  4117cc:	str	q2, [sp, #160]
  4117d0:	str	q3, [sp, #176]
  4117d4:	str	q4, [sp, #192]
  4117d8:	str	q5, [sp, #208]
  4117dc:	str	q6, [sp, #224]
  4117e0:	str	q7, [sp, #240]
  4117e4:	stp	x2, x3, [sp, #256]
  4117e8:	stp	x4, x5, [sp, #272]
  4117ec:	stp	x6, x7, [sp, #288]
  4117f0:	stp	x19, x20, [sp, #16]
  4117f4:	mov	x20, x1
  4117f8:	mov	x19, #0x96                  	// #150
  4117fc:	ldp	x3, x1, [x24, #56]
  411800:	stp	x21, x22, [sp, #32]
  411804:	mov	w22, #0xffffffd0            	// #-48
  411808:	mov	w21, #0xffffff80            	// #-128
  41180c:	sub	x0, x1, x3
  411810:	cmp	x19, x0
  411814:	b.hi	411898 <argp_error@@Base+0x1ee8>  // b.pmore
  411818:	add	x0, sp, #0x130
  41181c:	stp	x0, x0, [sp, #96]
  411820:	sub	x19, x1, x3
  411824:	str	x23, [sp, #112]
  411828:	mov	x1, x19
  41182c:	stp	w22, w21, [sp, #120]
  411830:	mov	x2, x20
  411834:	ldp	x4, x5, [sp, #96]
  411838:	stp	x4, x5, [sp, #64]
  41183c:	mov	x0, x3
  411840:	ldp	x4, x5, [sp, #112]
  411844:	add	x3, sp, #0x40
  411848:	stp	x4, x5, [sp, #80]
  41184c:	bl	401e40 <vsnprintf@plt>
  411850:	add	w1, w0, #0x1
  411854:	cmp	x19, w0, sxtw
  411858:	sxtw	x2, w0
  41185c:	b.ls	411884 <argp_error@@Base+0x1ed4>  // b.plast
  411860:	ldr	x1, [x24, #56]
  411864:	mov	x0, x2
  411868:	ldp	x19, x20, [sp, #16]
  41186c:	add	x2, x1, x2
  411870:	str	x2, [x24, #56]
  411874:	ldp	x21, x22, [sp, #32]
  411878:	ldp	x23, x24, [sp, #48]
  41187c:	ldp	x29, x30, [sp], #304
  411880:	ret
  411884:	sxtw	x19, w1
  411888:	ldp	x3, x1, [x24, #56]
  41188c:	sub	x0, x1, x3
  411890:	cmp	x19, x0
  411894:	b.ls	411818 <argp_error@@Base+0x1e68>  // b.plast
  411898:	mov	x0, x24
  41189c:	bl	411118 <argp_error@@Base+0x1768>
  4118a0:	ldp	x0, x2, [x24, #48]
  4118a4:	mov	x1, #0x1                   	// #1
  4118a8:	ldr	x3, [x24]
  4118ac:	sub	x2, x2, x0
  4118b0:	bl	401ae0 <fwrite_unlocked@plt>
  4118b4:	ldp	x3, x2, [x24, #48]
  4118b8:	sub	x1, x2, x3
  4118bc:	cmp	x0, x1
  4118c0:	b.ne	41190c <argp_error@@Base+0x1f5c>  // b.any
  4118c4:	ldr	x1, [x24, #64]
  4118c8:	str	xzr, [x24, #32]
  4118cc:	str	x3, [x24, #56]
  4118d0:	mov	x0, x3
  4118d4:	sub	x4, x1, x3
  4118d8:	cmp	x19, x4
  4118dc:	b.ls	411818 <argp_error@@Base+0x1e68>  // b.plast
  4118e0:	adds	x19, x19, x4
  4118e4:	b.cs	411948 <argp_error@@Base+0x1f98>  // b.hs, b.nlast
  4118e8:	mov	x1, x19
  4118ec:	bl	401c70 <realloc@plt>
  4118f0:	cbz	x0, 411948 <argp_error@@Base+0x1f98>
  4118f4:	dup	v0.2d, x0
  4118f8:	add	x1, x0, x19
  4118fc:	str	x1, [x24, #64]
  411900:	str	q0, [x24, #48]
  411904:	ldr	x3, [x24, #56]
  411908:	b	411818 <argp_error@@Base+0x1e68>
  41190c:	ldr	x1, [x24, #32]
  411910:	sub	x2, x2, x0
  411914:	str	x2, [x24, #56]
  411918:	sub	x2, x2, x3
  41191c:	sub	x1, x1, x0
  411920:	str	x1, [x24, #32]
  411924:	add	x1, x3, x0
  411928:	mov	x0, x3
  41192c:	bl	401ab0 <memmove@plt>
  411930:	mov	x0, #0xffffffffffffffff    	// #-1
  411934:	ldp	x19, x20, [sp, #16]
  411938:	ldp	x21, x22, [sp, #32]
  41193c:	ldp	x23, x24, [sp, #48]
  411940:	ldp	x29, x30, [sp], #304
  411944:	ret
  411948:	bl	401ea0 <__errno_location@plt>
  41194c:	mov	w1, #0xc                   	// #12
  411950:	str	w1, [x0]
  411954:	mov	x0, #0xffffffffffffffff    	// #-1
  411958:	b	411934 <argp_error@@Base+0x1f84>
  41195c:	nop
  411960:	stp	x29, x30, [sp, #-64]!
  411964:	mov	x29, sp
  411968:	stp	x19, x20, [sp, #16]
  41196c:	adrp	x20, 428000 <argp_error@@Base+0x18650>
  411970:	add	x20, x20, #0xdf0
  411974:	stp	x21, x22, [sp, #32]
  411978:	adrp	x21, 428000 <argp_error@@Base+0x18650>
  41197c:	add	x21, x21, #0xde8
  411980:	sub	x20, x20, x21
  411984:	mov	w22, w0
  411988:	stp	x23, x24, [sp, #48]
  41198c:	mov	x23, x1
  411990:	mov	x24, x2
  411994:	bl	401a60 <memcpy@plt-0x40>
  411998:	cmp	xzr, x20, asr #3
  41199c:	b.eq	4119c8 <argp_error@@Base+0x2018>  // b.none
  4119a0:	asr	x20, x20, #3
  4119a4:	mov	x19, #0x0                   	// #0
  4119a8:	ldr	x3, [x21, x19, lsl #3]
  4119ac:	mov	x2, x24
  4119b0:	add	x19, x19, #0x1
  4119b4:	mov	x1, x23
  4119b8:	mov	w0, w22
  4119bc:	blr	x3
  4119c0:	cmp	x20, x19
  4119c4:	b.ne	4119a8 <argp_error@@Base+0x1ff8>  // b.any
  4119c8:	ldp	x19, x20, [sp, #16]
  4119cc:	ldp	x21, x22, [sp, #32]
  4119d0:	ldp	x23, x24, [sp, #48]
  4119d4:	ldp	x29, x30, [sp], #64
  4119d8:	ret
  4119dc:	nop
  4119e0:	ret

Disassembly of section .fini:

00000000004119e4 <.fini>:
  4119e4:	stp	x29, x30, [sp, #-16]!
  4119e8:	mov	x29, sp
  4119ec:	ldp	x29, x30, [sp], #16
  4119f0:	ret
