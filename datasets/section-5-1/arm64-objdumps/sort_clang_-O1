
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402808 <.init>:
  402808:	stp	x29, x30, [sp, #-16]!
  40280c:	mov	x29, sp
  402810:	bl	403020 <ferror@plt+0x60>
  402814:	ldp	x29, x30, [sp], #16
  402818:	ret

Disassembly of section .plt:

0000000000402820 <mbrtowc@plt-0x20>:
  402820:	stp	x16, x30, [sp, #-16]!
  402824:	adrp	x16, 425000 <_obstack_memory_used@@Base+0x139a4>
  402828:	ldr	x17, [x16, #4088]
  40282c:	add	x16, x16, #0xff8
  402830:	br	x17
  402834:	nop
  402838:	nop
  40283c:	nop

0000000000402840 <mbrtowc@plt>:
  402840:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16]
  402848:	add	x16, x16, #0x0
  40284c:	br	x17

0000000000402850 <memcpy@plt>:
  402850:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #8]
  402858:	add	x16, x16, #0x8
  40285c:	br	x17

0000000000402860 <memmove@plt>:
  402860:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #16]
  402868:	add	x16, x16, #0x10
  40286c:	br	x17

0000000000402870 <pthread_sigmask@plt>:
  402870:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #24]
  402878:	add	x16, x16, #0x18
  40287c:	br	x17

0000000000402880 <_exit@plt>:
  402880:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #32]
  402888:	add	x16, x16, #0x20
  40288c:	br	x17

0000000000402890 <fwrite_unlocked@plt>:
  402890:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #40]
  402898:	add	x16, x16, #0x28
  40289c:	br	x17

00000000004028a0 <strtoul@plt>:
  4028a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #48]
  4028a8:	add	x16, x16, #0x30
  4028ac:	br	x17

00000000004028b0 <strlen@plt>:
  4028b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #56]
  4028b8:	add	x16, x16, #0x38
  4028bc:	br	x17

00000000004028c0 <exit@plt>:
  4028c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #64]
  4028c8:	add	x16, x16, #0x40
  4028cc:	br	x17

00000000004028d0 <raise@plt>:
  4028d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #72]
  4028d8:	add	x16, x16, #0x48
  4028dc:	br	x17

00000000004028e0 <error@plt>:
  4028e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #80]
  4028e8:	add	x16, x16, #0x50
  4028ec:	br	x17

00000000004028f0 <sysinfo@plt>:
  4028f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #88]
  4028f8:	add	x16, x16, #0x58
  4028fc:	br	x17

0000000000402900 <ferror_unlocked@plt>:
  402900:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #96]
  402908:	add	x16, x16, #0x60
  40290c:	br	x17

0000000000402910 <getuid@plt>:
  402910:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #104]
  402918:	add	x16, x16, #0x68
  40291c:	br	x17

0000000000402920 <pipe@plt>:
  402920:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #112]
  402928:	add	x16, x16, #0x70
  40292c:	br	x17

0000000000402930 <__cxa_atexit@plt>:
  402930:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #120]
  402938:	add	x16, x16, #0x78
  40293c:	br	x17

0000000000402940 <iswcntrl@plt>:
  402940:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #128]
  402948:	add	x16, x16, #0x80
  40294c:	br	x17

0000000000402950 <qsort@plt>:
  402950:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #136]
  402958:	add	x16, x16, #0x88
  40295c:	br	x17

0000000000402960 <setvbuf@plt>:
  402960:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #144]
  402968:	add	x16, x16, #0x90
  40296c:	br	x17

0000000000402970 <euidaccess@plt>:
  402970:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #152]
  402978:	add	x16, x16, #0x98
  40297c:	br	x17

0000000000402980 <fork@plt>:
  402980:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #160]
  402988:	add	x16, x16, #0xa0
  40298c:	br	x17

0000000000402990 <lseek@plt>:
  402990:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #168]
  402998:	add	x16, x16, #0xa8
  40299c:	br	x17

00000000004029a0 <__fpending@plt>:
  4029a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #176]
  4029a8:	add	x16, x16, #0xb0
  4029ac:	br	x17

00000000004029b0 <localeconv@plt>:
  4029b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #184]
  4029b8:	add	x16, x16, #0xb8
  4029bc:	br	x17

00000000004029c0 <stpcpy@plt>:
  4029c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #192]
  4029c8:	add	x16, x16, #0xc0
  4029cc:	br	x17

00000000004029d0 <fileno@plt>:
  4029d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #200]
  4029d8:	add	x16, x16, #0xc8
  4029dc:	br	x17

00000000004029e0 <putc_unlocked@plt>:
  4029e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #208]
  4029e8:	add	x16, x16, #0xd0
  4029ec:	br	x17

00000000004029f0 <signal@plt>:
  4029f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #216]
  4029f8:	add	x16, x16, #0xd8
  4029fc:	br	x17

0000000000402a00 <fclose@plt>:
  402a00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #224]
  402a08:	add	x16, x16, #0xe0
  402a0c:	br	x17

0000000000402a10 <getpid@plt>:
  402a10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #232]
  402a18:	add	x16, x16, #0xe8
  402a1c:	br	x17

0000000000402a20 <nl_langinfo@plt>:
  402a20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #240]
  402a28:	add	x16, x16, #0xf0
  402a2c:	br	x17

0000000000402a30 <fopen@plt>:
  402a30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #248]
  402a38:	add	x16, x16, #0xf8
  402a3c:	br	x17

0000000000402a40 <malloc@plt>:
  402a40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #256]
  402a48:	add	x16, x16, #0x100
  402a4c:	br	x17

0000000000402a50 <toupper@plt>:
  402a50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #264]
  402a58:	add	x16, x16, #0x108
  402a5c:	br	x17

0000000000402a60 <wcwidth@plt>:
  402a60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #272]
  402a68:	add	x16, x16, #0x110
  402a6c:	br	x17

0000000000402a70 <open@plt>:
  402a70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #280]
  402a78:	add	x16, x16, #0x118
  402a7c:	br	x17

0000000000402a80 <getppid@plt>:
  402a80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #288]
  402a88:	add	x16, x16, #0x120
  402a8c:	br	x17

0000000000402a90 <sigemptyset@plt>:
  402a90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #296]
  402a98:	add	x16, x16, #0x128
  402a9c:	br	x17

0000000000402aa0 <pthread_cond_signal@plt>:
  402aa0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #304]
  402aa8:	add	x16, x16, #0x130
  402aac:	br	x17

0000000000402ab0 <strncmp@plt>:
  402ab0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #312]
  402ab8:	add	x16, x16, #0x138
  402abc:	br	x17

0000000000402ac0 <bindtextdomain@plt>:
  402ac0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #320]
  402ac8:	add	x16, x16, #0x140
  402acc:	br	x17

0000000000402ad0 <__libc_start_main@plt>:
  402ad0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #328]
  402ad8:	add	x16, x16, #0x148
  402adc:	br	x17

0000000000402ae0 <fgetc@plt>:
  402ae0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #336]
  402ae8:	add	x16, x16, #0x150
  402aec:	br	x17

0000000000402af0 <__printf_chk@plt>:
  402af0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #344]
  402af8:	add	x16, x16, #0x158
  402afc:	br	x17

0000000000402b00 <memset@plt>:
  402b00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #352]
  402b08:	add	x16, x16, #0x160
  402b0c:	br	x17

0000000000402b10 <fdopen@plt>:
  402b10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #360]
  402b18:	add	x16, x16, #0x168
  402b1c:	br	x17

0000000000402b20 <gettimeofday@plt>:
  402b20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #368]
  402b28:	add	x16, x16, #0x170
  402b2c:	br	x17

0000000000402b30 <putchar_unlocked@plt>:
  402b30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #376]
  402b38:	add	x16, x16, #0x178
  402b3c:	br	x17

0000000000402b40 <calloc@plt>:
  402b40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #384]
  402b48:	add	x16, x16, #0x180
  402b4c:	br	x17

0000000000402b50 <bcmp@plt>:
  402b50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #392]
  402b58:	add	x16, x16, #0x188
  402b5c:	br	x17

0000000000402b60 <realloc@plt>:
  402b60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #400]
  402b68:	add	x16, x16, #0x190
  402b6c:	br	x17

0000000000402b70 <pthread_mutex_init@plt>:
  402b70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #408]
  402b78:	add	x16, x16, #0x198
  402b7c:	br	x17

0000000000402b80 <close@plt>:
  402b80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #416]
  402b88:	add	x16, x16, #0x1a0
  402b8c:	br	x17

0000000000402b90 <sigaction@plt>:
  402b90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #424]
  402b98:	add	x16, x16, #0x1a8
  402b9c:	br	x17

0000000000402ba0 <strrchr@plt>:
  402ba0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #432]
  402ba8:	add	x16, x16, #0x1b0
  402bac:	br	x17

0000000000402bb0 <pthread_create@plt>:
  402bb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #440]
  402bb8:	add	x16, x16, #0x1b8
  402bbc:	br	x17

0000000000402bc0 <__gmon_start__@plt>:
  402bc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #448]
  402bc8:	add	x16, x16, #0x1c0
  402bcc:	br	x17

0000000000402bd0 <write@plt>:
  402bd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #456]
  402bd8:	add	x16, x16, #0x1c8
  402bdc:	br	x17

0000000000402be0 <strtoumax@plt>:
  402be0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #464]
  402be8:	add	x16, x16, #0x1d0
  402bec:	br	x17

0000000000402bf0 <pthread_join@plt>:
  402bf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #472]
  402bf8:	add	x16, x16, #0x1d8
  402bfc:	br	x17

0000000000402c00 <abort@plt>:
  402c00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #480]
  402c08:	add	x16, x16, #0x1e0
  402c0c:	br	x17

0000000000402c10 <mkostemp@plt>:
  402c10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #488]
  402c18:	add	x16, x16, #0x1e8
  402c1c:	br	x17

0000000000402c20 <sched_getaffinity@plt>:
  402c20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #496]
  402c28:	add	x16, x16, #0x1f0
  402c2c:	br	x17

0000000000402c30 <posix_fadvise@plt>:
  402c30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #504]
  402c38:	add	x16, x16, #0x1f8
  402c3c:	br	x17

0000000000402c40 <mbsinit@plt>:
  402c40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #512]
  402c48:	add	x16, x16, #0x200
  402c4c:	br	x17

0000000000402c50 <pipe2@plt>:
  402c50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #520]
  402c58:	add	x16, x16, #0x208
  402c5c:	br	x17

0000000000402c60 <fread_unlocked@plt>:
  402c60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #528]
  402c68:	add	x16, x16, #0x210
  402c6c:	br	x17

0000000000402c70 <memcmp@plt>:
  402c70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #536]
  402c78:	add	x16, x16, #0x218
  402c7c:	br	x17

0000000000402c80 <textdomain@plt>:
  402c80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #544]
  402c88:	add	x16, x16, #0x220
  402c8c:	br	x17

0000000000402c90 <getopt_long@plt>:
  402c90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #552]
  402c98:	add	x16, x16, #0x228
  402c9c:	br	x17

0000000000402ca0 <__fprintf_chk@plt>:
  402ca0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #560]
  402ca8:	add	x16, x16, #0x230
  402cac:	br	x17

0000000000402cb0 <sigismember@plt>:
  402cb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #568]
  402cb8:	add	x16, x16, #0x238
  402cbc:	br	x17

0000000000402cc0 <strcmp@plt>:
  402cc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #576]
  402cc8:	add	x16, x16, #0x240
  402ccc:	br	x17

0000000000402cd0 <__ctype_b_loc@plt>:
  402cd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #584]
  402cd8:	add	x16, x16, #0x248
  402cdc:	br	x17

0000000000402ce0 <strtol@plt>:
  402ce0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #592]
  402ce8:	add	x16, x16, #0x250
  402cec:	br	x17

0000000000402cf0 <fseeko@plt>:
  402cf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #600]
  402cf8:	add	x16, x16, #0x258
  402cfc:	br	x17

0000000000402d00 <strtold@plt>:
  402d00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #608]
  402d08:	add	x16, x16, #0x260
  402d0c:	br	x17

0000000000402d10 <free@plt>:
  402d10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #616]
  402d18:	add	x16, x16, #0x268
  402d1c:	br	x17

0000000000402d20 <__ctype_get_mb_cur_max@plt>:
  402d20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #624]
  402d28:	add	x16, x16, #0x270
  402d2c:	br	x17

0000000000402d30 <getgid@plt>:
  402d30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #632]
  402d38:	add	x16, x16, #0x278
  402d3c:	br	x17

0000000000402d40 <pthread_cond_wait@plt>:
  402d40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #640]
  402d48:	add	x16, x16, #0x280
  402d4c:	br	x17

0000000000402d50 <nanosleep@plt>:
  402d50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #648]
  402d58:	add	x16, x16, #0x288
  402d5c:	br	x17

0000000000402d60 <__stpcpy_chk@plt>:
  402d60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #656]
  402d68:	add	x16, x16, #0x290
  402d6c:	br	x17

0000000000402d70 <strchr@plt>:
  402d70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #664]
  402d78:	add	x16, x16, #0x298
  402d7c:	br	x17

0000000000402d80 <feof_unlocked@plt>:
  402d80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #672]
  402d88:	add	x16, x16, #0x2a0
  402d8c:	br	x17

0000000000402d90 <fwrite@plt>:
  402d90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #680]
  402d98:	add	x16, x16, #0x2a8
  402d9c:	br	x17

0000000000402da0 <fflush_unlocked@plt>:
  402da0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #688]
  402da8:	add	x16, x16, #0x2b0
  402dac:	br	x17

0000000000402db0 <__sched_cpucount@plt>:
  402db0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #696]
  402db8:	add	x16, x16, #0x2b8
  402dbc:	br	x17

0000000000402dc0 <fcntl@plt>:
  402dc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #704]
  402dc8:	add	x16, x16, #0x2c0
  402dcc:	br	x17

0000000000402dd0 <strxfrm@plt>:
  402dd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #712]
  402dd8:	add	x16, x16, #0x2c8
  402ddc:	br	x17

0000000000402de0 <dcngettext@plt>:
  402de0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #720]
  402de8:	add	x16, x16, #0x2d0
  402dec:	br	x17

0000000000402df0 <fflush@plt>:
  402df0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #728]
  402df8:	add	x16, x16, #0x2d8
  402dfc:	br	x17

0000000000402e00 <pthread_cond_init@plt>:
  402e00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #736]
  402e08:	add	x16, x16, #0x2e0
  402e0c:	br	x17

0000000000402e10 <getrlimit@plt>:
  402e10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #744]
  402e18:	add	x16, x16, #0x2e8
  402e1c:	br	x17

0000000000402e20 <clearerr_unlocked@plt>:
  402e20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #752]
  402e28:	add	x16, x16, #0x2f0
  402e2c:	br	x17

0000000000402e30 <__explicit_bzero_chk@plt>:
  402e30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #760]
  402e38:	add	x16, x16, #0x2f8
  402e3c:	br	x17

0000000000402e40 <read@plt>:
  402e40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #768]
  402e48:	add	x16, x16, #0x300
  402e4c:	br	x17

0000000000402e50 <memchr@plt>:
  402e50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #776]
  402e58:	add	x16, x16, #0x308
  402e5c:	br	x17

0000000000402e60 <mkstemp@plt>:
  402e60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #784]
  402e68:	add	x16, x16, #0x310
  402e6c:	br	x17

0000000000402e70 <sysconf@plt>:
  402e70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #792]
  402e78:	add	x16, x16, #0x318
  402e7c:	br	x17

0000000000402e80 <fputc_unlocked@plt>:
  402e80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #800]
  402e88:	add	x16, x16, #0x320
  402e8c:	br	x17

0000000000402e90 <__fxstat@plt>:
  402e90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #808]
  402e98:	add	x16, x16, #0x328
  402e9c:	br	x17

0000000000402ea0 <dcgettext@plt>:
  402ea0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ea4:	ldr	x17, [x16, #816]
  402ea8:	add	x16, x16, #0x330
  402eac:	br	x17

0000000000402eb0 <fputs_unlocked@plt>:
  402eb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402eb4:	ldr	x17, [x16, #824]
  402eb8:	add	x16, x16, #0x338
  402ebc:	br	x17

0000000000402ec0 <strcoll@plt>:
  402ec0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ec4:	ldr	x17, [x16, #832]
  402ec8:	add	x16, x16, #0x340
  402ecc:	br	x17

0000000000402ed0 <__freading@plt>:
  402ed0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ed4:	ldr	x17, [x16, #840]
  402ed8:	add	x16, x16, #0x348
  402edc:	br	x17

0000000000402ee0 <ftruncate@plt>:
  402ee0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ee4:	ldr	x17, [x16, #848]
  402ee8:	add	x16, x16, #0x350
  402eec:	br	x17

0000000000402ef0 <dup2@plt>:
  402ef0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ef4:	ldr	x17, [x16, #856]
  402ef8:	add	x16, x16, #0x358
  402efc:	br	x17

0000000000402f00 <sigaddset@plt>:
  402f00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f04:	ldr	x17, [x16, #864]
  402f08:	add	x16, x16, #0x360
  402f0c:	br	x17

0000000000402f10 <iswprint@plt>:
  402f10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f14:	ldr	x17, [x16, #872]
  402f18:	add	x16, x16, #0x368
  402f1c:	br	x17

0000000000402f20 <__assert_fail@plt>:
  402f20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f24:	ldr	x17, [x16, #880]
  402f28:	add	x16, x16, #0x370
  402f2c:	br	x17

0000000000402f30 <__errno_location@plt>:
  402f30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f34:	ldr	x17, [x16, #888]
  402f38:	add	x16, x16, #0x378
  402f3c:	br	x17

0000000000402f40 <execlp@plt>:
  402f40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f44:	ldr	x17, [x16, #896]
  402f48:	add	x16, x16, #0x380
  402f4c:	br	x17

0000000000402f50 <getenv@plt>:
  402f50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f54:	ldr	x17, [x16, #904]
  402f58:	add	x16, x16, #0x388
  402f5c:	br	x17

0000000000402f60 <__xstat@plt>:
  402f60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f64:	ldr	x17, [x16, #912]
  402f68:	add	x16, x16, #0x390
  402f6c:	br	x17

0000000000402f70 <pthread_mutex_lock@plt>:
  402f70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f74:	ldr	x17, [x16, #920]
  402f78:	add	x16, x16, #0x398
  402f7c:	br	x17

0000000000402f80 <pthread_mutex_unlock@plt>:
  402f80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f84:	ldr	x17, [x16, #928]
  402f88:	add	x16, x16, #0x3a0
  402f8c:	br	x17

0000000000402f90 <waitpid@plt>:
  402f90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f94:	ldr	x17, [x16, #936]
  402f98:	add	x16, x16, #0x3a8
  402f9c:	br	x17

0000000000402fa0 <unlink@plt>:
  402fa0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402fa4:	ldr	x17, [x16, #944]
  402fa8:	add	x16, x16, #0x3b0
  402fac:	br	x17

0000000000402fb0 <setlocale@plt>:
  402fb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402fb4:	ldr	x17, [x16, #952]
  402fb8:	add	x16, x16, #0x3b8
  402fbc:	br	x17

0000000000402fc0 <ferror@plt>:
  402fc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402fc4:	ldr	x17, [x16, #960]
  402fc8:	add	x16, x16, #0x3c0
  402fcc:	br	x17

Disassembly of section .text:

0000000000402fd0 <_obstack_begin@@Base-0xe36c>:
  402fd0:	mov	x29, #0x0                   	// #0
  402fd4:	mov	x30, #0x0                   	// #0
  402fd8:	mov	x5, x0
  402fdc:	ldr	x1, [sp]
  402fe0:	add	x2, sp, #0x8
  402fe4:	mov	x6, sp
  402fe8:	movz	x0, #0x0, lsl #48
  402fec:	movk	x0, #0x0, lsl #32
  402ff0:	movk	x0, #0x40, lsl #16
  402ff4:	movk	x0, #0x355c
  402ff8:	movz	x3, #0x0, lsl #48
  402ffc:	movk	x3, #0x0, lsl #32
  403000:	movk	x3, #0x41, lsl #16
  403004:	movk	x3, #0x22f0
  403008:	movz	x4, #0x0, lsl #48
  40300c:	movk	x4, #0x0, lsl #32
  403010:	movk	x4, #0x41, lsl #16
  403014:	movk	x4, #0x2370
  403018:	bl	402ad0 <__libc_start_main@plt>
  40301c:	bl	402c00 <abort@plt>
  403020:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x139a4>
  403024:	ldr	x0, [x0, #4064]
  403028:	cbz	x0, 403030 <ferror@plt+0x70>
  40302c:	b	402bc0 <__gmon_start__@plt>
  403030:	ret
  403034:	nop
  403038:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x149a4>
  40303c:	add	x0, x0, #0x538
  403040:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  403044:	add	x1, x1, #0x538
  403048:	cmp	x1, x0
  40304c:	b.eq	403064 <ferror@plt+0xa4>  // b.none
  403050:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403054:	ldr	x1, [x1, #960]
  403058:	cbz	x1, 403064 <ferror@plt+0xa4>
  40305c:	mov	x16, x1
  403060:	br	x16
  403064:	ret
  403068:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x149a4>
  40306c:	add	x0, x0, #0x538
  403070:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  403074:	add	x1, x1, #0x538
  403078:	sub	x1, x1, x0
  40307c:	lsr	x2, x1, #63
  403080:	add	x1, x2, x1, asr #3
  403084:	cmp	xzr, x1, asr #1
  403088:	asr	x1, x1, #1
  40308c:	b.eq	4030a4 <ferror@plt+0xe4>  // b.none
  403090:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x9a4>
  403094:	ldr	x2, [x2, #968]
  403098:	cbz	x2, 4030a4 <ferror@plt+0xe4>
  40309c:	mov	x16, x2
  4030a0:	br	x16
  4030a4:	ret
  4030a8:	stp	x29, x30, [sp, #-32]!
  4030ac:	mov	x29, sp
  4030b0:	str	x19, [sp, #16]
  4030b4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  4030b8:	ldrb	w0, [x19, #1392]
  4030bc:	cbnz	w0, 4030cc <ferror@plt+0x10c>
  4030c0:	bl	403038 <ferror@plt+0x78>
  4030c4:	mov	w0, #0x1                   	// #1
  4030c8:	strb	w0, [x19, #1392]
  4030cc:	ldr	x19, [sp, #16]
  4030d0:	ldp	x29, x30, [sp], #32
  4030d4:	ret
  4030d8:	b	403068 <ferror@plt+0xa8>
  4030dc:	stp	x29, x30, [sp, #-32]!
  4030e0:	stp	x20, x19, [sp, #16]
  4030e4:	mov	w19, w0
  4030e8:	mov	x29, sp
  4030ec:	cbnz	w0, 403354 <ferror@plt+0x394>
  4030f0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  4030f4:	add	x1, x1, #0xc4b
  4030f8:	mov	w2, #0x5                   	// #5
  4030fc:	mov	x0, xzr
  403100:	bl	402ea0 <dcgettext@plt>
  403104:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403108:	ldr	x2, [x8, #3024]
  40310c:	mov	x1, x0
  403110:	mov	w0, #0x1                   	// #1
  403114:	mov	x3, x2
  403118:	bl	402af0 <__printf_chk@plt>
  40311c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403120:	add	x1, x1, #0xc92
  403124:	mov	w2, #0x5                   	// #5
  403128:	mov	x0, xzr
  40312c:	bl	402ea0 <dcgettext@plt>
  403130:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  403134:	ldr	x1, [x20, #1368]
  403138:	bl	402eb0 <fputs_unlocked@plt>
  40313c:	bl	403390 <ferror@plt+0x3d0>
  403140:	bl	4033c0 <ferror@plt+0x400>
  403144:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403148:	add	x1, x1, #0xcd1
  40314c:	mov	w2, #0x5                   	// #5
  403150:	mov	x0, xzr
  403154:	bl	402ea0 <dcgettext@plt>
  403158:	ldr	x1, [x20, #1368]
  40315c:	bl	402eb0 <fputs_unlocked@plt>
  403160:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403164:	add	x1, x1, #0xce5
  403168:	mov	w2, #0x5                   	// #5
  40316c:	mov	x0, xzr
  403170:	bl	402ea0 <dcgettext@plt>
  403174:	ldr	x1, [x20, #1368]
  403178:	bl	402eb0 <fputs_unlocked@plt>
  40317c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403180:	add	x1, x1, #0xdb1
  403184:	mov	w2, #0x5                   	// #5
  403188:	mov	x0, xzr
  40318c:	bl	402ea0 <dcgettext@plt>
  403190:	ldr	x1, [x20, #1368]
  403194:	bl	402eb0 <fputs_unlocked@plt>
  403198:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  40319c:	add	x1, x1, #0xe84
  4031a0:	mov	w2, #0x5                   	// #5
  4031a4:	mov	x0, xzr
  4031a8:	bl	402ea0 <dcgettext@plt>
  4031ac:	ldr	x1, [x20, #1368]
  4031b0:	bl	402eb0 <fputs_unlocked@plt>
  4031b4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  4031b8:	add	x1, x1, #0xed0
  4031bc:	mov	w2, #0x5                   	// #5
  4031c0:	mov	x0, xzr
  4031c4:	bl	402ea0 <dcgettext@plt>
  4031c8:	ldr	x1, [x20, #1368]
  4031cc:	bl	402eb0 <fputs_unlocked@plt>
  4031d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  4031d4:	add	x1, x1, #0xfe2
  4031d8:	mov	w2, #0x5                   	// #5
  4031dc:	mov	x0, xzr
  4031e0:	bl	402ea0 <dcgettext@plt>
  4031e4:	ldr	x1, [x20, #1368]
  4031e8:	bl	402eb0 <fputs_unlocked@plt>
  4031ec:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4031f0:	add	x1, x1, #0xf8
  4031f4:	mov	w2, #0x5                   	// #5
  4031f8:	mov	x0, xzr
  4031fc:	bl	402ea0 <dcgettext@plt>
  403200:	ldr	x1, [x20, #1368]
  403204:	bl	402eb0 <fputs_unlocked@plt>
  403208:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40320c:	add	x1, x1, #0x109
  403210:	mov	w2, #0x5                   	// #5
  403214:	mov	x0, xzr
  403218:	bl	402ea0 <dcgettext@plt>
  40321c:	ldr	x1, [x20, #1368]
  403220:	bl	402eb0 <fputs_unlocked@plt>
  403224:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403228:	add	x1, x1, #0x17f
  40322c:	mov	w2, #0x5                   	// #5
  403230:	mov	x0, xzr
  403234:	bl	402ea0 <dcgettext@plt>
  403238:	ldr	x1, [x20, #1368]
  40323c:	bl	402eb0 <fputs_unlocked@plt>
  403240:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403244:	add	x1, x1, #0x294
  403248:	mov	w2, #0x5                   	// #5
  40324c:	mov	x0, xzr
  403250:	bl	402ea0 <dcgettext@plt>
  403254:	ldr	x1, [x20, #1368]
  403258:	bl	402eb0 <fputs_unlocked@plt>
  40325c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403260:	add	x1, x1, #0x3f0
  403264:	mov	w2, #0x5                   	// #5
  403268:	mov	x0, xzr
  40326c:	bl	402ea0 <dcgettext@plt>
  403270:	ldr	x1, [x20, #1368]
  403274:	bl	402eb0 <fputs_unlocked@plt>
  403278:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40327c:	add	x1, x1, #0x480
  403280:	mov	w2, #0x5                   	// #5
  403284:	mov	x0, xzr
  403288:	bl	402ea0 <dcgettext@plt>
  40328c:	ldr	x1, [x20, #1368]
  403290:	bl	402eb0 <fputs_unlocked@plt>
  403294:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403298:	add	x1, x1, #0x558
  40329c:	mov	w2, #0x5                   	// #5
  4032a0:	mov	x0, xzr
  4032a4:	bl	402ea0 <dcgettext@plt>
  4032a8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  4032ac:	mov	x1, x0
  4032b0:	add	x2, x2, #0x71d
  4032b4:	mov	w0, #0x1                   	// #1
  4032b8:	bl	402af0 <__printf_chk@plt>
  4032bc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4032c0:	add	x1, x1, #0x722
  4032c4:	mov	w2, #0x5                   	// #5
  4032c8:	mov	x0, xzr
  4032cc:	bl	402ea0 <dcgettext@plt>
  4032d0:	ldr	x1, [x20, #1368]
  4032d4:	bl	402eb0 <fputs_unlocked@plt>
  4032d8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4032dc:	add	x1, x1, #0x762
  4032e0:	mov	w2, #0x5                   	// #5
  4032e4:	mov	x0, xzr
  4032e8:	bl	402ea0 <dcgettext@plt>
  4032ec:	ldr	x1, [x20, #1368]
  4032f0:	bl	402eb0 <fputs_unlocked@plt>
  4032f4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4032f8:	add	x1, x1, #0x78f
  4032fc:	mov	w2, #0x5                   	// #5
  403300:	mov	x0, xzr
  403304:	bl	402ea0 <dcgettext@plt>
  403308:	ldr	x1, [x20, #1368]
  40330c:	bl	402eb0 <fputs_unlocked@plt>
  403310:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403314:	add	x1, x1, #0x7c5
  403318:	mov	w2, #0x5                   	// #5
  40331c:	mov	x0, xzr
  403320:	bl	402ea0 <dcgettext@plt>
  403324:	ldr	x1, [x20, #1368]
  403328:	bl	402eb0 <fputs_unlocked@plt>
  40332c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403330:	add	x1, x1, #0xa21
  403334:	mov	w2, #0x5                   	// #5
  403338:	mov	x0, xzr
  40333c:	bl	402ea0 <dcgettext@plt>
  403340:	ldr	x1, [x20, #1368]
  403344:	bl	402eb0 <fputs_unlocked@plt>
  403348:	bl	4033f0 <ferror@plt+0x430>
  40334c:	mov	w0, w19
  403350:	bl	4028c0 <exit@plt>
  403354:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403358:	ldr	x20, [x8, #1344]
  40335c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x9a4>
  403360:	add	x1, x1, #0xc24
  403364:	mov	w2, #0x5                   	// #5
  403368:	mov	x0, xzr
  40336c:	bl	402ea0 <dcgettext@plt>
  403370:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403374:	ldr	x3, [x8, #3024]
  403378:	mov	x2, x0
  40337c:	mov	w1, #0x1                   	// #1
  403380:	mov	x0, x20
  403384:	bl	402ca0 <__fprintf_chk@plt>
  403388:	mov	w0, w19
  40338c:	bl	4028c0 <exit@plt>
  403390:	stp	x29, x30, [sp, #-16]!
  403394:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403398:	add	x1, x1, #0xe62
  40339c:	mov	w2, #0x5                   	// #5
  4033a0:	mov	x0, xzr
  4033a4:	mov	x29, sp
  4033a8:	bl	402ea0 <dcgettext@plt>
  4033ac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4033b0:	ldr	x1, [x8, #1368]
  4033b4:	bl	402eb0 <fputs_unlocked@plt>
  4033b8:	ldp	x29, x30, [sp], #16
  4033bc:	ret
  4033c0:	stp	x29, x30, [sp, #-16]!
  4033c4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4033c8:	add	x1, x1, #0xe9a
  4033cc:	mov	w2, #0x5                   	// #5
  4033d0:	mov	x0, xzr
  4033d4:	mov	x29, sp
  4033d8:	bl	402ea0 <dcgettext@plt>
  4033dc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4033e0:	ldr	x1, [x8, #1368]
  4033e4:	bl	402eb0 <fputs_unlocked@plt>
  4033e8:	ldp	x29, x30, [sp], #16
  4033ec:	ret
  4033f0:	sub	sp, sp, #0xa0
  4033f4:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x9a4>
  4033f8:	add	x8, x8, #0xaa8
  4033fc:	ldp	q0, q4, [x8]
  403400:	ldp	q1, q2, [x8, #48]
  403404:	stp	x20, x19, [sp, #144]
  403408:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x19a4>
  40340c:	str	q0, [sp]
  403410:	ldr	q0, [x8, #32]
  403414:	str	q1, [sp, #48]
  403418:	ldp	q3, q1, [x8, #80]
  40341c:	ldr	x1, [sp]
  403420:	str	x21, [sp, #128]
  403424:	add	x19, x19, #0xb9c
  403428:	mov	x21, sp
  40342c:	stp	x29, x30, [sp, #112]
  403430:	add	x29, sp, #0x70
  403434:	stp	q2, q3, [sp, #64]
  403438:	str	q1, [sp, #96]
  40343c:	stp	q4, q0, [sp, #16]
  403440:	cbz	x1, 403460 <ferror@plt+0x4a0>
  403444:	adrp	x20, 413000 <_obstack_memory_used@@Base+0x19a4>
  403448:	add	x20, x20, #0xb9c
  40344c:	mov	x0, x20
  403450:	bl	402cc0 <strcmp@plt>
  403454:	cbz	w0, 403460 <ferror@plt+0x4a0>
  403458:	ldr	x1, [x21, #16]!
  40345c:	cbnz	x1, 40344c <ferror@plt+0x48c>
  403460:	ldr	x8, [x21, #8]
  403464:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403468:	add	x1, x1, #0xf44
  40346c:	mov	w2, #0x5                   	// #5
  403470:	cmp	x8, #0x0
  403474:	mov	x0, xzr
  403478:	csel	x20, x19, x8, eq  // eq = none
  40347c:	bl	402ea0 <dcgettext@plt>
  403480:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403484:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x19a4>
  403488:	mov	x1, x0
  40348c:	add	x2, x2, #0xcae
  403490:	add	x3, x3, #0xf5b
  403494:	mov	w0, #0x1                   	// #1
  403498:	bl	402af0 <__printf_chk@plt>
  40349c:	mov	w0, #0x5                   	// #5
  4034a0:	mov	x1, xzr
  4034a4:	bl	402fb0 <setlocale@plt>
  4034a8:	cbz	x0, 4034e0 <ferror@plt+0x520>
  4034ac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4034b0:	add	x1, x1, #0xf83
  4034b4:	mov	w2, #0x3                   	// #3
  4034b8:	bl	402ab0 <strncmp@plt>
  4034bc:	cbz	w0, 4034e0 <ferror@plt+0x520>
  4034c0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4034c4:	add	x1, x1, #0xf87
  4034c8:	mov	w2, #0x5                   	// #5
  4034cc:	mov	x0, xzr
  4034d0:	bl	402ea0 <dcgettext@plt>
  4034d4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4034d8:	ldr	x1, [x8, #1368]
  4034dc:	bl	402eb0 <fputs_unlocked@plt>
  4034e0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4034e4:	add	x1, x1, #0xfce
  4034e8:	mov	w2, #0x5                   	// #5
  4034ec:	mov	x0, xzr
  4034f0:	bl	402ea0 <dcgettext@plt>
  4034f4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  4034f8:	mov	x1, x0
  4034fc:	add	x2, x2, #0xf5b
  403500:	mov	w0, #0x1                   	// #1
  403504:	mov	x3, x19
  403508:	bl	402af0 <__printf_chk@plt>
  40350c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403510:	add	x1, x1, #0xfe9
  403514:	mov	w2, #0x5                   	// #5
  403518:	mov	x0, xzr
  40351c:	bl	402ea0 <dcgettext@plt>
  403520:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  403524:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x19a4>
  403528:	add	x8, x8, #0xb18
  40352c:	add	x9, x9, #0xf01
  403530:	cmp	x20, x19
  403534:	mov	x1, x0
  403538:	csel	x3, x9, x8, eq  // eq = none
  40353c:	mov	w0, #0x1                   	// #1
  403540:	mov	x2, x20
  403544:	bl	402af0 <__printf_chk@plt>
  403548:	ldp	x20, x19, [sp, #144]
  40354c:	ldr	x21, [sp, #128]
  403550:	ldp	x29, x30, [sp, #112]
  403554:	add	sp, sp, #0xa0
  403558:	ret
  40355c:	stp	x29, x30, [sp, #-96]!
  403560:	stp	x28, x27, [sp, #16]
  403564:	stp	x26, x25, [sp, #32]
  403568:	stp	x24, x23, [sp, #48]
  40356c:	stp	x22, x21, [sp, #64]
  403570:	stp	x20, x19, [sp, #80]
  403574:	mov	x29, sp
  403578:	sub	sp, sp, #0x210
  40357c:	mov	w27, w0
  403580:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  403584:	add	x0, x0, #0xb06
  403588:	mov	x26, x1
  40358c:	bl	402f50 <getenv@plt>
  403590:	mov	x28, x0
  403594:	bl	40cec4 <ferror@plt+0x9f04>
  403598:	mov	w9, #0xf250                	// #62032
  40359c:	ldr	x8, [x26]
  4035a0:	movk	w9, #0xfffc, lsl #16
  4035a4:	add	w9, w0, w9
  4035a8:	cmp	w9, #0x2b8
  4035ac:	cset	w9, hi  // hi = pmore
  4035b0:	mov	x0, x8
  4035b4:	str	w9, [sp, #72]
  4035b8:	bl	40cf34 <ferror@plt+0x9f74>
  4035bc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4035c0:	add	x1, x1, #0xb18
  4035c4:	mov	w0, #0x6                   	// #6
  4035c8:	bl	402fb0 <setlocale@plt>
  4035cc:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x19a4>
  4035d0:	cmp	x0, #0x0
  4035d4:	add	x19, x19, #0xcb2
  4035d8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4035dc:	str	x0, [sp, #32]
  4035e0:	cset	w8, ne  // ne = any
  4035e4:	add	x1, x1, #0xb16
  4035e8:	mov	x0, x19
  4035ec:	str	w8, [sp, #44]
  4035f0:	bl	402ac0 <bindtextdomain@plt>
  4035f4:	mov	x0, x19
  4035f8:	bl	402c80 <textdomain@plt>
  4035fc:	bl	404528 <ferror@plt+0x1568>
  403600:	mov	w0, #0x3                   	// #3
  403604:	bl	40b514 <ferror@plt+0x8554>
  403608:	and	w8, w0, #0x1
  40360c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403610:	mov	w0, #0x2                   	// #2
  403614:	strb	w8, [x9, #1400]
  403618:	bl	40b514 <ferror@plt+0x8554>
  40361c:	and	w8, w0, #0x1
  403620:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403624:	strb	w8, [x9, #1404]
  403628:	bl	4029b0 <localeconv@plt>
  40362c:	ldr	x20, [x0]
  403630:	mov	x19, x0
  403634:	ldrb	w0, [x20]
  403638:	bl	404538 <ferror@plt+0x1578>
  40363c:	ands	w9, w0, #0xff
  403640:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403644:	str	w9, [x8, #1408]
  403648:	b.eq	403654 <ferror@plt+0x694>  // b.none
  40364c:	ldrb	w9, [x20, #1]
  403650:	cbz	w9, 40365c <ferror@plt+0x69c>
  403654:	mov	w9, #0x2e                  	// #46
  403658:	str	w9, [x8, #1408]
  40365c:	ldr	x19, [x19, #8]
  403660:	ldrb	w0, [x19]
  403664:	bl	404538 <ferror@plt+0x1578>
  403668:	ands	w9, w0, #0xff
  40366c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403670:	str	w9, [x8, #1412]
  403674:	b.eq	403680 <ferror@plt+0x6c0>  // b.none
  403678:	ldrb	w9, [x19, #1]
  40367c:	cbz	w9, 403688 <ferror@plt+0x6c8>
  403680:	mov	w9, #0xffffffff            	// #-1
  403684:	str	w9, [x8, #1412]
  403688:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40368c:	sub	x23, x29, #0x98
  403690:	strb	wzr, [x8, #1416]
  403694:	bl	40453c <ferror@plt+0x157c>
  403698:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  40369c:	add	x19, x19, #0x590
  4036a0:	mov	x0, x19
  4036a4:	bl	402a90 <sigemptyset@plt>
  4036a8:	adrp	x21, 412000 <_obstack_memory_used@@Base+0x9a4>
  4036ac:	mov	x22, xzr
  4036b0:	add	x21, x21, #0x614
  4036b4:	b	4036c4 <ferror@plt+0x704>
  4036b8:	add	x22, x22, #0x4
  4036bc:	cmp	x22, #0x2c
  4036c0:	b.eq	4036f4 <ferror@plt+0x734>  // b.none
  4036c4:	ldr	w20, [x21, x22]
  4036c8:	add	x2, sp, #0x58
  4036cc:	mov	x1, xzr
  4036d0:	mov	w0, w20
  4036d4:	bl	402b90 <sigaction@plt>
  4036d8:	ldr	x8, [sp, #88]
  4036dc:	cmp	x8, #0x1
  4036e0:	b.eq	4036b8 <ferror@plt+0x6f8>  // b.none
  4036e4:	mov	x0, x19
  4036e8:	mov	w1, w20
  4036ec:	bl	402f00 <sigaddset@plt>
  4036f0:	b	4036b8 <ferror@plt+0x6f8>
  4036f4:	ldp	q0, q1, [x19, #64]
  4036f8:	adrp	x8, 404000 <ferror@plt+0x1040>
  4036fc:	mov	x22, xzr
  403700:	add	x8, x8, #0x6cc
  403704:	stur	q0, [sp, #160]
  403708:	ldp	q2, q0, [x19, #96]
  40370c:	str	x8, [sp, #88]
  403710:	str	wzr, [sp, #224]
  403714:	stp	q1, q2, [sp, #176]
  403718:	ldp	q1, q2, [x19]
  40371c:	stur	q0, [sp, #208]
  403720:	stp	q1, q2, [sp, #96]
  403724:	ldp	q0, q1, [x19, #32]
  403728:	stp	q0, q1, [sp, #128]
  40372c:	b	40373c <ferror@plt+0x77c>
  403730:	add	x22, x22, #0x4
  403734:	cmp	x22, #0x2c
  403738:	b.eq	403764 <ferror@plt+0x7a4>  // b.none
  40373c:	ldr	w20, [x21, x22]
  403740:	mov	x0, x19
  403744:	mov	w1, w20
  403748:	bl	402cb0 <sigismember@plt>
  40374c:	cbz	w0, 403730 <ferror@plt+0x770>
  403750:	add	x1, sp, #0x58
  403754:	mov	w0, w20
  403758:	mov	x2, xzr
  40375c:	bl	402b90 <sigaction@plt>
  403760:	b	403730 <ferror@plt+0x770>
  403764:	cmp	x28, #0x0
  403768:	cset	w8, eq  // eq = none
  40376c:	mov	w0, #0x11                  	// #17
  403770:	mov	x1, xzr
  403774:	str	w8, [sp, #20]
  403778:	bl	4029f0 <signal@plt>
  40377c:	adrp	x0, 404000 <ferror@plt+0x1040>
  403780:	add	x0, x0, #0x700
  403784:	bl	412378 <_obstack_memory_used@@Base+0xd1c>
  403788:	sub	x0, x29, #0x98
  40378c:	bl	40473c <ferror@plt+0x177c>
  403790:	mov	x8, #0xffffffffffffffff    	// #-1
  403794:	sxtw	x0, w27
  403798:	mov	w1, #0x8                   	// #8
  40379c:	str	x8, [x23]
  4037a0:	bl	410134 <ferror@plt+0xd174>
  4037a4:	mov	x19, x0
  4037a8:	mov	x24, xzr
  4037ac:	mov	w23, wzr
  4037b0:	mov	w22, wzr
  4037b4:	mov	w21, #0xffffffff            	// #-1
  4037b8:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x149a4>
  4037bc:	str	xzr, [sp, #24]
  4037c0:	stp	xzr, xzr, [sp, #56]
  4037c4:	str	xzr, [sp, #48]
  4037c8:	str	wzr, [sp, #80]
  4037cc:	mov	w20, w23
  4037d0:	cmn	w22, #0x1
  4037d4:	str	w21, [sp, #88]
  4037d8:	b.eq	4038a8 <ferror@plt+0x8e8>  // b.none
  4037dc:	cbz	x28, 403838 <ferror@plt+0x878>
  4037e0:	cbz	x24, 403838 <ferror@plt+0x878>
  4037e4:	ldr	w8, [sp, #80]
  4037e8:	tst	w8, #0xff
  4037ec:	b.ne	4038a8 <ferror@plt+0x8e8>  // b.any
  4037f0:	ldr	w8, [sp, #72]
  4037f4:	eor	w8, w8, #0x1
  4037f8:	tbnz	w8, #0, 4038a8 <ferror@plt+0x8e8>
  4037fc:	ldrsw	x8, [x25, #1360]
  403800:	cmp	w8, w27
  403804:	b.eq	4038a8 <ferror@plt+0x8e8>  // b.none
  403808:	ldr	x9, [x26, x8, lsl #3]
  40380c:	ldrb	w10, [x9]
  403810:	cmp	w10, #0x2d
  403814:	b.ne	4038a8 <ferror@plt+0x8e8>  // b.any
  403818:	ldrb	w10, [x9, #1]
  40381c:	cmp	w10, #0x6f
  403820:	b.ne	4038a8 <ferror@plt+0x8e8>  // b.any
  403824:	add	w8, w8, #0x1
  403828:	cmp	w8, w27
  40382c:	b.ne	403838 <ferror@plt+0x878>  // b.any
  403830:	ldrb	w8, [x9, #2]
  403834:	cbz	w8, 4038a8 <ferror@plt+0x8e8>
  403838:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x9a4>
  40383c:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x9a4>
  403840:	add	x4, sp, #0x58
  403844:	mov	w0, w27
  403848:	mov	x1, x26
  40384c:	add	x2, x2, #0x640
  403850:	add	x3, x3, #0x660
  403854:	bl	402c90 <getopt_long@plt>
  403858:	add	w9, w0, #0x3
  40385c:	cmp	w9, #0x10a
  403860:	b.hi	40427c <ferror@plt+0x12bc>  // b.pmore
  403864:	adrp	x12, 412000 <_obstack_memory_used@@Base+0x9a4>
  403868:	add	x12, x12, #0x3d0
  40386c:	adr	x10, 403888 <ferror@plt+0x8c8>
  403870:	ldrh	w11, [x12, x9, lsl #1]
  403874:	add	x10, x10, x11, lsl #2
  403878:	mov	w22, w0
  40387c:	mov	w8, #0x1                   	// #1
  403880:	mov	w23, #0x1                   	// #1
  403884:	br	x10
  403888:	add	x0, sp, #0x54
  40388c:	sub	x1, x29, #0x98
  403890:	mov	w2, #0x2                   	// #2
  403894:	strb	w22, [sp, #84]
  403898:	strb	wzr, [sp, #85]
  40389c:	bl	404830 <ferror@plt+0x1870>
  4038a0:	mov	w8, #0x1                   	// #1
  4038a4:	b	4038d4 <ferror@plt+0x914>
  4038a8:	ldrsw	x8, [x25, #1360]
  4038ac:	cmp	w8, w27
  4038b0:	b.ge	4038d0 <ferror@plt+0x910>  // b.tcont
  4038b4:	add	w9, w8, #0x1
  4038b8:	str	w9, [x25, #1360]
  4038bc:	ldr	x8, [x26, x8, lsl #3]
  4038c0:	str	x8, [x19, x24, lsl #3]
  4038c4:	add	x24, x24, #0x1
  4038c8:	mov	w8, #0x1                   	// #1
  4038cc:	b	4038d4 <ferror@plt+0x914>
  4038d0:	mov	w8, wzr
  4038d4:	mov	w23, w20
  4038d8:	tbnz	w8, #0, 4037cc <ferror@plt+0x80c>
  4038dc:	b	403e24 <ferror@plt+0xe64>
  4038e0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4038e4:	ldr	x1, [x8, #1352]
  4038e8:	cbz	x1, 403c88 <ferror@plt+0xcc8>
  4038ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4038f0:	ldr	x5, [x8, #1224]
  4038f4:	adrp	x22, 412000 <_obstack_memory_used@@Base+0x9a4>
  4038f8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  4038fc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x9a4>
  403900:	add	x22, x22, #0xa80
  403904:	add	x0, x0, #0xba1
  403908:	add	x2, x2, #0xa88
  40390c:	mov	w4, #0x1                   	// #1
  403910:	mov	x3, x22
  403914:	bl	40a01c <ferror@plt+0x705c>
  403918:	ldrb	w22, [x22, x0]
  40391c:	b	403c8c <ferror@plt+0xccc>
  403920:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403924:	mov	w8, #0x1                   	// #1
  403928:	strb	w8, [x9, #1563]
  40392c:	b	4038d4 <ferror@plt+0x914>
  403930:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403934:	ldr	x0, [x8, #1352]
  403938:	bl	404d48 <ferror@plt+0x1d88>
  40393c:	mov	w8, #0x1                   	// #1
  403940:	b	4038d4 <ferror@plt+0x914>
  403944:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403948:	mov	w8, #0x1                   	// #1
  40394c:	strb	w8, [x9, #1561]
  403950:	b	4038d4 <ferror@plt+0x914>
  403954:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  403958:	ldr	x0, [x23, #1352]
  40395c:	ldrb	w8, [x0]
  403960:	cbz	w8, 404304 <ferror@plt+0x1344>
  403964:	ldrb	w9, [x0, #1]
  403968:	cbz	w9, 403980 <ferror@plt+0x9c0>
  40396c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403970:	add	x1, x1, #0xc82
  403974:	bl	402cc0 <strcmp@plt>
  403978:	cbnz	w0, 404310 <ferror@plt+0x1350>
  40397c:	mov	w8, wzr
  403980:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403984:	ldr	w10, [x9, #984]
  403988:	cmp	w10, #0x100
  40398c:	b.eq	403998 <ferror@plt+0x9d8>  // b.none
  403990:	cmp	w10, w8
  403994:	b.ne	404338 <ferror@plt+0x1378>  // b.any
  403998:	str	w8, [x9, #984]
  40399c:	mov	w8, #0x1                   	// #1
  4039a0:	b	4038d4 <ferror@plt+0x914>
  4039a4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4039a8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4039ac:	ldr	x1, [x8, #1352]
  4039b0:	ldr	x5, [x9, #1224]
  4039b4:	adrp	x22, 412000 <_obstack_memory_used@@Base+0x9a4>
  4039b8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  4039bc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x9a4>
  4039c0:	add	x22, x22, #0xa40
  4039c4:	add	x0, x0, #0xb9a
  4039c8:	add	x2, x2, #0xa48
  4039cc:	mov	w4, #0x1                   	// #1
  4039d0:	mov	x3, x22
  4039d4:	bl	40a01c <ferror@plt+0x705c>
  4039d8:	ldrb	w22, [x22, x0]
  4039dc:	b	403888 <ferror@plt+0x8c8>
  4039e0:	sub	x0, x29, #0x50
  4039e4:	sub	x23, x29, #0x50
  4039e8:	bl	40473c <ferror@plt+0x177c>
  4039ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4039f0:	ldr	x0, [x8, #1352]
  4039f4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  4039f8:	add	x2, x2, #0xbd1
  4039fc:	sub	x1, x29, #0x50
  403a00:	bl	404758 <ferror@plt+0x1798>
  403a04:	sub	x10, x29, #0x98
  403a08:	ldr	x8, [x10, #72]
  403a0c:	sub	x9, x8, #0x1
  403a10:	str	x9, [x10, #72]
  403a14:	cbz	x8, 404358 <ferror@plt+0x1398>
  403a18:	ldrb	w8, [x0]
  403a1c:	cmp	w8, #0x2e
  403a20:	b.ne	403a48 <ferror@plt+0xa88>  // b.any
  403a24:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403a28:	add	x0, x0, #0x1
  403a2c:	add	x1, x23, #0x8
  403a30:	add	x2, x2, #0xb63
  403a34:	bl	404758 <ferror@plt+0x1798>
  403a38:	ldr	x8, [x23, #8]
  403a3c:	sub	x9, x8, #0x1
  403a40:	str	x9, [x23, #8]
  403a44:	cbz	x8, 404344 <ferror@plt+0x1384>
  403a48:	ldr	x8, [x23]
  403a4c:	cbnz	x8, 403a60 <ferror@plt+0xaa0>
  403a50:	ldr	x8, [x23, #8]
  403a54:	cbnz	x8, 403a60 <ferror@plt+0xaa0>
  403a58:	mov	x8, #0xffffffffffffffff    	// #-1
  403a5c:	str	x8, [x23]
  403a60:	sub	x1, x29, #0x50
  403a64:	mov	w2, wzr
  403a68:	bl	404830 <ferror@plt+0x1870>
  403a6c:	ldrb	w8, [x0]
  403a70:	cmp	w8, #0x2c
  403a74:	b.ne	403c68 <ferror@plt+0xca8>  // b.any
  403a78:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403a7c:	add	x0, x0, #0x1
  403a80:	add	x1, x23, #0x10
  403a84:	add	x2, x2, #0xc1d
  403a88:	bl	404758 <ferror@plt+0x1798>
  403a8c:	ldr	x8, [x23, #16]
  403a90:	sub	x9, x8, #0x1
  403a94:	str	x9, [x23, #16]
  403a98:	cbz	x8, 404358 <ferror@plt+0x1398>
  403a9c:	ldrb	w8, [x0]
  403aa0:	cmp	w8, #0x2e
  403aa4:	b.ne	403abc <ferror@plt+0xafc>  // b.any
  403aa8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403aac:	add	x0, x0, #0x1
  403ab0:	add	x1, x23, #0x18
  403ab4:	add	x2, x2, #0xb63
  403ab8:	bl	404758 <ferror@plt+0x1798>
  403abc:	sub	x1, x29, #0x50
  403ac0:	mov	w2, #0x1                   	// #1
  403ac4:	bl	404830 <ferror@plt+0x1870>
  403ac8:	b	403c70 <ferror@plt+0xcb0>
  403acc:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  403ad0:	ldr	x8, [x10, #1352]
  403ad4:	ldrb	w8, [x8]
  403ad8:	cmp	w8, #0x2b
  403adc:	b.ne	403d64 <ferror@plt+0xda4>  // b.any
  403ae0:	ldrsw	x8, [x25, #1360]
  403ae4:	cmp	w8, w27
  403ae8:	b.eq	403cb4 <ferror@plt+0xcf4>  // b.none
  403aec:	ldr	x8, [x26, x8, lsl #3]
  403af0:	ldrb	w9, [x8]
  403af4:	cmp	w9, #0x2d
  403af8:	b.ne	403cb4 <ferror@plt+0xcf4>  // b.any
  403afc:	ldrb	w8, [x8, #1]
  403b00:	sub	w8, w8, #0x30
  403b04:	cmp	w8, #0xa
  403b08:	cset	w11, cc  // cc = lo, ul, last
  403b0c:	b	403cb8 <ferror@plt+0xcf8>
  403b10:	ldr	x0, [sp, #48]
  403b14:	cbz	x0, 403b28 <ferror@plt+0xb68>
  403b18:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b1c:	ldr	x1, [x8, #1352]
  403b20:	bl	402cc0 <strcmp@plt>
  403b24:	cbnz	w0, 40436c <ferror@plt+0x13ac>
  403b28:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b2c:	ldr	x8, [x8, #1352]
  403b30:	str	x8, [sp, #48]
  403b34:	mov	w8, #0x1                   	// #1
  403b38:	b	4038d4 <ferror@plt+0x914>
  403b3c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b40:	ldr	w0, [sp, #88]
  403b44:	ldr	x2, [x8, #1352]
  403b48:	mov	w1, w22
  403b4c:	bl	404db4 <ferror@plt+0x1df4>
  403b50:	str	x0, [sp, #24]
  403b54:	mov	w8, #0x1                   	// #1
  403b58:	b	4038d4 <ferror@plt+0x914>
  403b5c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b60:	mov	w8, #0x1                   	// #1
  403b64:	strb	w8, [x9, #1562]
  403b68:	b	4038d4 <ferror@plt+0x914>
  403b6c:	ldr	x0, [sp, #64]
  403b70:	cbz	x0, 403b84 <ferror@plt+0xbc4>
  403b74:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b78:	ldr	x1, [x8, #1352]
  403b7c:	bl	402cc0 <strcmp@plt>
  403b80:	cbnz	w0, 404378 <ferror@plt+0x13b8>
  403b84:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b88:	ldr	x8, [x8, #1352]
  403b8c:	str	x8, [sp, #64]
  403b90:	mov	w8, #0x1                   	// #1
  403b94:	b	4038d4 <ferror@plt+0x914>
  403b98:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403b9c:	ldr	w0, [sp, #88]
  403ba0:	ldr	x2, [x8, #1352]
  403ba4:	mov	w1, w22
  403ba8:	bl	404bbc <ferror@plt+0x1bfc>
  403bac:	mov	w8, #0x1                   	// #1
  403bb0:	b	4038d4 <ferror@plt+0x914>
  403bb4:	ldr	w8, [x25, #1360]
  403bb8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403bbc:	ldr	x9, [x9, #1352]
  403bc0:	sub	w10, w8, #0x1
  403bc4:	ldr	x10, [x26, w10, sxtw #3]
  403bc8:	cmp	x9, x10
  403bcc:	b.ne	403d6c <ferror@plt+0xdac>  // b.any
  403bd0:	ldrb	w10, [x9], #1
  403bd4:	sub	w11, w10, #0x30
  403bd8:	cmp	w11, #0xa
  403bdc:	b.cc	403bd0 <ferror@plt+0xc10>  // b.lo, b.ul, b.last
  403be0:	cmp	w10, #0x0
  403be4:	cset	w9, ne  // ne = any
  403be8:	sub	w8, w8, w9
  403bec:	str	w8, [x25, #1360]
  403bf0:	mov	w8, #0x1                   	// #1
  403bf4:	b	4038d4 <ferror@plt+0x914>
  403bf8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403bfc:	ldr	x8, [x8, #1352]
  403c00:	str	x8, [sp, #56]
  403c04:	mov	w8, #0x1                   	// #1
  403c08:	b	4038d4 <ferror@plt+0x914>
  403c0c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403c10:	ldr	w0, [sp, #88]
  403c14:	ldr	x2, [x8, #1352]
  403c18:	mov	w1, w22
  403c1c:	bl	4049fc <ferror@plt+0x1a3c>
  403c20:	mov	w8, #0x1                   	// #1
  403c24:	b	4038d4 <ferror@plt+0x914>
  403c28:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  403c2c:	ldr	x0, [x23, #1552]
  403c30:	cbz	x0, 403c44 <ferror@plt+0xc84>
  403c34:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403c38:	ldr	x1, [x8, #1352]
  403c3c:	bl	402cc0 <strcmp@plt>
  403c40:	cbnz	w0, 404384 <ferror@plt+0x13c4>
  403c44:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403c48:	ldr	x8, [x8, #1352]
  403c4c:	str	x8, [x23, #1552]
  403c50:	mov	w8, #0x1                   	// #1
  403c54:	b	4038d4 <ferror@plt+0x914>
  403c58:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  403c5c:	mov	w8, #0x1                   	// #1
  403c60:	strb	w8, [x9, #1560]
  403c64:	b	4038d4 <ferror@plt+0x914>
  403c68:	mov	x8, #0xffffffffffffffff    	// #-1
  403c6c:	stp	x8, xzr, [x23, #16]
  403c70:	ldrb	w8, [x0]
  403c74:	cbnz	w8, 4043a8 <ferror@plt+0x13e8>
  403c78:	sub	x0, x29, #0x50
  403c7c:	bl	40498c <ferror@plt+0x19cc>
  403c80:	mov	w8, #0x1                   	// #1
  403c84:	b	4038d4 <ferror@plt+0x914>
  403c88:	mov	w22, #0x63                  	// #99
  403c8c:	ldr	w8, [sp, #80]
  403c90:	ands	w8, w8, #0xff
  403c94:	b.eq	403ca0 <ferror@plt+0xce0>  // b.none
  403c98:	cmp	w22, w8
  403c9c:	b.ne	4043b4 <ferror@plt+0x13f4>  // b.any
  403ca0:	mov	w8, #0x1                   	// #1
  403ca4:	mov	w23, w20
  403ca8:	str	w22, [sp, #80]
  403cac:	tbnz	w8, #0, 4037cc <ferror@plt+0x80c>
  403cb0:	b	403e24 <ferror@plt+0xe64>
  403cb4:	mov	w11, wzr
  403cb8:	ldr	w8, [sp, #20]
  403cbc:	ldr	w9, [sp, #72]
  403cc0:	and	w8, w11, w8
  403cc4:	orr	w9, w9, w8
  403cc8:	str	w9, [sp, #72]
  403ccc:	tbz	w9, #0, 403d64 <ferror@plt+0xda4>
  403cd0:	sub	x0, x29, #0x50
  403cd4:	str	w11, [sp, #72]
  403cd8:	sub	x23, x29, #0x50
  403cdc:	bl	40473c <ferror@plt+0x177c>
  403ce0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403ce4:	ldr	x8, [x8, #1352]
  403ce8:	sub	x1, x29, #0x50
  403cec:	mov	x2, xzr
  403cf0:	add	x0, x8, #0x1
  403cf4:	bl	404758 <ferror@plt+0x1798>
  403cf8:	cbz	x0, 403d18 <ferror@plt+0xd58>
  403cfc:	ldrb	w8, [x0]
  403d00:	cmp	w8, #0x2e
  403d04:	b.ne	403d18 <ferror@plt+0xd58>  // b.any
  403d08:	add	x0, x0, #0x1
  403d0c:	add	x1, x23, #0x8
  403d10:	mov	x2, xzr
  403d14:	bl	404758 <ferror@plt+0x1798>
  403d18:	ldr	x8, [x23]
  403d1c:	cbnz	x8, 403d30 <ferror@plt+0xd70>
  403d20:	ldr	x8, [x23, #8]
  403d24:	cbnz	x8, 403d30 <ferror@plt+0xd70>
  403d28:	mov	x8, #0xffffffffffffffff    	// #-1
  403d2c:	str	x8, [x23]
  403d30:	cbz	x0, 403d48 <ferror@plt+0xd88>
  403d34:	sub	x1, x29, #0x50
  403d38:	mov	w2, wzr
  403d3c:	bl	404830 <ferror@plt+0x1870>
  403d40:	ldrb	w8, [x0]
  403d44:	cbz	w8, 403d74 <ferror@plt+0xdb4>
  403d48:	mov	w8, #0x1                   	// #1
  403d4c:	mov	x23, xzr
  403d50:	str	w8, [sp, #72]
  403d54:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  403d58:	cbnz	x23, 403d6c <ferror@plt+0xdac>
  403d5c:	ldr	x8, [x10, #1352]
  403d60:	b	4038c0 <ferror@plt+0x900>
  403d64:	mov	x23, xzr
  403d68:	cbz	x23, 403d5c <ferror@plt+0xd9c>
  403d6c:	mov	w8, #0x1                   	// #1
  403d70:	b	4038d4 <ferror@plt+0x914>
  403d74:	ldr	w8, [sp, #72]
  403d78:	cbz	w8, 403e00 <ferror@plt+0xe40>
  403d7c:	ldrsw	x8, [x25, #1360]
  403d80:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403d84:	add	x1, x23, #0x10
  403d88:	add	x2, x2, #0xb28
  403d8c:	add	w9, w8, #0x1
  403d90:	str	w9, [x25, #1360]
  403d94:	ldr	x8, [x26, x8, lsl #3]
  403d98:	str	x1, [sp, #72]
  403d9c:	add	x0, x8, #0x1
  403da0:	str	x8, [sp, #8]
  403da4:	bl	404758 <ferror@plt+0x1798>
  403da8:	cbz	x0, 4043c0 <ferror@plt+0x1400>
  403dac:	ldrb	w8, [x0]
  403db0:	cmp	w8, #0x2e
  403db4:	b.ne	403dcc <ferror@plt+0xe0c>  // b.any
  403db8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  403dbc:	add	x0, x0, #0x1
  403dc0:	add	x1, x23, #0x18
  403dc4:	add	x2, x2, #0xb63
  403dc8:	bl	404758 <ferror@plt+0x1798>
  403dcc:	ldr	x8, [x23, #24]
  403dd0:	cbnz	x8, 403dec <ferror@plt+0xe2c>
  403dd4:	ldr	x8, [sp, #72]
  403dd8:	ldr	x8, [x8]
  403ddc:	cbz	x8, 403dec <ferror@plt+0xe2c>
  403de0:	ldr	x9, [sp, #72]
  403de4:	sub	x8, x8, #0x1
  403de8:	str	x8, [x9]
  403dec:	sub	x1, x29, #0x50
  403df0:	mov	w2, #0x1                   	// #1
  403df4:	bl	404830 <ferror@plt+0x1870>
  403df8:	ldrb	w8, [x0]
  403dfc:	cbnz	w8, 4043e0 <ferror@plt+0x1420>
  403e00:	mov	w9, #0x1                   	// #1
  403e04:	mov	w8, #0x1                   	// #1
  403e08:	sub	x0, x29, #0x50
  403e0c:	str	w8, [sp, #72]
  403e10:	strb	w9, [x23, #57]
  403e14:	bl	40498c <ferror@plt+0x19cc>
  403e18:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  403e1c:	cbnz	x23, 403d6c <ferror@plt+0xdac>
  403e20:	b	403d5c <ferror@plt+0xd9c>
  403e24:	ldr	x20, [sp, #56]
  403e28:	cbz	x20, 403ef8 <ferror@plt+0xf38>
  403e2c:	ldr	x26, [sp, #64]
  403e30:	sub	x27, x29, #0x98
  403e34:	cbnz	x24, 404410 <ferror@plt+0x1450>
  403e38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  403e3c:	add	x1, x1, #0x88
  403e40:	mov	x0, x20
  403e44:	bl	404e50 <ferror@plt+0x1e90>
  403e48:	mov	x21, x0
  403e4c:	add	x0, sp, #0x58
  403e50:	bl	40f4b8 <ferror@plt+0xc4f8>
  403e54:	add	x1, sp, #0x58
  403e58:	mov	x0, x21
  403e5c:	bl	40f57c <ferror@plt+0xc5bc>
  403e60:	tbz	w0, #0, 404484 <ferror@plt+0x14c4>
  403e64:	mov	x0, x21
  403e68:	mov	x1, x20
  403e6c:	bl	404e8c <ferror@plt+0x1ecc>
  403e70:	ldr	x8, [sp, #88]
  403e74:	cbz	x8, 404490 <ferror@plt+0x14d0>
  403e78:	mov	x0, x19
  403e7c:	bl	402d10 <free@plt>
  403e80:	ldp	x24, x19, [sp, #88]
  403e84:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x29a4>
  403e88:	mov	x21, xzr
  403e8c:	add	x22, x22, #0x360
  403e90:	cmp	x24, x21
  403e94:	b.eq	403f00 <ferror@plt+0xf40>  // b.none
  403e98:	ldr	x25, [x19, x21, lsl #3]
  403e9c:	mov	x1, x22
  403ea0:	mov	x0, x25
  403ea4:	bl	402cc0 <strcmp@plt>
  403ea8:	cbz	w0, 404284 <ferror@plt+0x12c4>
  403eac:	ldrb	w8, [x25]
  403eb0:	add	x21, x21, #0x1
  403eb4:	cbnz	w8, 403e90 <ferror@plt+0xed0>
  403eb8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  403ebc:	add	x1, x1, #0xd78
  403ec0:	mov	w2, #0x5                   	// #5
  403ec4:	mov	x0, xzr
  403ec8:	bl	402ea0 <dcgettext@plt>
  403ecc:	mov	x19, x0
  403ed0:	mov	w1, #0x3                   	// #3
  403ed4:	mov	w0, wzr
  403ed8:	mov	x2, x20
  403edc:	bl	40e34c <ferror@plt+0xb38c>
  403ee0:	mov	x3, x0
  403ee4:	mov	w0, #0x2                   	// #2
  403ee8:	mov	w1, wzr
  403eec:	mov	x2, x19
  403ef0:	mov	x4, x21
  403ef4:	bl	4028e0 <error@plt>
  403ef8:	ldr	x26, [sp, #64]
  403efc:	sub	x27, x29, #0x98
  403f00:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  403f04:	ldr	x21, [x22, #1568]
  403f08:	cbz	x21, 403fa0 <ferror@plt+0xfe0>
  403f0c:	mov	w20, wzr
  403f10:	b	403f30 <ferror@plt+0xf70>
  403f14:	ldrb	w8, [x21, #51]
  403f18:	ldr	x21, [x21, #64]
  403f1c:	and	w9, w20, #0x1
  403f20:	orr	w8, w8, w9
  403f24:	cmp	w8, #0x0
  403f28:	cset	w20, ne  // ne = any
  403f2c:	cbz	x21, 403fa4 <ferror@plt+0xfe4>
  403f30:	mov	x0, x21
  403f34:	bl	404f14 <ferror@plt+0x1f54>
  403f38:	tbz	w0, #0, 403f14 <ferror@plt+0xf54>
  403f3c:	ldrb	w8, [x21, #55]
  403f40:	cbnz	w8, 403f14 <ferror@plt+0xf54>
  403f44:	ldr	x8, [x27, #32]
  403f48:	str	x8, [x21, #32]
  403f4c:	ldr	x8, [x27, #40]
  403f50:	str	x8, [x21, #40]
  403f54:	ldurb	w8, [x29, #-104]
  403f58:	strb	w8, [x21, #48]
  403f5c:	ldurb	w8, [x29, #-103]
  403f60:	strb	w8, [x21, #49]
  403f64:	ldurb	w8, [x29, #-98]
  403f68:	strb	w8, [x21, #54]
  403f6c:	ldurb	w8, [x29, #-102]
  403f70:	strb	w8, [x21, #50]
  403f74:	ldurb	w8, [x29, #-100]
  403f78:	strb	w8, [x21, #52]
  403f7c:	ldurb	w8, [x29, #-99]
  403f80:	strb	w8, [x21, #53]
  403f84:	ldurb	w8, [x29, #-96]
  403f88:	strb	w8, [x21, #56]
  403f8c:	ldurb	w8, [x29, #-101]
  403f90:	strb	w8, [x21, #51]
  403f94:	ldurb	w8, [x29, #-97]
  403f98:	strb	w8, [x21, #55]
  403f9c:	b	403f14 <ferror@plt+0xf54>
  403fa0:	mov	w20, wzr
  403fa4:	ldr	x8, [x22, #1568]
  403fa8:	cbnz	x8, 403fb8 <ferror@plt+0xff8>
  403fac:	sub	x0, x29, #0x98
  403fb0:	bl	404f14 <ferror@plt+0x1f54>
  403fb4:	tbz	w0, #0, 40407c <ferror@plt+0x10bc>
  403fb8:	mov	w21, wzr
  403fbc:	bl	404f80 <ferror@plt+0x1fc0>
  403fc0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  403fc4:	ldrb	w8, [x8, #1560]
  403fc8:	cmp	w8, #0x1
  403fcc:	b.ne	4040d4 <ferror@plt+0x1114>  // b.any
  403fd0:	cbnz	x26, 4043f0 <ferror@plt+0x1430>
  403fd4:	ldr	w8, [sp, #80]
  403fd8:	tst	w8, #0xff
  403fdc:	b.ne	4043f0 <ferror@plt+0x1430>  // b.any
  403fe0:	ldr	w8, [sp, #44]
  403fe4:	ldr	x9, [sp, #32]
  403fe8:	cbz	x9, 404004 <ferror@plt+0x1044>
  403fec:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  403ff0:	add	x1, x1, #0xb18
  403ff4:	mov	w0, #0x3                   	// #3
  403ff8:	bl	402fb0 <setlocale@plt>
  403ffc:	cmp	x0, #0x0
  404000:	cset	w8, ne  // ne = any
  404004:	tbnz	w8, #0, 404034 <ferror@plt+0x1074>
  404008:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40400c:	add	x1, x1, #0xdaf
  404010:	mov	w2, #0x5                   	// #5
  404014:	mov	x0, xzr
  404018:	bl	402ea0 <dcgettext@plt>
  40401c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  404020:	mov	x3, x0
  404024:	add	x2, x2, #0x6e4
  404028:	mov	w0, wzr
  40402c:	mov	w1, wzr
  404030:	bl	4028e0 <error@plt>
  404034:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404038:	ldrb	w8, [x8, #1400]
  40403c:	cbz	w8, 40409c <ferror@plt+0x10dc>
  404040:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404044:	add	x1, x1, #0xdc4
  404048:	mov	w2, #0x5                   	// #5
  40404c:	mov	x0, xzr
  404050:	bl	402ea0 <dcgettext@plt>
  404054:	mov	x22, x0
  404058:	mov	w0, #0x3                   	// #3
  40405c:	mov	x1, xzr
  404060:	bl	402fb0 <setlocale@plt>
  404064:	bl	40e4cc <ferror@plt+0xb50c>
  404068:	mov	x3, x0
  40406c:	mov	w0, wzr
  404070:	mov	w1, wzr
  404074:	mov	x2, x22
  404078:	b	4040c4 <ferror@plt+0x1104>
  40407c:	sub	x0, x29, #0x98
  404080:	bl	40498c <ferror@plt+0x19cc>
  404084:	ldurb	w8, [x29, #-101]
  404088:	mov	w21, #0x1                   	// #1
  40408c:	orr	w8, w8, w20
  404090:	cmp	w8, #0x0
  404094:	cset	w20, ne  // ne = any
  404098:	b	403fbc <ferror@plt+0xffc>
  40409c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4040a0:	add	x1, x1, #0xdf3
  4040a4:	mov	w2, #0x5                   	// #5
  4040a8:	mov	x0, xzr
  4040ac:	bl	402ea0 <dcgettext@plt>
  4040b0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  4040b4:	mov	x3, x0
  4040b8:	add	x2, x2, #0x6e4
  4040bc:	mov	w0, wzr
  4040c0:	mov	w1, wzr
  4040c4:	bl	4028e0 <error@plt>
  4040c8:	sub	x0, x29, #0x98
  4040cc:	mov	w1, w21
  4040d0:	bl	405008 <ferror@plt+0x2048>
  4040d4:	ldurb	w8, [x29, #-97]
  4040d8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4040dc:	strb	w8, [x9, #1576]
  4040e0:	cbz	w20, 4040ec <ferror@plt+0x112c>
  4040e4:	ldr	x0, [sp, #48]
  4040e8:	bl	405504 <ferror@plt+0x2544>
  4040ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4040f0:	ldr	x8, [x8, #1584]
  4040f4:	cbz	x8, 404154 <ferror@plt+0x1194>
  4040f8:	cbz	x24, 404178 <ferror@plt+0x11b8>
  4040fc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404100:	ldr	x9, [x8, #1592]
  404104:	cbz	x9, 404124 <ferror@plt+0x1164>
  404108:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  40410c:	ldr	w10, [x10, #1000]
  404110:	add	x10, x10, x10, lsl #4
  404114:	lsl	x10, x10, #1
  404118:	cmp	x9, x10
  40411c:	csel	x9, x9, x10, hi  // hi = pmore
  404120:	str	x9, [x8, #1592]
  404124:	ldr	w8, [sp, #80]
  404128:	tst	w8, #0xff
  40412c:	b.eq	4041a0 <ferror@plt+0x11e0>  // b.none
  404130:	cmp	x24, #0x2
  404134:	b.cs	4044b4 <ferror@plt+0x14f4>  // b.hs, b.nlast
  404138:	cbnz	x26, 4044f4 <ferror@plt+0x1534>
  40413c:	ldr	x0, [x19]
  404140:	ldr	w1, [sp, #80]
  404144:	bl	40559c <ferror@plt+0x25dc>
  404148:	mvn	w8, w0
  40414c:	and	w0, w8, #0x1
  404150:	b	40425c <ferror@plt+0x129c>
  404154:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  404158:	add	x0, x0, #0xe28
  40415c:	bl	402f50 <getenv@plt>
  404160:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x19a4>
  404164:	add	x8, x8, #0x71d
  404168:	cmp	x0, #0x0
  40416c:	csel	x0, x8, x0, eq  // eq = none
  404170:	bl	404d48 <ferror@plt+0x1d88>
  404174:	cbnz	x24, 4040fc <ferror@plt+0x113c>
  404178:	mov	x0, x19
  40417c:	bl	402d10 <free@plt>
  404180:	mov	w0, #0x8                   	// #8
  404184:	bl	410160 <ferror@plt+0xd1a0>
  404188:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40418c:	mov	x19, x0
  404190:	add	x8, x8, #0x360
  404194:	mov	w24, #0x1                   	// #1
  404198:	str	x8, [x0]
  40419c:	b	4040fc <ferror@plt+0x113c>
  4041a0:	mov	x0, x19
  4041a4:	mov	x1, x24
  4041a8:	bl	405820 <ferror@plt+0x2860>
  4041ac:	mov	x0, x26
  4041b0:	bl	4058a4 <ferror@plt+0x28e4>
  4041b4:	tbz	w23, #0, 4041f8 <ferror@plt+0x1238>
  4041b8:	mov	w1, #0x10                  	// #16
  4041bc:	mov	x0, x24
  4041c0:	bl	4102c8 <ferror@plt+0xd308>
  4041c4:	cbz	x24, 4041e4 <ferror@plt+0x1224>
  4041c8:	mov	x8, xzr
  4041cc:	mov	x9, x0
  4041d0:	ldr	x10, [x19, x8, lsl #3]
  4041d4:	add	x8, x8, #0x1
  4041d8:	cmp	x8, x24
  4041dc:	str	x10, [x9], #16
  4041e0:	b.cc	4041d0 <ferror@plt+0x1210>  // b.lo, b.ul, b.last
  4041e4:	mov	x1, xzr
  4041e8:	mov	x2, x24
  4041ec:	mov	x3, x26
  4041f0:	bl	4058fc <ferror@plt+0x293c>
  4041f4:	b	404234 <ferror@plt+0x1274>
  4041f8:	ldr	x9, [sp, #24]
  4041fc:	cbnz	x9, 404214 <ferror@plt+0x1254>
  404200:	mov	w0, #0x2                   	// #2
  404204:	bl	40c9fc <ferror@plt+0x9a3c>
  404208:	cmp	x0, #0x8
  40420c:	mov	w8, #0x8                   	// #8
  404210:	csel	x9, x0, x8, cc  // cc = lo, ul, last
  404214:	mov	x8, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  404218:	movk	x8, #0xf0, lsl #48
  40421c:	cmp	x9, x8
  404220:	csel	x3, x9, x8, cc  // cc = lo, ul, last
  404224:	mov	x0, x19
  404228:	mov	x1, x24
  40422c:	mov	x2, x26
  404230:	bl	405be0 <ferror@plt+0x2c20>
  404234:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404238:	ldrb	w8, [x8, #1416]
  40423c:	cmp	w8, #0x1
  404240:	b.ne	404258 <ferror@plt+0x1298>  // b.any
  404244:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404248:	ldr	x0, [x8, #1376]
  40424c:	bl	410dac <ferror@plt+0xddec>
  404250:	cmn	w0, #0x1
  404254:	b.eq	404508 <ferror@plt+0x1548>  // b.none
  404258:	mov	w0, wzr
  40425c:	add	sp, sp, #0x210
  404260:	ldp	x20, x19, [sp, #80]
  404264:	ldp	x22, x21, [sp, #64]
  404268:	ldp	x24, x23, [sp, #48]
  40426c:	ldp	x26, x25, [sp, #32]
  404270:	ldp	x28, x27, [sp, #16]
  404274:	ldp	x29, x30, [sp], #96
  404278:	ret
  40427c:	mov	w0, #0x2                   	// #2
  404280:	bl	4030dc <ferror@plt+0x11c>
  404284:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404288:	add	x1, x1, #0xd39
  40428c:	mov	w2, #0x5                   	// #5
  404290:	mov	x0, xzr
  404294:	bl	402ea0 <dcgettext@plt>
  404298:	ldr	x1, [x19, x21, lsl #3]
  40429c:	mov	x19, x0
  4042a0:	mov	w0, #0x4                   	// #4
  4042a4:	bl	40e24c <ferror@plt+0xb28c>
  4042a8:	mov	x3, x0
  4042ac:	mov	w0, #0x2                   	// #2
  4042b0:	mov	w1, wzr
  4042b4:	mov	x2, x19
  4042b8:	bl	4028e0 <error@plt>
  4042bc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4042c0:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4042c4:	ldr	x0, [x8, #1368]
  4042c8:	ldr	x3, [x9, #1216]
  4042cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4042d0:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  4042d4:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x19a4>
  4042d8:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x19a4>
  4042dc:	add	x1, x1, #0xb9c
  4042e0:	add	x2, x2, #0xcae
  4042e4:	add	x4, x4, #0xcbc
  4042e8:	add	x5, x5, #0xcc9
  4042ec:	mov	x6, xzr
  4042f0:	bl	410048 <ferror@plt+0xd088>
  4042f4:	mov	w0, wzr
  4042f8:	bl	4028c0 <exit@plt>
  4042fc:	mov	w0, wzr
  404300:	bl	4030dc <ferror@plt+0x11c>
  404304:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404308:	add	x1, x1, #0xc78
  40430c:	b	40438c <ferror@plt+0x13cc>
  404310:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404314:	add	x1, x1, #0xc85
  404318:	mov	w2, #0x5                   	// #5
  40431c:	mov	x0, xzr
  404320:	bl	402ea0 <dcgettext@plt>
  404324:	ldr	x8, [x23, #1352]
  404328:	mov	x19, x0
  40432c:	mov	x0, x8
  404330:	bl	40e4cc <ferror@plt+0xb50c>
  404334:	b	4042a8 <ferror@plt+0x12e8>
  404338:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40433c:	add	x1, x1, #0xc9c
  404340:	b	40438c <ferror@plt+0x13cc>
  404344:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404348:	ldr	x0, [x8, #1352]
  40434c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404350:	add	x1, x1, #0xc04
  404354:	bl	404928 <ferror@plt+0x1968>
  404358:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40435c:	ldr	x0, [x8, #1352]
  404360:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404364:	add	x1, x1, #0xbef
  404368:	bl	404928 <ferror@plt+0x1968>
  40436c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404370:	add	x1, x1, #0xc56
  404374:	b	40438c <ferror@plt+0x13cc>
  404378:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40437c:	add	x1, x1, #0xc36
  404380:	b	40438c <ferror@plt+0x13cc>
  404384:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404388:	add	x1, x1, #0xbac
  40438c:	mov	w2, #0x5                   	// #5
  404390:	mov	x0, xzr
  404394:	bl	402ea0 <dcgettext@plt>
  404398:	mov	x2, x0
  40439c:	mov	w0, #0x2                   	// #2
  4043a0:	mov	w1, wzr
  4043a4:	bl	4028e0 <error@plt>
  4043a8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4043ac:	ldr	x0, [x8, #1352]
  4043b0:	b	4043e4 <ferror@plt+0x1424>
  4043b4:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  4043b8:	add	x0, x0, #0xba9
  4043bc:	bl	4049c4 <ferror@plt+0x1a04>
  4043c0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  4043c4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4043c8:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x19a4>
  4043cc:	add	x0, x0, #0x6e5
  4043d0:	add	x1, x1, #0xb41
  4043d4:	add	x3, x3, #0xb4c
  4043d8:	mov	w2, #0x1112                	// #4370
  4043dc:	bl	402f20 <__assert_fail@plt>
  4043e0:	ldr	x0, [sp, #8]
  4043e4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4043e8:	add	x1, x1, #0xb7c
  4043ec:	bl	404928 <ferror@plt+0x1968>
  4043f0:	ldr	w9, [sp, #80]
  4043f4:	mov	w8, #0x6f                  	// #111
  4043f8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x149a4>
  4043fc:	add	x0, x0, #0x3dc
  404400:	tst	w9, #0xff
  404404:	csel	w8, w9, w8, ne  // ne = any
  404408:	strb	w8, [x0]
  40440c:	bl	4049c4 <ferror@plt+0x1a04>
  404410:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404414:	add	x1, x1, #0xcd5
  404418:	mov	w2, #0x5                   	// #5
  40441c:	mov	x0, xzr
  404420:	bl	402ea0 <dcgettext@plt>
  404424:	ldr	x1, [x19]
  404428:	mov	x19, x0
  40442c:	mov	w0, #0x4                   	// #4
  404430:	bl	40e24c <ferror@plt+0xb28c>
  404434:	mov	x3, x0
  404438:	mov	w0, wzr
  40443c:	mov	w1, wzr
  404440:	mov	x2, x19
  404444:	bl	4028e0 <error@plt>
  404448:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40444c:	ldr	x19, [x8, #1344]
  404450:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404454:	add	x1, x1, #0xce6
  404458:	mov	w2, #0x5                   	// #5
  40445c:	mov	x0, xzr
  404460:	bl	402ea0 <dcgettext@plt>
  404464:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  404468:	mov	x3, x0
  40446c:	add	x2, x2, #0xa3e
  404470:	mov	w1, #0x1                   	// #1
  404474:	mov	x0, x19
  404478:	bl	402ca0 <__fprintf_chk@plt>
  40447c:	mov	w0, #0x2                   	// #2
  404480:	bl	4030dc <ferror@plt+0x11c>
  404484:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404488:	add	x1, x1, #0xd1a
  40448c:	b	404498 <ferror@plt+0x14d8>
  404490:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404494:	add	x1, x1, #0xd9e
  404498:	mov	w2, #0x5                   	// #5
  40449c:	mov	x0, xzr
  4044a0:	bl	402ea0 <dcgettext@plt>
  4044a4:	mov	x19, x0
  4044a8:	mov	w0, #0x4                   	// #4
  4044ac:	mov	x1, x20
  4044b0:	b	4042a4 <ferror@plt+0x12e4>
  4044b4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4044b8:	add	x1, x1, #0xe2f
  4044bc:	mov	w2, #0x5                   	// #5
  4044c0:	mov	x0, xzr
  4044c4:	bl	402ea0 <dcgettext@plt>
  4044c8:	ldr	x1, [x19, #8]
  4044cc:	mov	x19, x0
  4044d0:	mov	w0, #0x4                   	// #4
  4044d4:	bl	40e24c <ferror@plt+0xb28c>
  4044d8:	ldr	w8, [sp, #80]
  4044dc:	mov	x3, x0
  4044e0:	mov	w0, #0x2                   	// #2
  4044e4:	mov	w1, wzr
  4044e8:	and	w4, w8, #0xff
  4044ec:	mov	x2, x19
  4044f0:	bl	4028e0 <error@plt>
  4044f4:	ldr	w8, [sp, #80]
  4044f8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x149a4>
  4044fc:	add	x0, x0, #0x3ec
  404500:	strb	w8, [x0]
  404504:	bl	4049c4 <ferror@plt+0x1a04>
  404508:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  40450c:	add	x1, x1, #0xe55
  404510:	mov	w2, #0x5                   	// #5
  404514:	mov	x0, xzr
  404518:	bl	402ea0 <dcgettext@plt>
  40451c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404520:	add	x1, x1, #0x360
  404524:	bl	405e84 <ferror@plt+0x2ec4>
  404528:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40452c:	mov	w9, #0x2                   	// #2
  404530:	str	w9, [x8, #1232]
  404534:	ret
  404538:	ret
  40453c:	stp	x29, x30, [sp, #-96]!
  404540:	stp	x28, x27, [sp, #16]
  404544:	stp	x26, x25, [sp, #32]
  404548:	stp	x24, x23, [sp, #48]
  40454c:	stp	x22, x21, [sp, #64]
  404550:	stp	x20, x19, [sp, #80]
  404554:	mov	x29, sp
  404558:	bl	402cd0 <__ctype_b_loc@plt>
  40455c:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  404560:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  404564:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x149a4>
  404568:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  40456c:	mov	x19, x0
  404570:	mov	x20, xzr
  404574:	add	x21, x21, #0x640
  404578:	add	x22, x22, #0x740
  40457c:	mov	w24, #0x1                   	// #1
  404580:	add	x25, x25, #0x840
  404584:	add	x23, x23, #0x940
  404588:	b	4045b8 <ferror@plt+0x15f8>
  40458c:	mov	w0, w20
  404590:	bl	405eec <ferror@plt+0x2f2c>
  404594:	eor	w8, w0, #0x1
  404598:	and	w8, w8, #0x1
  40459c:	mov	w0, w20
  4045a0:	strb	w8, [x25, x20]
  4045a4:	bl	402a50 <toupper@plt>
  4045a8:	strb	w0, [x23, x20]
  4045ac:	add	x20, x20, #0x1
  4045b0:	cmp	x20, #0x100
  4045b4:	b.eq	4045e4 <ferror@plt+0x1624>  // b.none
  4045b8:	mov	w0, w20
  4045bc:	bl	405eec <ferror@plt+0x2f2c>
  4045c0:	and	w8, w0, #0x1
  4045c4:	strb	w8, [x21, x20]
  4045c8:	ldr	x8, [x19]
  4045cc:	ldrh	w8, [x8, x20, lsl #1]
  4045d0:	bic	w9, w24, w8, lsr #14
  4045d4:	strb	w9, [x22, x20]
  4045d8:	tbz	w8, #3, 40458c <ferror@plt+0x15cc>
  4045dc:	mov	w8, wzr
  4045e0:	b	404598 <ferror@plt+0x15d8>
  4045e4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4045e8:	ldrb	w8, [x8, #1404]
  4045ec:	cbz	w8, 4046b0 <ferror@plt+0x16f0>
  4045f0:	mov	w25, #0xe                   	// #14
  4045f4:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x149a4>
  4045f8:	mov	x24, xzr
  4045fc:	movk	w25, #0x2, lsl #16
  404600:	add	x26, x26, #0x3f0
  404604:	b	404618 <ferror@plt+0x1658>
  404608:	mov	x27, xzr
  40460c:	cmp	x24, #0xc
  404610:	strb	wzr, [x20, x27]
  404614:	b.eq	404694 <ferror@plt+0x16d4>  // b.none
  404618:	add	w0, w24, w25
  40461c:	bl	402a20 <nl_langinfo@plt>
  404620:	mov	x19, x0
  404624:	bl	4028b0 <strlen@plt>
  404628:	mov	x21, x0
  40462c:	add	x0, x0, #0x1
  404630:	bl	410160 <ferror@plt+0xd1a0>
  404634:	mov	x20, x0
  404638:	add	x8, x26, x24, lsl #4
  40463c:	add	x24, x24, #0x1
  404640:	str	x0, [x8]
  404644:	str	w24, [x8, #8]
  404648:	cbz	x21, 404608 <ferror@plt+0x1648>
  40464c:	bl	402cd0 <__ctype_b_loc@plt>
  404650:	mov	x22, x0
  404654:	mov	x27, xzr
  404658:	b	404668 <ferror@plt+0x16a8>
  40465c:	subs	x21, x21, #0x1
  404660:	add	x19, x19, #0x1
  404664:	b.eq	40460c <ferror@plt+0x164c>  // b.none
  404668:	ldrb	w0, [x19]
  40466c:	ldr	x28, [x22]
  404670:	bl	404538 <ferror@plt+0x1578>
  404674:	and	x8, x0, #0xff
  404678:	ldrh	w9, [x28, x8, lsl #1]
  40467c:	tbnz	w9, #0, 40465c <ferror@plt+0x169c>
  404680:	ldrb	w8, [x23, x8]
  404684:	add	x9, x27, #0x1
  404688:	strb	w8, [x20, x27]
  40468c:	mov	x27, x9
  404690:	b	40465c <ferror@plt+0x169c>
  404694:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x149a4>
  404698:	adrp	x3, 405000 <ferror@plt+0x2040>
  40469c:	add	x0, x0, #0x3f0
  4046a0:	add	x3, x3, #0xf2c
  4046a4:	mov	w1, #0xc                   	// #12
  4046a8:	mov	w2, #0x10                  	// #16
  4046ac:	bl	402950 <qsort@plt>
  4046b0:	ldp	x20, x19, [sp, #80]
  4046b4:	ldp	x22, x21, [sp, #64]
  4046b8:	ldp	x24, x23, [sp, #48]
  4046bc:	ldp	x26, x25, [sp, #32]
  4046c0:	ldp	x28, x27, [sp, #16]
  4046c4:	ldp	x29, x30, [sp], #96
  4046c8:	ret
  4046cc:	stp	x29, x30, [sp, #-32]!
  4046d0:	str	x19, [sp, #16]
  4046d4:	mov	x29, sp
  4046d8:	mov	w19, w0
  4046dc:	bl	405f48 <ferror@plt+0x2f88>
  4046e0:	mov	w0, w19
  4046e4:	mov	x1, xzr
  4046e8:	bl	4029f0 <signal@plt>
  4046ec:	mov	w0, w19
  4046f0:	bl	4028d0 <raise@plt>
  4046f4:	ldr	x19, [sp, #16]
  4046f8:	ldp	x29, x30, [sp], #32
  4046fc:	ret
  404700:	sub	sp, sp, #0xa0
  404704:	stp	x29, x30, [sp, #144]
  404708:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40470c:	ldr	x8, [x8, #2624]
  404710:	add	x29, sp, #0x90
  404714:	cbz	x8, 40472c <ferror@plt+0x176c>
  404718:	add	x0, sp, #0x8
  40471c:	bl	405f80 <ferror@plt+0x2fc0>
  404720:	bl	405f48 <ferror@plt+0x2f88>
  404724:	add	x0, sp, #0x8
  404728:	bl	405fbc <ferror@plt+0x2ffc>
  40472c:	bl	40a13c <ferror@plt+0x717c>
  404730:	ldp	x29, x30, [sp, #144]
  404734:	add	sp, sp, #0xa0
  404738:	ret
  40473c:	movi	v0.2d, #0x0
  404740:	mov	x8, #0xffffffffffffffff    	// #-1
  404744:	str	xzr, [x0, #64]
  404748:	stp	q0, q0, [x0, #32]
  40474c:	stp	q0, q0, [x0]
  404750:	str	x8, [x0, #16]
  404754:	ret
  404758:	sub	sp, sp, #0x40
  40475c:	stp	x29, x30, [sp, #16]
  404760:	add	x29, sp, #0x10
  404764:	adrp	x4, 414000 <_obstack_memory_used@@Base+0x29a4>
  404768:	str	x21, [sp, #32]
  40476c:	stp	x20, x19, [sp, #48]
  404770:	mov	x20, x2
  404774:	mov	x21, x1
  404778:	add	x4, x4, #0xb18
  40477c:	add	x1, x29, #0x18
  404780:	add	x3, sp, #0x8
  404784:	mov	w2, #0xa                   	// #10
  404788:	mov	x19, x0
  40478c:	bl	4109e8 <ferror@plt+0xda28>
  404790:	cmp	w0, #0x4
  404794:	b.hi	4047c0 <ferror@plt+0x1800>  // b.pmore
  404798:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x9a4>
  40479c:	mov	w8, w0
  4047a0:	add	x9, x9, #0x5e6
  4047a4:	adr	x10, 4047b8 <ferror@plt+0x17f8>
  4047a8:	ldrb	w11, [x9, x8]
  4047ac:	add	x10, x10, x11, lsl #2
  4047b0:	mov	x8, #0xffffffffffffffff    	// #-1
  4047b4:	br	x10
  4047b8:	ldr	x8, [sp, #8]
  4047bc:	str	x8, [x21]
  4047c0:	ldr	x0, [x29, #24]
  4047c4:	ldp	x20, x19, [sp, #48]
  4047c8:	ldr	x21, [sp, #32]
  4047cc:	ldp	x29, x30, [sp, #16]
  4047d0:	add	sp, sp, #0x40
  4047d4:	ret
  4047d8:	cbnz	x20, 4047e4 <ferror@plt+0x1824>
  4047dc:	mov	x0, xzr
  4047e0:	b	4047c4 <ferror@plt+0x1804>
  4047e4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4047e8:	add	x1, x1, #0x184
  4047ec:	mov	w2, #0x5                   	// #5
  4047f0:	mov	x0, xzr
  4047f4:	bl	402ea0 <dcgettext@plt>
  4047f8:	mov	x21, x0
  4047fc:	mov	w2, #0x5                   	// #5
  404800:	mov	x0, xzr
  404804:	mov	x1, x20
  404808:	bl	402ea0 <dcgettext@plt>
  40480c:	mov	x20, x0
  404810:	mov	x0, x19
  404814:	bl	40e4cc <ferror@plt+0xb50c>
  404818:	mov	x4, x0
  40481c:	mov	w0, #0x2                   	// #2
  404820:	mov	w1, wzr
  404824:	mov	x2, x21
  404828:	mov	x3, x20
  40482c:	bl	4028e0 <error@plt>
  404830:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x9a4>
  404834:	adrp	x12, 426000 <_obstack_memory_used@@Base+0x149a4>
  404838:	adrp	x13, 426000 <_obstack_memory_used@@Base+0x149a4>
  40483c:	adrp	x14, 426000 <_obstack_memory_used@@Base+0x149a4>
  404840:	and	w8, w2, #0xfffffffd
  404844:	sub	w9, w2, #0x1
  404848:	add	x10, x10, #0x5eb
  40484c:	mov	w11, #0x1                   	// #1
  404850:	add	x12, x12, #0x840
  404854:	add	x13, x13, #0x940
  404858:	add	x14, x14, #0x740
  40485c:	b	404868 <ferror@plt+0x18a8>
  404860:	strb	w11, [x1, #56]
  404864:	add	x0, x0, #0x1
  404868:	ldrb	w15, [x0]
  40486c:	sub	w15, w15, #0x4d
  404870:	cmp	w15, #0x25
  404874:	b.hi	404924 <ferror@plt+0x1964>  // b.pmore
  404878:	adr	x16, 404860 <ferror@plt+0x18a0>
  40487c:	ldrb	w17, [x10, x15]
  404880:	add	x16, x16, x17, lsl #2
  404884:	br	x16
  404888:	strb	w11, [x1, #54]
  40488c:	add	x0, x0, #0x1
  404890:	b	404868 <ferror@plt+0x18a8>
  404894:	strb	w11, [x1, #51]
  404898:	add	x0, x0, #0x1
  40489c:	b	404868 <ferror@plt+0x18a8>
  4048a0:	cbz	w8, 40490c <ferror@plt+0x194c>
  4048a4:	cmp	w9, #0x1
  4048a8:	b.hi	404864 <ferror@plt+0x18a4>  // b.pmore
  4048ac:	b	404918 <ferror@plt+0x1958>
  4048b0:	str	x12, [x1, #32]
  4048b4:	add	x0, x0, #0x1
  4048b8:	b	404868 <ferror@plt+0x18a8>
  4048bc:	str	x13, [x1, #40]
  4048c0:	add	x0, x0, #0x1
  4048c4:	b	404868 <ferror@plt+0x18a8>
  4048c8:	strb	w11, [x1, #52]
  4048cc:	add	x0, x0, #0x1
  4048d0:	b	404868 <ferror@plt+0x18a8>
  4048d4:	strb	w11, [x1, #53]
  4048d8:	add	x0, x0, #0x1
  4048dc:	b	404868 <ferror@plt+0x18a8>
  4048e0:	ldr	x15, [x1, #32]
  4048e4:	cbnz	x15, 404864 <ferror@plt+0x18a4>
  4048e8:	str	x14, [x1, #32]
  4048ec:	add	x0, x0, #0x1
  4048f0:	b	404868 <ferror@plt+0x18a8>
  4048f4:	strb	w11, [x1, #50]
  4048f8:	add	x0, x0, #0x1
  4048fc:	b	404868 <ferror@plt+0x18a8>
  404900:	strb	w11, [x1, #55]
  404904:	add	x0, x0, #0x1
  404908:	b	404868 <ferror@plt+0x18a8>
  40490c:	strb	w11, [x1, #48]
  404910:	cmp	w9, #0x1
  404914:	b.hi	404864 <ferror@plt+0x18a4>  // b.pmore
  404918:	strb	w11, [x1, #49]
  40491c:	add	x0, x0, #0x1
  404920:	b	404868 <ferror@plt+0x18a8>
  404924:	ret
  404928:	stp	x29, x30, [sp, #-48]!
  40492c:	stp	x20, x19, [sp, #32]
  404930:	mov	x19, x1
  404934:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404938:	mov	x20, x0
  40493c:	add	x1, x1, #0x1a5
  404940:	mov	w2, #0x5                   	// #5
  404944:	mov	x0, xzr
  404948:	str	x21, [sp, #16]
  40494c:	mov	x29, sp
  404950:	bl	402ea0 <dcgettext@plt>
  404954:	mov	x21, x0
  404958:	mov	w2, #0x5                   	// #5
  40495c:	mov	x0, xzr
  404960:	mov	x1, x19
  404964:	bl	402ea0 <dcgettext@plt>
  404968:	mov	x19, x0
  40496c:	mov	x0, x20
  404970:	bl	40e4cc <ferror@plt+0xb50c>
  404974:	mov	x4, x0
  404978:	mov	w0, #0x2                   	// #2
  40497c:	mov	w1, wzr
  404980:	mov	x2, x21
  404984:	mov	x3, x19
  404988:	bl	4028e0 <error@plt>
  40498c:	stp	x29, x30, [sp, #-16]!
  404990:	mov	w1, #0x48                  	// #72
  404994:	mov	x29, sp
  404998:	bl	4102f4 <ferror@plt+0xd334>
  40499c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4049a0:	add	x8, x8, #0x620
  4049a4:	ldr	x10, [x8]
  4049a8:	mov	x9, x8
  4049ac:	add	x8, x10, #0x40
  4049b0:	cbnz	x10, 4049a4 <ferror@plt+0x19e4>
  4049b4:	str	x0, [x9]
  4049b8:	str	xzr, [x0, #64]
  4049bc:	ldp	x29, x30, [sp], #16
  4049c0:	ret
  4049c4:	stp	x29, x30, [sp, #-32]!
  4049c8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4049cc:	str	x19, [sp, #16]
  4049d0:	mov	x19, x0
  4049d4:	add	x1, x1, #0x208
  4049d8:	mov	w2, #0x5                   	// #5
  4049dc:	mov	x0, xzr
  4049e0:	mov	x29, sp
  4049e4:	bl	402ea0 <dcgettext@plt>
  4049e8:	mov	x2, x0
  4049ec:	mov	w0, #0x2                   	// #2
  4049f0:	mov	w1, wzr
  4049f4:	mov	x3, x19
  4049f8:	bl	4028e0 <error@plt>
  4049fc:	sub	sp, sp, #0x60
  404a00:	stp	x29, x30, [sp, #48]
  404a04:	stp	x20, x19, [sp, #80]
  404a08:	add	x29, sp, #0x30
  404a0c:	mov	x19, x2
  404a10:	stp	x22, x21, [sp, #64]
  404a14:	mov	w21, w1
  404a18:	mov	w20, w0
  404a1c:	sub	x3, x29, #0x8
  404a20:	mov	w2, #0xa                   	// #10
  404a24:	mov	x0, x19
  404a28:	mov	x1, xzr
  404a2c:	mov	x4, xzr
  404a30:	bl	4109e8 <ferror@plt+0xda28>
  404a34:	mov	w22, w0
  404a38:	add	x1, sp, #0x18
  404a3c:	mov	w0, #0x7                   	// #7
  404a40:	bl	402e10 <getrlimit@plt>
  404a44:	ldr	w8, [sp, #24]
  404a48:	cmp	w0, #0x0
  404a4c:	mov	w9, #0x11                  	// #17
  404a50:	sub	w8, w8, #0x3
  404a54:	csel	w8, w8, w9, eq  // eq = none
  404a58:	cbnz	w22, 404aa0 <ferror@plt+0x1ae0>
  404a5c:	ldur	x9, [x29, #-8]
  404a60:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  404a64:	lsr	x11, x9, #32
  404a68:	str	w9, [x10, #1000]
  404a6c:	cbnz	x11, 404a94 <ferror@plt+0x1ad4>
  404a70:	cmp	w9, #0x1
  404a74:	b.ls	404b38 <ferror@plt+0x1b78>  // b.plast
  404a78:	cmp	w8, w9
  404a7c:	b.cc	404a94 <ferror@plt+0x1ad4>  // b.lo, b.ul, b.last
  404a80:	ldp	x20, x19, [sp, #80]
  404a84:	ldp	x22, x21, [sp, #64]
  404a88:	ldp	x29, x30, [sp, #48]
  404a8c:	add	sp, sp, #0x60
  404a90:	ret
  404a94:	str	w8, [sp, #8]
  404a98:	mov	w22, #0x1                   	// #1
  404a9c:	b	404aa4 <ferror@plt+0x1ae4>
  404aa0:	str	w8, [sp, #8]
  404aa4:	cmp	w22, #0x1
  404aa8:	b.ne	404b1c <ferror@plt+0x1b5c>  // b.any
  404aac:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404ab0:	add	x1, x1, #0x25e
  404ab4:	mov	w2, #0x5                   	// #5
  404ab8:	mov	x0, xzr
  404abc:	bl	402ea0 <dcgettext@plt>
  404ac0:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x9a4>
  404ac4:	sbfiz	x8, x20, #5, #32
  404ac8:	add	x9, x9, #0x660
  404acc:	ldr	x20, [x9, x8]
  404ad0:	mov	x21, x0
  404ad4:	mov	x0, x19
  404ad8:	bl	40e4cc <ferror@plt+0xb50c>
  404adc:	mov	x4, x0
  404ae0:	mov	w0, wzr
  404ae4:	mov	w1, wzr
  404ae8:	mov	x2, x21
  404aec:	mov	x3, x20
  404af0:	bl	4028e0 <error@plt>
  404af4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404af8:	add	x1, x1, #0x279
  404afc:	mov	w2, #0x5                   	// #5
  404b00:	mov	x0, xzr
  404b04:	bl	402ea0 <dcgettext@plt>
  404b08:	mov	x19, x0
  404b0c:	ldr	w0, [sp, #8]
  404b10:	add	x1, sp, #0xc
  404b14:	bl	40c730 <ferror@plt+0x9770>
  404b18:	b	404ba4 <ferror@plt+0x1be4>
  404b1c:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x9a4>
  404b20:	add	x3, x3, #0x660
  404b24:	mov	w0, w22
  404b28:	mov	w1, w20
  404b2c:	mov	w2, w21
  404b30:	mov	x4, x19
  404b34:	bl	410924 <ferror@plt+0xd964>
  404b38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404b3c:	add	x1, x1, #0x227
  404b40:	mov	w2, #0x5                   	// #5
  404b44:	mov	x0, xzr
  404b48:	bl	402ea0 <dcgettext@plt>
  404b4c:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x9a4>
  404b50:	sbfiz	x8, x20, #5, #32
  404b54:	add	x9, x9, #0x660
  404b58:	ldr	x20, [x9, x8]
  404b5c:	mov	x21, x0
  404b60:	mov	x0, x19
  404b64:	bl	40e4cc <ferror@plt+0xb50c>
  404b68:	mov	x4, x0
  404b6c:	mov	w0, wzr
  404b70:	mov	w1, wzr
  404b74:	mov	x2, x21
  404b78:	mov	x3, x20
  404b7c:	bl	4028e0 <error@plt>
  404b80:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404b84:	add	x1, x1, #0x240
  404b88:	mov	w2, #0x5                   	// #5
  404b8c:	mov	x0, xzr
  404b90:	bl	402ea0 <dcgettext@plt>
  404b94:	mov	x19, x0
  404b98:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  404b9c:	add	x0, x0, #0x25c
  404ba0:	bl	40e4cc <ferror@plt+0xb50c>
  404ba4:	mov	x4, x0
  404ba8:	mov	w0, #0x2                   	// #2
  404bac:	mov	w1, wzr
  404bb0:	mov	x2, x19
  404bb4:	mov	x3, x20
  404bb8:	bl	4028e0 <error@plt>
  404bbc:	sub	sp, sp, #0x40
  404bc0:	stp	x29, x30, [sp, #16]
  404bc4:	stp	x20, x19, [sp, #48]
  404bc8:	add	x29, sp, #0x10
  404bcc:	mov	x19, x2
  404bd0:	adrp	x4, 414000 <_obstack_memory_used@@Base+0x29a4>
  404bd4:	str	x21, [sp, #32]
  404bd8:	mov	w20, w1
  404bdc:	mov	w21, w0
  404be0:	add	x4, x4, #0x2a9
  404be4:	add	x1, sp, #0x8
  404be8:	add	x3, x29, #0x18
  404bec:	mov	w2, #0xa                   	// #10
  404bf0:	mov	x0, x19
  404bf4:	bl	4109e8 <ferror@plt+0xda28>
  404bf8:	cbz	w0, 404c40 <ferror@plt+0x1c80>
  404bfc:	cmp	w0, #0x2
  404c00:	b.ne	404c84 <ferror@plt+0x1cc4>  // b.any
  404c04:	ldr	x8, [sp, #8]
  404c08:	ldurb	w9, [x8, #-1]
  404c0c:	sub	w9, w9, #0x30
  404c10:	cmp	w9, #0x9
  404c14:	b.hi	404c20 <ferror@plt+0x1c60>  // b.pmore
  404c18:	ldrb	w9, [x8, #1]
  404c1c:	cbz	w9, 404ccc <ferror@plt+0x1d0c>
  404c20:	mov	w0, #0x2                   	// #2
  404c24:	cbz	w0, 404c88 <ferror@plt+0x1cc8>
  404c28:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x9a4>
  404c2c:	add	x3, x3, #0x660
  404c30:	mov	w1, w21
  404c34:	mov	w2, w20
  404c38:	mov	x4, x19
  404c3c:	bl	410924 <ferror@plt+0xd964>
  404c40:	ldr	x8, [sp, #8]
  404c44:	ldurb	w8, [x8, #-1]
  404c48:	sub	w8, w8, #0x30
  404c4c:	cmp	w8, #0x9
  404c50:	b.hi	404c78 <ferror@plt+0x1cb8>  // b.pmore
  404c54:	ldr	x8, [x29, #24]
  404c58:	lsr	x9, x8, #54
  404c5c:	cbnz	x9, 404cec <ferror@plt+0x1d2c>
  404c60:	mov	w0, wzr
  404c64:	lsl	x8, x8, #10
  404c68:	str	x8, [x29, #24]
  404c6c:	cmp	w0, #0x2
  404c70:	b.ne	404c84 <ferror@plt+0x1cc4>  // b.any
  404c74:	b	404c04 <ferror@plt+0x1c44>
  404c78:	mov	w0, wzr
  404c7c:	cmp	w0, #0x2
  404c80:	b.eq	404c04 <ferror@plt+0x1c44>  // b.none
  404c84:	cbnz	w0, 404c28 <ferror@plt+0x1c68>
  404c88:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  404c8c:	ldr	x8, [x29, #24]
  404c90:	ldr	x10, [x9, #1592]
  404c94:	cmp	x8, x10
  404c98:	b.cc	404cb8 <ferror@plt+0x1cf8>  // b.lo, b.ul, b.last
  404c9c:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  404ca0:	ldr	w10, [x10, #1000]
  404ca4:	add	x10, x10, x10, lsl #4
  404ca8:	lsl	x10, x10, #1
  404cac:	cmp	x8, x10
  404cb0:	csel	x8, x8, x10, hi  // hi = pmore
  404cb4:	str	x8, [x9, #1592]
  404cb8:	ldp	x20, x19, [sp, #48]
  404cbc:	ldr	x21, [sp, #32]
  404cc0:	ldp	x29, x30, [sp, #16]
  404cc4:	add	sp, sp, #0x40
  404cc8:	ret
  404ccc:	ldrb	w8, [x8]
  404cd0:	cmp	w8, #0x25
  404cd4:	b.eq	404cfc <ferror@plt+0x1d3c>  // b.none
  404cd8:	cmp	w8, #0x62
  404cdc:	b.ne	404c20 <ferror@plt+0x1c60>  // b.any
  404ce0:	mov	w0, wzr
  404ce4:	cbz	w0, 404c88 <ferror@plt+0x1cc8>
  404ce8:	b	404c28 <ferror@plt+0x1c68>
  404cec:	mov	w0, #0x1                   	// #1
  404cf0:	cmp	w0, #0x2
  404cf4:	b.ne	404c84 <ferror@plt+0x1cc4>  // b.any
  404cf8:	b	404c04 <ferror@plt+0x1c44>
  404cfc:	bl	40cc0c <ferror@plt+0x9c4c>
  404d00:	ldr	d1, [x29, #24]
  404d04:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  404d08:	fmov	d2, x8
  404d0c:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  404d10:	ucvtf	d1, d1
  404d14:	fmul	d0, d0, d1
  404d18:	fdiv	d0, d0, d2
  404d1c:	fmov	d1, x8
  404d20:	fcmp	d0, d1
  404d24:	b.pl	404d3c <ferror@plt+0x1d7c>  // b.nfrst
  404d28:	mov	w0, wzr
  404d2c:	fcvtzu	x8, d0
  404d30:	str	x8, [x29, #24]
  404d34:	cbz	w0, 404c88 <ferror@plt+0x1cc8>
  404d38:	b	404c28 <ferror@plt+0x1c68>
  404d3c:	mov	w0, #0x1                   	// #1
  404d40:	cbz	w0, 404c88 <ferror@plt+0x1cc8>
  404d44:	b	404c28 <ferror@plt+0x1c68>
  404d48:	stp	x29, x30, [sp, #-48]!
  404d4c:	stp	x20, x19, [sp, #32]
  404d50:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  404d54:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404d58:	ldr	x9, [x20, #1584]
  404d5c:	ldr	x8, [x8, #2632]
  404d60:	str	x21, [sp, #16]
  404d64:	mov	x19, x0
  404d68:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  404d6c:	cmp	x9, x8
  404d70:	mov	x29, sp
  404d74:	b.ne	404d90 <ferror@plt+0x1dd0>  // b.any
  404d78:	ldr	x0, [x21, #2640]
  404d7c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  404d80:	add	x1, x1, #0xa48
  404d84:	mov	w2, #0x8                   	// #8
  404d88:	bl	4101fc <ferror@plt+0xd23c>
  404d8c:	str	x0, [x21, #2640]
  404d90:	ldr	x8, [x20, #1584]
  404d94:	ldr	x9, [x21, #2640]
  404d98:	ldr	x21, [sp, #16]
  404d9c:	add	x10, x8, #0x1
  404da0:	str	x10, [x20, #1584]
  404da4:	str	x19, [x9, x8, lsl #3]
  404da8:	ldp	x20, x19, [sp, #32]
  404dac:	ldp	x29, x30, [sp], #48
  404db0:	ret
  404db4:	stp	x29, x30, [sp, #-48]!
  404db8:	stp	x20, x19, [sp, #32]
  404dbc:	mov	x29, sp
  404dc0:	mov	x19, x2
  404dc4:	adrp	x4, 414000 <_obstack_memory_used@@Base+0x29a4>
  404dc8:	str	x21, [sp, #16]
  404dcc:	mov	w20, w1
  404dd0:	mov	w21, w0
  404dd4:	add	x4, x4, #0xb18
  404dd8:	add	x3, x29, #0x18
  404ddc:	mov	w2, #0xa                   	// #10
  404de0:	mov	x0, x19
  404de4:	mov	x1, xzr
  404de8:	bl	4105b8 <ferror@plt+0xd5f8>
  404dec:	cbz	w0, 404e00 <ferror@plt+0x1e40>
  404df0:	cmp	w0, #0x1
  404df4:	b.ne	404e18 <ferror@plt+0x1e58>  // b.any
  404df8:	mov	x0, #0xffffffffffffffff    	// #-1
  404dfc:	b	404e08 <ferror@plt+0x1e48>
  404e00:	ldr	x0, [x29, #24]
  404e04:	cbz	x0, 404e30 <ferror@plt+0x1e70>
  404e08:	ldp	x20, x19, [sp, #32]
  404e0c:	ldr	x21, [sp, #16]
  404e10:	ldp	x29, x30, [sp], #48
  404e14:	ret
  404e18:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x9a4>
  404e1c:	add	x3, x3, #0x660
  404e20:	mov	w1, w21
  404e24:	mov	w2, w20
  404e28:	mov	x4, x19
  404e2c:	bl	410924 <ferror@plt+0xd964>
  404e30:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404e34:	add	x1, x1, #0x2b6
  404e38:	mov	w2, #0x5                   	// #5
  404e3c:	bl	402ea0 <dcgettext@plt>
  404e40:	mov	x2, x0
  404e44:	mov	w0, #0x2                   	// #2
  404e48:	mov	w1, wzr
  404e4c:	bl	4028e0 <error@plt>
  404e50:	stp	x29, x30, [sp, #-32]!
  404e54:	str	x19, [sp, #16]
  404e58:	mov	x29, sp
  404e5c:	mov	x19, x0
  404e60:	bl	405fe4 <ferror@plt+0x3024>
  404e64:	cbz	x0, 404e74 <ferror@plt+0x1eb4>
  404e68:	ldr	x19, [sp, #16]
  404e6c:	ldp	x29, x30, [sp], #32
  404e70:	ret
  404e74:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404e78:	add	x1, x1, #0x2d9
  404e7c:	mov	w2, #0x5                   	// #5
  404e80:	bl	402ea0 <dcgettext@plt>
  404e84:	mov	x1, x19
  404e88:	bl	405e84 <ferror@plt+0x2ec4>
  404e8c:	stp	x29, x30, [sp, #-32]!
  404e90:	stp	x20, x19, [sp, #16]
  404e94:	mov	x29, sp
  404e98:	mov	x19, x1
  404e9c:	mov	x20, x0
  404ea0:	bl	4029d0 <fileno@plt>
  404ea4:	cmp	w0, #0x1
  404ea8:	b.eq	404ec8 <ferror@plt+0x1f08>  // b.none
  404eac:	cbnz	w0, 404ee0 <ferror@plt+0x1f20>
  404eb0:	mov	x0, x20
  404eb4:	bl	402d80 <feof_unlocked@plt>
  404eb8:	cbz	w0, 404eec <ferror@plt+0x1f2c>
  404ebc:	mov	x0, x20
  404ec0:	bl	402e20 <clearerr_unlocked@plt>
  404ec4:	b	404eec <ferror@plt+0x1f2c>
  404ec8:	mov	x0, x20
  404ecc:	bl	402da0 <fflush_unlocked@plt>
  404ed0:	cbz	w0, 404eec <ferror@plt+0x1f2c>
  404ed4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  404ed8:	add	x1, x1, #0x351
  404edc:	b	404f00 <ferror@plt+0x1f40>
  404ee0:	mov	x0, x20
  404ee4:	bl	410dac <ferror@plt+0xddec>
  404ee8:	cbnz	w0, 404ef8 <ferror@plt+0x1f38>
  404eec:	ldp	x20, x19, [sp, #16]
  404ef0:	ldp	x29, x30, [sp], #32
  404ef4:	ret
  404ef8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  404efc:	add	x1, x1, #0xe55
  404f00:	mov	w2, #0x5                   	// #5
  404f04:	mov	x0, xzr
  404f08:	bl	402ea0 <dcgettext@plt>
  404f0c:	mov	x1, x19
  404f10:	bl	405e84 <ferror@plt+0x2ec4>
  404f14:	stp	x29, x30, [sp, #-32]!
  404f18:	ldr	x8, [x0, #32]
  404f1c:	str	x19, [sp, #16]
  404f20:	mov	x29, sp
  404f24:	cbnz	x8, 404f60 <ferror@plt+0x1fa0>
  404f28:	ldr	x8, [x0, #40]
  404f2c:	mov	x19, x0
  404f30:	cbnz	x8, 404f60 <ferror@plt+0x1fa0>
  404f34:	ldrb	w8, [x19, #48]
  404f38:	cbnz	w8, 404f60 <ferror@plt+0x1fa0>
  404f3c:	ldrb	w8, [x19, #49]
  404f40:	cbnz	w8, 404f60 <ferror@plt+0x1fa0>
  404f44:	mov	x0, x19
  404f48:	bl	40617c <ferror@plt+0x31bc>
  404f4c:	tbnz	w0, #0, 404f60 <ferror@plt+0x1fa0>
  404f50:	ldrb	w8, [x19, #54]
  404f54:	cbnz	w8, 404f60 <ferror@plt+0x1fa0>
  404f58:	ldrb	w8, [x19, #56]
  404f5c:	cbz	w8, 404f70 <ferror@plt+0x1fb0>
  404f60:	mov	w0, wzr
  404f64:	ldr	x19, [sp, #16]
  404f68:	ldp	x29, x30, [sp], #32
  404f6c:	ret
  404f70:	ldrb	w8, [x19, #51]
  404f74:	cmp	w8, #0x0
  404f78:	cset	w0, eq  // eq = none
  404f7c:	b	404f64 <ferror@plt+0x1fa4>
  404f80:	sub	sp, sp, #0x30
  404f84:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  404f88:	ldr	x0, [x8, #1568]
  404f8c:	stp	x29, x30, [sp, #32]
  404f90:	add	x29, sp, #0x20
  404f94:	cbz	x0, 404fe4 <ferror@plt+0x2024>
  404f98:	ldrb	w8, [x0, #50]
  404f9c:	ldrb	w9, [x0, #52]
  404fa0:	ldrb	w10, [x0, #53]
  404fa4:	ldr	x13, [x0, #32]
  404fa8:	ldrb	w11, [x0, #56]
  404fac:	ldrb	w12, [x0, #51]
  404fb0:	add	w8, w9, w8
  404fb4:	ldrb	w9, [x0, #54]
  404fb8:	cmp	x13, #0x0
  404fbc:	add	w8, w8, w10
  404fc0:	orr	w11, w12, w11
  404fc4:	add	w8, w8, w9
  404fc8:	cset	w9, ne  // ne = any
  404fcc:	orr	w9, w9, w11
  404fd0:	add	w8, w9, w8
  404fd4:	cmp	w8, #0x2
  404fd8:	b.cs	404ff0 <ferror@plt+0x2030>  // b.hs, b.nlast
  404fdc:	ldr	x0, [x0, #64]
  404fe0:	cbnz	x0, 404f98 <ferror@plt+0x1fd8>
  404fe4:	ldp	x29, x30, [sp, #32]
  404fe8:	add	sp, sp, #0x30
  404fec:	ret
  404ff0:	mov	x1, sp
  404ff4:	strb	wzr, [x0, #55]
  404ff8:	strh	wzr, [x0, #48]
  404ffc:	bl	4061ac <ferror@plt+0x31ec>
  405000:	mov	x0, sp
  405004:	bl	4049c4 <ferror@plt+0x1a04>
  405008:	sub	sp, sp, #0x140
  40500c:	stp	x29, x30, [sp, #224]
  405010:	stp	x28, x27, [sp, #240]
  405014:	stp	x26, x25, [sp, #256]
  405018:	stp	x24, x23, [sp, #272]
  40501c:	stp	x22, x21, [sp, #288]
  405020:	stp	x20, x19, [sp, #304]
  405024:	ldp	q0, q1, [x0]
  405028:	add	x29, sp, #0xe0
  40502c:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  405030:	ldr	x20, [x10, #1568]
  405034:	stur	q0, [x29, #-96]
  405038:	ldp	q2, q0, [x0, #32]
  40503c:	ldr	x9, [x0, #64]
  405040:	sub	x8, x29, #0x60
  405044:	str	q1, [x8, #16]
  405048:	stur	x9, [x29, #-32]
  40504c:	stp	q2, q0, [x8, #32]
  405050:	cbz	x20, 4053ec <ferror@plt+0x242c>
  405054:	add	x8, sp, #0x38
  405058:	add	x9, sp, #0x8
  40505c:	mov	w22, #0x6b2d                	// #27437
  405060:	adrp	x25, 414000 <_obstack_memory_used@@Base+0x29a4>
  405064:	mov	w19, w1
  405068:	mov	w21, #0x1                   	// #1
  40506c:	movk	w22, #0x20, lsl #16
  405070:	add	x25, x25, #0x364
  405074:	orr	x26, x8, #0x1
  405078:	orr	x27, x9, #0x3
  40507c:	b	405140 <ferror@plt+0x2180>
  405080:	ldrb	w8, [x20, #48]
  405084:	ldurb	w9, [x29, #-48]
  405088:	add	x21, x21, #0x1
  40508c:	eor	w8, w8, #0x1
  405090:	and	w8, w9, w8
  405094:	sturb	w8, [x29, #-48]
  405098:	ldrb	w8, [x20, #49]
  40509c:	ldurb	w9, [x29, #-47]
  4050a0:	eor	w8, w8, #0x1
  4050a4:	and	w8, w9, w8
  4050a8:	sturb	w8, [x29, #-47]
  4050ac:	ldrb	w8, [x20, #54]
  4050b0:	ldurb	w9, [x29, #-42]
  4050b4:	eor	w8, w8, #0x1
  4050b8:	and	w8, w9, w8
  4050bc:	sturb	w8, [x29, #-42]
  4050c0:	ldrb	w8, [x20, #50]
  4050c4:	ldurb	w9, [x29, #-46]
  4050c8:	eor	w8, w8, #0x1
  4050cc:	and	w8, w9, w8
  4050d0:	sturb	w8, [x29, #-46]
  4050d4:	ldrb	w8, [x20, #52]
  4050d8:	ldurb	w9, [x29, #-44]
  4050dc:	eor	w8, w8, #0x1
  4050e0:	and	w8, w9, w8
  4050e4:	sturb	w8, [x29, #-44]
  4050e8:	ldrb	w8, [x20, #53]
  4050ec:	ldurb	w9, [x29, #-43]
  4050f0:	eor	w8, w8, #0x1
  4050f4:	and	w8, w9, w8
  4050f8:	sturb	w8, [x29, #-43]
  4050fc:	ldrb	w8, [x20, #51]
  405100:	ldurb	w9, [x29, #-45]
  405104:	eor	w8, w8, #0x1
  405108:	and	w8, w9, w8
  40510c:	sturb	w8, [x29, #-45]
  405110:	ldrb	w8, [x20, #56]
  405114:	ldurb	w9, [x29, #-40]
  405118:	eor	w8, w8, #0x1
  40511c:	and	w8, w9, w8
  405120:	sturb	w8, [x29, #-40]
  405124:	ldrb	w8, [x20, #55]
  405128:	ldurb	w9, [x29, #-41]
  40512c:	eor	w8, w8, #0x1
  405130:	and	w8, w9, w8
  405134:	sturb	w8, [x29, #-41]
  405138:	ldr	x20, [x20, #64]
  40513c:	cbz	x20, 4053ec <ferror@plt+0x242c>
  405140:	ldrb	w8, [x20, #57]
  405144:	cbz	w8, 405248 <ferror@plt+0x2288>
  405148:	ldr	x8, [x20]
  40514c:	ldr	x24, [x20, #16]
  405150:	add	x1, sp, #0x68
  405154:	cmn	x8, #0x1
  405158:	csel	x23, xzr, x8, eq  // eq = none
  40515c:	mov	w8, #0x2b                  	// #43
  405160:	mov	x0, x23
  405164:	strh	w8, [sp, #56]
  405168:	bl	40c768 <ferror@plt+0x97a8>
  40516c:	mov	x1, x0
  405170:	mov	w2, #0x2d                  	// #45
  405174:	mov	x0, x26
  405178:	bl	402d60 <__stpcpy_chk@plt>
  40517c:	mov	x28, x0
  405180:	add	x0, x23, #0x1
  405184:	add	x1, sp, #0x68
  405188:	str	w22, [sp, #8]
  40518c:	bl	40c768 <ferror@plt+0x97a8>
  405190:	mov	x1, x0
  405194:	mov	w2, #0x2c                  	// #44
  405198:	mov	x0, x27
  40519c:	bl	402d60 <__stpcpy_chk@plt>
  4051a0:	ldr	x8, [x20, #16]
  4051a4:	cmn	x8, #0x1
  4051a8:	b.eq	405200 <ferror@plt+0x2240>  // b.none
  4051ac:	mov	x23, x0
  4051b0:	mov	w8, #0x2d20                	// #11552
  4051b4:	add	x0, x24, #0x1
  4051b8:	add	x1, sp, #0x68
  4051bc:	strh	w8, [x28]
  4051c0:	strb	wzr, [x28, #2]!
  4051c4:	bl	40c768 <ferror@plt+0x97a8>
  4051c8:	mov	x1, x0
  4051cc:	mov	x0, x28
  4051d0:	bl	4029c0 <stpcpy@plt>
  4051d4:	mov	w8, #0x2c                  	// #44
  4051d8:	strh	w8, [x23], #1
  4051dc:	ldr	x8, [x20, #24]
  4051e0:	add	x1, sp, #0x68
  4051e4:	cmn	x8, #0x1
  4051e8:	add	x8, x24, #0x2
  4051ec:	csinc	x0, x8, x24, eq  // eq = none
  4051f0:	bl	40c768 <ferror@plt+0x97a8>
  4051f4:	mov	x1, x0
  4051f8:	mov	x0, x23
  4051fc:	bl	4029c0 <stpcpy@plt>
  405200:	mov	w2, #0x5                   	// #5
  405204:	mov	x0, xzr
  405208:	mov	x1, x25
  40520c:	bl	402ea0 <dcgettext@plt>
  405210:	mov	x23, x0
  405214:	add	x1, sp, #0x38
  405218:	mov	w0, wzr
  40521c:	bl	40e4b4 <ferror@plt+0xb4f4>
  405220:	mov	x28, x0
  405224:	add	x1, sp, #0x8
  405228:	mov	w0, #0x1                   	// #1
  40522c:	bl	40e4b4 <ferror@plt+0xb4f4>
  405230:	mov	x4, x0
  405234:	mov	w0, wzr
  405238:	mov	w1, wzr
  40523c:	mov	x2, x23
  405240:	mov	x3, x28
  405244:	bl	4028e0 <error@plt>
  405248:	ldr	x8, [x20]
  40524c:	cmn	x8, #0x1
  405250:	b.eq	405320 <ferror@plt+0x2360>  // b.none
  405254:	ldr	x9, [x20, #16]
  405258:	cmp	x9, x8
  40525c:	cset	w23, cc  // cc = lo, ul, last
  405260:	cbz	w23, 40528c <ferror@plt+0x22cc>
  405264:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405268:	mov	w2, #0x5                   	// #5
  40526c:	mov	x0, xzr
  405270:	add	x1, x1, #0x391
  405274:	bl	402ea0 <dcgettext@plt>
  405278:	mov	x2, x0
  40527c:	mov	w0, wzr
  405280:	mov	w1, wzr
  405284:	mov	x3, x21
  405288:	bl	4028e0 <error@plt>
  40528c:	mov	x0, x20
  405290:	bl	40617c <ferror@plt+0x31bc>
  405294:	tbz	w0, #0, 4052b0 <ferror@plt+0x22f0>
  405298:	mov	w8, #0x1                   	// #1
  40529c:	ldr	x9, [x20, #16]
  4052a0:	cbz	x9, 4052c4 <ferror@plt+0x2304>
  4052a4:	mov	w9, wzr
  4052a8:	tbz	w23, #0, 4052d4 <ferror@plt+0x2314>
  4052ac:	b	40535c <ferror@plt+0x239c>
  4052b0:	ldrb	w8, [x20, #54]
  4052b4:	cmp	w8, #0x0
  4052b8:	cset	w8, ne  // ne = any
  4052bc:	ldr	x9, [x20, #16]
  4052c0:	cbnz	x9, 4052a4 <ferror@plt+0x22e4>
  4052c4:	ldr	x9, [x20, #24]
  4052c8:	cmp	x9, #0x0
  4052cc:	cset	w9, ne  // ne = any
  4052d0:	tbnz	w23, #0, 40535c <ferror@plt+0x239c>
  4052d4:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  4052d8:	ldr	w10, [x10, #984]
  4052dc:	cmp	w10, #0x100
  4052e0:	cset	w10, ne  // ne = any
  4052e4:	orr	w10, w10, w19
  4052e8:	orr	w9, w9, w10
  4052ec:	tbnz	w9, #0, 40535c <ferror@plt+0x239c>
  4052f0:	ldrb	w9, [x20, #48]
  4052f4:	cmp	w9, #0x0
  4052f8:	cset	w10, ne  // ne = any
  4052fc:	orr	w8, w8, w10
  405300:	cmp	w8, #0x1
  405304:	b.ne	405334 <ferror@plt+0x2374>  // b.any
  405308:	cbz	w9, 40532c <ferror@plt+0x236c>
  40530c:	ldrb	w8, [x20, #49]
  405310:	cbnz	w8, 40535c <ferror@plt+0x239c>
  405314:	ldr	x8, [x20, #24]
  405318:	cbnz	x8, 405334 <ferror@plt+0x2374>
  40531c:	b	40535c <ferror@plt+0x239c>
  405320:	mov	w23, wzr
  405324:	cbnz	w23, 405264 <ferror@plt+0x22a4>
  405328:	b	40528c <ferror@plt+0x22cc>
  40532c:	ldr	x8, [x20, #8]
  405330:	cbz	x8, 40530c <ferror@plt+0x234c>
  405334:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405338:	mov	w2, #0x5                   	// #5
  40533c:	mov	x0, xzr
  405340:	add	x1, x1, #0x3bc
  405344:	bl	402ea0 <dcgettext@plt>
  405348:	mov	x2, x0
  40534c:	mov	w0, wzr
  405350:	mov	w1, wzr
  405354:	mov	x3, x21
  405358:	bl	4028e0 <error@plt>
  40535c:	tbnz	w19, #0, 4053ac <ferror@plt+0x23ec>
  405360:	mov	x0, x20
  405364:	bl	40617c <ferror@plt+0x31bc>
  405368:	tbz	w0, #0, 4053ac <ferror@plt+0x23ec>
  40536c:	ldr	x8, [x20]
  405370:	ldr	x9, [x20, #16]
  405374:	adds	x8, x8, #0x1
  405378:	csinc	x8, x8, xzr, cc  // cc = lo, ul, last
  40537c:	cmp	x9, x8
  405380:	b.cc	4053ac <ferror@plt+0x23ec>  // b.lo, b.ul, b.last
  405384:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405388:	mov	w2, #0x5                   	// #5
  40538c:	mov	x0, xzr
  405390:	add	x1, x1, #0x404
  405394:	bl	402ea0 <dcgettext@plt>
  405398:	mov	x2, x0
  40539c:	mov	w0, wzr
  4053a0:	mov	w1, wzr
  4053a4:	mov	x3, x21
  4053a8:	bl	4028e0 <error@plt>
  4053ac:	ldur	x8, [x29, #-64]
  4053b0:	cbz	x8, 4053c0 <ferror@plt+0x2400>
  4053b4:	ldr	x9, [x20, #32]
  4053b8:	cmp	x8, x9
  4053bc:	b.eq	4053dc <ferror@plt+0x241c>  // b.none
  4053c0:	ldur	x8, [x29, #-56]
  4053c4:	cbz	x8, 405080 <ferror@plt+0x20c0>
  4053c8:	ldr	x9, [x20, #40]
  4053cc:	cmp	x8, x9
  4053d0:	b.ne	405080 <ferror@plt+0x20c0>  // b.any
  4053d4:	stur	xzr, [x29, #-56]
  4053d8:	b	405080 <ferror@plt+0x20c0>
  4053dc:	stur	xzr, [x29, #-64]
  4053e0:	ldur	x8, [x29, #-56]
  4053e4:	cbnz	x8, 4053c8 <ferror@plt+0x2408>
  4053e8:	b	405080 <ferror@plt+0x20c0>
  4053ec:	sub	x0, x29, #0x60
  4053f0:	bl	404f14 <ferror@plt+0x1f54>
  4053f4:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  4053f8:	tbz	w0, #0, 405428 <ferror@plt+0x2468>
  4053fc:	ldurb	w8, [x29, #-41]
  405400:	cbz	w8, 405498 <ferror@plt+0x24d8>
  405404:	ldrb	w8, [x20, #1561]
  405408:	tbnz	w8, #0, 40541c <ferror@plt+0x245c>
  40540c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405410:	ldrb	w8, [x8, #1562]
  405414:	cmp	w8, #0x1
  405418:	b.ne	405498 <ferror@plt+0x24d8>  // b.any
  40541c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405420:	ldr	x8, [x8, #1568]
  405424:	cbz	x8, 405498 <ferror@plt+0x24d8>
  405428:	ldrb	w8, [x20, #1561]
  40542c:	ldurb	w21, [x29, #-41]
  405430:	tbnz	w8, #0, 405444 <ferror@plt+0x2484>
  405434:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405438:	ldrb	w8, [x8, #1562]
  40543c:	tbnz	w8, #0, 405444 <ferror@plt+0x2484>
  405440:	sturb	wzr, [x29, #-41]
  405444:	sub	x0, x29, #0x60
  405448:	add	x1, sp, #0x8
  40544c:	bl	4061ac <ferror@plt+0x31ec>
  405450:	add	x0, sp, #0x8
  405454:	bl	4028b0 <strlen@plt>
  405458:	mov	x19, x0
  40545c:	bl	40629c <ferror@plt+0x32dc>
  405460:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405464:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  405468:	add	x1, x1, #0x431
  40546c:	add	x2, x2, #0x449
  405470:	mov	w4, #0x5                   	// #5
  405474:	mov	x0, xzr
  405478:	mov	x3, x19
  40547c:	bl	402de0 <dcngettext@plt>
  405480:	mov	x2, x0
  405484:	add	x3, sp, #0x8
  405488:	mov	w0, wzr
  40548c:	mov	w1, wzr
  405490:	bl	4028e0 <error@plt>
  405494:	sturb	w21, [x29, #-41]
  405498:	ldurb	w8, [x29, #-41]
  40549c:	cbz	w8, 4054e4 <ferror@plt+0x2524>
  4054a0:	ldrb	w8, [x20, #1561]
  4054a4:	tbnz	w8, #0, 4054e4 <ferror@plt+0x2524>
  4054a8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4054ac:	ldr	x8, [x8, #1568]
  4054b0:	cbz	x8, 4054e4 <ferror@plt+0x2524>
  4054b4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4054b8:	ldrb	w8, [x8, #1562]
  4054bc:	cbnz	w8, 4054e4 <ferror@plt+0x2524>
  4054c0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4054c4:	add	x1, x1, #0x463
  4054c8:	mov	w2, #0x5                   	// #5
  4054cc:	mov	x0, xzr
  4054d0:	bl	402ea0 <dcgettext@plt>
  4054d4:	mov	x2, x0
  4054d8:	mov	w0, wzr
  4054dc:	mov	w1, wzr
  4054e0:	bl	4028e0 <error@plt>
  4054e4:	ldp	x20, x19, [sp, #304]
  4054e8:	ldp	x22, x21, [sp, #288]
  4054ec:	ldp	x24, x23, [sp, #272]
  4054f0:	ldp	x26, x25, [sp, #256]
  4054f4:	ldp	x28, x27, [sp, #240]
  4054f8:	ldp	x29, x30, [sp, #224]
  4054fc:	add	sp, sp, #0x140
  405500:	ret
  405504:	sub	sp, sp, #0x30
  405508:	mov	w1, #0x10                  	// #16
  40550c:	stp	x29, x30, [sp, #16]
  405510:	stp	x20, x19, [sp, #32]
  405514:	add	x29, sp, #0x10
  405518:	mov	x19, x0
  40551c:	bl	40e9d4 <ferror@plt+0xba14>
  405520:	cbz	x0, 405570 <ferror@plt+0x25b0>
  405524:	mov	x1, sp
  405528:	mov	w2, #0x10                  	// #16
  40552c:	mov	x20, x0
  405530:	bl	40ec80 <ferror@plt+0xbcc0>
  405534:	mov	x0, x20
  405538:	bl	40ee40 <ferror@plt+0xbe80>
  40553c:	cbnz	w0, 405580 <ferror@plt+0x25c0>
  405540:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  405544:	add	x19, x19, #0xae0
  405548:	mov	x0, x19
  40554c:	bl	40a210 <ferror@plt+0x7250>
  405550:	mov	x0, sp
  405554:	mov	w1, #0x10                  	// #16
  405558:	mov	x2, x19
  40555c:	bl	40ae84 <ferror@plt+0x7ec4>
  405560:	ldp	x20, x19, [sp, #32]
  405564:	ldp	x29, x30, [sp, #16]
  405568:	add	sp, sp, #0x30
  40556c:	ret
  405570:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405574:	add	x1, x1, #0x2d9
  405578:	mov	w2, #0x5                   	// #5
  40557c:	b	405590 <ferror@plt+0x25d0>
  405580:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  405584:	add	x1, x1, #0xe55
  405588:	mov	w2, #0x5                   	// #5
  40558c:	mov	x0, xzr
  405590:	bl	402ea0 <dcgettext@plt>
  405594:	mov	x1, x19
  405598:	bl	405e84 <ferror@plt+0x2ec4>
  40559c:	sub	sp, sp, #0xe0
  4055a0:	stp	x24, x23, [sp, #176]
  4055a4:	mov	w24, w1
  4055a8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4055ac:	add	x1, x1, #0x88
  4055b0:	stp	x29, x30, [sp, #128]
  4055b4:	stp	x28, x27, [sp, #144]
  4055b8:	stp	x26, x25, [sp, #160]
  4055bc:	stp	x22, x21, [sp, #192]
  4055c0:	stp	x20, x19, [sp, #208]
  4055c4:	add	x29, sp, #0x80
  4055c8:	mov	x19, x0
  4055cc:	bl	404e50 <ferror@plt+0x1e90>
  4055d0:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4055d4:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  4055d8:	ldr	x9, [x9, #1200]
  4055dc:	ldr	x10, [x10, #1592]
  4055e0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4055e4:	adrp	x11, 426000 <_obstack_memory_used@@Base+0x149a4>
  4055e8:	ldrb	w8, [x8, #1562]
  4055ec:	ldr	x11, [x11, #1568]
  4055f0:	cmp	x9, x10
  4055f4:	mov	x20, x0
  4055f8:	csel	x2, x9, x10, hi  // hi = pmore
  4055fc:	sub	x0, x29, #0x38
  405600:	mov	w1, #0x20                  	// #32
  405604:	str	x11, [sp]
  405608:	mvn	w22, w8
  40560c:	bl	4062a0 <ferror@plt+0x32e0>
  405610:	mov	x21, xzr
  405614:	and	w22, w22, #0x1
  405618:	mov	w26, #0x1                   	// #1
  40561c:	and	w28, w24, #0xff
  405620:	str	xzr, [sp, #8]
  405624:	str	xzr, [sp, #40]
  405628:	b	405638 <ferror@plt+0x2678>
  40562c:	mov	w26, wzr
  405630:	mov	w8, wzr
  405634:	tbz	w8, #0, 4057e0 <ferror@plt+0x2820>
  405638:	sub	x0, x29, #0x38
  40563c:	mov	x1, x20
  405640:	mov	x2, x19
  405644:	bl	406304 <ferror@plt+0x3344>
  405648:	tbz	w0, #0, 4057e0 <ferror@plt+0x2820>
  40564c:	sub	x0, x29, #0x38
  405650:	bl	40665c <ferror@plt+0x369c>
  405654:	ldur	x25, [x29, #-40]
  405658:	mov	x24, x0
  40565c:	cbz	x21, 405674 <ferror@plt+0x26b4>
  405660:	sub	x1, x24, #0x20
  405664:	add	x0, sp, #0x28
  405668:	bl	40666c <ferror@plt+0x36ac>
  40566c:	cmp	w0, w22
  405670:	b.ge	4056a0 <ferror@plt+0x26e0>  // b.tcont
  405674:	sub	x27, x24, x25, lsl #5
  405678:	sub	x24, x24, #0x40
  40567c:	add	x0, x24, #0x20
  405680:	cmp	x27, x0
  405684:	b.cs	405750 <ferror@plt+0x2790>  // b.hs, b.nlast
  405688:	mov	x1, x24
  40568c:	bl	40666c <ferror@plt+0x36ac>
  405690:	cmp	w0, w22
  405694:	sub	x24, x24, #0x20
  405698:	b.lt	40567c <ferror@plt+0x26bc>  // b.tstop
  40569c:	add	x24, x24, #0x40
  4056a0:	cmp	w28, #0x63
  4056a4:	b.ne	40562c <ferror@plt+0x266c>  // b.any
  4056a8:	sub	x0, x29, #0x38
  4056ac:	sub	x24, x24, #0x20
  4056b0:	bl	40665c <ferror@plt+0x369c>
  4056b4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4056b8:	ldr	x9, [sp, #8]
  4056bc:	ldr	x25, [x8, #1344]
  4056c0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4056c4:	sub	x8, x0, x24
  4056c8:	mov	w2, #0x5                   	// #5
  4056cc:	mov	x0, xzr
  4056d0:	add	x1, x1, #0x496
  4056d4:	add	x26, x9, x8, asr #5
  4056d8:	bl	402ea0 <dcgettext@plt>
  4056dc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4056e0:	ldr	x27, [x8, #3024]
  4056e4:	mov	x23, x20
  4056e8:	mov	w20, w28
  4056ec:	mov	x28, x0
  4056f0:	add	x1, sp, #0x10
  4056f4:	mov	x0, x26
  4056f8:	bl	40c768 <ferror@plt+0x97a8>
  4056fc:	mov	x5, x0
  405700:	mov	w1, #0x1                   	// #1
  405704:	mov	x0, x25
  405708:	mov	x2, x28
  40570c:	mov	x3, x27
  405710:	mov	x4, x19
  405714:	mov	w28, w20
  405718:	mov	x20, x23
  40571c:	bl	402ca0 <__fprintf_chk@plt>
  405720:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405724:	ldr	x25, [x8, #1344]
  405728:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40572c:	mov	w2, #0x5                   	// #5
  405730:	mov	x0, xzr
  405734:	add	x1, x1, #0x4ac
  405738:	bl	402ea0 <dcgettext@plt>
  40573c:	mov	x2, x0
  405740:	mov	x0, x24
  405744:	mov	x1, x25
  405748:	bl	406758 <ferror@plt+0x3798>
  40574c:	b	40562c <ferror@plt+0x266c>
  405750:	ldr	x8, [x24, #40]
  405754:	ldr	x9, [sp, #8]
  405758:	cmp	x21, x8
  40575c:	add	x9, x25, x9
  405760:	str	x9, [sp, #8]
  405764:	b.cs	405794 <ferror@plt+0x27d4>  // b.hs, b.nlast
  405768:	lsl	x21, x21, #1
  40576c:	cbz	x21, 40577c <ferror@plt+0x27bc>
  405770:	cmp	x21, x8
  405774:	b.cc	405768 <ferror@plt+0x27a8>  // b.lo, b.ul, b.last
  405778:	b	405780 <ferror@plt+0x27c0>
  40577c:	mov	x21, x8
  405780:	ldr	x0, [sp, #40]
  405784:	bl	402d10 <free@plt>
  405788:	mov	x0, x21
  40578c:	bl	410160 <ferror@plt+0xd1a0>
  405790:	str	x0, [sp, #40]
  405794:	ldr	x25, [sp, #40]
  405798:	ldp	x1, x2, [x24, #32]
  40579c:	mov	x0, x25
  4057a0:	bl	402850 <memcpy@plt>
  4057a4:	ldr	x8, [x24, #40]
  4057a8:	str	x8, [sp, #48]
  4057ac:	ldr	x8, [sp]
  4057b0:	cbz	x8, 4057d8 <ferror@plt+0x2818>
  4057b4:	ldr	x8, [x24, #48]
  4057b8:	ldr	x9, [x24, #32]
  4057bc:	sub	x8, x8, x9
  4057c0:	add	x8, x25, x8
  4057c4:	str	x8, [sp, #56]
  4057c8:	ldr	x8, [x24, #56]
  4057cc:	sub	x8, x8, x9
  4057d0:	add	x8, x25, x8
  4057d4:	str	x8, [sp, #64]
  4057d8:	mov	w8, #0x1                   	// #1
  4057dc:	tbnz	w8, #0, 405638 <ferror@plt+0x2678>
  4057e0:	mov	x0, x20
  4057e4:	mov	x1, x19
  4057e8:	bl	404e8c <ferror@plt+0x1ecc>
  4057ec:	ldur	x0, [x29, #-56]
  4057f0:	bl	402d10 <free@plt>
  4057f4:	ldr	x0, [sp, #40]
  4057f8:	bl	402d10 <free@plt>
  4057fc:	and	w0, w26, #0x1
  405800:	ldp	x20, x19, [sp, #208]
  405804:	ldp	x22, x21, [sp, #192]
  405808:	ldp	x24, x23, [sp, #176]
  40580c:	ldp	x26, x25, [sp, #160]
  405810:	ldp	x28, x27, [sp, #144]
  405814:	ldp	x29, x30, [sp, #128]
  405818:	add	sp, sp, #0xe0
  40581c:	ret
  405820:	stp	x29, x30, [sp, #-48]!
  405824:	stp	x22, x21, [sp, #16]
  405828:	stp	x20, x19, [sp, #32]
  40582c:	mov	x29, sp
  405830:	cbz	x1, 405894 <ferror@plt+0x28d4>
  405834:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x29a4>
  405838:	mov	x20, x1
  40583c:	mov	x19, x0
  405840:	add	x21, x21, #0x360
  405844:	b	405854 <ferror@plt+0x2894>
  405848:	subs	x20, x20, #0x1
  40584c:	add	x19, x19, #0x8
  405850:	b.eq	405894 <ferror@plt+0x28d4>  // b.none
  405854:	ldr	x22, [x19]
  405858:	mov	x1, x21
  40585c:	mov	x0, x22
  405860:	bl	402cc0 <strcmp@plt>
  405864:	cbz	w0, 405848 <ferror@plt+0x2888>
  405868:	mov	w1, #0x4                   	// #4
  40586c:	mov	x0, x22
  405870:	bl	402970 <euidaccess@plt>
  405874:	cbz	w0, 405848 <ferror@plt+0x2888>
  405878:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40587c:	add	x1, x1, #0x54f
  405880:	mov	w2, #0x5                   	// #5
  405884:	mov	x0, xzr
  405888:	bl	402ea0 <dcgettext@plt>
  40588c:	ldr	x1, [x19]
  405890:	bl	405e84 <ferror@plt+0x2ec4>
  405894:	ldp	x20, x19, [sp, #32]
  405898:	ldp	x22, x21, [sp, #16]
  40589c:	ldp	x29, x30, [sp], #48
  4058a0:	ret
  4058a4:	stp	x29, x30, [sp, #-32]!
  4058a8:	str	x19, [sp, #16]
  4058ac:	mov	x29, sp
  4058b0:	cbz	x0, 4058d4 <ferror@plt+0x2914>
  4058b4:	mov	w1, #0x41                  	// #65
  4058b8:	movk	w1, #0x8, lsl #16
  4058bc:	mov	w2, #0x1b6                 	// #438
  4058c0:	mov	x19, x0
  4058c4:	bl	402a70 <open@plt>
  4058c8:	tbnz	w0, #31, 4058e0 <ferror@plt+0x2920>
  4058cc:	mov	w1, #0x1                   	// #1
  4058d0:	bl	407e34 <ferror@plt+0x4e74>
  4058d4:	ldr	x19, [sp, #16]
  4058d8:	ldp	x29, x30, [sp], #32
  4058dc:	ret
  4058e0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4058e4:	add	x1, x1, #0x2d9
  4058e8:	mov	w2, #0x5                   	// #5
  4058ec:	mov	x0, xzr
  4058f0:	bl	402ea0 <dcgettext@plt>
  4058f4:	mov	x1, x19
  4058f8:	bl	405e84 <ferror@plt+0x2ec4>
  4058fc:	sub	sp, sp, #0x80
  405900:	stp	x20, x19, [sp, #112]
  405904:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  405908:	ldr	w8, [x19, #1000]
  40590c:	stp	x22, x21, [sp, #96]
  405910:	mov	x21, x2
  405914:	mov	x22, x1
  405918:	cmp	x8, x2
  40591c:	mov	x20, x0
  405920:	stp	x29, x30, [sp, #32]
  405924:	stp	x28, x27, [sp, #48]
  405928:	stp	x26, x25, [sp, #64]
  40592c:	stp	x24, x23, [sp, #80]
  405930:	add	x29, sp, #0x20
  405934:	str	x3, [sp, #8]
  405938:	b.cs	405a50 <ferror@plt+0x2a90>  // b.hs, b.nlast
  40593c:	add	x26, x20, #0x8
  405940:	b	405970 <ferror@plt+0x29b0>
  405944:	sub	x8, x21, x28
  405948:	add	x0, x20, x27, lsl #4
  40594c:	add	x1, x20, x28, lsl #4
  405950:	lsl	x2, x8, #4
  405954:	bl	402860 <memmove@plt>
  405958:	ldr	w8, [x19, #1000]
  40595c:	add	x9, x27, x21
  405960:	sub	x21, x9, x28
  405964:	add	x22, x22, x27
  405968:	cmp	x21, x8
  40596c:	b.ls	405a50 <ferror@plt+0x2a90>  // b.plast
  405970:	ldr	w8, [x19, #1000]
  405974:	cmp	x21, x8
  405978:	b.cs	40598c <ferror@plt+0x29cc>  // b.hs, b.nlast
  40597c:	mov	x27, xzr
  405980:	mov	x28, xzr
  405984:	mov	x9, x21
  405988:	b	4059ec <ferror@plt+0x2a2c>
  40598c:	mov	x28, xzr
  405990:	mov	x27, xzr
  405994:	mov	x25, x26
  405998:	sub	x0, x29, #0x8
  40599c:	bl	407e64 <ferror@plt+0x4ea4>
  4059a0:	ldr	w2, [x19, #1000]
  4059a4:	ldur	x3, [x29, #-8]
  4059a8:	mov	x23, x0
  4059ac:	add	x24, x23, #0xd
  4059b0:	cmp	x22, x2
  4059b4:	add	x0, x20, x28, lsl #4
  4059b8:	csel	x1, x22, x2, cc  // cc = lo, ul, last
  4059bc:	mov	x4, x24
  4059c0:	bl	407e7c <ferror@plt+0x4ebc>
  4059c4:	subs	x8, x22, x0
  4059c8:	stp	x24, x23, [x25, #-8]
  4059cc:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  4059d0:	ldr	w8, [x19, #1000]
  4059d4:	add	x28, x0, x28
  4059d8:	sub	x9, x21, x28
  4059dc:	add	x27, x27, #0x1
  4059e0:	cmp	x9, x8
  4059e4:	add	x25, x25, #0x10
  4059e8:	b.cs	405998 <ferror@plt+0x29d8>  // b.hs, b.nlast
  4059ec:	udiv	x10, x27, x8
  4059f0:	neg	x11, x27
  4059f4:	madd	x10, x10, x8, x11
  4059f8:	add	x8, x8, x10
  4059fc:	subs	x25, x9, x8
  405a00:	b.ls	405944 <ferror@plt+0x2984>  // b.plast
  405a04:	sub	x0, x29, #0x8
  405a08:	add	x23, x25, #0x1
  405a0c:	bl	407e64 <ferror@plt+0x4ea4>
  405a10:	ldur	x3, [x29, #-8]
  405a14:	mov	x24, x0
  405a18:	cmp	x22, x23
  405a1c:	csinc	x1, x22, x25, cc  // cc = lo, ul, last
  405a20:	add	x25, x24, #0xd
  405a24:	add	x0, x20, x28, lsl #4
  405a28:	mov	x2, x23
  405a2c:	mov	x4, x25
  405a30:	bl	407e7c <ferror@plt+0x4ebc>
  405a34:	subs	x8, x22, x0
  405a38:	add	x9, x20, x27, lsl #4
  405a3c:	add	x27, x27, #0x1
  405a40:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  405a44:	add	x28, x0, x28
  405a48:	stp	x25, x24, [x9]
  405a4c:	b	405944 <ferror@plt+0x2984>
  405a50:	ldr	x19, [sp, #8]
  405a54:	mov	x0, x20
  405a58:	mov	x1, x22
  405a5c:	mov	x2, x21
  405a60:	mov	x3, x19
  405a64:	bl	407f20 <ferror@plt+0x4f60>
  405a68:	add	x23, x20, #0x10
  405a6c:	b	405a74 <ferror@plt+0x2ab4>
  405a70:	cbnz	w8, 405b84 <ferror@plt+0x2bc4>
  405a74:	sub	x2, x29, #0x8
  405a78:	mov	x0, x20
  405a7c:	mov	x1, x21
  405a80:	bl	408080 <ferror@plt+0x50c0>
  405a84:	mov	x25, x0
  405a88:	cmp	x0, x21
  405a8c:	b.ne	405acc <ferror@plt+0x2b0c>  // b.any
  405a90:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405a94:	mov	x0, x19
  405a98:	add	x1, x1, #0x55b
  405a9c:	bl	405fe4 <ferror@plt+0x3024>
  405aa0:	cbz	x0, 405b60 <ferror@plt+0x2ba0>
  405aa4:	ldur	x5, [x29, #-8]
  405aa8:	mov	x3, x0
  405aac:	mov	x0, x20
  405ab0:	mov	x1, x22
  405ab4:	mov	x2, x21
  405ab8:	mov	x4, x19
  405abc:	bl	408128 <ferror@plt+0x5168>
  405ac0:	mov	w8, #0x8                   	// #8
  405ac4:	cbnz	w8, 405a70 <ferror@plt+0x2ab0>
  405ac8:	b	405ad4 <ferror@plt+0x2b14>
  405acc:	cmp	x25, #0x2
  405ad0:	b.ls	405ba4 <ferror@plt+0x2be4>  // b.plast
  405ad4:	ldur	x27, [x29, #-8]
  405ad8:	add	x26, x20, x25, lsl #4
  405adc:	sub	x19, x27, #0x8
  405ae0:	ldr	x0, [x19, x25, lsl #3]
  405ae4:	ldr	x1, [x26, #-16]!
  405ae8:	sub	x25, x25, #0x1
  405aec:	bl	404e8c <ferror@plt+0x1ecc>
  405af0:	cmp	x25, #0x2
  405af4:	cset	w1, hi  // hi = pmore
  405af8:	add	x0, sp, #0x10
  405afc:	bl	40871c <ferror@plt+0x575c>
  405b00:	cbz	x0, 405ae0 <ferror@plt+0x2b20>
  405b04:	ldr	x3, [sp, #16]
  405b08:	cmp	x22, x25
  405b0c:	csel	x24, x22, x25, cc  // cc = lo, ul, last
  405b10:	add	x19, x0, #0xd
  405b14:	mov	x28, x0
  405b18:	mov	x0, x20
  405b1c:	mov	x1, x24
  405b20:	mov	x2, x25
  405b24:	mov	x4, x19
  405b28:	mov	x5, x27
  405b2c:	bl	408128 <ferror@plt+0x5168>
  405b30:	stp	x19, x28, [x20]
  405b34:	sub	x19, x21, x25
  405b38:	lsl	x2, x19, #4
  405b3c:	mov	x0, x23
  405b40:	mov	x1, x26
  405b44:	bl	402860 <memmove@plt>
  405b48:	add	x21, x19, #0x1
  405b4c:	ldr	x19, [sp, #8]
  405b50:	sub	x9, x22, x24
  405b54:	mov	w8, wzr
  405b58:	add	x22, x9, #0x1
  405b5c:	b	405a70 <ferror@plt+0x2ab0>
  405b60:	bl	402f30 <__errno_location@plt>
  405b64:	cmp	x25, #0x3
  405b68:	b.cc	405bc4 <ferror@plt+0x2c04>  // b.lo, b.ul, b.last
  405b6c:	ldr	w8, [x0]
  405b70:	cmp	w8, #0x18
  405b74:	b.ne	405bc4 <ferror@plt+0x2c04>  // b.any
  405b78:	mov	w8, wzr
  405b7c:	cbnz	wzr, 405a70 <ferror@plt+0x2ab0>
  405b80:	b	405ad4 <ferror@plt+0x2b14>
  405b84:	ldp	x20, x19, [sp, #112]
  405b88:	ldp	x22, x21, [sp, #96]
  405b8c:	ldp	x24, x23, [sp, #80]
  405b90:	ldp	x26, x25, [sp, #64]
  405b94:	ldp	x28, x27, [sp, #48]
  405b98:	ldp	x29, x30, [sp, #32]
  405b9c:	add	sp, sp, #0x80
  405ba0:	ret
  405ba4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405ba8:	add	x1, x1, #0x2d9
  405bac:	mov	w2, #0x5                   	// #5
  405bb0:	mov	x0, xzr
  405bb4:	bl	402ea0 <dcgettext@plt>
  405bb8:	lsl	x8, x25, #4
  405bbc:	ldr	x1, [x20, x8]
  405bc0:	bl	405e84 <ferror@plt+0x2ec4>
  405bc4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405bc8:	add	x1, x1, #0x2d9
  405bcc:	mov	w2, #0x5                   	// #5
  405bd0:	mov	x0, xzr
  405bd4:	bl	402ea0 <dcgettext@plt>
  405bd8:	mov	x1, x19
  405bdc:	bl	405e84 <ferror@plt+0x2ec4>
  405be0:	sub	sp, sp, #0x130
  405be4:	stp	x29, x30, [sp, #208]
  405be8:	stp	x26, x25, [sp, #240]
  405bec:	stp	x22, x21, [sp, #272]
  405bf0:	stp	x20, x19, [sp, #288]
  405bf4:	add	x29, sp, #0xd0
  405bf8:	mov	x21, x3
  405bfc:	mov	x22, x1
  405c00:	mov	w25, wzr
  405c04:	mov	x20, xzr
  405c08:	stp	x28, x27, [sp, #224]
  405c0c:	stp	x24, x23, [sp, #256]
  405c10:	stp	x0, x2, [sp]
  405c14:	stur	xzr, [x29, #-40]
  405c18:	b	405c30 <ferror@plt+0x2c70>
  405c1c:	mov	x0, x27
  405c20:	mov	x1, x26
  405c24:	bl	404e8c <ferror@plt+0x1ecc>
  405c28:	mov	w8, wzr
  405c2c:	cbnz	w8, 405e04 <ferror@plt+0x2e44>
  405c30:	cbz	x22, 405e04 <ferror@plt+0x2e44>
  405c34:	ldr	x8, [sp]
  405c38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405c3c:	add	x1, x1, #0x88
  405c40:	ldr	x26, [x8]
  405c44:	mov	x0, x26
  405c48:	bl	404e50 <ferror@plt+0x1e90>
  405c4c:	mov	x27, x0
  405c50:	cmp	x21, #0x2
  405c54:	stur	x0, [x29, #-72]
  405c58:	b.cc	405dc4 <ferror@plt+0x2e04>  // b.lo, b.ul, b.last
  405c5c:	mov	w28, #0x20                  	// #32
  405c60:	mov	w8, #0x1                   	// #1
  405c64:	lsl	x8, x8, #1
  405c68:	cmp	x8, x21
  405c6c:	add	x28, x28, #0x20
  405c70:	b.cc	405c64 <ferror@plt+0x2ca4>  // b.lo, b.ul, b.last
  405c74:	ldur	x8, [x29, #-40]
  405c78:	cbz	x8, 405dd0 <ferror@plt+0x2e10>
  405c7c:	ldr	x8, [sp]
  405c80:	sub	x22, x22, #0x1
  405c84:	sturb	wzr, [x29, #-16]
  405c88:	add	x8, x8, #0x8
  405c8c:	str	x8, [sp]
  405c90:	orr	x8, x28, #0x1
  405c94:	str	x8, [sp, #16]
  405c98:	b	405cc8 <ferror@plt+0x2d08>
  405c9c:	ldur	x1, [x29, #-80]
  405ca0:	sub	x0, x24, #0x20
  405ca4:	mov	x2, x19
  405ca8:	bl	409374 <ferror@plt+0x63b4>
  405cac:	ldur	x0, [x29, #-80]
  405cb0:	mov	x1, x19
  405cb4:	bl	404e8c <ferror@plt+0x1ecc>
  405cb8:	tst	w25, #0x1
  405cbc:	mov	w8, #0x8                   	// #8
  405cc0:	csel	w8, w8, wzr, ne  // ne = any
  405cc4:	cbnz	w8, 405df8 <ferror@plt+0x2e38>
  405cc8:	sub	x0, x29, #0x40
  405ccc:	mov	x1, x27
  405cd0:	mov	x2, x26
  405cd4:	bl	406304 <ferror@plt+0x3344>
  405cd8:	tbz	w0, #0, 405c1c <ferror@plt+0x2c5c>
  405cdc:	ldurb	w19, [x29, #-16]
  405ce0:	cbz	x22, 405d14 <ferror@plt+0x2d54>
  405ce4:	cbz	w19, 405d14 <ferror@plt+0x2d54>
  405ce8:	ldp	x10, x9, [x29, #-48]
  405cec:	ldur	x8, [x29, #-56]
  405cf0:	sub	x9, x9, x8
  405cf4:	msub	x9, x10, x28, x9
  405cf8:	ldr	x10, [sp, #16]
  405cfc:	cmp	x10, x9
  405d00:	b.cs	405d14 <ferror@plt+0x2d54>  // b.hs, b.nlast
  405d04:	stur	x8, [x29, #-32]
  405d08:	mov	w8, #0x7                   	// #7
  405d0c:	cbz	w8, 405cc8 <ferror@plt+0x2d08>
  405d10:	b	405df8 <ferror@plt+0x2e38>
  405d14:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405d18:	sub	x0, x29, #0x40
  405d1c:	str	xzr, [x8, #2968]
  405d20:	bl	40665c <ferror@plt+0x369c>
  405d24:	ldur	x8, [x29, #-32]
  405d28:	orr	x9, x20, x22
  405d2c:	mov	x24, x0
  405d30:	orr	x8, x9, x8
  405d34:	cbnz	x8, 405d68 <ferror@plt+0x2da8>
  405d38:	cbz	w19, 405d68 <ferror@plt+0x2da8>
  405d3c:	mov	x0, x27
  405d40:	mov	x1, x26
  405d44:	bl	404e8c <ferror@plt+0x1ecc>
  405d48:	ldr	x19, [sp, #8]
  405d4c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405d50:	add	x1, x1, #0x55b
  405d54:	mov	x0, x19
  405d58:	bl	404e50 <ferror@plt+0x1e90>
  405d5c:	stur	x0, [x29, #-80]
  405d60:	mov	w25, #0x1                   	// #1
  405d64:	b	405d78 <ferror@plt+0x2db8>
  405d68:	sub	x0, x29, #0x50
  405d6c:	add	x20, x20, #0x1
  405d70:	bl	407e64 <ferror@plt+0x4ea4>
  405d74:	add	x19, x0, #0xd
  405d78:	ldur	x23, [x29, #-48]
  405d7c:	cmp	x23, #0x2
  405d80:	b.cc	405c9c <ferror@plt+0x2cdc>  // b.lo, b.ul, b.last
  405d84:	add	x0, sp, #0x18
  405d88:	mov	x1, x21
  405d8c:	bl	409154 <ferror@plt+0x6194>
  405d90:	mov	x0, x21
  405d94:	mov	x1, x23
  405d98:	mov	x2, x24
  405d9c:	bl	4091a0 <ferror@plt+0x61e0>
  405da0:	ldur	x5, [x29, #-80]
  405da4:	add	x3, x0, #0x88
  405da8:	add	x4, sp, #0x18
  405dac:	mov	x0, x24
  405db0:	mov	x1, x21
  405db4:	mov	x2, x23
  405db8:	mov	x6, x19
  405dbc:	bl	409220 <ferror@plt+0x6260>
  405dc0:	b	405cac <ferror@plt+0x2cec>
  405dc4:	mov	w28, #0x30                  	// #48
  405dc8:	ldur	x8, [x29, #-40]
  405dcc:	cbnz	x8, 405c7c <ferror@plt+0x2cbc>
  405dd0:	ldr	x1, [sp]
  405dd4:	sub	x0, x29, #0x48
  405dd8:	mov	x2, x22
  405ddc:	mov	x3, x28
  405de0:	bl	408fe4 <ferror@plt+0x6024>
  405de4:	mov	x2, x0
  405de8:	sub	x0, x29, #0x40
  405dec:	mov	x1, x28
  405df0:	bl	4062a0 <ferror@plt+0x32e0>
  405df4:	b	405c7c <ferror@plt+0x2cbc>
  405df8:	cmp	w8, #0x7
  405dfc:	b.eq	405c1c <ferror@plt+0x2c5c>  // b.none
  405e00:	b	405c2c <ferror@plt+0x2c6c>
  405e04:	ldur	x0, [x29, #-64]
  405e08:	bl	402d10 <free@plt>
  405e0c:	tbnz	w25, #0, 405e60 <ferror@plt+0x2ea0>
  405e10:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  405e14:	ldr	x21, [x8, #2624]
  405e18:	mov	w1, #0x10                  	// #16
  405e1c:	mov	x0, x20
  405e20:	bl	410134 <ferror@plt+0xd174>
  405e24:	mov	x19, x0
  405e28:	cbz	x21, 405e44 <ferror@plt+0x2e84>
  405e2c:	add	x8, x19, #0x8
  405e30:	add	x9, x21, #0xd
  405e34:	stp	x9, x21, [x8, #-8]
  405e38:	ldr	x21, [x21]
  405e3c:	add	x8, x8, #0x10
  405e40:	cbnz	x21, 405e30 <ferror@plt+0x2e70>
  405e44:	ldr	x3, [sp, #8]
  405e48:	mov	x0, x19
  405e4c:	mov	x1, x20
  405e50:	mov	x2, x20
  405e54:	bl	4058fc <ferror@plt+0x293c>
  405e58:	mov	x0, x19
  405e5c:	bl	402d10 <free@plt>
  405e60:	bl	4093f0 <ferror@plt+0x6430>
  405e64:	ldp	x20, x19, [sp, #288]
  405e68:	ldp	x22, x21, [sp, #272]
  405e6c:	ldp	x24, x23, [sp, #256]
  405e70:	ldp	x26, x25, [sp, #240]
  405e74:	ldp	x28, x27, [sp, #224]
  405e78:	ldp	x29, x30, [sp, #208]
  405e7c:	add	sp, sp, #0x130
  405e80:	ret
  405e84:	stp	x29, x30, [sp, #-48]!
  405e88:	str	x21, [sp, #16]
  405e8c:	stp	x20, x19, [sp, #32]
  405e90:	mov	x29, sp
  405e94:	mov	x21, x1
  405e98:	mov	x19, x0
  405e9c:	bl	402f30 <__errno_location@plt>
  405ea0:	ldr	w20, [x0]
  405ea4:	cbnz	x21, 405ec0 <ferror@plt+0x2f00>
  405ea8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  405eac:	add	x1, x1, #0x678
  405eb0:	mov	w2, #0x5                   	// #5
  405eb4:	mov	x0, xzr
  405eb8:	bl	402ea0 <dcgettext@plt>
  405ebc:	mov	x21, x0
  405ec0:	mov	w1, #0x3                   	// #3
  405ec4:	mov	w0, wzr
  405ec8:	mov	x2, x21
  405ecc:	bl	40e34c <ferror@plt+0xb38c>
  405ed0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  405ed4:	mov	x4, x0
  405ed8:	add	x2, x2, #0x671
  405edc:	mov	w0, #0x2                   	// #2
  405ee0:	mov	w1, w20
  405ee4:	mov	x3, x19
  405ee8:	bl	4028e0 <error@plt>
  405eec:	stp	x29, x30, [sp, #-32]!
  405ef0:	stp	x20, x19, [sp, #16]
  405ef4:	mov	x29, sp
  405ef8:	mov	w19, w0
  405efc:	and	w20, w0, #0xff
  405f00:	bl	402cd0 <__ctype_b_loc@plt>
  405f04:	ldr	x8, [x0]
  405f08:	and	x9, x19, #0xff
  405f0c:	cmp	w20, #0xa
  405f10:	ldp	x20, x19, [sp, #16]
  405f14:	ldrh	w8, [x8, x9, lsl #1]
  405f18:	cset	w9, eq  // eq = none
  405f1c:	and	w8, w8, #0x1
  405f20:	orr	w0, w9, w8
  405f24:	ldp	x29, x30, [sp], #32
  405f28:	ret
  405f2c:	stp	x29, x30, [sp, #-16]!
  405f30:	ldr	x0, [x0]
  405f34:	ldr	x1, [x1]
  405f38:	mov	x29, sp
  405f3c:	bl	402cc0 <strcmp@plt>
  405f40:	ldp	x29, x30, [sp], #16
  405f44:	ret
  405f48:	stp	x29, x30, [sp, #-32]!
  405f4c:	stp	x20, x19, [sp, #16]
  405f50:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  405f54:	ldr	x20, [x19, #2624]
  405f58:	mov	x29, sp
  405f5c:	cbz	x20, 405f70 <ferror@plt+0x2fb0>
  405f60:	add	x0, x20, #0xd
  405f64:	bl	402fa0 <unlink@plt>
  405f68:	ldr	x20, [x20]
  405f6c:	cbnz	x20, 405f60 <ferror@plt+0x2fa0>
  405f70:	str	xzr, [x19, #2624]
  405f74:	ldp	x20, x19, [sp, #16]
  405f78:	ldp	x29, x30, [sp], #32
  405f7c:	ret
  405f80:	stp	x29, x30, [sp, #-32]!
  405f84:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  405f88:	str	x19, [sp, #16]
  405f8c:	mov	x19, x0
  405f90:	add	x2, x0, #0x8
  405f94:	add	x1, x1, #0x590
  405f98:	mov	w0, wzr
  405f9c:	mov	x29, sp
  405fa0:	bl	402870 <pthread_sigmask@plt>
  405fa4:	cmp	w0, #0x0
  405fa8:	cset	w8, eq  // eq = none
  405fac:	strb	w8, [x19]
  405fb0:	ldr	x19, [sp, #16]
  405fb4:	ldp	x29, x30, [sp], #32
  405fb8:	ret
  405fbc:	stp	x29, x30, [sp, #-16]!
  405fc0:	ldrb	w8, [x0]
  405fc4:	mov	x29, sp
  405fc8:	cbz	w8, 405fdc <ferror@plt+0x301c>
  405fcc:	add	x1, x0, #0x8
  405fd0:	mov	w0, #0x2                   	// #2
  405fd4:	mov	x2, xzr
  405fd8:	bl	402870 <pthread_sigmask@plt>
  405fdc:	ldp	x29, x30, [sp], #16
  405fe0:	ret
  405fe4:	stp	x29, x30, [sp, #-48]!
  405fe8:	stp	x20, x19, [sp, #32]
  405fec:	ldrb	w8, [x1]
  405ff0:	mov	x19, x0
  405ff4:	str	x21, [sp, #16]
  405ff8:	mov	x29, sp
  405ffc:	cmp	w8, #0x77
  406000:	b.eq	406044 <ferror@plt+0x3084>  // b.none
  406004:	cmp	w8, #0x72
  406008:	b.ne	4060c0 <ferror@plt+0x3100>  // b.any
  40600c:	mov	x20, x1
  406010:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  406014:	add	x1, x1, #0x360
  406018:	mov	x0, x19
  40601c:	bl	402cc0 <strcmp@plt>
  406020:	cbz	w0, 406084 <ferror@plt+0x30c4>
  406024:	mov	w1, #0x80000               	// #524288
  406028:	mov	x0, x19
  40602c:	bl	402a70 <open@plt>
  406030:	tbnz	w0, #31, 40609c <ferror@plt+0x30dc>
  406034:	mov	x1, x20
  406038:	bl	402b10 <fdopen@plt>
  40603c:	mov	x19, x0
  406040:	b	4060a0 <ferror@plt+0x30e0>
  406044:	cbz	x19, 406078 <ferror@plt+0x30b8>
  406048:	mov	w0, #0x1                   	// #1
  40604c:	mov	x1, xzr
  406050:	bl	402ee0 <ftruncate@plt>
  406054:	cbz	w0, 406078 <ferror@plt+0x30b8>
  406058:	bl	402f30 <__errno_location@plt>
  40605c:	ldr	w20, [x0]
  406060:	bl	40611c <ferror@plt+0x315c>
  406064:	cbz	x0, 4060e0 <ferror@plt+0x3120>
  406068:	ldr	w8, [x0, #16]
  40606c:	and	w8, w8, #0xf000
  406070:	cmp	w8, #0x8, lsl #12
  406074:	b.eq	4060e0 <ferror@plt+0x3120>  // b.none
  406078:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40607c:	ldr	x19, [x8, #1368]
  406080:	b	4060ac <ferror@plt+0x30ec>
  406084:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406088:	ldr	x19, [x8, #1376]
  40608c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406090:	mov	w9, #0x1                   	// #1
  406094:	strb	w9, [x8, #1416]
  406098:	b	4060a0 <ferror@plt+0x30e0>
  40609c:	mov	x19, xzr
  4060a0:	mov	w1, #0x2                   	// #2
  4060a4:	mov	x0, x19
  4060a8:	bl	40b068 <ferror@plt+0x80a8>
  4060ac:	mov	x0, x19
  4060b0:	ldp	x20, x19, [sp, #32]
  4060b4:	ldr	x21, [sp, #16]
  4060b8:	ldp	x29, x30, [sp], #48
  4060bc:	ret
  4060c0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  4060c4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x19a4>
  4060c8:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x29a4>
  4060cc:	add	x0, x0, #0x2fa
  4060d0:	add	x1, x1, #0xb41
  4060d4:	add	x3, x3, #0x323
  4060d8:	mov	w2, #0x3d6                 	// #982
  4060dc:	bl	402f20 <__assert_fail@plt>
  4060e0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4060e4:	add	x1, x1, #0x2e5
  4060e8:	mov	w2, #0x5                   	// #5
  4060ec:	mov	x0, xzr
  4060f0:	bl	402ea0 <dcgettext@plt>
  4060f4:	mov	x21, x0
  4060f8:	mov	w1, #0x3                   	// #3
  4060fc:	mov	w0, wzr
  406100:	mov	x2, x19
  406104:	bl	40e34c <ferror@plt+0xb38c>
  406108:	mov	x3, x0
  40610c:	mov	w0, #0x2                   	// #2
  406110:	mov	w1, w20
  406114:	mov	x2, x21
  406118:	bl	4028e0 <error@plt>
  40611c:	stp	x29, x30, [sp, #-32]!
  406120:	str	x19, [sp, #16]
  406124:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  406128:	ldr	w8, [x19, #2648]
  40612c:	mov	x29, sp
  406130:	cbnz	w8, 40615c <ferror@plt+0x319c>
  406134:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  406138:	add	x1, x1, #0xa60
  40613c:	mov	w0, #0x1                   	// #1
  406140:	bl	412398 <_obstack_memory_used@@Base+0xd3c>
  406144:	cbz	w0, 406154 <ferror@plt+0x3194>
  406148:	bl	402f30 <__errno_location@plt>
  40614c:	ldr	w8, [x0]
  406150:	b	406158 <ferror@plt+0x3198>
  406154:	mov	w8, #0xffffffff            	// #-1
  406158:	str	w8, [x19, #2648]
  40615c:	ldr	w8, [x19, #2648]
  406160:	ldr	x19, [sp, #16]
  406164:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  406168:	add	x9, x9, #0xa60
  40616c:	cmp	w8, #0x0
  406170:	csel	x0, x9, xzr, lt  // lt = tstop
  406174:	ldp	x29, x30, [sp], #32
  406178:	ret
  40617c:	ldrb	w8, [x0, #50]
  406180:	cbz	w8, 40618c <ferror@plt+0x31cc>
  406184:	mov	w0, #0x1                   	// #1
  406188:	ret
  40618c:	ldrb	w8, [x0, #52]
  406190:	cbz	w8, 40619c <ferror@plt+0x31dc>
  406194:	mov	w0, #0x1                   	// #1
  406198:	ret
  40619c:	ldrb	w8, [x0, #53]
  4061a0:	cmp	w8, #0x0
  4061a4:	cset	w0, ne  // ne = any
  4061a8:	ret
  4061ac:	ldrb	w8, [x0, #48]
  4061b0:	cbnz	w8, 4061bc <ferror@plt+0x31fc>
  4061b4:	ldrb	w8, [x0, #49]
  4061b8:	cbz	w8, 4061c4 <ferror@plt+0x3204>
  4061bc:	mov	w8, #0x62                  	// #98
  4061c0:	strb	w8, [x1], #1
  4061c4:	ldr	x8, [x0, #32]
  4061c8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4061cc:	add	x9, x9, #0x840
  4061d0:	cmp	x8, x9
  4061d4:	b.eq	406274 <ferror@plt+0x32b4>  // b.none
  4061d8:	ldr	x8, [x0, #40]
  4061dc:	cbz	x8, 4061e8 <ferror@plt+0x3228>
  4061e0:	mov	w8, #0x66                  	// #102
  4061e4:	strb	w8, [x1], #1
  4061e8:	ldrb	w8, [x0, #52]
  4061ec:	cbz	w8, 4061f8 <ferror@plt+0x3238>
  4061f0:	mov	w8, #0x67                  	// #103
  4061f4:	strb	w8, [x1], #1
  4061f8:	ldrb	w8, [x0, #53]
  4061fc:	cbz	w8, 406208 <ferror@plt+0x3248>
  406200:	mov	w8, #0x68                  	// #104
  406204:	strb	w8, [x1], #1
  406208:	ldr	x8, [x0, #32]
  40620c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  406210:	add	x9, x9, #0x740
  406214:	cmp	x8, x9
  406218:	b.eq	406288 <ferror@plt+0x32c8>  // b.none
  40621c:	ldrb	w8, [x0, #54]
  406220:	cbz	w8, 40622c <ferror@plt+0x326c>
  406224:	mov	w8, #0x4d                  	// #77
  406228:	strb	w8, [x1], #1
  40622c:	ldrb	w8, [x0, #50]
  406230:	cbz	w8, 40623c <ferror@plt+0x327c>
  406234:	mov	w8, #0x6e                  	// #110
  406238:	strb	w8, [x1], #1
  40623c:	ldrb	w8, [x0, #51]
  406240:	cbz	w8, 40624c <ferror@plt+0x328c>
  406244:	mov	w8, #0x52                  	// #82
  406248:	strb	w8, [x1], #1
  40624c:	ldrb	w8, [x0, #55]
  406250:	cbz	w8, 40625c <ferror@plt+0x329c>
  406254:	mov	w8, #0x72                  	// #114
  406258:	strb	w8, [x1], #1
  40625c:	ldrb	w8, [x0, #56]
  406260:	cbz	w8, 40626c <ferror@plt+0x32ac>
  406264:	mov	w8, #0x56                  	// #86
  406268:	strb	w8, [x1], #1
  40626c:	strb	wzr, [x1]
  406270:	ret
  406274:	mov	w8, #0x64                  	// #100
  406278:	strb	w8, [x1], #1
  40627c:	ldr	x8, [x0, #40]
  406280:	cbnz	x8, 4061e0 <ferror@plt+0x3220>
  406284:	b	4061e8 <ferror@plt+0x3228>
  406288:	mov	w8, #0x69                  	// #105
  40628c:	strb	w8, [x1], #1
  406290:	ldrb	w8, [x0, #54]
  406294:	cbnz	w8, 406224 <ferror@plt+0x3264>
  406298:	b	40622c <ferror@plt+0x326c>
  40629c:	ret
  4062a0:	stp	x29, x30, [sp, #-48]!
  4062a4:	stp	x22, x21, [sp, #16]
  4062a8:	stp	x20, x19, [sp, #32]
  4062ac:	mov	x20, x1
  4062b0:	mov	x19, x0
  4062b4:	add	x22, x1, #0x1
  4062b8:	mov	x29, sp
  4062bc:	and	x8, x2, #0xffffffffffffffe0
  4062c0:	add	x21, x8, #0x20
  4062c4:	mov	x0, x21
  4062c8:	bl	402a40 <malloc@plt>
  4062cc:	str	x0, [x19]
  4062d0:	cbnz	x0, 4062e4 <ferror@plt+0x3324>
  4062d4:	lsr	x2, x21, #1
  4062d8:	cmp	x2, x22
  4062dc:	b.hi	4062bc <ferror@plt+0x32fc>  // b.pmore
  4062e0:	bl	410364 <ferror@plt+0xd3a4>
  4062e4:	stp	xzr, x20, [x19, #32]
  4062e8:	stp	xzr, x21, [x19, #16]
  4062ec:	strb	wzr, [x19, #48]
  4062f0:	str	xzr, [x19, #8]
  4062f4:	ldp	x20, x19, [sp, #32]
  4062f8:	ldp	x22, x21, [sp, #16]
  4062fc:	ldp	x29, x30, [sp], #48
  406300:	ret
  406304:	sub	sp, sp, #0xa0
  406308:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40630c:	ldrb	w8, [x8, #1563]
  406310:	stp	x29, x30, [sp, #64]
  406314:	stp	x28, x27, [sp, #80]
  406318:	stp	x26, x25, [sp, #96]
  40631c:	stp	x24, x23, [sp, #112]
  406320:	stp	x22, x21, [sp, #128]
  406324:	stp	x20, x19, [sp, #144]
  406328:	ldrb	w9, [x0, #48]
  40632c:	cmp	w8, #0x0
  406330:	mov	w8, #0xa                   	// #10
  406334:	csel	w22, wzr, w8, ne  // ne = any
  406338:	add	x29, sp, #0x40
  40633c:	str	x2, [sp]
  406340:	str	wzr, [sp, #12]
  406344:	cbz	w9, 406370 <ferror@plt+0x33b0>
  406348:	ldr	w8, [sp, #12]
  40634c:	ldp	x20, x19, [sp, #144]
  406350:	ldp	x22, x21, [sp, #128]
  406354:	ldp	x24, x23, [sp, #112]
  406358:	ldp	x26, x25, [sp, #96]
  40635c:	ldp	x28, x27, [sp, #80]
  406360:	ldp	x29, x30, [sp, #64]
  406364:	and	w0, w8, #0x1
  406368:	add	sp, sp, #0xa0
  40636c:	ret
  406370:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  406374:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  406378:	ldr	x8, [x0, #8]
  40637c:	ldp	x2, x11, [x0, #32]
  406380:	ldr	x10, [x10, #1200]
  406384:	ldr	x23, [x9, #1568]
  406388:	mov	x27, x1
  40638c:	mov	x19, x0
  406390:	cmp	x8, x2
  406394:	sub	x28, x10, #0x22
  406398:	stur	x11, [x29, #-16]
  40639c:	b.eq	4063b8 <ferror@plt+0x33f8>  // b.none
  4063a0:	ldr	x0, [x19]
  4063a4:	add	x8, x0, x8
  4063a8:	sub	x1, x8, x2
  4063ac:	bl	402860 <memmove@plt>
  4063b0:	ldr	x8, [x19, #32]
  4063b4:	stp	x8, xzr, [x19, #8]
  4063b8:	ldur	x8, [x29, #-16]
  4063bc:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  4063c0:	add	x21, x21, #0x640
  4063c4:	str	x19, [sp, #32]
  4063c8:	add	x8, x8, #0x1
  4063cc:	stp	x27, x8, [sp, #16]
  4063d0:	b	406408 <ferror@plt+0x3448>
  4063d4:	ldr	x8, [x19, #24]
  4063d8:	sub	x1, x29, #0x8
  4063dc:	mov	w2, #0x20                  	// #32
  4063e0:	lsr	x8, x8, #5
  4063e4:	stur	x8, [x29, #-8]
  4063e8:	ldr	x0, [x19]
  4063ec:	bl	4101fc <ferror@plt+0xd23c>
  4063f0:	str	x0, [x19]
  4063f4:	ldur	x9, [x29, #-8]
  4063f8:	mov	w8, wzr
  4063fc:	lsl	x9, x9, #5
  406400:	str	x9, [x19, #24]
  406404:	cbnz	w8, 406348 <ferror@plt+0x3388>
  406408:	ldp	x24, x8, [x19]
  40640c:	mov	x0, x19
  406410:	add	x20, x24, x8
  406414:	bl	40665c <ferror@plt+0x369c>
  406418:	ldr	x8, [x19, #16]
  40641c:	ldur	x9, [x29, #-16]
  406420:	mov	x19, x20
  406424:	sub	x20, x0, x8, lsl #5
  406428:	msub	x9, x9, x8, x0
  40642c:	sub	x25, x9, x19
  406430:	cbz	x8, 406448 <ferror@plt+0x3488>
  406434:	neg	x8, x8
  406438:	add	x8, x0, x8, lsl #5
  40643c:	ldr	x9, [x20]
  406440:	ldr	x8, [x8, #8]
  406444:	add	x24, x9, x8
  406448:	ldr	x9, [sp, #24]
  40644c:	cmp	x9, x25
  406450:	b.cs	4065ec <ferror@plt+0x362c>  // b.hs, b.nlast
  406454:	sub	x8, x25, #0x1
  406458:	udiv	x26, x8, x9
  40645c:	mov	w1, #0x1                   	// #1
  406460:	mov	x0, x19
  406464:	mov	x2, x26
  406468:	mov	x3, x27
  40646c:	bl	402c60 <fread_unlocked@plt>
  406470:	stur	x19, [x29, #-24]
  406474:	add	x19, x19, x0
  406478:	cmp	x0, x26
  40647c:	sub	x25, x25, x0
  406480:	b.eq	4064d0 <ferror@plt+0x3510>  // b.none
  406484:	mov	x0, x27
  406488:	bl	402900 <ferror_unlocked@plt>
  40648c:	cbnz	w0, 406640 <ferror@plt+0x3680>
  406490:	mov	x0, x27
  406494:	mov	x26, x27
  406498:	bl	402d80 <feof_unlocked@plt>
  40649c:	cbz	w0, 4064d0 <ferror@plt+0x3510>
  4064a0:	ldr	x10, [sp, #32]
  4064a4:	mov	w8, #0x1                   	// #1
  4064a8:	ldr	x9, [x10]
  4064ac:	strb	w8, [x10, #48]
  4064b0:	cmp	x9, x19
  4064b4:	b.eq	4065c4 <ferror@plt+0x3604>  // b.none
  4064b8:	cmp	x24, x19
  4064bc:	b.eq	4064d0 <ferror@plt+0x3510>  // b.none
  4064c0:	ldurb	w8, [x19, #-1]
  4064c4:	cmp	w8, w22
  4064c8:	b.eq	4064d0 <ferror@plt+0x3510>  // b.none
  4064cc:	strb	w22, [x19], #1
  4064d0:	ldur	x0, [x29, #-24]
  4064d4:	mov	w1, w22
  4064d8:	sub	x2, x19, x0
  4064dc:	bl	402e50 <memchr@plt>
  4064e0:	cbz	x0, 406590 <ferror@plt+0x35d0>
  4064e4:	mov	x26, x20
  4064e8:	b	40651c <ferror@plt+0x355c>
  4064ec:	mov	x0, x26
  4064f0:	mov	x1, x23
  4064f4:	bl	4069c0 <ferror@plt+0x3a00>
  4064f8:	mov	x24, x0
  4064fc:	stur	x24, [x20, #-16]
  406500:	sub	x2, x19, x27
  406504:	mov	x0, x27
  406508:	mov	w1, w22
  40650c:	bl	402e50 <memchr@plt>
  406510:	mov	x24, x27
  406514:	mov	x20, x26
  406518:	cbz	x0, 406598 <ferror@plt+0x35d8>
  40651c:	mov	x27, x0
  406520:	strb	wzr, [x27], #1
  406524:	sub	x8, x27, x24
  406528:	str	x24, [x26, #-32]!
  40652c:	cmp	x28, x8
  406530:	str	x8, [x26, #8]
  406534:	csel	x28, x28, x8, hi  // hi = pmore
  406538:	ldur	x8, [x29, #-16]
  40653c:	sub	x25, x25, x8
  406540:	cbz	x23, 406500 <ferror@plt+0x3540>
  406544:	ldr	x8, [x23, #16]
  406548:	cmn	x8, #0x1
  40654c:	b.eq	40655c <ferror@plt+0x359c>  // b.none
  406550:	mov	x0, x26
  406554:	mov	x1, x23
  406558:	bl	406868 <ferror@plt+0x38a8>
  40655c:	stur	x0, [x20, #-8]
  406560:	ldr	x8, [x23]
  406564:	cmn	x8, #0x1
  406568:	b.ne	4064ec <ferror@plt+0x352c>  // b.any
  40656c:	ldrb	w8, [x23, #48]
  406570:	cbz	w8, 4064fc <ferror@plt+0x353c>
  406574:	sub	x24, x24, #0x1
  406578:	ldrb	w0, [x24, #1]!
  40657c:	bl	404538 <ferror@plt+0x1578>
  406580:	and	x8, x0, #0xff
  406584:	ldrb	w8, [x21, x8]
  406588:	cbnz	w8, 406578 <ferror@plt+0x35b8>
  40658c:	b	4064fc <ferror@plt+0x353c>
  406590:	mov	x26, x20
  406594:	mov	x27, x24
  406598:	ldr	x8, [sp, #32]
  40659c:	mov	x24, x27
  4065a0:	ldr	x27, [sp, #16]
  4065a4:	mov	x20, x26
  4065a8:	ldrb	w8, [x8, #48]
  4065ac:	cmp	w8, #0x0
  4065b0:	mov	w8, #0x5                   	// #5
  4065b4:	csel	w8, wzr, w8, eq  // eq = none
  4065b8:	ldr	x9, [sp, #24]
  4065bc:	cbz	w8, 40644c <ferror@plt+0x348c>
  4065c0:	b	4065d8 <ferror@plt+0x3618>
  4065c4:	ldur	x19, [x29, #-24]
  4065c8:	str	wzr, [sp, #12]
  4065cc:	mov	x27, x26
  4065d0:	ldr	x9, [sp, #24]
  4065d4:	cbz	w8, 40644c <ferror@plt+0x348c>
  4065d8:	mov	x9, x19
  4065dc:	ldr	x19, [sp, #32]
  4065e0:	cmp	w8, #0x5
  4065e4:	b.ne	406404 <ferror@plt+0x3444>  // b.any
  4065e8:	b	4065f4 <ferror@plt+0x3634>
  4065ec:	mov	x9, x19
  4065f0:	ldr	x19, [sp, #32]
  4065f4:	ldr	x8, [x19]
  4065f8:	mov	x0, x19
  4065fc:	mov	x25, x9
  406600:	sub	x8, x9, x8
  406604:	str	x8, [x19, #8]
  406608:	bl	40665c <ferror@plt+0x369c>
  40660c:	subs	x8, x0, x20
  406610:	asr	x8, x8, #5
  406614:	str	x8, [x19, #16]
  406618:	b.eq	4063d4 <ferror@plt+0x3414>  // b.none
  40661c:	sub	x9, x25, x24
  406620:	add	x10, x28, #0x22
  406624:	str	x9, [x19, #32]
  406628:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  40662c:	str	x10, [x9, #1200]
  406630:	mov	w9, #0x1                   	// #1
  406634:	mov	w8, #0x1                   	// #1
  406638:	str	w9, [sp, #12]
  40663c:	b	406404 <ferror@plt+0x3444>
  406640:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  406644:	add	x1, x1, #0x4bb
  406648:	mov	w2, #0x5                   	// #5
  40664c:	mov	x0, xzr
  406650:	bl	402ea0 <dcgettext@plt>
  406654:	ldr	x1, [sp]
  406658:	bl	405e84 <ferror@plt+0x2ec4>
  40665c:	ldr	x8, [x0]
  406660:	ldr	x9, [x0, #24]
  406664:	add	x0, x8, x9
  406668:	ret
  40666c:	stp	x29, x30, [sp, #-64]!
  406670:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406674:	ldr	x8, [x8, #1568]
  406678:	stp	x22, x21, [sp, #32]
  40667c:	stp	x20, x19, [sp, #48]
  406680:	mov	x19, x1
  406684:	mov	x22, x0
  406688:	stp	x24, x23, [sp, #16]
  40668c:	mov	x29, sp
  406690:	cbz	x8, 4066bc <ferror@plt+0x36fc>
  406694:	mov	x0, x22
  406698:	mov	x1, x19
  40669c:	bl	406b24 <ferror@plt+0x3b64>
  4066a0:	cbnz	w0, 406744 <ferror@plt+0x3784>
  4066a4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4066a8:	ldrb	w8, [x8, #1562]
  4066ac:	tbnz	w8, #0, 406744 <ferror@plt+0x3784>
  4066b0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4066b4:	ldrb	w8, [x8, #1561]
  4066b8:	tbnz	w8, #0, 406744 <ferror@plt+0x3784>
  4066bc:	ldr	x20, [x22, #8]
  4066c0:	ldr	x21, [x19, #8]
  4066c4:	sub	x24, x20, #0x1
  4066c8:	sub	x23, x21, #0x1
  4066cc:	cbz	x24, 4066f8 <ferror@plt+0x3738>
  4066d0:	cbz	x23, 406704 <ferror@plt+0x3744>
  4066d4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4066d8:	ldrb	w8, [x8, #1400]
  4066dc:	ldr	x0, [x22]
  4066e0:	ldr	x2, [x19]
  4066e4:	cbz	w8, 40670c <ferror@plt+0x374c>
  4066e8:	mov	x1, x20
  4066ec:	mov	x3, x21
  4066f0:	bl	4104f4 <ferror@plt+0xd534>
  4066f4:	b	406734 <ferror@plt+0x3774>
  4066f8:	cmp	x23, #0x0
  4066fc:	csetm	w0, ne  // ne = any
  406700:	b	406734 <ferror@plt+0x3774>
  406704:	mov	w0, #0x1                   	// #1
  406708:	b	406734 <ferror@plt+0x3774>
  40670c:	cmp	x24, x23
  406710:	csel	x8, x24, x23, cc  // cc = lo, ul, last
  406714:	mov	x1, x2
  406718:	mov	x2, x8
  40671c:	bl	402c70 <memcmp@plt>
  406720:	cbnz	w0, 406734 <ferror@plt+0x3774>
  406724:	cmp	x20, x21
  406728:	cset	w8, ne  // ne = any
  40672c:	cmp	x24, x23
  406730:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  406734:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406738:	ldrb	w8, [x8, #1576]
  40673c:	cmp	w8, #0x0
  406740:	cneg	w0, w0, ne  // ne = any
  406744:	ldp	x20, x19, [sp, #48]
  406748:	ldp	x22, x21, [sp, #32]
  40674c:	ldp	x24, x23, [sp, #16]
  406750:	ldp	x29, x30, [sp], #64
  406754:	ret
  406758:	stp	x29, x30, [sp, #-80]!
  40675c:	str	x25, [sp, #16]
  406760:	stp	x24, x23, [sp, #32]
  406764:	stp	x22, x21, [sp, #48]
  406768:	stp	x20, x19, [sp, #64]
  40676c:	ldp	x20, x23, [x0]
  406770:	mov	x21, x2
  406774:	mov	x19, x1
  406778:	mov	x29, sp
  40677c:	add	x24, x20, x23
  406780:	cbnz	x2, 4067f0 <ferror@plt+0x3830>
  406784:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406788:	ldrb	w8, [x8, #1560]
  40678c:	cmp	w8, #0x1
  406790:	b.ne	4067f0 <ferror@plt+0x3830>  // b.any
  406794:	mov	x22, x0
  406798:	sub	x21, x23, #0x1
  40679c:	mov	w23, #0xa                   	// #10
  4067a0:	mov	w25, #0x3e                  	// #62
  4067a4:	cmp	x20, x24
  4067a8:	b.cs	406840 <ferror@plt+0x3880>  // b.hs, b.nlast
  4067ac:	ldrb	w8, [x20], #1
  4067b0:	cmp	x21, #0x0
  4067b4:	mov	x1, x19
  4067b8:	csel	w9, w23, w8, eq  // eq = none
  4067bc:	cmp	w8, #0x9
  4067c0:	csel	w0, w25, w9, eq  // eq = none
  4067c4:	bl	402e80 <fputc_unlocked@plt>
  4067c8:	cmn	w0, #0x1
  4067cc:	sub	x21, x21, #0x1
  4067d0:	b.ne	4067a4 <ferror@plt+0x37e4>  // b.any
  4067d4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4067d8:	add	x1, x1, #0x52e
  4067dc:	mov	w2, #0x5                   	// #5
  4067e0:	mov	x0, xzr
  4067e4:	bl	402ea0 <dcgettext@plt>
  4067e8:	mov	x1, xzr
  4067ec:	bl	405e84 <ferror@plt+0x2ec4>
  4067f0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4067f4:	ldrb	w8, [x8, #1563]
  4067f8:	mov	w1, #0x1                   	// #1
  4067fc:	mov	x0, x20
  406800:	mov	x2, x23
  406804:	cmp	w8, #0x0
  406808:	mov	w8, #0xa                   	// #10
  40680c:	csel	w8, wzr, w8, ne  // ne = any
  406810:	mov	x3, x19
  406814:	sturb	w8, [x24, #-1]
  406818:	bl	402890 <fwrite_unlocked@plt>
  40681c:	cmp	x0, x23
  406820:	b.ne	40684c <ferror@plt+0x388c>  // b.any
  406824:	sturb	wzr, [x24, #-1]
  406828:	ldp	x20, x19, [sp, #64]
  40682c:	ldp	x22, x21, [sp, #48]
  406830:	ldp	x24, x23, [sp, #32]
  406834:	ldr	x25, [sp, #16]
  406838:	ldp	x29, x30, [sp], #80
  40683c:	ret
  406840:	mov	x0, x22
  406844:	bl	407b3c <ferror@plt+0x4b7c>
  406848:	b	406828 <ferror@plt+0x3868>
  40684c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  406850:	add	x1, x1, #0x52e
  406854:	mov	w2, #0x5                   	// #5
  406858:	mov	x0, xzr
  40685c:	bl	402ea0 <dcgettext@plt>
  406860:	mov	x1, x21
  406864:	bl	405e84 <ferror@plt+0x2ec4>
  406868:	stp	x29, x30, [sp, #-64]!
  40686c:	stp	x24, x23, [sp, #16]
  406870:	stp	x22, x21, [sp, #32]
  406874:	stp	x20, x19, [sp, #48]
  406878:	ldp	x19, x9, [x0]
  40687c:	ldp	x10, x21, [x1, #16]
  406880:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406884:	ldr	w8, [x8, #984]
  406888:	add	x9, x19, x9
  40688c:	cmp	x21, #0x0
  406890:	mov	x20, x1
  406894:	cinc	x23, x10, eq  // eq = none
  406898:	cmp	w8, #0x100
  40689c:	sub	x22, x9, #0x1
  4068a0:	mov	x29, sp
  4068a4:	b.ne	40692c <ferror@plt+0x396c>  // b.any
  4068a8:	cmp	x19, x22
  4068ac:	b.cs	406960 <ferror@plt+0x39a0>  // b.hs, b.nlast
  4068b0:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  4068b4:	add	x24, x24, #0x640
  4068b8:	b	4068c4 <ferror@plt+0x3904>
  4068bc:	cmp	x19, x22
  4068c0:	b.cs	406960 <ferror@plt+0x39a0>  // b.hs, b.nlast
  4068c4:	cbz	x23, 406960 <ferror@plt+0x39a0>
  4068c8:	cmp	x19, x22
  4068cc:	b.cs	4068f0 <ferror@plt+0x3930>  // b.hs, b.nlast
  4068d0:	ldrb	w0, [x19]
  4068d4:	bl	404538 <ferror@plt+0x1578>
  4068d8:	and	x8, x0, #0xff
  4068dc:	ldrb	w8, [x24, x8]
  4068e0:	cbz	w8, 4068f0 <ferror@plt+0x3930>
  4068e4:	add	x19, x19, #0x1
  4068e8:	cmp	x22, x19
  4068ec:	b.ne	4068d0 <ferror@plt+0x3910>  // b.any
  4068f0:	cmp	x19, x22
  4068f4:	sub	x23, x23, #0x1
  4068f8:	b.cs	4068bc <ferror@plt+0x38fc>  // b.hs, b.nlast
  4068fc:	ldrb	w0, [x19]
  406900:	bl	404538 <ferror@plt+0x1578>
  406904:	and	x8, x0, #0xff
  406908:	ldrb	w8, [x24, x8]
  40690c:	cbnz	w8, 4068bc <ferror@plt+0x38fc>
  406910:	add	x19, x19, #0x1
  406914:	cmp	x22, x19
  406918:	b.ne	4068fc <ferror@plt+0x393c>  // b.any
  40691c:	b	4068bc <ferror@plt+0x38fc>
  406920:	orr	x9, x23, x21
  406924:	cmp	x9, #0x0
  406928:	cinc	x19, x19, ne  // ne = any
  40692c:	cmp	x19, x22
  406930:	b.cs	406960 <ferror@plt+0x39a0>  // b.hs, b.nlast
  406934:	cbz	x23, 406960 <ferror@plt+0x39a0>
  406938:	cmp	x19, x22
  40693c:	sub	x23, x23, #0x1
  406940:	b.cs	40692c <ferror@plt+0x396c>  // b.hs, b.nlast
  406944:	ldrb	w9, [x19]
  406948:	cmp	w8, w9
  40694c:	b.eq	406920 <ferror@plt+0x3960>  // b.none
  406950:	add	x19, x19, #0x1
  406954:	cmp	x22, x19
  406958:	b.ne	406944 <ferror@plt+0x3984>  // b.any
  40695c:	b	40692c <ferror@plt+0x396c>
  406960:	cbz	x21, 4069a8 <ferror@plt+0x39e8>
  406964:	ldrb	w8, [x20, #49]
  406968:	cbz	w8, 40699c <ferror@plt+0x39dc>
  40696c:	cmp	x19, x22
  406970:	b.cs	40699c <ferror@plt+0x39dc>  // b.hs, b.nlast
  406974:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  406978:	add	x20, x20, #0x640
  40697c:	ldrb	w0, [x19]
  406980:	bl	404538 <ferror@plt+0x1578>
  406984:	and	x8, x0, #0xff
  406988:	ldrb	w8, [x20, x8]
  40698c:	cbz	w8, 40699c <ferror@plt+0x39dc>
  406990:	add	x19, x19, #0x1
  406994:	cmp	x22, x19
  406998:	b.ne	40697c <ferror@plt+0x39bc>  // b.any
  40699c:	add	x8, x19, x21
  4069a0:	cmp	x22, x8
  4069a4:	csel	x19, x22, x8, cc  // cc = lo, ul, last
  4069a8:	mov	x0, x19
  4069ac:	ldp	x20, x19, [sp, #48]
  4069b0:	ldp	x22, x21, [sp, #32]
  4069b4:	ldp	x24, x23, [sp, #16]
  4069b8:	ldp	x29, x30, [sp], #64
  4069bc:	ret
  4069c0:	stp	x29, x30, [sp, #-64]!
  4069c4:	stp	x24, x23, [sp, #16]
  4069c8:	stp	x22, x21, [sp, #32]
  4069cc:	stp	x20, x19, [sp, #48]
  4069d0:	ldp	x20, x9, [x0]
  4069d4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4069d8:	ldr	w8, [x8, #984]
  4069dc:	ldp	x23, x22, [x1]
  4069e0:	add	x9, x20, x9
  4069e4:	mov	x19, x1
  4069e8:	cmp	w8, #0x100
  4069ec:	sub	x21, x9, #0x1
  4069f0:	mov	x29, sp
  4069f4:	b.ne	406a14 <ferror@plt+0x3a54>  // b.any
  4069f8:	cmp	x20, x21
  4069fc:	b.cs	406acc <ferror@plt+0x3b0c>  // b.hs, b.nlast
  406a00:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  406a04:	add	x24, x24, #0x640
  406a08:	b	406a70 <ferror@plt+0x3ab0>
  406a0c:	cmp	w10, #0x0
  406a10:	cinc	x20, x20, ne  // ne = any
  406a14:	cmp	x20, x21
  406a18:	b.cs	406acc <ferror@plt+0x3b0c>  // b.hs, b.nlast
  406a1c:	cbz	x23, 406acc <ferror@plt+0x3b0c>
  406a20:	cmp	x20, x21
  406a24:	sub	x23, x23, #0x1
  406a28:	cset	w10, cc  // cc = lo, ul, last
  406a2c:	b.cs	406a0c <ferror@plt+0x3a4c>  // b.hs, b.nlast
  406a30:	ldrb	w11, [x20]
  406a34:	cmp	w8, w11
  406a38:	b.eq	406a0c <ferror@plt+0x3a4c>  // b.none
  406a3c:	add	x11, x20, #0x2
  406a40:	sub	x20, x11, #0x1
  406a44:	cmp	x20, x21
  406a48:	cset	w10, cc  // cc = lo, ul, last
  406a4c:	cmp	x9, x11
  406a50:	b.eq	406a0c <ferror@plt+0x3a4c>  // b.none
  406a54:	ldurb	w12, [x11, #-1]
  406a58:	add	x11, x11, #0x1
  406a5c:	cmp	w8, w12
  406a60:	b.ne	406a40 <ferror@plt+0x3a80>  // b.any
  406a64:	b	406a0c <ferror@plt+0x3a4c>
  406a68:	cmp	x20, x21
  406a6c:	b.cs	406acc <ferror@plt+0x3b0c>  // b.hs, b.nlast
  406a70:	cbz	x23, 406acc <ferror@plt+0x3b0c>
  406a74:	cmp	x20, x21
  406a78:	b.cs	406a9c <ferror@plt+0x3adc>  // b.hs, b.nlast
  406a7c:	ldrb	w0, [x20]
  406a80:	bl	404538 <ferror@plt+0x1578>
  406a84:	and	x8, x0, #0xff
  406a88:	ldrb	w8, [x24, x8]
  406a8c:	cbz	w8, 406a9c <ferror@plt+0x3adc>
  406a90:	add	x20, x20, #0x1
  406a94:	cmp	x21, x20
  406a98:	b.ne	406a7c <ferror@plt+0x3abc>  // b.any
  406a9c:	cmp	x20, x21
  406aa0:	sub	x23, x23, #0x1
  406aa4:	b.cs	406a68 <ferror@plt+0x3aa8>  // b.hs, b.nlast
  406aa8:	ldrb	w0, [x20]
  406aac:	bl	404538 <ferror@plt+0x1578>
  406ab0:	and	x8, x0, #0xff
  406ab4:	ldrb	w8, [x24, x8]
  406ab8:	cbnz	w8, 406a68 <ferror@plt+0x3aa8>
  406abc:	add	x20, x20, #0x1
  406ac0:	cmp	x21, x20
  406ac4:	b.ne	406aa8 <ferror@plt+0x3ae8>  // b.any
  406ac8:	b	406a68 <ferror@plt+0x3aa8>
  406acc:	ldrb	w8, [x19, #48]
  406ad0:	cbz	w8, 406b04 <ferror@plt+0x3b44>
  406ad4:	cmp	x20, x21
  406ad8:	b.cs	406b04 <ferror@plt+0x3b44>  // b.hs, b.nlast
  406adc:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  406ae0:	add	x19, x19, #0x640
  406ae4:	ldrb	w0, [x20]
  406ae8:	bl	404538 <ferror@plt+0x1578>
  406aec:	and	x8, x0, #0xff
  406af0:	ldrb	w8, [x19, x8]
  406af4:	cbz	w8, 406b04 <ferror@plt+0x3b44>
  406af8:	add	x20, x20, #0x1
  406afc:	cmp	x21, x20
  406b00:	b.ne	406ae4 <ferror@plt+0x3b24>  // b.any
  406b04:	add	x8, x20, x22
  406b08:	cmp	x21, x8
  406b0c:	csel	x0, x21, x8, cc  // cc = lo, ul, last
  406b10:	ldp	x20, x19, [sp, #48]
  406b14:	ldp	x22, x21, [sp, #32]
  406b18:	ldp	x24, x23, [sp, #16]
  406b1c:	ldp	x29, x30, [sp], #64
  406b20:	ret
  406b24:	stp	x29, x30, [sp, #-96]!
  406b28:	stp	x28, x27, [sp, #16]
  406b2c:	stp	x26, x25, [sp, #32]
  406b30:	stp	x24, x23, [sp, #48]
  406b34:	stp	x22, x21, [sp, #64]
  406b38:	stp	x20, x19, [sp, #80]
  406b3c:	mov	x29, sp
  406b40:	sub	sp, sp, #0xff0
  406b44:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406b48:	ldp	x20, x25, [x0, #16]
  406b4c:	stp	x0, x1, [sp, #8]
  406b50:	ldr	x22, [x8, #1568]
  406b54:	ldp	x21, x26, [x1, #16]
  406b58:	b	406b68 <ferror@plt+0x3ba8>
  406b5c:	ldr	x22, [sp, #64]
  406b60:	mov	w8, #0x12                  	// #18
  406b64:	cbnz	w8, 4071a4 <ferror@plt+0x41e4>
  406b68:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  406b6c:	mov	x19, x22
  406b70:	ldp	x22, x24, [x22, #32]
  406b74:	cmp	x20, x25
  406b78:	ldrb	w8, [x8, #1400]
  406b7c:	csel	x25, x20, x25, hi  // hi = pmore
  406b80:	cmp	x21, x26
  406b84:	csel	x26, x21, x26, hi  // hi = pmore
  406b88:	sub	x23, x25, x20
  406b8c:	sub	x27, x26, x21
  406b90:	str	x19, [sp, #64]
  406b94:	cbnz	w8, 406bbc <ferror@plt+0x3bfc>
  406b98:	mov	x0, x19
  406b9c:	bl	40617c <ferror@plt+0x31bc>
  406ba0:	tbnz	w0, #0, 406bbc <ferror@plt+0x3bfc>
  406ba4:	ldrb	w8, [x19, #54]
  406ba8:	cbnz	w8, 406bbc <ferror@plt+0x3bfc>
  406bac:	ldrb	w8, [x19, #51]
  406bb0:	cbnz	w8, 406bbc <ferror@plt+0x3bfc>
  406bb4:	ldrb	w8, [x19, #56]
  406bb8:	cbz	w8, 406ecc <ferror@plt+0x3f0c>
  406bbc:	orr	x8, x24, x22
  406bc0:	cmp	x8, #0x0
  406bc4:	cset	w9, ne  // ne = any
  406bc8:	str	w9, [sp, #44]
  406bcc:	stp	x26, x25, [sp, #48]
  406bd0:	cbz	x8, 406bf0 <ferror@plt+0x3c30>
  406bd4:	add	x8, x27, x23
  406bd8:	add	x0, x8, #0x2
  406bdc:	cmp	x0, #0xfa1
  406be0:	b.cs	406c18 <ferror@plt+0x3c58>  // b.hs, b.nlast
  406be4:	str	xzr, [sp, #24]
  406be8:	add	x25, sp, #0x48
  406bec:	b	406c24 <ferror@plt+0x3c64>
  406bf0:	ldrb	w8, [x25]
  406bf4:	strb	wzr, [x25]
  406bf8:	mov	x25, x20
  406bfc:	mov	x19, x23
  406c00:	str	w8, [sp, #40]
  406c04:	ldrb	w8, [x26]
  406c08:	str	w8, [sp, #36]
  406c0c:	mov	x8, x26
  406c10:	mov	x26, x21
  406c14:	b	406cf0 <ferror@plt+0x3d30>
  406c18:	bl	410160 <ferror@plt+0xd1a0>
  406c1c:	mov	x25, x0
  406c20:	str	x0, [sp, #24]
  406c24:	add	x8, x25, x23
  406c28:	add	x26, x8, #0x1
  406c2c:	mov	x19, xzr
  406c30:	cbz	x23, 406c88 <ferror@plt+0x3cc8>
  406c34:	mov	x28, x20
  406c38:	b	406c58 <ferror@plt+0x3c98>
  406c3c:	ldrb	w8, [x8]
  406c40:	add	x9, x19, #0x1
  406c44:	strb	w8, [x25, x19]
  406c48:	mov	x19, x9
  406c4c:	subs	x23, x23, #0x1
  406c50:	add	x28, x28, #0x1
  406c54:	b.eq	406c88 <ferror@plt+0x3cc8>  // b.none
  406c58:	cbz	x22, 406c70 <ferror@plt+0x3cb0>
  406c5c:	ldrb	w0, [x28]
  406c60:	bl	404538 <ferror@plt+0x1578>
  406c64:	and	x8, x0, #0xff
  406c68:	ldrb	w8, [x22, x8]
  406c6c:	cbnz	w8, 406c4c <ferror@plt+0x3c8c>
  406c70:	mov	x8, x28
  406c74:	cbz	x24, 406c3c <ferror@plt+0x3c7c>
  406c78:	ldrb	w0, [x28]
  406c7c:	bl	404538 <ferror@plt+0x1578>
  406c80:	add	x8, x24, w0, uxtb
  406c84:	b	406c3c <ferror@plt+0x3c7c>
  406c88:	mov	x23, xzr
  406c8c:	strb	wzr, [x25, x19]
  406c90:	cbz	x27, 406ce8 <ferror@plt+0x3d28>
  406c94:	mov	x28, x21
  406c98:	b	406cb8 <ferror@plt+0x3cf8>
  406c9c:	ldrb	w8, [x8]
  406ca0:	add	x9, x23, #0x1
  406ca4:	strb	w8, [x26, x23]
  406ca8:	mov	x23, x9
  406cac:	subs	x27, x27, #0x1
  406cb0:	add	x28, x28, #0x1
  406cb4:	b.eq	406ce8 <ferror@plt+0x3d28>  // b.none
  406cb8:	cbz	x22, 406cd0 <ferror@plt+0x3d10>
  406cbc:	ldrb	w0, [x28]
  406cc0:	bl	404538 <ferror@plt+0x1578>
  406cc4:	and	x8, x0, #0xff
  406cc8:	ldrb	w8, [x22, x8]
  406ccc:	cbnz	w8, 406cac <ferror@plt+0x3cec>
  406cd0:	mov	x8, x28
  406cd4:	cbz	x24, 406c9c <ferror@plt+0x3cdc>
  406cd8:	ldrb	w0, [x28]
  406cdc:	bl	404538 <ferror@plt+0x1578>
  406ce0:	add	x8, x24, w0, uxtb
  406ce4:	b	406c9c <ferror@plt+0x3cdc>
  406ce8:	add	x8, x26, x23
  406cec:	mov	x27, x23
  406cf0:	ldr	x22, [sp, #64]
  406cf4:	strb	wzr, [x8]
  406cf8:	ldrb	w8, [x22, #50]
  406cfc:	cbz	w8, 406d10 <ferror@plt+0x3d50>
  406d00:	mov	x0, x25
  406d04:	mov	x1, x26
  406d08:	bl	4071ec <ferror@plt+0x422c>
  406d0c:	b	406d3c <ferror@plt+0x3d7c>
  406d10:	ldrb	w8, [x22, #52]
  406d14:	cbz	w8, 406d28 <ferror@plt+0x3d68>
  406d18:	mov	x0, x25
  406d1c:	mov	x1, x26
  406d20:	bl	407264 <ferror@plt+0x42a4>
  406d24:	b	406d3c <ferror@plt+0x3d7c>
  406d28:	ldrb	w8, [x22, #53]
  406d2c:	cbz	w8, 406e78 <ferror@plt+0x3eb8>
  406d30:	mov	x0, x25
  406d34:	mov	x1, x26
  406d38:	bl	407330 <ferror@plt+0x4370>
  406d3c:	mov	w28, w0
  406d40:	ldr	w8, [sp, #44]
  406d44:	cbz	w8, 406d54 <ferror@plt+0x3d94>
  406d48:	ldr	x0, [sp, #24]
  406d4c:	bl	402d10 <free@plt>
  406d50:	b	406d64 <ferror@plt+0x3da4>
  406d54:	ldr	w8, [sp, #40]
  406d58:	strb	w8, [x25, x19]
  406d5c:	ldr	w8, [sp, #36]
  406d60:	strb	w8, [x26, x27]
  406d64:	ldp	x26, x25, [sp, #48]
  406d68:	cbnz	w28, 406b60 <ferror@plt+0x3ba0>
  406d6c:	ldr	x22, [x22, #64]
  406d70:	cbz	x22, 406dac <ferror@plt+0x3dec>
  406d74:	ldr	x8, [x22, #16]
  406d78:	cmn	x8, #0x1
  406d7c:	b.eq	406db8 <ferror@plt+0x3df8>  // b.none
  406d80:	ldr	x20, [sp, #8]
  406d84:	mov	x1, x22
  406d88:	mov	x0, x20
  406d8c:	bl	406868 <ferror@plt+0x38a8>
  406d90:	ldr	x19, [sp, #16]
  406d94:	mov	x25, x0
  406d98:	mov	x1, x22
  406d9c:	mov	x0, x19
  406da0:	bl	406868 <ferror@plt+0x38a8>
  406da4:	mov	x26, x0
  406da8:	b	406dd4 <ferror@plt+0x3e14>
  406dac:	mov	w28, wzr
  406db0:	mov	w8, #0x3                   	// #3
  406db4:	b	406b64 <ferror@plt+0x3ba4>
  406db8:	ldp	x20, x19, [sp, #8]
  406dbc:	ldp	x8, x9, [x20]
  406dc0:	ldp	x10, x11, [x19]
  406dc4:	add	x8, x8, x9
  406dc8:	add	x9, x10, x11
  406dcc:	sub	x25, x8, #0x1
  406dd0:	sub	x26, x9, #0x1
  406dd4:	ldr	x8, [x22]
  406dd8:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  406ddc:	add	x23, x23, #0x640
  406de0:	cmn	x8, #0x1
  406de4:	b.eq	406e14 <ferror@plt+0x3e54>  // b.none
  406de8:	mov	x0, x20
  406dec:	mov	x1, x22
  406df0:	bl	4069c0 <ferror@plt+0x3a00>
  406df4:	mov	x20, x0
  406df8:	mov	x0, x19
  406dfc:	mov	x1, x22
  406e00:	bl	4069c0 <ferror@plt+0x3a00>
  406e04:	mov	x21, x0
  406e08:	mov	w28, wzr
  406e0c:	mov	w8, wzr
  406e10:	b	406b64 <ferror@plt+0x3ba4>
  406e14:	ldr	x20, [x20]
  406e18:	ldrb	w8, [x22, #48]
  406e1c:	ldr	x21, [x19]
  406e20:	cbz	w8, 406ea4 <ferror@plt+0x3ee4>
  406e24:	cmp	x20, x25
  406e28:	b.cs	406e4c <ferror@plt+0x3e8c>  // b.hs, b.nlast
  406e2c:	ldrb	w0, [x20]
  406e30:	bl	404538 <ferror@plt+0x1578>
  406e34:	and	x8, x0, #0xff
  406e38:	ldrb	w8, [x23, x8]
  406e3c:	cbz	w8, 406e4c <ferror@plt+0x3e8c>
  406e40:	add	x20, x20, #0x1
  406e44:	cmp	x25, x20
  406e48:	b.ne	406e2c <ferror@plt+0x3e6c>  // b.any
  406e4c:	cmp	x21, x26
  406e50:	b.cs	406e08 <ferror@plt+0x3e48>  // b.hs, b.nlast
  406e54:	ldrb	w0, [x21]
  406e58:	bl	404538 <ferror@plt+0x1578>
  406e5c:	and	x8, x0, #0xff
  406e60:	ldrb	w8, [x23, x8]
  406e64:	cbz	w8, 406ea4 <ferror@plt+0x3ee4>
  406e68:	add	x21, x21, #0x1
  406e6c:	cmp	x26, x21
  406e70:	b.ne	406e54 <ferror@plt+0x3e94>  // b.any
  406e74:	b	406e08 <ferror@plt+0x3e48>
  406e78:	ldrb	w8, [x22, #54]
  406e7c:	cbz	w8, 406eac <ferror@plt+0x3eec>
  406e80:	mov	x0, x25
  406e84:	mov	x1, xzr
  406e88:	bl	4073c4 <ferror@plt+0x4404>
  406e8c:	mov	w28, w0
  406e90:	mov	x0, x26
  406e94:	mov	x1, xzr
  406e98:	bl	4073c4 <ferror@plt+0x4404>
  406e9c:	sub	w28, w28, w0
  406ea0:	b	406d40 <ferror@plt+0x3d80>
  406ea4:	mov	w28, wzr
  406ea8:	b	406b64 <ferror@plt+0x3ba4>
  406eac:	ldrb	w8, [x22, #51]
  406eb0:	cbz	w8, 407094 <ferror@plt+0x40d4>
  406eb4:	mov	x0, x25
  406eb8:	mov	x1, x19
  406ebc:	mov	x2, x26
  406ec0:	mov	x3, x27
  406ec4:	bl	4074e8 <ferror@plt+0x4528>
  406ec8:	b	406d3c <ferror@plt+0x3d7c>
  406ecc:	cbz	x22, 4070ac <ferror@plt+0x40ec>
  406ed0:	cbz	x24, 406fcc <ferror@plt+0x400c>
  406ed4:	cmp	x20, x25
  406ed8:	cset	w19, cc  // cc = lo, ul, last
  406edc:	b.cs	406f20 <ferror@plt+0x3f60>  // b.hs, b.nlast
  406ee0:	ldrb	w0, [x20]
  406ee4:	bl	404538 <ferror@plt+0x1578>
  406ee8:	and	x8, x0, #0xff
  406eec:	ldrb	w8, [x22, x8]
  406ef0:	cbz	w8, 406f20 <ferror@plt+0x3f60>
  406ef4:	add	x23, x20, #0x1
  406ef8:	cmp	x23, x25
  406efc:	mov	x20, x23
  406f00:	cset	w19, cc  // cc = lo, ul, last
  406f04:	b.cs	406f20 <ferror@plt+0x3f60>  // b.hs, b.nlast
  406f08:	mov	x23, x20
  406f0c:	ldrb	w0, [x23], #1
  406f10:	bl	404538 <ferror@plt+0x1578>
  406f14:	and	x8, x0, #0xff
  406f18:	ldrb	w8, [x22, x8]
  406f1c:	cbnz	w8, 406ef8 <ferror@plt+0x3f38>
  406f20:	cmp	x21, x26
  406f24:	cset	w23, cc  // cc = lo, ul, last
  406f28:	mov	x27, x25
  406f2c:	b.cs	406f70 <ferror@plt+0x3fb0>  // b.hs, b.nlast
  406f30:	ldrb	w0, [x21]
  406f34:	bl	404538 <ferror@plt+0x1578>
  406f38:	and	x8, x0, #0xff
  406f3c:	ldrb	w8, [x22, x8]
  406f40:	cbz	w8, 406f70 <ferror@plt+0x3fb0>
  406f44:	add	x25, x21, #0x1
  406f48:	cmp	x25, x26
  406f4c:	mov	x21, x25
  406f50:	cset	w23, cc  // cc = lo, ul, last
  406f54:	b.cs	406f70 <ferror@plt+0x3fb0>  // b.hs, b.nlast
  406f58:	mov	x25, x21
  406f5c:	ldrb	w0, [x25], #1
  406f60:	bl	404538 <ferror@plt+0x1578>
  406f64:	and	x8, x0, #0xff
  406f68:	ldrb	w8, [x22, x8]
  406f6c:	cbnz	w8, 406f48 <ferror@plt+0x3f88>
  406f70:	and	w8, w19, w23
  406f74:	cmp	w8, #0x1
  406f78:	b.ne	40712c <ferror@plt+0x416c>  // b.any
  406f7c:	ldrb	w0, [x20]
  406f80:	bl	404538 <ferror@plt+0x1578>
  406f84:	and	x8, x0, #0xff
  406f88:	ldrb	w0, [x24, x8]
  406f8c:	bl	404538 <ferror@plt+0x1578>
  406f90:	ldrb	w8, [x21]
  406f94:	and	w19, w0, #0xff
  406f98:	mov	w0, w8
  406f9c:	bl	404538 <ferror@plt+0x1578>
  406fa0:	and	x8, x0, #0xff
  406fa4:	ldrb	w0, [x24, x8]
  406fa8:	bl	404538 <ferror@plt+0x1578>
  406fac:	subs	w28, w19, w0, uxtb
  406fb0:	mov	x25, x27
  406fb4:	b.ne	406b5c <ferror@plt+0x3b9c>  // b.any
  406fb8:	add	x20, x20, #0x1
  406fbc:	add	x21, x21, #0x1
  406fc0:	b	406ed4 <ferror@plt+0x3f14>
  406fc4:	add	x20, x20, #0x1
  406fc8:	add	x21, x21, #0x1
  406fcc:	cmp	x20, x25
  406fd0:	cset	w19, cc  // cc = lo, ul, last
  406fd4:	b.cs	407018 <ferror@plt+0x4058>  // b.hs, b.nlast
  406fd8:	ldrb	w0, [x20]
  406fdc:	bl	404538 <ferror@plt+0x1578>
  406fe0:	and	x8, x0, #0xff
  406fe4:	ldrb	w8, [x22, x8]
  406fe8:	cbz	w8, 407018 <ferror@plt+0x4058>
  406fec:	add	x23, x20, #0x1
  406ff0:	cmp	x23, x25
  406ff4:	mov	x20, x23
  406ff8:	cset	w19, cc  // cc = lo, ul, last
  406ffc:	b.cs	407018 <ferror@plt+0x4058>  // b.hs, b.nlast
  407000:	mov	x23, x20
  407004:	ldrb	w0, [x23], #1
  407008:	bl	404538 <ferror@plt+0x1578>
  40700c:	and	x8, x0, #0xff
  407010:	ldrb	w8, [x22, x8]
  407014:	cbnz	w8, 406ff0 <ferror@plt+0x4030>
  407018:	cmp	x21, x26
  40701c:	cset	w23, cc  // cc = lo, ul, last
  407020:	b.cs	407064 <ferror@plt+0x40a4>  // b.hs, b.nlast
  407024:	ldrb	w0, [x21]
  407028:	bl	404538 <ferror@plt+0x1578>
  40702c:	and	x8, x0, #0xff
  407030:	ldrb	w8, [x22, x8]
  407034:	cbz	w8, 407064 <ferror@plt+0x40a4>
  407038:	add	x24, x21, #0x1
  40703c:	cmp	x24, x26
  407040:	mov	x21, x24
  407044:	cset	w23, cc  // cc = lo, ul, last
  407048:	b.cs	407064 <ferror@plt+0x40a4>  // b.hs, b.nlast
  40704c:	mov	x24, x21
  407050:	ldrb	w0, [x24], #1
  407054:	bl	404538 <ferror@plt+0x1578>
  407058:	and	x8, x0, #0xff
  40705c:	ldrb	w8, [x22, x8]
  407060:	cbnz	w8, 40703c <ferror@plt+0x407c>
  407064:	and	w8, w19, w23
  407068:	cmp	w8, #0x1
  40706c:	b.ne	40714c <ferror@plt+0x418c>  // b.any
  407070:	ldrb	w0, [x20]
  407074:	bl	404538 <ferror@plt+0x1578>
  407078:	ldrb	w8, [x21]
  40707c:	and	w19, w0, #0xff
  407080:	mov	w0, w8
  407084:	bl	404538 <ferror@plt+0x1578>
  407088:	subs	w28, w19, w0, uxtb
  40708c:	b.eq	406fc4 <ferror@plt+0x4004>  // b.none
  407090:	b	406b5c <ferror@plt+0x3b9c>
  407094:	ldrb	w8, [x22, #56]
  407098:	cbz	w8, 40710c <ferror@plt+0x414c>
  40709c:	mov	x0, x25
  4070a0:	mov	x1, x26
  4070a4:	bl	40b09c <ferror@plt+0x80dc>
  4070a8:	b	406d3c <ferror@plt+0x3d7c>
  4070ac:	cbz	x23, 40713c <ferror@plt+0x417c>
  4070b0:	ldr	x22, [sp, #64]
  4070b4:	cbz	x27, 407164 <ferror@plt+0x41a4>
  4070b8:	cbz	x24, 407174 <ferror@plt+0x41b4>
  4070bc:	cmp	x21, x26
  4070c0:	b.cs	407194 <ferror@plt+0x41d4>  // b.hs, b.nlast
  4070c4:	cmp	x20, x25
  4070c8:	b.cs	407194 <ferror@plt+0x41d4>  // b.hs, b.nlast
  4070cc:	ldrb	w0, [x20], #1
  4070d0:	bl	404538 <ferror@plt+0x1578>
  4070d4:	and	x8, x0, #0xff
  4070d8:	ldrb	w0, [x24, x8]
  4070dc:	bl	404538 <ferror@plt+0x1578>
  4070e0:	ldrb	w8, [x21], #1
  4070e4:	and	w19, w0, #0xff
  4070e8:	mov	w0, w8
  4070ec:	bl	404538 <ferror@plt+0x1578>
  4070f0:	and	x8, x0, #0xff
  4070f4:	ldrb	w0, [x24, x8]
  4070f8:	bl	404538 <ferror@plt+0x1578>
  4070fc:	subs	w28, w19, w0, uxtb
  407100:	mov	w8, #0x12                  	// #18
  407104:	b.eq	4070bc <ferror@plt+0x40fc>  // b.none
  407108:	b	406b64 <ferror@plt+0x3ba4>
  40710c:	cbz	x19, 407158 <ferror@plt+0x4198>
  407110:	cbz	x27, 40716c <ferror@plt+0x41ac>
  407114:	add	x1, x19, #0x1
  407118:	add	x3, x27, #0x1
  40711c:	mov	x0, x25
  407120:	mov	x2, x26
  407124:	bl	4104f4 <ferror@plt+0xd534>
  407128:	b	406d3c <ferror@plt+0x3d7c>
  40712c:	ldr	x22, [sp, #64]
  407130:	sub	w28, w19, w23
  407134:	mov	x25, x27
  407138:	b	406d68 <ferror@plt+0x3da8>
  40713c:	ldr	x22, [sp, #64]
  407140:	cmp	x27, #0x0
  407144:	csetm	w28, ne  // ne = any
  407148:	b	406d68 <ferror@plt+0x3da8>
  40714c:	ldr	x22, [sp, #64]
  407150:	sub	w28, w19, w23
  407154:	b	406d68 <ferror@plt+0x3da8>
  407158:	cmp	x27, #0x0
  40715c:	csetm	w28, ne  // ne = any
  407160:	b	406d40 <ferror@plt+0x3d80>
  407164:	mov	w8, #0x1b                  	// #27
  407168:	b	406b64 <ferror@plt+0x3ba4>
  40716c:	mov	w28, #0x1                   	// #1
  407170:	b	406d40 <ferror@plt+0x3d80>
  407174:	cmp	x23, x27
  407178:	csel	x2, x23, x27, cc  // cc = lo, ul, last
  40717c:	mov	x0, x20
  407180:	mov	x1, x21
  407184:	bl	402c70 <memcmp@plt>
  407188:	cbz	w0, 407194 <ferror@plt+0x41d4>
  40718c:	mov	w28, w0
  407190:	b	406b60 <ferror@plt+0x3ba0>
  407194:	cmp	x23, x27
  407198:	cset	w8, ne  // ne = any
  40719c:	csinv	w28, w8, wzr, cs  // cs = hs, nlast
  4071a0:	b	406d68 <ferror@plt+0x3da8>
  4071a4:	cmp	w8, #0x12
  4071a8:	b.eq	4071b8 <ferror@plt+0x41f8>  // b.none
  4071ac:	cmp	w8, #0x1b
  4071b0:	b.ne	4071c8 <ferror@plt+0x4208>  // b.any
  4071b4:	mov	w28, #0x1                   	// #1
  4071b8:	ldrb	w8, [x22, #55]
  4071bc:	cmp	w8, #0x0
  4071c0:	cneg	w0, w28, ne  // ne = any
  4071c4:	b	4071cc <ferror@plt+0x420c>
  4071c8:	mov	w0, wzr
  4071cc:	add	sp, sp, #0xff0
  4071d0:	ldp	x20, x19, [sp, #80]
  4071d4:	ldp	x22, x21, [sp, #64]
  4071d8:	ldp	x24, x23, [sp, #48]
  4071dc:	ldp	x26, x25, [sp, #32]
  4071e0:	ldp	x28, x27, [sp, #16]
  4071e4:	ldp	x29, x30, [sp], #96
  4071e8:	ret
  4071ec:	stp	x29, x30, [sp, #-48]!
  4071f0:	str	x21, [sp, #16]
  4071f4:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  4071f8:	stp	x20, x19, [sp, #32]
  4071fc:	mov	x20, x1
  407200:	sub	x19, x0, #0x1
  407204:	add	x21, x21, #0x640
  407208:	mov	x29, sp
  40720c:	ldrb	w0, [x19, #1]!
  407210:	bl	404538 <ferror@plt+0x1578>
  407214:	and	x8, x0, #0xff
  407218:	ldrb	w8, [x21, x8]
  40721c:	cbnz	w8, 40720c <ferror@plt+0x424c>
  407220:	sub	x20, x20, #0x1
  407224:	ldrb	w0, [x20, #1]!
  407228:	bl	404538 <ferror@plt+0x1578>
  40722c:	and	x8, x0, #0xff
  407230:	ldrb	w8, [x21, x8]
  407234:	cbnz	w8, 407224 <ferror@plt+0x4264>
  407238:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40723c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  407240:	ldr	w2, [x8, #1408]
  407244:	ldr	w3, [x9, #1412]
  407248:	mov	x0, x19
  40724c:	mov	x1, x20
  407250:	bl	40f854 <ferror@plt+0xc894>
  407254:	ldp	x20, x19, [sp, #32]
  407258:	ldr	x21, [sp, #16]
  40725c:	ldp	x29, x30, [sp], #48
  407260:	ret
  407264:	sub	sp, sp, #0x50
  407268:	stp	x29, x30, [sp, #48]
  40726c:	add	x29, sp, #0x30
  407270:	stp	x20, x19, [sp, #64]
  407274:	mov	x19, x1
  407278:	sub	x1, x29, #0x8
  40727c:	mov	x20, x0
  407280:	bl	402d00 <strtold@plt>
  407284:	sub	x1, x29, #0x10
  407288:	mov	x0, x19
  40728c:	str	q0, [sp, #16]
  407290:	bl	402d00 <strtold@plt>
  407294:	ldp	x8, x9, [x29, #-16]
  407298:	cmp	x9, x20
  40729c:	b.eq	4072c4 <ferror@plt+0x4304>  // b.none
  4072a0:	cmp	x8, x19
  4072a4:	b.eq	4072e0 <ferror@plt+0x4320>  // b.none
  4072a8:	mov	v1.16b, v0.16b
  4072ac:	ldr	q0, [sp, #16]
  4072b0:	str	q1, [sp]
  4072b4:	bl	412070 <_obstack_memory_used@@Base+0xa14>
  4072b8:	tbz	w0, #31, 4072d0 <ferror@plt+0x4310>
  4072bc:	mov	w0, #0xffffffff            	// #-1
  4072c0:	b	4072e4 <ferror@plt+0x4324>
  4072c4:	cmp	x8, x19
  4072c8:	csetm	w0, ne  // ne = any
  4072cc:	b	4072e4 <ferror@plt+0x4324>
  4072d0:	ldp	q1, q0, [sp]
  4072d4:	bl	411f28 <_obstack_memory_used@@Base+0x8cc>
  4072d8:	cmp	w0, #0x0
  4072dc:	b.le	4072f4 <ferror@plt+0x4334>
  4072e0:	mov	w0, #0x1                   	// #1
  4072e4:	ldp	x20, x19, [sp, #64]
  4072e8:	ldp	x29, x30, [sp, #48]
  4072ec:	add	sp, sp, #0x50
  4072f0:	ret
  4072f4:	ldp	q1, q0, [sp]
  4072f8:	bl	411e20 <_obstack_memory_used@@Base+0x7c4>
  4072fc:	cbz	w0, 4072e4 <ferror@plt+0x4324>
  407300:	ldr	q0, [sp]
  407304:	mov	v1.16b, v0.16b
  407308:	bl	4121b0 <_obstack_memory_used@@Base+0xb54>
  40730c:	cbz	w0, 4072bc <ferror@plt+0x42fc>
  407310:	ldr	q0, [sp, #16]
  407314:	mov	v1.16b, v0.16b
  407318:	bl	4121b0 <_obstack_memory_used@@Base+0xb54>
  40731c:	cbz	w0, 4072e0 <ferror@plt+0x4320>
  407320:	mov	x0, x20
  407324:	mov	x1, x19
  407328:	bl	4078bc <ferror@plt+0x48fc>
  40732c:	b	4072e4 <ferror@plt+0x4324>
  407330:	stp	x29, x30, [sp, #-48]!
  407334:	str	x21, [sp, #16]
  407338:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  40733c:	stp	x20, x19, [sp, #32]
  407340:	mov	x20, x1
  407344:	sub	x19, x0, #0x1
  407348:	add	x21, x21, #0x640
  40734c:	mov	x29, sp
  407350:	ldrb	w0, [x19, #1]!
  407354:	bl	404538 <ferror@plt+0x1578>
  407358:	and	x8, x0, #0xff
  40735c:	ldrb	w8, [x21, x8]
  407360:	cbnz	w8, 407350 <ferror@plt+0x4390>
  407364:	sub	x20, x20, #0x1
  407368:	ldrb	w0, [x20, #1]!
  40736c:	bl	404538 <ferror@plt+0x1578>
  407370:	and	x8, x0, #0xff
  407374:	ldrb	w8, [x21, x8]
  407378:	cbnz	w8, 407368 <ferror@plt+0x43a8>
  40737c:	mov	x0, x19
  407380:	bl	407948 <ferror@plt+0x4988>
  407384:	mov	w21, w0
  407388:	mov	x0, x20
  40738c:	bl	407948 <ferror@plt+0x4988>
  407390:	subs	w0, w21, w0
  407394:	b.ne	4073b4 <ferror@plt+0x43f4>  // b.any
  407398:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40739c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  4073a0:	ldr	w2, [x8, #1408]
  4073a4:	ldr	w3, [x9, #1412]
  4073a8:	mov	x0, x19
  4073ac:	mov	x1, x20
  4073b0:	bl	40f854 <ferror@plt+0xc894>
  4073b4:	ldp	x20, x19, [sp, #32]
  4073b8:	ldr	x21, [sp, #16]
  4073bc:	ldp	x29, x30, [sp], #48
  4073c0:	ret
  4073c4:	sub	sp, sp, #0x70
  4073c8:	stp	x20, x19, [sp, #96]
  4073cc:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  4073d0:	stp	x22, x21, [sp, #80]
  4073d4:	mov	x19, x1
  4073d8:	sub	x21, x0, #0x1
  4073dc:	add	x20, x20, #0x640
  4073e0:	stp	x29, x30, [sp, #16]
  4073e4:	stp	x28, x27, [sp, #32]
  4073e8:	stp	x26, x25, [sp, #48]
  4073ec:	stp	x24, x23, [sp, #64]
  4073f0:	add	x29, sp, #0x10
  4073f4:	ldrb	w0, [x21, #1]!
  4073f8:	bl	404538 <ferror@plt+0x1578>
  4073fc:	and	x8, x0, #0xff
  407400:	ldrb	w8, [x20, x8]
  407404:	cbnz	w8, 4073f4 <ferror@plt+0x4434>
  407408:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  40740c:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  407410:	mov	x22, xzr
  407414:	mov	w25, #0xc                   	// #12
  407418:	add	x23, x23, #0x3f0
  40741c:	add	x24, x24, #0x940
  407420:	add	x8, x25, x22
  407424:	lsr	x26, x8, #1
  407428:	lsl	x8, x26, #4
  40742c:	ldr	x9, [x23, x8]
  407430:	mov	x8, x21
  407434:	ldrb	w28, [x9]
  407438:	cbz	w28, 407478 <ferror@plt+0x44b8>
  40743c:	mov	x27, xzr
  407440:	add	x20, x9, #0x1
  407444:	ldrb	w0, [x21, x27]
  407448:	bl	404538 <ferror@plt+0x1578>
  40744c:	and	x8, x0, #0xff
  407450:	ldrb	w0, [x24, x8]
  407454:	bl	404538 <ferror@plt+0x1578>
  407458:	and	w8, w0, #0xff
  40745c:	cmp	w8, w28, uxtb
  407460:	b.cc	407498 <ferror@plt+0x44d8>  // b.lo, b.ul, b.last
  407464:	b.hi	4074a8 <ferror@plt+0x44e8>  // b.pmore
  407468:	ldrb	w28, [x20, x27]
  40746c:	add	x27, x27, #0x1
  407470:	cbnz	w28, 407444 <ferror@plt+0x4484>
  407474:	add	x8, x21, x27
  407478:	cbz	x19, 407480 <ferror@plt+0x44c0>
  40747c:	str	x8, [x19]
  407480:	add	x8, x23, x26, lsl #4
  407484:	ldr	w8, [x8, #8]
  407488:	stur	w8, [x29, #-4]
  40748c:	mov	w8, wzr
  407490:	cbnz	w8, 4074b4 <ferror@plt+0x44f4>
  407494:	b	4074c4 <ferror@plt+0x4504>
  407498:	mov	w8, #0x1                   	// #1
  40749c:	mov	x25, x26
  4074a0:	cbnz	w8, 4074b4 <ferror@plt+0x44f4>
  4074a4:	b	4074c4 <ferror@plt+0x4504>
  4074a8:	add	x22, x26, #0x1
  4074ac:	mov	w8, #0x1                   	// #1
  4074b0:	cbz	w8, 4074c4 <ferror@plt+0x4504>
  4074b4:	cmp	x22, x25
  4074b8:	b.cc	407420 <ferror@plt+0x4460>  // b.lo, b.ul, b.last
  4074bc:	mov	w0, wzr
  4074c0:	b	4074c8 <ferror@plt+0x4508>
  4074c4:	ldur	w0, [x29, #-4]
  4074c8:	ldp	x20, x19, [sp, #96]
  4074cc:	ldp	x22, x21, [sp, #80]
  4074d0:	ldp	x24, x23, [sp, #64]
  4074d4:	ldp	x26, x25, [sp, #48]
  4074d8:	ldp	x28, x27, [sp, #32]
  4074dc:	ldp	x29, x30, [sp, #16]
  4074e0:	add	sp, sp, #0x70
  4074e4:	ret
  4074e8:	stp	x29, x30, [sp, #-96]!
  4074ec:	stp	x28, x27, [sp, #16]
  4074f0:	stp	x26, x25, [sp, #32]
  4074f4:	stp	x24, x23, [sp, #48]
  4074f8:	stp	x22, x21, [sp, #64]
  4074fc:	stp	x20, x19, [sp, #80]
  407500:	mov	x29, sp
  407504:	sub	sp, sp, #0x1, lsl #12
  407508:	sub	sp, sp, #0x130
  40750c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  407510:	add	x9, x9, #0xae0
  407514:	ldp	q1, q4, [x9, #96]
  407518:	ldp	q2, q16, [x9, #32]
  40751c:	ldr	q6, [x9, #128]
  407520:	add	x8, sp, #0x20
  407524:	add	x10, x8, #0x9c
  407528:	ldur	q0, [x9, #140]
  40752c:	stp	q4, q6, [x10, #112]
  407530:	stur	q1, [x8, #252]
  407534:	ldp	q3, q1, [x9]
  407538:	stur	q2, [x8, #188]
  40753c:	stur	q16, [x8, #204]
  407540:	ldp	q16, q2, [x9, #64]
  407544:	stur	q0, [x10, #140]
  407548:	ldp	q4, q0, [x9, #64]
  40754c:	stur	q3, [x8, #156]
  407550:	stur	q2, [x8, #236]
  407554:	ldp	q3, q2, [x9]
  407558:	ldp	q5, q7, [x9, #96]
  40755c:	stur	q4, [x8, #220]
  407560:	ldr	q4, [x9, #128]
  407564:	stur	q2, [x8, #172]
  407568:	ldur	q2, [x9, #140]
  40756c:	stp	q5, q7, [sp, #128]
  407570:	str	q4, [sp, #160]
  407574:	ldp	q17, q6, [x9, #32]
  407578:	stur	q2, [x8, #140]
  40757c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  407580:	ldrb	w8, [x8, #1400]
  407584:	mov	x24, x3
  407588:	mov	x19, x2
  40758c:	mov	x23, x1
  407590:	mov	x20, x0
  407594:	mov	x28, xzr
  407598:	str	x10, [sp, #8]
  40759c:	stp	q17, q6, [sp, #64]
  4075a0:	stp	q16, q0, [sp, #96]
  4075a4:	stp	q3, q1, [sp, #32]
  4075a8:	cbz	w8, 4077c4 <ferror@plt+0x4804>
  4075ac:	add	x22, x20, x23
  4075b0:	add	x8, x19, x24
  4075b4:	mov	w26, #0xfa0                 	// #4000
  4075b8:	add	x27, sp, #0x180
  4075bc:	mov	x25, x24
  4075c0:	mov	x21, x23
  4075c4:	str	wzr, [sp, #20]
  4075c8:	str	x8, [sp, #24]
  4075cc:	str	x22, [sp]
  4075d0:	b	407624 <ferror@plt+0x4664>
  4075d4:	add	x2, sp, #0x20
  4075d8:	mov	x0, x27
  4075dc:	mov	x1, x23
  4075e0:	mov	x22, x28
  4075e4:	bl	40ae84 <ferror@plt+0x7ec4>
  4075e8:	ldr	x2, [sp, #8]
  4075ec:	add	x28, x27, x23
  4075f0:	mov	x0, x28
  4075f4:	mov	x1, x24
  4075f8:	bl	40ae84 <ferror@plt+0x7ec4>
  4075fc:	ldr	w8, [sp, #20]
  407600:	cbz	w8, 407790 <ferror@plt+0x47d0>
  407604:	mov	x28, x22
  407608:	ldr	x22, [sp]
  40760c:	mov	w8, #0x1                   	// #1
  407610:	mov	x24, x25
  407614:	mov	x23, x21
  407618:	mov	x25, x24
  40761c:	mov	x21, x23
  407620:	tbz	w8, #0, 4077c8 <ferror@plt+0x4808>
  407624:	add	x8, x21, x25
  407628:	add	x8, x8, x8, lsl #1
  40762c:	add	x8, x8, #0x2
  407630:	cmp	x26, x8
  407634:	b.cs	407670 <ferror@plt+0x46b0>  // b.hs, b.nlast
  407638:	add	x9, x26, x26, lsl #1
  40763c:	lsr	x9, x9, #1
  407640:	cmp	x8, x9
  407644:	mov	x0, x28
  407648:	csel	x23, x8, x9, hi  // hi = pmore
  40764c:	bl	402d10 <free@plt>
  407650:	mov	x0, x23
  407654:	bl	402a40 <malloc@plt>
  407658:	cmp	x0, #0x0
  40765c:	mov	w8, #0xfa0                 	// #4000
  407660:	csel	x26, x8, x23, eq  // eq = none
  407664:	add	x8, sp, #0x180
  407668:	mov	x28, x0
  40766c:	csel	x27, x8, x0, eq  // eq = none
  407670:	cmp	x20, x22
  407674:	b.cs	407690 <ferror@plt+0x46d0>  // b.hs, b.nlast
  407678:	mov	x0, x27
  40767c:	mov	x1, x20
  407680:	mov	x2, x26
  407684:	bl	407a68 <ferror@plt+0x4aa8>
  407688:	add	x23, x0, #0x1
  40768c:	b	407694 <ferror@plt+0x46d4>
  407690:	mov	x23, xzr
  407694:	ldr	x8, [sp, #24]
  407698:	cmp	x19, x8
  40769c:	b.cs	4076c0 <ferror@plt+0x4700>  // b.hs, b.nlast
  4076a0:	add	x8, x27, x23
  4076a4:	subs	x9, x26, x23
  4076a8:	csel	x0, x8, xzr, cs  // cs = hs, nlast
  4076ac:	csel	x2, xzr, x9, cc  // cc = lo, ul, last
  4076b0:	mov	x1, x19
  4076b4:	bl	407a68 <ferror@plt+0x4aa8>
  4076b8:	add	x24, x0, #0x1
  4076bc:	b	4076c4 <ferror@plt+0x4704>
  4076c0:	mov	x24, xzr
  4076c4:	add	x8, x24, x23
  4076c8:	cmp	x8, x26
  4076cc:	b.hi	4076d8 <ferror@plt+0x4718>  // b.pmore
  4076d0:	cmp	x26, x23
  4076d4:	b.cs	407738 <ferror@plt+0x4778>  // b.hs, b.nlast
  4076d8:	add	x9, x8, x8, lsl #1
  4076dc:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  4076e0:	lsr	x9, x9, #1
  4076e4:	cmp	x8, x10
  4076e8:	mov	x0, x28
  4076ec:	csel	x26, x9, x8, cc  // cc = lo, ul, last
  4076f0:	bl	402d10 <free@plt>
  4076f4:	mov	x0, x26
  4076f8:	bl	410160 <ferror@plt+0xd1a0>
  4076fc:	cmp	x20, x22
  407700:	mov	x28, x0
  407704:	b.cs	407718 <ferror@plt+0x4758>  // b.hs, b.nlast
  407708:	mov	x0, x28
  40770c:	mov	x1, x20
  407710:	mov	x2, x23
  407714:	bl	402dd0 <strxfrm@plt>
  407718:	ldr	x8, [sp, #24]
  40771c:	cmp	x19, x8
  407720:	b.cs	407734 <ferror@plt+0x4774>  // b.hs, b.nlast
  407724:	add	x0, x28, x23
  407728:	mov	x1, x19
  40772c:	mov	x2, x24
  407730:	bl	402dd0 <strxfrm@plt>
  407734:	mov	x27, x28
  407738:	cmp	x20, x22
  40773c:	b.cs	407750 <ferror@plt+0x4790>  // b.hs, b.nlast
  407740:	mov	x0, x20
  407744:	bl	4028b0 <strlen@plt>
  407748:	add	x8, x0, x20
  40774c:	add	x20, x8, #0x1
  407750:	ldr	x8, [sp, #24]
  407754:	cmp	x19, x8
  407758:	b.cs	40776c <ferror@plt+0x47ac>  // b.hs, b.nlast
  40775c:	mov	x0, x19
  407760:	bl	4028b0 <strlen@plt>
  407764:	add	x8, x0, x19
  407768:	add	x19, x8, #0x1
  40776c:	cmp	x20, x22
  407770:	b.cc	4075d4 <ferror@plt+0x4614>  // b.lo, b.ul, b.last
  407774:	ldr	x8, [sp, #24]
  407778:	cmp	x19, x8
  40777c:	b.cc	4075d4 <ferror@plt+0x4614>  // b.lo, b.ul, b.last
  407780:	mov	w8, wzr
  407784:	add	x19, x27, x23
  407788:	mov	x20, x27
  40778c:	b	407618 <ferror@plt+0x4658>
  407790:	cmp	x23, x24
  407794:	csel	x2, x23, x24, cc  // cc = lo, ul, last
  407798:	mov	x0, x27
  40779c:	mov	x1, x28
  4077a0:	bl	402c70 <memcmp@plt>
  4077a4:	str	w0, [sp, #20]
  4077a8:	cbnz	w0, 407604 <ferror@plt+0x4644>
  4077ac:	cmp	x23, x24
  4077b0:	cset	w8, cc  // cc = lo, ul, last
  4077b4:	cset	w9, hi  // hi = pmore
  4077b8:	sub	w8, w9, w8
  4077bc:	str	w8, [sp, #20]
  4077c0:	b	407604 <ferror@plt+0x4644>
  4077c4:	str	wzr, [sp, #20]
  4077c8:	add	x2, sp, #0x20
  4077cc:	mov	x0, x20
  4077d0:	mov	x1, x23
  4077d4:	bl	40ae84 <ferror@plt+0x7ec4>
  4077d8:	add	x0, sp, #0x20
  4077dc:	add	x1, sp, #0x160
  4077e0:	add	x21, sp, #0x160
  4077e4:	bl	40a2a0 <ferror@plt+0x72e0>
  4077e8:	ldr	x22, [sp, #8]
  4077ec:	mov	x0, x19
  4077f0:	mov	x1, x24
  4077f4:	mov	x2, x22
  4077f8:	bl	40ae84 <ferror@plt+0x7ec4>
  4077fc:	add	x1, x21, #0x10
  407800:	mov	x0, x22
  407804:	bl	40a2a0 <ferror@plt+0x72e0>
  407808:	ldr	x8, [sp, #352]
  40780c:	ldr	x9, [sp, #368]
  407810:	rev	x8, x8
  407814:	rev	x9, x9
  407818:	cmp	x8, x9
  40781c:	b.ne	407844 <ferror@plt+0x4884>  // b.any
  407820:	ldr	x8, [sp, #360]
  407824:	ldr	x9, [sp, #376]
  407828:	rev	x8, x8
  40782c:	rev	x9, x9
  407830:	cmp	x8, x9
  407834:	b.ne	407844 <ferror@plt+0x4884>  // b.any
  407838:	mov	w22, wzr
  40783c:	cbnz	w22, 40788c <ferror@plt+0x48cc>
  407840:	b	407854 <ferror@plt+0x4894>
  407844:	cmp	x8, x9
  407848:	mov	w8, #0xffffffff            	// #-1
  40784c:	cneg	w22, w8, cs  // cs = hs, nlast
  407850:	cbnz	w22, 40788c <ferror@plt+0x48cc>
  407854:	ldr	w8, [sp, #20]
  407858:	mov	w22, w8
  40785c:	cbnz	w8, 40788c <ferror@plt+0x48cc>
  407860:	cmp	x23, x24
  407864:	csel	x2, x23, x24, cc  // cc = lo, ul, last
  407868:	mov	x0, x20
  40786c:	mov	x1, x19
  407870:	bl	402c70 <memcmp@plt>
  407874:	mov	w22, w0
  407878:	cbnz	w0, 40788c <ferror@plt+0x48cc>
  40787c:	cmp	x23, x24
  407880:	cset	w8, cc  // cc = lo, ul, last
  407884:	cset	w9, hi  // hi = pmore
  407888:	sub	w22, w9, w8
  40788c:	mov	x0, x28
  407890:	bl	402d10 <free@plt>
  407894:	mov	w0, w22
  407898:	add	sp, sp, #0x1, lsl #12
  40789c:	add	sp, sp, #0x130
  4078a0:	ldp	x20, x19, [sp, #80]
  4078a4:	ldp	x22, x21, [sp, #64]
  4078a8:	ldp	x24, x23, [sp, #48]
  4078ac:	ldp	x26, x25, [sp, #32]
  4078b0:	ldp	x28, x27, [sp, #16]
  4078b4:	ldp	x29, x30, [sp], #96
  4078b8:	ret
  4078bc:	sub	sp, sp, #0x40
  4078c0:	str	x19, [sp, #48]
  4078c4:	mov	x19, x1
  4078c8:	mov	x1, xzr
  4078cc:	stp	x29, x30, [sp, #32]
  4078d0:	add	x29, sp, #0x20
  4078d4:	stp	xzr, xzr, [sp, #16]
  4078d8:	bl	402d00 <strtold@plt>
  4078dc:	mov	x0, x19
  4078e0:	mov	x1, xzr
  4078e4:	str	q0, [sp, #16]
  4078e8:	stp	xzr, xzr, [sp]
  4078ec:	bl	402d00 <strtold@plt>
  4078f0:	str	q0, [sp]
  4078f4:	ldr	x8, [sp, #16]
  4078f8:	ldr	x9, [sp]
  4078fc:	rev	x8, x8
  407900:	rev	x9, x9
  407904:	cmp	x8, x9
  407908:	b.ne	40792c <ferror@plt+0x496c>  // b.any
  40790c:	ldr	x8, [sp, #24]
  407910:	ldr	x9, [sp, #8]
  407914:	rev	x8, x8
  407918:	rev	x9, x9
  40791c:	cmp	x8, x9
  407920:	b.ne	40792c <ferror@plt+0x496c>  // b.any
  407924:	mov	w0, wzr
  407928:	b	407938 <ferror@plt+0x4978>
  40792c:	cmp	x8, x9
  407930:	mov	w8, #0xffffffff            	// #-1
  407934:	cneg	w0, w8, cs  // cs = hs, nlast
  407938:	ldr	x19, [sp, #48]
  40793c:	ldp	x29, x30, [sp, #32]
  407940:	add	sp, sp, #0x40
  407944:	ret
  407948:	stp	x29, x30, [sp, #-32]!
  40794c:	str	x19, [sp, #16]
  407950:	mov	x8, x0
  407954:	ldrb	w19, [x8], #1
  407958:	mov	x29, sp
  40795c:	cmp	w19, #0x2d
  407960:	csel	x8, x0, x8, ne  // ne = any
  407964:	add	x0, x29, #0x18
  407968:	str	x8, [x29, #24]
  40796c:	bl	4079ac <ferror@plt+0x49ec>
  407970:	and	w8, w0, #0xff
  407974:	cmp	w8, #0x31
  407978:	b.cc	40799c <ferror@plt+0x49dc>  // b.lo, b.ul, b.last
  40797c:	ldr	x8, [x29, #24]
  407980:	adrp	x9, 412000 <_obstack_memory_used@@Base+0x9a4>
  407984:	add	x9, x9, #0xb18
  407988:	cmp	w19, #0x2d
  40798c:	ldrb	w8, [x8]
  407990:	ldrb	w8, [x9, x8]
  407994:	cneg	w0, w8, eq  // eq = none
  407998:	b	4079a0 <ferror@plt+0x49e0>
  40799c:	mov	w0, wzr
  4079a0:	ldr	x19, [sp, #16]
  4079a4:	ldp	x29, x30, [sp], #32
  4079a8:	ret
  4079ac:	ldr	x10, [x0]
  4079b0:	mov	x9, x10
  4079b4:	ldrb	w11, [x9], #1
  4079b8:	sub	w8, w11, #0x30
  4079bc:	cmp	w8, #0x9
  4079c0:	b.hi	407a10 <ferror@plt+0x4a50>  // b.pmore
  4079c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4079c8:	ldr	w12, [x8, #1412]
  4079cc:	mov	w8, wzr
  4079d0:	ldrb	w13, [x10, #1]
  4079d4:	and	w14, w8, #0xff
  4079d8:	cmp	w14, w11, uxtb
  4079dc:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  4079e0:	cmp	w12, w13
  4079e4:	add	x10, x10, #0x2
  4079e8:	csel	x10, x10, x9, eq  // eq = none
  4079ec:	mov	x9, x10
  4079f0:	ldrb	w11, [x9], #1
  4079f4:	cset	w13, eq  // eq = none
  4079f8:	sub	w14, w11, #0x30
  4079fc:	cmp	w14, #0xa
  407a00:	b.cc	4079d0 <ferror@plt+0x4a10>  // b.lo, b.ul, b.last
  407a04:	tbz	w13, #0, 407a1c <ferror@plt+0x4a5c>
  407a08:	mov	x9, x10
  407a0c:	b	407a58 <ferror@plt+0x4a98>
  407a10:	mov	w8, wzr
  407a14:	mov	w13, wzr
  407a18:	tbnz	w13, #0, 407a08 <ferror@plt+0x4a48>
  407a1c:	adrp	x10, 426000 <_obstack_memory_used@@Base+0x149a4>
  407a20:	ldr	w10, [x10, #1408]
  407a24:	cmp	w10, w11
  407a28:	b.ne	407a58 <ferror@plt+0x4a98>  // b.any
  407a2c:	ldrb	w10, [x9], #1
  407a30:	sub	w11, w10, #0x30
  407a34:	cmp	w11, #0x9
  407a38:	b.hi	407a58 <ferror@plt+0x4a98>  // b.pmore
  407a3c:	and	w11, w8, #0xff
  407a40:	cmp	w11, w10, uxtb
  407a44:	csel	w8, w10, w8, cc  // cc = lo, ul, last
  407a48:	ldrb	w10, [x9], #1
  407a4c:	sub	w11, w10, #0x30
  407a50:	cmp	w11, #0xa
  407a54:	b.cc	407a3c <ferror@plt+0x4a7c>  // b.lo, b.ul, b.last
  407a58:	sub	x9, x9, #0x1
  407a5c:	str	x9, [x0]
  407a60:	mov	w0, w8
  407a64:	ret
  407a68:	stp	x29, x30, [sp, #-48]!
  407a6c:	stp	x22, x21, [sp, #16]
  407a70:	stp	x20, x19, [sp, #32]
  407a74:	mov	x29, sp
  407a78:	mov	x20, x2
  407a7c:	mov	x19, x1
  407a80:	mov	x21, x0
  407a84:	bl	402f30 <__errno_location@plt>
  407a88:	mov	x22, x0
  407a8c:	str	wzr, [x0]
  407a90:	mov	x0, x21
  407a94:	mov	x1, x19
  407a98:	mov	x2, x20
  407a9c:	bl	402dd0 <strxfrm@plt>
  407aa0:	ldr	w20, [x22]
  407aa4:	cbnz	w20, 407ab8 <ferror@plt+0x4af8>
  407aa8:	ldp	x20, x19, [sp, #32]
  407aac:	ldp	x22, x21, [sp, #16]
  407ab0:	ldp	x29, x30, [sp], #48
  407ab4:	ret
  407ab8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  407abc:	add	x1, x1, #0x4c7
  407ac0:	mov	w2, #0x5                   	// #5
  407ac4:	mov	x0, xzr
  407ac8:	bl	402ea0 <dcgettext@plt>
  407acc:	mov	x2, x0
  407ad0:	mov	w0, wzr
  407ad4:	mov	w1, w20
  407ad8:	bl	4028e0 <error@plt>
  407adc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  407ae0:	add	x1, x1, #0x4e4
  407ae4:	mov	w2, #0x5                   	// #5
  407ae8:	mov	x0, xzr
  407aec:	bl	402ea0 <dcgettext@plt>
  407af0:	mov	x2, x0
  407af4:	mov	w0, wzr
  407af8:	mov	w1, wzr
  407afc:	bl	4028e0 <error@plt>
  407b00:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  407b04:	add	x1, x1, #0x50e
  407b08:	mov	w2, #0x5                   	// #5
  407b0c:	mov	x0, xzr
  407b10:	bl	402ea0 <dcgettext@plt>
  407b14:	mov	x20, x0
  407b18:	mov	w1, #0x8                   	// #8
  407b1c:	mov	w0, wzr
  407b20:	mov	x2, x19
  407b24:	bl	40e180 <ferror@plt+0xb1c0>
  407b28:	mov	x3, x0
  407b2c:	mov	w0, #0x2                   	// #2
  407b30:	mov	w1, wzr
  407b34:	mov	x2, x20
  407b38:	bl	4028e0 <error@plt>
  407b3c:	stp	x29, x30, [sp, #-48]!
  407b40:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  407b44:	stp	x20, x19, [sp, #32]
  407b48:	ldr	x20, [x8, #1568]
  407b4c:	stp	x22, x21, [sp, #16]
  407b50:	mov	x29, sp
  407b54:	mov	x19, x0
  407b58:	mov	x1, x20
  407b5c:	bl	407bac <ferror@plt+0x4bec>
  407b60:	cbz	x20, 407b9c <ferror@plt+0x4bdc>
  407b64:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  407b68:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  407b6c:	b	407b84 <ferror@plt+0x4bc4>
  407b70:	mov	x20, xzr
  407b74:	mov	x0, x19
  407b78:	mov	x1, x20
  407b7c:	bl	407bac <ferror@plt+0x4bec>
  407b80:	cbz	x20, 407b9c <ferror@plt+0x4bdc>
  407b84:	ldr	x20, [x20, #64]
  407b88:	cbnz	x20, 407b74 <ferror@plt+0x4bb4>
  407b8c:	ldrb	w8, [x21, #1562]
  407b90:	tbnz	w8, #0, 407b9c <ferror@plt+0x4bdc>
  407b94:	ldrb	w8, [x22, #1561]
  407b98:	cbz	w8, 407b70 <ferror@plt+0x4bb0>
  407b9c:	ldp	x20, x19, [sp, #32]
  407ba0:	ldp	x22, x21, [sp, #16]
  407ba4:	ldp	x29, x30, [sp], #48
  407ba8:	ret
  407bac:	sub	sp, sp, #0x50
  407bb0:	stp	x29, x30, [sp, #16]
  407bb4:	stp	x24, x23, [sp, #32]
  407bb8:	stp	x22, x21, [sp, #48]
  407bbc:	stp	x20, x19, [sp, #64]
  407bc0:	ldp	x19, x8, [x0]
  407bc4:	add	x29, sp, #0x10
  407bc8:	add	x8, x19, x8
  407bcc:	sub	x20, x8, #0x1
  407bd0:	cbz	x1, 407c78 <ferror@plt+0x4cb8>
  407bd4:	ldr	x24, [x1]
  407bd8:	mov	x22, x1
  407bdc:	mov	x23, x0
  407be0:	mov	x21, x19
  407be4:	cmn	x24, #0x1
  407be8:	b.eq	407bfc <ferror@plt+0x4c3c>  // b.none
  407bec:	mov	x0, x23
  407bf0:	mov	x1, x22
  407bf4:	bl	4069c0 <ferror@plt+0x3a00>
  407bf8:	mov	x21, x0
  407bfc:	ldr	x8, [x22, #16]
  407c00:	cmn	x8, #0x1
  407c04:	b.eq	407c18 <ferror@plt+0x4c58>  // b.none
  407c08:	mov	x0, x23
  407c0c:	mov	x1, x22
  407c10:	bl	406868 <ferror@plt+0x38a8>
  407c14:	mov	x20, x0
  407c18:	ldrb	w8, [x22, #48]
  407c1c:	cbz	w8, 407c28 <ferror@plt+0x4c68>
  407c20:	cmn	x24, #0x1
  407c24:	b.eq	407c3c <ferror@plt+0x4c7c>  // b.none
  407c28:	ldrb	w8, [x22, #54]
  407c2c:	cbnz	w8, 407c3c <ferror@plt+0x4c7c>
  407c30:	mov	x0, x22
  407c34:	bl	40617c <ferror@plt+0x31bc>
  407c38:	tbz	w0, #0, 407d34 <ferror@plt+0x4d74>
  407c3c:	ldrb	w23, [x20]
  407c40:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  407c44:	sub	x21, x21, #0x1
  407c48:	add	x24, x24, #0x640
  407c4c:	strb	wzr, [x20]
  407c50:	ldrb	w0, [x21, #1]!
  407c54:	bl	404538 <ferror@plt+0x1578>
  407c58:	and	x8, x0, #0xff
  407c5c:	ldrb	w8, [x24, x8]
  407c60:	cbnz	w8, 407c50 <ferror@plt+0x4c90>
  407c64:	cmp	x20, x21
  407c68:	str	x21, [sp, #8]
  407c6c:	b.cs	407c80 <ferror@plt+0x4cc0>  // b.hs, b.nlast
  407c70:	str	x20, [sp, #8]
  407c74:	b	407d2c <ferror@plt+0x4d6c>
  407c78:	mov	x21, x19
  407c7c:	b	407d34 <ferror@plt+0x4d74>
  407c80:	ldrb	w8, [x22, #54]
  407c84:	cbz	w8, 407c98 <ferror@plt+0x4cd8>
  407c88:	add	x1, sp, #0x8
  407c8c:	mov	x0, x21
  407c90:	bl	4073c4 <ferror@plt+0x4404>
  407c94:	b	407d2c <ferror@plt+0x4d6c>
  407c98:	ldrb	w8, [x22, #52]
  407c9c:	cbz	w8, 407cb0 <ferror@plt+0x4cf0>
  407ca0:	add	x1, sp, #0x8
  407ca4:	mov	x0, x21
  407ca8:	bl	402d00 <strtold@plt>
  407cac:	b	407d2c <ferror@plt+0x4d6c>
  407cb0:	ldrb	w8, [x22, #50]
  407cb4:	cbnz	w8, 407cc0 <ferror@plt+0x4d00>
  407cb8:	ldrb	w8, [x22, #53]
  407cbc:	cbz	w8, 407c70 <ferror@plt+0x4cb0>
  407cc0:	cmp	x21, x20
  407cc4:	b.cs	407cd8 <ferror@plt+0x4d18>  // b.hs, b.nlast
  407cc8:	ldrb	w8, [x21]
  407ccc:	cmp	w8, #0x2d
  407cd0:	cset	w8, eq  // eq = none
  407cd4:	b	407cdc <ferror@plt+0x4d1c>
  407cd8:	mov	x8, xzr
  407cdc:	add	x8, x21, x8
  407ce0:	mov	x0, sp
  407ce4:	str	x8, [sp]
  407ce8:	bl	4079ac <ferror@plt+0x49ec>
  407cec:	and	w8, w0, #0xff
  407cf0:	cmp	w8, #0x30
  407cf4:	b.cc	407d2c <ferror@plt+0x4d6c>  // b.lo, b.ul, b.last
  407cf8:	ldrb	w9, [x22, #53]
  407cfc:	ldr	x8, [sp]
  407d00:	cbz	w9, 407d20 <ferror@plt+0x4d60>
  407d04:	ldrb	w9, [x8]
  407d08:	adrp	x10, 412000 <_obstack_memory_used@@Base+0x9a4>
  407d0c:	add	x10, x10, #0xb18
  407d10:	ldrb	w9, [x10, x9]
  407d14:	cmp	w9, #0x0
  407d18:	cset	w9, ne  // ne = any
  407d1c:	b	407d24 <ferror@plt+0x4d64>
  407d20:	mov	x9, xzr
  407d24:	add	x8, x8, x9
  407d28:	str	x8, [sp, #8]
  407d2c:	strb	w23, [x20]
  407d30:	ldr	x20, [sp, #8]
  407d34:	mov	x0, x19
  407d38:	mov	x1, x21
  407d3c:	bl	407d74 <ferror@plt+0x4db4>
  407d40:	mov	x19, x0
  407d44:	mov	x0, x21
  407d48:	mov	x1, x20
  407d4c:	bl	407d74 <ferror@plt+0x4db4>
  407d50:	mov	x1, x0
  407d54:	mov	x0, x19
  407d58:	bl	407dc0 <ferror@plt+0x4e00>
  407d5c:	ldp	x20, x19, [sp, #64]
  407d60:	ldp	x22, x21, [sp, #48]
  407d64:	ldp	x24, x23, [sp, #32]
  407d68:	ldp	x29, x30, [sp, #16]
  407d6c:	add	sp, sp, #0x50
  407d70:	ret
  407d74:	stp	x29, x30, [sp, #-32]!
  407d78:	stp	x20, x19, [sp, #16]
  407d7c:	mov	x19, x1
  407d80:	subs	x1, x1, x0
  407d84:	mov	w2, wzr
  407d88:	mov	x29, sp
  407d8c:	mov	x20, x0
  407d90:	bl	40c7d4 <ferror@plt+0x9814>
  407d94:	cmp	x19, x20
  407d98:	sxtw	x0, w0
  407d9c:	b.ls	407db4 <ferror@plt+0x4df4>  // b.plast
  407da0:	ldrb	w8, [x20], #1
  407da4:	cmp	w8, #0x9
  407da8:	cinc	x0, x0, eq  // eq = none
  407dac:	cmp	x19, x20
  407db0:	b.ne	407da0 <ferror@plt+0x4de0>  // b.any
  407db4:	ldp	x20, x19, [sp, #16]
  407db8:	ldp	x29, x30, [sp], #32
  407dbc:	ret
  407dc0:	stp	x29, x30, [sp, #-32]!
  407dc4:	stp	x20, x19, [sp, #16]
  407dc8:	mov	x19, x1
  407dcc:	mov	x29, sp
  407dd0:	cbz	x0, 407de8 <ferror@plt+0x4e28>
  407dd4:	mov	x20, x0
  407dd8:	mov	w0, #0x20                  	// #32
  407ddc:	sub	x20, x20, #0x1
  407de0:	bl	402b30 <putchar_unlocked@plt>
  407de4:	cbnz	x20, 407dd8 <ferror@plt+0x4e18>
  407de8:	cbz	x19, 407e08 <ferror@plt+0x4e48>
  407dec:	mov	w0, #0x5f                  	// #95
  407df0:	bl	402b30 <putchar_unlocked@plt>
  407df4:	subs	x19, x19, #0x1
  407df8:	b.ne	407dec <ferror@plt+0x4e2c>  // b.any
  407dfc:	mov	w0, #0xa                   	// #10
  407e00:	bl	402b30 <putchar_unlocked@plt>
  407e04:	b	407e28 <ferror@plt+0x4e68>
  407e08:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  407e0c:	add	x1, x1, #0x53b
  407e10:	mov	w2, #0x5                   	// #5
  407e14:	mov	x0, xzr
  407e18:	bl	402ea0 <dcgettext@plt>
  407e1c:	mov	x1, x0
  407e20:	mov	w0, #0x1                   	// #1
  407e24:	bl	402af0 <__printf_chk@plt>
  407e28:	ldp	x20, x19, [sp, #16]
  407e2c:	ldp	x29, x30, [sp], #32
  407e30:	ret
  407e34:	cmp	w0, w1
  407e38:	b.eq	407e60 <ferror@plt+0x4ea0>  // b.none
  407e3c:	stp	x29, x30, [sp, #-32]!
  407e40:	str	x19, [sp, #16]
  407e44:	mov	x29, sp
  407e48:	mov	w19, w0
  407e4c:	bl	402ef0 <dup2@plt>
  407e50:	mov	w0, w19
  407e54:	bl	402b80 <close@plt>
  407e58:	ldr	x19, [sp, #16]
  407e5c:	ldp	x29, x30, [sp], #32
  407e60:	ret
  407e64:	stp	x29, x30, [sp, #-16]!
  407e68:	mov	w1, wzr
  407e6c:	mov	x29, sp
  407e70:	bl	40871c <ferror@plt+0x575c>
  407e74:	ldp	x29, x30, [sp], #16
  407e78:	ret
  407e7c:	sub	sp, sp, #0x50
  407e80:	stp	x24, x23, [sp, #32]
  407e84:	mov	x24, x2
  407e88:	mov	x23, x1
  407e8c:	add	x2, sp, #0x8
  407e90:	mov	x1, x24
  407e94:	stp	x29, x30, [sp, #16]
  407e98:	stp	x22, x21, [sp, #48]
  407e9c:	stp	x20, x19, [sp, #64]
  407ea0:	add	x29, sp, #0x10
  407ea4:	mov	x21, x4
  407ea8:	mov	x22, x3
  407eac:	mov	x19, x0
  407eb0:	bl	408080 <ferror@plt+0x50c0>
  407eb4:	mov	x20, x0
  407eb8:	cmp	x0, x24
  407ebc:	b.cs	407ec8 <ferror@plt+0x4f08>  // b.hs, b.nlast
  407ec0:	cmp	x20, #0x1
  407ec4:	b.ls	407f00 <ferror@plt+0x4f40>  // b.plast
  407ec8:	ldr	x5, [sp, #8]
  407ecc:	mov	x0, x19
  407ed0:	mov	x1, x23
  407ed4:	mov	x2, x20
  407ed8:	mov	x3, x22
  407edc:	mov	x4, x21
  407ee0:	bl	408128 <ferror@plt+0x5168>
  407ee4:	mov	x0, x20
  407ee8:	ldp	x20, x19, [sp, #64]
  407eec:	ldp	x22, x21, [sp, #48]
  407ef0:	ldp	x24, x23, [sp, #32]
  407ef4:	ldp	x29, x30, [sp, #16]
  407ef8:	add	sp, sp, #0x50
  407efc:	ret
  407f00:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  407f04:	add	x1, x1, #0x2d9
  407f08:	mov	w2, #0x5                   	// #5
  407f0c:	mov	x0, xzr
  407f10:	bl	402ea0 <dcgettext@plt>
  407f14:	lsl	x8, x20, #4
  407f18:	ldr	x1, [x19, x8]
  407f1c:	bl	405e84 <ferror@plt+0x2ec4>
  407f20:	sub	sp, sp, #0xe0
  407f24:	cmp	x1, x2
  407f28:	stp	x29, x30, [sp, #128]
  407f2c:	str	x27, [sp, #144]
  407f30:	stp	x26, x25, [sp, #160]
  407f34:	stp	x24, x23, [sp, #176]
  407f38:	stp	x22, x21, [sp, #192]
  407f3c:	stp	x20, x19, [sp, #208]
  407f40:	add	x29, sp, #0x80
  407f44:	b.cs	408060 <ferror@plt+0x50a0>  // b.hs, b.nlast
  407f48:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x29a4>
  407f4c:	mov	x19, x3
  407f50:	mov	x20, x2
  407f54:	mov	x23, xzr
  407f58:	add	x26, x1, #0x1
  407f5c:	add	x21, x0, x1, lsl #4
  407f60:	add	x22, x22, #0x360
  407f64:	ldr	x24, [x21]
  407f68:	mov	x1, x22
  407f6c:	mov	x0, x24
  407f70:	bl	402cc0 <strcmp@plt>
  407f74:	mov	w25, w0
  407f78:	cbz	x19, 407f98 <ferror@plt+0x4fd8>
  407f7c:	mov	x0, x19
  407f80:	mov	x1, x24
  407f84:	bl	402cc0 <strcmp@plt>
  407f88:	cbz	w25, 407f98 <ferror@plt+0x4fd8>
  407f8c:	cbnz	w0, 407f98 <ferror@plt+0x4fd8>
  407f90:	mov	w27, #0x1                   	// #1
  407f94:	b	408008 <ferror@plt+0x5048>
  407f98:	bl	40611c <ferror@plt+0x315c>
  407f9c:	cbz	x0, 407fbc <ferror@plt+0x4ffc>
  407fa0:	mov	x24, x0
  407fa4:	cbz	w25, 407fc4 <ferror@plt+0x5004>
  407fa8:	ldr	x0, [x21]
  407fac:	mov	x1, sp
  407fb0:	bl	412388 <_obstack_memory_used@@Base+0xd2c>
  407fb4:	cbnz	w0, 407ffc <ferror@plt+0x503c>
  407fb8:	b	407fd4 <ferror@plt+0x5014>
  407fbc:	mov	w8, #0x2                   	// #2
  407fc0:	b	408004 <ferror@plt+0x5044>
  407fc4:	mov	x1, sp
  407fc8:	mov	w0, wzr
  407fcc:	bl	412398 <_obstack_memory_used@@Base+0xd3c>
  407fd0:	cbnz	w0, 407ffc <ferror@plt+0x503c>
  407fd4:	ldr	x8, [sp, #8]
  407fd8:	ldr	x9, [x24, #8]
  407fdc:	cmp	x8, x9
  407fe0:	b.ne	407ffc <ferror@plt+0x503c>  // b.any
  407fe4:	ldr	x9, [sp]
  407fe8:	ldr	x10, [x24]
  407fec:	mov	w8, wzr
  407ff0:	cmp	x9, x10
  407ff4:	cset	w27, eq  // eq = none
  407ff8:	b	408004 <ferror@plt+0x5044>
  407ffc:	mov	w8, wzr
  408000:	mov	w27, wzr
  408004:	cbnz	w8, 408040 <ferror@plt+0x5080>
  408008:	tbz	w27, #0, 408048 <ferror@plt+0x5088>
  40800c:	cbnz	x23, 408034 <ferror@plt+0x5074>
  408010:	add	x0, x29, #0x18
  408014:	bl	407e64 <ferror@plt+0x4ea4>
  408018:	ldr	x3, [x29, #24]
  40801c:	mov	x23, x0
  408020:	add	x4, x0, #0xd
  408024:	mov	w2, #0x1                   	// #1
  408028:	mov	x0, x21
  40802c:	mov	x1, xzr
  408030:	bl	407e7c <ferror@plt+0x4ebc>
  408034:	mov	w8, wzr
  408038:	add	x9, x23, #0xd
  40803c:	stp	x9, x23, [x21]
  408040:	cbz	w8, 408050 <ferror@plt+0x5090>
  408044:	b	408060 <ferror@plt+0x50a0>
  408048:	mov	w8, wzr
  40804c:	cbnz	w8, 408060 <ferror@plt+0x50a0>
  408050:	cmp	x26, x20
  408054:	add	x26, x26, #0x1
  408058:	add	x21, x21, #0x10
  40805c:	b.cc	407f64 <ferror@plt+0x4fa4>  // b.lo, b.ul, b.last
  408060:	ldp	x20, x19, [sp, #208]
  408064:	ldp	x22, x21, [sp, #192]
  408068:	ldp	x24, x23, [sp, #176]
  40806c:	ldp	x26, x25, [sp, #160]
  408070:	ldr	x27, [sp, #144]
  408074:	ldp	x29, x30, [sp, #128]
  408078:	add	sp, sp, #0xe0
  40807c:	ret
  408080:	stp	x29, x30, [sp, #-64]!
  408084:	stp	x20, x19, [sp, #48]
  408088:	mov	x19, x1
  40808c:	stp	x22, x21, [sp, #32]
  408090:	mov	x22, x0
  408094:	mov	w1, #0x8                   	// #8
  408098:	mov	x0, x19
  40809c:	str	x23, [sp, #16]
  4080a0:	mov	x29, sp
  4080a4:	mov	x20, x2
  4080a8:	bl	410134 <ferror@plt+0xd174>
  4080ac:	str	x0, [x20]
  4080b0:	cbz	x19, 40810c <ferror@plt+0x514c>
  4080b4:	add	x23, x22, #0x8
  4080b8:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x29a4>
  4080bc:	mov	x21, x0
  4080c0:	mov	x20, xzr
  4080c4:	add	x22, x22, #0x88
  4080c8:	ldr	x0, [x23]
  4080cc:	cbz	x0, 4080e0 <ferror@plt+0x5120>
  4080d0:	ldrb	w8, [x0, #12]
  4080d4:	cbz	w8, 4080e0 <ferror@plt+0x5120>
  4080d8:	bl	408824 <ferror@plt+0x5864>
  4080dc:	b	4080ec <ferror@plt+0x512c>
  4080e0:	ldur	x0, [x23, #-8]
  4080e4:	mov	x1, x22
  4080e8:	bl	405fe4 <ferror@plt+0x3024>
  4080ec:	str	x0, [x21, x20, lsl #3]
  4080f0:	cbz	x0, 408110 <ferror@plt+0x5150>
  4080f4:	add	x20, x20, #0x1
  4080f8:	cmp	x19, x20
  4080fc:	add	x23, x23, #0x10
  408100:	b.ne	4080c8 <ferror@plt+0x5108>  // b.any
  408104:	and	x20, x19, #0xffffffff
  408108:	b	408110 <ferror@plt+0x5150>
  40810c:	mov	x20, xzr
  408110:	mov	x0, x20
  408114:	ldp	x20, x19, [sp, #48]
  408118:	ldp	x22, x21, [sp, #32]
  40811c:	ldr	x23, [sp, #16]
  408120:	ldp	x29, x30, [sp], #64
  408124:	ret
  408128:	sub	sp, sp, #0xf0
  40812c:	stp	x20, x19, [sp, #224]
  408130:	str	x1, [sp, #72]
  408134:	mov	x20, x0
  408138:	mov	w1, #0x38                  	// #56
  40813c:	mov	x0, x2
  408140:	stp	x29, x30, [sp, #144]
  408144:	stp	x28, x27, [sp, #160]
  408148:	stp	x26, x25, [sp, #176]
  40814c:	stp	x24, x23, [sp, #192]
  408150:	stp	x22, x21, [sp, #208]
  408154:	add	x29, sp, #0x90
  408158:	mov	x28, x5
  40815c:	stp	x3, x4, [sp, #48]
  408160:	mov	x23, x2
  408164:	bl	410134 <ferror@plt+0xd174>
  408168:	mov	x24, x0
  40816c:	mov	w1, #0x8                   	// #8
  408170:	mov	x0, x23
  408174:	bl	410134 <ferror@plt+0xd174>
  408178:	mov	x21, x0
  40817c:	mov	w1, #0x8                   	// #8
  408180:	mov	x0, x23
  408184:	bl	410134 <ferror@plt+0xd174>
  408188:	stur	x0, [x29, #-64]
  40818c:	mov	w1, #0x8                   	// #8
  408190:	mov	x0, x23
  408194:	bl	410134 <ferror@plt+0xd174>
  408198:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40819c:	ldr	x8, [x8, #1568]
  4081a0:	mov	x25, x0
  4081a4:	stp	x24, xzr, [x29, #-40]
  4081a8:	stur	x20, [x29, #-56]
  4081ac:	str	x8, [sp, #32]
  4081b0:	cbz	x23, 4082c8 <ferror@plt+0x5308>
  4081b4:	add	x8, x28, #0x8
  4081b8:	mov	x22, xzr
  4081bc:	stur	x8, [x29, #-48]
  4081c0:	add	x8, x20, #0x10
  4081c4:	mov	w27, #0x38                  	// #56
  4081c8:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x149a4>
  4081cc:	str	x8, [sp, #64]
  4081d0:	b	408208 <ferror@plt+0x5248>
  4081d4:	mov	x0, x20
  4081d8:	bl	40665c <ferror@plt+0x369c>
  4081dc:	madd	x8, x22, x27, x24
  4081e0:	ldr	x8, [x8, #16]
  4081e4:	sub	x9, x0, #0x20
  4081e8:	lsl	x10, x22, #3
  4081ec:	str	x9, [x21, x10]
  4081f0:	ldur	x9, [x29, #-64]
  4081f4:	sub	x8, x0, x8, lsl #5
  4081f8:	add	x22, x22, #0x1
  4081fc:	str	x8, [x9, x10]
  408200:	cmp	x22, x23
  408204:	b.cs	4082c8 <ferror@plt+0x5308>  // b.hs, b.nlast
  408208:	ldr	x8, [x26, #1592]
  40820c:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  408210:	ldr	x9, [x9, #1200]
  408214:	madd	x20, x22, x27, x24
  408218:	udiv	x8, x8, x23
  40821c:	mov	w1, #0x20                  	// #32
  408220:	cmp	x9, x8
  408224:	csel	x2, x9, x8, hi  // hi = pmore
  408228:	mov	x0, x20
  40822c:	bl	4062a0 <ferror@plt+0x32e0>
  408230:	ldur	x8, [x29, #-56]
  408234:	ldr	x1, [x28, x22, lsl #3]
  408238:	mov	x0, x20
  40823c:	add	x19, x8, x22, lsl #4
  408240:	ldr	x2, [x19]
  408244:	bl	406304 <ferror@plt+0x3344>
  408248:	tbnz	w0, #0, 4081d4 <ferror@plt+0x5214>
  40824c:	ldr	x0, [x28, x22, lsl #3]
  408250:	ldr	x1, [x19]
  408254:	bl	404e8c <ferror@plt+0x1ecc>
  408258:	ldr	x8, [sp, #72]
  40825c:	cmp	x22, x8
  408260:	b.cs	408274 <ferror@plt+0x52b4>  // b.hs, b.nlast
  408264:	ldr	x0, [x19]
  408268:	sub	x8, x8, #0x1
  40826c:	str	x8, [sp, #72]
  408270:	bl	408d9c <ferror@plt+0x5ddc>
  408274:	ldr	x0, [x20]
  408278:	ldur	x24, [x29, #-40]
  40827c:	bl	402d10 <free@plt>
  408280:	sub	x23, x23, #0x1
  408284:	cmp	x22, x23
  408288:	b.cs	408200 <ferror@plt+0x5240>  // b.hs, b.nlast
  40828c:	ldur	x8, [x29, #-48]
  408290:	ldr	x9, [sp, #64]
  408294:	mov	x10, x23
  408298:	add	x8, x8, x22, lsl #3
  40829c:	add	x9, x9, x22, lsl #4
  4082a0:	ldr	q0, [x9]
  4082a4:	sub	x10, x10, #0x1
  4082a8:	cmp	x22, x10
  4082ac:	stur	q0, [x9, #-16]
  4082b0:	ldr	x11, [x8]
  4082b4:	add	x9, x9, #0x10
  4082b8:	stur	x11, [x8, #-8]
  4082bc:	add	x8, x8, #0x8
  4082c0:	b.ne	4082a0 <ferror@plt+0x52e0>  // b.any
  4082c4:	b	408200 <ferror@plt+0x5240>
  4082c8:	cbz	x23, 4082e0 <ferror@plt+0x5320>
  4082cc:	mov	x8, xzr
  4082d0:	str	x8, [x25, x8, lsl #3]
  4082d4:	add	x8, x8, #0x1
  4082d8:	cmp	x23, x8
  4082dc:	b.ne	4082d0 <ferror@plt+0x5310>  // b.any
  4082e0:	cmp	x23, #0x2
  4082e4:	b.cc	40832c <ferror@plt+0x536c>  // b.lo, b.ul, b.last
  4082e8:	mov	w19, #0x1                   	// #1
  4082ec:	b	4082fc <ferror@plt+0x533c>
  4082f0:	add	x19, x19, #0x1
  4082f4:	cmp	x19, x23
  4082f8:	b.cs	40832c <ferror@plt+0x536c>  // b.hs, b.nlast
  4082fc:	sub	x20, x19, #0x1
  408300:	ldr	x22, [x25, x20, lsl #3]
  408304:	ldr	x24, [x25, x19, lsl #3]
  408308:	ldr	x0, [x21, x22, lsl #3]
  40830c:	ldr	x1, [x21, x24, lsl #3]
  408310:	bl	40666c <ferror@plt+0x36ac>
  408314:	cmp	w0, #0x1
  408318:	b.lt	4082f0 <ferror@plt+0x5330>  // b.tstop
  40831c:	str	x24, [x25, x20, lsl #3]
  408320:	str	x22, [x25, x19, lsl #3]
  408324:	mov	x19, xzr
  408328:	b	4082f0 <ferror@plt+0x5330>
  40832c:	mov	x27, xzr
  408330:	cbz	x23, 4086a4 <ferror@plt+0x56e4>
  408334:	add	x8, x25, #0x8
  408338:	str	x8, [sp, #64]
  40833c:	ldur	x8, [x29, #-64]
  408340:	mov	x20, xzr
  408344:	str	x28, [sp, #40]
  408348:	add	x8, x8, #0x8
  40834c:	str	x8, [sp, #24]
  408350:	add	x8, x21, #0x8
  408354:	str	x8, [sp, #16]
  408358:	ldur	x8, [x29, #-56]
  40835c:	add	x8, x8, #0x10
  408360:	str	x8, [sp, #8]
  408364:	add	x8, x28, #0x8
  408368:	str	x8, [sp]
  40836c:	b	40837c <ferror@plt+0x53bc>
  408370:	ldp	x27, x19, [x29, #-48]
  408374:	str	x24, [x25, x8, lsl #3]
  408378:	cbz	x23, 4086a8 <ferror@plt+0x56e8>
  40837c:	ldr	x24, [x25]
  408380:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408384:	ldrb	w8, [x8, #1562]
  408388:	add	x19, x21, x24, lsl #3
  40838c:	ldr	x26, [x19]
  408390:	cmp	w8, #0x1
  408394:	b.ne	4083c8 <ferror@plt+0x5408>  // b.any
  408398:	cbz	x27, 4083bc <ferror@plt+0x53fc>
  40839c:	mov	x0, x27
  4083a0:	mov	x1, x26
  4083a4:	bl	40666c <ferror@plt+0x36ac>
  4083a8:	cbz	w0, 4083bc <ferror@plt+0x53fc>
  4083ac:	ldp	x1, x2, [sp, #48]
  4083b0:	sub	x0, x29, #0x20
  4083b4:	bl	406758 <ferror@plt+0x3798>
  4083b8:	mov	x27, xzr
  4083bc:	cbz	x27, 4083dc <ferror@plt+0x541c>
  4083c0:	stur	x27, [x29, #-48]
  4083c4:	b	408460 <ferror@plt+0x54a0>
  4083c8:	ldp	x1, x2, [sp, #48]
  4083cc:	mov	x0, x26
  4083d0:	stur	x27, [x29, #-48]
  4083d4:	bl	406758 <ferror@plt+0x3798>
  4083d8:	b	408460 <ferror@plt+0x54a0>
  4083dc:	ldr	x8, [x26, #8]
  4083e0:	cmp	x20, x8
  4083e4:	b.cs	408414 <ferror@plt+0x5454>  // b.hs, b.nlast
  4083e8:	cbz	x20, 4083fc <ferror@plt+0x543c>
  4083ec:	lsl	x20, x20, #1
  4083f0:	cmp	x20, x8
  4083f4:	b.cc	4083e8 <ferror@plt+0x5428>  // b.lo, b.ul, b.last
  4083f8:	b	408400 <ferror@plt+0x5440>
  4083fc:	mov	x20, x8
  408400:	ldur	x0, [x29, #-32]
  408404:	bl	402d10 <free@plt>
  408408:	mov	x0, x20
  40840c:	bl	410160 <ferror@plt+0xd1a0>
  408410:	stur	x0, [x29, #-32]
  408414:	ldr	x2, [x26, #8]
  408418:	ldur	x0, [x29, #-32]
  40841c:	stur	x2, [x29, #-24]
  408420:	ldr	x1, [x26]
  408424:	bl	402850 <memcpy@plt>
  408428:	ldr	x8, [sp, #32]
  40842c:	cbz	x8, 408458 <ferror@plt+0x5498>
  408430:	ldr	x8, [x26, #16]
  408434:	ldr	x9, [x26]
  408438:	ldur	x10, [x29, #-32]
  40843c:	sub	x8, x8, x9
  408440:	add	x8, x10, x8
  408444:	stur	x8, [x29, #-16]
  408448:	ldr	x8, [x26, #24]
  40844c:	sub	x8, x8, x9
  408450:	add	x8, x10, x8
  408454:	stur	x8, [x29, #-8]
  408458:	sub	x8, x29, #0x20
  40845c:	stur	x8, [x29, #-48]
  408460:	ldur	x8, [x29, #-64]
  408464:	add	x27, x8, x24, lsl #3
  408468:	ldr	x8, [x27]
  40846c:	cmp	x8, x26
  408470:	b.cs	408480 <ferror@plt+0x54c0>  // b.hs, b.nlast
  408474:	sub	x8, x26, #0x20
  408478:	mov	x27, x19
  40847c:	b	4084c8 <ferror@plt+0x5508>
  408480:	ldur	x9, [x29, #-56]
  408484:	ldur	x22, [x29, #-40]
  408488:	lsl	x8, x24, #4
  40848c:	ldr	x1, [x28, x24, lsl #3]
  408490:	ldr	x2, [x9, x8]
  408494:	mov	w8, #0x38                  	// #56
  408498:	madd	x26, x24, x8, x22
  40849c:	mov	x0, x26
  4084a0:	bl	406304 <ferror@plt+0x3344>
  4084a4:	tbz	w0, #0, 408560 <ferror@plt+0x55a0>
  4084a8:	mov	x0, x26
  4084ac:	bl	40665c <ferror@plt+0x369c>
  4084b0:	mov	w8, #0x38                  	// #56
  4084b4:	madd	x8, x24, x8, x22
  4084b8:	ldr	x8, [x8, #16]
  4084bc:	sub	x9, x0, #0x20
  4084c0:	str	x9, [x19]
  4084c4:	sub	x8, x0, x8, lsl #5
  4084c8:	cmp	x23, #0x2
  4084cc:	str	x8, [x27]
  4084d0:	b.cc	408530 <ferror@plt+0x5570>  // b.lo, b.ul, b.last
  4084d4:	ldr	x26, [x19]
  4084d8:	mov	w19, #0x1                   	// #1
  4084dc:	mov	x28, x23
  4084e0:	mov	w27, #0x1                   	// #1
  4084e4:	b	4084fc <ferror@plt+0x553c>
  4084e8:	add	x8, x19, x27
  4084ec:	mov	x28, x19
  4084f0:	cmp	x27, x19
  4084f4:	lsr	x19, x8, #1
  4084f8:	b.cs	408534 <ferror@plt+0x5574>  // b.hs, b.nlast
  4084fc:	ldr	x22, [x25, x19, lsl #3]
  408500:	mov	x0, x26
  408504:	ldr	x1, [x21, x22, lsl #3]
  408508:	bl	40666c <ferror@plt+0x36ac>
  40850c:	tbnz	w0, #31, 4084e8 <ferror@plt+0x5528>
  408510:	cmp	w0, #0x0
  408514:	cset	w8, eq  // eq = none
  408518:	cmp	x24, x22
  40851c:	cset	w9, cc  // cc = lo, ul, last
  408520:	tst	w9, w8
  408524:	csinc	x27, x27, x19, ne  // ne = any
  408528:	csel	x19, x19, x28, ne  // ne = any
  40852c:	b	4084e8 <ferror@plt+0x5528>
  408530:	mov	w27, #0x1                   	// #1
  408534:	ldr	x28, [sp, #40]
  408538:	subs	x8, x27, #0x1
  40853c:	b.eq	408370 <ferror@plt+0x53b0>  // b.none
  408540:	ldr	x10, [sp, #64]
  408544:	mov	x9, x8
  408548:	ldr	x11, [x10]
  40854c:	subs	x9, x9, #0x1
  408550:	stur	x11, [x10, #-8]
  408554:	add	x10, x10, #0x8
  408558:	b.ne	408548 <ferror@plt+0x5588>  // b.any
  40855c:	b	408370 <ferror@plt+0x53b0>
  408560:	ldur	x27, [x29, #-48]
  408564:	mov	w22, #0x38                  	// #56
  408568:	cmp	x23, #0x2
  40856c:	b.cc	4085a4 <ferror@plt+0x55e4>  // b.lo, b.ul, b.last
  408570:	ldr	x9, [sp, #64]
  408574:	sub	x8, x23, #0x1
  408578:	b	408588 <ferror@plt+0x55c8>
  40857c:	subs	x8, x8, #0x1
  408580:	add	x9, x9, #0x8
  408584:	b.eq	4085a4 <ferror@plt+0x55e4>  // b.none
  408588:	ldr	x10, [x9]
  40858c:	ldr	x11, [x25]
  408590:	cmp	x10, x11
  408594:	b.ls	40857c <ferror@plt+0x55bc>  // b.plast
  408598:	sub	x10, x10, #0x1
  40859c:	str	x10, [x9]
  4085a0:	b	40857c <ferror@plt+0x55bc>
  4085a4:	ldr	x26, [x25]
  4085a8:	ldur	x8, [x29, #-56]
  4085ac:	sub	x24, x23, #0x1
  4085b0:	ldr	x0, [x28, x26, lsl #3]
  4085b4:	add	x19, x8, x26, lsl #4
  4085b8:	ldr	x1, [x19]
  4085bc:	bl	404e8c <ferror@plt+0x1ecc>
  4085c0:	ldr	x8, [sp, #72]
  4085c4:	cmp	x26, x8
  4085c8:	b.cs	4085dc <ferror@plt+0x561c>  // b.hs, b.nlast
  4085cc:	ldr	x0, [x19]
  4085d0:	sub	x8, x8, #0x1
  4085d4:	str	x8, [sp, #72]
  4085d8:	bl	408d9c <ferror@plt+0x5ddc>
  4085dc:	ldur	x19, [x29, #-40]
  4085e0:	mul	x8, x26, x22
  4085e4:	ldr	x0, [x19, x8]
  4085e8:	bl	402d10 <free@plt>
  4085ec:	cmp	x26, x24
  4085f0:	b.cs	408678 <ferror@plt+0x56b8>  // b.hs, b.nlast
  4085f4:	ldp	x8, x11, [sp, #8]
  4085f8:	ldr	x9, [sp, #24]
  4085fc:	ldr	x14, [sp]
  408600:	lsl	x12, x26, #3
  408604:	mvn	x13, x26
  408608:	madd	x10, x26, x22, x19
  40860c:	add	x8, x8, x26, lsl #4
  408610:	add	x9, x9, x12
  408614:	add	x11, x11, x12
  408618:	add	x12, x14, x12
  40861c:	add	x13, x13, x23
  408620:	ldr	x14, [x12]
  408624:	subs	x13, x13, #0x1
  408628:	stur	x14, [x12, #-8]
  40862c:	ldr	q0, [x8]
  408630:	add	x12, x12, #0x8
  408634:	stur	q0, [x8, #-16]
  408638:	ldur	q0, [x10, #56]
  40863c:	ldur	q1, [x10, #72]
  408640:	ldr	x14, [x10, #104]
  408644:	ldr	x15, [x11]
  408648:	add	x8, x8, #0x10
  40864c:	stp	q0, q1, [x10]
  408650:	ldur	q0, [x10, #88]
  408654:	str	x14, [x10, #48]
  408658:	ldr	x14, [x9]
  40865c:	stur	x15, [x11, #-8]
  408660:	str	q0, [x10, #32]
  408664:	add	x10, x10, #0x38
  408668:	stur	x14, [x9, #-8]
  40866c:	add	x9, x9, #0x8
  408670:	add	x11, x11, #0x8
  408674:	b.ne	408620 <ferror@plt+0x5660>  // b.any
  408678:	ldr	x9, [sp, #64]
  40867c:	mov	x8, x24
  408680:	cbz	x24, 408698 <ferror@plt+0x56d8>
  408684:	ldr	x10, [x9]
  408688:	subs	x8, x8, #0x1
  40868c:	stur	x10, [x9, #-8]
  408690:	add	x9, x9, #0x8
  408694:	b.ne	408684 <ferror@plt+0x56c4>  // b.any
  408698:	mov	x23, x24
  40869c:	cbnz	x23, 40837c <ferror@plt+0x53bc>
  4086a0:	b	4086a8 <ferror@plt+0x56e8>
  4086a4:	ldur	x19, [x29, #-40]
  4086a8:	cbz	x27, 4086cc <ferror@plt+0x570c>
  4086ac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4086b0:	ldrb	w8, [x8, #1562]
  4086b4:	cbz	w8, 4086cc <ferror@plt+0x570c>
  4086b8:	ldp	x1, x2, [sp, #48]
  4086bc:	sub	x0, x29, #0x20
  4086c0:	bl	406758 <ferror@plt+0x3798>
  4086c4:	ldur	x0, [x29, #-32]
  4086c8:	bl	402d10 <free@plt>
  4086cc:	ldp	x0, x1, [sp, #48]
  4086d0:	bl	404e8c <ferror@plt+0x1ecc>
  4086d4:	mov	x0, x28
  4086d8:	bl	402d10 <free@plt>
  4086dc:	mov	x0, x19
  4086e0:	bl	402d10 <free@plt>
  4086e4:	mov	x0, x25
  4086e8:	bl	402d10 <free@plt>
  4086ec:	ldur	x0, [x29, #-64]
  4086f0:	bl	402d10 <free@plt>
  4086f4:	mov	x0, x21
  4086f8:	bl	402d10 <free@plt>
  4086fc:	ldp	x20, x19, [sp, #224]
  408700:	ldp	x22, x21, [sp, #208]
  408704:	ldp	x24, x23, [sp, #192]
  408708:	ldp	x26, x25, [sp, #176]
  40870c:	ldp	x28, x27, [sp, #160]
  408710:	ldp	x29, x30, [sp, #144]
  408714:	add	sp, sp, #0xf0
  408718:	ret
  40871c:	sub	sp, sp, #0x40
  408720:	stp	x29, x30, [sp, #16]
  408724:	add	x29, sp, #0x10
  408728:	stp	x20, x19, [sp, #48]
  40872c:	mov	x20, x0
  408730:	and	w1, w1, #0x1
  408734:	add	x0, x29, #0x1c
  408738:	str	x21, [sp, #32]
  40873c:	bl	408e80 <ferror@plt+0x5ec0>
  408740:	mov	x19, x0
  408744:	cbz	x0, 4087b0 <ferror@plt+0x57f0>
  408748:	strb	wzr, [x19, #12]
  40874c:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  408750:	ldr	x8, [x21, #1552]
  408754:	cbz	x8, 408798 <ferror@plt+0x57d8>
  408758:	add	x0, sp, #0x8
  40875c:	mov	w1, #0x4                   	// #4
  408760:	bl	4089c0 <ferror@plt+0x5a00>
  408764:	cmp	w0, #0x1
  408768:	str	w0, [x19, #8]
  40876c:	b.lt	408794 <ferror@plt+0x57d4>  // b.tstop
  408770:	ldr	w0, [x29, #28]
  408774:	bl	402b80 <close@plt>
  408778:	ldr	w0, [sp, #8]
  40877c:	bl	402b80 <close@plt>
  408780:	ldr	w8, [sp, #12]
  408784:	mov	x0, x19
  408788:	str	w8, [x29, #28]
  40878c:	bl	408b84 <ferror@plt+0x5bc4>
  408790:	b	408798 <ferror@plt+0x57d8>
  408794:	cbz	w0, 4087e0 <ferror@plt+0x5820>
  408798:	ldr	w0, [x29, #28]
  40879c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4087a0:	add	x1, x1, #0x55b
  4087a4:	bl	402b10 <fdopen@plt>
  4087a8:	str	x0, [x20]
  4087ac:	cbz	x0, 4087c8 <ferror@plt+0x5808>
  4087b0:	mov	x0, x19
  4087b4:	ldp	x20, x19, [sp, #48]
  4087b8:	ldr	x21, [sp, #32]
  4087bc:	ldp	x29, x30, [sp, #16]
  4087c0:	add	sp, sp, #0x40
  4087c4:	ret
  4087c8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4087cc:	add	x1, x1, #0x623
  4087d0:	mov	w2, #0x5                   	// #5
  4087d4:	bl	402ea0 <dcgettext@plt>
  4087d8:	add	x1, x19, #0xd
  4087dc:	bl	405e84 <ferror@plt+0x2ec4>
  4087e0:	ldr	w0, [sp, #12]
  4087e4:	bl	402b80 <close@plt>
  4087e8:	ldr	w0, [x29, #28]
  4087ec:	mov	w1, #0x1                   	// #1
  4087f0:	bl	407e34 <ferror@plt+0x4e74>
  4087f4:	ldr	w0, [sp, #8]
  4087f8:	mov	w1, wzr
  4087fc:	bl	407e34 <ferror@plt+0x4e74>
  408800:	ldr	x0, [x21, #1552]
  408804:	mov	x2, xzr
  408808:	mov	x1, x0
  40880c:	bl	402f40 <execlp@plt>
  408810:	bl	402f30 <__errno_location@plt>
  408814:	ldr	w0, [x0]
  408818:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40881c:	add	x1, x1, #0x601
  408820:	bl	408af8 <ferror@plt+0x5b38>
  408824:	stp	x29, x30, [sp, #-48]!
  408828:	stp	x20, x19, [sp, #32]
  40882c:	ldrb	w8, [x0, #12]
  408830:	mov	x20, x0
  408834:	str	x21, [sp, #16]
  408838:	mov	x29, sp
  40883c:	cmp	w8, #0x1
  408840:	b.ne	40884c <ferror@plt+0x588c>  // b.any
  408844:	ldr	w0, [x20, #8]
  408848:	bl	408994 <ferror@plt+0x59d4>
  40884c:	add	x0, x20, #0xd
  408850:	mov	w1, wzr
  408854:	bl	402a70 <open@plt>
  408858:	tbnz	w0, #31, 4088c8 <ferror@plt+0x5908>
  40885c:	mov	w19, w0
  408860:	add	x0, x29, #0x18
  408864:	mov	w1, #0x9                   	// #9
  408868:	bl	4089c0 <ferror@plt+0x5a00>
  40886c:	cmn	w0, #0x1
  408870:	b.eq	4088d0 <ferror@plt+0x5910>  // b.none
  408874:	cbz	w0, 408908 <ferror@plt+0x5948>
  408878:	str	w0, [x20, #8]
  40887c:	mov	x0, x20
  408880:	bl	408b84 <ferror@plt+0x5bc4>
  408884:	mov	w0, w19
  408888:	bl	402b80 <close@plt>
  40888c:	ldr	w0, [x29, #28]
  408890:	bl	402b80 <close@plt>
  408894:	ldr	w0, [x29, #24]
  408898:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40889c:	add	x1, x1, #0x88
  4088a0:	bl	402b10 <fdopen@plt>
  4088a4:	cbnz	x0, 4088f8 <ferror@plt+0x5938>
  4088a8:	bl	402f30 <__errno_location@plt>
  4088ac:	mov	x19, x0
  4088b0:	ldr	w20, [x0]
  4088b4:	ldr	w0, [x29, #24]
  4088b8:	bl	402b80 <close@plt>
  4088bc:	mov	x0, xzr
  4088c0:	str	w20, [x19]
  4088c4:	b	4088f8 <ferror@plt+0x5938>
  4088c8:	mov	x0, xzr
  4088cc:	b	4088f8 <ferror@plt+0x5938>
  4088d0:	bl	402f30 <__errno_location@plt>
  4088d4:	ldr	w20, [x0]
  4088d8:	cmp	w20, #0x18
  4088dc:	b.ne	408958 <ferror@plt+0x5998>  // b.any
  4088e0:	mov	x21, x0
  4088e4:	mov	w0, w19
  4088e8:	bl	402b80 <close@plt>
  4088ec:	mov	w8, #0x18                  	// #24
  4088f0:	mov	x0, xzr
  4088f4:	str	w8, [x21]
  4088f8:	ldp	x20, x19, [sp, #32]
  4088fc:	ldr	x21, [sp, #16]
  408900:	ldp	x29, x30, [sp], #48
  408904:	ret
  408908:	ldr	w0, [x29, #24]
  40890c:	bl	402b80 <close@plt>
  408910:	mov	w0, w19
  408914:	mov	w1, wzr
  408918:	bl	407e34 <ferror@plt+0x4e74>
  40891c:	ldr	w0, [x29, #28]
  408920:	mov	w1, #0x1                   	// #1
  408924:	bl	407e34 <ferror@plt+0x4e74>
  408928:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40892c:	ldr	x0, [x8, #1552]
  408930:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  408934:	add	x2, x2, #0x57c
  408938:	mov	x3, xzr
  40893c:	mov	x1, x0
  408940:	bl	402f40 <execlp@plt>
  408944:	bl	402f30 <__errno_location@plt>
  408948:	ldr	w0, [x0]
  40894c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408950:	add	x1, x1, #0x57f
  408954:	bl	408af8 <ferror@plt+0x5b38>
  408958:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40895c:	add	x1, x1, #0x55d
  408960:	mov	w2, #0x5                   	// #5
  408964:	mov	x0, xzr
  408968:	bl	402ea0 <dcgettext@plt>
  40896c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408970:	ldr	x1, [x8, #1552]
  408974:	mov	x19, x0
  408978:	mov	w0, #0x4                   	// #4
  40897c:	bl	40e24c <ferror@plt+0xb28c>
  408980:	mov	x3, x0
  408984:	mov	w0, #0x2                   	// #2
  408988:	mov	w1, w20
  40898c:	mov	x2, x19
  408990:	bl	4028e0 <error@plt>
  408994:	stp	x29, x30, [sp, #-32]!
  408998:	str	x19, [sp, #16]
  40899c:	mov	x29, sp
  4089a0:	mov	w19, w0
  4089a4:	bl	408bf0 <ferror@plt+0x5c30>
  4089a8:	tbz	w0, #0, 4089b4 <ferror@plt+0x59f4>
  4089ac:	mov	w0, w19
  4089b0:	bl	408c30 <ferror@plt+0x5c70>
  4089b4:	ldr	x19, [sp, #16]
  4089b8:	ldp	x29, x30, [sp], #32
  4089bc:	ret
  4089c0:	sub	sp, sp, #0xf0
  4089c4:	stp	x22, x21, [sp, #208]
  4089c8:	mov	x21, x1
  4089cc:	mov	w1, #0x80000               	// #524288
  4089d0:	str	d8, [sp, #144]
  4089d4:	stp	x29, x30, [sp, #160]
  4089d8:	stp	x26, x25, [sp, #176]
  4089dc:	stp	x24, x23, [sp, #192]
  4089e0:	stp	x20, x19, [sp, #224]
  4089e4:	add	x29, sp, #0x90
  4089e8:	mov	x19, x0
  4089ec:	bl	40cd20 <ferror@plt+0x9d60>
  4089f0:	tbnz	w0, #31, 408a94 <ferror@plt+0x5ad4>
  4089f4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4089f8:	ldr	w8, [x8, #1000]
  4089fc:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  408a00:	ldr	w9, [x23, #2952]
  408a04:	add	w8, w8, #0x1
  408a08:	cmp	w8, w9
  408a0c:	b.cs	408a14 <ferror@plt+0x5a54>  // b.hs, b.nlast
  408a10:	bl	408d28 <ferror@plt+0x5d68>
  408a14:	cbz	x21, 408a9c <ferror@plt+0x5adc>
  408a18:	fmov	d8, #2.500000000000000000e-01
  408a1c:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  408a20:	add	x0, sp, #0x8
  408a24:	bl	405f80 <ferror@plt+0x2fc0>
  408a28:	ldr	x25, [x24, #2624]
  408a2c:	str	xzr, [x24, #2624]
  408a30:	bl	402980 <fork@plt>
  408a34:	mov	w20, w0
  408a38:	bl	402f30 <__errno_location@plt>
  408a3c:	ldr	w26, [x0]
  408a40:	mov	x22, x0
  408a44:	cbz	w20, 408a4c <ferror@plt+0x5a8c>
  408a48:	str	x25, [x24, #2624]
  408a4c:	add	x0, sp, #0x8
  408a50:	bl	405fbc <ferror@plt+0x2ffc>
  408a54:	str	w26, [x22]
  408a58:	tbz	w20, #31, 408a7c <ferror@plt+0x5abc>
  408a5c:	cmp	w26, #0xb
  408a60:	b.ne	408a7c <ferror@plt+0x5abc>  // b.any
  408a64:	mov	v0.16b, v8.16b
  408a68:	sub	x21, x21, #0x1
  408a6c:	bl	410558 <ferror@plt+0xd598>
  408a70:	fadd	d8, d8, d8
  408a74:	bl	408d44 <ferror@plt+0x5d84>
  408a78:	cbnz	x21, 408a20 <ferror@plt+0x5a60>
  408a7c:	tbnz	w20, #31, 408aa0 <ferror@plt+0x5ae0>
  408a80:	cbz	w20, 408ac4 <ferror@plt+0x5b04>
  408a84:	ldr	w8, [x23, #2952]
  408a88:	add	w8, w8, #0x1
  408a8c:	str	w8, [x23, #2952]
  408a90:	b	408ad4 <ferror@plt+0x5b14>
  408a94:	mov	w20, #0xffffffff            	// #-1
  408a98:	b	408ad4 <ferror@plt+0x5b14>
  408a9c:	tbz	w20, #31, 408a80 <ferror@plt+0x5ac0>
  408aa0:	bl	402f30 <__errno_location@plt>
  408aa4:	mov	x21, x0
  408aa8:	ldr	w22, [x0]
  408aac:	ldr	w0, [x19]
  408ab0:	bl	402b80 <close@plt>
  408ab4:	ldr	w0, [x19, #4]
  408ab8:	bl	402b80 <close@plt>
  408abc:	str	w22, [x21]
  408ac0:	b	408ad4 <ferror@plt+0x5b14>
  408ac4:	mov	w0, wzr
  408ac8:	bl	402b80 <close@plt>
  408acc:	mov	w0, #0x1                   	// #1
  408ad0:	bl	402b80 <close@plt>
  408ad4:	mov	w0, w20
  408ad8:	ldp	x20, x19, [sp, #224]
  408adc:	ldp	x22, x21, [sp, #208]
  408ae0:	ldp	x24, x23, [sp, #192]
  408ae4:	ldp	x26, x25, [sp, #176]
  408ae8:	ldp	x29, x30, [sp, #160]
  408aec:	ldr	d8, [sp, #144]
  408af0:	add	sp, sp, #0xf0
  408af4:	ret
  408af8:	sub	sp, sp, #0x30
  408afc:	stp	x20, x19, [sp, #32]
  408b00:	mov	w19, w0
  408b04:	mov	x0, x1
  408b08:	stp	x29, x30, [sp, #16]
  408b0c:	add	x29, sp, #0x10
  408b10:	mov	x20, x1
  408b14:	bl	4028b0 <strlen@plt>
  408b18:	mov	x2, x0
  408b1c:	mov	w0, #0x2                   	// #2
  408b20:	mov	x1, x20
  408b24:	bl	402bd0 <write@plt>
  408b28:	cbz	w19, 408b68 <ferror@plt+0x5ba8>
  408b2c:	add	x1, sp, #0x4
  408b30:	mov	w0, w19
  408b34:	bl	40c698 <ferror@plt+0x96d8>
  408b38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408b3c:	mov	x19, x0
  408b40:	add	x1, x1, #0x5dd
  408b44:	mov	w0, #0x2                   	// #2
  408b48:	mov	w2, #0x8                   	// #8
  408b4c:	bl	402bd0 <write@plt>
  408b50:	mov	x0, x19
  408b54:	bl	4028b0 <strlen@plt>
  408b58:	mov	x2, x0
  408b5c:	mov	w0, #0x2                   	// #2
  408b60:	mov	x1, x19
  408b64:	bl	402bd0 <write@plt>
  408b68:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408b6c:	add	x1, x1, #0xb17
  408b70:	mov	w0, #0x2                   	// #2
  408b74:	mov	w2, #0x1                   	// #1
  408b78:	bl	402bd0 <write@plt>
  408b7c:	mov	w0, #0x2                   	// #2
  408b80:	bl	402880 <_exit@plt>
  408b84:	stp	x29, x30, [sp, #-32]!
  408b88:	stp	x20, x19, [sp, #16]
  408b8c:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  408b90:	ldr	x8, [x20, #2944]
  408b94:	mov	x19, x0
  408b98:	mov	x29, sp
  408b9c:	cbnz	x8, 408bc8 <ferror@plt+0x5c08>
  408ba0:	adrp	x2, 408000 <ferror@plt+0x5040>
  408ba4:	adrp	x3, 408000 <ferror@plt+0x5040>
  408ba8:	add	x2, x2, #0xd78
  408bac:	add	x3, x3, #0xd88
  408bb0:	mov	w0, #0x2f                  	// #47
  408bb4:	mov	x1, xzr
  408bb8:	mov	x4, xzr
  408bbc:	bl	40b9e0 <ferror@plt+0x8a20>
  408bc0:	str	x0, [x20, #2944]
  408bc4:	cbz	x0, 408bec <ferror@plt+0x5c2c>
  408bc8:	mov	w8, #0x1                   	// #1
  408bcc:	strb	w8, [x19, #12]
  408bd0:	ldr	x0, [x20, #2944]
  408bd4:	mov	x1, x19
  408bd8:	bl	40c24c <ferror@plt+0x928c>
  408bdc:	cbz	x0, 408bec <ferror@plt+0x5c2c>
  408be0:	ldp	x20, x19, [sp, #16]
  408be4:	ldp	x29, x30, [sp], #32
  408be8:	ret
  408bec:	bl	410364 <ferror@plt+0xd3a4>
  408bf0:	sub	sp, sp, #0x20
  408bf4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408bf8:	ldr	x8, [x8, #2944]
  408bfc:	str	w0, [sp, #8]
  408c00:	mov	x1, sp
  408c04:	stp	x29, x30, [sp, #16]
  408c08:	mov	x0, x8
  408c0c:	add	x29, sp, #0x10
  408c10:	bl	40c284 <ferror@plt+0x92c4>
  408c14:	cbz	x0, 408c24 <ferror@plt+0x5c64>
  408c18:	mov	w8, #0x2                   	// #2
  408c1c:	strb	w8, [x0, #12]
  408c20:	mov	w0, #0x1                   	// #1
  408c24:	ldp	x29, x30, [sp, #16]
  408c28:	add	sp, sp, #0x20
  408c2c:	ret
  408c30:	sub	sp, sp, #0x30
  408c34:	stp	x29, x30, [sp, #16]
  408c38:	add	x29, sp, #0x10
  408c3c:	cmp	w0, #0x0
  408c40:	stp	x20, x19, [sp, #32]
  408c44:	mov	w20, w0
  408c48:	cset	w2, eq  // eq = none
  408c4c:	csinv	w0, w0, wzr, ne  // ne = any
  408c50:	sub	x1, x29, #0x4
  408c54:	bl	402f90 <waitpid@plt>
  408c58:	tbnz	w0, #31, 408ca8 <ferror@plt+0x5ce8>
  408c5c:	mov	w19, w0
  408c60:	cbz	w0, 408c94 <ferror@plt+0x5cd4>
  408c64:	cmp	w20, #0x0
  408c68:	b.gt	408c78 <ferror@plt+0x5cb8>
  408c6c:	mov	w0, w19
  408c70:	bl	408bf0 <ferror@plt+0x5c30>
  408c74:	tbz	w0, #0, 408c94 <ferror@plt+0x5cd4>
  408c78:	ldurh	w8, [x29, #-4]
  408c7c:	tst	w8, #0xffffff7f
  408c80:	b.ne	408cec <ferror@plt+0x5d2c>  // b.any
  408c84:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408c88:	ldr	w9, [x8, #2952]
  408c8c:	sub	w9, w9, #0x1
  408c90:	str	w9, [x8, #2952]
  408c94:	mov	w0, w19
  408c98:	ldp	x20, x19, [sp, #32]
  408c9c:	ldp	x29, x30, [sp, #16]
  408ca0:	add	sp, sp, #0x30
  408ca4:	ret
  408ca8:	bl	402f30 <__errno_location@plt>
  408cac:	ldr	w19, [x0]
  408cb0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408cb4:	add	x1, x1, #0x5ab
  408cb8:	mov	w2, #0x5                   	// #5
  408cbc:	mov	x0, xzr
  408cc0:	bl	402ea0 <dcgettext@plt>
  408cc4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408cc8:	ldr	x1, [x8, #1552]
  408ccc:	mov	x20, x0
  408cd0:	mov	w0, #0x4                   	// #4
  408cd4:	bl	40e24c <ferror@plt+0xb28c>
  408cd8:	mov	x3, x0
  408cdc:	mov	w0, #0x2                   	// #2
  408ce0:	mov	w1, w19
  408ce4:	mov	x2, x20
  408ce8:	bl	4028e0 <error@plt>
  408cec:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408cf0:	add	x1, x1, #0x5bf
  408cf4:	mov	w2, #0x5                   	// #5
  408cf8:	mov	x0, xzr
  408cfc:	bl	402ea0 <dcgettext@plt>
  408d00:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408d04:	ldr	x1, [x8, #1552]
  408d08:	mov	x19, x0
  408d0c:	mov	w0, #0x4                   	// #4
  408d10:	bl	40e24c <ferror@plt+0xb28c>
  408d14:	mov	x3, x0
  408d18:	mov	w0, #0x2                   	// #2
  408d1c:	mov	w1, wzr
  408d20:	mov	x2, x19
  408d24:	bl	4028e0 <error@plt>
  408d28:	stp	x29, x30, [sp, #-16]!
  408d2c:	mov	w0, #0xffffffff            	// #-1
  408d30:	mov	x29, sp
  408d34:	bl	408c30 <ferror@plt+0x5c70>
  408d38:	bl	408d44 <ferror@plt+0x5d84>
  408d3c:	ldp	x29, x30, [sp], #16
  408d40:	ret
  408d44:	stp	x29, x30, [sp, #-32]!
  408d48:	str	x19, [sp, #16]
  408d4c:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  408d50:	mov	x29, sp
  408d54:	ldr	w8, [x19, #2952]
  408d58:	cmp	w8, #0x1
  408d5c:	b.lt	408d6c <ferror@plt+0x5dac>  // b.tstop
  408d60:	mov	w0, wzr
  408d64:	bl	408c30 <ferror@plt+0x5c70>
  408d68:	cbnz	w0, 408d54 <ferror@plt+0x5d94>
  408d6c:	ldr	x19, [sp, #16]
  408d70:	ldp	x29, x30, [sp], #32
  408d74:	ret
  408d78:	ldrsw	x8, [x0, #8]
  408d7c:	udiv	x9, x8, x1
  408d80:	msub	x0, x9, x1, x8
  408d84:	ret
  408d88:	ldr	w8, [x0, #8]
  408d8c:	ldr	w9, [x1, #8]
  408d90:	cmp	w8, w9
  408d94:	cset	w0, eq  // eq = none
  408d98:	ret
  408d9c:	sub	sp, sp, #0xd0
  408da0:	stp	x20, x19, [sp, #192]
  408da4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  408da8:	mov	x20, x0
  408dac:	add	x19, x19, #0xa40
  408db0:	stp	x29, x30, [sp, #144]
  408db4:	stp	x24, x23, [sp, #160]
  408db8:	stp	x22, x21, [sp, #176]
  408dbc:	add	x29, sp, #0x90
  408dc0:	mov	x23, x19
  408dc4:	ldr	x19, [x19]
  408dc8:	add	x8, x19, #0xd
  408dcc:	cmp	x8, x20
  408dd0:	b.ne	408dc0 <ferror@plt+0x5e00>  // b.any
  408dd4:	ldrb	w8, [x19, #12]
  408dd8:	cmp	w8, #0x1
  408ddc:	b.ne	408de8 <ferror@plt+0x5e28>  // b.any
  408de0:	ldr	w0, [x19, #8]
  408de4:	bl	408994 <ferror@plt+0x59d4>
  408de8:	ldr	x24, [x19]
  408dec:	add	x0, sp, #0x8
  408df0:	bl	405f80 <ferror@plt+0x2fc0>
  408df4:	mov	x0, x20
  408df8:	bl	402fa0 <unlink@plt>
  408dfc:	mov	w22, w0
  408e00:	bl	402f30 <__errno_location@plt>
  408e04:	ldr	w21, [x0]
  408e08:	add	x0, sp, #0x8
  408e0c:	str	x24, [x23]
  408e10:	bl	405fbc <ferror@plt+0x2ffc>
  408e14:	cbz	w22, 408e54 <ferror@plt+0x5e94>
  408e18:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408e1c:	add	x1, x1, #0x5e6
  408e20:	mov	w2, #0x5                   	// #5
  408e24:	mov	x0, xzr
  408e28:	bl	402ea0 <dcgettext@plt>
  408e2c:	mov	x22, x0
  408e30:	mov	w1, #0x3                   	// #3
  408e34:	mov	w0, wzr
  408e38:	mov	x2, x20
  408e3c:	bl	40e34c <ferror@plt+0xb38c>
  408e40:	mov	x3, x0
  408e44:	mov	w0, wzr
  408e48:	mov	w1, w21
  408e4c:	mov	x2, x22
  408e50:	bl	4028e0 <error@plt>
  408e54:	cbnz	x24, 408e60 <ferror@plt+0x5ea0>
  408e58:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408e5c:	str	x23, [x8, #1208]
  408e60:	mov	x0, x19
  408e64:	bl	402d10 <free@plt>
  408e68:	ldp	x20, x19, [sp, #192]
  408e6c:	ldp	x22, x21, [sp, #176]
  408e70:	ldp	x24, x23, [sp, #160]
  408e74:	ldp	x29, x30, [sp, #144]
  408e78:	add	sp, sp, #0xd0
  408e7c:	ret
  408e80:	sub	sp, sp, #0xe0
  408e84:	str	x25, [sp, #160]
  408e88:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408e8c:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x149a4>
  408e90:	ldr	x8, [x8, #2640]
  408e94:	ldr	x9, [x25, #2960]
  408e98:	stp	x29, x30, [sp, #144]
  408e9c:	stp	x24, x23, [sp, #176]
  408ea0:	stp	x22, x21, [sp, #192]
  408ea4:	stp	x20, x19, [sp, #208]
  408ea8:	ldr	x19, [x8, x9, lsl #3]
  408eac:	mov	x20, x0
  408eb0:	add	x29, sp, #0x90
  408eb4:	mov	w21, w1
  408eb8:	mov	x0, x19
  408ebc:	bl	4028b0 <strlen@plt>
  408ec0:	add	x8, x0, #0x20
  408ec4:	mov	x23, x0
  408ec8:	and	x0, x8, #0xfffffffffffffff8
  408ecc:	bl	410160 <ferror@plt+0xd1a0>
  408ed0:	add	x24, x0, #0xd
  408ed4:	mov	x22, x0
  408ed8:	mov	x0, x24
  408edc:	mov	x1, x19
  408ee0:	mov	x2, x23
  408ee4:	bl	402850 <memcpy@plt>
  408ee8:	adrp	x8, 412000 <_obstack_memory_used@@Base+0x9a4>
  408eec:	add	x8, x8, #0xc18
  408ef0:	ldr	x8, [x8]
  408ef4:	mov	w10, #0x5858                	// #22616
  408ef8:	add	x9, x24, x23
  408efc:	movk	w10, #0x58, lsl #16
  408f00:	str	w10, [x9, #8]
  408f04:	str	x8, [x9]
  408f08:	str	xzr, [x22]
  408f0c:	ldr	x8, [x25, #2960]
  408f10:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  408f14:	ldr	x9, [x9, #1584]
  408f18:	add	x0, sp, #0x8
  408f1c:	add	x10, x8, #0x1
  408f20:	cmp	x10, x9
  408f24:	csinc	x8, xzr, x8, eq  // eq = none
  408f28:	str	x8, [x25, #2960]
  408f2c:	bl	405f80 <ferror@plt+0x2fc0>
  408f30:	mov	w1, #0x80000               	// #524288
  408f34:	mov	x0, x24
  408f38:	bl	40f82c <ferror@plt+0xc86c>
  408f3c:	mov	w23, w0
  408f40:	tbnz	w0, #31, 408f54 <ferror@plt+0x5f94>
  408f44:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  408f48:	ldr	x9, [x8, #1208]
  408f4c:	str	x22, [x9]
  408f50:	str	x22, [x8, #1208]
  408f54:	bl	402f30 <__errno_location@plt>
  408f58:	ldr	w24, [x0]
  408f5c:	mov	x25, x0
  408f60:	add	x0, sp, #0x8
  408f64:	bl	405fbc <ferror@plt+0x2ffc>
  408f68:	str	w24, [x25]
  408f6c:	tbz	w23, #31, 408f88 <ferror@plt+0x5fc8>
  408f70:	cmp	w24, #0x18
  408f74:	b.ne	408fac <ferror@plt+0x5fec>  // b.any
  408f78:	tbz	w21, #0, 408fac <ferror@plt+0x5fec>
  408f7c:	mov	x0, x22
  408f80:	bl	402d10 <free@plt>
  408f84:	mov	x22, xzr
  408f88:	str	w23, [x20]
  408f8c:	mov	x0, x22
  408f90:	ldp	x20, x19, [sp, #208]
  408f94:	ldp	x22, x21, [sp, #192]
  408f98:	ldp	x24, x23, [sp, #176]
  408f9c:	ldr	x25, [sp, #160]
  408fa0:	ldp	x29, x30, [sp, #144]
  408fa4:	add	sp, sp, #0xe0
  408fa8:	ret
  408fac:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  408fb0:	add	x1, x1, #0x642
  408fb4:	mov	w2, #0x5                   	// #5
  408fb8:	mov	x0, xzr
  408fbc:	bl	402ea0 <dcgettext@plt>
  408fc0:	mov	x20, x0
  408fc4:	mov	w0, #0x4                   	// #4
  408fc8:	mov	x1, x19
  408fcc:	bl	40e24c <ferror@plt+0xb28c>
  408fd0:	mov	x3, x0
  408fd4:	mov	w0, #0x2                   	// #2
  408fd8:	mov	w1, w24
  408fdc:	mov	x2, x20
  408fe0:	bl	4028e0 <error@plt>
  408fe4:	sub	sp, sp, #0xe0
  408fe8:	stp	x24, x23, [sp, #176]
  408fec:	add	x24, x3, #0x2
  408ff0:	stp	x29, x30, [sp, #128]
  408ff4:	stp	x28, x27, [sp, #144]
  408ff8:	stp	x26, x25, [sp, #160]
  408ffc:	stp	x22, x21, [sp, #192]
  409000:	stp	x20, x19, [sp, #208]
  409004:	add	x29, sp, #0x80
  409008:	cbz	x2, 40910c <ferror@plt+0x614c>
  40900c:	mov	x20, x2
  409010:	mov	x19, x1
  409014:	mov	x21, x0
  409018:	mov	x25, xzr
  40901c:	add	x27, x3, #0x1
  409020:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x149a4>
  409024:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  409028:	cbz	x25, 409054 <ferror@plt+0x6094>
  40902c:	ldr	x23, [x19, x25, lsl #3]
  409030:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  409034:	add	x1, x1, #0x360
  409038:	mov	x0, x23
  40903c:	bl	402cc0 <strcmp@plt>
  409040:	cbz	w0, 40905c <ferror@plt+0x609c>
  409044:	mov	x1, sp
  409048:	mov	x0, x23
  40904c:	bl	412388 <_obstack_memory_used@@Base+0xd2c>
  409050:	b	409064 <ferror@plt+0x60a4>
  409054:	ldr	x0, [x21, x25, lsl #3]
  409058:	bl	4029d0 <fileno@plt>
  40905c:	mov	x1, sp
  409060:	bl	412398 <_obstack_memory_used@@Base+0xd3c>
  409064:	cbnz	w0, 409138 <ferror@plt+0x6178>
  409068:	ldr	w8, [sp, #16]
  40906c:	and	w8, w8, #0xf000
  409070:	cmp	w8, #0x8, lsl #12
  409074:	b.ne	409088 <ferror@plt+0x60c8>  // b.any
  409078:	ldr	x23, [sp, #48]
  40907c:	ldr	x8, [x28, #3000]
  409080:	cbnz	x8, 4090bc <ferror@plt+0x60fc>
  409084:	b	4090a8 <ferror@plt+0x60e8>
  409088:	ldr	x9, [x22, #1592]
  40908c:	cbz	x9, 40909c <ferror@plt+0x60dc>
  409090:	mov	w8, #0x1                   	// #1
  409094:	mov	x26, x9
  409098:	b	4090f4 <ferror@plt+0x6134>
  40909c:	mov	w23, #0x20000               	// #131072
  4090a0:	ldr	x8, [x28, #3000]
  4090a4:	cbnz	x8, 4090bc <ferror@plt+0x60fc>
  4090a8:	ldr	x8, [x22, #1592]
  4090ac:	str	x8, [x28, #3000]
  4090b0:	cbnz	x8, 4090bc <ferror@plt+0x60fc>
  4090b4:	bl	40942c <ferror@plt+0x646c>
  4090b8:	str	x0, [x28, #3000]
  4090bc:	orr	x8, xzr, #0x1
  4090c0:	madd	x9, x23, x27, x8
  4090c4:	udiv	x8, x9, x27
  4090c8:	cmp	x23, x8
  4090cc:	b.ne	4090ec <ferror@plt+0x612c>  // b.any
  4090d0:	ldr	x8, [x28, #3000]
  4090d4:	sub	x8, x8, x24
  4090d8:	cmp	x8, x9
  4090dc:	b.ls	4090ec <ferror@plt+0x612c>  // b.plast
  4090e0:	mov	w8, wzr
  4090e4:	add	x24, x9, x24
  4090e8:	b	4090f4 <ferror@plt+0x6134>
  4090ec:	ldr	x26, [x28, #3000]
  4090f0:	mov	w8, #0x1                   	// #1
  4090f4:	cbnz	w8, 409110 <ferror@plt+0x6150>
  4090f8:	add	x25, x25, #0x1
  4090fc:	cmp	x20, x25
  409100:	b.ne	409028 <ferror@plt+0x6068>  // b.any
  409104:	mov	w8, #0x2                   	// #2
  409108:	b	409110 <ferror@plt+0x6150>
  40910c:	mov	w8, #0x2                   	// #2
  409110:	cmp	w8, #0x2
  409114:	csel	x0, x24, x26, eq  // eq = none
  409118:	ldp	x20, x19, [sp, #208]
  40911c:	ldp	x22, x21, [sp, #192]
  409120:	ldp	x24, x23, [sp, #176]
  409124:	ldp	x26, x25, [sp, #160]
  409128:	ldp	x28, x27, [sp, #144]
  40912c:	ldp	x29, x30, [sp, #128]
  409130:	add	sp, sp, #0xe0
  409134:	ret
  409138:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40913c:	add	x1, x1, #0x665
  409140:	mov	w2, #0x5                   	// #5
  409144:	mov	x0, xzr
  409148:	bl	402ea0 <dcgettext@plt>
  40914c:	ldr	x1, [x19, x25, lsl #3]
  409150:	bl	405e84 <ferror@plt+0x2ec4>
  409154:	stp	x29, x30, [sp, #-32]!
  409158:	str	x19, [sp, #16]
  40915c:	mov	x19, x0
  409160:	adrp	x0, 409000 <ferror@plt+0x6040>
  409164:	lsl	x1, x1, #1
  409168:	add	x0, x0, #0x510
  40916c:	mov	x29, sp
  409170:	bl	40c414 <ferror@plt+0x9454>
  409174:	add	x8, x19, #0x8
  409178:	str	x0, [x19], #56
  40917c:	mov	x0, x8
  409180:	mov	x1, xzr
  409184:	bl	402b70 <pthread_mutex_init@plt>
  409188:	mov	x0, x19
  40918c:	mov	x1, xzr
  409190:	bl	402e00 <pthread_cond_init@plt>
  409194:	ldr	x19, [sp, #16]
  409198:	ldp	x29, x30, [sp], #32
  40919c:	ret
  4091a0:	stp	x29, x30, [sp, #-48]!
  4091a4:	add	x8, x0, x0, lsl #4
  4091a8:	stp	x22, x21, [sp, #16]
  4091ac:	mov	x21, x0
  4091b0:	lsl	x0, x8, #4
  4091b4:	stp	x20, x19, [sp, #32]
  4091b8:	mov	x29, sp
  4091bc:	mov	x19, x2
  4091c0:	mov	x20, x1
  4091c4:	bl	410160 <ferror@plt+0xd1a0>
  4091c8:	movi	v0.2d, #0x0
  4091cc:	mov	x22, x0
  4091d0:	stp	xzr, x20, [x0, #32]
  4091d4:	stp	x20, xzr, [x0, #48]
  4091d8:	str	wzr, [x0, #80]
  4091dc:	strb	wzr, [x0, #84]
  4091e0:	stp	q0, q0, [x0]
  4091e4:	add	x0, x0, #0x58
  4091e8:	mov	x1, xzr
  4091ec:	bl	402b70 <pthread_mutex_init@plt>
  4091f0:	add	x1, x22, #0x88
  4091f4:	mov	x0, x22
  4091f8:	mov	x2, x19
  4091fc:	mov	x3, x21
  409200:	mov	x4, x20
  409204:	mov	w5, wzr
  409208:	bl	40953c <ferror@plt+0x657c>
  40920c:	mov	x0, x22
  409210:	ldp	x20, x19, [sp, #32]
  409214:	ldp	x22, x21, [sp, #16]
  409218:	ldp	x29, x30, [sp], #48
  40921c:	ret
  409220:	sub	sp, sp, #0xa0
  409224:	stp	x29, x30, [sp, #64]
  409228:	str	x27, [sp, #80]
  40922c:	stp	x26, x25, [sp, #96]
  409230:	stp	x24, x23, [sp, #112]
  409234:	stp	x22, x21, [sp, #128]
  409238:	stp	x20, x19, [sp, #144]
  40923c:	lsr	x26, x1, #1
  409240:	ldp	x8, x9, [x3, #40]
  409244:	stp	x26, x2, [sp, #16]
  409248:	str	x0, [sp, #8]
  40924c:	ldr	x10, [x3, #64]
  409250:	mov	x19, x6
  409254:	mov	x20, x5
  409258:	mov	x21, x4
  40925c:	mov	x23, x3
  409260:	mov	x22, x2
  409264:	mov	x24, x0
  409268:	cmp	x1, #0x2
  40926c:	add	x29, sp, #0x40
  409270:	stp	x10, x4, [sp, #32]
  409274:	stp	x5, x6, [sp, #48]
  409278:	b.cc	4092a8 <ferror@plt+0x62e8>  // b.lo, b.ul, b.last
  40927c:	add	x8, x9, x8
  409280:	cmp	x8, #0x20, lsl #12
  409284:	b.cc	4092a8 <ferror@plt+0x62e8>  // b.lo, b.ul, b.last
  409288:	adrp	x2, 409000 <ferror@plt+0x6040>
  40928c:	mov	x25, x1
  409290:	add	x2, x2, #0x62c
  409294:	add	x0, x29, #0x18
  409298:	add	x3, sp, #0x8
  40929c:	mov	x1, xzr
  4092a0:	bl	402bb0 <pthread_create@plt>
  4092a4:	cbz	w0, 409340 <ferror@plt+0x6380>
  4092a8:	ldp	x26, x25, [x23, #40]
  4092ac:	sub	x27, x24, x22, lsl #5
  4092b0:	cmp	x25, #0x2
  4092b4:	b.cc	4092d4 <ferror@plt+0x6314>  // b.lo, b.ul, b.last
  4092b8:	lsl	x8, x26, #4
  4092bc:	and	x8, x8, #0xffffffffffffffe0
  4092c0:	sub	x0, x24, x26, lsl #5
  4092c4:	sub	x2, x27, x8
  4092c8:	mov	x1, x25
  4092cc:	mov	w3, wzr
  4092d0:	bl	409658 <ferror@plt+0x6698>
  4092d4:	cmp	x26, #0x2
  4092d8:	b.cc	4092f0 <ferror@plt+0x6330>  // b.lo, b.ul, b.last
  4092dc:	mov	x0, x24
  4092e0:	mov	x1, x26
  4092e4:	mov	x2, x27
  4092e8:	mov	w3, wzr
  4092ec:	bl	409658 <ferror@plt+0x6698>
  4092f0:	sub	x8, x24, x26, lsl #5
  4092f4:	sub	x9, x8, x25, lsl #5
  4092f8:	mov	x0, x21
  4092fc:	mov	x1, x23
  409300:	stp	x24, x8, [x23]
  409304:	stp	x8, x9, [x23, #16]
  409308:	bl	409770 <ferror@plt+0x67b0>
  40930c:	mov	x0, x21
  409310:	mov	x1, x22
  409314:	mov	x2, x20
  409318:	mov	x3, x19
  40931c:	bl	4097c8 <ferror@plt+0x6808>
  409320:	ldp	x20, x19, [sp, #144]
  409324:	ldp	x22, x21, [sp, #128]
  409328:	ldp	x24, x23, [sp, #112]
  40932c:	ldp	x26, x25, [sp, #96]
  409330:	ldr	x27, [sp, #80]
  409334:	ldp	x29, x30, [sp, #64]
  409338:	add	sp, sp, #0xa0
  40933c:	ret
  409340:	ldr	x8, [x23, #40]
  409344:	ldr	x3, [x23, #72]
  409348:	sub	x1, x25, x26
  40934c:	mov	x2, x22
  409350:	sub	x0, x24, x8, lsl #5
  409354:	mov	x4, x21
  409358:	mov	x5, x20
  40935c:	mov	x6, x19
  409360:	bl	409220 <ferror@plt+0x6260>
  409364:	ldr	x0, [x29, #24]
  409368:	mov	x1, xzr
  40936c:	bl	402bf0 <pthread_join@plt>
  409370:	b	409320 <ferror@plt+0x6360>
  409374:	stp	x29, x30, [sp, #-48]!
  409378:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40937c:	ldrb	w8, [x8, #1562]
  409380:	str	x21, [sp, #16]
  409384:	stp	x20, x19, [sp, #32]
  409388:	mov	x19, x2
  40938c:	mov	x20, x1
  409390:	cmp	w8, #0x1
  409394:	mov	x21, x0
  409398:	mov	x29, sp
  40939c:	b.ne	4093d0 <ferror@plt+0x6410>  // b.any
  4093a0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4093a4:	ldr	x8, [x8, #2968]
  4093a8:	cbz	x8, 4093c0 <ferror@plt+0x6400>
  4093ac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x149a4>
  4093b0:	add	x1, x1, #0xb98
  4093b4:	mov	x0, x21
  4093b8:	bl	40666c <ferror@plt+0x36ac>
  4093bc:	cbz	w0, 4093e0 <ferror@plt+0x6420>
  4093c0:	ldp	q1, q0, [x21]
  4093c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4093c8:	add	x8, x8, #0xb98
  4093cc:	stp	q1, q0, [x8]
  4093d0:	mov	x0, x21
  4093d4:	mov	x1, x20
  4093d8:	mov	x2, x19
  4093dc:	bl	406758 <ferror@plt+0x3798>
  4093e0:	ldp	x20, x19, [sp, #32]
  4093e4:	ldr	x21, [sp, #16]
  4093e8:	ldp	x29, x30, [sp], #48
  4093ec:	ret
  4093f0:	stp	x29, x30, [sp, #-32]!
  4093f4:	str	x19, [sp, #16]
  4093f8:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x149a4>
  4093fc:	ldr	w8, [x19, #2952]
  409400:	mov	x29, sp
  409404:	cmp	w8, #0x1
  409408:	b.lt	409420 <ferror@plt+0x6460>  // b.tstop
  40940c:	mov	w0, #0xffffffff            	// #-1
  409410:	bl	408c30 <ferror@plt+0x5c70>
  409414:	ldr	w8, [x19, #2952]
  409418:	cmp	w8, #0x0
  40941c:	b.gt	40940c <ferror@plt+0x644c>
  409420:	ldr	x19, [sp, #16]
  409424:	ldp	x29, x30, [sp], #32
  409428:	ret
  40942c:	sub	sp, sp, #0x30
  409430:	mov	x1, sp
  409434:	mov	w0, #0x2                   	// #2
  409438:	str	d8, [sp, #16]
  40943c:	stp	x29, x30, [sp, #24]
  409440:	str	x19, [sp, #40]
  409444:	add	x29, sp, #0x10
  409448:	bl	402e10 <getrlimit@plt>
  40944c:	ldr	x8, [sp]
  409450:	cmp	w0, #0x0
  409454:	mov	x1, sp
  409458:	mov	w0, #0x9                   	// #9
  40945c:	csinv	x19, x8, xzr, eq  // eq = none
  409460:	bl	402e10 <getrlimit@plt>
  409464:	ldr	x8, [sp]
  409468:	mov	x1, sp
  40946c:	cmp	x8, x19
  409470:	ccmp	w0, #0x0, #0x0, cc  // cc = lo, ul, last
  409474:	csel	x8, x8, x19, eq  // eq = none
  409478:	mov	w0, #0x5                   	// #5
  40947c:	lsr	x19, x8, #1
  409480:	bl	402e10 <getrlimit@plt>
  409484:	cbnz	w0, 4094a0 <ferror@plt+0x64e0>
  409488:	ldr	x8, [sp]
  40948c:	lsr	x8, x8, #4
  409490:	lsl	x9, x8, #4
  409494:	sub	x8, x9, x8
  409498:	cmp	x8, x19
  40949c:	csel	x19, x8, x19, cc  // cc = lo, ul, last
  4094a0:	bl	40cc80 <ferror@plt+0x9cc0>
  4094a4:	mov	v8.16b, v0.16b
  4094a8:	bl	40cc0c <ferror@plt+0x9c4c>
  4094ac:	fmov	d1, #1.250000000000000000e-01
  4094b0:	fmov	d2, #7.500000000000000000e-01
  4094b4:	fmul	d1, d0, d1
  4094b8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4094bc:	fmul	d0, d0, d2
  4094c0:	fcmp	d8, d1
  4094c4:	ucvtf	d2, x19
  4094c8:	ldr	w8, [x8, #1000]
  4094cc:	fcsel	d1, d8, d1, gt
  4094d0:	fcvtzu	x9, d0
  4094d4:	fcmp	d0, d2
  4094d8:	csel	x9, x9, x19, mi  // mi = first
  4094dc:	ucvtf	d0, x9
  4094e0:	fcvtzu	x10, d1
  4094e4:	fcmp	d1, d0
  4094e8:	add	x8, x8, x8, lsl #4
  4094ec:	ldr	x19, [sp, #40]
  4094f0:	ldp	x29, x30, [sp, #24]
  4094f4:	ldr	d8, [sp, #16]
  4094f8:	csel	x9, x10, x9, mi  // mi = first
  4094fc:	lsl	x8, x8, #1
  409500:	cmp	x9, x8
  409504:	csel	x0, x9, x8, hi  // hi = pmore
  409508:	add	sp, sp, #0x30
  40950c:	ret
  409510:	ldr	w8, [x0, #80]
  409514:	ldr	w9, [x1, #80]
  409518:	cmp	w8, w9
  40951c:	b.ne	409534 <ferror@plt+0x6574>  // b.any
  409520:	ldp	x8, x9, [x0, #40]
  409524:	ldp	x10, x11, [x1, #40]
  409528:	add	x8, x9, x8
  40952c:	add	x9, x11, x10
  409530:	cmp	x8, x9
  409534:	cset	w0, cc  // cc = lo, ul, last
  409538:	ret
  40953c:	stp	x29, x30, [sp, #-64]!
  409540:	tst	w5, #0x1
  409544:	mov	w8, #0x30                  	// #48
  409548:	mov	w9, #0x28                  	// #40
  40954c:	csel	x8, x9, x8, ne  // ne = any
  409550:	ldr	w9, [x0, #80]
  409554:	ldr	x8, [x0, x8]
  409558:	stp	x24, x23, [sp, #16]
  40955c:	add	x10, x0, #0x10
  409560:	add	w9, w9, #0x1
  409564:	add	x11, x0, #0x18
  409568:	sub	x23, x2, x4, lsl #5
  40956c:	str	w9, [x1, #80]
  409570:	lsr	x9, x8, #1
  409574:	csel	x10, x10, x11, ne  // ne = any
  409578:	sub	x8, x8, x9
  40957c:	sub	x24, x23, x9, lsl #5
  409580:	stp	x22, x21, [sp, #32]
  409584:	stp	x20, x19, [sp, #48]
  409588:	mov	x20, x1
  40958c:	add	x21, x1, #0x88
  409590:	strb	wzr, [x1, #84]
  409594:	stp	x10, x9, [x1, #32]
  409598:	stp	x23, x24, [x1, #16]
  40959c:	stp	x23, x24, [x1]
  4095a0:	stp	x8, x0, [x1, #48]
  4095a4:	add	x0, x1, #0x58
  4095a8:	mov	x1, xzr
  4095ac:	mov	x29, sp
  4095b0:	mov	x19, x4
  4095b4:	mov	x22, x3
  4095b8:	bl	402b70 <pthread_mutex_init@plt>
  4095bc:	cmp	x22, #0x2
  4095c0:	b.cc	409610 <ferror@plt+0x6650>  // b.lo, b.ul, b.last
  4095c4:	lsr	x3, x22, #1
  4095c8:	mov	w5, #0x1                   	// #1
  4095cc:	mov	x0, x20
  4095d0:	mov	x1, x21
  4095d4:	mov	x2, x23
  4095d8:	mov	x4, x19
  4095dc:	sub	x22, x22, x3
  4095e0:	str	x21, [x20, #64]
  4095e4:	bl	40953c <ferror@plt+0x657c>
  4095e8:	mov	x1, x0
  4095ec:	str	x0, [x20, #72]
  4095f0:	mov	x0, x20
  4095f4:	mov	x2, x24
  4095f8:	mov	x3, x22
  4095fc:	mov	x4, x19
  409600:	mov	w5, wzr
  409604:	bl	40953c <ferror@plt+0x657c>
  409608:	mov	x21, x0
  40960c:	b	409614 <ferror@plt+0x6654>
  409610:	stp	xzr, xzr, [x20, #64]
  409614:	mov	x0, x21
  409618:	ldp	x20, x19, [sp, #48]
  40961c:	ldp	x22, x21, [sp, #32]
  409620:	ldp	x24, x23, [sp, #16]
  409624:	ldp	x29, x30, [sp], #64
  409628:	ret
  40962c:	stp	x29, x30, [sp, #-16]!
  409630:	ldp	x8, x1, [x0]
  409634:	ldp	x2, x3, [x0, #16]
  409638:	ldp	x4, x5, [x0, #32]
  40963c:	ldr	x6, [x0, #48]
  409640:	mov	x0, x8
  409644:	mov	x29, sp
  409648:	bl	409220 <ferror@plt+0x6260>
  40964c:	mov	x0, xzr
  409650:	ldp	x29, x30, [sp], #16
  409654:	ret
  409658:	stp	x29, x30, [sp, #-64]!
  40965c:	stp	x22, x21, [sp, #32]
  409660:	stp	x20, x19, [sp, #48]
  409664:	mov	w21, w3
  409668:	mov	x19, x2
  40966c:	cmp	x1, #0x2
  409670:	mov	x20, x0
  409674:	str	x23, [sp, #16]
  409678:	mov	x29, sp
  40967c:	b.ne	4096d0 <ferror@plt+0x6710>  // b.any
  409680:	sub	x22, x20, #0x20
  409684:	sub	x23, x20, #0x40
  409688:	mov	x0, x22
  40968c:	mov	x1, x23
  409690:	bl	40666c <ferror@plt+0x36ac>
  409694:	tbz	w21, #0, 409718 <ferror@plt+0x6758>
  409698:	cmp	w0, #0x0
  40969c:	mov	x8, #0xffffffffffffffc0    	// #-64
  4096a0:	mov	x9, #0xffffffffffffffe0    	// #-32
  4096a4:	csel	x8, x9, x8, gt
  4096a8:	cset	w9, gt
  4096ac:	mvn	x9, x9
  4096b0:	add	x8, x20, x8
  4096b4:	add	x9, x20, x9, lsl #5
  4096b8:	ldp	q3, q0, [x8]
  4096bc:	ldp	q2, q1, [x9]
  4096c0:	stur	q3, [x19, #-64]
  4096c4:	stp	q0, q2, [x19, #-48]
  4096c8:	stur	q1, [x19, #-16]
  4096cc:	b	40975c <ferror@plt+0x679c>
  4096d0:	lsr	x23, x1, #1
  4096d4:	tst	w21, #0x1
  4096d8:	csneg	x8, xzr, x23, eq  // eq = none
  4096dc:	mov	x22, x1
  4096e0:	sub	x1, x1, x23
  4096e4:	sub	x0, x20, x23, lsl #5
  4096e8:	add	x2, x19, x8, lsl #5
  4096ec:	and	w3, w21, #0x1
  4096f0:	bl	409658 <ferror@plt+0x6698>
  4096f4:	cmp	x22, #0x4
  4096f8:	b.cc	40973c <ferror@plt+0x677c>  // b.lo, b.ul, b.last
  4096fc:	mvn	w8, w21
  409700:	and	w3, w8, #0x1
  409704:	mov	x0, x20
  409708:	mov	x1, x23
  40970c:	mov	x2, x19
  409710:	bl	409658 <ferror@plt+0x6698>
  409714:	b	409748 <ferror@plt+0x6788>
  409718:	cmp	w0, #0x1
  40971c:	b.lt	40975c <ferror@plt+0x679c>  // b.tstop
  409720:	ldp	q1, q0, [x22]
  409724:	ldp	q2, q3, [x23]
  409728:	stp	q1, q0, [x19, #-32]
  40972c:	ldp	q1, q0, [x19, #-32]
  409730:	stp	q2, q3, [x22]
  409734:	stp	q1, q0, [x23]
  409738:	b	40975c <ferror@plt+0x679c>
  40973c:	tbnz	w21, #0, 409748 <ferror@plt+0x6788>
  409740:	ldp	q1, q0, [x20, #-32]
  409744:	stp	q1, q0, [x19, #-32]
  409748:	tst	w21, #0x1
  40974c:	csel	x0, x19, x20, ne  // ne = any
  409750:	csel	x2, x20, x19, ne  // ne = any
  409754:	mov	x1, x22
  409758:	bl	409860 <ferror@plt+0x68a0>
  40975c:	ldp	x20, x19, [sp, #48]
  409760:	ldp	x22, x21, [sp, #32]
  409764:	ldr	x23, [sp, #16]
  409768:	ldp	x29, x30, [sp], #64
  40976c:	ret
  409770:	stp	x29, x30, [sp, #-48]!
  409774:	str	x21, [sp, #16]
  409778:	add	x21, x0, #0x8
  40977c:	stp	x20, x19, [sp, #32]
  409780:	mov	x20, x0
  409784:	mov	x0, x21
  409788:	mov	x29, sp
  40978c:	mov	x19, x1
  409790:	bl	402f70 <pthread_mutex_lock@plt>
  409794:	ldr	x0, [x20], #56
  409798:	mov	x1, x19
  40979c:	bl	40c4b0 <ferror@plt+0x94f0>
  4097a0:	mov	w8, #0x1                   	// #1
  4097a4:	mov	x0, x20
  4097a8:	strb	w8, [x19, #84]
  4097ac:	bl	402aa0 <pthread_cond_signal@plt>
  4097b0:	mov	x0, x21
  4097b4:	bl	402f80 <pthread_mutex_unlock@plt>
  4097b8:	ldp	x20, x19, [sp, #32]
  4097bc:	ldr	x21, [sp, #16]
  4097c0:	ldp	x29, x30, [sp], #48
  4097c4:	ret
  4097c8:	stp	x29, x30, [sp, #-64]!
  4097cc:	str	x23, [sp, #16]
  4097d0:	stp	x22, x21, [sp, #32]
  4097d4:	stp	x20, x19, [sp, #48]
  4097d8:	mov	x29, sp
  4097dc:	mov	x20, x3
  4097e0:	mov	x21, x2
  4097e4:	mov	x22, x1
  4097e8:	mov	x19, x0
  4097ec:	bl	40991c <ferror@plt+0x695c>
  4097f0:	ldr	w8, [x0, #80]
  4097f4:	mov	x23, x0
  4097f8:	cbz	w8, 409838 <ferror@plt+0x6878>
  4097fc:	mov	x0, x23
  409800:	mov	x1, x22
  409804:	mov	x2, x21
  409808:	mov	x3, x20
  40980c:	bl	4099ac <ferror@plt+0x69ec>
  409810:	mov	x0, x19
  409814:	mov	x1, x23
  409818:	bl	409cb4 <ferror@plt+0x6cf4>
  40981c:	mov	x0, x19
  409820:	mov	x1, x23
  409824:	bl	409d10 <ferror@plt+0x6d50>
  409828:	mov	x0, x23
  40982c:	bl	409994 <ferror@plt+0x69d4>
  409830:	mov	x0, x19
  409834:	b	4097ec <ferror@plt+0x682c>
  409838:	mov	x0, x23
  40983c:	bl	409994 <ferror@plt+0x69d4>
  409840:	mov	x0, x19
  409844:	mov	x1, x23
  409848:	bl	409770 <ferror@plt+0x67b0>
  40984c:	ldp	x20, x19, [sp, #48]
  409850:	ldp	x22, x21, [sp, #32]
  409854:	ldr	x23, [sp, #16]
  409858:	ldp	x29, x30, [sp], #64
  40985c:	ret
  409860:	stp	x29, x30, [sp, #-80]!
  409864:	stp	x24, x23, [sp, #32]
  409868:	lsr	x23, x1, #1
  40986c:	str	x25, [sp, #16]
  409870:	stp	x20, x19, [sp, #64]
  409874:	mov	x20, x2
  409878:	mov	x19, x0
  40987c:	sub	x24, x1, x23
  409880:	sub	x25, x0, x23, lsl #5
  409884:	stp	x22, x21, [sp, #48]
  409888:	mov	x29, sp
  40988c:	sub	x21, x20, #0x20
  409890:	sub	x22, x25, #0x20
  409894:	mov	x0, x21
  409898:	mov	x1, x22
  40989c:	bl	40666c <ferror@plt+0x36ac>
  4098a0:	cmp	w0, #0x0
  4098a4:	sub	x19, x19, #0x20
  4098a8:	b.le	4098c4 <ferror@plt+0x6904>
  4098ac:	ldp	q1, q0, [x22]
  4098b0:	subs	x24, x24, #0x1
  4098b4:	mov	x25, x22
  4098b8:	stp	q1, q0, [x19]
  4098bc:	b.ne	40988c <ferror@plt+0x68cc>  // b.any
  4098c0:	b	4098dc <ferror@plt+0x691c>
  4098c4:	ldp	q1, q0, [x21]
  4098c8:	subs	x23, x23, #0x1
  4098cc:	mov	x20, x21
  4098d0:	stp	q1, q0, [x19]
  4098d4:	b.ne	40988c <ferror@plt+0x68cc>  // b.any
  4098d8:	b	409904 <ferror@plt+0x6944>
  4098dc:	mov	x8, xzr
  4098e0:	mov	x9, #0xffffffffffffffe0    	// #-32
  4098e4:	add	x10, x20, x9
  4098e8:	ldp	q0, q1, [x10]
  4098ec:	add	x8, x8, #0x1
  4098f0:	add	x10, x19, x9
  4098f4:	cmp	x23, x8
  4098f8:	sub	x9, x9, #0x20
  4098fc:	stp	q0, q1, [x10]
  409900:	b.ne	4098e4 <ferror@plt+0x6924>  // b.any
  409904:	ldp	x20, x19, [sp, #64]
  409908:	ldp	x22, x21, [sp, #48]
  40990c:	ldp	x24, x23, [sp, #32]
  409910:	ldr	x25, [sp, #16]
  409914:	ldp	x29, x30, [sp], #80
  409918:	ret
  40991c:	stp	x29, x30, [sp, #-48]!
  409920:	stp	x20, x19, [sp, #32]
  409924:	add	x19, x0, #0x8
  409928:	mov	x20, x0
  40992c:	mov	x0, x19
  409930:	stp	x22, x21, [sp, #16]
  409934:	mov	x29, sp
  409938:	bl	402f70 <pthread_mutex_lock@plt>
  40993c:	ldr	x0, [x20]
  409940:	bl	40c598 <ferror@plt+0x95d8>
  409944:	mov	x21, x0
  409948:	cbnz	x0, 40996c <ferror@plt+0x69ac>
  40994c:	add	x22, x20, #0x38
  409950:	mov	x0, x22
  409954:	mov	x1, x19
  409958:	bl	402d40 <pthread_cond_wait@plt>
  40995c:	ldr	x0, [x20]
  409960:	bl	40c598 <ferror@plt+0x95d8>
  409964:	cbz	x0, 409950 <ferror@plt+0x6990>
  409968:	mov	x21, x0
  40996c:	mov	x0, x19
  409970:	bl	402f80 <pthread_mutex_unlock@plt>
  409974:	mov	x0, x21
  409978:	bl	409d74 <ferror@plt+0x6db4>
  40997c:	strb	wzr, [x21, #84]
  409980:	mov	x0, x21
  409984:	ldp	x20, x19, [sp, #32]
  409988:	ldp	x22, x21, [sp, #16]
  40998c:	ldp	x29, x30, [sp], #48
  409990:	ret
  409994:	stp	x29, x30, [sp, #-16]!
  409998:	add	x0, x0, #0x58
  40999c:	mov	x29, sp
  4099a0:	bl	402f80 <pthread_mutex_unlock@plt>
  4099a4:	ldp	x29, x30, [sp], #16
  4099a8:	ret
  4099ac:	stp	x29, x30, [sp, #-96]!
  4099b0:	ldr	w8, [x0, #80]
  4099b4:	stp	x26, x25, [sp, #32]
  4099b8:	stp	x24, x23, [sp, #48]
  4099bc:	ldp	x25, x24, [x0]
  4099c0:	lsl	w9, w8, #1
  4099c4:	add	w9, w9, #0x2
  4099c8:	lsr	x9, x1, x9
  4099cc:	stp	x20, x19, [sp, #80]
  4099d0:	mov	x19, x0
  4099d4:	cmp	w8, #0x1
  4099d8:	add	x26, x9, #0x1
  4099dc:	stp	x28, x27, [sp, #16]
  4099e0:	stp	x22, x21, [sp, #64]
  4099e4:	mov	x29, sp
  4099e8:	b.ls	409a6c <ferror@plt+0x6aac>  // b.plast
  4099ec:	ldr	x8, [x19, #32]
  4099f0:	ldr	x9, [x19]
  4099f4:	ldr	x10, [x19, #16]
  4099f8:	ldr	x22, [x8]
  4099fc:	cmp	x9, x10
  409a00:	b.ne	409a2c <ferror@plt+0x6a6c>  // b.any
  409a04:	b	409bc4 <ferror@plt+0x6c04>
  409a08:	mov	x20, x21
  409a0c:	str	x21, [x19, #8]
  409a10:	ldp	q1, q0, [x20]
  409a14:	stp	q1, q0, [x22, #-32]
  409a18:	ldr	x9, [x19]
  409a1c:	ldr	x10, [x19, #16]
  409a20:	mov	x22, x8
  409a24:	cmp	x9, x10
  409a28:	b.eq	409bc8 <ferror@plt+0x6c08>  // b.none
  409a2c:	ldr	x8, [x19, #8]
  409a30:	ldr	x10, [x19, #24]
  409a34:	cmp	x8, x10
  409a38:	b.eq	409bc4 <ferror@plt+0x6c04>  // b.none
  409a3c:	cbz	x26, 409bc0 <ferror@plt+0x6c00>
  409a40:	sub	x20, x9, #0x20
  409a44:	sub	x21, x8, #0x20
  409a48:	mov	x0, x20
  409a4c:	mov	x1, x21
  409a50:	sub	x26, x26, #0x1
  409a54:	bl	40666c <ferror@plt+0x36ac>
  409a58:	cmp	w0, #0x0
  409a5c:	sub	x8, x22, #0x20
  409a60:	b.gt	409a08 <ferror@plt+0x6a48>
  409a64:	str	x20, [x19]
  409a68:	b	409a10 <ferror@plt+0x6a50>
  409a6c:	ldr	x8, [x19]
  409a70:	ldr	x23, [x19, #16]
  409a74:	mov	x20, x3
  409a78:	mov	x21, x2
  409a7c:	cmp	x8, x23
  409a80:	b.eq	409b04 <ferror@plt+0x6b44>  // b.none
  409a84:	ldr	x28, [x19, #24]
  409a88:	ldr	x10, [x19, #8]
  409a8c:	cmp	x10, x28
  409a90:	b.eq	409b04 <ferror@plt+0x6b44>  // b.none
  409a94:	mov	x27, x9
  409a98:	cmn	x9, #0x1
  409a9c:	b.eq	409b08 <ferror@plt+0x6b48>  // b.none
  409aa0:	sub	x22, x8, #0x20
  409aa4:	sub	x23, x10, #0x20
  409aa8:	mov	x0, x22
  409aac:	mov	x1, x23
  409ab0:	sub	x26, x26, #0x1
  409ab4:	bl	40666c <ferror@plt+0x36ac>
  409ab8:	cmp	w0, #0x0
  409abc:	b.le	409acc <ferror@plt+0x6b0c>
  409ac0:	mov	x22, x23
  409ac4:	str	x23, [x19, #8]
  409ac8:	b	409ad0 <ferror@plt+0x6b10>
  409acc:	str	x22, [x19]
  409ad0:	mov	x0, x22
  409ad4:	mov	x1, x21
  409ad8:	mov	x2, x20
  409adc:	bl	409374 <ferror@plt+0x63b4>
  409ae0:	ldr	x8, [x19]
  409ae4:	ldr	x23, [x19, #16]
  409ae8:	cmp	x8, x23
  409aec:	b.eq	409b04 <ferror@plt+0x6b44>  // b.none
  409af0:	ldr	x10, [x19, #8]
  409af4:	sub	x9, x27, #0x1
  409af8:	cmp	x10, x28
  409afc:	b.ne	409a94 <ferror@plt+0x6ad4>  // b.any
  409b00:	b	409b08 <ferror@plt+0x6b48>
  409b04:	mov	x27, x26
  409b08:	ldr	x8, [x19, #8]
  409b0c:	ldr	x9, [x19, #48]
  409b10:	sub	x8, x24, x8
  409b14:	cmp	x9, x8, asr #5
  409b18:	b.ne	409b60 <ferror@plt+0x6ba0>  // b.any
  409b1c:	cbz	x27, 409c7c <ferror@plt+0x6cbc>
  409b20:	ldr	x8, [x19]
  409b24:	cmp	x8, x23
  409b28:	b.eq	409c7c <ferror@plt+0x6cbc>  // b.none
  409b2c:	sub	x22, x8, #0x20
  409b30:	sub	x26, x27, #0x1
  409b34:	mov	x0, x22
  409b38:	mov	x1, x21
  409b3c:	mov	x2, x20
  409b40:	str	x22, [x19]
  409b44:	bl	409374 <ferror@plt+0x63b4>
  409b48:	cbz	x26, 409c7c <ferror@plt+0x6cbc>
  409b4c:	cmp	x23, x22
  409b50:	sub	x22, x22, #0x20
  409b54:	sub	x26, x26, #0x1
  409b58:	b.ne	409b34 <ferror@plt+0x6b74>  // b.any
  409b5c:	b	409c7c <ferror@plt+0x6cbc>
  409b60:	ldr	x8, [x19]
  409b64:	ldr	x9, [x19, #40]
  409b68:	sub	x8, x25, x8
  409b6c:	cmp	x9, x8, asr #5
  409b70:	b.ne	409c7c <ferror@plt+0x6cbc>  // b.any
  409b74:	cbz	x27, 409c7c <ferror@plt+0x6cbc>
  409b78:	ldr	x8, [x19, #8]
  409b7c:	ldr	x9, [x19, #24]
  409b80:	cmp	x8, x9
  409b84:	b.eq	409c7c <ferror@plt+0x6cbc>  // b.none
  409b88:	sub	x22, x8, #0x20
  409b8c:	sub	x23, x27, #0x1
  409b90:	mov	x0, x22
  409b94:	mov	x1, x21
  409b98:	mov	x2, x20
  409b9c:	str	x22, [x19, #8]
  409ba0:	bl	409374 <ferror@plt+0x63b4>
  409ba4:	cbz	x23, 409c7c <ferror@plt+0x6cbc>
  409ba8:	ldr	x8, [x19, #24]
  409bac:	sub	x23, x23, #0x1
  409bb0:	cmp	x22, x8
  409bb4:	sub	x22, x22, #0x20
  409bb8:	b.ne	409b90 <ferror@plt+0x6bd0>  // b.any
  409bbc:	b	409c7c <ferror@plt+0x6cbc>
  409bc0:	mov	x26, #0xffffffffffffffff    	// #-1
  409bc4:	mov	x8, x22
  409bc8:	ldr	x9, [x19, #8]
  409bcc:	ldr	x10, [x19, #48]
  409bd0:	sub	x9, x24, x9
  409bd4:	cmp	x10, x9, asr #5
  409bd8:	b.ne	409c20 <ferror@plt+0x6c60>  // b.any
  409bdc:	cbz	x26, 409c74 <ferror@plt+0x6cb4>
  409be0:	ldr	x9, [x19]
  409be4:	ldr	x10, [x19, #16]
  409be8:	cmp	x9, x10
  409bec:	b.eq	409c74 <ferror@plt+0x6cb4>  // b.none
  409bf0:	sub	x10, x26, #0x1
  409bf4:	sub	x11, x9, #0x20
  409bf8:	str	x11, [x19]
  409bfc:	ldp	q1, q0, [x9, #-32]
  409c00:	stp	q1, q0, [x8, #-32]!
  409c04:	cbz	x10, 409c74 <ferror@plt+0x6cb4>
  409c08:	ldr	x9, [x19]
  409c0c:	ldr	x11, [x19, #16]
  409c10:	sub	x10, x10, #0x1
  409c14:	cmp	x9, x11
  409c18:	b.ne	409bf4 <ferror@plt+0x6c34>  // b.any
  409c1c:	b	409c74 <ferror@plt+0x6cb4>
  409c20:	ldr	x9, [x19]
  409c24:	ldr	x10, [x19, #40]
  409c28:	sub	x9, x25, x9
  409c2c:	cmp	x10, x9, asr #5
  409c30:	b.ne	409c74 <ferror@plt+0x6cb4>  // b.any
  409c34:	cbz	x26, 409c74 <ferror@plt+0x6cb4>
  409c38:	ldr	x9, [x19, #8]
  409c3c:	ldr	x10, [x19, #24]
  409c40:	cmp	x9, x10
  409c44:	b.eq	409c74 <ferror@plt+0x6cb4>  // b.none
  409c48:	sub	x10, x26, #0x1
  409c4c:	sub	x11, x9, #0x20
  409c50:	str	x11, [x19, #8]
  409c54:	ldp	q1, q0, [x9, #-32]
  409c58:	stp	q1, q0, [x8, #-32]!
  409c5c:	cbz	x10, 409c74 <ferror@plt+0x6cb4>
  409c60:	ldr	x9, [x19, #8]
  409c64:	ldr	x11, [x19, #24]
  409c68:	sub	x10, x10, #0x1
  409c6c:	cmp	x9, x11
  409c70:	b.ne	409c4c <ferror@plt+0x6c8c>  // b.any
  409c74:	ldr	x9, [x19, #32]
  409c78:	str	x8, [x9]
  409c7c:	ldp	x8, x9, [x19]
  409c80:	ldp	x10, x11, [x19, #40]
  409c84:	ldp	x22, x21, [sp, #64]
  409c88:	ldp	x28, x27, [sp, #16]
  409c8c:	sub	x8, x25, x8
  409c90:	sub	x9, x24, x9
  409c94:	sub	x8, x10, x8, asr #5
  409c98:	sub	x9, x11, x9, asr #5
  409c9c:	stp	x8, x9, [x19, #40]
  409ca0:	ldp	x20, x19, [sp, #80]
  409ca4:	ldp	x24, x23, [sp, #48]
  409ca8:	ldp	x26, x25, [sp, #32]
  409cac:	ldp	x29, x30, [sp], #96
  409cb0:	ret
  409cb4:	stp	x29, x30, [sp, #-16]!
  409cb8:	ldrb	w8, [x1, #84]
  409cbc:	mov	x29, sp
  409cc0:	cbz	w8, 409ccc <ferror@plt+0x6d0c>
  409cc4:	ldp	x29, x30, [sp], #16
  409cc8:	ret
  409ccc:	ldp	x8, x10, [x1, #8]
  409cd0:	ldr	x11, [x1]
  409cd4:	ldr	x9, [x1, #24]
  409cd8:	cmp	x11, x10
  409cdc:	b.ne	409cf4 <ferror@plt+0x6d34>  // b.any
  409ce0:	cmp	x8, x9
  409ce4:	b.eq	409cc4 <ferror@plt+0x6d04>  // b.none
  409ce8:	ldr	x8, [x1, #40]
  409cec:	cbnz	x8, 409cc4 <ferror@plt+0x6d04>
  409cf0:	b	409d04 <ferror@plt+0x6d44>
  409cf4:	cmp	x8, x9
  409cf8:	b.ne	409d04 <ferror@plt+0x6d44>  // b.any
  409cfc:	ldr	x8, [x1, #48]
  409d00:	cbnz	x8, 409cc4 <ferror@plt+0x6d04>
  409d04:	bl	409770 <ferror@plt+0x67b0>
  409d08:	ldp	x29, x30, [sp], #16
  409d0c:	ret
  409d10:	stp	x29, x30, [sp, #-32]!
  409d14:	stp	x20, x19, [sp, #16]
  409d18:	ldr	w8, [x1, #80]
  409d1c:	mov	x19, x1
  409d20:	mov	x20, x0
  409d24:	mov	x29, sp
  409d28:	cmp	w8, #0x2
  409d2c:	b.cc	409d50 <ferror@plt+0x6d90>  // b.lo, b.ul, b.last
  409d30:	ldr	x0, [x19, #56]
  409d34:	bl	409d74 <ferror@plt+0x6db4>
  409d38:	ldr	x1, [x19, #56]
  409d3c:	mov	x0, x20
  409d40:	bl	409cb4 <ferror@plt+0x6cf4>
  409d44:	ldr	x0, [x19, #56]
  409d48:	bl	409994 <ferror@plt+0x69d4>
  409d4c:	b	409d68 <ferror@plt+0x6da8>
  409d50:	ldp	x8, x9, [x19, #40]
  409d54:	cmn	x8, x9
  409d58:	b.ne	409d68 <ferror@plt+0x6da8>  // b.any
  409d5c:	ldr	x1, [x19, #56]
  409d60:	mov	x0, x20
  409d64:	bl	409770 <ferror@plt+0x67b0>
  409d68:	ldp	x20, x19, [sp, #16]
  409d6c:	ldp	x29, x30, [sp], #32
  409d70:	ret
  409d74:	stp	x29, x30, [sp, #-16]!
  409d78:	add	x0, x0, #0x58
  409d7c:	mov	x29, sp
  409d80:	bl	402f70 <pthread_mutex_lock@plt>
  409d84:	ldp	x29, x30, [sp], #16
  409d88:	ret
  409d8c:	stp	x29, x30, [sp, #-16]!
  409d90:	mov	w0, #0x1                   	// #1
  409d94:	mov	x29, sp
  409d98:	bl	4030dc <ferror@plt+0x11c>
  409d9c:	ldp	x29, x30, [sp], #16
  409da0:	ret
  409da4:	stp	x29, x30, [sp, #-96]!
  409da8:	stp	x28, x27, [sp, #16]
  409dac:	stp	x26, x25, [sp, #32]
  409db0:	stp	x24, x23, [sp, #48]
  409db4:	stp	x22, x21, [sp, #64]
  409db8:	stp	x20, x19, [sp, #80]
  409dbc:	mov	x29, sp
  409dc0:	mov	x19, x3
  409dc4:	mov	x20, x2
  409dc8:	mov	x24, x1
  409dcc:	mov	x21, x0
  409dd0:	bl	4028b0 <strlen@plt>
  409dd4:	ldr	x25, [x24]
  409dd8:	cbz	x25, 409e58 <ferror@plt+0x6e98>
  409ddc:	mov	x22, x0
  409de0:	mov	w26, wzr
  409de4:	mov	x23, xzr
  409de8:	add	x28, x24, #0x8
  409dec:	mov	x27, #0xffffffffffffffff    	// #-1
  409df0:	mov	x24, x20
  409df4:	b	409e0c <ferror@plt+0x6e4c>
  409df8:	mov	x27, x23
  409dfc:	ldr	x25, [x28, x23, lsl #3]
  409e00:	add	x23, x23, #0x1
  409e04:	add	x24, x24, x19
  409e08:	cbz	x25, 409e60 <ferror@plt+0x6ea0>
  409e0c:	mov	x0, x25
  409e10:	mov	x1, x21
  409e14:	mov	x2, x22
  409e18:	bl	402ab0 <strncmp@plt>
  409e1c:	cbnz	w0, 409dfc <ferror@plt+0x6e3c>
  409e20:	mov	x0, x25
  409e24:	bl	4028b0 <strlen@plt>
  409e28:	cmp	x0, x22
  409e2c:	b.eq	409e6c <ferror@plt+0x6eac>  // b.none
  409e30:	cmn	x27, #0x1
  409e34:	b.eq	409df8 <ferror@plt+0x6e38>  // b.none
  409e38:	cbz	x20, 409e50 <ferror@plt+0x6e90>
  409e3c:	madd	x0, x27, x19, x20
  409e40:	mov	x1, x24
  409e44:	mov	x2, x19
  409e48:	bl	402b50 <bcmp@plt>
  409e4c:	cbz	w0, 409dfc <ferror@plt+0x6e3c>
  409e50:	mov	w26, #0x1                   	// #1
  409e54:	b	409dfc <ferror@plt+0x6e3c>
  409e58:	mov	w26, wzr
  409e5c:	mov	x27, #0xffffffffffffffff    	// #-1
  409e60:	tst	w26, #0x1
  409e64:	mov	x8, #0xfffffffffffffffe    	// #-2
  409e68:	csel	x23, x8, x27, ne  // ne = any
  409e6c:	mov	x0, x23
  409e70:	ldp	x20, x19, [sp, #80]
  409e74:	ldp	x22, x21, [sp, #64]
  409e78:	ldp	x24, x23, [sp, #48]
  409e7c:	ldp	x26, x25, [sp, #32]
  409e80:	ldp	x28, x27, [sp, #16]
  409e84:	ldp	x29, x30, [sp], #96
  409e88:	ret
  409e8c:	stp	x29, x30, [sp, #-48]!
  409e90:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  409e94:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  409e98:	add	x8, x8, #0x6a8
  409e9c:	add	x9, x9, #0x68d
  409ea0:	cmn	x2, #0x1
  409ea4:	stp	x20, x19, [sp, #32]
  409ea8:	mov	x19, x1
  409eac:	mov	x20, x0
  409eb0:	csel	x1, x9, x8, eq  // eq = none
  409eb4:	mov	w2, #0x5                   	// #5
  409eb8:	mov	x0, xzr
  409ebc:	str	x21, [sp, #16]
  409ec0:	mov	x29, sp
  409ec4:	bl	402ea0 <dcgettext@plt>
  409ec8:	mov	x21, x0
  409ecc:	mov	w1, #0x8                   	// #8
  409ed0:	mov	w0, wzr
  409ed4:	mov	x2, x19
  409ed8:	bl	40e180 <ferror@plt+0xb1c0>
  409edc:	mov	x19, x0
  409ee0:	mov	w0, #0x1                   	// #1
  409ee4:	mov	x1, x20
  409ee8:	bl	40e4b4 <ferror@plt+0xb4f4>
  409eec:	mov	x4, x0
  409ef0:	mov	w0, wzr
  409ef4:	mov	w1, wzr
  409ef8:	mov	x2, x21
  409efc:	mov	x3, x19
  409f00:	bl	4028e0 <error@plt>
  409f04:	ldp	x20, x19, [sp, #32]
  409f08:	ldr	x21, [sp, #16]
  409f0c:	ldp	x29, x30, [sp], #48
  409f10:	ret
  409f14:	stp	x29, x30, [sp, #-96]!
  409f18:	stp	x20, x19, [sp, #80]
  409f1c:	mov	x20, x1
  409f20:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  409f24:	stp	x22, x21, [sp, #64]
  409f28:	mov	x19, x2
  409f2c:	mov	x21, x0
  409f30:	add	x1, x1, #0x6c5
  409f34:	mov	w2, #0x5                   	// #5
  409f38:	mov	x0, xzr
  409f3c:	stp	x28, x27, [sp, #16]
  409f40:	stp	x26, x25, [sp, #32]
  409f44:	stp	x24, x23, [sp, #48]
  409f48:	mov	x29, sp
  409f4c:	bl	402ea0 <dcgettext@plt>
  409f50:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x149a4>
  409f54:	ldr	x1, [x26, #1344]
  409f58:	bl	402eb0 <fputs_unlocked@plt>
  409f5c:	ldr	x24, [x21]
  409f60:	cbz	x24, 409ff4 <ferror@plt+0x7034>
  409f64:	add	x27, x21, #0x8
  409f68:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x29a4>
  409f6c:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x29a4>
  409f70:	mov	x23, xzr
  409f74:	mov	x28, xzr
  409f78:	add	x21, x21, #0x6da
  409f7c:	add	x22, x22, #0x6e2
  409f80:	b	409fb8 <ferror@plt+0x6ff8>
  409f84:	ldr	x23, [x26, #1344]
  409f88:	mov	x0, x24
  409f8c:	bl	40e4cc <ferror@plt+0xb50c>
  409f90:	mov	x3, x0
  409f94:	mov	w1, #0x1                   	// #1
  409f98:	mov	x0, x23
  409f9c:	mov	x2, x21
  409fa0:	bl	402ca0 <__fprintf_chk@plt>
  409fa4:	mov	x23, x20
  409fa8:	ldr	x24, [x27, x28, lsl #3]
  409fac:	add	x28, x28, #0x1
  409fb0:	add	x20, x20, x19
  409fb4:	cbz	x24, 409ff4 <ferror@plt+0x7034>
  409fb8:	cbz	x28, 409f84 <ferror@plt+0x6fc4>
  409fbc:	mov	x0, x23
  409fc0:	mov	x1, x20
  409fc4:	mov	x2, x19
  409fc8:	bl	402b50 <bcmp@plt>
  409fcc:	cbnz	w0, 409f84 <ferror@plt+0x6fc4>
  409fd0:	ldr	x25, [x26, #1344]
  409fd4:	mov	x0, x24
  409fd8:	bl	40e4cc <ferror@plt+0xb50c>
  409fdc:	mov	x3, x0
  409fe0:	mov	w1, #0x1                   	// #1
  409fe4:	mov	x0, x25
  409fe8:	mov	x2, x22
  409fec:	bl	402ca0 <__fprintf_chk@plt>
  409ff0:	b	409fa8 <ferror@plt+0x6fe8>
  409ff4:	ldr	x1, [x26, #1344]
  409ff8:	mov	w0, #0xa                   	// #10
  409ffc:	bl	4029e0 <putc_unlocked@plt>
  40a000:	ldp	x20, x19, [sp, #80]
  40a004:	ldp	x22, x21, [sp, #64]
  40a008:	ldp	x24, x23, [sp, #48]
  40a00c:	ldp	x26, x25, [sp, #32]
  40a010:	ldp	x28, x27, [sp, #16]
  40a014:	ldp	x29, x30, [sp], #96
  40a018:	ret
  40a01c:	stp	x29, x30, [sp, #-64]!
  40a020:	stp	x24, x23, [sp, #16]
  40a024:	stp	x22, x21, [sp, #32]
  40a028:	mov	x21, x3
  40a02c:	mov	x22, x2
  40a030:	mov	x23, x1
  40a034:	mov	x24, x0
  40a038:	mov	x0, x1
  40a03c:	mov	x1, x2
  40a040:	mov	x2, x3
  40a044:	mov	x3, x4
  40a048:	stp	x20, x19, [sp, #48]
  40a04c:	mov	x29, sp
  40a050:	mov	x19, x5
  40a054:	mov	x20, x4
  40a058:	bl	409da4 <ferror@plt+0x6de4>
  40a05c:	mov	x2, x0
  40a060:	tbz	x0, #63, 40a088 <ferror@plt+0x70c8>
  40a064:	mov	x0, x24
  40a068:	mov	x1, x23
  40a06c:	bl	409e8c <ferror@plt+0x6ecc>
  40a070:	mov	x0, x22
  40a074:	mov	x1, x21
  40a078:	mov	x2, x20
  40a07c:	bl	409f14 <ferror@plt+0x6f54>
  40a080:	blr	x19
  40a084:	mov	x2, #0xffffffffffffffff    	// #-1
  40a088:	ldp	x20, x19, [sp, #48]
  40a08c:	ldp	x22, x21, [sp, #32]
  40a090:	ldp	x24, x23, [sp, #16]
  40a094:	mov	x0, x2
  40a098:	ldp	x29, x30, [sp], #64
  40a09c:	ret
  40a0a0:	stp	x29, x30, [sp, #-64]!
  40a0a4:	stp	x22, x21, [sp, #32]
  40a0a8:	stp	x20, x19, [sp, #48]
  40a0ac:	ldr	x20, [x1]
  40a0b0:	str	x23, [sp, #16]
  40a0b4:	mov	x29, sp
  40a0b8:	cbz	x20, 40a108 <ferror@plt+0x7148>
  40a0bc:	mov	x22, x2
  40a0c0:	mov	x23, x1
  40a0c4:	mov	x1, x2
  40a0c8:	mov	x2, x3
  40a0cc:	mov	x19, x3
  40a0d0:	mov	x21, x0
  40a0d4:	bl	402b50 <bcmp@plt>
  40a0d8:	cbz	w0, 40a108 <ferror@plt+0x7148>
  40a0dc:	add	x22, x22, x19
  40a0e0:	add	x23, x23, #0x8
  40a0e4:	ldr	x20, [x23]
  40a0e8:	cbz	x20, 40a108 <ferror@plt+0x7148>
  40a0ec:	mov	x0, x21
  40a0f0:	mov	x1, x22
  40a0f4:	mov	x2, x19
  40a0f8:	bl	402b50 <bcmp@plt>
  40a0fc:	add	x22, x22, x19
  40a100:	add	x23, x23, #0x8
  40a104:	cbnz	w0, 40a0e4 <ferror@plt+0x7124>
  40a108:	mov	x0, x20
  40a10c:	ldp	x20, x19, [sp, #48]
  40a110:	ldp	x22, x21, [sp, #32]
  40a114:	ldr	x23, [sp, #16]
  40a118:	ldp	x29, x30, [sp], #64
  40a11c:	ret
  40a120:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a124:	str	x0, [x8, #3008]
  40a128:	ret
  40a12c:	and	w8, w0, #0x1
  40a130:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a134:	strb	w8, [x9, #3016]
  40a138:	ret
  40a13c:	stp	x29, x30, [sp, #-48]!
  40a140:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a144:	ldr	x0, [x8, #1368]
  40a148:	str	x21, [sp, #16]
  40a14c:	stp	x20, x19, [sp, #32]
  40a150:	mov	x29, sp
  40a154:	bl	41194c <_obstack_memory_used@@Base+0x2f0>
  40a158:	cbz	w0, 40a178 <ferror@plt+0x71b8>
  40a15c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a160:	ldrb	w8, [x8, #3016]
  40a164:	cbz	w8, 40a198 <ferror@plt+0x71d8>
  40a168:	bl	402f30 <__errno_location@plt>
  40a16c:	ldr	w8, [x0]
  40a170:	cmp	w8, #0x20
  40a174:	b.ne	40a198 <ferror@plt+0x71d8>  // b.any
  40a178:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a17c:	ldr	x0, [x8, #1344]
  40a180:	bl	41194c <_obstack_memory_used@@Base+0x2f0>
  40a184:	cbnz	w0, 40a204 <ferror@plt+0x7244>
  40a188:	ldp	x20, x19, [sp, #32]
  40a18c:	ldr	x21, [sp, #16]
  40a190:	ldp	x29, x30, [sp], #48
  40a194:	ret
  40a198:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40a19c:	add	x1, x1, #0x6e7
  40a1a0:	mov	w2, #0x5                   	// #5
  40a1a4:	mov	x0, xzr
  40a1a8:	bl	402ea0 <dcgettext@plt>
  40a1ac:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a1b0:	ldr	x21, [x8, #3008]
  40a1b4:	mov	x19, x0
  40a1b8:	bl	402f30 <__errno_location@plt>
  40a1bc:	ldr	w20, [x0]
  40a1c0:	cbnz	x21, 40a1e0 <ferror@plt+0x7220>
  40a1c4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40a1c8:	add	x2, x2, #0x6e4
  40a1cc:	mov	w0, wzr
  40a1d0:	mov	w1, w20
  40a1d4:	mov	x3, x19
  40a1d8:	bl	4028e0 <error@plt>
  40a1dc:	b	40a204 <ferror@plt+0x7244>
  40a1e0:	mov	x0, x21
  40a1e4:	bl	40e31c <ferror@plt+0xb35c>
  40a1e8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40a1ec:	mov	x3, x0
  40a1f0:	add	x2, x2, #0x671
  40a1f4:	mov	w0, wzr
  40a1f8:	mov	w1, w20
  40a1fc:	mov	x4, x19
  40a200:	bl	4028e0 <error@plt>
  40a204:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40a208:	ldr	w0, [x8, #1232]
  40a20c:	bl	402880 <_exit@plt>
  40a210:	mov	x8, #0x2301                	// #8961
  40a214:	mov	x9, #0xdcfe                	// #56574
  40a218:	movk	x8, #0x6745, lsl #16
  40a21c:	movk	x9, #0x98ba, lsl #16
  40a220:	movk	x8, #0xab89, lsl #32
  40a224:	movk	x9, #0x5476, lsl #32
  40a228:	movk	x8, #0xefcd, lsl #48
  40a22c:	movk	x9, #0x1032, lsl #48
  40a230:	stp	x9, xzr, [x0, #8]
  40a234:	str	x8, [x0]
  40a238:	str	wzr, [x0, #24]
  40a23c:	ret
  40a240:	stp	x29, x30, [sp, #-32]!
  40a244:	stp	x20, x19, [sp, #16]
  40a248:	ldr	w8, [x0]
  40a24c:	mov	x19, x0
  40a250:	mov	x20, x1
  40a254:	mov	x0, x1
  40a258:	mov	w1, w8
  40a25c:	mov	x29, sp
  40a260:	bl	40a298 <ferror@plt+0x72d8>
  40a264:	ldr	w1, [x19, #4]
  40a268:	add	x0, x20, #0x4
  40a26c:	bl	40a298 <ferror@plt+0x72d8>
  40a270:	ldr	w1, [x19, #8]
  40a274:	add	x0, x20, #0x8
  40a278:	bl	40a298 <ferror@plt+0x72d8>
  40a27c:	ldr	w1, [x19, #12]
  40a280:	add	x0, x20, #0xc
  40a284:	bl	40a298 <ferror@plt+0x72d8>
  40a288:	mov	x0, x20
  40a28c:	ldp	x20, x19, [sp, #16]
  40a290:	ldp	x29, x30, [sp], #32
  40a294:	ret
  40a298:	str	w1, [x0]
  40a29c:	ret
  40a2a0:	stp	x29, x30, [sp, #-48]!
  40a2a4:	stp	x22, x21, [sp, #16]
  40a2a8:	stp	x20, x19, [sp, #32]
  40a2ac:	ldr	w8, [x0, #24]
  40a2b0:	ldr	w11, [x0, #16]
  40a2b4:	mov	w9, #0x20                  	// #32
  40a2b8:	mov	w10, #0x10                  	// #16
  40a2bc:	cmp	w8, #0x38
  40a2c0:	mov	x19, x1
  40a2c4:	mov	x20, x0
  40a2c8:	csel	x10, x10, x9, cc  // cc = lo, ul, last
  40a2cc:	adds	w9, w11, w8
  40a2d0:	mov	x29, sp
  40a2d4:	str	w9, [x0, #16]
  40a2d8:	b.cc	40a2e8 <ferror@plt+0x7328>  // b.lo, b.ul, b.last
  40a2dc:	ldr	w11, [x20, #20]
  40a2e0:	add	w11, w11, #0x1
  40a2e4:	str	w11, [x20, #20]
  40a2e8:	lsl	x22, x10, #2
  40a2ec:	lsl	w11, w9, #3
  40a2f0:	add	x21, x20, #0x1c
  40a2f4:	sub	x10, x22, #0x8
  40a2f8:	str	w11, [x21, x10]
  40a2fc:	ldr	w11, [x20, #20]
  40a300:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40a304:	add	x12, x22, x21
  40a308:	add	x0, x21, x8
  40a30c:	extr	w9, w11, w9, #29
  40a310:	sub	x2, x10, x8
  40a314:	add	x1, x1, #0x6f3
  40a318:	stur	w9, [x12, #-4]
  40a31c:	bl	402850 <memcpy@plt>
  40a320:	mov	x0, x21
  40a324:	mov	x1, x22
  40a328:	mov	x2, x20
  40a32c:	bl	40a34c <ferror@plt+0x738c>
  40a330:	mov	x0, x20
  40a334:	mov	x1, x19
  40a338:	bl	40a240 <ferror@plt+0x7280>
  40a33c:	ldp	x20, x19, [sp, #32]
  40a340:	ldp	x22, x21, [sp, #16]
  40a344:	ldp	x29, x30, [sp], #48
  40a348:	ret
  40a34c:	stp	x29, x30, [sp, #-96]!
  40a350:	stp	x28, x27, [sp, #16]
  40a354:	stp	x26, x25, [sp, #32]
  40a358:	stp	x24, x23, [sp, #48]
  40a35c:	stp	x22, x21, [sp, #64]
  40a360:	stp	x20, x19, [sp, #80]
  40a364:	ldp	w10, w13, [x2, #16]
  40a368:	ldp	w8, w9, [x2]
  40a36c:	and	x12, x1, #0xfffffffffffffffc
  40a370:	lsr	x14, x1, #32
  40a374:	adds	w10, w10, w1
  40a378:	str	w10, [x2, #16]
  40a37c:	ldp	w11, w10, [x2, #8]
  40a380:	add	x12, x0, x12
  40a384:	cinc	w14, w14, cs  // cs = hs, nlast
  40a388:	add	w13, w13, w14
  40a38c:	cmp	x12, x0
  40a390:	str	w13, [x2, #20]
  40a394:	b.ls	40ad4c <ferror@plt+0x7d8c>  // b.plast
  40a398:	mov	w22, #0xd391                	// #54161
  40a39c:	movk	w22, #0xeb86, lsl #16
  40a3a0:	ldp	w29, w25, [x0]
  40a3a4:	bic	w4, w10, w9
  40a3a8:	and	w5, w11, w9
  40a3ac:	orr	w4, w5, w4
  40a3b0:	add	w4, w8, w4
  40a3b4:	mov	w19, #0xa478                	// #42104
  40a3b8:	add	w4, w4, w29
  40a3bc:	movk	w19, #0xd76a, lsl #16
  40a3c0:	add	w4, w4, w19
  40a3c4:	ror	w4, w4, #25
  40a3c8:	add	w4, w4, w9
  40a3cc:	bic	w19, w11, w4
  40a3d0:	and	w20, w9, w4
  40a3d4:	add	w5, w10, w25
  40a3d8:	orr	w19, w20, w19
  40a3dc:	add	w5, w5, w19
  40a3e0:	mov	w19, #0xb756                	// #46934
  40a3e4:	movk	w19, #0xe8c7, lsl #16
  40a3e8:	ldp	w23, w28, [x0, #8]
  40a3ec:	add	w5, w5, w19
  40a3f0:	ror	w5, w5, #20
  40a3f4:	add	w5, w5, w4
  40a3f8:	bic	w19, w9, w5
  40a3fc:	and	w20, w4, w5
  40a400:	add	w6, w11, w23
  40a404:	orr	w19, w20, w19
  40a408:	add	w6, w6, w19
  40a40c:	mov	w19, #0x70db                	// #28891
  40a410:	ldp	w24, w14, [x0, #16]
  40a414:	movk	w19, #0x2420, lsl #16
  40a418:	add	w6, w6, w19
  40a41c:	ror	w6, w6, #15
  40a420:	add	w6, w6, w5
  40a424:	add	w20, w24, w4
  40a428:	bic	w4, w4, w6
  40a42c:	and	w19, w5, w6
  40a430:	add	w7, w9, w28
  40a434:	orr	w4, w19, w4
  40a438:	add	w4, w7, w4
  40a43c:	mov	w7, #0xceee                	// #52974
  40a440:	movk	w7, #0xc1bd, lsl #16
  40a444:	add	w4, w4, w7
  40a448:	ror	w4, w4, #10
  40a44c:	add	w4, w4, w6
  40a450:	add	w19, w14, w5
  40a454:	bic	w5, w5, w4
  40a458:	and	w7, w6, w4
  40a45c:	orr	w5, w7, w5
  40a460:	add	w5, w20, w5
  40a464:	mov	w20, #0xfaf                 	// #4015
  40a468:	ldp	w27, w17, [x0, #24]
  40a46c:	movk	w20, #0xf57c, lsl #16
  40a470:	add	w5, w5, w20
  40a474:	ror	w5, w5, #25
  40a478:	add	w5, w5, w4
  40a47c:	add	w7, w27, w6
  40a480:	bic	w6, w6, w5
  40a484:	and	w20, w4, w5
  40a488:	orr	w6, w20, w6
  40a48c:	add	w6, w19, w6
  40a490:	mov	w19, #0xc62a                	// #50730
  40a494:	movk	w19, #0x4787, lsl #16
  40a498:	add	w6, w6, w19
  40a49c:	ror	w6, w6, #20
  40a4a0:	add	w6, w6, w5
  40a4a4:	add	w20, w17, w4
  40a4a8:	bic	w4, w4, w6
  40a4ac:	and	w19, w5, w6
  40a4b0:	orr	w4, w19, w4
  40a4b4:	add	w4, w7, w4
  40a4b8:	mov	w7, #0x4613                	// #17939
  40a4bc:	ldp	w13, w26, [x0, #32]
  40a4c0:	movk	w7, #0xa830, lsl #16
  40a4c4:	add	w4, w4, w7
  40a4c8:	ror	w4, w4, #15
  40a4cc:	add	w4, w4, w6
  40a4d0:	add	w19, w13, w5
  40a4d4:	bic	w5, w5, w4
  40a4d8:	and	w7, w6, w4
  40a4dc:	orr	w5, w7, w5
  40a4e0:	add	w5, w20, w5
  40a4e4:	mov	w20, #0x9501                	// #38145
  40a4e8:	movk	w20, #0xfd46, lsl #16
  40a4ec:	add	w5, w5, w20
  40a4f0:	ror	w5, w5, #10
  40a4f4:	add	w5, w5, w4
  40a4f8:	add	w7, w26, w6
  40a4fc:	bic	w6, w6, w5
  40a500:	and	w20, w4, w5
  40a504:	orr	w6, w20, w6
  40a508:	add	w6, w19, w6
  40a50c:	mov	w19, #0x98d8                	// #39128
  40a510:	ldp	w16, w30, [x0, #40]
  40a514:	movk	w19, #0x6980, lsl #16
  40a518:	add	w6, w6, w19
  40a51c:	ror	w6, w6, #25
  40a520:	add	w6, w6, w5
  40a524:	add	w20, w16, w4
  40a528:	bic	w4, w4, w6
  40a52c:	and	w19, w5, w6
  40a530:	orr	w4, w19, w4
  40a534:	add	w4, w7, w4
  40a538:	mov	w7, #0xf7af                	// #63407
  40a53c:	movk	w7, #0x8b44, lsl #16
  40a540:	add	w4, w4, w7
  40a544:	ror	w4, w4, #20
  40a548:	add	w4, w4, w6
  40a54c:	add	w19, w30, w5
  40a550:	bic	w5, w5, w4
  40a554:	and	w7, w6, w4
  40a558:	orr	w5, w7, w5
  40a55c:	ldp	w1, w15, [x0, #48]
  40a560:	add	w5, w20, w5
  40a564:	mov	w20, #0xffff5bb1            	// #-42063
  40a568:	add	w5, w5, w20
  40a56c:	ror	w5, w5, #15
  40a570:	add	w5, w5, w4
  40a574:	add	w7, w1, w6
  40a578:	bic	w6, w6, w5
  40a57c:	and	w20, w4, w5
  40a580:	orr	w6, w20, w6
  40a584:	add	w6, w19, w6
  40a588:	mov	w19, #0xd7be                	// #55230
  40a58c:	movk	w19, #0x895c, lsl #16
  40a590:	add	w6, w6, w19
  40a594:	ror	w6, w6, #10
  40a598:	add	w6, w6, w5
  40a59c:	add	w20, w15, w4
  40a5a0:	bic	w4, w4, w6
  40a5a4:	and	w19, w5, w6
  40a5a8:	orr	w4, w19, w4
  40a5ac:	add	w4, w7, w4
  40a5b0:	mov	w7, #0x1122                	// #4386
  40a5b4:	ldp	w3, w18, [x0, #56]
  40a5b8:	movk	w7, #0x6b90, lsl #16
  40a5bc:	add	w4, w4, w7
  40a5c0:	ror	w4, w4, #25
  40a5c4:	add	w4, w4, w6
  40a5c8:	add	w19, w3, w5
  40a5cc:	bic	w5, w5, w4
  40a5d0:	and	w7, w6, w4
  40a5d4:	orr	w5, w7, w5
  40a5d8:	add	w5, w20, w5
  40a5dc:	mov	w20, #0x7193                	// #29075
  40a5e0:	movk	w20, #0xfd98, lsl #16
  40a5e4:	add	w5, w5, w20
  40a5e8:	ror	w5, w5, #20
  40a5ec:	add	w5, w5, w4
  40a5f0:	add	w7, w18, w6
  40a5f4:	bic	w6, w6, w5
  40a5f8:	and	w20, w4, w5
  40a5fc:	orr	w6, w20, w6
  40a600:	add	w6, w19, w6
  40a604:	mov	w19, #0x438e                	// #17294
  40a608:	movk	w19, #0xa679, lsl #16
  40a60c:	add	w6, w6, w19
  40a610:	ror	w6, w6, #15
  40a614:	add	w6, w6, w5
  40a618:	add	w20, w25, w4
  40a61c:	bic	w4, w4, w6
  40a620:	and	w19, w5, w6
  40a624:	orr	w4, w19, w4
  40a628:	mov	w21, #0x821                 	// #2081
  40a62c:	add	w4, w7, w4
  40a630:	movk	w21, #0x49b4, lsl #16
  40a634:	add	w4, w4, w21
  40a638:	ror	w4, w4, #10
  40a63c:	add	w4, w4, w6
  40a640:	add	w19, w27, w5
  40a644:	bic	w7, w6, w5
  40a648:	and	w5, w4, w5
  40a64c:	orr	w5, w5, w7
  40a650:	mov	w21, #0x2562                	// #9570
  40a654:	add	w5, w20, w5
  40a658:	movk	w21, #0xf61e, lsl #16
  40a65c:	add	w5, w5, w21
  40a660:	ror	w5, w5, #27
  40a664:	add	w5, w5, w4
  40a668:	add	w7, w30, w6
  40a66c:	bic	w20, w4, w6
  40a670:	and	w6, w5, w6
  40a674:	orr	w6, w6, w20
  40a678:	mov	w21, #0xb340                	// #45888
  40a67c:	add	w6, w19, w6
  40a680:	movk	w21, #0xc040, lsl #16
  40a684:	add	w6, w6, w21
  40a688:	ror	w6, w6, #23
  40a68c:	add	w6, w6, w5
  40a690:	add	w20, w29, w4
  40a694:	bic	w19, w5, w4
  40a698:	and	w4, w6, w4
  40a69c:	orr	w4, w4, w19
  40a6a0:	mov	w21, #0x5a51                	// #23121
  40a6a4:	add	w4, w7, w4
  40a6a8:	movk	w21, #0x265e, lsl #16
  40a6ac:	add	w4, w4, w21
  40a6b0:	ror	w4, w4, #18
  40a6b4:	add	w4, w4, w6
  40a6b8:	add	w19, w14, w5
  40a6bc:	bic	w7, w6, w5
  40a6c0:	and	w5, w4, w5
  40a6c4:	orr	w5, w5, w7
  40a6c8:	mov	w21, #0xc7aa                	// #51114
  40a6cc:	add	w5, w20, w5
  40a6d0:	movk	w21, #0xe9b6, lsl #16
  40a6d4:	add	w5, w5, w21
  40a6d8:	ror	w5, w5, #12
  40a6dc:	add	w5, w5, w4
  40a6e0:	add	w7, w16, w6
  40a6e4:	bic	w20, w4, w6
  40a6e8:	and	w6, w5, w6
  40a6ec:	orr	w6, w6, w20
  40a6f0:	mov	w21, #0x105d                	// #4189
  40a6f4:	add	w6, w19, w6
  40a6f8:	movk	w21, #0xd62f, lsl #16
  40a6fc:	add	w6, w6, w21
  40a700:	ror	w6, w6, #27
  40a704:	add	w6, w6, w5
  40a708:	add	w20, w18, w4
  40a70c:	bic	w19, w5, w4
  40a710:	and	w4, w6, w4
  40a714:	orr	w4, w4, w19
  40a718:	mov	w21, #0x1453                	// #5203
  40a71c:	add	w4, w7, w4
  40a720:	movk	w21, #0x244, lsl #16
  40a724:	add	w4, w4, w21
  40a728:	ror	w4, w4, #23
  40a72c:	add	w4, w4, w6
  40a730:	add	w19, w24, w5
  40a734:	bic	w7, w6, w5
  40a738:	and	w5, w4, w5
  40a73c:	orr	w5, w5, w7
  40a740:	mov	w21, #0xe681                	// #59009
  40a744:	add	w5, w20, w5
  40a748:	movk	w21, #0xd8a1, lsl #16
  40a74c:	add	w5, w5, w21
  40a750:	ror	w5, w5, #18
  40a754:	add	w5, w5, w4
  40a758:	add	w7, w26, w6
  40a75c:	bic	w20, w4, w6
  40a760:	and	w6, w5, w6
  40a764:	orr	w6, w6, w20
  40a768:	mov	w21, #0xfbc8                	// #64456
  40a76c:	add	w6, w19, w6
  40a770:	movk	w21, #0xe7d3, lsl #16
  40a774:	add	w6, w6, w21
  40a778:	ror	w6, w6, #12
  40a77c:	add	w6, w6, w5
  40a780:	add	w20, w3, w4
  40a784:	bic	w19, w5, w4
  40a788:	and	w4, w6, w4
  40a78c:	orr	w4, w4, w19
  40a790:	mov	w21, #0xcde6                	// #52710
  40a794:	add	w4, w7, w4
  40a798:	movk	w21, #0x21e1, lsl #16
  40a79c:	add	w4, w4, w21
  40a7a0:	ror	w4, w4, #27
  40a7a4:	add	w4, w4, w6
  40a7a8:	add	w19, w28, w5
  40a7ac:	bic	w7, w6, w5
  40a7b0:	and	w5, w4, w5
  40a7b4:	orr	w5, w5, w7
  40a7b8:	mov	w21, #0x7d6                 	// #2006
  40a7bc:	add	w5, w20, w5
  40a7c0:	movk	w21, #0xc337, lsl #16
  40a7c4:	add	w5, w5, w21
  40a7c8:	ror	w5, w5, #23
  40a7cc:	add	w5, w5, w4
  40a7d0:	add	w7, w13, w6
  40a7d4:	bic	w20, w4, w6
  40a7d8:	and	w6, w5, w6
  40a7dc:	orr	w6, w6, w20
  40a7e0:	mov	w21, #0xd87                 	// #3463
  40a7e4:	add	w6, w19, w6
  40a7e8:	movk	w21, #0xf4d5, lsl #16
  40a7ec:	add	w6, w6, w21
  40a7f0:	ror	w6, w6, #18
  40a7f4:	add	w6, w6, w5
  40a7f8:	add	w20, w15, w4
  40a7fc:	bic	w19, w5, w4
  40a800:	and	w4, w6, w4
  40a804:	orr	w4, w4, w19
  40a808:	mov	w21, #0x14ed                	// #5357
  40a80c:	add	w4, w7, w4
  40a810:	movk	w21, #0x455a, lsl #16
  40a814:	add	w4, w4, w21
  40a818:	ror	w4, w4, #12
  40a81c:	add	w4, w4, w6
  40a820:	add	w19, w23, w5
  40a824:	bic	w7, w6, w5
  40a828:	and	w5, w4, w5
  40a82c:	orr	w5, w5, w7
  40a830:	mov	w21, #0xe905                	// #59653
  40a834:	add	w5, w20, w5
  40a838:	movk	w21, #0xa9e3, lsl #16
  40a83c:	add	w5, w5, w21
  40a840:	ror	w5, w5, #27
  40a844:	add	w5, w5, w4
  40a848:	add	w7, w17, w6
  40a84c:	bic	w20, w4, w6
  40a850:	and	w6, w5, w6
  40a854:	orr	w6, w6, w20
  40a858:	mov	w21, #0xa3f8                	// #41976
  40a85c:	add	w6, w19, w6
  40a860:	movk	w21, #0xfcef, lsl #16
  40a864:	add	w6, w6, w21
  40a868:	ror	w6, w6, #23
  40a86c:	add	w6, w6, w5
  40a870:	add	w20, w1, w4
  40a874:	bic	w19, w5, w4
  40a878:	and	w4, w6, w4
  40a87c:	orr	w4, w4, w19
  40a880:	add	w4, w7, w4
  40a884:	mov	w7, #0x2d9                 	// #729
  40a888:	movk	w7, #0x676f, lsl #16
  40a88c:	add	w4, w4, w7
  40a890:	ror	w4, w4, #18
  40a894:	add	w4, w4, w6
  40a898:	eor	w7, w4, w6
  40a89c:	and	w19, w7, w5
  40a8a0:	eor	w19, w19, w6
  40a8a4:	add	w19, w20, w19
  40a8a8:	mov	w20, #0x4c8a                	// #19594
  40a8ac:	movk	w20, #0x8d2a, lsl #16
  40a8b0:	add	w19, w19, w20
  40a8b4:	ror	w19, w19, #12
  40a8b8:	add	w19, w19, w4
  40a8bc:	add	w5, w14, w5
  40a8c0:	eor	w7, w7, w19
  40a8c4:	mov	w20, #0x3942                	// #14658
  40a8c8:	add	w5, w5, w7
  40a8cc:	movk	w20, #0xfffa, lsl #16
  40a8d0:	add	w5, w5, w20
  40a8d4:	ror	w5, w5, #28
  40a8d8:	add	w7, w30, w4
  40a8dc:	eor	w4, w19, w4
  40a8e0:	add	w5, w5, w19
  40a8e4:	add	w6, w13, w6
  40a8e8:	eor	w4, w4, w5
  40a8ec:	mov	w20, #0xf681                	// #63105
  40a8f0:	add	w4, w6, w4
  40a8f4:	movk	w20, #0x8771, lsl #16
  40a8f8:	add	w4, w4, w20
  40a8fc:	ror	w4, w4, #21
  40a900:	add	w6, w3, w19
  40a904:	eor	w19, w5, w19
  40a908:	add	w4, w4, w5
  40a90c:	eor	w19, w19, w4
  40a910:	mov	w20, #0x6122                	// #24866
  40a914:	add	w7, w7, w19
  40a918:	movk	w20, #0x6d9d, lsl #16
  40a91c:	add	w7, w7, w20
  40a920:	ror	w7, w7, #16
  40a924:	add	w19, w25, w5
  40a928:	eor	w5, w4, w5
  40a92c:	add	w7, w7, w4
  40a930:	eor	w5, w5, w7
  40a934:	mov	w20, #0x380c                	// #14348
  40a938:	add	w5, w6, w5
  40a93c:	movk	w20, #0xfde5, lsl #16
  40a940:	add	w5, w5, w20
  40a944:	ror	w5, w5, #9
  40a948:	add	w6, w24, w4
  40a94c:	eor	w4, w7, w4
  40a950:	add	w5, w5, w7
  40a954:	eor	w4, w4, w5
  40a958:	mov	w20, #0xea44                	// #59972
  40a95c:	add	w4, w19, w4
  40a960:	movk	w20, #0xa4be, lsl #16
  40a964:	add	w4, w4, w20
  40a968:	ror	w4, w4, #28
  40a96c:	add	w19, w17, w7
  40a970:	eor	w7, w5, w7
  40a974:	add	w4, w4, w5
  40a978:	eor	w7, w7, w4
  40a97c:	mov	w20, #0xcfa9                	// #53161
  40a980:	add	w6, w6, w7
  40a984:	movk	w20, #0x4bde, lsl #16
  40a988:	add	w6, w6, w20
  40a98c:	ror	w6, w6, #21
  40a990:	add	w7, w16, w5
  40a994:	eor	w5, w4, w5
  40a998:	add	w6, w6, w4
  40a99c:	eor	w5, w5, w6
  40a9a0:	mov	w20, #0x4b60                	// #19296
  40a9a4:	add	w5, w19, w5
  40a9a8:	movk	w20, #0xf6bb, lsl #16
  40a9ac:	add	w5, w5, w20
  40a9b0:	ror	w5, w5, #16
  40a9b4:	add	w19, w15, w4
  40a9b8:	eor	w4, w6, w4
  40a9bc:	add	w5, w5, w6
  40a9c0:	eor	w4, w4, w5
  40a9c4:	mov	w20, #0xbc70                	// #48240
  40a9c8:	add	w4, w7, w4
  40a9cc:	movk	w20, #0xbebf, lsl #16
  40a9d0:	add	w4, w4, w20
  40a9d4:	ror	w4, w4, #9
  40a9d8:	add	w7, w29, w6
  40a9dc:	eor	w6, w5, w6
  40a9e0:	add	w4, w4, w5
  40a9e4:	eor	w6, w6, w4
  40a9e8:	mov	w20, #0x7ec6                	// #32454
  40a9ec:	add	w6, w19, w6
  40a9f0:	movk	w20, #0x289b, lsl #16
  40a9f4:	add	w6, w6, w20
  40a9f8:	ror	w6, w6, #28
  40a9fc:	add	w19, w28, w5
  40aa00:	eor	w5, w4, w5
  40aa04:	add	w6, w6, w4
  40aa08:	eor	w5, w5, w6
  40aa0c:	mov	w20, #0x27fa                	// #10234
  40aa10:	add	w5, w7, w5
  40aa14:	movk	w20, #0xeaa1, lsl #16
  40aa18:	add	w5, w5, w20
  40aa1c:	ror	w5, w5, #21
  40aa20:	add	w7, w27, w4
  40aa24:	eor	w4, w6, w4
  40aa28:	add	w5, w5, w6
  40aa2c:	eor	w4, w4, w5
  40aa30:	mov	w20, #0x3085                	// #12421
  40aa34:	add	w4, w19, w4
  40aa38:	movk	w20, #0xd4ef, lsl #16
  40aa3c:	add	w4, w4, w20
  40aa40:	ror	w4, w4, #16
  40aa44:	add	w19, w26, w6
  40aa48:	eor	w6, w5, w6
  40aa4c:	add	w4, w4, w5
  40aa50:	eor	w6, w6, w4
  40aa54:	mov	w20, #0x1d05                	// #7429
  40aa58:	add	w6, w7, w6
  40aa5c:	movk	w20, #0x488, lsl #16
  40aa60:	add	w6, w6, w20
  40aa64:	ror	w6, w6, #9
  40aa68:	add	w7, w1, w5
  40aa6c:	eor	w5, w4, w5
  40aa70:	add	w6, w6, w4
  40aa74:	eor	w5, w5, w6
  40aa78:	mov	w20, #0xd039                	// #53305
  40aa7c:	add	w5, w19, w5
  40aa80:	movk	w20, #0xd9d4, lsl #16
  40aa84:	add	w5, w5, w20
  40aa88:	ror	w5, w5, #28
  40aa8c:	add	w19, w18, w4
  40aa90:	eor	w4, w6, w4
  40aa94:	add	w5, w5, w6
  40aa98:	eor	w4, w4, w5
  40aa9c:	mov	w20, #0x99e5                	// #39397
  40aaa0:	add	w4, w7, w4
  40aaa4:	movk	w20, #0xe6db, lsl #16
  40aaa8:	add	w4, w4, w20
  40aaac:	ror	w4, w4, #21
  40aab0:	eor	w7, w5, w6
  40aab4:	add	w4, w4, w5
  40aab8:	eor	w7, w7, w4
  40aabc:	mov	w20, #0x7cf8                	// #31992
  40aac0:	add	w7, w19, w7
  40aac4:	movk	w20, #0x1fa2, lsl #16
  40aac8:	add	w7, w7, w20
  40aacc:	ror	w7, w7, #16
  40aad0:	add	w19, w29, w5
  40aad4:	eor	w5, w4, w5
  40aad8:	add	w7, w7, w4
  40aadc:	add	w6, w23, w6
  40aae0:	eor	w5, w5, w7
  40aae4:	add	w5, w6, w5
  40aae8:	mov	w6, #0x5665                	// #22117
  40aaec:	movk	w6, #0xc4ac, lsl #16
  40aaf0:	add	w5, w5, w6
  40aaf4:	ror	w5, w5, #9
  40aaf8:	add	w5, w5, w7
  40aafc:	add	w17, w17, w4
  40ab00:	orn	w4, w5, w4
  40ab04:	eor	w4, w4, w7
  40ab08:	mov	w6, #0x2244                	// #8772
  40ab0c:	add	w4, w19, w4
  40ab10:	movk	w6, #0xf429, lsl #16
  40ab14:	add	w4, w4, w6
  40ab18:	ror	w4, w4, #26
  40ab1c:	add	w4, w4, w5
  40ab20:	orn	w6, w4, w7
  40ab24:	eor	w6, w6, w5
  40ab28:	add	w17, w17, w6
  40ab2c:	mov	w6, #0xff97                	// #65431
  40ab30:	movk	w6, #0x432a, lsl #16
  40ab34:	add	w17, w17, w6
  40ab38:	ror	w17, w17, #22
  40ab3c:	add	w17, w17, w4
  40ab40:	add	w14, w14, w5
  40ab44:	orn	w5, w17, w5
  40ab48:	add	w3, w3, w7
  40ab4c:	eor	w5, w5, w4
  40ab50:	add	w3, w3, w5
  40ab54:	mov	w5, #0x23a7                	// #9127
  40ab58:	movk	w5, #0xab94, lsl #16
  40ab5c:	add	w3, w3, w5
  40ab60:	ror	w3, w3, #17
  40ab64:	add	w3, w3, w17
  40ab68:	add	w1, w1, w4
  40ab6c:	orn	w4, w3, w4
  40ab70:	eor	w4, w4, w17
  40ab74:	mov	w5, #0xa039                	// #41017
  40ab78:	add	w14, w14, w4
  40ab7c:	movk	w5, #0xfc93, lsl #16
  40ab80:	add	w14, w14, w5
  40ab84:	ror	w14, w14, #11
  40ab88:	add	w14, w14, w3
  40ab8c:	add	w4, w28, w17
  40ab90:	orn	w17, w14, w17
  40ab94:	eor	w17, w17, w3
  40ab98:	add	w17, w1, w17
  40ab9c:	mov	w1, #0x59c3                	// #22979
  40aba0:	movk	w1, #0x655b, lsl #16
  40aba4:	add	w17, w17, w1
  40aba8:	ror	w17, w17, #26
  40abac:	add	w17, w17, w14
  40abb0:	orn	w1, w17, w3
  40abb4:	eor	w1, w1, w14
  40abb8:	add	w1, w4, w1
  40abbc:	mov	w4, #0xcc92                	// #52370
  40abc0:	movk	w4, #0x8f0c, lsl #16
  40abc4:	add	w1, w1, w4
  40abc8:	ror	w1, w1, #22
  40abcc:	add	w1, w1, w17
  40abd0:	add	w16, w16, w3
  40abd4:	add	w3, w25, w14
  40abd8:	orn	w14, w1, w14
  40abdc:	eor	w14, w14, w17
  40abe0:	add	w14, w16, w14
  40abe4:	mov	w16, #0xf47d                	// #62589
  40abe8:	movk	w16, #0xffef, lsl #16
  40abec:	add	w14, w14, w16
  40abf0:	ror	w14, w14, #17
  40abf4:	add	w14, w14, w1
  40abf8:	orn	w16, w14, w17
  40abfc:	add	w13, w13, w17
  40ac00:	eor	w16, w16, w1
  40ac04:	add	w17, w18, w1
  40ac08:	mov	w18, #0x5dd1                	// #24017
  40ac0c:	add	w16, w3, w16
  40ac10:	movk	w18, #0x8584, lsl #16
  40ac14:	add	w16, w16, w18
  40ac18:	ror	w16, w16, #11
  40ac1c:	add	w16, w16, w14
  40ac20:	orn	w18, w16, w1
  40ac24:	eor	w18, w18, w14
  40ac28:	mov	w1, #0x7e4f                	// #32335
  40ac2c:	add	w13, w13, w18
  40ac30:	movk	w1, #0x6fa8, lsl #16
  40ac34:	add	w13, w13, w1
  40ac38:	ror	w13, w13, #26
  40ac3c:	add	w13, w13, w16
  40ac40:	add	w18, w27, w14
  40ac44:	orn	w14, w13, w14
  40ac48:	eor	w14, w14, w16
  40ac4c:	add	w14, w17, w14
  40ac50:	mov	w17, #0xe6e0                	// #59104
  40ac54:	movk	w17, #0xfe2c, lsl #16
  40ac58:	add	w14, w14, w17
  40ac5c:	ror	w14, w14, #22
  40ac60:	add	w14, w14, w13
  40ac64:	add	w15, w15, w16
  40ac68:	orn	w16, w14, w16
  40ac6c:	eor	w16, w16, w13
  40ac70:	add	w16, w18, w16
  40ac74:	mov	w18, #0x4314                	// #17172
  40ac78:	movk	w18, #0xa301, lsl #16
  40ac7c:	add	w16, w16, w18
  40ac80:	ror	w16, w16, #17
  40ac84:	add	w16, w16, w14
  40ac88:	add	w17, w24, w13
  40ac8c:	orn	w13, w16, w13
  40ac90:	eor	w13, w13, w14
  40ac94:	mov	w18, #0x11a1                	// #4513
  40ac98:	add	w13, w15, w13
  40ac9c:	movk	w18, #0x4e08, lsl #16
  40aca0:	add	w13, w13, w18
  40aca4:	ror	w13, w13, #11
  40aca8:	add	w13, w13, w16
  40acac:	add	w15, w30, w14
  40acb0:	orn	w14, w13, w14
  40acb4:	eor	w14, w14, w16
  40acb8:	mov	w18, #0x7e82                	// #32386
  40acbc:	add	w14, w17, w14
  40acc0:	movk	w18, #0xf753, lsl #16
  40acc4:	add	w14, w14, w18
  40acc8:	ror	w14, w14, #26
  40accc:	add	w14, w14, w13
  40acd0:	add	w17, w23, w16
  40acd4:	orn	w16, w14, w16
  40acd8:	eor	w16, w16, w13
  40acdc:	mov	w18, #0xf235                	// #62005
  40ace0:	add	w15, w15, w16
  40ace4:	movk	w18, #0xbd3a, lsl #16
  40ace8:	add	w15, w15, w18
  40acec:	ror	w15, w15, #22
  40acf0:	add	w15, w15, w14
  40acf4:	add	w16, w26, w13
  40acf8:	orn	w13, w15, w13
  40acfc:	eor	w13, w13, w14
  40ad00:	add	w13, w17, w13
  40ad04:	mov	w17, #0xd2bb                	// #53947
  40ad08:	movk	w17, #0x2ad7, lsl #16
  40ad0c:	add	w13, w13, w17
  40ad10:	ror	w13, w13, #17
  40ad14:	add	w13, w13, w15
  40ad18:	add	w8, w14, w8
  40ad1c:	orn	w14, w13, w14
  40ad20:	add	w9, w13, w9
  40ad24:	add	w11, w13, w11
  40ad28:	eor	w13, w14, w15
  40ad2c:	add	w13, w16, w13
  40ad30:	add	w13, w13, w22
  40ad34:	ror	w13, w13, #11
  40ad38:	add	x0, x0, #0x40
  40ad3c:	add	w9, w9, w13
  40ad40:	cmp	x0, x12
  40ad44:	add	w10, w15, w10
  40ad48:	b.cc	40a3a0 <ferror@plt+0x73e0>  // b.lo, b.ul, b.last
  40ad4c:	stp	w8, w9, [x2]
  40ad50:	stp	w11, w10, [x2, #8]
  40ad54:	ldp	x20, x19, [sp, #80]
  40ad58:	ldp	x22, x21, [sp, #64]
  40ad5c:	ldp	x24, x23, [sp, #48]
  40ad60:	ldp	x26, x25, [sp, #32]
  40ad64:	ldp	x28, x27, [sp, #16]
  40ad68:	ldp	x29, x30, [sp], #96
  40ad6c:	ret
  40ad70:	sub	sp, sp, #0xe0
  40ad74:	stp	x22, x21, [sp, #192]
  40ad78:	mov	x21, x0
  40ad7c:	mov	w0, #0x8048                	// #32840
  40ad80:	stp	x29, x30, [sp, #160]
  40ad84:	str	x23, [sp, #176]
  40ad88:	stp	x20, x19, [sp, #208]
  40ad8c:	add	x29, sp, #0xa0
  40ad90:	mov	x19, x1
  40ad94:	bl	402a40 <malloc@plt>
  40ad98:	cbz	x0, 40ae68 <ferror@plt+0x7ea8>
  40ad9c:	mov	x20, x0
  40ada0:	mov	x0, sp
  40ada4:	bl	40a210 <ferror@plt+0x7250>
  40ada8:	mov	x23, xzr
  40adac:	mov	w22, #0x8000                	// #32768
  40adb0:	b	40ade8 <ferror@plt+0x7e28>
  40adb4:	mov	x2, sp
  40adb8:	mov	w1, #0x8000                	// #32768
  40adbc:	mov	x0, x20
  40adc0:	bl	40a34c <ferror@plt+0x738c>
  40adc4:	mov	w8, wzr
  40adc8:	mov	w1, #0x8000                	// #32768
  40adcc:	mov	x23, xzr
  40add0:	cbz	w8, 40ade8 <ferror@plt+0x7e28>
  40add4:	b	40ae34 <ferror@plt+0x7e74>
  40add8:	mov	w8, #0x7                   	// #7
  40addc:	mov	x1, x23
  40ade0:	mov	x23, xzr
  40ade4:	cbnz	w8, 40ae34 <ferror@plt+0x7e74>
  40ade8:	mov	x0, x21
  40adec:	bl	402d80 <feof_unlocked@plt>
  40adf0:	cbnz	w0, 40add8 <ferror@plt+0x7e18>
  40adf4:	add	x0, x20, x23
  40adf8:	sub	x2, x22, x23
  40adfc:	mov	w1, #0x1                   	// #1
  40ae00:	mov	x3, x21
  40ae04:	bl	402c60 <fread_unlocked@plt>
  40ae08:	add	x23, x0, x23
  40ae0c:	cmp	x23, #0x8, lsl #12
  40ae10:	b.eq	40adb4 <ferror@plt+0x7df4>  // b.none
  40ae14:	cbnz	x0, 40ade8 <ferror@plt+0x7e28>
  40ae18:	mov	x0, x21
  40ae1c:	bl	402900 <ferror_unlocked@plt>
  40ae20:	cbz	w0, 40add8 <ferror@plt+0x7e18>
  40ae24:	mov	x0, x20
  40ae28:	bl	402d10 <free@plt>
  40ae2c:	mov	w8, #0x1                   	// #1
  40ae30:	b	40addc <ferror@plt+0x7e1c>
  40ae34:	cmp	w8, #0x7
  40ae38:	b.ne	40ae68 <ferror@plt+0x7ea8>  // b.any
  40ae3c:	cbz	x1, 40ae4c <ferror@plt+0x7e8c>
  40ae40:	mov	x2, sp
  40ae44:	mov	x0, x20
  40ae48:	bl	40ae84 <ferror@plt+0x7ec4>
  40ae4c:	mov	x0, sp
  40ae50:	mov	x1, x19
  40ae54:	bl	40a2a0 <ferror@plt+0x72e0>
  40ae58:	mov	x0, x20
  40ae5c:	bl	402d10 <free@plt>
  40ae60:	mov	w0, wzr
  40ae64:	b	40ae6c <ferror@plt+0x7eac>
  40ae68:	mov	w0, #0x1                   	// #1
  40ae6c:	ldp	x20, x19, [sp, #208]
  40ae70:	ldp	x22, x21, [sp, #192]
  40ae74:	ldr	x23, [sp, #176]
  40ae78:	ldp	x29, x30, [sp, #160]
  40ae7c:	add	sp, sp, #0xe0
  40ae80:	ret
  40ae84:	stp	x29, x30, [sp, #-64]!
  40ae88:	stp	x24, x23, [sp, #16]
  40ae8c:	stp	x22, x21, [sp, #32]
  40ae90:	stp	x20, x19, [sp, #48]
  40ae94:	ldr	w24, [x2, #24]
  40ae98:	mov	x19, x2
  40ae9c:	mov	x20, x1
  40aea0:	mov	x21, x0
  40aea4:	mov	x29, sp
  40aea8:	cbz	w24, 40af1c <ferror@plt+0x7f5c>
  40aeac:	mov	w8, #0x80                  	// #128
  40aeb0:	sub	x8, x8, x24
  40aeb4:	cmp	x8, x20
  40aeb8:	add	x23, x19, #0x1c
  40aebc:	csel	x22, x20, x8, hi  // hi = pmore
  40aec0:	add	x0, x23, x24
  40aec4:	mov	x1, x21
  40aec8:	mov	x2, x22
  40aecc:	bl	402850 <memcpy@plt>
  40aed0:	ldr	w8, [x19, #24]
  40aed4:	add	w8, w8, w22
  40aed8:	cmp	w8, #0x41
  40aedc:	str	w8, [x19, #24]
  40aee0:	b.cc	40af14 <ferror@plt+0x7f54>  // b.lo, b.ul, b.last
  40aee4:	and	w1, w8, #0xffffffc0
  40aee8:	mov	x0, x23
  40aeec:	mov	x2, x19
  40aef0:	bl	40a34c <ferror@plt+0x738c>
  40aef4:	ldr	w8, [x19, #24]
  40aef8:	add	x9, x22, x24
  40aefc:	and	x9, x9, #0xffffffffffffffc0
  40af00:	add	x1, x23, x9
  40af04:	and	x2, x8, #0x3f
  40af08:	mov	x0, x23
  40af0c:	str	w2, [x19, #24]
  40af10:	bl	402850 <memcpy@plt>
  40af14:	add	x21, x21, x22
  40af18:	sub	x20, x20, x22
  40af1c:	cmp	x20, #0x40
  40af20:	b.cc	40af74 <ferror@plt+0x7fb4>  // b.lo, b.ul, b.last
  40af24:	tst	x21, #0x3
  40af28:	b.eq	40afd8 <ferror@plt+0x8018>  // b.none
  40af2c:	subs	x8, x20, #0x41
  40af30:	b.cc	40af74 <ferror@plt+0x7fb4>  // b.lo, b.ul, b.last
  40af34:	add	x22, x19, #0x1c
  40af38:	and	x23, x8, #0xffffffffffffffc0
  40af3c:	mov	x24, x20
  40af40:	ldp	q1, q0, [x21, #32]
  40af44:	ldp	q3, q2, [x21], #64
  40af48:	mov	w1, #0x40                  	// #64
  40af4c:	mov	x0, x22
  40af50:	mov	x2, x19
  40af54:	stp	q1, q0, [x22, #32]
  40af58:	stp	q3, q2, [x22]
  40af5c:	bl	40a34c <ferror@plt+0x738c>
  40af60:	sub	x24, x24, #0x40
  40af64:	cmp	x24, #0x40
  40af68:	b.hi	40af40 <ferror@plt+0x7f80>  // b.pmore
  40af6c:	sub	x8, x20, x23
  40af70:	sub	x20, x8, #0x40
  40af74:	cbz	x20, 40afc4 <ferror@plt+0x8004>
  40af78:	ldr	w23, [x19, #24]
  40af7c:	add	x22, x19, #0x1c
  40af80:	mov	x1, x21
  40af84:	mov	x2, x20
  40af88:	add	x0, x22, x23
  40af8c:	bl	402850 <memcpy@plt>
  40af90:	add	x8, x20, x23
  40af94:	subs	x20, x8, #0x40
  40af98:	b.cc	40afc0 <ferror@plt+0x8000>  // b.lo, b.ul, b.last
  40af9c:	mov	w1, #0x40                  	// #64
  40afa0:	mov	x0, x22
  40afa4:	mov	x2, x19
  40afa8:	bl	40a34c <ferror@plt+0x738c>
  40afac:	add	x1, x19, #0x5c
  40afb0:	mov	x0, x22
  40afb4:	mov	x2, x20
  40afb8:	bl	402850 <memcpy@plt>
  40afbc:	mov	x8, x20
  40afc0:	str	w8, [x19, #24]
  40afc4:	ldp	x20, x19, [sp, #48]
  40afc8:	ldp	x22, x21, [sp, #32]
  40afcc:	ldp	x24, x23, [sp, #16]
  40afd0:	ldp	x29, x30, [sp], #64
  40afd4:	ret
  40afd8:	and	x22, x20, #0xffffffffffffffc0
  40afdc:	mov	x0, x21
  40afe0:	mov	x1, x22
  40afe4:	mov	x2, x19
  40afe8:	bl	40a34c <ferror@plt+0x738c>
  40afec:	add	x21, x21, x22
  40aff0:	and	x20, x20, #0x3f
  40aff4:	cbnz	x20, 40af78 <ferror@plt+0x7fb8>
  40aff8:	b	40afc4 <ferror@plt+0x8004>
  40affc:	sub	sp, sp, #0xd0
  40b000:	str	x21, [sp, #176]
  40b004:	mov	x21, x0
  40b008:	mov	x0, sp
  40b00c:	stp	x29, x30, [sp, #160]
  40b010:	stp	x20, x19, [sp, #192]
  40b014:	add	x29, sp, #0xa0
  40b018:	mov	x19, x2
  40b01c:	mov	x20, x1
  40b020:	bl	40a210 <ferror@plt+0x7250>
  40b024:	mov	x2, sp
  40b028:	mov	x0, x21
  40b02c:	mov	x1, x20
  40b030:	bl	40ae84 <ferror@plt+0x7ec4>
  40b034:	mov	x0, sp
  40b038:	mov	x1, x19
  40b03c:	bl	40a2a0 <ferror@plt+0x72e0>
  40b040:	ldp	x20, x19, [sp, #192]
  40b044:	ldr	x21, [sp, #176]
  40b048:	ldp	x29, x30, [sp, #160]
  40b04c:	add	sp, sp, #0xd0
  40b050:	ret
  40b054:	stp	x29, x30, [sp, #-16]!
  40b058:	mov	x29, sp
  40b05c:	bl	402c30 <posix_fadvise@plt>
  40b060:	ldp	x29, x30, [sp], #16
  40b064:	ret
  40b068:	cbz	x0, 40b098 <ferror@plt+0x80d8>
  40b06c:	stp	x29, x30, [sp, #-32]!
  40b070:	str	x19, [sp, #16]
  40b074:	mov	x29, sp
  40b078:	mov	w19, w1
  40b07c:	bl	4029d0 <fileno@plt>
  40b080:	mov	x1, xzr
  40b084:	mov	x2, xzr
  40b088:	mov	w3, w19
  40b08c:	bl	40b054 <ferror@plt+0x8094>
  40b090:	ldr	x19, [sp, #16]
  40b094:	ldp	x29, x30, [sp], #32
  40b098:	ret
  40b09c:	sub	sp, sp, #0x60
  40b0a0:	stp	x29, x30, [sp, #16]
  40b0a4:	str	x25, [sp, #32]
  40b0a8:	stp	x24, x23, [sp, #48]
  40b0ac:	stp	x22, x21, [sp, #64]
  40b0b0:	stp	x20, x19, [sp, #80]
  40b0b4:	add	x29, sp, #0x10
  40b0b8:	mov	x21, x1
  40b0bc:	mov	x20, x0
  40b0c0:	bl	402cc0 <strcmp@plt>
  40b0c4:	cbz	w0, 40b158 <ferror@plt+0x8198>
  40b0c8:	ldrb	w22, [x20]
  40b0cc:	cbz	w22, 40b13c <ferror@plt+0x817c>
  40b0d0:	ldrb	w23, [x21]
  40b0d4:	cbz	w23, 40b154 <ferror@plt+0x8194>
  40b0d8:	mov	w19, w0
  40b0dc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b0e0:	add	x0, x0, #0x734
  40b0e4:	mov	x1, x20
  40b0e8:	bl	402cc0 <strcmp@plt>
  40b0ec:	cbz	w0, 40b13c <ferror@plt+0x817c>
  40b0f0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b0f4:	add	x0, x0, #0x734
  40b0f8:	mov	x1, x21
  40b0fc:	bl	402cc0 <strcmp@plt>
  40b100:	cbz	w0, 40b154 <ferror@plt+0x8194>
  40b104:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b108:	add	x0, x0, #0x733
  40b10c:	mov	x1, x20
  40b110:	bl	402cc0 <strcmp@plt>
  40b114:	cbz	w0, 40b13c <ferror@plt+0x817c>
  40b118:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b11c:	add	x0, x0, #0x733
  40b120:	mov	x1, x21
  40b124:	bl	402cc0 <strcmp@plt>
  40b128:	cbz	w0, 40b154 <ferror@plt+0x8194>
  40b12c:	cmp	w22, #0x2e
  40b130:	b.ne	40b144 <ferror@plt+0x8184>  // b.any
  40b134:	cmp	w23, #0x2e
  40b138:	b.eq	40b144 <ferror@plt+0x8184>  // b.none
  40b13c:	mov	w0, #0xffffffff            	// #-1
  40b140:	b	40b158 <ferror@plt+0x8198>
  40b144:	cmp	w22, #0x2e
  40b148:	b.eq	40b174 <ferror@plt+0x81b4>  // b.none
  40b14c:	cmp	w23, #0x2e
  40b150:	b.ne	40b174 <ferror@plt+0x81b4>  // b.any
  40b154:	mov	w0, #0x1                   	// #1
  40b158:	ldp	x20, x19, [sp, #80]
  40b15c:	ldp	x22, x21, [sp, #64]
  40b160:	ldp	x24, x23, [sp, #48]
  40b164:	ldr	x25, [sp, #32]
  40b168:	ldp	x29, x30, [sp, #16]
  40b16c:	add	sp, sp, #0x60
  40b170:	ret
  40b174:	cmp	w22, #0x2e
  40b178:	cset	w8, eq  // eq = none
  40b17c:	cmp	w23, #0x2e
  40b180:	cset	w9, eq  // eq = none
  40b184:	tst	w8, w9
  40b188:	cinc	x21, x21, ne  // ne = any
  40b18c:	cinc	x20, x20, ne  // ne = any
  40b190:	add	x0, x29, #0x18
  40b194:	str	x20, [x29, #24]
  40b198:	str	x21, [sp, #8]
  40b19c:	bl	40b218 <ferror@plt+0x8258>
  40b1a0:	mov	x22, x0
  40b1a4:	add	x0, sp, #0x8
  40b1a8:	bl	40b218 <ferror@plt+0x8258>
  40b1ac:	ldr	x24, [x29, #24]
  40b1b0:	ldr	x25, [sp, #8]
  40b1b4:	cmp	x22, #0x0
  40b1b8:	orr	x8, x22, x0
  40b1bc:	csel	x9, x22, x24, ne  // ne = any
  40b1c0:	cmp	x0, #0x0
  40b1c4:	sub	x22, x9, x20
  40b1c8:	csel	x9, x0, x25, ne  // ne = any
  40b1cc:	sub	x23, x9, x21
  40b1d0:	cbz	x8, 40b1f8 <ferror@plt+0x8238>
  40b1d4:	cmp	x22, x23
  40b1d8:	b.ne	40b1f8 <ferror@plt+0x8238>  // b.any
  40b1dc:	mov	x0, x20
  40b1e0:	mov	x1, x21
  40b1e4:	mov	x2, x22
  40b1e8:	bl	402ab0 <strncmp@plt>
  40b1ec:	cbnz	w0, 40b1f8 <ferror@plt+0x8238>
  40b1f0:	sub	x22, x24, x20
  40b1f4:	sub	x23, x25, x21
  40b1f8:	mov	x0, x20
  40b1fc:	mov	x1, x22
  40b200:	mov	x2, x21
  40b204:	mov	x3, x23
  40b208:	bl	40b2b8 <ferror@plt+0x82f8>
  40b20c:	cmp	w0, #0x0
  40b210:	csel	w0, w19, w0, eq  // eq = none
  40b214:	b	40b158 <ferror@plt+0x8198>
  40b218:	stp	x29, x30, [sp, #-48]!
  40b21c:	stp	x20, x19, [sp, #32]
  40b220:	ldr	x8, [x0]
  40b224:	str	x21, [sp, #16]
  40b228:	mov	x29, sp
  40b22c:	ldrb	w9, [x8]
  40b230:	cbz	w9, 40b2a0 <ferror@plt+0x82e0>
  40b234:	mov	x19, x0
  40b238:	mov	w21, wzr
  40b23c:	mov	x20, xzr
  40b240:	b	40b264 <ferror@plt+0x82a4>
  40b244:	cmp	x20, #0x0
  40b248:	csel	x20, x8, x20, eq  // eq = none
  40b24c:	mov	w21, #0x1                   	// #1
  40b250:	ldr	x9, [x19]
  40b254:	add	x8, x9, #0x1
  40b258:	str	x8, [x19]
  40b25c:	ldrb	w9, [x9, #1]
  40b260:	cbz	w9, 40b2a4 <ferror@plt+0x82e4>
  40b264:	and	w0, w9, #0xff
  40b268:	tbz	w21, #0, 40b27c <ferror@plt+0x82bc>
  40b26c:	bl	4117e4 <_obstack_memory_used@@Base+0x188>
  40b270:	mov	w21, wzr
  40b274:	tbnz	w0, #0, 40b250 <ferror@plt+0x8290>
  40b278:	b	40b28c <ferror@plt+0x82cc>
  40b27c:	cmp	w0, #0x2e
  40b280:	b.eq	40b244 <ferror@plt+0x8284>  // b.none
  40b284:	bl	4117a8 <_obstack_memory_used@@Base+0x14c>
  40b288:	tbnz	w0, #0, 40b250 <ferror@plt+0x8290>
  40b28c:	ldr	x8, [x19]
  40b290:	ldrb	w8, [x8]
  40b294:	cmp	w8, #0x7e
  40b298:	csel	x20, x20, xzr, eq  // eq = none
  40b29c:	b	40b250 <ferror@plt+0x8290>
  40b2a0:	mov	x20, xzr
  40b2a4:	mov	x0, x20
  40b2a8:	ldp	x20, x19, [sp, #32]
  40b2ac:	ldr	x21, [sp, #16]
  40b2b0:	ldp	x29, x30, [sp], #48
  40b2b4:	ret
  40b2b8:	sub	sp, sp, #0x70
  40b2bc:	stp	x26, x25, [sp, #48]
  40b2c0:	stp	x22, x21, [sp, #80]
  40b2c4:	stp	x20, x19, [sp, #96]
  40b2c8:	mov	x19, x3
  40b2cc:	mov	x20, x2
  40b2d0:	mov	x21, x1
  40b2d4:	mov	x22, x0
  40b2d8:	mov	x25, xzr
  40b2dc:	mov	x26, xzr
  40b2e0:	stp	x29, x30, [sp, #16]
  40b2e4:	stp	x28, x27, [sp, #32]
  40b2e8:	stp	x24, x23, [sp, #64]
  40b2ec:	add	x29, sp, #0x10
  40b2f0:	b	40b300 <ferror@plt+0x8340>
  40b2f4:	mov	w27, #0x1                   	// #1
  40b2f8:	mov	w8, #0x1                   	// #1
  40b2fc:	cbnz	w8, 40b498 <ferror@plt+0x84d8>
  40b300:	cmp	x25, x19
  40b304:	b.cc	40b324 <ferror@plt+0x8364>  // b.lo, b.ul, b.last
  40b308:	cmp	x26, x21
  40b30c:	b.cc	40b324 <ferror@plt+0x8364>  // b.lo, b.ul, b.last
  40b310:	b	40b494 <ferror@plt+0x84d4>
  40b314:	add	x26, x26, #0x1
  40b318:	add	x25, x25, #0x1
  40b31c:	mov	w8, #0x1                   	// #1
  40b320:	tbz	w8, #0, 40b2f8 <ferror@plt+0x8338>
  40b324:	cmp	x26, x21
  40b328:	b.cs	40b338 <ferror@plt+0x8378>  // b.hs, b.nlast
  40b32c:	ldrb	w0, [x22, x26]
  40b330:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b334:	tbz	w0, #0, 40b34c <ferror@plt+0x838c>
  40b338:	cmp	x25, x19
  40b33c:	b.cs	40b3a4 <ferror@plt+0x83e4>  // b.hs, b.nlast
  40b340:	ldrb	w0, [x20, x25]
  40b344:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b348:	tbnz	w0, #0, 40b3a4 <ferror@plt+0x83e4>
  40b34c:	cmp	x26, x21
  40b350:	b.ne	40b374 <ferror@plt+0x83b4>  // b.any
  40b354:	mov	w24, wzr
  40b358:	cmp	x25, x19
  40b35c:	b.eq	40b388 <ferror@plt+0x83c8>  // b.none
  40b360:	ldrb	w0, [x20, x25]
  40b364:	bl	40b4bc <ferror@plt+0x84fc>
  40b368:	subs	w9, w24, w0
  40b36c:	b.eq	40b314 <ferror@plt+0x8354>  // b.none
  40b370:	b	40b394 <ferror@plt+0x83d4>
  40b374:	ldrb	w0, [x22, x26]
  40b378:	bl	40b4bc <ferror@plt+0x84fc>
  40b37c:	mov	w24, w0
  40b380:	cmp	x25, x19
  40b384:	b.ne	40b360 <ferror@plt+0x83a0>  // b.any
  40b388:	mov	w0, wzr
  40b38c:	subs	w9, w24, w0
  40b390:	b.eq	40b314 <ferror@plt+0x8354>  // b.none
  40b394:	mov	w8, wzr
  40b398:	mov	w27, w9
  40b39c:	tbnz	w8, #0, 40b324 <ferror@plt+0x8364>
  40b3a0:	b	40b2f8 <ferror@plt+0x8338>
  40b3a4:	sub	x9, x26, #0x1
  40b3a8:	add	x8, x22, x26
  40b3ac:	mov	x26, x9
  40b3b0:	add	x9, x22, x26
  40b3b4:	ldrb	w9, [x9, #1]
  40b3b8:	mov	x24, x8
  40b3bc:	add	x26, x26, #0x1
  40b3c0:	add	x8, x8, #0x1
  40b3c4:	cmp	w9, #0x30
  40b3c8:	b.eq	40b3b0 <ferror@plt+0x83f0>  // b.none
  40b3cc:	ldrb	w8, [x20, x25]
  40b3d0:	add	x25, x25, #0x1
  40b3d4:	cmp	w8, #0x30
  40b3d8:	b.eq	40b3cc <ferror@plt+0x840c>  // b.none
  40b3dc:	add	x23, x22, x26
  40b3e0:	ldrb	w0, [x23]
  40b3e4:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b3e8:	tbz	w0, #0, 40b43c <ferror@plt+0x847c>
  40b3ec:	mov	x28, xzr
  40b3f0:	add	x23, x20, x25
  40b3f4:	str	w27, [sp, #8]
  40b3f8:	stur	wzr, [x29, #-4]
  40b3fc:	b	40b410 <ferror@plt+0x8450>
  40b400:	ldrb	w0, [x24, #1]!
  40b404:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b408:	add	x28, x28, #0x1
  40b40c:	tbz	w0, #0, 40b44c <ferror@plt+0x848c>
  40b410:	add	x27, x23, x28
  40b414:	ldurb	w0, [x27, #-1]
  40b418:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b41c:	tbz	w0, #0, 40b44c <ferror@plt+0x848c>
  40b420:	ldur	w8, [x29, #-4]
  40b424:	cbnz	w8, 40b400 <ferror@plt+0x8440>
  40b428:	ldrb	w8, [x24]
  40b42c:	ldurb	w9, [x27, #-1]
  40b430:	sub	w8, w8, w9
  40b434:	stur	w8, [x29, #-4]
  40b438:	b	40b400 <ferror@plt+0x8440>
  40b43c:	stur	wzr, [x29, #-4]
  40b440:	sub	x25, x25, #0x1
  40b444:	mov	x24, x23
  40b448:	b	40b45c <ferror@plt+0x849c>
  40b44c:	ldr	w27, [sp, #8]
  40b450:	add	x8, x25, x28
  40b454:	add	x26, x26, x28
  40b458:	sub	x25, x8, #0x1
  40b45c:	ldrb	w0, [x24]
  40b460:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b464:	tbnz	w0, #0, 40b2f4 <ferror@plt+0x8334>
  40b468:	ldrb	w0, [x20, x25]
  40b46c:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b470:	tbz	w0, #0, 40b480 <ferror@plt+0x84c0>
  40b474:	mov	w8, #0x1                   	// #1
  40b478:	mov	w27, #0xffffffff            	// #-1
  40b47c:	b	40b2fc <ferror@plt+0x833c>
  40b480:	ldur	w9, [x29, #-4]
  40b484:	cmp	w9, #0x0
  40b488:	cset	w8, ne  // ne = any
  40b48c:	csel	w27, w27, w9, eq  // eq = none
  40b490:	b	40b2fc <ferror@plt+0x833c>
  40b494:	mov	w27, wzr
  40b498:	mov	w0, w27
  40b49c:	ldp	x20, x19, [sp, #96]
  40b4a0:	ldp	x22, x21, [sp, #80]
  40b4a4:	ldp	x24, x23, [sp, #64]
  40b4a8:	ldp	x26, x25, [sp, #48]
  40b4ac:	ldp	x28, x27, [sp, #32]
  40b4b0:	ldp	x29, x30, [sp, #16]
  40b4b4:	add	sp, sp, #0x70
  40b4b8:	ret
  40b4bc:	stp	x29, x30, [sp, #-32]!
  40b4c0:	stp	x20, x19, [sp, #16]
  40b4c4:	and	w19, w0, #0xff
  40b4c8:	mov	w20, w0
  40b4cc:	mov	w0, w19
  40b4d0:	mov	x29, sp
  40b4d4:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40b4d8:	tbz	w0, #0, 40b4e4 <ferror@plt+0x8524>
  40b4dc:	mov	w19, wzr
  40b4e0:	b	40b4f0 <ferror@plt+0x8530>
  40b4e4:	mov	w0, w19
  40b4e8:	bl	4117e4 <_obstack_memory_used@@Base+0x188>
  40b4ec:	tbz	w0, #0, 40b4f8 <ferror@plt+0x8538>
  40b4f0:	mov	w0, w19
  40b4f4:	b	40b508 <ferror@plt+0x8548>
  40b4f8:	and	w8, w20, #0xff
  40b4fc:	orr	w9, w19, #0x100
  40b500:	cmp	w8, #0x7e
  40b504:	csinv	w0, w9, wzr, ne  // ne = any
  40b508:	ldp	x20, x19, [sp, #16]
  40b50c:	ldp	x29, x30, [sp], #32
  40b510:	ret
  40b514:	stp	x29, x30, [sp, #-32]!
  40b518:	mov	x1, xzr
  40b51c:	str	x19, [sp, #16]
  40b520:	mov	x29, sp
  40b524:	bl	402fb0 <setlocale@plt>
  40b528:	cbz	x0, 40b554 <ferror@plt+0x8594>
  40b52c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b530:	add	x1, x1, #0x26
  40b534:	mov	x19, x0
  40b538:	bl	402cc0 <strcmp@plt>
  40b53c:	cbz	w0, 40b55c <ferror@plt+0x859c>
  40b540:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b544:	add	x1, x1, #0x736
  40b548:	mov	x0, x19
  40b54c:	bl	402cc0 <strcmp@plt>
  40b550:	cbz	w0, 40b55c <ferror@plt+0x859c>
  40b554:	mov	w0, #0x1                   	// #1
  40b558:	b	40b560 <ferror@plt+0x85a0>
  40b55c:	mov	w0, wzr
  40b560:	ldr	x19, [sp, #16]
  40b564:	ldp	x29, x30, [sp], #32
  40b568:	ret
  40b56c:	ldr	x0, [x0, #16]
  40b570:	ret
  40b574:	ldr	x0, [x0, #24]
  40b578:	ret
  40b57c:	ldr	x0, [x0, #32]
  40b580:	ret
  40b584:	ldp	x8, x9, [x0]
  40b588:	cmp	x8, x9
  40b58c:	b.cs	40b5d0 <ferror@plt+0x8610>  // b.hs, b.nlast
  40b590:	ldr	x9, [x0, #8]
  40b594:	mov	x0, xzr
  40b598:	b	40b5a8 <ferror@plt+0x85e8>
  40b59c:	add	x8, x8, #0x10
  40b5a0:	cmp	x8, x9
  40b5a4:	b.cs	40b5d4 <ferror@plt+0x8614>  // b.hs, b.nlast
  40b5a8:	ldr	x10, [x8]
  40b5ac:	cbz	x10, 40b59c <ferror@plt+0x85dc>
  40b5b0:	mov	x10, xzr
  40b5b4:	mov	x11, x8
  40b5b8:	ldr	x11, [x11, #8]
  40b5bc:	add	x10, x10, #0x1
  40b5c0:	cbnz	x11, 40b5b8 <ferror@plt+0x85f8>
  40b5c4:	cmp	x10, x0
  40b5c8:	csel	x0, x10, x0, hi  // hi = pmore
  40b5cc:	b	40b59c <ferror@plt+0x85dc>
  40b5d0:	mov	x0, xzr
  40b5d4:	ret
  40b5d8:	ldp	x9, x8, [x0]
  40b5dc:	cmp	x9, x8
  40b5e0:	b.cs	40b620 <ferror@plt+0x8660>  // b.hs, b.nlast
  40b5e4:	ldr	x11, [x0, #8]
  40b5e8:	mov	x8, xzr
  40b5ec:	mov	x10, xzr
  40b5f0:	b	40b600 <ferror@plt+0x8640>
  40b5f4:	add	x9, x9, #0x10
  40b5f8:	cmp	x9, x11
  40b5fc:	b.cs	40b628 <ferror@plt+0x8668>  // b.hs, b.nlast
  40b600:	ldr	x12, [x9]
  40b604:	cbz	x12, 40b5f4 <ferror@plt+0x8634>
  40b608:	mov	x12, x9
  40b60c:	ldr	x12, [x12, #8]
  40b610:	add	x8, x8, #0x1
  40b614:	cbnz	x12, 40b60c <ferror@plt+0x864c>
  40b618:	add	x10, x10, #0x1
  40b61c:	b	40b5f4 <ferror@plt+0x8634>
  40b620:	mov	x10, xzr
  40b624:	mov	x8, xzr
  40b628:	ldr	x9, [x0, #24]
  40b62c:	cmp	x10, x9
  40b630:	b.ne	40b648 <ferror@plt+0x8688>  // b.any
  40b634:	ldr	x9, [x0, #32]
  40b638:	cmp	x8, x9
  40b63c:	b.ne	40b648 <ferror@plt+0x8688>  // b.any
  40b640:	mov	w0, #0x1                   	// #1
  40b644:	ret
  40b648:	mov	w0, wzr
  40b64c:	ret
  40b650:	stp	x29, x30, [sp, #-64]!
  40b654:	str	x23, [sp, #16]
  40b658:	stp	x22, x21, [sp, #32]
  40b65c:	stp	x20, x19, [sp, #48]
  40b660:	mov	x29, sp
  40b664:	mov	x19, x1
  40b668:	mov	x20, x0
  40b66c:	bl	40b57c <ferror@plt+0x85bc>
  40b670:	mov	x21, x0
  40b674:	mov	x0, x20
  40b678:	bl	40b56c <ferror@plt+0x85ac>
  40b67c:	mov	x22, x0
  40b680:	mov	x0, x20
  40b684:	bl	40b574 <ferror@plt+0x85b4>
  40b688:	mov	x23, x0
  40b68c:	mov	x0, x20
  40b690:	bl	40b584 <ferror@plt+0x85c4>
  40b694:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b698:	mov	x20, x0
  40b69c:	add	x2, x2, #0x73c
  40b6a0:	mov	w1, #0x1                   	// #1
  40b6a4:	mov	x0, x19
  40b6a8:	mov	x3, x21
  40b6ac:	bl	402ca0 <__fprintf_chk@plt>
  40b6b0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b6b4:	add	x2, x2, #0x754
  40b6b8:	mov	w1, #0x1                   	// #1
  40b6bc:	mov	x0, x19
  40b6c0:	mov	x3, x22
  40b6c4:	bl	402ca0 <__fprintf_chk@plt>
  40b6c8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40b6cc:	ucvtf	d0, x23
  40b6d0:	fmov	d1, x8
  40b6d4:	fmul	d0, d0, d1
  40b6d8:	ucvtf	d1, x22
  40b6dc:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b6e0:	fdiv	d0, d0, d1
  40b6e4:	add	x2, x2, #0x76c
  40b6e8:	mov	w1, #0x1                   	// #1
  40b6ec:	mov	x0, x19
  40b6f0:	mov	x3, x23
  40b6f4:	bl	402ca0 <__fprintf_chk@plt>
  40b6f8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b6fc:	add	x2, x2, #0x78d
  40b700:	mov	w1, #0x1                   	// #1
  40b704:	mov	x0, x19
  40b708:	mov	x3, x20
  40b70c:	bl	402ca0 <__fprintf_chk@plt>
  40b710:	ldp	x20, x19, [sp, #48]
  40b714:	ldp	x22, x21, [sp, #32]
  40b718:	ldr	x23, [sp, #16]
  40b71c:	ldp	x29, x30, [sp], #64
  40b720:	ret
  40b724:	stp	x29, x30, [sp, #-48]!
  40b728:	str	x21, [sp, #16]
  40b72c:	stp	x20, x19, [sp, #32]
  40b730:	mov	x29, sp
  40b734:	mov	x19, x1
  40b738:	mov	x20, x0
  40b73c:	bl	40b794 <ferror@plt+0x87d4>
  40b740:	ldr	x8, [x0]
  40b744:	mov	x21, x0
  40b748:	mov	x0, xzr
  40b74c:	cbz	x8, 40b784 <ferror@plt+0x87c4>
  40b750:	cbz	x21, 40b784 <ferror@plt+0x87c4>
  40b754:	ldr	x1, [x21]
  40b758:	cmp	x1, x19
  40b75c:	b.eq	40b780 <ferror@plt+0x87c0>  // b.none
  40b760:	ldr	x8, [x20, #56]
  40b764:	mov	x0, x19
  40b768:	blr	x8
  40b76c:	tbnz	w0, #0, 40b780 <ferror@plt+0x87c0>
  40b770:	ldr	x21, [x21, #8]
  40b774:	cbnz	x21, 40b754 <ferror@plt+0x8794>
  40b778:	mov	x0, xzr
  40b77c:	b	40b784 <ferror@plt+0x87c4>
  40b780:	ldr	x0, [x21]
  40b784:	ldp	x20, x19, [sp, #32]
  40b788:	ldr	x21, [sp, #16]
  40b78c:	ldp	x29, x30, [sp], #48
  40b790:	ret
  40b794:	stp	x29, x30, [sp, #-32]!
  40b798:	ldr	x8, [x0, #16]
  40b79c:	ldr	x9, [x0, #48]
  40b7a0:	str	x19, [sp, #16]
  40b7a4:	mov	x19, x0
  40b7a8:	mov	x0, x1
  40b7ac:	mov	x1, x8
  40b7b0:	mov	x29, sp
  40b7b4:	blr	x9
  40b7b8:	ldr	x8, [x19, #16]
  40b7bc:	cmp	x0, x8
  40b7c0:	b.cs	40b7d8 <ferror@plt+0x8818>  // b.hs, b.nlast
  40b7c4:	ldr	x8, [x19]
  40b7c8:	ldr	x19, [sp, #16]
  40b7cc:	add	x0, x8, x0, lsl #4
  40b7d0:	ldp	x29, x30, [sp], #32
  40b7d4:	ret
  40b7d8:	bl	402c00 <abort@plt>
  40b7dc:	stp	x29, x30, [sp, #-16]!
  40b7e0:	ldr	x8, [x0, #32]
  40b7e4:	mov	x29, sp
  40b7e8:	cbz	x8, 40b804 <ferror@plt+0x8844>
  40b7ec:	ldr	x9, [x0]
  40b7f0:	ldr	x8, [x0, #8]
  40b7f4:	cmp	x9, x8
  40b7f8:	b.cs	40b810 <ferror@plt+0x8850>  // b.hs, b.nlast
  40b7fc:	ldr	x8, [x9], #16
  40b800:	cbz	x8, 40b7f0 <ferror@plt+0x8830>
  40b804:	mov	x0, x8
  40b808:	ldp	x29, x30, [sp], #16
  40b80c:	ret
  40b810:	bl	402c00 <abort@plt>
  40b814:	stp	x29, x30, [sp, #-32]!
  40b818:	stp	x20, x19, [sp, #16]
  40b81c:	mov	x29, sp
  40b820:	mov	x20, x1
  40b824:	mov	x19, x0
  40b828:	bl	40b794 <ferror@plt+0x87d4>
  40b82c:	mov	x8, x0
  40b830:	b	40b83c <ferror@plt+0x887c>
  40b834:	ldr	x8, [x8, #8]
  40b838:	cbz	x8, 40b858 <ferror@plt+0x8898>
  40b83c:	ldr	x9, [x8]
  40b840:	cmp	x9, x20
  40b844:	b.ne	40b834 <ferror@plt+0x8874>  // b.any
  40b848:	ldr	x9, [x8, #8]
  40b84c:	cbz	x9, 40b834 <ferror@plt+0x8874>
  40b850:	ldr	x0, [x9]
  40b854:	b	40b878 <ferror@plt+0x88b8>
  40b858:	ldr	x8, [x19, #8]
  40b85c:	add	x9, x0, #0x10
  40b860:	cmp	x9, x8
  40b864:	b.cs	40b874 <ferror@plt+0x88b4>  // b.hs, b.nlast
  40b868:	ldr	x0, [x9], #16
  40b86c:	cbz	x0, 40b860 <ferror@plt+0x88a0>
  40b870:	b	40b878 <ferror@plt+0x88b8>
  40b874:	mov	x0, xzr
  40b878:	ldp	x20, x19, [sp, #16]
  40b87c:	ldp	x29, x30, [sp], #32
  40b880:	ret
  40b884:	ldp	x9, x8, [x0]
  40b888:	cmp	x9, x8
  40b88c:	b.cs	40b8e8 <ferror@plt+0x8928>  // b.hs, b.nlast
  40b890:	mov	x10, xzr
  40b894:	ldr	x8, [x9]
  40b898:	cbz	x8, 40b8c8 <ferror@plt+0x8908>
  40b89c:	cbz	x9, 40b8c8 <ferror@plt+0x8908>
  40b8a0:	mov	x11, x9
  40b8a4:	cmp	x10, x2
  40b8a8:	b.cs	40b8f0 <ferror@plt+0x8930>  // b.hs, b.nlast
  40b8ac:	ldr	x8, [x11]
  40b8b0:	str	x8, [x1, x10, lsl #3]
  40b8b4:	ldr	x11, [x11, #8]
  40b8b8:	add	x8, x10, #0x1
  40b8bc:	mov	x10, x8
  40b8c0:	cbnz	x11, 40b8a4 <ferror@plt+0x88e4>
  40b8c4:	b	40b8cc <ferror@plt+0x890c>
  40b8c8:	mov	x8, x10
  40b8cc:	ldr	x10, [x0, #8]
  40b8d0:	add	x9, x9, #0x10
  40b8d4:	cmp	x9, x10
  40b8d8:	mov	x10, x8
  40b8dc:	b.cc	40b894 <ferror@plt+0x88d4>  // b.lo, b.ul, b.last
  40b8e0:	mov	x0, x8
  40b8e4:	ret
  40b8e8:	mov	x0, xzr
  40b8ec:	ret
  40b8f0:	mov	x0, x10
  40b8f4:	ret
  40b8f8:	stp	x29, x30, [sp, #-64]!
  40b8fc:	stp	x24, x23, [sp, #16]
  40b900:	stp	x22, x21, [sp, #32]
  40b904:	stp	x20, x19, [sp, #48]
  40b908:	ldp	x23, x8, [x0]
  40b90c:	mov	x29, sp
  40b910:	cmp	x23, x8
  40b914:	b.cs	40b96c <ferror@plt+0x89ac>  // b.hs, b.nlast
  40b918:	mov	x19, x2
  40b91c:	mov	x20, x0
  40b920:	mov	x22, x1
  40b924:	mov	x21, xzr
  40b928:	b	40b93c <ferror@plt+0x897c>
  40b92c:	ldr	x8, [x20, #8]
  40b930:	add	x23, x23, #0x10
  40b934:	cmp	x23, x8
  40b938:	b.cs	40b970 <ferror@plt+0x89b0>  // b.hs, b.nlast
  40b93c:	ldr	x8, [x23]
  40b940:	cbz	x8, 40b92c <ferror@plt+0x896c>
  40b944:	cbz	x23, 40b92c <ferror@plt+0x896c>
  40b948:	mov	x24, x23
  40b94c:	ldr	x0, [x24]
  40b950:	mov	x1, x19
  40b954:	blr	x22
  40b958:	tbz	w0, #0, 40b970 <ferror@plt+0x89b0>
  40b95c:	ldr	x24, [x24, #8]
  40b960:	add	x21, x21, #0x1
  40b964:	cbnz	x24, 40b94c <ferror@plt+0x898c>
  40b968:	b	40b92c <ferror@plt+0x896c>
  40b96c:	mov	x21, xzr
  40b970:	mov	x0, x21
  40b974:	ldp	x20, x19, [sp, #48]
  40b978:	ldp	x22, x21, [sp, #32]
  40b97c:	ldp	x24, x23, [sp, #16]
  40b980:	ldp	x29, x30, [sp], #64
  40b984:	ret
  40b988:	ldrb	w9, [x0]
  40b98c:	cbz	w9, 40b9bc <ferror@plt+0x89fc>
  40b990:	mov	x8, x0
  40b994:	mov	x0, xzr
  40b998:	add	x8, x8, #0x1
  40b99c:	lsl	x10, x0, #5
  40b9a0:	sub	x10, x10, x0
  40b9a4:	add	x10, x10, w9, uxtb
  40b9a8:	ldrb	w9, [x8], #1
  40b9ac:	udiv	x11, x10, x1
  40b9b0:	msub	x0, x11, x1, x10
  40b9b4:	cbnz	w9, 40b99c <ferror@plt+0x89dc>
  40b9b8:	ret
  40b9bc:	mov	x0, xzr
  40b9c0:	ret
  40b9c4:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40b9c8:	add	x8, x8, #0x7a8
  40b9cc:	ldr	w9, [x8, #16]
  40b9d0:	ldr	q0, [x8]
  40b9d4:	str	w9, [x0, #16]
  40b9d8:	str	q0, [x0]
  40b9dc:	ret
  40b9e0:	stp	x29, x30, [sp, #-64]!
  40b9e4:	adrp	x8, 40b000 <ferror@plt+0x8040>
  40b9e8:	add	x8, x8, #0xab4
  40b9ec:	cmp	x2, #0x0
  40b9f0:	adrp	x9, 40b000 <ferror@plt+0x8040>
  40b9f4:	stp	x24, x23, [sp, #16]
  40b9f8:	stp	x22, x21, [sp, #32]
  40b9fc:	mov	x21, x0
  40ba00:	add	x9, x9, #0xae0
  40ba04:	csel	x23, x8, x2, eq  // eq = none
  40ba08:	cmp	x3, #0x0
  40ba0c:	mov	w0, #0x50                  	// #80
  40ba10:	stp	x20, x19, [sp, #48]
  40ba14:	mov	x29, sp
  40ba18:	mov	x19, x4
  40ba1c:	mov	x22, x1
  40ba20:	csel	x24, x9, x3, eq  // eq = none
  40ba24:	bl	402a40 <malloc@plt>
  40ba28:	mov	x20, x0
  40ba2c:	cbz	x0, 40ba9c <ferror@plt+0x8adc>
  40ba30:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ba34:	add	x8, x8, #0x7a8
  40ba38:	cmp	x22, #0x0
  40ba3c:	csel	x22, x8, x22, eq  // eq = none
  40ba40:	mov	x0, x20
  40ba44:	str	x22, [x20, #40]
  40ba48:	bl	40baec <ferror@plt+0x8b2c>
  40ba4c:	tbz	w0, #0, 40ba90 <ferror@plt+0x8ad0>
  40ba50:	mov	x0, x21
  40ba54:	mov	x1, x22
  40ba58:	bl	40bb94 <ferror@plt+0x8bd4>
  40ba5c:	str	x0, [x20, #16]
  40ba60:	cbz	x0, 40ba90 <ferror@plt+0x8ad0>
  40ba64:	mov	w1, #0x10                  	// #16
  40ba68:	mov	x21, x0
  40ba6c:	bl	410d54 <ferror@plt+0xdd94>
  40ba70:	str	x0, [x20]
  40ba74:	cbz	x0, 40ba90 <ferror@plt+0x8ad0>
  40ba78:	add	x8, x0, x21, lsl #4
  40ba7c:	stp	xzr, xzr, [x20, #24]
  40ba80:	stp	x23, x24, [x20, #48]
  40ba84:	str	x8, [x20, #8]
  40ba88:	stp	x19, xzr, [x20, #64]
  40ba8c:	b	40ba9c <ferror@plt+0x8adc>
  40ba90:	mov	x0, x20
  40ba94:	bl	402d10 <free@plt>
  40ba98:	mov	x20, xzr
  40ba9c:	mov	x0, x20
  40baa0:	ldp	x20, x19, [sp, #48]
  40baa4:	ldp	x22, x21, [sp, #32]
  40baa8:	ldp	x24, x23, [sp, #16]
  40baac:	ldp	x29, x30, [sp], #64
  40bab0:	ret
  40bab4:	stp	x29, x30, [sp, #-32]!
  40bab8:	str	x19, [sp, #16]
  40babc:	mov	x19, x1
  40bac0:	mov	w1, #0x3                   	// #3
  40bac4:	mov	x29, sp
  40bac8:	bl	411710 <_obstack_memory_used@@Base+0xb4>
  40bacc:	udiv	x8, x0, x19
  40bad0:	msub	x0, x8, x19, x0
  40bad4:	ldr	x19, [sp, #16]
  40bad8:	ldp	x29, x30, [sp], #32
  40badc:	ret
  40bae0:	cmp	x0, x1
  40bae4:	cset	w0, eq  // eq = none
  40bae8:	ret
  40baec:	ldr	x8, [x0, #40]
  40baf0:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  40baf4:	add	x9, x9, #0x7a8
  40baf8:	cmp	x8, x9
  40bafc:	b.eq	40bb8c <ferror@plt+0x8bcc>  // b.none
  40bb00:	ldr	s0, [x8, #8]
  40bb04:	mov	w10, #0xcccd                	// #52429
  40bb08:	movk	w10, #0x3dcc, lsl #16
  40bb0c:	fmov	s1, w10
  40bb10:	fcmp	s0, s1
  40bb14:	b.le	40bb50 <ferror@plt+0x8b90>
  40bb18:	mov	w10, #0x6666                	// #26214
  40bb1c:	movk	w10, #0x3f66, lsl #16
  40bb20:	fmov	s1, w10
  40bb24:	fcmp	s0, s1
  40bb28:	b.pl	40bb50 <ferror@plt+0x8b90>  // b.nfrst
  40bb2c:	ldr	s1, [x8, #12]
  40bb30:	mov	w10, #0xcccd                	// #52429
  40bb34:	movk	w10, #0x3f8c, lsl #16
  40bb38:	fmov	s2, w10
  40bb3c:	fcmp	s1, s2
  40bb40:	b.le	40bb50 <ferror@plt+0x8b90>
  40bb44:	ldr	s1, [x8]
  40bb48:	fcmp	s1, #0.0
  40bb4c:	b.ge	40bb5c <ferror@plt+0x8b9c>  // b.tcont
  40bb50:	str	x9, [x0, #40]
  40bb54:	mov	w0, wzr
  40bb58:	ret
  40bb5c:	mov	w10, #0xcccd                	// #52429
  40bb60:	movk	w10, #0x3dcc, lsl #16
  40bb64:	fmov	s2, w10
  40bb68:	fadd	s1, s1, s2
  40bb6c:	fcmp	s1, s0
  40bb70:	b.pl	40bb50 <ferror@plt+0x8b90>  // b.nfrst
  40bb74:	ldr	s0, [x8, #4]
  40bb78:	fmov	s2, #1.000000000000000000e+00
  40bb7c:	fcmp	s0, s2
  40bb80:	b.hi	40bb50 <ferror@plt+0x8b90>  // b.pmore
  40bb84:	fcmp	s1, s0
  40bb88:	b.pl	40bb50 <ferror@plt+0x8b90>  // b.nfrst
  40bb8c:	mov	w0, #0x1                   	// #1
  40bb90:	ret
  40bb94:	stp	x29, x30, [sp, #-16]!
  40bb98:	ldrb	w8, [x1, #16]
  40bb9c:	mov	x29, sp
  40bba0:	cbnz	w8, 40bbc8 <ferror@plt+0x8c08>
  40bba4:	ldr	s0, [x1, #8]
  40bba8:	mov	w8, #0x5f800000            	// #1602224128
  40bbac:	ucvtf	s1, x0
  40bbb0:	fmov	s2, w8
  40bbb4:	fdiv	s0, s1, s0
  40bbb8:	fcvtzu	x8, s0
  40bbbc:	fcmp	s0, s2
  40bbc0:	csel	x0, x8, x0, lt  // lt = tstop
  40bbc4:	b.ge	40bbe0 <ferror@plt+0x8c20>  // b.tcont
  40bbc8:	bl	40c36c <ferror@plt+0x93ac>
  40bbcc:	lsr	x8, x0, #60
  40bbd0:	cmp	x8, #0x0
  40bbd4:	csel	x0, xzr, x0, ne  // ne = any
  40bbd8:	ldp	x29, x30, [sp], #16
  40bbdc:	ret
  40bbe0:	mov	x0, xzr
  40bbe4:	ldp	x29, x30, [sp], #16
  40bbe8:	ret
  40bbec:	stp	x29, x30, [sp, #-48]!
  40bbf0:	str	x21, [sp, #16]
  40bbf4:	stp	x20, x19, [sp, #32]
  40bbf8:	ldp	x20, x8, [x0]
  40bbfc:	mov	x19, x0
  40bc00:	mov	x29, sp
  40bc04:	b	40bc14 <ferror@plt+0x8c54>
  40bc08:	stp	xzr, xzr, [x20]
  40bc0c:	ldr	x8, [x19, #8]
  40bc10:	add	x20, x20, #0x10
  40bc14:	cmp	x20, x8
  40bc18:	b.cs	40bc80 <ferror@plt+0x8cc0>  // b.hs, b.nlast
  40bc1c:	ldr	x8, [x20]
  40bc20:	cbz	x8, 40bc0c <ferror@plt+0x8c4c>
  40bc24:	ldr	x8, [x19, #64]
  40bc28:	ldr	x21, [x20, #8]
  40bc2c:	cmp	x8, #0x0
  40bc30:	cset	w9, ne  // ne = any
  40bc34:	cbnz	x21, 40bc70 <ferror@plt+0x8cb0>
  40bc38:	cbz	w9, 40bc08 <ferror@plt+0x8c48>
  40bc3c:	ldr	x0, [x20]
  40bc40:	blr	x8
  40bc44:	b	40bc08 <ferror@plt+0x8c48>
  40bc48:	str	xzr, [x21]
  40bc4c:	ldr	x8, [x19, #72]
  40bc50:	ldr	x10, [x21, #8]
  40bc54:	str	x8, [x21, #8]
  40bc58:	ldr	x8, [x19, #64]
  40bc5c:	str	x21, [x19, #72]
  40bc60:	mov	x21, x10
  40bc64:	cmp	x8, #0x0
  40bc68:	cset	w9, ne  // ne = any
  40bc6c:	cbz	x10, 40bc38 <ferror@plt+0x8c78>
  40bc70:	tbz	w9, #0, 40bc48 <ferror@plt+0x8c88>
  40bc74:	ldr	x0, [x21]
  40bc78:	blr	x8
  40bc7c:	b	40bc48 <ferror@plt+0x8c88>
  40bc80:	stp	xzr, xzr, [x19, #24]
  40bc84:	ldp	x20, x19, [sp, #32]
  40bc88:	ldr	x21, [sp, #16]
  40bc8c:	ldp	x29, x30, [sp], #48
  40bc90:	ret
  40bc94:	stp	x29, x30, [sp, #-48]!
  40bc98:	stp	x20, x19, [sp, #32]
  40bc9c:	ldr	x8, [x0, #64]
  40bca0:	mov	x19, x0
  40bca4:	str	x21, [sp, #16]
  40bca8:	mov	x29, sp
  40bcac:	cbz	x8, 40bcf8 <ferror@plt+0x8d38>
  40bcb0:	ldr	x8, [x19, #32]
  40bcb4:	cbz	x8, 40bcf8 <ferror@plt+0x8d38>
  40bcb8:	ldp	x20, x8, [x19]
  40bcbc:	b	40bcc8 <ferror@plt+0x8d08>
  40bcc0:	ldr	x8, [x19, #8]
  40bcc4:	add	x20, x20, #0x10
  40bcc8:	cmp	x20, x8
  40bccc:	b.cs	40bcf8 <ferror@plt+0x8d38>  // b.hs, b.nlast
  40bcd0:	ldr	x8, [x20]
  40bcd4:	cbz	x8, 40bcc0 <ferror@plt+0x8d00>
  40bcd8:	cbz	x20, 40bcc0 <ferror@plt+0x8d00>
  40bcdc:	mov	x21, x20
  40bce0:	ldr	x8, [x19, #64]
  40bce4:	ldr	x0, [x21]
  40bce8:	blr	x8
  40bcec:	ldr	x21, [x21, #8]
  40bcf0:	cbnz	x21, 40bce0 <ferror@plt+0x8d20>
  40bcf4:	b	40bcc0 <ferror@plt+0x8d00>
  40bcf8:	ldp	x20, x8, [x19]
  40bcfc:	b	40bd08 <ferror@plt+0x8d48>
  40bd00:	ldr	x8, [x19, #8]
  40bd04:	add	x20, x20, #0x10
  40bd08:	cmp	x20, x8
  40bd0c:	b.cs	40bd2c <ferror@plt+0x8d6c>  // b.hs, b.nlast
  40bd10:	ldr	x0, [x20, #8]
  40bd14:	cbz	x0, 40bd00 <ferror@plt+0x8d40>
  40bd18:	ldr	x21, [x0, #8]
  40bd1c:	bl	402d10 <free@plt>
  40bd20:	mov	x0, x21
  40bd24:	cbnz	x21, 40bd18 <ferror@plt+0x8d58>
  40bd28:	b	40bd00 <ferror@plt+0x8d40>
  40bd2c:	ldr	x0, [x19, #72]
  40bd30:	cbz	x0, 40bd44 <ferror@plt+0x8d84>
  40bd34:	ldr	x20, [x0, #8]
  40bd38:	bl	402d10 <free@plt>
  40bd3c:	mov	x0, x20
  40bd40:	cbnz	x20, 40bd34 <ferror@plt+0x8d74>
  40bd44:	ldr	x0, [x19]
  40bd48:	bl	402d10 <free@plt>
  40bd4c:	mov	x0, x19
  40bd50:	bl	402d10 <free@plt>
  40bd54:	ldp	x20, x19, [sp, #32]
  40bd58:	ldr	x21, [sp, #16]
  40bd5c:	ldp	x29, x30, [sp], #48
  40bd60:	ret
  40bd64:	sub	sp, sp, #0x70
  40bd68:	stp	x29, x30, [sp, #80]
  40bd6c:	stp	x20, x19, [sp, #96]
  40bd70:	ldr	x8, [x0, #40]
  40bd74:	mov	x19, x0
  40bd78:	mov	x0, x1
  40bd7c:	add	x29, sp, #0x50
  40bd80:	mov	x1, x8
  40bd84:	bl	40bb94 <ferror@plt+0x8bd4>
  40bd88:	cbz	x0, 40be78 <ferror@plt+0x8eb8>
  40bd8c:	ldr	x8, [x19, #16]
  40bd90:	mov	x20, x0
  40bd94:	cmp	x0, x8
  40bd98:	b.ne	40bda4 <ferror@plt+0x8de4>  // b.any
  40bd9c:	mov	w0, #0x1                   	// #1
  40bda0:	b	40be78 <ferror@plt+0x8eb8>
  40bda4:	mov	w1, #0x10                  	// #16
  40bda8:	mov	x0, x20
  40bdac:	bl	410d54 <ferror@plt+0xdd94>
  40bdb0:	str	x0, [sp]
  40bdb4:	cbz	x0, 40be78 <ferror@plt+0x8eb8>
  40bdb8:	ldr	x8, [sp]
  40bdbc:	stp	xzr, xzr, [sp, #24]
  40bdc0:	mov	x0, sp
  40bdc4:	mov	x1, x19
  40bdc8:	add	x8, x8, x20, lsl #4
  40bdcc:	stp	x8, x20, [sp, #8]
  40bdd0:	ldr	x8, [x19, #40]
  40bdd4:	mov	w2, wzr
  40bdd8:	str	x8, [sp, #40]
  40bddc:	ldr	x8, [x19, #48]
  40bde0:	str	x8, [sp, #48]
  40bde4:	ldr	x8, [x19, #56]
  40bde8:	str	x8, [sp, #56]
  40bdec:	ldr	x8, [x19, #64]
  40bdf0:	str	x8, [sp, #64]
  40bdf4:	ldr	x8, [x19, #72]
  40bdf8:	str	x8, [sp, #72]
  40bdfc:	bl	40be8c <ferror@plt+0x8ecc>
  40be00:	tbz	w0, #0, 40be3c <ferror@plt+0x8e7c>
  40be04:	ldr	x0, [x19]
  40be08:	bl	402d10 <free@plt>
  40be0c:	ldr	x8, [sp]
  40be10:	mov	w0, #0x1                   	// #1
  40be14:	str	x8, [x19]
  40be18:	ldr	x8, [sp, #8]
  40be1c:	str	x8, [x19, #8]
  40be20:	ldr	x8, [sp, #16]
  40be24:	str	x8, [x19, #16]
  40be28:	ldr	x8, [sp, #24]
  40be2c:	str	x8, [x19, #24]
  40be30:	ldr	x8, [sp, #72]
  40be34:	str	x8, [x19, #72]
  40be38:	b	40be78 <ferror@plt+0x8eb8>
  40be3c:	ldr	x8, [sp, #72]
  40be40:	mov	x1, sp
  40be44:	mov	w2, #0x1                   	// #1
  40be48:	mov	x0, x19
  40be4c:	str	x8, [x19, #72]
  40be50:	bl	40be8c <ferror@plt+0x8ecc>
  40be54:	tbz	w0, #0, 40be88 <ferror@plt+0x8ec8>
  40be58:	mov	x1, sp
  40be5c:	mov	x0, x19
  40be60:	mov	w2, wzr
  40be64:	bl	40be8c <ferror@plt+0x8ecc>
  40be68:	tbz	w0, #0, 40be88 <ferror@plt+0x8ec8>
  40be6c:	ldr	x0, [sp]
  40be70:	bl	402d10 <free@plt>
  40be74:	mov	w0, wzr
  40be78:	ldp	x20, x19, [sp, #96]
  40be7c:	ldp	x29, x30, [sp, #80]
  40be80:	add	sp, sp, #0x70
  40be84:	ret
  40be88:	bl	402c00 <abort@plt>
  40be8c:	stp	x29, x30, [sp, #-80]!
  40be90:	str	x25, [sp, #16]
  40be94:	stp	x24, x23, [sp, #32]
  40be98:	stp	x22, x21, [sp, #48]
  40be9c:	stp	x20, x19, [sp, #64]
  40bea0:	ldp	x24, x8, [x1]
  40bea4:	mov	x29, sp
  40bea8:	cmp	x24, x8
  40beac:	b.cs	40bfc8 <ferror@plt+0x9008>  // b.hs, b.nlast
  40beb0:	mov	w19, w2
  40beb4:	mov	x20, x1
  40beb8:	mov	x21, x0
  40bebc:	b	40bee0 <ferror@plt+0x8f20>
  40bec0:	mov	w8, #0x4                   	// #4
  40bec4:	orr	w8, w8, #0x4
  40bec8:	cmp	w8, #0x4
  40becc:	b.ne	40bfd0 <ferror@plt+0x9010>  // b.any
  40bed0:	ldr	x8, [x20, #8]
  40bed4:	add	x24, x24, #0x10
  40bed8:	cmp	x24, x8
  40bedc:	b.cs	40bfc8 <ferror@plt+0x9008>  // b.hs, b.nlast
  40bee0:	ldr	x8, [x24]
  40bee4:	cbz	x8, 40bed0 <ferror@plt+0x8f10>
  40bee8:	ldr	x22, [x24, #8]
  40beec:	cbnz	x22, 40bf18 <ferror@plt+0x8f58>
  40bef0:	b	40bf48 <ferror@plt+0x8f88>
  40bef4:	str	x23, [x0]
  40bef8:	ldr	x8, [x21, #24]
  40befc:	mov	x0, x21
  40bf00:	mov	x1, x22
  40bf04:	add	x8, x8, #0x1
  40bf08:	str	x8, [x21, #24]
  40bf0c:	bl	40c400 <ferror@plt+0x9440>
  40bf10:	mov	x22, x25
  40bf14:	cbz	x25, 40bf48 <ferror@plt+0x8f88>
  40bf18:	ldr	x23, [x22]
  40bf1c:	mov	x0, x21
  40bf20:	mov	x1, x23
  40bf24:	bl	40b794 <ferror@plt+0x87d4>
  40bf28:	ldr	x8, [x0]
  40bf2c:	ldr	x25, [x22, #8]
  40bf30:	cbz	x8, 40bef4 <ferror@plt+0x8f34>
  40bf34:	ldr	x8, [x0, #8]
  40bf38:	str	x8, [x22, #8]
  40bf3c:	str	x22, [x0, #8]
  40bf40:	mov	x22, x25
  40bf44:	cbnz	x25, 40bf18 <ferror@plt+0x8f58>
  40bf48:	ldr	x22, [x24]
  40bf4c:	str	xzr, [x24, #8]
  40bf50:	tbnz	w19, #0, 40bec0 <ferror@plt+0x8f00>
  40bf54:	mov	x0, x21
  40bf58:	mov	x1, x22
  40bf5c:	bl	40b794 <ferror@plt+0x87d4>
  40bf60:	ldr	x8, [x0]
  40bf64:	mov	x23, x0
  40bf68:	cbz	x8, 40bf94 <ferror@plt+0x8fd4>
  40bf6c:	mov	x0, x21
  40bf70:	bl	40c218 <ferror@plt+0x9258>
  40bf74:	cbz	x0, 40bfbc <ferror@plt+0x8ffc>
  40bf78:	str	x22, [x0]
  40bf7c:	ldr	x9, [x23, #8]
  40bf80:	mov	w8, wzr
  40bf84:	str	x9, [x0, #8]
  40bf88:	str	x0, [x23, #8]
  40bf8c:	cbnz	wzr, 40bec4 <ferror@plt+0x8f04>
  40bf90:	b	40bfa4 <ferror@plt+0x8fe4>
  40bf94:	str	x22, [x23]
  40bf98:	ldr	x8, [x21, #24]
  40bf9c:	add	x8, x8, #0x1
  40bfa0:	str	x8, [x21, #24]
  40bfa4:	str	xzr, [x24]
  40bfa8:	ldr	x9, [x20, #24]
  40bfac:	mov	w8, wzr
  40bfb0:	sub	x9, x9, #0x1
  40bfb4:	str	x9, [x20, #24]
  40bfb8:	b	40bec4 <ferror@plt+0x8f04>
  40bfbc:	mov	w8, #0x1                   	// #1
  40bfc0:	cbnz	w8, 40bec4 <ferror@plt+0x8f04>
  40bfc4:	b	40bfa4 <ferror@plt+0x8fe4>
  40bfc8:	mov	w0, #0x1                   	// #1
  40bfcc:	b	40bfd4 <ferror@plt+0x9014>
  40bfd0:	mov	w0, wzr
  40bfd4:	ldp	x20, x19, [sp, #64]
  40bfd8:	ldp	x22, x21, [sp, #48]
  40bfdc:	ldp	x24, x23, [sp, #32]
  40bfe0:	ldr	x25, [sp, #16]
  40bfe4:	ldp	x29, x30, [sp], #80
  40bfe8:	ret
  40bfec:	stp	x29, x30, [sp, #-48]!
  40bff0:	str	x21, [sp, #16]
  40bff4:	stp	x20, x19, [sp, #32]
  40bff8:	mov	x29, sp
  40bffc:	cbz	x1, 40c138 <ferror@plt+0x9178>
  40c000:	mov	x21, x2
  40c004:	add	x2, x29, #0x18
  40c008:	mov	w3, wzr
  40c00c:	mov	x20, x1
  40c010:	mov	x19, x0
  40c014:	bl	40c13c <ferror@plt+0x917c>
  40c018:	cbz	x0, 40c030 <ferror@plt+0x9070>
  40c01c:	cbz	x21, 40c100 <ferror@plt+0x9140>
  40c020:	mov	x8, x0
  40c024:	mov	w0, wzr
  40c028:	str	x8, [x21]
  40c02c:	b	40c128 <ferror@plt+0x9168>
  40c030:	ldr	x8, [x19, #40]
  40c034:	ldp	x10, x9, [x19, #16]
  40c038:	ldr	s0, [x8, #8]
  40c03c:	ucvtf	s2, x10
  40c040:	ucvtf	s1, x9
  40c044:	fmul	s0, s0, s2
  40c048:	fcmp	s0, s1
  40c04c:	b.pl	40c0c8 <ferror@plt+0x9108>  // b.nfrst
  40c050:	mov	x0, x19
  40c054:	bl	40baec <ferror@plt+0x8b2c>
  40c058:	ldr	x8, [x19, #40]
  40c05c:	ldp	x10, x9, [x19, #16]
  40c060:	ldr	s0, [x8, #8]
  40c064:	ucvtf	s1, x10
  40c068:	ucvtf	s2, x9
  40c06c:	fmul	s3, s0, s1
  40c070:	fcmp	s3, s2
  40c074:	b.pl	40c0c8 <ferror@plt+0x9108>  // b.nfrst
  40c078:	ldr	s2, [x8, #12]
  40c07c:	ldrb	w8, [x8, #16]
  40c080:	fmul	s1, s2, s1
  40c084:	cmp	w8, #0x0
  40c088:	fmul	s0, s0, s1
  40c08c:	mov	w8, #0x5f800000            	// #1602224128
  40c090:	fcsel	s0, s0, s1, eq  // eq = none
  40c094:	fmov	s1, w8
  40c098:	fcmp	s0, s1
  40c09c:	b.ge	40c108 <ferror@plt+0x9148>  // b.tcont
  40c0a0:	fcvtzu	x1, s0
  40c0a4:	mov	x0, x19
  40c0a8:	bl	40bd64 <ferror@plt+0x8da4>
  40c0ac:	tbz	w0, #0, 40c108 <ferror@plt+0x9148>
  40c0b0:	add	x2, x29, #0x18
  40c0b4:	mov	x0, x19
  40c0b8:	mov	x1, x20
  40c0bc:	mov	w3, wzr
  40c0c0:	bl	40c13c <ferror@plt+0x917c>
  40c0c4:	cbnz	x0, 40c138 <ferror@plt+0x9178>
  40c0c8:	ldr	x21, [x29, #24]
  40c0cc:	ldr	x8, [x21]
  40c0d0:	cbz	x8, 40c110 <ferror@plt+0x9150>
  40c0d4:	mov	x0, x19
  40c0d8:	bl	40c218 <ferror@plt+0x9258>
  40c0dc:	cbz	x0, 40c108 <ferror@plt+0x9148>
  40c0e0:	str	x20, [x0]
  40c0e4:	ldr	x8, [x21, #8]
  40c0e8:	str	x8, [x0, #8]
  40c0ec:	str	x0, [x21, #8]
  40c0f0:	ldr	x8, [x19, #32]
  40c0f4:	add	x8, x8, #0x1
  40c0f8:	str	x8, [x19, #32]
  40c0fc:	b	40c124 <ferror@plt+0x9164>
  40c100:	mov	w0, wzr
  40c104:	b	40c128 <ferror@plt+0x9168>
  40c108:	mov	w0, #0xffffffff            	// #-1
  40c10c:	b	40c128 <ferror@plt+0x9168>
  40c110:	str	x20, [x21]
  40c114:	ldp	x9, x8, [x19, #24]
  40c118:	add	x8, x8, #0x1
  40c11c:	add	x9, x9, #0x1
  40c120:	stp	x9, x8, [x19, #24]
  40c124:	mov	w0, #0x1                   	// #1
  40c128:	ldp	x20, x19, [sp, #32]
  40c12c:	ldr	x21, [sp, #16]
  40c130:	ldp	x29, x30, [sp], #48
  40c134:	ret
  40c138:	bl	402c00 <abort@plt>
  40c13c:	stp	x29, x30, [sp, #-64]!
  40c140:	str	x23, [sp, #16]
  40c144:	stp	x22, x21, [sp, #32]
  40c148:	stp	x20, x19, [sp, #48]
  40c14c:	mov	x29, sp
  40c150:	mov	w21, w3
  40c154:	mov	x23, x2
  40c158:	mov	x22, x1
  40c15c:	mov	x19, x0
  40c160:	bl	40b794 <ferror@plt+0x87d4>
  40c164:	str	x0, [x23]
  40c168:	ldr	x1, [x0]
  40c16c:	cbz	x1, 40c1d4 <ferror@plt+0x9214>
  40c170:	mov	x20, x0
  40c174:	cmp	x1, x22
  40c178:	b.eq	40c18c <ferror@plt+0x91cc>  // b.none
  40c17c:	ldr	x8, [x19, #56]
  40c180:	mov	x0, x22
  40c184:	blr	x8
  40c188:	tbz	w0, #0, 40c1a8 <ferror@plt+0x91e8>
  40c18c:	ldr	x22, [x20]
  40c190:	tbz	w21, #0, 40c200 <ferror@plt+0x9240>
  40c194:	ldr	x1, [x20, #8]
  40c198:	cbz	x1, 40c1fc <ferror@plt+0x923c>
  40c19c:	ldr	q0, [x1]
  40c1a0:	str	q0, [x20]
  40c1a4:	b	40c1f0 <ferror@plt+0x9230>
  40c1a8:	ldr	x8, [x20, #8]!
  40c1ac:	cbz	x8, 40c1d4 <ferror@plt+0x9214>
  40c1b0:	ldr	x1, [x8]
  40c1b4:	cmp	x1, x22
  40c1b8:	b.eq	40c1dc <ferror@plt+0x921c>  // b.none
  40c1bc:	ldr	x8, [x19, #56]
  40c1c0:	mov	x0, x22
  40c1c4:	blr	x8
  40c1c8:	tbnz	w0, #0, 40c1dc <ferror@plt+0x921c>
  40c1cc:	ldr	x20, [x20]
  40c1d0:	b	40c1a8 <ferror@plt+0x91e8>
  40c1d4:	mov	x22, xzr
  40c1d8:	b	40c200 <ferror@plt+0x9240>
  40c1dc:	ldr	x1, [x20]
  40c1e0:	ldr	x22, [x1]
  40c1e4:	tbz	w21, #0, 40c200 <ferror@plt+0x9240>
  40c1e8:	ldr	x8, [x1, #8]
  40c1ec:	str	x8, [x20]
  40c1f0:	mov	x0, x19
  40c1f4:	bl	40c400 <ferror@plt+0x9440>
  40c1f8:	b	40c200 <ferror@plt+0x9240>
  40c1fc:	str	xzr, [x20]
  40c200:	mov	x0, x22
  40c204:	ldp	x20, x19, [sp, #48]
  40c208:	ldp	x22, x21, [sp, #32]
  40c20c:	ldr	x23, [sp, #16]
  40c210:	ldp	x29, x30, [sp], #64
  40c214:	ret
  40c218:	stp	x29, x30, [sp, #-16]!
  40c21c:	mov	x8, x0
  40c220:	ldr	x0, [x0, #72]
  40c224:	mov	x29, sp
  40c228:	cbz	x0, 40c23c <ferror@plt+0x927c>
  40c22c:	ldr	x9, [x0, #8]
  40c230:	str	x9, [x8, #72]
  40c234:	ldp	x29, x30, [sp], #16
  40c238:	ret
  40c23c:	mov	w0, #0x10                  	// #16
  40c240:	bl	402a40 <malloc@plt>
  40c244:	ldp	x29, x30, [sp], #16
  40c248:	ret
  40c24c:	stp	x29, x30, [sp, #-32]!
  40c250:	mov	x29, sp
  40c254:	add	x2, x29, #0x18
  40c258:	str	x19, [sp, #16]
  40c25c:	mov	x19, x1
  40c260:	bl	40bfec <ferror@plt+0x902c>
  40c264:	ldr	x8, [x29, #24]
  40c268:	cmp	w0, #0x0
  40c26c:	csel	x8, x8, x19, eq  // eq = none
  40c270:	ldr	x19, [sp, #16]
  40c274:	cmn	w0, #0x1
  40c278:	csel	x0, xzr, x8, eq  // eq = none
  40c27c:	ldp	x29, x30, [sp], #32
  40c280:	ret
  40c284:	stp	x29, x30, [sp, #-48]!
  40c288:	mov	x29, sp
  40c28c:	add	x2, x29, #0x18
  40c290:	mov	w3, #0x1                   	// #1
  40c294:	str	x21, [sp, #16]
  40c298:	stp	x20, x19, [sp, #32]
  40c29c:	mov	x20, x0
  40c2a0:	bl	40c13c <ferror@plt+0x917c>
  40c2a4:	mov	x19, x0
  40c2a8:	cbz	x0, 40c358 <ferror@plt+0x9398>
  40c2ac:	ldr	x8, [x20, #32]
  40c2b0:	sub	x8, x8, #0x1
  40c2b4:	str	x8, [x20, #32]
  40c2b8:	ldr	x8, [x29, #24]
  40c2bc:	ldr	x8, [x8]
  40c2c0:	cbnz	x8, 40c358 <ferror@plt+0x9398>
  40c2c4:	ldp	x10, x8, [x20, #16]
  40c2c8:	ldr	x9, [x20, #40]
  40c2cc:	sub	x8, x8, #0x1
  40c2d0:	str	x8, [x20, #24]
  40c2d4:	ldr	s0, [x9]
  40c2d8:	ucvtf	s2, x10
  40c2dc:	ucvtf	s1, x8
  40c2e0:	fmul	s0, s0, s2
  40c2e4:	fcmp	s0, s1
  40c2e8:	b.le	40c358 <ferror@plt+0x9398>
  40c2ec:	mov	x0, x20
  40c2f0:	bl	40baec <ferror@plt+0x8b2c>
  40c2f4:	ldr	x8, [x20, #40]
  40c2f8:	ldp	x10, x9, [x20, #16]
  40c2fc:	ldr	s1, [x8]
  40c300:	ucvtf	s0, x10
  40c304:	ucvtf	s2, x9
  40c308:	fmul	s1, s1, s0
  40c30c:	fcmp	s1, s2
  40c310:	b.le	40c358 <ferror@plt+0x9398>
  40c314:	ldr	s1, [x8, #4]
  40c318:	ldrb	w9, [x8, #16]
  40c31c:	fmul	s0, s1, s0
  40c320:	cbnz	w9, 40c32c <ferror@plt+0x936c>
  40c324:	ldr	s1, [x8, #8]
  40c328:	fmul	s0, s0, s1
  40c32c:	fcvtzu	x1, s0
  40c330:	mov	x0, x20
  40c334:	bl	40bd64 <ferror@plt+0x8da4>
  40c338:	tbnz	w0, #0, 40c358 <ferror@plt+0x9398>
  40c33c:	ldr	x0, [x20, #72]
  40c340:	cbz	x0, 40c354 <ferror@plt+0x9394>
  40c344:	ldr	x21, [x0, #8]
  40c348:	bl	402d10 <free@plt>
  40c34c:	mov	x0, x21
  40c350:	cbnz	x21, 40c344 <ferror@plt+0x9384>
  40c354:	str	xzr, [x20, #72]
  40c358:	mov	x0, x19
  40c35c:	ldp	x20, x19, [sp, #32]
  40c360:	ldr	x21, [sp, #16]
  40c364:	ldp	x29, x30, [sp], #48
  40c368:	ret
  40c36c:	stp	x29, x30, [sp, #-32]!
  40c370:	cmp	x0, #0xa
  40c374:	mov	w8, #0xa                   	// #10
  40c378:	csel	x8, x0, x8, hi  // hi = pmore
  40c37c:	str	x19, [sp, #16]
  40c380:	orr	x19, x8, #0x1
  40c384:	mov	x29, sp
  40c388:	cmn	x19, #0x1
  40c38c:	b.eq	40c3a8 <ferror@plt+0x93e8>  // b.none
  40c390:	mov	x0, x19
  40c394:	bl	40c3b8 <ferror@plt+0x93f8>
  40c398:	tbnz	w0, #0, 40c3a8 <ferror@plt+0x93e8>
  40c39c:	add	x19, x19, #0x2
  40c3a0:	cmn	x19, #0x1
  40c3a4:	b.ne	40c390 <ferror@plt+0x93d0>  // b.any
  40c3a8:	mov	x0, x19
  40c3ac:	ldr	x19, [sp, #16]
  40c3b0:	ldp	x29, x30, [sp], #32
  40c3b4:	ret
  40c3b8:	mov	w8, #0x3                   	// #3
  40c3bc:	cmp	x0, #0xa
  40c3c0:	b.cc	40c3ec <ferror@plt+0x942c>  // b.lo, b.ul, b.last
  40c3c4:	mov	w9, #0x9                   	// #9
  40c3c8:	mov	w10, #0x10                  	// #16
  40c3cc:	udiv	x11, x0, x8
  40c3d0:	msub	x11, x11, x8, x0
  40c3d4:	cbz	x11, 40c3ec <ferror@plt+0x942c>
  40c3d8:	add	x9, x10, x9
  40c3dc:	add	x8, x8, #0x2
  40c3e0:	cmp	x9, x0
  40c3e4:	add	x10, x10, #0x8
  40c3e8:	b.cc	40c3cc <ferror@plt+0x940c>  // b.lo, b.ul, b.last
  40c3ec:	udiv	x9, x0, x8
  40c3f0:	msub	x8, x9, x8, x0
  40c3f4:	cmp	x8, #0x0
  40c3f8:	cset	w0, ne  // ne = any
  40c3fc:	ret
  40c400:	str	xzr, [x1]
  40c404:	ldr	x8, [x0, #72]
  40c408:	str	x8, [x1, #8]
  40c40c:	str	x1, [x0, #72]
  40c410:	ret
  40c414:	stp	x29, x30, [sp, #-48]!
  40c418:	stp	x20, x19, [sp, #32]
  40c41c:	mov	x20, x0
  40c420:	mov	w0, #0x20                  	// #32
  40c424:	str	x21, [sp, #16]
  40c428:	mov	x29, sp
  40c42c:	mov	x19, x1
  40c430:	bl	410160 <ferror@plt+0xd1a0>
  40c434:	cmp	x19, #0x0
  40c438:	csinc	x19, x19, xzr, ne  // ne = any
  40c43c:	mov	x21, x0
  40c440:	mov	w1, #0x8                   	// #8
  40c444:	mov	x0, x19
  40c448:	bl	410134 <ferror@plt+0xd174>
  40c44c:	adrp	x8, 40c000 <ferror@plt+0x9040>
  40c450:	add	x8, x8, #0x47c
  40c454:	cmp	x20, #0x0
  40c458:	csel	x8, x8, x20, eq  // eq = none
  40c45c:	str	xzr, [x0]
  40c460:	stp	x0, x19, [x21]
  40c464:	stp	xzr, x8, [x21, #16]
  40c468:	mov	x0, x21
  40c46c:	ldp	x20, x19, [sp, #32]
  40c470:	ldr	x21, [sp, #16]
  40c474:	ldp	x29, x30, [sp], #48
  40c478:	ret
  40c47c:	mov	w0, wzr
  40c480:	ret
  40c484:	stp	x29, x30, [sp, #-32]!
  40c488:	str	x19, [sp, #16]
  40c48c:	mov	x19, x0
  40c490:	ldr	x0, [x0]
  40c494:	mov	x29, sp
  40c498:	bl	402d10 <free@plt>
  40c49c:	mov	x0, x19
  40c4a0:	bl	402d10 <free@plt>
  40c4a4:	ldr	x19, [sp, #16]
  40c4a8:	ldp	x29, x30, [sp], #32
  40c4ac:	ret
  40c4b0:	stp	x29, x30, [sp, #-32]!
  40c4b4:	stp	x20, x19, [sp, #16]
  40c4b8:	mov	x8, x0
  40c4bc:	ldr	x9, [x8, #8]!
  40c4c0:	mov	x19, x0
  40c4c4:	mov	x20, x1
  40c4c8:	mov	x29, sp
  40c4cc:	ldr	x10, [x8, #8]
  40c4d0:	sub	x9, x9, #0x1
  40c4d4:	cmp	x9, x10
  40c4d8:	b.hi	40c4f0 <ferror@plt+0x9530>  // b.pmore
  40c4dc:	ldr	x0, [x19]
  40c4e0:	mov	w2, #0x8                   	// #8
  40c4e4:	mov	x1, x8
  40c4e8:	bl	4101fc <ferror@plt+0xd23c>
  40c4ec:	str	x0, [x19]
  40c4f0:	ldr	x8, [x19, #16]
  40c4f4:	ldr	x9, [x19]
  40c4f8:	add	x1, x8, #0x1
  40c4fc:	str	x1, [x19, #16]
  40c500:	str	x20, [x9, x1, lsl #3]
  40c504:	ldr	x0, [x19]
  40c508:	ldr	x2, [x19, #24]
  40c50c:	bl	40c520 <ferror@plt+0x9560>
  40c510:	ldp	x20, x19, [sp, #16]
  40c514:	mov	w0, wzr
  40c518:	ldp	x29, x30, [sp], #32
  40c51c:	ret
  40c520:	stp	x29, x30, [sp, #-64]!
  40c524:	stp	x22, x21, [sp, #32]
  40c528:	stp	x20, x19, [sp, #48]
  40c52c:	ldr	x20, [x0, x1, lsl #3]
  40c530:	mov	x21, x1
  40c534:	mov	x19, x0
  40c538:	cmp	x1, #0x1
  40c53c:	str	x23, [sp, #16]
  40c540:	mov	x29, sp
  40c544:	b.ne	40c550 <ferror@plt+0x9590>  // b.any
  40c548:	mov	x23, x21
  40c54c:	b	40c580 <ferror@plt+0x95c0>
  40c550:	mov	x22, x2
  40c554:	lsr	x23, x21, #1
  40c558:	ldr	x0, [x19, x23, lsl #3]
  40c55c:	mov	x1, x20
  40c560:	blr	x22
  40c564:	cmp	w0, #0x0
  40c568:	b.gt	40c548 <ferror@plt+0x9588>
  40c56c:	ldr	x8, [x19, x23, lsl #3]
  40c570:	cmp	x23, #0x1
  40c574:	str	x8, [x19, x21, lsl #3]
  40c578:	mov	x21, x23
  40c57c:	b.ne	40c554 <ferror@plt+0x9594>  // b.any
  40c580:	str	x20, [x19, x23, lsl #3]
  40c584:	ldp	x20, x19, [sp, #48]
  40c588:	ldp	x22, x21, [sp, #32]
  40c58c:	ldr	x23, [sp, #16]
  40c590:	ldp	x29, x30, [sp], #64
  40c594:	ret
  40c598:	stp	x29, x30, [sp, #-32]!
  40c59c:	ldr	x8, [x0, #16]
  40c5a0:	str	x19, [sp, #16]
  40c5a4:	mov	x29, sp
  40c5a8:	cbz	x8, 40c5d8 <ferror@plt+0x9618>
  40c5ac:	ldr	x9, [x0]
  40c5b0:	sub	x1, x8, #0x1
  40c5b4:	ldr	x19, [x9, #8]
  40c5b8:	str	x1, [x0, #16]
  40c5bc:	ldr	x8, [x9, x8, lsl #3]
  40c5c0:	str	x8, [x9, #8]
  40c5c4:	ldr	x8, [x0]
  40c5c8:	ldr	x2, [x0, #24]
  40c5cc:	mov	x0, x8
  40c5d0:	bl	40c5ec <ferror@plt+0x962c>
  40c5d4:	b	40c5dc <ferror@plt+0x961c>
  40c5d8:	mov	x19, xzr
  40c5dc:	mov	x0, x19
  40c5e0:	ldr	x19, [sp, #16]
  40c5e4:	ldp	x29, x30, [sp], #32
  40c5e8:	ret
  40c5ec:	stp	x29, x30, [sp, #-80]!
  40c5f0:	stp	x26, x25, [sp, #16]
  40c5f4:	stp	x24, x23, [sp, #32]
  40c5f8:	stp	x22, x21, [sp, #48]
  40c5fc:	stp	x20, x19, [sp, #64]
  40c600:	ldr	x20, [x0, #8]
  40c604:	mov	x21, x2
  40c608:	mov	x22, x1
  40c60c:	mov	x19, x0
  40c610:	lsr	x24, x1, #1
  40c614:	mov	w23, #0x1                   	// #1
  40c618:	mov	x29, sp
  40c61c:	b	40c628 <ferror@plt+0x9668>
  40c620:	mov	w8, wzr
  40c624:	tbz	w8, #0, 40c67c <ferror@plt+0x96bc>
  40c628:	cmp	x23, x24
  40c62c:	b.hi	40c67c <ferror@plt+0x96bc>  // b.pmore
  40c630:	lsl	x25, x23, #1
  40c634:	cmp	x25, x22
  40c638:	b.cs	40c654 <ferror@plt+0x9694>  // b.hs, b.nlast
  40c63c:	orr	x26, x25, #0x1
  40c640:	ldr	x0, [x19, x25, lsl #3]
  40c644:	ldr	x1, [x19, x26, lsl #3]
  40c648:	blr	x21
  40c64c:	cmp	w0, #0x0
  40c650:	csel	x25, x26, x25, lt  // lt = tstop
  40c654:	ldr	x0, [x19, x25, lsl #3]
  40c658:	mov	x1, x20
  40c65c:	blr	x21
  40c660:	cmp	w0, #0x1
  40c664:	b.lt	40c620 <ferror@plt+0x9660>  // b.tstop
  40c668:	ldr	x8, [x19, x25, lsl #3]
  40c66c:	str	x8, [x19, x23, lsl #3]
  40c670:	mov	w8, #0x1                   	// #1
  40c674:	mov	x23, x25
  40c678:	tbnz	w8, #0, 40c628 <ferror@plt+0x9668>
  40c67c:	str	x20, [x19, x23, lsl #3]
  40c680:	ldp	x20, x19, [sp, #64]
  40c684:	ldp	x22, x21, [sp, #48]
  40c688:	ldp	x24, x23, [sp, #32]
  40c68c:	ldp	x26, x25, [sp, #16]
  40c690:	ldp	x29, x30, [sp], #80
  40c694:	ret
  40c698:	mov	w8, w0
  40c69c:	mov	x0, x1
  40c6a0:	strb	wzr, [x0, #11]!
  40c6a4:	tbnz	w8, #31, 40c6e4 <ferror@plt+0x9724>
  40c6a8:	mov	w9, #0x6667                	// #26215
  40c6ac:	movk	w9, #0x6666, lsl #16
  40c6b0:	mov	w10, #0xa                   	// #10
  40c6b4:	smull	x11, w8, w9
  40c6b8:	lsr	x13, x11, #63
  40c6bc:	asr	x11, x11, #34
  40c6c0:	add	w11, w11, w13
  40c6c4:	add	w12, w8, #0x9
  40c6c8:	msub	w8, w11, w10, w8
  40c6cc:	add	w8, w8, #0x30
  40c6d0:	cmp	w12, #0x12
  40c6d4:	strb	w8, [x0, #-1]!
  40c6d8:	mov	w8, w11
  40c6dc:	b.hi	40c6b4 <ferror@plt+0x96f4>  // b.pmore
  40c6e0:	ret
  40c6e4:	mov	w9, #0x6667                	// #26215
  40c6e8:	add	x0, x1, #0xa
  40c6ec:	movk	w9, #0x6666, lsl #16
  40c6f0:	mov	w10, #0xa                   	// #10
  40c6f4:	smull	x11, w8, w9
  40c6f8:	lsr	x13, x11, #63
  40c6fc:	asr	x11, x11, #34
  40c700:	neg	w12, w8
  40c704:	add	w11, w11, w13
  40c708:	madd	w12, w11, w10, w12
  40c70c:	add	w8, w8, #0x9
  40c710:	add	w12, w12, #0x30
  40c714:	cmp	w8, #0x12
  40c718:	strb	w12, [x0], #-1
  40c71c:	mov	w8, w11
  40c720:	b.hi	40c6f4 <ferror@plt+0x9734>  // b.pmore
  40c724:	mov	w8, #0x2d                  	// #45
  40c728:	strb	w8, [x0]
  40c72c:	ret
  40c730:	mov	w8, #0xcccd                	// #52429
  40c734:	movk	w8, #0xcccc, lsl #16
  40c738:	strb	wzr, [x1, #10]!
  40c73c:	mov	w9, #0xa                   	// #10
  40c740:	umull	x10, w0, w8
  40c744:	lsr	x10, x10, #35
  40c748:	msub	w11, w10, w9, w0
  40c74c:	orr	w11, w11, #0x30
  40c750:	cmp	w0, #0x9
  40c754:	strb	w11, [x1, #-1]!
  40c758:	mov	w0, w10
  40c75c:	b.hi	40c740 <ferror@plt+0x9780>  // b.pmore
  40c760:	mov	x0, x1
  40c764:	ret
  40c768:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40c76c:	movk	x8, #0xcccd
  40c770:	strb	wzr, [x1, #20]!
  40c774:	mov	w9, #0xa                   	// #10
  40c778:	umulh	x10, x0, x8
  40c77c:	lsr	x10, x10, #3
  40c780:	msub	w11, w10, w9, w0
  40c784:	orr	w11, w11, #0x30
  40c788:	cmp	x0, #0x9
  40c78c:	strb	w11, [x1, #-1]!
  40c790:	mov	x0, x10
  40c794:	b.hi	40c778 <ferror@plt+0x97b8>  // b.pmore
  40c798:	mov	x0, x1
  40c79c:	ret
  40c7a0:	stp	x29, x30, [sp, #-32]!
  40c7a4:	stp	x20, x19, [sp, #16]
  40c7a8:	mov	x29, sp
  40c7ac:	mov	w19, w1
  40c7b0:	mov	x20, x0
  40c7b4:	bl	4028b0 <strlen@plt>
  40c7b8:	mov	x1, x0
  40c7bc:	mov	x0, x20
  40c7c0:	mov	w2, w19
  40c7c4:	bl	40c7d4 <ferror@plt+0x9814>
  40c7c8:	ldp	x20, x19, [sp, #16]
  40c7cc:	ldp	x29, x30, [sp], #32
  40c7d0:	ret
  40c7d4:	sub	sp, sp, #0x70
  40c7d8:	stp	x29, x30, [sp, #16]
  40c7dc:	stp	x28, x27, [sp, #32]
  40c7e0:	stp	x26, x25, [sp, #48]
  40c7e4:	stp	x24, x23, [sp, #64]
  40c7e8:	stp	x22, x21, [sp, #80]
  40c7ec:	stp	x20, x19, [sp, #96]
  40c7f0:	add	x29, sp, #0x10
  40c7f4:	mov	w20, w2
  40c7f8:	mov	x19, x1
  40c7fc:	mov	x21, x0
  40c800:	add	x23, x0, x1
  40c804:	bl	402d20 <__ctype_get_mb_cur_max@plt>
  40c808:	cmp	x0, #0x1
  40c80c:	b.ls	40c978 <ferror@plt+0x99b8>  // b.plast
  40c810:	cmp	x19, #0x1
  40c814:	b.lt	40c9cc <ferror@plt+0x9a0c>  // b.tstop
  40c818:	and	w24, w20, #0x1
  40c81c:	tst	w20, #0x1
  40c820:	mov	w8, #0x5                   	// #5
  40c824:	adrp	x28, 414000 <_obstack_memory_used@@Base+0x29a4>
  40c828:	mov	w19, wzr
  40c82c:	mov	w25, #0x7fffffff            	// #2147483647
  40c830:	eor	w26, w24, #0x1
  40c834:	csinc	w27, w8, wzr, eq  // eq = none
  40c838:	add	x28, x28, #0x7bc
  40c83c:	ldrb	w8, [x21]
  40c840:	sub	w8, w8, #0x20
  40c844:	cmp	w8, #0x5e
  40c848:	b.hi	40c870 <ferror@plt+0x98b0>  // b.pmore
  40c84c:	adr	x9, 40c85c <ferror@plt+0x989c>
  40c850:	ldrb	w10, [x28, x8]
  40c854:	add	x9, x9, x10, lsl #2
  40c858:	br	x9
  40c85c:	add	x21, x21, #0x1
  40c860:	add	w19, w19, #0x1
  40c864:	cmp	x21, x23
  40c868:	b.cc	40c83c <ferror@plt+0x987c>  // b.lo, b.ul, b.last
  40c86c:	b	40c9d8 <ferror@plt+0x9a18>
  40c870:	str	xzr, [sp, #8]
  40c874:	b	40c898 <ferror@plt+0x98d8>
  40c878:	cmp	w24, #0x0
  40c87c:	add	w19, w19, w26
  40c880:	csel	x21, x23, x21, eq  // eq = none
  40c884:	mov	w8, w27
  40c888:	cbnz	w8, 40c958 <ferror@plt+0x9998>
  40c88c:	add	x0, sp, #0x8
  40c890:	bl	402c40 <mbsinit@plt>
  40c894:	cbnz	w0, 40c960 <ferror@plt+0x99a0>
  40c898:	sub	x2, x23, x21
  40c89c:	add	x0, sp, #0x4
  40c8a0:	add	x3, sp, #0x8
  40c8a4:	mov	x1, x21
  40c8a8:	bl	4111f0 <ferror@plt+0xe230>
  40c8ac:	cmn	x0, #0x2
  40c8b0:	b.eq	40c878 <ferror@plt+0x98b8>  // b.none
  40c8b4:	mov	x22, x0
  40c8b8:	cbz	x0, 40c8dc <ferror@plt+0x991c>
  40c8bc:	cmn	x22, #0x1
  40c8c0:	b.ne	40c8e0 <ferror@plt+0x9920>  // b.any
  40c8c4:	tbnz	w20, #0, 40c930 <ferror@plt+0x9970>
  40c8c8:	add	x21, x21, #0x1
  40c8cc:	add	w19, w19, #0x1
  40c8d0:	mov	w8, #0x5                   	// #5
  40c8d4:	cbz	w8, 40c88c <ferror@plt+0x98cc>
  40c8d8:	b	40c958 <ferror@plt+0x9998>
  40c8dc:	mov	w22, #0x1                   	// #1
  40c8e0:	ldr	w0, [sp, #4]
  40c8e4:	bl	402a60 <wcwidth@plt>
  40c8e8:	tbnz	w0, #31, 40c904 <ferror@plt+0x9944>
  40c8ec:	sub	w8, w25, w19
  40c8f0:	cmp	w0, w8
  40c8f4:	b.le	40c93c <ferror@plt+0x997c>
  40c8f8:	mov	w8, #0x7                   	// #7
  40c8fc:	cbz	w8, 40c88c <ferror@plt+0x98cc>
  40c900:	b	40c958 <ferror@plt+0x9998>
  40c904:	tbnz	w20, #1, 40c930 <ferror@plt+0x9970>
  40c908:	ldr	w0, [sp, #4]
  40c90c:	bl	402940 <iswcntrl@plt>
  40c910:	cbnz	w0, 40c940 <ferror@plt+0x9980>
  40c914:	mov	w8, #0x7fffffff            	// #2147483647
  40c918:	cmp	w19, w8
  40c91c:	b.ne	40c950 <ferror@plt+0x9990>  // b.any
  40c920:	mov	w8, #0x7                   	// #7
  40c924:	mov	w19, #0x7fffffff            	// #2147483647
  40c928:	cbz	w8, 40c88c <ferror@plt+0x98cc>
  40c92c:	b	40c958 <ferror@plt+0x9998>
  40c930:	mov	w8, #0x1                   	// #1
  40c934:	cbz	w8, 40c88c <ferror@plt+0x98cc>
  40c938:	b	40c958 <ferror@plt+0x9998>
  40c93c:	add	w19, w0, w19
  40c940:	mov	w8, wzr
  40c944:	add	x21, x21, x22
  40c948:	cbz	w8, 40c88c <ferror@plt+0x98cc>
  40c94c:	b	40c958 <ferror@plt+0x9998>
  40c950:	add	w19, w19, #0x1
  40c954:	b	40c940 <ferror@plt+0x9980>
  40c958:	cmp	w8, #0x5
  40c95c:	b.ne	40c964 <ferror@plt+0x99a4>  // b.any
  40c960:	mov	w8, wzr
  40c964:	cbz	w8, 40c864 <ferror@plt+0x98a4>
  40c968:	cmp	w8, #0x7
  40c96c:	b.ne	40c9d4 <ferror@plt+0x9a14>  // b.any
  40c970:	mov	w19, #0x7fffffff            	// #2147483647
  40c974:	b	40c9d8 <ferror@plt+0x9a18>
  40c978:	mov	w19, wzr
  40c97c:	mov	w22, #0x7fffffff            	// #2147483647
  40c980:	mov	w24, #0x7                   	// #7
  40c984:	b	40c998 <ferror@plt+0x99d8>
  40c988:	cmp	w19, w22
  40c98c:	cinc	w19, w19, ne  // ne = any
  40c990:	csel	w8, w24, wzr, eq  // eq = none
  40c994:	cbnz	w8, 40c968 <ferror@plt+0x99a8>
  40c998:	cmp	x21, x23
  40c99c:	b.cs	40c9d8 <ferror@plt+0x9a18>  // b.hs, b.nlast
  40c9a0:	ldrb	w25, [x21], #1
  40c9a4:	bl	402cd0 <__ctype_b_loc@plt>
  40c9a8:	ldr	x8, [x0]
  40c9ac:	ldrh	w8, [x8, x25, lsl #1]
  40c9b0:	tbnz	w8, #14, 40c988 <ferror@plt+0x99c8>
  40c9b4:	tbnz	w20, #1, 40c9c4 <ferror@plt+0x9a04>
  40c9b8:	tbz	w8, #1, 40c988 <ferror@plt+0x99c8>
  40c9bc:	mov	w8, wzr
  40c9c0:	b	40c994 <ferror@plt+0x99d4>
  40c9c4:	mov	w8, #0x1                   	// #1
  40c9c8:	b	40c994 <ferror@plt+0x99d4>
  40c9cc:	mov	w19, wzr
  40c9d0:	b	40c9d8 <ferror@plt+0x9a18>
  40c9d4:	mov	w19, #0xffffffff            	// #-1
  40c9d8:	mov	w0, w19
  40c9dc:	ldp	x20, x19, [sp, #96]
  40c9e0:	ldp	x22, x21, [sp, #80]
  40c9e4:	ldp	x24, x23, [sp, #64]
  40c9e8:	ldp	x26, x25, [sp, #48]
  40c9ec:	ldp	x28, x27, [sp, #32]
  40c9f0:	ldp	x29, x30, [sp, #16]
  40c9f4:	add	sp, sp, #0x70
  40c9f8:	ret
  40c9fc:	stp	x29, x30, [sp, #-32]!
  40ca00:	cmp	w0, #0x2
  40ca04:	stp	x20, x19, [sp, #16]
  40ca08:	mov	x29, sp
  40ca0c:	b.ne	40ca58 <ferror@plt+0x9a98>  // b.any
  40ca10:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ca14:	add	x0, x0, #0x81b
  40ca18:	bl	402f50 <getenv@plt>
  40ca1c:	bl	40ca78 <ferror@plt+0x9ab8>
  40ca20:	mov	x19, x0
  40ca24:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ca28:	add	x0, x0, #0x82b
  40ca2c:	bl	402f50 <getenv@plt>
  40ca30:	bl	40ca78 <ferror@plt+0x9ab8>
  40ca34:	cmp	x0, #0x0
  40ca38:	csinv	x20, x0, xzr, ne  // ne = any
  40ca3c:	cmp	x19, x20
  40ca40:	csel	x8, x19, x20, cc  // cc = lo, ul, last
  40ca44:	cmp	x19, #0x0
  40ca48:	mov	w9, #0x1                   	// #1
  40ca4c:	cinc	w0, w9, ne  // ne = any
  40ca50:	cbnz	x19, 40ca68 <ferror@plt+0x9aa8>
  40ca54:	b	40ca5c <ferror@plt+0x9a9c>
  40ca58:	mov	x20, #0xffffffffffffffff    	// #-1
  40ca5c:	bl	40cb44 <ferror@plt+0x9b84>
  40ca60:	cmp	x0, x20
  40ca64:	csel	x8, x0, x20, cc  // cc = lo, ul, last
  40ca68:	ldp	x20, x19, [sp, #16]
  40ca6c:	mov	x0, x8
  40ca70:	ldp	x29, x30, [sp], #32
  40ca74:	ret
  40ca78:	stp	x29, x30, [sp, #-48]!
  40ca7c:	stp	x20, x19, [sp, #32]
  40ca80:	mov	x19, x0
  40ca84:	str	x21, [sp, #16]
  40ca88:	mov	x29, sp
  40ca8c:	cbz	x0, 40cb30 <ferror@plt+0x9b70>
  40ca90:	ldrb	w8, [x19]
  40ca94:	cbz	w8, 40caac <ferror@plt+0x9aec>
  40ca98:	and	w0, w8, #0xff
  40ca9c:	bl	4118c4 <_obstack_memory_used@@Base+0x268>
  40caa0:	tbz	w0, #0, 40caac <ferror@plt+0x9aec>
  40caa4:	ldrb	w8, [x19, #1]!
  40caa8:	cbnz	w8, 40ca98 <ferror@plt+0x9ad8>
  40caac:	ldrb	w0, [x19]
  40cab0:	bl	411850 <_obstack_memory_used@@Base+0x1f4>
  40cab4:	tbz	w0, #0, 40cb2c <ferror@plt+0x9b6c>
  40cab8:	add	x1, x29, #0x18
  40cabc:	mov	w2, #0xa                   	// #10
  40cac0:	mov	x0, x19
  40cac4:	str	xzr, [x29, #24]
  40cac8:	bl	4028a0 <strtoul@plt>
  40cacc:	ldr	x8, [x29, #24]
  40cad0:	cbz	x8, 40cb2c <ferror@plt+0x9b6c>
  40cad4:	ldr	x20, [x29, #24]
  40cad8:	mov	x19, x0
  40cadc:	ldrb	w0, [x20]
  40cae0:	cbz	w0, 40cb1c <ferror@plt+0x9b5c>
  40cae4:	ldr	x21, [x29, #24]
  40cae8:	bl	4118c4 <_obstack_memory_used@@Base+0x268>
  40caec:	tbz	w0, #0, 40cb10 <ferror@plt+0x9b50>
  40caf0:	add	x20, x20, #0x1
  40caf4:	ldrb	w0, [x20]
  40caf8:	cbz	w0, 40cb18 <ferror@plt+0x9b58>
  40cafc:	bl	4118c4 <_obstack_memory_used@@Base+0x268>
  40cb00:	add	x20, x20, #0x1
  40cb04:	tbnz	w0, #0, 40caf4 <ferror@plt+0x9b34>
  40cb08:	sub	x21, x20, #0x1
  40cb0c:	mov	x20, x21
  40cb10:	str	x21, [x29, #24]
  40cb14:	b	40cb1c <ferror@plt+0x9b5c>
  40cb18:	str	x20, [x29, #24]
  40cb1c:	ldrb	w8, [x20]
  40cb20:	cmp	w8, #0x2c
  40cb24:	b.eq	40cb30 <ferror@plt+0x9b70>  // b.none
  40cb28:	cbz	w8, 40cb30 <ferror@plt+0x9b70>
  40cb2c:	mov	x19, xzr
  40cb30:	mov	x0, x19
  40cb34:	ldp	x20, x19, [sp, #32]
  40cb38:	ldr	x21, [sp, #16]
  40cb3c:	ldp	x29, x30, [sp], #48
  40cb40:	ret
  40cb44:	stp	x29, x30, [sp, #-32]!
  40cb48:	cmp	w0, #0x1
  40cb4c:	str	x19, [sp, #16]
  40cb50:	mov	x29, sp
  40cb54:	b.ne	40cb7c <ferror@plt+0x9bbc>  // b.any
  40cb58:	bl	40cbb8 <ferror@plt+0x9bf8>
  40cb5c:	mov	x19, x0
  40cb60:	cbnz	x0, 40cba8 <ferror@plt+0x9be8>
  40cb64:	mov	w0, #0x54                  	// #84
  40cb68:	bl	402e70 <sysconf@plt>
  40cb6c:	cmp	x0, #0x0
  40cb70:	csel	x19, x0, x19, gt
  40cb74:	b.gt	40cba8 <ferror@plt+0x9be8>
  40cb78:	b	40cba4 <ferror@plt+0x9be4>
  40cb7c:	mov	w0, #0x53                  	// #83
  40cb80:	bl	402e70 <sysconf@plt>
  40cb84:	mov	x19, x0
  40cb88:	cmp	x0, #0x1
  40cb8c:	b.ne	40cb9c <ferror@plt+0x9bdc>  // b.any
  40cb90:	bl	40cbb8 <ferror@plt+0x9bf8>
  40cb94:	cmp	x0, #0x0
  40cb98:	csinc	x19, x0, xzr, ne  // ne = any
  40cb9c:	cmp	x19, #0x0
  40cba0:	b.gt	40cba8 <ferror@plt+0x9be8>
  40cba4:	mov	w19, #0x1                   	// #1
  40cba8:	mov	x0, x19
  40cbac:	ldr	x19, [sp, #16]
  40cbb0:	ldp	x29, x30, [sp], #32
  40cbb4:	ret
  40cbb8:	sub	sp, sp, #0x90
  40cbbc:	mov	x2, sp
  40cbc0:	mov	w1, #0x80                  	// #128
  40cbc4:	mov	w0, wzr
  40cbc8:	stp	x29, x30, [sp, #128]
  40cbcc:	add	x29, sp, #0x80
  40cbd0:	bl	402c20 <sched_getaffinity@plt>
  40cbd4:	cbnz	w0, 40cbf4 <ferror@plt+0x9c34>
  40cbd8:	mov	x1, sp
  40cbdc:	mov	w0, #0x80                  	// #128
  40cbe0:	bl	402db0 <__sched_cpucount@plt>
  40cbe4:	cmp	w0, #0x0
  40cbe8:	sxtw	x8, w0
  40cbec:	cset	w9, ne  // ne = any
  40cbf0:	cbnz	w0, 40cbf8 <ferror@plt+0x9c38>
  40cbf4:	mov	w9, wzr
  40cbf8:	ldp	x29, x30, [sp, #128]
  40cbfc:	cmp	w9, #0x0
  40cc00:	csel	x0, xzr, x8, eq  // eq = none
  40cc04:	add	sp, sp, #0x90
  40cc08:	ret
  40cc0c:	sub	sp, sp, #0x90
  40cc10:	mov	w0, #0x55                  	// #85
  40cc14:	stp	x29, x30, [sp, #112]
  40cc18:	str	x19, [sp, #128]
  40cc1c:	add	x29, sp, #0x70
  40cc20:	bl	402e70 <sysconf@plt>
  40cc24:	mov	x19, x0
  40cc28:	mov	w0, #0x1e                  	// #30
  40cc2c:	bl	402e70 <sysconf@plt>
  40cc30:	orr	x8, x0, x19
  40cc34:	tbnz	x8, #63, 40cc48 <ferror@plt+0x9c88>
  40cc38:	scvtf	d0, x19
  40cc3c:	scvtf	d1, x0
  40cc40:	fmul	d0, d0, d1
  40cc44:	b	40cc5c <ferror@plt+0x9c9c>
  40cc48:	mov	x0, sp
  40cc4c:	bl	4028f0 <sysinfo@plt>
  40cc50:	cbz	w0, 40cc6c <ferror@plt+0x9cac>
  40cc54:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40cc58:	fmov	d0, x8
  40cc5c:	ldr	x19, [sp, #128]
  40cc60:	ldp	x29, x30, [sp, #112]
  40cc64:	add	sp, sp, #0x90
  40cc68:	ret
  40cc6c:	ldr	d0, [sp, #32]
  40cc70:	ldr	s1, [sp, #104]
  40cc74:	ucvtf	d0, d0
  40cc78:	ucvtf	d1, d1
  40cc7c:	b	40cc40 <ferror@plt+0x9c80>
  40cc80:	sub	sp, sp, #0x90
  40cc84:	mov	w0, #0x56                  	// #86
  40cc88:	str	d8, [sp, #112]
  40cc8c:	stp	x29, x30, [sp, #120]
  40cc90:	str	x19, [sp, #136]
  40cc94:	add	x29, sp, #0x70
  40cc98:	bl	402e70 <sysconf@plt>
  40cc9c:	mov	x19, x0
  40cca0:	mov	w0, #0x1e                  	// #30
  40cca4:	bl	402e70 <sysconf@plt>
  40cca8:	scvtf	d0, x0
  40ccac:	scvtf	d1, x19
  40ccb0:	orr	x8, x0, x19
  40ccb4:	fmul	d8, d1, d0
  40ccb8:	tbz	x8, #63, 40ccdc <ferror@plt+0x9d1c>
  40ccbc:	mov	x0, sp
  40ccc0:	bl	4028f0 <sysinfo@plt>
  40ccc4:	cbz	w0, 40ccf4 <ferror@plt+0x9d34>
  40ccc8:	mov	w8, #0x1                   	// #1
  40cccc:	cbz	w8, 40ccdc <ferror@plt+0x9d1c>
  40ccd0:	bl	40cc0c <ferror@plt+0x9c4c>
  40ccd4:	fmov	d1, #2.500000000000000000e-01
  40ccd8:	fmul	d8, d0, d1
  40ccdc:	mov	v0.16b, v8.16b
  40cce0:	ldr	x19, [sp, #136]
  40cce4:	ldp	x29, x30, [sp, #120]
  40cce8:	ldr	d8, [sp, #112]
  40ccec:	add	sp, sp, #0x90
  40ccf0:	ret
  40ccf4:	ldr	d0, [sp, #40]
  40ccf8:	ldr	d1, [sp, #56]
  40ccfc:	ldr	s2, [sp, #104]
  40cd00:	mov	w8, wzr
  40cd04:	ucvtf	d0, d0
  40cd08:	ucvtf	d1, d1
  40cd0c:	fadd	d0, d0, d1
  40cd10:	ucvtf	d1, d2
  40cd14:	fmul	d8, d0, d1
  40cd18:	cbnz	w8, 40ccd0 <ferror@plt+0x9d10>
  40cd1c:	b	40ccdc <ferror@plt+0x9d1c>
  40cd20:	stp	x29, x30, [sp, #-64]!
  40cd24:	stp	x24, x23, [sp, #16]
  40cd28:	stp	x22, x21, [sp, #32]
  40cd2c:	stp	x20, x19, [sp, #48]
  40cd30:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x149a4>
  40cd34:	ldr	w8, [x24, #3020]
  40cd38:	ldp	w23, w22, [x0]
  40cd3c:	mov	x19, x0
  40cd40:	mov	w20, w1
  40cd44:	mov	x29, sp
  40cd48:	tbnz	w8, #31, 40cd78 <ferror@plt+0x9db8>
  40cd4c:	mov	x0, x19
  40cd50:	mov	w1, w20
  40cd54:	bl	402c50 <pipe2@plt>
  40cd58:	mov	w21, w0
  40cd5c:	tbz	w0, #31, 40cd9c <ferror@plt+0x9ddc>
  40cd60:	bl	402f30 <__errno_location@plt>
  40cd64:	ldr	w8, [x0]
  40cd68:	cmp	w8, #0x26
  40cd6c:	b.ne	40cd9c <ferror@plt+0x9ddc>  // b.any
  40cd70:	mov	w8, #0xffffffff            	// #-1
  40cd74:	str	w8, [x24, #3020]
  40cd78:	mov	w8, #0xf7ff                	// #63487
  40cd7c:	movk	w8, #0xfff7, lsl #16
  40cd80:	tst	w20, w8
  40cd84:	b.eq	40cdbc <ferror@plt+0x9dfc>  // b.none
  40cd88:	bl	402f30 <__errno_location@plt>
  40cd8c:	mov	w8, #0x16                  	// #22
  40cd90:	str	w8, [x0]
  40cd94:	mov	w21, #0xffffffff            	// #-1
  40cd98:	b	40cda4 <ferror@plt+0x9de4>
  40cd9c:	mov	w8, #0x1                   	// #1
  40cda0:	str	w8, [x24, #3020]
  40cda4:	mov	w0, w21
  40cda8:	ldp	x20, x19, [sp, #48]
  40cdac:	ldp	x22, x21, [sp, #32]
  40cdb0:	ldp	x24, x23, [sp, #16]
  40cdb4:	ldp	x29, x30, [sp], #64
  40cdb8:	ret
  40cdbc:	mov	x0, x19
  40cdc0:	bl	402920 <pipe@plt>
  40cdc4:	tbnz	w0, #31, 40cd94 <ferror@plt+0x9dd4>
  40cdc8:	tbnz	w20, #11, 40cdd8 <ferror@plt+0x9e18>
  40cdcc:	tbnz	w20, #19, 40ce3c <ferror@plt+0x9e7c>
  40cdd0:	mov	w21, wzr
  40cdd4:	b	40cda4 <ferror@plt+0x9de4>
  40cdd8:	ldr	w0, [x19, #4]
  40cddc:	mov	w1, #0x3                   	// #3
  40cde0:	mov	w2, wzr
  40cde4:	bl	410e38 <ferror@plt+0xde78>
  40cde8:	tbnz	w0, #31, 40ce9c <ferror@plt+0x9edc>
  40cdec:	ldr	w8, [x19, #4]
  40cdf0:	orr	w2, w0, #0x800
  40cdf4:	mov	w1, #0x4                   	// #4
  40cdf8:	mov	w0, w8
  40cdfc:	bl	410e38 <ferror@plt+0xde78>
  40ce00:	cmn	w0, #0x1
  40ce04:	b.eq	40ce9c <ferror@plt+0x9edc>  // b.none
  40ce08:	ldr	w0, [x19]
  40ce0c:	mov	w1, #0x3                   	// #3
  40ce10:	mov	w2, wzr
  40ce14:	bl	410e38 <ferror@plt+0xde78>
  40ce18:	tbnz	w0, #31, 40ce9c <ferror@plt+0x9edc>
  40ce1c:	ldr	w8, [x19]
  40ce20:	orr	w2, w0, #0x800
  40ce24:	mov	w1, #0x4                   	// #4
  40ce28:	mov	w0, w8
  40ce2c:	bl	410e38 <ferror@plt+0xde78>
  40ce30:	cmn	w0, #0x1
  40ce34:	b.ne	40cdcc <ferror@plt+0x9e0c>  // b.any
  40ce38:	b	40ce9c <ferror@plt+0x9edc>
  40ce3c:	ldr	w0, [x19, #4]
  40ce40:	mov	w1, #0x1                   	// #1
  40ce44:	mov	w2, wzr
  40ce48:	bl	410e38 <ferror@plt+0xde78>
  40ce4c:	tbnz	w0, #31, 40ce9c <ferror@plt+0x9edc>
  40ce50:	ldr	w8, [x19, #4]
  40ce54:	orr	w2, w0, #0x1
  40ce58:	mov	w1, #0x2                   	// #2
  40ce5c:	mov	w0, w8
  40ce60:	bl	410e38 <ferror@plt+0xde78>
  40ce64:	cmn	w0, #0x1
  40ce68:	b.eq	40ce9c <ferror@plt+0x9edc>  // b.none
  40ce6c:	ldr	w0, [x19]
  40ce70:	mov	w1, #0x1                   	// #1
  40ce74:	mov	w2, wzr
  40ce78:	bl	410e38 <ferror@plt+0xde78>
  40ce7c:	tbnz	w0, #31, 40ce9c <ferror@plt+0x9edc>
  40ce80:	ldr	w8, [x19]
  40ce84:	orr	w2, w0, #0x1
  40ce88:	mov	w1, #0x2                   	// #2
  40ce8c:	mov	w0, w8
  40ce90:	bl	410e38 <ferror@plt+0xde78>
  40ce94:	cmn	w0, #0x1
  40ce98:	b.ne	40cdd0 <ferror@plt+0x9e10>  // b.any
  40ce9c:	bl	402f30 <__errno_location@plt>
  40cea0:	mov	x20, x0
  40cea4:	ldr	w21, [x0]
  40cea8:	ldr	w0, [x19]
  40ceac:	bl	402b80 <close@plt>
  40ceb0:	ldr	w0, [x19, #4]
  40ceb4:	bl	402b80 <close@plt>
  40ceb8:	stp	w23, w22, [x19]
  40cebc:	str	w21, [x20]
  40cec0:	b	40cd94 <ferror@plt+0x9dd4>
  40cec4:	stp	x29, x30, [sp, #-32]!
  40cec8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40cecc:	str	x19, [sp, #16]
  40ced0:	mov	w19, #0x1069                	// #4201
  40ced4:	add	x0, x0, #0x83c
  40ced8:	mov	x29, sp
  40cedc:	movk	w19, #0x3, lsl #16
  40cee0:	bl	402f50 <getenv@plt>
  40cee4:	cbz	x0, 40cf0c <ferror@plt+0x9f4c>
  40cee8:	ldrb	w8, [x0]
  40ceec:	cbz	w8, 40cf0c <ferror@plt+0x9f4c>
  40cef0:	add	x1, x29, #0x18
  40cef4:	mov	w2, #0xa                   	// #10
  40cef8:	bl	402ce0 <strtol@plt>
  40cefc:	ldr	x8, [x29, #24]
  40cf00:	ldrb	w8, [x8]
  40cf04:	cmp	w8, #0x0
  40cf08:	csel	x19, x0, x19, eq  // eq = none
  40cf0c:	mov	w8, #0x7fffffff            	// #2147483647
  40cf10:	cmp	x19, x8
  40cf14:	csel	x8, x19, x8, lt  // lt = tstop
  40cf18:	ldr	x19, [sp, #16]
  40cf1c:	mov	x9, #0xffffffff80000000    	// #-2147483648
  40cf20:	cmp	x8, x9
  40cf24:	mov	w9, #0x80000000            	// #-2147483648
  40cf28:	csel	w0, w8, w9, gt
  40cf2c:	ldp	x29, x30, [sp], #32
  40cf30:	ret
  40cf34:	stp	x29, x30, [sp, #-32]!
  40cf38:	stp	x20, x19, [sp, #16]
  40cf3c:	mov	x29, sp
  40cf40:	cbz	x0, 40cfc0 <ferror@plt+0xa000>
  40cf44:	mov	w1, #0x2f                  	// #47
  40cf48:	mov	x19, x0
  40cf4c:	bl	402ba0 <strrchr@plt>
  40cf50:	cmp	x0, #0x0
  40cf54:	csinc	x20, x19, x0, eq  // eq = none
  40cf58:	sub	x8, x20, x19
  40cf5c:	cmp	x8, #0x7
  40cf60:	b.lt	40cfa4 <ferror@plt+0x9fe4>  // b.tstop
  40cf64:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40cf68:	sub	x0, x20, #0x7
  40cf6c:	add	x1, x1, #0x884
  40cf70:	mov	w2, #0x7                   	// #7
  40cf74:	bl	402ab0 <strncmp@plt>
  40cf78:	cbnz	w0, 40cfa4 <ferror@plt+0x9fe4>
  40cf7c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40cf80:	add	x1, x1, #0x88c
  40cf84:	mov	w2, #0x3                   	// #3
  40cf88:	mov	x0, x20
  40cf8c:	bl	402ab0 <strncmp@plt>
  40cf90:	mov	x19, x20
  40cf94:	cbnz	w0, 40cfa4 <ferror@plt+0x9fe4>
  40cf98:	add	x19, x20, #0x3
  40cf9c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40cfa0:	str	x19, [x8, #1384]
  40cfa4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40cfa8:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  40cfac:	str	x19, [x8, #3024]
  40cfb0:	str	x19, [x9, #1336]
  40cfb4:	ldp	x20, x19, [sp, #16]
  40cfb8:	ldp	x29, x30, [sp], #32
  40cfbc:	ret
  40cfc0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40cfc4:	ldr	x3, [x8, #1344]
  40cfc8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40cfcc:	add	x0, x0, #0x84c
  40cfd0:	mov	w1, #0x37                  	// #55
  40cfd4:	mov	w2, #0x1                   	// #1
  40cfd8:	bl	402d90 <fwrite@plt>
  40cfdc:	bl	402c00 <abort@plt>
  40cfe0:	stp	x29, x30, [sp, #-48]!
  40cfe4:	str	x21, [sp, #16]
  40cfe8:	stp	x20, x19, [sp, #32]
  40cfec:	mov	x29, sp
  40cff0:	mov	x19, x0
  40cff4:	bl	402f30 <__errno_location@plt>
  40cff8:	ldr	w21, [x0]
  40cffc:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d000:	add	x8, x8, #0xbd8
  40d004:	cmp	x19, #0x0
  40d008:	mov	x20, x0
  40d00c:	csel	x0, x8, x19, eq  // eq = none
  40d010:	mov	w1, #0x38                  	// #56
  40d014:	bl	4102f4 <ferror@plt+0xd334>
  40d018:	str	w21, [x20]
  40d01c:	ldp	x20, x19, [sp, #32]
  40d020:	ldr	x21, [sp, #16]
  40d024:	ldp	x29, x30, [sp], #48
  40d028:	ret
  40d02c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d030:	add	x8, x8, #0xbd8
  40d034:	cmp	x0, #0x0
  40d038:	csel	x8, x8, x0, eq  // eq = none
  40d03c:	ldr	w0, [x8]
  40d040:	ret
  40d044:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d048:	add	x8, x8, #0xbd8
  40d04c:	cmp	x0, #0x0
  40d050:	csel	x8, x8, x0, eq  // eq = none
  40d054:	str	w1, [x8]
  40d058:	ret
  40d05c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d060:	add	x8, x8, #0xbd8
  40d064:	cmp	x0, #0x0
  40d068:	ubfx	w9, w1, #5, #3
  40d06c:	csel	x8, x8, x0, eq  // eq = none
  40d070:	add	x8, x8, w9, uxtw #2
  40d074:	ldr	w9, [x8, #8]
  40d078:	lsr	w10, w9, w1
  40d07c:	and	w0, w10, #0x1
  40d080:	and	w10, w2, #0x1
  40d084:	eor	w10, w0, w10
  40d088:	lsl	w10, w10, w1
  40d08c:	eor	w9, w10, w9
  40d090:	str	w9, [x8, #8]
  40d094:	ret
  40d098:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d09c:	add	x8, x8, #0xbd8
  40d0a0:	cmp	x0, #0x0
  40d0a4:	csel	x8, x8, x0, eq  // eq = none
  40d0a8:	ldr	w0, [x8, #4]
  40d0ac:	str	w1, [x8, #4]
  40d0b0:	ret
  40d0b4:	stp	x29, x30, [sp, #-16]!
  40d0b8:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d0bc:	add	x8, x8, #0xbd8
  40d0c0:	cmp	x0, #0x0
  40d0c4:	csel	x8, x8, x0, eq  // eq = none
  40d0c8:	mov	w9, #0xa                   	// #10
  40d0cc:	mov	x29, sp
  40d0d0:	str	w9, [x8]
  40d0d4:	cbz	x1, 40d0e8 <ferror@plt+0xa128>
  40d0d8:	cbz	x2, 40d0e8 <ferror@plt+0xa128>
  40d0dc:	stp	x1, x2, [x8, #40]
  40d0e0:	ldp	x29, x30, [sp], #16
  40d0e4:	ret
  40d0e8:	bl	402c00 <abort@plt>
  40d0ec:	sub	sp, sp, #0x60
  40d0f0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40d0f4:	add	x8, x8, #0xbd8
  40d0f8:	cmp	x4, #0x0
  40d0fc:	stp	x29, x30, [sp, #16]
  40d100:	str	x25, [sp, #32]
  40d104:	stp	x24, x23, [sp, #48]
  40d108:	stp	x22, x21, [sp, #64]
  40d10c:	stp	x20, x19, [sp, #80]
  40d110:	add	x29, sp, #0x10
  40d114:	mov	x19, x3
  40d118:	mov	x20, x2
  40d11c:	mov	x21, x1
  40d120:	mov	x22, x0
  40d124:	csel	x24, x8, x4, eq  // eq = none
  40d128:	bl	402f30 <__errno_location@plt>
  40d12c:	ldp	w4, w5, [x24]
  40d130:	ldp	x7, x8, [x24, #40]
  40d134:	ldr	w25, [x0]
  40d138:	mov	x23, x0
  40d13c:	add	x6, x24, #0x8
  40d140:	mov	x0, x22
  40d144:	mov	x1, x21
  40d148:	mov	x2, x20
  40d14c:	mov	x3, x19
  40d150:	str	x8, [sp]
  40d154:	bl	40d178 <ferror@plt+0xa1b8>
  40d158:	str	w25, [x23]
  40d15c:	ldp	x20, x19, [sp, #80]
  40d160:	ldp	x22, x21, [sp, #64]
  40d164:	ldp	x24, x23, [sp, #48]
  40d168:	ldr	x25, [sp, #32]
  40d16c:	ldp	x29, x30, [sp, #16]
  40d170:	add	sp, sp, #0x60
  40d174:	ret
  40d178:	sub	sp, sp, #0x120
  40d17c:	stp	x29, x30, [sp, #192]
  40d180:	add	x29, sp, #0xc0
  40d184:	ldr	x8, [x29, #96]
  40d188:	stp	x28, x27, [sp, #208]
  40d18c:	stp	x26, x25, [sp, #224]
  40d190:	stp	x24, x23, [sp, #240]
  40d194:	stp	x22, x21, [sp, #256]
  40d198:	stp	x20, x19, [sp, #272]
  40d19c:	str	x7, [sp, #80]
  40d1a0:	stur	x6, [x29, #-48]
  40d1a4:	mov	w19, w5
  40d1a8:	mov	w20, w4
  40d1ac:	mov	x23, x3
  40d1b0:	mov	x21, x2
  40d1b4:	mov	x27, x1
  40d1b8:	str	x8, [sp, #96]
  40d1bc:	mov	x24, x0
  40d1c0:	bl	402d20 <__ctype_get_mb_cur_max@plt>
  40d1c4:	mov	w1, w20
  40d1c8:	mov	x22, xzr
  40d1cc:	mov	w8, wzr
  40d1d0:	mov	w28, wzr
  40d1d4:	str	w19, [sp, #64]
  40d1d8:	ubfx	w19, w19, #1, #1
  40d1dc:	add	x9, x21, #0x1
  40d1e0:	mov	w15, #0x1                   	// #1
  40d1e4:	str	x0, [sp, #56]
  40d1e8:	stur	xzr, [x29, #-80]
  40d1ec:	stur	xzr, [x29, #-56]
  40d1f0:	str	wzr, [sp, #88]
  40d1f4:	stur	x9, [x29, #-72]
  40d1f8:	cmp	w1, #0xa
  40d1fc:	b.hi	40ddd0 <ferror@plt+0xae10>  // b.pmore
  40d200:	adrp	x12, 414000 <_obstack_memory_used@@Base+0x29a4>
  40d204:	mov	w9, w1
  40d208:	add	x12, x12, #0x890
  40d20c:	adr	x10, 40d230 <ferror@plt+0xa270>
  40d210:	ldrb	w11, [x12, x9]
  40d214:	add	x10, x10, x11, lsl #2
  40d218:	mov	x26, x27
  40d21c:	mov	x20, xzr
  40d220:	mov	w16, wzr
  40d224:	mov	w9, #0x1                   	// #1
  40d228:	mov	w27, w28
  40d22c:	br	x10
  40d230:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40d234:	add	x0, x0, #0x9ec
  40d238:	mov	w20, w1
  40d23c:	mov	w22, w15
  40d240:	bl	40e4e8 <ferror@plt+0xb528>
  40d244:	str	x0, [sp, #80]
  40d248:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x19a4>
  40d24c:	add	x0, x0, #0xc34
  40d250:	mov	w1, w20
  40d254:	bl	40e4e8 <ferror@plt+0xb528>
  40d258:	mov	w15, w22
  40d25c:	mov	w1, w20
  40d260:	str	x0, [sp, #96]
  40d264:	stur	w1, [x29, #-28]
  40d268:	tbnz	w19, #0, 40d2a8 <ferror@plt+0xa2e8>
  40d26c:	ldr	x8, [sp, #80]
  40d270:	ldrb	w9, [x8]
  40d274:	cbz	w9, 40d2a8 <ferror@plt+0xa2e8>
  40d278:	mov	w27, w15
  40d27c:	mov	x10, xzr
  40d280:	add	x8, x8, #0x1
  40d284:	b	40d298 <ferror@plt+0xa2d8>
  40d288:	ldrb	w9, [x8, x10]
  40d28c:	add	x20, x10, #0x1
  40d290:	mov	x10, x20
  40d294:	cbz	w9, 40d2b0 <ferror@plt+0xa2f0>
  40d298:	cmp	x10, x26
  40d29c:	b.cs	40d288 <ferror@plt+0xa2c8>  // b.hs, b.nlast
  40d2a0:	strb	w9, [x24, x10]
  40d2a4:	b	40d288 <ferror@plt+0xa2c8>
  40d2a8:	mov	w27, w15
  40d2ac:	mov	x20, xzr
  40d2b0:	ldr	x25, [sp, #96]
  40d2b4:	mov	x0, x25
  40d2b8:	bl	4028b0 <strlen@plt>
  40d2bc:	ldur	w1, [x29, #-28]
  40d2c0:	mov	x22, x0
  40d2c4:	stur	x25, [x29, #-56]
  40d2c8:	mov	w9, #0x1                   	// #1
  40d2cc:	mov	w16, w19
  40d2d0:	mov	w15, w27
  40d2d4:	mov	w27, w28
  40d2d8:	b	40d384 <ferror@plt+0xa3c4>
  40d2dc:	mov	w19, #0x1                   	// #1
  40d2e0:	mov	w1, #0x5                   	// #5
  40d2e4:	tbz	w19, #0, 40d310 <ferror@plt+0xa350>
  40d2e8:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40d2ec:	mov	x20, xzr
  40d2f0:	mov	w22, #0x1                   	// #1
  40d2f4:	add	x8, x8, #0x321
  40d2f8:	stur	x8, [x29, #-56]
  40d2fc:	b	40d330 <ferror@plt+0xa370>
  40d300:	mov	x20, xzr
  40d304:	mov	w16, wzr
  40d308:	mov	w9, w8
  40d30c:	b	40d384 <ferror@plt+0xa3c4>
  40d310:	cbz	x26, 40d31c <ferror@plt+0xa35c>
  40d314:	mov	w8, #0x22                  	// #34
  40d318:	strb	w8, [x24]
  40d31c:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40d320:	add	x8, x8, #0x321
  40d324:	mov	w20, #0x1                   	// #1
  40d328:	stur	x8, [x29, #-56]
  40d32c:	mov	w22, #0x1                   	// #1
  40d330:	mov	w9, #0x1                   	// #1
  40d334:	b	40d380 <ferror@plt+0xa3c0>
  40d338:	mov	w8, #0x1                   	// #1
  40d33c:	mov	w19, #0x1                   	// #1
  40d340:	eor	w9, w19, #0x1
  40d344:	orr	w8, w8, w9
  40d348:	tbz	w19, #0, 40d358 <ferror@plt+0xa398>
  40d34c:	mov	x20, xzr
  40d350:	mov	w1, #0x2                   	// #2
  40d354:	b	40d36c <ferror@plt+0xa3ac>
  40d358:	cbz	x26, 40d364 <ferror@plt+0xa3a4>
  40d35c:	mov	w9, #0x27                  	// #39
  40d360:	strb	w9, [x24]
  40d364:	mov	w1, #0x2                   	// #2
  40d368:	mov	w20, #0x1                   	// #1
  40d36c:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x19a4>
  40d370:	add	x9, x9, #0xc34
  40d374:	stur	x9, [x29, #-56]
  40d378:	mov	w22, #0x1                   	// #1
  40d37c:	mov	w9, w8
  40d380:	mov	w16, w19
  40d384:	ldur	x8, [x29, #-48]
  40d388:	mov	w14, w9
  40d38c:	eor	w17, w16, #0x1
  40d390:	stur	w17, [x29, #-60]
  40d394:	cmp	x8, #0x0
  40d398:	cset	w8, eq  // eq = none
  40d39c:	cmp	x22, #0x0
  40d3a0:	cset	w9, ne  // ne = any
  40d3a4:	cmp	w1, #0x2
  40d3a8:	cset	w10, ne  // ne = any
  40d3ac:	and	w13, w10, w14
  40d3b0:	and	w11, w9, w16
  40d3b4:	orr	w10, w10, w17
  40d3b8:	and	w17, w9, w13
  40d3bc:	orr	w9, w13, w16
  40d3c0:	eor	w9, w9, #0x1
  40d3c4:	cset	w12, eq  // eq = none
  40d3c8:	orr	w8, w8, w9
  40d3cc:	mov	x25, xzr
  40d3d0:	and	w11, w14, w11
  40d3d4:	stur	w10, [x29, #-84]
  40d3d8:	and	w10, w12, w16
  40d3dc:	stur	w8, [x29, #-24]
  40d3e0:	eor	w8, w14, #0x1
  40d3e4:	str	w11, [sp, #72]
  40d3e8:	str	w10, [sp, #92]
  40d3ec:	stur	w14, [x29, #-64]
  40d3f0:	str	w8, [sp, #76]
  40d3f4:	stp	w16, w1, [x29, #-32]
  40d3f8:	stur	w17, [x29, #-36]
  40d3fc:	b	40d404 <ferror@plt+0xa444>
  40d400:	add	x25, x25, #0x1
  40d404:	cmn	x23, #0x1
  40d408:	b.eq	40d41c <ferror@plt+0xa45c>  // b.none
  40d40c:	cmp	x25, x23
  40d410:	cset	w8, eq  // eq = none
  40d414:	tbz	w8, #0, 40d42c <ferror@plt+0xa46c>
  40d418:	b	40dc80 <ferror@plt+0xacc0>
  40d41c:	ldrb	w8, [x21, x25]
  40d420:	cmp	w8, #0x0
  40d424:	cset	w8, eq  // eq = none
  40d428:	tbnz	w8, #0, 40dc80 <ferror@plt+0xacc0>
  40d42c:	cbz	w17, 40d468 <ferror@plt+0xa4a8>
  40d430:	cmp	x22, #0x2
  40d434:	add	x19, x25, x22
  40d438:	b.cc	40d460 <ferror@plt+0xa4a0>  // b.lo, b.ul, b.last
  40d43c:	cmn	x23, #0x1
  40d440:	b.ne	40d460 <ferror@plt+0xa4a0>  // b.any
  40d444:	mov	x0, x21
  40d448:	mov	w23, w15
  40d44c:	bl	4028b0 <strlen@plt>
  40d450:	ldp	w17, w16, [x29, #-36]
  40d454:	ldur	w1, [x29, #-28]
  40d458:	mov	w15, w23
  40d45c:	mov	x23, x0
  40d460:	cmp	x19, x23
  40d464:	b.ls	40d5a4 <ferror@plt+0xa5e4>  // b.plast
  40d468:	mov	w28, wzr
  40d46c:	ldrb	w19, [x21, x25]
  40d470:	cmp	w19, #0x7e
  40d474:	b.hi	40d6d8 <ferror@plt+0xa718>  // b.pmore
  40d478:	adrp	x14, 414000 <_obstack_memory_used@@Base+0x29a4>
  40d47c:	add	x14, x14, #0x89b
  40d480:	adr	x13, 40d4a4 <ferror@plt+0xa4e4>
  40d484:	ldrb	w10, [x14, x19]
  40d488:	add	x13, x13, x10, lsl #2
  40d48c:	mov	w11, wzr
  40d490:	mov	w9, wzr
  40d494:	mov	w8, #0x1                   	// #1
  40d498:	mov	w12, #0x6e                  	// #110
  40d49c:	mov	w10, #0x61                  	// #97
  40d4a0:	br	x13
  40d4a4:	ldur	w10, [x29, #-24]
  40d4a8:	tbnz	w10, #0, 40d4c8 <ferror@plt+0xa508>
  40d4ac:	ldur	x11, [x29, #-48]
  40d4b0:	ubfx	w10, w19, #5, #3
  40d4b4:	ldr	w10, [x11, w10, uxtw #2]
  40d4b8:	lsr	w10, w10, w19
  40d4bc:	tbz	w10, #0, 40d4c8 <ferror@plt+0xa508>
  40d4c0:	mov	w10, w19
  40d4c4:	b	40d4d0 <ferror@plt+0xa510>
  40d4c8:	mov	w10, w19
  40d4cc:	tbz	w28, #0, 40d548 <ferror@plt+0xa588>
  40d4d0:	tbz	w16, #0, 40d4dc <ferror@plt+0xa51c>
  40d4d4:	mov	w10, #0x10                  	// #16
  40d4d8:	b	40d594 <ferror@plt+0xa5d4>
  40d4dc:	cmp	w1, #0x2
  40d4e0:	cset	w9, ne  // ne = any
  40d4e4:	orr	w9, w9, w27
  40d4e8:	tbnz	w9, #0, 40d52c <ferror@plt+0xa56c>
  40d4ec:	cmp	x20, x26
  40d4f0:	b.cs	40d4fc <ferror@plt+0xa53c>  // b.hs, b.nlast
  40d4f4:	mov	w9, #0x27                  	// #39
  40d4f8:	strb	w9, [x24, x20]
  40d4fc:	add	x9, x20, #0x1
  40d500:	cmp	x9, x26
  40d504:	b.cs	40d510 <ferror@plt+0xa550>  // b.hs, b.nlast
  40d508:	mov	w11, #0x24                  	// #36
  40d50c:	strb	w11, [x24, x9]
  40d510:	add	x9, x20, #0x2
  40d514:	cmp	x9, x26
  40d518:	b.cs	40d524 <ferror@plt+0xa564>  // b.hs, b.nlast
  40d51c:	mov	w11, #0x27                  	// #39
  40d520:	strb	w11, [x24, x9]
  40d524:	add	x20, x20, #0x3
  40d528:	mov	w27, #0x1                   	// #1
  40d52c:	cmp	x20, x26
  40d530:	b.cs	40d53c <ferror@plt+0xa57c>  // b.hs, b.nlast
  40d534:	mov	w9, #0x5c                  	// #92
  40d538:	strb	w9, [x24, x20]
  40d53c:	add	x20, x20, #0x1
  40d540:	mov	w9, #0x1                   	// #1
  40d544:	mov	w19, w10
  40d548:	tbnz	w9, #0, 40d57c <ferror@plt+0xa5bc>
  40d54c:	tbz	w27, #0, 40d57c <ferror@plt+0xa5bc>
  40d550:	cmp	x20, x26
  40d554:	b.cs	40d560 <ferror@plt+0xa5a0>  // b.hs, b.nlast
  40d558:	mov	w9, #0x27                  	// #39
  40d55c:	strb	w9, [x24, x20]
  40d560:	add	x9, x20, #0x1
  40d564:	cmp	x9, x26
  40d568:	b.cs	40d574 <ferror@plt+0xa5b4>  // b.hs, b.nlast
  40d56c:	mov	w10, #0x27                  	// #39
  40d570:	strb	w10, [x24, x9]
  40d574:	mov	w27, wzr
  40d578:	add	x20, x20, #0x2
  40d57c:	cmp	x20, x26
  40d580:	b.cs	40d588 <ferror@plt+0xa5c8>  // b.hs, b.nlast
  40d584:	strb	w19, [x24, x20]
  40d588:	mov	w10, wzr
  40d58c:	add	x20, x20, #0x1
  40d590:	and	w15, w15, w8
  40d594:	cbz	w10, 40d400 <ferror@plt+0xa440>
  40d598:	cmp	w10, #0xf
  40d59c:	b.eq	40d400 <ferror@plt+0xa440>  // b.none
  40d5a0:	b	40dd04 <ferror@plt+0xad44>
  40d5a4:	ldur	x1, [x29, #-56]
  40d5a8:	add	x0, x21, x25
  40d5ac:	mov	x2, x22
  40d5b0:	mov	w19, w15
  40d5b4:	bl	402b50 <bcmp@plt>
  40d5b8:	ldur	w9, [x29, #-60]
  40d5bc:	cmp	w0, #0x0
  40d5c0:	cset	w8, ne  // ne = any
  40d5c4:	cset	w28, eq  // eq = none
  40d5c8:	orr	w8, w8, w9
  40d5cc:	tbz	w8, #0, 40d5e0 <ferror@plt+0xa620>
  40d5d0:	ldp	w16, w1, [x29, #-32]
  40d5d4:	ldur	w17, [x29, #-36]
  40d5d8:	mov	w15, w19
  40d5dc:	b	40d46c <ferror@plt+0xa4ac>
  40d5e0:	ldp	w16, w1, [x29, #-32]
  40d5e4:	ldur	w17, [x29, #-36]
  40d5e8:	mov	w10, #0x10                  	// #16
  40d5ec:	mov	w15, w19
  40d5f0:	b	40d594 <ferror@plt+0xa5d4>
  40d5f4:	cmp	x23, #0x1
  40d5f8:	b.eq	40d61c <ferror@plt+0xa65c>  // b.none
  40d5fc:	cmn	x23, #0x1
  40d600:	b.ne	40d620 <ferror@plt+0xa660>  // b.any
  40d604:	ldrb	w8, [x21, #1]
  40d608:	cbz	w8, 40d61c <ferror@plt+0xa65c>
  40d60c:	mov	w9, wzr
  40d610:	mov	w8, wzr
  40d614:	mov	x23, #0xffffffffffffffff    	// #-1
  40d618:	b	40d4a4 <ferror@plt+0xa4e4>
  40d61c:	cbz	x25, 40d62c <ferror@plt+0xa66c>
  40d620:	mov	w9, wzr
  40d624:	mov	w8, wzr
  40d628:	b	40d4a4 <ferror@plt+0xa4e4>
  40d62c:	mov	w11, #0x1                   	// #1
  40d630:	cmp	w1, #0x2
  40d634:	b.ne	40d63c <ferror@plt+0xa67c>  // b.any
  40d638:	tbnz	w16, #0, 40d4d4 <ferror@plt+0xa514>
  40d63c:	mov	w9, wzr
  40d640:	mov	w8, w11
  40d644:	b	40d4a4 <ferror@plt+0xa4e4>
  40d648:	cmp	w1, #0x2
  40d64c:	b.ne	40d708 <ferror@plt+0xa748>  // b.any
  40d650:	tbnz	w16, #0, 40d4d4 <ferror@plt+0xa514>
  40d654:	b	40d714 <ferror@plt+0xa754>
  40d658:	mov	w10, #0x66                  	// #102
  40d65c:	b	40d72c <ferror@plt+0xa76c>
  40d660:	mov	w12, #0x74                  	// #116
  40d664:	b	40d720 <ferror@plt+0xa760>
  40d668:	mov	w10, #0x62                  	// #98
  40d66c:	b	40d72c <ferror@plt+0xa76c>
  40d670:	mov	w12, #0x72                  	// #114
  40d674:	b	40d720 <ferror@plt+0xa760>
  40d678:	ldur	w8, [x29, #-64]
  40d67c:	tbz	w8, #0, 40d740 <ferror@plt+0xa780>
  40d680:	tbnz	w16, #0, 40d4d4 <ferror@plt+0xa514>
  40d684:	cmp	w1, #0x2
  40d688:	cset	w8, ne  // ne = any
  40d68c:	orr	w8, w8, w27
  40d690:	tbz	w8, #0, 40dba0 <ferror@plt+0xabe0>
  40d694:	mov	x9, x20
  40d698:	b	40dbe0 <ferror@plt+0xac20>
  40d69c:	cmp	w1, #0x5
  40d6a0:	b.eq	40d8bc <ferror@plt+0xa8fc>  // b.none
  40d6a4:	cmp	w1, #0x2
  40d6a8:	b.ne	40d620 <ferror@plt+0xa660>  // b.any
  40d6ac:	tbz	w16, #0, 40d620 <ferror@plt+0xa660>
  40d6b0:	b	40d4d4 <ferror@plt+0xa514>
  40d6b4:	mov	w10, #0x76                  	// #118
  40d6b8:	b	40d72c <ferror@plt+0xa76c>
  40d6bc:	cmp	w1, #0x2
  40d6c0:	b.ne	40d750 <ferror@plt+0xa790>  // b.any
  40d6c4:	tbz	w16, #0, 40d9a0 <ferror@plt+0xa9e0>
  40d6c8:	mov	w8, #0x1                   	// #1
  40d6cc:	mov	w10, #0x10                  	// #16
  40d6d0:	str	w8, [sp, #88]
  40d6d4:	b	40d594 <ferror@plt+0xa5d4>
  40d6d8:	ldr	x8, [sp, #56]
  40d6dc:	str	w15, [sp, #52]
  40d6e0:	str	x24, [sp, #40]
  40d6e4:	cmp	x8, #0x1
  40d6e8:	b.ne	40d758 <ferror@plt+0xa798>  // b.any
  40d6ec:	bl	402cd0 <__ctype_b_loc@plt>
  40d6f0:	ldr	x8, [x0]
  40d6f4:	ldur	w1, [x29, #-28]
  40d6f8:	mov	w24, #0x1                   	// #1
  40d6fc:	ldrh	w8, [x8, x19, lsl #1]
  40d700:	ubfx	w10, w8, #14, #1
  40d704:	b	40da20 <ferror@plt+0xaa60>
  40d708:	ldr	w8, [sp, #72]
  40d70c:	mov	w12, w19
  40d710:	tbz	w8, #0, 40d720 <ferror@plt+0xa760>
  40d714:	mov	w9, wzr
  40d718:	mov	w8, wzr
  40d71c:	b	40d548 <ferror@plt+0xa588>
  40d720:	ldur	w8, [x29, #-84]
  40d724:	mov	w10, w12
  40d728:	tbz	w8, #0, 40d4d4 <ferror@plt+0xa514>
  40d72c:	ldur	w11, [x29, #-64]
  40d730:	mov	w9, wzr
  40d734:	mov	w8, wzr
  40d738:	tbz	w11, #0, 40d4a4 <ferror@plt+0xa4e4>
  40d73c:	b	40d4d0 <ferror@plt+0xa510>
  40d740:	ldr	w8, [sp, #64]
  40d744:	tbz	w8, #0, 40d620 <ferror@plt+0xa660>
  40d748:	mov	w10, #0xf                   	// #15
  40d74c:	b	40d594 <ferror@plt+0xa5d4>
  40d750:	mov	w9, wzr
  40d754:	b	40da0c <ferror@plt+0xaa4c>
  40d758:	cmn	x23, #0x1
  40d75c:	str	x22, [sp, #16]
  40d760:	stur	xzr, [x29, #-16]
  40d764:	b.ne	40d774 <ferror@plt+0xa7b4>  // b.any
  40d768:	mov	x0, x21
  40d76c:	bl	4028b0 <strlen@plt>
  40d770:	mov	x23, x0
  40d774:	sub	x8, x23, x25
  40d778:	str	x8, [sp, #8]
  40d77c:	add	x8, x21, x25
  40d780:	str	x8, [sp, #32]
  40d784:	ldur	x8, [x29, #-72]
  40d788:	mov	x24, xzr
  40d78c:	add	x8, x8, x25
  40d790:	str	x8, [sp, #24]
  40d794:	mov	w8, #0x1                   	// #1
  40d798:	str	w8, [sp, #68]
  40d79c:	add	x8, x24, x25
  40d7a0:	add	x1, x21, x8
  40d7a4:	sub	x2, x23, x8
  40d7a8:	sub	x0, x29, #0x14
  40d7ac:	sub	x3, x29, #0x10
  40d7b0:	mov	w22, w27
  40d7b4:	bl	4111f0 <ferror@plt+0xe230>
  40d7b8:	cbz	x0, 40d810 <ferror@plt+0xa850>
  40d7bc:	mov	x27, x0
  40d7c0:	cmn	x0, #0x1
  40d7c4:	b.eq	40d80c <ferror@plt+0xa84c>  // b.none
  40d7c8:	cmn	x27, #0x2
  40d7cc:	b.ne	40d818 <ferror@plt+0xa858>  // b.any
  40d7d0:	add	x8, x24, x25
  40d7d4:	cmp	x8, x23
  40d7d8:	mov	w27, w22
  40d7dc:	b.cs	40d800 <ferror@plt+0xa840>  // b.hs, b.nlast
  40d7e0:	ldr	x9, [sp, #32]
  40d7e4:	ldrb	w8, [x9, x24]
  40d7e8:	cbz	w8, 40d800 <ferror@plt+0xa840>
  40d7ec:	add	x24, x24, #0x1
  40d7f0:	add	x8, x25, x24
  40d7f4:	cmp	x8, x23
  40d7f8:	b.cc	40d7e4 <ferror@plt+0xa824>  // b.lo, b.ul, b.last
  40d7fc:	ldr	x24, [sp, #8]
  40d800:	str	wzr, [sp, #68]
  40d804:	mov	w10, #0x34                  	// #52
  40d808:	b	40d8a8 <ferror@plt+0xa8e8>
  40d80c:	str	wzr, [sp, #68]
  40d810:	mov	w10, #0x34                  	// #52
  40d814:	b	40d8a4 <ferror@plt+0xa8e4>
  40d818:	ldr	w8, [sp, #92]
  40d81c:	cbz	w8, 40d880 <ferror@plt+0xa8c0>
  40d820:	cmp	x27, #0x2
  40d824:	b.cc	40d878 <ferror@plt+0xa8b8>  // b.lo, b.ul, b.last
  40d828:	ldr	x9, [sp, #24]
  40d82c:	sub	x8, x27, #0x1
  40d830:	add	x9, x9, x24
  40d834:	b	40d844 <ferror@plt+0xa884>
  40d838:	subs	x8, x8, #0x1
  40d83c:	add	x9, x9, #0x1
  40d840:	b.eq	40d878 <ferror@plt+0xa8b8>  // b.none
  40d844:	ldrb	w10, [x9]
  40d848:	sub	w10, w10, #0x5b
  40d84c:	cmp	w10, #0x21
  40d850:	b.hi	40d838 <ferror@plt+0xa878>  // b.pmore
  40d854:	mov	w11, #0x1                   	// #1
  40d858:	lsl	x10, x11, x10
  40d85c:	mov	x11, #0x2b                  	// #43
  40d860:	movk	x11, #0x2, lsl #32
  40d864:	tst	x10, x11
  40d868:	b.eq	40d838 <ferror@plt+0xa878>  // b.none
  40d86c:	mov	w10, #0x10                  	// #16
  40d870:	cbnz	w10, 40d8a4 <ferror@plt+0xa8e4>
  40d874:	b	40d880 <ferror@plt+0xa8c0>
  40d878:	mov	w10, wzr
  40d87c:	cbnz	w10, 40d8a4 <ferror@plt+0xa8e4>
  40d880:	ldur	w0, [x29, #-20]
  40d884:	bl	402f10 <iswprint@plt>
  40d888:	ldr	w9, [sp, #68]
  40d88c:	cmp	w0, #0x0
  40d890:	cset	w8, ne  // ne = any
  40d894:	mov	w10, wzr
  40d898:	and	w9, w9, w8
  40d89c:	add	x24, x27, x24
  40d8a0:	str	w9, [sp, #68]
  40d8a4:	mov	w27, w22
  40d8a8:	cbnz	w10, 40d970 <ferror@plt+0xa9b0>
  40d8ac:	sub	x0, x29, #0x10
  40d8b0:	bl	402c40 <mbsinit@plt>
  40d8b4:	cbz	w0, 40d79c <ferror@plt+0xa7dc>
  40d8b8:	b	40d978 <ferror@plt+0xa9b8>
  40d8bc:	ldr	w8, [sp, #64]
  40d8c0:	tbz	w8, #2, 40d620 <ferror@plt+0xa660>
  40d8c4:	add	x10, x25, #0x2
  40d8c8:	cmp	x10, x23
  40d8cc:	b.cs	40d620 <ferror@plt+0xa660>  // b.hs, b.nlast
  40d8d0:	add	x8, x25, x21
  40d8d4:	ldrb	w8, [x8, #1]
  40d8d8:	cmp	w8, #0x3f
  40d8dc:	b.ne	40d620 <ferror@plt+0xa660>  // b.any
  40d8e0:	ldrb	w11, [x21, x10]
  40d8e4:	mov	w9, wzr
  40d8e8:	cmp	w11, #0x3e
  40d8ec:	b.hi	40dc78 <ferror@plt+0xacb8>  // b.pmore
  40d8f0:	mov	w8, #0x1                   	// #1
  40d8f4:	mov	x12, #0xa38200000000        	// #179778741075968
  40d8f8:	lsl	x8, x8, x11
  40d8fc:	movk	x12, #0x7000, lsl #48
  40d900:	tst	x8, x12
  40d904:	b.eq	40dc78 <ferror@plt+0xacb8>  // b.none
  40d908:	tbnz	w16, #0, 40d4d4 <ferror@plt+0xa514>
  40d90c:	cmp	x20, x26
  40d910:	b.cs	40d91c <ferror@plt+0xa95c>  // b.hs, b.nlast
  40d914:	mov	w8, #0x3f                  	// #63
  40d918:	strb	w8, [x24, x20]
  40d91c:	add	x8, x20, #0x1
  40d920:	cmp	x8, x26
  40d924:	b.cs	40d930 <ferror@plt+0xa970>  // b.hs, b.nlast
  40d928:	mov	w9, #0x22                  	// #34
  40d92c:	strb	w9, [x24, x8]
  40d930:	add	x8, x20, #0x2
  40d934:	cmp	x8, x26
  40d938:	b.cs	40d944 <ferror@plt+0xa984>  // b.hs, b.nlast
  40d93c:	mov	w9, #0x22                  	// #34
  40d940:	strb	w9, [x24, x8]
  40d944:	add	x8, x20, #0x3
  40d948:	cmp	x8, x26
  40d94c:	b.cs	40d958 <ferror@plt+0xa998>  // b.hs, b.nlast
  40d950:	mov	w9, #0x3f                  	// #63
  40d954:	strb	w9, [x24, x8]
  40d958:	mov	w9, wzr
  40d95c:	mov	w8, wzr
  40d960:	add	x20, x20, #0x4
  40d964:	mov	x25, x10
  40d968:	mov	w19, w11
  40d96c:	b	40d4a4 <ferror@plt+0xa4e4>
  40d970:	cmp	w10, #0x34
  40d974:	b.ne	40d97c <ferror@plt+0xa9bc>  // b.any
  40d978:	mov	w10, wzr
  40d97c:	ldp	w16, w1, [x29, #-32]
  40d980:	ldr	w15, [sp, #52]
  40d984:	ldr	x22, [sp, #16]
  40d988:	ldur	w17, [x29, #-36]
  40d98c:	cbz	w10, 40da1c <ferror@plt+0xaa5c>
  40d990:	ldr	x24, [sp, #40]
  40d994:	mov	w11, wzr
  40d998:	mov	w8, wzr
  40d99c:	b	40dc5c <ferror@plt+0xac9c>
  40d9a0:	ldur	x10, [x29, #-80]
  40d9a4:	cmp	x26, #0x0
  40d9a8:	cset	w8, eq  // eq = none
  40d9ac:	cmp	x10, #0x0
  40d9b0:	cset	w9, ne  // ne = any
  40d9b4:	orr	w8, w9, w8
  40d9b8:	cmp	w8, #0x0
  40d9bc:	csel	x10, x10, x26, ne  // ne = any
  40d9c0:	csel	x26, x26, xzr, ne  // ne = any
  40d9c4:	cmp	x20, x26
  40d9c8:	stur	x10, [x29, #-80]
  40d9cc:	b.cs	40d9d8 <ferror@plt+0xaa18>  // b.hs, b.nlast
  40d9d0:	mov	w8, #0x27                  	// #39
  40d9d4:	strb	w8, [x24, x20]
  40d9d8:	add	x8, x20, #0x1
  40d9dc:	cmp	x8, x26
  40d9e0:	b.cs	40d9ec <ferror@plt+0xaa2c>  // b.hs, b.nlast
  40d9e4:	mov	w9, #0x5c                  	// #92
  40d9e8:	strb	w9, [x24, x8]
  40d9ec:	add	x8, x20, #0x2
  40d9f0:	cmp	x8, x26
  40d9f4:	b.cs	40da00 <ferror@plt+0xaa40>  // b.hs, b.nlast
  40d9f8:	mov	w9, #0x27                  	// #39
  40d9fc:	strb	w9, [x24, x8]
  40da00:	mov	w27, wzr
  40da04:	mov	w9, wzr
  40da08:	add	x20, x20, #0x3
  40da0c:	mov	w8, #0x1                   	// #1
  40da10:	str	w8, [sp, #88]
  40da14:	mov	w8, #0x1                   	// #1
  40da18:	b	40d4a4 <ferror@plt+0xa4e4>
  40da1c:	ldr	w10, [sp, #68]
  40da20:	ldr	w9, [sp, #76]
  40da24:	and	w8, w10, #0x1
  40da28:	cmp	x24, #0x1
  40da2c:	orr	w9, w10, w9
  40da30:	b.hi	40da50 <ferror@plt+0xaa90>  // b.pmore
  40da34:	tbz	w9, #0, 40da50 <ferror@plt+0xaa90>
  40da38:	ldr	x24, [sp, #40]
  40da3c:	ldr	w15, [sp, #52]
  40da40:	ldp	w17, w16, [x29, #-36]
  40da44:	mov	w11, wzr
  40da48:	mov	w10, wzr
  40da4c:	b	40dc5c <ferror@plt+0xac9c>
  40da50:	add	x10, x24, x25
  40da54:	ldr	x24, [sp, #40]
  40da58:	ldr	w15, [sp, #52]
  40da5c:	ldp	w17, w16, [x29, #-36]
  40da60:	mov	w11, wzr
  40da64:	b	40da78 <ferror@plt+0xaab8>
  40da68:	ldur	x13, [x29, #-72]
  40da6c:	add	x20, x20, #0x1
  40da70:	ldrb	w19, [x13, x25]
  40da74:	mov	x25, x12
  40da78:	tbz	w9, #0, 40da9c <ferror@plt+0xaadc>
  40da7c:	tbz	w28, #0, 40db44 <ferror@plt+0xab84>
  40da80:	cmp	x20, x26
  40da84:	b.cs	40da90 <ferror@plt+0xaad0>  // b.hs, b.nlast
  40da88:	mov	w12, #0x5c                  	// #92
  40da8c:	strb	w12, [x24, x20]
  40da90:	mov	w28, wzr
  40da94:	add	x20, x20, #0x1
  40da98:	b	40db44 <ferror@plt+0xab84>
  40da9c:	tbnz	w16, #0, 40dc58 <ferror@plt+0xac98>
  40daa0:	cmp	w1, #0x2
  40daa4:	cset	w11, ne  // ne = any
  40daa8:	orr	w11, w11, w27
  40daac:	tbnz	w11, #0, 40daf0 <ferror@plt+0xab30>
  40dab0:	cmp	x20, x26
  40dab4:	b.cs	40dac0 <ferror@plt+0xab00>  // b.hs, b.nlast
  40dab8:	mov	w11, #0x27                  	// #39
  40dabc:	strb	w11, [x24, x20]
  40dac0:	add	x11, x20, #0x1
  40dac4:	cmp	x11, x26
  40dac8:	b.cs	40dad4 <ferror@plt+0xab14>  // b.hs, b.nlast
  40dacc:	mov	w12, #0x24                  	// #36
  40dad0:	strb	w12, [x24, x11]
  40dad4:	add	x11, x20, #0x2
  40dad8:	cmp	x11, x26
  40dadc:	b.cs	40dae8 <ferror@plt+0xab28>  // b.hs, b.nlast
  40dae0:	mov	w12, #0x27                  	// #39
  40dae4:	strb	w12, [x24, x11]
  40dae8:	add	x20, x20, #0x3
  40daec:	mov	w27, #0x1                   	// #1
  40daf0:	cmp	x20, x26
  40daf4:	b.cs	40db00 <ferror@plt+0xab40>  // b.hs, b.nlast
  40daf8:	mov	w11, #0x5c                  	// #92
  40dafc:	strb	w11, [x24, x20]
  40db00:	add	x11, x20, #0x1
  40db04:	cmp	x11, x26
  40db08:	b.cs	40db18 <ferror@plt+0xab58>  // b.hs, b.nlast
  40db0c:	mov	w12, #0x30                  	// #48
  40db10:	bfxil	w12, w19, #6, #2
  40db14:	strb	w12, [x24, x11]
  40db18:	add	x11, x20, #0x2
  40db1c:	cmp	x11, x26
  40db20:	b.cs	40db30 <ferror@plt+0xab70>  // b.hs, b.nlast
  40db24:	mov	w12, #0x30                  	// #48
  40db28:	bfxil	w12, w19, #3, #3
  40db2c:	strb	w12, [x24, x11]
  40db30:	mov	w12, #0x30                  	// #48
  40db34:	bfxil	w12, w19, #0, #3
  40db38:	add	x20, x20, #0x3
  40db3c:	mov	w11, #0x1                   	// #1
  40db40:	mov	w19, w12
  40db44:	add	x12, x25, #0x1
  40db48:	cmp	x10, x12
  40db4c:	b.ls	40db98 <ferror@plt+0xabd8>  // b.plast
  40db50:	and	w13, w11, #0x1
  40db54:	orn	w13, w13, w27
  40db58:	tbnz	w13, #0, 40db88 <ferror@plt+0xabc8>
  40db5c:	cmp	x20, x26
  40db60:	b.cs	40db6c <ferror@plt+0xabac>  // b.hs, b.nlast
  40db64:	mov	w13, #0x27                  	// #39
  40db68:	strb	w13, [x24, x20]
  40db6c:	add	x13, x20, #0x1
  40db70:	cmp	x13, x26
  40db74:	b.cs	40db80 <ferror@plt+0xabc0>  // b.hs, b.nlast
  40db78:	mov	w14, #0x27                  	// #39
  40db7c:	strb	w14, [x24, x13]
  40db80:	mov	w27, wzr
  40db84:	add	x20, x20, #0x2
  40db88:	cmp	x20, x26
  40db8c:	b.cs	40da68 <ferror@plt+0xaaa8>  // b.hs, b.nlast
  40db90:	strb	w19, [x24, x20]
  40db94:	b	40da68 <ferror@plt+0xaaa8>
  40db98:	mov	w10, #0x2c                  	// #44
  40db9c:	b	40dc5c <ferror@plt+0xac9c>
  40dba0:	cmp	x20, x26
  40dba4:	b.cs	40dbb0 <ferror@plt+0xabf0>  // b.hs, b.nlast
  40dba8:	mov	w8, #0x27                  	// #39
  40dbac:	strb	w8, [x24, x20]
  40dbb0:	add	x8, x20, #0x1
  40dbb4:	cmp	x8, x26
  40dbb8:	b.cs	40dbc4 <ferror@plt+0xac04>  // b.hs, b.nlast
  40dbbc:	mov	w9, #0x24                  	// #36
  40dbc0:	strb	w9, [x24, x8]
  40dbc4:	add	x8, x20, #0x2
  40dbc8:	cmp	x8, x26
  40dbcc:	b.cs	40dbd8 <ferror@plt+0xac18>  // b.hs, b.nlast
  40dbd0:	mov	w9, #0x27                  	// #39
  40dbd4:	strb	w9, [x24, x8]
  40dbd8:	add	x9, x20, #0x3
  40dbdc:	mov	w27, #0x1                   	// #1
  40dbe0:	cmp	x9, x26
  40dbe4:	b.cs	40dbf0 <ferror@plt+0xac30>  // b.hs, b.nlast
  40dbe8:	mov	w8, #0x5c                  	// #92
  40dbec:	strb	w8, [x24, x9]
  40dbf0:	cmp	w1, #0x2
  40dbf4:	add	x20, x9, #0x1
  40dbf8:	b.eq	40dc48 <ferror@plt+0xac88>  // b.none
  40dbfc:	add	x8, x25, #0x1
  40dc00:	cmp	x8, x23
  40dc04:	b.cs	40dc48 <ferror@plt+0xac88>  // b.hs, b.nlast
  40dc08:	ldrb	w8, [x21, x8]
  40dc0c:	sub	w8, w8, #0x30
  40dc10:	cmp	w8, #0x9
  40dc14:	b.hi	40dc48 <ferror@plt+0xac88>  // b.pmore
  40dc18:	cmp	x20, x26
  40dc1c:	b.cs	40dc28 <ferror@plt+0xac68>  // b.hs, b.nlast
  40dc20:	mov	w8, #0x30                  	// #48
  40dc24:	strb	w8, [x24, x20]
  40dc28:	add	x8, x9, #0x2
  40dc2c:	cmp	x8, x26
  40dc30:	b.cs	40dc3c <ferror@plt+0xac7c>  // b.hs, b.nlast
  40dc34:	mov	w10, #0x30                  	// #48
  40dc38:	strb	w10, [x24, x8]
  40dc3c:	mov	w8, wzr
  40dc40:	add	x20, x9, #0x3
  40dc44:	b	40dc4c <ferror@plt+0xac8c>
  40dc48:	mov	w8, wzr
  40dc4c:	mov	w9, #0x1                   	// #1
  40dc50:	mov	w19, #0x30                  	// #48
  40dc54:	b	40d4a4 <ferror@plt+0xa4e4>
  40dc58:	mov	w10, #0x10                  	// #16
  40dc5c:	cmp	w8, #0x0
  40dc60:	cset	w8, ne  // ne = any
  40dc64:	cmp	w10, #0x2c
  40dc68:	and	w9, w11, #0x1
  40dc6c:	b.eq	40d548 <ferror@plt+0xa588>  // b.none
  40dc70:	cbz	w10, 40d4a4 <ferror@plt+0xa4e4>
  40dc74:	b	40d594 <ferror@plt+0xa5d4>
  40dc78:	mov	w8, w9
  40dc7c:	b	40d4a4 <ferror@plt+0xa4e4>
  40dc80:	cmp	x20, #0x0
  40dc84:	cset	w8, eq  // eq = none
  40dc88:	cmp	w1, #0x2
  40dc8c:	cset	w9, eq  // eq = none
  40dc90:	and	w8, w9, w8
  40dc94:	and	w8, w16, w8
  40dc98:	tbnz	w8, #0, 40dd0c <ferror@plt+0xad4c>
  40dc9c:	ldur	w9, [x29, #-64]
  40dca0:	cmp	w1, #0x2
  40dca4:	cset	w8, ne  // ne = any
  40dca8:	orr	w8, w16, w8
  40dcac:	tbnz	w8, #0, 40dce0 <ferror@plt+0xad20>
  40dcb0:	ldr	w8, [sp, #88]
  40dcb4:	eor	w8, w8, #0x1
  40dcb8:	tbnz	w8, #0, 40dce0 <ferror@plt+0xad20>
  40dcbc:	tbnz	w15, #0, 40ddac <ferror@plt+0xadec>
  40dcc0:	ldur	x8, [x29, #-80]
  40dcc4:	cbz	x8, 40dce0 <ferror@plt+0xad20>
  40dcc8:	mov	w28, w27
  40dccc:	ldur	x27, [x29, #-80]
  40dcd0:	mov	w1, #0x2                   	// #2
  40dcd4:	mov	w8, w9
  40dcd8:	mov	w19, w16
  40dcdc:	cbz	x26, 40d1f8 <ferror@plt+0xa238>
  40dce0:	ldur	x10, [x29, #-56]
  40dce4:	cmp	x10, #0x0
  40dce8:	cset	w8, eq  // eq = none
  40dcec:	orr	w8, w8, w16
  40dcf0:	tbnz	w8, #0, 40dd9c <ferror@plt+0xaddc>
  40dcf4:	ldrb	w9, [x10]
  40dcf8:	cbz	w9, 40dd9c <ferror@plt+0xaddc>
  40dcfc:	add	x8, x10, #0x1
  40dd00:	b	40dd68 <ferror@plt+0xada8>
  40dd04:	cmp	w10, #0x10
  40dd08:	b.ne	40dd78 <ferror@plt+0xadb8>  // b.any
  40dd0c:	ldur	w8, [x29, #-64]
  40dd10:	mov	w9, #0x4                   	// #4
  40dd14:	mov	x0, x24
  40dd18:	mov	x2, x21
  40dd1c:	tst	w8, #0x1
  40dd20:	mov	w8, #0x2                   	// #2
  40dd24:	csel	w8, w9, w8, ne  // ne = any
  40dd28:	cmp	w1, #0x2
  40dd2c:	csel	w4, w8, w1, eq  // eq = none
  40dd30:	ldr	w8, [sp, #64]
  40dd34:	mov	x1, x26
  40dd38:	mov	x3, x23
  40dd3c:	mov	x6, xzr
  40dd40:	and	w5, w8, #0xfffffffd
  40dd44:	ldr	x8, [sp, #96]
  40dd48:	str	x8, [sp]
  40dd4c:	ldr	x7, [sp, #80]
  40dd50:	bl	40d178 <ferror@plt+0xa1b8>
  40dd54:	mov	x20, x0
  40dd58:	b	40dd78 <ferror@plt+0xadb8>
  40dd5c:	ldrb	w9, [x8], #1
  40dd60:	add	x20, x20, #0x1
  40dd64:	cbz	w9, 40dd9c <ferror@plt+0xaddc>
  40dd68:	cmp	x20, x26
  40dd6c:	b.cs	40dd5c <ferror@plt+0xad9c>  // b.hs, b.nlast
  40dd70:	strb	w9, [x24, x20]
  40dd74:	b	40dd5c <ferror@plt+0xad9c>
  40dd78:	mov	x0, x20
  40dd7c:	ldp	x20, x19, [sp, #272]
  40dd80:	ldp	x22, x21, [sp, #256]
  40dd84:	ldp	x24, x23, [sp, #240]
  40dd88:	ldp	x26, x25, [sp, #224]
  40dd8c:	ldp	x28, x27, [sp, #208]
  40dd90:	ldp	x29, x30, [sp, #192]
  40dd94:	add	sp, sp, #0x120
  40dd98:	ret
  40dd9c:	cmp	x20, x26
  40dda0:	b.cs	40dd78 <ferror@plt+0xadb8>  // b.hs, b.nlast
  40dda4:	strb	wzr, [x24, x20]
  40dda8:	b	40dd78 <ferror@plt+0xadb8>
  40ddac:	ldr	x8, [sp, #96]
  40ddb0:	ldur	x1, [x29, #-80]
  40ddb4:	ldr	w5, [sp, #64]
  40ddb8:	ldur	x6, [x29, #-48]
  40ddbc:	mov	w4, #0x5                   	// #5
  40ddc0:	mov	x0, x24
  40ddc4:	mov	x2, x21
  40ddc8:	mov	x3, x23
  40ddcc:	b	40dd48 <ferror@plt+0xad88>
  40ddd0:	bl	402c00 <abort@plt>
  40ddd4:	stp	x29, x30, [sp, #-16]!
  40ddd8:	mov	x3, x2
  40dddc:	mov	x2, xzr
  40dde0:	mov	x29, sp
  40dde4:	bl	40ddf0 <ferror@plt+0xae30>
  40dde8:	ldp	x29, x30, [sp], #16
  40ddec:	ret
  40ddf0:	sub	sp, sp, #0x70
  40ddf4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40ddf8:	add	x8, x8, #0xbd8
  40ddfc:	cmp	x3, #0x0
  40de00:	stp	x29, x30, [sp, #16]
  40de04:	stp	x28, x27, [sp, #32]
  40de08:	stp	x26, x25, [sp, #48]
  40de0c:	stp	x24, x23, [sp, #64]
  40de10:	stp	x22, x21, [sp, #80]
  40de14:	stp	x20, x19, [sp, #96]
  40de18:	add	x29, sp, #0x10
  40de1c:	mov	x19, x2
  40de20:	mov	x22, x1
  40de24:	mov	x23, x0
  40de28:	csel	x21, x8, x3, eq  // eq = none
  40de2c:	bl	402f30 <__errno_location@plt>
  40de30:	ldp	w4, w8, [x21]
  40de34:	cmp	x19, #0x0
  40de38:	ldp	x7, x9, [x21, #40]
  40de3c:	ldr	w28, [x0]
  40de40:	cset	w10, eq  // eq = none
  40de44:	orr	w25, w8, w10
  40de48:	add	x26, x21, #0x8
  40de4c:	mov	x24, x0
  40de50:	mov	x0, xzr
  40de54:	mov	x1, xzr
  40de58:	mov	x2, x23
  40de5c:	mov	x3, x22
  40de60:	mov	w5, w25
  40de64:	mov	x6, x26
  40de68:	str	x9, [sp]
  40de6c:	bl	40d178 <ferror@plt+0xa1b8>
  40de70:	add	x27, x0, #0x1
  40de74:	mov	x20, x0
  40de78:	mov	x0, x27
  40de7c:	bl	410268 <ferror@plt+0xd2a8>
  40de80:	ldr	w4, [x21]
  40de84:	ldp	x7, x8, [x21, #40]
  40de88:	mov	x1, x27
  40de8c:	mov	x2, x23
  40de90:	mov	x3, x22
  40de94:	mov	w5, w25
  40de98:	mov	x6, x26
  40de9c:	mov	x21, x0
  40dea0:	str	x8, [sp]
  40dea4:	bl	40d178 <ferror@plt+0xa1b8>
  40dea8:	str	w28, [x24]
  40deac:	cbz	x19, 40deb4 <ferror@plt+0xaef4>
  40deb0:	str	x20, [x19]
  40deb4:	mov	x0, x21
  40deb8:	ldp	x20, x19, [sp, #96]
  40debc:	ldp	x22, x21, [sp, #80]
  40dec0:	ldp	x24, x23, [sp, #64]
  40dec4:	ldp	x26, x25, [sp, #48]
  40dec8:	ldp	x28, x27, [sp, #32]
  40decc:	ldp	x29, x30, [sp, #16]
  40ded0:	add	sp, sp, #0x70
  40ded4:	ret
  40ded8:	stp	x29, x30, [sp, #-64]!
  40dedc:	stp	x20, x19, [sp, #48]
  40dee0:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  40dee4:	stp	x22, x21, [sp, #32]
  40dee8:	ldr	w8, [x20, #1248]
  40deec:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x149a4>
  40def0:	ldr	x19, [x21, #1240]
  40def4:	str	x23, [sp, #16]
  40def8:	cmp	w8, #0x2
  40defc:	mov	x29, sp
  40df00:	b.lt	40df24 <ferror@plt+0xaf64>  // b.tstop
  40df04:	add	x22, x19, #0x18
  40df08:	mov	w23, #0x1                   	// #1
  40df0c:	ldr	x0, [x22], #16
  40df10:	bl	402d10 <free@plt>
  40df14:	ldrsw	x8, [x20, #1248]
  40df18:	add	x23, x23, #0x1
  40df1c:	cmp	x23, x8
  40df20:	b.lt	40df0c <ferror@plt+0xaf4c>  // b.tstop
  40df24:	ldr	x0, [x19, #8]
  40df28:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x149a4>
  40df2c:	add	x23, x23, #0xc10
  40df30:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  40df34:	cmp	x0, x23
  40df38:	add	x22, x22, #0x4e8
  40df3c:	b.eq	40df4c <ferror@plt+0xaf8c>  // b.none
  40df40:	bl	402d10 <free@plt>
  40df44:	mov	w8, #0x100                 	// #256
  40df48:	stp	x8, x23, [x22]
  40df4c:	cmp	x19, x22
  40df50:	b.eq	40df60 <ferror@plt+0xafa0>  // b.none
  40df54:	mov	x0, x19
  40df58:	bl	402d10 <free@plt>
  40df5c:	str	x22, [x21, #1240]
  40df60:	mov	w8, #0x1                   	// #1
  40df64:	str	w8, [x20, #1248]
  40df68:	ldp	x20, x19, [sp, #48]
  40df6c:	ldp	x22, x21, [sp, #32]
  40df70:	ldr	x23, [sp, #16]
  40df74:	ldp	x29, x30, [sp], #64
  40df78:	ret
  40df7c:	stp	x29, x30, [sp, #-16]!
  40df80:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x149a4>
  40df84:	add	x3, x3, #0xbd8
  40df88:	mov	x2, #0xffffffffffffffff    	// #-1
  40df8c:	mov	x29, sp
  40df90:	bl	40df9c <ferror@plt+0xafdc>
  40df94:	ldp	x29, x30, [sp], #16
  40df98:	ret
  40df9c:	sub	sp, sp, #0x80
  40dfa0:	stp	x29, x30, [sp, #32]
  40dfa4:	add	x29, sp, #0x20
  40dfa8:	stp	x28, x27, [sp, #48]
  40dfac:	stp	x26, x25, [sp, #64]
  40dfb0:	stp	x24, x23, [sp, #80]
  40dfb4:	stp	x22, x21, [sp, #96]
  40dfb8:	stp	x20, x19, [sp, #112]
  40dfbc:	mov	x22, x3
  40dfc0:	stur	x2, [x29, #-8]
  40dfc4:	mov	x21, x1
  40dfc8:	mov	w23, w0
  40dfcc:	bl	402f30 <__errno_location@plt>
  40dfd0:	tbnz	w23, #31, 40e120 <ferror@plt+0xb160>
  40dfd4:	adrp	x25, 426000 <_obstack_memory_used@@Base+0x149a4>
  40dfd8:	ldr	w8, [x25, #1248]
  40dfdc:	adrp	x28, 426000 <_obstack_memory_used@@Base+0x149a4>
  40dfe0:	ldr	w20, [x0]
  40dfe4:	ldr	x27, [x28, #1240]
  40dfe8:	mov	x19, x0
  40dfec:	cmp	w8, w23
  40dff0:	b.gt	40e05c <ferror@plt+0xb09c>
  40dff4:	mov	w8, #0x7fffffff            	// #2147483647
  40dff8:	cmp	w23, w8
  40dffc:	stur	w20, [x29, #-12]
  40e000:	b.eq	40e124 <ferror@plt+0xb164>  // b.none
  40e004:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e008:	add	x20, x20, #0x4e8
  40e00c:	add	w26, w23, #0x1
  40e010:	cmp	x27, x20
  40e014:	csel	x0, xzr, x27, eq  // eq = none
  40e018:	sbfiz	x1, x26, #4, #32
  40e01c:	bl	4101b8 <ferror@plt+0xd1f8>
  40e020:	mov	x24, x0
  40e024:	cmp	x27, x20
  40e028:	str	x0, [x28, #1240]
  40e02c:	b.ne	40e038 <ferror@plt+0xb078>  // b.any
  40e030:	ldr	q0, [x20]
  40e034:	str	q0, [x24]
  40e038:	ldrsw	x8, [x25, #1248]
  40e03c:	mov	w1, wzr
  40e040:	add	x0, x24, x8, lsl #4
  40e044:	sub	w8, w26, w8
  40e048:	sbfiz	x2, x8, #4, #32
  40e04c:	bl	402b00 <memset@plt>
  40e050:	ldur	w20, [x29, #-12]
  40e054:	mov	x27, x24
  40e058:	str	w26, [x25, #1248]
  40e05c:	add	x28, x27, w23, sxtw #4
  40e060:	mov	x27, x28
  40e064:	ldr	x26, [x28]
  40e068:	ldr	x23, [x27, #8]!
  40e06c:	ldp	w4, w8, [x22]
  40e070:	ldp	x7, x9, [x22, #40]
  40e074:	ldur	x3, [x29, #-8]
  40e078:	add	x24, x22, #0x8
  40e07c:	orr	w25, w8, #0x1
  40e080:	mov	x0, x23
  40e084:	mov	x1, x26
  40e088:	mov	x2, x21
  40e08c:	mov	w5, w25
  40e090:	mov	x6, x24
  40e094:	str	x9, [sp]
  40e098:	bl	40d178 <ferror@plt+0xa1b8>
  40e09c:	cmp	x26, x0
  40e0a0:	b.hi	40e0f8 <ferror@plt+0xb138>  // b.pmore
  40e0a4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e0a8:	add	x8, x8, #0xc10
  40e0ac:	add	x26, x0, #0x1
  40e0b0:	cmp	x23, x8
  40e0b4:	str	x26, [x28]
  40e0b8:	b.eq	40e0c4 <ferror@plt+0xb104>  // b.none
  40e0bc:	mov	x0, x23
  40e0c0:	bl	402d10 <free@plt>
  40e0c4:	mov	x0, x26
  40e0c8:	bl	410268 <ferror@plt+0xd2a8>
  40e0cc:	str	x0, [x27]
  40e0d0:	ldr	w4, [x22]
  40e0d4:	ldp	x7, x8, [x22, #40]
  40e0d8:	ldur	x3, [x29, #-8]
  40e0dc:	mov	x1, x26
  40e0e0:	mov	x2, x21
  40e0e4:	mov	w5, w25
  40e0e8:	mov	x6, x24
  40e0ec:	mov	x23, x0
  40e0f0:	str	x8, [sp]
  40e0f4:	bl	40d178 <ferror@plt+0xa1b8>
  40e0f8:	str	w20, [x19]
  40e0fc:	mov	x0, x23
  40e100:	ldp	x20, x19, [sp, #112]
  40e104:	ldp	x22, x21, [sp, #96]
  40e108:	ldp	x24, x23, [sp, #80]
  40e10c:	ldp	x26, x25, [sp, #64]
  40e110:	ldp	x28, x27, [sp, #48]
  40e114:	ldp	x29, x30, [sp, #32]
  40e118:	add	sp, sp, #0x80
  40e11c:	ret
  40e120:	bl	402c00 <abort@plt>
  40e124:	bl	410364 <ferror@plt+0xd3a4>
  40e128:	stp	x29, x30, [sp, #-16]!
  40e12c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e130:	add	x3, x3, #0xbd8
  40e134:	mov	x29, sp
  40e138:	bl	40df9c <ferror@plt+0xafdc>
  40e13c:	ldp	x29, x30, [sp], #16
  40e140:	ret
  40e144:	stp	x29, x30, [sp, #-16]!
  40e148:	mov	x1, x0
  40e14c:	mov	w0, wzr
  40e150:	mov	x29, sp
  40e154:	bl	40df7c <ferror@plt+0xafbc>
  40e158:	ldp	x29, x30, [sp], #16
  40e15c:	ret
  40e160:	stp	x29, x30, [sp, #-16]!
  40e164:	mov	x2, x1
  40e168:	mov	x1, x0
  40e16c:	mov	w0, wzr
  40e170:	mov	x29, sp
  40e174:	bl	40e128 <ferror@plt+0xb168>
  40e178:	ldp	x29, x30, [sp], #16
  40e17c:	ret
  40e180:	sub	sp, sp, #0x60
  40e184:	stp	x20, x19, [sp, #80]
  40e188:	mov	w20, w0
  40e18c:	add	x8, sp, #0x8
  40e190:	mov	w0, w1
  40e194:	stp	x29, x30, [sp, #64]
  40e198:	add	x29, sp, #0x40
  40e19c:	mov	x19, x2
  40e1a0:	bl	40e1c8 <ferror@plt+0xb208>
  40e1a4:	add	x3, sp, #0x8
  40e1a8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e1ac:	mov	w0, w20
  40e1b0:	mov	x1, x19
  40e1b4:	bl	40df9c <ferror@plt+0xafdc>
  40e1b8:	ldp	x20, x19, [sp, #80]
  40e1bc:	ldp	x29, x30, [sp, #64]
  40e1c0:	add	sp, sp, #0x60
  40e1c4:	ret
  40e1c8:	stp	x29, x30, [sp, #-16]!
  40e1cc:	movi	v0.2d, #0x0
  40e1d0:	cmp	w0, #0xa
  40e1d4:	mov	x29, sp
  40e1d8:	str	xzr, [x8, #48]
  40e1dc:	stp	q0, q0, [x8, #16]
  40e1e0:	str	q0, [x8]
  40e1e4:	b.eq	40e1f4 <ferror@plt+0xb234>  // b.none
  40e1e8:	str	w0, [x8]
  40e1ec:	ldp	x29, x30, [sp], #16
  40e1f0:	ret
  40e1f4:	bl	402c00 <abort@plt>
  40e1f8:	sub	sp, sp, #0x70
  40e1fc:	str	x21, [sp, #80]
  40e200:	mov	w21, w0
  40e204:	add	x8, sp, #0x8
  40e208:	mov	w0, w1
  40e20c:	stp	x29, x30, [sp, #64]
  40e210:	stp	x20, x19, [sp, #96]
  40e214:	add	x29, sp, #0x40
  40e218:	mov	x19, x3
  40e21c:	mov	x20, x2
  40e220:	bl	40e1c8 <ferror@plt+0xb208>
  40e224:	add	x3, sp, #0x8
  40e228:	mov	w0, w21
  40e22c:	mov	x1, x20
  40e230:	mov	x2, x19
  40e234:	bl	40df9c <ferror@plt+0xafdc>
  40e238:	ldp	x20, x19, [sp, #96]
  40e23c:	ldr	x21, [sp, #80]
  40e240:	ldp	x29, x30, [sp, #64]
  40e244:	add	sp, sp, #0x70
  40e248:	ret
  40e24c:	stp	x29, x30, [sp, #-16]!
  40e250:	mov	x2, x1
  40e254:	mov	w1, w0
  40e258:	mov	w0, wzr
  40e25c:	mov	x29, sp
  40e260:	bl	40e180 <ferror@plt+0xb1c0>
  40e264:	ldp	x29, x30, [sp], #16
  40e268:	ret
  40e26c:	stp	x29, x30, [sp, #-16]!
  40e270:	mov	x3, x2
  40e274:	mov	x2, x1
  40e278:	mov	w1, w0
  40e27c:	mov	w0, wzr
  40e280:	mov	x29, sp
  40e284:	bl	40e1f8 <ferror@plt+0xb238>
  40e288:	ldp	x29, x30, [sp], #16
  40e28c:	ret
  40e290:	sub	sp, sp, #0x60
  40e294:	adrp	x9, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e298:	add	x9, x9, #0xbd8
  40e29c:	ldp	q0, q1, [x9]
  40e2a0:	ldr	q2, [x9, #32]
  40e2a4:	ldr	x9, [x9, #48]
  40e2a8:	mov	w8, w2
  40e2ac:	stp	x20, x19, [sp, #80]
  40e2b0:	mov	x19, x1
  40e2b4:	mov	x20, x0
  40e2b8:	mov	x0, sp
  40e2bc:	mov	w2, #0x1                   	// #1
  40e2c0:	mov	w1, w8
  40e2c4:	stp	x29, x30, [sp, #64]
  40e2c8:	add	x29, sp, #0x40
  40e2cc:	stp	q0, q1, [sp]
  40e2d0:	str	q2, [sp, #32]
  40e2d4:	str	x9, [sp, #48]
  40e2d8:	bl	40d05c <ferror@plt+0xa09c>
  40e2dc:	mov	x3, sp
  40e2e0:	mov	w0, wzr
  40e2e4:	mov	x1, x20
  40e2e8:	mov	x2, x19
  40e2ec:	bl	40df9c <ferror@plt+0xafdc>
  40e2f0:	ldp	x20, x19, [sp, #80]
  40e2f4:	ldp	x29, x30, [sp, #64]
  40e2f8:	add	sp, sp, #0x60
  40e2fc:	ret
  40e300:	stp	x29, x30, [sp, #-16]!
  40e304:	mov	w2, w1
  40e308:	mov	x1, #0xffffffffffffffff    	// #-1
  40e30c:	mov	x29, sp
  40e310:	bl	40e290 <ferror@plt+0xb2d0>
  40e314:	ldp	x29, x30, [sp], #16
  40e318:	ret
  40e31c:	stp	x29, x30, [sp, #-16]!
  40e320:	mov	w1, #0x3a                  	// #58
  40e324:	mov	x29, sp
  40e328:	bl	40e300 <ferror@plt+0xb340>
  40e32c:	ldp	x29, x30, [sp], #16
  40e330:	ret
  40e334:	stp	x29, x30, [sp, #-16]!
  40e338:	mov	w2, #0x3a                  	// #58
  40e33c:	mov	x29, sp
  40e340:	bl	40e290 <ferror@plt+0xb2d0>
  40e344:	ldp	x29, x30, [sp], #16
  40e348:	ret
  40e34c:	sub	sp, sp, #0x60
  40e350:	stp	x20, x19, [sp, #80]
  40e354:	mov	w20, w0
  40e358:	add	x8, sp, #0x8
  40e35c:	mov	w0, w1
  40e360:	stp	x29, x30, [sp, #64]
  40e364:	add	x29, sp, #0x40
  40e368:	mov	x19, x2
  40e36c:	bl	40e1c8 <ferror@plt+0xb208>
  40e370:	add	x0, sp, #0x8
  40e374:	mov	w1, #0x3a                  	// #58
  40e378:	mov	w2, #0x1                   	// #1
  40e37c:	bl	40d05c <ferror@plt+0xa09c>
  40e380:	add	x3, sp, #0x8
  40e384:	mov	x2, #0xffffffffffffffff    	// #-1
  40e388:	mov	w0, w20
  40e38c:	mov	x1, x19
  40e390:	bl	40df9c <ferror@plt+0xafdc>
  40e394:	ldp	x20, x19, [sp, #80]
  40e398:	ldp	x29, x30, [sp, #64]
  40e39c:	add	sp, sp, #0x60
  40e3a0:	ret
  40e3a4:	stp	x29, x30, [sp, #-16]!
  40e3a8:	mov	x4, #0xffffffffffffffff    	// #-1
  40e3ac:	mov	x29, sp
  40e3b0:	bl	40e3bc <ferror@plt+0xb3fc>
  40e3b4:	ldp	x29, x30, [sp], #16
  40e3b8:	ret
  40e3bc:	sub	sp, sp, #0x70
  40e3c0:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e3c4:	add	x8, x8, #0xbd8
  40e3c8:	ldp	q0, q1, [x8]
  40e3cc:	ldr	q2, [x8, #32]
  40e3d0:	ldr	x8, [x8, #48]
  40e3d4:	str	x21, [sp, #80]
  40e3d8:	mov	w21, w0
  40e3dc:	mov	x0, sp
  40e3e0:	stp	x29, x30, [sp, #64]
  40e3e4:	stp	x20, x19, [sp, #96]
  40e3e8:	add	x29, sp, #0x40
  40e3ec:	mov	x19, x4
  40e3f0:	mov	x20, x3
  40e3f4:	stp	q0, q1, [sp]
  40e3f8:	str	q2, [sp, #32]
  40e3fc:	str	x8, [sp, #48]
  40e400:	bl	40d0b4 <ferror@plt+0xa0f4>
  40e404:	mov	x3, sp
  40e408:	mov	w0, w21
  40e40c:	mov	x1, x20
  40e410:	mov	x2, x19
  40e414:	bl	40df9c <ferror@plt+0xafdc>
  40e418:	ldp	x20, x19, [sp, #96]
  40e41c:	ldr	x21, [sp, #80]
  40e420:	ldp	x29, x30, [sp, #64]
  40e424:	add	sp, sp, #0x70
  40e428:	ret
  40e42c:	stp	x29, x30, [sp, #-16]!
  40e430:	mov	x3, x2
  40e434:	mov	x2, x1
  40e438:	mov	x1, x0
  40e43c:	mov	w0, wzr
  40e440:	mov	x29, sp
  40e444:	bl	40e3a4 <ferror@plt+0xb3e4>
  40e448:	ldp	x29, x30, [sp], #16
  40e44c:	ret
  40e450:	stp	x29, x30, [sp, #-16]!
  40e454:	mov	x4, x3
  40e458:	mov	x3, x2
  40e45c:	mov	x2, x1
  40e460:	mov	x1, x0
  40e464:	mov	w0, wzr
  40e468:	mov	x29, sp
  40e46c:	bl	40e3bc <ferror@plt+0xb3fc>
  40e470:	ldp	x29, x30, [sp], #16
  40e474:	ret
  40e478:	stp	x29, x30, [sp, #-16]!
  40e47c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x149a4>
  40e480:	add	x3, x3, #0x4f8
  40e484:	mov	x29, sp
  40e488:	bl	40df9c <ferror@plt+0xafdc>
  40e48c:	ldp	x29, x30, [sp], #16
  40e490:	ret
  40e494:	stp	x29, x30, [sp, #-16]!
  40e498:	mov	x2, x1
  40e49c:	mov	x1, x0
  40e4a0:	mov	w0, wzr
  40e4a4:	mov	x29, sp
  40e4a8:	bl	40e478 <ferror@plt+0xb4b8>
  40e4ac:	ldp	x29, x30, [sp], #16
  40e4b0:	ret
  40e4b4:	stp	x29, x30, [sp, #-16]!
  40e4b8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e4bc:	mov	x29, sp
  40e4c0:	bl	40e478 <ferror@plt+0xb4b8>
  40e4c4:	ldp	x29, x30, [sp], #16
  40e4c8:	ret
  40e4cc:	stp	x29, x30, [sp, #-16]!
  40e4d0:	mov	x1, x0
  40e4d4:	mov	w0, wzr
  40e4d8:	mov	x29, sp
  40e4dc:	bl	40e4b4 <ferror@plt+0xb4f4>
  40e4e0:	ldp	x29, x30, [sp], #16
  40e4e4:	ret
  40e4e8:	stp	x29, x30, [sp, #-48]!
  40e4ec:	stp	x20, x19, [sp, #32]
  40e4f0:	mov	x20, x0
  40e4f4:	mov	w19, w1
  40e4f8:	mov	w2, #0x5                   	// #5
  40e4fc:	mov	x0, xzr
  40e500:	mov	x1, x20
  40e504:	str	x21, [sp, #16]
  40e508:	mov	x29, sp
  40e50c:	bl	402ea0 <dcgettext@plt>
  40e510:	cmp	x0, x20
  40e514:	b.ne	40e5a0 <ferror@plt+0xb5e0>  // b.any
  40e518:	bl	411ba4 <_obstack_memory_used@@Base+0x548>
  40e51c:	mov	w1, #0x55                  	// #85
  40e520:	mov	w2, #0x54                  	// #84
  40e524:	mov	w3, #0x46                  	// #70
  40e528:	mov	w4, #0x2d                  	// #45
  40e52c:	mov	w5, #0x38                  	// #56
  40e530:	mov	w6, wzr
  40e534:	mov	w7, wzr
  40e538:	mov	x21, x0
  40e53c:	bl	40e5cc <ferror@plt+0xb60c>
  40e540:	cbz	w0, 40e55c <ferror@plt+0xb59c>
  40e544:	ldrb	w8, [x20]
  40e548:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e54c:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e550:	add	x9, x9, #0x9f2
  40e554:	add	x10, x10, #0x9ee
  40e558:	b	40e598 <ferror@plt+0xb5d8>
  40e55c:	mov	w1, #0x47                  	// #71
  40e560:	mov	w2, #0x42                  	// #66
  40e564:	mov	w3, #0x31                  	// #49
  40e568:	mov	w4, #0x38                  	// #56
  40e56c:	mov	w5, #0x30                  	// #48
  40e570:	mov	w6, #0x33                  	// #51
  40e574:	mov	w7, #0x30                  	// #48
  40e578:	mov	x0, x21
  40e57c:	bl	40e5cc <ferror@plt+0xb60c>
  40e580:	cbz	w0, 40e5b0 <ferror@plt+0xb5f0>
  40e584:	ldrb	w8, [x20]
  40e588:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e58c:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e590:	add	x9, x9, #0x9fa
  40e594:	add	x10, x10, #0x9f6
  40e598:	cmp	w8, #0x60
  40e59c:	csel	x0, x10, x9, eq  // eq = none
  40e5a0:	ldp	x20, x19, [sp, #32]
  40e5a4:	ldr	x21, [sp, #16]
  40e5a8:	ldp	x29, x30, [sp], #48
  40e5ac:	ret
  40e5b0:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x19a4>
  40e5b4:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e5b8:	add	x8, x8, #0xc34
  40e5bc:	add	x9, x9, #0x321
  40e5c0:	cmp	w19, #0x9
  40e5c4:	csel	x0, x9, x8, eq  // eq = none
  40e5c8:	b	40e5a0 <ferror@plt+0xb5e0>
  40e5cc:	stp	x29, x30, [sp, #-80]!
  40e5d0:	stp	x26, x25, [sp, #16]
  40e5d4:	mov	x25, x0
  40e5d8:	and	w0, w1, #0xff
  40e5dc:	stp	x24, x23, [sp, #32]
  40e5e0:	stp	x22, x21, [sp, #48]
  40e5e4:	stp	x20, x19, [sp, #64]
  40e5e8:	mov	x29, sp
  40e5ec:	mov	w19, w7
  40e5f0:	mov	w20, w6
  40e5f4:	mov	w21, w5
  40e5f8:	mov	w22, w4
  40e5fc:	mov	w23, w3
  40e600:	mov	w24, w2
  40e604:	mov	w26, w1
  40e608:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e60c:	ldrb	w8, [x25]
  40e610:	tbz	w0, #0, 40e628 <ferror@plt+0xb668>
  40e614:	and	w8, w8, #0xffffffdf
  40e618:	cmp	w8, w26, uxtb
  40e61c:	b.eq	40e630 <ferror@plt+0xb670>  // b.none
  40e620:	mov	w0, wzr
  40e624:	b	40e660 <ferror@plt+0xb6a0>
  40e628:	cmp	w8, w26, uxtb
  40e62c:	b.ne	40e620 <ferror@plt+0xb660>  // b.any
  40e630:	tst	w26, #0xff
  40e634:	b.eq	40e65c <ferror@plt+0xb69c>  // b.none
  40e638:	mov	x0, x25
  40e63c:	mov	w1, w24
  40e640:	mov	w2, w23
  40e644:	mov	w3, w22
  40e648:	mov	w4, w21
  40e64c:	mov	w5, w20
  40e650:	mov	w6, w19
  40e654:	bl	40e678 <ferror@plt+0xb6b8>
  40e658:	b	40e660 <ferror@plt+0xb6a0>
  40e65c:	mov	w0, #0x1                   	// #1
  40e660:	ldp	x20, x19, [sp, #64]
  40e664:	ldp	x22, x21, [sp, #48]
  40e668:	ldp	x24, x23, [sp, #32]
  40e66c:	ldp	x26, x25, [sp, #16]
  40e670:	ldp	x29, x30, [sp], #80
  40e674:	ret
  40e678:	stp	x29, x30, [sp, #-80]!
  40e67c:	stp	x24, x23, [sp, #32]
  40e680:	mov	x24, x0
  40e684:	and	w0, w1, #0xff
  40e688:	str	x25, [sp, #16]
  40e68c:	stp	x22, x21, [sp, #48]
  40e690:	stp	x20, x19, [sp, #64]
  40e694:	mov	x29, sp
  40e698:	mov	w19, w6
  40e69c:	mov	w20, w5
  40e6a0:	mov	w21, w4
  40e6a4:	mov	w22, w3
  40e6a8:	mov	w23, w2
  40e6ac:	mov	w25, w1
  40e6b0:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e6b4:	ldrb	w8, [x24, #1]
  40e6b8:	tbz	w0, #0, 40e6d0 <ferror@plt+0xb710>
  40e6bc:	and	w8, w8, #0xffffffdf
  40e6c0:	cmp	w8, w25, uxtb
  40e6c4:	b.eq	40e6d8 <ferror@plt+0xb718>  // b.none
  40e6c8:	mov	w0, wzr
  40e6cc:	b	40e704 <ferror@plt+0xb744>
  40e6d0:	cmp	w8, w25, uxtb
  40e6d4:	b.ne	40e6c8 <ferror@plt+0xb708>  // b.any
  40e6d8:	tst	w25, #0xff
  40e6dc:	b.eq	40e700 <ferror@plt+0xb740>  // b.none
  40e6e0:	mov	x0, x24
  40e6e4:	mov	w1, w23
  40e6e8:	mov	w2, w22
  40e6ec:	mov	w3, w21
  40e6f0:	mov	w4, w20
  40e6f4:	mov	w5, w19
  40e6f8:	bl	40e71c <ferror@plt+0xb75c>
  40e6fc:	b	40e704 <ferror@plt+0xb744>
  40e700:	mov	w0, #0x1                   	// #1
  40e704:	ldp	x20, x19, [sp, #64]
  40e708:	ldp	x22, x21, [sp, #48]
  40e70c:	ldp	x24, x23, [sp, #32]
  40e710:	ldr	x25, [sp, #16]
  40e714:	ldp	x29, x30, [sp], #80
  40e718:	ret
  40e71c:	stp	x29, x30, [sp, #-64]!
  40e720:	stp	x24, x23, [sp, #16]
  40e724:	mov	x23, x0
  40e728:	and	w0, w1, #0xff
  40e72c:	stp	x22, x21, [sp, #32]
  40e730:	stp	x20, x19, [sp, #48]
  40e734:	mov	x29, sp
  40e738:	mov	w19, w5
  40e73c:	mov	w20, w4
  40e740:	mov	w21, w3
  40e744:	mov	w22, w2
  40e748:	mov	w24, w1
  40e74c:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e750:	ldrb	w8, [x23, #2]
  40e754:	tbz	w0, #0, 40e76c <ferror@plt+0xb7ac>
  40e758:	and	w8, w8, #0xffffffdf
  40e75c:	cmp	w8, w24, uxtb
  40e760:	b.eq	40e774 <ferror@plt+0xb7b4>  // b.none
  40e764:	mov	w0, wzr
  40e768:	b	40e79c <ferror@plt+0xb7dc>
  40e76c:	cmp	w8, w24, uxtb
  40e770:	b.ne	40e764 <ferror@plt+0xb7a4>  // b.any
  40e774:	tst	w24, #0xff
  40e778:	b.eq	40e798 <ferror@plt+0xb7d8>  // b.none
  40e77c:	mov	x0, x23
  40e780:	mov	w1, w22
  40e784:	mov	w2, w21
  40e788:	mov	w3, w20
  40e78c:	mov	w4, w19
  40e790:	bl	40e7b0 <ferror@plt+0xb7f0>
  40e794:	b	40e79c <ferror@plt+0xb7dc>
  40e798:	mov	w0, #0x1                   	// #1
  40e79c:	ldp	x20, x19, [sp, #48]
  40e7a0:	ldp	x22, x21, [sp, #32]
  40e7a4:	ldp	x24, x23, [sp, #16]
  40e7a8:	ldp	x29, x30, [sp], #64
  40e7ac:	ret
  40e7b0:	stp	x29, x30, [sp, #-64]!
  40e7b4:	stp	x22, x21, [sp, #32]
  40e7b8:	mov	x22, x0
  40e7bc:	and	w0, w1, #0xff
  40e7c0:	str	x23, [sp, #16]
  40e7c4:	stp	x20, x19, [sp, #48]
  40e7c8:	mov	x29, sp
  40e7cc:	mov	w19, w4
  40e7d0:	mov	w20, w3
  40e7d4:	mov	w21, w2
  40e7d8:	mov	w23, w1
  40e7dc:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e7e0:	ldrb	w8, [x22, #3]
  40e7e4:	tbz	w0, #0, 40e7fc <ferror@plt+0xb83c>
  40e7e8:	and	w8, w8, #0xffffffdf
  40e7ec:	cmp	w8, w23, uxtb
  40e7f0:	b.eq	40e804 <ferror@plt+0xb844>  // b.none
  40e7f4:	mov	w0, wzr
  40e7f8:	b	40e828 <ferror@plt+0xb868>
  40e7fc:	cmp	w8, w23, uxtb
  40e800:	b.ne	40e7f4 <ferror@plt+0xb834>  // b.any
  40e804:	tst	w23, #0xff
  40e808:	b.eq	40e824 <ferror@plt+0xb864>  // b.none
  40e80c:	mov	x0, x22
  40e810:	mov	w1, w21
  40e814:	mov	w2, w20
  40e818:	mov	w3, w19
  40e81c:	bl	40e83c <ferror@plt+0xb87c>
  40e820:	b	40e828 <ferror@plt+0xb868>
  40e824:	mov	w0, #0x1                   	// #1
  40e828:	ldp	x20, x19, [sp, #48]
  40e82c:	ldp	x22, x21, [sp, #32]
  40e830:	ldr	x23, [sp, #16]
  40e834:	ldp	x29, x30, [sp], #64
  40e838:	ret
  40e83c:	stp	x29, x30, [sp, #-48]!
  40e840:	stp	x22, x21, [sp, #16]
  40e844:	mov	x21, x0
  40e848:	and	w0, w1, #0xff
  40e84c:	stp	x20, x19, [sp, #32]
  40e850:	mov	x29, sp
  40e854:	mov	w19, w3
  40e858:	mov	w20, w2
  40e85c:	mov	w22, w1
  40e860:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e864:	ldrb	w8, [x21, #4]
  40e868:	tbz	w0, #0, 40e880 <ferror@plt+0xb8c0>
  40e86c:	and	w8, w8, #0xffffffdf
  40e870:	cmp	w8, w22, uxtb
  40e874:	b.eq	40e888 <ferror@plt+0xb8c8>  // b.none
  40e878:	mov	w0, wzr
  40e87c:	b	40e8a8 <ferror@plt+0xb8e8>
  40e880:	cmp	w8, w22, uxtb
  40e884:	b.ne	40e878 <ferror@plt+0xb8b8>  // b.any
  40e888:	tst	w22, #0xff
  40e88c:	b.eq	40e8a4 <ferror@plt+0xb8e4>  // b.none
  40e890:	mov	x0, x21
  40e894:	mov	w1, w20
  40e898:	mov	w2, w19
  40e89c:	bl	40e8b8 <ferror@plt+0xb8f8>
  40e8a0:	b	40e8a8 <ferror@plt+0xb8e8>
  40e8a4:	mov	w0, #0x1                   	// #1
  40e8a8:	ldp	x20, x19, [sp, #32]
  40e8ac:	ldp	x22, x21, [sp, #16]
  40e8b0:	ldp	x29, x30, [sp], #48
  40e8b4:	ret
  40e8b8:	stp	x29, x30, [sp, #-48]!
  40e8bc:	stp	x20, x19, [sp, #32]
  40e8c0:	mov	x20, x0
  40e8c4:	and	w0, w1, #0xff
  40e8c8:	str	x21, [sp, #16]
  40e8cc:	mov	x29, sp
  40e8d0:	mov	w19, w2
  40e8d4:	mov	w21, w1
  40e8d8:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e8dc:	ldrb	w8, [x20, #5]
  40e8e0:	tbz	w0, #0, 40e8f8 <ferror@plt+0xb938>
  40e8e4:	and	w8, w8, #0xffffffdf
  40e8e8:	cmp	w8, w21, uxtb
  40e8ec:	b.eq	40e900 <ferror@plt+0xb940>  // b.none
  40e8f0:	mov	w0, wzr
  40e8f4:	b	40e91c <ferror@plt+0xb95c>
  40e8f8:	cmp	w8, w21, uxtb
  40e8fc:	b.ne	40e8f0 <ferror@plt+0xb930>  // b.any
  40e900:	tst	w21, #0xff
  40e904:	b.eq	40e918 <ferror@plt+0xb958>  // b.none
  40e908:	mov	x0, x20
  40e90c:	mov	w1, w19
  40e910:	bl	40e92c <ferror@plt+0xb96c>
  40e914:	b	40e91c <ferror@plt+0xb95c>
  40e918:	mov	w0, #0x1                   	// #1
  40e91c:	ldp	x20, x19, [sp, #32]
  40e920:	ldr	x21, [sp, #16]
  40e924:	ldp	x29, x30, [sp], #48
  40e928:	ret
  40e92c:	stp	x29, x30, [sp, #-32]!
  40e930:	stp	x20, x19, [sp, #16]
  40e934:	mov	x19, x0
  40e938:	and	w0, w1, #0xff
  40e93c:	mov	x29, sp
  40e940:	mov	w20, w1
  40e944:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e948:	ldrb	w8, [x19, #6]
  40e94c:	tbz	w0, #0, 40e964 <ferror@plt+0xb9a4>
  40e950:	and	w8, w8, #0xffffffdf
  40e954:	cmp	w8, w20, uxtb
  40e958:	b.eq	40e96c <ferror@plt+0xb9ac>  // b.none
  40e95c:	mov	w0, wzr
  40e960:	b	40e984 <ferror@plt+0xb9c4>
  40e964:	cmp	w8, w20, uxtb
  40e968:	b.ne	40e95c <ferror@plt+0xb99c>  // b.any
  40e96c:	tst	w20, #0xff
  40e970:	b.eq	40e980 <ferror@plt+0xb9c0>  // b.none
  40e974:	mov	x0, x19
  40e978:	bl	40e990 <ferror@plt+0xb9d0>
  40e97c:	b	40e984 <ferror@plt+0xb9c4>
  40e980:	mov	w0, #0x1                   	// #1
  40e984:	ldp	x20, x19, [sp, #16]
  40e988:	ldp	x29, x30, [sp], #32
  40e98c:	ret
  40e990:	stp	x29, x30, [sp, #-32]!
  40e994:	str	x19, [sp, #16]
  40e998:	mov	x19, x0
  40e99c:	mov	w0, wzr
  40e9a0:	mov	x29, sp
  40e9a4:	bl	4118ec <_obstack_memory_used@@Base+0x290>
  40e9a8:	ldrb	w8, [x19, #7]
  40e9ac:	tbz	w0, #0, 40e9c0 <ferror@plt+0xba00>
  40e9b0:	tst	w8, #0xffffffdf
  40e9b4:	b.eq	40e9c4 <ferror@plt+0xba04>  // b.none
  40e9b8:	mov	w0, wzr
  40e9bc:	b	40e9c8 <ferror@plt+0xba08>
  40e9c0:	cbnz	w8, 40e9b8 <ferror@plt+0xb9f8>
  40e9c4:	mov	w0, #0x1                   	// #1
  40e9c8:	ldr	x19, [sp, #16]
  40e9cc:	ldp	x29, x30, [sp], #32
  40e9d0:	ret
  40e9d4:	stp	x29, x30, [sp, #-48]!
  40e9d8:	str	x21, [sp, #16]
  40e9dc:	stp	x20, x19, [sp, #32]
  40e9e0:	mov	x29, sp
  40e9e4:	cbz	x1, 40ea14 <ferror@plt+0xba54>
  40e9e8:	mov	x19, x1
  40e9ec:	mov	x20, x0
  40e9f0:	cbz	x0, 40ea24 <ferror@plt+0xba64>
  40e9f4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40e9f8:	add	x1, x1, #0x9fd
  40e9fc:	mov	x0, x20
  40ea00:	bl	411ad8 <_obstack_memory_used@@Base+0x47c>
  40ea04:	mov	x21, x0
  40ea08:	cbnz	x0, 40ea28 <ferror@plt+0xba68>
  40ea0c:	mov	x20, xzr
  40ea10:	b	40ea78 <ferror@plt+0xbab8>
  40ea14:	mov	x0, xzr
  40ea18:	bl	40ea8c <ferror@plt+0xbacc>
  40ea1c:	mov	x20, x0
  40ea20:	b	40ea78 <ferror@plt+0xbab8>
  40ea24:	mov	x21, xzr
  40ea28:	mov	x0, x21
  40ea2c:	mov	x1, x20
  40ea30:	bl	40ea8c <ferror@plt+0xbacc>
  40ea34:	mov	x20, x0
  40ea38:	cbz	x21, 40ea5c <ferror@plt+0xba9c>
  40ea3c:	cmp	x19, #0x1, lsl #12
  40ea40:	mov	w8, #0x1000                	// #4096
  40ea44:	add	x1, x20, #0x18
  40ea48:	csel	x3, x19, x8, cc  // cc = lo, ul, last
  40ea4c:	mov	x0, x21
  40ea50:	mov	w2, wzr
  40ea54:	bl	402960 <setvbuf@plt>
  40ea58:	b	40ea78 <ferror@plt+0xbab8>
  40ea5c:	add	x21, x20, #0x20
  40ea60:	mov	x0, x21
  40ea64:	mov	x1, x19
  40ea68:	str	xzr, [x20, #24]
  40ea6c:	bl	40eac4 <ferror@plt+0xbb04>
  40ea70:	mov	x0, x21
  40ea74:	bl	40f240 <ferror@plt+0xc280>
  40ea78:	mov	x0, x20
  40ea7c:	ldp	x20, x19, [sp, #32]
  40ea80:	ldr	x21, [sp, #16]
  40ea84:	ldp	x29, x30, [sp], #48
  40ea88:	ret
  40ea8c:	stp	x29, x30, [sp, #-32]!
  40ea90:	stp	x20, x19, [sp, #16]
  40ea94:	mov	x20, x0
  40ea98:	mov	w0, #0x1038                	// #4152
  40ea9c:	mov	x29, sp
  40eaa0:	mov	x19, x1
  40eaa4:	bl	410160 <ferror@plt+0xd1a0>
  40eaa8:	adrp	x8, 40e000 <ferror@plt+0xb040>
  40eaac:	add	x8, x8, #0xe88
  40eab0:	stp	x20, x8, [x0]
  40eab4:	str	x19, [x0, #16]
  40eab8:	ldp	x20, x19, [sp, #16]
  40eabc:	ldp	x29, x30, [sp], #32
  40eac0:	ret
  40eac4:	sub	sp, sp, #0x40
  40eac8:	stp	x20, x19, [sp, #48]
  40eacc:	mov	x19, x0
  40ead0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ead4:	str	x21, [sp, #32]
  40ead8:	mov	x21, x1
  40eadc:	add	x0, x0, #0xa1f
  40eae0:	mov	w1, wzr
  40eae4:	stp	x29, x30, [sp, #16]
  40eae8:	add	x29, sp, #0x10
  40eaec:	bl	402a70 <open@plt>
  40eaf0:	tbnz	w0, #31, 40ec60 <ferror@plt+0xbca0>
  40eaf4:	cmp	x21, #0x800
  40eaf8:	mov	w8, #0x800                 	// #2048
  40eafc:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40eb00:	mov	x1, x19
  40eb04:	mov	w20, w0
  40eb08:	bl	402e40 <read@plt>
  40eb0c:	bic	x21, x0, x0, asr #63
  40eb10:	mov	w0, w20
  40eb14:	bl	402b80 <close@plt>
  40eb18:	cmp	x21, #0x7ff
  40eb1c:	b.hi	40eb54 <ferror@plt+0xbb94>  // b.pmore
  40eb20:	mov	w8, #0x800                 	// #2048
  40eb24:	sub	x8, x8, x21
  40eb28:	cmp	x8, #0x10
  40eb2c:	mov	w9, #0x10                  	// #16
  40eb30:	mov	x0, sp
  40eb34:	mov	x1, xzr
  40eb38:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40eb3c:	bl	402b20 <gettimeofday@plt>
  40eb40:	add	x0, x19, x21
  40eb44:	mov	x1, sp
  40eb48:	mov	x2, x20
  40eb4c:	bl	402850 <memcpy@plt>
  40eb50:	add	x21, x20, x21
  40eb54:	cmp	x21, #0x7ff
  40eb58:	b.ls	40ebb4 <ferror@plt+0xbbf4>  // b.plast
  40eb5c:	cmp	x21, #0x7ff
  40eb60:	b.ls	40ebec <ferror@plt+0xbc2c>  // b.plast
  40eb64:	cmp	x21, #0x7ff
  40eb68:	b.ls	40ec24 <ferror@plt+0xbc64>  // b.plast
  40eb6c:	cmp	x21, #0x7ff
  40eb70:	b.hi	40eba0 <ferror@plt+0xbbe0>  // b.pmore
  40eb74:	mov	w8, #0x800                 	// #2048
  40eb78:	sub	x8, x8, x21
  40eb7c:	cmp	x8, #0x4
  40eb80:	mov	w9, #0x4                   	// #4
  40eb84:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40eb88:	bl	402d30 <getgid@plt>
  40eb8c:	str	w0, [sp]
  40eb90:	add	x0, x19, x21
  40eb94:	mov	x1, sp
  40eb98:	mov	x2, x20
  40eb9c:	bl	402850 <memcpy@plt>
  40eba0:	ldp	x20, x19, [sp, #48]
  40eba4:	ldr	x21, [sp, #32]
  40eba8:	ldp	x29, x30, [sp, #16]
  40ebac:	add	sp, sp, #0x40
  40ebb0:	ret
  40ebb4:	mov	w8, #0x800                 	// #2048
  40ebb8:	sub	x8, x8, x21
  40ebbc:	cmp	x8, #0x4
  40ebc0:	mov	w9, #0x4                   	// #4
  40ebc4:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40ebc8:	bl	402a10 <getpid@plt>
  40ebcc:	str	w0, [sp]
  40ebd0:	add	x0, x19, x21
  40ebd4:	mov	x1, sp
  40ebd8:	mov	x2, x20
  40ebdc:	bl	402850 <memcpy@plt>
  40ebe0:	add	x21, x20, x21
  40ebe4:	cmp	x21, #0x7ff
  40ebe8:	b.hi	40eb64 <ferror@plt+0xbba4>  // b.pmore
  40ebec:	mov	w8, #0x800                 	// #2048
  40ebf0:	sub	x8, x8, x21
  40ebf4:	cmp	x8, #0x4
  40ebf8:	mov	w9, #0x4                   	// #4
  40ebfc:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40ec00:	bl	402a80 <getppid@plt>
  40ec04:	str	w0, [sp]
  40ec08:	add	x0, x19, x21
  40ec0c:	mov	x1, sp
  40ec10:	mov	x2, x20
  40ec14:	bl	402850 <memcpy@plt>
  40ec18:	add	x21, x20, x21
  40ec1c:	cmp	x21, #0x7ff
  40ec20:	b.hi	40eb6c <ferror@plt+0xbbac>  // b.pmore
  40ec24:	mov	w8, #0x800                 	// #2048
  40ec28:	sub	x8, x8, x21
  40ec2c:	cmp	x8, #0x4
  40ec30:	mov	w9, #0x4                   	// #4
  40ec34:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40ec38:	bl	402910 <getuid@plt>
  40ec3c:	str	w0, [sp]
  40ec40:	add	x0, x19, x21
  40ec44:	mov	x1, sp
  40ec48:	mov	x2, x20
  40ec4c:	bl	402850 <memcpy@plt>
  40ec50:	add	x21, x20, x21
  40ec54:	cmp	x21, #0x7ff
  40ec58:	b.ls	40eb74 <ferror@plt+0xbbb4>  // b.plast
  40ec5c:	b	40eba0 <ferror@plt+0xbbe0>
  40ec60:	mov	x21, xzr
  40ec64:	cmp	x21, #0x7ff
  40ec68:	b.ls	40eb20 <ferror@plt+0xbb60>  // b.plast
  40ec6c:	b	40eb54 <ferror@plt+0xbb94>
  40ec70:	str	x1, [x0, #8]
  40ec74:	ret
  40ec78:	str	x1, [x0, #16]
  40ec7c:	ret
  40ec80:	stp	x29, x30, [sp, #-16]!
  40ec84:	ldr	x8, [x0]
  40ec88:	mov	x29, sp
  40ec8c:	cbz	x8, 40ec9c <ferror@plt+0xbcdc>
  40ec90:	bl	40ecac <ferror@plt+0xbcec>
  40ec94:	ldp	x29, x30, [sp], #16
  40ec98:	ret
  40ec9c:	add	x0, x0, #0x18
  40eca0:	bl	40ed48 <ferror@plt+0xbd88>
  40eca4:	ldp	x29, x30, [sp], #16
  40eca8:	ret
  40ecac:	stp	x29, x30, [sp, #-64]!
  40ecb0:	stp	x24, x23, [sp, #16]
  40ecb4:	stp	x22, x21, [sp, #32]
  40ecb8:	stp	x20, x19, [sp, #48]
  40ecbc:	ldr	x3, [x0]
  40ecc0:	mov	x20, x1
  40ecc4:	mov	x19, x0
  40ecc8:	mov	w1, #0x1                   	// #1
  40eccc:	mov	x0, x20
  40ecd0:	mov	x29, sp
  40ecd4:	mov	x21, x2
  40ecd8:	bl	402c60 <fread_unlocked@plt>
  40ecdc:	mov	x23, x0
  40ece0:	bl	402f30 <__errno_location@plt>
  40ece4:	subs	x21, x21, x23
  40ece8:	b.eq	40ed34 <ferror@plt+0xbd74>  // b.none
  40ecec:	mov	x22, x0
  40ecf0:	ldr	x0, [x19]
  40ecf4:	ldr	w24, [x22]
  40ecf8:	add	x20, x20, x23
  40ecfc:	bl	402900 <ferror_unlocked@plt>
  40ed00:	cmp	w0, #0x0
  40ed04:	csel	w8, wzr, w24, eq  // eq = none
  40ed08:	str	w8, [x22]
  40ed0c:	ldp	x8, x0, [x19, #8]
  40ed10:	blr	x8
  40ed14:	ldr	x3, [x19]
  40ed18:	mov	w1, #0x1                   	// #1
  40ed1c:	mov	x0, x20
  40ed20:	mov	x2, x21
  40ed24:	bl	402c60 <fread_unlocked@plt>
  40ed28:	mov	x23, x0
  40ed2c:	subs	x21, x21, x0
  40ed30:	b.ne	40ecf0 <ferror@plt+0xbd30>  // b.any
  40ed34:	ldp	x20, x19, [sp, #48]
  40ed38:	ldp	x22, x21, [sp, #32]
  40ed3c:	ldp	x24, x23, [sp, #16]
  40ed40:	ldp	x29, x30, [sp], #64
  40ed44:	ret
  40ed48:	stp	x29, x30, [sp, #-80]!
  40ed4c:	stp	x26, x25, [sp, #16]
  40ed50:	stp	x24, x23, [sp, #32]
  40ed54:	stp	x22, x21, [sp, #48]
  40ed58:	stp	x20, x19, [sp, #64]
  40ed5c:	mov	x20, x0
  40ed60:	ldr	x23, [x20], #8
  40ed64:	mov	w8, #0x1020                	// #4128
  40ed68:	mov	x24, x2
  40ed6c:	mov	x22, x1
  40ed70:	mov	x19, x0
  40ed74:	add	x21, x0, #0x820
  40ed78:	add	x25, x0, x8
  40ed7c:	mov	x29, sp
  40ed80:	b	40ed9c <ferror@plt+0xbddc>
  40ed84:	mov	x2, x24
  40ed88:	bl	402850 <memcpy@plt>
  40ed8c:	sub	x8, x23, x24
  40ed90:	str	x8, [x19]
  40ed94:	mov	w8, #0x1                   	// #1
  40ed98:	cbnz	w8, 40ee28 <ferror@plt+0xbe68>
  40ed9c:	subs	x26, x24, x23
  40eda0:	sub	x1, x25, x23
  40eda4:	mov	x0, x22
  40eda8:	b.ls	40ed84 <ferror@plt+0xbdc4>  // b.plast
  40edac:	mov	x2, x23
  40edb0:	bl	402850 <memcpy@plt>
  40edb4:	add	x22, x22, x23
  40edb8:	tst	x22, #0x7
  40edbc:	b.eq	40eddc <ferror@plt+0xbe1c>  // b.none
  40edc0:	mov	x0, x20
  40edc4:	mov	x1, x21
  40edc8:	bl	40eef8 <ferror@plt+0xbf38>
  40edcc:	mov	w8, wzr
  40edd0:	mov	x24, x26
  40edd4:	mov	w23, #0x800                 	// #2048
  40edd8:	b	40ed98 <ferror@plt+0xbdd8>
  40eddc:	mov	x24, x22
  40ede0:	cmp	x26, #0x800
  40ede4:	b.cc	40ee14 <ferror@plt+0xbe54>  // b.lo, b.ul, b.last
  40ede8:	mov	x0, x20
  40edec:	mov	x1, x24
  40edf0:	bl	40eef8 <ferror@plt+0xbf38>
  40edf4:	subs	x26, x26, #0x800
  40edf8:	add	x24, x24, #0x800
  40edfc:	b.ne	40ede0 <ferror@plt+0xbe20>  // b.any
  40ee00:	mov	w8, #0x1                   	// #1
  40ee04:	str	xzr, [x19]
  40ee08:	mov	x24, x26
  40ee0c:	cbnz	w8, 40ed98 <ferror@plt+0xbdd8>
  40ee10:	b	40edc0 <ferror@plt+0xbe00>
  40ee14:	mov	w8, wzr
  40ee18:	mov	x22, x24
  40ee1c:	mov	x24, x26
  40ee20:	cbnz	w8, 40ed98 <ferror@plt+0xbdd8>
  40ee24:	b	40edc0 <ferror@plt+0xbe00>
  40ee28:	ldp	x20, x19, [sp, #64]
  40ee2c:	ldp	x22, x21, [sp, #48]
  40ee30:	ldp	x24, x23, [sp, #32]
  40ee34:	ldp	x26, x25, [sp, #16]
  40ee38:	ldp	x29, x30, [sp], #80
  40ee3c:	ret
  40ee40:	stp	x29, x30, [sp, #-32]!
  40ee44:	stp	x20, x19, [sp, #16]
  40ee48:	ldr	x19, [x0]
  40ee4c:	mov	w1, #0x1038                	// #4152
  40ee50:	mov	x2, #0xffffffffffffffff    	// #-1
  40ee54:	mov	x29, sp
  40ee58:	mov	x20, x0
  40ee5c:	bl	402e30 <__explicit_bzero_chk@plt>
  40ee60:	mov	x0, x20
  40ee64:	bl	402d10 <free@plt>
  40ee68:	cbz	x19, 40ee78 <ferror@plt+0xbeb8>
  40ee6c:	mov	x0, x19
  40ee70:	bl	410dac <ferror@plt+0xddec>
  40ee74:	b	40ee7c <ferror@plt+0xbebc>
  40ee78:	mov	w0, wzr
  40ee7c:	ldp	x20, x19, [sp, #16]
  40ee80:	ldp	x29, x30, [sp], #32
  40ee84:	ret
  40ee88:	stp	x29, x30, [sp, #-48]!
  40ee8c:	stp	x22, x21, [sp, #16]
  40ee90:	stp	x20, x19, [sp, #32]
  40ee94:	mov	x29, sp
  40ee98:	cbz	x0, 40eef4 <ferror@plt+0xbf34>
  40ee9c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  40eea0:	ldr	w20, [x8, #1232]
  40eea4:	mov	x19, x0
  40eea8:	bl	402f30 <__errno_location@plt>
  40eeac:	ldr	w21, [x0]
  40eeb0:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40eeb4:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  40eeb8:	add	x8, x8, #0xa10
  40eebc:	add	x9, x9, #0xa00
  40eec0:	cmp	w21, #0x0
  40eec4:	csel	x1, x9, x8, eq  // eq = none
  40eec8:	mov	w2, #0x5                   	// #5
  40eecc:	mov	x0, xzr
  40eed0:	bl	402ea0 <dcgettext@plt>
  40eed4:	mov	x22, x0
  40eed8:	mov	x0, x19
  40eedc:	bl	40e4cc <ferror@plt+0xb50c>
  40eee0:	mov	x3, x0
  40eee4:	mov	w0, w20
  40eee8:	mov	w1, w21
  40eeec:	mov	x2, x22
  40eef0:	bl	4028e0 <error@plt>
  40eef4:	bl	402c00 <abort@plt>
  40eef8:	sub	sp, sp, #0x80
  40eefc:	stp	x29, x30, [sp, #32]
  40ef00:	stp	x28, x27, [sp, #48]
  40ef04:	stp	x26, x25, [sp, #64]
  40ef08:	stp	x24, x23, [sp, #80]
  40ef0c:	stp	x22, x21, [sp, #96]
  40ef10:	stp	x20, x19, [sp, #112]
  40ef14:	ldr	x8, [x0, #2064]
  40ef18:	ldr	x9, [x0, #2056]
  40ef1c:	ldr	x23, [x0, #2048]
  40ef20:	add	x29, sp, #0x20
  40ef24:	add	x8, x8, #0x1
  40ef28:	mov	x19, x0
  40ef2c:	add	x21, x8, x9
  40ef30:	add	x26, x0, #0x400
  40ef34:	str	x1, [sp, #16]
  40ef38:	stur	xzr, [x29, #-8]
  40ef3c:	str	x8, [x0, #2064]
  40ef40:	ldur	x24, [x29, #-8]
  40ef44:	ldr	x9, [sp, #16]
  40ef48:	mov	x0, x19
  40ef4c:	add	x25, x19, x24
  40ef50:	ldr	x22, [x25]
  40ef54:	ldr	x8, [x25, #1024]
  40ef58:	add	x27, x9, x24
  40ef5c:	eon	x9, x23, x23, lsl #21
  40ef60:	mov	x1, x22
  40ef64:	add	x23, x9, x8
  40ef68:	bl	40f230 <ferror@plt+0xc270>
  40ef6c:	add	x8, x23, x21
  40ef70:	add	x8, x8, x0
  40ef74:	lsr	x1, x8, #8
  40ef78:	mov	x0, x19
  40ef7c:	str	x8, [x25]
  40ef80:	bl	40f230 <ferror@plt+0xc270>
  40ef84:	add	x21, x0, x22
  40ef88:	mov	x0, x21
  40ef8c:	bl	40f23c <ferror@plt+0xc27c>
  40ef90:	mov	x0, x23
  40ef94:	str	x21, [x27]
  40ef98:	bl	40f23c <ferror@plt+0xc27c>
  40ef9c:	ldr	x22, [x25, #8]
  40efa0:	ldr	x8, [x25, #1032]
  40efa4:	eor	x9, x23, x23, lsr #5
  40efa8:	mov	x0, x19
  40efac:	mov	x1, x22
  40efb0:	add	x20, x9, x8
  40efb4:	bl	40f230 <ferror@plt+0xc270>
  40efb8:	add	x8, x20, x21
  40efbc:	add	x8, x8, x0
  40efc0:	lsr	x1, x8, #8
  40efc4:	mov	x0, x19
  40efc8:	str	x8, [x25, #8]
  40efcc:	bl	40f230 <ferror@plt+0xc270>
  40efd0:	add	x21, x0, x22
  40efd4:	mov	x0, x21
  40efd8:	bl	40f23c <ferror@plt+0xc27c>
  40efdc:	str	x21, [x27, #8]
  40efe0:	ldr	x22, [x25, #16]
  40efe4:	ldr	x8, [x25, #1040]
  40efe8:	eor	x9, x20, x20, lsl #12
  40efec:	mov	x0, x19
  40eff0:	mov	x1, x22
  40eff4:	add	x23, x8, x9
  40eff8:	bl	40f230 <ferror@plt+0xc270>
  40effc:	add	x8, x23, x21
  40f000:	add	x8, x8, x0
  40f004:	lsr	x1, x8, #8
  40f008:	mov	x0, x19
  40f00c:	str	x8, [x25, #16]
  40f010:	bl	40f230 <ferror@plt+0xc270>
  40f014:	add	x21, x0, x22
  40f018:	mov	x0, x21
  40f01c:	bl	40f23c <ferror@plt+0xc27c>
  40f020:	mov	x0, x23
  40f024:	str	x21, [x27, #16]
  40f028:	bl	40f23c <ferror@plt+0xc27c>
  40f02c:	ldr	x22, [x25, #24]
  40f030:	ldr	x8, [x25, #1048]
  40f034:	eor	x9, x23, x23, lsr #33
  40f038:	mov	x0, x19
  40f03c:	mov	x1, x22
  40f040:	add	x23, x9, x8
  40f044:	bl	40f230 <ferror@plt+0xc270>
  40f048:	add	x8, x23, x21
  40f04c:	add	x8, x8, x0
  40f050:	lsr	x1, x8, #8
  40f054:	mov	x0, x19
  40f058:	str	x8, [x25, #24]
  40f05c:	bl	40f230 <ferror@plt+0xc270>
  40f060:	add	x21, x0, x22
  40f064:	mov	x0, x21
  40f068:	bl	40f23c <ferror@plt+0xc27c>
  40f06c:	add	x24, x24, #0x20
  40f070:	add	x25, x19, x24
  40f074:	cmp	x25, x26
  40f078:	stur	x24, [x29, #-8]
  40f07c:	str	x21, [x27, #24]
  40f080:	b.cc	40ef40 <ferror@plt+0xbf80>  // b.lo, b.ul, b.last
  40f084:	add	x8, x19, #0x800
  40f088:	str	x8, [sp]
  40f08c:	ldur	x8, [x29, #-8]
  40f090:	ldr	x9, [sp, #16]
  40f094:	mov	x26, xzr
  40f098:	add	x8, x9, x8
  40f09c:	mov	x24, x8
  40f0a0:	str	x8, [sp, #8]
  40f0a4:	add	x27, x25, x26
  40f0a8:	sub	x8, x27, #0x400
  40f0ac:	ldr	x22, [x25, x26]
  40f0b0:	ldr	x8, [x8]
  40f0b4:	eon	x9, x23, x23, lsl #21
  40f0b8:	mov	x0, x19
  40f0bc:	mov	x1, x22
  40f0c0:	add	x23, x9, x8
  40f0c4:	bl	40f230 <ferror@plt+0xc270>
  40f0c8:	add	x8, x23, x21
  40f0cc:	add	x8, x8, x0
  40f0d0:	lsr	x1, x8, #8
  40f0d4:	mov	x0, x19
  40f0d8:	str	x8, [x25, x26]
  40f0dc:	bl	40f230 <ferror@plt+0xc270>
  40f0e0:	add	x21, x0, x22
  40f0e4:	mov	x0, x21
  40f0e8:	bl	40f23c <ferror@plt+0xc27c>
  40f0ec:	mov	x0, x23
  40f0f0:	str	x21, [x24, x26]
  40f0f4:	bl	40f23c <ferror@plt+0xc27c>
  40f0f8:	ldur	x28, [x29, #-8]
  40f0fc:	add	x9, x19, x26
  40f100:	sub	x8, x27, #0x3f8
  40f104:	ldr	x8, [x8]
  40f108:	add	x20, x9, x28
  40f10c:	ldr	x22, [x20, #8]
  40f110:	eor	x9, x23, x23, lsr #5
  40f114:	mov	x0, x19
  40f118:	add	x23, x9, x8
  40f11c:	mov	x1, x22
  40f120:	bl	40f230 <ferror@plt+0xc270>
  40f124:	add	x8, x23, x21
  40f128:	add	x8, x8, x0
  40f12c:	lsr	x1, x8, #8
  40f130:	mov	x0, x19
  40f134:	str	x8, [x20, #8]
  40f138:	bl	40f230 <ferror@plt+0xc270>
  40f13c:	add	x21, x0, x22
  40f140:	mov	x0, x21
  40f144:	bl	40f23c <ferror@plt+0xc27c>
  40f148:	ldr	x8, [sp, #16]
  40f14c:	eor	x9, x23, x23, lsl #12
  40f150:	mov	x0, x19
  40f154:	add	x8, x8, x26
  40f158:	add	x28, x8, x28
  40f15c:	str	x21, [x28, #8]
  40f160:	sub	x8, x27, #0x3f0
  40f164:	ldr	x22, [x20, #16]
  40f168:	ldr	x8, [x8]
  40f16c:	mov	x1, x22
  40f170:	add	x23, x8, x9
  40f174:	bl	40f230 <ferror@plt+0xc270>
  40f178:	add	x8, x23, x21
  40f17c:	add	x8, x8, x0
  40f180:	lsr	x1, x8, #8
  40f184:	mov	x0, x19
  40f188:	str	x8, [x20, #16]
  40f18c:	bl	40f230 <ferror@plt+0xc270>
  40f190:	add	x21, x0, x22
  40f194:	mov	x0, x21
  40f198:	bl	40f23c <ferror@plt+0xc27c>
  40f19c:	mov	x0, x23
  40f1a0:	str	x21, [x28, #16]
  40f1a4:	bl	40f23c <ferror@plt+0xc27c>
  40f1a8:	sub	x8, x27, #0x3e8
  40f1ac:	ldr	x22, [x20, #24]
  40f1b0:	ldr	x8, [x8]
  40f1b4:	eor	x9, x23, x23, lsr #33
  40f1b8:	mov	x0, x19
  40f1bc:	mov	x1, x22
  40f1c0:	add	x23, x9, x8
  40f1c4:	bl	40f230 <ferror@plt+0xc270>
  40f1c8:	add	x8, x23, x21
  40f1cc:	add	x8, x8, x0
  40f1d0:	lsr	x1, x8, #8
  40f1d4:	mov	x0, x19
  40f1d8:	str	x8, [x20, #24]
  40f1dc:	bl	40f230 <ferror@plt+0xc270>
  40f1e0:	add	x21, x0, x22
  40f1e4:	mov	x0, x21
  40f1e8:	bl	40f23c <ferror@plt+0xc27c>
  40f1ec:	add	x8, x24, x26
  40f1f0:	str	x21, [x8, #24]
  40f1f4:	ldr	x8, [sp]
  40f1f8:	add	x9, x27, #0x20
  40f1fc:	add	x26, x26, #0x20
  40f200:	cmp	x9, x8
  40f204:	b.cc	40f0a4 <ferror@plt+0xc0e4>  // b.lo, b.ul, b.last
  40f208:	str	x23, [x19, #2048]
  40f20c:	str	x21, [x19, #2056]
  40f210:	ldp	x20, x19, [sp, #112]
  40f214:	ldp	x22, x21, [sp, #96]
  40f218:	ldp	x24, x23, [sp, #80]
  40f21c:	ldp	x26, x25, [sp, #64]
  40f220:	ldp	x28, x27, [sp, #48]
  40f224:	ldp	x29, x30, [sp, #32]
  40f228:	add	sp, sp, #0x80
  40f22c:	ret
  40f230:	and	x8, x1, #0x7f8
  40f234:	ldr	x0, [x0, x8]
  40f238:	ret
  40f23c:	ret
  40f240:	sub	sp, sp, #0x80
  40f244:	stp	x22, x21, [sp, #96]
  40f248:	stp	x20, x19, [sp, #112]
  40f24c:	mov	x20, #0x4b7c                	// #19324
  40f250:	mov	x21, #0xc862                	// #51298
  40f254:	mov	x22, #0x12a0                	// #4768
  40f258:	mov	x9, #0x5524                	// #21796
  40f25c:	mov	x10, #0xe0ce                	// #57550
  40f260:	mov	x8, #0x9315                	// #37653
  40f264:	mov	x12, #0x89ed                	// #35309
  40f268:	mov	x11, #0xc0ab                	// #49323
  40f26c:	movk	x20, #0xa288, lsl #16
  40f270:	movk	x21, #0xc73a, lsl #16
  40f274:	movk	x22, #0x3d47, lsl #16
  40f278:	movk	x9, #0x4a59, lsl #16
  40f27c:	movk	x10, #0x8355, lsl #16
  40f280:	movk	x8, #0xa5a0, lsl #16
  40f284:	movk	x12, #0xcbfc, lsl #16
  40f288:	movk	x11, #0x6c44, lsl #16
  40f28c:	movk	x20, #0x4677, lsl #32
  40f290:	movk	x21, #0xb322, lsl #32
  40f294:	movk	x22, #0xa505, lsl #32
  40f298:	movk	x9, #0x2e82, lsl #32
  40f29c:	movk	x10, #0x53db, lsl #32
  40f2a0:	movk	x8, #0x4a0f, lsl #32
  40f2a4:	movk	x12, #0x5bf2, lsl #32
  40f2a8:	movk	x11, #0x704f, lsl #32
  40f2ac:	stp	x24, x23, [sp, #80]
  40f2b0:	add	x23, x0, #0x20
  40f2b4:	movk	x20, #0x647c, lsl #48
  40f2b8:	movk	x21, #0xb9f8, lsl #48
  40f2bc:	movk	x22, #0x8c0e, lsl #48
  40f2c0:	movk	x9, #0xb29b, lsl #48
  40f2c4:	movk	x10, #0x82f0, lsl #48
  40f2c8:	movk	x8, #0x48fe, lsl #48
  40f2cc:	movk	x12, #0xae98, lsl #48
  40f2d0:	movk	x11, #0x98f5, lsl #48
  40f2d4:	mov	x24, #0xfffffffffffffff8    	// #-8
  40f2d8:	stp	x29, x30, [sp, #32]
  40f2dc:	stp	x28, x27, [sp, #48]
  40f2e0:	stp	x26, x25, [sp, #64]
  40f2e4:	add	x29, sp, #0x20
  40f2e8:	str	x0, [sp, #8]
  40f2ec:	ldp	x13, x14, [x23, #-32]
  40f2f0:	ldp	x15, x16, [x23, #-16]
  40f2f4:	add	x13, x13, x20
  40f2f8:	add	x20, x14, x21
  40f2fc:	ldp	x14, x17, [x23]
  40f300:	add	x21, x15, x22
  40f304:	add	x22, x16, x9
  40f308:	ldp	x9, x15, [x23, #16]
  40f30c:	add	x25, x14, x10
  40f310:	add	x26, x17, x8
  40f314:	sub	x28, x13, x25
  40f318:	add	x0, x15, x11
  40f31c:	add	x27, x9, x12
  40f320:	bl	40f23c <ferror@plt+0xc27c>
  40f324:	eor	x26, x26, x0, lsr #9
  40f328:	add	x19, x0, x28
  40f32c:	eor	x27, x27, x28, lsl #9
  40f330:	sub	x0, x20, x26
  40f334:	add	x20, x0, x28
  40f338:	sub	x21, x21, x27
  40f33c:	bl	40f23c <ferror@plt+0xc27c>
  40f340:	eor	x19, x19, x0, lsr #23
  40f344:	add	x28, x0, x21
  40f348:	eor	x20, x20, x21, lsl #15
  40f34c:	sub	x0, x22, x19
  40f350:	add	x22, x0, x21
  40f354:	sub	x25, x25, x20
  40f358:	bl	40f23c <ferror@plt+0xc27c>
  40f35c:	eor	x21, x28, x0, lsr #14
  40f360:	add	x28, x25, x0
  40f364:	eor	x22, x22, x25, lsl #20
  40f368:	sub	x0, x26, x21
  40f36c:	add	x25, x25, x0
  40f370:	sub	x26, x27, x22
  40f374:	bl	40f23c <ferror@plt+0xc27c>
  40f378:	eor	x9, x28, x0, lsr #17
  40f37c:	sub	x11, x19, x9
  40f380:	add	x8, x26, x0
  40f384:	eor	x10, x25, x26, lsl #14
  40f388:	add	x24, x24, #0x8
  40f38c:	add	x12, x26, x11
  40f390:	stp	x20, x21, [x23, #-32]
  40f394:	stp	x22, x9, [x23, #-16]
  40f398:	stp	x10, x8, [x23]
  40f39c:	cmp	x24, #0xf8
  40f3a0:	stp	x12, x11, [x23, #16]
  40f3a4:	add	x23, x23, #0x40
  40f3a8:	b.cc	40f2ec <ferror@plt+0xc32c>  // b.lo, b.ul, b.last
  40f3ac:	ldr	x13, [sp, #8]
  40f3b0:	mov	x24, #0xfffffffffffffff8    	// #-8
  40f3b4:	add	x23, x13, #0x20
  40f3b8:	ldp	x15, x16, [x23, #-16]
  40f3bc:	ldp	x13, x14, [x23, #-32]
  40f3c0:	add	x9, x16, x9
  40f3c4:	add	x19, x14, x21
  40f3c8:	ldp	x14, x17, [x23]
  40f3cc:	str	x9, [sp, #16]
  40f3d0:	add	x13, x13, x20
  40f3d4:	add	x20, x15, x22
  40f3d8:	ldp	x9, x15, [x23, #16]
  40f3dc:	add	x22, x14, x10
  40f3e0:	add	x25, x17, x8
  40f3e4:	sub	x27, x13, x22
  40f3e8:	add	x0, x15, x11
  40f3ec:	add	x26, x9, x12
  40f3f0:	bl	40f23c <ferror@plt+0xc27c>
  40f3f4:	eor	x25, x25, x0, lsr #9
  40f3f8:	add	x28, x0, x27
  40f3fc:	eor	x26, x26, x27, lsl #9
  40f400:	sub	x0, x19, x25
  40f404:	add	x19, x0, x27
  40f408:	sub	x27, x20, x26
  40f40c:	bl	40f23c <ferror@plt+0xc27c>
  40f410:	ldr	x9, [sp, #16]
  40f414:	eor	x8, x28, x0, lsr #23
  40f418:	add	x21, x0, x27
  40f41c:	eor	x20, x19, x27, lsl #15
  40f420:	sub	x0, x9, x8
  40f424:	stur	x8, [x29, #-8]
  40f428:	add	x19, x0, x27
  40f42c:	sub	x27, x22, x20
  40f430:	bl	40f23c <ferror@plt+0xc27c>
  40f434:	eor	x21, x21, x0, lsr #14
  40f438:	add	x28, x27, x0
  40f43c:	eor	x22, x19, x27, lsl #20
  40f440:	sub	x0, x25, x21
  40f444:	add	x19, x27, x0
  40f448:	sub	x25, x26, x22
  40f44c:	bl	40f23c <ferror@plt+0xc27c>
  40f450:	stp	x20, x21, [x23, #-32]
  40f454:	ldur	x11, [x29, #-8]
  40f458:	eor	x9, x28, x0, lsr #17
  40f45c:	add	x8, x25, x0
  40f460:	eor	x10, x19, x25, lsl #14
  40f464:	sub	x11, x11, x9
  40f468:	add	x24, x24, #0x8
  40f46c:	add	x12, x25, x11
  40f470:	stp	x22, x9, [x23, #-16]
  40f474:	stp	x10, x8, [x23]
  40f478:	cmp	x24, #0xf8
  40f47c:	stp	x12, x11, [x23, #16]
  40f480:	add	x23, x23, #0x40
  40f484:	b.cc	40f3b8 <ferror@plt+0xc3f8>  // b.lo, b.ul, b.last
  40f488:	ldr	x8, [sp, #8]
  40f48c:	movi	v0.2d, #0x0
  40f490:	str	xzr, [x8, #2064]
  40f494:	str	q0, [x8, #2048]
  40f498:	ldp	x20, x19, [sp, #112]
  40f49c:	ldp	x22, x21, [sp, #96]
  40f4a0:	ldp	x24, x23, [sp, #80]
  40f4a4:	ldp	x26, x25, [sp, #64]
  40f4a8:	ldp	x28, x27, [sp, #48]
  40f4ac:	ldp	x29, x30, [sp, #32]
  40f4b0:	add	sp, sp, #0x80
  40f4b4:	ret
  40f4b8:	stp	x29, x30, [sp, #-48]!
  40f4bc:	str	x21, [sp, #16]
  40f4c0:	stp	x20, x19, [sp, #32]
  40f4c4:	adrp	x20, 402000 <mbrtowc@plt-0x840>
  40f4c8:	adrp	x21, 402000 <mbrtowc@plt-0x840>
  40f4cc:	add	x20, x20, #0xa40
  40f4d0:	add	x21, x21, #0xd10
  40f4d4:	mov	x19, x0
  40f4d8:	add	x0, x0, #0x18
  40f4dc:	mov	x1, xzr
  40f4e0:	mov	x2, xzr
  40f4e4:	mov	x3, x20
  40f4e8:	mov	x4, x21
  40f4ec:	mov	x29, sp
  40f4f0:	stp	xzr, xzr, [x19]
  40f4f4:	str	xzr, [x19, #16]
  40f4f8:	bl	41133c <_obstack_begin@@Base>
  40f4fc:	add	x0, x19, #0x70
  40f500:	mov	x1, xzr
  40f504:	mov	x2, xzr
  40f508:	mov	x3, x20
  40f50c:	mov	x4, x21
  40f510:	bl	41133c <_obstack_begin@@Base>
  40f514:	add	x0, x19, #0xc8
  40f518:	mov	x1, xzr
  40f51c:	mov	x2, xzr
  40f520:	mov	x3, x20
  40f524:	mov	x4, x21
  40f528:	bl	41133c <_obstack_begin@@Base>
  40f52c:	ldp	x20, x19, [sp, #32]
  40f530:	ldr	x21, [sp, #16]
  40f534:	ldp	x29, x30, [sp], #48
  40f538:	ret
  40f53c:	stp	x29, x30, [sp, #-32]!
  40f540:	str	x19, [sp, #16]
  40f544:	mov	x19, x0
  40f548:	add	x0, x0, #0x18
  40f54c:	mov	x1, xzr
  40f550:	mov	x29, sp
  40f554:	bl	4115d4 <_obstack_free@@Base>
  40f558:	add	x0, x19, #0x70
  40f55c:	mov	x1, xzr
  40f560:	bl	4115d4 <_obstack_free@@Base>
  40f564:	add	x0, x19, #0xc8
  40f568:	mov	x1, xzr
  40f56c:	bl	4115d4 <_obstack_free@@Base>
  40f570:	ldr	x19, [sp, #16]
  40f574:	ldp	x29, x30, [sp], #32
  40f578:	ret
  40f57c:	stp	x29, x30, [sp, #-48]!
  40f580:	stp	x22, x21, [sp, #16]
  40f584:	stp	x20, x19, [sp, #32]
  40f588:	mov	x29, sp
  40f58c:	mov	x20, x1
  40f590:	mov	x19, x0
  40f594:	bl	402ae0 <fgetc@plt>
  40f598:	cmn	w0, #0x1
  40f59c:	b.eq	40f5fc <ferror@plt+0xc63c>  // b.none
  40f5a0:	mov	w22, w0
  40f5a4:	add	x21, x20, #0x18
  40f5a8:	b	40f5d4 <ferror@plt+0xc614>
  40f5ac:	ldr	x8, [x20, #48]
  40f5b0:	add	x9, x8, #0x1
  40f5b4:	str	x9, [x20, #48]
  40f5b8:	strb	w22, [x8]
  40f5bc:	cbz	w22, 40f5f0 <ferror@plt+0xc630>
  40f5c0:	mov	x0, x19
  40f5c4:	bl	402ae0 <fgetc@plt>
  40f5c8:	mov	w22, w0
  40f5cc:	cmn	w0, #0x1
  40f5d0:	b.eq	40f5fc <ferror@plt+0xc63c>  // b.none
  40f5d4:	ldp	x9, x8, [x20, #48]
  40f5d8:	cmp	x8, x9
  40f5dc:	b.ne	40f5ac <ferror@plt+0xc5ec>  // b.any
  40f5e0:	mov	w1, #0x1                   	// #1
  40f5e4:	mov	x0, x21
  40f5e8:	bl	411424 <_obstack_newchunk@@Base>
  40f5ec:	b	40f5ac <ferror@plt+0xc5ec>
  40f5f0:	mov	x0, x20
  40f5f4:	bl	40f724 <ferror@plt+0xc764>
  40f5f8:	b	40f5c0 <ferror@plt+0xc600>
  40f5fc:	ldp	x9, x8, [x20, #40]
  40f600:	cmp	x8, x9
  40f604:	b.eq	40f638 <ferror@plt+0xc678>  // b.none
  40f608:	ldr	x9, [x20, #56]
  40f60c:	cmp	x9, x8
  40f610:	b.ne	40f620 <ferror@plt+0xc660>  // b.any
  40f614:	add	x0, x20, #0x18
  40f618:	mov	w1, #0x1                   	// #1
  40f61c:	bl	411424 <_obstack_newchunk@@Base>
  40f620:	ldr	x8, [x20, #48]
  40f624:	mov	x0, x20
  40f628:	add	x9, x8, #0x1
  40f62c:	str	x9, [x20, #48]
  40f630:	strb	wzr, [x8]
  40f634:	bl	40f724 <ferror@plt+0xc764>
  40f638:	ldp	x9, x8, [x20, #136]
  40f63c:	sub	x8, x8, x9
  40f640:	cmp	x8, #0x7
  40f644:	b.hi	40f654 <ferror@plt+0xc694>  // b.pmore
  40f648:	add	x0, x20, #0x70
  40f64c:	mov	w1, #0x8                   	// #8
  40f650:	bl	411424 <_obstack_newchunk@@Base>
  40f654:	ldr	x8, [x20, #136]
  40f658:	str	xzr, [x8]
  40f65c:	ldp	x8, x9, [x20, #128]
  40f660:	add	x9, x9, #0x8
  40f664:	cmp	x9, x8
  40f668:	str	x9, [x20, #136]
  40f66c:	b.ne	40f67c <ferror@plt+0xc6bc>  // b.any
  40f670:	ldrb	w9, [x20, #192]
  40f674:	orr	w9, w9, #0x2
  40f678:	strb	w9, [x20, #192]
  40f67c:	ldr	x10, [x20, #160]
  40f680:	ldp	x11, x9, [x20, #136]
  40f684:	ldr	x12, [x20, #120]
  40f688:	add	x11, x10, x11
  40f68c:	bic	x10, x11, x10
  40f690:	sub	x11, x10, x12
  40f694:	sub	x12, x9, x12
  40f698:	cmp	x11, x12
  40f69c:	str	x10, [x20, #136]
  40f6a0:	b.ls	40f6a8 <ferror@plt+0xc6e8>  // b.plast
  40f6a4:	str	x9, [x20, #136]
  40f6a8:	ldp	x9, x11, [x20, #216]
  40f6ac:	ldr	x10, [x20, #136]
  40f6b0:	str	x8, [x20, #8]
  40f6b4:	cmp	x11, x9
  40f6b8:	str	x10, [x20, #128]
  40f6bc:	b.ne	40f6cc <ferror@plt+0xc70c>  // b.any
  40f6c0:	ldrb	w8, [x20, #280]
  40f6c4:	orr	w8, w8, #0x2
  40f6c8:	strb	w8, [x20, #280]
  40f6cc:	ldr	x10, [x20, #248]
  40f6d0:	ldp	x11, x8, [x20, #224]
  40f6d4:	ldr	x12, [x20, #208]
  40f6d8:	add	x11, x10, x11
  40f6dc:	bic	x10, x11, x10
  40f6e0:	sub	x11, x10, x12
  40f6e4:	sub	x12, x8, x12
  40f6e8:	cmp	x11, x12
  40f6ec:	str	x10, [x20, #224]
  40f6f0:	b.ls	40f6f8 <ferror@plt+0xc738>  // b.plast
  40f6f4:	str	x8, [x20, #224]
  40f6f8:	ldr	x8, [x20, #224]
  40f6fc:	mov	x0, x19
  40f700:	str	x9, [x20, #16]
  40f704:	str	x8, [x20, #216]
  40f708:	bl	402fc0 <ferror@plt>
  40f70c:	ldp	x20, x19, [sp, #32]
  40f710:	ldp	x22, x21, [sp, #16]
  40f714:	cmp	w0, #0x0
  40f718:	cset	w0, eq  // eq = none
  40f71c:	ldp	x29, x30, [sp], #48
  40f720:	ret
  40f724:	sub	sp, sp, #0x30
  40f728:	stp	x29, x30, [sp, #16]
  40f72c:	stp	x20, x19, [sp, #32]
  40f730:	ldp	x20, x8, [x0, #40]
  40f734:	mov	x19, x0
  40f738:	add	x29, sp, #0x10
  40f73c:	mvn	x9, x20
  40f740:	add	x9, x8, x9
  40f744:	str	x9, [sp, #8]
  40f748:	ldr	x9, [x0, #48]
  40f74c:	cmp	x9, x20
  40f750:	b.ne	40f760 <ferror@plt+0xc7a0>  // b.any
  40f754:	ldrb	w9, [x19, #104]
  40f758:	orr	w9, w9, #0x2
  40f75c:	strb	w9, [x19, #104]
  40f760:	ldr	x10, [x19, #72]
  40f764:	ldr	x11, [x19, #32]
  40f768:	ldr	x9, [x19, #56]
  40f76c:	add	x8, x10, x8
  40f770:	bic	x8, x8, x10
  40f774:	sub	x10, x8, x11
  40f778:	sub	x11, x9, x11
  40f77c:	cmp	x10, x11
  40f780:	str	x8, [x19, #48]
  40f784:	b.ls	40f78c <ferror@plt+0xc7cc>  // b.plast
  40f788:	str	x9, [x19, #48]
  40f78c:	ldp	x9, x8, [x19, #136]
  40f790:	ldr	x10, [x19, #48]
  40f794:	sub	x8, x8, x9
  40f798:	cmp	x8, #0x7
  40f79c:	str	x10, [x19, #40]
  40f7a0:	b.hi	40f7b0 <ferror@plt+0xc7f0>  // b.pmore
  40f7a4:	add	x0, x19, #0x70
  40f7a8:	mov	w1, #0x8                   	// #8
  40f7ac:	bl	411424 <_obstack_newchunk@@Base>
  40f7b0:	ldr	x8, [x19, #136]
  40f7b4:	str	x20, [x8]
  40f7b8:	ldp	x10, x9, [x19, #224]
  40f7bc:	ldr	x8, [x19, #136]
  40f7c0:	sub	x9, x9, x10
  40f7c4:	add	x8, x8, #0x8
  40f7c8:	cmp	x9, #0x7
  40f7cc:	str	x8, [x19, #136]
  40f7d0:	b.hi	40f7e0 <ferror@plt+0xc820>  // b.pmore
  40f7d4:	add	x0, x19, #0xc8
  40f7d8:	mov	w1, #0x8                   	// #8
  40f7dc:	bl	411424 <_obstack_newchunk@@Base>
  40f7e0:	ldr	x8, [x19, #224]
  40f7e4:	ldr	x9, [sp, #8]
  40f7e8:	str	x9, [x8]
  40f7ec:	ldr	x8, [x19, #224]
  40f7f0:	ldr	x9, [x19]
  40f7f4:	add	x8, x8, #0x8
  40f7f8:	add	x9, x9, #0x1
  40f7fc:	str	x8, [x19, #224]
  40f800:	str	x9, [x19]
  40f804:	ldp	x20, x19, [sp, #32]
  40f808:	ldp	x29, x30, [sp, #16]
  40f80c:	add	sp, sp, #0x30
  40f810:	ret
  40f814:	stp	x29, x30, [sp, #-16]!
  40f818:	mov	x29, sp
  40f81c:	bl	402e60 <mkstemp@plt>
  40f820:	bl	40fcac <ferror@plt+0xccec>
  40f824:	ldp	x29, x30, [sp], #16
  40f828:	ret
  40f82c:	stp	x29, x30, [sp, #-32]!
  40f830:	str	x19, [sp, #16]
  40f834:	mov	x29, sp
  40f838:	mov	w19, w1
  40f83c:	bl	402c10 <mkostemp@plt>
  40f840:	mov	w1, w19
  40f844:	bl	411a5c <_obstack_memory_used@@Base+0x400>
  40f848:	ldr	x19, [sp, #16]
  40f84c:	ldp	x29, x30, [sp], #32
  40f850:	ret
  40f854:	stp	x29, x30, [sp, #-16]!
  40f858:	mov	x29, sp
  40f85c:	bl	40f868 <ferror@plt+0xc8a8>
  40f860:	ldp	x29, x30, [sp], #16
  40f864:	ret
  40f868:	stp	x29, x30, [sp, #-16]!
  40f86c:	ldrb	w9, [x0]
  40f870:	ldrb	w10, [x1]
  40f874:	mov	x8, x0
  40f878:	mov	x29, sp
  40f87c:	cmp	w9, #0x2d
  40f880:	b.ne	40f980 <ferror@plt+0xc9c0>  // b.any
  40f884:	ldrb	w9, [x8, #1]!
  40f888:	subs	w12, w9, #0x30
  40f88c:	b.eq	40f884 <ferror@plt+0xc8c4>  // b.none
  40f890:	cmp	w9, w3
  40f894:	b.eq	40f884 <ferror@plt+0xc8c4>  // b.none
  40f898:	cmp	w10, #0x2d
  40f89c:	b.ne	40fb14 <ferror@plt+0xcb54>  // b.any
  40f8a0:	ldrb	w10, [x1, #1]!
  40f8a4:	cmp	w10, #0x30
  40f8a8:	b.eq	40f8a0 <ferror@plt+0xc8e0>  // b.none
  40f8ac:	cmp	w10, w3
  40f8b0:	b.eq	40f8a0 <ferror@plt+0xc8e0>  // b.none
  40f8b4:	b	40f8dc <ferror@plt+0xc91c>
  40f8b8:	cmp	w12, #0x9
  40f8bc:	b.hi	40f8ec <ferror@plt+0xc92c>  // b.pmore
  40f8c0:	ldrb	w9, [x8, #1]!
  40f8c4:	cmp	w9, w3
  40f8c8:	b.eq	40f8c0 <ferror@plt+0xc900>  // b.none
  40f8cc:	ldrb	w10, [x1, #1]!
  40f8d0:	cmp	w10, w3
  40f8d4:	b.eq	40f8cc <ferror@plt+0xc90c>  // b.none
  40f8d8:	sub	w12, w9, #0x30
  40f8dc:	cmp	w12, #0xa
  40f8e0:	cset	w11, cc  // cc = lo, ul, last
  40f8e4:	cmp	w10, w9
  40f8e8:	b.eq	40f8b8 <ferror@plt+0xc8f8>  // b.none
  40f8ec:	cmp	w9, w2
  40f8f0:	sub	w12, w10, #0x30
  40f8f4:	cset	w13, ne  // ne = any
  40f8f8:	cmp	w12, #0xa
  40f8fc:	cset	w14, cc  // cc = lo, ul, last
  40f900:	cmp	w10, w2
  40f904:	cset	w15, eq  // eq = none
  40f908:	eor	w11, w11, #0x1
  40f90c:	and	w11, w15, w11
  40f910:	tbnz	w11, #0, 40fb88 <ferror@plt+0xcbc8>
  40f914:	orr	w11, w13, w14
  40f918:	tbz	w11, #0, 40fb88 <ferror@plt+0xcbc8>
  40f91c:	sub	w11, w9, #0x30
  40f920:	cmp	w11, #0x9
  40f924:	b.hi	40fba4 <ferror@plt+0xcbe4>  // b.pmore
  40f928:	mov	x11, xzr
  40f92c:	ldrb	w13, [x8, #1]!
  40f930:	cmp	w13, w3
  40f934:	b.eq	40f92c <ferror@plt+0xc96c>  // b.none
  40f938:	sub	w13, w13, #0x30
  40f93c:	cmp	w13, #0xa
  40f940:	add	x11, x11, #0x1
  40f944:	b.cc	40f92c <ferror@plt+0xc96c>  // b.lo, b.ul, b.last
  40f948:	cmp	w12, #0x9
  40f94c:	b.hi	40fbb0 <ferror@plt+0xcbf0>  // b.pmore
  40f950:	mov	x8, xzr
  40f954:	ldrb	w12, [x1, #1]!
  40f958:	cmp	w12, w3
  40f95c:	b.eq	40f954 <ferror@plt+0xc994>  // b.none
  40f960:	sub	w12, w12, #0x30
  40f964:	cmp	w12, #0xa
  40f968:	add	x8, x8, #0x1
  40f96c:	b.cc	40f954 <ferror@plt+0xc994>  // b.lo, b.ul, b.last
  40f970:	cmp	x11, x8
  40f974:	b.ne	40fbbc <ferror@plt+0xcbfc>  // b.any
  40f978:	sub	w8, w10, w9
  40f97c:	b	40fac4 <ferror@plt+0xcb04>
  40f980:	cmp	w10, #0x2d
  40f984:	b.ne	40f9d4 <ferror@plt+0xca14>  // b.any
  40f988:	ldrb	w10, [x1, #1]!
  40f98c:	cmp	w10, #0x30
  40f990:	b.eq	40f988 <ferror@plt+0xc9c8>  // b.none
  40f994:	cmp	w10, w3
  40f998:	b.eq	40f988 <ferror@plt+0xc9c8>  // b.none
  40f99c:	cmp	w10, w2
  40f9a0:	b.ne	40f9b8 <ferror@plt+0xc9f8>  // b.any
  40f9a4:	mov	w11, #0x1                   	// #1
  40f9a8:	ldrb	w10, [x1, x11]
  40f9ac:	add	x11, x11, #0x1
  40f9b0:	cmp	w10, #0x30
  40f9b4:	b.eq	40f9a8 <ferror@plt+0xc9e8>  // b.none
  40f9b8:	sub	w10, w10, #0x30
  40f9bc:	cmp	w10, #0xa
  40f9c0:	b.cs	40fad8 <ferror@plt+0xcb18>  // b.hs, b.nlast
  40f9c4:	mov	w0, #0x1                   	// #1
  40f9c8:	ldp	x29, x30, [sp], #16
  40f9cc:	ret
  40f9d0:	ldrb	w9, [x8, #1]!
  40f9d4:	cmp	w9, #0x30
  40f9d8:	b.eq	40f9d0 <ferror@plt+0xca10>  // b.none
  40f9dc:	cmp	w9, w3
  40f9e0:	b.eq	40f9d0 <ferror@plt+0xca10>  // b.none
  40f9e4:	b	40f9ec <ferror@plt+0xca2c>
  40f9e8:	ldrb	w10, [x1, #1]!
  40f9ec:	cmp	w10, #0x30
  40f9f0:	b.eq	40f9e8 <ferror@plt+0xca28>  // b.none
  40f9f4:	cmp	w10, w3
  40f9f8:	b.eq	40f9e8 <ferror@plt+0xca28>  // b.none
  40f9fc:	b	40fa20 <ferror@plt+0xca60>
  40fa00:	cmp	w12, #0x9
  40fa04:	b.hi	40fa34 <ferror@plt+0xca74>  // b.pmore
  40fa08:	ldrb	w9, [x8, #1]!
  40fa0c:	cmp	w9, w3
  40fa10:	b.eq	40fa08 <ferror@plt+0xca48>  // b.none
  40fa14:	ldrb	w10, [x1, #1]!
  40fa18:	cmp	w10, w3
  40fa1c:	b.eq	40fa14 <ferror@plt+0xca54>  // b.none
  40fa20:	sub	w12, w9, #0x30
  40fa24:	cmp	w12, #0xa
  40fa28:	cset	w11, cc  // cc = lo, ul, last
  40fa2c:	cmp	w9, w10
  40fa30:	b.eq	40fa00 <ferror@plt+0xca40>  // b.none
  40fa34:	cmp	w9, w2
  40fa38:	sub	w12, w10, #0x30
  40fa3c:	cset	w13, ne  // ne = any
  40fa40:	cmp	w12, #0xa
  40fa44:	cset	w14, cc  // cc = lo, ul, last
  40fa48:	cmp	w10, w2
  40fa4c:	cset	w15, eq  // eq = none
  40fa50:	eor	w11, w11, #0x1
  40fa54:	and	w11, w15, w11
  40fa58:	tbnz	w11, #0, 40fb94 <ferror@plt+0xcbd4>
  40fa5c:	orr	w11, w13, w14
  40fa60:	tbz	w11, #0, 40fb94 <ferror@plt+0xcbd4>
  40fa64:	sub	w11, w9, #0x30
  40fa68:	cmp	w11, #0x9
  40fa6c:	b.hi	40fbc4 <ferror@plt+0xcc04>  // b.pmore
  40fa70:	mov	x11, xzr
  40fa74:	ldrb	w13, [x8, #1]!
  40fa78:	cmp	w13, w3
  40fa7c:	b.eq	40fa74 <ferror@plt+0xcab4>  // b.none
  40fa80:	sub	w13, w13, #0x30
  40fa84:	cmp	w13, #0xa
  40fa88:	add	x11, x11, #0x1
  40fa8c:	b.cc	40fa74 <ferror@plt+0xcab4>  // b.lo, b.ul, b.last
  40fa90:	cmp	w12, #0x9
  40fa94:	b.hi	40fbd0 <ferror@plt+0xcc10>  // b.pmore
  40fa98:	mov	x8, xzr
  40fa9c:	ldrb	w12, [x1, #1]!
  40faa0:	cmp	w12, w3
  40faa4:	b.eq	40fa9c <ferror@plt+0xcadc>  // b.none
  40faa8:	sub	w12, w12, #0x30
  40faac:	cmp	w12, #0xa
  40fab0:	add	x8, x8, #0x1
  40fab4:	b.cc	40fa9c <ferror@plt+0xcadc>  // b.lo, b.ul, b.last
  40fab8:	cmp	x11, x8
  40fabc:	b.ne	40fbdc <ferror@plt+0xcc1c>  // b.any
  40fac0:	sub	w8, w9, w10
  40fac4:	cmp	x11, #0x0
  40fac8:	csel	w0, wzr, w8, eq  // eq = none
  40facc:	ldp	x29, x30, [sp], #16
  40fad0:	ret
  40fad4:	ldrb	w9, [x8, #1]!
  40fad8:	cmp	w9, #0x30
  40fadc:	b.eq	40fad4 <ferror@plt+0xcb14>  // b.none
  40fae0:	cmp	w9, w3
  40fae4:	b.eq	40fad4 <ferror@plt+0xcb14>  // b.none
  40fae8:	cmp	w9, w2
  40faec:	b.ne	40fb00 <ferror@plt+0xcb40>  // b.any
  40faf0:	add	x8, x8, #0x1
  40faf4:	ldrb	w9, [x8], #1
  40faf8:	cmp	w9, #0x30
  40fafc:	b.eq	40faf4 <ferror@plt+0xcb34>  // b.none
  40fb00:	sub	w8, w9, #0x30
  40fb04:	cmp	w8, #0xa
  40fb08:	cset	w0, cc  // cc = lo, ul, last
  40fb0c:	ldp	x29, x30, [sp], #16
  40fb10:	ret
  40fb14:	cmp	w9, w2
  40fb18:	b.ne	40fb30 <ferror@plt+0xcb70>  // b.any
  40fb1c:	mov	w11, #0x1                   	// #1
  40fb20:	ldrb	w9, [x8, x11]
  40fb24:	add	x11, x11, #0x1
  40fb28:	cmp	w9, #0x30
  40fb2c:	b.eq	40fb20 <ferror@plt+0xcb60>  // b.none
  40fb30:	sub	w8, w9, #0x30
  40fb34:	cmp	w8, #0xa
  40fb38:	b.cs	40fb4c <ferror@plt+0xcb8c>  // b.hs, b.nlast
  40fb3c:	mov	w0, #0xffffffff            	// #-1
  40fb40:	ldp	x29, x30, [sp], #16
  40fb44:	ret
  40fb48:	ldrb	w10, [x1, #1]!
  40fb4c:	cmp	w10, #0x30
  40fb50:	b.eq	40fb48 <ferror@plt+0xcb88>  // b.none
  40fb54:	cmp	w10, w3
  40fb58:	b.eq	40fb48 <ferror@plt+0xcb88>  // b.none
  40fb5c:	cmp	w10, w2
  40fb60:	b.ne	40fb74 <ferror@plt+0xcbb4>  // b.any
  40fb64:	add	x8, x1, #0x1
  40fb68:	ldrb	w10, [x8], #1
  40fb6c:	cmp	w10, #0x30
  40fb70:	b.eq	40fb68 <ferror@plt+0xcba8>  // b.none
  40fb74:	sub	w8, w10, #0x30
  40fb78:	cmp	w8, #0xa
  40fb7c:	csetm	w0, cc  // cc = lo, ul, last
  40fb80:	ldp	x29, x30, [sp], #16
  40fb84:	ret
  40fb88:	mov	x0, x1
  40fb8c:	mov	x1, x8
  40fb90:	b	40fb98 <ferror@plt+0xcbd8>
  40fb94:	mov	x0, x8
  40fb98:	bl	40fbec <ferror@plt+0xcc2c>
  40fb9c:	ldp	x29, x30, [sp], #16
  40fba0:	ret
  40fba4:	mov	x11, xzr
  40fba8:	cmp	w12, #0x9
  40fbac:	b.ls	40f950 <ferror@plt+0xc990>  // b.plast
  40fbb0:	mov	x8, xzr
  40fbb4:	cmp	x11, x8
  40fbb8:	b.eq	40f978 <ferror@plt+0xc9b8>  // b.none
  40fbbc:	mov	w8, #0x1                   	// #1
  40fbc0:	b	40fbe0 <ferror@plt+0xcc20>
  40fbc4:	mov	x11, xzr
  40fbc8:	cmp	w12, #0x9
  40fbcc:	b.ls	40fa98 <ferror@plt+0xcad8>  // b.plast
  40fbd0:	mov	x8, xzr
  40fbd4:	cmp	x11, x8
  40fbd8:	b.eq	40fac0 <ferror@plt+0xcb00>  // b.none
  40fbdc:	mov	w8, #0xffffffff            	// #-1
  40fbe0:	cneg	w0, w8, cs  // cs = hs, nlast
  40fbe4:	ldp	x29, x30, [sp], #16
  40fbe8:	ret
  40fbec:	ldrb	w8, [x0]
  40fbf0:	cmp	w8, w2, uxtb
  40fbf4:	b.ne	40fc34 <ferror@plt+0xcc74>  // b.any
  40fbf8:	ldrb	w9, [x1]
  40fbfc:	cmp	w9, w2, uxtb
  40fc00:	b.ne	40fc34 <ferror@plt+0xcc74>  // b.any
  40fc04:	add	x8, x0, #0x1
  40fc08:	add	x1, x1, #0x1
  40fc0c:	ldrb	w9, [x8]
  40fc10:	ldrb	w10, [x1]
  40fc14:	subs	w0, w9, w10
  40fc18:	sub	w9, w9, #0x30
  40fc1c:	b.ne	40fc7c <ferror@plt+0xccbc>  // b.any
  40fc20:	add	x8, x8, #0x1
  40fc24:	cmp	w9, #0xa
  40fc28:	add	x1, x1, #0x1
  40fc2c:	b.cc	40fc0c <ferror@plt+0xcc4c>  // b.lo, b.ul, b.last
  40fc30:	b	40fca4 <ferror@plt+0xcce4>
  40fc34:	cmp	w8, w2, uxtb
  40fc38:	b.ne	40fc58 <ferror@plt+0xcc98>  // b.any
  40fc3c:	add	x8, x0, #0x1
  40fc40:	ldrb	w9, [x8], #1
  40fc44:	subs	w9, w9, #0x30
  40fc48:	b.eq	40fc40 <ferror@plt+0xcc80>  // b.none
  40fc4c:	cmp	w9, #0xa
  40fc50:	cset	w0, cc  // cc = lo, ul, last
  40fc54:	ret
  40fc58:	ldrb	w8, [x1], #1
  40fc5c:	cmp	w8, w2, uxtb
  40fc60:	b.ne	40fca4 <ferror@plt+0xcce4>  // b.any
  40fc64:	ldrb	w8, [x1], #1
  40fc68:	subs	w8, w8, #0x30
  40fc6c:	b.eq	40fc64 <ferror@plt+0xcca4>  // b.none
  40fc70:	cmp	w8, #0xa
  40fc74:	csetm	w0, cc  // cc = lo, ul, last
  40fc78:	b	40fc90 <ferror@plt+0xccd0>
  40fc7c:	cmp	w9, #0x9
  40fc80:	sub	w10, w10, #0x30
  40fc84:	b.hi	40fc94 <ferror@plt+0xccd4>  // b.pmore
  40fc88:	cmp	w10, #0x9
  40fc8c:	b.hi	40fc94 <ferror@plt+0xccd4>  // b.pmore
  40fc90:	ret
  40fc94:	cmp	w9, #0xa
  40fc98:	b.cc	40fc40 <ferror@plt+0xcc80>  // b.lo, b.ul, b.last
  40fc9c:	cmp	w10, #0xa
  40fca0:	b.cc	40fc64 <ferror@plt+0xcca4>  // b.lo, b.ul, b.last
  40fca4:	mov	w0, wzr
  40fca8:	ret
  40fcac:	stp	x29, x30, [sp, #-48]!
  40fcb0:	stp	x20, x19, [sp, #32]
  40fcb4:	mov	w19, w0
  40fcb8:	cmp	w0, #0x2
  40fcbc:	stp	x22, x21, [sp, #16]
  40fcc0:	mov	x29, sp
  40fcc4:	b.hi	40fcf0 <ferror@plt+0xcd30>  // b.pmore
  40fcc8:	mov	w0, w19
  40fccc:	bl	411e00 <_obstack_memory_used@@Base+0x7a4>
  40fcd0:	mov	w20, w0
  40fcd4:	bl	402f30 <__errno_location@plt>
  40fcd8:	ldr	w22, [x0]
  40fcdc:	mov	x21, x0
  40fce0:	mov	w0, w19
  40fce4:	bl	402b80 <close@plt>
  40fce8:	mov	w19, w20
  40fcec:	str	w22, [x21]
  40fcf0:	mov	w0, w19
  40fcf4:	ldp	x20, x19, [sp, #32]
  40fcf8:	ldp	x22, x21, [sp, #16]
  40fcfc:	ldp	x29, x30, [sp], #48
  40fd00:	ret
  40fd04:	sub	sp, sp, #0x50
  40fd08:	str	x21, [sp, #48]
  40fd0c:	stp	x20, x19, [sp, #64]
  40fd10:	mov	x21, x5
  40fd14:	mov	x20, x4
  40fd18:	mov	x5, x3
  40fd1c:	mov	x4, x2
  40fd20:	mov	x19, x0
  40fd24:	stp	x29, x30, [sp, #32]
  40fd28:	add	x29, sp, #0x20
  40fd2c:	cbz	x1, 40fd4c <ferror@plt+0xcd8c>
  40fd30:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fd34:	mov	x3, x1
  40fd38:	add	x2, x2, #0xa36
  40fd3c:	mov	w1, #0x1                   	// #1
  40fd40:	mov	x0, x19
  40fd44:	bl	402ca0 <__fprintf_chk@plt>
  40fd48:	b	40fd68 <ferror@plt+0xcda8>
  40fd4c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fd50:	add	x2, x2, #0xa42
  40fd54:	mov	w1, #0x1                   	// #1
  40fd58:	mov	x0, x19
  40fd5c:	mov	x3, x4
  40fd60:	mov	x4, x5
  40fd64:	bl	402ca0 <__fprintf_chk@plt>
  40fd68:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fd6c:	add	x1, x1, #0xa49
  40fd70:	mov	w2, #0x5                   	// #5
  40fd74:	mov	x0, xzr
  40fd78:	bl	402ea0 <dcgettext@plt>
  40fd7c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fd80:	mov	x3, x0
  40fd84:	add	x2, x2, #0xd14
  40fd88:	mov	w1, #0x1                   	// #1
  40fd8c:	mov	w4, #0x7e3                 	// #2019
  40fd90:	mov	x0, x19
  40fd94:	bl	402ca0 <__fprintf_chk@plt>
  40fd98:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fd9c:	add	x1, x1, #0xa4d
  40fda0:	mov	w2, #0x5                   	// #5
  40fda4:	mov	x0, xzr
  40fda8:	bl	402ea0 <dcgettext@plt>
  40fdac:	mov	x1, x19
  40fdb0:	bl	402eb0 <fputs_unlocked@plt>
  40fdb4:	cmp	x21, #0x9
  40fdb8:	b.hi	40fe00 <ferror@plt+0xce40>  // b.pmore
  40fdbc:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fdc0:	add	x8, x8, #0xa2c
  40fdc4:	adr	x9, 40fdd4 <ferror@plt+0xce14>
  40fdc8:	ldrb	w10, [x8, x21]
  40fdcc:	add	x9, x9, x10, lsl #2
  40fdd0:	br	x9
  40fdd4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fdd8:	add	x1, x1, #0xb19
  40fddc:	mov	w2, #0x5                   	// #5
  40fde0:	mov	x0, xzr
  40fde4:	bl	402ea0 <dcgettext@plt>
  40fde8:	ldr	x3, [x20]
  40fdec:	mov	x2, x0
  40fdf0:	mov	w1, #0x1                   	// #1
  40fdf4:	mov	x0, x19
  40fdf8:	bl	402ca0 <__fprintf_chk@plt>
  40fdfc:	b	40ff98 <ferror@plt+0xcfd8>
  40fe00:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fe04:	add	x1, x1, #0xc58
  40fe08:	b	40ff2c <ferror@plt+0xcf6c>
  40fe0c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fe10:	add	x1, x1, #0xb29
  40fe14:	mov	w2, #0x5                   	// #5
  40fe18:	mov	x0, xzr
  40fe1c:	bl	402ea0 <dcgettext@plt>
  40fe20:	ldp	x3, x4, [x20]
  40fe24:	mov	x2, x0
  40fe28:	mov	w1, #0x1                   	// #1
  40fe2c:	mov	x0, x19
  40fe30:	bl	402ca0 <__fprintf_chk@plt>
  40fe34:	b	40ff98 <ferror@plt+0xcfd8>
  40fe38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fe3c:	add	x1, x1, #0xb40
  40fe40:	mov	w2, #0x5                   	// #5
  40fe44:	mov	x0, xzr
  40fe48:	bl	402ea0 <dcgettext@plt>
  40fe4c:	ldp	x3, x4, [x20]
  40fe50:	ldr	x5, [x20, #16]
  40fe54:	mov	x2, x0
  40fe58:	mov	w1, #0x1                   	// #1
  40fe5c:	mov	x0, x19
  40fe60:	bl	402ca0 <__fprintf_chk@plt>
  40fe64:	b	40ff98 <ferror@plt+0xcfd8>
  40fe68:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fe6c:	add	x1, x1, #0xb5c
  40fe70:	mov	w2, #0x5                   	// #5
  40fe74:	mov	x0, xzr
  40fe78:	bl	402ea0 <dcgettext@plt>
  40fe7c:	ldp	x3, x4, [x20]
  40fe80:	ldp	x5, x6, [x20, #16]
  40fe84:	mov	x2, x0
  40fe88:	mov	w1, #0x1                   	// #1
  40fe8c:	mov	x0, x19
  40fe90:	bl	402ca0 <__fprintf_chk@plt>
  40fe94:	b	40ff98 <ferror@plt+0xcfd8>
  40fe98:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fe9c:	add	x1, x1, #0xb7c
  40fea0:	mov	w2, #0x5                   	// #5
  40fea4:	mov	x0, xzr
  40fea8:	bl	402ea0 <dcgettext@plt>
  40feac:	ldp	x3, x4, [x20]
  40feb0:	ldp	x5, x6, [x20, #16]
  40feb4:	ldr	x7, [x20, #32]
  40feb8:	mov	x2, x0
  40febc:	mov	w1, #0x1                   	// #1
  40fec0:	b	40ff90 <ferror@plt+0xcfd0>
  40fec4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fec8:	add	x1, x1, #0xba0
  40fecc:	mov	w2, #0x5                   	// #5
  40fed0:	mov	x0, xzr
  40fed4:	bl	402ea0 <dcgettext@plt>
  40fed8:	ldp	x3, x4, [x20]
  40fedc:	ldp	x5, x6, [x20, #16]
  40fee0:	ldp	x7, x8, [x20, #32]
  40fee4:	mov	x2, x0
  40fee8:	b	40ff18 <ferror@plt+0xcf58>
  40feec:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40fef0:	add	x1, x1, #0xbc8
  40fef4:	mov	w2, #0x5                   	// #5
  40fef8:	mov	x0, xzr
  40fefc:	bl	402ea0 <dcgettext@plt>
  40ff00:	ldr	x9, [x20, #48]
  40ff04:	ldp	x3, x4, [x20]
  40ff08:	ldp	x5, x6, [x20, #16]
  40ff0c:	ldp	x7, x8, [x20, #32]
  40ff10:	mov	x2, x0
  40ff14:	str	x9, [sp, #8]
  40ff18:	mov	w1, #0x1                   	// #1
  40ff1c:	str	x8, [sp]
  40ff20:	b	40ff90 <ferror@plt+0xcfd0>
  40ff24:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ff28:	add	x1, x1, #0xc24
  40ff2c:	mov	w2, #0x5                   	// #5
  40ff30:	mov	x0, xzr
  40ff34:	bl	402ea0 <dcgettext@plt>
  40ff38:	ldp	x3, x4, [x20]
  40ff3c:	ldp	x5, x6, [x20, #16]
  40ff40:	ldr	x7, [x20, #32]
  40ff44:	ldur	q0, [x20, #40]
  40ff48:	ldp	x8, x9, [x20, #56]
  40ff4c:	mov	x2, x0
  40ff50:	str	x9, [sp, #24]
  40ff54:	b	40ff84 <ferror@plt+0xcfc4>
  40ff58:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  40ff5c:	add	x1, x1, #0xbf4
  40ff60:	mov	w2, #0x5                   	// #5
  40ff64:	mov	x0, xzr
  40ff68:	bl	402ea0 <dcgettext@plt>
  40ff6c:	ldp	x3, x4, [x20]
  40ff70:	ldp	x5, x6, [x20, #16]
  40ff74:	ldr	x7, [x20, #32]
  40ff78:	ldur	q0, [x20, #40]
  40ff7c:	ldr	x8, [x20, #56]
  40ff80:	mov	x2, x0
  40ff84:	mov	w1, #0x1                   	// #1
  40ff88:	str	x8, [sp, #16]
  40ff8c:	str	q0, [sp]
  40ff90:	mov	x0, x19
  40ff94:	bl	402ca0 <__fprintf_chk@plt>
  40ff98:	ldp	x20, x19, [sp, #64]
  40ff9c:	ldr	x21, [sp, #48]
  40ffa0:	ldp	x29, x30, [sp, #32]
  40ffa4:	add	sp, sp, #0x50
  40ffa8:	ret
  40ffac:	stp	x29, x30, [sp, #-16]!
  40ffb0:	mov	x8, xzr
  40ffb4:	mov	x29, sp
  40ffb8:	ldr	x9, [x4, x8, lsl #3]
  40ffbc:	add	x8, x8, #0x1
  40ffc0:	cbnz	x9, 40ffb8 <ferror@plt+0xcff8>
  40ffc4:	sub	x5, x8, #0x1
  40ffc8:	bl	40fd04 <ferror@plt+0xcd44>
  40ffcc:	ldp	x29, x30, [sp], #16
  40ffd0:	ret
  40ffd4:	sub	sp, sp, #0x60
  40ffd8:	mov	x5, xzr
  40ffdc:	mov	x8, sp
  40ffe0:	stp	x29, x30, [sp, #80]
  40ffe4:	add	x29, sp, #0x50
  40ffe8:	ldrsw	x9, [x4, #24]
  40ffec:	tbz	w9, #31, 410000 <ferror@plt+0xd040>
  40fff0:	add	w10, w9, #0x8
  40fff4:	cmp	w10, #0x0
  40fff8:	str	w10, [x4, #24]
  40fffc:	b.le	410028 <ferror@plt+0xd068>
  410000:	ldr	x9, [x4]
  410004:	add	x10, x9, #0x8
  410008:	str	x10, [x4]
  41000c:	ldr	x9, [x9]
  410010:	str	x9, [x8, x5, lsl #3]
  410014:	cbz	x9, 410034 <ferror@plt+0xd074>
  410018:	add	x5, x5, #0x1
  41001c:	cmp	x5, #0xa
  410020:	b.ne	40ffe8 <ferror@plt+0xd028>  // b.any
  410024:	b	410034 <ferror@plt+0xd074>
  410028:	ldr	x10, [x4, #8]
  41002c:	add	x9, x10, x9
  410030:	b	41000c <ferror@plt+0xd04c>
  410034:	mov	x4, sp
  410038:	bl	40fd04 <ferror@plt+0xcd44>
  41003c:	ldp	x29, x30, [sp, #80]
  410040:	add	sp, sp, #0x60
  410044:	ret
  410048:	sub	sp, sp, #0xf0
  41004c:	stp	x29, x30, [sp, #224]
  410050:	add	x29, sp, #0xe0
  410054:	mov	x8, #0xffffffffffffffe0    	// #-32
  410058:	mov	x9, sp
  41005c:	sub	x10, x29, #0x60
  410060:	movk	x8, #0xff80, lsl #32
  410064:	add	x11, x29, #0x10
  410068:	add	x9, x9, #0x80
  41006c:	add	x10, x10, #0x20
  410070:	stp	x9, x8, [x29, #-16]
  410074:	stp	x11, x10, [x29, #-32]
  410078:	stp	x4, x5, [x29, #-96]
  41007c:	stp	x6, x7, [x29, #-80]
  410080:	stp	q0, q1, [sp]
  410084:	ldp	q0, q1, [x29, #-32]
  410088:	sub	x4, x29, #0x40
  41008c:	stp	q2, q3, [sp, #32]
  410090:	stp	q4, q5, [sp, #64]
  410094:	stp	q6, q7, [sp, #96]
  410098:	stp	q0, q1, [x29, #-64]
  41009c:	bl	40ffd4 <ferror@plt+0xd014>
  4100a0:	ldp	x29, x30, [sp, #224]
  4100a4:	add	sp, sp, #0xf0
  4100a8:	ret
  4100ac:	stp	x29, x30, [sp, #-16]!
  4100b0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4100b4:	add	x1, x1, #0xc94
  4100b8:	mov	w2, #0x5                   	// #5
  4100bc:	mov	x0, xzr
  4100c0:	mov	x29, sp
  4100c4:	bl	402ea0 <dcgettext@plt>
  4100c8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  4100cc:	mov	x1, x0
  4100d0:	add	x2, x2, #0xca9
  4100d4:	mov	w0, #0x1                   	// #1
  4100d8:	bl	402af0 <__printf_chk@plt>
  4100dc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  4100e0:	add	x1, x1, #0xcbf
  4100e4:	mov	w2, #0x5                   	// #5
  4100e8:	mov	x0, xzr
  4100ec:	bl	402ea0 <dcgettext@plt>
  4100f0:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x19a4>
  4100f4:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x19a4>
  4100f8:	mov	x1, x0
  4100fc:	add	x2, x2, #0xcae
  410100:	add	x3, x3, #0xf5b
  410104:	mov	w0, #0x1                   	// #1
  410108:	bl	402af0 <__printf_chk@plt>
  41010c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  410110:	add	x1, x1, #0xcd3
  410114:	mov	w2, #0x5                   	// #5
  410118:	mov	x0, xzr
  41011c:	bl	402ea0 <dcgettext@plt>
  410120:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  410124:	ldr	x1, [x8, #1368]
  410128:	bl	402eb0 <fputs_unlocked@plt>
  41012c:	ldp	x29, x30, [sp], #16
  410130:	ret
  410134:	stp	x29, x30, [sp, #-16]!
  410138:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41013c:	udiv	x8, x8, x1
  410140:	cmp	x8, x0
  410144:	mov	x29, sp
  410148:	b.cc	41015c <ferror@plt+0xd19c>  // b.lo, b.ul, b.last
  41014c:	mul	x0, x1, x0
  410150:	bl	410160 <ferror@plt+0xd1a0>
  410154:	ldp	x29, x30, [sp], #16
  410158:	ret
  41015c:	bl	410364 <ferror@plt+0xd3a4>
  410160:	stp	x29, x30, [sp, #-32]!
  410164:	str	x19, [sp, #16]
  410168:	mov	x29, sp
  41016c:	mov	x19, x0
  410170:	bl	402a40 <malloc@plt>
  410174:	cbz	x19, 41017c <ferror@plt+0xd1bc>
  410178:	cbz	x0, 410188 <ferror@plt+0xd1c8>
  41017c:	ldr	x19, [sp, #16]
  410180:	ldp	x29, x30, [sp], #32
  410184:	ret
  410188:	bl	410364 <ferror@plt+0xd3a4>
  41018c:	stp	x29, x30, [sp, #-16]!
  410190:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410194:	udiv	x8, x8, x2
  410198:	cmp	x8, x1
  41019c:	mov	x29, sp
  4101a0:	b.cc	4101b4 <ferror@plt+0xd1f4>  // b.lo, b.ul, b.last
  4101a4:	mul	x1, x2, x1
  4101a8:	bl	4101b8 <ferror@plt+0xd1f8>
  4101ac:	ldp	x29, x30, [sp], #16
  4101b0:	ret
  4101b4:	bl	410364 <ferror@plt+0xd3a4>
  4101b8:	stp	x29, x30, [sp, #-32]!
  4101bc:	str	x19, [sp, #16]
  4101c0:	mov	x19, x1
  4101c4:	mov	x29, sp
  4101c8:	cbz	x0, 4101dc <ferror@plt+0xd21c>
  4101cc:	cbnz	x19, 4101dc <ferror@plt+0xd21c>
  4101d0:	bl	402d10 <free@plt>
  4101d4:	mov	x0, xzr
  4101d8:	b	4101ec <ferror@plt+0xd22c>
  4101dc:	mov	x1, x19
  4101e0:	bl	402b60 <realloc@plt>
  4101e4:	cbz	x19, 4101ec <ferror@plt+0xd22c>
  4101e8:	cbz	x0, 4101f8 <ferror@plt+0xd238>
  4101ec:	ldr	x19, [sp, #16]
  4101f0:	ldp	x29, x30, [sp], #32
  4101f4:	ret
  4101f8:	bl	410364 <ferror@plt+0xd3a4>
  4101fc:	stp	x29, x30, [sp, #-16]!
  410200:	ldr	x8, [x1]
  410204:	mov	x29, sp
  410208:	cbz	x0, 41022c <ferror@plt+0xd26c>
  41020c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  410210:	movk	x9, #0x5554
  410214:	udiv	x9, x9, x2
  410218:	cmp	x9, x8
  41021c:	b.ls	410264 <ferror@plt+0xd2a4>  // b.plast
  410220:	add	x8, x8, x8, lsr #1
  410224:	add	x8, x8, #0x1
  410228:	b	410250 <ferror@plt+0xd290>
  41022c:	cbnz	x8, 410240 <ferror@plt+0xd280>
  410230:	mov	w8, #0x80                  	// #128
  410234:	udiv	x8, x8, x2
  410238:	cmp	x2, #0x80
  41023c:	cinc	x8, x8, hi  // hi = pmore
  410240:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  410244:	udiv	x9, x9, x2
  410248:	cmp	x9, x8
  41024c:	b.cc	410264 <ferror@plt+0xd2a4>  // b.lo, b.ul, b.last
  410250:	str	x8, [x1]
  410254:	mul	x1, x8, x2
  410258:	bl	4101b8 <ferror@plt+0xd1f8>
  41025c:	ldp	x29, x30, [sp], #16
  410260:	ret
  410264:	bl	410364 <ferror@plt+0xd3a4>
  410268:	stp	x29, x30, [sp, #-16]!
  41026c:	mov	x29, sp
  410270:	bl	410160 <ferror@plt+0xd1a0>
  410274:	ldp	x29, x30, [sp], #16
  410278:	ret
  41027c:	stp	x29, x30, [sp, #-16]!
  410280:	mov	w2, #0x1                   	// #1
  410284:	mov	x29, sp
  410288:	bl	4101fc <ferror@plt+0xd23c>
  41028c:	ldp	x29, x30, [sp], #16
  410290:	ret
  410294:	stp	x29, x30, [sp, #-32]!
  410298:	stp	x20, x19, [sp, #16]
  41029c:	mov	x29, sp
  4102a0:	mov	x19, x0
  4102a4:	bl	410160 <ferror@plt+0xd1a0>
  4102a8:	mov	w1, wzr
  4102ac:	mov	x2, x19
  4102b0:	mov	x20, x0
  4102b4:	bl	402b00 <memset@plt>
  4102b8:	mov	x0, x20
  4102bc:	ldp	x20, x19, [sp, #16]
  4102c0:	ldp	x29, x30, [sp], #32
  4102c4:	ret
  4102c8:	stp	x29, x30, [sp, #-16]!
  4102cc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4102d0:	udiv	x8, x8, x1
  4102d4:	cmp	x8, x0
  4102d8:	mov	x29, sp
  4102dc:	b.cc	4102f0 <ferror@plt+0xd330>  // b.lo, b.ul, b.last
  4102e0:	bl	410d54 <ferror@plt+0xdd94>
  4102e4:	cbz	x0, 4102f0 <ferror@plt+0xd330>
  4102e8:	ldp	x29, x30, [sp], #16
  4102ec:	ret
  4102f0:	bl	410364 <ferror@plt+0xd3a4>
  4102f4:	stp	x29, x30, [sp, #-48]!
  4102f8:	stp	x20, x19, [sp, #32]
  4102fc:	mov	x20, x0
  410300:	mov	x0, x1
  410304:	str	x21, [sp, #16]
  410308:	mov	x29, sp
  41030c:	mov	x19, x1
  410310:	bl	410160 <ferror@plt+0xd1a0>
  410314:	mov	x1, x20
  410318:	mov	x2, x19
  41031c:	mov	x21, x0
  410320:	bl	402850 <memcpy@plt>
  410324:	mov	x0, x21
  410328:	ldp	x20, x19, [sp, #32]
  41032c:	ldr	x21, [sp, #16]
  410330:	ldp	x29, x30, [sp], #48
  410334:	ret
  410338:	stp	x29, x30, [sp, #-32]!
  41033c:	str	x19, [sp, #16]
  410340:	mov	x29, sp
  410344:	mov	x19, x0
  410348:	bl	4028b0 <strlen@plt>
  41034c:	add	x1, x0, #0x1
  410350:	mov	x0, x19
  410354:	bl	4102f4 <ferror@plt+0xd334>
  410358:	ldr	x19, [sp, #16]
  41035c:	ldp	x29, x30, [sp], #32
  410360:	ret
  410364:	stp	x29, x30, [sp, #-32]!
  410368:	str	x19, [sp, #16]
  41036c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  410370:	ldr	w19, [x8, #1232]
  410374:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  410378:	add	x1, x1, #0xd43
  41037c:	mov	w2, #0x5                   	// #5
  410380:	mov	x0, xzr
  410384:	mov	x29, sp
  410388:	bl	402ea0 <dcgettext@plt>
  41038c:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  410390:	mov	x3, x0
  410394:	add	x2, x2, #0x6e4
  410398:	mov	w0, w19
  41039c:	mov	w1, wzr
  4103a0:	bl	4028e0 <error@plt>
  4103a4:	bl	402c00 <abort@plt>
  4103a8:	stp	x29, x30, [sp, #-64]!
  4103ac:	str	x23, [sp, #16]
  4103b0:	stp	x22, x21, [sp, #32]
  4103b4:	stp	x20, x19, [sp, #48]
  4103b8:	mov	x29, sp
  4103bc:	mov	x19, x3
  4103c0:	mov	x20, x2
  4103c4:	mov	x21, x1
  4103c8:	mov	x22, x0
  4103cc:	bl	411be0 <_obstack_memory_used@@Base+0x584>
  4103d0:	mov	w23, w0
  4103d4:	bl	402f30 <__errno_location@plt>
  4103d8:	ldr	w0, [x0]
  4103dc:	cbz	w0, 4103f4 <ferror@plt+0xd434>
  4103e0:	mov	x1, x22
  4103e4:	mov	x2, x21
  4103e8:	mov	x3, x20
  4103ec:	mov	x4, x19
  4103f0:	bl	41040c <ferror@plt+0xd44c>
  4103f4:	mov	w0, w23
  4103f8:	ldp	x20, x19, [sp, #48]
  4103fc:	ldp	x22, x21, [sp, #32]
  410400:	ldr	x23, [sp, #16]
  410404:	ldp	x29, x30, [sp], #64
  410408:	ret
  41040c:	stp	x29, x30, [sp, #-64]!
  410410:	stp	x22, x21, [sp, #32]
  410414:	mov	x22, x1
  410418:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  41041c:	stp	x24, x23, [sp, #16]
  410420:	mov	x21, x2
  410424:	mov	w23, w0
  410428:	add	x1, x1, #0xd54
  41042c:	mov	w2, #0x5                   	// #5
  410430:	mov	x0, xzr
  410434:	stp	x20, x19, [sp, #48]
  410438:	mov	x29, sp
  41043c:	mov	x19, x4
  410440:	mov	x20, x3
  410444:	bl	402ea0 <dcgettext@plt>
  410448:	mov	x2, x0
  41044c:	mov	w0, wzr
  410450:	mov	w1, w23
  410454:	bl	4028e0 <error@plt>
  410458:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  41045c:	add	x1, x1, #0xd6d
  410460:	mov	w2, #0x5                   	// #5
  410464:	mov	x0, xzr
  410468:	bl	402ea0 <dcgettext@plt>
  41046c:	mov	x2, x0
  410470:	mov	w0, wzr
  410474:	mov	w1, wzr
  410478:	bl	4028e0 <error@plt>
  41047c:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  410480:	ldr	w23, [x8, #1232]
  410484:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  410488:	add	x1, x1, #0xd98
  41048c:	mov	w2, #0x5                   	// #5
  410490:	mov	x0, xzr
  410494:	bl	402ea0 <dcgettext@plt>
  410498:	mov	x24, x0
  41049c:	mov	w1, #0x8                   	// #8
  4104a0:	mov	w0, wzr
  4104a4:	mov	x2, x22
  4104a8:	mov	x3, x21
  4104ac:	bl	40e1f8 <ferror@plt+0xb238>
  4104b0:	mov	x21, x0
  4104b4:	mov	w0, #0x1                   	// #1
  4104b8:	mov	w1, #0x8                   	// #8
  4104bc:	mov	x2, x20
  4104c0:	mov	x3, x19
  4104c4:	bl	40e1f8 <ferror@plt+0xb238>
  4104c8:	mov	x4, x0
  4104cc:	mov	w0, w23
  4104d0:	mov	w1, wzr
  4104d4:	mov	x2, x24
  4104d8:	mov	x3, x21
  4104dc:	bl	4028e0 <error@plt>
  4104e0:	ldp	x20, x19, [sp, #48]
  4104e4:	ldp	x22, x21, [sp, #32]
  4104e8:	ldp	x24, x23, [sp, #16]
  4104ec:	ldp	x29, x30, [sp], #64
  4104f0:	ret
  4104f4:	stp	x29, x30, [sp, #-64]!
  4104f8:	str	x23, [sp, #16]
  4104fc:	stp	x22, x21, [sp, #32]
  410500:	stp	x20, x19, [sp, #48]
  410504:	mov	x29, sp
  410508:	mov	x21, x3
  41050c:	mov	x19, x2
  410510:	mov	x23, x1
  410514:	mov	x20, x0
  410518:	bl	411d2c <_obstack_memory_used@@Base+0x6d0>
  41051c:	mov	w22, w0
  410520:	bl	402f30 <__errno_location@plt>
  410524:	ldr	w0, [x0]
  410528:	cbz	w0, 410540 <ferror@plt+0xd580>
  41052c:	sub	x2, x23, #0x1
  410530:	sub	x4, x21, #0x1
  410534:	mov	x1, x20
  410538:	mov	x3, x19
  41053c:	bl	41040c <ferror@plt+0xd44c>
  410540:	mov	w0, w22
  410544:	ldp	x20, x19, [sp, #48]
  410548:	ldp	x22, x21, [sp, #32]
  41054c:	ldr	x23, [sp, #16]
  410550:	ldp	x29, x30, [sp], #64
  410554:	ret
  410558:	sub	sp, sp, #0x30
  41055c:	stp	x29, x30, [sp, #16]
  410560:	str	x19, [sp, #32]
  410564:	add	x29, sp, #0x10
  410568:	bl	4119bc <_obstack_memory_used@@Base+0x360>
  41056c:	stp	x0, x1, [sp]
  410570:	bl	402f30 <__errno_location@plt>
  410574:	mov	x19, x0
  410578:	str	wzr, [x0]
  41057c:	mov	x0, sp
  410580:	mov	x1, xzr
  410584:	bl	411260 <ferror@plt+0xe2a0>
  410588:	cbz	w0, 4105a8 <ferror@plt+0xd5e8>
  41058c:	ldr	w8, [x19]
  410590:	orr	w8, w8, #0x4
  410594:	cmp	w8, #0x4
  410598:	b.ne	4105a4 <ferror@plt+0xd5e4>  // b.any
  41059c:	str	wzr, [x19]
  4105a0:	b	41057c <ferror@plt+0xd5bc>
  4105a4:	mov	w0, #0xffffffff            	// #-1
  4105a8:	ldr	x19, [sp, #32]
  4105ac:	ldp	x29, x30, [sp, #16]
  4105b0:	add	sp, sp, #0x30
  4105b4:	ret
  4105b8:	sub	sp, sp, #0x60
  4105bc:	cmp	w2, #0x25
  4105c0:	stp	x29, x30, [sp, #16]
  4105c4:	str	x25, [sp, #32]
  4105c8:	stp	x24, x23, [sp, #48]
  4105cc:	stp	x22, x21, [sp, #64]
  4105d0:	stp	x20, x19, [sp, #80]
  4105d4:	add	x29, sp, #0x10
  4105d8:	b.cs	410884 <ferror@plt+0xd8c4>  // b.hs, b.nlast
  4105dc:	mov	x22, x4
  4105e0:	mov	x19, x3
  4105e4:	mov	w24, w2
  4105e8:	mov	x21, x1
  4105ec:	mov	x20, x0
  4105f0:	bl	402f30 <__errno_location@plt>
  4105f4:	mov	x23, x0
  4105f8:	str	wzr, [x0]
  4105fc:	bl	402cd0 <__ctype_b_loc@plt>
  410600:	ldr	x8, [x0]
  410604:	mov	x10, x20
  410608:	ldrb	w9, [x10], #1
  41060c:	ldrh	w11, [x8, x9, lsl #1]
  410610:	tbnz	w11, #13, 410608 <ferror@plt+0xd648>
  410614:	cmp	x21, #0x0
  410618:	add	x8, x29, #0x18
  41061c:	csel	x21, x8, x21, eq  // eq = none
  410620:	cmp	w9, #0x2d
  410624:	b.ne	41064c <ferror@plt+0xd68c>  // b.any
  410628:	mov	w20, #0x4                   	// #4
  41062c:	mov	w0, w20
  410630:	ldp	x20, x19, [sp, #80]
  410634:	ldp	x22, x21, [sp, #64]
  410638:	ldp	x24, x23, [sp, #48]
  41063c:	ldr	x25, [sp, #32]
  410640:	ldp	x29, x30, [sp, #16]
  410644:	add	sp, sp, #0x60
  410648:	ret
  41064c:	mov	x0, x20
  410650:	mov	x1, x21
  410654:	mov	w2, w24
  410658:	bl	4028a0 <strtoul@plt>
  41065c:	str	x0, [sp, #8]
  410660:	ldr	x25, [x21]
  410664:	cmp	x25, x20
  410668:	b.eq	410710 <ferror@plt+0xd750>  // b.none
  41066c:	ldr	w20, [x23]
  410670:	cbz	w20, 410680 <ferror@plt+0xd6c0>
  410674:	cmp	w20, #0x22
  410678:	b.ne	410628 <ferror@plt+0xd668>  // b.any
  41067c:	mov	w20, #0x1                   	// #1
  410680:	cbz	x22, 410738 <ferror@plt+0xd778>
  410684:	ldrb	w23, [x25]
  410688:	cbz	w23, 410744 <ferror@plt+0xd784>
  41068c:	mov	x0, x22
  410690:	mov	w1, w23
  410694:	bl	402d70 <strchr@plt>
  410698:	cbz	x0, 410798 <ferror@plt+0xd7d8>
  41069c:	sub	w8, w23, #0x45
  4106a0:	mov	w1, #0x400                 	// #1024
  4106a4:	cmp	w8, #0x2f
  4106a8:	mov	w24, #0x1                   	// #1
  4106ac:	b.hi	410760 <ferror@plt+0xd7a0>  // b.pmore
  4106b0:	mov	w9, #0x1                   	// #1
  4106b4:	lsl	x8, x9, x8
  4106b8:	mov	x9, #0x8945                	// #35141
  4106bc:	movk	x9, #0x30, lsl #16
  4106c0:	movk	x9, #0x8144, lsl #32
  4106c4:	tst	x8, x9
  4106c8:	b.eq	410760 <ferror@plt+0xd7a0>  // b.none
  4106cc:	mov	w1, #0x30                  	// #48
  4106d0:	mov	x0, x22
  4106d4:	bl	402d70 <strchr@plt>
  4106d8:	cbz	x0, 41074c <ferror@plt+0xd78c>
  4106dc:	ldrb	w8, [x25, #1]
  4106e0:	cmp	w8, #0x42
  4106e4:	b.eq	410758 <ferror@plt+0xd798>  // b.none
  4106e8:	cmp	w8, #0x44
  4106ec:	b.eq	410758 <ferror@plt+0xd798>  // b.none
  4106f0:	cmp	w8, #0x69
  4106f4:	b.ne	41074c <ferror@plt+0xd78c>  // b.any
  4106f8:	ldrb	w8, [x25, #2]
  4106fc:	mov	w9, #0x3                   	// #3
  410700:	mov	w1, #0x400                 	// #1024
  410704:	cmp	w8, #0x42
  410708:	csinc	x24, x9, xzr, eq  // eq = none
  41070c:	b	410760 <ferror@plt+0xd7a0>
  410710:	cbz	x22, 410628 <ferror@plt+0xd668>
  410714:	ldrb	w1, [x25]
  410718:	cbz	w1, 410628 <ferror@plt+0xd668>
  41071c:	mov	x0, x22
  410720:	bl	402d70 <strchr@plt>
  410724:	cbz	x0, 410628 <ferror@plt+0xd668>
  410728:	mov	w8, #0x1                   	// #1
  41072c:	mov	w20, wzr
  410730:	str	x8, [sp, #8]
  410734:	cbnz	x22, 410684 <ferror@plt+0xd6c4>
  410738:	ldr	x8, [sp, #8]
  41073c:	str	x8, [x19]
  410740:	b	41062c <ferror@plt+0xd66c>
  410744:	mov	w0, w20
  410748:	b	410874 <ferror@plt+0xd8b4>
  41074c:	mov	w1, #0x400                 	// #1024
  410750:	mov	w24, #0x1                   	// #1
  410754:	b	410760 <ferror@plt+0xd7a0>
  410758:	mov	w1, #0x3e8                 	// #1000
  41075c:	mov	w24, #0x2                   	// #2
  410760:	sub	w8, w23, #0x42
  410764:	cmp	w8, #0x35
  410768:	b.hi	410798 <ferror@plt+0xd7d8>  // b.pmore
  41076c:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  410770:	add	x9, x9, #0xdbd
  410774:	adr	x10, 410788 <ferror@plt+0xd7c8>
  410778:	ldrb	w11, [x9, x8]
  41077c:	add	x10, x10, x11, lsl #2
  410780:	mov	w0, wzr
  410784:	br	x10
  410788:	add	x0, sp, #0x8
  41078c:	mov	w2, #0x3                   	// #3
  410790:	bl	4108cc <ferror@plt+0xd90c>
  410794:	b	410840 <ferror@plt+0xd880>
  410798:	ldr	x9, [sp, #8]
  41079c:	mov	w8, wzr
  4107a0:	str	x9, [x19]
  4107a4:	orr	w9, w20, #0x2
  4107a8:	b	410868 <ferror@plt+0xd8a8>
  4107ac:	add	x0, sp, #0x8
  4107b0:	mov	w2, #0x1                   	// #1
  4107b4:	bl	4108cc <ferror@plt+0xd90c>
  4107b8:	b	410840 <ferror@plt+0xd880>
  4107bc:	add	x0, sp, #0x8
  4107c0:	mov	w2, #0x2                   	// #2
  4107c4:	bl	4108cc <ferror@plt+0xd90c>
  4107c8:	b	410840 <ferror@plt+0xd880>
  4107cc:	add	x0, sp, #0x8
  4107d0:	mov	w2, #0x4                   	// #4
  4107d4:	bl	4108cc <ferror@plt+0xd90c>
  4107d8:	b	410840 <ferror@plt+0xd880>
  4107dc:	add	x0, sp, #0x8
  4107e0:	mov	w1, #0x400                 	// #1024
  4107e4:	b	41083c <ferror@plt+0xd87c>
  4107e8:	add	x0, sp, #0x8
  4107ec:	mov	w2, #0x6                   	// #6
  4107f0:	bl	4108cc <ferror@plt+0xd90c>
  4107f4:	b	410840 <ferror@plt+0xd880>
  4107f8:	add	x0, sp, #0x8
  4107fc:	mov	w2, #0x5                   	// #5
  410800:	bl	4108cc <ferror@plt+0xd90c>
  410804:	b	410840 <ferror@plt+0xd880>
  410808:	add	x0, sp, #0x8
  41080c:	mov	w2, #0x8                   	// #8
  410810:	bl	4108cc <ferror@plt+0xd90c>
  410814:	b	410840 <ferror@plt+0xd880>
  410818:	add	x0, sp, #0x8
  41081c:	mov	w2, #0x7                   	// #7
  410820:	bl	4108cc <ferror@plt+0xd90c>
  410824:	b	410840 <ferror@plt+0xd880>
  410828:	add	x0, sp, #0x8
  41082c:	mov	w1, #0x200                 	// #512
  410830:	b	41083c <ferror@plt+0xd87c>
  410834:	add	x0, sp, #0x8
  410838:	mov	w1, #0x2                   	// #2
  41083c:	bl	4108a4 <ferror@plt+0xd8e4>
  410840:	ldr	x8, [x21]
  410844:	orr	w10, w0, w20
  410848:	orr	w11, w10, #0x2
  41084c:	add	x9, x8, x24
  410850:	str	x9, [x21]
  410854:	ldrb	w9, [x8, x24]
  410858:	mov	w8, #0x1                   	// #1
  41085c:	cmp	w9, #0x0
  410860:	csel	w20, w10, w11, eq  // eq = none
  410864:	mov	w9, #0x4                   	// #4
  410868:	mov	w0, w20
  41086c:	mov	w20, w9
  410870:	cbz	w8, 41062c <ferror@plt+0xd66c>
  410874:	ldr	x8, [sp, #8]
  410878:	mov	w20, w0
  41087c:	str	x8, [x19]
  410880:	b	41062c <ferror@plt+0xd66c>
  410884:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  410888:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  41088c:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x29a4>
  410890:	add	x0, x0, #0xdf3
  410894:	add	x1, x1, #0xe19
  410898:	add	x3, x3, #0xe29
  41089c:	mov	w2, #0x54                  	// #84
  4108a0:	bl	402f20 <__assert_fail@plt>
  4108a4:	ldr	x8, [x0]
  4108a8:	sxtw	x9, w1
  4108ac:	umulh	x10, x9, x8
  4108b0:	mul	x9, x8, x9
  4108b4:	cmp	xzr, x10
  4108b8:	cset	w8, ne  // ne = any
  4108bc:	csinv	x9, x9, xzr, eq  // eq = none
  4108c0:	str	x9, [x0]
  4108c4:	mov	w0, w8
  4108c8:	ret
  4108cc:	stp	x29, x30, [sp, #-48]!
  4108d0:	stp	x22, x21, [sp, #16]
  4108d4:	stp	x20, x19, [sp, #32]
  4108d8:	mov	x29, sp
  4108dc:	cbz	w2, 41090c <ferror@plt+0xd94c>
  4108e0:	mov	w19, w2
  4108e4:	mov	w20, w1
  4108e8:	mov	x21, x0
  4108ec:	mov	w22, wzr
  4108f0:	mov	x0, x21
  4108f4:	mov	w1, w20
  4108f8:	sub	w19, w19, #0x1
  4108fc:	bl	4108a4 <ferror@plt+0xd8e4>
  410900:	orr	w22, w0, w22
  410904:	cbnz	w19, 4108f0 <ferror@plt+0xd930>
  410908:	b	410910 <ferror@plt+0xd950>
  41090c:	mov	w22, wzr
  410910:	mov	w0, w22
  410914:	ldp	x20, x19, [sp, #32]
  410918:	ldp	x22, x21, [sp, #16]
  41091c:	ldp	x29, x30, [sp], #48
  410920:	ret
  410924:	stp	x29, x30, [sp, #-16]!
  410928:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  41092c:	ldr	w5, [x8, #1232]
  410930:	mov	x29, sp
  410934:	bl	41093c <ferror@plt+0xd97c>
  410938:	bl	402c00 <abort@plt>
  41093c:	sub	sp, sp, #0x40
  410940:	sub	w9, w0, #0x1
  410944:	cmp	w9, #0x4
  410948:	stp	x29, x30, [sp, #16]
  41094c:	stp	x22, x21, [sp, #32]
  410950:	stp	x20, x19, [sp, #48]
  410954:	add	x29, sp, #0x10
  410958:	b.cs	4109e4 <ferror@plt+0xda24>  // b.hs, b.nlast
  41095c:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x29a4>
  410960:	add	x10, x10, #0xee0
  410964:	mov	w8, w1
  410968:	ldr	x1, [x10, w9, sxtw #3]
  41096c:	mov	w20, w5
  410970:	mov	x19, x4
  410974:	sxtw	x9, w8
  410978:	tbnz	w8, #31, 410990 <ferror@plt+0xd9d0>
  41097c:	lsl	x8, x9, #5
  410980:	ldr	x21, [x3, x8]
  410984:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x29a4>
  410988:	add	x22, x22, #0xe7a
  41098c:	b	4109a8 <ferror@plt+0xd9e8>
  410990:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  410994:	add	x8, x8, #0xe7a
  410998:	sub	x21, x29, #0x4
  41099c:	sturb	w2, [x29, #-4]
  4109a0:	sub	x22, x8, x9
  4109a4:	sturb	wzr, [x29, #-3]
  4109a8:	mov	w2, #0x5                   	// #5
  4109ac:	mov	x0, xzr
  4109b0:	bl	402ea0 <dcgettext@plt>
  4109b4:	mov	x2, x0
  4109b8:	mov	w0, w20
  4109bc:	mov	w1, wzr
  4109c0:	mov	x3, x22
  4109c4:	mov	x4, x21
  4109c8:	mov	x5, x19
  4109cc:	bl	4028e0 <error@plt>
  4109d0:	ldp	x20, x19, [sp, #48]
  4109d4:	ldp	x22, x21, [sp, #32]
  4109d8:	ldp	x29, x30, [sp, #16]
  4109dc:	add	sp, sp, #0x40
  4109e0:	ret
  4109e4:	bl	402c00 <abort@plt>
  4109e8:	sub	sp, sp, #0x60
  4109ec:	cmp	w2, #0x25
  4109f0:	stp	x29, x30, [sp, #16]
  4109f4:	str	x25, [sp, #32]
  4109f8:	stp	x24, x23, [sp, #48]
  4109fc:	stp	x22, x21, [sp, #64]
  410a00:	stp	x20, x19, [sp, #80]
  410a04:	add	x29, sp, #0x10
  410a08:	b.cs	410cb4 <ferror@plt+0xdcf4>  // b.hs, b.nlast
  410a0c:	mov	x22, x4
  410a10:	mov	x19, x3
  410a14:	mov	w24, w2
  410a18:	mov	x21, x1
  410a1c:	mov	x20, x0
  410a20:	bl	402f30 <__errno_location@plt>
  410a24:	mov	x23, x0
  410a28:	str	wzr, [x0]
  410a2c:	bl	402cd0 <__ctype_b_loc@plt>
  410a30:	ldr	x8, [x0]
  410a34:	mov	x10, x20
  410a38:	ldrb	w9, [x10], #1
  410a3c:	ldrh	w11, [x8, x9, lsl #1]
  410a40:	tbnz	w11, #13, 410a38 <ferror@plt+0xda78>
  410a44:	cmp	x21, #0x0
  410a48:	add	x8, x29, #0x18
  410a4c:	csel	x21, x8, x21, eq  // eq = none
  410a50:	cmp	w9, #0x2d
  410a54:	b.ne	410a7c <ferror@plt+0xdabc>  // b.any
  410a58:	mov	w20, #0x4                   	// #4
  410a5c:	mov	w0, w20
  410a60:	ldp	x20, x19, [sp, #80]
  410a64:	ldp	x22, x21, [sp, #64]
  410a68:	ldp	x24, x23, [sp, #48]
  410a6c:	ldr	x25, [sp, #32]
  410a70:	ldp	x29, x30, [sp, #16]
  410a74:	add	sp, sp, #0x60
  410a78:	ret
  410a7c:	mov	x0, x20
  410a80:	mov	x1, x21
  410a84:	mov	w2, w24
  410a88:	bl	402be0 <strtoumax@plt>
  410a8c:	str	x0, [sp, #8]
  410a90:	ldr	x25, [x21]
  410a94:	cmp	x25, x20
  410a98:	b.eq	410b40 <ferror@plt+0xdb80>  // b.none
  410a9c:	ldr	w20, [x23]
  410aa0:	cbz	w20, 410ab0 <ferror@plt+0xdaf0>
  410aa4:	cmp	w20, #0x22
  410aa8:	b.ne	410a58 <ferror@plt+0xda98>  // b.any
  410aac:	mov	w20, #0x1                   	// #1
  410ab0:	cbz	x22, 410b68 <ferror@plt+0xdba8>
  410ab4:	ldrb	w23, [x25]
  410ab8:	cbz	w23, 410b74 <ferror@plt+0xdbb4>
  410abc:	mov	x0, x22
  410ac0:	mov	w1, w23
  410ac4:	bl	402d70 <strchr@plt>
  410ac8:	cbz	x0, 410bc8 <ferror@plt+0xdc08>
  410acc:	sub	w8, w23, #0x45
  410ad0:	mov	w1, #0x400                 	// #1024
  410ad4:	cmp	w8, #0x2f
  410ad8:	mov	w24, #0x1                   	// #1
  410adc:	b.hi	410b90 <ferror@plt+0xdbd0>  // b.pmore
  410ae0:	mov	w9, #0x1                   	// #1
  410ae4:	lsl	x8, x9, x8
  410ae8:	mov	x9, #0x8945                	// #35141
  410aec:	movk	x9, #0x30, lsl #16
  410af0:	movk	x9, #0x8144, lsl #32
  410af4:	tst	x8, x9
  410af8:	b.eq	410b90 <ferror@plt+0xdbd0>  // b.none
  410afc:	mov	w1, #0x30                  	// #48
  410b00:	mov	x0, x22
  410b04:	bl	402d70 <strchr@plt>
  410b08:	cbz	x0, 410b7c <ferror@plt+0xdbbc>
  410b0c:	ldrb	w8, [x25, #1]
  410b10:	cmp	w8, #0x42
  410b14:	b.eq	410b88 <ferror@plt+0xdbc8>  // b.none
  410b18:	cmp	w8, #0x44
  410b1c:	b.eq	410b88 <ferror@plt+0xdbc8>  // b.none
  410b20:	cmp	w8, #0x69
  410b24:	b.ne	410b7c <ferror@plt+0xdbbc>  // b.any
  410b28:	ldrb	w8, [x25, #2]
  410b2c:	mov	w9, #0x3                   	// #3
  410b30:	mov	w1, #0x400                 	// #1024
  410b34:	cmp	w8, #0x42
  410b38:	csinc	x24, x9, xzr, eq  // eq = none
  410b3c:	b	410b90 <ferror@plt+0xdbd0>
  410b40:	cbz	x22, 410a58 <ferror@plt+0xda98>
  410b44:	ldrb	w1, [x25]
  410b48:	cbz	w1, 410a58 <ferror@plt+0xda98>
  410b4c:	mov	x0, x22
  410b50:	bl	402d70 <strchr@plt>
  410b54:	cbz	x0, 410a58 <ferror@plt+0xda98>
  410b58:	mov	w8, #0x1                   	// #1
  410b5c:	mov	w20, wzr
  410b60:	str	x8, [sp, #8]
  410b64:	cbnz	x22, 410ab4 <ferror@plt+0xdaf4>
  410b68:	ldr	x8, [sp, #8]
  410b6c:	str	x8, [x19]
  410b70:	b	410a5c <ferror@plt+0xda9c>
  410b74:	mov	w0, w20
  410b78:	b	410ca4 <ferror@plt+0xdce4>
  410b7c:	mov	w1, #0x400                 	// #1024
  410b80:	mov	w24, #0x1                   	// #1
  410b84:	b	410b90 <ferror@plt+0xdbd0>
  410b88:	mov	w1, #0x3e8                 	// #1000
  410b8c:	mov	w24, #0x2                   	// #2
  410b90:	sub	w8, w23, #0x42
  410b94:	cmp	w8, #0x35
  410b98:	b.hi	410bc8 <ferror@plt+0xdc08>  // b.pmore
  410b9c:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  410ba0:	add	x9, x9, #0xf00
  410ba4:	adr	x10, 410bb8 <ferror@plt+0xdbf8>
  410ba8:	ldrb	w11, [x9, x8]
  410bac:	add	x10, x10, x11, lsl #2
  410bb0:	mov	w0, wzr
  410bb4:	br	x10
  410bb8:	add	x0, sp, #0x8
  410bbc:	mov	w2, #0x3                   	// #3
  410bc0:	bl	410cfc <ferror@plt+0xdd3c>
  410bc4:	b	410c70 <ferror@plt+0xdcb0>
  410bc8:	ldr	x9, [sp, #8]
  410bcc:	mov	w8, wzr
  410bd0:	str	x9, [x19]
  410bd4:	orr	w9, w20, #0x2
  410bd8:	b	410c98 <ferror@plt+0xdcd8>
  410bdc:	add	x0, sp, #0x8
  410be0:	mov	w2, #0x1                   	// #1
  410be4:	bl	410cfc <ferror@plt+0xdd3c>
  410be8:	b	410c70 <ferror@plt+0xdcb0>
  410bec:	add	x0, sp, #0x8
  410bf0:	mov	w2, #0x2                   	// #2
  410bf4:	bl	410cfc <ferror@plt+0xdd3c>
  410bf8:	b	410c70 <ferror@plt+0xdcb0>
  410bfc:	add	x0, sp, #0x8
  410c00:	mov	w2, #0x4                   	// #4
  410c04:	bl	410cfc <ferror@plt+0xdd3c>
  410c08:	b	410c70 <ferror@plt+0xdcb0>
  410c0c:	add	x0, sp, #0x8
  410c10:	mov	w1, #0x400                 	// #1024
  410c14:	b	410c6c <ferror@plt+0xdcac>
  410c18:	add	x0, sp, #0x8
  410c1c:	mov	w2, #0x6                   	// #6
  410c20:	bl	410cfc <ferror@plt+0xdd3c>
  410c24:	b	410c70 <ferror@plt+0xdcb0>
  410c28:	add	x0, sp, #0x8
  410c2c:	mov	w2, #0x5                   	// #5
  410c30:	bl	410cfc <ferror@plt+0xdd3c>
  410c34:	b	410c70 <ferror@plt+0xdcb0>
  410c38:	add	x0, sp, #0x8
  410c3c:	mov	w2, #0x8                   	// #8
  410c40:	bl	410cfc <ferror@plt+0xdd3c>
  410c44:	b	410c70 <ferror@plt+0xdcb0>
  410c48:	add	x0, sp, #0x8
  410c4c:	mov	w2, #0x7                   	// #7
  410c50:	bl	410cfc <ferror@plt+0xdd3c>
  410c54:	b	410c70 <ferror@plt+0xdcb0>
  410c58:	add	x0, sp, #0x8
  410c5c:	mov	w1, #0x200                 	// #512
  410c60:	b	410c6c <ferror@plt+0xdcac>
  410c64:	add	x0, sp, #0x8
  410c68:	mov	w1, #0x2                   	// #2
  410c6c:	bl	410cd4 <ferror@plt+0xdd14>
  410c70:	ldr	x8, [x21]
  410c74:	orr	w10, w0, w20
  410c78:	orr	w11, w10, #0x2
  410c7c:	add	x9, x8, x24
  410c80:	str	x9, [x21]
  410c84:	ldrb	w9, [x8, x24]
  410c88:	mov	w8, #0x1                   	// #1
  410c8c:	cmp	w9, #0x0
  410c90:	csel	w20, w10, w11, eq  // eq = none
  410c94:	mov	w9, #0x4                   	// #4
  410c98:	mov	w0, w20
  410c9c:	mov	w20, w9
  410ca0:	cbz	w8, 410a5c <ferror@plt+0xda9c>
  410ca4:	ldr	x8, [sp, #8]
  410ca8:	mov	w20, w0
  410cac:	str	x8, [x19]
  410cb0:	b	410a5c <ferror@plt+0xda9c>
  410cb4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x29a4>
  410cb8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  410cbc:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x29a4>
  410cc0:	add	x0, x0, #0xdf3
  410cc4:	add	x1, x1, #0xe19
  410cc8:	add	x3, x3, #0xf36
  410ccc:	mov	w2, #0x54                  	// #84
  410cd0:	bl	402f20 <__assert_fail@plt>
  410cd4:	ldr	x8, [x0]
  410cd8:	sxtw	x9, w1
  410cdc:	umulh	x10, x9, x8
  410ce0:	mul	x9, x8, x9
  410ce4:	cmp	xzr, x10
  410ce8:	cset	w8, ne  // ne = any
  410cec:	csinv	x9, x9, xzr, eq  // eq = none
  410cf0:	str	x9, [x0]
  410cf4:	mov	w0, w8
  410cf8:	ret
  410cfc:	stp	x29, x30, [sp, #-48]!
  410d00:	stp	x22, x21, [sp, #16]
  410d04:	stp	x20, x19, [sp, #32]
  410d08:	mov	x29, sp
  410d0c:	cbz	w2, 410d3c <ferror@plt+0xdd7c>
  410d10:	mov	w19, w2
  410d14:	mov	w20, w1
  410d18:	mov	x21, x0
  410d1c:	mov	w22, wzr
  410d20:	mov	x0, x21
  410d24:	mov	w1, w20
  410d28:	sub	w19, w19, #0x1
  410d2c:	bl	410cd4 <ferror@plt+0xdd14>
  410d30:	orr	w22, w0, w22
  410d34:	cbnz	w19, 410d20 <ferror@plt+0xdd60>
  410d38:	b	410d40 <ferror@plt+0xdd80>
  410d3c:	mov	w22, wzr
  410d40:	mov	w0, w22
  410d44:	ldp	x20, x19, [sp, #32]
  410d48:	ldp	x22, x21, [sp, #16]
  410d4c:	ldp	x29, x30, [sp], #48
  410d50:	ret
  410d54:	stp	x29, x30, [sp, #-16]!
  410d58:	mov	x8, x1
  410d5c:	mov	w1, #0x1                   	// #1
  410d60:	mov	w9, #0x1                   	// #1
  410d64:	mov	x29, sp
  410d68:	cbz	x0, 410d9c <ferror@plt+0xdddc>
  410d6c:	cbz	x8, 410d9c <ferror@plt+0xdddc>
  410d70:	umulh	x10, x8, x0
  410d74:	mov	x1, x8
  410d78:	mov	x9, x0
  410d7c:	cbz	x10, 410d9c <ferror@plt+0xdddc>
  410d80:	bl	402f30 <__errno_location@plt>
  410d84:	mov	x8, x0
  410d88:	mov	w9, #0xc                   	// #12
  410d8c:	mov	x0, xzr
  410d90:	str	w9, [x8]
  410d94:	ldp	x29, x30, [sp], #16
  410d98:	ret
  410d9c:	mov	x0, x9
  410da0:	bl	402b40 <calloc@plt>
  410da4:	ldp	x29, x30, [sp], #16
  410da8:	ret
  410dac:	stp	x29, x30, [sp, #-32]!
  410db0:	stp	x20, x19, [sp, #16]
  410db4:	mov	x29, sp
  410db8:	mov	x19, x0
  410dbc:	bl	4029d0 <fileno@plt>
  410dc0:	tbnz	w0, #31, 410e04 <ferror@plt+0xde44>
  410dc4:	mov	x0, x19
  410dc8:	bl	402ed0 <__freading@plt>
  410dcc:	cbz	w0, 410dec <ferror@plt+0xde2c>
  410dd0:	mov	x0, x19
  410dd4:	bl	4029d0 <fileno@plt>
  410dd8:	mov	w2, #0x1                   	// #1
  410ddc:	mov	x1, xzr
  410de0:	bl	402990 <lseek@plt>
  410de4:	cmn	x0, #0x1
  410de8:	b.eq	410e10 <ferror@plt+0xde50>  // b.none
  410dec:	mov	x0, x19
  410df0:	bl	4110fc <ferror@plt+0xe13c>
  410df4:	cbz	w0, 410e10 <ferror@plt+0xde50>
  410df8:	bl	402f30 <__errno_location@plt>
  410dfc:	ldr	w20, [x0]
  410e00:	b	410e14 <ferror@plt+0xde54>
  410e04:	mov	x0, x19
  410e08:	bl	402a00 <fclose@plt>
  410e0c:	b	410e2c <ferror@plt+0xde6c>
  410e10:	mov	w20, wzr
  410e14:	mov	x0, x19
  410e18:	bl	402a00 <fclose@plt>
  410e1c:	cbz	w20, 410e2c <ferror@plt+0xde6c>
  410e20:	bl	402f30 <__errno_location@plt>
  410e24:	str	w20, [x0]
  410e28:	mov	w0, #0xffffffff            	// #-1
  410e2c:	ldp	x20, x19, [sp, #16]
  410e30:	ldp	x29, x30, [sp], #32
  410e34:	ret
  410e38:	sub	sp, sp, #0xe0
  410e3c:	stp	x29, x30, [sp, #208]
  410e40:	add	x29, sp, #0xd0
  410e44:	mov	x8, #0xffffffffffffffd0    	// #-48
  410e48:	mov	x9, sp
  410e4c:	sub	x10, x29, #0x50
  410e50:	movk	x8, #0xff80, lsl #32
  410e54:	add	x11, x29, #0x10
  410e58:	cmp	w1, #0xb
  410e5c:	add	x9, x9, #0x80
  410e60:	add	x10, x10, #0x30
  410e64:	stp	x2, x3, [x29, #-80]
  410e68:	stp	x4, x5, [x29, #-64]
  410e6c:	stp	x6, x7, [x29, #-48]
  410e70:	stp	q1, q2, [sp, #16]
  410e74:	stp	q3, q4, [sp, #48]
  410e78:	str	q0, [sp]
  410e7c:	stp	q5, q6, [sp, #80]
  410e80:	str	q7, [sp, #112]
  410e84:	stp	x9, x8, [x29, #-16]
  410e88:	stp	x11, x10, [x29, #-32]
  410e8c:	b.hi	410ee4 <ferror@plt+0xdf24>  // b.pmore
  410e90:	mov	w8, #0x1                   	// #1
  410e94:	lsl	w8, w8, w1
  410e98:	mov	w9, #0x514                 	// #1300
  410e9c:	tst	w8, w9
  410ea0:	b.ne	410f18 <ferror@plt+0xdf58>  // b.any
  410ea4:	mov	w9, #0xa0a                 	// #2570
  410ea8:	tst	w8, w9
  410eac:	b.ne	410f10 <ferror@plt+0xdf50>  // b.any
  410eb0:	cbnz	w1, 410ee4 <ferror@plt+0xdf24>
  410eb4:	ldursw	x8, [x29, #-8]
  410eb8:	tbz	w8, #31, 410ecc <ferror@plt+0xdf0c>
  410ebc:	add	w9, w8, #0x8
  410ec0:	cmp	w9, #0x0
  410ec4:	stur	w9, [x29, #-8]
  410ec8:	b.le	410fdc <ferror@plt+0xe01c>
  410ecc:	ldur	x8, [x29, #-32]
  410ed0:	add	x9, x8, #0x8
  410ed4:	stur	x9, [x29, #-32]
  410ed8:	ldr	w1, [x8]
  410edc:	bl	410fe8 <ferror@plt+0xe028>
  410ee0:	b	410f44 <ferror@plt+0xdf84>
  410ee4:	sub	w8, w1, #0x400
  410ee8:	cmp	w8, #0xa
  410eec:	b.hi	410f94 <ferror@plt+0xdfd4>  // b.pmore
  410ef0:	mov	w9, #0x1                   	// #1
  410ef4:	lsl	w9, w9, w8
  410ef8:	mov	w10, #0x285                 	// #645
  410efc:	tst	w9, w10
  410f00:	b.ne	410f18 <ferror@plt+0xdf58>  // b.any
  410f04:	mov	w10, #0x502                 	// #1282
  410f08:	tst	w9, w10
  410f0c:	b.eq	410f50 <ferror@plt+0xdf90>  // b.none
  410f10:	bl	402dc0 <fcntl@plt>
  410f14:	b	410f44 <ferror@plt+0xdf84>
  410f18:	ldursw	x8, [x29, #-8]
  410f1c:	tbz	w8, #31, 410f30 <ferror@plt+0xdf70>
  410f20:	add	w9, w8, #0x8
  410f24:	cmp	w9, #0x0
  410f28:	stur	w9, [x29, #-8]
  410f2c:	b.le	410f88 <ferror@plt+0xdfc8>
  410f30:	ldur	x8, [x29, #-32]
  410f34:	add	x9, x8, #0x8
  410f38:	stur	x9, [x29, #-32]
  410f3c:	ldr	w2, [x8]
  410f40:	bl	402dc0 <fcntl@plt>
  410f44:	ldp	x29, x30, [sp, #208]
  410f48:	add	sp, sp, #0xe0
  410f4c:	ret
  410f50:	cmp	w8, #0x6
  410f54:	b.ne	410f94 <ferror@plt+0xdfd4>  // b.any
  410f58:	ldursw	x8, [x29, #-8]
  410f5c:	tbz	w8, #31, 410f70 <ferror@plt+0xdfb0>
  410f60:	add	w9, w8, #0x8
  410f64:	cmp	w9, #0x0
  410f68:	stur	w9, [x29, #-8]
  410f6c:	b.le	410fc4 <ferror@plt+0xe004>
  410f70:	ldur	x8, [x29, #-32]
  410f74:	add	x9, x8, #0x8
  410f78:	stur	x9, [x29, #-32]
  410f7c:	ldr	w1, [x8]
  410f80:	bl	411004 <ferror@plt+0xe044>
  410f84:	b	410f44 <ferror@plt+0xdf84>
  410f88:	ldur	x9, [x29, #-24]
  410f8c:	add	x8, x9, x8
  410f90:	b	410f3c <ferror@plt+0xdf7c>
  410f94:	ldursw	x8, [x29, #-8]
  410f98:	tbz	w8, #31, 410fac <ferror@plt+0xdfec>
  410f9c:	add	w9, w8, #0x8
  410fa0:	cmp	w9, #0x0
  410fa4:	stur	w9, [x29, #-8]
  410fa8:	b.le	410fd0 <ferror@plt+0xe010>
  410fac:	ldur	x8, [x29, #-32]
  410fb0:	add	x9, x8, #0x8
  410fb4:	stur	x9, [x29, #-32]
  410fb8:	ldr	x2, [x8]
  410fbc:	bl	402dc0 <fcntl@plt>
  410fc0:	b	410f44 <ferror@plt+0xdf84>
  410fc4:	ldur	x9, [x29, #-24]
  410fc8:	add	x8, x9, x8
  410fcc:	b	410f7c <ferror@plt+0xdfbc>
  410fd0:	ldur	x9, [x29, #-24]
  410fd4:	add	x8, x9, x8
  410fd8:	b	410fb8 <ferror@plt+0xdff8>
  410fdc:	ldur	x9, [x29, #-24]
  410fe0:	add	x8, x9, x8
  410fe4:	b	410ed8 <ferror@plt+0xdf18>
  410fe8:	stp	x29, x30, [sp, #-16]!
  410fec:	mov	w2, w1
  410ff0:	mov	w1, wzr
  410ff4:	mov	x29, sp
  410ff8:	bl	402dc0 <fcntl@plt>
  410ffc:	ldp	x29, x30, [sp], #16
  411000:	ret
  411004:	stp	x29, x30, [sp, #-48]!
  411008:	stp	x22, x21, [sp, #16]
  41100c:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x149a4>
  411010:	ldr	w8, [x22, #3344]
  411014:	stp	x20, x19, [sp, #32]
  411018:	mov	w20, w1
  41101c:	mov	w21, w0
  411020:	mov	x29, sp
  411024:	tbnz	w8, #31, 411084 <ferror@plt+0xe0c4>
  411028:	mov	w1, #0x406                 	// #1030
  41102c:	mov	w0, w21
  411030:	mov	w2, w20
  411034:	bl	402dc0 <fcntl@plt>
  411038:	mov	w19, w0
  41103c:	tbz	w0, #31, 411074 <ferror@plt+0xe0b4>
  411040:	bl	402f30 <__errno_location@plt>
  411044:	ldr	w8, [x0]
  411048:	cmp	w8, #0x16
  41104c:	b.ne	411074 <ferror@plt+0xe0b4>  // b.any
  411050:	mov	w0, w21
  411054:	mov	w1, w20
  411058:	bl	410fe8 <ferror@plt+0xe028>
  41105c:	mov	w19, w0
  411060:	tbnz	w0, #31, 41107c <ferror@plt+0xe0bc>
  411064:	mov	w8, #0xffffffff            	// #-1
  411068:	str	w8, [x22, #3344]
  41106c:	tbz	w19, #31, 411098 <ferror@plt+0xe0d8>
  411070:	b	4110e8 <ferror@plt+0xe128>
  411074:	mov	w8, #0x1                   	// #1
  411078:	str	w8, [x22, #3344]
  41107c:	tbz	w19, #31, 411098 <ferror@plt+0xe0d8>
  411080:	b	4110e8 <ferror@plt+0xe128>
  411084:	mov	w0, w21
  411088:	mov	w1, w20
  41108c:	bl	410fe8 <ferror@plt+0xe028>
  411090:	mov	w19, w0
  411094:	tbnz	w19, #31, 4110e8 <ferror@plt+0xe128>
  411098:	ldr	w8, [x22, #3344]
  41109c:	cmn	w8, #0x1
  4110a0:	b.ne	4110e8 <ferror@plt+0xe128>  // b.any
  4110a4:	mov	w1, #0x1                   	// #1
  4110a8:	mov	w0, w19
  4110ac:	bl	402dc0 <fcntl@plt>
  4110b0:	tbnz	w0, #31, 4110cc <ferror@plt+0xe10c>
  4110b4:	orr	w2, w0, #0x1
  4110b8:	mov	w1, #0x2                   	// #2
  4110bc:	mov	w0, w19
  4110c0:	bl	402dc0 <fcntl@plt>
  4110c4:	cmn	w0, #0x1
  4110c8:	b.ne	4110e8 <ferror@plt+0xe128>  // b.any
  4110cc:	bl	402f30 <__errno_location@plt>
  4110d0:	ldr	w21, [x0]
  4110d4:	mov	x20, x0
  4110d8:	mov	w0, w19
  4110dc:	bl	402b80 <close@plt>
  4110e0:	mov	w19, #0xffffffff            	// #-1
  4110e4:	str	w21, [x20]
  4110e8:	mov	w0, w19
  4110ec:	ldp	x20, x19, [sp, #32]
  4110f0:	ldp	x22, x21, [sp, #16]
  4110f4:	ldp	x29, x30, [sp], #48
  4110f8:	ret
  4110fc:	stp	x29, x30, [sp, #-32]!
  411100:	str	x19, [sp, #16]
  411104:	mov	x19, x0
  411108:	mov	x29, sp
  41110c:	cbz	x0, 411124 <ferror@plt+0xe164>
  411110:	mov	x0, x19
  411114:	bl	402ed0 <__freading@plt>
  411118:	cbz	w0, 411124 <ferror@plt+0xe164>
  41111c:	mov	x0, x19
  411120:	bl	411138 <ferror@plt+0xe178>
  411124:	mov	x0, x19
  411128:	bl	402df0 <fflush@plt>
  41112c:	ldr	x19, [sp, #16]
  411130:	ldp	x29, x30, [sp], #32
  411134:	ret
  411138:	stp	x29, x30, [sp, #-16]!
  41113c:	ldrb	w8, [x0, #1]
  411140:	mov	x29, sp
  411144:	tbz	w8, #0, 411154 <ferror@plt+0xe194>
  411148:	mov	w2, #0x1                   	// #1
  41114c:	mov	x1, xzr
  411150:	bl	41115c <ferror@plt+0xe19c>
  411154:	ldp	x29, x30, [sp], #16
  411158:	ret
  41115c:	stp	x29, x30, [sp, #-48]!
  411160:	str	x21, [sp, #16]
  411164:	stp	x20, x19, [sp, #32]
  411168:	ldp	x9, x8, [x0, #8]
  41116c:	mov	w20, w2
  411170:	mov	x19, x0
  411174:	mov	x21, x1
  411178:	cmp	x8, x9
  41117c:	mov	x29, sp
  411180:	b.ne	411198 <ferror@plt+0xe1d8>  // b.any
  411184:	ldp	x9, x8, [x19, #32]
  411188:	cmp	x8, x9
  41118c:	b.ne	411198 <ferror@plt+0xe1d8>  // b.any
  411190:	ldr	x8, [x19, #72]
  411194:	cbz	x8, 4111b8 <ferror@plt+0xe1f8>
  411198:	mov	x0, x19
  41119c:	mov	x1, x21
  4111a0:	mov	w2, w20
  4111a4:	bl	402cf0 <fseeko@plt>
  4111a8:	ldp	x20, x19, [sp, #32]
  4111ac:	ldr	x21, [sp, #16]
  4111b0:	ldp	x29, x30, [sp], #48
  4111b4:	ret
  4111b8:	mov	x0, x19
  4111bc:	bl	4029d0 <fileno@plt>
  4111c0:	mov	x1, x21
  4111c4:	mov	w2, w20
  4111c8:	bl	402990 <lseek@plt>
  4111cc:	cmn	x0, #0x1
  4111d0:	b.eq	4111a8 <ferror@plt+0xe1e8>  // b.none
  4111d4:	ldr	w9, [x19]
  4111d8:	mov	x8, x0
  4111dc:	mov	w0, wzr
  4111e0:	str	x8, [x19, #144]
  4111e4:	and	w9, w9, #0xffffffef
  4111e8:	str	w9, [x19]
  4111ec:	b	4111a8 <ferror@plt+0xe1e8>
  4111f0:	sub	sp, sp, #0x40
  4111f4:	stp	x29, x30, [sp, #16]
  4111f8:	add	x29, sp, #0x10
  4111fc:	cmp	x0, #0x0
  411200:	sub	x8, x29, #0x4
  411204:	stp	x20, x19, [sp, #48]
  411208:	csel	x20, x8, x0, eq  // eq = none
  41120c:	mov	x0, x20
  411210:	stp	x22, x21, [sp, #32]
  411214:	mov	x22, x2
  411218:	mov	x19, x1
  41121c:	bl	402840 <mbrtowc@plt>
  411220:	mov	x21, x0
  411224:	cbz	x22, 411248 <ferror@plt+0xe288>
  411228:	cmn	x21, #0x2
  41122c:	b.cc	411248 <ferror@plt+0xe288>  // b.lo, b.ul, b.last
  411230:	mov	w0, wzr
  411234:	bl	40b514 <ferror@plt+0x8554>
  411238:	tbnz	w0, #0, 411248 <ferror@plt+0xe288>
  41123c:	ldrb	w8, [x19]
  411240:	mov	w21, #0x1                   	// #1
  411244:	str	w8, [x20]
  411248:	mov	x0, x21
  41124c:	ldp	x20, x19, [sp, #48]
  411250:	ldp	x22, x21, [sp, #32]
  411254:	ldp	x29, x30, [sp, #16]
  411258:	add	sp, sp, #0x40
  41125c:	ret
  411260:	sub	sp, sp, #0x50
  411264:	stp	x29, x30, [sp, #16]
  411268:	stp	x22, x21, [sp, #48]
  41126c:	stp	x20, x19, [sp, #64]
  411270:	ldr	x8, [x0, #8]
  411274:	mov	w9, #0xca00                	// #51712
  411278:	movk	w9, #0x3b9a, lsl #16
  41127c:	str	x23, [sp, #32]
  411280:	cmp	x8, x9
  411284:	add	x29, sp, #0x10
  411288:	b.cc	4112a0 <ferror@plt+0xe2e0>  // b.lo, b.ul, b.last
  41128c:	bl	402f30 <__errno_location@plt>
  411290:	mov	w8, #0x16                  	// #22
  411294:	str	w8, [x0]
  411298:	mov	w0, #0xffffffff            	// #-1
  41129c:	b	411324 <ferror@plt+0xe364>
  4112a0:	ldr	x22, [x0]
  4112a4:	mov	x20, #0xffffffffffff5c00    	// #-41984
  4112a8:	mov	w21, #0xa400                	// #41984
  4112ac:	mov	x19, x1
  4112b0:	movk	x20, #0xffe0, lsl #16
  4112b4:	movk	w21, #0x1f, lsl #16
  4112b8:	str	x8, [sp, #8]
  4112bc:	b	4112d8 <ferror@plt+0xe318>
  4112c0:	mov	w9, #0x1                   	// #1
  4112c4:	mov	w0, w23
  4112c8:	str	xzr, [sp, #8]
  4112cc:	mov	x22, x8
  4112d0:	mov	w23, w0
  4112d4:	tbz	w9, #0, 411324 <ferror@plt+0xe364>
  4112d8:	cmp	x22, x21
  4112dc:	b.le	411314 <ferror@plt+0xe354>
  4112e0:	mov	x0, sp
  4112e4:	mov	x1, x19
  4112e8:	str	x21, [sp]
  4112ec:	bl	402d50 <nanosleep@plt>
  4112f0:	add	x8, x22, x20
  4112f4:	cbz	w0, 4112c0 <ferror@plt+0xe300>
  4112f8:	mov	w9, wzr
  4112fc:	cbz	x19, 4112cc <ferror@plt+0xe30c>
  411300:	ldr	x10, [x19]
  411304:	add	x11, x22, x20
  411308:	add	x10, x11, x10
  41130c:	str	x10, [x19]
  411310:	b	4112cc <ferror@plt+0xe30c>
  411314:	mov	x0, sp
  411318:	mov	x1, x19
  41131c:	str	x22, [sp]
  411320:	bl	402d50 <nanosleep@plt>
  411324:	ldp	x20, x19, [sp, #64]
  411328:	ldp	x22, x21, [sp, #48]
  41132c:	ldr	x23, [sp, #32]
  411330:	ldp	x29, x30, [sp, #16]
  411334:	add	sp, sp, #0x50
  411338:	ret

000000000041133c <_obstack_begin@@Base>:
  41133c:	stp	x29, x30, [sp, #-16]!
  411340:	ldrb	w8, [x0, #80]
  411344:	mov	x29, sp
  411348:	stp	x3, x4, [x0, #56]
  41134c:	and	w8, w8, #0xfe
  411350:	strb	w8, [x0, #80]
  411354:	bl	411364 <_obstack_begin@@Base+0x28>
  411358:	mov	w0, #0x1                   	// #1
  41135c:	ldp	x29, x30, [sp], #16
  411360:	ret
  411364:	stp	x29, x30, [sp, #-48]!
  411368:	cmp	x2, #0x0
  41136c:	mov	w8, #0x10                  	// #16
  411370:	stp	x20, x19, [sp, #32]
  411374:	mov	w9, #0xfe0                 	// #4064
  411378:	csel	x20, x8, x2, eq  // eq = none
  41137c:	cmp	x1, #0x0
  411380:	str	x21, [sp, #16]
  411384:	csel	x1, x9, x1, eq  // eq = none
  411388:	sub	x21, x20, #0x1
  41138c:	mov	x29, sp
  411390:	mov	x19, x0
  411394:	str	x1, [x0]
  411398:	str	x21, [x0, #48]
  41139c:	bl	411534 <_obstack_newchunk@@Base+0x110>
  4113a0:	str	x0, [x19, #8]
  4113a4:	cbz	x0, 4113ec <_obstack_begin@@Base+0xb0>
  4113a8:	ldr	x10, [x19]
  4113ac:	add	x8, x0, x21
  4113b0:	neg	x9, x20
  4113b4:	add	x8, x8, #0x10
  4113b8:	and	x8, x8, x9
  4113bc:	stp	x8, x8, [x19, #16]
  4113c0:	add	x8, x0, x10
  4113c4:	str	x8, [x0]
  4113c8:	str	x8, [x19, #32]
  4113cc:	str	xzr, [x0, #8]
  4113d0:	ldrb	w8, [x19, #80]
  4113d4:	ldr	x21, [sp, #16]
  4113d8:	and	w8, w8, #0xfffffff9
  4113dc:	strb	w8, [x19, #80]
  4113e0:	ldp	x20, x19, [sp, #32]
  4113e4:	ldp	x29, x30, [sp], #48
  4113e8:	ret
  4113ec:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4113f0:	ldr	x8, [x8, #1328]
  4113f4:	blr	x8

00000000004113f8 <_obstack_begin_1@@Base>:
  4113f8:	stp	x29, x30, [sp, #-16]!
  4113fc:	ldrb	w8, [x0, #80]
  411400:	mov	x29, sp
  411404:	stp	x3, x4, [x0, #56]
  411408:	str	x5, [x0, #72]
  41140c:	orr	w8, w8, #0x1
  411410:	strb	w8, [x0, #80]
  411414:	bl	411364 <_obstack_begin@@Base+0x28>
  411418:	mov	w0, #0x1                   	// #1
  41141c:	ldp	x29, x30, [sp], #16
  411420:	ret

0000000000411424 <_obstack_newchunk@@Base>:
  411424:	stp	x29, x30, [sp, #-64]!
  411428:	str	x23, [sp, #16]
  41142c:	stp	x22, x21, [sp, #32]
  411430:	stp	x20, x19, [sp, #48]
  411434:	ldp	x9, x8, [x0, #16]
  411438:	ldr	x10, [x0, #48]
  41143c:	ldp	x11, x21, [x0]
  411440:	mov	x19, x0
  411444:	sub	x20, x8, x9
  411448:	adds	x8, x20, x1
  41144c:	lsr	x9, x20, #3
  411450:	cset	w12, cs  // cs = hs, nlast
  411454:	adds	x10, x8, x10
  411458:	add	x9, x9, #0x64
  41145c:	cset	w8, cs  // cs = hs, nlast
  411460:	adds	x9, x9, x10
  411464:	csel	x9, x10, x9, cs  // cs = hs, nlast
  411468:	cmp	x9, x11
  41146c:	mov	x22, xzr
  411470:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  411474:	mov	x29, sp
  411478:	tbnz	w12, #0, 411490 <_obstack_newchunk@@Base+0x6c>
  41147c:	tbnz	w8, #0, 411490 <_obstack_newchunk@@Base+0x6c>
  411480:	mov	x0, x19
  411484:	mov	x1, x23
  411488:	bl	411534 <_obstack_newchunk@@Base+0x110>
  41148c:	mov	x22, x0
  411490:	cbz	x22, 411528 <_obstack_newchunk@@Base+0x104>
  411494:	add	x8, x22, x23
  411498:	str	x22, [x19, #8]
  41149c:	str	x21, [x22, #8]
  4114a0:	str	x8, [x19, #32]
  4114a4:	str	x8, [x22]
  4114a8:	ldr	x8, [x19, #48]
  4114ac:	ldr	x1, [x19, #16]
  4114b0:	mov	x2, x20
  4114b4:	add	x9, x22, x8
  4114b8:	add	x9, x9, #0x10
  4114bc:	bic	x23, x9, x8
  4114c0:	mov	x0, x23
  4114c4:	bl	402850 <memcpy@plt>
  4114c8:	ldrb	w8, [x19, #80]
  4114cc:	tbnz	w8, #1, 411500 <_obstack_newchunk@@Base+0xdc>
  4114d0:	ldr	x8, [x19, #48]
  4114d4:	ldr	x9, [x19, #16]
  4114d8:	add	x10, x21, x8
  4114dc:	add	x10, x10, #0x10
  4114e0:	bic	x8, x10, x8
  4114e4:	cmp	x9, x8
  4114e8:	b.ne	411500 <_obstack_newchunk@@Base+0xdc>  // b.any
  4114ec:	ldr	x8, [x21, #8]
  4114f0:	mov	x0, x19
  4114f4:	mov	x1, x21
  4114f8:	str	x8, [x22, #8]
  4114fc:	bl	41156c <_obstack_newchunk@@Base+0x148>
  411500:	ldrb	w8, [x19, #80]
  411504:	add	x9, x23, x20
  411508:	stp	x23, x9, [x19, #16]
  41150c:	ldr	x23, [sp, #16]
  411510:	and	w8, w8, #0xfffffffd
  411514:	strb	w8, [x19, #80]
  411518:	ldp	x20, x19, [sp, #48]
  41151c:	ldp	x22, x21, [sp, #32]
  411520:	ldp	x29, x30, [sp], #64
  411524:	ret
  411528:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  41152c:	ldr	x8, [x8, #1328]
  411530:	blr	x8
  411534:	stp	x29, x30, [sp, #-16]!
  411538:	ldrb	w8, [x0, #80]
  41153c:	mov	x29, sp
  411540:	tbnz	w8, #0, 411558 <_obstack_newchunk@@Base+0x134>
  411544:	ldr	x8, [x0, #56]
  411548:	mov	x0, x1
  41154c:	blr	x8
  411550:	ldp	x29, x30, [sp], #16
  411554:	ret
  411558:	ldr	x8, [x0, #56]
  41155c:	ldr	x0, [x0, #72]
  411560:	blr	x8
  411564:	ldp	x29, x30, [sp], #16
  411568:	ret
  41156c:	stp	x29, x30, [sp, #-16]!
  411570:	ldrb	w8, [x0, #80]
  411574:	mov	x29, sp
  411578:	tbnz	w8, #0, 411590 <_obstack_newchunk@@Base+0x16c>
  41157c:	ldr	x8, [x0, #64]
  411580:	mov	x0, x1
  411584:	blr	x8
  411588:	ldp	x29, x30, [sp], #16
  41158c:	ret
  411590:	ldp	x8, x0, [x0, #64]
  411594:	blr	x8
  411598:	ldp	x29, x30, [sp], #16
  41159c:	ret

00000000004115a0 <_obstack_allocated_p@@Base>:
  4115a0:	ldr	x8, [x0, #8]
  4115a4:	b	4115ac <_obstack_allocated_p@@Base+0xc>
  4115a8:	ldr	x8, [x8, #8]
  4115ac:	cmp	x8, #0x0
  4115b0:	cset	w9, ne  // ne = any
  4115b4:	cbz	x8, 4115cc <_obstack_allocated_p@@Base+0x2c>
  4115b8:	cmp	x8, x1
  4115bc:	b.cs	4115a8 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  4115c0:	ldr	x10, [x8]
  4115c4:	cmp	x10, x1
  4115c8:	b.cc	4115a8 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  4115cc:	and	w0, w9, #0x1
  4115d0:	ret

00000000004115d4 <_obstack_free@@Base>:
  4115d4:	stp	x29, x30, [sp, #-48]!
  4115d8:	stp	x20, x19, [sp, #32]
  4115dc:	ldr	x8, [x0, #8]
  4115e0:	mov	x20, x1
  4115e4:	str	x21, [sp, #16]
  4115e8:	mov	x29, sp
  4115ec:	cbz	x8, 411644 <_obstack_free@@Base+0x70>
  4115f0:	mov	x19, x0
  4115f4:	b	41161c <_obstack_free@@Base+0x48>
  4115f8:	ldr	x21, [x8, #8]
  4115fc:	mov	x0, x19
  411600:	mov	x1, x8
  411604:	bl	41156c <_obstack_newchunk@@Base+0x148>
  411608:	ldrb	w8, [x19, #80]
  41160c:	orr	w8, w8, #0x2
  411610:	strb	w8, [x19, #80]
  411614:	mov	x8, x21
  411618:	cbz	x21, 411644 <_obstack_free@@Base+0x70>
  41161c:	cmp	x8, x20
  411620:	b.cs	4115f8 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  411624:	ldr	x9, [x8]
  411628:	cmp	x9, x20
  41162c:	b.cc	4115f8 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  411630:	stp	x20, x20, [x19, #16]
  411634:	ldr	x9, [x8]
  411638:	str	x8, [x19, #8]
  41163c:	str	x9, [x19, #32]
  411640:	b	411648 <_obstack_free@@Base+0x74>
  411644:	cbnz	x20, 411658 <_obstack_free@@Base+0x84>
  411648:	ldp	x20, x19, [sp, #32]
  41164c:	ldr	x21, [sp, #16]
  411650:	ldp	x29, x30, [sp], #48
  411654:	ret
  411658:	bl	402c00 <abort@plt>

000000000041165c <_obstack_memory_used@@Base>:
  41165c:	ldr	x8, [x0, #8]
  411660:	cbz	x8, 41167c <_obstack_memory_used@@Base+0x20>
  411664:	mov	x0, xzr
  411668:	sub	x10, x0, x8
  41166c:	ldp	x9, x8, [x8]
  411670:	add	x0, x10, x9
  411674:	cbnz	x8, 411668 <_obstack_memory_used@@Base+0xc>
  411678:	ret
  41167c:	mov	x0, xzr
  411680:	ret
  411684:	stp	x29, x30, [sp, #-32]!
  411688:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  41168c:	str	x19, [sp, #16]
  411690:	ldr	x19, [x8, #1344]
  411694:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x29a4>
  411698:	add	x1, x1, #0xd43
  41169c:	mov	w2, #0x5                   	// #5
  4116a0:	mov	x0, xzr
  4116a4:	mov	x29, sp
  4116a8:	bl	402ea0 <dcgettext@plt>
  4116ac:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x29a4>
  4116b0:	mov	x3, x0
  4116b4:	add	x2, x2, #0xa3e
  4116b8:	mov	w1, #0x1                   	// #1
  4116bc:	mov	x0, x19
  4116c0:	bl	402ca0 <__fprintf_chk@plt>
  4116c4:	adrp	x8, 426000 <_obstack_memory_used@@Base+0x149a4>
  4116c8:	ldr	w0, [x8, #1232]
  4116cc:	bl	4028c0 <exit@plt>
  4116d0:	neg	w8, w1
  4116d4:	ror	x0, x0, x8
  4116d8:	ret
  4116dc:	ror	x0, x0, x1
  4116e0:	ret
  4116e4:	neg	w8, w1
  4116e8:	ror	w0, w0, w8
  4116ec:	ret
  4116f0:	ror	w0, w0, w1
  4116f4:	ret
  4116f8:	sxtw	x9, w1
  4116fc:	neg	x9, x9
  411700:	lsl	x8, x0, x1
  411704:	lsr	x9, x0, x9
  411708:	orr	x0, x9, x8
  41170c:	ret
  411710:	sxtw	x9, w1
  411714:	neg	x9, x9
  411718:	lsr	x8, x0, x1
  41171c:	lsl	x9, x0, x9
  411720:	orr	x0, x9, x8
  411724:	ret
  411728:	neg	w10, w1
  41172c:	and	w8, w0, #0xffff
  411730:	and	w9, w1, #0xf
  411734:	and	w10, w10, #0xf
  411738:	lsl	w9, w0, w9
  41173c:	lsr	w8, w8, w10
  411740:	orr	w0, w9, w8
  411744:	ret
  411748:	and	w8, w0, #0xffff
  41174c:	and	w9, w1, #0xf
  411750:	neg	w10, w1
  411754:	lsr	w8, w8, w9
  411758:	and	w9, w10, #0xf
  41175c:	lsl	w9, w0, w9
  411760:	orr	w0, w9, w8
  411764:	ret
  411768:	neg	w10, w1
  41176c:	and	w8, w0, #0xff
  411770:	and	w9, w1, #0x7
  411774:	and	w10, w10, #0x7
  411778:	lsl	w9, w0, w9
  41177c:	lsr	w8, w8, w10
  411780:	orr	w0, w9, w8
  411784:	ret
  411788:	and	w8, w0, #0xff
  41178c:	and	w9, w1, #0x7
  411790:	neg	w10, w1
  411794:	lsr	w8, w8, w9
  411798:	and	w9, w10, #0x7
  41179c:	lsl	w9, w0, w9
  4117a0:	orr	w0, w9, w8
  4117a4:	ret
  4117a8:	sub	w9, w0, #0x41
  4117ac:	mov	w8, w0
  4117b0:	cmp	w9, #0x39
  4117b4:	mov	w0, #0x1                   	// #1
  4117b8:	b.hi	4117d0 <_obstack_memory_used@@Base+0x174>  // b.pmore
  4117bc:	mov	w10, #0x1                   	// #1
  4117c0:	lsl	x9, x10, x9
  4117c4:	tst	x9, #0x3ffffff03ffffff
  4117c8:	b.eq	4117d0 <_obstack_memory_used@@Base+0x174>  // b.none
  4117cc:	ret
  4117d0:	sub	w8, w8, #0x30
  4117d4:	cmp	w8, #0xa
  4117d8:	b.cc	4117cc <_obstack_memory_used@@Base+0x170>  // b.lo, b.ul, b.last
  4117dc:	mov	w0, wzr
  4117e0:	ret
  4117e4:	sub	w8, w0, #0x41
  4117e8:	cmp	w8, #0x39
  4117ec:	b.hi	411800 <_obstack_memory_used@@Base+0x1a4>  // b.pmore
  4117f0:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  4117f4:	lsr	x8, x9, x8
  4117f8:	and	w0, w8, #0x1
  4117fc:	ret
  411800:	mov	w0, wzr
  411804:	ret
  411808:	cmp	w0, #0x80
  41180c:	cset	w0, cc  // cc = lo, ul, last
  411810:	ret
  411814:	cmp	w0, #0x20
  411818:	cset	w8, eq  // eq = none
  41181c:	cmp	w0, #0x9
  411820:	cset	w9, eq  // eq = none
  411824:	orr	w0, w8, w9
  411828:	ret
  41182c:	mov	w8, w0
  411830:	cmp	w0, #0x20
  411834:	mov	w0, #0x1                   	// #1
  411838:	b.cs	411840 <_obstack_memory_used@@Base+0x1e4>  // b.hs, b.nlast
  41183c:	ret
  411840:	cmp	w8, #0x7f
  411844:	b.eq	41183c <_obstack_memory_used@@Base+0x1e0>  // b.none
  411848:	mov	w0, wzr
  41184c:	ret
  411850:	sub	w8, w0, #0x30
  411854:	cmp	w8, #0xa
  411858:	cset	w0, cc  // cc = lo, ul, last
  41185c:	ret
  411860:	sub	w8, w0, #0x21
  411864:	cmp	w8, #0x5e
  411868:	cset	w0, cc  // cc = lo, ul, last
  41186c:	ret
  411870:	sub	w8, w0, #0x61
  411874:	cmp	w8, #0x1a
  411878:	cset	w0, cc  // cc = lo, ul, last
  41187c:	ret
  411880:	sub	w8, w0, #0x20
  411884:	cmp	w8, #0x5f
  411888:	cset	w0, cc  // cc = lo, ul, last
  41188c:	ret
  411890:	sub	w8, w0, #0x21
  411894:	cmp	w8, #0x5d
  411898:	b.hi	4118bc <_obstack_memory_used@@Base+0x260>  // b.pmore
  41189c:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x29a4>
  4118a0:	add	x9, x9, #0xf85
  4118a4:	adr	x10, 4118b8 <_obstack_memory_used@@Base+0x25c>
  4118a8:	ldrb	w11, [x9, x8]
  4118ac:	add	x10, x10, x11, lsl #2
  4118b0:	mov	w0, #0x1                   	// #1
  4118b4:	br	x10
  4118b8:	ret
  4118bc:	mov	w0, wzr
  4118c0:	ret
  4118c4:	sub	w8, w0, #0x9
  4118c8:	cmp	w8, #0x17
  4118cc:	b.hi	4118e4 <_obstack_memory_used@@Base+0x288>  // b.pmore
  4118d0:	mov	w9, #0x1f                  	// #31
  4118d4:	movk	w9, #0x80, lsl #16
  4118d8:	lsr	w8, w9, w8
  4118dc:	and	w0, w8, #0x1
  4118e0:	ret
  4118e4:	mov	w0, wzr
  4118e8:	ret
  4118ec:	sub	w8, w0, #0x41
  4118f0:	cmp	w8, #0x1a
  4118f4:	cset	w0, cc  // cc = lo, ul, last
  4118f8:	ret
  4118fc:	sub	w8, w0, #0x30
  411900:	cmp	w8, #0x36
  411904:	b.hi	41191c <_obstack_memory_used@@Base+0x2c0>  // b.pmore
  411908:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  41190c:	movk	x9, #0x3ff
  411910:	lsr	x8, x9, x8
  411914:	and	w0, w8, #0x1
  411918:	ret
  41191c:	mov	w0, wzr
  411920:	ret
  411924:	sub	w8, w0, #0x41
  411928:	add	w9, w0, #0x20
  41192c:	cmp	w8, #0x1a
  411930:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  411934:	ret
  411938:	sub	w8, w0, #0x61
  41193c:	sub	w9, w0, #0x20
  411940:	cmp	w8, #0x1a
  411944:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  411948:	ret
  41194c:	stp	x29, x30, [sp, #-48]!
  411950:	str	x21, [sp, #16]
  411954:	stp	x20, x19, [sp, #32]
  411958:	mov	x29, sp
  41195c:	mov	x20, x0
  411960:	bl	4029a0 <__fpending@plt>
  411964:	mov	x19, x0
  411968:	mov	x0, x20
  41196c:	bl	402900 <ferror_unlocked@plt>
  411970:	mov	w21, w0
  411974:	mov	x0, x20
  411978:	bl	410dac <ferror@plt+0xddec>
  41197c:	cbz	w21, 4119a0 <_obstack_memory_used@@Base+0x344>
  411980:	cbnz	w0, 41198c <_obstack_memory_used@@Base+0x330>
  411984:	bl	402f30 <__errno_location@plt>
  411988:	str	wzr, [x0]
  41198c:	mov	w0, #0xffffffff            	// #-1
  411990:	ldp	x20, x19, [sp, #32]
  411994:	ldr	x21, [sp, #16]
  411998:	ldp	x29, x30, [sp], #48
  41199c:	ret
  4119a0:	cbz	w0, 411990 <_obstack_memory_used@@Base+0x334>
  4119a4:	cbnz	x19, 411980 <_obstack_memory_used@@Base+0x324>
  4119a8:	bl	402f30 <__errno_location@plt>
  4119ac:	ldr	w8, [x0]
  4119b0:	cmp	w8, #0x9
  4119b4:	csetm	w0, ne  // ne = any
  4119b8:	b	411990 <_obstack_memory_used@@Base+0x334>
  4119bc:	stp	x29, x30, [sp, #-16]!
  4119c0:	mov	x8, #0xc3e0000000000000    	// #-4332462841530417152
  4119c4:	fmov	d1, x8
  4119c8:	fcmp	d0, d1
  4119cc:	mov	x29, sp
  4119d0:	b.le	411a3c <_obstack_memory_used@@Base+0x3e0>
  4119d4:	mov	x8, #0x43e0000000000000    	// #4890909195324358656
  4119d8:	fmov	d1, x8
  4119dc:	mov	w8, #0xca00                	// #51712
  4119e0:	fcmp	d0, d1
  4119e4:	movk	w8, #0x3b9a, lsl #16
  4119e8:	b.pl	411a48 <_obstack_memory_used@@Base+0x3ec>  // b.nfrst
  4119ec:	fcvtzs	x9, d0
  4119f0:	mov	x10, #0xcd6500000000        	// #225833675390976
  4119f4:	movk	x10, #0x41cd, lsl #48
  4119f8:	scvtf	d1, x9
  4119fc:	fsub	d0, d0, d1
  411a00:	fmov	d1, x10
  411a04:	fmul	d0, d0, d1
  411a08:	fcvtzs	x10, d0
  411a0c:	scvtf	d1, x10
  411a10:	fcmp	d0, d1
  411a14:	cset	w11, gt
  411a18:	add	x10, x11, x10
  411a1c:	sdiv	x11, x10, x8
  411a20:	msub	x10, x11, x8, x10
  411a24:	add	x9, x11, x9
  411a28:	add	x8, x10, x8
  411a2c:	cmp	x10, #0x0
  411a30:	add	x0, x9, x10, asr #63
  411a34:	csel	x1, x8, x10, lt  // lt = tstop
  411a38:	b	411a50 <_obstack_memory_used@@Base+0x3f4>
  411a3c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  411a40:	mov	x1, xzr
  411a44:	b	411a50 <_obstack_memory_used@@Base+0x3f4>
  411a48:	sub	x1, x8, #0x1
  411a4c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  411a50:	bl	411da0 <_obstack_memory_used@@Base+0x744>
  411a54:	ldp	x29, x30, [sp], #16
  411a58:	ret
  411a5c:	stp	x29, x30, [sp, #-48]!
  411a60:	stp	x20, x19, [sp, #32]
  411a64:	mov	w19, w0
  411a68:	cmp	w0, #0x2
  411a6c:	stp	x22, x21, [sp, #16]
  411a70:	mov	x29, sp
  411a74:	b.hi	411aa0 <_obstack_memory_used@@Base+0x444>  // b.pmore
  411a78:	mov	w0, w19
  411a7c:	bl	411ab4 <_obstack_memory_used@@Base+0x458>
  411a80:	mov	w20, w0
  411a84:	bl	402f30 <__errno_location@plt>
  411a88:	ldr	w22, [x0]
  411a8c:	mov	x21, x0
  411a90:	mov	w0, w19
  411a94:	bl	402b80 <close@plt>
  411a98:	mov	w19, w20
  411a9c:	str	w22, [x21]
  411aa0:	mov	w0, w19
  411aa4:	ldp	x20, x19, [sp, #32]
  411aa8:	ldp	x22, x21, [sp, #16]
  411aac:	ldp	x29, x30, [sp], #48
  411ab0:	ret
  411ab4:	stp	x29, x30, [sp, #-16]!
  411ab8:	lsl	w8, w1, #12
  411abc:	mov	w9, #0x406                 	// #1030
  411ac0:	and	w1, w9, w8, asr #31
  411ac4:	mov	w2, #0x3                   	// #3
  411ac8:	mov	x29, sp
  411acc:	bl	410e38 <ferror@plt+0xde78>
  411ad0:	ldp	x29, x30, [sp], #16
  411ad4:	ret
  411ad8:	stp	x29, x30, [sp, #-48]!
  411adc:	stp	x22, x21, [sp, #16]
  411ae0:	stp	x20, x19, [sp, #32]
  411ae4:	mov	x29, sp
  411ae8:	mov	x20, x1
  411aec:	bl	402a30 <fopen@plt>
  411af0:	mov	x19, x0
  411af4:	cbz	x0, 411b70 <_obstack_memory_used@@Base+0x514>
  411af8:	mov	x0, x19
  411afc:	bl	4029d0 <fileno@plt>
  411b00:	cmp	w0, #0x2
  411b04:	b.hi	411b64 <_obstack_memory_used@@Base+0x508>  // b.pmore
  411b08:	bl	411e00 <_obstack_memory_used@@Base+0x7a4>
  411b0c:	tbnz	w0, #31, 411b44 <_obstack_memory_used@@Base+0x4e8>
  411b10:	mov	w21, w0
  411b14:	mov	x0, x19
  411b18:	bl	410dac <ferror@plt+0xddec>
  411b1c:	cbz	w0, 411b84 <_obstack_memory_used@@Base+0x528>
  411b20:	bl	402f30 <__errno_location@plt>
  411b24:	ldr	w22, [x0]
  411b28:	mov	x20, x0
  411b2c:	mov	w0, w21
  411b30:	bl	402b80 <close@plt>
  411b34:	str	w22, [x20]
  411b38:	mov	w8, #0x1                   	// #1
  411b3c:	cbnz	w8, 411b68 <_obstack_memory_used@@Base+0x50c>
  411b40:	b	411b64 <_obstack_memory_used@@Base+0x508>
  411b44:	bl	402f30 <__errno_location@plt>
  411b48:	ldr	w21, [x0]
  411b4c:	mov	x20, x0
  411b50:	mov	x0, x19
  411b54:	bl	410dac <ferror@plt+0xddec>
  411b58:	str	w21, [x20]
  411b5c:	mov	w8, #0x1                   	// #1
  411b60:	cbnz	w8, 411b68 <_obstack_memory_used@@Base+0x50c>
  411b64:	mov	w8, wzr
  411b68:	cbz	w8, 411b70 <_obstack_memory_used@@Base+0x514>
  411b6c:	mov	x19, xzr
  411b70:	mov	x0, x19
  411b74:	ldp	x20, x19, [sp, #32]
  411b78:	ldp	x22, x21, [sp, #16]
  411b7c:	ldp	x29, x30, [sp], #48
  411b80:	ret
  411b84:	mov	w0, w21
  411b88:	mov	x1, x20
  411b8c:	bl	402b10 <fdopen@plt>
  411b90:	mov	x19, x0
  411b94:	cbz	x0, 411b20 <_obstack_memory_used@@Base+0x4c4>
  411b98:	mov	w8, wzr
  411b9c:	cbnz	w8, 411b68 <_obstack_memory_used@@Base+0x50c>
  411ba0:	b	411b64 <_obstack_memory_used@@Base+0x508>
  411ba4:	stp	x29, x30, [sp, #-16]!
  411ba8:	mov	w0, #0xe                   	// #14
  411bac:	mov	x29, sp
  411bb0:	bl	402a20 <nl_langinfo@plt>
  411bb4:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x29a4>
  411bb8:	add	x8, x8, #0xb18
  411bbc:	cmp	x0, #0x0
  411bc0:	csel	x8, x8, x0, eq  // eq = none
  411bc4:	ldrb	w9, [x8]
  411bc8:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x29a4>
  411bcc:	add	x10, x10, #0xfe3
  411bd0:	cmp	w9, #0x0
  411bd4:	csel	x0, x10, x8, eq  // eq = none
  411bd8:	ldp	x29, x30, [sp], #16
  411bdc:	ret
  411be0:	stp	x29, x30, [sp, #-64]!
  411be4:	stp	x22, x21, [sp, #32]
  411be8:	stp	x20, x19, [sp, #48]
  411bec:	mov	x19, x3
  411bf0:	mov	x20, x2
  411bf4:	mov	x21, x1
  411bf8:	cmp	x1, x3
  411bfc:	mov	x22, x0
  411c00:	stp	x24, x23, [sp, #16]
  411c04:	mov	x29, sp
  411c08:	b.ne	411c20 <_obstack_memory_used@@Base+0x5c4>  // b.any
  411c0c:	mov	x0, x22
  411c10:	mov	x1, x20
  411c14:	mov	x2, x21
  411c18:	bl	402b50 <bcmp@plt>
  411c1c:	cbz	w0, 411c50 <_obstack_memory_used@@Base+0x5f4>
  411c20:	ldrb	w23, [x22, x21]
  411c24:	ldrb	w24, [x20, x19]
  411c28:	add	x1, x21, #0x1
  411c2c:	add	x3, x19, #0x1
  411c30:	mov	x0, x22
  411c34:	mov	x2, x20
  411c38:	strb	wzr, [x22, x21]
  411c3c:	strb	wzr, [x20, x19]
  411c40:	bl	411c74 <_obstack_memory_used@@Base+0x618>
  411c44:	strb	w23, [x22, x21]
  411c48:	strb	w24, [x20, x19]
  411c4c:	b	411c60 <_obstack_memory_used@@Base+0x604>
  411c50:	bl	402f30 <__errno_location@plt>
  411c54:	mov	x8, x0
  411c58:	mov	w0, wzr
  411c5c:	str	wzr, [x8]
  411c60:	ldp	x20, x19, [sp, #48]
  411c64:	ldp	x22, x21, [sp, #32]
  411c68:	ldp	x24, x23, [sp, #16]
  411c6c:	ldp	x29, x30, [sp], #64
  411c70:	ret
  411c74:	stp	x29, x30, [sp, #-80]!
  411c78:	str	x25, [sp, #16]
  411c7c:	stp	x24, x23, [sp, #32]
  411c80:	stp	x22, x21, [sp, #48]
  411c84:	stp	x20, x19, [sp, #64]
  411c88:	mov	x29, sp
  411c8c:	mov	x19, x3
  411c90:	mov	x20, x2
  411c94:	mov	x21, x1
  411c98:	mov	x22, x0
  411c9c:	bl	402f30 <__errno_location@plt>
  411ca0:	mov	x23, x0
  411ca4:	b	411cb8 <_obstack_memory_used@@Base+0x65c>
  411ca8:	cmp	x19, #0x0
  411cac:	cset	w8, ne  // ne = any
  411cb0:	csinc	w24, w24, wzr, ne  // ne = any
  411cb4:	tbz	w8, #0, 411d10 <_obstack_memory_used@@Base+0x6b4>
  411cb8:	mov	x0, x22
  411cbc:	mov	x1, x20
  411cc0:	str	wzr, [x23]
  411cc4:	bl	402ec0 <strcoll@plt>
  411cc8:	cbnz	w0, 411d0c <_obstack_memory_used@@Base+0x6b0>
  411ccc:	mov	x0, x22
  411cd0:	bl	4028b0 <strlen@plt>
  411cd4:	add	x25, x0, #0x1
  411cd8:	mov	x0, x20
  411cdc:	bl	4028b0 <strlen@plt>
  411ce0:	add	x8, x0, #0x1
  411ce4:	add	x22, x22, x25
  411ce8:	sub	x21, x21, x25
  411cec:	add	x20, x20, x8
  411cf0:	sub	x19, x19, x8
  411cf4:	cbnz	x21, 411ca8 <_obstack_memory_used@@Base+0x64c>
  411cf8:	cmp	x19, #0x0
  411cfc:	mov	w8, wzr
  411d00:	csetm	w24, ne  // ne = any
  411d04:	tbnz	w8, #0, 411cb8 <_obstack_memory_used@@Base+0x65c>
  411d08:	b	411d10 <_obstack_memory_used@@Base+0x6b4>
  411d0c:	mov	w24, w0
  411d10:	mov	w0, w24
  411d14:	ldp	x20, x19, [sp, #64]
  411d18:	ldp	x22, x21, [sp, #48]
  411d1c:	ldp	x24, x23, [sp, #32]
  411d20:	ldr	x25, [sp, #16]
  411d24:	ldp	x29, x30, [sp], #80
  411d28:	ret
  411d2c:	stp	x29, x30, [sp, #-48]!
  411d30:	stp	x22, x21, [sp, #16]
  411d34:	stp	x20, x19, [sp, #32]
  411d38:	mov	x19, x3
  411d3c:	mov	x20, x2
  411d40:	mov	x21, x1
  411d44:	cmp	x1, x3
  411d48:	mov	x22, x0
  411d4c:	mov	x29, sp
  411d50:	b.ne	411d68 <_obstack_memory_used@@Base+0x70c>  // b.any
  411d54:	mov	x0, x22
  411d58:	mov	x1, x20
  411d5c:	mov	x2, x21
  411d60:	bl	402b50 <bcmp@plt>
  411d64:	cbz	w0, 411d80 <_obstack_memory_used@@Base+0x724>
  411d68:	mov	x0, x22
  411d6c:	mov	x1, x21
  411d70:	mov	x2, x20
  411d74:	mov	x3, x19
  411d78:	bl	411c74 <_obstack_memory_used@@Base+0x618>
  411d7c:	b	411d90 <_obstack_memory_used@@Base+0x734>
  411d80:	bl	402f30 <__errno_location@plt>
  411d84:	mov	x8, x0
  411d88:	mov	w0, wzr
  411d8c:	str	wzr, [x8]
  411d90:	ldp	x20, x19, [sp, #32]
  411d94:	ldp	x22, x21, [sp, #16]
  411d98:	ldp	x29, x30, [sp], #48
  411d9c:	ret
  411da0:	ret
  411da4:	cmp	x0, x2
  411da8:	b.ge	411db4 <_obstack_memory_used@@Base+0x758>  // b.tcont
  411dac:	mov	w0, #0xffffffff            	// #-1
  411db0:	ret
  411db4:	b.le	411dc0 <_obstack_memory_used@@Base+0x764>
  411db8:	mov	w0, #0x1                   	// #1
  411dbc:	ret
  411dc0:	sub	w0, w1, w3
  411dc4:	ret
  411dc8:	orr	x8, x1, x0
  411dcc:	cmp	x8, #0x0
  411dd0:	cset	w8, ne  // ne = any
  411dd4:	cmp	x0, #0x0
  411dd8:	csinv	w0, w8, wzr, ge  // ge = tcont
  411ddc:	ret
  411de0:	mov	x8, #0xcd6500000000        	// #225833675390976
  411de4:	movk	x8, #0x41cd, lsl #48
  411de8:	scvtf	d1, x1
  411dec:	fmov	d2, x8
  411df0:	scvtf	d0, x0
  411df4:	fdiv	d1, d1, d2
  411df8:	fadd	d0, d1, d0
  411dfc:	ret
  411e00:	stp	x29, x30, [sp, #-16]!
  411e04:	mov	w2, #0x3                   	// #3
  411e08:	mov	w1, wzr
  411e0c:	mov	x29, sp
  411e10:	bl	410e38 <ferror@plt+0xde78>
  411e14:	ldp	x29, x30, [sp], #16
  411e18:	ret
  411e1c:	nop
  411e20:	stp	x29, x30, [sp, #-48]!
  411e24:	mov	x29, sp
  411e28:	str	q0, [sp, #16]
  411e2c:	str	q1, [sp, #32]
  411e30:	ldp	x6, x1, [sp, #16]
  411e34:	ldp	x7, x0, [sp, #32]
  411e38:	mrs	x2, fpcr
  411e3c:	ubfx	x4, x1, #48, #15
  411e40:	lsr	x2, x1, #63
  411e44:	lsr	x3, x0, #63
  411e48:	ubfx	x9, x0, #0, #48
  411e4c:	mov	x5, #0x7fff                	// #32767
  411e50:	mov	x10, x6
  411e54:	cmp	x4, x5
  411e58:	and	w2, w2, #0xff
  411e5c:	ubfx	x1, x1, #0, #48
  411e60:	and	w3, w3, #0xff
  411e64:	ubfx	x0, x0, #48, #15
  411e68:	b.eq	411e9c <_obstack_memory_used@@Base+0x840>  // b.none
  411e6c:	cmp	x0, x5
  411e70:	b.eq	411e88 <_obstack_memory_used@@Base+0x82c>  // b.none
  411e74:	cmp	x4, x0
  411e78:	mov	w0, #0x1                   	// #1
  411e7c:	b.eq	411eb4 <_obstack_memory_used@@Base+0x858>  // b.none
  411e80:	ldp	x29, x30, [sp], #48
  411e84:	ret
  411e88:	orr	x8, x9, x7
  411e8c:	cbnz	x8, 411f18 <_obstack_memory_used@@Base+0x8bc>
  411e90:	mov	w0, #0x1                   	// #1
  411e94:	ldp	x29, x30, [sp], #48
  411e98:	ret
  411e9c:	orr	x5, x1, x6
  411ea0:	cbnz	x5, 411ee8 <_obstack_memory_used@@Base+0x88c>
  411ea4:	cmp	x0, x4
  411ea8:	b.ne	411e90 <_obstack_memory_used@@Base+0x834>  // b.any
  411eac:	orr	x8, x9, x7
  411eb0:	cbnz	x8, 411f18 <_obstack_memory_used@@Base+0x8bc>
  411eb4:	cmp	x1, x9
  411eb8:	mov	w0, #0x1                   	// #1
  411ebc:	ccmp	x6, x7, #0x0, eq  // eq = none
  411ec0:	b.ne	411e80 <_obstack_memory_used@@Base+0x824>  // b.any
  411ec4:	cmp	w2, w3
  411ec8:	mov	w0, #0x0                   	// #0
  411ecc:	b.eq	411e80 <_obstack_memory_used@@Base+0x824>  // b.none
  411ed0:	mov	w0, #0x1                   	// #1
  411ed4:	cbnz	x4, 411e80 <_obstack_memory_used@@Base+0x824>
  411ed8:	orr	x1, x1, x10
  411edc:	cmp	x1, #0x0
  411ee0:	cset	w0, ne  // ne = any
  411ee4:	b	411e80 <_obstack_memory_used@@Base+0x824>
  411ee8:	tst	x1, #0x800000000000
  411eec:	b.ne	411f04 <_obstack_memory_used@@Base+0x8a8>  // b.any
  411ef0:	mov	w0, #0x1                   	// #1
  411ef4:	bl	412280 <_obstack_memory_used@@Base+0xc24>
  411ef8:	mov	w0, #0x1                   	// #1
  411efc:	ldp	x29, x30, [sp], #48
  411f00:	ret
  411f04:	cmp	x0, x4
  411f08:	mov	w0, #0x1                   	// #1
  411f0c:	b.ne	411e80 <_obstack_memory_used@@Base+0x824>  // b.any
  411f10:	orr	x8, x9, x7
  411f14:	cbz	x8, 411e80 <_obstack_memory_used@@Base+0x824>
  411f18:	tst	x9, #0x800000000000
  411f1c:	b.eq	411ef0 <_obstack_memory_used@@Base+0x894>  // b.none
  411f20:	b	411e90 <_obstack_memory_used@@Base+0x834>
  411f24:	nop
  411f28:	stp	x29, x30, [sp, #-48]!
  411f2c:	mov	x29, sp
  411f30:	str	q0, [sp, #16]
  411f34:	str	q1, [sp, #32]
  411f38:	ldp	x8, x1, [sp, #16]
  411f3c:	ldp	x9, x0, [sp, #32]
  411f40:	mrs	x2, fpcr
  411f44:	ubfx	x4, x1, #48, #15
  411f48:	ubfx	x10, x1, #0, #48
  411f4c:	lsr	x2, x1, #63
  411f50:	mov	x7, #0x7fff                	// #32767
  411f54:	mov	x5, x8
  411f58:	cmp	x4, x7
  411f5c:	ubfx	x11, x0, #0, #48
  411f60:	ubfx	x6, x0, #48, #15
  411f64:	lsr	x1, x0, #63
  411f68:	mov	x3, x9
  411f6c:	b.eq	411fa8 <_obstack_memory_used@@Base+0x94c>  // b.none
  411f70:	cmp	x6, x7
  411f74:	b.eq	411fb8 <_obstack_memory_used@@Base+0x95c>  // b.none
  411f78:	cbnz	x4, 411fe0 <_obstack_memory_used@@Base+0x984>
  411f7c:	orr	x5, x10, x8
  411f80:	cmp	x5, #0x0
  411f84:	cset	w0, eq  // eq = none
  411f88:	cbnz	x6, 411f94 <_obstack_memory_used@@Base+0x938>
  411f8c:	orr	x3, x11, x9
  411f90:	cbz	x3, 412000 <_obstack_memory_used@@Base+0x9a4>
  411f94:	cbz	w0, 411fc4 <_obstack_memory_used@@Base+0x968>
  411f98:	cmp	x1, #0x0
  411f9c:	csinv	w0, w0, wzr, ne  // ne = any
  411fa0:	ldp	x29, x30, [sp], #48
  411fa4:	ret
  411fa8:	orr	x0, x10, x8
  411fac:	cbnz	x0, 41200c <_obstack_memory_used@@Base+0x9b0>
  411fb0:	cmp	x6, x4
  411fb4:	b.ne	411fe0 <_obstack_memory_used@@Base+0x984>  // b.any
  411fb8:	orr	x3, x11, x3
  411fbc:	cbnz	x3, 41200c <_obstack_memory_used@@Base+0x9b0>
  411fc0:	cbz	x4, 411ff0 <_obstack_memory_used@@Base+0x994>
  411fc4:	cmp	x2, x1
  411fc8:	b.eq	412020 <_obstack_memory_used@@Base+0x9c4>  // b.none
  411fcc:	cmp	x2, #0x0
  411fd0:	mov	w0, #0xffffffff            	// #-1
  411fd4:	cneg	w0, w0, eq  // eq = none
  411fd8:	ldp	x29, x30, [sp], #48
  411fdc:	ret
  411fe0:	cbnz	x6, 411fc4 <_obstack_memory_used@@Base+0x968>
  411fe4:	orr	x3, x11, x3
  411fe8:	cbnz	x3, 411fc4 <_obstack_memory_used@@Base+0x968>
  411fec:	b	411fcc <_obstack_memory_used@@Base+0x970>
  411ff0:	orr	x5, x10, x5
  411ff4:	cmp	x5, #0x0
  411ff8:	cset	w0, eq  // eq = none
  411ffc:	b	411f94 <_obstack_memory_used@@Base+0x938>
  412000:	mov	w0, #0x0                   	// #0
  412004:	cbz	x5, 411fa0 <_obstack_memory_used@@Base+0x944>
  412008:	b	411fcc <_obstack_memory_used@@Base+0x970>
  41200c:	mov	w0, #0x1                   	// #1
  412010:	bl	412280 <_obstack_memory_used@@Base+0xc24>
  412014:	mov	w0, #0xfffffffe            	// #-2
  412018:	ldp	x29, x30, [sp], #48
  41201c:	ret
  412020:	cmp	x4, x6
  412024:	b.gt	411fcc <_obstack_memory_used@@Base+0x970>
  412028:	b.lt	412060 <_obstack_memory_used@@Base+0xa04>  // b.tstop
  41202c:	cmp	x10, x11
  412030:	b.hi	411fcc <_obstack_memory_used@@Base+0x970>  // b.pmore
  412034:	cset	w0, eq  // eq = none
  412038:	cmp	w0, #0x0
  41203c:	ccmp	x8, x9, #0x0, ne  // ne = any
  412040:	b.hi	411fcc <_obstack_memory_used@@Base+0x970>  // b.pmore
  412044:	cmp	x10, x11
  412048:	b.cc	412060 <_obstack_memory_used@@Base+0xa04>  // b.lo, b.ul, b.last
  41204c:	cmp	w0, #0x0
  412050:	mov	w0, #0x0                   	// #0
  412054:	ccmp	x8, x9, #0x2, ne  // ne = any
  412058:	b.cs	411fa0 <_obstack_memory_used@@Base+0x944>  // b.hs, b.nlast
  41205c:	nop
  412060:	cmp	x2, #0x0
  412064:	mov	w0, #0x1                   	// #1
  412068:	cneg	w0, w0, eq  // eq = none
  41206c:	b	411fa0 <_obstack_memory_used@@Base+0x944>
  412070:	stp	x29, x30, [sp, #-48]!
  412074:	mov	x29, sp
  412078:	str	q0, [sp, #16]
  41207c:	str	q1, [sp, #32]
  412080:	ldp	x8, x1, [sp, #16]
  412084:	ldp	x9, x0, [sp, #32]
  412088:	mrs	x2, fpcr
  41208c:	ubfx	x4, x1, #48, #15
  412090:	ubfx	x10, x1, #0, #48
  412094:	lsr	x2, x1, #63
  412098:	mov	x5, #0x7fff                	// #32767
  41209c:	mov	x6, x8
  4120a0:	cmp	x4, x5
  4120a4:	ubfx	x11, x0, #0, #48
  4120a8:	ubfx	x7, x0, #48, #15
  4120ac:	lsr	x1, x0, #63
  4120b0:	mov	x3, x9
  4120b4:	b.eq	4120ec <_obstack_memory_used@@Base+0xa90>  // b.none
  4120b8:	cmp	x7, x5
  4120bc:	b.eq	4120fc <_obstack_memory_used@@Base+0xaa0>  // b.none
  4120c0:	cbnz	x4, 412128 <_obstack_memory_used@@Base+0xacc>
  4120c4:	orr	x6, x10, x8
  4120c8:	cmp	x6, #0x0
  4120cc:	cset	w0, eq  // eq = none
  4120d0:	cbnz	x7, 412114 <_obstack_memory_used@@Base+0xab8>
  4120d4:	orr	x3, x11, x9
  4120d8:	cbnz	x3, 412114 <_obstack_memory_used@@Base+0xab8>
  4120dc:	mov	w0, #0x0                   	// #0
  4120e0:	cbnz	x6, 41213c <_obstack_memory_used@@Base+0xae0>
  4120e4:	ldp	x29, x30, [sp], #48
  4120e8:	ret
  4120ec:	orr	x0, x10, x8
  4120f0:	cbnz	x0, 412150 <_obstack_memory_used@@Base+0xaf4>
  4120f4:	cmp	x7, x4
  4120f8:	b.ne	412128 <_obstack_memory_used@@Base+0xacc>  // b.any
  4120fc:	orr	x3, x11, x3
  412100:	cbnz	x3, 412150 <_obstack_memory_used@@Base+0xaf4>
  412104:	cbnz	x4, 412134 <_obstack_memory_used@@Base+0xad8>
  412108:	orr	x6, x10, x6
  41210c:	cmp	x6, #0x0
  412110:	cset	w0, eq  // eq = none
  412114:	cbz	w0, 412134 <_obstack_memory_used@@Base+0xad8>
  412118:	cmp	x1, #0x0
  41211c:	csinv	w0, w0, wzr, ne  // ne = any
  412120:	ldp	x29, x30, [sp], #48
  412124:	ret
  412128:	cbnz	x7, 412134 <_obstack_memory_used@@Base+0xad8>
  41212c:	orr	x3, x11, x3
  412130:	cbz	x3, 41213c <_obstack_memory_used@@Base+0xae0>
  412134:	cmp	x2, x1
  412138:	b.eq	412164 <_obstack_memory_used@@Base+0xb08>  // b.none
  41213c:	cmp	x2, #0x0
  412140:	mov	w0, #0xffffffff            	// #-1
  412144:	cneg	w0, w0, eq  // eq = none
  412148:	ldp	x29, x30, [sp], #48
  41214c:	ret
  412150:	mov	w0, #0x1                   	// #1
  412154:	bl	412280 <_obstack_memory_used@@Base+0xc24>
  412158:	mov	w0, #0x2                   	// #2
  41215c:	ldp	x29, x30, [sp], #48
  412160:	ret
  412164:	cmp	x4, x7
  412168:	b.gt	41213c <_obstack_memory_used@@Base+0xae0>
  41216c:	b.lt	4121a0 <_obstack_memory_used@@Base+0xb44>  // b.tstop
  412170:	cmp	x10, x11
  412174:	b.hi	41213c <_obstack_memory_used@@Base+0xae0>  // b.pmore
  412178:	cset	w0, eq  // eq = none
  41217c:	cmp	w0, #0x0
  412180:	ccmp	x8, x9, #0x0, ne  // ne = any
  412184:	b.hi	41213c <_obstack_memory_used@@Base+0xae0>  // b.pmore
  412188:	cmp	x10, x11
  41218c:	b.cc	4121a0 <_obstack_memory_used@@Base+0xb44>  // b.lo, b.ul, b.last
  412190:	cmp	w0, #0x0
  412194:	mov	w0, #0x0                   	// #0
  412198:	ccmp	x8, x9, #0x2, ne  // ne = any
  41219c:	b.cs	4120e4 <_obstack_memory_used@@Base+0xa88>  // b.hs, b.nlast
  4121a0:	cmp	x2, #0x0
  4121a4:	mov	w0, #0x1                   	// #1
  4121a8:	cneg	w0, w0, eq  // eq = none
  4121ac:	b	4120e4 <_obstack_memory_used@@Base+0xa88>
  4121b0:	stp	x29, x30, [sp, #-48]!
  4121b4:	mov	x29, sp
  4121b8:	str	q0, [sp, #16]
  4121bc:	str	q1, [sp, #32]
  4121c0:	ldp	x3, x1, [sp, #16]
  4121c4:	ldp	x2, x0, [sp, #32]
  4121c8:	mrs	x4, fpcr
  4121cc:	ubfx	x5, x1, #48, #15
  4121d0:	mov	x4, x3
  4121d4:	mov	x3, x2
  4121d8:	ubfx	x2, x1, #0, #48
  4121dc:	mov	x1, #0x7fff                	// #32767
  4121e0:	ubfx	x7, x0, #0, #48
  4121e4:	cmp	x5, x1
  4121e8:	ubfx	x1, x0, #48, #15
  4121ec:	b.eq	412208 <_obstack_memory_used@@Base+0xbac>  // b.none
  4121f0:	mov	x6, #0x7fff                	// #32767
  4121f4:	mov	w0, #0x0                   	// #0
  4121f8:	cmp	x1, x6
  4121fc:	b.eq	41222c <_obstack_memory_used@@Base+0xbd0>  // b.none
  412200:	ldp	x29, x30, [sp], #48
  412204:	ret
  412208:	orr	x0, x4, x2
  41220c:	cbz	x0, 4121f0 <_obstack_memory_used@@Base+0xb94>
  412210:	tst	x2, #0x800000000000
  412214:	b.ne	41224c <_obstack_memory_used@@Base+0xbf0>  // b.any
  412218:	mov	w0, #0x1                   	// #1
  41221c:	bl	412280 <_obstack_memory_used@@Base+0xc24>
  412220:	mov	w0, #0x1                   	// #1
  412224:	ldp	x29, x30, [sp], #48
  412228:	ret
  41222c:	orr	x3, x7, x3
  412230:	cbz	x3, 412200 <_obstack_memory_used@@Base+0xba4>
  412234:	cmp	x5, x1
  412238:	b.eq	412260 <_obstack_memory_used@@Base+0xc04>  // b.none
  41223c:	tst	x7, #0x800000000000
  412240:	mov	w0, #0x1                   	// #1
  412244:	b.ne	412200 <_obstack_memory_used@@Base+0xba4>  // b.any
  412248:	b	412218 <_obstack_memory_used@@Base+0xbbc>
  41224c:	cmp	x1, x5
  412250:	mov	w0, #0x1                   	// #1
  412254:	b.ne	412200 <_obstack_memory_used@@Base+0xba4>  // b.any
  412258:	orr	x3, x7, x3
  41225c:	b	412270 <_obstack_memory_used@@Base+0xc14>
  412260:	orr	x4, x4, x2
  412264:	cbz	x4, 41223c <_obstack_memory_used@@Base+0xbe0>
  412268:	tst	x2, #0x800000000000
  41226c:	b.eq	412218 <_obstack_memory_used@@Base+0xbbc>  // b.none
  412270:	mov	w0, #0x1                   	// #1
  412274:	cbz	x3, 412200 <_obstack_memory_used@@Base+0xba4>
  412278:	b	41223c <_obstack_memory_used@@Base+0xbe0>
  41227c:	nop
  412280:	tbz	w0, #0, 412290 <_obstack_memory_used@@Base+0xc34>
  412284:	movi	v1.2s, #0x0
  412288:	fdiv	s0, s1, s1
  41228c:	mrs	x1, fpsr
  412290:	tbz	w0, #1, 4122a4 <_obstack_memory_used@@Base+0xc48>
  412294:	fmov	s1, #1.000000000000000000e+00
  412298:	movi	v2.2s, #0x0
  41229c:	fdiv	s0, s1, s2
  4122a0:	mrs	x1, fpsr
  4122a4:	tbz	w0, #2, 4122c4 <_obstack_memory_used@@Base+0xc68>
  4122a8:	mov	w2, #0xc5ae                	// #50606
  4122ac:	mov	w1, #0x7f7fffff            	// #2139095039
  4122b0:	movk	w2, #0x749d, lsl #16
  4122b4:	fmov	s1, w1
  4122b8:	fmov	s2, w2
  4122bc:	fadd	s0, s1, s2
  4122c0:	mrs	x1, fpsr
  4122c4:	tbz	w0, #3, 4122d4 <_obstack_memory_used@@Base+0xc78>
  4122c8:	movi	v1.2s, #0x80, lsl #16
  4122cc:	fmul	s0, s1, s1
  4122d0:	mrs	x1, fpsr
  4122d4:	tbz	w0, #4, 4122ec <_obstack_memory_used@@Base+0xc90>
  4122d8:	mov	w0, #0x7f7fffff            	// #2139095039
  4122dc:	fmov	s2, #1.000000000000000000e+00
  4122e0:	fmov	s1, w0
  4122e4:	fsub	s0, s1, s2
  4122e8:	mrs	x0, fpsr
  4122ec:	ret
  4122f0:	stp	x29, x30, [sp, #-64]!
  4122f4:	mov	x29, sp
  4122f8:	stp	x19, x20, [sp, #16]
  4122fc:	adrp	x20, 425000 <_obstack_memory_used@@Base+0x139a4>
  412300:	add	x20, x20, #0xde0
  412304:	stp	x21, x22, [sp, #32]
  412308:	adrp	x21, 425000 <_obstack_memory_used@@Base+0x139a4>
  41230c:	add	x21, x21, #0xdd8
  412310:	sub	x20, x20, x21
  412314:	mov	w22, w0
  412318:	stp	x23, x24, [sp, #48]
  41231c:	mov	x23, x1
  412320:	mov	x24, x2
  412324:	bl	402808 <mbrtowc@plt-0x38>
  412328:	cmp	xzr, x20, asr #3
  41232c:	b.eq	412358 <_obstack_memory_used@@Base+0xcfc>  // b.none
  412330:	asr	x20, x20, #3
  412334:	mov	x19, #0x0                   	// #0
  412338:	ldr	x3, [x21, x19, lsl #3]
  41233c:	mov	x2, x24
  412340:	add	x19, x19, #0x1
  412344:	mov	x1, x23
  412348:	mov	w0, w22
  41234c:	blr	x3
  412350:	cmp	x20, x19
  412354:	b.ne	412338 <_obstack_memory_used@@Base+0xcdc>  // b.any
  412358:	ldp	x19, x20, [sp, #16]
  41235c:	ldp	x21, x22, [sp, #32]
  412360:	ldp	x23, x24, [sp, #48]
  412364:	ldp	x29, x30, [sp], #64
  412368:	ret
  41236c:	nop
  412370:	ret
  412374:	nop
  412378:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x149a4>
  41237c:	mov	x1, #0x0                   	// #0
  412380:	ldr	x2, [x2, #976]
  412384:	b	402930 <__cxa_atexit@plt>
  412388:	mov	x2, x1
  41238c:	mov	x1, x0
  412390:	mov	w0, #0x0                   	// #0
  412394:	b	402f60 <__xstat@plt>
  412398:	mov	x2, x1
  41239c:	mov	w1, w0
  4123a0:	mov	w0, #0x0                   	// #0
  4123a4:	b	402e90 <__fxstat@plt>

Disassembly of section .fini:

00000000004123a8 <.fini>:
  4123a8:	stp	x29, x30, [sp, #-16]!
  4123ac:	mov	x29, sp
  4123b0:	ldp	x29, x30, [sp], #16
  4123b4:	ret
