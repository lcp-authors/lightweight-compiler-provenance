
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ARMSCII-8.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10708>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x110>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10708>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11708>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11708>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10708>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11708>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11708>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10708>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11708>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10708>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11708>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w1, w1, #0xff
     83c:	mov	w0, w1
     840:	cmp	w1, #0xa0
     844:	b.ls	86c <__assert_fail@plt+0x11c>  // b.plast
     848:	add	w2, w1, #0x5e
     84c:	mov	w0, #0xffffffff            	// #-1
     850:	and	w2, w2, #0xff
     854:	cmp	w2, #0x5c
     858:	b.hi	86c <__assert_fail@plt+0x11c>  // b.pmore
     85c:	sub	w1, w1, #0xa2
     860:	adrp	x0, 1000 <gconv@@Base+0x708>
     864:	add	x0, x0, #0x7c8
     868:	ldrh	w0, [x0, w1, sxtw #1]
     86c:	ret

0000000000000870 <gconv_init@@Base>:
     870:	stp	x29, x30, [sp, #-32]!
     874:	mov	x29, sp
     878:	stp	x19, x20, [sp, #16]
     87c:	mov	x19, x0
     880:	adrp	x20, 1000 <gconv@@Base+0x708>
     884:	ldr	x0, [x0, #24]
     888:	add	x20, x20, #0x630
     88c:	mov	x1, x20
     890:	bl	730 <strcmp@plt>
     894:	cbnz	w0, 8c8 <gconv_init@@Base+0x58>
     898:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     89c:	mov	x2, #0x100000001           	// #4294967297
     8a0:	add	x0, x0, #0x838
     8a4:	mov	x1, #0x400000004           	// #17179869188
     8a8:	str	x0, [x19, #48]
     8ac:	stp	x2, x1, [x19, #72]
     8b0:	str	xzr, [x19, #96]
     8b4:	mov	w0, #0x0                   	// #0
     8b8:	str	wzr, [x19, #88]
     8bc:	ldp	x19, x20, [sp, #16]
     8c0:	ldp	x29, x30, [sp], #32
     8c4:	ret
     8c8:	ldr	x0, [x19, #32]
     8cc:	mov	x1, x20
     8d0:	bl	730 <strcmp@plt>
     8d4:	cbnz	w0, 8f0 <gconv_init@@Base+0x80>
     8d8:	mov	x0, #0xffffffffffffffff    	// #-1
     8dc:	mov	x2, #0x400000004           	// #17179869188
     8e0:	mov	x1, #0x100000001           	// #4294967297
     8e4:	stp	x2, x1, [x19, #72]
     8e8:	str	x0, [x19, #96]
     8ec:	b	8b4 <gconv_init@@Base+0x44>
     8f0:	mov	w0, #0x1                   	// #1
     8f4:	b	8bc <gconv_init@@Base+0x4c>

00000000000008f8 <gconv@@Base>:
     8f8:	stp	x29, x30, [sp, #-240]!
     8fc:	mov	x12, x2
     900:	mov	x15, x4
     904:	mov	x29, sp
     908:	stp	x19, x20, [sp, #16]
     90c:	mov	x20, x1
     910:	adrp	x1, 11000 <gconv@@Base+0x10708>
     914:	stp	x27, x28, [sp, #80]
     918:	mov	x28, x0
     91c:	ldr	w18, [x20, #16]
     920:	ldr	x1, [x1, #4056]
     924:	stp	x21, x22, [sp, #32]
     928:	mov	x19, x3
     92c:	ldr	x0, [x1]
     930:	str	x0, [sp, #232]
     934:	mov	x0, #0x0                   	// #0
     938:	add	x1, x28, #0x68
     93c:	add	x0, x20, #0x30
     940:	stp	x25, x26, [sp, #64]
     944:	mov	x27, x5
     948:	str	w7, [sp, #132]
     94c:	mov	x22, #0x0                   	// #0
     950:	stp	x1, x0, [sp, #136]
     954:	tbnz	w18, #0, 974 <gconv@@Base+0x7c>
     958:	ldr	x0, [x28, #104]
     95c:	ldr	x22, [x28, #144]
     960:	cbz	x0, 974 <gconv@@Base+0x7c>
     964:	adrp	x0, 11000 <gconv@@Base+0x10708>
     968:	ldr	x0, [x0, #4040]
     96c:	ldr	x0, [x0]
     970:	eor	x22, x22, x0
     974:	cbnz	w6, 1010 <gconv@@Base+0x718>
     978:	cmp	x15, #0x0
     97c:	stp	x23, x24, [sp, #48]
     980:	csel	x1, x20, x15, eq  // eq = none
     984:	add	x23, sp, #0xc0
     988:	cmp	x27, #0x0
     98c:	csel	x2, x23, xzr, ne  // ne = any
     990:	mov	x26, #0x0                   	// #0
     994:	ldr	x9, [x1]
     998:	str	x2, [sp, #152]
     99c:	ldr	w2, [sp, #132]
     9a0:	ldr	x0, [x28, #96]
     9a4:	cmp	w2, #0x0
     9a8:	cset	w1, ne  // ne = any
     9ac:	str	w1, [sp, #184]
     9b0:	str	xzr, [sp, #192]
     9b4:	cmp	x0, #0x0
     9b8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9bc:	ldr	x21, [x12]
     9c0:	ldr	x23, [x20, #8]
     9c4:	b.ne	d64 <gconv@@Base+0x46c>  // b.any
     9c8:	adrp	x1, 1000 <gconv@@Base+0x708>
     9cc:	add	x1, x1, #0x7c8
     9d0:	mov	x25, x27
     9d4:	mov	x27, x21
     9d8:	mov	x21, x23
     9dc:	mov	x23, x9
     9e0:	stp	x15, x28, [sp, #112]
     9e4:	mov	x28, x12
     9e8:	str	x1, [sp, #160]
     9ec:	add	x1, x1, #0xc0
     9f0:	str	x1, [sp, #168]
     9f4:	add	x1, sp, #0xd8
     9f8:	str	x1, [sp, #176]
     9fc:	cbz	x25, a08 <gconv@@Base+0x110>
     a00:	ldr	x1, [x25]
     a04:	add	x26, x26, x1
     a08:	cbz	x0, b70 <gconv@@Base+0x278>
     a0c:	stp	x27, x23, [sp, #208]
     a10:	mov	x24, x23
     a14:	cmp	x19, x27
     a18:	b.eq	10d8 <gconv@@Base+0x7e0>  // b.none
     a1c:	mov	x0, x27
     a20:	add	x3, sp, #0xd0
     a24:	mov	w11, #0x4                   	// #4
     a28:	add	x5, x0, #0x4
     a2c:	cmp	x19, x5
     a30:	b.cc	c38 <gconv@@Base+0x340>  // b.lo, b.ul, b.last
     a34:	cmp	x21, x24
     a38:	b.ls	c74 <gconv@@Base+0x37c>  // b.plast
     a3c:	ldr	w2, [x0]
     a40:	cmp	w2, #0xa0
     a44:	b.ls	a70 <gconv@@Base+0x178>  // b.plast
     a48:	cmp	w2, #0xab
     a4c:	b.eq	b68 <gconv@@Base+0x270>  // b.none
     a50:	cmp	w2, #0xbb
     a54:	b.eq	c68 <gconv@@Base+0x370>  // b.none
     a58:	sub	w4, w2, #0x531
     a5c:	cmp	w4, #0x59
     a60:	b.hi	b24 <gconv@@Base+0x22c>  // b.pmore
     a64:	ldr	x0, [sp, #168]
     a68:	ldrb	w2, [x0, w4, uxtw]
     a6c:	cbz	w2, b48 <gconv@@Base+0x250>
     a70:	strb	w2, [x24]
     a74:	ldp	x0, x24, [sp, #208]
     a78:	add	x0, x0, #0x4
     a7c:	add	x24, x24, #0x1
     a80:	stp	x0, x24, [sp, #208]
     a84:	cmp	x19, x0
     a88:	b.ne	a28 <gconv@@Base+0x130>  // b.any
     a8c:	nop
     a90:	str	x0, [x28]
     a94:	ldr	x0, [sp, #112]
     a98:	cbnz	x0, bf8 <gconv@@Base+0x300>
     a9c:	ldp	w1, w0, [x20, #16]
     aa0:	add	w0, w0, #0x1
     aa4:	str	w0, [x20, #20]
     aa8:	tbnz	w1, #0, cf8 <gconv@@Base+0x400>
     aac:	cmp	x23, x24
     ab0:	b.cs	d54 <gconv@@Base+0x45c>  // b.hs, b.nlast
     ab4:	ldr	x1, [x20]
     ab8:	mov	x0, x22
     abc:	str	w11, [sp, #104]
     ac0:	str	x1, [sp, #200]
     ac4:	bl	740 <_dl_mcount_wrapper_check@plt>
     ac8:	ldp	x0, x1, [sp, #136]
     acc:	mov	x5, x25
     ad0:	ldr	w7, [sp, #132]
     ad4:	mov	x3, x24
     ad8:	add	x2, sp, #0xc8
     adc:	mov	w6, #0x0                   	// #0
     ae0:	mov	x4, #0x0                   	// #0
     ae4:	blr	x22
     ae8:	mov	w7, w0
     aec:	ldr	w11, [sp, #104]
     af0:	cmp	w0, #0x4
     af4:	b.eq	c80 <gconv@@Base+0x388>  // b.none
     af8:	ldr	x11, [sp, #200]
     afc:	cmp	x11, x24
     b00:	b.ne	e7c <gconv@@Base+0x584>  // b.any
     b04:	ldr	x0, [sp, #120]
     b08:	ldr	x0, [x0, #96]
     b0c:	cbnz	w7, 105c <gconv@@Base+0x764>
     b10:	ldr	w18, [x20, #16]
     b14:	ldr	x23, [x20]
     b18:	ldr	x27, [x28]
     b1c:	ldr	x26, [sp, #192]
     b20:	b	9fc <gconv@@Base+0x104>
     b24:	mov	w1, #0x2014                	// #8212
     b28:	cmp	w2, w1
     b2c:	b.eq	d3c <gconv@@Base+0x444>  // b.none
     b30:	mov	w1, #0x2026                	// #8230
     b34:	cmp	w2, w1
     b38:	b.eq	ca4 <gconv@@Base+0x3ac>  // b.none
     b3c:	mov	w0, #0x1c00                	// #7168
     b40:	cmp	w0, w2, lsr #7
     b44:	b.eq	f8c <gconv@@Base+0x694>  // b.none
     b48:	ldr	x0, [sp, #152]
     b4c:	cbz	x0, 1304 <gconv@@Base+0xa0c>
     b50:	ldr	w0, [x20, #16]
     b54:	tbnz	w0, #3, cb0 <gconv@@Base+0x3b8>
     b58:	ldr	x0, [sp, #208]
     b5c:	tbnz	w18, #1, f6c <gconv@@Base+0x674>
     b60:	mov	w11, #0x6                   	// #6
     b64:	b	a90 <gconv@@Base+0x198>
     b68:	mov	w2, #0xffffffa7            	// #-89
     b6c:	b	a70 <gconv@@Base+0x178>
     b70:	cmp	x19, x27
     b74:	b.eq	1278 <gconv@@Base+0x980>  // b.none
     b78:	add	x2, x23, #0x4
     b7c:	cmp	x2, x21
     b80:	b.hi	ffc <gconv@@Base+0x704>  // b.pmore
     b84:	ldr	x5, [sp, #152]
     b88:	and	w18, w18, #0x2
     b8c:	mov	x0, x27
     b90:	mov	x24, x23
     b94:	mov	w11, #0x4                   	// #4
     b98:	ldrb	w1, [x0]
     b9c:	mov	x3, x0
     ba0:	cmp	w1, #0xa0
     ba4:	b.ls	bc4 <gconv@@Base+0x2cc>  // b.plast
     ba8:	add	w4, w1, #0x5e
     bac:	and	w4, w4, #0xff
     bb0:	cmp	w4, #0x5c
     bb4:	b.hi	c44 <gconv@@Base+0x34c>  // b.pmore
     bb8:	ldr	x3, [sp, #160]
     bbc:	sub	w1, w1, #0xa2
     bc0:	ldrh	w1, [x3, w1, sxtw #1]
     bc4:	add	x0, x0, #0x1
     bc8:	str	w1, [x24]
     bcc:	mov	x3, x0
     bd0:	mov	x24, x2
     bd4:	cmp	x19, x0
     bd8:	b.eq	bec <gconv@@Base+0x2f4>  // b.none
     bdc:	add	x2, x24, #0x4
     be0:	cmp	x21, x2
     be4:	b.cs	b98 <gconv@@Base+0x2a0>  // b.hs, b.nlast
     be8:	mov	w11, #0x5                   	// #5
     bec:	str	x3, [x28]
     bf0:	ldr	x0, [sp, #112]
     bf4:	cbz	x0, a9c <gconv@@Base+0x1a4>
     bf8:	str	x24, [x0]
     bfc:	mov	w25, w11
     c00:	ldp	x23, x24, [sp, #48]
     c04:	adrp	x0, 11000 <gconv@@Base+0x10708>
     c08:	ldr	x0, [x0, #4056]
     c0c:	ldr	x1, [sp, #232]
     c10:	ldr	x0, [x0]
     c14:	eor	x0, x1, x0
     c18:	cbnz	x0, 1514 <gconv@@Base+0xc1c>
     c1c:	mov	w0, w25
     c20:	ldp	x19, x20, [sp, #16]
     c24:	ldp	x21, x22, [sp, #32]
     c28:	ldp	x25, x26, [sp, #64]
     c2c:	ldp	x27, x28, [sp, #80]
     c30:	ldp	x29, x30, [sp], #240
     c34:	ret
     c38:	mov	w11, #0x7                   	// #7
     c3c:	ldr	x0, [sp, #208]
     c40:	b	a90 <gconv@@Base+0x198>
     c44:	cbz	x5, c98 <gconv@@Base+0x3a0>
     c48:	cbz	w18, c98 <gconv@@Base+0x3a0>
     c4c:	ldr	x1, [x5]
     c50:	add	x0, x0, #0x1
     c54:	mov	x3, x0
     c58:	mov	w11, #0x6                   	// #6
     c5c:	add	x1, x1, #0x1
     c60:	str	x1, [x5]
     c64:	b	bd4 <gconv@@Base+0x2dc>
     c68:	mov	w2, #0xffffffa6            	// #-90
     c6c:	strb	w2, [x24]
     c70:	b	a74 <gconv@@Base+0x17c>
     c74:	mov	w11, #0x5                   	// #5
     c78:	ldr	x0, [sp, #208]
     c7c:	b	a90 <gconv@@Base+0x198>
     c80:	cmp	w11, #0x5
     c84:	b.eq	d48 <gconv@@Base+0x450>  // b.none
     c88:	ldr	x0, [sp, #120]
     c8c:	mov	w7, w11
     c90:	ldr	x0, [x0, #96]
     c94:	b	b0c <gconv@@Base+0x214>
     c98:	mov	w11, #0x6                   	// #6
     c9c:	str	x3, [x28]
     ca0:	b	bf0 <gconv@@Base+0x2f8>
     ca4:	mov	w0, #0xffffffae            	// #-82
     ca8:	strb	w0, [x24]
     cac:	b	a74 <gconv@@Base+0x17c>
     cb0:	ldr	x2, [x28]
     cb4:	mov	x4, x19
     cb8:	ldr	x0, [sp, #120]
     cbc:	mov	x1, x20
     cc0:	ldr	x6, [sp, #152]
     cc4:	str	x3, [sp, #104]
     cc8:	ldr	x5, [sp, #176]
     ccc:	str	w18, [sp, #188]
     cd0:	bl	700 <__gconv_transliterate@plt>
     cd4:	mov	w11, w0
     cd8:	ldr	w18, [sp, #188]
     cdc:	cmp	w0, #0x6
     ce0:	ldr	x3, [sp, #104]
     ce4:	b.eq	f98 <gconv@@Base+0x6a0>  // b.none
     ce8:	cmp	w0, #0x5
     cec:	ldp	x0, x24, [sp, #208]
     cf0:	b.ne	a84 <gconv@@Base+0x18c>  // b.any
     cf4:	b	a90 <gconv@@Base+0x198>
     cf8:	mov	x27, x25
     cfc:	mov	x12, x28
     d00:	ldr	x28, [sp, #120]
     d04:	mov	w25, w11
     d08:	ldr	x1, [x27]
     d0c:	ldr	x2, [sp, #192]
     d10:	ldr	x0, [x28, #96]
     d14:	str	x24, [x20]
     d18:	add	x1, x1, x2
     d1c:	str	x1, [x27]
     d20:	cmp	x0, #0x0
     d24:	ldr	w0, [sp, #184]
     d28:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     d2c:	ccmp	w25, #0x7, #0x0, ne  // ne = any
     d30:	b.eq	1128 <gconv@@Base+0x830>  // b.none
     d34:	ldp	x23, x24, [sp, #48]
     d38:	b	c04 <gconv@@Base+0x30c>
     d3c:	mov	w0, #0xffffffa8            	// #-88
     d40:	strb	w0, [x24]
     d44:	b	a74 <gconv@@Base+0x17c>
     d48:	ldr	x0, [sp, #120]
     d4c:	ldr	x0, [x0, #96]
     d50:	b	b10 <gconv@@Base+0x218>
     d54:	ldr	x0, [sp, #120]
     d58:	mov	w7, w11
     d5c:	ldr	x0, [x0, #96]
     d60:	b	b0c <gconv@@Base+0x214>
     d64:	ldr	x7, [x20, #32]
     d68:	ldr	w3, [x7]
     d6c:	ands	w4, w3, #0x7
     d70:	b.eq	9c8 <gconv@@Base+0xd0>  // b.none
     d74:	cbnz	x15, 1580 <gconv@@Base+0xc88>
     d78:	stp	x21, x9, [sp, #208]
     d7c:	cmp	w4, #0x4
     d80:	b.hi	1560 <gconv@@Base+0xc68>  // b.pmore
     d84:	mov	w26, w4
     d88:	cbz	w4, 128c <gconv@@Base+0x994>
     d8c:	add	x6, x7, #0x3
     d90:	add	x13, sp, #0xe0
     d94:	mov	x0, #0x1                   	// #1
     d98:	add	x1, x13, x0
     d9c:	ldrb	w5, [x6, x0]
     da0:	cmp	x0, x26
     da4:	add	x0, x0, #0x1
     da8:	sturb	w5, [x1, #-1]
     dac:	b.ne	d98 <gconv@@Base+0x4a0>  // b.any
     db0:	mov	x0, #0x4                   	// #4
     db4:	sub	x0, x0, x26
     db8:	add	x0, x21, x0
     dbc:	cmp	x19, x0
     dc0:	b.cc	12c8 <gconv@@Base+0x9d0>  // b.lo, b.ul, b.last
     dc4:	add	x0, x21, #0x1
     dc8:	add	x13, sp, #0xe0
     dcc:	cmp	x9, x23
     dd0:	b.cs	1298 <gconv@@Base+0x9a0>  // b.hs, b.nlast
     dd4:	add	x26, x26, #0x1
     dd8:	str	x0, [sp, #208]
     ddc:	add	x1, x13, x26
     de0:	cmp	x26, #0x3
     de4:	ldurb	w2, [x0, #-1]
     de8:	ccmp	x19, x0, #0x0, ls  // ls = plast
     dec:	add	x0, x0, #0x1
     df0:	sturb	w2, [x1, #-1]
     df4:	b.hi	dd4 <gconv@@Base+0x4dc>  // b.pmore
     df8:	ldr	w0, [sp, #224]
     dfc:	str	x13, [sp, #208]
     e00:	cmp	w0, #0xa0
     e04:	b.ls	106c <gconv@@Base+0x774>  // b.plast
     e08:	cmp	w0, #0xab
     e0c:	b.eq	111c <gconv@@Base+0x824>  // b.none
     e10:	cmp	w0, #0xbb
     e14:	b.eq	135c <gconv@@Base+0xa64>  // b.none
     e18:	sub	w1, w0, #0x531
     e1c:	cmp	w1, #0x59
     e20:	b.hi	1328 <gconv@@Base+0xa30>  // b.pmore
     e24:	adrp	x0, 1000 <gconv@@Base+0x708>
     e28:	add	x0, x0, #0x7c8
     e2c:	add	x0, x0, #0xc0
     e30:	ldrb	w0, [x0, w1, uxtw]
     e34:	cbnz	w0, 106c <gconv@@Base+0x774>
     e38:	ldr	x0, [sp, #152]
     e3c:	cbz	x0, e70 <gconv@@Base+0x578>
     e40:	tbnz	w18, #3, 1420 <gconv@@Base+0xb28>
     e44:	mov	x0, x13
     e48:	mov	w25, #0x6                   	// #6
     e4c:	tbz	w18, #1, d34 <gconv@@Base+0x43c>
     e50:	ldr	x2, [sp, #152]
     e54:	add	x0, x0, #0x4
     e58:	str	x0, [sp, #208]
     e5c:	ldr	x1, [x2]
     e60:	add	x1, x1, #0x1
     e64:	str	x1, [x2]
     e68:	cmp	x0, x13
     e6c:	b.ne	1088 <gconv@@Base+0x790>  // b.any
     e70:	mov	w25, #0x6                   	// #6
     e74:	ldp	x23, x24, [sp, #48]
     e78:	b	c04 <gconv@@Base+0x30c>
     e7c:	mov	x0, #0x0                   	// #0
     e80:	cbz	x25, e88 <gconv@@Base+0x590>
     e84:	ldr	x0, [x25]
     e88:	ldr	x1, [sp, #192]
     e8c:	add	x0, x0, x1
     e90:	cmp	x0, x26
     e94:	b.eq	10e4 <gconv@@Base+0x7ec>  // b.none
     e98:	ldr	x0, [sp, #120]
     e9c:	ldr	w24, [x20, #16]
     ea0:	str	x27, [x28]
     ea4:	ldr	x0, [x0, #96]
     ea8:	cbz	x0, 1180 <gconv@@Base+0x888>
     eac:	stp	x27, x23, [sp, #208]
     eb0:	cmp	x19, x27
     eb4:	b.eq	1414 <gconv@@Base+0xb1c>  // b.none
     eb8:	mov	x1, x23
     ebc:	add	x26, sp, #0xd0
     ec0:	mov	x4, #0x4                   	// #4
     ec4:	add	x2, x27, #0x4
     ec8:	cmp	x19, x2
     ecc:	b.cc	1204 <gconv@@Base+0x90c>  // b.lo, b.ul, b.last
     ed0:	cmp	x11, x1
     ed4:	b.ls	1264 <gconv@@Base+0x96c>  // b.plast
     ed8:	ldr	w0, [x27]
     edc:	cmp	w0, #0xa0
     ee0:	b.ls	fa8 <gconv@@Base+0x6b0>  // b.plast
     ee4:	cmp	w0, #0xab
     ee8:	b.eq	10cc <gconv@@Base+0x7d4>  // b.none
     eec:	cmp	w0, #0xbb
     ef0:	b.eq	1258 <gconv@@Base+0x960>  // b.none
     ef4:	sub	w5, w0, #0x531
     ef8:	cmp	w5, #0x59
     efc:	b.ls	110c <gconv@@Base+0x814>  // b.plast
     f00:	mov	w3, #0x2014                	// #8212
     f04:	cmp	w0, w3
     f08:	b.eq	fa0 <gconv@@Base+0x6a8>  // b.none
     f0c:	mov	w3, #0x2026                	// #8230
     f10:	cmp	w0, w3
     f14:	b.eq	1368 <gconv@@Base+0xa70>  // b.none
     f18:	mov	w3, #0x1c00                	// #7168
     f1c:	cmp	w3, w0, lsr #7
     f20:	b.eq	13fc <gconv@@Base+0xb04>  // b.none
     f24:	ldr	x0, [sp, #152]
     f28:	cbz	x0, 1204 <gconv@@Base+0x90c>
     f2c:	ldr	w0, [x20, #16]
     f30:	tbnz	w0, #3, 1374 <gconv@@Base+0xa7c>
     f34:	ldr	x8, [sp, #208]
     f38:	tbnz	w24, #1, 13d0 <gconv@@Base+0xad8>
     f3c:	ldr	x0, [sp, #200]
     f40:	str	x8, [x28]
     f44:	cmp	x0, x1
     f48:	b.ne	1214 <gconv@@Base+0x91c>  // b.any
     f4c:	adrp	x3, 1000 <gconv@@Base+0x708>
     f50:	adrp	x1, 1000 <gconv@@Base+0x708>
     f54:	adrp	x0, 1000 <gconv@@Base+0x708>
     f58:	add	x3, x3, #0x7c0
     f5c:	add	x1, x1, #0x640
     f60:	add	x0, x0, #0x770
     f64:	mov	w2, #0x2eb                 	// #747
     f68:	bl	750 <__assert_fail@plt>
     f6c:	ldr	x2, [sp, #152]
     f70:	add	x0, x0, #0x4
     f74:	mov	w11, #0x6                   	// #6
     f78:	str	x0, [sp, #208]
     f7c:	ldr	x1, [x2]
     f80:	add	x1, x1, #0x1
     f84:	str	x1, [x2]
     f88:	b	a84 <gconv@@Base+0x18c>
     f8c:	mov	x0, x5
     f90:	str	x5, [sp, #208]
     f94:	b	a84 <gconv@@Base+0x18c>
     f98:	ldr	x24, [sp, #216]
     f9c:	b	b58 <gconv@@Base+0x260>
     fa0:	mov	w0, #0xffffffa8            	// #-88
     fa4:	nop
     fa8:	strb	w0, [x1]
     fac:	ldp	x27, x1, [sp, #208]
     fb0:	add	x27, x27, #0x4
     fb4:	add	x1, x1, #0x1
     fb8:	stp	x27, x1, [sp, #208]
     fbc:	cmp	x19, x27
     fc0:	b.ne	ec4 <gconv@@Base+0x5cc>  // b.any
     fc4:	ldr	x11, [sp, #200]
     fc8:	str	x19, [x28]
     fcc:	cmp	x1, x11
     fd0:	b.ne	1214 <gconv@@Base+0x91c>  // b.any
     fd4:	cmp	x4, #0x5
     fd8:	b.ne	f4c <gconv@@Base+0x654>  // b.any
     fdc:	ldr	x0, [sp, #120]
     fe0:	cmp	x23, x1
     fe4:	ldr	x0, [x0, #96]
     fe8:	b.ne	b0c <gconv@@Base+0x214>  // b.any
     fec:	ldr	w1, [x20, #20]
     ff0:	sub	w1, w1, #0x1
     ff4:	str	w1, [x20, #20]
     ff8:	b	b0c <gconv@@Base+0x214>
     ffc:	mov	x3, x27
    1000:	mov	x24, x23
    1004:	mov	w11, #0x5                   	// #5
    1008:	str	x3, [x28]
    100c:	b	bf0 <gconv@@Base+0x2f8>
    1010:	cbnz	x15, 153c <gconv@@Base+0xc44>
    1014:	ldr	x0, [x20, #32]
    1018:	mov	w25, #0x0                   	// #0
    101c:	str	xzr, [x0]
    1020:	ldr	w0, [x20, #16]
    1024:	tbnz	w0, #0, c04 <gconv@@Base+0x30c>
    1028:	mov	x0, x22
    102c:	str	w6, [sp, #104]
    1030:	bl	740 <_dl_mcount_wrapper_check@plt>
    1034:	ldp	x0, x1, [sp, #136]
    1038:	mov	x5, x27
    103c:	ldr	w6, [sp, #104]
    1040:	mov	x4, #0x0                   	// #0
    1044:	ldr	w7, [sp, #132]
    1048:	mov	x3, #0x0                   	// #0
    104c:	mov	x2, #0x0                   	// #0
    1050:	blr	x22
    1054:	mov	w25, w0
    1058:	b	c04 <gconv@@Base+0x30c>
    105c:	mov	x12, x28
    1060:	mov	w25, w7
    1064:	b	d20 <gconv@@Base+0x428>
    1068:	mov	w0, #0xffffffa8            	// #-88
    106c:	strb	w0, [x9]
    1070:	ldp	x0, x1, [sp, #208]
    1074:	add	x0, x0, #0x4
    1078:	add	x1, x1, #0x1
    107c:	stp	x0, x1, [sp, #208]
    1080:	cmp	x0, x13
    1084:	b.eq	12b4 <gconv@@Base+0x9bc>  // b.none
    1088:	ldr	w3, [x7]
    108c:	sub	x13, x0, x13
    1090:	and	w4, w3, #0x7
    1094:	mov	w0, w4
    1098:	cmp	x0, x13
    109c:	b.ge	15a0 <gconv@@Base+0xca8>  // b.tcont
    10a0:	ldr	x21, [x12]
    10a4:	sub	x0, x13, x0
    10a8:	ldr	w18, [x20, #16]
    10ac:	and	w3, w3, #0xfffffff8
    10b0:	add	x21, x21, x0
    10b4:	str	x21, [x12]
    10b8:	ldr	x26, [sp, #192]
    10bc:	ldr	x0, [x28, #96]
    10c0:	ldr	x9, [sp, #216]
    10c4:	str	w3, [x7]
    10c8:	b	9c8 <gconv@@Base+0xd0>
    10cc:	mov	w0, #0xffffffa7            	// #-89
    10d0:	strb	w0, [x1]
    10d4:	b	fac <gconv@@Base+0x6b4>
    10d8:	mov	x0, x19
    10dc:	mov	w11, #0x4                   	// #4
    10e0:	b	a90 <gconv@@Base+0x198>
    10e4:	ldr	x0, [sp, #120]
    10e8:	sub	x11, x24, x11
    10ec:	ldr	x1, [x0, #96]
    10f0:	ldr	x0, [x28]
    10f4:	cbz	x1, 1310 <gconv@@Base+0xa18>
    10f8:	sub	x11, x0, x11, lsl #2
    10fc:	str	x11, [x28]
    1100:	ldr	x0, [sp, #120]
    1104:	ldr	x0, [x0, #96]
    1108:	b	b0c <gconv@@Base+0x214>
    110c:	ldr	x0, [sp, #168]
    1110:	ldrb	w0, [x0, w5, uxtw]
    1114:	cbnz	w0, fa8 <gconv@@Base+0x6b0>
    1118:	b	f24 <gconv@@Base+0x62c>
    111c:	mov	w0, #0xffffffa7            	// #-89
    1120:	strb	w0, [x9]
    1124:	b	1070 <gconv@@Base+0x778>
    1128:	ldr	x3, [x12]
    112c:	sub	x0, x19, x3
    1130:	cmp	x0, #0x3
    1134:	b.gt	151c <gconv@@Base+0xc24>
    1138:	ldr	x4, [x20, #32]
    113c:	cmp	x3, x19
    1140:	mov	x0, x3
    1144:	add	x1, x4, #0x4
    1148:	b.cs	14fc <gconv@@Base+0xc04>  // b.hs, b.nlast
    114c:	add	x0, x0, #0x1
    1150:	str	x0, [x12]
    1154:	cmp	x0, x19
    1158:	ldurb	w2, [x0, #-1]
    115c:	strb	w2, [x1], #1
    1160:	b.ne	114c <gconv@@Base+0x854>  // b.any
    1164:	sub	w0, w0, w3
    1168:	ldr	w1, [x4]
    116c:	ldp	x23, x24, [sp, #48]
    1170:	and	w1, w1, #0xfffffff8
    1174:	orr	w0, w1, w0
    1178:	str	w0, [x4]
    117c:	b	c04 <gconv@@Base+0x30c>
    1180:	cmp	x19, x27
    1184:	b.eq	1414 <gconv@@Base+0xb1c>  // b.none
    1188:	add	x2, x23, #0x4
    118c:	mov	x8, x27
    1190:	and	w24, w24, #0x2
    1194:	cmp	x11, x2
    1198:	mov	x1, x23
    119c:	mov	w5, #0x4                   	// #4
    11a0:	b.cc	13f0 <gconv@@Base+0xaf8>  // b.lo, b.ul, b.last
    11a4:	ldr	x6, [sp, #152]
    11a8:	mov	x3, x8
    11ac:	ldrb	w0, [x8]
    11b0:	cmp	w0, #0xa0
    11b4:	b.ls	11d4 <gconv@@Base+0x8dc>  // b.plast
    11b8:	add	w4, w0, #0x5e
    11bc:	and	w4, w4, #0xff
    11c0:	cmp	w4, #0x5c
    11c4:	b.hi	1234 <gconv@@Base+0x93c>  // b.pmore
    11c8:	ldr	x3, [sp, #160]
    11cc:	sub	w0, w0, #0xa2
    11d0:	ldrh	w0, [x3, w0, sxtw #1]
    11d4:	add	x8, x8, #0x1
    11d8:	str	w0, [x1]
    11dc:	mov	x3, x8
    11e0:	mov	x1, x2
    11e4:	cmp	x19, x8
    11e8:	b.eq	1408 <gconv@@Base+0xb10>  // b.none
    11ec:	add	x2, x1, #0x4
    11f0:	cmp	x11, x2
    11f4:	b.cs	11a8 <gconv@@Base+0x8b0>  // b.hs, b.nlast
    11f8:	mov	x4, #0x5                   	// #5
    11fc:	str	x3, [x28]
    1200:	b	fcc <gconv@@Base+0x6d4>
    1204:	ldp	x0, x2, [sp, #200]
    1208:	str	x2, [x28]
    120c:	cmp	x0, x1
    1210:	b.eq	f4c <gconv@@Base+0x654>  // b.none
    1214:	adrp	x3, 1000 <gconv@@Base+0x708>
    1218:	adrp	x1, 1000 <gconv@@Base+0x708>
    121c:	adrp	x0, 1000 <gconv@@Base+0x708>
    1220:	add	x3, x3, #0x7c0
    1224:	add	x1, x1, #0x640
    1228:	add	x0, x0, #0x758
    122c:	mov	w2, #0x2ea                 	// #746
    1230:	bl	750 <__assert_fail@plt>
    1234:	cbz	x6, 12a4 <gconv@@Base+0x9ac>
    1238:	cbz	w24, 12a4 <gconv@@Base+0x9ac>
    123c:	ldr	x0, [x6]
    1240:	add	x8, x8, #0x1
    1244:	mov	x3, x8
    1248:	mov	w5, #0x6                   	// #6
    124c:	add	x0, x0, #0x1
    1250:	str	x0, [x6]
    1254:	b	11e4 <gconv@@Base+0x8ec>
    1258:	mov	w0, #0xffffffa6            	// #-90
    125c:	strb	w0, [x1]
    1260:	b	fac <gconv@@Base+0x6b4>
    1264:	ldp	x0, x2, [sp, #200]
    1268:	str	x2, [x28]
    126c:	cmp	x0, x1
    1270:	b.eq	fdc <gconv@@Base+0x6e4>  // b.none
    1274:	b	1214 <gconv@@Base+0x91c>
    1278:	mov	x3, x19
    127c:	mov	x24, x23
    1280:	mov	w11, #0x4                   	// #4
    1284:	str	x3, [x28]
    1288:	b	bf0 <gconv@@Base+0x2f8>
    128c:	mov	x0, #0x4                   	// #4
    1290:	mov	x26, #0x0                   	// #0
    1294:	b	db8 <gconv@@Base+0x4c0>
    1298:	mov	w25, #0x5                   	// #5
    129c:	ldp	x23, x24, [sp, #48]
    12a0:	b	c04 <gconv@@Base+0x30c>
    12a4:	mov	x4, #0x6                   	// #6
    12a8:	str	x3, [x28]
    12ac:	b	fcc <gconv@@Base+0x6d4>
    12b0:	cbnz	w25, d34 <gconv@@Base+0x43c>
    12b4:	ldr	w18, [x20, #16]
    12b8:	ldr	x21, [x12]
    12bc:	ldr	x0, [x28, #96]
    12c0:	ldr	x26, [sp, #192]
    12c4:	b	9c8 <gconv@@Base+0xd0>
    12c8:	str	x19, [x12]
    12cc:	cmp	x21, x19
    12d0:	b.cs	12f8 <gconv@@Base+0xa00>  // b.hs, b.nlast
    12d4:	add	x21, x21, #0x1
    12d8:	add	x7, x7, x26
    12dc:	str	x21, [sp, #208]
    12e0:	cmp	x19, x21
    12e4:	add	x7, x7, #0x1
    12e8:	add	x21, x21, #0x1
    12ec:	ldurb	w0, [x21, #-2]
    12f0:	strb	w0, [x7, #3]
    12f4:	b.ne	12dc <gconv@@Base+0x9e4>  // b.any
    12f8:	mov	w25, #0x7                   	// #7
    12fc:	ldp	x23, x24, [sp, #48]
    1300:	b	c04 <gconv@@Base+0x30c>
    1304:	mov	w11, #0x6                   	// #6
    1308:	ldr	x0, [sp, #208]
    130c:	b	a90 <gconv@@Base+0x198>
    1310:	cmp	x11, #0x0
    1314:	add	x1, x11, #0x3
    1318:	csel	x11, x1, x11, lt  // lt = tstop
    131c:	sub	x0, x0, x11, asr #2
    1320:	str	x0, [x28]
    1324:	b	b04 <gconv@@Base+0x20c>
    1328:	mov	w1, #0x2014                	// #8212
    132c:	cmp	w0, w1
    1330:	b.eq	1068 <gconv@@Base+0x770>  // b.none
    1334:	mov	w1, #0x2026                	// #8230
    1338:	cmp	w0, w1
    133c:	b.eq	14f0 <gconv@@Base+0xbf8>  // b.none
    1340:	mov	w1, #0x1c00                	// #7168
    1344:	cmp	w1, w0, lsr #7
    1348:	b.ne	e38 <gconv@@Base+0x540>  // b.any
    134c:	add	x0, x13, #0x4
    1350:	mov	x13, #0x4                   	// #4
    1354:	str	x0, [sp, #208]
    1358:	b	1094 <gconv@@Base+0x79c>
    135c:	mov	w0, #0xffffffa6            	// #-90
    1360:	strb	w0, [x9]
    1364:	b	1070 <gconv@@Base+0x778>
    1368:	mov	w0, #0xffffffae            	// #-82
    136c:	strb	w0, [x1]
    1370:	b	fac <gconv@@Base+0x6b4>
    1374:	ldr	x2, [x28]
    1378:	mov	x4, x19
    137c:	ldr	x0, [sp, #120]
    1380:	mov	x3, x26
    1384:	ldr	x6, [sp, #152]
    1388:	mov	x1, x20
    138c:	ldr	x5, [sp, #176]
    1390:	str	x11, [sp, #104]
    1394:	str	w7, [sp, #188]
    1398:	bl	700 <__gconv_transliterate@plt>
    139c:	sxtw	x4, w0
    13a0:	ldr	w7, [sp, #188]
    13a4:	cmp	w4, #0x6
    13a8:	ldr	x11, [sp, #104]
    13ac:	b.eq	1504 <gconv@@Base+0xc0c>  // b.none
    13b0:	cmp	w4, #0x5
    13b4:	ldp	x27, x1, [sp, #208]
    13b8:	b.ne	fbc <gconv@@Base+0x6c4>  // b.any
    13bc:	ldr	x0, [sp, #200]
    13c0:	str	x27, [x28]
    13c4:	cmp	x1, x0
    13c8:	b.eq	fdc <gconv@@Base+0x6e4>  // b.none
    13cc:	b	1214 <gconv@@Base+0x91c>
    13d0:	ldr	x2, [sp, #152]
    13d4:	add	x27, x8, #0x4
    13d8:	mov	x4, #0x6                   	// #6
    13dc:	str	x27, [sp, #208]
    13e0:	ldr	x0, [x2]
    13e4:	add	x0, x0, #0x1
    13e8:	str	x0, [x2]
    13ec:	b	fbc <gconv@@Base+0x6c4>
    13f0:	cmp	x11, x23
    13f4:	b.eq	fec <gconv@@Base+0x6f4>  // b.none
    13f8:	b	1214 <gconv@@Base+0x91c>
    13fc:	mov	x27, x2
    1400:	str	x2, [sp, #208]
    1404:	b	fbc <gconv@@Base+0x6c4>
    1408:	sxtw	x4, w5
    140c:	str	x3, [x28]
    1410:	b	fcc <gconv@@Base+0x6d4>
    1414:	cmp	x11, x23
    1418:	b.eq	f4c <gconv@@Base+0x654>  // b.none
    141c:	b	1214 <gconv@@Base+0x91c>
    1420:	add	x24, x13, x26
    1424:	mov	x6, x0
    1428:	mov	x2, x21
    142c:	mov	x4, x24
    1430:	add	x5, sp, #0xd8
    1434:	add	x3, sp, #0xd0
    1438:	mov	x1, x20
    143c:	mov	x0, x28
    1440:	stp	x13, x7, [sp, #104]
    1444:	str	x9, [sp, #120]
    1448:	str	w18, [sp, #160]
    144c:	stp	x12, x15, [sp, #168]
    1450:	bl	700 <__gconv_transliterate@plt>
    1454:	ldr	w18, [sp, #160]
    1458:	mov	w25, w0
    145c:	cmp	w0, #0x6
    1460:	ldp	x13, x7, [sp, #104]
    1464:	ldp	x12, x15, [sp, #168]
    1468:	ldr	x0, [sp, #208]
    146c:	b.eq	150c <gconv@@Base+0xc14>  // b.none
    1470:	cmp	x0, x13
    1474:	ldr	x9, [sp, #120]
    1478:	b.ne	1088 <gconv@@Base+0x790>  // b.any
    147c:	cmp	w25, #0x7
    1480:	b.ne	12b0 <gconv@@Base+0x9b8>  // b.any
    1484:	add	x0, x13, #0x4
    1488:	cmp	x24, x0
    148c:	b.eq	1600 <gconv@@Base+0xd08>  // b.none
    1490:	ldr	w0, [x7]
    1494:	ldr	x1, [x12]
    1498:	and	x2, x0, #0x7
    149c:	sub	x2, x26, x2
    14a0:	and	w0, w0, #0xfffffff8
    14a4:	add	x1, x1, x2
    14a8:	str	x1, [x12]
    14ac:	cmp	x26, w0, sxtw
    14b0:	b.le	15e0 <gconv@@Base+0xce8>
    14b4:	cmp	x26, #0x4
    14b8:	b.hi	15c0 <gconv@@Base+0xcc8>  // b.pmore
    14bc:	orr	w0, w0, w26
    14c0:	str	w0, [x7]
    14c4:	cmp	x24, x13
    14c8:	b.ls	12f8 <gconv@@Base+0xa00>  // b.plast
    14cc:	add	x13, x13, #0x1
    14d0:	add	x7, x7, #0x4
    14d4:	str	x13, [sp, #208]
    14d8:	cmp	x24, x13
    14dc:	add	x13, x13, #0x1
    14e0:	ldurb	w0, [x13, #-2]
    14e4:	strb	w0, [x7], #1
    14e8:	b.ne	14d4 <gconv@@Base+0xbdc>  // b.any
    14ec:	b	12f8 <gconv@@Base+0xa00>
    14f0:	mov	w0, #0xffffffae            	// #-82
    14f4:	strb	w0, [x9]
    14f8:	b	1070 <gconv@@Base+0x778>
    14fc:	mov	w0, #0x0                   	// #0
    1500:	b	1168 <gconv@@Base+0x870>
    1504:	ldr	x1, [sp, #216]
    1508:	b	f34 <gconv@@Base+0x63c>
    150c:	tbz	w18, #1, e68 <gconv@@Base+0x570>
    1510:	b	e50 <gconv@@Base+0x558>
    1514:	stp	x23, x24, [sp, #48]
    1518:	bl	710 <__stack_chk_fail@plt>
    151c:	adrp	x3, 1000 <gconv@@Base+0x708>
    1520:	adrp	x1, 1000 <gconv@@Base+0x708>
    1524:	adrp	x0, 1000 <gconv@@Base+0x708>
    1528:	add	x3, x3, #0x7c0
    152c:	add	x1, x1, #0x640
    1530:	add	x0, x0, #0x790
    1534:	mov	w2, #0x31e                 	// #798
    1538:	bl	750 <__assert_fail@plt>
    153c:	adrp	x3, 1000 <gconv@@Base+0x708>
    1540:	adrp	x1, 1000 <gconv@@Base+0x708>
    1544:	adrp	x0, 1000 <gconv@@Base+0x708>
    1548:	add	x3, x3, #0x7c0
    154c:	add	x1, x1, #0x640
    1550:	add	x0, x0, #0x658
    1554:	mov	w2, #0x1a4                 	// #420
    1558:	stp	x23, x24, [sp, #48]
    155c:	bl	750 <__assert_fail@plt>
    1560:	adrp	x3, 1000 <gconv@@Base+0x708>
    1564:	adrp	x1, 1000 <gconv@@Base+0x708>
    1568:	adrp	x0, 1000 <gconv@@Base+0x708>
    156c:	add	x3, x3, #0x7a8
    1570:	add	x1, x1, #0x670
    1574:	add	x0, x0, #0x680
    1578:	mov	w2, #0x18b                 	// #395
    157c:	bl	750 <__assert_fail@plt>
    1580:	adrp	x3, 1000 <gconv@@Base+0x708>
    1584:	adrp	x1, 1000 <gconv@@Base+0x708>
    1588:	adrp	x0, 1000 <gconv@@Base+0x708>
    158c:	add	x3, x3, #0x7c0
    1590:	add	x1, x1, #0x640
    1594:	add	x0, x0, #0x658
    1598:	mov	w2, #0x234                 	// #564
    159c:	bl	750 <__assert_fail@plt>
    15a0:	adrp	x3, 1000 <gconv@@Base+0x708>
    15a4:	adrp	x1, 1000 <gconv@@Base+0x708>
    15a8:	adrp	x0, 1000 <gconv@@Base+0x708>
    15ac:	add	x3, x3, #0x7a8
    15b0:	add	x1, x1, #0x670
    15b4:	add	x0, x0, #0x6b0
    15b8:	mov	w2, #0x1c9                 	// #457
    15bc:	bl	750 <__assert_fail@plt>
    15c0:	adrp	x3, 1000 <gconv@@Base+0x708>
    15c4:	adrp	x1, 1000 <gconv@@Base+0x708>
    15c8:	adrp	x0, 1000 <gconv@@Base+0x708>
    15cc:	add	x3, x3, #0x7a8
    15d0:	add	x1, x1, #0x670
    15d4:	add	x0, x0, #0x728
    15d8:	mov	w2, #0x1e6                 	// #486
    15dc:	bl	750 <__assert_fail@plt>
    15e0:	adrp	x3, 1000 <gconv@@Base+0x708>
    15e4:	adrp	x1, 1000 <gconv@@Base+0x708>
    15e8:	adrp	x0, 1000 <gconv@@Base+0x708>
    15ec:	add	x3, x3, #0x7a8
    15f0:	add	x1, x1, #0x670
    15f4:	add	x0, x0, #0x700
    15f8:	mov	w2, #0x1e5                 	// #485
    15fc:	bl	750 <__assert_fail@plt>
    1600:	adrp	x3, 1000 <gconv@@Base+0x708>
    1604:	adrp	x1, 1000 <gconv@@Base+0x708>
    1608:	adrp	x0, 1000 <gconv@@Base+0x708>
    160c:	add	x3, x3, #0x7a8
    1610:	add	x1, x1, #0x670
    1614:	add	x0, x0, #0x6d8
    1618:	mov	w2, #0x1db                 	// #475
    161c:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001620 <.fini>:
    1620:	stp	x29, x30, [sp, #-16]!
    1624:	mov	x29, sp
    1628:	ldp	x29, x30, [sp], #16
    162c:	ret
