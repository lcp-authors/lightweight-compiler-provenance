
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lvm.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x14f0>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	mov	x0, x1
      14:	ldr	x2, [x19]
      18:	ldrb	w5, [x1]
      1c:	cbz	w5, 74 <grub_mod_init-0x147c>
      20:	add	x8, x1, #0x1
      24:	ldrb	w1, [x2]
      28:	cbz	w1, ac <grub_mod_init-0x1444>
      2c:	add	x4, x2, #0x1
      30:	b	3c <grub_mod_init-0x14b4>
      34:	ldrb	w1, [x4], #1
      38:	cbz	w1, ac <grub_mod_init-0x1444>
      3c:	sub	x2, x4, #0x1
      40:	cmp	w5, w1
      44:	b.ne	34 <grub_mod_init-0x14bc>  // b.any
      48:	mov	x7, x4
      4c:	ldrb	w3, [x0, #1]
      50:	cbz	w3, 74 <grub_mod_init-0x147c>
      54:	mov	x1, #0x0                   	// #0
      58:	ldrb	w6, [x7, x1]
      5c:	cbz	w6, ac <grub_mod_init-0x1444>
      60:	cmp	w6, w3
      64:	b.ne	34 <grub_mod_init-0x14bc>  // b.any
      68:	add	x1, x1, #0x1
      6c:	ldrb	w3, [x8, x1]
      70:	cbnz	w3, 58 <grub_mod_init-0x1498>
      74:	str	x2, [x19]
      78:	cbz	x2, a4 <grub_mod_init-0x144c>
      7c:	bl	0 <grub_strlen>
      80:	ldr	x1, [x19]
      84:	add	x0, x1, x0
      88:	str	x0, [x19]
      8c:	mov	w2, #0xa                   	// #10
      90:	mov	x1, x19
      94:	bl	0 <grub_strtoull>
      98:	ldr	x19, [sp, #16]
      9c:	ldp	x29, x30, [sp], #32
      a0:	ret
      a4:	mov	x0, #0x0                   	// #0
      a8:	b	98 <grub_mod_init-0x1458>
      ac:	str	xzr, [x19]
      b0:	mov	x0, #0x0                   	// #0
      b4:	b	98 <grub_mod_init-0x1458>
      b8:	stp	x29, x30, [sp, #-80]!
      bc:	mov	x29, sp
      c0:	stp	x19, x20, [sp, #16]
      c4:	stp	x21, x22, [sp, #32]
      c8:	stp	x23, x24, [sp, #48]
      cc:	stp	x25, x26, [sp, #64]
      d0:	mov	x20, x0
      d4:	mov	x21, x1
      d8:	mov	x23, x2
      dc:	mov	x0, x1
      e0:	bl	0 <grub_strlen>
      e4:	mov	x24, x0
      e8:	mov	x0, x23
      ec:	bl	0 <grub_strlen>
      f0:	mov	x22, x0
      f4:	add	x19, x21, #0x1
      f8:	adrp	x26, 0 <grub_mod_init-0x14f0>
      fc:	mov	x25, #0x4                   	// #4
     100:	ldrb	w2, [x21]
     104:	cbz	w2, 154 <grub_mod_init-0x139c>
     108:	ldrb	w0, [x20]
     10c:	cbnz	w0, 120 <grub_mod_init-0x13d0>
     110:	mov	w21, #0x0                   	// #0
     114:	b	1ec <grub_mod_init-0x1304>
     118:	ldrb	w0, [x20, #1]!
     11c:	cbz	w0, 208 <grub_mod_init-0x12e8>
     120:	cmp	w2, w0
     124:	b.ne	118 <grub_mod_init-0x13d8>  // b.any
     128:	add	x1, x20, #0x1
     12c:	ldrb	w4, [x21, #1]
     130:	cbz	w4, 154 <grub_mod_init-0x139c>
     134:	mov	x3, #0x0                   	// #0
     138:	ldrb	w0, [x1, x3]
     13c:	cbz	w0, 1e8 <grub_mod_init-0x1308>
     140:	cmp	w0, w4
     144:	b.ne	118 <grub_mod_init-0x13d8>  // b.any
     148:	add	x3, x3, #0x1
     14c:	ldrb	w4, [x19, x3]
     150:	cbnz	w4, 138 <grub_mod_init-0x13b8>
     154:	cbz	x20, 210 <grub_mod_init-0x12e0>
     158:	add	x20, x20, x24
     15c:	mov	x2, x25
     160:	ldr	x1, [x26]
     164:	mov	x0, x20
     168:	bl	0 <grub_memcmp>
     16c:	cbnz	w0, 100 <grub_mod_init-0x13f0>
     170:	add	x20, x20, #0x4
     174:	b	17c <grub_mod_init-0x1374>
     178:	add	x20, x20, #0x1
     17c:	ldrb	w0, [x20]
     180:	bl	0 <grub_isspace>
     184:	mov	w21, w0
     188:	cbnz	w0, 178 <grub_mod_init-0x1378>
     18c:	ldrb	w0, [x20]
     190:	cmp	w0, #0x22
     194:	b.ne	1ec <grub_mod_init-0x1304>  // b.any
     198:	add	x19, x20, #0x1
     19c:	mov	x2, x22
     1a0:	mov	x1, x23
     1a4:	mov	x0, x19
     1a8:	bl	0 <grub_memcmp>
     1ac:	cbnz	w0, 1bc <grub_mod_init-0x1334>
     1b0:	ldrb	w0, [x19, x22]
     1b4:	cmp	w0, #0x22
     1b8:	b.eq	218 <grub_mod_init-0x12d8>  // b.none
     1bc:	ldrb	w0, [x20, #1]
     1c0:	cmp	w0, #0x22
     1c4:	b.eq	1d4 <grub_mod_init-0x131c>  // b.none
     1c8:	ldrb	w1, [x19, #1]!
     1cc:	cmp	w1, #0x22
     1d0:	b.ne	1c8 <grub_mod_init-0x1328>  // b.any
     1d4:	ldrb	w0, [x19, #1]
     1d8:	cmp	w0, #0x5d
     1dc:	b.eq	1ec <grub_mod_init-0x1304>  // b.none
     1e0:	add	x20, x19, #0x2
     1e4:	b	17c <grub_mod_init-0x1374>
     1e8:	mov	w21, #0x0                   	// #0
     1ec:	mov	w0, w21
     1f0:	ldp	x19, x20, [sp, #16]
     1f4:	ldp	x21, x22, [sp, #32]
     1f8:	ldp	x23, x24, [sp, #48]
     1fc:	ldp	x25, x26, [sp, #64]
     200:	ldp	x29, x30, [sp], #80
     204:	ret
     208:	mov	w21, #0x0                   	// #0
     20c:	b	1ec <grub_mod_init-0x1304>
     210:	mov	w21, #0x0                   	// #0
     214:	b	1ec <grub_mod_init-0x1304>
     218:	mov	w21, #0x1                   	// #1
     21c:	b	1ec <grub_mod_init-0x1304>
	...
     228:	sub	sp, sp, #0x300
     22c:	stp	x29, x30, [sp]
     230:	mov	x29, sp
     234:	stp	x19, x20, [sp, #16]
     238:	stp	x21, x22, [sp, #32]
     23c:	stp	x23, x24, [sp, #48]
     240:	stp	x25, x26, [sp, #64]
     244:	mov	x20, x0
     248:	str	x1, [sp, #96]
     24c:	str	x2, [sp, #104]
     250:	mov	x21, #0x0                   	// #0
     254:	mov	x24, #0x200                 	// #512
     258:	adrp	x25, 0 <grub_mod_init-0x14f0>
     25c:	mov	x23, #0x8                   	// #8
     260:	add	x26, sp, #0x118
     264:	b	278 <grub_mod_init-0x1278>
     268:	add	w22, w22, #0x1
     26c:	add	x21, x21, #0x1
     270:	cmp	x21, #0x4
     274:	b.eq	2c8 <grub_mod_init-0x1228>  // b.none
     278:	mov	w22, w21
     27c:	add	x4, sp, #0x100
     280:	mov	x3, x24
     284:	mov	x2, #0x0                   	// #0
     288:	mov	x1, x21
     28c:	mov	x0, x20
     290:	bl	0 <grub_disk_read>
     294:	mov	w19, w0
     298:	cbnz	w0, 1340 <grub_mod_init-0x1b0>
     29c:	mov	x2, x23
     2a0:	ldr	x1, [x25]
     2a4:	add	x0, sp, #0x100
     2a8:	bl	0 <grub_strncmp>
     2ac:	cbnz	w0, 268 <grub_mod_init-0x1288>
     2b0:	mov	x2, x23
     2b4:	adrp	x0, 0 <grub_mod_init-0x14f0>
     2b8:	ldr	x1, [x0]
     2bc:	mov	x0, x26
     2c0:	bl	0 <grub_strncmp>
     2c4:	cbnz	w0, 268 <grub_mod_init-0x1288>
     2c8:	cmp	w22, #0x4
     2cc:	b.eq	1348 <grub_mod_init-0x1a8>  // b.none
     2d0:	ldr	w0, [sp, #276]
     2d4:	add	x1, sp, #0x100
     2d8:	add	x0, x1, x0
     2dc:	mov	x1, #0x0                   	// #0
     2e0:	add	x4, sp, #0xb0
     2e4:	mov	w5, #0x2d                  	// #45
     2e8:	b	308 <grub_mod_init-0x11e8>
     2ec:	add	w19, w19, #0x2
     2f0:	strb	w5, [x4, w3, uxtw]
     2f4:	b	2fc <grub_mod_init-0x11f4>
     2f8:	mov	w19, w3
     2fc:	add	x1, x1, #0x1
     300:	cmp	x1, #0x20
     304:	b.eq	334 <grub_mod_init-0x11bc>  // b.none
     308:	add	w3, w19, #0x1
     30c:	ldrb	w2, [x0, x1]
     310:	strb	w2, [x4, w19, uxtw]
     314:	cmp	w1, #0x1
     318:	ccmp	w1, #0x1d, #0x4, ne  // ne = any
     31c:	b.eq	2f8 <grub_mod_init-0x11f8>  // b.none
     320:	and	w2, w1, #0x3
     324:	cmp	w2, #0x1
     328:	b.eq	2ec <grub_mod_init-0x1204>  // b.none
     32c:	mov	w19, w3
     330:	b	2fc <grub_mod_init-0x11f4>
     334:	add	x1, sp, #0xb0
     338:	strb	wzr, [x1, w19, uxtw]
     33c:	ldr	x19, [x0, #56]
     340:	cbnz	x19, 3f8 <grub_mod_init-0x10f8>
     344:	ldr	x21, [x0, #72]
     348:	ldr	x23, [x0, #80]
     34c:	lsl	x0, x23, #1
     350:	bl	0 <grub_malloc>
     354:	mov	x22, x0
     358:	cbz	x0, 42c <grub_mod_init-0x10c4>
     35c:	mov	x4, x0
     360:	mov	x3, x23
     364:	mov	x2, x21
     368:	mov	x1, #0x0                   	// #0
     36c:	mov	x0, x20
     370:	bl	0 <grub_disk_read>
     374:	mov	w25, w0
     378:	cbnz	w0, 420 <grub_mod_init-0x10d0>
     37c:	mov	x2, #0x10                  	// #16
     380:	adrp	x0, 0 <grub_mod_init-0x14f0>
     384:	ldr	x1, [x0]
     388:	add	x0, x22, #0x4
     38c:	bl	0 <grub_strncmp>
     390:	cbnz	w0, 410 <grub_mod_init-0x10e0>
     394:	ldr	w0, [x22, #20]
     398:	cmp	w0, #0x1
     39c:	b.ne	410 <grub_mod_init-0x10e0>  // b.any
     3a0:	ldr	x0, [x22, #40]
     3a4:	ldr	x1, [x22, #48]
     3a8:	add	x0, x0, x1
     3ac:	ldr	x2, [x22, #32]
     3b0:	cmp	x0, x2
     3b4:	b.hi	44c <grub_mod_init-0x10a4>  // b.pmore
     3b8:	ldr	x0, [x22, #40]
     3bc:	add	x20, x22, x0
     3c0:	str	x20, [sp, #168]
     3c4:	ldrb	w0, [x22, x0]
     3c8:	cmp	w0, #0x20
     3cc:	b.eq	460 <grub_mod_init-0x1090>  // b.none
     3d0:	add	x1, x22, x23
     3d4:	cmp	x20, x1
     3d8:	b.cs	4b0 <grub_mod_init-0x1040>  // b.hs, b.nlast
     3dc:	mov	x21, x20
     3e0:	ldrb	w0, [x21, #1]!
     3e4:	cmp	w0, #0x20
     3e8:	b.eq	464 <grub_mod_init-0x108c>  // b.none
     3ec:	cmp	x21, x1
     3f0:	b.ne	3e0 <grub_mod_init-0x1110>  // b.any
     3f4:	b	420 <grub_mod_init-0x10d0>
     3f8:	adrp	x0, 0 <grub_mod_init-0x14f0>
     3fc:	ldr	x1, [x0]
     400:	mov	w0, #0x18                  	// #24
     404:	bl	0 <grub_error>
     408:	mov	x22, #0x0                   	// #0
     40c:	b	42c <grub_mod_init-0x10c4>
     410:	adrp	x0, 0 <grub_mod_init-0x14f0>
     414:	ldr	x1, [x0]
     418:	mov	w0, #0x18                  	// #24
     41c:	bl	0 <grub_error>
     420:	mov	x0, x22
     424:	bl	0 <grub_free>
     428:	mov	x22, #0x0                   	// #0
     42c:	mov	x0, x22
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x21, x22, [sp, #32]
     438:	ldp	x23, x24, [sp, #48]
     43c:	ldp	x25, x26, [sp, #64]
     440:	ldp	x29, x30, [sp]
     444:	add	sp, sp, #0x300
     448:	ret
     44c:	sub	x2, x0, x2
     450:	add	x1, x22, #0x200
     454:	add	x0, x22, x23
     458:	bl	0 <grub_memmove>
     45c:	b	3b8 <grub_mod_init-0x1138>
     460:	mov	x21, x20
     464:	add	x23, x22, x23
     468:	cmp	x21, x23
     46c:	b.eq	420 <grub_mod_init-0x10d0>  // b.none
     470:	sub	x20, x21, x20
     474:	add	x0, x20, #0x1
     478:	bl	0 <grub_malloc>
     47c:	mov	x26, x0
     480:	cbz	x0, 420 <grub_mod_init-0x10d0>
     484:	mov	x2, x20
     488:	ldr	x1, [sp, #168]
     48c:	bl	0 <grub_memmove>
     490:	add	x0, x26, x20
     494:	str	x0, [sp, #112]
     498:	strb	wzr, [x26, x20]
     49c:	ldrb	w0, [x21]
     4a0:	cbz	w0, 13ec <grub_mod_init-0x104>
     4a4:	mov	w5, #0x64                  	// #100
     4a8:	adrp	x4, 0 <grub_mod_init-0x14f0>
     4ac:	b	4c0 <grub_mod_init-0x1030>
     4b0:	mov	x21, x20
     4b4:	b	464 <grub_mod_init-0x108c>
     4b8:	ldrb	w0, [x21, #1]!
     4bc:	cbz	w0, 13ec <grub_mod_init-0x104>
     4c0:	cmp	w0, #0x69
     4c4:	b.ne	4b8 <grub_mod_init-0x1038>  // b.any
     4c8:	add	x3, x21, #0x1
     4cc:	mov	x0, x19
     4d0:	mov	w2, w5
     4d4:	ldrb	w1, [x3, x0]
     4d8:	cbz	w1, 13ec <grub_mod_init-0x104>
     4dc:	cmp	w1, w2
     4e0:	b.ne	4b8 <grub_mod_init-0x1038>  // b.any
     4e4:	add	x0, x0, #0x1
     4e8:	ldr	x1, [x4]
     4ec:	ldrb	w2, [x0, x1]
     4f0:	cbnz	w2, 4d4 <grub_mod_init-0x101c>
     4f4:	cbz	x21, 570 <grub_mod_init-0xf80>
     4f8:	add	x1, x21, #0x6
     4fc:	str	x1, [sp, #168]
     500:	mov	x2, #0x26                  	// #38
     504:	add	x0, sp, #0xd8
     508:	bl	0 <grub_memmove>
     50c:	strb	wzr, [sp, #254]
     510:	add	x1, sp, #0xd8
     514:	mov	x0, #0x26                  	// #38
     518:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     51c:	mov	x24, x0
     520:	cbz	x0, 578 <grub_mod_init-0xf78>
     524:	mov	x0, x26
     528:	bl	0 <grub_free>
     52c:	mov	x0, #0x26                  	// #38
     530:	bl	0 <grub_malloc>
     534:	ldr	x19, [sp, #96]
     538:	str	x0, [x19]
     53c:	cbz	x0, 7a0 <grub_mod_init-0xd50>
     540:	mov	x2, #0x26                  	// #38
     544:	add	x1, sp, #0xb0
     548:	bl	0 <grub_memmove>
     54c:	mov	x0, #0x26                  	// #38
     550:	str	x0, [x19, #8]
     554:	mov	x0, x22
     558:	bl	0 <grub_free>
     55c:	mov	x0, #0xffffffffffffffff    	// #-1
     560:	ldr	x1, [sp, #104]
     564:	str	x0, [x1]
     568:	mov	x22, x24
     56c:	b	42c <grub_mod_init-0x10c4>
     570:	str	x21, [sp, #168]
     574:	b	7a8 <grub_mod_init-0xd48>
     578:	mov	x0, #0x38                  	// #56
     57c:	bl	0 <grub_malloc>
     580:	mov	x24, x0
     584:	cbz	x0, 7a8 <grub_mod_init-0xd48>
     588:	str	x26, [x0, #16]
     58c:	mov	x0, #0x26                  	// #38
     590:	bl	0 <grub_malloc>
     594:	str	x0, [x24]
     598:	cbz	x0, 7a8 <grub_mod_init-0xd48>
     59c:	mov	x2, #0x26                  	// #38
     5a0:	add	x1, sp, #0xd8
     5a4:	bl	0 <grub_memmove>
     5a8:	mov	x0, #0x26                  	// #38
     5ac:	str	x0, [x24, #8]
     5b0:	adrp	x0, 0 <grub_mod_init-0x14f0>
     5b4:	ldr	x1, [x0]
     5b8:	add	x0, sp, #0xa8
     5bc:	bl	0 <grub_mod_init-0x14f0>
     5c0:	str	x0, [x24, #24]
     5c4:	ldr	x3, [sp, #168]
     5c8:	cbz	x3, 7a0 <grub_mod_init-0xd50>
     5cc:	str	xzr, [x24, #40]
     5d0:	str	xzr, [x24, #32]
     5d4:	ldrb	w0, [x3]
     5d8:	cbz	w0, 13d0 <grub_mod_init-0x120>
     5dc:	mov	w6, #0x68                  	// #104
     5e0:	adrp	x4, 0 <grub_mod_init-0x14f0>
     5e4:	b	5f0 <grub_mod_init-0xf00>
     5e8:	ldrb	w0, [x3, #1]!
     5ec:	cbz	w0, 13d0 <grub_mod_init-0x120>
     5f0:	cmp	w0, #0x70
     5f4:	b.ne	5e8 <grub_mod_init-0xf08>  // b.any
     5f8:	add	x5, x3, #0x1
     5fc:	mov	x0, x19
     600:	mov	w1, w6
     604:	ldrb	w2, [x5, x0]
     608:	cbz	w2, 13d0 <grub_mod_init-0x120>
     60c:	cmp	w2, w1
     610:	b.ne	5e8 <grub_mod_init-0xf08>  // b.any
     614:	add	x0, x0, #0x1
     618:	ldr	x1, [x4]
     61c:	ldrb	w1, [x0, x1]
     620:	cbnz	w1, 604 <grub_mod_init-0xeec>
     624:	stp	x27, x28, [sp, #80]
     628:	cbz	x3, 7bc <grub_mod_init-0xd34>
     62c:	add	x3, x3, #0x12
     630:	str	x3, [sp, #168]
     634:	adrp	x23, 0 <grub_mod_init-0x14f0>
     638:	mov	w28, #0x64                  	// #100
     63c:	b	64c <grub_mod_init-0xea4>
     640:	ldr	x0, [sp, #168]
     644:	add	x0, x0, #0x1
     648:	str	x0, [sp, #168]
     64c:	ldr	x0, [sp, #168]
     650:	ldrb	w0, [x0]
     654:	bl	0 <grub_isspace>
     658:	cbnz	w0, 640 <grub_mod_init-0xeb0>
     65c:	ldr	x0, [sp, #168]
     660:	ldrb	w1, [x0]
     664:	cmp	w1, #0x7d
     668:	b.eq	7c8 <grub_mod_init-0xd28>  // b.none
     66c:	mov	x0, #0x48                  	// #72
     670:	bl	0 <grub_zalloc>
     674:	mov	x21, x0
     678:	ldr	x1, [sp, #168]
     67c:	ldrb	w0, [x1]
     680:	cmp	w0, #0x20
     684:	b.eq	6d0 <grub_mod_init-0xe20>  // b.none
     688:	mov	x27, x1
     68c:	ldrb	w0, [x27, #1]!
     690:	cmp	w0, #0x20
     694:	b.ne	68c <grub_mod_init-0xe64>  // b.any
     698:	sub	x27, x27, x1
     69c:	add	x0, x27, #0x1
     6a0:	bl	0 <grub_malloc>
     6a4:	str	x0, [x21, #16]
     6a8:	mov	x2, x27
     6ac:	ldr	x1, [sp, #168]
     6b0:	bl	0 <grub_memmove>
     6b4:	ldr	x0, [x21, #16]
     6b8:	strb	wzr, [x0, x27]
     6bc:	ldr	x3, [sp, #168]
     6c0:	ldrb	w0, [x3]
     6c4:	cbnz	w0, 6e0 <grub_mod_init-0xe10>
     6c8:	str	xzr, [sp, #168]
     6cc:	b	78c <grub_mod_init-0xd64>
     6d0:	mov	x27, x1
     6d4:	b	698 <grub_mod_init-0xe58>
     6d8:	ldrb	w0, [x3, #1]!
     6dc:	cbz	w0, 6c8 <grub_mod_init-0xe28>
     6e0:	cmp	w0, #0x69
     6e4:	b.ne	6d8 <grub_mod_init-0xe18>  // b.any
     6e8:	add	x4, x3, #0x1
     6ec:	mov	x0, x19
     6f0:	mov	w2, w28
     6f4:	ldrb	w1, [x4, x0]
     6f8:	cbz	w1, 6c8 <grub_mod_init-0xe28>
     6fc:	cmp	w1, w2
     700:	b.ne	6d8 <grub_mod_init-0xe18>  // b.any
     704:	add	x0, x0, #0x1
     708:	ldr	x1, [x23]
     70c:	ldrb	w2, [x0, x1]
     710:	cbnz	w2, 6f4 <grub_mod_init-0xdfc>
     714:	cbz	x3, 7b4 <grub_mod_init-0xd3c>
     718:	add	x3, x3, #0x6
     71c:	str	x3, [sp, #168]
     720:	mov	x0, #0x26                  	// #38
     724:	bl	0 <grub_malloc>
     728:	str	x0, [x21]
     72c:	cbz	x0, 78c <grub_mod_init-0xd64>
     730:	mov	x2, #0x26                  	// #38
     734:	ldr	x1, [sp, #168]
     738:	bl	0 <grub_memmove>
     73c:	mov	x0, #0x26                  	// #38
     740:	str	x0, [x21, #8]
     744:	adrp	x0, 0 <grub_mod_init-0x14f0>
     748:	ldr	x1, [x0]
     74c:	add	x0, sp, #0xa8
     750:	bl	0 <grub_mod_init-0x14f0>
     754:	str	x0, [x21, #48]
     758:	ldr	x0, [sp, #168]
     75c:	cbz	x0, 78c <grub_mod_init-0xd64>
     760:	mov	w1, #0x7d                  	// #125
     764:	bl	0 <grub_strchr>
     768:	cbz	x0, 788 <grub_mod_init-0xd68>
     76c:	add	x0, x0, #0x1
     770:	str	x0, [sp, #168]
     774:	str	xzr, [x21, #24]
     778:	ldr	x0, [x24, #32]
     77c:	str	x0, [x21, #56]
     780:	str	x21, [x24, #32]
     784:	b	64c <grub_mod_init-0xea4>
     788:	str	xzr, [sp, #168]
     78c:	ldr	x0, [x21, #16]
     790:	bl	0 <grub_free>
     794:	mov	x0, x21
     798:	bl	0 <grub_free>
     79c:	ldp	x27, x28, [sp, #80]
     7a0:	mov	x0, x24
     7a4:	bl	0 <grub_free>
     7a8:	mov	x0, x26
     7ac:	bl	0 <grub_free>
     7b0:	b	420 <grub_mod_init-0x10d0>
     7b4:	str	xzr, [sp, #168]
     7b8:	b	78c <grub_mod_init-0xd64>
     7bc:	str	x3, [sp, #168]
     7c0:	ldp	x27, x28, [sp, #80]
     7c4:	b	13d4 <grub_mod_init-0x11c>
     7c8:	ldp	x27, x28, [sp, #80]
     7cc:	b	13e0 <grub_mod_init-0x110>
     7d0:	ldrb	w1, [x0, #1]!
     7d4:	cbz	w1, 13bc <grub_mod_init-0x134>
     7d8:	cmp	w1, #0x6c
     7dc:	b.ne	7d0 <grub_mod_init-0xd20>  // b.any
     7e0:	add	x6, x0, #0x1
     7e4:	mov	x1, x19
     7e8:	mov	w2, w5
     7ec:	ldrb	w3, [x6, x1]
     7f0:	cbz	w3, 13bc <grub_mod_init-0x134>
     7f4:	cmp	w3, w2
     7f8:	b.ne	7d0 <grub_mod_init-0xd20>  // b.any
     7fc:	add	x1, x1, #0x1
     800:	ldr	x2, [x4]
     804:	ldrb	w2, [x1, x2]
     808:	cbnz	w2, 7ec <grub_mod_init-0xd04>
     80c:	stp	x27, x28, [sp, #80]
     810:	cbz	x0, 11c4 <grub_mod_init-0x32c>
     814:	add	x0, x0, #0x11
     818:	str	x0, [sp, #168]
     81c:	add	x20, x20, #0x3
     820:	lsl	x0, x20, #1
     824:	str	x0, [sp, #152]
     828:	adrp	x27, 0 <grub_mod_init-0x14f0>
     82c:	b	83c <grub_mod_init-0xcb4>
     830:	ldr	x0, [sp, #168]
     834:	add	x0, x0, #0x1
     838:	str	x0, [sp, #168]
     83c:	ldr	x0, [sp, #168]
     840:	ldrb	w0, [x0]
     844:	bl	0 <grub_isspace>
     848:	str	w0, [sp, #120]
     84c:	cbnz	w0, 830 <grub_mod_init-0xcc0>
     850:	ldr	x0, [sp, #168]
     854:	ldrb	w0, [x0]
     858:	cmp	w0, #0x7d
     85c:	b.eq	11d0 <grub_mod_init-0x320>  // b.none
     860:	mov	x0, #0x60                  	// #96
     864:	bl	0 <grub_zalloc>
     868:	mov	x21, x0
     86c:	ldr	x0, [sp, #168]
     870:	ldrb	w1, [x0]
     874:	cmp	w1, #0x20
     878:	b.eq	8e8 <grub_mod_init-0xc08>  // b.none
     87c:	mov	x20, x0
     880:	ldrb	w1, [x20, #1]!
     884:	cmp	w1, #0x20
     888:	b.ne	880 <grub_mod_init-0xc70>  // b.any
     88c:	sub	x23, x20, x0
     890:	mov	x28, x23
     894:	mov	x1, x23
     898:	bl	0 <grub_strndup>
     89c:	str	x0, [x21, #16]
     8a0:	cbz	x0, 1178 <grub_mod_init-0x378>
     8a4:	ldr	x0, [sp, #152]
     8a8:	add	x0, x0, x23, lsl #1
     8ac:	bl	0 <grub_malloc>
     8b0:	str	x0, [x21]
     8b4:	cbz	x0, 1178 <grub_mod_init-0x378>
     8b8:	mov	x2, #0x4                   	// #4
     8bc:	adrp	x1, 0 <grub_mod_init-0x14f0>
     8c0:	ldr	x1, [x1]
     8c4:	bl	0 <grub_memmove>
     8c8:	ldr	x0, [x21]
     8cc:	add	x0, x0, #0x4
     8d0:	ldr	x1, [sp, #112]
     8d4:	cmp	x1, x26
     8d8:	b.ls	920 <grub_mod_init-0xbd0>  // b.plast
     8dc:	mov	x1, x26
     8e0:	mov	w3, #0x2d                  	// #45
     8e4:	b	908 <grub_mod_init-0xbe8>
     8e8:	mov	x20, x0
     8ec:	b	88c <grub_mod_init-0xc64>
     8f0:	strb	w3, [x0, #1]
     8f4:	add	x0, x0, #0x2
     8f8:	add	x1, x1, #0x1
     8fc:	ldr	x2, [sp, #112]
     900:	cmp	x2, x1
     904:	b.eq	920 <grub_mod_init-0xbd0>  // b.none
     908:	ldrb	w2, [x1]
     90c:	strb	w2, [x0]
     910:	cmp	w2, #0x2d
     914:	b.eq	8f0 <grub_mod_init-0xc00>  // b.none
     918:	add	x0, x0, #0x1
     91c:	b	8f8 <grub_mod_init-0xbf8>
     920:	mov	w1, #0x2d                  	// #45
     924:	strb	w1, [x0], #1
     928:	ldr	x1, [sp, #168]
     92c:	add	x23, x1, x23
     930:	cmp	x1, x23
     934:	b.cs	974 <grub_mod_init-0xb7c>  // b.hs, b.nlast
     938:	mov	w3, #0x2d                  	// #45
     93c:	b	95c <grub_mod_init-0xb94>
     940:	strb	w3, [x0, #1]
     944:	add	x0, x0, #0x2
     948:	add	x1, x1, #0x1
     94c:	ldr	x2, [sp, #168]
     950:	add	x2, x2, x28
     954:	cmp	x1, x2
     958:	b.cs	974 <grub_mod_init-0xb7c>  // b.hs, b.nlast
     95c:	ldrb	w2, [x1]
     960:	strb	w2, [x0]
     964:	cmp	w2, #0x2d
     968:	b.eq	940 <grub_mod_init-0xbb0>  // b.none
     96c:	add	x0, x0, #0x1
     970:	b	948 <grub_mod_init-0xba8>
     974:	strb	wzr, [x0]
     978:	mov	x0, #0x54                  	// #84
     97c:	bl	0 <grub_malloc>
     980:	str	x0, [x21, #8]
     984:	cbz	x0, 1178 <grub_mod_init-0x378>
     988:	mov	x2, #0x6                   	// #6
     98c:	adrp	x1, 0 <grub_mod_init-0x14f0>
     990:	ldr	x1, [x1]
     994:	bl	0 <grub_memmove>
     998:	ldr	x0, [x21, #8]
     99c:	mov	x2, #0x26                  	// #38
     9a0:	add	x1, sp, #0xd8
     9a4:	add	x0, x0, #0x6
     9a8:	bl	0 <grub_memmove>
     9ac:	ldr	x0, [x21, #8]
     9b0:	mov	w1, #0x2f                  	// #47
     9b4:	strb	w1, [x0, #44]
     9b8:	ldrb	w0, [x20]
     9bc:	str	w0, [sp, #124]
     9c0:	cbz	w0, 13b4 <grub_mod_init-0x13c>
     9c4:	mov	w4, #0x64                  	// #100
     9c8:	adrp	x3, 0 <grub_mod_init-0x14f0>
     9cc:	b	9dc <grub_mod_init-0xb14>
     9d0:	ldrb	w0, [x20, #1]!
     9d4:	str	w0, [sp, #124]
     9d8:	cbz	w0, 13b4 <grub_mod_init-0x13c>
     9dc:	ldr	w0, [sp, #124]
     9e0:	cmp	w0, #0x69
     9e4:	b.ne	9d0 <grub_mod_init-0xb20>  // b.any
     9e8:	add	x5, x20, #0x1
     9ec:	mov	x0, x19
     9f0:	mov	w1, w4
     9f4:	ldrb	w2, [x5, x0]
     9f8:	cbz	w2, 13b4 <grub_mod_init-0x13c>
     9fc:	cmp	w2, w1
     a00:	b.ne	9d0 <grub_mod_init-0xb20>  // b.any
     a04:	add	x0, x0, #0x1
     a08:	ldr	x1, [x3]
     a0c:	ldrb	w1, [x0, x1]
     a10:	cbnz	w1, 9f4 <grub_mod_init-0xafc>
     a14:	cbz	x20, ab8 <grub_mod_init-0xa38>
     a18:	add	x1, x20, #0x6
     a1c:	str	x1, [sp, #168]
     a20:	ldr	x0, [x21, #8]
     a24:	mov	x2, #0x26                  	// #38
     a28:	add	x0, x0, #0x2d
     a2c:	bl	0 <grub_memmove>
     a30:	ldr	x0, [x21, #8]
     a34:	strb	wzr, [x0, #83]
     a38:	str	xzr, [x21, #40]
     a3c:	adrp	x0, 0 <grub_mod_init-0x14f0>
     a40:	ldr	x20, [x0]
     a44:	adrp	x0, 0 <grub_mod_init-0x14f0>
     a48:	ldr	x2, [x0]
     a4c:	mov	x1, x20
     a50:	ldr	x0, [sp, #168]
     a54:	bl	b8 <grub_mod_init-0x1438>
     a58:	str	w0, [x21, #56]
     a5c:	adrp	x0, 0 <grub_mod_init-0x14f0>
     a60:	ldr	x2, [x0]
     a64:	mov	x1, x20
     a68:	ldr	x0, [sp, #168]
     a6c:	bl	b8 <grub_mod_init-0x1438>
     a70:	str	w0, [sp, #148]
     a74:	adrp	x0, 0 <grub_mod_init-0x14f0>
     a78:	ldr	x1, [x0]
     a7c:	add	x0, sp, #0xa8
     a80:	bl	0 <grub_mod_init-0x14f0>
     a84:	str	w0, [x21, #28]
     a88:	ldr	x1, [sp, #168]
     a8c:	cbz	x1, 1178 <grub_mod_init-0x378>
     a90:	ubfiz	x1, x0, #3, #32
     a94:	sub	x0, x1, w0, uxtw
     a98:	lsl	x0, x0, #3
     a9c:	bl	0 <grub_zalloc>
     aa0:	mov	x20, x0
     aa4:	str	x0, [x21, #64]
     aa8:	ldr	w0, [x21, #28]
     aac:	cbz	w0, 1170 <grub_mod_init-0x380>
     ab0:	str	w25, [sp, #144]
     ab4:	b	1100 <grub_mod_init-0x3f0>
     ab8:	str	xzr, [sp, #168]
     abc:	b	1178 <grub_mod_init-0x378>
     ac0:	ldrb	w0, [x3, #1]!
     ac4:	cbz	w0, 110c <grub_mod_init-0x3e4>
     ac8:	cmp	w0, #0x73
     acc:	b.ne	ac0 <grub_mod_init-0xa30>  // b.any
     ad0:	add	x4, x3, #0x1
     ad4:	mov	x0, x19
     ad8:	mov	w2, #0x65                  	// #101
     adc:	ldrb	w1, [x4, x0]
     ae0:	cbz	w1, 110c <grub_mod_init-0x3e4>
     ae4:	cmp	w1, w2
     ae8:	b.ne	ac0 <grub_mod_init-0xa30>  // b.any
     aec:	add	x0, x0, #0x1
     af0:	ldr	x1, [x27]
     af4:	ldrb	w2, [x0, x1]
     af8:	cbnz	w2, adc <grub_mod_init-0xa14>
     afc:	str	x3, [sp, #168]
     b00:	cbz	x3, 1308 <grub_mod_init-0x1e8>
     b04:	adrp	x0, 0 <grub_mod_init-0x14f0>
     b08:	ldr	x1, [x0]
     b0c:	add	x0, sp, #0xa8
     b10:	bl	0 <grub_mod_init-0x14f0>
     b14:	str	x0, [x20]
     b18:	ldr	x0, [sp, #168]
     b1c:	cbz	x0, 1310 <grub_mod_init-0x1e0>
     b20:	adrp	x0, 0 <grub_mod_init-0x14f0>
     b24:	ldr	x1, [x0]
     b28:	add	x0, sp, #0xa8
     b2c:	bl	0 <grub_mod_init-0x14f0>
     b30:	mov	x4, x0
     b34:	str	x0, [x20, #8]
     b38:	ldr	x3, [sp, #168]
     b3c:	cbz	x3, 1318 <grub_mod_init-0x1d8>
     b40:	ldrb	w23, [x3]
     b44:	cbz	w23, 13a8 <grub_mod_init-0x148>
     b48:	mov	w7, #0x79                  	// #121
     b4c:	adrp	x5, 0 <grub_mod_init-0x14f0>
     b50:	b	b5c <grub_mod_init-0x994>
     b54:	ldrb	w23, [x3, #1]!
     b58:	cbz	w23, 13a8 <grub_mod_init-0x148>
     b5c:	cmp	w23, #0x74
     b60:	b.ne	b54 <grub_mod_init-0x99c>  // b.any
     b64:	add	x6, x3, #0x1
     b68:	mov	x0, x19
     b6c:	mov	w1, w7
     b70:	ldrb	w2, [x6, x0]
     b74:	cbz	w2, 13a8 <grub_mod_init-0x148>
     b78:	cmp	w2, w1
     b7c:	b.ne	b54 <grub_mod_init-0x99c>  // b.any
     b80:	add	x0, x0, #0x1
     b84:	ldr	x1, [x5]
     b88:	ldrb	w1, [x0, x1]
     b8c:	cbnz	w1, b70 <grub_mod_init-0x980>
     b90:	cbz	x3, c44 <grub_mod_init-0x8ac>
     b94:	add	x0, x3, #0x8
     b98:	str	x0, [sp, #168]
     b9c:	ldr	x2, [x24, #24]
     ba0:	ldr	x1, [x21, #40]
     ba4:	madd	x4, x4, x2, x1
     ba8:	str	x4, [x21, #40]
     bac:	mov	x2, #0x8                   	// #8
     bb0:	adrp	x1, 0 <grub_mod_init-0x14f0>
     bb4:	ldr	x1, [x1]
     bb8:	bl	0 <grub_memcmp>
     bbc:	cbz	w0, c50 <grub_mod_init-0x8a0>
     bc0:	mov	x2, #0x7                   	// #7
     bc4:	adrp	x0, 0 <grub_mod_init-0x14f0>
     bc8:	ldr	x1, [x0]
     bcc:	ldr	x0, [sp, #168]
     bd0:	bl	0 <grub_memcmp>
     bd4:	cbz	w0, dd4 <grub_mod_init-0x71c>
     bd8:	mov	x2, #0x4                   	// #4
     bdc:	adrp	x0, 0 <grub_mod_init-0x14f0>
     be0:	ldr	x1, [x0]
     be4:	ldr	x0, [sp, #168]
     be8:	bl	0 <grub_memcmp>
     bec:	cbnz	w0, 1168 <grub_mod_init-0x388>
     bf0:	ldr	x0, [sp, #168]
     bf4:	ldrb	w1, [x0, #4]
     bf8:	sub	w2, w1, #0x34
     bfc:	and	w2, w2, #0xff
     c00:	cmp	w1, #0x31
     c04:	ccmp	w2, #0x2, #0x0, ne  // ne = any
     c08:	b.hi	1350 <grub_mod_init-0x1a0>  // b.pmore
     c0c:	ldrb	w2, [x0, #5]
     c10:	cmp	w2, #0x22
     c14:	b.ne	1350 <grub_mod_init-0x1a0>  // b.any
     c18:	cmp	w1, #0x35
     c1c:	b.eq	fb8 <grub_mod_init-0x538>  // b.none
     c20:	b.hi	f28 <grub_mod_init-0x5c8>  // b.pmore
     c24:	cmp	w1, #0x31
     c28:	b.eq	f44 <grub_mod_init-0x5ac>  // b.none
     c2c:	cmp	w1, #0x34
     c30:	b.ne	f4c <grub_mod_init-0x5a4>  // b.any
     c34:	mov	w0, #0x4                   	// #4
     c38:	str	w0, [x20, #16]
     c3c:	str	wzr, [x20, #20]
     c40:	b	f4c <grub_mod_init-0x5a4>
     c44:	str	xzr, [sp, #168]
     c48:	ldp	x27, x28, [sp, #80]
     c4c:	b	7a0 <grub_mod_init-0xd50>
     c50:	str	wzr, [x20, #16]
     c54:	adrp	x0, 0 <grub_mod_init-0x14f0>
     c58:	ldr	x1, [x0]
     c5c:	add	x0, sp, #0xa8
     c60:	bl	0 <grub_mod_init-0x14f0>
     c64:	str	w0, [x20, #32]
     c68:	ldr	x1, [sp, #168]
     c6c:	cbz	x1, 1320 <grub_mod_init-0x1d0>
     c70:	cmp	w0, #0x1
     c74:	b.ne	ca0 <grub_mod_init-0x850>  // b.any
     c78:	ldr	w0, [x20, #32]
     c7c:	lsl	x0, x0, #5
     c80:	bl	0 <grub_zalloc>
     c84:	mov	x28, x0
     c88:	str	x0, [x20, #40]
     c8c:	ldr	x0, [sp, #168]
     c90:	ldrb	w1, [x0]
     c94:	cbz	w1, 137c <grub_mod_init-0x174>
     c98:	adrp	x4, 0 <grub_mod_init-0x14f0>
     c9c:	b	cc0 <grub_mod_init-0x830>
     ca0:	adrp	x0, 0 <grub_mod_init-0x14f0>
     ca4:	ldr	x1, [x0]
     ca8:	add	x0, sp, #0xa8
     cac:	bl	0 <grub_mod_init-0x14f0>
     cb0:	str	w0, [x20, #48]
     cb4:	b	c78 <grub_mod_init-0x878>
     cb8:	ldrb	w1, [x0, #1]!
     cbc:	cbz	w1, 137c <grub_mod_init-0x174>
     cc0:	cmp	w1, #0x73
     cc4:	b.ne	cb8 <grub_mod_init-0x838>  // b.any
     cc8:	add	x5, x0, #0x1
     ccc:	mov	x1, x19
     cd0:	mov	w2, w23
     cd4:	ldrb	w3, [x5, x1]
     cd8:	cbz	w3, 137c <grub_mod_init-0x174>
     cdc:	cmp	w3, w2
     ce0:	b.ne	cb8 <grub_mod_init-0x838>  // b.any
     ce4:	add	x1, x1, #0x1
     ce8:	ldr	x2, [x4]
     cec:	ldrb	w2, [x1, x2]
     cf0:	cbnz	w2, cd4 <grub_mod_init-0x81c>
     cf4:	cbz	x0, 1160 <grub_mod_init-0x390>
     cf8:	add	x0, x0, #0xb
     cfc:	str	x0, [sp, #168]
     d00:	ldr	w0, [x20, #32]
     d04:	cbz	w0, 10e0 <grub_mod_init-0x410>
     d08:	str	w25, [sp, #136]
     d0c:	mov	w1, #0x22                  	// #34
     d10:	ldr	x0, [sp, #168]
     d14:	bl	0 <grub_strchr>
     d18:	cbz	x0, dc4 <grub_mod_init-0x72c>
     d1c:	add	x1, x0, #0x1
     d20:	str	x1, [sp, #168]
     d24:	ldrb	w0, [x0, #1]
     d28:	cmp	w0, #0x22
     d2c:	b.eq	dcc <grub_mod_init-0x724>  // b.none
     d30:	mov	x23, x1
     d34:	ldrb	w0, [x23, #1]!
     d38:	cmp	w0, #0x22
     d3c:	b.ne	d34 <grub_mod_init-0x7bc>  // b.any
     d40:	sub	x0, x23, x1
     d44:	str	x0, [sp, #128]
     d48:	add	x0, x0, #0x1
     d4c:	bl	0 <grub_malloc>
     d50:	str	x0, [x28, #8]
     d54:	cbz	x0, 1398 <grub_mod_init-0x158>
     d58:	ldr	x2, [sp, #128]
     d5c:	ldr	x1, [sp, #168]
     d60:	bl	0 <grub_memmove>
     d64:	ldr	x0, [x28, #8]
     d68:	ldr	x1, [sp, #128]
     d6c:	strb	wzr, [x0, x1]
     d70:	add	x23, x23, #0x1
     d74:	str	x23, [sp, #168]
     d78:	adrp	x0, 0 <grub_mod_init-0x14f0>
     d7c:	ldr	x1, [x0]
     d80:	add	x0, sp, #0xa8
     d84:	bl	0 <grub_mod_init-0x14f0>
     d88:	ldr	x1, [x24, #24]
     d8c:	mul	x1, x1, x0
     d90:	str	x1, [x28]
     d94:	add	x0, x28, #0x20
     d98:	ldr	x1, [sp, #168]
     d9c:	cmp	x1, #0x0
     da0:	csel	x28, x0, x28, ne  // ne = any
     da4:	ldr	w0, [sp, #136]
     da8:	add	w0, w0, #0x1
     dac:	mov	w1, w0
     db0:	str	w0, [sp, #136]
     db4:	ldr	w0, [x20, #32]
     db8:	cmp	w0, w1
     dbc:	b.hi	d0c <grub_mod_init-0x7e4>  // b.pmore
     dc0:	b	10e0 <grub_mod_init-0x410>
     dc4:	str	xzr, [sp, #168]
     dc8:	b	da4 <grub_mod_init-0x74c>
     dcc:	mov	x23, x1
     dd0:	b	d40 <grub_mod_init-0x7b0>
     dd4:	mov	w0, #0x1                   	// #1
     dd8:	str	w0, [x20, #16]
     ddc:	adrp	x0, 0 <grub_mod_init-0x14f0>
     de0:	ldr	x1, [x0]
     de4:	add	x0, sp, #0xa8
     de8:	bl	0 <grub_mod_init-0x14f0>
     dec:	str	w0, [x20, #32]
     df0:	ldr	x1, [sp, #168]
     df4:	cbz	x1, 1328 <grub_mod_init-0x1c8>
     df8:	ubfiz	x0, x0, #5, #32
     dfc:	bl	0 <grub_zalloc>
     e00:	str	x0, [x20, #40]
     e04:	ldr	x0, [sp, #168]
     e08:	ldrb	w1, [x0]
     e0c:	cbz	w1, 1384 <grub_mod_init-0x16c>
     e10:	ldr	w5, [sp, #124]
     e14:	adrp	x4, 0 <grub_mod_init-0x14f0>
     e18:	b	e24 <grub_mod_init-0x6cc>
     e1c:	ldrb	w1, [x0, #1]!
     e20:	cbz	w1, 1384 <grub_mod_init-0x16c>
     e24:	cmp	w1, #0x6d
     e28:	b.ne	e1c <grub_mod_init-0x6d4>  // b.any
     e2c:	add	x6, x0, #0x1
     e30:	mov	x1, x19
     e34:	mov	w2, w5
     e38:	ldrb	w3, [x6, x1]
     e3c:	cbz	w3, 1384 <grub_mod_init-0x16c>
     e40:	cmp	w3, w2
     e44:	b.ne	e1c <grub_mod_init-0x6d4>  // b.any
     e48:	add	x1, x1, #0x1
     e4c:	ldr	x2, [x4]
     e50:	ldrb	w2, [x1, x2]
     e54:	cbnz	w2, e38 <grub_mod_init-0x6b8>
     e58:	cbz	x0, f10 <grub_mod_init-0x5e0>
     e5c:	add	x0, x0, #0xb
     e60:	str	x0, [sp, #168]
     e64:	ldr	w0, [x20, #32]
     e68:	cbz	w0, efc <grub_mod_init-0x5f4>
     e6c:	mov	w28, w25
     e70:	mov	w1, #0x22                  	// #34
     e74:	ldr	x0, [sp, #168]
     e78:	bl	0 <grub_strchr>
     e7c:	cbz	x0, f18 <grub_mod_init-0x5d8>
     e80:	add	x1, x0, #0x1
     e84:	str	x1, [sp, #168]
     e88:	ldrb	w0, [x0, #1]
     e8c:	cmp	w0, #0x22
     e90:	b.eq	f20 <grub_mod_init-0x5d0>  // b.none
     e94:	mov	x23, x1
     e98:	ldrb	w0, [x23, #1]!
     e9c:	cmp	w0, #0x22
     ea0:	b.ne	e98 <grub_mod_init-0x658>  // b.any
     ea4:	sub	x0, x23, x1
     ea8:	str	x0, [sp, #128]
     eac:	add	x0, x0, #0x1
     eb0:	bl	0 <grub_malloc>
     eb4:	cbz	x0, 1398 <grub_mod_init-0x158>
     eb8:	ldr	x2, [sp, #128]
     ebc:	ldr	x1, [sp, #168]
     ec0:	str	x0, [sp, #136]
     ec4:	bl	0 <grub_memmove>
     ec8:	ldr	x3, [sp, #136]
     ecc:	ldr	x0, [sp, #128]
     ed0:	strb	wzr, [x3, x0]
     ed4:	ldr	x0, [x20, #40]
     ed8:	ubfiz	x1, x28, #5, #32
     edc:	add	x0, x0, x1
     ee0:	str	x3, [x0, #8]
     ee4:	add	x23, x23, #0x1
     ee8:	str	x23, [sp, #168]
     eec:	add	w28, w28, #0x1
     ef0:	ldr	w0, [x20, #32]
     ef4:	cmp	w0, w28
     ef8:	b.hi	e70 <grub_mod_init-0x680>  // b.pmore
     efc:	ldr	w0, [sp, #148]
     f00:	cbz	w0, 10e0 <grub_mod_init-0x410>
     f04:	mov	w0, #0x1                   	// #1
     f08:	str	w0, [x20, #32]
     f0c:	b	10e0 <grub_mod_init-0x410>
     f10:	str	xzr, [sp, #168]
     f14:	b	1398 <grub_mod_init-0x158>
     f18:	str	xzr, [sp, #168]
     f1c:	b	eec <grub_mod_init-0x604>
     f20:	mov	x23, x1
     f24:	b	ea4 <grub_mod_init-0x64c>
     f28:	cmp	w1, #0x36
     f2c:	b.ne	f4c <grub_mod_init-0x5a4>  // b.any
     f30:	mov	w0, #0x6                   	// #6
     f34:	str	w0, [x20, #16]
     f38:	mov	w0, #0x5                   	// #5
     f3c:	str	w0, [x20, #20]
     f40:	b	f4c <grub_mod_init-0x5a4>
     f44:	mov	w0, #0x1                   	// #1
     f48:	str	w0, [x20, #16]
     f4c:	adrp	x0, 0 <grub_mod_init-0x14f0>
     f50:	ldr	x1, [x0]
     f54:	add	x0, sp, #0xa8
     f58:	bl	0 <grub_mod_init-0x14f0>
     f5c:	str	w0, [x20, #32]
     f60:	ldr	x0, [sp, #168]
     f64:	cbz	x0, 1330 <grub_mod_init-0x1c0>
     f68:	ldr	w0, [x20, #16]
     f6c:	cmp	w0, #0x1
     f70:	b.eq	f90 <grub_mod_init-0x560>  // b.none
     f74:	adrp	x0, 0 <grub_mod_init-0x14f0>
     f78:	ldr	x1, [x0]
     f7c:	add	x0, sp, #0xa8
     f80:	bl	0 <grub_mod_init-0x14f0>
     f84:	str	w0, [x20, #48]
     f88:	ldr	x0, [sp, #168]
     f8c:	cbz	x0, 1338 <grub_mod_init-0x1b8>
     f90:	ldr	w0, [x20, #32]
     f94:	lsl	x0, x0, #5
     f98:	bl	0 <grub_zalloc>
     f9c:	str	x0, [x20, #40]
     fa0:	ldr	x1, [sp, #168]
     fa4:	ldrb	w0, [x1]
     fa8:	cbz	w0, 1394 <grub_mod_init-0x15c>
     fac:	mov	w6, #0x61                  	// #97
     fb0:	adrp	x5, 0 <grub_mod_init-0x14f0>
     fb4:	b	fd4 <grub_mod_init-0x51c>
     fb8:	mov	w0, #0x5                   	// #5
     fbc:	str	w0, [x20, #16]
     fc0:	mov	w0, #0x2                   	// #2
     fc4:	str	w0, [x20, #20]
     fc8:	b	f4c <grub_mod_init-0x5a4>
     fcc:	ldrb	w0, [x1, #1]!
     fd0:	cbz	w0, 1394 <grub_mod_init-0x15c>
     fd4:	cmp	w0, #0x72
     fd8:	b.ne	fcc <grub_mod_init-0x524>  // b.any
     fdc:	add	x4, x1, #0x1
     fe0:	mov	x0, x19
     fe4:	mov	w3, w6
     fe8:	ldrb	w2, [x4, x0]
     fec:	cbz	w2, 1394 <grub_mod_init-0x15c>
     ff0:	cmp	w2, w3
     ff4:	b.ne	fcc <grub_mod_init-0x524>  // b.any
     ff8:	add	x0, x0, #0x1
     ffc:	ldr	x2, [x5]
    1000:	ldrb	w3, [x0, x2]
    1004:	cbnz	w3, fe8 <grub_mod_init-0x508>
    1008:	cbz	x1, 1118 <grub_mod_init-0x3d8>
    100c:	add	x1, x1, #0x9
    1010:	str	x1, [sp, #168]
    1014:	ldr	w1, [x20, #32]
    1018:	cbz	w1, 10d4 <grub_mod_init-0x41c>
    101c:	mov	w28, w25
    1020:	mov	w1, #0x22                  	// #34
    1024:	ldr	x0, [sp, #168]
    1028:	bl	0 <grub_strchr>
    102c:	str	x0, [sp, #168]
    1030:	cbz	x0, 138c <grub_mod_init-0x164>
    1034:	mov	w1, #0x22                  	// #34
    1038:	add	x0, x0, #0x1
    103c:	bl	0 <grub_strchr>
    1040:	str	x0, [sp, #168]
    1044:	cbz	x0, 138c <grub_mod_init-0x164>
    1048:	mov	w1, #0x22                  	// #34
    104c:	add	x0, x0, #0x1
    1050:	bl	0 <grub_strchr>
    1054:	cbz	x0, 1120 <grub_mod_init-0x3d0>
    1058:	add	x1, x0, #0x1
    105c:	str	x1, [sp, #168]
    1060:	ldrb	w0, [x0, #1]
    1064:	cmp	w0, #0x22
    1068:	b.eq	1128 <grub_mod_init-0x3c8>  // b.none
    106c:	mov	x23, x1
    1070:	ldrb	w0, [x23, #1]!
    1074:	cmp	w0, #0x22
    1078:	b.ne	1070 <grub_mod_init-0x480>  // b.any
    107c:	sub	x0, x23, x1
    1080:	str	x0, [sp, #128]
    1084:	add	x0, x0, #0x1
    1088:	bl	0 <grub_malloc>
    108c:	cbz	x0, 1398 <grub_mod_init-0x158>
    1090:	ldr	x2, [sp, #128]
    1094:	ldr	x1, [sp, #168]
    1098:	str	x0, [sp, #136]
    109c:	bl	0 <grub_memmove>
    10a0:	ldr	x3, [sp, #136]
    10a4:	ldr	x0, [sp, #128]
    10a8:	strb	wzr, [x3, x0]
    10ac:	ldr	x0, [x20, #40]
    10b0:	ubfiz	x1, x28, #5, #32
    10b4:	add	x0, x0, x1
    10b8:	str	x3, [x0, #8]
    10bc:	add	x23, x23, #0x1
    10c0:	str	x23, [sp, #168]
    10c4:	add	w28, w28, #0x1
    10c8:	ldr	w1, [x20, #32]
    10cc:	cmp	w1, w28
    10d0:	b.hi	1020 <grub_mod_init-0x4d0>  // b.pmore
    10d4:	ldr	w0, [x20, #16]
    10d8:	cmp	w0, #0x4
    10dc:	b.eq	1130 <grub_mod_init-0x3c0>  // b.none
    10e0:	add	x20, x20, #0x38
    10e4:	ldr	w0, [sp, #144]
    10e8:	add	w0, w0, #0x1
    10ec:	mov	w1, w0
    10f0:	str	w0, [sp, #144]
    10f4:	ldr	w0, [x21, #28]
    10f8:	cmp	w0, w1
    10fc:	b.ls	1170 <grub_mod_init-0x380>  // b.plast
    1100:	ldr	x3, [sp, #168]
    1104:	ldrb	w0, [x3]
    1108:	cbnz	w0, ac8 <grub_mod_init-0xa28>
    110c:	str	xzr, [sp, #168]
    1110:	ldp	x27, x28, [sp, #80]
    1114:	b	7a0 <grub_mod_init-0xd50>
    1118:	str	xzr, [sp, #168]
    111c:	b	1398 <grub_mod_init-0x158>
    1120:	str	xzr, [sp, #168]
    1124:	b	10c4 <grub_mod_init-0x42c>
    1128:	mov	x23, x1
    112c:	b	107c <grub_mod_init-0x474>
    1130:	ldr	x0, [x20, #40]
    1134:	ldr	x23, [x0, #8]
    1138:	sub	w1, w1, #0x1
    113c:	lsl	x2, x1, #5
    1140:	add	x1, x0, #0x20
    1144:	bl	0 <grub_memmove>
    1148:	ldr	w0, [x20, #32]
    114c:	sub	w0, w0, #0x1
    1150:	ldr	x1, [x20, #40]
    1154:	add	x0, x1, x0, lsl #5
    1158:	str	x23, [x0, #8]
    115c:	b	10e0 <grub_mod_init-0x410>
    1160:	str	xzr, [sp, #168]
    1164:	b	1398 <grub_mod_init-0x158>
    1168:	mov	w0, #0x1                   	// #1
    116c:	str	w0, [sp, #120]
    1170:	ldr	x0, [sp, #168]
    1174:	cbnz	x0, 1190 <grub_mod_init-0x360>
    1178:	ldr	x0, [x21, #16]
    117c:	bl	0 <grub_free>
    1180:	mov	x0, x21
    1184:	bl	0 <grub_free>
    1188:	ldp	x27, x28, [sp, #80]
    118c:	b	7a0 <grub_mod_init-0xd50>
    1190:	mov	w1, #0x7d                  	// #125
    1194:	bl	0 <grub_strchr>
    1198:	str	x0, [sp, #168]
    119c:	cbz	x0, 1178 <grub_mod_init-0x378>
    11a0:	add	x0, x0, #0x3
    11a4:	str	x0, [sp, #168]
    11a8:	ldr	w0, [sp, #120]
    11ac:	cbnz	w0, 1368 <grub_mod_init-0x188>
    11b0:	str	x24, [x21, #72]
    11b4:	ldr	x0, [x24, #40]
    11b8:	str	x0, [x21, #80]
    11bc:	str	x21, [x24, #40]
    11c0:	b	83c <grub_mod_init-0xcb4>
    11c4:	str	x0, [sp, #168]
    11c8:	ldp	x27, x28, [sp, #80]
    11cc:	b	13c0 <grub_mod_init-0x130>
    11d0:	ldp	x27, x28, [sp, #80]
    11d4:	b	13c0 <grub_mod_init-0x130>
    11d8:	ldr	x0, [x20, #64]
    11dc:	add	x0, x0, x21
    11e0:	ldr	x0, [x0, #40]
    11e4:	add	x28, x0, x28
    11e8:	str	x19, [x28, #16]
    11ec:	ubfiz	x28, x23, #5, #32
    11f0:	ldr	x0, [x20, #64]
    11f4:	add	x0, x0, x21
    11f8:	ldr	x0, [x0, #40]
    11fc:	add	x0, x0, x28
    1200:	ldr	x0, [x0, #16]
    1204:	cbz	x0, 1258 <grub_mod_init-0x298>
    1208:	add	w23, w23, #0x1
    120c:	ldr	x0, [x20, #64]
    1210:	add	x0, x0, x21
    1214:	ldr	w0, [x0, #32]
    1218:	cmp	w0, w23
    121c:	b.ls	12a4 <grub_mod_init-0x24c>  // b.plast
    1220:	ldr	x19, [x24, #32]
    1224:	cbz	x19, 11ec <grub_mod_init-0x304>
    1228:	ubfiz	x28, x23, #5, #32
    122c:	ldr	x0, [x20, #64]
    1230:	add	x0, x0, x21
    1234:	ldr	x0, [x0, #40]
    1238:	add	x0, x0, x28
    123c:	ldr	x1, [x0, #8]
    1240:	ldr	x0, [x19, #16]
    1244:	bl	0 <grub_strcmp>
    1248:	cbz	w0, 11d8 <grub_mod_init-0x318>
    124c:	ldr	x19, [x19, #56]
    1250:	cbnz	x19, 122c <grub_mod_init-0x2c4>
    1254:	b	11ec <grub_mod_init-0x304>
    1258:	ldr	x19, [x24, #40]
    125c:	cbnz	x19, 126c <grub_mod_init-0x284>
    1260:	b	1208 <grub_mod_init-0x2e8>
    1264:	ldr	x19, [x19, #80]
    1268:	cbz	x19, 1208 <grub_mod_init-0x2e8>
    126c:	ldr	x0, [x20, #64]
    1270:	add	x0, x0, x21
    1274:	ldr	x0, [x0, #40]
    1278:	add	x0, x0, x28
    127c:	ldr	x1, [x0, #8]
    1280:	ldr	x0, [x19, #16]
    1284:	bl	0 <grub_strcmp>
    1288:	cbnz	w0, 1264 <grub_mod_init-0x28c>
    128c:	ldr	x0, [x20, #64]
    1290:	add	x0, x0, x21
    1294:	ldr	x0, [x0, #40]
    1298:	add	x0, x0, x28
    129c:	str	x19, [x0, #24]
    12a0:	b	1264 <grub_mod_init-0x28c>
    12a4:	add	w27, w27, #0x1
    12a8:	ldr	w0, [x20, #28]
    12ac:	cmp	w0, w27
    12b0:	b.ls	12dc <grub_mod_init-0x214>  // b.plast
    12b4:	ubfiz	x0, x27, #3, #32
    12b8:	sub	x0, x0, w27, uxtw
    12bc:	lsl	x0, x0, #3
    12c0:	mov	x21, x0
    12c4:	ldr	x1, [x20, #64]
    12c8:	add	x0, x1, x0
    12cc:	ldr	w0, [x0, #32]
    12d0:	mov	w23, w25
    12d4:	cbnz	w0, 1220 <grub_mod_init-0x2d0>
    12d8:	b	12a4 <grub_mod_init-0x24c>
    12dc:	ldr	x20, [x20, #80]
    12e0:	cbz	x20, 12f4 <grub_mod_init-0x1fc>
    12e4:	ldr	w0, [x20, #28]
    12e8:	mov	w27, w25
    12ec:	cbnz	w0, 12b4 <grub_mod_init-0x23c>
    12f0:	b	12dc <grub_mod_init-0x214>
    12f4:	ldp	x27, x28, [sp, #80]
    12f8:	mov	x0, x24
    12fc:	bl	0 <grub_diskfilter_vg_register>
    1300:	cbz	w0, 52c <grub_mod_init-0xfc4>
    1304:	b	7a0 <grub_mod_init-0xd50>
    1308:	ldp	x27, x28, [sp, #80]
    130c:	b	7a0 <grub_mod_init-0xd50>
    1310:	ldp	x27, x28, [sp, #80]
    1314:	b	7a0 <grub_mod_init-0xd50>
    1318:	ldp	x27, x28, [sp, #80]
    131c:	b	7a0 <grub_mod_init-0xd50>
    1320:	ldp	x27, x28, [sp, #80]
    1324:	b	7a0 <grub_mod_init-0xd50>
    1328:	ldp	x27, x28, [sp, #80]
    132c:	b	7a0 <grub_mod_init-0xd50>
    1330:	ldp	x27, x28, [sp, #80]
    1334:	b	7a0 <grub_mod_init-0xd50>
    1338:	ldp	x27, x28, [sp, #80]
    133c:	b	7a0 <grub_mod_init-0xd50>
    1340:	mov	x22, #0x0                   	// #0
    1344:	b	42c <grub_mod_init-0x10c4>
    1348:	mov	x22, #0x0                   	// #0
    134c:	b	42c <grub_mod_init-0x10c4>
    1350:	mov	w1, #0x7d                  	// #125
    1354:	bl	0 <grub_strchr>
    1358:	str	x0, [sp, #168]
    135c:	cbz	x0, 1178 <grub_mod_init-0x378>
    1360:	add	x0, x0, #0x3
    1364:	str	x0, [sp, #168]
    1368:	ldr	x0, [x21, #16]
    136c:	bl	0 <grub_free>
    1370:	mov	x0, x21
    1374:	bl	0 <grub_free>
    1378:	b	83c <grub_mod_init-0xcb4>
    137c:	str	xzr, [sp, #168]
    1380:	b	1398 <grub_mod_init-0x158>
    1384:	str	xzr, [sp, #168]
    1388:	b	1398 <grub_mod_init-0x158>
    138c:	str	xzr, [sp, #168]
    1390:	b	10c4 <grub_mod_init-0x42c>
    1394:	str	xzr, [sp, #168]
    1398:	ldr	x0, [x20, #40]
    139c:	bl	0 <grub_free>
    13a0:	ldp	x27, x28, [sp, #80]
    13a4:	b	7a0 <grub_mod_init-0xd50>
    13a8:	str	xzr, [sp, #168]
    13ac:	ldp	x27, x28, [sp, #80]
    13b0:	b	7a0 <grub_mod_init-0xd50>
    13b4:	str	xzr, [sp, #168]
    13b8:	b	1178 <grub_mod_init-0x378>
    13bc:	str	xzr, [sp, #168]
    13c0:	ldr	x20, [x24, #40]
    13c4:	cbz	x20, 12f8 <grub_mod_init-0x1f8>
    13c8:	stp	x27, x28, [sp, #80]
    13cc:	b	12e4 <grub_mod_init-0x20c>
    13d0:	str	xzr, [sp, #168]
    13d4:	ldr	x0, [sp, #168]
    13d8:	ldrb	w1, [x0]
    13dc:	cbz	w1, 13bc <grub_mod_init-0x134>
    13e0:	mov	w5, #0x6f                  	// #111
    13e4:	adrp	x4, 0 <grub_mod_init-0x14f0>
    13e8:	b	7d8 <grub_mod_init-0xd18>
    13ec:	str	xzr, [sp, #168]
    13f0:	b	7a8 <grub_mod_init-0xd48>
    13f4:	nop
	...

00000000000014f0 <grub_mod_init>:
    14f0:	adrp	x0, 0 <grub_mod_init-0x14f0>
    14f4:	ldr	x0, [x0]
    14f8:	ldr	x0, [x0]
    14fc:	cbz	x0, 1524 <grub_mod_init+0x34>
    1500:	mov	x1, x0
    1504:	ldr	x0, [x0]
    1508:	cbnz	x0, 1500 <grub_mod_init+0x10>
    150c:	adrp	x0, 0 <grub_mod_init-0x14f0>
    1510:	ldr	x0, [x0]
    1514:	str	xzr, [x0]
    1518:	str	x1, [x0, #8]
    151c:	str	x0, [x1]
    1520:	ret
    1524:	adrp	x0, 0 <grub_mod_init-0x14f0>
    1528:	ldr	x1, [x0]
    152c:	b	150c <grub_mod_init+0x1c>
	...

0000000000001540 <grub_mod_fini>:
    1540:	stp	x29, x30, [sp, #-16]!
    1544:	mov	x29, sp
    1548:	adrp	x0, 0 <grub_mod_init-0x14f0>
    154c:	ldr	x0, [x0]
    1550:	bl	0 <grub_list_remove>
    1554:	ldp	x29, x30, [sp], #16
    1558:	ret
    155c:	nop
	...
