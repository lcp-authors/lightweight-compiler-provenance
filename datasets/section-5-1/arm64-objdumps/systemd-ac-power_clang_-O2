
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b98 <_init>:
  400b98:	stp	x29, x30, [sp, #-16]!
  400b9c:	mov	x29, sp
  400ba0:	bl	400d40 <call_weak_fn>
  400ba4:	ldp	x29, x30, [sp], #16
  400ba8:	ret

Disassembly of section .plt:

0000000000400bb0 <__libc_start_main@plt-0x20>:
  400bb0:	stp	x16, x30, [sp, #-16]!
  400bb4:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400bb8:	ldr	x17, [x16, #3944]
  400bbc:	add	x16, x16, #0xf68
  400bc0:	br	x17
  400bc4:	nop
  400bc8:	nop
  400bcc:	nop

0000000000400bd0 <__libc_start_main@plt>:
  400bd0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400bd4:	ldr	x17, [x16, #3952]
  400bd8:	add	x16, x16, #0xf70
  400bdc:	br	x17

0000000000400be0 <abort@plt>:
  400be0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400be4:	ldr	x17, [x16, #3960]
  400be8:	add	x16, x16, #0xf78
  400bec:	br	x17

0000000000400bf0 <__gmon_start__@plt>:
  400bf0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400bf4:	ldr	x17, [x16, #3968]
  400bf8:	add	x16, x16, #0xf80
  400bfc:	br	x17

0000000000400c00 <log_parse_environment_realm@plt>:
  400c00:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c04:	ldr	x17, [x16, #3976]
  400c08:	add	x16, x16, #0xf88
  400c0c:	br	x17

0000000000400c10 <log_open@plt>:
  400c10:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c14:	ldr	x17, [x16, #3984]
  400c18:	add	x16, x16, #0xf90
  400c1c:	br	x17

0000000000400c20 <getopt_long@plt>:
  400c20:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c24:	ldr	x17, [x16, #3992]
  400c28:	add	x16, x16, #0xf98
  400c2c:	br	x17

0000000000400c30 <log_get_max_level_realm@plt>:
  400c30:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c34:	ldr	x17, [x16, #4000]
  400c38:	add	x16, x16, #0xfa0
  400c3c:	br	x17

0000000000400c40 <log_internal_realm@plt>:
  400c40:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c44:	ldr	x17, [x16, #4008]
  400c48:	add	x16, x16, #0xfa8
  400c4c:	br	x17

0000000000400c50 <version@plt>:
  400c50:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c54:	ldr	x17, [x16, #4016]
  400c58:	add	x16, x16, #0xfb0
  400c5c:	br	x17

0000000000400c60 <on_ac_power@plt>:
  400c60:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c64:	ldr	x17, [x16, #4024]
  400c68:	add	x16, x16, #0xfb8
  400c6c:	br	x17

0000000000400c70 <puts@plt>:
  400c70:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c74:	ldr	x17, [x16, #4032]
  400c78:	add	x16, x16, #0xfc0
  400c7c:	br	x17

0000000000400c80 <printf@plt>:
  400c80:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c84:	ldr	x17, [x16, #4040]
  400c88:	add	x16, x16, #0xfc8
  400c8c:	br	x17

0000000000400c90 <ask_password_agent_close@plt>:
  400c90:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400c94:	ldr	x17, [x16, #4048]
  400c98:	add	x16, x16, #0xfd0
  400c9c:	br	x17

0000000000400ca0 <polkit_agent_close@plt>:
  400ca0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400ca4:	ldr	x17, [x16, #4056]
  400ca8:	add	x16, x16, #0xfd8
  400cac:	br	x17

0000000000400cb0 <pager_close@plt>:
  400cb0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400cb4:	ldr	x17, [x16, #4064]
  400cb8:	add	x16, x16, #0xfe0
  400cbc:	br	x17

0000000000400cc0 <mac_selinux_finish@plt>:
  400cc0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400cc4:	ldr	x17, [x16, #4072]
  400cc8:	add	x16, x16, #0xfe8
  400ccc:	br	x17

0000000000400cd0 <log_assert_failed_realm@plt>:
  400cd0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400cd4:	ldr	x17, [x16, #4080]
  400cd8:	add	x16, x16, #0xff0
  400cdc:	br	x17

0000000000400ce0 <log_assert_failed_unreachable_realm@plt>:
  400ce0:	adrp	x16, 41f000 <__FRAME_END__+0x1dbc8>
  400ce4:	ldr	x17, [x16, #4088]
  400ce8:	add	x16, x16, #0xff8
  400cec:	br	x17

Disassembly of section .text:

0000000000400cf0 <_start>:
  400cf0:	mov	x29, #0x0                   	// #0
  400cf4:	mov	x30, #0x0                   	// #0
  400cf8:	mov	x5, x0
  400cfc:	ldr	x1, [sp]
  400d00:	add	x2, sp, #0x8
  400d04:	mov	x6, sp
  400d08:	movz	x0, #0x0, lsl #48
  400d0c:	movk	x0, #0x0, lsl #32
  400d10:	movk	x0, #0x40, lsl #16
  400d14:	movk	x0, #0xdfc
  400d18:	movz	x3, #0x0, lsl #48
  400d1c:	movk	x3, #0x0, lsl #32
  400d20:	movk	x3, #0x40, lsl #16
  400d24:	movk	x3, #0x10b8
  400d28:	movz	x4, #0x0, lsl #48
  400d2c:	movk	x4, #0x0, lsl #32
  400d30:	movk	x4, #0x40, lsl #16
  400d34:	movk	x4, #0x1138
  400d38:	bl	400bd0 <__libc_start_main@plt>
  400d3c:	bl	400be0 <abort@plt>

0000000000400d40 <call_weak_fn>:
  400d40:	adrp	x0, 41f000 <__FRAME_END__+0x1dbc8>
  400d44:	ldr	x0, [x0, #3904]
  400d48:	cbz	x0, 400d50 <call_weak_fn+0x10>
  400d4c:	b	400bf0 <__gmon_start__@plt>
  400d50:	ret
  400d54:	udf	#0

0000000000400d58 <deregister_tm_clones>:
  400d58:	adrp	x0, 420000 <completed.8445>
  400d5c:	add	x0, x0, #0x0
  400d60:	adrp	x1, 420000 <completed.8445>
  400d64:	add	x1, x1, #0x0
  400d68:	cmp	x1, x0
  400d6c:	b.eq	400d84 <deregister_tm_clones+0x2c>  // b.none
  400d70:	adrp	x1, 401000 <main+0x204>
  400d74:	ldr	x1, [x1, #336]
  400d78:	cbz	x1, 400d84 <deregister_tm_clones+0x2c>
  400d7c:	mov	x16, x1
  400d80:	br	x16
  400d84:	ret

0000000000400d88 <register_tm_clones>:
  400d88:	adrp	x0, 420000 <completed.8445>
  400d8c:	add	x0, x0, #0x0
  400d90:	adrp	x1, 420000 <completed.8445>
  400d94:	add	x1, x1, #0x0
  400d98:	sub	x1, x1, x0
  400d9c:	lsr	x2, x1, #63
  400da0:	add	x1, x2, x1, asr #3
  400da4:	cmp	xzr, x1, asr #1
  400da8:	asr	x1, x1, #1
  400dac:	b.eq	400dc4 <register_tm_clones+0x3c>  // b.none
  400db0:	adrp	x2, 401000 <main+0x204>
  400db4:	ldr	x2, [x2, #344]
  400db8:	cbz	x2, 400dc4 <register_tm_clones+0x3c>
  400dbc:	mov	x16, x2
  400dc0:	br	x16
  400dc4:	ret

0000000000400dc8 <__do_global_dtors_aux>:
  400dc8:	stp	x29, x30, [sp, #-32]!
  400dcc:	mov	x29, sp
  400dd0:	str	x19, [sp, #16]
  400dd4:	adrp	x19, 420000 <completed.8445>
  400dd8:	ldrb	w0, [x19]
  400ddc:	cbnz	w0, 400dec <__do_global_dtors_aux+0x24>
  400de0:	bl	400d58 <deregister_tm_clones>
  400de4:	mov	w0, #0x1                   	// #1
  400de8:	strb	w0, [x19]
  400dec:	ldr	x19, [sp, #16]
  400df0:	ldp	x29, x30, [sp], #32
  400df4:	ret

0000000000400df8 <frame_dummy>:
  400df8:	b	400d88 <register_tm_clones>

0000000000400dfc <main>:
  400dfc:	stp	x29, x30, [sp, #-64]!
  400e00:	adrp	x8, 420000 <completed.8445>
  400e04:	stp	x20, x19, [sp, #48]
  400e08:	mov	w19, w0
  400e0c:	adrp	x9, 420000 <completed.8445>
  400e10:	str	w0, [x8, #8]
  400e14:	mov	w0, wzr
  400e18:	stp	x24, x23, [sp, #16]
  400e1c:	stp	x22, x21, [sp, #32]
  400e20:	mov	x29, sp
  400e24:	mov	x20, x1
  400e28:	str	x1, [x9, #16]
  400e2c:	bl	400c00 <log_parse_environment_realm@plt>
  400e30:	bl	400c10 <log_open@plt>
  400e34:	tbnz	w19, #31, 401048 <main+0x24c>
  400e38:	cbz	x20, 40106c <main+0x270>
  400e3c:	adrp	x2, 401000 <main+0x204>
  400e40:	adrp	x3, 401000 <main+0x204>
  400e44:	add	x2, x2, #0x1dd
  400e48:	add	x3, x3, #0x2e0
  400e4c:	mov	w0, w19
  400e50:	mov	x1, x20
  400e54:	mov	x4, xzr
  400e58:	bl	400c20 <getopt_long@plt>
  400e5c:	tbnz	w0, #31, 400ea8 <main+0xac>
  400e60:	adrp	x21, 401000 <main+0x204>
  400e64:	adrp	x22, 401000 <main+0x204>
  400e68:	adrp	x23, 420000 <completed.8445>
  400e6c:	mov	w24, #0x1                   	// #1
  400e70:	add	x21, x21, #0x1dd
  400e74:	add	x22, x22, #0x2e0
  400e78:	cmp	w0, #0x75
  400e7c:	b.le	400f00 <main+0x104>
  400e80:	cmp	w0, #0x76
  400e84:	b.ne	400f10 <main+0x114>  // b.any
  400e88:	mov	w0, w19
  400e8c:	mov	x1, x20
  400e90:	mov	x2, x21
  400e94:	mov	x3, x22
  400e98:	mov	x4, xzr
  400e9c:	strb	w24, [x23, #1]
  400ea0:	bl	400c20 <getopt_long@plt>
  400ea4:	tbz	w0, #31, 400e78 <main+0x7c>
  400ea8:	adrp	x8, 420000 <completed.8445>
  400eac:	ldr	w8, [x8, #24]
  400eb0:	cmp	w8, w19
  400eb4:	b.ge	400f28 <main+0x12c>  // b.tcont
  400eb8:	mov	w0, wzr
  400ebc:	bl	400c30 <log_get_max_level_realm@plt>
  400ec0:	cmp	w0, #0x3
  400ec4:	b.lt	400f08 <main+0x10c>  // b.tstop
  400ec8:	adrp	x8, 420000 <completed.8445>
  400ecc:	ldr	x6, [x8, #32]
  400ed0:	adrp	x2, 401000 <main+0x204>
  400ed4:	adrp	x4, 401000 <main+0x204>
  400ed8:	adrp	x5, 401000 <main+0x204>
  400edc:	mov	w1, #0x16                  	// #22
  400ee0:	add	x2, x2, #0x163
  400ee4:	add	x4, x4, #0x1f1
  400ee8:	add	x5, x5, #0x1fc
  400eec:	mov	w0, #0x3                   	// #3
  400ef0:	movk	w1, #0x4000, lsl #16
  400ef4:	mov	w3, #0x3e                  	// #62
  400ef8:	bl	400c40 <log_internal_realm@plt>
  400efc:	b	400f1c <main+0x120>
  400f00:	cmp	w0, #0x3f
  400f04:	b.ne	400f6c <main+0x170>  // b.any
  400f08:	mov	w19, #0xffffffea            	// #-22
  400f0c:	b	400fdc <main+0x1e0>
  400f10:	cmp	w0, #0x100
  400f14:	b.ne	401090 <main+0x294>  // b.any
  400f18:	bl	400c50 <version@plt>
  400f1c:	mov	w19, w0
  400f20:	cmp	w0, #0x1
  400f24:	b.lt	400fdc <main+0x1e0>  // b.tstop
  400f28:	bl	400c60 <on_ac_power@plt>
  400f2c:	mov	w19, w0
  400f30:	tbnz	w0, #31, 400f90 <main+0x194>
  400f34:	adrp	x8, 420000 <completed.8445>
  400f38:	ldrb	w8, [x8, #1]
  400f3c:	cmp	w8, #0x1
  400f40:	b.ne	400f60 <main+0x164>  // b.any
  400f44:	adrp	x8, 401000 <main+0x204>
  400f48:	adrp	x9, 401000 <main+0x204>
  400f4c:	add	x8, x8, #0x2d5
  400f50:	add	x9, x9, #0x2d9
  400f54:	cmp	w19, #0x0
  400f58:	csel	x0, x9, x8, eq  // eq = none
  400f5c:	bl	400c70 <puts@plt>
  400f60:	cmp	w19, #0x0
  400f64:	cset	w19, eq  // eq = none
  400f68:	b	400fdc <main+0x1e0>
  400f6c:	cmp	w0, #0x68
  400f70:	b.ne	401090 <main+0x294>  // b.any
  400f74:	adrp	x8, 420000 <completed.8445>
  400f78:	ldr	x1, [x8, #32]
  400f7c:	adrp	x0, 401000 <main+0x204>
  400f80:	add	x0, x0, #0x213
  400f84:	bl	400c80 <printf@plt>
  400f88:	mov	w19, wzr
  400f8c:	b	400fdc <main+0x1e0>
  400f90:	mov	w0, wzr
  400f94:	bl	400c30 <log_get_max_level_realm@plt>
  400f98:	cmp	w0, #0x3
  400f9c:	b.lt	400fd0 <main+0x1d4>  // b.tstop
  400fa0:	adrp	x2, 401000 <main+0x204>
  400fa4:	adrp	x4, 401000 <main+0x204>
  400fa8:	adrp	x5, 401000 <main+0x204>
  400fac:	add	x2, x2, #0x163
  400fb0:	add	x4, x4, #0x17b
  400fb4:	add	x5, x5, #0x17f
  400fb8:	mov	w0, #0x3                   	// #3
  400fbc:	mov	w3, #0x52                  	// #82
  400fc0:	mov	w1, w19
  400fc4:	bl	400c40 <log_internal_realm@plt>
  400fc8:	mov	w19, w0
  400fcc:	b	400fdc <main+0x1e0>
  400fd0:	mov	w8, wzr
  400fd4:	neg	w9, w19
  400fd8:	sub	w19, w8, w9, uxtb
  400fdc:	bl	400c90 <ask_password_agent_close@plt>
  400fe0:	bl	400ca0 <polkit_agent_close@plt>
  400fe4:	bl	400cb0 <pager_close@plt>
  400fe8:	bl	400cc0 <mac_selinux_finish@plt>
  400fec:	adrp	x8, 41f000 <__FRAME_END__+0x1dbc8>
  400ff0:	ldr	x8, [x8, #3912]
  400ff4:	adrp	x20, 41f000 <__FRAME_END__+0x1dbc8>
  400ff8:	ldr	x20, [x20, #3920]
  400ffc:	add	x9, x8, #0x7
  401000:	and	x21, x9, #0xfffffffffffffff8
  401004:	cmp	x21, x20
  401008:	cset	w9, cs  // cs = hs, nlast
  40100c:	cmp	x8, #0x0
  401010:	cset	w8, eq  // eq = none
  401014:	orr	w8, w8, w9
  401018:	tbnz	w8, #0, 40102c <main+0x230>
  40101c:	ldp	x0, x8, [x21], #16
  401020:	blr	x8
  401024:	cmp	x21, x20
  401028:	b.cc	40101c <main+0x220>  // b.lo, b.ul, b.last
  40102c:	cmp	w19, #0x0
  401030:	csinc	w0, w19, wzr, ge  // ge = tcont
  401034:	ldp	x20, x19, [sp, #48]
  401038:	ldp	x22, x21, [sp, #32]
  40103c:	ldp	x24, x23, [sp, #16]
  401040:	ldp	x29, x30, [sp], #64
  401044:	ret
  401048:	adrp	x1, 401000 <main+0x204>
  40104c:	adrp	x2, 401000 <main+0x204>
  401050:	adrp	x4, 401000 <main+0x204>
  401054:	add	x1, x1, #0x1b1
  401058:	add	x2, x2, #0x163
  40105c:	add	x4, x4, #0x1bb
  401060:	mov	w3, #0x22                  	// #34
  401064:	mov	w0, wzr
  401068:	bl	400cd0 <log_assert_failed_realm@plt>
  40106c:	adrp	x1, 401000 <main+0x204>
  401070:	adrp	x2, 401000 <main+0x204>
  401074:	adrp	x4, 401000 <main+0x204>
  401078:	add	x1, x1, #0x1d8
  40107c:	add	x2, x2, #0x163
  401080:	add	x4, x4, #0x1bb
  401084:	mov	w3, #0x23                  	// #35
  401088:	mov	w0, wzr
  40108c:	bl	400cd0 <log_assert_failed_realm@plt>
  401090:	adrp	x1, 401000 <main+0x204>
  401094:	adrp	x2, 401000 <main+0x204>
  401098:	adrp	x4, 401000 <main+0x204>
  40109c:	add	x1, x1, #0x1e0
  4010a0:	add	x2, x2, #0x163
  4010a4:	add	x4, x4, #0x1bb
  4010a8:	mov	w3, #0x38                  	// #56
  4010ac:	mov	w0, wzr
  4010b0:	bl	400ce0 <log_assert_failed_unreachable_realm@plt>
  4010b4:	udf	#0

00000000004010b8 <__libc_csu_init>:
  4010b8:	stp	x29, x30, [sp, #-64]!
  4010bc:	mov	x29, sp
  4010c0:	stp	x19, x20, [sp, #16]
  4010c4:	adrp	x20, 41f000 <__FRAME_END__+0x1dbc8>
  4010c8:	add	x20, x20, #0xd18
  4010cc:	stp	x21, x22, [sp, #32]
  4010d0:	adrp	x21, 41f000 <__FRAME_END__+0x1dbc8>
  4010d4:	add	x21, x21, #0xd10
  4010d8:	sub	x20, x20, x21
  4010dc:	mov	w22, w0
  4010e0:	stp	x23, x24, [sp, #48]
  4010e4:	mov	x23, x1
  4010e8:	mov	x24, x2
  4010ec:	bl	400b98 <_init>
  4010f0:	cmp	xzr, x20, asr #3
  4010f4:	b.eq	401120 <__libc_csu_init+0x68>  // b.none
  4010f8:	asr	x20, x20, #3
  4010fc:	mov	x19, #0x0                   	// #0
  401100:	ldr	x3, [x21, x19, lsl #3]
  401104:	mov	x2, x24
  401108:	add	x19, x19, #0x1
  40110c:	mov	x1, x23
  401110:	mov	w0, w22
  401114:	blr	x3
  401118:	cmp	x20, x19
  40111c:	b.ne	401100 <__libc_csu_init+0x48>  // b.any
  401120:	ldp	x19, x20, [sp, #16]
  401124:	ldp	x21, x22, [sp, #32]
  401128:	ldp	x23, x24, [sp, #48]
  40112c:	ldp	x29, x30, [sp], #64
  401130:	ret
  401134:	nop

0000000000401138 <__libc_csu_fini>:
  401138:	ret

Disassembly of section .fini:

000000000040113c <_fini>:
  40113c:	stp	x29, x30, [sp, #-16]!
  401140:	mov	x29, sp
  401144:	ldp	x29, x30, [sp], #16
  401148:	ret
