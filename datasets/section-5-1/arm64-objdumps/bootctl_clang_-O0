
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bootctl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004028a0 <.init>:
  4028a0:	stp	x29, x30, [sp, #-16]!
  4028a4:	mov	x29, sp
  4028a8:	bl	4030d8 <__fxstat64@plt+0x60>
  4028ac:	ldp	x29, x30, [sp], #16
  4028b0:	ret

Disassembly of section .plt:

00000000004028b8 <__libc_start_main@plt-0x20>:
  4028b8:	stp	x16, x30, [sp, #-16]!
  4028bc:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4028c0:	ldr	x17, [x16, #3104]
  4028c4:	add	x16, x16, #0xc20
  4028c8:	br	x17
  4028cc:	nop
  4028d0:	nop
  4028d4:	nop

00000000004028d8 <__libc_start_main@plt>:
  4028d8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4028dc:	ldr	x17, [x16, #3112]
  4028e0:	add	x16, x16, #0xc28
  4028e4:	br	x17

00000000004028e8 <abort@plt>:
  4028e8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4028ec:	ldr	x17, [x16, #3120]
  4028f0:	add	x16, x16, #0xc30
  4028f4:	br	x17

00000000004028f8 <__gmon_start__@plt>:
  4028f8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4028fc:	ldr	x17, [x16, #3128]
  402900:	add	x16, x16, #0xc38
  402904:	br	x17

0000000000402908 <ask_password_agent_close@plt>:
  402908:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40290c:	ldr	x17, [x16, #3136]
  402910:	add	x16, x16, #0xc40
  402914:	br	x17

0000000000402918 <polkit_agent_close@plt>:
  402918:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40291c:	ldr	x17, [x16, #3144]
  402920:	add	x16, x16, #0xc48
  402924:	br	x17

0000000000402928 <pager_close@plt>:
  402928:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40292c:	ldr	x17, [x16, #3152]
  402930:	add	x16, x16, #0xc50
  402934:	br	x17

0000000000402938 <mac_selinux_finish@plt>:
  402938:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40293c:	ldr	x17, [x16, #3160]
  402940:	add	x16, x16, #0xc58
  402944:	br	x17

0000000000402948 <log_parse_environment_realm@plt>:
  402948:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40294c:	ldr	x17, [x16, #3168]
  402950:	add	x16, x16, #0xc60
  402954:	br	x17

0000000000402958 <log_open@plt>:
  402958:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40295c:	ldr	x17, [x16, #3176]
  402960:	add	x16, x16, #0xc68
  402964:	br	x17

0000000000402968 <detect_container@plt>:
  402968:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40296c:	ldr	x17, [x16, #3184]
  402970:	add	x16, x16, #0xc70
  402974:	br	x17

0000000000402978 <free@plt>:
  402978:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40297c:	ldr	x17, [x16, #3192]
  402980:	add	x16, x16, #0xc78
  402984:	br	x17

0000000000402988 <log_assert_failed_realm@plt>:
  402988:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40298c:	ldr	x17, [x16, #3200]
  402990:	add	x16, x16, #0xc80
  402994:	br	x17

0000000000402998 <getopt_long@plt>:
  402998:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40299c:	ldr	x17, [x16, #3208]
  4029a0:	add	x16, x16, #0xc88
  4029a4:	br	x17

00000000004029a8 <version@plt>:
  4029a8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029ac:	ldr	x17, [x16, #3216]
  4029b0:	add	x16, x16, #0xc90
  4029b4:	br	x17

00000000004029b8 <free_and_strdup@plt>:
  4029b8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029bc:	ldr	x17, [x16, #3224]
  4029c0:	add	x16, x16, #0xc98
  4029c4:	br	x17

00000000004029c8 <log_oom_internal@plt>:
  4029c8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029cc:	ldr	x17, [x16, #3232]
  4029d0:	add	x16, x16, #0xca0
  4029d4:	br	x17

00000000004029d8 <log_get_max_level_realm@plt>:
  4029d8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029dc:	ldr	x17, [x16, #3240]
  4029e0:	add	x16, x16, #0xca8
  4029e4:	br	x17

00000000004029e8 <log_internal_realm@plt>:
  4029e8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029ec:	ldr	x17, [x16, #3248]
  4029f0:	add	x16, x16, #0xcb0
  4029f4:	br	x17

00000000004029f8 <abs@plt>:
  4029f8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  4029fc:	ldr	x17, [x16, #3256]
  402a00:	add	x16, x16, #0xcb8
  402a04:	br	x17

0000000000402a08 <log_assert_failed_unreachable_realm@plt>:
  402a08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a0c:	ldr	x17, [x16, #3264]
  402a10:	add	x16, x16, #0xcc0
  402a14:	br	x17

0000000000402a18 <dispatch_verb@plt>:
  402a18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a1c:	ldr	x17, [x16, #3272]
  402a20:	add	x16, x16, #0xcc8
  402a24:	br	x17

0000000000402a28 <terminal_urlify_man@plt>:
  402a28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a2c:	ldr	x17, [x16, #3280]
  402a30:	add	x16, x16, #0xcd0
  402a34:	br	x17

0000000000402a38 <printf@plt>:
  402a38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a3c:	ldr	x17, [x16, #3288]
  402a40:	add	x16, x16, #0xcd8
  402a44:	br	x17

0000000000402a48 <colors_enabled@plt>:
  402a48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a4c:	ldr	x17, [x16, #3296]
  402a50:	add	x16, x16, #0xce0
  402a54:	br	x17

0000000000402a58 <geteuid@plt>:
  402a58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a5c:	ldr	x17, [x16, #3304]
  402a60:	add	x16, x16, #0xce8
  402a64:	br	x17

0000000000402a68 <puts@plt>:
  402a68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a6c:	ldr	x17, [x16, #3312]
  402a70:	add	x16, x16, #0xcf0
  402a74:	br	x17

0000000000402a78 <pager_open@plt>:
  402a78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a7c:	ldr	x17, [x16, #3320]
  402a80:	add	x16, x16, #0xcf8
  402a84:	br	x17

0000000000402a88 <is_efi_boot@plt>:
  402a88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a8c:	ldr	x17, [x16, #3328]
  402a90:	add	x16, x16, #0xd00
  402a94:	br	x17

0000000000402a98 <efi_loader_get_features@plt>:
  402a98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402a9c:	ldr	x17, [x16, #3336]
  402aa0:	add	x16, x16, #0xd08
  402aa4:	br	x17

0000000000402aa8 <efi_tilt_backslashes@plt>:
  402aa8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402aac:	ldr	x17, [x16, #3344]
  402ab0:	add	x16, x16, #0xd10
  402ab4:	br	x17

0000000000402ab8 <efi_loader_get_device_part_uuid@plt>:
  402ab8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402abc:	ldr	x17, [x16, #3352]
  402ac0:	add	x16, x16, #0xd18
  402ac4:	br	x17

0000000000402ac8 <is_efi_secure_boot@plt>:
  402ac8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402acc:	ldr	x17, [x16, #3360]
  402ad0:	add	x16, x16, #0xd20
  402ad4:	br	x17

0000000000402ad8 <is_efi_secure_boot_setup_mode@plt>:
  402ad8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402adc:	ldr	x17, [x16, #3368]
  402ae0:	add	x16, x16, #0xd28
  402ae4:	br	x17

0000000000402ae8 <special_glyph@plt>:
  402ae8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402aec:	ldr	x17, [x16, #3376]
  402af0:	add	x16, x16, #0xd30
  402af4:	br	x17

0000000000402af8 <access@plt>:
  402af8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402afc:	ldr	x17, [x16, #3384]
  402b00:	add	x16, x16, #0xd38
  402b04:	br	x17

0000000000402b08 <path_join_internal@plt>:
  402b08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b0c:	ldr	x17, [x16, #3392]
  402b10:	add	x16, x16, #0xd40
  402b14:	br	x17

0000000000402b18 <sd_id128_get_machine@plt>:
  402b18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b1c:	ldr	x17, [x16, #3400]
  402b20:	add	x16, x16, #0xd48
  402b24:	br	x17

0000000000402b28 <strcmp@plt>:
  402b28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b2c:	ldr	x17, [x16, #3408]
  402b30:	add	x16, x16, #0xd50
  402b34:	br	x17

0000000000402b38 <umask@plt>:
  402b38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b3c:	ldr	x17, [x16, #3416]
  402b40:	add	x16, x16, #0xd58
  402b44:	br	x17

0000000000402b48 <memset@plt>:
  402b48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b4c:	ldr	x17, [x16, #3424]
  402b50:	add	x16, x16, #0xd60
  402b54:	br	x17

0000000000402b58 <boot_entries_load_config@plt>:
  402b58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b5c:	ldr	x17, [x16, #3432]
  402b60:	add	x16, x16, #0xd68
  402b64:	br	x17

0000000000402b68 <boot_entries_augment_from_loader@plt>:
  402b68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b6c:	ldr	x17, [x16, #3440]
  402b70:	add	x16, x16, #0xd70
  402b74:	br	x17

0000000000402b78 <putchar@plt>:
  402b78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b7c:	ldr	x17, [x16, #3448]
  402b80:	add	x16, x16, #0xd78
  402b84:	br	x17

0000000000402b88 <boot_config_free@plt>:
  402b88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b8c:	ldr	x17, [x16, #3456]
  402b90:	add	x16, x16, #0xd80
  402b94:	br	x17

0000000000402b98 <__errno_location@plt>:
  402b98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402b9c:	ldr	x17, [x16, #3464]
  402ba0:	add	x16, x16, #0xd88
  402ba4:	br	x17

0000000000402ba8 <efi_set_variable@plt>:
  402ba8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bac:	ldr	x17, [x16, #3472]
  402bb0:	add	x16, x16, #0xd90
  402bb4:	br	x17

0000000000402bb8 <strlen@plt>:
  402bb8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bbc:	ldr	x17, [x16, #3480]
  402bc0:	add	x16, x16, #0xd98
  402bc4:	br	x17

0000000000402bc8 <utf8_to_utf16@plt>:
  402bc8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bcc:	ldr	x17, [x16, #3488]
  402bd0:	add	x16, x16, #0xda0
  402bd4:	br	x17

0000000000402bd8 <char16_strlen@plt>:
  402bd8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bdc:	ldr	x17, [x16, #3496]
  402be0:	add	x16, x16, #0xda8
  402be4:	br	x17

0000000000402be8 <find_esp_and_warn@plt>:
  402be8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bec:	ldr	x17, [x16, #3504]
  402bf0:	add	x16, x16, #0xdb0
  402bf4:	br	x17

0000000000402bf8 <systemd_efi_options_variable@plt>:
  402bf8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402bfc:	ldr	x17, [x16, #3512]
  402c00:	add	x16, x16, #0xdb8
  402c04:	br	x17

0000000000402c08 <efi_set_variable_string@plt>:
  402c08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c0c:	ldr	x17, [x16, #3520]
  402c10:	add	x16, x16, #0xdc0
  402c14:	br	x17

0000000000402c18 <find_xbootldr_and_warn@plt>:
  402c18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c1c:	ldr	x17, [x16, #3528]
  402c20:	add	x16, x16, #0xdc8
  402c24:	br	x17

0000000000402c28 <efi_get_variable_string@plt>:
  402c28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c2c:	ldr	x17, [x16, #3536]
  402c30:	add	x16, x16, #0xdd0
  402c34:	br	x17

0000000000402c38 <efi_get_boot_options@plt>:
  402c38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c3c:	ldr	x17, [x16, #3544]
  402c40:	add	x16, x16, #0xdd8
  402c44:	br	x17

0000000000402c48 <efi_get_boot_order@plt>:
  402c48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c4c:	ldr	x17, [x16, #3552]
  402c50:	add	x16, x16, #0xde0
  402c54:	br	x17

0000000000402c58 <stpcpy@plt>:
  402c58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c5c:	ldr	x17, [x16, #3560]
  402c60:	add	x16, x16, #0xde8
  402c64:	br	x17

0000000000402c68 <strcpy@plt>:
  402c68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c6c:	ldr	x17, [x16, #3568]
  402c70:	add	x16, x16, #0xdf0
  402c74:	br	x17

0000000000402c78 <opendir@plt>:
  402c78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c7c:	ldr	x17, [x16, #3576]
  402c80:	add	x16, x16, #0xdf8
  402c84:	br	x17

0000000000402c88 <readdir64@plt>:
  402c88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c8c:	ldr	x17, [x16, #3584]
  402c90:	add	x16, x16, #0xe00
  402c94:	br	x17

0000000000402c98 <hidden_or_backup_file@plt>:
  402c98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402c9c:	ldr	x17, [x16, #3592]
  402ca0:	add	x16, x16, #0xe08
  402ca4:	br	x17

0000000000402ca8 <endswith_no_case@plt>:
  402ca8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402cac:	ldr	x17, [x16, #3600]
  402cb0:	add	x16, x16, #0xe10
  402cb4:	br	x17

0000000000402cb8 <dirfd@plt>:
  402cb8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402cbc:	ldr	x17, [x16, #3608]
  402cc0:	add	x16, x16, #0xe18
  402cc4:	br	x17

0000000000402cc8 <openat64@plt>:
  402cc8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402ccc:	ldr	x17, [x16, #3616]
  402cd0:	add	x16, x16, #0xe20
  402cd4:	br	x17

0000000000402cd8 <closedir@plt>:
  402cd8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402cdc:	ldr	x17, [x16, #3624]
  402ce0:	add	x16, x16, #0xe28
  402ce4:	br	x17

0000000000402ce8 <safe_close@plt>:
  402ce8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402cec:	ldr	x17, [x16, #3632]
  402cf0:	add	x16, x16, #0xe30
  402cf4:	br	x17

0000000000402cf8 <strncasecmp@plt>:
  402cf8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402cfc:	ldr	x17, [x16, #3640]
  402d00:	add	x16, x16, #0xe38
  402d04:	br	x17

0000000000402d08 <stat_verify_regular@plt>:
  402d08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d0c:	ldr	x17, [x16, #3648]
  402d10:	add	x16, x16, #0xe40
  402d14:	br	x17

0000000000402d18 <mmap64@plt>:
  402d18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d1c:	ldr	x17, [x16, #3656]
  402d20:	add	x16, x16, #0xe48
  402d24:	br	x17

0000000000402d28 <memmem@plt>:
  402d28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d2c:	ldr	x17, [x16, #3664]
  402d30:	add	x16, x16, #0xe50
  402d34:	br	x17

0000000000402d38 <strndup@plt>:
  402d38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d3c:	ldr	x17, [x16, #3672]
  402d40:	add	x16, x16, #0xe58
  402d44:	br	x17

0000000000402d48 <munmap@plt>:
  402d48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d4c:	ldr	x17, [x16, #3680]
  402d50:	add	x16, x16, #0xe60
  402d54:	br	x17

0000000000402d58 <efi_get_boot_option@plt>:
  402d58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d5c:	ldr	x17, [x16, #3688]
  402d60:	add	x16, x16, #0xe68
  402d64:	br	x17

0000000000402d68 <terminal_urlify_path@plt>:
  402d68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d6c:	ldr	x17, [x16, #3696]
  402d70:	add	x16, x16, #0xe70
  402d74:	br	x17

0000000000402d78 <strv_split_newlines@plt>:
  402d78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d7c:	ldr	x17, [x16, #3704]
  402d80:	add	x16, x16, #0xe78
  402d84:	br	x17

0000000000402d88 <strv_free@plt>:
  402d88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d8c:	ldr	x17, [x16, #3712]
  402d90:	add	x16, x16, #0xe80
  402d94:	br	x17

0000000000402d98 <strv_join_prefix@plt>:
  402d98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402d9c:	ldr	x17, [x16, #3720]
  402da0:	add	x16, x16, #0xe88
  402da4:	br	x17

0000000000402da8 <open_tmpfile_linkable@plt>:
  402da8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402dac:	ldr	x17, [x16, #3728]
  402db0:	add	x16, x16, #0xe90
  402db4:	br	x17

0000000000402db8 <fdopen@plt>:
  402db8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402dbc:	ldr	x17, [x16, #3736]
  402dc0:	add	x16, x16, #0xe98
  402dc4:	br	x17

0000000000402dc8 <sd_id128_to_string@plt>:
  402dc8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402dcc:	ldr	x17, [x16, #3744]
  402dd0:	add	x16, x16, #0xea0
  402dd4:	br	x17

0000000000402dd8 <fprintf@plt>:
  402dd8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402ddc:	ldr	x17, [x16, #3752]
  402de0:	add	x16, x16, #0xea8
  402de4:	br	x17

0000000000402de8 <fflush_sync_and_check@plt>:
  402de8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402dec:	ldr	x17, [x16, #3760]
  402df0:	add	x16, x16, #0xeb0
  402df4:	br	x17

0000000000402df8 <link_tmpfile@plt>:
  402df8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402dfc:	ldr	x17, [x16, #3768]
  402e00:	add	x16, x16, #0xeb8
  402e04:	br	x17

0000000000402e08 <random_pool_size@plt>:
  402e08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e0c:	ldr	x17, [x16, #3776]
  402e10:	add	x16, x16, #0xec0
  402e14:	br	x17

0000000000402e18 <malloc@plt>:
  402e18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e1c:	ldr	x17, [x16, #3784]
  402e20:	add	x16, x16, #0xec8
  402e24:	br	x17

0000000000402e28 <genuine_random_bytes@plt>:
  402e28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e2c:	ldr	x17, [x16, #3792]
  402e30:	add	x16, x16, #0xed0
  402e34:	br	x17

0000000000402e38 <mkdir_parents@plt>:
  402e38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e3c:	ldr	x17, [x16, #3800]
  402e40:	add	x16, x16, #0xed8
  402e44:	br	x17

0000000000402e48 <tempfn_random@plt>:
  402e48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e4c:	ldr	x17, [x16, #3808]
  402e50:	add	x16, x16, #0xee0
  402e54:	br	x17

0000000000402e58 <open64@plt>:
  402e58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e5c:	ldr	x17, [x16, #3816]
  402e60:	add	x16, x16, #0xee8
  402e64:	br	x17

0000000000402e68 <write@plt>:
  402e68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e6c:	ldr	x17, [x16, #3824]
  402e70:	add	x16, x16, #0xef0
  402e74:	br	x17

0000000000402e78 <rename@plt>:
  402e78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e7c:	ldr	x17, [x16, #3832]
  402e80:	add	x16, x16, #0xef8
  402e84:	br	x17

0000000000402e88 <getenv_bool@plt>:
  402e88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e8c:	ldr	x17, [x16, #3840]
  402e90:	add	x16, x16, #0xf00
  402e94:	br	x17

0000000000402e98 <detect_vm@plt>:
  402e98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402e9c:	ldr	x17, [x16, #3848]
  402ea0:	add	x16, x16, #0xf08
  402ea4:	br	x17

0000000000402ea8 <efi_get_variable@plt>:
  402ea8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402eac:	ldr	x17, [x16, #3856]
  402eb0:	add	x16, x16, #0xf10
  402eb4:	br	x17

0000000000402eb8 <syncfs_path@plt>:
  402eb8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402ebc:	ldr	x17, [x16, #3864]
  402ec0:	add	x16, x16, #0xf18
  402ec4:	br	x17

0000000000402ec8 <efi_add_boot_option@plt>:
  402ec8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402ecc:	ldr	x17, [x16, #3872]
  402ed0:	add	x16, x16, #0xf20
  402ed4:	br	x17

0000000000402ed8 <mkdir@plt>:
  402ed8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402edc:	ldr	x17, [x16, #3880]
  402ee0:	add	x16, x16, #0xf28
  402ee4:	br	x17

0000000000402ee8 <strrchr@plt>:
  402ee8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402eec:	ldr	x17, [x16, #3888]
  402ef0:	add	x16, x16, #0xf30
  402ef4:	br	x17

0000000000402ef8 <ascii_strupper@plt>:
  402ef8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402efc:	ldr	x17, [x16, #3896]
  402f00:	add	x16, x16, #0xf38
  402f04:	br	x17

0000000000402f08 <lseek64@plt>:
  402f08:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f0c:	ldr	x17, [x16, #3904]
  402f10:	add	x16, x16, #0xf40
  402f14:	br	x17

0000000000402f18 <unlink@plt>:
  402f18:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f1c:	ldr	x17, [x16, #3912]
  402f20:	add	x16, x16, #0xf48
  402f24:	br	x17

0000000000402f28 <copy_times@plt>:
  402f28:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f2c:	ldr	x17, [x16, #3920]
  402f30:	add	x16, x16, #0xf50
  402f34:	br	x17

0000000000402f38 <fsync@plt>:
  402f38:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f3c:	ldr	x17, [x16, #3928]
  402f40:	add	x16, x16, #0xf58
  402f44:	br	x17

0000000000402f48 <unlink_noerrno@plt>:
  402f48:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f4c:	ldr	x17, [x16, #3936]
  402f50:	add	x16, x16, #0xf60
  402f54:	br	x17

0000000000402f58 <fsync_directory_of_file@plt>:
  402f58:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f5c:	ldr	x17, [x16, #3944]
  402f60:	add	x16, x16, #0xf68
  402f64:	br	x17

0000000000402f68 <renameat@plt>:
  402f68:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f6c:	ldr	x17, [x16, #3952]
  402f70:	add	x16, x16, #0xf70
  402f74:	br	x17

0000000000402f78 <strncmp@plt>:
  402f78:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f7c:	ldr	x17, [x16, #3960]
  402f80:	add	x16, x16, #0xf78
  402f84:	br	x17

0000000000402f88 <copy_bytes_full@plt>:
  402f88:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f8c:	ldr	x17, [x16, #3968]
  402f90:	add	x16, x16, #0xf80
  402f94:	br	x17

0000000000402f98 <strcspn@plt>:
  402f98:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402f9c:	ldr	x17, [x16, #3976]
  402fa0:	add	x16, x16, #0xf88
  402fa4:	br	x17

0000000000402fa8 <strspn@plt>:
  402fa8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402fac:	ldr	x17, [x16, #3984]
  402fb0:	add	x16, x16, #0xf90
  402fb4:	br	x17

0000000000402fb8 <strverscmp@plt>:
  402fb8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402fbc:	ldr	x17, [x16, #3992]
  402fc0:	add	x16, x16, #0xf98
  402fc4:	br	x17

0000000000402fc8 <safe_fclose@plt>:
  402fc8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402fcc:	ldr	x17, [x16, #4000]
  402fd0:	add	x16, x16, #0xfa0
  402fd4:	br	x17

0000000000402fd8 <efi_set_boot_order@plt>:
  402fd8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402fdc:	ldr	x17, [x16, #4008]
  402fe0:	add	x16, x16, #0xfa8
  402fe4:	br	x17

0000000000402fe8 <memmove@plt>:
  402fe8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402fec:	ldr	x17, [x16, #4016]
  402ff0:	add	x16, x16, #0xfb0
  402ff4:	br	x17

0000000000402ff8 <reallocarray@plt>:
  402ff8:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  402ffc:	ldr	x17, [x16, #4024]
  403000:	add	x16, x16, #0xfb8
  403004:	br	x17

0000000000403008 <memcmp@plt>:
  403008:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40300c:	ldr	x17, [x16, #4032]
  403010:	add	x16, x16, #0xfc0
  403014:	br	x17

0000000000403018 <strcmp_ptr@plt>:
  403018:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40301c:	ldr	x17, [x16, #4040]
  403020:	add	x16, x16, #0xfc8
  403024:	br	x17

0000000000403028 <rm_rf@plt>:
  403028:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40302c:	ldr	x17, [x16, #4048]
  403030:	add	x16, x16, #0xfd0
  403034:	br	x17

0000000000403038 <efi_remove_boot_option@plt>:
  403038:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40303c:	ldr	x17, [x16, #4056]
  403040:	add	x16, x16, #0xfd8
  403044:	br	x17

0000000000403048 <unlinkat@plt>:
  403048:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40304c:	ldr	x17, [x16, #4064]
  403050:	add	x16, x16, #0xfe0
  403054:	br	x17

0000000000403058 <rmdir@plt>:
  403058:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40305c:	ldr	x17, [x16, #4072]
  403060:	add	x16, x16, #0xfe8
  403064:	br	x17

0000000000403068 <dir_is_empty_at@plt>:
  403068:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40306c:	ldr	x17, [x16, #4080]
  403070:	add	x16, x16, #0xff0
  403074:	br	x17

0000000000403078 <__fxstat64@plt>:
  403078:	adrp	x16, 42f000 <__fxstat64@plt+0x2bf88>
  40307c:	ldr	x17, [x16, #4088]
  403080:	add	x16, x16, #0xff8
  403084:	br	x17

Disassembly of section .text:

0000000000403088 <.text>:
  403088:	mov	x29, #0x0                   	// #0
  40308c:	mov	x30, #0x0                   	// #0
  403090:	mov	x5, x0
  403094:	ldr	x1, [sp]
  403098:	add	x2, sp, #0x8
  40309c:	mov	x6, sp
  4030a0:	movz	x0, #0x0, lsl #48
  4030a4:	movk	x0, #0x0, lsl #32
  4030a8:	movk	x0, #0x40, lsl #16
  4030ac:	movk	x0, #0x32a8
  4030b0:	movz	x3, #0x0, lsl #48
  4030b4:	movk	x3, #0x0, lsl #32
  4030b8:	movk	x3, #0x40, lsl #16
  4030bc:	movk	x3, #0xda78
  4030c0:	movz	x4, #0x0, lsl #48
  4030c4:	movk	x4, #0x0, lsl #32
  4030c8:	movk	x4, #0x40, lsl #16
  4030cc:	movk	x4, #0xdaf8
  4030d0:	bl	4028d8 <__libc_start_main@plt>
  4030d4:	bl	4028e8 <abort@plt>
  4030d8:	adrp	x0, 42f000 <__fxstat64@plt+0x2bf88>
  4030dc:	ldr	x0, [x0, #3064]
  4030e0:	cbz	x0, 4030e8 <__fxstat64@plt+0x70>
  4030e4:	b	4028f8 <__gmon_start__@plt>
  4030e8:	ret
  4030ec:	stp	x29, x30, [sp, #-32]!
  4030f0:	mov	x29, sp
  4030f4:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  4030f8:	add	x0, x0, #0x0
  4030fc:	str	x0, [sp, #24]
  403100:	ldr	x0, [sp, #24]
  403104:	str	x0, [sp, #24]
  403108:	ldr	x1, [sp, #24]
  40310c:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  403110:	add	x0, x0, #0x0
  403114:	cmp	x1, x0
  403118:	b.eq	403154 <__fxstat64@plt+0xdc>  // b.none
  40311c:	adrp	x0, 40d000 <__fxstat64@plt+0x9f88>
  403120:	add	x0, x0, #0xb20
  403124:	ldr	x0, [x0]
  403128:	str	x0, [sp, #16]
  40312c:	ldr	x0, [sp, #16]
  403130:	str	x0, [sp, #16]
  403134:	ldr	x0, [sp, #16]
  403138:	cmp	x0, #0x0
  40313c:	b.eq	403158 <__fxstat64@plt+0xe0>  // b.none
  403140:	ldr	x1, [sp, #16]
  403144:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  403148:	add	x0, x0, #0x0
  40314c:	blr	x1
  403150:	b	403158 <__fxstat64@plt+0xe0>
  403154:	nop
  403158:	ldp	x29, x30, [sp], #32
  40315c:	ret
  403160:	stp	x29, x30, [sp, #-48]!
  403164:	mov	x29, sp
  403168:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  40316c:	add	x0, x0, #0x0
  403170:	str	x0, [sp, #40]
  403174:	ldr	x0, [sp, #40]
  403178:	str	x0, [sp, #40]
  40317c:	ldr	x1, [sp, #40]
  403180:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  403184:	add	x0, x0, #0x0
  403188:	sub	x0, x1, x0
  40318c:	asr	x0, x0, #3
  403190:	lsr	x1, x0, #63
  403194:	add	x0, x1, x0
  403198:	asr	x0, x0, #1
  40319c:	str	x0, [sp, #32]
  4031a0:	ldr	x0, [sp, #32]
  4031a4:	cmp	x0, #0x0
  4031a8:	b.eq	4031e8 <__fxstat64@plt+0x170>  // b.none
  4031ac:	adrp	x0, 40d000 <__fxstat64@plt+0x9f88>
  4031b0:	add	x0, x0, #0xb28
  4031b4:	ldr	x0, [x0]
  4031b8:	str	x0, [sp, #24]
  4031bc:	ldr	x0, [sp, #24]
  4031c0:	str	x0, [sp, #24]
  4031c4:	ldr	x0, [sp, #24]
  4031c8:	cmp	x0, #0x0
  4031cc:	b.eq	4031ec <__fxstat64@plt+0x174>  // b.none
  4031d0:	ldr	x2, [sp, #24]
  4031d4:	ldr	x1, [sp, #32]
  4031d8:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  4031dc:	add	x0, x0, #0x0
  4031e0:	blr	x2
  4031e4:	b	4031ec <__fxstat64@plt+0x174>
  4031e8:	nop
  4031ec:	ldp	x29, x30, [sp], #48
  4031f0:	ret
  4031f4:	stp	x29, x30, [sp, #-16]!
  4031f8:	mov	x29, sp
  4031fc:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  403200:	add	x0, x0, #0x8
  403204:	ldrb	w0, [x0]
  403208:	and	x0, x0, #0xff
  40320c:	cmp	x0, #0x0
  403210:	b.ne	40322c <__fxstat64@plt+0x1b4>  // b.any
  403214:	bl	4030ec <__fxstat64@plt+0x74>
  403218:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  40321c:	add	x0, x0, #0x8
  403220:	mov	w1, #0x1                   	// #1
  403224:	strb	w1, [x0]
  403228:	b	403230 <__fxstat64@plt+0x1b8>
  40322c:	nop
  403230:	ldp	x29, x30, [sp], #16
  403234:	ret
  403238:	stp	x29, x30, [sp, #-16]!
  40323c:	mov	x29, sp
  403240:	bl	403160 <__fxstat64@plt+0xe8>
  403244:	nop
  403248:	ldp	x29, x30, [sp], #16
  40324c:	ret
  403250:	sub	sp, sp, #0x20
  403254:	stp	x29, x30, [sp, #16]
  403258:	add	x29, sp, #0x10
  40325c:	str	x0, [sp, #8]
  403260:	ldr	x8, [sp, #8]
  403264:	str	x8, [sp]
  403268:	ldr	x0, [sp]
  40326c:	bl	403464 <__fxstat64@plt+0x3ec>
  403270:	ldp	x29, x30, [sp, #16]
  403274:	add	sp, sp, #0x20
  403278:	ret
  40327c:	sub	sp, sp, #0x20
  403280:	stp	x29, x30, [sp, #16]
  403284:	add	x29, sp, #0x10
  403288:	str	x0, [sp, #8]
  40328c:	ldr	x8, [sp, #8]
  403290:	str	x8, [sp]
  403294:	ldr	x0, [sp]
  403298:	bl	403464 <__fxstat64@plt+0x3ec>
  40329c:	ldp	x29, x30, [sp, #16]
  4032a0:	add	sp, sp, #0x20
  4032a4:	ret
  4032a8:	sub	sp, sp, #0x30
  4032ac:	stp	x29, x30, [sp, #32]
  4032b0:	add	x29, sp, #0x20
  4032b4:	mov	w8, wzr
  4032b8:	mov	w9, #0x1                   	// #1
  4032bc:	stur	wzr, [x29, #-4]
  4032c0:	stur	w0, [x29, #-8]
  4032c4:	str	x1, [sp, #16]
  4032c8:	ldur	w0, [x29, #-8]
  4032cc:	ldr	x1, [sp, #16]
  4032d0:	str	w8, [sp, #8]
  4032d4:	str	w9, [sp, #4]
  4032d8:	bl	403320 <__fxstat64@plt+0x2a8>
  4032dc:	ldur	w0, [x29, #-8]
  4032e0:	ldr	x1, [sp, #16]
  4032e4:	bl	403354 <__fxstat64@plt+0x2dc>
  4032e8:	str	w0, [sp, #12]
  4032ec:	bl	402908 <ask_password_agent_close@plt>
  4032f0:	bl	402918 <polkit_agent_close@plt>
  4032f4:	bl	402928 <pager_close@plt>
  4032f8:	bl	402938 <mac_selinux_finish@plt>
  4032fc:	bl	4033e4 <__fxstat64@plt+0x36c>
  403300:	ldr	w8, [sp, #12]
  403304:	cmp	w8, #0x0
  403308:	ldr	w8, [sp, #4]
  40330c:	ldr	w9, [sp, #8]
  403310:	csel	w0, w8, w9, lt  // lt = tstop
  403314:	ldp	x29, x30, [sp, #32]
  403318:	add	sp, sp, #0x30
  40331c:	ret
  403320:	sub	sp, sp, #0x10
  403324:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403328:	add	x8, x8, #0x30
  40332c:	adrp	x9, 430000 <__fxstat64@plt+0x2cf88>
  403330:	add	x9, x9, #0x38
  403334:	str	w0, [sp, #12]
  403338:	str	x1, [sp]
  40333c:	ldr	w10, [sp, #12]
  403340:	str	w10, [x8]
  403344:	ldr	x8, [sp]
  403348:	str	x8, [x9]
  40334c:	add	sp, sp, #0x10
  403350:	ret
  403354:	sub	sp, sp, #0x30
  403358:	stp	x29, x30, [sp, #32]
  40335c:	add	x29, sp, #0x20
  403360:	mov	w8, wzr
  403364:	stur	w0, [x29, #-8]
  403368:	str	x1, [sp, #16]
  40336c:	mov	w0, w8
  403370:	bl	402948 <log_parse_environment_realm@plt>
  403374:	bl	402958 <log_open@plt>
  403378:	bl	402968 <detect_container@plt>
  40337c:	cmp	w0, #0x0
  403380:	cset	w8, le
  403384:	tbnz	w8, #0, 403398 <__fxstat64@plt+0x320>
  403388:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  40338c:	add	x8, x8, #0x0
  403390:	mov	w9, #0x0                   	// #0
  403394:	strb	w9, [x8]
  403398:	ldur	w0, [x29, #-8]
  40339c:	ldr	x1, [sp, #16]
  4033a0:	bl	40348c <__fxstat64@plt+0x414>
  4033a4:	str	w0, [sp, #12]
  4033a8:	ldr	w8, [sp, #12]
  4033ac:	cmp	w8, #0x0
  4033b0:	cset	w8, gt
  4033b4:	tbnz	w8, #0, 4033c4 <__fxstat64@plt+0x34c>
  4033b8:	ldr	w8, [sp, #12]
  4033bc:	stur	w8, [x29, #-4]
  4033c0:	b	4033d4 <__fxstat64@plt+0x35c>
  4033c4:	ldur	w0, [x29, #-8]
  4033c8:	ldr	x1, [sp, #16]
  4033cc:	bl	4038ec <__fxstat64@plt+0x874>
  4033d0:	stur	w0, [x29, #-4]
  4033d4:	ldur	w0, [x29, #-4]
  4033d8:	ldp	x29, x30, [sp, #32]
  4033dc:	add	sp, sp, #0x30
  4033e0:	ret
  4033e4:	sub	sp, sp, #0x20
  4033e8:	stp	x29, x30, [sp, #16]
  4033ec:	add	x29, sp, #0x10
  4033f0:	adrp	x8, 42f000 <__fxstat64@plt+0x2bf88>
  4033f4:	ldr	x8, [x8, #3072]
  4033f8:	str	x8, [sp]
  4033fc:	cbnz	x8, 403404 <__fxstat64@plt+0x38c>
  403400:	b	403458 <__fxstat64@plt+0x3e0>
  403404:	ldr	x0, [sp]
  403408:	mov	x1, #0x8                   	// #8
  40340c:	bl	40da48 <__fxstat64@plt+0xa9d0>
  403410:	str	x0, [sp, #8]
  403414:	ldr	x8, [sp, #8]
  403418:	adrp	x9, 42f000 <__fxstat64@plt+0x2bf88>
  40341c:	ldr	x9, [x9, #3080]
  403420:	cmp	x8, x9
  403424:	b.cs	403458 <__fxstat64@plt+0x3e0>  // b.hs, b.nlast
  403428:	ldr	x8, [sp, #8]
  40342c:	ldr	x8, [x8, #8]
  403430:	ldr	x9, [sp, #8]
  403434:	ldr	x0, [x9]
  403438:	blr	x8
  40343c:	ldr	x8, [sp, #8]
  403440:	add	x8, x8, #0x10
  403444:	mov	x0, x8
  403448:	mov	x1, #0x8                   	// #8
  40344c:	bl	40da48 <__fxstat64@plt+0xa9d0>
  403450:	str	x0, [sp, #8]
  403454:	b	403414 <__fxstat64@plt+0x39c>
  403458:	ldp	x29, x30, [sp, #16]
  40345c:	add	sp, sp, #0x20
  403460:	ret
  403464:	sub	sp, sp, #0x20
  403468:	stp	x29, x30, [sp, #16]
  40346c:	add	x29, sp, #0x10
  403470:	str	x0, [sp, #8]
  403474:	ldr	x8, [sp, #8]
  403478:	ldr	x0, [x8]
  40347c:	bl	402978 <free@plt>
  403480:	ldp	x29, x30, [sp, #16]
  403484:	add	sp, sp, #0x20
  403488:	ret
  40348c:	sub	sp, sp, #0x70
  403490:	stp	x29, x30, [sp, #96]
  403494:	add	x29, sp, #0x60
  403498:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40349c:	add	x8, x8, #0xf88
  4034a0:	add	x8, x8, #0x3
  4034a4:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  4034a8:	add	x9, x9, #0xfc4
  4034ac:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  4034b0:	add	x10, x10, #0xf9e
  4034b4:	stur	w0, [x29, #-8]
  4034b8:	stur	x1, [x29, #-16]
  4034bc:	str	x8, [sp, #32]
  4034c0:	str	x9, [sp, #24]
  4034c4:	str	x10, [sp, #16]
  4034c8:	ldur	w8, [x29, #-8]
  4034cc:	cmp	w8, #0x0
  4034d0:	cset	w8, ge  // ge = tcont
  4034d4:	mov	w9, #0x1                   	// #1
  4034d8:	eor	w8, w8, #0x1
  4034dc:	eor	w8, w8, w9
  4034e0:	eor	w8, w8, w9
  4034e4:	and	w8, w8, #0x1
  4034e8:	mov	w0, w8
  4034ec:	sxtw	x10, w0
  4034f0:	cbz	x10, 403514 <__fxstat64@plt+0x49c>
  4034f4:	mov	w8, wzr
  4034f8:	mov	w0, w8
  4034fc:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  403500:	add	x1, x1, #0xf7e
  403504:	ldr	x2, [sp, #32]
  403508:	mov	w3, #0x449                 	// #1097
  40350c:	ldr	x4, [sp, #16]
  403510:	bl	402988 <log_assert_failed_realm@plt>
  403514:	ldur	x8, [x29, #-16]
  403518:	cmp	x8, #0x0
  40351c:	cset	w9, ne  // ne = any
  403520:	mov	w10, #0x1                   	// #1
  403524:	eor	w9, w9, #0x1
  403528:	eor	w9, w9, w10
  40352c:	eor	w9, w9, w10
  403530:	and	w9, w9, #0x1
  403534:	mov	w0, w9
  403538:	sxtw	x8, w0
  40353c:	cbz	x8, 403560 <__fxstat64@plt+0x4e8>
  403540:	mov	w8, wzr
  403544:	mov	w0, w8
  403548:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  40354c:	add	x1, x1, #0xfbb
  403550:	ldr	x2, [sp, #32]
  403554:	mov	w3, #0x44a                 	// #1098
  403558:	ldr	x4, [sp, #16]
  40355c:	bl	402988 <log_assert_failed_realm@plt>
  403560:	ldur	w0, [x29, #-8]
  403564:	ldur	x1, [x29, #-16]
  403568:	adrp	x2, 40d000 <__fxstat64@plt+0x9f88>
  40356c:	add	x2, x2, #0xfc0
  403570:	adrp	x3, 40d000 <__fxstat64@plt+0x9f88>
  403574:	add	x3, x3, #0xb30
  403578:	mov	x8, xzr
  40357c:	mov	x4, x8
  403580:	bl	402998 <getopt_long@plt>
  403584:	stur	w0, [x29, #-20]
  403588:	cmp	w0, #0x0
  40358c:	cset	w9, lt  // lt = tstop
  403590:	tbnz	w9, #0, 4038d4 <__fxstat64@plt+0x85c>
  403594:	ldur	w8, [x29, #-20]
  403598:	cmp	w8, #0x3f
  40359c:	str	w8, [sp, #12]
  4035a0:	b.eq	4038a4 <__fxstat64@plt+0x82c>  // b.none
  4035a4:	b	4035a8 <__fxstat64@plt+0x530>
  4035a8:	ldr	w8, [sp, #12]
  4035ac:	cmp	w8, #0x68
  4035b0:	b.eq	403638 <__fxstat64@plt+0x5c0>  // b.none
  4035b4:	b	4035b8 <__fxstat64@plt+0x540>
  4035b8:	ldr	w8, [sp, #12]
  4035bc:	cmp	w8, #0x70
  4035c0:	b.eq	403704 <__fxstat64@plt+0x68c>  // b.none
  4035c4:	b	4035c8 <__fxstat64@plt+0x550>
  4035c8:	ldr	w8, [sp, #12]
  4035cc:	cmp	w8, #0x78
  4035d0:	b.eq	4037b4 <__fxstat64@plt+0x73c>  // b.none
  4035d4:	b	4035d8 <__fxstat64@plt+0x560>
  4035d8:	ldr	w8, [sp, #12]
  4035dc:	cmp	w8, #0x100
  4035e0:	b.eq	403664 <__fxstat64@plt+0x5ec>  // b.none
  4035e4:	b	4035e8 <__fxstat64@plt+0x570>
  4035e8:	ldr	w8, [sp, #12]
  4035ec:	cmp	w8, #0x101
  4035f0:	b.eq	4036b4 <__fxstat64@plt+0x63c>  // b.none
  4035f4:	b	4035f8 <__fxstat64@plt+0x580>
  4035f8:	ldr	w8, [sp, #12]
  4035fc:	cmp	w8, #0x102
  403600:	b.eq	403658 <__fxstat64@plt+0x5e0>  // b.none
  403604:	b	403608 <__fxstat64@plt+0x590>
  403608:	ldr	w8, [sp, #12]
  40360c:	cmp	w8, #0x103
  403610:	b.eq	403864 <__fxstat64@plt+0x7ec>  // b.none
  403614:	b	403618 <__fxstat64@plt+0x5a0>
  403618:	ldr	w8, [sp, #12]
  40361c:	cmp	w8, #0x104
  403620:	b.eq	403878 <__fxstat64@plt+0x800>  // b.none
  403624:	b	403628 <__fxstat64@plt+0x5b0>
  403628:	ldr	w8, [sp, #12]
  40362c:	cmp	w8, #0x105
  403630:	b.eq	403890 <__fxstat64@plt+0x818>  // b.none
  403634:	b	4038b0 <__fxstat64@plt+0x838>
  403638:	mov	w8, wzr
  40363c:	mov	w0, w8
  403640:	mov	x9, xzr
  403644:	mov	x1, x9
  403648:	mov	x2, x9
  40364c:	bl	403928 <__fxstat64@plt+0x8b0>
  403650:	stur	wzr, [x29, #-4]
  403654:	b	4038dc <__fxstat64@plt+0x864>
  403658:	bl	4029a8 <version@plt>
  40365c:	stur	w0, [x29, #-4]
  403660:	b	4038dc <__fxstat64@plt+0x864>
  403664:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403668:	add	x8, x8, #0x40
  40366c:	ldr	x1, [x8]
  403670:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  403674:	add	x0, x0, #0x10
  403678:	bl	4029b8 <free_and_strdup@plt>
  40367c:	stur	w0, [x29, #-24]
  403680:	ldur	w9, [x29, #-24]
  403684:	cmp	w9, #0x0
  403688:	cset	w9, ge  // ge = tcont
  40368c:	tbnz	w9, #0, 4036b0 <__fxstat64@plt+0x638>
  403690:	mov	w8, wzr
  403694:	mov	w0, w8
  403698:	ldr	x1, [sp, #32]
  40369c:	mov	w2, #0x459                 	// #1113
  4036a0:	ldr	x3, [sp, #24]
  4036a4:	bl	4029c8 <log_oom_internal@plt>
  4036a8:	stur	w0, [x29, #-4]
  4036ac:	b	4038dc <__fxstat64@plt+0x864>
  4036b0:	b	4038d0 <__fxstat64@plt+0x858>
  4036b4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4036b8:	add	x8, x8, #0x40
  4036bc:	ldr	x1, [x8]
  4036c0:	adrp	x0, 430000 <__fxstat64@plt+0x2cf88>
  4036c4:	add	x0, x0, #0x18
  4036c8:	bl	4029b8 <free_and_strdup@plt>
  4036cc:	stur	w0, [x29, #-24]
  4036d0:	ldur	w9, [x29, #-24]
  4036d4:	cmp	w9, #0x0
  4036d8:	cset	w9, ge  // ge = tcont
  4036dc:	tbnz	w9, #0, 403700 <__fxstat64@plt+0x688>
  4036e0:	mov	w8, wzr
  4036e4:	mov	w0, w8
  4036e8:	ldr	x1, [sp, #32]
  4036ec:	mov	w2, #0x45f                 	// #1119
  4036f0:	ldr	x3, [sp, #24]
  4036f4:	bl	4029c8 <log_oom_internal@plt>
  4036f8:	stur	w0, [x29, #-4]
  4036fc:	b	4038dc <__fxstat64@plt+0x864>
  403700:	b	4038d0 <__fxstat64@plt+0x858>
  403704:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403708:	add	x8, x8, #0x20
  40370c:	ldrb	w9, [x8]
  403710:	tbnz	w9, #0, 403718 <__fxstat64@plt+0x6a0>
  403714:	b	4037a0 <__fxstat64@plt+0x728>
  403718:	mov	w8, #0x3                   	// #3
  40371c:	stur	w8, [x29, #-28]
  403720:	mov	w8, #0x16                  	// #22
  403724:	movk	w8, #0x4000, lsl #16
  403728:	stur	w8, [x29, #-32]
  40372c:	stur	wzr, [x29, #-36]
  403730:	ldur	w0, [x29, #-36]
  403734:	bl	4029d8 <log_get_max_level_realm@plt>
  403738:	ldur	w8, [x29, #-28]
  40373c:	and	w8, w8, #0x7
  403740:	cmp	w0, w8
  403744:	b.lt	403778 <__fxstat64@plt+0x700>  // b.tstop
  403748:	ldur	w8, [x29, #-36]
  40374c:	ldur	w9, [x29, #-28]
  403750:	orr	w0, w9, w8, lsl #10
  403754:	ldur	w1, [x29, #-32]
  403758:	ldr	x2, [sp, #32]
  40375c:	mov	w3, #0x465                 	// #1125
  403760:	ldr	x4, [sp, #24]
  403764:	adrp	x5, 40d000 <__fxstat64@plt+0x9f88>
  403768:	add	x5, x5, #0xfcf
  40376c:	bl	4029e8 <log_internal_realm@plt>
  403770:	str	w0, [sp, #8]
  403774:	b	40378c <__fxstat64@plt+0x714>
  403778:	ldur	w0, [x29, #-32]
  40377c:	bl	4029f8 <abs@plt>
  403780:	mov	w8, wzr
  403784:	subs	w8, w8, w0, uxtb
  403788:	str	w8, [sp, #8]
  40378c:	ldr	w8, [sp, #8]
  403790:	stur	w8, [x29, #-40]
  403794:	ldur	w8, [x29, #-40]
  403798:	stur	w8, [x29, #-4]
  40379c:	b	4038dc <__fxstat64@plt+0x864>
  4037a0:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4037a4:	add	x8, x8, #0x21
  4037a8:	mov	w9, #0x1                   	// #1
  4037ac:	strb	w9, [x8]
  4037b0:	b	4038d0 <__fxstat64@plt+0x858>
  4037b4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4037b8:	add	x8, x8, #0x21
  4037bc:	ldrb	w9, [x8]
  4037c0:	tbnz	w9, #0, 4037c8 <__fxstat64@plt+0x750>
  4037c4:	b	403850 <__fxstat64@plt+0x7d8>
  4037c8:	mov	w8, #0x3                   	// #3
  4037cc:	stur	w8, [x29, #-44]
  4037d0:	mov	w8, #0x16                  	// #22
  4037d4:	movk	w8, #0x4000, lsl #16
  4037d8:	str	w8, [sp, #48]
  4037dc:	str	wzr, [sp, #44]
  4037e0:	ldr	w0, [sp, #44]
  4037e4:	bl	4029d8 <log_get_max_level_realm@plt>
  4037e8:	ldur	w8, [x29, #-44]
  4037ec:	and	w8, w8, #0x7
  4037f0:	cmp	w0, w8
  4037f4:	b.lt	403828 <__fxstat64@plt+0x7b0>  // b.tstop
  4037f8:	ldr	w8, [sp, #44]
  4037fc:	ldur	w9, [x29, #-44]
  403800:	orr	w0, w9, w8, lsl #10
  403804:	ldr	w1, [sp, #48]
  403808:	ldr	x2, [sp, #32]
  40380c:	mov	w3, #0x46c                 	// #1132
  403810:	ldr	x4, [sp, #24]
  403814:	adrp	x5, 40d000 <__fxstat64@plt+0x9f88>
  403818:	add	x5, x5, #0xfcf
  40381c:	bl	4029e8 <log_internal_realm@plt>
  403820:	str	w0, [sp, #4]
  403824:	b	40383c <__fxstat64@plt+0x7c4>
  403828:	ldr	w0, [sp, #48]
  40382c:	bl	4029f8 <abs@plt>
  403830:	mov	w8, wzr
  403834:	subs	w8, w8, w0, uxtb
  403838:	str	w8, [sp, #4]
  40383c:	ldr	w8, [sp, #4]
  403840:	str	w8, [sp, #40]
  403844:	ldr	w8, [sp, #40]
  403848:	stur	w8, [x29, #-4]
  40384c:	b	4038dc <__fxstat64@plt+0x864>
  403850:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403854:	add	x8, x8, #0x20
  403858:	mov	w9, #0x1                   	// #1
  40385c:	strb	w9, [x8]
  403860:	b	4038d0 <__fxstat64@plt+0x858>
  403864:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403868:	add	x8, x8, #0x0
  40386c:	mov	w9, #0x0                   	// #0
  403870:	strb	w9, [x8]
  403874:	b	4038d0 <__fxstat64@plt+0x858>
  403878:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  40387c:	add	x8, x8, #0x24
  403880:	ldr	w9, [x8]
  403884:	orr	w9, w9, #0x1
  403888:	str	w9, [x8]
  40388c:	b	4038d0 <__fxstat64@plt+0x858>
  403890:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403894:	add	x8, x8, #0x28
  403898:	mov	w9, #0x1                   	// #1
  40389c:	strb	w9, [x8]
  4038a0:	b	4038d0 <__fxstat64@plt+0x858>
  4038a4:	mov	w8, #0xffffffea            	// #-22
  4038a8:	stur	w8, [x29, #-4]
  4038ac:	b	4038dc <__fxstat64@plt+0x864>
  4038b0:	mov	w8, wzr
  4038b4:	mov	w0, w8
  4038b8:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4038bc:	add	x1, x1, #0x10
  4038c0:	ldr	x2, [sp, #32]
  4038c4:	mov	w3, #0x480                 	// #1152
  4038c8:	ldr	x4, [sp, #16]
  4038cc:	bl	402a08 <log_assert_failed_unreachable_realm@plt>
  4038d0:	b	403560 <__fxstat64@plt+0x4e8>
  4038d4:	mov	w8, #0x1                   	// #1
  4038d8:	stur	w8, [x29, #-4]
  4038dc:	ldur	w0, [x29, #-4]
  4038e0:	ldp	x29, x30, [sp, #96]
  4038e4:	add	sp, sp, #0x70
  4038e8:	ret
  4038ec:	sub	sp, sp, #0x20
  4038f0:	stp	x29, x30, [sp, #16]
  4038f4:	add	x29, sp, #0x10
  4038f8:	adrp	x2, 40d000 <__fxstat64@plt+0x9f88>
  4038fc:	add	x2, x2, #0xcb0
  403900:	mov	x8, xzr
  403904:	stur	w0, [x29, #-4]
  403908:	str	x1, [sp]
  40390c:	ldur	w0, [x29, #-4]
  403910:	ldr	x1, [sp]
  403914:	mov	x3, x8
  403918:	bl	402a18 <dispatch_verb@plt>
  40391c:	ldp	x29, x30, [sp, #16]
  403920:	add	sp, sp, #0x20
  403924:	ret
  403928:	sub	sp, sp, #0x60
  40392c:	stp	x29, x30, [sp, #80]
  403930:	add	x29, sp, #0x50
  403934:	mov	x8, xzr
  403938:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  40393c:	add	x9, x9, #0x1f
  403940:	adrp	x10, 40e000 <__fxstat64@plt+0xaf88>
  403944:	add	x10, x10, #0x27
  403948:	adrp	x11, 40d000 <__fxstat64@plt+0x9f88>
  40394c:	add	x11, x11, #0xf88
  403950:	add	x11, x11, #0x3
  403954:	sub	x12, x29, #0x20
  403958:	stur	w0, [x29, #-8]
  40395c:	stur	x1, [x29, #-16]
  403960:	stur	x2, [x29, #-24]
  403964:	stur	x8, [x29, #-32]
  403968:	mov	x0, x9
  40396c:	mov	x1, x10
  403970:	mov	x2, x12
  403974:	str	x11, [sp, #32]
  403978:	bl	402a28 <terminal_urlify_man@plt>
  40397c:	stur	w0, [x29, #-36]
  403980:	ldur	w13, [x29, #-36]
  403984:	cmp	w13, #0x0
  403988:	cset	w13, ge  // ge = tcont
  40398c:	tbnz	w13, #0, 4039bc <__fxstat64@plt+0x944>
  403990:	mov	w8, wzr
  403994:	mov	w0, w8
  403998:	ldr	x1, [sp, #32]
  40399c:	mov	w2, #0x40a                 	// #1034
  4039a0:	adrp	x3, 40d000 <__fxstat64@plt+0x9f88>
  4039a4:	add	x3, x3, #0xf10
  4039a8:	bl	4029c8 <log_oom_internal@plt>
  4039ac:	stur	w0, [x29, #-4]
  4039b0:	mov	w8, #0x1                   	// #1
  4039b4:	str	w8, [sp, #40]
  4039b8:	b	403a08 <__fxstat64@plt+0x990>
  4039bc:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4039c0:	add	x8, x8, #0x48
  4039c4:	ldr	x1, [x8]
  4039c8:	str	x1, [sp, #24]
  4039cc:	bl	403a20 <__fxstat64@plt+0x9a8>
  4039d0:	str	x0, [sp, #16]
  4039d4:	bl	403a64 <__fxstat64@plt+0x9ec>
  4039d8:	ldur	x4, [x29, #-32]
  4039dc:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4039e0:	add	x8, x8, #0x29
  4039e4:	str	x0, [sp, #8]
  4039e8:	mov	x0, x8
  4039ec:	ldr	x1, [sp, #24]
  4039f0:	ldr	x2, [sp, #16]
  4039f4:	ldr	x3, [sp, #8]
  4039f8:	bl	402a38 <printf@plt>
  4039fc:	stur	wzr, [x29, #-4]
  403a00:	mov	w9, #0x1                   	// #1
  403a04:	str	w9, [sp, #40]
  403a08:	sub	x0, x29, #0x20
  403a0c:	bl	403464 <__fxstat64@plt+0x3ec>
  403a10:	ldur	w0, [x29, #-4]
  403a14:	ldp	x29, x30, [sp, #80]
  403a18:	add	sp, sp, #0x60
  403a1c:	ret
  403a20:	sub	sp, sp, #0x20
  403a24:	stp	x29, x30, [sp, #16]
  403a28:	add	x29, sp, #0x10
  403a2c:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403a30:	add	x8, x8, #0x5b2
  403a34:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  403a38:	add	x9, x9, #0x5bc
  403a3c:	str	x8, [sp, #8]
  403a40:	str	x9, [sp]
  403a44:	bl	402a48 <colors_enabled@plt>
  403a48:	tst	w0, #0x1
  403a4c:	ldr	x8, [sp, #8]
  403a50:	ldr	x9, [sp]
  403a54:	csel	x0, x8, x9, ne  // ne = any
  403a58:	ldp	x29, x30, [sp, #16]
  403a5c:	add	sp, sp, #0x20
  403a60:	ret
  403a64:	sub	sp, sp, #0x20
  403a68:	stp	x29, x30, [sp, #16]
  403a6c:	add	x29, sp, #0x10
  403a70:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403a74:	add	x8, x8, #0x5bd
  403a78:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  403a7c:	add	x9, x9, #0x5bc
  403a80:	str	x8, [sp, #8]
  403a84:	str	x9, [sp]
  403a88:	bl	402a48 <colors_enabled@plt>
  403a8c:	tst	w0, #0x1
  403a90:	ldr	x8, [sp, #8]
  403a94:	ldr	x9, [sp]
  403a98:	csel	x0, x8, x9, ne  // ne = any
  403a9c:	ldp	x29, x30, [sp, #16]
  403aa0:	add	sp, sp, #0x20
  403aa4:	ret
  403aa8:	stp	x29, x30, [sp, #-32]!
  403aac:	str	x28, [sp, #16]
  403ab0:	mov	x29, sp
  403ab4:	sub	sp, sp, #0x250
  403ab8:	sub	x8, x29, #0x38
  403abc:	mov	x9, xzr
  403ac0:	mov	x3, x9
  403ac4:	adrp	x10, 430000 <__fxstat64@plt+0x2cf88>
  403ac8:	add	x10, x10, #0x21
  403acc:	adrp	x11, 430000 <__fxstat64@plt+0x2cf88>
  403ad0:	add	x11, x11, #0x10
  403ad4:	adrp	x12, 40d000 <__fxstat64@plt+0x9f88>
  403ad8:	add	x12, x12, #0xf88
  403adc:	add	x12, x12, #0x3
  403ae0:	adrp	x13, 40e000 <__fxstat64@plt+0xaf88>
  403ae4:	add	x13, x13, #0x629
  403ae8:	adrp	x14, 40e000 <__fxstat64@plt+0xaf88>
  403aec:	add	x14, x14, #0x813
  403af0:	adrp	x15, 40d000 <__fxstat64@plt+0x9f88>
  403af4:	add	x15, x15, #0xe30
  403af8:	sub	x4, x29, #0x28
  403afc:	stur	w0, [x29, #-8]
  403b00:	str	x1, [x8, #40]
  403b04:	str	x2, [x8, #32]
  403b08:	str	xzr, [x8, #16]
  403b0c:	str	xzr, [x8, #24]
  403b10:	str	xzr, [x8]
  403b14:	str	xzr, [x8, #8]
  403b18:	stur	x8, [x29, #-232]
  403b1c:	stur	x3, [x29, #-240]
  403b20:	stur	x9, [x29, #-248]
  403b24:	stur	x10, [x29, #-256]
  403b28:	str	x11, [sp, #328]
  403b2c:	str	x12, [sp, #320]
  403b30:	str	x13, [sp, #312]
  403b34:	str	x14, [sp, #304]
  403b38:	str	x15, [sp, #296]
  403b3c:	str	x4, [sp, #288]
  403b40:	bl	402a58 <geteuid@plt>
  403b44:	cmp	w0, #0x0
  403b48:	cset	w16, ne  // ne = any
  403b4c:	and	w0, w16, #0x1
  403b50:	ldur	x1, [x29, #-240]
  403b54:	ldur	x2, [x29, #-248]
  403b58:	ldur	x3, [x29, #-248]
  403b5c:	ldr	x4, [sp, #288]
  403b60:	bl	405db0 <__fxstat64@plt+0x2d38>
  403b64:	stur	w0, [x29, #-60]
  403b68:	ldur	x8, [x29, #-256]
  403b6c:	ldrb	w16, [x8]
  403b70:	tbnz	w16, #0, 403b78 <__fxstat64@plt+0xb00>
  403b74:	b	403c34 <__fxstat64@plt+0xbbc>
  403b78:	ldur	w8, [x29, #-60]
  403b7c:	mov	w9, #0xfffffff3            	// #-13
  403b80:	cmp	w8, w9
  403b84:	b.ne	403c0c <__fxstat64@plt+0xb94>  // b.any
  403b88:	mov	w8, #0x3                   	// #3
  403b8c:	stur	w8, [x29, #-68]
  403b90:	ldur	w8, [x29, #-60]
  403b94:	stur	w8, [x29, #-72]
  403b98:	stur	wzr, [x29, #-76]
  403b9c:	ldur	w0, [x29, #-76]
  403ba0:	bl	4029d8 <log_get_max_level_realm@plt>
  403ba4:	ldur	w8, [x29, #-68]
  403ba8:	and	w8, w8, #0x7
  403bac:	cmp	w0, w8
  403bb0:	b.lt	403be4 <__fxstat64@plt+0xb6c>  // b.tstop
  403bb4:	ldur	w8, [x29, #-76]
  403bb8:	ldur	w9, [x29, #-68]
  403bbc:	orr	w0, w9, w8, lsl #10
  403bc0:	ldur	w1, [x29, #-72]
  403bc4:	ldr	x2, [sp, #320]
  403bc8:	mov	w3, #0x496                 	// #1174
  403bcc:	ldr	x4, [sp, #312]
  403bd0:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  403bd4:	add	x5, x5, #0x635
  403bd8:	bl	4029e8 <log_internal_realm@plt>
  403bdc:	str	w0, [sp, #284]
  403be0:	b	403bf8 <__fxstat64@plt+0xb80>
  403be4:	ldur	w0, [x29, #-72]
  403be8:	bl	4029f8 <abs@plt>
  403bec:	mov	w8, wzr
  403bf0:	subs	w8, w8, w0, uxtb
  403bf4:	str	w8, [sp, #284]
  403bf8:	ldr	w8, [sp, #284]
  403bfc:	stur	w8, [x29, #-80]
  403c00:	ldur	w8, [x29, #-80]
  403c04:	stur	w8, [x29, #-4]
  403c08:	b	4044f8 <__fxstat64@plt+0x1480>
  403c0c:	ldur	w8, [x29, #-60]
  403c10:	cmp	w8, #0x0
  403c14:	cset	w8, ge  // ge = tcont
  403c18:	tbnz	w8, #0, 403c28 <__fxstat64@plt+0xbb0>
  403c1c:	ldur	w8, [x29, #-60]
  403c20:	stur	w8, [x29, #-4]
  403c24:	b	4044f8 <__fxstat64@plt+0x1480>
  403c28:	ldr	x8, [sp, #328]
  403c2c:	ldr	x0, [x8]
  403c30:	bl	402a68 <puts@plt>
  403c34:	bl	402a58 <geteuid@plt>
  403c38:	cmp	w0, #0x0
  403c3c:	cset	w8, ne  // ne = any
  403c40:	and	w0, w8, #0x1
  403c44:	sub	x1, x29, #0x38
  403c48:	bl	405f98 <__fxstat64@plt+0x2f20>
  403c4c:	stur	w0, [x29, #-60]
  403c50:	adrp	x9, 430000 <__fxstat64@plt+0x2cf88>
  403c54:	add	x9, x9, #0x20
  403c58:	ldrb	w8, [x9]
  403c5c:	tbnz	w8, #0, 403c64 <__fxstat64@plt+0xbec>
  403c60:	b	403db4 <__fxstat64@plt+0xd3c>
  403c64:	ldur	w8, [x29, #-60]
  403c68:	mov	w9, #0xfffffff3            	// #-13
  403c6c:	cmp	w8, w9
  403c70:	b.ne	403cf8 <__fxstat64@plt+0xc80>  // b.any
  403c74:	mov	w8, #0x3                   	// #3
  403c78:	stur	w8, [x29, #-84]
  403c7c:	ldur	w8, [x29, #-60]
  403c80:	stur	w8, [x29, #-88]
  403c84:	stur	wzr, [x29, #-92]
  403c88:	ldur	w0, [x29, #-92]
  403c8c:	bl	4029d8 <log_get_max_level_realm@plt>
  403c90:	ldur	w8, [x29, #-84]
  403c94:	and	w8, w8, #0x7
  403c98:	cmp	w0, w8
  403c9c:	b.lt	403cd0 <__fxstat64@plt+0xc58>  // b.tstop
  403ca0:	ldur	w8, [x29, #-92]
  403ca4:	ldur	w9, [x29, #-84]
  403ca8:	orr	w0, w9, w8, lsl #10
  403cac:	ldur	w1, [x29, #-88]
  403cb0:	ldr	x2, [sp, #320]
  403cb4:	mov	w3, #0x4a0                 	// #1184
  403cb8:	ldr	x4, [sp, #312]
  403cbc:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  403cc0:	add	x5, x5, #0x65a
  403cc4:	bl	4029e8 <log_internal_realm@plt>
  403cc8:	str	w0, [sp, #280]
  403ccc:	b	403ce4 <__fxstat64@plt+0xc6c>
  403cd0:	ldur	w0, [x29, #-88]
  403cd4:	bl	4029f8 <abs@plt>
  403cd8:	mov	w8, wzr
  403cdc:	subs	w8, w8, w0, uxtb
  403ce0:	str	w8, [sp, #280]
  403ce4:	ldr	w8, [sp, #280]
  403ce8:	stur	w8, [x29, #-96]
  403cec:	ldur	w8, [x29, #-96]
  403cf0:	stur	w8, [x29, #-4]
  403cf4:	b	4044f8 <__fxstat64@plt+0x1480>
  403cf8:	ldur	w8, [x29, #-60]
  403cfc:	cmp	w8, #0x0
  403d00:	cset	w8, ge  // ge = tcont
  403d04:	tbnz	w8, #0, 403d14 <__fxstat64@plt+0xc9c>
  403d08:	ldur	w8, [x29, #-60]
  403d0c:	stur	w8, [x29, #-4]
  403d10:	b	4044f8 <__fxstat64@plt+0x1480>
  403d14:	bl	406190 <__fxstat64@plt+0x3118>
  403d18:	stur	x0, [x29, #-104]
  403d1c:	ldur	x8, [x29, #-104]
  403d20:	cbnz	x8, 403dac <__fxstat64@plt+0xd34>
  403d24:	mov	w8, #0x3                   	// #3
  403d28:	stur	w8, [x29, #-108]
  403d2c:	mov	w8, #0xd                   	// #13
  403d30:	movk	w8, #0x4000, lsl #16
  403d34:	stur	w8, [x29, #-112]
  403d38:	stur	wzr, [x29, #-116]
  403d3c:	ldur	w0, [x29, #-116]
  403d40:	bl	4029d8 <log_get_max_level_realm@plt>
  403d44:	ldur	w8, [x29, #-108]
  403d48:	and	w8, w8, #0x7
  403d4c:	cmp	w0, w8
  403d50:	b.lt	403d84 <__fxstat64@plt+0xd0c>  // b.tstop
  403d54:	ldur	w8, [x29, #-116]
  403d58:	ldur	w9, [x29, #-108]
  403d5c:	orr	w0, w9, w8, lsl #10
  403d60:	ldur	w1, [x29, #-112]
  403d64:	ldr	x2, [sp, #320]
  403d68:	mov	w3, #0x4a6                 	// #1190
  403d6c:	ldr	x4, [sp, #312]
  403d70:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  403d74:	add	x5, x5, #0x65a
  403d78:	bl	4029e8 <log_internal_realm@plt>
  403d7c:	str	w0, [sp, #276]
  403d80:	b	403d98 <__fxstat64@plt+0xd20>
  403d84:	ldur	w0, [x29, #-112]
  403d88:	bl	4029f8 <abs@plt>
  403d8c:	mov	w8, wzr
  403d90:	subs	w8, w8, w0, uxtb
  403d94:	str	w8, [sp, #276]
  403d98:	ldr	w8, [sp, #276]
  403d9c:	stur	w8, [x29, #-120]
  403da0:	ldur	w8, [x29, #-120]
  403da4:	stur	w8, [x29, #-4]
  403da8:	b	4044f8 <__fxstat64@plt+0x1480>
  403dac:	ldur	x0, [x29, #-104]
  403db0:	bl	402a68 <puts@plt>
  403db4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403db8:	add	x8, x8, #0x21
  403dbc:	ldrb	w9, [x8]
  403dc0:	tbnz	w9, #0, 403dd8 <__fxstat64@plt+0xd60>
  403dc4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403dc8:	add	x8, x8, #0x20
  403dcc:	ldrb	w9, [x8]
  403dd0:	tbnz	w9, #0, 403dd8 <__fxstat64@plt+0xd60>
  403dd4:	b	403de0 <__fxstat64@plt+0xd68>
  403dd8:	stur	wzr, [x29, #-4]
  403ddc:	b	4044f8 <__fxstat64@plt+0x1480>
  403de0:	stur	wzr, [x29, #-60]
  403de4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  403de8:	add	x8, x8, #0x24
  403dec:	ldr	w0, [x8]
  403df0:	bl	402a78 <pager_open@plt>
  403df4:	bl	402a88 <is_efi_boot@plt>
  403df8:	tbnz	w0, #0, 403e00 <__fxstat64@plt+0xd88>
  403dfc:	b	404414 <__fxstat64@plt+0x139c>
  403e00:	sub	x1, x29, #0x80
  403e04:	mov	x8, xzr
  403e08:	stur	x8, [x29, #-128]
  403e0c:	sub	x9, x29, #0x88
  403e10:	stur	x8, [x29, #-136]
  403e14:	sub	x10, x29, #0x90
  403e18:	stur	x8, [x29, #-144]
  403e1c:	sub	x11, x29, #0x98
  403e20:	stur	x8, [x29, #-152]
  403e24:	sub	x12, x29, #0xa0
  403e28:	stur	x8, [x29, #-160]
  403e2c:	stur	xzr, [x29, #-176]
  403e30:	stur	xzr, [x29, #-168]
  403e34:	sub	x0, x29, #0xb8
  403e38:	stur	xzr, [x29, #-184]
  403e3c:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403e40:	add	x8, x8, #0x737
  403e44:	str	x0, [sp, #264]
  403e48:	mov	x0, x8
  403e4c:	str	x9, [sp, #256]
  403e50:	str	x10, [sp, #248]
  403e54:	str	x11, [sp, #240]
  403e58:	str	x12, [sp, #232]
  403e5c:	bl	4061d4 <__fxstat64@plt+0x315c>
  403e60:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  403e64:	add	x0, x0, #0x74a
  403e68:	ldr	x1, [sp, #256]
  403e6c:	bl	4061d4 <__fxstat64@plt+0x315c>
  403e70:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  403e74:	add	x0, x0, #0x75d
  403e78:	ldr	x1, [sp, #248]
  403e7c:	bl	4061d4 <__fxstat64@plt+0x315c>
  403e80:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  403e84:	add	x0, x0, #0x768
  403e88:	ldr	x1, [sp, #232]
  403e8c:	bl	4061d4 <__fxstat64@plt+0x315c>
  403e90:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  403e94:	add	x0, x0, #0x771
  403e98:	ldr	x1, [sp, #240]
  403e9c:	bl	4061d4 <__fxstat64@plt+0x315c>
  403ea0:	ldr	x0, [sp, #264]
  403ea4:	bl	402a98 <efi_loader_get_features@plt>
  403ea8:	ldur	x8, [x29, #-152]
  403eac:	cbz	x8, 403eb8 <__fxstat64@plt+0xe40>
  403eb0:	ldur	x0, [x29, #-152]
  403eb4:	bl	402aa8 <efi_tilt_backslashes@plt>
  403eb8:	sub	x0, x29, #0xb0
  403ebc:	bl	402ab8 <efi_loader_get_device_part_uuid@plt>
  403ec0:	stur	w0, [x29, #-64]
  403ec4:	ldur	w8, [x29, #-64]
  403ec8:	cmp	w8, #0x0
  403ecc:	cset	w8, ge  // ge = tcont
  403ed0:	tbnz	w8, #0, 403f64 <__fxstat64@plt+0xeec>
  403ed4:	ldur	w8, [x29, #-64]
  403ed8:	mov	w9, #0xfffffffe            	// #-2
  403edc:	cmp	w8, w9
  403ee0:	b.eq	403f64 <__fxstat64@plt+0xeec>  // b.none
  403ee4:	mov	w8, #0x4                   	// #4
  403ee8:	stur	w8, [x29, #-196]
  403eec:	ldur	w8, [x29, #-64]
  403ef0:	stur	w8, [x29, #-200]
  403ef4:	stur	wzr, [x29, #-204]
  403ef8:	ldur	w0, [x29, #-204]
  403efc:	bl	4029d8 <log_get_max_level_realm@plt>
  403f00:	ldur	w8, [x29, #-196]
  403f04:	and	w8, w8, #0x7
  403f08:	cmp	w0, w8
  403f0c:	b.lt	403f40 <__fxstat64@plt+0xec8>  // b.tstop
  403f10:	ldur	w8, [x29, #-204]
  403f14:	ldur	w9, [x29, #-196]
  403f18:	orr	w0, w9, w8, lsl #10
  403f1c:	ldur	w1, [x29, #-200]
  403f20:	ldr	x2, [sp, #320]
  403f24:	mov	w3, #0x4d2                 	// #1234
  403f28:	ldr	x4, [sp, #312]
  403f2c:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  403f30:	add	x5, x5, #0x787
  403f34:	bl	4029e8 <log_internal_realm@plt>
  403f38:	str	w0, [sp, #228]
  403f3c:	b	403f54 <__fxstat64@plt+0xedc>
  403f40:	ldur	w0, [x29, #-200]
  403f44:	bl	4029f8 <abs@plt>
  403f48:	mov	w8, wzr
  403f4c:	subs	w8, w8, w0, uxtb
  403f50:	str	w8, [sp, #228]
  403f54:	ldr	w8, [sp, #228]
  403f58:	stur	w8, [x29, #-208]
  403f5c:	ldur	w8, [x29, #-208]
  403f60:	stur	w8, [x29, #-60]
  403f64:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  403f68:	add	x0, x0, #0x7bc
  403f6c:	bl	402a38 <printf@plt>
  403f70:	bl	403a20 <__fxstat64@plt+0x9a8>
  403f74:	ldur	x8, [x29, #-128]
  403f78:	str	x0, [sp, #216]
  403f7c:	mov	x0, x8
  403f80:	bl	406348 <__fxstat64@plt+0x32d0>
  403f84:	ldur	x8, [x29, #-136]
  403f88:	str	x0, [sp, #208]
  403f8c:	mov	x0, x8
  403f90:	bl	406348 <__fxstat64@plt+0x32d0>
  403f94:	str	x0, [sp, #200]
  403f98:	bl	403a64 <__fxstat64@plt+0x9ec>
  403f9c:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403fa0:	add	x8, x8, #0x7c5
  403fa4:	str	x0, [sp, #192]
  403fa8:	mov	x0, x8
  403fac:	ldr	x1, [sp, #216]
  403fb0:	ldr	x2, [sp, #208]
  403fb4:	ldr	x3, [sp, #200]
  403fb8:	ldr	x4, [sp, #192]
  403fbc:	bl	402a38 <printf@plt>
  403fc0:	bl	402ac8 <is_efi_secure_boot@plt>
  403fc4:	and	w0, w0, #0x1
  403fc8:	bl	406384 <__fxstat64@plt+0x330c>
  403fcc:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403fd0:	add	x8, x8, #0x7e1
  403fd4:	str	x0, [sp, #184]
  403fd8:	mov	x0, x8
  403fdc:	ldr	x1, [sp, #184]
  403fe0:	bl	402a38 <printf@plt>
  403fe4:	bl	402ad8 <is_efi_secure_boot_setup_mode@plt>
  403fe8:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  403fec:	add	x8, x8, #0x80e
  403ff0:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  403ff4:	add	x9, x9, #0x808
  403ff8:	tst	w0, #0x1
  403ffc:	csel	x1, x9, x8, ne  // ne = any
  404000:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404004:	add	x0, x0, #0x7f5
  404008:	bl	402a38 <printf@plt>
  40400c:	ldr	x8, [sp, #304]
  404010:	mov	x0, x8
  404014:	bl	402a38 <printf@plt>
  404018:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  40401c:	add	x8, x8, #0x815
  404020:	mov	x0, x8
  404024:	bl	402a38 <printf@plt>
  404028:	bl	403a20 <__fxstat64@plt+0x9a8>
  40402c:	ldur	x8, [x29, #-144]
  404030:	str	x0, [sp, #176]
  404034:	mov	x0, x8
  404038:	bl	406348 <__fxstat64@plt+0x32d0>
  40403c:	str	x0, [sp, #168]
  404040:	bl	403a64 <__fxstat64@plt+0x9ec>
  404044:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  404048:	add	x8, x8, #0x82b
  40404c:	str	x0, [sp, #160]
  404050:	mov	x0, x8
  404054:	ldr	x1, [sp, #176]
  404058:	ldr	x2, [sp, #168]
  40405c:	ldr	x3, [sp, #160]
  404060:	bl	402a38 <printf@plt>
  404064:	stur	xzr, [x29, #-192]
  404068:	ldur	x8, [x29, #-192]
  40406c:	cmp	x8, #0x7
  404070:	b.cs	404174 <__fxstat64@plt+0x10fc>  // b.hs, b.nlast
  404074:	ldur	x8, [x29, #-192]
  404078:	cbnz	x8, 40408c <__fxstat64@plt+0x1014>
  40407c:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404080:	add	x0, x0, #0x842
  404084:	bl	402a38 <printf@plt>
  404088:	b	404098 <__fxstat64@plt+0x1020>
  40408c:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404090:	add	x0, x0, #0x852
  404094:	bl	402a38 <printf@plt>
  404098:	ldur	x8, [x29, #-184]
  40409c:	ldur	x9, [x29, #-192]
  4040a0:	mov	x10, #0x10                  	// #16
  4040a4:	mul	x9, x10, x9
  4040a8:	ldr	x10, [sp, #296]
  4040ac:	ldr	x9, [x10, x9]
  4040b0:	bic	x8, x9, x8
  4040b4:	cbnz	x8, 404110 <__fxstat64@plt+0x1098>
  4040b8:	bl	4063b4 <__fxstat64@plt+0x333c>
  4040bc:	mov	w8, #0xb                   	// #11
  4040c0:	str	x0, [sp, #152]
  4040c4:	mov	w0, w8
  4040c8:	bl	402ae8 <special_glyph@plt>
  4040cc:	str	x0, [sp, #144]
  4040d0:	bl	403a64 <__fxstat64@plt+0x9ec>
  4040d4:	ldur	x9, [x29, #-192]
  4040d8:	mov	x10, #0x10                  	// #16
  4040dc:	mul	x9, x10, x9
  4040e0:	ldr	x10, [sp, #296]
  4040e4:	add	x9, x10, x9
  4040e8:	ldr	x4, [x9, #8]
  4040ec:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  4040f0:	add	x9, x9, #0x862
  4040f4:	str	x0, [sp, #136]
  4040f8:	mov	x0, x9
  4040fc:	ldr	x1, [sp, #152]
  404100:	ldr	x2, [sp, #144]
  404104:	ldr	x3, [sp, #136]
  404108:	bl	402a38 <printf@plt>
  40410c:	b	404164 <__fxstat64@plt+0x10ec>
  404110:	bl	4063f8 <__fxstat64@plt+0x3380>
  404114:	mov	w8, #0xc                   	// #12
  404118:	str	x0, [sp, #128]
  40411c:	mov	w0, w8
  404120:	bl	402ae8 <special_glyph@plt>
  404124:	str	x0, [sp, #120]
  404128:	bl	403a64 <__fxstat64@plt+0x9ec>
  40412c:	ldur	x9, [x29, #-192]
  404130:	mov	x10, #0x10                  	// #16
  404134:	mul	x9, x10, x9
  404138:	ldr	x10, [sp, #296]
  40413c:	add	x9, x10, x9
  404140:	ldr	x4, [x9, #8]
  404144:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  404148:	add	x9, x9, #0x862
  40414c:	str	x0, [sp, #112]
  404150:	mov	x0, x9
  404154:	ldr	x1, [sp, #128]
  404158:	ldr	x2, [sp, #120]
  40415c:	ldr	x3, [sp, #112]
  404160:	bl	402a38 <printf@plt>
  404164:	ldur	x8, [x29, #-192]
  404168:	add	x8, x8, #0x1
  40416c:	stur	x8, [x29, #-192]
  404170:	b	404068 <__fxstat64@plt+0xff0>
  404174:	ldur	x8, [x29, #-160]
  404178:	cbz	x8, 40418c <__fxstat64@plt+0x1114>
  40417c:	ldur	x1, [x29, #-160]
  404180:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404184:	add	x0, x0, #0x86d
  404188:	bl	402a38 <printf@plt>
  40418c:	ldur	x0, [x29, #-176]
  404190:	ldur	x1, [x29, #-168]
  404194:	bl	40643c <__fxstat64@plt+0x33c4>
  404198:	cbnz	w0, 404234 <__fxstat64@plt+0x11bc>
  40419c:	ldurb	w1, [x29, #-176]
  4041a0:	ldurb	w2, [x29, #-175]
  4041a4:	ldurb	w3, [x29, #-174]
  4041a8:	ldurb	w4, [x29, #-173]
  4041ac:	ldurb	w5, [x29, #-172]
  4041b0:	ldurb	w6, [x29, #-171]
  4041b4:	ldurb	w7, [x29, #-170]
  4041b8:	ldurb	w8, [x29, #-169]
  4041bc:	ldurb	w9, [x29, #-168]
  4041c0:	ldurb	w10, [x29, #-167]
  4041c4:	ldurb	w11, [x29, #-166]
  4041c8:	ldurb	w12, [x29, #-165]
  4041cc:	ldurb	w13, [x29, #-164]
  4041d0:	ldurb	w14, [x29, #-163]
  4041d4:	ldurb	w15, [x29, #-162]
  4041d8:	ldurb	w16, [x29, #-161]
  4041dc:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  4041e0:	add	x0, x0, #0x880
  4041e4:	mov	x17, sp
  4041e8:	str	w8, [x17]
  4041ec:	mov	x17, sp
  4041f0:	str	w9, [x17, #8]
  4041f4:	mov	x17, sp
  4041f8:	str	w10, [x17, #16]
  4041fc:	mov	x17, sp
  404200:	str	w11, [x17, #24]
  404204:	mov	x17, sp
  404208:	str	w12, [x17, #32]
  40420c:	mov	x17, sp
  404210:	str	w13, [x17, #40]
  404214:	mov	x17, sp
  404218:	str	w14, [x17, #48]
  40421c:	mov	x17, sp
  404220:	str	w15, [x17, #56]
  404224:	mov	x17, sp
  404228:	str	w16, [x17, #64]
  40422c:	bl	402a38 <printf@plt>
  404230:	b	404240 <__fxstat64@plt+0x11c8>
  404234:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404238:	add	x0, x0, #0x8eb
  40423c:	bl	402a38 <printf@plt>
  404240:	mov	w0, #0x2                   	// #2
  404244:	bl	402ae8 <special_glyph@plt>
  404248:	ldur	x8, [x29, #-152]
  40424c:	str	x0, [sp, #104]
  404250:	mov	x0, x8
  404254:	bl	406348 <__fxstat64@plt+0x32d0>
  404258:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  40425c:	add	x8, x8, #0x8ff
  404260:	str	x0, [sp, #96]
  404264:	mov	x0, x8
  404268:	ldr	x1, [sp, #104]
  40426c:	ldr	x2, [sp, #96]
  404270:	bl	402a38 <printf@plt>
  404274:	ldr	x8, [sp, #304]
  404278:	mov	x0, x8
  40427c:	bl	402a38 <printf@plt>
  404280:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  404284:	add	x8, x8, #0x914
  404288:	mov	x0, x8
  40428c:	bl	402a38 <printf@plt>
  404290:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  404294:	add	x8, x8, #0x935
  404298:	mov	x0, x8
  40429c:	mov	w9, wzr
  4042a0:	mov	w1, w9
  4042a4:	str	w9, [sp, #92]
  4042a8:	bl	402af8 <access@plt>
  4042ac:	cmp	w0, #0x0
  4042b0:	cset	w9, ge  // ge = tcont
  4042b4:	and	w0, w9, #0x1
  4042b8:	bl	406478 <__fxstat64@plt+0x3400>
  4042bc:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4042c0:	add	x8, x8, #0x922
  4042c4:	str	x0, [sp, #80]
  4042c8:	mov	x0, x8
  4042cc:	ldr	x1, [sp, #80]
  4042d0:	bl	402a38 <printf@plt>
  4042d4:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4042d8:	add	x8, x8, #0x998
  4042dc:	mov	x0, x8
  4042e0:	ldr	w1, [sp, #92]
  4042e4:	bl	402af8 <access@plt>
  4042e8:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4042ec:	add	x8, x8, #0x9ed
  4042f0:	adrp	x10, 40e000 <__fxstat64@plt+0xaf88>
  4042f4:	add	x10, x10, #0x9e9
  4042f8:	cmp	w0, #0x0
  4042fc:	csel	x1, x10, x8, ge  // ge = tcont
  404300:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404304:	add	x0, x0, #0x985
  404308:	bl	402a38 <printf@plt>
  40430c:	ldr	x8, [sp, #328]
  404310:	ldr	x10, [x8]
  404314:	cbz	x10, 4043cc <__fxstat64@plt+0x1354>
  404318:	mov	x8, xzr
  40431c:	stur	x8, [x29, #-216]
  404320:	ldr	x8, [sp, #328]
  404324:	ldr	x0, [x8]
  404328:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40432c:	add	x1, x1, #0x9f5
  404330:	mov	x9, #0xffffffffffffffff    	// #-1
  404334:	mov	x2, x9
  404338:	bl	402b08 <path_join_internal@plt>
  40433c:	stur	x0, [x29, #-216]
  404340:	ldur	x8, [x29, #-216]
  404344:	cbnz	x8, 404370 <__fxstat64@plt+0x12f8>
  404348:	mov	w8, wzr
  40434c:	mov	w0, w8
  404350:	ldr	x1, [sp, #320]
  404354:	mov	w2, #0x4fd                 	// #1277
  404358:	ldr	x3, [sp, #312]
  40435c:	bl	4029c8 <log_oom_internal@plt>
  404360:	stur	w0, [x29, #-4]
  404364:	mov	w8, #0x1                   	// #1
  404368:	stur	w8, [x29, #-220]
  40436c:	b	4043ac <__fxstat64@plt+0x1334>
  404370:	ldur	x0, [x29, #-216]
  404374:	mov	w8, wzr
  404378:	mov	w1, w8
  40437c:	bl	402af8 <access@plt>
  404380:	cmp	w0, #0x0
  404384:	cset	w8, ge  // ge = tcont
  404388:	and	w0, w8, #0x1
  40438c:	bl	406478 <__fxstat64@plt+0x3400>
  404390:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  404394:	add	x9, x9, #0xa09
  404398:	str	x0, [sp, #72]
  40439c:	mov	x0, x9
  4043a0:	ldr	x1, [sp, #72]
  4043a4:	bl	402a38 <printf@plt>
  4043a8:	stur	wzr, [x29, #-220]
  4043ac:	sub	x0, x29, #0xd8
  4043b0:	bl	403464 <__fxstat64@plt+0x3ec>
  4043b4:	ldur	w8, [x29, #-220]
  4043b8:	cmp	w8, #0x0
  4043bc:	cset	w8, eq  // eq = none
  4043c0:	eor	w8, w8, #0x1
  4043c4:	tbnz	w8, #0, 4043d8 <__fxstat64@plt+0x1360>
  4043c8:	b	4043cc <__fxstat64@plt+0x1354>
  4043cc:	ldr	x0, [sp, #304]
  4043d0:	bl	402a38 <printf@plt>
  4043d4:	stur	wzr, [x29, #-220]
  4043d8:	sub	x0, x29, #0xa0
  4043dc:	bl	403464 <__fxstat64@plt+0x3ec>
  4043e0:	sub	x0, x29, #0x98
  4043e4:	bl	403464 <__fxstat64@plt+0x3ec>
  4043e8:	sub	x0, x29, #0x90
  4043ec:	bl	403464 <__fxstat64@plt+0x3ec>
  4043f0:	sub	x0, x29, #0x88
  4043f4:	bl	403464 <__fxstat64@plt+0x3ec>
  4043f8:	sub	x0, x29, #0x80
  4043fc:	bl	403464 <__fxstat64@plt+0x3ec>
  404400:	ldur	w8, [x29, #-220]
  404404:	cbz	w8, 404410 <__fxstat64@plt+0x1398>
  404408:	b	40440c <__fxstat64@plt+0x1394>
  40440c:	b	4044f8 <__fxstat64@plt+0x1480>
  404410:	b	404420 <__fxstat64@plt+0x13a8>
  404414:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404418:	add	x0, x0, #0xa1c
  40441c:	bl	402a38 <printf@plt>
  404420:	ldr	x8, [sp, #328]
  404424:	ldr	x9, [x8]
  404428:	cbz	x9, 404460 <__fxstat64@plt+0x13e8>
  40442c:	ldr	x8, [sp, #328]
  404430:	ldr	x0, [x8]
  404434:	ldur	x9, [x29, #-232]
  404438:	ldr	x1, [x9, #16]
  40443c:	ldr	x2, [x9, #24]
  404440:	bl	4064a8 <__fxstat64@plt+0x3430>
  404444:	stur	w0, [x29, #-64]
  404448:	ldur	w10, [x29, #-64]
  40444c:	cmp	w10, #0x0
  404450:	cset	w10, ge  // ge = tcont
  404454:	tbnz	w10, #0, 404460 <__fxstat64@plt+0x13e8>
  404458:	ldur	w8, [x29, #-64]
  40445c:	stur	w8, [x29, #-60]
  404460:	bl	402a88 <is_efi_boot@plt>
  404464:	tbnz	w0, #0, 40446c <__fxstat64@plt+0x13f4>
  404468:	b	40448c <__fxstat64@plt+0x1414>
  40446c:	bl	406750 <__fxstat64@plt+0x36d8>
  404470:	stur	w0, [x29, #-64]
  404474:	ldur	w8, [x29, #-64]
  404478:	cmp	w8, #0x0
  40447c:	cset	w8, ge  // ge = tcont
  404480:	tbnz	w8, #0, 40448c <__fxstat64@plt+0x1414>
  404484:	ldur	w8, [x29, #-64]
  404488:	stur	w8, [x29, #-60]
  40448c:	ldr	x8, [sp, #328]
  404490:	ldr	x9, [x8]
  404494:	cbnz	x9, 4044a8 <__fxstat64@plt+0x1430>
  404498:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  40449c:	add	x8, x8, #0x18
  4044a0:	ldr	x8, [x8]
  4044a4:	cbz	x8, 4044f0 <__fxstat64@plt+0x1478>
  4044a8:	ldr	x8, [sp, #328]
  4044ac:	ldr	x0, [x8]
  4044b0:	adrp	x9, 430000 <__fxstat64@plt+0x2cf88>
  4044b4:	add	x9, x9, #0x18
  4044b8:	ldr	x3, [x9]
  4044bc:	ldur	x9, [x29, #-232]
  4044c0:	ldr	x1, [x9, #16]
  4044c4:	ldr	x2, [x9, #24]
  4044c8:	ldr	x4, [x9]
  4044cc:	ldr	x5, [x9, #8]
  4044d0:	bl	406a88 <__fxstat64@plt+0x3a10>
  4044d4:	stur	w0, [x29, #-64]
  4044d8:	ldur	w10, [x29, #-64]
  4044dc:	cmp	w10, #0x0
  4044e0:	cset	w10, ge  // ge = tcont
  4044e4:	tbnz	w10, #0, 4044f0 <__fxstat64@plt+0x1478>
  4044e8:	ldur	w8, [x29, #-64]
  4044ec:	stur	w8, [x29, #-60]
  4044f0:	ldur	w8, [x29, #-60]
  4044f4:	stur	w8, [x29, #-4]
  4044f8:	ldur	w0, [x29, #-4]
  4044fc:	add	sp, sp, #0x250
  404500:	ldr	x28, [sp, #16]
  404504:	ldp	x29, x30, [sp], #32
  404508:	ret
  40450c:	sub	sp, sp, #0xa0
  404510:	stp	x29, x30, [sp, #144]
  404514:	add	x29, sp, #0x90
  404518:	mov	w8, wzr
  40451c:	adrp	x9, 430000 <__fxstat64@plt+0x2cf88>
  404520:	add	x9, x9, #0x10
  404524:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  404528:	add	x10, x10, #0xf88
  40452c:	add	x10, x10, #0x3
  404530:	sub	x4, x29, #0x28
  404534:	sub	x11, x29, #0x30
  404538:	sub	x3, x29, #0x38
  40453c:	sub	x12, x29, #0x3c
  404540:	stur	w0, [x29, #-8]
  404544:	stur	x1, [x29, #-16]
  404548:	stur	x2, [x29, #-24]
  40454c:	stur	xzr, [x29, #-40]
  404550:	stur	xzr, [x29, #-32]
  404554:	stur	xzr, [x29, #-48]
  404558:	stur	xzr, [x29, #-56]
  40455c:	stur	wzr, [x29, #-60]
  404560:	and	w0, w8, #0x1
  404564:	mov	x1, x12
  404568:	mov	x2, x11
  40456c:	str	x9, [sp, #24]
  404570:	str	x10, [sp, #16]
  404574:	bl	405db0 <__fxstat64@plt+0x2d38>
  404578:	str	w0, [sp, #56]
  40457c:	ldr	w8, [sp, #56]
  404580:	cmp	w8, #0x0
  404584:	cset	w8, ge  // ge = tcont
  404588:	tbnz	w8, #0, 404598 <__fxstat64@plt+0x1520>
  40458c:	ldr	w8, [sp, #56]
  404590:	stur	w8, [x29, #-4]
  404594:	b	4048ac <__fxstat64@plt+0x1834>
  404598:	mov	w8, wzr
  40459c:	and	w0, w8, #0x1
  4045a0:	mov	x9, xzr
  4045a4:	mov	x1, x9
  4045a8:	bl	405f98 <__fxstat64@plt+0x2f20>
  4045ac:	str	w0, [sp, #56]
  4045b0:	ldr	w8, [sp, #56]
  4045b4:	cmp	w8, #0x0
  4045b8:	cset	w8, ge  // ge = tcont
  4045bc:	tbnz	w8, #0, 4045cc <__fxstat64@plt+0x1554>
  4045c0:	ldr	w8, [sp, #56]
  4045c4:	stur	w8, [x29, #-4]
  4045c8:	b	4048ac <__fxstat64@plt+0x1834>
  4045cc:	add	x0, sp, #0x40
  4045d0:	bl	402b18 <sd_id128_get_machine@plt>
  4045d4:	str	w0, [sp, #56]
  4045d8:	ldr	w8, [sp, #56]
  4045dc:	cmp	w8, #0x0
  4045e0:	cset	w8, ge  // ge = tcont
  4045e4:	tbnz	w8, #0, 404670 <__fxstat64@plt+0x15f8>
  4045e8:	mov	w8, #0x3                   	// #3
  4045ec:	str	w8, [sp, #52]
  4045f0:	ldr	w8, [sp, #56]
  4045f4:	str	w8, [sp, #48]
  4045f8:	str	wzr, [sp, #44]
  4045fc:	ldr	w0, [sp, #44]
  404600:	bl	4029d8 <log_get_max_level_realm@plt>
  404604:	ldr	w8, [sp, #52]
  404608:	and	w8, w8, #0x7
  40460c:	cmp	w0, w8
  404610:	b.lt	404648 <__fxstat64@plt+0x15d0>  // b.tstop
  404614:	ldr	w8, [sp, #44]
  404618:	ldr	w9, [sp, #52]
  40461c:	orr	w0, w9, w8, lsl #10
  404620:	ldr	w1, [sp, #48]
  404624:	ldr	x2, [sp, #16]
  404628:	mov	w3, #0x5f1                 	// #1521
  40462c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  404630:	add	x4, x4, #0x2fb
  404634:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  404638:	add	x5, x5, #0x308
  40463c:	bl	4029e8 <log_internal_realm@plt>
  404640:	str	w0, [sp, #12]
  404644:	b	40465c <__fxstat64@plt+0x15e4>
  404648:	ldr	w0, [sp, #48]
  40464c:	bl	4029f8 <abs@plt>
  404650:	mov	w8, wzr
  404654:	subs	w8, w8, w0, uxtb
  404658:	str	w8, [sp, #12]
  40465c:	ldr	w8, [sp, #12]
  404660:	str	w8, [sp, #40]
  404664:	ldr	w8, [sp, #40]
  404668:	stur	w8, [x29, #-4]
  40466c:	b	4048ac <__fxstat64@plt+0x1834>
  404670:	ldur	x8, [x29, #-16]
  404674:	ldr	x0, [x8]
  404678:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40467c:	add	x1, x1, #0x5c9
  404680:	bl	402b28 <strcmp@plt>
  404684:	cmp	w0, #0x0
  404688:	cset	w9, eq  // eq = none
  40468c:	and	w9, w9, #0x1
  404690:	strb	w9, [sp, #63]
  404694:	mov	w0, #0x2                   	// #2
  404698:	bl	402b38 <umask@plt>
  40469c:	orr	w9, w0, #0xf000
  4046a0:	str	w9, [sp, #36]
  4046a4:	ldr	w8, [sp, #36]
  4046a8:	mvn	w8, w8
  4046ac:	and	w8, w8, #0xf000
  4046b0:	cbz	w8, 4046c0 <__fxstat64@plt+0x1648>
  4046b4:	mov	w8, #0x2                   	// #2
  4046b8:	str	w8, [sp, #32]
  4046bc:	b	404840 <__fxstat64@plt+0x17c8>
  4046c0:	ldrb	w8, [sp, #63]
  4046c4:	tbnz	w8, #0, 4046cc <__fxstat64@plt+0x1654>
  4046c8:	b	404740 <__fxstat64@plt+0x16c8>
  4046cc:	ldr	x8, [sp, #24]
  4046d0:	ldr	x0, [x8]
  4046d4:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  4046d8:	add	x1, x1, #0xea0
  4046dc:	bl	408438 <__fxstat64@plt+0x53c0>
  4046e0:	str	w0, [sp, #56]
  4046e4:	ldr	w9, [sp, #56]
  4046e8:	cmp	w9, #0x0
  4046ec:	cset	w9, ge  // ge = tcont
  4046f0:	tbnz	w9, #0, 404708 <__fxstat64@plt+0x1690>
  4046f4:	ldr	w8, [sp, #56]
  4046f8:	stur	w8, [x29, #-4]
  4046fc:	mov	w8, #0x1                   	// #1
  404700:	str	w8, [sp, #32]
  404704:	b	404840 <__fxstat64@plt+0x17c8>
  404708:	bl	406190 <__fxstat64@plt+0x3118>
  40470c:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  404710:	add	x1, x1, #0xec8
  404714:	bl	408438 <__fxstat64@plt+0x53c0>
  404718:	str	w0, [sp, #56]
  40471c:	ldr	w8, [sp, #56]
  404720:	cmp	w8, #0x0
  404724:	cset	w8, ge  // ge = tcont
  404728:	tbnz	w8, #0, 404740 <__fxstat64@plt+0x16c8>
  40472c:	ldr	w8, [sp, #56]
  404730:	stur	w8, [x29, #-4]
  404734:	mov	w8, #0x1                   	// #1
  404738:	str	w8, [sp, #32]
  40473c:	b	404840 <__fxstat64@plt+0x17c8>
  404740:	ldr	x8, [sp, #24]
  404744:	ldr	x0, [x8]
  404748:	ldrb	w9, [sp, #63]
  40474c:	and	w1, w9, #0x1
  404750:	bl	4084d8 <__fxstat64@plt+0x5460>
  404754:	str	w0, [sp, #56]
  404758:	ldr	w9, [sp, #56]
  40475c:	cmp	w9, #0x0
  404760:	cset	w9, ge  // ge = tcont
  404764:	tbnz	w9, #0, 40477c <__fxstat64@plt+0x1704>
  404768:	ldr	w8, [sp, #56]
  40476c:	stur	w8, [x29, #-4]
  404770:	mov	w8, #0x1                   	// #1
  404774:	str	w8, [sp, #32]
  404778:	b	404840 <__fxstat64@plt+0x17c8>
  40477c:	ldrb	w8, [sp, #63]
  404780:	tbnz	w8, #0, 404788 <__fxstat64@plt+0x1710>
  404784:	b	404830 <__fxstat64@plt+0x17b8>
  404788:	ldr	x8, [sp, #24]
  40478c:	ldr	x0, [x8]
  404790:	ldr	x1, [sp, #64]
  404794:	ldr	x2, [sp, #72]
  404798:	bl	408738 <__fxstat64@plt+0x56c0>
  40479c:	str	w0, [sp, #56]
  4047a0:	ldr	w9, [sp, #56]
  4047a4:	cmp	w9, #0x0
  4047a8:	cset	w9, ge  // ge = tcont
  4047ac:	tbnz	w9, #0, 4047c4 <__fxstat64@plt+0x174c>
  4047b0:	ldr	w8, [sp, #56]
  4047b4:	stur	w8, [x29, #-4]
  4047b8:	mov	w8, #0x1                   	// #1
  4047bc:	str	w8, [sp, #32]
  4047c0:	b	404840 <__fxstat64@plt+0x17c8>
  4047c4:	bl	406190 <__fxstat64@plt+0x3118>
  4047c8:	ldr	x1, [sp, #64]
  4047cc:	ldr	x2, [sp, #72]
  4047d0:	bl	408d54 <__fxstat64@plt+0x5cdc>
  4047d4:	str	w0, [sp, #56]
  4047d8:	ldr	w8, [sp, #56]
  4047dc:	cmp	w8, #0x0
  4047e0:	cset	w8, ge  // ge = tcont
  4047e4:	tbnz	w8, #0, 4047fc <__fxstat64@plt+0x1784>
  4047e8:	ldr	w8, [sp, #56]
  4047ec:	stur	w8, [x29, #-4]
  4047f0:	mov	w8, #0x1                   	// #1
  4047f4:	str	w8, [sp, #32]
  4047f8:	b	404840 <__fxstat64@plt+0x17c8>
  4047fc:	ldr	x8, [sp, #24]
  404800:	ldr	x0, [x8]
  404804:	bl	408e08 <__fxstat64@plt+0x5d90>
  404808:	str	w0, [sp, #56]
  40480c:	ldr	w9, [sp, #56]
  404810:	cmp	w9, #0x0
  404814:	cset	w9, ge  // ge = tcont
  404818:	tbnz	w9, #0, 404830 <__fxstat64@plt+0x17b8>
  40481c:	ldr	w8, [sp, #56]
  404820:	stur	w8, [x29, #-4]
  404824:	mov	w8, #0x1                   	// #1
  404828:	str	w8, [sp, #32]
  40482c:	b	404840 <__fxstat64@plt+0x17c8>
  404830:	ldr	w8, [sp, #36]
  404834:	and	w8, w8, #0x1ff
  404838:	str	w8, [sp, #36]
  40483c:	b	4046a4 <__fxstat64@plt+0x162c>
  404840:	add	x0, sp, #0x24
  404844:	bl	40840c <__fxstat64@plt+0x5394>
  404848:	ldr	w8, [sp, #32]
  40484c:	cmp	w8, #0x1
  404850:	b.eq	4048ac <__fxstat64@plt+0x1834>  // b.none
  404854:	b	404858 <__fxstat64@plt+0x17e0>
  404858:	bl	409d20 <__fxstat64@plt+0x6ca8>
  40485c:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  404860:	add	x8, x8, #0x0
  404864:	ldrb	w9, [x8]
  404868:	tbnz	w9, #0, 404870 <__fxstat64@plt+0x17f8>
  40486c:	b	4048a4 <__fxstat64@plt+0x182c>
  404870:	ldr	x8, [sp, #24]
  404874:	ldr	x0, [x8]
  404878:	ldur	w1, [x29, #-60]
  40487c:	ldur	x2, [x29, #-48]
  404880:	ldur	x3, [x29, #-56]
  404884:	ldrb	w9, [sp, #63]
  404888:	ldur	x4, [x29, #-40]
  40488c:	ldur	x5, [x29, #-32]
  404890:	adrp	x6, 40f000 <__fxstat64@plt+0xbf88>
  404894:	add	x6, x6, #0x325
  404898:	and	w7, w9, #0x1
  40489c:	bl	409edc <__fxstat64@plt+0x6e64>
  4048a0:	str	w0, [sp, #56]
  4048a4:	ldr	w8, [sp, #56]
  4048a8:	stur	w8, [x29, #-4]
  4048ac:	ldur	w0, [x29, #-4]
  4048b0:	ldp	x29, x30, [sp, #144]
  4048b4:	add	sp, sp, #0xa0
  4048b8:	ret
  4048bc:	sub	sp, sp, #0x80
  4048c0:	stp	x29, x30, [sp, #112]
  4048c4:	add	x29, sp, #0x70
  4048c8:	mov	x8, xzr
  4048cc:	mov	x3, x8
  4048d0:	mov	w9, wzr
  4048d4:	adrp	x10, 430000 <__fxstat64@plt+0x2cf88>
  4048d8:	add	x10, x10, #0x10
  4048dc:	adrp	x11, 430000 <__fxstat64@plt+0x2cf88>
  4048e0:	add	x11, x11, #0x18
  4048e4:	adrp	x12, 40d000 <__fxstat64@plt+0x9f88>
  4048e8:	add	x12, x12, #0xf88
  4048ec:	add	x12, x12, #0x3
  4048f0:	sub	x4, x29, #0x28
  4048f4:	stur	w0, [x29, #-8]
  4048f8:	stur	x1, [x29, #-16]
  4048fc:	stur	x2, [x29, #-24]
  404900:	stur	xzr, [x29, #-40]
  404904:	stur	xzr, [x29, #-32]
  404908:	and	w0, w9, #0x1
  40490c:	mov	x1, x3
  404910:	mov	x2, x8
  404914:	mov	x3, x8
  404918:	str	x10, [sp, #24]
  40491c:	str	x11, [sp, #16]
  404920:	str	x12, [sp, #8]
  404924:	bl	405db0 <__fxstat64@plt+0x2d38>
  404928:	str	w0, [sp, #52]
  40492c:	ldr	w9, [sp, #52]
  404930:	cmp	w9, #0x0
  404934:	cset	w9, ge  // ge = tcont
  404938:	tbnz	w9, #0, 404948 <__fxstat64@plt+0x18d0>
  40493c:	ldr	w8, [sp, #52]
  404940:	stur	w8, [x29, #-4]
  404944:	b	404c9c <__fxstat64@plt+0x1c24>
  404948:	mov	w8, wzr
  40494c:	and	w0, w8, #0x1
  404950:	mov	x9, xzr
  404954:	mov	x1, x9
  404958:	bl	405f98 <__fxstat64@plt+0x2f20>
  40495c:	str	w0, [sp, #52]
  404960:	ldr	w8, [sp, #52]
  404964:	cmp	w8, #0x0
  404968:	cset	w8, ge  // ge = tcont
  40496c:	tbnz	w8, #0, 40497c <__fxstat64@plt+0x1904>
  404970:	ldr	w8, [sp, #52]
  404974:	stur	w8, [x29, #-4]
  404978:	b	404c9c <__fxstat64@plt+0x1c24>
  40497c:	add	x0, sp, #0x38
  404980:	bl	402b18 <sd_id128_get_machine@plt>
  404984:	str	w0, [sp, #52]
  404988:	ldr	w8, [sp, #52]
  40498c:	cmp	w8, #0x0
  404990:	cset	w8, ge  // ge = tcont
  404994:	tbnz	w8, #0, 404a20 <__fxstat64@plt+0x19a8>
  404998:	mov	w8, #0x3                   	// #3
  40499c:	str	w8, [sp, #44]
  4049a0:	ldr	w8, [sp, #52]
  4049a4:	str	w8, [sp, #40]
  4049a8:	str	wzr, [sp, #36]
  4049ac:	ldr	w0, [sp, #36]
  4049b0:	bl	4029d8 <log_get_max_level_realm@plt>
  4049b4:	ldr	w8, [sp, #44]
  4049b8:	and	w8, w8, #0x7
  4049bc:	cmp	w0, w8
  4049c0:	b.lt	4049f8 <__fxstat64@plt+0x1980>  // b.tstop
  4049c4:	ldr	w8, [sp, #36]
  4049c8:	ldr	w9, [sp, #44]
  4049cc:	orr	w0, w9, w8, lsl #10
  4049d0:	ldr	w1, [sp, #40]
  4049d4:	ldr	x2, [sp, #8]
  4049d8:	mov	w3, #0x62f                 	// #1583
  4049dc:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  4049e0:	add	x4, x4, #0xe24
  4049e4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4049e8:	add	x5, x5, #0x308
  4049ec:	bl	4029e8 <log_internal_realm@plt>
  4049f0:	str	w0, [sp, #4]
  4049f4:	b	404a0c <__fxstat64@plt+0x1994>
  4049f8:	ldr	w0, [sp, #40]
  4049fc:	bl	4029f8 <abs@plt>
  404a00:	mov	w8, wzr
  404a04:	subs	w8, w8, w0, uxtb
  404a08:	str	w8, [sp, #4]
  404a0c:	ldr	w8, [sp, #4]
  404a10:	str	w8, [sp, #32]
  404a14:	ldr	w8, [sp, #32]
  404a18:	stur	w8, [x29, #-4]
  404a1c:	b	404c9c <__fxstat64@plt+0x1c24>
  404a20:	ldr	x8, [sp, #24]
  404a24:	ldr	x0, [x8]
  404a28:	bl	40c2ac <__fxstat64@plt+0x9234>
  404a2c:	str	w0, [sp, #52]
  404a30:	ldr	x8, [sp, #24]
  404a34:	ldr	x0, [x8]
  404a38:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  404a3c:	add	x1, x1, #0x6f9
  404a40:	bl	40c540 <__fxstat64@plt+0x94c8>
  404a44:	str	w0, [sp, #48]
  404a48:	ldr	w9, [sp, #48]
  404a4c:	cmp	w9, #0x0
  404a50:	cset	w9, ge  // ge = tcont
  404a54:	tbnz	w9, #0, 404a70 <__fxstat64@plt+0x19f8>
  404a58:	ldr	w8, [sp, #52]
  404a5c:	cmp	w8, #0x0
  404a60:	cset	w8, lt  // lt = tstop
  404a64:	tbnz	w8, #0, 404a70 <__fxstat64@plt+0x19f8>
  404a68:	ldr	w8, [sp, #48]
  404a6c:	str	w8, [sp, #52]
  404a70:	ldr	x8, [sp, #24]
  404a74:	ldr	x0, [x8]
  404a78:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  404a7c:	add	x1, x1, #0x9f5
  404a80:	bl	40c540 <__fxstat64@plt+0x94c8>
  404a84:	str	w0, [sp, #48]
  404a88:	ldr	w9, [sp, #48]
  404a8c:	cmp	w9, #0x0
  404a90:	cset	w9, ge  // ge = tcont
  404a94:	tbnz	w9, #0, 404ab0 <__fxstat64@plt+0x1a38>
  404a98:	ldr	w8, [sp, #52]
  404a9c:	cmp	w8, #0x0
  404aa0:	cset	w8, lt  // lt = tstop
  404aa4:	tbnz	w8, #0, 404ab0 <__fxstat64@plt+0x1a38>
  404aa8:	ldr	w8, [sp, #48]
  404aac:	str	w8, [sp, #52]
  404ab0:	ldr	x8, [sp, #24]
  404ab4:	ldr	x0, [x8]
  404ab8:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  404abc:	add	x1, x1, #0xea0
  404ac0:	bl	40c9a0 <__fxstat64@plt+0x9928>
  404ac4:	str	w0, [sp, #48]
  404ac8:	ldr	w9, [sp, #48]
  404acc:	cmp	w9, #0x0
  404ad0:	cset	w9, ge  // ge = tcont
  404ad4:	tbnz	w9, #0, 404af0 <__fxstat64@plt+0x1a78>
  404ad8:	ldr	w8, [sp, #52]
  404adc:	cmp	w8, #0x0
  404ae0:	cset	w8, lt  // lt = tstop
  404ae4:	tbnz	w8, #0, 404af0 <__fxstat64@plt+0x1a78>
  404ae8:	ldr	w8, [sp, #48]
  404aec:	str	w8, [sp, #52]
  404af0:	ldr	x8, [sp, #24]
  404af4:	ldr	x0, [x8]
  404af8:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  404afc:	add	x1, x1, #0xec8
  404b00:	bl	40c9a0 <__fxstat64@plt+0x9928>
  404b04:	str	w0, [sp, #48]
  404b08:	ldr	w9, [sp, #48]
  404b0c:	cmp	w9, #0x0
  404b10:	cset	w9, ge  // ge = tcont
  404b14:	tbnz	w9, #0, 404b30 <__fxstat64@plt+0x1ab8>
  404b18:	ldr	w8, [sp, #52]
  404b1c:	cmp	w8, #0x0
  404b20:	cset	w8, lt  // lt = tstop
  404b24:	tbnz	w8, #0, 404b30 <__fxstat64@plt+0x1ab8>
  404b28:	ldr	w8, [sp, #48]
  404b2c:	str	w8, [sp, #52]
  404b30:	ldr	x8, [sp, #24]
  404b34:	ldr	x0, [x8]
  404b38:	ldr	x1, [sp, #56]
  404b3c:	ldr	x2, [sp, #64]
  404b40:	bl	40ca2c <__fxstat64@plt+0x99b4>
  404b44:	str	w0, [sp, #48]
  404b48:	ldr	w9, [sp, #48]
  404b4c:	cmp	w9, #0x0
  404b50:	cset	w9, ge  // ge = tcont
  404b54:	tbnz	w9, #0, 404b70 <__fxstat64@plt+0x1af8>
  404b58:	ldr	w8, [sp, #52]
  404b5c:	cmp	w8, #0x0
  404b60:	cset	w8, lt  // lt = tstop
  404b64:	tbnz	w8, #0, 404b70 <__fxstat64@plt+0x1af8>
  404b68:	mov	w8, #0x1                   	// #1
  404b6c:	str	w8, [sp, #52]
  404b70:	ldr	x8, [sp, #16]
  404b74:	ldr	x9, [x8]
  404b78:	cbz	x9, 404bfc <__fxstat64@plt+0x1b84>
  404b7c:	ldr	x8, [sp, #16]
  404b80:	ldr	x0, [x8]
  404b84:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  404b88:	add	x1, x1, #0xec8
  404b8c:	bl	40c9a0 <__fxstat64@plt+0x9928>
  404b90:	str	w0, [sp, #48]
  404b94:	ldr	w9, [sp, #48]
  404b98:	cmp	w9, #0x0
  404b9c:	cset	w9, ge  // ge = tcont
  404ba0:	tbnz	w9, #0, 404bbc <__fxstat64@plt+0x1b44>
  404ba4:	ldr	w8, [sp, #52]
  404ba8:	cmp	w8, #0x0
  404bac:	cset	w8, lt  // lt = tstop
  404bb0:	tbnz	w8, #0, 404bbc <__fxstat64@plt+0x1b44>
  404bb4:	ldr	w8, [sp, #48]
  404bb8:	str	w8, [sp, #52]
  404bbc:	ldr	x8, [sp, #16]
  404bc0:	ldr	x0, [x8]
  404bc4:	ldr	x1, [sp, #56]
  404bc8:	ldr	x2, [sp, #64]
  404bcc:	bl	40ca2c <__fxstat64@plt+0x99b4>
  404bd0:	str	w0, [sp, #48]
  404bd4:	ldr	w9, [sp, #48]
  404bd8:	cmp	w9, #0x0
  404bdc:	cset	w9, ge  // ge = tcont
  404be0:	tbnz	w9, #0, 404bfc <__fxstat64@plt+0x1b84>
  404be4:	ldr	w8, [sp, #52]
  404be8:	cmp	w8, #0x0
  404bec:	cset	w8, lt  // lt = tstop
  404bf0:	tbnz	w8, #0, 404bfc <__fxstat64@plt+0x1b84>
  404bf4:	ldr	w8, [sp, #48]
  404bf8:	str	w8, [sp, #52]
  404bfc:	bl	409d20 <__fxstat64@plt+0x6ca8>
  404c00:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  404c04:	add	x8, x8, #0x0
  404c08:	ldrb	w9, [x8]
  404c0c:	tbnz	w9, #0, 404c1c <__fxstat64@plt+0x1ba4>
  404c10:	ldr	w8, [sp, #52]
  404c14:	stur	w8, [x29, #-4]
  404c18:	b	404c9c <__fxstat64@plt+0x1c24>
  404c1c:	ldur	x0, [x29, #-40]
  404c20:	ldur	x1, [x29, #-32]
  404c24:	adrp	x2, 40f000 <__fxstat64@plt+0xbf88>
  404c28:	add	x2, x2, #0x325
  404c2c:	mov	w8, #0x1                   	// #1
  404c30:	and	w3, w8, #0x1
  404c34:	bl	40cae0 <__fxstat64@plt+0x9a68>
  404c38:	str	w0, [sp, #48]
  404c3c:	ldr	w8, [sp, #48]
  404c40:	cmp	w8, #0x0
  404c44:	cset	w8, ge  // ge = tcont
  404c48:	tbnz	w8, #0, 404c64 <__fxstat64@plt+0x1bec>
  404c4c:	ldr	w8, [sp, #52]
  404c50:	cmp	w8, #0x0
  404c54:	cset	w8, lt  // lt = tstop
  404c58:	tbnz	w8, #0, 404c64 <__fxstat64@plt+0x1bec>
  404c5c:	ldr	w8, [sp, #48]
  404c60:	str	w8, [sp, #52]
  404c64:	bl	40cb98 <__fxstat64@plt+0x9b20>
  404c68:	str	w0, [sp, #48]
  404c6c:	ldr	w8, [sp, #48]
  404c70:	cmp	w8, #0x0
  404c74:	cset	w8, ge  // ge = tcont
  404c78:	tbnz	w8, #0, 404c94 <__fxstat64@plt+0x1c1c>
  404c7c:	ldr	w8, [sp, #52]
  404c80:	cmp	w8, #0x0
  404c84:	cset	w8, lt  // lt = tstop
  404c88:	tbnz	w8, #0, 404c94 <__fxstat64@plt+0x1c1c>
  404c8c:	ldr	w8, [sp, #48]
  404c90:	str	w8, [sp, #52]
  404c94:	ldr	w8, [sp, #52]
  404c98:	stur	w8, [x29, #-4]
  404c9c:	ldur	w0, [x29, #-4]
  404ca0:	ldp	x29, x30, [sp, #112]
  404ca4:	add	sp, sp, #0x80
  404ca8:	ret
  404cac:	sub	sp, sp, #0x60
  404cb0:	stp	x29, x30, [sp, #80]
  404cb4:	add	x29, sp, #0x50
  404cb8:	mov	x8, xzr
  404cbc:	mov	x3, x8
  404cc0:	mov	x4, x8
  404cc4:	mov	x5, x8
  404cc8:	mov	w9, wzr
  404ccc:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  404cd0:	add	x10, x10, #0xf88
  404cd4:	add	x10, x10, #0x3
  404cd8:	stur	w0, [x29, #-8]
  404cdc:	stur	x1, [x29, #-16]
  404ce0:	stur	x2, [x29, #-24]
  404ce4:	stur	x8, [x29, #-32]
  404ce8:	and	w0, w9, #0x1
  404cec:	mov	x1, x3
  404cf0:	mov	x2, x4
  404cf4:	mov	x3, x4
  404cf8:	mov	x4, x5
  404cfc:	str	x10, [sp, #16]
  404d00:	bl	405db0 <__fxstat64@plt+0x2d38>
  404d04:	stur	w0, [x29, #-36]
  404d08:	ldur	w9, [x29, #-36]
  404d0c:	cmp	w9, #0x0
  404d10:	cset	w9, ge  // ge = tcont
  404d14:	tbnz	w9, #0, 404d2c <__fxstat64@plt+0x1cb4>
  404d18:	ldur	w8, [x29, #-36]
  404d1c:	stur	w8, [x29, #-4]
  404d20:	mov	w8, #0x1                   	// #1
  404d24:	str	w8, [sp, #40]
  404d28:	b	404e84 <__fxstat64@plt+0x1e0c>
  404d2c:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  404d30:	add	x8, x8, #0x10
  404d34:	ldr	x0, [x8]
  404d38:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  404d3c:	add	x1, x1, #0x476
  404d40:	mov	x8, #0xffffffffffffffff    	// #-1
  404d44:	mov	x2, x8
  404d48:	bl	402b08 <path_join_internal@plt>
  404d4c:	stur	x0, [x29, #-32]
  404d50:	ldur	x8, [x29, #-32]
  404d54:	cbnz	x8, 404d84 <__fxstat64@plt+0x1d0c>
  404d58:	mov	w8, wzr
  404d5c:	mov	w0, w8
  404d60:	ldr	x1, [sp, #16]
  404d64:	mov	w2, #0x67a                 	// #1658
  404d68:	adrp	x3, 410000 <__fxstat64@plt+0xcf88>
  404d6c:	add	x3, x3, #0x9c
  404d70:	bl	4029c8 <log_oom_internal@plt>
  404d74:	stur	w0, [x29, #-4]
  404d78:	mov	w8, #0x1                   	// #1
  404d7c:	str	w8, [sp, #40]
  404d80:	b	404e84 <__fxstat64@plt+0x1e0c>
  404d84:	ldur	x0, [x29, #-32]
  404d88:	bl	40da1c <__fxstat64@plt+0xa9a4>
  404d8c:	stur	w0, [x29, #-36]
  404d90:	ldur	w8, [x29, #-36]
  404d94:	cmp	w8, #0x0
  404d98:	cset	w8, gt
  404d9c:	tbnz	w8, #0, 404db0 <__fxstat64@plt+0x1d38>
  404da0:	ldur	w8, [x29, #-36]
  404da4:	mov	w9, #0xfffffffe            	// #-2
  404da8:	cmp	w8, w9
  404dac:	b.ne	404dcc <__fxstat64@plt+0x1d54>  // b.any
  404db0:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404db4:	add	x0, x0, #0xbd6
  404db8:	bl	402a68 <puts@plt>
  404dbc:	mov	w8, #0x1                   	// #1
  404dc0:	stur	w8, [x29, #-4]
  404dc4:	str	w8, [sp, #40]
  404dc8:	b	404e84 <__fxstat64@plt+0x1e0c>
  404dcc:	ldur	w8, [x29, #-36]
  404dd0:	cmp	w8, #0x0
  404dd4:	cset	w8, ge  // ge = tcont
  404dd8:	tbnz	w8, #0, 404e6c <__fxstat64@plt+0x1df4>
  404ddc:	mov	w8, #0x3                   	// #3
  404de0:	str	w8, [sp, #36]
  404de4:	ldur	w8, [x29, #-36]
  404de8:	str	w8, [sp, #32]
  404dec:	str	wzr, [sp, #28]
  404df0:	ldr	w0, [sp, #28]
  404df4:	bl	4029d8 <log_get_max_level_realm@plt>
  404df8:	ldr	w8, [sp, #36]
  404dfc:	and	w8, w8, #0x7
  404e00:	cmp	w0, w8
  404e04:	b.lt	404e3c <__fxstat64@plt+0x1dc4>  // b.tstop
  404e08:	ldr	w8, [sp, #28]
  404e0c:	ldr	w9, [sp, #36]
  404e10:	orr	w0, w9, w8, lsl #10
  404e14:	ldr	w1, [sp, #32]
  404e18:	ldr	x2, [sp, #16]
  404e1c:	mov	w3, #0x682                 	// #1666
  404e20:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  404e24:	add	x4, x4, #0x9c
  404e28:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  404e2c:	add	x5, x5, #0xae
  404e30:	bl	4029e8 <log_internal_realm@plt>
  404e34:	str	w0, [sp, #12]
  404e38:	b	404e50 <__fxstat64@plt+0x1dd8>
  404e3c:	ldr	w0, [sp, #32]
  404e40:	bl	4029f8 <abs@plt>
  404e44:	mov	w8, wzr
  404e48:	subs	w8, w8, w0, uxtb
  404e4c:	str	w8, [sp, #12]
  404e50:	ldr	w8, [sp, #12]
  404e54:	str	w8, [sp, #24]
  404e58:	ldr	w8, [sp, #24]
  404e5c:	stur	w8, [x29, #-4]
  404e60:	mov	w8, #0x1                   	// #1
  404e64:	str	w8, [sp, #40]
  404e68:	b	404e84 <__fxstat64@plt+0x1e0c>
  404e6c:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  404e70:	add	x0, x0, #0xbd2
  404e74:	bl	402a68 <puts@plt>
  404e78:	stur	wzr, [x29, #-4]
  404e7c:	mov	w8, #0x1                   	// #1
  404e80:	str	w8, [sp, #40]
  404e84:	sub	x0, x29, #0x20
  404e88:	bl	403464 <__fxstat64@plt+0x3ec>
  404e8c:	ldur	w0, [x29, #-4]
  404e90:	ldp	x29, x30, [sp, #80]
  404e94:	add	sp, sp, #0x60
  404e98:	ret
  404e9c:	sub	sp, sp, #0x100
  404ea0:	stp	x29, x30, [sp, #240]
  404ea4:	add	x29, sp, #0xf0
  404ea8:	mov	x8, #0x58                  	// #88
  404eac:	mov	w9, wzr
  404eb0:	mov	x10, xzr
  404eb4:	mov	x3, x10
  404eb8:	mov	x4, x10
  404ebc:	mov	w11, #0xfffffff3            	// #-13
  404ec0:	adrp	x12, 40d000 <__fxstat64@plt+0x9f88>
  404ec4:	add	x12, x12, #0xf88
  404ec8:	add	x12, x12, #0x3
  404ecc:	adrp	x13, 410000 <__fxstat64@plt+0xcf88>
  404ed0:	add	x13, x13, #0xe5
  404ed4:	sub	x14, x29, #0x70
  404ed8:	stur	w0, [x29, #-8]
  404edc:	stur	x1, [x29, #-16]
  404ee0:	stur	x2, [x29, #-24]
  404ee4:	mov	x0, x14
  404ee8:	mov	w1, w9
  404eec:	mov	x2, x8
  404ef0:	str	x3, [sp, #56]
  404ef4:	str	x4, [sp, #48]
  404ef8:	str	x10, [sp, #40]
  404efc:	str	w11, [sp, #36]
  404f00:	str	x12, [sp, #24]
  404f04:	str	x13, [sp, #16]
  404f08:	bl	402b48 <memset@plt>
  404f0c:	bl	402a58 <geteuid@plt>
  404f10:	cmp	w0, #0x0
  404f14:	cset	w9, ne  // ne = any
  404f18:	and	w0, w9, #0x1
  404f1c:	ldr	x1, [sp, #56]
  404f20:	ldr	x2, [sp, #48]
  404f24:	ldr	x3, [sp, #48]
  404f28:	ldr	x4, [sp, #40]
  404f2c:	bl	405db0 <__fxstat64@plt+0x2d38>
  404f30:	stur	w0, [x29, #-116]
  404f34:	ldur	w9, [x29, #-116]
  404f38:	ldr	w11, [sp, #36]
  404f3c:	cmp	w9, w11
  404f40:	b.ne	404fd0 <__fxstat64@plt+0x1f58>  // b.any
  404f44:	mov	w8, #0x3                   	// #3
  404f48:	str	w8, [sp, #120]
  404f4c:	ldur	w8, [x29, #-116]
  404f50:	str	w8, [sp, #116]
  404f54:	str	wzr, [sp, #112]
  404f58:	ldr	w0, [sp, #112]
  404f5c:	bl	4029d8 <log_get_max_level_realm@plt>
  404f60:	ldr	w8, [sp, #120]
  404f64:	and	w8, w8, #0x7
  404f68:	cmp	w0, w8
  404f6c:	b.lt	404fa0 <__fxstat64@plt+0x1f28>  // b.tstop
  404f70:	ldr	w8, [sp, #112]
  404f74:	ldr	w9, [sp, #120]
  404f78:	orr	w0, w9, w8, lsl #10
  404f7c:	ldr	w1, [sp, #116]
  404f80:	ldr	x2, [sp, #24]
  404f84:	mov	w3, #0x525                 	// #1317
  404f88:	ldr	x4, [sp, #16]
  404f8c:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  404f90:	add	x5, x5, #0xef
  404f94:	bl	4029e8 <log_internal_realm@plt>
  404f98:	str	w0, [sp, #12]
  404f9c:	b	404fb4 <__fxstat64@plt+0x1f3c>
  404fa0:	ldr	w0, [sp, #116]
  404fa4:	bl	4029f8 <abs@plt>
  404fa8:	mov	w8, wzr
  404fac:	subs	w8, w8, w0, uxtb
  404fb0:	str	w8, [sp, #12]
  404fb4:	ldr	w8, [sp, #12]
  404fb8:	str	w8, [sp, #108]
  404fbc:	ldr	w8, [sp, #108]
  404fc0:	stur	w8, [x29, #-4]
  404fc4:	mov	w8, #0x1                   	// #1
  404fc8:	str	w8, [sp, #104]
  404fcc:	b	405270 <__fxstat64@plt+0x21f8>
  404fd0:	ldur	w8, [x29, #-116]
  404fd4:	cmp	w8, #0x0
  404fd8:	cset	w8, ge  // ge = tcont
  404fdc:	tbnz	w8, #0, 404ff4 <__fxstat64@plt+0x1f7c>
  404fe0:	ldur	w8, [x29, #-116]
  404fe4:	stur	w8, [x29, #-4]
  404fe8:	mov	w8, #0x1                   	// #1
  404fec:	str	w8, [sp, #104]
  404ff0:	b	405270 <__fxstat64@plt+0x21f8>
  404ff4:	bl	402a58 <geteuid@plt>
  404ff8:	cmp	w0, #0x0
  404ffc:	cset	w8, ne  // ne = any
  405000:	and	w0, w8, #0x1
  405004:	mov	x9, xzr
  405008:	mov	x1, x9
  40500c:	bl	405f98 <__fxstat64@plt+0x2f20>
  405010:	stur	w0, [x29, #-116]
  405014:	ldur	w8, [x29, #-116]
  405018:	mov	w10, #0xfffffff3            	// #-13
  40501c:	cmp	w8, w10
  405020:	b.ne	4050b0 <__fxstat64@plt+0x2038>  // b.any
  405024:	mov	w8, #0x3                   	// #3
  405028:	str	w8, [sp, #100]
  40502c:	ldur	w8, [x29, #-116]
  405030:	str	w8, [sp, #96]
  405034:	str	wzr, [sp, #92]
  405038:	ldr	w0, [sp, #92]
  40503c:	bl	4029d8 <log_get_max_level_realm@plt>
  405040:	ldr	w8, [sp, #100]
  405044:	and	w8, w8, #0x7
  405048:	cmp	w0, w8
  40504c:	b.lt	405080 <__fxstat64@plt+0x2008>  // b.tstop
  405050:	ldr	w8, [sp, #92]
  405054:	ldr	w9, [sp, #100]
  405058:	orr	w0, w9, w8, lsl #10
  40505c:	ldr	w1, [sp, #96]
  405060:	ldr	x2, [sp, #24]
  405064:	mov	w3, #0x52b                 	// #1323
  405068:	ldr	x4, [sp, #16]
  40506c:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405070:	add	x5, x5, #0x10b
  405074:	bl	4029e8 <log_internal_realm@plt>
  405078:	str	w0, [sp, #8]
  40507c:	b	405094 <__fxstat64@plt+0x201c>
  405080:	ldr	w0, [sp, #96]
  405084:	bl	4029f8 <abs@plt>
  405088:	mov	w8, wzr
  40508c:	subs	w8, w8, w0, uxtb
  405090:	str	w8, [sp, #8]
  405094:	ldr	w8, [sp, #8]
  405098:	str	w8, [sp, #88]
  40509c:	ldr	w8, [sp, #88]
  4050a0:	stur	w8, [x29, #-4]
  4050a4:	mov	w8, #0x1                   	// #1
  4050a8:	str	w8, [sp, #104]
  4050ac:	b	405270 <__fxstat64@plt+0x21f8>
  4050b0:	ldur	w8, [x29, #-116]
  4050b4:	cmp	w8, #0x0
  4050b8:	cset	w8, ge  // ge = tcont
  4050bc:	tbnz	w8, #0, 4050d4 <__fxstat64@plt+0x205c>
  4050c0:	ldur	w8, [x29, #-116]
  4050c4:	stur	w8, [x29, #-4]
  4050c8:	mov	w8, #0x1                   	// #1
  4050cc:	str	w8, [sp, #104]
  4050d0:	b	405270 <__fxstat64@plt+0x21f8>
  4050d4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4050d8:	add	x8, x8, #0x10
  4050dc:	ldr	x0, [x8]
  4050e0:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4050e4:	add	x8, x8, #0x18
  4050e8:	ldr	x1, [x8]
  4050ec:	sub	x2, x29, #0x70
  4050f0:	bl	402b58 <boot_entries_load_config@plt>
  4050f4:	stur	w0, [x29, #-116]
  4050f8:	ldur	w9, [x29, #-116]
  4050fc:	cmp	w9, #0x0
  405100:	cset	w9, ge  // ge = tcont
  405104:	tbnz	w9, #0, 40511c <__fxstat64@plt+0x20a4>
  405108:	ldur	w8, [x29, #-116]
  40510c:	stur	w8, [x29, #-4]
  405110:	mov	w8, #0x1                   	// #1
  405114:	str	w8, [sp, #104]
  405118:	b	405270 <__fxstat64@plt+0x21f8>
  40511c:	sub	x0, x29, #0x70
  405120:	mov	w8, wzr
  405124:	and	w1, w8, #0x1
  405128:	bl	402b68 <boot_entries_augment_from_loader@plt>
  40512c:	ldur	x9, [x29, #-40]
  405130:	cbnz	x9, 4051ac <__fxstat64@plt+0x2134>
  405134:	mov	w8, #0x6                   	// #6
  405138:	str	w8, [sp, #84]
  40513c:	str	wzr, [sp, #80]
  405140:	str	wzr, [sp, #76]
  405144:	ldr	w0, [sp, #76]
  405148:	bl	4029d8 <log_get_max_level_realm@plt>
  40514c:	ldr	w8, [sp, #84]
  405150:	and	w8, w8, #0x7
  405154:	cmp	w0, w8
  405158:	b.lt	40518c <__fxstat64@plt+0x2114>  // b.tstop
  40515c:	ldr	w8, [sp, #76]
  405160:	ldr	w9, [sp, #84]
  405164:	orr	w0, w9, w8, lsl #10
  405168:	ldr	w1, [sp, #80]
  40516c:	ldr	x2, [sp, #24]
  405170:	mov	w3, #0x536                 	// #1334
  405174:	ldr	x4, [sp, #16]
  405178:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  40517c:	add	x5, x5, #0x136
  405180:	bl	4029e8 <log_internal_realm@plt>
  405184:	str	w0, [sp, #4]
  405188:	b	4051a0 <__fxstat64@plt+0x2128>
  40518c:	ldr	w0, [sp, #80]
  405190:	bl	4029f8 <abs@plt>
  405194:	mov	w8, wzr
  405198:	subs	w8, w8, w0, uxtb
  40519c:	str	w8, [sp, #4]
  4051a0:	ldr	w8, [sp, #4]
  4051a4:	str	w8, [sp, #72]
  4051a8:	b	405264 <__fxstat64@plt+0x21ec>
  4051ac:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4051b0:	add	x8, x8, #0x24
  4051b4:	ldr	w0, [x8]
  4051b8:	bl	402a78 <pager_open@plt>
  4051bc:	adrp	x8, 410000 <__fxstat64@plt+0xcf88>
  4051c0:	add	x8, x8, #0x154
  4051c4:	mov	x0, x8
  4051c8:	bl	402a38 <printf@plt>
  4051cc:	str	xzr, [sp, #64]
  4051d0:	ldr	x8, [sp, #64]
  4051d4:	ldur	x9, [x29, #-40]
  4051d8:	cmp	x8, x9
  4051dc:	b.cs	405264 <__fxstat64@plt+0x21ec>  // b.hs, b.nlast
  4051e0:	sub	x8, x29, #0x70
  4051e4:	ldr	x8, [x8, #64]
  4051e8:	ldr	x9, [sp, #64]
  4051ec:	mov	x10, #0x70                  	// #112
  4051f0:	mul	x9, x10, x9
  4051f4:	add	x0, x8, x9
  4051f8:	ldr	x8, [sp, #64]
  4051fc:	ldur	x9, [x29, #-32]
  405200:	cmp	x8, x9
  405204:	cset	w11, eq  // eq = none
  405208:	and	w1, w11, #0x1
  40520c:	bl	407cac <__fxstat64@plt+0x4c34>
  405210:	stur	w0, [x29, #-116]
  405214:	ldur	w11, [x29, #-116]
  405218:	cmp	w11, #0x0
  40521c:	cset	w11, ge  // ge = tcont
  405220:	tbnz	w11, #0, 405238 <__fxstat64@plt+0x21c0>
  405224:	ldur	w8, [x29, #-116]
  405228:	stur	w8, [x29, #-4]
  40522c:	mov	w8, #0x1                   	// #1
  405230:	str	w8, [sp, #104]
  405234:	b	405270 <__fxstat64@plt+0x21f8>
  405238:	ldr	x8, [sp, #64]
  40523c:	add	x8, x8, #0x1
  405240:	ldur	x9, [x29, #-40]
  405244:	cmp	x8, x9
  405248:	b.cs	405254 <__fxstat64@plt+0x21dc>  // b.hs, b.nlast
  40524c:	mov	w0, #0xa                   	// #10
  405250:	bl	402b78 <putchar@plt>
  405254:	ldr	x8, [sp, #64]
  405258:	add	x8, x8, #0x1
  40525c:	str	x8, [sp, #64]
  405260:	b	4051d0 <__fxstat64@plt+0x2158>
  405264:	stur	wzr, [x29, #-4]
  405268:	mov	w8, #0x1                   	// #1
  40526c:	str	w8, [sp, #104]
  405270:	sub	x0, x29, #0x70
  405274:	bl	402b88 <boot_config_free@plt>
  405278:	ldur	w0, [x29, #-4]
  40527c:	ldp	x29, x30, [sp, #240]
  405280:	add	sp, sp, #0x100
  405284:	ret
  405288:	sub	sp, sp, #0x140
  40528c:	stp	x29, x30, [sp, #288]
  405290:	str	x28, [sp, #304]
  405294:	add	x29, sp, #0x120
  405298:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40529c:	add	x8, x8, #0xf88
  4052a0:	add	x8, x8, #0x3
  4052a4:	adrp	x9, 410000 <__fxstat64@plt+0xcf88>
  4052a8:	add	x9, x9, #0x16a
  4052ac:	stur	w0, [x29, #-8]
  4052b0:	stur	x1, [x29, #-16]
  4052b4:	stur	x2, [x29, #-24]
  4052b8:	str	x8, [sp, #80]
  4052bc:	str	x9, [sp, #72]
  4052c0:	bl	402a88 <is_efi_boot@plt>
  4052c4:	tbnz	w0, #0, 405350 <__fxstat64@plt+0x22d8>
  4052c8:	mov	w8, #0x3                   	// #3
  4052cc:	stur	w8, [x29, #-40]
  4052d0:	mov	w8, #0x5f                  	// #95
  4052d4:	movk	w8, #0x4000, lsl #16
  4052d8:	stur	w8, [x29, #-44]
  4052dc:	stur	wzr, [x29, #-48]
  4052e0:	ldur	w0, [x29, #-48]
  4052e4:	bl	4029d8 <log_get_max_level_realm@plt>
  4052e8:	ldur	w8, [x29, #-40]
  4052ec:	and	w8, w8, #0x7
  4052f0:	cmp	w0, w8
  4052f4:	b.lt	405328 <__fxstat64@plt+0x22b0>  // b.tstop
  4052f8:	ldur	w8, [x29, #-48]
  4052fc:	ldur	w9, [x29, #-40]
  405300:	orr	w0, w9, w8, lsl #10
  405304:	ldur	w1, [x29, #-44]
  405308:	ldr	x2, [sp, #80]
  40530c:	mov	w3, #0x68e                 	// #1678
  405310:	ldr	x4, [sp, #72]
  405314:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405318:	add	x5, x5, #0x17b
  40531c:	bl	4029e8 <log_internal_realm@plt>
  405320:	str	w0, [sp, #68]
  405324:	b	40533c <__fxstat64@plt+0x22c4>
  405328:	ldur	w0, [x29, #-44]
  40532c:	bl	4029f8 <abs@plt>
  405330:	mov	w8, wzr
  405334:	subs	w8, w8, w0, uxtb
  405338:	str	w8, [sp, #68]
  40533c:	ldr	w8, [sp, #68]
  405340:	stur	w8, [x29, #-52]
  405344:	ldur	w8, [x29, #-52]
  405348:	stur	w8, [x29, #-4]
  40534c:	b	405950 <__fxstat64@plt+0x28d8>
  405350:	adrp	x0, 410000 <__fxstat64@plt+0xcf88>
  405354:	add	x0, x0, #0x191
  405358:	mov	w8, wzr
  40535c:	mov	w1, w8
  405360:	bl	402af8 <access@plt>
  405364:	cmp	w0, #0x0
  405368:	cset	w8, ge  // ge = tcont
  40536c:	tbnz	w8, #0, 405498 <__fxstat64@plt+0x2420>
  405370:	bl	402b98 <__errno_location@plt>
  405374:	ldr	w8, [x0]
  405378:	cmp	w8, #0x2
  40537c:	b.ne	405408 <__fxstat64@plt+0x2390>  // b.any
  405380:	mov	w8, #0x3                   	// #3
  405384:	stur	w8, [x29, #-56]
  405388:	bl	402b98 <__errno_location@plt>
  40538c:	ldr	w8, [x0]
  405390:	stur	w8, [x29, #-60]
  405394:	stur	wzr, [x29, #-64]
  405398:	ldur	w0, [x29, #-64]
  40539c:	bl	4029d8 <log_get_max_level_realm@plt>
  4053a0:	ldur	w8, [x29, #-56]
  4053a4:	and	w8, w8, #0x7
  4053a8:	cmp	w0, w8
  4053ac:	b.lt	4053e0 <__fxstat64@plt+0x2368>  // b.tstop
  4053b0:	ldur	w8, [x29, #-64]
  4053b4:	ldur	w9, [x29, #-56]
  4053b8:	orr	w0, w9, w8, lsl #10
  4053bc:	ldur	w1, [x29, #-60]
  4053c0:	ldr	x2, [sp, #80]
  4053c4:	mov	w3, #0x692                 	// #1682
  4053c8:	ldr	x4, [sp, #72]
  4053cc:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  4053d0:	add	x5, x5, #0x1db
  4053d4:	bl	4029e8 <log_internal_realm@plt>
  4053d8:	str	w0, [sp, #64]
  4053dc:	b	4053f4 <__fxstat64@plt+0x237c>
  4053e0:	ldur	w0, [x29, #-60]
  4053e4:	bl	4029f8 <abs@plt>
  4053e8:	mov	w8, wzr
  4053ec:	subs	w8, w8, w0, uxtb
  4053f0:	str	w8, [sp, #64]
  4053f4:	ldr	w8, [sp, #64]
  4053f8:	stur	w8, [x29, #-68]
  4053fc:	mov	w8, #0xffffffa1            	// #-95
  405400:	stur	w8, [x29, #-4]
  405404:	b	405950 <__fxstat64@plt+0x28d8>
  405408:	mov	w8, #0x3                   	// #3
  40540c:	stur	w8, [x29, #-72]
  405410:	bl	402b98 <__errno_location@plt>
  405414:	ldr	w8, [x0]
  405418:	stur	w8, [x29, #-76]
  40541c:	stur	wzr, [x29, #-80]
  405420:	ldur	w0, [x29, #-80]
  405424:	bl	4029d8 <log_get_max_level_realm@plt>
  405428:	ldur	w8, [x29, #-72]
  40542c:	and	w8, w8, #0x7
  405430:	cmp	w0, w8
  405434:	b.lt	405470 <__fxstat64@plt+0x23f8>  // b.tstop
  405438:	ldur	w8, [x29, #-80]
  40543c:	ldur	w9, [x29, #-72]
  405440:	orr	w0, w9, w8, lsl #10
  405444:	ldur	w1, [x29, #-76]
  405448:	ldur	x10, [x29, #-16]
  40544c:	ldr	x6, [x10]
  405450:	ldr	x2, [sp, #80]
  405454:	mov	w3, #0x696                 	// #1686
  405458:	ldr	x4, [sp, #72]
  40545c:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405460:	add	x5, x5, #0x204
  405464:	bl	4029e8 <log_internal_realm@plt>
  405468:	str	w0, [sp, #60]
  40546c:	b	405484 <__fxstat64@plt+0x240c>
  405470:	ldur	w0, [x29, #-76]
  405474:	bl	4029f8 <abs@plt>
  405478:	mov	w8, wzr
  40547c:	subs	w8, w8, w0, uxtb
  405480:	str	w8, [sp, #60]
  405484:	ldr	w8, [sp, #60]
  405488:	stur	w8, [x29, #-84]
  40548c:	ldur	w8, [x29, #-84]
  405490:	stur	w8, [x29, #-4]
  405494:	b	405950 <__fxstat64@plt+0x28d8>
  405498:	bl	402968 <detect_container@plt>
  40549c:	cmp	w0, #0x0
  4054a0:	cset	w8, le
  4054a4:	tbnz	w8, #0, 405538 <__fxstat64@plt+0x24c0>
  4054a8:	mov	w8, #0x3                   	// #3
  4054ac:	stur	w8, [x29, #-88]
  4054b0:	mov	w8, #0x5f                  	// #95
  4054b4:	movk	w8, #0x4000, lsl #16
  4054b8:	stur	w8, [x29, #-92]
  4054bc:	stur	wzr, [x29, #-96]
  4054c0:	ldur	w0, [x29, #-96]
  4054c4:	bl	4029d8 <log_get_max_level_realm@plt>
  4054c8:	ldur	w8, [x29, #-88]
  4054cc:	and	w8, w8, #0x7
  4054d0:	cmp	w0, w8
  4054d4:	b.lt	405510 <__fxstat64@plt+0x2498>  // b.tstop
  4054d8:	ldur	w8, [x29, #-96]
  4054dc:	ldur	w9, [x29, #-88]
  4054e0:	orr	w0, w9, w8, lsl #10
  4054e4:	ldur	w1, [x29, #-92]
  4054e8:	ldur	x10, [x29, #-16]
  4054ec:	ldr	x6, [x10]
  4054f0:	ldr	x2, [sp, #80]
  4054f4:	mov	w3, #0x69c                 	// #1692
  4054f8:	ldr	x4, [sp, #72]
  4054fc:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405500:	add	x5, x5, #0x245
  405504:	bl	4029e8 <log_internal_realm@plt>
  405508:	str	w0, [sp, #56]
  40550c:	b	405524 <__fxstat64@plt+0x24ac>
  405510:	ldur	w0, [x29, #-92]
  405514:	bl	4029f8 <abs@plt>
  405518:	mov	w8, wzr
  40551c:	subs	w8, w8, w0, uxtb
  405520:	str	w8, [sp, #56]
  405524:	ldr	w8, [sp, #56]
  405528:	stur	w8, [x29, #-100]
  40552c:	ldur	w8, [x29, #-100]
  405530:	stur	w8, [x29, #-4]
  405534:	b	405950 <__fxstat64@plt+0x28d8>
  405538:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  40553c:	add	x8, x8, #0x0
  405540:	ldrb	w9, [x8]
  405544:	tbnz	w9, #0, 4055d8 <__fxstat64@plt+0x2560>
  405548:	mov	w8, #0x3                   	// #3
  40554c:	stur	w8, [x29, #-104]
  405550:	mov	w8, #0x16                  	// #22
  405554:	movk	w8, #0x4000, lsl #16
  405558:	stur	w8, [x29, #-108]
  40555c:	stur	wzr, [x29, #-112]
  405560:	ldur	w0, [x29, #-112]
  405564:	bl	4029d8 <log_get_max_level_realm@plt>
  405568:	ldur	w8, [x29, #-104]
  40556c:	and	w8, w8, #0x7
  405570:	cmp	w0, w8
  405574:	b.lt	4055b0 <__fxstat64@plt+0x2538>  // b.tstop
  405578:	ldur	w8, [x29, #-112]
  40557c:	ldur	w9, [x29, #-104]
  405580:	orr	w0, w9, w8, lsl #10
  405584:	ldur	w1, [x29, #-108]
  405588:	ldur	x10, [x29, #-16]
  40558c:	ldr	x6, [x10]
  405590:	ldr	x2, [sp, #80]
  405594:	mov	w3, #0x6a1                 	// #1697
  405598:	ldr	x4, [sp, #72]
  40559c:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  4055a0:	add	x5, x5, #0x272
  4055a4:	bl	4029e8 <log_internal_realm@plt>
  4055a8:	str	w0, [sp, #52]
  4055ac:	b	4055c4 <__fxstat64@plt+0x254c>
  4055b0:	ldur	w0, [x29, #-108]
  4055b4:	bl	4029f8 <abs@plt>
  4055b8:	mov	w8, wzr
  4055bc:	subs	w8, w8, w0, uxtb
  4055c0:	str	w8, [sp, #52]
  4055c4:	ldr	w8, [sp, #52]
  4055c8:	stur	w8, [x29, #-116]
  4055cc:	ldur	w8, [x29, #-116]
  4055d0:	stur	w8, [x29, #-4]
  4055d4:	b	405950 <__fxstat64@plt+0x28d8>
  4055d8:	ldur	x8, [x29, #-16]
  4055dc:	ldr	x0, [x8]
  4055e0:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4055e4:	add	x1, x1, #0x5f1
  4055e8:	bl	402b28 <strcmp@plt>
  4055ec:	adrp	x8, 410000 <__fxstat64@plt+0xcf88>
  4055f0:	add	x8, x8, #0x37
  4055f4:	adrp	x9, 410000 <__fxstat64@plt+0xcf88>
  4055f8:	add	x9, x9, #0x24
  4055fc:	cmp	w0, #0x0
  405600:	csel	x8, x9, x8, eq  // eq = none
  405604:	stur	x8, [x29, #-32]
  405608:	ldur	x8, [x29, #-16]
  40560c:	ldr	x0, [x8, #8]
  405610:	bl	4074a8 <__fxstat64@plt+0x4430>
  405614:	tbnz	w0, #0, 40561c <__fxstat64@plt+0x25a4>
  405618:	b	405768 <__fxstat64@plt+0x26f0>
  40561c:	sub	x8, x29, #0x88
  405620:	mov	w9, #0x4a                  	// #74
  405624:	sturb	w9, [x29, #-136]
  405628:	mov	w9, #0x67                  	// #103
  40562c:	strb	w9, [x8, #1]
  405630:	mov	w9, #0xb0                  	// #176
  405634:	strb	w9, [x8, #2]
  405638:	mov	w9, #0x82                  	// #130
  40563c:	strb	w9, [x8, #3]
  405640:	mov	w9, #0xa                   	// #10
  405644:	strb	w9, [x8, #4]
  405648:	mov	w9, #0x4c                  	// #76
  40564c:	strb	w9, [x8, #5]
  405650:	mov	w9, #0x41                  	// #65
  405654:	strb	w9, [x8, #6]
  405658:	mov	w9, #0xcf                  	// #207
  40565c:	strb	w9, [x8, #7]
  405660:	mov	w9, #0xb6                  	// #182
  405664:	strb	w9, [x8, #8]
  405668:	mov	w9, #0xc7                  	// #199
  40566c:	strb	w9, [x8, #9]
  405670:	mov	w9, #0x44                  	// #68
  405674:	strb	w9, [x8, #10]
  405678:	mov	w9, #0xb                   	// #11
  40567c:	strb	w9, [x8, #11]
  405680:	mov	w9, #0x29                  	// #41
  405684:	strb	w9, [x8, #12]
  405688:	mov	w9, #0xbb                  	// #187
  40568c:	strb	w9, [x8, #13]
  405690:	mov	w9, #0x8c                  	// #140
  405694:	strb	w9, [x8, #14]
  405698:	mov	w9, #0x4f                  	// #79
  40569c:	strb	w9, [x8, #15]
  4056a0:	ldur	x2, [x29, #-32]
  4056a4:	ldur	x0, [x29, #-136]
  4056a8:	ldur	x1, [x29, #-128]
  4056ac:	mov	x8, xzr
  4056b0:	mov	x3, x8
  4056b4:	mov	x4, x8
  4056b8:	bl	402ba8 <efi_set_variable@plt>
  4056bc:	stur	w0, [x29, #-36]
  4056c0:	ldur	w9, [x29, #-36]
  4056c4:	cmp	w9, #0x0
  4056c8:	cset	w9, ge  // ge = tcont
  4056cc:	tbnz	w9, #0, 405764 <__fxstat64@plt+0x26ec>
  4056d0:	ldur	w8, [x29, #-36]
  4056d4:	mov	w9, #0xfffffffe            	// #-2
  4056d8:	cmp	w8, w9
  4056dc:	b.eq	405764 <__fxstat64@plt+0x26ec>  // b.none
  4056e0:	mov	w8, #0x3                   	// #3
  4056e4:	stur	w8, [x29, #-140]
  4056e8:	ldur	w8, [x29, #-36]
  4056ec:	str	w8, [sp, #144]
  4056f0:	str	wzr, [sp, #140]
  4056f4:	ldr	w0, [sp, #140]
  4056f8:	bl	4029d8 <log_get_max_level_realm@plt>
  4056fc:	ldur	w8, [x29, #-140]
  405700:	and	w8, w8, #0x7
  405704:	cmp	w0, w8
  405708:	b.lt	40573c <__fxstat64@plt+0x26c4>  // b.tstop
  40570c:	ldr	w8, [sp, #140]
  405710:	ldur	w9, [x29, #-140]
  405714:	orr	w0, w9, w8, lsl #10
  405718:	ldr	w1, [sp, #144]
  40571c:	ldr	x2, [sp, #80]
  405720:	mov	w3, #0x6a8                 	// #1704
  405724:	ldr	x4, [sp, #72]
  405728:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  40572c:	add	x5, x5, #0x2af
  405730:	bl	4029e8 <log_internal_realm@plt>
  405734:	str	w0, [sp, #48]
  405738:	b	405750 <__fxstat64@plt+0x26d8>
  40573c:	ldr	w0, [sp, #144]
  405740:	bl	4029f8 <abs@plt>
  405744:	mov	w8, wzr
  405748:	subs	w8, w8, w0, uxtb
  40574c:	str	w8, [sp, #48]
  405750:	ldr	w8, [sp, #48]
  405754:	str	w8, [sp, #136]
  405758:	ldr	w8, [sp, #136]
  40575c:	stur	w8, [x29, #-4]
  405760:	b	405950 <__fxstat64@plt+0x28d8>
  405764:	b	40594c <__fxstat64@plt+0x28d4>
  405768:	mov	x8, xzr
  40576c:	str	x8, [sp, #128]
  405770:	ldur	x8, [x29, #-16]
  405774:	ldr	x0, [x8, #8]
  405778:	ldur	x8, [x29, #-16]
  40577c:	ldr	x8, [x8, #8]
  405780:	str	x0, [sp, #40]
  405784:	mov	x0, x8
  405788:	bl	402bb8 <strlen@plt>
  40578c:	ldr	x8, [sp, #40]
  405790:	str	x0, [sp, #32]
  405794:	mov	x0, x8
  405798:	ldr	x1, [sp, #32]
  40579c:	bl	402bc8 <utf8_to_utf16@plt>
  4057a0:	str	x0, [sp, #128]
  4057a4:	ldr	x8, [sp, #128]
  4057a8:	cbnz	x8, 4057d4 <__fxstat64@plt+0x275c>
  4057ac:	mov	w8, wzr
  4057b0:	mov	w0, w8
  4057b4:	ldr	x1, [sp, #80]
  4057b8:	mov	w2, #0x6ae                 	// #1710
  4057bc:	ldr	x3, [sp, #72]
  4057c0:	bl	4029c8 <log_oom_internal@plt>
  4057c4:	stur	w0, [x29, #-4]
  4057c8:	mov	w8, #0x1                   	// #1
  4057cc:	str	w8, [sp, #124]
  4057d0:	b	405934 <__fxstat64@plt+0x28bc>
  4057d4:	add	x8, sp, #0x68
  4057d8:	mov	w9, #0x4a                  	// #74
  4057dc:	strb	w9, [sp, #104]
  4057e0:	mov	w9, #0x67                  	// #103
  4057e4:	strb	w9, [x8, #1]
  4057e8:	mov	w9, #0xb0                  	// #176
  4057ec:	strb	w9, [x8, #2]
  4057f0:	mov	w9, #0x82                  	// #130
  4057f4:	strb	w9, [x8, #3]
  4057f8:	mov	w9, #0xa                   	// #10
  4057fc:	strb	w9, [x8, #4]
  405800:	mov	w9, #0x4c                  	// #76
  405804:	strb	w9, [x8, #5]
  405808:	mov	w9, #0x41                  	// #65
  40580c:	strb	w9, [x8, #6]
  405810:	mov	w9, #0xcf                  	// #207
  405814:	strb	w9, [x8, #7]
  405818:	mov	w9, #0xb6                  	// #182
  40581c:	strb	w9, [x8, #8]
  405820:	mov	w9, #0xc7                  	// #199
  405824:	strb	w9, [x8, #9]
  405828:	mov	w9, #0x44                  	// #68
  40582c:	strb	w9, [x8, #10]
  405830:	mov	w9, #0xb                   	// #11
  405834:	strb	w9, [x8, #11]
  405838:	mov	w9, #0x29                  	// #41
  40583c:	strb	w9, [x8, #12]
  405840:	mov	w9, #0xbb                  	// #187
  405844:	strb	w9, [x8, #13]
  405848:	mov	w9, #0x8c                  	// #140
  40584c:	strb	w9, [x8, #14]
  405850:	mov	w9, #0x4f                  	// #79
  405854:	strb	w9, [x8, #15]
  405858:	ldur	x2, [x29, #-32]
  40585c:	ldr	x3, [sp, #128]
  405860:	ldr	x0, [sp, #128]
  405864:	str	x2, [sp, #24]
  405868:	str	x3, [sp, #16]
  40586c:	bl	402bd8 <char16_strlen@plt>
  405870:	mov	x8, #0x2                   	// #2
  405874:	mul	x8, x0, x8
  405878:	add	x4, x8, #0x2
  40587c:	ldr	x0, [sp, #104]
  405880:	ldr	x1, [sp, #112]
  405884:	ldr	x2, [sp, #24]
  405888:	ldr	x3, [sp, #16]
  40588c:	bl	402ba8 <efi_set_variable@plt>
  405890:	stur	w0, [x29, #-36]
  405894:	ldur	w9, [x29, #-36]
  405898:	cmp	w9, #0x0
  40589c:	cset	w9, ge  // ge = tcont
  4058a0:	tbnz	w9, #0, 405930 <__fxstat64@plt+0x28b8>
  4058a4:	mov	w8, #0x3                   	// #3
  4058a8:	str	w8, [sp, #100]
  4058ac:	ldur	w8, [x29, #-36]
  4058b0:	str	w8, [sp, #96]
  4058b4:	str	wzr, [sp, #92]
  4058b8:	ldr	w0, [sp, #92]
  4058bc:	bl	4029d8 <log_get_max_level_realm@plt>
  4058c0:	ldr	w8, [sp, #100]
  4058c4:	and	w8, w8, #0x7
  4058c8:	cmp	w0, w8
  4058cc:	b.lt	405900 <__fxstat64@plt+0x2888>  // b.tstop
  4058d0:	ldr	w8, [sp, #92]
  4058d4:	ldr	w9, [sp, #100]
  4058d8:	orr	w0, w9, w8, lsl #10
  4058dc:	ldr	w1, [sp, #96]
  4058e0:	ldr	x2, [sp, #80]
  4058e4:	mov	w3, #0x6b2                 	// #1714
  4058e8:	ldr	x4, [sp, #72]
  4058ec:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  4058f0:	add	x5, x5, #0x2d0
  4058f4:	bl	4029e8 <log_internal_realm@plt>
  4058f8:	str	w0, [sp, #12]
  4058fc:	b	405914 <__fxstat64@plt+0x289c>
  405900:	ldr	w0, [sp, #96]
  405904:	bl	4029f8 <abs@plt>
  405908:	mov	w8, wzr
  40590c:	subs	w8, w8, w0, uxtb
  405910:	str	w8, [sp, #12]
  405914:	ldr	w8, [sp, #12]
  405918:	str	w8, [sp, #88]
  40591c:	ldr	w8, [sp, #88]
  405920:	stur	w8, [x29, #-4]
  405924:	mov	w8, #0x1                   	// #1
  405928:	str	w8, [sp, #124]
  40592c:	b	405934 <__fxstat64@plt+0x28bc>
  405930:	str	wzr, [sp, #124]
  405934:	add	x0, sp, #0x80
  405938:	bl	403464 <__fxstat64@plt+0x3ec>
  40593c:	ldr	w8, [sp, #124]
  405940:	cbz	w8, 40594c <__fxstat64@plt+0x28d4>
  405944:	b	405948 <__fxstat64@plt+0x28d0>
  405948:	b	405950 <__fxstat64@plt+0x28d8>
  40594c:	stur	wzr, [x29, #-4]
  405950:	ldur	w0, [x29, #-4]
  405954:	ldr	x28, [sp, #304]
  405958:	ldp	x29, x30, [sp, #288]
  40595c:	add	sp, sp, #0x140
  405960:	ret
  405964:	sub	sp, sp, #0x80
  405968:	stp	x29, x30, [sp, #112]
  40596c:	add	x29, sp, #0x70
  405970:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  405974:	add	x8, x8, #0x10
  405978:	mov	x9, xzr
  40597c:	mov	x3, x9
  405980:	mov	x4, x9
  405984:	mov	w10, #0xffffff82            	// #-126
  405988:	mov	w11, wzr
  40598c:	adrp	x12, 40d000 <__fxstat64@plt+0x9f88>
  405990:	add	x12, x12, #0xf88
  405994:	add	x12, x12, #0x3
  405998:	stur	w0, [x29, #-8]
  40599c:	stur	x1, [x29, #-16]
  4059a0:	stur	x2, [x29, #-24]
  4059a4:	ldr	x0, [x8]
  4059a8:	and	w1, w11, #0x1
  4059ac:	mov	x2, x8
  4059b0:	str	x4, [sp, #40]
  4059b4:	ldr	x5, [sp, #40]
  4059b8:	mov	x6, x9
  4059bc:	str	x8, [sp, #32]
  4059c0:	str	w10, [sp, #28]
  4059c4:	str	x12, [sp, #16]
  4059c8:	bl	402be8 <find_esp_and_warn@plt>
  4059cc:	stur	w0, [x29, #-28]
  4059d0:	ldur	w10, [x29, #-28]
  4059d4:	ldr	w11, [sp, #28]
  4059d8:	cmp	w10, w11
  4059dc:	b.ne	405af8 <__fxstat64@plt+0x2a80>  // b.any
  4059e0:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4059e4:	add	x8, x8, #0x28
  4059e8:	ldrb	w9, [x8]
  4059ec:	tbnz	w9, #0, 405a78 <__fxstat64@plt+0x2a00>
  4059f0:	mov	w8, #0x3                   	// #3
  4059f4:	stur	w8, [x29, #-32]
  4059f8:	ldur	w8, [x29, #-28]
  4059fc:	stur	w8, [x29, #-36]
  405a00:	stur	wzr, [x29, #-40]
  405a04:	ldur	w0, [x29, #-40]
  405a08:	bl	4029d8 <log_get_max_level_realm@plt>
  405a0c:	ldur	w8, [x29, #-32]
  405a10:	and	w8, w8, #0x7
  405a14:	cmp	w0, w8
  405a18:	b.lt	405a50 <__fxstat64@plt+0x29d8>  // b.tstop
  405a1c:	ldur	w8, [x29, #-40]
  405a20:	ldur	w9, [x29, #-32]
  405a24:	orr	w0, w9, w8, lsl #10
  405a28:	ldur	w1, [x29, #-36]
  405a2c:	ldr	x2, [sp, #16]
  405a30:	mov	w3, #0x6bf                 	// #1727
  405a34:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  405a38:	add	x4, x4, #0x2f2
  405a3c:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405a40:	add	x5, x5, #0x303
  405a44:	bl	4029e8 <log_internal_realm@plt>
  405a48:	str	w0, [sp, #12]
  405a4c:	b	405a64 <__fxstat64@plt+0x29ec>
  405a50:	ldur	w0, [x29, #-36]
  405a54:	bl	4029f8 <abs@plt>
  405a58:	mov	w8, wzr
  405a5c:	subs	w8, w8, w0, uxtb
  405a60:	str	w8, [sp, #12]
  405a64:	ldr	w8, [sp, #12]
  405a68:	stur	w8, [x29, #-44]
  405a6c:	ldur	w8, [x29, #-44]
  405a70:	stur	w8, [x29, #-4]
  405a74:	b	405b48 <__fxstat64@plt+0x2ad0>
  405a78:	mov	w8, #0x5                   	// #5
  405a7c:	stur	w8, [x29, #-48]
  405a80:	stur	wzr, [x29, #-52]
  405a84:	str	wzr, [sp, #56]
  405a88:	ldr	w0, [sp, #56]
  405a8c:	bl	4029d8 <log_get_max_level_realm@plt>
  405a90:	ldur	w8, [x29, #-48]
  405a94:	and	w8, w8, #0x7
  405a98:	cmp	w0, w8
  405a9c:	b.lt	405ad4 <__fxstat64@plt+0x2a5c>  // b.tstop
  405aa0:	ldr	w8, [sp, #56]
  405aa4:	ldur	w9, [x29, #-48]
  405aa8:	orr	w0, w9, w8, lsl #10
  405aac:	ldur	w1, [x29, #-52]
  405ab0:	ldr	x2, [sp, #16]
  405ab4:	mov	w3, #0x6c1                 	// #1729
  405ab8:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  405abc:	add	x4, x4, #0x2f2
  405ac0:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405ac4:	add	x5, x5, #0x317
  405ac8:	bl	4029e8 <log_internal_realm@plt>
  405acc:	str	w0, [sp, #8]
  405ad0:	b	405ae8 <__fxstat64@plt+0x2a70>
  405ad4:	ldur	w0, [x29, #-52]
  405ad8:	bl	4029f8 <abs@plt>
  405adc:	mov	w8, wzr
  405ae0:	subs	w8, w8, w0, uxtb
  405ae4:	str	w8, [sp, #8]
  405ae8:	ldr	w8, [sp, #8]
  405aec:	str	w8, [sp, #52]
  405af0:	stur	wzr, [x29, #-4]
  405af4:	b	405b48 <__fxstat64@plt+0x2ad0>
  405af8:	ldur	w8, [x29, #-28]
  405afc:	cmp	w8, #0x0
  405b00:	cset	w8, ge  // ge = tcont
  405b04:	tbnz	w8, #0, 405b14 <__fxstat64@plt+0x2a9c>
  405b08:	ldur	w8, [x29, #-28]
  405b0c:	stur	w8, [x29, #-4]
  405b10:	b	405b48 <__fxstat64@plt+0x2ad0>
  405b14:	ldr	x8, [sp, #32]
  405b18:	ldr	x0, [x8]
  405b1c:	bl	408e08 <__fxstat64@plt+0x5d90>
  405b20:	stur	w0, [x29, #-28]
  405b24:	ldur	w9, [x29, #-28]
  405b28:	cmp	w9, #0x0
  405b2c:	cset	w9, ge  // ge = tcont
  405b30:	tbnz	w9, #0, 405b40 <__fxstat64@plt+0x2ac8>
  405b34:	ldur	w8, [x29, #-28]
  405b38:	stur	w8, [x29, #-4]
  405b3c:	b	405b48 <__fxstat64@plt+0x2ad0>
  405b40:	bl	409d20 <__fxstat64@plt+0x6ca8>
  405b44:	stur	wzr, [x29, #-4]
  405b48:	ldur	w0, [x29, #-4]
  405b4c:	ldp	x29, x30, [sp, #112]
  405b50:	add	sp, sp, #0x80
  405b54:	ret
  405b58:	sub	sp, sp, #0x80
  405b5c:	stp	x29, x30, [sp, #112]
  405b60:	add	x29, sp, #0x70
  405b64:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  405b68:	add	x8, x8, #0xf88
  405b6c:	add	x8, x8, #0x3
  405b70:	stur	w0, [x29, #-8]
  405b74:	stur	x1, [x29, #-16]
  405b78:	stur	x2, [x29, #-24]
  405b7c:	ldur	w9, [x29, #-8]
  405b80:	cmp	w9, #0x1
  405b84:	str	x8, [sp, #8]
  405b88:	b.ne	405c68 <__fxstat64@plt+0x2bf0>  // b.any
  405b8c:	sub	x0, x29, #0x28
  405b90:	mov	x8, xzr
  405b94:	stur	x8, [x29, #-40]
  405b98:	bl	402bf8 <systemd_efi_options_variable@plt>
  405b9c:	stur	w0, [x29, #-28]
  405ba0:	ldur	w9, [x29, #-28]
  405ba4:	cmp	w9, #0x0
  405ba8:	cset	w9, ge  // ge = tcont
  405bac:	tbnz	w9, #0, 405c40 <__fxstat64@plt+0x2bc8>
  405bb0:	mov	w8, #0x3                   	// #3
  405bb4:	stur	w8, [x29, #-44]
  405bb8:	ldur	w8, [x29, #-28]
  405bbc:	stur	w8, [x29, #-48]
  405bc0:	stur	wzr, [x29, #-52]
  405bc4:	ldur	w0, [x29, #-52]
  405bc8:	bl	4029d8 <log_get_max_level_realm@plt>
  405bcc:	ldur	w8, [x29, #-44]
  405bd0:	and	w8, w8, #0x7
  405bd4:	cmp	w0, w8
  405bd8:	b.lt	405c10 <__fxstat64@plt+0x2b98>  // b.tstop
  405bdc:	ldur	w8, [x29, #-52]
  405be0:	ldur	w9, [x29, #-44]
  405be4:	orr	w0, w9, w8, lsl #10
  405be8:	ldur	w1, [x29, #-48]
  405bec:	ldr	x2, [sp, #8]
  405bf0:	mov	w3, #0x6d7                 	// #1751
  405bf4:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  405bf8:	add	x4, x4, #0x343
  405bfc:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405c00:	add	x5, x5, #0x35c
  405c04:	bl	4029e8 <log_internal_realm@plt>
  405c08:	str	w0, [sp, #4]
  405c0c:	b	405c24 <__fxstat64@plt+0x2bac>
  405c10:	ldur	w0, [x29, #-48]
  405c14:	bl	4029f8 <abs@plt>
  405c18:	mov	w8, wzr
  405c1c:	subs	w8, w8, w0, uxtb
  405c20:	str	w8, [sp, #4]
  405c24:	ldr	w8, [sp, #4]
  405c28:	str	w8, [sp, #56]
  405c2c:	ldr	w8, [sp, #56]
  405c30:	stur	w8, [x29, #-4]
  405c34:	mov	w8, #0x1                   	// #1
  405c38:	str	w8, [sp, #52]
  405c3c:	b	405c4c <__fxstat64@plt+0x2bd4>
  405c40:	ldur	x0, [x29, #-40]
  405c44:	bl	402a68 <puts@plt>
  405c48:	str	wzr, [sp, #52]
  405c4c:	sub	x0, x29, #0x28
  405c50:	bl	403464 <__fxstat64@plt+0x3ec>
  405c54:	ldr	w8, [sp, #52]
  405c58:	cbz	w8, 405c64 <__fxstat64@plt+0x2bec>
  405c5c:	b	405c60 <__fxstat64@plt+0x2be8>
  405c60:	b	405da0 <__fxstat64@plt+0x2d28>
  405c64:	b	405d9c <__fxstat64@plt+0x2d24>
  405c68:	add	x8, sp, #0x20
  405c6c:	mov	w9, #0x8c                  	// #140
  405c70:	strb	w9, [sp, #32]
  405c74:	mov	w9, #0xf2                  	// #242
  405c78:	strb	w9, [x8, #1]
  405c7c:	mov	w9, #0x64                  	// #100
  405c80:	strb	w9, [x8, #2]
  405c84:	mov	w9, #0x4b                  	// #75
  405c88:	strb	w9, [x8, #3]
  405c8c:	strb	w9, [x8, #4]
  405c90:	mov	w9, #0xb                   	// #11
  405c94:	strb	w9, [x8, #5]
  405c98:	mov	w9, #0x42                  	// #66
  405c9c:	strb	w9, [x8, #6]
  405ca0:	mov	w9, #0x8f                  	// #143
  405ca4:	strb	w9, [x8, #7]
  405ca8:	mov	w9, #0x93                  	// #147
  405cac:	strb	w9, [x8, #8]
  405cb0:	mov	w9, #0x87                  	// #135
  405cb4:	strb	w9, [x8, #9]
  405cb8:	mov	w10, #0x6d                  	// #109
  405cbc:	strb	w10, [x8, #10]
  405cc0:	strb	w9, [x8, #11]
  405cc4:	mov	w9, #0x60                  	// #96
  405cc8:	strb	w9, [x8, #12]
  405ccc:	mov	w9, #0x50                  	// #80
  405cd0:	strb	w9, [x8, #13]
  405cd4:	mov	w9, #0xdc                  	// #220
  405cd8:	strb	w9, [x8, #14]
  405cdc:	mov	w9, #0x67                  	// #103
  405ce0:	strb	w9, [x8, #15]
  405ce4:	ldur	x8, [x29, #-16]
  405ce8:	ldr	x3, [x8, #8]
  405cec:	ldr	x0, [sp, #32]
  405cf0:	ldr	x1, [sp, #40]
  405cf4:	adrp	x2, 410000 <__fxstat64@plt+0xcf88>
  405cf8:	add	x2, x2, #0x38c
  405cfc:	bl	402c08 <efi_set_variable_string@plt>
  405d00:	stur	w0, [x29, #-28]
  405d04:	ldur	w9, [x29, #-28]
  405d08:	cmp	w9, #0x0
  405d0c:	cset	w9, ge  // ge = tcont
  405d10:	tbnz	w9, #0, 405d9c <__fxstat64@plt+0x2d24>
  405d14:	mov	w8, #0x3                   	// #3
  405d18:	str	w8, [sp, #28]
  405d1c:	ldur	w8, [x29, #-28]
  405d20:	str	w8, [sp, #24]
  405d24:	str	wzr, [sp, #20]
  405d28:	ldr	w0, [sp, #20]
  405d2c:	bl	4029d8 <log_get_max_level_realm@plt>
  405d30:	ldr	w8, [sp, #28]
  405d34:	and	w8, w8, #0x7
  405d38:	cmp	w0, w8
  405d3c:	b.lt	405d74 <__fxstat64@plt+0x2cfc>  // b.tstop
  405d40:	ldr	w8, [sp, #20]
  405d44:	ldr	w9, [sp, #28]
  405d48:	orr	w0, w9, w8, lsl #10
  405d4c:	ldr	w1, [sp, #24]
  405d50:	ldr	x2, [sp, #8]
  405d54:	mov	w3, #0x6de                 	// #1758
  405d58:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  405d5c:	add	x4, x4, #0x343
  405d60:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  405d64:	add	x5, x5, #0x39b
  405d68:	bl	4029e8 <log_internal_realm@plt>
  405d6c:	str	w0, [sp]
  405d70:	b	405d88 <__fxstat64@plt+0x2d10>
  405d74:	ldr	w0, [sp, #24]
  405d78:	bl	4029f8 <abs@plt>
  405d7c:	mov	w8, wzr
  405d80:	subs	w8, w8, w0, uxtb
  405d84:	str	w8, [sp]
  405d88:	ldr	w8, [sp]
  405d8c:	str	w8, [sp, #16]
  405d90:	ldr	w8, [sp, #16]
  405d94:	stur	w8, [x29, #-4]
  405d98:	b	405da0 <__fxstat64@plt+0x2d28>
  405d9c:	stur	wzr, [x29, #-4]
  405da0:	ldur	w0, [x29, #-4]
  405da4:	ldp	x29, x30, [sp, #112]
  405da8:	add	sp, sp, #0x80
  405dac:	ret
  405db0:	sub	sp, sp, #0x90
  405db4:	stp	x29, x30, [sp, #128]
  405db8:	add	x29, sp, #0x80
  405dbc:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  405dc0:	add	x8, x8, #0x10
  405dc4:	mov	w9, #0xffffff82            	// #-126
  405dc8:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  405dcc:	add	x10, x10, #0xf88
  405dd0:	add	x10, x10, #0x3
  405dd4:	mov	w11, #0x1                   	// #1
  405dd8:	sub	x12, x29, #0x30
  405ddc:	and	w11, w0, w11
  405de0:	sturb	w11, [x29, #-5]
  405de4:	stur	x1, [x29, #-16]
  405de8:	stur	x2, [x29, #-24]
  405dec:	stur	x3, [x29, #-32]
  405df0:	stur	x4, [x29, #-40]
  405df4:	ldr	x0, [x8]
  405df8:	ldurb	w11, [x29, #-5]
  405dfc:	ldur	x3, [x29, #-16]
  405e00:	ldur	x4, [x29, #-24]
  405e04:	ldur	x5, [x29, #-32]
  405e08:	ldur	x6, [x29, #-40]
  405e0c:	and	w1, w11, #0x1
  405e10:	mov	x2, x12
  405e14:	str	x8, [sp, #32]
  405e18:	str	w9, [sp, #28]
  405e1c:	str	x10, [sp, #16]
  405e20:	bl	402be8 <find_esp_and_warn@plt>
  405e24:	stur	w0, [x29, #-52]
  405e28:	ldur	w9, [x29, #-52]
  405e2c:	ldr	w11, [sp, #28]
  405e30:	cmp	w9, w11
  405e34:	b.ne	405ec0 <__fxstat64@plt+0x2e48>  // b.any
  405e38:	mov	w8, #0x3                   	// #3
  405e3c:	stur	w8, [x29, #-56]
  405e40:	ldur	w8, [x29, #-52]
  405e44:	stur	w8, [x29, #-60]
  405e48:	str	wzr, [sp, #64]
  405e4c:	ldr	w0, [sp, #64]
  405e50:	bl	4029d8 <log_get_max_level_realm@plt>
  405e54:	ldur	w8, [x29, #-56]
  405e58:	and	w8, w8, #0x7
  405e5c:	cmp	w0, w8
  405e60:	b.lt	405e98 <__fxstat64@plt+0x2e20>  // b.tstop
  405e64:	ldr	w8, [sp, #64]
  405e68:	ldur	w9, [x29, #-56]
  405e6c:	orr	w0, w9, w8, lsl #10
  405e70:	ldur	w1, [x29, #-60]
  405e74:	ldr	x2, [sp, #16]
  405e78:	mov	w3, #0x54                  	// #84
  405e7c:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  405e80:	add	x4, x4, #0xa3e
  405e84:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  405e88:	add	x5, x5, #0xa4a
  405e8c:	bl	4029e8 <log_internal_realm@plt>
  405e90:	str	w0, [sp, #12]
  405e94:	b	405eac <__fxstat64@plt+0x2e34>
  405e98:	ldur	w0, [x29, #-60]
  405e9c:	bl	4029f8 <abs@plt>
  405ea0:	mov	w8, wzr
  405ea4:	subs	w8, w8, w0, uxtb
  405ea8:	str	w8, [sp, #12]
  405eac:	ldr	w8, [sp, #12]
  405eb0:	str	w8, [sp, #60]
  405eb4:	ldr	w8, [sp, #60]
  405eb8:	stur	w8, [x29, #-4]
  405ebc:	b	405f88 <__fxstat64@plt+0x2f10>
  405ec0:	ldur	w8, [x29, #-52]
  405ec4:	cmp	w8, #0x0
  405ec8:	cset	w8, ge  // ge = tcont
  405ecc:	tbnz	w8, #0, 405edc <__fxstat64@plt+0x2e64>
  405ed0:	ldur	w8, [x29, #-52]
  405ed4:	stur	w8, [x29, #-4]
  405ed8:	b	405f88 <__fxstat64@plt+0x2f10>
  405edc:	ldr	x8, [sp, #32]
  405ee0:	ldr	x0, [x8]
  405ee4:	bl	402978 <free@plt>
  405ee8:	ldur	x8, [x29, #-48]
  405eec:	ldr	x9, [sp, #32]
  405ef0:	str	x8, [x9]
  405ef4:	mov	x8, xzr
  405ef8:	stur	x8, [x29, #-48]
  405efc:	str	wzr, [sp, #56]
  405f00:	mov	w10, #0x7                   	// #7
  405f04:	str	w10, [sp, #52]
  405f08:	str	wzr, [sp, #48]
  405f0c:	str	wzr, [sp, #44]
  405f10:	ldr	w0, [sp, #44]
  405f14:	bl	4029d8 <log_get_max_level_realm@plt>
  405f18:	ldr	w10, [sp, #52]
  405f1c:	and	w10, w10, #0x7
  405f20:	cmp	w0, w10
  405f24:	b.lt	405f64 <__fxstat64@plt+0x2eec>  // b.tstop
  405f28:	ldr	w8, [sp, #44]
  405f2c:	ldr	w9, [sp, #52]
  405f30:	orr	w0, w9, w8, lsl #10
  405f34:	ldr	w1, [sp, #48]
  405f38:	ldr	x10, [sp, #32]
  405f3c:	ldr	x6, [x10]
  405f40:	ldr	x2, [sp, #16]
  405f44:	mov	w3, #0x59                  	// #89
  405f48:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  405f4c:	add	x4, x4, #0xa3e
  405f50:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  405f54:	add	x5, x5, #0xadd
  405f58:	bl	4029e8 <log_internal_realm@plt>
  405f5c:	str	w0, [sp, #8]
  405f60:	b	405f78 <__fxstat64@plt+0x2f00>
  405f64:	ldr	w0, [sp, #48]
  405f68:	bl	4029f8 <abs@plt>
  405f6c:	mov	w8, wzr
  405f70:	subs	w8, w8, w0, uxtb
  405f74:	str	w8, [sp, #8]
  405f78:	ldr	w8, [sp, #8]
  405f7c:	str	w8, [sp, #40]
  405f80:	mov	w8, #0x1                   	// #1
  405f84:	stur	w8, [x29, #-4]
  405f88:	ldur	w0, [x29, #-4]
  405f8c:	ldp	x29, x30, [sp, #128]
  405f90:	add	sp, sp, #0x90
  405f94:	ret
  405f98:	sub	sp, sp, #0x90
  405f9c:	stp	x29, x30, [sp, #128]
  405fa0:	add	x29, sp, #0x80
  405fa4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  405fa8:	add	x8, x8, #0x18
  405fac:	mov	w9, #0xffffff82            	// #-126
  405fb0:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  405fb4:	add	x10, x10, #0xf88
  405fb8:	add	x10, x10, #0x3
  405fbc:	mov	w11, #0x1                   	// #1
  405fc0:	sub	x2, x29, #0x18
  405fc4:	and	w11, w0, w11
  405fc8:	sturb	w11, [x29, #-5]
  405fcc:	stur	x1, [x29, #-16]
  405fd0:	ldr	x0, [x8]
  405fd4:	ldurb	w11, [x29, #-5]
  405fd8:	ldur	x3, [x29, #-16]
  405fdc:	and	w1, w11, #0x1
  405fe0:	str	x8, [sp, #32]
  405fe4:	str	w9, [sp, #28]
  405fe8:	str	x10, [sp, #16]
  405fec:	bl	402c18 <find_xbootldr_and_warn@plt>
  405ff0:	stur	w0, [x29, #-28]
  405ff4:	ldur	w9, [x29, #-28]
  405ff8:	ldr	w11, [sp, #28]
  405ffc:	cmp	w9, w11
  406000:	b.ne	4060b8 <__fxstat64@plt+0x3040>  // b.any
  406004:	mov	w8, #0x7                   	// #7
  406008:	stur	w8, [x29, #-32]
  40600c:	ldur	w8, [x29, #-28]
  406010:	stur	w8, [x29, #-36]
  406014:	stur	wzr, [x29, #-40]
  406018:	ldur	w0, [x29, #-40]
  40601c:	bl	4029d8 <log_get_max_level_realm@plt>
  406020:	ldur	w8, [x29, #-32]
  406024:	and	w8, w8, #0x7
  406028:	cmp	w0, w8
  40602c:	b.lt	406064 <__fxstat64@plt+0x2fec>  // b.tstop
  406030:	ldur	w8, [x29, #-40]
  406034:	ldur	w9, [x29, #-32]
  406038:	orr	w0, w9, w8, lsl #10
  40603c:	ldur	w1, [x29, #-36]
  406040:	ldr	x2, [sp, #16]
  406044:	mov	w3, #0x64                  	// #100
  406048:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  40604c:	add	x4, x4, #0xaff
  406050:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  406054:	add	x5, x5, #0xb10
  406058:	bl	4029e8 <log_internal_realm@plt>
  40605c:	str	w0, [sp, #12]
  406060:	b	406078 <__fxstat64@plt+0x3000>
  406064:	ldur	w0, [x29, #-36]
  406068:	bl	4029f8 <abs@plt>
  40606c:	mov	w8, wzr
  406070:	subs	w8, w8, w0, uxtb
  406074:	str	w8, [sp, #12]
  406078:	ldr	w8, [sp, #12]
  40607c:	stur	w8, [x29, #-44]
  406080:	ldur	x9, [x29, #-16]
  406084:	cbz	x9, 40609c <__fxstat64@plt+0x3024>
  406088:	ldur	x8, [x29, #-16]
  40608c:	str	xzr, [sp, #64]
  406090:	str	xzr, [sp, #72]
  406094:	ldr	q0, [sp, #64]
  406098:	str	q0, [x8]
  40609c:	ldr	x8, [sp, #32]
  4060a0:	ldr	x0, [x8]
  4060a4:	bl	406d20 <__fxstat64@plt+0x3ca8>
  4060a8:	ldr	x8, [sp, #32]
  4060ac:	str	x0, [x8]
  4060b0:	stur	wzr, [x29, #-4]
  4060b4:	b	406180 <__fxstat64@plt+0x3108>
  4060b8:	ldur	w8, [x29, #-28]
  4060bc:	cmp	w8, #0x0
  4060c0:	cset	w8, ge  // ge = tcont
  4060c4:	tbnz	w8, #0, 4060d4 <__fxstat64@plt+0x305c>
  4060c8:	ldur	w8, [x29, #-28]
  4060cc:	stur	w8, [x29, #-4]
  4060d0:	b	406180 <__fxstat64@plt+0x3108>
  4060d4:	ldr	x8, [sp, #32]
  4060d8:	ldr	x0, [x8]
  4060dc:	bl	402978 <free@plt>
  4060e0:	ldur	x8, [x29, #-24]
  4060e4:	ldr	x9, [sp, #32]
  4060e8:	str	x8, [x9]
  4060ec:	mov	x8, xzr
  4060f0:	stur	x8, [x29, #-24]
  4060f4:	str	wzr, [sp, #60]
  4060f8:	mov	w10, #0x7                   	// #7
  4060fc:	str	w10, [sp, #56]
  406100:	str	wzr, [sp, #52]
  406104:	str	wzr, [sp, #48]
  406108:	ldr	w0, [sp, #48]
  40610c:	bl	4029d8 <log_get_max_level_realm@plt>
  406110:	ldr	w10, [sp, #56]
  406114:	and	w10, w10, #0x7
  406118:	cmp	w0, w10
  40611c:	b.lt	40615c <__fxstat64@plt+0x30e4>  // b.tstop
  406120:	ldr	w8, [sp, #48]
  406124:	ldr	w9, [sp, #56]
  406128:	orr	w0, w9, w8, lsl #10
  40612c:	ldr	w1, [sp, #52]
  406130:	ldr	x10, [sp, #32]
  406134:	ldr	x6, [x10]
  406138:	ldr	x2, [sp, #16]
  40613c:	mov	w3, #0x6e                  	// #110
  406140:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  406144:	add	x4, x4, #0xaff
  406148:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  40614c:	add	x5, x5, #0xb4b
  406150:	bl	4029e8 <log_internal_realm@plt>
  406154:	str	w0, [sp, #8]
  406158:	b	406170 <__fxstat64@plt+0x30f8>
  40615c:	ldr	w0, [sp, #52]
  406160:	bl	4029f8 <abs@plt>
  406164:	mov	w8, wzr
  406168:	subs	w8, w8, w0, uxtb
  40616c:	str	w8, [sp, #8]
  406170:	ldr	w8, [sp, #8]
  406174:	str	w8, [sp, #44]
  406178:	mov	w8, #0x1                   	// #1
  40617c:	stur	w8, [x29, #-4]
  406180:	ldur	w0, [x29, #-4]
  406184:	ldp	x29, x30, [sp, #128]
  406188:	add	sp, sp, #0x90
  40618c:	ret
  406190:	sub	sp, sp, #0x10
  406194:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  406198:	add	x8, x8, #0x18
  40619c:	ldr	x8, [x8]
  4061a0:	str	x8, [sp, #8]
  4061a4:	cbz	x8, 4061b4 <__fxstat64@plt+0x313c>
  4061a8:	ldr	x8, [sp, #8]
  4061ac:	str	x8, [sp]
  4061b0:	b	4061c4 <__fxstat64@plt+0x314c>
  4061b4:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  4061b8:	add	x8, x8, #0x10
  4061bc:	ldr	x8, [x8]
  4061c0:	str	x8, [sp]
  4061c4:	ldr	x8, [sp]
  4061c8:	mov	x0, x8
  4061cc:	add	sp, sp, #0x10
  4061d0:	ret
  4061d4:	sub	sp, sp, #0x70
  4061d8:	stp	x29, x30, [sp, #80]
  4061dc:	str	x19, [sp, #96]
  4061e0:	add	x29, sp, #0x50
  4061e4:	mov	w8, #0x4a                  	// #74
  4061e8:	mov	w9, #0x67                  	// #103
  4061ec:	mov	w10, #0xb0                  	// #176
  4061f0:	mov	w11, #0x82                  	// #130
  4061f4:	mov	w12, #0xa                   	// #10
  4061f8:	mov	w13, #0x4c                  	// #76
  4061fc:	mov	w14, #0x41                  	// #65
  406200:	mov	w15, #0xcf                  	// #207
  406204:	mov	w16, #0xb6                  	// #182
  406208:	mov	w17, #0xc7                  	// #199
  40620c:	mov	w18, #0x44                  	// #68
  406210:	mov	w2, #0xb                   	// #11
  406214:	mov	w3, #0x29                  	// #41
  406218:	mov	w4, #0xbb                  	// #187
  40621c:	mov	w5, #0x8c                  	// #140
  406220:	mov	w6, #0x4f                  	// #79
  406224:	adrp	x7, 40d000 <__fxstat64@plt+0x9f88>
  406228:	add	x7, x7, #0xf88
  40622c:	add	x7, x7, #0x3
  406230:	add	x19, sp, #0x28
  406234:	stur	x0, [x29, #-8]
  406238:	stur	x1, [x29, #-16]
  40623c:	strb	w8, [sp, #40]
  406240:	strb	w9, [x19, #1]
  406244:	strb	w10, [x19, #2]
  406248:	strb	w11, [x19, #3]
  40624c:	strb	w12, [x19, #4]
  406250:	strb	w13, [x19, #5]
  406254:	strb	w14, [x19, #6]
  406258:	strb	w15, [x19, #7]
  40625c:	strb	w16, [x19, #8]
  406260:	strb	w17, [x19, #9]
  406264:	strb	w18, [x19, #10]
  406268:	strb	w2, [x19, #11]
  40626c:	strb	w3, [x19, #12]
  406270:	strb	w4, [x19, #13]
  406274:	strb	w5, [x19, #14]
  406278:	strb	w6, [x19, #15]
  40627c:	ldur	x2, [x29, #-8]
  406280:	ldur	x3, [x29, #-16]
  406284:	ldr	x0, [sp, #40]
  406288:	ldr	x1, [sp, #48]
  40628c:	str	x7, [sp, #16]
  406290:	bl	402c28 <efi_get_variable_string@plt>
  406294:	stur	w0, [x29, #-20]
  406298:	ldur	w8, [x29, #-20]
  40629c:	cmp	w8, #0x0
  4062a0:	cset	w8, ge  // ge = tcont
  4062a4:	tbnz	w8, #0, 406338 <__fxstat64@plt+0x32c0>
  4062a8:	ldur	w8, [x29, #-20]
  4062ac:	mov	w9, #0xfffffffe            	// #-2
  4062b0:	cmp	w8, w9
  4062b4:	b.eq	406338 <__fxstat64@plt+0x32c0>  // b.none
  4062b8:	mov	w8, #0x4                   	// #4
  4062bc:	str	w8, [sp, #36]
  4062c0:	ldur	w8, [x29, #-20]
  4062c4:	str	w8, [sp, #32]
  4062c8:	str	wzr, [sp, #28]
  4062cc:	ldr	w0, [sp, #28]
  4062d0:	bl	4029d8 <log_get_max_level_realm@plt>
  4062d4:	ldr	w8, [sp, #36]
  4062d8:	and	w8, w8, #0x7
  4062dc:	cmp	w0, w8
  4062e0:	b.lt	40631c <__fxstat64@plt+0x32a4>  // b.tstop
  4062e4:	ldr	w8, [sp, #28]
  4062e8:	ldr	w9, [sp, #36]
  4062ec:	orr	w0, w9, w8, lsl #10
  4062f0:	ldr	w1, [sp, #32]
  4062f4:	ldur	x6, [x29, #-8]
  4062f8:	ldr	x2, [sp, #16]
  4062fc:	mov	w3, #0x48b                 	// #1163
  406300:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  406304:	add	x4, x4, #0xb74
  406308:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  40630c:	add	x5, x5, #0xb88
  406310:	bl	4029e8 <log_internal_realm@plt>
  406314:	str	w0, [sp, #12]
  406318:	b	406330 <__fxstat64@plt+0x32b8>
  40631c:	ldr	w0, [sp, #32]
  406320:	bl	4029f8 <abs@plt>
  406324:	mov	w8, wzr
  406328:	subs	w8, w8, w0, uxtb
  40632c:	str	w8, [sp, #12]
  406330:	ldr	w8, [sp, #12]
  406334:	str	w8, [sp, #24]
  406338:	ldr	x19, [sp, #96]
  40633c:	ldp	x29, x30, [sp, #80]
  406340:	add	sp, sp, #0x70
  406344:	ret
  406348:	sub	sp, sp, #0x20
  40634c:	str	x0, [sp, #24]
  406350:	ldr	x8, [sp, #24]
  406354:	str	x8, [sp, #16]
  406358:	cbz	x8, 406368 <__fxstat64@plt+0x32f0>
  40635c:	ldr	x8, [sp, #16]
  406360:	str	x8, [sp, #8]
  406364:	b	406374 <__fxstat64@plt+0x32fc>
  406368:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  40636c:	add	x8, x8, #0xbab
  406370:	str	x8, [sp, #8]
  406374:	ldr	x8, [sp, #8]
  406378:	mov	x0, x8
  40637c:	add	sp, sp, #0x20
  406380:	ret
  406384:	sub	sp, sp, #0x10
  406388:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  40638c:	add	x8, x8, #0xbaf
  406390:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  406394:	add	x9, x9, #0xbb6
  406398:	and	w10, w0, #0x1
  40639c:	strb	w10, [sp, #15]
  4063a0:	ldrb	w10, [sp, #15]
  4063a4:	tst	w10, #0x1
  4063a8:	csel	x0, x8, x9, ne  // ne = any
  4063ac:	add	sp, sp, #0x10
  4063b0:	ret
  4063b4:	sub	sp, sp, #0x20
  4063b8:	stp	x29, x30, [sp, #16]
  4063bc:	add	x29, sp, #0x10
  4063c0:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4063c4:	add	x8, x8, #0xbbe
  4063c8:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  4063cc:	add	x9, x9, #0x5bc
  4063d0:	str	x8, [sp, #8]
  4063d4:	str	x9, [sp]
  4063d8:	bl	402a48 <colors_enabled@plt>
  4063dc:	tst	w0, #0x1
  4063e0:	ldr	x8, [sp, #8]
  4063e4:	ldr	x9, [sp]
  4063e8:	csel	x0, x8, x9, ne  // ne = any
  4063ec:	ldp	x29, x30, [sp, #16]
  4063f0:	add	sp, sp, #0x20
  4063f4:	ret
  4063f8:	sub	sp, sp, #0x20
  4063fc:	stp	x29, x30, [sp, #16]
  406400:	add	x29, sp, #0x10
  406404:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  406408:	add	x8, x8, #0xbc8
  40640c:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  406410:	add	x9, x9, #0x5bc
  406414:	str	x8, [sp, #8]
  406418:	str	x9, [sp]
  40641c:	bl	402a48 <colors_enabled@plt>
  406420:	tst	w0, #0x1
  406424:	ldr	x8, [sp, #8]
  406428:	ldr	x9, [sp]
  40642c:	csel	x0, x8, x9, ne  // ne = any
  406430:	ldp	x29, x30, [sp, #16]
  406434:	add	sp, sp, #0x20
  406438:	ret
  40643c:	sub	sp, sp, #0x20
  406440:	str	x0, [sp, #16]
  406444:	str	x1, [sp, #24]
  406448:	ldr	x8, [sp, #16]
  40644c:	mov	w9, #0x0                   	// #0
  406450:	str	w9, [sp, #12]
  406454:	cbnz	x8, 406468 <__fxstat64@plt+0x33f0>
  406458:	ldr	x8, [sp, #24]
  40645c:	cmp	x8, #0x0
  406460:	cset	w9, eq  // eq = none
  406464:	str	w9, [sp, #12]
  406468:	ldr	w8, [sp, #12]
  40646c:	and	w0, w8, #0x1
  406470:	add	sp, sp, #0x20
  406474:	ret
  406478:	sub	sp, sp, #0x10
  40647c:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  406480:	add	x8, x8, #0xbd2
  406484:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  406488:	add	x9, x9, #0xbd6
  40648c:	and	w10, w0, #0x1
  406490:	strb	w10, [sp, #15]
  406494:	ldrb	w10, [sp, #15]
  406498:	tst	w10, #0x1
  40649c:	csel	x0, x8, x9, ne  // ne = any
  4064a0:	add	sp, sp, #0x10
  4064a4:	ret
  4064a8:	sub	sp, sp, #0xb0
  4064ac:	stp	x29, x30, [sp, #160]
  4064b0:	add	x29, sp, #0xa0
  4064b4:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4064b8:	add	x8, x8, #0xbd9
  4064bc:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  4064c0:	add	x9, x9, #0xf88
  4064c4:	add	x9, x9, #0x3
  4064c8:	stur	x1, [x29, #-24]
  4064cc:	stur	x2, [x29, #-16]
  4064d0:	stur	x0, [x29, #-32]
  4064d4:	mov	x0, x8
  4064d8:	str	x9, [sp, #80]
  4064dc:	bl	402a38 <printf@plt>
  4064e0:	ldur	x8, [x29, #-32]
  4064e4:	cbnz	x8, 406500 <__fxstat64@plt+0x3488>
  4064e8:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  4064ec:	add	x0, x0, #0xbf9
  4064f0:	bl	402a38 <printf@plt>
  4064f4:	mov	w8, #0xfffffffe            	// #-2
  4064f8:	stur	w8, [x29, #-4]
  4064fc:	b	406740 <__fxstat64@plt+0x36c8>
  406500:	ldur	x1, [x29, #-32]
  406504:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  406508:	add	x0, x0, #0xc34
  40650c:	bl	402a38 <printf@plt>
  406510:	ldur	x8, [x29, #-24]
  406514:	ldur	x1, [x29, #-16]
  406518:	mov	x0, x8
  40651c:	bl	40643c <__fxstat64@plt+0x33c4>
  406520:	cbnz	w0, 4065b8 <__fxstat64@plt+0x3540>
  406524:	ldurb	w1, [x29, #-24]
  406528:	ldurb	w2, [x29, #-23]
  40652c:	ldurb	w3, [x29, #-22]
  406530:	ldurb	w4, [x29, #-21]
  406534:	ldurb	w5, [x29, #-20]
  406538:	ldurb	w6, [x29, #-19]
  40653c:	ldurb	w7, [x29, #-18]
  406540:	ldurb	w8, [x29, #-17]
  406544:	ldurb	w9, [x29, #-16]
  406548:	ldurb	w10, [x29, #-15]
  40654c:	ldurb	w11, [x29, #-14]
  406550:	ldurb	w12, [x29, #-13]
  406554:	ldurb	w13, [x29, #-12]
  406558:	ldurb	w14, [x29, #-11]
  40655c:	ldurb	w15, [x29, #-10]
  406560:	ldurb	w16, [x29, #-9]
  406564:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  406568:	add	x0, x0, #0xc46
  40656c:	mov	x17, sp
  406570:	str	w8, [x17]
  406574:	mov	x17, sp
  406578:	str	w9, [x17, #8]
  40657c:	mov	x17, sp
  406580:	str	w10, [x17, #16]
  406584:	mov	x17, sp
  406588:	str	w11, [x17, #24]
  40658c:	mov	x17, sp
  406590:	str	w12, [x17, #32]
  406594:	mov	x17, sp
  406598:	str	w13, [x17, #40]
  40659c:	mov	x17, sp
  4065a0:	str	w14, [x17, #48]
  4065a4:	mov	x17, sp
  4065a8:	str	w15, [x17, #56]
  4065ac:	mov	x17, sp
  4065b0:	str	w16, [x17, #64]
  4065b4:	bl	402a38 <printf@plt>
  4065b8:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  4065bc:	add	x0, x0, #0x813
  4065c0:	bl	402a38 <printf@plt>
  4065c4:	ldur	x8, [x29, #-32]
  4065c8:	mov	x0, x8
  4065cc:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4065d0:	add	x1, x1, #0xca4
  4065d4:	mov	x8, xzr
  4065d8:	mov	x2, x8
  4065dc:	bl	406d50 <__fxstat64@plt+0x3cd8>
  4065e0:	stur	w0, [x29, #-36]
  4065e4:	ldur	w9, [x29, #-36]
  4065e8:	cmp	w9, #0x0
  4065ec:	cset	w9, ge  // ge = tcont
  4065f0:	tbnz	w9, #0, 4065f8 <__fxstat64@plt+0x3580>
  4065f4:	b	40672c <__fxstat64@plt+0x36b4>
  4065f8:	ldur	w8, [x29, #-36]
  4065fc:	cbnz	w8, 406678 <__fxstat64@plt+0x3600>
  406600:	mov	w8, #0x6                   	// #6
  406604:	stur	w8, [x29, #-40]
  406608:	stur	wzr, [x29, #-44]
  40660c:	stur	wzr, [x29, #-48]
  406610:	ldur	w0, [x29, #-48]
  406614:	bl	4029d8 <log_get_max_level_realm@plt>
  406618:	ldur	w8, [x29, #-40]
  40661c:	and	w8, w8, #0x7
  406620:	cmp	w0, w8
  406624:	b.lt	40665c <__fxstat64@plt+0x35e4>  // b.tstop
  406628:	ldur	w8, [x29, #-48]
  40662c:	ldur	w9, [x29, #-40]
  406630:	orr	w0, w9, w8, lsl #10
  406634:	ldur	w1, [x29, #-44]
  406638:	ldr	x2, [sp, #80]
  40663c:	mov	w3, #0xe7                  	// #231
  406640:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  406644:	add	x4, x4, #0xcb0
  406648:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  40664c:	add	x5, x5, #0xcc0
  406650:	bl	4029e8 <log_internal_realm@plt>
  406654:	str	w0, [sp, #76]
  406658:	b	406670 <__fxstat64@plt+0x35f8>
  40665c:	ldur	w0, [x29, #-44]
  406660:	bl	4029f8 <abs@plt>
  406664:	mov	w8, wzr
  406668:	subs	w8, w8, w0, uxtb
  40666c:	str	w8, [sp, #76]
  406670:	ldr	w8, [sp, #76]
  406674:	stur	w8, [x29, #-52]
  406678:	ldur	x0, [x29, #-32]
  40667c:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  406680:	add	x1, x1, #0xce3
  406684:	adrp	x2, 40e000 <__fxstat64@plt+0xaf88>
  406688:	add	x2, x2, #0xcec
  40668c:	bl	406d50 <__fxstat64@plt+0x3cd8>
  406690:	stur	w0, [x29, #-36]
  406694:	ldur	w8, [x29, #-36]
  406698:	cmp	w8, #0x0
  40669c:	cset	w8, ge  // ge = tcont
  4066a0:	tbnz	w8, #0, 4066a8 <__fxstat64@plt+0x3630>
  4066a4:	b	40672c <__fxstat64@plt+0x36b4>
  4066a8:	ldur	w8, [x29, #-36]
  4066ac:	cbnz	w8, 406728 <__fxstat64@plt+0x36b0>
  4066b0:	mov	w8, #0x6                   	// #6
  4066b4:	stur	w8, [x29, #-56]
  4066b8:	stur	wzr, [x29, #-60]
  4066bc:	stur	wzr, [x29, #-64]
  4066c0:	ldur	w0, [x29, #-64]
  4066c4:	bl	4029d8 <log_get_max_level_realm@plt>
  4066c8:	ldur	w8, [x29, #-56]
  4066cc:	and	w8, w8, #0x7
  4066d0:	cmp	w0, w8
  4066d4:	b.lt	40670c <__fxstat64@plt+0x3694>  // b.tstop
  4066d8:	ldur	w8, [x29, #-64]
  4066dc:	ldur	w9, [x29, #-56]
  4066e0:	orr	w0, w9, w8, lsl #10
  4066e4:	ldur	w1, [x29, #-60]
  4066e8:	ldr	x2, [sp, #80]
  4066ec:	mov	w3, #0xed                  	// #237
  4066f0:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  4066f4:	add	x4, x4, #0xcb0
  4066f8:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4066fc:	add	x5, x5, #0xcf1
  406700:	bl	4029e8 <log_internal_realm@plt>
  406704:	str	w0, [sp, #72]
  406708:	b	406720 <__fxstat64@plt+0x36a8>
  40670c:	ldur	w0, [x29, #-60]
  406710:	bl	4029f8 <abs@plt>
  406714:	mov	w8, wzr
  406718:	subs	w8, w8, w0, uxtb
  40671c:	str	w8, [sp, #72]
  406720:	ldr	w8, [sp, #72]
  406724:	stur	w8, [x29, #-68]
  406728:	stur	wzr, [x29, #-36]
  40672c:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  406730:	add	x0, x0, #0x813
  406734:	bl	402a38 <printf@plt>
  406738:	ldur	w8, [x29, #-36]
  40673c:	stur	w8, [x29, #-4]
  406740:	ldur	w0, [x29, #-4]
  406744:	ldp	x29, x30, [sp, #160]
  406748:	add	sp, sp, #0xb0
  40674c:	ret
  406750:	sub	sp, sp, #0x90
  406754:	stp	x29, x30, [sp, #128]
  406758:	add	x29, sp, #0x80
  40675c:	mov	x8, xzr
  406760:	mov	w9, #0xfffffffe            	// #-2
  406764:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  406768:	add	x10, x10, #0xf88
  40676c:	add	x10, x10, #0x3
  406770:	adrp	x11, 40e000 <__fxstat64@plt+0xaf88>
  406774:	add	x11, x11, #0xf20
  406778:	sub	x0, x29, #0x10
  40677c:	stur	x8, [x29, #-16]
  406780:	stur	x8, [x29, #-24]
  406784:	str	w9, [sp, #32]
  406788:	str	x10, [sp, #24]
  40678c:	str	x11, [sp, #16]
  406790:	bl	402c38 <efi_get_boot_options@plt>
  406794:	stur	w0, [x29, #-28]
  406798:	ldur	w9, [x29, #-28]
  40679c:	ldr	w12, [sp, #32]
  4067a0:	cmp	w9, w12
  4067a4:	b.ne	406834 <__fxstat64@plt+0x37bc>  // b.any
  4067a8:	mov	w8, #0x3                   	// #3
  4067ac:	stur	w8, [x29, #-40]
  4067b0:	ldur	w8, [x29, #-28]
  4067b4:	stur	w8, [x29, #-44]
  4067b8:	stur	wzr, [x29, #-48]
  4067bc:	ldur	w0, [x29, #-48]
  4067c0:	bl	4029d8 <log_get_max_level_realm@plt>
  4067c4:	ldur	w8, [x29, #-40]
  4067c8:	and	w8, w8, #0x7
  4067cc:	cmp	w0, w8
  4067d0:	b.lt	406804 <__fxstat64@plt+0x378c>  // b.tstop
  4067d4:	ldur	w8, [x29, #-48]
  4067d8:	ldur	w9, [x29, #-40]
  4067dc:	orr	w0, w9, w8, lsl #10
  4067e0:	ldur	w1, [x29, #-44]
  4067e4:	ldr	x2, [sp, #24]
  4067e8:	mov	w3, #0x11a                 	// #282
  4067ec:	ldr	x4, [sp, #16]
  4067f0:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4067f4:	add	x5, x5, #0xf31
  4067f8:	bl	4029e8 <log_internal_realm@plt>
  4067fc:	str	w0, [sp, #12]
  406800:	b	406818 <__fxstat64@plt+0x37a0>
  406804:	ldur	w0, [x29, #-44]
  406808:	bl	4029f8 <abs@plt>
  40680c:	mov	w8, wzr
  406810:	subs	w8, w8, w0, uxtb
  406814:	str	w8, [sp, #12]
  406818:	ldr	w8, [sp, #12]
  40681c:	stur	w8, [x29, #-52]
  406820:	ldur	w8, [x29, #-52]
  406824:	stur	w8, [x29, #-4]
  406828:	mov	w8, #0x1                   	// #1
  40682c:	stur	w8, [x29, #-56]
  406830:	b	406a68 <__fxstat64@plt+0x39f0>
  406834:	ldur	w8, [x29, #-28]
  406838:	cmp	w8, #0x0
  40683c:	cset	w8, ge  // ge = tcont
  406840:	tbnz	w8, #0, 4068d0 <__fxstat64@plt+0x3858>
  406844:	mov	w8, #0x3                   	// #3
  406848:	stur	w8, [x29, #-60]
  40684c:	ldur	w8, [x29, #-28]
  406850:	str	w8, [sp, #64]
  406854:	str	wzr, [sp, #60]
  406858:	ldr	w0, [sp, #60]
  40685c:	bl	4029d8 <log_get_max_level_realm@plt>
  406860:	ldur	w8, [x29, #-60]
  406864:	and	w8, w8, #0x7
  406868:	cmp	w0, w8
  40686c:	b.lt	4068a0 <__fxstat64@plt+0x3828>  // b.tstop
  406870:	ldr	w8, [sp, #60]
  406874:	ldur	w9, [x29, #-60]
  406878:	orr	w0, w9, w8, lsl #10
  40687c:	ldr	w1, [sp, #64]
  406880:	ldr	x2, [sp, #24]
  406884:	mov	w3, #0x11c                 	// #284
  406888:	ldr	x4, [sp, #16]
  40688c:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  406890:	add	x5, x5, #0xf8f
  406894:	bl	4029e8 <log_internal_realm@plt>
  406898:	str	w0, [sp, #8]
  40689c:	b	4068b4 <__fxstat64@plt+0x383c>
  4068a0:	ldr	w0, [sp, #64]
  4068a4:	bl	4029f8 <abs@plt>
  4068a8:	mov	w8, wzr
  4068ac:	subs	w8, w8, w0, uxtb
  4068b0:	str	w8, [sp, #8]
  4068b4:	ldr	w8, [sp, #8]
  4068b8:	str	w8, [sp, #56]
  4068bc:	ldr	w8, [sp, #56]
  4068c0:	stur	w8, [x29, #-4]
  4068c4:	mov	w8, #0x1                   	// #1
  4068c8:	stur	w8, [x29, #-56]
  4068cc:	b	406a68 <__fxstat64@plt+0x39f0>
  4068d0:	sub	x0, x29, #0x18
  4068d4:	bl	402c48 <efi_get_boot_order@plt>
  4068d8:	stur	w0, [x29, #-32]
  4068dc:	ldur	w8, [x29, #-32]
  4068e0:	mov	w9, #0xfffffffe            	// #-2
  4068e4:	cmp	w8, w9
  4068e8:	b.ne	4068f4 <__fxstat64@plt+0x387c>  // b.any
  4068ec:	stur	wzr, [x29, #-32]
  4068f0:	b	406990 <__fxstat64@plt+0x3918>
  4068f4:	ldur	w8, [x29, #-32]
  4068f8:	cmp	w8, #0x0
  4068fc:	cset	w8, ge  // ge = tcont
  406900:	tbnz	w8, #0, 406990 <__fxstat64@plt+0x3918>
  406904:	mov	w8, #0x3                   	// #3
  406908:	str	w8, [sp, #52]
  40690c:	ldur	w8, [x29, #-32]
  406910:	str	w8, [sp, #48]
  406914:	str	wzr, [sp, #44]
  406918:	ldr	w0, [sp, #44]
  40691c:	bl	4029d8 <log_get_max_level_realm@plt>
  406920:	ldr	w8, [sp, #52]
  406924:	and	w8, w8, #0x7
  406928:	cmp	w0, w8
  40692c:	b.lt	406960 <__fxstat64@plt+0x38e8>  // b.tstop
  406930:	ldr	w8, [sp, #44]
  406934:	ldr	w9, [sp, #52]
  406938:	orr	w0, w9, w8, lsl #10
  40693c:	ldr	w1, [sp, #48]
  406940:	ldr	x2, [sp, #24]
  406944:	mov	w3, #0x122                 	// #290
  406948:	ldr	x4, [sp, #16]
  40694c:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  406950:	add	x5, x5, #0xfb3
  406954:	bl	4029e8 <log_internal_realm@plt>
  406958:	str	w0, [sp, #4]
  40695c:	b	406974 <__fxstat64@plt+0x38fc>
  406960:	ldr	w0, [sp, #48]
  406964:	bl	4029f8 <abs@plt>
  406968:	mov	w8, wzr
  40696c:	subs	w8, w8, w0, uxtb
  406970:	str	w8, [sp, #4]
  406974:	ldr	w8, [sp, #4]
  406978:	str	w8, [sp, #40]
  40697c:	ldr	w8, [sp, #40]
  406980:	stur	w8, [x29, #-4]
  406984:	mov	w8, #0x1                   	// #1
  406988:	stur	w8, [x29, #-56]
  40698c:	b	406a68 <__fxstat64@plt+0x39f0>
  406990:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  406994:	add	x0, x0, #0xfd5
  406998:	bl	402a38 <printf@plt>
  40699c:	stur	wzr, [x29, #-36]
  4069a0:	ldur	w8, [x29, #-36]
  4069a4:	ldur	w9, [x29, #-32]
  4069a8:	cmp	w8, w9
  4069ac:	b.ge	4069d8 <__fxstat64@plt+0x3960>  // b.tcont
  4069b0:	ldur	x8, [x29, #-24]
  4069b4:	ldursw	x9, [x29, #-36]
  4069b8:	ldrh	w0, [x8, x9, lsl #1]
  4069bc:	mov	w10, #0x1                   	// #1
  4069c0:	and	w1, w10, #0x1
  4069c4:	bl	407a80 <__fxstat64@plt+0x4a08>
  4069c8:	ldur	w8, [x29, #-36]
  4069cc:	add	w8, w8, #0x1
  4069d0:	stur	w8, [x29, #-36]
  4069d4:	b	4069a0 <__fxstat64@plt+0x3928>
  4069d8:	stur	wzr, [x29, #-36]
  4069dc:	ldur	w8, [x29, #-36]
  4069e0:	ldur	w9, [x29, #-28]
  4069e4:	cmp	w8, w9
  4069e8:	b.ge	406a5c <__fxstat64@plt+0x39e4>  // b.tcont
  4069ec:	str	wzr, [sp, #36]
  4069f0:	ldr	w8, [sp, #36]
  4069f4:	ldur	w9, [x29, #-32]
  4069f8:	cmp	w8, w9
  4069fc:	b.ge	406a34 <__fxstat64@plt+0x39bc>  // b.tcont
  406a00:	ldur	x8, [x29, #-16]
  406a04:	ldursw	x9, [x29, #-36]
  406a08:	ldrh	w10, [x8, x9, lsl #1]
  406a0c:	ldur	x8, [x29, #-24]
  406a10:	ldrsw	x9, [sp, #36]
  406a14:	ldrh	w11, [x8, x9, lsl #1]
  406a18:	cmp	w10, w11
  406a1c:	b.ne	406a24 <__fxstat64@plt+0x39ac>  // b.any
  406a20:	b	406a4c <__fxstat64@plt+0x39d4>
  406a24:	ldr	w8, [sp, #36]
  406a28:	add	w8, w8, #0x1
  406a2c:	str	w8, [sp, #36]
  406a30:	b	4069f0 <__fxstat64@plt+0x3978>
  406a34:	ldur	x8, [x29, #-16]
  406a38:	ldursw	x9, [x29, #-36]
  406a3c:	ldrh	w0, [x8, x9, lsl #1]
  406a40:	mov	w10, wzr
  406a44:	and	w1, w10, #0x1
  406a48:	bl	407a80 <__fxstat64@plt+0x4a08>
  406a4c:	ldur	w8, [x29, #-36]
  406a50:	add	w8, w8, #0x1
  406a54:	stur	w8, [x29, #-36]
  406a58:	b	4069dc <__fxstat64@plt+0x3964>
  406a5c:	stur	wzr, [x29, #-4]
  406a60:	mov	w8, #0x1                   	// #1
  406a64:	stur	w8, [x29, #-56]
  406a68:	sub	x0, x29, #0x18
  406a6c:	bl	403464 <__fxstat64@plt+0x3ec>
  406a70:	sub	x0, x29, #0x10
  406a74:	bl	403464 <__fxstat64@plt+0x3ec>
  406a78:	ldur	w0, [x29, #-4]
  406a7c:	ldp	x29, x30, [sp, #128]
  406a80:	add	sp, sp, #0x90
  406a84:	ret
  406a88:	sub	sp, sp, #0x130
  406a8c:	stp	x29, x30, [sp, #272]
  406a90:	str	x28, [sp, #288]
  406a94:	add	x29, sp, #0x110
  406a98:	sub	x8, x29, #0x28
  406a9c:	mov	x9, #0x58                  	// #88
  406aa0:	mov	w10, wzr
  406aa4:	adrp	x11, 40d000 <__fxstat64@plt+0x9f88>
  406aa8:	add	x11, x11, #0xf88
  406aac:	add	x11, x11, #0x3
  406ab0:	add	x12, sp, #0x80
  406ab4:	stur	x1, [x29, #-24]
  406ab8:	stur	x2, [x29, #-16]
  406abc:	stur	x4, [x29, #-40]
  406ac0:	stur	x5, [x29, #-32]
  406ac4:	stur	x0, [x29, #-48]
  406ac8:	stur	x3, [x29, #-56]
  406acc:	mov	x0, x12
  406ad0:	mov	w1, w10
  406ad4:	mov	x2, x9
  406ad8:	str	x8, [sp, #88]
  406adc:	str	x11, [sp, #80]
  406ae0:	bl	402b48 <memset@plt>
  406ae4:	ldur	x8, [x29, #-48]
  406ae8:	mov	w9, #0x1                   	// #1
  406aec:	str	w9, [sp, #76]
  406af0:	cbnz	x8, 406b04 <__fxstat64@plt+0x3a8c>
  406af4:	ldur	x8, [x29, #-56]
  406af8:	cmp	x8, #0x0
  406afc:	cset	w9, ne  // ne = any
  406b00:	str	w9, [sp, #76]
  406b04:	ldr	w8, [sp, #76]
  406b08:	mov	w9, #0x1                   	// #1
  406b0c:	eor	w8, w8, #0x1
  406b10:	eor	w8, w8, w9
  406b14:	eor	w8, w8, w9
  406b18:	and	w8, w8, #0x1
  406b1c:	mov	w0, w8
  406b20:	sxtw	x10, w0
  406b24:	cbz	x10, 406b4c <__fxstat64@plt+0x3ad4>
  406b28:	mov	w8, wzr
  406b2c:	mov	w0, w8
  406b30:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  406b34:	add	x1, x1, #0xc0
  406b38:	ldr	x2, [sp, #80]
  406b3c:	mov	w3, #0x19f                 	// #415
  406b40:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  406b44:	add	x4, x4, #0xda
  406b48:	bl	402988 <log_assert_failed_realm@plt>
  406b4c:	ldur	x8, [x29, #-56]
  406b50:	cbz	x8, 406b6c <__fxstat64@plt+0x3af4>
  406b54:	ldur	x8, [x29, #-56]
  406b58:	str	x8, [sp, #104]
  406b5c:	ldr	x8, [sp, #88]
  406b60:	ldr	q0, [x8]
  406b64:	str	q0, [sp, #112]
  406b68:	b	406b80 <__fxstat64@plt+0x3b08>
  406b6c:	ldur	x8, [x29, #-48]
  406b70:	str	x8, [sp, #104]
  406b74:	ldr	x8, [sp, #88]
  406b78:	ldr	q0, [x8, #16]
  406b7c:	str	q0, [sp, #112]
  406b80:	ldr	x1, [sp, #104]
  406b84:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  406b88:	add	x0, x0, #0x121
  406b8c:	bl	402a38 <printf@plt>
  406b90:	ldr	x8, [sp, #112]
  406b94:	ldr	x1, [sp, #120]
  406b98:	mov	x0, x8
  406b9c:	bl	40643c <__fxstat64@plt+0x33c4>
  406ba0:	cbnz	w0, 406c38 <__fxstat64@plt+0x3bc0>
  406ba4:	ldrb	w1, [sp, #112]
  406ba8:	ldrb	w2, [sp, #113]
  406bac:	ldrb	w3, [sp, #114]
  406bb0:	ldrb	w4, [sp, #115]
  406bb4:	ldrb	w5, [sp, #116]
  406bb8:	ldrb	w6, [sp, #117]
  406bbc:	ldrb	w7, [sp, #118]
  406bc0:	ldrb	w8, [sp, #119]
  406bc4:	ldrb	w9, [sp, #120]
  406bc8:	ldrb	w10, [sp, #121]
  406bcc:	ldrb	w11, [sp, #122]
  406bd0:	ldrb	w12, [sp, #123]
  406bd4:	ldrb	w13, [sp, #124]
  406bd8:	ldrb	w14, [sp, #125]
  406bdc:	ldrb	w15, [sp, #126]
  406be0:	ldrb	w16, [sp, #127]
  406be4:	adrp	x0, 40e000 <__fxstat64@plt+0xaf88>
  406be8:	add	x0, x0, #0xc46
  406bec:	mov	x17, sp
  406bf0:	str	w8, [x17]
  406bf4:	mov	x17, sp
  406bf8:	str	w9, [x17, #8]
  406bfc:	mov	x17, sp
  406c00:	str	w10, [x17, #16]
  406c04:	mov	x17, sp
  406c08:	str	w11, [x17, #24]
  406c0c:	mov	x17, sp
  406c10:	str	w12, [x17, #32]
  406c14:	mov	x17, sp
  406c18:	str	w13, [x17, #40]
  406c1c:	mov	x17, sp
  406c20:	str	w14, [x17, #48]
  406c24:	mov	x17, sp
  406c28:	str	w15, [x17, #56]
  406c2c:	mov	x17, sp
  406c30:	str	w16, [x17, #64]
  406c34:	bl	402a38 <printf@plt>
  406c38:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  406c3c:	add	x0, x0, #0x148
  406c40:	bl	402a38 <printf@plt>
  406c44:	ldur	x8, [x29, #-48]
  406c48:	ldur	x1, [x29, #-56]
  406c4c:	mov	x0, x8
  406c50:	add	x2, sp, #0x80
  406c54:	bl	402b58 <boot_entries_load_config@plt>
  406c58:	str	w0, [sp, #100]
  406c5c:	ldr	w9, [sp, #100]
  406c60:	cmp	w9, #0x0
  406c64:	cset	w9, ge  // ge = tcont
  406c68:	tbnz	w9, #0, 406c80 <__fxstat64@plt+0x3c08>
  406c6c:	ldr	w8, [sp, #100]
  406c70:	stur	w8, [x29, #-4]
  406c74:	mov	w8, #0x1                   	// #1
  406c78:	str	w8, [sp, #96]
  406c7c:	b	406d04 <__fxstat64@plt+0x3c8c>
  406c80:	ldr	x8, [sp, #208]
  406c84:	cmp	x8, #0x0
  406c88:	cset	w9, ge  // ge = tcont
  406c8c:	tbnz	w9, #0, 406ca4 <__fxstat64@plt+0x3c2c>
  406c90:	ldr	x1, [sp, #200]
  406c94:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  406c98:	add	x0, x0, #0x14b
  406c9c:	bl	402a38 <printf@plt>
  406ca0:	b	406cf8 <__fxstat64@plt+0x3c80>
  406ca4:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  406ca8:	add	x0, x0, #0x182
  406cac:	bl	402a38 <printf@plt>
  406cb0:	add	x8, sp, #0x80
  406cb4:	ldr	x8, [x8, #64]
  406cb8:	ldr	x9, [sp, #208]
  406cbc:	mov	x10, #0x70                  	// #112
  406cc0:	mul	x9, x10, x9
  406cc4:	add	x8, x8, x9
  406cc8:	mov	x0, x8
  406ccc:	mov	w11, wzr
  406cd0:	and	w1, w11, #0x1
  406cd4:	bl	407cac <__fxstat64@plt+0x4c34>
  406cd8:	str	w0, [sp, #100]
  406cdc:	ldr	w11, [sp, #100]
  406ce0:	cmp	w11, #0x0
  406ce4:	cset	w11, le
  406ce8:	tbnz	w11, #0, 406cf8 <__fxstat64@plt+0x3c80>
  406cec:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  406cf0:	add	x0, x0, #0x19e
  406cf4:	bl	402a38 <printf@plt>
  406cf8:	stur	wzr, [x29, #-4]
  406cfc:	mov	w8, #0x1                   	// #1
  406d00:	str	w8, [sp, #96]
  406d04:	add	x0, sp, #0x80
  406d08:	bl	402b88 <boot_config_free@plt>
  406d0c:	ldur	w0, [x29, #-4]
  406d10:	ldr	x28, [sp, #288]
  406d14:	ldp	x29, x30, [sp, #272]
  406d18:	add	sp, sp, #0x130
  406d1c:	ret
  406d20:	sub	sp, sp, #0x20
  406d24:	stp	x29, x30, [sp, #16]
  406d28:	add	x29, sp, #0x10
  406d2c:	mov	x8, xzr
  406d30:	str	x0, [sp, #8]
  406d34:	ldr	x0, [sp, #8]
  406d38:	str	x8, [sp]
  406d3c:	bl	402978 <free@plt>
  406d40:	ldr	x0, [sp]
  406d44:	ldp	x29, x30, [sp, #16]
  406d48:	add	sp, sp, #0x20
  406d4c:	ret
  406d50:	stp	x29, x30, [sp, #-32]!
  406d54:	str	x28, [sp, #16]
  406d58:	mov	x29, sp
  406d5c:	sub	sp, sp, #0x140
  406d60:	sub	x8, x29, #0x38
  406d64:	mov	x9, xzr
  406d68:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  406d6c:	add	x10, x10, #0xf88
  406d70:	add	x10, x10, #0x3
  406d74:	adrp	x11, 40e000 <__fxstat64@plt+0xaf88>
  406d78:	add	x11, x11, #0xd2c
  406d7c:	str	x0, [x8, #40]
  406d80:	str	x1, [x8, #32]
  406d84:	str	x2, [x8, #24]
  406d88:	str	x9, [x8, #16]
  406d8c:	stur	wzr, [x29, #-60]
  406d90:	stur	x8, [x29, #-200]
  406d94:	stur	x10, [x29, #-208]
  406d98:	stur	x11, [x29, #-216]
  406d9c:	ldur	x8, [x29, #-200]
  406da0:	ldr	x9, [x8, #40]
  406da4:	cmp	x9, #0x0
  406da8:	cset	w10, ne  // ne = any
  406dac:	mov	w11, #0x1                   	// #1
  406db0:	eor	w10, w10, #0x1
  406db4:	eor	w10, w10, w11
  406db8:	eor	w10, w10, w11
  406dbc:	and	w10, w10, #0x1
  406dc0:	mov	w0, w10
  406dc4:	sxtw	x9, w0
  406dc8:	cbz	x9, 406dec <__fxstat64@plt+0x3d74>
  406dcc:	mov	w8, wzr
  406dd0:	mov	w0, w8
  406dd4:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  406dd8:	add	x1, x1, #0xd23
  406ddc:	ldur	x2, [x29, #-208]
  406de0:	mov	w3, #0xac                  	// #172
  406de4:	ldur	x4, [x29, #-216]
  406de8:	bl	402988 <log_assert_failed_realm@plt>
  406dec:	ldur	x8, [x29, #-200]
  406df0:	ldr	x9, [x8, #32]
  406df4:	cmp	x9, #0x0
  406df8:	cset	w10, ne  // ne = any
  406dfc:	mov	w11, #0x1                   	// #1
  406e00:	eor	w10, w10, #0x1
  406e04:	eor	w10, w10, w11
  406e08:	eor	w10, w10, w11
  406e0c:	and	w10, w10, #0x1
  406e10:	mov	w0, w10
  406e14:	sxtw	x9, w0
  406e18:	cbz	x9, 406e3c <__fxstat64@plt+0x3dc4>
  406e1c:	mov	w8, wzr
  406e20:	mov	w0, w8
  406e24:	adrp	x1, 40d000 <__fxstat64@plt+0x9f88>
  406e28:	add	x1, x1, #0xf26
  406e2c:	ldur	x2, [x29, #-208]
  406e30:	mov	w3, #0xad                  	// #173
  406e34:	ldur	x4, [x29, #-216]
  406e38:	bl	402988 <log_assert_failed_realm@plt>
  406e3c:	ldur	x8, [x29, #-200]
  406e40:	ldr	x9, [x8, #32]
  406e44:	stur	x9, [x29, #-72]
  406e48:	ldr	x9, [x8, #40]
  406e4c:	stur	x9, [x29, #-80]
  406e50:	ldur	x8, [x29, #-72]
  406e54:	ldrb	w9, [x8]
  406e58:	mov	w10, #0x0                   	// #0
  406e5c:	cmp	w9, #0x2f
  406e60:	stur	w10, [x29, #-220]
  406e64:	b.ne	406e7c <__fxstat64@plt+0x3e04>  // b.any
  406e68:	ldur	x8, [x29, #-72]
  406e6c:	ldrb	w9, [x8, #1]
  406e70:	cmp	w9, #0x2f
  406e74:	cset	w9, eq  // eq = none
  406e78:	stur	w9, [x29, #-220]
  406e7c:	ldur	w8, [x29, #-220]
  406e80:	tbnz	w8, #0, 406e88 <__fxstat64@plt+0x3e10>
  406e84:	b	406e98 <__fxstat64@plt+0x3e20>
  406e88:	ldur	x8, [x29, #-72]
  406e8c:	add	x8, x8, #0x1
  406e90:	stur	x8, [x29, #-72]
  406e94:	b	406e50 <__fxstat64@plt+0x3dd8>
  406e98:	ldur	x0, [x29, #-80]
  406e9c:	bl	4074a8 <__fxstat64@plt+0x4430>
  406ea0:	tbnz	w0, #0, 406ea8 <__fxstat64@plt+0x3e30>
  406ea4:	b	406eb4 <__fxstat64@plt+0x3e3c>
  406ea8:	ldur	x8, [x29, #-72]
  406eac:	stur	x8, [x29, #-88]
  406eb0:	b	40704c <__fxstat64@plt+0x3fd4>
  406eb4:	ldur	x0, [x29, #-80]
  406eb8:	bl	402bb8 <strlen@plt>
  406ebc:	add	x8, x0, #0x1
  406ec0:	ldur	x0, [x29, #-72]
  406ec4:	stur	x8, [x29, #-232]
  406ec8:	bl	402bb8 <strlen@plt>
  406ecc:	ldur	x8, [x29, #-232]
  406ed0:	add	x9, x8, x0
  406ed4:	add	x9, x9, #0x1
  406ed8:	stur	x9, [x29, #-112]
  406edc:	ldur	x9, [x29, #-112]
  406ee0:	stur	x9, [x29, #-120]
  406ee4:	ldur	x1, [x29, #-120]
  406ee8:	mov	x0, #0x1                   	// #1
  406eec:	bl	4074e8 <__fxstat64@plt+0x4470>
  406ef0:	mov	w8, #0x1                   	// #1
  406ef4:	eor	w9, w0, #0x1
  406ef8:	eor	w9, w9, w8
  406efc:	eor	w9, w9, w8
  406f00:	eor	w8, w9, w8
  406f04:	and	w8, w8, #0x1
  406f08:	mov	w1, w8
  406f0c:	sxtw	x10, w1
  406f10:	cbz	x10, 406f34 <__fxstat64@plt+0x3ebc>
  406f14:	mov	w8, wzr
  406f18:	mov	w0, w8
  406f1c:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  406f20:	add	x1, x1, #0xd6d
  406f24:	ldur	x2, [x29, #-208]
  406f28:	mov	w3, #0xaf                  	// #175
  406f2c:	ldur	x4, [x29, #-216]
  406f30:	bl	402988 <log_assert_failed_realm@plt>
  406f34:	ldur	x8, [x29, #-120]
  406f38:	mov	x9, #0x1                   	// #1
  406f3c:	mul	x8, x9, x8
  406f40:	cmp	x8, #0x400, lsl #12
  406f44:	cset	w10, ls  // ls = plast
  406f48:	mov	w11, #0x1                   	// #1
  406f4c:	eor	w10, w10, #0x1
  406f50:	eor	w10, w10, w11
  406f54:	eor	w10, w10, w11
  406f58:	and	w10, w10, #0x1
  406f5c:	mov	w0, w10
  406f60:	sxtw	x8, w0
  406f64:	cbz	x8, 406f88 <__fxstat64@plt+0x3f10>
  406f68:	mov	w8, wzr
  406f6c:	mov	w0, w8
  406f70:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  406f74:	add	x1, x1, #0xd98
  406f78:	ldur	x2, [x29, #-208]
  406f7c:	mov	w3, #0xaf                  	// #175
  406f80:	ldur	x4, [x29, #-216]
  406f84:	bl	402988 <log_assert_failed_realm@plt>
  406f88:	ldur	x8, [x29, #-120]
  406f8c:	mov	x9, #0x1                   	// #1
  406f90:	mul	x8, x9, x8
  406f94:	mul	x8, x8, x9
  406f98:	add	x8, x8, #0xf
  406f9c:	and	x8, x8, #0xfffffffffffffff0
  406fa0:	mov	x9, sp
  406fa4:	subs	x8, x9, x8
  406fa8:	mov	sp, x8
  406fac:	stur	x8, [x29, #-128]
  406fb0:	ldur	x8, [x29, #-128]
  406fb4:	stur	x8, [x29, #-104]
  406fb8:	ldur	x0, [x29, #-104]
  406fbc:	ldur	x1, [x29, #-80]
  406fc0:	bl	402c58 <stpcpy@plt>
  406fc4:	stur	x0, [x29, #-96]
  406fc8:	ldur	x8, [x29, #-96]
  406fcc:	ldur	x9, [x29, #-104]
  406fd0:	mov	w10, #0x0                   	// #0
  406fd4:	cmp	x8, x9
  406fd8:	stur	w10, [x29, #-236]
  406fdc:	b.ls	406ff4 <__fxstat64@plt+0x3f7c>  // b.plast
  406fe0:	ldur	x8, [x29, #-96]
  406fe4:	ldurb	w9, [x8, #-1]
  406fe8:	cmp	w9, #0x2f
  406fec:	cset	w9, eq  // eq = none
  406ff0:	stur	w9, [x29, #-236]
  406ff4:	ldur	w8, [x29, #-236]
  406ff8:	tbnz	w8, #0, 407000 <__fxstat64@plt+0x3f88>
  406ffc:	b	407014 <__fxstat64@plt+0x3f9c>
  407000:	ldur	x8, [x29, #-96]
  407004:	mov	x9, #0xffffffffffffffff    	// #-1
  407008:	add	x8, x8, x9
  40700c:	stur	x8, [x29, #-96]
  407010:	b	406fc8 <__fxstat64@plt+0x3f50>
  407014:	ldur	x8, [x29, #-72]
  407018:	ldrb	w9, [x8]
  40701c:	cmp	w9, #0x2f
  407020:	b.eq	407038 <__fxstat64@plt+0x3fc0>  // b.none
  407024:	ldur	x8, [x29, #-96]
  407028:	add	x9, x8, #0x1
  40702c:	stur	x9, [x29, #-96]
  407030:	mov	w10, #0x2f                  	// #47
  407034:	strb	w10, [x8]
  407038:	ldur	x0, [x29, #-96]
  40703c:	ldur	x1, [x29, #-72]
  407040:	bl	402c68 <strcpy@plt>
  407044:	ldur	x8, [x29, #-104]
  407048:	stur	x8, [x29, #-88]
  40704c:	ldur	x8, [x29, #-88]
  407050:	stur	x8, [x29, #-136]
  407054:	ldur	x8, [x29, #-136]
  407058:	ldur	x9, [x29, #-200]
  40705c:	str	x8, [x9]
  407060:	ldr	x0, [x9]
  407064:	bl	402c78 <opendir@plt>
  407068:	ldur	x8, [x29, #-200]
  40706c:	str	x0, [x8, #16]
  407070:	ldr	x9, [x8, #16]
  407074:	cbnz	x9, 407134 <__fxstat64@plt+0x40bc>
  407078:	bl	402b98 <__errno_location@plt>
  40707c:	ldr	w8, [x0]
  407080:	cmp	w8, #0x2
  407084:	b.ne	407098 <__fxstat64@plt+0x4020>  // b.any
  407088:	stur	wzr, [x29, #-4]
  40708c:	mov	w8, #0x1                   	// #1
  407090:	stur	w8, [x29, #-140]
  407094:	b	407458 <__fxstat64@plt+0x43e0>
  407098:	mov	w8, #0x3                   	// #3
  40709c:	stur	w8, [x29, #-144]
  4070a0:	bl	402b98 <__errno_location@plt>
  4070a4:	ldr	w8, [x0]
  4070a8:	stur	w8, [x29, #-148]
  4070ac:	stur	wzr, [x29, #-152]
  4070b0:	ldur	w0, [x29, #-152]
  4070b4:	bl	4029d8 <log_get_max_level_realm@plt>
  4070b8:	ldur	w8, [x29, #-144]
  4070bc:	and	w8, w8, #0x7
  4070c0:	cmp	w0, w8
  4070c4:	b.lt	407104 <__fxstat64@plt+0x408c>  // b.tstop
  4070c8:	ldur	w8, [x29, #-152]
  4070cc:	ldur	w9, [x29, #-144]
  4070d0:	orr	w0, w9, w8, lsl #10
  4070d4:	ldur	w1, [x29, #-148]
  4070d8:	ldur	x10, [x29, #-200]
  4070dc:	ldr	x6, [x10]
  4070e0:	ldur	x2, [x29, #-208]
  4070e4:	mov	w3, #0xb5                  	// #181
  4070e8:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  4070ec:	add	x4, x4, #0xdb7
  4070f0:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4070f4:	add	x5, x5, #0xdca
  4070f8:	bl	4029e8 <log_internal_realm@plt>
  4070fc:	stur	w0, [x29, #-240]
  407100:	b	407118 <__fxstat64@plt+0x40a0>
  407104:	ldur	w0, [x29, #-148]
  407108:	bl	4029f8 <abs@plt>
  40710c:	mov	w8, wzr
  407110:	subs	w8, w8, w0, uxtb
  407114:	stur	w8, [x29, #-240]
  407118:	ldur	w8, [x29, #-240]
  40711c:	stur	w8, [x29, #-156]
  407120:	ldur	w8, [x29, #-156]
  407124:	stur	w8, [x29, #-4]
  407128:	mov	w8, #0x1                   	// #1
  40712c:	stur	w8, [x29, #-140]
  407130:	b	407458 <__fxstat64@plt+0x43e0>
  407134:	bl	402b98 <__errno_location@plt>
  407138:	str	wzr, [x0]
  40713c:	ldur	x8, [x29, #-200]
  407140:	ldr	x0, [x8, #16]
  407144:	bl	402c88 <readdir64@plt>
  407148:	ldur	x8, [x29, #-200]
  40714c:	str	x0, [x8, #8]
  407150:	ldur	x8, [x29, #-200]
  407154:	ldr	x9, [x8, #8]
  407158:	cbnz	x9, 407178 <__fxstat64@plt+0x4100>
  40715c:	bl	402b98 <__errno_location@plt>
  407160:	ldr	w8, [x0]
  407164:	cmp	w8, #0x0
  407168:	cset	w8, le
  40716c:	tbnz	w8, #0, 407174 <__fxstat64@plt+0x40fc>
  407170:	b	407448 <__fxstat64@plt+0x43d0>
  407174:	b	407448 <__fxstat64@plt+0x43d0>
  407178:	ldur	x8, [x29, #-200]
  40717c:	ldr	x9, [x8, #8]
  407180:	add	x0, x9, #0x13
  407184:	bl	402c98 <hidden_or_backup_file@plt>
  407188:	tbnz	w0, #0, 407190 <__fxstat64@plt+0x4118>
  40718c:	b	407194 <__fxstat64@plt+0x411c>
  407190:	b	407428 <__fxstat64@plt+0x43b0>
  407194:	mov	x8, xzr
  407198:	stur	x8, [x29, #-168]
  40719c:	mov	w9, #0xffffffff            	// #-1
  4071a0:	stur	w9, [x29, #-172]
  4071a4:	ldur	x8, [x29, #-200]
  4071a8:	ldr	x10, [x8, #8]
  4071ac:	add	x0, x10, #0x13
  4071b0:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4071b4:	add	x1, x1, #0xde2
  4071b8:	bl	402ca8 <endswith_no_case@plt>
  4071bc:	cbnz	x0, 4071cc <__fxstat64@plt+0x4154>
  4071c0:	mov	w8, #0x10                  	// #16
  4071c4:	stur	w8, [x29, #-140]
  4071c8:	b	4073f0 <__fxstat64@plt+0x4378>
  4071cc:	ldur	x8, [x29, #-200]
  4071d0:	ldr	x9, [x8, #24]
  4071d4:	cbz	x9, 4071fc <__fxstat64@plt+0x4184>
  4071d8:	ldur	x8, [x29, #-200]
  4071dc:	ldr	x9, [x8, #8]
  4071e0:	add	x0, x9, #0x13
  4071e4:	ldr	x1, [x8, #24]
  4071e8:	bl	407578 <__fxstat64@plt+0x4500>
  4071ec:	cbnz	x0, 4071fc <__fxstat64@plt+0x4184>
  4071f0:	mov	w8, #0x10                  	// #16
  4071f4:	stur	w8, [x29, #-140]
  4071f8:	b	4073f0 <__fxstat64@plt+0x4378>
  4071fc:	ldur	x8, [x29, #-200]
  407200:	ldr	x0, [x8, #16]
  407204:	bl	402cb8 <dirfd@plt>
  407208:	ldur	x8, [x29, #-200]
  40720c:	ldr	x9, [x8, #8]
  407210:	add	x1, x9, #0x13
  407214:	mov	w2, #0x80000               	// #524288
  407218:	bl	402cc8 <openat64@plt>
  40721c:	stur	w0, [x29, #-172]
  407220:	ldur	w10, [x29, #-172]
  407224:	cmp	w10, #0x0
  407228:	cset	w10, ge  // ge = tcont
  40722c:	tbnz	w10, #0, 4072d4 <__fxstat64@plt+0x425c>
  407230:	mov	w8, #0x3                   	// #3
  407234:	stur	w8, [x29, #-176]
  407238:	bl	402b98 <__errno_location@plt>
  40723c:	ldr	w8, [x0]
  407240:	stur	w8, [x29, #-180]
  407244:	stur	wzr, [x29, #-184]
  407248:	ldur	w0, [x29, #-184]
  40724c:	bl	4029d8 <log_get_max_level_realm@plt>
  407250:	ldur	w8, [x29, #-176]
  407254:	and	w8, w8, #0x7
  407258:	cmp	w0, w8
  40725c:	b.lt	4072a4 <__fxstat64@plt+0x422c>  // b.tstop
  407260:	ldur	w8, [x29, #-184]
  407264:	ldur	w9, [x29, #-176]
  407268:	orr	w0, w9, w8, lsl #10
  40726c:	ldur	w1, [x29, #-180]
  407270:	ldur	x10, [x29, #-200]
  407274:	ldr	x6, [x10]
  407278:	ldr	x11, [x10, #8]
  40727c:	add	x7, x11, #0x13
  407280:	ldur	x2, [x29, #-208]
  407284:	mov	w3, #0xc4                  	// #196
  407288:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  40728c:	add	x4, x4, #0xdb7
  407290:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  407294:	add	x5, x5, #0xde7
  407298:	bl	4029e8 <log_internal_realm@plt>
  40729c:	stur	w0, [x29, #-244]
  4072a0:	b	4072b8 <__fxstat64@plt+0x4240>
  4072a4:	ldur	w0, [x29, #-180]
  4072a8:	bl	4029f8 <abs@plt>
  4072ac:	mov	w8, wzr
  4072b0:	subs	w8, w8, w0, uxtb
  4072b4:	stur	w8, [x29, #-244]
  4072b8:	ldur	w8, [x29, #-244]
  4072bc:	stur	w8, [x29, #-188]
  4072c0:	ldur	w8, [x29, #-188]
  4072c4:	stur	w8, [x29, #-4]
  4072c8:	mov	w8, #0x1                   	// #1
  4072cc:	stur	w8, [x29, #-140]
  4072d0:	b	4073f0 <__fxstat64@plt+0x4378>
  4072d4:	ldur	w0, [x29, #-172]
  4072d8:	sub	x1, x29, #0xa8
  4072dc:	bl	4075d8 <__fxstat64@plt+0x4560>
  4072e0:	stur	w0, [x29, #-64]
  4072e4:	ldur	w8, [x29, #-64]
  4072e8:	cmp	w8, #0x0
  4072ec:	cset	w8, ge  // ge = tcont
  4072f0:	tbnz	w8, #0, 407308 <__fxstat64@plt+0x4290>
  4072f4:	ldur	w8, [x29, #-64]
  4072f8:	stur	w8, [x29, #-4]
  4072fc:	mov	w8, #0x1                   	// #1
  407300:	stur	w8, [x29, #-140]
  407304:	b	4073f0 <__fxstat64@plt+0x4378>
  407308:	ldur	w8, [x29, #-64]
  40730c:	cmp	w8, #0x0
  407310:	cset	w8, le
  407314:	tbnz	w8, #0, 4073a8 <__fxstat64@plt+0x4330>
  407318:	mov	w0, #0x2                   	// #2
  40731c:	bl	402ae8 <special_glyph@plt>
  407320:	ldur	x8, [x29, #-200]
  407324:	ldr	x2, [x8, #32]
  407328:	ldr	x9, [x8, #8]
  40732c:	add	x3, x9, #0x13
  407330:	stur	x0, [x29, #-256]
  407334:	sub	x8, x29, #0x8
  407338:	stur	x2, [x8, #-256]
  40733c:	sub	x8, x29, #0x10
  407340:	stur	x3, [x8, #-256]
  407344:	bl	403a20 <__fxstat64@plt+0x9a8>
  407348:	ldur	x5, [x29, #-168]
  40734c:	sub	x8, x29, #0x18
  407350:	stur	x0, [x8, #-256]
  407354:	sub	x8, x29, #0x20
  407358:	stur	x5, [x8, #-256]
  40735c:	bl	403a64 <__fxstat64@plt+0x9ec>
  407360:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  407364:	add	x8, x8, #0xe0e
  407368:	sub	x9, x29, #0x28
  40736c:	stur	x0, [x9, #-256]
  407370:	mov	x0, x8
  407374:	ldur	x1, [x29, #-256]
  407378:	sub	x8, x29, #0x8
  40737c:	ldur	x2, [x8, #-256]
  407380:	sub	x8, x29, #0x10
  407384:	ldur	x3, [x8, #-256]
  407388:	sub	x8, x29, #0x18
  40738c:	ldur	x4, [x8, #-256]
  407390:	sub	x8, x29, #0x20
  407394:	ldur	x5, [x8, #-256]
  407398:	sub	x8, x29, #0x28
  40739c:	ldur	x6, [x8, #-256]
  4073a0:	bl	402a38 <printf@plt>
  4073a4:	b	4073e0 <__fxstat64@plt+0x4368>
  4073a8:	mov	w0, #0x2                   	// #2
  4073ac:	bl	402ae8 <special_glyph@plt>
  4073b0:	ldur	x8, [x29, #-200]
  4073b4:	ldr	x2, [x8, #32]
  4073b8:	ldr	x9, [x8, #8]
  4073bc:	add	x3, x9, #0x13
  4073c0:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  4073c4:	add	x9, x9, #0xe30
  4073c8:	sub	x8, x29, #0x30
  4073cc:	stur	x0, [x8, #-256]
  4073d0:	mov	x0, x9
  4073d4:	sub	x8, x29, #0x30
  4073d8:	ldur	x1, [x8, #-256]
  4073dc:	bl	402a38 <printf@plt>
  4073e0:	ldur	w8, [x29, #-60]
  4073e4:	add	w8, w8, #0x1
  4073e8:	stur	w8, [x29, #-60]
  4073ec:	stur	wzr, [x29, #-140]
  4073f0:	sub	x0, x29, #0xac
  4073f4:	bl	407550 <__fxstat64@plt+0x44d8>
  4073f8:	sub	x0, x29, #0xa8
  4073fc:	bl	403464 <__fxstat64@plt+0x3ec>
  407400:	ldur	w8, [x29, #-140]
  407404:	sub	x9, x29, #0x34
  407408:	stur	w8, [x9, #-256]
  40740c:	cbz	w8, 407428 <__fxstat64@plt+0x43b0>
  407410:	b	407414 <__fxstat64@plt+0x439c>
  407414:	sub	x8, x29, #0x34
  407418:	ldur	w8, [x8, #-256]
  40741c:	cmp	w8, #0x10
  407420:	b.eq	407428 <__fxstat64@plt+0x43b0>  // b.none
  407424:	b	407458 <__fxstat64@plt+0x43e0>
  407428:	bl	402b98 <__errno_location@plt>
  40742c:	str	wzr, [x0]
  407430:	ldur	x8, [x29, #-200]
  407434:	ldr	x0, [x8, #16]
  407438:	bl	402c88 <readdir64@plt>
  40743c:	ldur	x8, [x29, #-200]
  407440:	str	x0, [x8, #8]
  407444:	b	407150 <__fxstat64@plt+0x40d8>
  407448:	ldur	w8, [x29, #-60]
  40744c:	stur	w8, [x29, #-4]
  407450:	mov	w8, #0x1                   	// #1
  407454:	stur	w8, [x29, #-140]
  407458:	sub	x0, x29, #0x28
  40745c:	bl	407474 <__fxstat64@plt+0x43fc>
  407460:	ldur	w0, [x29, #-4]
  407464:	mov	sp, x29
  407468:	ldr	x28, [sp, #16]
  40746c:	ldp	x29, x30, [sp], #32
  407470:	ret
  407474:	sub	sp, sp, #0x20
  407478:	stp	x29, x30, [sp, #16]
  40747c:	add	x29, sp, #0x10
  407480:	str	x0, [sp, #8]
  407484:	ldr	x8, [sp, #8]
  407488:	ldr	x8, [x8]
  40748c:	cbz	x8, 40749c <__fxstat64@plt+0x4424>
  407490:	ldr	x8, [sp, #8]
  407494:	ldr	x0, [x8]
  407498:	bl	402cd8 <closedir@plt>
  40749c:	ldp	x29, x30, [sp, #16]
  4074a0:	add	sp, sp, #0x20
  4074a4:	ret
  4074a8:	sub	sp, sp, #0x10
  4074ac:	str	x0, [sp, #8]
  4074b0:	ldr	x8, [sp, #8]
  4074b4:	mov	w9, #0x1                   	// #1
  4074b8:	str	w9, [sp, #4]
  4074bc:	cbz	x8, 4074d8 <__fxstat64@plt+0x4460>
  4074c0:	ldr	x8, [sp, #8]
  4074c4:	ldrb	w9, [x8]
  4074c8:	cmp	w9, #0x0
  4074cc:	cset	w9, ne  // ne = any
  4074d0:	eor	w9, w9, #0x1
  4074d4:	str	w9, [sp, #4]
  4074d8:	ldr	w8, [sp, #4]
  4074dc:	and	w0, w8, #0x1
  4074e0:	add	sp, sp, #0x10
  4074e4:	ret
  4074e8:	sub	sp, sp, #0x20
  4074ec:	str	x0, [sp, #24]
  4074f0:	str	x1, [sp, #16]
  4074f4:	ldr	x8, [sp, #16]
  4074f8:	mov	w9, #0x0                   	// #0
  4074fc:	str	w9, [sp, #12]
  407500:	cbz	x8, 407520 <__fxstat64@plt+0x44a8>
  407504:	ldr	x8, [sp, #24]
  407508:	ldr	x9, [sp, #16]
  40750c:	mov	x10, #0xffffffffffffffff    	// #-1
  407510:	udiv	x9, x10, x9
  407514:	cmp	x8, x9
  407518:	cset	w11, hi  // hi = pmore
  40751c:	str	w11, [sp, #12]
  407520:	ldr	w8, [sp, #12]
  407524:	mov	w9, #0x1                   	// #1
  407528:	eor	w8, w8, #0x1
  40752c:	eor	w8, w8, w9
  407530:	and	w8, w8, #0x1
  407534:	mov	w0, w8
  407538:	sxtw	x10, w0
  40753c:	cmp	x10, #0x0
  407540:	cset	w8, ne  // ne = any
  407544:	and	w0, w8, #0x1
  407548:	add	sp, sp, #0x20
  40754c:	ret
  407550:	sub	sp, sp, #0x20
  407554:	stp	x29, x30, [sp, #16]
  407558:	add	x29, sp, #0x10
  40755c:	str	x0, [sp, #8]
  407560:	ldr	x8, [sp, #8]
  407564:	ldr	w0, [x8]
  407568:	bl	402ce8 <safe_close@plt>
  40756c:	ldp	x29, x30, [sp, #16]
  407570:	add	sp, sp, #0x20
  407574:	ret
  407578:	sub	sp, sp, #0x30
  40757c:	stp	x29, x30, [sp, #32]
  407580:	add	x29, sp, #0x20
  407584:	str	x0, [sp, #16]
  407588:	str	x1, [sp, #8]
  40758c:	ldr	x0, [sp, #8]
  407590:	bl	402bb8 <strlen@plt>
  407594:	str	x0, [sp]
  407598:	ldr	x0, [sp, #16]
  40759c:	ldr	x1, [sp, #8]
  4075a0:	ldr	x2, [sp]
  4075a4:	bl	402cf8 <strncasecmp@plt>
  4075a8:	cbnz	w0, 4075c0 <__fxstat64@plt+0x4548>
  4075ac:	ldr	x8, [sp, #16]
  4075b0:	ldr	x9, [sp]
  4075b4:	add	x8, x8, x9
  4075b8:	stur	x8, [x29, #-8]
  4075bc:	b	4075c8 <__fxstat64@plt+0x4550>
  4075c0:	mov	x8, xzr
  4075c4:	stur	x8, [x29, #-8]
  4075c8:	ldur	x0, [x29, #-8]
  4075cc:	ldp	x29, x30, [sp, #32]
  4075d0:	add	sp, sp, #0x30
  4075d4:	ret
  4075d8:	sub	sp, sp, #0x140
  4075dc:	stp	x29, x30, [sp, #288]
  4075e0:	str	x28, [sp, #304]
  4075e4:	add	x29, sp, #0x120
  4075e8:	add	x8, sp, #0x90
  4075ec:	mov	x9, xzr
  4075f0:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  4075f4:	add	x10, x10, #0xf88
  4075f8:	add	x10, x10, #0x3
  4075fc:	adrp	x11, 40e000 <__fxstat64@plt+0xaf88>
  407600:	add	x11, x11, #0xe76
  407604:	stur	w0, [x29, #-8]
  407608:	str	x1, [x8, #128]
  40760c:	str	x9, [sp, #112]
  407610:	str	wzr, [sp, #108]
  407614:	str	x8, [sp, #32]
  407618:	str	x10, [sp, #24]
  40761c:	str	x11, [sp, #16]
  407620:	ldur	w8, [x29, #-8]
  407624:	cmp	w8, #0x0
  407628:	cset	w8, ge  // ge = tcont
  40762c:	mov	w9, #0x1                   	// #1
  407630:	eor	w8, w8, #0x1
  407634:	eor	w8, w8, w9
  407638:	eor	w8, w8, w9
  40763c:	and	w8, w8, #0x1
  407640:	mov	w0, w8
  407644:	sxtw	x10, w0
  407648:	cbz	x10, 407670 <__fxstat64@plt+0x45f8>
  40764c:	mov	w8, wzr
  407650:	mov	w0, w8
  407654:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  407658:	add	x1, x1, #0xe49
  40765c:	ldr	x2, [sp, #24]
  407660:	mov	w3, #0x7b                  	// #123
  407664:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  407668:	add	x4, x4, #0xe51
  40766c:	bl	402988 <log_assert_failed_realm@plt>
  407670:	ldr	x8, [sp, #32]
  407674:	ldr	x9, [x8, #128]
  407678:	cmp	x9, #0x0
  40767c:	cset	w10, ne  // ne = any
  407680:	mov	w11, #0x1                   	// #1
  407684:	eor	w10, w10, #0x1
  407688:	eor	w10, w10, w11
  40768c:	eor	w10, w10, w11
  407690:	and	w10, w10, #0x1
  407694:	mov	w0, w10
  407698:	sxtw	x9, w0
  40769c:	cbz	x9, 4076c4 <__fxstat64@plt+0x464c>
  4076a0:	mov	w8, wzr
  4076a4:	mov	w0, w8
  4076a8:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4076ac:	add	x1, x1, #0xe74
  4076b0:	ldr	x2, [sp, #24]
  4076b4:	mov	w3, #0x7c                  	// #124
  4076b8:	adrp	x4, 40e000 <__fxstat64@plt+0xaf88>
  4076bc:	add	x4, x4, #0xe51
  4076c0:	bl	402988 <log_assert_failed_realm@plt>
  4076c4:	ldur	w0, [x29, #-8]
  4076c8:	add	x1, sp, #0x90
  4076cc:	bl	40db00 <__fxstat64@plt+0xaa88>
  4076d0:	cmp	w0, #0x0
  4076d4:	cset	w8, ge  // ge = tcont
  4076d8:	tbnz	w8, #0, 407764 <__fxstat64@plt+0x46ec>
  4076dc:	mov	w8, #0x3                   	// #3
  4076e0:	str	w8, [sp, #104]
  4076e4:	bl	402b98 <__errno_location@plt>
  4076e8:	ldr	w8, [x0]
  4076ec:	str	w8, [sp, #100]
  4076f0:	str	wzr, [sp, #96]
  4076f4:	ldr	w0, [sp, #96]
  4076f8:	bl	4029d8 <log_get_max_level_realm@plt>
  4076fc:	ldr	w8, [sp, #104]
  407700:	and	w8, w8, #0x7
  407704:	cmp	w0, w8
  407708:	b.lt	40773c <__fxstat64@plt+0x46c4>  // b.tstop
  40770c:	ldr	w8, [sp, #96]
  407710:	ldr	w9, [sp, #104]
  407714:	orr	w0, w9, w8, lsl #10
  407718:	ldr	w1, [sp, #100]
  40771c:	ldr	x2, [sp, #24]
  407720:	mov	w3, #0x7f                  	// #127
  407724:	ldr	x4, [sp, #16]
  407728:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  40772c:	add	x5, x5, #0xe87
  407730:	bl	4029e8 <log_internal_realm@plt>
  407734:	str	w0, [sp, #12]
  407738:	b	407750 <__fxstat64@plt+0x46d8>
  40773c:	ldr	w0, [sp, #100]
  407740:	bl	4029f8 <abs@plt>
  407744:	mov	w8, wzr
  407748:	subs	w8, w8, w0, uxtb
  40774c:	str	w8, [sp, #12]
  407750:	ldr	w8, [sp, #12]
  407754:	str	w8, [sp, #92]
  407758:	ldr	w8, [sp, #92]
  40775c:	stur	w8, [x29, #-4]
  407760:	b	407a6c <__fxstat64@plt+0x49f4>
  407764:	add	x0, sp, #0x90
  407768:	bl	402d08 <stat_verify_regular@plt>
  40776c:	str	w0, [sp, #108]
  407770:	ldr	w8, [sp, #108]
  407774:	cmp	w8, #0x0
  407778:	cset	w8, ge  // ge = tcont
  40777c:	tbnz	w8, #0, 407804 <__fxstat64@plt+0x478c>
  407780:	mov	w8, #0x3                   	// #3
  407784:	str	w8, [sp, #88]
  407788:	ldr	w8, [sp, #108]
  40778c:	str	w8, [sp, #84]
  407790:	str	wzr, [sp, #80]
  407794:	ldr	w0, [sp, #80]
  407798:	bl	4029d8 <log_get_max_level_realm@plt>
  40779c:	ldr	w8, [sp, #88]
  4077a0:	and	w8, w8, #0x7
  4077a4:	cmp	w0, w8
  4077a8:	b.lt	4077dc <__fxstat64@plt+0x4764>  // b.tstop
  4077ac:	ldr	w8, [sp, #80]
  4077b0:	ldr	w9, [sp, #88]
  4077b4:	orr	w0, w9, w8, lsl #10
  4077b8:	ldr	w1, [sp, #84]
  4077bc:	ldr	x2, [sp, #24]
  4077c0:	mov	w3, #0x83                  	// #131
  4077c4:	ldr	x4, [sp, #16]
  4077c8:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4077cc:	add	x5, x5, #0xea5
  4077d0:	bl	4029e8 <log_internal_realm@plt>
  4077d4:	str	w0, [sp, #8]
  4077d8:	b	4077f0 <__fxstat64@plt+0x4778>
  4077dc:	ldr	w0, [sp, #84]
  4077e0:	bl	4029f8 <abs@plt>
  4077e4:	mov	w8, wzr
  4077e8:	subs	w8, w8, w0, uxtb
  4077ec:	str	w8, [sp, #8]
  4077f0:	ldr	w8, [sp, #8]
  4077f4:	str	w8, [sp, #76]
  4077f8:	ldr	w8, [sp, #76]
  4077fc:	stur	w8, [x29, #-4]
  407800:	b	407a6c <__fxstat64@plt+0x49f4>
  407804:	ldr	x8, [sp, #32]
  407808:	ldr	x9, [x8, #48]
  40780c:	cmp	x9, #0x1b
  407810:	b.ge	40782c <__fxstat64@plt+0x47b4>  // b.tcont
  407814:	ldr	x8, [sp, #32]
  407818:	ldr	x9, [x8, #128]
  40781c:	mov	x10, xzr
  407820:	str	x10, [x9]
  407824:	stur	wzr, [x29, #-4]
  407828:	b	407a6c <__fxstat64@plt+0x49f4>
  40782c:	ldr	x8, [sp, #32]
  407830:	ldr	x1, [x8, #48]
  407834:	ldur	w4, [x29, #-8]
  407838:	mov	x9, xzr
  40783c:	mov	x0, x9
  407840:	mov	w2, #0x1                   	// #1
  407844:	mov	w3, #0x2                   	// #2
  407848:	mov	x5, x9
  40784c:	bl	402d18 <mmap64@plt>
  407850:	str	x0, [sp, #136]
  407854:	ldr	x8, [sp, #136]
  407858:	mov	x9, #0xffffffffffffffff    	// #-1
  40785c:	cmp	x8, x9
  407860:	b.ne	4078ec <__fxstat64@plt+0x4874>  // b.any
  407864:	mov	w8, #0x3                   	// #3
  407868:	str	w8, [sp, #72]
  40786c:	bl	402b98 <__errno_location@plt>
  407870:	ldr	w8, [x0]
  407874:	str	w8, [sp, #68]
  407878:	str	wzr, [sp, #64]
  40787c:	ldr	w0, [sp, #64]
  407880:	bl	4029d8 <log_get_max_level_realm@plt>
  407884:	ldr	w8, [sp, #72]
  407888:	and	w8, w8, #0x7
  40788c:	cmp	w0, w8
  407890:	b.lt	4078c4 <__fxstat64@plt+0x484c>  // b.tstop
  407894:	ldr	w8, [sp, #64]
  407898:	ldr	w9, [sp, #72]
  40789c:	orr	w0, w9, w8, lsl #10
  4078a0:	ldr	w1, [sp, #68]
  4078a4:	ldr	x2, [sp, #24]
  4078a8:	mov	w3, #0x8c                  	// #140
  4078ac:	ldr	x4, [sp, #16]
  4078b0:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4078b4:	add	x5, x5, #0xeca
  4078b8:	bl	4029e8 <log_internal_realm@plt>
  4078bc:	str	w0, [sp, #4]
  4078c0:	b	4078d8 <__fxstat64@plt+0x4860>
  4078c4:	ldr	w0, [sp, #68]
  4078c8:	bl	4029f8 <abs@plt>
  4078cc:	mov	w8, wzr
  4078d0:	subs	w8, w8, w0, uxtb
  4078d4:	str	w8, [sp, #4]
  4078d8:	ldr	w8, [sp, #4]
  4078dc:	str	w8, [sp, #60]
  4078e0:	ldr	w8, [sp, #60]
  4078e4:	stur	w8, [x29, #-4]
  4078e8:	b	407a6c <__fxstat64@plt+0x49f4>
  4078ec:	ldr	x0, [sp, #136]
  4078f0:	ldr	x8, [sp, #32]
  4078f4:	ldr	x9, [x8, #48]
  4078f8:	subs	x1, x9, #0x8
  4078fc:	adrp	x2, 40e000 <__fxstat64@plt+0xaf88>
  407900:	add	x2, x2, #0xeee
  407904:	mov	x3, #0x11                  	// #17
  407908:	bl	402d28 <memmem@plt>
  40790c:	str	x0, [sp, #128]
  407910:	ldr	x8, [sp, #128]
  407914:	cbnz	x8, 40791c <__fxstat64@plt+0x48a4>
  407918:	b	407a44 <__fxstat64@plt+0x49cc>
  40791c:	ldr	x8, [sp, #128]
  407920:	add	x8, x8, #0x11
  407924:	str	x8, [sp, #128]
  407928:	ldr	x0, [sp, #128]
  40792c:	ldr	x8, [sp, #32]
  407930:	ldr	x9, [x8, #48]
  407934:	ldr	x10, [sp, #128]
  407938:	ldr	x11, [sp, #136]
  40793c:	subs	x10, x10, x11
  407940:	subs	x1, x9, x10
  407944:	adrp	x2, 40e000 <__fxstat64@plt+0xaf88>
  407948:	add	x2, x2, #0xf00
  40794c:	mov	x3, #0x5                   	// #5
  407950:	bl	402d28 <memmem@plt>
  407954:	str	x0, [sp, #120]
  407958:	ldr	x8, [sp, #120]
  40795c:	cbz	x8, 407974 <__fxstat64@plt+0x48fc>
  407960:	ldr	x8, [sp, #120]
  407964:	ldr	x9, [sp, #128]
  407968:	subs	x8, x8, x9
  40796c:	cmp	x8, #0x3
  407970:	b.ge	4079fc <__fxstat64@plt+0x4984>  // b.tcont
  407974:	mov	w8, #0x3                   	// #3
  407978:	str	w8, [sp, #56]
  40797c:	mov	w8, #0x16                  	// #22
  407980:	movk	w8, #0x4000, lsl #16
  407984:	str	w8, [sp, #52]
  407988:	str	wzr, [sp, #48]
  40798c:	ldr	w0, [sp, #48]
  407990:	bl	4029d8 <log_get_max_level_realm@plt>
  407994:	ldr	w8, [sp, #56]
  407998:	and	w8, w8, #0x7
  40799c:	cmp	w0, w8
  4079a0:	b.lt	4079d4 <__fxstat64@plt+0x495c>  // b.tstop
  4079a4:	ldr	w8, [sp, #48]
  4079a8:	ldr	w9, [sp, #56]
  4079ac:	orr	w0, w9, w8, lsl #10
  4079b0:	ldr	w1, [sp, #52]
  4079b4:	ldr	x2, [sp, #24]
  4079b8:	mov	w3, #0x95                  	// #149
  4079bc:	ldr	x4, [sp, #16]
  4079c0:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  4079c4:	add	x5, x5, #0xf06
  4079c8:	bl	4029e8 <log_internal_realm@plt>
  4079cc:	str	w0, [sp]
  4079d0:	b	4079e8 <__fxstat64@plt+0x4970>
  4079d4:	ldr	w0, [sp, #52]
  4079d8:	bl	4029f8 <abs@plt>
  4079dc:	mov	w8, wzr
  4079e0:	subs	w8, w8, w0, uxtb
  4079e4:	str	w8, [sp]
  4079e8:	ldr	w8, [sp]
  4079ec:	str	w8, [sp, #44]
  4079f0:	ldr	w8, [sp, #44]
  4079f4:	str	w8, [sp, #108]
  4079f8:	b	407a44 <__fxstat64@plt+0x49cc>
  4079fc:	ldr	x0, [sp, #128]
  407a00:	ldr	x8, [sp, #120]
  407a04:	ldr	x9, [sp, #128]
  407a08:	subs	x1, x8, x9
  407a0c:	bl	402d38 <strndup@plt>
  407a10:	str	x0, [sp, #112]
  407a14:	ldr	x8, [sp, #112]
  407a18:	cbnz	x8, 407a3c <__fxstat64@plt+0x49c4>
  407a1c:	mov	w8, wzr
  407a20:	mov	w0, w8
  407a24:	ldr	x1, [sp, #24]
  407a28:	mov	w2, #0x9b                  	// #155
  407a2c:	ldr	x3, [sp, #16]
  407a30:	bl	4029c8 <log_oom_internal@plt>
  407a34:	str	w0, [sp, #108]
  407a38:	b	407a44 <__fxstat64@plt+0x49cc>
  407a3c:	mov	w8, #0x1                   	// #1
  407a40:	str	w8, [sp, #108]
  407a44:	ldr	x0, [sp, #136]
  407a48:	ldr	x8, [sp, #32]
  407a4c:	ldr	x1, [x8, #48]
  407a50:	bl	402d48 <munmap@plt>
  407a54:	ldr	x8, [sp, #112]
  407a58:	ldr	x9, [sp, #32]
  407a5c:	ldr	x10, [x9, #128]
  407a60:	str	x8, [x10]
  407a64:	ldr	w11, [sp, #108]
  407a68:	stur	w11, [x29, #-4]
  407a6c:	ldur	w0, [x29, #-4]
  407a70:	ldr	x28, [sp, #304]
  407a74:	ldp	x29, x30, [sp, #288]
  407a78:	add	sp, sp, #0x140
  407a7c:	ret
  407a80:	sub	sp, sp, #0xb0
  407a84:	stp	x29, x30, [sp, #160]
  407a88:	add	x29, sp, #0xa0
  407a8c:	mov	x8, xzr
  407a90:	mov	w9, #0x1                   	// #1
  407a94:	sub	x10, x29, #0x10
  407a98:	sub	x3, x29, #0x18
  407a9c:	sub	x2, x29, #0x28
  407aa0:	sub	x4, x29, #0x29
  407aa4:	sturh	w0, [x29, #-6]
  407aa8:	and	w9, w1, w9
  407aac:	sturb	w9, [x29, #-7]
  407ab0:	stur	x8, [x29, #-16]
  407ab4:	stur	x8, [x29, #-24]
  407ab8:	stur	wzr, [x29, #-48]
  407abc:	ldurh	w0, [x29, #-6]
  407ac0:	mov	x1, x10
  407ac4:	bl	402d58 <efi_get_boot_option@plt>
  407ac8:	stur	w0, [x29, #-48]
  407acc:	ldur	w9, [x29, #-48]
  407ad0:	cmp	w9, #0x0
  407ad4:	cset	w9, ge  // ge = tcont
  407ad8:	tbnz	w9, #0, 407af0 <__fxstat64@plt+0x4a78>
  407adc:	ldur	w8, [x29, #-48]
  407ae0:	stur	w8, [x29, #-4]
  407ae4:	mov	w8, #0x1                   	// #1
  407ae8:	stur	w8, [x29, #-52]
  407aec:	b	407c8c <__fxstat64@plt+0x4c14>
  407af0:	ldur	x8, [x29, #-24]
  407af4:	cbz	x8, 407b08 <__fxstat64@plt+0x4a90>
  407af8:	ldur	x0, [x29, #-40]
  407afc:	ldur	x1, [x29, #-32]
  407b00:	bl	40643c <__fxstat64@plt+0x33c4>
  407b04:	cbz	w0, 407b18 <__fxstat64@plt+0x4aa0>
  407b08:	stur	wzr, [x29, #-4]
  407b0c:	mov	w8, #0x1                   	// #1
  407b10:	stur	w8, [x29, #-52]
  407b14:	b	407c8c <__fxstat64@plt+0x4c14>
  407b18:	ldur	x0, [x29, #-24]
  407b1c:	bl	402aa8 <efi_tilt_backslashes@plt>
  407b20:	bl	403a20 <__fxstat64@plt+0x9a8>
  407b24:	ldur	x8, [x29, #-16]
  407b28:	stur	x0, [x29, #-64]
  407b2c:	mov	x0, x8
  407b30:	bl	406348 <__fxstat64@plt+0x32d0>
  407b34:	stur	x0, [x29, #-72]
  407b38:	bl	403a64 <__fxstat64@plt+0x9ec>
  407b3c:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  407b40:	add	x8, x8, #0xffc
  407b44:	str	x0, [sp, #80]
  407b48:	mov	x0, x8
  407b4c:	ldur	x1, [x29, #-64]
  407b50:	ldur	x2, [x29, #-72]
  407b54:	ldr	x3, [sp, #80]
  407b58:	bl	402a38 <printf@plt>
  407b5c:	ldurh	w1, [x29, #-6]
  407b60:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407b64:	add	x8, x8, #0x13
  407b68:	mov	x0, x8
  407b6c:	bl	402a38 <printf@plt>
  407b70:	ldurb	w9, [x29, #-41]
  407b74:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407b78:	add	x8, x8, #0x45
  407b7c:	adrp	x10, 40e000 <__fxstat64@plt+0xaf88>
  407b80:	add	x10, x10, #0x5bc
  407b84:	tst	w9, #0x1
  407b88:	csel	x1, x10, x8, ne  // ne = any
  407b8c:	ldurb	w9, [x29, #-7]
  407b90:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407b94:	add	x8, x8, #0x48
  407b98:	tst	w9, #0x1
  407b9c:	csel	x2, x8, x10, ne  // ne = any
  407ba0:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407ba4:	add	x8, x8, #0x2a
  407ba8:	mov	x0, x8
  407bac:	bl	402a38 <printf@plt>
  407bb0:	ldurb	w1, [x29, #-40]
  407bb4:	ldurb	w2, [x29, #-39]
  407bb8:	ldurb	w3, [x29, #-38]
  407bbc:	ldurb	w4, [x29, #-37]
  407bc0:	ldurb	w5, [x29, #-36]
  407bc4:	ldurb	w6, [x29, #-35]
  407bc8:	ldurb	w7, [x29, #-34]
  407bcc:	ldurb	w9, [x29, #-33]
  407bd0:	ldurb	w11, [x29, #-32]
  407bd4:	ldurb	w12, [x29, #-31]
  407bd8:	ldurb	w13, [x29, #-30]
  407bdc:	ldurb	w14, [x29, #-29]
  407be0:	ldurb	w15, [x29, #-28]
  407be4:	ldurb	w16, [x29, #-27]
  407be8:	ldurb	w17, [x29, #-26]
  407bec:	ldurb	w18, [x29, #-25]
  407bf0:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407bf4:	add	x8, x8, #0x55
  407bf8:	mov	x0, x8
  407bfc:	mov	x8, sp
  407c00:	str	w9, [x8]
  407c04:	mov	x8, sp
  407c08:	str	w11, [x8, #8]
  407c0c:	mov	x8, sp
  407c10:	str	w12, [x8, #16]
  407c14:	mov	x8, sp
  407c18:	str	w13, [x8, #24]
  407c1c:	mov	x8, sp
  407c20:	str	w14, [x8, #32]
  407c24:	mov	x8, sp
  407c28:	str	w15, [x8, #40]
  407c2c:	mov	x8, sp
  407c30:	str	w16, [x8, #48]
  407c34:	mov	x8, sp
  407c38:	str	w17, [x8, #56]
  407c3c:	mov	x8, sp
  407c40:	str	w18, [x8, #64]
  407c44:	bl	402a38 <printf@plt>
  407c48:	mov	w9, #0x2                   	// #2
  407c4c:	mov	w0, w9
  407c50:	bl	402ae8 <special_glyph@plt>
  407c54:	ldur	x2, [x29, #-24]
  407c58:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  407c5c:	add	x8, x8, #0x8ff
  407c60:	str	x0, [sp, #72]
  407c64:	mov	x0, x8
  407c68:	ldr	x1, [sp, #72]
  407c6c:	bl	402a38 <printf@plt>
  407c70:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  407c74:	add	x8, x8, #0x813
  407c78:	mov	x0, x8
  407c7c:	bl	402a38 <printf@plt>
  407c80:	stur	wzr, [x29, #-4]
  407c84:	mov	w9, #0x1                   	// #1
  407c88:	stur	w9, [x29, #-52]
  407c8c:	sub	x0, x29, #0x18
  407c90:	bl	403464 <__fxstat64@plt+0x3ec>
  407c94:	sub	x0, x29, #0x10
  407c98:	bl	403464 <__fxstat64@plt+0x3ec>
  407c9c:	ldur	w0, [x29, #-4]
  407ca0:	ldp	x29, x30, [sp, #160]
  407ca4:	add	sp, sp, #0xb0
  407ca8:	ret
  407cac:	sub	sp, sp, #0xb0
  407cb0:	stp	x29, x30, [sp, #160]
  407cb4:	add	x29, sp, #0xa0
  407cb8:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  407cbc:	add	x8, x8, #0xf88
  407cc0:	add	x8, x8, #0x3
  407cc4:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  407cc8:	add	x9, x9, #0x28c
  407ccc:	mov	w10, #0x1                   	// #1
  407cd0:	stur	x0, [x29, #-16]
  407cd4:	and	w10, w1, w10
  407cd8:	sturb	w10, [x29, #-17]
  407cdc:	stur	wzr, [x29, #-24]
  407ce0:	str	x8, [sp, #80]
  407ce4:	str	x9, [sp, #72]
  407ce8:	ldur	x8, [x29, #-16]
  407cec:	cmp	x8, #0x0
  407cf0:	cset	w9, ne  // ne = any
  407cf4:	mov	w10, #0x1                   	// #1
  407cf8:	eor	w9, w9, #0x1
  407cfc:	eor	w9, w9, w10
  407d00:	eor	w9, w9, w10
  407d04:	and	w9, w9, #0x1
  407d08:	mov	w0, w9
  407d0c:	sxtw	x8, w0
  407d10:	cbz	x8, 407d38 <__fxstat64@plt+0x4cc0>
  407d14:	mov	w8, wzr
  407d18:	mov	w0, w8
  407d1c:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  407d20:	add	x1, x1, #0x1c6
  407d24:	ldr	x2, [sp, #80]
  407d28:	mov	w3, #0x15b                 	// #347
  407d2c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  407d30:	add	x4, x4, #0x1c8
  407d34:	bl	402988 <log_assert_failed_realm@plt>
  407d38:	bl	403a20 <__fxstat64@plt+0x9a8>
  407d3c:	ldur	x8, [x29, #-16]
  407d40:	str	x0, [sp, #64]
  407d44:	mov	x0, x8
  407d48:	bl	4080cc <__fxstat64@plt+0x5054>
  407d4c:	str	x0, [sp, #56]
  407d50:	bl	403a64 <__fxstat64@plt+0x9ec>
  407d54:	str	x0, [sp, #48]
  407d58:	bl	4063b4 <__fxstat64@plt+0x333c>
  407d5c:	ldurb	w9, [x29, #-17]
  407d60:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  407d64:	add	x8, x8, #0x5bc
  407d68:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  407d6c:	add	x10, x10, #0x213
  407d70:	tst	w9, #0x1
  407d74:	csel	x5, x10, x8, ne  // ne = any
  407d78:	str	x0, [sp, #40]
  407d7c:	str	x5, [sp, #32]
  407d80:	bl	403a64 <__fxstat64@plt+0x9ec>
  407d84:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  407d88:	add	x8, x8, #0x1f6
  407d8c:	str	x0, [sp, #24]
  407d90:	mov	x0, x8
  407d94:	ldr	x1, [sp, #64]
  407d98:	ldr	x2, [sp, #56]
  407d9c:	ldr	x3, [sp, #48]
  407da0:	ldr	x4, [sp, #40]
  407da4:	ldr	x5, [sp, #32]
  407da8:	ldr	x6, [sp, #24]
  407dac:	bl	402a38 <printf@plt>
  407db0:	ldur	x8, [x29, #-16]
  407db4:	ldr	x8, [x8, #8]
  407db8:	cbz	x8, 407dd0 <__fxstat64@plt+0x4d58>
  407dbc:	ldur	x8, [x29, #-16]
  407dc0:	ldr	x1, [x8, #8]
  407dc4:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407dc8:	add	x0, x0, #0x21e
  407dcc:	bl	402a38 <printf@plt>
  407dd0:	ldur	x8, [x29, #-16]
  407dd4:	ldr	x8, [x8, #16]
  407dd8:	cbz	x8, 407e4c <__fxstat64@plt+0x4dd4>
  407ddc:	mov	x8, xzr
  407de0:	stur	x8, [x29, #-32]
  407de4:	ldur	x8, [x29, #-16]
  407de8:	ldr	w9, [x8]
  407dec:	cbnz	w9, 407e08 <__fxstat64@plt+0x4d90>
  407df0:	ldur	x8, [x29, #-16]
  407df4:	ldr	x0, [x8, #16]
  407df8:	mov	x8, xzr
  407dfc:	mov	x1, x8
  407e00:	sub	x2, x29, #0x20
  407e04:	bl	402d68 <terminal_urlify_path@plt>
  407e08:	ldur	x8, [x29, #-32]
  407e0c:	str	x8, [sp, #16]
  407e10:	cbz	x8, 407e20 <__fxstat64@plt+0x4da8>
  407e14:	ldr	x8, [sp, #16]
  407e18:	str	x8, [sp, #8]
  407e1c:	b	407e2c <__fxstat64@plt+0x4db4>
  407e20:	ldur	x8, [x29, #-16]
  407e24:	ldr	x8, [x8, #16]
  407e28:	str	x8, [sp, #8]
  407e2c:	ldr	x8, [sp, #8]
  407e30:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407e34:	add	x0, x0, #0x231
  407e38:	mov	x1, x8
  407e3c:	bl	402a38 <printf@plt>
  407e40:	sub	x8, x29, #0x20
  407e44:	mov	x0, x8
  407e48:	bl	403464 <__fxstat64@plt+0x3ec>
  407e4c:	ldur	x8, [x29, #-16]
  407e50:	ldr	x8, [x8, #48]
  407e54:	cbz	x8, 407e6c <__fxstat64@plt+0x4df4>
  407e58:	ldur	x8, [x29, #-16]
  407e5c:	ldr	x1, [x8, #48]
  407e60:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407e64:	add	x0, x0, #0x244
  407e68:	bl	402a38 <printf@plt>
  407e6c:	ldur	x8, [x29, #-16]
  407e70:	ldr	x8, [x8, #56]
  407e74:	cbz	x8, 407e8c <__fxstat64@plt+0x4e14>
  407e78:	ldur	x8, [x29, #-16]
  407e7c:	ldr	x1, [x8, #56]
  407e80:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407e84:	add	x0, x0, #0x257
  407e88:	bl	402a38 <printf@plt>
  407e8c:	ldur	x8, [x29, #-16]
  407e90:	ldr	x8, [x8, #64]
  407e94:	cbz	x8, 407eac <__fxstat64@plt+0x4e34>
  407e98:	ldur	x8, [x29, #-16]
  407e9c:	ldr	x1, [x8, #64]
  407ea0:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407ea4:	add	x0, x0, #0x26a
  407ea8:	bl	402a38 <printf@plt>
  407eac:	ldur	x8, [x29, #-16]
  407eb0:	ldr	x8, [x8, #80]
  407eb4:	cbz	x8, 407ed8 <__fxstat64@plt+0x4e60>
  407eb8:	ldur	x8, [x29, #-16]
  407ebc:	ldr	x1, [x8, #24]
  407ec0:	ldur	x8, [x29, #-16]
  407ec4:	ldr	x2, [x8, #80]
  407ec8:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  407ecc:	add	x0, x0, #0x27d
  407ed0:	sub	x3, x29, #0x18
  407ed4:	bl	408130 <__fxstat64@plt+0x50b8>
  407ed8:	ldur	x8, [x29, #-16]
  407edc:	ldr	x8, [x8, #96]
  407ee0:	stur	x8, [x29, #-40]
  407ee4:	ldur	x8, [x29, #-40]
  407ee8:	mov	w9, #0x0                   	// #0
  407eec:	str	w9, [sp, #4]
  407ef0:	cbz	x8, 407f08 <__fxstat64@plt+0x4e90>
  407ef4:	ldur	x8, [x29, #-40]
  407ef8:	ldr	x8, [x8]
  407efc:	cmp	x8, #0x0
  407f00:	cset	w9, ne  // ne = any
  407f04:	str	w9, [sp, #4]
  407f08:	ldr	w8, [sp, #4]
  407f0c:	tbnz	w8, #0, 407f14 <__fxstat64@plt+0x4e9c>
  407f10:	b	407f5c <__fxstat64@plt+0x4ee4>
  407f14:	ldur	x8, [x29, #-40]
  407f18:	ldur	x9, [x29, #-16]
  407f1c:	ldr	x9, [x9, #96]
  407f20:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  407f24:	add	x10, x10, #0x283
  407f28:	mov	x11, xzr
  407f2c:	cmp	x8, x9
  407f30:	csel	x0, x10, x11, eq  // eq = none
  407f34:	ldur	x8, [x29, #-16]
  407f38:	ldr	x1, [x8, #24]
  407f3c:	ldur	x8, [x29, #-40]
  407f40:	ldr	x2, [x8]
  407f44:	sub	x3, x29, #0x18
  407f48:	bl	408130 <__fxstat64@plt+0x50b8>
  407f4c:	ldur	x8, [x29, #-40]
  407f50:	add	x8, x8, #0x8
  407f54:	stur	x8, [x29, #-40]
  407f58:	b	407ee4 <__fxstat64@plt+0x4e6c>
  407f5c:	ldur	x8, [x29, #-16]
  407f60:	ldr	x0, [x8, #72]
  407f64:	bl	408258 <__fxstat64@plt+0x51e0>
  407f68:	tbnz	w0, #0, 408080 <__fxstat64@plt+0x5008>
  407f6c:	mov	x8, xzr
  407f70:	stur	x8, [x29, #-48]
  407f74:	stur	x8, [x29, #-56]
  407f78:	stur	x8, [x29, #-64]
  407f7c:	ldur	x8, [x29, #-16]
  407f80:	ldr	x0, [x8, #72]
  407f84:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  407f88:	add	x1, x1, #0x28a
  407f8c:	bl	4082cc <__fxstat64@plt+0x5254>
  407f90:	stur	x0, [x29, #-48]
  407f94:	ldur	x8, [x29, #-48]
  407f98:	cbnz	x8, 407fc4 <__fxstat64@plt+0x4f4c>
  407f9c:	mov	w8, wzr
  407fa0:	mov	w0, w8
  407fa4:	ldr	x1, [sp, #80]
  407fa8:	mov	w2, #0x182                 	// #386
  407fac:	ldr	x3, [sp, #72]
  407fb0:	bl	4029c8 <log_oom_internal@plt>
  407fb4:	stur	w0, [x29, #-4]
  407fb8:	mov	w8, #0x1                   	// #1
  407fbc:	stur	w8, [x29, #-68]
  407fc0:	b	408058 <__fxstat64@plt+0x4fe0>
  407fc4:	ldur	x0, [x29, #-48]
  407fc8:	bl	402d78 <strv_split_newlines@plt>
  407fcc:	stur	x0, [x29, #-64]
  407fd0:	ldur	x8, [x29, #-64]
  407fd4:	cbnz	x8, 408000 <__fxstat64@plt+0x4f88>
  407fd8:	mov	w8, wzr
  407fdc:	mov	w0, w8
  407fe0:	ldr	x1, [sp, #80]
  407fe4:	mov	w2, #0x186                 	// #390
  407fe8:	ldr	x3, [sp, #72]
  407fec:	bl	4029c8 <log_oom_internal@plt>
  407ff0:	stur	w0, [x29, #-4]
  407ff4:	mov	w8, #0x1                   	// #1
  407ff8:	stur	w8, [x29, #-68]
  407ffc:	b	408058 <__fxstat64@plt+0x4fe0>
  408000:	ldur	x0, [x29, #-64]
  408004:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  408008:	add	x1, x1, #0x29c
  40800c:	bl	4082cc <__fxstat64@plt+0x5254>
  408010:	stur	x0, [x29, #-56]
  408014:	ldur	x8, [x29, #-56]
  408018:	cbnz	x8, 408044 <__fxstat64@plt+0x4fcc>
  40801c:	mov	w8, wzr
  408020:	mov	w0, w8
  408024:	ldr	x1, [sp, #80]
  408028:	mov	w2, #0x18a                 	// #394
  40802c:	ldr	x3, [sp, #72]
  408030:	bl	4029c8 <log_oom_internal@plt>
  408034:	stur	w0, [x29, #-4]
  408038:	mov	w8, #0x1                   	// #1
  40803c:	stur	w8, [x29, #-68]
  408040:	b	408058 <__fxstat64@plt+0x4fe0>
  408044:	ldur	x1, [x29, #-56]
  408048:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  40804c:	add	x0, x0, #0x2ac
  408050:	bl	402a38 <printf@plt>
  408054:	stur	wzr, [x29, #-68]
  408058:	sub	x0, x29, #0x40
  40805c:	bl	408298 <__fxstat64@plt+0x5220>
  408060:	sub	x0, x29, #0x38
  408064:	bl	403464 <__fxstat64@plt+0x3ec>
  408068:	sub	x0, x29, #0x30
  40806c:	bl	403464 <__fxstat64@plt+0x3ec>
  408070:	ldur	w8, [x29, #-68]
  408074:	cbz	w8, 408080 <__fxstat64@plt+0x5008>
  408078:	b	40807c <__fxstat64@plt+0x5004>
  40807c:	b	4080bc <__fxstat64@plt+0x5044>
  408080:	ldur	x8, [x29, #-16]
  408084:	ldr	x8, [x8, #104]
  408088:	cbz	x8, 4080ac <__fxstat64@plt+0x5034>
  40808c:	ldur	x8, [x29, #-16]
  408090:	ldr	x1, [x8, #24]
  408094:	ldur	x8, [x29, #-16]
  408098:	ldr	x2, [x8, #104]
  40809c:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  4080a0:	add	x0, x0, #0x2bf
  4080a4:	sub	x3, x29, #0x18
  4080a8:	bl	408130 <__fxstat64@plt+0x50b8>
  4080ac:	ldur	w8, [x29, #-24]
  4080b0:	mov	w9, wzr
  4080b4:	subs	w8, w9, w8
  4080b8:	stur	w8, [x29, #-4]
  4080bc:	ldur	w0, [x29, #-4]
  4080c0:	ldp	x29, x30, [sp, #160]
  4080c4:	add	sp, sp, #0xb0
  4080c8:	ret
  4080cc:	sub	sp, sp, #0x30
  4080d0:	str	x0, [sp, #40]
  4080d4:	ldr	x8, [sp, #40]
  4080d8:	ldr	x8, [x8, #40]
  4080dc:	str	x8, [sp, #32]
  4080e0:	cbz	x8, 4080f0 <__fxstat64@plt+0x5078>
  4080e4:	ldr	x8, [sp, #32]
  4080e8:	str	x8, [sp, #24]
  4080ec:	b	408120 <__fxstat64@plt+0x50a8>
  4080f0:	ldr	x8, [sp, #40]
  4080f4:	ldr	x8, [x8, #32]
  4080f8:	str	x8, [sp, #16]
  4080fc:	cbz	x8, 40810c <__fxstat64@plt+0x5094>
  408100:	ldr	x8, [sp, #16]
  408104:	str	x8, [sp, #8]
  408108:	b	408118 <__fxstat64@plt+0x50a0>
  40810c:	ldr	x8, [sp, #40]
  408110:	ldr	x8, [x8, #8]
  408114:	str	x8, [sp, #8]
  408118:	ldr	x8, [sp, #8]
  40811c:	str	x8, [sp, #24]
  408120:	ldr	x8, [sp, #24]
  408124:	mov	x0, x8
  408128:	add	sp, sp, #0x30
  40812c:	ret
  408130:	sub	sp, sp, #0x80
  408134:	stp	x29, x30, [sp, #112]
  408138:	add	x29, sp, #0x70
  40813c:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  408140:	add	x8, x8, #0x2d2
  408144:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  408148:	add	x9, x9, #0x28a
  40814c:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  408150:	add	x10, x10, #0x2ca
  408154:	stur	x0, [x29, #-8]
  408158:	stur	x1, [x29, #-16]
  40815c:	stur	x2, [x29, #-24]
  408160:	stur	x3, [x29, #-32]
  408164:	ldur	x0, [x29, #-16]
  408168:	ldur	x1, [x29, #-24]
  40816c:	stur	x8, [x29, #-48]
  408170:	str	x9, [sp, #56]
  408174:	str	x10, [sp, #48]
  408178:	bl	408300 <__fxstat64@plt+0x5288>
  40817c:	stur	w0, [x29, #-36]
  408180:	ldur	x0, [x29, #-8]
  408184:	bl	4083d0 <__fxstat64@plt+0x5358>
  408188:	ldur	x8, [x29, #-8]
  40818c:	cmp	x8, #0x0
  408190:	ldur	x8, [x29, #-48]
  408194:	ldr	x9, [sp, #56]
  408198:	csel	x2, x8, x9, ne  // ne = any
  40819c:	ldr	x10, [sp, #48]
  4081a0:	str	x0, [sp, #40]
  4081a4:	mov	x0, x10
  4081a8:	ldr	x1, [sp, #40]
  4081ac:	bl	402a38 <printf@plt>
  4081b0:	ldur	w11, [x29, #-36]
  4081b4:	cmp	w11, #0x0
  4081b8:	cset	w11, ge  // ge = tcont
  4081bc:	tbnz	w11, #0, 408214 <__fxstat64@plt+0x519c>
  4081c0:	ldur	w8, [x29, #-36]
  4081c4:	mov	w9, wzr
  4081c8:	subs	w8, w9, w8
  4081cc:	str	w8, [sp, #36]
  4081d0:	bl	402b98 <__errno_location@plt>
  4081d4:	ldr	w8, [sp, #36]
  4081d8:	str	w8, [x0]
  4081dc:	bl	4063f8 <__fxstat64@plt+0x3380>
  4081e0:	ldur	x2, [x29, #-24]
  4081e4:	str	x0, [sp, #24]
  4081e8:	str	x2, [sp, #16]
  4081ec:	bl	403a64 <__fxstat64@plt+0x9ec>
  4081f0:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  4081f4:	add	x10, x10, #0x2d4
  4081f8:	str	x0, [sp, #8]
  4081fc:	mov	x0, x10
  408200:	ldr	x1, [sp, #24]
  408204:	ldr	x2, [sp, #16]
  408208:	ldr	x3, [sp, #8]
  40820c:	bl	402a38 <printf@plt>
  408210:	b	408224 <__fxstat64@plt+0x51ac>
  408214:	ldur	x1, [x29, #-24]
  408218:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  40821c:	add	x0, x0, #0x2e1
  408220:	bl	402a38 <printf@plt>
  408224:	ldur	x8, [x29, #-32]
  408228:	ldr	w9, [x8]
  40822c:	cbnz	w9, 40824c <__fxstat64@plt+0x51d4>
  408230:	ldur	w8, [x29, #-36]
  408234:	cmp	w8, #0x0
  408238:	cset	w8, ge  // ge = tcont
  40823c:	tbnz	w8, #0, 40824c <__fxstat64@plt+0x51d4>
  408240:	ldur	w8, [x29, #-36]
  408244:	ldur	x9, [x29, #-32]
  408248:	str	w8, [x9]
  40824c:	ldp	x29, x30, [sp, #112]
  408250:	add	sp, sp, #0x80
  408254:	ret
  408258:	sub	sp, sp, #0x10
  40825c:	str	x0, [sp, #8]
  408260:	ldr	x8, [sp, #8]
  408264:	mov	w9, #0x1                   	// #1
  408268:	str	w9, [sp, #4]
  40826c:	cbz	x8, 408288 <__fxstat64@plt+0x5210>
  408270:	ldr	x8, [sp, #8]
  408274:	ldr	x8, [x8]
  408278:	cmp	x8, #0x0
  40827c:	cset	w9, ne  // ne = any
  408280:	eor	w9, w9, #0x1
  408284:	str	w9, [sp, #4]
  408288:	ldr	w8, [sp, #4]
  40828c:	and	w0, w8, #0x1
  408290:	add	sp, sp, #0x10
  408294:	ret
  408298:	sub	sp, sp, #0x20
  40829c:	stp	x29, x30, [sp, #16]
  4082a0:	add	x29, sp, #0x10
  4082a4:	str	x0, [sp, #8]
  4082a8:	ldr	x8, [sp, #8]
  4082ac:	ldr	x8, [x8]
  4082b0:	cbz	x8, 4082c0 <__fxstat64@plt+0x5248>
  4082b4:	ldr	x8, [sp, #8]
  4082b8:	ldr	x0, [x8]
  4082bc:	bl	402d88 <strv_free@plt>
  4082c0:	ldp	x29, x30, [sp, #16]
  4082c4:	add	sp, sp, #0x20
  4082c8:	ret
  4082cc:	sub	sp, sp, #0x20
  4082d0:	stp	x29, x30, [sp, #16]
  4082d4:	add	x29, sp, #0x10
  4082d8:	mov	x8, xzr
  4082dc:	str	x0, [sp, #8]
  4082e0:	str	x1, [sp]
  4082e4:	ldr	x0, [sp, #8]
  4082e8:	ldr	x1, [sp]
  4082ec:	mov	x2, x8
  4082f0:	bl	402d98 <strv_join_prefix@plt>
  4082f4:	ldp	x29, x30, [sp, #16]
  4082f8:	add	sp, sp, #0x20
  4082fc:	ret
  408300:	sub	sp, sp, #0x40
  408304:	stp	x29, x30, [sp, #48]
  408308:	add	x29, sp, #0x30
  40830c:	mov	x8, #0xffffffffffffffff    	// #-1
  408310:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  408314:	add	x9, x9, #0xf88
  408318:	add	x9, x9, #0x3
  40831c:	stur	x0, [x29, #-16]
  408320:	str	x1, [sp, #24]
  408324:	ldur	x0, [x29, #-16]
  408328:	ldr	x1, [sp, #24]
  40832c:	mov	x2, x8
  408330:	str	x9, [sp]
  408334:	bl	402b08 <path_join_internal@plt>
  408338:	str	x0, [sp, #16]
  40833c:	ldr	x8, [sp, #16]
  408340:	cbnz	x8, 408370 <__fxstat64@plt+0x52f8>
  408344:	mov	w8, wzr
  408348:	mov	w0, w8
  40834c:	ldr	x1, [sp]
  408350:	mov	w2, #0x13f                 	// #319
  408354:	adrp	x3, 40f000 <__fxstat64@plt+0xbf88>
  408358:	add	x3, x3, #0x2e5
  40835c:	bl	4029c8 <log_oom_internal@plt>
  408360:	stur	w0, [x29, #-4]
  408364:	mov	w8, #0x1                   	// #1
  408368:	str	w8, [sp, #12]
  40836c:	b	4083b8 <__fxstat64@plt+0x5340>
  408370:	ldr	x0, [sp, #16]
  408374:	mov	w8, wzr
  408378:	mov	w1, w8
  40837c:	bl	402af8 <access@plt>
  408380:	cmp	w0, #0x0
  408384:	cset	w8, ge  // ge = tcont
  408388:	tbnz	w8, #0, 4083ac <__fxstat64@plt+0x5334>
  40838c:	bl	402b98 <__errno_location@plt>
  408390:	ldr	w8, [x0]
  408394:	mov	w9, wzr
  408398:	subs	w8, w9, w8
  40839c:	stur	w8, [x29, #-4]
  4083a0:	mov	w8, #0x1                   	// #1
  4083a4:	str	w8, [sp, #12]
  4083a8:	b	4083b8 <__fxstat64@plt+0x5340>
  4083ac:	stur	wzr, [x29, #-4]
  4083b0:	mov	w8, #0x1                   	// #1
  4083b4:	str	w8, [sp, #12]
  4083b8:	add	x0, sp, #0x10
  4083bc:	bl	403464 <__fxstat64@plt+0x3ec>
  4083c0:	ldur	w0, [x29, #-4]
  4083c4:	ldp	x29, x30, [sp, #48]
  4083c8:	add	sp, sp, #0x40
  4083cc:	ret
  4083d0:	sub	sp, sp, #0x20
  4083d4:	str	x0, [sp, #24]
  4083d8:	ldr	x8, [sp, #24]
  4083dc:	str	x8, [sp, #16]
  4083e0:	cbz	x8, 4083f0 <__fxstat64@plt+0x5378>
  4083e4:	ldr	x8, [sp, #16]
  4083e8:	str	x8, [sp, #8]
  4083ec:	b	4083fc <__fxstat64@plt+0x5384>
  4083f0:	adrp	x8, 40e000 <__fxstat64@plt+0xaf88>
  4083f4:	add	x8, x8, #0x5bc
  4083f8:	str	x8, [sp, #8]
  4083fc:	ldr	x8, [sp, #8]
  408400:	mov	x0, x8
  408404:	add	sp, sp, #0x20
  408408:	ret
  40840c:	sub	sp, sp, #0x20
  408410:	stp	x29, x30, [sp, #16]
  408414:	add	x29, sp, #0x10
  408418:	str	x0, [sp, #8]
  40841c:	ldr	x8, [sp, #8]
  408420:	ldr	w9, [x8]
  408424:	and	w0, w9, #0x1ff
  408428:	bl	402b38 <umask@plt>
  40842c:	ldp	x29, x30, [sp, #16]
  408430:	add	sp, sp, #0x20
  408434:	ret
  408438:	sub	sp, sp, #0x40
  40843c:	stp	x29, x30, [sp, #48]
  408440:	add	x29, sp, #0x30
  408444:	stur	x0, [x29, #-16]
  408448:	str	x1, [sp, #24]
  40844c:	ldr	x8, [sp, #24]
  408450:	str	x8, [sp, #16]
  408454:	ldr	x8, [sp, #16]
  408458:	mov	w9, #0x0                   	// #0
  40845c:	str	w9, [sp, #8]
  408460:	cbz	x8, 408478 <__fxstat64@plt+0x5400>
  408464:	ldr	x8, [sp, #16]
  408468:	ldr	x8, [x8]
  40846c:	cmp	x8, #0x0
  408470:	cset	w9, ne  // ne = any
  408474:	str	w9, [sp, #8]
  408478:	ldr	w8, [sp, #8]
  40847c:	tbnz	w8, #0, 408484 <__fxstat64@plt+0x540c>
  408480:	b	4084c4 <__fxstat64@plt+0x544c>
  408484:	ldur	x0, [x29, #-16]
  408488:	ldr	x8, [sp, #16]
  40848c:	ldr	x1, [x8]
  408490:	bl	40a520 <__fxstat64@plt+0x74a8>
  408494:	str	w0, [sp, #12]
  408498:	ldr	w9, [sp, #12]
  40849c:	cmp	w9, #0x0
  4084a0:	cset	w9, ge  // ge = tcont
  4084a4:	tbnz	w9, #0, 4084b4 <__fxstat64@plt+0x543c>
  4084a8:	ldr	w8, [sp, #12]
  4084ac:	stur	w8, [x29, #-4]
  4084b0:	b	4084c8 <__fxstat64@plt+0x5450>
  4084b4:	ldr	x8, [sp, #16]
  4084b8:	add	x8, x8, #0x8
  4084bc:	str	x8, [sp, #16]
  4084c0:	b	408454 <__fxstat64@plt+0x53dc>
  4084c4:	stur	wzr, [x29, #-4]
  4084c8:	ldur	w0, [x29, #-4]
  4084cc:	ldp	x29, x30, [sp, #48]
  4084d0:	add	sp, sp, #0x40
  4084d4:	ret
  4084d8:	sub	sp, sp, #0x80
  4084dc:	stp	x29, x30, [sp, #112]
  4084e0:	add	x29, sp, #0x70
  4084e4:	mov	x8, xzr
  4084e8:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  4084ec:	add	x9, x9, #0x39d
  4084f0:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  4084f4:	add	x10, x10, #0xf88
  4084f8:	add	x10, x10, #0x3
  4084fc:	mov	w11, #0x1                   	// #1
  408500:	stur	x0, [x29, #-16]
  408504:	and	w11, w1, w11
  408508:	sturb	w11, [x29, #-17]
  40850c:	stur	x8, [x29, #-40]
  408510:	stur	wzr, [x29, #-44]
  408514:	mov	x0, x9
  408518:	str	x10, [sp, #16]
  40851c:	bl	402c78 <opendir@plt>
  408520:	stur	x0, [x29, #-40]
  408524:	ldur	x8, [x29, #-40]
  408528:	cbnz	x8, 4085c0 <__fxstat64@plt+0x5548>
  40852c:	mov	w8, #0x3                   	// #3
  408530:	stur	w8, [x29, #-48]
  408534:	bl	402b98 <__errno_location@plt>
  408538:	ldr	w8, [x0]
  40853c:	stur	w8, [x29, #-52]
  408540:	str	wzr, [sp, #56]
  408544:	ldr	w0, [sp, #56]
  408548:	bl	4029d8 <log_get_max_level_realm@plt>
  40854c:	ldur	w8, [x29, #-48]
  408550:	and	w8, w8, #0x7
  408554:	cmp	w0, w8
  408558:	b.lt	408590 <__fxstat64@plt+0x5518>  // b.tstop
  40855c:	ldr	w8, [sp, #56]
  408560:	ldur	w9, [x29, #-48]
  408564:	orr	w0, w9, w8, lsl #10
  408568:	ldur	w1, [x29, #-52]
  40856c:	ldr	x2, [sp, #16]
  408570:	mov	w3, #0x286                 	// #646
  408574:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  408578:	add	x4, x4, #0x3b7
  40857c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408580:	add	x5, x5, #0x3c8
  408584:	bl	4029e8 <log_internal_realm@plt>
  408588:	str	w0, [sp, #12]
  40858c:	b	4085a4 <__fxstat64@plt+0x552c>
  408590:	ldur	w0, [x29, #-52]
  408594:	bl	4029f8 <abs@plt>
  408598:	mov	w8, wzr
  40859c:	subs	w8, w8, w0, uxtb
  4085a0:	str	w8, [sp, #12]
  4085a4:	ldr	w8, [sp, #12]
  4085a8:	str	w8, [sp, #52]
  4085ac:	ldr	w8, [sp, #52]
  4085b0:	stur	w8, [x29, #-4]
  4085b4:	mov	w8, #0x1                   	// #1
  4085b8:	str	w8, [sp, #48]
  4085bc:	b	408720 <__fxstat64@plt+0x56a8>
  4085c0:	bl	402b98 <__errno_location@plt>
  4085c4:	str	wzr, [x0]
  4085c8:	ldur	x0, [x29, #-40]
  4085cc:	bl	402c88 <readdir64@plt>
  4085d0:	stur	x0, [x29, #-32]
  4085d4:	ldur	x8, [x29, #-32]
  4085d8:	cbnz	x8, 408688 <__fxstat64@plt+0x5610>
  4085dc:	bl	402b98 <__errno_location@plt>
  4085e0:	ldr	w8, [x0]
  4085e4:	cmp	w8, #0x0
  4085e8:	cset	w8, le
  4085ec:	tbnz	w8, #0, 408684 <__fxstat64@plt+0x560c>
  4085f0:	mov	w8, #0x3                   	// #3
  4085f4:	str	w8, [sp, #44]
  4085f8:	bl	402b98 <__errno_location@plt>
  4085fc:	ldr	w8, [x0]
  408600:	str	w8, [sp, #40]
  408604:	str	wzr, [sp, #36]
  408608:	ldr	w0, [sp, #36]
  40860c:	bl	4029d8 <log_get_max_level_realm@plt>
  408610:	ldr	w8, [sp, #44]
  408614:	and	w8, w8, #0x7
  408618:	cmp	w0, w8
  40861c:	b.lt	408654 <__fxstat64@plt+0x55dc>  // b.tstop
  408620:	ldr	w8, [sp, #36]
  408624:	ldr	w9, [sp, #44]
  408628:	orr	w0, w9, w8, lsl #10
  40862c:	ldr	w1, [sp, #40]
  408630:	ldr	x2, [sp, #16]
  408634:	mov	w3, #0x288                 	// #648
  408638:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40863c:	add	x4, x4, #0x3b7
  408640:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408644:	add	x5, x5, #0x3f7
  408648:	bl	4029e8 <log_internal_realm@plt>
  40864c:	str	w0, [sp, #8]
  408650:	b	408668 <__fxstat64@plt+0x55f0>
  408654:	ldr	w0, [sp, #40]
  408658:	bl	4029f8 <abs@plt>
  40865c:	mov	w8, wzr
  408660:	subs	w8, w8, w0, uxtb
  408664:	str	w8, [sp, #8]
  408668:	ldr	w8, [sp, #8]
  40866c:	str	w8, [sp, #32]
  408670:	ldr	w8, [sp, #32]
  408674:	stur	w8, [x29, #-4]
  408678:	mov	w8, #0x1                   	// #1
  40867c:	str	w8, [sp, #48]
  408680:	b	408720 <__fxstat64@plt+0x56a8>
  408684:	b	408710 <__fxstat64@plt+0x5698>
  408688:	ldur	x8, [x29, #-32]
  40868c:	add	x0, x8, #0x13
  408690:	bl	402c98 <hidden_or_backup_file@plt>
  408694:	tbnz	w0, #0, 40869c <__fxstat64@plt+0x5624>
  408698:	b	4086a0 <__fxstat64@plt+0x5628>
  40869c:	b	4086f8 <__fxstat64@plt+0x5680>
  4086a0:	ldur	x8, [x29, #-32]
  4086a4:	add	x0, x8, #0x13
  4086a8:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4086ac:	add	x1, x1, #0xde2
  4086b0:	bl	402ca8 <endswith_no_case@plt>
  4086b4:	cbnz	x0, 4086bc <__fxstat64@plt+0x5644>
  4086b8:	b	4086f8 <__fxstat64@plt+0x5680>
  4086bc:	ldur	x0, [x29, #-16]
  4086c0:	ldur	x8, [x29, #-32]
  4086c4:	add	x1, x8, #0x13
  4086c8:	ldurb	w9, [x29, #-17]
  4086cc:	and	w2, w9, #0x1
  4086d0:	bl	40a6d0 <__fxstat64@plt+0x7658>
  4086d4:	str	w0, [sp, #28]
  4086d8:	ldr	w9, [sp, #28]
  4086dc:	cmp	w9, #0x0
  4086e0:	cset	w9, ge  // ge = tcont
  4086e4:	tbnz	w9, #0, 4086f8 <__fxstat64@plt+0x5680>
  4086e8:	ldur	w8, [x29, #-44]
  4086ec:	cbnz	w8, 4086f8 <__fxstat64@plt+0x5680>
  4086f0:	ldr	w8, [sp, #28]
  4086f4:	stur	w8, [x29, #-44]
  4086f8:	bl	402b98 <__errno_location@plt>
  4086fc:	str	wzr, [x0]
  408700:	ldur	x0, [x29, #-40]
  408704:	bl	402c88 <readdir64@plt>
  408708:	stur	x0, [x29, #-32]
  40870c:	b	4085d4 <__fxstat64@plt+0x555c>
  408710:	ldur	w8, [x29, #-44]
  408714:	stur	w8, [x29, #-4]
  408718:	mov	w8, #0x1                   	// #1
  40871c:	str	w8, [sp, #48]
  408720:	sub	x0, x29, #0x28
  408724:	bl	407474 <__fxstat64@plt+0x43fc>
  408728:	ldur	w0, [x29, #-4]
  40872c:	ldp	x29, x30, [sp, #112]
  408730:	add	sp, sp, #0x80
  408734:	ret
  408738:	stp	x29, x30, [sp, #-32]!
  40873c:	str	x28, [sp, #16]
  408740:	mov	x29, sp
  408744:	sub	sp, sp, #0x130
  408748:	sub	x8, x29, #0x60
  40874c:	mov	x9, xzr
  408750:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  408754:	add	x10, x10, #0x6f9
  408758:	adrp	x11, 40d000 <__fxstat64@plt+0x9f88>
  40875c:	add	x11, x11, #0xf88
  408760:	add	x11, x11, #0x3
  408764:	adrp	x12, 40f000 <__fxstat64@plt+0xbf88>
  408768:	add	x12, x12, #0x741
  40876c:	str	x1, [x8, #72]
  408770:	str	x2, [x8, #80]
  408774:	str	x0, [x8, #64]
  408778:	str	x9, [x8, #16]
  40877c:	str	x9, [x8, #8]
  408780:	stur	x10, [x29, #-112]
  408784:	ldr	x9, [x8, #64]
  408788:	stur	x9, [x29, #-120]
  40878c:	stur	x8, [x29, #-240]
  408790:	stur	x11, [x29, #-248]
  408794:	stur	x12, [x29, #-256]
  408798:	ldur	x8, [x29, #-112]
  40879c:	ldrb	w9, [x8]
  4087a0:	mov	w10, #0x0                   	// #0
  4087a4:	cmp	w9, #0x2f
  4087a8:	sub	x8, x29, #0x4
  4087ac:	stur	w10, [x8, #-256]
  4087b0:	b.ne	4087cc <__fxstat64@plt+0x5754>  // b.any
  4087b4:	ldur	x8, [x29, #-112]
  4087b8:	ldrb	w9, [x8, #1]
  4087bc:	cmp	w9, #0x2f
  4087c0:	cset	w9, eq  // eq = none
  4087c4:	sub	x8, x29, #0x4
  4087c8:	stur	w9, [x8, #-256]
  4087cc:	sub	x8, x29, #0x4
  4087d0:	ldur	w8, [x8, #-256]
  4087d4:	tbnz	w8, #0, 4087dc <__fxstat64@plt+0x5764>
  4087d8:	b	4087ec <__fxstat64@plt+0x5774>
  4087dc:	ldur	x8, [x29, #-112]
  4087e0:	add	x8, x8, #0x1
  4087e4:	stur	x8, [x29, #-112]
  4087e8:	b	408798 <__fxstat64@plt+0x5720>
  4087ec:	ldur	x0, [x29, #-120]
  4087f0:	bl	4074a8 <__fxstat64@plt+0x4430>
  4087f4:	tbnz	w0, #0, 4087fc <__fxstat64@plt+0x5784>
  4087f8:	b	408808 <__fxstat64@plt+0x5790>
  4087fc:	ldur	x8, [x29, #-112]
  408800:	stur	x8, [x29, #-128]
  408804:	b	4089bc <__fxstat64@plt+0x5944>
  408808:	ldur	x0, [x29, #-120]
  40880c:	bl	402bb8 <strlen@plt>
  408810:	add	x8, x0, #0x1
  408814:	ldur	x0, [x29, #-112]
  408818:	sub	x9, x29, #0x10
  40881c:	stur	x8, [x9, #-256]
  408820:	bl	402bb8 <strlen@plt>
  408824:	sub	x8, x29, #0x10
  408828:	ldur	x8, [x8, #-256]
  40882c:	add	x9, x8, x0
  408830:	add	x9, x9, #0x1
  408834:	stur	x9, [x29, #-152]
  408838:	ldur	x9, [x29, #-152]
  40883c:	stur	x9, [x29, #-160]
  408840:	ldur	x1, [x29, #-160]
  408844:	mov	x0, #0x1                   	// #1
  408848:	bl	4074e8 <__fxstat64@plt+0x4470>
  40884c:	mov	w8, #0x1                   	// #1
  408850:	eor	w9, w0, #0x1
  408854:	eor	w9, w9, w8
  408858:	eor	w9, w9, w8
  40885c:	eor	w8, w9, w8
  408860:	and	w8, w8, #0x1
  408864:	mov	w1, w8
  408868:	sxtw	x10, w1
  40886c:	cbz	x10, 408894 <__fxstat64@plt+0x581c>
  408870:	mov	w8, wzr
  408874:	mov	w0, w8
  408878:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40887c:	add	x1, x1, #0xd6d
  408880:	ldur	x2, [x29, #-248]
  408884:	mov	w3, #0x3dc                 	// #988
  408888:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40888c:	add	x4, x4, #0x70d
  408890:	bl	402988 <log_assert_failed_realm@plt>
  408894:	ldur	x8, [x29, #-160]
  408898:	mov	x9, #0x1                   	// #1
  40889c:	mul	x8, x9, x8
  4088a0:	cmp	x8, #0x400, lsl #12
  4088a4:	cset	w10, ls  // ls = plast
  4088a8:	mov	w11, #0x1                   	// #1
  4088ac:	eor	w10, w10, #0x1
  4088b0:	eor	w10, w10, w11
  4088b4:	eor	w10, w10, w11
  4088b8:	and	w10, w10, #0x1
  4088bc:	mov	w0, w10
  4088c0:	sxtw	x8, w0
  4088c4:	cbz	x8, 4088ec <__fxstat64@plt+0x5874>
  4088c8:	mov	w8, wzr
  4088cc:	mov	w0, w8
  4088d0:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  4088d4:	add	x1, x1, #0xd98
  4088d8:	ldur	x2, [x29, #-248]
  4088dc:	mov	w3, #0x3dc                 	// #988
  4088e0:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  4088e4:	add	x4, x4, #0x70d
  4088e8:	bl	402988 <log_assert_failed_realm@plt>
  4088ec:	ldur	x8, [x29, #-160]
  4088f0:	mov	x9, #0x1                   	// #1
  4088f4:	mul	x8, x9, x8
  4088f8:	mul	x8, x8, x9
  4088fc:	add	x8, x8, #0xf
  408900:	and	x8, x8, #0xfffffffffffffff0
  408904:	mov	x9, sp
  408908:	subs	x8, x9, x8
  40890c:	mov	sp, x8
  408910:	stur	x8, [x29, #-168]
  408914:	ldur	x8, [x29, #-168]
  408918:	stur	x8, [x29, #-144]
  40891c:	ldur	x0, [x29, #-144]
  408920:	ldur	x1, [x29, #-120]
  408924:	bl	402c58 <stpcpy@plt>
  408928:	stur	x0, [x29, #-136]
  40892c:	ldur	x8, [x29, #-136]
  408930:	ldur	x9, [x29, #-144]
  408934:	mov	w10, #0x0                   	// #0
  408938:	cmp	x8, x9
  40893c:	sub	x8, x29, #0x14
  408940:	stur	w10, [x8, #-256]
  408944:	b.ls	408960 <__fxstat64@plt+0x58e8>  // b.plast
  408948:	ldur	x8, [x29, #-136]
  40894c:	ldurb	w9, [x8, #-1]
  408950:	cmp	w9, #0x2f
  408954:	cset	w9, eq  // eq = none
  408958:	sub	x8, x29, #0x14
  40895c:	stur	w9, [x8, #-256]
  408960:	sub	x8, x29, #0x14
  408964:	ldur	w8, [x8, #-256]
  408968:	tbnz	w8, #0, 408970 <__fxstat64@plt+0x58f8>
  40896c:	b	408984 <__fxstat64@plt+0x590c>
  408970:	ldur	x8, [x29, #-136]
  408974:	mov	x9, #0xffffffffffffffff    	// #-1
  408978:	add	x8, x8, x9
  40897c:	stur	x8, [x29, #-136]
  408980:	b	40892c <__fxstat64@plt+0x58b4>
  408984:	ldur	x8, [x29, #-112]
  408988:	ldrb	w9, [x8]
  40898c:	cmp	w9, #0x2f
  408990:	b.eq	4089a8 <__fxstat64@plt+0x5930>  // b.none
  408994:	ldur	x8, [x29, #-136]
  408998:	add	x9, x8, #0x1
  40899c:	stur	x9, [x29, #-136]
  4089a0:	mov	w10, #0x2f                  	// #47
  4089a4:	strb	w10, [x8]
  4089a8:	ldur	x0, [x29, #-136]
  4089ac:	ldur	x1, [x29, #-112]
  4089b0:	bl	402c68 <strcpy@plt>
  4089b4:	ldur	x8, [x29, #-144]
  4089b8:	stur	x8, [x29, #-128]
  4089bc:	ldur	x8, [x29, #-128]
  4089c0:	stur	x8, [x29, #-176]
  4089c4:	ldur	x8, [x29, #-176]
  4089c8:	ldur	x9, [x29, #-240]
  4089cc:	str	x8, [x9]
  4089d0:	ldr	x0, [x9]
  4089d4:	mov	w10, wzr
  4089d8:	mov	w1, w10
  4089dc:	bl	402af8 <access@plt>
  4089e0:	cmp	w0, #0x0
  4089e4:	cset	w10, lt  // lt = tstop
  4089e8:	tbnz	w10, #0, 4089fc <__fxstat64@plt+0x5984>
  4089ec:	stur	wzr, [x29, #-4]
  4089f0:	mov	w8, #0x1                   	// #1
  4089f4:	stur	w8, [x29, #-180]
  4089f8:	b	408d30 <__fxstat64@plt+0x5cb8>
  4089fc:	ldur	x8, [x29, #-240]
  408a00:	ldr	x0, [x8]
  408a04:	mov	w1, #0x1                   	// #1
  408a08:	movk	w1, #0x8, lsl #16
  408a0c:	sub	x2, x29, #0x50
  408a10:	bl	402da8 <open_tmpfile_linkable@plt>
  408a14:	stur	w0, [x29, #-104]
  408a18:	ldur	w9, [x29, #-104]
  408a1c:	cmp	w9, #0x0
  408a20:	cset	w9, ge  // ge = tcont
  408a24:	tbnz	w9, #0, 408ac8 <__fxstat64@plt+0x5a50>
  408a28:	mov	w8, #0x3                   	// #3
  408a2c:	stur	w8, [x29, #-184]
  408a30:	ldur	w8, [x29, #-104]
  408a34:	stur	w8, [x29, #-188]
  408a38:	stur	wzr, [x29, #-192]
  408a3c:	ldur	w0, [x29, #-192]
  408a40:	bl	4029d8 <log_get_max_level_realm@plt>
  408a44:	ldur	w8, [x29, #-184]
  408a48:	and	w8, w8, #0x7
  408a4c:	cmp	w0, w8
  408a50:	b.lt	408a90 <__fxstat64@plt+0x5a18>  // b.tstop
  408a54:	ldur	w8, [x29, #-192]
  408a58:	ldur	w9, [x29, #-184]
  408a5c:	orr	w0, w9, w8, lsl #10
  408a60:	ldur	w1, [x29, #-188]
  408a64:	ldur	x10, [x29, #-240]
  408a68:	ldr	x6, [x10]
  408a6c:	ldur	x2, [x29, #-248]
  408a70:	mov	w3, #0x3e2                 	// #994
  408a74:	ldur	x4, [x29, #-256]
  408a78:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408a7c:	add	x5, x5, #0x4fc
  408a80:	bl	4029e8 <log_internal_realm@plt>
  408a84:	sub	x8, x29, #0x18
  408a88:	stur	w0, [x8, #-256]
  408a8c:	b	408aa8 <__fxstat64@plt+0x5a30>
  408a90:	ldur	w0, [x29, #-188]
  408a94:	bl	4029f8 <abs@plt>
  408a98:	mov	w8, wzr
  408a9c:	subs	w8, w8, w0, uxtb
  408aa0:	sub	x9, x29, #0x18
  408aa4:	stur	w8, [x9, #-256]
  408aa8:	sub	x8, x29, #0x18
  408aac:	ldur	w8, [x8, #-256]
  408ab0:	stur	w8, [x29, #-196]
  408ab4:	ldur	w8, [x29, #-196]
  408ab8:	stur	w8, [x29, #-4]
  408abc:	mov	w8, #0x1                   	// #1
  408ac0:	stur	w8, [x29, #-180]
  408ac4:	b	408d30 <__fxstat64@plt+0x5cb8>
  408ac8:	ldur	w0, [x29, #-104]
  408acc:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  408ad0:	add	x1, x1, #0x757
  408ad4:	bl	402db8 <fdopen@plt>
  408ad8:	ldur	x8, [x29, #-240]
  408adc:	str	x0, [x8, #8]
  408ae0:	ldr	x9, [x8, #8]
  408ae4:	cbnz	x9, 408b18 <__fxstat64@plt+0x5aa0>
  408ae8:	ldur	w0, [x29, #-104]
  408aec:	bl	402ce8 <safe_close@plt>
  408af0:	mov	w8, wzr
  408af4:	mov	w0, w8
  408af8:	ldur	x1, [x29, #-248]
  408afc:	mov	w2, #0x3e7                 	// #999
  408b00:	ldur	x3, [x29, #-256]
  408b04:	bl	4029c8 <log_oom_internal@plt>
  408b08:	stur	w0, [x29, #-4]
  408b0c:	mov	w8, #0x1                   	// #1
  408b10:	stur	w8, [x29, #-180]
  408b14:	b	408d30 <__fxstat64@plt+0x5cb8>
  408b18:	ldur	x8, [x29, #-240]
  408b1c:	ldr	x0, [x8, #8]
  408b20:	ldr	x9, [x8, #72]
  408b24:	ldr	x1, [x8, #80]
  408b28:	sub	x8, x29, #0x20
  408b2c:	stur	x0, [x8, #-256]
  408b30:	mov	x0, x9
  408b34:	sub	x2, x29, #0x41
  408b38:	bl	402dc8 <sd_id128_to_string@plt>
  408b3c:	sub	x8, x29, #0x20
  408b40:	ldur	x8, [x8, #-256]
  408b44:	sub	x9, x29, #0x28
  408b48:	stur	x0, [x9, #-256]
  408b4c:	mov	x0, x8
  408b50:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  408b54:	add	x1, x1, #0x759
  408b58:	sub	x8, x29, #0x28
  408b5c:	ldur	x2, [x8, #-256]
  408b60:	bl	402dd8 <fprintf@plt>
  408b64:	ldur	x8, [x29, #-240]
  408b68:	ldr	x9, [x8, #8]
  408b6c:	mov	x0, x9
  408b70:	bl	402de8 <fflush_sync_and_check@plt>
  408b74:	stur	w0, [x29, #-100]
  408b78:	ldur	w10, [x29, #-100]
  408b7c:	cmp	w10, #0x0
  408b80:	cset	w10, ge  // ge = tcont
  408b84:	tbnz	w10, #0, 408c28 <__fxstat64@plt+0x5bb0>
  408b88:	mov	w8, #0x3                   	// #3
  408b8c:	stur	w8, [x29, #-200]
  408b90:	ldur	w8, [x29, #-100]
  408b94:	stur	w8, [x29, #-204]
  408b98:	stur	wzr, [x29, #-208]
  408b9c:	ldur	w0, [x29, #-208]
  408ba0:	bl	4029d8 <log_get_max_level_realm@plt>
  408ba4:	ldur	w8, [x29, #-200]
  408ba8:	and	w8, w8, #0x7
  408bac:	cmp	w0, w8
  408bb0:	b.lt	408bf0 <__fxstat64@plt+0x5b78>  // b.tstop
  408bb4:	ldur	w8, [x29, #-208]
  408bb8:	ldur	w9, [x29, #-200]
  408bbc:	orr	w0, w9, w8, lsl #10
  408bc0:	ldur	w1, [x29, #-204]
  408bc4:	ldur	x10, [x29, #-240]
  408bc8:	ldr	x6, [x10]
  408bcc:	ldur	x2, [x29, #-248]
  408bd0:	mov	w3, #0x3f0                 	// #1008
  408bd4:	ldur	x4, [x29, #-256]
  408bd8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408bdc:	add	x5, x5, #0x785
  408be0:	bl	4029e8 <log_internal_realm@plt>
  408be4:	sub	x8, x29, #0x2c
  408be8:	stur	w0, [x8, #-256]
  408bec:	b	408c08 <__fxstat64@plt+0x5b90>
  408bf0:	ldur	w0, [x29, #-204]
  408bf4:	bl	4029f8 <abs@plt>
  408bf8:	mov	w8, wzr
  408bfc:	subs	w8, w8, w0, uxtb
  408c00:	sub	x9, x29, #0x2c
  408c04:	stur	w8, [x9, #-256]
  408c08:	sub	x8, x29, #0x2c
  408c0c:	ldur	w8, [x8, #-256]
  408c10:	stur	w8, [x29, #-212]
  408c14:	ldur	w8, [x29, #-212]
  408c18:	stur	w8, [x29, #-4]
  408c1c:	mov	w8, #0x1                   	// #1
  408c20:	stur	w8, [x29, #-180]
  408c24:	b	408d30 <__fxstat64@plt+0x5cb8>
  408c28:	ldur	w0, [x29, #-104]
  408c2c:	ldur	x8, [x29, #-240]
  408c30:	ldr	x1, [x8, #16]
  408c34:	ldr	x2, [x8]
  408c38:	bl	402df8 <link_tmpfile@plt>
  408c3c:	stur	w0, [x29, #-100]
  408c40:	ldur	w9, [x29, #-100]
  408c44:	mov	w10, #0xffffffef            	// #-17
  408c48:	cmp	w9, w10
  408c4c:	b.ne	408c60 <__fxstat64@plt+0x5be8>  // b.any
  408c50:	stur	wzr, [x29, #-4]
  408c54:	mov	w8, #0x1                   	// #1
  408c58:	stur	w8, [x29, #-180]
  408c5c:	b	408d30 <__fxstat64@plt+0x5cb8>
  408c60:	ldur	w8, [x29, #-100]
  408c64:	cmp	w8, #0x0
  408c68:	cset	w8, ge  // ge = tcont
  408c6c:	tbnz	w8, #0, 408d10 <__fxstat64@plt+0x5c98>
  408c70:	mov	w8, #0x3                   	// #3
  408c74:	stur	w8, [x29, #-216]
  408c78:	ldur	w8, [x29, #-100]
  408c7c:	stur	w8, [x29, #-220]
  408c80:	stur	wzr, [x29, #-224]
  408c84:	ldur	w0, [x29, #-224]
  408c88:	bl	4029d8 <log_get_max_level_realm@plt>
  408c8c:	ldur	w8, [x29, #-216]
  408c90:	and	w8, w8, #0x7
  408c94:	cmp	w0, w8
  408c98:	b.lt	408cd8 <__fxstat64@plt+0x5c60>  // b.tstop
  408c9c:	ldur	w8, [x29, #-224]
  408ca0:	ldur	w9, [x29, #-216]
  408ca4:	orr	w0, w9, w8, lsl #10
  408ca8:	ldur	w1, [x29, #-220]
  408cac:	ldur	x10, [x29, #-240]
  408cb0:	ldr	x6, [x10]
  408cb4:	ldur	x2, [x29, #-248]
  408cb8:	mov	w3, #0x3f6                 	// #1014
  408cbc:	ldur	x4, [x29, #-256]
  408cc0:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408cc4:	add	x5, x5, #0x79e
  408cc8:	bl	4029e8 <log_internal_realm@plt>
  408ccc:	sub	x8, x29, #0x30
  408cd0:	stur	w0, [x8, #-256]
  408cd4:	b	408cf0 <__fxstat64@plt+0x5c78>
  408cd8:	ldur	w0, [x29, #-220]
  408cdc:	bl	4029f8 <abs@plt>
  408ce0:	mov	w8, wzr
  408ce4:	subs	w8, w8, w0, uxtb
  408ce8:	sub	x9, x29, #0x30
  408cec:	stur	w8, [x9, #-256]
  408cf0:	sub	x8, x29, #0x30
  408cf4:	ldur	w8, [x8, #-256]
  408cf8:	stur	w8, [x29, #-228]
  408cfc:	ldur	w8, [x29, #-228]
  408d00:	stur	w8, [x29, #-4]
  408d04:	mov	w8, #0x1                   	// #1
  408d08:	stur	w8, [x29, #-180]
  408d0c:	b	408d30 <__fxstat64@plt+0x5cb8>
  408d10:	ldur	x8, [x29, #-240]
  408d14:	ldr	x0, [x8, #16]
  408d18:	bl	406d20 <__fxstat64@plt+0x3ca8>
  408d1c:	ldur	x8, [x29, #-240]
  408d20:	str	x0, [x8, #16]
  408d24:	mov	w9, #0x1                   	// #1
  408d28:	stur	w9, [x29, #-4]
  408d2c:	stur	w9, [x29, #-180]
  408d30:	sub	x0, x29, #0x58
  408d34:	bl	40bd4c <__fxstat64@plt+0x8cd4>
  408d38:	sub	x0, x29, #0x50
  408d3c:	bl	40bd18 <__fxstat64@plt+0x8ca0>
  408d40:	ldur	w0, [x29, #-4]
  408d44:	mov	sp, x29
  408d48:	ldr	x28, [sp, #16]
  408d4c:	ldp	x29, x30, [sp], #32
  408d50:	ret
  408d54:	sub	sp, sp, #0x70
  408d58:	stp	x29, x30, [sp, #96]
  408d5c:	add	x29, sp, #0x60
  408d60:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  408d64:	add	x8, x8, #0xf88
  408d68:	add	x8, x8, #0x3
  408d6c:	stur	x1, [x29, #-16]
  408d70:	stur	x2, [x29, #-8]
  408d74:	stur	x0, [x29, #-24]
  408d78:	str	x8, [sp, #24]
  408d7c:	ldur	x8, [x29, #-24]
  408d80:	cmp	x8, #0x0
  408d84:	cset	w9, ne  // ne = any
  408d88:	mov	w10, #0x1                   	// #1
  408d8c:	eor	w9, w9, #0x1
  408d90:	eor	w9, w9, w10
  408d94:	eor	w9, w9, w10
  408d98:	and	w9, w9, #0x1
  408d9c:	mov	w0, w9
  408da0:	sxtw	x8, w0
  408da4:	cbz	x8, 408dcc <__fxstat64@plt+0x5d54>
  408da8:	mov	w8, wzr
  408dac:	mov	w0, w8
  408db0:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  408db4:	add	x1, x1, #0x7c1
  408db8:	ldr	x2, [sp, #24]
  408dbc:	mov	w3, #0x3ff                 	// #1023
  408dc0:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  408dc4:	add	x4, x4, #0x7c6
  408dc8:	bl	402988 <log_assert_failed_realm@plt>
  408dcc:	ldur	x0, [x29, #-24]
  408dd0:	ldur	x8, [x29, #-16]
  408dd4:	ldur	x1, [x29, #-8]
  408dd8:	str	x0, [sp, #16]
  408ddc:	mov	x0, x8
  408de0:	add	x2, sp, #0x27
  408de4:	bl	402dc8 <sd_id128_to_string@plt>
  408de8:	ldr	x8, [sp, #16]
  408dec:	str	x0, [sp, #8]
  408df0:	mov	x0, x8
  408df4:	ldr	x1, [sp, #8]
  408df8:	bl	40a520 <__fxstat64@plt+0x74a8>
  408dfc:	ldp	x29, x30, [sp, #96]
  408e00:	add	sp, sp, #0x70
  408e04:	ret
  408e08:	stp	x29, x30, [sp, #-32]!
  408e0c:	str	x28, [sp, #16]
  408e10:	mov	x29, sp
  408e14:	sub	sp, sp, #0x210
  408e18:	mov	x8, xzr
  408e1c:	mov	w9, #0xffffffff            	// #-1
  408e20:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  408e24:	add	x10, x10, #0xf88
  408e28:	add	x10, x10, #0x3
  408e2c:	adrp	x11, 40f000 <__fxstat64@plt+0xbf88>
  408e30:	add	x11, x11, #0x82b
  408e34:	stur	x0, [x29, #-16]
  408e38:	stur	x8, [x29, #-24]
  408e3c:	stur	x8, [x29, #-32]
  408e40:	stur	x8, [x29, #-40]
  408e44:	stur	w9, [x29, #-44]
  408e48:	str	x10, [sp, #96]
  408e4c:	str	x11, [sp, #88]
  408e50:	ldur	x8, [x29, #-16]
  408e54:	cmp	x8, #0x0
  408e58:	cset	w9, ne  // ne = any
  408e5c:	mov	w10, #0x1                   	// #1
  408e60:	eor	w9, w9, #0x1
  408e64:	eor	w9, w9, w10
  408e68:	eor	w9, w9, w10
  408e6c:	and	w9, w9, #0x1
  408e70:	mov	w0, w9
  408e74:	sxtw	x8, w0
  408e78:	cbz	x8, 408ea0 <__fxstat64@plt+0x5e28>
  408e7c:	mov	w8, wzr
  408e80:	mov	w0, w8
  408e84:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  408e88:	add	x1, x1, #0x801
  408e8c:	ldr	x2, [sp, #96]
  408e90:	mov	w3, #0x554                 	// #1364
  408e94:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  408e98:	add	x4, x4, #0x805
  408e9c:	bl	402988 <log_assert_failed_realm@plt>
  408ea0:	ldur	x0, [x29, #-16]
  408ea4:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  408ea8:	add	x1, x1, #0x9f5
  408eac:	mov	x8, #0xffffffffffffffff    	// #-1
  408eb0:	mov	x2, x8
  408eb4:	bl	402b08 <path_join_internal@plt>
  408eb8:	stur	x0, [x29, #-40]
  408ebc:	ldur	x8, [x29, #-40]
  408ec0:	cbnz	x8, 408eec <__fxstat64@plt+0x5e74>
  408ec4:	mov	w8, wzr
  408ec8:	mov	w0, w8
  408ecc:	ldr	x1, [sp, #96]
  408ed0:	mov	w2, #0x558                 	// #1368
  408ed4:	ldr	x3, [sp, #88]
  408ed8:	bl	4029c8 <log_oom_internal@plt>
  408edc:	stur	w0, [x29, #-4]
  408ee0:	mov	w8, #0x1                   	// #1
  408ee4:	stur	w8, [x29, #-80]
  408ee8:	b	409cec <__fxstat64@plt+0x6c74>
  408eec:	bl	402e08 <random_pool_size@plt>
  408ef0:	stur	x0, [x29, #-56]
  408ef4:	ldur	x0, [x29, #-56]
  408ef8:	bl	402e18 <malloc@plt>
  408efc:	stur	x0, [x29, #-32]
  408f00:	ldur	x8, [x29, #-32]
  408f04:	cbnz	x8, 408f30 <__fxstat64@plt+0x5eb8>
  408f08:	mov	w8, wzr
  408f0c:	mov	w0, w8
  408f10:	ldr	x1, [sp, #96]
  408f14:	mov	w2, #0x55e                 	// #1374
  408f18:	ldr	x3, [sp, #88]
  408f1c:	bl	4029c8 <log_oom_internal@plt>
  408f20:	stur	w0, [x29, #-4]
  408f24:	mov	w8, #0x1                   	// #1
  408f28:	stur	w8, [x29, #-80]
  408f2c:	b	409cec <__fxstat64@plt+0x6c74>
  408f30:	ldur	x0, [x29, #-32]
  408f34:	ldur	x1, [x29, #-56]
  408f38:	mov	w2, #0x2                   	// #2
  408f3c:	bl	402e28 <genuine_random_bytes@plt>
  408f40:	stur	w0, [x29, #-76]
  408f44:	ldur	w8, [x29, #-76]
  408f48:	cmp	w8, #0x0
  408f4c:	cset	w8, ge  // ge = tcont
  408f50:	tbnz	w8, #0, 408fe0 <__fxstat64@plt+0x5f68>
  408f54:	mov	w8, #0x3                   	// #3
  408f58:	stur	w8, [x29, #-84]
  408f5c:	ldur	w8, [x29, #-76]
  408f60:	stur	w8, [x29, #-88]
  408f64:	stur	wzr, [x29, #-92]
  408f68:	ldur	w0, [x29, #-92]
  408f6c:	bl	4029d8 <log_get_max_level_realm@plt>
  408f70:	ldur	w8, [x29, #-84]
  408f74:	and	w8, w8, #0x7
  408f78:	cmp	w0, w8
  408f7c:	b.lt	408fb0 <__fxstat64@plt+0x5f38>  // b.tstop
  408f80:	ldur	w8, [x29, #-92]
  408f84:	ldur	w9, [x29, #-84]
  408f88:	orr	w0, w9, w8, lsl #10
  408f8c:	ldur	w1, [x29, #-88]
  408f90:	ldr	x2, [sp, #96]
  408f94:	mov	w3, #0x562                 	// #1378
  408f98:	ldr	x4, [sp, #88]
  408f9c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  408fa0:	add	x5, x5, #0x83f
  408fa4:	bl	4029e8 <log_internal_realm@plt>
  408fa8:	str	w0, [sp, #84]
  408fac:	b	408fc4 <__fxstat64@plt+0x5f4c>
  408fb0:	ldur	w0, [x29, #-88]
  408fb4:	bl	4029f8 <abs@plt>
  408fb8:	mov	w8, wzr
  408fbc:	subs	w8, w8, w0, uxtb
  408fc0:	str	w8, [sp, #84]
  408fc4:	ldr	w8, [sp, #84]
  408fc8:	stur	w8, [x29, #-96]
  408fcc:	ldur	w8, [x29, #-96]
  408fd0:	stur	w8, [x29, #-4]
  408fd4:	mov	w8, #0x1                   	// #1
  408fd8:	stur	w8, [x29, #-80]
  408fdc:	b	409cec <__fxstat64@plt+0x6c74>
  408fe0:	ldur	x0, [x29, #-40]
  408fe4:	mov	w1, #0x1ed                 	// #493
  408fe8:	bl	402e38 <mkdir_parents@plt>
  408fec:	stur	w0, [x29, #-76]
  408ff0:	ldur	w8, [x29, #-76]
  408ff4:	cmp	w8, #0x0
  408ff8:	cset	w8, ge  // ge = tcont
  408ffc:	tbnz	w8, #0, 409090 <__fxstat64@plt+0x6018>
  409000:	mov	w8, #0x3                   	// #3
  409004:	stur	w8, [x29, #-100]
  409008:	ldur	w8, [x29, #-76]
  40900c:	stur	w8, [x29, #-104]
  409010:	stur	wzr, [x29, #-108]
  409014:	ldur	w0, [x29, #-108]
  409018:	bl	4029d8 <log_get_max_level_realm@plt>
  40901c:	ldur	w8, [x29, #-100]
  409020:	and	w8, w8, #0x7
  409024:	cmp	w0, w8
  409028:	b.lt	409060 <__fxstat64@plt+0x5fe8>  // b.tstop
  40902c:	ldur	w8, [x29, #-108]
  409030:	ldur	w9, [x29, #-100]
  409034:	orr	w0, w9, w8, lsl #10
  409038:	ldur	w1, [x29, #-104]
  40903c:	ldur	x6, [x29, #-40]
  409040:	ldr	x2, [sp, #96]
  409044:	mov	w3, #0x569                 	// #1385
  409048:	ldr	x4, [sp, #88]
  40904c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409050:	add	x5, x5, #0x861
  409054:	bl	4029e8 <log_internal_realm@plt>
  409058:	str	w0, [sp, #80]
  40905c:	b	409074 <__fxstat64@plt+0x5ffc>
  409060:	ldur	w0, [x29, #-104]
  409064:	bl	4029f8 <abs@plt>
  409068:	mov	w8, wzr
  40906c:	subs	w8, w8, w0, uxtb
  409070:	str	w8, [sp, #80]
  409074:	ldr	w8, [sp, #80]
  409078:	stur	w8, [x29, #-112]
  40907c:	ldur	w8, [x29, #-112]
  409080:	stur	w8, [x29, #-4]
  409084:	mov	w8, #0x1                   	// #1
  409088:	stur	w8, [x29, #-80]
  40908c:	b	409cec <__fxstat64@plt+0x6c74>
  409090:	ldur	x0, [x29, #-40]
  409094:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  409098:	add	x1, x1, #0x1f
  40909c:	sub	x2, x29, #0x18
  4090a0:	bl	402e48 <tempfn_random@plt>
  4090a4:	stur	w0, [x29, #-76]
  4090a8:	ldur	w8, [x29, #-76]
  4090ac:	cmp	w8, #0x0
  4090b0:	cset	w8, ge  // ge = tcont
  4090b4:	tbnz	w8, #0, 4090e0 <__fxstat64@plt+0x6068>
  4090b8:	mov	w8, wzr
  4090bc:	mov	w0, w8
  4090c0:	ldr	x1, [sp, #96]
  4090c4:	mov	w2, #0x56d                 	// #1389
  4090c8:	ldr	x3, [sp, #88]
  4090cc:	bl	4029c8 <log_oom_internal@plt>
  4090d0:	stur	w0, [x29, #-4]
  4090d4:	mov	w8, #0x1                   	// #1
  4090d8:	stur	w8, [x29, #-80]
  4090dc:	b	409cec <__fxstat64@plt+0x6c74>
  4090e0:	ldur	x0, [x29, #-24]
  4090e4:	mov	w1, #0x81c1                	// #33217
  4090e8:	movk	w1, #0x8, lsl #16
  4090ec:	mov	w2, #0x180                 	// #384
  4090f0:	bl	402e58 <open64@plt>
  4090f4:	stur	w0, [x29, #-44]
  4090f8:	ldur	w8, [x29, #-44]
  4090fc:	cmp	w8, #0x0
  409100:	cset	w8, ge  // ge = tcont
  409104:	tbnz	w8, #0, 4091a0 <__fxstat64@plt+0x6128>
  409108:	ldur	x0, [x29, #-24]
  40910c:	bl	406d20 <__fxstat64@plt+0x3ca8>
  409110:	stur	x0, [x29, #-24]
  409114:	mov	w8, #0x3                   	// #3
  409118:	stur	w8, [x29, #-116]
  40911c:	ldur	w8, [x29, #-44]
  409120:	stur	w8, [x29, #-120]
  409124:	stur	wzr, [x29, #-124]
  409128:	ldur	w0, [x29, #-124]
  40912c:	bl	4029d8 <log_get_max_level_realm@plt>
  409130:	ldur	w8, [x29, #-116]
  409134:	and	w8, w8, #0x7
  409138:	cmp	w0, w8
  40913c:	b.lt	409170 <__fxstat64@plt+0x60f8>  // b.tstop
  409140:	ldur	w8, [x29, #-124]
  409144:	ldur	w9, [x29, #-116]
  409148:	orr	w0, w9, w8, lsl #10
  40914c:	ldur	w1, [x29, #-120]
  409150:	ldr	x2, [sp, #96]
  409154:	mov	w3, #0x572                 	// #1394
  409158:	ldr	x4, [sp, #88]
  40915c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409160:	add	x5, x5, #0x88e
  409164:	bl	4029e8 <log_internal_realm@plt>
  409168:	str	w0, [sp, #76]
  40916c:	b	409184 <__fxstat64@plt+0x610c>
  409170:	ldur	w0, [x29, #-120]
  409174:	bl	4029f8 <abs@plt>
  409178:	mov	w8, wzr
  40917c:	subs	w8, w8, w0, uxtb
  409180:	str	w8, [sp, #76]
  409184:	ldr	w8, [sp, #76]
  409188:	stur	w8, [x29, #-128]
  40918c:	ldur	w8, [x29, #-128]
  409190:	stur	w8, [x29, #-4]
  409194:	mov	w8, #0x1                   	// #1
  409198:	stur	w8, [x29, #-80]
  40919c:	b	409cec <__fxstat64@plt+0x6c74>
  4091a0:	ldur	w0, [x29, #-44]
  4091a4:	ldur	x1, [x29, #-32]
  4091a8:	ldur	x2, [x29, #-56]
  4091ac:	bl	402e68 <write@plt>
  4091b0:	stur	x0, [x29, #-72]
  4091b4:	ldur	x8, [x29, #-72]
  4091b8:	cmp	x8, #0x0
  4091bc:	cset	w9, ge  // ge = tcont
  4091c0:	tbnz	w9, #0, 409254 <__fxstat64@plt+0x61dc>
  4091c4:	mov	w8, #0x3                   	// #3
  4091c8:	stur	w8, [x29, #-132]
  4091cc:	bl	402b98 <__errno_location@plt>
  4091d0:	ldr	w8, [x0]
  4091d4:	stur	w8, [x29, #-136]
  4091d8:	stur	wzr, [x29, #-140]
  4091dc:	ldur	w0, [x29, #-140]
  4091e0:	bl	4029d8 <log_get_max_level_realm@plt>
  4091e4:	ldur	w8, [x29, #-132]
  4091e8:	and	w8, w8, #0x7
  4091ec:	cmp	w0, w8
  4091f0:	b.lt	409224 <__fxstat64@plt+0x61ac>  // b.tstop
  4091f4:	ldur	w8, [x29, #-140]
  4091f8:	ldur	w9, [x29, #-132]
  4091fc:	orr	w0, w9, w8, lsl #10
  409200:	ldur	w1, [x29, #-136]
  409204:	ldr	x2, [sp, #96]
  409208:	mov	w3, #0x577                 	// #1399
  40920c:	ldr	x4, [sp, #88]
  409210:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409214:	add	x5, x5, #0x8be
  409218:	bl	4029e8 <log_internal_realm@plt>
  40921c:	str	w0, [sp, #72]
  409220:	b	409238 <__fxstat64@plt+0x61c0>
  409224:	ldur	w0, [x29, #-136]
  409228:	bl	4029f8 <abs@plt>
  40922c:	mov	w8, wzr
  409230:	subs	w8, w8, w0, uxtb
  409234:	str	w8, [sp, #72]
  409238:	ldr	w8, [sp, #72]
  40923c:	stur	w8, [x29, #-144]
  409240:	ldur	w8, [x29, #-144]
  409244:	stur	w8, [x29, #-4]
  409248:	mov	w8, #0x1                   	// #1
  40924c:	stur	w8, [x29, #-80]
  409250:	b	409cec <__fxstat64@plt+0x6c74>
  409254:	ldur	x8, [x29, #-72]
  409258:	ldur	x9, [x29, #-56]
  40925c:	cmp	x8, x9
  409260:	b.eq	4092f4 <__fxstat64@plt+0x627c>  // b.none
  409264:	mov	w8, #0x3                   	// #3
  409268:	stur	w8, [x29, #-148]
  40926c:	mov	w8, #0x5                   	// #5
  409270:	movk	w8, #0x4000, lsl #16
  409274:	stur	w8, [x29, #-152]
  409278:	stur	wzr, [x29, #-156]
  40927c:	ldur	w0, [x29, #-156]
  409280:	bl	4029d8 <log_get_max_level_realm@plt>
  409284:	ldur	w8, [x29, #-148]
  409288:	and	w8, w8, #0x7
  40928c:	cmp	w0, w8
  409290:	b.lt	4092c4 <__fxstat64@plt+0x624c>  // b.tstop
  409294:	ldur	w8, [x29, #-156]
  409298:	ldur	w9, [x29, #-148]
  40929c:	orr	w0, w9, w8, lsl #10
  4092a0:	ldur	w1, [x29, #-152]
  4092a4:	ldr	x2, [sp, #96]
  4092a8:	mov	w3, #0x579                 	// #1401
  4092ac:	ldr	x4, [sp, #88]
  4092b0:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4092b4:	add	x5, x5, #0x8e3
  4092b8:	bl	4029e8 <log_internal_realm@plt>
  4092bc:	str	w0, [sp, #68]
  4092c0:	b	4092d8 <__fxstat64@plt+0x6260>
  4092c4:	ldur	w0, [x29, #-152]
  4092c8:	bl	4029f8 <abs@plt>
  4092cc:	mov	w8, wzr
  4092d0:	subs	w8, w8, w0, uxtb
  4092d4:	str	w8, [sp, #68]
  4092d8:	ldr	w8, [sp, #68]
  4092dc:	stur	w8, [x29, #-160]
  4092e0:	ldur	w8, [x29, #-160]
  4092e4:	stur	w8, [x29, #-4]
  4092e8:	mov	w8, #0x1                   	// #1
  4092ec:	stur	w8, [x29, #-80]
  4092f0:	b	409cec <__fxstat64@plt+0x6c74>
  4092f4:	ldur	x0, [x29, #-24]
  4092f8:	ldur	x1, [x29, #-40]
  4092fc:	bl	402e78 <rename@plt>
  409300:	cmp	w0, #0x0
  409304:	cset	w8, ge  // ge = tcont
  409308:	tbnz	w8, #0, 409398 <__fxstat64@plt+0x6320>
  40930c:	mov	w8, #0x3                   	// #3
  409310:	stur	w8, [x29, #-164]
  409314:	ldur	w8, [x29, #-76]
  409318:	stur	w8, [x29, #-168]
  40931c:	stur	wzr, [x29, #-172]
  409320:	ldur	w0, [x29, #-172]
  409324:	bl	4029d8 <log_get_max_level_realm@plt>
  409328:	ldur	w8, [x29, #-164]
  40932c:	and	w8, w8, #0x7
  409330:	cmp	w0, w8
  409334:	b.lt	409368 <__fxstat64@plt+0x62f0>  // b.tstop
  409338:	ldur	w8, [x29, #-172]
  40933c:	ldur	w9, [x29, #-164]
  409340:	orr	w0, w9, w8, lsl #10
  409344:	ldur	w1, [x29, #-168]
  409348:	ldr	x2, [sp, #96]
  40934c:	mov	w3, #0x57c                 	// #1404
  409350:	ldr	x4, [sp, #88]
  409354:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409358:	add	x5, x5, #0x90f
  40935c:	bl	4029e8 <log_internal_realm@plt>
  409360:	str	w0, [sp, #64]
  409364:	b	40937c <__fxstat64@plt+0x6304>
  409368:	ldur	w0, [x29, #-168]
  40936c:	bl	4029f8 <abs@plt>
  409370:	mov	w8, wzr
  409374:	subs	w8, w8, w0, uxtb
  409378:	str	w8, [sp, #64]
  40937c:	ldr	w8, [sp, #64]
  409380:	stur	w8, [x29, #-176]
  409384:	ldur	w8, [x29, #-176]
  409388:	stur	w8, [x29, #-4]
  40938c:	mov	w8, #0x1                   	// #1
  409390:	stur	w8, [x29, #-80]
  409394:	b	409cec <__fxstat64@plt+0x6c74>
  409398:	ldur	x0, [x29, #-24]
  40939c:	bl	406d20 <__fxstat64@plt+0x3ca8>
  4093a0:	stur	x0, [x29, #-24]
  4093a4:	mov	w8, #0x6                   	// #6
  4093a8:	stur	w8, [x29, #-180]
  4093ac:	stur	wzr, [x29, #-184]
  4093b0:	stur	wzr, [x29, #-188]
  4093b4:	ldur	w0, [x29, #-188]
  4093b8:	bl	4029d8 <log_get_max_level_realm@plt>
  4093bc:	ldur	w8, [x29, #-180]
  4093c0:	and	w8, w8, #0x7
  4093c4:	cmp	w0, w8
  4093c8:	b.lt	409404 <__fxstat64@plt+0x638c>  // b.tstop
  4093cc:	ldur	w8, [x29, #-188]
  4093d0:	ldur	w9, [x29, #-180]
  4093d4:	orr	w0, w9, w8, lsl #10
  4093d8:	ldur	w1, [x29, #-184]
  4093dc:	ldur	x6, [x29, #-40]
  4093e0:	ldur	x7, [x29, #-56]
  4093e4:	ldr	x2, [sp, #96]
  4093e8:	mov	w3, #0x580                 	// #1408
  4093ec:	ldr	x4, [sp, #88]
  4093f0:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4093f4:	add	x5, x5, #0x93e
  4093f8:	bl	4029e8 <log_internal_realm@plt>
  4093fc:	str	w0, [sp, #60]
  409400:	b	409418 <__fxstat64@plt+0x63a0>
  409404:	ldur	w0, [x29, #-184]
  409408:	bl	4029f8 <abs@plt>
  40940c:	mov	w8, wzr
  409410:	subs	w8, w8, w0, uxtb
  409414:	str	w8, [sp, #60]
  409418:	ldr	w8, [sp, #60]
  40941c:	stur	w8, [x29, #-192]
  409420:	adrp	x9, 430000 <__fxstat64@plt+0x2cf88>
  409424:	add	x9, x9, #0x0
  409428:	ldrb	w8, [x9]
  40942c:	tbnz	w8, #0, 409440 <__fxstat64@plt+0x63c8>
  409430:	stur	wzr, [x29, #-4]
  409434:	mov	w8, #0x1                   	// #1
  409438:	stur	w8, [x29, #-80]
  40943c:	b	409cec <__fxstat64@plt+0x6c74>
  409440:	bl	402a88 <is_efi_boot@plt>
  409444:	tbnz	w0, #0, 4094cc <__fxstat64@plt+0x6454>
  409448:	mov	w8, #0x5                   	// #5
  40944c:	stur	w8, [x29, #-196]
  409450:	stur	wzr, [x29, #-200]
  409454:	stur	wzr, [x29, #-204]
  409458:	ldur	w0, [x29, #-204]
  40945c:	bl	4029d8 <log_get_max_level_realm@plt>
  409460:	ldur	w8, [x29, #-196]
  409464:	and	w8, w8, #0x7
  409468:	cmp	w0, w8
  40946c:	b.lt	4094a0 <__fxstat64@plt+0x6428>  // b.tstop
  409470:	ldur	w8, [x29, #-204]
  409474:	ldur	w9, [x29, #-196]
  409478:	orr	w0, w9, w8, lsl #10
  40947c:	ldur	w1, [x29, #-200]
  409480:	ldr	x2, [sp, #96]
  409484:	mov	w3, #0x586                 	// #1414
  409488:	ldr	x4, [sp, #88]
  40948c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409490:	add	x5, x5, #0x974
  409494:	bl	4029e8 <log_internal_realm@plt>
  409498:	str	w0, [sp, #56]
  40949c:	b	4094b4 <__fxstat64@plt+0x643c>
  4094a0:	ldur	w0, [x29, #-200]
  4094a4:	bl	4029f8 <abs@plt>
  4094a8:	mov	w8, wzr
  4094ac:	subs	w8, w8, w0, uxtb
  4094b0:	str	w8, [sp, #56]
  4094b4:	ldr	w8, [sp, #56]
  4094b8:	stur	w8, [x29, #-208]
  4094bc:	stur	wzr, [x29, #-4]
  4094c0:	mov	w8, #0x1                   	// #1
  4094c4:	stur	w8, [x29, #-80]
  4094c8:	b	409cec <__fxstat64@plt+0x6c74>
  4094cc:	adrp	x0, 40f000 <__fxstat64@plt+0xbf88>
  4094d0:	add	x0, x0, #0x9a6
  4094d4:	bl	402e88 <getenv_bool@plt>
  4094d8:	stur	w0, [x29, #-76]
  4094dc:	ldur	w8, [x29, #-76]
  4094e0:	cmp	w8, #0x0
  4094e4:	cset	w8, ge  // ge = tcont
  4094e8:	tbnz	w8, #0, 40960c <__fxstat64@plt+0x6594>
  4094ec:	ldur	w8, [x29, #-76]
  4094f0:	mov	w9, #0xfffffffa            	// #-6
  4094f4:	cmp	w8, w9
  4094f8:	b.eq	409574 <__fxstat64@plt+0x64fc>  // b.none
  4094fc:	mov	w8, #0x4                   	// #4
  409500:	stur	w8, [x29, #-212]
  409504:	ldur	w8, [x29, #-76]
  409508:	stur	w8, [x29, #-216]
  40950c:	stur	wzr, [x29, #-220]
  409510:	ldur	w0, [x29, #-220]
  409514:	bl	4029d8 <log_get_max_level_realm@plt>
  409518:	ldur	w8, [x29, #-212]
  40951c:	and	w8, w8, #0x7
  409520:	cmp	w0, w8
  409524:	b.lt	409558 <__fxstat64@plt+0x64e0>  // b.tstop
  409528:	ldur	w8, [x29, #-220]
  40952c:	ldur	w9, [x29, #-212]
  409530:	orr	w0, w9, w8, lsl #10
  409534:	ldur	w1, [x29, #-216]
  409538:	ldr	x2, [sp, #96]
  40953c:	mov	w3, #0x58d                 	// #1421
  409540:	ldr	x4, [sp, #88]
  409544:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409548:	add	x5, x5, #0x9c1
  40954c:	bl	4029e8 <log_internal_realm@plt>
  409550:	str	w0, [sp, #52]
  409554:	b	40956c <__fxstat64@plt+0x64f4>
  409558:	ldur	w0, [x29, #-216]
  40955c:	bl	4029f8 <abs@plt>
  409560:	mov	w8, wzr
  409564:	subs	w8, w8, w0, uxtb
  409568:	str	w8, [sp, #52]
  40956c:	ldr	w8, [sp, #52]
  409570:	stur	w8, [x29, #-224]
  409574:	bl	402e98 <detect_vm@plt>
  409578:	cmp	w0, #0x0
  40957c:	cset	w8, le
  409580:	tbnz	w8, #0, 409608 <__fxstat64@plt+0x6590>
  409584:	mov	w8, #0x5                   	// #5
  409588:	stur	w8, [x29, #-228]
  40958c:	stur	wzr, [x29, #-232]
  409590:	stur	wzr, [x29, #-236]
  409594:	ldur	w0, [x29, #-236]
  409598:	bl	4029d8 <log_get_max_level_realm@plt>
  40959c:	ldur	w8, [x29, #-228]
  4095a0:	and	w8, w8, #0x7
  4095a4:	cmp	w0, w8
  4095a8:	b.lt	4095dc <__fxstat64@plt+0x6564>  // b.tstop
  4095ac:	ldur	w8, [x29, #-236]
  4095b0:	ldur	w9, [x29, #-228]
  4095b4:	orr	w0, w9, w8, lsl #10
  4095b8:	ldur	w1, [x29, #-232]
  4095bc:	ldr	x2, [sp, #96]
  4095c0:	mov	w3, #0x59f                 	// #1439
  4095c4:	ldr	x4, [sp, #88]
  4095c8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4095cc:	add	x5, x5, #0x9f8
  4095d0:	bl	4029e8 <log_internal_realm@plt>
  4095d4:	str	w0, [sp, #48]
  4095d8:	b	4095f0 <__fxstat64@plt+0x6578>
  4095dc:	ldur	w0, [x29, #-232]
  4095e0:	bl	4029f8 <abs@plt>
  4095e4:	mov	w8, wzr
  4095e8:	subs	w8, w8, w0, uxtb
  4095ec:	str	w8, [sp, #48]
  4095f0:	ldr	w8, [sp, #48]
  4095f4:	stur	w8, [x29, #-240]
  4095f8:	stur	wzr, [x29, #-4]
  4095fc:	mov	w8, #0x1                   	// #1
  409600:	stur	w8, [x29, #-80]
  409604:	b	409cec <__fxstat64@plt+0x6c74>
  409608:	b	409698 <__fxstat64@plt+0x6620>
  40960c:	ldur	w8, [x29, #-76]
  409610:	cbnz	w8, 409698 <__fxstat64@plt+0x6620>
  409614:	mov	w8, #0x5                   	// #5
  409618:	stur	w8, [x29, #-244]
  40961c:	stur	wzr, [x29, #-248]
  409620:	stur	wzr, [x29, #-252]
  409624:	ldur	w0, [x29, #-252]
  409628:	bl	4029d8 <log_get_max_level_realm@plt>
  40962c:	ldur	w8, [x29, #-244]
  409630:	and	w8, w8, #0x7
  409634:	cmp	w0, w8
  409638:	b.lt	40966c <__fxstat64@plt+0x65f4>  // b.tstop
  40963c:	ldur	w8, [x29, #-252]
  409640:	ldur	w9, [x29, #-244]
  409644:	orr	w0, w9, w8, lsl #10
  409648:	ldur	w1, [x29, #-248]
  40964c:	ldr	x2, [sp, #96]
  409650:	mov	w3, #0x5a3                 	// #1443
  409654:	ldr	x4, [sp, #88]
  409658:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40965c:	add	x5, x5, #0xa48
  409660:	bl	4029e8 <log_internal_realm@plt>
  409664:	str	w0, [sp, #44]
  409668:	b	409680 <__fxstat64@plt+0x6608>
  40966c:	ldur	w0, [x29, #-248]
  409670:	bl	4029f8 <abs@plt>
  409674:	mov	w8, wzr
  409678:	subs	w8, w8, w0, uxtb
  40967c:	str	w8, [sp, #44]
  409680:	ldr	w8, [sp, #44]
  409684:	stur	w8, [x29, #-256]
  409688:	stur	wzr, [x29, #-4]
  40968c:	mov	w8, #0x1                   	// #1
  409690:	stur	w8, [x29, #-80]
  409694:	b	409cec <__fxstat64@plt+0x6c74>
  409698:	add	x8, sp, #0x100
  40969c:	mov	w9, #0x4a                  	// #74
  4096a0:	strb	w9, [sp, #256]
  4096a4:	mov	w9, #0x67                  	// #103
  4096a8:	strb	w9, [x8, #1]
  4096ac:	mov	w9, #0xb0                  	// #176
  4096b0:	strb	w9, [x8, #2]
  4096b4:	mov	w9, #0x82                  	// #130
  4096b8:	strb	w9, [x8, #3]
  4096bc:	mov	w9, #0xa                   	// #10
  4096c0:	strb	w9, [x8, #4]
  4096c4:	mov	w9, #0x4c                  	// #76
  4096c8:	strb	w9, [x8, #5]
  4096cc:	mov	w9, #0x41                  	// #65
  4096d0:	strb	w9, [x8, #6]
  4096d4:	mov	w9, #0xcf                  	// #207
  4096d8:	strb	w9, [x8, #7]
  4096dc:	mov	w9, #0xb6                  	// #182
  4096e0:	strb	w9, [x8, #8]
  4096e4:	mov	w9, #0xc7                  	// #199
  4096e8:	strb	w9, [x8, #9]
  4096ec:	mov	w9, #0x44                  	// #68
  4096f0:	strb	w9, [x8, #10]
  4096f4:	mov	w9, #0xb                   	// #11
  4096f8:	strb	w9, [x8, #11]
  4096fc:	mov	w9, #0x29                  	// #41
  409700:	strb	w9, [x8, #12]
  409704:	mov	w9, #0xbb                  	// #187
  409708:	strb	w9, [x8, #13]
  40970c:	mov	w9, #0x8c                  	// #140
  409710:	strb	w9, [x8, #14]
  409714:	mov	w9, #0x4f                  	// #79
  409718:	strb	w9, [x8, #15]
  40971c:	ldr	x0, [sp, #256]
  409720:	ldr	x1, [sp, #264]
  409724:	adrp	x2, 40f000 <__fxstat64@plt+0xbf88>
  409728:	add	x2, x2, #0xa97
  40972c:	mov	x8, xzr
  409730:	mov	x3, x8
  409734:	mov	x4, x8
  409738:	sub	x5, x29, #0x40
  40973c:	bl	402ea8 <efi_get_variable@plt>
  409740:	stur	w0, [x29, #-76]
  409744:	ldur	w9, [x29, #-76]
  409748:	cmp	w9, #0x0
  40974c:	cset	w9, ge  // ge = tcont
  409750:	tbnz	w9, #0, 4097f4 <__fxstat64@plt+0x677c>
  409754:	ldur	w8, [x29, #-76]
  409758:	mov	w9, #0xfffffffe            	// #-2
  40975c:	cmp	w8, w9
  409760:	b.eq	4097f0 <__fxstat64@plt+0x6778>  // b.none
  409764:	mov	w8, #0x3                   	// #3
  409768:	str	w8, [sp, #252]
  40976c:	ldur	w8, [x29, #-76]
  409770:	str	w8, [sp, #248]
  409774:	str	wzr, [sp, #244]
  409778:	ldr	w0, [sp, #244]
  40977c:	bl	4029d8 <log_get_max_level_realm@plt>
  409780:	ldr	w8, [sp, #252]
  409784:	and	w8, w8, #0x7
  409788:	cmp	w0, w8
  40978c:	b.lt	4097c0 <__fxstat64@plt+0x6748>  // b.tstop
  409790:	ldr	w8, [sp, #244]
  409794:	ldr	w9, [sp, #252]
  409798:	orr	w0, w9, w8, lsl #10
  40979c:	ldr	w1, [sp, #248]
  4097a0:	ldr	x2, [sp, #96]
  4097a4:	mov	w3, #0x5aa                 	// #1450
  4097a8:	ldr	x4, [sp, #88]
  4097ac:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4097b0:	add	x5, x5, #0xaa9
  4097b4:	bl	4029e8 <log_internal_realm@plt>
  4097b8:	str	w0, [sp, #40]
  4097bc:	b	4097d4 <__fxstat64@plt+0x675c>
  4097c0:	ldr	w0, [sp, #248]
  4097c4:	bl	4029f8 <abs@plt>
  4097c8:	mov	w8, wzr
  4097cc:	subs	w8, w8, w0, uxtb
  4097d0:	str	w8, [sp, #40]
  4097d4:	ldr	w8, [sp, #40]
  4097d8:	str	w8, [sp, #240]
  4097dc:	ldr	w8, [sp, #240]
  4097e0:	stur	w8, [x29, #-4]
  4097e4:	mov	w8, #0x1                   	// #1
  4097e8:	stur	w8, [x29, #-80]
  4097ec:	b	409cec <__fxstat64@plt+0x6c74>
  4097f0:	b	409904 <__fxstat64@plt+0x688c>
  4097f4:	ldur	x8, [x29, #-64]
  4097f8:	ldur	x9, [x29, #-56]
  4097fc:	cmp	x8, x9
  409800:	b.cc	409888 <__fxstat64@plt+0x6810>  // b.lo, b.ul, b.last
  409804:	mov	w8, #0x7                   	// #7
  409808:	str	w8, [sp, #236]
  40980c:	str	wzr, [sp, #232]
  409810:	str	wzr, [sp, #228]
  409814:	ldr	w0, [sp, #228]
  409818:	bl	4029d8 <log_get_max_level_realm@plt>
  40981c:	ldr	w8, [sp, #236]
  409820:	and	w8, w8, #0x7
  409824:	cmp	w0, w8
  409828:	b.lt	40985c <__fxstat64@plt+0x67e4>  // b.tstop
  40982c:	ldr	w8, [sp, #228]
  409830:	ldr	w9, [sp, #236]
  409834:	orr	w0, w9, w8, lsl #10
  409838:	ldr	w1, [sp, #232]
  40983c:	ldr	x2, [sp, #96]
  409840:	mov	w3, #0x5ae                 	// #1454
  409844:	ldr	x4, [sp, #88]
  409848:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40984c:	add	x5, x5, #0xad2
  409850:	bl	4029e8 <log_internal_realm@plt>
  409854:	str	w0, [sp, #36]
  409858:	b	409870 <__fxstat64@plt+0x67f8>
  40985c:	ldr	w0, [sp, #232]
  409860:	bl	4029f8 <abs@plt>
  409864:	mov	w8, wzr
  409868:	subs	w8, w8, w0, uxtb
  40986c:	str	w8, [sp, #36]
  409870:	ldr	w8, [sp, #36]
  409874:	str	w8, [sp, #224]
  409878:	stur	wzr, [x29, #-4]
  40987c:	mov	w8, #0x1                   	// #1
  409880:	stur	w8, [x29, #-80]
  409884:	b	409cec <__fxstat64@plt+0x6c74>
  409888:	mov	w8, #0x7                   	// #7
  40988c:	str	w8, [sp, #220]
  409890:	str	wzr, [sp, #216]
  409894:	str	wzr, [sp, #212]
  409898:	ldr	w0, [sp, #212]
  40989c:	bl	4029d8 <log_get_max_level_realm@plt>
  4098a0:	ldr	w8, [sp, #220]
  4098a4:	and	w8, w8, #0x7
  4098a8:	cmp	w0, w8
  4098ac:	b.lt	4098e8 <__fxstat64@plt+0x6870>  // b.tstop
  4098b0:	ldr	w8, [sp, #212]
  4098b4:	ldr	w9, [sp, #220]
  4098b8:	orr	w0, w9, w8, lsl #10
  4098bc:	ldr	w1, [sp, #216]
  4098c0:	ldur	x6, [x29, #-64]
  4098c4:	ldur	x7, [x29, #-56]
  4098c8:	ldr	x2, [sp, #96]
  4098cc:	mov	w3, #0x5b2                 	// #1458
  4098d0:	ldr	x4, [sp, #88]
  4098d4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  4098d8:	add	x5, x5, #0xafe
  4098dc:	bl	4029e8 <log_internal_realm@plt>
  4098e0:	str	w0, [sp, #32]
  4098e4:	b	4098fc <__fxstat64@plt+0x6884>
  4098e8:	ldr	w0, [sp, #216]
  4098ec:	bl	4029f8 <abs@plt>
  4098f0:	mov	w8, wzr
  4098f4:	subs	w8, w8, w0, uxtb
  4098f8:	str	w8, [sp, #32]
  4098fc:	ldr	w8, [sp, #32]
  409900:	str	w8, [sp, #208]
  409904:	ldur	x0, [x29, #-32]
  409908:	ldur	x1, [x29, #-56]
  40990c:	mov	w2, #0x2                   	// #2
  409910:	bl	402e28 <genuine_random_bytes@plt>
  409914:	stur	w0, [x29, #-76]
  409918:	ldur	w8, [x29, #-76]
  40991c:	cmp	w8, #0x0
  409920:	cset	w8, ge  // ge = tcont
  409924:	tbnz	w8, #0, 4099b4 <__fxstat64@plt+0x693c>
  409928:	mov	w8, #0x3                   	// #3
  40992c:	str	w8, [sp, #204]
  409930:	ldur	w8, [x29, #-76]
  409934:	str	w8, [sp, #200]
  409938:	str	wzr, [sp, #196]
  40993c:	ldr	w0, [sp, #196]
  409940:	bl	4029d8 <log_get_max_level_realm@plt>
  409944:	ldr	w8, [sp, #204]
  409948:	and	w8, w8, #0x7
  40994c:	cmp	w0, w8
  409950:	b.lt	409984 <__fxstat64@plt+0x690c>  // b.tstop
  409954:	ldr	w8, [sp, #196]
  409958:	ldr	w9, [sp, #204]
  40995c:	orr	w0, w9, w8, lsl #10
  409960:	ldr	w1, [sp, #200]
  409964:	ldr	x2, [sp, #96]
  409968:	mov	w3, #0x5b7                 	// #1463
  40996c:	ldr	x4, [sp, #88]
  409970:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409974:	add	x5, x5, #0x83f
  409978:	bl	4029e8 <log_internal_realm@plt>
  40997c:	str	w0, [sp, #28]
  409980:	b	409998 <__fxstat64@plt+0x6920>
  409984:	ldr	w0, [sp, #200]
  409988:	bl	4029f8 <abs@plt>
  40998c:	mov	w8, wzr
  409990:	subs	w8, w8, w0, uxtb
  409994:	str	w8, [sp, #28]
  409998:	ldr	w8, [sp, #28]
  40999c:	str	w8, [sp, #192]
  4099a0:	ldr	w8, [sp, #192]
  4099a4:	stur	w8, [x29, #-4]
  4099a8:	mov	w8, #0x1                   	// #1
  4099ac:	stur	w8, [x29, #-80]
  4099b0:	b	409cec <__fxstat64@plt+0x6c74>
  4099b4:	mov	w0, #0x3f                  	// #63
  4099b8:	bl	402b38 <umask@plt>
  4099bc:	orr	w8, w0, #0xf000
  4099c0:	str	w8, [sp, #188]
  4099c4:	ldr	w8, [sp, #188]
  4099c8:	mvn	w8, w8
  4099cc:	and	w8, w8, #0xf000
  4099d0:	cbz	w8, 4099e0 <__fxstat64@plt+0x6968>
  4099d4:	mov	w8, #0x4                   	// #4
  4099d8:	stur	w8, [x29, #-80]
  4099dc:	b	409cc0 <__fxstat64@plt+0x6c48>
  4099e0:	add	x8, sp, #0xa8
  4099e4:	mov	w9, #0x4a                  	// #74
  4099e8:	strb	w9, [sp, #168]
  4099ec:	mov	w9, #0x67                  	// #103
  4099f0:	strb	w9, [x8, #1]
  4099f4:	mov	w9, #0xb0                  	// #176
  4099f8:	strb	w9, [x8, #2]
  4099fc:	mov	w9, #0x82                  	// #130
  409a00:	strb	w9, [x8, #3]
  409a04:	mov	w9, #0xa                   	// #10
  409a08:	strb	w9, [x8, #4]
  409a0c:	mov	w9, #0x4c                  	// #76
  409a10:	strb	w9, [x8, #5]
  409a14:	mov	w9, #0x41                  	// #65
  409a18:	strb	w9, [x8, #6]
  409a1c:	mov	w9, #0xcf                  	// #207
  409a20:	strb	w9, [x8, #7]
  409a24:	mov	w9, #0xb6                  	// #182
  409a28:	strb	w9, [x8, #8]
  409a2c:	mov	w9, #0xc7                  	// #199
  409a30:	strb	w9, [x8, #9]
  409a34:	mov	w9, #0x44                  	// #68
  409a38:	strb	w9, [x8, #10]
  409a3c:	mov	w9, #0xb                   	// #11
  409a40:	strb	w9, [x8, #11]
  409a44:	mov	w9, #0x29                  	// #41
  409a48:	strb	w9, [x8, #12]
  409a4c:	mov	w9, #0xbb                  	// #187
  409a50:	strb	w9, [x8, #13]
  409a54:	mov	w9, #0x8c                  	// #140
  409a58:	strb	w9, [x8, #14]
  409a5c:	mov	w9, #0x4f                  	// #79
  409a60:	strb	w9, [x8, #15]
  409a64:	ldur	x3, [x29, #-32]
  409a68:	ldur	x4, [x29, #-56]
  409a6c:	ldr	x0, [sp, #168]
  409a70:	ldr	x1, [sp, #176]
  409a74:	adrp	x2, 40f000 <__fxstat64@plt+0xbf88>
  409a78:	add	x2, x2, #0xa97
  409a7c:	bl	402ba8 <efi_set_variable@plt>
  409a80:	stur	w0, [x29, #-76]
  409a84:	ldur	w9, [x29, #-76]
  409a88:	cmp	w9, #0x0
  409a8c:	cset	w9, ge  // ge = tcont
  409a90:	tbnz	w9, #0, 409c38 <__fxstat64@plt+0x6bc0>
  409a94:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  409a98:	add	x8, x8, #0x28
  409a9c:	ldrb	w9, [x8]
  409aa0:	tbnz	w9, #0, 409b30 <__fxstat64@plt+0x6ab8>
  409aa4:	mov	w8, #0x3                   	// #3
  409aa8:	str	w8, [sp, #164]
  409aac:	ldur	w8, [x29, #-76]
  409ab0:	str	w8, [sp, #160]
  409ab4:	str	wzr, [sp, #156]
  409ab8:	ldr	w0, [sp, #156]
  409abc:	bl	4029d8 <log_get_max_level_realm@plt>
  409ac0:	ldr	w8, [sp, #164]
  409ac4:	and	w8, w8, #0x7
  409ac8:	cmp	w0, w8
  409acc:	b.lt	409b00 <__fxstat64@plt+0x6a88>  // b.tstop
  409ad0:	ldr	w8, [sp, #156]
  409ad4:	ldr	w9, [sp, #164]
  409ad8:	orr	w0, w9, w8, lsl #10
  409adc:	ldr	w1, [sp, #160]
  409ae0:	ldr	x2, [sp, #96]
  409ae4:	mov	w3, #0x5c0                 	// #1472
  409ae8:	ldr	x4, [sp, #88]
  409aec:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409af0:	add	x5, x5, #0xb51
  409af4:	bl	4029e8 <log_internal_realm@plt>
  409af8:	str	w0, [sp, #24]
  409afc:	b	409b14 <__fxstat64@plt+0x6a9c>
  409b00:	ldr	w0, [sp, #160]
  409b04:	bl	4029f8 <abs@plt>
  409b08:	mov	w8, wzr
  409b0c:	subs	w8, w8, w0, uxtb
  409b10:	str	w8, [sp, #24]
  409b14:	ldr	w8, [sp, #24]
  409b18:	str	w8, [sp, #152]
  409b1c:	ldr	w8, [sp, #152]
  409b20:	stur	w8, [x29, #-4]
  409b24:	mov	w8, #0x1                   	// #1
  409b28:	stur	w8, [x29, #-80]
  409b2c:	b	409cc0 <__fxstat64@plt+0x6c48>
  409b30:	ldur	w8, [x29, #-76]
  409b34:	mov	w9, #0xffffffea            	// #-22
  409b38:	cmp	w8, w9
  409b3c:	b.ne	409bbc <__fxstat64@plt+0x6b44>  // b.any
  409b40:	mov	w8, #0x4                   	// #4
  409b44:	str	w8, [sp, #148]
  409b48:	ldur	w8, [x29, #-76]
  409b4c:	str	w8, [sp, #144]
  409b50:	str	wzr, [sp, #140]
  409b54:	ldr	w0, [sp, #140]
  409b58:	bl	4029d8 <log_get_max_level_realm@plt>
  409b5c:	ldr	w8, [sp, #148]
  409b60:	and	w8, w8, #0x7
  409b64:	cmp	w0, w8
  409b68:	b.lt	409b9c <__fxstat64@plt+0x6b24>  // b.tstop
  409b6c:	ldr	w8, [sp, #140]
  409b70:	ldr	w9, [sp, #148]
  409b74:	orr	w0, w9, w8, lsl #10
  409b78:	ldr	w1, [sp, #144]
  409b7c:	ldr	x2, [sp, #96]
  409b80:	mov	w3, #0x5c3                 	// #1475
  409b84:	ldr	x4, [sp, #88]
  409b88:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409b8c:	add	x5, x5, #0xb86
  409b90:	bl	4029e8 <log_internal_realm@plt>
  409b94:	str	w0, [sp, #20]
  409b98:	b	409bb0 <__fxstat64@plt+0x6b38>
  409b9c:	ldr	w0, [sp, #144]
  409ba0:	bl	4029f8 <abs@plt>
  409ba4:	mov	w8, wzr
  409ba8:	subs	w8, w8, w0, uxtb
  409bac:	str	w8, [sp, #20]
  409bb0:	ldr	w8, [sp, #20]
  409bb4:	str	w8, [sp, #136]
  409bb8:	b	409c34 <__fxstat64@plt+0x6bbc>
  409bbc:	mov	w8, #0x4                   	// #4
  409bc0:	str	w8, [sp, #132]
  409bc4:	ldur	w8, [x29, #-76]
  409bc8:	str	w8, [sp, #128]
  409bcc:	str	wzr, [sp, #124]
  409bd0:	ldr	w0, [sp, #124]
  409bd4:	bl	4029d8 <log_get_max_level_realm@plt>
  409bd8:	ldr	w8, [sp, #132]
  409bdc:	and	w8, w8, #0x7
  409be0:	cmp	w0, w8
  409be4:	b.lt	409c18 <__fxstat64@plt+0x6ba0>  // b.tstop
  409be8:	ldr	w8, [sp, #124]
  409bec:	ldr	w9, [sp, #132]
  409bf0:	orr	w0, w9, w8, lsl #10
  409bf4:	ldr	w1, [sp, #128]
  409bf8:	ldr	x2, [sp, #96]
  409bfc:	mov	w3, #0x5c5                 	// #1477
  409c00:	ldr	x4, [sp, #88]
  409c04:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409c08:	add	x5, x5, #0xbd9
  409c0c:	bl	4029e8 <log_internal_realm@plt>
  409c10:	str	w0, [sp, #16]
  409c14:	b	409c2c <__fxstat64@plt+0x6bb4>
  409c18:	ldr	w0, [sp, #128]
  409c1c:	bl	4029f8 <abs@plt>
  409c20:	mov	w8, wzr
  409c24:	subs	w8, w8, w0, uxtb
  409c28:	str	w8, [sp, #16]
  409c2c:	ldr	w8, [sp, #16]
  409c30:	str	w8, [sp, #120]
  409c34:	b	409cb0 <__fxstat64@plt+0x6c38>
  409c38:	mov	w8, #0x6                   	// #6
  409c3c:	str	w8, [sp, #116]
  409c40:	str	wzr, [sp, #112]
  409c44:	str	wzr, [sp, #108]
  409c48:	ldr	w0, [sp, #108]
  409c4c:	bl	4029d8 <log_get_max_level_realm@plt>
  409c50:	ldr	w8, [sp, #116]
  409c54:	and	w8, w8, #0x7
  409c58:	cmp	w0, w8
  409c5c:	b.lt	409c94 <__fxstat64@plt+0x6c1c>  // b.tstop
  409c60:	ldr	w8, [sp, #108]
  409c64:	ldr	w9, [sp, #116]
  409c68:	orr	w0, w9, w8, lsl #10
  409c6c:	ldr	w1, [sp, #112]
  409c70:	ldur	x6, [x29, #-56]
  409c74:	ldr	x2, [sp, #96]
  409c78:	mov	w3, #0x5c7                 	// #1479
  409c7c:	ldr	x4, [sp, #88]
  409c80:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409c84:	add	x5, x5, #0xc18
  409c88:	bl	4029e8 <log_internal_realm@plt>
  409c8c:	str	w0, [sp, #12]
  409c90:	b	409ca8 <__fxstat64@plt+0x6c30>
  409c94:	ldr	w0, [sp, #112]
  409c98:	bl	4029f8 <abs@plt>
  409c9c:	mov	w8, wzr
  409ca0:	subs	w8, w8, w0, uxtb
  409ca4:	str	w8, [sp, #12]
  409ca8:	ldr	w8, [sp, #12]
  409cac:	str	w8, [sp, #104]
  409cb0:	ldr	w8, [sp, #188]
  409cb4:	and	w8, w8, #0x1ff
  409cb8:	str	w8, [sp, #188]
  409cbc:	b	4099c4 <__fxstat64@plt+0x694c>
  409cc0:	add	x0, sp, #0xbc
  409cc4:	bl	40840c <__fxstat64@plt+0x5394>
  409cc8:	ldur	w8, [x29, #-80]
  409ccc:	cmp	w8, #0x4
  409cd0:	cset	w8, eq  // eq = none
  409cd4:	eor	w8, w8, #0x1
  409cd8:	tbnz	w8, #0, 409cec <__fxstat64@plt+0x6c74>
  409cdc:	b	409ce0 <__fxstat64@plt+0x6c68>
  409ce0:	stur	wzr, [x29, #-4]
  409ce4:	mov	w8, #0x1                   	// #1
  409ce8:	stur	w8, [x29, #-80]
  409cec:	sub	x0, x29, #0x2c
  409cf0:	bl	407550 <__fxstat64@plt+0x44d8>
  409cf4:	sub	x0, x29, #0x28
  409cf8:	bl	403464 <__fxstat64@plt+0x3ec>
  409cfc:	sub	x0, x29, #0x20
  409d00:	bl	403464 <__fxstat64@plt+0x3ec>
  409d04:	sub	x0, x29, #0x18
  409d08:	bl	40bd18 <__fxstat64@plt+0x8ca0>
  409d0c:	ldur	w0, [x29, #-4]
  409d10:	add	sp, sp, #0x210
  409d14:	ldr	x28, [sp, #16]
  409d18:	ldp	x29, x30, [sp], #32
  409d1c:	ret
  409d20:	sub	sp, sp, #0x60
  409d24:	stp	x29, x30, [sp, #80]
  409d28:	add	x29, sp, #0x50
  409d2c:	adrp	x8, 430000 <__fxstat64@plt+0x2cf88>
  409d30:	add	x8, x8, #0x10
  409d34:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  409d38:	add	x9, x9, #0xf88
  409d3c:	add	x9, x9, #0x3
  409d40:	adrp	x10, 430000 <__fxstat64@plt+0x2cf88>
  409d44:	add	x10, x10, #0x18
  409d48:	stur	wzr, [x29, #-4]
  409d4c:	ldr	x11, [x8]
  409d50:	str	x8, [sp, #32]
  409d54:	str	x9, [sp, #24]
  409d58:	str	x10, [sp, #16]
  409d5c:	cbz	x11, 409e10 <__fxstat64@plt+0x6d98>
  409d60:	ldr	x8, [sp, #32]
  409d64:	ldr	x1, [x8]
  409d68:	mov	w0, #0xffffff9c            	// #-100
  409d6c:	bl	402eb8 <syncfs_path@plt>
  409d70:	stur	w0, [x29, #-8]
  409d74:	ldur	w9, [x29, #-8]
  409d78:	cmp	w9, #0x0
  409d7c:	cset	w9, ge  // ge = tcont
  409d80:	tbnz	w9, #0, 409e10 <__fxstat64@plt+0x6d98>
  409d84:	mov	w8, #0x3                   	// #3
  409d88:	stur	w8, [x29, #-12]
  409d8c:	ldur	w8, [x29, #-8]
  409d90:	stur	w8, [x29, #-16]
  409d94:	stur	wzr, [x29, #-20]
  409d98:	ldur	w0, [x29, #-20]
  409d9c:	bl	4029d8 <log_get_max_level_realm@plt>
  409da0:	ldur	w8, [x29, #-12]
  409da4:	and	w8, w8, #0x7
  409da8:	cmp	w0, w8
  409dac:	b.lt	409dec <__fxstat64@plt+0x6d74>  // b.tstop
  409db0:	ldur	w8, [x29, #-20]
  409db4:	ldur	w9, [x29, #-12]
  409db8:	orr	w0, w9, w8, lsl #10
  409dbc:	ldur	w1, [x29, #-16]
  409dc0:	ldr	x10, [sp, #32]
  409dc4:	ldr	x6, [x10]
  409dc8:	ldr	x2, [sp, #24]
  409dcc:	mov	w3, #0x5d3                 	// #1491
  409dd0:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  409dd4:	add	x4, x4, #0xc5e
  409dd8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409ddc:	add	x5, x5, #0xc6e
  409de0:	bl	4029e8 <log_internal_realm@plt>
  409de4:	str	w0, [sp, #12]
  409de8:	b	409e00 <__fxstat64@plt+0x6d88>
  409dec:	ldur	w0, [x29, #-16]
  409df0:	bl	4029f8 <abs@plt>
  409df4:	mov	w8, wzr
  409df8:	subs	w8, w8, w0, uxtb
  409dfc:	str	w8, [sp, #12]
  409e00:	ldr	w8, [sp, #12]
  409e04:	stur	w8, [x29, #-24]
  409e08:	ldur	w8, [x29, #-24]
  409e0c:	stur	w8, [x29, #-4]
  409e10:	ldr	x8, [sp, #16]
  409e14:	ldr	x9, [x8]
  409e18:	cbz	x9, 409ecc <__fxstat64@plt+0x6e54>
  409e1c:	ldr	x8, [sp, #16]
  409e20:	ldr	x1, [x8]
  409e24:	mov	w0, #0xffffff9c            	// #-100
  409e28:	bl	402eb8 <syncfs_path@plt>
  409e2c:	stur	w0, [x29, #-8]
  409e30:	ldur	w9, [x29, #-8]
  409e34:	cmp	w9, #0x0
  409e38:	cset	w9, ge  // ge = tcont
  409e3c:	tbnz	w9, #0, 409ecc <__fxstat64@plt+0x6e54>
  409e40:	mov	w8, #0x3                   	// #3
  409e44:	stur	w8, [x29, #-28]
  409e48:	ldur	w8, [x29, #-8]
  409e4c:	stur	w8, [x29, #-32]
  409e50:	stur	wzr, [x29, #-36]
  409e54:	ldur	w0, [x29, #-36]
  409e58:	bl	4029d8 <log_get_max_level_realm@plt>
  409e5c:	ldur	w8, [x29, #-28]
  409e60:	and	w8, w8, #0x7
  409e64:	cmp	w0, w8
  409e68:	b.lt	409ea8 <__fxstat64@plt+0x6e30>  // b.tstop
  409e6c:	ldur	w8, [x29, #-36]
  409e70:	ldur	w9, [x29, #-28]
  409e74:	orr	w0, w9, w8, lsl #10
  409e78:	ldur	w1, [x29, #-32]
  409e7c:	ldr	x10, [sp, #16]
  409e80:	ldr	x6, [x10]
  409e84:	ldr	x2, [sp, #24]
  409e88:	mov	w3, #0x5d9                 	// #1497
  409e8c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  409e90:	add	x4, x4, #0xc5e
  409e94:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409e98:	add	x5, x5, #0xc95
  409e9c:	bl	4029e8 <log_internal_realm@plt>
  409ea0:	str	w0, [sp, #8]
  409ea4:	b	409ebc <__fxstat64@plt+0x6e44>
  409ea8:	ldur	w0, [x29, #-32]
  409eac:	bl	4029f8 <abs@plt>
  409eb0:	mov	w8, wzr
  409eb4:	subs	w8, w8, w0, uxtb
  409eb8:	str	w8, [sp, #8]
  409ebc:	ldr	w8, [sp, #8]
  409ec0:	str	w8, [sp, #40]
  409ec4:	ldr	w8, [sp, #40]
  409ec8:	stur	w8, [x29, #-4]
  409ecc:	ldur	w0, [x29, #-4]
  409ed0:	ldp	x29, x30, [sp, #80]
  409ed4:	add	sp, sp, #0x60
  409ed8:	ret
  409edc:	stp	x29, x30, [sp, #-32]!
  409ee0:	str	x28, [sp, #16]
  409ee4:	mov	x29, sp
  409ee8:	sub	sp, sp, #0x130
  409eec:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  409ef0:	add	x8, x8, #0xf88
  409ef4:	add	x8, x8, #0x3
  409ef8:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  409efc:	add	x9, x9, #0xcba
  409f00:	stur	x4, [x29, #-24]
  409f04:	stur	x5, [x29, #-16]
  409f08:	stur	x0, [x29, #-32]
  409f0c:	stur	w1, [x29, #-36]
  409f10:	stur	x2, [x29, #-48]
  409f14:	stur	x3, [x29, #-56]
  409f18:	stur	x6, [x29, #-64]
  409f1c:	and	w10, w7, #0x1
  409f20:	sturb	w10, [x29, #-65]
  409f24:	stur	x8, [x29, #-248]
  409f28:	stur	x9, [x29, #-256]
  409f2c:	bl	402a88 <is_efi_boot@plt>
  409f30:	tbnz	w0, #0, 409fbc <__fxstat64@plt+0x6f44>
  409f34:	mov	w8, #0x4                   	// #4
  409f38:	stur	w8, [x29, #-92]
  409f3c:	stur	wzr, [x29, #-96]
  409f40:	stur	wzr, [x29, #-100]
  409f44:	ldur	w0, [x29, #-100]
  409f48:	bl	4029d8 <log_get_max_level_realm@plt>
  409f4c:	ldur	w8, [x29, #-92]
  409f50:	and	w8, w8, #0x7
  409f54:	cmp	w0, w8
  409f58:	b.lt	409f90 <__fxstat64@plt+0x6f18>  // b.tstop
  409f5c:	ldur	w8, [x29, #-100]
  409f60:	ldur	w9, [x29, #-92]
  409f64:	orr	w0, w9, w8, lsl #10
  409f68:	ldur	w1, [x29, #-96]
  409f6c:	ldur	x2, [x29, #-248]
  409f70:	mov	w3, #0x30d                 	// #781
  409f74:	ldur	x4, [x29, #-256]
  409f78:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  409f7c:	add	x5, x5, #0x974
  409f80:	bl	4029e8 <log_internal_realm@plt>
  409f84:	sub	x8, x29, #0x4
  409f88:	stur	w0, [x8, #-256]
  409f8c:	b	409fa8 <__fxstat64@plt+0x6f30>
  409f90:	ldur	w0, [x29, #-96]
  409f94:	bl	4029f8 <abs@plt>
  409f98:	mov	w8, wzr
  409f9c:	subs	w8, w8, w0, uxtb
  409fa0:	sub	x9, x29, #0x4
  409fa4:	stur	w8, [x9, #-256]
  409fa8:	sub	x8, x29, #0x4
  409fac:	ldur	w8, [x8, #-256]
  409fb0:	stur	w8, [x29, #-104]
  409fb4:	stur	wzr, [x29, #-4]
  409fb8:	b	40a50c <__fxstat64@plt+0x7494>
  409fbc:	ldur	x8, [x29, #-64]
  409fc0:	stur	x8, [x29, #-112]
  409fc4:	ldur	x8, [x29, #-32]
  409fc8:	stur	x8, [x29, #-120]
  409fcc:	ldur	x8, [x29, #-112]
  409fd0:	ldrb	w9, [x8]
  409fd4:	mov	w10, #0x0                   	// #0
  409fd8:	cmp	w9, #0x2f
  409fdc:	sub	x8, x29, #0x8
  409fe0:	stur	w10, [x8, #-256]
  409fe4:	b.ne	40a000 <__fxstat64@plt+0x6f88>  // b.any
  409fe8:	ldur	x8, [x29, #-112]
  409fec:	ldrb	w9, [x8, #1]
  409ff0:	cmp	w9, #0x2f
  409ff4:	cset	w9, eq  // eq = none
  409ff8:	sub	x8, x29, #0x8
  409ffc:	stur	w9, [x8, #-256]
  40a000:	sub	x8, x29, #0x8
  40a004:	ldur	w8, [x8, #-256]
  40a008:	tbnz	w8, #0, 40a010 <__fxstat64@plt+0x6f98>
  40a00c:	b	40a020 <__fxstat64@plt+0x6fa8>
  40a010:	ldur	x8, [x29, #-112]
  40a014:	add	x8, x8, #0x1
  40a018:	stur	x8, [x29, #-112]
  40a01c:	b	409fcc <__fxstat64@plt+0x6f54>
  40a020:	ldur	x0, [x29, #-120]
  40a024:	bl	4074a8 <__fxstat64@plt+0x4430>
  40a028:	tbnz	w0, #0, 40a030 <__fxstat64@plt+0x6fb8>
  40a02c:	b	40a03c <__fxstat64@plt+0x6fc4>
  40a030:	ldur	x8, [x29, #-112]
  40a034:	stur	x8, [x29, #-128]
  40a038:	b	40a1f0 <__fxstat64@plt+0x7178>
  40a03c:	ldur	x0, [x29, #-120]
  40a040:	bl	402bb8 <strlen@plt>
  40a044:	add	x8, x0, #0x1
  40a048:	ldur	x0, [x29, #-112]
  40a04c:	sub	x9, x29, #0x10
  40a050:	stur	x8, [x9, #-256]
  40a054:	bl	402bb8 <strlen@plt>
  40a058:	sub	x8, x29, #0x10
  40a05c:	ldur	x8, [x8, #-256]
  40a060:	add	x9, x8, x0
  40a064:	add	x9, x9, #0x1
  40a068:	stur	x9, [x29, #-152]
  40a06c:	ldur	x9, [x29, #-152]
  40a070:	stur	x9, [x29, #-160]
  40a074:	ldur	x1, [x29, #-160]
  40a078:	mov	x0, #0x1                   	// #1
  40a07c:	bl	4074e8 <__fxstat64@plt+0x4470>
  40a080:	mov	w8, #0x1                   	// #1
  40a084:	eor	w9, w0, #0x1
  40a088:	eor	w9, w9, w8
  40a08c:	eor	w9, w9, w8
  40a090:	eor	w8, w9, w8
  40a094:	and	w8, w8, #0x1
  40a098:	mov	w1, w8
  40a09c:	sxtw	x10, w1
  40a0a0:	cbz	x10, 40a0c8 <__fxstat64@plt+0x7050>
  40a0a4:	mov	w8, wzr
  40a0a8:	mov	w0, w8
  40a0ac:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40a0b0:	add	x1, x1, #0xd6d
  40a0b4:	ldur	x2, [x29, #-248]
  40a0b8:	mov	w3, #0x311                 	// #785
  40a0bc:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40a0c0:	add	x4, x4, #0xccc
  40a0c4:	bl	402988 <log_assert_failed_realm@plt>
  40a0c8:	ldur	x8, [x29, #-160]
  40a0cc:	mov	x9, #0x1                   	// #1
  40a0d0:	mul	x8, x9, x8
  40a0d4:	cmp	x8, #0x400, lsl #12
  40a0d8:	cset	w10, ls  // ls = plast
  40a0dc:	mov	w11, #0x1                   	// #1
  40a0e0:	eor	w10, w10, #0x1
  40a0e4:	eor	w10, w10, w11
  40a0e8:	eor	w10, w10, w11
  40a0ec:	and	w10, w10, #0x1
  40a0f0:	mov	w0, w10
  40a0f4:	sxtw	x8, w0
  40a0f8:	cbz	x8, 40a120 <__fxstat64@plt+0x70a8>
  40a0fc:	mov	w8, wzr
  40a100:	mov	w0, w8
  40a104:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40a108:	add	x1, x1, #0xd98
  40a10c:	ldur	x2, [x29, #-248]
  40a110:	mov	w3, #0x311                 	// #785
  40a114:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40a118:	add	x4, x4, #0xccc
  40a11c:	bl	402988 <log_assert_failed_realm@plt>
  40a120:	ldur	x8, [x29, #-160]
  40a124:	mov	x9, #0x1                   	// #1
  40a128:	mul	x8, x9, x8
  40a12c:	mul	x8, x8, x9
  40a130:	add	x8, x8, #0xf
  40a134:	and	x8, x8, #0xfffffffffffffff0
  40a138:	mov	x9, sp
  40a13c:	subs	x8, x9, x8
  40a140:	mov	sp, x8
  40a144:	stur	x8, [x29, #-168]
  40a148:	ldur	x8, [x29, #-168]
  40a14c:	stur	x8, [x29, #-144]
  40a150:	ldur	x0, [x29, #-144]
  40a154:	ldur	x1, [x29, #-120]
  40a158:	bl	402c58 <stpcpy@plt>
  40a15c:	stur	x0, [x29, #-136]
  40a160:	ldur	x8, [x29, #-136]
  40a164:	ldur	x9, [x29, #-144]
  40a168:	mov	w10, #0x0                   	// #0
  40a16c:	cmp	x8, x9
  40a170:	sub	x8, x29, #0x14
  40a174:	stur	w10, [x8, #-256]
  40a178:	b.ls	40a194 <__fxstat64@plt+0x711c>  // b.plast
  40a17c:	ldur	x8, [x29, #-136]
  40a180:	ldurb	w9, [x8, #-1]
  40a184:	cmp	w9, #0x2f
  40a188:	cset	w9, eq  // eq = none
  40a18c:	sub	x8, x29, #0x14
  40a190:	stur	w9, [x8, #-256]
  40a194:	sub	x8, x29, #0x14
  40a198:	ldur	w8, [x8, #-256]
  40a19c:	tbnz	w8, #0, 40a1a4 <__fxstat64@plt+0x712c>
  40a1a0:	b	40a1b8 <__fxstat64@plt+0x7140>
  40a1a4:	ldur	x8, [x29, #-136]
  40a1a8:	mov	x9, #0xffffffffffffffff    	// #-1
  40a1ac:	add	x8, x8, x9
  40a1b0:	stur	x8, [x29, #-136]
  40a1b4:	b	40a160 <__fxstat64@plt+0x70e8>
  40a1b8:	ldur	x8, [x29, #-112]
  40a1bc:	ldrb	w9, [x8]
  40a1c0:	cmp	w9, #0x2f
  40a1c4:	b.eq	40a1dc <__fxstat64@plt+0x7164>  // b.none
  40a1c8:	ldur	x8, [x29, #-136]
  40a1cc:	add	x9, x8, #0x1
  40a1d0:	stur	x9, [x29, #-136]
  40a1d4:	mov	w10, #0x2f                  	// #47
  40a1d8:	strb	w10, [x8]
  40a1dc:	ldur	x0, [x29, #-136]
  40a1e0:	ldur	x1, [x29, #-112]
  40a1e4:	bl	402c68 <strcpy@plt>
  40a1e8:	ldur	x8, [x29, #-144]
  40a1ec:	stur	x8, [x29, #-128]
  40a1f0:	ldur	x8, [x29, #-128]
  40a1f4:	stur	x8, [x29, #-176]
  40a1f8:	ldur	x8, [x29, #-176]
  40a1fc:	stur	x8, [x29, #-80]
  40a200:	ldur	x0, [x29, #-80]
  40a204:	mov	w9, wzr
  40a208:	mov	w1, w9
  40a20c:	bl	402af8 <access@plt>
  40a210:	cmp	w0, #0x0
  40a214:	cset	w9, ge  // ge = tcont
  40a218:	tbnz	w9, #0, 40a2cc <__fxstat64@plt+0x7254>
  40a21c:	bl	402b98 <__errno_location@plt>
  40a220:	ldr	w8, [x0]
  40a224:	cmp	w8, #0x2
  40a228:	b.ne	40a234 <__fxstat64@plt+0x71bc>  // b.any
  40a22c:	stur	wzr, [x29, #-4]
  40a230:	b	40a50c <__fxstat64@plt+0x7494>
  40a234:	mov	w8, #0x3                   	// #3
  40a238:	stur	w8, [x29, #-180]
  40a23c:	bl	402b98 <__errno_location@plt>
  40a240:	ldr	w8, [x0]
  40a244:	stur	w8, [x29, #-184]
  40a248:	stur	wzr, [x29, #-188]
  40a24c:	ldur	w0, [x29, #-188]
  40a250:	bl	4029d8 <log_get_max_level_realm@plt>
  40a254:	ldur	w8, [x29, #-180]
  40a258:	and	w8, w8, #0x7
  40a25c:	cmp	w0, w8
  40a260:	b.lt	40a29c <__fxstat64@plt+0x7224>  // b.tstop
  40a264:	ldur	w8, [x29, #-188]
  40a268:	ldur	w9, [x29, #-180]
  40a26c:	orr	w0, w9, w8, lsl #10
  40a270:	ldur	w1, [x29, #-184]
  40a274:	ldur	x6, [x29, #-80]
  40a278:	ldur	x2, [x29, #-248]
  40a27c:	mov	w3, #0x316                 	// #790
  40a280:	ldur	x4, [x29, #-256]
  40a284:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40a288:	add	x5, x5, #0xd2f
  40a28c:	bl	4029e8 <log_internal_realm@plt>
  40a290:	sub	x8, x29, #0x18
  40a294:	stur	w0, [x8, #-256]
  40a298:	b	40a2b4 <__fxstat64@plt+0x723c>
  40a29c:	ldur	w0, [x29, #-184]
  40a2a0:	bl	4029f8 <abs@plt>
  40a2a4:	mov	w8, wzr
  40a2a8:	subs	w8, w8, w0, uxtb
  40a2ac:	sub	x9, x29, #0x18
  40a2b0:	stur	w8, [x9, #-256]
  40a2b4:	sub	x8, x29, #0x18
  40a2b8:	ldur	w8, [x8, #-256]
  40a2bc:	stur	w8, [x29, #-192]
  40a2c0:	ldur	w8, [x29, #-192]
  40a2c4:	stur	w8, [x29, #-4]
  40a2c8:	b	40a50c <__fxstat64@plt+0x7494>
  40a2cc:	ldur	x2, [x29, #-64]
  40a2d0:	ldur	x0, [x29, #-24]
  40a2d4:	ldur	x1, [x29, #-16]
  40a2d8:	sub	x3, x29, #0x52
  40a2dc:	bl	40bda4 <__fxstat64@plt+0x8d2c>
  40a2e0:	stur	w0, [x29, #-88]
  40a2e4:	ldur	w8, [x29, #-88]
  40a2e8:	cmp	w8, #0x0
  40a2ec:	cset	w8, ge  // ge = tcont
  40a2f0:	tbnz	w8, #0, 40a39c <__fxstat64@plt+0x7324>
  40a2f4:	mov	w8, #0x3                   	// #3
  40a2f8:	stur	w8, [x29, #-196]
  40a2fc:	ldur	w8, [x29, #-88]
  40a300:	stur	w8, [x29, #-200]
  40a304:	stur	wzr, [x29, #-204]
  40a308:	ldur	w0, [x29, #-204]
  40a30c:	bl	4029d8 <log_get_max_level_realm@plt>
  40a310:	ldur	w8, [x29, #-196]
  40a314:	and	w8, w8, #0x7
  40a318:	cmp	w0, w8
  40a31c:	b.lt	40a36c <__fxstat64@plt+0x72f4>  // b.tstop
  40a320:	ldur	w8, [x29, #-204]
  40a324:	ldur	w9, [x29, #-196]
  40a328:	orr	w0, w9, w8, lsl #10
  40a32c:	ldur	w1, [x29, #-200]
  40a330:	ldur	w8, [x29, #-88]
  40a334:	mov	w9, #0xfffffffe            	// #-2
  40a338:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  40a33c:	add	x10, x10, #0xd8c
  40a340:	adrp	x11, 40f000 <__fxstat64@plt+0xbf88>
  40a344:	add	x11, x11, #0xd46
  40a348:	cmp	w8, w9
  40a34c:	csel	x5, x11, x10, eq  // eq = none
  40a350:	ldur	x2, [x29, #-248]
  40a354:	mov	w3, #0x31e                 	// #798
  40a358:	ldur	x4, [x29, #-256]
  40a35c:	bl	4029e8 <log_internal_realm@plt>
  40a360:	sub	x8, x29, #0x1c
  40a364:	stur	w0, [x8, #-256]
  40a368:	b	40a384 <__fxstat64@plt+0x730c>
  40a36c:	ldur	w0, [x29, #-200]
  40a370:	bl	4029f8 <abs@plt>
  40a374:	mov	w8, wzr
  40a378:	subs	w8, w8, w0, uxtb
  40a37c:	sub	x9, x29, #0x1c
  40a380:	stur	w8, [x9, #-256]
  40a384:	sub	x8, x29, #0x1c
  40a388:	ldur	w8, [x8, #-256]
  40a38c:	stur	w8, [x29, #-208]
  40a390:	ldur	w8, [x29, #-208]
  40a394:	stur	w8, [x29, #-4]
  40a398:	b	40a50c <__fxstat64@plt+0x7494>
  40a39c:	ldurb	w8, [x29, #-65]
  40a3a0:	tbnz	w8, #0, 40a3ac <__fxstat64@plt+0x7334>
  40a3a4:	ldur	w8, [x29, #-88]
  40a3a8:	cbnz	w8, 40a4f8 <__fxstat64@plt+0x7480>
  40a3ac:	ldurh	w0, [x29, #-82]
  40a3b0:	ldur	w2, [x29, #-36]
  40a3b4:	ldur	x3, [x29, #-48]
  40a3b8:	ldur	x4, [x29, #-56]
  40a3bc:	ldur	x7, [x29, #-64]
  40a3c0:	ldur	x5, [x29, #-24]
  40a3c4:	ldur	x6, [x29, #-16]
  40a3c8:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40a3cc:	add	x1, x1, #0xdb7
  40a3d0:	bl	402ec8 <efi_add_boot_option@plt>
  40a3d4:	stur	w0, [x29, #-88]
  40a3d8:	ldur	w8, [x29, #-88]
  40a3dc:	cmp	w8, #0x0
  40a3e0:	cset	w8, ge  // ge = tcont
  40a3e4:	tbnz	w8, #0, 40a478 <__fxstat64@plt+0x7400>
  40a3e8:	mov	w8, #0x3                   	// #3
  40a3ec:	stur	w8, [x29, #-212]
  40a3f0:	ldur	w8, [x29, #-88]
  40a3f4:	stur	w8, [x29, #-216]
  40a3f8:	stur	wzr, [x29, #-220]
  40a3fc:	ldur	w0, [x29, #-220]
  40a400:	bl	4029d8 <log_get_max_level_realm@plt>
  40a404:	ldur	w8, [x29, #-212]
  40a408:	and	w8, w8, #0x7
  40a40c:	cmp	w0, w8
  40a410:	b.lt	40a448 <__fxstat64@plt+0x73d0>  // b.tstop
  40a414:	ldur	w8, [x29, #-220]
  40a418:	ldur	w9, [x29, #-212]
  40a41c:	orr	w0, w9, w8, lsl #10
  40a420:	ldur	w1, [x29, #-216]
  40a424:	ldur	x2, [x29, #-248]
  40a428:	mov	w3, #0x325                 	// #805
  40a42c:	ldur	x4, [x29, #-256]
  40a430:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40a434:	add	x5, x5, #0xdca
  40a438:	bl	4029e8 <log_internal_realm@plt>
  40a43c:	sub	x8, x29, #0x20
  40a440:	stur	w0, [x8, #-256]
  40a444:	b	40a460 <__fxstat64@plt+0x73e8>
  40a448:	ldur	w0, [x29, #-216]
  40a44c:	bl	4029f8 <abs@plt>
  40a450:	mov	w8, wzr
  40a454:	subs	w8, w8, w0, uxtb
  40a458:	sub	x9, x29, #0x20
  40a45c:	stur	w8, [x9, #-256]
  40a460:	sub	x8, x29, #0x20
  40a464:	ldur	w8, [x8, #-256]
  40a468:	stur	w8, [x29, #-224]
  40a46c:	ldur	w8, [x29, #-224]
  40a470:	stur	w8, [x29, #-4]
  40a474:	b	40a50c <__fxstat64@plt+0x7494>
  40a478:	mov	w8, #0x6                   	// #6
  40a47c:	stur	w8, [x29, #-228]
  40a480:	stur	wzr, [x29, #-232]
  40a484:	stur	wzr, [x29, #-236]
  40a488:	ldur	w0, [x29, #-236]
  40a48c:	bl	4029d8 <log_get_max_level_realm@plt>
  40a490:	ldur	w8, [x29, #-228]
  40a494:	and	w8, w8, #0x7
  40a498:	cmp	w0, w8
  40a49c:	b.lt	40a4d4 <__fxstat64@plt+0x745c>  // b.tstop
  40a4a0:	ldur	w8, [x29, #-236]
  40a4a4:	ldur	w9, [x29, #-228]
  40a4a8:	orr	w0, w9, w8, lsl #10
  40a4ac:	ldur	w1, [x29, #-232]
  40a4b0:	ldur	x2, [x29, #-248]
  40a4b4:	mov	w3, #0x327                 	// #807
  40a4b8:	ldur	x4, [x29, #-256]
  40a4bc:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40a4c0:	add	x5, x5, #0xdf7
  40a4c4:	bl	4029e8 <log_internal_realm@plt>
  40a4c8:	sub	x8, x29, #0x24
  40a4cc:	stur	w0, [x8, #-256]
  40a4d0:	b	40a4ec <__fxstat64@plt+0x7474>
  40a4d4:	ldur	w0, [x29, #-232]
  40a4d8:	bl	4029f8 <abs@plt>
  40a4dc:	mov	w8, wzr
  40a4e0:	subs	w8, w8, w0, uxtb
  40a4e4:	sub	x9, x29, #0x24
  40a4e8:	stur	w8, [x9, #-256]
  40a4ec:	sub	x8, x29, #0x24
  40a4f0:	ldur	w8, [x8, #-256]
  40a4f4:	stur	w8, [x29, #-240]
  40a4f8:	ldurh	w0, [x29, #-82]
  40a4fc:	ldurb	w8, [x29, #-65]
  40a500:	and	w1, w8, #0x1
  40a504:	bl	40bf20 <__fxstat64@plt+0x8ea8>
  40a508:	stur	w0, [x29, #-4]
  40a50c:	ldur	w0, [x29, #-4]
  40a510:	mov	sp, x29
  40a514:	ldr	x28, [sp, #16]
  40a518:	ldp	x29, x30, [sp], #32
  40a51c:	ret
  40a520:	sub	sp, sp, #0x70
  40a524:	stp	x29, x30, [sp, #96]
  40a528:	add	x29, sp, #0x60
  40a52c:	mov	x8, xzr
  40a530:	mov	x9, #0xffffffffffffffff    	// #-1
  40a534:	mov	w10, #0x1c0                 	// #448
  40a538:	adrp	x11, 40d000 <__fxstat64@plt+0x9f88>
  40a53c:	add	x11, x11, #0xf88
  40a540:	add	x11, x11, #0x3
  40a544:	stur	x0, [x29, #-16]
  40a548:	stur	x1, [x29, #-24]
  40a54c:	stur	x8, [x29, #-32]
  40a550:	ldur	x0, [x29, #-16]
  40a554:	ldur	x1, [x29, #-24]
  40a558:	mov	x2, x9
  40a55c:	str	w10, [sp, #24]
  40a560:	str	x11, [sp, #16]
  40a564:	bl	402b08 <path_join_internal@plt>
  40a568:	stur	x0, [x29, #-32]
  40a56c:	ldur	x0, [x29, #-32]
  40a570:	ldr	w1, [sp, #24]
  40a574:	bl	402ed8 <mkdir@plt>
  40a578:	cmp	w0, #0x0
  40a57c:	cset	w10, ge  // ge = tcont
  40a580:	tbnz	w10, #0, 40a630 <__fxstat64@plt+0x75b8>
  40a584:	bl	402b98 <__errno_location@plt>
  40a588:	ldr	w8, [x0]
  40a58c:	cmp	w8, #0x11
  40a590:	b.eq	40a62c <__fxstat64@plt+0x75b4>  // b.none
  40a594:	mov	w8, #0x3                   	// #3
  40a598:	stur	w8, [x29, #-36]
  40a59c:	bl	402b98 <__errno_location@plt>
  40a5a0:	ldr	w8, [x0]
  40a5a4:	stur	w8, [x29, #-40]
  40a5a8:	stur	wzr, [x29, #-44]
  40a5ac:	ldur	w0, [x29, #-44]
  40a5b0:	bl	4029d8 <log_get_max_level_realm@plt>
  40a5b4:	ldur	w8, [x29, #-36]
  40a5b8:	and	w8, w8, #0x7
  40a5bc:	cmp	w0, w8
  40a5c0:	b.lt	40a5fc <__fxstat64@plt+0x7584>  // b.tstop
  40a5c4:	ldur	w8, [x29, #-44]
  40a5c8:	ldur	w9, [x29, #-36]
  40a5cc:	orr	w0, w9, w8, lsl #10
  40a5d0:	ldur	w1, [x29, #-40]
  40a5d4:	ldur	x6, [x29, #-32]
  40a5d8:	ldr	x2, [sp, #16]
  40a5dc:	mov	w3, #0x23f                 	// #575
  40a5e0:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40a5e4:	add	x4, x4, #0x347
  40a5e8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40a5ec:	add	x5, x5, #0x351
  40a5f0:	bl	4029e8 <log_internal_realm@plt>
  40a5f4:	str	w0, [sp, #12]
  40a5f8:	b	40a610 <__fxstat64@plt+0x7598>
  40a5fc:	ldur	w0, [x29, #-40]
  40a600:	bl	4029f8 <abs@plt>
  40a604:	mov	w8, wzr
  40a608:	subs	w8, w8, w0, uxtb
  40a60c:	str	w8, [sp, #12]
  40a610:	ldr	w8, [sp, #12]
  40a614:	str	w8, [sp, #48]
  40a618:	ldr	w8, [sp, #48]
  40a61c:	stur	w8, [x29, #-4]
  40a620:	mov	w8, #0x1                   	// #1
  40a624:	str	w8, [sp, #44]
  40a628:	b	40a6b8 <__fxstat64@plt+0x7640>
  40a62c:	b	40a6ac <__fxstat64@plt+0x7634>
  40a630:	mov	w8, #0x6                   	// #6
  40a634:	str	w8, [sp, #40]
  40a638:	str	wzr, [sp, #36]
  40a63c:	str	wzr, [sp, #32]
  40a640:	ldr	w0, [sp, #32]
  40a644:	bl	4029d8 <log_get_max_level_realm@plt>
  40a648:	ldr	w8, [sp, #40]
  40a64c:	and	w8, w8, #0x7
  40a650:	cmp	w0, w8
  40a654:	b.lt	40a690 <__fxstat64@plt+0x7618>  // b.tstop
  40a658:	ldr	w8, [sp, #32]
  40a65c:	ldr	w9, [sp, #40]
  40a660:	orr	w0, w9, w8, lsl #10
  40a664:	ldr	w1, [sp, #36]
  40a668:	ldur	x6, [x29, #-32]
  40a66c:	ldr	x2, [sp, #16]
  40a670:	mov	w3, #0x241                 	// #577
  40a674:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40a678:	add	x4, x4, #0x347
  40a67c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40a680:	add	x5, x5, #0x36b
  40a684:	bl	4029e8 <log_internal_realm@plt>
  40a688:	str	w0, [sp, #8]
  40a68c:	b	40a6a4 <__fxstat64@plt+0x762c>
  40a690:	ldr	w0, [sp, #36]
  40a694:	bl	4029f8 <abs@plt>
  40a698:	mov	w8, wzr
  40a69c:	subs	w8, w8, w0, uxtb
  40a6a0:	str	w8, [sp, #8]
  40a6a4:	ldr	w8, [sp, #8]
  40a6a8:	str	w8, [sp, #28]
  40a6ac:	stur	wzr, [x29, #-4]
  40a6b0:	mov	w8, #0x1                   	// #1
  40a6b4:	str	w8, [sp, #44]
  40a6b8:	sub	x0, x29, #0x20
  40a6bc:	bl	403464 <__fxstat64@plt+0x3ec>
  40a6c0:	ldur	w0, [x29, #-4]
  40a6c4:	ldp	x29, x30, [sp, #96]
  40a6c8:	add	sp, sp, #0x70
  40a6cc:	ret
  40a6d0:	stp	x29, x30, [sp, #-32]!
  40a6d4:	stp	x28, x19, [sp, #16]
  40a6d8:	mov	x29, sp
  40a6dc:	sub	sp, sp, #0x170
  40a6e0:	mov	x19, sp
  40a6e4:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40a6e8:	add	x8, x8, #0x426
  40a6ec:	adrp	x9, 40e000 <__fxstat64@plt+0xaf88>
  40a6f0:	add	x9, x9, #0xd98
  40a6f4:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  40a6f8:	add	x10, x10, #0xf88
  40a6fc:	add	x10, x10, #0x3
  40a700:	adrp	x11, 40f000 <__fxstat64@plt+0xbf88>
  40a704:	add	x11, x11, #0x441
  40a708:	adrp	x12, 40e000 <__fxstat64@plt+0xaf88>
  40a70c:	add	x12, x12, #0xd6d
  40a710:	sub	x13, x29, #0x48
  40a714:	stur	x0, [x29, #-8]
  40a718:	stur	x1, [x29, #-16]
  40a71c:	and	w14, w2, #0x1
  40a720:	sturb	w14, [x29, #-17]
  40a724:	stur	x8, [x29, #-72]
  40a728:	ldur	x8, [x29, #-16]
  40a72c:	str	x8, [x13, #8]
  40a730:	stur	xzr, [x29, #-96]
  40a734:	stur	xzr, [x29, #-104]
  40a738:	str	x9, [x19, #56]
  40a73c:	str	x10, [x19, #48]
  40a740:	str	x11, [x19, #40]
  40a744:	str	x12, [x19, #32]
  40a748:	ldur	x8, [x29, #-104]
  40a74c:	mov	w9, #0x0                   	// #0
  40a750:	cmp	x8, #0x2
  40a754:	str	w9, [x19, #28]
  40a758:	b.cs	40a780 <__fxstat64@plt+0x7708>  // b.hs, b.nlast
  40a75c:	ldur	x8, [x29, #-104]
  40a760:	mov	x9, #0x8                   	// #8
  40a764:	mul	x8, x9, x8
  40a768:	sub	x9, x29, #0x48
  40a76c:	add	x8, x9, x8
  40a770:	ldr	x8, [x8]
  40a774:	cmp	x8, #0x0
  40a778:	cset	w10, ne  // ne = any
  40a77c:	str	w10, [x19, #28]
  40a780:	ldr	w8, [x19, #28]
  40a784:	tbnz	w8, #0, 40a78c <__fxstat64@plt+0x7714>
  40a788:	b	40a7c4 <__fxstat64@plt+0x774c>
  40a78c:	ldur	x8, [x29, #-104]
  40a790:	mov	x9, #0x8                   	// #8
  40a794:	mul	x8, x9, x8
  40a798:	sub	x9, x29, #0x48
  40a79c:	add	x8, x9, x8
  40a7a0:	ldr	x0, [x8]
  40a7a4:	bl	402bb8 <strlen@plt>
  40a7a8:	ldur	x8, [x29, #-96]
  40a7ac:	add	x8, x8, x0
  40a7b0:	stur	x8, [x29, #-96]
  40a7b4:	ldur	x8, [x29, #-104]
  40a7b8:	add	x8, x8, #0x1
  40a7bc:	stur	x8, [x29, #-104]
  40a7c0:	b	40a748 <__fxstat64@plt+0x76d0>
  40a7c4:	ldur	x8, [x29, #-96]
  40a7c8:	add	x8, x8, #0x1
  40a7cc:	stur	x8, [x29, #-112]
  40a7d0:	ldur	x1, [x29, #-112]
  40a7d4:	mov	x0, #0x1                   	// #1
  40a7d8:	bl	4074e8 <__fxstat64@plt+0x4470>
  40a7dc:	mov	w8, #0x1                   	// #1
  40a7e0:	eor	w9, w0, #0x1
  40a7e4:	eor	w9, w9, w8
  40a7e8:	eor	w9, w9, w8
  40a7ec:	eor	w8, w9, w8
  40a7f0:	and	w8, w8, #0x1
  40a7f4:	mov	w1, w8
  40a7f8:	sxtw	x10, w1
  40a7fc:	cbz	x10, 40a81c <__fxstat64@plt+0x77a4>
  40a800:	mov	w8, wzr
  40a804:	mov	w0, w8
  40a808:	ldr	x1, [x19, #32]
  40a80c:	ldr	x2, [x19, #48]
  40a810:	mov	w3, #0x26a                 	// #618
  40a814:	ldr	x4, [x19, #40]
  40a818:	bl	402988 <log_assert_failed_realm@plt>
  40a81c:	ldur	x8, [x29, #-112]
  40a820:	mov	x9, #0x1                   	// #1
  40a824:	mul	x8, x9, x8
  40a828:	cmp	x8, #0x400, lsl #12
  40a82c:	cset	w10, ls  // ls = plast
  40a830:	mov	w11, #0x1                   	// #1
  40a834:	eor	w10, w10, #0x1
  40a838:	eor	w10, w10, w11
  40a83c:	eor	w10, w10, w11
  40a840:	and	w10, w10, #0x1
  40a844:	mov	w0, w10
  40a848:	sxtw	x8, w0
  40a84c:	cbz	x8, 40a86c <__fxstat64@plt+0x77f4>
  40a850:	mov	w8, wzr
  40a854:	mov	w0, w8
  40a858:	ldr	x1, [x19, #56]
  40a85c:	ldr	x2, [x19, #48]
  40a860:	mov	w3, #0x26a                 	// #618
  40a864:	ldr	x4, [x19, #40]
  40a868:	bl	402988 <log_assert_failed_realm@plt>
  40a86c:	ldur	x8, [x29, #-112]
  40a870:	mov	x9, #0x1                   	// #1
  40a874:	mul	x8, x9, x8
  40a878:	mul	x8, x8, x9
  40a87c:	add	x8, x8, #0xf
  40a880:	and	x8, x8, #0xfffffffffffffff0
  40a884:	mov	x9, sp
  40a888:	subs	x8, x9, x8
  40a88c:	mov	sp, x8
  40a890:	stur	x8, [x29, #-120]
  40a894:	ldur	x8, [x29, #-120]
  40a898:	stur	x8, [x29, #-80]
  40a89c:	stur	x8, [x29, #-88]
  40a8a0:	stur	xzr, [x29, #-104]
  40a8a4:	ldur	x8, [x29, #-104]
  40a8a8:	mov	w9, #0x0                   	// #0
  40a8ac:	cmp	x8, #0x2
  40a8b0:	str	w9, [x19, #24]
  40a8b4:	b.cs	40a8dc <__fxstat64@plt+0x7864>  // b.hs, b.nlast
  40a8b8:	ldur	x8, [x29, #-104]
  40a8bc:	mov	x9, #0x8                   	// #8
  40a8c0:	mul	x8, x9, x8
  40a8c4:	sub	x9, x29, #0x48
  40a8c8:	add	x8, x9, x8
  40a8cc:	ldr	x8, [x8]
  40a8d0:	cmp	x8, #0x0
  40a8d4:	cset	w10, ne  // ne = any
  40a8d8:	str	w10, [x19, #24]
  40a8dc:	ldr	w8, [x19, #24]
  40a8e0:	tbnz	w8, #0, 40a8e8 <__fxstat64@plt+0x7870>
  40a8e4:	b	40a91c <__fxstat64@plt+0x78a4>
  40a8e8:	ldur	x0, [x29, #-88]
  40a8ec:	ldur	x8, [x29, #-104]
  40a8f0:	mov	x9, #0x8                   	// #8
  40a8f4:	mul	x8, x9, x8
  40a8f8:	sub	x9, x29, #0x48
  40a8fc:	add	x8, x9, x8
  40a900:	ldr	x1, [x8]
  40a904:	bl	402c58 <stpcpy@plt>
  40a908:	stur	x0, [x29, #-88]
  40a90c:	ldur	x8, [x29, #-104]
  40a910:	add	x8, x8, #0x1
  40a914:	stur	x8, [x29, #-104]
  40a918:	b	40a8a4 <__fxstat64@plt+0x782c>
  40a91c:	ldur	x8, [x29, #-88]
  40a920:	mov	w9, #0x0                   	// #0
  40a924:	strb	w9, [x8]
  40a928:	ldur	x8, [x29, #-80]
  40a92c:	stur	x8, [x29, #-128]
  40a930:	ldur	x8, [x29, #-128]
  40a934:	stur	x8, [x29, #-40]
  40a938:	ldur	x8, [x29, #-8]
  40a93c:	sub	x10, x29, #0x98
  40a940:	stur	x8, [x29, #-152]
  40a944:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40a948:	add	x8, x8, #0x476
  40a94c:	str	x8, [x10, #8]
  40a950:	ldur	x8, [x29, #-16]
  40a954:	str	x8, [x10, #16]
  40a958:	stur	xzr, [x29, #-176]
  40a95c:	str	xzr, [x19, #184]
  40a960:	ldr	x8, [x19, #184]
  40a964:	mov	w9, #0x0                   	// #0
  40a968:	cmp	x8, #0x3
  40a96c:	str	w9, [x19, #20]
  40a970:	b.cs	40a998 <__fxstat64@plt+0x7920>  // b.hs, b.nlast
  40a974:	ldr	x8, [x19, #184]
  40a978:	mov	x9, #0x8                   	// #8
  40a97c:	mul	x8, x9, x8
  40a980:	sub	x9, x29, #0x98
  40a984:	add	x8, x9, x8
  40a988:	ldr	x8, [x8]
  40a98c:	cmp	x8, #0x0
  40a990:	cset	w10, ne  // ne = any
  40a994:	str	w10, [x19, #20]
  40a998:	ldr	w8, [x19, #20]
  40a99c:	tbnz	w8, #0, 40a9a4 <__fxstat64@plt+0x792c>
  40a9a0:	b	40a9dc <__fxstat64@plt+0x7964>
  40a9a4:	ldr	x8, [x19, #184]
  40a9a8:	mov	x9, #0x8                   	// #8
  40a9ac:	mul	x8, x9, x8
  40a9b0:	sub	x9, x29, #0x98
  40a9b4:	add	x8, x9, x8
  40a9b8:	ldr	x0, [x8]
  40a9bc:	bl	402bb8 <strlen@plt>
  40a9c0:	ldur	x8, [x29, #-176]
  40a9c4:	add	x8, x8, x0
  40a9c8:	stur	x8, [x29, #-176]
  40a9cc:	ldr	x8, [x19, #184]
  40a9d0:	add	x8, x8, #0x1
  40a9d4:	str	x8, [x19, #184]
  40a9d8:	b	40a960 <__fxstat64@plt+0x78e8>
  40a9dc:	ldur	x8, [x29, #-176]
  40a9e0:	add	x8, x8, #0x1
  40a9e4:	str	x8, [x19, #176]
  40a9e8:	ldr	x1, [x19, #176]
  40a9ec:	mov	x0, #0x1                   	// #1
  40a9f0:	bl	4074e8 <__fxstat64@plt+0x4470>
  40a9f4:	mov	w8, #0x1                   	// #1
  40a9f8:	eor	w9, w0, #0x1
  40a9fc:	eor	w9, w9, w8
  40aa00:	eor	w9, w9, w8
  40aa04:	eor	w8, w9, w8
  40aa08:	and	w8, w8, #0x1
  40aa0c:	mov	w1, w8
  40aa10:	sxtw	x10, w1
  40aa14:	cbz	x10, 40aa34 <__fxstat64@plt+0x79bc>
  40aa18:	mov	w8, wzr
  40aa1c:	mov	w0, w8
  40aa20:	ldr	x1, [x19, #32]
  40aa24:	ldr	x2, [x19, #48]
  40aa28:	mov	w3, #0x26b                 	// #619
  40aa2c:	ldr	x4, [x19, #40]
  40aa30:	bl	402988 <log_assert_failed_realm@plt>
  40aa34:	ldr	x8, [x19, #176]
  40aa38:	mov	x9, #0x1                   	// #1
  40aa3c:	mul	x8, x9, x8
  40aa40:	cmp	x8, #0x400, lsl #12
  40aa44:	cset	w10, ls  // ls = plast
  40aa48:	mov	w11, #0x1                   	// #1
  40aa4c:	eor	w10, w10, #0x1
  40aa50:	eor	w10, w10, w11
  40aa54:	eor	w10, w10, w11
  40aa58:	and	w10, w10, #0x1
  40aa5c:	mov	w0, w10
  40aa60:	sxtw	x8, w0
  40aa64:	cbz	x8, 40aa84 <__fxstat64@plt+0x7a0c>
  40aa68:	mov	w8, wzr
  40aa6c:	mov	w0, w8
  40aa70:	ldr	x1, [x19, #56]
  40aa74:	ldr	x2, [x19, #48]
  40aa78:	mov	w3, #0x26b                 	// #619
  40aa7c:	ldr	x4, [x19, #40]
  40aa80:	bl	402988 <log_assert_failed_realm@plt>
  40aa84:	ldr	x8, [x19, #176]
  40aa88:	mov	x9, #0x1                   	// #1
  40aa8c:	mul	x8, x9, x8
  40aa90:	mul	x8, x8, x9
  40aa94:	add	x8, x8, #0xf
  40aa98:	and	x8, x8, #0xfffffffffffffff0
  40aa9c:	mov	x9, sp
  40aaa0:	subs	x8, x9, x8
  40aaa4:	mov	sp, x8
  40aaa8:	str	x8, [x19, #168]
  40aaac:	ldr	x8, [x19, #168]
  40aab0:	stur	x8, [x29, #-160]
  40aab4:	stur	x8, [x29, #-168]
  40aab8:	str	xzr, [x19, #184]
  40aabc:	ldr	x8, [x19, #184]
  40aac0:	mov	w9, #0x0                   	// #0
  40aac4:	cmp	x8, #0x3
  40aac8:	str	w9, [x19, #16]
  40aacc:	b.cs	40aaf4 <__fxstat64@plt+0x7a7c>  // b.hs, b.nlast
  40aad0:	ldr	x8, [x19, #184]
  40aad4:	mov	x9, #0x8                   	// #8
  40aad8:	mul	x8, x9, x8
  40aadc:	sub	x9, x29, #0x98
  40aae0:	add	x8, x9, x8
  40aae4:	ldr	x8, [x8]
  40aae8:	cmp	x8, #0x0
  40aaec:	cset	w10, ne  // ne = any
  40aaf0:	str	w10, [x19, #16]
  40aaf4:	ldr	w8, [x19, #16]
  40aaf8:	tbnz	w8, #0, 40ab00 <__fxstat64@plt+0x7a88>
  40aafc:	b	40ab34 <__fxstat64@plt+0x7abc>
  40ab00:	ldur	x0, [x29, #-168]
  40ab04:	ldr	x8, [x19, #184]
  40ab08:	mov	x9, #0x8                   	// #8
  40ab0c:	mul	x8, x9, x8
  40ab10:	sub	x9, x29, #0x98
  40ab14:	add	x8, x9, x8
  40ab18:	ldr	x1, [x8]
  40ab1c:	bl	402c58 <stpcpy@plt>
  40ab20:	stur	x0, [x29, #-168]
  40ab24:	ldr	x8, [x19, #184]
  40ab28:	add	x8, x8, #0x1
  40ab2c:	str	x8, [x19, #184]
  40ab30:	b	40aabc <__fxstat64@plt+0x7a44>
  40ab34:	ldur	x8, [x29, #-168]
  40ab38:	mov	w9, #0x0                   	// #0
  40ab3c:	strb	w9, [x8]
  40ab40:	ldur	x8, [x29, #-160]
  40ab44:	str	x8, [x19, #160]
  40ab48:	ldr	x8, [x19, #160]
  40ab4c:	stur	x8, [x29, #-48]
  40ab50:	ldur	x0, [x29, #-40]
  40ab54:	ldur	x1, [x29, #-48]
  40ab58:	ldurb	w9, [x29, #-17]
  40ab5c:	and	w2, w9, #0x1
  40ab60:	bl	40ae00 <__fxstat64@plt+0x7d88>
  40ab64:	stur	w0, [x29, #-52]
  40ab68:	ldur	x0, [x29, #-16]
  40ab6c:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40ab70:	add	x1, x1, #0x484
  40ab74:	bl	40b5b0 <__fxstat64@plt+0x8538>
  40ab78:	stur	x0, [x29, #-32]
  40ab7c:	ldur	x8, [x29, #-32]
  40ab80:	cbz	x8, 40adec <__fxstat64@plt+0x7d74>
  40ab84:	ldur	x8, [x29, #-8]
  40ab88:	add	x9, x19, #0x78
  40ab8c:	str	x8, [x19, #120]
  40ab90:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40ab94:	add	x8, x8, #0x491
  40ab98:	str	x8, [x9, #8]
  40ab9c:	ldur	x8, [x29, #-32]
  40aba0:	str	x8, [x9, #16]
  40aba4:	str	xzr, [x19, #96]
  40aba8:	str	xzr, [x19, #88]
  40abac:	ldr	x8, [x19, #88]
  40abb0:	mov	w9, #0x0                   	// #0
  40abb4:	cmp	x8, #0x3
  40abb8:	str	w9, [x19, #12]
  40abbc:	b.cs	40abe4 <__fxstat64@plt+0x7b6c>  // b.hs, b.nlast
  40abc0:	ldr	x8, [x19, #88]
  40abc4:	mov	x9, #0x8                   	// #8
  40abc8:	mul	x8, x9, x8
  40abcc:	add	x9, x19, #0x78
  40abd0:	add	x8, x9, x8
  40abd4:	ldr	x8, [x8]
  40abd8:	cmp	x8, #0x0
  40abdc:	cset	w10, ne  // ne = any
  40abe0:	str	w10, [x19, #12]
  40abe4:	ldr	w8, [x19, #12]
  40abe8:	tbnz	w8, #0, 40abf0 <__fxstat64@plt+0x7b78>
  40abec:	b	40ac28 <__fxstat64@plt+0x7bb0>
  40abf0:	ldr	x8, [x19, #88]
  40abf4:	mov	x9, #0x8                   	// #8
  40abf8:	mul	x8, x9, x8
  40abfc:	add	x9, x19, #0x78
  40ac00:	add	x8, x9, x8
  40ac04:	ldr	x0, [x8]
  40ac08:	bl	402bb8 <strlen@plt>
  40ac0c:	ldr	x8, [x19, #96]
  40ac10:	add	x8, x8, x0
  40ac14:	str	x8, [x19, #96]
  40ac18:	ldr	x8, [x19, #88]
  40ac1c:	add	x8, x8, #0x1
  40ac20:	str	x8, [x19, #88]
  40ac24:	b	40abac <__fxstat64@plt+0x7b34>
  40ac28:	ldr	x8, [x19, #96]
  40ac2c:	add	x8, x8, #0x1
  40ac30:	str	x8, [x19, #80]
  40ac34:	ldr	x1, [x19, #80]
  40ac38:	mov	x0, #0x1                   	// #1
  40ac3c:	bl	4074e8 <__fxstat64@plt+0x4470>
  40ac40:	mov	w8, #0x1                   	// #1
  40ac44:	eor	w9, w0, #0x1
  40ac48:	eor	w9, w9, w8
  40ac4c:	eor	w9, w9, w8
  40ac50:	eor	w8, w9, w8
  40ac54:	and	w8, w8, #0x1
  40ac58:	mov	w1, w8
  40ac5c:	sxtw	x10, w1
  40ac60:	cbz	x10, 40ac80 <__fxstat64@plt+0x7c08>
  40ac64:	mov	w8, wzr
  40ac68:	mov	w0, w8
  40ac6c:	ldr	x1, [x19, #32]
  40ac70:	ldr	x2, [x19, #48]
  40ac74:	mov	w3, #0x274                 	// #628
  40ac78:	ldr	x4, [x19, #40]
  40ac7c:	bl	402988 <log_assert_failed_realm@plt>
  40ac80:	ldr	x8, [x19, #80]
  40ac84:	mov	x9, #0x1                   	// #1
  40ac88:	mul	x8, x9, x8
  40ac8c:	cmp	x8, #0x400, lsl #12
  40ac90:	cset	w10, ls  // ls = plast
  40ac94:	mov	w11, #0x1                   	// #1
  40ac98:	eor	w10, w10, #0x1
  40ac9c:	eor	w10, w10, w11
  40aca0:	eor	w10, w10, w11
  40aca4:	and	w10, w10, #0x1
  40aca8:	mov	w0, w10
  40acac:	sxtw	x8, w0
  40acb0:	cbz	x8, 40acd0 <__fxstat64@plt+0x7c58>
  40acb4:	mov	w8, wzr
  40acb8:	mov	w0, w8
  40acbc:	ldr	x1, [x19, #56]
  40acc0:	ldr	x2, [x19, #48]
  40acc4:	mov	w3, #0x274                 	// #628
  40acc8:	ldr	x4, [x19, #40]
  40accc:	bl	402988 <log_assert_failed_realm@plt>
  40acd0:	ldr	x8, [x19, #80]
  40acd4:	mov	x9, #0x1                   	// #1
  40acd8:	mul	x8, x9, x8
  40acdc:	mul	x8, x8, x9
  40ace0:	add	x8, x8, #0xf
  40ace4:	and	x8, x8, #0xfffffffffffffff0
  40ace8:	mov	x9, sp
  40acec:	subs	x8, x9, x8
  40acf0:	mov	sp, x8
  40acf4:	str	x8, [x19, #72]
  40acf8:	ldr	x8, [x19, #72]
  40acfc:	str	x8, [x19, #112]
  40ad00:	str	x8, [x19, #104]
  40ad04:	str	xzr, [x19, #88]
  40ad08:	ldr	x8, [x19, #88]
  40ad0c:	mov	w9, #0x0                   	// #0
  40ad10:	cmp	x8, #0x3
  40ad14:	str	w9, [x19, #8]
  40ad18:	b.cs	40ad40 <__fxstat64@plt+0x7cc8>  // b.hs, b.nlast
  40ad1c:	ldr	x8, [x19, #88]
  40ad20:	mov	x9, #0x8                   	// #8
  40ad24:	mul	x8, x9, x8
  40ad28:	add	x9, x19, #0x78
  40ad2c:	add	x8, x9, x8
  40ad30:	ldr	x8, [x8]
  40ad34:	cmp	x8, #0x0
  40ad38:	cset	w10, ne  // ne = any
  40ad3c:	str	w10, [x19, #8]
  40ad40:	ldr	w8, [x19, #8]
  40ad44:	tbnz	w8, #0, 40ad4c <__fxstat64@plt+0x7cd4>
  40ad48:	b	40ad80 <__fxstat64@plt+0x7d08>
  40ad4c:	ldr	x0, [x19, #104]
  40ad50:	ldr	x8, [x19, #88]
  40ad54:	mov	x9, #0x8                   	// #8
  40ad58:	mul	x8, x9, x8
  40ad5c:	add	x9, x19, #0x78
  40ad60:	add	x8, x9, x8
  40ad64:	ldr	x1, [x8]
  40ad68:	bl	402c58 <stpcpy@plt>
  40ad6c:	str	x0, [x19, #104]
  40ad70:	ldr	x8, [x19, #88]
  40ad74:	add	x8, x8, #0x1
  40ad78:	str	x8, [x19, #88]
  40ad7c:	b	40ad08 <__fxstat64@plt+0x7c90>
  40ad80:	ldr	x8, [x19, #104]
  40ad84:	mov	w9, #0x0                   	// #0
  40ad88:	strb	w9, [x8]
  40ad8c:	ldr	x8, [x19, #112]
  40ad90:	str	x8, [x19, #64]
  40ad94:	ldr	x8, [x19, #64]
  40ad98:	str	x8, [x19, #144]
  40ad9c:	ldr	x0, [x19, #144]
  40ada0:	mov	w1, #0x2f                  	// #47
  40ada4:	bl	402ee8 <strrchr@plt>
  40ada8:	add	x0, x0, #0x1
  40adac:	bl	402ef8 <ascii_strupper@plt>
  40adb0:	ldur	x8, [x29, #-40]
  40adb4:	ldr	x1, [x19, #144]
  40adb8:	ldurb	w9, [x29, #-17]
  40adbc:	mov	x0, x8
  40adc0:	and	w2, w9, #0x1
  40adc4:	bl	40ae00 <__fxstat64@plt+0x7d88>
  40adc8:	str	w0, [x19, #156]
  40adcc:	ldr	w9, [x19, #156]
  40add0:	cmp	w9, #0x0
  40add4:	cset	w9, ge  // ge = tcont
  40add8:	tbnz	w9, #0, 40adec <__fxstat64@plt+0x7d74>
  40addc:	ldur	w8, [x29, #-52]
  40ade0:	cbnz	w8, 40adec <__fxstat64@plt+0x7d74>
  40ade4:	ldr	w8, [x19, #156]
  40ade8:	stur	w8, [x29, #-52]
  40adec:	ldur	w0, [x29, #-52]
  40adf0:	mov	sp, x29
  40adf4:	ldp	x28, x19, [sp, #16]
  40adf8:	ldp	x29, x30, [sp], #32
  40adfc:	ret
  40ae00:	sub	sp, sp, #0x120
  40ae04:	stp	x29, x30, [sp, #256]
  40ae08:	str	x28, [sp, #272]
  40ae0c:	add	x29, sp, #0x100
  40ae10:	sub	x8, x29, #0x30
  40ae14:	mov	w9, #0xffffffff            	// #-1
  40ae18:	mov	x10, xzr
  40ae1c:	mov	w11, #0x100                 	// #256
  40ae20:	movk	w11, #0x8, lsl #16
  40ae24:	adrp	x12, 40d000 <__fxstat64@plt+0x9f88>
  40ae28:	add	x12, x12, #0xf88
  40ae2c:	add	x12, x12, #0x3
  40ae30:	adrp	x13, 40f000 <__fxstat64@plt+0xbf88>
  40ae34:	add	x13, x13, #0x4a0
  40ae38:	mov	w14, #0x1                   	// #1
  40ae3c:	str	x0, [x8, #32]
  40ae40:	str	x1, [x8, #24]
  40ae44:	and	w14, w2, w14
  40ae48:	sturb	w14, [x29, #-25]
  40ae4c:	stur	w9, [x29, #-32]
  40ae50:	stur	w9, [x29, #-36]
  40ae54:	str	x10, [x8]
  40ae58:	ldr	x0, [x8, #32]
  40ae5c:	mov	w1, w11
  40ae60:	str	x8, [sp, #56]
  40ae64:	str	x12, [sp, #48]
  40ae68:	str	x13, [sp, #40]
  40ae6c:	bl	402e58 <open64@plt>
  40ae70:	stur	w0, [x29, #-32]
  40ae74:	ldur	w9, [x29, #-32]
  40ae78:	cmp	w9, #0x0
  40ae7c:	cset	w9, ge  // ge = tcont
  40ae80:	tbnz	w9, #0, 40af1c <__fxstat64@plt+0x7ea4>
  40ae84:	mov	w8, #0x3                   	// #3
  40ae88:	stur	w8, [x29, #-56]
  40ae8c:	bl	402b98 <__errno_location@plt>
  40ae90:	ldr	w8, [x0]
  40ae94:	stur	w8, [x29, #-60]
  40ae98:	stur	wzr, [x29, #-64]
  40ae9c:	ldur	w0, [x29, #-64]
  40aea0:	bl	4029d8 <log_get_max_level_realm@plt>
  40aea4:	ldur	w8, [x29, #-56]
  40aea8:	and	w8, w8, #0x7
  40aeac:	cmp	w0, w8
  40aeb0:	b.lt	40aeec <__fxstat64@plt+0x7e74>  // b.tstop
  40aeb4:	ldur	w8, [x29, #-64]
  40aeb8:	ldur	w9, [x29, #-56]
  40aebc:	orr	w0, w9, w8, lsl #10
  40aec0:	ldur	w1, [x29, #-60]
  40aec4:	ldr	x10, [sp, #56]
  40aec8:	ldr	x6, [x10, #32]
  40aecc:	ldr	x2, [sp, #48]
  40aed0:	mov	w3, #0x203                 	// #515
  40aed4:	ldr	x4, [sp, #40]
  40aed8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40aedc:	add	x5, x5, #0x4bd
  40aee0:	bl	4029e8 <log_internal_realm@plt>
  40aee4:	str	w0, [sp, #36]
  40aee8:	b	40af00 <__fxstat64@plt+0x7e88>
  40aeec:	ldur	w0, [x29, #-60]
  40aef0:	bl	4029f8 <abs@plt>
  40aef4:	mov	w8, wzr
  40aef8:	subs	w8, w8, w0, uxtb
  40aefc:	str	w8, [sp, #36]
  40af00:	ldr	w8, [sp, #36]
  40af04:	stur	w8, [x29, #-68]
  40af08:	ldur	w8, [x29, #-68]
  40af0c:	stur	w8, [x29, #-4]
  40af10:	mov	w8, #0x1                   	// #1
  40af14:	stur	w8, [x29, #-72]
  40af18:	b	40b584 <__fxstat64@plt+0x850c>
  40af1c:	ldurb	w8, [x29, #-25]
  40af20:	tbnz	w8, #0, 40b104 <__fxstat64@plt+0x808c>
  40af24:	ldr	x8, [sp, #56]
  40af28:	ldr	x0, [x8, #24]
  40af2c:	mov	w1, #0x100                 	// #256
  40af30:	movk	w1, #0x8, lsl #16
  40af34:	bl	402e58 <open64@plt>
  40af38:	stur	w0, [x29, #-36]
  40af3c:	ldur	w9, [x29, #-36]
  40af40:	cmp	w9, #0x0
  40af44:	cset	w9, ge  // ge = tcont
  40af48:	tbnz	w9, #0, 40affc <__fxstat64@plt+0x7f84>
  40af4c:	bl	402b98 <__errno_location@plt>
  40af50:	ldr	w8, [x0]
  40af54:	mov	w9, #0xfffffffe            	// #-2
  40af58:	cmp	w8, w9
  40af5c:	b.eq	40aff8 <__fxstat64@plt+0x7f80>  // b.none
  40af60:	mov	w8, #0x3                   	// #3
  40af64:	stur	w8, [x29, #-76]
  40af68:	bl	402b98 <__errno_location@plt>
  40af6c:	ldr	w8, [x0]
  40af70:	stur	w8, [x29, #-80]
  40af74:	stur	wzr, [x29, #-84]
  40af78:	ldur	w0, [x29, #-84]
  40af7c:	bl	4029d8 <log_get_max_level_realm@plt>
  40af80:	ldur	w8, [x29, #-76]
  40af84:	and	w8, w8, #0x7
  40af88:	cmp	w0, w8
  40af8c:	b.lt	40afc8 <__fxstat64@plt+0x7f50>  // b.tstop
  40af90:	ldur	w8, [x29, #-84]
  40af94:	ldur	w9, [x29, #-76]
  40af98:	orr	w0, w9, w8, lsl #10
  40af9c:	ldur	w1, [x29, #-80]
  40afa0:	ldr	x10, [sp, #56]
  40afa4:	ldr	x6, [x10, #24]
  40afa8:	ldr	x2, [sp, #48]
  40afac:	mov	w3, #0x209                 	// #521
  40afb0:	ldr	x4, [sp, #40]
  40afb4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40afb8:	add	x5, x5, #0x4bd
  40afbc:	bl	4029e8 <log_internal_realm@plt>
  40afc0:	str	w0, [sp, #32]
  40afc4:	b	40afdc <__fxstat64@plt+0x7f64>
  40afc8:	ldur	w0, [x29, #-80]
  40afcc:	bl	4029f8 <abs@plt>
  40afd0:	mov	w8, wzr
  40afd4:	subs	w8, w8, w0, uxtb
  40afd8:	str	w8, [sp, #32]
  40afdc:	ldr	w8, [sp, #32]
  40afe0:	stur	w8, [x29, #-88]
  40afe4:	ldur	w8, [x29, #-88]
  40afe8:	stur	w8, [x29, #-4]
  40afec:	mov	w8, #0x1                   	// #1
  40aff0:	stur	w8, [x29, #-72]
  40aff4:	b	40b584 <__fxstat64@plt+0x850c>
  40aff8:	b	40b104 <__fxstat64@plt+0x808c>
  40affc:	ldur	w0, [x29, #-32]
  40b000:	ldr	x8, [sp, #56]
  40b004:	ldr	x1, [x8, #32]
  40b008:	ldur	w2, [x29, #-36]
  40b00c:	ldr	x3, [x8, #24]
  40b010:	bl	40b610 <__fxstat64@plt+0x8598>
  40b014:	stur	w0, [x29, #-52]
  40b018:	ldur	w9, [x29, #-52]
  40b01c:	cmp	w9, #0x0
  40b020:	cset	w9, ge  // ge = tcont
  40b024:	tbnz	w9, #0, 40b03c <__fxstat64@plt+0x7fc4>
  40b028:	ldur	w8, [x29, #-52]
  40b02c:	stur	w8, [x29, #-4]
  40b030:	mov	w8, #0x1                   	// #1
  40b034:	stur	w8, [x29, #-72]
  40b038:	b	40b584 <__fxstat64@plt+0x850c>
  40b03c:	ldur	w0, [x29, #-32]
  40b040:	mov	x8, xzr
  40b044:	mov	x1, x8
  40b048:	mov	w9, wzr
  40b04c:	mov	w2, w9
  40b050:	bl	402f08 <lseek64@plt>
  40b054:	mov	x8, #0xffffffffffffffff    	// #-1
  40b058:	cmp	x0, x8
  40b05c:	b.ne	40b0f8 <__fxstat64@plt+0x8080>  // b.any
  40b060:	mov	w8, #0x3                   	// #3
  40b064:	stur	w8, [x29, #-92]
  40b068:	bl	402b98 <__errno_location@plt>
  40b06c:	ldr	w8, [x0]
  40b070:	stur	w8, [x29, #-96]
  40b074:	stur	wzr, [x29, #-100]
  40b078:	ldur	w0, [x29, #-100]
  40b07c:	bl	4029d8 <log_get_max_level_realm@plt>
  40b080:	ldur	w8, [x29, #-92]
  40b084:	and	w8, w8, #0x7
  40b088:	cmp	w0, w8
  40b08c:	b.lt	40b0c8 <__fxstat64@plt+0x8050>  // b.tstop
  40b090:	ldur	w8, [x29, #-100]
  40b094:	ldur	w9, [x29, #-92]
  40b098:	orr	w0, w9, w8, lsl #10
  40b09c:	ldur	w1, [x29, #-96]
  40b0a0:	ldr	x10, [sp, #56]
  40b0a4:	ldr	x6, [x10, #32]
  40b0a8:	ldr	x2, [sp, #48]
  40b0ac:	mov	w3, #0x210                 	// #528
  40b0b0:	ldr	x4, [sp, #40]
  40b0b4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b0b8:	add	x5, x5, #0x4e1
  40b0bc:	bl	4029e8 <log_internal_realm@plt>
  40b0c0:	str	w0, [sp, #28]
  40b0c4:	b	40b0dc <__fxstat64@plt+0x8064>
  40b0c8:	ldur	w0, [x29, #-96]
  40b0cc:	bl	4029f8 <abs@plt>
  40b0d0:	mov	w8, wzr
  40b0d4:	subs	w8, w8, w0, uxtb
  40b0d8:	str	w8, [sp, #28]
  40b0dc:	ldr	w8, [sp, #28]
  40b0e0:	stur	w8, [x29, #-104]
  40b0e4:	ldur	w8, [x29, #-104]
  40b0e8:	stur	w8, [x29, #-4]
  40b0ec:	mov	w8, #0x1                   	// #1
  40b0f0:	stur	w8, [x29, #-72]
  40b0f4:	b	40b584 <__fxstat64@plt+0x850c>
  40b0f8:	ldur	w0, [x29, #-36]
  40b0fc:	bl	402ce8 <safe_close@plt>
  40b100:	stur	w0, [x29, #-36]
  40b104:	ldr	x8, [sp, #56]
  40b108:	ldr	x0, [x8, #24]
  40b10c:	mov	x9, xzr
  40b110:	mov	x1, x9
  40b114:	sub	x2, x29, #0x30
  40b118:	bl	402e48 <tempfn_random@plt>
  40b11c:	stur	w0, [x29, #-52]
  40b120:	ldur	w10, [x29, #-52]
  40b124:	cmp	w10, #0x0
  40b128:	cset	w10, ge  // ge = tcont
  40b12c:	tbnz	w10, #0, 40b158 <__fxstat64@plt+0x80e0>
  40b130:	mov	w8, wzr
  40b134:	mov	w0, w8
  40b138:	ldr	x1, [sp, #48]
  40b13c:	mov	w2, #0x218                 	// #536
  40b140:	ldr	x3, [sp, #40]
  40b144:	bl	4029c8 <log_oom_internal@plt>
  40b148:	stur	w0, [x29, #-4]
  40b14c:	mov	w8, #0x1                   	// #1
  40b150:	stur	w8, [x29, #-72]
  40b154:	b	40b584 <__fxstat64@plt+0x850c>
  40b158:	mov	w8, wzr
  40b15c:	mov	w0, w8
  40b160:	bl	402b38 <umask@plt>
  40b164:	orr	w8, w0, #0xf000
  40b168:	stur	w8, [x29, #-108]
  40b16c:	ldur	w8, [x29, #-108]
  40b170:	mvn	w8, w8
  40b174:	and	w8, w8, #0xf000
  40b178:	cbz	w8, 40b188 <__fxstat64@plt+0x8110>
  40b17c:	mov	w8, #0x2                   	// #2
  40b180:	stur	w8, [x29, #-72]
  40b184:	b	40b25c <__fxstat64@plt+0x81e4>
  40b188:	ldr	x8, [sp, #56]
  40b18c:	ldr	x0, [x8]
  40b190:	mov	w1, #0x80c1                	// #32961
  40b194:	movk	w1, #0x8, lsl #16
  40b198:	mov	w2, #0x1a4                 	// #420
  40b19c:	bl	402e58 <open64@plt>
  40b1a0:	stur	w0, [x29, #-36]
  40b1a4:	ldur	w9, [x29, #-36]
  40b1a8:	cmp	w9, #0x0
  40b1ac:	cset	w9, ge  // ge = tcont
  40b1b0:	tbnz	w9, #0, 40b24c <__fxstat64@plt+0x81d4>
  40b1b4:	mov	w8, #0x3                   	// #3
  40b1b8:	stur	w8, [x29, #-112]
  40b1bc:	bl	402b98 <__errno_location@plt>
  40b1c0:	ldr	w8, [x0]
  40b1c4:	stur	w8, [x29, #-116]
  40b1c8:	stur	wzr, [x29, #-120]
  40b1cc:	ldur	w0, [x29, #-120]
  40b1d0:	bl	4029d8 <log_get_max_level_realm@plt>
  40b1d4:	ldur	w8, [x29, #-112]
  40b1d8:	and	w8, w8, #0x7
  40b1dc:	cmp	w0, w8
  40b1e0:	b.lt	40b21c <__fxstat64@plt+0x81a4>  // b.tstop
  40b1e4:	ldur	w8, [x29, #-120]
  40b1e8:	ldur	w9, [x29, #-112]
  40b1ec:	orr	w0, w9, w8, lsl #10
  40b1f0:	ldur	w1, [x29, #-116]
  40b1f4:	ldr	x10, [sp, #56]
  40b1f8:	ldr	x6, [x10]
  40b1fc:	ldr	x2, [sp, #48]
  40b200:	mov	w3, #0x21d                 	// #541
  40b204:	ldr	x4, [sp, #40]
  40b208:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b20c:	add	x5, x5, #0x4fc
  40b210:	bl	4029e8 <log_internal_realm@plt>
  40b214:	str	w0, [sp, #24]
  40b218:	b	40b230 <__fxstat64@plt+0x81b8>
  40b21c:	ldur	w0, [x29, #-116]
  40b220:	bl	4029f8 <abs@plt>
  40b224:	mov	w8, wzr
  40b228:	subs	w8, w8, w0, uxtb
  40b22c:	str	w8, [sp, #24]
  40b230:	ldr	w8, [sp, #24]
  40b234:	stur	w8, [x29, #-124]
  40b238:	ldur	w8, [x29, #-124]
  40b23c:	stur	w8, [x29, #-4]
  40b240:	mov	w8, #0x1                   	// #1
  40b244:	stur	w8, [x29, #-72]
  40b248:	b	40b25c <__fxstat64@plt+0x81e4>
  40b24c:	ldur	w8, [x29, #-108]
  40b250:	and	w8, w8, #0x1ff
  40b254:	stur	w8, [x29, #-108]
  40b258:	b	40b16c <__fxstat64@plt+0x80f4>
  40b25c:	sub	x0, x29, #0x6c
  40b260:	bl	40840c <__fxstat64@plt+0x5394>
  40b264:	ldur	w8, [x29, #-72]
  40b268:	cmp	w8, #0x2
  40b26c:	cset	w8, eq  // eq = none
  40b270:	eor	w8, w8, #0x1
  40b274:	tbnz	w8, #0, 40b584 <__fxstat64@plt+0x850c>
  40b278:	b	40b27c <__fxstat64@plt+0x8204>
  40b27c:	ldur	w0, [x29, #-32]
  40b280:	ldur	w1, [x29, #-36]
  40b284:	mov	x2, #0xffffffffffffffff    	// #-1
  40b288:	mov	w3, #0x1                   	// #1
  40b28c:	bl	40ba18 <__fxstat64@plt+0x89a0>
  40b290:	stur	w0, [x29, #-52]
  40b294:	ldur	w8, [x29, #-52]
  40b298:	cmp	w8, #0x0
  40b29c:	cset	w8, ge  // ge = tcont
  40b2a0:	tbnz	w8, #0, 40b34c <__fxstat64@plt+0x82d4>
  40b2a4:	ldr	x8, [sp, #56]
  40b2a8:	ldr	x0, [x8]
  40b2ac:	bl	402f18 <unlink@plt>
  40b2b0:	mov	w9, #0x3                   	// #3
  40b2b4:	str	w9, [sp, #128]
  40b2b8:	ldur	w9, [x29, #-52]
  40b2bc:	str	w9, [sp, #124]
  40b2c0:	str	wzr, [sp, #120]
  40b2c4:	ldr	w9, [sp, #120]
  40b2c8:	mov	w0, w9
  40b2cc:	bl	4029d8 <log_get_max_level_realm@plt>
  40b2d0:	ldr	w9, [sp, #128]
  40b2d4:	and	w9, w9, #0x7
  40b2d8:	cmp	w0, w9
  40b2dc:	b.lt	40b31c <__fxstat64@plt+0x82a4>  // b.tstop
  40b2e0:	ldr	w8, [sp, #120]
  40b2e4:	ldr	w9, [sp, #128]
  40b2e8:	orr	w0, w9, w8, lsl #10
  40b2ec:	ldr	w1, [sp, #124]
  40b2f0:	ldr	x10, [sp, #56]
  40b2f4:	ldr	x6, [x10, #32]
  40b2f8:	ldr	x7, [x10]
  40b2fc:	ldr	x2, [sp, #48]
  40b300:	mov	w3, #0x223                 	// #547
  40b304:	ldr	x4, [sp, #40]
  40b308:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b30c:	add	x5, x5, #0x520
  40b310:	bl	4029e8 <log_internal_realm@plt>
  40b314:	str	w0, [sp, #20]
  40b318:	b	40b330 <__fxstat64@plt+0x82b8>
  40b31c:	ldr	w0, [sp, #124]
  40b320:	bl	4029f8 <abs@plt>
  40b324:	mov	w8, wzr
  40b328:	subs	w8, w8, w0, uxtb
  40b32c:	str	w8, [sp, #20]
  40b330:	ldr	w8, [sp, #20]
  40b334:	str	w8, [sp, #116]
  40b338:	ldr	w8, [sp, #116]
  40b33c:	stur	w8, [x29, #-4]
  40b340:	mov	w8, #0x1                   	// #1
  40b344:	stur	w8, [x29, #-72]
  40b348:	b	40b584 <__fxstat64@plt+0x850c>
  40b34c:	ldur	w0, [x29, #-32]
  40b350:	ldur	w1, [x29, #-36]
  40b354:	mov	w8, wzr
  40b358:	mov	w2, w8
  40b35c:	bl	402f28 <copy_times@plt>
  40b360:	ldur	w8, [x29, #-36]
  40b364:	mov	w0, w8
  40b368:	bl	402f38 <fsync@plt>
  40b36c:	cmp	w0, #0x0
  40b370:	cset	w8, ge  // ge = tcont
  40b374:	tbnz	w8, #0, 40b420 <__fxstat64@plt+0x83a8>
  40b378:	ldr	x8, [sp, #56]
  40b37c:	ldr	x0, [x8]
  40b380:	bl	402f48 <unlink_noerrno@plt>
  40b384:	mov	w9, #0x3                   	// #3
  40b388:	str	w9, [sp, #112]
  40b38c:	bl	402b98 <__errno_location@plt>
  40b390:	ldr	w9, [x0]
  40b394:	str	w9, [sp, #108]
  40b398:	str	wzr, [sp, #104]
  40b39c:	ldr	w0, [sp, #104]
  40b3a0:	bl	4029d8 <log_get_max_level_realm@plt>
  40b3a4:	ldr	w9, [sp, #112]
  40b3a8:	and	w9, w9, #0x7
  40b3ac:	cmp	w0, w9
  40b3b0:	b.lt	40b3f0 <__fxstat64@plt+0x8378>  // b.tstop
  40b3b4:	ldr	w8, [sp, #104]
  40b3b8:	ldr	w9, [sp, #112]
  40b3bc:	orr	w0, w9, w8, lsl #10
  40b3c0:	ldr	w1, [sp, #108]
  40b3c4:	ldr	x10, [sp, #56]
  40b3c8:	ldr	x6, [x10, #32]
  40b3cc:	ldr	x7, [x10]
  40b3d0:	ldr	x2, [sp, #48]
  40b3d4:	mov	w3, #0x22a                 	// #554
  40b3d8:	ldr	x4, [sp, #40]
  40b3dc:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b3e0:	add	x5, x5, #0x520
  40b3e4:	bl	4029e8 <log_internal_realm@plt>
  40b3e8:	str	w0, [sp, #16]
  40b3ec:	b	40b404 <__fxstat64@plt+0x838c>
  40b3f0:	ldr	w0, [sp, #108]
  40b3f4:	bl	4029f8 <abs@plt>
  40b3f8:	mov	w8, wzr
  40b3fc:	subs	w8, w8, w0, uxtb
  40b400:	str	w8, [sp, #16]
  40b404:	ldr	w8, [sp, #16]
  40b408:	str	w8, [sp, #100]
  40b40c:	ldr	w8, [sp, #100]
  40b410:	stur	w8, [x29, #-4]
  40b414:	mov	w8, #0x1                   	// #1
  40b418:	stur	w8, [x29, #-72]
  40b41c:	b	40b584 <__fxstat64@plt+0x850c>
  40b420:	ldur	w0, [x29, #-36]
  40b424:	bl	402f58 <fsync_directory_of_file@plt>
  40b428:	ldr	x8, [sp, #56]
  40b42c:	ldr	x1, [x8]
  40b430:	ldr	x3, [x8, #24]
  40b434:	mov	w9, #0xffffff9c            	// #-100
  40b438:	mov	w0, w9
  40b43c:	mov	w2, w9
  40b440:	bl	402f68 <renameat@plt>
  40b444:	cmp	w0, #0x0
  40b448:	cset	w9, ge  // ge = tcont
  40b44c:	tbnz	w9, #0, 40b4f8 <__fxstat64@plt+0x8480>
  40b450:	ldr	x8, [sp, #56]
  40b454:	ldr	x0, [x8]
  40b458:	bl	402f48 <unlink_noerrno@plt>
  40b45c:	mov	w9, #0x3                   	// #3
  40b460:	str	w9, [sp, #96]
  40b464:	bl	402b98 <__errno_location@plt>
  40b468:	ldr	w9, [x0]
  40b46c:	str	w9, [sp, #92]
  40b470:	str	wzr, [sp, #88]
  40b474:	ldr	w0, [sp, #88]
  40b478:	bl	4029d8 <log_get_max_level_realm@plt>
  40b47c:	ldr	w9, [sp, #96]
  40b480:	and	w9, w9, #0x7
  40b484:	cmp	w0, w9
  40b488:	b.lt	40b4c8 <__fxstat64@plt+0x8450>  // b.tstop
  40b48c:	ldr	w8, [sp, #88]
  40b490:	ldr	w9, [sp, #96]
  40b494:	orr	w0, w9, w8, lsl #10
  40b498:	ldr	w1, [sp, #92]
  40b49c:	ldr	x10, [sp, #56]
  40b4a0:	ldr	x6, [x10]
  40b4a4:	ldr	x7, [x10, #24]
  40b4a8:	ldr	x2, [sp, #48]
  40b4ac:	mov	w3, #0x231                 	// #561
  40b4b0:	ldr	x4, [sp, #40]
  40b4b4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b4b8:	add	x5, x5, #0x54a
  40b4bc:	bl	4029e8 <log_internal_realm@plt>
  40b4c0:	str	w0, [sp, #12]
  40b4c4:	b	40b4dc <__fxstat64@plt+0x8464>
  40b4c8:	ldr	w0, [sp, #92]
  40b4cc:	bl	4029f8 <abs@plt>
  40b4d0:	mov	w8, wzr
  40b4d4:	subs	w8, w8, w0, uxtb
  40b4d8:	str	w8, [sp, #12]
  40b4dc:	ldr	w8, [sp, #12]
  40b4e0:	str	w8, [sp, #84]
  40b4e4:	ldr	w8, [sp, #84]
  40b4e8:	stur	w8, [x29, #-4]
  40b4ec:	mov	w8, #0x1                   	// #1
  40b4f0:	stur	w8, [x29, #-72]
  40b4f4:	b	40b584 <__fxstat64@plt+0x850c>
  40b4f8:	mov	w8, #0x6                   	// #6
  40b4fc:	str	w8, [sp, #80]
  40b500:	str	wzr, [sp, #76]
  40b504:	str	wzr, [sp, #72]
  40b508:	ldr	w0, [sp, #72]
  40b50c:	bl	4029d8 <log_get_max_level_realm@plt>
  40b510:	ldr	w8, [sp, #80]
  40b514:	and	w8, w8, #0x7
  40b518:	cmp	w0, w8
  40b51c:	b.lt	40b55c <__fxstat64@plt+0x84e4>  // b.tstop
  40b520:	ldr	w8, [sp, #72]
  40b524:	ldr	w9, [sp, #80]
  40b528:	orr	w0, w9, w8, lsl #10
  40b52c:	ldr	w1, [sp, #76]
  40b530:	ldr	x10, [sp, #56]
  40b534:	ldr	x6, [x10, #32]
  40b538:	ldr	x7, [x10, #24]
  40b53c:	ldr	x2, [sp, #48]
  40b540:	mov	w3, #0x234                 	// #564
  40b544:	ldr	x4, [sp, #40]
  40b548:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b54c:	add	x5, x5, #0x56c
  40b550:	bl	4029e8 <log_internal_realm@plt>
  40b554:	str	w0, [sp, #8]
  40b558:	b	40b570 <__fxstat64@plt+0x84f8>
  40b55c:	ldr	w0, [sp, #76]
  40b560:	bl	4029f8 <abs@plt>
  40b564:	mov	w8, wzr
  40b568:	subs	w8, w8, w0, uxtb
  40b56c:	str	w8, [sp, #8]
  40b570:	ldr	w8, [sp, #8]
  40b574:	str	w8, [sp, #68]
  40b578:	stur	wzr, [x29, #-4]
  40b57c:	mov	w8, #0x1                   	// #1
  40b580:	stur	w8, [x29, #-72]
  40b584:	sub	x0, x29, #0x30
  40b588:	bl	403464 <__fxstat64@plt+0x3ec>
  40b58c:	sub	x0, x29, #0x24
  40b590:	bl	407550 <__fxstat64@plt+0x44d8>
  40b594:	sub	x0, x29, #0x20
  40b598:	bl	407550 <__fxstat64@plt+0x44d8>
  40b59c:	ldur	w0, [x29, #-4]
  40b5a0:	ldr	x28, [sp, #272]
  40b5a4:	ldp	x29, x30, [sp, #256]
  40b5a8:	add	sp, sp, #0x120
  40b5ac:	ret
  40b5b0:	sub	sp, sp, #0x30
  40b5b4:	stp	x29, x30, [sp, #32]
  40b5b8:	add	x29, sp, #0x20
  40b5bc:	str	x0, [sp, #16]
  40b5c0:	str	x1, [sp, #8]
  40b5c4:	ldr	x0, [sp, #8]
  40b5c8:	bl	402bb8 <strlen@plt>
  40b5cc:	str	x0, [sp]
  40b5d0:	ldr	x0, [sp, #16]
  40b5d4:	ldr	x1, [sp, #8]
  40b5d8:	ldr	x2, [sp]
  40b5dc:	bl	402f78 <strncmp@plt>
  40b5e0:	cbnz	w0, 40b5f8 <__fxstat64@plt+0x8580>
  40b5e4:	ldr	x8, [sp, #16]
  40b5e8:	ldr	x9, [sp]
  40b5ec:	add	x8, x8, x9
  40b5f0:	stur	x8, [x29, #-8]
  40b5f4:	b	40b600 <__fxstat64@plt+0x8588>
  40b5f8:	mov	x8, xzr
  40b5fc:	stur	x8, [x29, #-8]
  40b600:	ldur	x0, [x29, #-8]
  40b604:	ldp	x29, x30, [sp, #32]
  40b608:	add	sp, sp, #0x30
  40b60c:	ret
  40b610:	sub	sp, sp, #0xa0
  40b614:	stp	x29, x30, [sp, #144]
  40b618:	add	x29, sp, #0x90
  40b61c:	mov	x8, xzr
  40b620:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  40b624:	add	x9, x9, #0xf88
  40b628:	add	x9, x9, #0x3
  40b62c:	adrp	x10, 40f000 <__fxstat64@plt+0xbf88>
  40b630:	add	x10, x10, #0x5d9
  40b634:	adrp	x11, 40f000 <__fxstat64@plt+0xbf88>
  40b638:	add	x11, x11, #0x58e
  40b63c:	stur	w0, [x29, #-8]
  40b640:	stur	x1, [x29, #-16]
  40b644:	stur	w2, [x29, #-20]
  40b648:	stur	x3, [x29, #-32]
  40b64c:	stur	x8, [x29, #-40]
  40b650:	stur	x8, [x29, #-48]
  40b654:	str	x9, [sp, #32]
  40b658:	str	x10, [sp, #24]
  40b65c:	str	x11, [sp, #16]
  40b660:	ldur	w8, [x29, #-8]
  40b664:	cmp	w8, #0x0
  40b668:	cset	w8, ge  // ge = tcont
  40b66c:	mov	w9, #0x1                   	// #1
  40b670:	eor	w8, w8, #0x1
  40b674:	eor	w8, w8, w9
  40b678:	eor	w8, w8, w9
  40b67c:	and	w8, w8, #0x1
  40b680:	mov	w0, w8
  40b684:	sxtw	x10, w0
  40b688:	cbz	x10, 40b6ac <__fxstat64@plt+0x8634>
  40b68c:	mov	w8, wzr
  40b690:	mov	w0, w8
  40b694:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40b698:	add	x1, x1, #0x581
  40b69c:	ldr	x2, [sp, #32]
  40b6a0:	mov	w3, #0x1e1                 	// #481
  40b6a4:	ldr	x4, [sp, #16]
  40b6a8:	bl	402988 <log_assert_failed_realm@plt>
  40b6ac:	ldur	x8, [x29, #-16]
  40b6b0:	cmp	x8, #0x0
  40b6b4:	cset	w9, ne  // ne = any
  40b6b8:	mov	w10, #0x1                   	// #1
  40b6bc:	eor	w9, w9, #0x1
  40b6c0:	eor	w9, w9, w10
  40b6c4:	eor	w9, w9, w10
  40b6c8:	and	w9, w9, #0x1
  40b6cc:	mov	w0, w9
  40b6d0:	sxtw	x8, w0
  40b6d4:	cbz	x8, 40b6f8 <__fxstat64@plt+0x8680>
  40b6d8:	mov	w8, wzr
  40b6dc:	mov	w0, w8
  40b6e0:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40b6e4:	add	x1, x1, #0x5c6
  40b6e8:	ldr	x2, [sp, #32]
  40b6ec:	mov	w3, #0x1e2                 	// #482
  40b6f0:	ldr	x4, [sp, #16]
  40b6f4:	bl	402988 <log_assert_failed_realm@plt>
  40b6f8:	ldur	w8, [x29, #-20]
  40b6fc:	cmp	w8, #0x0
  40b700:	cset	w8, ge  // ge = tcont
  40b704:	mov	w9, #0x1                   	// #1
  40b708:	eor	w8, w8, #0x1
  40b70c:	eor	w8, w8, w9
  40b710:	eor	w8, w8, w9
  40b714:	and	w8, w8, #0x1
  40b718:	mov	w0, w8
  40b71c:	sxtw	x10, w0
  40b720:	cbz	x10, 40b744 <__fxstat64@plt+0x86cc>
  40b724:	mov	w8, wzr
  40b728:	mov	w0, w8
  40b72c:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40b730:	add	x1, x1, #0x5cb
  40b734:	ldr	x2, [sp, #32]
  40b738:	mov	w3, #0x1e3                 	// #483
  40b73c:	ldr	x4, [sp, #16]
  40b740:	bl	402988 <log_assert_failed_realm@plt>
  40b744:	ldur	x8, [x29, #-32]
  40b748:	cmp	x8, #0x0
  40b74c:	cset	w9, ne  // ne = any
  40b750:	mov	w10, #0x1                   	// #1
  40b754:	eor	w9, w9, #0x1
  40b758:	eor	w9, w9, w10
  40b75c:	eor	w9, w9, w10
  40b760:	and	w9, w9, #0x1
  40b764:	mov	w0, w9
  40b768:	sxtw	x8, w0
  40b76c:	cbz	x8, 40b790 <__fxstat64@plt+0x8718>
  40b770:	mov	w8, wzr
  40b774:	mov	w0, w8
  40b778:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40b77c:	add	x1, x1, #0x5d6
  40b780:	ldr	x2, [sp, #32]
  40b784:	mov	w3, #0x1e4                 	// #484
  40b788:	ldr	x4, [sp, #16]
  40b78c:	bl	402988 <log_assert_failed_realm@plt>
  40b790:	ldur	w0, [x29, #-8]
  40b794:	sub	x1, x29, #0x28
  40b798:	bl	4075d8 <__fxstat64@plt+0x4560>
  40b79c:	stur	w0, [x29, #-52]
  40b7a0:	ldur	w8, [x29, #-52]
  40b7a4:	cmp	w8, #0x0
  40b7a8:	cset	w8, ge  // ge = tcont
  40b7ac:	tbnz	w8, #0, 40b7c4 <__fxstat64@plt+0x874c>
  40b7b0:	ldur	w8, [x29, #-52]
  40b7b4:	stur	w8, [x29, #-4]
  40b7b8:	mov	w8, #0x1                   	// #1
  40b7bc:	stur	w8, [x29, #-56]
  40b7c0:	b	40b9f8 <__fxstat64@plt+0x8980>
  40b7c4:	ldur	w8, [x29, #-52]
  40b7c8:	cbnz	w8, 40b860 <__fxstat64@plt+0x87e8>
  40b7cc:	mov	w8, #0x3                   	// #3
  40b7d0:	stur	w8, [x29, #-60]
  40b7d4:	mov	w8, #0x16                  	// #22
  40b7d8:	movk	w8, #0x4000, lsl #16
  40b7dc:	stur	w8, [x29, #-64]
  40b7e0:	stur	wzr, [x29, #-68]
  40b7e4:	ldur	w0, [x29, #-68]
  40b7e8:	bl	4029d8 <log_get_max_level_realm@plt>
  40b7ec:	ldur	w8, [x29, #-60]
  40b7f0:	and	w8, w8, #0x7
  40b7f4:	cmp	w0, w8
  40b7f8:	b.lt	40b830 <__fxstat64@plt+0x87b8>  // b.tstop
  40b7fc:	ldur	w8, [x29, #-68]
  40b800:	ldur	w9, [x29, #-60]
  40b804:	orr	w0, w9, w8, lsl #10
  40b808:	ldur	w1, [x29, #-64]
  40b80c:	ldur	x6, [x29, #-16]
  40b810:	ldr	x2, [sp, #32]
  40b814:	mov	w3, #0x1ec                 	// #492
  40b818:	ldr	x4, [sp, #24]
  40b81c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b820:	add	x5, x5, #0x5e7
  40b824:	bl	4029e8 <log_internal_realm@plt>
  40b828:	str	w0, [sp, #12]
  40b82c:	b	40b844 <__fxstat64@plt+0x87cc>
  40b830:	ldur	w0, [x29, #-64]
  40b834:	bl	4029f8 <abs@plt>
  40b838:	mov	w8, wzr
  40b83c:	subs	w8, w8, w0, uxtb
  40b840:	str	w8, [sp, #12]
  40b844:	ldr	w8, [sp, #12]
  40b848:	str	w8, [sp, #72]
  40b84c:	ldr	w8, [sp, #72]
  40b850:	stur	w8, [x29, #-4]
  40b854:	mov	w8, #0x1                   	// #1
  40b858:	stur	w8, [x29, #-56]
  40b85c:	b	40b9f8 <__fxstat64@plt+0x8980>
  40b860:	ldur	w0, [x29, #-20]
  40b864:	sub	x1, x29, #0x30
  40b868:	bl	4075d8 <__fxstat64@plt+0x4560>
  40b86c:	stur	w0, [x29, #-52]
  40b870:	ldur	w8, [x29, #-52]
  40b874:	cmp	w8, #0x0
  40b878:	cset	w8, ge  // ge = tcont
  40b87c:	tbnz	w8, #0, 40b894 <__fxstat64@plt+0x881c>
  40b880:	ldur	w8, [x29, #-52]
  40b884:	stur	w8, [x29, #-4]
  40b888:	mov	w8, #0x1                   	// #1
  40b88c:	stur	w8, [x29, #-56]
  40b890:	b	40b9f8 <__fxstat64@plt+0x8980>
  40b894:	ldur	w8, [x29, #-52]
  40b898:	cbz	w8, 40b8ac <__fxstat64@plt+0x8834>
  40b89c:	ldur	x0, [x29, #-40]
  40b8a0:	ldur	x1, [x29, #-48]
  40b8a4:	bl	40ba68 <__fxstat64@plt+0x89f0>
  40b8a8:	cbz	w0, 40b940 <__fxstat64@plt+0x88c8>
  40b8ac:	mov	w8, #0x5                   	// #5
  40b8b0:	str	w8, [sp, #68]
  40b8b4:	mov	w8, #0x11                  	// #17
  40b8b8:	movk	w8, #0x4000, lsl #16
  40b8bc:	str	w8, [sp, #64]
  40b8c0:	str	wzr, [sp, #60]
  40b8c4:	ldr	w0, [sp, #60]
  40b8c8:	bl	4029d8 <log_get_max_level_realm@plt>
  40b8cc:	ldr	w8, [sp, #68]
  40b8d0:	and	w8, w8, #0x7
  40b8d4:	cmp	w0, w8
  40b8d8:	b.lt	40b910 <__fxstat64@plt+0x8898>  // b.tstop
  40b8dc:	ldr	w8, [sp, #60]
  40b8e0:	ldr	w9, [sp, #68]
  40b8e4:	orr	w0, w9, w8, lsl #10
  40b8e8:	ldr	w1, [sp, #64]
  40b8ec:	ldur	x6, [x29, #-32]
  40b8f0:	ldr	x2, [sp, #32]
  40b8f4:	mov	w3, #0x1f4                 	// #500
  40b8f8:	ldr	x4, [sp, #24]
  40b8fc:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b900:	add	x5, x5, #0x61c
  40b904:	bl	4029e8 <log_internal_realm@plt>
  40b908:	str	w0, [sp, #8]
  40b90c:	b	40b924 <__fxstat64@plt+0x88ac>
  40b910:	ldr	w0, [sp, #64]
  40b914:	bl	4029f8 <abs@plt>
  40b918:	mov	w8, wzr
  40b91c:	subs	w8, w8, w0, uxtb
  40b920:	str	w8, [sp, #8]
  40b924:	ldr	w8, [sp, #8]
  40b928:	str	w8, [sp, #56]
  40b92c:	ldr	w8, [sp, #56]
  40b930:	stur	w8, [x29, #-4]
  40b934:	mov	w8, #0x1                   	// #1
  40b938:	stur	w8, [x29, #-56]
  40b93c:	b	40b9f8 <__fxstat64@plt+0x8980>
  40b940:	ldur	x0, [x29, #-40]
  40b944:	ldur	x1, [x29, #-48]
  40b948:	bl	40bbd0 <__fxstat64@plt+0x8b58>
  40b94c:	cmp	w0, #0x0
  40b950:	cset	w8, ge  // ge = tcont
  40b954:	tbnz	w8, #0, 40b9ec <__fxstat64@plt+0x8974>
  40b958:	mov	w8, #0x4                   	// #4
  40b95c:	str	w8, [sp, #52]
  40b960:	mov	w8, #0x74                  	// #116
  40b964:	movk	w8, #0x4000, lsl #16
  40b968:	str	w8, [sp, #48]
  40b96c:	str	wzr, [sp, #44]
  40b970:	ldr	w0, [sp, #44]
  40b974:	bl	4029d8 <log_get_max_level_realm@plt>
  40b978:	ldr	w8, [sp, #52]
  40b97c:	and	w8, w8, #0x7
  40b980:	cmp	w0, w8
  40b984:	b.lt	40b9bc <__fxstat64@plt+0x8944>  // b.tstop
  40b988:	ldr	w8, [sp, #44]
  40b98c:	ldr	w9, [sp, #52]
  40b990:	orr	w0, w9, w8, lsl #10
  40b994:	ldr	w1, [sp, #48]
  40b998:	ldur	x6, [x29, #-32]
  40b99c:	ldr	x2, [sp, #32]
  40b9a0:	mov	w3, #0x1f7                 	// #503
  40b9a4:	ldr	x4, [sp, #24]
  40b9a8:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40b9ac:	add	x5, x5, #0x654
  40b9b0:	bl	4029e8 <log_internal_realm@plt>
  40b9b4:	str	w0, [sp, #4]
  40b9b8:	b	40b9d0 <__fxstat64@plt+0x8958>
  40b9bc:	ldr	w0, [sp, #48]
  40b9c0:	bl	4029f8 <abs@plt>
  40b9c4:	mov	w8, wzr
  40b9c8:	subs	w8, w8, w0, uxtb
  40b9cc:	str	w8, [sp, #4]
  40b9d0:	ldr	w8, [sp, #4]
  40b9d4:	str	w8, [sp, #40]
  40b9d8:	ldr	w8, [sp, #40]
  40b9dc:	stur	w8, [x29, #-4]
  40b9e0:	mov	w8, #0x1                   	// #1
  40b9e4:	stur	w8, [x29, #-56]
  40b9e8:	b	40b9f8 <__fxstat64@plt+0x8980>
  40b9ec:	stur	wzr, [x29, #-4]
  40b9f0:	mov	w8, #0x1                   	// #1
  40b9f4:	stur	w8, [x29, #-56]
  40b9f8:	sub	x0, x29, #0x30
  40b9fc:	bl	403464 <__fxstat64@plt+0x3ec>
  40ba00:	sub	x0, x29, #0x28
  40ba04:	bl	403464 <__fxstat64@plt+0x3ec>
  40ba08:	ldur	w0, [x29, #-4]
  40ba0c:	ldp	x29, x30, [sp, #144]
  40ba10:	add	sp, sp, #0xa0
  40ba14:	ret
  40ba18:	sub	sp, sp, #0x30
  40ba1c:	stp	x29, x30, [sp, #32]
  40ba20:	add	x29, sp, #0x20
  40ba24:	mov	x8, xzr
  40ba28:	mov	x4, x8
  40ba2c:	mov	x5, x8
  40ba30:	mov	x6, x8
  40ba34:	stur	w0, [x29, #-4]
  40ba38:	stur	w1, [x29, #-8]
  40ba3c:	str	x2, [sp, #16]
  40ba40:	str	w3, [sp, #12]
  40ba44:	ldur	w0, [x29, #-4]
  40ba48:	ldur	w1, [x29, #-8]
  40ba4c:	ldr	x2, [sp, #16]
  40ba50:	ldr	w3, [sp, #12]
  40ba54:	mov	x7, x8
  40ba58:	bl	402f88 <copy_bytes_full@plt>
  40ba5c:	ldp	x29, x30, [sp, #32]
  40ba60:	add	sp, sp, #0x30
  40ba64:	ret
  40ba68:	sub	sp, sp, #0x50
  40ba6c:	stp	x29, x30, [sp, #64]
  40ba70:	add	x29, sp, #0x40
  40ba74:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40ba78:	add	x8, x8, #0xf88
  40ba7c:	add	x8, x8, #0x3
  40ba80:	stur	x0, [x29, #-16]
  40ba84:	stur	x1, [x29, #-24]
  40ba88:	str	x8, [sp, #16]
  40ba8c:	ldur	x8, [x29, #-16]
  40ba90:	cmp	x8, #0x0
  40ba94:	cset	w9, ne  // ne = any
  40ba98:	mov	w10, #0x1                   	// #1
  40ba9c:	eor	w9, w9, #0x1
  40baa0:	eor	w9, w9, w10
  40baa4:	eor	w9, w9, w10
  40baa8:	and	w9, w9, #0x1
  40baac:	mov	w0, w9
  40bab0:	sxtw	x8, w0
  40bab4:	cbz	x8, 40badc <__fxstat64@plt+0x8a64>
  40bab8:	mov	w8, wzr
  40babc:	mov	w0, w8
  40bac0:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40bac4:	add	x1, x1, #0x695
  40bac8:	ldr	x2, [sp, #16]
  40bacc:	mov	w3, #0x1c6                 	// #454
  40bad0:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40bad4:	add	x4, x4, #0x697
  40bad8:	bl	402988 <log_assert_failed_realm@plt>
  40badc:	ldur	x8, [x29, #-24]
  40bae0:	cmp	x8, #0x0
  40bae4:	cset	w9, ne  // ne = any
  40bae8:	mov	w10, #0x1                   	// #1
  40baec:	eor	w9, w9, #0x1
  40baf0:	eor	w9, w9, w10
  40baf4:	eor	w9, w9, w10
  40baf8:	and	w9, w9, #0x1
  40bafc:	mov	w0, w9
  40bb00:	sxtw	x8, w0
  40bb04:	cbz	x8, 40bb2c <__fxstat64@plt+0x8ab4>
  40bb08:	mov	w8, wzr
  40bb0c:	mov	w0, w8
  40bb10:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40bb14:	add	x1, x1, #0x6c7
  40bb18:	ldr	x2, [sp, #16]
  40bb1c:	mov	w3, #0x1c7                 	// #455
  40bb20:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40bb24:	add	x4, x4, #0x697
  40bb28:	bl	402988 <log_assert_failed_realm@plt>
  40bb2c:	ldur	x0, [x29, #-16]
  40bb30:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40bb34:	add	x8, x8, #0x28a
  40bb38:	mov	x1, x8
  40bb3c:	str	x8, [sp, #8]
  40bb40:	bl	402f98 <strcspn@plt>
  40bb44:	str	x0, [sp, #32]
  40bb48:	ldur	x0, [x29, #-24]
  40bb4c:	ldr	x1, [sp, #8]
  40bb50:	bl	402f98 <strcspn@plt>
  40bb54:	str	x0, [sp, #24]
  40bb58:	ldr	x8, [sp, #32]
  40bb5c:	ldr	x9, [sp, #24]
  40bb60:	cmp	x8, x9
  40bb64:	b.eq	40bbac <__fxstat64@plt+0x8b34>  // b.none
  40bb68:	ldr	x8, [sp, #32]
  40bb6c:	ldr	x9, [sp, #24]
  40bb70:	cmp	x8, x9
  40bb74:	b.cs	40bb84 <__fxstat64@plt+0x8b0c>  // b.hs, b.nlast
  40bb78:	mov	w8, #0xffffffff            	// #-1
  40bb7c:	str	w8, [sp, #4]
  40bb80:	b	40bba0 <__fxstat64@plt+0x8b28>
  40bb84:	ldr	x8, [sp, #32]
  40bb88:	ldr	x9, [sp, #24]
  40bb8c:	mov	w10, wzr
  40bb90:	mov	w11, #0x1                   	// #1
  40bb94:	cmp	x8, x9
  40bb98:	csel	w10, w11, w10, hi  // hi = pmore
  40bb9c:	str	w10, [sp, #4]
  40bba0:	ldr	w8, [sp, #4]
  40bba4:	stur	w8, [x29, #-4]
  40bba8:	b	40bbc0 <__fxstat64@plt+0x8b48>
  40bbac:	ldur	x0, [x29, #-16]
  40bbb0:	ldur	x1, [x29, #-24]
  40bbb4:	ldr	x2, [sp, #32]
  40bbb8:	bl	402f78 <strncmp@plt>
  40bbbc:	stur	w0, [x29, #-4]
  40bbc0:	ldur	w0, [x29, #-4]
  40bbc4:	ldp	x29, x30, [sp, #64]
  40bbc8:	add	sp, sp, #0x50
  40bbcc:	ret
  40bbd0:	sub	sp, sp, #0x30
  40bbd4:	stp	x29, x30, [sp, #32]
  40bbd8:	add	x29, sp, #0x20
  40bbdc:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40bbe0:	add	x8, x8, #0x28a
  40bbe4:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  40bbe8:	add	x9, x9, #0xf88
  40bbec:	add	x9, x9, #0x3
  40bbf0:	stur	x0, [x29, #-8]
  40bbf4:	str	x1, [sp, #16]
  40bbf8:	str	x8, [sp, #8]
  40bbfc:	str	x9, [sp]
  40bc00:	ldur	x8, [x29, #-8]
  40bc04:	cmp	x8, #0x0
  40bc08:	cset	w9, ne  // ne = any
  40bc0c:	mov	w10, #0x1                   	// #1
  40bc10:	eor	w9, w9, #0x1
  40bc14:	eor	w9, w9, w10
  40bc18:	eor	w9, w9, w10
  40bc1c:	and	w9, w9, #0x1
  40bc20:	mov	w0, w9
  40bc24:	sxtw	x8, w0
  40bc28:	cbz	x8, 40bc50 <__fxstat64@plt+0x8bd8>
  40bc2c:	mov	w8, wzr
  40bc30:	mov	w0, w8
  40bc34:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40bc38:	add	x1, x1, #0x695
  40bc3c:	ldr	x2, [sp]
  40bc40:	mov	w3, #0x1d2                 	// #466
  40bc44:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40bc48:	add	x4, x4, #0x6c9
  40bc4c:	bl	402988 <log_assert_failed_realm@plt>
  40bc50:	ldr	x8, [sp, #16]
  40bc54:	cmp	x8, #0x0
  40bc58:	cset	w9, ne  // ne = any
  40bc5c:	mov	w10, #0x1                   	// #1
  40bc60:	eor	w9, w9, #0x1
  40bc64:	eor	w9, w9, w10
  40bc68:	eor	w9, w9, w10
  40bc6c:	and	w9, w9, #0x1
  40bc70:	mov	w0, w9
  40bc74:	sxtw	x8, w0
  40bc78:	cbz	x8, 40bca0 <__fxstat64@plt+0x8c28>
  40bc7c:	mov	w8, wzr
  40bc80:	mov	w0, w8
  40bc84:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40bc88:	add	x1, x1, #0x6c7
  40bc8c:	ldr	x2, [sp]
  40bc90:	mov	w3, #0x1d3                 	// #467
  40bc94:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40bc98:	add	x4, x4, #0x6c9
  40bc9c:	bl	402988 <log_assert_failed_realm@plt>
  40bca0:	ldur	x0, [x29, #-8]
  40bca4:	ldr	x1, [sp, #8]
  40bca8:	bl	402f98 <strcspn@plt>
  40bcac:	ldur	x8, [x29, #-8]
  40bcb0:	add	x8, x8, x0
  40bcb4:	stur	x8, [x29, #-8]
  40bcb8:	ldur	x0, [x29, #-8]
  40bcbc:	ldr	x1, [sp, #8]
  40bcc0:	bl	402fa8 <strspn@plt>
  40bcc4:	ldur	x8, [x29, #-8]
  40bcc8:	add	x8, x8, x0
  40bccc:	stur	x8, [x29, #-8]
  40bcd0:	ldr	x0, [sp, #16]
  40bcd4:	ldr	x1, [sp, #8]
  40bcd8:	bl	402f98 <strcspn@plt>
  40bcdc:	ldr	x8, [sp, #16]
  40bce0:	add	x8, x8, x0
  40bce4:	str	x8, [sp, #16]
  40bce8:	ldr	x0, [sp, #16]
  40bcec:	ldr	x1, [sp, #8]
  40bcf0:	bl	402fa8 <strspn@plt>
  40bcf4:	ldr	x8, [sp, #16]
  40bcf8:	add	x8, x8, x0
  40bcfc:	str	x8, [sp, #16]
  40bd00:	ldur	x0, [x29, #-8]
  40bd04:	ldr	x1, [sp, #16]
  40bd08:	bl	402fb8 <strverscmp@plt>
  40bd0c:	ldp	x29, x30, [sp, #32]
  40bd10:	add	sp, sp, #0x30
  40bd14:	ret
  40bd18:	sub	sp, sp, #0x20
  40bd1c:	stp	x29, x30, [sp, #16]
  40bd20:	add	x29, sp, #0x10
  40bd24:	str	x0, [sp, #8]
  40bd28:	ldr	x8, [sp, #8]
  40bd2c:	ldr	x8, [x8]
  40bd30:	cbz	x8, 40bd40 <__fxstat64@plt+0x8cc8>
  40bd34:	ldr	x8, [sp, #8]
  40bd38:	ldr	x0, [x8]
  40bd3c:	bl	40bd74 <__fxstat64@plt+0x8cfc>
  40bd40:	ldp	x29, x30, [sp, #16]
  40bd44:	add	sp, sp, #0x20
  40bd48:	ret
  40bd4c:	sub	sp, sp, #0x20
  40bd50:	stp	x29, x30, [sp, #16]
  40bd54:	add	x29, sp, #0x10
  40bd58:	str	x0, [sp, #8]
  40bd5c:	ldr	x8, [sp, #8]
  40bd60:	ldr	x0, [x8]
  40bd64:	bl	402fc8 <safe_fclose@plt>
  40bd68:	ldp	x29, x30, [sp, #16]
  40bd6c:	add	sp, sp, #0x20
  40bd70:	ret
  40bd74:	sub	sp, sp, #0x20
  40bd78:	stp	x29, x30, [sp, #16]
  40bd7c:	add	x29, sp, #0x10
  40bd80:	str	x0, [sp, #8]
  40bd84:	ldr	x0, [sp, #8]
  40bd88:	bl	402f48 <unlink_noerrno@plt>
  40bd8c:	ldr	x8, [sp, #8]
  40bd90:	mov	x0, x8
  40bd94:	bl	402978 <free@plt>
  40bd98:	ldp	x29, x30, [sp, #16]
  40bd9c:	add	sp, sp, #0x20
  40bda0:	ret
  40bda4:	sub	sp, sp, #0x50
  40bda8:	stp	x29, x30, [sp, #64]
  40bdac:	add	x29, sp, #0x40
  40bdb0:	mov	x8, xzr
  40bdb4:	add	x9, sp, #0x10
  40bdb8:	stur	x0, [x29, #-24]
  40bdbc:	stur	x1, [x29, #-16]
  40bdc0:	str	x2, [sp, #32]
  40bdc4:	str	x3, [sp, #24]
  40bdc8:	str	x8, [sp, #16]
  40bdcc:	mov	x0, x9
  40bdd0:	bl	402c38 <efi_get_boot_options@plt>
  40bdd4:	str	w0, [sp, #12]
  40bdd8:	ldr	w10, [sp, #12]
  40bddc:	cmp	w10, #0x0
  40bde0:	cset	w10, ge  // ge = tcont
  40bde4:	tbnz	w10, #0, 40bdfc <__fxstat64@plt+0x8d84>
  40bde8:	ldr	w8, [sp, #12]
  40bdec:	stur	w8, [x29, #-4]
  40bdf0:	mov	w8, #0x1                   	// #1
  40bdf4:	str	w8, [sp, #4]
  40bdf8:	b	40bf08 <__fxstat64@plt+0x8e90>
  40bdfc:	str	wzr, [sp, #8]
  40be00:	ldr	w8, [sp, #8]
  40be04:	ldr	w9, [sp, #12]
  40be08:	cmp	w8, w9
  40be0c:	b.ge	40be74 <__fxstat64@plt+0x8dfc>  // b.tcont
  40be10:	ldr	x8, [sp, #16]
  40be14:	ldrsw	x9, [sp, #8]
  40be18:	ldrh	w0, [x8, x9, lsl #1]
  40be1c:	ldr	x3, [sp, #32]
  40be20:	ldur	x1, [x29, #-24]
  40be24:	ldur	x2, [x29, #-16]
  40be28:	bl	40c128 <__fxstat64@plt+0x90b0>
  40be2c:	tbnz	w0, #0, 40be34 <__fxstat64@plt+0x8dbc>
  40be30:	b	40be64 <__fxstat64@plt+0x8dec>
  40be34:	ldr	x8, [sp, #16]
  40be38:	ldrsw	x9, [sp, #8]
  40be3c:	mov	x10, #0x2                   	// #2
  40be40:	mul	x9, x10, x9
  40be44:	add	x8, x8, x9
  40be48:	ldrh	w11, [x8]
  40be4c:	ldr	x8, [sp, #24]
  40be50:	strh	w11, [x8]
  40be54:	mov	w11, #0x1                   	// #1
  40be58:	stur	w11, [x29, #-4]
  40be5c:	str	w11, [sp, #4]
  40be60:	b	40bf08 <__fxstat64@plt+0x8e90>
  40be64:	ldr	w8, [sp, #8]
  40be68:	add	w8, w8, #0x1
  40be6c:	str	w8, [sp, #8]
  40be70:	b	40be00 <__fxstat64@plt+0x8d88>
  40be74:	str	wzr, [sp, #8]
  40be78:	ldr	w8, [sp, #8]
  40be7c:	ldr	w9, [sp, #12]
  40be80:	cmp	w8, w9
  40be84:	b.ge	40becc <__fxstat64@plt+0x8e54>  // b.tcont
  40be88:	ldr	w8, [sp, #8]
  40be8c:	ldr	x9, [sp, #16]
  40be90:	ldrsw	x10, [sp, #8]
  40be94:	ldrh	w11, [x9, x10, lsl #1]
  40be98:	cmp	w8, w11
  40be9c:	b.eq	40bebc <__fxstat64@plt+0x8e44>  // b.none
  40bea0:	ldr	w8, [sp, #8]
  40bea4:	ldr	x9, [sp, #24]
  40bea8:	strh	w8, [x9]
  40beac:	mov	w8, #0x1                   	// #1
  40beb0:	stur	w8, [x29, #-4]
  40beb4:	str	w8, [sp, #4]
  40beb8:	b	40bf08 <__fxstat64@plt+0x8e90>
  40bebc:	ldr	w8, [sp, #8]
  40bec0:	add	w8, w8, #0x1
  40bec4:	str	w8, [sp, #8]
  40bec8:	b	40be78 <__fxstat64@plt+0x8e00>
  40becc:	ldr	w8, [sp, #8]
  40bed0:	mov	w9, #0xffff                	// #65535
  40bed4:	cmp	w8, w9
  40bed8:	b.ne	40bef0 <__fxstat64@plt+0x8e78>  // b.any
  40bedc:	mov	w8, #0xffffffe4            	// #-28
  40bee0:	stur	w8, [x29, #-4]
  40bee4:	mov	w8, #0x1                   	// #1
  40bee8:	str	w8, [sp, #4]
  40beec:	b	40bf08 <__fxstat64@plt+0x8e90>
  40bef0:	ldr	w8, [sp, #8]
  40bef4:	ldr	x9, [sp, #24]
  40bef8:	strh	w8, [x9]
  40befc:	stur	wzr, [x29, #-4]
  40bf00:	mov	w8, #0x1                   	// #1
  40bf04:	str	w8, [sp, #4]
  40bf08:	add	x0, sp, #0x10
  40bf0c:	bl	403464 <__fxstat64@plt+0x3ec>
  40bf10:	ldur	w0, [x29, #-4]
  40bf14:	ldp	x29, x30, [sp, #64]
  40bf18:	add	sp, sp, #0x50
  40bf1c:	ret
  40bf20:	sub	sp, sp, #0x40
  40bf24:	stp	x29, x30, [sp, #48]
  40bf28:	add	x29, sp, #0x30
  40bf2c:	mov	x8, xzr
  40bf30:	mov	w9, #0x1                   	// #1
  40bf34:	sub	x10, x29, #0x10
  40bf38:	sturh	w0, [x29, #-6]
  40bf3c:	and	w9, w1, w9
  40bf40:	sturb	w9, [x29, #-7]
  40bf44:	stur	x8, [x29, #-16]
  40bf48:	mov	x0, x10
  40bf4c:	bl	402c48 <efi_get_boot_order@plt>
  40bf50:	str	w0, [sp, #20]
  40bf54:	ldr	w9, [sp, #20]
  40bf58:	cmp	w9, #0x0
  40bf5c:	cset	w9, gt
  40bf60:	tbnz	w9, #0, 40bf80 <__fxstat64@plt+0x8f08>
  40bf64:	sub	x0, x29, #0x6
  40bf68:	mov	x1, #0x1                   	// #1
  40bf6c:	bl	402fd8 <efi_set_boot_order@plt>
  40bf70:	stur	w0, [x29, #-4]
  40bf74:	mov	w8, #0x1                   	// #1
  40bf78:	str	w8, [sp, #12]
  40bf7c:	b	40c110 <__fxstat64@plt+0x9098>
  40bf80:	ldr	w8, [sp, #20]
  40bf84:	cmp	w8, #0x1
  40bf88:	b.ne	40bfb0 <__fxstat64@plt+0x8f38>  // b.any
  40bf8c:	ldur	x8, [x29, #-16]
  40bf90:	ldrh	w9, [x8]
  40bf94:	ldurh	w10, [x29, #-6]
  40bf98:	cmp	w9, w10
  40bf9c:	b.ne	40bfb0 <__fxstat64@plt+0x8f38>  // b.any
  40bfa0:	stur	wzr, [x29, #-4]
  40bfa4:	mov	w8, #0x1                   	// #1
  40bfa8:	str	w8, [sp, #12]
  40bfac:	b	40c110 <__fxstat64@plt+0x9098>
  40bfb0:	str	wzr, [sp, #16]
  40bfb4:	ldr	w8, [sp, #16]
  40bfb8:	ldr	w9, [sp, #20]
  40bfbc:	cmp	w8, w9
  40bfc0:	b.ge	40c04c <__fxstat64@plt+0x8fd4>  // b.tcont
  40bfc4:	ldur	x8, [x29, #-16]
  40bfc8:	ldrsw	x9, [sp, #16]
  40bfcc:	ldrh	w10, [x8, x9, lsl #1]
  40bfd0:	ldurh	w11, [x29, #-6]
  40bfd4:	cmp	w10, w11
  40bfd8:	b.eq	40bfe0 <__fxstat64@plt+0x8f68>  // b.none
  40bfdc:	b	40c03c <__fxstat64@plt+0x8fc4>
  40bfe0:	ldurb	w8, [x29, #-7]
  40bfe4:	tbnz	w8, #0, 40bff8 <__fxstat64@plt+0x8f80>
  40bfe8:	stur	wzr, [x29, #-4]
  40bfec:	mov	w8, #0x1                   	// #1
  40bff0:	str	w8, [sp, #12]
  40bff4:	b	40c110 <__fxstat64@plt+0x9098>
  40bff8:	ldur	x8, [x29, #-16]
  40bffc:	add	x0, x8, #0x2
  40c000:	ldur	x1, [x29, #-16]
  40c004:	ldrsw	x8, [sp, #16]
  40c008:	mov	x9, #0x2                   	// #2
  40c00c:	mul	x2, x8, x9
  40c010:	bl	402fe8 <memmove@plt>
  40c014:	ldurh	w10, [x29, #-6]
  40c018:	ldur	x8, [x29, #-16]
  40c01c:	strh	w10, [x8]
  40c020:	ldur	x0, [x29, #-16]
  40c024:	ldrsw	x1, [sp, #20]
  40c028:	bl	402fd8 <efi_set_boot_order@plt>
  40c02c:	stur	w0, [x29, #-4]
  40c030:	mov	w10, #0x1                   	// #1
  40c034:	str	w10, [sp, #12]
  40c038:	b	40c110 <__fxstat64@plt+0x9098>
  40c03c:	ldr	w8, [sp, #16]
  40c040:	add	w8, w8, #0x1
  40c044:	str	w8, [sp, #16]
  40c048:	b	40bfb4 <__fxstat64@plt+0x8f3c>
  40c04c:	ldur	x0, [x29, #-16]
  40c050:	ldr	w8, [sp, #20]
  40c054:	add	w8, w8, #0x1
  40c058:	mov	w1, w8
  40c05c:	sxtw	x1, w1
  40c060:	mov	x2, #0x2                   	// #2
  40c064:	bl	402ff8 <reallocarray@plt>
  40c068:	str	x0, [sp, #24]
  40c06c:	ldr	x9, [sp, #24]
  40c070:	cbnz	x9, 40c088 <__fxstat64@plt+0x9010>
  40c074:	mov	w8, #0xfffffff4            	// #-12
  40c078:	stur	w8, [x29, #-4]
  40c07c:	mov	w8, #0x1                   	// #1
  40c080:	str	w8, [sp, #12]
  40c084:	b	40c110 <__fxstat64@plt+0x9098>
  40c088:	ldr	x8, [sp, #24]
  40c08c:	stur	x8, [x29, #-16]
  40c090:	ldurb	w9, [x29, #-7]
  40c094:	tbnz	w9, #0, 40c09c <__fxstat64@plt+0x9024>
  40c098:	b	40c0c8 <__fxstat64@plt+0x9050>
  40c09c:	ldur	x8, [x29, #-16]
  40c0a0:	add	x0, x8, #0x2
  40c0a4:	ldur	x1, [x29, #-16]
  40c0a8:	ldrsw	x8, [sp, #20]
  40c0ac:	mov	x9, #0x2                   	// #2
  40c0b0:	mul	x2, x8, x9
  40c0b4:	bl	402fe8 <memmove@plt>
  40c0b8:	ldurh	w10, [x29, #-6]
  40c0bc:	ldur	x8, [x29, #-16]
  40c0c0:	strh	w10, [x8]
  40c0c4:	b	40c0e4 <__fxstat64@plt+0x906c>
  40c0c8:	ldurh	w8, [x29, #-6]
  40c0cc:	ldur	x9, [x29, #-16]
  40c0d0:	ldrsw	x10, [sp, #20]
  40c0d4:	mov	x11, #0x2                   	// #2
  40c0d8:	mul	x10, x11, x10
  40c0dc:	add	x9, x9, x10
  40c0e0:	strh	w8, [x9]
  40c0e4:	ldur	x0, [x29, #-16]
  40c0e8:	ldr	w8, [sp, #20]
  40c0ec:	mov	w9, #0x1                   	// #1
  40c0f0:	add	w8, w8, #0x1
  40c0f4:	mov	w1, w8
  40c0f8:	sxtw	x1, w1
  40c0fc:	str	w9, [sp, #8]
  40c100:	bl	402fd8 <efi_set_boot_order@plt>
  40c104:	stur	w0, [x29, #-4]
  40c108:	ldr	w8, [sp, #8]
  40c10c:	str	w8, [sp, #12]
  40c110:	sub	x0, x29, #0x10
  40c114:	bl	403464 <__fxstat64@plt+0x3ec>
  40c118:	ldur	w0, [x29, #-4]
  40c11c:	ldp	x29, x30, [sp, #48]
  40c120:	add	sp, sp, #0x40
  40c124:	ret
  40c128:	sub	sp, sp, #0x60
  40c12c:	stp	x29, x30, [sp, #80]
  40c130:	add	x29, sp, #0x50
  40c134:	mov	x8, xzr
  40c138:	mov	x4, x8
  40c13c:	add	x9, sp, #0x20
  40c140:	add	x10, sp, #0x10
  40c144:	stur	x1, [x29, #-24]
  40c148:	stur	x2, [x29, #-16]
  40c14c:	sturh	w0, [x29, #-26]
  40c150:	str	x3, [sp, #40]
  40c154:	str	x8, [sp, #32]
  40c158:	ldurh	w0, [x29, #-26]
  40c15c:	mov	x1, x4
  40c160:	mov	x2, x10
  40c164:	mov	x3, x9
  40c168:	mov	x4, x8
  40c16c:	bl	402d58 <efi_get_boot_option@plt>
  40c170:	str	w0, [sp, #12]
  40c174:	ldr	w11, [sp, #12]
  40c178:	cmp	w11, #0x0
  40c17c:	cset	w11, ge  // ge = tcont
  40c180:	tbnz	w11, #0, 40c19c <__fxstat64@plt+0x9124>
  40c184:	mov	w8, wzr
  40c188:	and	w8, w8, #0x1
  40c18c:	sturb	w8, [x29, #-1]
  40c190:	mov	w8, #0x1                   	// #1
  40c194:	str	w8, [sp, #8]
  40c198:	b	40c208 <__fxstat64@plt+0x9190>
  40c19c:	ldur	x0, [x29, #-24]
  40c1a0:	ldur	x1, [x29, #-16]
  40c1a4:	ldr	x2, [sp, #16]
  40c1a8:	ldr	x3, [sp, #24]
  40c1ac:	bl	40c224 <__fxstat64@plt+0x91ac>
  40c1b0:	cbnz	w0, 40c1cc <__fxstat64@plt+0x9154>
  40c1b4:	mov	w8, wzr
  40c1b8:	and	w8, w8, #0x1
  40c1bc:	sturb	w8, [x29, #-1]
  40c1c0:	mov	w8, #0x1                   	// #1
  40c1c4:	str	w8, [sp, #8]
  40c1c8:	b	40c208 <__fxstat64@plt+0x9190>
  40c1cc:	ldr	x0, [sp, #40]
  40c1d0:	ldr	x1, [sp, #32]
  40c1d4:	bl	40c274 <__fxstat64@plt+0x91fc>
  40c1d8:	tbnz	w0, #0, 40c1f4 <__fxstat64@plt+0x917c>
  40c1dc:	mov	w8, wzr
  40c1e0:	and	w8, w8, #0x1
  40c1e4:	sturb	w8, [x29, #-1]
  40c1e8:	mov	w8, #0x1                   	// #1
  40c1ec:	str	w8, [sp, #8]
  40c1f0:	b	40c208 <__fxstat64@plt+0x9190>
  40c1f4:	mov	w8, #0x1                   	// #1
  40c1f8:	and	w8, w8, #0x1
  40c1fc:	sturb	w8, [x29, #-1]
  40c200:	mov	w8, #0x1                   	// #1
  40c204:	str	w8, [sp, #8]
  40c208:	add	x0, sp, #0x20
  40c20c:	bl	403464 <__fxstat64@plt+0x3ec>
  40c210:	ldurb	w8, [x29, #-1]
  40c214:	and	w0, w8, #0x1
  40c218:	ldp	x29, x30, [sp, #80]
  40c21c:	add	sp, sp, #0x60
  40c220:	ret
  40c224:	sub	sp, sp, #0x30
  40c228:	stp	x29, x30, [sp, #32]
  40c22c:	add	x29, sp, #0x20
  40c230:	mov	x8, #0x10                  	// #16
  40c234:	add	x9, sp, #0x10
  40c238:	mov	x10, sp
  40c23c:	str	x0, [sp, #16]
  40c240:	str	x1, [sp, #24]
  40c244:	str	x2, [sp]
  40c248:	str	x3, [sp, #8]
  40c24c:	mov	x0, x9
  40c250:	mov	x1, x10
  40c254:	mov	x2, x8
  40c258:	bl	403008 <memcmp@plt>
  40c25c:	cmp	w0, #0x0
  40c260:	cset	w11, eq  // eq = none
  40c264:	and	w0, w11, #0x1
  40c268:	ldp	x29, x30, [sp, #32]
  40c26c:	add	sp, sp, #0x30
  40c270:	ret
  40c274:	sub	sp, sp, #0x20
  40c278:	stp	x29, x30, [sp, #16]
  40c27c:	add	x29, sp, #0x10
  40c280:	str	x0, [sp, #8]
  40c284:	str	x1, [sp]
  40c288:	ldr	x0, [sp, #8]
  40c28c:	ldr	x1, [sp]
  40c290:	bl	403018 <strcmp_ptr@plt>
  40c294:	cmp	w0, #0x0
  40c298:	cset	w8, eq  // eq = none
  40c29c:	and	w0, w8, #0x1
  40c2a0:	ldp	x29, x30, [sp, #16]
  40c2a4:	add	sp, sp, #0x20
  40c2a8:	ret
  40c2ac:	stp	x29, x30, [sp, #-16]!
  40c2b0:	mov	x29, sp
  40c2b4:	sub	sp, sp, #0x80
  40c2b8:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40c2bc:	add	x8, x8, #0xe30
  40c2c0:	adrp	x9, 40d000 <__fxstat64@plt+0x9f88>
  40c2c4:	add	x9, x9, #0xf88
  40c2c8:	add	x9, x9, #0x3
  40c2cc:	stur	x0, [x29, #-8]
  40c2d0:	stur	x8, [x29, #-32]
  40c2d4:	ldur	x8, [x29, #-8]
  40c2d8:	stur	x8, [x29, #-40]
  40c2dc:	stur	x9, [x29, #-104]
  40c2e0:	ldur	x8, [x29, #-32]
  40c2e4:	ldrb	w9, [x8]
  40c2e8:	mov	w10, #0x0                   	// #0
  40c2ec:	cmp	w9, #0x2f
  40c2f0:	stur	w10, [x29, #-108]
  40c2f4:	b.ne	40c30c <__fxstat64@plt+0x9294>  // b.any
  40c2f8:	ldur	x8, [x29, #-32]
  40c2fc:	ldrb	w9, [x8, #1]
  40c300:	cmp	w9, #0x2f
  40c304:	cset	w9, eq  // eq = none
  40c308:	stur	w9, [x29, #-108]
  40c30c:	ldur	w8, [x29, #-108]
  40c310:	tbnz	w8, #0, 40c318 <__fxstat64@plt+0x92a0>
  40c314:	b	40c328 <__fxstat64@plt+0x92b0>
  40c318:	ldur	x8, [x29, #-32]
  40c31c:	add	x8, x8, #0x1
  40c320:	stur	x8, [x29, #-32]
  40c324:	b	40c2e0 <__fxstat64@plt+0x9268>
  40c328:	ldur	x0, [x29, #-40]
  40c32c:	bl	4074a8 <__fxstat64@plt+0x4430>
  40c330:	tbnz	w0, #0, 40c338 <__fxstat64@plt+0x92c0>
  40c334:	b	40c344 <__fxstat64@plt+0x92cc>
  40c338:	ldur	x8, [x29, #-32]
  40c33c:	stur	x8, [x29, #-48]
  40c340:	b	40c4e4 <__fxstat64@plt+0x946c>
  40c344:	ldur	x0, [x29, #-40]
  40c348:	bl	402bb8 <strlen@plt>
  40c34c:	add	x8, x0, #0x1
  40c350:	ldur	x0, [x29, #-32]
  40c354:	stur	x8, [x29, #-120]
  40c358:	bl	402bb8 <strlen@plt>
  40c35c:	ldur	x8, [x29, #-120]
  40c360:	add	x9, x8, x0
  40c364:	add	x9, x9, #0x1
  40c368:	stur	x9, [x29, #-72]
  40c36c:	ldur	x9, [x29, #-72]
  40c370:	stur	x9, [x29, #-80]
  40c374:	ldur	x1, [x29, #-80]
  40c378:	mov	x0, #0x1                   	// #1
  40c37c:	bl	4074e8 <__fxstat64@plt+0x4470>
  40c380:	mov	w8, #0x1                   	// #1
  40c384:	eor	w9, w0, #0x1
  40c388:	eor	w9, w9, w8
  40c38c:	eor	w9, w9, w8
  40c390:	eor	w8, w9, w8
  40c394:	and	w8, w8, #0x1
  40c398:	mov	w1, w8
  40c39c:	sxtw	x10, w1
  40c3a0:	cbz	x10, 40c3c8 <__fxstat64@plt+0x9350>
  40c3a4:	mov	w8, wzr
  40c3a8:	mov	w0, w8
  40c3ac:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40c3b0:	add	x1, x1, #0xd6d
  40c3b4:	ldur	x2, [x29, #-104]
  40c3b8:	mov	w3, #0x387                 	// #903
  40c3bc:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40c3c0:	add	x4, x4, #0xe3d
  40c3c4:	bl	402988 <log_assert_failed_realm@plt>
  40c3c8:	ldur	x8, [x29, #-80]
  40c3cc:	mov	x9, #0x1                   	// #1
  40c3d0:	mul	x8, x9, x8
  40c3d4:	cmp	x8, #0x400, lsl #12
  40c3d8:	cset	w10, ls  // ls = plast
  40c3dc:	mov	w11, #0x1                   	// #1
  40c3e0:	eor	w10, w10, #0x1
  40c3e4:	eor	w10, w10, w11
  40c3e8:	eor	w10, w10, w11
  40c3ec:	and	w10, w10, #0x1
  40c3f0:	mov	w0, w10
  40c3f4:	sxtw	x8, w0
  40c3f8:	cbz	x8, 40c420 <__fxstat64@plt+0x93a8>
  40c3fc:	mov	w8, wzr
  40c400:	mov	w0, w8
  40c404:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40c408:	add	x1, x1, #0xd98
  40c40c:	ldur	x2, [x29, #-104]
  40c410:	mov	w3, #0x387                 	// #903
  40c414:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40c418:	add	x4, x4, #0xe3d
  40c41c:	bl	402988 <log_assert_failed_realm@plt>
  40c420:	ldur	x8, [x29, #-80]
  40c424:	mov	x9, #0x1                   	// #1
  40c428:	mul	x8, x9, x8
  40c42c:	mul	x8, x8, x9
  40c430:	add	x8, x8, #0xf
  40c434:	and	x8, x8, #0xfffffffffffffff0
  40c438:	mov	x9, sp
  40c43c:	subs	x8, x9, x8
  40c440:	mov	sp, x8
  40c444:	stur	x8, [x29, #-88]
  40c448:	ldur	x8, [x29, #-88]
  40c44c:	stur	x8, [x29, #-64]
  40c450:	ldur	x0, [x29, #-64]
  40c454:	ldur	x1, [x29, #-40]
  40c458:	bl	402c58 <stpcpy@plt>
  40c45c:	stur	x0, [x29, #-56]
  40c460:	ldur	x8, [x29, #-56]
  40c464:	ldur	x9, [x29, #-64]
  40c468:	mov	w10, #0x0                   	// #0
  40c46c:	cmp	x8, x9
  40c470:	stur	w10, [x29, #-124]
  40c474:	b.ls	40c48c <__fxstat64@plt+0x9414>  // b.plast
  40c478:	ldur	x8, [x29, #-56]
  40c47c:	ldurb	w9, [x8, #-1]
  40c480:	cmp	w9, #0x2f
  40c484:	cset	w9, eq  // eq = none
  40c488:	stur	w9, [x29, #-124]
  40c48c:	ldur	w8, [x29, #-124]
  40c490:	tbnz	w8, #0, 40c498 <__fxstat64@plt+0x9420>
  40c494:	b	40c4ac <__fxstat64@plt+0x9434>
  40c498:	ldur	x8, [x29, #-56]
  40c49c:	mov	x9, #0xffffffffffffffff    	// #-1
  40c4a0:	add	x8, x8, x9
  40c4a4:	stur	x8, [x29, #-56]
  40c4a8:	b	40c460 <__fxstat64@plt+0x93e8>
  40c4ac:	ldur	x8, [x29, #-32]
  40c4b0:	ldrb	w9, [x8]
  40c4b4:	cmp	w9, #0x2f
  40c4b8:	b.eq	40c4d0 <__fxstat64@plt+0x9458>  // b.none
  40c4bc:	ldur	x8, [x29, #-56]
  40c4c0:	add	x9, x8, #0x1
  40c4c4:	stur	x9, [x29, #-56]
  40c4c8:	mov	w10, #0x2f                  	// #47
  40c4cc:	strb	w10, [x8]
  40c4d0:	ldur	x0, [x29, #-56]
  40c4d4:	ldur	x1, [x29, #-32]
  40c4d8:	bl	402c68 <strcpy@plt>
  40c4dc:	ldur	x8, [x29, #-64]
  40c4e0:	stur	x8, [x29, #-48]
  40c4e4:	ldur	x8, [x29, #-48]
  40c4e8:	stur	x8, [x29, #-96]
  40c4ec:	ldur	x8, [x29, #-96]
  40c4f0:	stur	x8, [x29, #-16]
  40c4f4:	ldur	x0, [x29, #-16]
  40c4f8:	mov	w1, #0x6                   	// #6
  40c4fc:	bl	403028 <rm_rf@plt>
  40c500:	stur	w0, [x29, #-20]
  40c504:	ldur	x0, [x29, #-8]
  40c508:	bl	40ce20 <__fxstat64@plt+0x9da8>
  40c50c:	stur	w0, [x29, #-24]
  40c510:	ldur	w9, [x29, #-24]
  40c514:	cmp	w9, #0x0
  40c518:	cset	w9, ge  // ge = tcont
  40c51c:	tbnz	w9, #0, 40c530 <__fxstat64@plt+0x94b8>
  40c520:	ldur	w8, [x29, #-20]
  40c524:	cbnz	w8, 40c530 <__fxstat64@plt+0x94b8>
  40c528:	ldur	w8, [x29, #-24]
  40c52c:	stur	w8, [x29, #-20]
  40c530:	ldur	w0, [x29, #-20]
  40c534:	mov	sp, x29
  40c538:	ldp	x29, x30, [sp], #16
  40c53c:	ret
  40c540:	stp	x29, x30, [sp, #-16]!
  40c544:	mov	x29, sp
  40c548:	sub	sp, sp, #0xc0
  40c54c:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40c550:	add	x8, x8, #0xf88
  40c554:	add	x8, x8, #0x3
  40c558:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  40c55c:	add	x9, x9, #0xef9
  40c560:	stur	x0, [x29, #-16]
  40c564:	stur	x1, [x29, #-24]
  40c568:	stur	x8, [x29, #-144]
  40c56c:	stur	x9, [x29, #-152]
  40c570:	ldur	x8, [x29, #-16]
  40c574:	cmp	x8, #0x0
  40c578:	cset	w9, ne  // ne = any
  40c57c:	mov	w10, #0x1                   	// #1
  40c580:	eor	w9, w9, #0x1
  40c584:	eor	w9, w9, w10
  40c588:	eor	w9, w9, w10
  40c58c:	and	w9, w9, #0x1
  40c590:	mov	w0, w9
  40c594:	sxtw	x8, w0
  40c598:	cbz	x8, 40c5bc <__fxstat64@plt+0x9544>
  40c59c:	mov	w8, wzr
  40c5a0:	mov	w0, w8
  40c5a4:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40c5a8:	add	x1, x1, #0x7c1
  40c5ac:	ldur	x2, [x29, #-144]
  40c5b0:	mov	w3, #0x394                 	// #916
  40c5b4:	ldur	x4, [x29, #-152]
  40c5b8:	bl	402988 <log_assert_failed_realm@plt>
  40c5bc:	ldur	x8, [x29, #-24]
  40c5c0:	cmp	x8, #0x0
  40c5c4:	cset	w9, ne  // ne = any
  40c5c8:	mov	w10, #0x1                   	// #1
  40c5cc:	eor	w9, w9, #0x1
  40c5d0:	eor	w9, w9, w10
  40c5d4:	eor	w9, w9, w10
  40c5d8:	and	w9, w9, #0x1
  40c5dc:	mov	w0, w9
  40c5e0:	sxtw	x8, w0
  40c5e4:	cbz	x8, 40c608 <__fxstat64@plt+0x9590>
  40c5e8:	mov	w8, wzr
  40c5ec:	mov	w0, w8
  40c5f0:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40c5f4:	add	x1, x1, #0xf25
  40c5f8:	ldur	x2, [x29, #-144]
  40c5fc:	mov	w3, #0x395                 	// #917
  40c600:	ldur	x4, [x29, #-152]
  40c604:	bl	402988 <log_assert_failed_realm@plt>
  40c608:	ldur	x8, [x29, #-24]
  40c60c:	stur	x8, [x29, #-40]
  40c610:	ldur	x8, [x29, #-16]
  40c614:	stur	x8, [x29, #-48]
  40c618:	ldur	x8, [x29, #-40]
  40c61c:	ldrb	w9, [x8]
  40c620:	mov	w10, #0x0                   	// #0
  40c624:	cmp	w9, #0x2f
  40c628:	stur	w10, [x29, #-156]
  40c62c:	b.ne	40c644 <__fxstat64@plt+0x95cc>  // b.any
  40c630:	ldur	x8, [x29, #-40]
  40c634:	ldrb	w9, [x8, #1]
  40c638:	cmp	w9, #0x2f
  40c63c:	cset	w9, eq  // eq = none
  40c640:	stur	w9, [x29, #-156]
  40c644:	ldur	w8, [x29, #-156]
  40c648:	tbnz	w8, #0, 40c650 <__fxstat64@plt+0x95d8>
  40c64c:	b	40c660 <__fxstat64@plt+0x95e8>
  40c650:	ldur	x8, [x29, #-40]
  40c654:	add	x8, x8, #0x1
  40c658:	stur	x8, [x29, #-40]
  40c65c:	b	40c618 <__fxstat64@plt+0x95a0>
  40c660:	ldur	x0, [x29, #-48]
  40c664:	bl	4074a8 <__fxstat64@plt+0x4430>
  40c668:	tbnz	w0, #0, 40c670 <__fxstat64@plt+0x95f8>
  40c66c:	b	40c67c <__fxstat64@plt+0x9604>
  40c670:	ldur	x8, [x29, #-40]
  40c674:	stur	x8, [x29, #-56]
  40c678:	b	40c814 <__fxstat64@plt+0x979c>
  40c67c:	ldur	x0, [x29, #-48]
  40c680:	bl	402bb8 <strlen@plt>
  40c684:	add	x8, x0, #0x1
  40c688:	ldur	x0, [x29, #-40]
  40c68c:	stur	x8, [x29, #-168]
  40c690:	bl	402bb8 <strlen@plt>
  40c694:	ldur	x8, [x29, #-168]
  40c698:	add	x9, x8, x0
  40c69c:	add	x9, x9, #0x1
  40c6a0:	stur	x9, [x29, #-80]
  40c6a4:	ldur	x9, [x29, #-80]
  40c6a8:	stur	x9, [x29, #-88]
  40c6ac:	ldur	x1, [x29, #-88]
  40c6b0:	mov	x0, #0x1                   	// #1
  40c6b4:	bl	4074e8 <__fxstat64@plt+0x4470>
  40c6b8:	mov	w8, #0x1                   	// #1
  40c6bc:	eor	w9, w0, #0x1
  40c6c0:	eor	w9, w9, w8
  40c6c4:	eor	w9, w9, w8
  40c6c8:	eor	w8, w9, w8
  40c6cc:	and	w8, w8, #0x1
  40c6d0:	mov	w1, w8
  40c6d4:	sxtw	x10, w1
  40c6d8:	cbz	x10, 40c6fc <__fxstat64@plt+0x9684>
  40c6dc:	mov	w8, wzr
  40c6e0:	mov	w0, w8
  40c6e4:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40c6e8:	add	x1, x1, #0xd6d
  40c6ec:	ldur	x2, [x29, #-144]
  40c6f0:	mov	w3, #0x397                 	// #919
  40c6f4:	ldur	x4, [x29, #-152]
  40c6f8:	bl	402988 <log_assert_failed_realm@plt>
  40c6fc:	ldur	x8, [x29, #-88]
  40c700:	mov	x9, #0x1                   	// #1
  40c704:	mul	x8, x9, x8
  40c708:	cmp	x8, #0x400, lsl #12
  40c70c:	cset	w10, ls  // ls = plast
  40c710:	mov	w11, #0x1                   	// #1
  40c714:	eor	w10, w10, #0x1
  40c718:	eor	w10, w10, w11
  40c71c:	eor	w10, w10, w11
  40c720:	and	w10, w10, #0x1
  40c724:	mov	w0, w10
  40c728:	sxtw	x8, w0
  40c72c:	cbz	x8, 40c750 <__fxstat64@plt+0x96d8>
  40c730:	mov	w8, wzr
  40c734:	mov	w0, w8
  40c738:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40c73c:	add	x1, x1, #0xd98
  40c740:	ldur	x2, [x29, #-144]
  40c744:	mov	w3, #0x397                 	// #919
  40c748:	ldur	x4, [x29, #-152]
  40c74c:	bl	402988 <log_assert_failed_realm@plt>
  40c750:	ldur	x8, [x29, #-88]
  40c754:	mov	x9, #0x1                   	// #1
  40c758:	mul	x8, x9, x8
  40c75c:	mul	x8, x8, x9
  40c760:	add	x8, x8, #0xf
  40c764:	and	x8, x8, #0xfffffffffffffff0
  40c768:	mov	x9, sp
  40c76c:	subs	x8, x9, x8
  40c770:	mov	sp, x8
  40c774:	stur	x8, [x29, #-96]
  40c778:	ldur	x8, [x29, #-96]
  40c77c:	stur	x8, [x29, #-72]
  40c780:	ldur	x0, [x29, #-72]
  40c784:	ldur	x1, [x29, #-48]
  40c788:	bl	402c58 <stpcpy@plt>
  40c78c:	stur	x0, [x29, #-64]
  40c790:	ldur	x8, [x29, #-64]
  40c794:	ldur	x9, [x29, #-72]
  40c798:	mov	w10, #0x0                   	// #0
  40c79c:	cmp	x8, x9
  40c7a0:	stur	w10, [x29, #-172]
  40c7a4:	b.ls	40c7bc <__fxstat64@plt+0x9744>  // b.plast
  40c7a8:	ldur	x8, [x29, #-64]
  40c7ac:	ldurb	w9, [x8, #-1]
  40c7b0:	cmp	w9, #0x2f
  40c7b4:	cset	w9, eq  // eq = none
  40c7b8:	stur	w9, [x29, #-172]
  40c7bc:	ldur	w8, [x29, #-172]
  40c7c0:	tbnz	w8, #0, 40c7c8 <__fxstat64@plt+0x9750>
  40c7c4:	b	40c7dc <__fxstat64@plt+0x9764>
  40c7c8:	ldur	x8, [x29, #-64]
  40c7cc:	mov	x9, #0xffffffffffffffff    	// #-1
  40c7d0:	add	x8, x8, x9
  40c7d4:	stur	x8, [x29, #-64]
  40c7d8:	b	40c790 <__fxstat64@plt+0x9718>
  40c7dc:	ldur	x8, [x29, #-40]
  40c7e0:	ldrb	w9, [x8]
  40c7e4:	cmp	w9, #0x2f
  40c7e8:	b.eq	40c800 <__fxstat64@plt+0x9788>  // b.none
  40c7ec:	ldur	x8, [x29, #-64]
  40c7f0:	add	x9, x8, #0x1
  40c7f4:	stur	x9, [x29, #-64]
  40c7f8:	mov	w10, #0x2f                  	// #47
  40c7fc:	strb	w10, [x8]
  40c800:	ldur	x0, [x29, #-64]
  40c804:	ldur	x1, [x29, #-40]
  40c808:	bl	402c68 <strcpy@plt>
  40c80c:	ldur	x8, [x29, #-72]
  40c810:	stur	x8, [x29, #-56]
  40c814:	ldur	x8, [x29, #-56]
  40c818:	stur	x8, [x29, #-104]
  40c81c:	ldur	x8, [x29, #-104]
  40c820:	stur	x8, [x29, #-32]
  40c824:	ldur	x0, [x29, #-32]
  40c828:	bl	402f18 <unlink@plt>
  40c82c:	cmp	w0, #0x0
  40c830:	cset	w9, ge  // ge = tcont
  40c834:	tbnz	w9, #0, 40c90c <__fxstat64@plt+0x9894>
  40c838:	bl	402b98 <__errno_location@plt>
  40c83c:	ldr	w8, [x0]
  40c840:	mov	w9, #0x3                   	// #3
  40c844:	mov	w10, #0x7                   	// #7
  40c848:	cmp	w8, #0x2
  40c84c:	csel	w8, w10, w9, eq  // eq = none
  40c850:	stur	w8, [x29, #-108]
  40c854:	bl	402b98 <__errno_location@plt>
  40c858:	ldr	w8, [x0]
  40c85c:	stur	w8, [x29, #-112]
  40c860:	stur	wzr, [x29, #-116]
  40c864:	ldur	w0, [x29, #-116]
  40c868:	bl	4029d8 <log_get_max_level_realm@plt>
  40c86c:	ldur	w8, [x29, #-108]
  40c870:	and	w8, w8, #0x7
  40c874:	cmp	w0, w8
  40c878:	b.lt	40c8b4 <__fxstat64@plt+0x983c>  // b.tstop
  40c87c:	ldur	w8, [x29, #-116]
  40c880:	ldur	w9, [x29, #-108]
  40c884:	orr	w0, w9, w8, lsl #10
  40c888:	ldur	w1, [x29, #-112]
  40c88c:	ldur	x6, [x29, #-32]
  40c890:	ldur	x2, [x29, #-144]
  40c894:	mov	w3, #0x39a                 	// #922
  40c898:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40c89c:	add	x4, x4, #0xf2a
  40c8a0:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40c8a4:	add	x5, x5, #0xf36
  40c8a8:	bl	4029e8 <log_internal_realm@plt>
  40c8ac:	stur	w0, [x29, #-176]
  40c8b0:	b	40c8c8 <__fxstat64@plt+0x9850>
  40c8b4:	ldur	w0, [x29, #-112]
  40c8b8:	bl	4029f8 <abs@plt>
  40c8bc:	mov	w8, wzr
  40c8c0:	subs	w8, w8, w0, uxtb
  40c8c4:	stur	w8, [x29, #-176]
  40c8c8:	ldur	w8, [x29, #-176]
  40c8cc:	stur	w8, [x29, #-120]
  40c8d0:	bl	402b98 <__errno_location@plt>
  40c8d4:	ldr	w8, [x0]
  40c8d8:	cmp	w8, #0x2
  40c8dc:	b.ne	40c8ec <__fxstat64@plt+0x9874>  // b.any
  40c8e0:	mov	w8, wzr
  40c8e4:	stur	w8, [x29, #-180]
  40c8e8:	b	40c900 <__fxstat64@plt+0x9888>
  40c8ec:	bl	402b98 <__errno_location@plt>
  40c8f0:	ldr	w8, [x0]
  40c8f4:	mov	w9, wzr
  40c8f8:	subs	w8, w9, w8
  40c8fc:	stur	w8, [x29, #-180]
  40c900:	ldur	w8, [x29, #-180]
  40c904:	stur	w8, [x29, #-4]
  40c908:	b	40c990 <__fxstat64@plt+0x9918>
  40c90c:	mov	w8, #0x6                   	// #6
  40c910:	stur	w8, [x29, #-124]
  40c914:	stur	wzr, [x29, #-128]
  40c918:	stur	wzr, [x29, #-132]
  40c91c:	ldur	w0, [x29, #-132]
  40c920:	bl	4029d8 <log_get_max_level_realm@plt>
  40c924:	ldur	w8, [x29, #-124]
  40c928:	and	w8, w8, #0x7
  40c92c:	cmp	w0, w8
  40c930:	b.lt	40c96c <__fxstat64@plt+0x98f4>  // b.tstop
  40c934:	ldur	w8, [x29, #-132]
  40c938:	ldur	w9, [x29, #-124]
  40c93c:	orr	w0, w9, w8, lsl #10
  40c940:	ldur	w1, [x29, #-128]
  40c944:	ldur	x6, [x29, #-32]
  40c948:	ldur	x2, [x29, #-144]
  40c94c:	mov	w3, #0x39f                 	// #927
  40c950:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40c954:	add	x4, x4, #0xf2a
  40c958:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40c95c:	add	x5, x5, #0xf55
  40c960:	bl	4029e8 <log_internal_realm@plt>
  40c964:	stur	w0, [x29, #-184]
  40c968:	b	40c980 <__fxstat64@plt+0x9908>
  40c96c:	ldur	w0, [x29, #-128]
  40c970:	bl	4029f8 <abs@plt>
  40c974:	mov	w8, wzr
  40c978:	subs	w8, w8, w0, uxtb
  40c97c:	stur	w8, [x29, #-184]
  40c980:	ldur	w8, [x29, #-184]
  40c984:	stur	w8, [x29, #-136]
  40c988:	mov	w8, #0x1                   	// #1
  40c98c:	stur	w8, [x29, #-4]
  40c990:	ldur	w0, [x29, #-4]
  40c994:	mov	sp, x29
  40c998:	ldp	x29, x30, [sp], #16
  40c99c:	ret
  40c9a0:	sub	sp, sp, #0x40
  40c9a4:	stp	x29, x30, [sp, #48]
  40c9a8:	add	x29, sp, #0x30
  40c9ac:	stur	x0, [x29, #-16]
  40c9b0:	str	x1, [sp, #24]
  40c9b4:	ldr	x8, [sp, #24]
  40c9b8:	ldr	x8, [x8]
  40c9bc:	cbnz	x8, 40c9c8 <__fxstat64@plt+0x9950>
  40c9c0:	stur	wzr, [x29, #-4]
  40c9c4:	b	40ca1c <__fxstat64@plt+0x99a4>
  40c9c8:	ldur	x0, [x29, #-16]
  40c9cc:	ldr	x8, [sp, #24]
  40c9d0:	add	x1, x8, #0x8
  40c9d4:	bl	40c9a0 <__fxstat64@plt+0x9928>
  40c9d8:	str	w0, [sp, #20]
  40c9dc:	ldur	x0, [x29, #-16]
  40c9e0:	ldr	x8, [sp, #24]
  40c9e4:	ldr	x1, [x8]
  40c9e8:	bl	40d4e4 <__fxstat64@plt+0xa46c>
  40c9ec:	str	w0, [sp, #16]
  40c9f0:	ldr	w9, [sp, #20]
  40c9f4:	cmp	w9, #0x0
  40c9f8:	cset	w9, ge  // ge = tcont
  40c9fc:	tbnz	w9, #0, 40ca0c <__fxstat64@plt+0x9994>
  40ca00:	ldr	w8, [sp, #20]
  40ca04:	str	w8, [sp, #12]
  40ca08:	b	40ca14 <__fxstat64@plt+0x999c>
  40ca0c:	ldr	w8, [sp, #16]
  40ca10:	str	w8, [sp, #12]
  40ca14:	ldr	w8, [sp, #12]
  40ca18:	stur	w8, [x29, #-4]
  40ca1c:	ldur	w0, [x29, #-4]
  40ca20:	ldp	x29, x30, [sp, #48]
  40ca24:	add	sp, sp, #0x40
  40ca28:	ret
  40ca2c:	sub	sp, sp, #0x70
  40ca30:	stp	x29, x30, [sp, #96]
  40ca34:	add	x29, sp, #0x60
  40ca38:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40ca3c:	add	x8, x8, #0xf88
  40ca40:	add	x8, x8, #0x3
  40ca44:	stur	x1, [x29, #-16]
  40ca48:	stur	x2, [x29, #-8]
  40ca4c:	stur	x0, [x29, #-24]
  40ca50:	str	x8, [sp, #24]
  40ca54:	ldur	x8, [x29, #-24]
  40ca58:	cmp	x8, #0x0
  40ca5c:	cset	w9, ne  // ne = any
  40ca60:	mov	w10, #0x1                   	// #1
  40ca64:	eor	w9, w9, #0x1
  40ca68:	eor	w9, w9, w10
  40ca6c:	eor	w9, w9, w10
  40ca70:	and	w9, w9, #0x1
  40ca74:	mov	w0, w9
  40ca78:	sxtw	x8, w0
  40ca7c:	cbz	x8, 40caa4 <__fxstat64@plt+0x9a2c>
  40ca80:	mov	w8, wzr
  40ca84:	mov	w0, w8
  40ca88:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40ca8c:	add	x1, x1, #0x7c1
  40ca90:	ldr	x2, [sp, #24]
  40ca94:	mov	w3, #0x37e                 	// #894
  40ca98:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40ca9c:	add	x4, x4, #0xfbb
  40caa0:	bl	402988 <log_assert_failed_realm@plt>
  40caa4:	ldur	x0, [x29, #-24]
  40caa8:	ldur	x8, [x29, #-16]
  40caac:	ldur	x1, [x29, #-8]
  40cab0:	str	x0, [sp, #16]
  40cab4:	mov	x0, x8
  40cab8:	add	x2, sp, #0x27
  40cabc:	bl	402dc8 <sd_id128_to_string@plt>
  40cac0:	ldr	x8, [sp, #16]
  40cac4:	str	x0, [sp, #8]
  40cac8:	mov	x0, x8
  40cacc:	ldr	x1, [sp, #8]
  40cad0:	bl	40d4e4 <__fxstat64@plt+0xa46c>
  40cad4:	ldp	x29, x30, [sp, #96]
  40cad8:	add	sp, sp, #0x70
  40cadc:	ret
  40cae0:	sub	sp, sp, #0x40
  40cae4:	stp	x29, x30, [sp, #48]
  40cae8:	add	x29, sp, #0x30
  40caec:	mov	w8, #0x1                   	// #1
  40caf0:	str	x0, [sp, #24]
  40caf4:	str	x1, [sp, #32]
  40caf8:	str	x2, [sp, #16]
  40cafc:	and	w8, w3, w8
  40cb00:	strb	w8, [sp, #15]
  40cb04:	bl	402a88 <is_efi_boot@plt>
  40cb08:	tbnz	w0, #0, 40cb14 <__fxstat64@plt+0x9a9c>
  40cb0c:	stur	wzr, [x29, #-4]
  40cb10:	b	40cb88 <__fxstat64@plt+0x9b10>
  40cb14:	ldr	x2, [sp, #16]
  40cb18:	ldr	x0, [sp, #24]
  40cb1c:	ldr	x1, [sp, #32]
  40cb20:	add	x3, sp, #0xc
  40cb24:	bl	40bda4 <__fxstat64@plt+0x8d2c>
  40cb28:	str	w0, [sp, #8]
  40cb2c:	ldr	w8, [sp, #8]
  40cb30:	cmp	w8, #0x1
  40cb34:	b.eq	40cb40 <__fxstat64@plt+0x9ac8>  // b.none
  40cb38:	stur	wzr, [x29, #-4]
  40cb3c:	b	40cb88 <__fxstat64@plt+0x9b10>
  40cb40:	ldrh	w0, [sp, #12]
  40cb44:	bl	403038 <efi_remove_boot_option@plt>
  40cb48:	str	w0, [sp, #8]
  40cb4c:	ldr	w8, [sp, #8]
  40cb50:	cmp	w8, #0x0
  40cb54:	cset	w8, ge  // ge = tcont
  40cb58:	tbnz	w8, #0, 40cb68 <__fxstat64@plt+0x9af0>
  40cb5c:	ldr	w8, [sp, #8]
  40cb60:	stur	w8, [x29, #-4]
  40cb64:	b	40cb88 <__fxstat64@plt+0x9b10>
  40cb68:	ldrb	w8, [sp, #15]
  40cb6c:	tbnz	w8, #0, 40cb74 <__fxstat64@plt+0x9afc>
  40cb70:	b	40cb84 <__fxstat64@plt+0x9b0c>
  40cb74:	ldrh	w0, [sp, #12]
  40cb78:	bl	40d8e8 <__fxstat64@plt+0xa870>
  40cb7c:	stur	w0, [x29, #-4]
  40cb80:	b	40cb88 <__fxstat64@plt+0x9b10>
  40cb84:	stur	wzr, [x29, #-4]
  40cb88:	ldur	w0, [x29, #-4]
  40cb8c:	ldp	x29, x30, [sp, #48]
  40cb90:	add	sp, sp, #0x40
  40cb94:	ret
  40cb98:	sub	sp, sp, #0xb0
  40cb9c:	stp	x29, x30, [sp, #160]
  40cba0:	add	x29, sp, #0xa0
  40cba4:	adrp	x8, 40f000 <__fxstat64@plt+0xbf88>
  40cba8:	add	x8, x8, #0xff5
  40cbac:	adrp	x9, 410000 <__fxstat64@plt+0xcf88>
  40cbb0:	add	x9, x9, #0x9
  40cbb4:	adrp	x10, 410000 <__fxstat64@plt+0xcf88>
  40cbb8:	add	x10, x10, #0x24
  40cbbc:	adrp	x11, 410000 <__fxstat64@plt+0xcf88>
  40cbc0:	add	x11, x11, #0x37
  40cbc4:	adrp	x12, 40f000 <__fxstat64@plt+0xbf88>
  40cbc8:	add	x12, x12, #0xa97
  40cbcc:	mov	x13, xzr
  40cbd0:	adrp	x14, 40d000 <__fxstat64@plt+0x9f88>
  40cbd4:	add	x14, x14, #0xf88
  40cbd8:	add	x14, x14, #0x3
  40cbdc:	sub	x15, x29, #0x48
  40cbe0:	stur	wzr, [x29, #-12]
  40cbe4:	stur	x8, [x29, #-8]
  40cbe8:	str	x8, [sp, #80]
  40cbec:	ldr	x8, [sp, #80]
  40cbf0:	stur	x8, [x29, #-72]
  40cbf4:	str	x9, [x15, #8]
  40cbf8:	str	x10, [x15, #16]
  40cbfc:	str	x11, [x15, #24]
  40cc00:	str	x12, [x15, #32]
  40cc04:	str	x13, [x15, #40]
  40cc08:	stur	x15, [x29, #-24]
  40cc0c:	str	x14, [sp, #16]
  40cc10:	ldur	x8, [x29, #-8]
  40cc14:	cbz	x8, 40ce10 <__fxstat64@plt+0x9d98>
  40cc18:	add	x8, sp, #0x38
  40cc1c:	mov	w9, #0x4a                  	// #74
  40cc20:	strb	w9, [sp, #56]
  40cc24:	mov	w9, #0x67                  	// #103
  40cc28:	strb	w9, [x8, #1]
  40cc2c:	mov	w9, #0xb0                  	// #176
  40cc30:	strb	w9, [x8, #2]
  40cc34:	mov	w9, #0x82                  	// #130
  40cc38:	strb	w9, [x8, #3]
  40cc3c:	mov	w9, #0xa                   	// #10
  40cc40:	strb	w9, [x8, #4]
  40cc44:	mov	w9, #0x4c                  	// #76
  40cc48:	strb	w9, [x8, #5]
  40cc4c:	mov	w9, #0x41                  	// #65
  40cc50:	strb	w9, [x8, #6]
  40cc54:	mov	w9, #0xcf                  	// #207
  40cc58:	strb	w9, [x8, #7]
  40cc5c:	mov	w9, #0xb6                  	// #182
  40cc60:	strb	w9, [x8, #8]
  40cc64:	mov	w9, #0xc7                  	// #199
  40cc68:	strb	w9, [x8, #9]
  40cc6c:	mov	w9, #0x44                  	// #68
  40cc70:	strb	w9, [x8, #10]
  40cc74:	mov	w9, #0xb                   	// #11
  40cc78:	strb	w9, [x8, #11]
  40cc7c:	mov	w9, #0x29                  	// #41
  40cc80:	strb	w9, [x8, #12]
  40cc84:	mov	w9, #0xbb                  	// #187
  40cc88:	strb	w9, [x8, #13]
  40cc8c:	mov	w9, #0x8c                  	// #140
  40cc90:	strb	w9, [x8, #14]
  40cc94:	mov	w9, #0x4f                  	// #79
  40cc98:	strb	w9, [x8, #15]
  40cc9c:	ldur	x2, [x29, #-8]
  40cca0:	ldr	x0, [sp, #56]
  40cca4:	ldr	x1, [sp, #64]
  40cca8:	mov	x8, xzr
  40ccac:	mov	x3, x8
  40ccb0:	mov	x4, x8
  40ccb4:	bl	402ba8 <efi_set_variable@plt>
  40ccb8:	str	w0, [sp, #76]
  40ccbc:	ldr	w9, [sp, #76]
  40ccc0:	mov	w10, #0xfffffffe            	// #-2
  40ccc4:	cmp	w9, w10
  40ccc8:	b.ne	40ccd0 <__fxstat64@plt+0x9c58>  // b.any
  40cccc:	b	40cdf8 <__fxstat64@plt+0x9d80>
  40ccd0:	ldr	w8, [sp, #76]
  40ccd4:	cmp	w8, #0x0
  40ccd8:	cset	w8, ge  // ge = tcont
  40ccdc:	tbnz	w8, #0, 40cd7c <__fxstat64@plt+0x9d04>
  40cce0:	mov	w8, #0x4                   	// #4
  40cce4:	str	w8, [sp, #52]
  40cce8:	ldr	w8, [sp, #76]
  40ccec:	str	w8, [sp, #48]
  40ccf0:	str	wzr, [sp, #44]
  40ccf4:	ldr	w0, [sp, #44]
  40ccf8:	bl	4029d8 <log_get_max_level_realm@plt>
  40ccfc:	ldr	w8, [sp, #52]
  40cd00:	and	w8, w8, #0x7
  40cd04:	cmp	w0, w8
  40cd08:	b.lt	40cd44 <__fxstat64@plt+0x9ccc>  // b.tstop
  40cd0c:	ldr	w8, [sp, #44]
  40cd10:	ldr	w9, [sp, #52]
  40cd14:	orr	w0, w9, w8, lsl #10
  40cd18:	ldr	w1, [sp, #48]
  40cd1c:	ldur	x6, [x29, #-8]
  40cd20:	ldr	x2, [sp, #16]
  40cd24:	mov	w3, #0x3cb                 	// #971
  40cd28:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  40cd2c:	add	x4, x4, #0x4a
  40cd30:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  40cd34:	add	x5, x5, #0x62
  40cd38:	bl	4029e8 <log_internal_realm@plt>
  40cd3c:	str	w0, [sp, #12]
  40cd40:	b	40cd58 <__fxstat64@plt+0x9ce0>
  40cd44:	ldr	w0, [sp, #48]
  40cd48:	bl	4029f8 <abs@plt>
  40cd4c:	mov	w8, wzr
  40cd50:	subs	w8, w8, w0, uxtb
  40cd54:	str	w8, [sp, #12]
  40cd58:	ldr	w8, [sp, #12]
  40cd5c:	str	w8, [sp, #40]
  40cd60:	ldur	w8, [x29, #-12]
  40cd64:	cmp	w8, #0x0
  40cd68:	cset	w8, lt  // lt = tstop
  40cd6c:	tbnz	w8, #0, 40cd78 <__fxstat64@plt+0x9d00>
  40cd70:	ldr	w8, [sp, #76]
  40cd74:	stur	w8, [x29, #-12]
  40cd78:	b	40cdf8 <__fxstat64@plt+0x9d80>
  40cd7c:	mov	w8, #0x6                   	// #6
  40cd80:	str	w8, [sp, #36]
  40cd84:	str	wzr, [sp, #32]
  40cd88:	str	wzr, [sp, #28]
  40cd8c:	ldr	w0, [sp, #28]
  40cd90:	bl	4029d8 <log_get_max_level_realm@plt>
  40cd94:	ldr	w8, [sp, #36]
  40cd98:	and	w8, w8, #0x7
  40cd9c:	cmp	w0, w8
  40cda0:	b.lt	40cddc <__fxstat64@plt+0x9d64>  // b.tstop
  40cda4:	ldr	w8, [sp, #28]
  40cda8:	ldr	w9, [sp, #36]
  40cdac:	orr	w0, w9, w8, lsl #10
  40cdb0:	ldr	w1, [sp, #32]
  40cdb4:	ldur	x6, [x29, #-8]
  40cdb8:	ldr	x2, [sp, #16]
  40cdbc:	mov	w3, #0x3cf                 	// #975
  40cdc0:	adrp	x4, 410000 <__fxstat64@plt+0xcf88>
  40cdc4:	add	x4, x4, #0x4a
  40cdc8:	adrp	x5, 410000 <__fxstat64@plt+0xcf88>
  40cdcc:	add	x5, x5, #0x83
  40cdd0:	bl	4029e8 <log_internal_realm@plt>
  40cdd4:	str	w0, [sp, #8]
  40cdd8:	b	40cdf0 <__fxstat64@plt+0x9d78>
  40cddc:	ldr	w0, [sp, #32]
  40cde0:	bl	4029f8 <abs@plt>
  40cde4:	mov	w8, wzr
  40cde8:	subs	w8, w8, w0, uxtb
  40cdec:	str	w8, [sp, #8]
  40cdf0:	ldr	w8, [sp, #8]
  40cdf4:	str	w8, [sp, #24]
  40cdf8:	ldur	x8, [x29, #-24]
  40cdfc:	add	x9, x8, #0x8
  40ce00:	stur	x9, [x29, #-24]
  40ce04:	ldr	x8, [x8, #8]
  40ce08:	stur	x8, [x29, #-8]
  40ce0c:	b	40cc10 <__fxstat64@plt+0x9b98>
  40ce10:	ldur	w0, [x29, #-12]
  40ce14:	ldp	x29, x30, [sp, #160]
  40ce18:	add	sp, sp, #0xb0
  40ce1c:	ret
  40ce20:	stp	x29, x30, [sp, #-32]!
  40ce24:	str	x28, [sp, #16]
  40ce28:	mov	x29, sp
  40ce2c:	sub	sp, sp, #0x100
  40ce30:	mov	x8, xzr
  40ce34:	adrp	x9, 40f000 <__fxstat64@plt+0xbf88>
  40ce38:	add	x9, x9, #0xe5f
  40ce3c:	adrp	x10, 40d000 <__fxstat64@plt+0x9f88>
  40ce40:	add	x10, x10, #0xf88
  40ce44:	add	x10, x10, #0x3
  40ce48:	adrp	x11, 40f000 <__fxstat64@plt+0xbf88>
  40ce4c:	add	x11, x11, #0xe8b
  40ce50:	stur	x0, [x29, #-16]
  40ce54:	stur	x8, [x29, #-24]
  40ce58:	stur	wzr, [x29, #-48]
  40ce5c:	stur	x9, [x29, #-56]
  40ce60:	ldur	x8, [x29, #-16]
  40ce64:	stur	x8, [x29, #-64]
  40ce68:	stur	x10, [x29, #-208]
  40ce6c:	stur	x11, [x29, #-216]
  40ce70:	ldur	x8, [x29, #-56]
  40ce74:	ldrb	w9, [x8]
  40ce78:	mov	w10, #0x0                   	// #0
  40ce7c:	cmp	w9, #0x2f
  40ce80:	stur	w10, [x29, #-220]
  40ce84:	b.ne	40ce9c <__fxstat64@plt+0x9e24>  // b.any
  40ce88:	ldur	x8, [x29, #-56]
  40ce8c:	ldrb	w9, [x8, #1]
  40ce90:	cmp	w9, #0x2f
  40ce94:	cset	w9, eq  // eq = none
  40ce98:	stur	w9, [x29, #-220]
  40ce9c:	ldur	w8, [x29, #-220]
  40cea0:	tbnz	w8, #0, 40cea8 <__fxstat64@plt+0x9e30>
  40cea4:	b	40ceb8 <__fxstat64@plt+0x9e40>
  40cea8:	ldur	x8, [x29, #-56]
  40ceac:	add	x8, x8, #0x1
  40ceb0:	stur	x8, [x29, #-56]
  40ceb4:	b	40ce70 <__fxstat64@plt+0x9df8>
  40ceb8:	ldur	x0, [x29, #-64]
  40cebc:	bl	4074a8 <__fxstat64@plt+0x4430>
  40cec0:	tbnz	w0, #0, 40cec8 <__fxstat64@plt+0x9e50>
  40cec4:	b	40ced4 <__fxstat64@plt+0x9e5c>
  40cec8:	ldur	x8, [x29, #-56]
  40cecc:	stur	x8, [x29, #-72]
  40ced0:	b	40d074 <__fxstat64@plt+0x9ffc>
  40ced4:	ldur	x0, [x29, #-64]
  40ced8:	bl	402bb8 <strlen@plt>
  40cedc:	add	x8, x0, #0x1
  40cee0:	ldur	x0, [x29, #-56]
  40cee4:	stur	x8, [x29, #-232]
  40cee8:	bl	402bb8 <strlen@plt>
  40ceec:	ldur	x8, [x29, #-232]
  40cef0:	add	x9, x8, x0
  40cef4:	add	x9, x9, #0x1
  40cef8:	stur	x9, [x29, #-96]
  40cefc:	ldur	x9, [x29, #-96]
  40cf00:	stur	x9, [x29, #-104]
  40cf04:	ldur	x1, [x29, #-104]
  40cf08:	mov	x0, #0x1                   	// #1
  40cf0c:	bl	4074e8 <__fxstat64@plt+0x4470>
  40cf10:	mov	w8, #0x1                   	// #1
  40cf14:	eor	w9, w0, #0x1
  40cf18:	eor	w9, w9, w8
  40cf1c:	eor	w9, w9, w8
  40cf20:	eor	w8, w9, w8
  40cf24:	and	w8, w8, #0x1
  40cf28:	mov	w1, w8
  40cf2c:	sxtw	x10, w1
  40cf30:	cbz	x10, 40cf58 <__fxstat64@plt+0x9ee0>
  40cf34:	mov	w8, wzr
  40cf38:	mov	w0, w8
  40cf3c:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40cf40:	add	x1, x1, #0xd6d
  40cf44:	ldur	x2, [x29, #-208]
  40cf48:	mov	w3, #0x333                 	// #819
  40cf4c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40cf50:	add	x4, x4, #0xe69
  40cf54:	bl	402988 <log_assert_failed_realm@plt>
  40cf58:	ldur	x8, [x29, #-104]
  40cf5c:	mov	x9, #0x1                   	// #1
  40cf60:	mul	x8, x9, x8
  40cf64:	cmp	x8, #0x400, lsl #12
  40cf68:	cset	w10, ls  // ls = plast
  40cf6c:	mov	w11, #0x1                   	// #1
  40cf70:	eor	w10, w10, #0x1
  40cf74:	eor	w10, w10, w11
  40cf78:	eor	w10, w10, w11
  40cf7c:	and	w10, w10, #0x1
  40cf80:	mov	w0, w10
  40cf84:	sxtw	x8, w0
  40cf88:	cbz	x8, 40cfb0 <__fxstat64@plt+0x9f38>
  40cf8c:	mov	w8, wzr
  40cf90:	mov	w0, w8
  40cf94:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40cf98:	add	x1, x1, #0xd98
  40cf9c:	ldur	x2, [x29, #-208]
  40cfa0:	mov	w3, #0x333                 	// #819
  40cfa4:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40cfa8:	add	x4, x4, #0xe69
  40cfac:	bl	402988 <log_assert_failed_realm@plt>
  40cfb0:	ldur	x8, [x29, #-104]
  40cfb4:	mov	x9, #0x1                   	// #1
  40cfb8:	mul	x8, x9, x8
  40cfbc:	mul	x8, x8, x9
  40cfc0:	add	x8, x8, #0xf
  40cfc4:	and	x8, x8, #0xfffffffffffffff0
  40cfc8:	mov	x9, sp
  40cfcc:	subs	x8, x9, x8
  40cfd0:	mov	sp, x8
  40cfd4:	stur	x8, [x29, #-112]
  40cfd8:	ldur	x8, [x29, #-112]
  40cfdc:	stur	x8, [x29, #-88]
  40cfe0:	ldur	x0, [x29, #-88]
  40cfe4:	ldur	x1, [x29, #-64]
  40cfe8:	bl	402c58 <stpcpy@plt>
  40cfec:	stur	x0, [x29, #-80]
  40cff0:	ldur	x8, [x29, #-80]
  40cff4:	ldur	x9, [x29, #-88]
  40cff8:	mov	w10, #0x0                   	// #0
  40cffc:	cmp	x8, x9
  40d000:	stur	w10, [x29, #-236]
  40d004:	b.ls	40d01c <__fxstat64@plt+0x9fa4>  // b.plast
  40d008:	ldur	x8, [x29, #-80]
  40d00c:	ldurb	w9, [x8, #-1]
  40d010:	cmp	w9, #0x2f
  40d014:	cset	w9, eq  // eq = none
  40d018:	stur	w9, [x29, #-236]
  40d01c:	ldur	w8, [x29, #-236]
  40d020:	tbnz	w8, #0, 40d028 <__fxstat64@plt+0x9fb0>
  40d024:	b	40d03c <__fxstat64@plt+0x9fc4>
  40d028:	ldur	x8, [x29, #-80]
  40d02c:	mov	x9, #0xffffffffffffffff    	// #-1
  40d030:	add	x8, x8, x9
  40d034:	stur	x8, [x29, #-80]
  40d038:	b	40cff0 <__fxstat64@plt+0x9f78>
  40d03c:	ldur	x8, [x29, #-56]
  40d040:	ldrb	w9, [x8]
  40d044:	cmp	w9, #0x2f
  40d048:	b.eq	40d060 <__fxstat64@plt+0x9fe8>  // b.none
  40d04c:	ldur	x8, [x29, #-80]
  40d050:	add	x9, x8, #0x1
  40d054:	stur	x9, [x29, #-80]
  40d058:	mov	w10, #0x2f                  	// #47
  40d05c:	strb	w10, [x8]
  40d060:	ldur	x0, [x29, #-80]
  40d064:	ldur	x1, [x29, #-56]
  40d068:	bl	402c68 <strcpy@plt>
  40d06c:	ldur	x8, [x29, #-88]
  40d070:	stur	x8, [x29, #-72]
  40d074:	ldur	x8, [x29, #-72]
  40d078:	stur	x8, [x29, #-120]
  40d07c:	ldur	x8, [x29, #-120]
  40d080:	stur	x8, [x29, #-40]
  40d084:	ldur	x0, [x29, #-40]
  40d088:	bl	402c78 <opendir@plt>
  40d08c:	stur	x0, [x29, #-24]
  40d090:	ldur	x8, [x29, #-24]
  40d094:	cbnz	x8, 40d14c <__fxstat64@plt+0xa0d4>
  40d098:	bl	402b98 <__errno_location@plt>
  40d09c:	ldr	w8, [x0]
  40d0a0:	cmp	w8, #0x2
  40d0a4:	b.ne	40d0b8 <__fxstat64@plt+0xa040>  // b.any
  40d0a8:	stur	wzr, [x29, #-4]
  40d0ac:	mov	w8, #0x1                   	// #1
  40d0b0:	stur	w8, [x29, #-124]
  40d0b4:	b	40d4c8 <__fxstat64@plt+0xa450>
  40d0b8:	mov	w8, #0x3                   	// #3
  40d0bc:	stur	w8, [x29, #-128]
  40d0c0:	bl	402b98 <__errno_location@plt>
  40d0c4:	ldr	w8, [x0]
  40d0c8:	stur	w8, [x29, #-132]
  40d0cc:	stur	wzr, [x29, #-136]
  40d0d0:	ldur	w0, [x29, #-136]
  40d0d4:	bl	4029d8 <log_get_max_level_realm@plt>
  40d0d8:	ldur	w8, [x29, #-128]
  40d0dc:	and	w8, w8, #0x7
  40d0e0:	cmp	w0, w8
  40d0e4:	b.lt	40d11c <__fxstat64@plt+0xa0a4>  // b.tstop
  40d0e8:	ldur	w8, [x29, #-136]
  40d0ec:	ldur	w9, [x29, #-128]
  40d0f0:	orr	w0, w9, w8, lsl #10
  40d0f4:	ldur	w1, [x29, #-132]
  40d0f8:	ldur	x6, [x29, #-40]
  40d0fc:	ldur	x2, [x29, #-208]
  40d100:	mov	w3, #0x339                 	// #825
  40d104:	ldur	x4, [x29, #-216]
  40d108:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40d10c:	add	x5, x5, #0xe9b
  40d110:	bl	4029e8 <log_internal_realm@plt>
  40d114:	stur	w0, [x29, #-240]
  40d118:	b	40d130 <__fxstat64@plt+0xa0b8>
  40d11c:	ldur	w0, [x29, #-132]
  40d120:	bl	4029f8 <abs@plt>
  40d124:	mov	w8, wzr
  40d128:	subs	w8, w8, w0, uxtb
  40d12c:	stur	w8, [x29, #-240]
  40d130:	ldur	w8, [x29, #-240]
  40d134:	stur	w8, [x29, #-140]
  40d138:	ldur	w8, [x29, #-140]
  40d13c:	stur	w8, [x29, #-4]
  40d140:	mov	w8, #0x1                   	// #1
  40d144:	stur	w8, [x29, #-124]
  40d148:	b	40d4c8 <__fxstat64@plt+0xa450>
  40d14c:	bl	402b98 <__errno_location@plt>
  40d150:	str	wzr, [x0]
  40d154:	ldur	x0, [x29, #-24]
  40d158:	bl	402c88 <readdir64@plt>
  40d15c:	stur	x0, [x29, #-32]
  40d160:	ldur	x8, [x29, #-32]
  40d164:	cbnz	x8, 40d184 <__fxstat64@plt+0xa10c>
  40d168:	bl	402b98 <__errno_location@plt>
  40d16c:	ldr	w8, [x0]
  40d170:	cmp	w8, #0x0
  40d174:	cset	w8, le
  40d178:	tbnz	w8, #0, 40d180 <__fxstat64@plt+0xa108>
  40d17c:	b	40d4b8 <__fxstat64@plt+0xa440>
  40d180:	b	40d4b8 <__fxstat64@plt+0xa440>
  40d184:	ldur	x8, [x29, #-32]
  40d188:	add	x0, x8, #0x13
  40d18c:	bl	402c98 <hidden_or_backup_file@plt>
  40d190:	tbnz	w0, #0, 40d198 <__fxstat64@plt+0xa120>
  40d194:	b	40d19c <__fxstat64@plt+0xa124>
  40d198:	b	40d4a0 <__fxstat64@plt+0xa428>
  40d19c:	mov	w8, #0xffffffff            	// #-1
  40d1a0:	stur	w8, [x29, #-144]
  40d1a4:	mov	x9, xzr
  40d1a8:	stur	x9, [x29, #-152]
  40d1ac:	ldur	x9, [x29, #-32]
  40d1b0:	add	x0, x9, #0x13
  40d1b4:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40d1b8:	add	x1, x1, #0xde2
  40d1bc:	bl	402ca8 <endswith_no_case@plt>
  40d1c0:	cbnz	x0, 40d1d0 <__fxstat64@plt+0xa158>
  40d1c4:	mov	w8, #0xc                   	// #12
  40d1c8:	stur	w8, [x29, #-124]
  40d1cc:	b	40d470 <__fxstat64@plt+0xa3f8>
  40d1d0:	ldur	x8, [x29, #-32]
  40d1d4:	add	x0, x8, #0x13
  40d1d8:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40d1dc:	add	x1, x1, #0xcec
  40d1e0:	bl	407578 <__fxstat64@plt+0x4500>
  40d1e4:	cbnz	x0, 40d1f4 <__fxstat64@plt+0xa17c>
  40d1e8:	mov	w8, #0xc                   	// #12
  40d1ec:	stur	w8, [x29, #-124]
  40d1f0:	b	40d470 <__fxstat64@plt+0xa3f8>
  40d1f4:	ldur	x0, [x29, #-24]
  40d1f8:	bl	402cb8 <dirfd@plt>
  40d1fc:	ldur	x8, [x29, #-32]
  40d200:	add	x1, x8, #0x13
  40d204:	mov	w2, #0x80000               	// #524288
  40d208:	bl	402cc8 <openat64@plt>
  40d20c:	stur	w0, [x29, #-144]
  40d210:	ldur	w9, [x29, #-144]
  40d214:	cmp	w9, #0x0
  40d218:	cset	w9, ge  // ge = tcont
  40d21c:	tbnz	w9, #0, 40d2bc <__fxstat64@plt+0xa244>
  40d220:	mov	w8, #0x3                   	// #3
  40d224:	stur	w8, [x29, #-156]
  40d228:	bl	402b98 <__errno_location@plt>
  40d22c:	ldr	w8, [x0]
  40d230:	stur	w8, [x29, #-160]
  40d234:	stur	wzr, [x29, #-164]
  40d238:	ldur	w0, [x29, #-164]
  40d23c:	bl	4029d8 <log_get_max_level_realm@plt>
  40d240:	ldur	w8, [x29, #-156]
  40d244:	and	w8, w8, #0x7
  40d248:	cmp	w0, w8
  40d24c:	b.lt	40d28c <__fxstat64@plt+0xa214>  // b.tstop
  40d250:	ldur	w8, [x29, #-164]
  40d254:	ldur	w9, [x29, #-156]
  40d258:	orr	w0, w9, w8, lsl #10
  40d25c:	ldur	w1, [x29, #-160]
  40d260:	ldur	x6, [x29, #-40]
  40d264:	ldur	x10, [x29, #-32]
  40d268:	add	x7, x10, #0x13
  40d26c:	ldur	x2, [x29, #-208]
  40d270:	mov	w3, #0x348                 	// #840
  40d274:	ldur	x4, [x29, #-216]
  40d278:	adrp	x5, 40e000 <__fxstat64@plt+0xaf88>
  40d27c:	add	x5, x5, #0xde7
  40d280:	bl	4029e8 <log_internal_realm@plt>
  40d284:	stur	w0, [x29, #-244]
  40d288:	b	40d2a0 <__fxstat64@plt+0xa228>
  40d28c:	ldur	w0, [x29, #-160]
  40d290:	bl	4029f8 <abs@plt>
  40d294:	mov	w8, wzr
  40d298:	subs	w8, w8, w0, uxtb
  40d29c:	stur	w8, [x29, #-244]
  40d2a0:	ldur	w8, [x29, #-244]
  40d2a4:	stur	w8, [x29, #-168]
  40d2a8:	ldur	w8, [x29, #-168]
  40d2ac:	stur	w8, [x29, #-4]
  40d2b0:	mov	w8, #0x1                   	// #1
  40d2b4:	stur	w8, [x29, #-124]
  40d2b8:	b	40d470 <__fxstat64@plt+0xa3f8>
  40d2bc:	ldur	w0, [x29, #-144]
  40d2c0:	sub	x1, x29, #0x98
  40d2c4:	bl	4075d8 <__fxstat64@plt+0x4560>
  40d2c8:	stur	w0, [x29, #-44]
  40d2cc:	ldur	w8, [x29, #-44]
  40d2d0:	cmp	w8, #0x0
  40d2d4:	cset	w8, ge  // ge = tcont
  40d2d8:	tbnz	w8, #0, 40d2f0 <__fxstat64@plt+0xa278>
  40d2dc:	ldur	w8, [x29, #-44]
  40d2e0:	stur	w8, [x29, #-4]
  40d2e4:	mov	w8, #0x1                   	// #1
  40d2e8:	stur	w8, [x29, #-124]
  40d2ec:	b	40d470 <__fxstat64@plt+0xa3f8>
  40d2f0:	ldur	w8, [x29, #-44]
  40d2f4:	cmp	w8, #0x0
  40d2f8:	cset	w8, le
  40d2fc:	tbnz	w8, #0, 40d460 <__fxstat64@plt+0xa3e8>
  40d300:	ldur	x0, [x29, #-152]
  40d304:	adrp	x1, 40f000 <__fxstat64@plt+0xbf88>
  40d308:	add	x1, x1, #0xebd
  40d30c:	bl	40b5b0 <__fxstat64@plt+0x8538>
  40d310:	cbz	x0, 40d460 <__fxstat64@plt+0xa3e8>
  40d314:	ldur	x0, [x29, #-24]
  40d318:	bl	402cb8 <dirfd@plt>
  40d31c:	ldur	x8, [x29, #-32]
  40d320:	add	x1, x8, #0x13
  40d324:	mov	w9, wzr
  40d328:	mov	w2, w9
  40d32c:	bl	403048 <unlinkat@plt>
  40d330:	stur	w0, [x29, #-44]
  40d334:	ldur	w9, [x29, #-44]
  40d338:	cmp	w9, #0x0
  40d33c:	cset	w9, ge  // ge = tcont
  40d340:	tbnz	w9, #0, 40d3e0 <__fxstat64@plt+0xa368>
  40d344:	mov	w8, #0x3                   	// #3
  40d348:	stur	w8, [x29, #-172]
  40d34c:	bl	402b98 <__errno_location@plt>
  40d350:	ldr	w8, [x0]
  40d354:	stur	w8, [x29, #-176]
  40d358:	stur	wzr, [x29, #-180]
  40d35c:	ldur	w0, [x29, #-180]
  40d360:	bl	4029d8 <log_get_max_level_realm@plt>
  40d364:	ldur	w8, [x29, #-172]
  40d368:	and	w8, w8, #0x7
  40d36c:	cmp	w0, w8
  40d370:	b.lt	40d3b0 <__fxstat64@plt+0xa338>  // b.tstop
  40d374:	ldur	w8, [x29, #-180]
  40d378:	ldur	w9, [x29, #-172]
  40d37c:	orr	w0, w9, w8, lsl #10
  40d380:	ldur	w1, [x29, #-176]
  40d384:	ldur	x6, [x29, #-40]
  40d388:	ldur	x10, [x29, #-32]
  40d38c:	add	x7, x10, #0x13
  40d390:	ldur	x2, [x29, #-208]
  40d394:	mov	w3, #0x350                 	// #848
  40d398:	ldur	x4, [x29, #-216]
  40d39c:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40d3a0:	add	x5, x5, #0xecb
  40d3a4:	bl	4029e8 <log_internal_realm@plt>
  40d3a8:	stur	w0, [x29, #-248]
  40d3ac:	b	40d3c4 <__fxstat64@plt+0xa34c>
  40d3b0:	ldur	w0, [x29, #-176]
  40d3b4:	bl	4029f8 <abs@plt>
  40d3b8:	mov	w8, wzr
  40d3bc:	subs	w8, w8, w0, uxtb
  40d3c0:	stur	w8, [x29, #-248]
  40d3c4:	ldur	w8, [x29, #-248]
  40d3c8:	stur	w8, [x29, #-184]
  40d3cc:	ldur	w8, [x29, #-184]
  40d3d0:	stur	w8, [x29, #-4]
  40d3d4:	mov	w8, #0x1                   	// #1
  40d3d8:	stur	w8, [x29, #-124]
  40d3dc:	b	40d470 <__fxstat64@plt+0xa3f8>
  40d3e0:	mov	w8, #0x6                   	// #6
  40d3e4:	stur	w8, [x29, #-188]
  40d3e8:	stur	wzr, [x29, #-192]
  40d3ec:	stur	wzr, [x29, #-196]
  40d3f0:	ldur	w0, [x29, #-196]
  40d3f4:	bl	4029d8 <log_get_max_level_realm@plt>
  40d3f8:	ldur	w8, [x29, #-188]
  40d3fc:	and	w8, w8, #0x7
  40d400:	cmp	w0, w8
  40d404:	b.lt	40d444 <__fxstat64@plt+0xa3cc>  // b.tstop
  40d408:	ldur	w8, [x29, #-196]
  40d40c:	ldur	w9, [x29, #-188]
  40d410:	orr	w0, w9, w8, lsl #10
  40d414:	ldur	w1, [x29, #-192]
  40d418:	ldur	x6, [x29, #-40]
  40d41c:	ldur	x10, [x29, #-32]
  40d420:	add	x7, x10, #0x13
  40d424:	ldur	x2, [x29, #-208]
  40d428:	mov	w3, #0x352                 	// #850
  40d42c:	ldur	x4, [x29, #-216]
  40d430:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40d434:	add	x5, x5, #0xee8
  40d438:	bl	4029e8 <log_internal_realm@plt>
  40d43c:	stur	w0, [x29, #-252]
  40d440:	b	40d458 <__fxstat64@plt+0xa3e0>
  40d444:	ldur	w0, [x29, #-192]
  40d448:	bl	4029f8 <abs@plt>
  40d44c:	mov	w8, wzr
  40d450:	subs	w8, w8, w0, uxtb
  40d454:	stur	w8, [x29, #-252]
  40d458:	ldur	w8, [x29, #-252]
  40d45c:	stur	w8, [x29, #-200]
  40d460:	ldur	w8, [x29, #-48]
  40d464:	add	w8, w8, #0x1
  40d468:	stur	w8, [x29, #-48]
  40d46c:	stur	wzr, [x29, #-124]
  40d470:	sub	x0, x29, #0x98
  40d474:	bl	403464 <__fxstat64@plt+0x3ec>
  40d478:	sub	x0, x29, #0x90
  40d47c:	bl	407550 <__fxstat64@plt+0x44d8>
  40d480:	ldur	w8, [x29, #-124]
  40d484:	stur	w8, [x29, #-256]
  40d488:	cbz	w8, 40d4a0 <__fxstat64@plt+0xa428>
  40d48c:	b	40d490 <__fxstat64@plt+0xa418>
  40d490:	ldur	w8, [x29, #-256]
  40d494:	cmp	w8, #0xc
  40d498:	b.eq	40d4a0 <__fxstat64@plt+0xa428>  // b.none
  40d49c:	b	40d4c8 <__fxstat64@plt+0xa450>
  40d4a0:	bl	402b98 <__errno_location@plt>
  40d4a4:	str	wzr, [x0]
  40d4a8:	ldur	x0, [x29, #-24]
  40d4ac:	bl	402c88 <readdir64@plt>
  40d4b0:	stur	x0, [x29, #-32]
  40d4b4:	b	40d160 <__fxstat64@plt+0xa0e8>
  40d4b8:	ldur	w8, [x29, #-48]
  40d4bc:	stur	w8, [x29, #-4]
  40d4c0:	mov	w8, #0x1                   	// #1
  40d4c4:	stur	w8, [x29, #-124]
  40d4c8:	sub	x0, x29, #0x18
  40d4cc:	bl	407474 <__fxstat64@plt+0x43fc>
  40d4d0:	ldur	w0, [x29, #-4]
  40d4d4:	mov	sp, x29
  40d4d8:	ldr	x28, [sp, #16]
  40d4dc:	ldp	x29, x30, [sp], #32
  40d4e0:	ret
  40d4e4:	stp	x29, x30, [sp, #-16]!
  40d4e8:	mov	x29, sp
  40d4ec:	sub	sp, sp, #0xc0
  40d4f0:	adrp	x8, 40d000 <__fxstat64@plt+0x9f88>
  40d4f4:	add	x8, x8, #0xf88
  40d4f8:	add	x8, x8, #0x3
  40d4fc:	stur	x0, [x29, #-16]
  40d500:	stur	x1, [x29, #-24]
  40d504:	ldur	x9, [x29, #-24]
  40d508:	stur	x9, [x29, #-40]
  40d50c:	ldur	x9, [x29, #-16]
  40d510:	stur	x9, [x29, #-48]
  40d514:	stur	x8, [x29, #-152]
  40d518:	ldur	x8, [x29, #-40]
  40d51c:	ldrb	w9, [x8]
  40d520:	mov	w10, #0x0                   	// #0
  40d524:	cmp	w9, #0x2f
  40d528:	stur	w10, [x29, #-156]
  40d52c:	b.ne	40d544 <__fxstat64@plt+0xa4cc>  // b.any
  40d530:	ldur	x8, [x29, #-40]
  40d534:	ldrb	w9, [x8, #1]
  40d538:	cmp	w9, #0x2f
  40d53c:	cset	w9, eq  // eq = none
  40d540:	stur	w9, [x29, #-156]
  40d544:	ldur	w8, [x29, #-156]
  40d548:	tbnz	w8, #0, 40d550 <__fxstat64@plt+0xa4d8>
  40d54c:	b	40d560 <__fxstat64@plt+0xa4e8>
  40d550:	ldur	x8, [x29, #-40]
  40d554:	add	x8, x8, #0x1
  40d558:	stur	x8, [x29, #-40]
  40d55c:	b	40d518 <__fxstat64@plt+0xa4a0>
  40d560:	ldur	x0, [x29, #-48]
  40d564:	bl	4074a8 <__fxstat64@plt+0x4430>
  40d568:	tbnz	w0, #0, 40d570 <__fxstat64@plt+0xa4f8>
  40d56c:	b	40d57c <__fxstat64@plt+0xa504>
  40d570:	ldur	x8, [x29, #-40]
  40d574:	stur	x8, [x29, #-56]
  40d578:	b	40d71c <__fxstat64@plt+0xa6a4>
  40d57c:	ldur	x0, [x29, #-48]
  40d580:	bl	402bb8 <strlen@plt>
  40d584:	add	x8, x0, #0x1
  40d588:	ldur	x0, [x29, #-40]
  40d58c:	stur	x8, [x29, #-168]
  40d590:	bl	402bb8 <strlen@plt>
  40d594:	ldur	x8, [x29, #-168]
  40d598:	add	x9, x8, x0
  40d59c:	add	x9, x9, #0x1
  40d5a0:	stur	x9, [x29, #-80]
  40d5a4:	ldur	x9, [x29, #-80]
  40d5a8:	stur	x9, [x29, #-88]
  40d5ac:	ldur	x1, [x29, #-88]
  40d5b0:	mov	x0, #0x1                   	// #1
  40d5b4:	bl	4074e8 <__fxstat64@plt+0x4470>
  40d5b8:	mov	w8, #0x1                   	// #1
  40d5bc:	eor	w9, w0, #0x1
  40d5c0:	eor	w9, w9, w8
  40d5c4:	eor	w9, w9, w8
  40d5c8:	eor	w8, w9, w8
  40d5cc:	and	w8, w8, #0x1
  40d5d0:	mov	w1, w8
  40d5d4:	sxtw	x10, w1
  40d5d8:	cbz	x10, 40d600 <__fxstat64@plt+0xa588>
  40d5dc:	mov	w8, wzr
  40d5e0:	mov	w0, w8
  40d5e4:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40d5e8:	add	x1, x1, #0xd6d
  40d5ec:	ldur	x2, [x29, #-152]
  40d5f0:	mov	w3, #0x35e                 	// #862
  40d5f4:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40d5f8:	add	x4, x4, #0xf63
  40d5fc:	bl	402988 <log_assert_failed_realm@plt>
  40d600:	ldur	x8, [x29, #-88]
  40d604:	mov	x9, #0x1                   	// #1
  40d608:	mul	x8, x9, x8
  40d60c:	cmp	x8, #0x400, lsl #12
  40d610:	cset	w10, ls  // ls = plast
  40d614:	mov	w11, #0x1                   	// #1
  40d618:	eor	w10, w10, #0x1
  40d61c:	eor	w10, w10, w11
  40d620:	eor	w10, w10, w11
  40d624:	and	w10, w10, #0x1
  40d628:	mov	w0, w10
  40d62c:	sxtw	x8, w0
  40d630:	cbz	x8, 40d658 <__fxstat64@plt+0xa5e0>
  40d634:	mov	w8, wzr
  40d638:	mov	w0, w8
  40d63c:	adrp	x1, 40e000 <__fxstat64@plt+0xaf88>
  40d640:	add	x1, x1, #0xd98
  40d644:	ldur	x2, [x29, #-152]
  40d648:	mov	w3, #0x35e                 	// #862
  40d64c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40d650:	add	x4, x4, #0xf63
  40d654:	bl	402988 <log_assert_failed_realm@plt>
  40d658:	ldur	x8, [x29, #-88]
  40d65c:	mov	x9, #0x1                   	// #1
  40d660:	mul	x8, x9, x8
  40d664:	mul	x8, x8, x9
  40d668:	add	x8, x8, #0xf
  40d66c:	and	x8, x8, #0xfffffffffffffff0
  40d670:	mov	x9, sp
  40d674:	subs	x8, x9, x8
  40d678:	mov	sp, x8
  40d67c:	stur	x8, [x29, #-96]
  40d680:	ldur	x8, [x29, #-96]
  40d684:	stur	x8, [x29, #-72]
  40d688:	ldur	x0, [x29, #-72]
  40d68c:	ldur	x1, [x29, #-48]
  40d690:	bl	402c58 <stpcpy@plt>
  40d694:	stur	x0, [x29, #-64]
  40d698:	ldur	x8, [x29, #-64]
  40d69c:	ldur	x9, [x29, #-72]
  40d6a0:	mov	w10, #0x0                   	// #0
  40d6a4:	cmp	x8, x9
  40d6a8:	stur	w10, [x29, #-172]
  40d6ac:	b.ls	40d6c4 <__fxstat64@plt+0xa64c>  // b.plast
  40d6b0:	ldur	x8, [x29, #-64]
  40d6b4:	ldurb	w9, [x8, #-1]
  40d6b8:	cmp	w9, #0x2f
  40d6bc:	cset	w9, eq  // eq = none
  40d6c0:	stur	w9, [x29, #-172]
  40d6c4:	ldur	w8, [x29, #-172]
  40d6c8:	tbnz	w8, #0, 40d6d0 <__fxstat64@plt+0xa658>
  40d6cc:	b	40d6e4 <__fxstat64@plt+0xa66c>
  40d6d0:	ldur	x8, [x29, #-64]
  40d6d4:	mov	x9, #0xffffffffffffffff    	// #-1
  40d6d8:	add	x8, x8, x9
  40d6dc:	stur	x8, [x29, #-64]
  40d6e0:	b	40d698 <__fxstat64@plt+0xa620>
  40d6e4:	ldur	x8, [x29, #-40]
  40d6e8:	ldrb	w9, [x8]
  40d6ec:	cmp	w9, #0x2f
  40d6f0:	b.eq	40d708 <__fxstat64@plt+0xa690>  // b.none
  40d6f4:	ldur	x8, [x29, #-64]
  40d6f8:	add	x9, x8, #0x1
  40d6fc:	stur	x9, [x29, #-64]
  40d700:	mov	w10, #0x2f                  	// #47
  40d704:	strb	w10, [x8]
  40d708:	ldur	x0, [x29, #-64]
  40d70c:	ldur	x1, [x29, #-40]
  40d710:	bl	402c68 <strcpy@plt>
  40d714:	ldur	x8, [x29, #-72]
  40d718:	stur	x8, [x29, #-56]
  40d71c:	ldur	x8, [x29, #-56]
  40d720:	stur	x8, [x29, #-104]
  40d724:	ldur	x8, [x29, #-104]
  40d728:	stur	x8, [x29, #-32]
  40d72c:	ldur	x0, [x29, #-32]
  40d730:	bl	403058 <rmdir@plt>
  40d734:	cmp	w0, #0x0
  40d738:	cset	w9, ge  // ge = tcont
  40d73c:	tbnz	w9, #0, 40d858 <__fxstat64@plt+0xa7e0>
  40d740:	mov	w8, #0x0                   	// #0
  40d744:	sturb	w8, [x29, #-106]
  40d748:	bl	402b98 <__errno_location@plt>
  40d74c:	ldr	w8, [x0]
  40d750:	cmp	w8, #0x2
  40d754:	stur	w8, [x29, #-176]
  40d758:	b.eq	40d778 <__fxstat64@plt+0xa700>  // b.none
  40d75c:	b	40d760 <__fxstat64@plt+0xa6e8>
  40d760:	ldur	w8, [x29, #-176]
  40d764:	cmp	w8, #0x27
  40d768:	cset	w9, eq  // eq = none
  40d76c:	eor	w9, w9, #0x1
  40d770:	tbnz	w9, #0, 40d784 <__fxstat64@plt+0xa70c>
  40d774:	b	40d778 <__fxstat64@plt+0xa700>
  40d778:	mov	w8, #0x1                   	// #1
  40d77c:	sturb	w8, [x29, #-106]
  40d780:	b	40d784 <__fxstat64@plt+0xa70c>
  40d784:	ldurb	w8, [x29, #-106]
  40d788:	mov	w9, #0x1                   	// #1
  40d78c:	and	w8, w8, w9
  40d790:	sturb	w8, [x29, #-107]
  40d794:	ldurb	w8, [x29, #-107]
  40d798:	and	w8, w8, #0x1
  40d79c:	sturb	w8, [x29, #-105]
  40d7a0:	ldurb	w8, [x29, #-105]
  40d7a4:	mov	w9, #0x3                   	// #3
  40d7a8:	mov	w10, #0x7                   	// #7
  40d7ac:	tst	w8, #0x1
  40d7b0:	csel	w8, w10, w9, ne  // ne = any
  40d7b4:	stur	w8, [x29, #-112]
  40d7b8:	bl	402b98 <__errno_location@plt>
  40d7bc:	ldr	w8, [x0]
  40d7c0:	stur	w8, [x29, #-116]
  40d7c4:	stur	wzr, [x29, #-120]
  40d7c8:	ldur	w0, [x29, #-120]
  40d7cc:	bl	4029d8 <log_get_max_level_realm@plt>
  40d7d0:	ldur	w8, [x29, #-112]
  40d7d4:	and	w8, w8, #0x7
  40d7d8:	cmp	w0, w8
  40d7dc:	b.lt	40d818 <__fxstat64@plt+0xa7a0>  // b.tstop
  40d7e0:	ldur	w8, [x29, #-120]
  40d7e4:	ldur	w9, [x29, #-112]
  40d7e8:	orr	w0, w9, w8, lsl #10
  40d7ec:	ldur	w1, [x29, #-116]
  40d7f0:	ldur	x6, [x29, #-32]
  40d7f4:	ldur	x2, [x29, #-152]
  40d7f8:	mov	w3, #0x363                 	// #867
  40d7fc:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40d800:	add	x4, x4, #0xf8d
  40d804:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40d808:	add	x5, x5, #0xf97
  40d80c:	bl	4029e8 <log_internal_realm@plt>
  40d810:	stur	w0, [x29, #-180]
  40d814:	b	40d82c <__fxstat64@plt+0xa7b4>
  40d818:	ldur	w0, [x29, #-116]
  40d81c:	bl	4029f8 <abs@plt>
  40d820:	mov	w8, wzr
  40d824:	subs	w8, w8, w0, uxtb
  40d828:	stur	w8, [x29, #-180]
  40d82c:	ldur	w8, [x29, #-180]
  40d830:	stur	w8, [x29, #-124]
  40d834:	ldurb	w8, [x29, #-105]
  40d838:	tbnz	w8, #0, 40d854 <__fxstat64@plt+0xa7dc>
  40d83c:	bl	402b98 <__errno_location@plt>
  40d840:	ldr	w8, [x0]
  40d844:	mov	w9, wzr
  40d848:	subs	w8, w9, w8
  40d84c:	stur	w8, [x29, #-4]
  40d850:	b	40d8d8 <__fxstat64@plt+0xa860>
  40d854:	b	40d8d4 <__fxstat64@plt+0xa85c>
  40d858:	mov	w8, #0x6                   	// #6
  40d85c:	stur	w8, [x29, #-128]
  40d860:	stur	wzr, [x29, #-132]
  40d864:	stur	wzr, [x29, #-136]
  40d868:	ldur	w0, [x29, #-136]
  40d86c:	bl	4029d8 <log_get_max_level_realm@plt>
  40d870:	ldur	w8, [x29, #-128]
  40d874:	and	w8, w8, #0x7
  40d878:	cmp	w0, w8
  40d87c:	b.lt	40d8b8 <__fxstat64@plt+0xa840>  // b.tstop
  40d880:	ldur	w8, [x29, #-136]
  40d884:	ldur	w9, [x29, #-128]
  40d888:	orr	w0, w9, w8, lsl #10
  40d88c:	ldur	w1, [x29, #-132]
  40d890:	ldur	x6, [x29, #-32]
  40d894:	ldur	x2, [x29, #-152]
  40d898:	mov	w3, #0x367                 	// #871
  40d89c:	adrp	x4, 40f000 <__fxstat64@plt+0xbf88>
  40d8a0:	add	x4, x4, #0xf8d
  40d8a4:	adrp	x5, 40f000 <__fxstat64@plt+0xbf88>
  40d8a8:	add	x5, x5, #0xf55
  40d8ac:	bl	4029e8 <log_internal_realm@plt>
  40d8b0:	stur	w0, [x29, #-184]
  40d8b4:	b	40d8cc <__fxstat64@plt+0xa854>
  40d8b8:	ldur	w0, [x29, #-132]
  40d8bc:	bl	4029f8 <abs@plt>
  40d8c0:	mov	w8, wzr
  40d8c4:	subs	w8, w8, w0, uxtb
  40d8c8:	stur	w8, [x29, #-184]
  40d8cc:	ldur	w8, [x29, #-184]
  40d8d0:	stur	w8, [x29, #-140]
  40d8d4:	stur	wzr, [x29, #-4]
  40d8d8:	ldur	w0, [x29, #-4]
  40d8dc:	mov	sp, x29
  40d8e0:	ldp	x29, x30, [sp], #16
  40d8e4:	ret
  40d8e8:	sub	sp, sp, #0x30
  40d8ec:	stp	x29, x30, [sp, #32]
  40d8f0:	add	x29, sp, #0x20
  40d8f4:	mov	x8, xzr
  40d8f8:	add	x9, sp, #0x10
  40d8fc:	sturh	w0, [x29, #-6]
  40d900:	str	x8, [sp, #16]
  40d904:	mov	x0, x9
  40d908:	bl	402c48 <efi_get_boot_order@plt>
  40d90c:	str	w0, [sp, #12]
  40d910:	ldr	w10, [sp, #12]
  40d914:	cmp	w10, #0x0
  40d918:	cset	w10, gt
  40d91c:	tbnz	w10, #0, 40d934 <__fxstat64@plt+0xa8bc>
  40d920:	ldr	w8, [sp, #12]
  40d924:	stur	w8, [x29, #-4]
  40d928:	mov	w8, #0x1                   	// #1
  40d92c:	str	w8, [sp, #4]
  40d930:	b	40da04 <__fxstat64@plt+0xa98c>
  40d934:	str	wzr, [sp, #8]
  40d938:	ldr	w8, [sp, #8]
  40d93c:	ldr	w9, [sp, #12]
  40d940:	cmp	w8, w9
  40d944:	b.ge	40d9f8 <__fxstat64@plt+0xa980>  // b.tcont
  40d948:	ldr	x8, [sp, #16]
  40d94c:	ldrsw	x9, [sp, #8]
  40d950:	ldrh	w10, [x8, x9, lsl #1]
  40d954:	ldurh	w11, [x29, #-6]
  40d958:	cmp	w10, w11
  40d95c:	b.eq	40d964 <__fxstat64@plt+0xa8ec>  // b.none
  40d960:	b	40d9e8 <__fxstat64@plt+0xa970>
  40d964:	ldr	w8, [sp, #8]
  40d968:	add	w8, w8, #0x1
  40d96c:	ldr	w9, [sp, #12]
  40d970:	cmp	w8, w9
  40d974:	b.ge	40d9b8 <__fxstat64@plt+0xa940>  // b.tcont
  40d978:	ldr	x8, [sp, #16]
  40d97c:	ldrsw	x9, [sp, #8]
  40d980:	mov	x10, #0x2                   	// #2
  40d984:	mul	x9, x10, x9
  40d988:	add	x0, x8, x9
  40d98c:	ldr	x8, [sp, #16]
  40d990:	ldrsw	x9, [sp, #8]
  40d994:	mul	x9, x10, x9
  40d998:	add	x8, x8, x9
  40d99c:	add	x1, x8, #0x2
  40d9a0:	ldr	w11, [sp, #12]
  40d9a4:	ldr	w12, [sp, #8]
  40d9a8:	subs	w11, w11, w12
  40d9ac:	mov	w12, #0x2                   	// #2
  40d9b0:	smull	x2, w11, w12
  40d9b4:	bl	402fe8 <memmove@plt>
  40d9b8:	ldr	x0, [sp, #16]
  40d9bc:	ldr	w8, [sp, #12]
  40d9c0:	mov	w9, #0x1                   	// #1
  40d9c4:	subs	w8, w8, #0x1
  40d9c8:	mov	w1, w8
  40d9cc:	sxtw	x1, w1
  40d9d0:	str	w9, [sp]
  40d9d4:	bl	402fd8 <efi_set_boot_order@plt>
  40d9d8:	stur	w0, [x29, #-4]
  40d9dc:	ldr	w8, [sp]
  40d9e0:	str	w8, [sp, #4]
  40d9e4:	b	40da04 <__fxstat64@plt+0xa98c>
  40d9e8:	ldr	w8, [sp, #8]
  40d9ec:	add	w8, w8, #0x1
  40d9f0:	str	w8, [sp, #8]
  40d9f4:	b	40d938 <__fxstat64@plt+0xa8c0>
  40d9f8:	stur	wzr, [x29, #-4]
  40d9fc:	mov	w8, #0x1                   	// #1
  40da00:	str	w8, [sp, #4]
  40da04:	add	x0, sp, #0x10
  40da08:	bl	403464 <__fxstat64@plt+0x3ec>
  40da0c:	ldur	w0, [x29, #-4]
  40da10:	ldp	x29, x30, [sp, #32]
  40da14:	add	sp, sp, #0x30
  40da18:	ret
  40da1c:	sub	sp, sp, #0x20
  40da20:	stp	x29, x30, [sp, #16]
  40da24:	add	x29, sp, #0x10
  40da28:	mov	w8, #0xffffff9c            	// #-100
  40da2c:	str	x0, [sp, #8]
  40da30:	ldr	x1, [sp, #8]
  40da34:	mov	w0, w8
  40da38:	bl	403068 <dir_is_empty_at@plt>
  40da3c:	ldp	x29, x30, [sp, #16]
  40da40:	add	sp, sp, #0x20
  40da44:	ret
  40da48:	sub	sp, sp, #0x10
  40da4c:	str	x0, [sp, #8]
  40da50:	str	x1, [sp]
  40da54:	ldr	x8, [sp, #8]
  40da58:	ldr	x9, [sp]
  40da5c:	add	x8, x8, x9
  40da60:	subs	x8, x8, #0x1
  40da64:	ldr	x9, [sp]
  40da68:	subs	x9, x9, #0x1
  40da6c:	bic	x0, x8, x9
  40da70:	add	sp, sp, #0x10
  40da74:	ret
  40da78:	stp	x29, x30, [sp, #-64]!
  40da7c:	mov	x29, sp
  40da80:	stp	x19, x20, [sp, #16]
  40da84:	adrp	x20, 42f000 <__fxstat64@plt+0x2bf88>
  40da88:	add	x20, x20, #0x9d0
  40da8c:	stp	x21, x22, [sp, #32]
  40da90:	adrp	x21, 42f000 <__fxstat64@plt+0x2bf88>
  40da94:	add	x21, x21, #0x9c8
  40da98:	sub	x20, x20, x21
  40da9c:	mov	w22, w0
  40daa0:	stp	x23, x24, [sp, #48]
  40daa4:	mov	x23, x1
  40daa8:	mov	x24, x2
  40daac:	bl	4028a0 <__libc_start_main@plt-0x38>
  40dab0:	cmp	xzr, x20, asr #3
  40dab4:	b.eq	40dae0 <__fxstat64@plt+0xaa68>  // b.none
  40dab8:	asr	x20, x20, #3
  40dabc:	mov	x19, #0x0                   	// #0
  40dac0:	ldr	x3, [x21, x19, lsl #3]
  40dac4:	mov	x2, x24
  40dac8:	add	x19, x19, #0x1
  40dacc:	mov	x1, x23
  40dad0:	mov	w0, w22
  40dad4:	blr	x3
  40dad8:	cmp	x20, x19
  40dadc:	b.ne	40dac0 <__fxstat64@plt+0xaa48>  // b.any
  40dae0:	ldp	x19, x20, [sp, #16]
  40dae4:	ldp	x21, x22, [sp, #32]
  40dae8:	ldp	x23, x24, [sp, #48]
  40daec:	ldp	x29, x30, [sp], #64
  40daf0:	ret
  40daf4:	nop
  40daf8:	ret
  40dafc:	udf	#0
  40db00:	mov	x2, x1
  40db04:	mov	w1, w0
  40db08:	mov	w0, #0x0                   	// #0
  40db0c:	b	403078 <__fxstat64@plt>

Disassembly of section .fini:

000000000040db10 <.fini>:
  40db10:	stp	x29, x30, [sp, #-16]!
  40db14:	mov	x29, sp
  40db18:	ldp	x29, x30, [sp], #16
  40db1c:	ret
