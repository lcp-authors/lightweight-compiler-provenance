
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-dissect_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401068 <_init>:
  401068:	stp	x29, x30, [sp, #-16]!
  40106c:	mov	x29, sp
  401070:	bl	401320 <call_weak_fn>
  401074:	ldp	x29, x30, [sp], #16
  401078:	ret

Disassembly of section .plt:

0000000000401080 <__libc_start_main@plt-0x20>:
  401080:	stp	x16, x30, [sp, #-16]!
  401084:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401088:	ldr	x17, [x16, #3808]
  40108c:	add	x16, x16, #0xee0
  401090:	br	x17
  401094:	nop
  401098:	nop
  40109c:	nop

00000000004010a0 <__libc_start_main@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010a4:	ldr	x17, [x16, #3816]
  4010a8:	add	x16, x16, #0xee8
  4010ac:	br	x17

00000000004010b0 <abort@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010b4:	ldr	x17, [x16, #3824]
  4010b8:	add	x16, x16, #0xef0
  4010bc:	br	x17

00000000004010c0 <__gmon_start__@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010c4:	ldr	x17, [x16, #3832]
  4010c8:	add	x16, x16, #0xef8
  4010cc:	br	x17

00000000004010d0 <ask_password_agent_close@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010d4:	ldr	x17, [x16, #3840]
  4010d8:	add	x16, x16, #0xf00
  4010dc:	br	x17

00000000004010e0 <polkit_agent_close@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010e4:	ldr	x17, [x16, #3848]
  4010e8:	add	x16, x16, #0xf08
  4010ec:	br	x17

00000000004010f0 <pager_close@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4010f4:	ldr	x17, [x16, #3856]
  4010f8:	add	x16, x16, #0xf10
  4010fc:	br	x17

0000000000401100 <mac_selinux_finish@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401104:	ldr	x17, [x16, #3864]
  401108:	add	x16, x16, #0xf18
  40110c:	br	x17

0000000000401110 <log_parse_environment_realm@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401114:	ldr	x17, [x16, #3872]
  401118:	add	x16, x16, #0xf20
  40111c:	br	x17

0000000000401120 <log_open@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401124:	ldr	x17, [x16, #3880]
  401128:	add	x16, x16, #0xf28
  40112c:	br	x17

0000000000401130 <loop_device_make_by_path@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401134:	ldr	x17, [x16, #3888]
  401138:	add	x16, x16, #0xf30
  40113c:	br	x17

0000000000401140 <log_get_max_level_realm@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401144:	ldr	x17, [x16, #3896]
  401148:	add	x16, x16, #0xf38
  40114c:	br	x17

0000000000401150 <log_internal_realm@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401154:	ldr	x17, [x16, #3904]
  401158:	add	x16, x16, #0xf40
  40115c:	br	x17

0000000000401160 <abs@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401164:	ldr	x17, [x16, #3912]
  401168:	add	x16, x16, #0xf48
  40116c:	br	x17

0000000000401170 <root_hash_load@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401174:	ldr	x17, [x16, #3920]
  401178:	add	x16, x16, #0xf50
  40117c:	br	x17

0000000000401180 <dissect_image_and_warn@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401184:	ldr	x17, [x16, #3928]
  401188:	add	x16, x16, #0xf58
  40118c:	br	x17

0000000000401190 <partition_designator_to_string@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401194:	ldr	x17, [x16, #3936]
  401198:	add	x16, x16, #0xf60
  40119c:	br	x17

00000000004011a0 <printf@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011a4:	ldr	x17, [x16, #3944]
  4011a8:	add	x16, x16, #0xf68
  4011ac:	br	x17

00000000004011b0 <architecture_to_string@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011b4:	ldr	x17, [x16, #3952]
  4011b8:	add	x16, x16, #0xf70
  4011bc:	br	x17

00000000004011c0 <putchar@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011c4:	ldr	x17, [x16, #3960]
  4011c8:	add	x16, x16, #0xf78
  4011cc:	br	x17

00000000004011d0 <dissected_image_acquire_metadata@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011d4:	ldr	x17, [x16, #3968]
  4011d8:	add	x16, x16, #0xf80
  4011dc:	br	x17

00000000004011e0 <dissected_image_decrypt_interactively@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011e4:	ldr	x17, [x16, #3976]
  4011e8:	add	x16, x16, #0xf88
  4011ec:	br	x17

00000000004011f0 <dissected_image_mount@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4011f4:	ldr	x17, [x16, #3984]
  4011f8:	add	x16, x16, #0xf90
  4011fc:	br	x17

0000000000401200 <decrypted_image_relinquish@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401204:	ldr	x17, [x16, #3992]
  401208:	add	x16, x16, #0xf98
  40120c:	br	x17

0000000000401210 <loop_device_relinquish@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401214:	ldr	x17, [x16, #4000]
  401218:	add	x16, x16, #0xfa0
  40121c:	br	x17

0000000000401220 <log_assert_failed_unreachable_realm@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401224:	ldr	x17, [x16, #4008]
  401228:	add	x16, x16, #0xfa8
  40122c:	br	x17

0000000000401230 <free@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401234:	ldr	x17, [x16, #4016]
  401238:	add	x16, x16, #0xfb0
  40123c:	br	x17

0000000000401240 <loop_device_unref@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401244:	ldr	x17, [x16, #4024]
  401248:	add	x16, x16, #0xfb8
  40124c:	br	x17

0000000000401250 <decrypted_image_unref@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401254:	ldr	x17, [x16, #4032]
  401258:	add	x16, x16, #0xfc0
  40125c:	br	x17

0000000000401260 <dissected_image_unref@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401264:	ldr	x17, [x16, #4040]
  401268:	add	x16, x16, #0xfc8
  40126c:	br	x17

0000000000401270 <log_assert_failed_realm@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401274:	ldr	x17, [x16, #4048]
  401278:	add	x16, x16, #0xfd0
  40127c:	br	x17

0000000000401280 <getopt_long@plt>:
  401280:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401284:	ldr	x17, [x16, #4056]
  401288:	add	x16, x16, #0xfd8
  40128c:	br	x17

0000000000401290 <version@plt>:
  401290:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  401294:	ldr	x17, [x16, #4064]
  401298:	add	x16, x16, #0xfe0
  40129c:	br	x17

00000000004012a0 <strcmp@plt>:
  4012a0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4012a4:	ldr	x17, [x16, #4072]
  4012a8:	add	x16, x16, #0xfe8
  4012ac:	br	x17

00000000004012b0 <strlen@plt>:
  4012b0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4012b4:	ldr	x17, [x16, #4080]
  4012b8:	add	x16, x16, #0xff0
  4012bc:	br	x17

00000000004012c0 <unhexmem_full@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1be38>
  4012c4:	ldr	x17, [x16, #4088]
  4012c8:	add	x16, x16, #0xff8
  4012cc:	br	x17

Disassembly of section .text:

00000000004012d0 <_start>:
  4012d0:	mov	x29, #0x0                   	// #0
  4012d4:	mov	x30, #0x0                   	// #0
  4012d8:	mov	x5, x0
  4012dc:	ldr	x1, [sp]
  4012e0:	add	x2, sp, #0x8
  4012e4:	mov	x6, sp
  4012e8:	movz	x0, #0x0, lsl #48
  4012ec:	movk	x0, #0x0, lsl #32
  4012f0:	movk	x0, #0x40, lsl #16
  4012f4:	movk	x0, #0x14c4
  4012f8:	movz	x3, #0x0, lsl #48
  4012fc:	movk	x3, #0x0, lsl #32
  401300:	movk	x3, #0x40, lsl #16
  401304:	movk	x3, #0x2a10
  401308:	movz	x4, #0x0, lsl #48
  40130c:	movk	x4, #0x0, lsl #32
  401310:	movk	x4, #0x40, lsl #16
  401314:	movk	x4, #0x2a90
  401318:	bl	4010a0 <__libc_start_main@plt>
  40131c:	bl	4010b0 <abort@plt>

0000000000401320 <call_weak_fn>:
  401320:	adrp	x0, 41f000 <__FRAME_END__+0x1be38>
  401324:	ldr	x0, [x0, #3768]
  401328:	cbz	x0, 401330 <call_weak_fn+0x10>
  40132c:	b	4010c0 <__gmon_start__@plt>
  401330:	ret

0000000000401334 <deregister_tm_clones>:
  401334:	stp	x29, x30, [sp, #-32]!
  401338:	mov	x29, sp
  40133c:	adrp	x0, 420000 <arg_flags>
  401340:	add	x0, x0, #0x0
  401344:	str	x0, [sp, #24]
  401348:	ldr	x0, [sp, #24]
  40134c:	str	x0, [sp, #24]
  401350:	ldr	x1, [sp, #24]
  401354:	adrp	x0, 420000 <arg_flags>
  401358:	add	x0, x0, #0x0
  40135c:	cmp	x1, x0
  401360:	b.eq	40139c <deregister_tm_clones+0x68>  // b.none
  401364:	adrp	x0, 402000 <run+0xa90>
  401368:	add	x0, x0, #0xaa8
  40136c:	ldr	x0, [x0]
  401370:	str	x0, [sp, #16]
  401374:	ldr	x0, [sp, #16]
  401378:	str	x0, [sp, #16]
  40137c:	ldr	x0, [sp, #16]
  401380:	cmp	x0, #0x0
  401384:	b.eq	4013a0 <deregister_tm_clones+0x6c>  // b.none
  401388:	ldr	x1, [sp, #16]
  40138c:	adrp	x0, 420000 <arg_flags>
  401390:	add	x0, x0, #0x0
  401394:	blr	x1
  401398:	b	4013a0 <deregister_tm_clones+0x6c>
  40139c:	nop
  4013a0:	ldp	x29, x30, [sp], #32
  4013a4:	ret

00000000004013a8 <register_tm_clones>:
  4013a8:	stp	x29, x30, [sp, #-48]!
  4013ac:	mov	x29, sp
  4013b0:	adrp	x0, 420000 <arg_flags>
  4013b4:	add	x0, x0, #0x0
  4013b8:	str	x0, [sp, #40]
  4013bc:	ldr	x0, [sp, #40]
  4013c0:	str	x0, [sp, #40]
  4013c4:	ldr	x1, [sp, #40]
  4013c8:	adrp	x0, 420000 <arg_flags>
  4013cc:	add	x0, x0, #0x0
  4013d0:	sub	x0, x1, x0
  4013d4:	asr	x0, x0, #3
  4013d8:	lsr	x1, x0, #63
  4013dc:	add	x0, x1, x0
  4013e0:	asr	x0, x0, #1
  4013e4:	str	x0, [sp, #32]
  4013e8:	ldr	x0, [sp, #32]
  4013ec:	cmp	x0, #0x0
  4013f0:	b.eq	401430 <register_tm_clones+0x88>  // b.none
  4013f4:	adrp	x0, 402000 <run+0xa90>
  4013f8:	add	x0, x0, #0xab0
  4013fc:	ldr	x0, [x0]
  401400:	str	x0, [sp, #24]
  401404:	ldr	x0, [sp, #24]
  401408:	str	x0, [sp, #24]
  40140c:	ldr	x0, [sp, #24]
  401410:	cmp	x0, #0x0
  401414:	b.eq	401434 <register_tm_clones+0x8c>  // b.none
  401418:	ldr	x2, [sp, #24]
  40141c:	ldr	x1, [sp, #32]
  401420:	adrp	x0, 420000 <arg_flags>
  401424:	add	x0, x0, #0x0
  401428:	blr	x2
  40142c:	b	401434 <register_tm_clones+0x8c>
  401430:	nop
  401434:	ldp	x29, x30, [sp], #48
  401438:	ret

000000000040143c <__do_global_dtors_aux>:
  40143c:	stp	x29, x30, [sp, #-16]!
  401440:	mov	x29, sp
  401444:	adrp	x0, 420000 <arg_flags>
  401448:	add	x0, x0, #0x8
  40144c:	ldrb	w0, [x0]
  401450:	and	x0, x0, #0xff
  401454:	cmp	x0, #0x0
  401458:	b.ne	401474 <__do_global_dtors_aux+0x38>  // b.any
  40145c:	bl	401334 <deregister_tm_clones>
  401460:	adrp	x0, 420000 <arg_flags>
  401464:	add	x0, x0, #0x8
  401468:	mov	w1, #0x1                   	// #1
  40146c:	strb	w1, [x0]
  401470:	b	401478 <__do_global_dtors_aux+0x3c>
  401474:	nop
  401478:	ldp	x29, x30, [sp], #16
  40147c:	ret

0000000000401480 <frame_dummy>:
  401480:	stp	x29, x30, [sp, #-16]!
  401484:	mov	x29, sp
  401488:	bl	4013a8 <register_tm_clones>
  40148c:	nop
  401490:	ldp	x29, x30, [sp], #16
  401494:	ret

0000000000401498 <__unique_prefix_static_destructor_wrapper0>:
  401498:	sub	sp, sp, #0x20
  40149c:	stp	x29, x30, [sp, #16]
  4014a0:	add	x29, sp, #0x10
  4014a4:	str	x0, [sp, #8]
  4014a8:	ldr	x8, [sp, #8]
  4014ac:	str	x8, [sp]
  4014b0:	ldr	x0, [sp]
  4014b4:	bl	4020c8 <freep>
  4014b8:	ldp	x29, x30, [sp, #16]
  4014bc:	add	sp, sp, #0x20
  4014c0:	ret

00000000004014c4 <main>:
  4014c4:	sub	sp, sp, #0x30
  4014c8:	stp	x29, x30, [sp, #32]
  4014cc:	add	x29, sp, #0x20
  4014d0:	mov	w8, wzr
  4014d4:	mov	w9, #0x1                   	// #1
  4014d8:	stur	wzr, [x29, #-4]
  4014dc:	stur	w0, [x29, #-8]
  4014e0:	str	x1, [sp, #16]
  4014e4:	ldur	w0, [x29, #-8]
  4014e8:	ldr	x1, [sp, #16]
  4014ec:	str	w8, [sp, #8]
  4014f0:	str	w9, [sp, #4]
  4014f4:	bl	40153c <save_argc_argv>
  4014f8:	ldur	w0, [x29, #-8]
  4014fc:	ldr	x1, [sp, #16]
  401500:	bl	401570 <run>
  401504:	str	w0, [sp, #12]
  401508:	bl	4010d0 <ask_password_agent_close@plt>
  40150c:	bl	4010e0 <polkit_agent_close@plt>
  401510:	bl	4010f0 <pager_close@plt>
  401514:	bl	401100 <mac_selinux_finish@plt>
  401518:	bl	402048 <static_destruct>
  40151c:	ldr	w8, [sp, #12]
  401520:	cmp	w8, #0x0
  401524:	ldr	w8, [sp, #4]
  401528:	ldr	w9, [sp, #8]
  40152c:	csel	w0, w8, w9, lt  // lt = tstop
  401530:	ldp	x29, x30, [sp, #32]
  401534:	add	sp, sp, #0x30
  401538:	ret

000000000040153c <save_argc_argv>:
  40153c:	sub	sp, sp, #0x10
  401540:	adrp	x8, 420000 <arg_flags>
  401544:	add	x8, x8, #0x38
  401548:	adrp	x9, 420000 <arg_flags>
  40154c:	add	x9, x9, #0x40
  401550:	str	w0, [sp, #12]
  401554:	str	x1, [sp]
  401558:	ldr	w10, [sp, #12]
  40155c:	str	w10, [x8]
  401560:	ldr	x8, [sp]
  401564:	str	x8, [x9]
  401568:	add	sp, sp, #0x10
  40156c:	ret

0000000000401570 <run>:
  401570:	sub	sp, sp, #0x190
  401574:	stp	x29, x30, [sp, #368]
  401578:	str	x28, [sp, #384]
  40157c:	add	x29, sp, #0x170
  401580:	mov	x8, xzr
  401584:	mov	w9, wzr
  401588:	adrp	x10, 420000 <arg_flags>
  40158c:	add	x10, x10, #0x18
  401590:	adrp	x11, 420000 <arg_flags>
  401594:	add	x11, x11, #0x0
  401598:	adrp	x12, 420000 <arg_flags>
  40159c:	add	x12, x12, #0x10
  4015a0:	adrp	x13, 420000 <arg_flags>
  4015a4:	add	x13, x13, #0x20
  4015a8:	adrp	x14, 402000 <run+0xa90>
  4015ac:	add	x14, x14, #0xab8
  4015b0:	add	x14, x14, #0x3
  4015b4:	adrp	x15, 402000 <run+0xa90>
  4015b8:	add	x15, x15, #0xad1
  4015bc:	stur	w0, [x29, #-8]
  4015c0:	stur	x1, [x29, #-16]
  4015c4:	stur	x8, [x29, #-24]
  4015c8:	stur	x8, [x29, #-32]
  4015cc:	stur	x8, [x29, #-40]
  4015d0:	mov	w0, w9
  4015d4:	str	x10, [sp, #176]
  4015d8:	str	x11, [sp, #168]
  4015dc:	str	x12, [sp, #160]
  4015e0:	str	x13, [sp, #152]
  4015e4:	str	x14, [sp, #144]
  4015e8:	str	x15, [sp, #136]
  4015ec:	bl	401110 <log_parse_environment_realm@plt>
  4015f0:	bl	401120 <log_open@plt>
  4015f4:	ldur	w9, [x29, #-8]
  4015f8:	ldur	x1, [x29, #-16]
  4015fc:	mov	w0, w9
  401600:	bl	40218c <parse_argv>
  401604:	stur	w0, [x29, #-44]
  401608:	ldur	w9, [x29, #-44]
  40160c:	cmp	w9, #0x0
  401610:	cset	w9, gt
  401614:	tbnz	w9, #0, 40162c <run+0xbc>
  401618:	ldur	w8, [x29, #-44]
  40161c:	stur	w8, [x29, #-4]
  401620:	mov	w8, #0x1                   	// #1
  401624:	stur	w8, [x29, #-48]
  401628:	b	40201c <run+0xaac>
  40162c:	ldr	x8, [sp, #176]
  401630:	ldr	x0, [x8]
  401634:	ldr	x9, [sp, #168]
  401638:	ldr	w10, [x9]
  40163c:	mov	w11, wzr
  401640:	mov	w12, #0x2                   	// #2
  401644:	tst	w10, #0x1
  401648:	csel	w1, w11, w12, ne  // ne = any
  40164c:	sub	x2, x29, #0x18
  401650:	bl	401130 <loop_device_make_by_path@plt>
  401654:	stur	w0, [x29, #-44]
  401658:	ldur	w10, [x29, #-44]
  40165c:	cmp	w10, #0x0
  401660:	cset	w10, ge  // ge = tcont
  401664:	tbnz	w10, #0, 4016f4 <run+0x184>
  401668:	mov	w8, #0x3                   	// #3
  40166c:	stur	w8, [x29, #-52]
  401670:	ldur	w8, [x29, #-44]
  401674:	stur	w8, [x29, #-56]
  401678:	stur	wzr, [x29, #-60]
  40167c:	ldur	w0, [x29, #-60]
  401680:	bl	401140 <log_get_max_level_realm@plt>
  401684:	ldur	w8, [x29, #-52]
  401688:	and	w8, w8, #0x7
  40168c:	cmp	w0, w8
  401690:	b.lt	4016c4 <run+0x154>  // b.tstop
  401694:	ldur	w8, [x29, #-60]
  401698:	ldur	w9, [x29, #-52]
  40169c:	orr	w0, w9, w8, lsl #10
  4016a0:	ldur	w1, [x29, #-56]
  4016a4:	ldr	x2, [sp, #144]
  4016a8:	mov	w3, #0xb0                  	// #176
  4016ac:	ldr	x4, [sp, #136]
  4016b0:	adrp	x5, 402000 <run+0xa90>
  4016b4:	add	x5, x5, #0xad5
  4016b8:	bl	401150 <log_internal_realm@plt>
  4016bc:	str	w0, [sp, #132]
  4016c0:	b	4016d8 <run+0x168>
  4016c4:	ldur	w0, [x29, #-56]
  4016c8:	bl	401160 <abs@plt>
  4016cc:	mov	w8, wzr
  4016d0:	subs	w8, w8, w0, uxtb
  4016d4:	str	w8, [sp, #132]
  4016d8:	ldr	w8, [sp, #132]
  4016dc:	stur	w8, [x29, #-64]
  4016e0:	ldur	w8, [x29, #-64]
  4016e4:	stur	w8, [x29, #-4]
  4016e8:	mov	w8, #0x1                   	// #1
  4016ec:	stur	w8, [x29, #-48]
  4016f0:	b	40201c <run+0xaac>
  4016f4:	ldr	x8, [sp, #160]
  4016f8:	ldr	x9, [x8]
  4016fc:	cbnz	x9, 4017bc <run+0x24c>
  401700:	ldr	x8, [sp, #176]
  401704:	ldr	x0, [x8]
  401708:	ldr	x1, [sp, #160]
  40170c:	ldr	x2, [sp, #152]
  401710:	bl	401170 <root_hash_load@plt>
  401714:	stur	w0, [x29, #-44]
  401718:	ldur	w9, [x29, #-44]
  40171c:	cmp	w9, #0x0
  401720:	cset	w9, ge  // ge = tcont
  401724:	tbnz	w9, #0, 4017bc <run+0x24c>
  401728:	mov	w8, #0x3                   	// #3
  40172c:	stur	w8, [x29, #-68]
  401730:	ldur	w8, [x29, #-44]
  401734:	stur	w8, [x29, #-72]
  401738:	stur	wzr, [x29, #-76]
  40173c:	ldur	w0, [x29, #-76]
  401740:	bl	401140 <log_get_max_level_realm@plt>
  401744:	ldur	w8, [x29, #-68]
  401748:	and	w8, w8, #0x7
  40174c:	cmp	w0, w8
  401750:	b.lt	40178c <run+0x21c>  // b.tstop
  401754:	ldur	w8, [x29, #-76]
  401758:	ldur	w9, [x29, #-68]
  40175c:	orr	w0, w9, w8, lsl #10
  401760:	ldur	w1, [x29, #-72]
  401764:	ldr	x10, [sp, #176]
  401768:	ldr	x6, [x10]
  40176c:	ldr	x2, [sp, #144]
  401770:	mov	w3, #0xb5                  	// #181
  401774:	ldr	x4, [sp, #136]
  401778:	adrp	x5, 402000 <run+0xa90>
  40177c:	add	x5, x5, #0xafa
  401780:	bl	401150 <log_internal_realm@plt>
  401784:	str	w0, [sp, #128]
  401788:	b	4017a0 <run+0x230>
  40178c:	ldur	w0, [x29, #-72]
  401790:	bl	401160 <abs@plt>
  401794:	mov	w8, wzr
  401798:	subs	w8, w8, w0, uxtb
  40179c:	str	w8, [sp, #128]
  4017a0:	ldr	w8, [sp, #128]
  4017a4:	stur	w8, [x29, #-80]
  4017a8:	ldur	w8, [x29, #-80]
  4017ac:	stur	w8, [x29, #-4]
  4017b0:	mov	w8, #0x1                   	// #1
  4017b4:	stur	w8, [x29, #-48]
  4017b8:	b	40201c <run+0xaac>
  4017bc:	ldur	x8, [x29, #-24]
  4017c0:	ldr	w0, [x8]
  4017c4:	ldr	x8, [sp, #176]
  4017c8:	ldr	x1, [x8]
  4017cc:	ldr	x9, [sp, #160]
  4017d0:	ldr	x2, [x9]
  4017d4:	ldr	x10, [sp, #152]
  4017d8:	ldr	x3, [x10]
  4017dc:	ldr	x11, [sp, #168]
  4017e0:	ldr	w4, [x11]
  4017e4:	sub	x5, x29, #0x28
  4017e8:	bl	401180 <dissect_image_and_warn@plt>
  4017ec:	stur	w0, [x29, #-44]
  4017f0:	ldur	w12, [x29, #-44]
  4017f4:	cmp	w12, #0x0
  4017f8:	cset	w12, ge  // ge = tcont
  4017fc:	tbnz	w12, #0, 401814 <run+0x2a4>
  401800:	ldur	w8, [x29, #-44]
  401804:	stur	w8, [x29, #-4]
  401808:	mov	w8, #0x1                   	// #1
  40180c:	stur	w8, [x29, #-48]
  401810:	b	40201c <run+0xaac>
  401814:	adrp	x8, 420000 <arg_flags>
  401818:	add	x8, x8, #0x28
  40181c:	ldr	w9, [x8]
  401820:	str	w9, [sp, #124]
  401824:	cbz	w9, 40183c <run+0x2cc>
  401828:	b	40182c <run+0x2bc>
  40182c:	ldr	w8, [sp, #124]
  401830:	cmp	w8, #0x1
  401834:	b.eq	401e1c <run+0x8ac>  // b.none
  401838:	b	401fec <run+0xa7c>
  40183c:	stur	wzr, [x29, #-84]
  401840:	ldur	w8, [x29, #-84]
  401844:	cmp	w8, #0x9
  401848:	b.cs	401ad8 <run+0x568>  // b.hs, b.nlast
  40184c:	ldur	x8, [x29, #-40]
  401850:	add	x8, x8, #0x8
  401854:	ldur	w9, [x29, #-84]
  401858:	mov	w10, w9
  40185c:	mov	x11, #0x40                  	// #64
  401860:	mul	x10, x11, x10
  401864:	add	x8, x8, x10
  401868:	stur	x8, [x29, #-96]
  40186c:	ldur	x8, [x29, #-96]
  401870:	ldrb	w9, [x8]
  401874:	and	w9, w9, #0x1
  401878:	tbnz	w9, #0, 401880 <run+0x310>
  40187c:	b	401ac8 <run+0x558>
  401880:	ldur	x8, [x29, #-96]
  401884:	ldrb	w9, [x8]
  401888:	mov	w10, #0x1                   	// #1
  40188c:	lsr	w9, w9, w10
  401890:	and	w9, w9, w10
  401894:	adrp	x8, 402000 <run+0xa90>
  401898:	add	x8, x8, #0xb44
  40189c:	adrp	x11, 402000 <run+0xa90>
  4018a0:	add	x11, x11, #0xb3b
  4018a4:	tst	w9, #0x1
  4018a8:	csel	x1, x11, x8, ne  // ne = any
  4018ac:	ldur	w0, [x29, #-84]
  4018b0:	str	x1, [sp, #112]
  4018b4:	bl	401190 <partition_designator_to_string@plt>
  4018b8:	adrp	x8, 402000 <run+0xa90>
  4018bc:	add	x8, x8, #0xb23
  4018c0:	str	x0, [sp, #104]
  4018c4:	mov	x0, x8
  4018c8:	ldr	x1, [sp, #112]
  4018cc:	ldr	x2, [sp, #104]
  4018d0:	bl	4011a0 <printf@plt>
  4018d4:	ldur	x8, [x29, #-96]
  4018d8:	ldr	x11, [x8, #16]
  4018dc:	ldr	x1, [x8, #24]
  4018e0:	mov	x0, x11
  4018e4:	bl	4028ac <sd_id128_is_null>
  4018e8:	cbnz	w0, 4019c0 <run+0x450>
  4018ec:	ldur	x8, [x29, #-96]
  4018f0:	ldrb	w1, [x8, #16]
  4018f4:	ldur	x8, [x29, #-96]
  4018f8:	ldrb	w2, [x8, #17]
  4018fc:	ldur	x8, [x29, #-96]
  401900:	ldrb	w3, [x8, #18]
  401904:	ldur	x8, [x29, #-96]
  401908:	ldrb	w4, [x8, #19]
  40190c:	ldur	x8, [x29, #-96]
  401910:	ldrb	w5, [x8, #20]
  401914:	ldur	x8, [x29, #-96]
  401918:	ldrb	w6, [x8, #21]
  40191c:	ldur	x8, [x29, #-96]
  401920:	ldrb	w7, [x8, #22]
  401924:	ldur	x8, [x29, #-96]
  401928:	ldrb	w9, [x8, #23]
  40192c:	ldur	x8, [x29, #-96]
  401930:	ldrb	w10, [x8, #24]
  401934:	ldur	x8, [x29, #-96]
  401938:	ldrb	w11, [x8, #25]
  40193c:	ldur	x8, [x29, #-96]
  401940:	ldrb	w12, [x8, #26]
  401944:	ldur	x8, [x29, #-96]
  401948:	ldrb	w13, [x8, #27]
  40194c:	ldur	x8, [x29, #-96]
  401950:	ldrb	w14, [x8, #28]
  401954:	ldur	x8, [x29, #-96]
  401958:	ldrb	w15, [x8, #29]
  40195c:	ldur	x8, [x29, #-96]
  401960:	ldrb	w16, [x8, #30]
  401964:	ldur	x8, [x29, #-96]
  401968:	ldrb	w17, [x8, #31]
  40196c:	adrp	x0, 402000 <run+0xa90>
  401970:	add	x0, x0, #0xb4e
  401974:	mov	x8, sp
  401978:	str	w9, [x8]
  40197c:	mov	x8, sp
  401980:	str	w10, [x8, #8]
  401984:	mov	x8, sp
  401988:	str	w11, [x8, #16]
  40198c:	mov	x8, sp
  401990:	str	w12, [x8, #24]
  401994:	mov	x8, sp
  401998:	str	w13, [x8, #32]
  40199c:	mov	x8, sp
  4019a0:	str	w14, [x8, #40]
  4019a4:	mov	x8, sp
  4019a8:	str	w15, [x8, #48]
  4019ac:	mov	x8, sp
  4019b0:	str	w16, [x8, #56]
  4019b4:	mov	x8, sp
  4019b8:	str	w17, [x8, #64]
  4019bc:	bl	4011a0 <printf@plt>
  4019c0:	ldur	x8, [x29, #-96]
  4019c4:	ldr	x8, [x8, #32]
  4019c8:	cbz	x8, 4019e0 <run+0x470>
  4019cc:	ldur	x8, [x29, #-96]
  4019d0:	ldr	x1, [x8, #32]
  4019d4:	adrp	x0, 402000 <run+0xa90>
  4019d8:	add	x0, x0, #0xb97
  4019dc:	bl	4011a0 <printf@plt>
  4019e0:	ldur	x8, [x29, #-96]
  4019e4:	ldr	w9, [x8, #8]
  4019e8:	mov	w10, #0xffffffff            	// #-1
  4019ec:	cmp	w9, w10
  4019f0:	b.eq	401a18 <run+0x4a8>  // b.none
  4019f4:	ldur	x8, [x29, #-96]
  4019f8:	ldr	w0, [x8, #8]
  4019fc:	bl	4011b0 <architecture_to_string@plt>
  401a00:	adrp	x8, 402000 <run+0xa90>
  401a04:	add	x8, x8, #0xba3
  401a08:	str	x0, [sp, #96]
  401a0c:	mov	x0, x8
  401a10:	ldr	x1, [sp, #96]
  401a14:	bl	4011a0 <printf@plt>
  401a18:	ldur	w0, [x29, #-84]
  401a1c:	bl	4028e8 <PARTITION_VERITY_OF>
  401a20:	stur	w0, [x29, #-100]
  401a24:	ldur	w8, [x29, #-100]
  401a28:	cmp	w8, #0x0
  401a2c:	cset	w8, lt  // lt = tstop
  401a30:	tbnz	w8, #0, 401a78 <run+0x508>
  401a34:	ldur	x8, [x29, #-40]
  401a38:	add	x8, x8, #0x8
  401a3c:	ldursw	x9, [x29, #-100]
  401a40:	mov	x10, #0x40                  	// #64
  401a44:	mul	x9, x10, x9
  401a48:	add	x8, x8, x9
  401a4c:	ldrb	w11, [x8]
  401a50:	and	w11, w11, #0x1
  401a54:	adrp	x8, 402000 <run+0xa90>
  401a58:	add	x8, x8, #0xbbb
  401a5c:	adrp	x9, 402000 <run+0xa90>
  401a60:	add	x9, x9, #0xbb6
  401a64:	tst	w11, #0x1
  401a68:	csel	x1, x9, x8, ne  // ne = any
  401a6c:	adrp	x0, 402000 <run+0xa90>
  401a70:	add	x0, x0, #0xbab
  401a74:	bl	4011a0 <printf@plt>
  401a78:	ldur	x8, [x29, #-96]
  401a7c:	ldr	w9, [x8, #4]
  401a80:	cmp	w9, #0x0
  401a84:	cset	w9, lt  // lt = tstop
  401a88:	tbnz	w9, #0, 401aa0 <run+0x530>
  401a8c:	ldur	x8, [x29, #-96]
  401a90:	ldr	w1, [x8, #4]
  401a94:	adrp	x0, 402000 <run+0xa90>
  401a98:	add	x0, x0, #0xbc3
  401a9c:	bl	4011a0 <printf@plt>
  401aa0:	ldur	x8, [x29, #-96]
  401aa4:	ldr	x8, [x8, #40]
  401aa8:	cbz	x8, 401ac0 <run+0x550>
  401aac:	ldur	x8, [x29, #-96]
  401ab0:	ldr	x1, [x8, #40]
  401ab4:	adrp	x0, 402000 <run+0xa90>
  401ab8:	add	x0, x0, #0xbd5
  401abc:	bl	4011a0 <printf@plt>
  401ac0:	mov	w0, #0xa                   	// #10
  401ac4:	bl	4011c0 <putchar@plt>
  401ac8:	ldur	w8, [x29, #-84]
  401acc:	add	w8, w8, #0x1
  401ad0:	stur	w8, [x29, #-84]
  401ad4:	b	401840 <run+0x2d0>
  401ad8:	ldur	x0, [x29, #-40]
  401adc:	bl	4011d0 <dissected_image_acquire_metadata@plt>
  401ae0:	stur	w0, [x29, #-44]
  401ae4:	ldur	w8, [x29, #-44]
  401ae8:	cmp	w8, #0x0
  401aec:	cset	w8, ge  // ge = tcont
  401af0:	tbnz	w8, #0, 401b80 <run+0x610>
  401af4:	mov	w8, #0x3                   	// #3
  401af8:	stur	w8, [x29, #-104]
  401afc:	ldur	w8, [x29, #-44]
  401b00:	stur	w8, [x29, #-108]
  401b04:	stur	wzr, [x29, #-112]
  401b08:	ldur	w0, [x29, #-112]
  401b0c:	bl	401140 <log_get_max_level_realm@plt>
  401b10:	ldur	w8, [x29, #-104]
  401b14:	and	w8, w8, #0x7
  401b18:	cmp	w0, w8
  401b1c:	b.lt	401b50 <run+0x5e0>  // b.tstop
  401b20:	ldur	w8, [x29, #-112]
  401b24:	ldur	w9, [x29, #-104]
  401b28:	orr	w0, w9, w8, lsl #10
  401b2c:	ldur	w1, [x29, #-108]
  401b30:	ldr	x2, [sp, #144]
  401b34:	mov	w3, #0xe4                  	// #228
  401b38:	ldr	x4, [sp, #136]
  401b3c:	adrp	x5, 402000 <run+0xa90>
  401b40:	add	x5, x5, #0xbdb
  401b44:	bl	401150 <log_internal_realm@plt>
  401b48:	str	w0, [sp, #92]
  401b4c:	b	401b64 <run+0x5f4>
  401b50:	ldur	w0, [x29, #-108]
  401b54:	bl	401160 <abs@plt>
  401b58:	mov	w8, wzr
  401b5c:	subs	w8, w8, w0, uxtb
  401b60:	str	w8, [sp, #92]
  401b64:	ldr	w8, [sp, #92]
  401b68:	stur	w8, [x29, #-116]
  401b6c:	ldur	w8, [x29, #-116]
  401b70:	stur	w8, [x29, #-4]
  401b74:	mov	w8, #0x1                   	// #1
  401b78:	stur	w8, [x29, #-48]
  401b7c:	b	40201c <run+0xaac>
  401b80:	ldur	x8, [x29, #-40]
  401b84:	ldr	x8, [x8, #584]
  401b88:	cbz	x8, 401ba0 <run+0x630>
  401b8c:	ldur	x8, [x29, #-40]
  401b90:	ldr	x1, [x8, #584]
  401b94:	adrp	x0, 402000 <run+0xa90>
  401b98:	add	x0, x0, #0xc00
  401b9c:	bl	4011a0 <printf@plt>
  401ba0:	ldur	x8, [x29, #-40]
  401ba4:	ldr	x0, [x8, #592]
  401ba8:	ldr	x1, [x8, #600]
  401bac:	bl	4028ac <sd_id128_is_null>
  401bb0:	cbnz	w0, 401c88 <run+0x718>
  401bb4:	ldur	x8, [x29, #-40]
  401bb8:	ldrb	w1, [x8, #592]
  401bbc:	ldur	x8, [x29, #-40]
  401bc0:	ldrb	w2, [x8, #593]
  401bc4:	ldur	x8, [x29, #-40]
  401bc8:	ldrb	w3, [x8, #594]
  401bcc:	ldur	x8, [x29, #-40]
  401bd0:	ldrb	w4, [x8, #595]
  401bd4:	ldur	x8, [x29, #-40]
  401bd8:	ldrb	w5, [x8, #596]
  401bdc:	ldur	x8, [x29, #-40]
  401be0:	ldrb	w6, [x8, #597]
  401be4:	ldur	x8, [x29, #-40]
  401be8:	ldrb	w7, [x8, #598]
  401bec:	ldur	x8, [x29, #-40]
  401bf0:	ldrb	w9, [x8, #599]
  401bf4:	ldur	x8, [x29, #-40]
  401bf8:	ldrb	w10, [x8, #600]
  401bfc:	ldur	x8, [x29, #-40]
  401c00:	ldrb	w11, [x8, #601]
  401c04:	ldur	x8, [x29, #-40]
  401c08:	ldrb	w12, [x8, #602]
  401c0c:	ldur	x8, [x29, #-40]
  401c10:	ldrb	w13, [x8, #603]
  401c14:	ldur	x8, [x29, #-40]
  401c18:	ldrb	w14, [x8, #604]
  401c1c:	ldur	x8, [x29, #-40]
  401c20:	ldrb	w15, [x8, #605]
  401c24:	ldur	x8, [x29, #-40]
  401c28:	ldrb	w16, [x8, #606]
  401c2c:	ldur	x8, [x29, #-40]
  401c30:	ldrb	w17, [x8, #607]
  401c34:	adrp	x0, 402000 <run+0xa90>
  401c38:	add	x0, x0, #0xc10
  401c3c:	mov	x8, sp
  401c40:	str	w9, [x8]
  401c44:	mov	x8, sp
  401c48:	str	w10, [x8, #8]
  401c4c:	mov	x8, sp
  401c50:	str	w11, [x8, #16]
  401c54:	mov	x8, sp
  401c58:	str	w12, [x8, #24]
  401c5c:	mov	x8, sp
  401c60:	str	w13, [x8, #32]
  401c64:	mov	x8, sp
  401c68:	str	w14, [x8, #40]
  401c6c:	mov	x8, sp
  401c70:	str	w15, [x8, #48]
  401c74:	mov	x8, sp
  401c78:	str	w16, [x8, #56]
  401c7c:	mov	x8, sp
  401c80:	str	w17, [x8, #64]
  401c84:	bl	4011a0 <printf@plt>
  401c88:	ldur	x8, [x29, #-40]
  401c8c:	ldr	x0, [x8, #608]
  401c90:	bl	402930 <strv_isempty>
  401c94:	tbnz	w0, #0, 401d50 <run+0x7e0>
  401c98:	ldur	x8, [x29, #-40]
  401c9c:	ldr	x8, [x8, #608]
  401ca0:	stur	x8, [x29, #-128]
  401ca4:	ldur	x8, [x29, #-128]
  401ca8:	add	x8, x8, #0x8
  401cac:	stur	x8, [x29, #-136]
  401cb0:	ldur	x8, [x29, #-128]
  401cb4:	mov	w9, #0x0                   	// #0
  401cb8:	str	w9, [sp, #88]
  401cbc:	cbz	x8, 401ce8 <run+0x778>
  401cc0:	ldur	x8, [x29, #-128]
  401cc4:	ldr	x8, [x8]
  401cc8:	mov	w9, #0x0                   	// #0
  401ccc:	str	w9, [sp, #88]
  401cd0:	cbz	x8, 401ce8 <run+0x778>
  401cd4:	ldur	x8, [x29, #-136]
  401cd8:	ldr	x8, [x8]
  401cdc:	cmp	x8, #0x0
  401ce0:	cset	w9, ne  // ne = any
  401ce4:	str	w9, [sp, #88]
  401ce8:	ldr	w8, [sp, #88]
  401cec:	tbnz	w8, #0, 401cf4 <run+0x784>
  401cf0:	b	401d50 <run+0x7e0>
  401cf4:	ldur	x8, [x29, #-128]
  401cf8:	ldur	x9, [x29, #-40]
  401cfc:	ldr	x9, [x9, #608]
  401d00:	adrp	x10, 402000 <run+0xa90>
  401d04:	add	x10, x10, #0xc74
  401d08:	adrp	x11, 402000 <run+0xa90>
  401d0c:	add	x11, x11, #0xc68
  401d10:	cmp	x8, x9
  401d14:	csel	x1, x11, x10, eq  // eq = none
  401d18:	ldur	x8, [x29, #-128]
  401d1c:	ldr	x2, [x8]
  401d20:	ldur	x8, [x29, #-136]
  401d24:	ldr	x3, [x8]
  401d28:	adrp	x0, 402000 <run+0xa90>
  401d2c:	add	x0, x0, #0xc5e
  401d30:	bl	4011a0 <printf@plt>
  401d34:	ldur	x8, [x29, #-128]
  401d38:	add	x8, x8, #0x10
  401d3c:	stur	x8, [x29, #-128]
  401d40:	ldur	x8, [x29, #-128]
  401d44:	add	x8, x8, #0x8
  401d48:	stur	x8, [x29, #-136]
  401d4c:	b	401cb0 <run+0x740>
  401d50:	ldur	x8, [x29, #-40]
  401d54:	ldr	x0, [x8, #616]
  401d58:	bl	402930 <strv_isempty>
  401d5c:	tbnz	w0, #0, 401e18 <run+0x8a8>
  401d60:	ldur	x8, [x29, #-40]
  401d64:	ldr	x8, [x8, #616]
  401d68:	stur	x8, [x29, #-144]
  401d6c:	ldur	x8, [x29, #-144]
  401d70:	add	x8, x8, #0x8
  401d74:	stur	x8, [x29, #-152]
  401d78:	ldur	x8, [x29, #-144]
  401d7c:	mov	w9, #0x0                   	// #0
  401d80:	str	w9, [sp, #84]
  401d84:	cbz	x8, 401db0 <run+0x840>
  401d88:	ldur	x8, [x29, #-144]
  401d8c:	ldr	x8, [x8]
  401d90:	mov	w9, #0x0                   	// #0
  401d94:	str	w9, [sp, #84]
  401d98:	cbz	x8, 401db0 <run+0x840>
  401d9c:	ldur	x8, [x29, #-152]
  401da0:	ldr	x8, [x8]
  401da4:	cmp	x8, #0x0
  401da8:	cset	w9, ne  // ne = any
  401dac:	str	w9, [sp, #84]
  401db0:	ldr	w8, [sp, #84]
  401db4:	tbnz	w8, #0, 401dbc <run+0x84c>
  401db8:	b	401e18 <run+0x8a8>
  401dbc:	ldur	x8, [x29, #-144]
  401dc0:	ldur	x9, [x29, #-40]
  401dc4:	ldr	x9, [x9, #616]
  401dc8:	adrp	x10, 402000 <run+0xa90>
  401dcc:	add	x10, x10, #0xc80
  401dd0:	adrp	x11, 402000 <run+0xa90>
  401dd4:	add	x11, x11, #0xc74
  401dd8:	cmp	x8, x9
  401ddc:	csel	x1, x10, x11, eq  // eq = none
  401de0:	ldur	x8, [x29, #-144]
  401de4:	ldr	x2, [x8]
  401de8:	ldur	x8, [x29, #-152]
  401dec:	ldr	x3, [x8]
  401df0:	adrp	x0, 402000 <run+0xa90>
  401df4:	add	x0, x0, #0xc5e
  401df8:	bl	4011a0 <printf@plt>
  401dfc:	ldur	x8, [x29, #-144]
  401e00:	add	x8, x8, #0x10
  401e04:	stur	x8, [x29, #-144]
  401e08:	ldur	x8, [x29, #-144]
  401e0c:	add	x8, x8, #0x8
  401e10:	stur	x8, [x29, #-152]
  401e14:	b	401d78 <run+0x808>
  401e18:	b	402010 <run+0xaa0>
  401e1c:	ldur	x0, [x29, #-40]
  401e20:	ldr	x8, [sp, #160]
  401e24:	ldr	x2, [x8]
  401e28:	ldr	x9, [sp, #152]
  401e2c:	ldr	x3, [x9]
  401e30:	ldr	x10, [sp, #168]
  401e34:	ldr	w4, [x10]
  401e38:	mov	x11, xzr
  401e3c:	mov	x1, x11
  401e40:	sub	x5, x29, #0x20
  401e44:	bl	4011e0 <dissected_image_decrypt_interactively@plt>
  401e48:	stur	w0, [x29, #-44]
  401e4c:	ldur	w12, [x29, #-44]
  401e50:	cmp	w12, #0x0
  401e54:	cset	w12, ge  // ge = tcont
  401e58:	tbnz	w12, #0, 401e70 <run+0x900>
  401e5c:	ldur	w8, [x29, #-44]
  401e60:	stur	w8, [x29, #-4]
  401e64:	mov	w8, #0x1                   	// #1
  401e68:	stur	w8, [x29, #-48]
  401e6c:	b	40201c <run+0xaac>
  401e70:	ldur	x0, [x29, #-40]
  401e74:	adrp	x8, 420000 <arg_flags>
  401e78:	add	x8, x8, #0x30
  401e7c:	ldr	x1, [x8]
  401e80:	ldr	x8, [sp, #168]
  401e84:	ldr	w3, [x8]
  401e88:	mov	w2, #0xffffffff            	// #-1
  401e8c:	bl	4011f0 <dissected_image_mount@plt>
  401e90:	stur	w0, [x29, #-44]
  401e94:	ldur	w9, [x29, #-44]
  401e98:	cmp	w9, #0x0
  401e9c:	cset	w9, ge  // ge = tcont
  401ea0:	tbnz	w9, #0, 401f30 <run+0x9c0>
  401ea4:	mov	w8, #0x3                   	// #3
  401ea8:	stur	w8, [x29, #-156]
  401eac:	ldur	w8, [x29, #-44]
  401eb0:	stur	w8, [x29, #-160]
  401eb4:	stur	wzr, [x29, #-164]
  401eb8:	ldur	w0, [x29, #-164]
  401ebc:	bl	401140 <log_get_max_level_realm@plt>
  401ec0:	ldur	w8, [x29, #-156]
  401ec4:	and	w8, w8, #0x7
  401ec8:	cmp	w0, w8
  401ecc:	b.lt	401f00 <run+0x990>  // b.tstop
  401ed0:	ldur	w8, [x29, #-164]
  401ed4:	ldur	w9, [x29, #-156]
  401ed8:	orr	w0, w9, w8, lsl #10
  401edc:	ldur	w1, [x29, #-160]
  401ee0:	ldr	x2, [sp, #144]
  401ee4:	mov	w3, #0x108                 	// #264
  401ee8:	ldr	x4, [sp, #136]
  401eec:	adrp	x5, 402000 <run+0xa90>
  401ef0:	add	x5, x5, #0xc8c
  401ef4:	bl	401150 <log_internal_realm@plt>
  401ef8:	str	w0, [sp, #80]
  401efc:	b	401f14 <run+0x9a4>
  401f00:	ldur	w0, [x29, #-160]
  401f04:	bl	401160 <abs@plt>
  401f08:	mov	w8, wzr
  401f0c:	subs	w8, w8, w0, uxtb
  401f10:	str	w8, [sp, #80]
  401f14:	ldr	w8, [sp, #80]
  401f18:	stur	w8, [x29, #-168]
  401f1c:	ldur	w8, [x29, #-168]
  401f20:	stur	w8, [x29, #-4]
  401f24:	mov	w8, #0x1                   	// #1
  401f28:	stur	w8, [x29, #-48]
  401f2c:	b	40201c <run+0xaac>
  401f30:	ldur	x8, [x29, #-32]
  401f34:	cbz	x8, 401fe0 <run+0xa70>
  401f38:	ldur	x0, [x29, #-32]
  401f3c:	bl	401200 <decrypted_image_relinquish@plt>
  401f40:	stur	w0, [x29, #-44]
  401f44:	ldur	w8, [x29, #-44]
  401f48:	cmp	w8, #0x0
  401f4c:	cset	w8, ge  // ge = tcont
  401f50:	tbnz	w8, #0, 401fe0 <run+0xa70>
  401f54:	mov	w8, #0x3                   	// #3
  401f58:	stur	w8, [x29, #-172]
  401f5c:	ldur	w8, [x29, #-44]
  401f60:	stur	w8, [x29, #-176]
  401f64:	stur	wzr, [x29, #-180]
  401f68:	ldur	w0, [x29, #-180]
  401f6c:	bl	401140 <log_get_max_level_realm@plt>
  401f70:	ldur	w8, [x29, #-172]
  401f74:	and	w8, w8, #0x7
  401f78:	cmp	w0, w8
  401f7c:	b.lt	401fb0 <run+0xa40>  // b.tstop
  401f80:	ldur	w8, [x29, #-180]
  401f84:	ldur	w9, [x29, #-172]
  401f88:	orr	w0, w9, w8, lsl #10
  401f8c:	ldur	w1, [x29, #-176]
  401f90:	ldr	x2, [sp, #144]
  401f94:	mov	w3, #0x10d                 	// #269
  401f98:	ldr	x4, [sp, #136]
  401f9c:	adrp	x5, 402000 <run+0xa90>
  401fa0:	add	x5, x5, #0xca6
  401fa4:	bl	401150 <log_internal_realm@plt>
  401fa8:	str	w0, [sp, #76]
  401fac:	b	401fc4 <run+0xa54>
  401fb0:	ldur	w0, [x29, #-176]
  401fb4:	bl	401160 <abs@plt>
  401fb8:	mov	w8, wzr
  401fbc:	subs	w8, w8, w0, uxtb
  401fc0:	str	w8, [sp, #76]
  401fc4:	ldr	w8, [sp, #76]
  401fc8:	str	w8, [sp, #184]
  401fcc:	ldr	w8, [sp, #184]
  401fd0:	stur	w8, [x29, #-4]
  401fd4:	mov	w8, #0x1                   	// #1
  401fd8:	stur	w8, [x29, #-48]
  401fdc:	b	40201c <run+0xaac>
  401fe0:	ldur	x0, [x29, #-24]
  401fe4:	bl	401210 <loop_device_relinquish@plt>
  401fe8:	b	402010 <run+0xaa0>
  401fec:	mov	w8, wzr
  401ff0:	mov	w0, w8
  401ff4:	adrp	x1, 402000 <run+0xa90>
  401ff8:	add	x1, x1, #0xcca
  401ffc:	ldr	x2, [sp, #144]
  402000:	mov	w3, #0x114                 	// #276
  402004:	adrp	x4, 402000 <run+0xa90>
  402008:	add	x4, x4, #0xcda
  40200c:	bl	401220 <log_assert_failed_unreachable_realm@plt>
  402010:	stur	wzr, [x29, #-4]
  402014:	mov	w8, #0x1                   	// #1
  402018:	stur	w8, [x29, #-48]
  40201c:	sub	x0, x29, #0x28
  402020:	bl	402158 <dissected_image_unrefp>
  402024:	sub	x0, x29, #0x20
  402028:	bl	402124 <decrypted_image_unrefp>
  40202c:	sub	x0, x29, #0x18
  402030:	bl	4020f0 <loop_device_unrefp>
  402034:	ldur	w0, [x29, #-4]
  402038:	ldr	x28, [sp, #384]
  40203c:	ldp	x29, x30, [sp, #368]
  402040:	add	sp, sp, #0x190
  402044:	ret

0000000000402048 <static_destruct>:
  402048:	sub	sp, sp, #0x20
  40204c:	stp	x29, x30, [sp, #16]
  402050:	add	x29, sp, #0x10
  402054:	adrp	x8, 41f000 <__FRAME_END__+0x1be38>
  402058:	ldr	x8, [x8, #3776]
  40205c:	str	x8, [sp]
  402060:	cbnz	x8, 402068 <static_destruct+0x20>
  402064:	b	4020bc <static_destruct+0x74>
  402068:	ldr	x0, [sp]
  40206c:	mov	x1, #0x8                   	// #8
  402070:	bl	4029e0 <ALIGN_TO>
  402074:	str	x0, [sp, #8]
  402078:	ldr	x8, [sp, #8]
  40207c:	adrp	x9, 41f000 <__FRAME_END__+0x1be38>
  402080:	ldr	x9, [x9, #3784]
  402084:	cmp	x8, x9
  402088:	b.cs	4020bc <static_destruct+0x74>  // b.hs, b.nlast
  40208c:	ldr	x8, [sp, #8]
  402090:	ldr	x8, [x8, #8]
  402094:	ldr	x9, [sp, #8]
  402098:	ldr	x0, [x9]
  40209c:	blr	x8
  4020a0:	ldr	x8, [sp, #8]
  4020a4:	add	x8, x8, #0x10
  4020a8:	mov	x0, x8
  4020ac:	mov	x1, #0x8                   	// #8
  4020b0:	bl	4029e0 <ALIGN_TO>
  4020b4:	str	x0, [sp, #8]
  4020b8:	b	402078 <static_destruct+0x30>
  4020bc:	ldp	x29, x30, [sp, #16]
  4020c0:	add	sp, sp, #0x20
  4020c4:	ret

00000000004020c8 <freep>:
  4020c8:	sub	sp, sp, #0x20
  4020cc:	stp	x29, x30, [sp, #16]
  4020d0:	add	x29, sp, #0x10
  4020d4:	str	x0, [sp, #8]
  4020d8:	ldr	x8, [sp, #8]
  4020dc:	ldr	x0, [x8]
  4020e0:	bl	401230 <free@plt>
  4020e4:	ldp	x29, x30, [sp, #16]
  4020e8:	add	sp, sp, #0x20
  4020ec:	ret

00000000004020f0 <loop_device_unrefp>:
  4020f0:	sub	sp, sp, #0x20
  4020f4:	stp	x29, x30, [sp, #16]
  4020f8:	add	x29, sp, #0x10
  4020fc:	str	x0, [sp, #8]
  402100:	ldr	x8, [sp, #8]
  402104:	ldr	x8, [x8]
  402108:	cbz	x8, 402118 <loop_device_unrefp+0x28>
  40210c:	ldr	x8, [sp, #8]
  402110:	ldr	x0, [x8]
  402114:	bl	401240 <loop_device_unref@plt>
  402118:	ldp	x29, x30, [sp, #16]
  40211c:	add	sp, sp, #0x20
  402120:	ret

0000000000402124 <decrypted_image_unrefp>:
  402124:	sub	sp, sp, #0x20
  402128:	stp	x29, x30, [sp, #16]
  40212c:	add	x29, sp, #0x10
  402130:	str	x0, [sp, #8]
  402134:	ldr	x8, [sp, #8]
  402138:	ldr	x8, [x8]
  40213c:	cbz	x8, 40214c <decrypted_image_unrefp+0x28>
  402140:	ldr	x8, [sp, #8]
  402144:	ldr	x0, [x8]
  402148:	bl	401250 <decrypted_image_unref@plt>
  40214c:	ldp	x29, x30, [sp, #16]
  402150:	add	sp, sp, #0x20
  402154:	ret

0000000000402158 <dissected_image_unrefp>:
  402158:	sub	sp, sp, #0x20
  40215c:	stp	x29, x30, [sp, #16]
  402160:	add	x29, sp, #0x10
  402164:	str	x0, [sp, #8]
  402168:	ldr	x8, [sp, #8]
  40216c:	ldr	x8, [x8]
  402170:	cbz	x8, 402180 <dissected_image_unrefp+0x28>
  402174:	ldr	x8, [sp, #8]
  402178:	ldr	x0, [x8]
  40217c:	bl	401260 <dissected_image_unref@plt>
  402180:	ldp	x29, x30, [sp, #16]
  402184:	add	sp, sp, #0x20
  402188:	ret

000000000040218c <parse_argv>:
  40218c:	sub	sp, sp, #0x100
  402190:	stp	x29, x30, [sp, #240]
  402194:	add	x29, sp, #0xf0
  402198:	adrp	x8, 420000 <arg_flags>
  40219c:	add	x8, x8, #0x48
  4021a0:	adrp	x9, 402000 <run+0xa90>
  4021a4:	add	x9, x9, #0xab8
  4021a8:	add	x9, x9, #0x3
  4021ac:	adrp	x10, 402000 <run+0xa90>
  4021b0:	add	x10, x10, #0xd5d
  4021b4:	adrp	x11, 420000 <arg_flags>
  4021b8:	add	x11, x11, #0x0
  4021bc:	adrp	x12, 402000 <run+0xa90>
  4021c0:	add	x12, x12, #0xd1f
  4021c4:	adrp	x13, 420000 <arg_flags>
  4021c8:	add	x13, x13, #0x50
  4021cc:	stur	w0, [x29, #-8]
  4021d0:	stur	x1, [x29, #-16]
  4021d4:	str	x8, [sp, #104]
  4021d8:	str	x9, [sp, #96]
  4021dc:	str	x10, [sp, #88]
  4021e0:	str	x11, [sp, #80]
  4021e4:	str	x12, [sp, #72]
  4021e8:	str	x13, [sp, #64]
  4021ec:	ldur	w8, [x29, #-8]
  4021f0:	cmp	w8, #0x0
  4021f4:	cset	w8, ge  // ge = tcont
  4021f8:	mov	w9, #0x1                   	// #1
  4021fc:	eor	w8, w8, #0x1
  402200:	eor	w8, w8, w9
  402204:	eor	w8, w8, w9
  402208:	and	w8, w8, #0x1
  40220c:	mov	w0, w8
  402210:	sxtw	x10, w0
  402214:	cbz	x10, 402238 <parse_argv+0xac>
  402218:	mov	w8, wzr
  40221c:	mov	w0, w8
  402220:	adrp	x1, 402000 <run+0xa90>
  402224:	add	x1, x1, #0xd15
  402228:	ldr	x2, [sp, #96]
  40222c:	mov	w3, #0x40                  	// #64
  402230:	ldr	x4, [sp, #72]
  402234:	bl	401270 <log_assert_failed_realm@plt>
  402238:	ldur	x8, [x29, #-16]
  40223c:	cmp	x8, #0x0
  402240:	cset	w9, ne  // ne = any
  402244:	mov	w10, #0x1                   	// #1
  402248:	eor	w9, w9, #0x1
  40224c:	eor	w9, w9, w10
  402250:	eor	w9, w9, w10
  402254:	and	w9, w9, #0x1
  402258:	mov	w0, w9
  40225c:	sxtw	x8, w0
  402260:	cbz	x8, 402284 <parse_argv+0xf8>
  402264:	mov	w8, wzr
  402268:	mov	w0, w8
  40226c:	adrp	x1, 402000 <run+0xa90>
  402270:	add	x1, x1, #0xd3c
  402274:	ldr	x2, [sp, #96]
  402278:	mov	w3, #0x41                  	// #65
  40227c:	ldr	x4, [sp, #72]
  402280:	bl	401270 <log_assert_failed_realm@plt>
  402284:	ldur	w0, [x29, #-8]
  402288:	ldur	x1, [x29, #-16]
  40228c:	adrp	x2, 402000 <run+0xa90>
  402290:	add	x2, x2, #0xd41
  402294:	adrp	x3, 402000 <run+0xa90>
  402298:	add	x3, x3, #0xfe8
  40229c:	mov	x8, xzr
  4022a0:	mov	x4, x8
  4022a4:	bl	401280 <getopt_long@plt>
  4022a8:	stur	w0, [x29, #-20]
  4022ac:	cmp	w0, #0x0
  4022b0:	cset	w9, lt  // lt = tstop
  4022b4:	tbnz	w9, #0, 402678 <parse_argv+0x4ec>
  4022b8:	ldur	w8, [x29, #-20]
  4022bc:	cmp	w8, #0x3f
  4022c0:	str	w8, [sp, #60]
  4022c4:	b.eq	402648 <parse_argv+0x4bc>  // b.none
  4022c8:	b	4022cc <parse_argv+0x140>
  4022cc:	ldr	w8, [sp, #60]
  4022d0:	cmp	w8, #0x68
  4022d4:	b.eq	40232c <parse_argv+0x1a0>  // b.none
  4022d8:	b	4022dc <parse_argv+0x150>
  4022dc:	ldr	w8, [sp, #60]
  4022e0:	cmp	w8, #0x6d
  4022e4:	b.eq	402344 <parse_argv+0x1b8>  // b.none
  4022e8:	b	4022ec <parse_argv+0x160>
  4022ec:	ldr	w8, [sp, #60]
  4022f0:	cmp	w8, #0x72
  4022f4:	b.eq	402358 <parse_argv+0x1cc>  // b.none
  4022f8:	b	4022fc <parse_argv+0x170>
  4022fc:	ldr	w8, [sp, #60]
  402300:	cmp	w8, #0x100
  402304:	b.eq	402338 <parse_argv+0x1ac>  // b.none
  402308:	b	40230c <parse_argv+0x180>
  40230c:	ldr	w8, [sp, #60]
  402310:	cmp	w8, #0x101
  402314:	b.eq	40236c <parse_argv+0x1e0>  // b.none
  402318:	b	40231c <parse_argv+0x190>
  40231c:	ldr	w8, [sp, #60]
  402320:	cmp	w8, #0x102
  402324:	b.eq	4024a4 <parse_argv+0x318>  // b.none
  402328:	b	402654 <parse_argv+0x4c8>
  40232c:	bl	402970 <help>
  402330:	stur	wzr, [x29, #-4]
  402334:	b	40289c <parse_argv+0x710>
  402338:	bl	401290 <version@plt>
  40233c:	stur	w0, [x29, #-4]
  402340:	b	40289c <parse_argv+0x710>
  402344:	mov	w8, #0x1                   	// #1
  402348:	adrp	x9, 420000 <arg_flags>
  40234c:	add	x9, x9, #0x28
  402350:	str	w8, [x9]
  402354:	b	402674 <parse_argv+0x4e8>
  402358:	ldr	x8, [sp, #80]
  40235c:	ldr	w9, [x8]
  402360:	orr	w9, w9, #0x1
  402364:	str	w9, [x8]
  402368:	b	402674 <parse_argv+0x4e8>
  40236c:	ldr	x8, [sp, #64]
  402370:	ldr	x0, [x8]
  402374:	adrp	x1, 402000 <run+0xa90>
  402378:	add	x1, x1, #0xd45
  40237c:	bl	4012a0 <strcmp@plt>
  402380:	cbnz	w0, 40238c <parse_argv+0x200>
  402384:	stur	wzr, [x29, #-28]
  402388:	b	402488 <parse_argv+0x2fc>
  40238c:	ldr	x8, [sp, #64]
  402390:	ldr	x0, [x8]
  402394:	adrp	x1, 402000 <run+0xa90>
  402398:	add	x1, x1, #0xd4e
  40239c:	bl	4012a0 <strcmp@plt>
  4023a0:	cbnz	w0, 4023b0 <parse_argv+0x224>
  4023a4:	mov	w8, #0x2                   	// #2
  4023a8:	stur	w8, [x29, #-28]
  4023ac:	b	402488 <parse_argv+0x2fc>
  4023b0:	ldr	x8, [sp, #64]
  4023b4:	ldr	x0, [x8]
  4023b8:	adrp	x1, 402000 <run+0xa90>
  4023bc:	add	x1, x1, #0xd53
  4023c0:	bl	4012a0 <strcmp@plt>
  4023c4:	cbnz	w0, 4023d4 <parse_argv+0x248>
  4023c8:	mov	w8, #0x6                   	// #6
  4023cc:	stur	w8, [x29, #-28]
  4023d0:	b	402488 <parse_argv+0x2fc>
  4023d4:	ldr	x8, [sp, #64]
  4023d8:	ldr	x0, [x8]
  4023dc:	adrp	x1, 402000 <run+0xa90>
  4023e0:	add	x1, x1, #0xd57
  4023e4:	bl	4012a0 <strcmp@plt>
  4023e8:	cbnz	w0, 4023f8 <parse_argv+0x26c>
  4023ec:	mov	w8, #0xe                   	// #14
  4023f0:	stur	w8, [x29, #-28]
  4023f4:	b	402488 <parse_argv+0x2fc>
  4023f8:	mov	w8, #0x3                   	// #3
  4023fc:	stur	w8, [x29, #-32]
  402400:	mov	w8, #0x16                  	// #22
  402404:	movk	w8, #0x4000, lsl #16
  402408:	stur	w8, [x29, #-36]
  40240c:	stur	wzr, [x29, #-40]
  402410:	ldur	w0, [x29, #-40]
  402414:	bl	401140 <log_get_max_level_realm@plt>
  402418:	ldur	w8, [x29, #-32]
  40241c:	and	w8, w8, #0x7
  402420:	cmp	w0, w8
  402424:	b.lt	402460 <parse_argv+0x2d4>  // b.tstop
  402428:	ldur	w8, [x29, #-40]
  40242c:	ldur	w9, [x29, #-32]
  402430:	orr	w0, w9, w8, lsl #10
  402434:	ldur	w1, [x29, #-36]
  402438:	ldr	x10, [sp, #64]
  40243c:	ldr	x6, [x10]
  402440:	ldr	x2, [sp, #96]
  402444:	mov	w3, #0x64                  	// #100
  402448:	ldr	x4, [sp, #88]
  40244c:	adrp	x5, 402000 <run+0xa90>
  402450:	add	x5, x5, #0xd68
  402454:	bl	401150 <log_internal_realm@plt>
  402458:	str	w0, [sp, #56]
  40245c:	b	402474 <parse_argv+0x2e8>
  402460:	ldur	w0, [x29, #-36]
  402464:	bl	401160 <abs@plt>
  402468:	mov	w8, wzr
  40246c:	subs	w8, w8, w0, uxtb
  402470:	str	w8, [sp, #56]
  402474:	ldr	w8, [sp, #56]
  402478:	stur	w8, [x29, #-44]
  40247c:	ldur	w8, [x29, #-44]
  402480:	stur	w8, [x29, #-4]
  402484:	b	40289c <parse_argv+0x710>
  402488:	ldr	x8, [sp, #80]
  40248c:	ldr	w9, [x8]
  402490:	and	w9, w9, #0xfffffff1
  402494:	ldur	w10, [x29, #-28]
  402498:	orr	w9, w9, w10
  40249c:	str	w9, [x8]
  4024a0:	b	402674 <parse_argv+0x4e8>
  4024a4:	ldr	x8, [sp, #64]
  4024a8:	ldr	x0, [x8]
  4024ac:	ldr	x9, [x8]
  4024b0:	str	x0, [sp, #48]
  4024b4:	mov	x0, x9
  4024b8:	bl	4012b0 <strlen@plt>
  4024bc:	ldr	x8, [sp, #48]
  4024c0:	str	x0, [sp, #40]
  4024c4:	mov	x0, x8
  4024c8:	ldr	x1, [sp, #40]
  4024cc:	sub	x2, x29, #0x38
  4024d0:	sub	x3, x29, #0x40
  4024d4:	bl	40299c <unhexmem>
  4024d8:	stur	w0, [x29, #-24]
  4024dc:	ldur	w10, [x29, #-24]
  4024e0:	cmp	w10, #0x0
  4024e4:	cset	w10, ge  // ge = tcont
  4024e8:	tbnz	w10, #0, 402578 <parse_argv+0x3ec>
  4024ec:	mov	w8, #0x3                   	// #3
  4024f0:	stur	w8, [x29, #-68]
  4024f4:	ldur	w8, [x29, #-24]
  4024f8:	stur	w8, [x29, #-72]
  4024fc:	stur	wzr, [x29, #-76]
  402500:	ldur	w0, [x29, #-76]
  402504:	bl	401140 <log_get_max_level_realm@plt>
  402508:	ldur	w8, [x29, #-68]
  40250c:	and	w8, w8, #0x7
  402510:	cmp	w0, w8
  402514:	b.lt	402550 <parse_argv+0x3c4>  // b.tstop
  402518:	ldur	w8, [x29, #-76]
  40251c:	ldur	w9, [x29, #-68]
  402520:	orr	w0, w9, w8, lsl #10
  402524:	ldur	w1, [x29, #-72]
  402528:	ldr	x10, [sp, #64]
  40252c:	ldr	x6, [x10]
  402530:	ldr	x2, [sp, #96]
  402534:	mov	w3, #0x70                  	// #112
  402538:	ldr	x4, [sp, #88]
  40253c:	adrp	x5, 402000 <run+0xa90>
  402540:	add	x5, x5, #0xd89
  402544:	bl	401150 <log_internal_realm@plt>
  402548:	str	w0, [sp, #36]
  40254c:	b	402564 <parse_argv+0x3d8>
  402550:	ldur	w0, [x29, #-72]
  402554:	bl	401160 <abs@plt>
  402558:	mov	w8, wzr
  40255c:	subs	w8, w8, w0, uxtb
  402560:	str	w8, [sp, #36]
  402564:	ldr	w8, [sp, #36]
  402568:	stur	w8, [x29, #-80]
  40256c:	ldur	w8, [x29, #-80]
  402570:	stur	w8, [x29, #-4]
  402574:	b	40289c <parse_argv+0x710>
  402578:	ldur	x8, [x29, #-64]
  40257c:	cmp	x8, #0x10
  402580:	b.cs	402614 <parse_argv+0x488>  // b.hs, b.nlast
  402584:	mov	w8, #0x3                   	// #3
  402588:	stur	w8, [x29, #-84]
  40258c:	stur	wzr, [x29, #-88]
  402590:	stur	wzr, [x29, #-92]
  402594:	ldur	w0, [x29, #-92]
  402598:	bl	401140 <log_get_max_level_realm@plt>
  40259c:	ldur	w8, [x29, #-84]
  4025a0:	and	w8, w8, #0x7
  4025a4:	cmp	w0, w8
  4025a8:	b.lt	4025e4 <parse_argv+0x458>  // b.tstop
  4025ac:	ldur	w8, [x29, #-92]
  4025b0:	ldur	w9, [x29, #-84]
  4025b4:	orr	w0, w9, w8, lsl #10
  4025b8:	ldur	w1, [x29, #-88]
  4025bc:	ldr	x10, [sp, #64]
  4025c0:	ldr	x6, [x10]
  4025c4:	ldr	x2, [sp, #96]
  4025c8:	mov	w3, #0x72                  	// #114
  4025cc:	ldr	x4, [sp, #88]
  4025d0:	adrp	x5, 402000 <run+0xa90>
  4025d4:	add	x5, x5, #0xdac
  4025d8:	bl	401150 <log_internal_realm@plt>
  4025dc:	str	w0, [sp, #32]
  4025e0:	b	4025f8 <parse_argv+0x46c>
  4025e4:	ldur	w0, [x29, #-88]
  4025e8:	bl	401160 <abs@plt>
  4025ec:	mov	w8, wzr
  4025f0:	subs	w8, w8, w0, uxtb
  4025f4:	str	w8, [sp, #32]
  4025f8:	ldr	w8, [sp, #32]
  4025fc:	stur	w8, [x29, #-96]
  402600:	ldur	x0, [x29, #-56]
  402604:	bl	401230 <free@plt>
  402608:	mov	w8, #0xffffffea            	// #-22
  40260c:	stur	w8, [x29, #-4]
  402610:	b	40289c <parse_argv+0x710>
  402614:	adrp	x8, 420000 <arg_flags>
  402618:	add	x8, x8, #0x10
  40261c:	ldr	x0, [x8]
  402620:	str	x8, [sp, #24]
  402624:	bl	401230 <free@plt>
  402628:	ldur	x8, [x29, #-56]
  40262c:	ldr	x9, [sp, #24]
  402630:	str	x8, [x9]
  402634:	ldur	x8, [x29, #-64]
  402638:	adrp	x10, 420000 <arg_flags>
  40263c:	add	x10, x10, #0x20
  402640:	str	x8, [x10]
  402644:	b	402674 <parse_argv+0x4e8>
  402648:	mov	w8, #0xffffffea            	// #-22
  40264c:	stur	w8, [x29, #-4]
  402650:	b	40289c <parse_argv+0x710>
  402654:	mov	w8, wzr
  402658:	mov	w0, w8
  40265c:	adrp	x1, 402000 <run+0xa90>
  402660:	add	x1, x1, #0xdd7
  402664:	ldr	x2, [sp, #96]
  402668:	mov	w3, #0x81                  	// #129
  40266c:	ldr	x4, [sp, #72]
  402670:	bl	401220 <log_assert_failed_unreachable_realm@plt>
  402674:	b	402284 <parse_argv+0xf8>
  402678:	adrp	x8, 420000 <arg_flags>
  40267c:	add	x8, x8, #0x28
  402680:	ldr	w9, [x8]
  402684:	str	w9, [sp, #20]
  402688:	cbz	w9, 4026a0 <parse_argv+0x514>
  40268c:	b	402690 <parse_argv+0x504>
  402690:	ldr	w8, [sp, #20]
  402694:	cmp	w8, #0x1
  402698:	b.eq	40277c <parse_argv+0x5f0>  // b.none
  40269c:	b	402874 <parse_argv+0x6e8>
  4026a0:	ldr	x8, [sp, #104]
  4026a4:	ldr	w9, [x8]
  4026a8:	add	w9, w9, #0x1
  4026ac:	ldur	w10, [x29, #-8]
  4026b0:	cmp	w9, w10
  4026b4:	b.eq	402740 <parse_argv+0x5b4>  // b.none
  4026b8:	mov	w8, #0x3                   	// #3
  4026bc:	stur	w8, [x29, #-100]
  4026c0:	mov	w8, #0x16                  	// #22
  4026c4:	movk	w8, #0x4000, lsl #16
  4026c8:	stur	w8, [x29, #-104]
  4026cc:	stur	wzr, [x29, #-108]
  4026d0:	ldur	w0, [x29, #-108]
  4026d4:	bl	401140 <log_get_max_level_realm@plt>
  4026d8:	ldur	w8, [x29, #-100]
  4026dc:	and	w8, w8, #0x7
  4026e0:	cmp	w0, w8
  4026e4:	b.lt	402718 <parse_argv+0x58c>  // b.tstop
  4026e8:	ldur	w8, [x29, #-108]
  4026ec:	ldur	w9, [x29, #-100]
  4026f0:	orr	w0, w9, w8, lsl #10
  4026f4:	ldur	w1, [x29, #-104]
  4026f8:	ldr	x2, [sp, #96]
  4026fc:	mov	w3, #0x8b                  	// #139
  402700:	ldr	x4, [sp, #88]
  402704:	adrp	x5, 402000 <run+0xa90>
  402708:	add	x5, x5, #0xde8
  40270c:	bl	401150 <log_internal_realm@plt>
  402710:	str	w0, [sp, #16]
  402714:	b	40272c <parse_argv+0x5a0>
  402718:	ldur	w0, [x29, #-104]
  40271c:	bl	401160 <abs@plt>
  402720:	mov	w8, wzr
  402724:	subs	w8, w8, w0, uxtb
  402728:	str	w8, [sp, #16]
  40272c:	ldr	w8, [sp, #16]
  402730:	stur	w8, [x29, #-112]
  402734:	ldur	w8, [x29, #-112]
  402738:	stur	w8, [x29, #-4]
  40273c:	b	40289c <parse_argv+0x710>
  402740:	ldur	x8, [x29, #-16]
  402744:	ldr	x9, [sp, #104]
  402748:	ldrsw	x10, [x9]
  40274c:	mov	x11, #0x8                   	// #8
  402750:	mul	x10, x11, x10
  402754:	add	x8, x8, x10
  402758:	ldr	x8, [x8]
  40275c:	adrp	x10, 420000 <arg_flags>
  402760:	add	x10, x10, #0x18
  402764:	str	x8, [x10]
  402768:	ldr	x8, [sp, #80]
  40276c:	ldr	w12, [x8]
  402770:	orr	w12, w12, #0x1
  402774:	str	w12, [x8]
  402778:	b	402894 <parse_argv+0x708>
  40277c:	ldr	x8, [sp, #104]
  402780:	ldr	w9, [x8]
  402784:	add	w9, w9, #0x2
  402788:	ldur	w10, [x29, #-8]
  40278c:	cmp	w9, w10
  402790:	b.eq	40281c <parse_argv+0x690>  // b.none
  402794:	mov	w8, #0x3                   	// #3
  402798:	stur	w8, [x29, #-116]
  40279c:	mov	w8, #0x16                  	// #22
  4027a0:	movk	w8, #0x4000, lsl #16
  4027a4:	str	w8, [sp, #120]
  4027a8:	str	wzr, [sp, #116]
  4027ac:	ldr	w0, [sp, #116]
  4027b0:	bl	401140 <log_get_max_level_realm@plt>
  4027b4:	ldur	w8, [x29, #-116]
  4027b8:	and	w8, w8, #0x7
  4027bc:	cmp	w0, w8
  4027c0:	b.lt	4027f4 <parse_argv+0x668>  // b.tstop
  4027c4:	ldr	w8, [sp, #116]
  4027c8:	ldur	w9, [x29, #-116]
  4027cc:	orr	w0, w9, w8, lsl #10
  4027d0:	ldr	w1, [sp, #120]
  4027d4:	ldr	x2, [sp, #96]
  4027d8:	mov	w3, #0x94                  	// #148
  4027dc:	ldr	x4, [sp, #88]
  4027e0:	adrp	x5, 402000 <run+0xa90>
  4027e4:	add	x5, x5, #0xe0f
  4027e8:	bl	401150 <log_internal_realm@plt>
  4027ec:	str	w0, [sp, #12]
  4027f0:	b	402808 <parse_argv+0x67c>
  4027f4:	ldr	w0, [sp, #120]
  4027f8:	bl	401160 <abs@plt>
  4027fc:	mov	w8, wzr
  402800:	subs	w8, w8, w0, uxtb
  402804:	str	w8, [sp, #12]
  402808:	ldr	w8, [sp, #12]
  40280c:	str	w8, [sp, #112]
  402810:	ldr	w8, [sp, #112]
  402814:	stur	w8, [x29, #-4]
  402818:	b	40289c <parse_argv+0x710>
  40281c:	ldur	x8, [x29, #-16]
  402820:	ldr	x9, [sp, #104]
  402824:	ldrsw	x10, [x9]
  402828:	mov	x11, #0x8                   	// #8
  40282c:	mul	x10, x11, x10
  402830:	add	x8, x8, x10
  402834:	ldr	x8, [x8]
  402838:	adrp	x10, 420000 <arg_flags>
  40283c:	add	x10, x10, #0x18
  402840:	str	x8, [x10]
  402844:	ldur	x8, [x29, #-16]
  402848:	ldr	w12, [x9]
  40284c:	add	w12, w12, #0x1
  402850:	mov	w0, w12
  402854:	sxtw	x10, w0
  402858:	mul	x10, x11, x10
  40285c:	add	x8, x8, x10
  402860:	ldr	x8, [x8]
  402864:	adrp	x10, 420000 <arg_flags>
  402868:	add	x10, x10, #0x30
  40286c:	str	x8, [x10]
  402870:	b	402894 <parse_argv+0x708>
  402874:	mov	w8, wzr
  402878:	mov	w0, w8
  40287c:	adrp	x1, 402000 <run+0xa90>
  402880:	add	x1, x1, #0xcca
  402884:	ldr	x2, [sp, #96]
  402888:	mov	w3, #0x9b                  	// #155
  40288c:	ldr	x4, [sp, #72]
  402890:	bl	401220 <log_assert_failed_unreachable_realm@plt>
  402894:	mov	w8, #0x1                   	// #1
  402898:	stur	w8, [x29, #-4]
  40289c:	ldur	w0, [x29, #-4]
  4028a0:	ldp	x29, x30, [sp, #240]
  4028a4:	add	sp, sp, #0x100
  4028a8:	ret

00000000004028ac <sd_id128_is_null>:
  4028ac:	sub	sp, sp, #0x20
  4028b0:	str	x0, [sp, #16]
  4028b4:	str	x1, [sp, #24]
  4028b8:	ldr	x8, [sp, #16]
  4028bc:	mov	w9, #0x0                   	// #0
  4028c0:	str	w9, [sp, #12]
  4028c4:	cbnz	x8, 4028d8 <sd_id128_is_null+0x2c>
  4028c8:	ldr	x8, [sp, #24]
  4028cc:	cmp	x8, #0x0
  4028d0:	cset	w9, eq  // eq = none
  4028d4:	str	w9, [sp, #12]
  4028d8:	ldr	w8, [sp, #12]
  4028dc:	and	w0, w8, #0x1
  4028e0:	add	sp, sp, #0x20
  4028e4:	ret

00000000004028e8 <PARTITION_VERITY_OF>:
  4028e8:	sub	sp, sp, #0x10
  4028ec:	str	w0, [sp, #8]
  4028f0:	ldr	w8, [sp, #8]
  4028f4:	cbnz	w8, 402904 <PARTITION_VERITY_OF+0x1c>
  4028f8:	mov	w8, #0x7                   	// #7
  4028fc:	str	w8, [sp, #12]
  402900:	b	402924 <PARTITION_VERITY_OF+0x3c>
  402904:	ldr	w8, [sp, #8]
  402908:	cmp	w8, #0x1
  40290c:	b.ne	40291c <PARTITION_VERITY_OF+0x34>  // b.any
  402910:	mov	w8, #0x8                   	// #8
  402914:	str	w8, [sp, #12]
  402918:	b	402924 <PARTITION_VERITY_OF+0x3c>
  40291c:	mov	w8, #0xffffffff            	// #-1
  402920:	str	w8, [sp, #12]
  402924:	ldr	w0, [sp, #12]
  402928:	add	sp, sp, #0x10
  40292c:	ret

0000000000402930 <strv_isempty>:
  402930:	sub	sp, sp, #0x10
  402934:	str	x0, [sp, #8]
  402938:	ldr	x8, [sp, #8]
  40293c:	mov	w9, #0x1                   	// #1
  402940:	str	w9, [sp, #4]
  402944:	cbz	x8, 402960 <strv_isempty+0x30>
  402948:	ldr	x8, [sp, #8]
  40294c:	ldr	x8, [x8]
  402950:	cmp	x8, #0x0
  402954:	cset	w9, ne  // ne = any
  402958:	eor	w9, w9, #0x1
  40295c:	str	w9, [sp, #4]
  402960:	ldr	w8, [sp, #4]
  402964:	and	w0, w8, #0x1
  402968:	add	sp, sp, #0x10
  40296c:	ret

0000000000402970 <help>:
  402970:	stp	x29, x30, [sp, #-16]!
  402974:	mov	x29, sp
  402978:	adrp	x8, 420000 <arg_flags>
  40297c:	add	x8, x8, #0x58
  402980:	adrp	x0, 402000 <run+0xa90>
  402984:	add	x0, x0, #0xe4c
  402988:	ldr	x1, [x8]
  40298c:	ldr	x2, [x8]
  402990:	bl	4011a0 <printf@plt>
  402994:	ldp	x29, x30, [sp], #16
  402998:	ret

000000000040299c <unhexmem>:
  40299c:	sub	sp, sp, #0x30
  4029a0:	stp	x29, x30, [sp, #32]
  4029a4:	add	x29, sp, #0x20
  4029a8:	stur	x0, [x29, #-8]
  4029ac:	str	x1, [sp, #16]
  4029b0:	str	x2, [sp, #8]
  4029b4:	str	x3, [sp]
  4029b8:	ldur	x0, [x29, #-8]
  4029bc:	ldr	x1, [sp, #16]
  4029c0:	ldr	x3, [sp, #8]
  4029c4:	ldr	x4, [sp]
  4029c8:	mov	w8, wzr
  4029cc:	and	w2, w8, #0x1
  4029d0:	bl	4012c0 <unhexmem_full@plt>
  4029d4:	ldp	x29, x30, [sp, #32]
  4029d8:	add	sp, sp, #0x30
  4029dc:	ret

00000000004029e0 <ALIGN_TO>:
  4029e0:	sub	sp, sp, #0x10
  4029e4:	str	x0, [sp, #8]
  4029e8:	str	x1, [sp]
  4029ec:	ldr	x8, [sp, #8]
  4029f0:	ldr	x9, [sp]
  4029f4:	add	x8, x8, x9
  4029f8:	subs	x8, x8, #0x1
  4029fc:	ldr	x9, [sp]
  402a00:	subs	x9, x9, #0x1
  402a04:	bic	x0, x8, x9
  402a08:	add	sp, sp, #0x10
  402a0c:	ret

0000000000402a10 <__libc_csu_init>:
  402a10:	stp	x29, x30, [sp, #-64]!
  402a14:	mov	x29, sp
  402a18:	stp	x19, x20, [sp, #16]
  402a1c:	adrp	x20, 41f000 <__FRAME_END__+0x1be38>
  402a20:	add	x20, x20, #0xc90
  402a24:	stp	x21, x22, [sp, #32]
  402a28:	adrp	x21, 41f000 <__FRAME_END__+0x1be38>
  402a2c:	add	x21, x21, #0xc88
  402a30:	sub	x20, x20, x21
  402a34:	mov	w22, w0
  402a38:	stp	x23, x24, [sp, #48]
  402a3c:	mov	x23, x1
  402a40:	mov	x24, x2
  402a44:	bl	401068 <_init>
  402a48:	cmp	xzr, x20, asr #3
  402a4c:	b.eq	402a78 <__libc_csu_init+0x68>  // b.none
  402a50:	asr	x20, x20, #3
  402a54:	mov	x19, #0x0                   	// #0
  402a58:	ldr	x3, [x21, x19, lsl #3]
  402a5c:	mov	x2, x24
  402a60:	add	x19, x19, #0x1
  402a64:	mov	x1, x23
  402a68:	mov	w0, w22
  402a6c:	blr	x3
  402a70:	cmp	x20, x19
  402a74:	b.ne	402a58 <__libc_csu_init+0x48>  // b.any
  402a78:	ldp	x19, x20, [sp, #16]
  402a7c:	ldp	x21, x22, [sp, #32]
  402a80:	ldp	x23, x24, [sp, #48]
  402a84:	ldp	x29, x30, [sp], #64
  402a88:	ret
  402a8c:	nop

0000000000402a90 <__libc_csu_fini>:
  402a90:	ret

Disassembly of section .fini:

0000000000402a94 <_fini>:
  402a94:	stp	x29, x30, [sp, #-16]!
  402a98:	mov	x29, sp
  402a9c:	ldp	x29, x30, [sp], #16
  402aa0:	ret
