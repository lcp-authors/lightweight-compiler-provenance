
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 13000 <PyInit__bz2@@Base+0x10958>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0xd68>:
    1940:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    1958:	add	x0, x0, #0x690
    195c:	adrp	x1, 14000 <PyInit__bz2@@Base+0x11958>
    1960:	add	x1, x1, #0x690
    1964:	cmp	x1, x0
    1968:	b.eq	1980 <PyThread_free_lock@plt+0x50>  // b.none
    196c:	adrp	x1, 13000 <PyInit__bz2@@Base+0x10958>
    1970:	ldr	x1, [x1, #3976]
    1974:	cbz	x1, 1980 <PyThread_free_lock@plt+0x50>
    1978:	mov	x16, x1
    197c:	br	x16
    1980:	ret
    1984:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    1988:	add	x0, x0, #0x690
    198c:	adrp	x1, 14000 <PyInit__bz2@@Base+0x11958>
    1990:	add	x1, x1, #0x690
    1994:	sub	x1, x1, x0
    1998:	mov	x2, #0x2                   	// #2
    199c:	asr	x1, x1, #3
    19a0:	sdiv	x1, x1, x2
    19a4:	cbz	x1, 19bc <PyThread_free_lock@plt+0x8c>
    19a8:	adrp	x2, 13000 <PyInit__bz2@@Base+0x10958>
    19ac:	ldr	x2, [x2, #4064]
    19b0:	cbz	x2, 19bc <PyThread_free_lock@plt+0x8c>
    19b4:	mov	x16, x2
    19b8:	br	x16
    19bc:	ret
    19c0:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    19c4:	ldrb	w1, [x0, #1680]
    19c8:	cbnz	w1, 1a0c <PyThread_free_lock@plt+0xdc>
    19cc:	stp	x29, x30, [sp, #-32]!
    19d0:	mov	x29, sp
    19d4:	str	x19, [sp, #16]
    19d8:	mov	x19, x0
    19dc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    19e0:	ldr	x0, [x0, #3992]
    19e4:	cbz	x0, 19f4 <PyThread_free_lock@plt+0xc4>
    19e8:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    19ec:	ldr	x0, [x0, #352]
    19f0:	bl	16e0 <__cxa_finalize@plt>
    19f4:	bl	1954 <PyThread_free_lock@plt+0x24>
    19f8:	mov	w0, #0x1                   	// #1
    19fc:	strb	w0, [x19, #1680]
    1a00:	ldr	x19, [sp, #16]
    1a04:	ldp	x29, x30, [sp], #32
    1a08:	ret
    1a0c:	ret
    1a10:	b	1984 <PyThread_free_lock@plt+0x54>
    1a14:	stp	x29, x30, [sp, #-16]!
    1a18:	add	w1, w0, #0x9
    1a1c:	mov	w2, w0
    1a20:	mov	x29, sp
    1a24:	cmp	w1, #0xd
    1a28:	b.hi	1acc <PyThread_free_lock@plt+0x19c>  // b.pmore
    1a2c:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1a30:	add	x0, x0, #0x9fc
    1a34:	ldrb	w0, [x0, w1, uxtw]
    1a38:	adr	x1, 1a44 <PyThread_free_lock@plt+0x114>
    1a3c:	add	x0, x1, w0, sxtb #2
    1a40:	br	x0
    1a44:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1a48:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a4c:	add	x1, x1, #0x760
    1a50:	ldr	x0, [x0, #3968]
    1a54:	ldr	x0, [x0]
    1a58:	bl	1760 <PyErr_SetString@plt>
    1a5c:	b	1a78 <PyThread_free_lock@plt+0x148>
    1a60:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1a64:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a68:	add	x1, x1, #0x784
    1a6c:	ldr	x0, [x0, #4016]
    1a70:	b	1a54 <PyThread_free_lock@plt+0x124>
    1a74:	bl	1730 <PyErr_NoMemory@plt>
    1a78:	mov	w0, #0x1                   	// #1
    1a7c:	ldp	x29, x30, [sp], #16
    1a80:	ret
    1a84:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a88:	add	x1, x1, #0x7bb
    1a8c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1a90:	ldr	x0, [x0, #4032]
    1a94:	b	1a54 <PyThread_free_lock@plt+0x124>
    1a98:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a9c:	add	x1, x1, #0x7cf
    1aa0:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1aa4:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1aa8:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1aac:	add	x1, x1, #0x7e1
    1ab0:	ldr	x0, [x0, #4056]
    1ab4:	b	1a54 <PyThread_free_lock@plt+0x124>
    1ab8:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1abc:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ac0:	add	x1, x1, #0x825
    1ac4:	ldr	x0, [x0, #4000]
    1ac8:	b	1a54 <PyThread_free_lock@plt+0x124>
    1acc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1ad0:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ad4:	add	x1, x1, #0x864
    1ad8:	ldr	x0, [x0, #4032]
    1adc:	ldr	x0, [x0]
    1ae0:	bl	18e0 <PyErr_Format@plt>
    1ae4:	b	1a78 <PyThread_free_lock@plt+0x148>
    1ae8:	mov	w0, #0x0                   	// #0
    1aec:	b	1a7c <PyThread_free_lock@plt+0x14c>
    1af0:	stp	x29, x30, [sp, #-32]!
    1af4:	mov	x29, sp
    1af8:	stp	x19, x20, [sp, #16]
    1afc:	mov	x20, x1
    1b00:	mov	x1, x2
    1b04:	ldr	x2, [x0, #8]
    1b08:	mov	x19, x0
    1b0c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    1b10:	add	x0, x0, #0x168
    1b14:	cmp	x2, x0
    1b18:	b.eq	1b54 <PyThread_free_lock@plt+0x224>  // b.none
    1b1c:	ldr	x1, [x20, #16]
    1b20:	cmp	x1, #0x1
    1b24:	b.ls	1b40 <PyThread_free_lock@plt+0x210>  // b.plast
    1b28:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1b2c:	mov	x3, #0x1                   	// #1
    1b30:	add	x0, x0, #0x9ee
    1b34:	mov	x2, #0x0                   	// #0
    1b38:	bl	1820 <_PyArg_CheckPositional@plt>
    1b3c:	cbz	w0, 1b68 <PyThread_free_lock@plt+0x238>
    1b40:	ldr	x0, [x20, #16]
    1b44:	cmp	x0, #0x0
    1b48:	b.gt	1b78 <PyThread_free_lock@plt+0x248>
    1b4c:	mov	w20, #0x9                   	// #9
    1b50:	b	1bd0 <PyThread_free_lock@plt+0x2a0>
    1b54:	cbz	x1, 1b1c <PyThread_free_lock@plt+0x1ec>
    1b58:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1b5c:	add	x0, x0, #0x9ee
    1b60:	bl	1900 <_PyArg_NoKeywords@plt>
    1b64:	cbnz	w0, 1b1c <PyThread_free_lock@plt+0x1ec>
    1b68:	mov	w0, #0xffffffff            	// #-1
    1b6c:	ldp	x19, x20, [sp, #16]
    1b70:	ldp	x29, x30, [sp], #32
    1b74:	ret
    1b78:	ldr	x0, [x20, #24]
    1b7c:	adrp	x1, 13000 <PyInit__bz2@@Base+0x10958>
    1b80:	ldr	x1, [x1, #3984]
    1b84:	ldr	x0, [x0, #8]
    1b88:	cmp	x0, x1
    1b8c:	b.ne	1bac <PyThread_free_lock@plt+0x27c>  // b.any
    1b90:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1b94:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b98:	add	x1, x1, #0x889
    1b9c:	ldr	x0, [x0, #4024]
    1ba0:	ldr	x0, [x0]
    1ba4:	bl	1760 <PyErr_SetString@plt>
    1ba8:	b	1b68 <PyThread_free_lock@plt+0x238>
    1bac:	bl	18d0 <PyType_IsSubtype@plt>
    1bb0:	cbnz	w0, 1b90 <PyThread_free_lock@plt+0x260>
    1bb4:	ldr	x0, [x20, #24]
    1bb8:	bl	1910 <_PyLong_AsInt@plt>
    1bbc:	mov	w20, w0
    1bc0:	cmn	w0, #0x1
    1bc4:	b.ne	1bd0 <PyThread_free_lock@plt+0x2a0>  // b.any
    1bc8:	bl	1830 <PyErr_Occurred@plt>
    1bcc:	cbnz	x0, 1b68 <PyThread_free_lock@plt+0x238>
    1bd0:	sub	w0, w20, #0x1
    1bd4:	cmp	w0, #0x8
    1bd8:	b.ls	1bf0 <PyThread_free_lock@plt+0x2c0>  // b.plast
    1bdc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1be0:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1be4:	add	x1, x1, #0x8ae
    1be8:	ldr	x0, [x0, #4016]
    1bec:	b	1ba0 <PyThread_free_lock@plt+0x270>
    1bf0:	bl	1870 <PyThread_allocate_lock@plt>
    1bf4:	str	x0, [x19, #104]
    1bf8:	cbnz	x0, 1c10 <PyThread_free_lock@plt+0x2e0>
    1bfc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1c00:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1c04:	add	x1, x1, #0x8d4
    1c08:	ldr	x0, [x0, #4008]
    1c0c:	b	1ba0 <PyThread_free_lock@plt+0x270>
    1c10:	mov	w1, w20
    1c14:	adrp	x0, 1000 <memcpy@plt-0x680>
    1c18:	add	x0, x0, #0xc60
    1c1c:	mov	w3, #0x0                   	// #0
    1c20:	mov	w2, #0x0                   	// #0
    1c24:	str	x0, [x19, #72]
    1c28:	adrp	x0, 1000 <memcpy@plt-0x680>
    1c2c:	add	x0, x0, #0xc58
    1c30:	str	x0, [x19, #80]
    1c34:	add	x0, x19, #0x10
    1c38:	str	xzr, [x19, #88]
    1c3c:	bl	17b0 <BZ2_bzCompressInit@plt>
    1c40:	bl	1a14 <PyThread_free_lock@plt+0xe4>
    1c44:	cbz	w0, 1b6c <PyThread_free_lock@plt+0x23c>
    1c48:	ldr	x0, [x19, #104]
    1c4c:	bl	1930 <PyThread_free_lock@plt>
    1c50:	str	xzr, [x19, #104]
    1c54:	b	1b68 <PyThread_free_lock@plt+0x238>
    1c58:	mov	x0, x1
    1c5c:	b	1860 <PyMem_RawFree@plt>
    1c60:	cmp	w1, #0x0
    1c64:	ccmp	w2, #0x0, #0x1, ge  // ge = tcont
    1c68:	b.lt	1c74 <PyThread_free_lock@plt+0x344>  // b.tstop
    1c6c:	smull	x0, w1, w2
    1c70:	b	16f0 <PyMem_RawMalloc@plt>
    1c74:	mov	x0, #0x0                   	// #0
    1c78:	ret
    1c7c:	stp	x29, x30, [sp, #-32]!
    1c80:	mov	x29, sp
    1c84:	str	x19, [sp, #16]
    1c88:	mov	x19, x0
    1c8c:	add	x0, x0, #0x10
    1c90:	bl	17f0 <BZ2_bzCompressEnd@plt>
    1c94:	ldr	x0, [x19, #104]
    1c98:	cbz	x0, 1ca0 <PyThread_free_lock@plt+0x370>
    1c9c:	bl	1930 <PyThread_free_lock@plt>
    1ca0:	ldr	x0, [x19, #8]
    1ca4:	ldr	x1, [x0, #320]
    1ca8:	mov	x0, x19
    1cac:	ldr	x19, [sp, #16]
    1cb0:	mov	x16, x1
    1cb4:	ldp	x29, x30, [sp], #32
    1cb8:	br	x16
    1cbc:	ldr	x1, [x0]
    1cc0:	sub	x1, x1, #0x1
    1cc4:	str	x1, [x0]
    1cc8:	cbnz	x1, 1cd0 <PyThread_free_lock@plt+0x3a0>
    1ccc:	b	1720 <_Py_Dealloc@plt>
    1cd0:	ret
    1cd4:	cbz	x0, 1cdc <PyThread_free_lock@plt+0x3ac>
    1cd8:	b	1cbc <PyThread_free_lock@plt+0x38c>
    1cdc:	ret
    1ce0:	stp	x29, x30, [sp, #-48]!
    1ce4:	mov	x29, sp
    1ce8:	stp	x19, x20, [sp, #16]
    1cec:	mov	x19, x0
    1cf0:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    1cf4:	str	x21, [sp, #32]
    1cf8:	add	x0, x0, #0x168
    1cfc:	ldr	x21, [x19, #8]
    1d00:	add	x0, x0, #0x1a0
    1d04:	cmp	x21, x0
    1d08:	b.eq	1d34 <PyThread_free_lock@plt+0x404>  // b.none
    1d0c:	bl	1870 <PyThread_allocate_lock@plt>
    1d10:	mov	x20, x0
    1d14:	cbnz	x0, 1d80 <PyThread_free_lock@plt+0x450>
    1d18:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1d1c:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1d20:	add	x1, x1, #0x8d4
    1d24:	ldr	x0, [x0, #4008]
    1d28:	ldr	x0, [x0]
    1d2c:	bl	1760 <PyErr_SetString@plt>
    1d30:	b	1d68 <PyThread_free_lock@plt+0x438>
    1d34:	mov	x20, x2
    1d38:	cbnz	x1, 1d58 <PyThread_free_lock@plt+0x428>
    1d3c:	cbz	x20, 1d0c <PyThread_free_lock@plt+0x3dc>
    1d40:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1d44:	mov	x1, x20
    1d48:	add	x0, x0, #0x9d9
    1d4c:	bl	1900 <_PyArg_NoKeywords@plt>
    1d50:	cbnz	w0, 1d0c <PyThread_free_lock@plt+0x3dc>
    1d54:	b	1d68 <PyThread_free_lock@plt+0x438>
    1d58:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1d5c:	add	x0, x0, #0x9d9
    1d60:	bl	1800 <_PyArg_NoPositional@plt>
    1d64:	cbnz	w0, 1d70 <PyThread_free_lock@plt+0x440>
    1d68:	mov	w0, #0xffffffff            	// #-1
    1d6c:	b	1df0 <PyThread_free_lock@plt+0x4c0>
    1d70:	ldr	x0, [x19, #8]
    1d74:	cmp	x0, x21
    1d78:	b.eq	1d3c <PyThread_free_lock@plt+0x40c>  // b.none
    1d7c:	b	1d0c <PyThread_free_lock@plt+0x3dc>
    1d80:	ldr	x0, [x19, #144]
    1d84:	cbz	x0, 1d8c <PyThread_free_lock@plt+0x45c>
    1d88:	bl	1930 <PyThread_free_lock@plt>
    1d8c:	mov	w0, #0x1                   	// #1
    1d90:	strb	w0, [x19, #112]
    1d94:	stp	xzr, xzr, [x19, #120]
    1d98:	mov	x1, #0x0                   	// #0
    1d9c:	mov	x0, #0x0                   	// #0
    1da0:	stp	xzr, x20, [x19, #136]
    1da4:	ldr	x20, [x19, #104]
    1da8:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1dac:	str	x0, [x19, #104]
    1db0:	mov	x0, x20
    1db4:	bl	1cd4 <PyThread_free_lock@plt+0x3a4>
    1db8:	ldr	x0, [x19, #104]
    1dbc:	cbnz	x0, 1dd8 <PyThread_free_lock@plt+0x4a8>
    1dc0:	ldr	x0, [x19, #104]
    1dc4:	cbnz	x0, 1e00 <PyThread_free_lock@plt+0x4d0>
    1dc8:	ldr	x0, [x19, #144]
    1dcc:	bl	1930 <PyThread_free_lock@plt>
    1dd0:	str	xzr, [x19, #144]
    1dd4:	b	1d68 <PyThread_free_lock@plt+0x438>
    1dd8:	mov	w2, #0x0                   	// #0
    1ddc:	mov	w1, #0x0                   	// #0
    1de0:	add	x0, x19, #0x10
    1de4:	bl	1770 <BZ2_bzDecompressInit@plt>
    1de8:	bl	1a14 <PyThread_free_lock@plt+0xe4>
    1dec:	cbnz	w0, 1dc0 <PyThread_free_lock@plt+0x490>
    1df0:	ldp	x19, x20, [sp, #16]
    1df4:	ldr	x21, [sp, #32]
    1df8:	ldp	x29, x30, [sp], #48
    1dfc:	ret
    1e00:	str	xzr, [x19, #104]
    1e04:	bl	1cbc <PyThread_free_lock@plt+0x38c>
    1e08:	b	1dc8 <PyThread_free_lock@plt+0x498>
    1e0c:	stp	x29, x30, [sp, #-32]!
    1e10:	mov	x29, sp
    1e14:	str	x19, [sp, #16]
    1e18:	mov	x19, x0
    1e1c:	ldr	x0, [x0, #120]
    1e20:	cbz	x0, 1e28 <PyThread_free_lock@plt+0x4f8>
    1e24:	bl	16c0 <PyMem_Free@plt>
    1e28:	add	x0, x19, #0x10
    1e2c:	bl	1780 <BZ2_bzDecompressEnd@plt>
    1e30:	ldr	x0, [x19, #104]
    1e34:	cbz	x0, 1e40 <PyThread_free_lock@plt+0x510>
    1e38:	str	xzr, [x19, #104]
    1e3c:	bl	1cbc <PyThread_free_lock@plt+0x38c>
    1e40:	ldr	x0, [x19, #144]
    1e44:	cbz	x0, 1e4c <PyThread_free_lock@plt+0x51c>
    1e48:	bl	1930 <PyThread_free_lock@plt>
    1e4c:	ldr	x0, [x19, #8]
    1e50:	ldr	x1, [x0, #320]
    1e54:	mov	x0, x19
    1e58:	ldr	x19, [sp, #16]
    1e5c:	mov	x16, x1
    1e60:	ldp	x29, x30, [sp], #32
    1e64:	br	x16
    1e68:	ldr	x2, [x0]
    1e6c:	cmp	x1, #0x0
    1e70:	ldr	x3, [x2, #16]
    1e74:	add	x2, x3, #0x6
    1e78:	add	x2, x2, x3, lsr #3
    1e7c:	ccmp	x1, x2, #0x2, gt
    1e80:	csel	x1, x1, x2, cc  // cc = lo, ul, last
    1e84:	cmp	x1, x3
    1e88:	b.ls	1e90 <PyThread_free_lock@plt+0x560>  // b.plast
    1e8c:	b	16a0 <_PyBytes_Resize@plt>
    1e90:	stp	x29, x30, [sp, #-16]!
    1e94:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    1e98:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1e9c:	mov	x29, sp
    1ea0:	ldr	x0, [x0, #4048]
    1ea4:	add	x1, x1, #0x8ec
    1ea8:	ldr	x0, [x0]
    1eac:	bl	1760 <PyErr_SetString@plt>
    1eb0:	mov	w0, #0xffffffff            	// #-1
    1eb4:	ldp	x29, x30, [sp], #16
    1eb8:	ret
    1ebc:	sub	sp, sp, #0xe0
    1ec0:	stp	x29, x30, [sp, #16]
    1ec4:	add	x29, sp, #0x10
    1ec8:	stp	x19, x20, [sp, #32]
    1ecc:	mov	x19, x0
    1ed0:	mov	x20, x1
    1ed4:	stp	x21, x22, [sp, #48]
    1ed8:	mov	x21, x2
    1edc:	stp	x23, x24, [sp, #64]
    1ee0:	stp	x25, x26, [sp, #80]
    1ee4:	str	x27, [sp, #96]
    1ee8:	cbz	x3, 1f84 <PyThread_free_lock@plt+0x654>
    1eec:	ldr	x22, [x3, #16]
    1ef0:	stp	xzr, xzr, [sp, #144]
    1ef4:	sub	x0, x21, #0x1
    1ef8:	stp	xzr, xzr, [sp, #160]
    1efc:	cmp	x3, #0x0
    1f00:	ccmp	x0, #0x1, #0x2, eq  // eq = none
    1f04:	stp	xzr, xzr, [sp, #176]
    1f08:	stp	xzr, xzr, [sp, #192]
    1f0c:	stp	xzr, xzr, [sp, #208]
    1f10:	b.hi	1f18 <PyThread_free_lock@plt+0x5e8>  // b.pmore
    1f14:	cbnz	x20, 1f8c <PyThread_free_lock@plt+0x65c>
    1f18:	add	x0, sp, #0x80
    1f1c:	str	x0, [sp]
    1f20:	mov	x1, x21
    1f24:	mov	x0, x20
    1f28:	mov	w7, #0x0                   	// #0
    1f2c:	mov	w6, #0x2                   	// #2
    1f30:	mov	w5, #0x1                   	// #1
    1f34:	adrp	x4, 14000 <PyInit__bz2@@Base+0x11958>
    1f38:	mov	x2, #0x0                   	// #0
    1f3c:	add	x4, x4, #0x4a8
    1f40:	bl	1750 <_PyArg_UnpackKeywords@plt>
    1f44:	mov	x20, x0
    1f48:	cbnz	x0, 1f8c <PyThread_free_lock@plt+0x65c>
    1f4c:	mov	x20, #0x0                   	// #0
    1f50:	ldr	x0, [sp, #152]
    1f54:	cbz	x0, 1f60 <PyThread_free_lock@plt+0x630>
    1f58:	add	x0, sp, #0x90
    1f5c:	bl	16d0 <PyBuffer_Release@plt>
    1f60:	mov	x0, x20
    1f64:	ldp	x29, x30, [sp, #16]
    1f68:	ldp	x19, x20, [sp, #32]
    1f6c:	ldp	x21, x22, [sp, #48]
    1f70:	ldp	x23, x24, [sp, #64]
    1f74:	ldp	x25, x26, [sp, #80]
    1f78:	ldr	x27, [sp, #96]
    1f7c:	add	sp, sp, #0xe0
    1f80:	ret
    1f84:	mov	x22, #0x0                   	// #0
    1f88:	b	1ef0 <PyThread_free_lock@plt+0x5c0>
    1f8c:	ldr	x0, [x20]
    1f90:	add	x23, sp, #0x90
    1f94:	mov	x1, x23
    1f98:	mov	w2, #0x0                   	// #0
    1f9c:	bl	18a0 <PyObject_GetBuffer@plt>
    1fa0:	cbnz	w0, 1f4c <PyThread_free_lock@plt+0x61c>
    1fa4:	mov	x0, x23
    1fa8:	mov	w1, #0x43                  	// #67
    1fac:	bl	1700 <PyBuffer_IsContiguous@plt>
    1fb0:	cbnz	w0, 1fd8 <PyThread_free_lock@plt+0x6a8>
    1fb4:	ldr	x3, [x20]
    1fb8:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    1fbc:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1fc0:	add	x2, x2, #0x919
    1fc4:	add	x1, x1, #0x92b
    1fc8:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1fcc:	add	x0, x0, #0x93b
    1fd0:	bl	17e0 <_PyArg_BadArgument@plt>
    1fd4:	b	1f4c <PyThread_free_lock@plt+0x61c>
    1fd8:	add	x21, x22, x21
    1fdc:	cmp	x21, #0x1
    1fe0:	b.ne	203c <PyThread_free_lock@plt+0x70c>  // b.any
    1fe4:	mov	x21, #0xffffffffffffffff    	// #-1
    1fe8:	ldr	x0, [x19, #144]
    1fec:	mov	w1, #0x0                   	// #0
    1ff0:	bl	1740 <PyThread_acquire_lock@plt>
    1ff4:	cbnz	w0, 2014 <PyThread_free_lock@plt+0x6e4>
    1ff8:	bl	18b0 <PyEval_SaveThread@plt>
    1ffc:	mov	x20, x0
    2000:	ldr	x0, [x19, #144]
    2004:	mov	w1, #0x1                   	// #1
    2008:	bl	1740 <PyThread_acquire_lock@plt>
    200c:	mov	x0, x20
    2010:	bl	16b0 <PyEval_RestoreThread@plt>
    2014:	ldrb	w23, [x19, #96]
    2018:	cbz	w23, 20b0 <PyThread_free_lock@plt+0x780>
    201c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2020:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2024:	add	x1, x1, #0x946
    2028:	ldr	x0, [x0, #4056]
    202c:	ldr	x0, [x0]
    2030:	bl	1760 <PyErr_SetString@plt>
    2034:	mov	x20, #0x0                   	// #0
    2038:	b	210c <PyThread_free_lock@plt+0x7dc>
    203c:	ldr	x0, [x20, #8]
    2040:	adrp	x1, 13000 <PyInit__bz2@@Base+0x10958>
    2044:	ldr	x1, [x1, #3984]
    2048:	ldr	x0, [x0, #8]
    204c:	cmp	x0, x1
    2050:	b.ne	2070 <PyThread_free_lock@plt+0x740>  // b.any
    2054:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2058:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    205c:	add	x1, x1, #0x889
    2060:	ldr	x0, [x0, #4024]
    2064:	ldr	x0, [x0]
    2068:	bl	1760 <PyErr_SetString@plt>
    206c:	b	1f4c <PyThread_free_lock@plt+0x61c>
    2070:	bl	18d0 <PyType_IsSubtype@plt>
    2074:	cbnz	w0, 2054 <PyThread_free_lock@plt+0x724>
    2078:	ldr	x0, [x20, #8]
    207c:	bl	18f0 <PyNumber_Index@plt>
    2080:	mov	x20, x0
    2084:	cbnz	x0, 2094 <PyThread_free_lock@plt+0x764>
    2088:	bl	1830 <PyErr_Occurred@plt>
    208c:	cbz	x0, 1fe4 <PyThread_free_lock@plt+0x6b4>
    2090:	b	1f4c <PyThread_free_lock@plt+0x61c>
    2094:	bl	17d0 <PyLong_AsSsize_t@plt>
    2098:	mov	x21, x0
    209c:	mov	x0, x20
    20a0:	bl	1cbc <PyThread_free_lock@plt+0x38c>
    20a4:	cmn	x21, #0x1
    20a8:	b.ne	1fe8 <PyThread_free_lock@plt+0x6b8>  // b.any
    20ac:	b	2088 <PyThread_free_lock@plt+0x758>
    20b0:	ldr	x1, [x19, #16]
    20b4:	ldr	x24, [sp, #144]
    20b8:	ldr	x25, [sp, #160]
    20bc:	cbz	x1, 2248 <PyThread_free_lock@plt+0x918>
    20c0:	ldp	x0, x3, [x19, #120]
    20c4:	ldr	x2, [x19, #136]
    20c8:	add	x4, x1, x2
    20cc:	add	x23, x0, x3
    20d0:	sub	x23, x23, x4
    20d4:	sub	x4, x3, x2
    20d8:	cmp	x25, x4
    20dc:	b.ls	2230 <PyThread_free_lock@plt+0x900>  // b.plast
    20e0:	add	x3, x25, x3
    20e4:	sub	x22, x1, x0
    20e8:	sub	x23, x3, x23
    20ec:	mov	x1, x23
    20f0:	bl	1790 <PyMem_Realloc@plt>
    20f4:	mov	x20, x0
    20f8:	cbnz	x0, 2118 <PyThread_free_lock@plt+0x7e8>
    20fc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2100:	ldr	x0, [x0, #4008]
    2104:	ldr	x0, [x0]
    2108:	bl	17a0 <PyErr_SetNone@plt>
    210c:	ldr	x0, [x19, #144]
    2110:	bl	1890 <PyThread_release_lock@plt>
    2114:	b	1f50 <PyThread_free_lock@plt+0x620>
    2118:	add	x1, x0, x22
    211c:	str	x1, [x19, #16]
    2120:	stp	x0, x23, [x19, #120]
    2124:	mov	x2, x25
    2128:	ldr	x3, [x19, #16]
    212c:	mov	x1, x24
    2130:	ldr	x0, [x19, #136]
    2134:	mov	w23, #0x1                   	// #1
    2138:	add	x0, x3, x0
    213c:	bl	1680 <memcpy@plt>
    2140:	ldr	x0, [x19, #136]
    2144:	add	x25, x0, x25
    2148:	str	x25, [x19, #136]
    214c:	mov	x0, #0x1fff                	// #8191
    2150:	add	x22, x19, #0x10
    2154:	cmp	x21, x0
    2158:	b.ls	2254 <PyThread_free_lock@plt+0x924>  // b.plast
    215c:	mov	x1, #0x2000                	// #8192
    2160:	mov	x0, #0x0                   	// #0
    2164:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2168:	str	x0, [sp, #120]
    216c:	ldr	x0, [sp, #120]
    2170:	cbz	x0, 2228 <PyThread_free_lock@plt+0x8f8>
    2174:	add	x24, sp, #0x78
    2178:	add	x0, x0, #0x20
    217c:	mov	x20, #0x0                   	// #0
    2180:	mov	x25, #0xffffffff            	// #4294967295
    2184:	str	x0, [x22, #24]
    2188:	ldr	x0, [sp, #120]
    218c:	ldr	x0, [x0, #16]
    2190:	sub	x20, x0, x20
    2194:	ldr	x0, [x19, #136]
    2198:	cmp	x20, x25
    219c:	csel	x20, x20, x25, ls  // ls = plast
    21a0:	str	w20, [x22, #32]
    21a4:	cmp	x0, x25
    21a8:	csel	x1, x0, x25, ls  // ls = plast
    21ac:	str	w1, [x22, #8]
    21b0:	sub	x0, x0, x1
    21b4:	str	x0, [x19, #136]
    21b8:	bl	18b0 <PyEval_SaveThread@plt>
    21bc:	mov	x27, x0
    21c0:	mov	x0, x22
    21c4:	bl	1880 <BZ2_bzDecompress@plt>
    21c8:	ldr	x20, [sp, #120]
    21cc:	mov	w26, w0
    21d0:	ldr	w1, [x22, #8]
    21d4:	add	x0, x20, #0x20
    21d8:	ldr	x20, [x22, #24]
    21dc:	sub	x20, x20, x0
    21e0:	ldr	x0, [x19, #136]
    21e4:	add	x0, x0, x1
    21e8:	str	x0, [x19, #136]
    21ec:	mov	x0, x27
    21f0:	bl	16b0 <PyEval_RestoreThread@plt>
    21f4:	mov	w0, w26
    21f8:	bl	1a14 <PyThread_free_lock@plt+0xe4>
    21fc:	cbnz	w0, 22a4 <PyThread_free_lock@plt+0x974>
    2200:	ldr	x0, [sp, #120]
    2204:	cmp	w26, #0x4
    2208:	ldr	x0, [x0, #16]
    220c:	b.ne	225c <PyThread_free_lock@plt+0x92c>  // b.any
    2210:	mov	w1, #0x1                   	// #1
    2214:	strb	w1, [x19, #96]
    2218:	cmp	x20, x0
    221c:	b.ne	22b0 <PyThread_free_lock@plt+0x980>  // b.any
    2220:	ldr	x20, [sp, #120]
    2224:	cbnz	x20, 22c8 <PyThread_free_lock@plt+0x998>
    2228:	str	xzr, [x19, #16]
    222c:	b	2034 <PyThread_free_lock@plt+0x704>
    2230:	cmp	x25, x23
    2234:	b.ls	2124 <PyThread_free_lock@plt+0x7f4>  // b.plast
    2238:	bl	1690 <memmove@plt>
    223c:	ldr	x0, [x19, #120]
    2240:	str	x0, [x19, #16]
    2244:	b	2124 <PyThread_free_lock@plt+0x7f4>
    2248:	str	x24, [x19, #16]
    224c:	str	x25, [x19, #136]
    2250:	b	214c <PyThread_free_lock@plt+0x81c>
    2254:	mov	x1, x21
    2258:	b	2160 <PyThread_free_lock@plt+0x830>
    225c:	ldr	x1, [x19, #136]
    2260:	cbz	x1, 2218 <PyThread_free_lock@plt+0x8e8>
    2264:	ldr	w1, [x22, #32]
    2268:	cbnz	w1, 2188 <PyThread_free_lock@plt+0x858>
    226c:	cmp	x21, x20
    2270:	b.eq	2218 <PyThread_free_lock@plt+0x8e8>  // b.none
    2274:	cmp	x20, x0
    2278:	b.eq	2290 <PyThread_free_lock@plt+0x960>  // b.none
    227c:	ldr	x0, [sp, #120]
    2280:	add	x0, x0, #0x20
    2284:	add	x0, x0, x20
    2288:	str	x0, [x22, #24]
    228c:	b	2188 <PyThread_free_lock@plt+0x858>
    2290:	mov	x1, x21
    2294:	mov	x0, x24
    2298:	bl	1e68 <PyThread_free_lock@plt+0x538>
    229c:	cmn	w0, #0x1
    22a0:	b.ne	227c <PyThread_free_lock@plt+0x94c>  // b.any
    22a4:	ldr	x0, [sp, #120]
    22a8:	bl	1cd4 <PyThread_free_lock@plt+0x3a4>
    22ac:	b	2228 <PyThread_free_lock@plt+0x8f8>
    22b0:	mov	x1, x20
    22b4:	add	x0, sp, #0x78
    22b8:	bl	16a0 <_PyBytes_Resize@plt>
    22bc:	cmn	w0, #0x1
    22c0:	b.ne	2220 <PyThread_free_lock@plt+0x8f0>  // b.any
    22c4:	b	22a4 <PyThread_free_lock@plt+0x974>
    22c8:	ldrb	w0, [x19, #96]
    22cc:	ldr	x1, [x19, #136]
    22d0:	cbz	w0, 2308 <PyThread_free_lock@plt+0x9d8>
    22d4:	strb	wzr, [x19, #112]
    22d8:	cbz	x1, 210c <PyThread_free_lock@plt+0x7dc>
    22dc:	ldr	x0, [x19, #16]
    22e0:	ldr	x21, [x19, #104]
    22e4:	bl	1710 <PyBytes_FromStringAndSize@plt>
    22e8:	str	x0, [x19, #104]
    22ec:	mov	x0, x21
    22f0:	bl	1cd4 <PyThread_free_lock@plt+0x3a4>
    22f4:	ldr	x0, [x19, #104]
    22f8:	cbnz	x0, 210c <PyThread_free_lock@plt+0x7dc>
    22fc:	mov	x0, x20
    2300:	bl	1cd4 <PyThread_free_lock@plt+0x3a4>
    2304:	b	2034 <PyThread_free_lock@plt+0x704>
    2308:	cbnz	x1, 231c <PyThread_free_lock@plt+0x9ec>
    230c:	mov	w0, #0x1                   	// #1
    2310:	str	xzr, [x19, #16]
    2314:	strb	w0, [x19, #112]
    2318:	b	210c <PyThread_free_lock@plt+0x7dc>
    231c:	strb	wzr, [x19, #112]
    2320:	cbnz	w23, 210c <PyThread_free_lock@plt+0x7dc>
    2324:	ldr	x0, [x19, #120]
    2328:	cbz	x0, 2340 <PyThread_free_lock@plt+0xa10>
    232c:	ldr	x2, [x19, #128]
    2330:	cmp	x2, x1
    2334:	b.cs	236c <PyThread_free_lock@plt+0xa3c>  // b.hs, b.nlast
    2338:	bl	16c0 <PyMem_Free@plt>
    233c:	str	xzr, [x19, #120]
    2340:	ldr	x0, [x19, #136]
    2344:	bl	1920 <PyMem_Malloc@plt>
    2348:	str	x0, [x19, #120]
    234c:	cbnz	x0, 2364 <PyThread_free_lock@plt+0xa34>
    2350:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2354:	ldr	x0, [x0, #4008]
    2358:	ldr	x0, [x0]
    235c:	bl	17a0 <PyErr_SetNone@plt>
    2360:	b	22fc <PyThread_free_lock@plt+0x9cc>
    2364:	ldr	x0, [x19, #136]
    2368:	str	x0, [x19, #128]
    236c:	ldr	x1, [x19, #16]
    2370:	ldr	x0, [x19, #120]
    2374:	ldr	x2, [x19, #136]
    2378:	bl	1680 <memcpy@plt>
    237c:	ldr	x0, [x19, #120]
    2380:	str	x0, [x19, #16]
    2384:	b	210c <PyThread_free_lock@plt+0x7dc>
    2388:	stp	x29, x30, [sp, #-112]!
    238c:	mov	x29, sp
    2390:	stp	x19, x20, [sp, #16]
    2394:	mov	x19, x0
    2398:	mov	x20, x1
    239c:	mov	x0, #0x0                   	// #0
    23a0:	mov	x1, #0x2000                	// #8192
    23a4:	stp	x21, x22, [sp, #32]
    23a8:	mov	x22, x2
    23ac:	mov	w21, w3
    23b0:	stp	x23, x24, [sp, #48]
    23b4:	stp	x25, x26, [sp, #64]
    23b8:	stp	x27, x28, [sp, #80]
    23bc:	bl	1710 <PyBytes_FromStringAndSize@plt>
    23c0:	str	x0, [sp, #104]
    23c4:	cbz	x0, 24b4 <PyThread_free_lock@plt+0xb84>
    23c8:	add	x0, x0, #0x20
    23cc:	add	x23, sp, #0x68
    23d0:	add	x24, x19, #0x10
    23d4:	mov	x25, #0xffffffff            	// #4294967295
    23d8:	str	x20, [x19, #16]
    23dc:	mov	x20, #0x0                   	// #0
    23e0:	str	wzr, [x19, #24]
    23e4:	str	x0, [x19, #40]
    23e8:	mov	w0, #0x2000                	// #8192
    23ec:	str	w0, [x19, #48]
    23f0:	ldr	w0, [x19, #24]
    23f4:	cbnz	w0, 240c <PyThread_free_lock@plt+0xadc>
    23f8:	cbz	x22, 24f0 <PyThread_free_lock@plt+0xbc0>
    23fc:	cmp	x22, x25
    2400:	csel	x0, x22, x25, ls  // ls = plast
    2404:	str	w0, [x19, #24]
    2408:	sub	x22, x22, x0
    240c:	ldr	w0, [x19, #48]
    2410:	cbnz	w0, 2458 <PyThread_free_lock@plt+0xb28>
    2414:	ldr	x0, [sp, #104]
    2418:	ldr	x0, [x0, #16]
    241c:	subs	x0, x0, x20
    2420:	b.ne	244c <PyThread_free_lock@plt+0xb1c>  // b.any
    2424:	mov	x0, x23
    2428:	mov	x1, #0xffffffffffffffff    	// #-1
    242c:	bl	1e68 <PyThread_free_lock@plt+0x538>
    2430:	tbnz	w0, #31, 24e0 <PyThread_free_lock@plt+0xbb0>
    2434:	ldr	x1, [sp, #104]
    2438:	add	x0, x1, #0x20
    243c:	add	x0, x0, x20
    2440:	str	x0, [x19, #40]
    2444:	ldr	x0, [x1, #16]
    2448:	sub	x0, x0, x20
    244c:	cmp	x0, x25
    2450:	csel	x0, x0, x25, ls  // ls = plast
    2454:	str	w0, [x19, #48]
    2458:	bl	18b0 <PyEval_SaveThread@plt>
    245c:	mov	x27, x0
    2460:	mov	w1, w21
    2464:	mov	x0, x24
    2468:	ldr	x28, [x19, #40]
    246c:	bl	1850 <BZ2_bzCompress@plt>
    2470:	mov	w26, w0
    2474:	ldr	x0, [x19, #40]
    2478:	sub	x0, x0, x28
    247c:	add	x20, x20, x0
    2480:	mov	x0, x27
    2484:	bl	16b0 <PyEval_RestoreThread@plt>
    2488:	mov	w0, w26
    248c:	bl	1a14 <PyThread_free_lock@plt+0xe4>
    2490:	cbnz	w0, 24e0 <PyThread_free_lock@plt+0xbb0>
    2494:	cmp	w21, #0x2
    2498:	ccmp	w26, #0x4, #0x0, eq  // eq = none
    249c:	b.ne	23f0 <PyThread_free_lock@plt+0xac0>  // b.any
    24a0:	ldr	x0, [sp, #104]
    24a4:	ldr	x0, [x0, #16]
    24a8:	cmp	x0, x20
    24ac:	b.ne	24d0 <PyThread_free_lock@plt+0xba0>  // b.any
    24b0:	ldr	x0, [sp, #104]
    24b4:	ldp	x19, x20, [sp, #16]
    24b8:	ldp	x21, x22, [sp, #32]
    24bc:	ldp	x23, x24, [sp, #48]
    24c0:	ldp	x25, x26, [sp, #64]
    24c4:	ldp	x27, x28, [sp, #80]
    24c8:	ldp	x29, x30, [sp], #112
    24cc:	ret
    24d0:	mov	x1, x20
    24d4:	add	x0, sp, #0x68
    24d8:	bl	16a0 <_PyBytes_Resize@plt>
    24dc:	tbz	w0, #31, 24b0 <PyThread_free_lock@plt+0xb80>
    24e0:	ldr	x0, [sp, #104]
    24e4:	bl	1cd4 <PyThread_free_lock@plt+0x3a4>
    24e8:	mov	x0, #0x0                   	// #0
    24ec:	b	24b4 <PyThread_free_lock@plt+0xb84>
    24f0:	cbnz	w21, 240c <PyThread_free_lock@plt+0xadc>
    24f4:	b	24a0 <PyThread_free_lock@plt+0xb70>
    24f8:	stp	x29, x30, [sp, #-32]!
    24fc:	mov	w1, #0x0                   	// #0
    2500:	mov	x29, sp
    2504:	stp	x19, x20, [sp, #16]
    2508:	mov	x19, x0
    250c:	ldr	x0, [x0, #104]
    2510:	bl	1740 <PyThread_acquire_lock@plt>
    2514:	cbnz	w0, 2534 <PyThread_free_lock@plt+0xc04>
    2518:	bl	18b0 <PyEval_SaveThread@plt>
    251c:	mov	x20, x0
    2520:	ldr	x0, [x19, #104]
    2524:	mov	w1, #0x1                   	// #1
    2528:	bl	1740 <PyThread_acquire_lock@plt>
    252c:	mov	x0, x20
    2530:	bl	16b0 <PyEval_RestoreThread@plt>
    2534:	ldr	w0, [x19, #96]
    2538:	cbz	w0, 2570 <PyThread_free_lock@plt+0xc40>
    253c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2540:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2544:	mov	x20, #0x0                   	// #0
    2548:	add	x1, x1, #0x964
    254c:	ldr	x0, [x0, #4016]
    2550:	ldr	x0, [x0]
    2554:	bl	1760 <PyErr_SetString@plt>
    2558:	ldr	x0, [x19, #104]
    255c:	bl	1890 <PyThread_release_lock@plt>
    2560:	mov	x0, x20
    2564:	ldp	x19, x20, [sp, #16]
    2568:	ldp	x29, x30, [sp], #32
    256c:	ret
    2570:	mov	w0, #0x1                   	// #1
    2574:	str	w0, [x19, #96]
    2578:	mov	w3, #0x2                   	// #2
    257c:	mov	x0, x19
    2580:	mov	x2, #0x0                   	// #0
    2584:	mov	x1, #0x0                   	// #0
    2588:	bl	2388 <PyThread_free_lock@plt+0xa58>
    258c:	mov	x20, x0
    2590:	b	2558 <PyThread_free_lock@plt+0xc28>
    2594:	stp	x29, x30, [sp, #-128]!
    2598:	mov	w2, #0x0                   	// #0
    259c:	mov	x29, sp
    25a0:	str	x21, [sp, #32]
    25a4:	add	x21, sp, #0x30
    25a8:	stp	x19, x20, [sp, #16]
    25ac:	mov	x19, x0
    25b0:	mov	x20, x1
    25b4:	mov	x0, x1
    25b8:	mov	x1, x21
    25bc:	stp	xzr, xzr, [sp, #48]
    25c0:	stp	xzr, xzr, [sp, #64]
    25c4:	stp	xzr, xzr, [sp, #80]
    25c8:	stp	xzr, xzr, [sp, #96]
    25cc:	stp	xzr, xzr, [sp, #112]
    25d0:	bl	18a0 <PyObject_GetBuffer@plt>
    25d4:	cbnz	w0, 2608 <PyThread_free_lock@plt+0xcd8>
    25d8:	mov	x0, x21
    25dc:	mov	w1, #0x43                  	// #67
    25e0:	bl	1700 <PyBuffer_IsContiguous@plt>
    25e4:	cbnz	w0, 2610 <PyThread_free_lock@plt+0xce0>
    25e8:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    25ec:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    25f0:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    25f4:	mov	x3, x20
    25f8:	add	x2, x2, #0x919
    25fc:	add	x1, x1, #0x97d
    2600:	add	x0, x0, #0x93d
    2604:	bl	17e0 <_PyArg_BadArgument@plt>
    2608:	mov	x20, #0x0                   	// #0
    260c:	b	2668 <PyThread_free_lock@plt+0xd38>
    2610:	ldr	x0, [x19, #104]
    2614:	mov	w1, #0x0                   	// #0
    2618:	bl	1740 <PyThread_acquire_lock@plt>
    261c:	cbnz	w0, 263c <PyThread_free_lock@plt+0xd0c>
    2620:	bl	18b0 <PyEval_SaveThread@plt>
    2624:	mov	x20, x0
    2628:	ldr	x0, [x19, #104]
    262c:	mov	w1, #0x1                   	// #1
    2630:	bl	1740 <PyThread_acquire_lock@plt>
    2634:	mov	x0, x20
    2638:	bl	16b0 <PyEval_RestoreThread@plt>
    263c:	ldr	w0, [x19, #96]
    2640:	cbz	w0, 268c <PyThread_free_lock@plt+0xd5c>
    2644:	adrp	x0, 13000 <PyInit__bz2@@Base+0x10958>
    2648:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    264c:	mov	x20, #0x0                   	// #0
    2650:	add	x1, x1, #0x986
    2654:	ldr	x0, [x0, #4016]
    2658:	ldr	x0, [x0]
    265c:	bl	1760 <PyErr_SetString@plt>
    2660:	ldr	x0, [x19, #104]
    2664:	bl	1890 <PyThread_release_lock@plt>
    2668:	ldr	x0, [sp, #56]
    266c:	cbz	x0, 2678 <PyThread_free_lock@plt+0xd48>
    2670:	mov	x0, x21
    2674:	bl	16d0 <PyBuffer_Release@plt>
    2678:	mov	x0, x20
    267c:	ldp	x19, x20, [sp, #16]
    2680:	ldr	x21, [sp, #32]
    2684:	ldp	x29, x30, [sp], #128
    2688:	ret
    268c:	ldr	x1, [sp, #48]
    2690:	mov	x0, x19
    2694:	ldr	x2, [sp, #64]
    2698:	mov	w3, #0x0                   	// #0
    269c:	bl	2388 <PyThread_free_lock@plt+0xa58>
    26a0:	mov	x20, x0
    26a4:	b	2660 <PyThread_free_lock@plt+0xd30>

00000000000026a8 <PyInit__bz2@@Base>:
    26a8:	stp	x29, x30, [sp, #-48]!
    26ac:	mov	x29, sp
    26b0:	stp	x19, x20, [sp, #16]
    26b4:	stp	x21, x22, [sp, #32]
    26b8:	adrp	x21, 14000 <PyInit__bz2@@Base+0x11958>
    26bc:	add	x20, x21, #0x168
    26c0:	mov	x0, x20
    26c4:	bl	17c0 <PyType_Ready@plt>
    26c8:	tbz	w0, #31, 26e4 <PyInit__bz2@@Base+0x3c>
    26cc:	mov	x19, #0x0                   	// #0
    26d0:	mov	x0, x19
    26d4:	ldp	x19, x20, [sp, #16]
    26d8:	ldp	x21, x22, [sp, #32]
    26dc:	ldp	x29, x30, [sp], #48
    26e0:	ret
    26e4:	add	x22, x20, #0x1a0
    26e8:	mov	x0, x22
    26ec:	bl	17c0 <PyType_Ready@plt>
    26f0:	tbnz	w0, #31, 26cc <PyInit__bz2@@Base+0x24>
    26f4:	adrp	x0, 14000 <PyInit__bz2@@Base+0x11958>
    26f8:	add	x0, x0, #0x4a8
    26fc:	add	x0, x0, #0x40
    2700:	mov	w1, #0x3f5                 	// #1013
    2704:	bl	1840 <PyModule_Create2@plt>
    2708:	mov	x19, x0
    270c:	cbz	x0, 26d0 <PyInit__bz2@@Base+0x28>
    2710:	ldr	x1, [x21, #360]
    2714:	mov	x2, x20
    2718:	add	x1, x1, #0x1
    271c:	str	x1, [x21, #360]
    2720:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2724:	add	x1, x1, #0x9ee
    2728:	bl	18c0 <PyModule_AddObject@plt>
    272c:	ldr	x0, [x20, #416]
    2730:	mov	x2, x22
    2734:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2738:	add	x1, x1, #0x9d9
    273c:	add	x0, x0, #0x1
    2740:	str	x0, [x20, #416]
    2744:	mov	x0, x19
    2748:	bl	18c0 <PyModule_AddObject@plt>
    274c:	b	26d0 <PyInit__bz2@@Base+0x28>

Disassembly of section .fini:

0000000000002750 <.fini>:
    2750:	stp	x29, x30, [sp, #-16]!
    2754:	mov	x29, sp
    2758:	ldp	x29, x30, [sp], #16
    275c:	ret
