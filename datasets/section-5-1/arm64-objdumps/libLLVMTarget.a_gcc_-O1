In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_gcc_-O1:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  14:	mov	x0, x19
  18:	bl	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

0000000000000028 <LLVMInitializeTarget>:
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  34:	ldp	x29, x30, [sp], #16
  38:	ret

000000000000003c <LLVMGetModuleDataLayout>:
  3c:	stp	x29, x30, [sp, #-16]!
  40:	mov	x29, sp
  44:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

0000000000000050 <LLVMSetModuleDataLayout>:
  50:	stp	x29, x30, [sp, #-16]!
  54:	mov	x29, sp
  58:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
  5c:	ldp	x29, x30, [sp], #16
  60:	ret

0000000000000064 <LLVMCreateTargetData>:
  64:	stp	x29, x30, [sp, #-48]!
  68:	mov	x29, sp
  6c:	stp	x19, x20, [sp, #16]
  70:	str	x21, [sp, #32]
  74:	mov	x20, x0
  78:	mov	x21, #0x0                   	// #0
  7c:	cbz	x0, 88 <LLVMCreateTargetData+0x24>
  80:	bl	0 <strlen>
  84:	mov	x21, x0
  88:	mov	x0, #0x1b0                 	// #432
  8c:	bl	0 <_Znwm>
  90:	mov	x19, x0
  94:	strb	wzr, [x0, #8]
  98:	strb	wzr, [x0, #9]
  9c:	strb	wzr, [x0, #16]
  a0:	strb	wzr, [x0, #17]
  a4:	add	x1, x0, #0x30
  a8:	str	x1, [x0, #32]
  ac:	str	wzr, [x0, #40]
  b0:	mov	w1, #0x8                   	// #8
  b4:	str	w1, [x0, #44]
  b8:	add	x2, x0, #0x48
  bc:	str	x2, [x0, #56]
  c0:	str	wzr, [x0, #64]
  c4:	mov	w2, #0x10                  	// #16
  c8:	str	w2, [x0, #68]
  cc:	add	x2, x0, #0xd8
  d0:	str	x2, [x0, #200]
  d4:	str	xzr, [x0, #208]
  d8:	strb	wzr, [x0, #216]
  dc:	add	x2, x0, #0xf8
  e0:	str	x2, [x0, #232]
  e4:	str	wzr, [x0, #240]
  e8:	str	w1, [x0, #244]
  ec:	str	xzr, [x0, #376]
  f0:	add	x2, x0, #0x190
  f4:	str	x2, [x0, #384]
  f8:	str	wzr, [x0, #392]
  fc:	str	w1, [x0, #396]
 100:	mov	x1, x20
 104:	mov	x2, x21
 108:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
 10c:	mov	x0, x19
 110:	ldp	x19, x20, [sp, #16]
 114:	ldr	x21, [sp, #32]
 118:	ldp	x29, x30, [sp], #48
 11c:	ret

0000000000000120 <LLVMDisposeTargetData>:
 120:	cbz	x0, 150 <LLVMDisposeTargetData+0x30>
 124:	stp	x29, x30, [sp, #-32]!
 128:	mov	x29, sp
 12c:	str	x19, [sp, #16]
 130:	mov	x19, x0
 134:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 138:	mov	x1, #0x1b0                 	// #432
 13c:	mov	x0, x19
 140:	bl	0 <_ZdlPvm>
 144:	ldr	x19, [sp, #16]
 148:	ldp	x29, x30, [sp], #32
 14c:	ret
 150:	ret

0000000000000154 <LLVMAddTargetLibraryInfo>:
 154:	stp	x29, x30, [sp, #-48]!
 158:	mov	x29, sp
 15c:	stp	x19, x20, [sp, #16]
 160:	stp	x21, x22, [sp, #32]
 164:	mov	x21, x0
 168:	mov	x19, x1
 16c:	ldr	x0, [x1]
 170:	ldr	x22, [x0, #16]
 174:	mov	x0, #0x118                 	// #280
 178:	bl	0 <_Znwm>
 17c:	mov	x20, x0
 180:	mov	x1, x21
 184:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
 188:	mov	x1, x20
 18c:	mov	x0, x19
 190:	blr	x22
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldp	x29, x30, [sp], #48
 1a0:	ret

00000000000001a4 <LLVMCopyStringRepOfTargetData>:
 1a4:	stp	x29, x30, [sp, #-80]!
 1a8:	mov	x29, sp
 1ac:	stp	x19, x20, [sp, #16]
 1b0:	add	x1, sp, #0x40
 1b4:	str	x1, [sp, #48]
 1b8:	ldr	x20, [x0, #200]
 1bc:	ldr	x19, [x0, #208]
 1c0:	cmp	x20, #0x0
 1c4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
 1c8:	b.ne	228 <LLVMCopyStringRepOfTargetData+0x84>  // b.any
 1cc:	str	x19, [sp, #40]
 1d0:	cmp	x19, #0xf
 1d4:	b.hi	234 <LLVMCopyStringRepOfTargetData+0x90>  // b.pmore
 1d8:	cmp	x19, #0x1
 1dc:	b.ne	260 <LLVMCopyStringRepOfTargetData+0xbc>  // b.any
 1e0:	ldrb	w0, [x20]
 1e4:	strb	w0, [sp, #64]
 1e8:	ldr	x0, [sp, #40]
 1ec:	str	x0, [sp, #56]
 1f0:	ldr	x1, [sp, #48]
 1f4:	strb	wzr, [x1, x0]
 1f8:	ldr	x0, [sp, #48]
 1fc:	bl	0 <strdup>
 200:	mov	x19, x0
 204:	ldr	x0, [sp, #48]
 208:	add	x1, sp, #0x40
 20c:	cmp	x0, x1
 210:	b.eq	218 <LLVMCopyStringRepOfTargetData+0x74>  // b.none
 214:	bl	0 <_ZdlPv>
 218:	mov	x0, x19
 21c:	ldp	x19, x20, [sp, #16]
 220:	ldp	x29, x30, [sp], #80
 224:	ret
 228:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <_ZSt19__throw_logic_errorPKc>
 234:	mov	x2, #0x0                   	// #0
 238:	add	x1, sp, #0x28
 23c:	add	x0, sp, #0x30
 240:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 244:	str	x0, [sp, #48]
 248:	ldr	x1, [sp, #40]
 24c:	str	x1, [sp, #64]
 250:	mov	x2, x19
 254:	mov	x1, x20
 258:	bl	0 <memcpy>
 25c:	b	1e8 <LLVMCopyStringRepOfTargetData+0x44>
 260:	cbz	x19, 1e8 <LLVMCopyStringRepOfTargetData+0x44>
 264:	add	x0, sp, #0x40
 268:	b	250 <LLVMCopyStringRepOfTargetData+0xac>

000000000000026c <LLVMByteOrder>:
 26c:	ldrb	w0, [x0]
 270:	eor	w0, w0, #0x1
 274:	ret

0000000000000278 <LLVMPointerSize>:
 278:	stp	x29, x30, [sp, #-16]!
 27c:	mov	x29, sp
 280:	mov	w1, #0x0                   	// #0
 284:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 288:	ldp	x29, x30, [sp], #16
 28c:	ret

0000000000000290 <LLVMPointerSizeForAS>:
 290:	stp	x29, x30, [sp, #-16]!
 294:	mov	x29, sp
 298:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 29c:	ldp	x29, x30, [sp], #16
 2a0:	ret

00000000000002a4 <LLVMIntPtrType>:
 2a4:	stp	x29, x30, [sp, #-32]!
 2a8:	mov	x29, sp
 2ac:	str	x19, [sp, #16]
 2b0:	mov	x19, x0
 2b4:	bl	0 <LLVMGetGlobalContext>
 2b8:	mov	w2, #0x0                   	// #0
 2bc:	mov	x1, x0
 2c0:	mov	x0, x19
 2c4:	bl	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 2c8:	ldr	x19, [sp, #16]
 2cc:	ldp	x29, x30, [sp], #32
 2d0:	ret

00000000000002d4 <LLVMIntPtrTypeForAS>:
 2d4:	stp	x29, x30, [sp, #-32]!
 2d8:	mov	x29, sp
 2dc:	stp	x19, x20, [sp, #16]
 2e0:	mov	x19, x0
 2e4:	mov	w20, w1
 2e8:	bl	0 <LLVMGetGlobalContext>
 2ec:	mov	w2, w20
 2f0:	mov	x1, x0
 2f4:	mov	x0, x19
 2f8:	bl	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 2fc:	ldp	x19, x20, [sp, #16]
 300:	ldp	x29, x30, [sp], #32
 304:	ret

0000000000000308 <LLVMIntPtrTypeInContext>:
 308:	stp	x29, x30, [sp, #-16]!
 30c:	mov	x29, sp
 310:	mov	x3, x0
 314:	mov	x0, x1
 318:	mov	w2, #0x0                   	// #0
 31c:	mov	x1, x3
 320:	bl	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 324:	ldp	x29, x30, [sp], #16
 328:	ret

000000000000032c <LLVMIntPtrTypeForASInContext>:
 32c:	stp	x29, x30, [sp, #-16]!
 330:	mov	x29, sp
 334:	mov	x3, x0
 338:	mov	x0, x1
 33c:	mov	x1, x3
 340:	bl	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 344:	ldp	x29, x30, [sp], #16
 348:	ret

000000000000034c <LLVMSizeOfTypeInBits>:
 34c:	stp	x29, x30, [sp, #-64]!
 350:	mov	x29, sp
 354:	stp	x19, x20, [sp, #16]
 358:	stp	x21, x22, [sp, #32]
 35c:	mov	x21, x0
 360:	mov	x20, x1
 364:	ldrb	w1, [x1, #8]
 368:	sub	w0, w1, #0x1
 36c:	and	w0, w0, #0xff
 370:	and	w2, w1, #0xfffffffd
 374:	and	w2, w2, #0xff
 378:	cmp	w0, #0x5
 37c:	ccmp	w1, #0xf, #0x4, hi  // hi = pmore
 380:	ccmp	w2, #0x9, #0x4, ne  // ne = any
 384:	b.ne	3c8 <LLVMSizeOfTypeInBits+0x7c>  // b.any
 388:	ldrb	w2, [x20, #8]
 38c:	cmp	w2, #0x9
 390:	b.eq	5dc <LLVMSizeOfTypeInBits+0x290>  // b.none
 394:	b.hi	45c <LLVMSizeOfTypeInBits+0x110>  // b.pmore
 398:	cmp	w2, #0x4
 39c:	b.eq	5e4 <LLVMSizeOfTypeInBits+0x298>  // b.none
 3a0:	b.ls	410 <LLVMSizeOfTypeInBits+0xc4>  // b.plast
 3a4:	cmp	w2, #0x6
 3a8:	b.ls	5f4 <LLVMSizeOfTypeInBits+0x2a8>  // b.plast
 3ac:	cmp	w2, #0x7
 3b0:	b.ne	440 <LLVMSizeOfTypeInBits+0xf4>  // b.any
 3b4:	mov	w1, #0x0                   	// #0
 3b8:	mov	x0, x21
 3bc:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 3c0:	lsl	w0, w0, #3
 3c4:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 3c8:	sub	w0, w1, #0xd
 3cc:	cmp	w0, #0x1
 3d0:	ccmp	w1, #0x10, #0x4, hi  // hi = pmore
 3d4:	b.ne	3ec <LLVMSizeOfTypeInBits+0xa0>  // b.any
 3d8:	mov	x1, #0x0                   	// #0
 3dc:	mov	x0, x20
 3e0:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 3e4:	and	w0, w0, #0xff
 3e8:	cbnz	w0, 388 <LLVMSizeOfTypeInBits+0x3c>
 3ec:	str	x23, [sp, #48]
 3f0:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x271                 	// #625
 3fc:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 400:	add	x1, x1, #0x0
 404:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 408:	add	x0, x0, #0x0
 40c:	bl	0 <__assert_fail>
 410:	cmp	w2, #0x2
 414:	b.eq	5ec <LLVMSizeOfTypeInBits+0x2a0>  // b.none
 418:	mov	x0, #0x40                  	// #64
 41c:	cmp	w2, #0x3
 420:	b.ne	434 <LLVMSizeOfTypeInBits+0xe8>  // b.any
 424:	ldp	x19, x20, [sp, #16]
 428:	ldp	x21, x22, [sp, #32]
 42c:	ldp	x29, x30, [sp], #64
 430:	ret
 434:	mov	x0, #0x10                  	// #16
 438:	cmp	w2, #0x1
 43c:	b.eq	424 <LLVMSizeOfTypeInBits+0xd8>  // b.none
 440:	str	x23, [sp, #48]
 444:	mov	w2, #0x298                 	// #664
 448:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 44c:	add	x1, x1, #0x0
 450:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 454:	add	x0, x0, #0x0
 458:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 45c:	cmp	w2, #0xe
 460:	b.eq	4ec <LLVMSizeOfTypeInBits+0x1a0>  // b.none
 464:	b.ls	4ac <LLVMSizeOfTypeInBits+0x160>  // b.plast
 468:	cmp	w2, #0xf
 46c:	b.eq	4d4 <LLVMSizeOfTypeInBits+0x188>  // b.none
 470:	cmp	w2, #0x10
 474:	b.ne	440 <LLVMSizeOfTypeInBits+0xf4>  // b.any
 478:	ldr	x2, [x20, #32]
 47c:	mov	x0, #0xffffffff            	// #4294967295
 480:	cmp	x2, x0
 484:	b.hi	594 <LLVMSizeOfTypeInBits+0x248>  // b.pmore
 488:	ldrb	w22, [x20, #40]
 48c:	and	x19, x2, #0xffffffff
 490:	ldr	x1, [x20, #24]
 494:	mov	x0, x21
 498:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 49c:	tst	w1, #0xff
 4a0:	b.ne	5b8 <LLVMSizeOfTypeInBits+0x26c>  // b.any
 4a4:	mul	x0, x19, x0
 4a8:	b	540 <LLVMSizeOfTypeInBits+0x1f4>
 4ac:	cmp	w2, #0xb
 4b0:	b.eq	588 <LLVMSizeOfTypeInBits+0x23c>  // b.none
 4b4:	cmp	w2, #0xd
 4b8:	b.ne	440 <LLVMSizeOfTypeInBits+0xf4>  // b.any
 4bc:	mov	x1, x20
 4c0:	mov	x0, x21
 4c4:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 4c8:	ldr	x0, [x0]
 4cc:	lsl	x0, x0, #3
 4d0:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 4d4:	ldr	w1, [x20, #8]
 4d8:	lsr	w1, w1, #8
 4dc:	mov	x0, x21
 4e0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 4e4:	lsl	w0, w0, #3
 4e8:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 4ec:	str	x23, [sp, #48]
 4f0:	ldr	x23, [x20, #32]
 4f4:	ldr	x20, [x20, #24]
 4f8:	mov	x1, x20
 4fc:	mov	x0, x21
 500:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 504:	add	x19, x0, #0x7
 508:	lsr	x19, x19, #3
 50c:	and	w22, w1, #0xff
 510:	mov	x1, x20
 514:	mov	x0, x21
 518:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 51c:	mov	w1, w0
 520:	cbz	w0, 568 <LLVMSizeOfTypeInBits+0x21c>
 524:	sub	x0, x19, #0x1
 528:	add	x0, x0, x1
 52c:	udiv	x0, x0, x1
 530:	mul	x0, x0, x1
 534:	mul	x0, x0, x23
 538:	lsl	x0, x0, #3
 53c:	ldr	x23, [sp, #48]
 540:	cbz	w22, 424 <LLVMSizeOfTypeInBits+0xd8>
 544:	str	x23, [sp, #48]
 548:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 54c:	add	x3, x3, #0x0
 550:	mov	w2, #0x7d                  	// #125
 554:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 558:	add	x1, x1, #0x0
 55c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 560:	add	x0, x0, #0x0
 564:	bl	0 <__assert_fail>
 568:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 56c:	add	x3, x3, #0x0
 570:	mov	w2, #0xc7                  	// #199
 574:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 578:	add	x1, x1, #0x0
 57c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 580:	add	x0, x0, #0x0
 584:	bl	0 <__assert_fail>
 588:	ldr	w0, [x20, #8]
 58c:	lsr	w0, w0, #8
 590:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 594:	str	x23, [sp, #48]
 598:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 59c:	add	x3, x3, #0x0
 5a0:	mov	w2, #0x220                 	// #544
 5a4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 5a8:	add	x1, x1, #0x0
 5ac:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 5b0:	add	x0, x0, #0x0
 5b4:	bl	0 <__assert_fail>
 5b8:	str	x23, [sp, #48]
 5bc:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 5c0:	add	x3, x3, #0x0
 5c4:	mov	w2, #0x7d                  	// #125
 5c8:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 5cc:	add	x1, x1, #0x0
 5d0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 5d4:	add	x0, x0, #0x0
 5d8:	bl	0 <__assert_fail>
 5dc:	mov	x0, #0x40                  	// #64
 5e0:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 5e4:	mov	x0, #0x50                  	// #80
 5e8:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 5ec:	mov	x0, #0x20                  	// #32
 5f0:	b	424 <LLVMSizeOfTypeInBits+0xd8>
 5f4:	mov	x0, #0x80                  	// #128
 5f8:	b	424 <LLVMSizeOfTypeInBits+0xd8>

00000000000005fc <LLVMStoreSizeOfType>:
 5fc:	stp	x29, x30, [sp, #-64]!
 600:	mov	x29, sp
 604:	stp	x19, x20, [sp, #16]
 608:	stp	x21, x22, [sp, #32]
 60c:	mov	x21, x0
 610:	mov	x20, x1
 614:	ldrb	w1, [x1, #8]
 618:	sub	w0, w1, #0x1
 61c:	and	w0, w0, #0xff
 620:	and	w2, w1, #0xfffffffd
 624:	and	w2, w2, #0xff
 628:	cmp	w0, #0x5
 62c:	ccmp	w1, #0xf, #0x4, hi  // hi = pmore
 630:	ccmp	w2, #0x9, #0x4, ne  // ne = any
 634:	b.ne	678 <LLVMStoreSizeOfType+0x7c>  // b.any
 638:	ldrb	w2, [x20, #8]
 63c:	cmp	w2, #0x9
 640:	b.eq	89c <LLVMStoreSizeOfType+0x2a0>  // b.none
 644:	b.hi	714 <LLVMStoreSizeOfType+0x118>  // b.pmore
 648:	cmp	w2, #0x4
 64c:	b.eq	8a4 <LLVMStoreSizeOfType+0x2a8>  // b.none
 650:	b.ls	6c0 <LLVMStoreSizeOfType+0xc4>  // b.plast
 654:	cmp	w2, #0x6
 658:	b.ls	8b4 <LLVMStoreSizeOfType+0x2b8>  // b.plast
 65c:	cmp	w2, #0x7
 660:	b.ne	6f8 <LLVMStoreSizeOfType+0xfc>  // b.any
 664:	mov	w1, #0x0                   	// #0
 668:	mov	x0, x21
 66c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 670:	lsl	w0, w0, #3
 674:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 678:	sub	w0, w1, #0xd
 67c:	cmp	w0, #0x1
 680:	ccmp	w1, #0x10, #0x4, hi  // hi = pmore
 684:	b.ne	69c <LLVMStoreSizeOfType+0xa0>  // b.any
 688:	mov	x1, #0x0                   	// #0
 68c:	mov	x0, x20
 690:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 694:	and	w0, w0, #0xff
 698:	cbnz	w0, 638 <LLVMStoreSizeOfType+0x3c>
 69c:	str	x23, [sp, #48]
 6a0:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 6a4:	add	x3, x3, #0x0
 6a8:	mov	w2, #0x271                 	// #625
 6ac:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 6b0:	add	x1, x1, #0x0
 6b4:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 6b8:	add	x0, x0, #0x0
 6bc:	bl	0 <__assert_fail>
 6c0:	cmp	w2, #0x2
 6c4:	b.eq	8ac <LLVMStoreSizeOfType+0x2b0>  // b.none
 6c8:	mov	x0, #0x40                  	// #64
 6cc:	cmp	w2, #0x3
 6d0:	b.ne	6ec <LLVMStoreSizeOfType+0xf0>  // b.any
 6d4:	add	x0, x0, #0x7
 6d8:	lsr	x0, x0, #3
 6dc:	ldp	x19, x20, [sp, #16]
 6e0:	ldp	x21, x22, [sp, #32]
 6e4:	ldp	x29, x30, [sp], #64
 6e8:	ret
 6ec:	mov	x0, #0x10                  	// #16
 6f0:	cmp	w2, #0x1
 6f4:	b.eq	6d4 <LLVMStoreSizeOfType+0xd8>  // b.none
 6f8:	str	x23, [sp, #48]
 6fc:	mov	w2, #0x298                 	// #664
 700:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 704:	add	x1, x1, #0x0
 708:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 70c:	add	x0, x0, #0x0
 710:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 714:	cmp	w2, #0xe
 718:	b.eq	7a4 <LLVMStoreSizeOfType+0x1a8>  // b.none
 71c:	b.ls	764 <LLVMStoreSizeOfType+0x168>  // b.plast
 720:	cmp	w2, #0xf
 724:	b.eq	78c <LLVMStoreSizeOfType+0x190>  // b.none
 728:	cmp	w2, #0x10
 72c:	b.ne	6f8 <LLVMStoreSizeOfType+0xfc>  // b.any
 730:	ldr	x2, [x20, #32]
 734:	mov	x0, #0xffffffff            	// #4294967295
 738:	cmp	x2, x0
 73c:	b.hi	854 <LLVMStoreSizeOfType+0x258>  // b.pmore
 740:	ldrb	w22, [x20, #40]
 744:	and	x19, x2, #0xffffffff
 748:	ldr	x1, [x20, #24]
 74c:	mov	x0, x21
 750:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 754:	tst	w1, #0xff
 758:	b.ne	878 <LLVMStoreSizeOfType+0x27c>  // b.any
 75c:	mul	x0, x19, x0
 760:	b	7f8 <LLVMStoreSizeOfType+0x1fc>
 764:	cmp	w2, #0xb
 768:	b.eq	848 <LLVMStoreSizeOfType+0x24c>  // b.none
 76c:	cmp	w2, #0xd
 770:	b.ne	6f8 <LLVMStoreSizeOfType+0xfc>  // b.any
 774:	mov	x1, x20
 778:	mov	x0, x21
 77c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 780:	ldr	x0, [x0]
 784:	lsl	x0, x0, #3
 788:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 78c:	ldr	w1, [x20, #8]
 790:	lsr	w1, w1, #8
 794:	mov	x0, x21
 798:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 79c:	lsl	w0, w0, #3
 7a0:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 7a4:	str	x23, [sp, #48]
 7a8:	ldr	x23, [x20, #32]
 7ac:	ldr	x20, [x20, #24]
 7b0:	mov	x1, x20
 7b4:	mov	x0, x21
 7b8:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 7bc:	add	x19, x0, #0x7
 7c0:	lsr	x19, x19, #3
 7c4:	and	w22, w1, #0xff
 7c8:	mov	x1, x20
 7cc:	mov	x0, x21
 7d0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 7d4:	mov	w1, w0
 7d8:	cbz	w0, 828 <LLVMStoreSizeOfType+0x22c>
 7dc:	sub	x0, x19, #0x1
 7e0:	add	x0, x0, x1
 7e4:	udiv	x0, x0, x1
 7e8:	mul	x0, x0, x1
 7ec:	mul	x0, x0, x23
 7f0:	lsl	x0, x0, #3
 7f4:	ldr	x23, [sp, #48]
 7f8:	add	x0, x0, #0x7
 7fc:	lsr	x0, x0, #3
 800:	cbz	w22, 6dc <LLVMStoreSizeOfType+0xe0>
 804:	str	x23, [sp, #48]
 808:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 80c:	add	x3, x3, #0x0
 810:	mov	w2, #0x7d                  	// #125
 814:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 818:	add	x1, x1, #0x0
 81c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 820:	add	x0, x0, #0x0
 824:	bl	0 <__assert_fail>
 828:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 82c:	add	x3, x3, #0x0
 830:	mov	w2, #0xc7                  	// #199
 834:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 838:	add	x1, x1, #0x0
 83c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 840:	add	x0, x0, #0x0
 844:	bl	0 <__assert_fail>
 848:	ldr	w0, [x20, #8]
 84c:	lsr	w0, w0, #8
 850:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 854:	str	x23, [sp, #48]
 858:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 85c:	add	x3, x3, #0x0
 860:	mov	w2, #0x220                 	// #544
 864:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 868:	add	x1, x1, #0x0
 86c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 870:	add	x0, x0, #0x0
 874:	bl	0 <__assert_fail>
 878:	str	x23, [sp, #48]
 87c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 880:	add	x3, x3, #0x0
 884:	mov	w2, #0x7d                  	// #125
 888:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 88c:	add	x1, x1, #0x0
 890:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 894:	add	x0, x0, #0x0
 898:	bl	0 <__assert_fail>
 89c:	mov	x0, #0x40                  	// #64
 8a0:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 8a4:	mov	x0, #0x50                  	// #80
 8a8:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 8ac:	mov	x0, #0x20                  	// #32
 8b0:	b	6d4 <LLVMStoreSizeOfType+0xd8>
 8b4:	mov	x0, #0x80                  	// #128
 8b8:	b	6d4 <LLVMStoreSizeOfType+0xd8>

00000000000008bc <LLVMABISizeOfType>:
 8bc:	stp	x29, x30, [sp, #-64]!
 8c0:	mov	x29, sp
 8c4:	stp	x19, x20, [sp, #16]
 8c8:	stp	x21, x22, [sp, #32]
 8cc:	mov	x21, x0
 8d0:	mov	x20, x1
 8d4:	ldrb	w0, [x1, #8]
 8d8:	sub	w2, w0, #0x1
 8dc:	and	w2, w2, #0xff
 8e0:	and	w1, w0, #0xfffffffd
 8e4:	and	w1, w1, #0xff
 8e8:	cmp	w2, #0x5
 8ec:	ccmp	w0, #0xf, #0x4, hi  // hi = pmore
 8f0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
 8f4:	b.ne	938 <LLVMABISizeOfType+0x7c>  // b.any
 8f8:	ldrb	w2, [x20, #8]
 8fc:	cmp	w2, #0x9
 900:	b.eq	bb8 <LLVMABISizeOfType+0x2fc>  // b.none
 904:	b.hi	a00 <LLVMABISizeOfType+0x144>  // b.pmore
 908:	cmp	w2, #0x4
 90c:	b.eq	bc0 <LLVMABISizeOfType+0x304>  // b.none
 910:	b.ls	980 <LLVMABISizeOfType+0xc4>  // b.plast
 914:	cmp	w2, #0x6
 918:	b.ls	b5c <LLVMABISizeOfType+0x2a0>  // b.plast
 91c:	cmp	w2, #0x7
 920:	b.ne	9e4 <LLVMABISizeOfType+0x128>  // b.any
 924:	mov	w1, #0x0                   	// #0
 928:	mov	x0, x21
 92c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 930:	lsl	w3, w0, #3
 934:	b	994 <LLVMABISizeOfType+0xd8>
 938:	sub	w1, w0, #0xd
 93c:	cmp	w1, #0x1
 940:	ccmp	w0, #0x10, #0x4, hi  // hi = pmore
 944:	b.ne	95c <LLVMABISizeOfType+0xa0>  // b.any
 948:	mov	x1, #0x0                   	// #0
 94c:	mov	x0, x20
 950:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 954:	and	w0, w0, #0xff
 958:	cbnz	w0, 8f8 <LLVMABISizeOfType+0x3c>
 95c:	stp	x23, x24, [sp, #48]
 960:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 964:	add	x3, x3, #0x0
 968:	mov	w2, #0x271                 	// #625
 96c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 970:	add	x1, x1, #0x0
 974:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 978:	add	x0, x0, #0x0
 97c:	bl	0 <__assert_fail>
 980:	cmp	w2, #0x2
 984:	b.eq	bc8 <LLVMABISizeOfType+0x30c>  // b.none
 988:	mov	x3, #0x40                  	// #64
 98c:	cmp	w2, #0x3
 990:	b.ne	9d0 <LLVMABISizeOfType+0x114>  // b.any
 994:	add	x3, x3, #0x7
 998:	lsr	x19, x3, #3
 99c:	mov	x1, x20
 9a0:	mov	x0, x21
 9a4:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 9a8:	mov	w3, w0
 9ac:	cbz	w0, bd0 <LLVMABISizeOfType+0x314>
 9b0:	sub	x0, x3, #0x1
 9b4:	add	x0, x0, x19
 9b8:	udiv	x0, x0, x3
 9bc:	mul	x0, x0, x3
 9c0:	ldp	x19, x20, [sp, #16]
 9c4:	ldp	x21, x22, [sp, #32]
 9c8:	ldp	x29, x30, [sp], #64
 9cc:	ret
 9d0:	mov	x3, #0x10                  	// #16
 9d4:	cmp	w2, #0x1
 9d8:	b.eq	994 <LLVMABISizeOfType+0xd8>  // b.none
 9dc:	stp	x23, x24, [sp, #48]
 9e0:	b	9e8 <LLVMABISizeOfType+0x12c>
 9e4:	stp	x23, x24, [sp, #48]
 9e8:	mov	w2, #0x298                 	// #664
 9ec:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 9f0:	add	x1, x1, #0x0
 9f4:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 9f8:	add	x0, x0, #0x0
 9fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 a00:	cmp	w2, #0xe
 a04:	b.eq	a9c <LLVMABISizeOfType+0x1e0>  // b.none
 a08:	b.ls	a54 <LLVMABISizeOfType+0x198>  // b.plast
 a0c:	cmp	w2, #0xf
 a10:	b.eq	a84 <LLVMABISizeOfType+0x1c8>  // b.none
 a14:	stp	x23, x24, [sp, #48]
 a18:	cmp	w2, #0x10
 a1c:	b.ne	9e8 <LLVMABISizeOfType+0x12c>  // b.any
 a20:	ldr	x0, [x20, #32]
 a24:	mov	x1, #0xffffffff            	// #4294967295
 a28:	cmp	x0, x1
 a2c:	b.hi	b1c <LLVMABISizeOfType+0x260>  // b.pmore
 a30:	ldrb	w22, [x20, #40]
 a34:	and	x19, x0, #0xffffffff
 a38:	ldr	x1, [x20, #24]
 a3c:	mov	x0, x21
 a40:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 a44:	tst	w1, #0xff
 a48:	b.ne	b3c <LLVMABISizeOfType+0x280>  // b.any
 a4c:	mul	x0, x19, x0
 a50:	b	b68 <LLVMABISizeOfType+0x2ac>
 a54:	cmp	w2, #0xb
 a58:	b.eq	b10 <LLVMABISizeOfType+0x254>  // b.none
 a5c:	cmp	w2, #0xd
 a60:	b.ne	a7c <LLVMABISizeOfType+0x1c0>  // b.any
 a64:	mov	x1, x20
 a68:	mov	x0, x21
 a6c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 a70:	ldr	x3, [x0]
 a74:	lsl	x3, x3, #3
 a78:	b	994 <LLVMABISizeOfType+0xd8>
 a7c:	stp	x23, x24, [sp, #48]
 a80:	b	9e8 <LLVMABISizeOfType+0x12c>
 a84:	ldr	w1, [x20, #8]
 a88:	lsr	w1, w1, #8
 a8c:	mov	x0, x21
 a90:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 a94:	lsl	w3, w0, #3
 a98:	b	994 <LLVMABISizeOfType+0xd8>
 a9c:	stp	x23, x24, [sp, #48]
 aa0:	ldr	x23, [x20, #32]
 aa4:	ldr	x24, [x20, #24]
 aa8:	mov	x1, x24
 aac:	mov	x0, x21
 ab0:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 ab4:	add	x0, x0, #0x7
 ab8:	lsr	x19, x0, #3
 abc:	and	w22, w1, #0xff
 ac0:	mov	x1, x24
 ac4:	mov	x0, x21
 ac8:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 acc:	mov	w1, w0
 ad0:	cbz	w0, af0 <LLVMABISizeOfType+0x234>
 ad4:	sub	x0, x19, #0x1
 ad8:	add	x0, x0, x1
 adc:	udiv	x0, x0, x1
 ae0:	mul	x0, x0, x1
 ae4:	mul	x0, x0, x23
 ae8:	lsl	x0, x0, #3
 aec:	b	b68 <LLVMABISizeOfType+0x2ac>
 af0:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 af4:	add	x3, x3, #0x0
 af8:	mov	w2, #0xc7                  	// #199
 afc:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b00:	add	x1, x1, #0x0
 b04:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b08:	add	x0, x0, #0x0
 b0c:	bl	0 <__assert_fail>
 b10:	ldr	w3, [x20, #8]
 b14:	lsr	w3, w3, #8
 b18:	b	994 <LLVMABISizeOfType+0xd8>
 b1c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b20:	add	x3, x3, #0x0
 b24:	mov	w2, #0x220                 	// #544
 b28:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b2c:	add	x1, x1, #0x0
 b30:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b34:	add	x0, x0, #0x0
 b38:	bl	0 <__assert_fail>
 b3c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b40:	add	x3, x3, #0x0
 b44:	mov	w2, #0x7d                  	// #125
 b48:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b4c:	add	x1, x1, #0x0
 b50:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b54:	add	x0, x0, #0x0
 b58:	bl	0 <__assert_fail>
 b5c:	stp	x23, x24, [sp, #48]
 b60:	mov	w22, #0x0                   	// #0
 b64:	mov	x0, #0x80                  	// #128
 b68:	add	x0, x0, #0x7
 b6c:	lsr	x19, x0, #3
 b70:	mov	x1, x20
 b74:	mov	x0, x21
 b78:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 b7c:	mov	w1, w0
 b80:	cbz	w0, bd4 <LLVMABISizeOfType+0x318>
 b84:	sub	x0, x1, #0x1
 b88:	add	x0, x0, x19
 b8c:	udiv	x0, x0, x1
 b90:	mul	x0, x0, x1
 b94:	cbz	w22, bf4 <LLVMABISizeOfType+0x338>
 b98:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 b9c:	add	x3, x3, #0x0
 ba0:	mov	w2, #0x7d                  	// #125
 ba4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 ba8:	add	x1, x1, #0x0
 bac:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 bb0:	add	x0, x0, #0x0
 bb4:	bl	0 <__assert_fail>
 bb8:	mov	x3, #0x40                  	// #64
 bbc:	b	994 <LLVMABISizeOfType+0xd8>
 bc0:	mov	x3, #0x50                  	// #80
 bc4:	b	994 <LLVMABISizeOfType+0xd8>
 bc8:	mov	x3, #0x20                  	// #32
 bcc:	b	994 <LLVMABISizeOfType+0xd8>
 bd0:	stp	x23, x24, [sp, #48]
 bd4:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 bd8:	add	x3, x3, #0x0
 bdc:	mov	w2, #0xc7                  	// #199
 be0:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 be4:	add	x1, x1, #0x0
 be8:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 bec:	add	x0, x0, #0x0
 bf0:	bl	0 <__assert_fail>
 bf4:	ldp	x23, x24, [sp, #48]
 bf8:	b	9c0 <LLVMABISizeOfType+0x104>

0000000000000bfc <LLVMABIAlignmentOfType>:
 bfc:	stp	x29, x30, [sp, #-16]!
 c00:	mov	x29, sp
 c04:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 c08:	ldp	x29, x30, [sp], #16
 c0c:	ret

0000000000000c10 <LLVMCallFrameAlignmentOfType>:
 c10:	stp	x29, x30, [sp, #-16]!
 c14:	mov	x29, sp
 c18:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 c1c:	ldp	x29, x30, [sp], #16
 c20:	ret

0000000000000c24 <LLVMPreferredAlignmentOfType>:
 c24:	stp	x29, x30, [sp, #-16]!
 c28:	mov	x29, sp
 c2c:	bl	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>
 c30:	ldp	x29, x30, [sp], #16
 c34:	ret

0000000000000c38 <LLVMPreferredAlignmentOfGlobal>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	cbz	x1, c5c <LLVMPreferredAlignmentOfGlobal+0x24>
 c44:	ldrb	w2, [x1, #16]
 c48:	cmp	w2, #0x3
 c4c:	b.ne	c7c <LLVMPreferredAlignmentOfGlobal+0x44>  // b.any
 c50:	bl	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 c54:	ldp	x29, x30, [sp], #16
 c58:	ret
 c5c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c60:	add	x3, x3, #0x0
 c64:	mov	w2, #0x69                  	// #105
 c68:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c6c:	add	x1, x1, #0x0
 c70:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c74:	add	x0, x0, #0x0
 c78:	bl	0 <__assert_fail>
 c7c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c80:	add	x3, x3, #0x0
 c84:	mov	w2, #0x108                 	// #264
 c88:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c8c:	add	x1, x1, #0x0
 c90:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 c94:	add	x0, x0, #0x0
 c98:	bl	0 <__assert_fail>

0000000000000c9c <LLVMElementAtOffset>:
 c9c:	stp	x29, x30, [sp, #-32]!
 ca0:	mov	x29, sp
 ca4:	str	x19, [sp, #16]
 ca8:	cbz	x1, cd4 <LLVMElementAtOffset+0x38>
 cac:	mov	x19, x2
 cb0:	ldrb	w2, [x1, #8]
 cb4:	cmp	w2, #0xd
 cb8:	b.ne	cf4 <LLVMElementAtOffset+0x58>  // b.any
 cbc:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 cc0:	mov	x1, x19
 cc4:	bl	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 cc8:	ldr	x19, [sp, #16]
 ccc:	ldp	x29, x30, [sp], #32
 cd0:	ret
 cd4:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 cd8:	add	x3, x3, #0x0
 cdc:	mov	w2, #0x69                  	// #105
 ce0:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 ce4:	add	x1, x1, #0x0
 ce8:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 cec:	add	x0, x0, #0x0
 cf0:	bl	0 <__assert_fail>
 cf4:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 cf8:	add	x3, x3, #0x0
 cfc:	mov	w2, #0x108                 	// #264
 d00:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d04:	add	x1, x1, #0x0
 d08:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d0c:	add	x0, x0, #0x0
 d10:	bl	0 <__assert_fail>

0000000000000d14 <LLVMOffsetOfElement>:
 d14:	stp	x29, x30, [sp, #-32]!
 d18:	mov	x29, sp
 d1c:	str	x19, [sp, #16]
 d20:	cbz	x1, d5c <LLVMOffsetOfElement+0x48>
 d24:	mov	w19, w2
 d28:	ldrb	w2, [x1, #8]
 d2c:	cmp	w2, #0xd
 d30:	b.ne	d7c <LLVMOffsetOfElement+0x68>  // b.any
 d34:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 d38:	ldr	w1, [x0, #12]
 d3c:	ubfx	x1, x1, #0, #31
 d40:	cmp	w1, w19
 d44:	b.ls	d9c <LLVMOffsetOfElement+0x88>  // b.plast
 d48:	add	x19, x0, w19, uxtw #3
 d4c:	ldr	x0, [x19, #16]
 d50:	ldr	x19, [sp, #16]
 d54:	ldp	x29, x30, [sp], #32
 d58:	ret
 d5c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d60:	add	x3, x3, #0x0
 d64:	mov	w2, #0x69                  	// #105
 d68:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d6c:	add	x1, x1, #0x0
 d70:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d74:	add	x0, x0, #0x0
 d78:	bl	0 <__assert_fail>
 d7c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d80:	add	x3, x3, #0x0
 d84:	mov	w2, #0x108                 	// #264
 d88:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d8c:	add	x1, x1, #0x0
 d90:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 d94:	add	x0, x0, #0x0
 d98:	bl	0 <__assert_fail>
 d9c:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 da0:	add	x3, x3, #0x0
 da4:	mov	w2, #0x260                 	// #608
 da8:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 dac:	add	x1, x1, #0x0
 db0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 db4:	add	x0, x0, #0x0
 db8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x1, #8]
  1c:	sub	w0, w1, #0x1
  20:	and	w0, w0, #0xff
  24:	and	w2, w1, #0xfffffffd
  28:	and	w2, w2, #0xff
  2c:	cmp	w0, #0x5
  30:	ccmp	w1, #0xf, #0x4, hi  // hi = pmore
  34:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  38:	b.ne	8c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x8c>  // b.any
  3c:	ldrb	w2, [x19, #8]
  40:	cmp	w2, #0x9
  44:	b.eq	e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xe4>  // b.none
  48:	b.hi	104 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x104>  // b.pmore
  4c:	cmp	w2, #0x4
  50:	b.eq	24c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x24c>  // b.none
  54:	b.ls	d4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xd4>  // b.plast
  58:	cmp	w2, #0x6
  5c:	b.ls	240 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x240>  // b.plast
  60:	cmp	w2, #0x7
  64:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
  68:	mov	w1, #0x0                   	// #0
  6c:	mov	x0, x21
  70:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  74:	lsl	w0, w0, #3
  78:	mov	x1, #0x0                   	// #0
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	sub	w0, w1, #0xd
  90:	cmp	w0, #0x1
  94:	ccmp	w1, #0x10, #0x4, hi  // hi = pmore
  98:	b.ne	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.any
  9c:	mov	x1, #0x0                   	// #0
  a0:	mov	x0, x19
  a4:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  a8:	and	w0, w0, #0xff
  ac:	cbnz	w0, 3c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x3c>
  b0:	str	x23, [sp, #48]
  b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x271                 	// #625
  c0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	cmp	w2, #0x2
  d8:	b.eq	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.none
  dc:	cmp	w2, #0x3
  e0:	b.ne	f0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf0>  // b.any
  e4:	mov	x0, #0x40                  	// #64
  e8:	mov	x1, #0x0                   	// #0
  ec:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
  f0:	cmp	w2, #0x1
  f4:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
  f8:	mov	x0, #0x10                  	// #16
  fc:	mov	x1, #0x0                   	// #0
 100:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 104:	cmp	w2, #0xe
 108:	b.eq	1a4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1a4>  // b.none
 10c:	b.ls	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>  // b.plast
 110:	cmp	w2, #0xf
 114:	b.eq	188 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x188>  // b.none
 118:	cmp	w2, #0x10
 11c:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
 120:	ldr	x1, [x19, #32]
 124:	mov	x0, #0xffffffff            	// #4294967295
 128:	cmp	x1, x0
 12c:	b.hi	258 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x258>  // b.pmore
 130:	ldrb	w22, [x19, #40]
 134:	and	x20, x1, #0xffffffff
 138:	ldr	x1, [x19, #24]
 13c:	mov	x0, x21
 140:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 144:	tst	w1, #0xff
 148:	b.ne	27c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x27c>  // b.any
 14c:	mul	x0, x20, x0
 150:	mov	x1, #0x0                   	// #0
 154:	bfxil	x1, x22, #0, #8
 158:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 15c:	cmp	w2, #0xb
 160:	b.eq	224 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x224>  // b.none
 164:	cmp	w2, #0xd
 168:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
 16c:	mov	x1, x19
 170:	mov	x0, x21
 174:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 178:	ldr	x0, [x0]
 17c:	lsl	x0, x0, #3
 180:	mov	x1, #0x0                   	// #0
 184:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 188:	ldr	w1, [x19, #8]
 18c:	lsr	w1, w1, #8
 190:	mov	x0, x21
 194:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 198:	lsl	w0, w0, #3
 19c:	mov	x1, #0x0                   	// #0
 1a0:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 1a4:	str	x23, [sp, #48]
 1a8:	ldr	x20, [x19, #32]
 1ac:	ldr	x23, [x19, #24]
 1b0:	mov	x1, x23
 1b4:	mov	x0, x21
 1b8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1bc:	add	x19, x0, #0x7
 1c0:	lsr	x19, x19, #3
 1c4:	and	w22, w1, #0xff
 1c8:	mov	x1, x23
 1cc:	mov	x0, x21
 1d0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 1d4:	mov	w1, w0
 1d8:	cbz	w0, 204 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x204>
 1dc:	sub	x0, x19, #0x1
 1e0:	add	x0, x0, x1
 1e4:	udiv	x0, x0, x1
 1e8:	mul	x0, x0, x1
 1ec:	mul	x0, x0, x20
 1f0:	lsl	x0, x0, #3
 1f4:	mov	x1, #0x0                   	// #0
 1f8:	bfxil	x1, x22, #0, #8
 1fc:	ldr	x23, [sp, #48]
 200:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x3, x3, #0x0
 20c:	mov	w2, #0xc7                  	// #199
 210:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	add	x1, x1, #0x0
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <__assert_fail>
 224:	ldr	w0, [x19, #8]
 228:	lsr	w0, w0, #8
 22c:	mov	x1, #0x0                   	// #0
 230:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 234:	mov	x0, #0x20                  	// #32
 238:	mov	x1, #0x0                   	// #0
 23c:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 240:	mov	x0, #0x80                  	// #128
 244:	mov	x1, #0x0                   	// #0
 248:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 24c:	mov	x0, #0x50                  	// #80
 250:	mov	x1, #0x0                   	// #0
 254:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 258:	str	x23, [sp, #48]
 25c:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	add	x3, x3, #0x0
 264:	mov	w2, #0x220                 	// #544
 268:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 26c:	add	x1, x1, #0x0
 270:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 274:	add	x0, x0, #0x0
 278:	bl	0 <__assert_fail>
 27c:	str	x23, [sp, #48]
 280:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 284:	add	x3, x3, #0x0
 288:	mov	w2, #0x7d                  	// #125
 28c:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 290:	add	x1, x1, #0x0
 294:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 298:	add	x0, x0, #0x0
 29c:	bl	0 <__assert_fail>
 2a0:	str	x23, [sp, #48]
 2a4:	mov	w2, #0x298                 	// #664
 2a8:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2ac:	add	x1, x1, #0x0
 2b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  18:	cbz	x0, 40 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x40>
  1c:	mov	x1, x0
  20:	ldr	x0, [x19]
  24:	ldr	x3, [x0, #24]
  28:	ldr	w2, [x1], #16
  2c:	mov	x0, x19
  30:	blr	x3
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	w0, #0x0                   	// #0
  44:	b	34 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x34>

0000000000000048 <_ZN4llvm19TargetIntrinsicInfoC1Ev>:
  48:	adrp	x1, 0 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>
  4c:	ldr	x1, [x1]
  50:	add	x1, x1, #0x10
  54:	str	x1, [x0]
  58:	ret

000000000000005c <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  5c:	ret

0000000000000060 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  60:	stp	x29, x30, [sp, #-32]!
  64:	mov	x29, sp
  68:	str	x19, [sp, #16]
  6c:	mov	x19, x0
  70:	bl	5c <_ZN4llvm19TargetIntrinsicInfoD1Ev>
  74:	mov	x1, #0x8                   	// #8
  78:	mov	x0, x19
  7c:	bl	0 <_ZdlPvm>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
   0:	ret

0000000000000004 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
   4:	ands	w0, w1, #0xff
   8:	b.ne	44 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x40>  // b.any
   c:	ldrb	w1, [x2, #32]
  10:	and	w1, w1, #0xf
  14:	sub	w0, w1, #0x4
  18:	cmp	w0, #0x1
  1c:	cset	w0, ls  // ls = plast
  20:	cmp	w1, #0x2
  24:	csinc	w0, w0, wzr, ne  // ne = any
  28:	cbnz	w0, 44 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x40>
  2c:	add	w0, w1, #0x7
  30:	and	w0, w0, #0xf
  34:	cmp	w0, #0x1
  38:	cset	w0, ls  // ls = plast
  3c:	cmp	w1, #0x3
  40:	csinc	w0, w0, wzr, ne  // ne = any
  44:	ret

0000000000000048 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
  48:	mov	x1, x0
  4c:	sub	w2, w2, #0x3
  50:	and	w2, w2, #0xff
  54:	cmp	w2, #0x7
  58:	b.ls	64 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x1c>  // b.plast
  5c:	ldr	x0, [x1, #32]
  60:	ret
  64:	ldr	x0, [x0, #48]
  68:	cbnz	x0, 60 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x18>
  6c:	b	5c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x14>

0000000000000070 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
  70:	stp	x29, x30, [sp, #-48]!
  74:	mov	x29, sp
  78:	stp	x19, x20, [sp, #16]
  7c:	mov	x19, x0
  80:	str	wzr, [sp, #44]
  84:	ldr	x0, [x0]
  88:	ldr	x20, [x0, #48]
  8c:	ldr	x0, [x1, #40]
  90:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
  94:	add	x4, sp, #0x2c
  98:	mov	x3, #0x0                   	// #0
  9c:	mov	w2, #0x3                   	// #3
  a0:	mov	x1, x0
  a4:	mov	x0, x19
  a8:	blr	x20
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

00000000000000b8 <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
  b8:	stp	x29, x30, [sp, #-16]!
  bc:	mov	x29, sp
  c0:	mov	x0, x2
  c4:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
  c8:	ldp	x29, x30, [sp], #16
  cc:	ret

00000000000000d0 <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
  d0:	stp	x29, x30, [sp, #-32]!
  d4:	mov	x29, sp
  d8:	stp	x19, x20, [sp, #16]
  dc:	mov	x19, x0
  e0:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
  e4:	ands	w0, w0, #0xff
  e8:	b.ne	1e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x114>  // b.any
  ec:	cbz	x19, 168 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x98>
  f0:	ldrb	w1, [x19, #16]
  f4:	cmp	w1, #0x9
  f8:	b.eq	1e0 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x110>  // b.none
  fc:	sub	w1, w1, #0x6
 100:	cmp	w1, #0x2
 104:	b.hi	1e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x114>  // b.pmore
 108:	ldrb	w0, [x19, #23]
 10c:	tbz	w0, #6, 188 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xb8>
 110:	ldur	x0, [x19, #-8]
 114:	ldr	w1, [x19, #20]
 118:	and	x2, x1, #0xfffffff
 11c:	ubfiz	x20, x1, #1, #28
 120:	add	x20, x20, x2
 124:	add	x20, x0, x20, lsl #3
 128:	cmp	x0, x20
 12c:	b.eq	160 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x90>  // b.none
 130:	mov	x19, x0
 134:	ldr	x0, [x19]
 138:	cbz	x0, 1a0 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xd0>
 13c:	ldrb	w1, [x0, #16]
 140:	cmp	w1, #0x10
 144:	b.hi	1c0 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xf0>  // b.pmore
 148:	bl	d0 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 14c:	ands	w0, w0, #0xff
 150:	b.eq	1e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x114>  // b.none
 154:	add	x19, x19, #0x18
 158:	cmp	x20, x19
 15c:	b.ne	134 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x64>  // b.any
 160:	mov	w0, #0x1                   	// #1
 164:	b	1e4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x114>
 168:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x69                  	// #105
 174:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 178:	add	x1, x1, #0x0
 17c:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 180:	add	x0, x0, #0x0
 184:	bl	0 <__assert_fail>
 188:	ldr	w0, [x19, #20]
 18c:	and	x1, x0, #0xfffffff
 190:	ubfiz	x0, x0, #1, #28
 194:	add	x0, x0, x1
 198:	sub	x0, x19, x0, lsl #3
 19c:	b	114 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x44>
 1a0:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x69                  	// #105
 1ac:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1b0:	add	x1, x1, #0x0
 1b4:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <__assert_fail>
 1c0:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x108                 	// #264
 1cc:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1d0:	add	x1, x1, #0x0
 1d4:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1d8:	add	x0, x0, #0x0
 1dc:	bl	0 <__assert_fail>
 1e0:	mov	w0, #0x1                   	// #1
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #32
 1ec:	ret

00000000000001f0 <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 1f0:	stp	x29, x30, [sp, #-16]!
 1f4:	mov	x29, sp
 1f8:	mov	x2, x0
 1fc:	mov	x0, x1
 200:	mov	x3, #0x0                   	// #0
 204:	ldr	x2, [x2, #800]
 208:	mov	w1, #0x0                   	// #0
 20c:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 210:	ldp	x29, x30, [sp], #16
 214:	ret

0000000000000218 <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 218:	stp	x29, x30, [sp, #-16]!
 21c:	mov	x29, sp
 220:	mov	w3, #0x0                   	// #0
 224:	ldr	x0, [x0, #808]
 228:	bl	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 22c:	ldp	x29, x30, [sp], #16
 230:	ret

0000000000000234 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
 234:	stp	x29, x30, [sp, #-48]!
 238:	mov	x29, sp
 23c:	stp	x19, x20, [sp, #16]
 240:	stp	x21, x22, [sp, #32]
 244:	mov	x19, x0
 248:	mov	x20, x2
 24c:	str	x1, [x0, #800]
 250:	ldr	x21, [x0, #808]
 254:	cbz	x21, 290 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x5c>
 258:	ldr	w1, [x21, #24]
 25c:	cbz	w1, 278 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x44>
 260:	ldr	x0, [x21, #8]
 264:	ubfiz	x2, x1, #4, #32
 268:	add	x2, x0, x2
 26c:	add	x0, x0, #0x10
 270:	cmp	x2, x0
 274:	b.ne	26c <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x38>  // b.any
 278:	ubfiz	x1, x1, #4, #32
 27c:	ldr	x0, [x21, #8]
 280:	bl	0 <_ZdlPvm>
 284:	mov	x1, #0x20                  	// #32
 288:	mov	x0, x21
 28c:	bl	0 <_ZdlPvm>
 290:	mov	x0, #0x20                  	// #32
 294:	bl	0 <_Znwm>
 298:	str	xzr, [x0]
 29c:	str	wzr, [x0, #24]
 2a0:	str	xzr, [x0, #8]
 2a4:	str	wzr, [x0, #16]
 2a8:	str	wzr, [x0, #20]
 2ac:	str	x0, [x19, #808]
 2b0:	mov	x0, x20
 2b4:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
 2b8:	mov	w21, w0
 2bc:	ldr	x22, [x19, #800]
 2c0:	mov	x0, x20
 2c4:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
 2c8:	cmp	w0, #0x4
 2cc:	cset	w4, eq  // eq = none
 2d0:	mov	x3, x22
 2d4:	mov	w2, w21
 2d8:	add	x1, x20, #0x1c0
 2dc:	add	x0, x19, #0x8
 2e0:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
 2e4:	str	wzr, [x19, #828]
 2e8:	str	wzr, [x19, #824]
 2ec:	str	wzr, [x19, #820]
 2f0:	mov	w0, #0x1                   	// #1
 2f4:	str	w0, [x19, #832]
 2f8:	ldp	x19, x20, [sp, #16]
 2fc:	ldp	x21, x22, [sp, #32]
 300:	ldp	x29, x30, [sp], #48
 304:	ret

0000000000000308 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>:
 308:	stp	x29, x30, [sp, #-32]!
 30c:	mov	x29, sp
 310:	stp	x19, x20, [sp, #16]
 314:	mov	x19, x0
 318:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 31c:	ands	w20, w0, #0xff
 320:	b.ne	358 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x50>  // b.any
 324:	ldur	x0, [x19, #-24]
 328:	bl	d0 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 32c:	ands	w0, w0, #0xff
 330:	b.eq	34c <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x44>  // b.none
 334:	ldrb	w1, [x19, #80]
 338:	mov	w0, w20
 33c:	tbnz	w1, #0, 34c <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x44>
 340:	ldrh	w0, [x19, #34]
 344:	eor	x0, x0, #0x40
 348:	ubfx	w0, w0, #6, #1
 34c:	ldp	x19, x20, [sp, #16]
 350:	ldp	x29, x30, [sp], #32
 354:	ret
 358:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 35c:	add	x3, x3, #0x0
 360:	mov	w2, #0x89                  	// #137
 364:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 368:	add	x1, x1, #0x0
 36c:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 370:	add	x0, x0, #0x0
 374:	bl	0 <__assert_fail>

0000000000000378 <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
 378:	stp	x29, x30, [sp, #-32]!
 37c:	mov	x29, sp
 380:	stp	x19, x20, [sp, #16]
 384:	mov	x19, x0
 388:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 38c:	ldr	x0, [x0]
 390:	add	x0, x0, #0x10
 394:	str	x0, [x19]
 398:	ldr	x20, [x19, #808]
 39c:	cbz	x20, 3d8 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x60>
 3a0:	ldr	w1, [x20, #24]
 3a4:	cbz	w1, 3c0 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x48>
 3a8:	ldr	x0, [x20, #8]
 3ac:	ubfiz	x2, x1, #4, #32
 3b0:	add	x2, x0, x2
 3b4:	add	x0, x0, #0x10
 3b8:	cmp	x2, x0
 3bc:	b.ne	3b4 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x3c>  // b.any
 3c0:	ubfiz	x1, x1, #4, #32
 3c4:	ldr	x0, [x20, #8]
 3c8:	bl	0 <_ZdlPvm>
 3cc:	mov	x1, #0x20                  	// #32
 3d0:	mov	x0, x20
 3d4:	bl	0 <_ZdlPvm>
 3d8:	ldr	x0, [x19, #728]
 3dc:	add	x1, x19, #0x2e8
 3e0:	cmp	x0, x1
 3e4:	b.eq	3ec <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x74>  // b.none
 3e8:	bl	0 <_ZdlPv>
 3ec:	ldr	w1, [x19, #480]
 3f0:	cbz	w1, 40c <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x94>
 3f4:	ldr	x0, [x19, #464]
 3f8:	ubfiz	x2, x1, #4, #32
 3fc:	add	x2, x0, x2
 400:	add	x0, x0, #0x10
 404:	cmp	x2, x0
 408:	b.ne	400 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x88>  // b.any
 40c:	ubfiz	x1, x1, #4, #32
 410:	ldr	x0, [x19, #464]
 414:	bl	0 <_ZdlPvm>
 418:	ldp	x19, x20, [sp, #16]
 41c:	ldp	x29, x30, [sp], #32
 420:	ret

0000000000000424 <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 424:	stp	x29, x30, [sp, #-32]!
 428:	mov	x29, sp
 42c:	str	x19, [sp, #16]
 430:	mov	x19, x0
 434:	bl	378 <_ZN4llvm24TargetLoweringObjectFileD1Ev>
 438:	mov	x1, #0x358                 	// #856
 43c:	mov	x0, x19
 440:	bl	0 <_ZdlPvm>
 444:	ldr	x19, [sp, #16]
 448:	ldp	x29, x30, [sp], #32
 44c:	ret

0000000000000450 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 450:	stp	x29, x30, [sp, #-192]!
 454:	mov	x29, sp
 458:	stp	x19, x20, [sp, #16]
 45c:	stp	x21, x22, [sp, #32]
 460:	stp	x23, x24, [sp, #48]
 464:	str	x25, [sp, #64]
 468:	cbz	x3, 594 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x144>
 46c:	mov	x23, x0
 470:	mov	x22, x1
 474:	mov	x25, x2
 478:	mov	x19, x3
 47c:	mov	x24, x4
 480:	add	x0, sp, #0x68
 484:	str	x0, [sp, #88]
 488:	str	wzr, [sp, #96]
 48c:	mov	w0, #0x3c                  	// #60
 490:	str	w0, [sp, #100]
 494:	ldr	x0, [x1, #40]
 498:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 49c:	ldr	w5, [x0, #24]
 4a0:	cmp	w5, #0x3
 4a4:	b.eq	618 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1c8>  // b.none
 4a8:	b.hi	5b4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x164>  // b.pmore
 4ac:	cmp	w5, #0x1
 4b0:	b.eq	628 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1d8>  // b.none
 4b4:	cmp	w5, #0x2
 4b8:	b.eq	638 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1e8>  // b.none
 4bc:	mov	x21, #0x0                   	// #0
 4c0:	cbnz	w5, 600 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1b0>
 4c4:	ldr	w0, [sp, #96]
 4c8:	add	x21, x0, x21
 4cc:	ldr	w0, [sp, #100]
 4d0:	cmp	x21, x0
 4d4:	b.hi	670 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x220>  // b.pmore
 4d8:	str	w21, [sp, #96]
 4dc:	mov	w4, #0x0                   	// #0
 4e0:	ldr	x3, [x23, #808]
 4e4:	mov	x2, x22
 4e8:	add	x1, sp, #0x58
 4ec:	mov	x0, x24
 4f0:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 4f4:	ldr	w2, [sp, #96]
 4f8:	ldr	w0, [sp, #100]
 4fc:	sub	x0, x0, x2
 500:	cmp	x19, x0
 504:	b.hi	690 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x240>  // b.pmore
 508:	ldr	w0, [sp, #96]
 50c:	mov	x2, x19
 510:	mov	x1, x25
 514:	ldr	x3, [sp, #88]
 518:	add	x0, x3, x0
 51c:	bl	0 <memcpy>
 520:	ldr	w3, [sp, #96]
 524:	add	x19, x3, x19
 528:	ldr	w0, [sp, #100]
 52c:	cmp	x19, x0
 530:	b.hi	6a8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x258>  // b.pmore
 534:	str	w19, [sp, #96]
 538:	str	xzr, [sp, #176]
 53c:	mov	w0, #0x6                   	// #6
 540:	strb	w0, [sp, #184]
 544:	mov	w0, #0x1                   	// #1
 548:	strb	w0, [sp, #185]
 54c:	add	x19, sp, #0x58
 550:	str	x19, [sp, #168]
 554:	add	x1, sp, #0xa8
 558:	ldr	x0, [x23, #800]
 55c:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 560:	mov	x20, x0
 564:	ldr	x0, [sp, #88]
 568:	add	x19, x19, #0x10
 56c:	cmp	x0, x19
 570:	b.eq	578 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x128>  // b.none
 574:	bl	0 <free>
 578:	mov	x0, x20
 57c:	ldp	x19, x20, [sp, #16]
 580:	ldp	x21, x22, [sp, #32]
 584:	ldp	x23, x24, [sp, #48]
 588:	ldr	x25, [sp, #64]
 58c:	ldp	x29, x30, [sp], #192
 590:	ret
 594:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 598:	add	x3, x3, #0x0
 59c:	mov	w2, #0x76                  	// #118
 5a0:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 5a4:	add	x1, x1, #0x0
 5a8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 5ac:	add	x0, x0, #0x0
 5b0:	bl	0 <__assert_fail>
 5b4:	cmp	w5, #0x4
 5b8:	b.eq	648 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1f8>  // b.none
 5bc:	cmp	w5, #0x5
 5c0:	b.ne	600 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1b0>  // b.any
 5c4:	mov	x21, #0x1                   	// #1
 5c8:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 5cc:	add	x20, x20, #0x0
 5d0:	ldr	w2, [sp, #96]
 5d4:	ldr	w0, [sp, #100]
 5d8:	sub	x0, x0, x2
 5dc:	cmp	x0, x21
 5e0:	b.cc	658 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x208>  // b.lo, b.ul, b.last
 5e4:	ldr	w0, [sp, #96]
 5e8:	mov	x2, x21
 5ec:	mov	x1, x20
 5f0:	ldr	x3, [sp, #88]
 5f4:	add	x0, x3, x0
 5f8:	bl	0 <memcpy>
 5fc:	b	4c4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x74>
 600:	mov	w2, #0x14d                 	// #333
 604:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 608:	add	x1, x1, #0x0
 60c:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 610:	add	x0, x0, #0x0
 614:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 618:	mov	x21, #0x2                   	// #2
 61c:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 620:	add	x20, x20, #0x0
 624:	b	5d0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x180>
 628:	mov	x21, #0x2                   	// #2
 62c:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 630:	add	x20, x20, #0x0
 634:	b	5d0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x180>
 638:	mov	x21, #0x1                   	// #1
 63c:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 640:	add	x20, x20, #0x0
 644:	b	5d0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x180>
 648:	mov	x21, #0x1                   	// #1
 64c:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 650:	add	x20, x20, #0x0
 654:	b	5d0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x180>
 658:	add	x0, sp, #0x58
 65c:	mov	x3, #0x1                   	// #1
 660:	add	x2, x2, x21
 664:	add	x1, x0, #0x10
 668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 66c:	b	5e4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x194>
 670:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 674:	add	x3, x3, #0x0
 678:	mov	w2, #0x43                  	// #67
 67c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 680:	add	x1, x1, #0x0
 684:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 688:	add	x0, x0, #0x0
 68c:	bl	0 <__assert_fail>
 690:	add	x0, sp, #0x58
 694:	mov	x3, #0x1                   	// #1
 698:	add	x2, x19, x2
 69c:	add	x1, x0, #0x10
 6a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 6a4:	b	508 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xb8>
 6a8:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6ac:	add	x3, x3, #0x0
 6b0:	mov	w2, #0x43                  	// #67
 6b4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6b8:	add	x1, x1, #0x0
 6bc:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6c0:	add	x0, x0, #0x0
 6c4:	bl	0 <__assert_fail>

00000000000006c8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 6c8:	stp	x29, x30, [sp, #-64]!
 6cc:	mov	x29, sp
 6d0:	stp	x19, x20, [sp, #16]
 6d4:	mov	x19, x0
 6d8:	mov	x20, x1
 6dc:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 6e0:	and	w0, w0, #0xff
 6e4:	cbnz	w0, 724 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x5c>
 6e8:	ldrb	w0, [x19, #32]
 6ec:	and	w0, w0, #0xf
 6f0:	cmp	w0, #0x1
 6f4:	b.eq	724 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x5c>  // b.none
 6f8:	stp	x21, x22, [sp, #32]
 6fc:	ldrb	w2, [x19, #16]
 700:	cbnz	w2, 74c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x84>
 704:	mov	w21, #0x0                   	// #0
 708:	mov	w0, #0x1                   	// #1
 70c:	bfxil	w21, w0, #0, #8
 710:	mov	w0, w21
 714:	ldp	x21, x22, [sp, #32]
 718:	ldp	x19, x20, [sp, #16]
 71c:	ldp	x29, x30, [sp], #64
 720:	ret
 724:	stp	x21, x22, [sp, #32]
 728:	stp	x23, x24, [sp, #48]
 72c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 730:	add	x3, x3, #0x0
 734:	mov	w2, #0x91                  	// #145
 738:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 73c:	add	x1, x1, #0x0
 740:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 744:	add	x0, x0, #0x0
 748:	bl	0 <__assert_fail>
 74c:	cmp	w2, #0x3
 750:	b.ne	778 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xb0>  // b.any
 754:	ldrb	w1, [x19, #33]
 758:	tst	x1, #0x1c
 75c:	b.ne	79c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xd4>  // b.any
 760:	cmp	w0, #0xa
 764:	b.ne	7d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x10c>  // b.any
 768:	mov	w21, #0x0                   	// #0
 76c:	mov	w0, #0x10                  	// #16
 770:	bfxil	w21, w0, #0, #8
 774:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 778:	stp	x23, x24, [sp, #48]
 77c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 780:	add	x3, x3, #0x0
 784:	mov	w2, #0x108                 	// #264
 788:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 78c:	add	x1, x1, #0x0
 790:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 794:	add	x0, x0, #0x0
 798:	bl	0 <__assert_fail>
 79c:	mov	x0, x19
 7a0:	bl	308 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 7a4:	and	w0, w0, #0xff
 7a8:	cbz	w0, 7c4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xfc>
 7ac:	ldrsb	w0, [x20, #776]
 7b0:	tbnz	w0, #31, 7c4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xfc>
 7b4:	mov	w21, #0x0                   	// #0
 7b8:	mov	w0, #0xb                   	// #11
 7bc:	bfxil	w21, w0, #0, #8
 7c0:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 7c4:	mov	w21, #0x0                   	// #0
 7c8:	mov	w0, #0xc                   	// #12
 7cc:	bfxil	w21, w0, #0, #8
 7d0:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 7d4:	mov	x0, x19
 7d8:	bl	308 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 7dc:	and	w0, w0, #0xff
 7e0:	cbz	w0, 81c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x154>
 7e4:	ldrsb	w0, [x20, #776]
 7e8:	tbnz	w0, #31, 81c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x154>
 7ec:	ldrb	w0, [x19, #32]
 7f0:	and	w0, w0, #0xf
 7f4:	sub	w1, w0, #0x7
 7f8:	mov	w21, #0x0                   	// #0
 7fc:	mov	w2, #0xe                   	// #14
 800:	bfxil	w21, w2, #0, #8
 804:	cmp	w1, #0x1
 808:	b.ls	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>  // b.plast
 80c:	cbnz	w0, 834 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x16c>
 810:	mov	w0, #0xf                   	// #15
 814:	bfxil	w21, w0, #0, #8
 818:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 81c:	ldrb	w0, [x19, #80]
 820:	tbnz	w0, #0, 840 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x178>
 824:	mov	w21, #0x0                   	// #0
 828:	mov	w0, #0x11                  	// #17
 82c:	bfxil	w21, w0, #0, #8
 830:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 834:	mov	w0, #0xd                   	// #13
 838:	bfxil	w21, w0, #0, #8
 83c:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 840:	mov	x0, x19
 844:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 848:	and	w0, w0, #0xff
 84c:	cbnz	w0, 884 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1bc>
 850:	ldur	x22, [x19, #-24]
 854:	mov	x0, x22
 858:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 85c:	and	w0, w0, #0xff
 860:	cbnz	w0, ac4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3fc>
 864:	ldrb	w0, [x19, #32]
 868:	ubfx	x0, x0, #6, #2
 86c:	cmp	w0, #0x2
 870:	b.eq	8a8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1e0>  // b.none
 874:	mov	w21, #0x0                   	// #0
 878:	mov	w0, #0x3                   	// #3
 87c:	bfxil	w21, w0, #0, #8
 880:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 884:	stp	x23, x24, [sp, #48]
 888:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 88c:	add	x3, x3, #0x0
 890:	mov	w2, #0x89                  	// #137
 894:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 898:	add	x1, x1, #0x0
 89c:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 8a0:	add	x0, x0, #0x0
 8a4:	bl	0 <__assert_fail>
 8a8:	stp	x23, x24, [sp, #48]
 8ac:	ldr	x0, [x22]
 8b0:	cbz	x0, 940 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x278>
 8b4:	ldrb	w1, [x0, #8]
 8b8:	cmp	w1, #0xe
 8bc:	b.eq	afc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x434>  // b.none
 8c0:	ldr	x0, [x19, #40]
 8c4:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8c8:	mov	x23, x0
 8cc:	ldr	x22, [x22]
 8d0:	mov	x1, x22
 8d4:	bl	0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 8d8:	add	x0, x0, #0x7
 8dc:	lsr	x19, x0, #3
 8e0:	and	w20, w1, #0xff
 8e4:	mov	x1, x22
 8e8:	mov	x0, x23
 8ec:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 8f0:	mov	w1, w0
 8f4:	cbz	w0, a30 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x368>
 8f8:	sub	x0, x19, #0x1
 8fc:	add	x0, x0, x1
 900:	udiv	x0, x0, x1
 904:	mul	x0, x0, x1
 908:	cbnz	w20, a50 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x388>
 90c:	cmp	x0, #0x10
 910:	b.eq	aa0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3d8>  // b.none
 914:	cmp	x0, #0x10
 918:	b.hi	a70 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3a8>  // b.pmore
 91c:	cmp	x0, #0x4
 920:	b.eq	a8c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3c4>  // b.none
 924:	cmp	x0, #0x8
 928:	b.ne	ab4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3ec>  // b.any
 92c:	mov	w21, #0x0                   	// #0
 930:	mov	w0, #0x8                   	// #8
 934:	bfxil	w21, w0, #0, #8
 938:	ldp	x23, x24, [sp, #48]
 93c:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 940:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 944:	add	x3, x3, #0x0
 948:	mov	w2, #0x69                  	// #105
 94c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 950:	add	x1, x1, #0x0
 954:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 958:	add	x0, x0, #0x0
 95c:	bl	0 <__assert_fail>
 960:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 964:	add	x3, x3, #0x0
 968:	mov	w2, #0x69                  	// #105
 96c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 970:	add	x1, x1, #0x0
 974:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 978:	add	x0, x0, #0x0
 97c:	bl	0 <__assert_fail>
 980:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 984:	add	x3, x3, #0x0
 988:	mov	w2, #0x61                  	// #97
 98c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 990:	add	x1, x1, #0x0
 994:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 998:	add	x0, x0, #0x0
 99c:	bl	0 <__assert_fail>
 9a0:	cmp	w1, #0xa
 9a4:	b.ne	8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>  // b.any
 9a8:	ldr	x0, [x0, #32]
 9ac:	cmp	x0, #0x1
 9b0:	b.ne	8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>  // b.any
 9b4:	ldr	w0, [x24, #8]
 9b8:	lsr	w0, w0, #8
 9bc:	cmp	w0, #0x8
 9c0:	b.eq	9e8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>  // b.none
 9c4:	cmp	w0, #0x10
 9c8:	b.eq	9fc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x334>  // b.none
 9cc:	cmp	w0, #0x20
 9d0:	b.ne	a10 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x348>  // b.any
 9d4:	mov	w21, #0x0                   	// #0
 9d8:	mov	w0, #0x6                   	// #6
 9dc:	bfxil	w21, w0, #0, #8
 9e0:	ldp	x23, x24, [sp, #48]
 9e4:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 9e8:	mov	w21, #0x0                   	// #0
 9ec:	mov	w0, #0x4                   	// #4
 9f0:	bfxil	w21, w0, #0, #8
 9f4:	ldp	x23, x24, [sp, #48]
 9f8:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 9fc:	mov	w21, #0x0                   	// #0
 a00:	mov	w0, #0x5                   	// #5
 a04:	bfxil	w21, w0, #0, #8
 a08:	ldp	x23, x24, [sp, #48]
 a0c:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a10:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a14:	add	x3, x3, #0x0
 a18:	mov	w2, #0xcb                  	// #203
 a1c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a20:	add	x1, x1, #0x0
 a24:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a28:	add	x0, x0, #0x0
 a2c:	bl	0 <__assert_fail>
 a30:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a34:	add	x3, x3, #0x0
 a38:	mov	w2, #0xc7                  	// #199
 a3c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a40:	add	x1, x1, #0x0
 a44:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a48:	add	x0, x0, #0x0
 a4c:	bl	0 <__assert_fail>
 a50:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a54:	add	x3, x3, #0x0
 a58:	mov	w2, #0x7d                  	// #125
 a5c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a60:	add	x1, x1, #0x0
 a64:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a68:	add	x0, x0, #0x0
 a6c:	bl	0 <__assert_fail>
 a70:	mov	w21, #0x0                   	// #0
 a74:	mov	w1, #0xa                   	// #10
 a78:	bfxil	w21, w1, #0, #8
 a7c:	cmp	x0, #0x20
 a80:	b.ne	ab4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3ec>  // b.any
 a84:	ldp	x23, x24, [sp, #48]
 a88:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a8c:	mov	w21, #0x0                   	// #0
 a90:	mov	w0, #0x7                   	// #7
 a94:	bfxil	w21, w0, #0, #8
 a98:	ldp	x23, x24, [sp, #48]
 a9c:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 aa0:	mov	w21, #0x0                   	// #0
 aa4:	mov	w0, #0x9                   	// #9
 aa8:	bfxil	w21, w0, #0, #8
 aac:	ldp	x23, x24, [sp, #48]
 ab0:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 ab4:	mov	w0, #0x3                   	// #3
 ab8:	bfxil	w21, w0, #0, #8
 abc:	ldp	x23, x24, [sp, #48]
 ac0:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 ac4:	mov	x0, x20
 ac8:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 acc:	sub	w1, w0, #0x3
 ad0:	cmp	w0, #0x0
 ad4:	ccmp	w1, #0x2, #0x0, ne  // ne = any
 ad8:	b.ls	aec <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x424>  // b.plast
 adc:	mov	w21, #0x0                   	// #0
 ae0:	mov	w0, #0x12                  	// #18
 ae4:	bfxil	w21, w0, #0, #8
 ae8:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 aec:	mov	w21, #0x0                   	// #0
 af0:	mov	w0, #0x3                   	// #3
 af4:	bfxil	w21, w0, #0, #8
 af8:	b	710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 afc:	ldr	x24, [x0, #24]
 b00:	cbz	x24, 960 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x298>
 b04:	ldrb	w1, [x24, #8]
 b08:	cmp	w1, #0xb
 b0c:	b.ne	8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>  // b.any
 b10:	ldr	w1, [x24, #8]
 b14:	lsr	w1, w1, #8
 b18:	sub	w2, w1, #0x8
 b1c:	and	w2, w2, #0xfffffff7
 b20:	cmp	w1, #0x20
 b24:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 b28:	b.ne	8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>  // b.any
 b2c:	ldrb	w1, [x22, #16]
 b30:	sub	w2, w1, #0xb
 b34:	cmp	w2, #0x1
 b38:	b.hi	9a0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d8>  // b.pmore
 b3c:	mov	x0, x22
 b40:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 b44:	cbz	w0, 980 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b8>
 b48:	sub	w23, w0, #0x1
 b4c:	mov	w1, w23
 b50:	mov	x0, x22
 b54:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 b58:	cbnz	x0, 8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>
 b5c:	cbz	w23, 9b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2ec>
 b60:	mov	w20, #0x0                   	// #0
 b64:	mov	w1, w20
 b68:	mov	x0, x22
 b6c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 b70:	cbz	x0, 8c0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1f8>
 b74:	add	w20, w20, #0x1
 b78:	cmp	w23, w20
 b7c:	b.ne	b64 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x49c>  // b.any
 b80:	b	9b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2ec>

0000000000000b84 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 b84:	stp	x29, x30, [sp, #-80]!
 b88:	mov	x29, sp
 b8c:	stp	x19, x20, [sp, #16]
 b90:	stp	x21, x22, [sp, #32]
 b94:	mov	x22, x0
 b98:	mov	x19, x1
 b9c:	mov	w20, w2
 ba0:	mov	x21, x3
 ba4:	ldrh	w1, [x1, #34]
 ba8:	tbz	w1, #6, bd0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x4c>
 bac:	ldr	x0, [x0]
 bb0:	ldr	x4, [x0, #80]
 bb4:	mov	x1, x19
 bb8:	mov	x0, x22
 bbc:	blr	x4
 bc0:	ldp	x19, x20, [sp, #16]
 bc4:	ldp	x21, x22, [sp, #32]
 bc8:	ldp	x29, x30, [sp], #80
 bcc:	ret
 bd0:	ldrb	w0, [x19, #16]
 bd4:	cmp	w0, #0x3
 bd8:	b.eq	c6c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xe8>  // b.none
 bdc:	ldrb	w0, [x19, #16]
 be0:	cbnz	w0, c00 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x7c>
 be4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 be8:	add	x1, x1, #0x0
 bec:	mov	x2, #0x15                  	// #21
 bf0:	add	x0, x19, #0x70
 bf4:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 bf8:	and	w0, w0, #0xff
 bfc:	cbnz	w0, c4c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xc8>
 c00:	ldr	x0, [x22]
 c04:	ldr	x4, [x0, #168]
 c08:	mov	x3, x21
 c0c:	mov	w2, w20
 c10:	mov	x1, x19
 c14:	mov	x0, x22
 c18:	blr	x4
 c1c:	b	bc0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x3c>
 c20:	ldr	x0, [x22]
 c24:	ldr	x4, [x0, #80]
 c28:	mov	x3, x21
 c2c:	mov	w2, w20
 c30:	mov	x1, x19
 c34:	mov	x0, x22
 c38:	blr	x4
 c3c:	ldr	x23, [sp, #48]
 c40:	b	bc0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x3c>
 c44:	ldr	x23, [sp, #48]
 c48:	b	bdc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x58>
 c4c:	ldr	x0, [x22]
 c50:	ldr	x4, [x0, #80]
 c54:	mov	x3, x21
 c58:	mov	w2, w20
 c5c:	mov	x1, x19
 c60:	mov	x0, x22
 c64:	blr	x4
 c68:	b	bc0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x3c>
 c6c:	str	x23, [sp, #48]
 c70:	and	w23, w2, #0xff
 c74:	ldr	x0, [x19, #72]
 c78:	str	x0, [sp, #72]
 c7c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c80:	add	x1, x1, #0x0
 c84:	mov	x2, #0xb                   	// #11
 c88:	add	x0, sp, #0x48
 c8c:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c90:	and	w0, w0, #0xff
 c94:	cbz	w0, ca8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x124>
 c98:	sub	w0, w23, #0xd
 c9c:	and	w0, w0, #0xff
 ca0:	cmp	w0, #0x2
 ca4:	b.ls	c20 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x9c>  // b.plast
 ca8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 cac:	add	x1, x1, #0x0
 cb0:	mov	x2, #0xc                   	// #12
 cb4:	add	x0, sp, #0x48
 cb8:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 cbc:	ands	w0, w0, #0xff
 cc0:	ccmp	w23, #0x11, #0x0, ne  // ne = any
 cc4:	b.eq	c20 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x9c>  // b.none
 cc8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ccc:	add	x1, x1, #0x0
 cd0:	mov	x2, #0xd                   	// #13
 cd4:	add	x0, sp, #0x48
 cd8:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 cdc:	ands	w0, w0, #0xff
 ce0:	ccmp	w23, #0x12, #0x0, ne  // ne = any
 ce4:	b.eq	c20 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x9c>  // b.none
 ce8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 cec:	add	x1, x1, #0x0
 cf0:	mov	x2, #0xe                   	// #14
 cf4:	add	x0, sp, #0x48
 cf8:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 cfc:	and	w0, w0, #0xff
 d00:	cbz	w0, c44 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xc0>
 d04:	sub	w23, w23, #0x3
 d08:	and	w23, w23, #0xff
 d0c:	cmp	w23, #0x7
 d10:	b.ls	c20 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x9c>  // b.plast
 d14:	ldr	x23, [sp, #48]
 d18:	b	bdc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x58>

0000000000000d1c <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 d1c:	stp	x29, x30, [sp, #-48]!
 d20:	mov	x29, sp
 d24:	stp	x19, x20, [sp, #16]
 d28:	mov	x19, x1
 d2c:	ands	w2, w2, #0x70
 d30:	b.eq	da4 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x88>  // b.none
 d34:	stp	x21, x22, [sp, #32]
 d38:	mov	x22, x0
 d3c:	mov	x20, x3
 d40:	cmp	w2, #0x10
 d44:	b.ne	db4 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x98>  // b.any
 d48:	mov	w1, #0x1                   	// #1
 d4c:	ldr	x0, [x0, #800]
 d50:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 d54:	mov	x21, x0
 d58:	ldr	x0, [x20]
 d5c:	ldr	x3, [x0, #176]
 d60:	mov	x2, #0x0                   	// #0
 d64:	mov	x1, x21
 d68:	mov	x0, x20
 d6c:	blr	x3
 d70:	mov	x3, #0x0                   	// #0
 d74:	ldr	x2, [x22, #800]
 d78:	mov	w1, #0x0                   	// #0
 d7c:	mov	x0, x21
 d80:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 d84:	mov	x4, #0x0                   	// #0
 d88:	ldr	x3, [x22, #800]
 d8c:	mov	x2, x0
 d90:	mov	x1, x19
 d94:	mov	w0, #0x11                  	// #17
 d98:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 d9c:	mov	x19, x0
 da0:	ldp	x21, x22, [sp, #32]
 da4:	mov	x0, x19
 da8:	ldp	x19, x20, [sp, #16]
 dac:	ldp	x29, x30, [sp], #48
 db0:	ret
 db4:	mov	w1, #0x1                   	// #1
 db8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 dbc:	add	x0, x0, #0x0
 dc0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000dc4 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 dc4:	stp	x29, x30, [sp, #-48]!
 dc8:	mov	x29, sp
 dcc:	stp	x19, x20, [sp, #16]
 dd0:	str	x21, [sp, #32]
 dd4:	mov	x19, x0
 dd8:	mov	w20, w2
 ddc:	mov	x0, x3
 de0:	mov	x21, x5
 de4:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 de8:	mov	x3, #0x0                   	// #0
 dec:	ldr	x2, [x19, #800]
 df0:	mov	w1, #0x0                   	// #0
 df4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 df8:	mov	x3, x21
 dfc:	mov	w2, w20
 e00:	mov	x1, x0
 e04:	mov	x0, x19
 e08:	bl	d1c <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>
 e0c:	ldp	x19, x20, [sp, #16]
 e10:	ldr	x21, [sp, #32]
 e14:	ldp	x29, x30, [sp], #48
 e18:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x1, #8]
  1c:	sub	w0, w1, #0x1
  20:	and	w0, w0, #0xff
  24:	and	w2, w1, #0xfffffffd
  28:	and	w2, w2, #0xff
  2c:	cmp	w0, #0x5
  30:	ccmp	w1, #0xf, #0x4, hi  // hi = pmore
  34:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  38:	b.ne	8c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x8c>  // b.any
  3c:	ldrb	w2, [x19, #8]
  40:	cmp	w2, #0x9
  44:	b.eq	e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xe4>  // b.none
  48:	b.hi	104 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x104>  // b.pmore
  4c:	cmp	w2, #0x4
  50:	b.eq	24c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x24c>  // b.none
  54:	b.ls	d4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xd4>  // b.plast
  58:	cmp	w2, #0x6
  5c:	b.ls	240 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x240>  // b.plast
  60:	cmp	w2, #0x7
  64:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
  68:	mov	w1, #0x0                   	// #0
  6c:	mov	x0, x21
  70:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  74:	lsl	w0, w0, #3
  78:	mov	x1, #0x0                   	// #0
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	sub	w0, w1, #0xd
  90:	cmp	w0, #0x1
  94:	ccmp	w1, #0x10, #0x4, hi  // hi = pmore
  98:	b.ne	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.any
  9c:	mov	x1, #0x0                   	// #0
  a0:	mov	x0, x19
  a4:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  a8:	and	w0, w0, #0xff
  ac:	cbnz	w0, 3c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x3c>
  b0:	str	x23, [sp, #48]
  b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x271                 	// #625
  c0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	cmp	w2, #0x2
  d8:	b.eq	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.none
  dc:	cmp	w2, #0x3
  e0:	b.ne	f0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf0>  // b.any
  e4:	mov	x0, #0x40                  	// #64
  e8:	mov	x1, #0x0                   	// #0
  ec:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
  f0:	cmp	w2, #0x1
  f4:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
  f8:	mov	x0, #0x10                  	// #16
  fc:	mov	x1, #0x0                   	// #0
 100:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 104:	cmp	w2, #0xe
 108:	b.eq	1a4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1a4>  // b.none
 10c:	b.ls	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>  // b.plast
 110:	cmp	w2, #0xf
 114:	b.eq	188 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x188>  // b.none
 118:	cmp	w2, #0x10
 11c:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
 120:	ldr	x1, [x19, #32]
 124:	mov	x0, #0xffffffff            	// #4294967295
 128:	cmp	x1, x0
 12c:	b.hi	258 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x258>  // b.pmore
 130:	ldrb	w22, [x19, #40]
 134:	and	x20, x1, #0xffffffff
 138:	ldr	x1, [x19, #24]
 13c:	mov	x0, x21
 140:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 144:	tst	w1, #0xff
 148:	b.ne	27c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x27c>  // b.any
 14c:	mul	x0, x20, x0
 150:	mov	x1, #0x0                   	// #0
 154:	bfxil	x1, x22, #0, #8
 158:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 15c:	cmp	w2, #0xb
 160:	b.eq	224 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x224>  // b.none
 164:	cmp	w2, #0xd
 168:	b.ne	2a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x2a0>  // b.any
 16c:	mov	x1, x19
 170:	mov	x0, x21
 174:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 178:	ldr	x0, [x0]
 17c:	lsl	x0, x0, #3
 180:	mov	x1, #0x0                   	// #0
 184:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 188:	ldr	w1, [x19, #8]
 18c:	lsr	w1, w1, #8
 190:	mov	x0, x21
 194:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 198:	lsl	w0, w0, #3
 19c:	mov	x1, #0x0                   	// #0
 1a0:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 1a4:	str	x23, [sp, #48]
 1a8:	ldr	x20, [x19, #32]
 1ac:	ldr	x23, [x19, #24]
 1b0:	mov	x1, x23
 1b4:	mov	x0, x21
 1b8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1bc:	add	x19, x0, #0x7
 1c0:	lsr	x19, x19, #3
 1c4:	and	w22, w1, #0xff
 1c8:	mov	x1, x23
 1cc:	mov	x0, x21
 1d0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 1d4:	mov	w1, w0
 1d8:	cbz	w0, 204 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x204>
 1dc:	sub	x0, x19, #0x1
 1e0:	add	x0, x0, x1
 1e4:	udiv	x0, x0, x1
 1e8:	mul	x0, x0, x1
 1ec:	mul	x0, x0, x20
 1f0:	lsl	x0, x0, #3
 1f4:	mov	x1, #0x0                   	// #0
 1f8:	bfxil	x1, x22, #0, #8
 1fc:	ldr	x23, [sp, #48]
 200:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x3, x3, #0x0
 20c:	mov	w2, #0xc7                  	// #199
 210:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	add	x1, x1, #0x0
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <__assert_fail>
 224:	ldr	w0, [x19, #8]
 228:	lsr	w0, w0, #8
 22c:	mov	x1, #0x0                   	// #0
 230:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 234:	mov	x0, #0x20                  	// #32
 238:	mov	x1, #0x0                   	// #0
 23c:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 240:	mov	x0, #0x80                  	// #128
 244:	mov	x1, #0x0                   	// #0
 248:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 24c:	mov	x0, #0x50                  	// #80
 250:	mov	x1, #0x0                   	// #0
 254:	b	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>
 258:	str	x23, [sp, #48]
 25c:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	add	x3, x3, #0x0
 264:	mov	w2, #0x220                 	// #544
 268:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 26c:	add	x1, x1, #0x0
 270:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 274:	add	x0, x0, #0x0
 278:	bl	0 <__assert_fail>
 27c:	str	x23, [sp, #48]
 280:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 284:	add	x3, x3, #0x0
 288:	mov	w2, #0x7d                  	// #125
 28c:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 290:	add	x1, x1, #0x0
 294:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 298:	add	x0, x0, #0x0
 29c:	bl	0 <__assert_fail>
 2a0:	str	x23, [sp, #48]
 2a4:	mov	w2, #0x298                 	// #664
 2a8:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2ac:	add	x1, x1, #0x0
 2b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x8
      10:	ldr	x0, [x0]
      14:	ldr	x2, [x0]
      18:	ldr	x2, [x2, #64]
      1c:	blr	x2
      20:	mov	x0, x19
      24:	ldr	x19, [sp, #16]
      28:	ldp	x29, x30, [sp], #32
      2c:	ret

0000000000000030 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>:
      30:	cmp	w2, #0x2
      34:	b.eq	58 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x28>  // b.none
      38:	cmp	w2, #0x3
      3c:	b.eq	48 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x18>  // b.none
      40:	cmp	w2, #0x1
      44:	b.eq	50 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x20>  // b.none
      48:	mov	w0, #0x0                   	// #0
      4c:	ret
      50:	str	x1, [x0]
      54:	b	48 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x18>
      58:	ldr	x1, [x1]
      5c:	str	x1, [x0]
      60:	b	48 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x18>

0000000000000064 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
      64:	stp	x29, x30, [sp, #-32]!
      68:	mov	x29, sp
      6c:	str	x19, [sp, #16]
      70:	mov	x19, x8
      74:	ldr	x0, [x1, #40]
      78:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
      7c:	mov	x1, x0
      80:	mov	x0, x19
      84:	bl	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>
      88:	mov	x0, x19
      8c:	ldr	x19, [sp, #16]
      90:	ldp	x29, x30, [sp], #32
      94:	ret

0000000000000098 <_ZN4llvm13TargetMachineD1Ev>:
      98:	stp	x29, x30, [sp, #-48]!
      9c:	mov	x29, sp
      a0:	stp	x19, x20, [sp, #16]
      a4:	str	x21, [sp, #32]
      a8:	mov	x19, x0
      ac:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
      b0:	ldr	x0, [x0]
      b4:	add	x0, x0, #0x10
      b8:	str	x0, [x19]
      bc:	ldr	x20, [x19, #904]
      c0:	ldr	x21, [x19, #912]
      c4:	cmp	x20, x21
      c8:	b.ne	24c <_ZN4llvm13TargetMachineD1Ev+0x1b4>  // b.any
      cc:	ldr	x0, [x19, #904]
      d0:	cbz	x0, d8 <_ZN4llvm13TargetMachineD1Ev+0x40>
      d4:	bl	0 <_ZdlPv>
      d8:	ldr	x0, [x19, #872]
      dc:	add	x1, x19, #0x378
      e0:	cmp	x0, x1
      e4:	b.eq	ec <_ZN4llvm13TargetMachineD1Ev+0x54>  // b.none
      e8:	bl	0 <_ZdlPv>
      ec:	ldr	x0, [x19, #840]
      f0:	add	x1, x19, #0x358
      f4:	cmp	x0, x1
      f8:	b.eq	100 <_ZN4llvm13TargetMachineD1Ev+0x68>  // b.none
      fc:	bl	0 <_ZdlPv>
     100:	ldr	x20, [x19, #752]
     104:	ldr	x21, [x19, #760]
     108:	cmp	x20, x21
     10c:	b.ne	270 <_ZN4llvm13TargetMachineD1Ev+0x1d8>  // b.any
     110:	ldr	x0, [x19, #752]
     114:	cbz	x0, 11c <_ZN4llvm13TargetMachineD1Ev+0x84>
     118:	bl	0 <_ZdlPv>
     11c:	ldr	x0, [x19, #720]
     120:	add	x1, x19, #0x2e0
     124:	cmp	x0, x1
     128:	b.eq	130 <_ZN4llvm13TargetMachineD1Ev+0x98>  // b.none
     12c:	bl	0 <_ZdlPv>
     130:	ldr	x0, [x19, #688]
     134:	add	x1, x19, #0x2c0
     138:	cmp	x0, x1
     13c:	b.eq	144 <_ZN4llvm13TargetMachineD1Ev+0xac>  // b.none
     140:	bl	0 <_ZdlPv>
     144:	ldr	x0, [x19, #608]
     148:	cbz	x0, 158 <_ZN4llvm13TargetMachineD1Ev+0xc0>
     14c:	ldr	x1, [x0]
     150:	ldr	x1, [x1, #8]
     154:	blr	x1
     158:	ldr	x0, [x19, #600]
     15c:	cbz	x0, 168 <_ZN4llvm13TargetMachineD1Ev+0xd0>
     160:	mov	x1, #0x20                  	// #32
     164:	bl	0 <_ZdlPvm>
     168:	ldr	x20, [x19, #592]
     16c:	cbz	x20, 1d4 <_ZN4llvm13TargetMachineD1Ev+0x13c>
     170:	ldr	w1, [x20, #216]
     174:	cbz	w1, 18c <_ZN4llvm13TargetMachineD1Ev+0xf4>
     178:	ldr	x0, [x20, #200]
     17c:	add	x1, x0, w1, uxtw #3
     180:	add	x0, x0, #0x8
     184:	cmp	x1, x0
     188:	b.ne	180 <_ZN4llvm13TargetMachineD1Ev+0xe8>  // b.any
     18c:	ldr	w1, [x20, #216]
     190:	lsl	x1, x1, #3
     194:	ldr	x0, [x20, #200]
     198:	bl	0 <_ZdlPvm>
     19c:	ldr	w1, [x20, #184]
     1a0:	cbz	w1, 1b8 <_ZN4llvm13TargetMachineD1Ev+0x120>
     1a4:	ldr	x0, [x20, #168]
     1a8:	add	x1, x0, w1, uxtw #3
     1ac:	add	x0, x0, #0x8
     1b0:	cmp	x1, x0
     1b4:	b.ne	1ac <_ZN4llvm13TargetMachineD1Ev+0x114>  // b.any
     1b8:	ldr	w1, [x20, #184]
     1bc:	lsl	x1, x1, #3
     1c0:	ldr	x0, [x20, #168]
     1c4:	bl	0 <_ZdlPvm>
     1c8:	mov	x1, #0xe0                  	// #224
     1cc:	mov	x0, x20
     1d0:	bl	0 <_ZdlPvm>
     1d4:	ldr	x0, [x19, #584]
     1d8:	cbz	x0, 1e8 <_ZN4llvm13TargetMachineD1Ev+0x150>
     1dc:	ldr	x1, [x0]
     1e0:	ldr	x1, [x1, #8]
     1e4:	blr	x1
     1e8:	ldr	x0, [x19, #536]
     1ec:	add	x1, x19, #0x228
     1f0:	cmp	x0, x1
     1f4:	b.eq	1fc <_ZN4llvm13TargetMachineD1Ev+0x164>  // b.none
     1f8:	bl	0 <_ZdlPv>
     1fc:	ldr	x0, [x19, #504]
     200:	add	x1, x19, #0x208
     204:	cmp	x0, x1
     208:	b.eq	210 <_ZN4llvm13TargetMachineD1Ev+0x178>  // b.none
     20c:	bl	0 <_ZdlPv>
     210:	ldr	x0, [x19, #448]
     214:	add	x1, x19, #0x1d0
     218:	cmp	x0, x1
     21c:	b.eq	224 <_ZN4llvm13TargetMachineD1Ev+0x18c>  // b.none
     220:	bl	0 <_ZdlPv>
     224:	add	x0, x19, #0x10
     228:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
     22c:	ldp	x19, x20, [sp, #16]
     230:	ldr	x21, [sp, #32]
     234:	ldp	x29, x30, [sp], #48
     238:	ret
     23c:	bl	0 <_ZdlPv>
     240:	add	x20, x20, #0x20
     244:	cmp	x21, x20
     248:	b.eq	cc <_ZN4llvm13TargetMachineD1Ev+0x34>  // b.none
     24c:	mov	x1, x20
     250:	ldr	x0, [x1], #16
     254:	cmp	x0, x1
     258:	b.ne	23c <_ZN4llvm13TargetMachineD1Ev+0x1a4>  // b.any
     25c:	b	240 <_ZN4llvm13TargetMachineD1Ev+0x1a8>
     260:	bl	0 <_ZdlPv>
     264:	add	x20, x20, #0x20
     268:	cmp	x21, x20
     26c:	b.eq	110 <_ZN4llvm13TargetMachineD1Ev+0x78>  // b.none
     270:	mov	x1, x20
     274:	ldr	x0, [x1], #16
     278:	cmp	x0, x1
     27c:	b.ne	260 <_ZN4llvm13TargetMachineD1Ev+0x1c8>  // b.any
     280:	b	264 <_ZN4llvm13TargetMachineD1Ev+0x1cc>

0000000000000284 <_ZN4llvm13TargetMachineD0Ev>:
     284:	stp	x29, x30, [sp, #-32]!
     288:	mov	x29, sp
     28c:	str	x19, [sp, #16]
     290:	mov	x19, x0
     294:	bl	98 <_ZN4llvm13TargetMachineD1Ev>
     298:	mov	x1, #0x3a0                 	// #928
     29c:	mov	x0, x19
     2a0:	bl	0 <_ZdlPvm>
     2a4:	ldr	x19, [sp, #16]
     2a8:	ldp	x29, x30, [sp], #32
     2ac:	ret

00000000000002b0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
     2b0:	stp	x29, x30, [sp, #-64]!
     2b4:	mov	x29, sp
     2b8:	stp	x19, x20, [sp, #16]
     2bc:	mov	x19, x0
     2c0:	add	x20, x1, #0x70
     2c4:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     2c8:	add	x1, x1, #0x0
     2cc:	mov	x2, #0xe                   	// #14
     2d0:	mov	x0, x20
     2d4:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     2d8:	and	w0, w0, #0xff
     2dc:	cbnz	w0, 390 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xe0>
     2e0:	ldrb	w0, [x19, #624]
     2e4:	ldrb	w1, [x19, #776]
     2e8:	ubfx	x0, x0, #1, #1
     2ec:	bfi	w1, w0, #1, #1
     2f0:	strb	w1, [x19, #776]
     2f4:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     2f8:	add	x1, x1, #0x0
     2fc:	mov	x2, #0xf                   	// #15
     300:	mov	x0, x20
     304:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     308:	and	w0, w0, #0xff
     30c:	cbnz	w0, 3ec <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x13c>
     310:	ldrb	w0, [x19, #624]
     314:	ldrb	w1, [x19, #776]
     318:	ubfx	x0, x0, #2, #1
     31c:	bfi	w1, w0, #2, #1
     320:	strb	w1, [x19, #776]
     324:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     328:	add	x1, x1, #0x0
     32c:	mov	x2, #0xf                   	// #15
     330:	mov	x0, x20
     334:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     338:	and	w0, w0, #0xff
     33c:	cbnz	w0, 448 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x198>
     340:	ldrb	w0, [x19, #624]
     344:	ldrb	w1, [x19, #776]
     348:	ubfx	x0, x0, #3, #1
     34c:	bfi	w1, w0, #3, #1
     350:	strb	w1, [x19, #776]
     354:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     358:	add	x1, x1, #0x0
     35c:	mov	x2, #0x17                  	// #23
     360:	mov	x0, x20
     364:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     368:	and	w0, w0, #0xff
     36c:	cbnz	w0, 4a4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1f4>
     370:	ldrb	w0, [x19, #624]
     374:	ldrb	w1, [x19, #776]
     378:	ubfx	x0, x0, #5, #1
     37c:	bfi	w1, w0, #5, #1
     380:	strb	w1, [x19, #776]
     384:	ldp	x19, x20, [sp, #16]
     388:	ldp	x29, x30, [sp], #64
     38c:	ret
     390:	adrp	x2, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     394:	add	x2, x2, #0x0
     398:	mov	x3, #0xe                   	// #14
     39c:	mov	w1, #0xffffffff            	// #-1
     3a0:	mov	x0, x20
     3a4:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     3a8:	str	x0, [sp, #32]
     3ac:	add	x0, sp, #0x20
     3b0:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     3b4:	mov	w2, #0x0                   	// #0
     3b8:	cmp	x1, #0x4
     3bc:	b.eq	3d0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x120>  // b.none
     3c0:	ldrb	w0, [x19, #776]
     3c4:	bfi	w0, w2, #1, #1
     3c8:	strb	w0, [x19, #776]
     3cc:	b	2f4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x44>
     3d0:	mov	x2, #0x4                   	// #4
     3d4:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     3d8:	add	x1, x1, #0x0
     3dc:	bl	0 <memcmp>
     3e0:	cmp	w0, #0x0
     3e4:	cset	w2, eq  // eq = none
     3e8:	b	3c0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x110>
     3ec:	adrp	x2, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     3f0:	add	x2, x2, #0x0
     3f4:	mov	x3, #0xf                   	// #15
     3f8:	mov	w1, #0xffffffff            	// #-1
     3fc:	mov	x0, x20
     400:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     404:	str	x0, [sp, #40]
     408:	add	x0, sp, #0x28
     40c:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     410:	mov	w2, #0x0                   	// #0
     414:	cmp	x1, #0x4
     418:	b.eq	42c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x17c>  // b.none
     41c:	ldrb	w0, [x19, #776]
     420:	bfi	w0, w2, #2, #1
     424:	strb	w0, [x19, #776]
     428:	b	324 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x74>
     42c:	mov	x2, #0x4                   	// #4
     430:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     434:	add	x1, x1, #0x0
     438:	bl	0 <memcmp>
     43c:	cmp	w0, #0x0
     440:	cset	w2, eq  // eq = none
     444:	b	41c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x16c>
     448:	adrp	x2, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     44c:	add	x2, x2, #0x0
     450:	mov	x3, #0xf                   	// #15
     454:	mov	w1, #0xffffffff            	// #-1
     458:	mov	x0, x20
     45c:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     460:	str	x0, [sp, #48]
     464:	add	x0, sp, #0x30
     468:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     46c:	mov	w2, #0x0                   	// #0
     470:	cmp	x1, #0x4
     474:	b.eq	488 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1d8>  // b.none
     478:	ldrb	w0, [x19, #776]
     47c:	bfi	w0, w2, #3, #1
     480:	strb	w0, [x19, #776]
     484:	b	354 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa4>
     488:	mov	x2, #0x4                   	// #4
     48c:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     490:	add	x1, x1, #0x0
     494:	bl	0 <memcmp>
     498:	cmp	w0, #0x0
     49c:	cset	w2, eq  // eq = none
     4a0:	b	478 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1c8>
     4a4:	adrp	x2, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     4a8:	add	x2, x2, #0x0
     4ac:	mov	x3, #0x17                  	// #23
     4b0:	mov	w1, #0xffffffff            	// #-1
     4b4:	mov	x0, x20
     4b8:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     4bc:	str	x0, [sp, #56]
     4c0:	add	x0, sp, #0x38
     4c4:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     4c8:	mov	w2, #0x0                   	// #0
     4cc:	cmp	x1, #0x4
     4d0:	b.eq	4e4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x234>  // b.none
     4d4:	ldrb	w0, [x19, #776]
     4d8:	bfi	w0, w2, #5, #1
     4dc:	strb	w0, [x19, #776]
     4e0:	b	384 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xd4>
     4e4:	mov	x2, #0x4                   	// #4
     4e8:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     4ec:	add	x1, x1, #0x0
     4f0:	bl	0 <memcmp>
     4f4:	cmp	w0, #0x0
     4f8:	cset	w2, eq  // eq = none
     4fc:	b	4d4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x224>

0000000000000500 <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
     500:	ldr	w0, [x0, #568]
     504:	ret

0000000000000508 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
     508:	stp	x29, x30, [sp, #-16]!
     50c:	mov	x29, sp
     510:	bl	500 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     514:	cmp	w0, #0x1
     518:	cset	w0, eq  // eq = none
     51c:	ldp	x29, x30, [sp], #16
     520:	ret

0000000000000524 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
     524:	ldr	w0, [x0, #572]
     528:	ret

000000000000052c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
     52c:	stp	x29, x30, [sp, #-80]!
     530:	mov	x29, sp
     534:	stp	x19, x20, [sp, #16]
     538:	stp	x21, x22, [sp, #32]
     53c:	stp	x23, x24, [sp, #48]
     540:	str	x25, [sp, #64]
     544:	mov	x21, x0
     548:	mov	x22, x1
     54c:	mov	x19, x2
     550:	cbz	x2, 694 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x168>
     554:	ldrb	w0, [x2, #33]
     558:	tbnz	w0, #6, 7c0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x294>
     55c:	mov	x0, x1
     560:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
     564:	mov	x0, x21
     568:	bl	500 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     56c:	mov	w23, w0
     570:	ldrb	w2, [x19, #33]
     574:	and	w2, w2, #0x3
     578:	cmp	w2, #0x1
     57c:	b.eq	818 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2ec>  // b.none
     580:	ldr	w0, [x21, #492]
     584:	mov	w25, #0x0                   	// #0
     588:	cmp	w0, #0xf
     58c:	b.eq	6ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x180>  // b.none
     590:	cmp	x19, #0x0
     594:	cset	w20, ne  // ne = any
     598:	ldr	w0, [x21, #500]
     59c:	cmp	w0, #0x1
     5a0:	cset	w24, eq  // eq = none
     5a4:	cmp	w24, #0x0
     5a8:	ccmp	w20, #0x0, #0x4, ne  // ne = any
     5ac:	b.ne	844 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x318>  // b.any
     5b0:	cbnz	w24, 7e8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2bc>
     5b4:	ldr	w0, [x21, #492]
     5b8:	cmp	w0, #0xf
     5bc:	b.eq	7f0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2c4>  // b.none
     5c0:	cbz	w20, 5f0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc4>
     5c4:	mov	x0, x21
     5c8:	bl	508 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
     5cc:	and	w0, w0, #0xff
     5d0:	cbz	w0, 5e4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xb8>
     5d4:	ldrb	w0, [x19, #32]
     5d8:	and	w0, w0, #0xf
     5dc:	cmp	w0, #0x9
     5e0:	b.eq	7f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2cc>  // b.none
     5e4:	ldrb	w0, [x19, #32]
     5e8:	tst	w0, #0x30
     5ec:	b.ne	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.any
     5f0:	ldr	w0, [x21, #500]
     5f4:	cmp	w0, #0x3
     5f8:	b.eq	708 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1dc>  // b.none
     5fc:	cmp	w0, #0x5
     600:	b.eq	808 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2dc>  // b.none
     604:	sub	w0, w0, #0x2
     608:	tst	w0, #0xfffffffd
     60c:	b.ne	76c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x240>  // b.any
     610:	cmp	w23, #0x2
     614:	b.eq	78c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x260>  // b.none
     618:	cbnz	w23, 7ac <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x280>
     61c:	cbz	w20, 820 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2f4>
     620:	ldrb	w0, [x19, #32]
     624:	and	w0, w0, #0xf
     628:	cmp	w0, #0x1
     62c:	b.eq	640 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x114>  // b.none
     630:	mov	x0, x19
     634:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     638:	and	w0, w0, #0xff
     63c:	cbz	w0, 7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     640:	ldrb	w0, [x19, #16]
     644:	cbnz	w0, 660 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x134>
     648:	mov	w1, #0x22                  	// #34
     64c:	add	x0, x19, #0x70
     650:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
     654:	and	w0, w0, #0xff
     658:	mov	w20, #0x0                   	// #0
     65c:	cbnz	w0, 7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     660:	ldr	w0, [x21, #480]
     664:	sub	w0, w0, #0x10
     668:	mov	w20, #0x0                   	// #0
     66c:	cmp	w0, #0x2
     670:	b.ls	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.plast
     674:	cbnz	w25, 688 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
     678:	ldrb	w0, [x19, #33]
     67c:	mov	w20, w25
     680:	tst	x0, #0x1c
     684:	b.ne	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.any
     688:	cmp	w23, #0x0
     68c:	cset	w20, eq  // eq = none
     690:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     694:	mov	x0, x1
     698:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
     69c:	ands	w20, w0, #0xff
     6a0:	b.eq	884 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x358>  // b.none
     6a4:	mov	w20, #0x0                   	// #0
     6a8:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     6ac:	ldr	w0, [x21, #496]
     6b0:	cmp	w0, #0x1
     6b4:	b.ne	590 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.any
     6b8:	cmp	x19, #0x0
     6bc:	cset	w20, ne  // ne = any
     6c0:	ldr	w0, [x21, #500]
     6c4:	cmp	w0, #0x1
     6c8:	cset	w24, eq  // eq = none
     6cc:	csel	w25, w20, wzr, eq  // eq = none
     6d0:	cbz	w25, 5b0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x84>
     6d4:	ldrb	w0, [x19, #32]
     6d8:	and	w0, w0, #0xf
     6dc:	cmp	w0, #0x1
     6e0:	b.eq	834 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x308>  // b.none
     6e4:	mov	x0, x19
     6e8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     6ec:	ands	w25, w0, #0xff
     6f0:	b.eq	590 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.none
     6f4:	ldrb	w0, [x19, #16]
     6f8:	cmp	w0, #0x3
     6fc:	b.eq	7e0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2b4>  // b.none
     700:	mov	w25, #0x0                   	// #0
     704:	b	590 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>
     708:	cbz	w23, 800 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2d4>
     70c:	cbz	w20, 7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     710:	ldrb	w0, [x19, #32]
     714:	and	w0, w0, #0xf
     718:	mov	w20, #0x0                   	// #0
     71c:	cmp	w0, #0x1
     720:	b.eq	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.none
     724:	mov	x0, x19
     728:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     72c:	ands	w20, w0, #0xff
     730:	b.ne	764 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x238>  // b.any
     734:	ldrb	w0, [x19, #32]
     738:	and	w0, w0, #0xf
     73c:	sub	w1, w0, #0x4
     740:	cmp	w1, #0x1
     744:	ccmp	w0, #0x2, #0x4, hi  // hi = pmore
     748:	b.eq	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.none
     74c:	add	w1, w0, #0x7
     750:	and	w1, w1, #0xf
     754:	cmp	w1, #0x1
     758:	ccmp	w0, #0x3, #0x4, hi  // hi = pmore
     75c:	cset	w20, ne  // ne = any
     760:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     764:	mov	w20, #0x0                   	// #0
     768:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     76c:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     770:	add	x3, x3, #0x0
     774:	mov	w2, #0xab                  	// #171
     778:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     77c:	add	x1, x1, #0x0
     780:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     784:	add	x0, x0, #0x0
     788:	bl	0 <__assert_fail>
     78c:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     790:	add	x3, x3, #0x0
     794:	mov	w2, #0xac                  	// #172
     798:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     79c:	add	x1, x1, #0x0
     7a0:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     7a4:	add	x0, x0, #0x0
     7a8:	bl	0 <__assert_fail>
     7ac:	mov	x0, x22
     7b0:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
     7b4:	cbnz	w0, 61c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xf0>
     7b8:	mov	w20, #0x0                   	// #0
     7bc:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     7c0:	mov	w20, #0x1                   	// #1
     7c4:	mov	w0, w20
     7c8:	ldp	x19, x20, [sp, #16]
     7cc:	ldp	x21, x22, [sp, #32]
     7d0:	ldp	x23, x24, [sp, #48]
     7d4:	ldr	x25, [sp, #64]
     7d8:	ldp	x29, x30, [sp], #80
     7dc:	ret
     7e0:	mov	w20, #0x0                   	// #0
     7e4:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     7e8:	mov	w20, w24
     7ec:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     7f0:	mov	w20, #0x1                   	// #1
     7f4:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     7f8:	mov	w20, w24
     7fc:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     800:	mov	w20, #0x1                   	// #1
     804:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     808:	mov	w20, #0x0                   	// #0
     80c:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     810:	mov	w20, #0x1                   	// #1
     814:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     818:	mov	w20, #0x0                   	// #0
     81c:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     820:	ldr	w0, [x21, #480]
     824:	sub	w0, w0, #0x10
     828:	cmp	w0, #0x2
     82c:	b.ls	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.plast
     830:	b	688 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
     834:	ldrb	w0, [x19, #16]
     838:	mov	w20, #0x0                   	// #0
     83c:	cmp	w0, #0x3
     840:	b.eq	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>  // b.none
     844:	ldrb	w0, [x19, #32]
     848:	and	w0, w0, #0xf
     84c:	cmp	w0, #0x9
     850:	cset	w20, ne  // ne = any
     854:	b	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x298>
     858:	ldr	w0, [x21, #496]
     85c:	mov	w25, #0x1                   	// #1
     860:	cmp	w0, #0x1
     864:	b.ne	590 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x64>  // b.any
     868:	cmp	x19, #0x0
     86c:	cset	w20, ne  // ne = any
     870:	ldr	w0, [x21, #500]
     874:	cmp	w0, #0x1
     878:	cset	w24, eq  // eq = none
     87c:	mov	w25, #0x1                   	// #1
     880:	b	5b0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x84>
     884:	mov	x0, x21
     888:	bl	500 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     88c:	mov	w23, w0
     890:	ldr	w0, [x21, #492]
     894:	cmp	w0, #0xf
     898:	b.eq	858 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x32c>  // b.none
     89c:	ldr	w0, [x21, #500]
     8a0:	cmp	w0, #0x1
     8a4:	b.eq	810 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2e4>  // b.none
     8a8:	mov	w25, #0x1                   	// #1
     8ac:	b	5f0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xc4>

00000000000008b0 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
     8b0:	mov	x2, x0
     8b4:	ldrb	w1, [x0, #801]
     8b8:	ubfx	x0, x1, #6, #1
     8bc:	tbnz	w1, #7, 8ec <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>
     8c0:	ldr	w1, [x2, #496]
     8c4:	mov	w0, #0x1                   	// #1
     8c8:	cmp	w1, #0xa
     8cc:	b.eq	8ec <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
     8d0:	ldr	w2, [x2, #492]
     8d4:	cmp	w2, #0xd
     8d8:	b.eq	8ec <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
     8dc:	cmp	w1, #0x10
     8e0:	cset	w0, eq  // eq = none
     8e4:	cmp	w2, #0xf
     8e8:	csel	w0, w0, wzr, eq  // eq = none
     8ec:	ret

00000000000008f0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
     8f0:	stp	x29, x30, [sp, #-48]!
     8f4:	mov	x29, sp
     8f8:	stp	x19, x20, [sp, #16]
     8fc:	stp	x21, x22, [sp, #32]
     900:	mov	x20, x0
     904:	mov	x19, x1
     908:	ldr	x0, [x1, #40]
     90c:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
     910:	mov	w22, w0
     914:	mov	x0, x20
     918:	bl	500 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     91c:	cmp	w0, #0x1
     920:	cset	w21, eq  // eq = none
     924:	cmp	w22, #0x0
     928:	csel	w21, w21, wzr, eq  // eq = none
     92c:	mov	x2, x19
     930:	ldr	x1, [x19, #40]
     934:	mov	x0, x20
     938:	bl	52c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
     93c:	and	w0, w0, #0xff
     940:	cbz	w21, 97c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x8c>
     944:	ldrb	w1, [x19, #33]
     948:	ubfx	x1, x1, #2, #3
     94c:	cmp	w1, #0x2
     950:	b.eq	9cc <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xdc>  // b.none
     954:	cmp	w1, #0x2
     958:	b.ls	9dc <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xec>  // b.plast
     95c:	cmp	w1, #0x3
     960:	b.eq	9d4 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xe4>  // b.none
     964:	mov	w2, #0x3                   	// #3
     968:	cmp	w1, #0x4
     96c:	b.ne	9b4 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xc4>  // b.any
     970:	cmp	w2, w0
     974:	csel	w0, w0, w2, le
     978:	b	9e0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xf0>
     97c:	cmp	w0, #0x0
     980:	cset	w0, ne  // ne = any
     984:	add	w0, w0, #0x2
     988:	ldrb	w1, [x19, #33]
     98c:	ubfx	x1, x1, #2, #3
     990:	cmp	w1, #0x2
     994:	b.ne	954 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x64>  // b.any
     998:	b	9e0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xf0>
     99c:	mov	w2, #0x50                  	// #80
     9a0:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     9a4:	add	x1, x1, #0x0
     9a8:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     9ac:	add	x0, x0, #0x0
     9b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     9b4:	mov	w2, #0x5b                  	// #91
     9b8:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     9bc:	add	x1, x1, #0x0
     9c0:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     9c4:	add	x0, x0, #0x0
     9c8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     9cc:	mov	w2, #0x1                   	// #1
     9d0:	b	970 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x80>
     9d4:	mov	w2, #0x2                   	// #2
     9d8:	b	970 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x80>
     9dc:	cbz	w1, 99c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xac>
     9e0:	ldp	x19, x20, [sp, #16]
     9e4:	ldp	x21, x22, [sp, #32]
     9e8:	ldp	x29, x30, [sp], #48
     9ec:	ret

00000000000009f0 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
     9f0:	ldr	w0, [x0, #576]
     9f4:	ret

00000000000009f8 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
     9f8:	str	w1, [x0, #576]
     9fc:	ret

0000000000000a00 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
     a00:	stp	x29, x30, [sp, #-48]!
     a04:	mov	x29, sp
     a08:	stp	x19, x20, [sp, #16]
     a0c:	str	x21, [sp, #32]
     a10:	mov	x20, x0
     a14:	mov	x21, x1
     a18:	mov	x19, x2
     a1c:	mov	x0, x3
     a20:	tst	w4, #0xff
     a24:	b.ne	a38 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x38>  // b.any
     a28:	ldrb	w2, [x2, #32]
     a2c:	and	w2, w2, #0xf
     a30:	cmp	w2, #0x8
     a34:	b.eq	a58 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x58>  // b.none
     a38:	mov	w3, #0x0                   	// #0
     a3c:	mov	x2, x19
     a40:	mov	x1, x21
     a44:	bl	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
     a48:	ldp	x19, x20, [sp, #16]
     a4c:	ldr	x21, [sp, #32]
     a50:	ldp	x29, x30, [sp], #48
     a54:	ret
     a58:	ldr	x0, [x20]
     a5c:	ldr	x1, [x0, #24]
     a60:	mov	x0, x20
     a64:	blr	x1
     a68:	ldr	x1, [x0]
     a6c:	ldr	x4, [x1, #56]
     a70:	mov	x3, x20
     a74:	mov	x2, x19
     a78:	mov	x1, x21
     a7c:	blr	x4
     a80:	b	a48 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x48>

0000000000000a84 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
     a84:	stp	x29, x30, [sp, #-240]!
     a88:	mov	x29, sp
     a8c:	stp	x19, x20, [sp, #16]
     a90:	stp	x21, x22, [sp, #32]
     a94:	str	x23, [sp, #48]
     a98:	mov	x20, x0
     a9c:	mov	x22, x1
     aa0:	ldr	x1, [x0]
     aa4:	ldr	x1, [x1, #24]
     aa8:	blr	x1
     aac:	mov	x19, x0
     ab0:	add	x21, sp, #0x48
     ab4:	add	x23, sp, #0x58
     ab8:	str	x23, [sp, #72]
     abc:	str	wzr, [sp, #80]
     ac0:	mov	w0, #0x80                  	// #128
     ac4:	str	w0, [sp, #84]
     ac8:	mov	w4, #0x0                   	// #0
     acc:	ldr	x3, [x19, #808]
     ad0:	mov	x2, x22
     ad4:	mov	x1, x21
     ad8:	mov	x0, x20
     adc:	bl	a00 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
     ae0:	str	xzr, [sp, #224]
     ae4:	mov	w0, #0x6                   	// #6
     ae8:	strb	w0, [sp, #232]
     aec:	mov	w0, #0x1                   	// #1
     af0:	strb	w0, [sp, #233]
     af4:	str	x21, [sp, #216]
     af8:	add	x1, sp, #0xd8
     afc:	ldr	x0, [x19, #800]
     b00:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
     b04:	mov	x19, x0
     b08:	ldr	x0, [sp, #72]
     b0c:	cmp	x0, x23
     b10:	b.eq	b18 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x94>  // b.none
     b14:	bl	0 <free>
     b18:	mov	x0, x19
     b1c:	ldp	x19, x20, [sp, #16]
     b20:	ldp	x21, x22, [sp, #32]
     b24:	ldr	x23, [sp, #48]
     b28:	ldp	x29, x30, [sp], #240
     b2c:	ret

0000000000000b30 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
     b30:	stp	x29, x30, [sp, #-64]!
     b34:	mov	x29, sp
     b38:	str	x19, [sp, #16]
     b3c:	mov	x19, x8
     b40:	str	x0, [sp, #32]
     b44:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     b48:	add	x0, x0, #0x0
     b4c:	str	x0, [sp, #56]
     b50:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     b54:	add	x0, x0, #0x0
     b58:	str	x0, [sp, #48]
     b5c:	add	x1, sp, #0x20
     b60:	mov	x0, x8
     b64:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
     b68:	ldr	x3, [sp, #48]
     b6c:	cbz	x3, b80 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x50>
     b70:	add	x0, sp, #0x20
     b74:	mov	w2, #0x3                   	// #3
     b78:	mov	x1, x0
     b7c:	blr	x3
     b80:	mov	x0, x19
     b84:	ldr	x19, [sp, #16]
     b88:	ldp	x29, x30, [sp], #64
     b8c:	ret

0000000000000b90 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
     b90:	stp	x29, x30, [sp, #-80]!
     b94:	mov	x29, sp
     b98:	stp	x19, x20, [sp, #16]
     b9c:	stp	x21, x22, [sp, #32]
     ba0:	stp	x23, x24, [sp, #48]
     ba4:	stp	x25, x26, [sp, #64]
     ba8:	mov	x19, x0
     bac:	mov	x7, x1
     bb0:	mov	x1, x2
     bb4:	mov	x2, x3
     bb8:	mov	x21, x4
     bbc:	mov	x23, x5
     bc0:	mov	x24, x6
     bc4:	ldr	x25, [sp, #80]
     bc8:	ldr	x26, [sp, #88]
     bcc:	ldr	x20, [sp, #96]
     bd0:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     bd4:	ldr	x0, [x0]
     bd8:	add	x0, x0, #0x10
     bdc:	str	x0, [x19]
     be0:	str	x7, [x19, #8]
     be4:	strb	wzr, [x19, #24]
     be8:	strb	wzr, [x19, #25]
     bec:	strb	wzr, [x19, #32]
     bf0:	strb	wzr, [x19, #33]
     bf4:	add	x0, x19, #0x40
     bf8:	str	x0, [x19, #48]
     bfc:	str	wzr, [x19, #56]
     c00:	mov	w3, #0x8                   	// #8
     c04:	str	w3, [x19, #60]
     c08:	add	x0, x19, #0x58
     c0c:	str	x0, [x19, #72]
     c10:	str	wzr, [x19, #80]
     c14:	mov	w0, #0x10                  	// #16
     c18:	str	w0, [x19, #84]
     c1c:	add	x0, x19, #0xe8
     c20:	str	x0, [x19, #216]
     c24:	str	xzr, [x19, #224]
     c28:	strb	wzr, [x19, #232]
     c2c:	add	x0, x19, #0x108
     c30:	str	x0, [x19, #248]
     c34:	str	wzr, [x19, #256]
     c38:	str	w3, [x19, #260]
     c3c:	add	x0, x19, #0x10
     c40:	str	xzr, [x0, #376]
     c44:	add	x4, x19, #0x1a0
     c48:	str	x4, [x19, #400]
     c4c:	str	wzr, [x19, #408]
     c50:	str	w3, [x19, #412]
     c54:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
     c58:	add	x22, x19, #0x1c0
     c5c:	add	x0, x19, #0x1d0
     c60:	str	x0, [x19, #448]
     c64:	ldr	x1, [x21]
     c68:	ldr	x2, [x21, #8]
     c6c:	mov	w3, #0x0                   	// #0
     c70:	add	x2, x1, x2
     c74:	mov	x0, x22
     c78:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     c7c:	ldr	w0, [x21, #32]
     c80:	str	w0, [x19, #480]
     c84:	ldr	w0, [x21, #36]
     c88:	str	w0, [x19, #484]
     c8c:	ldr	w0, [x21, #40]
     c90:	str	w0, [x19, #488]
     c94:	ldr	w0, [x21, #44]
     c98:	str	w0, [x19, #492]
     c9c:	ldr	w0, [x21, #48]
     ca0:	str	w0, [x19, #496]
     ca4:	ldr	w0, [x21, #52]
     ca8:	str	w0, [x19, #500]
     cac:	cbz	x23, 136c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7dc>
     cb0:	add	x0, x19, #0x208
     cb4:	str	x0, [x19, #504]
     cb8:	mov	w3, #0x0                   	// #0
     cbc:	add	x2, x23, x24
     cc0:	mov	x1, x23
     cc4:	add	x0, x19, #0x1f8
     cc8:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     ccc:	cbz	x25, 1380 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7f0>
     cd0:	add	x0, x19, #0x228
     cd4:	str	x0, [x19, #536]
     cd8:	mov	w3, #0x0                   	// #0
     cdc:	add	x2, x25, x26
     ce0:	mov	x1, x25
     ce4:	add	x0, x19, #0x218
     ce8:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     cec:	str	wzr, [x19, #568]
     cf0:	mov	w0, #0x1                   	// #1
     cf4:	str	w0, [x19, #572]
     cf8:	mov	w0, #0x2                   	// #2
     cfc:	str	w0, [x19, #576]
     d00:	str	xzr, [x19, #584]
     d04:	str	xzr, [x19, #592]
     d08:	str	xzr, [x19, #600]
     d0c:	str	xzr, [x19, #608]
     d10:	ldrb	w0, [x19, #616]
     d14:	and	w0, w0, #0xfffffffc
     d18:	strb	w0, [x19, #616]
     d1c:	add	x0, x19, #0x270
     d20:	ldrb	w2, [x20]
     d24:	ldrb	w1, [x19, #624]
     d28:	bfxil	w1, w2, #0, #1
     d2c:	ubfx	x3, x2, #1, #1
     d30:	bfi	w1, w3, #1, #1
     d34:	ubfx	x3, x2, #2, #1
     d38:	bfi	w1, w3, #2, #1
     d3c:	ubfx	x3, x2, #3, #1
     d40:	bfi	w1, w3, #3, #1
     d44:	ubfx	x3, x2, #4, #1
     d48:	bfi	w1, w3, #4, #1
     d4c:	ubfx	x3, x2, #5, #1
     d50:	bfi	w1, w3, #5, #1
     d54:	ubfx	x3, x2, #6, #1
     d58:	bfi	w1, w3, #6, #1
     d5c:	ubfx	x2, x2, #7, #1
     d60:	bfi	w1, w2, #7, #1
     d64:	strb	w1, [x19, #624]
     d68:	ldrb	w2, [x20, #1]
     d6c:	ldrb	w1, [x0, #1]
     d70:	bfxil	w1, w2, #0, #1
     d74:	strb	w1, [x0, #1]
     d78:	ldr	w1, [x20, #4]
     d7c:	str	w1, [x0, #4]
     d80:	ldrb	w2, [x20, #8]
     d84:	ldrb	w1, [x0, #8]
     d88:	bfxil	w1, w2, #0, #1
     d8c:	ubfx	x3, x2, #1, #1
     d90:	bfi	w1, w3, #1, #1
     d94:	ubfx	x2, x2, #2, #1
     d98:	bfi	w1, w2, #2, #1
     d9c:	strb	w1, [x0, #8]
     da0:	ldr	w1, [x20, #12]
     da4:	str	w1, [x0, #12]
     da8:	ldrb	w2, [x20, #16]
     dac:	ldrb	w1, [x0, #16]
     db0:	bfxil	w1, w2, #0, #1
     db4:	ubfx	x2, x2, #1, #1
     db8:	bfi	w1, w2, #1, #1
     dbc:	strb	w1, [x0, #16]
     dc0:	ldr	w1, [x20, #20]
     dc4:	str	w1, [x0, #20]
     dc8:	ldrb	w2, [x20, #24]
     dcc:	ldrb	w1, [x0, #24]
     dd0:	bfxil	w1, w2, #0, #1
     dd4:	ubfx	x3, x2, #1, #1
     dd8:	bfi	w1, w3, #1, #1
     ddc:	ubfx	x3, x2, #2, #1
     de0:	bfi	w1, w3, #2, #1
     de4:	ubfx	x3, x2, #3, #1
     de8:	bfi	w1, w3, #3, #1
     dec:	ubfx	x3, x2, #4, #1
     df0:	bfi	w1, w3, #4, #1
     df4:	ubfx	x2, x2, #5, #1
     df8:	bfi	w1, w2, #5, #1
     dfc:	strb	w1, [x0, #24]
     e00:	ldrh	w1, [x20, #24]
     e04:	ldrh	w2, [x0, #24]
     e08:	ubfx	x1, x1, #6, #8
     e0c:	bfi	w2, w1, #6, #8
     e10:	strh	w2, [x0, #24]
     e14:	ldrb	w2, [x20, #25]
     e18:	ldrb	w1, [x0, #25]
     e1c:	ubfx	x2, x2, #6, #1
     e20:	bfi	w1, w2, #6, #1
     e24:	strb	w1, [x0, #25]
     e28:	ldrb	w2, [x20, #25]
     e2c:	ubfx	x2, x2, #7, #1
     e30:	bfi	w1, w2, #7, #1
     e34:	strb	w1, [x0, #25]
     e38:	ldrb	w2, [x20, #26]
     e3c:	ldrb	w1, [x0, #26]
     e40:	bfxil	w1, w2, #0, #1
     e44:	strb	w1, [x0, #26]
     e48:	ldrb	w2, [x20, #26]
     e4c:	ubfx	x2, x2, #1, #1
     e50:	bfi	w1, w2, #1, #1
     e54:	strb	w1, [x0, #26]
     e58:	ldrb	w2, [x20, #26]
     e5c:	ubfx	x2, x2, #2, #1
     e60:	bfi	w1, w2, #2, #1
     e64:	strb	w1, [x0, #26]
     e68:	ldrb	w2, [x20, #26]
     e6c:	ubfx	x2, x2, #3, #1
     e70:	bfi	w1, w2, #3, #1
     e74:	strb	w1, [x0, #26]
     e78:	ldrb	w2, [x20, #26]
     e7c:	ubfx	x2, x2, #4, #1
     e80:	bfi	w1, w2, #4, #1
     e84:	strb	w1, [x0, #26]
     e88:	ldrb	w2, [x20, #26]
     e8c:	ubfx	x2, x2, #5, #1
     e90:	bfi	w1, w2, #5, #1
     e94:	strb	w1, [x0, #26]
     e98:	ldrb	w2, [x20, #26]
     e9c:	ubfx	x2, x2, #6, #1
     ea0:	bfi	w1, w2, #6, #1
     ea4:	strb	w1, [x0, #26]
     ea8:	ldr	w1, [x20, #28]
     eac:	str	w1, [x0, #28]
     eb0:	ldr	w1, [x20, #32]
     eb4:	str	w1, [x0, #32]
     eb8:	ldr	w1, [x20, #36]
     ebc:	str	w1, [x0, #36]
     ec0:	ldr	w1, [x20, #40]
     ec4:	str	w1, [x0, #40]
     ec8:	ldr	w1, [x20, #44]
     ecc:	str	w1, [x0, #44]
     ed0:	ldr	w1, [x20, #48]
     ed4:	str	w1, [x0, #48]
     ed8:	ldr	w1, [x20, #52]
     edc:	str	w1, [x0, #52]
     ee0:	ldrb	w1, [x20, #56]
     ee4:	ldrb	w0, [x19, #680]
     ee8:	bfxil	w0, w1, #0, #1
     eec:	ubfx	x4, x1, #1, #1
     ef0:	bfi	w0, w4, #1, #1
     ef4:	ubfx	x4, x1, #2, #1
     ef8:	bfi	w0, w4, #2, #1
     efc:	ubfx	x4, x1, #3, #1
     f00:	bfi	w0, w4, #3, #1
     f04:	ubfx	x4, x1, #4, #1
     f08:	bfi	w0, w4, #4, #1
     f0c:	ubfx	x4, x1, #5, #1
     f10:	bfi	w0, w4, #5, #1
     f14:	ubfx	x4, x1, #6, #1
     f18:	bfi	w0, w4, #6, #1
     f1c:	ubfx	x1, x1, #7, #1
     f20:	bfi	w0, w1, #7, #1
     f24:	strb	w0, [x19, #680]
     f28:	ldrb	w1, [x20, #57]
     f2c:	ldrb	w0, [x19, #681]
     f30:	bfxil	w0, w1, #0, #1
     f34:	ubfx	x4, x1, #1, #1
     f38:	bfi	w0, w4, #1, #1
     f3c:	ubfx	x4, x1, #2, #1
     f40:	bfi	w0, w4, #2, #1
     f44:	ubfx	x1, x1, #3, #1
     f48:	bfi	w0, w1, #3, #1
     f4c:	strb	w0, [x19, #681]
     f50:	ldr	w0, [x20, #60]
     f54:	str	w0, [x19, #684]
     f58:	add	x0, x19, #0x2c0
     f5c:	str	x0, [x19, #688]
     f60:	ldr	x1, [x20, #64]
     f64:	ldr	x2, [x20, #72]
     f68:	mov	w3, #0x0                   	// #0
     f6c:	add	x2, x1, x2
     f70:	add	x0, x19, #0x2b0
     f74:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     f78:	add	x0, x19, #0x2e0
     f7c:	str	x0, [x19, #720]
     f80:	ldr	x1, [x20, #96]
     f84:	ldr	x2, [x20, #104]
     f88:	mov	w3, #0x0                   	// #0
     f8c:	add	x2, x1, x2
     f90:	add	x0, x19, #0x2d0
     f94:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
     f98:	ldr	x22, [x20, #136]
     f9c:	ldr	x0, [x20, #128]
     fa0:	sub	x22, x22, x0
     fa4:	asr	x1, x22, #5
     fa8:	str	xzr, [x19, #752]
     fac:	str	xzr, [x19, #760]
     fb0:	str	xzr, [x19, #768]
     fb4:	cmp	xzr, x22, asr #5
     fb8:	b.eq	1398 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x808>  // b.none
     fbc:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
     fc0:	cmp	x1, x0
     fc4:	b.hi	1394 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x804>  // b.pmore
     fc8:	mov	x0, x22
     fcc:	bl	0 <_Znwm>
     fd0:	mov	x21, x0
     fd4:	str	x21, [x19, #752]
     fd8:	str	x21, [x19, #760]
     fdc:	add	x22, x21, x22
     fe0:	str	x22, [x19, #768]
     fe4:	ldr	x25, [x20, #128]
     fe8:	ldr	x24, [x20, #136]
     fec:	cmp	x25, x24
     ff0:	b.eq	1034 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x4a4>  // b.none
     ff4:	mov	x23, x25
     ff8:	mov	x22, x21
     ffc:	add	x0, x22, #0x10
    1000:	str	x0, [x22]
    1004:	ldr	x1, [x23]
    1008:	ldr	x2, [x23, #8]
    100c:	mov	w3, #0x0                   	// #0
    1010:	add	x2, x1, x2
    1014:	mov	x0, x22
    1018:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
    101c:	add	x22, x22, #0x20
    1020:	add	x23, x23, #0x20
    1024:	cmp	x24, x23
    1028:	b.ne	ffc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x46c>  // b.any
    102c:	sub	x24, x24, x25
    1030:	add	x21, x21, x24
    1034:	str	x21, [x19, #760]
    1038:	add	x0, x19, #0x308
    103c:	ldrb	w2, [x20]
    1040:	ldrb	w1, [x19, #776]
    1044:	bfxil	w1, w2, #0, #1
    1048:	ubfx	x3, x2, #1, #1
    104c:	bfi	w1, w3, #1, #1
    1050:	ubfx	x3, x2, #2, #1
    1054:	bfi	w1, w3, #2, #1
    1058:	ubfx	x3, x2, #3, #1
    105c:	bfi	w1, w3, #3, #1
    1060:	ubfx	x3, x2, #4, #1
    1064:	bfi	w1, w3, #4, #1
    1068:	ubfx	x3, x2, #5, #1
    106c:	bfi	w1, w3, #5, #1
    1070:	ubfx	x3, x2, #6, #1
    1074:	bfi	w1, w3, #6, #1
    1078:	ubfx	x2, x2, #7, #1
    107c:	bfi	w1, w2, #7, #1
    1080:	strb	w1, [x19, #776]
    1084:	ldrb	w2, [x20, #1]
    1088:	ldrb	w1, [x0, #1]
    108c:	bfxil	w1, w2, #0, #1
    1090:	strb	w1, [x0, #1]
    1094:	ldr	w1, [x20, #4]
    1098:	str	w1, [x0, #4]
    109c:	ldrb	w2, [x20, #8]
    10a0:	ldrb	w1, [x0, #8]
    10a4:	bfxil	w1, w2, #0, #1
    10a8:	ubfx	x3, x2, #1, #1
    10ac:	bfi	w1, w3, #1, #1
    10b0:	ubfx	x2, x2, #2, #1
    10b4:	bfi	w1, w2, #2, #1
    10b8:	strb	w1, [x0, #8]
    10bc:	ldr	w1, [x20, #12]
    10c0:	str	w1, [x0, #12]
    10c4:	ldrb	w2, [x20, #16]
    10c8:	ldrb	w1, [x0, #16]
    10cc:	bfxil	w1, w2, #0, #1
    10d0:	ubfx	x2, x2, #1, #1
    10d4:	bfi	w1, w2, #1, #1
    10d8:	strb	w1, [x0, #16]
    10dc:	ldr	w1, [x20, #20]
    10e0:	str	w1, [x0, #20]
    10e4:	ldrb	w2, [x20, #24]
    10e8:	ldrb	w1, [x0, #24]
    10ec:	bfxil	w1, w2, #0, #1
    10f0:	ubfx	x3, x2, #1, #1
    10f4:	bfi	w1, w3, #1, #1
    10f8:	ubfx	x3, x2, #2, #1
    10fc:	bfi	w1, w3, #2, #1
    1100:	ubfx	x3, x2, #3, #1
    1104:	bfi	w1, w3, #3, #1
    1108:	ubfx	x3, x2, #4, #1
    110c:	bfi	w1, w3, #4, #1
    1110:	ubfx	x2, x2, #5, #1
    1114:	bfi	w1, w2, #5, #1
    1118:	strb	w1, [x0, #24]
    111c:	ldrh	w1, [x20, #24]
    1120:	ldrh	w2, [x0, #24]
    1124:	ubfx	x1, x1, #6, #8
    1128:	bfi	w2, w1, #6, #8
    112c:	strh	w2, [x0, #24]
    1130:	ldrb	w2, [x20, #25]
    1134:	ldrb	w1, [x0, #25]
    1138:	ubfx	x2, x2, #6, #1
    113c:	bfi	w1, w2, #6, #1
    1140:	strb	w1, [x0, #25]
    1144:	ldrb	w2, [x20, #25]
    1148:	ubfx	x2, x2, #7, #1
    114c:	bfi	w1, w2, #7, #1
    1150:	strb	w1, [x0, #25]
    1154:	ldrb	w2, [x20, #26]
    1158:	ldrb	w1, [x0, #26]
    115c:	bfxil	w1, w2, #0, #1
    1160:	strb	w1, [x0, #26]
    1164:	ldrb	w2, [x20, #26]
    1168:	ubfx	x2, x2, #1, #1
    116c:	bfi	w1, w2, #1, #1
    1170:	strb	w1, [x0, #26]
    1174:	ldrb	w2, [x20, #26]
    1178:	ubfx	x2, x2, #2, #1
    117c:	bfi	w1, w2, #2, #1
    1180:	strb	w1, [x0, #26]
    1184:	ldrb	w2, [x20, #26]
    1188:	ubfx	x2, x2, #3, #1
    118c:	bfi	w1, w2, #3, #1
    1190:	strb	w1, [x0, #26]
    1194:	ldrb	w2, [x20, #26]
    1198:	ubfx	x2, x2, #4, #1
    119c:	bfi	w1, w2, #4, #1
    11a0:	strb	w1, [x0, #26]
    11a4:	ldrb	w2, [x20, #26]
    11a8:	ubfx	x2, x2, #5, #1
    11ac:	bfi	w1, w2, #5, #1
    11b0:	strb	w1, [x0, #26]
    11b4:	ldrb	w2, [x20, #26]
    11b8:	ubfx	x2, x2, #6, #1
    11bc:	bfi	w1, w2, #6, #1
    11c0:	strb	w1, [x0, #26]
    11c4:	ldr	w1, [x20, #28]
    11c8:	str	w1, [x0, #28]
    11cc:	ldr	w1, [x20, #32]
    11d0:	str	w1, [x0, #32]
    11d4:	ldr	w1, [x20, #36]
    11d8:	str	w1, [x0, #36]
    11dc:	ldr	w1, [x20, #40]
    11e0:	str	w1, [x0, #40]
    11e4:	ldr	w1, [x20, #44]
    11e8:	str	w1, [x0, #44]
    11ec:	ldr	w1, [x20, #48]
    11f0:	str	w1, [x0, #48]
    11f4:	ldr	w1, [x20, #52]
    11f8:	str	w1, [x0, #52]
    11fc:	ldrb	w1, [x20, #56]
    1200:	ldrb	w0, [x19, #832]
    1204:	bfxil	w0, w1, #0, #1
    1208:	ubfx	x4, x1, #1, #1
    120c:	bfi	w0, w4, #1, #1
    1210:	ubfx	x4, x1, #2, #1
    1214:	bfi	w0, w4, #2, #1
    1218:	ubfx	x4, x1, #3, #1
    121c:	bfi	w0, w4, #3, #1
    1220:	ubfx	x4, x1, #4, #1
    1224:	bfi	w0, w4, #4, #1
    1228:	ubfx	x4, x1, #5, #1
    122c:	bfi	w0, w4, #5, #1
    1230:	ubfx	x4, x1, #6, #1
    1234:	bfi	w0, w4, #6, #1
    1238:	ubfx	x1, x1, #7, #1
    123c:	bfi	w0, w1, #7, #1
    1240:	strb	w0, [x19, #832]
    1244:	ldrb	w1, [x20, #57]
    1248:	ldrb	w0, [x19, #833]
    124c:	bfxil	w0, w1, #0, #1
    1250:	ubfx	x4, x1, #1, #1
    1254:	bfi	w0, w4, #1, #1
    1258:	ubfx	x4, x1, #2, #1
    125c:	bfi	w0, w4, #2, #1
    1260:	ubfx	x1, x1, #3, #1
    1264:	bfi	w0, w1, #3, #1
    1268:	strb	w0, [x19, #833]
    126c:	ldr	w0, [x20, #60]
    1270:	str	w0, [x19, #836]
    1274:	add	x0, x19, #0x358
    1278:	str	x0, [x19, #840]
    127c:	ldr	x1, [x20, #64]
    1280:	ldr	x2, [x20, #72]
    1284:	mov	w3, #0x0                   	// #0
    1288:	add	x2, x1, x2
    128c:	add	x0, x19, #0x348
    1290:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
    1294:	add	x0, x19, #0x378
    1298:	str	x0, [x19, #872]
    129c:	ldr	x1, [x20, #96]
    12a0:	ldr	x2, [x20, #104]
    12a4:	mov	w3, #0x0                   	// #0
    12a8:	add	x2, x1, x2
    12ac:	add	x0, x19, #0x368
    12b0:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
    12b4:	ldr	x22, [x20, #136]
    12b8:	ldr	x0, [x20, #128]
    12bc:	sub	x22, x22, x0
    12c0:	asr	x1, x22, #5
    12c4:	str	xzr, [x19, #904]
    12c8:	str	xzr, [x19, #912]
    12cc:	str	xzr, [x19, #920]
    12d0:	cmp	xzr, x22, asr #5
    12d4:	b.eq	13a4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x814>  // b.none
    12d8:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    12dc:	cmp	x1, x0
    12e0:	b.hi	13a0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x810>  // b.pmore
    12e4:	mov	x0, x22
    12e8:	bl	0 <_Znwm>
    12ec:	mov	x21, x0
    12f0:	str	x21, [x19, #904]
    12f4:	str	x21, [x19, #912]
    12f8:	add	x22, x21, x22
    12fc:	str	x22, [x19, #920]
    1300:	ldr	x24, [x20, #128]
    1304:	ldr	x23, [x20, #136]
    1308:	cmp	x24, x23
    130c:	b.eq	1350 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7c0>  // b.none
    1310:	mov	x22, x24
    1314:	mov	x20, x21
    1318:	add	x0, x20, #0x10
    131c:	str	x0, [x20]
    1320:	ldr	x1, [x22]
    1324:	ldr	x2, [x22, #8]
    1328:	mov	w3, #0x0                   	// #0
    132c:	add	x2, x1, x2
    1330:	mov	x0, x20
    1334:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
    1338:	add	x20, x20, #0x20
    133c:	add	x22, x22, #0x20
    1340:	cmp	x23, x22
    1344:	b.ne	1318 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x788>  // b.any
    1348:	sub	x23, x23, x24
    134c:	add	x21, x21, x23
    1350:	str	x21, [x19, #912]
    1354:	ldp	x19, x20, [sp, #16]
    1358:	ldp	x21, x22, [sp, #32]
    135c:	ldp	x23, x24, [sp, #48]
    1360:	ldp	x25, x26, [sp, #64]
    1364:	ldp	x29, x30, [sp], #80
    1368:	ret
    136c:	add	x0, x19, #0x208
    1370:	str	x0, [x19, #504]
    1374:	str	xzr, [x19, #512]
    1378:	strb	wzr, [x19, #520]
    137c:	b	ccc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x13c>
    1380:	add	x0, x19, #0x228
    1384:	str	x0, [x19, #536]
    1388:	str	xzr, [x19, #544]
    138c:	strb	wzr, [x19, #552]
    1390:	b	cec <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x15c>
    1394:	bl	0 <_ZSt17__throw_bad_allocv>
    1398:	mov	x21, #0x0                   	// #0
    139c:	b	fd4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x444>
    13a0:	bl	0 <_ZSt17__throw_bad_allocv>
    13a4:	mov	x21, #0x0                   	// #0
    13a8:	b	12f0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x760>

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMGetFirstTarget>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      10:	mov	x19, x0
      14:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      18:	cmp	x19, x1
      1c:	b.eq	54 <LLVMGetFirstTarget+0x54>  // b.none
      20:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      24:	cbz	x0, 34 <LLVMGetFirstTarget+0x34>
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #32
      30:	ret
      34:	adrp	x3, 0 <LLVMGetFirstTarget>
      38:	add	x3, x3, #0x0
      3c:	mov	w2, #0x277                 	// #631
      40:	adrp	x1, 0 <LLVMGetFirstTarget>
      44:	add	x1, x1, #0x0
      48:	adrp	x0, 0 <LLVMGetFirstTarget>
      4c:	add	x0, x0, #0x0
      50:	bl	0 <__assert_fail>
      54:	mov	x0, #0x0                   	// #0
      58:	b	28 <LLVMGetFirstTarget+0x28>

000000000000005c <LLVMGetNextTarget>:
      5c:	ldr	x0, [x0]
      60:	ret

0000000000000064 <LLVMGetTargetFromName>:
      64:	stp	x29, x30, [sp, #-64]!
      68:	mov	x29, sp
      6c:	stp	x19, x20, [sp, #16]
      70:	stp	x21, x22, [sp, #32]
      74:	stp	x23, x24, [sp, #48]
      78:	mov	x21, x0
      7c:	mov	x20, #0x0                   	// #0
      80:	cbz	x0, 8c <LLVMGetTargetFromName+0x28>
      84:	bl	0 <strlen>
      88:	mov	x20, x0
      8c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      90:	mov	x19, x0
      94:	mov	x23, x1
      98:	cmp	x0, x1
      9c:	b.eq	134 <LLVMGetTargetFromName+0xd0>  // b.none
      a0:	mov	x24, #0x0                   	// #0
      a4:	cbnz	x0, ec <LLVMGetTargetFromName+0x88>
      a8:	adrp	x3, 0 <LLVMGetFirstTarget>
      ac:	add	x3, x3, #0x0
      b0:	mov	w2, #0x277                 	// #631
      b4:	adrp	x1, 0 <LLVMGetFirstTarget>
      b8:	add	x1, x1, #0x0
      bc:	adrp	x0, 0 <LLVMGetFirstTarget>
      c0:	add	x0, x0, #0x0
      c4:	bl	0 <__assert_fail>
      c8:	mov	x2, x20
      cc:	mov	x1, x21
      d0:	mov	x0, x22
      d4:	bl	0 <memcmp>
      d8:	cbz	w0, 10c <LLVMGetTargetFromName+0xa8>
      dc:	ldr	x19, [x19]
      e0:	cmp	x23, x19
      e4:	b.eq	10c <LLVMGetTargetFromName+0xa8>  // b.none
      e8:	cbz	x19, a8 <LLVMGetTargetFromName+0x44>
      ec:	ldr	x22, [x19, #16]
      f0:	mov	x0, x24
      f4:	cbz	x22, 100 <LLVMGetTargetFromName+0x9c>
      f8:	mov	x0, x22
      fc:	bl	0 <strlen>
     100:	cmp	x20, x0
     104:	b.ne	dc <LLVMGetTargetFromName+0x78>  // b.any
     108:	cbnz	x20, c8 <LLVMGetTargetFromName+0x64>
     10c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
     110:	cmp	x19, x1
     114:	b.eq	13c <LLVMGetTargetFromName+0xd8>  // b.none
     118:	cbz	x19, 144 <LLVMGetTargetFromName+0xe0>
     11c:	mov	x0, x19
     120:	ldp	x19, x20, [sp, #16]
     124:	ldp	x21, x22, [sp, #32]
     128:	ldp	x23, x24, [sp, #48]
     12c:	ldp	x29, x30, [sp], #64
     130:	ret
     134:	mov	x19, x1
     138:	b	10c <LLVMGetTargetFromName+0xa8>
     13c:	mov	x19, #0x0                   	// #0
     140:	b	11c <LLVMGetTargetFromName+0xb8>
     144:	adrp	x3, 0 <LLVMGetFirstTarget>
     148:	add	x3, x3, #0x0
     14c:	mov	w2, #0x277                 	// #631
     150:	adrp	x1, 0 <LLVMGetFirstTarget>
     154:	add	x1, x1, #0x0
     158:	adrp	x0, 0 <LLVMGetFirstTarget>
     15c:	add	x0, x0, #0x0
     160:	bl	0 <__assert_fail>

0000000000000164 <LLVMGetTargetName>:
     164:	ldr	x0, [x0, #16]
     168:	ret

000000000000016c <LLVMGetTargetDescription>:
     16c:	ldr	x0, [x0, #24]
     170:	ret

0000000000000174 <LLVMTargetHasJIT>:
     174:	ldrb	w0, [x0, #40]
     178:	ret

000000000000017c <LLVMTargetHasTargetMachine>:
     17c:	ldr	x0, [x0, #88]
     180:	cmp	x0, #0x0
     184:	cset	w0, ne  // ne = any
     188:	ret

000000000000018c <LLVMTargetHasAsmBackend>:
     18c:	ldr	x0, [x0, #96]
     190:	cmp	x0, #0x0
     194:	cset	w0, ne  // ne = any
     198:	ret

000000000000019c <LLVMCreateTargetMachine>:
     19c:	sub	sp, sp, #0x1a0
     1a0:	stp	x29, x30, [sp, #32]
     1a4:	add	x29, sp, #0x20
     1a8:	stp	x19, x20, [sp, #48]
     1ac:	stp	x21, x22, [sp, #64]
     1b0:	stp	x23, x24, [sp, #80]
     1b4:	stp	x25, x26, [sp, #96]
     1b8:	stp	x27, x28, [sp, #112]
     1bc:	mov	x23, x0
     1c0:	mov	x20, x1
     1c4:	mov	x21, x2
     1c8:	mov	x22, x3
     1cc:	mov	w19, w4
     1d0:	cmp	w5, #0x4
     1d4:	b.eq	27c <LLVMCreateTargetMachine+0xe0>  // b.none
     1d8:	b.hi	23c <LLVMCreateTargetMachine+0xa0>  // b.pmore
     1dc:	cmp	w5, #0x2
     1e0:	b.eq	26c <LLVMCreateTargetMachine+0xd0>  // b.none
     1e4:	cmp	w5, #0x3
     1e8:	b.ne	200 <LLVMCreateTargetMachine+0x64>  // b.any
     1ec:	mov	x24, #0x0                   	// #0
     1f0:	mov	x0, #0x2                   	// #2
     1f4:	bfxil	x24, x0, #0, #32
     1f8:	mov	w26, #0x1                   	// #1
     1fc:	b	210 <LLVMCreateTargetMachine+0x74>
     200:	mov	x24, #0x0                   	// #0
     204:	mov	w26, #0x1                   	// #1
     208:	cmp	w5, w26
     20c:	b.ne	260 <LLVMCreateTargetMachine+0xc4>  // b.any
     210:	cmp	w6, #0x3
     214:	b.eq	4f8 <LLVMCreateTargetMachine+0x35c>  // b.none
     218:	b.hi	4a8 <LLVMCreateTargetMachine+0x30c>  // b.pmore
     21c:	cmp	w6, #0x1
     220:	b.eq	4f0 <LLVMCreateTargetMachine+0x354>  // b.none
     224:	cmp	w6, #0x2
     228:	b.ne	2a4 <LLVMCreateTargetMachine+0x108>  // b.any
     22c:	mov	x0, #0x0                   	// #0
     230:	mov	w28, #0x1                   	// #1
     234:	mov	w27, #0x0                   	// #0
     238:	b	2b4 <LLVMCreateTargetMachine+0x118>
     23c:	cmp	w5, #0x5
     240:	b.eq	290 <LLVMCreateTargetMachine+0xf4>  // b.none
     244:	cmp	w5, #0x6
     248:	b.ne	260 <LLVMCreateTargetMachine+0xc4>  // b.any
     24c:	mov	x24, #0x0                   	// #0
     250:	mov	x0, #0x5                   	// #5
     254:	bfxil	x24, x0, #0, #32
     258:	mov	w26, #0x1                   	// #1
     25c:	b	210 <LLVMCreateTargetMachine+0x74>
     260:	and	x24, x24, #0xffffffffffffff00
     264:	mov	w26, #0x0                   	// #0
     268:	b	210 <LLVMCreateTargetMachine+0x74>
     26c:	mov	x26, #0x1                   	// #1
     270:	mov	x24, #0x0                   	// #0
     274:	bfxil	x24, x26, #0, #32
     278:	b	210 <LLVMCreateTargetMachine+0x74>
     27c:	mov	x24, #0x0                   	// #0
     280:	mov	x0, #0x3                   	// #3
     284:	bfxil	x24, x0, #0, #32
     288:	mov	w26, #0x1                   	// #1
     28c:	b	210 <LLVMCreateTargetMachine+0x74>
     290:	mov	x24, #0x0                   	// #0
     294:	mov	x0, #0x4                   	// #4
     298:	bfxil	x24, x0, #0, #32
     29c:	mov	w26, #0x1                   	// #1
     2a0:	b	210 <LLVMCreateTargetMachine+0x74>
     2a4:	mov	w27, #0x0                   	// #0
     2a8:	cbnz	w6, 524 <LLVMCreateTargetMachine+0x388>
     2ac:	mov	x0, #0x0                   	// #0
     2b0:	mov	w28, #0x0                   	// #0
     2b4:	str	w0, [sp, #152]
     2b8:	cmp	w19, #0x1
     2bc:	b.eq	2d4 <LLVMCreateTargetMachine+0x138>  // b.none
     2c0:	cmp	w19, #0x3
     2c4:	b.eq	2d4 <LLVMCreateTargetMachine+0x138>  // b.none
     2c8:	cmp	w19, #0x0
     2cc:	mov	w0, #0x2                   	// #2
     2d0:	csel	w19, w19, w0, eq  // eq = none
     2d4:	mov	w0, #0x10                  	// #16
     2d8:	strb	w0, [sp, #240]
     2dc:	ldrb	w0, [sp, #241]
     2e0:	and	w0, w0, #0xfffffffe
     2e4:	strb	w0, [sp, #241]
     2e8:	str	wzr, [sp, #244]
     2ec:	ldrb	w0, [sp, #248]
     2f0:	orr	w0, w0, #0x1
     2f4:	and	w0, w0, #0xfffffff9
     2f8:	strb	w0, [sp, #248]
     2fc:	mov	w1, #0x1                   	// #1
     300:	str	w1, [sp, #252]
     304:	ldrb	w0, [sp, #256]
     308:	and	w0, w0, #0xfffffffc
     30c:	strb	w0, [sp, #256]
     310:	str	wzr, [sp, #260]
     314:	ldrb	w0, [sp, #264]
     318:	and	w0, w0, #0xfffffff8
     31c:	orr	w0, w0, #0x8
     320:	and	w0, w0, #0xffffffef
     324:	and	w0, w0, #0xffffffdf
     328:	strb	w0, [sp, #264]
     32c:	ldrh	w0, [sp, #264]
     330:	and	w0, w0, #0xffffc03f
     334:	strh	w0, [sp, #264]
     338:	strb	wzr, [sp, #265]
     33c:	ldrb	w0, [sp, #266]
     340:	and	w0, w0, #0xffffff80
     344:	strb	w0, [sp, #266]
     348:	str	wzr, [sp, #268]
     34c:	str	w1, [sp, #272]
     350:	str	wzr, [sp, #276]
     354:	str	w1, [sp, #280]
     358:	str	wzr, [sp, #284]
     35c:	str	wzr, [sp, #288]
     360:	str	wzr, [sp, #292]
     364:	add	x0, sp, #0x128
     368:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     36c:	mov	x25, #0x0                   	// #0
     370:	cbz	x20, 380 <LLVMCreateTargetMachine+0x1e4>
     374:	mov	x0, x20
     378:	bl	0 <strlen>
     37c:	mov	x25, x0
     380:	str	xzr, [sp, #144]
     384:	cbz	x21, 394 <LLVMCreateTargetMachine+0x1f8>
     388:	mov	x0, x21
     38c:	bl	0 <strlen>
     390:	str	x0, [sp, #144]
     394:	str	xzr, [sp, #136]
     398:	cbz	x22, 3a8 <LLVMCreateTargetMachine+0x20c>
     39c:	mov	x0, x22
     3a0:	bl	0 <strlen>
     3a4:	str	x0, [sp, #136]
     3a8:	str	x20, [sp, #168]
     3ac:	str	x25, [sp, #176]
     3b0:	bfi	x24, x26, #32, #8
     3b4:	mov	x20, #0x0                   	// #0
     3b8:	ldr	x0, [sp, #152]
     3bc:	bfxil	x20, x0, #0, #32
     3c0:	bfi	x20, x28, #32, #8
     3c4:	ldr	x26, [x23, #88]
     3c8:	cbz	x26, 538 <LLVMCreateTargetMachine+0x39c>
     3cc:	str	xzr, [sp, #400]
     3d0:	mov	w0, #0x5                   	// #5
     3d4:	strb	w0, [sp, #408]
     3d8:	mov	w0, #0x1                   	// #1
     3dc:	strb	w0, [sp, #409]
     3e0:	add	x0, sp, #0xa8
     3e4:	str	x0, [sp, #392]
     3e8:	add	x25, sp, #0xb8
     3ec:	add	x1, sp, #0x188
     3f0:	mov	x0, x25
     3f4:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     3f8:	strb	w27, [sp, #16]
     3fc:	str	w19, [sp, #8]
     400:	str	x20, [sp]
     404:	mov	x7, x24
     408:	add	x6, sp, #0xf0
     40c:	mov	x4, x22
     410:	ldr	x5, [sp, #136]
     414:	mov	x2, x21
     418:	ldr	x3, [sp, #144]
     41c:	mov	x1, x25
     420:	mov	x0, x23
     424:	blr	x26
     428:	mov	x20, x0
     42c:	ldr	x0, [sp, #184]
     430:	add	x25, x25, #0x10
     434:	cmp	x0, x25
     438:	b.eq	440 <LLVMCreateTargetMachine+0x2a4>  // b.none
     43c:	bl	0 <_ZdlPv>
     440:	ldr	x19, [sp, #368]
     444:	ldr	x21, [sp, #376]
     448:	cmp	x19, x21
     44c:	b.ne	550 <LLVMCreateTargetMachine+0x3b4>  // b.any
     450:	ldr	x0, [sp, #368]
     454:	cbz	x0, 45c <LLVMCreateTargetMachine+0x2c0>
     458:	bl	0 <_ZdlPv>
     45c:	ldr	x0, [sp, #336]
     460:	add	x1, sp, #0x160
     464:	cmp	x0, x1
     468:	b.eq	470 <LLVMCreateTargetMachine+0x2d4>  // b.none
     46c:	bl	0 <_ZdlPv>
     470:	ldr	x0, [sp, #304]
     474:	add	x1, sp, #0x140
     478:	cmp	x0, x1
     47c:	b.eq	484 <LLVMCreateTargetMachine+0x2e8>  // b.none
     480:	bl	0 <_ZdlPv>
     484:	mov	x0, x20
     488:	ldp	x19, x20, [sp, #48]
     48c:	ldp	x21, x22, [sp, #64]
     490:	ldp	x23, x24, [sp, #80]
     494:	ldp	x25, x26, [sp, #96]
     498:	ldp	x27, x28, [sp, #112]
     49c:	ldp	x29, x30, [sp, #32]
     4a0:	add	sp, sp, #0x1a0
     4a4:	ret
     4a8:	cmp	w6, #0x5
     4ac:	b.eq	50c <LLVMCreateTargetMachine+0x370>  // b.none
     4b0:	cmp	w6, #0x6
     4b4:	b.ne	4d0 <LLVMCreateTargetMachine+0x334>  // b.any
     4b8:	mov	x0, #0x0                   	// #0
     4bc:	mov	x1, #0x4                   	// #4
     4c0:	bfxil	x0, x1, #0, #32
     4c4:	mov	w28, #0x1                   	// #1
     4c8:	mov	w27, #0x0                   	// #0
     4cc:	b	2b4 <LLVMCreateTargetMachine+0x118>
     4d0:	cmp	w6, #0x4
     4d4:	b.ne	524 <LLVMCreateTargetMachine+0x388>  // b.any
     4d8:	mov	x0, #0x0                   	// #0
     4dc:	mov	x1, #0x2                   	// #2
     4e0:	bfxil	x0, x1, #0, #32
     4e4:	mov	w28, #0x1                   	// #1
     4e8:	mov	w27, #0x0                   	// #0
     4ec:	b	2b4 <LLVMCreateTargetMachine+0x118>
     4f0:	mov	w27, #0x1                   	// #1
     4f4:	b	2ac <LLVMCreateTargetMachine+0x110>
     4f8:	mov	x28, #0x1                   	// #1
     4fc:	mov	x0, #0x0                   	// #0
     500:	bfxil	x0, x28, #0, #32
     504:	mov	w27, #0x0                   	// #0
     508:	b	2b4 <LLVMCreateTargetMachine+0x118>
     50c:	mov	x0, #0x0                   	// #0
     510:	mov	x1, #0x3                   	// #3
     514:	bfxil	x0, x1, #0, #32
     518:	mov	w28, #0x1                   	// #1
     51c:	mov	w27, #0x0                   	// #0
     520:	b	2b4 <LLVMCreateTargetMachine+0x118>
     524:	mov	x28, #0x1                   	// #1
     528:	mov	x0, #0x0                   	// #0
     52c:	bfxil	x0, x28, #0, #32
     530:	mov	w27, #0x0                   	// #0
     534:	b	2b4 <LLVMCreateTargetMachine+0x118>
     538:	mov	x20, #0x0                   	// #0
     53c:	b	440 <LLVMCreateTargetMachine+0x2a4>
     540:	bl	0 <_ZdlPv>
     544:	add	x19, x19, #0x20
     548:	cmp	x21, x19
     54c:	b.eq	450 <LLVMCreateTargetMachine+0x2b4>  // b.none
     550:	mov	x1, x19
     554:	ldr	x0, [x1], #16
     558:	cmp	x0, x1
     55c:	b.ne	540 <LLVMCreateTargetMachine+0x3a4>  // b.any
     560:	b	544 <LLVMCreateTargetMachine+0x3a8>

0000000000000564 <LLVMDisposeTargetMachine>:
     564:	cbz	x0, 584 <LLVMDisposeTargetMachine+0x20>
     568:	stp	x29, x30, [sp, #-16]!
     56c:	mov	x29, sp
     570:	ldr	x1, [x0]
     574:	ldr	x1, [x1, #8]
     578:	blr	x1
     57c:	ldp	x29, x30, [sp], #16
     580:	ret
     584:	ret

0000000000000588 <LLVMGetTargetMachineTarget>:
     588:	ldr	x0, [x0, #8]
     58c:	ret

0000000000000590 <LLVMGetTargetMachineTriple>:
     590:	stp	x29, x30, [sp, #-80]!
     594:	mov	x29, sp
     598:	stp	x19, x20, [sp, #16]
     59c:	add	x1, sp, #0x40
     5a0:	str	x1, [sp, #48]
     5a4:	ldr	x20, [x0, #448]
     5a8:	ldr	x19, [x0, #456]
     5ac:	cmp	x20, #0x0
     5b0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
     5b4:	b.ne	614 <LLVMGetTargetMachineTriple+0x84>  // b.any
     5b8:	str	x19, [sp, #40]
     5bc:	cmp	x19, #0xf
     5c0:	b.hi	620 <LLVMGetTargetMachineTriple+0x90>  // b.pmore
     5c4:	cmp	x19, #0x1
     5c8:	b.ne	64c <LLVMGetTargetMachineTriple+0xbc>  // b.any
     5cc:	ldrb	w0, [x20]
     5d0:	strb	w0, [sp, #64]
     5d4:	ldr	x0, [sp, #40]
     5d8:	str	x0, [sp, #56]
     5dc:	ldr	x1, [sp, #48]
     5e0:	strb	wzr, [x1, x0]
     5e4:	ldr	x0, [sp, #48]
     5e8:	bl	0 <strdup>
     5ec:	mov	x19, x0
     5f0:	ldr	x0, [sp, #48]
     5f4:	add	x1, sp, #0x40
     5f8:	cmp	x0, x1
     5fc:	b.eq	604 <LLVMGetTargetMachineTriple+0x74>  // b.none
     600:	bl	0 <_ZdlPv>
     604:	mov	x0, x19
     608:	ldp	x19, x20, [sp, #16]
     60c:	ldp	x29, x30, [sp], #80
     610:	ret
     614:	adrp	x0, 0 <LLVMGetFirstTarget>
     618:	add	x0, x0, #0x0
     61c:	bl	0 <_ZSt19__throw_logic_errorPKc>
     620:	mov	x2, #0x0                   	// #0
     624:	add	x1, sp, #0x28
     628:	add	x0, sp, #0x30
     62c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     630:	str	x0, [sp, #48]
     634:	ldr	x1, [sp, #40]
     638:	str	x1, [sp, #64]
     63c:	mov	x2, x19
     640:	mov	x1, x20
     644:	bl	0 <memcpy>
     648:	b	5d4 <LLVMGetTargetMachineTriple+0x44>
     64c:	cbz	x19, 5d4 <LLVMGetTargetMachineTriple+0x44>
     650:	add	x0, sp, #0x40
     654:	b	63c <LLVMGetTargetMachineTriple+0xac>

0000000000000658 <LLVMSetTargetMachineAsmVerbosity>:
     658:	cmp	w1, #0x0
     65c:	cset	w2, ne  // ne = any
     660:	ldrb	w1, [x0, #833]
     664:	bfi	w1, w2, #2, #1
     668:	strb	w1, [x0, #833]
     66c:	ret

0000000000000670 <LLVMGetDefaultTargetTriple>:
     670:	stp	x29, x30, [sp, #-64]!
     674:	mov	x29, sp
     678:	stp	x19, x20, [sp, #16]
     67c:	add	x19, sp, #0x20
     680:	mov	x8, x19
     684:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
     688:	ldr	x0, [sp, #32]
     68c:	bl	0 <strdup>
     690:	mov	x20, x0
     694:	ldr	x0, [sp, #32]
     698:	add	x19, x19, #0x10
     69c:	cmp	x0, x19
     6a0:	b.eq	6a8 <LLVMGetDefaultTargetTriple+0x38>  // b.none
     6a4:	bl	0 <_ZdlPv>
     6a8:	mov	x0, x20
     6ac:	ldp	x19, x20, [sp, #16]
     6b0:	ldp	x29, x30, [sp], #64
     6b4:	ret

00000000000006b8 <LLVMNormalizeTargetTriple>:
     6b8:	stp	x29, x30, [sp, #-64]!
     6bc:	mov	x29, sp
     6c0:	stp	x19, x20, [sp, #16]
     6c4:	mov	x19, x0
     6c8:	mov	x1, #0x0                   	// #0
     6cc:	cbz	x0, 6d8 <LLVMNormalizeTargetTriple+0x20>
     6d0:	bl	0 <strlen>
     6d4:	mov	x1, x0
     6d8:	add	x20, sp, #0x20
     6dc:	mov	x8, x20
     6e0:	mov	x0, x19
     6e4:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
     6e8:	ldr	x0, [sp, #32]
     6ec:	bl	0 <strdup>
     6f0:	mov	x19, x0
     6f4:	ldr	x0, [sp, #32]
     6f8:	add	x20, x20, #0x10
     6fc:	cmp	x0, x20
     700:	b.eq	708 <LLVMNormalizeTargetTriple+0x50>  // b.none
     704:	bl	0 <_ZdlPv>
     708:	mov	x0, x19
     70c:	ldp	x19, x20, [sp, #16]
     710:	ldp	x29, x30, [sp], #64
     714:	ret

0000000000000718 <LLVMGetHostCPUName>:
     718:	stp	x29, x30, [sp, #-16]!
     71c:	mov	x29, sp
     720:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
     724:	bl	0 <strdup>
     728:	ldp	x29, x30, [sp], #16
     72c:	ret

0000000000000730 <LLVMGetHostCPUFeatures>:
     730:	stp	x29, x30, [sp, #-144]!
     734:	mov	x29, sp
     738:	stp	x19, x20, [sp, #16]
     73c:	stp	x21, x22, [sp, #32]
     740:	adrp	x1, 0 <LLVMGetFirstTarget>
     744:	add	x1, x1, #0x0
     748:	mov	x2, #0x0                   	// #0
     74c:	add	x0, sp, #0x78
     750:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
     754:	str	xzr, [sp, #88]
     758:	str	wzr, [sp, #96]
     75c:	str	wzr, [sp, #100]
     760:	str	wzr, [sp, #104]
     764:	mov	w0, #0x10                  	// #16
     768:	str	w0, [sp, #108]
     76c:	add	x0, sp, #0x58
     770:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
     774:	and	w0, w0, #0xff
     778:	cbz	w0, 80c <LLVMGetHostCPUFeatures+0xdc>
     77c:	ldr	w21, [sp, #96]
     780:	cbz	w21, 80c <LLVMGetHostCPUFeatures+0xdc>
     784:	ldr	x2, [sp, #88]
     788:	ldr	x0, [x2]
     78c:	cmp	x0, #0x0
     790:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     794:	b.ne	860 <LLVMGetHostCPUFeatures+0x130>  // b.any
     798:	add	x0, x2, #0x8
     79c:	mov	x19, x0
     7a0:	ldr	x1, [x0], #8
     7a4:	cmp	x1, #0x0
     7a8:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     7ac:	b.eq	79c <LLVMGetHostCPUFeatures+0x6c>  // b.none
     7b0:	add	x21, x2, w21, uxtw #3
     7b4:	cmp	x21, x19
     7b8:	b.eq	80c <LLVMGetHostCPUFeatures+0xdc>  // b.none
     7bc:	add	x22, sp, #0x78
     7c0:	mov	x20, x19
     7c4:	ldr	x0, [x20], #8
     7c8:	mov	x1, x0
     7cc:	ldr	x2, [x1], #16
     7d0:	ldrb	w3, [x0, #8]
     7d4:	mov	x0, x22
     7d8:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
     7dc:	ldr	x1, [x19, #8]
     7e0:	cmp	x1, #0x0
     7e4:	add	x0, x19, #0x10
     7e8:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     7ec:	b.ne	868 <LLVMGetHostCPUFeatures+0x138>  // b.any
     7f0:	mov	x19, x0
     7f4:	ldr	x1, [x0], #8
     7f8:	cmp	x1, #0x0
     7fc:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     800:	b.eq	7f0 <LLVMGetHostCPUFeatures+0xc0>  // b.none
     804:	cmp	x21, x19
     808:	b.ne	7c0 <LLVMGetHostCPUFeatures+0x90>  // b.any
     80c:	add	x19, sp, #0x38
     810:	mov	x8, x19
     814:	add	x0, sp, #0x78
     818:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
     81c:	ldr	x0, [sp, #56]
     820:	bl	0 <strdup>
     824:	mov	x21, x0
     828:	ldr	x0, [sp, #56]
     82c:	add	x19, x19, #0x10
     830:	cmp	x0, x19
     834:	b.eq	83c <LLVMGetHostCPUFeatures+0x10c>  // b.none
     838:	bl	0 <_ZdlPv>
     83c:	ldr	w0, [sp, #100]
     840:	cbz	w0, 898 <LLVMGetHostCPUFeatures+0x168>
     844:	ldr	w1, [sp, #96]
     848:	cbz	w1, 898 <LLVMGetHostCPUFeatures+0x168>
     84c:	sub	w20, w1, #0x1
     850:	add	x20, x20, #0x1
     854:	lsl	x20, x20, #3
     858:	mov	x19, #0x0                   	// #0
     85c:	b	87c <LLVMGetHostCPUFeatures+0x14c>
     860:	mov	x19, x2
     864:	b	7b0 <LLVMGetHostCPUFeatures+0x80>
     868:	mov	x19, x20
     86c:	b	804 <LLVMGetHostCPUFeatures+0xd4>
     870:	add	x19, x19, #0x8
     874:	cmp	x20, x19
     878:	b.eq	898 <LLVMGetHostCPUFeatures+0x168>  // b.none
     87c:	ldr	x1, [sp, #88]
     880:	ldr	x0, [x1, x19]
     884:	cmp	x0, #0x0
     888:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     88c:	b.eq	870 <LLVMGetHostCPUFeatures+0x140>  // b.none
     890:	bl	0 <free>
     894:	b	870 <LLVMGetHostCPUFeatures+0x140>
     898:	ldr	x0, [sp, #88]
     89c:	bl	0 <free>
     8a0:	ldr	x19, [sp, #120]
     8a4:	ldr	x20, [sp, #128]
     8a8:	cmp	x19, x20
     8ac:	b.ne	8dc <LLVMGetHostCPUFeatures+0x1ac>  // b.any
     8b0:	ldr	x0, [sp, #120]
     8b4:	cbz	x0, 8bc <LLVMGetHostCPUFeatures+0x18c>
     8b8:	bl	0 <_ZdlPv>
     8bc:	mov	x0, x21
     8c0:	ldp	x19, x20, [sp, #16]
     8c4:	ldp	x21, x22, [sp, #32]
     8c8:	ldp	x29, x30, [sp], #144
     8cc:	ret
     8d0:	add	x19, x19, #0x20
     8d4:	cmp	x20, x19
     8d8:	b.eq	8b0 <LLVMGetHostCPUFeatures+0x180>  // b.none
     8dc:	mov	x1, x19
     8e0:	ldr	x0, [x1], #16
     8e4:	cmp	x0, x1
     8e8:	b.eq	8d0 <LLVMGetHostCPUFeatures+0x1a0>  // b.none
     8ec:	bl	0 <_ZdlPv>
     8f0:	b	8d0 <LLVMGetHostCPUFeatures+0x1a0>

00000000000008f4 <LLVMAddAnalysisPasses>:
     8f4:	stp	x29, x30, [sp, #-80]!
     8f8:	mov	x29, sp
     8fc:	stp	x19, x20, [sp, #16]
     900:	str	x21, [sp, #32]
     904:	mov	x19, x1
     908:	ldr	x1, [x1]
     90c:	ldr	x21, [x1, #16]
     910:	add	x20, sp, #0x30
     914:	mov	x8, x20
     918:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
     91c:	mov	x0, x20
     920:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
     924:	mov	x1, x0
     928:	mov	x0, x19
     92c:	blr	x21
     930:	ldr	x3, [sp, #64]
     934:	cbz	x3, 948 <LLVMAddAnalysisPasses+0x54>
     938:	add	x0, sp, #0x30
     93c:	mov	w2, #0x3                   	// #3
     940:	mov	x1, x0
     944:	blr	x3
     948:	ldp	x19, x20, [sp, #16]
     94c:	ldr	x21, [sp, #32]
     950:	ldp	x29, x30, [sp], #80
     954:	ret

0000000000000958 <LLVMCreateTargetDataLayout>:
     958:	stp	x29, x30, [sp, #-48]!
     95c:	mov	x29, sp
     960:	stp	x19, x20, [sp, #16]
     964:	stp	x21, x22, [sp, #32]
     968:	mov	x20, x0
     96c:	mov	x0, #0x1b0                 	// #432
     970:	bl	0 <_Znwm>
     974:	mov	x19, x0
     978:	strb	wzr, [x0, #8]
     97c:	strb	wzr, [x0, #9]
     980:	strb	wzr, [x0, #16]
     984:	strb	wzr, [x0, #17]
     988:	add	x1, x0, #0x30
     98c:	str	x1, [x0, #32]
     990:	str	wzr, [x0, #40]
     994:	mov	w1, #0x8                   	// #8
     998:	str	w1, [x0, #44]
     99c:	add	x2, x0, #0x48
     9a0:	str	x2, [x0, #56]
     9a4:	str	wzr, [x0, #64]
     9a8:	mov	w2, #0x10                  	// #16
     9ac:	str	w2, [x0, #68]
     9b0:	add	x22, x0, #0xc8
     9b4:	add	x2, x0, #0xd8
     9b8:	str	x2, [x0, #200]
     9bc:	str	xzr, [x0, #208]
     9c0:	strb	wzr, [x0, #216]
     9c4:	add	x2, x0, #0xf8
     9c8:	str	x2, [x0, #232]
     9cc:	str	wzr, [x0, #240]
     9d0:	str	w1, [x0, #244]
     9d4:	str	xzr, [x0, #376]
     9d8:	add	x2, x0, #0x190
     9dc:	str	x2, [x0, #384]
     9e0:	str	wzr, [x0, #392]
     9e4:	str	w1, [x0, #396]
     9e8:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     9ec:	add	x1, x20, #0xd8
     9f0:	mov	x0, x22
     9f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     9f8:	ldrb	w0, [x20, #16]
     9fc:	strb	w0, [x19]
     a00:	ldr	w0, [x20, #20]
     a04:	str	w0, [x19, #4]
     a08:	ldrh	w0, [x20, #24]
     a0c:	strh	w0, [x19, #8]
     a10:	ldrh	w0, [x20, #32]
     a14:	strh	w0, [x19, #16]
     a18:	ldr	w0, [x20, #36]
     a1c:	str	w0, [x19, #20]
     a20:	ldr	w0, [x20, #28]
     a24:	str	w0, [x19, #12]
     a28:	ldr	w0, [x20, #40]
     a2c:	str	w0, [x19, #24]
     a30:	add	x1, x20, #0x30
     a34:	add	x0, x19, #0x20
     a38:	bl	0 <LLVMGetFirstTarget>
     a3c:	add	x1, x20, #0x48
     a40:	add	x0, x19, #0x38
     a44:	bl	0 <LLVMGetFirstTarget>
     a48:	add	x1, x20, #0xf8
     a4c:	add	x0, x19, #0xe8
     a50:	bl	0 <LLVMGetFirstTarget>
     a54:	add	x1, x20, #0x190
     a58:	add	x0, x19, #0x180
     a5c:	bl	0 <LLVMGetFirstTarget>
     a60:	mov	x0, x19
     a64:	ldp	x19, x20, [sp, #16]
     a68:	ldp	x21, x22, [sp, #32]
     a6c:	ldp	x29, x30, [sp], #48
     a70:	ret

0000000000000a74 <LLVMGetTargetFromTriple>:
     a74:	stp	x29, x30, [sp, #-112]!
     a78:	mov	x29, sp
     a7c:	stp	x19, x20, [sp, #16]
     a80:	stp	x21, x22, [sp, #32]
     a84:	mov	x20, x0
     a88:	mov	x21, x1
     a8c:	mov	x22, x2
     a90:	add	x0, sp, #0x60
     a94:	str	x0, [sp, #80]
     a98:	str	xzr, [sp, #88]
     a9c:	strb	wzr, [sp, #96]
     aa0:	add	x0, sp, #0x40
     aa4:	str	x0, [sp, #48]
     aa8:	mov	x2, #0xffffffffffffffff    	// #-1
     aac:	cbz	x20, abc <LLVMGetTargetFromTriple+0x48>
     ab0:	mov	x0, x20
     ab4:	bl	0 <strlen>
     ab8:	add	x2, x20, x0
     abc:	add	x19, sp, #0x30
     ac0:	mov	w3, #0x0                   	// #0
     ac4:	mov	x1, x20
     ac8:	mov	x0, x19
     acc:	bl	0 <LLVMGetFirstTarget>
     ad0:	add	x1, sp, #0x50
     ad4:	mov	x0, x19
     ad8:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     adc:	str	x0, [x21]
     ae0:	ldr	x0, [sp, #48]
     ae4:	add	x19, x19, #0x10
     ae8:	cmp	x0, x19
     aec:	b.eq	af4 <LLVMGetTargetFromTriple+0x80>  // b.none
     af0:	bl	0 <_ZdlPv>
     af4:	ldr	x0, [x21]
     af8:	mov	w19, #0x0                   	// #0
     afc:	cbz	x0, b28 <LLVMGetTargetFromTriple+0xb4>
     b00:	ldr	x0, [sp, #80]
     b04:	add	x1, sp, #0x60
     b08:	cmp	x0, x1
     b0c:	b.eq	b14 <LLVMGetTargetFromTriple+0xa0>  // b.none
     b10:	bl	0 <_ZdlPv>
     b14:	mov	w0, w19
     b18:	ldp	x19, x20, [sp, #16]
     b1c:	ldp	x21, x22, [sp, #32]
     b20:	ldp	x29, x30, [sp], #112
     b24:	ret
     b28:	mov	w19, #0x1                   	// #1
     b2c:	cbz	x22, b00 <LLVMGetTargetFromTriple+0x8c>
     b30:	ldr	x0, [sp, #80]
     b34:	bl	0 <strdup>
     b38:	str	x0, [x22]
     b3c:	b	b00 <LLVMGetTargetFromTriple+0x8c>

0000000000000b40 <LLVMGetTargetMachineCPU>:
     b40:	stp	x29, x30, [sp, #-64]!
     b44:	mov	x29, sp
     b48:	str	x19, [sp, #16]
     b4c:	ldr	x1, [x0, #504]
     b50:	cbz	x1, ba0 <LLVMGetTargetMachineCPU+0x60>
     b54:	ldr	x2, [x0, #512]
     b58:	add	x0, sp, #0x20
     b5c:	add	x3, x0, #0x10
     b60:	str	x3, [sp, #32]
     b64:	mov	w3, #0x0                   	// #0
     b68:	add	x2, x1, x2
     b6c:	bl	0 <LLVMGetFirstTarget>
     b70:	ldr	x0, [sp, #32]
     b74:	bl	0 <strdup>
     b78:	mov	x19, x0
     b7c:	ldr	x0, [sp, #32]
     b80:	add	x1, sp, #0x30
     b84:	cmp	x0, x1
     b88:	b.eq	b90 <LLVMGetTargetMachineCPU+0x50>  // b.none
     b8c:	bl	0 <_ZdlPv>
     b90:	mov	x0, x19
     b94:	ldr	x19, [sp, #16]
     b98:	ldp	x29, x30, [sp], #64
     b9c:	ret
     ba0:	add	x0, sp, #0x30
     ba4:	str	x0, [sp, #32]
     ba8:	str	xzr, [sp, #40]
     bac:	strb	wzr, [sp, #48]
     bb0:	b	b70 <LLVMGetTargetMachineCPU+0x30>

0000000000000bb4 <LLVMGetTargetMachineFeatureString>:
     bb4:	stp	x29, x30, [sp, #-64]!
     bb8:	mov	x29, sp
     bbc:	str	x19, [sp, #16]
     bc0:	ldr	x1, [x0, #536]
     bc4:	cbz	x1, c14 <LLVMGetTargetMachineFeatureString+0x60>
     bc8:	ldr	x2, [x0, #544]
     bcc:	add	x0, sp, #0x20
     bd0:	add	x3, x0, #0x10
     bd4:	str	x3, [sp, #32]
     bd8:	mov	w3, #0x0                   	// #0
     bdc:	add	x2, x1, x2
     be0:	bl	0 <LLVMGetFirstTarget>
     be4:	ldr	x0, [sp, #32]
     be8:	bl	0 <strdup>
     bec:	mov	x19, x0
     bf0:	ldr	x0, [sp, #32]
     bf4:	add	x1, sp, #0x30
     bf8:	cmp	x0, x1
     bfc:	b.eq	c04 <LLVMGetTargetMachineFeatureString+0x50>  // b.none
     c00:	bl	0 <_ZdlPv>
     c04:	mov	x0, x19
     c08:	ldr	x19, [sp, #16]
     c0c:	ldp	x29, x30, [sp], #64
     c10:	ret
     c14:	add	x0, sp, #0x30
     c18:	str	x0, [sp, #32]
     c1c:	str	xzr, [sp, #40]
     c20:	strb	wzr, [sp, #48]
     c24:	b	be4 <LLVMGetTargetMachineFeatureString+0x30>

0000000000000c28 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
     c28:	sub	sp, sp, #0x230
     c2c:	stp	x29, x30, [sp]
     c30:	mov	x29, sp
     c34:	stp	x19, x20, [sp, #16]
     c38:	stp	x21, x22, [sp, #32]
     c3c:	stp	x23, x24, [sp, #48]
     c40:	stp	x25, x26, [sp, #64]
     c44:	mov	x20, x0
     c48:	mov	x23, x1
     c4c:	mov	x22, x2
     c50:	mov	w24, w3
     c54:	mov	x25, x4
     c58:	add	x26, sp, #0x220
     c5c:	mov	x0, x26
     c60:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
     c64:	add	x0, sp, #0x210
     c68:	str	x0, [sp, #512]
     c6c:	str	xzr, [sp, #520]
     c70:	strb	wzr, [sp, #528]
     c74:	strb	wzr, [sp, #88]
     c78:	strb	wzr, [sp, #89]
     c7c:	strb	wzr, [sp, #96]
     c80:	strb	wzr, [sp, #97]
     c84:	add	x19, sp, #0x50
     c88:	add	x0, sp, #0x80
     c8c:	str	x0, [sp, #112]
     c90:	str	wzr, [sp, #120]
     c94:	mov	w0, #0x8                   	// #8
     c98:	str	w0, [sp, #124]
     c9c:	add	x1, sp, #0x98
     ca0:	str	x1, [sp, #136]
     ca4:	str	wzr, [sp, #144]
     ca8:	mov	w1, #0x10                  	// #16
     cac:	str	w1, [sp, #148]
     cb0:	add	x1, sp, #0x128
     cb4:	str	x1, [sp, #280]
     cb8:	str	xzr, [sp, #288]
     cbc:	strb	wzr, [sp, #296]
     cc0:	add	x1, sp, #0x148
     cc4:	str	x1, [sp, #312]
     cc8:	str	wzr, [sp, #320]
     ccc:	str	w0, [sp, #324]
     cd0:	str	xzr, [sp, #456]
     cd4:	add	x1, sp, #0x1e0
     cd8:	str	x1, [sp, #464]
     cdc:	str	wzr, [sp, #472]
     ce0:	str	w0, [sp, #476]
     ce4:	mov	x0, x19
     ce8:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     cec:	add	x1, x20, #0xd8
     cf0:	add	x0, x19, #0xc8
     cf4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     cf8:	ldrb	w0, [x20, #16]
     cfc:	strb	w0, [sp, #80]
     d00:	ldr	w0, [x20, #20]
     d04:	str	w0, [sp, #84]
     d08:	ldrh	w0, [x20, #24]
     d0c:	strh	w0, [sp, #88]
     d10:	ldrh	w0, [x20, #32]
     d14:	strh	w0, [sp, #96]
     d18:	ldr	w0, [x20, #36]
     d1c:	str	w0, [sp, #100]
     d20:	ldr	w0, [x20, #28]
     d24:	str	w0, [sp, #92]
     d28:	ldr	w0, [x20, #40]
     d2c:	str	w0, [sp, #104]
     d30:	add	x1, x20, #0x30
     d34:	add	x0, x19, #0x20
     d38:	bl	0 <LLVMGetFirstTarget>
     d3c:	add	x1, x20, #0x48
     d40:	add	x0, x19, #0x38
     d44:	bl	0 <LLVMGetFirstTarget>
     d48:	add	x1, x20, #0xf8
     d4c:	add	x0, x19, #0xe8
     d50:	bl	0 <LLVMGetFirstTarget>
     d54:	add	x1, x20, #0x190
     d58:	add	x0, x19, #0x180
     d5c:	bl	0 <LLVMGetFirstTarget>
     d60:	mov	x1, x19
     d64:	mov	x0, x23
     d68:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
     d6c:	mov	x0, x19
     d70:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
     d74:	cmp	w24, #0x0
     d78:	ldr	x0, [x20]
     d7c:	ldr	x7, [x0, #80]
     d80:	mov	x6, #0x0                   	// #0
     d84:	mov	w5, #0x1                   	// #1
     d88:	cset	w4, ne  // ne = any
     d8c:	mov	x3, #0x0                   	// #0
     d90:	mov	x2, x22
     d94:	mov	x1, x26
     d98:	mov	x0, x20
     d9c:	blr	x7
     da0:	and	w0, w0, #0xff
     da4:	cbnz	w0, e0c <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1e4>
     da8:	mov	x1, x23
     dac:	add	x0, sp, #0x220
     db0:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
     db4:	ldr	x1, [x22, #24]
     db8:	ldr	x0, [x22, #8]
     dbc:	mov	w19, #0x0                   	// #0
     dc0:	cmp	x1, x0
     dc4:	b.eq	dd0 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1a8>  // b.none
     dc8:	mov	x0, x22
     dcc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     dd0:	ldr	x0, [sp, #512]
     dd4:	add	x1, sp, #0x210
     dd8:	cmp	x0, x1
     ddc:	b.eq	de4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1bc>  // b.none
     de0:	bl	0 <_ZdlPv>
     de4:	add	x0, sp, #0x220
     de8:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
     dec:	mov	w0, w19
     df0:	ldp	x19, x20, [sp, #16]
     df4:	ldp	x21, x22, [sp, #32]
     df8:	ldp	x23, x24, [sp, #48]
     dfc:	ldp	x25, x26, [sp, #64]
     e00:	ldp	x29, x30, [sp]
     e04:	add	sp, sp, #0x230
     e08:	ret
     e0c:	mov	x4, #0x2c                  	// #44
     e10:	adrp	x3, 0 <LLVMGetFirstTarget>
     e14:	add	x3, x3, #0x0
     e18:	ldr	x2, [sp, #520]
     e1c:	mov	x1, #0x0                   	// #0
     e20:	add	x0, sp, #0x200
     e24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     e28:	ldr	x0, [sp, #512]
     e2c:	bl	0 <strdup>
     e30:	str	x0, [x25]
     e34:	mov	w19, #0x1                   	// #1
     e38:	b	dd0 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1a8>

0000000000000e3c <LLVMTargetMachineEmitToFile>:
     e3c:	stp	x29, x30, [sp, #-192]!
     e40:	mov	x29, sp
     e44:	stp	x19, x20, [sp, #16]
     e48:	stp	x21, x22, [sp, #32]
     e4c:	str	x23, [sp, #48]
     e50:	mov	x20, x0
     e54:	mov	x21, x1
     e58:	mov	x19, x2
     e5c:	mov	w22, w3
     e60:	mov	x23, x4
     e64:	str	wzr, [sp, #176]
     e68:	bl	0 <_ZNSt3_V215system_categoryEv>
     e6c:	str	x0, [sp, #184]
     e70:	mov	x2, #0x0                   	// #0
     e74:	cbz	x19, e84 <LLVMTargetMachineEmitToFile+0x48>
     e78:	mov	x0, x19
     e7c:	bl	0 <strlen>
     e80:	mov	x2, x0
     e84:	mov	w4, #0x0                   	// #0
     e88:	add	x3, sp, #0xb0
     e8c:	mov	x1, x19
     e90:	add	x0, sp, #0x68
     e94:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     e98:	ldr	w1, [sp, #176]
     e9c:	cbz	w1, efc <LLVMTargetMachineEmitToFile+0xc0>
     ea0:	ldr	x0, [sp, #184]
     ea4:	ldr	x2, [x0]
     ea8:	add	x19, sp, #0x48
     eac:	mov	x8, x19
     eb0:	ldr	x2, [x2, #32]
     eb4:	blr	x2
     eb8:	ldr	x0, [sp, #72]
     ebc:	bl	0 <strdup>
     ec0:	str	x0, [x23]
     ec4:	ldr	x0, [sp, #72]
     ec8:	add	x19, x19, #0x10
     ecc:	cmp	x0, x19
     ed0:	b.eq	ed8 <LLVMTargetMachineEmitToFile+0x9c>  // b.none
     ed4:	bl	0 <_ZdlPv>
     ed8:	mov	w19, #0x1                   	// #1
     edc:	add	x0, sp, #0x68
     ee0:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     ee4:	mov	w0, w19
     ee8:	ldp	x19, x20, [sp, #16]
     eec:	ldp	x21, x22, [sp, #32]
     ef0:	ldr	x23, [sp, #48]
     ef4:	ldp	x29, x30, [sp], #192
     ef8:	ret
     efc:	mov	x4, x23
     f00:	mov	w3, w22
     f04:	add	x2, sp, #0x68
     f08:	mov	x1, x21
     f0c:	mov	x0, x20
     f10:	bl	c28 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     f14:	cmp	w0, #0x0
     f18:	cset	w19, ne  // ne = any
     f1c:	ldr	x1, [sp, #128]
     f20:	ldr	x0, [sp, #112]
     f24:	cmp	x1, x0
     f28:	b.eq	edc <LLVMTargetMachineEmitToFile+0xa0>  // b.none
     f2c:	add	x0, sp, #0x68
     f30:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     f34:	b	edc <LLVMTargetMachineEmitToFile+0xa0>

0000000000000f38 <LLVMTargetMachineEmitToMemoryBuffer>:
     f38:	stp	x29, x30, [sp, #-128]!
     f3c:	mov	x29, sp
     f40:	stp	x19, x20, [sp, #16]
     f44:	stp	x21, x22, [sp, #32]
     f48:	stp	x23, x24, [sp, #48]
     f4c:	mov	x20, x0
     f50:	mov	x22, x1
     f54:	mov	w23, w2
     f58:	mov	x24, x3
     f5c:	mov	x21, x4
     f60:	add	x0, sp, #0x80
     f64:	str	x0, [sp, #112]
     f68:	str	wzr, [sp, #120]
     f6c:	str	wzr, [sp, #124]
     f70:	mov	w0, #0x1                   	// #1
     f74:	str	w0, [sp, #96]
     f78:	str	xzr, [sp, #88]
     f7c:	str	xzr, [sp, #80]
     f80:	str	xzr, [sp, #72]
     f84:	adrp	x5, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     f88:	ldr	x5, [x5]
     f8c:	add	x5, x5, #0x10
     f90:	str	x5, [sp, #64]
     f94:	add	x0, sp, #0x70
     f98:	str	x0, [sp, #104]
     f9c:	add	x19, sp, #0x40
     fa0:	mov	w3, #0x0                   	// #0
     fa4:	mov	x2, #0x0                   	// #0
     fa8:	mov	x1, #0x0                   	// #0
     fac:	mov	x0, x19
     fb0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     fb4:	mov	x4, x24
     fb8:	mov	w3, w23
     fbc:	mov	x2, x19
     fc0:	mov	x1, x22
     fc4:	mov	x0, x20
     fc8:	bl	c28 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     fcc:	mov	w20, w0
     fd0:	ldr	x0, [sp, #104]
     fd4:	adrp	x2, 0 <LLVMGetFirstTarget>
     fd8:	add	x2, x2, #0x0
     fdc:	ldr	w1, [x0, #8]
     fe0:	ldr	x0, [x0]
     fe4:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
     fe8:	str	x0, [x21]
     fec:	cmp	w20, #0x0
     ff0:	cset	w20, ne  // ne = any
     ff4:	adrp	x0, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     ff8:	ldr	x0, [x0]
     ffc:	add	x0, x0, #0x10
    1000:	str	x0, [sp, #64]
    1004:	mov	x0, x19
    1008:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
    100c:	ldr	x0, [sp, #112]
    1010:	add	x1, sp, #0x80
    1014:	cmp	x0, x1
    1018:	b.eq	1020 <LLVMTargetMachineEmitToMemoryBuffer+0xe8>  // b.none
    101c:	bl	0 <free>
    1020:	mov	w0, w20
    1024:	ldp	x19, x20, [sp, #16]
    1028:	ldp	x21, x22, [sp, #32]
    102c:	ldp	x23, x24, [sp, #48]
    1030:	ldp	x29, x30, [sp], #128
    1034:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	str	x23, [sp, #48]
  20:	mov	x20, x1
  24:	ldr	w22, [x1, #8]
  28:	mov	w23, w22
  2c:	ldr	w21, [x0, #8]
  30:	cmp	x21, w22, uxtw
  34:	b.cc	94 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x94>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x58>
  3c:	lsl	x2, x23, #2
  40:	ldr	x1, [x1]
  44:	ldr	x0, [x0]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	74 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x74>  // b.pmore
  58:	str	w22, [x19, #8]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x43                  	// #67
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	ldr	w0, [x0, #12]
  98:	cmp	x23, x0
  9c:	b.hi	100 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x100>  // b.pmore
  a0:	cbz	x21, b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
  a4:	lsl	x2, x21, #2
  a8:	ldr	x1, [x1]
  ac:	ldr	x0, [x19]
  b0:	bl	0 <memmove>
  b4:	ldr	x0, [x20]
  b8:	lsl	x21, x21, #2
  bc:	add	x1, x0, x21
  c0:	ldr	w2, [x20, #8]
  c4:	lsl	x2, x2, #2
  c8:	add	x0, x0, x2
  cc:	cmp	x1, x0
  d0:	b.eq	e4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xe4>  // b.none
  d4:	ldr	x0, [x19]
  d8:	sub	x2, x2, x21
  dc:	add	x0, x0, x21
  e0:	bl	0 <memcpy>
  e4:	ldr	w0, [x19, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	120 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x120>  // b.pmore
  f0:	str	w22, [x19, #8]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	b	64 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x64>
 100:	str	wzr, [x19, #8]
 104:	mov	x3, #0x4                   	// #4
 108:	mov	x2, x23
 10c:	add	x1, x19, #0x10
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x21, #0x0                   	// #0
 11c:	b	b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x43                  	// #67
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 130:	add	x1, x1, #0x0
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 138:	add	x0, x0, #0x0
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	str	x23, [sp, #48]
  20:	mov	x20, x1
  24:	ldr	w21, [x1, #8]
  28:	mov	w23, w21
  2c:	ldr	w22, [x0, #8]
  30:	cmp	x22, w21, uxtw
  34:	b.cc	94 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x94>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>
  3c:	mov	x2, x23
  40:	ldr	x1, [x1]
  44:	ldr	x0, [x0]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	74 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x74>  // b.pmore
  58:	str	w21, [x19, #8]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x43                  	// #67
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	ldr	w0, [x0, #12]
  98:	cmp	x23, x0
  9c:	b.hi	fc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xfc>  // b.pmore
  a0:	cbz	x22, 13c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x13c>
  a4:	mov	x2, x22
  a8:	ldr	x1, [x1]
  ac:	ldr	x0, [x19]
  b0:	bl	0 <memmove>
  b4:	ldr	x0, [x20]
  b8:	add	x1, x0, x22
  bc:	ldr	w2, [x20, #8]
  c0:	add	x0, x0, w2, uxtw
  c4:	cmp	x1, x0
  c8:	b.eq	e0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xe0>  // b.none
  cc:	ldr	x0, [x19]
  d0:	add	x0, x0, x22
  d4:	mov	w2, w2
  d8:	sub	x2, x2, x22
  dc:	bl	0 <memcpy>
  e0:	ldr	w0, [x19, #12]
  e4:	cmp	x23, x0
  e8:	b.hi	11c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x11c>  // b.pmore
  ec:	str	w21, [x19, #8]
  f0:	ldp	x21, x22, [sp, #32]
  f4:	ldr	x23, [sp, #48]
  f8:	b	64 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x64>
  fc:	str	wzr, [x19, #8]
 100:	mov	x3, #0x1                   	// #1
 104:	mov	x2, x23
 108:	add	x1, x19, #0x10
 10c:	mov	x0, x19
 110:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 114:	mov	x22, #0x0                   	// #0
 118:	b	b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>
 11c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x43                  	// #67
 128:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
 12c:	add	x1, x1, #0x0
 130:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
 134:	add	x0, x0, #0x0
 138:	bl	0 <__assert_fail>
 13c:	cbz	w21, ec <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xec>
 140:	ldr	x1, [x1]
 144:	ldr	x0, [x19]
 148:	mov	w2, w21
 14c:	b	d4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xd4>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	str	x23, [sp, #48]
  20:	mov	x20, x1
  24:	ldr	w22, [x1, #8]
  28:	mov	w23, w22
  2c:	ldr	w21, [x0, #8]
  30:	cmp	x21, w22, uxtw
  34:	b.cc	94 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x94>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x58>
  3c:	lsl	x2, x23, #3
  40:	ldr	x1, [x1]
  44:	ldr	x0, [x0]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	74 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x74>  // b.pmore
  58:	str	w22, [x19, #8]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x43                  	// #67
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	ldr	w0, [x0, #12]
  98:	cmp	x23, x0
  9c:	b.hi	100 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x100>  // b.pmore
  a0:	cbz	x21, b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
  a4:	lsl	x2, x21, #3
  a8:	ldr	x1, [x1]
  ac:	ldr	x0, [x19]
  b0:	bl	0 <memmove>
  b4:	ldr	x0, [x20]
  b8:	lsl	x21, x21, #3
  bc:	add	x1, x0, x21
  c0:	ldr	w2, [x20, #8]
  c4:	lsl	x2, x2, #3
  c8:	add	x0, x0, x2
  cc:	cmp	x1, x0
  d0:	b.eq	e4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xe4>  // b.none
  d4:	ldr	x0, [x19]
  d8:	sub	x2, x2, x21
  dc:	add	x0, x0, x21
  e0:	bl	0 <memcpy>
  e4:	ldr	w0, [x19, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	120 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x120>  // b.pmore
  f0:	str	w22, [x19, #8]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	b	64 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x64>
 100:	str	wzr, [x19, #8]
 104:	mov	x3, #0x8                   	// #8
 108:	mov	x2, x23
 10c:	add	x1, x19, #0x10
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x21, #0x0                   	// #0
 11c:	b	b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x43                  	// #67
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 130:	add	x1, x1, #0x0
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 138:	add	x0, x0, #0x0
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	str	x23, [sp, #48]
  20:	mov	x20, x1
  24:	ldr	w22, [x1, #8]
  28:	mov	w23, w22
  2c:	ldr	w21, [x0, #8]
  30:	cmp	x21, w22, uxtw
  34:	b.cc	94 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x94>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x58>
  3c:	lsl	x2, x23, #4
  40:	ldr	x1, [x1]
  44:	ldr	x0, [x0]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	74 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x74>  // b.pmore
  58:	str	w22, [x19, #8]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x43                  	// #67
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	ldr	w0, [x0, #12]
  98:	cmp	x23, x0
  9c:	b.hi	100 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x100>  // b.pmore
  a0:	cbz	x21, b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
  a4:	lsl	x2, x21, #4
  a8:	ldr	x1, [x1]
  ac:	ldr	x0, [x19]
  b0:	bl	0 <memmove>
  b4:	ldr	x0, [x20]
  b8:	lsl	x21, x21, #4
  bc:	add	x1, x0, x21
  c0:	ldr	w2, [x20, #8]
  c4:	lsl	x2, x2, #4
  c8:	add	x0, x0, x2
  cc:	cmp	x1, x0
  d0:	b.eq	e4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xe4>  // b.none
  d4:	ldr	x0, [x19]
  d8:	sub	x2, x2, x21
  dc:	add	x0, x0, x21
  e0:	bl	0 <memcpy>
  e4:	ldr	w0, [x19, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	120 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x120>  // b.pmore
  f0:	str	w22, [x19, #8]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	b	64 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x64>
 100:	str	wzr, [x19, #8]
 104:	mov	x3, #0x10                  	// #16
 108:	mov	x2, x23
 10c:	add	x1, x19, x3
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x21, #0x0                   	// #0
 11c:	b	b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x43                  	// #67
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 130:	add	x1, x1, #0x0
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 138:	add	x0, x0, #0x0
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>
