
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210fc8 <_start>:
  210fc8:	mov	x29, #0x0                   	// #0
  210fcc:	mov	x30, #0x0                   	// #0
  210fd0:	mov	x5, x0
  210fd4:	ldr	x1, [sp]
  210fd8:	add	x2, sp, #0x8
  210fdc:	mov	x6, sp
  210fe0:	movz	x0, #0x0, lsl #48
  210fe4:	movk	x0, #0x0, lsl #32
  210fe8:	movk	x0, #0x21, lsl #16
  210fec:	movk	x0, #0x1118
  210ff0:	movz	x3, #0x0, lsl #48
  210ff4:	movk	x3, #0x0, lsl #32
  210ff8:	movk	x3, #0x21, lsl #16
  210ffc:	movk	x3, #0x1708
  211000:	movz	x4, #0x0, lsl #48
  211004:	movk	x4, #0x0, lsl #32
  211008:	movk	x4, #0x21, lsl #16
  21100c:	movk	x4, #0x1788
  211010:	bl	2117d0 <__libc_start_main@plt>
  211014:	bl	2117e0 <abort@plt>

0000000000211018 <call_weak_fn>:
  211018:	adrp	x0, 221000 <explicit_bzero@plt+0xf6b0>
  21101c:	ldr	x0, [x0, #2880]
  211020:	cbz	x0, 211028 <call_weak_fn+0x10>
  211024:	b	2117f0 <__gmon_start__@plt>
  211028:	ret

000000000021102c <deregister_tm_clones>:
  21102c:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  211030:	add	x0, x0, #0xc38
  211034:	adrp	x1, 231000 <_DYNAMIC+0xf690>
  211038:	add	x1, x1, #0xc38
  21103c:	cmp	x0, x1
  211040:	b.eq	211074 <deregister_tm_clones+0x48>  // b.none
  211044:	stp	x29, x30, [sp, #-32]!
  211048:	mov	x29, sp
  21104c:	adrp	x0, 200000 <__FRAME_END__-0xed0>
  211050:	ldr	x0, [x0, #3344]
  211054:	str	x0, [sp, #24]
  211058:	mov	x1, x0
  21105c:	cbz	x1, 21106c <deregister_tm_clones+0x40>
  211060:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  211064:	add	x0, x0, #0xc38
  211068:	blr	x1
  21106c:	ldp	x29, x30, [sp], #32
  211070:	ret
  211074:	ret

0000000000211078 <register_tm_clones>:
  211078:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  21107c:	add	x0, x0, #0xc38
  211080:	adrp	x1, 231000 <_DYNAMIC+0xf690>
  211084:	add	x1, x1, #0xc38
  211088:	sub	x0, x0, x1
  21108c:	lsr	x1, x0, #63
  211090:	add	x0, x1, x0, asr #3
  211094:	cmp	xzr, x0, asr #1
  211098:	b.eq	2110d0 <register_tm_clones+0x58>  // b.none
  21109c:	stp	x29, x30, [sp, #-32]!
  2110a0:	mov	x29, sp
  2110a4:	asr	x1, x0, #1
  2110a8:	adrp	x0, 200000 <__FRAME_END__-0xed0>
  2110ac:	ldr	x0, [x0, #3352]
  2110b0:	str	x0, [sp, #24]
  2110b4:	mov	x2, x0
  2110b8:	cbz	x2, 2110c8 <register_tm_clones+0x50>
  2110bc:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  2110c0:	add	x0, x0, #0xc38
  2110c4:	blr	x2
  2110c8:	ldp	x29, x30, [sp], #32
  2110cc:	ret
  2110d0:	ret

00000000002110d4 <__do_global_dtors_aux>:
  2110d4:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  2110d8:	ldrb	w0, [x0, #3128]
  2110dc:	cbnz	w0, 211100 <__do_global_dtors_aux+0x2c>
  2110e0:	stp	x29, x30, [sp, #-16]!
  2110e4:	mov	x29, sp
  2110e8:	bl	21102c <deregister_tm_clones>
  2110ec:	adrp	x0, 231000 <_DYNAMIC+0xf690>
  2110f0:	mov	w1, #0x1                   	// #1
  2110f4:	strb	w1, [x0, #3128]
  2110f8:	ldp	x29, x30, [sp], #16
  2110fc:	ret
  211100:	ret

0000000000211104 <frame_dummy>:
  211104:	stp	x29, x30, [sp, #-16]!
  211108:	mov	x29, sp
  21110c:	bl	211078 <register_tm_clones>
  211110:	ldp	x29, x30, [sp], #16
  211114:	ret

0000000000211118 <main>:
  211118:	stp	x29, x30, [sp, #-32]!
  21111c:	stp	x20, x19, [sp, #16]
  211120:	mov	x29, sp
  211124:	mov	x19, x1
  211128:	mov	w20, w0
  21112c:	bl	211164 <save_argc_argv>
  211130:	mov	w0, w20
  211134:	mov	x1, x19
  211138:	bl	211178 <run>
  21113c:	mov	w19, w0
  211140:	bl	211800 <ask_password_agent_close@plt>
  211144:	bl	211810 <polkit_agent_close@plt>
  211148:	bl	211820 <pager_close@plt>
  21114c:	bl	211830 <mac_selinux_finish@plt>
  211150:	bl	211468 <static_destruct>
  211154:	lsr	w0, w19, #31
  211158:	ldp	x20, x19, [sp, #16]
  21115c:	ldp	x29, x30, [sp], #32
  211160:	ret

0000000000211164 <save_argc_argv>:
  211164:	adrp	x8, 231000 <_DYNAMIC+0xf690>
  211168:	adrp	x9, 231000 <_DYNAMIC+0xf690>
  21116c:	str	w0, [x8, #3136]
  211170:	str	x1, [x9, #3144]
  211174:	ret

0000000000211178 <run>:
  211178:	sub	sp, sp, #0x50
  21117c:	stp	x29, x30, [sp, #32]
  211180:	add	x29, sp, #0x20
  211184:	mov	w8, #0xffffffff            	// #-1
  211188:	stp	x22, x21, [sp, #48]
  21118c:	stp	x20, x19, [sp, #64]
  211190:	mov	x19, x1
  211194:	mov	w20, w0
  211198:	stur	xzr, [x29, #-8]
  21119c:	stur	w8, [x29, #-12]
  2111a0:	bl	211840 <log_setup_service@plt>
  2111a4:	cmp	w20, #0x3
  2111a8:	b.ne	21121c <run+0xa4>  // b.any
  2111ac:	ldr	x20, [x19, #8]
  2111b0:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  2111b4:	add	x1, x1, #0xe30
  2111b8:	mov	x0, x20
  2111bc:	bl	211850 <strcmp@plt>
  2111c0:	cbz	w0, 211264 <run+0xec>
  2111c4:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  2111c8:	add	x1, x1, #0xda6
  2111cc:	mov	x0, x20
  2111d0:	bl	211850 <strcmp@plt>
  2111d4:	cbz	w0, 2112b4 <run+0x13c>
  2111d8:	mov	w0, wzr
  2111dc:	bl	211860 <log_get_max_level_realm@plt>
  2111e0:	cmp	w0, #0x3
  2111e4:	b.lt	21125c <run+0xe4>  // b.tstop
  2111e8:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  2111ec:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  2111f0:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  2111f4:	mov	w1, #0x16                  	// #22
  2111f8:	add	x2, x2, #0xde7
  2111fc:	add	x4, x4, #0xe71
  211200:	add	x5, x5, #0xd65
  211204:	mov	w0, #0x3                   	// #3
  211208:	movk	w1, #0x4000, lsl #16
  21120c:	mov	w3, #0x48                  	// #72
  211210:	mov	x6, x20
  211214:	bl	211870 <log_internal_realm@plt>
  211218:	b	2113e8 <run+0x270>
  21121c:	mov	w0, wzr
  211220:	bl	211860 <log_get_max_level_realm@plt>
  211224:	cmp	w0, #0x3
  211228:	b.lt	21125c <run+0xe4>  // b.tstop
  21122c:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  211230:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  211234:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  211238:	mov	w1, #0x16                  	// #22
  21123c:	add	x2, x2, #0xde7
  211240:	add	x4, x4, #0xe71
  211244:	add	x5, x5, #0xe15
  211248:	mov	w0, #0x3                   	// #3
  21124c:	movk	w1, #0x4000, lsl #16
  211250:	mov	w3, #0x2d                  	// #45
  211254:	bl	211870 <log_internal_realm@plt>
  211258:	b	2113e8 <run+0x270>
  21125c:	mov	w20, #0xffffffea            	// #-22
  211260:	b	2113ec <run+0x274>
  211264:	adrp	x8, 231000 <_DYNAMIC+0xf690>
  211268:	ldr	x0, [x8, #3152]
  21126c:	add	x1, sp, #0x8
  211270:	str	xzr, [sp, #8]
  211274:	bl	21151c <read_line>
  211278:	mov	w20, w0
  21127c:	tbnz	w0, #31, 2112d0 <run+0x158>
  211280:	cbz	w20, 211308 <run+0x190>
  211284:	ldr	x1, [sp, #8]
  211288:	adrp	x0, 200000 <__FRAME_END__-0xed0>
  21128c:	add	x0, x0, #0xe13
  211290:	mov	x2, xzr
  211294:	bl	211880 <strjoin_real@plt>
  211298:	stur	x0, [x29, #-8]
  21129c:	cbz	x0, 21137c <run+0x204>
  2112a0:	ldr	x0, [sp, #8]
  2112a4:	bl	211890 <strlen@plt>
  2112a8:	add	x21, x0, #0x2
  2112ac:	mov	w22, #0x1                   	// #1
  2112b0:	b	2113b0 <run+0x238>
  2112b4:	adrp	x0, 200000 <__FRAME_END__-0xed0>
  2112b8:	add	x0, x0, #0xd63
  2112bc:	bl	2118a0 <strdup@plt>
  2112c0:	stur	x0, [x29, #-8]
  2112c4:	cbz	x0, 21134c <run+0x1d4>
  2112c8:	mov	w21, #0x1                   	// #1
  2112cc:	b	2113bc <run+0x244>
  2112d0:	mov	w0, wzr
  2112d4:	bl	211860 <log_get_max_level_realm@plt>
  2112d8:	cmp	w0, #0x3
  2112dc:	b.lt	211368 <run+0x1f0>  // b.tstop
  2112e0:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  2112e4:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  2112e8:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  2112ec:	add	x2, x2, #0xde7
  2112f0:	add	x4, x4, #0xe71
  2112f4:	add	x5, x5, #0xd34
  2112f8:	mov	w0, #0x3                   	// #3
  2112fc:	mov	w3, #0x34                  	// #52
  211300:	mov	w1, w20
  211304:	b	211344 <run+0x1cc>
  211308:	mov	w0, wzr
  21130c:	bl	211860 <log_get_max_level_realm@plt>
  211310:	cmp	w0, #0x3
  211314:	b.lt	2113a4 <run+0x22c>  // b.tstop
  211318:	mov	w8, #0x16                  	// #22
  21131c:	movk	w8, #0x4000, lsl #16
  211320:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  211324:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  211328:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  21132c:	sub	w1, w8, #0x11
  211330:	add	x2, x2, #0xde7
  211334:	add	x4, x4, #0xe71
  211338:	add	x5, x5, #0xd86
  21133c:	mov	w0, #0x3                   	// #3
  211340:	mov	w3, #0x37                  	// #55
  211344:	bl	211870 <log_internal_realm@plt>
  211348:	b	211394 <run+0x21c>
  21134c:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  211350:	adrp	x3, 200000 <__FRAME_END__-0xed0>
  211354:	add	x1, x1, #0xde7
  211358:	add	x3, x3, #0xe71
  21135c:	mov	w2, #0x42                  	// #66
  211360:	bl	2118b0 <log_oom_internal@plt>
  211364:	b	2113e8 <run+0x270>
  211368:	mov	w22, wzr
  21136c:	neg	w8, w20
  211370:	mov	x21, xzr
  211374:	sub	w20, w22, w8, uxtb
  211378:	b	2113b0 <run+0x238>
  21137c:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  211380:	adrp	x3, 200000 <__FRAME_END__-0xed0>
  211384:	add	x1, x1, #0xde7
  211388:	add	x3, x3, #0xe71
  21138c:	mov	w2, #0x3b                  	// #59
  211390:	bl	2118b0 <log_oom_internal@plt>
  211394:	mov	w20, w0
  211398:	mov	w22, wzr
  21139c:	mov	x21, xzr
  2113a0:	b	2113b0 <run+0x238>
  2113a4:	mov	w22, wzr
  2113a8:	mov	x21, xzr
  2113ac:	mov	w20, #0xfffffffb            	// #-5
  2113b0:	add	x0, sp, #0x8
  2113b4:	bl	2114c8 <erase_and_freep>
  2113b8:	tbz	w22, #0, 2113ec <run+0x274>
  2113bc:	mov	w1, #0x802                 	// #2050
  2113c0:	mov	w0, #0x1                   	// #1
  2113c4:	movk	w1, #0x8, lsl #16
  2113c8:	mov	w2, wzr
  2113cc:	bl	2118c0 <socket@plt>
  2113d0:	stur	w0, [x29, #-12]
  2113d4:	tbnz	w0, #31, 211414 <run+0x29c>
  2113d8:	ldr	x1, [x19, #16]
  2113dc:	ldur	x2, [x29, #-8]
  2113e0:	mov	x3, x21
  2113e4:	bl	21153c <send_on_socket>
  2113e8:	mov	w20, w0
  2113ec:	sub	x0, x29, #0xc
  2113f0:	bl	211504 <closep>
  2113f4:	sub	x0, x29, #0x8
  2113f8:	bl	2114c8 <erase_and_freep>
  2113fc:	mov	w0, w20
  211400:	ldp	x20, x19, [sp, #64]
  211404:	ldp	x22, x21, [sp, #48]
  211408:	ldp	x29, x30, [sp, #32]
  21140c:	add	sp, sp, #0x50
  211410:	ret
  211414:	bl	2118d0 <__errno_location@plt>
  211418:	ldr	w19, [x0]
  21141c:	mov	w0, wzr
  211420:	bl	211860 <log_get_max_level_realm@plt>
  211424:	cmp	w0, #0x3
  211428:	b.lt	211454 <run+0x2dc>  // b.tstop
  21142c:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  211430:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  211434:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  211438:	add	x2, x2, #0xde7
  21143c:	add	x4, x4, #0xe71
  211440:	add	x5, x5, #0xd20
  211444:	mov	w0, #0x3                   	// #3
  211448:	mov	w3, #0x4c                  	// #76
  21144c:	mov	w1, w19
  211450:	b	211254 <run+0xdc>
  211454:	cmp	w19, #0x0
  211458:	mov	w8, wzr
  21145c:	cneg	w9, w19, mi  // mi = first
  211460:	sub	w20, w8, w9, uxtb
  211464:	b	2113ec <run+0x274>

0000000000211468 <static_destruct>:
  211468:	stp	x29, x30, [sp, #-32]!
  21146c:	stp	x20, x19, [sp, #16]
  211470:	adrp	x8, 221000 <explicit_bzero@plt+0xf6b0>
  211474:	ldr	x8, [x8, #2888]
  211478:	mov	x29, sp
  21147c:	cbz	x8, 2114bc <static_destruct+0x54>
  211480:	adrp	x0, 221000 <explicit_bzero@plt+0xf6b0>
  211484:	ldr	x0, [x0, #2888]
  211488:	bl	2116fc <ALIGN_TO>
  21148c:	adrp	x20, 221000 <explicit_bzero@plt+0xf6b0>
  211490:	ldr	x20, [x20, #2896]
  211494:	cmp	x0, x20
  211498:	b.cs	2114bc <static_destruct+0x54>  // b.hs, b.nlast
  21149c:	mov	x19, x0
  2114a0:	ldp	x0, x8, [x19]
  2114a4:	blr	x8
  2114a8:	add	x0, x19, #0x10
  2114ac:	bl	2116fc <ALIGN_TO>
  2114b0:	mov	x19, x0
  2114b4:	cmp	x0, x20
  2114b8:	b.cc	2114a0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  2114bc:	ldp	x20, x19, [sp, #16]
  2114c0:	ldp	x29, x30, [sp], #32
  2114c4:	ret

00000000002114c8 <erase_and_freep>:
  2114c8:	stp	x29, x30, [sp, #-32]!
  2114cc:	str	x19, [sp, #16]
  2114d0:	ldr	x19, [x0]
  2114d4:	mov	x29, sp
  2114d8:	cbz	x19, 2114f8 <erase_and_freep+0x30>
  2114dc:	mov	x0, x19
  2114e0:	bl	2118e0 <malloc_usable_size@plt>
  2114e4:	mov	x1, x0
  2114e8:	mov	x0, x19
  2114ec:	bl	2116e4 <explicit_bzero_safe>
  2114f0:	mov	x0, x19
  2114f4:	bl	2118f0 <free@plt>
  2114f8:	ldr	x19, [sp, #16]
  2114fc:	ldp	x29, x30, [sp], #32
  211500:	ret

0000000000211504 <closep>:
  211504:	stp	x29, x30, [sp, #-16]!
  211508:	ldr	w0, [x0]
  21150c:	mov	x29, sp
  211510:	bl	211900 <safe_close@plt>
  211514:	ldp	x29, x30, [sp], #16
  211518:	ret

000000000021151c <read_line>:
  21151c:	stp	x29, x30, [sp, #-16]!
  211520:	mov	x3, x1
  211524:	mov	w1, #0x100000              	// #1048576
  211528:	mov	w2, wzr
  21152c:	mov	x29, sp
  211530:	bl	211910 <read_line_full@plt>
  211534:	ldp	x29, x30, [sp], #16
  211538:	ret

000000000021153c <send_on_socket>:
  21153c:	sub	sp, sp, #0xc0
  211540:	movi	v0.2d, #0x0
  211544:	stp	x29, x30, [sp, #128]
  211548:	str	x23, [sp, #144]
  21154c:	stp	x22, x21, [sp, #160]
  211550:	stp	x20, x19, [sp, #176]
  211554:	add	x29, sp, #0x80
  211558:	stp	q0, q0, [sp, #96]
  21155c:	stp	q0, q0, [sp, #64]
  211560:	stp	q0, q0, [sp, #32]
  211564:	stp	q0, q0, [sp]
  211568:	tbnz	w0, #31, 211678 <send_on_socket+0x13c>
  21156c:	mov	x19, x1
  211570:	cbz	x1, 21169c <send_on_socket+0x160>
  211574:	mov	x21, x2
  211578:	cbz	x2, 2116c0 <send_on_socket+0x184>
  21157c:	mov	w22, w0
  211580:	mov	x0, sp
  211584:	mov	x1, x19
  211588:	mov	x20, x3
  21158c:	bl	211920 <sockaddr_un_set_path@plt>
  211590:	mov	w23, w0
  211594:	tbnz	w0, #31, 2115c0 <send_on_socket+0x84>
  211598:	mov	x4, sp
  21159c:	mov	w3, #0x4000                	// #16384
  2115a0:	mov	w0, w22
  2115a4:	mov	x1, x21
  2115a8:	mov	x2, x20
  2115ac:	mov	w5, w23
  2115b0:	bl	211930 <sendto@plt>
  2115b4:	tbnz	x0, #63, 211600 <send_on_socket+0xc4>
  2115b8:	mov	w0, wzr
  2115bc:	b	211660 <send_on_socket+0x124>
  2115c0:	mov	w0, wzr
  2115c4:	bl	211860 <log_get_max_level_realm@plt>
  2115c8:	cmp	w0, #0x3
  2115cc:	b.lt	211644 <send_on_socket+0x108>  // b.tstop
  2115d0:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  2115d4:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  2115d8:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  2115dc:	add	x2, x2, #0xde7
  2115e0:	add	x4, x4, #0xe81
  2115e4:	add	x5, x5, #0xe32
  2115e8:	mov	w0, #0x3                   	// #3
  2115ec:	mov	w3, #0x1c                  	// #28
  2115f0:	mov	w1, w23
  2115f4:	mov	x6, x19
  2115f8:	bl	211870 <log_internal_realm@plt>
  2115fc:	b	211660 <send_on_socket+0x124>
  211600:	bl	2118d0 <__errno_location@plt>
  211604:	ldr	w19, [x0]
  211608:	mov	w0, wzr
  21160c:	bl	211860 <log_get_max_level_realm@plt>
  211610:	cmp	w0, #0x3
  211614:	b.lt	211650 <send_on_socket+0x114>  // b.tstop
  211618:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  21161c:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  211620:	adrp	x5, 200000 <__FRAME_END__-0xed0>
  211624:	add	x2, x2, #0xde7
  211628:	add	x4, x4, #0xe81
  21162c:	add	x5, x5, #0xd50
  211630:	mov	w0, #0x3                   	// #3
  211634:	mov	w3, #0x1f                  	// #31
  211638:	mov	w1, w19
  21163c:	bl	211870 <log_internal_realm@plt>
  211640:	b	211660 <send_on_socket+0x124>
  211644:	mov	w8, wzr
  211648:	neg	w9, w23
  21164c:	b	21165c <send_on_socket+0x120>
  211650:	cmp	w19, #0x0
  211654:	mov	w8, wzr
  211658:	cneg	w9, w19, mi  // mi = first
  21165c:	sub	w0, w8, w9, uxtb
  211660:	ldp	x20, x19, [sp, #176]
  211664:	ldp	x22, x21, [sp, #160]
  211668:	ldr	x23, [sp, #144]
  21166c:	ldp	x29, x30, [sp, #128]
  211670:	add	sp, sp, #0xc0
  211674:	ret
  211678:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  21167c:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  211680:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  211684:	add	x1, x1, #0xe0b
  211688:	add	x2, x2, #0xde7
  21168c:	add	x4, x4, #0xda8
  211690:	mov	w3, #0x16                  	// #22
  211694:	mov	w0, wzr
  211698:	bl	211940 <log_assert_failed_realm@plt>
  21169c:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  2116a0:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  2116a4:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  2116a8:	add	x1, x1, #0xe75
  2116ac:	add	x2, x2, #0xde7
  2116b0:	add	x4, x4, #0xda8
  2116b4:	mov	w3, #0x17                  	// #23
  2116b8:	mov	w0, wzr
  2116bc:	bl	211940 <log_assert_failed_realm@plt>
  2116c0:	adrp	x1, 200000 <__FRAME_END__-0xed0>
  2116c4:	adrp	x2, 200000 <__FRAME_END__-0xed0>
  2116c8:	adrp	x4, 200000 <__FRAME_END__-0xed0>
  2116cc:	add	x1, x1, #0xd7f
  2116d0:	add	x2, x2, #0xde7
  2116d4:	add	x4, x4, #0xda8
  2116d8:	mov	w3, #0x18                  	// #24
  2116dc:	mov	w0, wzr
  2116e0:	bl	211940 <log_assert_failed_realm@plt>

00000000002116e4 <explicit_bzero_safe>:
  2116e4:	cbz	x1, 2116f8 <explicit_bzero_safe+0x14>
  2116e8:	stp	x29, x30, [sp, #-16]!
  2116ec:	mov	x29, sp
  2116f0:	bl	211950 <explicit_bzero@plt>
  2116f4:	ldp	x29, x30, [sp], #16
  2116f8:	ret

00000000002116fc <ALIGN_TO>:
  2116fc:	add	x8, x0, #0x7
  211700:	and	x0, x8, #0xfffffffffffffff8
  211704:	ret

0000000000211708 <__libc_csu_init>:
  211708:	stp	x29, x30, [sp, #-64]!
  21170c:	mov	x29, sp
  211710:	stp	x19, x20, [sp, #16]
  211714:	adrp	x20, 221000 <explicit_bzero@plt+0xf6b0>
  211718:	add	x20, x20, #0x970
  21171c:	stp	x21, x22, [sp, #32]
  211720:	adrp	x21, 221000 <explicit_bzero@plt+0xf6b0>
  211724:	add	x21, x21, #0x968
  211728:	sub	x20, x20, x21
  21172c:	mov	w22, w0
  211730:	stp	x23, x24, [sp, #48]
  211734:	mov	x23, x1
  211738:	mov	x24, x2
  21173c:	bl	21178c <_init>
  211740:	cmp	xzr, x20, asr #3
  211744:	b.eq	211770 <__libc_csu_init+0x68>  // b.none
  211748:	asr	x20, x20, #3
  21174c:	mov	x19, #0x0                   	// #0
  211750:	ldr	x3, [x21, x19, lsl #3]
  211754:	mov	x2, x24
  211758:	add	x19, x19, #0x1
  21175c:	mov	x1, x23
  211760:	mov	w0, w22
  211764:	blr	x3
  211768:	cmp	x20, x19
  21176c:	b.ne	211750 <__libc_csu_init+0x48>  // b.any
  211770:	ldp	x19, x20, [sp, #16]
  211774:	ldp	x21, x22, [sp, #32]
  211778:	ldp	x23, x24, [sp, #48]
  21177c:	ldp	x29, x30, [sp], #64
  211780:	ret
  211784:	nop

0000000000211788 <__libc_csu_fini>:
  211788:	ret

Disassembly of section .init:

000000000021178c <_init>:
  21178c:	stp	x29, x30, [sp, #-16]!
  211790:	mov	x29, sp
  211794:	bl	211018 <call_weak_fn>
  211798:	ldp	x29, x30, [sp], #16
  21179c:	ret

Disassembly of section .fini:

00000000002117a0 <_fini>:
  2117a0:	stp	x29, x30, [sp, #-16]!
  2117a4:	mov	x29, sp
  2117a8:	ldp	x29, x30, [sp], #16
  2117ac:	ret

Disassembly of section .plt:

00000000002117b0 <__libc_start_main@plt-0x20>:
  2117b0:	stp	x16, x30, [sp, #-16]!
  2117b4:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2117b8:	ldr	x17, [x16, #2920]
  2117bc:	add	x16, x16, #0xb68
  2117c0:	br	x17
  2117c4:	nop
  2117c8:	nop
  2117cc:	nop

00000000002117d0 <__libc_start_main@plt>:
  2117d0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2117d4:	ldr	x17, [x16, #2928]
  2117d8:	add	x16, x16, #0xb70
  2117dc:	br	x17

00000000002117e0 <abort@plt>:
  2117e0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2117e4:	ldr	x17, [x16, #2936]
  2117e8:	add	x16, x16, #0xb78
  2117ec:	br	x17

00000000002117f0 <__gmon_start__@plt>:
  2117f0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2117f4:	ldr	x17, [x16, #2944]
  2117f8:	add	x16, x16, #0xb80
  2117fc:	br	x17

0000000000211800 <ask_password_agent_close@plt>:
  211800:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211804:	ldr	x17, [x16, #2952]
  211808:	add	x16, x16, #0xb88
  21180c:	br	x17

0000000000211810 <polkit_agent_close@plt>:
  211810:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211814:	ldr	x17, [x16, #2960]
  211818:	add	x16, x16, #0xb90
  21181c:	br	x17

0000000000211820 <pager_close@plt>:
  211820:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211824:	ldr	x17, [x16, #2968]
  211828:	add	x16, x16, #0xb98
  21182c:	br	x17

0000000000211830 <mac_selinux_finish@plt>:
  211830:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211834:	ldr	x17, [x16, #2976]
  211838:	add	x16, x16, #0xba0
  21183c:	br	x17

0000000000211840 <log_setup_service@plt>:
  211840:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211844:	ldr	x17, [x16, #2984]
  211848:	add	x16, x16, #0xba8
  21184c:	br	x17

0000000000211850 <strcmp@plt>:
  211850:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211854:	ldr	x17, [x16, #2992]
  211858:	add	x16, x16, #0xbb0
  21185c:	br	x17

0000000000211860 <log_get_max_level_realm@plt>:
  211860:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211864:	ldr	x17, [x16, #3000]
  211868:	add	x16, x16, #0xbb8
  21186c:	br	x17

0000000000211870 <log_internal_realm@plt>:
  211870:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211874:	ldr	x17, [x16, #3008]
  211878:	add	x16, x16, #0xbc0
  21187c:	br	x17

0000000000211880 <strjoin_real@plt>:
  211880:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211884:	ldr	x17, [x16, #3016]
  211888:	add	x16, x16, #0xbc8
  21188c:	br	x17

0000000000211890 <strlen@plt>:
  211890:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211894:	ldr	x17, [x16, #3024]
  211898:	add	x16, x16, #0xbd0
  21189c:	br	x17

00000000002118a0 <strdup@plt>:
  2118a0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118a4:	ldr	x17, [x16, #3032]
  2118a8:	add	x16, x16, #0xbd8
  2118ac:	br	x17

00000000002118b0 <log_oom_internal@plt>:
  2118b0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118b4:	ldr	x17, [x16, #3040]
  2118b8:	add	x16, x16, #0xbe0
  2118bc:	br	x17

00000000002118c0 <socket@plt>:
  2118c0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118c4:	ldr	x17, [x16, #3048]
  2118c8:	add	x16, x16, #0xbe8
  2118cc:	br	x17

00000000002118d0 <__errno_location@plt>:
  2118d0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118d4:	ldr	x17, [x16, #3056]
  2118d8:	add	x16, x16, #0xbf0
  2118dc:	br	x17

00000000002118e0 <malloc_usable_size@plt>:
  2118e0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118e4:	ldr	x17, [x16, #3064]
  2118e8:	add	x16, x16, #0xbf8
  2118ec:	br	x17

00000000002118f0 <free@plt>:
  2118f0:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  2118f4:	ldr	x17, [x16, #3072]
  2118f8:	add	x16, x16, #0xc00
  2118fc:	br	x17

0000000000211900 <safe_close@plt>:
  211900:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211904:	ldr	x17, [x16, #3080]
  211908:	add	x16, x16, #0xc08
  21190c:	br	x17

0000000000211910 <read_line_full@plt>:
  211910:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211914:	ldr	x17, [x16, #3088]
  211918:	add	x16, x16, #0xc10
  21191c:	br	x17

0000000000211920 <sockaddr_un_set_path@plt>:
  211920:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211924:	ldr	x17, [x16, #3096]
  211928:	add	x16, x16, #0xc18
  21192c:	br	x17

0000000000211930 <sendto@plt>:
  211930:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211934:	ldr	x17, [x16, #3104]
  211938:	add	x16, x16, #0xc20
  21193c:	br	x17

0000000000211940 <log_assert_failed_realm@plt>:
  211940:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211944:	ldr	x17, [x16, #3112]
  211948:	add	x16, x16, #0xc28
  21194c:	br	x17

0000000000211950 <explicit_bzero@plt>:
  211950:	adrp	x16, 221000 <explicit_bzero@plt+0xf6b0>
  211954:	ldr	x17, [x16, #3120]
  211958:	add	x16, x16, #0xc30
  21195c:	br	x17
