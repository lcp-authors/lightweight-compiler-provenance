
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//time.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006d0 <.init>:
 6d0:	stp	x29, x30, [sp, #-16]!
 6d4:	mov	x29, sp
 6d8:	bl	7a0 <fprintf@plt+0x10>
 6dc:	ldp	x29, x30, [sp], #16
 6e0:	ret

Disassembly of section .plt:

00000000000006f0 <exit@plt-0x20>:
 6f0:	stp	x16, x30, [sp, #-16]!
 6f4:	adrp	x16, 10000 <dl_load@@Base+0xf78c>
 6f8:	ldr	x17, [x16, #4088]
 6fc:	add	x16, x16, #0xff8
 700:	br	x17
 704:	nop
 708:	nop
 70c:	nop

0000000000000710 <exit@plt>:
 710:	adrp	x16, 11000 <exit@GLIBC_2.17>
 714:	ldr	x17, [x16]
 718:	add	x16, x16, #0x0
 71c:	br	x17

0000000000000720 <__cxa_finalize@plt>:
 720:	adrp	x16, 11000 <exit@GLIBC_2.17>
 724:	ldr	x17, [x16, #8]
 728:	add	x16, x16, #0x8
 72c:	br	x17

0000000000000730 <gettimeofday@plt>:
 730:	adrp	x16, 11000 <exit@GLIBC_2.17>
 734:	ldr	x17, [x16, #16]
 738:	add	x16, x16, #0x10
 73c:	br	x17

0000000000000740 <__gmon_start__@plt>:
 740:	adrp	x16, 11000 <exit@GLIBC_2.17>
 744:	ldr	x17, [x16, #24]
 748:	add	x16, x16, #0x18
 74c:	br	x17

0000000000000750 <nanosleep@plt>:
 750:	adrp	x16, 11000 <exit@GLIBC_2.17>
 754:	ldr	x17, [x16, #32]
 758:	add	x16, x16, #0x20
 75c:	br	x17

0000000000000760 <fwrite@plt>:
 760:	adrp	x16, 11000 <exit@GLIBC_2.17>
 764:	ldr	x17, [x16, #40]
 768:	add	x16, x16, #0x28
 76c:	br	x17

0000000000000770 <dcgettext@plt>:
 770:	adrp	x16, 11000 <exit@GLIBC_2.17>
 774:	ldr	x17, [x16, #48]
 778:	add	x16, x16, #0x30
 77c:	br	x17

0000000000000780 <__errno_location@plt>:
 780:	adrp	x16, 11000 <exit@GLIBC_2.17>
 784:	ldr	x17, [x16, #56]
 788:	add	x16, x16, #0x38
 78c:	br	x17

0000000000000790 <fprintf@plt>:
 790:	adrp	x16, 11000 <exit@GLIBC_2.17>
 794:	ldr	x17, [x16, #64]
 798:	add	x16, x16, #0x40
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <dl_load@@Base-0xd4>:
 7a0:	adrp	x0, 10000 <dl_load@@Base+0xf78c>
 7a4:	ldr	x0, [x0, #4056]
 7a8:	cbz	x0, 7b0 <fprintf@plt+0x20>
 7ac:	b	740 <__gmon_start__@plt>
 7b0:	ret
 7b4:	nop
 7b8:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 7bc:	add	x0, x0, #0xb0
 7c0:	adrp	x1, 11000 <dl_load@@Base+0x1078c>
 7c4:	add	x1, x1, #0xb0
 7c8:	cmp	x1, x0
 7cc:	b.eq	7e4 <fprintf@plt+0x54>  // b.none
 7d0:	adrp	x1, 10000 <dl_load@@Base+0xf78c>
 7d4:	ldr	x1, [x1, #4032]
 7d8:	cbz	x1, 7e4 <fprintf@plt+0x54>
 7dc:	mov	x16, x1
 7e0:	br	x16
 7e4:	ret
 7e8:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 7ec:	add	x0, x0, #0xb0
 7f0:	adrp	x1, 11000 <dl_load@@Base+0x1078c>
 7f4:	add	x1, x1, #0xb0
 7f8:	sub	x1, x1, x0
 7fc:	lsr	x2, x1, #63
 800:	add	x1, x2, x1, asr #3
 804:	cmp	xzr, x1, asr #1
 808:	asr	x1, x1, #1
 80c:	b.eq	824 <fprintf@plt+0x94>  // b.none
 810:	adrp	x2, 10000 <dl_load@@Base+0xf78c>
 814:	ldr	x2, [x2, #4064]
 818:	cbz	x2, 824 <fprintf@plt+0x94>
 81c:	mov	x16, x2
 820:	br	x16
 824:	ret
 828:	stp	x29, x30, [sp, #-32]!
 82c:	mov	x29, sp
 830:	str	x19, [sp, #16]
 834:	adrp	x19, 11000 <dl_load@@Base+0x1078c>
 838:	ldrb	w0, [x19, #176]
 83c:	cbnz	w0, 864 <fprintf@plt+0xd4>
 840:	adrp	x0, 10000 <dl_load@@Base+0xf78c>
 844:	ldr	x0, [x0, #4040]
 848:	cbz	x0, 858 <fprintf@plt+0xc8>
 84c:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 850:	ldr	x0, [x0, #72]
 854:	bl	720 <__cxa_finalize@plt>
 858:	bl	7b8 <fprintf@plt+0x28>
 85c:	mov	w0, #0x1                   	// #1
 860:	strb	w0, [x19, #176]
 864:	ldr	x19, [sp, #16]
 868:	ldp	x29, x30, [sp], #32
 86c:	ret
 870:	b	7e8 <fprintf@plt+0x58>

0000000000000874 <dl_load@@Base>:
 874:	stp	x29, x30, [sp, #-48]!
 878:	stp	x20, x19, [sp, #32]
 87c:	adrp	x19, 11000 <dl_load@@Base+0x1078c>
 880:	adrp	x20, 11000 <dl_load@@Base+0x1078c>
 884:	stp	x22, x21, [sp, #16]
 888:	str	x0, [x19, #184]
 88c:	str	x1, [x20, #192]
 890:	ldr	w8, [x0]
 894:	mov	x29, sp
 898:	cmp	w8, #0x2
 89c:	b.ne	988 <dl_load@@Base+0x114>  // b.any
 8a0:	ldr	w8, [x0, #4]
 8a4:	tbnz	w8, #31, 988 <dl_load@@Base+0x114>
 8a8:	adrp	x21, 11000 <dl_load@@Base+0x1078c>
 8ac:	ldr	x8, [x21, #80]
 8b0:	cbz	x8, 8e0 <dl_load@@Base+0x6c>
 8b4:	ldr	x9, [x0, #48]
 8b8:	adrp	x8, 0 <exit@plt-0x710>
 8bc:	add	x8, x8, #0xb7a
 8c0:	adrp	x2, 11000 <dl_load@@Base+0x1078c>
 8c4:	add	x2, x2, #0x50
 8c8:	mov	x0, x1
 8cc:	mov	x1, x8
 8d0:	blr	x9
 8d4:	cbz	w0, 8e8 <dl_load@@Base+0x74>
 8d8:	mov	w21, wzr
 8dc:	b	908 <dl_load@@Base+0x94>
 8e0:	mov	w21, wzr
 8e4:	b	958 <dl_load@@Base+0xe4>
 8e8:	ldr	x8, [x19, #184]
 8ec:	ldr	x0, [x20, #192]
 8f0:	ldr	x2, [x21, #80]
 8f4:	adrp	x1, 0 <exit@plt-0x710>
 8f8:	ldr	x8, [x8, #104]
 8fc:	add	x1, x1, #0xbae
 900:	blr	x8
 904:	mov	w21, #0x1                   	// #1
 908:	adrp	x22, 11000 <dl_load@@Base+0x1078c>
 90c:	ldr	x8, [x22, #128]
 910:	cbz	x8, 958 <dl_load@@Base+0xe4>
 914:	ldr	x8, [x19, #184]
 918:	ldr	x0, [x20, #192]
 91c:	adrp	x1, 0 <exit@plt-0x710>
 920:	adrp	x2, 11000 <dl_load@@Base+0x1078c>
 924:	ldr	x8, [x8, #48]
 928:	add	x1, x1, #0xb7a
 92c:	add	x2, x2, #0x80
 930:	blr	x8
 934:	cbnz	w0, 958 <dl_load@@Base+0xe4>
 938:	ldr	x8, [x19, #184]
 93c:	ldr	x0, [x20, #192]
 940:	ldr	x2, [x22, #128]
 944:	adrp	x1, 0 <exit@plt-0x710>
 948:	ldr	x8, [x8, #104]
 94c:	add	x1, x1, #0xbae
 950:	blr	x8
 954:	mov	w21, #0x1                   	// #1
 958:	ldr	x8, [x19, #184]
 95c:	ldr	x0, [x20, #192]
 960:	adrp	x1, 0 <exit@plt-0x710>
 964:	add	x1, x1, #0xc1d
 968:	ldr	x8, [x8, #88]
 96c:	blr	x8
 970:	cmp	w21, #0x0
 974:	ldp	x20, x19, [sp, #32]
 978:	ldp	x22, x21, [sp, #16]
 97c:	cset	w0, eq  // eq = none
 980:	ldp	x29, x30, [sp], #48
 984:	ret
 988:	adrp	x20, 10000 <dl_load@@Base+0xf78c>
 98c:	ldr	x20, [x20, #4048]
 990:	adrp	x0, 0 <exit@plt-0x710>
 994:	add	x0, x0, #0xb58
 998:	mov	w1, #0x22                  	// #34
 99c:	ldr	x3, [x20]
 9a0:	mov	w2, #0x1                   	// #1
 9a4:	bl	760 <fwrite@plt>
 9a8:	ldr	x8, [x19, #184]
 9ac:	ldr	x0, [x20]
 9b0:	adrp	x1, 0 <exit@plt-0x710>
 9b4:	add	x1, x1, #0xb7b
 9b8:	ldp	w4, w5, [x8]
 9bc:	mov	w2, #0x2                   	// #2
 9c0:	mov	w3, wzr
 9c4:	bl	790 <fprintf@plt>
 9c8:	mov	w0, #0x1                   	// #1
 9cc:	bl	710 <exit@plt>
 9d0:	sub	sp, sp, #0x30
 9d4:	str	x19, [sp, #32]
 9d8:	mov	x19, x1
 9dc:	mov	x0, sp
 9e0:	mov	x1, xzr
 9e4:	stp	x29, x30, [sp, #16]
 9e8:	add	x29, sp, #0x10
 9ec:	bl	730 <gettimeofday@plt>
 9f0:	ldp	d0, d1, [sp]
 9f4:	mov	x8, #0x848000000000        	// #145685290680320
 9f8:	movk	x8, #0x412e, lsl #48
 9fc:	fmov	d2, x8
 a00:	scvtf	d1, d1
 a04:	scvtf	d0, d0
 a08:	fdiv	d1, d1, d2
 a0c:	mov	w9, #0x1                   	// #1
 a10:	fadd	d0, d1, d0
 a14:	str	w9, [x19]
 a18:	str	d0, [x19, #8]
 a1c:	str	wzr, [x19, #16]
 a20:	mov	x0, x19
 a24:	ldr	x19, [sp, #32]
 a28:	ldp	x29, x30, [sp, #16]
 a2c:	add	sp, sp, #0x30
 a30:	ret
 a34:	sub	sp, sp, #0x60
 a38:	stp	x22, x21, [sp, #64]
 a3c:	adrp	x22, 11000 <dl_load@@Base+0x1078c>
 a40:	ldr	x8, [x22, #184]
 a44:	stp	x29, x30, [sp, #48]
 a48:	stp	x20, x19, [sp, #80]
 a4c:	adrp	x21, 11000 <dl_load@@Base+0x1078c>
 a50:	ldr	x8, [x8, #152]
 a54:	ldr	x0, [x21, #192]
 a58:	mov	x19, x1
 a5c:	add	x3, sp, #0x10
 a60:	mov	w2, #0x1                   	// #1
 a64:	mov	x1, xzr
 a68:	add	x29, sp, #0x30
 a6c:	blr	x8
 a70:	cbz	w0, a94 <dl_load@@Base+0x220>
 a74:	ldr	d0, [sp, #24]
 a78:	fcmp	d0, #0.0
 a7c:	b.pl	ac8 <dl_load@@Base+0x254>  // b.nfrst
 a80:	ldr	x8, [x22, #184]
 a84:	ldr	x20, [x21, #192]
 a88:	adrp	x1, 0 <exit@plt-0x710>
 a8c:	add	x1, x1, #0xc01
 a90:	b	aa4 <dl_load@@Base+0x230>
 a94:	ldr	x8, [x22, #184]
 a98:	ldr	x20, [x21, #192]
 a9c:	adrp	x1, 0 <exit@plt-0x710>
 aa0:	add	x1, x1, #0xbd8
 aa4:	ldr	x22, [x8, #136]
 aa8:	mov	w2, #0x5                   	// #5
 aac:	mov	x0, xzr
 ab0:	bl	770 <dcgettext@plt>
 ab4:	mov	x1, x0
 ab8:	mov	x0, x20
 abc:	blr	x22
 ac0:	fmov	d0, #-1.000000000000000000e+00
 ac4:	b	b20 <dl_load@@Base+0x2ac>
 ac8:	fcvtzs	x8, d0
 acc:	mov	x9, #0xcd6500000000        	// #225833675390976
 ad0:	movk	x9, #0x41cd, lsl #48
 ad4:	scvtf	d1, x8
 ad8:	fmov	d2, x9
 adc:	fsub	d0, d0, d1
 ae0:	fmul	d0, d0, d2
 ae4:	fcvtzs	x9, d0
 ae8:	mov	x0, sp
 aec:	mov	x1, xzr
 af0:	stp	x8, x9, [sp]
 af4:	bl	750 <nanosleep@plt>
 af8:	mov	w20, w0
 afc:	tbz	w0, #31, b1c <dl_load@@Base+0x2a8>
 b00:	ldr	x8, [x22, #184]
 b04:	ldr	x21, [x21, #192]
 b08:	ldr	x22, [x8, #128]
 b0c:	bl	780 <__errno_location@plt>
 b10:	ldr	w1, [x0]
 b14:	mov	x0, x21
 b18:	blr	x22
 b1c:	scvtf	d0, w20
 b20:	mov	w8, #0x1                   	// #1
 b24:	str	d0, [x19, #8]
 b28:	str	w8, [x19]
 b2c:	str	wzr, [x19, #16]
 b30:	mov	x0, x19
 b34:	ldp	x20, x19, [sp, #80]
 b38:	ldp	x22, x21, [sp, #64]
 b3c:	ldp	x29, x30, [sp, #48]
 b40:	add	sp, sp, #0x60
 b44:	ret

Disassembly of section .fini:

0000000000000b48 <.fini>:
 b48:	stp	x29, x30, [sp, #-16]!
 b4c:	mov	x29, sp
 b50:	ldp	x29, x30, [sp], #16
 b54:	ret
