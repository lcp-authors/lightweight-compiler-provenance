In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_gcc_-O2:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	stp	x29, x30, [sp, #-304]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #368]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	cmp	x0, w1, uxtw
  20:	stp	x25, x26, [sp, #64]
  24:	b.ls	17c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x17c>  // b.plast
  28:	mov	w24, w1
  2c:	ldr	x23, [x19, #360]
  30:	lsl	x21, x24, #3
  34:	add	x26, x23, x21
  38:	ldr	w0, [x26, #4]
  3c:	cbnz	w0, 14c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x14c>
  40:	add	x25, sp, #0x50
  44:	mov	x2, #0x200000000           	// #8589934592
  48:	ldr	x0, [x19, #352]
  4c:	add	x3, x25, #0x10
  50:	stp	x3, x2, [sp, #80]
  54:	cmp	x24, x0
  58:	ldr	x0, [x19, #344]
  5c:	b.cs	19c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x19c>  // b.hs, b.nlast
  60:	mov	w2, #0xa0                  	// #160
  64:	mov	x4, #0x800000000           	// #34359738368
  68:	add	x20, sp, #0x90
  6c:	umull	x1, w1, w2
  70:	add	x2, x20, #0x20
  74:	add	x22, x0, x1
  78:	ldr	w0, [x0, x1]
  7c:	ldr	w3, [x22, #4]
  80:	ldr	x1, [x22, #8]
  84:	str	x4, [sp, #168]
  88:	stp	w0, w3, [sp, #144]
  8c:	ldr	w0, [x22, #24]
  90:	stp	x1, x2, [sp, #152]
  94:	cbnz	w0, 16c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x16c>
  98:	ldp	x2, x0, [x19]
  9c:	mov	x1, x22
  a0:	ldr	x3, [x0]
  a4:	ldr	x3, [x3, #128]
  a8:	blr	x3
  ac:	tst	w0, #0xff
  b0:	b.eq	cc <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xcc>  // b.none
  b4:	ldp	x2, x0, [x19]
  b8:	mov	x1, x22
  bc:	mov	x3, x20
  c0:	ldr	x4, [x0]
  c4:	ldr	x4, [x4, #152]
  c8:	blr	x4
  cc:	ldr	x0, [x19, #16]
  d0:	add	x2, x19, #0x128
  d4:	ldr	w6, [x19, #32]
  d8:	mov	x1, x20
  dc:	ldr	x4, [x19]
  e0:	mov	x3, x25
  e4:	ldr	x5, [x0]
  e8:	str	w6, [x23, x21]
  ec:	add	x20, x20, #0x20
  f0:	ldr	x5, [x5, #32]
  f4:	blr	x5
  f8:	ldr	w1, [x19, #32]
  fc:	ldr	w2, [x23, x21]
 100:	ldr	x0, [sp, #160]
 104:	sub	w1, w1, w2
 108:	str	w1, [x26, #4]
 10c:	cmp	x0, x20
 110:	ldr	x19, [x23, x24, lsl #3]
 114:	b.eq	11c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [sp, #80]
 120:	add	x3, x25, #0x10
 124:	cmp	x0, x3
 128:	b.eq	130 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x130>  // b.none
 12c:	bl	0 <free>
 130:	mov	x0, x19
 134:	ldp	x19, x20, [sp, #16]
 138:	ldp	x21, x22, [sp, #32]
 13c:	ldp	x23, x24, [sp, #48]
 140:	ldp	x25, x26, [sp, #64]
 144:	ldp	x29, x30, [sp], #304
 148:	ret
 14c:	ldr	x19, [x23, x24, lsl #3]
 150:	ldp	x21, x22, [sp, #32]
 154:	mov	x0, x19
 158:	ldp	x19, x20, [sp, #16]
 15c:	ldp	x23, x24, [sp, #48]
 160:	ldp	x25, x26, [sp, #64]
 164:	ldp	x29, x30, [sp], #304
 168:	ret
 16c:	add	x1, x22, #0x10
 170:	add	x0, x20, #0x10
 174:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 178:	b	98 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x98>
 17c:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 180:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 184:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 188:	add	x3, x3, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x0, x0, #0x0
 194:	mov	w2, #0x95                  	// #149
 198:	bl	0 <__assert_fail>
 19c:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1a0:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1a4:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1a8:	add	x3, x3, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x0, x0, #0x0
 1b4:	mov	w2, #0xfa                  	// #250
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #4
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #4
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #4
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #4
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	mov	x2, x22
 10c:	mov	x3, #0x10                  	// #16
 110:	add	x1, x0, x3
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x1
  10:	mov	x22, x8
  14:	ldr	x1, [x0, #56]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x2
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x26, x0
  28:	mov	x0, #0x38                  	// #56
  2c:	ldr	x20, [x1, #152]
  30:	stp	x23, x24, [sp, #48]
  34:	add	x23, sp, #0x88
  38:	stp	x27, x28, [sp, #80]
  3c:	bl	0 <_Znwm>
  40:	mov	x1, x20
  44:	mov	x27, x0
  48:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  4c:	ldr	x24, [x26, #48]
  50:	mov	x0, #0x98                  	// #152
  54:	ldr	w25, [x21, #12]
  58:	bl	0 <_Znwm>
  5c:	mov	x2, x24
  60:	mov	x1, x20
  64:	mov	w3, w25
  68:	str	x0, [sp, #104]
  6c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  70:	ldrb	w28, [x21, #24]
  74:	ldp	w24, w25, [x21, #16]
  78:	mov	x0, #0x50                  	// #80
  7c:	bl	0 <_Znwm>
  80:	mov	w4, w28
  84:	mov	w3, w25
  88:	mov	x1, x20
  8c:	mov	x25, x0
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  98:	adrp	x2, 0 <_ZTVN4llvm3mca6LSUnitE>
  9c:	mov	x0, #0x90                  	// #144
  a0:	str	wzr, [x25, #68]
  a4:	ldr	x2, [x2]
  a8:	str	xzr, [x25, #72]
  ac:	add	x2, x2, #0x10
  b0:	str	x2, [x25]
  b4:	bl	0 <_Znwm>
  b8:	mov	x28, x0
  bc:	mov	x0, #0x168                 	// #360
  c0:	bl	0 <_Znwm>
  c4:	mov	x1, x20
  c8:	mov	x20, x0
  cc:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  d0:	stp	xzr, x20, [x28, #16]
  d4:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  d8:	stp	xzr, xzr, [x28, #32]
  dc:	mov	x0, x28
  e0:	ldr	x1, [x1]
  e4:	stp	xzr, xzr, [x28, #48]
  e8:	add	x1, x1, #0x10
  ec:	stp	x1, x25, [x28]
  f0:	mov	x1, x23
  f4:	stp	xzr, xzr, [x28, #64]
  f8:	stp	xzr, xzr, [x28, #80]
  fc:	stp	xzr, xzr, [x28, #96]
 100:	stp	xzr, xzr, [x28, #112]
 104:	str	xzr, [x28, #128]
 108:	str	wzr, [x28, #136]
 10c:	strb	wzr, [x28, #140]
 110:	str	xzr, [sp, #136]
 114:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 118:	ldr	x0, [sp, #136]
 11c:	cbz	x0, 12c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x12c>
 120:	ldr	x1, [x0]
 124:	ldr	x1, [x1, #8]
 128:	blr	x1
 12c:	mov	x0, #0xf0                  	// #240
 130:	bl	0 <_Znwm>
 134:	adrp	x4, 0 <_ZTVN4llvm3mca10EntryStageE>
 138:	mov	x24, x0
 13c:	add	x0, x0, #0x18
 140:	ldr	w3, [x21, #8]
 144:	ldr	x4, [x4]
 148:	str	xzr, [x24, #8]
 14c:	ldp	x5, x20, [x26, #48]
 150:	str	wzr, [x24, #24]
 154:	str	xzr, [x24, #32]
 158:	add	x2, x24, #0x60
 15c:	add	x4, x4, #0x10
 160:	stp	x0, x0, [x0, #16]
 164:	mov	x1, #0x1000000000          	// #68719476736
 168:	str	xzr, [x0, #32]
 16c:	mov	x0, #0x78                  	// #120
 170:	str	x4, [x24]
 174:	str	wzr, [x24, #64]
 178:	stp	xzr, x2, [x24, #72]
 17c:	str	x1, [x24, #88]
 180:	str	x19, [x24, #224]
 184:	str	wzr, [x24, #232]
 188:	str	x5, [sp, #112]
 18c:	str	w3, [sp, #124]
 190:	bl	0 <_Znwm>
 194:	ldr	x5, [sp, #112]
 198:	mov	x1, x20
 19c:	ldr	w3, [sp, #124]
 1a0:	mov	x4, x27
 1a4:	mov	x2, x5
 1a8:	str	x0, [sp, #112]
 1ac:	ldr	x5, [sp, #104]
 1b0:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1b4:	ldrb	w19, [x21, #25]
 1b8:	mov	x0, #0x58                  	// #88
 1bc:	bl	0 <_Znwm>
 1c0:	adrp	x2, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 1c4:	mov	x20, x0
 1c8:	add	x1, x0, #0x18
 1cc:	mov	x0, #0x58                  	// #88
 1d0:	ldr	x2, [x2]
 1d4:	str	xzr, [x20, #8]
 1d8:	str	wzr, [x20, #24]
 1dc:	str	xzr, [x20, #32]
 1e0:	add	x2, x2, #0x10
 1e4:	stp	x1, x1, [x1, #16]
 1e8:	str	xzr, [x1, #32]
 1ec:	str	x2, [x20]
 1f0:	stp	x28, xzr, [x20, #64]
 1f4:	strb	w19, [x20, #80]
 1f8:	bl	0 <_Znwm>
 1fc:	mov	x19, x0
 200:	adrp	x3, 0 <_ZTVN4llvm3mca11RetireStageE>
 204:	add	x1, x0, #0x18
 208:	ldp	w2, w0, [x26, #8]
 20c:	str	xzr, [x19, #8]
 210:	ldr	x3, [x3]
 214:	str	wzr, [x19, #24]
 218:	str	xzr, [x19, #32]
 21c:	cmp	w2, w0
 220:	stp	x1, x1, [x1, #16]
 224:	add	x3, x3, #0x10
 228:	str	xzr, [x1, #32]
 22c:	ldr	x1, [sp, #104]
 230:	str	x3, [x19]
 234:	stp	x27, x1, [x19, #64]
 238:	str	x25, [x19, #80]
 23c:	b.cs	418 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x418>  // b.hs, b.nlast
 240:	ldr	x4, [x26]
 244:	mov	w3, w2
 248:	add	x5, x3, #0x1
 24c:	mov	w1, w0
 250:	cmp	x5, w0, uxtw
 254:	str	x27, [x4, x3, lsl #3]
 258:	b.hi	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.pmore
 25c:	add	w2, w2, #0x1
 260:	str	w2, [x26, #8]
 264:	cmp	w0, w2
 268:	b.ls	42c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x42c>  // b.plast
 26c:	ldr	x4, [x26]
 270:	mov	w3, w2
 274:	add	x5, x3, #0x1
 278:	cmp	x1, x5
 27c:	ldr	x5, [sp, #104]
 280:	str	x5, [x4, x3, lsl #3]
 284:	b.cc	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.lo, b.ul, b.last
 288:	add	w2, w2, #0x1
 28c:	str	w2, [x26, #8]
 290:	cmp	w0, w2
 294:	b.ls	444 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x444>  // b.plast
 298:	ldr	x4, [x26]
 29c:	mov	w3, w2
 2a0:	add	x5, x3, #0x1
 2a4:	cmp	x5, x1
 2a8:	str	x25, [x4, x3, lsl #3]
 2ac:	b.hi	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.pmore
 2b0:	add	w2, w2, #0x1
 2b4:	str	w2, [x26, #8]
 2b8:	cmp	w2, w0
 2bc:	b.cs	45c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x45c>  // b.hs, b.nlast
 2c0:	ldr	x3, [x26]
 2c4:	mov	w0, w2
 2c8:	add	x4, x0, #0x1
 2cc:	cmp	x1, x4
 2d0:	str	x28, [x3, x0, lsl #3]
 2d4:	b.cc	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.lo, b.ul, b.last
 2d8:	add	w2, w2, #0x1
 2dc:	str	w2, [x26, #8]
 2e0:	mov	x0, #0x88                  	// #136
 2e4:	bl	0 <_Znwm>
 2e8:	add	x3, x0, #0x58
 2ec:	add	x5, x0, #0x10
 2f0:	mov	x4, #0x800000000           	// #34359738368
 2f4:	stp	x5, x4, [x0]
 2f8:	mov	x1, x23
 2fc:	str	wzr, [x0, #88]
 300:	str	xzr, [x0, #96]
 304:	stp	x3, x3, [x3, #16]
 308:	str	xzr, [x3, #32]
 30c:	str	x0, [x22]
 310:	str	wzr, [x0, #128]
 314:	str	x24, [sp, #136]
 318:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 31c:	ldr	x0, [sp, #136]
 320:	cbz	x0, 330 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x330>
 324:	ldr	x1, [x0]
 328:	ldr	x1, [x1, #8]
 32c:	blr	x1
 330:	ldr	w26, [x21]
 334:	ldr	x25, [x22]
 338:	cbnz	w26, 3cc <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3cc>
 33c:	ldr	x2, [sp, #112]
 340:	mov	x0, x25
 344:	mov	x1, x23
 348:	str	x2, [sp, #136]
 34c:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 350:	ldr	x0, [sp, #136]
 354:	cbz	x0, 364 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x364>
 358:	ldr	x1, [x0]
 35c:	ldr	x1, [x1, #8]
 360:	blr	x1
 364:	ldr	x0, [x22]
 368:	mov	x1, x23
 36c:	str	x20, [sp, #136]
 370:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 374:	ldr	x0, [sp, #136]
 378:	cbz	x0, 388 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x388>
 37c:	ldr	x1, [x0]
 380:	ldr	x1, [x1, #8]
 384:	blr	x1
 388:	ldr	x0, [x22]
 38c:	mov	x1, x23
 390:	str	x19, [sp, #136]
 394:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 398:	ldr	x0, [sp, #136]
 39c:	cbz	x0, 3ac <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3ac>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	mov	x0, x22
 3b0:	ldp	x19, x20, [sp, #16]
 3b4:	ldp	x21, x22, [sp, #32]
 3b8:	ldp	x23, x24, [sp, #48]
 3bc:	ldp	x25, x26, [sp, #64]
 3c0:	ldp	x27, x28, [sp, #80]
 3c4:	ldp	x29, x30, [sp], #144
 3c8:	ret
 3cc:	ldr	w21, [x21, #4]
 3d0:	mov	x0, #0xe8                  	// #232
 3d4:	bl	0 <_Znwm>
 3d8:	mov	w2, w21
 3dc:	mov	w3, #0x1                   	// #1
 3e0:	mov	x21, x0
 3e4:	mov	w1, w26
 3e8:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 3ec:	str	x21, [sp, #136]
 3f0:	mov	x0, x25
 3f4:	mov	x1, x23
 3f8:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 3fc:	ldr	x0, [sp, #136]
 400:	cbz	x0, 410 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x410>
 404:	ldr	x1, [x0]
 408:	ldr	x1, [x1, #8]
 40c:	blr	x1
 410:	ldr	x25, [x22]
 414:	b	33c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x33c>
 418:	mov	x0, x26
 41c:	mov	x1, #0x0                   	// #0
 420:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 424:	ldp	w2, w0, [x26, #8]
 428:	b	240 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x240>
 42c:	mov	x0, x26
 430:	mov	x1, #0x0                   	// #0
 434:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 438:	ldp	w2, w0, [x26, #8]
 43c:	mov	w1, w0
 440:	b	26c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x26c>
 444:	mov	x0, x26
 448:	mov	x1, #0x0                   	// #0
 44c:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 450:	ldp	w2, w0, [x26, #8]
 454:	mov	w1, w0
 458:	b	298 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x298>
 45c:	mov	x1, #0x0                   	// #0
 460:	mov	x0, x26
 464:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 468:	ldp	w2, w1, [x26, #8]
 46c:	b	2c0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2c0>
 470:	adrp	x3, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 474:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 478:	adrp	x0, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 47c:	add	x3, x3, #0x0
 480:	add	x1, x1, #0x0
 484:	add	x0, x0, #0x0
 488:	mov	w2, #0x43                  	// #67
 48c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	str	x21, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	str	x1, [x20], #208
  28:	ldrb	w0, [x20, #8]
  2c:	tbz	w0, #0, e8 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe8>
  30:	ldr	x0, [x19, #160]
  34:	add	x1, x19, #0xb0
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca15ResourceManagerD1Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19, #80]
  48:	add	x1, x19, #0x60
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca15ResourceManagerD1Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x0, [x19, #56]
  5c:	cbz	x0, 64 <_ZN4llvm3mca15ResourceManagerD1Ev+0x64>
  60:	bl	0 <_ZdlPv>
  64:	ldp	x20, x21, [x19, #32]
  68:	cmp	x20, x21
  6c:	b.eq	94 <_ZN4llvm3mca15ResourceManagerD1Ev+0x94>  // b.none
  70:	ldr	x0, [x20]
  74:	cbz	x0, 84 <_ZN4llvm3mca15ResourceManagerD1Ev+0x84>
  78:	ldr	x1, [x0]
  7c:	ldr	x1, [x1, #8]
  80:	blr	x1
  84:	add	x20, x20, #0x8
  88:	cmp	x21, x20
  8c:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD1Ev+0x70>  // b.any
  90:	ldr	x21, [x19, #32]
  94:	cbz	x21, a0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	ldp	x20, x21, [x19, #8]
  a4:	cmp	x20, x21
  a8:	b.eq	d0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xd0>  // b.none
  ac:	nop
  b0:	ldr	x0, [x20]
  b4:	cbz	x0, c0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xc0>
  b8:	mov	x1, #0x30                  	// #48
  bc:	bl	0 <_ZdlPvm>
  c0:	add	x20, x20, #0x8
  c4:	cmp	x21, x20
  c8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>  // b.any
  cc:	ldr	x21, [x19, #8]
  d0:	cbz	x21, 124 <_ZN4llvm3mca15ResourceManagerD1Ev+0x124>
  d4:	mov	x0, x21
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #48
  e4:	b	0 <_ZdlPv>
  e8:	ldr	w2, [x19, #232]
  ec:	mov	w1, #0x18                  	// #24
  f0:	ldr	x0, [x19, #224]
  f4:	umull	x1, w2, w1
  f8:	bl	0 <_ZdlPvm>
  fc:	ldrb	w0, [x20, #8]
 100:	tbz	w0, #0, 30 <_ZN4llvm3mca15ResourceManagerD1Ev+0x30>
 104:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 108:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 10c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 110:	add	x3, x3, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x0, x0, #0x0
 11c:	mov	w2, #0x45b                 	// #1115
 120:	bl	0 <__assert_fail>
 124:	ldp	x19, x20, [sp, #16]
 128:	ldr	x21, [sp, #32]
 12c:	ldp	x29, x30, [sp], #48
 130:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	str	x21, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	str	x1, [x20], #208
  28:	ldrb	w0, [x20, #8]
  2c:	tbz	w0, #0, f4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xf4>
  30:	ldr	x0, [x19, #160]
  34:	add	x1, x19, #0xb0
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca15ResourceManagerD0Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19, #80]
  48:	add	x1, x19, #0x60
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca15ResourceManagerD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x0, [x19, #56]
  5c:	cbz	x0, 64 <_ZN4llvm3mca15ResourceManagerD0Ev+0x64>
  60:	bl	0 <_ZdlPv>
  64:	ldp	x20, x21, [x19, #32]
  68:	cmp	x20, x21
  6c:	b.eq	94 <_ZN4llvm3mca15ResourceManagerD0Ev+0x94>  // b.none
  70:	ldr	x0, [x20]
  74:	cbz	x0, 84 <_ZN4llvm3mca15ResourceManagerD0Ev+0x84>
  78:	ldr	x1, [x0]
  7c:	ldr	x1, [x1, #8]
  80:	blr	x1
  84:	add	x20, x20, #0x8
  88:	cmp	x21, x20
  8c:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD0Ev+0x70>  // b.any
  90:	ldr	x21, [x19, #32]
  94:	cbz	x21, a0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	ldp	x20, x21, [x19, #8]
  a4:	cmp	x20, x21
  a8:	b.eq	d0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xd0>  // b.none
  ac:	nop
  b0:	ldr	x0, [x20]
  b4:	cbz	x0, c0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xc0>
  b8:	mov	x1, #0x30                  	// #48
  bc:	bl	0 <_ZdlPvm>
  c0:	add	x20, x20, #0x8
  c4:	cmp	x21, x20
  c8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>  // b.any
  cc:	ldr	x21, [x19, #8]
  d0:	cbz	x21, dc <_ZN4llvm3mca15ResourceManagerD0Ev+0xdc>
  d4:	mov	x0, x21
  d8:	bl	0 <_ZdlPv>
  dc:	mov	x0, x19
  e0:	mov	x1, #0x168                 	// #360
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldr	x21, [sp, #32]
  ec:	ldp	x29, x30, [sp], #48
  f0:	b	0 <_ZdlPvm>
  f4:	ldr	w2, [x19, #232]
  f8:	mov	w1, #0x18                  	// #24
  fc:	ldr	x0, [x19, #224]
 100:	umull	x1, w2, w1
 104:	bl	0 <_ZdlPvm>
 108:	ldrb	w0, [x20, #8]
 10c:	tbz	w0, #0, 30 <_ZN4llvm3mca15ResourceManagerD0Ev+0x30>
 110:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 114:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 118:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 11c:	add	x3, x3, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x0, x0, #0x0
 128:	mov	w2, #0x45b                 	// #1115
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #104]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD0Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x20, [x19, #24]
  54:	cbz	x20, 14c <_ZN4llvm3mca9SchedulerD0Ev+0x14c>
  58:	ldr	x1, [x20]
  5c:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  60:	add	x0, x0, #0x0
  64:	ldr	x1, [x1, #8]
  68:	cmp	x1, x0
  6c:	b.ne	1b8 <_ZN4llvm3mca9SchedulerD0Ev+0x1b8>  // b.any
  70:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  74:	stp	x21, x22, [sp, #32]
  78:	mov	x21, x20
  7c:	ldr	x0, [x0]
  80:	add	x0, x0, #0x10
  84:	str	x0, [x21], #208
  88:	ldrb	w0, [x21, #8]
  8c:	tbz	w0, #0, 17c <_ZN4llvm3mca9SchedulerD0Ev+0x17c>
  90:	ldr	x0, [x20, #160]
  94:	add	x1, x20, #0xb0
  98:	cmp	x0, x1
  9c:	b.eq	a4 <_ZN4llvm3mca9SchedulerD0Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x20, #80]
  a8:	add	x1, x20, #0x60
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm3mca9SchedulerD0Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x20, #56]
  bc:	cbz	x0, c4 <_ZN4llvm3mca9SchedulerD0Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldp	x21, x22, [x20, #32]
  c8:	cmp	x21, x22
  cc:	b.eq	f4 <_ZN4llvm3mca9SchedulerD0Ev+0xf4>  // b.none
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, e4 <_ZN4llvm3mca9SchedulerD0Ev+0xe4>
  d8:	ldr	x1, [x0]
  dc:	ldr	x1, [x1, #8]
  e0:	blr	x1
  e4:	add	x21, x21, #0x8
  e8:	cmp	x22, x21
  ec:	b.ne	d0 <_ZN4llvm3mca9SchedulerD0Ev+0xd0>  // b.any
  f0:	ldr	x22, [x20, #32]
  f4:	cbz	x22, 100 <_ZN4llvm3mca9SchedulerD0Ev+0x100>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x21, x22, [x20, #8]
 104:	cmp	x21, x22
 108:	b.eq	130 <_ZN4llvm3mca9SchedulerD0Ev+0x130>  // b.none
 10c:	nop
 110:	ldr	x0, [x21]
 114:	cbz	x0, 120 <_ZN4llvm3mca9SchedulerD0Ev+0x120>
 118:	mov	x1, #0x30                  	// #48
 11c:	bl	0 <_ZdlPvm>
 120:	add	x21, x21, #0x8
 124:	cmp	x22, x21
 128:	b.ne	110 <_ZN4llvm3mca9SchedulerD0Ev+0x110>  // b.any
 12c:	ldr	x22, [x20, #8]
 130:	cbz	x22, 13c <_ZN4llvm3mca9SchedulerD0Ev+0x13c>
 134:	mov	x0, x22
 138:	bl	0 <_ZdlPv>
 13c:	mov	x0, x20
 140:	mov	x1, #0x168                 	// #360
 144:	bl	0 <_ZdlPvm>
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x0, [x19, #16]
 150:	cbz	x0, 160 <_ZN4llvm3mca9SchedulerD0Ev+0x160>
 154:	ldr	x1, [x0]
 158:	ldr	x1, [x1, #8]
 15c:	blr	x1
 160:	mov	x0, x19
 164:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
 168:	mov	x0, x19
 16c:	mov	x1, #0x90                  	// #144
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x29, x30, [sp], #48
 178:	b	0 <_ZdlPvm>
 17c:	ldr	w2, [x20, #232]
 180:	mov	w1, #0x18                  	// #24
 184:	ldr	x0, [x20, #224]
 188:	umull	x1, w2, w1
 18c:	bl	0 <_ZdlPvm>
 190:	ldrb	w0, [x21, #8]
 194:	tbz	w0, #0, 90 <_ZN4llvm3mca9SchedulerD0Ev+0x90>
 198:	adrp	x3, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 19c:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 1a0:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 1a4:	add	x3, x3, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x0, x0, #0x0
 1b0:	mov	w2, #0x45b                 	// #1115
 1b4:	bl	0 <__assert_fail>
 1b8:	mov	x0, x20
 1bc:	blr	x1
 1c0:	b	14c <_ZN4llvm3mca9SchedulerD0Ev+0x14c>

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #104]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD1Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD1Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD1Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x20, [x19, #24]
  54:	cbz	x20, 14c <_ZN4llvm3mca9SchedulerD1Ev+0x14c>
  58:	ldr	x1, [x20]
  5c:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
  60:	add	x0, x0, #0x0
  64:	ldr	x1, [x1, #8]
  68:	cmp	x1, x0
  6c:	b.ne	1ac <_ZN4llvm3mca9SchedulerD1Ev+0x1ac>  // b.any
  70:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
  74:	stp	x21, x22, [sp, #32]
  78:	mov	x21, x20
  7c:	ldr	x0, [x0]
  80:	add	x0, x0, #0x10
  84:	str	x0, [x21], #208
  88:	ldrb	w0, [x21, #8]
  8c:	tbz	w0, #0, 170 <_ZN4llvm3mca9SchedulerD1Ev+0x170>
  90:	ldr	x0, [x20, #160]
  94:	add	x1, x20, #0xb0
  98:	cmp	x0, x1
  9c:	b.eq	a4 <_ZN4llvm3mca9SchedulerD1Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x20, #80]
  a8:	add	x1, x20, #0x60
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm3mca9SchedulerD1Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x20, #56]
  bc:	cbz	x0, c4 <_ZN4llvm3mca9SchedulerD1Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldp	x21, x22, [x20, #32]
  c8:	cmp	x21, x22
  cc:	b.eq	f4 <_ZN4llvm3mca9SchedulerD1Ev+0xf4>  // b.none
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, e4 <_ZN4llvm3mca9SchedulerD1Ev+0xe4>
  d8:	ldr	x1, [x0]
  dc:	ldr	x1, [x1, #8]
  e0:	blr	x1
  e4:	add	x21, x21, #0x8
  e8:	cmp	x22, x21
  ec:	b.ne	d0 <_ZN4llvm3mca9SchedulerD1Ev+0xd0>  // b.any
  f0:	ldr	x22, [x20, #32]
  f4:	cbz	x22, 100 <_ZN4llvm3mca9SchedulerD1Ev+0x100>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x21, x22, [x20, #8]
 104:	cmp	x21, x22
 108:	b.eq	130 <_ZN4llvm3mca9SchedulerD1Ev+0x130>  // b.none
 10c:	nop
 110:	ldr	x0, [x21]
 114:	cbz	x0, 120 <_ZN4llvm3mca9SchedulerD1Ev+0x120>
 118:	mov	x1, #0x30                  	// #48
 11c:	bl	0 <_ZdlPvm>
 120:	add	x21, x21, #0x8
 124:	cmp	x22, x21
 128:	b.ne	110 <_ZN4llvm3mca9SchedulerD1Ev+0x110>  // b.any
 12c:	ldr	x22, [x20, #8]
 130:	cbz	x22, 13c <_ZN4llvm3mca9SchedulerD1Ev+0x13c>
 134:	mov	x0, x22
 138:	bl	0 <_ZdlPv>
 13c:	mov	x0, x20
 140:	mov	x1, #0x168                 	// #360
 144:	bl	0 <_ZdlPvm>
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x0, [x19, #16]
 150:	cbz	x0, 160 <_ZN4llvm3mca9SchedulerD1Ev+0x160>
 154:	ldr	x1, [x0]
 158:	ldr	x1, [x1, #8]
 15c:	blr	x1
 160:	mov	x0, x19
 164:	ldp	x19, x20, [sp, #16]
 168:	ldp	x29, x30, [sp], #48
 16c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
 170:	ldr	w2, [x20, #232]
 174:	mov	w1, #0x18                  	// #24
 178:	ldr	x0, [x20, #224]
 17c:	umull	x1, w2, w1
 180:	bl	0 <_ZdlPvm>
 184:	ldrb	w0, [x21, #8]
 188:	tbz	w0, #0, 90 <_ZN4llvm3mca9SchedulerD1Ev+0x90>
 18c:	adrp	x3, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 190:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 194:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 198:	add	x3, x3, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x0, x0, #0x0
 1a4:	mov	w2, #0x45b                 	// #1115
 1a8:	bl	0 <__assert_fail>
 1ac:	mov	x0, x20
 1b0:	blr	x1
 1b4:	b	14c <_ZN4llvm3mca9SchedulerD1Ev+0x14c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #72]
  24:	b.hi	14c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x14c>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #88]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x11c>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #3
  6c:	str	x1, [sp, #80]
  70:	bl	0 <malloc>
  74:	mov	x22, x0
  78:	cbz	x0, 134 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x134>
  7c:	ldr	w0, [x20, #8]
  80:	ldr	x1, [x20]
  84:	lsl	x0, x0, #3
  88:	add	x19, x1, x0
  8c:	cmp	x1, x19
  90:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf0>  // b.none
  94:	mov	x2, x22
  98:	str	x23, [sp, #48]
  9c:	nop
  a0:	ldr	x3, [x1]
  a4:	str	xzr, [x1], #8
  a8:	str	x3, [x2], #8
  ac:	cmp	x19, x1
  b0:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xa0>  // b.any
  b4:	ldr	x23, [x20]
  b8:	add	x19, x23, x0
  bc:	cmp	x23, x19
  c0:	b.eq	160 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x160>  // b.none
  c4:	nop
  c8:	ldr	x1, [x19, #-8]!
  cc:	mov	x0, x1
  d0:	cbz	x1, e0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xe0>
  d4:	ldr	x1, [x1]
  d8:	ldr	x1, [x1, #8]
  dc:	blr	x1
  e0:	cmp	x19, x23
  e4:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xc8>  // b.any
  e8:	ldr	x19, [x20]
  ec:	ldr	x23, [sp, #48]
  f0:	add	x0, x20, #0x10
  f4:	cmp	x19, x0
  f8:	b.eq	104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x104>  // b.none
  fc:	mov	x0, x19
 100:	bl	0 <free>
 104:	str	x22, [x20]
 108:	str	w21, [x20, #12]
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x29, x30, [sp], #96
 118:	ret
 11c:	mov	x0, #0x7fffffff8           	// #34359738360
 120:	mov	w21, #0xffffffff            	// #-1
 124:	str	x3, [sp, #80]
 128:	bl	0 <malloc>
 12c:	mov	x22, x0
 130:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x7c>
 134:	mov	x22, #0x0                   	// #0
 138:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
 13c:	mov	w1, #0x1                   	// #1
 140:	add	x0, x0, #0x0
 144:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 148:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x7c>
 14c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
 150:	mov	w1, #0x1                   	// #1
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 15c:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x28>
 160:	ldr	x23, [sp, #48]
 164:	b	f0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf0>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	mov	x1, #0x8                   	// #8
   4:	b	0 <_ZdlPvm>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret
   4:	nop

0000000000000008 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm3mca12HardwareUnitD1Ev>
  1c:	mov	x0, x19
  20:	mov	x1, #0x8                   	// #8
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
       0:	mov	x2, x0
       4:	ldr	x0, [x1, #8]
       8:	ldr	x1, [x0]
       c:	ldrb	w0, [x1, #324]
      10:	cbz	w0, 30 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x30>
      14:	ldr	w3, [x2, #8]
      18:	cbz	w3, 30 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x30>
      1c:	ldr	w4, [x2, #16]
      20:	mov	w0, #0x1                   	// #1
      24:	cmp	w4, w3
      28:	b.eq	54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>  // b.none
      2c:	nop
      30:	ldrb	w1, [x1, #325]
      34:	mov	w0, #0x0                   	// #0
      38:	cbz	w1, 54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>
      3c:	ldr	w0, [x2, #12]
      40:	cbz	w0, 54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>
      44:	ldr	w1, [x2, #20]
      48:	cmp	w0, w1
      4c:	cset	w0, eq  // eq = none
      50:	lsl	w0, w0, #1
      54:	ret

0000000000000058 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
      58:	ldr	w2, [x0, #48]
      5c:	ldr	x1, [x0, #40]
      60:	ldr	w3, [x0, #56]
      64:	add	x3, x1, x3, lsl #4
      68:	cbnz	w2, cc <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>
      6c:	mov	x1, x3
      70:	cmp	x1, x3
      74:	b.eq	c8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x70>  // b.none
      78:	ldr	x0, [x1, #8]
      7c:	ldp	w4, w2, [x0]
      80:	ldr	w5, [x0, #8]
      84:	add	w2, w2, w5
      88:	cmp	w4, w2
      8c:	b.ls	a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x48>  // b.plast
      90:	ldr	w2, [x0, #80]
      94:	cbz	w2, a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x48>
      98:	sub	w2, w2, #0x1
      9c:	str	w2, [x0, #80]
      a0:	add	x1, x1, #0x10
      a4:	cmp	x1, x3
      a8:	b.hi	f4 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x9c>  // b.pmore
      ac:	b.eq	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.none
      b0:	ldr	w0, [x1]
      b4:	cmn	w0, #0x3
      b8:	b.ls	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.plast
      bc:	add	x1, x1, #0x10
      c0:	cmp	x1, x3
      c4:	b.ne	b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x58>  // b.any
      c8:	ret
      cc:	cmp	x1, x3
      d0:	b.hi	f4 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x9c>  // b.pmore
      d4:	b.eq	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.none
      d8:	ldr	w0, [x1]
      dc:	cmn	w0, #0x3
      e0:	b.ls	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.plast
      e4:	add	x1, x1, #0x10
      e8:	cmp	x1, x3
      ec:	b.ne	d8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x80>  // b.any
      f0:	ret
      f4:	stp	x29, x30, [sp, #-16]!
      f8:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
      fc:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     100:	mov	x29, sp
     104:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     108:	add	x3, x3, #0x0
     10c:	add	x1, x1, #0x0
     110:	add	x0, x0, #0x0
     114:	mov	w2, #0x4e0                 	// #1248
     118:	bl	0 <__assert_fail>
     11c:	nop

0000000000000120 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
     120:	stp	x29, x30, [sp, #-48]!
     124:	mov	x29, sp
     128:	stp	x19, x20, [sp, #16]
     12c:	mov	x20, x0
     130:	ldr	w0, [x0, #56]
     134:	ldr	x2, [x20, #40]
     138:	str	x21, [sp, #32]
     13c:	cbz	w0, 284 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x164>
     140:	ldr	x1, [x1, #8]
     144:	ldr	w4, [x1, #796]
     148:	cmn	w4, #0x3
     14c:	b.hi	30c <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1ec>  // b.pmore
     150:	mov	w1, #0x25                  	// #37
     154:	sub	w5, w0, #0x1
     158:	mul	w1, w4, w1
     15c:	and	w3, w1, w5
     160:	and	w1, w1, w5
     164:	lsl	x3, x3, #4
     168:	add	x21, x2, x3
     16c:	ldr	w3, [x2, x3]
     170:	cmp	w4, w3
     174:	b.ne	278 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x158>  // b.any
     178:	ubfiz	x0, x0, #4, #32
     17c:	add	x0, x2, x0
     180:	cmp	x21, x0
     184:	b.eq	284 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x164>  // b.none
     188:	ldr	x19, [x21, #8]
     18c:	ldr	w1, [x19]
     190:	ldr	w0, [x19, #8]
     194:	cmp	w1, w0
     198:	b.ne	2ec <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1cc>  // b.any
     19c:	ldr	w2, [x19, #12]
     1a0:	ldr	w1, [x19, #20]
     1a4:	cmp	w2, w1
     1a8:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1cc>  // b.none
     1ac:	ldr	w0, [x19, #16]
     1b0:	add	w1, w1, #0x1
     1b4:	cmp	w2, w1
     1b8:	sub	w0, w0, #0x1
     1bc:	stp	w0, w1, [x19, #16]
     1c0:	b.ne	224 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x104>  // b.any
     1c4:	ldr	x0, [x19, #24]
     1c8:	ldr	w5, [x19, #32]
     1cc:	add	x5, x0, x5, lsl #3
     1d0:	cmp	x0, x5
     1d4:	b.eq	234 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.none
     1d8:	mov	x3, x0
     1dc:	nop
     1e0:	ldr	x1, [x3]
     1e4:	ldr	w4, [x1]
     1e8:	ldr	w2, [x1, #8]
     1ec:	cmp	w4, w2
     1f0:	b.eq	2cc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1ac>  // b.none
     1f4:	ldr	w4, [x1, #4]
     1f8:	add	w2, w2, #0x1
     1fc:	str	w2, [x1, #8]
     200:	add	x3, x3, #0x8
     204:	sub	w2, w4, #0x1
     208:	str	w2, [x1, #4]
     20c:	cmp	x5, x3
     210:	b.ne	1e0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xc0>  // b.any
     214:	ldr	w1, [x19, #12]
     218:	ldr	w2, [x19, #20]
     21c:	cmp	w2, w1
     220:	b.eq	234 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.none
     224:	ldp	x19, x20, [sp, #16]
     228:	ldr	x21, [sp, #32]
     22c:	ldp	x29, x30, [sp], #48
     230:	ret
     234:	add	x1, x19, #0x28
     238:	cmp	x0, x1
     23c:	b.eq	244 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x124>  // b.none
     240:	bl	0 <free>
     244:	mov	x0, x19
     248:	mov	x1, #0x68                  	// #104
     24c:	bl	0 <_ZdlPvm>
     250:	mov	w0, #0xfffffffe            	// #-2
     254:	str	w0, [x21]
     258:	ldr	x21, [sp, #32]
     25c:	ldp	w1, w0, [x20, #48]
     260:	sub	w1, w1, #0x1
     264:	add	w0, w0, #0x1
     268:	stp	w1, w0, [x20, #48]
     26c:	ldp	x19, x20, [sp, #16]
     270:	ldp	x29, x30, [sp], #48
     274:	ret
     278:	mov	w6, #0x1                   	// #1
     27c:	cmn	w3, #0x1
     280:	b.ne	2a4 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x184>  // b.any
     284:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     288:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     28c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     290:	add	x3, x3, #0x0
     294:	add	x1, x1, #0x0
     298:	add	x0, x0, #0x0
     29c:	mov	w2, #0xa5                  	// #165
     2a0:	bl	0 <__assert_fail>
     2a4:	add	w1, w1, w6
     2a8:	add	w6, w6, #0x1
     2ac:	and	w3, w5, w1
     2b0:	and	w1, w5, w1
     2b4:	lsl	x3, x3, #4
     2b8:	add	x21, x2, x3
     2bc:	ldr	w3, [x2, x3]
     2c0:	cmp	w4, w3
     2c4:	b.eq	178 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x58>  // b.none
     2c8:	b	27c <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x15c>
     2cc:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2d0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2d4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2d8:	add	x3, x3, #0x0
     2dc:	add	x1, x1, #0x0
     2e0:	add	x0, x0, #0x0
     2e4:	mov	w2, #0x73                  	// #115
     2e8:	bl	0 <__assert_fail>
     2ec:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2f0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2f4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2f8:	add	x3, x3, #0x0
     2fc:	add	x1, x1, #0x0
     300:	add	x0, x0, #0x0
     304:	mov	w2, #0x8f                  	// #143
     308:	bl	0 <__assert_fail>
     30c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     310:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     314:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     318:	add	x3, x3, #0x0
     31c:	add	x1, x1, #0x0
     320:	add	x0, x0, #0x0
     324:	mov	w2, #0x250                 	// #592
     328:	bl	0 <__assert_fail>
     32c:	nop

0000000000000330 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
     330:	stp	x29, x30, [sp, #-32]!
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	mov	x19, x0
     340:	ldr	x20, [x1, #8]
     344:	ldr	x0, [x20]
     348:	ldrb	w2, [x0, #324]
     34c:	cbnz	w2, 358 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
     350:	ldrb	w0, [x0, #325]
     354:	cbz	w0, 390 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x60>
     358:	mov	x0, x19
     35c:	bl	120 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
     360:	ldr	w0, [x20, #796]
     364:	cbnz	w0, 39c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x6c>
     368:	ldr	w1, [x19, #68]
     36c:	cmp	w1, w0
     370:	b.eq	3f4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xc4>  // b.none
     374:	ldr	w1, [x19, #76]
     378:	cmp	w1, w0
     37c:	b.ne	384 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x54>  // b.any
     380:	str	wzr, [x19, #76]
     384:	ldr	w1, [x19, #72]
     388:	cmp	w1, w0
     38c:	b.eq	3fc <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xcc>  // b.none
     390:	ldp	x19, x20, [sp, #16]
     394:	ldp	x29, x30, [sp], #32
     398:	ret
     39c:	ldr	w1, [x19, #56]
     3a0:	ldr	x2, [x19, #40]
     3a4:	cbz	w1, 368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>
     3a8:	cmn	w0, #0x3
     3ac:	b.hi	444 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.pmore
     3b0:	mov	w3, #0x25                  	// #37
     3b4:	sub	w5, w1, #0x1
     3b8:	mul	w3, w0, w3
     3bc:	and	w4, w3, w5
     3c0:	and	w3, w3, w5
     3c4:	lsl	x4, x4, #4
     3c8:	add	x6, x2, x4
     3cc:	ldr	w4, [x2, x4]
     3d0:	cmp	w0, w4
     3d4:	b.ne	40c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xdc>  // b.any
     3d8:	ubfiz	x1, x1, #4, #32
     3dc:	add	x1, x2, x1
     3e0:	cmp	x6, x1
     3e4:	b.eq	368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>  // b.none
     3e8:	ldp	x19, x20, [sp, #16]
     3ec:	ldp	x29, x30, [sp], #32
     3f0:	ret
     3f4:	str	wzr, [x19, #68]
     3f8:	b	374 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x44>
     3fc:	str	wzr, [x19, #72]
     400:	ldp	x19, x20, [sp, #16]
     404:	ldp	x29, x30, [sp], #32
     408:	ret
     40c:	mov	w6, #0x1                   	// #1
     410:	cmn	w4, #0x1
     414:	b.eq	368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>  // b.none
     418:	add	w3, w6, w3
     41c:	add	w7, w6, #0x1
     420:	and	w4, w5, w3
     424:	and	w3, w5, w3
     428:	lsl	x4, x4, #4
     42c:	add	x6, x2, x4
     430:	ldr	w4, [x2, x4]
     434:	cmp	w0, w4
     438:	b.eq	3d8 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>  // b.none
     43c:	mov	w6, w7
     440:	b	410 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xe0>
     444:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     448:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     44c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     450:	add	x3, x3, #0x0
     454:	add	x1, x1, #0x0
     458:	add	x0, x0, #0x0
     45c:	mov	w2, #0x250                 	// #592
     460:	bl	0 <__assert_fail>
     464:	nop

0000000000000468 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
     468:	stp	x29, x30, [sp, #-48]!
     46c:	mov	x29, sp
     470:	stp	x19, x20, [sp, #16]
     474:	mov	x19, x0
     478:	ldr	x0, [x1, #8]
     47c:	stp	x21, x22, [sp, #32]
     480:	ldr	x0, [x0]
     484:	ldrb	w2, [x0, #324]
     488:	ldrb	w20, [x0, #325]
     48c:	cmp	w2, #0x0
     490:	ccmp	w20, #0x0, #0x0, eq  // eq = none
     494:	b.eq	6a4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x23c>  // b.none
     498:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
     49c:	mov	x22, x1
     4a0:	ldr	x0, [x21]
     4a4:	ldrb	w0, [x0]
     4a8:	cbnz	w2, 4cc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x64>
     4ac:	ldr	w1, [x19, #20]
     4b0:	sub	w1, w1, #0x1
     4b4:	str	w1, [x19, #20]
     4b8:	cbnz	w0, 598 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x130>
     4bc:	ldp	x19, x20, [sp, #16]
     4c0:	ldp	x21, x22, [sp, #32]
     4c4:	ldp	x29, x30, [sp], #48
     4c8:	ret
     4cc:	ldr	w1, [x19, #16]
     4d0:	sub	w1, w1, #0x1
     4d4:	str	w1, [x19, #16]
     4d8:	cbnz	w0, 4ec <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x84>
     4dc:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     4e0:	ldr	x21, [x21]
     4e4:	ldrb	w0, [x21]
     4e8:	b	4ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x44>
     4ec:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     4f0:	add	x0, x0, #0x0
     4f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     4f8:	tst	w0, #0xff
     4fc:	b.eq	4dc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x74>  // b.none
     500:	bl	0 <_ZN4llvm4dbgsEv>
     504:	mov	x2, x0
     508:	ldp	x1, x3, [x0, #16]
     50c:	sub	x1, x1, x3
     510:	cmp	x1, #0x19
     514:	b.ls	658 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1f0>  // b.plast
     518:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     51c:	add	x4, x4, #0x0
     520:	ldp	x0, x1, [x4]
     524:	stp	x0, x1, [x3]
     528:	ldrh	w0, [x4, #24]
     52c:	ldr	x1, [x4, #16]
     530:	str	x1, [x3, #16]
     534:	strh	w0, [x3, #24]
     538:	ldr	x0, [x2, #24]
     53c:	add	x0, x0, #0x1a
     540:	str	x0, [x2, #24]
     544:	ldr	w1, [x22]
     548:	mov	x0, x2
     54c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     550:	mov	x1, x0
     554:	ldp	x2, x3, [x0, #16]
     558:	sub	x2, x2, x3
     55c:	cmp	x2, #0x26
     560:	b.ls	670 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x208>  // b.plast
     564:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     568:	add	x0, x0, #0x0
     56c:	ldp	x4, x5, [x0, #16]
     570:	stp	x4, x5, [x3, #16]
     574:	ldp	x4, x5, [x0]
     578:	stp	x4, x5, [x3]
     57c:	ldur	x0, [x0, #31]
     580:	stur	x0, [x3, #31]
     584:	ldr	x0, [x1, #24]
     588:	add	x0, x0, #0x27
     58c:	str	x0, [x1, #24]
     590:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     594:	b	4e0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x78>
     598:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     59c:	add	x0, x0, #0x0
     5a0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     5a4:	tst	w0, #0xff
     5a8:	b.eq	4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>  // b.none
     5ac:	bl	0 <_ZN4llvm4dbgsEv>
     5b0:	mov	x2, x0
     5b4:	ldp	x1, x3, [x0, #16]
     5b8:	sub	x1, x1, x3
     5bc:	cmp	x1, #0x19
     5c0:	b.ls	640 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1d8>  // b.plast
     5c4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     5c8:	add	x0, x0, #0x0
     5cc:	ldrh	w1, [x0, #24]
     5d0:	ldp	x4, x5, [x0]
     5d4:	stp	x4, x5, [x3]
     5d8:	ldr	x0, [x0, #16]
     5dc:	str	x0, [x3, #16]
     5e0:	strh	w1, [x3, #24]
     5e4:	ldr	x0, [x2, #24]
     5e8:	add	x0, x0, #0x1a
     5ec:	str	x0, [x2, #24]
     5f0:	ldr	w1, [x22]
     5f4:	mov	x0, x2
     5f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5fc:	mov	x1, x0
     600:	ldp	x2, x3, [x0, #16]
     604:	sub	x2, x2, x3
     608:	cmp	x2, #0x27
     60c:	b.ls	688 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x220>  // b.plast
     610:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     614:	add	x0, x0, #0x0
     618:	ldp	x4, x5, [x0]
     61c:	stp	x4, x5, [x3]
     620:	ldp	x4, x5, [x0, #16]
     624:	stp	x4, x5, [x3, #16]
     628:	ldr	x0, [x0, #32]
     62c:	str	x0, [x3, #32]
     630:	ldr	x0, [x1, #24]
     634:	add	x0, x0, #0x28
     638:	str	x0, [x1, #24]
     63c:	b	4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     640:	mov	x2, #0x1a                  	// #26
     644:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     648:	add	x1, x1, #0x0
     64c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     650:	mov	x2, x0
     654:	b	5f0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x188>
     658:	mov	x2, #0x1a                  	// #26
     65c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     660:	add	x1, x1, #0x0
     664:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     668:	mov	x2, x0
     66c:	b	544 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xdc>
     670:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     674:	mov	x2, #0x27                  	// #39
     678:	add	x1, x1, #0x0
     67c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     680:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     684:	b	4e0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x78>
     688:	ldp	x19, x20, [sp, #16]
     68c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     690:	ldp	x21, x22, [sp, #32]
     694:	add	x1, x1, #0x0
     698:	ldp	x29, x30, [sp], #48
     69c:	mov	x2, #0x28                  	// #40
     6a0:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6a4:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6a8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6ac:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6b0:	add	x3, x3, #0x0
     6b4:	add	x1, x1, #0x0
     6b8:	add	x0, x0, #0x0
     6bc:	mov	w2, #0xaf                  	// #175
     6c0:	bl	0 <__assert_fail>
     6c4:	nop

00000000000006c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
     6c8:	stp	x29, x30, [sp, #-112]!
     6cc:	mov	x29, sp
     6d0:	stp	x19, x20, [sp, #16]
     6d4:	mov	x19, x0
     6d8:	ldr	x0, [x1, #8]
     6dc:	stp	x23, x24, [sp, #48]
     6e0:	stp	x21, x22, [sp, #32]
     6e4:	ldr	x23, [x0]
     6e8:	stp	x25, x26, [sp, #64]
     6ec:	ldrb	w0, [x23, #324]
     6f0:	ldrb	w21, [x23, #326]
     6f4:	ldrb	w1, [x23, #325]
     6f8:	cbnz	w0, 874 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1ac>
     6fc:	cbz	w1, e28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x760>
     700:	ldr	w1, [x19, #20]
     704:	mov	x0, #0x68                  	// #104
     708:	add	w1, w1, #0x1
     70c:	str	w1, [x19, #20]
     710:	bl	0 <_Znwm>
     714:	mov	x20, x0
     718:	ldr	w25, [x19, #56]
     71c:	add	x1, x0, #0x28
     720:	mov	x0, #0x400000000           	// #17179869184
     724:	ldr	w22, [x19, #64]
     728:	stp	xzr, xzr, [x20]
     72c:	stp	xzr, x1, [x20, #16]
     730:	str	x0, [x20, #32]
     734:	str	wzr, [x20, #72]
     738:	strh	wzr, [x20, #76]
     73c:	str	wzr, [x20, #80]
     740:	str	wzr, [x20, #88]
     744:	str	xzr, [x20, #96]
     748:	ldr	x24, [x19, #40]
     74c:	cbz	w25, 18dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1214>
     750:	stp	x27, x28, [sp, #80]
     754:	cmn	w22, #0x3
     758:	b.hi	e50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x788>  // b.pmore
     75c:	mov	w2, #0x25                  	// #37
     760:	sub	w1, w25, #0x1
     764:	mov	x4, #0x0                   	// #0
     768:	mul	w26, w22, w2
     76c:	and	w0, w26, w1
     770:	and	w3, w26, w1
     774:	lsl	x0, x0, #4
     778:	add	x2, x24, x0
     77c:	ldr	w27, [x24, x0]
     780:	mov	w0, #0x1                   	// #1
     784:	cmp	w22, w27
     788:	b.ne	cc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5f8>  // b.any
     78c:	mov	x0, x20
     790:	mov	x1, #0x68                  	// #104
     794:	bl	0 <_ZdlPvm>
     798:	ldp	x27, x28, [sp, #80]
     79c:	ldr	w22, [x19, #64]
     7a0:	add	w0, w22, #0x1
     7a4:	str	w0, [x19, #64]
     7a8:	cbz	w22, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     7ac:	ldr	w0, [x19, #56]
     7b0:	ldr	x2, [x19, #40]
     7b4:	cbz	w0, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     7b8:	cmn	w22, #0x3
     7bc:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     7c0:	mov	w1, #0x25                  	// #37
     7c4:	sub	w3, w0, #0x1
     7c8:	mul	w1, w22, w1
     7cc:	and	w4, w1, w3
     7d0:	and	w1, w1, w3
     7d4:	lsl	x4, x4, #4
     7d8:	add	x5, x2, x4
     7dc:	ldr	w4, [x2, x4]
     7e0:	cmp	w22, w4
     7e4:	b.ne	1c58 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1590>  // b.any
     7e8:	ubfiz	x0, x0, #4, #32
     7ec:	add	x4, x2, x0
     7f0:	cmp	x5, x4
     7f4:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     7f8:	mov	w0, #0x25                  	// #37
     7fc:	mul	w0, w22, w0
     800:	and	w1, w0, w3
     804:	and	w0, w0, w3
     808:	lsl	x1, x1, #4
     80c:	add	x5, x2, x1
     810:	ldr	w1, [x2, x1]
     814:	cmp	w22, w1
     818:	b.ne	1820 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1158>  // b.any
     81c:	ldr	x24, [x5, #8]
     820:	ldr	w0, [x24, #32]
     824:	cbnz	w0, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     828:	ldr	w0, [x24, #12]
     82c:	add	w0, w0, #0x1
     830:	str	w0, [x24, #12]
     834:	ldp	w1, w0, [x19, #68]
     838:	cmp	w1, w0
     83c:	csel	w20, w1, w0, cs  // cs = hs, nlast
     840:	cbnz	w20, f3c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x874>
     844:	ldr	w1, [x19, #76]
     848:	cbnz	w1, fc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8f8>
     84c:	ldrb	w0, [x23, #324]
     850:	str	w22, [x19, #76]
     854:	cbnz	w0, a08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
     858:	mov	w0, w22
     85c:	ldp	x19, x20, [sp, #16]
     860:	ldp	x21, x22, [sp, #32]
     864:	ldp	x23, x24, [sp, #48]
     868:	ldp	x25, x26, [sp, #64]
     86c:	ldp	x29, x30, [sp], #112
     870:	ret
     874:	ldr	w0, [x19, #16]
     878:	add	w0, w0, #0x1
     87c:	str	w0, [x19, #16]
     880:	cbnz	w1, 700 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x38>
     884:	ldr	w0, [x19, #68]
     888:	cmp	w0, #0x0
     88c:	ccmp	w21, #0x0, #0x0, ne  // ne = any
     890:	b.ne	8ac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>  // b.any
     894:	ldr	w1, [x19, #76]
     898:	cmp	w0, w1
     89c:	b.ls	8ac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>  // b.plast
     8a0:	ldr	w1, [x19, #72]
     8a4:	cmp	w0, w1
     8a8:	b.hi	b38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x470>  // b.pmore
     8ac:	mov	x0, #0x68                  	// #104
     8b0:	bl	0 <_Znwm>
     8b4:	mov	x20, x0
     8b8:	ldr	w25, [x19, #56]
     8bc:	add	x1, x20, #0x28
     8c0:	mov	x0, #0x400000000           	// #17179869184
     8c4:	ldr	w22, [x19, #64]
     8c8:	stp	xzr, xzr, [x20]
     8cc:	stp	xzr, x1, [x20, #16]
     8d0:	str	x0, [x20, #32]
     8d4:	str	wzr, [x20, #72]
     8d8:	strh	wzr, [x20, #76]
     8dc:	str	wzr, [x20, #80]
     8e0:	str	wzr, [x20, #88]
     8e4:	str	xzr, [x20, #96]
     8e8:	ldr	x24, [x19, #40]
     8ec:	cbz	w25, 1240 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb78>
     8f0:	cmn	w22, #0x3
     8f4:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     8f8:	mov	w2, #0x25                  	// #37
     8fc:	sub	w1, w25, #0x1
     900:	mov	x4, #0x0                   	// #0
     904:	mul	w26, w22, w2
     908:	and	w0, w26, w1
     90c:	and	w3, w26, w1
     910:	lsl	x0, x0, #4
     914:	add	x2, x24, x0
     918:	ldr	w23, [x24, x0]
     91c:	mov	w0, #0x1                   	// #1
     920:	cmp	w23, w22
     924:	b.ne	c18 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x550>  // b.any
     928:	mov	x0, x20
     92c:	mov	x1, #0x68                  	// #104
     930:	bl	0 <_ZdlPvm>
     934:	ldr	w22, [x19, #64]
     938:	add	w0, w22, #0x1
     93c:	str	w0, [x19, #64]
     940:	cbnz	w22, 968 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a0>
     944:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     948:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     94c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     950:	add	x3, x3, #0x0
     954:	add	x1, x1, #0x0
     958:	add	x0, x0, #0x0
     95c:	mov	w2, #0x11c                 	// #284
     960:	stp	x27, x28, [sp, #80]
     964:	bl	0 <__assert_fail>
     968:	ldr	w0, [x19, #56]
     96c:	ldr	x5, [x19, #40]
     970:	cbz	w0, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     974:	cmn	w22, #0x3
     978:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     97c:	mov	w1, #0x25                  	// #37
     980:	sub	w2, w0, #0x1
     984:	mul	w1, w22, w1
     988:	and	w3, w1, w2
     98c:	and	w1, w1, w2
     990:	lsl	x3, x3, #4
     994:	add	x4, x5, x3
     998:	ldr	w3, [x5, x3]
     99c:	cmp	w22, w3
     9a0:	b.ne	17d4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x110c>  // b.any
     9a4:	ubfiz	x0, x0, #4, #32
     9a8:	add	x3, x5, x0
     9ac:	cmp	x4, x3
     9b0:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     9b4:	mov	w0, #0x25                  	// #37
     9b8:	mul	w0, w22, w0
     9bc:	and	w1, w0, w2
     9c0:	and	w0, w0, w2
     9c4:	lsl	x1, x1, #4
     9c8:	add	x4, x5, x1
     9cc:	ldr	w1, [x5, x1]
     9d0:	cmp	w22, w1
     9d4:	b.ne	1040 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x978>  // b.any
     9d8:	ldr	x23, [x4, #8]
     9dc:	ldr	w0, [x23, #32]
     9e0:	cbnz	w0, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     9e4:	ldr	w0, [x23, #12]
     9e8:	ldrb	w1, [x19, #24]
     9ec:	add	w0, w0, #0x1
     9f0:	str	w0, [x23, #12]
     9f4:	cbnz	w1, a00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>
     9f8:	ldr	w0, [x19, #76]
     9fc:	cbnz	w0, 1090 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x9c8>
     a00:	ldr	w0, [x19, #72]
     a04:	cbnz	w0, a30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x368>
     a08:	str	w22, [x19, #68]
     a0c:	cbz	w21, a14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x34c>
     a10:	str	w22, [x19, #72]
     a14:	mov	w0, w22
     a18:	ldp	x19, x20, [sp, #16]
     a1c:	ldp	x21, x22, [sp, #32]
     a20:	ldp	x23, x24, [sp, #48]
     a24:	ldp	x25, x26, [sp, #64]
     a28:	ldp	x29, x30, [sp], #112
     a2c:	ret
     a30:	ldr	w1, [x19, #56]
     a34:	ldr	x5, [x19, #40]
     a38:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     a3c:	cmn	w0, #0x3
     a40:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     a44:	mov	w2, #0x25                  	// #37
     a48:	sub	w6, w1, #0x1
     a4c:	mul	w2, w0, w2
     a50:	and	w3, w2, w6
     a54:	and	w2, w2, w6
     a58:	lsl	x3, x3, #4
     a5c:	add	x4, x5, x3
     a60:	ldr	w3, [x5, x3]
     a64:	cmp	w0, w3
     a68:	b.ne	1bf4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x152c>  // b.any
     a6c:	ubfiz	x1, x1, #4, #32
     a70:	add	x3, x5, x1
     a74:	cmp	x3, x4
     a78:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     a7c:	mov	w1, #0x25                  	// #37
     a80:	mul	w1, w0, w1
     a84:	and	w2, w1, w6
     a88:	and	w1, w1, w6
     a8c:	lsl	x2, x2, #4
     a90:	add	x4, x5, x2
     a94:	ldr	w2, [x5, x2]
     a98:	cmp	w0, w2
     a9c:	b.ne	180c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1144>  // b.any
     aa0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     aa4:	ldr	x20, [x4, #8]
     aa8:	ldr	x0, [x0]
     aac:	ldrb	w0, [x0]
     ab0:	cbnz	w0, e70 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x7a8>
     ab4:	ldr	w0, [x23]
     ab8:	add	w0, w0, #0x1
     abc:	str	w0, [x23]
     ac0:	ldr	w1, [x20, #12]
     ac4:	ldr	w3, [x20, #20]
     ac8:	cmp	w1, w3
     acc:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     ad0:	ldr	w2, [x20, #16]
     ad4:	cbz	w2, ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>
     ad8:	sub	w1, w1, w3
     adc:	cmp	w2, w1
     ae0:	b.eq	1054 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x98c>  // b.none
     ae4:	ldp	w0, w1, [x20, #32]
     ae8:	cmp	w0, w1
     aec:	b.cs	177c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x10b4>  // b.hs, b.nlast
     af0:	ldr	x3, [x20, #24]
     af4:	mov	w2, w0
     af8:	add	x4, x2, #0x1
     afc:	cmp	x4, w1, uxtw
     b00:	str	x23, [x3, x2, lsl #3]
     b04:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
     b08:	add	w0, w0, #0x1
     b0c:	str	w0, [x20, #32]
     b10:	cbnz	w0, a08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
     b14:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b18:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b1c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b20:	add	x3, x3, #0x0
     b24:	add	x1, x1, #0x0
     b28:	add	x0, x0, #0x0
     b2c:	mov	w2, #0xa7                  	// #167
     b30:	stp	x27, x28, [sp, #80]
     b34:	bl	0 <__assert_fail>
     b38:	ldr	w1, [x19, #56]
     b3c:	ldr	x3, [x19, #40]
     b40:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     b44:	cmn	w0, #0x3
     b48:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     b4c:	mov	w2, #0x25                  	// #37
     b50:	sub	w4, w1, #0x1
     b54:	mul	w2, w0, w2
     b58:	and	w5, w2, w4
     b5c:	and	w2, w2, w4
     b60:	lsl	x5, x5, #4
     b64:	add	x7, x3, x5
     b68:	ldr	w5, [x3, x5]
     b6c:	cmp	w0, w5
     b70:	b.ne	1cd4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x160c>  // b.any
     b74:	ubfiz	x1, x1, #4, #32
     b78:	add	x6, x3, x1
     b7c:	cmp	x7, x6
     b80:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     b84:	mov	w1, #0x25                  	// #37
     b88:	mul	w1, w0, w1
     b8c:	and	w2, w1, w4
     b90:	and	w1, w1, w4
     b94:	lsl	x2, x2, #4
     b98:	add	x5, x3, x2
     b9c:	ldr	w2, [x3, x2]
     ba0:	cmp	w0, w2
     ba4:	b.ne	1834 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x116c>  // b.any
     ba8:	ldr	x0, [x5, #8]
     bac:	ldr	w1, [x0, #32]
     bb0:	cbnz	w1, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     bb4:	ldr	w1, [x0, #12]
     bb8:	ldp	x23, x24, [sp, #48]
     bbc:	add	w1, w1, #0x1
     bc0:	str	w1, [x0, #12]
     bc4:	ldp	x25, x26, [sp, #64]
     bc8:	ldr	w22, [x19, #68]
     bcc:	ldp	x19, x20, [sp, #16]
     bd0:	mov	w0, w22
     bd4:	ldp	x21, x22, [sp, #32]
     bd8:	ldp	x29, x30, [sp], #112
     bdc:	ret
     be0:	add	w3, w0, w3
     be4:	cmp	x4, #0x0
     be8:	and	w5, w1, w3
     bec:	ccmn	w23, #0x2, #0x0, eq  // eq = none
     bf0:	csel	x2, x2, x4, eq  // eq = none
     bf4:	add	w0, w0, #0x1
     bf8:	lsl	x4, x5, #4
     bfc:	and	w3, w1, w3
     c00:	add	x5, x24, x4
     c04:	ldr	w23, [x24, x4]
     c08:	cmp	w22, w23
     c0c:	b.eq	928 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x260>  // b.none
     c10:	mov	x4, x2
     c14:	mov	x2, x5
     c18:	cmn	w23, #0x1
     c1c:	b.ne	be0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x518>  // b.any
     c20:	ldr	x3, [x19, #32]
     c24:	lsl	w0, w25, #1
     c28:	ldr	w5, [x19, #48]
     c2c:	cmp	x4, #0x0
     c30:	add	x3, x3, #0x1
     c34:	str	x3, [x19, #32]
     c38:	add	w5, w5, #0x1
     c3c:	add	w3, w0, w25
     c40:	csel	x4, x4, x2, ne  // ne = any
     c44:	cmp	w3, w5, lsl #2
     c48:	b.ls	1250 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb88>  // b.plast
     c4c:	ldr	w0, [x19, #52]
     c50:	sub	w0, w25, w0
     c54:	sub	w0, w0, w5
     c58:	cmp	w0, w25, lsr #3
     c5c:	b.ls	1388 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xcc0>  // b.plast
     c60:	str	w5, [x19, #48]
     c64:	ldr	w0, [x4]
     c68:	cmn	w0, #0x1
     c6c:	b.eq	c7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5b4>  // b.none
     c70:	ldr	w0, [x19, #52]
     c74:	sub	w0, w0, #0x1
     c78:	str	w0, [x19, #52]
     c7c:	str	w22, [x4]
     c80:	str	x20, [x4, #8]
     c84:	b	934 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x26c>
     c88:	add	w3, w3, w0
     c8c:	cmp	x4, #0x0
     c90:	and	w5, w1, w3
     c94:	ccmn	w27, #0x2, #0x0, eq  // eq = none
     c98:	csel	x2, x2, x4, eq  // eq = none
     c9c:	add	w0, w0, #0x1
     ca0:	lsl	x4, x5, #4
     ca4:	and	w3, w1, w3
     ca8:	add	x5, x24, x4
     cac:	ldr	w27, [x24, x4]
     cb0:	cmp	w22, w27
     cb4:	b.eq	78c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc4>  // b.none
     cb8:	mov	x4, x2
     cbc:	mov	x2, x5
     cc0:	cmn	w27, #0x1
     cc4:	b.ne	c88 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5c0>  // b.any
     cc8:	ldr	x3, [x19, #32]
     ccc:	lsl	w0, w25, #1
     cd0:	ldr	w5, [x19, #48]
     cd4:	cmp	x4, #0x0
     cd8:	add	x3, x3, #0x1
     cdc:	str	x3, [x19, #32]
     ce0:	add	w5, w5, #0x1
     ce4:	add	w3, w0, w25
     ce8:	csel	x4, x4, x2, ne  // ne = any
     cec:	cmp	w3, w5, lsl #2
     cf0:	b.ls	2140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a78>  // b.plast
     cf4:	ldr	w0, [x19, #52]
     cf8:	sub	w0, w25, w0
     cfc:	sub	w0, w0, w5
     d00:	cmp	w0, w25, lsr #3
     d04:	b.ls	d34 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x66c>  // b.plast
     d08:	ldp	x27, x28, [sp, #80]
     d0c:	str	w5, [x19, #48]
     d10:	ldr	w0, [x4]
     d14:	cmn	w0, #0x1
     d18:	b.eq	d28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x660>  // b.none
     d1c:	ldr	w0, [x19, #52]
     d20:	sub	w0, w0, #0x1
     d24:	str	w0, [x19, #52]
     d28:	str	w22, [x4]
     d2c:	str	x20, [x4, #8]
     d30:	b	79c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd4>
     d34:	mov	w2, w1
     d38:	lsr	w0, w1, #1
     d3c:	orr	x0, x0, x2
     d40:	mov	w1, #0x40                  	// #64
     d44:	orr	x0, x0, x0, lsr #2
     d48:	orr	x0, x0, x0, lsr #4
     d4c:	orr	x0, x0, x0, lsr #8
     d50:	orr	x0, x0, x0, lsr #16
     d54:	add	x0, x0, #0x1
     d58:	cmp	w0, w1
     d5c:	csel	w0, w0, w1, cs  // cs = hs, nlast
     d60:	str	w0, [x19, #56]
     d64:	ubfiz	x0, x0, #4, #32
     d68:	bl	0 <_Znwm>
     d6c:	ldr	w1, [x19, #56]
     d70:	stp	x0, xzr, [x19, #40]
     d74:	sub	w2, w1, #0x1
     d78:	and	w2, w2, w1
     d7c:	cbz	x24, 1e64 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x179c>
     d80:	ubfiz	x3, x25, #4, #32
     d84:	str	x3, [sp, #104]
     d88:	add	x28, x24, x3
     d8c:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
     d90:	ubfiz	x1, x1, #4, #32
     d94:	mov	w3, w27
     d98:	add	x1, x0, x1
     d9c:	cmp	x0, x1
     da0:	b.eq	db4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6ec>  // b.none
     da4:	nop
     da8:	str	w3, [x0], #16
     dac:	cmp	x1, x0
     db0:	b.ne	da8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6e0>  // b.any
     db4:	mov	x25, x24
     db8:	mov	w27, #0x25                  	// #37
     dbc:	b	dcc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x704>
     dc0:	add	x25, x25, #0x10
     dc4:	cmp	x28, x25
     dc8:	b.eq	1adc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1414>  // b.none
     dcc:	ldr	w0, [x25]
     dd0:	cmn	w0, #0x3
     dd4:	b.hi	dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>  // b.pmore
     dd8:	ldr	w1, [x19, #56]
     ddc:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
     de0:	mul	w2, w0, w27
     de4:	sub	w1, w1, #0x1
     de8:	ldr	x4, [x19, #40]
     dec:	and	w3, w2, w1
     df0:	and	w2, w2, w1
     df4:	lsl	x3, x3, #4
     df8:	add	x6, x4, x3
     dfc:	ldr	w3, [x4, x3]
     e00:	cmp	w0, w3
     e04:	b.ne	1d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1640>  // b.any
     e08:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e0c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e10:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e14:	add	x3, x3, #0x0
     e18:	add	x1, x1, #0x0
     e1c:	add	x0, x0, #0x0
     e20:	mov	w2, #0x17a                 	// #378
     e24:	bl	0 <__assert_fail>
     e28:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e2c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e30:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e34:	add	x3, x3, #0x0
     e38:	add	x1, x1, #0x0
     e3c:	add	x0, x0, #0x0
     e40:	mov	w2, #0x48                  	// #72
     e44:	stp	x27, x28, [sp, #80]
     e48:	bl	0 <__assert_fail>
     e4c:	stp	x27, x28, [sp, #80]
     e50:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e54:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e58:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e5c:	add	x3, x3, #0x0
     e60:	add	x1, x1, #0x0
     e64:	add	x0, x0, #0x0
     e68:	mov	w2, #0x250                 	// #592
     e6c:	bl	0 <__assert_fail>
     e70:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e74:	add	x0, x0, #0x0
     e78:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e7c:	tst	w0, #0xff
     e80:	b.eq	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>  // b.none
     e84:	bl	0 <_ZN4llvm4dbgsEv>
     e88:	mov	x2, x0
     e8c:	ldp	x1, x3, [x0, #16]
     e90:	sub	x1, x1, x3
     e94:	cmp	x1, #0x15
     e98:	b.ls	1ac4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13fc>  // b.plast
     e9c:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     ea0:	add	x4, x4, #0x0
     ea4:	ldp	x0, x1, [x4]
     ea8:	stp	x0, x1, [x3]
     eac:	ldur	x0, [x4, #14]
     eb0:	stur	x0, [x3, #14]
     eb4:	ldr	x0, [x2, #24]
     eb8:	add	x0, x0, #0x16
     ebc:	str	x0, [x2, #24]
     ec0:	ldr	w1, [x19, #72]
     ec4:	mov	x0, x2
     ec8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ecc:	mov	x1, x0
     ed0:	ldp	x2, x3, [x0, #16]
     ed4:	sub	x2, x2, x3
     ed8:	cmp	x2, #0x6
     edc:	b.ls	1a98 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13d0>  // b.plast
     ee0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	w2, [x0]
     eec:	ldur	w0, [x0, #3]
     ef0:	str	w2, [x3]
     ef4:	stur	w0, [x3, #3]
     ef8:	ldr	x0, [x1, #24]
     efc:	add	x0, x0, #0x7
     f00:	str	x0, [x1, #24]
     f04:	mov	x0, x1
     f08:	mov	w1, w22
     f0c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f10:	mov	x1, x0
     f14:	ldp	x2, x3, [x0, #16]
     f18:	sub	x2, x2, x3
     f1c:	cmp	x2, #0x1
     f20:	b.ls	1ab0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13e8>  // b.plast
     f24:	mov	w0, #0xa29                 	// #2601
     f28:	strh	w0, [x3]
     f2c:	ldr	x0, [x1, #24]
     f30:	add	x0, x0, #0x2
     f34:	str	x0, [x1, #24]
     f38:	b	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>
     f3c:	mov	w1, w20
     f40:	mov	x0, x19
     f44:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     f48:	mov	x25, x0
     f4c:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
     f50:	ldr	x1, [x1]
     f54:	ldrb	w1, [x1]
     f58:	cbnz	w1, 15e4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xf1c>
     f5c:	ldr	w1, [x24]
     f60:	add	w1, w1, #0x1
     f64:	str	w1, [x24]
     f68:	ldr	w2, [x25, #12]
     f6c:	ldr	w4, [x25, #20]
     f70:	cmp	w2, w4
     f74:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     f78:	ldr	w3, [x25, #16]
     f7c:	cbz	w3, f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>
     f80:	sub	w2, w2, w4
     f84:	cmp	w3, w2
     f88:	b.eq	1884 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x11bc>  // b.none
     f8c:	ldp	w1, w2, [x25, #32]
     f90:	cmp	w1, w2
     f94:	b.cs	1b50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1488>  // b.hs, b.nlast
     f98:	ldr	x4, [x25, #24]
     f9c:	mov	w3, w1
     fa0:	add	x5, x3, #0x1
     fa4:	cmp	x5, w2, uxtw
     fa8:	str	x24, [x4, x3, lsl #3]
     fac:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
     fb0:	add	w1, w1, #0x1
     fb4:	str	w1, [x25, #32]
     fb8:	cbnz	w1, 844 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17c>
     fbc:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
     fc0:	mov	x0, x19
     fc4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     fc8:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
     fcc:	mov	x20, x0
     fd0:	ldr	x1, [x1]
     fd4:	ldrb	w1, [x1]
     fd8:	cbnz	w1, 16b0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xfe8>
     fdc:	ldr	w1, [x24]
     fe0:	add	w1, w1, #0x1
     fe4:	str	w1, [x24]
     fe8:	ldr	w2, [x20, #12]
     fec:	ldr	w4, [x20, #20]
     ff0:	cmp	w2, w4
     ff4:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     ff8:	ldr	w3, [x20, #16]
     ffc:	cbz	w3, 100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>
    1000:	sub	w2, w2, w4
    1004:	cmp	w3, w2
    1008:	b.eq	1848 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1180>  // b.none
    100c:	ldp	w1, w2, [x20, #32]
    1010:	cmp	w1, w2
    1014:	b.cs	1b6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14a4>  // b.hs, b.nlast
    1018:	ldr	x4, [x20, #24]
    101c:	mov	w3, w1
    1020:	add	x5, x3, #0x1
    1024:	cmp	x5, w2, uxtw
    1028:	str	x24, [x4, x3, lsl #3]
    102c:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
    1030:	add	w1, w1, #0x1
    1034:	str	w1, [x20, #32]
    1038:	cbnz	w1, 84c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x184>
    103c:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
    1040:	mov	w4, #0x1                   	// #1
    1044:	cmn	w1, #0x1
    1048:	b.ne	1c2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1564>  // b.any
    104c:	mov	x4, x3
    1050:	b	9d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x310>
    1054:	ldr	w1, [x23, #8]
    1058:	cmp	w0, w1
    105c:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1060:	ldr	w0, [x23, #4]
    1064:	ldr	x2, [x20, #96]
    1068:	add	w0, w0, #0x1
    106c:	str	w0, [x23, #4]
    1070:	ldr	w1, [x23, #80]
    1074:	ldr	w0, [x2, #788]
    1078:	cmp	w0, w1
    107c:	b.ls	ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>  // b.plast
    1080:	ldr	w1, [x20, #88]
    1084:	str	w1, [x23, #72]
    1088:	str	w0, [x23, #80]
    108c:	b	ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>
    1090:	ldr	w1, [x19, #56]
    1094:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
    1098:	cmn	w0, #0x3
    109c:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    10a0:	mov	w2, #0x25                  	// #37
    10a4:	sub	w6, w1, #0x1
    10a8:	mul	w2, w0, w2
    10ac:	and	w3, w2, w6
    10b0:	and	w2, w2, w6
    10b4:	lsl	x3, x3, #4
    10b8:	add	x4, x5, x3
    10bc:	ldr	w3, [x5, x3]
    10c0:	cmp	w0, w3
    10c4:	b.ne	1df8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1730>  // b.any
    10c8:	ubfiz	x1, x1, #4, #32
    10cc:	add	x3, x5, x1
    10d0:	cmp	x3, x4
    10d4:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    10d8:	mov	w1, #0x25                  	// #37
    10dc:	mul	w1, w0, w1
    10e0:	and	w2, w1, w6
    10e4:	and	w1, w1, w6
    10e8:	lsl	x2, x2, #4
    10ec:	add	x4, x5, x2
    10f0:	ldr	w2, [x5, x2]
    10f4:	cmp	w0, w2
    10f8:	b.ne	1b3c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1474>  // b.any
    10fc:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1100:	ldr	x20, [x4, #8]
    1104:	ldr	x0, [x0]
    1108:	ldrb	w0, [x0]
    110c:	cbnz	w0, 1174 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xaac>
    1110:	ldr	w0, [x23]
    1114:	add	w0, w0, #0x1
    1118:	str	w0, [x23]
    111c:	ldr	w1, [x20, #12]
    1120:	ldr	w3, [x20, #20]
    1124:	cmp	w1, w3
    1128:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
    112c:	ldr	w2, [x20, #16]
    1130:	cbz	w2, 1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>
    1134:	sub	w1, w1, w3
    1138:	cmp	w2, w1
    113c:	b.eq	1798 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x10d0>  // b.none
    1140:	ldp	w0, w1, [x20, #32]
    1144:	cmp	w0, w1
    1148:	b.cs	18c0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x11f8>  // b.hs, b.nlast
    114c:	ldr	x3, [x20, #24]
    1150:	mov	w2, w0
    1154:	add	x4, x2, #0x1
    1158:	cmp	x4, w1, uxtw
    115c:	str	x23, [x3, x2, lsl #3]
    1160:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
    1164:	add	w0, w0, #0x1
    1168:	str	w0, [x20, #32]
    116c:	cbnz	w0, a00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>
    1170:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
    1174:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1178:	add	x0, x0, #0x0
    117c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1180:	tst	w0, #0xff
    1184:	b.eq	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>  // b.none
    1188:	bl	0 <_ZN4llvm4dbgsEv>
    118c:	mov	x2, x0
    1190:	ldp	x1, x3, [x0, #16]
    1194:	sub	x1, x1, x3
    1198:	cmp	x1, #0x15
    119c:	b.ls	1cbc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15f4>  // b.plast
    11a0:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    11a4:	add	x4, x4, #0x0
    11a8:	ldp	x0, x1, [x4]
    11ac:	stp	x0, x1, [x3]
    11b0:	ldur	x0, [x4, #14]
    11b4:	stur	x0, [x3, #14]
    11b8:	ldr	x0, [x2, #24]
    11bc:	add	x0, x0, #0x16
    11c0:	str	x0, [x2, #24]
    11c4:	ldr	w1, [x19, #76]
    11c8:	mov	x0, x2
    11cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    11d0:	mov	x1, x0
    11d4:	ldp	x2, x3, [x0, #16]
    11d8:	sub	x2, x2, x3
    11dc:	cmp	x2, #0x6
    11e0:	b.ls	1ca4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15dc>  // b.plast
    11e4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    11e8:	add	x0, x0, #0x0
    11ec:	ldr	w2, [x0]
    11f0:	ldur	w0, [x0, #3]
    11f4:	str	w2, [x3]
    11f8:	stur	w0, [x3, #3]
    11fc:	ldr	x0, [x1, #24]
    1200:	add	x0, x0, #0x7
    1204:	str	x0, [x1, #24]
    1208:	mov	x0, x1
    120c:	mov	w1, w22
    1210:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1214:	mov	x1, x0
    1218:	ldp	x2, x3, [x0, #16]
    121c:	sub	x2, x2, x3
    1220:	cmp	x2, #0x1
    1224:	b.ls	1c90 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15c8>  // b.plast
    1228:	mov	w0, #0xa29                 	// #2601
    122c:	strh	w0, [x3]
    1230:	ldr	x0, [x1, #24]
    1234:	add	x0, x0, #0x2
    1238:	str	x0, [x1, #24]
    123c:	b	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>
    1240:	ldr	x1, [x19, #32]
    1244:	mov	w0, #0x0                   	// #0
    1248:	add	x1, x1, #0x1
    124c:	str	x1, [x19, #32]
    1250:	sub	w0, w0, #0x1
    1254:	mov	w1, #0x40                  	// #64
    1258:	orr	x0, x0, x0, lsr #1
    125c:	orr	x0, x0, x0, lsr #2
    1260:	orr	x0, x0, x0, lsr #4
    1264:	orr	x0, x0, x0, lsr #8
    1268:	orr	x0, x0, x0, lsr #16
    126c:	add	x0, x0, #0x1
    1270:	cmp	w0, w1
    1274:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1278:	str	w0, [x19, #56]
    127c:	ubfiz	x0, x0, #4, #32
    1280:	bl	0 <_Znwm>
    1284:	ldr	w1, [x19, #56]
    1288:	str	x0, [x19, #40]
    128c:	sub	w2, w1, #0x1
    1290:	and	w2, w2, w1
    1294:	cbz	x24, 1b88 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14c0>
    1298:	stp	x27, x28, [sp, #80]
    129c:	ubfiz	x25, x25, #4, #32
    12a0:	add	x27, x24, x25
    12a4:	str	xzr, [x19, #48]
    12a8:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    12ac:	ubfiz	x1, x1, #4, #32
    12b0:	mov	w2, #0xffffffff            	// #-1
    12b4:	add	x1, x0, x1
    12b8:	cmp	x0, x1
    12bc:	b.eq	12cc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc04>  // b.none
    12c0:	str	w2, [x0], #16
    12c4:	cmp	x1, x0
    12c8:	b.ne	12c0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xbf8>  // b.any
    12cc:	cmp	x24, x27
    12d0:	mov	x23, x24
    12d4:	mov	w26, #0x25                  	// #37
    12d8:	b.ne	12ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc24>  // b.any
    12dc:	b	14c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe00>
    12e0:	add	x23, x23, #0x10
    12e4:	cmp	x27, x23
    12e8:	b.eq	14c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe00>  // b.none
    12ec:	ldr	w0, [x23]
    12f0:	cmn	w0, #0x3
    12f4:	b.hi	12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>  // b.pmore
    12f8:	ldr	w1, [x19, #56]
    12fc:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    1300:	mul	w2, w0, w26
    1304:	sub	w1, w1, #0x1
    1308:	ldr	x4, [x19, #40]
    130c:	and	w3, w2, w1
    1310:	and	w2, w2, w1
    1314:	lsl	x3, x3, #4
    1318:	add	x5, x4, x3
    131c:	ldr	w3, [x4, x3]
    1320:	cmp	w0, w3
    1324:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1328:	mov	w7, #0x1                   	// #1
    132c:	mov	x6, #0x0                   	// #0
    1330:	cmn	w3, #0x1
    1334:	b.ne	1eec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1824>  // b.any
    1338:	cmp	x6, #0x0
    133c:	csel	x6, x6, x5, ne  // ne = any
    1340:	ldr	x1, [x23, #8]
    1344:	str	w0, [x6]
    1348:	ldr	w0, [x19, #48]
    134c:	str	xzr, [x23, #8]
    1350:	str	x1, [x6, #8]
    1354:	add	w0, w0, #0x1
    1358:	ldr	x28, [x23, #8]
    135c:	str	w0, [x19, #48]
    1360:	cbz	x28, 12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>
    1364:	ldr	x0, [x28, #24]
    1368:	add	x1, x28, #0x28
    136c:	cmp	x0, x1
    1370:	b.eq	1378 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xcb0>  // b.none
    1374:	bl	0 <free>
    1378:	mov	x0, x28
    137c:	mov	x1, #0x68                  	// #104
    1380:	bl	0 <_ZdlPvm>
    1384:	b	12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>
    1388:	mov	w2, w1
    138c:	lsr	w0, w1, #1
    1390:	orr	x0, x0, x2
    1394:	mov	w1, #0x40                  	// #64
    1398:	orr	x0, x0, x0, lsr #2
    139c:	orr	x0, x0, x0, lsr #4
    13a0:	orr	x0, x0, x0, lsr #8
    13a4:	orr	x0, x0, x0, lsr #16
    13a8:	add	x0, x0, #0x1
    13ac:	cmp	w0, w1
    13b0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    13b4:	str	w0, [x19, #56]
    13b8:	ubfiz	x0, x0, #4, #32
    13bc:	bl	0 <_Znwm>
    13c0:	ldr	w1, [x19, #56]
    13c4:	str	x0, [x19, #40]
    13c8:	sub	w2, w1, #0x1
    13cc:	and	w2, w2, w1
    13d0:	cbz	x24, 1bbc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14f4>
    13d4:	stp	x27, x28, [sp, #80]
    13d8:	ubfiz	x25, x25, #4, #32
    13dc:	add	x28, x24, x25
    13e0:	str	xzr, [x19, #48]
    13e4:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    13e8:	ubfiz	x1, x1, #4, #32
    13ec:	mov	w3, w23
    13f0:	add	x1, x0, x1
    13f4:	cmp	x0, x1
    13f8:	b.eq	140c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd44>  // b.none
    13fc:	nop
    1400:	str	w3, [x0], #16
    1404:	cmp	x1, x0
    1408:	b.ne	1400 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd38>  // b.any
    140c:	mov	x23, x24
    1410:	mov	w27, #0x25                  	// #37
    1414:	b	1424 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd5c>
    1418:	add	x23, x23, #0x10
    141c:	cmp	x28, x23
    1420:	b.eq	155c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe94>  // b.none
    1424:	ldr	w0, [x23]
    1428:	cmn	w0, #0x3
    142c:	b.hi	1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>  // b.pmore
    1430:	ldr	w1, [x19, #56]
    1434:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    1438:	mul	w2, w0, w27
    143c:	sub	w1, w1, #0x1
    1440:	ldr	x4, [x19, #40]
    1444:	and	w3, w2, w1
    1448:	and	w2, w2, w1
    144c:	lsl	x3, x3, #4
    1450:	add	x5, x4, x3
    1454:	ldr	w3, [x4, x3]
    1458:	cmp	w0, w3
    145c:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1460:	mov	w7, #0x1                   	// #1
    1464:	mov	x6, #0x0                   	// #0
    1468:	cmn	w3, #0x1
    146c:	b.ne	1f20 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1858>  // b.any
    1470:	cmp	x6, #0x0
    1474:	csel	x6, x6, x5, ne  // ne = any
    1478:	ldr	x1, [x23, #8]
    147c:	str	w0, [x6]
    1480:	ldr	w0, [x19, #48]
    1484:	str	xzr, [x23, #8]
    1488:	str	x1, [x6, #8]
    148c:	add	w0, w0, #0x1
    1490:	ldr	x1, [x23, #8]
    1494:	str	w0, [x19, #48]
    1498:	cbz	x1, 1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>
    149c:	ldr	x0, [x1, #24]
    14a0:	add	x2, x1, #0x28
    14a4:	cmp	x0, x2
    14a8:	b.eq	14b8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xdf0>  // b.none
    14ac:	str	x1, [sp, #96]
    14b0:	bl	0 <free>
    14b4:	ldr	x1, [sp, #96]
    14b8:	mov	x0, x1
    14bc:	mov	x1, #0x68                  	// #104
    14c0:	bl	0 <_ZdlPvm>
    14c4:	b	1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>
    14c8:	mov	x1, x25
    14cc:	mov	x0, x24
    14d0:	bl	0 <_ZdlPvm>
    14d4:	ldp	x27, x28, [sp, #80]
    14d8:	ldr	w1, [x19, #56]
    14dc:	ldr	x0, [x19, #40]
    14e0:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    14e4:	cmn	w22, #0x3
    14e8:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    14ec:	mov	w2, #0x25                  	// #37
    14f0:	sub	w1, w1, #0x1
    14f4:	ldr	w5, [x19, #48]
    14f8:	mul	w2, w22, w2
    14fc:	add	w5, w5, #0x1
    1500:	and	w3, w2, w1
    1504:	and	w2, w2, w1
    1508:	lsl	x3, x3, #4
    150c:	add	x4, x0, x3
    1510:	ldr	w3, [x0, x3]
    1514:	cmp	w22, w3
    1518:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    151c:	mov	w7, #0x1                   	// #1
    1520:	mov	x6, #0x0                   	// #0
    1524:	cmn	w3, #0x1
    1528:	b.ne	2080 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x19b8>  // b.any
    152c:	cmp	x6, #0x0
    1530:	csel	x4, x4, x6, eq  // eq = none
    1534:	b	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>
    1538:	stp	x27, x28, [sp, #80]
    153c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1540:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1544:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1548:	add	x3, x3, #0x0
    154c:	add	x1, x1, #0x0
    1550:	add	x0, x0, #0x0
    1554:	mov	w2, #0x22f                 	// #559
    1558:	bl	0 <__assert_fail>
    155c:	mov	x1, x25
    1560:	mov	x0, x24
    1564:	bl	0 <_ZdlPvm>
    1568:	ldp	x27, x28, [sp, #80]
    156c:	ldr	w1, [x19, #56]
    1570:	ldr	x0, [x19, #40]
    1574:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    1578:	sub	w1, w1, #0x1
    157c:	ldr	w5, [x19, #48]
    1580:	and	w3, w26, w1
    1584:	and	w2, w26, w1
    1588:	add	w5, w5, #0x1
    158c:	lsl	x3, x3, #4
    1590:	add	x4, x0, x3
    1594:	ldr	w3, [x0, x3]
    1598:	cmp	w3, w22
    159c:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    15a0:	mov	w7, #0x1                   	// #1
    15a4:	mov	x6, #0x0                   	// #0
    15a8:	cmn	w3, #0x1
    15ac:	b.eq	152c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe64>  // b.none
    15b0:	add	w2, w7, w2
    15b4:	cmp	x6, #0x0
    15b8:	and	w8, w1, w2
    15bc:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    15c0:	csel	x6, x6, x4, ne  // ne = any
    15c4:	add	w7, w7, #0x1
    15c8:	lsl	x3, x8, #4
    15cc:	and	w2, w1, w2
    15d0:	add	x4, x0, x8, lsl #4
    15d4:	ldr	w3, [x0, x3]
    15d8:	cmp	w22, w3
    15dc:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    15e0:	b	15a8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xee0>
    15e4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    15e8:	add	x0, x0, #0x0
    15ec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    15f0:	tst	w0, #0xff
    15f4:	b.eq	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>  // b.none
    15f8:	bl	0 <_ZN4llvm4dbgsEv>
    15fc:	mov	x2, x0
    1600:	ldp	x1, x3, [x0, #16]
    1604:	sub	x1, x1, x3
    1608:	cmp	x1, #0x15
    160c:	b.ls	1dcc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1704>  // b.plast
    1610:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1614:	add	x4, x4, #0x0
    1618:	ldp	x0, x1, [x4]
    161c:	stp	x0, x1, [x3]
    1620:	ldur	x0, [x4, #14]
    1624:	stur	x0, [x3, #14]
    1628:	ldr	x0, [x2, #24]
    162c:	add	x0, x0, #0x16
    1630:	str	x0, [x2, #24]
    1634:	mov	w1, w20
    1638:	mov	x0, x2
    163c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1640:	mov	x1, x0
    1644:	ldp	x2, x3, [x0, #16]
    1648:	sub	x2, x2, x3
    164c:	cmp	x2, #0x6
    1650:	b.ls	1db4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16ec>  // b.plast
    1654:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1658:	add	x0, x0, #0x0
    165c:	ldr	w2, [x0]
    1660:	ldur	w0, [x0, #3]
    1664:	str	w2, [x3]
    1668:	stur	w0, [x3, #3]
    166c:	ldr	x0, [x1, #24]
    1670:	add	x0, x0, #0x7
    1674:	str	x0, [x1, #24]
    1678:	mov	x0, x1
    167c:	mov	w1, w22
    1680:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1684:	mov	x1, x0
    1688:	ldp	x2, x3, [x0, #16]
    168c:	sub	x2, x2, x3
    1690:	cmp	x2, #0x1
    1694:	b.ls	1de4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x171c>  // b.plast
    1698:	mov	w0, #0xa29                 	// #2601
    169c:	strh	w0, [x3]
    16a0:	ldr	x0, [x1, #24]
    16a4:	add	x0, x0, #0x2
    16a8:	str	x0, [x1, #24]
    16ac:	b	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>
    16b0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    16b4:	add	x0, x0, #0x0
    16b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    16bc:	tst	w0, #0xff
    16c0:	b.eq	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>  // b.none
    16c4:	bl	0 <_ZN4llvm4dbgsEv>
    16c8:	mov	x2, x0
    16cc:	ldp	x1, x3, [x0, #16]
    16d0:	sub	x1, x1, x3
    16d4:	cmp	x1, #0x15
    16d8:	b.ls	1d9c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16d4>  // b.plast
    16dc:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    16e0:	add	x4, x4, #0x0
    16e4:	ldp	x0, x1, [x4]
    16e8:	stp	x0, x1, [x3]
    16ec:	ldur	x0, [x4, #14]
    16f0:	stur	x0, [x3, #14]
    16f4:	ldr	x0, [x2, #24]
    16f8:	add	x0, x0, #0x16
    16fc:	str	x0, [x2, #24]
    1700:	ldr	w1, [x19, #76]
    1704:	mov	x0, x2
    1708:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    170c:	mov	x1, x0
    1710:	ldp	x2, x3, [x0, #16]
    1714:	sub	x2, x2, x3
    1718:	cmp	x2, #0x6
    171c:	b.ls	1d84 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16bc>  // b.plast
    1720:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1724:	add	x0, x0, #0x0
    1728:	ldr	w2, [x0]
    172c:	ldur	w0, [x0, #3]
    1730:	str	w2, [x3]
    1734:	stur	w0, [x3, #3]
    1738:	ldr	x0, [x1, #24]
    173c:	add	x0, x0, #0x7
    1740:	str	x0, [x1, #24]
    1744:	mov	x0, x1
    1748:	mov	w1, w22
    174c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1750:	mov	x1, x0
    1754:	ldp	x2, x3, [x0, #16]
    1758:	sub	x2, x2, x3
    175c:	cmp	x2, #0x1
    1760:	b.ls	1d70 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16a8>  // b.plast
    1764:	mov	w0, #0xa29                 	// #2601
    1768:	strh	w0, [x3]
    176c:	ldr	x0, [x1, #24]
    1770:	add	x0, x0, #0x2
    1774:	str	x0, [x1, #24]
    1778:	b	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>
    177c:	add	x1, x20, #0x28
    1780:	add	x0, x20, #0x18
    1784:	mov	x3, #0x8                   	// #8
    1788:	mov	x2, #0x0                   	// #0
    178c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1790:	ldp	w0, w1, [x20, #32]
    1794:	b	af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x428>
    1798:	ldr	w1, [x23, #8]
    179c:	cmp	w0, w1
    17a0:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    17a4:	ldr	w0, [x23, #4]
    17a8:	ldr	x2, [x20, #96]
    17ac:	add	w0, w0, #0x1
    17b0:	str	w0, [x23, #4]
    17b4:	ldr	w1, [x23, #80]
    17b8:	ldr	w0, [x2, #788]
    17bc:	cmp	w0, w1
    17c0:	b.ls	1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>  // b.plast
    17c4:	ldr	w1, [x20, #88]
    17c8:	str	w1, [x23, #72]
    17cc:	str	w0, [x23, #80]
    17d0:	b	1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>
    17d4:	mov	w4, #0x1                   	// #1
    17d8:	cmn	w3, #0x1
    17dc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    17e0:	add	w1, w4, w1
    17e4:	add	w6, w4, #0x1
    17e8:	and	w3, w2, w1
    17ec:	and	w1, w2, w1
    17f0:	lsl	x3, x3, #4
    17f4:	add	x4, x5, x3
    17f8:	ldr	w3, [x5, x3]
    17fc:	cmp	w22, w3
    1800:	b.eq	9a4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2dc>  // b.none
    1804:	mov	w4, w6
    1808:	b	17d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1110>
    180c:	mov	w4, #0x1                   	// #1
    1810:	cmn	w2, #0x1
    1814:	b.ne	1e94 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17cc>  // b.any
    1818:	mov	x4, x3
    181c:	b	aa0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3d8>
    1820:	mov	w5, #0x1                   	// #1
    1824:	cmn	w1, #0x1
    1828:	b.ne	1ec0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17f8>  // b.any
    182c:	mov	x5, x4
    1830:	b	81c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>
    1834:	mov	w5, #0x1                   	// #1
    1838:	cmn	w2, #0x1
    183c:	b.ne	1f54 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x188c>  // b.any
    1840:	mov	x5, x6
    1844:	b	ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4e0>
    1848:	ldr	w0, [x24, #8]
    184c:	cmp	w1, w0
    1850:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1854:	ldr	w0, [x24, #4]
    1858:	ldr	x2, [x20, #96]
    185c:	add	w0, w0, #0x1
    1860:	str	w0, [x24, #4]
    1864:	ldr	w1, [x24, #80]
    1868:	ldr	w0, [x2, #788]
    186c:	cmp	w0, w1
    1870:	b.ls	100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>  // b.plast
    1874:	ldr	w1, [x20, #88]
    1878:	str	w1, [x24, #72]
    187c:	str	w0, [x24, #80]
    1880:	b	100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>
    1884:	ldr	w0, [x24, #8]
    1888:	cmp	w1, w0
    188c:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1890:	ldr	w0, [x24, #4]
    1894:	ldr	x2, [x25, #96]
    1898:	add	w0, w0, #0x1
    189c:	str	w0, [x24, #4]
    18a0:	ldr	w1, [x24, #80]
    18a4:	ldr	w0, [x2, #788]
    18a8:	cmp	w0, w1
    18ac:	b.ls	f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>  // b.plast
    18b0:	ldr	w1, [x25, #88]
    18b4:	str	w1, [x24, #72]
    18b8:	str	w0, [x24, #80]
    18bc:	b	f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>
    18c0:	add	x1, x20, #0x28
    18c4:	add	x0, x20, #0x18
    18c8:	mov	x3, #0x8                   	// #8
    18cc:	mov	x2, #0x0                   	// #0
    18d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    18d4:	ldp	w0, w1, [x20, #32]
    18d8:	b	114c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa84>
    18dc:	ldr	x1, [x19, #32]
    18e0:	mov	w0, #0x0                   	// #0
    18e4:	add	x1, x1, #0x1
    18e8:	str	x1, [x19, #32]
    18ec:	sub	w0, w0, #0x1
    18f0:	mov	w1, #0x40                  	// #64
    18f4:	orr	x0, x0, x0, lsr #1
    18f8:	orr	x0, x0, x0, lsr #2
    18fc:	orr	x0, x0, x0, lsr #4
    1900:	orr	x0, x0, x0, lsr #8
    1904:	orr	x0, x0, x0, lsr #16
    1908:	add	x0, x0, #0x1
    190c:	cmp	w0, w1
    1910:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1914:	str	w0, [x19, #56]
    1918:	ubfiz	x0, x0, #4, #32
    191c:	bl	0 <_Znwm>
    1920:	ldr	w1, [x19, #56]
    1924:	str	x0, [x19, #40]
    1928:	sub	w2, w1, #0x1
    192c:	and	w2, w2, w1
    1930:	cbz	x24, 1e30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1768>
    1934:	stp	x27, x28, [sp, #80]
    1938:	ubfiz	x3, x25, #4, #32
    193c:	add	x28, x24, x3
    1940:	str	xzr, [x19, #48]
    1944:	str	x3, [sp, #96]
    1948:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    194c:	ubfiz	x1, x1, #4, #32
    1950:	mov	w2, #0xffffffff            	// #-1
    1954:	add	x1, x0, x1
    1958:	cmp	x0, x1
    195c:	b.eq	196c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12a4>  // b.none
    1960:	str	w2, [x0], #16
    1964:	cmp	x1, x0
    1968:	b.ne	1960 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1298>  // b.any
    196c:	cmp	x24, x28
    1970:	mov	x25, x24
    1974:	mov	w26, #0x25                  	// #37
    1978:	b.ne	198c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12c4>  // b.any
    197c:	b	1a28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1360>
    1980:	add	x25, x25, #0x10
    1984:	cmp	x28, x25
    1988:	b.eq	1a28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1360>  // b.none
    198c:	ldr	w0, [x25]
    1990:	cmn	w0, #0x3
    1994:	b.hi	1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>  // b.pmore
    1998:	ldr	w1, [x19, #56]
    199c:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    19a0:	mul	w2, w0, w26
    19a4:	sub	w1, w1, #0x1
    19a8:	ldr	x4, [x19, #40]
    19ac:	and	w3, w2, w1
    19b0:	and	w2, w2, w1
    19b4:	lsl	x3, x3, #4
    19b8:	add	x6, x4, x3
    19bc:	ldr	w3, [x4, x3]
    19c0:	cmp	w0, w3
    19c4:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    19c8:	mov	w8, #0x1                   	// #1
    19cc:	mov	x7, #0x0                   	// #0
    19d0:	cmn	w3, #0x1
    19d4:	b.ne	2004 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x193c>  // b.any
    19d8:	cmp	x7, #0x0
    19dc:	csel	x7, x7, x6, ne  // ne = any
    19e0:	ldr	x1, [x25, #8]
    19e4:	str	w0, [x7]
    19e8:	ldr	w0, [x19, #48]
    19ec:	str	xzr, [x25, #8]
    19f0:	str	x1, [x7, #8]
    19f4:	add	w0, w0, #0x1
    19f8:	ldr	x27, [x25, #8]
    19fc:	str	w0, [x19, #48]
    1a00:	cbz	x27, 1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>
    1a04:	ldr	x0, [x27, #24]
    1a08:	add	x1, x27, #0x28
    1a0c:	cmp	x0, x1
    1a10:	b.eq	1a18 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1350>  // b.none
    1a14:	bl	0 <free>
    1a18:	mov	x0, x27
    1a1c:	mov	x1, #0x68                  	// #104
    1a20:	bl	0 <_ZdlPvm>
    1a24:	b	1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>
    1a28:	ldr	x1, [sp, #96]
    1a2c:	mov	x0, x24
    1a30:	bl	0 <_ZdlPvm>
    1a34:	ldp	x27, x28, [sp, #80]
    1a38:	ldr	w1, [x19, #56]
    1a3c:	ldr	x0, [x19, #40]
    1a40:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    1a44:	cmn	w22, #0x3
    1a48:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    1a4c:	mov	w2, #0x25                  	// #37
    1a50:	sub	w1, w1, #0x1
    1a54:	ldr	w5, [x19, #48]
    1a58:	mul	w2, w22, w2
    1a5c:	add	w5, w5, #0x1
    1a60:	and	w3, w2, w1
    1a64:	and	w2, w2, w1
    1a68:	lsl	x3, x3, #4
    1a6c:	add	x4, x0, x3
    1a70:	ldr	w3, [x0, x3]
    1a74:	cmp	w22, w3
    1a78:	b.eq	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>  // b.none
    1a7c:	mov	w7, #0x1                   	// #1
    1a80:	mov	x6, #0x0                   	// #0
    1a84:	cmn	w3, #0x1
    1a88:	b.ne	20e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a20>  // b.any
    1a8c:	cmp	x6, #0x0
    1a90:	csel	x4, x4, x6, eq  // eq = none
    1a94:	b	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>
    1a98:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1a9c:	add	x1, x1, #0x0
    1aa0:	mov	x2, #0x7                   	// #7
    1aa4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1aa8:	mov	x1, x0
    1aac:	b	f04 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x83c>
    1ab0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1ab4:	mov	x2, #0x2                   	// #2
    1ab8:	add	x1, x1, #0x0
    1abc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ac0:	b	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>
    1ac4:	mov	x2, #0x16                  	// #22
    1ac8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1acc:	add	x1, x1, #0x0
    1ad0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ad4:	mov	x2, x0
    1ad8:	b	ec0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x7f8>
    1adc:	ldr	x1, [sp, #104]
    1ae0:	mov	x0, x24
    1ae4:	bl	0 <_ZdlPvm>
    1ae8:	ldr	w1, [x19, #56]
    1aec:	ldr	x0, [x19, #40]
    1af0:	cbz	w1, 153c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe74>
    1af4:	sub	w1, w1, #0x1
    1af8:	ldr	w5, [x19, #48]
    1afc:	and	w3, w26, w1
    1b00:	and	w2, w26, w1
    1b04:	add	w5, w5, #0x1
    1b08:	lsl	x3, x3, #4
    1b0c:	add	x4, x0, x3
    1b10:	ldr	w3, [x0, x3]
    1b14:	cmp	w22, w3
    1b18:	b.eq	d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x640>  // b.none
    1b1c:	mov	w7, #0x1                   	// #1
    1b20:	mov	x6, #0x0                   	// #0
    1b24:	cmn	w3, #0x1
    1b28:	b.ne	20b4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x19ec>  // b.any
    1b2c:	cmp	x6, #0x0
    1b30:	csel	x4, x4, x6, eq  // eq = none
    1b34:	ldp	x27, x28, [sp, #80]
    1b38:	b	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>
    1b3c:	mov	w4, #0x1                   	// #1
    1b40:	cmn	w2, #0x1
    1b44:	b.ne	1f80 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18b8>  // b.any
    1b48:	mov	x4, x3
    1b4c:	b	10fc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa34>
    1b50:	add	x1, x25, #0x28
    1b54:	mov	x2, #0x0                   	// #0
    1b58:	add	x0, x25, #0x18
    1b5c:	mov	x3, #0x8                   	// #8
    1b60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1b64:	ldp	w1, w2, [x25, #32]
    1b68:	b	f98 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8d0>
    1b6c:	add	x1, x20, #0x28
    1b70:	mov	x2, #0x0                   	// #0
    1b74:	add	x0, x20, #0x18
    1b78:	mov	x3, #0x8                   	// #8
    1b7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1b80:	ldp	w1, w2, [x20, #32]
    1b84:	b	1018 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x950>
    1b88:	str	xzr, [x19, #48]
    1b8c:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1b90:	ubfiz	x2, x1, #4, #32
    1b94:	add	x2, x0, x2
    1b98:	cmp	x0, x2
    1b9c:	b.eq	14e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe18>  // b.none
    1ba0:	mov	x1, x0
    1ba4:	mov	w3, #0xffffffff            	// #-1
    1ba8:	str	w3, [x1], #16
    1bac:	cmp	x2, x1
    1bb0:	b.ne	1ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14e0>  // b.any
    1bb4:	ldr	w1, [x19, #56]
    1bb8:	b	14e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe18>
    1bbc:	str	xzr, [x19, #48]
    1bc0:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1bc4:	ubfiz	x2, x1, #4, #32
    1bc8:	add	x2, x0, x2
    1bcc:	cmp	x0, x2
    1bd0:	b.eq	1574 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xeac>  // b.none
    1bd4:	mov	w3, w23
    1bd8:	mov	x1, x0
    1bdc:	nop
    1be0:	str	w3, [x1], #16
    1be4:	cmp	x2, x1
    1be8:	b.ne	1be0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1518>  // b.any
    1bec:	ldr	w1, [x19, #56]
    1bf0:	b	1574 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xeac>
    1bf4:	mov	w4, #0x1                   	// #1
    1bf8:	cmn	w3, #0x1
    1bfc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1c00:	add	w2, w4, w2
    1c04:	add	w7, w4, #0x1
    1c08:	and	w4, w6, w2
    1c0c:	and	w2, w6, w2
    1c10:	lsl	x3, x4, #4
    1c14:	add	x4, x5, x4, lsl #4
    1c18:	ldr	w3, [x5, x3]
    1c1c:	cmp	w0, w3
    1c20:	b.eq	a6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3a4>  // b.none
    1c24:	mov	w4, w7
    1c28:	b	1bf8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1530>
    1c2c:	add	w0, w4, w0
    1c30:	add	w6, w4, #0x1
    1c34:	and	w1, w2, w0
    1c38:	and	w0, w2, w0
    1c3c:	lsl	x1, x1, #4
    1c40:	add	x4, x5, x1
    1c44:	ldr	w1, [x5, x1]
    1c48:	cmp	w22, w1
    1c4c:	b.eq	9d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x310>  // b.none
    1c50:	mov	w4, w6
    1c54:	b	1044 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x97c>
    1c58:	mov	w5, #0x1                   	// #1
    1c5c:	cmn	w4, #0x1
    1c60:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1c64:	add	w1, w1, w5
    1c68:	add	w6, w5, #0x1
    1c6c:	and	w5, w3, w1
    1c70:	and	w1, w3, w1
    1c74:	lsl	x4, x5, #4
    1c78:	add	x5, x2, x5, lsl #4
    1c7c:	ldr	w4, [x2, x4]
    1c80:	cmp	w22, w4
    1c84:	b.eq	7e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x120>  // b.none
    1c88:	mov	w5, w6
    1c8c:	b	1c5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1594>
    1c90:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1c94:	mov	x2, #0x2                   	// #2
    1c98:	add	x1, x1, #0x0
    1c9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ca0:	b	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>
    1ca4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1ca8:	add	x1, x1, #0x0
    1cac:	mov	x2, #0x7                   	// #7
    1cb0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1cb4:	mov	x1, x0
    1cb8:	b	1208 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb40>
    1cbc:	mov	x2, #0x16                  	// #22
    1cc0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1cc4:	add	x1, x1, #0x0
    1cc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ccc:	mov	x2, x0
    1cd0:	b	11c4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xafc>
    1cd4:	mov	w6, #0x1                   	// #1
    1cd8:	cmn	w5, #0x1
    1cdc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1ce0:	add	w2, w6, w2
    1ce4:	add	w6, w6, #0x1
    1ce8:	and	w7, w4, w2
    1cec:	and	w2, w4, w2
    1cf0:	lsl	x5, x7, #4
    1cf4:	add	x7, x3, x7, lsl #4
    1cf8:	ldr	w5, [x3, x5]
    1cfc:	cmp	w0, w5
    1d00:	b.eq	b74 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4ac>  // b.none
    1d04:	b	1cd8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1610>
    1d08:	mov	w8, #0x1                   	// #1
    1d0c:	mov	x7, #0x0                   	// #0
    1d10:	cmn	w3, #0x1
    1d14:	b.ne	1fd0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1908>  // b.any
    1d18:	cmp	x7, #0x0
    1d1c:	csel	x7, x7, x6, ne  // ne = any
    1d20:	ldr	x1, [x25, #8]
    1d24:	str	w0, [x7]
    1d28:	ldr	w0, [x19, #48]
    1d2c:	str	xzr, [x25, #8]
    1d30:	str	x1, [x7, #8]
    1d34:	add	w0, w0, #0x1
    1d38:	ldr	x1, [x25, #8]
    1d3c:	str	w0, [x19, #48]
    1d40:	cbz	x1, dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>
    1d44:	ldr	x0, [x1, #24]
    1d48:	add	x2, x1, #0x28
    1d4c:	cmp	x0, x2
    1d50:	b.eq	1d60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1698>  // b.none
    1d54:	str	x1, [sp, #96]
    1d58:	bl	0 <free>
    1d5c:	ldr	x1, [sp, #96]
    1d60:	mov	x0, x1
    1d64:	mov	x1, #0x68                  	// #104
    1d68:	bl	0 <_ZdlPvm>
    1d6c:	b	dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>
    1d70:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1d74:	mov	x2, #0x2                   	// #2
    1d78:	add	x1, x1, #0x0
    1d7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d80:	b	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>
    1d84:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1d88:	add	x1, x1, #0x0
    1d8c:	mov	x2, #0x7                   	// #7
    1d90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d94:	mov	x1, x0
    1d98:	b	1744 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x107c>
    1d9c:	mov	x2, #0x16                  	// #22
    1da0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1da4:	add	x1, x1, #0x0
    1da8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1dac:	mov	x2, x0
    1db0:	b	1700 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1038>
    1db4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1db8:	add	x1, x1, #0x0
    1dbc:	mov	x2, #0x7                   	// #7
    1dc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1dc4:	mov	x1, x0
    1dc8:	b	1678 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xfb0>
    1dcc:	mov	x2, #0x16                  	// #22
    1dd0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1dd4:	add	x1, x1, #0x0
    1dd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ddc:	mov	x2, x0
    1de0:	b	1634 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xf6c>
    1de4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1de8:	mov	x2, #0x2                   	// #2
    1dec:	add	x1, x1, #0x0
    1df0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1df4:	b	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>
    1df8:	mov	w4, #0x1                   	// #1
    1dfc:	cmn	w3, #0x1
    1e00:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1e04:	add	w2, w4, w2
    1e08:	add	w7, w4, #0x1
    1e0c:	and	w4, w6, w2
    1e10:	and	w2, w6, w2
    1e14:	lsl	x3, x4, #4
    1e18:	add	x4, x5, x4, lsl #4
    1e1c:	ldr	w3, [x5, x3]
    1e20:	cmp	w0, w3
    1e24:	b.eq	10c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa00>  // b.none
    1e28:	mov	w4, w7
    1e2c:	b	1dfc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1734>
    1e30:	str	xzr, [x19, #48]
    1e34:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1e38:	ubfiz	x2, x1, #4, #32
    1e3c:	add	x2, x0, x2
    1e40:	cmp	x0, x2
    1e44:	b.eq	1a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1378>  // b.none
    1e48:	mov	x1, x0
    1e4c:	mov	w3, #0xffffffff            	// #-1
    1e50:	str	w3, [x1], #16
    1e54:	cmp	x2, x1
    1e58:	b.ne	1e50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1788>  // b.any
    1e5c:	ldr	w1, [x19, #56]
    1e60:	b	1a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1378>
    1e64:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    1e68:	ubfiz	x2, x1, #4, #32
    1e6c:	add	x2, x0, x2
    1e70:	cmp	x0, x2
    1e74:	b.eq	1af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1428>  // b.none
    1e78:	mov	w3, w27
    1e7c:	mov	x1, x0
    1e80:	str	w3, [x1], #16
    1e84:	cmp	x2, x1
    1e88:	b.ne	1e80 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17b8>  // b.any
    1e8c:	ldr	w1, [x19, #56]
    1e90:	b	1af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1428>
    1e94:	add	w1, w4, w1
    1e98:	add	w7, w4, #0x1
    1e9c:	and	w2, w6, w1
    1ea0:	and	w1, w6, w1
    1ea4:	lsl	x2, x2, #4
    1ea8:	add	x4, x5, x2
    1eac:	ldr	w2, [x5, x2]
    1eb0:	cmp	w0, w2
    1eb4:	b.eq	aa0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3d8>  // b.none
    1eb8:	mov	w4, w7
    1ebc:	b	1810 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1148>
    1ec0:	add	w0, w5, w0
    1ec4:	add	w6, w5, #0x1
    1ec8:	and	w1, w3, w0
    1ecc:	and	w0, w3, w0
    1ed0:	lsl	x1, x1, #4
    1ed4:	add	x5, x2, x1
    1ed8:	ldr	w1, [x2, x1]
    1edc:	cmp	w22, w1
    1ee0:	b.eq	81c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>  // b.none
    1ee4:	mov	w5, w6
    1ee8:	b	1824 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x115c>
    1eec:	add	w2, w2, w7
    1ef0:	cmp	x6, #0x0
    1ef4:	and	w8, w1, w2
    1ef8:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1efc:	csel	x6, x6, x5, ne  // ne = any
    1f00:	add	w7, w7, #0x1
    1f04:	lsl	x3, x8, #4
    1f08:	and	w2, w1, w2
    1f0c:	add	x5, x4, x8, lsl #4
    1f10:	ldr	w3, [x4, x3]
    1f14:	cmp	w0, w3
    1f18:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1f1c:	b	1330 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc68>
    1f20:	add	w2, w7, w2
    1f24:	cmp	x6, #0x0
    1f28:	and	w8, w1, w2
    1f2c:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1f30:	csel	x6, x6, x5, ne  // ne = any
    1f34:	add	w7, w7, #0x1
    1f38:	lsl	x3, x8, #4
    1f3c:	and	w2, w1, w2
    1f40:	add	x5, x4, x8, lsl #4
    1f44:	ldr	w3, [x4, x3]
    1f48:	cmp	w0, w3
    1f4c:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1f50:	b	1468 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xda0>
    1f54:	add	w1, w5, w1
    1f58:	add	w7, w5, #0x1
    1f5c:	and	w5, w4, w1
    1f60:	and	w1, w4, w1
    1f64:	lsl	x2, x5, #4
    1f68:	add	x5, x3, x5, lsl #4
    1f6c:	ldr	w2, [x3, x2]
    1f70:	cmp	w0, w2
    1f74:	b.eq	ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4e0>  // b.none
    1f78:	mov	w5, w7
    1f7c:	b	1838 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1170>
    1f80:	add	w1, w4, w1
    1f84:	add	w7, w4, #0x1
    1f88:	and	w4, w6, w1
    1f8c:	and	w1, w6, w1
    1f90:	lsl	x2, x4, #4
    1f94:	add	x4, x5, x4, lsl #4
    1f98:	ldr	w2, [x5, x2]
    1f9c:	cmp	w0, w2
    1fa0:	b.eq	10fc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa34>  // b.none
    1fa4:	mov	w4, w7
    1fa8:	b	1b40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1478>
    1fac:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb8:	add	x3, x3, #0x0
    1fbc:	add	x1, x1, #0x0
    1fc0:	add	x0, x0, #0x0
    1fc4:	mov	w2, #0x9c                  	// #156
    1fc8:	stp	x27, x28, [sp, #80]
    1fcc:	bl	0 <__assert_fail>
    1fd0:	add	w2, w8, w2
    1fd4:	cmp	x7, #0x0
    1fd8:	and	w9, w1, w2
    1fdc:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1fe0:	csel	x7, x7, x6, ne  // ne = any
    1fe4:	add	w8, w8, #0x1
    1fe8:	lsl	x3, x9, #4
    1fec:	and	w2, w1, w2
    1ff0:	add	x6, x4, x9, lsl #4
    1ff4:	ldr	w3, [x4, x3]
    1ff8:	cmp	w0, w3
    1ffc:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    2000:	b	1d10 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1648>
    2004:	add	w2, w2, w8
    2008:	cmp	x7, #0x0
    200c:	and	w9, w1, w2
    2010:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    2014:	csel	x7, x7, x6, ne  // ne = any
    2018:	add	w8, w8, #0x1
    201c:	lsl	x3, x9, #4
    2020:	and	w2, w1, w2
    2024:	add	x6, x4, x9, lsl #4
    2028:	ldr	w3, [x4, x3]
    202c:	cmp	w0, w3
    2030:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    2034:	b	19d0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1308>
    2038:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    203c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2040:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2044:	add	x3, x3, #0x0
    2048:	add	x1, x1, #0x0
    204c:	add	x0, x0, #0x0
    2050:	mov	w2, #0x43                  	// #67
    2054:	stp	x27, x28, [sp, #80]
    2058:	bl	0 <__assert_fail>
    205c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2060:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2064:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2068:	add	x3, x3, #0x0
    206c:	add	x1, x1, #0x0
    2070:	add	x0, x0, #0x0
    2074:	mov	w2, #0x52                  	// #82
    2078:	stp	x27, x28, [sp, #80]
    207c:	bl	0 <__assert_fail>
    2080:	add	w2, w2, w7
    2084:	cmp	x6, #0x0
    2088:	and	w8, w1, w2
    208c:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    2090:	csel	x6, x6, x4, ne  // ne = any
    2094:	add	w7, w7, #0x1
    2098:	lsl	x3, x8, #4
    209c:	and	w2, w1, w2
    20a0:	add	x4, x0, x8, lsl #4
    20a4:	ldr	w3, [x0, x3]
    20a8:	cmp	w22, w3
    20ac:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    20b0:	b	1524 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe5c>
    20b4:	add	w2, w7, w2
    20b8:	cmp	x6, #0x0
    20bc:	and	w8, w1, w2
    20c0:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    20c4:	csel	x6, x6, x4, ne  // ne = any
    20c8:	add	w7, w7, #0x1
    20cc:	lsl	x3, x8, #4
    20d0:	and	w2, w1, w2
    20d4:	add	x4, x0, x8, lsl #4
    20d8:	ldr	w3, [x0, x3]
    20dc:	cmp	w22, w3
    20e0:	b.eq	d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x640>  // b.none
    20e4:	b	1b24 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x145c>
    20e8:	add	w2, w7, w2
    20ec:	cmp	x6, #0x0
    20f0:	and	w8, w1, w2
    20f4:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    20f8:	csel	x6, x6, x4, ne  // ne = any
    20fc:	add	w7, w7, #0x1
    2100:	lsl	x3, x8, #4
    2104:	and	w2, w1, w2
    2108:	add	x4, x0, x8, lsl #4
    210c:	ldr	w3, [x0, x3]
    2110:	cmp	w22, w3
    2114:	b.eq	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>  // b.none
    2118:	b	1a84 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13bc>
    211c:	stp	x27, x28, [sp, #80]
    2120:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2124:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2128:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    212c:	add	x3, x3, #0x0
    2130:	add	x1, x1, #0x0
    2134:	add	x0, x0, #0x0
    2138:	mov	w2, #0x15b                 	// #347
    213c:	bl	0 <__assert_fail>
    2140:	ldp	x27, x28, [sp, #80]
    2144:	b	18ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1224>
    2148:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    214c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2150:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2154:	add	x3, x3, #0x0
    2158:	add	x1, x1, #0x0
    215c:	add	x0, x0, #0x0
    2160:	mov	w2, #0x68                  	// #104
    2164:	stp	x27, x28, [sp, #80]
    2168:	bl	0 <__assert_fail>
    216c:	mov	x0, #0x0                   	// #0
    2170:	str	wzr, [x0]
    2174:	brk	#0x3e8

0000000000002178 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb>:
    2178:	adrp	x5, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    217c:	mov	w7, #0x1                   	// #1
    2180:	ldr	x6, [x1, #64]
    2184:	stp	w2, w3, [x0, #8]
    2188:	ldr	x5, [x5]
    218c:	str	xzr, [x0, #16]
    2190:	strb	w4, [x0, #24]
    2194:	add	x5, x5, #0x10
    2198:	str	x5, [x0]
    219c:	stp	xzr, xzr, [x0, #32]
    21a0:	str	xzr, [x0, #48]
    21a4:	str	wzr, [x0, #56]
    21a8:	str	w7, [x0, #64]
    21ac:	cbz	x6, 21d8 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x60>
    21b0:	stp	x29, x30, [sp, #-16]!
    21b4:	mov	x29, sp
    21b8:	cbnz	w2, 21c4 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x4c>
    21bc:	ldr	w2, [x6, #36]
    21c0:	cbnz	w2, 21dc <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x64>
    21c4:	cbnz	w3, 21d0 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x58>
    21c8:	ldr	w2, [x6, #40]
    21cc:	cbnz	w2, 2214 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x9c>
    21d0:	ldp	x29, x30, [sp], #16
    21d4:	ret
    21d8:	ret
    21dc:	ldr	x4, [x1, #40]
    21e0:	cbz	x4, 224c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xd4>
    21e4:	ldr	w4, [x1, #48]
    21e8:	cmp	w2, w4
    21ec:	b.cs	226c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xf4>  // b.hs, b.nlast
    21f0:	ldr	x4, [x1, #32]
    21f4:	ubfiz	x2, x2, #5, #32
    21f8:	add	x2, x4, x2
    21fc:	ldr	w2, [x2, #16]
    2200:	cmp	w2, #0x0
    2204:	csel	w2, w2, wzr, ge  // ge = tcont
    2208:	str	w2, [x0, #8]
    220c:	cbnz	w3, 21d0 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x58>
    2210:	b	21c8 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x50>
    2214:	ldr	x3, [x1, #40]
    2218:	cbz	x3, 224c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xd4>
    221c:	ldr	w3, [x1, #48]
    2220:	cmp	w2, w3
    2224:	b.cs	226c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xf4>  // b.hs, b.nlast
    2228:	ldr	x1, [x1, #32]
    222c:	ubfiz	x2, x2, #5, #32
    2230:	add	x2, x1, x2
    2234:	ldr	w1, [x2, #16]
    2238:	cmp	w1, #0x0
    223c:	csel	w1, w1, wzr, ge  // ge = tcont
    2240:	str	w1, [x0, #12]
    2244:	ldp	x29, x30, [sp], #16
    2248:	ret
    224c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2250:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2254:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2258:	add	x3, x3, #0x0
    225c:	add	x1, x1, #0x0
    2260:	add	x0, x0, #0x0
    2264:	mov	w2, #0x154                 	// #340
    2268:	bl	0 <__assert_fail>
    226c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2270:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2274:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2278:	add	x3, x3, #0x0
    227c:	add	x1, x1, #0x0
    2280:	add	x0, x0, #0x0
    2284:	mov	w2, #0x156                 	// #342
    2288:	bl	0 <__assert_fail>
    228c:	nop

0000000000002290 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
    2290:	stp	x29, x30, [sp, #-48]!
    2294:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2298:	mov	x29, sp
    229c:	ldr	x1, [x1]
    22a0:	stp	x19, x20, [sp, #16]
    22a4:	mov	x20, x0
    22a8:	ldr	w0, [x0, #56]
    22ac:	add	x1, x1, #0x10
    22b0:	str	x1, [x20]
    22b4:	ubfiz	x1, x0, #4, #32
    22b8:	ldr	x19, [x20, #40]
    22bc:	cbz	w0, 2328 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x98>
    22c0:	stp	x21, x22, [sp, #32]
    22c4:	add	x21, x19, x1
    22c8:	b	22d8 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>
    22cc:	add	x19, x19, #0x10
    22d0:	cmp	x21, x19
    22d4:	b.eq	2318 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x88>  // b.none
    22d8:	ldr	w0, [x19]
    22dc:	cmn	w0, #0x3
    22e0:	b.hi	22cc <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>  // b.pmore
    22e4:	ldr	x22, [x19, #8]
    22e8:	add	x1, x22, #0x28
    22ec:	cbz	x22, 22cc <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>
    22f0:	ldr	x0, [x22, #24]
    22f4:	cmp	x0, x1
    22f8:	b.eq	2300 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x70>  // b.none
    22fc:	bl	0 <free>
    2300:	mov	x0, x22
    2304:	add	x19, x19, #0x10
    2308:	mov	x1, #0x68                  	// #104
    230c:	bl	0 <_ZdlPvm>
    2310:	cmp	x21, x19
    2314:	b.ne	22d8 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>  // b.any
    2318:	ldr	w1, [x20, #56]
    231c:	ldp	x21, x22, [sp, #32]
    2320:	ldr	x19, [x20, #40]
    2324:	lsl	x1, x1, #4
    2328:	mov	x0, x19
    232c:	bl	0 <_ZdlPvm>
    2330:	mov	x0, x20
    2334:	ldp	x19, x20, [sp, #16]
    2338:	ldp	x29, x30, [sp], #48
    233c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

0000000000002340 <_ZN4llvm3mca10LSUnitBaseD0Ev>:
    2340:	stp	x29, x30, [sp, #-32]!
    2344:	mov	x29, sp
    2348:	str	x19, [sp, #16]
    234c:	mov	x19, x0
    2350:	bl	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>
    2354:	mov	x0, x19
    2358:	mov	x1, #0x48                  	// #72
    235c:	ldr	x19, [sp, #16]
    2360:	ldp	x29, x30, [sp], #32
    2364:	b	0 <_ZdlPvm>

0000000000002368 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
    2368:	stp	x29, x30, [sp, #-80]!
    236c:	mov	x29, sp
    2370:	stp	x19, x20, [sp, #16]
    2374:	stp	x21, x22, [sp, #32]
    2378:	stp	x23, x24, [sp, #48]
    237c:	mov	x23, x0
    2380:	str	x25, [sp, #64]
    2384:	bl	0 <_ZN4llvm4dbgsEv>
    2388:	ldp	x1, x3, [x0, #16]
    238c:	sub	x1, x1, x3
    2390:	cmp	x1, #0x12
    2394:	b.ls	29ec <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x684>  // b.plast
    2398:	mov	x2, x0
    239c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    23a0:	add	x0, x0, #0x0
    23a4:	ldp	x4, x5, [x0]
    23a8:	stp	x4, x5, [x3]
    23ac:	ldur	w0, [x0, #15]
    23b0:	stur	w0, [x3, #15]
    23b4:	ldr	x0, [x2, #24]
    23b8:	ldr	w1, [x23, #8]
    23bc:	add	x0, x0, #0x13
    23c0:	str	x0, [x2, #24]
    23c4:	mov	x0, x2
    23c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    23cc:	mov	x1, x0
    23d0:	ldp	x3, x2, [x0, #16]
    23d4:	cmp	x2, x3
    23d8:	b.cs	2a1c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x6b4>  // b.hs, b.nlast
    23dc:	add	x0, x2, #0x1
    23e0:	str	x0, [x1, #24]
    23e4:	mov	w0, #0xa                   	// #10
    23e8:	strb	w0, [x2]
    23ec:	bl	0 <_ZN4llvm4dbgsEv>
    23f0:	mov	x2, x0
    23f4:	ldp	x1, x3, [x0, #16]
    23f8:	sub	x1, x1, x3
    23fc:	cmp	x1, #0x12
    2400:	b.ls	2a3c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x6d4>  // b.plast
    2404:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2408:	add	x0, x0, #0x0
    240c:	ldp	x4, x5, [x0]
    2410:	stp	x4, x5, [x3]
    2414:	ldur	w0, [x0, #15]
    2418:	stur	w0, [x3, #15]
    241c:	ldr	x0, [x2, #24]
    2420:	ldr	w1, [x23, #12]
    2424:	add	x0, x0, #0x13
    2428:	str	x0, [x2, #24]
    242c:	mov	x0, x2
    2430:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2434:	mov	x1, x0
    2438:	ldp	x3, x2, [x0, #16]
    243c:	cmp	x2, x3
    2440:	b.cs	2a6c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x704>  // b.hs, b.nlast
    2444:	add	x0, x2, #0x1
    2448:	str	x0, [x1, #24]
    244c:	mov	w0, #0xa                   	// #10
    2450:	strb	w0, [x2]
    2454:	bl	0 <_ZN4llvm4dbgsEv>
    2458:	mov	x2, x0
    245c:	ldp	x1, x3, [x0, #16]
    2460:	sub	x1, x1, x3
    2464:	cmp	x1, #0x18
    2468:	b.ls	2a8c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x724>  // b.plast
    246c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2470:	add	x0, x0, #0x0
    2474:	ldrb	w1, [x0, #24]
    2478:	ldp	x4, x5, [x0]
    247c:	stp	x4, x5, [x3]
    2480:	ldr	x0, [x0, #16]
    2484:	str	x0, [x3, #16]
    2488:	strb	w1, [x3, #24]
    248c:	ldr	x0, [x2, #24]
    2490:	ldr	w1, [x23, #16]
    2494:	add	x0, x0, #0x19
    2498:	str	x0, [x2, #24]
    249c:	mov	x0, x2
    24a0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    24a4:	mov	x1, x0
    24a8:	ldp	x3, x2, [x0, #16]
    24ac:	cmp	x2, x3
    24b0:	b.cs	2abc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x754>  // b.hs, b.nlast
    24b4:	add	x0, x2, #0x1
    24b8:	str	x0, [x1, #24]
    24bc:	mov	w0, #0xa                   	// #10
    24c0:	strb	w0, [x2]
    24c4:	bl	0 <_ZN4llvm4dbgsEv>
    24c8:	mov	x2, x0
    24cc:	ldp	x1, x3, [x0, #16]
    24d0:	sub	x1, x1, x3
    24d4:	cmp	x1, #0x18
    24d8:	b.ls	2adc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x774>  // b.plast
    24dc:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    24e0:	add	x0, x0, #0x0
    24e4:	ldrb	w1, [x0, #24]
    24e8:	ldp	x4, x5, [x0]
    24ec:	stp	x4, x5, [x3]
    24f0:	ldr	x0, [x0, #16]
    24f4:	str	x0, [x3, #16]
    24f8:	strb	w1, [x3, #24]
    24fc:	ldr	x0, [x2, #24]
    2500:	ldr	w1, [x23, #20]
    2504:	add	x0, x0, #0x19
    2508:	str	x0, [x2, #24]
    250c:	mov	x0, x2
    2510:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2514:	mov	x1, x0
    2518:	ldp	x3, x2, [x0, #16]
    251c:	cmp	x3, x2
    2520:	b.ls	2b0c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7a4>  // b.plast
    2524:	add	x0, x2, #0x1
    2528:	str	x0, [x1, #24]
    252c:	mov	w0, #0xa                   	// #10
    2530:	strb	w0, [x2]
    2534:	bl	0 <_ZN4llvm4dbgsEv>
    2538:	mov	x1, x0
    253c:	ldp	x3, x2, [x0, #16]
    2540:	cmp	x3, x2
    2544:	b.eq	2b28 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7c0>  // b.none
    2548:	mov	w0, #0xa                   	// #10
    254c:	strb	w0, [x2]
    2550:	ldr	x0, [x1, #24]
    2554:	add	x0, x0, #0x1
    2558:	str	x0, [x1, #24]
    255c:	ldp	x22, x19, [x23, #32]
    2560:	ldr	w0, [x23, #48]
    2564:	ldr	w21, [x23, #56]
    2568:	add	x21, x19, x21, lsl #4
    256c:	cbnz	w0, 29c8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x660>
    2570:	mov	x19, x21
    2574:	adrp	x25, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2578:	adrp	x24, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    257c:	add	x25, x25, #0x0
    2580:	add	x24, x24, #0x0
    2584:	nop
    2588:	cbz	x19, 280c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4a4>
    258c:	ldr	x0, [x23, #32]
    2590:	cmp	x0, x22
    2594:	b.ne	2bbc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x854>  // b.any
    2598:	cbz	x21, 25ac <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x244>
    259c:	cmp	x0, x22
    25a0:	b.ne	2b9c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x834>  // b.any
    25a4:	cmp	x19, x21
    25a8:	b.eq	29b0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x648>  // b.none
    25ac:	cmp	x0, x22
    25b0:	b.ne	2b7c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x814>  // b.any
    25b4:	ldr	x20, [x19, #8]
    25b8:	bl	0 <_ZN4llvm4dbgsEv>
    25bc:	ldp	x1, x3, [x0, #16]
    25c0:	mov	x2, x0
    25c4:	sub	x1, x1, x3
    25c8:	cmp	x1, #0xf
    25cc:	b.ls	2818 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4b0>  // b.plast
    25d0:	ldp	x0, x1, [x25]
    25d4:	stp	x0, x1, [x3]
    25d8:	ldr	x0, [x2, #24]
    25dc:	ldr	w1, [x19]
    25e0:	add	x0, x0, #0x10
    25e4:	str	x0, [x2, #24]
    25e8:	mov	x0, x2
    25ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    25f0:	mov	x2, x0
    25f4:	ldp	x1, x3, [x0, #16]
    25f8:	sub	x1, x1, x3
    25fc:	cmp	x1, #0x2
    2600:	b.ls	2848 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4e0>  // b.plast
    2604:	ldrh	w1, [x24]
    2608:	ldrb	w0, [x24, #2]
    260c:	strh	w1, [x3]
    2610:	strb	w0, [x3, #2]
    2614:	ldr	x1, [x2, #24]
    2618:	ldr	x0, [x2, #16]
    261c:	add	x1, x1, #0x3
    2620:	str	x1, [x2, #24]
    2624:	sub	x0, x0, x1
    2628:	cmp	x0, #0xa
    262c:	b.ls	286c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x504>  // b.plast
    2630:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2634:	add	x0, x0, #0x0
    2638:	ldr	x3, [x0]
    263c:	str	x3, [x1]
    2640:	ldur	w0, [x0, #7]
    2644:	stur	w0, [x1, #7]
    2648:	ldr	x0, [x2, #24]
    264c:	ldr	w1, [x20]
    2650:	add	x0, x0, #0xb
    2654:	str	x0, [x2, #24]
    2658:	mov	x0, x2
    265c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2660:	mov	x2, x0
    2664:	ldp	x1, x3, [x0, #16]
    2668:	sub	x1, x1, x3
    266c:	cmp	x1, #0xc
    2670:	b.ls	28a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x53c>  // b.plast
    2674:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2678:	add	x0, x0, #0x0
    267c:	ldr	x1, [x0]
    2680:	str	x1, [x3]
    2684:	ldur	x0, [x0, #5]
    2688:	stur	x0, [x3, #5]
    268c:	ldr	x0, [x2, #24]
    2690:	ldr	w1, [x20, #4]
    2694:	add	x0, x0, #0xd
    2698:	str	x0, [x2, #24]
    269c:	mov	x0, x2
    26a0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    26a4:	mov	x2, x0
    26a8:	ldp	x1, x3, [x0, #16]
    26ac:	sub	x1, x1, x3
    26b0:	cmp	x1, #0xe
    26b4:	b.ls	28d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x570>  // b.plast
    26b8:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    26bc:	add	x0, x0, #0x0
    26c0:	ldr	x1, [x0]
    26c4:	str	x1, [x3]
    26c8:	ldur	x0, [x0, #7]
    26cc:	stur	x0, [x3, #7]
    26d0:	ldr	x0, [x2, #24]
    26d4:	ldr	w1, [x20, #8]
    26d8:	add	x0, x0, #0xf
    26dc:	str	x0, [x2, #24]
    26e0:	mov	x0, x2
    26e4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    26e8:	mov	x2, x0
    26ec:	ldp	x1, x3, [x0, #16]
    26f0:	sub	x1, x1, x3
    26f4:	cmp	x1, #0x9
    26f8:	b.ls	290c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5a4>  // b.plast
    26fc:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2700:	add	x0, x0, #0x0
    2704:	ldr	x1, [x0]
    2708:	str	x1, [x3]
    270c:	ldrh	w0, [x0, #8]
    2710:	strh	w0, [x3, #8]
    2714:	ldr	x0, [x2, #24]
    2718:	ldr	w1, [x20, #12]
    271c:	add	x0, x0, #0xa
    2720:	str	x0, [x2, #24]
    2724:	mov	x0, x2
    2728:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    272c:	mov	x2, x0
    2730:	ldp	x1, x3, [x0, #16]
    2734:	sub	x1, x1, x3
    2738:	cmp	x1, #0xc
    273c:	b.ls	2940 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5d8>  // b.plast
    2740:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2744:	add	x0, x0, #0x0
    2748:	ldr	x1, [x0]
    274c:	str	x1, [x3]
    2750:	ldur	x0, [x0, #5]
    2754:	stur	x0, [x3, #5]
    2758:	ldr	x0, [x2, #24]
    275c:	ldr	w1, [x20, #16]
    2760:	add	x0, x0, #0xd
    2764:	str	x0, [x2, #24]
    2768:	mov	x0, x2
    276c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2770:	mov	x2, x0
    2774:	ldp	x1, x3, [x0, #16]
    2778:	sub	x1, x1, x3
    277c:	cmp	x1, #0xe
    2780:	b.ls	2974 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x60c>  // b.plast
    2784:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2788:	add	x0, x0, #0x0
    278c:	ldr	x1, [x0]
    2790:	str	x1, [x3]
    2794:	ldur	x0, [x0, #7]
    2798:	stur	x0, [x3, #7]
    279c:	ldr	x0, [x2, #24]
    27a0:	ldr	w1, [x20, #20]
    27a4:	add	x0, x0, #0xf
    27a8:	str	x0, [x2, #24]
    27ac:	mov	x0, x2
    27b0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    27b4:	mov	x1, x0
    27b8:	ldp	x3, x2, [x0, #16]
    27bc:	cmp	x2, x3
    27c0:	b.cs	29a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x63c>  // b.hs, b.nlast
    27c4:	add	x0, x2, #0x1
    27c8:	str	x0, [x1, #24]
    27cc:	mov	w0, #0xa                   	// #10
    27d0:	strb	w0, [x2]
    27d4:	ldr	x0, [x23, #32]
    27d8:	cmp	x0, x22
    27dc:	b.ne	2b5c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7f4>  // b.any
    27e0:	add	x19, x19, #0x10
    27e4:	cmp	x19, x21
    27e8:	b.hi	2b3c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7d4>  // b.pmore
    27ec:	b.eq	2588 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x220>  // b.none
    27f0:	ldr	w0, [x19]
    27f4:	cmn	w0, #0x3
    27f8:	b.ls	2588 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x220>  // b.plast
    27fc:	add	x19, x19, #0x10
    2800:	cmp	x19, x21
    2804:	b.ne	27f0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x488>  // b.any
    2808:	cbnz	x19, 258c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x224>
    280c:	cbz	x21, 29b0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x648>
    2810:	ldr	x0, [x23, #32]
    2814:	b	259c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x234>
    2818:	mov	x1, x25
    281c:	mov	x2, #0x10                  	// #16
    2820:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2824:	mov	x2, x0
    2828:	ldr	w1, [x19]
    282c:	mov	x0, x2
    2830:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2834:	mov	x2, x0
    2838:	ldp	x1, x3, [x0, #16]
    283c:	sub	x1, x1, x3
    2840:	cmp	x1, #0x2
    2844:	b.hi	2604 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x29c>  // b.pmore
    2848:	mov	x2, #0x3                   	// #3
    284c:	mov	x1, x24
    2850:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2854:	mov	x2, x0
    2858:	ldr	x1, [x0, #24]
    285c:	ldr	x0, [x2, #16]
    2860:	sub	x0, x0, x1
    2864:	cmp	x0, #0xa
    2868:	b.hi	2630 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2c8>  // b.pmore
    286c:	mov	x0, x2
    2870:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2874:	mov	x2, #0xb                   	// #11
    2878:	add	x1, x1, #0x0
    287c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2880:	mov	x2, x0
    2884:	ldr	w1, [x20]
    2888:	mov	x0, x2
    288c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2890:	mov	x2, x0
    2894:	ldp	x1, x3, [x0, #16]
    2898:	sub	x1, x1, x3
    289c:	cmp	x1, #0xc
    28a0:	b.hi	2674 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x30c>  // b.pmore
    28a4:	mov	x2, #0xd                   	// #13
    28a8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    28ac:	add	x1, x1, #0x0
    28b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28b4:	ldr	w1, [x20, #4]
    28b8:	mov	x2, x0
    28bc:	mov	x0, x2
    28c0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28c4:	mov	x2, x0
    28c8:	ldp	x1, x3, [x0, #16]
    28cc:	sub	x1, x1, x3
    28d0:	cmp	x1, #0xe
    28d4:	b.hi	26b8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x350>  // b.pmore
    28d8:	mov	x2, #0xf                   	// #15
    28dc:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    28e0:	add	x1, x1, #0x0
    28e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28e8:	ldr	w1, [x20, #8]
    28ec:	mov	x2, x0
    28f0:	mov	x0, x2
    28f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28f8:	mov	x2, x0
    28fc:	ldp	x1, x3, [x0, #16]
    2900:	sub	x1, x1, x3
    2904:	cmp	x1, #0x9
    2908:	b.hi	26fc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x394>  // b.pmore
    290c:	mov	x2, #0xa                   	// #10
    2910:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2914:	add	x1, x1, #0x0
    2918:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    291c:	ldr	w1, [x20, #12]
    2920:	mov	x2, x0
    2924:	mov	x0, x2
    2928:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    292c:	mov	x2, x0
    2930:	ldp	x1, x3, [x0, #16]
    2934:	sub	x1, x1, x3
    2938:	cmp	x1, #0xc
    293c:	b.hi	2740 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3d8>  // b.pmore
    2940:	mov	x2, #0xd                   	// #13
    2944:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2948:	add	x1, x1, #0x0
    294c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2950:	ldr	w1, [x20, #16]
    2954:	mov	x2, x0
    2958:	mov	x0, x2
    295c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2960:	mov	x2, x0
    2964:	ldp	x1, x3, [x0, #16]
    2968:	sub	x1, x1, x3
    296c:	cmp	x1, #0xe
    2970:	b.hi	2784 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x41c>  // b.pmore
    2974:	mov	x2, #0xf                   	// #15
    2978:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    297c:	add	x1, x1, #0x0
    2980:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2984:	ldr	w1, [x20, #20]
    2988:	mov	x2, x0
    298c:	mov	x0, x2
    2990:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2994:	mov	x1, x0
    2998:	ldp	x3, x2, [x0, #16]
    299c:	cmp	x2, x3
    29a0:	b.cc	27c4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x45c>  // b.lo, b.ul, b.last
    29a4:	mov	w1, #0xa                   	// #10
    29a8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    29ac:	b	27d4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x46c>
    29b0:	ldp	x19, x20, [sp, #16]
    29b4:	ldp	x21, x22, [sp, #32]
    29b8:	ldp	x23, x24, [sp, #48]
    29bc:	ldr	x25, [sp, #64]
    29c0:	ldp	x29, x30, [sp], #80
    29c4:	ret
    29c8:	cmp	x19, x21
    29cc:	b.hi	2b3c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7d4>  // b.pmore
    29d0:	b.eq	2574 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x20c>  // b.none
    29d4:	ldr	w0, [x19]
    29d8:	cmn	w0, #0x3
    29dc:	b.ls	2574 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x20c>  // b.plast
    29e0:	add	x19, x19, #0x10
    29e4:	cmp	x19, x21
    29e8:	b	29d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x668>
    29ec:	mov	x2, #0x13                  	// #19
    29f0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    29f4:	add	x1, x1, #0x0
    29f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29fc:	ldr	w1, [x23, #8]
    2a00:	mov	x2, x0
    2a04:	mov	x0, x2
    2a08:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2a0c:	mov	x1, x0
    2a10:	ldp	x3, x2, [x0, #16]
    2a14:	cmp	x2, x3
    2a18:	b.cc	23dc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x74>  // b.lo, b.ul, b.last
    2a1c:	mov	w1, #0xa                   	// #10
    2a20:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2a24:	bl	0 <_ZN4llvm4dbgsEv>
    2a28:	mov	x2, x0
    2a2c:	ldp	x1, x3, [x0, #16]
    2a30:	sub	x1, x1, x3
    2a34:	cmp	x1, #0x12
    2a38:	b.hi	2404 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x9c>  // b.pmore
    2a3c:	mov	x2, #0x13                  	// #19
    2a40:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2a44:	add	x1, x1, #0x0
    2a48:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a4c:	ldr	w1, [x23, #12]
    2a50:	mov	x2, x0
    2a54:	mov	x0, x2
    2a58:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2a5c:	mov	x1, x0
    2a60:	ldp	x3, x2, [x0, #16]
    2a64:	cmp	x2, x3
    2a68:	b.cc	2444 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xdc>  // b.lo, b.ul, b.last
    2a6c:	mov	w1, #0xa                   	// #10
    2a70:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2a74:	bl	0 <_ZN4llvm4dbgsEv>
    2a78:	mov	x2, x0
    2a7c:	ldp	x1, x3, [x0, #16]
    2a80:	sub	x1, x1, x3
    2a84:	cmp	x1, #0x18
    2a88:	b.hi	246c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x104>  // b.pmore
    2a8c:	mov	x2, #0x19                  	// #25
    2a90:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2a94:	add	x1, x1, #0x0
    2a98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a9c:	ldr	w1, [x23, #16]
    2aa0:	mov	x2, x0
    2aa4:	mov	x0, x2
    2aa8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2aac:	mov	x1, x0
    2ab0:	ldp	x3, x2, [x0, #16]
    2ab4:	cmp	x2, x3
    2ab8:	b.cc	24b4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x14c>  // b.lo, b.ul, b.last
    2abc:	mov	w1, #0xa                   	// #10
    2ac0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2ac4:	bl	0 <_ZN4llvm4dbgsEv>
    2ac8:	mov	x2, x0
    2acc:	ldp	x1, x3, [x0, #16]
    2ad0:	sub	x1, x1, x3
    2ad4:	cmp	x1, #0x18
    2ad8:	b.hi	24dc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x174>  // b.pmore
    2adc:	mov	x2, #0x19                  	// #25
    2ae0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2ae4:	add	x1, x1, #0x0
    2ae8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2aec:	ldr	w1, [x23, #20]
    2af0:	mov	x2, x0
    2af4:	mov	x0, x2
    2af8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2afc:	mov	x1, x0
    2b00:	ldp	x3, x2, [x0, #16]
    2b04:	cmp	x3, x2
    2b08:	b.hi	2524 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1bc>  // b.pmore
    2b0c:	mov	w1, #0xa                   	// #10
    2b10:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2b14:	bl	0 <_ZN4llvm4dbgsEv>
    2b18:	mov	x1, x0
    2b1c:	ldp	x3, x2, [x0, #16]
    2b20:	cmp	x3, x2
    2b24:	b.ne	2548 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1e0>  // b.any
    2b28:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b2c:	mov	x2, #0x1                   	// #1
    2b30:	add	x1, x1, #0x0
    2b34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b38:	b	255c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1f4>
    2b3c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b40:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b44:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b48:	add	x3, x3, #0x0
    2b4c:	add	x1, x1, #0x0
    2b50:	add	x0, x0, #0x0
    2b54:	mov	w2, #0x4e0                 	// #1248
    2b58:	bl	0 <__assert_fail>
    2b5c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b60:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b64:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b68:	add	x3, x3, #0x0
    2b6c:	add	x1, x1, #0x0
    2b70:	add	x0, x0, #0x0
    2b74:	mov	w2, #0x4cf                 	// #1231
    2b78:	bl	0 <__assert_fail>
    2b7c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b80:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b84:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b88:	add	x3, x3, #0x0
    2b8c:	add	x1, x1, #0x0
    2b90:	add	x0, x0, #0x0
    2b94:	mov	w2, #0x4b3                 	// #1203
    2b98:	bl	0 <__assert_fail>
    2b9c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2ba0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2ba4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2ba8:	add	x3, x3, #0x0
    2bac:	add	x1, x1, #0x0
    2bb0:	add	x0, x0, #0x0
    2bb4:	mov	w2, #0x4c8                 	// #1224
    2bb8:	bl	0 <__assert_fail>
    2bbc:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2bc0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2bc4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2bc8:	add	x3, x3, #0x0
    2bcc:	add	x1, x1, #0x0
    2bd0:	add	x0, x0, #0x0
    2bd4:	mov	w2, #0x4c7                 	// #1223
    2bd8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	w21, [x0, #56]
  1c:	ldr	x0, [x1, #8]
  20:	stp	x23, x24, [sp, #48]
  24:	stp	x25, x26, [sp, #64]
  28:	ldr	w22, [x0, #796]
  2c:	ldr	x25, [x19, #40]
  30:	cbz	w21, 204 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x204>
  34:	cmn	w22, #0x3
  38:	b.hi	6b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6b0>  // b.pmore
  3c:	mov	w23, #0x25                  	// #37
  40:	sub	w1, w21, #0x1
  44:	mul	w23, w22, w23
  48:	and	w0, w23, w1
  4c:	and	w4, w23, w1
  50:	lsl	x0, x0, #4
  54:	add	x3, x25, x0
  58:	ldr	w24, [x25, x0]
  5c:	cmp	w22, w24
  60:	b.ne	188 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x188>  // b.any
  64:	ldr	x0, [x3, #8]
  68:	ldr	w2, [x0, #16]
  6c:	cbnz	w2, d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd0>
  70:	ldr	x1, [x0, #96]
  74:	add	w2, w2, #0x1
  78:	ldr	x3, [x20, #8]
  7c:	str	w2, [x0, #16]
  80:	cbz	x1, 94 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x94>
  84:	ldr	w4, [x1, #788]
  88:	ldr	w1, [x3, #788]
  8c:	cmp	w4, w1
  90:	b.ge	a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa0>  // b.tcont
  94:	ldr	w1, [x20]
  98:	str	w1, [x0, #88]
  9c:	str	x3, [x0, #96]
  a0:	cbz	w2, b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb8>
  a4:	ldr	w1, [x0, #12]
  a8:	ldr	w3, [x0, #20]
  ac:	sub	w1, w1, w3
  b0:	cmp	w2, w1
  b4:	b.eq	108 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x108>  // b.none
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x21, x22, [sp, #32]
  c0:	ldp	x23, x24, [sp, #48]
  c4:	ldp	x25, x26, [sp, #64]
  c8:	ldp	x29, x30, [sp], #96
  cc:	ret
  d0:	ldr	w1, [x0, #12]
  d4:	ldr	w3, [x0, #20]
  d8:	sub	w1, w1, w3
  dc:	cmp	w2, w1
  e0:	b.ne	70 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x70>  // b.any
  e4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  ec:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f0:	add	x3, x3, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x0, x0, #0x0
  fc:	mov	w2, #0x79                  	// #121
 100:	stp	x27, x28, [sp, #80]
 104:	bl	0 <__assert_fail>
 108:	ldr	x2, [x0, #24]
 10c:	ldr	w6, [x0, #32]
 110:	add	x6, x2, x6, lsl #3
 114:	cmp	x2, x6
 118:	b.eq	b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb8>  // b.none
 11c:	stp	x27, x28, [sp, #80]
 120:	ldr	x1, [x2]
 124:	ldr	w4, [x1]
 128:	ldr	w3, [x1, #8]
 12c:	cmp	w4, w3
 130:	b.eq	6d4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d4>  // b.none
 134:	ldr	w3, [x1, #4]
 138:	ldr	x5, [x0, #96]
 13c:	add	w3, w3, #0x1
 140:	str	w3, [x1, #4]
 144:	ldr	w4, [x1, #80]
 148:	ldr	w3, [x5, #788]
 14c:	cmp	w3, w4
 150:	b.ls	160 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x160>  // b.plast
 154:	ldr	w4, [x0, #88]
 158:	str	w4, [x1, #72]
 15c:	str	w3, [x1, #80]
 160:	add	x2, x2, #0x8
 164:	cmp	x6, x2
 168:	b.ne	120 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x120>  // b.any
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x27, x28, [sp, #80]
 180:	ldp	x29, x30, [sp], #96
 184:	ret
 188:	mov	w0, #0x1                   	// #1
 18c:	mov	x2, #0x0                   	// #0
 190:	cmn	w24, #0x1
 194:	b.ne	5f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5f4>  // b.any
 198:	ldr	x4, [x19, #32]
 19c:	lsl	w0, w21, #1
 1a0:	ldr	w5, [x19, #48]
 1a4:	cmp	x2, #0x0
 1a8:	add	x4, x4, #0x1
 1ac:	str	x4, [x19, #32]
 1b0:	add	w5, w5, #0x1
 1b4:	add	w4, w0, w21
 1b8:	csel	x2, x2, x3, ne  // ne = any
 1bc:	cmp	w4, w5, lsl #2
 1c0:	b.ls	214 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x214>  // b.plast
 1c4:	ldr	w0, [x19, #52]
 1c8:	sub	w0, w21, w0
 1cc:	sub	w0, w0, w5
 1d0:	cmp	w0, w21, lsr #3
 1d4:	b.ls	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.plast
 1d8:	str	w5, [x19, #48]
 1dc:	ldr	w0, [x2]
 1e0:	cmn	w0, #0x1
 1e4:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 1e8:	ldr	w0, [x19, #52]
 1ec:	sub	w0, w0, #0x1
 1f0:	str	w0, [x19, #52]
 1f4:	mov	x0, #0x0                   	// #0
 1f8:	str	w22, [x2]
 1fc:	str	xzr, [x2, #8]
 200:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 204:	ldr	x1, [x19, #32]
 208:	mov	w0, #0x0                   	// #0
 20c:	add	x1, x1, #0x1
 210:	str	x1, [x19, #32]
 214:	sub	w0, w0, #0x1
 218:	mov	w1, #0x40                  	// #64
 21c:	orr	x0, x0, x0, lsr #1
 220:	orr	x0, x0, x0, lsr #2
 224:	orr	x0, x0, x0, lsr #4
 228:	orr	x0, x0, x0, lsr #8
 22c:	orr	x0, x0, x0, lsr #16
 230:	add	x0, x0, #0x1
 234:	cmp	w0, w1
 238:	csel	w0, w0, w1, cs  // cs = hs, nlast
 23c:	str	w0, [x19, #56]
 240:	ubfiz	x0, x0, #4, #32
 244:	bl	0 <_Znwm>
 248:	ldr	w1, [x19, #56]
 24c:	stp	x0, xzr, [x19, #40]
 250:	sub	w2, w1, #0x1
 254:	and	w2, w2, w1
 258:	cbz	x25, 594 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x594>
 25c:	ubfiz	x21, x21, #4, #32
 260:	add	x26, x25, x21
 264:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 268:	ubfiz	x1, x1, #4, #32
 26c:	mov	w2, #0xffffffff            	// #-1
 270:	add	x1, x0, x1
 274:	cmp	x0, x1
 278:	b.eq	28c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x28c>  // b.none
 27c:	nop
 280:	str	w2, [x0], #16
 284:	cmp	x1, x0
 288:	b.ne	280 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x280>  // b.any
 28c:	cmp	x25, x26
 290:	mov	x23, x25
 294:	mov	w24, #0x25                  	// #37
 298:	b.ne	2ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ac>  // b.any
 29c:	b	440 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x440>
 2a0:	add	x23, x23, #0x10
 2a4:	cmp	x26, x23
 2a8:	b.eq	440 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x440>  // b.none
 2ac:	ldr	w0, [x23]
 2b0:	cmn	w0, #0x3
 2b4:	b.hi	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>  // b.pmore
 2b8:	ldr	w1, [x19, #56]
 2bc:	stp	x27, x28, [sp, #80]
 2c0:	cbz	w1, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 2c4:	mul	w2, w0, w24
 2c8:	sub	w1, w1, #0x1
 2cc:	ldr	x4, [x19, #40]
 2d0:	and	w3, w2, w1
 2d4:	and	w2, w2, w1
 2d8:	lsl	x3, x3, #4
 2dc:	add	x5, x4, x3
 2e0:	ldr	w3, [x4, x3]
 2e4:	cmp	w0, w3
 2e8:	b.ne	530 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x530>  // b.any
 2ec:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f4:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f8:	add	x3, x3, #0x0
 2fc:	add	x1, x1, #0x0
 300:	add	x0, x0, #0x0
 304:	mov	w2, #0x17a                 	// #378
 308:	bl	0 <__assert_fail>
 30c:	mov	w2, w1
 310:	lsr	w0, w1, #1
 314:	orr	x0, x0, x2
 318:	mov	w1, #0x40                  	// #64
 31c:	orr	x0, x0, x0, lsr #2
 320:	orr	x0, x0, x0, lsr #4
 324:	orr	x0, x0, x0, lsr #8
 328:	orr	x0, x0, x0, lsr #16
 32c:	add	x0, x0, #0x1
 330:	cmp	w0, w1
 334:	csel	w0, w0, w1, cs  // cs = hs, nlast
 338:	str	w0, [x19, #56]
 33c:	ubfiz	x0, x0, #4, #32
 340:	bl	0 <_Znwm>
 344:	ldr	w1, [x19, #56]
 348:	str	x0, [x19, #40]
 34c:	sub	w2, w1, #0x1
 350:	and	w2, w2, w1
 354:	cbz	x25, 5c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5c4>
 358:	stp	x27, x28, [sp, #80]
 35c:	ubfiz	x21, x21, #4, #32
 360:	add	x27, x25, x21
 364:	str	xzr, [x19, #48]
 368:	cbnz	w2, 760 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x760>
 36c:	ubfiz	x1, x1, #4, #32
 370:	add	x1, x0, x1
 374:	cmp	x0, x1
 378:	b.eq	38c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x38c>  // b.none
 37c:	nop
 380:	str	w24, [x0], #16
 384:	cmp	x1, x0
 388:	b.ne	380 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x380>  // b.any
 38c:	mov	x24, x25
 390:	mov	w26, #0x25                  	// #37
 394:	b	3a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3a4>
 398:	add	x24, x24, #0x10
 39c:	cmp	x27, x24
 3a0:	b.eq	4ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4ac>  // b.none
 3a4:	ldr	w0, [x24]
 3a8:	cmn	w0, #0x3
 3ac:	b.hi	398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>  // b.pmore
 3b0:	ldr	w1, [x19, #56]
 3b4:	cbz	w1, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 3b8:	mul	w2, w0, w26
 3bc:	sub	w1, w1, #0x1
 3c0:	ldr	x4, [x19, #40]
 3c4:	and	w3, w2, w1
 3c8:	and	w2, w2, w1
 3cc:	lsl	x3, x3, #4
 3d0:	add	x5, x4, x3
 3d4:	ldr	w3, [x4, x3]
 3d8:	cmp	w0, w3
 3dc:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 3e0:	mov	w7, #0x1                   	// #1
 3e4:	mov	x6, #0x0                   	// #0
 3e8:	cmn	w3, #0x1
 3ec:	b.ne	668 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x668>  // b.any
 3f0:	cmp	x6, #0x0
 3f4:	csel	x6, x6, x5, ne  // ne = any
 3f8:	ldr	x1, [x24, #8]
 3fc:	str	w0, [x6]
 400:	ldr	w0, [x19, #48]
 404:	str	xzr, [x24, #8]
 408:	str	x1, [x6, #8]
 40c:	add	w0, w0, #0x1
 410:	ldr	x28, [x24, #8]
 414:	str	w0, [x19, #48]
 418:	cbz	x28, 398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>
 41c:	ldr	x0, [x28, #24]
 420:	add	x1, x28, #0x28
 424:	cmp	x0, x1
 428:	b.eq	430 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x430>  // b.none
 42c:	bl	0 <free>
 430:	mov	x0, x28
 434:	mov	x1, #0x68                  	// #104
 438:	bl	0 <_ZdlPvm>
 43c:	b	398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>
 440:	mov	x1, x21
 444:	mov	x0, x25
 448:	bl	0 <_ZdlPvm>
 44c:	ldr	w1, [x19, #56]
 450:	ldr	x0, [x19, #40]
 454:	cbz	w1, 50c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x50c>
 458:	cmn	w22, #0x3
 45c:	b.hi	6b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6b0>  // b.pmore
 460:	mov	w2, #0x25                  	// #37
 464:	sub	w1, w1, #0x1
 468:	ldr	w5, [x19, #48]
 46c:	mul	w2, w22, w2
 470:	add	w5, w5, #0x1
 474:	and	w4, w2, w1
 478:	and	w3, w2, w1
 47c:	lsl	x4, x4, #4
 480:	add	x2, x0, x4
 484:	ldr	w4, [x0, x4]
 488:	cmp	w22, w4
 48c:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 490:	mov	w7, #0x1                   	// #1
 494:	mov	x6, #0x0                   	// #0
 498:	cmn	w4, #0x1
 49c:	b.ne	6f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6f4>  // b.any
 4a0:	cmp	x6, #0x0
 4a4:	csel	x2, x2, x6, eq  // eq = none
 4a8:	b	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>
 4ac:	mov	x1, x21
 4b0:	mov	x0, x25
 4b4:	bl	0 <_ZdlPvm>
 4b8:	ldp	x27, x28, [sp, #80]
 4bc:	ldr	w1, [x19, #56]
 4c0:	ldr	x0, [x19, #40]
 4c4:	cbz	w1, 50c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x50c>
 4c8:	sub	w1, w1, #0x1
 4cc:	ldr	w5, [x19, #48]
 4d0:	and	w3, w23, w1
 4d4:	and	w23, w23, w1
 4d8:	add	w5, w5, #0x1
 4dc:	lsl	x3, x3, #4
 4e0:	add	x2, x0, x3
 4e4:	ldr	w3, [x0, x3]
 4e8:	cmp	w22, w3
 4ec:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 4f0:	mov	w6, #0x1                   	// #1
 4f4:	mov	x4, #0x0                   	// #0
 4f8:	cmn	w3, #0x1
 4fc:	b.ne	728 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x728>  // b.any
 500:	cmp	x4, #0x0
 504:	csel	x2, x2, x4, eq  // eq = none
 508:	b	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>
 50c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 510:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 514:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 518:	add	x3, x3, #0x0
 51c:	add	x1, x1, #0x0
 520:	add	x0, x0, #0x0
 524:	mov	w2, #0x22f                 	// #559
 528:	stp	x27, x28, [sp, #80]
 52c:	bl	0 <__assert_fail>
 530:	mov	w7, #0x1                   	// #1
 534:	mov	x6, #0x0                   	// #0
 538:	cmn	w3, #0x1
 53c:	b.ne	62c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x62c>  // b.any
 540:	cmp	x6, #0x0
 544:	csel	x6, x6, x5, ne  // ne = any
 548:	ldr	x1, [x23, #8]
 54c:	str	w0, [x6]
 550:	ldr	w0, [x19, #48]
 554:	str	xzr, [x23, #8]
 558:	str	x1, [x6, #8]
 55c:	add	w0, w0, #0x1
 560:	ldr	x27, [x23, #8]
 564:	str	w0, [x19, #48]
 568:	cbz	x27, 58c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x58c>
 56c:	ldr	x0, [x27, #24]
 570:	add	x1, x27, #0x28
 574:	cmp	x0, x1
 578:	b.eq	580 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x580>  // b.none
 57c:	bl	0 <free>
 580:	mov	x0, x27
 584:	mov	x1, #0x68                  	// #104
 588:	bl	0 <_ZdlPvm>
 58c:	ldp	x27, x28, [sp, #80]
 590:	b	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>
 594:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 598:	ubfiz	x2, x1, #4, #32
 59c:	add	x2, x0, x2
 5a0:	cmp	x0, x2
 5a4:	b.eq	454 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x454>  // b.none
 5a8:	mov	x1, x0
 5ac:	mov	w3, #0xffffffff            	// #-1
 5b0:	str	w3, [x1], #16
 5b4:	cmp	x2, x1
 5b8:	b.ne	5b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5b0>  // b.any
 5bc:	ldr	w1, [x19, #56]
 5c0:	b	454 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x454>
 5c4:	str	xzr, [x19, #48]
 5c8:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 5cc:	ubfiz	x2, x1, #4, #32
 5d0:	add	x2, x0, x2
 5d4:	cmp	x0, x2
 5d8:	b.eq	4c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4c4>  // b.none
 5dc:	mov	x1, x0
 5e0:	str	w24, [x1], #16
 5e4:	cmp	x2, x1
 5e8:	b.ne	5e0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5e0>  // b.any
 5ec:	ldr	w1, [x19, #56]
 5f0:	b	4c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4c4>
 5f4:	add	w4, w0, w4
 5f8:	cmp	x2, #0x0
 5fc:	and	w5, w1, w4
 600:	ccmn	w24, #0x2, #0x0, eq  // eq = none
 604:	csel	x3, x3, x2, eq  // eq = none
 608:	add	w0, w0, #0x1
 60c:	lsl	x2, x5, #4
 610:	and	w4, w1, w4
 614:	add	x5, x25, x2
 618:	ldr	w24, [x25, x2]
 61c:	cmp	w22, w24
 620:	b.ne	6a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6a4>  // b.any
 624:	ldr	x0, [x5, #8]
 628:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 62c:	add	w2, w2, w7
 630:	cmp	x6, #0x0
 634:	and	w8, w1, w2
 638:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 63c:	csel	x5, x5, x6, eq  // eq = none
 640:	add	w7, w7, #0x1
 644:	lsl	x3, x8, #4
 648:	and	w2, w1, w2
 64c:	add	x8, x4, x3
 650:	ldr	w3, [x4, x3]
 654:	cmp	w0, w3
 658:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 65c:	mov	x6, x5
 660:	mov	x5, x8
 664:	b	538 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x538>
 668:	add	w2, w2, w7
 66c:	cmp	x6, #0x0
 670:	and	w8, w1, w2
 674:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 678:	csel	x5, x5, x6, eq  // eq = none
 67c:	add	w7, w7, #0x1
 680:	lsl	x3, x8, #4
 684:	and	w2, w1, w2
 688:	add	x8, x4, x3
 68c:	ldr	w3, [x4, x3]
 690:	cmp	w0, w3
 694:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 698:	mov	x6, x5
 69c:	mov	x5, x8
 6a0:	b	3e8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3e8>
 6a4:	mov	x2, x3
 6a8:	mov	x3, x5
 6ac:	b	190 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x190>
 6b0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6b4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6b8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6bc:	add	x3, x3, #0x0
 6c0:	add	x1, x1, #0x0
 6c4:	add	x0, x0, #0x0
 6c8:	mov	w2, #0x250                 	// #592
 6cc:	stp	x27, x28, [sp, #80]
 6d0:	bl	0 <__assert_fail>
 6d4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6dc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6e0:	add	x3, x3, #0x0
 6e4:	add	x1, x1, #0x0
 6e8:	add	x0, x0, #0x0
 6ec:	mov	w2, #0x68                  	// #104
 6f0:	bl	0 <__assert_fail>
 6f4:	add	w3, w3, w7
 6f8:	cmp	x6, #0x0
 6fc:	and	w8, w1, w3
 700:	ccmn	w4, #0x2, #0x0, eq  // eq = none
 704:	csel	x6, x6, x2, ne  // ne = any
 708:	add	w7, w7, #0x1
 70c:	lsl	x4, x8, #4
 710:	and	w3, w1, w3
 714:	add	x2, x0, x8, lsl #4
 718:	ldr	w4, [x0, x4]
 71c:	cmp	w22, w4
 720:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 724:	b	498 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x498>
 728:	add	w23, w23, w6
 72c:	cmp	x4, #0x0
 730:	and	w7, w1, w23
 734:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 738:	csel	x4, x4, x2, ne  // ne = any
 73c:	add	w6, w6, #0x1
 740:	lsl	x3, x7, #4
 744:	and	w23, w1, w23
 748:	add	x2, x0, x7, lsl #4
 74c:	ldr	w3, [x0, x3]
 750:	cmp	w22, w3
 754:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 758:	b	4f8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4f8>
 75c:	stp	x27, x28, [sp, #80]
 760:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 764:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 768:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 76c:	add	x3, x3, #0x0
 770:	add	x1, x1, #0x0
 774:	add	x0, x0, #0x0
 778:	mov	w2, #0x15b                 	// #347
 77c:	bl	0 <__assert_fail>
 780:	mov	x0, #0x0                   	// #0
 784:	str	wzr, [x0]
 788:	brk	#0x3e8

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	w1, 2c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  10:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  14:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x11c                 	// #284
  28:	bl	0 <__assert_fail>
  2c:	ldr	w2, [x0, #56]
  30:	ldr	x3, [x0, #40]
  34:	cbz	w2, c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>
  38:	cmn	w1, #0x3
  3c:	b.hi	11c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x11c>  // b.pmore
  40:	mov	w0, #0x25                  	// #37
  44:	sub	w4, w2, #0x1
  48:	mul	w0, w1, w0
  4c:	and	w5, w0, w4
  50:	and	w0, w0, w4
  54:	lsl	x5, x5, #4
  58:	add	x7, x3, x5
  5c:	ldr	w5, [x3, x5]
  60:	cmp	w5, w1
  64:	b.ne	bc <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xbc>  // b.any
  68:	ubfiz	x2, x2, #4, #32
  6c:	add	x6, x3, x2
  70:	cmp	x6, x7
  74:	b.eq	c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>  // b.none
  78:	mov	w0, #0x25                  	// #37
  7c:	mul	w0, w1, w0
  80:	and	w2, w0, w4
  84:	and	w0, w0, w4
  88:	lsl	x2, x2, #4
  8c:	add	x5, x3, x2
  90:	ldr	w2, [x3, x2]
  94:	cmp	w2, w1
  98:	b.ne	a8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xa8>  // b.any
  9c:	ldp	x29, x30, [sp], #16
  a0:	ldr	x0, [x5, #8]
  a4:	ret
  a8:	mov	w5, #0x1                   	// #1
  ac:	cmn	w2, #0x1
  b0:	b.ne	f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>  // b.any
  b4:	mov	x5, x6
  b8:	b	9c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x9c>
  bc:	mov	w6, #0x1                   	// #1
  c0:	cmn	w5, #0x1
  c4:	b.eq	c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>  // b.none
  c8:	add	w0, w0, w6
  cc:	add	w6, w6, #0x1
  d0:	and	w5, w4, w0
  d4:	and	w0, w4, w0
  d8:	lsl	x5, x5, #4
  dc:	add	x7, x3, x5
  e0:	ldr	w5, [x3, x5]
  e4:	cmp	w5, w1
  e8:	b.eq	68 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x68>  // b.none
  ec:	b	c0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc0>
  f0:	add	w0, w5, w0
  f4:	add	w7, w5, #0x1
  f8:	and	w2, w4, w0
  fc:	and	w0, w4, w0
 100:	lsl	x2, x2, #4
 104:	add	x5, x3, x2
 108:	ldr	w2, [x3, x2]
 10c:	cmp	w2, w1
 110:	b.eq	9c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x9c>  // b.none
 114:	mov	w5, w7
 118:	b	ac <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xac>
 11c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 120:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 124:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x250                 	// #592
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca6LSUnitD2Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca6LSUnitD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca6LSUnitD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x50                  	// #80
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>:
       0:	sub	x12, x2, #0x1
       4:	and	x13, x2, #0x1
       8:	add	x12, x12, x12, lsr #63
       c:	cmp	x1, x12, asr #1
      10:	asr	x12, x12, #1
      14:	b.ge	d4 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xd4>  // b.tcont
      18:	mov	x7, x1
      1c:	nop
      20:	add	x5, x7, #0x1
      24:	lsl	x8, x7, #4
      28:	add	x9, x0, x8
      2c:	add	x10, x0, x5, lsl #5
      30:	lsl	x5, x5, #1
      34:	ldur	x7, [x10, #-8]
      38:	ldr	x6, [x10, #8]
      3c:	cmp	x6, x7
      40:	b.cs	50 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x50>  // b.hs, b.nlast
      44:	sub	x5, x5, #0x1
      48:	add	x10, x0, x5, lsl #4
      4c:	ldr	x6, [x10, #8]
      50:	mov	x7, x5
      54:	ldr	w11, [x10]
      58:	cmp	x5, x12
      5c:	str	w11, [x0, x8]
      60:	str	x6, [x9, #8]
      64:	b.lt	20 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x20>  // b.tstop
      68:	cbz	x13, e0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xe0>
      6c:	sub	x6, x5, #0x1
      70:	cmp	x5, x1
      74:	add	x6, x6, x6, lsr #63
      78:	asr	x6, x6, #1
      7c:	b.gt	9c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x9c>
      80:	b	c8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xc8>
      84:	ldr	w9, [x0, x9]
      88:	cmp	x1, x6
      8c:	str	w9, [x0, x8]
      90:	mov	x6, x2
      94:	str	x7, [x10, #8]
      98:	b.ge	120 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x120>  // b.tcont
      9c:	lsl	x9, x6, #4
      a0:	sub	x2, x6, #0x1
      a4:	add	x11, x0, x9
      a8:	lsl	x8, x5, #4
      ac:	add	x2, x2, x2, lsr #63
      b0:	add	x10, x0, x8
      b4:	mov	x5, x6
      b8:	ldr	x7, [x11, #8]
      bc:	asr	x2, x2, #1
      c0:	cmp	x7, x4
      c4:	b.cc	84 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x84>  // b.lo, b.ul, b.last
      c8:	str	w3, [x10]
      cc:	str	x4, [x10, #8]
      d0:	ret
      d4:	add	x10, x0, x1, lsl #4
      d8:	cbnz	x13, c8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xc8>
      dc:	mov	x5, x1
      e0:	sub	x2, x2, #0x2
      e4:	add	x2, x2, x2, lsr #63
      e8:	cmp	x5, x2, asr #1
      ec:	b.ne	6c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x6c>  // b.any
      f0:	add	x5, x5, #0x1
      f4:	lsl	x2, x5, #5
      f8:	lsl	x5, x5, #1
      fc:	sub	x2, x2, #0x10
     100:	sub	x5, x5, #0x1
     104:	add	x7, x0, x2
     108:	ldr	w6, [x0, x2]
     10c:	ldr	x2, [x7, #8]
     110:	str	w6, [x10]
     114:	str	x2, [x10, #8]
     118:	add	x10, x0, x5, lsl #4
     11c:	b	6c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x6c>
     120:	mov	x10, x11
     124:	str	w3, [x10]
     128:	str	x4, [x10, #8]
     12c:	ret

0000000000000130 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>:
     130:	stp	x29, x30, [sp, #-64]!
     134:	mov	x29, sp
     138:	stp	x19, x20, [sp, #16]
     13c:	mov	x19, x0
     140:	sub	x0, x1, x0
     144:	cmp	x0, #0x100
     148:	b.le	324 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1f4>
     14c:	stp	x21, x22, [sp, #32]
     150:	add	x22, x19, #0x10
     154:	stp	x23, x24, [sp, #48]
     158:	mov	x23, x2
     15c:	mov	w24, w3
     160:	cbz	x2, 29c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x16c>
     164:	asr	x0, x0, #5
     168:	ldr	w8, [x19]
     16c:	ldr	x4, [x19, #24]
     170:	lsl	x0, x0, #4
     174:	add	x5, x19, x0
     178:	sub	x23, x23, #0x1
     17c:	ldur	x7, [x1, #-8]
     180:	ldr	x2, [x5, #8]
     184:	ldr	x6, [x19, #8]
     188:	cmp	x4, x2
     18c:	b.cs	21c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xec>  // b.hs, b.nlast
     190:	cmp	x2, x7
     194:	b.cc	278 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x148>  // b.lo, b.ul, b.last
     198:	cmp	x4, x7
     19c:	b.cc	22c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xfc>  // b.lo, b.ul, b.last
     1a0:	str	x4, [x19, #8]
     1a4:	str	x6, [x19, #24]
     1a8:	ldr	w0, [x19, #16]
     1ac:	ldur	x5, [x1, #-8]
     1b0:	str	w0, [x19]
     1b4:	str	w8, [x19, #16]
     1b8:	mov	x20, x22
     1bc:	mov	x0, x1
     1c0:	cmp	x6, x4
     1c4:	mov	x21, x20
     1c8:	b.cc	210 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xe0>  // b.lo, b.ul, b.last
     1cc:	sub	x0, x0, #0x10
     1d0:	cmp	x5, x4
     1d4:	b.ls	1e8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xb8>  // b.plast
     1d8:	ldur	x5, [x0, #-8]
     1dc:	sub	x0, x0, #0x10
     1e0:	cmp	x5, x4
     1e4:	b.hi	1d8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xa8>  // b.pmore
     1e8:	cmp	x0, x20
     1ec:	b.ls	250 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x120>  // b.plast
     1f0:	ldr	w4, [x0]
     1f4:	ldr	w2, [x20]
     1f8:	str	w4, [x20]
     1fc:	str	x5, [x20, #8]
     200:	str	x6, [x0, #8]
     204:	ldur	x5, [x0, #-8]
     208:	str	w2, [x0]
     20c:	ldr	x4, [x19, #8]
     210:	add	x20, x20, #0x10
     214:	ldr	x6, [x20, #8]
     218:	b	1c0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x90>
     21c:	cmp	x4, x7
     220:	b.cc	1a0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x70>  // b.lo, b.ul, b.last
     224:	cmp	x2, x7
     228:	b.cs	278 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x148>  // b.hs, b.nlast
     22c:	ldur	w0, [x1, #-16]
     230:	mov	x5, x6
     234:	str	w0, [x19]
     238:	str	x7, [x19, #8]
     23c:	stur	x6, [x1, #-8]
     240:	stur	w8, [x1, #-16]
     244:	ldr	x4, [x19, #8]
     248:	ldr	x6, [x19, #24]
     24c:	b	1b8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x88>
     250:	mov	x0, x20
     254:	mov	w3, w24
     258:	mov	x2, x23
     25c:	bl	130 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
     260:	sub	x0, x20, x19
     264:	cmp	x0, #0x100
     268:	b.le	31c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1ec>
     26c:	cbz	x23, 2a0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x170>
     270:	mov	x1, x20
     274:	b	164 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x34>
     278:	ldr	w3, [x19, x0]
     27c:	str	w3, [x19]
     280:	str	x2, [x19, #8]
     284:	str	w8, [x19, x0]
     288:	str	x6, [x5, #8]
     28c:	ldur	x5, [x1, #-8]
     290:	ldr	x4, [x19, #8]
     294:	ldr	x6, [x19, #24]
     298:	b	1b8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x88>
     29c:	mov	x21, x1
     2a0:	asr	x14, x0, #4
     2a4:	mov	x0, x19
     2a8:	sub	x1, x14, #0x2
     2ac:	mov	x2, x14
     2b0:	asr	x1, x1, #1
     2b4:	lsl	x3, x1, #4
     2b8:	add	x4, x19, x3
     2bc:	mov	x15, x4
     2c0:	ldr	w3, [x19, x3]
     2c4:	ldr	x4, [x4, #8]
     2c8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     2cc:	ldur	x4, [x15, #-8]
     2d0:	sub	x1, x1, #0x1
     2d4:	ldr	w3, [x15, #-16]!
     2d8:	mov	x2, x14
     2dc:	mov	x0, x19
     2e0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     2e4:	cbnz	x1, 2cc <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x19c>
     2e8:	ldr	w3, [x21, #-16]!
     2ec:	mov	x0, x19
     2f0:	ldr	w5, [x19]
     2f4:	mov	x1, #0x0                   	// #0
     2f8:	sub	x14, x21, x19
     2fc:	ldr	x2, [x19, #8]
     300:	str	w5, [x21]
     304:	ldr	x4, [x21, #8]
     308:	str	x2, [x21, #8]
     30c:	asr	x2, x14, #4
     310:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     314:	cmp	x14, #0x10
     318:	b.gt	2e8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1b8>
     31c:	ldp	x21, x22, [sp, #32]
     320:	ldp	x23, x24, [sp, #48]
     324:	ldp	x19, x20, [sp, #16]
     328:	ldp	x29, x30, [sp], #64
     32c:	ret

0000000000000330 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>:
     330:	cmp	x0, x1
     334:	b.eq	3a4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x74>  // b.none
     338:	add	x7, x0, #0x10
     33c:	nop
     340:	cmp	x1, x7
     344:	b.eq	3a4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x74>  // b.none
     348:	ldr	x6, [x7, #8]
     34c:	mov	x3, x7
     350:	ldr	x2, [x0, #8]
     354:	ldr	w8, [x7], #16
     358:	cmp	x6, x2
     35c:	b.cs	3a8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x78>  // b.hs, b.nlast
     360:	sub	x3, x3, x0
     364:	mov	x2, x7
     368:	cmp	x3, #0x0
     36c:	asr	x3, x3, #4
     370:	b.le	394 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x64>
     374:	nop
     378:	ldur	w5, [x2, #-32]
     37c:	sub	x2, x2, #0x10
     380:	ldur	x4, [x2, #-8]
     384:	str	w5, [x2]
     388:	str	x4, [x2, #8]
     38c:	subs	x3, x3, #0x1
     390:	b.ne	378 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x48>  // b.any
     394:	str	w8, [x0]
     398:	cmp	x1, x7
     39c:	str	x6, [x0, #8]
     3a0:	b.ne	348 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x18>  // b.any
     3a4:	ret
     3a8:	ldur	x4, [x7, #-24]
     3ac:	sub	x2, x7, #0x20
     3b0:	cmp	x6, x4
     3b4:	b.cs	3d8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xa8>  // b.hs, b.nlast
     3b8:	ldr	w5, [x2]
     3bc:	mov	x3, x2
     3c0:	sub	x2, x2, #0x10
     3c4:	str	w5, [x2, #32]
     3c8:	str	x4, [x2, #40]
     3cc:	ldr	x4, [x2, #8]
     3d0:	cmp	x6, x4
     3d4:	b.cc	3b8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x88>  // b.lo, b.ul, b.last
     3d8:	str	w8, [x3]
     3dc:	str	x6, [x3, #8]
     3e0:	b	340 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x10>
     3e4:	nop

00000000000003e8 <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     3e8:	ldr	x1, [x0, #16]
     3ec:	mov	w2, #0x14                  	// #20
     3f0:	ldr	w0, [x0, #24]
     3f4:	umaddl	x0, w0, w2, x1
     3f8:	cmp	x1, x0
     3fc:	b.eq	410 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x28>  // b.none
     400:	str	wzr, [x1, #12]
     404:	add	x1, x1, #0x14
     408:	cmp	x1, x0
     40c:	b.ne	400 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x18>  // b.any
     410:	ret
     414:	nop

0000000000000418 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     418:	stp	x29, x30, [sp, #-112]!
     41c:	mov	x29, sp
     420:	stp	x21, x22, [sp, #32]
     424:	mov	x21, x1
     428:	stp	x25, x26, [sp, #64]
     42c:	ldp	w25, w1, [x0, #24]
     430:	stp	x19, x20, [sp, #16]
     434:	mov	x20, x0
     438:	stp	x23, x24, [sp, #48]
     43c:	mov	x19, x3
     440:	mov	x24, x2
     444:	mov	w0, w25
     448:	cmp	w25, w1
     44c:	b.cs	78c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x374>  // b.hs, b.nlast
     450:	mov	w1, #0x14                  	// #20
     454:	ldrh	w5, [x21, #8]
     458:	ldr	x2, [x20, #16]
     45c:	umull	x0, w0, w1
     460:	ldrh	w4, [x21, #14]
     464:	add	x1, x2, x0
     468:	ldrb	w3, [x21, #16]
     46c:	str	w5, [x2, x0]
     470:	stp	wzr, w4, [x1, #4]
     474:	str	wzr, [x1, #12]
     478:	strb	w3, [x1, #16]
     47c:	ldp	w0, w2, [x20, #24]
     480:	mov	w1, w0
     484:	add	x1, x1, #0x1
     488:	cmp	x1, x2
     48c:	b.hi	7cc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3b4>  // b.pmore
     490:	add	w0, w0, #0x1
     494:	str	w0, [x20, #24]
     498:	cbz	w0, 7a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x390>
     49c:	cbz	x19, 63c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x224>
     4a0:	add	x19, x19, x19, lsl #1
     4a4:	add	x19, x24, x19, lsl #2
     4a8:	cmp	x19, x24
     4ac:	b.eq	63c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x224>  // b.none
     4b0:	ldr	x10, [x20, #8]
     4b4:	stp	x27, x28, [sp, #80]
     4b8:	ldr	w1, [x10, #32]
     4bc:	ldr	w0, [x24]
     4c0:	cmp	w0, w1
     4c4:	b.cs	830 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x418>  // b.hs, b.nlast
     4c8:	ldr	x1, [x10, #24]
     4cc:	ubfiz	x0, x0, #5, #32
     4d0:	add	x2, x1, x0
     4d4:	ldr	x0, [x1, x0]
     4d8:	ldrh	w26, [x2, #20]
     4dc:	mov	x23, x0
     4e0:	add	x26, x0, x26, lsl #1
     4e4:	cmp	x0, x26
     4e8:	b.eq	62c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x214>  // b.none
     4ec:	nop
     4f0:	ldrh	w22, [x23]
     4f4:	ldr	x21, [x20, #112]
     4f8:	ubfiz	x0, x22, #5, #16
     4fc:	add	x21, x21, x0
     500:	ldr	w0, [x21, #16]
     504:	cmp	w0, #0x0
     508:	ccmp	w0, w25, #0x4, ne  // ne = any
     50c:	b.ne	654 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x23c>  // b.any
     510:	ldr	w0, [x24, #4]
     514:	ldr	x11, [x10]
     518:	ldr	x8, [x10, #48]
     51c:	stp	w25, w0, [x21, #16]
     520:	ldrb	w0, [x24, #8]
     524:	strh	w22, [x21, #24]
     528:	strb	w0, [x21, #28]
     52c:	ldr	w0, [x10, #8]
     530:	cmp	w0, w22
     534:	b.ls	810 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f8>  // b.plast
     538:	mov	w9, #0x18                  	// #24
     53c:	umaddl	x0, w22, w9, x11
     540:	ldr	w0, [x0, #4]
     544:	lsl	x0, x0, #1
     548:	adds	x1, x8, x0
     54c:	b.eq	7f0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3d8>  // b.none
     550:	ldrh	w0, [x8, x0]
     554:	add	x1, x1, #0x2
     558:	cmp	w0, #0x0
     55c:	add	w0, w22, w0
     560:	csel	x1, x1, xzr, ne  // ne = any
     564:	and	w3, w0, #0xffff
     568:	mov	x7, x1
     56c:	nop
     570:	cbz	x7, 620 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x208>
     574:	ldr	x4, [x20, #112]
     578:	ubfiz	x0, x3, #5, #16
     57c:	add	x4, x4, x0
     580:	ldr	w0, [x4, #16]
     584:	cbnz	w0, 59c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x184>
     588:	ldrh	w6, [x4, #24]
     58c:	cbnz	w6, 5b8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1a0>
     590:	ldr	x0, [x21, #16]
     594:	str	x0, [x4, #16]
     598:	strh	w22, [x4, #24]
     59c:	ldrh	w0, [x7], #2
     5a0:	mov	x1, #0x0                   	// #0
     5a4:	add	w3, w3, w0
     5a8:	and	w3, w3, #0xffff
     5ac:	cbnz	w0, 570 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x158>
     5b0:	mov	x7, x1
     5b4:	b	570 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x158>
     5b8:	ldr	w0, [x10, #8]
     5bc:	cmp	w3, w0
     5c0:	b.cs	810 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f8>  // b.hs, b.nlast
     5c4:	umaddl	x0, w3, w9, x11
     5c8:	ldr	w0, [x0, #8]
     5cc:	lsl	x0, x0, #1
     5d0:	adds	x5, x8, x0
     5d4:	b.eq	7f0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3d8>  // b.none
     5d8:	ldrh	w0, [x8, x0]
     5dc:	add	x5, x5, #0x2
     5e0:	cmp	w0, #0x0
     5e4:	add	w0, w3, w0
     5e8:	csel	x5, x5, xzr, ne  // ne = any
     5ec:	and	w0, w0, #0xffff
     5f0:	mov	x1, x5
     5f4:	nop
     5f8:	cbz	x1, 59c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x184>
     5fc:	cmp	w6, w0
     600:	b.eq	590 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x178>  // b.none
     604:	ldrh	w2, [x1], #2
     608:	mov	x5, #0x0                   	// #0
     60c:	add	w0, w0, w2
     610:	and	w0, w0, #0xffff
     614:	cbnz	w2, 5f8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1e0>
     618:	mov	x1, x5
     61c:	b	5f8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1e0>
     620:	add	x23, x23, #0x2
     624:	cmp	x26, x23
     628:	b.ne	4f0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd8>  // b.any
     62c:	add	x24, x24, #0xc
     630:	cmp	x19, x24
     634:	b.ne	4b8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xa0>  // b.any
     638:	ldp	x27, x28, [sp, #80]
     63c:	ldp	x19, x20, [sp, #16]
     640:	ldp	x21, x22, [sp, #32]
     644:	ldp	x23, x24, [sp, #48]
     648:	ldp	x25, x26, [sp, #64]
     64c:	ldp	x29, x30, [sp], #112
     650:	ret
     654:	bl	0 <_ZN4llvm4errsEv>
     658:	mov	x27, x0
     65c:	ldp	x1, x2, [x0, #16]
     660:	sub	x1, x1, x2
     664:	cmp	x1, #0x11
     668:	b.ls	774 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x35c>  // b.plast
     66c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     670:	add	x3, x3, #0x0
     674:	ldp	x0, x1, [x3]
     678:	stp	x0, x1, [x2]
     67c:	ldrh	w0, [x3, #16]
     680:	strh	w0, [x2, #16]
     684:	ldr	x0, [x27, #24]
     688:	add	x0, x0, #0x12
     68c:	str	x0, [x27, #24]
     690:	ldr	x0, [x20, #8]
     694:	ldr	w1, [x0, #8]
     698:	ldr	x2, [x0]
     69c:	cmp	w1, w22
     6a0:	ldr	x0, [x0, #64]
     6a4:	b.ls	810 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f8>  // b.plast
     6a8:	mov	w1, #0x18                  	// #24
     6ac:	umull	x1, w22, w1
     6b0:	ldr	w28, [x2, x1]
     6b4:	adds	x28, x0, x28
     6b8:	b.eq	748 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x330>  // b.none
     6bc:	mov	x0, x28
     6c0:	bl	0 <strlen>
     6c4:	mov	x2, x0
     6c8:	ldp	x3, x0, [x27, #16]
     6cc:	sub	x3, x3, x0
     6d0:	cmp	x2, x3
     6d4:	b.hi	738 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x320>  // b.pmore
     6d8:	cbz	x2, 6fc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2e4>
     6dc:	mov	x1, x28
     6e0:	str	x2, [sp, #104]
     6e4:	bl	0 <memcpy>
     6e8:	ldp	x3, x0, [x27, #16]
     6ec:	ldr	x2, [sp, #104]
     6f0:	add	x0, x0, x2
     6f4:	str	x0, [x27, #24]
     6f8:	sub	x3, x3, x0
     6fc:	cmp	x3, #0x23
     700:	b.ls	758 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x340>  // b.plast
     704:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     708:	add	x1, x1, #0x0
     70c:	ldp	x2, x3, [x1]
     710:	stp	x2, x3, [x0]
     714:	ldr	w4, [x1, #32]
     718:	ldp	x2, x3, [x1, #16]
     71c:	stp	x2, x3, [x0, #16]
     720:	str	w4, [x0, #32]
     724:	ldr	x0, [x27, #24]
     728:	ldr	x10, [x20, #8]
     72c:	add	x0, x0, #0x24
     730:	str	x0, [x27, #24]
     734:	b	510 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xf8>
     738:	mov	x0, x27
     73c:	mov	x1, x28
     740:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     744:	mov	x27, x0
     748:	ldp	x3, x0, [x27, #16]
     74c:	sub	x3, x3, x0
     750:	cmp	x3, #0x23
     754:	b.hi	704 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2ec>  // b.pmore
     758:	mov	x0, x27
     75c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     760:	mov	x2, #0x24                  	// #36
     764:	add	x1, x1, #0x0
     768:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     76c:	ldr	x10, [x20, #8]
     770:	b	510 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xf8>
     774:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     778:	mov	x2, #0x12                  	// #18
     77c:	add	x1, x1, #0x0
     780:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     784:	mov	x27, x0
     788:	b	690 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x278>
     78c:	add	x0, x20, #0x10
     790:	add	x1, x20, #0x20
     794:	mov	x3, #0x14                  	// #20
     798:	mov	x2, #0x0                   	// #0
     79c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7a0:	ldr	w0, [x20, #24]
     7a4:	b	450 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x38>
     7a8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7ac:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7b0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7b4:	add	x3, x3, #0x0
     7b8:	add	x1, x1, #0x0
     7bc:	add	x0, x0, #0x0
     7c0:	mov	w2, #0xa7                  	// #167
     7c4:	stp	x27, x28, [sp, #80]
     7c8:	bl	0 <__assert_fail>
     7cc:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7d0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7d4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7d8:	add	x3, x3, #0x0
     7dc:	add	x1, x1, #0x0
     7e0:	add	x0, x0, #0x0
     7e4:	mov	w2, #0x43                  	// #67
     7e8:	stp	x27, x28, [sp, #80]
     7ec:	bl	0 <__assert_fail>
     7f0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7f4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7f8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7fc:	add	x3, x3, #0x0
     800:	add	x1, x1, #0x0
     804:	add	x0, x0, #0x0
     808:	mov	w2, #0xd1                  	// #209
     80c:	bl	0 <__assert_fail>
     810:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     814:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     818:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     81c:	add	x3, x3, #0x0
     820:	add	x1, x1, #0x0
     824:	add	x0, x0, #0x0
     828:	mov	w2, #0x1b8                 	// #440
     82c:	bl	0 <__assert_fail>
     830:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     834:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     838:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     83c:	add	x3, x3, #0x0
     840:	add	x1, x1, #0x0
     844:	add	x0, x0, #0x0
     848:	mov	w2, #0x219                 	// #537
     84c:	bl	0 <__assert_fail>

0000000000000850 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
     850:	stp	x29, x30, [sp, #-64]!
     854:	mov	x29, sp
     858:	stp	x21, x22, [sp, #32]
     85c:	mov	x21, x0
     860:	ldr	w0, [x0, #24]
     864:	stp	x19, x20, [sp, #16]
     868:	mov	x19, x1
     86c:	ldr	w1, [x21, #28]
     870:	mov	w20, w2
     874:	cmp	w0, w1
     878:	b.cs	938 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xe8>  // b.hs, b.nlast
     87c:	mov	w1, #0x14                  	// #20
     880:	ldr	x2, [x21, #16]
     884:	umull	x0, w0, w1
     888:	add	x1, x2, x0
     88c:	str	w20, [x2, x0]
     890:	stur	xzr, [x1, #4]
     894:	str	wzr, [x1, #12]
     898:	strb	wzr, [x1, #16]
     89c:	ldp	w0, w2, [x21, #24]
     8a0:	mov	w1, w0
     8a4:	add	x1, x1, #0x1
     8a8:	cmp	x1, x2
     8ac:	b.hi	998 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x148>  // b.pmore
     8b0:	add	w0, w0, #0x1
     8b4:	str	w0, [x21, #24]
     8b8:	cbz	w0, 974 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x124>
     8bc:	ldr	x20, [x19, #64]
     8c0:	cbz	x20, 928 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xd8>
     8c4:	ldr	w22, [x20, #16]
     8c8:	cmp	w22, #0x1
     8cc:	b.ls	928 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xd8>  // b.plast
     8d0:	sub	w22, w22, #0x2
     8d4:	mov	w1, #0x18                  	// #24
     8d8:	mov	x0, #0x30                  	// #48
     8dc:	mov	x19, #0x18                  	// #24
     8e0:	str	x23, [sp, #48]
     8e4:	mov	w23, #0xc                   	// #12
     8e8:	umaddl	x22, w22, w1, x0
     8ec:	nop
     8f0:	ldr	x1, [x20, #8]
     8f4:	add	x1, x1, x19
     8f8:	ldrh	w2, [x1, #8]
     8fc:	cbz	w2, 954 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x104>
     900:	ldrh	w4, [x1, #12]
     904:	add	x19, x19, #0x18
     908:	ldr	x2, [x20, #24]
     90c:	mov	x0, x21
     910:	ldrh	w3, [x1, #10]
     914:	umaddl	x2, w4, w23, x2
     918:	bl	418 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
     91c:	cmp	x22, x19
     920:	b.ne	8f0 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xa0>  // b.any
     924:	ldr	x23, [sp, #48]
     928:	ldp	x19, x20, [sp, #16]
     92c:	ldp	x21, x22, [sp, #32]
     930:	ldp	x29, x30, [sp], #64
     934:	ret
     938:	add	x0, x21, #0x10
     93c:	add	x1, x21, #0x20
     940:	mov	x3, #0x14                  	// #20
     944:	mov	x2, #0x0                   	// #0
     948:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     94c:	ldr	w0, [x21, #24]
     950:	b	87c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x2c>
     954:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     958:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     95c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     960:	add	x3, x3, #0x0
     964:	add	x1, x1, #0x0
     968:	add	x0, x0, #0x0
     96c:	mov	w2, #0x32                  	// #50
     970:	bl	0 <__assert_fail>
     974:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     978:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     97c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     980:	add	x3, x3, #0x0
     984:	add	x1, x1, #0x0
     988:	add	x0, x0, #0x0
     98c:	mov	w2, #0xa7                  	// #167
     990:	str	x23, [sp, #48]
     994:	bl	0 <__assert_fail>
     998:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     99c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9a0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9a4:	add	x3, x3, #0x0
     9a8:	add	x1, x1, #0x0
     9ac:	add	x0, x0, #0x0
     9b0:	mov	w2, #0x43                  	// #67
     9b4:	str	x23, [sp, #48]
     9b8:	bl	0 <__assert_fail>
     9bc:	nop

00000000000009c0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
     9c0:	stp	x29, x30, [sp, #-80]!
     9c4:	adrp	x5, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
     9c8:	mov	x29, sp
     9cc:	stp	x19, x20, [sp, #16]
     9d0:	mov	x19, x0
     9d4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9d8:	stp	x21, x22, [sp, #32]
     9dc:	mov	x21, x2
     9e0:	mov	x2, #0x400000000           	// #17179869184
     9e4:	stp	x23, x24, [sp, #48]
     9e8:	add	x4, x19, #0x20
     9ec:	str	x25, [sp, #64]
     9f0:	str	x2, [x19, #24]
     9f4:	ldr	x0, [x0]
     9f8:	ldr	w2, [x21, #8]
     9fc:	ldr	x5, [x5]
     a00:	add	x0, x0, #0x10
     a04:	stp	x0, x21, [x19]
     a08:	str	x4, [x19, #16]
     a0c:	stp	xzr, xzr, [x19, #112]
     a10:	ldr	w25, [x5]
     a14:	str	xzr, [x19, #128]
     a18:	cbz	w2, ac0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x100>
     a1c:	mov	w4, w2
     a20:	mov	x22, x1
     a24:	mov	w23, w3
     a28:	lsl	x20, x4, #5
     a2c:	mov	x0, x20
     a30:	bl	0 <_Znwm>
     a34:	mov	w1, #0x1                   	// #1
     a38:	add	x4, x0, x20
     a3c:	str	x0, [x19, #112]
     a40:	str	x4, [x19, #128]
     a44:	nop
     a48:	str	w25, [x0]
     a4c:	str	xzr, [x0, #8]
     a50:	stp	wzr, w1, [x0, #16]
     a54:	add	x0, x0, #0x20
     a58:	sturh	wzr, [x0, #-8]
     a5c:	sturh	wzr, [x0, #-6]
     a60:	sturb	wzr, [x0, #-4]
     a64:	cmp	x4, x0
     a68:	b.ne	a48 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x88>  // b.any
     a6c:	add	x0, x19, #0x88
     a70:	ldr	w1, [x21, #8]
     a74:	str	x4, [x19, #120]
     a78:	str	w1, [x0, #8]
     a7c:	cbz	w1, ac8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x108>
     a80:	cmp	w1, #0x40
     a84:	b.ls	ab8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xf8>  // b.plast
     a88:	mov	w2, #0x0                   	// #0
     a8c:	mov	x1, #0x0                   	// #0
     a90:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
     a94:	mov	w2, w23
     a98:	mov	x1, x22
     a9c:	mov	x0, x19
     aa0:	ldp	x19, x20, [sp, #16]
     aa4:	ldp	x21, x22, [sp, #32]
     aa8:	ldp	x23, x24, [sp, #48]
     aac:	ldr	x25, [sp, #64]
     ab0:	ldp	x29, x30, [sp], #80
     ab4:	b	850 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
     ab8:	str	xzr, [x19, #136]
     abc:	b	a94 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xd4>
     ac0:	str	xzr, [x19, #120]
     ac4:	str	wzr, [x19, #144]
     ac8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     acc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ad0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ad4:	add	x3, x3, #0x0
     ad8:	add	x1, x1, #0x0
     adc:	add	x0, x0, #0x0
     ae0:	mov	w2, #0x117                 	// #279
     ae4:	bl	0 <__assert_fail>

0000000000000ae8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     ae8:	stp	x29, x30, [sp, #-16]!
     aec:	mov	x29, sp
     af0:	ldp	w4, w1, [x1]
     af4:	ldr	w5, [x0, #24]
     af8:	cbz	w4, b5c <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x74>
     afc:	cmp	w4, w5
     b00:	mov	w5, w4
     b04:	b.cs	b88 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>  // b.hs, b.nlast
     b08:	ldr	x6, [x0, #16]
     b0c:	mov	w7, #0x14                  	// #20
     b10:	cmp	x3, x5
     b14:	umaddl	x4, w4, w7, x6
     b18:	ldr	w3, [x4, #4]
     b1c:	add	w3, w3, w1
     b20:	str	w3, [x4, #4]
     b24:	b.ls	ba8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>  // b.plast
     b28:	ldr	w3, [x2, x5, lsl #2]
     b2c:	add	w3, w3, w1
     b30:	str	w3, [x2, x5, lsl #2]
     b34:	ldr	w0, [x0, #24]
     b38:	cbz	w0, b88 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     b3c:	ldr	w0, [x6, #4]
     b40:	add	w0, w0, w1
     b44:	str	w0, [x6, #4]
     b48:	ldr	w0, [x2]
     b4c:	add	w1, w0, w1
     b50:	str	w1, [x2]
     b54:	ldp	x29, x30, [sp], #16
     b58:	ret
     b5c:	cbz	w5, b88 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     b60:	ldr	x4, [x0, #16]
     b64:	ldr	w0, [x4, #4]
     b68:	add	w0, w0, w1
     b6c:	str	w0, [x4, #4]
     b70:	cbz	x3, ba8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>
     b74:	ldr	w0, [x2]
     b78:	add	w1, w0, w1
     b7c:	str	w1, [x2]
     b80:	ldp	x29, x30, [sp], #16
     b84:	ret
     b88:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b8c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b90:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b94:	add	x3, x3, #0x0
     b98:	add	x1, x1, #0x0
     b9c:	add	x0, x0, #0x0
     ba0:	mov	w2, #0x95                  	// #149
     ba4:	bl	0 <__assert_fail>
     ba8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bac:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bb0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bb4:	add	x3, x3, #0x0
     bb8:	add	x1, x1, #0x0
     bbc:	add	x0, x0, #0x0
     bc0:	mov	w2, #0x1ab                 	// #427
     bc4:	bl	0 <__assert_fail>

0000000000000bc8 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     bc8:	stp	x29, x30, [sp, #-16]!
     bcc:	mov	x29, sp
     bd0:	ldp	w4, w1, [x1]
     bd4:	ldr	w5, [x0, #24]
     bd8:	cbz	w4, c3c <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x74>
     bdc:	cmp	w4, w5
     be0:	mov	w5, w4
     be4:	b.cs	c68 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>  // b.hs, b.nlast
     be8:	ldr	x6, [x0, #16]
     bec:	mov	w7, #0x14                  	// #20
     bf0:	cmp	x3, x5
     bf4:	umaddl	x4, w4, w7, x6
     bf8:	ldr	w3, [x4, #4]
     bfc:	sub	w3, w3, w1
     c00:	str	w3, [x4, #4]
     c04:	b.ls	c88 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>  // b.plast
     c08:	ldr	w3, [x2, x5, lsl #2]
     c0c:	add	w3, w3, w1
     c10:	str	w3, [x2, x5, lsl #2]
     c14:	ldr	w0, [x0, #24]
     c18:	cbz	w0, c68 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     c1c:	ldr	w0, [x6, #4]
     c20:	sub	w0, w0, w1
     c24:	str	w0, [x6, #4]
     c28:	ldr	w0, [x2]
     c2c:	add	w1, w0, w1
     c30:	str	w1, [x2]
     c34:	ldp	x29, x30, [sp], #16
     c38:	ret
     c3c:	cbz	w5, c68 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     c40:	ldr	x4, [x0, #16]
     c44:	ldr	w0, [x4, #4]
     c48:	sub	w0, w0, w1
     c4c:	str	w0, [x4, #4]
     c50:	cbz	x3, c88 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>
     c54:	ldr	w0, [x2]
     c58:	add	w1, w0, w1
     c5c:	str	w1, [x2]
     c60:	ldp	x29, x30, [sp], #16
     c64:	ret
     c68:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c6c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c70:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c74:	add	x3, x3, #0x0
     c78:	add	x1, x1, #0x0
     c7c:	add	x0, x0, #0x0
     c80:	mov	w2, #0x95                  	// #149
     c84:	bl	0 <__assert_fail>
     c88:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c8c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c90:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c94:	add	x3, x3, #0x0
     c98:	add	x1, x1, #0x0
     c9c:	add	x0, x0, #0x0
     ca0:	mov	w2, #0x1ab                 	// #427
     ca4:	bl	0 <__assert_fail>

0000000000000ca8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     ca8:	stp	x29, x30, [sp, #-112]!
     cac:	mov	x29, sp
     cb0:	stp	x19, x20, [sp, #16]
     cb4:	ldrh	w19, [x2, #12]
     cb8:	stp	x21, x22, [sp, #32]
     cbc:	stp	x23, x24, [sp, #48]
     cc0:	stp	x25, x26, [sp, #64]
     cc4:	stp	x27, x28, [sp, #80]
     cc8:	str	x4, [sp, #104]
     ccc:	cbz	w19, 1368 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c0>
     cd0:	mov	x25, x0
     cd4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     cd8:	mov	x24, x2
     cdc:	mov	x22, x1
     ce0:	ldr	x0, [x0]
     ce4:	mov	x23, x3
     ce8:	mov	w28, w1
     cec:	ldrb	w0, [x0]
     cf0:	cbnz	w0, f94 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2ec>
     cf4:	and	x20, x19, #0xffff
     cf8:	ldr	x1, [x25, #112]
     cfc:	ldrb	w27, [x24, #21]
     d00:	ldrb	w26, [x24, #22]
     d04:	add	x0, x1, x20, lsl #5
     d08:	cmp	w27, #0x0
     d0c:	ccmp	w26, #0x0, #0x0, eq  // eq = none
     d10:	ldrb	w2, [x24, #20]
     d14:	cset	w9, eq  // eq = none
     d18:	ldrh	w21, [x0, #24]
     d1c:	ldr	w0, [x0, #16]
     d20:	str	w0, [x24, #16]
     d24:	cmp	w21, #0x0
     d28:	ccmp	w21, w19, #0x4, ne  // ne = any
     d2c:	b.ne	11bc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x514>  // b.any
     d30:	mov	w21, w19
     d34:	cbnz	w2, d40 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x98>
     d38:	mov	w21, w19
     d3c:	ldrh	w19, [x24, #12]
     d40:	ldr	w3, [x25, #144]
     d44:	add	x20, x25, #0x88
     d48:	cmp	w3, w19
     d4c:	cbz	w27, edc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x234>
     d50:	b.ls	12c8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x620>  // b.plast
     d54:	mov	x0, #0x1                   	// #1
     d58:	cmp	w3, #0x40
     d5c:	lsl	x0, x0, x19
     d60:	ldr	x1, [x25, #136]
     d64:	b.hi	11f8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x550>  // b.pmore
     d68:	orr	x0, x1, x0
     d6c:	str	x0, [x25, #136]
     d70:	ldr	x10, [x25, #8]
     d74:	ldr	w0, [x10, #8]
     d78:	ldr	x4, [x10]
     d7c:	cmp	w0, w19
     d80:	ldr	x1, [x10, #48]
     d84:	b.ls	1308 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x660>  // b.plast
     d88:	mov	w0, #0x18                  	// #24
     d8c:	umaddl	x0, w19, w0, x4
     d90:	ldr	w0, [x0, #4]
     d94:	lsl	x0, x0, #1
     d98:	adds	x6, x1, x0
     d9c:	b.eq	1328 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x680>  // b.none
     da0:	ldrh	w0, [x1, x0]
     da4:	add	x6, x6, #0x2
     da8:	mov	x11, #0x1                   	// #1
     dac:	add	w5, w19, w0
     db0:	cmp	w0, #0x0
     db4:	and	w5, w5, #0xffff
     db8:	csel	x6, x6, xzr, ne  // ne = any
     dbc:	nop
     dc0:	mov	x4, x6
     dc4:	cbz	x4, e04 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x15c>
     dc8:	cmp	w5, w3
     dcc:	b.cs	12c8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x620>  // b.hs, b.nlast
     dd0:	cmp	w3, #0x40
     dd4:	lsl	x6, x11, x5
     dd8:	ldr	x0, [x20]
     ddc:	b.hi	1090 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3e8>  // b.pmore
     de0:	orr	x0, x0, x6
     de4:	str	x0, [x20]
     de8:	ldrh	w1, [x4], #2
     dec:	mov	x6, #0x0                   	// #0
     df0:	add	w0, w1, w5
     df4:	and	w0, w0, #0xffff
     df8:	cbz	w1, dc0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x118>
     dfc:	mov	w5, w0
     e00:	cbnz	x4, dc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x120>
     e04:	cbz	w26, 10b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x410>
     e08:	cbz	w2, ec0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x218>
     e0c:	ldr	x1, [x25, #8]
     e10:	ldr	w0, [x1, #8]
     e14:	ldr	x2, [x1]
     e18:	cmp	w21, w0
     e1c:	ldr	x1, [x1, #48]
     e20:	b.cs	1308 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x660>  // b.hs, b.nlast
     e24:	mov	w0, #0x18                  	// #24
     e28:	umaddl	x0, w21, w0, x2
     e2c:	ldr	w0, [x0, #8]
     e30:	lsl	x0, x0, #1
     e34:	adds	x4, x1, x0
     e38:	b.eq	1328 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x680>  // b.none
     e3c:	ldrh	w0, [x1, x0]
     e40:	add	x4, x4, #0x2
     e44:	mov	x5, #0x1                   	// #1
     e48:	add	w1, w0, w21
     e4c:	cmp	w0, #0x0
     e50:	and	w1, w1, #0xffff
     e54:	csel	x4, x4, xzr, ne  // ne = any
     e58:	mov	x0, x4
     e5c:	cbz	x0, ec0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x218>
     e60:	cbnz	w26, e7c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1d4>
     e64:	ldr	x4, [x25, #112]
     e68:	ubfiz	x3, x1, #5, #16
     e6c:	add	x2, x4, x3
     e70:	str	w28, [x4, x3]
     e74:	str	x24, [x2, #8]
     e78:	strh	wzr, [x2, #26]
     e7c:	ldr	w2, [x20, #8]
     e80:	cmp	w2, w1
     e84:	cbz	w27, 1170 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4c8>
     e88:	b.ls	12c8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x620>  // b.plast
     e8c:	cmp	w2, #0x40
     e90:	lsl	x3, x5, x1
     e94:	ldr	x2, [x20]
     e98:	b.hi	1194 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4ec>  // b.pmore
     e9c:	orr	x2, x2, x3
     ea0:	str	x2, [x20]
     ea4:	ldrh	w3, [x0], #2
     ea8:	mov	x4, #0x0                   	// #0
     eac:	add	w2, w3, w1
     eb0:	and	w2, w2, #0xffff
     eb4:	cbz	w3, e58 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b0>
     eb8:	mov	w1, w2
     ebc:	cbnz	x0, e60 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b8>
     ec0:	ldp	x19, x20, [sp, #16]
     ec4:	ldp	x21, x22, [sp, #32]
     ec8:	ldp	x23, x24, [sp, #48]
     ecc:	ldp	x25, x26, [sp, #64]
     ed0:	ldp	x27, x28, [sp, #80]
     ed4:	ldp	x29, x30, [sp], #112
     ed8:	ret
     edc:	b.ls	12e8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x640>  // b.plast
     ee0:	mov	x0, #0x1                   	// #1
     ee4:	cmp	w3, #0x40
     ee8:	lsl	x0, x0, x19
     eec:	mvn	x0, x0
     ef0:	ldr	x1, [x25, #136]
     ef4:	b.hi	120c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x564>  // b.pmore
     ef8:	and	x0, x1, x0
     efc:	str	x0, [x25, #136]
     f00:	ldr	x10, [x25, #8]
     f04:	ldr	w0, [x10, #8]
     f08:	ldr	x1, [x10]
     f0c:	cmp	w0, w19
     f10:	ldr	x4, [x10, #48]
     f14:	b.ls	1308 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x660>  // b.plast
     f18:	mov	w0, #0x18                  	// #24
     f1c:	umaddl	x0, w19, w0, x1
     f20:	ldr	w0, [x0, #4]
     f24:	lsl	x0, x0, #1
     f28:	adds	x1, x4, x0
     f2c:	b.eq	1328 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x680>  // b.none
     f30:	ldrh	w0, [x4, x0]
     f34:	add	x1, x1, #0x2
     f38:	mov	x11, #0x1                   	// #1
     f3c:	cmp	w0, #0x0
     f40:	add	w5, w19, w0
     f44:	csel	x1, x1, xzr, ne  // ne = any
     f48:	and	w5, w5, #0xffff
     f4c:	mov	x6, x1
     f50:	cbz	x6, e04 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x15c>
     f54:	cmp	w5, w3
     f58:	b.cs	12e8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x640>  // b.hs, b.nlast
     f5c:	lsl	x4, x11, x5
     f60:	cmp	w3, #0x40
     f64:	mvn	x4, x4
     f68:	ldr	x7, [x20]
     f6c:	b.hi	10a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3fc>  // b.pmore
     f70:	and	x4, x7, x4
     f74:	str	x4, [x20]
     f78:	ldrh	w0, [x6], #2
     f7c:	mov	x1, #0x0                   	// #0
     f80:	add	w5, w5, w0
     f84:	and	w5, w5, #0xffff
     f88:	cbnz	w0, f50 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2a8>
     f8c:	mov	x6, x1
     f90:	b	f50 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2a8>
     f94:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     f98:	add	x0, x0, #0x0
     f9c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     fa0:	tst	w0, #0xff
     fa4:	b.eq	cf4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4c>  // b.none
     fa8:	bl	0 <_ZN4llvm4dbgsEv>
     fac:	mov	x1, x0
     fb0:	ldp	x2, x4, [x0, #16]
     fb4:	sub	x2, x2, x4
     fb8:	cmp	x2, #0x20
     fbc:	b.ls	1298 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5f0>  // b.plast
     fc0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     fc4:	add	x0, x0, #0x0
     fc8:	ldp	x2, x3, [x0]
     fcc:	stp	x2, x3, [x4]
     fd0:	ldrb	w5, [x0, #32]
     fd4:	ldp	x2, x3, [x0, #16]
     fd8:	stp	x2, x3, [x4, #16]
     fdc:	strb	w5, [x4, #32]
     fe0:	ldr	x0, [x1, #24]
     fe4:	add	x0, x0, #0x21
     fe8:	str	x0, [x1, #24]
     fec:	mov	x0, x1
     ff0:	mov	w1, w22
     ff4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ff8:	mov	x21, x0
     ffc:	ldp	x1, x2, [x0, #16]
    1000:	sub	x1, x1, x2
    1004:	cmp	x1, #0x1
    1008:	b.ls	1280 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5d8>  // b.plast
    100c:	mov	w0, #0x202c                	// #8236
    1010:	strh	w0, [x2]
    1014:	ldr	x0, [x21, #24]
    1018:	add	x0, x0, #0x2
    101c:	str	x0, [x21, #24]
    1020:	ldr	x0, [x25, #8]
    1024:	ldr	w1, [x0, #8]
    1028:	ldr	x2, [x0]
    102c:	cmp	w19, w1
    1030:	ldr	x0, [x0, #64]
    1034:	b.cs	1308 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x660>  // b.hs, b.nlast
    1038:	mov	w1, #0x18                  	// #24
    103c:	and	x20, x19, #0xffff
    1040:	umull	x1, w19, w1
    1044:	ldr	w26, [x2, x1]
    1048:	adds	x26, x0, x26
    104c:	b.eq	1258 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>  // b.none
    1050:	mov	x0, x26
    1054:	bl	0 <strlen>
    1058:	mov	x27, x0
    105c:	ldp	x3, x0, [x21, #16]
    1060:	sub	x3, x3, x0
    1064:	cmp	x27, x3
    1068:	b.hi	1244 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x59c>  // b.pmore
    106c:	cbz	x27, 1260 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b8>
    1070:	mov	x1, x26
    1074:	mov	x2, x27
    1078:	bl	0 <memcpy>
    107c:	ldp	x3, x1, [x21, #16]
    1080:	add	x0, x1, x27
    1084:	str	x0, [x21, #24]
    1088:	sub	x3, x3, x0
    108c:	b	1260 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b8>
    1090:	ubfx	x7, x5, #6, #10
    1094:	ldr	x1, [x0, x7, lsl #3]
    1098:	orr	x1, x1, x6
    109c:	str	x1, [x0, x7, lsl #3]
    10a0:	b	de8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x140>
    10a4:	ubfx	x1, x5, #6, #10
    10a8:	ldr	x0, [x7, x1, lsl #3]
    10ac:	and	x4, x0, x4
    10b0:	str	x4, [x7, x1, lsl #3]
    10b4:	b	f78 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2d0>
    10b8:	ldr	x6, [x25, #112]
    10bc:	ubfiz	x0, x21, #5, #32
    10c0:	ldr	x4, [x10]
    10c4:	add	x1, x6, x0
    10c8:	ldr	x3, [x10, #48]
    10cc:	str	w22, [x6, x0]
    10d0:	strh	wzr, [x1, #26]
    10d4:	ldr	w0, [x10, #8]
    10d8:	str	x24, [x1, #8]
    10dc:	cmp	w21, w0
    10e0:	b.cs	1308 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x660>  // b.hs, b.nlast
    10e4:	mov	w0, #0x18                  	// #24
    10e8:	umaddl	x0, w21, w0, x4
    10ec:	ldr	w0, [x0, #4]
    10f0:	lsl	x0, x0, #1
    10f4:	adds	x7, x3, x0
    10f8:	b.eq	1328 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x680>  // b.none
    10fc:	ldrh	w5, [x3, x0]
    1100:	add	x7, x7, #0x2
    1104:	cmp	w5, #0x0
    1108:	add	w5, w5, w21
    110c:	and	w5, w5, #0xffff
    1110:	csel	x7, x7, xzr, ne  // ne = any
    1114:	nop
    1118:	mov	x3, x7
    111c:	cbz	x3, 1150 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4a8>
    1120:	ubfiz	x0, x5, #5, #16
    1124:	mov	x7, #0x0                   	// #0
    1128:	add	x4, x6, x0
    112c:	str	w28, [x6, x0]
    1130:	strh	wzr, [x4, #26]
    1134:	str	x24, [x4, #8]
    1138:	ldrh	w4, [x3], #2
    113c:	add	w0, w4, w5
    1140:	and	w0, w0, #0xffff
    1144:	cbz	w4, 1118 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x470>
    1148:	mov	w5, w0
    114c:	cbnz	x3, 1120 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x478>
    1150:	cbz	w9, e08 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x160>
    1154:	ldr	x3, [sp, #104]
    1158:	mov	x2, x23
    115c:	add	x1, x1, #0x10
    1160:	mov	x0, x25
    1164:	bl	ae8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
    1168:	ldrb	w2, [x24, #20]
    116c:	b	e08 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x160>
    1170:	b.ls	12e8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x640>  // b.plast
    1174:	cmp	w2, #0x40
    1178:	lsl	x2, x5, x1
    117c:	mvn	x2, x2
    1180:	ldr	x3, [x20]
    1184:	b.hi	11a8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x500>  // b.pmore
    1188:	and	x2, x3, x2
    118c:	str	x2, [x20]
    1190:	b	ea4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1fc>
    1194:	ubfx	x6, x1, #6, #10
    1198:	ldr	x4, [x2, x6, lsl #3]
    119c:	orr	x3, x4, x3
    11a0:	str	x3, [x2, x6, lsl #3]
    11a4:	b	ea4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1fc>
    11a8:	ubfx	x6, x1, #6, #10
    11ac:	ldr	x4, [x3, x6, lsl #3]
    11b0:	and	x2, x4, x2
    11b4:	str	x2, [x3, x6, lsl #3]
    11b8:	b	ea4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1fc>
    11bc:	cbnz	w2, 1220 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x578>
    11c0:	ubfiz	x3, x21, #5, #16
    11c4:	add	x0, x1, x3
    11c8:	ldr	x0, [x0, #8]
    11cc:	cbz	x0, 1238 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x590>
    11d0:	ldr	w1, [x1, x3]
    11d4:	cmp	w22, w1
    11d8:	b.eq	1238 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x590>  // b.none
    11dc:	cbnz	w26, 1348 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6a0>
    11e0:	mov	x2, x24
    11e4:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
    11e8:	ldrb	w2, [x24, #20]
    11ec:	mov	w19, w21
    11f0:	mov	w9, #0x0                   	// #0
    11f4:	b	d30 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x88>
    11f8:	lsr	w5, w19, #6
    11fc:	ldr	x4, [x1, x5, lsl #3]
    1200:	orr	x0, x4, x0
    1204:	str	x0, [x1, x5, lsl #3]
    1208:	b	d70 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xc8>
    120c:	lsr	w5, w19, #6
    1210:	ldr	x4, [x1, x5, lsl #3]
    1214:	and	x0, x4, x0
    1218:	str	x0, [x1, x5, lsl #3]
    121c:	b	f00 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x258>
    1220:	ldr	w3, [x25, #144]
    1224:	mov	w19, w21
    1228:	add	x20, x25, #0x88
    122c:	cmp	w3, w19
    1230:	cbz	w27, edc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x234>
    1234:	b	d50 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xa8>
    1238:	mov	w19, w21
    123c:	mov	w9, #0x0                   	// #0
    1240:	b	d38 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x90>
    1244:	mov	x0, x21
    1248:	mov	x2, x27
    124c:	mov	x1, x26
    1250:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1254:	mov	x21, x0
    1258:	ldp	x3, x0, [x21, #16]
    125c:	sub	x3, x3, x0
    1260:	cmp	x3, #0x1
    1264:	b.ls	12b0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x608>  // b.plast
    1268:	mov	w1, #0xa5d                 	// #2653
    126c:	strh	w1, [x0]
    1270:	ldr	x0, [x21, #24]
    1274:	add	x0, x0, #0x2
    1278:	str	x0, [x21, #24]
    127c:	b	cf8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x50>
    1280:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1284:	mov	x2, #0x2                   	// #2
    1288:	add	x1, x1, #0x0
    128c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1290:	mov	x21, x0
    1294:	b	1020 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x378>
    1298:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    129c:	add	x1, x1, #0x0
    12a0:	mov	x2, #0x21                  	// #33
    12a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    12a8:	mov	x1, x0
    12ac:	b	fec <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x344>
    12b0:	mov	x0, x21
    12b4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12b8:	mov	x2, #0x2                   	// #2
    12bc:	add	x1, x1, #0x0
    12c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    12c4:	b	cf8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x50>
    12c8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12cc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12d0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12d4:	add	x3, x3, #0x0
    12d8:	add	x1, x1, #0x0
    12dc:	add	x0, x0, #0x0
    12e0:	mov	w2, #0x59d                 	// #1437
    12e4:	bl	0 <__assert_fail>
    12e8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12ec:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12f0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12f4:	add	x3, x3, #0x0
    12f8:	add	x1, x1, #0x0
    12fc:	add	x0, x0, #0x0
    1300:	mov	w2, #0x5e7                 	// #1511
    1304:	bl	0 <__assert_fail>
    1308:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    130c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1310:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1314:	add	x3, x3, #0x0
    1318:	add	x1, x1, #0x0
    131c:	add	x0, x0, #0x0
    1320:	mov	w2, #0x1b8                 	// #440
    1324:	bl	0 <__assert_fail>
    1328:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    132c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1330:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1334:	add	x3, x3, #0x0
    1338:	add	x1, x1, #0x0
    133c:	add	x0, x0, #0x0
    1340:	mov	w2, #0xd1                  	// #209
    1344:	bl	0 <__assert_fail>
    1348:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    134c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1350:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1354:	add	x3, x3, #0x0
    1358:	add	x1, x1, #0x0
    135c:	add	x0, x0, #0x0
    1360:	mov	w2, #0xbe                  	// #190
    1364:	bl	0 <__assert_fail>
    1368:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    136c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1370:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1374:	add	x3, x3, #0x0
    1378:	add	x1, x1, #0x0
    137c:	add	x0, x0, #0x0
    1380:	mov	w2, #0x97                  	// #151
    1384:	bl	0 <__assert_fail>

0000000000001388 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
    1388:	stp	x29, x30, [sp, #-64]!
    138c:	mov	x29, sp
    1390:	stp	x21, x22, [sp, #32]
    1394:	mov	x22, x0
    1398:	ldrb	w0, [x1, #22]
    139c:	cbnz	w0, 1500 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x178>
    13a0:	stp	x19, x20, [sp, #16]
    13a4:	mov	x19, x1
    13a8:	ldrh	w20, [x1, #12]
    13ac:	str	x23, [sp, #48]
    13b0:	cbz	w20, 1548 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1c0>
    13b4:	ldr	w0, [x1, #8]
    13b8:	cmn	w0, #0x200
    13bc:	b.eq	15c8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x240>  // b.none
    13c0:	cmp	w0, #0x0
    13c4:	b.gt	15a8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x220>
    13c8:	ldr	x5, [x22, #112]
    13cc:	ubfiz	x23, x20, #5, #16
    13d0:	and	x21, x20, #0xffff
    13d4:	add	x1, x5, x23
    13d8:	ldrh	w0, [x1, #24]
    13dc:	cmp	w0, #0x0
    13e0:	ccmp	w0, w20, #0x4, ne  // ne = any
    13e4:	b.ne	150c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x184>  // b.any
    13e8:	ldrb	w0, [x19, #21]
    13ec:	cbnz	w0, 1404 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x7c>
    13f0:	add	x1, x1, #0x10
    13f4:	mov	x0, x22
    13f8:	bl	bc8 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
    13fc:	ldr	x5, [x22, #112]
    1400:	add	x1, x5, x23
    1404:	ldr	x0, [x1, #8]
    1408:	cmp	x19, x0
    140c:	b.eq	1530 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1a8>  // b.none
    1410:	ldr	x0, [x22, #8]
    1414:	ldr	w2, [x0, #8]
    1418:	ldr	x1, [x0]
    141c:	cmp	w20, w2
    1420:	ldr	x6, [x0, #48]
    1424:	b.cs	1568 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1e0>  // b.hs, b.nlast
    1428:	add	x21, x21, x21, lsl #1
    142c:	add	x21, x1, x21, lsl #3
    1430:	ldr	w0, [x21, #4]
    1434:	lsl	x0, x0, #1
    1438:	adds	x1, x6, x0
    143c:	b.eq	1588 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x200>  // b.none
    1440:	ldrh	w4, [x6, x0]
    1444:	add	x1, x1, #0x2
    1448:	cmp	w4, #0x0
    144c:	add	w4, w20, w4
    1450:	and	w4, w4, #0xffff
    1454:	csel	x1, x1, xzr, ne  // ne = any
    1458:	mov	x2, x1
    145c:	cbz	x2, 1490 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x108>
    1460:	ubfiz	x0, x4, #5, #16
    1464:	add	x0, x5, x0
    1468:	ldr	x1, [x0, #8]
    146c:	cmp	x19, x1
    1470:	b.eq	1538 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1b0>  // b.none
    1474:	ldrh	w3, [x2], #2
    1478:	mov	x1, #0x0                   	// #0
    147c:	add	w0, w3, w4
    1480:	and	w0, w0, #0xffff
    1484:	cbz	w3, 1458 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xd0>
    1488:	mov	w4, w0
    148c:	cbnz	x2, 1460 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xd8>
    1490:	ldrb	w0, [x19, #20]
    1494:	cbz	w0, 14f8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x170>
    1498:	ldr	w0, [x21, #8]
    149c:	lsl	x0, x0, #1
    14a0:	adds	x4, x6, x0
    14a4:	b.eq	1588 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x200>  // b.none
    14a8:	ldrh	w0, [x6, x0]
    14ac:	add	x4, x4, #0x2
    14b0:	add	w1, w20, w0
    14b4:	cmp	w0, #0x0
    14b8:	and	w1, w1, #0xffff
    14bc:	csel	x4, x4, xzr, ne  // ne = any
    14c0:	mov	x2, x4
    14c4:	cbz	x2, 14f8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x170>
    14c8:	ubfiz	x0, x1, #5, #16
    14cc:	add	x0, x5, x0
    14d0:	ldr	x3, [x0, #8]
    14d4:	cmp	x19, x3
    14d8:	b.eq	1540 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1b8>  // b.none
    14dc:	ldrh	w3, [x2], #2
    14e0:	mov	x4, #0x0                   	// #0
    14e4:	add	w0, w3, w1
    14e8:	and	w0, w0, #0xffff
    14ec:	cbz	w3, 14c0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x138>
    14f0:	mov	w1, w0
    14f4:	cbnz	x2, 14c8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x140>
    14f8:	ldp	x19, x20, [sp, #16]
    14fc:	ldr	x23, [sp, #48]
    1500:	ldp	x21, x22, [sp, #32]
    1504:	ldp	x29, x30, [sp], #64
    1508:	ret
    150c:	ldrb	w4, [x19, #20]
    1510:	ubfiz	x23, x0, #5, #16
    1514:	add	x1, x5, x23
    1518:	and	x21, x0, #0xffff
    151c:	mov	w20, w0
    1520:	cbnz	w4, 13e8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x60>
    1524:	ldr	x0, [x1, #8]
    1528:	cmp	x19, x0
    152c:	b.ne	1410 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>  // b.any
    1530:	str	xzr, [x1, #8]
    1534:	b	1410 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>
    1538:	str	xzr, [x0, #8]
    153c:	b	1474 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xec>
    1540:	str	xzr, [x0, #8]
    1544:	b	14dc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x154>
    1548:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    154c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1550:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1554:	add	x3, x3, #0x0
    1558:	add	x1, x1, #0x0
    155c:	add	x0, x0, #0x0
    1560:	mov	w2, #0xfc                  	// #252
    1564:	bl	0 <__assert_fail>
    1568:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    156c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1570:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1574:	add	x3, x3, #0x0
    1578:	add	x1, x1, #0x0
    157c:	add	x0, x0, #0x0
    1580:	mov	w2, #0x1b8                 	// #440
    1584:	bl	0 <__assert_fail>
    1588:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    158c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1590:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1594:	add	x3, x3, #0x0
    1598:	add	x1, x1, #0x0
    159c:	add	x0, x0, #0x0
    15a0:	mov	w2, #0xd1                  	// #209
    15a4:	bl	0 <__assert_fail>
    15a8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15ac:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15b0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15b4:	add	x3, x3, #0x0
    15b8:	add	x1, x1, #0x0
    15bc:	add	x0, x0, #0x0
    15c0:	mov	w2, #0xff                  	// #255
    15c4:	bl	0 <__assert_fail>
    15c8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15cc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15d0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    15d4:	add	x3, x3, #0x0
    15d8:	add	x1, x1, #0x0
    15dc:	add	x0, x0, #0x0
    15e0:	mov	w2, #0xfd                  	// #253
    15e4:	bl	0 <__assert_fail>

00000000000015e8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
    15e8:	ldrh	w8, [x2, #8]
    15ec:	mov	x3, x0
    15f0:	ldrh	w5, [x1, #12]
    15f4:	ldr	x9, [x0, #112]
    15f8:	ubfiz	x10, x8, #5, #16
    15fc:	ubfiz	x4, x5, #5, #16
    1600:	add	x10, x9, x10
    1604:	add	x4, x9, x4
    1608:	ldr	w6, [x10, #16]
    160c:	ldr	w0, [x4, #16]
    1610:	cmp	w0, w6
    1614:	b.ne	176c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x184>  // b.any
    1618:	ldrh	w7, [x4, #24]
    161c:	and	x12, x5, #0xffff
    1620:	cmp	w7, #0x0
    1624:	ccmp	w7, w5, #0x4, ne  // ne = any
    1628:	b.ne	1780 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x198>  // b.any
    162c:	stp	x29, x30, [sp, #-16]!
    1630:	mov	x29, sp
    1634:	ldr	w0, [x3, #24]
    1638:	cmp	x0, w6, uxtw
    163c:	b.ls	1848 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x260>  // b.plast
    1640:	ldr	x11, [x3, #16]
    1644:	mov	w0, #0x14                  	// #20
    1648:	umaddl	x11, w6, w0, x11
    164c:	ldr	w0, [x11, #8]
    1650:	cbz	w0, 1660 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x78>
    1654:	ldr	w6, [x11, #12]
    1658:	cmp	w0, w6
    165c:	b.eq	17c0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1d8>  // b.none
    1660:	ldr	w0, [x3, #144]
    1664:	cmp	w8, w0
    1668:	b.cs	17c8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1e0>  // b.hs, b.nlast
    166c:	mov	x6, #0x1                   	// #1
    1670:	cmp	w0, #0x40
    1674:	lsl	x6, x6, x8
    1678:	ldr	x0, [x3, #136]
    167c:	b.hi	1774 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x18c>  // b.pmore
    1680:	ands	x13, x6, x0
    1684:	ldrb	w6, [x11, #16]
    1688:	cset	w0, ne  // ne = any
    168c:	eor	w6, w6, #0x1
    1690:	orr	w0, w0, w6
    1694:	ands	w0, w0, #0xff
    1698:	b.eq	1764 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x17c>  // b.none
    169c:	ldrh	w6, [x10, #24]
    16a0:	cbz	w6, 16b0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xc8>
    16a4:	ubfiz	x10, x6, #5, #16
    16a8:	mov	w8, w6
    16ac:	add	x10, x9, x10
    16b0:	cbnz	w7, 179c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1b4>
    16b4:	ldr	x6, [x3, #8]
    16b8:	ldrh	w3, [x10, #26]
    16bc:	cmp	w3, #0x0
    16c0:	ldr	w7, [x6, #8]
    16c4:	csel	w8, w8, w3, eq  // eq = none
    16c8:	strh	w8, [x4, #26]
    16cc:	cmp	w5, w7
    16d0:	ldr	x7, [x6]
    16d4:	ldr	x4, [x6, #48]
    16d8:	b.cs	17e8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x200>  // b.hs, b.nlast
    16dc:	add	x3, x12, x12, lsl #1
    16e0:	add	x3, x7, x3, lsl #3
    16e4:	ldr	w3, [x3, #4]
    16e8:	lsl	x3, x3, #1
    16ec:	adds	x7, x4, x3
    16f0:	b.eq	1808 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x220>  // b.none
    16f4:	ldrh	w3, [x4, x3]
    16f8:	add	x7, x7, #0x2
    16fc:	add	w5, w5, w3
    1700:	cmp	w3, #0x0
    1704:	and	w5, w5, #0xffff
    1708:	csel	x7, x7, xzr, ne  // ne = any
    170c:	nop
    1710:	mov	x4, x7
    1714:	cbz	x4, 1740 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x158>
    1718:	ubfiz	x3, x5, #5, #16
    171c:	mov	x7, #0x0                   	// #0
    1720:	add	x3, x9, x3
    1724:	strh	w8, [x3, #26]
    1728:	ldrh	w6, [x4], #2
    172c:	add	w3, w6, w5
    1730:	and	w3, w3, #0xffff
    1734:	cbz	w6, 1710 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x128>
    1738:	mov	w5, w3
    173c:	cbnz	x4, 1718 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x130>
    1740:	cbnz	x13, 17b0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1c8>
    1744:	ldr	w2, [x1, #64]
    1748:	cbnz	w2, 1828 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x240>
    174c:	str	wzr, [x1, #8]
    1750:	mov	w2, #0x1                   	// #1
    1754:	strb	w2, [x1, #22]
    1758:	ldr	w1, [x11, #12]
    175c:	add	w1, w1, #0x1
    1760:	str	w1, [x11, #12]
    1764:	ldp	x29, x30, [sp], #16
    1768:	ret
    176c:	mov	w0, #0x0                   	// #0
    1770:	ret
    1774:	lsr	w13, w8, #6
    1778:	ldr	x0, [x0, x13, lsl #3]
    177c:	b	1680 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x98>
    1780:	ubfiz	x0, x7, #5, #16
    1784:	add	x0, x9, x0
    1788:	ldrb	w0, [x0, #28]
    178c:	cbz	w0, 1798 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1b0>
    1790:	ldrb	w0, [x1, #20]
    1794:	cbnz	w0, 162c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x44>
    1798:	ret
    179c:	ubfiz	x4, x7, #5, #16
    17a0:	and	x12, x7, #0xffff
    17a4:	add	x4, x9, x4
    17a8:	mov	w5, w7
    17ac:	b	16b4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>
    17b0:	mov	w3, #0x1                   	// #1
    17b4:	strb	w3, [x1, #21]
    17b8:	strb	w3, [x2, #41]
    17bc:	b	1744 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x15c>
    17c0:	mov	w0, #0x0                   	// #0
    17c4:	b	1764 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x17c>
    17c8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17cc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17d0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17d4:	add	x3, x3, #0x0
    17d8:	add	x1, x1, #0x0
    17dc:	add	x0, x0, #0x0
    17e0:	mov	w2, #0x472                 	// #1138
    17e4:	bl	0 <__assert_fail>
    17e8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17ec:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17f0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17f4:	add	x3, x3, #0x0
    17f8:	add	x1, x1, #0x0
    17fc:	add	x0, x0, #0x0
    1800:	mov	w2, #0x1b8                 	// #440
    1804:	bl	0 <__assert_fail>
    1808:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    180c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1810:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1814:	add	x3, x3, #0x0
    1818:	add	x1, x1, #0x0
    181c:	add	x0, x0, #0x0
    1820:	mov	w2, #0xd1                  	// #209
    1824:	bl	0 <__assert_fail>
    1828:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    182c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1830:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1834:	add	x3, x3, #0x0
    1838:	add	x1, x1, #0x0
    183c:	add	x0, x0, #0x0
    1840:	mov	w2, #0xcf                  	// #207
    1844:	bl	0 <__assert_fail>
    1848:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    184c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1850:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1854:	add	x3, x3, #0x0
    1858:	add	x1, x1, #0x0
    185c:	add	x0, x0, #0x0
    1860:	mov	w2, #0x95                  	// #149
    1864:	bl	0 <__assert_fail>

0000000000001868 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
    1868:	stp	x29, x30, [sp, #-144]!
    186c:	mov	x29, sp
    1870:	stp	x23, x24, [sp, #48]
    1874:	mov	x24, x0
    1878:	add	x3, sp, #0x70
    187c:	add	x0, sp, #0x80
    1880:	stp	x19, x20, [sp, #16]
    1884:	ldr	w23, [x24, #24]
    1888:	stp	x21, x22, [sp, #32]
    188c:	mov	x19, x1
    1890:	mov	x21, x2
    1894:	stp	x25, x26, [sp, #64]
    1898:	cmp	w23, #0x4
    189c:	mov	w22, w23
    18a0:	stp	x27, x28, [sp, #80]
    18a4:	stp	x3, x0, [sp, #104]
    18a8:	mov	x3, #0x400000000           	// #17179869184
    18ac:	str	x3, [sp, #120]
    18b0:	b.hi	1a98 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x230>  // b.pmore
    18b4:	str	w23, [sp, #120]
    18b8:	add	x2, x0, x22, lsl #2
    18bc:	cmp	x0, x2
    18c0:	mov	x1, x0
    18c4:	b.eq	18d4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x6c>  // b.none
    18c8:	str	wzr, [x1], #4
    18cc:	cmp	x2, x1
    18d0:	b.ne	18c8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x60>  // b.any
    18d4:	add	x5, x19, x21, lsl #1
    18d8:	cmp	x19, x5
    18dc:	b.eq	193c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xd4>  // b.none
    18e0:	ldr	x6, [x24, #112]
    18e4:	mov	x4, x19
    18e8:	ldrh	w2, [x4]
    18ec:	ldr	w1, [sp, #120]
    18f0:	add	x2, x6, x2, lsl #5
    18f4:	ldr	w3, [x2, #16]
    18f8:	cbz	w3, 191c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xb4>
    18fc:	cmp	w3, w1
    1900:	mov	w3, w3
    1904:	b.cs	1ac8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x260>  // b.hs, b.nlast
    1908:	ldr	w1, [x0, x3, lsl #2]
    190c:	ldr	w7, [x2, #20]
    1910:	add	w1, w1, w7
    1914:	str	w1, [x0, x3, lsl #2]
    1918:	ldr	w1, [sp, #120]
    191c:	cbz	w1, 1ac8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x260>
    1920:	ldr	w3, [x0]
    1924:	add	x4, x4, #0x2
    1928:	ldr	w2, [x2, #20]
    192c:	cmp	x5, x4
    1930:	add	w2, w3, w2
    1934:	str	w2, [x0]
    1938:	b.ne	18e8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x80>  // b.any
    193c:	ldr	w27, [x24, #24]
    1940:	cbz	w27, 1ac0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x258>
    1944:	adrp	x3, 0 <_ZN4llvm9DebugFlagE>
    1948:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    194c:	add	x23, x23, #0x0
    1950:	mov	x21, #0x0                   	// #0
    1954:	ldr	x20, [x3]
    1958:	mov	x19, #0x0                   	// #0
    195c:	mov	w25, #0x0                   	// #0
    1960:	mov	w28, #0x1                   	// #1
    1964:	nop
    1968:	ldr	w0, [sp, #120]
    196c:	mov	w22, w19
    1970:	cmp	x0, x19
    1974:	b.ls	1ac8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x260>  // b.plast
    1978:	ldr	x0, [sp, #112]
    197c:	ldr	w1, [x0, x19, lsl #2]
    1980:	cbz	w1, 19cc <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x164>
    1984:	ldr	w0, [x24, #24]
    1988:	cmp	x0, x19
    198c:	b.ls	1ae8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x280>  // b.plast
    1990:	ldr	x0, [x24, #16]
    1994:	add	x26, x0, x21
    1998:	ldr	w2, [x0, x21]
    199c:	cbz	w2, 19cc <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x164>
    19a0:	cmp	w2, w1
    19a4:	b.cs	19b4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x14c>  // b.hs, b.nlast
    19a8:	ldrb	w0, [x20]
    19ac:	cbnz	w0, 1a14 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1ac>
    19b0:	mov	w1, w2
    19b4:	ldr	w0, [x26, #4]
    19b8:	lsl	w22, w28, w22
    19bc:	orr	w22, w25, w22
    19c0:	add	w1, w1, w0
    19c4:	cmp	w1, w2
    19c8:	csel	w25, w22, w25, hi  // hi = pmore
    19cc:	add	x19, x19, #0x1
    19d0:	add	x21, x21, #0x14
    19d4:	cmp	w27, w19
    19d8:	b.hi	1968 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x100>  // b.pmore
    19dc:	ldr	x0, [sp, #112]
    19e0:	ldr	x1, [sp, #104]
    19e4:	add	x20, x1, #0x10
    19e8:	cmp	x0, x20
    19ec:	b.eq	19f4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x18c>  // b.none
    19f0:	bl	0 <free>
    19f4:	mov	w0, w25
    19f8:	ldp	x19, x20, [sp, #16]
    19fc:	ldp	x21, x22, [sp, #32]
    1a00:	ldp	x23, x24, [sp, #48]
    1a04:	ldp	x25, x26, [sp, #64]
    1a08:	ldp	x27, x28, [sp, #80]
    1a0c:	ldp	x29, x30, [sp], #144
    1a10:	ret
    1a14:	mov	x0, x23
    1a18:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1a1c:	tst	w0, #0xff
    1a20:	b.ne	1a2c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1c4>  // b.any
    1a24:	ldr	w2, [x26]
    1a28:	b	19b0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x148>
    1a2c:	bl	0 <_ZN4llvm4dbgsEv>
    1a30:	mov	x1, x0
    1a34:	ldp	x2, x6, [x0, #16]
    1a38:	sub	x2, x2, x6
    1a3c:	cmp	x2, #0x2a
    1a40:	b.ls	1a80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x218>  // b.plast
    1a44:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1a48:	add	x0, x0, #0x0
    1a4c:	ldp	x4, x5, [x0]
    1a50:	stp	x4, x5, [x6]
    1a54:	ldr	x2, [x0, #32]
    1a58:	str	x2, [x6, #32]
    1a5c:	ldur	w2, [x0, #39]
    1a60:	ldp	x4, x5, [x0, #16]
    1a64:	stp	x4, x5, [x6, #16]
    1a68:	stur	w2, [x6, #39]
    1a6c:	ldr	x0, [x1, #24]
    1a70:	ldr	w2, [x26]
    1a74:	add	x0, x0, #0x2b
    1a78:	str	x0, [x1, #24]
    1a7c:	b	19b0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x148>
    1a80:	mov	x2, #0x2b                  	// #43
    1a84:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1a88:	add	x1, x1, #0x0
    1a8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a90:	ldr	w2, [x26]
    1a94:	b	19b0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x148>
    1a98:	mov	x1, x0
    1a9c:	mov	x2, x22
    1aa0:	ldr	x0, [sp, #104]
    1aa4:	mov	x3, #0x4                   	// #4
    1aa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1aac:	ldr	w0, [sp, #124]
    1ab0:	cmp	x22, x0
    1ab4:	b.hi	1b08 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x2a0>  // b.pmore
    1ab8:	ldr	x0, [sp, #112]
    1abc:	b	18b4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x4c>
    1ac0:	mov	w25, #0x0                   	// #0
    1ac4:	b	19e0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x178>
    1ac8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1acc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1ad0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1ad4:	add	x3, x3, #0x0
    1ad8:	add	x1, x1, #0x0
    1adc:	add	x0, x0, #0x0
    1ae0:	mov	w2, #0x95                  	// #149
    1ae4:	bl	0 <__assert_fail>
    1ae8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1aec:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1af0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1af4:	add	x3, x3, #0x0
    1af8:	add	x1, x1, #0x0
    1afc:	add	x0, x0, #0x0
    1b00:	mov	w2, #0x99                  	// #153
    1b04:	bl	0 <__assert_fail>
    1b08:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1b0c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1b10:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1b14:	add	x3, x3, #0x0
    1b18:	add	x1, x1, #0x0
    1b1c:	add	x0, x0, #0x0
    1b20:	mov	w2, #0x43                  	// #67
    1b24:	bl	0 <__assert_fail>

0000000000001b28 <_ZNK4llvm3mca12RegisterFile4dumpEv>:
    1b28:	stp	x29, x30, [sp, #-112]!
    1b2c:	mov	x29, sp
    1b30:	stp	x19, x20, [sp, #16]
    1b34:	mov	x20, x0
    1b38:	ldr	x0, [x0, #8]
    1b3c:	stp	x23, x24, [sp, #48]
    1b40:	stp	x21, x22, [sp, #32]
    1b44:	ldr	w23, [x0, #8]
    1b48:	stp	x25, x26, [sp, #64]
    1b4c:	cbz	w23, 1de0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2b8>
    1b50:	adrp	x26, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1b54:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1b58:	add	x0, x26, #0x0
    1b5c:	add	x25, x25, #0x0
    1b60:	mov	x19, #0x0                   	// #0
    1b64:	mov	x24, #0x1                   	// #1
    1b68:	stp	x27, x28, [sp, #80]
    1b6c:	str	x0, [sp, #96]
    1b70:	b	1b80 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>
    1b74:	add	x19, x19, #0x1
    1b78:	cmp	w23, w19
    1b7c:	b.ls	1ddc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2b4>  // b.plast
    1b80:	ldr	w0, [x20, #144]
    1b84:	mov	w21, w19
    1b88:	cmp	w0, w19
    1b8c:	b.ls	207c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x554>  // b.plast
    1b90:	cmp	w0, #0x40
    1b94:	lsl	x22, x24, x19
    1b98:	ldr	x0, [x20, #136]
    1b9c:	b.ls	1ba8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x80>  // b.plast
    1ba0:	lsr	w1, w19, #6
    1ba4:	ldr	x0, [x0, x1, lsl #3]
    1ba8:	tst	x22, x0
    1bac:	b.eq	1b74 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>  // b.none
    1bb0:	ldr	x28, [x20, #112]
    1bb4:	bl	0 <_ZN4llvm4dbgsEv>
    1bb8:	ldr	x1, [x20, #8]
    1bbc:	mov	x27, x0
    1bc0:	ldr	w0, [x1, #8]
    1bc4:	ldr	x2, [x1]
    1bc8:	cmp	w0, w21
    1bcc:	ldr	x1, [x1, #64]
    1bd0:	b.ls	209c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x574>  // b.plast
    1bd4:	add	x0, x19, x19, lsl #1
    1bd8:	lsl	x0, x0, #3
    1bdc:	ldr	w0, [x2, x0]
    1be0:	adds	x26, x1, x0
    1be4:	b.eq	1f40 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x418>  // b.none
    1be8:	mov	x0, x26
    1bec:	bl	0 <strlen>
    1bf0:	mov	x2, x0
    1bf4:	ldp	x3, x0, [x27, #16]
    1bf8:	sub	x3, x3, x0
    1bfc:	cmp	x2, x3
    1c00:	b.hi	1f30 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x408>  // b.pmore
    1c04:	cbz	x2, 1c28 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x100>
    1c08:	mov	x1, x26
    1c0c:	str	x2, [sp, #104]
    1c10:	bl	0 <memcpy>
    1c14:	ldp	x3, x1, [x27, #16]
    1c18:	ldr	x2, [sp, #104]
    1c1c:	add	x0, x1, x2
    1c20:	str	x0, [x27, #24]
    1c24:	sub	x3, x3, x0
    1c28:	cmp	x3, #0x1
    1c2c:	b.ls	1f50 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x428>  // b.plast
    1c30:	mov	w1, #0x202c                	// #8236
    1c34:	strh	w1, [x0]
    1c38:	mov	x1, x19
    1c3c:	ldr	x0, [x27, #24]
    1c40:	add	x0, x0, #0x2
    1c44:	str	x0, [x27, #24]
    1c48:	mov	x0, x27
    1c4c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1c50:	mov	x1, x0
    1c54:	ldp	x2, x3, [x0, #16]
    1c58:	sub	x2, x2, x3
    1c5c:	cmp	x2, #0x5
    1c60:	b.ls	1f88 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x460>  // b.plast
    1c64:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c68:	add	x0, x0, #0x0
    1c6c:	ldr	w2, [x0]
    1c70:	ldrh	w0, [x0, #4]
    1c74:	str	w2, [x3]
    1c78:	strh	w0, [x3, #4]
    1c7c:	ldr	x0, [x1, #24]
    1c80:	add	x0, x0, #0x6
    1c84:	str	x0, [x1, #24]
    1c88:	add	x28, x28, x19, lsl #5
    1c8c:	mov	x0, x1
    1c90:	ldr	w1, [x28, #16]
    1c94:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1c98:	mov	x2, x0
    1c9c:	ldp	x1, x3, [x0, #16]
    1ca0:	sub	x1, x1, x3
    1ca4:	cmp	x1, #0x6
    1ca8:	b.ls	2040 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x518>  // b.plast
    1cac:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cb0:	add	x0, x0, #0x0
    1cb4:	ldr	w1, [x0]
    1cb8:	ldur	w0, [x0, #3]
    1cbc:	str	w1, [x3]
    1cc0:	stur	w0, [x3, #3]
    1cc4:	ldr	x0, [x2, #24]
    1cc8:	add	x0, x0, #0x7
    1ccc:	str	x0, [x2, #24]
    1cd0:	ldr	w1, [x28, #20]
    1cd4:	mov	x0, x2
    1cd8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1cdc:	mov	x2, x0
    1ce0:	ldp	x1, x3, [x0, #16]
    1ce4:	sub	x1, x1, x3
    1ce8:	cmp	x1, #0xa
    1cec:	b.ls	2028 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x500>  // b.plast
    1cf0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cf4:	add	x0, x0, #0x0
    1cf8:	ldr	x1, [x0]
    1cfc:	str	x1, [x3]
    1d00:	ldur	w0, [x0, #7]
    1d04:	stur	w0, [x3, #7]
    1d08:	ldr	x0, [x2, #24]
    1d0c:	add	x0, x0, #0xb
    1d10:	str	x0, [x2, #24]
    1d14:	ldrh	w1, [x28, #24]
    1d18:	mov	x0, x2
    1d1c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1d20:	mov	x1, x0
    1d24:	ldp	x2, x3, [x0, #16]
    1d28:	sub	x2, x2, x3
    1d2c:	cmp	x2, #0x8
    1d30:	b.ls	1ff8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4d0>  // b.plast
    1d34:	ldr	x0, [x25]
    1d38:	str	x0, [x3]
    1d3c:	ldrb	w0, [x25, #8]
    1d40:	strb	w0, [x3, #8]
    1d44:	ldr	x0, [x1, #24]
    1d48:	add	x0, x0, #0x9
    1d4c:	str	x0, [x1, #24]
    1d50:	ldr	w0, [x20, #144]
    1d54:	cmp	w0, w21
    1d58:	b.ls	207c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x554>  // b.plast
    1d5c:	cmp	w0, #0x40
    1d60:	ldr	x0, [x20, #136]
    1d64:	b.ls	1d70 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x248>  // b.plast
    1d68:	lsr	w21, w21, #6
    1d6c:	ldr	x0, [x0, x21, lsl #3]
    1d70:	tst	x22, x0
    1d74:	mov	x0, x1
    1d78:	cset	x1, ne  // ne = any
    1d7c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1d80:	mov	x1, x0
    1d84:	ldp	x3, x2, [x0, #16]
    1d88:	cmp	x3, x2
    1d8c:	b.eq	2018 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4f0>  // b.none
    1d90:	mov	w0, #0x2c                  	// #44
    1d94:	strb	w0, [x2]
    1d98:	ldr	x0, [x1, #24]
    1d9c:	add	x0, x0, #0x1
    1da0:	str	x0, [x1, #24]
    1da4:	mov	x0, x28
    1da8:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
    1dac:	bl	0 <_ZN4llvm4dbgsEv>
    1db0:	mov	x1, x0
    1db4:	ldp	x3, x2, [x0, #16]
    1db8:	cmp	x3, x2
    1dbc:	b.ls	200c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4e4>  // b.plast
    1dc0:	add	x0, x2, #0x1
    1dc4:	str	x0, [x1, #24]
    1dc8:	mov	w0, #0xa                   	// #10
    1dcc:	strb	w0, [x2]
    1dd0:	add	x19, x19, #0x1
    1dd4:	cmp	w23, w19
    1dd8:	b.hi	1b80 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>  // b.pmore
    1ddc:	ldp	x27, x28, [sp, #80]
    1de0:	ldr	w24, [x20, #24]
    1de4:	cbz	w24, 1fb8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x490>
    1de8:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1dec:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1df0:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1df4:	add	x25, x25, #0x0
    1df8:	add	x23, x23, #0x0
    1dfc:	add	x22, x22, #0x0
    1e00:	mov	x21, #0x0                   	// #0
    1e04:	mov	x19, #0x0                   	// #0
    1e08:	b	1f04 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3dc>
    1e0c:	ldr	x0, [x25]
    1e10:	str	x0, [x3]
    1e14:	ldur	x0, [x25, #7]
    1e18:	stur	x0, [x3, #7]
    1e1c:	ldr	x0, [x1, #24]
    1e20:	add	x0, x0, #0xf
    1e24:	str	x0, [x1, #24]
    1e28:	mov	x0, x1
    1e2c:	mov	x1, x19
    1e30:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1e34:	ldr	w0, [x20, #24]
    1e38:	cmp	w0, w19
    1e3c:	b.ls	2058 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x530>  // b.plast
    1e40:	ldr	x26, [x20, #16]
    1e44:	bl	0 <_ZN4llvm4dbgsEv>
    1e48:	ldp	x1, x3, [x0, #16]
    1e4c:	add	x26, x26, x21
    1e50:	mov	x2, x0
    1e54:	sub	x1, x1, x3
    1e58:	cmp	x1, #0x18
    1e5c:	b.ls	1fe4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4bc>  // b.plast
    1e60:	ldp	x0, x1, [x23]
    1e64:	stp	x0, x1, [x3]
    1e68:	ldrb	w0, [x23, #24]
    1e6c:	ldr	x1, [x23, #16]
    1e70:	str	x1, [x3, #16]
    1e74:	strb	w0, [x3, #24]
    1e78:	ldr	x0, [x2, #24]
    1e7c:	add	x0, x0, #0x19
    1e80:	str	x0, [x2, #24]
    1e84:	ldr	w1, [x26]
    1e88:	mov	x0, x2
    1e8c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1e90:	mov	x2, x0
    1e94:	ldp	x1, x3, [x0, #16]
    1e98:	sub	x1, x1, x3
    1e9c:	cmp	x1, #0x18
    1ea0:	b.ls	1fd0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a8>  // b.plast
    1ea4:	ldp	x0, x1, [x22]
    1ea8:	stp	x0, x1, [x3]
    1eac:	ldrb	w0, [x22, #24]
    1eb0:	ldr	x1, [x22, #16]
    1eb4:	str	x1, [x3, #16]
    1eb8:	strb	w0, [x3, #24]
    1ebc:	ldr	x0, [x2, #24]
    1ec0:	add	x0, x0, #0x19
    1ec4:	str	x0, [x2, #24]
    1ec8:	ldr	w1, [x26, #4]
    1ecc:	mov	x0, x2
    1ed0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1ed4:	mov	x1, x0
    1ed8:	ldp	x3, x2, [x0, #16]
    1edc:	cmp	x2, x3
    1ee0:	b.cs	1fa0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x478>  // b.hs, b.nlast
    1ee4:	add	x0, x2, #0x1
    1ee8:	str	x0, [x1, #24]
    1eec:	mov	w0, #0xa                   	// #10
    1ef0:	strb	w0, [x2]
    1ef4:	add	x19, x19, #0x1
    1ef8:	add	x21, x21, #0x14
    1efc:	cmp	w24, w19
    1f00:	b.ls	1fb8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x490>  // b.plast
    1f04:	bl	0 <_ZN4llvm4dbgsEv>
    1f08:	mov	x1, x0
    1f0c:	ldp	x2, x3, [x0, #16]
    1f10:	sub	x2, x2, x3
    1f14:	cmp	x2, #0xe
    1f18:	b.hi	1e0c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2e4>  // b.pmore
    1f1c:	mov	x1, x25
    1f20:	mov	x2, #0xf                   	// #15
    1f24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f28:	mov	x1, x0
    1f2c:	b	1e28 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x300>
    1f30:	mov	x0, x27
    1f34:	mov	x1, x26
    1f38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f3c:	mov	x27, x0
    1f40:	ldp	x3, x0, [x27, #16]
    1f44:	sub	x3, x3, x0
    1f48:	cmp	x3, #0x1
    1f4c:	b.hi	1c30 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x108>  // b.pmore
    1f50:	mov	x2, #0x2                   	// #2
    1f54:	mov	x0, x27
    1f58:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1f5c:	add	x1, x1, #0x0
    1f60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f64:	mov	x27, x0
    1f68:	mov	x1, x19
    1f6c:	mov	x0, x27
    1f70:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1f74:	mov	x1, x0
    1f78:	ldp	x2, x3, [x0, #16]
    1f7c:	sub	x2, x2, x3
    1f80:	cmp	x2, #0x5
    1f84:	b.hi	1c64 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x13c>  // b.pmore
    1f88:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1f8c:	add	x1, x1, #0x0
    1f90:	mov	x2, #0x6                   	// #6
    1f94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f98:	mov	x1, x0
    1f9c:	b	1c88 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x160>
    1fa0:	add	x19, x19, #0x1
    1fa4:	mov	w1, #0xa                   	// #10
    1fa8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1fac:	add	x21, x21, #0x14
    1fb0:	cmp	w24, w19
    1fb4:	b.hi	1f04 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3dc>  // b.pmore
    1fb8:	ldp	x19, x20, [sp, #16]
    1fbc:	ldp	x21, x22, [sp, #32]
    1fc0:	ldp	x23, x24, [sp, #48]
    1fc4:	ldp	x25, x26, [sp, #64]
    1fc8:	ldp	x29, x30, [sp], #112
    1fcc:	ret
    1fd0:	mov	x2, #0x19                  	// #25
    1fd4:	mov	x1, x22
    1fd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fdc:	mov	x2, x0
    1fe0:	b	1ec8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3a0>
    1fe4:	mov	x2, #0x19                  	// #25
    1fe8:	mov	x1, x23
    1fec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ff0:	mov	x2, x0
    1ff4:	b	1e84 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x35c>
    1ff8:	mov	x1, x25
    1ffc:	mov	x2, #0x9                   	// #9
    2000:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2004:	mov	x1, x0
    2008:	b	1d50 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x228>
    200c:	mov	w1, #0xa                   	// #10
    2010:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2014:	b	1b74 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>
    2018:	ldr	x1, [sp, #96]
    201c:	mov	x2, #0x1                   	// #1
    2020:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2024:	b	1da4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x27c>
    2028:	mov	x2, #0xb                   	// #11
    202c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2030:	add	x1, x1, #0x0
    2034:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2038:	mov	x2, x0
    203c:	b	1d14 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1ec>
    2040:	mov	x2, #0x7                   	// #7
    2044:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2048:	add	x1, x1, #0x0
    204c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2050:	mov	x2, x0
    2054:	b	1cd0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1a8>
    2058:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    205c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2060:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2064:	add	x3, x3, #0x0
    2068:	add	x1, x1, #0x0
    206c:	add	x0, x0, #0x0
    2070:	mov	w2, #0x99                  	// #153
    2074:	stp	x27, x28, [sp, #80]
    2078:	bl	0 <__assert_fail>
    207c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2080:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2084:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2088:	add	x3, x3, #0x0
    208c:	add	x1, x1, #0x0
    2090:	add	x0, x0, #0x0
    2094:	mov	w2, #0x472                 	// #1138
    2098:	bl	0 <__assert_fail>
    209c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    20a0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    20a4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    20a8:	add	x3, x3, #0x0
    20ac:	add	x1, x1, #0x0
    20b0:	add	x0, x0, #0x0
    20b4:	mov	w2, #0x1b8                 	// #440
    20b8:	bl	0 <__assert_fail>
    20bc:	nop

00000000000020c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
    20c0:	stp	x29, x30, [sp, #-96]!
    20c4:	mov	x29, sp
    20c8:	stp	x19, x20, [sp, #16]
    20cc:	ldrh	w19, [x1, #8]
    20d0:	stp	x21, x22, [sp, #32]
    20d4:	stp	x23, x24, [sp, #48]
    20d8:	cbz	w19, 2884 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7c4>
    20dc:	mov	x24, x0
    20e0:	and	x22, x19, #0xffff
    20e4:	ldp	x1, x0, [x0, #112]
    20e8:	sub	x0, x0, x1
    20ec:	asr	x0, x0, #5
    20f0:	cmp	x0, w19, uxth
    20f4:	b.ls	2884 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7c4>  // b.plast
    20f8:	adrp	x20, 0 <_ZN4llvm9DebugFlagE>
    20fc:	stp	x25, x26, [sp, #64]
    2100:	mov	x23, x2
    2104:	ldr	x0, [x20]
    2108:	ldrb	w0, [x0]
    210c:	cbnz	w0, 25f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x534>
    2110:	ubfiz	x21, x19, #5, #16
    2114:	add	x21, x1, x21
    2118:	ldrh	w0, [x21, #26]
    211c:	cbnz	w0, 229c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1dc>
    2120:	ldr	x0, [x21, #8]
    2124:	cbz	x0, 217c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xbc>
    2128:	adrp	x0, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    212c:	ldr	w1, [x21]
    2130:	ldr	x0, [x0]
    2134:	ldr	w0, [x0]
    2138:	cmp	w0, w1
    213c:	b.eq	217c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xbc>  // b.none
    2140:	ldp	w0, w1, [x23, #8]
    2144:	cmp	w0, w1
    2148:	b.cs	27b0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6f0>  // b.hs, b.nlast
    214c:	ldr	x1, [x23]
    2150:	ubfiz	x0, x0, #4, #32
    2154:	ldp	x2, x3, [x21]
    2158:	add	x0, x1, x0
    215c:	stp	x2, x3, [x0]
    2160:	ldp	w0, w2, [x23, #8]
    2164:	mov	w1, w0
    2168:	add	x1, x1, #0x1
    216c:	cmp	x1, x2
    2170:	b.hi	2818 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x758>  // b.pmore
    2174:	add	w0, w0, #0x1
    2178:	str	w0, [x23, #8]
    217c:	ldr	x0, [x24, #8]
    2180:	ldr	w1, [x0, #8]
    2184:	ldr	x2, [x0]
    2188:	cmp	w19, w1
    218c:	ldr	x1, [x0, #48]
    2190:	b.cs	283c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x77c>  // b.hs, b.nlast
    2194:	add	x22, x22, x22, lsl #1
    2198:	add	x22, x2, x22, lsl #3
    219c:	ldr	w0, [x22, #4]
    21a0:	lsl	x0, x0, #1
    21a4:	adds	x2, x1, x0
    21a8:	b.eq	2860 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7a0>  // b.none
    21ac:	ldrh	w0, [x1, x0]
    21b0:	adrp	x25, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    21b4:	add	x2, x2, #0x2
    21b8:	ldr	w1, [x23, #8]
    21bc:	cmp	w0, #0x0
    21c0:	add	w19, w19, w0
    21c4:	csel	x2, x2, xzr, ne  // ne = any
    21c8:	and	w19, w19, #0xffff
    21cc:	ldr	x25, [x25]
    21d0:	mov	x22, x2
    21d4:	nop
    21d8:	cbz	x22, 2258 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x198>
    21dc:	ldr	x4, [x24, #112]
    21e0:	ubfiz	x3, x19, #5, #16
    21e4:	add	x21, x4, x3
    21e8:	ldr	x2, [x21, #8]
    21ec:	cbz	x2, 223c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x17c>
    21f0:	ldr	w2, [x4, x3]
    21f4:	ldr	w0, [x25]
    21f8:	cmp	w2, w0
    21fc:	b.eq	223c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x17c>  // b.none
    2200:	ldr	w0, [x23, #12]
    2204:	cmp	w0, w1
    2208:	b.ls	2288 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1c8>  // b.plast
    220c:	ldr	x0, [x23]
    2210:	ubfiz	x1, x1, #4, #32
    2214:	ldp	x2, x3, [x21]
    2218:	add	x1, x0, x1
    221c:	stp	x2, x3, [x1]
    2220:	ldp	w1, w0, [x23, #8]
    2224:	mov	w2, w1
    2228:	add	x2, x2, #0x1
    222c:	cmp	x2, x0
    2230:	b.hi	2818 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x758>  // b.pmore
    2234:	add	w1, w1, #0x1
    2238:	str	w1, [x23, #8]
    223c:	ldrh	w3, [x22], #2
    2240:	mov	x2, #0x0                   	// #0
    2244:	add	w19, w19, w3
    2248:	and	w19, w19, #0xffff
    224c:	cbnz	w3, 21d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x118>
    2250:	mov	x22, x2
    2254:	b	21d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x118>
    2258:	cmp	w1, #0x1
    225c:	mov	w1, w1
    2260:	b.hi	22b0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1f0>  // b.pmore
    2264:	ldr	x20, [x20]
    2268:	ldrb	w0, [x20]
    226c:	cbnz	w0, 2480 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3c0>
    2270:	ldp	x19, x20, [sp, #16]
    2274:	ldp	x21, x22, [sp, #32]
    2278:	ldp	x23, x24, [sp, #48]
    227c:	ldp	x25, x26, [sp, #64]
    2280:	ldp	x29, x30, [sp], #96
    2284:	ret
    2288:	mov	x1, #0x0                   	// #0
    228c:	mov	x0, x23
    2290:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2294:	ldr	w1, [x23, #8]
    2298:	b	220c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x14c>
    229c:	ubfiz	x21, x0, #5, #16
    22a0:	and	x22, x0, #0xffff
    22a4:	add	x21, x1, x21
    22a8:	mov	w19, w0
    22ac:	b	2120 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x60>
    22b0:	lsl	x18, x1, #4
    22b4:	mov	w2, #0x3f                  	// #63
    22b8:	ldr	x21, [x23]
    22bc:	asr	x1, x18, #4
    22c0:	clz	x1, x1
    22c4:	mov	w3, #0x0                   	// #0
    22c8:	sub	w2, w2, w1
    22cc:	add	x19, x21, x18
    22d0:	mov	x1, x19
    22d4:	mov	x0, x21
    22d8:	sbfiz	x2, x2, #1, #32
    22dc:	bl	130 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
    22e0:	cmp	x18, #0x100
    22e4:	b.ls	2750 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x690>  // b.plast
    22e8:	add	x1, x21, #0x100
    22ec:	mov	x0, x21
    22f0:	bl	330 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    22f4:	cmp	x19, x1
    22f8:	b.eq	234c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>  // b.none
    22fc:	nop
    2300:	ldur	x0, [x1, #-8]
    2304:	sub	x3, x1, #0x10
    2308:	ldr	x4, [x1, #8]
    230c:	ldr	w6, [x1]
    2310:	cmp	x4, x0
    2314:	b.cs	2760 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6a0>  // b.hs, b.nlast
    2318:	ldr	w2, [x3]
    231c:	mov	x5, x3
    2320:	sub	x3, x3, #0x10
    2324:	str	w2, [x3, #32]
    2328:	str	x0, [x3, #40]
    232c:	ldr	x0, [x3, #8]
    2330:	cmp	x4, x0
    2334:	b.cc	2318 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x258>  // b.lo, b.ul, b.last
    2338:	str	w6, [x5]
    233c:	add	x1, x1, #0x10
    2340:	str	x4, [x5, #8]
    2344:	cmp	x19, x1
    2348:	b.ne	2300 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x240>  // b.any
    234c:	ldr	x6, [x23]
    2350:	ldr	w3, [x23, #8]
    2354:	add	x4, x6, x3, lsl #4
    2358:	cmp	x6, x4
    235c:	b.eq	2768 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6a8>  // b.none
    2360:	add	x0, x6, #0x10
    2364:	mov	x21, #0x1                   	// #1
    2368:	cmp	x4, x0
    236c:	mov	x19, x21
    2370:	mov	x22, #0x10                  	// #16
    2374:	b.ne	2388 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2c8>  // b.any
    2378:	b	2420 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x360>
    237c:	add	x0, x0, #0x10
    2380:	cmp	x4, x0
    2384:	b.eq	2414 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x354>  // b.none
    2388:	ldur	w2, [x0, #-16]
    238c:	sub	x1, x0, #0x10
    2390:	ldr	w5, [x0]
    2394:	cmp	w2, w5
    2398:	b.ne	237c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2bc>  // b.any
    239c:	ldur	x7, [x0, #-8]
    23a0:	ldr	x5, [x0, #8]
    23a4:	cmp	x7, x5
    23a8:	b.ne	237c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2bc>  // b.any
    23ac:	cmp	x4, x1
    23b0:	b.eq	28ac <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7ec>  // b.none
    23b4:	add	x0, x0, #0x10
    23b8:	cmp	x4, x0
    23bc:	b.ne	23e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x320>  // b.any
    23c0:	b	2410 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x350>
    23c4:	str	w3, [x1, #16]
    23c8:	add	x0, x0, #0x10
    23cc:	str	x5, [x1, #24]
    23d0:	cmp	x4, x0
    23d4:	add	x1, x1, #0x10
    23d8:	b.eq	2408 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x348>  // b.none
    23dc:	ldr	w2, [x1]
    23e0:	ldr	w3, [x0]
    23e4:	ldr	x5, [x0, #8]
    23e8:	cmp	w3, w2
    23ec:	b.ne	23c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x304>  // b.any
    23f0:	ldr	x2, [x1, #8]
    23f4:	cmp	x2, x5
    23f8:	b.ne	23c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x304>  // b.any
    23fc:	add	x0, x0, #0x10
    2400:	cmp	x4, x0
    2404:	b.ne	23dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x31c>  // b.any
    2408:	ldr	w3, [x23, #8]
    240c:	ldr	x6, [x23]
    2410:	add	x0, x1, #0x10
    2414:	sub	x22, x0, x6
    2418:	asr	x19, x22, #4
    241c:	mov	x21, x19
    2420:	cmp	x3, x21
    2424:	b.hi	2464 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3a4>  // b.pmore
    2428:	b.cs	2264 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1a4>  // b.hs, b.nlast
    242c:	ldr	w1, [x23, #12]
    2430:	cmp	x1, x21
    2434:	b.cc	27f0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x730>  // b.lo, b.ul, b.last
    2438:	add	x2, x6, x3, lsl #4
    243c:	cmp	x2, x0
    2440:	b.eq	2470 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3b0>  // b.none
    2444:	adrp	x1, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    2448:	ldr	x1, [x1]
    244c:	ldr	w1, [x1]
    2450:	str	w1, [x2]
    2454:	add	x2, x2, #0x10
    2458:	stur	xzr, [x2, #-8]
    245c:	cmp	x2, x0
    2460:	b.ne	2450 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x390>  // b.any
    2464:	ldr	w0, [x23, #12]
    2468:	cmp	x0, x21
    246c:	b.cc	2818 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x758>  // b.lo, b.ul, b.last
    2470:	str	w19, [x23, #8]
    2474:	ldr	x20, [x20]
    2478:	ldrb	w0, [x20]
    247c:	cbz	w0, 2270 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>
    2480:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2484:	add	x0, x0, #0x0
    2488:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    248c:	tst	w0, #0xff
    2490:	b.eq	2270 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>  // b.none
    2494:	ldr	x20, [x23]
    2498:	ldr	w21, [x23, #8]
    249c:	add	x21, x20, x21, lsl #4
    24a0:	cmp	x20, x21
    24a4:	b.eq	2270 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>  // b.none
    24a8:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    24ac:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    24b0:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    24b4:	add	x23, x23, #0x0
    24b8:	add	x22, x22, #0x0
    24bc:	add	x25, x25, #0x0
    24c0:	str	x27, [sp, #80]
    24c4:	b	25c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x504>
    24c8:	ldp	x0, x1, [x23]
    24cc:	stp	x0, x1, [x2]
    24d0:	ldp	x0, x1, [x23, #16]
    24d4:	stp	x0, x1, [x2, #16]
    24d8:	ldr	x0, [x23, #32]
    24dc:	str	x0, [x2, #32]
    24e0:	ldr	x0, [x19, #24]
    24e4:	add	x0, x0, #0x28
    24e8:	str	x0, [x19, #24]
    24ec:	ldr	x1, [x24, #8]
    24f0:	ldrh	w0, [x26, #12]
    24f4:	ldr	w3, [x1, #8]
    24f8:	ldr	x2, [x1]
    24fc:	cmp	w0, w3
    2500:	ldr	x1, [x1, #64]
    2504:	b.cs	2840 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x780>  // b.hs, b.nlast
    2508:	mov	w3, #0x18                  	// #24
    250c:	umull	x0, w0, w3
    2510:	ldr	w26, [x2, x0]
    2514:	adds	x26, x1, x26
    2518:	b.eq	26d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x618>  // b.none
    251c:	mov	x0, x26
    2520:	bl	0 <strlen>
    2524:	mov	x27, x0
    2528:	ldp	x3, x0, [x19, #16]
    252c:	sub	x3, x3, x0
    2530:	cmp	x27, x3
    2534:	b.hi	26c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x604>  // b.pmore
    2538:	cbz	x27, 2558 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x498>
    253c:	mov	x1, x26
    2540:	mov	x2, x27
    2544:	bl	0 <memcpy>
    2548:	ldp	x3, x1, [x19, #16]
    254c:	add	x0, x1, x27
    2550:	str	x0, [x19, #24]
    2554:	sub	x3, x3, x0
    2558:	cmp	x3, #0x19
    255c:	b.ls	26e8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x628>  // b.plast
    2560:	ldp	x2, x3, [x22]
    2564:	stp	x2, x3, [x0]
    2568:	ldrh	w1, [x22, #24]
    256c:	ldr	x2, [x22, #16]
    2570:	str	x2, [x0, #16]
    2574:	strh	w1, [x0, #24]
    2578:	ldr	x0, [x19, #24]
    257c:	ldr	w1, [x20]
    2580:	add	x0, x0, #0x1a
    2584:	str	x0, [x19, #24]
    2588:	mov	x0, x19
    258c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2590:	mov	x1, x0
    2594:	ldp	x2, x3, [x0, #16]
    2598:	sub	x2, x2, x3
    259c:	cmp	x2, #0x1
    25a0:	b.ls	271c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x65c>  // b.plast
    25a4:	mov	w0, #0xa29                 	// #2601
    25a8:	strh	w0, [x3]
    25ac:	add	x20, x20, #0x10
    25b0:	ldr	x0, [x1, #24]
    25b4:	cmp	x21, x20
    25b8:	add	x0, x0, #0x2
    25bc:	str	x0, [x1, #24]
    25c0:	b.eq	2734 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x674>  // b.none
    25c4:	ldr	x26, [x20, #8]
    25c8:	bl	0 <_ZN4llvm4dbgsEv>
    25cc:	ldp	x1, x2, [x0, #16]
    25d0:	mov	x19, x0
    25d4:	sub	x1, x1, x2
    25d8:	cmp	x1, #0x27
    25dc:	b.hi	24c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x408>  // b.pmore
    25e0:	mov	x1, x23
    25e4:	mov	x2, #0x28                  	// #40
    25e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    25ec:	mov	x19, x0
    25f0:	b	24ec <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x42c>
    25f4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    25f8:	add	x0, x0, #0x0
    25fc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2600:	tst	w0, #0xff
    2604:	b.ne	2610 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x550>  // b.any
    2608:	ldr	x1, [x24, #112]
    260c:	b	2110 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    2610:	bl	0 <_ZN4llvm4dbgsEv>
    2614:	mov	x21, x0
    2618:	ldp	x1, x2, [x0, #16]
    261c:	sub	x1, x1, x2
    2620:	cmp	x1, #0x2c
    2624:	b.ls	27d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x718>  // b.plast
    2628:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    262c:	add	x3, x3, #0x0
    2630:	ldr	x0, [x3, #32]
    2634:	str	x0, [x2, #32]
    2638:	ldp	x0, x1, [x3]
    263c:	stp	x0, x1, [x2]
    2640:	ldp	x0, x1, [x3, #16]
    2644:	stp	x0, x1, [x2, #16]
    2648:	ldur	x0, [x3, #37]
    264c:	stur	x0, [x2, #37]
    2650:	ldr	x0, [x21, #24]
    2654:	add	x0, x0, #0x2d
    2658:	str	x0, [x21, #24]
    265c:	ldr	x0, [x24, #8]
    2660:	ldr	w1, [x0, #8]
    2664:	ldr	x2, [x0]
    2668:	cmp	w19, w1
    266c:	ldr	x0, [x0, #64]
    2670:	b.cs	283c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x77c>  // b.hs, b.nlast
    2674:	mov	w1, #0x18                  	// #24
    2678:	umull	x1, w19, w1
    267c:	ldr	w25, [x2, x1]
    2680:	adds	x25, x0, x25
    2684:	b.eq	278c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6cc>  // b.none
    2688:	mov	x0, x25
    268c:	bl	0 <strlen>
    2690:	mov	x26, x0
    2694:	ldp	x1, x0, [x21, #16]
    2698:	sub	x2, x1, x0
    269c:	cmp	x26, x2
    26a0:	b.hi	2778 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6b8>  // b.pmore
    26a4:	cbz	x26, 2790 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6d0>
    26a8:	mov	x1, x25
    26ac:	mov	x2, x26
    26b0:	bl	0 <memcpy>
    26b4:	ldp	x1, x0, [x21, #16]
    26b8:	add	x0, x0, x26
    26bc:	str	x0, [x21, #24]
    26c0:	b	2790 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6d0>
    26c4:	mov	x0, x19
    26c8:	mov	x2, x27
    26cc:	mov	x1, x26
    26d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    26d4:	mov	x19, x0
    26d8:	ldp	x3, x0, [x19, #16]
    26dc:	sub	x3, x3, x0
    26e0:	cmp	x3, #0x19
    26e4:	b.hi	2560 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4a0>  // b.pmore
    26e8:	mov	x2, #0x1a                  	// #26
    26ec:	mov	x0, x19
    26f0:	mov	x1, x22
    26f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    26f8:	ldr	w1, [x20]
    26fc:	mov	x19, x0
    2700:	mov	x0, x19
    2704:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2708:	mov	x1, x0
    270c:	ldp	x2, x3, [x0, #16]
    2710:	sub	x2, x2, x3
    2714:	cmp	x2, #0x1
    2718:	b.hi	25a4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4e4>  // b.pmore
    271c:	mov	x1, x25
    2720:	add	x20, x20, #0x10
    2724:	mov	x2, #0x2                   	// #2
    2728:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    272c:	cmp	x21, x20
    2730:	b.ne	25c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x504>  // b.any
    2734:	ldp	x19, x20, [sp, #16]
    2738:	ldp	x21, x22, [sp, #32]
    273c:	ldp	x23, x24, [sp, #48]
    2740:	ldp	x25, x26, [sp, #64]
    2744:	ldr	x27, [sp, #80]
    2748:	ldp	x29, x30, [sp], #96
    274c:	ret
    2750:	mov	x1, x19
    2754:	mov	x0, x21
    2758:	bl	330 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    275c:	b	234c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>
    2760:	mov	x5, x1
    2764:	b	2338 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x278>
    2768:	mov	x19, #0x0                   	// #0
    276c:	cbz	x3, 2264 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1a4>
    2770:	str	w19, [x23, #8]
    2774:	b	2474 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3b4>
    2778:	mov	x0, x21
    277c:	mov	x2, x26
    2780:	mov	x1, x25
    2784:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2788:	mov	x21, x0
    278c:	ldp	x1, x0, [x21, #16]
    2790:	cmp	x1, x0
    2794:	b.ls	27c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x704>  // b.plast
    2798:	add	x1, x0, #0x1
    279c:	str	x1, [x21, #24]
    27a0:	mov	w1, #0xa                   	// #10
    27a4:	strb	w1, [x0]
    27a8:	ldr	x1, [x24, #112]
    27ac:	b	2110 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    27b0:	mov	x0, x23
    27b4:	mov	x1, #0x0                   	// #0
    27b8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27bc:	ldr	w0, [x23, #8]
    27c0:	b	214c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x8c>
    27c4:	mov	w1, #0xa                   	// #10
    27c8:	mov	x0, x21
    27cc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    27d0:	ldr	x1, [x24, #112]
    27d4:	b	2110 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    27d8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27dc:	mov	x2, #0x2d                  	// #45
    27e0:	add	x1, x1, #0x0
    27e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    27e8:	mov	x21, x0
    27ec:	b	265c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x59c>
    27f0:	mov	x1, x21
    27f4:	mov	x0, x23
    27f8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27fc:	ldr	x1, [x23]
    2800:	ldr	w2, [x23, #8]
    2804:	add	x0, x1, x22
    2808:	add	x2, x1, x2, lsl #4
    280c:	cmp	x2, x0
    2810:	b.ne	2444 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x384>  // b.any
    2814:	b	2464 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3a4>
    2818:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    281c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2820:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2824:	add	x3, x3, #0x0
    2828:	add	x1, x1, #0x0
    282c:	add	x0, x0, #0x0
    2830:	mov	w2, #0x43                  	// #67
    2834:	str	x27, [sp, #80]
    2838:	bl	0 <__assert_fail>
    283c:	str	x27, [sp, #80]
    2840:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2844:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2848:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    284c:	add	x3, x3, #0x0
    2850:	add	x1, x1, #0x0
    2854:	add	x0, x0, #0x0
    2858:	mov	w2, #0x1b8                 	// #440
    285c:	bl	0 <__assert_fail>
    2860:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2864:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2868:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    286c:	add	x3, x3, #0x0
    2870:	add	x1, x1, #0x0
    2874:	add	x0, x0, #0x0
    2878:	mov	w2, #0xd1                  	// #209
    287c:	str	x27, [sp, #80]
    2880:	bl	0 <__assert_fail>
    2884:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2888:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    288c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2890:	add	x3, x3, #0x0
    2894:	add	x1, x1, #0x0
    2898:	add	x0, x0, #0x0
    289c:	mov	w2, #0x167                 	// #359
    28a0:	stp	x25, x26, [sp, #64]
    28a4:	str	x27, [sp, #80]
    28a8:	bl	0 <__assert_fail>
    28ac:	sub	x22, x4, x6
    28b0:	mov	x0, x4
    28b4:	asr	x19, x22, #4
    28b8:	mov	x21, x19
    28bc:	b	2420 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x360>

00000000000028c0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
    28c0:	stp	x29, x30, [sp, #-160]!
    28c4:	mov	x29, sp
    28c8:	stp	x25, x26, [sp, #64]
    28cc:	mov	x26, x2
    28d0:	ldrh	w2, [x1, #8]
    28d4:	ldrb	w3, [x1, #42]
    28d8:	stp	x23, x24, [sp, #48]
    28dc:	mov	x23, x1
    28e0:	ubfiz	x4, x2, #5, #16
    28e4:	ldr	x1, [x0, #112]
    28e8:	add	x1, x1, x4
    28ec:	ldr	w1, [x1, #16]
    28f0:	str	w1, [x23, #12]
    28f4:	cbz	w3, 2908 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x48>
    28f8:	ldp	x23, x24, [sp, #48]
    28fc:	ldp	x25, x26, [sp, #64]
    2900:	ldp	x29, x30, [sp], #160
    2904:	ret
    2908:	ldr	w3, [x0, #144]
    290c:	stp	x19, x20, [sp, #16]
    2910:	cmp	w2, w3
    2914:	stp	x21, x22, [sp, #32]
    2918:	b.cs	2a84 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1c4>  // b.hs, b.nlast
    291c:	mov	x1, #0x1                   	// #1
    2920:	cmp	w3, #0x40
    2924:	lsl	x1, x1, x2
    2928:	ldr	x3, [x0, #136]
    292c:	b.hi	2a60 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1a0>  // b.pmore
    2930:	mov	x2, x3
    2934:	tst	x1, x2
    2938:	b.eq	2944 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x84>  // b.none
    293c:	mov	w1, #0x1                   	// #1
    2940:	strb	w1, [x23, #41]
    2944:	add	x21, sp, #0x50
    2948:	mov	x3, #0x400000000           	// #17179869184
    294c:	add	x4, x21, #0x10
    2950:	mov	x2, x21
    2954:	mov	x1, x23
    2958:	stp	x4, x3, [sp, #80]
    295c:	bl	20c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    2960:	ldr	x0, [x26, #152]
    2964:	ldr	w1, [sp, #88]
    2968:	ldr	x20, [x23]
    296c:	cmp	w1, #0x0
    2970:	ldr	x2, [x0, #40]
    2974:	cset	w3, eq  // eq = none
    2978:	str	w1, [x23, #16]
    297c:	strb	w3, [x23, #40]
    2980:	ldr	w24, [x20, #12]
    2984:	cbz	x2, 2aa4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1e4>
    2988:	ldr	w0, [x0, #52]
    298c:	cmp	w24, w0
    2990:	b.cs	2ac4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x204>  // b.hs, b.nlast
    2994:	ldr	x0, [sp, #80]
    2998:	ubfiz	x1, x1, #4, #32
    299c:	mov	w3, #0x18                  	// #24
    29a0:	add	x19, x0, x1
    29a4:	umaddl	x24, w24, w3, x2
    29a8:	cmp	x19, x0
    29ac:	b.eq	2a30 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x170>  // b.none
    29b0:	mov	x22, x0
    29b4:	mov	w25, #0xc                   	// #12
    29b8:	ldr	x0, [x22, #8]
    29bc:	ldrh	w3, [x24, #18]
    29c0:	ldr	x4, [x26, #144]
    29c4:	ldrh	w5, [x24, #20]
    29c8:	ldr	x1, [x0]
    29cc:	umaddl	x3, w3, w25, x4
    29d0:	ldr	w6, [x20, #4]
    29d4:	umaddl	x5, w5, w25, x3
    29d8:	ldr	w7, [x1, #12]
    29dc:	cmp	x3, x5
    29e0:	b.ne	29f4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x134>  // b.any
    29e4:	b	2a58 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x198>
    29e8:	add	x3, x3, #0xc
    29ec:	cmp	x5, x3
    29f0:	b.eq	2a58 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x198>  // b.none
    29f4:	ldr	w4, [x3]
    29f8:	cmp	w6, w4
    29fc:	b.hi	29e8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x128>  // b.pmore
    2a00:	b.cc	2a58 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x198>  // b.lo, b.ul, b.last
    2a04:	ldr	w4, [x3, #4]
    2a08:	cmp	w4, #0x0
    2a0c:	ccmp	w4, w7, #0x4, ne  // ne = any
    2a10:	b.ne	29e8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x128>  // b.any
    2a14:	ldr	w3, [x3, #8]
    2a18:	ldr	w1, [x22], #16
    2a1c:	mov	x2, x23
    2a20:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    2a24:	cmp	x19, x22
    2a28:	b.ne	29b8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xf8>  // b.any
    2a2c:	ldr	x0, [sp, #80]
    2a30:	add	x21, x21, #0x10
    2a34:	cmp	x0, x21
    2a38:	b.eq	2a6c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1ac>  // b.none
    2a3c:	bl	0 <free>
    2a40:	ldp	x19, x20, [sp, #16]
    2a44:	ldp	x21, x22, [sp, #32]
    2a48:	ldp	x23, x24, [sp, #48]
    2a4c:	ldp	x25, x26, [sp, #64]
    2a50:	ldp	x29, x30, [sp], #160
    2a54:	ret
    2a58:	mov	w3, #0x0                   	// #0
    2a5c:	b	2a18 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x158>
    2a60:	ubfx	x2, x2, #6, #10
    2a64:	ldr	x2, [x3, x2, lsl #3]
    2a68:	b	2934 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x74>
    2a6c:	ldp	x19, x20, [sp, #16]
    2a70:	ldp	x21, x22, [sp, #32]
    2a74:	ldp	x23, x24, [sp, #48]
    2a78:	ldp	x25, x26, [sp, #64]
    2a7c:	ldp	x29, x30, [sp], #160
    2a80:	ret
    2a84:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a88:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a8c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a90:	add	x3, x3, #0x0
    2a94:	add	x1, x1, #0x0
    2a98:	add	x0, x0, #0x0
    2a9c:	mov	w2, #0x472                 	// #1138
    2aa0:	bl	0 <__assert_fail>
    2aa4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2aa8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2aac:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2ab0:	add	x3, x3, #0x0
    2ab4:	add	x1, x1, #0x0
    2ab8:	add	x0, x0, #0x0
    2abc:	mov	w2, #0x15b                 	// #347
    2ac0:	bl	0 <__assert_fail>
    2ac4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2ac8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2acc:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2ad0:	add	x3, x3, #0x0
    2ad4:	add	x1, x1, #0x0
    2ad8:	add	x0, x0, #0x0
    2adc:	mov	w2, #0x15d                 	// #349
    2ae0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #144]
  1c:	add	x1, x1, #0x10
  20:	cmp	w0, #0x40
  24:	str	x1, [x19]
  28:	b.ls	38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>  // b.plast
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x1, x19, #0x20
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD1Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #144]
  1c:	add	x1, x1, #0x10
  20:	cmp	w0, #0x40
  24:	str	x1, [x19]
  28:	b.ls	38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>  // b.plast
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x1, x19, #0x20
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  60:	mov	x0, x19
  64:	mov	x1, #0x98                  	// #152
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x28>

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
       0:	ldr	x2, [x0, #16]
       4:	cmp	x2, x1
       8:	b.cc	2c <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x2c>  // b.lo, b.ul, b.last
       c:	bic	x1, x2, x1
      10:	str	x1, [x0, #16]
      14:	cbnz	x1, 28 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x28>
      18:	ldr	x1, [x0, #8]
      1c:	ldr	x2, [x0, #24]
      20:	eor	x1, x1, x2
      24:	stp	x1, xzr, [x0, #16]
      28:	ret
      2c:	ldr	x2, [x0, #24]
      30:	orr	x1, x2, x1
      34:	str	x1, [x0, #24]
      38:	ret
      3c:	nop

0000000000000040 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
      40:	ldr	x3, [x0, #16]
      44:	mov	x2, x0
      48:	ands	x0, x3, x1
      4c:	b.ne	94 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x54>  // b.any
      50:	ldr	x4, [x2, #8]
      54:	ldr	x3, [x2, #24]
      58:	str	xzr, [x2, #24]
      5c:	eor	x3, x4, x3
      60:	ands	x0, x1, x3
      64:	b.ne	94 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x54>  // b.any
      68:	str	x4, [x2, #16]
      6c:	ands	x1, x1, x4
      70:	b.eq	b4 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x74>  // b.none
      74:	clz	x1, x1
      78:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
      7c:	lsr	x0, x0, x1
      80:	sub	x1, x0, #0x1
      84:	orr	x1, x1, x0
      88:	and	x4, x1, x4
      8c:	str	x4, [x2, #16]
      90:	ret
      94:	clz	x0, x0
      98:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
      9c:	lsr	x0, x1, x0
      a0:	sub	x1, x0, #0x1
      a4:	orr	x1, x1, x0
      a8:	and	x3, x1, x3
      ac:	str	x3, [x2, #16]
      b0:	ret
      b4:	stp	x29, x30, [sp, #-16]!
      b8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      bc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      c0:	mov	x29, sp
      c4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      c8:	add	x3, x3, #0x0
      cc:	add	x1, x1, #0x0
      d0:	add	x0, x0, #0x0
      d4:	mov	w2, #0x64                  	// #100
      d8:	bl	0 <__assert_fail>
      dc:	nop

00000000000000e0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0.part.0>:
      e0:	stp	x29, x30, [sp, #-16]!
      e4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      e8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x47d                 	// #1149
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>:
     108:	stp	x29, x30, [sp, #-16]!
     10c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     110:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     114:	mov	x29, sp
     118:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     11c:	add	x3, x3, #0x0
     120:	add	x1, x1, #0x0
     124:	add	x0, x0, #0x0
     128:	mov	w2, #0x64                  	// #100
     12c:	bl	0 <__assert_fail>

0000000000000130 <_ZN4llvm3mca16ResourceStrategyD1Ev>:
     130:	ret
     134:	nop

0000000000000138 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
     138:	stp	x29, x30, [sp, #-32]!
     13c:	mov	x29, sp
     140:	str	x19, [sp, #16]
     144:	mov	x19, x0
     148:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     14c:	mov	x0, x19
     150:	mov	x1, #0x8                   	// #8
     154:	ldr	x19, [sp, #16]
     158:	ldp	x29, x30, [sp], #32
     15c:	b	0 <_ZdlPvm>

0000000000000160 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
     160:	fmov	d1, x3
     164:	str	w2, [x0]
     168:	ldr	w3, [x1, #16]
     16c:	cnt	v0.8b, v1.8b
     170:	str	d1, [x0, #8]
     174:	str	w3, [x0, #32]
     178:	addv	b0, v0.8b
     17c:	umov	w2, v0.b[0]
     180:	cmp	w2, #0x1
     184:	cset	w4, hi  // hi = pmore
     188:	strb	w4, [x0, #41]
     18c:	b.le	1c8 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x68>
     190:	fmov	x1, d1
     194:	cbz	x1, 1f4 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x94>
     198:	clz	x2, x1
     19c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
     1a0:	cmn	w3, #0x1
     1a4:	strb	wzr, [x0, #40]
     1a8:	lsr	x1, x1, x2
     1ac:	fmov	x2, d1
     1b0:	csel	w3, w3, wzr, ne  // ne = any
     1b4:	str	w3, [x0, #36]
     1b8:	eor	x1, x1, x2
     1bc:	str	x1, [x0, #16]
     1c0:	str	x1, [x0, #24]
     1c4:	ret
     1c8:	ldr	w2, [x1, #8]
     1cc:	cmn	w3, #0x1
     1d0:	mov	x1, #0x1                   	// #1
     1d4:	csel	w3, w3, wzr, ne  // ne = any
     1d8:	str	w3, [x0, #36]
     1dc:	lsl	x1, x1, x2
     1e0:	sub	x1, x1, #0x1
     1e4:	str	x1, [x0, #16]
     1e8:	str	x1, [x0, #24]
     1ec:	strb	wzr, [x0, #40]
     1f0:	ret
     1f4:	stp	x29, x30, [sp, #-16]!
     1f8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     1fc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     200:	mov	x29, sp
     204:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     208:	add	x3, x3, #0x0
     20c:	add	x1, x1, #0x0
     210:	add	x0, x0, #0x0
     214:	mov	w2, #0x64                  	// #100
     218:	bl	0 <__assert_fail>
     21c:	nop

0000000000000220 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     220:	mov	x2, x0
     224:	ldrb	w0, [x0, #40]
     228:	cbz	w0, 238 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     22c:	ldr	w3, [x2, #32]
     230:	mov	w0, #0x0                   	// #0
     234:	cbnz	w3, 250 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x30>
     238:	ldr	d0, [x2, #24]
     23c:	cnt	v0.8b, v0.8b
     240:	addv	b0, v0.8b
     244:	umov	w0, v0.b[0]
     248:	cmp	w1, w0
     24c:	cset	w0, ls  // ls = plast
     250:	ret
     254:	nop

0000000000000258 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     258:	ldr	w1, [x0, #32]
     25c:	cmp	w1, #0x0
     260:	cbnz	w1, 278 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     264:	ldrb	w0, [x0, #40]
     268:	cmp	w0, #0x0
     26c:	cset	w0, ne  // ne = any
     270:	lsl	w0, w0, #1
     274:	ret
     278:	b.le	28c <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x34>
     27c:	ldr	w0, [x0, #36]
     280:	cmp	w0, #0x0
     284:	cset	w0, eq  // eq = none
     288:	ret
     28c:	mov	w0, #0x0                   	// #0
     290:	ret
     294:	nop

0000000000000298 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     298:	stp	x29, x30, [sp, #-112]!
     29c:	mov	x29, sp
     2a0:	str	x19, [sp, #16]
     2a4:	mov	x19, x0
     2a8:	bl	0 <_ZN4llvm4dbgsEv>
     2ac:	ldp	x2, x3, [x0, #16]
     2b0:	sub	x2, x2, x3
     2b4:	cmp	x2, #0x4
     2b8:	b.ls	4c4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x22c>  // b.plast
     2bc:	mov	x1, x0
     2c0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2c4:	add	x0, x0, #0x0
     2c8:	ldr	w2, [x0]
     2cc:	ldrb	w0, [x0, #4]
     2d0:	str	w2, [x3]
     2d4:	strb	w0, [x3, #4]
     2d8:	ldr	x0, [x1, #24]
     2dc:	add	x0, x0, #0x5
     2e0:	str	x0, [x1, #24]
     2e4:	ldr	x4, [x19, #8]
     2e8:	mov	w2, #0x1                   	// #1
     2ec:	mov	w3, #0x10                  	// #16
     2f0:	mov	x0, x1
     2f4:	add	x1, sp, #0x28
     2f8:	stp	x4, xzr, [sp, #40]
     2fc:	str	w3, [sp, #56]
     300:	strh	w2, [sp, #60]
     304:	strb	w2, [sp, #62]
     308:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     30c:	ldp	x2, x3, [x0, #16]
     310:	mov	x1, x0
     314:	sub	x2, x2, x3
     318:	cmp	x2, #0x8
     31c:	b.ls	550 <_ZNK4llvm3mca13ResourceState4dumpEv+0x2b8>  // b.plast
     320:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     324:	add	x0, x0, #0x0
     328:	ldr	x2, [x0]
     32c:	str	x2, [x3]
     330:	ldrb	w0, [x0, #8]
     334:	strb	w0, [x3, #8]
     338:	ldr	x0, [x1, #24]
     33c:	add	x0, x0, #0x9
     340:	str	x0, [x1, #24]
     344:	ldr	x4, [x19, #16]
     348:	mov	w2, #0x1                   	// #1
     34c:	mov	w3, #0x10                  	// #16
     350:	mov	x0, x1
     354:	add	x1, sp, #0x40
     358:	stp	x4, xzr, [sp, #64]
     35c:	str	w3, [sp, #80]
     360:	strh	w2, [sp, #84]
     364:	strb	w2, [sp, #86]
     368:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     36c:	ldp	x2, x3, [x0, #16]
     370:	mov	x1, x0
     374:	sub	x2, x2, x3
     378:	cmp	x2, #0x9
     37c:	b.ls	538 <_ZNK4llvm3mca13ResourceState4dumpEv+0x2a0>  // b.plast
     380:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     384:	add	x0, x0, #0x0
     388:	ldr	x2, [x0]
     38c:	str	x2, [x3]
     390:	ldrh	w0, [x0, #8]
     394:	strh	w0, [x3, #8]
     398:	ldr	x0, [x1, #24]
     39c:	add	x0, x0, #0xa
     3a0:	str	x0, [x1, #24]
     3a4:	ldr	x4, [x19, #24]
     3a8:	mov	w2, #0x1                   	// #1
     3ac:	mov	w3, #0x10                  	// #16
     3b0:	mov	x0, x1
     3b4:	add	x1, sp, #0x58
     3b8:	stp	x4, xzr, [sp, #88]
     3bc:	str	w3, [sp, #104]
     3c0:	strh	w2, [sp, #108]
     3c4:	strb	w2, [sp, #110]
     3c8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     3cc:	ldp	x1, x3, [x0, #16]
     3d0:	mov	x2, x0
     3d4:	sub	x1, x1, x3
     3d8:	cmp	x1, #0xc
     3dc:	b.ls	520 <_ZNK4llvm3mca13ResourceState4dumpEv+0x288>  // b.plast
     3e0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     3e4:	add	x0, x0, #0x0
     3e8:	ldr	x1, [x0]
     3ec:	str	x1, [x3]
     3f0:	ldur	x0, [x0, #5]
     3f4:	stur	x0, [x3, #5]
     3f8:	ldr	x0, [x2, #24]
     3fc:	add	x0, x0, #0xd
     400:	str	x0, [x2, #24]
     404:	ldrsw	x1, [x19, #32]
     408:	mov	x0, x2
     40c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     410:	mov	x2, x0
     414:	ldp	x1, x3, [x0, #16]
     418:	sub	x1, x1, x3
     41c:	cmp	x1, #0x10
     420:	b.ls	508 <_ZNK4llvm3mca13ResourceState4dumpEv+0x270>  // b.plast
     424:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     428:	add	x0, x0, #0x0
     42c:	ldp	x4, x5, [x0]
     430:	stp	x4, x5, [x3]
     434:	ldrb	w0, [x0, #16]
     438:	strb	w0, [x3, #16]
     43c:	ldr	x0, [x2, #24]
     440:	add	x0, x0, #0x11
     444:	str	x0, [x2, #24]
     448:	ldr	w1, [x19, #36]
     44c:	mov	x0, x2
     450:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     454:	mov	x2, x0
     458:	ldp	x1, x3, [x0, #16]
     45c:	sub	x1, x1, x3
     460:	cmp	x1, #0xa
     464:	b.ls	4f0 <_ZNK4llvm3mca13ResourceState4dumpEv+0x258>  // b.plast
     468:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     46c:	add	x0, x0, #0x0
     470:	ldr	x1, [x0]
     474:	str	x1, [x3]
     478:	ldur	w0, [x0, #7]
     47c:	stur	w0, [x3, #7]
     480:	ldr	x0, [x2, #24]
     484:	add	x0, x0, #0xb
     488:	str	x0, [x2, #24]
     48c:	ldrb	w1, [x19, #40]
     490:	mov	x0, x2
     494:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     498:	mov	x1, x0
     49c:	ldp	x3, x2, [x0, #16]
     4a0:	cmp	x2, x3
     4a4:	b.cs	4dc <_ZNK4llvm3mca13ResourceState4dumpEv+0x244>  // b.hs, b.nlast
     4a8:	add	x0, x2, #0x1
     4ac:	str	x0, [x1, #24]
     4b0:	mov	w0, #0xa                   	// #10
     4b4:	strb	w0, [x2]
     4b8:	ldr	x19, [sp, #16]
     4bc:	ldp	x29, x30, [sp], #112
     4c0:	ret
     4c4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4c8:	add	x1, x1, #0x0
     4cc:	mov	x2, #0x5                   	// #5
     4d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4d4:	mov	x1, x0
     4d8:	b	2e4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x4c>
     4dc:	mov	w1, #0xa                   	// #10
     4e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     4e4:	ldr	x19, [sp, #16]
     4e8:	ldp	x29, x30, [sp], #112
     4ec:	ret
     4f0:	mov	x2, #0xb                   	// #11
     4f4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4f8:	add	x1, x1, #0x0
     4fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     500:	mov	x2, x0
     504:	b	48c <_ZNK4llvm3mca13ResourceState4dumpEv+0x1f4>
     508:	mov	x2, #0x11                  	// #17
     50c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     510:	add	x1, x1, #0x0
     514:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     518:	mov	x2, x0
     51c:	b	448 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1b0>
     520:	mov	x2, #0xd                   	// #13
     524:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     528:	add	x1, x1, #0x0
     52c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     530:	mov	x2, x0
     534:	b	404 <_ZNK4llvm3mca13ResourceState4dumpEv+0x16c>
     538:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     53c:	add	x1, x1, #0x0
     540:	mov	x2, #0xa                   	// #10
     544:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     548:	mov	x1, x0
     54c:	b	3a4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x10c>
     550:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     554:	add	x1, x1, #0x0
     558:	mov	x2, #0x9                   	// #9
     55c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     560:	mov	x1, x0
     564:	b	344 <_ZNK4llvm3mca13ResourceState4dumpEv+0xac>

0000000000000568 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     568:	stp	x29, x30, [sp, #-96]!
     56c:	adrp	x2, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     570:	mov	x29, sp
     574:	stp	x19, x20, [sp, #16]
     578:	mov	x19, x0
     57c:	stp	x21, x22, [sp, #32]
     580:	mov	x21, x0
     584:	ldr	x0, [x2]
     588:	stp	x27, x28, [sp, #80]
     58c:	mov	x28, x1
     590:	add	x0, x0, #0x10
     594:	ldr	w1, [x1, #48]
     598:	str	x0, [x21], #8
     59c:	str	xzr, [x19, #8]
     5a0:	sub	w0, w1, #0x1
     5a4:	stp	xzr, xzr, [x21, #8]
     5a8:	ubfiz	x20, x0, #3, #32
     5ac:	cbz	w0, a60 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4f8>
     5b0:	mov	x0, x20
     5b4:	bl	0 <_Znwm>
     5b8:	mov	x1, x0
     5bc:	str	x1, [x19, #8]
     5c0:	add	x0, x0, x20
     5c4:	str	x0, [x21, #16]
     5c8:	str	xzr, [x1], #8
     5cc:	cmp	x0, x1
     5d0:	b.ne	5c8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x60>  // b.any
     5d4:	add	x22, x19, #0x20
     5d8:	ldr	w1, [x28, #48]
     5dc:	str	x0, [x19, #16]
     5e0:	str	xzr, [x19, #32]
     5e4:	sub	w0, w1, #0x1
     5e8:	stp	xzr, xzr, [x22, #8]
     5ec:	ubfiz	x20, x0, #3, #32
     5f0:	cbz	w0, a70 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x508>
     5f4:	mov	x0, x20
     5f8:	bl	0 <_Znwm>
     5fc:	mov	x1, x0
     600:	str	x1, [x19, #32]
     604:	add	x0, x0, x20
     608:	str	x0, [x22, #16]
     60c:	nop
     610:	str	xzr, [x1], #8
     614:	cmp	x0, x1
     618:	b.ne	610 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xa8>  // b.any
     61c:	add	x21, x19, #0x38
     620:	ldr	w1, [x28, #48]
     624:	str	x0, [x19, #40]
     628:	str	xzr, [x19, #56]
     62c:	sub	w0, w1, #0x1
     630:	stp	xzr, xzr, [x21, #8]
     634:	ubfiz	x20, x0, #3, #32
     638:	cbz	w0, a80 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x518>
     63c:	mov	x0, x20
     640:	bl	0 <_Znwm>
     644:	mov	x1, x0
     648:	str	x1, [x19, #56]
     64c:	add	x0, x0, x20
     650:	str	x0, [x21, #16]
     654:	nop
     658:	str	xzr, [x1], #8
     65c:	cmp	x0, x1
     660:	b.ne	658 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xf0>  // b.any
     664:	ldr	w21, [x28, #48]
     668:	add	x1, x19, #0x60
     66c:	mov	x2, #0x800000000           	// #34359738368
     670:	str	x0, [x19, #64]
     674:	stp	x1, x2, [x19, #80]
     678:	cmp	w21, #0x8
     67c:	mov	w20, w21
     680:	b.hi	a1c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4b4>  // b.pmore
     684:	ldr	x0, [x19, #80]
     688:	str	w21, [x19, #88]
     68c:	add	x1, x0, x20, lsl #3
     690:	cmp	x0, x1
     694:	b.eq	6a4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x13c>  // b.none
     698:	str	xzr, [x0], #8
     69c:	cmp	x1, x0
     6a0:	b.ne	698 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x130>  // b.any
     6a4:	ldr	w21, [x28, #48]
     6a8:	add	x1, x19, #0xb0
     6ac:	mov	x0, #0x800000000           	// #34359738368
     6b0:	stp	x1, x0, [x19, #160]
     6b4:	sub	w20, w21, #0x1
     6b8:	mov	x21, x20
     6bc:	cmp	w20, #0x8
     6c0:	b.hi	a04 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x49c>  // b.pmore
     6c4:	mov	x0, #0x8                   	// #8
     6c8:	cmp	x20, x0
     6cc:	b.hi	a38 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d0>  // b.pmore
     6d0:	ldr	x0, [x19, #160]
     6d4:	str	w21, [x19, #168]
     6d8:	add	x1, x0, x20, lsl #2
     6dc:	cmp	x0, x1
     6e0:	b.eq	6f4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x18c>  // b.none
     6e4:	nop
     6e8:	str	wzr, [x0], #4
     6ec:	cmp	x1, x0
     6f0:	b.ne	6e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x180>  // b.any
     6f4:	mov	x0, #0x1                   	// #1
     6f8:	stp	xzr, x0, [x19, #208]
     6fc:	cbnz	x0, 9f8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x490>
     700:	ldr	w2, [x19, #232]
     704:	sub	w0, w2, #0x1
     708:	tst	w0, w2
     70c:	b.ne	aa4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x53c>  // b.any
     710:	mov	w1, #0x18                  	// #24
     714:	ldr	x0, [x19, #224]
     718:	umull	x2, w2, w1
     71c:	add	x2, x0, x2
     720:	mov	x1, #0xffffffffffffffff    	// #-1
     724:	cmp	x0, x2
     728:	b.eq	740 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1d8>  // b.none
     72c:	nop
     730:	stp	x1, x1, [x0]
     734:	add	x0, x0, #0x18
     738:	cmp	x2, x0
     73c:	b.ne	730 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1c8>  // b.any
     740:	ldr	w2, [x19, #88]
     744:	mov	x3, #0xffffffffffffffff    	// #-1
     748:	ldr	x1, [x19, #80]
     74c:	str	xzr, [x19, #320]
     750:	stp	xzr, x3, [x19, #336]
     754:	mov	x0, x28
     758:	str	xzr, [x19, #352]
     75c:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     760:	ldr	w3, [x28, #48]
     764:	cmp	w3, #0x1
     768:	b.ls	9dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x474>  // b.plast
     76c:	mov	x2, #0x1                   	// #1
     770:	mov	w4, #0x3f                  	// #63
     774:	stp	x23, x24, [sp, #48]
     778:	stp	x25, x26, [sp, #64]
     77c:	nop
     780:	ldr	w0, [x19, #88]
     784:	cmp	x0, x2
     788:	b.ls	acc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x564>  // b.plast
     78c:	ldr	x0, [x19, #80]
     790:	ldr	x0, [x0, x2, lsl #3]
     794:	cbz	x0, 9b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x44c>
     798:	ldr	w1, [x19, #168]
     79c:	clz	x0, x0
     7a0:	sub	w0, w4, w0
     7a4:	cmp	x0, x1
     7a8:	b.cs	aec <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x584>  // b.hs, b.nlast
     7ac:	ldr	x1, [x19, #160]
     7b0:	str	w2, [x1, x0, lsl #2]
     7b4:	add	x2, x2, #0x1
     7b8:	cmp	w3, w2
     7bc:	b.hi	780 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x218>  // b.pmore
     7c0:	ldr	w22, [x28, #48]
     7c4:	cmp	w22, #0x1
     7c8:	b.ls	9d4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x46c>  // b.plast
     7cc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7d0:	adrp	x24, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7d4:	mov	x20, #0x1                   	// #1
     7d8:	add	x24, x24, #0x0
     7dc:	ldr	x23, [x0]
     7e0:	add	x23, x23, #0x10
     7e4:	b	818 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2b0>
     7e8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7ec:	ldr	x1, [x0]
     7f0:	mov	x0, x26
     7f4:	add	x1, x1, #0x10
     7f8:	str	x1, [x26]
     7fc:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     800:	mov	x0, x26
     804:	mov	x1, #0x20                  	// #32
     808:	bl	0 <_ZdlPvm>
     80c:	add	x20, x20, #0x1
     810:	cmp	w22, w20
     814:	b.ls	904 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x39c>  // b.plast
     818:	ldr	w1, [x19, #88]
     81c:	cmp	x1, x20
     820:	b.ls	acc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x564>  // b.plast
     824:	ldr	x1, [x19, #80]
     828:	ldr	x26, [x1, x20, lsl #3]
     82c:	cbz	x26, 9b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x44c>
     830:	ldr	x1, [x28, #40]
     834:	clz	x21, x26
     838:	mov	w2, #0x3f                  	// #63
     83c:	sub	w21, w2, w21
     840:	ldr	x25, [x19, #8]
     844:	cbz	x1, b1c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5b4>
     848:	ldr	w1, [x28, #48]
     84c:	cmp	w1, w20
     850:	b.ls	afc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x594>  // b.plast
     854:	ldr	x27, [x28, #32]
     858:	mov	x0, #0x30                  	// #48
     85c:	bl	0 <_Znwm>
     860:	mov	x3, x26
     864:	mov	w2, w20
     868:	add	x27, x27, x20, lsl #5
     86c:	mov	x26, x0
     870:	mov	x1, x27
     874:	bl	160 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>
     878:	ldr	x0, [x25, x21, lsl #3]
     87c:	str	x26, [x25, x21, lsl #3]
     880:	cbz	x0, 88c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x324>
     884:	mov	x1, #0x30                  	// #48
     888:	bl	0 <_ZdlPvm>
     88c:	ldr	x0, [x19, #8]
     890:	ldr	x27, [x19, #32]
     894:	ldr	x1, [x0, x21, lsl #3]
     898:	ldrb	w0, [x1, #41]
     89c:	cbnz	w0, 8bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x354>
     8a0:	ldr	d0, [x1, #16]
     8a4:	mov	x2, #0x0                   	// #0
     8a8:	cnt	v0.8b, v0.8b
     8ac:	addv	b0, v0.8b
     8b0:	umov	w0, v0.b[0]
     8b4:	cmp	w0, #0x1
     8b8:	b.le	8d4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x36c>
     8bc:	mov	x0, #0x20                  	// #32
     8c0:	ldr	x26, [x1, #24]
     8c4:	bl	0 <_Znwm>
     8c8:	mov	x2, x0
     8cc:	stp	x23, x26, [x0]
     8d0:	stp	x26, xzr, [x0, #16]
     8d4:	ldr	x26, [x27, x21, lsl #3]
     8d8:	str	x2, [x27, x21, lsl #3]
     8dc:	cbz	x26, 80c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2a4>
     8e0:	ldr	x0, [x26]
     8e4:	ldr	x1, [x0, #8]
     8e8:	cmp	x1, x24
     8ec:	b.eq	7e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x280>  // b.none
     8f0:	mov	x0, x26
     8f4:	add	x20, x20, #0x1
     8f8:	blr	x1
     8fc:	cmp	w22, w20
     900:	b.hi	818 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2b0>  // b.pmore
     904:	ldr	w8, [x28, #48]
     908:	cmp	w8, #0x1
     90c:	b.ls	9d4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x46c>  // b.plast
     910:	mov	x7, #0x1                   	// #1
     914:	ldr	w9, [x19, #88]
     918:	mov	x10, x7
     91c:	mov	w0, #0x3f                  	// #63
     920:	b	93c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3d4>
     924:	ldr	x2, [x19, #320]
     928:	orr	x1, x2, x1
     92c:	str	x1, [x19, #320]
     930:	add	x7, x7, #0x1
     934:	cmp	w8, w7
     938:	b.ls	9d4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x46c>  // b.plast
     93c:	cmp	x9, x7
     940:	b.ls	acc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x564>  // b.plast
     944:	ldr	x1, [x19, #80]
     948:	ldr	x1, [x1, x7, lsl #3]
     94c:	cbz	x1, 9b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x44c>
     950:	clz	x4, x1
     954:	ldr	x2, [x19, #8]
     958:	sub	w3, w0, w4
     95c:	sub	w4, w0, w4
     960:	ldr	x2, [x2, x3, lsl #3]
     964:	ldrb	w2, [x2, #41]
     968:	cbz	w2, 924 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3bc>
     96c:	lsl	x4, x10, x4
     970:	subs	x2, x1, x4
     974:	b.eq	930 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3c8>  // b.none
     978:	sub	x1, x4, x1
     97c:	ands	x1, x1, x2
     980:	b.eq	9b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x44c>  // b.none
     984:	ldr	x5, [x19, #56]
     988:	clz	x3, x1
     98c:	sub	w3, w0, w3
     990:	cmp	x1, x2
     994:	eor	x2, x2, x1
     998:	ldr	x1, [x5, x3, lsl #3]
     99c:	orr	x1, x1, x4
     9a0:	str	x1, [x5, x3, lsl #3]
     9a4:	b.eq	930 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3c8>  // b.none
     9a8:	neg	x1, x2
     9ac:	ands	x1, x1, x2
     9b0:	b.ne	988 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x420>  // b.any
     9b4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9b8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9bc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9c0:	add	x3, x3, #0x0
     9c4:	add	x1, x1, #0x0
     9c8:	add	x0, x0, #0x0
     9cc:	mov	w2, #0x64                  	// #100
     9d0:	bl	0 <__assert_fail>
     9d4:	ldp	x23, x24, [sp, #48]
     9d8:	ldp	x25, x26, [sp, #64]
     9dc:	ldr	x0, [x19, #320]
     9e0:	ldp	x21, x22, [sp, #32]
     9e4:	ldp	x27, x28, [sp, #80]
     9e8:	str	x0, [x19, #328]
     9ec:	ldp	x19, x20, [sp, #16]
     9f0:	ldp	x29, x30, [sp], #96
     9f4:	ret
     9f8:	add	x0, x19, #0xe0
     9fc:	mov	x2, #0x60                  	// #96
     a00:	b	71c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b4>
     a04:	add	x0, x19, #0xa0
     a08:	mov	x2, x20
     a0c:	mov	x3, #0x4                   	// #4
     a10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     a14:	ldr	w0, [x19, #172]
     a18:	b	6c8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x160>
     a1c:	add	x0, x19, #0x50
     a20:	mov	x2, x20
     a24:	mov	x3, #0x8                   	// #8
     a28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     a2c:	ldr	w0, [x19, #92]
     a30:	cmp	x20, x0
     a34:	b.ls	684 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x11c>  // b.plast
     a38:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a3c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a40:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a44:	add	x3, x3, #0x0
     a48:	add	x1, x1, #0x0
     a4c:	add	x0, x0, #0x0
     a50:	mov	w2, #0x43                  	// #67
     a54:	stp	x23, x24, [sp, #48]
     a58:	stp	x25, x26, [sp, #64]
     a5c:	bl	0 <__assert_fail>
     a60:	mov	x22, x19
     a64:	str	x20, [x21, #16]
     a68:	str	xzr, [x19, #16]
     a6c:	str	xzr, [x22, #32]!
     a70:	mov	x21, x19
     a74:	str	x20, [x22, #16]
     a78:	str	xzr, [x19, #40]
     a7c:	str	xzr, [x21, #56]!
     a80:	str	x20, [x21, #16]
     a84:	add	x1, x19, #0x60
     a88:	mov	w0, #0x8                   	// #8
     a8c:	mov	w21, #0x1                   	// #1
     a90:	mov	x20, #0x1                   	// #1
     a94:	str	xzr, [x19, #64]
     a98:	str	x1, [x19, #80]
     a9c:	str	w0, [x19, #92]
     aa0:	b	684 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x11c>
     aa4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     aa8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     aac:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ab0:	add	x3, x3, #0x0
     ab4:	add	x1, x1, #0x0
     ab8:	add	x0, x0, #0x0
     abc:	mov	w2, #0x15b                 	// #347
     ac0:	stp	x23, x24, [sp, #48]
     ac4:	stp	x25, x26, [sp, #64]
     ac8:	bl	0 <__assert_fail>
     acc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ad0:	add	x3, x3, #0x0
     ad4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ad8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     adc:	add	x1, x1, #0x0
     ae0:	add	x0, x0, #0x0
     ae4:	mov	w2, #0x95                  	// #149
     ae8:	bl	0 <__assert_fail>
     aec:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     af0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     af4:	add	x3, x3, #0x0
     af8:	b	ad8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x570>
     afc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b00:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b04:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b08:	add	x3, x3, #0x0
     b0c:	add	x1, x1, #0x0
     b10:	add	x0, x0, #0x0
     b14:	mov	w2, #0x156                 	// #342
     b18:	bl	0 <__assert_fail>
     b1c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b20:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b24:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b28:	add	x3, x3, #0x0
     b2c:	add	x1, x1, #0x0
     b30:	add	x0, x0, #0x0
     b34:	mov	w2, #0x154                 	// #340
     b38:	bl	0 <__assert_fail>
     b3c:	nop

0000000000000b40 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     b40:	stp	x29, x30, [sp, #-32]!
     b44:	mov	x29, sp
     b48:	str	x19, [sp, #16]
     b4c:	cbz	x2, c0c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xcc>
     b50:	ldp	x5, x4, [x0, #8]
     b54:	mov	w3, #0x3f                  	// #63
     b58:	clz	x2, x2
     b5c:	sub	w2, w3, w2
     b60:	sub	x3, x4, x5
     b64:	cmp	x2, x3, asr #3
     b68:	b.cs	bec <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xac>  // b.hs, b.nlast
     b6c:	ldr	x3, [x1]
     b70:	cbz	x3, c2c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xec>
     b74:	ldr	x0, [x0, #32]
     b78:	str	xzr, [x1]
     b7c:	ldr	x19, [x0, x2, lsl #3]
     b80:	str	x3, [x0, x2, lsl #3]
     b84:	cbz	x19, bcc <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x8c>
     b88:	ldr	x1, [x19]
     b8c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b90:	add	x0, x0, #0x0
     b94:	ldr	x1, [x1, #8]
     b98:	cmp	x1, x0
     b9c:	b.ne	bd8 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x98>  // b.any
     ba0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ba4:	mov	x0, x19
     ba8:	ldr	x1, [x1]
     bac:	add	x1, x1, #0x10
     bb0:	str	x1, [x19]
     bb4:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     bb8:	mov	x0, x19
     bbc:	mov	x1, #0x20                  	// #32
     bc0:	ldr	x19, [sp, #16]
     bc4:	ldp	x29, x30, [sp], #32
     bc8:	b	0 <_ZdlPvm>
     bcc:	ldr	x19, [sp, #16]
     bd0:	ldp	x29, x30, [sp], #32
     bd4:	ret
     bd8:	mov	x0, x19
     bdc:	mov	x16, x1
     be0:	ldr	x19, [sp, #16]
     be4:	ldp	x29, x30, [sp], #32
     be8:	br	x16
     bec:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bf0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bf4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bf8:	add	x3, x3, #0x0
     bfc:	add	x1, x1, #0x0
     c00:	add	x0, x0, #0x0
     c04:	mov	w2, #0xa1                  	// #161
     c08:	bl	0 <__assert_fail>
     c0c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c10:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c14:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c18:	add	x3, x3, #0x0
     c1c:	add	x1, x1, #0x0
     c20:	add	x0, x0, #0x0
     c24:	mov	w2, #0x64                  	// #100
     c28:	bl	0 <__assert_fail>
     c2c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c30:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c34:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c38:	add	x3, x3, #0x0
     c3c:	add	x1, x1, #0x0
     c40:	add	x0, x0, #0x0
     c44:	mov	w2, #0xa2                  	// #162
     c48:	bl	0 <__assert_fail>
     c4c:	nop

0000000000000c50 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     c50:	stp	x29, x30, [sp, #-16]!
     c54:	mov	x29, sp
     c58:	cbz	x1, c84 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x34>
     c5c:	ldr	w3, [x0, #168]
     c60:	clz	x1, x1
     c64:	mov	w2, #0x3f                  	// #63
     c68:	sub	w1, w2, w1
     c6c:	cmp	x1, x3
     c70:	b.cs	ca4 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x54>  // b.hs, b.nlast
     c74:	ldr	x0, [x0, #160]
     c78:	ldp	x29, x30, [sp], #16
     c7c:	ldr	w0, [x0, x1, lsl #2]
     c80:	ret
     c84:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c88:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c8c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c90:	add	x3, x3, #0x0
     c94:	add	x1, x1, #0x0
     c98:	add	x0, x0, #0x0
     c9c:	mov	w2, #0x64                  	// #100
     ca0:	bl	0 <__assert_fail>
     ca4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ca8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cac:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cb0:	add	x3, x3, #0x0
     cb4:	add	x1, x1, #0x0
     cb8:	add	x0, x0, #0x0
     cbc:	mov	w2, #0x99                  	// #153
     cc0:	bl	0 <__assert_fail>
     cc4:	nop

0000000000000cc8 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     cc8:	cbz	x1, d04 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x3c>
     ccc:	clz	x1, x1
     cd0:	mov	w2, #0x3f                  	// #63
     cd4:	ldr	x3, [x0, #8]
     cd8:	sub	w1, w2, w1
     cdc:	mov	w0, #0x1                   	// #1
     ce0:	ldr	x1, [x3, x1, lsl #3]
     ce4:	ldrb	w2, [x1, #41]
     ce8:	cbz	w2, cf0 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x28>
     cec:	ret
     cf0:	ldr	d0, [x1, #16]
     cf4:	cnt	v0.8b, v0.8b
     cf8:	addv	b0, v0.8b
     cfc:	umov	w0, v0.b[0]
     d00:	ret
     d04:	stp	x29, x30, [sp, #-16]!
     d08:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d0c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d10:	mov	x29, sp
     d14:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d18:	add	x3, x3, #0x0
     d1c:	add	x1, x1, #0x0
     d20:	add	x0, x0, #0x0
     d24:	mov	w2, #0x64                  	// #100
     d28:	bl	0 <__assert_fail>
     d2c:	nop

0000000000000d30 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     d30:	stp	x29, x30, [sp, #-64]!
     d34:	mov	x29, sp
     d38:	stp	x21, x22, [sp, #32]
     d3c:	mov	x21, x1
     d40:	mov	w22, #0x3f                  	// #63
     d44:	str	x23, [sp, #48]
     d48:	mov	x23, x0
     d4c:	stp	x19, x20, [sp, #16]
     d50:	cbz	x21, e44 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x114>
     d54:	ldp	x0, x2, [x23, #8]
     d58:	clz	x19, x21
     d5c:	sub	w19, w22, w19
     d60:	sub	x2, x2, x0
     d64:	cmp	x19, x2, asr #3
     d68:	b.cs	e24 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf4>  // b.hs, b.nlast
     d6c:	ldr	x20, [x0, x19, lsl #3]
     d70:	mov	w1, #0x1                   	// #1
     d74:	mov	x0, x20
     d78:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     d7c:	tst	w0, #0xff
     d80:	b.eq	e04 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xd4>  // b.none
     d84:	ldrb	w0, [x20, #41]
     d88:	cbnz	w0, da4 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x74>
     d8c:	ldr	d0, [x20, #16]
     d90:	cnt	v0.8b, v0.8b
     d94:	addv	b0, v0.8b
     d98:	umov	w1, v0.b[0]
     d9c:	cmp	w1, #0x1
     da0:	b.eq	de8 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb8>  // b.none
     da4:	ldr	x0, [x23, #32]
     da8:	ldr	x1, [x20, #24]
     dac:	ldr	x0, [x0, x19, lsl #3]
     db0:	ldr	x2, [x0]
     db4:	ldr	x2, [x2, #16]
     db8:	blr	x2
     dbc:	ldrb	w1, [x20, #41]
     dc0:	cbz	w1, dcc <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>
     dc4:	mov	x21, x0
     dc8:	b	d50 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x20>
     dcc:	mov	x1, x0
     dd0:	mov	x0, x21
     dd4:	ldp	x19, x20, [sp, #16]
     dd8:	ldp	x21, x22, [sp, #32]
     ddc:	ldr	x23, [sp, #48]
     de0:	ldp	x29, x30, [sp], #64
     de4:	ret
     de8:	mov	x0, x21
     dec:	ldr	x1, [x20, #24]
     df0:	ldp	x19, x20, [sp, #16]
     df4:	ldp	x21, x22, [sp, #32]
     df8:	ldr	x23, [sp, #48]
     dfc:	ldp	x29, x30, [sp], #64
     e00:	ret
     e04:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e08:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e0c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e10:	add	x3, x3, #0x0
     e14:	add	x1, x1, #0x0
     e18:	add	x0, x0, #0x0
     e1c:	mov	w2, #0xb5                  	// #181
     e20:	bl	0 <__assert_fail>
     e24:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e28:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e2c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e30:	add	x3, x3, #0x0
     e34:	add	x1, x1, #0x0
     e38:	add	x0, x0, #0x0
     e3c:	mov	w2, #0xb3                  	// #179
     e40:	bl	0 <__assert_fail>
     e44:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e48:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e4c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e50:	add	x3, x3, #0x0
     e54:	add	x1, x1, #0x0
     e58:	add	x0, x0, #0x0
     e5c:	mov	w2, #0x64                  	// #100
     e60:	bl	0 <__assert_fail>
     e64:	nop

0000000000000e68 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     e68:	stp	x29, x30, [sp, #-48]!
     e6c:	mov	x29, sp
     e70:	stp	x21, x22, [sp, #32]
     e74:	mov	x22, x0
     e78:	ldr	x0, [x1]
     e7c:	stp	x19, x20, [sp, #16]
     e80:	cbz	x0, fb4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>
     e84:	clz	x0, x0
     e88:	mov	w21, #0x3f                  	// #63
     e8c:	ldr	x2, [x22, #8]
     e90:	sub	w21, w21, w0
     e94:	mov	x20, x1
     e98:	ldr	x1, [x1, #8]
     e9c:	ldr	x19, [x2, x21, lsl #3]
     ea0:	ldr	x0, [x19, #24]
     ea4:	tst	x1, x0
     ea8:	b.eq	f94 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     eac:	ldrb	w2, [x19, #41]
     eb0:	eor	x0, x1, x0
     eb4:	str	x0, [x19, #24]
     eb8:	cbz	w2, f64 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     ebc:	mov	x0, x19
     ec0:	mov	w1, #0x1                   	// #1
     ec4:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     ec8:	tst	w0, #0xff
     ecc:	b.ne	f54 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xec>  // b.any
     ed0:	ldr	x2, [x20]
     ed4:	ldr	x0, [x22, #328]
     ed8:	ldr	x1, [x22, #56]
     edc:	eor	x0, x0, x2
     ee0:	str	x0, [x22, #328]
     ee4:	ldr	x19, [x1, x21, lsl #3]
     ee8:	cbz	x19, f54 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xec>
     eec:	neg	x2, x19
     ef0:	mov	w21, #0x3f                  	// #63
     ef4:	ands	x2, x2, x19
     ef8:	b.ne	f0c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xa4>  // b.any
     efc:	b	fb4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>
     f00:	neg	x2, x19
     f04:	ands	x2, x2, x19
     f08:	b.eq	fb4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>  // b.none
     f0c:	clz	x2, x2
     f10:	ldr	x0, [x22, #8]
     f14:	sub	w2, w21, w2
     f18:	ldr	x1, [x20]
     f1c:	ldr	x4, [x0, x2, lsl #3]
     f20:	ldr	x3, [x4, #24]
     f24:	tst	x1, x3
     f28:	b.eq	f94 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     f2c:	ldr	x0, [x22, #32]
     f30:	eor	x3, x1, x3
     f34:	ldr	x0, [x0, x2, lsl #3]
     f38:	ldr	x2, [x0]
     f3c:	ldr	x2, [x2, #24]
     f40:	str	x3, [x4, #24]
     f44:	blr	x2
     f48:	sub	x1, x19, #0x1
     f4c:	ands	x19, x19, x1
     f50:	b.ne	f00 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x98>  // b.any
     f54:	ldp	x19, x20, [sp, #16]
     f58:	ldp	x21, x22, [sp, #32]
     f5c:	ldp	x29, x30, [sp], #48
     f60:	ret
     f64:	ldr	d0, [x19, #16]
     f68:	cnt	v0.8b, v0.8b
     f6c:	addv	b0, v0.8b
     f70:	umov	w0, v0.b[0]
     f74:	cmp	w0, #0x1
     f78:	b.le	ebc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x54>
     f7c:	ldr	x0, [x22, #32]
     f80:	ldr	x0, [x0, x21, lsl #3]
     f84:	ldr	x2, [x0]
     f88:	ldr	x2, [x2, #24]
     f8c:	blr	x2
     f90:	b	ebc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x54>
     f94:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f98:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f9c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fa0:	add	x3, x3, #0x0
     fa4:	add	x1, x1, #0x0
     fa8:	add	x0, x0, #0x0
     fac:	mov	w2, #0xf1                  	// #241
     fb0:	bl	0 <__assert_fail>
     fb4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fb8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fbc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fc0:	add	x3, x3, #0x0
     fc4:	add	x1, x1, #0x0
     fc8:	add	x0, x0, #0x0
     fcc:	mov	w2, #0x64                  	// #100
     fd0:	bl	0 <__assert_fail>
     fd4:	nop

0000000000000fd8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
     fd8:	stp	x29, x30, [sp, #-64]!
     fdc:	mov	x29, sp
     fe0:	ldr	x2, [x1]
     fe4:	stp	x19, x20, [sp, #16]
     fe8:	stp	x21, x22, [sp, #32]
     fec:	str	x23, [sp, #48]
     ff0:	cbz	x2, 10c0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>
     ff4:	clz	x2, x2
     ff8:	mov	x21, x0
     ffc:	ldr	x0, [x0, #8]
    1000:	mov	w19, #0x3f                  	// #63
    1004:	sub	w20, w19, w2
    1008:	mov	x22, x1
    100c:	mov	w1, #0x1                   	// #1
    1010:	ldr	x23, [x0, x20, lsl #3]
    1014:	mov	x0, x23
    1018:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
    101c:	ldr	x1, [x22, #8]
    1020:	and	w0, w0, #0xff
    1024:	ldr	x2, [x23, #24]
    1028:	tst	x1, x2
    102c:	b.ne	10e0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x108>  // b.any
    1030:	eor	x1, x1, x2
    1034:	str	x1, [x23, #24]
    1038:	cbnz	w0, 10ac <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd4>
    103c:	ldr	x2, [x22]
    1040:	ldr	x0, [x21, #328]
    1044:	ldr	x1, [x21, #56]
    1048:	eor	x0, x0, x2
    104c:	str	x0, [x21, #328]
    1050:	ldr	x3, [x1, x20, lsl #3]
    1054:	cbz	x3, 10ac <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd4>
    1058:	neg	x2, x3
    105c:	ands	x0, x2, x3
    1060:	b.eq	10c0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>  // b.none
    1064:	mov	w4, w19
    1068:	ldr	x2, [x22]
    106c:	ldr	x5, [x21, #8]
    1070:	b	1080 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xa8>
    1074:	neg	x0, x3
    1078:	ands	x0, x0, x3
    107c:	b.eq	10c0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>  // b.none
    1080:	clz	x0, x0
    1084:	sub	w0, w4, w0
    1088:	ldr	x1, [x5, x0, lsl #3]
    108c:	ldr	x0, [x1, #24]
    1090:	tst	x2, x0
    1094:	b.ne	10e0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x108>  // b.any
    1098:	eor	x0, x2, x0
    109c:	str	x0, [x1, #24]
    10a0:	sub	x0, x3, #0x1
    10a4:	ands	x3, x3, x0
    10a8:	b.ne	1074 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x9c>  // b.any
    10ac:	ldp	x19, x20, [sp, #16]
    10b0:	ldp	x21, x22, [sp, #32]
    10b4:	ldr	x23, [sp, #48]
    10b8:	ldp	x29, x30, [sp], #64
    10bc:	ret
    10c0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10c4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10c8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10cc:	add	x3, x3, #0x0
    10d0:	add	x1, x1, #0x0
    10d4:	add	x0, x0, #0x0
    10d8:	mov	w2, #0x64                  	// #100
    10dc:	bl	0 <__assert_fail>
    10e0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10e4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10e8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10ec:	add	x3, x3, #0x0
    10f0:	add	x1, x1, #0x0
    10f4:	add	x0, x0, #0x0
    10f8:	mov	w2, #0xf6                  	// #246
    10fc:	bl	0 <__assert_fail>

0000000000001100 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
    1100:	ldr	x2, [x0, #352]
    1104:	tst	x1, x2
    1108:	b.ne	111c <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x1c>  // b.any
    110c:	ldr	x0, [x0, #344]
    1110:	bics	xzr, x1, x0
    1114:	cset	w0, ne  // ne = any
    1118:	ret
    111c:	mov	w0, #0x2                   	// #2
    1120:	ret
    1124:	nop

0000000000001128 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
    1128:	cbz	x1, 11f0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc8>
    112c:	stp	x29, x30, [sp, #-64]!
    1130:	mov	x29, sp
    1134:	stp	x19, x20, [sp, #16]
    1138:	neg	x19, x1
    113c:	mov	x20, x1
    1140:	stp	x21, x22, [sp, #32]
    1144:	ands	x19, x19, x1
    1148:	mov	w22, #0x3f                  	// #63
    114c:	stp	x23, x24, [sp, #48]
    1150:	mov	x23, x0
    1154:	b.ne	1194 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x6c>  // b.any
    1158:	b	1214 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xec>
    115c:	ldr	w1, [x21, #36]
    1160:	sub	w1, w1, #0x1
    1164:	str	w1, [x21, #36]
    1168:	cmp	w1, w0
    116c:	b.hi	1234 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x10c>  // b.pmore
    1170:	cbnz	w1, 1180 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x58>
    1174:	ldr	x0, [x23, #344]
    1178:	eor	x0, x0, x19
    117c:	str	x0, [x23, #344]
    1180:	cmp	x24, x19
    1184:	b.eq	11dc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xb4>  // b.none
    1188:	neg	x19, x20
    118c:	ands	x19, x19, x20
    1190:	b.eq	1214 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xec>  // b.none
    1194:	clz	x1, x19
    1198:	mov	x24, x20
    119c:	ldr	x0, [x23, #8]
    11a0:	sub	w1, w22, w1
    11a4:	eor	x20, x20, x19
    11a8:	ldr	x21, [x0, x1, lsl #3]
    11ac:	mov	x0, x21
    11b0:	bl	258 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>
    11b4:	cbnz	w0, 11f4 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xcc>
    11b8:	ldr	w0, [x21, #32]
    11bc:	cmp	w0, #0x0
    11c0:	b.gt	115c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x34>
    11c4:	b.ne	1180 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x58>  // b.any
    11c8:	ldr	x0, [x23, #352]
    11cc:	cmp	x24, x19
    11d0:	eor	x0, x0, x19
    11d4:	str	x0, [x23, #352]
    11d8:	b.ne	1188 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x60>  // b.any
    11dc:	ldp	x19, x20, [sp, #16]
    11e0:	ldp	x21, x22, [sp, #32]
    11e4:	ldp	x23, x24, [sp, #48]
    11e8:	ldp	x29, x30, [sp], #64
    11ec:	ret
    11f0:	ret
    11f4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    11f8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    11fc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1200:	add	x3, x3, #0x0
    1204:	add	x1, x1, #0x0
    1208:	add	x0, x0, #0x0
    120c:	mov	w2, #0x102                 	// #258
    1210:	bl	0 <__assert_fail>
    1214:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1218:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    121c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1220:	add	x3, x3, #0x0
    1224:	add	x1, x1, #0x0
    1228:	add	x0, x0, #0x0
    122c:	mov	w2, #0x64                  	// #100
    1230:	bl	0 <__assert_fail>
    1234:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1238:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    123c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1240:	add	x3, x3, #0x0
    1244:	add	x1, x1, #0x0
    1248:	add	x0, x0, #0x0
    124c:	mov	w2, #0x112                 	// #274
    1250:	bl	0 <__assert_fail>
    1254:	nop

0000000000001258 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
    1258:	ldr	x2, [x0, #344]
    125c:	orr	x2, x2, x1
    1260:	str	x2, [x0, #344]
    1264:	cbz	x1, 12d8 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x80>
    1268:	stp	x29, x30, [sp, #-16]!
    126c:	neg	x2, x1
    1270:	ands	x2, x2, x1
    1274:	mov	x29, sp
    1278:	b.eq	12dc <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    127c:	mov	w6, #0x3f                  	// #63
    1280:	ldr	x7, [x0, #8]
    1284:	b	1294 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x3c>
    1288:	neg	x2, x1
    128c:	ands	x2, x2, x1
    1290:	b.eq	12dc <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    1294:	clz	x0, x2
    1298:	mov	x5, x1
    129c:	sub	w0, w6, w0
    12a0:	eor	x1, x1, x2
    12a4:	ldr	x3, [x7, x0, lsl #3]
    12a8:	ldr	w4, [x3, #32]
    12ac:	cmp	w4, #0x0
    12b0:	b.le	12c8 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x70>
    12b4:	ldr	w0, [x3, #36]
    12b8:	add	w0, w0, #0x1
    12bc:	str	w0, [x3, #36]
    12c0:	cmp	w0, w4
    12c4:	b.hi	12fc <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0xa4>  // b.pmore
    12c8:	cmp	x5, x2
    12cc:	b.ne	1288 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x30>  // b.any
    12d0:	ldp	x29, x30, [sp], #16
    12d4:	ret
    12d8:	ret
    12dc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    12e0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    12e4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    12e8:	add	x3, x3, #0x0
    12ec:	add	x1, x1, #0x0
    12f0:	add	x0, x0, #0x0
    12f4:	mov	w2, #0x64                  	// #100
    12f8:	bl	0 <__assert_fail>
    12fc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1300:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1304:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1308:	add	x3, x3, #0x0
    130c:	add	x1, x1, #0x0
    1310:	add	x0, x0, #0x0
    1314:	mov	w2, #0x11d                 	// #285
    1318:	bl	0 <__assert_fail>
    131c:	nop

0000000000001320 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
    1320:	stp	x29, x30, [sp, #-64]!
    1324:	mov	w2, #0x18                  	// #24
    1328:	mov	x29, sp
    132c:	stp	x21, x22, [sp, #32]
    1330:	mov	w22, #0x3f                  	// #63
    1334:	ldr	w21, [x1, #184]
    1338:	stp	x23, x24, [sp, #48]
    133c:	mov	x24, x0
    1340:	mov	x23, x1
    1344:	ldr	x0, [x1, #176]
    1348:	stp	x19, x20, [sp, #16]
    134c:	mov	x20, #0x0                   	// #0
    1350:	mov	x19, x0
    1354:	umaddl	x21, w21, w2, x0
    1358:	cmp	x21, x0
    135c:	b.eq	13b4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x94>  // b.none
    1360:	ldrb	w2, [x19, #16]
    1364:	mov	w1, #0x0                   	// #0
    1368:	cbnz	w2, 1370 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x50>
    136c:	ldr	w1, [x19, #20]
    1370:	ldr	x2, [x19]
    1374:	cbz	x2, 13d4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xb4>
    1378:	clz	x2, x2
    137c:	ldr	x3, [x24, #8]
    1380:	sub	w2, w22, w2
    1384:	ldr	x0, [x3, x2, lsl #3]
    1388:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
    138c:	tst	w0, #0xff
    1390:	b.ne	139c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>  // b.any
    1394:	ldr	x0, [x19]
    1398:	orr	x20, x20, x0
    139c:	add	x19, x19, #0x18
    13a0:	cmp	x21, x19
    13a4:	b.ne	1360 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x40>  // b.any
    13a8:	ldr	x0, [x24, #320]
    13ac:	ands	x0, x20, x0
    13b0:	b.ne	13c0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xa0>  // b.any
    13b4:	ldr	x20, [x23, #304]
    13b8:	ldr	x0, [x24, #336]
    13bc:	and	x0, x20, x0
    13c0:	ldp	x19, x20, [sp, #16]
    13c4:	ldp	x21, x22, [sp, #32]
    13c8:	ldp	x23, x24, [sp, #48]
    13cc:	ldp	x29, x30, [sp], #64
    13d0:	ret
    13d4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13d8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13dc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13e0:	add	x3, x3, #0x0
    13e4:	add	x1, x1, #0x0
    13e8:	add	x0, x0, #0x0
    13ec:	mov	w2, #0x64                  	// #100
    13f0:	bl	0 <__assert_fail>
    13f4:	nop

00000000000013f8 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
    13f8:	stp	x29, x30, [sp, #-16]!
    13fc:	mov	x29, sp
    1400:	cbz	x1, 1470 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x78>
    1404:	clz	x1, x1
    1408:	mov	w2, #0x3f                  	// #63
    140c:	ldr	x3, [x0, #8]
    1410:	sub	w4, w2, w1
    1414:	sub	w1, w2, w1
    1418:	ldr	x3, [x3, x4, lsl #3]
    141c:	ldrb	w2, [x3, #41]
    1420:	cbz	w2, 1450 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x58>
    1424:	ldrb	w2, [x3, #40]
    1428:	cbnz	w2, 1450 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x58>
    142c:	ldr	x4, [x0, #336]
    1430:	mov	x2, #0x1                   	// #1
    1434:	mov	w5, #0x1                   	// #1
    1438:	strb	w5, [x3, #40]
    143c:	lsl	x1, x2, x1
    1440:	eor	x1, x4, x1
    1444:	str	x1, [x0, #336]
    1448:	ldp	x29, x30, [sp], #16
    144c:	ret
    1450:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1454:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1458:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    145c:	add	x3, x3, #0x0
    1460:	add	x1, x1, #0x0
    1464:	add	x0, x0, #0x0
    1468:	mov	w2, #0x15a                 	// #346
    146c:	bl	0 <__assert_fail>
    1470:	bl	108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>
    1474:	nop

0000000000001478 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
    1478:	cbz	x1, 14d4 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x5c>
    147c:	clz	x1, x1
    1480:	mov	w2, #0x3f                  	// #63
    1484:	ldr	x3, [x0, #8]
    1488:	sub	w4, w2, w1
    148c:	sub	w1, w2, w1
    1490:	ldr	x2, [x3, x4, lsl #3]
    1494:	ldrb	w3, [x2, #41]
    1498:	strb	wzr, [x2, #40]
    149c:	cbz	w3, 14b4 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x3c>
    14a0:	ldr	x3, [x0, #336]
    14a4:	mov	x4, #0x1                   	// #1
    14a8:	lsl	x4, x4, x1
    14ac:	eor	x3, x3, x4
    14b0:	str	x3, [x0, #336]
    14b4:	ldr	w2, [x2, #32]
    14b8:	cbnz	w2, 14d0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x58>
    14bc:	ldr	x3, [x0, #352]
    14c0:	mov	x2, #0x1                   	// #1
    14c4:	lsl	x1, x2, x1
    14c8:	eor	x1, x3, x1
    14cc:	str	x1, [x0, #352]
    14d0:	ret
    14d4:	stp	x29, x30, [sp, #-16]!
    14d8:	mov	x29, sp
    14dc:	bl	108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>

00000000000014e0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
    14e0:	stp	x29, x30, [sp, #-144]!
    14e4:	mov	x29, sp
    14e8:	stp	x19, x20, [sp, #16]
    14ec:	add	x20, x0, #0xd0
    14f0:	stp	x21, x22, [sp, #32]
    14f4:	stp	x23, x24, [sp, #48]
    14f8:	stp	x25, x26, [sp, #64]
    14fc:	mov	x26, x1
    1500:	mov	x25, x0
    1504:	stp	x27, x28, [sp, #80]
    1508:	ldr	w1, [x20, #8]
    150c:	ldrb	w0, [x20, #8]
    1510:	cmp	wzr, w1, lsr #1
    1514:	and	w0, w0, #0x1
    1518:	b.eq	1924 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x444>  // b.none
    151c:	cbnz	w0, 1684 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1a4>
    1520:	ldr	w4, [x25, #232]
    1524:	mov	w1, #0x18                  	// #24
    1528:	ldr	x19, [x25, #224]
    152c:	umull	x4, w4, w1
    1530:	add	x23, x19, x4
    1534:	cmp	x23, x19
    1538:	ldr	x28, [x25, #208]
    153c:	b.cc	1984 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4a4>  // b.lo, b.ul, b.last
    1540:	b.eq	197c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x49c>  // b.none
    1544:	ldr	x1, [x19]
    1548:	cmn	x1, #0x1
    154c:	b.eq	16b4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1d4>  // b.none
    1550:	cmn	x1, #0x2
    1554:	b.eq	1690 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1b0>  // b.none
    1558:	cbz	w0, 16c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1e8>
    155c:	add	x3, x25, #0xe0
    1560:	mov	x0, #0x60                  	// #96
    1564:	add	x24, x26, #0x10
    1568:	add	x27, x3, x0
    156c:	adrp	x22, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1570:	add	x0, x22, #0x0
    1574:	str	x0, [sp, #112]
    1578:	cbz	x19, 1678 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x198>
    157c:	ldr	x2, [x25, #208]
    1580:	cmp	x2, x28
    1584:	b.ne	19e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x504>  // b.any
    1588:	cbz	x27, 159c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xbc>
    158c:	cmp	x2, x28
    1590:	b.ne	19c4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4e4>  // b.any
    1594:	cmp	x27, x19
    1598:	b.eq	17c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e8>  // b.none
    159c:	ldr	w2, [x19, #16]
    15a0:	cbnz	w2, 16dc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1fc>
    15a4:	ldr	d1, [x19]
    15a8:	cnt	v0.8b, v1.8b
    15ac:	addv	b0, v0.8b
    15b0:	umov	w0, v0.b[0]
    15b4:	cmp	w0, #0x1
    15b8:	b.eq	16ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x20c>  // b.none
    15bc:	fmov	x1, d1
    15c0:	mov	x0, x25
    15c4:	bl	1478 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    15c8:	ldp	w21, w0, [x26, #8]
    15cc:	cmp	w21, w0
    15d0:	b.cs	1714 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x234>  // b.hs, b.nlast
    15d4:	ldr	x2, [x26]
    15d8:	mov	w22, w0
    15dc:	mov	w5, w21
    15e0:	ubfiz	x7, x21, #4, #32
    15e4:	add	x2, x2, x7
    15e8:	add	x5, x5, #0x1
    15ec:	ldp	x6, x7, [x19]
    15f0:	cmp	x22, x5
    15f4:	stp	x6, x7, [x2]
    15f8:	b.cc	1a04 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x524>  // b.lo, b.ul, b.last
    15fc:	ldr	x2, [x25, #208]
    1600:	add	w21, w21, #0x1
    1604:	str	w21, [x26, #8]
    1608:	cmp	x2, x28
    160c:	b.ne	19a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4c4>  // b.any
    1610:	add	x19, x19, #0x18
    1614:	cmp	x23, x19
    1618:	b.cc	1984 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4a4>  // b.lo, b.ul, b.last
    161c:	b.eq	1578 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    1620:	mov	x2, x19
    1624:	mov	x19, x2
    1628:	ldr	x0, [x2]
    162c:	cmn	x0, #0x1
    1630:	b.eq	1668 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x188>  // b.none
    1634:	cmn	x0, #0x2
    1638:	b.ne	1578 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.any
    163c:	ldr	x0, [x2, #8]
    1640:	cmn	x0, #0x2
    1644:	b.ne	1578 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.any
    1648:	add	x2, x2, #0x18
    164c:	cmp	x23, x2
    1650:	mov	x19, x2
    1654:	b.eq	1578 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    1658:	ldr	x0, [x2]
    165c:	mov	x19, x2
    1660:	cmn	x0, #0x1
    1664:	b.ne	1634 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x154>  // b.any
    1668:	ldr	x0, [x2, #8]
    166c:	cmn	x0, #0x1
    1670:	b.eq	1648 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x168>  // b.none
    1674:	cbnz	x19, 157c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x9c>
    1678:	cbz	x27, 17c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e8>
    167c:	ldr	x2, [x25, #208]
    1680:	b	158c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xac>
    1684:	add	x19, x25, #0xe0
    1688:	mov	x4, #0x60                  	// #96
    168c:	b	1530 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x50>
    1690:	ldr	x1, [x19, #8]
    1694:	cmn	x1, #0x2
    1698:	b.ne	1558 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>  // b.any
    169c:	add	x19, x19, #0x18
    16a0:	cmp	x23, x19
    16a4:	b.eq	1558 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>  // b.none
    16a8:	ldr	x1, [x19]
    16ac:	cmn	x1, #0x1
    16b0:	b.ne	1550 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x70>  // b.any
    16b4:	ldr	x1, [x19, #8]
    16b8:	cmn	x1, #0x1
    16bc:	b.eq	169c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1bc>  // b.none
    16c0:	cbnz	w0, 155c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x7c>
    16c4:	nop
    16c8:	ldr	w0, [x25, #232]
    16cc:	mov	w1, #0x18                  	// #24
    16d0:	ldr	x3, [x25, #224]
    16d4:	umull	x0, w0, w1
    16d8:	b	1564 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x84>
    16dc:	sub	w2, w2, #0x1
    16e0:	str	w2, [x19, #16]
    16e4:	cbnz	w2, 1610 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x130>
    16e8:	b	15a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xc4>
    16ec:	mov	x1, x19
    16f0:	mov	x0, x25
    16f4:	bl	fd8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    16f8:	ldr	d1, [x19]
    16fc:	mov	x0, x25
    1700:	fmov	x1, d1
    1704:	bl	1478 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1708:	ldp	w21, w0, [x26, #8]
    170c:	cmp	w21, w0
    1710:	b.cc	15d4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xf4>  // b.lo, b.ul, b.last
    1714:	mov	w2, w0
    1718:	add	x2, x2, #0x2
    171c:	orr	x2, x2, x2, lsr #1
    1720:	orr	x2, x2, x2, lsr #2
    1724:	orr	x2, x2, x2, lsr #4
    1728:	orr	x2, x2, x2, lsr #8
    172c:	orr	x0, x2, x2, lsr #16
    1730:	orr	x2, x0, x2, lsr #32
    1734:	mov	x0, #0xffffffff            	// #4294967295
    1738:	add	x2, x2, #0x1
    173c:	cmp	x2, x0
    1740:	b.hi	1948 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x468>  // b.pmore
    1744:	lsl	x0, x2, #4
    1748:	mov	x22, x2
    174c:	str	w2, [sp, #108]
    1750:	str	x2, [sp, #136]
    1754:	bl	0 <malloc>
    1758:	mov	x2, x0
    175c:	cbz	x0, 1a24 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x544>
    1760:	ldr	x0, [x26]
    1764:	ubfiz	x7, x21, #4, #32
    1768:	mov	w5, w21
    176c:	mov	x6, x2
    1770:	add	x11, x0, x7
    1774:	mov	x1, x0
    1778:	cmp	x0, x11
    177c:	b.eq	1798 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2b8>  // b.none
    1780:	ldp	x10, x9, [x1]
    1784:	stp	x10, x9, [x6]
    1788:	add	x1, x1, #0x10
    178c:	cmp	x11, x1
    1790:	add	x6, x6, #0x10
    1794:	b.ne	1780 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2a0>  // b.any
    1798:	cmp	x0, x24
    179c:	b.eq	17b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2d8>  // b.none
    17a0:	str	x2, [sp, #120]
    17a4:	bl	0 <free>
    17a8:	ldr	w21, [x26, #8]
    17ac:	ldr	x2, [sp, #120]
    17b0:	mov	w5, w21
    17b4:	ubfiz	x7, x21, #4, #32
    17b8:	ldr	w0, [sp, #108]
    17bc:	str	x2, [x26]
    17c0:	str	w0, [x26, #12]
    17c4:	b	15e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x104>
    17c8:	ldr	x0, [x26]
    17cc:	ldr	w6, [x26, #8]
    17d0:	mov	x2, x0
    17d4:	add	x6, x0, x6, lsl #4
    17d8:	cmp	x0, x6
    17dc:	b.eq	189c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3bc>  // b.none
    17e0:	add	x9, x25, #0xe0
    17e4:	mov	w7, #0x25                  	// #37
    17e8:	mov	w8, #0x18                  	// #24
    17ec:	mov	x10, #0xfffffffffffffffe    	// #-2
    17f0:	ldrb	w0, [x20, #8]
    17f4:	tbz	w0, #0, 1884 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3a4>
    17f8:	mov	x5, x9
    17fc:	mov	w1, #0x4                   	// #4
    1800:	ldp	x4, x11, [x2]
    1804:	cmn	x4, #0x1
    1808:	b.eq	18b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3d8>  // b.none
    180c:	cmn	x4, #0x2
    1810:	b.eq	18e0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x400>  // b.none
    1814:	sub	w3, w1, #0x1
    1818:	mul	w0, w7, w4
    181c:	mul	w1, w7, w11
    1820:	mov	w12, #0x1                   	// #1
    1824:	orr	x0, x1, x0, lsl #32
    1828:	sub	x0, x0, #0x1
    182c:	sub	x1, x0, x1, lsl #32
    1830:	eor	x1, x1, x1, lsr #22
    1834:	sub	x0, x1, #0x1
    1838:	sub	x1, x0, x1, lsl #13
    183c:	eor	x1, x1, x1, lsr #8
    1840:	add	x1, x1, x1, lsl #3
    1844:	eor	x1, x1, x1, lsr #15
    1848:	sub	x0, x1, #0x1
    184c:	sub	x1, x0, x1, lsl #27
    1850:	eor	x1, x1, x1, lsr #31
    1854:	and	w1, w3, w1
    1858:	umull	x0, w1, w8
    185c:	add	x13, x5, x0
    1860:	ldr	x0, [x5, x0]
    1864:	cmp	x4, x0
    1868:	b.eq	18ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x40c>  // b.none
    186c:	cmn	x0, #0x1
    1870:	b.eq	196c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x48c>  // b.none
    1874:	add	w1, w1, w12
    1878:	add	w12, w12, #0x1
    187c:	and	w1, w3, w1
    1880:	b	1858 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x378>
    1884:	ldr	w1, [x25, #232]
    1888:	ldr	x5, [x25, #224]
    188c:	cbnz	w1, 1800 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x320>
    1890:	add	x2, x2, #0x10
    1894:	cmp	x6, x2
    1898:	b.ne	17f0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x310>  // b.any
    189c:	ldp	x19, x20, [sp, #16]
    18a0:	ldp	x21, x22, [sp, #32]
    18a4:	ldp	x23, x24, [sp, #48]
    18a8:	ldp	x25, x26, [sp, #64]
    18ac:	ldp	x27, x28, [sp, #80]
    18b0:	ldp	x29, x30, [sp], #144
    18b4:	ret
    18b8:	cmn	x11, #0x1
    18bc:	b.ne	1814 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x334>  // b.any
    18c0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    18c4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    18c8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    18cc:	add	x3, x3, #0x0
    18d0:	add	x1, x1, #0x0
    18d4:	add	x0, x0, #0x0
    18d8:	mov	w2, #0x250                 	// #592
    18dc:	bl	0 <__assert_fail>
    18e0:	cmn	x11, #0x2
    18e4:	b.ne	1814 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x334>  // b.any
    18e8:	b	18c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3e0>
    18ec:	ldr	x14, [x13, #8]
    18f0:	cmp	x14, x11
    18f4:	b.ne	186c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x38c>  // b.any
    18f8:	stp	x10, x10, [x13]
    18fc:	ldr	w0, [x20, #8]
    1900:	lsr	w3, w0, #1
    1904:	sub	w1, w3, #0x1
    1908:	cbz	w3, 1a40 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x560>
    190c:	bfi	w0, w1, #1, #31
    1910:	str	w0, [x20, #8]
    1914:	ldr	w0, [x25, #220]
    1918:	add	w0, w0, #0x1
    191c:	str	w0, [x25, #220]
    1920:	b	1890 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3b0>
    1924:	cbnz	w0, 1960 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x480>
    1928:	ldr	w1, [x25, #232]
    192c:	mov	w2, #0x18                  	// #24
    1930:	ldr	x19, [x25, #224]
    1934:	umull	x1, w1, w2
    1938:	add	x19, x19, x1
    193c:	mov	x23, x19
    1940:	ldr	x28, [x25, #208]
    1944:	b	1558 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1948:	mov	w0, #0xffffffff            	// #-1
    194c:	mov	x22, #0xffffffff            	// #4294967295
    1950:	mov	x2, x22
    1954:	str	w0, [sp, #108]
    1958:	mov	x0, #0xffffffff0           	// #68719476720
    195c:	b	1750 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x270>
    1960:	add	x19, x25, #0xe0
    1964:	mov	x1, #0x60                  	// #96
    1968:	b	1938 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x458>
    196c:	ldr	x0, [x13, #8]
    1970:	cmn	x0, #0x1
    1974:	b.ne	1874 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x394>  // b.any
    1978:	b	1890 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3b0>
    197c:	mov	x23, x19
    1980:	b	1558 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1984:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1988:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    198c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1990:	add	x3, x3, #0x0
    1994:	add	x1, x1, #0x0
    1998:	add	x0, x0, #0x0
    199c:	mov	w2, #0x4e0                 	// #1248
    19a0:	bl	0 <__assert_fail>
    19a4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19a8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19ac:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19b0:	add	x3, x3, #0x0
    19b4:	add	x1, x1, #0x0
    19b8:	add	x0, x0, #0x0
    19bc:	mov	w2, #0x4cf                 	// #1231
    19c0:	bl	0 <__assert_fail>
    19c4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19c8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19cc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19d0:	add	x3, x3, #0x0
    19d4:	add	x1, x1, #0x0
    19d8:	add	x0, x0, #0x0
    19dc:	mov	w2, #0x4c8                 	// #1224
    19e0:	bl	0 <__assert_fail>
    19e4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19e8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19ec:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    19f0:	add	x3, x3, #0x0
    19f4:	add	x1, x1, #0x0
    19f8:	add	x0, x0, #0x0
    19fc:	mov	w2, #0x4c7                 	// #1223
    1a00:	bl	0 <__assert_fail>
    1a04:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a08:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a0c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a10:	add	x3, x3, #0x0
    1a14:	add	x1, x1, #0x0
    1a18:	add	x0, x0, #0x0
    1a1c:	mov	w2, #0x43                  	// #67
    1a20:	bl	0 <__assert_fail>
    1a24:	ldr	x0, [sp, #112]
    1a28:	mov	w1, #0x1                   	// #1
    1a2c:	str	x2, [sp, #120]
    1a30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1a34:	ldr	w21, [x26, #8]
    1a38:	ldr	x2, [sp, #120]
    1a3c:	b	1760 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x280>
    1a40:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a44:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a48:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a4c:	add	x3, x3, #0x0
    1a50:	add	x1, x1, #0x0
    1a54:	add	x0, x0, #0x0
    1a58:	mov	w2, #0x441                 	// #1089
    1a5c:	bl	0 <__assert_fail>

0000000000001a60 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
    1a60:	stp	x29, x30, [sp, #-160]!
    1a64:	mov	w3, #0x18                  	// #24
    1a68:	mov	x29, sp
    1a6c:	stp	x19, x20, [sp, #16]
    1a70:	ldr	w20, [x1, #184]
    1a74:	stp	x25, x26, [sp, #64]
    1a78:	mov	x25, x0
    1a7c:	ldr	x0, [x1, #176]
    1a80:	umaddl	x20, w20, w3, x0
    1a84:	cmp	x20, x0
    1a88:	b.eq	1be4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x184>  // b.none
    1a8c:	mov	x19, x2
    1a90:	add	x26, x25, #0xd0
    1a94:	stp	x21, x22, [sp, #32]
    1a98:	adrp	x21, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a9c:	add	x22, sp, #0x78
    1aa0:	add	x21, x21, #0x0
    1aa4:	stp	x23, x24, [sp, #48]
    1aa8:	mov	w23, #0xffffffe8            	// #-24
    1aac:	mov	x24, x0
    1ab0:	movk	x23, #0x17, lsl #32
    1ab4:	stp	x27, x28, [sp, #80]
    1ab8:	ldp	w0, w1, [x24, #8]
    1abc:	cmp	w0, w1
    1ac0:	b.eq	1e84 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x424>  // b.none
    1ac4:	cbnz	w0, 2420 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9c0>
    1ac8:	ldrb	w0, [x24, #16]
    1acc:	ldr	x1, [x24]
    1ad0:	str	x1, [sp, #96]
    1ad4:	cbz	w0, 1c78 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x218>
    1ad8:	ldr	d0, [sp, #96]
    1adc:	cnt	v0.8b, v0.8b
    1ae0:	addv	b0, v0.8b
    1ae4:	umov	w0, v0.b[0]
    1ae8:	cmp	w0, #0x1
    1aec:	b.le	2440 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9e0>
    1af0:	ldr	x1, [sp, #96]
    1af4:	mov	x0, x25
    1af8:	bl	13f8 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>
    1afc:	ldrb	w0, [x26, #8]
    1b00:	ldp	w1, w28, [x24, #8]
    1b04:	and	w4, w0, #0x1
    1b08:	ldr	x27, [x24]
    1b0c:	sub	w28, w28, w1
    1b10:	tbz	w0, #0, 1b44 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xe4>
    1b14:	add	x3, x25, #0xe0
    1b18:	mov	w1, #0x4                   	// #4
    1b1c:	cmn	x27, #0x3
    1b20:	b.ls	1bf4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x194>  // b.plast
    1b24:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b28:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b2c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b30:	add	x3, x3, #0x0
    1b34:	add	x1, x1, #0x0
    1b38:	add	x0, x0, #0x0
    1b3c:	mov	w2, #0x250                 	// #592
    1b40:	bl	0 <__assert_fail>
    1b44:	ldr	w1, [x25, #232]
    1b48:	ldr	x3, [x25, #224]
    1b4c:	cbnz	w1, 1b1c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    1b50:	ldr	x0, [x25, #208]
    1b54:	mov	x2, #0x0                   	// #0
    1b58:	add	x0, x0, #0x1
    1b5c:	str	x0, [x25, #208]
    1b60:	ldr	w0, [x26, #8]
    1b64:	lsr	w0, w0, #1
    1b68:	add	w3, w0, #0x1
    1b6c:	add	w5, w1, w1, lsl #1
    1b70:	cmp	w5, w3, lsl #2
    1b74:	b.ls	1fc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x568>  // b.plast
    1b78:	ldr	w0, [x25, #220]
    1b7c:	sub	w0, w1, w0
    1b80:	sub	w0, w0, w3
    1b84:	cmp	w0, w1, lsr #3
    1b88:	b.ls	2070 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x610>  // b.plast
    1b8c:	cbz	x2, 2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c0>
    1b90:	ldr	w0, [x26, #8]
    1b94:	lsr	w1, w0, #1
    1b98:	adds	w1, w1, #0x1
    1b9c:	b.mi	24a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa40>  // b.first
    1ba0:	bfi	w0, w1, #1, #31
    1ba4:	str	w0, [x26, #8]
    1ba8:	ldr	x0, [x2]
    1bac:	cmn	x0, #0x1
    1bb0:	b.eq	1ea0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x440>  // b.none
    1bb4:	ldr	w0, [x25, #220]
    1bb8:	sub	w0, w0, #0x1
    1bbc:	str	w0, [x25, #220]
    1bc0:	stp	x27, x27, [x2]
    1bc4:	str	wzr, [x2, #16]
    1bc8:	str	w28, [x2, #16]
    1bcc:	add	x24, x24, #0x18
    1bd0:	cmp	x20, x24
    1bd4:	b.ne	1ab8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x58>  // b.any
    1bd8:	ldp	x21, x22, [sp, #32]
    1bdc:	ldp	x23, x24, [sp, #48]
    1be0:	ldp	x27, x28, [sp, #80]
    1be4:	ldp	x19, x20, [sp, #16]
    1be8:	ldp	x25, x26, [sp, #64]
    1bec:	ldp	x29, x30, [sp], #160
    1bf0:	ret
    1bf4:	mov	w2, #0x25                  	// #37
    1bf8:	sub	w0, w1, #0x1
    1bfc:	mov	w6, #0x1                   	// #1
    1c00:	mov	x5, #0x0                   	// #0
    1c04:	mul	w1, w2, w27
    1c08:	mov	w7, #0x18                  	// #24
    1c0c:	orr	x2, x1, x1, lsl #32
    1c10:	sub	x2, x2, #0x1
    1c14:	sub	x1, x2, x1, lsl #32
    1c18:	eor	x1, x1, x1, lsr #22
    1c1c:	sub	x2, x1, #0x1
    1c20:	sub	x1, x2, x1, lsl #13
    1c24:	eor	x1, x1, x1, lsr #8
    1c28:	add	x1, x1, x1, lsl #3
    1c2c:	eor	x1, x1, x1, lsr #15
    1c30:	sub	x2, x1, #0x1
    1c34:	sub	x1, x2, x1, lsl #27
    1c38:	eor	x1, x1, x1, lsr #31
    1c3c:	and	w1, w0, w1
    1c40:	umull	x8, w1, w7
    1c44:	add	x2, x3, x8
    1c48:	ldr	x8, [x3, x8]
    1c4c:	cmp	x27, x8
    1c50:	b.eq	1e6c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x40c>  // b.none
    1c54:	cmn	x8, #0x1
    1c58:	b.ne	23f8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x998>  // b.any
    1c5c:	ldr	x8, [x2, #8]
    1c60:	cmn	x8, #0x1
    1c64:	b.eq	2344 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8e4>  // b.none
    1c68:	add	w1, w1, w6
    1c6c:	add	w6, w6, #0x1
    1c70:	and	w1, w0, w1
    1c74:	b	1c40 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e0>
    1c78:	mov	x0, x25
    1c7c:	bl	d30 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
    1c80:	mov	x2, x0
    1c84:	mov	x3, x1
    1c88:	mov	x0, x25
    1c8c:	mov	x1, x22
    1c90:	stp	x2, x3, [sp, #120]
    1c94:	bl	e68 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
    1c98:	ldrb	w0, [x26, #8]
    1c9c:	ldp	w1, w27, [x24, #8]
    1ca0:	and	w7, w0, #0x1
    1ca4:	sub	w27, w27, w1
    1ca8:	tbz	w0, #0, 1d5c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2fc>
    1cac:	add	x4, x25, #0xe0
    1cb0:	mov	w1, #0x4                   	// #4
    1cb4:	ldp	x3, x5, [sp, #120]
    1cb8:	cmn	x3, #0x1
    1cbc:	b.eq	1eb0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x450>  // b.none
    1cc0:	cmn	x3, #0x2
    1cc4:	b.eq	1e94 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x434>  // b.none
    1cc8:	mov	w2, #0x25                  	// #37
    1ccc:	sub	w0, w1, #0x1
    1cd0:	mov	w9, #0x1                   	// #1
    1cd4:	mov	x8, #0x0                   	// #0
    1cd8:	mul	w1, w2, w5
    1cdc:	mov	w6, #0x18                  	// #24
    1ce0:	mul	w10, w2, w3
    1ce4:	orr	x2, x1, x10, lsl #32
    1ce8:	sub	x2, x2, #0x1
    1cec:	sub	x1, x2, x1, lsl #32
    1cf0:	eor	x1, x1, x1, lsr #22
    1cf4:	sub	x2, x1, #0x1
    1cf8:	sub	x1, x2, x1, lsl #13
    1cfc:	eor	x1, x1, x1, lsr #8
    1d00:	add	x1, x1, x1, lsl #3
    1d04:	eor	x1, x1, x1, lsr #15
    1d08:	sub	x2, x1, #0x1
    1d0c:	sub	x1, x2, x1, lsl #27
    1d10:	eor	x1, x1, x1, lsr #31
    1d14:	and	w1, w0, w1
    1d18:	umull	x10, w1, w6
    1d1c:	add	x2, x4, x10
    1d20:	ldr	x10, [x4, x10]
    1d24:	cmp	x3, x10
    1d28:	b.eq	1ebc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x45c>  // b.none
    1d2c:	cmn	x10, #0x1
    1d30:	b.eq	22e8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x888>  // b.none
    1d34:	cmn	x10, #0x2
    1d38:	b.ne	1d4c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ec>  // b.any
    1d3c:	ldr	x10, [x2, #8]
    1d40:	cmp	x8, #0x0
    1d44:	ccmn	x10, #0x2, #0x0, eq  // eq = none
    1d48:	csel	x8, x8, x2, ne  // ne = any
    1d4c:	add	w1, w1, w9
    1d50:	add	w9, w9, #0x1
    1d54:	and	w1, w0, w1
    1d58:	b	1d18 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2b8>
    1d5c:	ldr	w1, [x25, #232]
    1d60:	ldr	x4, [x25, #224]
    1d64:	cbnz	w1, 1cb4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    1d68:	ldr	x0, [x25, #208]
    1d6c:	mov	x2, #0x0                   	// #0
    1d70:	add	x0, x0, #0x1
    1d74:	str	x0, [x25, #208]
    1d78:	ldr	w0, [x26, #8]
    1d7c:	lsr	w0, w0, #1
    1d80:	add	w3, w0, #0x1
    1d84:	add	w4, w1, w1, lsl #1
    1d88:	cmp	w4, w3, lsl #2
    1d8c:	b.ls	2150 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6f0>  // b.plast
    1d90:	ldr	w0, [x25, #220]
    1d94:	sub	w0, w1, w0
    1d98:	sub	w0, w0, w3
    1d9c:	cmp	w0, w1, lsr #3
    1da0:	b.ls	2218 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7b8>  // b.plast
    1da4:	cbz	x2, 2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c0>
    1da8:	ldr	w0, [x26, #8]
    1dac:	lsr	w1, w0, #1
    1db0:	adds	w1, w1, #0x1
    1db4:	b.mi	24a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa40>  // b.first
    1db8:	bfi	w0, w1, #1, #31
    1dbc:	str	w0, [x26, #8]
    1dc0:	ldr	x0, [x2]
    1dc4:	cmn	x0, #0x1
    1dc8:	b.eq	1fb8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x558>  // b.none
    1dcc:	ldr	w0, [x25, #220]
    1dd0:	sub	w0, w0, #0x1
    1dd4:	str	w0, [x25, #220]
    1dd8:	ldp	x1, x0, [sp, #120]
    1ddc:	stp	x1, x0, [x2]
    1de0:	str	wzr, [x2, #16]
    1de4:	str	w27, [x2, #16]
    1de8:	ldp	x0, x1, [sp, #120]
    1dec:	stp	x0, x1, [sp, #136]
    1df0:	ldp	w2, w4, [x24, #8]
    1df4:	ldp	w1, w0, [x19, #8]
    1df8:	sub	w4, w4, w2
    1dfc:	cmp	w1, w0
    1e00:	b.cs	1ef0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x490>  // b.hs, b.nlast
    1e04:	mov	w0, #0x18                  	// #24
    1e08:	ldr	x27, [x19]
    1e0c:	umull	x1, w1, w0
    1e10:	add	x0, x27, x1
    1e14:	mov	w1, #0x1                   	// #1
    1e18:	stp	w4, w1, [sp, #152]
    1e1c:	ldp	x2, x3, [sp, #136]
    1e20:	stp	x2, x3, [x0]
    1e24:	ldr	x1, [sp, #152]
    1e28:	str	x1, [x0, #16]
    1e2c:	ldp	w0, w2, [x19, #8]
    1e30:	mov	w1, w0
    1e34:	add	x1, x1, #0x1
    1e38:	cmp	x1, x2
    1e3c:	b.hi	2480 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa20>  // b.pmore
    1e40:	add	w0, w0, #0x1
    1e44:	str	w0, [x19, #8]
    1e48:	cbnz	w0, 1bcc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x16c>
    1e4c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1e50:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1e54:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1e58:	add	x3, x3, #0x0
    1e5c:	add	x1, x1, #0x0
    1e60:	add	x0, x0, #0x0
    1e64:	mov	w2, #0xa7                  	// #167
    1e68:	bl	0 <__assert_fail>
    1e6c:	ldr	x8, [x2, #8]
    1e70:	cmp	x27, x8
    1e74:	b.ne	1c68 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>  // b.any
    1e78:	ldr	w0, [x2, #16]
    1e7c:	add	w28, w28, w0
    1e80:	b	1bc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x168>
    1e84:	ldr	x1, [x24]
    1e88:	mov	x0, x25
    1e8c:	bl	1478 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1e90:	b	1bcc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x16c>
    1e94:	cmn	x5, #0x2
    1e98:	b.ne	1cc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
    1e9c:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    1ea0:	ldr	x0, [x2, #8]
    1ea4:	cmn	x0, #0x1
    1ea8:	b.ne	1bb4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x154>  // b.any
    1eac:	b	1bc0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x160>
    1eb0:	cmn	x5, #0x1
    1eb4:	b.ne	1cc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
    1eb8:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    1ebc:	ldr	x11, [x2, #8]
    1ec0:	cmp	x11, x5
    1ec4:	b.ne	1d2c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2cc>  // b.any
    1ec8:	ldr	w0, [x2, #16]
    1ecc:	add	w27, w27, w0
    1ed0:	str	w27, [x2, #16]
    1ed4:	ldp	x0, x1, [sp, #120]
    1ed8:	stp	x0, x1, [sp, #136]
    1edc:	ldp	w2, w4, [x24, #8]
    1ee0:	ldp	w1, w0, [x19, #8]
    1ee4:	sub	w4, w4, w2
    1ee8:	cmp	w1, w0
    1eec:	b.cc	1e04 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3a4>  // b.lo, b.ul, b.last
    1ef0:	mov	w0, w0
    1ef4:	str	w4, [sp, #96]
    1ef8:	add	x0, x0, #0x2
    1efc:	str	w1, [sp, #108]
    1f00:	mov	x2, #0xffffffff            	// #4294967295
    1f04:	orr	x0, x0, x0, lsr #1
    1f08:	orr	x0, x0, x0, lsr #2
    1f0c:	orr	x0, x0, x0, lsr #4
    1f10:	orr	x0, x0, x0, lsr #8
    1f14:	orr	x28, x0, x0, lsr #16
    1f18:	orr	x28, x28, x0, lsr #32
    1f1c:	add	x28, x28, #0x1
    1f20:	str	x28, [sp, #112]
    1f24:	cmp	x28, x2
    1f28:	b.hi	2388 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x928>  // b.pmore
    1f2c:	add	x0, x28, x28, lsl #1
    1f30:	lsl	x0, x0, #3
    1f34:	bl	0 <malloc>
    1f38:	ldr	w4, [sp, #96]
    1f3c:	mov	x27, x0
    1f40:	ldr	w1, [sp, #108]
    1f44:	cbz	x0, 2460 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa00>
    1f48:	mov	w2, #0x18                  	// #24
    1f4c:	mov	x6, x27
    1f50:	ldr	x0, [x19]
    1f54:	umull	x1, w1, w2
    1f58:	add	x7, x0, x1
    1f5c:	mov	x5, x0
    1f60:	cmp	x0, x7
    1f64:	b.eq	1f88 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x528>  // b.none
    1f68:	ldp	x2, x3, [x5]
    1f6c:	stp	x2, x3, [x6]
    1f70:	add	x5, x5, #0x18
    1f74:	ldur	x2, [x5, #-8]
    1f78:	str	x2, [x6, #16]
    1f7c:	cmp	x7, x5
    1f80:	add	x6, x6, #0x18
    1f84:	b.ne	1f68 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x508>  // b.any
    1f88:	add	x2, x19, #0x10
    1f8c:	cmp	x0, x2
    1f90:	b.eq	1fac <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x54c>  // b.none
    1f94:	str	w4, [sp, #96]
    1f98:	bl	0 <free>
    1f9c:	ldr	w1, [x19, #8]
    1fa0:	mov	w0, #0x18                  	// #24
    1fa4:	ldr	w4, [sp, #96]
    1fa8:	umull	x1, w1, w0
    1fac:	str	x27, [x19]
    1fb0:	str	w28, [x19, #12]
    1fb4:	b	1e10 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3b0>
    1fb8:	ldr	x0, [x2, #8]
    1fbc:	cmn	x0, #0x1
    1fc0:	b.ne	1dcc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x36c>  // b.any
    1fc4:	b	1dd8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x378>
    1fc8:	mov	x0, x26
    1fcc:	lsl	w1, w1, #1
    1fd0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1fd4:	ldrb	w0, [x26, #8]
    1fd8:	tbz	w0, #0, 2114 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b4>
    1fdc:	add	x4, x25, #0xe0
    1fe0:	mov	w1, #0x4                   	// #4
    1fe4:	cmn	x27, #0x3
    1fe8:	b.hi	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>  // b.pmore
    1fec:	mov	w0, #0x25                  	// #37
    1ff0:	sub	w3, w1, #0x1
    1ff4:	mov	w6, #0x1                   	// #1
    1ff8:	mov	x5, #0x0                   	// #0
    1ffc:	mul	w0, w0, w27
    2000:	mov	w7, #0x18                  	// #24
    2004:	orr	x1, x0, x0, lsl #32
    2008:	sub	x1, x1, #0x1
    200c:	sub	x0, x1, x0, lsl #32
    2010:	eor	x0, x0, x0, lsr #22
    2014:	sub	x1, x0, #0x1
    2018:	sub	x0, x1, x0, lsl #13
    201c:	eor	x0, x0, x0, lsr #8
    2020:	add	x0, x0, x0, lsl #3
    2024:	eor	x0, x0, x0, lsr #15
    2028:	sub	x1, x0, #0x1
    202c:	sub	x0, x1, x0, lsl #27
    2030:	eor	x0, x0, x0, lsr #31
    2034:	and	w0, w3, w0
    2038:	umull	x1, w0, w7
    203c:	add	x2, x4, x1
    2040:	ldr	x1, [x4, x1]
    2044:	cmp	x27, x1
    2048:	b.eq	2334 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8d4>  // b.none
    204c:	cmn	x1, #0x1
    2050:	b.ne	24d8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa78>  // b.any
    2054:	ldr	x1, [x2, #8]
    2058:	cmn	x1, #0x1
    205c:	b.eq	2414 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9b4>  // b.none
    2060:	add	w0, w0, w6
    2064:	add	w6, w6, #0x1
    2068:	and	w0, w3, w0
    206c:	b	2038 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x5d8>
    2070:	mov	x0, x26
    2074:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2078:	ldrb	w0, [x26, #8]
    207c:	tbz	w0, #0, 2140 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6e0>
    2080:	add	x4, x25, #0xe0
    2084:	mov	w1, #0x4                   	// #4
    2088:	cmn	x27, #0x3
    208c:	b.hi	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>  // b.pmore
    2090:	mov	w0, #0x25                  	// #37
    2094:	sub	w3, w1, #0x1
    2098:	mov	w6, #0x1                   	// #1
    209c:	mov	x5, #0x0                   	// #0
    20a0:	mul	w0, w0, w27
    20a4:	mov	w7, #0x18                  	// #24
    20a8:	orr	x1, x0, x0, lsl #32
    20ac:	sub	x1, x1, #0x1
    20b0:	sub	x0, x1, x0, lsl #32
    20b4:	eor	x0, x0, x0, lsr #22
    20b8:	sub	x1, x0, #0x1
    20bc:	sub	x0, x1, x0, lsl #13
    20c0:	eor	x0, x0, x0, lsr #8
    20c4:	add	x0, x0, x0, lsl #3
    20c8:	eor	x0, x0, x0, lsr #15
    20cc:	sub	x1, x0, #0x1
    20d0:	sub	x0, x1, x0, lsl #27
    20d4:	eor	x0, x0, x0, lsr #31
    20d8:	and	w0, w3, w0
    20dc:	umull	x1, w0, w7
    20e0:	add	x2, x4, x1
    20e4:	ldr	x1, [x4, x1]
    20e8:	cmp	x27, x1
    20ec:	b.eq	2378 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x918>  // b.none
    20f0:	cmn	x1, #0x1
    20f4:	b.ne	2504 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xaa4>  // b.any
    20f8:	ldr	x1, [x2, #8]
    20fc:	cmn	x1, #0x1
    2100:	b.eq	2414 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9b4>  // b.none
    2104:	add	w0, w0, w6
    2108:	add	w6, w6, #0x1
    210c:	and	w0, w3, w0
    2110:	b	20dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x67c>
    2114:	ldr	w1, [x25, #232]
    2118:	ldr	x4, [x25, #224]
    211c:	cbnz	w1, 1fe4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x584>
    2120:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2124:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2128:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    212c:	add	x3, x3, #0x0
    2130:	add	x1, x1, #0x0
    2134:	add	x0, x0, #0x0
    2138:	mov	w2, #0x22f                 	// #559
    213c:	bl	0 <__assert_fail>
    2140:	ldr	w1, [x25, #232]
    2144:	ldr	x4, [x25, #224]
    2148:	cbnz	w1, 2088 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x628>
    214c:	b	2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c0>
    2150:	mov	x0, x26
    2154:	lsl	w1, w1, #1
    2158:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    215c:	ldrb	w0, [x26, #8]
    2160:	tbnz	w0, #0, 22dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x87c>
    2164:	ldr	w1, [x25, #232]
    2168:	ldr	x7, [x25, #224]
    216c:	cbz	w1, 2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c0>
    2170:	ldp	x5, x4, [sp, #120]
    2174:	cmn	x5, #0x1
    2178:	b.eq	23a8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x948>  // b.none
    217c:	cmn	x5, #0x2
    2180:	b.eq	23b4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x954>  // b.none
    2184:	mov	w0, #0x25                  	// #37
    2188:	sub	w1, w1, #0x1
    218c:	mov	w6, #0x1                   	// #1
    2190:	mov	x3, #0x0                   	// #0
    2194:	mul	w2, w0, w5
    2198:	mov	w8, #0x18                  	// #24
    219c:	mul	w0, w0, w4
    21a0:	orr	x2, x0, x2, lsl #32
    21a4:	sub	x2, x2, #0x1
    21a8:	sub	x0, x2, x0, lsl #32
    21ac:	eor	x0, x0, x0, lsr #22
    21b0:	sub	x2, x0, #0x1
    21b4:	sub	x0, x2, x0, lsl #13
    21b8:	eor	x0, x0, x0, lsr #8
    21bc:	add	x0, x0, x0, lsl #3
    21c0:	eor	x0, x0, x0, lsr #15
    21c4:	sub	x2, x0, #0x1
    21c8:	sub	x0, x2, x0, lsl #27
    21cc:	eor	x0, x0, x0, lsr #31
    21d0:	and	w0, w1, w0
    21d4:	umull	x9, w0, w8
    21d8:	add	x2, x7, x9
    21dc:	ldr	x9, [x7, x9]
    21e0:	cmp	x5, x9
    21e4:	b.eq	23c0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x960>  // b.none
    21e8:	cmn	x9, #0x1
    21ec:	b.eq	24c0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa60>  // b.none
    21f0:	cmn	x9, #0x2
    21f4:	b.ne	2208 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7a8>  // b.any
    21f8:	ldr	x9, [x2, #8]
    21fc:	cmp	x3, #0x0
    2200:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    2204:	csel	x3, x3, x2, ne  // ne = any
    2208:	add	w0, w0, w6
    220c:	add	w6, w6, #0x1
    2210:	and	w0, w1, w0
    2214:	b	21d4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x774>
    2218:	mov	x0, x26
    221c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2220:	ldrb	w0, [x26, #8]
    2224:	tbnz	w0, #0, 2328 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8c8>
    2228:	ldr	w1, [x25, #232]
    222c:	ldr	x7, [x25, #224]
    2230:	cbz	w1, 2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c0>
    2234:	ldp	x5, x4, [sp, #120]
    2238:	cmn	x5, #0x1
    223c:	b.eq	23dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x97c>  // b.none
    2240:	cmn	x5, #0x2
    2244:	b.eq	23d0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x970>  // b.none
    2248:	mov	w0, #0x25                  	// #37
    224c:	sub	w1, w1, #0x1
    2250:	mov	w6, #0x1                   	// #1
    2254:	mov	x3, #0x0                   	// #0
    2258:	mul	w2, w0, w5
    225c:	mov	w8, #0x18                  	// #24
    2260:	mul	w0, w0, w4
    2264:	orr	x2, x0, x2, lsl #32
    2268:	sub	x2, x2, #0x1
    226c:	sub	x0, x2, x0, lsl #32
    2270:	eor	x0, x0, x0, lsr #22
    2274:	sub	x2, x0, #0x1
    2278:	sub	x0, x2, x0, lsl #13
    227c:	eor	x0, x0, x0, lsr #8
    2280:	add	x0, x0, x0, lsl #3
    2284:	eor	x0, x0, x0, lsr #15
    2288:	sub	x2, x0, #0x1
    228c:	sub	x0, x2, x0, lsl #27
    2290:	eor	x0, x0, x0, lsr #31
    2294:	and	w0, w1, w0
    2298:	umull	x9, w0, w8
    229c:	add	x2, x7, x9
    22a0:	ldr	x9, [x7, x9]
    22a4:	cmp	x5, x9
    22a8:	b.eq	23e8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x988>  // b.none
    22ac:	cmn	x9, #0x1
    22b0:	b.eq	24f4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa94>  // b.none
    22b4:	cmn	x9, #0x2
    22b8:	b.ne	22cc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x86c>  // b.any
    22bc:	ldr	x9, [x2, #8]
    22c0:	cmp	x3, #0x0
    22c4:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    22c8:	csel	x3, x3, x2, ne  // ne = any
    22cc:	add	w0, w0, w6
    22d0:	add	w6, w6, #0x1
    22d4:	and	w0, w1, w0
    22d8:	b	2298 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x838>
    22dc:	add	x7, x25, #0xe0
    22e0:	mov	w1, #0x4                   	// #4
    22e4:	b	2170 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x710>
    22e8:	ldr	x10, [x2, #8]
    22ec:	cmn	x10, #0x1
    22f0:	b.ne	1d4c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ec>  // b.any
    22f4:	ldr	x0, [x25, #208]
    22f8:	cmp	x8, #0x0
    22fc:	csel	x2, x2, x8, eq  // eq = none
    2300:	mov	w4, #0xc                   	// #12
    2304:	add	x0, x0, #0x1
    2308:	str	x0, [x25, #208]
    230c:	mov	w1, #0x4                   	// #4
    2310:	ldr	w0, [x26, #8]
    2314:	lsr	w0, w0, #1
    2318:	add	w3, w0, #0x1
    231c:	cbnz	w7, 1d88 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x328>
    2320:	ldr	w1, [x25, #232]
    2324:	b	1d84 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x324>
    2328:	add	x7, x25, #0xe0
    232c:	mov	w1, #0x4                   	// #4
    2330:	b	2234 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7d4>
    2334:	ldr	x1, [x2, #8]
    2338:	cmp	x27, x1
    233c:	b.ne	2060 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x600>  // b.any
    2340:	b	1b90 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x130>
    2344:	ldr	x0, [x25, #208]
    2348:	cmp	x5, #0x0
    234c:	csel	x2, x2, x5, eq  // eq = none
    2350:	mov	w1, #0x4                   	// #4
    2354:	add	x0, x0, #0x1
    2358:	str	x0, [x25, #208]
    235c:	mov	w5, #0xc                   	// #12
    2360:	ldr	w0, [x26, #8]
    2364:	lsr	w0, w0, #1
    2368:	add	w3, w0, #0x1
    236c:	cbnz	w4, 1b70 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x110>
    2370:	ldr	w1, [x25, #232]
    2374:	b	1b6c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x10c>
    2378:	ldr	x1, [x2, #8]
    237c:	cmp	x27, x1
    2380:	b.ne	2104 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6a4>  // b.any
    2384:	b	1b90 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x130>
    2388:	mov	x0, x23
    238c:	bl	0 <malloc>
    2390:	ldr	w4, [sp, #96]
    2394:	mov	x27, x0
    2398:	mov	w28, #0xffffffff            	// #-1
    239c:	cbz	x0, 2460 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa00>
    23a0:	ldr	w1, [sp, #108]
    23a4:	b	1f48 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x4e8>
    23a8:	cmn	x4, #0x1
    23ac:	b.ne	2184 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x724>  // b.any
    23b0:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    23b4:	cmn	x4, #0x2
    23b8:	b.ne	2184 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x724>  // b.any
    23bc:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    23c0:	ldr	x10, [x2, #8]
    23c4:	cmp	x10, x4
    23c8:	b.ne	21e8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x788>  // b.any
    23cc:	b	1da8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    23d0:	cmn	x4, #0x2
    23d4:	b.ne	2248 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7e8>  // b.any
    23d8:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    23dc:	cmn	x4, #0x1
    23e0:	b.ne	2248 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7e8>  // b.any
    23e4:	b	1b24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc4>
    23e8:	ldr	x10, [x2, #8]
    23ec:	cmp	x4, x10
    23f0:	b.ne	22ac <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x84c>  // b.any
    23f4:	b	1da8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    23f8:	cmn	x8, #0x2
    23fc:	b.ne	1c68 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>  // b.any
    2400:	ldr	x8, [x2, #8]
    2404:	cmp	x5, #0x0
    2408:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    240c:	csel	x5, x5, x2, ne  // ne = any
    2410:	b	1c68 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>
    2414:	cmp	x5, #0x0
    2418:	csel	x2, x2, x5, eq  // eq = none
    241c:	b	1b90 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x130>
    2420:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2424:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2428:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    242c:	add	x3, x3, #0x0
    2430:	add	x1, x1, #0x0
    2434:	add	x0, x0, #0x0
    2438:	mov	w2, #0x133                 	// #307
    243c:	bl	0 <__assert_fail>
    2440:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2444:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2448:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    244c:	add	x3, x3, #0x0
    2450:	add	x1, x1, #0x0
    2454:	add	x0, x0, #0x0
    2458:	mov	w2, #0x13b                 	// #315
    245c:	bl	0 <__assert_fail>
    2460:	mov	w1, #0x1                   	// #1
    2464:	mov	x0, x21
    2468:	str	w4, [sp, #96]
    246c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2470:	ldr	w1, [x19, #8]
    2474:	mov	x27, #0x0                   	// #0
    2478:	ldr	w4, [sp, #96]
    247c:	b	1f48 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x4e8>
    2480:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2484:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2488:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    248c:	add	x3, x3, #0x0
    2490:	add	x1, x1, #0x0
    2494:	add	x0, x0, #0x0
    2498:	mov	w2, #0x43                  	// #67
    249c:	bl	0 <__assert_fail>
    24a0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    24a4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    24a8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    24ac:	add	x3, x3, #0x0
    24b0:	add	x1, x1, #0x0
    24b4:	add	x0, x0, #0x0
    24b8:	mov	w2, #0x441                 	// #1089
    24bc:	bl	0 <__assert_fail>
    24c0:	ldr	x9, [x2, #8]
    24c4:	cmn	x9, #0x1
    24c8:	b.ne	2208 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7a8>  // b.any
    24cc:	cmp	x3, #0x0
    24d0:	csel	x2, x2, x3, eq  // eq = none
    24d4:	b	1da8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    24d8:	cmn	x1, #0x2
    24dc:	b.ne	2060 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x600>  // b.any
    24e0:	ldr	x1, [x2, #8]
    24e4:	cmp	x5, #0x0
    24e8:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    24ec:	csel	x5, x5, x2, ne  // ne = any
    24f0:	b	2060 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x600>
    24f4:	ldr	x9, [x2, #8]
    24f8:	cmn	x9, #0x1
    24fc:	b.ne	22cc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x86c>  // b.any
    2500:	b	24cc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa6c>
    2504:	cmn	x1, #0x2
    2508:	b.ne	2104 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6a4>  // b.any
    250c:	ldr	x1, [x2, #8]
    2510:	cmp	x5, #0x0
    2514:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    2518:	csel	x5, x5, x2, ne  // ne = any
    251c:	b	2104 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6a4>

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD2Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x20                  	// #32
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	stp	x23, x24, [sp, #48]
  28:	str	x1, [x20], #208
  2c:	ldrb	w0, [x20, #8]
  30:	tbz	w0, #0, 13c <_ZN4llvm3mca15ResourceManagerD1Ev+0x13c>
  34:	ldr	x0, [x19, #160]
  38:	add	x1, x19, #0xb0
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca15ResourceManagerD1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #80]
  4c:	add	x1, x19, #0x60
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD1Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #56]
  60:	cbz	x0, 68 <_ZN4llvm3mca15ResourceManagerD1Ev+0x68>
  64:	bl	0 <_ZdlPv>
  68:	ldp	x21, x23, [x19, #32]
  6c:	cmp	x21, x23
  70:	b.eq	e4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe4>  // b.none
  74:	adrp	x22, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  78:	adrp	x24, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  7c:	add	x24, x24, #0x0
  80:	ldr	x22, [x22]
  84:	add	x22, x22, #0x10
  88:	b	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>
  8c:	str	x22, [x20]
  90:	mov	x0, x20
  94:	bl	130 <_ZN4llvm3mca15ResourceManagerD1Ev+0x130>
  98:	mov	x0, x20
  9c:	mov	x1, #0x20                  	// #32
  a0:	bl	0 <_ZdlPvm>
  a4:	add	x21, x21, #0x8
  a8:	cmp	x23, x21
  ac:	b.eq	e0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe0>  // b.none
  b0:	ldr	x20, [x21]
  b4:	cbz	x20, a4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa4>
  b8:	ldr	x0, [x20]
  bc:	ldr	x1, [x0, #8]
  c0:	cmp	x1, x24
  c4:	b.eq	8c <_ZN4llvm3mca15ResourceManagerD1Ev+0x8c>  // b.none
  c8:	mov	x0, x20
  cc:	add	x21, x21, #0x8
  d0:	blr	x1
  d4:	cmp	x23, x21
  d8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>  // b.any
  dc:	nop
  e0:	ldr	x23, [x19, #32]
  e4:	cbz	x23, f0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x20, x21, [x19, #8]
  f4:	cmp	x20, x21
  f8:	b.eq	120 <_ZN4llvm3mca15ResourceManagerD1Ev+0x120>  // b.none
  fc:	nop
 100:	ldr	x0, [x20]
 104:	cbz	x0, 110 <_ZN4llvm3mca15ResourceManagerD1Ev+0x110>
 108:	mov	x1, #0x30                  	// #48
 10c:	bl	0 <_ZdlPvm>
 110:	add	x20, x20, #0x8
 114:	cmp	x21, x20
 118:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD1Ev+0x100>  // b.any
 11c:	ldr	x21, [x19, #8]
 120:	cbz	x21, 178 <_ZN4llvm3mca15ResourceManagerD1Ev+0x178>
 124:	mov	x0, x21
 128:	ldp	x19, x20, [sp, #16]
 12c:	ldp	x21, x22, [sp, #32]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x29, x30, [sp], #64
 138:	b	0 <_ZdlPv>
 13c:	ldr	w2, [x19, #232]
 140:	mov	w1, #0x18                  	// #24
 144:	ldr	x0, [x19, #224]
 148:	umull	x1, w2, w1
 14c:	bl	0 <_ZdlPvm>
 150:	ldrb	w0, [x20, #8]
 154:	tbz	w0, #0, 34 <_ZN4llvm3mca15ResourceManagerD1Ev+0x34>
 158:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 15c:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 160:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 164:	add	x3, x3, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x0, x0, #0x0
 170:	mov	w2, #0x45b                 	// #1115
 174:	bl	0 <__assert_fail>
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x21, x22, [sp, #32]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x29, x30, [sp], #64
 188:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	stp	x23, x24, [sp, #48]
  28:	str	x1, [x20], #208
  2c:	ldrb	w0, [x20, #8]
  30:	tbz	w0, #0, 148 <_ZN4llvm3mca15ResourceManagerD0Ev+0x148>
  34:	ldr	x0, [x19, #160]
  38:	add	x1, x19, #0xb0
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca15ResourceManagerD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #80]
  4c:	add	x1, x19, #0x60
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #56]
  60:	cbz	x0, 68 <_ZN4llvm3mca15ResourceManagerD0Ev+0x68>
  64:	bl	0 <_ZdlPv>
  68:	ldp	x21, x23, [x19, #32]
  6c:	cmp	x21, x23
  70:	b.eq	e4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xe4>  // b.none
  74:	adrp	x22, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  78:	adrp	x24, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  7c:	add	x24, x24, #0x0
  80:	ldr	x22, [x22]
  84:	add	x22, x22, #0x10
  88:	b	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>
  8c:	str	x22, [x20]
  90:	mov	x0, x20
  94:	bl	130 <_ZN4llvm3mca15ResourceManagerD0Ev+0x130>
  98:	mov	x0, x20
  9c:	mov	x1, #0x20                  	// #32
  a0:	bl	0 <_ZdlPvm>
  a4:	add	x21, x21, #0x8
  a8:	cmp	x23, x21
  ac:	b.eq	e0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xe0>  // b.none
  b0:	ldr	x20, [x21]
  b4:	cbz	x20, a4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xa4>
  b8:	ldr	x0, [x20]
  bc:	ldr	x1, [x0, #8]
  c0:	cmp	x1, x24
  c4:	b.eq	8c <_ZN4llvm3mca15ResourceManagerD0Ev+0x8c>  // b.none
  c8:	mov	x0, x20
  cc:	add	x21, x21, #0x8
  d0:	blr	x1
  d4:	cmp	x23, x21
  d8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>  // b.any
  dc:	nop
  e0:	ldr	x23, [x19, #32]
  e4:	cbz	x23, f0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x20, x21, [x19, #8]
  f4:	cmp	x20, x21
  f8:	b.eq	120 <_ZN4llvm3mca15ResourceManagerD0Ev+0x120>  // b.none
  fc:	nop
 100:	ldr	x0, [x20]
 104:	cbz	x0, 110 <_ZN4llvm3mca15ResourceManagerD0Ev+0x110>
 108:	mov	x1, #0x30                  	// #48
 10c:	bl	0 <_ZdlPvm>
 110:	add	x20, x20, #0x8
 114:	cmp	x21, x20
 118:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD0Ev+0x100>  // b.any
 11c:	ldr	x21, [x19, #8]
 120:	cbz	x21, 12c <_ZN4llvm3mca15ResourceManagerD0Ev+0x12c>
 124:	mov	x0, x21
 128:	bl	0 <_ZdlPv>
 12c:	mov	x0, x19
 130:	mov	x1, #0x168                 	// #360
 134:	ldp	x19, x20, [sp, #16]
 138:	ldp	x21, x22, [sp, #32]
 13c:	ldp	x23, x24, [sp, #48]
 140:	ldp	x29, x30, [sp], #64
 144:	b	0 <_ZdlPvm>
 148:	ldr	w2, [x19, #232]
 14c:	mov	w1, #0x18                  	// #24
 150:	ldr	x0, [x19, #224]
 154:	umull	x1, w2, w1
 158:	bl	0 <_ZdlPvm>
 15c:	ldrb	w0, [x20, #8]
 160:	tbz	w0, #0, 34 <_ZN4llvm3mca15ResourceManagerD0Ev+0x34>
 164:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 168:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 16c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 170:	add	x3, x3, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x0, x0, #0x0
 17c:	mov	w2, #0x45b                 	// #1115
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	cmp	w1, #0x4
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	w22, w1
  1c:	ldrb	w0, [x0, #8]
  20:	and	w1, w0, #0x1
  24:	b.ls	98 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x98>  // b.plast
  28:	sub	w0, w22, #0x1
  2c:	orr	x0, x0, x0, lsr #1
  30:	orr	x0, x0, x0, lsr #2
  34:	orr	x0, x0, x0, lsr #4
  38:	orr	x0, x0, x0, lsr #8
  3c:	orr	x0, x0, x0, lsr #16
  40:	add	x0, x0, #0x1
  44:	cmp	w0, #0x40
  48:	mov	w22, w0
  4c:	b.hi	550 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x550>  // b.pmore
  50:	cbnz	w1, 564 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x564>
  54:	ldr	w21, [x19, #24]
  58:	mov	x0, #0x600                 	// #1536
  5c:	ldr	x20, [x19, #16]
  60:	mov	w22, #0x40                  	// #64
  64:	bl	0 <_Znwm>
  68:	str	x0, [x19, #16]
  6c:	ldr	x0, [x19, #8]
  70:	mov	w3, #0x18                  	// #24
  74:	str	w22, [x19, #24]
  78:	umull	x1, w21, w3
  7c:	and	x0, x0, #0x1
  80:	str	x0, [x19, #8]
  84:	add	x6, x20, x1
  88:	cbz	x0, c8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xc8>
  8c:	add	x0, x19, #0x10
  90:	mov	x2, #0x60                  	// #96
  94:	b	e0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe0>
  98:	cbnz	w1, 2a4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2a4>
  9c:	orr	w0, w0, #0x1
  a0:	strb	w0, [x19, #8]
  a4:	ldr	w21, [x19, #24]
  a8:	mov	w3, #0x18                  	// #24
  ac:	ldr	x0, [x19, #8]
  b0:	ldr	x20, [x19, #16]
  b4:	umull	x1, w21, w3
  b8:	and	x0, x0, #0x1
  bc:	str	x0, [x19, #8]
  c0:	add	x6, x20, x1
  c4:	cbnz	x0, 8c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x8c>
  c8:	ldr	w2, [x19, #24]
  cc:	sub	w0, w2, #0x1
  d0:	tst	w0, w2
  d4:	b.ne	584 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x584>  // b.any
  d8:	umull	x2, w2, w3
  dc:	ldr	x0, [x19, #16]
  e0:	add	x2, x0, x2
  e4:	cmp	x0, x2
  e8:	mov	x3, #0xffffffffffffffff    	// #-1
  ec:	b.eq	100 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x100>  // b.none
  f0:	stp	x3, x3, [x0]
  f4:	add	x0, x0, #0x18
  f8:	cmp	x2, x0
  fc:	b.ne	f0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf0>  // b.any
 100:	cmp	x6, x20
 104:	mov	x0, x20
 108:	add	x10, x19, #0x10
 10c:	mov	w8, #0x25                  	// #37
 110:	mov	w9, #0x18                  	// #24
 114:	b.eq	220 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x220>  // b.none
 118:	str	x23, [sp, #48]
 11c:	nop
 120:	ldr	x3, [x0]
 124:	cmn	x3, #0x1
 128:	b.eq	200 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x200>  // b.none
 12c:	cmn	x3, #0x2
 130:	b.eq	234 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x234>  // b.none
 134:	ldrb	w2, [x19, #8]
 138:	tbz	w2, #0, 1e8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1e8>
 13c:	mov	x7, x10
 140:	mov	w2, #0x4                   	// #4
 144:	cmn	x3, #0x1
 148:	ldr	x11, [x0, #8]
 14c:	b.eq	244 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x244>  // b.none
 150:	cmn	x3, #0x2
 154:	b.eq	26c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x26c>  // b.none
 158:	sub	w5, w2, #0x1
 15c:	mul	w4, w8, w3
 160:	mul	w2, w8, w11
 164:	mov	w13, #0x1                   	// #1
 168:	mov	x12, #0x0                   	// #0
 16c:	orr	x4, x2, x4, lsl #32
 170:	sub	x4, x4, #0x1
 174:	sub	x2, x4, x2, lsl #32
 178:	eor	x2, x2, x2, lsr #22
 17c:	sub	x4, x2, #0x1
 180:	sub	x2, x4, x2, lsl #13
 184:	eor	x2, x2, x2, lsr #8
 188:	add	x2, x2, x2, lsl #3
 18c:	eor	x2, x2, x2, lsr #15
 190:	sub	x4, x2, #0x1
 194:	sub	x2, x4, x2, lsl #27
 198:	eor	x2, x2, x2, lsr #31
 19c:	and	w2, w5, w2
 1a0:	umull	x4, w2, w9
 1a4:	add	x14, x7, x4
 1a8:	ldr	x4, [x7, x4]
 1ac:	cmp	x3, x4
 1b0:	b.eq	278 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x278>  // b.none
 1b4:	cmn	x4, #0x1
 1b8:	b.eq	5a8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5a8>  // b.none
 1bc:	cmn	x4, #0x2
 1c0:	b.ne	1d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1d8>  // b.any
 1c4:	ldr	x4, [x14, #8]
 1c8:	cmp	x12, #0x0
 1cc:	ccmn	x4, #0x2, #0x0, eq  // eq = none
 1d0:	csel	x12, x12, x14, ne  // ne = any
 1d4:	nop
 1d8:	add	w2, w2, w13
 1dc:	add	w13, w13, #0x1
 1e0:	and	w2, w5, w2
 1e4:	b	1a0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1a0>
 1e8:	ldr	w2, [x19, #24]
 1ec:	ldr	x7, [x19, #16]
 1f0:	cbnz	w2, 144 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x144>
 1f4:	mov	x0, #0x0                   	// #0
 1f8:	str	xzr, [x0]
 1fc:	brk	#0x3e8
 200:	ldr	x2, [x0, #8]
 204:	cmn	x2, #0x1
 208:	b.ne	134 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x134>  // b.any
 20c:	nop
 210:	add	x0, x0, #0x18
 214:	cmp	x6, x0
 218:	b.ne	120 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x120>  // b.any
 21c:	ldr	x23, [sp, #48]
 220:	mov	x0, x20
 224:	ldp	x19, x20, [sp, #16]
 228:	ldp	x21, x22, [sp, #32]
 22c:	ldp	x29, x30, [sp], #160
 230:	b	0 <_ZdlPvm>
 234:	ldr	x2, [x0, #8]
 238:	cmn	x2, #0x2
 23c:	b.ne	134 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x134>  // b.any
 240:	b	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>
 244:	cmn	x11, #0x1
 248:	b.ne	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.any
 24c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 250:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 254:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 258:	add	x3, x3, #0x0
 25c:	add	x1, x1, #0x0
 260:	add	x0, x0, #0x0
 264:	mov	w2, #0x250                 	// #592
 268:	bl	0 <__assert_fail>
 26c:	cmn	x11, #0x2
 270:	b.ne	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.any
 274:	b	24c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x24c>
 278:	ldr	x15, [x14, #8]
 27c:	cmp	x15, x11
 280:	b.ne	1b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1b4>  // b.any
 284:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 288:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 28c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 290:	add	x3, x3, #0x0
 294:	add	x1, x1, #0x0
 298:	add	x0, x0, #0x0
 29c:	mov	w2, #0x17a                 	// #378
 2a0:	bl	0 <__assert_fail>
 2a4:	add	x21, x19, #0x10
 2a8:	add	x4, x19, #0x70
 2ac:	str	x23, [sp, #48]
 2b0:	add	x23, sp, #0x40
 2b4:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2b8:	mov	x0, x21
 2bc:	mov	x20, x23
 2c0:	movk	x5, #0xaaab
 2c4:	ldr	x1, [x0]
 2c8:	cmn	x1, #0x1
 2cc:	b.eq	4ec <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4ec>  // b.none
 2d0:	cmn	x1, #0x2
 2d4:	b.eq	4fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4fc>  // b.none
 2d8:	sub	x2, x20, x23
 2dc:	asr	x2, x2, #3
 2e0:	mul	x2, x2, x5
 2e4:	cmp	x2, #0x3
 2e8:	b.hi	624 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x624>  // b.pmore
 2ec:	ldr	w1, [x0, #16]
 2f0:	add	x20, x20, #0x18
 2f4:	ldp	x2, x3, [x0]
 2f8:	stp	x2, x3, [x20, #-24]
 2fc:	stur	w1, [x20, #-8]
 300:	add	x0, x0, #0x18
 304:	cmp	x0, x4
 308:	b.ne	2c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2c4>  // b.any
 30c:	cmp	w22, #0x4
 310:	b.ls	334 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x334>  // b.plast
 314:	mov	w0, #0x18                  	// #24
 318:	ldrb	w1, [x19, #8]
 31c:	umull	x0, w22, w0
 320:	and	w1, w1, #0xfffffffe
 324:	strb	w1, [x19, #8]
 328:	bl	0 <_Znwm>
 32c:	str	x0, [x19, #16]
 330:	str	w22, [x19, #24]
 334:	ldr	x0, [x19, #8]
 338:	and	x0, x0, #0x1
 33c:	str	x0, [x19, #8]
 340:	cbnz	x0, 578 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x578>
 344:	ldr	w1, [x19, #24]
 348:	sub	w0, w1, #0x1
 34c:	tst	w0, w1
 350:	b.ne	588 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x588>  // b.any
 354:	mov	w2, #0x18                  	// #24
 358:	ldr	x0, [x19, #16]
 35c:	umull	x1, w1, w2
 360:	add	x1, x0, x1
 364:	mov	x2, #0xffffffffffffffff    	// #-1
 368:	cmp	x0, x1
 36c:	b.eq	380 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x380>  // b.none
 370:	stp	x2, x2, [x0]
 374:	add	x0, x0, #0x18
 378:	cmp	x1, x0
 37c:	b.ne	370 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x370>  // b.any
 380:	mov	x0, x23
 384:	cmp	x20, x23
 388:	mov	w7, #0x25                  	// #37
 38c:	mov	w8, #0x18                  	// #24
 390:	b.eq	4b0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4b0>  // b.none
 394:	nop
 398:	ldr	x3, [x0]
 39c:	cmn	x3, #0x1
 3a0:	b.eq	448 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x448>  // b.none
 3a4:	cmn	x3, #0x2
 3a8:	b.eq	4c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4c4>  // b.none
 3ac:	ldrb	w1, [x19, #8]
 3b0:	tbz	w1, #0, 50c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x50c>
 3b4:	ldr	x5, [x0, #8]
 3b8:	mov	x6, x21
 3bc:	mov	w4, #0x3                   	// #3
 3c0:	mul	w1, w7, w5
 3c4:	mov	w10, #0x1                   	// #1
 3c8:	mul	w2, w7, w3
 3cc:	mov	x9, #0x0                   	// #0
 3d0:	orr	x2, x1, x2, lsl #32
 3d4:	sub	x2, x2, #0x1
 3d8:	sub	x1, x2, x1, lsl #32
 3dc:	eor	x1, x1, x1, lsr #22
 3e0:	sub	x2, x1, #0x1
 3e4:	sub	x1, x2, x1, lsl #13
 3e8:	eor	x1, x1, x1, lsr #8
 3ec:	add	x1, x1, x1, lsl #3
 3f0:	eor	x1, x1, x1, lsr #15
 3f4:	sub	x2, x1, #0x1
 3f8:	sub	x1, x2, x1, lsl #27
 3fc:	eor	x1, x1, x1, lsr #31
 400:	and	w1, w4, w1
 404:	umull	x2, w1, w8
 408:	add	x11, x6, x2
 40c:	ldr	x2, [x6, x2]
 410:	cmp	x3, x2
 414:	b.eq	524 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x524>  // b.none
 418:	cmn	x2, #0x1
 41c:	b.eq	46c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x46c>  // b.none
 420:	cmn	x2, #0x2
 424:	b.ne	438 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x438>  // b.any
 428:	ldr	x2, [x11, #8]
 42c:	cmp	x9, #0x0
 430:	ccmn	x2, #0x2, #0x0, eq  // eq = none
 434:	csel	x9, x9, x11, ne  // ne = any
 438:	add	w1, w1, w10
 43c:	add	w10, w10, #0x1
 440:	and	w1, w1, w4
 444:	b	404 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x404>
 448:	ldr	x5, [x0, #8]
 44c:	cmn	x5, #0x1
 450:	b.eq	4a4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4a4>  // b.none
 454:	ldrb	w1, [x19, #8]
 458:	tbz	w1, #0, 4d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4d8>
 45c:	mov	w4, #0x4                   	// #4
 460:	mov	x6, x21
 464:	sub	w4, w4, #0x1
 468:	b	3c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3c0>
 46c:	ldr	x2, [x11, #8]
 470:	cmn	x2, #0x1
 474:	b.ne	438 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x438>  // b.any
 478:	cmp	x9, #0x0
 47c:	ldr	w1, [x0, #16]
 480:	csel	x9, x9, x11, ne  // ne = any
 484:	stp	x3, x5, [x9]
 488:	str	w1, [x9, #16]
 48c:	ldr	w1, [x19, #8]
 490:	lsr	w2, w1, #1
 494:	adds	w2, w2, #0x1
 498:	b.mi	604 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x604>  // b.first
 49c:	bfi	w1, w2, #1, #31
 4a0:	str	w1, [x19, #8]
 4a4:	add	x0, x0, #0x18
 4a8:	cmp	x20, x0
 4ac:	b.ne	398 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x398>  // b.any
 4b0:	ldp	x19, x20, [sp, #16]
 4b4:	ldp	x21, x22, [sp, #32]
 4b8:	ldr	x23, [sp, #48]
 4bc:	ldp	x29, x30, [sp], #160
 4c0:	ret
 4c4:	ldr	x5, [x0, #8]
 4c8:	cmn	x5, #0x2
 4cc:	b.eq	4a4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4a4>  // b.none
 4d0:	ldrb	w1, [x19, #8]
 4d4:	tbnz	w1, #0, 45c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x45c>
 4d8:	ldr	w4, [x19, #24]
 4dc:	cbz	w4, 1f4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1f4>
 4e0:	sub	w4, w4, #0x1
 4e4:	ldr	x6, [x19, #16]
 4e8:	b	3c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3c0>
 4ec:	ldr	x1, [x0, #8]
 4f0:	cmn	x1, #0x1
 4f4:	b.ne	2d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2d8>  // b.any
 4f8:	b	300 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x300>
 4fc:	ldr	x1, [x0, #8]
 500:	cmn	x1, #0x2
 504:	b.ne	2d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2d8>  // b.any
 508:	b	300 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x300>
 50c:	ldr	w4, [x19, #24]
 510:	cbz	w4, 1f4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1f4>
 514:	sub	w4, w4, #0x1
 518:	ldr	x5, [x0, #8]
 51c:	ldr	x6, [x19, #16]
 520:	b	3c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3c0>
 524:	ldr	x12, [x11, #8]
 528:	cmp	x12, x5
 52c:	b.ne	418 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x418>  // b.any
 530:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 534:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 538:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 53c:	add	x3, x3, #0x0
 540:	add	x1, x1, #0x0
 544:	add	x0, x0, #0x0
 548:	mov	w2, #0x17a                 	// #378
 54c:	bl	0 <__assert_fail>
 550:	add	x21, x19, #0x10
 554:	add	x4, x19, #0x70
 558:	cbz	w1, 5ec <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5ec>
 55c:	str	x23, [sp, #48]
 560:	b	2b0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2b0>
 564:	add	x21, x19, #0x10
 568:	add	x4, x19, #0x70
 56c:	mov	w22, #0x40                  	// #64
 570:	str	x23, [sp, #48]
 574:	b	2b0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2b0>
 578:	mov	x0, x21
 57c:	mov	x1, #0x60                  	// #96
 580:	b	360 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x360>
 584:	str	x23, [sp, #48]
 588:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 58c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 590:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 594:	add	x3, x3, #0x0
 598:	add	x1, x1, #0x0
 59c:	add	x0, x0, #0x0
 5a0:	mov	w2, #0x15b                 	// #347
 5a4:	bl	0 <__assert_fail>
 5a8:	ldr	x4, [x14, #8]
 5ac:	cmn	x4, #0x1
 5b0:	b.ne	1d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1d8>  // b.any
 5b4:	cmp	x12, #0x0
 5b8:	ldr	w2, [x0, #16]
 5bc:	csel	x12, x12, x14, ne  // ne = any
 5c0:	str	x3, [x12]
 5c4:	ldr	x3, [x0, #8]
 5c8:	str	x3, [x12, #8]
 5cc:	str	w2, [x12, #16]
 5d0:	ldr	w2, [x19, #8]
 5d4:	lsr	w3, w2, #1
 5d8:	adds	w3, w3, #0x1
 5dc:	b.mi	604 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x604>  // b.first
 5e0:	bfi	w2, w3, #1, #31
 5e4:	str	w2, [x19, #8]
 5e8:	b	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>
 5ec:	ubfiz	x2, x0, #1, #32
 5f0:	ldr	w21, [x19, #24]
 5f4:	add	x2, x2, w0, uxtw
 5f8:	ldr	x20, [x19, #16]
 5fc:	lsl	x0, x2, #3
 600:	b	64 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x64>
 604:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 608:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 60c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 610:	add	x3, x3, #0x0
 614:	add	x1, x1, #0x0
 618:	add	x0, x0, #0x0
 61c:	mov	w2, #0x441                 	// #1089
 620:	bl	0 <__assert_fail>
 624:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 628:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 62c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 630:	add	x3, x3, #0x0
 634:	add	x1, x1, #0x0
 638:	add	x0, x0, #0x0
 63c:	mov	w2, #0x401                 	// #1025
 640:	bl	0 <__assert_fail>

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
   0:	ldr	x8, [x1, #8]
   4:	mov	x3, x0
   8:	ldr	w0, [x0, #16]
   c:	ldr	x2, [x8]
  10:	ldr	w5, [x3, #20]
  14:	ldr	w2, [x2, #316]
  18:	cmp	w2, w0
  1c:	csel	w2, w2, w0, ls  // ls = plast
  20:	cmp	w2, #0x0
  24:	csinc	w2, w2, wzr, ne  // ne = any
  28:	cmp	w5, w2
  2c:	b.cc	88 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0x88>  // b.lo, b.ul, b.last
  30:	ldp	x7, x4, [x3, #32]
  34:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  38:	ldr	w0, [x3, #8]
  3c:	movk	x6, #0xaaab
  40:	ldr	w10, [x1]
  44:	mov	w11, #0x18                  	// #24
  48:	add	w9, w2, w0
  4c:	sub	w5, w5, w2
  50:	sub	x4, x4, x7
  54:	asr	x1, x4, #3
  58:	umull	x4, w0, w11
  5c:	mul	x1, x1, x6
  60:	add	x6, x7, x4
  64:	str	w10, [x7, x4]
  68:	str	x8, [x6, #8]
  6c:	udiv	x4, x9, x1
  70:	str	w2, [x6, #16]
  74:	strb	wzr, [x6, #20]
  78:	str	w5, [x3, #20]
  7c:	msub	x1, x4, x1, x9
  80:	str	w1, [x3, #8]
  84:	ret
  88:	stp	x29, x30, [sp, #-16]!
  8c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  90:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  94:	mov	x29, sp
  98:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  9c:	add	x3, x3, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x0, x0, #0x0
  a8:	mov	w2, #0x2c                  	// #44
  ac:	bl	0 <__assert_fail>

00000000000000b0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
  b0:	ldr	w1, [x0, #12]
  b4:	mov	w2, #0x18                  	// #24
  b8:	ldr	x0, [x0, #32]
  bc:	umaddl	x0, w1, w2, x0
  c0:	ldr	x1, [x0, #8]
  c4:	cbz	x1, cc <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x1c>
  c8:	ret
  cc:	stp	x29, x30, [sp, #-16]!
  d0:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  d4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  d8:	mov	x29, sp
  dc:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  e0:	add	x3, x3, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x0, x0, #0x0
  ec:	mov	w2, #0x3b                  	// #59
  f0:	bl	0 <__assert_fail>
  f4:	nop

00000000000000f8 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
  f8:	stp	x29, x30, [sp, #-32]!
  fc:	mov	x29, sp
 100:	str	x19, [sp, #16]
 104:	mov	x19, x0
 108:	bl	b0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 10c:	ldr	w3, [x0, #16]
 110:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 114:	ldp	x1, x2, [x19, #32]
 118:	movk	x4, #0xaaab
 11c:	ldr	w0, [x19, #12]
 120:	cmp	w3, #0x0
 124:	ldr	x19, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	sub	x1, x2, x1
 130:	csinc	w2, w3, wzr, ne  // ne = any
 134:	asr	x1, x1, #3
 138:	add	w2, w2, w0
 13c:	mul	x1, x1, x4
 140:	udiv	x0, x2, x1
 144:	msub	w0, w0, w1, w2
 148:	ret
 14c:	nop

0000000000000150 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 150:	stp	x29, x30, [sp, #-32]!
 154:	mov	x29, sp
 158:	str	x19, [sp, #16]
 15c:	mov	x19, x0
 160:	bl	f8 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>
 164:	mov	w2, #0x18                  	// #24
 168:	ldr	x1, [x19, #32]
 16c:	ldr	x19, [sp, #16]
 170:	umaddl	x0, w0, w2, x1
 174:	ldp	x29, x30, [sp], #32
 178:	ret
 17c:	nop

0000000000000180 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 180:	ldr	w8, [x0, #12]
 184:	mov	w3, #0x18                  	// #24
 188:	ldr	x5, [x0, #32]
 18c:	umull	x3, w8, w3
 190:	add	x2, x5, x3
 194:	ldr	x4, [x2, #8]
 198:	ldr	w1, [x4, #784]
 19c:	cmp	w1, #0x5
 1a0:	b.ne	200 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x80>  // b.any
 1a4:	ldr	x1, [x0, #40]
 1a8:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1ac:	ldr	w7, [x2, #16]
 1b0:	movk	x9, #0xaaab
 1b4:	sub	x1, x1, x5
 1b8:	ldr	w6, [x0, #20]
 1bc:	cmp	w7, #0x0
 1c0:	mov	w10, #0x6                   	// #6
 1c4:	asr	x1, x1, #3
 1c8:	str	w10, [x4, #784]
 1cc:	csinc	w4, w7, wzr, ne  // ne = any
 1d0:	add	w6, w6, w7
 1d4:	add	w4, w4, w8
 1d8:	str	w6, [x0, #20]
 1dc:	mul	x1, x1, x9
 1e0:	udiv	x6, x4, x1
 1e4:	msub	x1, x6, x1, x4
 1e8:	str	w1, [x0, #12]
 1ec:	str	wzr, [x5, x3]
 1f0:	str	xzr, [x2, #8]
 1f4:	str	wzr, [x2, #16]
 1f8:	strb	wzr, [x2, #20]
 1fc:	ret
 200:	stp	x29, x30, [sp, #-16]!
 204:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 208:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 20c:	mov	x29, sp
 210:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 214:	add	x3, x3, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x0, x0, #0x0
 220:	mov	w2, #0x21c                 	// #540
 224:	bl	0 <__assert_fail>

0000000000000228 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 228:	stp	x29, x30, [sp, #-16]!
 22c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 230:	movk	x3, #0xaaab
 234:	mov	x29, sp
 238:	ldp	x2, x0, [x0, #32]
 23c:	sub	x0, x0, x2
 240:	asr	x0, x0, #3
 244:	mul	x0, x0, x3
 248:	cmp	x0, w1, uxtw
 24c:	b.ls	278 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x50>  // b.plast
 250:	mov	w0, #0x18                  	// #24
 254:	umaddl	x1, w1, w0, x2
 258:	ldr	x0, [x1, #8]
 25c:	cbz	x0, 2b8 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x90>
 260:	ldrb	w0, [x1, #20]
 264:	cbnz	w0, 298 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x70>
 268:	mov	w0, #0x1                   	// #1
 26c:	strb	w0, [x1, #20]
 270:	ldp	x29, x30, [sp], #16
 274:	ret
 278:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 27c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 280:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 284:	add	x3, x3, #0x0
 288:	add	x1, x1, #0x0
 28c:	add	x0, x0, #0x0
 290:	mov	w2, #0x56                  	// #86
 294:	bl	0 <__assert_fail>
 298:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 29c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2a0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2a4:	add	x3, x3, #0x0
 2a8:	add	x1, x1, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	w2, #0x58                  	// #88
 2b4:	bl	0 <__assert_fail>
 2b8:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2bc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2c0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2c4:	add	x3, x3, #0x0
 2c8:	add	x1, x1, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	w2, #0x57                  	// #87
 2d4:	bl	0 <__assert_fail>

00000000000002d8 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 2d8:	stp	x29, x30, [sp, #-32]!
 2dc:	mov	x29, sp
 2e0:	str	x19, [sp, #16]
 2e4:	mov	x19, x0
 2e8:	bl	0 <_ZN4llvm4dbgsEv>
 2ec:	ldp	x1, x3, [x0, #16]
 2f0:	sub	x1, x1, x3
 2f4:	cmp	x1, #0x21
 2f8:	b.ls	3c0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xe8>  // b.plast
 2fc:	mov	x2, x0
 300:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 304:	add	x0, x0, #0x0
 308:	ldp	x4, x5, [x0]
 30c:	stp	x4, x5, [x3]
 310:	ldrh	w1, [x0, #32]
 314:	ldp	x4, x5, [x0, #16]
 318:	stp	x4, x5, [x3, #16]
 31c:	strh	w1, [x3, #32]
 320:	ldr	x0, [x2, #24]
 324:	ldr	w1, [x19, #16]
 328:	add	x0, x0, #0x22
 32c:	str	x0, [x2, #24]
 330:	mov	x0, x2
 334:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 338:	mov	x2, x0
 33c:	ldp	x1, x3, [x0, #16]
 340:	sub	x1, x1, x3
 344:	cmp	x1, #0x17
 348:	b.ls	3f4 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x11c>  // b.plast
 34c:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 350:	add	x0, x0, #0x0
 354:	ldp	x4, x5, [x0]
 358:	stp	x4, x5, [x3]
 35c:	ldr	x0, [x0, #16]
 360:	str	x0, [x3, #16]
 364:	ldr	x0, [x2, #24]
 368:	ldr	w1, [x19, #20]
 36c:	add	x0, x0, #0x18
 370:	str	x0, [x2, #24]
 374:	mov	x0, x2
 378:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 37c:	mov	x1, x0
 380:	ldp	x2, x3, [x0, #16]
 384:	sub	x2, x2, x3
 388:	cmp	x2, #0x2
 38c:	b.ls	428 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x150>  // b.plast
 390:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 394:	add	x0, x0, #0x0
 398:	ldrh	w2, [x0]
 39c:	ldrb	w0, [x0, #2]
 3a0:	strh	w2, [x3]
 3a4:	strb	w0, [x3, #2]
 3a8:	ldr	x0, [x1, #24]
 3ac:	ldr	x19, [sp, #16]
 3b0:	add	x0, x0, #0x3
 3b4:	str	x0, [x1, #24]
 3b8:	ldp	x29, x30, [sp], #32
 3bc:	ret
 3c0:	mov	x2, #0x22                  	// #34
 3c4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 3c8:	add	x1, x1, #0x0
 3cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3d0:	ldr	w1, [x19, #16]
 3d4:	mov	x2, x0
 3d8:	mov	x0, x2
 3dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3e0:	mov	x2, x0
 3e4:	ldp	x1, x3, [x0, #16]
 3e8:	sub	x1, x1, x3
 3ec:	cmp	x1, #0x17
 3f0:	b.hi	34c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x74>  // b.pmore
 3f4:	mov	x2, #0x18                  	// #24
 3f8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 3fc:	add	x1, x1, #0x0
 400:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 404:	ldr	w1, [x19, #20]
 408:	mov	x2, x0
 40c:	mov	x0, x2
 410:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 414:	mov	x1, x0
 418:	ldp	x2, x3, [x0, #16]
 41c:	sub	x2, x2, x3
 420:	cmp	x2, #0x2
 424:	b.hi	390 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xb8>  // b.pmore
 428:	ldr	x19, [sp, #16]
 42c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 430:	ldp	x29, x30, [sp], #32
 434:	add	x1, x1, #0x0
 438:	mov	x2, #0x3                   	// #3
 43c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

0000000000000440 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
 440:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 444:	mov	x2, x0
 448:	add	x0, x0, #0x20
 44c:	ldr	x4, [x3]
 450:	str	wzr, [x2, #24]
 454:	ldr	w3, [x1, #4]
 458:	ldr	x5, [x1, #64]
 45c:	add	x1, x4, #0x10
 460:	stp	x1, xzr, [x2]
 464:	stp	w3, w3, [x2, #16]
 468:	str	xzr, [x2, #32]
 46c:	stp	xzr, xzr, [x0, #8]
 470:	cbz	x5, 484 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x44>
 474:	ldr	w1, [x5]
 478:	cbnz	w1, 49c <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x5c>
 47c:	ldr	w1, [x5, #4]
 480:	str	w1, [x2, #24]
 484:	str	w3, [x2, #16]
 488:	cbz	w3, 4b0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x70>
 48c:	cmp	wzr, w3, lsl #1
 490:	lsl	w3, w3, #1
 494:	b.ne	4a8 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x68>  // b.any
 498:	ret
 49c:	mov	w3, w1
 4a0:	str	w1, [x2, #20]
 4a4:	b	47c <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x3c>
 4a8:	mov	w1, w3
 4ac:	b	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4b0:	stp	x29, x30, [sp, #-16]!
 4b4:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4b8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4bc:	mov	x29, sp
 4c0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4c4:	add	x3, x3, #0x0
 4c8:	add	x1, x1, #0x0
 4cc:	add	x0, x0, #0x0
 4d0:	mov	w2, #0x24                  	// #36
 4d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #32]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD1Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #32]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  34:	mov	x0, x19
  38:	mov	x1, #0x38                  	// #56
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	cbz	x1, 98 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x98>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x3, #0x5555555555555555    	// #6148914691236517205
   c:	movk	x3, #0x555, lsl #48
  10:	mov	x29, sp
  14:	ldp	x2, x4, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	ldr	x0, [x0, #16]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x1
  2c:	sub	x19, x4, x2
  30:	sub	x0, x0, x4
  34:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  38:	asr	x22, x19, #3
  3c:	asr	x0, x0, #3
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	mul	x22, x22, x1
  4c:	cmp	x0, x20
  50:	sub	x1, x3, x22
  54:	b.cc	9c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x9c>  // b.lo, b.ul, b.last
  58:	mov	x2, x4
  5c:	mov	x3, x20
  60:	str	wzr, [x2]
  64:	subs	x3, x3, #0x1
  68:	str	xzr, [x2, #8]
  6c:	add	x2, x2, #0x18
  70:	stur	wzr, [x2, #-8]
  74:	sturb	wzr, [x2, #-4]
  78:	b.ne	60 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x60>  // b.any
  7c:	add	x20, x20, x20, lsl #1
  80:	add	x4, x4, x20, lsl #3
  84:	str	x4, [x21, #8]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x21, x22, [sp, #32]
  90:	ldp	x29, x30, [sp], #64
  94:	ret
  98:	ret
  9c:	stp	x23, x24, [sp, #48]
  a0:	cmp	x1, x20
  a4:	b.cc	15c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x15c>  // b.lo, b.ul, b.last
  a8:	cmp	x22, x20
  ac:	csel	x23, x22, x20, cs  // cs = hs, nlast
  b0:	add	x23, x22, x23
  b4:	cmp	x23, x3
  b8:	csel	x23, x23, x3, ls  // ls = plast
  bc:	add	x23, x23, x23, lsl #1
  c0:	lsl	x23, x23, #3
  c4:	mov	x0, x23
  c8:	bl	0 <_Znwm>
  cc:	mov	x1, x20
  d0:	mov	x24, x0
  d4:	add	x2, x0, x19
  d8:	str	wzr, [x2]
  dc:	subs	x1, x1, #0x1
  e0:	str	xzr, [x2, #8]
  e4:	add	x2, x2, #0x18
  e8:	stur	wzr, [x2, #-8]
  ec:	sturb	wzr, [x2, #-4]
  f0:	b.ne	d8 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xd8>  // b.any
  f4:	ldp	x0, x6, [x21]
  f8:	mov	x2, x24
  fc:	mov	x1, x0
 100:	cmp	x0, x6
 104:	b.eq	128 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x128>  // b.none
 108:	ldp	x4, x5, [x1]
 10c:	stp	x4, x5, [x2]
 110:	add	x1, x1, #0x18
 114:	ldur	x3, [x1, #-8]
 118:	str	x3, [x2, #16]
 11c:	cmp	x6, x1
 120:	add	x2, x2, #0x18
 124:	b.ne	108 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x108>  // b.any
 128:	cbz	x0, 130 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x130>
 12c:	bl	0 <_ZdlPv>
 130:	add	x20, x22, x20
 134:	add	x23, x24, x23
 138:	str	x23, [x21, #16]
 13c:	add	x20, x20, x20, lsl #1
 140:	add	x20, x24, x20, lsl #3
 144:	stp	x24, x20, [x21]
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x21, x22, [sp, #32]
 150:	ldp	x23, x24, [sp, #48]
 154:	ldp	x29, x30, [sp], #64
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	ldr	x2, [x1]
       c:	str	x19, [sp, #16]
      10:	mov	x19, x0
      14:	cbz	x2, 4c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x4c>
      18:	str	xzr, [x1]
      1c:	ldr	x0, [x19, #16]
      20:	str	x2, [x19, #16]
      24:	cbz	x0, 40 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x40>
      28:	ldr	x1, [x0]
      2c:	ldr	x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ldr	x1, [x1, #8]
      38:	mov	x16, x1
      3c:	br	x16
      40:	ldr	x19, [sp, #16]
      44:	ldp	x29, x30, [sp], #32
      48:	ret
      4c:	mov	x0, #0x8                   	// #8
      50:	bl	0 <_Znwm>
      54:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      58:	mov	x2, x0
      5c:	ldr	x1, [x1]
      60:	add	x1, x1, #0x10
      64:	str	x1, [x0]
      68:	b	1c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x1c>
      6c:	nop

0000000000000070 <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
      70:	ret
      74:	nop

0000000000000078 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>:
      78:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      7c:	ldr	x1, [x1]
      80:	add	x1, x1, #0x10
      84:	str	x1, [x0]
      88:	b	70 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      8c:	nop

0000000000000090 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	mov	x29, sp
      98:	str	x19, [sp, #16]
      9c:	mov	x19, x0
      a0:	bl	78 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>
      a4:	mov	x0, x19
      a8:	mov	x1, #0x8                   	// #8
      ac:	ldr	x19, [sp, #16]
      b0:	ldp	x29, x30, [sp], #32
      b4:	b	0 <_ZdlPvm>

00000000000000b8 <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
      b8:	stp	x29, x30, [sp, #-32]!
      bc:	mov	x29, sp
      c0:	str	x19, [sp, #16]
      c4:	mov	x19, x0
      c8:	bl	70 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      cc:	mov	x0, x19
      d0:	mov	x1, #0x8                   	// #8
      d4:	ldr	x19, [sp, #16]
      d8:	ldp	x29, x30, [sp], #32
      dc:	b	0 <_ZdlPvm>

00000000000000e0 <_ZNK4llvm3mca9Scheduler4dumpEv>:
      e0:	stp	x29, x30, [sp, #-32]!
      e4:	mov	x29, sp
      e8:	stp	x19, x20, [sp, #16]
      ec:	mov	x19, x0
      f0:	bl	0 <_ZN4llvm4dbgsEv>
      f4:	ldp	x2, x3, [x0, #16]
      f8:	sub	x2, x2, x3
      fc:	cmp	x2, #0x1d
     100:	b.ls	27c <_ZNK4llvm3mca9Scheduler4dumpEv+0x19c>  // b.plast
     104:	mov	x1, x0
     108:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     10c:	add	x0, x0, #0x0
     110:	ldr	x2, [x0, #16]
     114:	str	x2, [x3, #16]
     118:	ldp	x4, x5, [x0]
     11c:	stp	x4, x5, [x3]
     120:	ldur	x0, [x0, #22]
     124:	stur	x0, [x3, #22]
     128:	ldr	x0, [x1, #24]
     12c:	add	x0, x0, #0x1e
     130:	str	x0, [x1, #24]
     134:	mov	x0, x1
     138:	ldp	x2, x1, [x19, #32]
     13c:	sub	x1, x1, x2
     140:	asr	x1, x1, #4
     144:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     148:	ldp	x3, x2, [x0, #16]
     14c:	mov	x1, x0
     150:	cmp	x2, x3
     154:	b.cs	2dc <_ZNK4llvm3mca9Scheduler4dumpEv+0x1fc>  // b.hs, b.nlast
     158:	add	x0, x2, #0x1
     15c:	str	x0, [x1, #24]
     160:	mov	w0, #0xa                   	// #10
     164:	strb	w0, [x2]
     168:	bl	0 <_ZN4llvm4dbgsEv>
     16c:	mov	x1, x0
     170:	ldp	x2, x3, [x0, #16]
     174:	sub	x2, x2, x3
     178:	cmp	x2, #0x1e
     17c:	b.ls	2c4 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1e4>  // b.plast
     180:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     184:	add	x0, x0, #0x0
     188:	ldr	x2, [x0, #16]
     18c:	str	x2, [x3, #16]
     190:	ldp	x4, x5, [x0]
     194:	stp	x4, x5, [x3]
     198:	ldur	x0, [x0, #23]
     19c:	stur	x0, [x3, #23]
     1a0:	ldr	x0, [x1, #24]
     1a4:	add	x0, x0, #0x1f
     1a8:	str	x0, [x1, #24]
     1ac:	mov	x0, x1
     1b0:	ldp	x2, x1, [x19, #80]
     1b4:	sub	x1, x1, x2
     1b8:	asr	x1, x1, #4
     1bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     1c0:	ldp	x3, x2, [x0, #16]
     1c4:	mov	x1, x0
     1c8:	cmp	x2, x3
     1cc:	b.cs	2b8 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1d8>  // b.hs, b.nlast
     1d0:	add	x0, x2, #0x1
     1d4:	str	x0, [x1, #24]
     1d8:	mov	w0, #0xa                   	// #10
     1dc:	strb	w0, [x2]
     1e0:	bl	0 <_ZN4llvm4dbgsEv>
     1e4:	mov	x1, x0
     1e8:	ldp	x2, x3, [x0, #16]
     1ec:	sub	x2, x2, x3
     1f0:	cmp	x2, #0x1f
     1f4:	b.ls	2a0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1c0>  // b.plast
     1f8:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     1fc:	add	x0, x0, #0x0
     200:	ldp	x4, x5, [x0]
     204:	stp	x4, x5, [x3]
     208:	ldp	x4, x5, [x0, #16]
     20c:	stp	x4, x5, [x3, #16]
     210:	ldr	x0, [x1, #24]
     214:	add	x0, x0, #0x20
     218:	str	x0, [x1, #24]
     21c:	mov	x0, x1
     220:	ldp	x2, x1, [x19, #104]
     224:	sub	x1, x1, x2
     228:	asr	x1, x1, #4
     22c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     230:	ldp	x3, x2, [x0, #16]
     234:	mov	x1, x0
     238:	cmp	x2, x3
     23c:	b.cs	294 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1b4>  // b.hs, b.nlast
     240:	add	x0, x2, #0x1
     244:	str	x0, [x1, #24]
     248:	mov	w0, #0xa                   	// #10
     24c:	strb	w0, [x2]
     250:	ldr	x0, [x19, #24]
     254:	ldp	x19, x20, [x0, #8]
     258:	cmp	x20, x19
     25c:	b.eq	270 <_ZNK4llvm3mca9Scheduler4dumpEv+0x190>  // b.none
     260:	ldr	x0, [x19], #8
     264:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
     268:	cmp	x20, x19
     26c:	b.ne	260 <_ZNK4llvm3mca9Scheduler4dumpEv+0x180>  // b.any
     270:	ldp	x19, x20, [sp, #16]
     274:	ldp	x29, x30, [sp], #32
     278:	ret
     27c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     280:	add	x1, x1, #0x0
     284:	mov	x2, #0x1e                  	// #30
     288:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     28c:	mov	x1, x0
     290:	b	134 <_ZNK4llvm3mca9Scheduler4dumpEv+0x54>
     294:	mov	w1, #0xa                   	// #10
     298:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     29c:	b	250 <_ZNK4llvm3mca9Scheduler4dumpEv+0x170>
     2a0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2a4:	add	x1, x1, #0x0
     2a8:	mov	x2, #0x20                  	// #32
     2ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2b0:	mov	x1, x0
     2b4:	b	21c <_ZNK4llvm3mca9Scheduler4dumpEv+0x13c>
     2b8:	mov	w1, #0xa                   	// #10
     2bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2c0:	b	1e0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x100>
     2c4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2c8:	add	x1, x1, #0x0
     2cc:	mov	x2, #0x1f                  	// #31
     2d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2d4:	mov	x1, x0
     2d8:	b	1ac <_ZNK4llvm3mca9Scheduler4dumpEv+0xcc>
     2dc:	mov	w1, #0xa                   	// #10
     2e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2e4:	b	168 <_ZNK4llvm3mca9Scheduler4dumpEv+0x88>

00000000000002e8 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
     2e8:	stp	x29, x30, [sp, #-32]!
     2ec:	mov	x29, sp
     2f0:	stp	x19, x20, [sp, #16]
     2f4:	mov	x20, x1
     2f8:	mov	x19, x0
     2fc:	ldr	x1, [x1, #8]
     300:	ldr	x0, [x0, #24]
     304:	ldr	x1, [x1, #800]
     308:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
     30c:	cmp	w0, #0x0
     310:	cset	w1, ne  // ne = any
     314:	strb	w1, [x19, #140]
     318:	cmp	w0, #0x1
     31c:	b.eq	36c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>  // b.none
     320:	cmp	w0, #0x2
     324:	b.eq	35c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x74>  // b.none
     328:	ldr	x0, [x19, #8]
     32c:	mov	x1, x20
     330:	ldr	x2, [x0]
     334:	ldr	x2, [x2, #16]
     338:	blr	x2
     33c:	cmp	w0, #0x0
     340:	cset	w1, ne  // ne = any
     344:	strb	w1, [x19, #140]
     348:	cmp	w0, #0x2
     34c:	b.hi	37c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x94>  // b.pmore
     350:	ldp	x19, x20, [sp, #16]
     354:	ldp	x29, x30, [sp], #32
     358:	ret
     35c:	mov	w0, #0x4                   	// #4
     360:	ldp	x19, x20, [sp, #16]
     364:	ldp	x29, x30, [sp], #32
     368:	ret
     36c:	mov	w0, #0x3                   	// #3
     370:	ldp	x19, x20, [sp, #16]
     374:	ldp	x29, x30, [sp], #32
     378:	ret
     37c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     380:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     384:	add	x1, x1, #0x0
     388:	add	x0, x0, #0x0
     38c:	mov	w2, #0x43                  	// #67
     390:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     394:	nop

0000000000000398 <_ZN4llvm3mca9Scheduler6selectEv>:
     398:	stp	x29, x30, [sp, #-96]!
     39c:	mov	x29, sp
     3a0:	ldp	x2, x1, [x0, #80]
     3a4:	stp	x19, x20, [sp, #16]
     3a8:	mov	x20, x0
     3ac:	stp	x25, x26, [sp, #64]
     3b0:	str	x27, [sp, #80]
     3b4:	sub	x0, x1, x2
     3b8:	asr	x25, x0, #4
     3bc:	cbz	w25, 5b8 <_ZN4llvm3mca9Scheduler6selectEv+0x220>
     3c0:	stp	x23, x24, [sp, #48]
     3c4:	adrp	x23, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     3c8:	mov	w24, w25
     3cc:	add	x23, x23, #0x0
     3d0:	mov	x19, #0x0                   	// #0
     3d4:	stp	x21, x22, [sp, #32]
     3d8:	mov	w21, #0x88                  	// #136
     3dc:	nop
     3e0:	asr	x0, x0, #4
     3e4:	mov	w22, w19
     3e8:	cmp	x0, w25, uxtw
     3ec:	add	x26, x2, x19, lsl #4
     3f0:	mov	w27, w25
     3f4:	b.eq	4ac <_ZN4llvm3mca9Scheduler6selectEv+0x114>  // b.none
     3f8:	ldr	x0, [x20, #16]
     3fc:	add	x2, x2, x27, lsl #4
     400:	ldr	x1, [x0]
     404:	ldr	x3, [x1, #16]
     408:	cmp	x3, x23
     40c:	b.ne	57c <_ZN4llvm3mca9Scheduler6selectEv+0x1e4>  // b.any
     410:	ldr	x0, [x26, #8]
     414:	ldr	w7, [x26]
     418:	ldr	w5, [x0, #24]
     41c:	ldr	x3, [x0, #16]
     420:	umaddl	x5, w5, w21, x3
     424:	cmp	x3, x5
     428:	b.eq	594 <_ZN4llvm3mca9Scheduler6selectEv+0x1fc>  // b.none
     42c:	mov	w0, #0x0                   	// #0
     430:	ldr	x1, [x3, #32]
     434:	add	x3, x3, #0x88
     438:	ldur	w4, [x3, #-72]
     43c:	cmp	x1, #0x0
     440:	cinc	w4, w4, ne  // ne = any
     444:	cmp	x5, x3
     448:	add	w0, w0, w4
     44c:	b.ne	430 <_ZN4llvm3mca9Scheduler6selectEv+0x98>  // b.any
     450:	sub	w3, w7, w0
     454:	ldr	x0, [x2, #8]
     458:	ldr	w6, [x2]
     45c:	ldr	w5, [x0, #24]
     460:	ldr	x2, [x0, #16]
     464:	umaddl	x5, w5, w21, x2
     468:	cmp	x2, x5
     46c:	b.eq	58c <_ZN4llvm3mca9Scheduler6selectEv+0x1f4>  // b.none
     470:	mov	w0, #0x0                   	// #0
     474:	nop
     478:	ldr	x1, [x2, #32]
     47c:	add	x2, x2, #0x88
     480:	ldur	w4, [x2, #-72]
     484:	cmp	x1, #0x0
     488:	cinc	w4, w4, ne  // ne = any
     48c:	cmp	x5, x2
     490:	add	w0, w0, w4
     494:	b.ne	478 <_ZN4llvm3mca9Scheduler6selectEv+0xe0>  // b.any
     498:	sub	w0, w6, w0
     49c:	cmp	w3, w0
     4a0:	b.eq	570 <_ZN4llvm3mca9Scheduler6selectEv+0x1d8>  // b.none
     4a4:	cset	w0, lt  // lt = tstop
     4a8:	cbz	w0, 4c8 <_ZN4llvm3mca9Scheduler6selectEv+0x130>
     4ac:	ldr	x26, [x26, #8]
     4b0:	ldr	x0, [x20, #24]
     4b4:	ldr	x1, [x26]
     4b8:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
     4bc:	cbnz	x0, 4e0 <_ZN4llvm3mca9Scheduler6selectEv+0x148>
     4c0:	mov	w25, w22
     4c4:	mov	x27, x19
     4c8:	add	x19, x19, #0x1
     4cc:	cmp	w24, w19
     4d0:	ldp	x2, x1, [x20, #80]
     4d4:	b.eq	500 <_ZN4llvm3mca9Scheduler6selectEv+0x168>  // b.none
     4d8:	sub	x0, x1, x2
     4dc:	b	3e0 <_ZN4llvm3mca9Scheduler6selectEv+0x48>
     4e0:	str	x0, [x26, #832]
     4e4:	add	x19, x19, #0x1
     4e8:	cmp	w24, w19
     4ec:	ldr	x1, [x20, #128]
     4f0:	orr	x0, x1, x0
     4f4:	str	x0, [x20, #128]
     4f8:	ldp	x2, x1, [x20, #80]
     4fc:	b.ne	4d8 <_ZN4llvm3mca9Scheduler6selectEv+0x140>  // b.any
     500:	ldp	x21, x22, [sp, #32]
     504:	sub	x3, x1, x2
     508:	ldp	x23, x24, [sp, #48]
     50c:	asr	x25, x3, #4
     510:	cmp	x25, x27
     514:	b.eq	59c <_ZN4llvm3mca9Scheduler6selectEv+0x204>  // b.none
     518:	sub	x4, x3, #0x10
     51c:	lsl	x27, x27, #4
     520:	add	x8, x2, x27
     524:	add	x5, x2, x4
     528:	sub	x3, x1, #0x10
     52c:	mov	x0, #0x0                   	// #0
     530:	ldr	w1, [x2, x4]
     534:	ldr	w7, [x2, x27]
     538:	ldr	x6, [x8, #8]
     53c:	str	w1, [x2, x27]
     540:	ldr	x1, [x5, #8]
     544:	str	x1, [x8, #8]
     548:	str	w7, [x2, x4]
     54c:	bfxil	x0, x7, #0, #32
     550:	str	x6, [x5, #8]
     554:	mov	x1, x6
     558:	str	x3, [x20, #88]
     55c:	ldp	x19, x20, [sp, #16]
     560:	ldp	x25, x26, [sp, #64]
     564:	ldr	x27, [sp, #80]
     568:	ldp	x29, x30, [sp], #96
     56c:	ret
     570:	cmp	w7, w6
     574:	cset	w0, cc  // cc = lo, ul, last
     578:	b	4a8 <_ZN4llvm3mca9Scheduler6selectEv+0x110>
     57c:	mov	x1, x26
     580:	blr	x3
     584:	and	w0, w0, #0xff
     588:	b	4a8 <_ZN4llvm3mca9Scheduler6selectEv+0x110>
     58c:	mov	w0, w6
     590:	b	49c <_ZN4llvm3mca9Scheduler6selectEv+0x104>
     594:	mov	w3, w7
     598:	b	454 <_ZN4llvm3mca9Scheduler6selectEv+0xbc>
     59c:	mov	x0, #0x0                   	// #0
     5a0:	mov	x1, #0x0                   	// #0
     5a4:	ldp	x19, x20, [sp, #16]
     5a8:	ldp	x25, x26, [sp, #64]
     5ac:	ldr	x27, [sp, #80]
     5b0:	ldp	x29, x30, [sp], #96
     5b4:	ret
     5b8:	mov	x3, x0
     5bc:	mov	x27, #0x0                   	// #0
     5c0:	b	510 <_ZN4llvm3mca9Scheduler6selectEv+0x178>
     5c4:	nop

00000000000005c8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
     5c8:	ldr	x0, [x1, #8]
     5cc:	ldr	x1, [x0]
     5d0:	ldr	w0, [x1, #312]
     5d4:	cbnz	w0, 5e8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
     5d8:	ldr	w2, [x1, #184]
     5dc:	mov	w0, #0x1                   	// #1
     5e0:	cbnz	w2, 5e8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
     5e4:	ret
     5e8:	ldrb	w0, [x1, #329]
     5ec:	ret

00000000000005f0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
     5f0:	stp	x29, x30, [sp, #-112]!
     5f4:	mov	x29, sp
     5f8:	stp	x19, x20, [sp, #16]
     5fc:	mov	x20, x1
     600:	ldr	x19, [x1, #8]
     604:	stp	x21, x22, [sp, #32]
     608:	mov	x21, x0
     60c:	ldr	x0, [x0, #24]
     610:	ldr	x1, [x19]
     614:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     618:	ldr	w1, [x20]
     61c:	mov	x0, x19
     620:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
     624:	mov	x0, x19
     628:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
     62c:	ldr	x0, [x19]
     630:	ldrb	w1, [x0, #324]
     634:	cbnz	w1, 640 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x50>
     638:	ldrb	w0, [x0, #325]
     63c:	cbz	w0, 7c8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1d8>
     640:	ldr	x22, [x21, #8]
     644:	stp	x23, x24, [sp, #48]
     648:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     64c:	stp	x25, x26, [sp, #64]
     650:	add	x0, x0, #0x0
     654:	ldr	x1, [x22]
     658:	stp	x27, x28, [sp, #80]
     65c:	ldr	x2, [x1, #48]
     660:	cmp	x2, x0
     664:	b.ne	8c0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2d0>  // b.any
     668:	ldr	w23, [x22, #56]
     66c:	ldr	x0, [x20, #8]
     670:	ldr	x26, [x22, #40]
     674:	ldr	w24, [x0, #796]
     678:	cbz	w23, 8e4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2f4>
     67c:	cmn	w24, #0x3
     680:	b.hi	e18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x828>  // b.pmore
     684:	mov	w25, #0x25                  	// #37
     688:	sub	w1, w23, #0x1
     68c:	mul	w25, w24, w25
     690:	and	w0, w25, w1
     694:	and	w3, w25, w1
     698:	lsl	x0, x0, #4
     69c:	add	x4, x26, x0
     6a0:	ldr	w27, [x26, x0]
     6a4:	cmp	w24, w27
     6a8:	b.ne	a14 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x424>  // b.any
     6ac:	ldr	x0, [x4, #8]
     6b0:	ldr	w1, [x0, #16]
     6b4:	cbz	w1, 6cc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xdc>
     6b8:	ldr	w2, [x0, #12]
     6bc:	ldr	w3, [x0, #20]
     6c0:	sub	w2, w2, w3
     6c4:	cmp	w1, w2
     6c8:	b.eq	820 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x230>  // b.none
     6cc:	ldr	x2, [x0, #96]
     6d0:	add	w1, w1, #0x1
     6d4:	ldr	x3, [x20, #8]
     6d8:	str	w1, [x0, #16]
     6dc:	cbz	x2, 810 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x220>
     6e0:	ldr	w4, [x2, #788]
     6e4:	ldr	w2, [x3, #788]
     6e8:	cmp	w4, w2
     6ec:	b.lt	810 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x220>  // b.tstop
     6f0:	cbz	w1, 708 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     6f4:	ldr	w2, [x0, #12]
     6f8:	ldr	w3, [x0, #20]
     6fc:	sub	w2, w2, w3
     700:	cmp	w1, w2
     704:	b.eq	840 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x250>  // b.none
     708:	ldr	w2, [x19, #796]
     70c:	cbnz	w2, 730 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x140>
     710:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     714:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     718:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     71c:	add	x3, x3, #0x0
     720:	add	x1, x1, #0x0
     724:	add	x0, x0, #0x0
     728:	mov	w2, #0x11c                 	// #284
     72c:	bl	0 <__assert_fail>
     730:	ldr	x1, [x21, #8]
     734:	ldr	w0, [x1, #56]
     738:	ldr	x3, [x1, #40]
     73c:	cbz	w0, 710 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>
     740:	cmn	w2, #0x3
     744:	b.hi	e18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x828>  // b.pmore
     748:	mov	w1, #0x25                  	// #37
     74c:	sub	w4, w0, #0x1
     750:	mul	w1, w2, w1
     754:	and	w5, w1, w4
     758:	and	w1, w1, w4
     75c:	lsl	x5, x5, #4
     760:	add	x7, x3, x5
     764:	ldr	w5, [x3, x5]
     768:	cmp	w2, w5
     76c:	b.ne	cb0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6c0>  // b.any
     770:	ubfiz	x0, x0, #4, #32
     774:	add	x6, x3, x0
     778:	cmp	x7, x6
     77c:	b.eq	710 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>  // b.none
     780:	mov	w0, #0x25                  	// #37
     784:	mul	w0, w2, w0
     788:	and	w1, w0, w4
     78c:	and	w0, w0, w4
     790:	lsl	x1, x1, #4
     794:	add	x5, x3, x1
     798:	ldr	w1, [x3, x1]
     79c:	cmp	w2, w1
     7a0:	b.ne	8d0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2e0>  // b.any
     7a4:	ldr	x1, [x5, #8]
     7a8:	add	x0, x19, #0x334
     7ac:	ldp	x23, x24, [sp, #48]
     7b0:	ldr	x2, [x1, #72]
     7b4:	ldp	x25, x26, [sp, #64]
     7b8:	ldp	x27, x28, [sp, #80]
     7bc:	str	x2, [x0]
     7c0:	ldr	w1, [x1, #80]
     7c4:	str	w1, [x19, #828]
     7c8:	ldr	w0, [x19, #784]
     7cc:	cmp	w0, #0x4
     7d0:	b.eq	8a8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2b8>  // b.none
     7d4:	cmp	w0, #0x5
     7d8:	b.eq	7ec <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1fc>  // b.none
     7dc:	ldp	x19, x20, [sp, #16]
     7e0:	ldp	x21, x22, [sp, #32]
     7e4:	ldp	x29, x30, [sp], #112
     7e8:	ret
     7ec:	ldr	x0, [x21, #8]
     7f0:	mov	x1, x20
     7f4:	ldp	x19, x20, [sp, #16]
     7f8:	ldr	x2, [x0]
     7fc:	ldp	x21, x22, [sp, #32]
     800:	ldr	x2, [x2, #32]
     804:	ldp	x29, x30, [sp], #112
     808:	mov	x16, x2
     80c:	br	x16
     810:	ldr	w2, [x20]
     814:	str	w2, [x0, #88]
     818:	str	x3, [x0, #96]
     81c:	b	6f0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x100>
     820:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     824:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     828:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     82c:	add	x3, x3, #0x0
     830:	add	x1, x1, #0x0
     834:	add	x0, x0, #0x0
     838:	mov	w2, #0x79                  	// #121
     83c:	bl	0 <__assert_fail>
     840:	ldr	x2, [x0, #24]
     844:	ldr	w6, [x0, #32]
     848:	add	x6, x2, x6, lsl #3
     84c:	cmp	x2, x6
     850:	b.eq	708 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>  // b.none
     854:	nop
     858:	ldr	x1, [x2]
     85c:	ldr	w4, [x1]
     860:	ldr	w3, [x1, #8]
     864:	cmp	w4, w3
     868:	b.eq	e78 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x888>  // b.none
     86c:	ldr	w3, [x1, #4]
     870:	ldr	x5, [x0, #96]
     874:	add	w3, w3, #0x1
     878:	str	w3, [x1, #4]
     87c:	ldr	w4, [x1, #80]
     880:	ldr	w3, [x5, #788]
     884:	cmp	w3, w4
     888:	b.ls	898 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2a8>  // b.plast
     88c:	ldr	w4, [x0, #88]
     890:	str	w4, [x1, #72]
     894:	str	w3, [x1, #80]
     898:	add	x2, x2, #0x8
     89c:	cmp	x6, x2
     8a0:	b.ne	858 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
     8a4:	b	708 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     8a8:	mov	x1, x20
     8ac:	add	x0, x21, #0x68
     8b0:	ldp	x19, x20, [sp, #16]
     8b4:	ldp	x21, x22, [sp, #32]
     8b8:	ldp	x29, x30, [sp], #112
     8bc:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8c0:	mov	x0, x22
     8c4:	mov	x1, x20
     8c8:	blr	x2
     8cc:	b	708 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     8d0:	mov	w5, #0x1                   	// #1
     8d4:	cmn	w1, #0x1
     8d8:	b.ne	9e8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3f8>  // b.any
     8dc:	mov	x5, x6
     8e0:	b	7a4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1b4>
     8e4:	ldr	x1, [x22, #32]
     8e8:	mov	w0, #0x0                   	// #0
     8ec:	add	x1, x1, #0x1
     8f0:	str	x1, [x22, #32]
     8f4:	sub	w0, w0, #0x1
     8f8:	mov	w1, #0x40                  	// #64
     8fc:	orr	x0, x0, x0, lsr #1
     900:	orr	x0, x0, x0, lsr #2
     904:	orr	x0, x0, x0, lsr #4
     908:	orr	x0, x0, x0, lsr #8
     90c:	orr	x0, x0, x0, lsr #16
     910:	add	x0, x0, #0x1
     914:	cmp	w0, w1
     918:	csel	w0, w0, w1, cs  // cs = hs, nlast
     91c:	str	w0, [x22, #56]
     920:	ubfiz	x0, x0, #4, #32
     924:	bl	0 <_Znwm>
     928:	ldr	w1, [x22, #56]
     92c:	stp	x0, xzr, [x22, #40]
     930:	sub	w2, w1, #0x1
     934:	and	w2, w2, w1
     938:	cbz	x26, d4c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x75c>
     93c:	ubfiz	x23, x23, #4, #32
     940:	add	x28, x26, x23
     944:	cbnz	w2, f00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x910>
     948:	ubfiz	x1, x1, #4, #32
     94c:	mov	w2, #0xffffffff            	// #-1
     950:	add	x1, x0, x1
     954:	cmp	x0, x1
     958:	b.eq	96c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x37c>  // b.none
     95c:	nop
     960:	str	w2, [x0], #16
     964:	cmp	x1, x0
     968:	b.ne	960 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x370>  // b.any
     96c:	cmp	x26, x28
     970:	mov	x25, x26
     974:	mov	w27, #0x25                  	// #37
     978:	b.ne	98c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x39c>  // b.any
     97c:	b	bc8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5d8>
     980:	add	x25, x25, #0x10
     984:	cmp	x28, x25
     988:	b.eq	bc8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5d8>  // b.none
     98c:	ldr	w0, [x25]
     990:	cmn	w0, #0x3
     994:	b.hi	980 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x390>  // b.pmore
     998:	ldr	w1, [x22, #56]
     99c:	cbz	w1, f20 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x930>
     9a0:	mul	w2, w0, w27
     9a4:	sub	w1, w1, #0x1
     9a8:	ldr	x4, [x22, #40]
     9ac:	and	w3, w2, w1
     9b0:	and	w2, w2, w1
     9b4:	lsl	x3, x3, #4
     9b8:	add	x5, x4, x3
     9bc:	ldr	w3, [x4, x3]
     9c0:	cmp	w0, w3
     9c4:	b.ne	ce4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6f4>  // b.any
     9c8:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9cc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9d0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9d4:	add	x3, x3, #0x0
     9d8:	add	x1, x1, #0x0
     9dc:	add	x0, x0, #0x0
     9e0:	mov	w2, #0x17a                 	// #378
     9e4:	bl	0 <__assert_fail>
     9e8:	add	w0, w5, w0
     9ec:	add	w7, w5, #0x1
     9f0:	and	w1, w4, w0
     9f4:	and	w0, w4, w0
     9f8:	lsl	x1, x1, #4
     9fc:	add	x5, x3, x1
     a00:	ldr	w1, [x3, x1]
     a04:	cmp	w2, w1
     a08:	b.eq	7a4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1b4>  // b.none
     a0c:	mov	w5, w7
     a10:	b	8d4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2e4>
     a14:	mov	w0, #0x1                   	// #1
     a18:	mov	x2, #0x0                   	// #0
     a1c:	cmn	w27, #0x1
     a20:	b.ne	dac <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x7bc>  // b.any
     a24:	ldr	x5, [x22, #32]
     a28:	lsl	w0, w23, #1
     a2c:	ldr	w3, [x22, #48]
     a30:	cmp	x2, #0x0
     a34:	add	x5, x5, #0x1
     a38:	str	x5, [x22, #32]
     a3c:	add	w3, w3, #0x1
     a40:	add	w5, w0, w23
     a44:	csel	x2, x2, x4, ne  // ne = any
     a48:	cmp	w5, w3, lsl #2
     a4c:	b.ls	8f4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x304>  // b.plast
     a50:	ldr	w0, [x22, #52]
     a54:	sub	w0, w23, w0
     a58:	sub	w0, w0, w3
     a5c:	cmp	w0, w23, lsr #3
     a60:	b.ls	a90 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x4a0>  // b.plast
     a64:	str	w3, [x22, #48]
     a68:	ldr	w0, [x2]
     a6c:	cmn	w0, #0x1
     a70:	b.eq	a80 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x490>  // b.none
     a74:	ldr	w0, [x22, #52]
     a78:	sub	w0, w0, #0x1
     a7c:	str	w0, [x22, #52]
     a80:	mov	x0, #0x0                   	// #0
     a84:	str	w24, [x2]
     a88:	str	xzr, [x2, #8]
     a8c:	b	6b0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc0>
     a90:	mov	w2, w1
     a94:	lsr	w0, w1, #1
     a98:	orr	x0, x0, x2
     a9c:	mov	w1, #0x40                  	// #64
     aa0:	orr	x0, x0, x0, lsr #2
     aa4:	orr	x0, x0, x0, lsr #4
     aa8:	orr	x0, x0, x0, lsr #8
     aac:	orr	x0, x0, x0, lsr #16
     ab0:	add	x0, x0, #0x1
     ab4:	cmp	w0, w1
     ab8:	csel	w0, w0, w1, cs  // cs = hs, nlast
     abc:	str	w0, [x22, #56]
     ac0:	ubfiz	x0, x0, #4, #32
     ac4:	bl	0 <_Znwm>
     ac8:	ldr	w1, [x22, #56]
     acc:	stp	x0, xzr, [x22, #40]
     ad0:	sub	w2, w1, #0x1
     ad4:	and	w2, w2, w1
     ad8:	cbz	x26, d7c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x78c>
     adc:	ubfiz	x3, x23, #4, #32
     ae0:	str	x3, [sp, #104]
     ae4:	add	x23, x26, x3
     ae8:	cbnz	w2, f00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x910>
     aec:	ubfiz	x1, x1, #4, #32
     af0:	add	x1, x0, x1
     af4:	cmp	x0, x1
     af8:	b.eq	b0c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x51c>  // b.none
     afc:	nop
     b00:	str	w27, [x0], #16
     b04:	cmp	x1, x0
     b08:	b.ne	b00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x510>  // b.any
     b0c:	mov	x27, x26
     b10:	mov	w28, #0x25                  	// #37
     b14:	b	b24 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x534>
     b18:	add	x27, x27, #0x10
     b1c:	cmp	x23, x27
     b20:	b.eq	c34 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x644>  // b.none
     b24:	ldr	w0, [x27]
     b28:	cmn	w0, #0x3
     b2c:	b.hi	b18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x528>  // b.pmore
     b30:	ldr	w1, [x22, #56]
     b34:	cbz	w1, f20 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x930>
     b38:	mul	w2, w0, w28
     b3c:	sub	w1, w1, #0x1
     b40:	ldr	x5, [x22, #40]
     b44:	and	w4, w2, w1
     b48:	and	w2, w2, w1
     b4c:	lsl	x4, x4, #4
     b50:	add	x6, x5, x4
     b54:	ldr	w4, [x5, x4]
     b58:	cmp	w0, w4
     b5c:	b.eq	9c8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3d8>  // b.none
     b60:	mov	w8, #0x1                   	// #1
     b64:	mov	x7, #0x0                   	// #0
     b68:	cmn	w4, #0x1
     b6c:	b.ne	e38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x848>  // b.any
     b70:	cmp	x7, #0x0
     b74:	csel	x7, x7, x6, ne  // ne = any
     b78:	ldr	x1, [x27, #8]
     b7c:	str	w0, [x7]
     b80:	ldr	w0, [x22, #48]
     b84:	str	xzr, [x27, #8]
     b88:	str	x1, [x7, #8]
     b8c:	add	w0, w0, #0x1
     b90:	ldr	x1, [x27, #8]
     b94:	str	w0, [x22, #48]
     b98:	cbz	x1, b18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x528>
     b9c:	ldr	x0, [x1, #24]
     ba0:	add	x2, x1, #0x28
     ba4:	cmp	x0, x2
     ba8:	b.eq	bb8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5c8>  // b.none
     bac:	str	x1, [sp, #96]
     bb0:	bl	0 <free>
     bb4:	ldr	x1, [sp, #96]
     bb8:	mov	x0, x1
     bbc:	mov	x1, #0x68                  	// #104
     bc0:	bl	0 <_ZdlPvm>
     bc4:	b	b18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x528>
     bc8:	mov	x1, x23
     bcc:	mov	x0, x26
     bd0:	bl	0 <_ZdlPvm>
     bd4:	ldr	w1, [x22, #56]
     bd8:	ldr	x0, [x22, #40]
     bdc:	cbz	w1, c90 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6a0>
     be0:	cmn	w24, #0x3
     be4:	b.hi	e18 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x828>  // b.pmore
     be8:	mov	w2, #0x25                  	// #37
     bec:	sub	w1, w1, #0x1
     bf0:	ldr	w3, [x22, #48]
     bf4:	mul	w2, w24, w2
     bf8:	add	w3, w3, #0x1
     bfc:	and	w5, w2, w1
     c00:	and	w4, w2, w1
     c04:	lsl	x5, x5, #4
     c08:	add	x2, x0, x5
     c0c:	ldr	w5, [x0, x5]
     c10:	cmp	w24, w5
     c14:	b.eq	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>  // b.none
     c18:	mov	w7, #0x1                   	// #1
     c1c:	mov	x6, #0x0                   	// #0
     c20:	cmn	w5, #0x1
     c24:	b.ne	e98 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x8a8>  // b.any
     c28:	cmp	x6, #0x0
     c2c:	csel	x2, x2, x6, eq  // eq = none
     c30:	b	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>
     c34:	ldr	x1, [sp, #104]
     c38:	mov	x0, x26
     c3c:	bl	0 <_ZdlPvm>
     c40:	ldr	w1, [x22, #56]
     c44:	ldr	x0, [x22, #40]
     c48:	cbz	w1, c90 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6a0>
     c4c:	sub	w1, w1, #0x1
     c50:	ldr	w3, [x22, #48]
     c54:	and	w4, w25, w1
     c58:	and	w25, w25, w1
     c5c:	add	w3, w3, #0x1
     c60:	lsl	x4, x4, #4
     c64:	add	x2, x0, x4
     c68:	ldr	w4, [x0, x4]
     c6c:	cmp	w24, w4
     c70:	b.eq	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>  // b.none
     c74:	mov	w6, #0x1                   	// #1
     c78:	mov	x5, #0x0                   	// #0
     c7c:	cmn	w4, #0x1
     c80:	b.ne	ecc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x8dc>  // b.any
     c84:	cmp	x5, #0x0
     c88:	csel	x2, x2, x5, eq  // eq = none
     c8c:	b	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>
     c90:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c94:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c98:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c9c:	add	x3, x3, #0x0
     ca0:	add	x1, x1, #0x0
     ca4:	add	x0, x0, #0x0
     ca8:	mov	w2, #0x22f                 	// #559
     cac:	bl	0 <__assert_fail>
     cb0:	mov	w6, #0x1                   	// #1
     cb4:	cmn	w5, #0x1
     cb8:	b.eq	710 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>  // b.none
     cbc:	add	w1, w1, w6
     cc0:	add	w6, w6, #0x1
     cc4:	and	w5, w4, w1
     cc8:	and	w1, w4, w1
     ccc:	lsl	x5, x5, #4
     cd0:	add	x7, x3, x5
     cd4:	ldr	w5, [x3, x5]
     cd8:	cmp	w2, w5
     cdc:	b.eq	770 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x180>  // b.none
     ce0:	b	cb4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6c4>
     ce4:	mov	w7, #0x1                   	// #1
     ce8:	mov	x6, #0x0                   	// #0
     cec:	cmn	w3, #0x1
     cf0:	b.ne	de4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x7f4>  // b.any
     cf4:	cmp	x6, #0x0
     cf8:	csel	x6, x6, x5, ne  // ne = any
     cfc:	ldr	x1, [x25, #8]
     d00:	str	w0, [x6]
     d04:	ldr	w0, [x22, #48]
     d08:	str	xzr, [x25, #8]
     d0c:	str	x1, [x6, #8]
     d10:	add	w0, w0, #0x1
     d14:	ldr	x1, [x25, #8]
     d18:	str	w0, [x22, #48]
     d1c:	cbz	x1, 980 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x390>
     d20:	ldr	x0, [x1, #24]
     d24:	add	x2, x1, #0x28
     d28:	cmp	x0, x2
     d2c:	b.eq	d3c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x74c>  // b.none
     d30:	str	x1, [sp, #96]
     d34:	bl	0 <free>
     d38:	ldr	x1, [sp, #96]
     d3c:	mov	x0, x1
     d40:	mov	x1, #0x68                  	// #104
     d44:	bl	0 <_ZdlPvm>
     d48:	b	980 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x390>
     d4c:	cbnz	w2, f00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x910>
     d50:	ubfiz	x2, x1, #4, #32
     d54:	add	x2, x0, x2
     d58:	cmp	x0, x2
     d5c:	b.eq	bdc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5ec>  // b.none
     d60:	mov	x1, x0
     d64:	mov	w3, #0xffffffff            	// #-1
     d68:	str	w3, [x1], #16
     d6c:	cmp	x2, x1
     d70:	b.ne	d68 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x778>  // b.any
     d74:	ldr	w1, [x22, #56]
     d78:	b	bdc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5ec>
     d7c:	cbnz	w2, f00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x910>
     d80:	ubfiz	x2, x1, #4, #32
     d84:	add	x2, x0, x2
     d88:	cmp	x0, x2
     d8c:	b.eq	c48 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x658>  // b.none
     d90:	mov	x1, x0
     d94:	nop
     d98:	str	w27, [x1], #16
     d9c:	cmp	x2, x1
     da0:	b.ne	d98 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x7a8>  // b.any
     da4:	ldr	w1, [x22, #56]
     da8:	b	c48 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x658>
     dac:	add	w3, w3, w0
     db0:	cmp	x2, #0x0
     db4:	and	w5, w1, w3
     db8:	ccmn	w27, #0x2, #0x0, eq  // eq = none
     dbc:	csel	x4, x4, x2, eq  // eq = none
     dc0:	add	w0, w0, #0x1
     dc4:	lsl	x2, x5, #4
     dc8:	and	w3, w1, w3
     dcc:	add	x5, x26, x2
     dd0:	ldr	w27, [x26, x2]
     dd4:	cmp	w24, w27
     dd8:	b.ne	e6c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x87c>  // b.any
     ddc:	ldr	x0, [x5, #8]
     de0:	b	6b0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc0>
     de4:	add	w2, w7, w2
     de8:	cmp	x6, #0x0
     dec:	and	w8, w1, w2
     df0:	ccmn	w3, #0x2, #0x0, eq  // eq = none
     df4:	csel	x6, x6, x5, ne  // ne = any
     df8:	add	w7, w7, #0x1
     dfc:	lsl	x3, x8, #4
     e00:	and	w2, w1, w2
     e04:	add	x5, x4, x8, lsl #4
     e08:	ldr	w3, [x4, x3]
     e0c:	cmp	w0, w3
     e10:	b.eq	9c8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3d8>  // b.none
     e14:	b	cec <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6fc>
     e18:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e1c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e20:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e24:	add	x3, x3, #0x0
     e28:	add	x1, x1, #0x0
     e2c:	add	x0, x0, #0x0
     e30:	mov	w2, #0x250                 	// #592
     e34:	bl	0 <__assert_fail>
     e38:	add	w2, w2, w8
     e3c:	cmp	x7, #0x0
     e40:	and	w9, w1, w2
     e44:	ccmn	w4, #0x2, #0x0, eq  // eq = none
     e48:	csel	x7, x7, x6, ne  // ne = any
     e4c:	add	w8, w8, #0x1
     e50:	lsl	x4, x9, #4
     e54:	and	w2, w1, w2
     e58:	add	x6, x5, x9, lsl #4
     e5c:	ldr	w4, [x5, x4]
     e60:	cmp	w0, w4
     e64:	b.eq	9c8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3d8>  // b.none
     e68:	b	b68 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x578>
     e6c:	mov	x2, x4
     e70:	mov	x4, x5
     e74:	b	a1c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x42c>
     e78:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e7c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e80:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e84:	add	x3, x3, #0x0
     e88:	add	x1, x1, #0x0
     e8c:	add	x0, x0, #0x0
     e90:	mov	w2, #0x68                  	// #104
     e94:	bl	0 <__assert_fail>
     e98:	add	w4, w4, w7
     e9c:	cmp	x6, #0x0
     ea0:	and	w8, w1, w4
     ea4:	ccmn	w5, #0x2, #0x0, eq  // eq = none
     ea8:	csel	x6, x6, x2, ne  // ne = any
     eac:	add	w7, w7, #0x1
     eb0:	lsl	x5, x8, #4
     eb4:	and	w4, w1, w4
     eb8:	add	x2, x0, x8, lsl #4
     ebc:	ldr	w5, [x0, x5]
     ec0:	cmp	w24, w5
     ec4:	b.eq	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>  // b.none
     ec8:	b	c20 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x630>
     ecc:	add	w25, w6, w25
     ed0:	cmp	x5, #0x0
     ed4:	and	w7, w1, w25
     ed8:	ccmn	w4, #0x2, #0x0, eq  // eq = none
     edc:	csel	x5, x5, x2, ne  // ne = any
     ee0:	add	w6, w6, #0x1
     ee4:	lsl	x4, x7, #4
     ee8:	and	w25, w1, w25
     eec:	add	x2, x0, x7, lsl #4
     ef0:	ldr	w4, [x0, x4]
     ef4:	cmp	w24, w4
     ef8:	b.eq	a64 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x474>  // b.none
     efc:	b	c7c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x68c>
     f00:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f04:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f08:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f0c:	add	x3, x3, #0x0
     f10:	add	x1, x1, #0x0
     f14:	add	x0, x0, #0x0
     f18:	mov	w2, #0x15b                 	// #347
     f1c:	bl	0 <__assert_fail>
     f20:	mov	x0, #0x0                   	// #0
     f24:	str	wzr, [x0]
     f28:	brk	#0x3e8
     f2c:	nop

0000000000000f30 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
     f30:	stp	x29, x30, [sp, #-64]!
     f34:	mov	x29, sp
     f38:	stp	x19, x20, [sp, #16]
     f3c:	mov	x20, x1
     f40:	ldr	w1, [x1, #8]
     f44:	stp	x21, x22, [sp, #32]
     f48:	mov	x21, x0
     f4c:	ldp	x19, x22, [x0, #80]
     f50:	ldr	w0, [x20, #12]
     f54:	str	x23, [sp, #48]
     f58:	sub	x0, x0, x1
     f5c:	sub	x2, x22, x19
     f60:	cmp	x0, x2, asr #4
     f64:	asr	x23, x2, #4
     f68:	b.cc	fd0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>  // b.lo, b.ul, b.last
     f6c:	ldr	x0, [x20]
     f70:	cmp	x22, x19
     f74:	add	x0, x0, x1, lsl #4
     f78:	b.eq	fa4 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.none
     f7c:	mov	x2, x19
     f80:	ldr	w3, [x2]
     f84:	add	x2, x2, #0x10
     f88:	ldur	x1, [x2, #-8]
     f8c:	str	w3, [x0]
     f90:	str	x1, [x0, #8]
     f94:	cmp	x22, x2
     f98:	add	x0, x0, #0x10
     f9c:	b.ne	f80 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x50>  // b.any
     fa0:	ldr	w1, [x20, #8]
     fa4:	ldr	w0, [x20, #12]
     fa8:	add	x1, x1, x23
     fac:	cmp	x1, x0
     fb0:	b.hi	fe4 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>  // b.pmore
     fb4:	ldr	x23, [sp, #48]
     fb8:	ldr	x0, [x21, #128]
     fbc:	ldp	x21, x22, [sp, #32]
     fc0:	str	w1, [x20, #8]
     fc4:	ldp	x19, x20, [sp, #16]
     fc8:	ldp	x29, x30, [sp], #64
     fcc:	ret
     fd0:	add	x1, x1, x23
     fd4:	mov	x0, x20
     fd8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     fdc:	ldr	w1, [x20, #8]
     fe0:	b	f6c <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x3c>
     fe4:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     fe8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     fec:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     ff0:	add	x3, x3, #0x0
     ff4:	add	x1, x1, #0x0
     ff8:	add	x0, x0, #0x0
     ffc:	mov	w2, #0x43                  	// #67
    1000:	bl	0 <__assert_fail>
    1004:	nop

0000000000001008 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
    1008:	stp	x29, x30, [sp, #-80]!
    100c:	mov	x29, sp
    1010:	stp	x21, x22, [sp, #32]
    1014:	mov	x21, x0
    1018:	ldr	w22, [x0, #136]
    101c:	ldr	x0, [x0, #64]
    1020:	stp	x19, x20, [sp, #16]
    1024:	ldr	x19, [x21, #56]
    1028:	sub	x22, x0, x22, lsl #4
    102c:	cmp	x19, x22
    1030:	b.eq	11cc <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1c4>  // b.none
    1034:	stp	x23, x24, [sp, #48]
    1038:	mov	x24, x1
    103c:	mov	x23, x2
    1040:	str	x25, [sp, #64]
    1044:	mov	w25, #0x25                  	// #37
    1048:	ldr	x20, [x19, #8]
    104c:	ldr	x0, [x21, #24]
    1050:	ldr	x1, [x20]
    1054:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
    1058:	cbnz	x0, 11b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1b0>
    105c:	ldr	x0, [x20]
    1060:	ldrb	w1, [x0, #324]
    1064:	cbnz	w1, 1070 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x68>
    1068:	ldrb	w0, [x0, #325]
    106c:	cbz	w0, 1168 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>
    1070:	ldr	x0, [x19, #8]
    1074:	ldr	w4, [x0, #796]
    1078:	cbnz	w4, 109c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x94>
    107c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1080:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1084:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1088:	add	x3, x3, #0x0
    108c:	add	x1, x1, #0x0
    1090:	add	x0, x0, #0x0
    1094:	mov	w2, #0x117                 	// #279
    1098:	bl	0 <__assert_fail>
    109c:	ldr	x1, [x21, #8]
    10a0:	ldr	w0, [x1, #56]
    10a4:	ldr	x1, [x1, #40]
    10a8:	cbz	w0, 107c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>
    10ac:	cmn	w4, #0x3
    10b0:	b.hi	1298 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x290>  // b.pmore
    10b4:	mul	w3, w4, w25
    10b8:	sub	w2, w0, #0x1
    10bc:	and	w5, w3, w2
    10c0:	and	w3, w3, w2
    10c4:	lsl	x5, x5, #4
    10c8:	add	x7, x1, x5
    10cc:	ldr	w5, [x1, x5]
    10d0:	cmp	w4, w5
    10d4:	b.ne	1218 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x210>  // b.any
    10d8:	ubfiz	x0, x0, #4, #32
    10dc:	add	x6, x1, x0
    10e0:	cmp	x7, x6
    10e4:	b.eq	107c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>  // b.none
    10e8:	mul	w0, w4, w25
    10ec:	and	w3, w0, w2
    10f0:	and	w0, w0, w2
    10f4:	lsl	x3, x3, #4
    10f8:	add	x5, x1, x3
    10fc:	ldr	w3, [x1, x3]
    1100:	cmp	w4, w3
    1104:	b.ne	11dc <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1d4>  // b.any
    1108:	ldr	x1, [x5, #8]
    110c:	ldr	w0, [x1, #4]
    1110:	cbz	w0, 1168 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>
    1114:	ldr	w2, [x1, #8]
    1118:	ldr	w1, [x1]
    111c:	add	w0, w0, w2
    1120:	cmp	w0, w1
    1124:	b.ne	1168 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>  // b.any
    1128:	ldp	w0, w1, [x23, #8]
    112c:	cmp	w0, w1
    1130:	b.cs	11f0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1e8>  // b.hs, b.nlast
    1134:	ldr	x1, [x23]
    1138:	ubfiz	x0, x0, #4, #32
    113c:	ldp	x2, x3, [x19]
    1140:	add	x0, x1, x0
    1144:	stp	x2, x3, [x0]
    1148:	ldp	w0, w2, [x23, #8]
    114c:	mov	w1, w0
    1150:	add	x1, x1, #0x1
    1154:	cmp	x1, x2
    1158:	b.hi	12b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x2b0>  // b.pmore
    115c:	add	w0, w0, #0x1
    1160:	str	w0, [x23, #8]
    1164:	cbz	w0, 124c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x244>
    1168:	ldr	w0, [x20, #784]
    116c:	cmp	w0, #0x2
    1170:	b.ne	11b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1b0>  // b.any
    1174:	ldp	w0, w1, [x24, #8]
    1178:	cmp	w0, w1
    117c:	b.cs	1204 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1fc>  // b.hs, b.nlast
    1180:	ldr	x1, [x24]
    1184:	ubfiz	x0, x0, #4, #32
    1188:	ldp	x2, x3, [x19]
    118c:	add	x0, x1, x0
    1190:	stp	x2, x3, [x0]
    1194:	ldp	w0, w2, [x24, #8]
    1198:	mov	w1, w0
    119c:	add	x1, x1, #0x1
    11a0:	cmp	x1, x2
    11a4:	b.hi	12b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x2b0>  // b.pmore
    11a8:	add	w0, w0, #0x1
    11ac:	str	w0, [x24, #8]
    11b0:	cbz	w0, 124c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x244>
    11b4:	nop
    11b8:	add	x19, x19, #0x10
    11bc:	cmp	x22, x19
    11c0:	b.ne	1048 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x40>  // b.any
    11c4:	ldp	x23, x24, [sp, #48]
    11c8:	ldr	x25, [sp, #64]
    11cc:	ldp	x19, x20, [sp, #16]
    11d0:	ldp	x21, x22, [sp, #32]
    11d4:	ldp	x29, x30, [sp], #80
    11d8:	ret
    11dc:	mov	w5, #0x1                   	// #1
    11e0:	cmn	w3, #0x1
    11e4:	b.ne	126c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x264>  // b.any
    11e8:	mov	x5, x6
    11ec:	b	1108 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>
    11f0:	mov	x0, x23
    11f4:	mov	x1, #0x0                   	// #0
    11f8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    11fc:	ldr	w0, [x23, #8]
    1200:	b	1134 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x12c>
    1204:	mov	x0, x24
    1208:	mov	x1, #0x0                   	// #0
    120c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1210:	ldr	w0, [x24, #8]
    1214:	b	1180 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x178>
    1218:	mov	w6, #0x1                   	// #1
    121c:	cmn	w5, #0x1
    1220:	b.eq	107c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>  // b.none
    1224:	add	w3, w6, w3
    1228:	add	w6, w6, #0x1
    122c:	and	w5, w2, w3
    1230:	and	w3, w2, w3
    1234:	lsl	x5, x5, #4
    1238:	add	x7, x1, x5
    123c:	ldr	w5, [x1, x5]
    1240:	cmp	w4, w5
    1244:	b.eq	10d8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xd0>  // b.none
    1248:	b	121c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x214>
    124c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1250:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1254:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1258:	add	x3, x3, #0x0
    125c:	add	x1, x1, #0x0
    1260:	add	x0, x0, #0x0
    1264:	mov	w2, #0xa7                  	// #167
    1268:	bl	0 <__assert_fail>
    126c:	add	w0, w0, w5
    1270:	add	w7, w5, #0x1
    1274:	and	w3, w2, w0
    1278:	and	w0, w2, w0
    127c:	lsl	x3, x3, #4
    1280:	add	x5, x1, x3
    1284:	ldr	w3, [x1, x3]
    1288:	cmp	w4, w3
    128c:	b.eq	1108 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>  // b.none
    1290:	mov	w5, w7
    1294:	b	11e0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1d8>
    1298:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    129c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12a0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12a4:	add	x3, x3, #0x0
    12a8:	add	x1, x1, #0x0
    12ac:	add	x0, x0, #0x0
    12b0:	mov	w2, #0x250                 	// #592
    12b4:	bl	0 <__assert_fail>
    12b8:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12bc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12c0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12c4:	add	x3, x3, #0x0
    12c8:	add	x1, x1, #0x0
    12cc:	add	x0, x0, #0x0
    12d0:	mov	w2, #0x43                  	// #67
    12d4:	bl	0 <__assert_fail>

00000000000012d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    12d8:	stp	x29, x30, [sp, #-96]!
    12dc:	mov	x29, sp
    12e0:	stp	x19, x20, [sp, #16]
    12e4:	stp	x21, x22, [sp, #32]
    12e8:	ldp	x19, x22, [x0, #32]
    12ec:	cmp	x19, x22
    12f0:	b.eq	16a4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3cc>  // b.none
    12f4:	stp	x23, x24, [sp, #48]
    12f8:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    12fc:	mov	x23, x0
    1300:	ldr	x24, [x24]
    1304:	mov	x20, x1
    1308:	mov	w21, #0x0                   	// #0
    130c:	stp	x25, x26, [sp, #64]
    1310:	adrp	x26, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1314:	mov	w25, #0x25                  	// #37
    1318:	add	x26, x26, #0x0
    131c:	str	x27, [sp, #80]
    1320:	b	13b4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>
    1324:	ldrb	w0, [x0, #325]
    1328:	cbnz	w0, 13d4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xfc>
    132c:	ldrb	w0, [x24]
    1330:	cbnz	w0, 1400 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x128>
    1334:	ldp	w0, w1, [x20, #8]
    1338:	cmp	w0, w1
    133c:	b.cs	1490 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>  // b.hs, b.nlast
    1340:	ldr	x1, [x20]
    1344:	ubfiz	x0, x0, #4, #32
    1348:	ldp	x2, x3, [x19]
    134c:	add	x0, x1, x0
    1350:	stp	x2, x3, [x0]
    1354:	ldp	w0, w2, [x20, #8]
    1358:	mov	w1, w0
    135c:	add	x1, x1, #0x1
    1360:	cmp	x1, x2
    1364:	b.hi	1718 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x440>  // b.pmore
    1368:	add	w0, w0, #0x1
    136c:	str	w0, [x20, #8]
    1370:	cbz	w0, 16f8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x420>
    1374:	add	w21, w21, #0x1
    1378:	mov	x1, x19
    137c:	add	x0, x23, #0x38
    1380:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1384:	ubfiz	x2, x21, #4, #32
    1388:	ldr	w0, [x19]
    138c:	sub	x2, x22, x2
    1390:	cmp	x22, x19
    1394:	ldr	w3, [x2]
    1398:	str	xzr, [x19, #8]
    139c:	ldr	x1, [x2, #8]
    13a0:	str	w3, [x19]
    13a4:	str	x1, [x19, #8]
    13a8:	str	w0, [x2]
    13ac:	str	xzr, [x2, #8]
    13b0:	b.eq	1538 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x260>  // b.none
    13b4:	ldr	x27, [x19, #8]
    13b8:	cbz	x27, 1538 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x260>
    13bc:	ldr	w0, [x27, #784]
    13c0:	cmp	w0, #0x1
    13c4:	b.eq	1598 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2c0>  // b.none
    13c8:	ldr	x0, [x27]
    13cc:	ldrb	w1, [x0, #324]
    13d0:	cbz	w1, 1324 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x4c>
    13d4:	ldr	x0, [x19, #8]
    13d8:	ldr	w1, [x0, #796]
    13dc:	cbnz	w1, 14a4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1cc>
    13e0:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13e4:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13e8:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13ec:	add	x3, x3, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x0, x0, #0x0
    13f8:	mov	w2, #0x117                 	// #279
    13fc:	bl	0 <__assert_fail>
    1400:	mov	x0, x26
    1404:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1408:	tst	w0, #0xff
    140c:	b.eq	1334 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>  // b.none
    1410:	bl	0 <_ZN4llvm4dbgsEv>
    1414:	mov	x27, x0
    1418:	ldp	x1, x2, [x0, #16]
    141c:	sub	x1, x1, x2
    1420:	cmp	x1, #0x19
    1424:	b.ls	15e4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x30c>  // b.plast
    1428:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    142c:	add	x3, x3, #0x0
    1430:	ldp	x0, x1, [x3]
    1434:	stp	x0, x1, [x2]
    1438:	ldrh	w0, [x3, #24]
    143c:	ldr	x1, [x3, #16]
    1440:	str	x1, [x2, #16]
    1444:	strh	w0, [x2, #24]
    1448:	ldr	x0, [x27, #24]
    144c:	ldr	w1, [x19]
    1450:	add	x0, x0, #0x1a
    1454:	str	x0, [x27, #24]
    1458:	mov	x0, x27
    145c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1460:	ldp	x0, x1, [x27, #16]
    1464:	sub	x0, x0, x1
    1468:	cmp	x0, #0x1d
    146c:	b.hi	1614 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x33c>  // b.pmore
    1470:	mov	x0, x27
    1474:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1478:	mov	x2, #0x1e                  	// #30
    147c:	add	x1, x1, #0x0
    1480:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1484:	ldp	w0, w1, [x20, #8]
    1488:	cmp	w0, w1
    148c:	b.cc	1340 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>  // b.lo, b.ul, b.last
    1490:	mov	x0, x20
    1494:	mov	x1, #0x0                   	// #0
    1498:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    149c:	ldr	w0, [x20, #8]
    14a0:	b	1340 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    14a4:	ldr	x2, [x23, #8]
    14a8:	ldr	w0, [x2, #56]
    14ac:	ldr	x3, [x2, #40]
    14b0:	cbz	w0, 13e0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>
    14b4:	cmn	w1, #0x3
    14b8:	b.hi	16d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x400>  // b.pmore
    14bc:	mul	w2, w1, w25
    14c0:	sub	w4, w0, #0x1
    14c4:	and	w5, w2, w4
    14c8:	and	w2, w2, w4
    14cc:	lsl	x5, x5, #4
    14d0:	add	x7, x3, x5
    14d4:	ldr	w5, [x3, x5]
    14d8:	cmp	w1, w5
    14dc:	b.ne	1670 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x398>  // b.any
    14e0:	ubfiz	x0, x0, #4, #32
    14e4:	add	x6, x3, x0
    14e8:	cmp	x6, x7
    14ec:	b.eq	13e0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.none
    14f0:	mul	w2, w1, w25
    14f4:	and	w0, w2, w4
    14f8:	and	w2, w2, w4
    14fc:	lsl	x0, x0, #4
    1500:	add	x5, x3, x0
    1504:	ldr	w0, [x3, x0]
    1508:	cmp	w1, w0
    150c:	b.ne	15b0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2d8>  // b.any
    1510:	ldr	x1, [x5, #8]
    1514:	ldp	w0, w2, [x1, #4]
    1518:	ldr	w1, [x1]
    151c:	add	w0, w0, w2
    1520:	cmp	w1, w0
    1524:	b.ls	132c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.plast
    1528:	add	x19, x19, #0x10
    152c:	cmp	x22, x19
    1530:	b.ne	13b4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>  // b.any
    1534:	nop
    1538:	ldp	x4, x3, [x23, #32]
    153c:	mov	w1, w21
    1540:	sub	x0, x3, x4
    1544:	asr	x0, x0, #4
    1548:	subs	x2, x0, x1
    154c:	cmp	x0, x1
    1550:	cset	x5, cc  // cc = lo, ul, last
    1554:	cmp	w21, #0x0
    1558:	cset	w19, ne  // ne = any
    155c:	cbnz	x5, 1644 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x36c>
    1560:	cmp	x2, x0
    1564:	b.cs	15c4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>  // b.hs, b.nlast
    1568:	add	x2, x4, x2, lsl #4
    156c:	cmp	x3, x2
    1570:	b.eq	15c4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>  // b.none
    1574:	ldp	x25, x26, [sp, #64]
    1578:	ldr	x27, [sp, #80]
    157c:	str	x2, [x23, #40]
    1580:	ldp	x23, x24, [sp, #48]
    1584:	mov	w0, w19
    1588:	ldp	x19, x20, [sp, #16]
    158c:	ldp	x21, x22, [sp, #32]
    1590:	ldp	x29, x30, [sp], #96
    1594:	ret
    1598:	mov	x0, x27
    159c:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
    15a0:	tst	w0, #0xff
    15a4:	b.ne	13c8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf0>  // b.any
    15a8:	add	x19, x19, #0x10
    15ac:	b	152c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x254>
    15b0:	mov	w5, #0x1                   	// #1
    15b4:	cmn	w0, #0x1
    15b8:	b.ne	16ac <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3d4>  // b.any
    15bc:	mov	x5, x6
    15c0:	b	1510 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>
    15c4:	mov	w0, w19
    15c8:	ldp	x19, x20, [sp, #16]
    15cc:	ldp	x21, x22, [sp, #32]
    15d0:	ldp	x23, x24, [sp, #48]
    15d4:	ldp	x25, x26, [sp, #64]
    15d8:	ldr	x27, [sp, #80]
    15dc:	ldp	x29, x30, [sp], #96
    15e0:	ret
    15e4:	mov	x2, #0x1a                  	// #26
    15e8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    15ec:	add	x1, x1, #0x0
    15f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    15f4:	ldr	w1, [x19]
    15f8:	mov	x27, x0
    15fc:	mov	x0, x27
    1600:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1604:	ldp	x0, x1, [x27, #16]
    1608:	sub	x0, x0, x1
    160c:	cmp	x0, #0x1d
    1610:	b.ls	1470 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x198>  // b.plast
    1614:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1618:	add	x0, x0, #0x0
    161c:	ldr	x2, [x0, #16]
    1620:	str	x2, [x1, #16]
    1624:	ldp	x2, x3, [x0]
    1628:	stp	x2, x3, [x1]
    162c:	ldur	x0, [x0, #22]
    1630:	stur	x0, [x1, #22]
    1634:	ldr	x0, [x27, #24]
    1638:	add	x0, x0, #0x1e
    163c:	str	x0, [x27, #24]
    1640:	b	1334 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>
    1644:	add	x0, x23, #0x20
    1648:	neg	x1, x1
    164c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1650:	mov	w0, w19
    1654:	ldp	x19, x20, [sp, #16]
    1658:	ldp	x21, x22, [sp, #32]
    165c:	ldp	x23, x24, [sp, #48]
    1660:	ldp	x25, x26, [sp, #64]
    1664:	ldr	x27, [sp, #80]
    1668:	ldp	x29, x30, [sp], #96
    166c:	ret
    1670:	mov	w6, #0x1                   	// #1
    1674:	cmn	w5, #0x1
    1678:	b.eq	13e0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.none
    167c:	add	w2, w2, w6
    1680:	add	w6, w6, #0x1
    1684:	and	w5, w4, w2
    1688:	and	w2, w4, w2
    168c:	lsl	x5, x5, #4
    1690:	add	x7, x3, x5
    1694:	ldr	w5, [x3, x5]
    1698:	cmp	w1, w5
    169c:	b.eq	14e0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x208>  // b.none
    16a0:	b	1674 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x39c>
    16a4:	mov	w19, #0x0                   	// #0
    16a8:	b	1584 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ac>
    16ac:	add	w2, w5, w2
    16b0:	add	w7, w5, #0x1
    16b4:	and	w0, w4, w2
    16b8:	and	w2, w4, w2
    16bc:	lsl	x0, x0, #4
    16c0:	add	x5, x3, x0
    16c4:	ldr	w0, [x3, x0]
    16c8:	cmp	w1, w0
    16cc:	b.eq	1510 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>  // b.none
    16d0:	mov	w5, w7
    16d4:	b	15b4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2dc>
    16d8:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    16dc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    16e0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    16e4:	add	x3, x3, #0x0
    16e8:	add	x1, x1, #0x0
    16ec:	add	x0, x0, #0x0
    16f0:	mov	w2, #0x250                 	// #592
    16f4:	bl	0 <__assert_fail>
    16f8:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    16fc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1700:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1704:	add	x3, x3, #0x0
    1708:	add	x1, x1, #0x0
    170c:	add	x0, x0, #0x0
    1710:	mov	w2, #0xa7                  	// #167
    1714:	bl	0 <__assert_fail>
    1718:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    171c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1720:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1724:	add	x3, x3, #0x0
    1728:	add	x1, x1, #0x0
    172c:	add	x0, x0, #0x0
    1730:	mov	w2, #0x43                  	// #67
    1734:	bl	0 <__assert_fail>

0000000000001738 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    1738:	stp	x29, x30, [sp, #-96]!
    173c:	mov	x29, sp
    1740:	stp	x19, x20, [sp, #16]
    1744:	stp	x25, x26, [sp, #64]
    1748:	ldp	x19, x26, [x0, #104]
    174c:	cmp	x19, x26
    1750:	b.eq	1890 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x158>  // b.none
    1754:	stp	x21, x22, [sp, #32]
    1758:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    175c:	mov	x21, x0
    1760:	ldr	x22, [x22]
    1764:	mov	x20, x1
    1768:	stp	x23, x24, [sp, #48]
    176c:	adrp	x23, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1770:	add	x23, x23, #0x0
    1774:	mov	x25, #0x0                   	// #0
    1778:	adrp	x24, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    177c:	nop
    1780:	ldr	x1, [x19, #8]
    1784:	cbz	x1, 17a8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x70>
    1788:	ldr	w0, [x1, #784]
    178c:	cmp	w0, #0x5
    1790:	b.eq	18a0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x168>  // b.none
    1794:	ldrb	w0, [x22]
    1798:	cbnz	w0, 17ec <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>
    179c:	add	x19, x19, #0x10
    17a0:	cmp	x19, x26
    17a4:	b.ne	1780 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x48>  // b.any
    17a8:	ldp	x3, x2, [x21, #104]
    17ac:	sub	x0, x2, x3
    17b0:	asr	x0, x0, #4
    17b4:	subs	x1, x0, x25
    17b8:	b.cc	19c8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x290>  // b.lo, b.ul, b.last
    17bc:	cmp	x1, x0
    17c0:	b.cs	1888 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.hs, b.nlast
    17c4:	add	x1, x3, x1, lsl #4
    17c8:	cmp	x2, x1
    17cc:	b.eq	1888 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.none
    17d0:	ldp	x23, x24, [sp, #48]
    17d4:	str	x1, [x21, #112]
    17d8:	ldp	x19, x20, [sp, #16]
    17dc:	ldp	x21, x22, [sp, #32]
    17e0:	ldp	x25, x26, [sp, #64]
    17e4:	ldp	x29, x30, [sp], #96
    17e8:	ret
    17ec:	mov	x0, x23
    17f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    17f4:	tst	w0, #0xff
    17f8:	b.eq	179c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>  // b.none
    17fc:	str	x27, [sp, #80]
    1800:	bl	0 <_ZN4llvm4dbgsEv>
    1804:	ldp	x1, x2, [x0, #16]
    1808:	mov	x27, x0
    180c:	sub	x1, x1, x2
    1810:	cmp	x1, #0x19
    1814:	b.ls	1938 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x200>  // b.plast
    1818:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    181c:	add	x3, x3, #0x0
    1820:	ldp	x0, x1, [x3]
    1824:	stp	x0, x1, [x2]
    1828:	ldrh	w0, [x3, #24]
    182c:	ldr	x1, [x3, #16]
    1830:	str	x1, [x2, #16]
    1834:	strh	w0, [x2, #24]
    1838:	ldr	x0, [x27, #24]
    183c:	ldr	w1, [x19]
    1840:	add	x0, x0, #0x1a
    1844:	str	x0, [x27, #24]
    1848:	mov	x0, x27
    184c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1850:	ldp	x0, x2, [x27, #16]
    1854:	sub	x0, x0, x2
    1858:	cmp	x0, #0x14
    185c:	b.ls	1968 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x230>  // b.plast
    1860:	add	x3, x24, #0x0
    1864:	ldp	x0, x1, [x3]
    1868:	stp	x0, x1, [x2]
    186c:	ldur	x0, [x3, #13]
    1870:	stur	x0, [x2, #13]
    1874:	ldr	x0, [x27, #24]
    1878:	add	x0, x0, #0x15
    187c:	str	x0, [x27, #24]
    1880:	ldr	x27, [sp, #80]
    1884:	b	179c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>
    1888:	ldp	x21, x22, [sp, #32]
    188c:	ldp	x23, x24, [sp, #48]
    1890:	ldp	x19, x20, [sp, #16]
    1894:	ldp	x25, x26, [sp, #64]
    1898:	ldp	x29, x30, [sp], #96
    189c:	ret
    18a0:	ldr	x0, [x21, #8]
    18a4:	mov	x1, x19
    18a8:	ldr	x2, [x0]
    18ac:	ldr	x2, [x2, #32]
    18b0:	blr	x2
    18b4:	ldp	w0, w1, [x20, #8]
    18b8:	cmp	w0, w1
    18bc:	b.cs	1924 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1ec>  // b.hs, b.nlast
    18c0:	ldr	x1, [x20]
    18c4:	ubfiz	x0, x0, #4, #32
    18c8:	ldp	x2, x3, [x19]
    18cc:	add	x0, x1, x0
    18d0:	stp	x2, x3, [x0]
    18d4:	ldp	w1, w2, [x20, #8]
    18d8:	mov	w0, w1
    18dc:	add	x0, x0, #0x1
    18e0:	cmp	x0, x2
    18e4:	b.hi	1980 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x248>  // b.pmore
    18e8:	add	w1, w1, #0x1
    18ec:	str	w1, [x20, #8]
    18f0:	cbz	w1, 19a4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x26c>
    18f4:	add	w25, w25, #0x1
    18f8:	ldr	w0, [x19]
    18fc:	ubfiz	x2, x25, #4, #32
    1900:	sub	x2, x26, x2
    1904:	ldr	w3, [x2]
    1908:	str	xzr, [x19, #8]
    190c:	ldr	x1, [x2, #8]
    1910:	str	w3, [x19]
    1914:	str	x1, [x19, #8]
    1918:	str	w0, [x2]
    191c:	str	xzr, [x2, #8]
    1920:	b	17a0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    1924:	mov	x0, x20
    1928:	mov	x1, #0x0                   	// #0
    192c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1930:	ldr	w0, [x20, #8]
    1934:	b	18c0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
    1938:	mov	x2, #0x1a                  	// #26
    193c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1940:	add	x1, x1, #0x0
    1944:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1948:	ldr	w1, [x19]
    194c:	mov	x27, x0
    1950:	mov	x0, x27
    1954:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1958:	ldp	x0, x2, [x27, #16]
    195c:	sub	x0, x0, x2
    1960:	cmp	x0, #0x14
    1964:	b.hi	1860 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x128>  // b.pmore
    1968:	mov	x0, x27
    196c:	add	x1, x24, #0x0
    1970:	mov	x2, #0x15                  	// #21
    1974:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1978:	ldr	x27, [sp, #80]
    197c:	b	179c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>
    1980:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1984:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1988:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    198c:	add	x3, x3, #0x0
    1990:	add	x1, x1, #0x0
    1994:	add	x0, x0, #0x0
    1998:	mov	w2, #0x43                  	// #67
    199c:	str	x27, [sp, #80]
    19a0:	bl	0 <__assert_fail>
    19a4:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    19a8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    19ac:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    19b0:	add	x3, x3, #0x0
    19b4:	add	x1, x1, #0x0
    19b8:	add	x0, x0, #0x0
    19bc:	mov	w2, #0xa7                  	// #167
    19c0:	str	x27, [sp, #80]
    19c4:	bl	0 <__assert_fail>
    19c8:	neg	x1, x25
    19cc:	add	x0, x21, #0x68
    19d0:	ldp	x19, x20, [sp, #16]
    19d4:	ldp	x21, x22, [sp, #32]
    19d8:	ldp	x23, x24, [sp, #48]
    19dc:	ldp	x25, x26, [sp, #64]
    19e0:	ldp	x29, x30, [sp], #96
    19e4:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>

00000000000019e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    19e8:	stp	x29, x30, [sp, #-96]!
    19ec:	mov	x29, sp
    19f0:	stp	x19, x20, [sp, #16]
    19f4:	stp	x21, x22, [sp, #32]
    19f8:	ldp	x19, x22, [x0, #56]
    19fc:	cmp	x19, x22
    1a00:	b.eq	1d90 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3a8>  // b.none
    1a04:	stp	x25, x26, [sp, #64]
    1a08:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    1a0c:	adrp	x26, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1a10:	ldr	x25, [x25]
    1a14:	add	x26, x26, #0x0
    1a18:	mov	w21, #0x0                   	// #0
    1a1c:	stp	x23, x24, [sp, #48]
    1a20:	mov	x23, x0
    1a24:	mov	w24, #0x25                  	// #37
    1a28:	str	x27, [sp, #80]
    1a2c:	mov	x27, x1
    1a30:	b	1ac4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>
    1a34:	ldrb	w0, [x0, #325]
    1a38:	cbnz	w0, 1af4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x10c>
    1a3c:	ldrb	w0, [x25]
    1a40:	cbnz	w0, 1c0c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x224>
    1a44:	ldp	w0, w1, [x27, #8]
    1a48:	cmp	w0, w1
    1a4c:	b.cs	1cb8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2d0>  // b.hs, b.nlast
    1a50:	ldr	x1, [x27]
    1a54:	ubfiz	x0, x0, #4, #32
    1a58:	ldp	x2, x3, [x19]
    1a5c:	add	x0, x1, x0
    1a60:	stp	x2, x3, [x0]
    1a64:	ldp	w0, w2, [x27, #8]
    1a68:	mov	w1, w0
    1a6c:	add	x1, x1, #0x1
    1a70:	cmp	x1, x2
    1a74:	b.hi	1de4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3fc>  // b.pmore
    1a78:	add	w0, w0, #0x1
    1a7c:	str	w0, [x27, #8]
    1a80:	cbz	w0, 1e04 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x41c>
    1a84:	add	w21, w21, #0x1
    1a88:	mov	x1, x19
    1a8c:	add	x0, x23, #0x50
    1a90:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1a94:	ubfiz	x2, x21, #4, #32
    1a98:	ldr	w0, [x19]
    1a9c:	sub	x2, x22, x2
    1aa0:	cmp	x19, x22
    1aa4:	ldr	w3, [x2]
    1aa8:	str	xzr, [x19, #8]
    1aac:	ldr	x1, [x2, #8]
    1ab0:	str	w3, [x19]
    1ab4:	str	x1, [x19, #8]
    1ab8:	str	w0, [x2]
    1abc:	str	xzr, [x2, #8]
    1ac0:	b.eq	1bac <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>  // b.none
    1ac4:	ldr	x20, [x19, #8]
    1ac8:	cbz	x20, 1bac <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
    1acc:	ldr	w0, [x20, #784]
    1ad0:	cmp	w0, #0x3
    1ad4:	b.eq	1ae8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x100>  // b.none
    1ad8:	mov	x0, x20
    1adc:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
    1ae0:	tst	w0, #0xff
    1ae4:	b.eq	1ba0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>  // b.none
    1ae8:	ldr	x0, [x20]
    1aec:	ldrb	w1, [x0, #324]
    1af0:	cbz	w1, 1a34 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x4c>
    1af4:	ldr	x0, [x19, #8]
    1af8:	ldr	w1, [x0, #796]
    1afc:	cbnz	w1, 1b20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x138>
    1b00:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1b04:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1b08:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1b0c:	add	x3, x3, #0x0
    1b10:	add	x1, x1, #0x0
    1b14:	add	x0, x0, #0x0
    1b18:	mov	w2, #0x117                 	// #279
    1b1c:	bl	0 <__assert_fail>
    1b20:	ldr	x2, [x23, #8]
    1b24:	ldr	w0, [x2, #56]
    1b28:	ldr	x3, [x2, #40]
    1b2c:	cbz	w0, 1b00 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>
    1b30:	cmn	w1, #0x3
    1b34:	b.hi	1dc4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3dc>  // b.pmore
    1b38:	mul	w2, w1, w24
    1b3c:	sub	w4, w0, #0x1
    1b40:	and	w5, w2, w4
    1b44:	and	w2, w2, w4
    1b48:	lsl	x5, x5, #4
    1b4c:	add	x7, x3, x5
    1b50:	ldr	w5, [x3, x5]
    1b54:	cmp	w1, w5
    1b58:	b.ne	1d5c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x374>  // b.any
    1b5c:	ubfiz	x0, x0, #4, #32
    1b60:	add	x6, x3, x0
    1b64:	cmp	x6, x7
    1b68:	b.eq	1b00 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>  // b.none
    1b6c:	mul	w2, w1, w24
    1b70:	and	w0, w2, w4
    1b74:	and	w2, w2, w4
    1b78:	lsl	x0, x0, #4
    1b7c:	add	x5, x3, x0
    1b80:	ldr	w0, [x3, x0]
    1b84:	cmp	w1, w0
    1b88:	b.ne	1ccc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e4>  // b.any
    1b8c:	ldr	x0, [x5, #8]
    1b90:	ldr	w1, [x0]
    1b94:	ldr	w0, [x0, #8]
    1b98:	cmp	w1, w0
    1b9c:	b.eq	1a3c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.none
    1ba0:	add	x19, x19, #0x10
    1ba4:	cmp	x19, x22
    1ba8:	b.ne	1ac4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>  // b.any
    1bac:	ldp	x4, x3, [x23, #56]
    1bb0:	mov	w1, w21
    1bb4:	sub	x0, x3, x4
    1bb8:	asr	x0, x0, #4
    1bbc:	subs	x2, x0, x1
    1bc0:	cmp	x0, x1
    1bc4:	cset	x5, cc  // cc = lo, ul, last
    1bc8:	cmp	w21, #0x0
    1bcc:	cset	w19, ne  // ne = any
    1bd0:	cbnz	x5, 1d00 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x318>
    1bd4:	cmp	x2, x0
    1bd8:	b.cs	1ce0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2f8>  // b.hs, b.nlast
    1bdc:	add	x2, x4, x2, lsl #4
    1be0:	cmp	x3, x2
    1be4:	b.eq	1ce0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2f8>  // b.none
    1be8:	ldp	x25, x26, [sp, #64]
    1bec:	ldr	x27, [sp, #80]
    1bf0:	str	x2, [x23, #64]
    1bf4:	ldp	x23, x24, [sp, #48]
    1bf8:	mov	w0, w19
    1bfc:	ldp	x19, x20, [sp, #16]
    1c00:	ldp	x21, x22, [sp, #32]
    1c04:	ldp	x29, x30, [sp], #96
    1c08:	ret
    1c0c:	mov	x0, x26
    1c10:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1c14:	tst	w0, #0xff
    1c18:	b.eq	1a44 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>  // b.none
    1c1c:	bl	0 <_ZN4llvm4dbgsEv>
    1c20:	mov	x20, x0
    1c24:	ldp	x1, x2, [x0, #16]
    1c28:	sub	x1, x1, x2
    1c2c:	cmp	x1, #0x19
    1c30:	b.ls	1d44 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x35c>  // b.plast
    1c34:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1c38:	add	x3, x3, #0x0
    1c3c:	ldp	x0, x1, [x3]
    1c40:	stp	x0, x1, [x2]
    1c44:	ldrh	w0, [x3, #24]
    1c48:	ldr	x1, [x3, #16]
    1c4c:	str	x1, [x2, #16]
    1c50:	strh	w0, [x2, #24]
    1c54:	ldr	x0, [x20, #24]
    1c58:	add	x0, x0, #0x1a
    1c5c:	str	x0, [x20, #24]
    1c60:	ldr	w1, [x19]
    1c64:	mov	x0, x20
    1c68:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1c6c:	ldp	x0, x1, [x20, #16]
    1c70:	sub	x0, x0, x1
    1c74:	cmp	x0, #0x1b
    1c78:	b.ls	1d2c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x344>  // b.plast
    1c7c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1c80:	add	x0, x0, #0x0
    1c84:	ldp	x2, x3, [x0]
    1c88:	stp	x2, x3, [x1]
    1c8c:	ldr	w2, [x0, #24]
    1c90:	ldr	x0, [x0, #16]
    1c94:	str	x0, [x1, #16]
    1c98:	str	w2, [x1, #24]
    1c9c:	ldr	x0, [x20, #24]
    1ca0:	add	x0, x0, #0x1c
    1ca4:	str	x0, [x20, #24]
    1ca8:	ldp	w0, w1, [x27, #8]
    1cac:	cmp	w0, w1
    1cb0:	b.cc	1a50 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>  // b.lo, b.ul, b.last
    1cb4:	nop
    1cb8:	mov	x0, x27
    1cbc:	mov	x1, #0x0                   	// #0
    1cc0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1cc4:	ldr	w0, [x27, #8]
    1cc8:	b	1a50 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    1ccc:	mov	w5, #0x1                   	// #1
    1cd0:	cmn	w0, #0x1
    1cd4:	b.ne	1d98 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3b0>  // b.any
    1cd8:	mov	x5, x6
    1cdc:	b	1b8c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1a4>
    1ce0:	mov	w0, w19
    1ce4:	ldp	x19, x20, [sp, #16]
    1ce8:	ldp	x21, x22, [sp, #32]
    1cec:	ldp	x23, x24, [sp, #48]
    1cf0:	ldp	x25, x26, [sp, #64]
    1cf4:	ldr	x27, [sp, #80]
    1cf8:	ldp	x29, x30, [sp], #96
    1cfc:	ret
    1d00:	add	x0, x23, #0x38
    1d04:	neg	x1, x1
    1d08:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1d0c:	mov	w0, w19
    1d10:	ldp	x19, x20, [sp, #16]
    1d14:	ldp	x21, x22, [sp, #32]
    1d18:	ldp	x23, x24, [sp, #48]
    1d1c:	ldp	x25, x26, [sp, #64]
    1d20:	ldr	x27, [sp, #80]
    1d24:	ldp	x29, x30, [sp], #96
    1d28:	ret
    1d2c:	mov	x0, x20
    1d30:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1d34:	mov	x2, #0x1c                  	// #28
    1d38:	add	x1, x1, #0x0
    1d3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d40:	b	1a44 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>
    1d44:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1d48:	mov	x2, #0x1a                  	// #26
    1d4c:	add	x1, x1, #0x0
    1d50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d54:	mov	x20, x0
    1d58:	b	1c60 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x278>
    1d5c:	mov	w6, #0x1                   	// #1
    1d60:	cmn	w5, #0x1
    1d64:	b.eq	1b00 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>  // b.none
    1d68:	add	w2, w2, w6
    1d6c:	add	w6, w6, #0x1
    1d70:	and	w5, w4, w2
    1d74:	and	w2, w4, w2
    1d78:	lsl	x5, x5, #4
    1d7c:	add	x7, x3, x5
    1d80:	ldr	w5, [x3, x5]
    1d84:	cmp	w1, w5
    1d88:	b.eq	1b5c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x174>  // b.none
    1d8c:	b	1d60 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x378>
    1d90:	mov	w19, #0x0                   	// #0
    1d94:	b	1bf8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x210>
    1d98:	add	w2, w5, w2
    1d9c:	add	w7, w5, #0x1
    1da0:	and	w0, w4, w2
    1da4:	and	w2, w4, w2
    1da8:	lsl	x0, x0, #4
    1dac:	add	x5, x3, x0
    1db0:	ldr	w0, [x3, x0]
    1db4:	cmp	w1, w0
    1db8:	b.eq	1b8c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1a4>  // b.none
    1dbc:	mov	w5, w7
    1dc0:	b	1cd0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e8>
    1dc4:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1dc8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1dcc:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1dd0:	add	x3, x3, #0x0
    1dd4:	add	x1, x1, #0x0
    1dd8:	add	x0, x0, #0x0
    1ddc:	mov	w2, #0x250                 	// #592
    1de0:	bl	0 <__assert_fail>
    1de4:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1de8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1dec:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1df0:	add	x3, x3, #0x0
    1df4:	add	x1, x1, #0x0
    1df8:	add	x0, x0, #0x0
    1dfc:	mov	w2, #0x43                  	// #67
    1e00:	bl	0 <__assert_fail>
    1e04:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1e08:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1e0c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1e10:	add	x3, x3, #0x0
    1e14:	add	x1, x1, #0x0
    1e18:	add	x0, x0, #0x0
    1e1c:	mov	w2, #0xa7                  	// #167
    1e20:	bl	0 <__assert_fail>
    1e24:	nop

0000000000001e28 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
    1e28:	stp	x29, x30, [sp, #-64]!
    1e2c:	mov	x29, sp
    1e30:	stp	x19, x20, [sp, #16]
    1e34:	mov	x20, x0
    1e38:	mov	x19, x1
    1e3c:	ldr	x0, [x0, #8]
    1e40:	stp	x21, x22, [sp, #32]
    1e44:	mov	x22, x4
    1e48:	stp	x23, x24, [sp, #48]
    1e4c:	mov	x24, x2
    1e50:	mov	x23, x3
    1e54:	ldr	x1, [x0]
    1e58:	ldr	x1, [x1, #56]
    1e5c:	blr	x1
    1e60:	ldr	x0, [x20, #24]
    1e64:	mov	x1, x19
    1e68:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
    1e6c:	ldp	x19, x21, [x20, #104]
    1e70:	cmp	x19, x21
    1e74:	b.eq	1e8c <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x64>  // b.none
    1e78:	ldr	x0, [x19, #8]
    1e7c:	add	x19, x19, #0x10
    1e80:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1e84:	cmp	x21, x19
    1e88:	b.ne	1e78 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x50>  // b.any
    1e8c:	mov	x1, x24
    1e90:	mov	x0, x20
    1e94:	bl	1738 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1e98:	ldp	x19, x21, [x20, #56]
    1e9c:	cmp	x21, x19
    1ea0:	b.eq	1ebc <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x94>  // b.none
    1ea4:	nop
    1ea8:	ldr	x0, [x19, #8]
    1eac:	add	x19, x19, #0x10
    1eb0:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1eb4:	cmp	x21, x19
    1eb8:	b.ne	1ea8 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x80>  // b.any
    1ebc:	ldp	x19, x21, [x20, #32]
    1ec0:	cmp	x21, x19
    1ec4:	b.eq	1edc <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xb4>  // b.none
    1ec8:	ldr	x0, [x19, #8]
    1ecc:	add	x19, x19, #0x10
    1ed0:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1ed4:	cmp	x21, x19
    1ed8:	b.ne	1ec8 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xa0>  // b.any
    1edc:	mov	x1, x23
    1ee0:	mov	x0, x20
    1ee4:	bl	12d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1ee8:	mov	x1, x22
    1eec:	mov	x0, x20
    1ef0:	bl	19e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1ef4:	ldp	x21, x22, [sp, #32]
    1ef8:	ldp	x23, x24, [sp, #48]
    1efc:	str	xzr, [x20, #128]
    1f00:	str	wzr, [x20, #136]
    1f04:	ldp	x19, x20, [sp, #16]
    1f08:	ldp	x29, x30, [sp], #64
    1f0c:	ret

0000000000001f10 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
    1f10:	stp	x29, x30, [sp, #-48]!
    1f14:	mov	x29, sp
    1f18:	stp	x19, x20, [sp, #16]
    1f1c:	mov	x19, x0
    1f20:	ldr	x20, [x1, #8]
    1f24:	ldr	x0, [x0, #24]
    1f28:	str	x21, [sp, #32]
    1f2c:	mov	x21, x1
    1f30:	ldr	x1, [x20, #800]
    1f34:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
    1f38:	ldr	x0, [x20]
    1f3c:	ldrb	w2, [x0, #324]
    1f40:	cbnz	w2, 1f4c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c>
    1f44:	ldrb	w0, [x0, #325]
    1f48:	cbz	w0, 1fa8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x98>
    1f4c:	ldr	x0, [x19, #8]
    1f50:	mov	x1, x21
    1f54:	ldr	x2, [x0]
    1f58:	ldr	x2, [x2, #24]
    1f5c:	blr	x2
    1f60:	str	w0, [x20, #796]
    1f64:	ldr	w4, [x20, #784]
    1f68:	cmp	w4, #0x1
    1f6c:	b.eq	2024 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.none
    1f70:	ldr	x8, [x20]
    1f74:	ldrb	w7, [x8, #324]
    1f78:	cbz	w7, 2070 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x160>
    1f7c:	ldr	x0, [x21, #8]
    1f80:	ldr	w0, [x0, #796]
    1f84:	cbnz	w0, 2084 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x174>
    1f88:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1f8c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1f90:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1f94:	add	x3, x3, #0x0
    1f98:	add	x1, x1, #0x0
    1f9c:	add	x0, x0, #0x0
    1fa0:	mov	w2, #0x117                 	// #279
    1fa4:	bl	0 <__assert_fail>
    1fa8:	ldr	w4, [x20, #784]
    1fac:	cmp	w4, #0x1
    1fb0:	b.eq	2024 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.none
    1fb4:	cmp	w4, #0x2
    1fb8:	b.eq	2228 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    1fbc:	cmp	w4, #0x3
    1fc0:	b.ne	2208 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f8>  // b.any
    1fc4:	mov	x1, x21
    1fc8:	mov	x0, x19
    1fcc:	bl	5c8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    1fd0:	ands	w0, w0, #0xff
    1fd4:	b.ne	2060 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>  // b.any
    1fd8:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1fdc:	ldr	x0, [x0]
    1fe0:	ldrb	w0, [x0]
    1fe4:	cbnz	w0, 23c0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4b0>
    1fe8:	add	x19, x19, #0x50
    1fec:	ldp	x1, x0, [x19, #8]
    1ff0:	cmp	x1, x0
    1ff4:	b.eq	24c0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5b0>  // b.none
    1ff8:	ldr	w3, [x21]
    1ffc:	add	x2, x1, #0x10
    2000:	ldr	x0, [x21, #8]
    2004:	str	w3, [x1]
    2008:	str	x0, [x1, #8]
    200c:	mov	w0, #0x1                   	// #1
    2010:	str	x2, [x19, #8]
    2014:	ldp	x19, x20, [sp, #16]
    2018:	ldr	x21, [sp, #32]
    201c:	ldp	x29, x30, [sp], #48
    2020:	ret
    2024:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    2028:	ldr	x0, [x0]
    202c:	ldrb	w0, [x0]
    2030:	cbnz	w0, 2280 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x370>
    2034:	add	x19, x19, #0x20
    2038:	ldp	x1, x0, [x19, #8]
    203c:	cmp	x1, x0
    2040:	b.eq	23ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x49c>  // b.none
    2044:	ldr	w3, [x21]
    2048:	add	x2, x1, #0x10
    204c:	ldr	x0, [x21, #8]
    2050:	str	w3, [x1]
    2054:	str	x0, [x1, #8]
    2058:	mov	w0, #0x0                   	// #0
    205c:	str	x2, [x19, #8]
    2060:	ldp	x19, x20, [sp, #16]
    2064:	ldr	x21, [sp, #32]
    2068:	ldp	x29, x30, [sp], #48
    206c:	ret
    2070:	ldrb	w0, [x8, #325]
    2074:	cbz	w0, 1fb4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xa4>
    2078:	ldr	x0, [x21, #8]
    207c:	ldr	w0, [x0, #796]
    2080:	cbz	w0, 1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>
    2084:	ldr	x1, [x19, #8]
    2088:	ldr	w10, [x1, #56]
    208c:	ldr	x3, [x1, #40]
    2090:	cbz	w10, 1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>
    2094:	cmn	w0, #0x3
    2098:	b.hi	2678 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x768>  // b.pmore
    209c:	mov	w1, #0x25                  	// #37
    20a0:	sub	w5, w10, #0x1
    20a4:	mul	w1, w0, w1
    20a8:	and	w2, w1, w5
    20ac:	and	w1, w1, w5
    20b0:	lsl	x2, x2, #4
    20b4:	add	x6, x3, x2
    20b8:	ldr	w2, [x3, x2]
    20bc:	cmp	w0, w2
    20c0:	b.ne	2518 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x608>  // b.any
    20c4:	ubfiz	x9, x10, #4, #32
    20c8:	mov	w10, w10
    20cc:	add	x9, x3, x9
    20d0:	cmp	x6, x9
    20d4:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    20d8:	mov	w2, #0x25                  	// #37
    20dc:	mul	w2, w0, w2
    20e0:	and	w6, w2, w5
    20e4:	and	w2, w2, w5
    20e8:	lsl	x6, x6, #4
    20ec:	add	x1, x3, x6
    20f0:	ldr	w6, [x3, x6]
    20f4:	cmp	w0, w6
    20f8:	b.ne	2460 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x550>  // b.any
    20fc:	ldr	x6, [x1, #8]
    2100:	ldp	w1, w2, [x6]
    2104:	ldr	w9, [x6, #8]
    2108:	add	w2, w2, w9
    210c:	cmp	w1, w2
    2110:	b.hi	2024 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.pmore
    2114:	cmp	w4, #0x2
    2118:	b.eq	2228 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    211c:	cbz	w7, 23a0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x490>
    2120:	mov	w1, #0x25                  	// #37
    2124:	mul	w1, w0, w1
    2128:	and	w2, w1, w5
    212c:	and	w1, w1, w5
    2130:	lsl	x2, x2, #4
    2134:	add	x6, x3, x2
    2138:	ldr	w2, [x3, x2]
    213c:	cmp	w0, w2
    2140:	b.ne	2580 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>  // b.any
    2144:	add	x9, x3, x10, lsl #4
    2148:	cmp	x9, x6
    214c:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    2150:	mov	w1, #0x25                  	// #37
    2154:	mul	w1, w0, w1
    2158:	and	w2, w1, w5
    215c:	and	w1, w1, w5
    2160:	lsl	x2, x2, #4
    2164:	add	x6, x3, x2
    2168:	ldr	w2, [x3, x2]
    216c:	cmp	w0, w2
    2170:	b.ne	24ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x59c>  // b.any
    2174:	ldr	x2, [x6, #8]
    2178:	ldr	w1, [x2, #4]
    217c:	cbz	w1, 2194 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x284>
    2180:	ldr	w6, [x2, #8]
    2184:	ldr	w2, [x2]
    2188:	add	w1, w1, w6
    218c:	cmp	w1, w2
    2190:	b.eq	2228 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    2194:	cmp	w4, #0x3
    2198:	b.ne	2208 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f8>  // b.any
    219c:	cbz	w7, 2454 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x544>
    21a0:	mov	w1, #0x25                  	// #37
    21a4:	mul	w1, w0, w1
    21a8:	and	w2, w1, w5
    21ac:	and	w1, w1, w5
    21b0:	lsl	x2, x2, #4
    21b4:	add	x4, x3, x2
    21b8:	ldr	w2, [x3, x2]
    21bc:	cmp	w0, w2
    21c0:	b.ne	25e8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6d8>  // b.any
    21c4:	add	x10, x3, x10, lsl #4
    21c8:	cmp	x4, x10
    21cc:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    21d0:	mov	w1, #0x25                  	// #37
    21d4:	mul	w1, w0, w1
    21d8:	and	w2, w1, w5
    21dc:	and	w1, w1, w5
    21e0:	lsl	x2, x2, #4
    21e4:	add	x4, x3, x2
    21e8:	ldr	w2, [x3, x2]
    21ec:	cmp	w0, w2
    21f0:	b.ne	24d4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c4>  // b.any
    21f4:	ldr	x0, [x4, #8]
    21f8:	ldr	w1, [x0]
    21fc:	ldr	w0, [x0, #8]
    2200:	cmp	w1, w0
    2204:	b.eq	1fc4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb4>  // b.none
    2208:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    220c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2210:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2214:	add	x3, x3, #0x0
    2218:	add	x1, x1, #0x0
    221c:	add	x0, x0, #0x0
    2220:	mov	w2, #0x142                 	// #322
    2224:	bl	0 <__assert_fail>
    2228:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    222c:	ldr	x0, [x0]
    2230:	ldrb	w0, [x0]
    2234:	cbnz	w0, 230c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3fc>
    2238:	add	x0, x19, #0x38
    223c:	ldp	x1, x2, [x0, #8]
    2240:	cmp	x1, x2
    2244:	b.eq	24a0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x590>  // b.none
    2248:	ldr	w4, [x21]
    224c:	add	x2, x1, #0x10
    2250:	ldr	x3, [x21, #8]
    2254:	str	w4, [x1]
    2258:	str	x3, [x1, #8]
    225c:	str	x2, [x0, #8]
    2260:	ldr	w1, [x19, #136]
    2264:	mov	w0, #0x0                   	// #0
    2268:	ldr	x21, [sp, #32]
    226c:	add	w1, w1, #0x1
    2270:	str	w1, [x19, #136]
    2274:	ldp	x19, x20, [sp, #16]
    2278:	ldp	x29, x30, [sp], #48
    227c:	ret
    2280:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2284:	add	x0, x0, #0x0
    2288:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    228c:	tst	w0, #0xff
    2290:	b.eq	2034 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>  // b.none
    2294:	bl	0 <_ZN4llvm4dbgsEv>
    2298:	mov	x20, x0
    229c:	ldp	x1, x2, [x0, #16]
    22a0:	sub	x1, x1, x2
    22a4:	cmp	x1, #0x13
    22a8:	b.ls	2500 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5f0>  // b.plast
    22ac:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    22b0:	add	x0, x0, #0x0
    22b4:	ldp	x4, x5, [x0]
    22b8:	stp	x4, x5, [x2]
    22bc:	ldr	w0, [x0, #16]
    22c0:	str	w0, [x2, #16]
    22c4:	ldr	x0, [x20, #24]
    22c8:	add	x0, x0, #0x14
    22cc:	str	x0, [x20, #24]
    22d0:	ldr	w1, [x21]
    22d4:	mov	x0, x20
    22d8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    22dc:	ldp	x0, x1, [x20, #16]
    22e0:	sub	x0, x0, x1
    22e4:	cmp	x0, #0xf
    22e8:	b.ls	24e8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5d8>  // b.plast
    22ec:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    22f0:	add	x0, x0, #0x0
    22f4:	ldp	x2, x3, [x0]
    22f8:	stp	x2, x3, [x1]
    22fc:	ldr	x0, [x20, #24]
    2300:	add	x0, x0, #0x10
    2304:	str	x0, [x20, #24]
    2308:	b	2034 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>
    230c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2310:	add	x0, x0, #0x0
    2314:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2318:	tst	w0, #0xff
    231c:	b.eq	2238 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>  // b.none
    2320:	bl	0 <_ZN4llvm4dbgsEv>
    2324:	mov	x20, x0
    2328:	ldp	x1, x2, [x0, #16]
    232c:	sub	x1, x1, x2
    2330:	cmp	x1, #0x13
    2334:	b.ls	2568 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x658>  // b.plast
    2338:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    233c:	add	x0, x0, #0x0
    2340:	ldp	x4, x5, [x0]
    2344:	stp	x4, x5, [x2]
    2348:	ldr	w0, [x0, #16]
    234c:	str	w0, [x2, #16]
    2350:	ldr	x0, [x20, #24]
    2354:	add	x0, x0, #0x14
    2358:	str	x0, [x20, #24]
    235c:	ldr	w1, [x21]
    2360:	mov	x0, x20
    2364:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2368:	ldp	x0, x1, [x20, #16]
    236c:	sub	x0, x0, x1
    2370:	cmp	x0, #0x12
    2374:	b.ls	2550 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x640>  // b.plast
    2378:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    237c:	add	x0, x0, #0x0
    2380:	ldp	x2, x3, [x0]
    2384:	stp	x2, x3, [x1]
    2388:	ldur	w0, [x0, #15]
    238c:	stur	w0, [x1, #15]
    2390:	ldr	x0, [x20, #24]
    2394:	add	x0, x0, #0x13
    2398:	str	x0, [x20, #24]
    239c:	b	2238 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>
    23a0:	ldrb	w1, [x8, #325]
    23a4:	cbnz	w1, 2120 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x210>
    23a8:	b	1fbc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xac>
    23ac:	mov	x0, x19
    23b0:	mov	x2, x21
    23b4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    23b8:	mov	w0, #0x0                   	// #0
    23bc:	b	2060 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>
    23c0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    23c4:	add	x0, x0, #0x0
    23c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    23cc:	tst	w0, #0xff
    23d0:	b.eq	1fe8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>  // b.none
    23d4:	bl	0 <_ZN4llvm4dbgsEv>
    23d8:	mov	x20, x0
    23dc:	ldp	x1, x2, [x0, #16]
    23e0:	sub	x1, x1, x2
    23e4:	cmp	x1, #0x13
    23e8:	b.ls	25d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6c0>  // b.plast
    23ec:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    23f0:	add	x0, x0, #0x0
    23f4:	ldp	x4, x5, [x0]
    23f8:	stp	x4, x5, [x2]
    23fc:	ldr	w0, [x0, #16]
    2400:	str	w0, [x2, #16]
    2404:	ldr	x0, [x20, #24]
    2408:	add	x0, x0, #0x14
    240c:	str	x0, [x20, #24]
    2410:	ldr	w1, [x21]
    2414:	mov	x0, x20
    2418:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    241c:	ldp	x0, x1, [x20, #16]
    2420:	sub	x0, x0, x1
    2424:	cmp	x0, #0x10
    2428:	b.ls	25b8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6a8>  // b.plast
    242c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2430:	add	x0, x0, #0x0
    2434:	ldp	x2, x3, [x0]
    2438:	stp	x2, x3, [x1]
    243c:	ldrb	w0, [x0, #16]
    2440:	strb	w0, [x1, #16]
    2444:	ldr	x0, [x20, #24]
    2448:	add	x0, x0, #0x11
    244c:	str	x0, [x20, #24]
    2450:	b	1fe8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>
    2454:	ldrb	w1, [x8, #325]
    2458:	cbnz	w1, 21a0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x290>
    245c:	b	1fc4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb4>
    2460:	mov	w1, #0x1                   	// #1
    2464:	cmn	w6, #0x1
    2468:	b.ne	2474 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x564>  // b.any
    246c:	mov	x1, x9
    2470:	b	20fc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>
    2474:	add	w2, w2, w1
    2478:	add	w11, w1, #0x1
    247c:	and	w6, w5, w2
    2480:	and	w2, w5, w2
    2484:	lsl	x6, x6, #4
    2488:	add	x1, x3, x6
    248c:	ldr	w6, [x3, x6]
    2490:	cmp	w0, w6
    2494:	b.eq	20fc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>  // b.none
    2498:	mov	w1, w11
    249c:	b	2464 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x554>
    24a0:	mov	x2, x21
    24a4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    24a8:	b	2260 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x350>
    24ac:	mov	w6, #0x1                   	// #1
    24b0:	cmn	w2, #0x1
    24b4:	b.ne	2620 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x710>  // b.any
    24b8:	mov	x6, x9
    24bc:	b	2174 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x264>
    24c0:	mov	x0, x19
    24c4:	mov	x2, x21
    24c8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    24cc:	mov	w0, #0x1                   	// #1
    24d0:	b	2060 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>
    24d4:	mov	w4, #0x1                   	// #1
    24d8:	cmn	w2, #0x1
    24dc:	b.ne	264c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x73c>  // b.any
    24e0:	mov	x4, x10
    24e4:	b	21f4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2e4>
    24e8:	mov	x0, x20
    24ec:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    24f0:	mov	x2, #0x10                  	// #16
    24f4:	add	x1, x1, #0x0
    24f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    24fc:	b	2034 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>
    2500:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2504:	mov	x2, #0x14                  	// #20
    2508:	add	x1, x1, #0x0
    250c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2510:	mov	x20, x0
    2514:	b	22d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c0>
    2518:	mov	w6, #0x1                   	// #1
    251c:	cmn	w2, #0x1
    2520:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    2524:	add	w1, w6, w1
    2528:	add	w9, w6, #0x1
    252c:	and	w2, w5, w1
    2530:	and	w1, w5, w1
    2534:	lsl	x2, x2, #4
    2538:	add	x6, x3, x2
    253c:	ldr	w2, [x3, x2]
    2540:	cmp	w0, w2
    2544:	b.eq	20c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1b4>  // b.none
    2548:	mov	w6, w9
    254c:	b	251c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x60c>
    2550:	mov	x0, x20
    2554:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2558:	mov	x2, #0x13                  	// #19
    255c:	add	x1, x1, #0x0
    2560:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2564:	b	2238 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>
    2568:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    256c:	mov	x2, #0x14                  	// #20
    2570:	add	x1, x1, #0x0
    2574:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2578:	mov	x20, x0
    257c:	b	235c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44c>
    2580:	mov	w6, #0x1                   	// #1
    2584:	cmn	w2, #0x1
    2588:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    258c:	add	w1, w1, w6
    2590:	add	w9, w6, #0x1
    2594:	and	w6, w5, w1
    2598:	and	w1, w5, w1
    259c:	lsl	x2, x6, #4
    25a0:	add	x6, x3, x6, lsl #4
    25a4:	ldr	w2, [x3, x2]
    25a8:	cmp	w0, w2
    25ac:	b.eq	2144 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x234>  // b.none
    25b0:	mov	w6, w9
    25b4:	b	2584 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x674>
    25b8:	mov	x0, x20
    25bc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    25c0:	mov	x2, #0x11                  	// #17
    25c4:	add	x1, x1, #0x0
    25c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    25cc:	b	1fe8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>
    25d0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    25d4:	mov	x2, #0x14                  	// #20
    25d8:	add	x1, x1, #0x0
    25dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    25e0:	mov	x20, x0
    25e4:	b	2410 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x500>
    25e8:	mov	w4, #0x1                   	// #1
    25ec:	cmn	w2, #0x1
    25f0:	b.eq	1f88 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    25f4:	add	w1, w4, w1
    25f8:	add	w6, w4, #0x1
    25fc:	and	w4, w5, w1
    2600:	and	w1, w5, w1
    2604:	lsl	x2, x4, #4
    2608:	add	x4, x3, x4, lsl #4
    260c:	ldr	w2, [x3, x2]
    2610:	cmp	w0, w2
    2614:	b.eq	21c4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2b4>  // b.none
    2618:	mov	w4, w6
    261c:	b	25ec <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6dc>
    2620:	add	w1, w6, w1
    2624:	add	w11, w6, #0x1
    2628:	and	w2, w5, w1
    262c:	and	w1, w5, w1
    2630:	lsl	x2, x2, #4
    2634:	add	x6, x3, x2
    2638:	ldr	w2, [x3, x2]
    263c:	cmp	w0, w2
    2640:	b.eq	2174 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x264>  // b.none
    2644:	mov	w6, w11
    2648:	b	24b0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5a0>
    264c:	add	w1, w4, w1
    2650:	add	w6, w4, #0x1
    2654:	and	w2, w5, w1
    2658:	and	w1, w5, w1
    265c:	lsl	x2, x2, #4
    2660:	add	x4, x3, x2
    2664:	ldr	w2, [x3, x2]
    2668:	cmp	w0, w2
    266c:	b.eq	21f4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2e4>  // b.none
    2670:	mov	w4, w6
    2674:	b	24d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c8>
    2678:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    267c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2680:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2684:	add	x3, x3, #0x0
    2688:	add	x1, x1, #0x0
    268c:	add	x0, x0, #0x0
    2690:	mov	w2, #0x250                 	// #592
    2694:	bl	0 <__assert_fail>

0000000000002698 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
    2698:	stp	x29, x30, [sp, #-80]!
    269c:	mov	w5, #0x88                  	// #136
    26a0:	mov	x29, sp
    26a4:	stp	x19, x20, [sp, #16]
    26a8:	mov	x20, x0
    26ac:	ldr	x19, [x1, #8]
    26b0:	stp	x21, x22, [sp, #32]
    26b4:	mov	x21, x1
    26b8:	stp	x23, x24, [sp, #48]
    26bc:	mov	x23, x2
    26c0:	ldr	w22, [x19, #24]
    26c4:	ldr	x0, [x19, #16]
    26c8:	mov	w2, #0x0                   	// #0
    26cc:	mov	x24, x3
    26d0:	mov	w3, #0x0                   	// #0
    26d4:	stp	x25, x26, [sp, #64]
    26d8:	mov	x25, x4
    26dc:	umaddl	x22, w22, w5, x0
    26e0:	mov	x1, x22
    26e4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    26e8:	ldr	x1, [x19]
    26ec:	mov	x26, x0
    26f0:	ldrb	w2, [x1, #324]
    26f4:	cbnz	w2, 273c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xa4>
    26f8:	ldrb	w0, [x1, #325]
    26fc:	cbnz	w0, 273c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xa4>
    2700:	ldr	x0, [x20, #24]
    2704:	ldr	x1, [x19, #800]
    2708:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
    270c:	mov	x2, x23
    2710:	mov	x1, x21
    2714:	mov	x0, x20
    2718:	bl	5f0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
    271c:	cmp	x22, x26
    2720:	b.ne	2810 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x178>  // b.any
    2724:	ldp	x19, x20, [sp, #16]
    2728:	ldp	x21, x22, [sp, #32]
    272c:	ldp	x23, x24, [sp, #48]
    2730:	ldp	x25, x26, [sp, #64]
    2734:	ldp	x29, x30, [sp], #80
    2738:	ret
    273c:	ldr	w3, [x19, #796]
    2740:	cbnz	w3, 2764 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xcc>
    2744:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2748:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    274c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    2750:	add	x3, x3, #0x0
    2754:	add	x1, x1, #0x0
    2758:	add	x0, x0, #0x0
    275c:	mov	w2, #0x117                 	// #279
    2760:	bl	0 <__assert_fail>
    2764:	ldr	x0, [x20, #8]
    2768:	ldr	w1, [x0, #56]
    276c:	ldr	x4, [x0, #40]
    2770:	cbz	w1, 2744 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>
    2774:	cmn	w3, #0x3
    2778:	b.hi	28b8 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x220>  // b.pmore
    277c:	mov	w2, #0x25                  	// #37
    2780:	sub	w0, w1, #0x1
    2784:	mul	w2, w3, w2
    2788:	and	w5, w2, w0
    278c:	and	w2, w2, w0
    2790:	lsl	x5, x5, #4
    2794:	add	x7, x4, x5
    2798:	ldr	w5, [x4, x5]
    279c:	cmp	w3, w5
    27a0:	b.ne	2884 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1ec>  // b.any
    27a4:	ubfiz	x1, x1, #4, #32
    27a8:	add	x6, x4, x1
    27ac:	cmp	x6, x7
    27b0:	b.eq	2744 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>  // b.none
    27b4:	mov	w1, #0x25                  	// #37
    27b8:	mul	w1, w3, w1
    27bc:	and	w2, w1, w0
    27c0:	and	w1, w1, w0
    27c4:	lsl	x2, x2, #4
    27c8:	add	x5, x4, x2
    27cc:	ldr	w2, [x4, x2]
    27d0:	cmp	w3, w2
    27d4:	b.ne	2844 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1ac>  // b.any
    27d8:	ldr	x2, [x5, #8]
    27dc:	ldr	x0, [x20, #24]
    27e0:	ldr	w4, [x2, #12]
    27e4:	ldr	w3, [x2, #20]
    27e8:	ldr	x1, [x19, #800]
    27ec:	cmp	w4, w3
    27f0:	b.eq	2708 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x70>  // b.none
    27f4:	ldr	w2, [x2, #32]
    27f8:	cbz	w2, 2708 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x70>
    27fc:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
    2800:	mov	x2, x23
    2804:	mov	x1, x21
    2808:	mov	x0, x20
    280c:	bl	5f0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
    2810:	mov	x1, x24
    2814:	mov	x0, x20
    2818:	bl	12d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    281c:	tst	w0, #0xff
    2820:	b.eq	2724 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x8c>  // b.none
    2824:	mov	x1, x25
    2828:	mov	x0, x20
    282c:	ldp	x19, x20, [sp, #16]
    2830:	ldp	x21, x22, [sp, #32]
    2834:	ldp	x23, x24, [sp, #48]
    2838:	ldp	x25, x26, [sp, #64]
    283c:	ldp	x29, x30, [sp], #80
    2840:	b	19e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
    2844:	mov	w5, #0x1                   	// #1
    2848:	cmn	w2, #0x1
    284c:	b.ne	2858 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1c0>  // b.any
    2850:	mov	x5, x6
    2854:	b	27d8 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x140>
    2858:	add	w1, w5, w1
    285c:	add	w7, w5, #0x1
    2860:	and	w2, w0, w1
    2864:	and	w1, w0, w1
    2868:	lsl	x2, x2, #4
    286c:	add	x5, x4, x2
    2870:	ldr	w2, [x4, x2]
    2874:	cmp	w3, w2
    2878:	b.eq	27d8 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x140>  // b.none
    287c:	mov	w5, w7
    2880:	b	2848 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1b0>
    2884:	mov	w6, #0x1                   	// #1
    2888:	cmn	w5, #0x1
    288c:	b.eq	2744 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>  // b.none
    2890:	add	w2, w2, w6
    2894:	add	w6, w6, #0x1
    2898:	and	w5, w0, w2
    289c:	and	w2, w0, w2
    28a0:	lsl	x5, x5, #4
    28a4:	add	x7, x4, x5
    28a8:	ldr	w5, [x4, x5]
    28ac:	cmp	w3, w5
    28b0:	b.eq	27a4 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x10c>  // b.none
    28b4:	b	2888 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1f0>
    28b8:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    28bc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    28c0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    28c4:	add	x3, x3, #0x0
    28c8:	add	x1, x1, #0x0
    28cc:	add	x0, x0, #0x0
    28d0:	mov	w2, #0x250                 	// #592
    28d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	ldr	x3, [x1, #8]
   4:	mov	w4, #0x88                  	// #136
   8:	ldr	w6, [x1]
   c:	ldr	w5, [x3, #24]
  10:	ldr	x0, [x3, #16]
  14:	umaddl	x5, w5, w4, x0
  18:	cmp	x0, x5
  1c:	b.eq	ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xac>  // b.none
  20:	mov	w3, #0x0                   	// #0
  24:	nop
  28:	ldr	x4, [x0, #32]
  2c:	add	x0, x0, #0x88
  30:	ldur	w1, [x0, #-72]
  34:	cmp	x4, #0x0
  38:	cinc	w1, w1, ne  // ne = any
  3c:	cmp	x5, x0
  40:	add	w3, w3, w1
  44:	b.ne	28 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x28>  // b.any
  48:	ldr	x1, [x2, #8]
  4c:	mov	w4, #0x88                  	// #136
  50:	ldr	w7, [x2]
  54:	sub	w3, w6, w3
  58:	ldr	w5, [x1, #24]
  5c:	ldr	x0, [x1, #16]
  60:	umaddl	x5, w5, w4, x0
  64:	cmp	x0, x5
  68:	b.eq	d0 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd0>  // b.none
  6c:	mov	w2, #0x0                   	// #0
  70:	ldr	x4, [x0, #32]
  74:	add	x0, x0, #0x88
  78:	ldur	w1, [x0, #-72]
  7c:	cmp	x4, #0x0
  80:	cinc	w1, w1, ne  // ne = any
  84:	cmp	x5, x0
  88:	add	w2, w2, w1
  8c:	b.ne	70 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x70>  // b.any
  90:	sub	w2, w7, w2
  94:	cmp	w7, w6
  98:	cset	w0, hi  // hi = pmore
  9c:	cmp	w2, w3
  a0:	b.eq	a8 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xa8>  // b.none
  a4:	cset	w0, gt
  a8:	ret
  ac:	ldr	x1, [x2, #8]
  b0:	mov	w4, #0x88                  	// #136
  b4:	ldr	w7, [x2]
  b8:	mov	w3, w6
  bc:	ldr	w5, [x1, #24]
  c0:	ldr	x0, [x1, #16]
  c4:	umaddl	x5, w5, w4, x0
  c8:	cmp	x0, x5
  cc:	b.ne	6c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x6c>  // b.any
  d0:	mov	w2, w7
  d4:	b	94 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x94>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	w21, [x0, #56]
  1c:	ldr	x0, [x1, #8]
  20:	stp	x23, x24, [sp, #48]
  24:	stp	x25, x26, [sp, #64]
  28:	ldr	w22, [x0, #796]
  2c:	ldr	x25, [x19, #40]
  30:	cbz	w21, 204 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x204>
  34:	cmn	w22, #0x3
  38:	b.hi	6b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6b0>  // b.pmore
  3c:	mov	w23, #0x25                  	// #37
  40:	sub	w1, w21, #0x1
  44:	mul	w23, w22, w23
  48:	and	w0, w23, w1
  4c:	and	w4, w23, w1
  50:	lsl	x0, x0, #4
  54:	add	x3, x25, x0
  58:	ldr	w24, [x25, x0]
  5c:	cmp	w22, w24
  60:	b.ne	188 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x188>  // b.any
  64:	ldr	x0, [x3, #8]
  68:	ldr	w2, [x0, #16]
  6c:	cbnz	w2, d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd0>
  70:	ldr	x1, [x0, #96]
  74:	add	w2, w2, #0x1
  78:	ldr	x3, [x20, #8]
  7c:	str	w2, [x0, #16]
  80:	cbz	x1, 94 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x94>
  84:	ldr	w4, [x1, #788]
  88:	ldr	w1, [x3, #788]
  8c:	cmp	w4, w1
  90:	b.ge	a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa0>  // b.tcont
  94:	ldr	w1, [x20]
  98:	str	w1, [x0, #88]
  9c:	str	x3, [x0, #96]
  a0:	cbz	w2, b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb8>
  a4:	ldr	w1, [x0, #12]
  a8:	ldr	w3, [x0, #20]
  ac:	sub	w1, w1, w3
  b0:	cmp	w2, w1
  b4:	b.eq	108 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x108>  // b.none
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x21, x22, [sp, #32]
  c0:	ldp	x23, x24, [sp, #48]
  c4:	ldp	x25, x26, [sp, #64]
  c8:	ldp	x29, x30, [sp], #96
  cc:	ret
  d0:	ldr	w1, [x0, #12]
  d4:	ldr	w3, [x0, #20]
  d8:	sub	w1, w1, w3
  dc:	cmp	w2, w1
  e0:	b.ne	70 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x70>  // b.any
  e4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  ec:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f0:	add	x3, x3, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x0, x0, #0x0
  fc:	mov	w2, #0x79                  	// #121
 100:	stp	x27, x28, [sp, #80]
 104:	bl	0 <__assert_fail>
 108:	ldr	x2, [x0, #24]
 10c:	ldr	w6, [x0, #32]
 110:	add	x6, x2, x6, lsl #3
 114:	cmp	x2, x6
 118:	b.eq	b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb8>  // b.none
 11c:	stp	x27, x28, [sp, #80]
 120:	ldr	x1, [x2]
 124:	ldr	w4, [x1]
 128:	ldr	w3, [x1, #8]
 12c:	cmp	w4, w3
 130:	b.eq	6d4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d4>  // b.none
 134:	ldr	w3, [x1, #4]
 138:	ldr	x5, [x0, #96]
 13c:	add	w3, w3, #0x1
 140:	str	w3, [x1, #4]
 144:	ldr	w4, [x1, #80]
 148:	ldr	w3, [x5, #788]
 14c:	cmp	w3, w4
 150:	b.ls	160 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x160>  // b.plast
 154:	ldr	w4, [x0, #88]
 158:	str	w4, [x1, #72]
 15c:	str	w3, [x1, #80]
 160:	add	x2, x2, #0x8
 164:	cmp	x6, x2
 168:	b.ne	120 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x120>  // b.any
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x25, x26, [sp, #64]
 17c:	ldp	x27, x28, [sp, #80]
 180:	ldp	x29, x30, [sp], #96
 184:	ret
 188:	mov	w0, #0x1                   	// #1
 18c:	mov	x2, #0x0                   	// #0
 190:	cmn	w24, #0x1
 194:	b.ne	5f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5f4>  // b.any
 198:	ldr	x4, [x19, #32]
 19c:	lsl	w0, w21, #1
 1a0:	ldr	w5, [x19, #48]
 1a4:	cmp	x2, #0x0
 1a8:	add	x4, x4, #0x1
 1ac:	str	x4, [x19, #32]
 1b0:	add	w5, w5, #0x1
 1b4:	add	w4, w0, w21
 1b8:	csel	x2, x2, x3, ne  // ne = any
 1bc:	cmp	w4, w5, lsl #2
 1c0:	b.ls	214 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x214>  // b.plast
 1c4:	ldr	w0, [x19, #52]
 1c8:	sub	w0, w21, w0
 1cc:	sub	w0, w0, w5
 1d0:	cmp	w0, w21, lsr #3
 1d4:	b.ls	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.plast
 1d8:	str	w5, [x19, #48]
 1dc:	ldr	w0, [x2]
 1e0:	cmn	w0, #0x1
 1e4:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 1e8:	ldr	w0, [x19, #52]
 1ec:	sub	w0, w0, #0x1
 1f0:	str	w0, [x19, #52]
 1f4:	mov	x0, #0x0                   	// #0
 1f8:	str	w22, [x2]
 1fc:	str	xzr, [x2, #8]
 200:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 204:	ldr	x1, [x19, #32]
 208:	mov	w0, #0x0                   	// #0
 20c:	add	x1, x1, #0x1
 210:	str	x1, [x19, #32]
 214:	sub	w0, w0, #0x1
 218:	mov	w1, #0x40                  	// #64
 21c:	orr	x0, x0, x0, lsr #1
 220:	orr	x0, x0, x0, lsr #2
 224:	orr	x0, x0, x0, lsr #4
 228:	orr	x0, x0, x0, lsr #8
 22c:	orr	x0, x0, x0, lsr #16
 230:	add	x0, x0, #0x1
 234:	cmp	w0, w1
 238:	csel	w0, w0, w1, cs  // cs = hs, nlast
 23c:	str	w0, [x19, #56]
 240:	ubfiz	x0, x0, #4, #32
 244:	bl	0 <_Znwm>
 248:	ldr	w1, [x19, #56]
 24c:	stp	x0, xzr, [x19, #40]
 250:	sub	w2, w1, #0x1
 254:	and	w2, w2, w1
 258:	cbz	x25, 594 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x594>
 25c:	ubfiz	x21, x21, #4, #32
 260:	add	x26, x25, x21
 264:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 268:	ubfiz	x1, x1, #4, #32
 26c:	mov	w2, #0xffffffff            	// #-1
 270:	add	x1, x0, x1
 274:	cmp	x0, x1
 278:	b.eq	28c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x28c>  // b.none
 27c:	nop
 280:	str	w2, [x0], #16
 284:	cmp	x1, x0
 288:	b.ne	280 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x280>  // b.any
 28c:	cmp	x25, x26
 290:	mov	x23, x25
 294:	mov	w24, #0x25                  	// #37
 298:	b.ne	2ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ac>  // b.any
 29c:	b	440 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x440>
 2a0:	add	x23, x23, #0x10
 2a4:	cmp	x26, x23
 2a8:	b.eq	440 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x440>  // b.none
 2ac:	ldr	w0, [x23]
 2b0:	cmn	w0, #0x3
 2b4:	b.hi	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>  // b.pmore
 2b8:	ldr	w1, [x19, #56]
 2bc:	stp	x27, x28, [sp, #80]
 2c0:	cbz	w1, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 2c4:	mul	w2, w0, w24
 2c8:	sub	w1, w1, #0x1
 2cc:	ldr	x4, [x19, #40]
 2d0:	and	w3, w2, w1
 2d4:	and	w2, w2, w1
 2d8:	lsl	x3, x3, #4
 2dc:	add	x5, x4, x3
 2e0:	ldr	w3, [x4, x3]
 2e4:	cmp	w0, w3
 2e8:	b.ne	530 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x530>  // b.any
 2ec:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f4:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 2f8:	add	x3, x3, #0x0
 2fc:	add	x1, x1, #0x0
 300:	add	x0, x0, #0x0
 304:	mov	w2, #0x17a                 	// #378
 308:	bl	0 <__assert_fail>
 30c:	mov	w2, w1
 310:	lsr	w0, w1, #1
 314:	orr	x0, x0, x2
 318:	mov	w1, #0x40                  	// #64
 31c:	orr	x0, x0, x0, lsr #2
 320:	orr	x0, x0, x0, lsr #4
 324:	orr	x0, x0, x0, lsr #8
 328:	orr	x0, x0, x0, lsr #16
 32c:	add	x0, x0, #0x1
 330:	cmp	w0, w1
 334:	csel	w0, w0, w1, cs  // cs = hs, nlast
 338:	str	w0, [x19, #56]
 33c:	ubfiz	x0, x0, #4, #32
 340:	bl	0 <_Znwm>
 344:	ldr	w1, [x19, #56]
 348:	str	x0, [x19, #40]
 34c:	sub	w2, w1, #0x1
 350:	and	w2, w2, w1
 354:	cbz	x25, 5c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5c4>
 358:	stp	x27, x28, [sp, #80]
 35c:	ubfiz	x21, x21, #4, #32
 360:	add	x27, x25, x21
 364:	str	xzr, [x19, #48]
 368:	cbnz	w2, 760 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x760>
 36c:	ubfiz	x1, x1, #4, #32
 370:	add	x1, x0, x1
 374:	cmp	x0, x1
 378:	b.eq	38c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x38c>  // b.none
 37c:	nop
 380:	str	w24, [x0], #16
 384:	cmp	x1, x0
 388:	b.ne	380 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x380>  // b.any
 38c:	mov	x24, x25
 390:	mov	w26, #0x25                  	// #37
 394:	b	3a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3a4>
 398:	add	x24, x24, #0x10
 39c:	cmp	x27, x24
 3a0:	b.eq	4ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4ac>  // b.none
 3a4:	ldr	w0, [x24]
 3a8:	cmn	w0, #0x3
 3ac:	b.hi	398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>  // b.pmore
 3b0:	ldr	w1, [x19, #56]
 3b4:	cbz	w1, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 3b8:	mul	w2, w0, w26
 3bc:	sub	w1, w1, #0x1
 3c0:	ldr	x4, [x19, #40]
 3c4:	and	w3, w2, w1
 3c8:	and	w2, w2, w1
 3cc:	lsl	x3, x3, #4
 3d0:	add	x5, x4, x3
 3d4:	ldr	w3, [x4, x3]
 3d8:	cmp	w0, w3
 3dc:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 3e0:	mov	w7, #0x1                   	// #1
 3e4:	mov	x6, #0x0                   	// #0
 3e8:	cmn	w3, #0x1
 3ec:	b.ne	668 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x668>  // b.any
 3f0:	cmp	x6, #0x0
 3f4:	csel	x6, x6, x5, ne  // ne = any
 3f8:	ldr	x1, [x24, #8]
 3fc:	str	w0, [x6]
 400:	ldr	w0, [x19, #48]
 404:	str	xzr, [x24, #8]
 408:	str	x1, [x6, #8]
 40c:	add	w0, w0, #0x1
 410:	ldr	x28, [x24, #8]
 414:	str	w0, [x19, #48]
 418:	cbz	x28, 398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>
 41c:	ldr	x0, [x28, #24]
 420:	add	x1, x28, #0x28
 424:	cmp	x0, x1
 428:	b.eq	430 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x430>  // b.none
 42c:	bl	0 <free>
 430:	mov	x0, x28
 434:	mov	x1, #0x68                  	// #104
 438:	bl	0 <_ZdlPvm>
 43c:	b	398 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x398>
 440:	mov	x1, x21
 444:	mov	x0, x25
 448:	bl	0 <_ZdlPvm>
 44c:	ldr	w1, [x19, #56]
 450:	ldr	x0, [x19, #40]
 454:	cbz	w1, 50c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x50c>
 458:	cmn	w22, #0x3
 45c:	b.hi	6b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6b0>  // b.pmore
 460:	mov	w2, #0x25                  	// #37
 464:	sub	w1, w1, #0x1
 468:	ldr	w5, [x19, #48]
 46c:	mul	w2, w22, w2
 470:	add	w5, w5, #0x1
 474:	and	w4, w2, w1
 478:	and	w3, w2, w1
 47c:	lsl	x4, x4, #4
 480:	add	x2, x0, x4
 484:	ldr	w4, [x0, x4]
 488:	cmp	w22, w4
 48c:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 490:	mov	w7, #0x1                   	// #1
 494:	mov	x6, #0x0                   	// #0
 498:	cmn	w4, #0x1
 49c:	b.ne	6f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6f4>  // b.any
 4a0:	cmp	x6, #0x0
 4a4:	csel	x2, x2, x6, eq  // eq = none
 4a8:	b	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>
 4ac:	mov	x1, x21
 4b0:	mov	x0, x25
 4b4:	bl	0 <_ZdlPvm>
 4b8:	ldp	x27, x28, [sp, #80]
 4bc:	ldr	w1, [x19, #56]
 4c0:	ldr	x0, [x19, #40]
 4c4:	cbz	w1, 50c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x50c>
 4c8:	sub	w1, w1, #0x1
 4cc:	ldr	w5, [x19, #48]
 4d0:	and	w3, w23, w1
 4d4:	and	w23, w23, w1
 4d8:	add	w5, w5, #0x1
 4dc:	lsl	x3, x3, #4
 4e0:	add	x2, x0, x3
 4e4:	ldr	w3, [x0, x3]
 4e8:	cmp	w22, w3
 4ec:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 4f0:	mov	w6, #0x1                   	// #1
 4f4:	mov	x4, #0x0                   	// #0
 4f8:	cmn	w3, #0x1
 4fc:	b.ne	728 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x728>  // b.any
 500:	cmp	x4, #0x0
 504:	csel	x2, x2, x4, eq  // eq = none
 508:	b	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>
 50c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 510:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 514:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 518:	add	x3, x3, #0x0
 51c:	add	x1, x1, #0x0
 520:	add	x0, x0, #0x0
 524:	mov	w2, #0x22f                 	// #559
 528:	stp	x27, x28, [sp, #80]
 52c:	bl	0 <__assert_fail>
 530:	mov	w7, #0x1                   	// #1
 534:	mov	x6, #0x0                   	// #0
 538:	cmn	w3, #0x1
 53c:	b.ne	62c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x62c>  // b.any
 540:	cmp	x6, #0x0
 544:	csel	x6, x6, x5, ne  // ne = any
 548:	ldr	x1, [x23, #8]
 54c:	str	w0, [x6]
 550:	ldr	w0, [x19, #48]
 554:	str	xzr, [x23, #8]
 558:	str	x1, [x6, #8]
 55c:	add	w0, w0, #0x1
 560:	ldr	x27, [x23, #8]
 564:	str	w0, [x19, #48]
 568:	cbz	x27, 58c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x58c>
 56c:	ldr	x0, [x27, #24]
 570:	add	x1, x27, #0x28
 574:	cmp	x0, x1
 578:	b.eq	580 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x580>  // b.none
 57c:	bl	0 <free>
 580:	mov	x0, x27
 584:	mov	x1, #0x68                  	// #104
 588:	bl	0 <_ZdlPvm>
 58c:	ldp	x27, x28, [sp, #80]
 590:	b	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>
 594:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 598:	ubfiz	x2, x1, #4, #32
 59c:	add	x2, x0, x2
 5a0:	cmp	x0, x2
 5a4:	b.eq	454 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x454>  // b.none
 5a8:	mov	x1, x0
 5ac:	mov	w3, #0xffffffff            	// #-1
 5b0:	str	w3, [x1], #16
 5b4:	cmp	x2, x1
 5b8:	b.ne	5b0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5b0>  // b.any
 5bc:	ldr	w1, [x19, #56]
 5c0:	b	454 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x454>
 5c4:	str	xzr, [x19, #48]
 5c8:	cbnz	w2, 75c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x75c>
 5cc:	ubfiz	x2, x1, #4, #32
 5d0:	add	x2, x0, x2
 5d4:	cmp	x0, x2
 5d8:	b.eq	4c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4c4>  // b.none
 5dc:	mov	x1, x0
 5e0:	str	w24, [x1], #16
 5e4:	cmp	x2, x1
 5e8:	b.ne	5e0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5e0>  // b.any
 5ec:	ldr	w1, [x19, #56]
 5f0:	b	4c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4c4>
 5f4:	add	w4, w0, w4
 5f8:	cmp	x2, #0x0
 5fc:	and	w5, w1, w4
 600:	ccmn	w24, #0x2, #0x0, eq  // eq = none
 604:	csel	x3, x3, x2, eq  // eq = none
 608:	add	w0, w0, #0x1
 60c:	lsl	x2, x5, #4
 610:	and	w4, w1, w4
 614:	add	x5, x25, x2
 618:	ldr	w24, [x25, x2]
 61c:	cmp	w22, w24
 620:	b.ne	6a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6a4>  // b.any
 624:	ldr	x0, [x5, #8]
 628:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 62c:	add	w2, w7, w2
 630:	cmp	x6, #0x0
 634:	and	w8, w1, w2
 638:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 63c:	csel	x5, x5, x6, eq  // eq = none
 640:	add	w7, w7, #0x1
 644:	lsl	x3, x8, #4
 648:	and	w2, w1, w2
 64c:	add	x8, x4, x3
 650:	ldr	w3, [x4, x3]
 654:	cmp	w0, w3
 658:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 65c:	mov	x6, x5
 660:	mov	x5, x8
 664:	b	538 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x538>
 668:	add	w2, w2, w7
 66c:	cmp	x6, #0x0
 670:	and	w8, w1, w2
 674:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 678:	csel	x5, x5, x6, eq  // eq = none
 67c:	add	w7, w7, #0x1
 680:	lsl	x3, x8, #4
 684:	and	w2, w1, w2
 688:	add	x8, x4, x3
 68c:	ldr	w3, [x4, x3]
 690:	cmp	w0, w3
 694:	b.eq	2ec <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ec>  // b.none
 698:	mov	x6, x5
 69c:	mov	x5, x8
 6a0:	b	3e8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3e8>
 6a4:	mov	x2, x3
 6a8:	mov	x3, x5
 6ac:	b	190 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x190>
 6b0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6b4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6b8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6bc:	add	x3, x3, #0x0
 6c0:	add	x1, x1, #0x0
 6c4:	add	x0, x0, #0x0
 6c8:	mov	w2, #0x250                 	// #592
 6cc:	stp	x27, x28, [sp, #80]
 6d0:	bl	0 <__assert_fail>
 6d4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6dc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6e0:	add	x3, x3, #0x0
 6e4:	add	x1, x1, #0x0
 6e8:	add	x0, x0, #0x0
 6ec:	mov	w2, #0x68                  	// #104
 6f0:	bl	0 <__assert_fail>
 6f4:	add	w3, w3, w7
 6f8:	cmp	x6, #0x0
 6fc:	and	w8, w1, w3
 700:	ccmn	w4, #0x2, #0x0, eq  // eq = none
 704:	csel	x6, x6, x2, ne  // ne = any
 708:	add	w7, w7, #0x1
 70c:	lsl	x4, x8, #4
 710:	and	w3, w1, w3
 714:	add	x2, x0, x8, lsl #4
 718:	ldr	w4, [x0, x4]
 71c:	cmp	w22, w4
 720:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 724:	b	498 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x498>
 728:	add	w23, w23, w6
 72c:	cmp	x4, #0x0
 730:	and	w7, w1, w23
 734:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 738:	csel	x4, x4, x2, ne  // ne = any
 73c:	add	w6, w6, #0x1
 740:	lsl	x3, x7, #4
 744:	and	w23, w1, w23
 748:	add	x2, x0, x7, lsl #4
 74c:	ldr	w3, [x0, x3]
 750:	cmp	w22, w3
 754:	b.eq	1d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1d8>  // b.none
 758:	b	4f8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4f8>
 75c:	stp	x27, x28, [sp, #80]
 760:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 764:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 768:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 76c:	add	x3, x3, #0x0
 770:	add	x1, x1, #0x0
 774:	add	x0, x0, #0x0
 778:	mov	w2, #0x15b                 	// #347
 77c:	bl	0 <__assert_fail>
 780:	mov	x0, #0x0                   	// #0
 784:	str	wzr, [x0]
 788:	brk	#0x3e8

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldp	x19, x0, [x0, #8]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	cmp	x19, x0
  20:	b.eq	4c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x4c>  // b.none
  24:	ldr	w2, [x1]
  28:	add	x0, x19, #0x10
  2c:	ldr	x1, [x1, #8]
  30:	str	w2, [x19]
  34:	str	x1, [x19, #8]
  38:	str	x0, [x20, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x29, x30, [sp], #80
  48:	ret
  4c:	stp	x23, x24, [sp, #48]
  50:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  54:	ldr	x23, [x20]
  58:	stp	x25, x26, [sp, #64]
  5c:	sub	x24, x19, x23
  60:	asr	x0, x24, #4
  64:	cmp	x1, x24, asr #4
  68:	b.eq	12c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x12c>  // b.none
  6c:	cbz	x0, 124 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x124>
  70:	cmp	x0, x0, lsl #1
  74:	mov	x25, #0x7ffffffffffffff0    	// #9223372036854775792
  78:	lsl	x0, x0, #1
  7c:	b.ls	110 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x110>  // b.plast
  80:	mov	x0, x25
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	add	x25, x0, x25
  90:	add	x26, x0, #0x10
  94:	add	x0, x22, x24
  98:	ldr	w1, [x21]
  9c:	str	w1, [x22, x24]
  a0:	cmp	x19, x23
  a4:	ldr	x1, [x21, #8]
  a8:	str	x1, [x0, #8]
  ac:	b.eq	e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xe4>  // b.none
  b0:	mov	x2, x22
  b4:	mov	x1, x23
  b8:	ldr	w4, [x1]
  bc:	add	x1, x1, #0x10
  c0:	ldur	x3, [x1, #-8]
  c4:	str	w4, [x2]
  c8:	str	x3, [x2, #8]
  cc:	cmp	x19, x1
  d0:	add	x2, x2, #0x10
  d4:	b.ne	b8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xb8>  // b.any
  d8:	sub	x19, x19, x23
  dc:	add	x19, x19, #0x10
  e0:	add	x26, x22, x19
  e4:	cbz	x23, f0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x23, x24, [sp, #48]
  f4:	stp	x22, x26, [x20]
  f8:	str	x25, [x20, #16]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x25, x26, [sp, #64]
 108:	ldp	x29, x30, [sp], #80
 10c:	ret
 110:	cbnz	x0, 138 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x138>
 114:	mov	x26, #0x10                  	// #16
 118:	mov	x25, #0x0                   	// #0
 11c:	mov	x22, #0x0                   	// #0
 120:	b	94 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x94>
 124:	mov	x25, #0x10                  	// #16
 128:	b	80 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x80>
 12c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>
 130:	add	x0, x0, #0x0
 134:	bl	0 <_ZSt20__throw_length_errorPKc>
 138:	cmp	x0, x1
 13c:	csel	x0, x0, x1, ls  // ls = plast
 140:	lsl	x25, x0, #4
 144:	b	80 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x80>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	cbz	x1, 74 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x74>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	ldp	x2, x0, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x1
  24:	ldr	x1, [x21, #16]
  28:	sub	x19, x0, x2
  2c:	sub	x1, x1, x0
  30:	asr	x22, x19, #4
  34:	cmp	x20, x1, asr #4
  38:	sub	x2, x3, x22
  3c:	b.hi	78 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x78>  // b.pmore
  40:	mov	x2, x0
  44:	mov	x3, x20
  48:	str	wzr, [x2]
  4c:	subs	x3, x3, #0x1
  50:	str	xzr, [x2, #8]
  54:	add	x2, x2, #0x10
  58:	b.ne	48 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x48>  // b.any
  5c:	add	x20, x0, x20, lsl #4
  60:	str	x20, [x21, #8]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ret
  78:	stp	x23, x24, [sp, #48]
  7c:	cmp	x2, x20
  80:	b.cc	128 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x128>  // b.lo, b.ul, b.last
  84:	cmp	x22, x20
  88:	csel	x23, x22, x20, cs  // cs = hs, nlast
  8c:	add	x23, x22, x23
  90:	cmp	x23, x3
  94:	csel	x23, x23, x3, ls  // ls = plast
  98:	lsl	x23, x23, #4
  9c:	mov	x0, x23
  a0:	bl	0 <_Znwm>
  a4:	mov	x1, x20
  a8:	mov	x24, x0
  ac:	add	x2, x0, x19
  b0:	str	wzr, [x2]
  b4:	subs	x1, x1, #0x1
  b8:	str	xzr, [x2, #8]
  bc:	add	x2, x2, #0x10
  c0:	b.ne	b0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb0>  // b.any
  c4:	ldp	x0, x5, [x21]
  c8:	mov	x1, x24
  cc:	mov	x2, x0
  d0:	cmp	x0, x5
  d4:	b.eq	f8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf8>  // b.none
  d8:	ldr	w4, [x2]
  dc:	add	x2, x2, #0x10
  e0:	ldur	x3, [x2, #-8]
  e4:	str	w4, [x1]
  e8:	str	x3, [x1, #8]
  ec:	cmp	x5, x2
  f0:	add	x1, x1, #0x10
  f4:	b.ne	d8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd8>  // b.any
  f8:	cbz	x0, 100 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x100>
  fc:	bl	0 <_ZdlPv>
 100:	add	x20, x22, x20
 104:	add	x23, x24, x23
 108:	str	x23, [x21, #16]
 10c:	add	x20, x24, x20, lsl #4
 110:	stp	x24, x20, [x21]
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #64
 124:	ret
 128:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	150 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 138 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	124 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	ldr	w1, [x25]
  74:	str	w1, [x22, x27]
  78:	cmp	x19, x24
  7c:	ldr	x1, [x25, #8]
  80:	str	x1, [x0, #8]
  84:	b.eq	bc <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xbc>  // b.none
  88:	mov	x3, x22
  8c:	mov	x2, x24
  90:	ldr	w4, [x2]
  94:	add	x2, x2, #0x10
  98:	ldur	x1, [x2, #-8]
  9c:	str	w4, [x3]
  a0:	str	x1, [x3, #8]
  a4:	cmp	x19, x2
  a8:	add	x3, x3, #0x10
  ac:	b.ne	90 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x90>  // b.any
  b0:	sub	x21, x19, x24
  b4:	add	x21, x21, #0x10
  b8:	add	x21, x22, x21
  bc:	cmp	x19, x20
  c0:	b.eq	f4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf4>  // b.none
  c4:	mov	x2, x19
  c8:	mov	x3, x21
  cc:	nop
  d0:	ldr	x1, [x2, #8]
  d4:	str	x1, [x3, #8]
  d8:	ldr	w1, [x2], #16
  dc:	add	x3, x3, #0x10
  e0:	stur	w1, [x3, #-16]
  e4:	cmp	x2, x20
  e8:	b.ne	d0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>  // b.any
  ec:	sub	x2, x2, x19
  f0:	add	x21, x21, x2
  f4:	cbz	x24, 100 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x100>
  f8:	mov	x0, x24
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldr	x27, [sp, #80]
 108:	stp	x22, x21, [x23]
 10c:	str	x26, [x23, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x25, x26, [sp, #64]
 11c:	ldp	x29, x30, [sp], #96
 120:	ret
 124:	cbnz	x0, 140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>
 128:	mov	x21, #0x10                  	// #16
 12c:	mov	x26, #0x0                   	// #0
 130:	mov	x22, #0x0                   	// #0
 134:	b	6c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x6c>
 138:	mov	x26, #0x10                  	// #16
 13c:	b	58 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 140:	cmp	x0, x3
 144:	csel	x0, x0, x3, ls  // ls = plast
 148:	lsl	x26, x0, #4
 14c:	b	58 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag>:
   0:	mov	x2, x0
   4:	sub	x0, x1, x0
   8:	mov	x3, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
   c:	asr	x0, x0, #3
  10:	movk	x3, #0xf0f1
  14:	mul	x0, x0, x3
  18:	cmp	xzr, x0, asr #2
  1c:	asr	x4, x0, #2
  20:	b.ge	a8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xa8>  // b.tcont
  24:	add	x4, x4, x4, lsl #4
  28:	add	x4, x2, x4, lsl #5
  2c:	b	78 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x78>
  30:	ldr	x3, [x2, #168]
  34:	ldr	w0, [x2, #200]
  38:	cmp	x3, #0x0
  3c:	cinc	w0, w0, ne  // ne = any
  40:	cbnz	w0, 11c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x11c>
  44:	ldr	x3, [x2, #304]
  48:	ldr	w0, [x2, #336]
  4c:	cmp	x3, #0x0
  50:	cinc	w0, w0, ne  // ne = any
  54:	cbnz	w0, 124 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x124>
  58:	ldr	x3, [x2, #440]
  5c:	ldr	w0, [x2, #472]
  60:	cmp	x3, #0x0
  64:	cinc	w0, w0, ne  // ne = any
  68:	cbnz	w0, 12c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x12c>
  6c:	add	x2, x2, #0x220
  70:	cmp	x2, x4
  74:	b.eq	94 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x94>  // b.none
  78:	ldr	x3, [x2, #32]
  7c:	ldr	w0, [x2, #64]
  80:	cmp	x3, #0x0
  84:	cinc	w0, w0, ne  // ne = any
  88:	cbz	w0, 30 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x30>
  8c:	mov	x0, x2
  90:	ret
  94:	sub	x0, x1, x2
  98:	mov	x3, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  9c:	movk	x3, #0xf0f1
  a0:	asr	x0, x0, #3
  a4:	mul	x0, x0, x3
  a8:	cmp	x0, #0x2
  ac:	b.eq	e4 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xe4>  // b.none
  b0:	cmp	x0, #0x3
  b4:	b.eq	c8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xc8>  // b.none
  b8:	cmp	x0, #0x1
  bc:	b.eq	100 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x100>  // b.none
  c0:	mov	x0, x1
  c4:	ret
  c8:	ldr	x4, [x2, #32]
  cc:	mov	x0, x2
  d0:	ldr	w3, [x2, #64]
  d4:	cmp	x4, #0x0
  d8:	cinc	w3, w3, ne  // ne = any
  dc:	cbnz	w3, 90 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x90>
  e0:	add	x2, x2, #0x88
  e4:	ldr	x4, [x2, #32]
  e8:	mov	x0, x2
  ec:	ldr	w3, [x2, #64]
  f0:	cmp	x4, #0x0
  f4:	cinc	w3, w3, ne  // ne = any
  f8:	cbnz	w3, 90 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x90>
  fc:	add	x2, x2, #0x88
 100:	ldr	x3, [x2, #32]
 104:	ldr	w0, [x2, #64]
 108:	cmp	x3, #0x0
 10c:	cinc	w0, w0, ne  // ne = any
 110:	cmp	w0, #0x0
 114:	csel	x0, x1, x2, eq  // eq = none
 118:	ret
 11c:	add	x0, x2, #0x88
 120:	ret
 124:	add	x0, x2, #0x110
 128:	ret
 12c:	add	x0, x2, #0x198
 130:	ret

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x2d                  	// #45
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>:
      28:	sub	x15, x2, #0x1
      2c:	sub	sp, sp, #0x20
      30:	and	x16, x2, #0x1
      34:	add	x15, x15, x15, lsr #63
      38:	ldr	x13, [x3]
      3c:	cmp	x1, x15, asr #1
      40:	b.ge	184 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x15c>  // b.tcont
      44:	asr	x15, x15, #1
      48:	mov	x6, x1
      4c:	nop
      50:	add	x5, x6, #0x1
      54:	add	x11, x6, x6, lsl #1
      58:	lsl	x9, x5, #1
      5c:	add	x14, x0, x11, lsl #3
      60:	add	x5, x9, x5, lsl #2
      64:	sub	x4, x9, #0x1
      68:	add	x6, x4, x4, lsl #1
      6c:	add	x12, x0, x5, lsl #3
      70:	ldr	x10, [x0, x5, lsl #3]
      74:	fmov	d0, x10
      78:	ldr	x7, [x0, x6, lsl #3]
      7c:	cnt	v1.8b, v0.8b
      80:	fmov	d0, x7
      84:	add	x8, x0, x6, lsl #3
      88:	cnt	v0.8b, v0.8b
      8c:	addv	b1, v1.8b
      90:	addv	b0, v0.8b
      94:	umov	w6, v1.b[0]
      98:	umov	w5, v0.b[0]
      9c:	cmp	w6, w5
      a0:	b.cc	c0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x98>  // b.lo, b.ul, b.last
      a4:	cmp	x10, x7
      a8:	ccmp	w6, w5, #0x0, cc  // cc = lo, ul, last
      ac:	cset	w5, eq  // eq = none
      b0:	csel	x7, x7, x10, eq  // eq = none
      b4:	cmp	w5, #0x0
      b8:	csel	x8, x8, x12, ne  // ne = any
      bc:	csel	x4, x4, x9, ne  // ne = any
      c0:	str	x7, [x0, x11, lsl #3]
      c4:	mov	x6, x4
      c8:	ldp	x10, x11, [x8, #8]
      cc:	stp	x10, x11, [x14, #8]
      d0:	cmp	x4, x15
      d4:	b.lt	50 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x28>  // b.tstop
      d8:	cbz	x16, 198 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x170>
      dc:	sub	x2, x4, #0x1
      e0:	cmp	x4, x1
      e4:	ldp	x6, x7, [x3]
      e8:	add	x2, x2, x2, lsr #63
      ec:	ldr	x5, [x3, #16]
      f0:	stp	x6, x7, [sp, #8]
      f4:	asr	x3, x2, #1
      f8:	str	x5, [sp, #24]
      fc:	b.le	170 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x148>
     100:	fmov	d0, x13
     104:	cnt	v0.8b, v0.8b
     108:	addv	b0, v0.8b
     10c:	umov	w6, v0.b[0]
     110:	add	x5, x3, x3, lsl #1
     114:	sub	x2, x3, #0x1
     118:	add	x7, x4, x4, lsl #1
     11c:	add	x8, x0, x5, lsl #3
     120:	add	x2, x2, x2, lsr #63
     124:	ldr	d1, [x0, x5, lsl #3]
     128:	add	x9, x0, x7, lsl #3
     12c:	asr	x2, x2, #1
     130:	cnt	v0.8b, v1.8b
     134:	addv	b0, v0.8b
     138:	umov	w5, v0.b[0]
     13c:	cmp	w5, w6
     140:	b.cc	154 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x12c>  // b.lo, b.ul, b.last
     144:	fmov	x10, d1
     148:	cmp	x10, x13
     14c:	ccmp	w5, w6, #0x0, cc  // cc = lo, ul, last
     150:	b.ne	1d4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x1ac>  // b.any
     154:	str	d1, [x0, x7, lsl #3]
     158:	cmp	x1, x3
     15c:	ldp	x4, x5, [x8, #8]
     160:	stp	x4, x5, [x9, #8]
     164:	mov	x4, x3
     168:	mov	x3, x2
     16c:	b.lt	110 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xe8>  // b.tstop
     170:	ldp	x0, x1, [sp, #16]
     174:	str	x13, [x8]
     178:	stp	x0, x1, [x8, #8]
     17c:	add	sp, sp, #0x20
     180:	ret
     184:	add	x8, x1, x1, lsl #1
     188:	mov	x4, x1
     18c:	add	x8, x0, x8, lsl #3
     190:	cbnz	x16, 1ec <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x1c4>
     194:	nop
     198:	sub	x2, x2, #0x2
     19c:	add	x2, x2, x2, lsr #63
     1a0:	cmp	x4, x2, asr #1
     1a4:	b.ne	dc <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xb4>  // b.any
     1a8:	lsl	x4, x4, #1
     1ac:	add	x4, x4, #0x1
     1b0:	add	x2, x4, x4, lsl #1
     1b4:	lsl	x2, x2, #3
     1b8:	add	x5, x0, x2
     1bc:	ldr	x2, [x0, x2]
     1c0:	ldp	x6, x7, [x5, #8]
     1c4:	str	x2, [x8]
     1c8:	stp	x6, x7, [x8, #8]
     1cc:	mov	x8, x5
     1d0:	b	dc <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xb4>
     1d4:	mov	x8, x9
     1d8:	ldp	x0, x1, [sp, #16]
     1dc:	str	x13, [x8]
     1e0:	stp	x0, x1, [x8, #8]
     1e4:	add	sp, sp, #0x20
     1e8:	ret
     1ec:	ldp	x0, x1, [x3]
     1f0:	stp	x0, x1, [sp, #8]
     1f4:	ldr	x0, [x3, #16]
     1f8:	str	x0, [sp, #24]
     1fc:	b	170 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x148>

0000000000000200 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>:
     200:	mov	x6, x0
     204:	sub	sp, sp, #0x20
     208:	add	x12, x0, #0x8
     20c:	sub	x11, x0, #0x10
     210:	ldp	x4, x5, [x0]
     214:	mov	x2, #0x0                   	// #0
     218:	ldr	x10, [x6], #-24
     21c:	fmov	d0, x10
     220:	ldr	x1, [x0, #16]
     224:	cnt	v0.8b, v0.8b
     228:	stp	x4, x5, [sp, #8]
     22c:	str	x1, [sp, #24]
     230:	addv	b0, v0.8b
     234:	umov	w3, v0.b[0]
     238:	ldr	d1, [x6, x2]
     23c:	add	x5, x11, x2
     240:	add	x4, x12, x2
     244:	add	x7, x0, x2
     248:	cnt	v0.8b, v1.8b
     24c:	addv	b0, v0.8b
     250:	umov	w1, v0.b[0]
     254:	cmp	w3, w1
     258:	b.cc	26c <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x6c>  // b.lo, b.ul, b.last
     25c:	fmov	x8, d1
     260:	cmp	x10, x8
     264:	ccmp	w3, w1, #0x0, cc  // cc = lo, ul, last
     268:	b.ne	280 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x80>  // b.any
     26c:	str	d1, [x0, x2]
     270:	sub	x2, x2, #0x18
     274:	ldp	x8, x9, [x5]
     278:	stp	x8, x9, [x4]
     27c:	b	238 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x38>
     280:	ldp	x0, x1, [sp, #16]
     284:	str	x10, [x7]
     288:	stp	x0, x1, [x7, #8]
     28c:	add	sp, sp, #0x20
     290:	ret
     294:	nop

0000000000000298 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>:
     298:	cmp	x0, x1
     29c:	b.eq	3bc <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x124>  // b.none
     2a0:	stp	x29, x30, [sp, #-80]!
     2a4:	add	x13, x0, #0x18
     2a8:	cmp	x1, x13
     2ac:	mov	x29, sp
     2b0:	stp	x21, x22, [sp, #32]
     2b4:	mov	x21, x0
     2b8:	mov	x22, x1
     2bc:	b.eq	3b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x118>  // b.none
     2c0:	add	x15, x0, #0x8
     2c4:	mov	x18, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     2c8:	add	x14, x0, #0x20
     2cc:	movk	x18, #0xaaab
     2d0:	stp	x19, x20, [sp, #16]
     2d4:	mov	x20, x0
     2d8:	mov	x19, x15
     2dc:	b	30c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x74>
     2e0:	fmov	x1, d2
     2e4:	fmov	x4, d3
     2e8:	cmp	x1, x4
     2ec:	ccmp	w3, w2, #0x0, cc  // cc = lo, ul, last
     2f0:	b.eq	33c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xa4>  // b.none
     2f4:	bl	200 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>
     2f8:	add	x20, x20, #0x18
     2fc:	add	x19, x19, #0x18
     300:	add	x14, x14, #0x18
     304:	cmp	x22, x13
     308:	b.eq	3ac <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x114>  // b.none
     30c:	ldr	d2, [x13]
     310:	mov	x0, x13
     314:	ldr	d3, [x21]
     318:	add	x13, x13, #0x18
     31c:	cnt	v1.8b, v2.8b
     320:	cnt	v0.8b, v3.8b
     324:	addv	b1, v1.8b
     328:	addv	b0, v0.8b
     32c:	umov	w3, v1.b[0]
     330:	umov	w2, v0.b[0]
     334:	cmp	w3, w2
     338:	b.cs	2e0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x48>  // b.hs, b.nlast
     33c:	sub	x6, x0, x21
     340:	mov	x2, #0x0                   	// #0
     344:	ldp	x4, x5, [x13, #-24]
     348:	asr	x3, x6, #3
     34c:	ldur	x1, [x13, #-8]
     350:	stp	x4, x5, [sp, #56]
     354:	mul	x3, x3, x18
     358:	str	x1, [sp, #72]
     35c:	cmp	x6, #0x0
     360:	b.le	38c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xf4>
     364:	nop
     368:	add	x5, x19, x2
     36c:	add	x4, x14, x2
     370:	ldr	x6, [x20, x2]
     374:	str	x6, [x0, x2]
     378:	ldp	x6, x7, [x5]
     37c:	stp	x6, x7, [x4]
     380:	subs	x3, x3, #0x1
     384:	sub	x2, x2, #0x18
     388:	b.ne	368 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xd0>  // b.any
     38c:	str	d2, [x21]
     390:	add	x20, x20, #0x18
     394:	ldp	x0, x1, [sp, #64]
     398:	stp	x0, x1, [x15]
     39c:	add	x19, x19, #0x18
     3a0:	add	x14, x14, #0x18
     3a4:	cmp	x22, x13
     3a8:	b.ne	30c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x74>  // b.any
     3ac:	ldp	x19, x20, [sp, #16]
     3b0:	ldp	x21, x22, [sp, #32]
     3b4:	ldp	x29, x30, [sp], #80
     3b8:	ret
     3bc:	ret

00000000000003c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>:
     3c0:	stp	x29, x30, [sp, #-160]!
     3c4:	mov	x29, sp
     3c8:	stp	x19, x20, [sp, #16]
     3cc:	mov	x19, x0
     3d0:	sub	x0, x1, x0
     3d4:	cmp	x0, #0x180
     3d8:	b.le	780 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x3c0>
     3dc:	stp	x21, x22, [sp, #32]
     3e0:	stp	x23, x24, [sp, #48]
     3e4:	stp	x25, x26, [sp, #64]
     3e8:	mov	x25, x2
     3ec:	cbz	x2, 7a8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x3e8>
     3f0:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     3f4:	mov	x9, x1
     3f8:	mov	w26, w3
     3fc:	add	x23, x19, #0x18
     400:	add	x20, x19, #0x8
     404:	add	x22, x19, #0x30
     408:	movk	x21, #0xaaab
     40c:	str	x27, [sp, #80]
     410:	sub	x0, x9, x19
     414:	ldrb	w4, [x19, #16]
     418:	ldr	x8, [x19, #24]
     41c:	asr	x0, x0, #3
     420:	fmov	d0, x8
     424:	ldr	w10, [x19, #20]
     428:	ldur	d2, [x9, #-24]
     42c:	mul	x0, x0, x21
     430:	cnt	v0.8b, v0.8b
     434:	sub	x25, x25, #0x1
     438:	ldp	w6, w7, [x19, #8]
     43c:	add	x0, x0, x0, lsr #63
     440:	and	x1, x0, #0xfffffffffffffffe
     444:	cnt	v1.8b, v2.8b
     448:	add	x0, x1, x0, asr #1
     44c:	addv	b0, v0.8b
     450:	ldr	x2, [x19]
     454:	add	x13, x19, x0, lsl #3
     458:	ldr	x12, [x19, x0, lsl #3]
     45c:	umov	w1, v0.b[0]
     460:	fmov	d0, x12
     464:	addv	b1, v1.8b
     468:	cnt	v0.8b, v0.8b
     46c:	umov	w11, v1.b[0]
     470:	mov	w5, w1
     474:	addv	b0, v0.8b
     478:	umov	w3, v0.b[0]
     47c:	cmp	w1, w3
     480:	b.cc	4f8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x138>  // b.lo, b.ul, b.last
     484:	cmp	x8, x12
     488:	ccmp	w1, w3, #0x0, cc  // cc = lo, ul, last
     48c:	b.eq	4f8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x138>  // b.none
     490:	cmp	w1, w11
     494:	b.cc	640 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x280>  // b.lo, b.ul, b.last
     498:	fmov	x14, d2
     49c:	cmp	x8, x14
     4a0:	ccmp	w1, w11, #0x0, cc  // cc = lo, ul, last
     4a4:	b.eq	640 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x280>  // b.none
     4a8:	cmp	w3, w11
     4ac:	b.cc	524 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x164>  // b.lo, b.ul, b.last
     4b0:	cmp	x12, x14
     4b4:	ccmp	w3, w11, #0x0, cc  // cc = lo, ul, last
     4b8:	b.eq	524 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x164>  // b.none
     4bc:	str	x12, [x19]
     4c0:	str	x2, [x19, x0, lsl #3]
     4c4:	ldp	x0, x1, [x13, #8]
     4c8:	stp	x0, x1, [x20]
     4cc:	ldr	x8, [x19]
     4d0:	fmov	d0, x8
     4d4:	ldur	x3, [x9, #-24]
     4d8:	cnt	v0.8b, v0.8b
     4dc:	ldr	x2, [x19, #24]
     4e0:	stp	w6, w7, [x13, #8]
     4e4:	strb	w4, [x13, #16]
     4e8:	addv	b0, v0.8b
     4ec:	str	w10, [x13, #20]
     4f0:	umov	w5, v0.b[0]
     4f4:	b	55c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x19c>
     4f8:	cmp	w3, w11
     4fc:	b.cc	664 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2a4>  // b.lo, b.ul, b.last
     500:	fmov	x14, d2
     504:	cmp	x12, x14
     508:	ccmp	w3, w11, #0x0, cc  // cc = lo, ul, last
     50c:	b.eq	664 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2a4>  // b.none
     510:	cmp	w1, w11
     514:	b.cc	524 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x164>  // b.lo, b.ul, b.last
     518:	cmp	x8, x14
     51c:	ccmp	w1, w11, #0x0, cc  // cc = lo, ul, last
     520:	b.ne	640 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x280>  // b.any
     524:	ldp	x0, x1, [x9, #-16]
     528:	str	d2, [x19]
     52c:	stur	x2, [x9, #-24]
     530:	mov	x3, x2
     534:	stp	x0, x1, [x20]
     538:	ldr	x8, [x19]
     53c:	fmov	d0, x8
     540:	ldr	x2, [x19, #24]
     544:	cnt	v0.8b, v0.8b
     548:	stp	w6, w7, [x9, #-16]
     54c:	sturb	w4, [x9, #-8]
     550:	stur	w10, [x9, #-4]
     554:	addv	b0, v0.8b
     558:	umov	w5, v0.b[0]
     55c:	mov	x7, x22
     560:	mov	x27, x23
     564:	mov	x4, x9
     568:	fmov	d0, x2
     56c:	mov	x24, x27
     570:	cnt	v0.8b, v0.8b
     574:	addv	b0, v0.8b
     578:	umov	w6, v0.b[0]
     57c:	cmp	w6, w5
     580:	b.cc	608 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x248>  // b.lo, b.ul, b.last
     584:	cmp	x2, x8
     588:	ccmp	w6, w5, #0x0, cc  // cc = lo, ul, last
     58c:	b.eq	608 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x248>  // b.none
     590:	sub	x4, x4, #0x18
     594:	fmov	d0, x3
     598:	cnt	v0.8b, v0.8b
     59c:	addv	b0, v0.8b
     5a0:	umov	w0, v0.b[0]
     5a4:	cmp	w5, w0
     5a8:	b.cc	5b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1f8>  // b.lo, b.ul, b.last
     5ac:	cmp	x8, x3
     5b0:	ccmp	w5, w0, #0x0, cc  // cc = lo, ul, last
     5b4:	b.ne	5c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x200>  // b.any
     5b8:	ldr	x3, [x4, #-24]!
     5bc:	b	594 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1d4>
     5c0:	cmp	x27, x4
     5c4:	b.cs	614 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x254>  // b.hs, b.nlast
     5c8:	stur	x3, [x7, #-24]
     5cc:	ldp	w6, w5, [x7, #-16]
     5d0:	ldurb	w1, [x7, #-8]
     5d4:	ldur	w0, [x7, #-4]
     5d8:	str	x2, [x4]
     5dc:	ldp	x2, x3, [x4, #8]
     5e0:	ldr	x8, [x19]
     5e4:	fmov	d0, x8
     5e8:	stp	x2, x3, [x7, #-16]
     5ec:	cnt	v0.8b, v0.8b
     5f0:	stp	w6, w5, [x4, #8]
     5f4:	ldur	x3, [x4, #-24]
     5f8:	strb	w1, [x4, #16]
     5fc:	addv	b0, v0.8b
     600:	str	w0, [x4, #20]
     604:	umov	w5, v0.b[0]
     608:	add	x27, x27, #0x18
     60c:	ldr	x2, [x7], #24
     610:	b	568 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1a8>
     614:	mov	x0, x27
     618:	mov	x1, x9
     61c:	mov	w3, w26
     620:	mov	x2, x25
     624:	bl	3c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
     628:	sub	x0, x27, x19
     62c:	cmp	x0, #0x180
     630:	b.le	78c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x3cc>
     634:	cbz	x25, 6a0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2e0>
     638:	mov	x9, x27
     63c:	b	410 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x50>
     640:	str	x8, [x19]
     644:	str	x2, [x19, #24]
     648:	ldp	x0, x1, [x19, #32]
     64c:	stp	x0, x1, [x20]
     650:	strb	w4, [x19, #40]
     654:	ldur	x3, [x9, #-24]
     658:	stp	w6, w7, [x19, #32]
     65c:	str	w10, [x19, #44]
     660:	b	55c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x19c>
     664:	str	x12, [x19]
     668:	str	x2, [x19, x0, lsl #3]
     66c:	ldp	x0, x1, [x13, #8]
     670:	stp	x0, x1, [x20]
     674:	ldr	x8, [x19]
     678:	fmov	d0, x8
     67c:	ldur	x3, [x9, #-24]
     680:	cnt	v0.8b, v0.8b
     684:	ldr	x2, [x19, #24]
     688:	stp	w6, w7, [x13, #8]
     68c:	strb	w4, [x13, #16]
     690:	addv	b0, v0.8b
     694:	str	w10, [x13, #20]
     698:	umov	w5, v0.b[0]
     69c:	b	55c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x19c>
     6a0:	ldr	x27, [sp, #80]
     6a4:	asr	x0, x0, #3
     6a8:	mov	x18, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     6ac:	add	x23, sp, #0x88
     6b0:	movk	x18, #0xaaab
     6b4:	add	x21, sp, #0x60
     6b8:	mul	x18, x0, x18
     6bc:	sub	x25, x18, #0x2
     6c0:	and	x22, x25, #0xfffffffffffffffe
     6c4:	asr	x25, x25, #1
     6c8:	add	x22, x22, x25
     6cc:	add	x22, x19, x22, lsl #3
     6d0:	b	6d8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x318>
     6d4:	sub	x25, x25, #0x1
     6d8:	ldp	x6, x7, [x22]
     6dc:	stp	x6, x7, [x23]
     6e0:	mov	x3, x21
     6e4:	ldr	x4, [x22, #16]
     6e8:	stp	x6, x7, [x21]
     6ec:	mov	x2, x18
     6f0:	str	x4, [x23, #16]
     6f4:	mov	x1, x25
     6f8:	str	x4, [x21, #16]
     6fc:	mov	x0, x19
     700:	sub	x22, x22, #0x18
     704:	bl	28 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     708:	cbnz	x25, 6d4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x314>
     70c:	sub	x18, x24, #0x18
     710:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     714:	sub	x24, x24, #0x10
     718:	movk	x25, #0xaaab
     71c:	nop
     720:	sub	x22, x18, x19
     724:	sub	x18, x18, #0x18
     728:	ldr	x0, [x19]
     72c:	asr	x2, x22, #3
     730:	ldp	x4, x5, [x20]
     734:	mov	x3, x21
     738:	ldp	x8, x9, [x18, #24]
     73c:	str	x0, [x18, #24]
     740:	stp	x8, x9, [x23]
     744:	mul	x2, x2, x25
     748:	mov	x0, x19
     74c:	ldr	x6, [x18, #40]
     750:	stp	x4, x5, [x24]
     754:	mov	x1, #0x0                   	// #0
     758:	stp	x8, x9, [x21]
     75c:	sub	x24, x24, #0x18
     760:	str	x6, [x23, #16]
     764:	str	x6, [x21, #16]
     768:	bl	28 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     76c:	cmp	x22, #0x18
     770:	b.gt	720 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x360>
     774:	ldp	x21, x22, [sp, #32]
     778:	ldp	x23, x24, [sp, #48]
     77c:	ldp	x25, x26, [sp, #64]
     780:	ldp	x19, x20, [sp, #16]
     784:	ldp	x29, x30, [sp], #160
     788:	ret
     78c:	ldp	x19, x20, [sp, #16]
     790:	ldp	x21, x22, [sp, #32]
     794:	ldp	x23, x24, [sp, #48]
     798:	ldp	x25, x26, [sp, #64]
     79c:	ldr	x27, [sp, #80]
     7a0:	ldp	x29, x30, [sp], #160
     7a4:	ret
     7a8:	mov	x24, x1
     7ac:	add	x20, x19, #0x8
     7b0:	b	6a4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2e4>
     7b4:	nop

00000000000007b8 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
     7b8:	stp	x29, x30, [sp, #-48]!
     7bc:	mov	x5, x1
     7c0:	add	x1, x0, #0x30
     7c4:	mov	x29, sp
     7c8:	stp	x19, x20, [sp, #16]
     7cc:	mov	x19, x0
     7d0:	mov	x0, #0x800000000           	// #34359738368
     7d4:	mov	w6, #0x101                 	// #257
     7d8:	stp	x1, x0, [x19, #32]
     7dc:	ldr	x0, [x5, #152]
     7e0:	str	xzr, [x19, #128]
     7e4:	str	wzr, [x19, #136]
     7e8:	str	xzr, [x19, #160]
     7ec:	str	wzr, [x19, #168]
     7f0:	str	x5, [x19]
     7f4:	ldr	w20, [x0, #48]
     7f8:	stp	x2, x3, [x19, #8]
     7fc:	mov	w2, w20
     800:	str	x4, [x19, #24]
     804:	stp	xzr, xzr, [x19, #112]
     808:	stp	xzr, xzr, [x19, #144]
     80c:	strh	w6, [x19, #176]
     810:	cbz	w20, 848 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x90>
     814:	cmp	x2, #0x8
     818:	b.hi	854 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x9c>  // b.pmore
     81c:	add	x3, x1, x2, lsl #3
     820:	mov	x0, x1
     824:	mov	x4, #0x8                   	// #8
     828:	str	xzr, [x0], #8
     82c:	cmp	x3, x0
     830:	b.ne	828 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x70>  // b.any
     834:	cmp	x2, x4
     838:	b.hi	884 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xcc>  // b.pmore
     83c:	ldr	x0, [x19]
     840:	ldr	x0, [x0, #152]
     844:	str	w20, [x19, #40]
     848:	ldp	x19, x20, [sp, #16]
     84c:	ldp	x29, x30, [sp], #48
     850:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     854:	add	x0, x19, #0x20
     858:	mov	x3, #0x8                   	// #8
     85c:	str	x2, [sp, #40]
     860:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     864:	ldp	w0, w4, [x19, #40]
     868:	ldr	x1, [x19, #32]
     86c:	ldr	x2, [sp, #40]
     870:	add	x0, x1, x0, lsl #3
     874:	add	x3, x1, x2, lsl #3
     878:	cmp	x0, x3
     87c:	b.ne	828 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x70>  // b.any
     880:	b	834 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x7c>
     884:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     888:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     88c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     890:	add	x3, x3, #0x0
     894:	add	x1, x1, #0x0
     898:	add	x0, x0, #0x0
     89c:	mov	w2, #0x43                  	// #67
     8a0:	bl	0 <__assert_fail>
     8a4:	nop

00000000000008a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
     8a8:	stp	x29, x30, [sp, #-144]!
     8ac:	mov	x29, sp
     8b0:	stp	x25, x26, [sp, #64]
     8b4:	mov	x25, x1
     8b8:	ldr	x1, [x0, #8]
     8bc:	stp	x19, x20, [sp, #16]
     8c0:	mov	x19, x2
     8c4:	stp	x21, x22, [sp, #32]
     8c8:	stp	x23, x24, [sp, #48]
     8cc:	stp	x27, x28, [sp, #80]
     8d0:	str	x0, [sp, #96]
     8d4:	ldr	w0, [x2]
     8d8:	ldr	w2, [x1, #24]
     8dc:	ldr	x22, [x1]
     8e0:	cmp	w0, w2
     8e4:	b.cs	15a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcfc>  // b.hs, b.nlast
     8e8:	ldr	x1, [sp, #96]
     8ec:	ubfiz	x0, x0, #6, #32
     8f0:	add	x22, x22, x0
     8f4:	ldr	x1, [x1]
     8f8:	ldr	x0, [x1, #152]
     8fc:	ldr	x20, [x0, #40]
     900:	cbz	x20, 1584 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcdc>
     904:	ldr	w0, [x0, #52]
     908:	cmp	w3, w0
     90c:	b.cs	15a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd00>  // b.hs, b.nlast
     910:	ldr	x1, [x22, #32]
     914:	mov	w0, #0x18                  	// #24
     918:	ldrb	w27, [x22, #4]
     91c:	umaddl	x20, w3, w0, x20
     920:	cbz	x1, 1314 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa6c>
     924:	ldrh	w0, [x1]
     928:	cbz	w0, 1314 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa6c>
     92c:	mov	w4, #0x0                   	// #0
     930:	add	w4, w4, #0x1
     934:	ldrh	w0, [x1, w4, uxtw #1]
     938:	cbnz	w0, 930 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x88>
     93c:	add	w0, w27, w4
     940:	str	w0, [sp, #136]
     944:	ldr	x0, [x22, #8]
     948:	ldrh	w1, [x22, #2]
     94c:	ldr	w3, [sp, #136]
     950:	ldr	w6, [x19, #24]
     954:	ubfx	w0, w0, #2, #1
     958:	ldr	w2, [x25, #8]
     95c:	add	w0, w3, w0
     960:	sub	w3, w6, w1
     964:	str	w3, [sp, #140]
     968:	add	w26, w0, w3
     96c:	mov	w1, w2
     970:	ldrh	w21, [x20, #16]
     974:	add	w24, w0, w3
     978:	cmp	x26, x1
     97c:	b.cs	115c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8b4>  // b.hs, b.nlast
     980:	ldr	w0, [x25, #12]
     984:	cmp	x26, x0
     988:	b.hi	15e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>  // b.pmore
     98c:	str	w24, [x25, #8]
     990:	ldr	w6, [x19, #24]
     994:	cmp	w27, #0x0
     998:	ccmp	w6, #0x0, #0x4, ne  // ne = any
     99c:	b.eq	bac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x304>  // b.none
     9a0:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     9a4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     9a8:	mov	w28, #0x0                   	// #0
     9ac:	add	x0, x0, #0x0
     9b0:	ldr	x23, [x23]
     9b4:	mov	w26, #0x0                   	// #0
     9b8:	str	x0, [sp, #128]
     9bc:	b	a24 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x17c>
     9c0:	ldrh	w1, [x20, #16]
     9c4:	ldrh	w0, [x20, #14]
     9c8:	cmp	w1, w26
     9cc:	ldr	x1, [sp, #96]
     9d0:	ldr	x1, [x1]
     9d4:	b.ls	1544 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc9c>  // b.plast
     9d8:	add	w0, w0, w26
     9dc:	ldr	x1, [x1, #136]
     9e0:	lsl	x0, x0, #2
     9e4:	add	x2, x1, x0
     9e8:	ldrsh	w0, [x1, x0]
     9ec:	tbz	w0, #31, 9f4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x14c>
     9f0:	ldr	w0, [x25, #312]
     9f4:	ldrh	w1, [x2, #2]
     9f8:	str	w0, [x24, #4]
     9fc:	ldrb	w0, [x23]
     a00:	str	w1, [x24, #12]
     a04:	strb	wzr, [x24, #16]
     a08:	cbnz	w0, a78 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1d0>
     a0c:	ldr	w6, [x19, #24]
     a10:	add	w26, w26, #0x1
     a14:	add	w28, w28, #0x1
     a18:	cmp	w6, w28
     a1c:	ccmp	w26, w27, #0x2, hi  // hi = pmore
     a20:	b.cs	bb0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x308>  // b.hs, b.nlast
     a24:	ldr	x1, [x19, #16]
     a28:	ubfiz	x0, x28, #4, #32
     a2c:	ldrb	w0, [x1, x0]
     a30:	cmp	w0, #0x1
     a34:	b.ne	a14 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x16c>  // b.any
     a38:	ldr	w0, [x25, #8]
     a3c:	cmp	x0, w26, uxtw
     a40:	b.ls	14a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     a44:	mov	w0, #0x14                  	// #20
     a48:	cmp	w21, w26
     a4c:	ldr	x9, [x25]
     a50:	umull	x8, w26, w0
     a54:	add	x24, x9, x8
     a58:	str	w28, [x9, x8]
     a5c:	b.hi	9c0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x118>  // b.pmore
     a60:	ldr	w0, [x25, #312]
     a64:	str	w0, [x24, #4]
     a68:	ldrb	w0, [x23]
     a6c:	str	wzr, [x24, #12]
     a70:	strb	wzr, [x24, #16]
     a74:	cbz	w0, a0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
     a78:	ldr	x0, [sp, #128]
     a7c:	str	w4, [sp, #104]
     a80:	stp	x8, x9, [sp, #112]
     a84:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a88:	tst	w0, #0xff
     a8c:	ldr	w4, [sp, #104]
     a90:	b.eq	a0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>  // b.none
     a94:	str	w4, [sp, #104]
     a98:	bl	0 <_ZN4llvm4dbgsEv>
     a9c:	ldp	x1, x12, [x0, #16]
     aa0:	mov	x2, x0
     aa4:	ldr	w4, [sp, #104]
     aa8:	ldp	x8, x9, [sp, #112]
     aac:	sub	x1, x1, x12
     ab0:	cmp	x1, #0x10
     ab4:	b.ls	1268 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9c0>  // b.plast
     ab8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     abc:	add	x0, x0, #0x0
     ac0:	ldp	x10, x11, [x0]
     ac4:	stp	x10, x11, [x12]
     ac8:	ldrb	w0, [x0, #16]
     acc:	strb	w0, [x12, #16]
     ad0:	ldr	x0, [x2, #24]
     ad4:	add	x0, x0, #0x11
     ad8:	str	x0, [x2, #24]
     adc:	ldrsw	x1, [x9, x8]
     ae0:	mov	x0, x2
     ae4:	str	w4, [sp, #104]
     ae8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     aec:	mov	x2, x0
     af0:	ldp	x1, x8, [x0, #16]
     af4:	ldr	w4, [sp, #104]
     af8:	sub	x1, x1, x8
     afc:	cmp	x1, #0x9
     b00:	b.ls	1248 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9a0>  // b.plast
     b04:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     b08:	add	x0, x0, #0x0
     b0c:	ldr	x1, [x0]
     b10:	str	x1, [x8]
     b14:	ldrh	w0, [x0, #8]
     b18:	strh	w0, [x8, #8]
     b1c:	ldr	x0, [x2, #24]
     b20:	add	x0, x0, #0xa
     b24:	str	x0, [x2, #24]
     b28:	ldr	w1, [x24, #4]
     b2c:	mov	x0, x2
     b30:	str	w4, [sp, #104]
     b34:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b38:	mov	x2, x0
     b3c:	ldp	x1, x10, [x0, #16]
     b40:	ldr	w4, [sp, #104]
     b44:	sub	x1, x1, x10
     b48:	cmp	x1, #0x11
     b4c:	b.ls	1228 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x980>  // b.plast
     b50:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     b54:	add	x0, x0, #0x0
     b58:	ldp	x8, x9, [x0]
     b5c:	stp	x8, x9, [x10]
     b60:	ldrh	w0, [x0, #16]
     b64:	strh	w0, [x10, #16]
     b68:	ldr	x0, [x2, #24]
     b6c:	add	x0, x0, #0x12
     b70:	str	x0, [x2, #24]
     b74:	ldr	w1, [x24, #12]
     b78:	mov	x0, x2
     b7c:	str	w4, [sp, #104]
     b80:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b84:	mov	x1, x0
     b88:	ldp	x6, x2, [x0, #16]
     b8c:	ldr	w4, [sp, #104]
     b90:	cmp	x2, x6
     b94:	b.cs	1214 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x96c>  // b.hs, b.nlast
     b98:	add	x0, x2, #0x1
     b9c:	str	x0, [x1, #24]
     ba0:	mov	w0, #0xa                   	// #10
     ba4:	strb	w0, [x2]
     ba8:	b	a0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
     bac:	mov	w26, #0x0                   	// #0
     bb0:	cmp	w26, w27
     bb4:	b.ne	15c8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd20>  // b.any
     bb8:	add	w24, w27, w4
     bbc:	mov	x26, #0x0                   	// #0
     bc0:	cbz	w4, e48 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5a0>
     bc4:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     bc8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     bcc:	add	x0, x0, #0x0
     bd0:	str	x0, [sp, #120]
     bd4:	ldr	x23, [x23]
     bd8:	b	c3c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x394>
     bdc:	ldrh	w2, [x20, #16]
     be0:	ldrh	w0, [x20, #14]
     be4:	cmp	w2, w27
     be8:	ldr	x2, [sp, #96]
     bec:	ldr	x2, [x2]
     bf0:	b.ls	1544 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc9c>  // b.plast
     bf4:	add	w0, w0, w27
     bf8:	ldr	x2, [x2, #136]
     bfc:	lsl	x0, x0, #2
     c00:	add	x9, x2, x0
     c04:	ldrsh	w0, [x2, x0]
     c08:	tbz	w0, #31, c10 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x368>
     c0c:	ldr	w0, [x25, #312]
     c10:	ldrh	w2, [x9, #2]
     c14:	str	w0, [x28, #4]
     c18:	str	w2, [x28, #12]
     c1c:	strb	wzr, [x28, #16]
     c20:	cbz	w1, 1504 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc5c>
     c24:	ldrb	w0, [x23]
     c28:	cbnz	w0, c84 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x3dc>
     c2c:	add	w27, w27, #0x1
     c30:	add	x26, x26, #0x1
     c34:	cmp	w27, w24
     c38:	b.eq	e48 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5a0>  // b.none
     c3c:	ldr	w0, [x25, #8]
     c40:	cmp	x0, w27, uxtw
     c44:	b.ls	14a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     c48:	mov	w0, #0x14                  	// #20
     c4c:	mvn	w1, w26
     c50:	ldr	x8, [x25]
     c54:	umull	x7, w27, w0
     c58:	ldr	x0, [x22, #32]
     c5c:	add	x28, x8, x7
     c60:	cmp	w21, w27
     c64:	str	w1, [x8, x7]
     c68:	ldrh	w1, [x0, x26, lsl #1]
     c6c:	strh	w1, [x28, #8]
     c70:	b.hi	bdc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x334>  // b.pmore
     c74:	ldr	w0, [x25, #312]
     c78:	str	w0, [x28, #4]
     c7c:	str	wzr, [x28, #12]
     c80:	b	c1c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x374>
     c84:	ldr	x0, [sp, #120]
     c88:	stp	x7, x8, [sp, #104]
     c8c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     c90:	tst	w0, #0xff
     c94:	b.eq	c2c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x384>  // b.none
     c98:	bl	0 <_ZN4llvm4dbgsEv>
     c9c:	mov	x1, x0
     ca0:	ldp	x2, x9, [x0, #16]
     ca4:	ldp	x7, x8, [sp, #104]
     ca8:	sub	x2, x2, x9
     cac:	cmp	x2, #0x10
     cb0:	b.ls	1128 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x880>  // b.plast
     cb4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     cb8:	add	x0, x0, #0x0
     cbc:	ldp	x10, x11, [x0]
     cc0:	stp	x10, x11, [x9]
     cc4:	ldrb	w0, [x0, #16]
     cc8:	strb	w0, [x9, #16]
     ccc:	ldr	x0, [x1, #24]
     cd0:	add	x0, x0, #0x11
     cd4:	str	x0, [x1, #24]
     cd8:	ldr	w2, [x8, x7]
     cdc:	mov	x0, x1
     ce0:	mvn	w1, w2
     ce4:	sxtw	x1, w1
     ce8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     cec:	ldp	x1, x2, [x0, #16]
     cf0:	mov	x7, x0
     cf4:	sub	x1, x1, x2
     cf8:	cmp	x1, #0x9
     cfc:	b.ls	1144 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x89c>  // b.plast
     d00:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     d04:	add	x0, x0, #0x0
     d08:	ldr	x1, [x0]
     d0c:	str	x1, [x2]
     d10:	ldrh	w0, [x0, #8]
     d14:	strh	w0, [x2, #8]
     d18:	ldr	x0, [x7, #24]
     d1c:	add	x0, x0, #0xa
     d20:	str	x0, [x7, #24]
     d24:	ldr	x0, [sp, #96]
     d28:	ldr	x1, [x0, #16]
     d2c:	ldrh	w0, [x28, #8]
     d30:	ldr	w8, [x1, #8]
     d34:	ldr	x2, [x1]
     d38:	cmp	w0, w8
     d3c:	ldr	x1, [x1, #64]
     d40:	b.cs	1564 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcbc>  // b.hs, b.nlast
     d44:	mov	w8, #0x18                  	// #24
     d48:	umull	x0, w0, w8
     d4c:	ldr	w0, [x2, x0]
     d50:	adds	x1, x1, x0
     d54:	b.eq	10a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7fc>  // b.none
     d58:	mov	x0, x1
     d5c:	stp	x1, x7, [sp, #104]
     d60:	bl	0 <strlen>
     d64:	ldp	x1, x7, [sp, #104]
     d68:	mov	x2, x0
     d6c:	ldp	x8, x0, [x7, #16]
     d70:	sub	x8, x8, x0
     d74:	cmp	x2, x8
     d78:	b.hi	1098 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7f0>  // b.pmore
     d7c:	cbz	x2, d9c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4f4>
     d80:	stp	x2, x7, [sp, #104]
     d84:	bl	0 <memcpy>
     d88:	ldp	x2, x7, [sp, #104]
     d8c:	ldp	x8, x1, [x7, #16]
     d90:	add	x0, x1, x2
     d94:	str	x0, [x7, #24]
     d98:	sub	x8, x8, x0
     d9c:	cmp	x8, #0x9
     da0:	b.ls	10b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x80c>  // b.plast
     da4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     da8:	add	x1, x1, #0x0
     dac:	ldr	x2, [x1]
     db0:	str	x2, [x0]
     db4:	ldrh	w1, [x1, #8]
     db8:	strh	w1, [x0, #8]
     dbc:	ldr	x0, [x7, #24]
     dc0:	ldr	w1, [x28, #4]
     dc4:	add	x0, x0, #0xa
     dc8:	str	x0, [x7, #24]
     dcc:	mov	x0, x7
     dd0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     dd4:	mov	x2, x0
     dd8:	ldp	x1, x7, [x0, #16]
     ddc:	sub	x1, x1, x7
     de0:	cmp	x1, #0x11
     de4:	b.ls	10ec <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x844>  // b.plast
     de8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     dec:	add	x0, x0, #0x0
     df0:	ldp	x8, x9, [x0]
     df4:	stp	x8, x9, [x7]
     df8:	ldrh	w0, [x0, #16]
     dfc:	strh	w0, [x7, #16]
     e00:	ldr	x0, [x2, #24]
     e04:	ldr	w1, [x28, #12]
     e08:	add	x0, x0, #0x12
     e0c:	str	x0, [x2, #24]
     e10:	mov	x0, x2
     e14:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e18:	mov	x1, x0
     e1c:	ldp	x3, x2, [x0, #16]
     e20:	cmp	x2, x3
     e24:	b.cs	111c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x874>  // b.hs, b.nlast
     e28:	add	x0, x2, #0x1
     e2c:	str	x0, [x1, #24]
     e30:	mov	w0, #0xa                   	// #10
     e34:	strb	w0, [x2]
     e38:	add	w27, w27, #0x1
     e3c:	add	x26, x26, #0x1
     e40:	cmp	w27, w24
     e44:	b.ne	c3c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x394>  // b.any
     e48:	ldr	x0, [x22, #8]
     e4c:	tbz	w0, #2, ea0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
     e50:	ldr	w0, [x25, #8]
     e54:	ldr	w1, [sp, #136]
     e58:	cmp	x0, w1, uxtw
     e5c:	b.ls	14a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     e60:	mov	w20, #0x14                  	// #20
     e64:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     e68:	ldr	x23, [x25]
     e6c:	umull	x20, w1, w20
     e70:	ldr	x0, [x0]
     e74:	add	x21, x23, x20
     e78:	ldrh	w1, [x22, #2]
     e7c:	mov	w2, #0x1                   	// #1
     e80:	sub	w1, w1, #0x1
     e84:	ldrb	w0, [x0]
     e88:	str	w1, [x23, x20]
     e8c:	ldr	w1, [x25, #312]
     e90:	str	w1, [x21, #4]
     e94:	str	wzr, [x21, #12]
     e98:	strb	w2, [x21, #16]
     e9c:	cbnz	w0, 1320 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa78>
     ea0:	ldr	w0, [sp, #140]
     ea4:	cbz	w0, 107c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>
     ea8:	ldr	x0, [x22, #8]
     eac:	ldr	w1, [sp, #136]
     eb0:	ldrh	w20, [x22, #2]
     eb4:	ubfx	w21, w0, #2, #1
     eb8:	add	w21, w21, w1
     ebc:	tbnz	w0, #19, 11a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x900>
     ec0:	ldr	w0, [sp, #140]
     ec4:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     ec8:	mov	w24, #0x14                  	// #20
     ecc:	add	w27, w0, w20
     ed0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     ed4:	ldr	x23, [x23]
     ed8:	add	x0, x0, #0x0
     edc:	str	x0, [sp, #96]
     ee0:	b	ef0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x648>
     ee4:	add	w20, w20, #0x1
     ee8:	cmp	w27, w20
     eec:	b.eq	1058 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7b0>  // b.none
     ef0:	ldr	w1, [x19, #24]
     ef4:	mov	w0, w20
     ef8:	cmp	x1, w20, uxtw
     efc:	b.ls	1524 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc7c>  // b.plast
     f00:	ldr	x1, [x19, #16]
     f04:	lsl	x0, x0, #4
     f08:	ldrb	w0, [x1, x0]
     f0c:	cmp	w0, #0x1
     f10:	b.ne	ee4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>  // b.any
     f14:	ldr	w0, [x25, #8]
     f18:	cmp	x0, w21, uxtw
     f1c:	b.ls	14a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     f20:	umull	x26, w21, w24
     f24:	ldrb	w0, [x23]
     f28:	ldr	x28, [x25]
     f2c:	add	w21, w21, #0x1
     f30:	add	x22, x28, x26
     f34:	str	w20, [x28, x26]
     f38:	ldr	w1, [x25, #312]
     f3c:	str	w1, [x22, #4]
     f40:	str	wzr, [x22, #12]
     f44:	strb	wzr, [x22, #16]
     f48:	cbz	w0, ee4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>
     f4c:	ldr	x0, [sp, #96]
     f50:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     f54:	tst	w0, #0xff
     f58:	b.eq	ee4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>  // b.none
     f5c:	bl	0 <_ZN4llvm4dbgsEv>
     f60:	mov	x4, x0
     f64:	ldp	x1, x6, [x0, #16]
     f68:	sub	x1, x1, x6
     f6c:	cmp	x1, #0x10
     f70:	b.ls	12fc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa54>  // b.plast
     f74:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     f78:	add	x0, x0, #0x0
     f7c:	ldp	x2, x3, [x0]
     f80:	stp	x2, x3, [x6]
     f84:	ldrb	w0, [x0, #16]
     f88:	strb	w0, [x6, #16]
     f8c:	ldr	x0, [x4, #24]
     f90:	add	x0, x0, #0x11
     f94:	str	x0, [x4, #24]
     f98:	ldrsw	x1, [x28, x26]
     f9c:	mov	x0, x4
     fa0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     fa4:	mov	x2, x0
     fa8:	ldp	x1, x3, [x0, #16]
     fac:	sub	x1, x1, x3
     fb0:	cmp	x1, #0x9
     fb4:	b.ls	128c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9e4>  // b.plast
     fb8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     fbc:	add	x0, x0, #0x0
     fc0:	ldr	x1, [x0]
     fc4:	str	x1, [x3]
     fc8:	ldrh	w0, [x0, #8]
     fcc:	strh	w0, [x3, #8]
     fd0:	ldr	x0, [x2, #24]
     fd4:	ldr	w1, [x22, #4]
     fd8:	add	x0, x0, #0xa
     fdc:	str	x0, [x2, #24]
     fe0:	mov	x0, x2
     fe4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     fe8:	mov	x4, x0
     fec:	ldp	x1, x6, [x0, #16]
     ff0:	sub	x1, x1, x6
     ff4:	cmp	x1, #0x11
     ff8:	b.ls	12c0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa18>  // b.plast
     ffc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1000:	add	x0, x0, #0x0
    1004:	ldp	x2, x3, [x0]
    1008:	stp	x2, x3, [x6]
    100c:	ldrh	w0, [x0, #16]
    1010:	strh	w0, [x6, #16]
    1014:	ldr	x0, [x4, #24]
    1018:	ldr	w1, [x22, #12]
    101c:	add	x0, x0, #0x12
    1020:	str	x0, [x4, #24]
    1024:	mov	x0, x4
    1028:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    102c:	mov	x1, x0
    1030:	ldp	x3, x2, [x0, #16]
    1034:	cmp	x2, x3
    1038:	b.cs	12f0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa48>  // b.hs, b.nlast
    103c:	add	x0, x2, #0x1
    1040:	str	x0, [x1, #24]
    1044:	mov	w0, #0xa                   	// #10
    1048:	strb	w0, [x2]
    104c:	add	w20, w20, #0x1
    1050:	cmp	w27, w20
    1054:	b.ne	ef0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x648>  // b.any
    1058:	ldr	w0, [x25, #8]
    105c:	mov	w22, w21
    1060:	mov	w1, w0
    1064:	cmp	x22, x1
    1068:	b.cs	11b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x910>  // b.hs, b.nlast
    106c:	ldr	w0, [x25, #12]
    1070:	cmp	x22, x0
    1074:	b.hi	15e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>  // b.pmore
    1078:	str	w21, [x25, #8]
    107c:	ldp	x19, x20, [sp, #16]
    1080:	ldp	x21, x22, [sp, #32]
    1084:	ldp	x23, x24, [sp, #48]
    1088:	ldp	x25, x26, [sp, #64]
    108c:	ldp	x27, x28, [sp, #80]
    1090:	ldp	x29, x30, [sp], #144
    1094:	ret
    1098:	mov	x0, x7
    109c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10a0:	mov	x7, x0
    10a4:	ldp	x8, x0, [x7, #16]
    10a8:	sub	x8, x8, x0
    10ac:	cmp	x8, #0x9
    10b0:	b.hi	da4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4fc>  // b.pmore
    10b4:	mov	x2, #0xa                   	// #10
    10b8:	mov	x0, x7
    10bc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    10c0:	add	x1, x1, #0x0
    10c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10c8:	mov	x7, x0
    10cc:	ldr	w1, [x28, #4]
    10d0:	mov	x0, x7
    10d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    10d8:	mov	x2, x0
    10dc:	ldp	x1, x7, [x0, #16]
    10e0:	sub	x1, x1, x7
    10e4:	cmp	x1, #0x11
    10e8:	b.hi	de8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x540>  // b.pmore
    10ec:	mov	x2, #0x12                  	// #18
    10f0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    10f4:	add	x1, x1, #0x0
    10f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10fc:	ldr	w1, [x28, #12]
    1100:	mov	x2, x0
    1104:	mov	x0, x2
    1108:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    110c:	mov	x1, x0
    1110:	ldp	x3, x2, [x0, #16]
    1114:	cmp	x2, x3
    1118:	b.cc	e28 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x580>  // b.lo, b.ul, b.last
    111c:	mov	w1, #0xa                   	// #10
    1120:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1124:	b	c2c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x384>
    1128:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    112c:	mov	x2, #0x11                  	// #17
    1130:	add	x1, x1, #0x0
    1134:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1138:	mov	x1, x0
    113c:	ldp	x7, x8, [sp, #104]
    1140:	b	cd8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x430>
    1144:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1148:	mov	x2, #0xa                   	// #10
    114c:	add	x1, x1, #0x0
    1150:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1154:	mov	x7, x0
    1158:	b	d24 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x47c>
    115c:	b.ls	994 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xec>  // b.plast
    1160:	ldr	w0, [x25, #12]
    1164:	mov	w23, #0x14                  	// #20
    1168:	cmp	x26, x0
    116c:	umull	x28, w24, w23
    1170:	b.hi	1428 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb80>  // b.pmore
    1174:	ldr	x0, [x25]
    1178:	add	x1, x0, x28
    117c:	umaddl	x0, w2, w23, x0
    1180:	cmp	x1, x0
    1184:	b.eq	98c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xe4>  // b.none
    1188:	stp	wzr, wzr, [x0]
    118c:	add	x0, x0, #0x14
    1190:	sturh	wzr, [x0, #-12]
    1194:	stur	wzr, [x0, #-8]
    1198:	sturb	wzr, [x0, #-4]
    119c:	cmp	x0, x1
    11a0:	b.ne	1188 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8e0>  // b.any
    11a4:	b	980 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd8>
    11a8:	mov	x1, #0x840000              	// #8650752
    11ac:	tst	x0, x1
    11b0:	b.ne	ec0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x618>  // b.any
    11b4:	b	1058 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7b0>
    11b8:	b.ls	107c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>  // b.plast
    11bc:	ldr	w1, [x25, #12]
    11c0:	mov	w19, #0x14                  	// #20
    11c4:	cmp	x22, x1
    11c8:	umull	x20, w21, w19
    11cc:	b.hi	1460 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xbb8>  // b.pmore
    11d0:	ldr	x2, [x25]
    11d4:	add	x1, x2, x20
    11d8:	umaddl	x0, w0, w19, x2
    11dc:	cmp	x0, x1
    11e0:	b.eq	1078 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d0>  // b.none
    11e4:	nop
    11e8:	stp	wzr, wzr, [x0]
    11ec:	add	x0, x0, #0x14
    11f0:	sturh	wzr, [x0, #-12]
    11f4:	stur	wzr, [x0, #-8]
    11f8:	sturb	wzr, [x0, #-4]
    11fc:	cmp	x1, x0
    1200:	b.ne	11e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x940>  // b.any
    1204:	ldr	w0, [x25, #12]
    1208:	cmp	x22, x0
    120c:	b.ls	1078 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d0>  // b.plast
    1210:	b	15e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>
    1214:	mov	w1, #0xa                   	// #10
    1218:	str	w4, [sp, #104]
    121c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1220:	ldr	w4, [sp, #104]
    1224:	b	a0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
    1228:	mov	x2, #0x12                  	// #18
    122c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1230:	add	x1, x1, #0x0
    1234:	str	w4, [sp, #104]
    1238:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    123c:	mov	x2, x0
    1240:	ldr	w4, [sp, #104]
    1244:	b	b74 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2cc>
    1248:	mov	x2, #0xa                   	// #10
    124c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1250:	add	x1, x1, #0x0
    1254:	str	w4, [sp, #104]
    1258:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    125c:	mov	x2, x0
    1260:	ldr	w4, [sp, #104]
    1264:	b	b28 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x280>
    1268:	mov	x2, #0x11                  	// #17
    126c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1270:	add	x1, x1, #0x0
    1274:	str	w4, [sp, #104]
    1278:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    127c:	mov	x2, x0
    1280:	ldr	w4, [sp, #104]
    1284:	ldp	x8, x9, [sp, #112]
    1288:	b	adc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x234>
    128c:	mov	x2, #0xa                   	// #10
    1290:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1294:	add	x1, x1, #0x0
    1298:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    129c:	ldr	w1, [x22, #4]
    12a0:	mov	x2, x0
    12a4:	mov	x0, x2
    12a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    12ac:	mov	x4, x0
    12b0:	ldp	x1, x6, [x0, #16]
    12b4:	sub	x1, x1, x6
    12b8:	cmp	x1, #0x11
    12bc:	b.hi	ffc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x754>  // b.pmore
    12c0:	mov	x2, #0x12                  	// #18
    12c4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12c8:	add	x1, x1, #0x0
    12cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    12d0:	ldr	w1, [x22, #12]
    12d4:	mov	x4, x0
    12d8:	mov	x0, x4
    12dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    12e0:	mov	x1, x0
    12e4:	ldp	x3, x2, [x0, #16]
    12e8:	cmp	x2, x3
    12ec:	b.cc	103c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x794>  // b.lo, b.ul, b.last
    12f0:	mov	w1, #0xa                   	// #10
    12f4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    12f8:	b	ee4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>
    12fc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1300:	mov	x2, #0x11                  	// #17
    1304:	add	x1, x1, #0x0
    1308:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    130c:	mov	x4, x0
    1310:	b	f98 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6f0>
    1314:	mov	w4, #0x0                   	// #0
    1318:	str	w27, [sp, #136]
    131c:	b	944 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9c>
    1320:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1324:	add	x0, x0, #0x0
    1328:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    132c:	tst	w0, #0xff
    1330:	b.eq	ea0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>  // b.none
    1334:	bl	0 <_ZN4llvm4dbgsEv>
    1338:	mov	x2, x0
    133c:	ldp	x1, x4, [x0, #16]
    1340:	sub	x1, x1, x4
    1344:	cmp	x1, #0x10
    1348:	b.ls	1490 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xbe8>  // b.plast
    134c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1350:	add	x3, x3, #0x0
    1354:	ldp	x0, x1, [x3]
    1358:	stp	x0, x1, [x4]
    135c:	ldrb	w0, [x3, #16]
    1360:	strb	w0, [x4, #16]
    1364:	ldr	x0, [x2, #24]
    1368:	add	x0, x0, #0x11
    136c:	str	x0, [x2, #24]
    1370:	ldrsw	x1, [x23, x20]
    1374:	mov	x0, x2
    1378:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    137c:	mov	x2, x0
    1380:	ldp	x3, x1, [x0, #16]
    1384:	sub	x3, x3, x1
    1388:	cmp	x3, #0x9
    138c:	b.ls	14e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc38>  // b.plast
    1390:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1394:	add	x0, x0, #0x0
    1398:	ldr	x3, [x0]
    139c:	str	x3, [x1]
    13a0:	ldrh	w0, [x0, #8]
    13a4:	strh	w0, [x1, #8]
    13a8:	ldr	x0, [x2, #24]
    13ac:	add	x0, x0, #0xa
    13b0:	str	x0, [x2, #24]
    13b4:	ldr	w1, [x21, #4]
    13b8:	mov	x0, x2
    13bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    13c0:	mov	x2, x0
    13c4:	ldp	x3, x1, [x0, #16]
    13c8:	sub	x3, x3, x1
    13cc:	cmp	x3, #0x11
    13d0:	b.ls	14c8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc20>  // b.plast
    13d4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    13d8:	add	x0, x0, #0x0
    13dc:	ldp	x6, x7, [x0]
    13e0:	stp	x6, x7, [x1]
    13e4:	ldrh	w0, [x0, #16]
    13e8:	strh	w0, [x1, #16]
    13ec:	ldr	x0, [x2, #24]
    13f0:	add	x0, x0, #0x12
    13f4:	str	x0, [x2, #24]
    13f8:	ldr	w1, [x21, #12]
    13fc:	mov	x0, x2
    1400:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1404:	mov	x1, x0
    1408:	ldp	x3, x2, [x0, #16]
    140c:	cmp	x2, x3
    1410:	b.cs	14f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc50>  // b.hs, b.nlast
    1414:	add	x0, x2, #0x1
    1418:	str	x0, [x1, #24]
    141c:	mov	w0, #0xa                   	// #10
    1420:	strb	w0, [x2]
    1424:	b	ea0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
    1428:	mov	x2, x26
    142c:	add	x1, x25, #0x10
    1430:	mov	x0, x25
    1434:	mov	x3, #0x14                  	// #20
    1438:	str	w4, [sp, #104]
    143c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1440:	ldr	w2, [x25, #8]
    1444:	ldr	x0, [x25]
    1448:	ldr	w4, [sp, #104]
    144c:	add	x1, x0, x28
    1450:	umaddl	x0, w2, w23, x0
    1454:	cmp	x0, x1
    1458:	b.ne	1188 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8e0>  // b.any
    145c:	b	980 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd8>
    1460:	mov	x2, x22
    1464:	add	x1, x25, #0x10
    1468:	mov	x0, x25
    146c:	mov	x3, #0x14                  	// #20
    1470:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1474:	ldr	w2, [x25, #8]
    1478:	ldr	x0, [x25]
    147c:	add	x1, x0, x20
    1480:	umaddl	x0, w2, w19, x0
    1484:	cmp	x0, x1
    1488:	b.ne	11e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x940>  // b.any
    148c:	b	106c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7c4>
    1490:	mov	x2, #0x11                  	// #17
    1494:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1498:	add	x1, x1, #0x0
    149c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14a0:	mov	x2, x0
    14a4:	b	1370 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xac8>
    14a8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14ac:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14b0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14b4:	add	x3, x3, #0x0
    14b8:	add	x1, x1, #0x0
    14bc:	add	x0, x0, #0x0
    14c0:	mov	w2, #0x95                  	// #149
    14c4:	bl	0 <__assert_fail>
    14c8:	mov	x2, #0x12                  	// #18
    14cc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14d0:	add	x1, x1, #0x0
    14d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14d8:	mov	x2, x0
    14dc:	b	13f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb50>
    14e0:	mov	x2, #0xa                   	// #10
    14e4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14e8:	add	x1, x1, #0x0
    14ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14f0:	mov	x2, x0
    14f4:	b	13b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb0c>
    14f8:	mov	w1, #0xa                   	// #10
    14fc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1500:	b	ea0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
    1504:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1508:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    150c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1510:	add	x3, x3, #0x0
    1514:	add	x1, x1, #0x0
    1518:	add	x0, x0, #0x0
    151c:	mov	w2, #0x166                 	// #358
    1520:	bl	0 <__assert_fail>
    1524:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1528:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    152c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1530:	add	x3, x3, #0x0
    1534:	add	x1, x1, #0x0
    1538:	add	x0, x0, #0x0
    153c:	mov	w2, #0x99                  	// #153
    1540:	bl	0 <__assert_fail>
    1544:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1548:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    154c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1550:	add	x3, x3, #0x0
    1554:	add	x1, x1, #0x0
    1558:	add	x0, x0, #0x0
    155c:	mov	w2, #0xab                  	// #171
    1560:	bl	0 <__assert_fail>
    1564:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1568:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    156c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1570:	add	x3, x3, #0x0
    1574:	add	x1, x1, #0x0
    1578:	add	x0, x0, #0x0
    157c:	mov	w2, #0x1b8                 	// #440
    1580:	bl	0 <__assert_fail>
    1584:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1588:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    158c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1590:	add	x3, x3, #0x0
    1594:	add	x1, x1, #0x0
    1598:	add	x0, x0, #0x0
    159c:	mov	w2, #0x15b                 	// #347
    15a0:	bl	0 <__assert_fail>
    15a4:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15a8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15ac:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15b0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15b4:	add	x3, x3, #0x0
    15b8:	add	x1, x1, #0x0
    15bc:	add	x0, x0, #0x0
    15c0:	mov	w2, #0x15d                 	// #349
    15c4:	bl	0 <__assert_fail>
    15c8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15cc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15d0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15d4:	add	x3, x3, #0x0
    15d8:	add	x1, x1, #0x0
    15dc:	add	x0, x0, #0x0
    15e0:	mov	w2, #0x151                 	// #337
    15e4:	bl	0 <__assert_fail>
    15e8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15ec:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15f0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    15f4:	add	x3, x3, #0x0
    15f8:	add	x1, x1, #0x0
    15fc:	add	x0, x0, #0x0
    1600:	mov	w2, #0x43                  	// #67
    1604:	bl	0 <__assert_fail>

0000000000001608 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
    1608:	stp	x29, x30, [sp, #-160]!
    160c:	mov	x29, sp
    1610:	stp	x25, x26, [sp, #64]
    1614:	mov	x25, x1
    1618:	ldr	x1, [x0, #8]
    161c:	stp	x19, x20, [sp, #16]
    1620:	stp	x21, x22, [sp, #32]
    1624:	mov	x22, x2
    1628:	stp	x23, x24, [sp, #48]
    162c:	stp	x27, x28, [sp, #80]
    1630:	str	x0, [sp, #136]
    1634:	ldr	w0, [x2]
    1638:	ldr	w2, [x1, #24]
    163c:	ldr	x23, [x1]
    1640:	cmp	w0, w2
    1644:	b.cs	1e6c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x864>  // b.hs, b.nlast
    1648:	ubfiz	x0, x0, #6, #32
    164c:	mov	w20, w3
    1650:	add	x23, x23, x0
    1654:	ldr	x1, [x23, #24]
    1658:	ldrh	w2, [x23, #2]
    165c:	ldrb	w26, [x23, #4]
    1660:	sub	w19, w2, w26
    1664:	cbz	x1, 1ddc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>
    1668:	ldrh	w0, [x1]
    166c:	mov	w21, #0x0                   	// #0
    1670:	cbz	w0, 1684 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7c>
    1674:	nop
    1678:	add	w21, w21, #0x1
    167c:	ldrh	w0, [x1, w21, uxtw #1]
    1680:	cbnz	w0, 1678 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x70>
    1684:	ldr	x1, [x23, #8]
    1688:	add	x0, x25, #0x60
    168c:	ldr	w3, [x22, #24]
    1690:	str	x0, [sp, #152]
    1694:	ubfx	w1, w1, #2, #1
    1698:	sub	w2, w3, w2
    169c:	sub	w19, w19, w1
    16a0:	ldr	w0, [x25, #104]
    16a4:	add	w1, w19, w21
    16a8:	stp	w2, w1, [sp, #144]
    16ac:	add	w24, w1, w2
    16b0:	add	w28, w1, w2
    16b4:	cmp	x24, x0
    16b8:	b.cs	1ca8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6a0>  // b.hs, b.nlast
    16bc:	ldr	w0, [x25, #108]
    16c0:	cmp	x24, x0
    16c4:	b.hi	1e2c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x824>  // b.pmore
    16c8:	str	w28, [x25, #104]
    16cc:	ldrb	w26, [x23, #4]
    16d0:	mov	w27, #0x0                   	// #0
    16d4:	mov	w28, #0x0                   	// #0
    16d8:	cbz	w19, 1de4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7dc>
    16dc:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    16e0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    16e4:	add	x0, x0, #0x0
    16e8:	str	x0, [sp, #128]
    16ec:	ldr	x0, [x24]
    16f0:	str	x0, [sp, #104]
    16f4:	b	1708 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x100>
    16f8:	add	w27, w27, #0x1
    16fc:	add	w26, w26, #0x1
    1700:	cmp	w19, w27
    1704:	b.eq	1838 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x230>  // b.none
    1708:	ldr	w1, [x22, #24]
    170c:	mov	w0, w26
    1710:	cmp	x1, w26, uxtw
    1714:	b.ls	1dec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7e4>  // b.plast
    1718:	ldr	x1, [x22, #16]
    171c:	lsl	x0, x0, #4
    1720:	ldrb	w0, [x1, x0]
    1724:	cmp	w0, #0x1
    1728:	b.ne	16f8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>  // b.any
    172c:	ldr	w0, [x25, #104]
    1730:	mov	w6, w28
    1734:	cmp	x0, w28, uxtw
    1738:	b.ls	1e0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.plast
    173c:	ldr	x10, [x25, #96]
    1740:	lsl	x6, x6, #4
    1744:	ldr	x0, [sp, #104]
    1748:	add	x24, x10, x6
    174c:	add	w28, w28, #0x1
    1750:	ldrb	w0, [x0]
    1754:	str	w26, [x10, x6]
    1758:	str	w27, [x24, #4]
    175c:	str	w20, [x24, #12]
    1760:	cbz	w0, 16f8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>
    1764:	ldr	x0, [sp, #128]
    1768:	stp	x6, x10, [sp, #112]
    176c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1770:	tst	w0, #0xff
    1774:	b.eq	16f8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>  // b.none
    1778:	bl	0 <_ZN4llvm4dbgsEv>
    177c:	mov	x2, x0
    1780:	ldp	x1, x11, [x0, #16]
    1784:	ldp	x6, x10, [sp, #112]
    1788:	sub	x1, x1, x11
    178c:	cmp	x1, #0x10
    1790:	b.ls	1d20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x718>  // b.plast
    1794:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1798:	add	x0, x0, #0x0
    179c:	ldp	x12, x13, [x0]
    17a0:	stp	x12, x13, [x11]
    17a4:	ldrb	w0, [x0, #16]
    17a8:	strb	w0, [x11, #16]
    17ac:	ldr	x0, [x2, #24]
    17b0:	add	x0, x0, #0x11
    17b4:	str	x0, [x2, #24]
    17b8:	ldrsw	x1, [x10, x6]
    17bc:	mov	x0, x2
    17c0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    17c4:	mov	x2, x0
    17c8:	ldp	x1, x6, [x0, #16]
    17cc:	sub	x1, x1, x6
    17d0:	cmp	x1, #0xa
    17d4:	b.ls	1d08 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x700>  // b.plast
    17d8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    17dc:	add	x0, x0, #0x0
    17e0:	ldr	x1, [x0]
    17e4:	str	x1, [x6]
    17e8:	ldur	w0, [x0, #7]
    17ec:	stur	w0, [x6, #7]
    17f0:	ldr	x0, [x2, #24]
    17f4:	add	x0, x0, #0xb
    17f8:	str	x0, [x2, #24]
    17fc:	ldr	w1, [x24, #4]
    1800:	mov	x0, x2
    1804:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1808:	mov	x1, x0
    180c:	ldp	x6, x2, [x0, #16]
    1810:	cmp	x2, x6
    1814:	b.cs	1cfc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f4>  // b.hs, b.nlast
    1818:	add	x0, x2, #0x1
    181c:	str	x0, [x1, #24]
    1820:	mov	w0, #0xa                   	// #10
    1824:	strb	w0, [x2]
    1828:	add	w27, w27, #0x1
    182c:	add	w26, w26, #0x1
    1830:	cmp	w19, w27
    1834:	b.ne	1708 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x100>  // b.any
    1838:	mov	x27, #0x0                   	// #0
    183c:	cbz	w21, 1a28 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x420>
    1840:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1844:	adrp	x26, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1848:	add	x0, x26, #0x0
    184c:	str	x0, [sp, #120]
    1850:	ldr	x24, [x24]
    1854:	b	1864 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x25c>
    1858:	add	x27, x27, #0x1
    185c:	cmp	w21, w27
    1860:	b.ls	1a28 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x420>  // b.plast
    1864:	ldr	w0, [x25, #104]
    1868:	add	w6, w28, w27
    186c:	cmp	x6, x0
    1870:	b.cs	1e0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.hs, b.nlast
    1874:	ldr	x9, [x25, #96]
    1878:	lsl	x6, x6, #4
    187c:	ldr	x2, [x23, #24]
    1880:	add	x26, x9, x6
    1884:	ldrb	w1, [x24]
    1888:	mvn	w0, w27
    188c:	ldrh	w2, [x2, x27, lsl #1]
    1890:	str	w0, [x9, x6]
    1894:	add	w0, w19, w27
    1898:	str	w0, [x26, #4]
    189c:	strh	w2, [x26, #8]
    18a0:	str	w20, [x26, #12]
    18a4:	cbz	w1, 1858 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>
    18a8:	ldr	x0, [sp, #120]
    18ac:	stp	x6, x9, [sp, #104]
    18b0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    18b4:	tst	w0, #0xff
    18b8:	b.eq	1858 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>  // b.none
    18bc:	bl	0 <_ZN4llvm4dbgsEv>
    18c0:	mov	x1, x0
    18c4:	ldp	x2, x12, [x0, #16]
    18c8:	ldp	x6, x9, [sp, #104]
    18cc:	sub	x2, x2, x12
    18d0:	cmp	x2, #0x10
    18d4:	b.ls	1c5c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x654>  // b.plast
    18d8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    18dc:	add	x0, x0, #0x0
    18e0:	ldp	x10, x11, [x0]
    18e4:	stp	x10, x11, [x12]
    18e8:	ldrb	w0, [x0, #16]
    18ec:	strb	w0, [x12, #16]
    18f0:	ldr	x0, [x1, #24]
    18f4:	add	x0, x0, #0x11
    18f8:	str	x0, [x1, #24]
    18fc:	ldr	w2, [x9, x6]
    1900:	mov	x0, x1
    1904:	mvn	w1, w2
    1908:	sxtw	x1, w1
    190c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1910:	ldp	x1, x6, [x0, #16]
    1914:	mov	x2, x0
    1918:	sub	x1, x1, x6
    191c:	cmp	x1, #0xa
    1920:	b.ls	1c90 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x688>  // b.plast
    1924:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1928:	add	x0, x0, #0x0
    192c:	ldr	x1, [x0]
    1930:	str	x1, [x6]
    1934:	ldur	w0, [x0, #7]
    1938:	stur	w0, [x6, #7]
    193c:	ldr	x0, [x2, #24]
    1940:	add	x0, x0, #0xb
    1944:	str	x0, [x2, #24]
    1948:	ldr	w1, [x26, #4]
    194c:	mov	x0, x2
    1950:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1954:	mov	x6, x0
    1958:	ldp	x1, x2, [x0, #16]
    195c:	sub	x1, x1, x2
    1960:	cmp	x1, #0xc
    1964:	b.ls	1c78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x670>  // b.plast
    1968:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    196c:	add	x0, x0, #0x0
    1970:	ldr	x1, [x0]
    1974:	str	x1, [x2]
    1978:	ldur	x0, [x0, #5]
    197c:	stur	x0, [x2, #5]
    1980:	ldr	x0, [x6, #24]
    1984:	add	x0, x0, #0xd
    1988:	str	x0, [x6, #24]
    198c:	ldr	x0, [sp, #136]
    1990:	ldr	x1, [x0, #16]
    1994:	ldrh	w0, [x26, #8]
    1998:	ldr	w8, [x1, #8]
    199c:	ldr	x2, [x1]
    19a0:	cmp	w0, w8
    19a4:	ldr	x1, [x1, #64]
    19a8:	b.cs	1e4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x844>  // b.hs, b.nlast
    19ac:	mov	w3, #0x18                  	// #24
    19b0:	umull	x0, w0, w3
    19b4:	ldr	w0, [x2, x0]
    19b8:	adds	x1, x1, x0
    19bc:	b.eq	1c40 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x638>  // b.none
    19c0:	mov	x0, x1
    19c4:	stp	x1, x6, [sp, #104]
    19c8:	bl	0 <strlen>
    19cc:	ldp	x1, x6, [sp, #104]
    19d0:	mov	x2, x0
    19d4:	ldp	x8, x0, [x6, #16]
    19d8:	sub	x9, x8, x0
    19dc:	cmp	x2, x9
    19e0:	b.hi	1c34 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x62c>  // b.pmore
    19e4:	cbz	x2, 1a00 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3f8>
    19e8:	stp	x2, x6, [sp, #104]
    19ec:	bl	0 <memcpy>
    19f0:	ldp	x2, x6, [sp, #104]
    19f4:	ldp	x8, x1, [x6, #16]
    19f8:	add	x0, x1, x2
    19fc:	str	x0, [x6, #24]
    1a00:	cmp	x8, x0
    1a04:	b.ls	1c4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x644>  // b.plast
    1a08:	add	x1, x0, #0x1
    1a0c:	str	x1, [x6, #24]
    1a10:	mov	w1, #0xa                   	// #10
    1a14:	strb	w1, [x0]
    1a18:	add	x27, x27, #0x1
    1a1c:	cmp	w21, w27
    1a20:	b.hi	1864 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x25c>  // b.pmore
    1a24:	nop
    1a28:	ldr	x0, [x23, #8]
    1a2c:	add	w21, w21, w28
    1a30:	tbnz	w0, #18, 1cec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6e4>
    1a34:	mov	w0, #0x0                   	// #0
    1a38:	ldr	w1, [sp, #144]
    1a3c:	ldrh	w19, [x23, #2]
    1a40:	cmp	w1, #0x0
    1a44:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1a48:	b.ne	1bb8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5b0>  // b.any
    1a4c:	ldr	w0, [sp, #148]
    1a50:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    1a54:	mov	w26, #0x0                   	// #0
    1a58:	sub	w24, w0, w19
    1a5c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1a60:	ldr	x23, [x23]
    1a64:	add	x0, x0, #0x0
    1a68:	str	x0, [sp, #112]
    1a6c:	b	1a84 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x47c>
    1a70:	ldr	w0, [sp, #144]
    1a74:	add	w26, w26, #0x1
    1a78:	add	w19, w19, #0x1
    1a7c:	cmp	w0, w26
    1a80:	b.ls	1bb8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5b0>  // b.plast
    1a84:	ldr	w1, [x22, #24]
    1a88:	mov	w0, w19
    1a8c:	cmp	x1, w19, uxtw
    1a90:	b.ls	1dec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7e4>  // b.plast
    1a94:	ldr	x1, [x22, #16]
    1a98:	lsl	x0, x0, #4
    1a9c:	ldrb	w0, [x1, x0]
    1aa0:	cmp	w0, #0x1
    1aa4:	b.ne	1a70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>  // b.any
    1aa8:	ldr	w0, [x25, #104]
    1aac:	mov	w27, w21
    1ab0:	cmp	x0, w21, uxtw
    1ab4:	b.ls	1e0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.plast
    1ab8:	ldr	x3, [x25, #96]
    1abc:	lsl	x27, x27, #4
    1ac0:	ldrb	w1, [x23]
    1ac4:	add	w0, w24, w19
    1ac8:	add	x28, x3, x27
    1acc:	add	w21, w21, #0x1
    1ad0:	str	w19, [x3, x27]
    1ad4:	str	w0, [x28, #4]
    1ad8:	str	w20, [x28, #12]
    1adc:	cbz	w1, 1a70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>
    1ae0:	ldr	x0, [sp, #112]
    1ae4:	str	x3, [sp, #104]
    1ae8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1aec:	tst	w0, #0xff
    1af0:	b.eq	1a70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>  // b.none
    1af4:	bl	0 <_ZN4llvm4dbgsEv>
    1af8:	mov	x2, x0
    1afc:	ldp	x1, x4, [x0, #16]
    1b00:	ldr	x3, [sp, #104]
    1b04:	sub	x1, x1, x4
    1b08:	cmp	x1, #0x10
    1b0c:	b.ls	1d60 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x758>  // b.plast
    1b10:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1b14:	add	x0, x0, #0x0
    1b18:	ldp	x8, x9, [x0]
    1b1c:	stp	x8, x9, [x4]
    1b20:	ldrb	w0, [x0, #16]
    1b24:	strb	w0, [x4, #16]
    1b28:	ldr	x0, [x2, #24]
    1b2c:	add	x0, x0, #0x11
    1b30:	str	x0, [x2, #24]
    1b34:	ldrsw	x1, [x3, x27]
    1b38:	mov	x0, x2
    1b3c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1b40:	mov	x2, x0
    1b44:	ldp	x1, x3, [x0, #16]
    1b48:	sub	x1, x1, x3
    1b4c:	cmp	x1, #0xa
    1b50:	b.ls	1d48 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x740>  // b.plast
    1b54:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1b58:	add	x0, x0, #0x0
    1b5c:	ldr	x1, [x0]
    1b60:	str	x1, [x3]
    1b64:	ldur	w0, [x0, #7]
    1b68:	stur	w0, [x3, #7]
    1b6c:	ldr	x0, [x2, #24]
    1b70:	add	x0, x0, #0xb
    1b74:	str	x0, [x2, #24]
    1b78:	ldr	w1, [x28, #4]
    1b7c:	mov	x0, x2
    1b80:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1b84:	mov	x1, x0
    1b88:	ldp	x3, x2, [x0, #16]
    1b8c:	cmp	x2, x3
    1b90:	b.cs	1d3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x734>  // b.hs, b.nlast
    1b94:	add	x0, x2, #0x1
    1b98:	str	x0, [x1, #24]
    1b9c:	mov	w0, #0xa                   	// #10
    1ba0:	strb	w0, [x2]
    1ba4:	ldr	w0, [sp, #144]
    1ba8:	add	w26, w26, #0x1
    1bac:	add	w19, w19, #0x1
    1bb0:	cmp	w0, w26
    1bb4:	b.hi	1a84 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x47c>  // b.pmore
    1bb8:	ldr	w0, [x25, #104]
    1bbc:	mov	w19, w21
    1bc0:	cmp	x19, x0
    1bc4:	b.cc	1c08 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x600>  // b.lo, b.ul, b.last
    1bc8:	b.ls	1c18 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x610>  // b.plast
    1bcc:	ldr	w1, [x25, #108]
    1bd0:	lsl	x20, x19, #4
    1bd4:	cmp	x19, x1
    1bd8:	b.hi	1dac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7a4>  // b.pmore
    1bdc:	ldr	x2, [x25, #96]
    1be0:	add	x1, x2, x20
    1be4:	add	x0, x2, x0, lsl #4
    1be8:	cmp	x0, x1
    1bec:	b.eq	1c14 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x60c>  // b.none
    1bf0:	stp	wzr, wzr, [x0]
    1bf4:	add	x0, x0, #0x10
    1bf8:	sturh	wzr, [x0, #-8]
    1bfc:	stur	wzr, [x0, #-4]
    1c00:	cmp	x0, x1
    1c04:	b.ne	1bf0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5e8>  // b.any
    1c08:	ldr	w0, [x25, #108]
    1c0c:	cmp	x19, x0
    1c10:	b.hi	1e2c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x824>  // b.pmore
    1c14:	str	w21, [x25, #104]
    1c18:	ldp	x19, x20, [sp, #16]
    1c1c:	ldp	x21, x22, [sp, #32]
    1c20:	ldp	x23, x24, [sp, #48]
    1c24:	ldp	x25, x26, [sp, #64]
    1c28:	ldp	x27, x28, [sp, #80]
    1c2c:	ldp	x29, x30, [sp], #160
    1c30:	ret
    1c34:	mov	x0, x6
    1c38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c3c:	mov	x6, x0
    1c40:	ldp	x8, x0, [x6, #16]
    1c44:	cmp	x8, x0
    1c48:	b.hi	1a08 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x400>  // b.pmore
    1c4c:	mov	x0, x6
    1c50:	mov	w1, #0xa                   	// #10
    1c54:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1c58:	b	1858 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>
    1c5c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c60:	mov	x2, #0x11                  	// #17
    1c64:	add	x1, x1, #0x0
    1c68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c6c:	mov	x1, x0
    1c70:	ldp	x6, x9, [sp, #104]
    1c74:	b	18fc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2f4>
    1c78:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c7c:	mov	x2, #0xd                   	// #13
    1c80:	add	x1, x1, #0x0
    1c84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c88:	mov	x6, x0
    1c8c:	b	198c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x384>
    1c90:	mov	x2, #0xb                   	// #11
    1c94:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c98:	add	x1, x1, #0x0
    1c9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ca0:	mov	x2, x0
    1ca4:	b	1948 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x340>
    1ca8:	b.ls	16d0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc8>  // b.plast
    1cac:	ldr	w1, [x25, #108]
    1cb0:	lsl	x26, x24, #4
    1cb4:	cmp	x24, x1
    1cb8:	b.hi	1d7c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x774>  // b.pmore
    1cbc:	ldr	x2, [x25, #96]
    1cc0:	add	x1, x2, x26
    1cc4:	add	x0, x2, x0, lsl #4
    1cc8:	cmp	x1, x0
    1ccc:	b.eq	16c8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc0>  // b.none
    1cd0:	stp	wzr, wzr, [x0]
    1cd4:	add	x0, x0, #0x10
    1cd8:	sturh	wzr, [x0, #-8]
    1cdc:	stur	wzr, [x0, #-4]
    1ce0:	cmp	x0, x1
    1ce4:	b.ne	1cd0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6c8>  // b.any
    1ce8:	b	16bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xb4>
    1cec:	mov	x1, #0x880000              	// #8912896
    1cf0:	tst	x0, x1
    1cf4:	cset	w0, eq  // eq = none
    1cf8:	b	1a38 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x430>
    1cfc:	mov	w1, #0xa                   	// #10
    1d00:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1d04:	b	16f8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>
    1d08:	mov	x2, #0xb                   	// #11
    1d0c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d10:	add	x1, x1, #0x0
    1d14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d18:	mov	x2, x0
    1d1c:	b	17fc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1f4>
    1d20:	mov	x2, #0x11                  	// #17
    1d24:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d28:	add	x1, x1, #0x0
    1d2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d30:	mov	x2, x0
    1d34:	ldp	x6, x10, [sp, #112]
    1d38:	b	17b8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1b0>
    1d3c:	mov	w1, #0xa                   	// #10
    1d40:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1d44:	b	1a70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>
    1d48:	mov	x2, #0xb                   	// #11
    1d4c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d50:	add	x1, x1, #0x0
    1d54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d58:	mov	x2, x0
    1d5c:	b	1b78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x570>
    1d60:	mov	x2, #0x11                  	// #17
    1d64:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d68:	add	x1, x1, #0x0
    1d6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d70:	mov	x2, x0
    1d74:	ldr	x3, [sp, #104]
    1d78:	b	1b34 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x52c>
    1d7c:	mov	x2, x24
    1d80:	add	x1, x25, #0x70
    1d84:	add	x0, x25, #0x60
    1d88:	mov	x3, #0x10                  	// #16
    1d8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1d90:	ldr	x2, [x25, #96]
    1d94:	ldr	w0, [x25, #104]
    1d98:	add	x1, x2, x26
    1d9c:	add	x0, x2, x0, lsl #4
    1da0:	cmp	x0, x1
    1da4:	b.ne	1cd0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6c8>  // b.any
    1da8:	b	16bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xb4>
    1dac:	ldr	x0, [sp, #152]
    1db0:	mov	x2, x19
    1db4:	add	x1, x25, #0x70
    1db8:	mov	x3, #0x10                  	// #16
    1dbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1dc0:	ldr	x2, [x25, #96]
    1dc4:	ldr	w0, [x25, #104]
    1dc8:	add	x1, x2, x20
    1dcc:	add	x0, x2, x0, lsl #4
    1dd0:	cmp	x0, x1
    1dd4:	b.ne	1bf0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5e8>  // b.any
    1dd8:	b	1c08 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x600>
    1ddc:	mov	w21, #0x0                   	// #0
    1de0:	b	1684 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7c>
    1de4:	mov	w28, w19
    1de8:	b	1838 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x230>
    1dec:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1df0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1df4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1df8:	add	x3, x3, #0x0
    1dfc:	add	x1, x1, #0x0
    1e00:	add	x0, x0, #0x0
    1e04:	mov	w2, #0x99                  	// #153
    1e08:	bl	0 <__assert_fail>
    1e0c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e10:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e14:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e18:	add	x3, x3, #0x0
    1e1c:	add	x1, x1, #0x0
    1e20:	add	x0, x0, #0x0
    1e24:	mov	w2, #0x95                  	// #149
    1e28:	bl	0 <__assert_fail>
    1e2c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e30:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e34:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e38:	add	x3, x3, #0x0
    1e3c:	add	x1, x1, #0x0
    1e40:	add	x0, x0, #0x0
    1e44:	mov	w2, #0x43                  	// #67
    1e48:	bl	0 <__assert_fail>
    1e4c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e50:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e54:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e58:	add	x3, x3, #0x0
    1e5c:	add	x1, x1, #0x0
    1e60:	add	x0, x0, #0x0
    1e64:	mov	w2, #0x1b8                 	// #440
    1e68:	bl	0 <__assert_fail>
    1e6c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>

0000000000001e70 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE>:
    1e70:	stp	x29, x30, [sp, #-320]!
    1e74:	mov	x29, sp
    1e78:	stp	x19, x20, [sp, #16]
    1e7c:	ldr	x19, [x2, #152]
    1e80:	stp	x21, x22, [sp, #32]
    1e84:	stp	x23, x24, [sp, #48]
    1e88:	ldr	w20, [x19, #48]
    1e8c:	stp	x25, x26, [sp, #64]
    1e90:	stp	x27, x28, [sp, #80]
    1e94:	str	x0, [sp, #120]
    1e98:	str	w20, [sp, #232]
    1e9c:	stp	xzr, xzr, [sp, #240]
    1ea0:	str	xzr, [sp, #256]
    1ea4:	stp	xzr, xzr, [sp, #296]
    1ea8:	str	wzr, [sp, #312]
    1eac:	cbz	w20, 3998 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b28>
    1eb0:	mov	x25, x2
    1eb4:	mov	x23, x1
    1eb8:	mov	x28, x3
    1ebc:	cmp	w20, #0x40
    1ec0:	b.ls	24f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x680>  // b.plast
    1ec4:	add	x0, sp, #0xe0
    1ec8:	mov	w2, #0x0                   	// #0
    1ecc:	mov	x1, #0x0                   	// #0
    1ed0:	str	x4, [sp, #104]
    1ed4:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1ed8:	ldr	x4, [sp, #104]
    1edc:	ldrh	w26, [x23, #12]
    1ee0:	cbz	w26, 386c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19fc>
    1ee4:	mov	x27, #0x0                   	// #0
    1ee8:	add	x22, sp, #0x108
    1eec:	str	w20, [sp, #136]
    1ef0:	mov	x20, x27
    1ef4:	mov	x27, x19
    1ef8:	mov	x19, x4
    1efc:	add	x0, sp, #0xf0
    1f00:	mov	w21, #0x1                   	// #1
    1f04:	mov	w24, #0x0                   	// #0
    1f08:	str	x0, [sp, #128]
    1f0c:	nop
    1f10:	ldrh	w0, [x23, #10]
    1f14:	ldr	x2, [x27, #40]
    1f18:	add	x0, x0, x20
    1f1c:	ldr	x1, [x25, #128]
    1f20:	lsl	x0, x0, #2
    1f24:	add	x6, x1, x0
    1f28:	ldrh	w0, [x1, x0]
    1f2c:	cbz	x2, 34cc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x165c>
    1f30:	ldr	w1, [x27, #48]
    1f34:	cmp	w0, w1
    1f38:	b.cs	34ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x163c>  // b.hs, b.nlast
    1f3c:	ldrh	w2, [x6, #2]
    1f40:	ubfiz	x5, x0, #5, #16
    1f44:	ldr	x8, [x27, #32]
    1f48:	and	x1, x0, #0xffff
    1f4c:	add	x7, x8, x5
    1f50:	cbz	w2, 2750 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8e0>
    1f54:	cmp	x19, x1
    1f58:	b.ls	348c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x161c>  // b.plast
    1f5c:	ldr	w1, [x7, #16]
    1f60:	ldr	x5, [x28, x0, lsl #3]
    1f64:	tbnz	w1, #31, 2748 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8d8>
    1f68:	cbz	x5, 37a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1930>
    1f6c:	ldr	w9, [sp, #232]
    1f70:	clz	x8, x5
    1f74:	mov	w0, #0x3f                  	// #63
    1f78:	sub	w0, w0, w8
    1f7c:	cmp	w0, w9
    1f80:	b.cs	37d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1968>  // b.hs, b.nlast
    1f84:	mov	x8, #0x1                   	// #1
    1f88:	cmp	w9, #0x40
    1f8c:	lsl	x0, x8, x0
    1f90:	ldr	x8, [sp, #224]
    1f94:	b.hi	2738 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8c8>  // b.pmore
    1f98:	orr	x0, x8, x0
    1f9c:	str	x0, [sp, #224]
    1fa0:	cmp	w1, #0x0
    1fa4:	cset	w8, eq  // eq = none
    1fa8:	cmp	w1, #0x1
    1fac:	cset	w0, le
    1fb0:	orr	w24, w24, w8
    1fb4:	and	w21, w21, w0
    1fb8:	ldp	x1, x0, [sp, #248]
    1fbc:	str	x5, [sp, #264]
    1fc0:	str	wzr, [sp, #272]
    1fc4:	str	w2, [sp, #276]
    1fc8:	strb	wzr, [sp, #280]
    1fcc:	cmp	x1, x0
    1fd0:	mov	w0, #0x1                   	// #1
    1fd4:	str	w0, [sp, #284]
    1fd8:	b.eq	2904 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa94>  // b.none
    1fdc:	ldp	x8, x9, [x22]
    1fe0:	stp	x8, x9, [x1]
    1fe4:	add	x2, x1, #0x18
    1fe8:	ldr	x0, [x22, #16]
    1fec:	str	x0, [x1, #16]
    1ff0:	str	x2, [sp, #248]
    1ff4:	ldr	w0, [x7, #12]
    1ff8:	cbz	w0, 205c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    1ffc:	cmp	x19, w0, uxtw
    2000:	mov	w0, w0
    2004:	b.ls	348c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x161c>  // b.plast
    2008:	ldr	w1, [sp, #312]
    200c:	mov	w10, #0x0                   	// #0
    2010:	ldr	x2, [x28, x0, lsl #3]
    2014:	ldr	x7, [sp, #296]
    2018:	cbz	w1, 2e20 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xfb0>
    201c:	cmn	x2, #0x3
    2020:	b.hi	3934 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>  // b.pmore
    2024:	mov	w0, #0x25                  	// #37
    2028:	sub	w5, w1, #0x1
    202c:	mul	w8, w2, w0
    2030:	and	w9, w8, w5
    2034:	and	w10, w8, w5
    2038:	lsl	x9, x9, #4
    203c:	add	x0, x7, x9
    2040:	ldr	x9, [x7, x9]
    2044:	cmp	x2, x9
    2048:	b.ne	2364 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4f4>  // b.any
    204c:	ldr	w5, [x0, #8]
    2050:	ldrh	w1, [x6, #2]
    2054:	add	w1, w1, w5
    2058:	str	w1, [x0, #8]
    205c:	add	x20, x20, #0x1
    2060:	cmp	w26, w20
    2064:	b.hi	1f10 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa0>  // b.pmore
    2068:	ldr	w20, [sp, #136]
    206c:	mov	x4, x19
    2070:	and	w21, w21, w24
    2074:	mov	x19, x27
    2078:	ldp	x24, x22, [sp, #240]
    207c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2080:	ldr	x1, [sp, #120]
    2084:	movk	x0, #0xaaab
    2088:	strb	w21, [x1, #329]
    208c:	subs	x21, x22, x24
    2090:	asr	x1, x21, #3
    2094:	mul	x1, x1, x0
    2098:	mov	x0, x1
    209c:	b.eq	2120 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x2b0>  // b.none
    20a0:	clz	x1, x1
    20a4:	mov	w2, #0x3f                  	// #63
    20a8:	sub	w2, w2, w1
    20ac:	mov	x0, x24
    20b0:	mov	x1, x22
    20b4:	mov	w3, #0x0                   	// #0
    20b8:	sbfiz	x2, x2, #1, #32
    20bc:	str	x4, [sp, #104]
    20c0:	bl	3c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
    20c4:	cmp	x21, #0x180
    20c8:	ldr	x4, [sp, #104]
    20cc:	b.le	30d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1268>
    20d0:	add	x1, x24, #0x180
    20d4:	mov	x0, x24
    20d8:	mov	x21, x1
    20dc:	bl	298 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    20e0:	cmp	x22, x21
    20e4:	ldr	x4, [sp, #104]
    20e8:	b.eq	2108 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x298>  // b.none
    20ec:	mov	x13, x4
    20f0:	mov	x0, x21
    20f4:	add	x21, x21, #0x18
    20f8:	bl	200 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>
    20fc:	cmp	x22, x21
    2100:	b.ne	20f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x280>  // b.any
    2104:	mov	x4, x13
    2108:	ldp	x24, x0, [sp, #240]
    210c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2110:	movk	x1, #0xaaab
    2114:	sub	x0, x0, x24
    2118:	asr	x0, x0, #3
    211c:	mul	x0, x0, x1
    2120:	mov	w9, w0
    2124:	cbz	w0, 37c0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1950>
    2128:	mov	w27, #0x1                   	// #1
    212c:	sub	w1, w27, #0x1
    2130:	mov	w2, #0x18                  	// #24
    2134:	sub	w0, w0, #0x1
    2138:	str	w0, [sp, #112]
    213c:	mov	x0, x24
    2140:	umull	x1, w1, w2
    2144:	str	x4, [sp, #152]
    2148:	str	xzr, [sp, #104]
    214c:	mov	x6, #0x0                   	// #0
    2150:	add	x25, x0, x1
    2154:	str	w20, [sp, #128]
    2158:	stp	x19, x28, [sp, #136]
    215c:	mov	w24, w9
    2160:	mov	x28, x6
    2164:	ldp	w3, w4, [x25, #8]
    2168:	mov	w18, #0x25                  	// #37
    216c:	ldr	x19, [sp, #120]
    2170:	cmp	w4, w3
    2174:	b.ne	21d4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x364>  // b.any
    2178:	ldr	x2, [x0, x1]
    217c:	fmov	d0, x2
    2180:	cnt	v0.8b, v0.8b
    2184:	addv	b0, v0.8b
    2188:	umov	w1, v0.b[0]
    218c:	cmp	w1, #0x1
    2190:	b.le	38f4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a84>
    2194:	clz	x3, x2
    2198:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    219c:	cmp	x2, #0x0
    21a0:	lsr	x1, x1, x3
    21a4:	orr	x1, x28, x1
    21a8:	csel	x28, x1, x28, ne  // ne = any
    21ac:	cmp	w24, w27
    21b0:	b.ls	24f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x688>  // b.plast
    21b4:	add	w27, w27, #0x1
    21b8:	sub	w1, w27, #0x1
    21bc:	mov	w2, #0x18                  	// #24
    21c0:	umull	x1, w1, w2
    21c4:	add	x25, x0, x1
    21c8:	ldp	w3, w4, [x25, #8]
    21cc:	cmp	w4, w3
    21d0:	b.eq	2178 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x308>  // b.none
    21d4:	ldp	w21, w0, [x19, #184]
    21d8:	cmp	w21, w0
    21dc:	b.cs	2fa8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1138>  // b.hs, b.nlast
    21e0:	umull	x21, w21, w2
    21e4:	ldr	x23, [x19, #176]
    21e8:	add	x2, x23, x21
    21ec:	ldp	x0, x1, [x25]
    21f0:	stp	x0, x1, [x2]
    21f4:	ldr	x0, [x25, #16]
    21f8:	str	x0, [x2, #16]
    21fc:	ldp	w0, w2, [x19, #184]
    2200:	mov	w1, w0
    2204:	add	x1, x1, #0x1
    2208:	cmp	x1, x2
    220c:	b.hi	38b4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a44>  // b.pmore
    2210:	add	w0, w0, #0x1
    2214:	str	w0, [x19, #184]
    2218:	cbz	w0, 38d4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a64>
    221c:	ldr	x26, [x25]
    2220:	fmov	d0, x26
    2224:	cnt	v0.8b, v0.8b
    2228:	addv	b0, v0.8b
    222c:	umov	w1, v0.b[0]
    2230:	cmp	w1, #0x1
    2234:	b.eq	29fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb8c>  // b.none
    2238:	cbz	x26, 2250 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x3e0>
    223c:	clz	x2, x26
    2240:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    2244:	lsr	x1, x1, x2
    2248:	eor	x26, x26, x1
    224c:	orr	x28, x28, x1
    2250:	cmp	w24, w27
    2254:	b.ls	2a10 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xba0>  // b.plast
    2258:	ldr	w0, [sp, #112]
    225c:	mov	w1, w27
    2260:	add	x1, x1, #0x1
    2264:	mov	w20, #0x18                  	// #24
    2268:	sub	w0, w0, w27
    226c:	mov	w2, w27
    2270:	add	x0, x0, x1
    2274:	umull	x20, w27, w20
    2278:	mov	x3, x19
    227c:	mov	w27, w24
    2280:	add	x22, x0, x0, lsl #1
    2284:	mov	x24, x25
    2288:	ldr	x0, [sp, #240]
    228c:	lsl	x22, x22, #3
    2290:	b	22a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x430>
    2294:	add	x20, x20, #0x18
    2298:	cmp	x22, x20
    229c:	b.eq	2350 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4e0>  // b.none
    22a0:	ldr	x1, [x0, x20]
    22a4:	add	x21, x0, x20
    22a8:	bics	xzr, x26, x1
    22ac:	b.ne	2294 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x424>  // b.any
    22b0:	ldr	w25, [sp, #312]
    22b4:	mov	w0, #0x0                   	// #0
    22b8:	ldp	w23, w6, [x24, #8]
    22bc:	ldr	x7, [sp, #296]
    22c0:	sub	w19, w6, w23
    22c4:	cbz	w25, 2c30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdc0>
    22c8:	ldr	x1, [x24]
    22cc:	cmn	x1, #0x3
    22d0:	b.hi	3934 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>  // b.pmore
    22d4:	mul	w0, w1, w18
    22d8:	sub	w5, w25, #0x1
    22dc:	and	w4, w0, w5
    22e0:	and	w0, w0, w5
    22e4:	lsl	x4, x4, #4
    22e8:	add	x9, x7, x4
    22ec:	ldr	x8, [x7, x4]
    22f0:	cmp	x1, x8
    22f4:	b.ne	2a24 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbb4>  // b.any
    22f8:	ldr	w0, [x9, #8]
    22fc:	sub	w19, w19, w0
    2300:	ldr	w1, [x21, #12]
    2304:	add	w0, w1, w0
    2308:	cmp	w1, w19
    230c:	b.cc	3914 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1aa4>  // b.lo, b.ul, b.last
    2310:	ldr	d0, [x21]
    2314:	sub	w23, w23, w6
    2318:	add	w0, w23, w0
    231c:	str	w0, [x21, #12]
    2320:	ldr	x0, [sp, #240]
    2324:	cnt	v0.8b, v0.8b
    2328:	addv	b0, v0.8b
    232c:	umov	w1, v0.b[0]
    2330:	cmp	w1, #0x1
    2334:	b.le	2294 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x424>
    2338:	ldr	w1, [x21, #20]
    233c:	add	x20, x20, #0x18
    2340:	cmp	x22, x20
    2344:	add	w1, w1, #0x1
    2348:	str	w1, [x21, #20]
    234c:	b.ne	22a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x430>  // b.any
    2350:	mov	w24, w27
    2354:	mov	w27, w2
    2358:	mov	x19, x3
    235c:	add	w27, w27, #0x1
    2360:	b	21b8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x348>
    2364:	mov	w3, w10
    2368:	mov	w12, #0x1                   	// #1
    236c:	mov	x11, #0x0                   	// #0
    2370:	cmn	x9, #0x1
    2374:	b.ne	374c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18dc>  // b.any
    2378:	ldr	w12, [sp, #304]
    237c:	lsl	w10, w1, #1
    2380:	cmp	x11, #0x0
    2384:	add	w13, w10, w1
    2388:	add	w12, w12, #0x1
    238c:	csel	x0, x0, x11, eq  // eq = none
    2390:	cmp	w13, w12, lsl #2
    2394:	b.ls	2e20 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xfb0>  // b.plast
    2398:	ldr	w10, [sp, #308]
    239c:	sub	w10, w1, w10
    23a0:	sub	w10, w10, w12
    23a4:	cmp	w10, w1, lsr #3
    23a8:	b.ls	23d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x568>  // b.plast
    23ac:	ldr	x1, [x0]
    23b0:	str	w12, [sp, #304]
    23b4:	cmn	x1, #0x1
    23b8:	b.eq	23c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x558>  // b.none
    23bc:	ldr	w1, [sp, #308]
    23c0:	sub	w1, w1, #0x1
    23c4:	str	w1, [sp, #308]
    23c8:	mov	w5, #0x0                   	// #0
    23cc:	str	x2, [x0]
    23d0:	str	wzr, [x0, #8]
    23d4:	b	2050 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1e0>
    23d8:	mov	w10, w5
    23dc:	lsr	w0, w5, #1
    23e0:	orr	x0, x0, x10
    23e4:	mov	w10, #0x40                  	// #64
    23e8:	stp	x2, x6, [sp, #152]
    23ec:	orr	x0, x0, x0, lsr #2
    23f0:	str	x7, [sp, #168]
    23f4:	orr	x0, x0, x0, lsr #4
    23f8:	str	w1, [sp, #176]
    23fc:	str	w8, [sp, #188]
    2400:	orr	x0, x0, x0, lsr #8
    2404:	str	x9, [sp, #192]
    2408:	orr	x0, x0, x0, lsr #16
    240c:	add	x5, x0, #0x1
    2410:	cmp	w5, w10
    2414:	csel	w5, w5, w10, cs  // cs = hs, nlast
    2418:	str	w5, [sp, #112]
    241c:	sub	w10, w5, #0x1
    2420:	str	w10, [sp, #144]
    2424:	ubfiz	x13, x5, #4, #32
    2428:	str	x13, [sp, #104]
    242c:	mov	x0, x13
    2430:	str	w5, [sp, #312]
    2434:	bl	0 <_Znwm>
    2438:	stp	x0, xzr, [sp, #296]
    243c:	ldr	w5, [sp, #112]
    2440:	ldr	x7, [sp, #168]
    2444:	mov	x11, x0
    2448:	ldr	w10, [sp, #144]
    244c:	ldr	w1, [sp, #176]
    2450:	ldr	w8, [sp, #188]
    2454:	and	w5, w5, w10
    2458:	ldr	x13, [sp, #104]
    245c:	ldp	x2, x6, [sp, #152]
    2460:	ldr	x9, [sp, #192]
    2464:	cbz	x7, 3474 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1604>
    2468:	ubfiz	x1, x1, #4, #32
    246c:	add	x12, x7, x1
    2470:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    2474:	add	x13, x0, x13
    2478:	str	x9, [x0], #16
    247c:	cmp	x13, x0
    2480:	b.ne	2478 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x608>  // b.any
    2484:	mov	x0, x7
    2488:	mov	w13, #0x0                   	// #0
    248c:	b	249c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x62c>
    2490:	add	x0, x0, #0x10
    2494:	cmp	x12, x0
    2498:	b.eq	3060 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x11f0>  // b.none
    249c:	ldr	x3, [x0]
    24a0:	cmn	x3, #0x3
    24a4:	b.hi	2490 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x620>  // b.pmore
    24a8:	mov	w4, #0x25                  	// #37
    24ac:	mul	w4, w3, w4
    24b0:	and	w9, w4, w10
    24b4:	and	w4, w4, w10
    24b8:	lsl	x9, x9, #4
    24bc:	add	x14, x11, x9
    24c0:	ldr	x9, [x11, x9]
    24c4:	cmp	x9, x3
    24c8:	b.ne	3444 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15d4>  // b.any
    24cc:	nop
    24d0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    24d4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    24d8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    24dc:	add	x3, x3, #0x0
    24e0:	add	x1, x1, #0x0
    24e4:	add	x0, x0, #0x0
    24e8:	mov	w2, #0x17a                 	// #378
    24ec:	bl	0 <__assert_fail>
    24f0:	str	xzr, [sp, #224]
    24f4:	b	1edc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6c>
    24f8:	ldr	x0, [sp, #120]
    24fc:	mov	x6, x28
    2500:	ldp	x19, x28, [sp, #136]
    2504:	ldr	w20, [sp, #128]
    2508:	ldr	x4, [sp, #152]
    250c:	ldr	x23, [x0, #176]
    2510:	ldr	w0, [x0, #184]
    2514:	mov	w1, #0x18                  	// #24
    2518:	mov	x2, x23
    251c:	mov	w5, #0x1                   	// #1
    2520:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
    2524:	umaddl	x0, w0, w1, x23
    2528:	cmp	x0, x23
    252c:	b.eq	2584 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x714>  // b.none
    2530:	ldr	x7, [sp, #104]
    2534:	nop
    2538:	ldr	d1, [x2]
    253c:	cnt	v0.8b, v1.8b
    2540:	addv	b0, v0.8b
    2544:	umov	w1, v0.b[0]
    2548:	cmp	w1, #0x1
    254c:	b.le	2578 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x708>
    2550:	ldrb	w1, [x2, #16]
    2554:	cbnz	w1, 2578 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x708>
    2558:	fmov	x1, d1
    255c:	cbz	x1, 2e18 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xfa8>
    2560:	fmov	x8, d1
    2564:	clz	x1, x1
    2568:	lsr	x1, x3, x1
    256c:	eor	x1, x1, x8
    2570:	bics	xzr, x1, x7
    2574:	b.eq	2e18 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xfa8>  // b.none
    2578:	add	x2, x2, #0x18
    257c:	cmp	x0, x2
    2580:	b.ne	2538 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6c8>  // b.any
    2584:	ldr	w23, [sp, #312]
    2588:	ldr	w0, [sp, #304]
    258c:	ldr	x22, [sp, #296]
    2590:	lsl	x23, x23, #4
    2594:	add	x7, x22, x23
    2598:	cbnz	w0, 26cc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x85c>
    259c:	mov	x2, x7
    25a0:	mov	w11, #0x3f                  	// #63
    25a4:	mov	x10, #0x1                   	// #1
    25a8:	cmp	x7, x2
    25ac:	b.eq	2640 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x7d0>  // b.none
    25b0:	cmp	w20, #0x1
    25b4:	b.ls	2618 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x7a8>  // b.plast
    25b8:	ldr	w8, [sp, #232]
    25bc:	mov	x0, #0x1                   	// #1
    25c0:	ldr	x5, [x19, #40]
    25c4:	nop
    25c8:	cbz	x5, 34cc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x165c>
    25cc:	ldr	w1, [x19, #48]
    25d0:	cmp	w1, w0
    25d4:	b.ls	34ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x163c>  // b.plast
    25d8:	ldr	x1, [x19, #32]
    25dc:	add	x1, x1, x0, lsl #5
    25e0:	ldr	w1, [x1, #16]
    25e4:	cmn	w1, #0x1
    25e8:	b.eq	260c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x79c>  // b.none
    25ec:	cmp	x4, x0
    25f0:	b.ls	348c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x161c>  // b.plast
    25f4:	ldr	x1, [x28, x0, lsl #3]
    25f8:	ldr	x3, [x2]
    25fc:	cmp	x3, x1
    2600:	b.eq	260c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x79c>  // b.none
    2604:	bics	xzr, x3, x1
    2608:	b.eq	26f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x888>  // b.none
    260c:	add	x0, x0, #0x1
    2610:	cmp	w20, w0
    2614:	b.hi	25c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x758>  // b.pmore
    2618:	add	x2, x2, #0x10
    261c:	cmp	x7, x2
    2620:	b.cc	3978 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b08>  // b.lo, b.ul, b.last
    2624:	b.eq	25a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x738>  // b.none
    2628:	ldr	x0, [x2]
    262c:	cmn	x0, #0x3
    2630:	b.ls	25a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x738>  // b.plast
    2634:	add	x2, x2, #0x10
    2638:	cmp	x7, x2
    263c:	b.ne	2628 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x7b8>  // b.any
    2640:	ldr	w19, [sp, #232]
    2644:	cmp	w19, #0x40
    2648:	b.ls	312c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x12bc>  // b.plast
    264c:	add	x0, sp, #0xe0
    2650:	str	x6, [sp, #112]
    2654:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2658:	sub	w19, w19, w0
    265c:	cmp	w19, #0x40
    2660:	ldr	x6, [sp, #112]
    2664:	b.hi	3894 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a24>  // b.pmore
    2668:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
    266c:	ldr	x0, [sp, #224]
    2670:	ldr	x3, [sp, #120]
    2674:	ldr	x1, [x1]
    2678:	ldr	x2, [x0]
    267c:	str	x2, [x3, #288]
    2680:	mov	x2, x3
    2684:	ldrb	w1, [x1]
    2688:	ldr	x3, [sp, #104]
    268c:	stp	x3, x6, [x2, #296]
    2690:	cbnz	w1, 3150 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x12e0>
    2694:	bl	0 <_ZdaPv>
    2698:	mov	x0, x22
    269c:	mov	x1, x23
    26a0:	bl	0 <_ZdlPvm>
    26a4:	ldr	x0, [sp, #240]
    26a8:	cbz	x0, 26b0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x840>
    26ac:	bl	0 <_ZdlPv>
    26b0:	ldp	x19, x20, [sp, #16]
    26b4:	ldp	x21, x22, [sp, #32]
    26b8:	ldp	x23, x24, [sp, #48]
    26bc:	ldp	x25, x26, [sp, #64]
    26c0:	ldp	x27, x28, [sp, #80]
    26c4:	ldp	x29, x30, [sp], #320
    26c8:	ret
    26cc:	cmp	x7, x22
    26d0:	b.cc	3978 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b08>  // b.lo, b.ul, b.last
    26d4:	b.eq	259c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x72c>  // b.none
    26d8:	mov	x2, x22
    26dc:	ldr	x0, [x2]
    26e0:	cmn	x0, #0x3
    26e4:	b.ls	25a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x730>  // b.plast
    26e8:	add	x2, x2, #0x10
    26ec:	cmp	x7, x2
    26f0:	b.ne	26dc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x86c>  // b.any
    26f4:	b	25a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x730>
    26f8:	cbz	x1, 37a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1930>
    26fc:	clz	x1, x1
    2700:	sub	w1, w11, w1
    2704:	cmp	w1, w8
    2708:	b.cs	37d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1968>  // b.hs, b.nlast
    270c:	cmp	w8, #0x40
    2710:	lsl	x1, x10, x1
    2714:	ldr	x3, [sp, #224]
    2718:	b.hi	2728 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8b8>  // b.pmore
    271c:	orr	x1, x3, x1
    2720:	str	x1, [sp, #224]
    2724:	b	260c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x79c>
    2728:	ldr	x9, [x3]
    272c:	orr	x1, x9, x1
    2730:	str	x1, [x3]
    2734:	b	260c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x79c>
    2738:	ldr	x9, [x8]
    273c:	orr	x0, x9, x0
    2740:	str	x0, [x8]
    2744:	b	1fa0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x130>
    2748:	mov	w21, #0x0                   	// #0
    274c:	b	1fb8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x148>
    2750:	stp	x5, x8, [sp, #104]
    2754:	bl	0 <_ZN4llvm9WithColor7warningEv>
    2758:	mov	x6, x0
    275c:	ldp	x1, x2, [x0, #16]
    2760:	ldp	x5, x8, [sp, #104]
    2764:	sub	x1, x1, x2
    2768:	cmp	x1, #0x3b
    276c:	b.ls	29e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb70>  // b.plast
    2770:	adrp	x7, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2774:	add	x7, x7, #0x0
    2778:	ldp	x0, x1, [x7]
    277c:	stp	x0, x1, [x2]
    2780:	ldr	w9, [x7, #56]
    2784:	ldp	x0, x1, [x7, #16]
    2788:	stp	x0, x1, [x2, #16]
    278c:	ldp	x0, x1, [x7, #32]
    2790:	stp	x0, x1, [x2, #32]
    2794:	ldr	x0, [x7, #48]
    2798:	str	x0, [x2, #48]
    279c:	str	w9, [x2, #56]
    27a0:	ldr	x0, [x6, #24]
    27a4:	add	x0, x0, #0x3c
    27a8:	str	x0, [x6, #24]
    27ac:	ldr	x1, [x8, x5]
    27b0:	cbz	x1, 2990 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb20>
    27b4:	mov	x0, x1
    27b8:	stp	x1, x6, [sp, #104]
    27bc:	bl	0 <strlen>
    27c0:	ldp	x1, x6, [sp, #104]
    27c4:	mov	x2, x0
    27c8:	ldp	x5, x0, [x6, #16]
    27cc:	sub	x7, x5, x0
    27d0:	cmp	x2, x7
    27d4:	b.hi	2984 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb14>  // b.pmore
    27d8:	cbz	x2, 27f4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x984>
    27dc:	stp	x2, x6, [sp, #104]
    27e0:	bl	0 <memcpy>
    27e4:	ldp	x2, x6, [sp, #104]
    27e8:	ldp	x5, x0, [x6, #16]
    27ec:	add	x0, x0, x2
    27f0:	str	x0, [x6, #24]
    27f4:	cmp	x5, x0
    27f8:	b.eq	299c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb2c>  // b.none
    27fc:	mov	w1, #0xa                   	// #10
    2800:	strb	w1, [x0]
    2804:	ldr	x0, [x6, #24]
    2808:	add	x0, x0, #0x1
    280c:	str	x0, [x6, #24]
    2810:	bl	0 <_ZN4llvm9WithColor4noteEv>
    2814:	mov	x5, x0
    2818:	ldp	x1, x2, [x0, #16]
    281c:	sub	x1, x1, x2
    2820:	cmp	x1, #0x19
    2824:	b.ls	29c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb58>  // b.plast
    2828:	adrp	x6, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    282c:	add	x6, x6, #0x0
    2830:	ldp	x0, x1, [x6]
    2834:	stp	x0, x1, [x2]
    2838:	ldrh	w0, [x6, #24]
    283c:	ldr	x1, [x6, #16]
    2840:	str	x1, [x2, #16]
    2844:	strh	w0, [x2, #24]
    2848:	ldr	x0, [x5, #24]
    284c:	add	x0, x0, #0x1a
    2850:	str	x0, [x5, #24]
    2854:	ldr	x1, [x23]
    2858:	cbz	x1, 2928 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xab8>
    285c:	mov	x0, x1
    2860:	stp	x1, x5, [sp, #104]
    2864:	bl	0 <strlen>
    2868:	ldp	x1, x5, [sp, #104]
    286c:	mov	x2, x0
    2870:	ldp	x6, x0, [x5, #16]
    2874:	sub	x6, x6, x0
    2878:	cmp	x2, x6
    287c:	b.hi	291c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xaac>  // b.pmore
    2880:	cbz	x2, 28a0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa30>
    2884:	stp	x2, x5, [sp, #104]
    2888:	bl	0 <memcpy>
    288c:	ldp	x2, x5, [sp, #104]
    2890:	ldp	x6, x0, [x5, #16]
    2894:	add	x0, x0, x2
    2898:	str	x0, [x5, #24]
    289c:	sub	x6, x6, x0
    28a0:	cmp	x6, #0xe
    28a4:	b.ls	2938 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xac8>  // b.plast
    28a8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    28ac:	add	x1, x1, #0x0
    28b0:	ldr	x2, [x1]
    28b4:	str	x2, [x0]
    28b8:	ldur	x1, [x1, #7]
    28bc:	stur	x1, [x0, #7]
    28c0:	mov	x1, x20
    28c4:	ldr	x0, [x5, #24]
    28c8:	add	x0, x0, #0xf
    28cc:	str	x0, [x5, #24]
    28d0:	mov	x0, x5
    28d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28d8:	mov	x1, x0
    28dc:	ldp	x2, x5, [x0, #16]
    28e0:	sub	x2, x2, x5
    28e4:	cmp	x2, #0x1
    28e8:	b.ls	2970 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb00>  // b.plast
    28ec:	mov	w0, #0xa29                 	// #2601
    28f0:	strh	w0, [x5]
    28f4:	ldr	x0, [x1, #24]
    28f8:	add	x0, x0, #0x2
    28fc:	str	x0, [x1, #24]
    2900:	b	205c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    2904:	ldr	x0, [sp, #128]
    2908:	mov	x2, x22
    290c:	stp	x6, x7, [sp, #104]
    2910:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2914:	ldp	x6, x7, [sp, #104]
    2918:	b	1ff4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x184>
    291c:	mov	x0, x5
    2920:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2924:	mov	x5, x0
    2928:	ldp	x6, x0, [x5, #16]
    292c:	sub	x6, x6, x0
    2930:	cmp	x6, #0xe
    2934:	b.hi	28a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa38>  // b.pmore
    2938:	mov	x2, #0xf                   	// #15
    293c:	mov	x0, x5
    2940:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2944:	add	x1, x1, #0x0
    2948:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    294c:	mov	x5, x0
    2950:	mov	x0, x5
    2954:	mov	x1, x20
    2958:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    295c:	mov	x1, x0
    2960:	ldp	x2, x5, [x0, #16]
    2964:	sub	x2, x2, x5
    2968:	cmp	x2, #0x1
    296c:	b.hi	28ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa7c>  // b.pmore
    2970:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2974:	mov	x2, #0x2                   	// #2
    2978:	add	x1, x1, #0x0
    297c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2980:	b	205c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    2984:	mov	x0, x6
    2988:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    298c:	mov	x6, x0
    2990:	ldp	x5, x0, [x6, #16]
    2994:	cmp	x5, x0
    2998:	b.ne	27fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x98c>  // b.any
    299c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    29a0:	add	x1, x1, #0x0
    29a4:	mov	x2, #0x1                   	// #1
    29a8:	mov	x0, x6
    29ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29b0:	bl	0 <_ZN4llvm9WithColor4noteEv>
    29b4:	mov	x5, x0
    29b8:	ldp	x1, x2, [x0, #16]
    29bc:	sub	x1, x1, x2
    29c0:	cmp	x1, #0x19
    29c4:	b.hi	2828 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9b8>  // b.pmore
    29c8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    29cc:	mov	x2, #0x1a                  	// #26
    29d0:	add	x1, x1, #0x0
    29d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29d8:	mov	x5, x0
    29dc:	b	2854 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9e4>
    29e0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    29e4:	mov	x2, #0x3c                  	// #60
    29e8:	add	x1, x1, #0x0
    29ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29f0:	mov	x6, x0
    29f4:	ldp	x5, x8, [sp, #104]
    29f8:	b	27ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x93c>
    29fc:	ldr	x1, [sp, #104]
    2a00:	cmp	w24, w27
    2a04:	orr	x1, x1, x26
    2a08:	str	x1, [sp, #104]
    2a0c:	b.hi	2258 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x3e8>  // b.pmore
    2a10:	mov	x6, x28
    2a14:	ldr	w20, [sp, #128]
    2a18:	ldp	x19, x28, [sp, #136]
    2a1c:	ldr	x4, [sp, #152]
    2a20:	b	2514 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6a4>
    2a24:	mov	w10, #0x1                   	// #1
    2a28:	mov	x4, #0x0                   	// #0
    2a2c:	cmn	x8, #0x1
    2a30:	b.ne	3504 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1694>  // b.any
    2a34:	ldr	w10, [sp, #304]
    2a38:	lsl	w0, w25, #1
    2a3c:	cmp	x4, #0x0
    2a40:	add	w11, w0, w25
    2a44:	add	w10, w10, #0x1
    2a48:	csel	x4, x4, x9, ne  // ne = any
    2a4c:	cmp	w11, w10, lsl #2
    2a50:	b.ls	2c30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdc0>  // b.plast
    2a54:	ldr	w0, [sp, #308]
    2a58:	sub	w0, w25, w0
    2a5c:	sub	w0, w0, w10
    2a60:	cmp	w0, w25, lsr #3
    2a64:	b.ls	2a94 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc24>  // b.plast
    2a68:	ldr	x0, [x4]
    2a6c:	str	w10, [sp, #304]
    2a70:	cmn	x0, #0x1
    2a74:	b.eq	2a84 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc14>  // b.none
    2a78:	ldr	w0, [sp, #308]
    2a7c:	sub	w0, w0, #0x1
    2a80:	str	w0, [sp, #308]
    2a84:	mov	w0, #0x0                   	// #0
    2a88:	str	x1, [x4]
    2a8c:	str	wzr, [x4, #8]
    2a90:	b	2300 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x490>
    2a94:	mov	w1, w5
    2a98:	lsr	w0, w5, #1
    2a9c:	orr	x0, x0, x1
    2aa0:	mov	w1, #0x40                  	// #64
    2aa4:	str	w6, [sp, #188]
    2aa8:	orr	x0, x0, x0, lsr #2
    2aac:	stp	x8, x7, [sp, #192]
    2ab0:	orr	x0, x0, x0, lsr #4
    2ab4:	str	w2, [sp, #208]
    2ab8:	str	x3, [sp, #216]
    2abc:	orr	x0, x0, x0, lsr #8
    2ac0:	orr	x0, x0, x0, lsr #16
    2ac4:	add	x4, x0, #0x1
    2ac8:	cmp	w4, w1
    2acc:	csel	w4, w4, w1, cs  // cs = hs, nlast
    2ad0:	str	w4, [sp, #168]
    2ad4:	sub	w9, w4, #0x1
    2ad8:	str	w9, [sp, #176]
    2adc:	ubfiz	x5, x4, #4, #32
    2ae0:	str	x5, [sp, #160]
    2ae4:	mov	x0, x5
    2ae8:	str	w4, [sp, #312]
    2aec:	bl	0 <_Znwm>
    2af0:	stp	x0, xzr, [sp, #296]
    2af4:	ldr	w4, [sp, #168]
    2af8:	ldp	x8, x7, [sp, #192]
    2afc:	mov	x11, x0
    2b00:	ldr	w9, [sp, #176]
    2b04:	mov	w18, #0x25                  	// #37
    2b08:	ldr	w6, [sp, #188]
    2b0c:	ldr	w2, [sp, #208]
    2b10:	and	w4, w9, w4
    2b14:	ldr	x5, [sp, #160]
    2b18:	ldr	x3, [sp, #216]
    2b1c:	cbz	x7, 34ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x167c>
    2b20:	ubfiz	x1, x25, #4, #32
    2b24:	add	x10, x7, x1
    2b28:	cbnz	w4, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    2b2c:	add	x5, x0, x5
    2b30:	str	x8, [x0], #16
    2b34:	cmp	x5, x0
    2b38:	b.ne	2b30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcc0>  // b.any
    2b3c:	mov	x0, x7
    2b40:	mov	w8, #0x0                   	// #0
    2b44:	b	2b54 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xce4>
    2b48:	add	x0, x0, #0x10
    2b4c:	cmp	x10, x0
    2b50:	b.eq	2bb8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xd48>  // b.none
    2b54:	ldr	x5, [x0]
    2b58:	cmn	x5, #0x3
    2b5c:	b.hi	2b48 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcd8>  // b.pmore
    2b60:	mul	w8, w5, w18
    2b64:	and	w12, w8, w9
    2b68:	and	w8, w8, w9
    2b6c:	lsl	x12, x12, #4
    2b70:	add	x14, x11, x12
    2b74:	ldr	x12, [x11, x12]
    2b78:	cmp	x12, x5
    2b7c:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    2b80:	mov	w15, #0x1                   	// #1
    2b84:	mov	x13, #0x0                   	// #0
    2b88:	cmn	x12, #0x1
    2b8c:	b.ne	3838 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19c8>  // b.any
    2b90:	cmp	x13, #0x0
    2b94:	ldr	w12, [x0, #8]
    2b98:	csel	x13, x13, x14, ne  // ne = any
    2b9c:	add	x0, x0, #0x10
    2ba0:	add	w4, w4, #0x1
    2ba4:	cmp	x10, x0
    2ba8:	mov	w8, #0x1                   	// #1
    2bac:	str	x5, [x13]
    2bb0:	str	w12, [x13, #8]
    2bb4:	b.ne	2b54 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xce4>  // b.any
    2bb8:	cbz	w8, 2bc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xd50>
    2bbc:	str	w4, [sp, #304]
    2bc0:	mov	x0, x7
    2bc4:	str	w6, [sp, #160]
    2bc8:	str	w9, [sp, #168]
    2bcc:	str	x11, [sp, #176]
    2bd0:	str	w2, [sp, #188]
    2bd4:	str	x3, [sp, #192]
    2bd8:	bl	0 <_ZdlPvm>
    2bdc:	ldr	w6, [sp, #160]
    2be0:	mov	w18, #0x25                  	// #37
    2be4:	ldr	w9, [sp, #168]
    2be8:	ldr	w2, [sp, #188]
    2bec:	ldr	x11, [sp, #176]
    2bf0:	ldr	x3, [sp, #192]
    2bf4:	ldr	x5, [x24]
    2bf8:	cmn	x5, #0x3
    2bfc:	b.hi	3934 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>  // b.pmore
    2c00:	mul	w0, w5, w18
    2c04:	ldr	w10, [sp, #304]
    2c08:	and	w1, w0, w9
    2c0c:	add	w10, w10, #0x1
    2c10:	and	w0, w0, w9
    2c14:	lsl	x1, x1, #4
    2c18:	add	x4, x11, x1
    2c1c:	ldr	x1, [x11, x1]
    2c20:	cmp	x5, x1
    2c24:	b.ne	3368 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x14f8>  // b.any
    2c28:	str	w10, [sp, #304]
    2c2c:	b	2a78 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc08>
    2c30:	sub	w0, w0, #0x1
    2c34:	mov	w1, #0x40                  	// #64
    2c38:	str	w6, [sp, #188]
    2c3c:	orr	x0, x0, x0, lsr #1
    2c40:	str	x7, [sp, #192]
    2c44:	str	w2, [sp, #200]
    2c48:	orr	x0, x0, x0, lsr #2
    2c4c:	str	x3, [sp, #208]
    2c50:	orr	x0, x0, x0, lsr #4
    2c54:	orr	x0, x0, x0, lsr #8
    2c58:	orr	x0, x0, x0, lsr #16
    2c5c:	add	x5, x0, #0x1
    2c60:	cmp	w5, w1
    2c64:	csel	w5, w5, w1, cs  // cs = hs, nlast
    2c68:	str	w5, [sp, #168]
    2c6c:	sub	w9, w5, #0x1
    2c70:	str	w9, [sp, #176]
    2c74:	ubfiz	x4, x5, #4, #32
    2c78:	str	x4, [sp, #160]
    2c7c:	mov	x0, x4
    2c80:	str	w5, [sp, #312]
    2c84:	bl	0 <_Znwm>
    2c88:	stp	x0, xzr, [sp, #296]
    2c8c:	ldr	w5, [sp, #168]
    2c90:	ldr	x7, [sp, #192]
    2c94:	mov	x11, x0
    2c98:	ldr	w9, [sp, #176]
    2c9c:	mov	w18, #0x25                  	// #37
    2ca0:	ldr	w6, [sp, #188]
    2ca4:	ldr	w2, [sp, #200]
    2ca8:	and	w5, w5, w9
    2cac:	ldr	x4, [sp, #160]
    2cb0:	ldr	x3, [sp, #208]
    2cb4:	cbz	x7, 338c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x151c>
    2cb8:	ubfiz	x1, x25, #4, #32
    2cbc:	add	x8, x7, x1
    2cc0:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    2cc4:	add	x4, x0, x4
    2cc8:	mov	x10, #0xffffffffffffffff    	// #-1
    2ccc:	nop
    2cd0:	str	x10, [x0], #16
    2cd4:	cmp	x4, x0
    2cd8:	b.ne	2cd0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe60>  // b.any
    2cdc:	cmp	x7, x8
    2ce0:	mov	x0, x7
    2ce4:	mov	w10, #0x0                   	// #0
    2ce8:	b.ne	2cfc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe8c>  // b.any
    2cec:	b	2d68 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xef8>
    2cf0:	add	x0, x0, #0x10
    2cf4:	cmp	x8, x0
    2cf8:	b.eq	2d60 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xef0>  // b.none
    2cfc:	ldr	x4, [x0]
    2d00:	cmn	x4, #0x3
    2d04:	b.hi	2cf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe80>  // b.pmore
    2d08:	mul	w10, w4, w18
    2d0c:	and	w12, w10, w9
    2d10:	and	w10, w10, w9
    2d14:	lsl	x12, x12, #4
    2d18:	add	x14, x11, x12
    2d1c:	ldr	x12, [x11, x12]
    2d20:	cmp	x4, x12
    2d24:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    2d28:	mov	w15, #0x1                   	// #1
    2d2c:	mov	x13, #0x0                   	// #0
    2d30:	cmn	x12, #0x1
    2d34:	b.ne	39b8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b48>  // b.any
    2d38:	cmp	x13, #0x0
    2d3c:	ldr	w12, [x0, #8]
    2d40:	csel	x13, x13, x14, ne  // ne = any
    2d44:	add	x0, x0, #0x10
    2d48:	add	w5, w5, #0x1
    2d4c:	cmp	x8, x0
    2d50:	mov	w10, #0x1                   	// #1
    2d54:	str	x4, [x13]
    2d58:	str	w12, [x13, #8]
    2d5c:	b.ne	2cfc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe8c>  // b.any
    2d60:	cbz	w10, 2d68 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xef8>
    2d64:	str	w5, [sp, #304]
    2d68:	mov	x0, x7
    2d6c:	str	w6, [sp, #160]
    2d70:	str	x11, [sp, #168]
    2d74:	str	w9, [sp, #176]
    2d78:	str	w2, [sp, #188]
    2d7c:	str	x3, [sp, #192]
    2d80:	bl	0 <_ZdlPvm>
    2d84:	ldr	w6, [sp, #160]
    2d88:	mov	w18, #0x25                  	// #37
    2d8c:	ldr	w9, [sp, #176]
    2d90:	ldr	w2, [sp, #188]
    2d94:	ldr	x11, [sp, #168]
    2d98:	ldr	x3, [sp, #192]
    2d9c:	ldr	x5, [x24]
    2da0:	cmn	x5, #0x3
    2da4:	b.hi	3934 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>  // b.pmore
    2da8:	mul	w0, w5, w18
    2dac:	ldr	w10, [sp, #304]
    2db0:	and	w1, w0, w9
    2db4:	add	w10, w10, #0x1
    2db8:	and	w0, w0, w9
    2dbc:	lsl	x1, x1, #4
    2dc0:	add	x4, x11, x1
    2dc4:	ldr	x1, [x11, x1]
    2dc8:	cmp	x5, x1
    2dcc:	b.eq	2c28 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdb8>  // b.none
    2dd0:	mov	w8, #0x1                   	// #1
    2dd4:	mov	x7, #0x0                   	// #0
    2dd8:	cmn	x1, #0x1
    2ddc:	b.eq	3378 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1508>  // b.none
    2de0:	add	w0, w0, w8
    2de4:	cmp	x7, #0x0
    2de8:	and	w12, w0, w9
    2dec:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    2df0:	csel	x7, x7, x4, ne  // ne = any
    2df4:	add	w8, w8, #0x1
    2df8:	lsl	x1, x12, #4
    2dfc:	and	w0, w0, w9
    2e00:	add	x4, x11, x1
    2e04:	ldr	x1, [x11, x1]
    2e08:	cmp	x5, x1
    2e0c:	b.ne	2dd8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf68>  // b.any
    2e10:	str	w10, [sp, #304]
    2e14:	b	2a78 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc08>
    2e18:	strb	w5, [x2, #16]
    2e1c:	b	2578 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x708>
    2e20:	sub	w0, w10, #0x1
    2e24:	mov	w8, #0x40                  	// #64
    2e28:	stp	x2, x6, [sp, #152]
    2e2c:	orr	x0, x0, x0, lsr #1
    2e30:	str	x7, [sp, #168]
    2e34:	orr	x0, x0, x0, lsr #2
    2e38:	str	w1, [sp, #176]
    2e3c:	orr	x0, x0, x0, lsr #4
    2e40:	orr	x0, x0, x0, lsr #8
    2e44:	orr	x0, x0, x0, lsr #16
    2e48:	add	x5, x0, #0x1
    2e4c:	cmp	w5, w8
    2e50:	csel	w5, w5, w8, cs  // cs = hs, nlast
    2e54:	str	w5, [sp, #112]
    2e58:	sub	w10, w5, #0x1
    2e5c:	str	w10, [sp, #144]
    2e60:	ubfiz	x8, x5, #4, #32
    2e64:	str	x8, [sp, #104]
    2e68:	mov	x0, x8
    2e6c:	str	w5, [sp, #312]
    2e70:	bl	0 <_Znwm>
    2e74:	stp	x0, xzr, [sp, #296]
    2e78:	ldr	w5, [sp, #112]
    2e7c:	ldr	x7, [sp, #168]
    2e80:	mov	x9, x0
    2e84:	ldr	w10, [sp, #144]
    2e88:	ldr	w1, [sp, #176]
    2e8c:	and	w5, w5, w10
    2e90:	ldr	x8, [sp, #104]
    2e94:	ldp	x2, x6, [sp, #152]
    2e98:	cbz	x7, 3668 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17f8>
    2e9c:	ubfiz	x1, x1, #4, #32
    2ea0:	add	x11, x7, x1
    2ea4:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    2ea8:	add	x8, x0, x8
    2eac:	mov	x12, #0xffffffffffffffff    	// #-1
    2eb0:	str	x12, [x0], #16
    2eb4:	cmp	x8, x0
    2eb8:	b.ne	2eb0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1040>  // b.any
    2ebc:	cmp	x7, x11
    2ec0:	mov	x0, x7
    2ec4:	mov	w12, #0x0                   	// #0
    2ec8:	b.ne	2edc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x106c>  // b.any
    2ecc:	b	2f4c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10dc>
    2ed0:	add	x0, x0, #0x10
    2ed4:	cmp	x11, x0
    2ed8:	b.eq	2f44 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10d4>  // b.none
    2edc:	ldr	x3, [x0]
    2ee0:	cmn	x3, #0x3
    2ee4:	b.hi	2ed0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1060>  // b.pmore
    2ee8:	mov	w4, #0x25                  	// #37
    2eec:	mul	w4, w3, w4
    2ef0:	and	w8, w4, w10
    2ef4:	and	w4, w4, w10
    2ef8:	lsl	x8, x8, #4
    2efc:	add	x13, x9, x8
    2f00:	ldr	x8, [x9, x8]
    2f04:	cmp	x3, x8
    2f08:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    2f0c:	mov	w14, #0x1                   	// #1
    2f10:	mov	x12, #0x0                   	// #0
    2f14:	cmn	x8, #0x1
    2f18:	b.ne	3804 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1994>  // b.any
    2f1c:	cmp	x12, #0x0
    2f20:	ldr	w4, [x0, #8]
    2f24:	csel	x13, x13, x12, eq  // eq = none
    2f28:	add	x0, x0, #0x10
    2f2c:	add	w5, w5, #0x1
    2f30:	cmp	x11, x0
    2f34:	mov	w12, #0x1                   	// #1
    2f38:	str	x3, [x13]
    2f3c:	str	w4, [x13, #8]
    2f40:	b.ne	2edc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x106c>  // b.any
    2f44:	cbz	w12, 2f4c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10dc>
    2f48:	str	w5, [sp, #304]
    2f4c:	mov	x0, x7
    2f50:	stp	x2, x6, [sp, #104]
    2f54:	str	x9, [sp, #144]
    2f58:	str	w10, [sp, #152]
    2f5c:	bl	0 <_ZdlPvm>
    2f60:	ldp	x2, x6, [sp, #104]
    2f64:	ldr	w10, [sp, #152]
    2f68:	ldr	x9, [sp, #144]
    2f6c:	cmn	x2, #0x3
    2f70:	b.hi	3934 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>  // b.pmore
    2f74:	mov	w0, #0x25                  	// #37
    2f78:	ldr	w12, [sp, #304]
    2f7c:	mul	w1, w2, w0
    2f80:	add	w12, w12, #0x1
    2f84:	and	w5, w1, w10
    2f88:	and	w1, w1, w10
    2f8c:	lsl	x5, x5, #4
    2f90:	add	x0, x9, x5
    2f94:	ldr	x8, [x9, x5]
    2f98:	cmp	x2, x8
    2f9c:	b.ne	3780 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1910>  // b.any
    2fa0:	str	w12, [sp, #304]
    2fa4:	b	23bc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x54c>
    2fa8:	mov	w0, w0
    2fac:	mov	x1, #0xffffffff            	// #4294967295
    2fb0:	add	x0, x0, #0x2
    2fb4:	orr	x0, x0, x0, lsr #1
    2fb8:	orr	x0, x0, x0, lsr #2
    2fbc:	orr	x0, x0, x0, lsr #4
    2fc0:	orr	x0, x0, x0, lsr #8
    2fc4:	orr	x20, x0, x0, lsr #16
    2fc8:	orr	x20, x20, x0, lsr #32
    2fcc:	add	x20, x20, #0x1
    2fd0:	str	x20, [sp, #264]
    2fd4:	cmp	x20, x1
    2fd8:	b.hi	30f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1280>  // b.pmore
    2fdc:	add	x0, x20, x20, lsl #1
    2fe0:	lsl	x0, x0, #3
    2fe4:	bl	0 <malloc>
    2fe8:	mov	w18, #0x25                  	// #37
    2fec:	mov	x23, x0
    2ff0:	cbz	x0, 310c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x129c>
    2ff4:	mov	w1, #0x18                  	// #24
    2ff8:	mov	x2, x23
    2ffc:	ldr	x0, [x19, #176]
    3000:	umull	x21, w21, w1
    3004:	add	x8, x0, x21
    3008:	mov	x1, x0
    300c:	cmp	x0, x8
    3010:	b.eq	3034 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x11c4>  // b.none
    3014:	ldp	x4, x5, [x1]
    3018:	stp	x4, x5, [x2]
    301c:	add	x1, x1, #0x18
    3020:	ldur	x3, [x1, #-8]
    3024:	str	x3, [x2, #16]
    3028:	cmp	x8, x1
    302c:	add	x2, x2, #0x18
    3030:	b.ne	3014 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x11a4>  // b.any
    3034:	add	x1, x19, #0xc0
    3038:	cmp	x0, x1
    303c:	b.eq	3054 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x11e4>  // b.none
    3040:	bl	0 <free>
    3044:	ldr	w21, [x19, #184]
    3048:	mov	w2, #0x18                  	// #24
    304c:	mov	w18, #0x25                  	// #37
    3050:	umull	x21, w21, w2
    3054:	str	x23, [x19, #176]
    3058:	str	w20, [x19, #188]
    305c:	b	21e8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x378>
    3060:	cbz	w13, 3068 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x11f8>
    3064:	str	w5, [sp, #304]
    3068:	mov	x0, x7
    306c:	stp	x2, x6, [sp, #104]
    3070:	str	w8, [sp, #144]
    3074:	str	x11, [sp, #152]
    3078:	str	w10, [sp, #160]
    307c:	bl	0 <_ZdlPvm>
    3080:	ldp	x2, x6, [sp, #104]
    3084:	ldr	w8, [sp, #144]
    3088:	ldr	w10, [sp, #160]
    308c:	ldr	x11, [sp, #152]
    3090:	and	w1, w8, w10
    3094:	ldr	w12, [sp, #304]
    3098:	and	w8, w8, w10
    309c:	lsl	x1, x1, #4
    30a0:	mov	w3, w8
    30a4:	add	x0, x11, x1
    30a8:	add	w12, w12, #0x1
    30ac:	mov	w5, #0x1                   	// #1
    30b0:	ldr	x7, [x11, x1]
    30b4:	mov	x1, #0x0                   	// #0
    30b8:	cmp	x2, x7
    30bc:	b.eq	2fa0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1130>  // b.none
    30c0:	cmn	x7, #0x1
    30c4:	b.ne	3ab4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c44>  // b.any
    30c8:	cbz	x1, 23ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x53c>
    30cc:	mov	x0, x1
    30d0:	ldr	x1, [x1]
    30d4:	b	23b0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x540>
    30d8:	mov	x1, x22
    30dc:	mov	x0, x24
    30e0:	str	x4, [sp, #104]
    30e4:	bl	298 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    30e8:	ldr	x4, [sp, #104]
    30ec:	b	2108 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x298>
    30f0:	mov	w0, #0xffffffe8            	// #-24
    30f4:	mov	w20, #0xffffffff            	// #-1
    30f8:	movk	x0, #0x17, lsl #32
    30fc:	bl	0 <malloc>
    3100:	mov	w18, #0x25                  	// #37
    3104:	mov	x23, x0
    3108:	cbnz	x0, 2ff4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1184>
    310c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3110:	mov	w1, #0x1                   	// #1
    3114:	add	x0, x0, #0x0
    3118:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    311c:	mov	x23, #0x0                   	// #0
    3120:	ldr	w21, [x19, #184]
    3124:	mov	w18, #0x25                  	// #37
    3128:	b	2ff4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1184>
    312c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    3130:	ldr	x2, [sp, #120]
    3134:	ldr	x0, [x0]
    3138:	ldr	x1, [sp, #104]
    313c:	stp	x1, x6, [x2, #296]
    3140:	ldrb	w0, [x0]
    3144:	ldr	x1, [sp, #224]
    3148:	str	x1, [x2, #288]
    314c:	cbz	w0, 2698 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x828>
    3150:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3154:	add	x0, x0, #0x0
    3158:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    315c:	tst	w0, #0xff
    3160:	b.eq	3650 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17e0>  // b.none
    3164:	ldr	x1, [sp, #120]
    3168:	mov	w0, #0x18                  	// #24
    316c:	ldr	w25, [x1, #184]
    3170:	ldr	x19, [x1, #176]
    3174:	umaddl	x25, w25, w0, x19
    3178:	cmp	x19, x25
    317c:	b.eq	3684 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1814>  // b.none
    3180:	adrp	x24, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3184:	adrp	x21, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3188:	add	x24, x24, #0x0
    318c:	add	x21, x21, #0x0
    3190:	add	x20, sp, #0x108
    3194:	adrp	x28, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3198:	adrp	x27, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    319c:	adrp	x26, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    31a0:	b	333c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x14cc>
    31a4:	ldp	x4, x5, [x24]
    31a8:	stp	x4, x5, [x3]
    31ac:	ldr	x0, [x0, #24]
    31b0:	add	x0, x0, #0x10
    31b4:	str	x0, [x1, #24]
    31b8:	ldr	x3, [x19]
    31bc:	mov	w2, #0x1                   	// #1
    31c0:	stp	x3, xzr, [sp, #264]
    31c4:	mov	w3, #0x10                  	// #16
    31c8:	mov	x0, x1
    31cc:	mov	x1, x20
    31d0:	str	w3, [sp, #280]
    31d4:	strh	w2, [sp, #284]
    31d8:	strb	w2, [sp, #286]
    31dc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    31e0:	ldp	x1, x3, [x0, #16]
    31e4:	mov	x2, x0
    31e8:	sub	x1, x1, x3
    31ec:	cmp	x1, #0x1
    31f0:	b.ls	342c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15bc>  // b.plast
    31f4:	mov	w0, #0x202c                	// #8236
    31f8:	strh	w0, [x3]
    31fc:	ldr	x0, [x2, #24]
    3200:	add	x0, x0, #0x2
    3204:	str	x0, [x2, #24]
    3208:	ldr	x1, [x2, #16]
    320c:	sub	x1, x1, x0
    3210:	cmp	x1, #0x8
    3214:	b.ls	3414 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15a4>  // b.plast
    3218:	add	x1, x28, #0x0
    321c:	ldr	x3, [x1]
    3220:	str	x3, [x0]
    3224:	ldrb	w1, [x1, #8]
    3228:	strb	w1, [x0, #8]
    322c:	ldr	x0, [x2, #24]
    3230:	add	x0, x0, #0x9
    3234:	str	x0, [x2, #24]
    3238:	ldrb	w1, [x19, #16]
    323c:	mov	x0, x2
    3240:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    3244:	mov	x2, x0
    3248:	ldp	x1, x3, [x0, #16]
    324c:	sub	x1, x1, x3
    3250:	cmp	x1, #0x1
    3254:	b.ls	33fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x158c>  // b.plast
    3258:	mov	w0, #0x202c                	// #8236
    325c:	strh	w0, [x3]
    3260:	ldr	x0, [x2, #24]
    3264:	add	x0, x0, #0x2
    3268:	str	x0, [x2, #24]
    326c:	ldr	x1, [x2, #16]
    3270:	sub	x1, x1, x0
    3274:	cmp	x1, #0x6
    3278:	b.ls	33e4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1574>  // b.plast
    327c:	add	x1, x27, #0x0
    3280:	ldr	w3, [x1]
    3284:	ldur	w1, [x1, #3]
    3288:	str	w3, [x0]
    328c:	stur	w1, [x0, #3]
    3290:	ldr	x0, [x2, #24]
    3294:	add	x0, x0, #0x7
    3298:	str	x0, [x2, #24]
    329c:	ldr	w1, [x19, #20]
    32a0:	mov	x0, x2
    32a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    32a8:	mov	x2, x0
    32ac:	ldp	x1, x3, [x0, #16]
    32b0:	sub	x1, x1, x3
    32b4:	cmp	x1, #0x1
    32b8:	b.ls	33cc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x155c>  // b.plast
    32bc:	mov	w0, #0x202c                	// #8236
    32c0:	strh	w0, [x3]
    32c4:	ldr	x0, [x2, #24]
    32c8:	add	x0, x0, #0x2
    32cc:	str	x0, [x2, #24]
    32d0:	ldr	x1, [x2, #16]
    32d4:	sub	x1, x1, x0
    32d8:	cmp	x1, #0x2
    32dc:	b.ls	33b4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1544>  // b.plast
    32e0:	add	x1, x26, #0x0
    32e4:	ldrh	w3, [x1]
    32e8:	ldrb	w1, [x1, #2]
    32ec:	strh	w3, [x0]
    32f0:	strb	w1, [x0, #2]
    32f4:	ldr	x0, [x2, #24]
    32f8:	add	x0, x0, #0x3
    32fc:	str	x0, [x2, #24]
    3300:	mov	x0, x2
    3304:	ldp	w1, w2, [x19, #8]
    3308:	sub	w1, w2, w1
    330c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3310:	mov	x1, x0
    3314:	ldp	x3, x2, [x0, #16]
    3318:	cmp	x2, x3
    331c:	b.cs	33a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1538>  // b.hs, b.nlast
    3320:	add	x0, x2, #0x1
    3324:	str	x0, [x1, #24]
    3328:	mov	w0, #0xa                   	// #10
    332c:	strb	w0, [x2]
    3330:	add	x19, x19, #0x18
    3334:	cmp	x25, x19
    3338:	b.eq	3688 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1818>  // b.none
    333c:	bl	0 <_ZN4llvm4dbgsEv>
    3340:	mov	x1, x0
    3344:	ldp	x2, x3, [x0, #16]
    3348:	sub	x2, x2, x3
    334c:	cmp	x2, #0xf
    3350:	b.hi	31a4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1334>  // b.pmore
    3354:	mov	x1, x24
    3358:	mov	x2, #0x10                  	// #16
    335c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3360:	mov	x1, x0
    3364:	b	31b8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1348>
    3368:	mov	w8, #0x1                   	// #1
    336c:	mov	x7, #0x0                   	// #0
    3370:	cmn	x1, #0x1
    3374:	b.ne	3a7c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c0c>  // b.any
    3378:	mov	x1, x5
    337c:	cbz	x7, 2a68 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbf8>
    3380:	mov	x4, x7
    3384:	ldr	x0, [x7]
    3388:	b	2a6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbfc>
    338c:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    3390:	add	x4, x0, x4
    3394:	mov	x1, #0xffffffffffffffff    	// #-1
    3398:	str	x1, [x0], #16
    339c:	cmp	x4, x0
    33a0:	b.ne	3398 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1528>  // b.any
    33a4:	b	2d9c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf2c>
    33a8:	mov	w1, #0xa                   	// #10
    33ac:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    33b0:	b	3330 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x14c0>
    33b4:	mov	x0, x2
    33b8:	mov	x2, #0x3                   	// #3
    33bc:	add	x1, x26, #0x0
    33c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    33c4:	mov	x2, x0
    33c8:	b	3300 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1490>
    33cc:	mov	x2, #0x2                   	// #2
    33d0:	mov	x1, x21
    33d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    33d8:	mov	x2, x0
    33dc:	ldr	x0, [x0, #24]
    33e0:	b	32d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1460>
    33e4:	mov	x0, x2
    33e8:	mov	x2, #0x7                   	// #7
    33ec:	add	x1, x27, #0x0
    33f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    33f4:	mov	x2, x0
    33f8:	b	329c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x142c>
    33fc:	mov	x2, #0x2                   	// #2
    3400:	mov	x1, x21
    3404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3408:	mov	x2, x0
    340c:	ldr	x0, [x0, #24]
    3410:	b	326c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x13fc>
    3414:	mov	x0, x2
    3418:	mov	x2, #0x9                   	// #9
    341c:	add	x1, x28, #0x0
    3420:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3424:	mov	x2, x0
    3428:	b	3238 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x13c8>
    342c:	mov	x2, #0x2                   	// #2
    3430:	mov	x1, x21
    3434:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3438:	mov	x2, x0
    343c:	ldr	x0, [x0, #24]
    3440:	b	3208 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1398>
    3444:	mov	w15, #0x1                   	// #1
    3448:	mov	x13, #0x0                   	// #0
    344c:	cmn	x9, #0x1
    3450:	b.ne	3a48 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1bd8>  // b.any
    3454:	cmp	x13, #0x0
    3458:	ldr	w4, [x0, #8]
    345c:	csel	x14, x14, x13, eq  // eq = none
    3460:	add	w5, w5, #0x1
    3464:	mov	w13, #0x1                   	// #1
    3468:	str	x3, [x14]
    346c:	str	w4, [x14, #8]
    3470:	b	2490 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x620>
    3474:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    3478:	add	x13, x0, x13
    347c:	str	x9, [x0], #16
    3480:	cmp	x13, x0
    3484:	b.ne	347c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x160c>  // b.any
    3488:	b	3090 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1220>
    348c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3490:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3494:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3498:	add	x3, x3, #0x0
    349c:	add	x1, x1, #0x0
    34a0:	add	x0, x0, #0x0
    34a4:	mov	w2, #0xfa                  	// #250
    34a8:	bl	0 <__assert_fail>
    34ac:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34b0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34b4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34b8:	add	x3, x3, #0x0
    34bc:	add	x1, x1, #0x0
    34c0:	add	x0, x0, #0x0
    34c4:	mov	w2, #0x156                 	// #342
    34c8:	bl	0 <__assert_fail>
    34cc:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34d0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34d4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    34d8:	add	x3, x3, #0x0
    34dc:	add	x1, x1, #0x0
    34e0:	add	x0, x0, #0x0
    34e4:	mov	w2, #0x154                 	// #340
    34e8:	bl	0 <__assert_fail>
    34ec:	cbnz	w4, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    34f0:	add	x5, x0, x5
    34f4:	str	x8, [x0], #16
    34f8:	cmp	x5, x0
    34fc:	b.ne	34f4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1684>  // b.any
    3500:	b	2bf4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xd84>
    3504:	add	w0, w0, w10
    3508:	cmp	x4, #0x0
    350c:	and	w11, w5, w0
    3510:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3514:	csel	x9, x9, x4, eq  // eq = none
    3518:	add	w10, w10, #0x1
    351c:	lsl	x4, x11, #4
    3520:	and	w0, w5, w0
    3524:	add	x11, x7, x4
    3528:	ldr	x8, [x7, x4]
    352c:	cmp	x1, x8
    3530:	b.ne	39ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b7c>  // b.any
    3534:	ldr	w0, [x11, #8]
    3538:	sub	w19, w19, w0
    353c:	b	2300 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x490>
    3540:	bl	0 <_ZN4llvm4dbgsEv>
    3544:	mov	x1, x0
    3548:	ldp	x3, x2, [x0, #16]
    354c:	sub	x3, x3, x2
    3550:	cmp	x3, #0xd
    3554:	b.ls	39f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b88>  // b.plast
    3558:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    355c:	add	x0, x0, #0x0
    3560:	ldr	x3, [x0]
    3564:	str	x3, [x2]
    3568:	ldur	x0, [x0, #6]
    356c:	stur	x0, [x2, #6]
    3570:	ldr	x0, [x1, #24]
    3574:	add	x0, x0, #0xe
    3578:	str	x0, [x1, #24]
    357c:	ldr	x0, [sp, #120]
    3580:	mov	w2, #0x1                   	// #1
    3584:	mov	w3, #0x10                  	// #16
    3588:	str	w3, [sp, #280]
    358c:	strh	w2, [sp, #284]
    3590:	ldr	x4, [x0, #296]
    3594:	mov	x0, x1
    3598:	mov	x1, x20
    359c:	stp	x4, xzr, [sp, #264]
    35a0:	strb	w2, [sp, #286]
    35a4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    35a8:	ldp	x3, x2, [x0, #16]
    35ac:	mov	x1, x0
    35b0:	cmp	x2, x3
    35b4:	b.cs	396c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1afc>  // b.hs, b.nlast
    35b8:	add	x0, x2, #0x1
    35bc:	str	x0, [x1, #24]
    35c0:	mov	w0, #0xa                   	// #10
    35c4:	strb	w0, [x2]
    35c8:	bl	0 <_ZN4llvm4dbgsEv>
    35cc:	mov	x2, x0
    35d0:	ldp	x3, x1, [x0, #16]
    35d4:	sub	x3, x3, x1
    35d8:	cmp	x3, #0xd
    35dc:	b.ls	3954 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ae4>  // b.plast
    35e0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    35e4:	add	x0, x0, #0x0
    35e8:	ldr	x3, [x0]
    35ec:	str	x3, [x1]
    35f0:	ldur	x0, [x0, #6]
    35f4:	stur	x0, [x1, #6]
    35f8:	ldr	x0, [x2, #24]
    35fc:	add	x0, x0, #0xe
    3600:	str	x0, [x2, #24]
    3604:	ldr	x0, [sp, #120]
    3608:	mov	w3, #0x10                  	// #16
    360c:	mov	x1, x20
    3610:	str	w3, [sp, #280]
    3614:	ldr	x4, [x0, #304]
    3618:	mov	x0, x2
    361c:	mov	w2, #0x1                   	// #1
    3620:	stp	x4, xzr, [sp, #264]
    3624:	strh	w2, [sp, #284]
    3628:	strb	w2, [sp, #286]
    362c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    3630:	ldp	x3, x2, [x0, #16]
    3634:	mov	x1, x0
    3638:	cmp	x2, x3
    363c:	b.cs	37f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1988>  // b.hs, b.nlast
    3640:	add	x0, x2, #0x1
    3644:	str	x0, [x1, #24]
    3648:	mov	w0, #0xa                   	// #10
    364c:	strb	w0, [x2]
    3650:	ldr	w0, [sp, #232]
    3654:	cmp	w0, #0x40
    3658:	b.ls	2698 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x828>  // b.plast
    365c:	ldr	x0, [sp, #224]
    3660:	cbz	x0, 2698 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x828>
    3664:	b	2694 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x824>
    3668:	cbnz	w5, 3874 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a04>
    366c:	add	x8, x0, x8
    3670:	mov	x1, #0xffffffffffffffff    	// #-1
    3674:	str	x1, [x0], #16
    3678:	cmp	x8, x0
    367c:	b.ne	3674 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1804>  // b.any
    3680:	b	2f6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10fc>
    3684:	add	x20, sp, #0x108
    3688:	ldr	x0, [sp, #120]
    368c:	ldr	x19, [x0, #288]
    3690:	cbz	x19, 3540 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16d0>
    3694:	adrp	x24, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3698:	mov	w27, #0x10                  	// #16
    369c:	add	x24, x24, #0x0
    36a0:	mov	w25, #0x1                   	// #1
    36a4:	mov	w26, #0xa                   	// #10
    36a8:	b	370c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x189c>
    36ac:	ldr	x0, [x24]
    36b0:	str	x0, [x2]
    36b4:	ldur	x0, [x24, #6]
    36b8:	stur	x0, [x2, #6]
    36bc:	ldr	x0, [x1, #24]
    36c0:	add	x0, x0, #0xe
    36c4:	str	x0, [x1, #24]
    36c8:	mov	x0, x1
    36cc:	mov	x1, x20
    36d0:	stp	x21, xzr, [sp, #264]
    36d4:	str	w27, [sp, #280]
    36d8:	strh	w25, [sp, #284]
    36dc:	strb	w25, [sp, #286]
    36e0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    36e4:	ldp	x3, x2, [x0, #16]
    36e8:	mov	x1, x0
    36ec:	cmp	x2, x3
    36f0:	b.cs	3740 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18d0>  // b.hs, b.nlast
    36f4:	add	x0, x2, #0x1
    36f8:	str	x0, [x1, #24]
    36fc:	strb	w26, [x2]
    3700:	cmp	x21, x19
    3704:	eor	x19, x21, x19
    3708:	b.eq	3540 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16d0>  // b.none
    370c:	bl	0 <_ZN4llvm4dbgsEv>
    3710:	neg	x21, x19
    3714:	ldp	x3, x2, [x0, #16]
    3718:	and	x21, x21, x19
    371c:	mov	x1, x0
    3720:	sub	x3, x3, x2
    3724:	cmp	x3, #0xd
    3728:	b.hi	36ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x183c>  // b.pmore
    372c:	mov	x1, x24
    3730:	mov	x2, #0xe                   	// #14
    3734:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3738:	mov	x1, x0
    373c:	b	36c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1858>
    3740:	mov	w1, #0xa                   	// #10
    3744:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3748:	b	3700 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1890>
    374c:	add	w3, w12, w3
    3750:	cmp	x11, #0x0
    3754:	and	w4, w5, w3
    3758:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    375c:	csel	x11, x11, x0, ne  // ne = any
    3760:	add	w12, w12, #0x1
    3764:	lsl	x4, x4, #4
    3768:	and	w3, w5, w3
    376c:	add	x0, x7, x4
    3770:	ldr	x9, [x7, x4]
    3774:	cmp	x2, x9
    3778:	b.eq	204c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1dc>  // b.none
    377c:	b	2370 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x500>
    3780:	mov	w7, #0x1                   	// #1
    3784:	mov	x5, #0x0                   	// #0
    3788:	cmn	x8, #0x1
    378c:	b.ne	3a10 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ba0>  // b.any
    3790:	cbz	x5, 23ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x53c>
    3794:	mov	x0, x5
    3798:	ldr	x1, [x5]
    379c:	b	23b0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x540>
    37a0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37a4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37a8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37ac:	add	x3, x3, #0x0
    37b0:	add	x1, x1, #0x0
    37b4:	add	x0, x0, #0x0
    37b8:	mov	w2, #0x64                  	// #100
    37bc:	bl	0 <__assert_fail>
    37c0:	ldr	x0, [sp, #120]
    37c4:	mov	x6, #0x0                   	// #0
    37c8:	str	xzr, [sp, #104]
    37cc:	ldr	x23, [x0, #176]
    37d0:	ldr	w0, [x0, #184]
    37d4:	b	2514 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6a4>
    37d8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37dc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37e0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    37e4:	add	x3, x3, #0x0
    37e8:	add	x1, x1, #0x0
    37ec:	add	x0, x0, #0x0
    37f0:	mov	w2, #0x59d                 	// #1437
    37f4:	bl	0 <__assert_fail>
    37f8:	mov	w1, #0xa                   	// #10
    37fc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3800:	b	3650 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17e0>
    3804:	add	w4, w4, w14
    3808:	cmp	x12, #0x0
    380c:	and	w15, w4, w10
    3810:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3814:	csel	x12, x12, x13, ne  // ne = any
    3818:	add	w14, w14, #0x1
    381c:	lsl	x8, x15, #4
    3820:	and	w4, w4, w10
    3824:	add	x13, x9, x8
    3828:	ldr	x8, [x9, x8]
    382c:	cmp	x3, x8
    3830:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    3834:	b	2f14 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10a4>
    3838:	add	w8, w15, w8
    383c:	cmp	x13, #0x0
    3840:	and	w16, w9, w8
    3844:	ccmn	x12, #0x2, #0x0, eq  // eq = none
    3848:	csel	x13, x13, x14, ne  // ne = any
    384c:	add	w15, w15, #0x1
    3850:	lsl	x12, x16, #4
    3854:	and	w8, w9, w8
    3858:	add	x14, x11, x12
    385c:	ldr	x12, [x11, x12]
    3860:	cmp	x5, x12
    3864:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    3868:	b	2b88 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xd18>
    386c:	mov	w21, #0x0                   	// #0
    3870:	b	2078 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x208>
    3874:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3878:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    387c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3880:	add	x3, x3, #0x0
    3884:	add	x1, x1, #0x0
    3888:	add	x0, x0, #0x0
    388c:	mov	w2, #0x15b                 	// #347
    3890:	bl	0 <__assert_fail>
    3894:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3898:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    389c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38a0:	add	x3, x3, #0x0
    38a4:	add	x1, x1, #0x0
    38a8:	add	x0, x0, #0x0
    38ac:	mov	w2, #0x657                 	// #1623
    38b0:	bl	0 <__assert_fail>
    38b4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38b8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38bc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38c0:	add	x3, x3, #0x0
    38c4:	add	x1, x1, #0x0
    38c8:	add	x0, x0, #0x0
    38cc:	mov	w2, #0x43                  	// #67
    38d0:	bl	0 <__assert_fail>
    38d4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38d8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38dc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38e0:	add	x3, x3, #0x0
    38e4:	add	x1, x1, #0x0
    38e8:	add	x0, x0, #0x0
    38ec:	mov	w2, #0xa7                  	// #167
    38f0:	bl	0 <__assert_fail>
    38f4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38f8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    38fc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3900:	add	x3, x3, #0x0
    3904:	add	x1, x1, #0x0
    3908:	add	x0, x0, #0x0
    390c:	mov	w2, #0x75                  	// #117
    3910:	bl	0 <__assert_fail>
    3914:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3918:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    391c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3920:	add	x3, x3, #0x0
    3924:	add	x1, x1, #0x0
    3928:	add	x0, x0, #0x0
    392c:	mov	w2, #0x141                 	// #321
    3930:	bl	0 <__assert_fail>
    3934:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3938:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    393c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3940:	add	x3, x3, #0x0
    3944:	add	x1, x1, #0x0
    3948:	add	x0, x0, #0x0
    394c:	mov	w2, #0x250                 	// #592
    3950:	bl	0 <__assert_fail>
    3954:	mov	x2, #0xe                   	// #14
    3958:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    395c:	add	x1, x1, #0x0
    3960:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3964:	mov	x2, x0
    3968:	b	3604 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1794>
    396c:	mov	w1, #0xa                   	// #10
    3970:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3974:	b	35c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1758>
    3978:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    397c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3980:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3984:	add	x3, x3, #0x0
    3988:	add	x1, x1, #0x0
    398c:	add	x0, x0, #0x0
    3990:	mov	w2, #0x4e0                 	// #1248
    3994:	bl	0 <__assert_fail>
    3998:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    399c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39a0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39a4:	add	x3, x3, #0x0
    39a8:	add	x1, x1, #0x0
    39ac:	add	x0, x0, #0x0
    39b0:	mov	w2, #0x117                 	// #279
    39b4:	bl	0 <__assert_fail>
    39b8:	add	w10, w10, w15
    39bc:	cmp	x13, #0x0
    39c0:	and	w16, w10, w9
    39c4:	ccmn	x12, #0x2, #0x0, eq  // eq = none
    39c8:	csel	x13, x13, x14, ne  // ne = any
    39cc:	add	w15, w15, #0x1
    39d0:	lsl	x12, x16, #4
    39d4:	and	w10, w10, w9
    39d8:	add	x14, x11, x12
    39dc:	ldr	x12, [x11, x12]
    39e0:	cmp	x4, x12
    39e4:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    39e8:	b	2d30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xec0>
    39ec:	mov	x4, x9
    39f0:	mov	x9, x11
    39f4:	b	2a2c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbbc>
    39f8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39fc:	add	x1, x1, #0x0
    3a00:	mov	x2, #0xe                   	// #14
    3a04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a08:	mov	x1, x0
    3a0c:	b	357c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x170c>
    3a10:	add	w1, w7, w1
    3a14:	cmp	x5, #0x0
    3a18:	and	w3, w1, w10
    3a1c:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3a20:	csel	x5, x5, x0, ne  // ne = any
    3a24:	add	w7, w7, #0x1
    3a28:	lsl	x3, x3, #4
    3a2c:	and	w1, w1, w10
    3a30:	add	x0, x9, x3
    3a34:	ldr	x8, [x9, x3]
    3a38:	cmp	x2, x8
    3a3c:	b.ne	3788 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1918>  // b.any
    3a40:	str	w12, [sp, #304]
    3a44:	b	23bc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x54c>
    3a48:	add	w4, w4, w15
    3a4c:	cmp	x13, #0x0
    3a50:	and	w16, w4, w10
    3a54:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    3a58:	csel	x13, x13, x14, ne  // ne = any
    3a5c:	add	w15, w15, #0x1
    3a60:	lsl	x9, x16, #4
    3a64:	and	w4, w4, w10
    3a68:	add	x14, x11, x9
    3a6c:	ldr	x9, [x11, x9]
    3a70:	cmp	x3, x9
    3a74:	b.eq	24d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x660>  // b.none
    3a78:	b	344c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15dc>
    3a7c:	add	w0, w8, w0
    3a80:	cmp	x7, #0x0
    3a84:	and	w12, w9, w0
    3a88:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    3a8c:	csel	x7, x7, x4, ne  // ne = any
    3a90:	add	w8, w8, #0x1
    3a94:	lsl	x1, x12, #4
    3a98:	and	w0, w9, w0
    3a9c:	add	x4, x11, x1
    3aa0:	ldr	x1, [x11, x1]
    3aa4:	cmp	x5, x1
    3aa8:	b.ne	3370 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1500>  // b.any
    3aac:	str	w10, [sp, #304]
    3ab0:	b	2a78 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc08>
    3ab4:	add	w3, w5, w3
    3ab8:	cmp	x1, #0x0
    3abc:	and	w4, w3, w10
    3ac0:	ccmn	x7, #0x2, #0x0, eq  // eq = none
    3ac4:	csel	x1, x1, x0, ne  // ne = any
    3ac8:	add	w5, w5, #0x1
    3acc:	lsl	x4, x4, #4
    3ad0:	and	w3, w3, w10
    3ad4:	add	x0, x11, x4
    3ad8:	ldr	x7, [x11, x4]
    3adc:	cmp	x2, x7
    3ae0:	b.ne	30c0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1250>  // b.any
    3ae4:	str	w12, [sp, #304]
    3ae8:	b	23bc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x54c>
    3aec:	nop

0000000000003af0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
    3af0:	stp	x29, x30, [sp, #-80]!
    3af4:	mov	x29, sp
    3af8:	ldr	w0, [x1, #316]
    3afc:	stp	x19, x20, [sp, #16]
    3b00:	mov	x19, x8
    3b04:	cbnz	w0, 3bcc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xdc>
    3b08:	ldrb	w0, [x1, #324]
    3b0c:	mov	x20, x2
    3b10:	cbz	w0, 3b9c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xac>
    3b14:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3b18:	add	x1, x1, #0x0
    3b1c:	mov	x2, #0x6d                  	// #109
    3b20:	str	x21, [sp, #32]
    3b24:	add	x2, x1, x2
    3b28:	add	x0, sp, #0x30
    3b2c:	mov	w3, #0x0                   	// #0
    3b30:	add	x21, x0, #0x10
    3b34:	str	x21, [sp, #48]
    3b38:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3b3c:	mov	x0, #0x30                  	// #48
    3b40:	bl	0 <_Znwm>
    3b44:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3b48:	mov	x3, x0
    3b4c:	ldr	x2, [sp, #48]
    3b50:	ldr	x1, [x1]
    3b54:	cmp	x2, x21
    3b58:	add	x1, x1, #0x10
    3b5c:	str	x1, [x3], #24
    3b60:	str	x3, [x0, #8]
    3b64:	b.eq	3bf8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x108>  // b.none
    3b68:	ldr	x1, [sp, #64]
    3b6c:	str	x2, [x0, #8]
    3b70:	str	x1, [x0, #24]
    3b74:	ldr	x1, [sp, #56]
    3b78:	orr	x2, x0, #0x1
    3b7c:	ldr	x21, [sp, #32]
    3b80:	str	x2, [x19]
    3b84:	str	x1, [x0, #16]
    3b88:	str	x20, [x0, #40]
    3b8c:	mov	x0, x19
    3b90:	ldp	x19, x20, [sp, #16]
    3b94:	ldp	x29, x30, [sp], #80
    3b98:	ret
    3b9c:	ldrb	w0, [x1, #325]
    3ba0:	cbnz	w0, 3be4 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xf4>
    3ba4:	ldr	w2, [x1, #184]
    3ba8:	ldr	x0, [x1, #288]
    3bac:	cmp	w2, #0x0
    3bb0:	ccmp	x0, #0x0, #0x0, eq  // eq = none
    3bb4:	b.eq	3bcc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xdc>  // b.none
    3bb8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3bbc:	mov	x2, #0x65                  	// #101
    3bc0:	add	x1, x1, #0x0
    3bc4:	str	x21, [sp, #32]
    3bc8:	b	3b24 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x34>
    3bcc:	mov	x0, #0x1                   	// #1
    3bd0:	str	x0, [x19]
    3bd4:	mov	x0, x19
    3bd8:	ldp	x19, x20, [sp, #16]
    3bdc:	ldp	x29, x30, [sp], #80
    3be0:	ret
    3be4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3be8:	mov	x2, #0x6d                  	// #109
    3bec:	add	x1, x1, #0x0
    3bf0:	str	x21, [sp, #32]
    3bf4:	b	3b24 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x34>
    3bf8:	ldp	x2, x3, [sp, #64]
    3bfc:	stp	x2, x3, [x0, #24]
    3c00:	b	3b74 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x84>
    3c04:	nop

0000000000003c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
    3c08:	stp	x29, x30, [sp, #-192]!
    3c0c:	mov	x29, sp
    3c10:	stp	x23, x24, [sp, #48]
    3c14:	mov	x24, x0
    3c18:	ldr	x0, [x0]
    3c1c:	stp	x19, x20, [sp, #16]
    3c20:	stp	x21, x22, [sp, #32]
    3c24:	ldr	x23, [x0, #152]
    3c28:	stp	x25, x26, [sp, #64]
    3c2c:	stp	x27, x28, [sp, #80]
    3c30:	ldr	x2, [x23, #40]
    3c34:	str	x8, [sp, #96]
    3c38:	cbz	x2, 59a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d98>
    3c3c:	ldr	x0, [x24, #8]
    3c40:	mov	x19, x1
    3c44:	ldrh	w26, [x1]
    3c48:	ldr	w3, [x0, #24]
    3c4c:	ldr	x1, [x0]
    3c50:	cmp	w26, w3
    3c54:	b.cs	599c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d94>  // b.hs, b.nlast
    3c58:	ubfiz	x20, x26, #6, #16
    3c5c:	ldr	w0, [x23, #52]
    3c60:	add	x20, x1, x20
    3c64:	mov	w1, w26
    3c68:	str	x1, [sp, #112]
    3c6c:	ldrh	w21, [x20, #6]
    3c70:	cmp	w21, w0
    3c74:	b.cs	3da0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x198>  // b.hs, b.nlast
    3c78:	mov	w25, #0x18                  	// #24
    3c7c:	mov	w0, #0x3ffe                	// #16382
    3c80:	umaddl	x1, w21, w25, x2
    3c84:	ldrh	w22, [x1, #8]
    3c88:	and	w22, w22, #0x3fff
    3c8c:	cmp	w22, w0
    3c90:	b.ne	3dc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b8>  // b.any
    3c94:	ldr	w3, [x23, #28]
    3c98:	cbz	w21, 3cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc8>
    3c9c:	adrp	x27, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ca0:	mov	w28, w22
    3ca4:	add	x27, x27, #0x0
    3ca8:	umaddl	x0, w21, w25, x2
    3cac:	ldrh	w1, [x0, #8]
    3cb0:	and	w1, w1, #0x3fff
    3cb4:	cmp	w1, w28
    3cb8:	b.ne	3dc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b8>  // b.any
    3cbc:	ldr	x0, [x24]
    3cc0:	ldr	x1, [x0]
    3cc4:	ldr	x4, [x1, #16]
    3cc8:	cmp	x4, x27
    3ccc:	b.ne	3d70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x168>  // b.any
    3cd0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cd4:	adrp	x2, 2980 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb10>
    3cd8:	add	x1, x1, #0x0
    3cdc:	add	x2, x2, #0x0
    3ce0:	add	x0, sp, #0xa0
    3ce4:	mov	w3, #0x0                   	// #0
    3ce8:	add	x20, x0, #0x10
    3cec:	str	x20, [sp, #160]
    3cf0:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cf4:	mov	x0, #0x30                  	// #48
    3cf8:	bl	0 <_Znwm>
    3cfc:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3d00:	mov	x1, x0
    3d04:	ldr	x3, [sp, #160]
    3d08:	ldr	x2, [x2]
    3d0c:	cmp	x3, x20
    3d10:	add	x2, x2, #0x10
    3d14:	str	x2, [x1], #24
    3d18:	str	x1, [x0, #8]
    3d1c:	b.eq	4708 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb00>  // b.none
    3d20:	ldr	x1, [sp, #176]
    3d24:	str	x3, [x0, #8]
    3d28:	str	x1, [x0, #24]
    3d2c:	ldr	x4, [sp, #96]
    3d30:	str	x19, [x0, #40]
    3d34:	ldr	x3, [sp, #168]
    3d38:	str	x3, [x0, #16]
    3d3c:	ldrb	w1, [x4, #8]
    3d40:	ands	x2, x0, #0xfffffffffffffffe
    3d44:	orr	w1, w1, #0x3
    3d48:	strb	w1, [x4, #8]
    3d4c:	b.ne	46e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xad8>  // b.any
    3d50:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3d54:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3d58:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3d5c:	add	x3, x3, #0x0
    3d60:	add	x1, x1, #0x0
    3d64:	add	x0, x0, #0x0
    3d68:	mov	w2, #0x1ce                 	// #462
    3d6c:	bl	0 <__assert_fail>
    3d70:	str	w3, [sp, #104]
    3d74:	mov	w1, w21
    3d78:	mov	x2, x19
    3d7c:	blr	x4
    3d80:	mov	w21, w0
    3d84:	ldr	w3, [sp, #104]
    3d88:	cbz	w0, 3cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc8>
    3d8c:	ldr	x2, [x23, #40]
    3d90:	cbz	x2, 5710 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b08>
    3d94:	ldr	w0, [x23, #52]
    3d98:	cmp	w21, w0
    3d9c:	b.cc	3ca8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa0>  // b.lo, b.ul, b.last
    3da0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3da4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3da8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3dac:	add	x3, x3, #0x0
    3db0:	add	x1, x1, #0x0
    3db4:	add	x0, x0, #0x0
    3db8:	mov	w2, #0x15d                 	// #349
    3dbc:	bl	0 <__assert_fail>
    3dc0:	mov	w27, #0x18                  	// #24
    3dc4:	mov	w25, w21
    3dc8:	umaddl	x27, w21, w27, x2
    3dcc:	ldrh	w0, [x27, #8]
    3dd0:	mvn	x0, x0
    3dd4:	tst	x0, #0x3fff
    3dd8:	b.eq	463c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa34>  // b.none
    3ddc:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    3de0:	ldr	x0, [x23]
    3de4:	ldrb	w0, [x0]
    3de8:	cbnz	w0, 4080 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x478>
    3dec:	mov	x0, #0x150                 	// #336
    3df0:	bl	0 <_Znwm>
    3df4:	mov	x2, #0x150                 	// #336
    3df8:	mov	x26, x0
    3dfc:	mov	w1, #0x0                   	// #0
    3e00:	bl	0 <memset>
    3e04:	ldrh	w1, [x27, #8]
    3e08:	mov	x2, #0x400000000           	// #17179869184
    3e0c:	ldr	x0, [x20, #8]
    3e10:	add	x3, x26, #0x10
    3e14:	add	x4, x26, #0x70
    3e18:	and	w1, w1, #0x3fff
    3e1c:	add	x25, x26, #0xc0
    3e20:	stp	x3, x2, [x26]
    3e24:	stp	x4, x2, [x26, #96]
    3e28:	stp	x3, x4, [sp, #104]
    3e2c:	stp	x25, x2, [x26, #176]
    3e30:	str	w1, [x26, #316]
    3e34:	str	w21, [x26, #320]
    3e38:	tbz	w0, #6, 3e44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23c>
    3e3c:	ldrb	w1, [x24, #176]
    3e40:	cbnz	w1, 4320 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x718>
    3e44:	tbz	w0, #4, 3e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x248>
    3e48:	ldrb	w1, [x24, #177]
    3e4c:	cbnz	w1, 4404 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7fc>
    3e50:	ldrb	w10, [x27, #9]
    3e54:	ubfx	w12, w0, #18, #1
    3e58:	ldr	w4, [x24, #40]
    3e5c:	ubfx	w11, w0, #19, #1
    3e60:	mov	x9, x10
    3e64:	ubfx	w8, w0, #23, #1
    3e68:	ldr	x2, [x24]
    3e6c:	ubfx	x10, x10, #6, #1
    3e70:	ldr	x3, [x24, #32]
    3e74:	ubfx	x9, x9, #7, #1
    3e78:	strb	w12, [x26, #324]
    3e7c:	mov	x0, x26
    3e80:	strb	w11, [x26, #325]
    3e84:	mov	x1, x27
    3e88:	strb	w8, [x26, #326]
    3e8c:	strb	w10, [x26, #327]
    3e90:	strb	w9, [x26, #328]
    3e94:	bl	1e70 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE>
    3e98:	ldr	x0, [x20, #8]
    3e9c:	tbz	w0, #6, 4060 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x458>
    3ea0:	mov	w0, #0x64                  	// #100
    3ea4:	str	w0, [x26, #312]
    3ea8:	ldr	w4, [x19, #24]
    3eac:	ldrb	w1, [x20, #4]
    3eb0:	cmp	w4, #0x0
    3eb4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    3eb8:	b.eq	4afc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xef4>  // b.none
    3ebc:	mov	x3, #0x0                   	// #0
    3ec0:	mov	w2, #0x0                   	// #0
    3ec4:	ldr	x8, [x19, #16]
    3ec8:	b	3ed0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2c8>
    3ecc:	mov	w3, w2
    3ed0:	lsl	x3, x3, #4
    3ed4:	add	w2, w2, #0x1
    3ed8:	ldrb	w0, [x8, x3]
    3edc:	cmp	w0, #0x1
    3ee0:	cset	w0, eq  // eq = none
    3ee4:	subs	w1, w1, w0
    3ee8:	ccmp	w4, w2, #0x0, ne  // ne = any
    3eec:	b.hi	3ecc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2c4>  // b.pmore
    3ef0:	cbnz	w1, 4294 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x68c>
    3ef4:	ldr	x0, [x20, #8]
    3ef8:	tbz	w0, #2, 411c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x514>
    3efc:	ldrh	w0, [x20, #2]
    3f00:	sub	w0, w0, #0x1
    3f04:	cmp	x0, w4, uxtw
    3f08:	b.cs	5ef4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22ec>  // b.hs, b.nlast
    3f0c:	lsl	x0, x0, #4
    3f10:	cmp	w4, w2
    3f14:	ldr	x1, [x19, #16]
    3f18:	b.eq	3f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x320>  // b.none
    3f1c:	ldrb	w0, [x1, x0]
    3f20:	cmp	w0, #0x1
    3f24:	b.eq	411c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x514>  // b.none
    3f28:	add	x28, sp, #0x80
    3f2c:	mov	w3, #0x0                   	// #0
    3f30:	add	x4, x28, #0x10
    3f34:	mov	x0, x28
    3f38:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3f3c:	adrp	x2, 1da8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7a0>
    3f40:	add	x1, x1, #0x0
    3f44:	add	x2, x2, #0x0
    3f48:	str	x4, [sp, #128]
    3f4c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3f50:	ldp	x1, x2, [sp, #128]
    3f54:	add	x27, sp, #0xa0
    3f58:	add	x4, x27, #0x10
    3f5c:	mov	w3, #0x0                   	// #0
    3f60:	mov	x0, x27
    3f64:	str	x4, [sp, #120]
    3f68:	str	x4, [sp, #160]
    3f6c:	add	x2, x1, x2
    3f70:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3f74:	mov	x0, #0x30                  	// #48
    3f78:	bl	0 <_Znwm>
    3f7c:	mov	x1, x0
    3f80:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3f84:	ldr	x4, [sp, #120]
    3f88:	ldr	x2, [x2]
    3f8c:	ldr	x3, [sp, #160]
    3f90:	add	x2, x2, #0x10
    3f94:	str	x2, [x0], #24
    3f98:	cmp	x3, x4
    3f9c:	str	x0, [x1, #8]
    3fa0:	b.eq	4630 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa28>  // b.none
    3fa4:	ldr	x0, [sp, #176]
    3fa8:	str	x3, [x1, #8]
    3fac:	str	x0, [x1, #24]
    3fb0:	ldr	x0, [sp, #128]
    3fb4:	orr	x3, x1, #0x1
    3fb8:	ldr	x2, [sp, #168]
    3fbc:	str	x2, [x1, #16]
    3fc0:	str	x19, [x1, #40]
    3fc4:	add	x28, x28, #0x10
    3fc8:	str	x3, [sp, #160]
    3fcc:	cmp	x0, x28
    3fd0:	and	x1, x1, #0xfffffffffffffffe
    3fd4:	b.eq	3fe4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3dc>  // b.none
    3fd8:	bl	0 <_ZdlPv>
    3fdc:	ldr	x1, [sp, #160]
    3fe0:	and	x1, x1, #0xfffffffffffffffe
    3fe4:	cbz	x1, 4120 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x518>
    3fe8:	ldr	x2, [sp, #96]
    3fec:	ldrb	w0, [x2, #8]
    3ff0:	str	x1, [x2]
    3ff4:	orr	w0, w0, #0x3
    3ff8:	strb	w0, [x2, #8]
    3ffc:	ldr	x0, [x26, #176]
    4000:	cmp	x25, x0
    4004:	b.eq	400c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x404>  // b.none
    4008:	bl	0 <free>
    400c:	ldr	x0, [x26, #96]
    4010:	ldr	x1, [sp, #112]
    4014:	cmp	x1, x0
    4018:	b.eq	4020 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x418>  // b.none
    401c:	bl	0 <free>
    4020:	ldr	x0, [x26]
    4024:	ldr	x1, [sp, #104]
    4028:	cmp	x1, x0
    402c:	b.eq	4034 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x42c>  // b.none
    4030:	bl	0 <free>
    4034:	mov	x0, x26
    4038:	mov	x1, #0x150                 	// #336
    403c:	bl	0 <_ZdlPvm>
    4040:	ldp	x19, x20, [sp, #16]
    4044:	ldp	x21, x22, [sp, #32]
    4048:	ldp	x23, x24, [sp, #48]
    404c:	ldp	x25, x26, [sp, #64]
    4050:	ldp	x27, x28, [sp, #80]
    4054:	ldr	x0, [sp, #96]
    4058:	ldp	x29, x30, [sp], #192
    405c:	ret
    4060:	ldr	x0, [x24]
    4064:	mov	x1, x27
    4068:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    406c:	cmp	w0, #0x0
    4070:	mov	w1, #0x64                  	// #100
    4074:	csel	w0, w0, w1, ge  // ge = tcont
    4078:	str	w0, [x26, #312]
    407c:	b	3ea8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2a0>
    4080:	adrp	x28, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4084:	add	x0, x28, #0x0
    4088:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    408c:	tst	w0, #0xff
    4090:	b.ne	4568 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x960>  // b.any
    4094:	ldr	x0, [x23]
    4098:	ldrb	w0, [x0]
    409c:	cbz	w0, 3dec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e4>
    40a0:	add	x0, x28, #0x0
    40a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    40a8:	tst	w0, #0xff
    40ac:	b.eq	3dec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e4>  // b.none
    40b0:	bl	0 <_ZN4llvm4dbgsEv>
    40b4:	mov	x2, x0
    40b8:	ldp	x1, x3, [x0, #16]
    40bc:	sub	x1, x1, x3
    40c0:	cmp	x1, #0xe
    40c4:	b.ls	47ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbe4>  // b.plast
    40c8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    40cc:	add	x0, x0, #0x0
    40d0:	ldr	x1, [x0]
    40d4:	str	x1, [x3]
    40d8:	ldur	x0, [x0, #7]
    40dc:	stur	x0, [x3, #7]
    40e0:	ldr	x0, [x2, #24]
    40e4:	add	x0, x0, #0xf
    40e8:	str	x0, [x2, #24]
    40ec:	mov	x1, x25
    40f0:	mov	x0, x2
    40f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    40f8:	mov	x1, x0
    40fc:	ldp	x3, x2, [x0, #16]
    4100:	cmp	x3, x2
    4104:	b.ls	4c10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1008>  // b.plast
    4108:	add	x0, x2, #0x1
    410c:	str	x0, [x1, #24]
    4110:	mov	w0, #0xa                   	// #10
    4114:	strb	w0, [x2]
    4118:	b	3dec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e4>
    411c:	add	x27, sp, #0xa0
    4120:	mov	w3, w21
    4124:	mov	x2, x19
    4128:	mov	x1, x26
    412c:	mov	x0, x24
    4130:	bl	8a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    4134:	mov	x0, x24
    4138:	mov	w3, w21
    413c:	mov	x2, x19
    4140:	mov	x1, x26
    4144:	bl	1608 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    4148:	ldr	x0, [x23]
    414c:	ldrb	w0, [x0]
    4150:	cbnz	w0, 44cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8c4>
    4154:	mov	x0, x24
    4158:	mov	x8, x27
    415c:	mov	x2, x19
    4160:	mov	x1, x26
    4164:	bl	3af0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>
    4168:	ldr	x0, [sp, #160]
    416c:	ands	x0, x0, #0xfffffffffffffffe
    4170:	b.ne	4308 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x700>  // b.any
    4174:	ldr	x1, [x20, #8]
    4178:	mov	w0, #0x3ffe                	// #16382
    417c:	tst	x1, #0x2
    4180:	ccmp	w22, w0, #0x4, eq  // eq = none
    4184:	b.eq	4720 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb18>  // b.none
    4188:	ldr	w1, [x24, #136]
    418c:	ldr	w22, [x19]
    4190:	mov	w20, w1
    4194:	and	w27, w22, #0xffff
    4198:	ldr	x23, [x24, #120]
    419c:	cbz	w1, 50c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14c0>
    41a0:	mov	w0, #0xfffd                	// #65533
    41a4:	cmp	w27, w0
    41a8:	b.hi	5ce0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20d8>  // b.pmore
    41ac:	and	w28, w22, #0xffff
    41b0:	mov	w2, #0x25                  	// #37
    41b4:	sub	w0, w1, #0x1
    41b8:	mul	w28, w28, w2
    41bc:	and	w3, w28, w0
    41c0:	ubfiz	x2, x3, #4, #22
    41c4:	add	x4, x23, x2
    41c8:	ldrh	w5, [x23, x2]
    41cc:	cmp	w27, w5
    41d0:	b.ne	4ec8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12c0>  // b.any
    41d4:	ldr	x20, [x4, #8]
    41d8:	str	x26, [x4, #8]
    41dc:	cbz	x20, 4c64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>
    41e0:	ldr	x0, [x20, #176]
    41e4:	add	x1, x20, #0xc0
    41e8:	cmp	x0, x1
    41ec:	b.eq	41f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5ec>  // b.none
    41f0:	bl	0 <free>
    41f4:	ldr	x0, [x20, #96]
    41f8:	add	x1, x20, #0x70
    41fc:	cmp	x0, x1
    4200:	b.eq	4208 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x600>  // b.none
    4204:	bl	0 <free>
    4208:	mov	x1, x20
    420c:	ldr	x0, [x1], #16
    4210:	cmp	x0, x1
    4214:	b.eq	421c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x614>  // b.none
    4218:	bl	0 <free>
    421c:	mov	x1, #0x150                 	// #336
    4220:	mov	x0, x20
    4224:	bl	0 <_ZdlPvm>
    4228:	ldr	w1, [x24, #136]
    422c:	ldr	x23, [x24, #120]
    4230:	mov	w21, w1
    4234:	ldr	w19, [x19]
    4238:	and	w22, w19, #0xffff
    423c:	cbz	w1, 53a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1798>
    4240:	mov	w0, #0xfffd                	// #65533
    4244:	cmp	w22, w0
    4248:	b.hi	5ce0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20d8>  // b.pmore
    424c:	and	w20, w19, #0xffff
    4250:	mov	w2, #0x25                  	// #37
    4254:	sub	w0, w1, #0x1
    4258:	mul	w20, w20, w2
    425c:	and	w3, w20, w0
    4260:	ubfiz	x2, x3, #4, #22
    4264:	add	x5, x23, x2
    4268:	ldrh	w4, [x23, x2]
    426c:	cmp	w22, w4
    4270:	b.ne	481c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc14>  // b.any
    4274:	ldr	x1, [x5, #8]
    4278:	ldr	x2, [sp, #96]
    427c:	ldrb	w0, [x2, #8]
    4280:	str	x1, [x2]
    4284:	and	w0, w0, #0xfffffffc
    4288:	orr	w0, w0, #0x2
    428c:	strb	w0, [x2, #8]
    4290:	b	4040 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x438>
    4294:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4298:	adrp	x2, 1d78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x770>
    429c:	add	x1, x1, #0x0
    42a0:	add	x2, x2, #0x0
    42a4:	mov	w3, #0x0                   	// #0
    42a8:	add	x27, sp, #0xa0
    42ac:	add	x28, x27, #0x10
    42b0:	mov	x0, x27
    42b4:	str	x28, [sp, #160]
    42b8:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    42bc:	mov	x0, #0x30                  	// #48
    42c0:	bl	0 <_Znwm>
    42c4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    42c8:	mov	x2, x0
    42cc:	ldr	x3, [sp, #160]
    42d0:	ldr	x1, [x1]
    42d4:	cmp	x3, x28
    42d8:	add	x1, x1, #0x10
    42dc:	str	x1, [x2], #24
    42e0:	str	x2, [x0, #8]
    42e4:	b.eq	4624 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa1c>  // b.none
    42e8:	ldr	x1, [sp, #176]
    42ec:	str	x3, [x0, #8]
    42f0:	str	x1, [x0, #24]
    42f4:	ldr	x2, [sp, #168]
    42f8:	and	x1, x0, #0xfffffffffffffffe
    42fc:	str	x2, [x0, #16]
    4300:	str	x19, [x0, #40]
    4304:	b	3fe4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3dc>
    4308:	ldr	x2, [sp, #96]
    430c:	ldrb	w1, [x2, #8]
    4310:	str	x0, [x2]
    4314:	orr	w0, w1, #0x3
    4318:	strb	w0, [x2, #8]
    431c:	b	3ffc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3f4>
    4320:	bl	0 <_ZN4llvm9WithColor7warningEv>
    4324:	mov	x1, x0
    4328:	ldp	x2, x4, [x0, #16]
    432c:	sub	x2, x2, x4
    4330:	cmp	x2, #0x2c
    4334:	b.ls	4b20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf18>  // b.plast
    4338:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    433c:	add	x0, x0, #0x0
    4340:	ldr	x2, [x0, #32]
    4344:	str	x2, [x4, #32]
    4348:	ldp	x2, x3, [x0]
    434c:	stp	x2, x3, [x4]
    4350:	ldp	x2, x3, [x0, #16]
    4354:	stp	x2, x3, [x4, #16]
    4358:	ldur	x0, [x0, #37]
    435c:	stur	x0, [x4, #37]
    4360:	ldr	x0, [x1, #24]
    4364:	add	x0, x0, #0x2d
    4368:	str	x0, [x1, #24]
    436c:	bl	0 <_ZN4llvm9WithColor4noteEv>
    4370:	mov	x3, x0
    4374:	ldp	x1, x2, [x0, #16]
    4378:	sub	x1, x1, x2
    437c:	cmp	x1, #0x2c
    4380:	b.ls	4b34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf2c>  // b.plast
    4384:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4388:	add	x0, x0, #0x0
    438c:	ldp	x8, x9, [x0]
    4390:	stp	x8, x9, [x2]
    4394:	ldr	x1, [x0, #32]
    4398:	str	x1, [x2, #32]
    439c:	ldp	x8, x9, [x0, #16]
    43a0:	stp	x8, x9, [x2, #16]
    43a4:	ldur	x0, [x0, #37]
    43a8:	stur	x0, [x2, #37]
    43ac:	ldr	x2, [x3, #24]
    43b0:	add	x2, x2, #0x2d
    43b4:	str	x2, [x3, #24]
    43b8:	ldr	x1, [x3, #16]
    43bc:	sub	x1, x1, x2
    43c0:	cmp	x1, #0x1a
    43c4:	b.ls	4b64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf5c>  // b.plast
    43c8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    43cc:	add	x0, x0, #0x0
    43d0:	ldr	x1, [x0, #16]
    43d4:	str	x1, [x2, #16]
    43d8:	ldp	x8, x9, [x0]
    43dc:	stp	x8, x9, [x2]
    43e0:	ldur	w0, [x0, #23]
    43e4:	stur	w0, [x2, #23]
    43e8:	ldr	x0, [x3, #24]
    43ec:	add	x0, x0, #0x1b
    43f0:	str	x0, [x3, #24]
    43f4:	ldr	x0, [x20, #8]
    43f8:	strb	wzr, [x24, #176]
    43fc:	tbz	w0, #4, 3e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x248>
    4400:	b	3e48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x240>
    4404:	bl	0 <_ZN4llvm9WithColor7warningEv>
    4408:	mov	x1, x0
    440c:	ldp	x2, x4, [x0, #16]
    4410:	sub	x2, x2, x4
    4414:	cmp	x2, #0x26
    4418:	b.ls	4b04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xefc>  // b.plast
    441c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4420:	add	x0, x0, #0x0
    4424:	ldp	x2, x3, [x0, #16]
    4428:	stp	x2, x3, [x4, #16]
    442c:	ldp	x2, x3, [x0]
    4430:	stp	x2, x3, [x4]
    4434:	ldur	x0, [x0, #31]
    4438:	stur	x0, [x4, #31]
    443c:	ldr	x4, [x1, #24]
    4440:	add	x4, x4, #0x27
    4444:	str	x4, [x1, #24]
    4448:	ldr	x0, [x1, #16]
    444c:	sub	x0, x0, x4
    4450:	cmp	x0, #0x13
    4454:	b.ls	4b7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf74>  // b.plast
    4458:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    445c:	add	x0, x0, #0x0
    4460:	ldp	x2, x3, [x0]
    4464:	stp	x2, x3, [x4]
    4468:	ldr	w0, [x0, #16]
    446c:	str	w0, [x4, #16]
    4470:	ldr	x0, [x1, #24]
    4474:	add	x0, x0, #0x14
    4478:	str	x0, [x1, #24]
    447c:	bl	0 <_ZN4llvm9WithColor4noteEv>
    4480:	mov	x1, x0
    4484:	ldp	x2, x4, [x0, #16]
    4488:	sub	x2, x2, x4
    448c:	cmp	x2, #0x24
    4490:	b.ls	4b50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf48>  // b.plast
    4494:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4498:	add	x0, x0, #0x0
    449c:	ldp	x2, x3, [x0, #16]
    44a0:	stp	x2, x3, [x4, #16]
    44a4:	ldp	x2, x3, [x0]
    44a8:	stp	x2, x3, [x4]
    44ac:	ldur	x0, [x0, #29]
    44b0:	stur	x0, [x4, #29]
    44b4:	ldr	x0, [x1, #24]
    44b8:	add	x0, x0, #0x25
    44bc:	str	x0, [x1, #24]
    44c0:	ldr	x0, [x20, #8]
    44c4:	strb	wzr, [x24, #177]
    44c8:	b	3e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x248>
    44cc:	adrp	x28, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    44d0:	add	x0, x28, #0x0
    44d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    44d8:	tst	w0, #0xff
    44dc:	b.ne	4b94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf8c>  // b.any
    44e0:	ldr	x23, [x23]
    44e4:	ldrb	w0, [x23]
    44e8:	cbz	w0, 4154 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54c>
    44ec:	add	x0, x28, #0x0
    44f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    44f4:	tst	w0, #0xff
    44f8:	b.eq	4154 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54c>  // b.none
    44fc:	bl	0 <_ZN4llvm4dbgsEv>
    4500:	mov	x2, x0
    4504:	ldp	x1, x3, [x0, #16]
    4508:	sub	x1, x1, x3
    450c:	cmp	x1, #0xd
    4510:	b.ls	4c28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1020>  // b.plast
    4514:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4518:	add	x0, x0, #0x0
    451c:	ldr	x1, [x0]
    4520:	str	x1, [x3]
    4524:	ldur	x0, [x0, #6]
    4528:	stur	x0, [x3, #6]
    452c:	ldr	x0, [x2, #24]
    4530:	add	x0, x0, #0xe
    4534:	str	x0, [x2, #24]
    4538:	ldr	w1, [x26, #316]
    453c:	mov	x0, x2
    4540:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    4544:	mov	x1, x0
    4548:	ldp	x3, x2, [x0, #16]
    454c:	cmp	x2, x3
    4550:	b.cs	4c1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1014>  // b.hs, b.nlast
    4554:	add	x0, x2, #0x1
    4558:	str	x0, [x1, #24]
    455c:	mov	w0, #0xa                   	// #10
    4560:	strb	w0, [x2]
    4564:	b	4154 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54c>
    4568:	bl	0 <_ZN4llvm4dbgsEv>
    456c:	mov	x3, x0
    4570:	ldp	x1, x2, [x0, #16]
    4574:	sub	x1, x1, x2
    4578:	cmp	x1, #0xf
    457c:	b.ls	4804 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbfc>  // b.plast
    4580:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4584:	add	x0, x0, #0x0
    4588:	ldp	x0, x1, [x0]
    458c:	stp	x0, x1, [x2]
    4590:	ldr	x0, [x3, #24]
    4594:	add	x0, x0, #0x10
    4598:	str	x0, [x3, #24]
    459c:	ldr	x1, [x24, #8]
    45a0:	ldr	w0, [x1, #24]
    45a4:	cmp	w26, w0
    45a8:	b.cs	5ed4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22cc>  // b.hs, b.nlast
    45ac:	ldp	x0, x1, [x1, #8]
    45b0:	ldr	x2, [sp, #112]
    45b4:	ldr	w0, [x0, x2, lsl #2]
    45b8:	adds	x4, x1, x0
    45bc:	b.eq	4af4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeec>  // b.none
    45c0:	mov	x0, x4
    45c4:	stp	x4, x3, [sp, #104]
    45c8:	bl	0 <strlen>
    45cc:	ldp	x4, x3, [sp, #104]
    45d0:	mov	x26, x0
    45d4:	ldp	x2, x0, [x3, #16]
    45d8:	sub	x1, x2, x0
    45dc:	cmp	x1, x26
    45e0:	b.cc	4ae0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xed8>  // b.lo, b.ul, b.last
    45e4:	cbz	x26, 4608 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa00>
    45e8:	mov	x1, x4
    45ec:	mov	x2, x26
    45f0:	str	x3, [sp, #104]
    45f4:	bl	0 <memcpy>
    45f8:	ldr	x3, [sp, #104]
    45fc:	ldp	x2, x1, [x3, #16]
    4600:	add	x0, x1, x26
    4604:	str	x0, [x3, #24]
    4608:	cmp	x2, x0
    460c:	b.ls	4c00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xff8>  // b.plast
    4610:	add	x1, x0, #0x1
    4614:	str	x1, [x3, #24]
    4618:	mov	w1, #0xa                   	// #10
    461c:	strb	w1, [x0]
    4620:	b	4094 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x48c>
    4624:	ldp	x2, x3, [sp, #176]
    4628:	stp	x2, x3, [x0, #24]
    462c:	b	42f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6ec>
    4630:	ldp	x2, x3, [sp, #176]
    4634:	stp	x2, x3, [x1, #24]
    4638:	b	3fb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3a8>
    463c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4640:	adrp	x2, 1be0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5d8>
    4644:	add	x1, x1, #0x0
    4648:	add	x2, x2, #0x0
    464c:	add	x0, sp, #0xa0
    4650:	mov	w3, #0x0                   	// #0
    4654:	add	x20, x0, #0x10
    4658:	str	x20, [sp, #160]
    465c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4660:	mov	x0, #0x30                  	// #48
    4664:	bl	0 <_Znwm>
    4668:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    466c:	mov	x2, x0
    4670:	ldr	x3, [sp, #160]
    4674:	ldr	x1, [x1]
    4678:	cmp	x3, x20
    467c:	add	x1, x1, #0x10
    4680:	str	x1, [x2], #24
    4684:	str	x2, [x0, #8]
    4688:	b.eq	4714 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb0c>  // b.none
    468c:	ldr	x1, [sp, #176]
    4690:	str	x3, [x0, #8]
    4694:	str	x1, [x0, #24]
    4698:	ldr	x4, [sp, #96]
    469c:	str	x19, [x0, #40]
    46a0:	ldr	x3, [sp, #168]
    46a4:	str	x3, [x0, #16]
    46a8:	ldrb	w1, [x4, #8]
    46ac:	ands	x2, x0, #0xfffffffffffffffe
    46b0:	orr	w1, w1, #0x3
    46b4:	strb	w1, [x4, #8]
    46b8:	b.eq	3d50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x148>  // b.none
    46bc:	str	x2, [x4]
    46c0:	ldp	x19, x20, [sp, #16]
    46c4:	ldp	x21, x22, [sp, #32]
    46c8:	ldp	x23, x24, [sp, #48]
    46cc:	ldp	x25, x26, [sp, #64]
    46d0:	ldp	x27, x28, [sp, #80]
    46d4:	ldr	x0, [sp, #96]
    46d8:	ldp	x29, x30, [sp], #192
    46dc:	ret
    46e0:	ldr	x0, [sp, #96]
    46e4:	ldp	x19, x20, [sp, #16]
    46e8:	str	x2, [x0]
    46ec:	ldp	x21, x22, [sp, #32]
    46f0:	ldp	x23, x24, [sp, #48]
    46f4:	ldp	x25, x26, [sp, #64]
    46f8:	ldp	x27, x28, [sp, #80]
    46fc:	ldr	x0, [sp, #96]
    4700:	ldp	x29, x30, [sp], #192
    4704:	ret
    4708:	ldp	x2, x3, [sp, #176]
    470c:	stp	x2, x3, [x0, #24]
    4710:	b	3d2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x124>
    4714:	ldp	x2, x3, [sp, #176]
    4718:	stp	x2, x3, [x0, #24]
    471c:	b	4698 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa90>
    4720:	ldr	w1, [x24, #168]
    4724:	ldr	x20, [x24, #152]
    4728:	mov	w25, w1
    472c:	cbz	w1, 5238 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1630>
    4730:	cmn	x19, #0x10
    4734:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    4738:	b.eq	4c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x107c>  // b.none
    473c:	lsr	w23, w19, #4
    4740:	lsr	w21, w19, #9
    4744:	eor	w22, w23, w21
    4748:	sub	w5, w1, #0x1
    474c:	and	w2, w22, w5
    4750:	lsl	w0, w2, #4
    4754:	add	x3, x20, x0
    4758:	ldr	x4, [x20, x0]
    475c:	cmp	x19, x4
    4760:	b.ne	4ca4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x109c>  // b.any
    4764:	ldr	x22, [x3, #8]
    4768:	str	x26, [x3, #8]
    476c:	cbz	x22, 4c74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x106c>
    4770:	ldr	x0, [x22, #176]
    4774:	add	x1, x22, #0xc0
    4778:	cmp	x0, x1
    477c:	b.eq	4784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb7c>  // b.none
    4780:	bl	0 <free>
    4784:	ldr	x0, [x22, #96]
    4788:	add	x1, x22, #0x70
    478c:	cmp	x0, x1
    4790:	b.eq	4798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb90>  // b.none
    4794:	bl	0 <free>
    4798:	mov	x1, x22
    479c:	ldr	x0, [x1], #16
    47a0:	cmp	x0, x1
    47a4:	b.eq	47ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xba4>  // b.none
    47a8:	bl	0 <free>
    47ac:	mov	x0, x22
    47b0:	mov	x1, #0x150                 	// #336
    47b4:	bl	0 <_ZdlPvm>
    47b8:	ldr	w22, [x24, #168]
    47bc:	ldr	x20, [x24, #152]
    47c0:	cbz	w22, 4d1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1114>
    47c4:	eor	w25, w23, w21
    47c8:	sub	w0, w22, #0x1
    47cc:	and	w3, w25, w0
    47d0:	lsl	w1, w3, #4
    47d4:	add	x4, x20, x1
    47d8:	ldr	x26, [x20, x1]
    47dc:	cmp	x19, x26
    47e0:	b.ne	48a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc9c>  // b.any
    47e4:	ldr	x1, [x4, #8]
    47e8:	b	4278 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x670>
    47ec:	mov	x2, #0xf                   	// #15
    47f0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    47f4:	add	x1, x1, #0x0
    47f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    47fc:	mov	x2, x0
    4800:	b	40ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4e4>
    4804:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4808:	mov	x2, #0x10                  	// #16
    480c:	add	x1, x1, #0x0
    4810:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4814:	mov	x3, x0
    4818:	b	459c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x994>
    481c:	mov	w6, #0x1                   	// #1
    4820:	mov	x2, #0x0                   	// #0
    4824:	mov	w10, #0xffff                	// #65535
    4828:	mov	w9, #0xfffe                	// #65534
    482c:	cmp	w4, w10
    4830:	b.ne	5acc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ec4>  // b.any
    4834:	ldr	x6, [x24, #112]
    4838:	lsl	w3, w1, #1
    483c:	ldr	w4, [x24, #128]
    4840:	cmp	x2, #0x0
    4844:	add	x6, x6, #0x1
    4848:	str	x6, [x24, #112]
    484c:	add	w4, w4, #0x1
    4850:	add	w6, w3, w1
    4854:	csel	x2, x2, x5, ne  // ne = any
    4858:	cmp	w6, w4, lsl #2
    485c:	b.ls	53b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17a8>  // b.plast
    4860:	ldr	w3, [x24, #132]
    4864:	sub	w3, w1, w3
    4868:	sub	w3, w3, w4
    486c:	cmp	w3, w1, lsr #3
    4870:	b.ls	49f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdec>  // b.plast
    4874:	ldrh	w0, [x2]
    4878:	str	w4, [x24, #128]
    487c:	mov	w1, #0xffff                	// #65535
    4880:	cmp	w0, w1
    4884:	b.eq	4894 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc8c>  // b.none
    4888:	ldr	w0, [x24, #132]
    488c:	sub	w0, w0, #0x1
    4890:	str	w0, [x24, #132]
    4894:	mov	x1, #0x0                   	// #0
    4898:	strh	w22, [x2]
    489c:	str	xzr, [x2, #8]
    48a0:	b	4278 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x670>
    48a4:	mov	w1, #0x1                   	// #1
    48a8:	mov	x2, #0x0                   	// #0
    48ac:	cmn	x26, #0x8
    48b0:	b.ne	58b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1cb0>  // b.any
    48b4:	ldr	x5, [x24, #144]
    48b8:	lsl	w1, w22, #1
    48bc:	ldr	w3, [x24, #160]
    48c0:	cmp	x2, #0x0
    48c4:	add	x5, x5, #0x1
    48c8:	str	x5, [x24, #144]
    48cc:	add	w3, w3, #0x1
    48d0:	add	w5, w1, w22
    48d4:	csel	x2, x2, x4, ne  // ne = any
    48d8:	cmp	w5, w3, lsl #2
    48dc:	b.ls	4d30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1128>  // b.plast
    48e0:	ldr	w1, [x24, #164]
    48e4:	sub	w1, w22, w1
    48e8:	sub	w1, w1, w3
    48ec:	cmp	w1, w22, lsr #3
    48f0:	b.ls	491c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd14>  // b.plast
    48f4:	ldr	x0, [x2]
    48f8:	str	w3, [x24, #160]
    48fc:	cmn	x0, #0x8
    4900:	b.eq	4910 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd08>  // b.none
    4904:	ldr	w0, [x24, #164]
    4908:	sub	w0, w0, #0x1
    490c:	str	w0, [x24, #164]
    4910:	mov	x1, #0x0                   	// #0
    4914:	stp	x19, xzr, [x2]
    4918:	b	4278 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x670>
    491c:	mov	w1, w0
    4920:	lsr	w0, w0, #1
    4924:	orr	x0, x0, x1
    4928:	mov	w1, #0x40                  	// #64
    492c:	orr	x0, x0, x0, lsr #2
    4930:	orr	x0, x0, x0, lsr #4
    4934:	orr	x0, x0, x0, lsr #8
    4938:	orr	x0, x0, x0, lsr #16
    493c:	add	x0, x0, #0x1
    4940:	cmp	w0, w1
    4944:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4948:	str	w0, [x24, #168]
    494c:	ubfiz	x0, x0, #4, #32
    4950:	bl	0 <_Znwm>
    4954:	ldr	w1, [x24, #168]
    4958:	stp	x0, xzr, [x24, #152]
    495c:	sub	w2, w1, #0x1
    4960:	and	w2, w2, w1
    4964:	cbz	x20, 59c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1db8>
    4968:	ubfiz	x22, x22, #4, #32
    496c:	add	x21, x20, x22
    4970:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    4974:	ubfiz	x1, x1, #4, #32
    4978:	add	x1, x0, x1
    497c:	cmp	x0, x1
    4980:	b.eq	4990 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd88>  // b.none
    4984:	str	x26, [x0], #16
    4988:	cmp	x1, x0
    498c:	b.ne	4984 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd7c>  // b.any
    4990:	mov	x23, x20
    4994:	b	49a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd9c>
    4998:	add	x23, x23, #0x10
    499c:	cmp	x21, x23
    49a0:	b.eq	5730 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b28>  // b.none
    49a4:	ldr	x0, [x23]
    49a8:	cmn	x0, #0x10
    49ac:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    49b0:	b.eq	4998 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd90>  // b.none
    49b4:	ldr	w2, [x24, #168]
    49b8:	cbz	w2, 5f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2318>
    49bc:	lsr	w1, w0, #9
    49c0:	sub	w2, w2, #0x1
    49c4:	eor	w1, w1, w0, lsr #4
    49c8:	and	w1, w1, w2
    49cc:	ldr	x8, [x24, #152]
    49d0:	lsl	w4, w1, #4
    49d4:	add	x3, x8, x4
    49d8:	ldr	x6, [x8, x4]
    49dc:	cmp	x6, x0
    49e0:	b.ne	57e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bd8>  // b.any
    49e4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    49e8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    49ec:	add	x3, x3, #0x0
    49f0:	b	4acc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xec4>
    49f4:	mov	w1, w0
    49f8:	lsr	w0, w0, #1
    49fc:	orr	x0, x0, x1
    4a00:	mov	w1, #0x40                  	// #64
    4a04:	orr	x0, x0, x0, lsr #2
    4a08:	orr	x0, x0, x0, lsr #4
    4a0c:	orr	x0, x0, x0, lsr #8
    4a10:	orr	x0, x0, x0, lsr #16
    4a14:	add	x0, x0, #0x1
    4a18:	cmp	w0, w1
    4a1c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4a20:	str	w0, [x24, #136]
    4a24:	ubfiz	x0, x0, #4, #32
    4a28:	bl	0 <_Znwm>
    4a2c:	ldr	w1, [x24, #136]
    4a30:	stp	x0, xzr, [x24, #120]
    4a34:	sub	w2, w1, #0x1
    4a38:	and	w2, w2, w1
    4a3c:	cbz	x23, 5a70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e68>
    4a40:	ubfiz	x21, x21, #4, #32
    4a44:	add	x19, x23, x21
    4a48:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    4a4c:	ubfiz	x1, x1, #4, #32
    4a50:	mov	w2, #0xffffffff            	// #-1
    4a54:	add	x1, x0, x1
    4a58:	cmp	x0, x1
    4a5c:	b.eq	4a6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe64>  // b.none
    4a60:	strh	w2, [x0], #16
    4a64:	cmp	x1, x0
    4a68:	b.ne	4a60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe58>  // b.any
    4a6c:	mov	x28, x23
    4a70:	mov	w25, #0xfffd                	// #65533
    4a74:	mov	w27, #0x25                  	// #37
    4a78:	b	4a88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe80>
    4a7c:	add	x28, x28, #0x10
    4a80:	cmp	x19, x28
    4a84:	b.eq	5578 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1970>  // b.none
    4a88:	ldrh	w0, [x28]
    4a8c:	cmp	w0, w25
    4a90:	b.hi	4a7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe74>  // b.pmore
    4a94:	ldr	w2, [x24, #136]
    4a98:	cbz	w2, 5f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230c>
    4a9c:	mul	w1, w0, w27
    4aa0:	sub	w2, w2, #0x1
    4aa4:	ldr	x8, [x24, #120]
    4aa8:	and	w1, w1, w2
    4aac:	ubfiz	x4, x1, #4, #22
    4ab0:	add	x3, x8, x4
    4ab4:	ldrh	w6, [x8, x4]
    4ab8:	cmp	w6, w0
    4abc:	b.ne	59e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ddc>  // b.any
    4ac0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ac4:	add	x3, x3, #0x0
    4ac8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4acc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ad0:	add	x1, x1, #0x0
    4ad4:	add	x0, x0, #0x0
    4ad8:	mov	w2, #0x17a                 	// #378
    4adc:	bl	0 <__assert_fail>
    4ae0:	mov	x0, x3
    4ae4:	mov	x2, x26
    4ae8:	mov	x1, x4
    4aec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4af0:	mov	x3, x0
    4af4:	ldp	x2, x0, [x3, #16]
    4af8:	b	4608 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa00>
    4afc:	mov	w2, #0x0                   	// #0
    4b00:	b	3ef0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2e8>
    4b04:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b08:	add	x1, x1, #0x0
    4b0c:	mov	x2, #0x27                  	// #39
    4b10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b14:	mov	x1, x0
    4b18:	ldr	x4, [x0, #24]
    4b1c:	b	4448 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x840>
    4b20:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b24:	mov	x2, #0x2d                  	// #45
    4b28:	add	x1, x1, #0x0
    4b2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b30:	b	436c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x764>
    4b34:	mov	x2, #0x2d                  	// #45
    4b38:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b3c:	add	x1, x1, #0x0
    4b40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b44:	mov	x3, x0
    4b48:	ldr	x2, [x0, #24]
    4b4c:	b	43b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7b0>
    4b50:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b54:	mov	x2, #0x25                  	// #37
    4b58:	add	x1, x1, #0x0
    4b5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b60:	b	44c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8b8>
    4b64:	mov	x0, x3
    4b68:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b6c:	mov	x2, #0x1b                  	// #27
    4b70:	add	x1, x1, #0x0
    4b74:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b78:	b	43f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7ec>
    4b7c:	mov	x0, x1
    4b80:	mov	x2, #0x14                  	// #20
    4b84:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4b88:	add	x1, x1, #0x0
    4b8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4b90:	b	447c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x874>
    4b94:	bl	0 <_ZN4llvm4dbgsEv>
    4b98:	mov	x2, x0
    4b9c:	ldp	x1, x3, [x0, #16]
    4ba0:	sub	x1, x1, x3
    4ba4:	cmp	x1, #0xc
    4ba8:	b.ls	4c4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1044>  // b.plast
    4bac:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4bb0:	add	x0, x0, #0x0
    4bb4:	ldr	x1, [x0]
    4bb8:	str	x1, [x3]
    4bbc:	ldur	x0, [x0, #5]
    4bc0:	stur	x0, [x3, #5]
    4bc4:	ldr	x0, [x2, #24]
    4bc8:	add	x0, x0, #0xd
    4bcc:	str	x0, [x2, #24]
    4bd0:	ldr	w1, [x26, #312]
    4bd4:	mov	x0, x2
    4bd8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    4bdc:	mov	x1, x0
    4be0:	ldp	x3, x2, [x0, #16]
    4be4:	cmp	x2, x3
    4be8:	b.cs	4c40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1038>  // b.hs, b.nlast
    4bec:	add	x0, x2, #0x1
    4bf0:	str	x0, [x1, #24]
    4bf4:	mov	w0, #0xa                   	// #10
    4bf8:	strb	w0, [x2]
    4bfc:	b	44e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8d8>
    4c00:	mov	x0, x3
    4c04:	mov	w1, #0xa                   	// #10
    4c08:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4c0c:	b	4094 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x48c>
    4c10:	mov	w1, #0xa                   	// #10
    4c14:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4c18:	b	3dec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e4>
    4c1c:	mov	w1, #0xa                   	// #10
    4c20:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4c24:	b	4154 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54c>
    4c28:	mov	x2, #0xe                   	// #14
    4c2c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4c30:	add	x1, x1, #0x0
    4c34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4c38:	mov	x2, x0
    4c3c:	b	4538 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x930>
    4c40:	mov	w1, #0xa                   	// #10
    4c44:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4c48:	b	44e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8d8>
    4c4c:	mov	x2, #0xd                   	// #13
    4c50:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4c54:	add	x1, x1, #0x0
    4c58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4c5c:	mov	x2, x0
    4c60:	b	4bd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfc8>
    4c64:	mov	w19, w22
    4c68:	mov	w21, w1
    4c6c:	and	w22, w22, #0xffff
    4c70:	b	424c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x644>
    4c74:	mov	w22, w1
    4c78:	cmn	x19, #0x8
    4c7c:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    4c80:	b.ne	47c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbbc>  // b.any
    4c84:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4c88:	add	x3, x3, #0x0
    4c8c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4c90:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4c94:	add	x1, x1, #0x0
    4c98:	add	x0, x0, #0x0
    4c9c:	mov	w2, #0x250                 	// #592
    4ca0:	bl	0 <__assert_fail>
    4ca4:	mov	w8, #0x1                   	// #1
    4ca8:	mov	x0, #0x0                   	// #0
    4cac:	cmn	x4, #0x8
    4cb0:	b.ne	5a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e90>  // b.any
    4cb4:	ldr	x5, [x24, #144]
    4cb8:	lsl	w2, w1, #1
    4cbc:	ldr	w4, [x24, #160]
    4cc0:	cmp	x0, #0x0
    4cc4:	add	x5, x5, #0x1
    4cc8:	str	x5, [x24, #144]
    4ccc:	add	w4, w4, #0x1
    4cd0:	add	w5, w2, w1
    4cd4:	csel	x0, x0, x3, ne  // ne = any
    4cd8:	cmp	w5, w4, lsl #2
    4cdc:	b.ls	5248 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1640>  // b.plast
    4ce0:	ldr	w2, [x24, #164]
    4ce4:	sub	w2, w1, w2
    4ce8:	sub	w2, w2, w4
    4cec:	cmp	w2, w1, lsr #3
    4cf0:	b.ls	4e88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1280>  // b.plast
    4cf4:	ldr	x2, [x0]
    4cf8:	str	w4, [x24, #160]
    4cfc:	cmn	x2, #0x8
    4d00:	b.eq	4d10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1108>  // b.none
    4d04:	ldr	w2, [x24, #164]
    4d08:	sub	w2, w2, #0x1
    4d0c:	str	w2, [x24, #164]
    4d10:	stp	x19, x26, [x0]
    4d14:	mov	w22, w1
    4d18:	cbnz	w1, 4c78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1070>
    4d1c:	ldr	x0, [x24, #144]
    4d20:	mov	w22, #0x0                   	// #0
    4d24:	mov	w1, #0x0                   	// #0
    4d28:	add	x0, x0, #0x1
    4d2c:	str	x0, [x24, #144]
    4d30:	sub	w0, w1, #0x1
    4d34:	mov	w1, #0x40                  	// #64
    4d38:	orr	x0, x0, x0, lsr #1
    4d3c:	orr	x0, x0, x0, lsr #2
    4d40:	orr	x0, x0, x0, lsr #4
    4d44:	orr	x0, x0, x0, lsr #8
    4d48:	orr	x0, x0, x0, lsr #16
    4d4c:	add	x0, x0, #0x1
    4d50:	cmp	w0, w1
    4d54:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4d58:	str	w0, [x24, #168]
    4d5c:	ubfiz	x0, x0, #4, #32
    4d60:	bl	0 <_Znwm>
    4d64:	ldr	w1, [x24, #168]
    4d68:	stp	x0, xzr, [x24, #152]
    4d6c:	sub	w2, w1, #0x1
    4d70:	and	w2, w2, w1
    4d74:	cbz	x20, 5890 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c88>
    4d78:	ubfiz	x22, x22, #4, #32
    4d7c:	add	x26, x20, x22
    4d80:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    4d84:	ubfiz	x1, x1, #4, #32
    4d88:	mov	x2, #0xfffffffffffffff8    	// #-8
    4d8c:	add	x1, x0, x1
    4d90:	cmp	x0, x1
    4d94:	b.eq	4da4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x119c>  // b.none
    4d98:	str	x2, [x0], #16
    4d9c:	cmp	x1, x0
    4da0:	b.ne	4d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1190>  // b.any
    4da4:	cmp	x20, x26
    4da8:	mov	x25, x20
    4dac:	b.ne	4dc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11b8>  // b.any
    4db0:	b	578c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b84>
    4db4:	add	x25, x25, #0x10
    4db8:	cmp	x26, x25
    4dbc:	b.eq	578c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b84>  // b.none
    4dc0:	ldr	x0, [x25]
    4dc4:	cmn	x0, #0x10
    4dc8:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    4dcc:	b.eq	4db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11ac>  // b.none
    4dd0:	ldr	w2, [x24, #168]
    4dd4:	cbz	w2, 5f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2318>
    4dd8:	lsr	w1, w0, #9
    4ddc:	sub	w2, w2, #0x1
    4de0:	eor	w1, w1, w0, lsr #4
    4de4:	and	w1, w1, w2
    4de8:	ldr	x8, [x24, #152]
    4dec:	lsl	w4, w1, #4
    4df0:	add	x3, x8, x4
    4df4:	ldr	x6, [x8, x4]
    4df8:	cmp	x0, x6
    4dfc:	b.eq	49e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xddc>  // b.none
    4e00:	mov	w5, #0x1                   	// #1
    4e04:	mov	x4, #0x0                   	// #0
    4e08:	cmn	x6, #0x8
    4e0c:	b.ne	5c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2000>  // b.any
    4e10:	cmp	x4, #0x0
    4e14:	ldr	w1, [x24, #160]
    4e18:	csel	x3, x3, x4, eq  // eq = none
    4e1c:	ldr	x2, [x25, #8]
    4e20:	add	w1, w1, #0x1
    4e24:	str	x0, [x3]
    4e28:	str	xzr, [x25, #8]
    4e2c:	str	x2, [x3, #8]
    4e30:	ldr	x27, [x25, #8]
    4e34:	str	w1, [x24, #160]
    4e38:	cbz	x27, 4db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11ac>
    4e3c:	ldr	x0, [x27, #176]
    4e40:	add	x1, x27, #0xc0
    4e44:	cmp	x0, x1
    4e48:	b.eq	4e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1248>  // b.none
    4e4c:	bl	0 <free>
    4e50:	ldr	x0, [x27, #96]
    4e54:	add	x1, x27, #0x70
    4e58:	cmp	x0, x1
    4e5c:	b.eq	4e64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x125c>  // b.none
    4e60:	bl	0 <free>
    4e64:	mov	x1, x27
    4e68:	ldr	x0, [x1], #16
    4e6c:	cmp	x0, x1
    4e70:	b.eq	4e78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1270>  // b.none
    4e74:	bl	0 <free>
    4e78:	mov	x0, x27
    4e7c:	mov	x1, #0x150                 	// #336
    4e80:	bl	0 <_ZdlPvm>
    4e84:	b	4db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11ac>
    4e88:	add	x0, x24, #0x90
    4e8c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4e90:	ldr	w1, [x24, #168]
    4e94:	cbz	w1, 50a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a0>
    4e98:	sub	w8, w1, #0x1
    4e9c:	ldr	w4, [x24, #160]
    4ea0:	and	w22, w22, w8
    4ea4:	ldr	x20, [x24, #152]
    4ea8:	lsl	w2, w22, #4
    4eac:	add	w4, w4, #0x1
    4eb0:	add	x0, x20, x2
    4eb4:	ldr	x5, [x20, x2]
    4eb8:	cmp	x19, x5
    4ebc:	b.ne	5cc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20b8>  // b.any
    4ec0:	str	w4, [x24, #160]
    4ec4:	b	4d04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10fc>
    4ec8:	mov	w8, #0x1                   	// #1
    4ecc:	mov	x2, #0x0                   	// #0
    4ed0:	mov	w11, #0xffff                	// #65535
    4ed4:	mov	w10, #0xfffe                	// #65534
    4ed8:	cmp	w5, w11
    4edc:	b.ne	58f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ce8>  // b.any
    4ee0:	ldr	x8, [x24, #112]
    4ee4:	lsl	w3, w1, #1
    4ee8:	ldr	w5, [x24, #128]
    4eec:	cmp	x2, #0x0
    4ef0:	add	x8, x8, #0x1
    4ef4:	str	x8, [x24, #112]
    4ef8:	add	w5, w5, #0x1
    4efc:	add	w8, w3, w1
    4f00:	csel	x2, x2, x4, ne  // ne = any
    4f04:	cmp	w8, w5, lsl #2
    4f08:	b.ls	50d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d0>  // b.plast
    4f0c:	ldr	w3, [x24, #132]
    4f10:	sub	w3, w1, w3
    4f14:	sub	w3, w3, w5
    4f18:	cmp	w3, w1, lsr #3
    4f1c:	b.ls	4f4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1344>  // b.plast
    4f20:	ldrh	w0, [x2]
    4f24:	str	w5, [x24, #128]
    4f28:	mov	w3, #0xffff                	// #65535
    4f2c:	cmp	w0, w3
    4f30:	b.eq	4f40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1338>  // b.none
    4f34:	ldr	w0, [x24, #132]
    4f38:	sub	w0, w0, #0x1
    4f3c:	str	w0, [x24, #132]
    4f40:	strh	w27, [x2]
    4f44:	str	x26, [x2, #8]
    4f48:	b	4230 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x628>
    4f4c:	mov	w1, w0
    4f50:	lsr	w0, w0, #1
    4f54:	orr	x0, x0, x1
    4f58:	mov	w1, #0x40                  	// #64
    4f5c:	orr	x0, x0, x0, lsr #2
    4f60:	orr	x0, x0, x0, lsr #4
    4f64:	orr	x0, x0, x0, lsr #8
    4f68:	orr	x0, x0, x0, lsr #16
    4f6c:	add	x0, x0, #0x1
    4f70:	cmp	w0, w1
    4f74:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4f78:	str	w0, [x24, #136]
    4f7c:	ubfiz	x0, x0, #4, #32
    4f80:	bl	0 <_Znwm>
    4f84:	ldr	w1, [x24, #136]
    4f88:	stp	x0, xzr, [x24, #120]
    4f8c:	sub	w2, w1, #0x1
    4f90:	and	w2, w2, w1
    4f94:	cbz	x23, 594c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d44>
    4f98:	ubfiz	x3, x20, #4, #32
    4f9c:	str	x3, [sp, #104]
    4fa0:	add	x22, x23, x3
    4fa4:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    4fa8:	ubfiz	x1, x1, #4, #32
    4fac:	mov	w2, #0xffffffff            	// #-1
    4fb0:	add	x1, x0, x1
    4fb4:	cmp	x0, x1
    4fb8:	b.eq	4fc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c0>  // b.none
    4fbc:	strh	w2, [x0], #16
    4fc0:	cmp	x1, x0
    4fc4:	b.ne	4fbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13b4>  // b.any
    4fc8:	mov	x25, x23
    4fcc:	mov	w21, #0xfffd                	// #65533
    4fd0:	b	4fe0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13d8>
    4fd4:	add	x25, x25, #0x10
    4fd8:	cmp	x22, x25
    4fdc:	b.eq	56ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aa4>  // b.none
    4fe0:	ldrh	w0, [x25]
    4fe4:	cmp	w0, w21
    4fe8:	b.hi	4fd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13cc>  // b.pmore
    4fec:	ldr	w3, [x24, #136]
    4ff0:	cbz	w3, 5f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230c>
    4ff4:	mov	w1, #0x25                  	// #37
    4ff8:	sub	w3, w3, #0x1
    4ffc:	ldr	x10, [x24, #120]
    5000:	mul	w1, w0, w1
    5004:	and	w1, w1, w3
    5008:	ubfiz	x5, x1, #4, #22
    500c:	add	x4, x10, x5
    5010:	ldrh	w9, [x10, x5]
    5014:	cmp	w9, w0
    5018:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    501c:	mov	w8, #0x1                   	// #1
    5020:	mov	x5, #0x0                   	// #0
    5024:	mov	w12, #0xffff                	// #65535
    5028:	cmp	w9, w12
    502c:	b.ne	5cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20e8>  // b.any
    5030:	cmp	x5, #0x0
    5034:	ldr	w1, [x24, #128]
    5038:	csel	x4, x4, x5, eq  // eq = none
    503c:	ldr	x3, [x25, #8]
    5040:	add	w1, w1, #0x1
    5044:	strh	w0, [x4]
    5048:	str	xzr, [x25, #8]
    504c:	str	x3, [x4, #8]
    5050:	ldr	x20, [x25, #8]
    5054:	str	w1, [x24, #128]
    5058:	cbz	x20, 4fd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13cc>
    505c:	ldr	x0, [x20, #176]
    5060:	add	x3, x20, #0xc0
    5064:	cmp	x0, x3
    5068:	b.eq	5070 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1468>  // b.none
    506c:	bl	0 <free>
    5070:	ldr	x0, [x20, #96]
    5074:	add	x3, x20, #0x70
    5078:	cmp	x0, x3
    507c:	b.eq	5084 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x147c>  // b.none
    5080:	bl	0 <free>
    5084:	mov	x3, x20
    5088:	ldr	x0, [x3], #16
    508c:	cmp	x0, x3
    5090:	b.eq	5098 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1490>  // b.none
    5094:	bl	0 <free>
    5098:	mov	x0, x20
    509c:	mov	x1, #0x150                 	// #336
    50a0:	bl	0 <_ZdlPvm>
    50a4:	b	4fd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13cc>
    50a8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    50ac:	add	x3, x3, #0x0
    50b0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    50b4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    50b8:	add	x1, x1, #0x0
    50bc:	add	x0, x0, #0x0
    50c0:	mov	w2, #0x22f                 	// #559
    50c4:	bl	0 <__assert_fail>
    50c8:	ldr	x0, [x24, #112]
    50cc:	mov	w3, #0x0                   	// #0
    50d0:	add	x0, x0, #0x1
    50d4:	str	x0, [x24, #112]
    50d8:	sub	w0, w3, #0x1
    50dc:	mov	w1, #0x40                  	// #64
    50e0:	orr	x0, x0, x0, lsr #1
    50e4:	orr	x0, x0, x0, lsr #2
    50e8:	orr	x0, x0, x0, lsr #4
    50ec:	orr	x0, x0, x0, lsr #8
    50f0:	orr	x0, x0, x0, lsr #16
    50f4:	add	x0, x0, #0x1
    50f8:	cmp	w0, w1
    50fc:	csel	w0, w0, w1, cs  // cs = hs, nlast
    5100:	str	w0, [x24, #136]
    5104:	ubfiz	x0, x0, #4, #32
    5108:	bl	0 <_Znwm>
    510c:	ldr	w1, [x24, #136]
    5110:	stp	x0, xzr, [x24, #120]
    5114:	sub	w2, w1, #0x1
    5118:	and	w2, w2, w1
    511c:	cbz	x23, 5924 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d1c>
    5120:	ubfiz	x3, x20, #4, #32
    5124:	str	x3, [sp, #104]
    5128:	add	x21, x23, x3
    512c:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    5130:	ubfiz	x1, x1, #4, #32
    5134:	mov	w2, #0xffffffff            	// #-1
    5138:	add	x1, x0, x1
    513c:	cmp	x0, x1
    5140:	b.eq	5150 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1548>  // b.none
    5144:	strh	w2, [x0], #16
    5148:	cmp	x1, x0
    514c:	b.ne	5144 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x153c>  // b.any
    5150:	cmp	x23, x21
    5154:	mov	x28, x23
    5158:	mov	w25, #0xfffd                	// #65533
    515c:	b.ne	5170 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1568>  // b.any
    5160:	b	55dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19d4>
    5164:	add	x28, x28, #0x10
    5168:	cmp	x21, x28
    516c:	b.eq	55dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19d4>  // b.none
    5170:	ldrh	w0, [x28]
    5174:	cmp	w0, w25
    5178:	b.hi	5164 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x155c>  // b.pmore
    517c:	ldr	w2, [x24, #136]
    5180:	cbz	w2, 5f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230c>
    5184:	mov	w1, #0x25                  	// #37
    5188:	sub	w2, w2, #0x1
    518c:	ldr	x10, [x24, #120]
    5190:	mul	w1, w0, w1
    5194:	and	w1, w1, w2
    5198:	ubfiz	x5, x1, #4, #22
    519c:	add	x4, x10, x5
    51a0:	ldrh	w9, [x10, x5]
    51a4:	cmp	w0, w9
    51a8:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    51ac:	mov	w8, #0x1                   	// #1
    51b0:	mov	x5, #0x0                   	// #0
    51b4:	mov	w12, #0xffff                	// #65535
    51b8:	cmp	w9, w12
    51bc:	b.ne	5e54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x224c>  // b.any
    51c0:	cmp	x5, #0x0
    51c4:	ldr	w1, [x24, #128]
    51c8:	csel	x4, x4, x5, eq  // eq = none
    51cc:	ldr	x2, [x28, #8]
    51d0:	add	w1, w1, #0x1
    51d4:	strh	w0, [x4]
    51d8:	str	xzr, [x28, #8]
    51dc:	str	x2, [x4, #8]
    51e0:	ldr	x20, [x28, #8]
    51e4:	str	w1, [x24, #128]
    51e8:	cbz	x20, 5164 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x155c>
    51ec:	ldr	x0, [x20, #176]
    51f0:	add	x2, x20, #0xc0
    51f4:	cmp	x0, x2
    51f8:	b.eq	5200 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15f8>  // b.none
    51fc:	bl	0 <free>
    5200:	ldr	x0, [x20, #96]
    5204:	add	x2, x20, #0x70
    5208:	cmp	x0, x2
    520c:	b.eq	5214 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x160c>  // b.none
    5210:	bl	0 <free>
    5214:	mov	x2, x20
    5218:	ldr	x0, [x2], #16
    521c:	cmp	x0, x2
    5220:	b.eq	5228 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1620>  // b.none
    5224:	bl	0 <free>
    5228:	mov	x0, x20
    522c:	mov	x1, #0x150                 	// #336
    5230:	bl	0 <_ZdlPvm>
    5234:	b	5164 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x155c>
    5238:	ldr	x0, [x24, #144]
    523c:	mov	w2, #0x0                   	// #0
    5240:	add	x0, x0, #0x1
    5244:	str	x0, [x24, #144]
    5248:	sub	w0, w2, #0x1
    524c:	mov	w1, #0x40                  	// #64
    5250:	orr	x0, x0, x0, lsr #1
    5254:	orr	x0, x0, x0, lsr #2
    5258:	orr	x0, x0, x0, lsr #4
    525c:	orr	x0, x0, x0, lsr #8
    5260:	orr	x0, x0, x0, lsr #16
    5264:	add	x0, x0, #0x1
    5268:	cmp	w0, w1
    526c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    5270:	str	w0, [x24, #168]
    5274:	ubfiz	x0, x0, #4, #32
    5278:	bl	0 <_Znwm>
    527c:	ldr	w1, [x24, #168]
    5280:	stp	x0, xzr, [x24, #152]
    5284:	sub	w2, w1, #0x1
    5288:	and	w2, w2, w1
    528c:	cbz	x20, 5974 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d6c>
    5290:	ubfiz	x25, x25, #4, #32
    5294:	add	x23, x20, x25
    5298:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    529c:	ubfiz	x1, x1, #4, #32
    52a0:	mov	x2, #0xfffffffffffffff8    	// #-8
    52a4:	add	x1, x0, x1
    52a8:	cmp	x0, x1
    52ac:	b.eq	52bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16b4>  // b.none
    52b0:	str	x2, [x0], #16
    52b4:	cmp	x1, x0
    52b8:	b.ne	52b0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16a8>  // b.any
    52bc:	cmp	x20, x23
    52c0:	mov	x22, x20
    52c4:	b.ne	52d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16d0>  // b.any
    52c8:	b	5638 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a30>
    52cc:	add	x22, x22, #0x10
    52d0:	cmp	x23, x22
    52d4:	b.eq	5638 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a30>  // b.none
    52d8:	ldr	x0, [x22]
    52dc:	cmn	x0, #0x8
    52e0:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    52e4:	b.eq	52cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16c4>  // b.none
    52e8:	ldr	w2, [x24, #168]
    52ec:	cbz	w2, 5f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2318>
    52f0:	lsr	w1, w0, #9
    52f4:	sub	w2, w2, #0x1
    52f8:	eor	w1, w1, w0, lsr #4
    52fc:	and	w1, w1, w2
    5300:	ldr	x9, [x24, #152]
    5304:	lsl	w4, w1, #4
    5308:	add	x3, x9, x4
    530c:	ldr	x8, [x9, x4]
    5310:	cmp	x8, x0
    5314:	b.eq	49e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xddc>  // b.none
    5318:	mov	w5, #0x1                   	// #1
    531c:	mov	x4, #0x0                   	// #0
    5320:	cmn	x8, #0x8
    5324:	b.ne	5c8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2084>  // b.any
    5328:	cmp	x4, #0x0
    532c:	ldr	w1, [x24, #160]
    5330:	csel	x3, x3, x4, eq  // eq = none
    5334:	ldr	x2, [x22, #8]
    5338:	add	w1, w1, #0x1
    533c:	str	x0, [x3]
    5340:	str	xzr, [x22, #8]
    5344:	str	x2, [x3, #8]
    5348:	ldr	x21, [x22, #8]
    534c:	str	w1, [x24, #160]
    5350:	cbz	x21, 52cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16c4>
    5354:	ldr	x0, [x21, #176]
    5358:	add	x1, x21, #0xc0
    535c:	cmp	x0, x1
    5360:	b.eq	5368 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1760>  // b.none
    5364:	bl	0 <free>
    5368:	ldr	x0, [x21, #96]
    536c:	add	x1, x21, #0x70
    5370:	cmp	x0, x1
    5374:	b.eq	537c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1774>  // b.none
    5378:	bl	0 <free>
    537c:	mov	x1, x21
    5380:	ldr	x0, [x1], #16
    5384:	cmp	x0, x1
    5388:	b.eq	5390 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1788>  // b.none
    538c:	bl	0 <free>
    5390:	mov	x0, x21
    5394:	mov	x1, #0x150                 	// #336
    5398:	bl	0 <_ZdlPvm>
    539c:	b	52cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16c4>
    53a0:	ldr	x0, [x24, #112]
    53a4:	mov	w3, #0x0                   	// #0
    53a8:	add	x0, x0, #0x1
    53ac:	str	x0, [x24, #112]
    53b0:	sub	w0, w3, #0x1
    53b4:	mov	w1, #0x40                  	// #64
    53b8:	orr	x0, x0, x0, lsr #1
    53bc:	orr	x0, x0, x0, lsr #2
    53c0:	orr	x0, x0, x0, lsr #4
    53c4:	orr	x0, x0, x0, lsr #8
    53c8:	orr	x0, x0, x0, lsr #16
    53cc:	add	x0, x0, #0x1
    53d0:	cmp	w0, w1
    53d4:	csel	w0, w0, w1, cs  // cs = hs, nlast
    53d8:	str	w0, [x24, #136]
    53dc:	ubfiz	x0, x0, #4, #32
    53e0:	bl	0 <_Znwm>
    53e4:	ldr	w1, [x24, #136]
    53e8:	stp	x0, xzr, [x24, #120]
    53ec:	sub	w2, w1, #0x1
    53f0:	and	w2, w2, w1
    53f4:	cbz	x23, 5868 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c60>
    53f8:	ubfiz	x21, x21, #4, #32
    53fc:	add	x28, x23, x21
    5400:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    5404:	ubfiz	x1, x1, #4, #32
    5408:	mov	w2, #0xffffffff            	// #-1
    540c:	add	x1, x0, x1
    5410:	cmp	x0, x1
    5414:	b.eq	5424 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x181c>  // b.none
    5418:	strh	w2, [x0], #16
    541c:	cmp	x1, x0
    5420:	b.ne	5418 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1810>  // b.any
    5424:	cmp	x23, x28
    5428:	mov	x20, x23
    542c:	mov	w25, #0xfffd                	// #65533
    5430:	mov	w27, #0x25                  	// #37
    5434:	b.ne	5448 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1840>  // b.any
    5438:	b	550c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1904>
    543c:	add	x20, x20, #0x10
    5440:	cmp	x28, x20
    5444:	b.eq	550c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1904>  // b.none
    5448:	ldrh	w0, [x20]
    544c:	cmp	w0, w25
    5450:	b.hi	543c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>  // b.pmore
    5454:	ldr	w2, [x24, #136]
    5458:	cbz	w2, 5f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230c>
    545c:	mul	w1, w0, w27
    5460:	sub	w2, w2, #0x1
    5464:	ldr	x8, [x24, #120]
    5468:	and	w1, w1, w2
    546c:	ubfiz	x4, x1, #4, #22
    5470:	add	x3, x8, x4
    5474:	ldrh	w6, [x8, x4]
    5478:	cmp	w0, w6
    547c:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    5480:	mov	w5, #0x1                   	// #1
    5484:	mov	x4, #0x0                   	// #0
    5488:	mov	w10, #0xffff                	// #65535
    548c:	cmp	w6, w10
    5490:	b.ne	5dcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21c4>  // b.any
    5494:	cmp	x4, #0x0
    5498:	ldr	w1, [x24, #128]
    549c:	csel	x3, x3, x4, eq  // eq = none
    54a0:	ldr	x2, [x20, #8]
    54a4:	add	w1, w1, #0x1
    54a8:	strh	w0, [x3]
    54ac:	str	xzr, [x20, #8]
    54b0:	str	x2, [x3, #8]
    54b4:	ldr	x26, [x20, #8]
    54b8:	str	w1, [x24, #128]
    54bc:	cbz	x26, 543c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>
    54c0:	ldr	x0, [x26, #176]
    54c4:	add	x2, x26, #0xc0
    54c8:	cmp	x0, x2
    54cc:	b.eq	54d4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18cc>  // b.none
    54d0:	bl	0 <free>
    54d4:	ldr	x0, [x26, #96]
    54d8:	add	x2, x26, #0x70
    54dc:	cmp	x0, x2
    54e0:	b.eq	54e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18e0>  // b.none
    54e4:	bl	0 <free>
    54e8:	mov	x2, x26
    54ec:	ldr	x0, [x2], #16
    54f0:	cmp	x0, x2
    54f4:	b.eq	54fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18f4>  // b.none
    54f8:	bl	0 <free>
    54fc:	mov	x0, x26
    5500:	mov	x1, #0x150                 	// #336
    5504:	bl	0 <_ZdlPvm>
    5508:	b	543c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>
    550c:	mov	x1, x21
    5510:	mov	x0, x23
    5514:	bl	0 <_ZdlPvm>
    5518:	ldr	w1, [x24, #136]
    551c:	cbz	w1, 5568 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1960>
    5520:	mov	w0, #0xfffd                	// #65533
    5524:	cmp	w22, w0
    5528:	b.hi	5ce0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20d8>  // b.pmore
    552c:	and	w0, w19, #0xffff
    5530:	mov	w2, #0x25                  	// #37
    5534:	sub	w1, w1, #0x1
    5538:	ldr	w4, [x24, #128]
    553c:	ldr	x8, [x24, #120]
    5540:	mul	w0, w0, w2
    5544:	add	w4, w4, #0x1
    5548:	and	w0, w0, w1
    554c:	ubfiz	x3, x0, #4, #22
    5550:	add	x2, x8, x3
    5554:	ldrh	w6, [x8, x3]
    5558:	cmp	w22, w6
    555c:	b.ne	5e04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21fc>  // b.any
    5560:	str	w4, [x24, #128]
    5564:	b	4888 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc80>
    5568:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    556c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5570:	add	x3, x3, #0x0
    5574:	b	50b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14ac>
    5578:	mov	x1, x21
    557c:	mov	x0, x23
    5580:	bl	0 <_ZdlPvm>
    5584:	ldr	w1, [x24, #136]
    5588:	cbz	w1, 5568 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1960>
    558c:	sub	w1, w1, #0x1
    5590:	ldr	w4, [x24, #128]
    5594:	and	w20, w20, w1
    5598:	ldr	x6, [x24, #120]
    559c:	ubfiz	x0, x20, #4, #22
    55a0:	add	w4, w4, #0x1
    55a4:	add	x2, x6, x0
    55a8:	ldrh	w0, [x6, x0]
    55ac:	cmp	w0, w22
    55b0:	b.eq	4878 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc70>  // b.none
    55b4:	mov	w5, #0x1                   	// #1
    55b8:	mov	x3, #0x0                   	// #0
    55bc:	mov	w10, #0xffff                	// #65535
    55c0:	mov	w9, #0xfffe                	// #65534
    55c4:	cmp	w0, w10
    55c8:	b.ne	5b00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ef8>  // b.any
    55cc:	cbz	x3, 4874 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc6c>
    55d0:	ldrh	w0, [x3]
    55d4:	mov	x2, x3
    55d8:	b	4878 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc70>
    55dc:	ldr	x1, [sp, #104]
    55e0:	mov	x0, x23
    55e4:	bl	0 <_ZdlPvm>
    55e8:	ldr	w1, [x24, #136]
    55ec:	cbz	w1, 5568 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1960>
    55f0:	mov	w0, #0xfffd                	// #65533
    55f4:	cmp	w27, w0
    55f8:	b.hi	5ce0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20d8>  // b.pmore
    55fc:	and	w0, w22, #0xffff
    5600:	mov	w2, #0x25                  	// #37
    5604:	sub	w9, w1, #0x1
    5608:	ldr	w5, [x24, #128]
    560c:	ldr	x23, [x24, #120]
    5610:	mul	w0, w0, w2
    5614:	add	w5, w5, #0x1
    5618:	and	w0, w0, w9
    561c:	ubfiz	x3, x0, #4, #22
    5620:	add	x2, x23, x3
    5624:	ldrh	w8, [x23, x3]
    5628:	cmp	w27, w8
    562c:	b.ne	5c3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2034>  // b.any
    5630:	str	w5, [x24, #128]
    5634:	b	4f34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x132c>
    5638:	mov	x1, x25
    563c:	mov	x0, x20
    5640:	bl	0 <_ZdlPvm>
    5644:	ldr	w1, [x24, #168]
    5648:	cbz	w1, 50a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a0>
    564c:	cmn	x19, #0x8
    5650:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    5654:	b.eq	4c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x107c>  // b.none
    5658:	lsr	w23, w19, #4
    565c:	lsr	w21, w19, #9
    5660:	eor	w2, w23, w21
    5664:	sub	w9, w1, #0x1
    5668:	and	w2, w2, w9
    566c:	ldr	w4, [x24, #160]
    5670:	ldr	x20, [x24, #152]
    5674:	lsl	w3, w2, #4
    5678:	add	w4, w4, #0x1
    567c:	add	x0, x20, x3
    5680:	ldr	x8, [x20, x3]
    5684:	cmp	x19, x8
    5688:	b.eq	4ec0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12b8>  // b.none
    568c:	mov	w5, #0x1                   	// #1
    5690:	mov	x3, #0x0                   	// #0
    5694:	cmn	x8, #0x8
    5698:	b.ne	5d28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2120>  // b.any
    569c:	cbz	x3, 4cf4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10ec>
    56a0:	mov	x0, x3
    56a4:	ldr	x2, [x3]
    56a8:	b	4cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10f0>
    56ac:	ldr	x1, [sp, #104]
    56b0:	mov	x0, x23
    56b4:	bl	0 <_ZdlPvm>
    56b8:	ldr	w1, [x24, #136]
    56bc:	cbz	w1, 5568 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1960>
    56c0:	sub	w8, w1, #0x1
    56c4:	ldr	w5, [x24, #128]
    56c8:	and	w28, w28, w8
    56cc:	ldr	x23, [x24, #120]
    56d0:	ubfiz	x0, x28, #4, #22
    56d4:	add	w5, w5, #0x1
    56d8:	add	x2, x23, x0
    56dc:	ldrh	w4, [x23, x0]
    56e0:	cmp	w27, w4
    56e4:	b.eq	5630 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a28>  // b.none
    56e8:	mov	w0, #0x1                   	// #1
    56ec:	mov	x3, #0x0                   	// #0
    56f0:	mov	w11, #0xffff                	// #65535
    56f4:	mov	w10, #0xfffe                	// #65534
    56f8:	cmp	w4, w11
    56fc:	b.ne	5b34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f2c>  // b.any
    5700:	cbz	x3, 4f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1318>
    5704:	ldrh	w0, [x3]
    5708:	mov	x2, x3
    570c:	b	4f24 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x131c>
    5710:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5714:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5718:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    571c:	add	x3, x3, #0x0
    5720:	add	x1, x1, #0x0
    5724:	add	x0, x0, #0x0
    5728:	mov	w2, #0x15b                 	// #347
    572c:	bl	0 <__assert_fail>
    5730:	mov	x1, x22
    5734:	mov	x0, x20
    5738:	bl	0 <_ZdlPvm>
    573c:	ldr	w1, [x24, #168]
    5740:	cbz	w1, 50a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a0>
    5744:	sub	w1, w1, #0x1
    5748:	ldr	w3, [x24, #160]
    574c:	and	w25, w25, w1
    5750:	ldr	x6, [x24, #152]
    5754:	lsl	w0, w25, #4
    5758:	add	w3, w3, #0x1
    575c:	add	x2, x6, x0
    5760:	ldr	x0, [x6, x0]
    5764:	cmp	x19, x0
    5768:	b.eq	48f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcf0>  // b.none
    576c:	mov	w5, #0x1                   	// #1
    5770:	mov	x4, #0x0                   	// #0
    5774:	cmn	x0, #0x8
    5778:	b.ne	5bd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fcc>  // b.any
    577c:	cbz	x4, 48f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcec>
    5780:	mov	x2, x4
    5784:	ldr	x0, [x4]
    5788:	b	48f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcf0>
    578c:	mov	x1, x22
    5790:	mov	x0, x20
    5794:	bl	0 <_ZdlPvm>
    5798:	ldr	w1, [x24, #168]
    579c:	cbz	w1, 50a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a0>
    57a0:	cmn	x19, #0x8
    57a4:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    57a8:	b.eq	4c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x107c>  // b.none
    57ac:	sub	w1, w1, #0x1
    57b0:	eor	w0, w23, w21
    57b4:	and	w0, w0, w1
    57b8:	ldr	w3, [x24, #160]
    57bc:	ldr	x8, [x24, #152]
    57c0:	lsl	w4, w0, #4
    57c4:	add	w3, w3, #0x1
    57c8:	add	x2, x8, x4
    57cc:	ldr	x6, [x8, x4]
    57d0:	cmp	x19, x6
    57d4:	b.ne	5e8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2284>  // b.any
    57d8:	str	w3, [x24, #160]
    57dc:	b	4904 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcfc>
    57e0:	mov	w5, #0x1                   	// #1
    57e4:	mov	x4, #0x0                   	// #0
    57e8:	cmn	x6, #0x8
    57ec:	b.ne	5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2190>  // b.any
    57f0:	cmp	x4, #0x0
    57f4:	ldr	w1, [x24, #160]
    57f8:	csel	x3, x3, x4, eq  // eq = none
    57fc:	ldr	x2, [x23, #8]
    5800:	add	w1, w1, #0x1
    5804:	str	x0, [x3]
    5808:	str	xzr, [x23, #8]
    580c:	str	x2, [x3, #8]
    5810:	ldr	x26, [x23, #8]
    5814:	str	w1, [x24, #160]
    5818:	cbz	x26, 4998 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd90>
    581c:	ldr	x0, [x26, #176]
    5820:	add	x1, x26, #0xc0
    5824:	cmp	x0, x1
    5828:	b.eq	5830 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c28>  // b.none
    582c:	bl	0 <free>
    5830:	ldr	x0, [x26, #96]
    5834:	add	x1, x26, #0x70
    5838:	cmp	x0, x1
    583c:	b.eq	5844 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c3c>  // b.none
    5840:	bl	0 <free>
    5844:	mov	x1, x26
    5848:	ldr	x0, [x1], #16
    584c:	cmp	x0, x1
    5850:	b.eq	5858 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c50>  // b.none
    5854:	bl	0 <free>
    5858:	mov	x0, x26
    585c:	mov	x1, #0x150                 	// #336
    5860:	bl	0 <_ZdlPvm>
    5864:	b	4998 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd90>
    5868:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    586c:	ubfiz	x2, x1, #4, #32
    5870:	mov	w3, #0xffffffff            	// #-1
    5874:	add	x2, x0, x2
    5878:	cmp	x0, x2
    587c:	b.eq	551c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1914>  // b.none
    5880:	strh	w3, [x0], #16
    5884:	cmp	x2, x0
    5888:	b.ne	5880 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c78>  // b.any
    588c:	b	551c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1914>
    5890:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    5894:	ubfiz	x2, x1, #4, #32
    5898:	mov	x3, #0xfffffffffffffff8    	// #-8
    589c:	add	x2, x0, x2
    58a0:	cmp	x0, x2
    58a4:	b.eq	579c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b94>  // b.none
    58a8:	str	x3, [x0], #16
    58ac:	cmp	x2, x0
    58b0:	b.ne	58a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ca0>  // b.any
    58b4:	b	579c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b94>
    58b8:	add	w3, w3, w1
    58bc:	cmp	x2, #0x0
    58c0:	and	w5, w0, w3
    58c4:	ccmn	x26, #0x10, #0x0, eq  // eq = none
    58c8:	csel	x2, x2, x4, ne  // ne = any
    58cc:	add	w1, w1, #0x1
    58d0:	lsl	x6, x5, #4
    58d4:	and	w3, w0, w3
    58d8:	add	x4, x20, x5, lsl #4
    58dc:	ldr	x26, [x20, x6]
    58e0:	cmp	x19, x26
    58e4:	b.ne	48ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xca4>  // b.any
    58e8:	ldr	x1, [x4, #8]
    58ec:	b	4278 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x670>
    58f0:	add	w3, w8, w3
    58f4:	cmp	x2, #0x0
    58f8:	and	w9, w0, w3
    58fc:	ccmp	w5, w10, #0x0, eq  // eq = none
    5900:	csel	x2, x2, x4, ne  // ne = any
    5904:	add	w8, w8, #0x1
    5908:	lsl	x5, x9, #4
    590c:	and	w3, w0, w3
    5910:	add	x4, x23, x9, lsl #4
    5914:	ldrh	w5, [x23, x5]
    5918:	cmp	w27, w5
    591c:	b.eq	41d4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5cc>  // b.none
    5920:	b	4ed8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12d0>
    5924:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    5928:	ubfiz	x2, x1, #4, #32
    592c:	mov	w3, #0xffffffff            	// #-1
    5930:	add	x2, x0, x2
    5934:	cmp	x0, x2
    5938:	b.eq	55ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19e4>  // b.none
    593c:	strh	w3, [x0], #16
    5940:	cmp	x2, x0
    5944:	b.ne	593c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d34>  // b.any
    5948:	b	55ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19e4>
    594c:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    5950:	ubfiz	x2, x1, #4, #32
    5954:	mov	w3, #0xffffffff            	// #-1
    5958:	add	x2, x0, x2
    595c:	cmp	x0, x2
    5960:	b.eq	56bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ab4>  // b.none
    5964:	strh	w3, [x0], #16
    5968:	cmp	x2, x0
    596c:	b.ne	5964 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d5c>  // b.any
    5970:	b	56bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ab4>
    5974:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    5978:	ubfiz	x2, x1, #4, #32
    597c:	mov	x3, #0xfffffffffffffff8    	// #-8
    5980:	add	x2, x0, x2
    5984:	cmp	x0, x2
    5988:	b.eq	5648 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a40>  // b.none
    598c:	str	x3, [x0], #16
    5990:	cmp	x2, x0
    5994:	b.ne	598c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d84>  // b.any
    5998:	b	5648 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a40>
    599c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    59a0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    59a4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    59a8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    59ac:	add	x3, x3, #0x0
    59b0:	add	x1, x1, #0x0
    59b4:	add	x0, x0, #0x0
    59b8:	mov	w2, #0x1fe                 	// #510
    59bc:	bl	0 <__assert_fail>
    59c0:	cbnz	w2, 5b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f64>
    59c4:	ubfiz	x2, x1, #4, #32
    59c8:	add	x2, x0, x2
    59cc:	cmp	x0, x2
    59d0:	b.eq	5740 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b38>  // b.none
    59d4:	str	x26, [x0], #16
    59d8:	cmp	x2, x0
    59dc:	b.ne	59d4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dcc>  // b.any
    59e0:	b	5740 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b38>
    59e4:	mov	w5, #0x1                   	// #1
    59e8:	mov	x4, #0x0                   	// #0
    59ec:	mov	w10, #0xffff                	// #65535
    59f0:	cmp	w6, w10
    59f4:	b.ne	5b8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f84>  // b.any
    59f8:	cmp	x4, #0x0
    59fc:	ldr	w1, [x24, #128]
    5a00:	csel	x3, x3, x4, eq  // eq = none
    5a04:	ldr	x2, [x28, #8]
    5a08:	add	w1, w1, #0x1
    5a0c:	strh	w0, [x3]
    5a10:	str	xzr, [x28, #8]
    5a14:	str	x2, [x3, #8]
    5a18:	ldr	x26, [x28, #8]
    5a1c:	str	w1, [x24, #128]
    5a20:	cbz	x26, 4a7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe74>
    5a24:	ldr	x0, [x26, #176]
    5a28:	add	x2, x26, #0xc0
    5a2c:	cmp	x0, x2
    5a30:	b.eq	5a38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e30>  // b.none
    5a34:	bl	0 <free>
    5a38:	ldr	x0, [x26, #96]
    5a3c:	add	x2, x26, #0x70
    5a40:	cmp	x0, x2
    5a44:	b.eq	5a4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e44>  // b.none
    5a48:	bl	0 <free>
    5a4c:	mov	x2, x26
    5a50:	ldr	x0, [x2], #16
    5a54:	cmp	x0, x2
    5a58:	b.eq	5a60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e58>  // b.none
    5a5c:	bl	0 <free>
    5a60:	mov	x0, x26
    5a64:	mov	x1, #0x150                 	// #336
    5a68:	bl	0 <_ZdlPvm>
    5a6c:	b	4a7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe74>
    5a70:	cbnz	w2, 5bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fbc>
    5a74:	ubfiz	x2, x1, #4, #32
    5a78:	mov	w3, #0xffffffff            	// #-1
    5a7c:	add	x2, x0, x2
    5a80:	cmp	x0, x2
    5a84:	b.eq	5588 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1980>  // b.none
    5a88:	strh	w3, [x0], #16
    5a8c:	cmp	x2, x0
    5a90:	b.ne	5a88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e80>  // b.any
    5a94:	b	5588 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1980>
    5a98:	add	w2, w2, w8
    5a9c:	cmp	x0, #0x0
    5aa0:	and	w9, w5, w2
    5aa4:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    5aa8:	csel	x0, x0, x3, ne  // ne = any
    5aac:	add	w8, w8, #0x1
    5ab0:	lsl	x4, x9, #4
    5ab4:	and	w2, w5, w2
    5ab8:	add	x3, x20, x9, lsl #4
    5abc:	ldr	x4, [x20, x4]
    5ac0:	cmp	x19, x4
    5ac4:	b.eq	4764 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb5c>  // b.none
    5ac8:	b	4cac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10a4>
    5acc:	add	w3, w3, w6
    5ad0:	cmp	x2, #0x0
    5ad4:	and	w8, w0, w3
    5ad8:	ccmp	w4, w9, #0x0, eq  // eq = none
    5adc:	csel	x2, x2, x5, ne  // ne = any
    5ae0:	add	w6, w6, #0x1
    5ae4:	lsl	x4, x8, #4
    5ae8:	and	w3, w0, w3
    5aec:	add	x5, x23, x8, lsl #4
    5af0:	ldrh	w4, [x23, x4]
    5af4:	cmp	w4, w22
    5af8:	b.eq	4274 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x66c>  // b.none
    5afc:	b	482c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc24>
    5b00:	add	w20, w20, w5
    5b04:	cmp	x3, #0x0
    5b08:	and	w8, w1, w20
    5b0c:	ccmp	w0, w9, #0x0, eq  // eq = none
    5b10:	csel	x3, x3, x2, ne  // ne = any
    5b14:	add	w5, w5, #0x1
    5b18:	lsl	x0, x8, #4
    5b1c:	and	w20, w1, w20
    5b20:	add	x2, x6, x8, lsl #4
    5b24:	ldrh	w0, [x6, x0]
    5b28:	cmp	w22, w0
    5b2c:	b.eq	4878 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc70>  // b.none
    5b30:	b	55c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19bc>
    5b34:	add	w28, w0, w28
    5b38:	cmp	x3, #0x0
    5b3c:	and	w9, w8, w28
    5b40:	ccmp	w4, w10, #0x0, eq  // eq = none
    5b44:	csel	x3, x3, x2, ne  // ne = any
    5b48:	add	w0, w0, #0x1
    5b4c:	lsl	x4, x9, #4
    5b50:	and	w28, w8, w28
    5b54:	add	x2, x23, x9, lsl #4
    5b58:	ldrh	w4, [x23, x4]
    5b5c:	cmp	w27, w4
    5b60:	b.ne	56f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1af0>  // b.any
    5b64:	str	w5, [x24, #128]
    5b68:	b	4f34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x132c>
    5b6c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5b70:	add	x3, x3, #0x0
    5b74:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5b78:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5b7c:	add	x1, x1, #0x0
    5b80:	add	x0, x0, #0x0
    5b84:	mov	w2, #0x15b                 	// #347
    5b88:	bl	0 <__assert_fail>
    5b8c:	add	w1, w1, w5
    5b90:	cmp	x4, #0x0
    5b94:	and	w9, w2, w1
    5b98:	mov	w7, #0xfffe                	// #65534
    5b9c:	ccmp	w6, w7, #0x0, eq  // eq = none
    5ba0:	add	w5, w5, #0x1
    5ba4:	lsl	x6, x9, #4
    5ba8:	csel	x4, x4, x3, ne  // ne = any
    5bac:	and	w1, w2, w1
    5bb0:	add	x3, x8, x9, lsl #4
    5bb4:	ldrh	w6, [x8, x6]
    5bb8:	cmp	w0, w6
    5bbc:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    5bc0:	b	59f0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1de8>
    5bc4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5bc8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5bcc:	add	x3, x3, #0x0
    5bd0:	b	5b78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f70>
    5bd4:	add	w25, w5, w25
    5bd8:	cmp	x4, #0x0
    5bdc:	and	w8, w1, w25
    5be0:	ccmn	x0, #0x10, #0x0, eq  // eq = none
    5be4:	csel	x4, x4, x2, ne  // ne = any
    5be8:	add	w5, w5, #0x1
    5bec:	lsl	x0, x8, #4
    5bf0:	and	w25, w1, w25
    5bf4:	add	x2, x6, x8, lsl #4
    5bf8:	ldr	x0, [x6, x0]
    5bfc:	cmp	x19, x0
    5c00:	b.eq	48f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcf0>  // b.none
    5c04:	b	5774 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b6c>
    5c08:	add	w1, w5, w1
    5c0c:	cmp	x4, #0x0
    5c10:	and	w9, w2, w1
    5c14:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    5c18:	csel	x4, x4, x3, ne  // ne = any
    5c1c:	add	w5, w5, #0x1
    5c20:	lsl	x6, x9, #4
    5c24:	and	w1, w2, w1
    5c28:	add	x3, x8, x9, lsl #4
    5c2c:	ldr	x6, [x8, x6]
    5c30:	cmp	x0, x6
    5c34:	b.eq	49e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xddc>  // b.none
    5c38:	b	4e08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1200>
    5c3c:	mov	w4, #0x1                   	// #1
    5c40:	mov	x3, #0x0                   	// #0
    5c44:	mov	w12, #0xffff                	// #65535
    5c48:	mov	w11, #0xfffe                	// #65534
    5c4c:	cmp	w8, w12
    5c50:	b.eq	5700 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1af8>  // b.none
    5c54:	add	w0, w4, w0
    5c58:	cmp	x3, #0x0
    5c5c:	and	w10, w9, w0
    5c60:	ccmp	w8, w11, #0x0, eq  // eq = none
    5c64:	csel	x3, x3, x2, ne  // ne = any
    5c68:	add	w4, w4, #0x1
    5c6c:	lsl	x8, x10, #4
    5c70:	and	w0, w9, w0
    5c74:	add	x2, x23, x10, lsl #4
    5c78:	ldrh	w8, [x23, x8]
    5c7c:	cmp	w27, w8
    5c80:	b.ne	5c4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2044>  // b.any
    5c84:	str	w5, [x24, #128]
    5c88:	b	4f34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x132c>
    5c8c:	add	w1, w1, w5
    5c90:	cmp	x4, #0x0
    5c94:	and	w10, w2, w1
    5c98:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    5c9c:	csel	x4, x4, x3, ne  // ne = any
    5ca0:	add	w5, w5, #0x1
    5ca4:	lsl	x8, x10, #4
    5ca8:	and	w1, w2, w1
    5cac:	add	x3, x9, x10, lsl #4
    5cb0:	ldr	x8, [x9, x8]
    5cb4:	cmp	x0, x8
    5cb8:	b.eq	49e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xddc>  // b.none
    5cbc:	b	5320 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1718>
    5cc0:	mov	w3, #0x1                   	// #1
    5cc4:	mov	x2, #0x0                   	// #0
    5cc8:	cmn	x5, #0x8
    5ccc:	b.ne	5d60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2158>  // b.any
    5cd0:	cbz	x2, 4cf4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10ec>
    5cd4:	mov	x0, x2
    5cd8:	ldr	x2, [x2]
    5cdc:	b	4cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10f0>
    5ce0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ce4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ce8:	add	x3, x3, #0x0
    5cec:	b	4c90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1088>
    5cf0:	add	w1, w8, w1
    5cf4:	cmp	x5, #0x0
    5cf8:	and	w11, w3, w1
    5cfc:	mov	w2, #0xfffe                	// #65534
    5d00:	ccmp	w9, w2, #0x0, eq  // eq = none
    5d04:	add	w8, w8, #0x1
    5d08:	lsl	x9, x11, #4
    5d0c:	csel	x5, x5, x4, ne  // ne = any
    5d10:	and	w1, w3, w1
    5d14:	add	x4, x10, x11, lsl #4
    5d18:	ldrh	w9, [x10, x9]
    5d1c:	cmp	w0, w9
    5d20:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    5d24:	b	5028 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1420>
    5d28:	add	w2, w5, w2
    5d2c:	cmp	x3, #0x0
    5d30:	and	w10, w9, w2
    5d34:	ccmn	x8, #0x10, #0x0, eq  // eq = none
    5d38:	csel	x3, x3, x0, ne  // ne = any
    5d3c:	add	w5, w5, #0x1
    5d40:	lsl	x8, x10, #4
    5d44:	and	w2, w9, w2
    5d48:	add	x0, x20, x10, lsl #4
    5d4c:	ldr	x8, [x20, x8]
    5d50:	cmp	x19, x8
    5d54:	b.ne	5694 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a8c>  // b.any
    5d58:	str	w4, [x24, #160]
    5d5c:	b	4d04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10fc>
    5d60:	add	w22, w3, w22
    5d64:	cmp	x2, #0x0
    5d68:	and	w9, w8, w22
    5d6c:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    5d70:	csel	x2, x2, x0, ne  // ne = any
    5d74:	add	w3, w3, #0x1
    5d78:	lsl	x5, x9, #4
    5d7c:	and	w22, w8, w22
    5d80:	add	x0, x20, x9, lsl #4
    5d84:	ldr	x5, [x20, x5]
    5d88:	cmp	x19, x5
    5d8c:	b.ne	5cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20c0>  // b.any
    5d90:	str	w4, [x24, #160]
    5d94:	b	4d04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10fc>
    5d98:	add	w1, w5, w1
    5d9c:	cmp	x4, #0x0
    5da0:	and	w9, w2, w1
    5da4:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    5da8:	csel	x4, x4, x3, ne  // ne = any
    5dac:	add	w5, w5, #0x1
    5db0:	lsl	x6, x9, #4
    5db4:	and	w1, w2, w1
    5db8:	add	x3, x8, x9, lsl #4
    5dbc:	ldr	x6, [x8, x6]
    5dc0:	cmp	x0, x6
    5dc4:	b.eq	49e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xddc>  // b.none
    5dc8:	b	57e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1be0>
    5dcc:	add	w1, w5, w1
    5dd0:	cmp	x4, #0x0
    5dd4:	and	w9, w2, w1
    5dd8:	mov	w7, #0xfffe                	// #65534
    5ddc:	ccmp	w6, w7, #0x0, eq  // eq = none
    5de0:	add	w5, w5, #0x1
    5de4:	lsl	x6, x9, #4
    5de8:	csel	x4, x4, x3, ne  // ne = any
    5dec:	and	w1, w2, w1
    5df0:	add	x3, x8, x9, lsl #4
    5df4:	ldrh	w6, [x8, x6]
    5df8:	cmp	w0, w6
    5dfc:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    5e00:	b	548c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1884>
    5e04:	mov	w5, #0x1                   	// #1
    5e08:	mov	x3, #0x0                   	// #0
    5e0c:	mov	w11, #0xffff                	// #65535
    5e10:	mov	w10, #0xfffe                	// #65534
    5e14:	cmp	w6, w11
    5e18:	b.eq	55cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19c4>  // b.none
    5e1c:	add	w0, w5, w0
    5e20:	cmp	x3, #0x0
    5e24:	and	w9, w1, w0
    5e28:	ccmp	w6, w10, #0x0, eq  // eq = none
    5e2c:	csel	x3, x3, x2, ne  // ne = any
    5e30:	add	w5, w5, #0x1
    5e34:	lsl	x6, x9, #4
    5e38:	and	w0, w1, w0
    5e3c:	add	x2, x8, x9, lsl #4
    5e40:	ldrh	w6, [x8, x6]
    5e44:	cmp	w22, w6
    5e48:	b.ne	5e14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x220c>  // b.any
    5e4c:	str	w4, [x24, #128]
    5e50:	b	4888 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc80>
    5e54:	add	w1, w8, w1
    5e58:	cmp	x5, #0x0
    5e5c:	and	w11, w2, w1
    5e60:	mov	w3, #0xfffe                	// #65534
    5e64:	ccmp	w9, w3, #0x0, eq  // eq = none
    5e68:	add	w8, w8, #0x1
    5e6c:	lsl	x9, x11, #4
    5e70:	csel	x5, x5, x4, ne  // ne = any
    5e74:	and	w1, w2, w1
    5e78:	add	x4, x10, x11, lsl #4
    5e7c:	ldrh	w9, [x10, x9]
    5e80:	cmp	w0, w9
    5e84:	b.eq	4ac0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.none
    5e88:	b	51b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b0>
    5e8c:	mov	w5, #0x1                   	// #1
    5e90:	mov	x4, #0x0                   	// #0
    5e94:	cmn	x6, #0x8
    5e98:	b.eq	577c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b74>  // b.none
    5e9c:	add	w0, w0, w5
    5ea0:	cmp	x4, #0x0
    5ea4:	and	w9, w1, w0
    5ea8:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    5eac:	csel	x4, x4, x2, ne  // ne = any
    5eb0:	add	w5, w5, #0x1
    5eb4:	lsl	x6, x9, #4
    5eb8:	and	w0, w1, w0
    5ebc:	add	x2, x8, x9, lsl #4
    5ec0:	ldr	x6, [x8, x6]
    5ec4:	cmp	x19, x6
    5ec8:	b.ne	5e94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x228c>  // b.any
    5ecc:	str	w3, [x24, #160]
    5ed0:	b	4904 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcfc>
    5ed4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ed8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5edc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ee0:	add	x3, x3, #0x0
    5ee4:	add	x1, x1, #0x0
    5ee8:	add	x0, x0, #0x0
    5eec:	mov	w2, #0x33                  	// #51
    5ef0:	bl	0 <__assert_fail>
    5ef4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ef8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5efc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5f00:	add	x3, x3, #0x0
    5f04:	add	x1, x1, #0x0
    5f08:	add	x0, x0, #0x0
    5f0c:	mov	w2, #0x99                  	// #153
    5f10:	bl	0 <__assert_fail>
    5f14:	mov	x0, #0x0                   	// #0
    5f18:	strh	wzr, [x0]
    5f1c:	brk	#0x3e8
    5f20:	mov	x1, #0x0                   	// #0
    5f24:	str	x0, [x1]
    5f28:	brk	#0x3e8
    5f2c:	nop

0000000000005f30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    5f30:	stp	x29, x30, [sp, #-96]!
    5f34:	mov	x29, sp
    5f38:	stp	x19, x20, [sp, #16]
    5f3c:	mov	x19, x0
    5f40:	ldr	w0, [x0, #136]
    5f44:	stp	x21, x22, [sp, #32]
    5f48:	mov	x20, x1
    5f4c:	ldr	w1, [x1]
    5f50:	stp	x23, x24, [sp, #48]
    5f54:	mov	x24, x8
    5f58:	ldr	x22, [x19, #120]
    5f5c:	cbz	w0, 6028 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xf8>
    5f60:	mov	w2, #0xfffd                	// #65533
    5f64:	and	w23, w1, #0xffff
    5f68:	cmp	w2, w1, uxth
    5f6c:	b.cc	6b50 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc20>  // b.lo, b.ul, b.last
    5f70:	and	w21, w1, #0xffff
    5f74:	mov	w1, #0x25                  	// #37
    5f78:	sub	w2, w0, #0x1
    5f7c:	mul	w1, w21, w1
    5f80:	and	w1, w1, w2
    5f84:	ubfiz	x3, x1, #4, #22
    5f88:	add	x4, x22, x3
    5f8c:	ldrh	w3, [x22, x3]
    5f90:	cmp	w23, w3
    5f94:	b.ne	60e4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b4>  // b.any
    5f98:	stp	x25, x26, [sp, #64]
    5f9c:	stp	x27, x28, [sp, #80]
    5fa0:	ubfiz	x28, x0, #4, #32
    5fa4:	add	x25, x22, x28
    5fa8:	cmp	x4, x25
    5fac:	ldr	x6, [x19, #112]
    5fb0:	b.eq	601c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xec>  // b.none
    5fb4:	cbz	w0, 63a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x470>
    5fb8:	mov	w1, #0xfffd                	// #65533
    5fbc:	cmp	w23, w1
    5fc0:	b.hi	6c04 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcd4>  // b.pmore
    5fc4:	mov	w20, #0x25                  	// #37
    5fc8:	mul	w20, w21, w20
    5fcc:	and	w4, w20, w2
    5fd0:	ubfiz	x1, x4, #4, #22
    5fd4:	add	x5, x22, x1
    5fd8:	ldrh	w1, [x22, x1]
    5fdc:	cmp	w23, w1
    5fe0:	b.ne	6248 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x318>  // b.any
    5fe4:	ldr	x1, [x5, #8]
    5fe8:	ldrb	w0, [x24, #8]
    5fec:	and	w0, w0, #0xfffffffc
    5ff0:	orr	w0, w0, #0x2
    5ff4:	strb	w0, [x24, #8]
    5ff8:	mov	x0, x24
    5ffc:	ldp	x25, x26, [sp, #64]
    6000:	ldp	x27, x28, [sp, #80]
    6004:	str	x1, [x24]
    6008:	ldp	x19, x20, [sp, #16]
    600c:	ldp	x21, x22, [sp, #32]
    6010:	ldp	x23, x24, [sp, #48]
    6014:	ldp	x29, x30, [sp], #96
    6018:	ret
    601c:	ldp	x25, x26, [sp, #64]
    6020:	ldp	x27, x28, [sp, #80]
    6024:	nop
    6028:	ldr	w0, [x19, #168]
    602c:	ldr	x21, [x19, #152]
    6030:	cbz	w0, 60bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x18c>
    6034:	cmn	x20, #0x10
    6038:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    603c:	b.eq	6be0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcb0>  // b.none
    6040:	lsr	w22, w20, #4
    6044:	lsr	w23, w20, #9
    6048:	eor	w1, w22, w23
    604c:	sub	w2, w0, #0x1
    6050:	and	w1, w1, w2
    6054:	lsl	w3, w1, #4
    6058:	add	x4, x21, x3
    605c:	ldr	x3, [x21, x3]
    6060:	cmp	x20, x3
    6064:	b.ne	6210 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2e0>  // b.any
    6068:	stp	x25, x26, [sp, #64]
    606c:	ubfiz	x26, x0, #4, #32
    6070:	add	x25, x21, x26
    6074:	cmp	x25, x4
    6078:	ldr	x5, [x19, #144]
    607c:	b.eq	60b8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x188>  // b.none
    6080:	stp	x27, x28, [sp, #80]
    6084:	cbz	w0, 6120 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1f0>
    6088:	cmn	x20, #0x10
    608c:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    6090:	b.eq	6be8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcb8>  // b.none
    6094:	eor	w27, w22, w23
    6098:	and	w3, w27, w2
    609c:	lsl	w1, w3, #4
    60a0:	add	x4, x21, x1
    60a4:	ldr	x28, [x21, x1]
    60a8:	cmp	x20, x28
    60ac:	b.ne	65e0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6b0>  // b.any
    60b0:	ldr	x1, [x4, #8]
    60b4:	b	5fe8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    60b8:	ldp	x25, x26, [sp, #64]
    60bc:	mov	x1, x20
    60c0:	mov	x0, x19
    60c4:	mov	x8, x24
    60c8:	bl	3c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    60cc:	mov	x0, x24
    60d0:	ldp	x19, x20, [sp, #16]
    60d4:	ldp	x21, x22, [sp, #32]
    60d8:	ldp	x23, x24, [sp, #48]
    60dc:	ldp	x29, x30, [sp], #96
    60e0:	ret
    60e4:	mov	w4, #0x1                   	// #1
    60e8:	mov	w5, #0xffff                	// #65535
    60ec:	cmp	w3, w5
    60f0:	b.eq	6028 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xf8>  // b.none
    60f4:	add	w1, w4, w1
    60f8:	add	w6, w4, #0x1
    60fc:	and	w3, w2, w1
    6100:	and	w1, w2, w1
    6104:	lsl	x3, x3, #4
    6108:	add	x4, x22, x3
    610c:	ldrh	w3, [x22, x3]
    6110:	cmp	w23, w3
    6114:	b.eq	5f98 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x68>  // b.none
    6118:	mov	w4, w6
    611c:	b	60ec <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1bc>
    6120:	add	x5, x5, #0x1
    6124:	mov	w3, #0x0                   	// #0
    6128:	str	x5, [x19, #144]
    612c:	sub	w0, w3, #0x1
    6130:	mov	w1, #0x40                  	// #64
    6134:	orr	x0, x0, x0, lsr #1
    6138:	orr	x0, x0, x0, lsr #2
    613c:	orr	x0, x0, x0, lsr #4
    6140:	orr	x0, x0, x0, lsr #8
    6144:	orr	x0, x0, x0, lsr #16
    6148:	add	x0, x0, #0x1
    614c:	cmp	w0, w1
    6150:	csel	w0, w0, w1, cs  // cs = hs, nlast
    6154:	str	w0, [x19, #168]
    6158:	ubfiz	x0, x0, #4, #32
    615c:	bl	0 <_Znwm>
    6160:	ldr	w1, [x19, #168]
    6164:	stp	x0, xzr, [x19, #152]
    6168:	sub	w2, w1, #0x1
    616c:	and	w2, w2, w1
    6170:	cbz	x21, 6a48 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb18>
    6174:	cbnz	w2, 6d00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdd0>
    6178:	ubfiz	x1, x1, #4, #32
    617c:	mov	x2, #0xfffffffffffffff8    	// #-8
    6180:	add	x1, x0, x1
    6184:	cmp	x0, x1
    6188:	b.eq	619c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x26c>  // b.none
    618c:	nop
    6190:	str	x2, [x0], #16
    6194:	cmp	x1, x0
    6198:	b.ne	6190 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x260>  // b.any
    619c:	mov	x27, x21
    61a0:	b	61b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x280>
    61a4:	add	x27, x27, #0x10
    61a8:	cmp	x27, x25
    61ac:	b.eq	67c0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x890>  // b.none
    61b0:	ldr	x0, [x27]
    61b4:	cmn	x0, #0x8
    61b8:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    61bc:	b.eq	61a4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>  // b.none
    61c0:	ldr	w2, [x19, #168]
    61c4:	cbz	w2, 6d30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe00>
    61c8:	lsr	w1, w0, #9
    61cc:	sub	w2, w2, #0x1
    61d0:	eor	w1, w1, w0, lsr #4
    61d4:	and	w1, w1, w2
    61d8:	ldr	x3, [x19, #152]
    61dc:	lsl	w4, w1, #4
    61e0:	add	x5, x3, x4
    61e4:	ldr	x4, [x3, x4]
    61e8:	cmp	x4, x0
    61ec:	b.ne	6958 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa28>  // b.any
    61f0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    61f4:	add	x3, x3, #0x0
    61f8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    61fc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6200:	add	x1, x1, #0x0
    6204:	add	x0, x0, #0x0
    6208:	mov	w2, #0x17a                 	// #378
    620c:	bl	0 <__assert_fail>
    6210:	mov	w4, #0x1                   	// #1
    6214:	cmn	x3, #0x8
    6218:	b.eq	60bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x18c>  // b.none
    621c:	add	w1, w4, w1
    6220:	add	w5, w4, #0x1
    6224:	and	w3, w2, w1
    6228:	and	w1, w2, w1
    622c:	lsl	x3, x3, #4
    6230:	add	x4, x21, x3
    6234:	ldr	x3, [x21, x3]
    6238:	cmp	x20, x3
    623c:	b.eq	6068 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x138>  // b.none
    6240:	mov	w4, w5
    6244:	b	6214 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2e4>
    6248:	mov	w8, #0x1                   	// #1
    624c:	mov	x3, #0x0                   	// #0
    6250:	mov	w7, #0xffff                	// #65535
    6254:	mov	w9, #0xfffe                	// #65534
    6258:	cmp	w1, w7
    625c:	b.ne	6a10 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xae0>  // b.any
    6260:	ldr	w4, [x19, #128]
    6264:	add	x6, x6, #0x1
    6268:	lsl	w1, w0, #1
    626c:	str	x6, [x19, #112]
    6270:	add	w6, w4, #0x1
    6274:	cmp	x3, #0x0
    6278:	add	w4, w1, w0
    627c:	csel	x3, x3, x5, ne  // ne = any
    6280:	cmp	w4, w6, lsl #2
    6284:	b.ls	63ac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x47c>  // b.plast
    6288:	ldr	w1, [x19, #132]
    628c:	sub	w1, w0, w1
    6290:	sub	w1, w1, w6
    6294:	cmp	w1, w0, lsr #3
    6298:	b.ls	62cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x39c>  // b.plast
    629c:	ldrh	w1, [x3]
    62a0:	str	w6, [x19, #128]
    62a4:	mov	w0, #0xffff                	// #65535
    62a8:	cmp	w1, w0
    62ac:	b.eq	62bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x38c>  // b.none
    62b0:	ldr	w0, [x19, #132]
    62b4:	sub	w0, w0, #0x1
    62b8:	str	w0, [x19, #132]
    62bc:	mov	x1, #0x0                   	// #0
    62c0:	strh	w23, [x3]
    62c4:	str	xzr, [x3, #8]
    62c8:	b	5fe8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    62cc:	mov	w1, w2
    62d0:	lsr	w0, w2, #1
    62d4:	orr	x0, x0, x1
    62d8:	mov	w1, #0x40                  	// #64
    62dc:	orr	x0, x0, x0, lsr #2
    62e0:	orr	x0, x0, x0, lsr #4
    62e4:	orr	x0, x0, x0, lsr #8
    62e8:	orr	x0, x0, x0, lsr #16
    62ec:	add	x0, x0, #0x1
    62f0:	cmp	w0, w1
    62f4:	csel	w0, w0, w1, cs  // cs = hs, nlast
    62f8:	str	w0, [x19, #136]
    62fc:	ubfiz	x0, x0, #4, #32
    6300:	bl	0 <_Znwm>
    6304:	ldr	w1, [x19, #136]
    6308:	stp	x0, xzr, [x19, #120]
    630c:	sub	w2, w1, #0x1
    6310:	and	w2, w2, w1
    6314:	cbz	x22, 69e0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xab0>
    6318:	cbnz	w2, 6d20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdf0>
    631c:	ubfiz	x1, x1, #4, #32
    6320:	mov	w2, #0xffffffff            	// #-1
    6324:	add	x1, x0, x1
    6328:	cmp	x0, x1
    632c:	b.eq	633c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x40c>  // b.none
    6330:	strh	w2, [x0], #16
    6334:	cmp	x1, x0
    6338:	b.ne	6330 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x400>  // b.any
    633c:	mov	x21, x22
    6340:	mov	w27, #0xfffd                	// #65533
    6344:	b	6354 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x424>
    6348:	add	x21, x21, #0x10
    634c:	cmp	x21, x25
    6350:	b.eq	657c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x64c>  // b.none
    6354:	ldrh	w0, [x21]
    6358:	cmp	w0, w27
    635c:	b.hi	6348 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x418>  // b.pmore
    6360:	ldr	w2, [x19, #136]
    6364:	cbz	w2, 6d3c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe0c>
    6368:	mov	w1, #0x25                  	// #37
    636c:	sub	w2, w2, #0x1
    6370:	ldr	x4, [x19, #120]
    6374:	mul	w1, w0, w1
    6378:	and	w1, w1, w2
    637c:	ubfiz	x5, x1, #4, #22
    6380:	add	x6, x4, x5
    6384:	ldrh	w5, [x4, x5]
    6388:	cmp	w0, w5
    638c:	b.ne	68a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x970>  // b.any
    6390:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6394:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6398:	add	x3, x3, #0x0
    639c:	b	61fc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2cc>
    63a0:	add	x6, x6, #0x1
    63a4:	mov	w1, #0x0                   	// #0
    63a8:	str	x6, [x19, #112]
    63ac:	sub	w0, w1, #0x1
    63b0:	mov	w1, #0x40                  	// #64
    63b4:	orr	x0, x0, x0, lsr #1
    63b8:	orr	x0, x0, x0, lsr #2
    63bc:	orr	x0, x0, x0, lsr #4
    63c0:	orr	x0, x0, x0, lsr #8
    63c4:	orr	x0, x0, x0, lsr #16
    63c8:	add	x0, x0, #0x1
    63cc:	cmp	w0, w1
    63d0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    63d4:	str	w0, [x19, #136]
    63d8:	ubfiz	x0, x0, #4, #32
    63dc:	bl	0 <_Znwm>
    63e0:	ldr	w1, [x19, #136]
    63e4:	stp	x0, xzr, [x19, #120]
    63e8:	sub	w2, w1, #0x1
    63ec:	and	w2, w2, w1
    63f0:	cbz	x22, 692c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9fc>
    63f4:	cbnz	w2, 6d20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdf0>
    63f8:	ubfiz	x1, x1, #4, #32
    63fc:	mov	w2, #0xffffffff            	// #-1
    6400:	add	x1, x0, x1
    6404:	cmp	x0, x1
    6408:	b.eq	641c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4ec>  // b.none
    640c:	nop
    6410:	strh	w2, [x0], #16
    6414:	cmp	x1, x0
    6418:	b.ne	6410 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4e0>  // b.any
    641c:	mov	x20, x22
    6420:	mov	w27, #0xfffd                	// #65533
    6424:	b	6434 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x504>
    6428:	add	x20, x20, #0x10
    642c:	cmp	x20, x25
    6430:	b.eq	64fc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5cc>  // b.none
    6434:	ldrh	w0, [x20]
    6438:	cmp	w0, w27
    643c:	b.hi	6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4f8>  // b.pmore
    6440:	ldr	w1, [x19, #136]
    6444:	cbz	w1, 6d3c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe0c>
    6448:	mov	w2, #0x25                  	// #37
    644c:	sub	w1, w1, #0x1
    6450:	ldr	x4, [x19, #120]
    6454:	mul	w2, w0, w2
    6458:	and	w2, w2, w1
    645c:	ubfiz	x5, x2, #4, #22
    6460:	add	x6, x4, x5
    6464:	ldrh	w5, [x4, x5]
    6468:	cmp	w5, w0
    646c:	b.eq	6390 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x460>  // b.none
    6470:	mov	w9, #0x1                   	// #1
    6474:	mov	x7, #0x0                   	// #0
    6478:	mov	w8, #0xffff                	// #65535
    647c:	cmp	w5, w8
    6480:	b.ne	6ae0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xbb0>  // b.any
    6484:	cmp	x7, #0x0
    6488:	ldr	w1, [x19, #128]
    648c:	csel	x7, x7, x6, ne  // ne = any
    6490:	ldr	x2, [x20, #8]
    6494:	add	w1, w1, #0x1
    6498:	strh	w0, [x7]
    649c:	str	xzr, [x20, #8]
    64a0:	str	x2, [x7, #8]
    64a4:	ldr	x26, [x20, #8]
    64a8:	str	w1, [x19, #128]
    64ac:	cbz	x26, 6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4f8>
    64b0:	ldr	x0, [x26, #176]
    64b4:	add	x2, x26, #0xc0
    64b8:	cmp	x0, x2
    64bc:	b.eq	64c4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x594>  // b.none
    64c0:	bl	0 <free>
    64c4:	ldr	x0, [x26, #96]
    64c8:	add	x2, x26, #0x70
    64cc:	cmp	x0, x2
    64d0:	b.eq	64d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5a8>  // b.none
    64d4:	bl	0 <free>
    64d8:	mov	x2, x26
    64dc:	ldr	x0, [x2], #16
    64e0:	cmp	x0, x2
    64e4:	b.eq	64ec <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5bc>  // b.none
    64e8:	bl	0 <free>
    64ec:	mov	x0, x26
    64f0:	mov	x1, #0x150                 	// #336
    64f4:	bl	0 <_ZdlPvm>
    64f8:	b	6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4f8>
    64fc:	mov	x1, x28
    6500:	mov	x0, x22
    6504:	bl	0 <_ZdlPvm>
    6508:	ldr	w1, [x19, #136]
    650c:	ldr	x0, [x19, #120]
    6510:	cbz	w1, 67a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x870>
    6514:	mov	w2, #0xfffd                	// #65533
    6518:	cmp	w23, w2
    651c:	b.hi	6c04 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcd4>  // b.pmore
    6520:	mov	w2, #0x25                  	// #37
    6524:	sub	w1, w1, #0x1
    6528:	ldr	w4, [x19, #128]
    652c:	mul	w2, w21, w2
    6530:	add	w6, w4, #0x1
    6534:	and	w2, w2, w1
    6538:	ubfiz	x5, x2, #4, #22
    653c:	add	x3, x0, x5
    6540:	ldrh	w4, [x0, x5]
    6544:	cmp	w23, w4
    6548:	b.ne	6554 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x624>  // b.any
    654c:	str	w6, [x19, #128]
    6550:	b	62b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    6554:	mov	w7, #0x1                   	// #1
    6558:	mov	x5, #0x0                   	// #0
    655c:	mov	w10, #0xffff                	// #65535
    6560:	mov	w9, #0xfffe                	// #65534
    6564:	cmp	w4, w10
    6568:	b.ne	6c20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcf0>  // b.any
    656c:	cbz	x5, 629c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x36c>
    6570:	ldrh	w1, [x5]
    6574:	mov	x3, x5
    6578:	b	62a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x370>
    657c:	mov	x1, x28
    6580:	mov	x0, x22
    6584:	bl	0 <_ZdlPvm>
    6588:	ldr	w1, [x19, #136]
    658c:	ldr	x0, [x19, #120]
    6590:	cbz	w1, 67a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x870>
    6594:	sub	w1, w1, #0x1
    6598:	ldr	w4, [x19, #128]
    659c:	and	w20, w20, w1
    65a0:	add	w6, w4, #0x1
    65a4:	ubfiz	x2, x20, #4, #22
    65a8:	add	x3, x0, x2
    65ac:	ldrh	w2, [x0, x2]
    65b0:	cmp	w23, w2
    65b4:	b.eq	654c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x61c>  // b.none
    65b8:	mov	w5, #0x1                   	// #1
    65bc:	mov	x4, #0x0                   	// #0
    65c0:	mov	w9, #0xffff                	// #65535
    65c4:	mov	w8, #0xfffe                	// #65534
    65c8:	cmp	w2, w9
    65cc:	b.ne	6c90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd60>  // b.any
    65d0:	cbz	x4, 629c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x36c>
    65d4:	ldrh	w1, [x4]
    65d8:	mov	x3, x4
    65dc:	b	62a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x370>
    65e0:	mov	w1, #0x1                   	// #1
    65e4:	mov	x6, #0x0                   	// #0
    65e8:	cmn	x28, #0x8
    65ec:	b.ne	6aa8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb78>  // b.any
    65f0:	ldr	w1, [x19, #160]
    65f4:	add	x5, x5, #0x1
    65f8:	lsl	w3, w0, #1
    65fc:	str	x5, [x19, #144]
    6600:	add	w5, w1, #0x1
    6604:	cmp	x6, #0x0
    6608:	add	w1, w3, w0
    660c:	csel	x6, x6, x4, ne  // ne = any
    6610:	cmp	w1, w5, lsl #2
    6614:	b.ls	612c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1fc>  // b.plast
    6618:	ldr	w1, [x19, #164]
    661c:	sub	w1, w0, w1
    6620:	sub	w1, w1, w5
    6624:	cmp	w1, w0, lsr #3
    6628:	b.ls	6654 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x724>  // b.plast
    662c:	ldr	x0, [x6]
    6630:	str	w5, [x19, #160]
    6634:	cmn	x0, #0x8
    6638:	b.eq	6648 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x718>  // b.none
    663c:	ldr	w0, [x19, #164]
    6640:	sub	w0, w0, #0x1
    6644:	str	w0, [x19, #164]
    6648:	mov	x1, #0x0                   	// #0
    664c:	stp	x20, xzr, [x6]
    6650:	b	5fe8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6654:	mov	w1, w2
    6658:	lsr	w0, w2, #1
    665c:	orr	x0, x0, x1
    6660:	mov	w1, #0x40                  	// #64
    6664:	orr	x0, x0, x0, lsr #2
    6668:	orr	x0, x0, x0, lsr #4
    666c:	orr	x0, x0, x0, lsr #8
    6670:	orr	x0, x0, x0, lsr #16
    6674:	add	x0, x0, #0x1
    6678:	cmp	w0, w1
    667c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    6680:	str	w0, [x19, #168]
    6684:	ubfiz	x0, x0, #4, #32
    6688:	bl	0 <_Znwm>
    668c:	ldr	w2, [x19, #168]
    6690:	stp	x0, xzr, [x19, #152]
    6694:	sub	w1, w2, #0x1
    6698:	and	w1, w1, w2
    669c:	cbz	x21, 6a78 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb48>
    66a0:	cbnz	w1, 6d00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdd0>
    66a4:	ubfiz	x2, x2, #4, #32
    66a8:	mov	x1, x28
    66ac:	add	x2, x0, x2
    66b0:	cmp	x0, x2
    66b4:	b.eq	66c4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x794>  // b.none
    66b8:	str	x1, [x0], #16
    66bc:	cmp	x2, x0
    66c0:	b.ne	66b8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x788>  // b.any
    66c4:	mov	x22, x21
    66c8:	b	66d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7a8>
    66cc:	add	x22, x22, #0x10
    66d0:	cmp	x25, x22
    66d4:	b.eq	6834 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x904>  // b.none
    66d8:	ldr	x0, [x22]
    66dc:	cmn	x0, #0x10
    66e0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    66e4:	b.eq	66cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x79c>  // b.none
    66e8:	ldr	w2, [x19, #168]
    66ec:	cbz	w2, 6d30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe00>
    66f0:	lsr	w1, w0, #9
    66f4:	sub	w2, w2, #0x1
    66f8:	eor	w1, w1, w0, lsr #4
    66fc:	and	w1, w1, w2
    6700:	ldr	x3, [x19, #152]
    6704:	lsl	w4, w1, #4
    6708:	add	x5, x3, x4
    670c:	ldr	x4, [x3, x4]
    6710:	cmp	x4, x0
    6714:	b.eq	61f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    6718:	mov	w7, #0x1                   	// #1
    671c:	mov	x6, #0x0                   	// #0
    6720:	cmn	x4, #0x8
    6724:	b.ne	6bac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc7c>  // b.any
    6728:	cmp	x6, #0x0
    672c:	ldr	w1, [x19, #160]
    6730:	csel	x6, x6, x5, ne  // ne = any
    6734:	ldr	x2, [x22, #8]
    6738:	add	w1, w1, #0x1
    673c:	str	x0, [x6]
    6740:	str	xzr, [x22, #8]
    6744:	str	x2, [x6, #8]
    6748:	ldr	x23, [x22, #8]
    674c:	str	w1, [x19, #160]
    6750:	cbz	x23, 66cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x79c>
    6754:	ldr	x0, [x23, #176]
    6758:	add	x1, x23, #0xc0
    675c:	cmp	x0, x1
    6760:	b.eq	6768 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x838>  // b.none
    6764:	bl	0 <free>
    6768:	ldr	x0, [x23, #96]
    676c:	add	x1, x23, #0x70
    6770:	cmp	x0, x1
    6774:	b.eq	677c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84c>  // b.none
    6778:	bl	0 <free>
    677c:	mov	x1, x23
    6780:	ldr	x0, [x1], #16
    6784:	cmp	x0, x1
    6788:	b.eq	6790 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x860>  // b.none
    678c:	bl	0 <free>
    6790:	mov	x0, x23
    6794:	mov	x1, #0x150                 	// #336
    6798:	bl	0 <_ZdlPvm>
    679c:	b	66cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x79c>
    67a0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    67a4:	add	x3, x3, #0x0
    67a8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    67ac:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    67b0:	add	x1, x1, #0x0
    67b4:	add	x0, x0, #0x0
    67b8:	mov	w2, #0x22f                 	// #559
    67bc:	bl	0 <__assert_fail>
    67c0:	mov	x1, x26
    67c4:	mov	x0, x21
    67c8:	bl	0 <_ZdlPvm>
    67cc:	ldr	w1, [x19, #168]
    67d0:	ldr	x0, [x19, #152]
    67d4:	cbz	w1, 6890 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x960>
    67d8:	cmn	x20, #0x10
    67dc:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    67e0:	b.eq	6be8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcb8>  // b.none
    67e4:	sub	w1, w1, #0x1
    67e8:	eor	w2, w22, w23
    67ec:	and	w2, w2, w1
    67f0:	ldr	w5, [x19, #160]
    67f4:	lsl	w3, w2, #4
    67f8:	add	w5, w5, #0x1
    67fc:	add	x6, x0, x3
    6800:	ldr	x3, [x0, x3]
    6804:	cmp	x20, x3
    6808:	b.ne	6814 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8e4>  // b.any
    680c:	str	w5, [x19, #160]
    6810:	b	663c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x70c>
    6814:	mov	w7, #0x1                   	// #1
    6818:	mov	x4, #0x0                   	// #0
    681c:	cmn	x3, #0x8
    6820:	b.ne	6c58 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd28>  // b.any
    6824:	cbz	x4, 662c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6fc>
    6828:	mov	x6, x4
    682c:	ldr	x0, [x4]
    6830:	b	6630 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x700>
    6834:	mov	x0, x21
    6838:	mov	x1, x26
    683c:	bl	0 <_ZdlPvm>
    6840:	ldr	w2, [x19, #168]
    6844:	ldr	x0, [x19, #152]
    6848:	cbz	w2, 6890 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x960>
    684c:	sub	w2, w2, #0x1
    6850:	ldr	w1, [x19, #160]
    6854:	and	w27, w27, w2
    6858:	add	w5, w1, #0x1
    685c:	lsl	w1, w27, #4
    6860:	add	x6, x0, x1
    6864:	ldr	x1, [x0, x1]
    6868:	cmp	x20, x1
    686c:	b.eq	680c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8dc>  // b.none
    6870:	mov	w4, #0x1                   	// #1
    6874:	mov	x3, #0x0                   	// #0
    6878:	cmn	x1, #0x8
    687c:	b.ne	6cc8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd98>  // b.any
    6880:	cbz	x3, 662c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6fc>
    6884:	mov	x6, x3
    6888:	ldr	x0, [x3]
    688c:	b	6630 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x700>
    6890:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6894:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6898:	add	x3, x3, #0x0
    689c:	b	67ac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x87c>
    68a0:	mov	w9, #0x1                   	// #1
    68a4:	mov	x7, #0x0                   	// #0
    68a8:	mov	w8, #0xffff                	// #65535
    68ac:	cmp	w5, w8
    68b0:	b.ne	6b18 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xbe8>  // b.any
    68b4:	cmp	x7, #0x0
    68b8:	ldr	w1, [x19, #128]
    68bc:	csel	x7, x7, x6, ne  // ne = any
    68c0:	ldr	x2, [x21, #8]
    68c4:	add	w1, w1, #0x1
    68c8:	strh	w0, [x7]
    68cc:	str	xzr, [x21, #8]
    68d0:	str	x2, [x7, #8]
    68d4:	ldr	x26, [x21, #8]
    68d8:	str	w1, [x19, #128]
    68dc:	cbz	x26, 6348 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x418>
    68e0:	ldr	x0, [x26, #176]
    68e4:	add	x2, x26, #0xc0
    68e8:	cmp	x0, x2
    68ec:	b.eq	68f4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9c4>  // b.none
    68f0:	bl	0 <free>
    68f4:	ldr	x0, [x26, #96]
    68f8:	add	x2, x26, #0x70
    68fc:	cmp	x0, x2
    6900:	b.eq	6908 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9d8>  // b.none
    6904:	bl	0 <free>
    6908:	mov	x2, x26
    690c:	ldr	x0, [x2], #16
    6910:	cmp	x0, x2
    6914:	b.eq	691c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9ec>  // b.none
    6918:	bl	0 <free>
    691c:	mov	x0, x26
    6920:	mov	x1, #0x150                 	// #336
    6924:	bl	0 <_ZdlPvm>
    6928:	b	6348 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x418>
    692c:	cbnz	w2, 6d20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdf0>
    6930:	ubfiz	x3, x1, #4, #32
    6934:	add	x3, x0, x3
    6938:	cmp	x0, x3
    693c:	b.eq	6510 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5e0>  // b.none
    6940:	mov	x2, x0
    6944:	mov	w4, #0xffffffff            	// #-1
    6948:	strh	w4, [x2], #16
    694c:	cmp	x3, x2
    6950:	b.ne	6948 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa18>  // b.any
    6954:	b	6510 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5e0>
    6958:	mov	w7, #0x1                   	// #1
    695c:	mov	x6, #0x0                   	// #0
    6960:	cmn	x4, #0x8
    6964:	b.ne	6b78 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc48>  // b.any
    6968:	cmp	x6, #0x0
    696c:	ldr	w1, [x19, #160]
    6970:	csel	x6, x6, x5, ne  // ne = any
    6974:	ldr	x2, [x27, #8]
    6978:	add	w1, w1, #0x1
    697c:	str	x0, [x6]
    6980:	str	xzr, [x27, #8]
    6984:	str	x2, [x6, #8]
    6988:	ldr	x28, [x27, #8]
    698c:	str	w1, [x19, #160]
    6990:	cbz	x28, 61a4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>
    6994:	ldr	x0, [x28, #176]
    6998:	add	x1, x28, #0xc0
    699c:	cmp	x0, x1
    69a0:	b.eq	69a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa78>  // b.none
    69a4:	bl	0 <free>
    69a8:	ldr	x0, [x28, #96]
    69ac:	add	x1, x28, #0x70
    69b0:	cmp	x0, x1
    69b4:	b.eq	69bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa8c>  // b.none
    69b8:	bl	0 <free>
    69bc:	mov	x1, x28
    69c0:	ldr	x0, [x1], #16
    69c4:	cmp	x0, x1
    69c8:	b.eq	69d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xaa0>  // b.none
    69cc:	bl	0 <free>
    69d0:	mov	x0, x28
    69d4:	mov	x1, #0x150                 	// #336
    69d8:	bl	0 <_ZdlPvm>
    69dc:	b	61a4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>
    69e0:	cbnz	w2, 6d20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdf0>
    69e4:	ubfiz	x3, x1, #4, #32
    69e8:	add	x3, x0, x3
    69ec:	cmp	x0, x3
    69f0:	b.eq	6590 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x660>  // b.none
    69f4:	mov	x2, x0
    69f8:	mov	w4, #0xffffffff            	// #-1
    69fc:	nop
    6a00:	strh	w4, [x2], #16
    6a04:	cmp	x3, x2
    6a08:	b.ne	6a00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xad0>  // b.any
    6a0c:	b	6590 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x660>
    6a10:	add	w4, w8, w4
    6a14:	cmp	x3, #0x0
    6a18:	and	w10, w2, w4
    6a1c:	ccmp	w1, w9, #0x0, eq  // eq = none
    6a20:	csel	x5, x5, x3, eq  // eq = none
    6a24:	add	w8, w8, #0x1
    6a28:	lsl	x1, x10, #4
    6a2c:	and	w4, w2, w4
    6a30:	add	x10, x22, x1
    6a34:	ldrh	w1, [x22, x1]
    6a38:	cmp	w23, w1
    6a3c:	b.ne	6bf8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcc8>  // b.any
    6a40:	ldr	x1, [x10, #8]
    6a44:	b	5fe8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6a48:	cbnz	w2, 6d00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdd0>
    6a4c:	ubfiz	x3, x1, #4, #32
    6a50:	add	x3, x0, x3
    6a54:	cmp	x0, x3
    6a58:	b.eq	67d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8a4>  // b.none
    6a5c:	mov	x2, x0
    6a60:	mov	x4, #0xfffffffffffffff8    	// #-8
    6a64:	nop
    6a68:	str	x4, [x2], #16
    6a6c:	cmp	x3, x2
    6a70:	b.ne	6a68 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb38>  // b.any
    6a74:	b	67d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8a4>
    6a78:	cbnz	w1, 6d00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdd0>
    6a7c:	ubfiz	x4, x2, #4, #32
    6a80:	add	x4, x0, x4
    6a84:	cmp	x0, x4
    6a88:	b.eq	6848 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x918>  // b.none
    6a8c:	mov	x1, x28
    6a90:	mov	x3, x0
    6a94:	nop
    6a98:	str	x1, [x3], #16
    6a9c:	cmp	x4, x3
    6aa0:	b.ne	6a98 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb68>  // b.any
    6aa4:	b	6848 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x918>
    6aa8:	add	w3, w1, w3
    6aac:	cmp	x6, #0x0
    6ab0:	and	w7, w2, w3
    6ab4:	ccmn	x28, #0x10, #0x0, eq  // eq = none
    6ab8:	csel	x4, x4, x6, eq  // eq = none
    6abc:	add	w1, w1, #0x1
    6ac0:	lsl	x6, x7, #4
    6ac4:	and	w3, w2, w3
    6ac8:	add	x7, x21, x6
    6acc:	ldr	x28, [x21, x6]
    6ad0:	cmp	x20, x28
    6ad4:	b.ne	6c14 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xce4>  // b.any
    6ad8:	ldr	x1, [x7, #8]
    6adc:	b	5fe8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6ae0:	add	w2, w2, w9
    6ae4:	cmp	x7, #0x0
    6ae8:	and	w10, w1, w2
    6aec:	mov	w3, #0xfffe                	// #65534
    6af0:	ccmp	w5, w3, #0x0, eq  // eq = none
    6af4:	add	w9, w9, #0x1
    6af8:	lsl	x5, x10, #4
    6afc:	csel	x7, x7, x6, ne  // ne = any
    6b00:	and	w2, w1, w2
    6b04:	add	x6, x4, x10, lsl #4
    6b08:	ldrh	w5, [x4, x5]
    6b0c:	cmp	w0, w5
    6b10:	b.eq	6390 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x460>  // b.none
    6b14:	b	647c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x54c>
    6b18:	add	w1, w1, w9
    6b1c:	cmp	x7, #0x0
    6b20:	and	w10, w2, w1
    6b24:	mov	w3, #0xfffe                	// #65534
    6b28:	ccmp	w5, w3, #0x0, eq  // eq = none
    6b2c:	add	w9, w9, #0x1
    6b30:	lsl	x5, x10, #4
    6b34:	csel	x7, x7, x6, ne  // ne = any
    6b38:	and	w1, w2, w1
    6b3c:	add	x6, x4, x10, lsl #4
    6b40:	ldrh	w5, [x4, x5]
    6b44:	cmp	w0, w5
    6b48:	b.eq	6390 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x460>  // b.none
    6b4c:	b	68ac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x97c>
    6b50:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6b54:	add	x3, x3, #0x0
    6b58:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6b5c:	stp	x25, x26, [sp, #64]
    6b60:	stp	x27, x28, [sp, #80]
    6b64:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6b68:	add	x1, x1, #0x0
    6b6c:	add	x0, x0, #0x0
    6b70:	mov	w2, #0x250                 	// #592
    6b74:	bl	0 <__assert_fail>
    6b78:	add	w1, w1, w7
    6b7c:	cmp	x6, #0x0
    6b80:	and	w8, w2, w1
    6b84:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    6b88:	csel	x6, x6, x5, ne  // ne = any
    6b8c:	add	w7, w7, #0x1
    6b90:	lsl	x4, x8, #4
    6b94:	and	w1, w2, w1
    6b98:	add	x5, x3, x8, lsl #4
    6b9c:	ldr	x4, [x3, x4]
    6ba0:	cmp	x0, x4
    6ba4:	b.eq	61f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    6ba8:	b	6960 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa30>
    6bac:	add	w1, w7, w1
    6bb0:	cmp	x6, #0x0
    6bb4:	and	w8, w2, w1
    6bb8:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    6bbc:	csel	x6, x6, x5, ne  // ne = any
    6bc0:	add	w7, w7, #0x1
    6bc4:	lsl	x4, x8, #4
    6bc8:	and	w1, w2, w1
    6bcc:	add	x5, x3, x8, lsl #4
    6bd0:	ldr	x4, [x3, x4]
    6bd4:	cmp	x0, x4
    6bd8:	b.eq	61f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    6bdc:	b	6720 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7f0>
    6be0:	stp	x25, x26, [sp, #64]
    6be4:	stp	x27, x28, [sp, #80]
    6be8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6bec:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6bf0:	add	x3, x3, #0x0
    6bf4:	b	6b64 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc34>
    6bf8:	mov	x3, x5
    6bfc:	mov	x5, x10
    6c00:	b	6258 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x328>
    6c04:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6c08:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6c0c:	add	x3, x3, #0x0
    6c10:	b	6b64 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc34>
    6c14:	mov	x6, x4
    6c18:	mov	x4, x7
    6c1c:	b	65e8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6b8>
    6c20:	add	w2, w2, w7
    6c24:	cmp	x5, #0x0
    6c28:	and	w8, w1, w2
    6c2c:	ccmp	w4, w9, #0x0, eq  // eq = none
    6c30:	csel	x5, x5, x3, ne  // ne = any
    6c34:	add	w7, w7, #0x1
    6c38:	lsl	x4, x8, #4
    6c3c:	and	w2, w1, w2
    6c40:	add	x3, x0, x8, lsl #4
    6c44:	ldrh	w4, [x0, x4]
    6c48:	cmp	w23, w4
    6c4c:	b.ne	6564 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x634>  // b.any
    6c50:	str	w6, [x19, #128]
    6c54:	b	62b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    6c58:	add	w2, w7, w2
    6c5c:	cmp	x4, #0x0
    6c60:	and	w8, w1, w2
    6c64:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    6c68:	csel	x4, x4, x6, ne  // ne = any
    6c6c:	add	w7, w7, #0x1
    6c70:	lsl	x3, x8, #4
    6c74:	and	w2, w1, w2
    6c78:	add	x6, x0, x8, lsl #4
    6c7c:	ldr	x3, [x0, x3]
    6c80:	cmp	x20, x3
    6c84:	b.ne	681c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8ec>  // b.any
    6c88:	str	w5, [x19, #160]
    6c8c:	b	663c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x70c>
    6c90:	add	w20, w5, w20
    6c94:	cmp	x4, #0x0
    6c98:	and	w7, w1, w20
    6c9c:	ccmp	w2, w8, #0x0, eq  // eq = none
    6ca0:	csel	x4, x4, x3, ne  // ne = any
    6ca4:	add	w5, w5, #0x1
    6ca8:	lsl	x2, x7, #4
    6cac:	and	w20, w1, w20
    6cb0:	add	x3, x0, x7, lsl #4
    6cb4:	ldrh	w2, [x0, x2]
    6cb8:	cmp	w23, w2
    6cbc:	b.ne	65c8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x698>  // b.any
    6cc0:	str	w6, [x19, #128]
    6cc4:	b	62b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    6cc8:	add	w27, w4, w27
    6ccc:	cmp	x3, #0x0
    6cd0:	and	w7, w2, w27
    6cd4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    6cd8:	csel	x3, x3, x6, ne  // ne = any
    6cdc:	add	w4, w4, #0x1
    6ce0:	lsl	x1, x7, #4
    6ce4:	and	w27, w2, w27
    6ce8:	add	x6, x0, x7, lsl #4
    6cec:	ldr	x1, [x0, x1]
    6cf0:	cmp	x20, x1
    6cf4:	b.ne	6878 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x948>  // b.any
    6cf8:	str	w5, [x19, #160]
    6cfc:	b	663c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x70c>
    6d00:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d04:	add	x3, x3, #0x0
    6d08:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d0c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d10:	add	x1, x1, #0x0
    6d14:	add	x0, x0, #0x0
    6d18:	mov	w2, #0x15b                 	// #347
    6d1c:	bl	0 <__assert_fail>
    6d20:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d24:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d28:	add	x3, x3, #0x0
    6d2c:	b	6d0c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xddc>
    6d30:	mov	x1, #0x0                   	// #0
    6d34:	str	x0, [x1]
    6d38:	brk	#0x3e8
    6d3c:	mov	x0, #0x0                   	// #0
    6d40:	strh	wzr, [x0]
    6d44:	brk	#0x3e8

0000000000006d48 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    6d48:	stp	x29, x30, [sp, #-224]!
    6d4c:	add	x2, sp, #0xb0
    6d50:	mov	x29, sp
    6d54:	stp	x19, x20, [sp, #16]
    6d58:	mov	x19, x8
    6d5c:	mov	x8, x2
    6d60:	stp	x23, x24, [sp, #48]
    6d64:	mov	x24, x1
    6d68:	stp	x2, x0, [sp, #120]
    6d6c:	bl	5f30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    6d70:	ldrb	w0, [sp, #184]
    6d74:	and	w20, w0, #0x1
    6d78:	bfi	w0, w20, #1, #1
    6d7c:	strb	w0, [sp, #184]
    6d80:	cbz	w20, 6dc8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x80>
    6d84:	ldrb	w2, [x19, #8]
    6d88:	and	w0, w0, #0xfffffffd
    6d8c:	ldr	x1, [sp, #176]
    6d90:	orr	w2, w2, #0x3
    6d94:	strb	w2, [x19, #8]
    6d98:	str	xzr, [sp, #176]
    6d9c:	ands	x1, x1, #0xfffffffffffffffe
    6da0:	strb	w0, [sp, #184]
    6da4:	b.eq	74e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7a0>  // b.none
    6da8:	ldr	x0, [sp, #120]
    6dac:	str	x1, [x19]
    6db0:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6db4:	mov	x0, x19
    6db8:	ldp	x19, x20, [sp, #16]
    6dbc:	ldp	x23, x24, [sp, #48]
    6dc0:	ldp	x29, x30, [sp], #224
    6dc4:	ret
    6dc8:	mov	x0, #0x350                 	// #848
    6dcc:	stp	x21, x22, [sp, #32]
    6dd0:	stp	x25, x26, [sp, #64]
    6dd4:	stp	x27, x28, [sp, #80]
    6dd8:	str	wzr, [sp, #96]
    6ddc:	ldr	x26, [sp, #176]
    6de0:	bl	0 <_Znwm>
    6de4:	ldr	x6, [sp, #128]
    6de8:	mov	x25, x0
    6dec:	add	x8, x0, #0x200
    6df0:	strb	wzr, [x0, #8]
    6df4:	add	x2, x0, #0x20
    6df8:	add	x4, x0, #0x250
    6dfc:	mov	x1, #0x400000000           	// #17179869184
    6e00:	str	x26, [x25]
    6e04:	stp	x2, x1, [x25, #16]
    6e08:	mov	x3, #0xfffffe0000000000    	// #-2199023255552
    6e0c:	mov	w5, #0x1                   	// #1
    6e10:	ldr	x0, [x6, #24]
    6e14:	str	x4, [x8, #64]
    6e18:	stp	x2, x4, [sp, #144]
    6e1c:	ldr	x2, [x26, #288]
    6e20:	str	xzr, [sp, #192]
    6e24:	str	w5, [sp, #200]
    6e28:	str	x1, [x25, #584]
    6e2c:	str	x3, [x25, #784]
    6e30:	str	xzr, [x25, #792]
    6e34:	str	x2, [x25, #800]
    6e38:	str	wzr, [x25, #808]
    6e3c:	strh	wzr, [x25, #812]
    6e40:	str	xzr, [x25, #816]
    6e44:	strh	wzr, [x25, #824]
    6e48:	str	wzr, [x25, #828]
    6e4c:	str	xzr, [x25, #832]
    6e50:	strb	wzr, [x25, #840]
    6e54:	cbz	x0, 6edc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x194>
    6e58:	ldr	x3, [x6]
    6e5c:	adrp	x22, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6e60:	ldr	x1, [x0]
    6e64:	add	x2, x22, #0x0
    6e68:	ldr	x3, [x3, #152]
    6e6c:	ldr	x5, [x1, #80]
    6e70:	ldr	w21, [x3, #28]
    6e74:	cmp	x5, x2
    6e78:	b.ne	74b0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x768>  // b.any
    6e7c:	ldr	x5, [x1, #88]
    6e80:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6e84:	add	x2, x2, #0x0
    6e88:	cmp	x5, x2
    6e8c:	b.ne	7100 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b8>  // b.any
    6e90:	ldr	x5, [x1, #80]
    6e94:	str	wzr, [sp, #96]
    6e98:	add	x22, x22, #0x0
    6e9c:	cmp	x5, x22
    6ea0:	b.ne	7100 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b8>  // b.any
    6ea4:	ldr	x5, [x1, #96]
    6ea8:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6eac:	add	x1, x2, #0x0
    6eb0:	cmp	x5, x1
    6eb4:	b.eq	6edc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x194>  // b.none
    6eb8:	str	x8, [sp, #104]
    6ebc:	mov	w2, w21
    6ec0:	mov	x1, x24
    6ec4:	blr	x5
    6ec8:	tst	w0, #0xff
    6ecc:	ldr	x8, [sp, #104]
    6ed0:	b.eq	6edc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x194>  // b.none
    6ed4:	mov	w0, #0x1                   	// #1
    6ed8:	strb	w0, [x25, #8]
    6edc:	ldr	x0, [x26, #96]
    6ee0:	ldr	w5, [x26, #104]
    6ee4:	mov	x27, x0
    6ee8:	add	x5, x0, x5, lsl #4
    6eec:	cmp	x5, x0
    6ef0:	b.eq	6ffc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2b4>  // b.none
    6ef4:	add	x0, sp, #0xc0
    6ef8:	mov	w11, #0x30                  	// #48
    6efc:	mov	x22, #0xfffffe0000000000    	// #-2199023255552
    6f00:	mov	w23, #0x1                   	// #1
    6f04:	str	x0, [sp, #136]
    6f08:	ldr	w2, [x27]
    6f0c:	tbnz	w2, #31, 7080 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x338>
    6f10:	ldr	w0, [x24, #24]
    6f14:	cmp	w2, w0
    6f18:	b.cs	753c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7f4>  // b.hs, b.nlast
    6f1c:	ldr	x0, [x24, #16]
    6f20:	sbfiz	x2, x2, #4, #32
    6f24:	add	x1, x0, x2
    6f28:	ldrb	w0, [x0, x2]
    6f2c:	cmp	w0, #0x1
    6f30:	b.ne	6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>  // b.any
    6f34:	ldrh	w28, [x1, #8]
    6f38:	cbz	w28, 6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>
    6f3c:	ldr	w0, [x25, #584]
    6f40:	ldr	w1, [x25, #588]
    6f44:	cmp	w0, w1
    6f48:	b.cs	70c4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x37c>  // b.hs, b.nlast
    6f4c:	ldr	x2, [x25, #576]
    6f50:	umull	x1, w0, w11
    6f54:	add	x0, x2, x1
    6f58:	str	x27, [x2, x1]
    6f5c:	str	wzr, [x0, #12]
    6f60:	stp	x22, xzr, [x0, #16]
    6f64:	str	wzr, [x0, #36]
    6f68:	strh	w28, [x0, #8]
    6f6c:	ldr	w1, [x25, #584]
    6f70:	ldr	w2, [x25, #588]
    6f74:	mov	w28, w1
    6f78:	strh	wzr, [x0, #32]
    6f7c:	strh	w23, [x0, #40]
    6f80:	add	x28, x28, #0x1
    6f84:	strb	wzr, [x0, #42]
    6f88:	cmp	x28, x2
    6f8c:	b.hi	751c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7d4>  // b.pmore
    6f90:	add	w0, w1, #0x1
    6f94:	str	w0, [x8, #72]
    6f98:	cbz	w0, 75bc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x874>
    6f9c:	cbz	w20, 6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>
    6fa0:	ldr	w21, [sp, #200]
    6fa4:	cmp	w21, #0x40
    6fa8:	b.ls	70b4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x36c>  // b.plast
    6fac:	ldr	x0, [sp, #136]
    6fb0:	stp	x5, x8, [sp, #104]
    6fb4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    6fb8:	cmp	w0, w21
    6fbc:	ldp	x5, x8, [sp, #104]
    6fc0:	cset	w2, eq  // eq = none
    6fc4:	mov	w11, #0x30                  	// #48
    6fc8:	add	x28, x28, x28, lsl #1
    6fcc:	ldr	x0, [x25, #576]
    6fd0:	lsl	x28, x28, #4
    6fd4:	sub	x28, x28, #0x30
    6fd8:	add	x28, x0, x28
    6fdc:	cbz	w2, 7088 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x340>
    6fe0:	ldr	w0, [x27]
    6fe4:	tbnz	w0, #31, 6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>
    6fe8:	mov	w0, #0x1                   	// #1
    6fec:	strb	w0, [x28, #42]
    6ff0:	add	x27, x27, #0x10
    6ff4:	cmp	x5, x27
    6ff8:	b.ne	6f08 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c0>  // b.any
    6ffc:	ldr	w0, [x26, #8]
    7000:	cbnz	w0, 7134 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3ec>
    7004:	ldrb	w0, [x19, #8]
    7008:	str	x25, [x19]
    700c:	and	w0, w0, #0xfffffffc
    7010:	orr	w0, w0, #0x2
    7014:	strb	w0, [x19, #8]
    7018:	ldr	w0, [sp, #200]
    701c:	cmp	w0, #0x40
    7020:	b.ls	7058 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x310>  // b.plast
    7024:	ldr	x0, [sp, #192]
    7028:	cbz	x0, 7058 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x310>
    702c:	bl	0 <_ZdaPv>
    7030:	ldr	x0, [sp, #120]
    7034:	ldp	x21, x22, [sp, #32]
    7038:	ldp	x25, x26, [sp, #64]
    703c:	ldp	x27, x28, [sp, #80]
    7040:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7044:	mov	x0, x19
    7048:	ldp	x19, x20, [sp, #16]
    704c:	ldp	x23, x24, [sp, #48]
    7050:	ldp	x29, x30, [sp], #224
    7054:	ret
    7058:	ldr	x0, [sp, #120]
    705c:	ldp	x21, x22, [sp, #32]
    7060:	ldp	x25, x26, [sp, #64]
    7064:	ldp	x27, x28, [sp, #80]
    7068:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    706c:	mov	x0, x19
    7070:	ldp	x19, x20, [sp, #16]
    7074:	ldp	x23, x24, [sp, #48]
    7078:	ldp	x29, x30, [sp], #224
    707c:	ret
    7080:	ldrh	w28, [x27, #8]
    7084:	b	6f38 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1f0>
    7088:	ldr	w0, [x27, #4]
    708c:	cmp	w0, w21
    7090:	b.cs	6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>  // b.hs, b.nlast
    7094:	mov	x1, #0x1                   	// #1
    7098:	cmp	w21, #0x40
    709c:	lsl	x2, x1, x0
    70a0:	ldr	x1, [sp, #192]
    70a4:	b.hi	70ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3a4>  // b.pmore
    70a8:	tst	x2, x1
    70ac:	b.eq	6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>  // b.none
    70b0:	b	6fe8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a0>
    70b4:	ldr	x0, [sp, #192]
    70b8:	cmp	x0, #0x0
    70bc:	cset	w2, eq  // eq = none
    70c0:	b	6fc8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x280>
    70c4:	ldr	x1, [sp, #152]
    70c8:	add	x0, x25, #0x240
    70cc:	mov	x3, #0x30                  	// #48
    70d0:	mov	x2, #0x0                   	// #0
    70d4:	stp	x5, x8, [sp, #104]
    70d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    70dc:	ldr	w0, [x25, #584]
    70e0:	mov	w11, #0x30                  	// #48
    70e4:	ldp	x5, x8, [sp, #104]
    70e8:	b	6f4c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x204>
    70ec:	lsr	w0, w0, #6
    70f0:	ldr	x1, [x1, x0, lsl #3]
    70f4:	tst	x2, x1
    70f8:	b.eq	6ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a8>  // b.none
    70fc:	b	6fe8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2a0>
    7100:	str	x8, [sp, #96]
    7104:	mov	x1, x24
    7108:	mov	w3, w21
    710c:	add	x2, sp, #0xc0
    7110:	blr	x5
    7114:	and	w7, w0, #0xff
    7118:	ldr	x0, [sp, #128]
    711c:	mov	w20, w7
    7120:	ldr	x8, [sp, #96]
    7124:	ldr	x0, [x0, #24]
    7128:	ldr	x1, [x0]
    712c:	str	wzr, [sp, #96]
    7130:	b	6ea4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x15c>
    7134:	str	w0, [sp, #216]
    7138:	cmp	w0, #0x40
    713c:	b.hi	749c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x754>  // b.pmore
    7140:	str	xzr, [sp, #208]
    7144:	ldr	x1, [sp, #128]
    7148:	ldr	x0, [x1, #24]
    714c:	cbz	x0, 7168 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x420>
    7150:	ldr	x2, [x0]
    7154:	add	x3, sp, #0xd0
    7158:	ldr	x1, [x1, #16]
    715c:	ldr	x5, [x2, #72]
    7160:	mov	x2, x24
    7164:	blr	x5
    7168:	ldr	w20, [x26, #8]
    716c:	mov	w1, #0x14                  	// #20
    7170:	ldr	x0, [x26]
    7174:	mov	w26, #0x0                   	// #0
    7178:	mov	x27, x0
    717c:	umaddl	x20, w20, w1, x0
    7180:	cmp	x0, x20
    7184:	b.eq	746c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x724>  // b.none
    7188:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    718c:	add	x0, x0, #0x0
    7190:	str	x0, [sp, #136]
    7194:	b	725c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x514>
    7198:	cbz	w23, 724c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x504>
    719c:	ldr	w0, [sp, #216]
    71a0:	cmp	w0, w26
    71a4:	b.ls	757c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x834>  // b.plast
    71a8:	cmp	w0, #0x40
    71ac:	mov	x0, #0x1                   	// #1
    71b0:	lsl	x1, x0, x26
    71b4:	ldr	x0, [sp, #208]
    71b8:	b.ls	71c4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x47c>  // b.plast
    71bc:	lsr	w2, w26, #6
    71c0:	ldr	x0, [x0, x2, lsl #3]
    71c4:	tst	x1, x0
    71c8:	ldp	w3, w0, [x25, #24]
    71cc:	cset	w28, ne  // ne = any
    71d0:	cmp	w3, w0
    71d4:	b.cs	72c4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x57c>  // b.hs, b.nlast
    71d8:	ldr	x21, [x25, #16]
    71dc:	mov	w0, #0x88                  	// #136
    71e0:	mov	w1, #0xfffffe00            	// #-512
    71e4:	ldrb	w4, [sp, #96]
    71e8:	umull	x3, w3, w0
    71ec:	mov	x0, #0x400000000           	// #17179869184
    71f0:	add	x2, x21, x3
    71f4:	add	x5, x2, #0x48
    71f8:	str	x27, [x21, x3]
    71fc:	str	w1, [x2, #8]
    7200:	str	wzr, [x2, #16]
    7204:	str	xzr, [x2, #40]
    7208:	str	wzr, [x2, #52]
    720c:	str	x0, [x2, #64]
    7210:	strh	w23, [x2, #12]
    7214:	ldp	w0, w3, [x25, #24]
    7218:	strb	w28, [x2, #20]
    721c:	strb	w4, [x2, #21]
    7220:	mov	w1, w0
    7224:	strb	wzr, [x2, #22]
    7228:	stp	xzr, xzr, [x2, #24]
    722c:	add	x1, x1, #0x1
    7230:	cmp	x1, x3
    7234:	strh	wzr, [x2, #48]
    7238:	str	x5, [x2, #56]
    723c:	b.hi	751c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7d4>  // b.pmore
    7240:	add	w0, w0, #0x1
    7244:	str	w0, [x25, #24]
    7248:	cbz	w0, 755c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x814>
    724c:	add	x27, x27, #0x14
    7250:	add	w26, w26, #0x1
    7254:	cmp	x20, x27
    7258:	b.eq	746c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x724>  // b.none
    725c:	ldr	w0, [x27]
    7260:	tbnz	w0, #31, 72bc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x574>
    7264:	ldr	w2, [x24, #24]
    7268:	sxtw	x1, w0
    726c:	cmp	x2, w0, sxtw
    7270:	b.ls	753c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7f4>  // b.plast
    7274:	ldr	x2, [x24, #16]
    7278:	lsl	x0, x1, #4
    727c:	add	x1, x2, x0
    7280:	ldrb	w0, [x2, x0]
    7284:	cmp	w0, #0x1
    7288:	b.ne	759c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x854>  // b.any
    728c:	ldrh	w23, [x1, #8]
    7290:	ldrb	w0, [x27, #16]
    7294:	cbnz	w0, 7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x450>
    7298:	cbnz	w23, 719c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x454>
    729c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    72a0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    72a4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    72a8:	add	x3, x3, #0x0
    72ac:	add	x1, x1, #0x0
    72b0:	add	x0, x0, #0x0
    72b4:	mov	w2, #0x2bb                 	// #699
    72b8:	bl	0 <__assert_fail>
    72bc:	ldrh	w23, [x27, #8]
    72c0:	b	7290 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x548>
    72c4:	mov	w1, w0
    72c8:	mov	x0, #0xffffffff            	// #4294967295
    72cc:	add	x1, x1, #0x2
    72d0:	orr	x1, x1, x1, lsr #1
    72d4:	orr	x1, x1, x1, lsr #2
    72d8:	orr	x1, x1, x1, lsr #4
    72dc:	orr	x1, x1, x1, lsr #8
    72e0:	orr	x2, x1, x1, lsr #16
    72e4:	orr	x1, x2, x1, lsr #32
    72e8:	add	x1, x1, #0x1
    72ec:	cmp	x1, x0
    72f0:	b.hi	7454 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x70c>  // b.pmore
    72f4:	add	x0, x1, x1, lsl #4
    72f8:	str	w1, [sp, #128]
    72fc:	lsl	x0, x0, #3
    7300:	str	w3, [sp, #104]
    7304:	str	x1, [sp, #168]
    7308:	bl	0 <malloc>
    730c:	ldr	w3, [sp, #104]
    7310:	mov	x21, x0
    7314:	cbz	x0, 75cc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x884>
    7318:	ldr	x0, [x25, #16]
    731c:	mov	w1, #0x88                  	// #136
    7320:	umaddl	x22, w3, w1, x0
    7324:	cmp	x0, x22
    7328:	b.eq	742c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6e4>  // b.none
    732c:	mov	x3, x0
    7330:	mov	x2, x21
    7334:	mov	w12, #0x4                   	// #4
    7338:	b	734c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x604>
    733c:	add	x3, x3, #0x88
    7340:	add	x2, x2, #0x88
    7344:	cmp	x22, x3
    7348:	b.eq	73e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6a0>  // b.none
    734c:	ldr	w1, [x3, #8]
    7350:	add	x0, x2, #0x48
    7354:	ldrb	w15, [x3, #20]
    7358:	ldrh	w13, [x3, #12]
    735c:	ldr	x14, [x3]
    7360:	str	w1, [x2, #8]
    7364:	ldr	w1, [x3, #16]
    7368:	strb	w15, [x2, #20]
    736c:	str	w1, [x2, #16]
    7370:	ldrb	w1, [x3, #21]
    7374:	strb	w1, [x2, #21]
    7378:	ldr	x1, [x3, #24]
    737c:	ldr	w15, [x3, #40]
    7380:	strh	w13, [x2, #12]
    7384:	ldrb	w13, [x3, #22]
    7388:	str	x1, [x2, #24]
    738c:	ldr	x1, [x3, #32]
    7390:	str	w15, [x2, #40]
    7394:	str	x14, [x2]
    7398:	ldur	x14, [x3, #44]
    739c:	stur	x14, [x2, #44]
    73a0:	strb	w13, [x2, #22]
    73a4:	ldr	w13, [x3, #52]
    73a8:	str	w13, [x2, #52]
    73ac:	stp	wzr, w12, [x2, #64]
    73b0:	str	x1, [x2, #32]
    73b4:	ldr	w1, [x3, #64]
    73b8:	str	x0, [x2, #56]
    73bc:	cbz	w1, 733c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f4>
    73c0:	add	x1, x3, #0x38
    73c4:	add	x0, x2, #0x38
    73c8:	stp	x2, x3, [sp, #104]
    73cc:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    73d0:	mov	w12, #0x4                   	// #4
    73d4:	ldp	x2, x3, [sp, #104]
    73d8:	add	x3, x3, #0x88
    73dc:	add	x2, x2, #0x88
    73e0:	cmp	x22, x3
    73e4:	b.ne	734c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x604>  // b.any
    73e8:	ldr	w5, [x25, #24]
    73ec:	mov	w0, #0x88                  	// #136
    73f0:	ldr	x2, [x25, #16]
    73f4:	umaddl	x22, w5, w0, x2
    73f8:	cmp	x2, x22
    73fc:	b.eq	742c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6e4>  // b.none
    7400:	ldur	x0, [x22, #-80]
    7404:	sub	x22, x22, #0x88
    7408:	add	x1, x22, #0x48
    740c:	cmp	x0, x1
    7410:	b.eq	7420 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6d8>  // b.none
    7414:	str	x2, [sp, #104]
    7418:	bl	0 <free>
    741c:	ldr	x2, [sp, #104]
    7420:	cmp	x2, x22
    7424:	b.ne	7400 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6b8>  // b.any
    7428:	ldr	x22, [x25, #16]
    742c:	ldr	x0, [sp, #144]
    7430:	cmp	x22, x0
    7434:	b.eq	7440 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6f8>  // b.none
    7438:	mov	x0, x22
    743c:	bl	0 <free>
    7440:	ldr	w0, [sp, #128]
    7444:	ldr	w3, [x25, #24]
    7448:	str	x21, [x25, #16]
    744c:	str	w0, [x25, #28]
    7450:	b	71dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x494>
    7454:	mov	x1, x0
    7458:	mov	w0, #0xffffff78            	// #-136
    745c:	mov	w2, #0xffffffff            	// #-1
    7460:	movk	x0, #0x87, lsl #32
    7464:	str	w2, [sp, #128]
    7468:	b	7300 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5b8>
    746c:	ldrb	w0, [x19, #8]
    7470:	ldr	w1, [sp, #216]
    7474:	and	w0, w0, #0xfffffffc
    7478:	str	x25, [x19]
    747c:	orr	w0, w0, #0x2
    7480:	strb	w0, [x19, #8]
    7484:	cmp	w1, #0x40
    7488:	b.ls	7018 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2d0>  // b.plast
    748c:	ldr	x0, [sp, #208]
    7490:	cbz	x0, 7018 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2d0>
    7494:	bl	0 <_ZdaPv>
    7498:	b	7018 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2d0>
    749c:	add	x0, sp, #0xd0
    74a0:	mov	w2, #0x0                   	// #0
    74a4:	mov	x1, #0x0                   	// #0
    74a8:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    74ac:	b	7144 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3fc>
    74b0:	str	x8, [sp, #104]
    74b4:	mov	x1, x24
    74b8:	mov	w3, w21
    74bc:	add	x2, sp, #0xc0
    74c0:	blr	x5
    74c4:	ands	w1, w0, #0xff
    74c8:	ldr	x0, [sp, #128]
    74cc:	str	w1, [sp, #96]
    74d0:	ldr	x8, [sp, #104]
    74d4:	ldr	x0, [x0, #24]
    74d8:	b.eq	7514 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7cc>  // b.none
    74dc:	mov	w20, w1
    74e0:	ldr	x1, [x0]
    74e4:	b	6ea4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x15c>
    74e8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    74ec:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    74f0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    74f4:	add	x3, x3, #0x0
    74f8:	add	x1, x1, #0x0
    74fc:	add	x0, x0, #0x0
    7500:	mov	w2, #0x1ce                 	// #462
    7504:	stp	x21, x22, [sp, #32]
    7508:	stp	x25, x26, [sp, #64]
    750c:	stp	x27, x28, [sp, #80]
    7510:	bl	0 <__assert_fail>
    7514:	ldr	x1, [x0]
    7518:	b	6e7c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x134>
    751c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7520:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7524:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7528:	add	x3, x3, #0x0
    752c:	add	x1, x1, #0x0
    7530:	add	x0, x0, #0x0
    7534:	mov	w2, #0x43                  	// #67
    7538:	bl	0 <__assert_fail>
    753c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7540:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7544:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7548:	add	x3, x3, #0x0
    754c:	add	x1, x1, #0x0
    7550:	add	x0, x0, #0x0
    7554:	mov	w2, #0x99                  	// #153
    7558:	bl	0 <__assert_fail>
    755c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7560:	add	x3, x3, #0x0
    7564:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7568:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    756c:	add	x1, x1, #0x0
    7570:	add	x0, x0, #0x0
    7574:	mov	w2, #0xa7                  	// #167
    7578:	bl	0 <__assert_fail>
    757c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7580:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7584:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7588:	add	x3, x3, #0x0
    758c:	add	x1, x1, #0x0
    7590:	add	x0, x0, #0x0
    7594:	mov	w2, #0x472                 	// #1138
    7598:	bl	0 <__assert_fail>
    759c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    75a0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    75a4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    75a8:	add	x3, x3, #0x0
    75ac:	add	x1, x1, #0x0
    75b0:	add	x0, x0, #0x0
    75b4:	mov	w2, #0x41                  	// #65
    75b8:	bl	0 <__assert_fail>
    75bc:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    75c0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    75c4:	add	x3, x3, #0x0
    75c8:	b	7568 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x820>
    75cc:	ldr	x0, [sp, #136]
    75d0:	mov	w1, #0x1                   	// #1
    75d4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    75d8:	ldr	w3, [x25, #24]
    75dc:	b	7318 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5d0>

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis11isZeroIdiomERKNS_6MCInstERNS_5APIntEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis11isZeroIdiomERKNS_6MCInstERNS_5APIntEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis25isOptimizableRegisterMoveERKNS_6MCInstEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis25isOptimizableRegisterMoveERKNS_6MCInstEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo24resolveVariantSchedClassEjPKNS_6MCInstEj:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo24resolveVariantSchedClassEjPKNS_6MCInstEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x2, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   4:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   8:	ldr	x2, [x2]
   c:	ldr	x0, [x0]
  10:	cmp	x1, x2
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	cset	w0, eq  // eq = none
  1c:	ret

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	mov	x2, x0
   4:	mov	x0, x1
   8:	ldp	x1, x2, [x2, #8]
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>:
   0:	adrp	x2, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>
   4:	mov	x1, x0
   8:	add	x3, x0, #0x18
   c:	ldr	x2, [x2]
  10:	ldr	x0, [x0, #8]
  14:	add	x2, x2, #0x10
  18:	str	x2, [x1]
  1c:	cmp	x0, x3
  20:	b.eq	28 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
   8:	add	x2, x0, #0x18
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #8]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	mov	x1, #0x30                  	// #48
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj>:
   0:	ldr	x5, [x0]
   4:	adrp	x4, 0 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj>
   8:	add	x4, x4, #0x0
   c:	ldr	x5, [x5, #80]
  10:	cmp	x5, x4
  14:	b.ne	20 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj+0x20>  // b.any
  18:	mov	w0, #0x0                   	// #0
  1c:	ret
  20:	mov	x16, x5
  24:	br	x16

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x25, x26, [sp, #64]
  18:	ldp	x22, x25, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x0
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x24, x1
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	str	x27, [sp, #80]
  34:	movk	x1, #0x555, lsl #48
  38:	sub	x0, x25, x22
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	1b0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x1b0>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x24, x22
  54:	cbz	x0, 194 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x194>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x23, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	180 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x180>  // b.plast
  68:	mov	x0, x23
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	add	x23, x0, x23
  78:	add	x19, x0, #0x18
  7c:	add	x0, x21, x27
  80:	cmp	x24, x22
  84:	ldp	x2, x3, [x26]
  88:	ldr	x1, [x26, #16]
  8c:	stp	x2, x3, [x0]
  90:	str	x1, [x0, #16]
  94:	b.eq	f0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xf0>  // b.none
  98:	mov	x4, x21
  9c:	mov	x3, x22
  a0:	ldp	x0, x1, [x3]
  a4:	stp	x0, x1, [x4]
  a8:	add	x3, x3, #0x18
  ac:	ldur	x0, [x3, #-8]
  b0:	str	x0, [x4, #16]
  b4:	cmp	x24, x3
  b8:	add	x4, x4, #0x18
  bc:	b.ne	a0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xa0>  // b.any
  c0:	sub	x19, x24, #0x18
  c4:	mov	x0, #0xaaab                	// #43691
  c8:	sub	x19, x19, x22
  cc:	movk	x0, #0xaaaa, lsl #16
  d0:	movk	x0, #0xaaaa, lsl #32
  d4:	lsr	x19, x19, #3
  d8:	movk	x0, #0xaaa, lsl #48
  dc:	mul	x19, x19, x0
  e0:	and	x19, x19, #0x1fffffffffffffff
  e4:	add	x19, x19, #0x2
  e8:	add	x19, x19, x19, lsl #1
  ec:	add	x19, x21, x19, lsl #3
  f0:	cmp	x24, x25
  f4:	b.eq	150 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x150>  // b.none
  f8:	mov	x2, x24
  fc:	mov	x3, x19
 100:	ldp	x4, x5, [x2]
 104:	stp	x4, x5, [x3]
 108:	add	x2, x2, #0x18
 10c:	ldur	x0, [x2, #-8]
 110:	str	x0, [x3, #16]
 114:	cmp	x2, x25
 118:	add	x3, x3, #0x18
 11c:	b.ne	100 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x100>  // b.any
 120:	sub	x1, x2, x24
 124:	mov	x0, #0xaaab                	// #43691
 128:	sub	x1, x1, #0x18
 12c:	movk	x0, #0xaaaa, lsl #16
 130:	movk	x0, #0xaaaa, lsl #32
 134:	lsr	x1, x1, #3
 138:	movk	x0, #0xaaa, lsl #48
 13c:	mul	x1, x1, x0
 140:	and	x1, x1, #0x1fffffffffffffff
 144:	add	x1, x1, #0x1
 148:	add	x1, x1, x1, lsl #1
 14c:	add	x19, x19, x1, lsl #3
 150:	cbz	x22, 15c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x15c>
 154:	mov	x0, x22
 158:	bl	0 <_ZdlPv>
 15c:	ldp	x25, x26, [sp, #64]
 160:	ldr	x27, [sp, #80]
 164:	stp	x21, x19, [x20]
 168:	str	x23, [x20, #16]
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x29, x30, [sp], #96
 17c:	ret
 180:	cbnz	x0, 19c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x19c>
 184:	mov	x19, #0x18                  	// #24
 188:	mov	x23, #0x0                   	// #0
 18c:	mov	x21, #0x0                   	// #0
 190:	b	7c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x7c>
 194:	mov	x23, #0x18                  	// #24
 198:	b	68 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x68>
 19c:	cmp	x0, x1
 1a0:	mov	x23, #0x18                  	// #24
 1a4:	csel	x0, x0, x1, ls  // ls = plast
 1a8:	mul	x23, x0, x23
 1ac:	b	68 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x68>
 1b0:	adrp	x0, 0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #64]
  18:	ldr	x1, [x1]
  1c:	stp	x19, x20, [sp, #16]
  20:	add	x20, sp, #0x30
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x20, #0x10
  2c:	add	x1, x1, #0x10
  30:	str	x21, [sp, #32]
  34:	stp	x4, xzr, [sp, #48]
  38:	add	x21, sp, #0x50
  3c:	mov	x19, x8
  40:	stp	x1, xzr, [sp, #80]
  44:	mov	x1, x21
  48:	stp	xzr, xzr, [sp, #96]
  4c:	str	w3, [sp, #112]
  50:	str	x20, [sp, #120]
  54:	blr	x2
  58:	ldr	x0, [sp, #88]
  5c:	ldr	x1, [sp, #104]
  60:	cmp	x1, x0
  64:	b.eq	70 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x70>  // b.none
  68:	mov	x0, x21
  6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  70:	ldr	x2, [sp, #120]
  74:	add	x0, x19, #0x10
  78:	str	x0, [x19]
  7c:	mov	w3, #0x0                   	// #0
  80:	mov	x0, x19
  84:	add	x20, x20, #0x10
  88:	ldp	x1, x2, [x2]
  8c:	add	x2, x1, x2
  90:	bl	0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  94:	mov	x0, x21
  98:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  9c:	ldr	x0, [sp, #48]
  a0:	cmp	x0, x20
  a4:	b.eq	ac <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xac>  // b.none
  a8:	bl	0 <_ZdlPv>
  ac:	mov	x0, x19
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldr	x21, [sp, #32]
  b8:	ldp	x29, x30, [sp], #128
  bc:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-64]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	stp	x21, x22, [sp, #32]
  28:	orr	x2, x2, x2, lsr #8
  2c:	ldr	w20, [x19, #24]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #4, #32
  4c:	bl	0 <_Znwm>
  50:	str	x0, [x19, #8]
  54:	ldr	w1, [x19, #24]
  58:	sub	w2, w1, #0x1
  5c:	and	w2, w2, w1
  60:	cbz	x21, 1bc <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1bc>
  64:	stp	x23, x24, [sp, #48]
  68:	ubfiz	x20, x20, #4, #32
  6c:	add	x22, x21, x20
  70:	str	xzr, [x19, #16]
  74:	cbnz	w2, 234 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x234>
  78:	ubfiz	x1, x1, #4, #32
  7c:	mov	x2, #0xfffffffffffffff8    	// #-8
  80:	add	x1, x0, x1
  84:	cmp	x0, x1
  88:	b.eq	9c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x2, [x0], #16
  94:	cmp	x1, x0
  98:	b.ne	90 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x90>  // b.any
  9c:	cmp	x22, x21
  a0:	mov	x23, x21
  a4:	b.ne	b8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xb8>  // b.any
  a8:	b	118 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x118>
  ac:	add	x23, x23, #0x10
  b0:	cmp	x22, x23
  b4:	b.eq	118 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x118>  // b.none
  b8:	ldr	x1, [x23]
  bc:	cmn	x1, #0x10
  c0:	ccmn	x1, #0x8, #0x4, ne  // ne = any
  c4:	b.eq	ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>  // b.none
  c8:	ldr	w2, [x19, #24]
  cc:	cbz	w2, 254 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x254>
  d0:	lsr	w0, w1, #9
  d4:	sub	w2, w2, #0x1
  d8:	eor	w0, w0, w1, lsr #4
  dc:	and	w0, w0, w2
  e0:	ldr	x3, [x19, #8]
  e4:	lsl	w4, w0, #4
  e8:	add	x6, x3, x4
  ec:	ldr	x4, [x3, x4]
  f0:	cmp	x1, x4
  f4:	b.ne	134 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x134>  // b.any
  f8:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  fc:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 100:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 104:	add	x3, x3, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x0, x0, #0x0
 110:	mov	w2, #0x17a                 	// #378
 114:	bl	0 <__assert_fail>
 118:	mov	x1, x20
 11c:	mov	x0, x21
 120:	ldp	x19, x20, [sp, #16]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x23, x24, [sp, #48]
 12c:	ldp	x29, x30, [sp], #64
 130:	b	0 <_ZdlPvm>
 134:	mov	w7, #0x1                   	// #1
 138:	mov	x5, #0x0                   	// #0
 13c:	cmn	x4, #0x8
 140:	b.ne	1f4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1f4>  // b.any
 144:	cmp	x5, #0x0
 148:	ldr	w0, [x19, #16]
 14c:	csel	x5, x5, x6, ne  // ne = any
 150:	ldr	x2, [x23, #8]
 154:	add	w0, w0, #0x1
 158:	str	x1, [x5]
 15c:	str	xzr, [x23, #8]
 160:	str	x2, [x5, #8]
 164:	ldr	x24, [x23, #8]
 168:	str	w0, [x19, #16]
 16c:	cbz	x24, ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>
 170:	ldr	x0, [x24, #176]
 174:	add	x1, x24, #0xc0
 178:	cmp	x0, x1
 17c:	b.eq	184 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x184>  // b.none
 180:	bl	0 <free>
 184:	ldr	x0, [x24, #96]
 188:	add	x1, x24, #0x70
 18c:	cmp	x0, x1
 190:	b.eq	198 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x198>  // b.none
 194:	bl	0 <free>
 198:	mov	x1, x24
 19c:	ldr	x0, [x1], #16
 1a0:	cmp	x0, x1
 1a4:	b.eq	1ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1ac>  // b.none
 1a8:	bl	0 <free>
 1ac:	mov	x0, x24
 1b0:	mov	x1, #0x150                 	// #336
 1b4:	bl	0 <_ZdlPvm>
 1b8:	b	ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>
 1bc:	str	xzr, [x19, #16]
 1c0:	cbnz	w2, 230 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x230>
 1c4:	ubfiz	x1, x1, #4, #32
 1c8:	mov	x2, #0xfffffffffffffff8    	// #-8
 1cc:	add	x1, x0, x1
 1d0:	cmp	x0, x1
 1d4:	b.eq	1e4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1e4>  // b.none
 1d8:	str	x2, [x0], #16
 1dc:	cmp	x1, x0
 1e0:	b.ne	1d8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1d8>  // b.any
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x29, x30, [sp], #64
 1f0:	ret
 1f4:	add	w0, w0, w7
 1f8:	cmp	x5, #0x0
 1fc:	and	w8, w2, w0
 200:	ccmn	x4, #0x10, #0x0, eq  // eq = none
 204:	csel	x6, x6, x5, eq  // eq = none
 208:	add	w7, w7, #0x1
 20c:	lsl	x4, x8, #4
 210:	and	w0, w2, w0
 214:	add	x8, x3, x4
 218:	ldr	x4, [x3, x4]
 21c:	cmp	x1, x4
 220:	b.eq	f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>  // b.none
 224:	mov	x5, x6
 228:	mov	x6, x8
 22c:	b	13c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x13c>
 230:	stp	x23, x24, [sp, #48]
 234:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 238:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 23c:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 240:	add	x3, x3, #0x0
 244:	add	x1, x1, #0x0
 248:	add	x0, x0, #0x0
 24c:	mov	w2, #0x15b                 	// #347
 250:	bl	0 <__assert_fail>
 254:	mov	x0, #0x0                   	// #0
 258:	str	x1, [x0]
 25c:	brk	#0x3e8

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w3, [x1, #8]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x4, [x1, #-16]
  a4:	str	x4, [x2]
  a8:	str	w3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x7c>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x4, w21, uxtw
  30:	b.cc	8c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x8c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 74 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x74>
  38:	ldr	x2, [x1]
  3c:	ldr	x0, [x0]
  40:	add	x1, x2, x22, lsl #4
  44:	nop
  48:	ldr	w3, [x2, #8]
  4c:	add	x2, x2, #0x10
  50:	ldur	x4, [x2, #-16]
  54:	str	x4, [x0]
  58:	str	w3, [x0, #8]
  5c:	cmp	x2, x1
  60:	add	x0, x0, #0x10
  64:	b.ne	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.any
  68:	ldr	w0, [x19, #12]
  6c:	cmp	x22, x0
  70:	b.hi	150 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x150>  // b.pmore
  74:	str	w21, [x19, #8]
  78:	ldp	x21, x22, [sp, #32]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	ldr	w1, [x0, #12]
  90:	cmp	x22, x1
  94:	b.hi	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.pmore
  98:	ldr	x3, [x0]
  9c:	ldr	x2, [x20]
  a0:	cbz	x4, f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>
  a4:	lsl	x4, x4, #4
  a8:	add	x5, x2, x4
  ac:	nop
  b0:	ldr	w0, [x2, #8]
  b4:	add	x2, x2, #0x10
  b8:	ldur	x1, [x2, #-16]
  bc:	str	x1, [x3]
  c0:	str	w0, [x3, #8]
  c4:	cmp	x2, x5
  c8:	add	x3, x3, #0x10
  cc:	b.ne	b0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xb0>  // b.any
  d0:	ldr	x0, [x20]
  d4:	ldr	w5, [x20, #8]
  d8:	ldr	x3, [x19]
  dc:	add	x2, x0, x4
  e0:	add	x5, x0, x5, lsl #4
  e4:	add	x3, x3, x4
  e8:	cmp	x2, x5
  ec:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
  f0:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  f4:	add	x5, x2, x22, lsl #4
  f8:	ldr	w0, [x2, #8]
  fc:	add	x2, x2, #0x10
 100:	ldur	x4, [x2, #-16]
 104:	str	x4, [x3]
 108:	str	w0, [x3, #8]
 10c:	cmp	x2, x5
 110:	add	x3, x3, #0x10
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 118:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 11c:	str	wzr, [x0, #8]
 120:	mov	x1, x22
 124:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 128:	ldr	x0, [x20]
 12c:	mov	x4, #0x0                   	// #0
 130:	ldr	w5, [x20, #8]
 134:	ldr	x3, [x19]
 138:	add	x2, x0, x4
 13c:	add	x5, x0, x5, lsl #4
 140:	add	x3, x3, x4
 144:	cmp	x2, x5
 148:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 14c:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 150:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 154:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 158:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 15c:	add	x3, x3, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x0, x0, #0x0
 168:	mov	w2, #0x43                  	// #67
 16c:	bl	0 <__assert_fail>

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
       0:	str	xzr, [x0, #24]
       4:	stp	w3, w1, [x0, #40]
       8:	strh	w2, [x0, #48]
       c:	str	w3, [x0, #52]
      10:	ret
      14:	nop

0000000000000018 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
      18:	stp	x29, x30, [sp, #-16]!
      1c:	mov	x29, sp
      20:	ldr	w4, [x0, #16]
      24:	cbz	w4, 98 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x80>
      28:	ldr	w5, [x0, #20]
      2c:	cmn	w5, #0x200
      30:	b.ne	78 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x60>  // b.any
      34:	ldr	w5, [x0, #24]
      38:	sub	w4, w4, #0x1
      3c:	str	w4, [x0, #16]
      40:	cmp	w5, w3
      44:	b.cs	58 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x40>  // b.hs, b.nlast
      48:	and	w2, w2, #0xffff
      4c:	stp	w3, w1, [x0, #24]
      50:	strh	w2, [x0, #32]
      54:	str	w3, [x0, #36]
      58:	cbnz	w4, 70 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x58>
      5c:	ldr	w1, [x0, #24]
      60:	str	w1, [x0, #20]
      64:	cmp	w1, #0x0
      68:	cset	w1, eq  // eq = none
      6c:	strb	w1, [x0, #40]
      70:	ldp	x29, x30, [sp], #16
      74:	ret
      78:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      7c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      80:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      84:	add	x3, x3, #0x0
      88:	add	x1, x1, #0x0
      8c:	add	x0, x0, #0x0
      90:	mov	w2, #0x20                  	// #32
      94:	bl	0 <__assert_fail>
      98:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      9c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a4:	add	x3, x3, #0x0
      a8:	add	x1, x1, #0x0
      ac:	add	x0, x0, #0x0
      b0:	mov	w2, #0x1f                  	// #31
      b4:	bl	0 <__assert_fail>

00000000000000b8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
      b8:	stp	x29, x30, [sp, #-48]!
      bc:	mov	x29, sp
      c0:	stp	x19, x20, [sp, #16]
      c4:	mov	x20, x0
      c8:	ldr	w0, [x0, #8]
      cc:	stp	x21, x22, [sp, #32]
      d0:	cmn	w0, #0x200
      d4:	b.ne	15c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xa4>  // b.any
      d8:	ldr	x0, [x20]
      dc:	mov	w22, w1
      e0:	ldr	x19, [x20, #56]
      e4:	ldr	w21, [x20, #64]
      e8:	ldr	w3, [x0, #4]
      ec:	str	w3, [x20, #8]
      f0:	add	x21, x19, x21, lsl #4
      f4:	cmp	x19, x21
      f8:	b.ne	104 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x4c>  // b.any
      fc:	b	128 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x70>
     100:	ldr	w3, [x20, #8]
     104:	ldr	w4, [x19, #8]
     108:	mov	w1, w22
     10c:	ldrh	w2, [x20, #12]
     110:	ldr	x0, [x19], #16
     114:	subs	w3, w3, w4
     118:	csel	w3, w3, wzr, pl  // pl = nfrst
     11c:	bl	18 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
     120:	cmp	x21, x19
     124:	b.ne	100 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x48>  // b.any
     128:	ldr	x0, [x20, #32]
     12c:	cbz	x0, 14c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x94>
     130:	ldrh	w2, [x20, #12]
     134:	mov	w1, w22
     138:	ldr	w3, [x20, #8]
     13c:	ldp	x19, x20, [sp, #16]
     140:	ldp	x21, x22, [sp, #32]
     144:	ldp	x29, x30, [sp], #48
     148:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     14c:	ldp	x19, x20, [sp, #16]
     150:	ldp	x21, x22, [sp, #32]
     154:	ldp	x29, x30, [sp], #48
     158:	ret
     15c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     160:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     164:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     168:	add	x3, x3, #0x0
     16c:	add	x1, x1, #0x0
     170:	add	x0, x0, #0x0
     174:	mov	w2, #0x36                  	// #54
     178:	bl	0 <__assert_fail>
     17c:	nop

0000000000000180 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
     180:	stp	x29, x30, [sp, #-96]!
     184:	mov	x29, sp
     188:	stp	x19, x20, [sp, #16]
     18c:	mov	x19, x0
     190:	ldr	w0, [x0, #8]
     194:	stp	x21, x22, [sp, #32]
     198:	mov	x21, x2
     19c:	cmn	w0, #0x200
     1a0:	b.eq	1c4 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x44>  // b.none
     1a4:	ldrh	w2, [x19, #12]
     1a8:	subs	w3, w0, w3
     1ac:	mov	x0, x21
     1b0:	csel	w3, w3, wzr, pl  // pl = nfrst
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldp	x21, x22, [sp, #32]
     1bc:	ldp	x29, x30, [sp], #96
     1c0:	b	18 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
     1c4:	ldp	w20, w0, [x19, #64]
     1c8:	cmp	w20, w0
     1cc:	b.cs	214 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x94>  // b.hs, b.nlast
     1d0:	ldr	x22, [x19, #56]
     1d4:	ubfiz	x1, x20, #4, #32
     1d8:	add	x0, x22, x1
     1dc:	str	x21, [x22, x1]
     1e0:	str	w3, [x0, #8]
     1e4:	ldp	w0, w2, [x19, #64]
     1e8:	mov	w1, w0
     1ec:	add	x1, x1, #0x1
     1f0:	cmp	x1, x2
     1f4:	b.hi	2e8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x168>  // b.pmore
     1f8:	add	w0, w0, #0x1
     1fc:	str	w0, [x19, #64]
     200:	cbz	w0, 30c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x18c>
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldp	x29, x30, [sp], #96
     210:	ret
     214:	mov	w1, w0
     218:	str	x23, [sp, #48]
     21c:	add	x1, x1, #0x2
     220:	mov	x0, #0xffffffff            	// #4294967295
     224:	orr	x1, x1, x1, lsr #1
     228:	orr	x1, x1, x1, lsr #2
     22c:	orr	x1, x1, x1, lsr #4
     230:	orr	x1, x1, x1, lsr #8
     234:	orr	x2, x1, x1, lsr #16
     238:	orr	x1, x2, x1, lsr #32
     23c:	add	x1, x1, #0x1
     240:	cmp	x1, x0
     244:	b.hi	2d8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x158>  // b.pmore
     248:	lsl	x0, x1, #4
     24c:	mov	w23, w1
     250:	str	w3, [sp, #76]
     254:	str	x1, [sp, #88]
     258:	bl	0 <malloc>
     25c:	ldr	w3, [sp, #76]
     260:	mov	x22, x0
     264:	cbz	x0, 330 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x1b0>
     268:	ldr	x0, [x19, #56]
     26c:	ubfiz	x1, x20, #4, #32
     270:	mov	x4, x22
     274:	add	x7, x0, x1
     278:	mov	x2, x0
     27c:	cmp	x0, x7
     280:	b.eq	2a8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x128>  // b.none
     284:	nop
     288:	ldr	w5, [x2, #8]
     28c:	add	x2, x2, #0x10
     290:	ldur	x6, [x2, #-16]
     294:	str	x6, [x4]
     298:	str	w5, [x4, #8]
     29c:	cmp	x7, x2
     2a0:	add	x4, x4, #0x10
     2a4:	b.ne	288 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x108>  // b.any
     2a8:	add	x2, x19, #0x48
     2ac:	cmp	x0, x2
     2b0:	b.eq	2c8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x148>  // b.none
     2b4:	str	w3, [sp, #76]
     2b8:	bl	0 <free>
     2bc:	ldr	w1, [x19, #64]
     2c0:	ldr	w3, [sp, #76]
     2c4:	lsl	x1, x1, #4
     2c8:	str	x22, [x19, #56]
     2cc:	str	w23, [x19, #68]
     2d0:	ldr	x23, [sp, #48]
     2d4:	b	1d8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x58>
     2d8:	mov	x1, x0
     2dc:	mov	w23, #0xffffffff            	// #-1
     2e0:	mov	x0, #0xffffffff0           	// #68719476720
     2e4:	b	250 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xd0>
     2e8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2ec:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2f0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2f4:	add	x3, x3, #0x0
     2f8:	add	x1, x1, #0x0
     2fc:	add	x0, x0, #0x0
     300:	mov	w2, #0x43                  	// #67
     304:	str	x23, [sp, #48]
     308:	bl	0 <__assert_fail>
     30c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     310:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     314:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     318:	add	x3, x3, #0x0
     31c:	add	x1, x1, #0x0
     320:	add	x0, x0, #0x0
     324:	mov	w2, #0xa7                  	// #167
     328:	str	x23, [sp, #48]
     32c:	bl	0 <__assert_fail>
     330:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     334:	mov	w1, #0x1                   	// #1
     338:	add	x0, x0, #0x0
     33c:	str	w3, [sp, #76]
     340:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     344:	ldr	w20, [x19, #64]
     348:	ldr	w3, [sp, #76]
     34c:	b	268 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xe8>

0000000000000350 <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
     350:	mov	x4, x0
     354:	mov	x0, x2
     358:	ldr	w3, [x4, #8]
     35c:	cmn	w3, #0x200
     360:	b.eq	374 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x24>  // b.none
     364:	ldrh	w2, [x4, #12]
     368:	cmp	w3, #0x0
     36c:	csel	w3, w3, wzr, ge  // ge = tcont
     370:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     374:	ldr	x1, [x4, #32]
     378:	cbnz	x1, 388 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x38>
     37c:	str	x2, [x4, #32]
     380:	str	x4, [x2, #24]
     384:	ret
     388:	stp	x29, x30, [sp, #-16]!
     38c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     390:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     394:	mov	x29, sp
     398:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     39c:	add	x3, x3, #0x0
     3a0:	add	x1, x1, #0x0
     3a4:	add	x0, x0, #0x0
     3a8:	mov	w2, #0x5a                  	// #90
     3ac:	bl	0 <__assert_fail>

00000000000003b0 <_ZN4llvm3mca10WriteState10cycleEventEv>:
     3b0:	ldr	w1, [x0, #8]
     3b4:	cmn	w1, #0x200
     3b8:	b.eq	3c4 <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
     3bc:	sub	w1, w1, #0x1
     3c0:	str	w1, [x0, #8]
     3c4:	ldr	w1, [x0, #40]
     3c8:	cbz	w1, 3d4 <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
     3cc:	sub	w1, w1, #0x1
     3d0:	str	w1, [x0, #40]
     3d4:	ret

00000000000003d8 <_ZN4llvm3mca9ReadState10cycleEventEv>:
     3d8:	ldr	w1, [x0, #16]
     3dc:	cbz	w1, 3e8 <_ZN4llvm3mca9ReadState10cycleEventEv+0x10>
     3e0:	ldr	w1, [x0, #24]
     3e4:	cbnz	w1, 410 <_ZN4llvm3mca9ReadState10cycleEventEv+0x38>
     3e8:	ldr	w1, [x0, #20]
     3ec:	add	w2, w1, #0x200
     3f0:	tst	w2, #0xfffffdff
     3f4:	b.ne	3fc <_ZN4llvm3mca9ReadState10cycleEventEv+0x24>  // b.any
     3f8:	ret
     3fc:	subs	w1, w1, #0x1
     400:	str	w1, [x0, #20]
     404:	cset	w1, eq  // eq = none
     408:	strb	w1, [x0, #40]
     40c:	ret
     410:	sub	w1, w1, #0x1
     414:	str	w1, [x0, #24]
     418:	ret
     41c:	nop

0000000000000420 <_ZNK4llvm3mca10WriteState4dumpEv>:
     420:	stp	x29, x30, [sp, #-32]!
     424:	mov	x29, sp
     428:	str	x19, [sp, #16]
     42c:	mov	x19, x0
     430:	bl	0 <_ZN4llvm4dbgsEv>
     434:	ldp	x2, x3, [x0, #16]
     438:	sub	x2, x2, x3
     43c:	cmp	x2, #0x7
     440:	b.ls	578 <_ZNK4llvm3mca10WriteState4dumpEv+0x158>  // b.plast
     444:	mov	x1, x0
     448:	mov	x0, #0x207b                	// #8315
     44c:	movk	x0, #0x704f, lsl #16
     450:	movk	x0, #0x6449, lsl #32
     454:	movk	x0, #0x3d78, lsl #48
     458:	str	x0, [x3]
     45c:	ldr	x0, [x1, #24]
     460:	add	x0, x0, #0x8
     464:	str	x0, [x1, #24]
     468:	ldr	x2, [x19]
     46c:	mov	x0, x1
     470:	ldrsw	x1, [x2]
     474:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     478:	mov	x1, x0
     47c:	ldp	x2, x3, [x0, #16]
     480:	sub	x2, x2, x3
     484:	cmp	x2, #0x5
     488:	b.ls	5d8 <_ZNK4llvm3mca10WriteState4dumpEv+0x1b8>  // b.plast
     48c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     490:	add	x0, x0, #0x0
     494:	ldr	w2, [x0]
     498:	ldrh	w0, [x0, #4]
     49c:	str	w2, [x3]
     4a0:	strh	w0, [x3, #4]
     4a4:	ldr	x0, [x1, #24]
     4a8:	add	x0, x0, #0x6
     4ac:	str	x0, [x1, #24]
     4b0:	ldr	x2, [x19]
     4b4:	mov	x0, x1
     4b8:	ldr	w1, [x2, #4]
     4bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4c0:	mov	x2, x0
     4c4:	ldp	x1, x3, [x0, #16]
     4c8:	sub	x1, x1, x3
     4cc:	cmp	x1, #0x7
     4d0:	b.ls	5c0 <_ZNK4llvm3mca10WriteState4dumpEv+0x1a0>  // b.plast
     4d4:	mov	x0, #0x202c                	// #8236
     4d8:	movk	x0, #0x6552, lsl #16
     4dc:	movk	x0, #0x4967, lsl #32
     4e0:	movk	x0, #0x2044, lsl #48
     4e4:	str	x0, [x3]
     4e8:	ldr	x0, [x2, #24]
     4ec:	add	x0, x0, #0x8
     4f0:	str	x0, [x2, #24]
     4f4:	ldrh	w1, [x19, #12]
     4f8:	mov	x0, x2
     4fc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     500:	mov	x2, x0
     504:	ldp	x1, x3, [x0, #16]
     508:	sub	x1, x1, x3
     50c:	cmp	x1, #0xd
     510:	b.ls	5a8 <_ZNK4llvm3mca10WriteState4dumpEv+0x188>  // b.plast
     514:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     518:	add	x0, x0, #0x0
     51c:	ldr	x1, [x0]
     520:	str	x1, [x3]
     524:	ldur	x0, [x0, #6]
     528:	stur	x0, [x3, #6]
     52c:	ldr	x0, [x2, #24]
     530:	add	x0, x0, #0xe
     534:	str	x0, [x2, #24]
     538:	ldrsw	x1, [x19, #8]
     53c:	mov	x0, x2
     540:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     544:	mov	x1, x0
     548:	ldp	x2, x3, [x0, #16]
     54c:	sub	x2, x2, x3
     550:	cmp	x2, #0x1
     554:	b.ls	590 <_ZNK4llvm3mca10WriteState4dumpEv+0x170>  // b.plast
     558:	mov	w0, #0x7d20                	// #32032
     55c:	strh	w0, [x3]
     560:	ldr	x0, [x1, #24]
     564:	ldr	x19, [sp, #16]
     568:	add	x0, x0, #0x2
     56c:	str	x0, [x1, #24]
     570:	ldp	x29, x30, [sp], #32
     574:	ret
     578:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     57c:	add	x1, x1, #0x0
     580:	mov	x2, #0x8                   	// #8
     584:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     588:	mov	x1, x0
     58c:	b	468 <_ZNK4llvm3mca10WriteState4dumpEv+0x48>
     590:	ldr	x19, [sp, #16]
     594:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     598:	ldp	x29, x30, [sp], #32
     59c:	add	x1, x1, #0x0
     5a0:	mov	x2, #0x2                   	// #2
     5a4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	mov	x2, #0xe                   	// #14
     5ac:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5b0:	add	x1, x1, #0x0
     5b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5b8:	mov	x2, x0
     5bc:	b	538 <_ZNK4llvm3mca10WriteState4dumpEv+0x118>
     5c0:	mov	x2, #0x8                   	// #8
     5c4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5c8:	add	x1, x1, #0x0
     5cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5d0:	mov	x2, x0
     5d4:	b	4f4 <_ZNK4llvm3mca10WriteState4dumpEv+0xd4>
     5d8:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5dc:	add	x1, x1, #0x0
     5e0:	mov	x2, #0x6                   	// #6
     5e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5e8:	mov	x1, x0
     5ec:	b	4b0 <_ZNK4llvm3mca10WriteState4dumpEv+0x90>

00000000000005f0 <_ZNK4llvm3mca8WriteRef4dumpEv>:
     5f0:	stp	x29, x30, [sp, #-32]!
     5f4:	mov	x29, sp
     5f8:	str	x19, [sp, #16]
     5fc:	mov	x19, x0
     600:	bl	0 <_ZN4llvm4dbgsEv>
     604:	ldp	x1, x3, [x0, #16]
     608:	sub	x1, x1, x3
     60c:	cmp	x1, #0x3
     610:	b.ls	6d0 <_ZNK4llvm3mca8WriteRef4dumpEv+0xe0>  // b.plast
     614:	mov	x2, x0
     618:	mov	w0, #0x4949                	// #18761
     61c:	movk	w0, #0x3d44, lsl #16
     620:	str	w0, [x3]
     624:	ldr	x0, [x2, #24]
     628:	add	x0, x0, #0x4
     62c:	str	x0, [x2, #24]
     630:	ldr	w1, [x19]
     634:	mov	x0, x2
     638:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     63c:	mov	x1, x0
     640:	ldp	x3, x2, [x0, #16]
     644:	cmp	x2, x3
     648:	b.cs	6c4 <_ZNK4llvm3mca8WriteRef4dumpEv+0xd4>  // b.hs, b.nlast
     64c:	add	x0, x2, #0x1
     650:	str	x0, [x1, #24]
     654:	mov	w0, #0x20                  	// #32
     658:	strb	w0, [x2]
     65c:	ldr	x0, [x19, #8]
     660:	ldr	w1, [x19]
     664:	cmp	x0, #0x0
     668:	ccmn	w1, #0x1, #0x4, ne  // ne = any
     66c:	b.ne	6b8 <_ZNK4llvm3mca8WriteRef4dumpEv+0xc8>  // b.any
     670:	bl	0 <_ZN4llvm4dbgsEv>
     674:	mov	x1, x0
     678:	ldp	x2, x3, [x0, #16]
     67c:	sub	x2, x2, x3
     680:	cmp	x2, #0x5
     684:	b.ls	6e8 <_ZNK4llvm3mca8WriteRef4dumpEv+0xf8>  // b.plast
     688:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     68c:	add	x0, x0, #0x0
     690:	ldr	w2, [x0]
     694:	ldrh	w0, [x0, #4]
     698:	str	w2, [x3]
     69c:	strh	w0, [x3, #4]
     6a0:	ldr	x0, [x1, #24]
     6a4:	ldr	x19, [sp, #16]
     6a8:	add	x0, x0, #0x6
     6ac:	str	x0, [x1, #24]
     6b0:	ldp	x29, x30, [sp], #32
     6b4:	ret
     6b8:	ldr	x19, [sp, #16]
     6bc:	ldp	x29, x30, [sp], #32
     6c0:	b	420 <_ZNK4llvm3mca10WriteState4dumpEv>
     6c4:	mov	w1, #0x20                  	// #32
     6c8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     6cc:	b	65c <_ZNK4llvm3mca8WriteRef4dumpEv+0x6c>
     6d0:	mov	x2, #0x4                   	// #4
     6d4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     6d8:	add	x1, x1, #0x0
     6dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6e0:	mov	x2, x0
     6e4:	b	630 <_ZNK4llvm3mca8WriteRef4dumpEv+0x40>
     6e8:	ldr	x19, [sp, #16]
     6ec:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     6f0:	ldp	x29, x30, [sp], #32
     6f4:	add	x1, x1, #0x0
     6f8:	mov	x2, #0x6                   	// #6
     6fc:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

0000000000000700 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
     700:	mov	x4, x0
     704:	add	x0, x0, #0x328
     708:	ldr	w1, [x4, #816]
     70c:	cbnz	w1, 78c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x8c>
     710:	ldr	w3, [x4, #24]
     714:	mov	w2, #0x88                  	// #136
     718:	ldr	x1, [x4, #16]
     71c:	umaddl	x3, w3, w2, x1
     720:	cmp	x3, x1
     724:	b.eq	74c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x4c>  // b.none
     728:	ldr	w2, [x1, #52]
     72c:	cbz	w2, 740 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x40>
     730:	ldur	x2, [x1, #44]
     734:	str	x2, [x0]
     738:	ldr	w2, [x1, #52]
     73c:	str	w2, [x0, #8]
     740:	add	x1, x1, #0x88
     744:	cmp	x3, x1
     748:	b.ne	728 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x28>  // b.any
     74c:	ldr	w3, [x4, #584]
     750:	mov	w2, #0x30                  	// #48
     754:	ldr	x1, [x4, #576]
     758:	umaddl	x3, w3, w2, x1
     75c:	cmp	x1, x3
     760:	b.eq	78c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x8c>  // b.none
     764:	nop
     768:	ldr	w2, [x1, #36]
     76c:	cbz	w2, 780 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>
     770:	ldur	x2, [x1, #28]
     774:	str	x2, [x0]
     778:	ldr	w2, [x1, #36]
     77c:	str	w2, [x0, #8]
     780:	add	x1, x1, #0x30
     784:	cmp	x1, x3
     788:	b.ne	768 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x68>  // b.any
     78c:	ret

0000000000000790 <_ZN4llvm3mca11Instruction7executeEj>:
     790:	stp	x29, x30, [sp, #-48]!
     794:	mov	x29, sp
     798:	stp	x19, x20, [sp, #16]
     79c:	stp	x21, x22, [sp, #32]
     7a0:	mov	x22, x0
     7a4:	ldr	w0, [x0, #784]
     7a8:	cmp	w0, #0x3
     7ac:	b.ne	818 <_ZN4llvm3mca11Instruction7executeEj+0x88>  // b.any
     7b0:	ldr	x0, [x22]
     7b4:	mov	w21, w1
     7b8:	ldr	w20, [x22, #24]
     7bc:	mov	w1, #0x88                  	// #136
     7c0:	ldr	x19, [x22, #16]
     7c4:	mov	w2, #0x4                   	// #4
     7c8:	ldr	w0, [x0, #312]
     7cc:	str	w2, [x22, #784]
     7d0:	umaddl	x20, w20, w1, x19
     7d4:	str	w0, [x22, #788]
     7d8:	cmp	x19, x20
     7dc:	b.eq	7fc <_ZN4llvm3mca11Instruction7executeEj+0x6c>  // b.none
     7e0:	mov	x0, x19
     7e4:	mov	w1, w21
     7e8:	add	x19, x19, #0x88
     7ec:	bl	b8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
     7f0:	cmp	x20, x19
     7f4:	b.ne	7e0 <_ZN4llvm3mca11Instruction7executeEj+0x50>  // b.any
     7f8:	ldr	w0, [x22, #788]
     7fc:	cbnz	w0, 808 <_ZN4llvm3mca11Instruction7executeEj+0x78>
     800:	mov	w0, #0x5                   	// #5
     804:	str	w0, [x22, #784]
     808:	ldp	x19, x20, [sp, #16]
     80c:	ldp	x21, x22, [sp, #32]
     810:	ldp	x29, x30, [sp], #48
     814:	ret
     818:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     81c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     820:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     824:	add	x3, x3, #0x0
     828:	add	x1, x1, #0x0
     82c:	add	x0, x0, #0x0
     830:	mov	w2, #0xa9                  	// #169
     834:	bl	0 <__assert_fail>

0000000000000838 <_ZN4llvm3mca11Instruction13forceExecutedEv>:
     838:	ldr	w1, [x0, #784]
     83c:	cmp	w1, #0x3
     840:	b.ne	850 <_ZN4llvm3mca11Instruction13forceExecutedEv+0x18>  // b.any
     844:	mov	x1, #0x5                   	// #5
     848:	str	x1, [x0, #784]
     84c:	ret
     850:	stp	x29, x30, [sp, #-16]!
     854:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     858:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     85c:	mov	x29, sp
     860:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     864:	add	x3, x3, #0x0
     868:	add	x1, x1, #0x0
     86c:	add	x0, x0, #0x0
     870:	mov	w2, #0xb8                  	// #184
     874:	bl	0 <__assert_fail>

0000000000000878 <_ZN4llvm3mca11Instruction13updatePendingEv>:
     878:	mov	x3, x0
     87c:	ldr	w0, [x0, #784]
     880:	cmp	w0, #0x2
     884:	b.ne	b24 <_ZN4llvm3mca11Instruction13updatePendingEv+0x2ac>  // b.any
     888:	ldr	w2, [x3, #584]
     88c:	mov	w4, #0x30                  	// #48
     890:	ldr	x1, [x3, #576]
     894:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     898:	movk	x0, #0xaaab
     89c:	umull	x2, w2, w4
     8a0:	add	x4, x1, x2
     8a4:	asr	x2, x2, #4
     8a8:	mul	x2, x2, x0
     8ac:	cmp	xzr, x2, asr #2
     8b0:	asr	x0, x2, #2
     8b4:	b.eq	914 <_ZN4llvm3mca11Instruction13updatePendingEv+0x9c>  // b.none
     8b8:	add	x0, x0, x0, lsl #1
     8bc:	add	x0, x1, x0, lsl #6
     8c0:	b	8e8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x70>
     8c4:	ldrb	w2, [x1, #88]
     8c8:	cbz	w2, a88 <_ZN4llvm3mca11Instruction13updatePendingEv+0x210>
     8cc:	ldrb	w2, [x1, #136]
     8d0:	cbz	w2, a9c <_ZN4llvm3mca11Instruction13updatePendingEv+0x224>
     8d4:	ldrb	w2, [x1, #184]
     8d8:	cbz	w2, ab0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x238>
     8dc:	add	x1, x1, #0xc0
     8e0:	cmp	x1, x0
     8e4:	b.eq	900 <_ZN4llvm3mca11Instruction13updatePendingEv+0x88>  // b.none
     8e8:	ldrb	w2, [x1, #40]
     8ec:	cbnz	w2, 8c4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x4c>
     8f0:	cmp	x4, x1
     8f4:	mov	w0, #0x0                   	// #0
     8f8:	b.eq	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>  // b.none
     8fc:	ret
     900:	sub	x2, x4, x1
     904:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     908:	movk	x0, #0xaaab
     90c:	asr	x2, x2, #4
     910:	mul	x2, x2, x0
     914:	cmp	x2, #0x2
     918:	b.eq	9c4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x14c>  // b.none
     91c:	cmp	x2, #0x3
     920:	b.eq	9b8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x140>  // b.none
     924:	cmp	x2, #0x1
     928:	b.eq	9d0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x158>  // b.none
     92c:	ldr	w0, [x3, #24]
     930:	mov	w4, #0x88                  	// #136
     934:	ldr	x1, [x3, #16]
     938:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     93c:	movk	x2, #0xf0f1
     940:	umull	x0, w0, w4
     944:	add	x4, x1, x0
     948:	asr	x0, x0, #3
     94c:	mul	x0, x0, x2
     950:	cmp	xzr, x0, asr #2
     954:	asr	x2, x0, #2
     958:	b.eq	a4c <_ZN4llvm3mca11Instruction13updatePendingEv+0x1d4>  // b.none
     95c:	add	x2, x2, x2, lsl #4
     960:	add	x2, x1, x2, lsl #5
     964:	ldr	x0, [x1, #24]
     968:	cbz	x0, 988 <_ZN4llvm3mca11Instruction13updatePendingEv+0x110>
     96c:	cmp	x4, x1
     970:	mov	w0, #0x0                   	// #0
     974:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     978:	mov	w1, #0x3                   	// #3
     97c:	mov	w0, #0x1                   	// #1
     980:	str	w1, [x3, #784]
     984:	ret
     988:	ldr	w0, [x1, #40]
     98c:	cbnz	w0, 9a4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x12c>
     990:	ldr	x0, [x1, #160]
     994:	add	x5, x1, #0x88
     998:	cbz	x0, 9dc <_ZN4llvm3mca11Instruction13updatePendingEv+0x164>
     99c:	mov	x1, x5
     9a0:	b	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     9a4:	ldr	x5, [x1]
     9a8:	ldr	w5, [x5, #4]
     9ac:	cmp	w0, w5
     9b0:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     9b4:	b	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x118>
     9b8:	ldrb	w0, [x1, #40]
     9bc:	cbz	w0, 8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9c0:	add	x1, x1, #0x30
     9c4:	ldrb	w0, [x1, #40]
     9c8:	cbz	w0, 8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9cc:	add	x1, x1, #0x30
     9d0:	ldrb	w0, [x1, #40]
     9d4:	cbnz	w0, 92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     9d8:	b	8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9dc:	ldr	w0, [x1, #176]
     9e0:	cbnz	w0, ac4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>
     9e4:	ldr	x0, [x1, #296]
     9e8:	add	x5, x1, #0x110
     9ec:	cbnz	x0, 99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>
     9f0:	ldr	w0, [x1, #312]
     9f4:	cbz	w0, a08 <_ZN4llvm3mca11Instruction13updatePendingEv+0x190>
     9f8:	ldr	x6, [x1, #272]
     9fc:	ldr	w6, [x6, #4]
     a00:	cmp	w0, w6
     a04:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     a08:	ldr	x0, [x1, #432]
     a0c:	add	x5, x1, #0x198
     a10:	cbnz	x0, 99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>
     a14:	ldr	w0, [x1, #448]
     a18:	cbz	w0, a2c <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b4>
     a1c:	ldr	x6, [x1, #408]
     a20:	ldr	w6, [x6, #4]
     a24:	cmp	w0, w6
     a28:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     a2c:	add	x1, x1, #0x220
     a30:	cmp	x1, x2
     a34:	b.ne	964 <_ZN4llvm3mca11Instruction13updatePendingEv+0xec>  // b.any
     a38:	sub	x0, x4, x1
     a3c:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     a40:	movk	x2, #0xf0f1
     a44:	asr	x0, x0, #3
     a48:	mul	x0, x0, x2
     a4c:	cmp	x0, #0x2
     a50:	b.eq	afc <_ZN4llvm3mca11Instruction13updatePendingEv+0x284>  // b.none
     a54:	cmp	x0, #0x3
     a58:	b.eq	ad8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x260>  // b.none
     a5c:	cmp	x0, #0x1
     a60:	b.ne	978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>  // b.any
     a64:	ldr	x0, [x1, #24]
     a68:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     a6c:	ldr	w0, [x1, #40]
     a70:	cbz	w0, 978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>
     a74:	ldr	x2, [x1]
     a78:	ldr	w2, [x2, #4]
     a7c:	cmp	w0, w2
     a80:	b.cc	978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>  // b.lo, b.ul, b.last
     a84:	b	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     a88:	add	x1, x1, #0x30
     a8c:	mov	w0, #0x0                   	// #0
     a90:	cmp	x4, x1
     a94:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     a98:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     a9c:	add	x1, x1, #0x60
     aa0:	mov	w0, #0x0                   	// #0
     aa4:	cmp	x4, x1
     aa8:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     aac:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     ab0:	add	x1, x1, #0x90
     ab4:	mov	w0, #0x0                   	// #0
     ab8:	cmp	x4, x1
     abc:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     ac0:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     ac4:	ldr	x6, [x1, #136]
     ac8:	ldr	w6, [x6, #4]
     acc:	cmp	w0, w6
     ad0:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     ad4:	b	9e4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x16c>
     ad8:	ldr	x0, [x1, #24]
     adc:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     ae0:	ldr	w0, [x1, #40]
     ae4:	cbz	w0, af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x280>
     ae8:	ldr	x2, [x1]
     aec:	ldr	w2, [x2, #4]
     af0:	cmp	w0, w2
     af4:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     af8:	add	x1, x1, #0x88
     afc:	ldr	x0, [x1, #24]
     b00:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     b04:	ldr	w0, [x1, #40]
     b08:	cbz	w0, b1c <_ZN4llvm3mca11Instruction13updatePendingEv+0x2a4>
     b0c:	ldr	x2, [x1]
     b10:	ldr	w2, [x2, #4]
     b14:	cmp	w0, w2
     b18:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     b1c:	add	x1, x1, #0x88
     b20:	b	a64 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1ec>
     b24:	stp	x29, x30, [sp, #-16]!
     b28:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b2c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b30:	mov	x29, sp
     b34:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b38:	add	x3, x3, #0x0
     b3c:	add	x1, x1, #0x0
     b40:	add	x0, x0, #0x0
     b44:	mov	w2, #0xbe                  	// #190
     b48:	bl	0 <__assert_fail>
     b4c:	nop

0000000000000b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
     b50:	mov	x3, x0
     b54:	ldr	w0, [x0, #784]
     b58:	cmp	w0, #0x1
     b5c:	b.ne	e08 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x2b8>  // b.any
     b60:	ldr	w2, [x3, #584]
     b64:	mov	w4, #0x30                  	// #48
     b68:	ldr	x1, [x3, #576]
     b6c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     b70:	movk	x0, #0xaaab
     b74:	umull	x2, w2, w4
     b78:	add	x5, x1, x2
     b7c:	asr	x2, x2, #4
     b80:	mul	x2, x2, x0
     b84:	cmp	xzr, x2, asr #2
     b88:	asr	x0, x2, #2
     b8c:	b.eq	c48 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
     b90:	add	x0, x0, x0, lsl #1
     b94:	add	x0, x1, x0, lsl #6
     b98:	ldr	w4, [x1, #20]
     b9c:	ldrb	w2, [x1, #42]
     ba0:	cmp	w4, #0x0
     ba4:	eor	w2, w2, #0x1
     ba8:	cset	w4, gt
     bac:	tst	w4, w2
     bb0:	b.ne	bbc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x6c>  // b.any
     bb4:	ldrb	w2, [x1, #40]
     bb8:	cbz	w2, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     bbc:	ldr	w4, [x1, #68]
     bc0:	ldrb	w2, [x1, #90]
     bc4:	cmp	w4, #0x0
     bc8:	eor	w2, w2, #0x1
     bcc:	cset	w4, gt
     bd0:	tst	w4, w2
     bd4:	b.ne	be0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x90>  // b.any
     bd8:	ldrb	w2, [x1, #88]
     bdc:	cbz	w2, d00 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b0>
     be0:	ldr	w4, [x1, #116]
     be4:	ldrb	w2, [x1, #138]
     be8:	cmp	w4, #0x0
     bec:	eor	w2, w2, #0x1
     bf0:	cset	w4, gt
     bf4:	tst	w4, w2
     bf8:	b.ne	c04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xb4>  // b.any
     bfc:	ldrb	w2, [x1, #136]
     c00:	cbz	w2, d50 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x200>
     c04:	ldr	w4, [x1, #164]
     c08:	ldrb	w2, [x1, #186]
     c0c:	cmp	w4, #0x0
     c10:	eor	w2, w2, #0x1
     c14:	cset	w4, gt
     c18:	tst	w4, w2
     c1c:	b.ne	c28 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xd8>  // b.any
     c20:	ldrb	w2, [x1, #184]
     c24:	cbz	w2, d64 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x214>
     c28:	add	x1, x1, #0xc0
     c2c:	cmp	x0, x1
     c30:	b.ne	b98 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x48>  // b.any
     c34:	sub	x2, x5, x1
     c38:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     c3c:	movk	x0, #0xaaab
     c40:	asr	x2, x2, #4
     c44:	mul	x2, x2, x0
     c48:	cmp	x2, #0x2
     c4c:	b.eq	ddc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x28c>  // b.none
     c50:	cmp	x2, #0x3
     c54:	b.eq	db4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x264>  // b.none
     c58:	cmp	x2, #0x1
     c5c:	b.ne	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.any
     c60:	ldr	w2, [x1, #20]
     c64:	ldrb	w0, [x1, #42]
     c68:	cmp	w2, #0x0
     c6c:	eor	w0, w0, #0x1
     c70:	cset	w2, gt
     c74:	tst	w2, w0
     c78:	b.ne	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.any
     c7c:	ldrb	w0, [x1, #40]
     c80:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     c84:	nop
     c88:	ldr	w0, [x3, #24]
     c8c:	mov	w4, #0x88                  	// #136
     c90:	ldr	x1, [x3, #16]
     c94:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     c98:	movk	x2, #0xf0f1
     c9c:	umull	x0, w0, w4
     ca0:	add	x4, x1, x0
     ca4:	asr	x0, x0, #3
     ca8:	mul	x0, x0, x2
     cac:	cmp	xzr, x0, asr #2
     cb0:	asr	x2, x0, #2
     cb4:	b.eq	d28 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d8>  // b.none
     cb8:	add	x2, x2, x2, lsl #4
     cbc:	add	x0, x1, x2, lsl #5
     cc0:	b	ce8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x198>
     cc4:	ldr	x2, [x1, #160]
     cc8:	cbnz	x2, d78 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x228>
     ccc:	ldr	x2, [x1, #296]
     cd0:	cbnz	x2, d80 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x230>
     cd4:	ldr	x2, [x1, #432]
     cd8:	cbnz	x2, d88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     cdc:	add	x1, x1, #0x220
     ce0:	cmp	x0, x1
     ce4:	b.eq	d14 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c4>  // b.none
     ce8:	ldr	x2, [x1, #24]
     cec:	cbz	x2, cc4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x174>
     cf0:	cmp	x4, x1
     cf4:	mov	w0, #0x0                   	// #0
     cf8:	b.eq	d40 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1f0>  // b.none
     cfc:	ret
     d00:	add	x1, x1, #0x30
     d04:	cmp	x5, x1
     d08:	mov	w0, #0x0                   	// #0
     d0c:	b.eq	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.none
     d10:	ret
     d14:	sub	x0, x4, x1
     d18:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     d1c:	movk	x2, #0xf0f1
     d20:	asr	x0, x0, #3
     d24:	mul	x0, x0, x2
     d28:	cmp	x0, #0x2
     d2c:	b.eq	d9c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x24c>  // b.none
     d30:	cmp	x0, #0x3
     d34:	b.eq	d90 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.none
     d38:	cmp	x0, #0x1
     d3c:	b.eq	da8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.none
     d40:	mov	w1, #0x2                   	// #2
     d44:	mov	w0, #0x1                   	// #1
     d48:	str	w1, [x3, #784]
     d4c:	ret
     d50:	add	x1, x1, #0x60
     d54:	mov	w0, #0x0                   	// #0
     d58:	cmp	x5, x1
     d5c:	b.ne	d10 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c0>  // b.any
     d60:	b	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>
     d64:	add	x1, x1, #0x90
     d68:	mov	w0, #0x0                   	// #0
     d6c:	cmp	x5, x1
     d70:	b.ne	d10 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c0>  // b.any
     d74:	b	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>
     d78:	add	x1, x1, #0x88
     d7c:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d80:	add	x1, x1, #0x110
     d84:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d88:	add	x1, x1, #0x198
     d8c:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d90:	ldr	x0, [x1, #24]
     d94:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d98:	add	x1, x1, #0x88
     d9c:	ldr	x0, [x1, #24]
     da0:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     da4:	add	x1, x1, #0x88
     da8:	ldr	x0, [x1, #24]
     dac:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     db0:	b	d40 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1f0>
     db4:	ldr	w2, [x1, #20]
     db8:	ldrb	w0, [x1, #42]
     dbc:	cmp	w2, #0x0
     dc0:	eor	w0, w0, #0x1
     dc4:	cset	w2, gt
     dc8:	tst	w2, w0
     dcc:	b.ne	dd8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x288>  // b.any
     dd0:	ldrb	w0, [x1, #40]
     dd4:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     dd8:	add	x1, x1, #0x30
     ddc:	ldr	w2, [x1, #20]
     de0:	ldrb	w0, [x1, #42]
     de4:	cmp	w2, #0x0
     de8:	eor	w0, w0, #0x1
     dec:	cset	w2, gt
     df0:	tst	w2, w0
     df4:	b.ne	e00 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x2b0>  // b.any
     df8:	ldrb	w0, [x1, #40]
     dfc:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     e00:	add	x1, x1, #0x30
     e04:	b	c60 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x110>
     e08:	stp	x29, x30, [sp, #-16]!
     e0c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e10:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e14:	mov	x29, sp
     e18:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e1c:	add	x3, x3, #0x0
     e20:	add	x1, x1, #0x0
     e24:	add	x0, x0, #0x0
     e28:	mov	w2, #0xcc                  	// #204
     e2c:	bl	0 <__assert_fail>

0000000000000e30 <_ZN4llvm3mca11Instruction8dispatchEj>:
     e30:	stp	x29, x30, [sp, #-32]!
     e34:	mov	x29, sp
     e38:	ldr	w2, [x0, #784]
     e3c:	str	x19, [sp, #16]
     e40:	cbnz	w2, e7c <_ZN4llvm3mca11Instruction8dispatchEj+0x4c>
     e44:	mov	w2, #0x1                   	// #1
     e48:	str	w2, [x0, #784]
     e4c:	str	w1, [x0, #792]
     e50:	mov	x19, x0
     e54:	bl	b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     e58:	tst	w0, #0xff
     e5c:	b.ne	e6c <_ZN4llvm3mca11Instruction8dispatchEj+0x3c>  // b.any
     e60:	ldr	x19, [sp, #16]
     e64:	ldp	x29, x30, [sp], #32
     e68:	ret
     e6c:	mov	x0, x19
     e70:	ldr	x19, [sp, #16]
     e74:	ldp	x29, x30, [sp], #32
     e78:	b	878 <_ZN4llvm3mca11Instruction13updatePendingEv>
     e7c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e80:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e84:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e88:	add	x3, x3, #0x0
     e8c:	add	x1, x1, #0x0
     e90:	add	x0, x0, #0x0
     e94:	mov	w2, #0x9f                  	// #159
     e98:	bl	0 <__assert_fail>
     e9c:	nop

0000000000000ea0 <_ZN4llvm3mca11Instruction6updateEv>:
     ea0:	stp	x29, x30, [sp, #-32]!
     ea4:	mov	x29, sp
     ea8:	ldr	w1, [x0, #784]
     eac:	str	x19, [sp, #16]
     eb0:	mov	x19, x0
     eb4:	cmp	w1, #0x1
     eb8:	b.eq	ed0 <_ZN4llvm3mca11Instruction6updateEv+0x30>  // b.none
     ebc:	cmp	w1, #0x2
     ec0:	b.eq	ee0 <_ZN4llvm3mca11Instruction6updateEv+0x40>  // b.none
     ec4:	ldr	x19, [sp, #16]
     ec8:	ldp	x29, x30, [sp], #32
     ecc:	ret
     ed0:	bl	b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     ed4:	ldr	w1, [x19, #784]
     ed8:	cmp	w1, #0x2
     edc:	b.ne	ec4 <_ZN4llvm3mca11Instruction6updateEv+0x24>  // b.any
     ee0:	mov	x0, x19
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	b	878 <_ZN4llvm3mca11Instruction13updatePendingEv>

0000000000000ef0 <_ZN4llvm3mca11Instruction10cycleEventEv>:
     ef0:	stp	x29, x30, [sp, #-48]!
     ef4:	mov	x29, sp
     ef8:	stp	x19, x20, [sp, #16]
     efc:	mov	x20, x0
     f00:	ldr	w0, [x0, #784]
     f04:	cmp	w0, #0x3
     f08:	b.eq	f78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x88>  // b.none
     f0c:	str	x21, [sp, #32]
     f10:	sub	w1, w0, #0x1
     f14:	cmp	w1, #0x1
     f18:	b.ls	f84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x94>  // b.plast
     f1c:	cmp	w0, #0x4
     f20:	b.ne	1008 <_ZN4llvm3mca11Instruction10cycleEventEv+0x118>  // b.any
     f24:	ldr	w0, [x20, #788]
     f28:	cbz	w0, 1028 <_ZN4llvm3mca11Instruction10cycleEventEv+0x138>
     f2c:	ldr	w21, [x20, #24]
     f30:	mov	w1, #0x88                  	// #136
     f34:	ldr	x19, [x20, #16]
     f38:	umaddl	x21, w21, w1, x19
     f3c:	cmp	x19, x21
     f40:	b.eq	f60 <_ZN4llvm3mca11Instruction10cycleEventEv+0x70>  // b.none
     f44:	nop
     f48:	mov	x0, x19
     f4c:	add	x19, x19, #0x88
     f50:	bl	3b0 <_ZN4llvm3mca10WriteState10cycleEventEv>
     f54:	cmp	x21, x19
     f58:	b.ne	f48 <_ZN4llvm3mca11Instruction10cycleEventEv+0x58>  // b.any
     f5c:	ldr	w0, [x20, #788]
     f60:	sub	w0, w0, #0x1
     f64:	str	w0, [x20, #788]
     f68:	cbnz	w0, ff8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x108>
     f6c:	mov	w0, #0x5                   	// #5
     f70:	ldr	x21, [sp, #32]
     f74:	str	w0, [x20, #784]
     f78:	ldp	x19, x20, [sp, #16]
     f7c:	ldp	x29, x30, [sp], #48
     f80:	ret
     f84:	ldr	w21, [x20, #584]
     f88:	mov	w1, #0x30                  	// #48
     f8c:	ldr	x0, [x20, #576]
     f90:	mov	x19, x0
     f94:	umaddl	x21, w21, w1, x0
     f98:	cmp	x21, x0
     f9c:	b.eq	fb4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xc4>  // b.none
     fa0:	mov	x0, x19
     fa4:	add	x19, x19, #0x30
     fa8:	bl	3d8 <_ZN4llvm3mca9ReadState10cycleEventEv>
     fac:	cmp	x21, x19
     fb0:	b.ne	fa0 <_ZN4llvm3mca11Instruction10cycleEventEv+0xb0>  // b.any
     fb4:	ldr	w21, [x20, #24]
     fb8:	mov	w0, #0x88                  	// #136
     fbc:	ldr	x19, [x20, #16]
     fc0:	umaddl	x21, w21, w0, x19
     fc4:	cmp	x19, x21
     fc8:	b.eq	fe4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xf4>  // b.none
     fcc:	nop
     fd0:	mov	x0, x19
     fd4:	add	x19, x19, #0x88
     fd8:	bl	3b0 <_ZN4llvm3mca10WriteState10cycleEventEv>
     fdc:	cmp	x21, x19
     fe0:	b.ne	fd0 <_ZN4llvm3mca11Instruction10cycleEventEv+0xe0>  // b.any
     fe4:	mov	x0, x20
     fe8:	ldp	x19, x20, [sp, #16]
     fec:	ldr	x21, [sp, #32]
     ff0:	ldp	x29, x30, [sp], #48
     ff4:	b	ea0 <_ZN4llvm3mca11Instruction6updateEv>
     ff8:	ldp	x19, x20, [sp, #16]
     ffc:	ldr	x21, [sp, #32]
    1000:	ldp	x29, x30, [sp], #48
    1004:	ret
    1008:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    100c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1010:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1014:	add	x3, x3, #0x0
    1018:	add	x1, x1, #0x0
    101c:	add	x0, x0, #0x0
    1020:	mov	w2, #0xf2                  	// #242
    1024:	bl	0 <__assert_fail>
    1028:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    102c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1030:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1034:	add	x3, x3, #0x0
    1038:	add	x1, x1, #0x0
    103c:	add	x0, x0, #0x0
    1040:	mov	w2, #0xf3                  	// #243
    1044:	bl	0 <__assert_fail>

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	ldr	x19, [x0]
  14:	lsl	x0, x1, #3
  18:	str	x21, [sp, #32]
  1c:	cmp	xzr, x0, asr #5
  20:	add	x21, x19, x0
  24:	b.eq	188 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x188>  // b.none
  28:	asr	x0, x0, #5
  2c:	add	x20, x19, x0, lsl #5
  30:	b	88 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x88>
  34:	ldr	x0, [x19, #8]
  38:	ldr	x1, [x0]
  3c:	ldr	x1, [x1, #24]
  40:	blr	x1
  44:	tst	w0, #0xff
  48:	b.ne	b8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb8>  // b.any
  4c:	ldr	x0, [x19, #16]
  50:	ldr	x1, [x0]
  54:	ldr	x1, [x1, #24]
  58:	blr	x1
  5c:	tst	w0, #0xff
  60:	b.ne	d4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xd4>  // b.any
  64:	ldr	x0, [x19, #24]
  68:	ldr	x1, [x0]
  6c:	ldr	x1, [x1, #24]
  70:	blr	x1
  74:	tst	w0, #0xff
  78:	b.ne	f0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf0>  // b.any
  7c:	add	x19, x19, #0x20
  80:	cmp	x19, x20
  84:	b.eq	10c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x10c>  // b.none
  88:	ldr	x0, [x19]
  8c:	ldr	x1, [x0]
  90:	ldr	x1, [x1, #24]
  94:	blr	x1
  98:	tst	w0, #0xff
  9c:	b.eq	34 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x34>  // b.none
  a0:	cmp	x21, x19
  a4:	cset	w0, ne  // ne = any
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	add	x19, x19, #0x8
  bc:	cmp	x21, x19
  c0:	cset	w0, ne  // ne = any
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldr	x21, [sp, #32]
  cc:	ldp	x29, x30, [sp], #48
  d0:	ret
  d4:	add	x19, x19, #0x10
  d8:	cmp	x21, x19
  dc:	cset	w0, ne  // ne = any
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldr	x21, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret
  f0:	add	x19, x19, #0x18
  f4:	cmp	x21, x19
  f8:	cset	w0, ne  // ne = any
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldr	x21, [sp, #32]
 104:	ldp	x29, x30, [sp], #48
 108:	ret
 10c:	sub	x1, x21, x19
 110:	asr	x1, x1, #3
 114:	cmp	x1, #0x2
 118:	b.eq	168 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x168>  // b.none
 11c:	cmp	x1, #0x3
 120:	b.eq	14c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x14c>  // b.none
 124:	cmp	x1, #0x1
 128:	mov	w0, #0x0                   	// #0
 12c:	b.ne	a8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa8>  // b.any
 130:	ldr	x0, [x19]
 134:	ldr	x1, [x0]
 138:	ldr	x1, [x1, #24]
 13c:	blr	x1
 140:	ands	w0, w0, #0xff
 144:	b.eq	a8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa8>  // b.none
 148:	b	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>
 14c:	ldr	x0, [x19]
 150:	ldr	x1, [x0]
 154:	ldr	x1, [x1, #24]
 158:	blr	x1
 15c:	tst	w0, #0xff
 160:	b.ne	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>  // b.any
 164:	add	x19, x19, #0x8
 168:	ldr	x0, [x19]
 16c:	ldr	x1, [x0]
 170:	ldr	x1, [x1, #24]
 174:	blr	x1
 178:	tst	w0, #0xff
 17c:	b.ne	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>  // b.any
 180:	add	x19, x19, #0x8
 184:	b	130 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x130>
 188:	asr	x1, x0, #3
 18c:	b	114 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>

0000000000000190 <_ZN4llvm3mca8Pipeline8runCycleEv>:
 190:	stp	x29, x30, [sp, #-128]!
 194:	mov	x1, #0x1                   	// #1
 198:	mov	x29, sp
 19c:	stp	x19, x20, [sp, #16]
 1a0:	mov	x19, x8
 1a4:	stp	x21, x22, [sp, #32]
 1a8:	mov	x21, x0
 1ac:	ldr	w0, [x0, #8]
 1b0:	stp	x23, x24, [sp, #48]
 1b4:	str	x25, [sp, #64]
 1b8:	str	x1, [x8]
 1bc:	ldr	x23, [x21]
 1c0:	add	x20, x23, w0, uxtw #3
 1c4:	cmp	x23, x20
 1c8:	b.eq	1f0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x60>  // b.none
 1cc:	adrp	x22, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 1d0:	mov	x24, x1
 1d4:	add	x25, sp, #0x58
 1d8:	add	x22, x22, #0x0
 1dc:	ands	x1, x1, #0xfffffffffffffffe
 1e0:	b.eq	2ac <_ZN4llvm3mca8Pipeline8runCycleEv+0x11c>  // b.none
 1e4:	ldr	w0, [x21, #8]
 1e8:	orr	x1, x1, #0x1
 1ec:	str	x1, [x19]
 1f0:	str	wzr, [sp, #112]
 1f4:	str	xzr, [sp, #120]
 1f8:	cbz	w0, 390 <_ZN4llvm3mca8Pipeline8runCycleEv+0x200>
 1fc:	ldr	x1, [x21]
 200:	adrp	x22, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 204:	ldr	x0, [x19]
 208:	add	x22, x22, #0x0
 20c:	ldr	x20, [x1]
 210:	add	x24, sp, #0x70
 214:	add	x23, sp, #0x60
 218:	ands	x0, x0, #0xfffffffffffffffe
 21c:	b.eq	30c <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>  // b.none
 220:	orr	x0, x0, #0x1
 224:	str	x0, [x19]
 228:	ldr	x1, [x21]
 22c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 230:	ldr	w22, [x21, #8]
 234:	mov	x20, x1
 238:	add	x22, x1, x22, lsl #3
 23c:	cmp	x1, x22
 240:	b.eq	290 <_ZN4llvm3mca8Pipeline8runCycleEv+0x100>  // b.none
 244:	add	x21, x0, #0x0
 248:	add	x24, sp, #0x68
 24c:	mov	x23, #0x1                   	// #1
 250:	ldr	x0, [x20]
 254:	ldr	x1, [x0]
 258:	ldr	x1, [x1, #40]
 25c:	cmp	x1, x21
 260:	b.ne	384 <_ZN4llvm3mca8Pipeline8runCycleEv+0x1f4>  // b.any
 264:	str	x23, [sp, #104]
 268:	ldr	x1, [x19]
 26c:	tbnz	w1, #0, 304 <_ZN4llvm3mca8Pipeline8runCycleEv+0x174>
 270:	tst	x1, #0xfffffffffffffffe
 274:	b.ne	304 <_ZN4llvm3mca8Pipeline8runCycleEv+0x174>  // b.any
 278:	ldr	x0, [sp, #104]
 27c:	orr	x0, x0, x1
 280:	orr	x1, x0, #0x1
 284:	str	x1, [x19]
 288:	tst	x0, #0xfffffffffffffffe
 28c:	b.eq	370 <_ZN4llvm3mca8Pipeline8runCycleEv+0x1e0>  // b.none
 290:	mov	x0, x19
 294:	ldp	x19, x20, [sp, #16]
 298:	ldp	x21, x22, [sp, #32]
 29c:	ldp	x23, x24, [sp, #48]
 2a0:	ldr	x25, [sp, #64]
 2a4:	ldp	x29, x30, [sp], #128
 2a8:	ret
 2ac:	ldur	x0, [x20, #-8]
 2b0:	ldr	x2, [x0]
 2b4:	ldr	x2, [x2, #32]
 2b8:	str	xzr, [x19]
 2bc:	cmp	x2, x22
 2c0:	b.ne	2ec <_ZN4llvm3mca8Pipeline8runCycleEv+0x15c>  // b.any
 2c4:	str	x24, [sp, #88]
 2c8:	ldr	x0, [sp, #88]
 2cc:	sub	x20, x20, #0x8
 2d0:	cmp	x23, x20
 2d4:	orr	x1, x0, x1
 2d8:	orr	x1, x1, #0x1
 2dc:	str	x1, [x19]
 2e0:	b.ne	1dc <_ZN4llvm3mca8Pipeline8runCycleEv+0x4c>  // b.any
 2e4:	ldr	w0, [x21, #8]
 2e8:	b	1f0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x60>
 2ec:	mov	x8, x25
 2f0:	blr	x2
 2f4:	ldr	x1, [x19]
 2f8:	tbnz	w1, #0, 304 <_ZN4llvm3mca8Pipeline8runCycleEv+0x174>
 2fc:	tst	x1, #0xfffffffffffffffe
 300:	b.eq	2c8 <_ZN4llvm3mca8Pipeline8runCycleEv+0x138>  // b.none
 304:	mov	x0, x19
 308:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 30c:	ldr	x0, [x20]
 310:	ldr	x2, [x0, #16]
 314:	str	xzr, [x19]
 318:	cmp	x2, x22
 31c:	b.ne	354 <_ZN4llvm3mca8Pipeline8runCycleEv+0x1c4>  // b.any
 320:	ldr	x2, [x0, #48]
 324:	mov	x8, x23
 328:	mov	x1, x24
 32c:	mov	x0, x20
 330:	blr	x2
 334:	ldr	x2, [x19]
 338:	tbnz	w2, #0, 304 <_ZN4llvm3mca8Pipeline8runCycleEv+0x174>
 33c:	tst	x2, #0xfffffffffffffffe
 340:	b.ne	304 <_ZN4llvm3mca8Pipeline8runCycleEv+0x174>  // b.any
 344:	ldr	x0, [sp, #96]
 348:	orr	x0, x0, x2
 34c:	orr	x0, x0, #0x1
 350:	b	218 <_ZN4llvm3mca8Pipeline8runCycleEv+0x88>
 354:	mov	x1, x24
 358:	mov	x0, x20
 35c:	blr	x2
 360:	tst	w0, #0xff
 364:	b.eq	228 <_ZN4llvm3mca8Pipeline8runCycleEv+0x98>  // b.none
 368:	ldr	x0, [x20]
 36c:	b	320 <_ZN4llvm3mca8Pipeline8runCycleEv+0x190>
 370:	str	xzr, [x19]
 374:	add	x20, x20, #0x8
 378:	cmp	x22, x20
 37c:	b.ne	250 <_ZN4llvm3mca8Pipeline8runCycleEv+0xc0>  // b.any
 380:	b	290 <_ZN4llvm3mca8Pipeline8runCycleEv+0x100>
 384:	mov	x8, x24
 388:	blr	x1
 38c:	b	268 <_ZN4llvm3mca8Pipeline8runCycleEv+0xd8>
 390:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 394:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 398:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 39c:	add	x3, x3, #0x0
 3a0:	add	x1, x1, #0x0
 3a4:	add	x0, x0, #0x0
 3a8:	mov	w2, #0x95                  	// #149
 3ac:	bl	0 <__assert_fail>

00000000000003b0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 3b0:	stp	x29, x30, [sp, #-96]!
 3b4:	mov	x29, sp
 3b8:	stp	x19, x20, [sp, #16]
 3bc:	mov	x19, x0
 3c0:	ldr	x0, [x1]
 3c4:	stp	x21, x22, [sp, #32]
 3c8:	cbz	x0, 558 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1a8>
 3cc:	ldr	w20, [x19, #8]
 3d0:	mov	x21, x1
 3d4:	cbnz	w20, 428 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x78>
 3d8:	stp	x25, x26, [sp, #64]
 3dc:	ldr	w0, [x19, #12]
 3e0:	cmp	w20, w0
 3e4:	mov	w22, w0
 3e8:	b.cs	44c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x9c>  // b.hs, b.nlast
 3ec:	ldr	x25, [x19]
 3f0:	mov	w1, w20
 3f4:	ldr	x0, [x21]
 3f8:	str	xzr, [x21]
 3fc:	str	x0, [x25, x1, lsl #3]
 400:	add	x1, x1, #0x1
 404:	cmp	x1, x22
 408:	b.hi	534 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x184>  // b.pmore
 40c:	add	w20, w20, #0x1
 410:	ldp	x21, x22, [sp, #32]
 414:	ldp	x25, x26, [sp, #64]
 418:	str	w20, [x19, #8]
 41c:	ldp	x19, x20, [sp, #16]
 420:	ldp	x29, x30, [sp], #96
 424:	ret
 428:	mov	x1, #0xfffffffffffffff8    	// #-8
 42c:	ldr	x2, [x19]
 430:	add	x1, x1, w20, uxtw #3
 434:	ldr	x1, [x2, x1]
 438:	ldr	x2, [x1, #8]
 43c:	cbnz	x2, 580 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1d0>
 440:	stp	x25, x26, [sp, #64]
 444:	str	x0, [x1, #8]
 448:	b	3dc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x2c>
 44c:	add	x1, x22, #0x2
 450:	stp	x23, x24, [sp, #48]
 454:	mov	x0, #0xffffffff            	// #4294967295
 458:	orr	x1, x1, x1, lsr #1
 45c:	orr	x1, x1, x1, lsr #2
 460:	orr	x1, x1, x1, lsr #4
 464:	orr	x1, x1, x1, lsr #8
 468:	orr	x1, x1, x1, lsr #16
 46c:	orr	x1, x1, x1, lsr #32
 470:	add	x1, x1, #0x1
 474:	cmp	x1, x0
 478:	b.hi	520 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x170>  // b.pmore
 47c:	lsl	x0, x1, #3
 480:	mov	w24, w1
 484:	mov	x22, x1
 488:	str	x1, [sp, #88]
 48c:	bl	0 <malloc>
 490:	mov	x25, x0
 494:	cbz	x0, 5a8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1f8>
 498:	ldr	x1, [x19]
 49c:	ubfiz	x20, x20, #3, #32
 4a0:	add	x23, x1, x20
 4a4:	cmp	x1, x23
 4a8:	b.eq	4f8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x148>  // b.none
 4ac:	mov	x0, x25
 4b0:	ldr	x2, [x1]
 4b4:	str	xzr, [x1], #8
 4b8:	str	x2, [x0], #8
 4bc:	cmp	x23, x1
 4c0:	b.ne	4b0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x100>  // b.any
 4c4:	ldr	x26, [x19]
 4c8:	add	x23, x26, x20
 4cc:	cmp	x26, x23
 4d0:	b.eq	4f8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x148>  // b.none
 4d4:	nop
 4d8:	ldr	x0, [x23, #-8]!
 4dc:	cbz	x0, 4ec <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x13c>
 4e0:	ldr	x1, [x0]
 4e4:	ldr	x1, [x1, #8]
 4e8:	blr	x1
 4ec:	cmp	x26, x23
 4f0:	b.ne	4d8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x128>  // b.any
 4f4:	ldr	x23, [x19]
 4f8:	add	x0, x19, #0x10
 4fc:	cmp	x23, x0
 500:	b.eq	50c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x15c>  // b.none
 504:	mov	x0, x23
 508:	bl	0 <free>
 50c:	ldr	w20, [x19, #8]
 510:	str	x25, [x19]
 514:	str	w24, [x19, #12]
 518:	ldp	x23, x24, [sp, #48]
 51c:	b	3f0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x40>
 520:	mov	x22, x0
 524:	mov	x1, x0
 528:	mov	w24, #0xffffffff            	// #-1
 52c:	mov	x0, #0x7fffffff8           	// #34359738360
 530:	b	488 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xd8>
 534:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 538:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 53c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 540:	add	x3, x3, #0x0
 544:	add	x1, x1, #0x0
 548:	add	x0, x0, #0x0
 54c:	mov	w2, #0x43                  	// #67
 550:	stp	x23, x24, [sp, #48]
 554:	bl	0 <__assert_fail>
 558:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 55c:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 560:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 564:	add	x3, x3, #0x0
 568:	add	x1, x1, #0x0
 56c:	add	x0, x0, #0x0
 570:	mov	w2, #0x4c                  	// #76
 574:	stp	x23, x24, [sp, #48]
 578:	stp	x25, x26, [sp, #64]
 57c:	bl	0 <__assert_fail>
 580:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 584:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 588:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 58c:	add	x3, x3, #0x0
 590:	add	x1, x1, #0x0
 594:	add	x0, x0, #0x0
 598:	mov	w2, #0x3a                  	// #58
 59c:	stp	x23, x24, [sp, #48]
 5a0:	stp	x25, x26, [sp, #64]
 5a4:	bl	0 <__assert_fail>
 5a8:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5ac:	mov	w1, #0x1                   	// #1
 5b0:	add	x0, x0, #0x0
 5b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 5b8:	ldr	w20, [x19, #8]
 5bc:	b	498 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xe8>

00000000000005c0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 5c0:	stp	x29, x30, [sp, #-48]!
 5c4:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 5c8:	mov	x29, sp
 5cc:	ldr	x1, [x1]
 5d0:	stp	x19, x20, [sp, #16]
 5d4:	mov	x20, x0
 5d8:	ldrb	w0, [x1]
 5dc:	cbnz	w0, 650 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x90>
 5e0:	ldr	x19, [x20, #104]
 5e4:	add	x20, x20, #0x58
 5e8:	cmp	x20, x19
 5ec:	b.eq	644 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x84>  // b.none
 5f0:	str	x21, [sp, #32]
 5f4:	adrp	x21, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5f8:	add	x21, x21, #0x0
 5fc:	b	614 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x54>
 600:	mov	x0, x19
 604:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 608:	mov	x19, x0
 60c:	cmp	x20, x0
 610:	b.eq	640 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x80>  // b.none
 614:	ldr	x0, [x19, #32]
 618:	ldr	x1, [x0]
 61c:	ldr	x1, [x1]
 620:	cmp	x1, x21
 624:	b.eq	600 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x40>  // b.none
 628:	blr	x1
 62c:	mov	x0, x19
 630:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 634:	mov	x19, x0
 638:	cmp	x20, x0
 63c:	b.ne	614 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x54>  // b.any
 640:	ldr	x21, [sp, #32]
 644:	ldp	x19, x20, [sp, #16]
 648:	ldp	x29, x30, [sp], #48
 64c:	ret
 650:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 654:	add	x0, x0, #0x0
 658:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 65c:	tst	w0, #0xff
 660:	b.eq	5e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>  // b.none
 664:	bl	0 <_ZN4llvm4dbgsEv>
 668:	mov	x2, x0
 66c:	ldp	x1, x3, [x0, #16]
 670:	sub	x1, x1, x3
 674:	cmp	x1, #0x11
 678:	b.ls	6d0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x110>  // b.plast
 67c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 680:	add	x0, x0, #0x0
 684:	ldp	x4, x5, [x0]
 688:	stp	x4, x5, [x3]
 68c:	ldrh	w0, [x0, #16]
 690:	strh	w0, [x3, #16]
 694:	ldr	x0, [x2, #24]
 698:	add	x0, x0, #0x12
 69c:	str	x0, [x2, #24]
 6a0:	ldr	w1, [x20, #128]
 6a4:	mov	x0, x2
 6a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 6ac:	mov	x1, x0
 6b0:	ldp	x3, x2, [x0, #16]
 6b4:	cmp	x3, x2
 6b8:	b.ls	6e8 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x128>  // b.plast
 6bc:	add	x0, x2, #0x1
 6c0:	str	x0, [x1, #24]
 6c4:	mov	w0, #0xa                   	// #10
 6c8:	strb	w0, [x2]
 6cc:	b	5e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>
 6d0:	mov	x2, #0x12                  	// #18
 6d4:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 6d8:	add	x1, x1, #0x0
 6dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 6e0:	mov	x2, x0
 6e4:	b	6a0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xe0>
 6e8:	mov	w1, #0xa                   	// #10
 6ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 6f0:	b	5e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>
 6f4:	nop

00000000000006f8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 6f8:	stp	x29, x30, [sp, #-48]!
 6fc:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 700:	mov	x29, sp
 704:	ldr	x1, [x1]
 708:	stp	x19, x20, [sp, #16]
 70c:	mov	x20, x0
 710:	ldrb	w0, [x1]
 714:	cbnz	w0, 788 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x90>
 718:	ldr	x19, [x20, #104]
 71c:	add	x20, x20, #0x58
 720:	cmp	x20, x19
 724:	b.eq	77c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x84>  // b.none
 728:	str	x21, [sp, #32]
 72c:	adrp	x21, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 730:	add	x21, x21, #0x0
 734:	b	74c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x54>
 738:	mov	x0, x19
 73c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 740:	mov	x19, x0
 744:	cmp	x20, x0
 748:	b.eq	778 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x80>  // b.none
 74c:	ldr	x0, [x19, #32]
 750:	ldr	x1, [x0]
 754:	ldr	x1, [x1, #8]
 758:	cmp	x1, x21
 75c:	b.eq	738 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x40>  // b.none
 760:	blr	x1
 764:	mov	x0, x19
 768:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 76c:	mov	x19, x0
 770:	cmp	x20, x0
 774:	b.ne	74c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x54>  // b.any
 778:	ldr	x21, [sp, #32]
 77c:	ldp	x19, x20, [sp, #16]
 780:	ldp	x29, x30, [sp], #48
 784:	ret
 788:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 78c:	add	x0, x0, #0x0
 790:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 794:	tst	w0, #0xff
 798:	b.eq	718 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>  // b.none
 79c:	bl	0 <_ZN4llvm4dbgsEv>
 7a0:	mov	x2, x0
 7a4:	ldp	x1, x3, [x0, #16]
 7a8:	sub	x1, x1, x3
 7ac:	cmp	x1, #0xe
 7b0:	b.ls	80c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x114>  // b.plast
 7b4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 7b8:	add	x0, x0, #0x0
 7bc:	ldr	x1, [x0]
 7c0:	str	x1, [x3]
 7c4:	ldur	x0, [x0, #7]
 7c8:	stur	x0, [x3, #7]
 7cc:	ldr	x0, [x2, #24]
 7d0:	add	x0, x0, #0xf
 7d4:	str	x0, [x2, #24]
 7d8:	ldr	w1, [x20, #128]
 7dc:	mov	x0, x2
 7e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 7e4:	mov	x1, x0
 7e8:	ldp	x3, x2, [x0, #16]
 7ec:	cmp	x3, x2
 7f0:	b.eq	824 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x12c>  // b.none
 7f4:	mov	w0, #0xa                   	// #10
 7f8:	strb	w0, [x2]
 7fc:	ldr	x0, [x1, #24]
 800:	add	x0, x0, #0x1
 804:	str	x0, [x1, #24]
 808:	b	718 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>
 80c:	mov	x2, #0xf                   	// #15
 810:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 814:	add	x1, x1, #0x0
 818:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 81c:	mov	x2, x0
 820:	b	7d8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xe0>
 824:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 828:	mov	x2, #0x1                   	// #1
 82c:	add	x1, x1, #0x0
 830:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 834:	b	718 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>

0000000000000838 <_ZN4llvm3mca8Pipeline3runEv>:
 838:	stp	x29, x30, [sp, #-64]!
 83c:	mov	x29, sp
 840:	stp	x19, x20, [sp, #16]
 844:	mov	x19, x0
 848:	ldr	w0, [x0, #8]
 84c:	str	x21, [sp, #32]
 850:	cbz	w0, 8f0 <_ZN4llvm3mca8Pipeline3runEv+0xb8>
 854:	mov	x20, x8
 858:	add	x21, sp, #0x38
 85c:	mov	x0, x19
 860:	bl	5c0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 864:	mov	x0, x19
 868:	mov	x8, x21
 86c:	bl	190 <_ZN4llvm3mca8Pipeline8runCycleEv>
 870:	ldr	x0, [sp, #56]
 874:	ands	x0, x0, #0xfffffffffffffffe
 878:	b.eq	8a0 <_ZN4llvm3mca8Pipeline3runEv+0x68>  // b.none
 87c:	ldrb	w1, [x20, #8]
 880:	str	x0, [x20]
 884:	orr	w0, w1, #0x3
 888:	strb	w0, [x20, #8]
 88c:	mov	x0, x20
 890:	ldp	x19, x20, [sp, #16]
 894:	ldr	x21, [sp, #32]
 898:	ldp	x29, x30, [sp], #64
 89c:	ret
 8a0:	mov	x0, x19
 8a4:	bl	6f8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 8a8:	ldr	w1, [x19, #128]
 8ac:	mov	x0, x19
 8b0:	add	w1, w1, #0x1
 8b4:	str	w1, [x19, #128]
 8b8:	bl	0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 8bc:	tst	w0, #0xff
 8c0:	b.ne	85c <_ZN4llvm3mca8Pipeline3runEv+0x24>  // b.any
 8c4:	ldrb	w0, [x20, #8]
 8c8:	ldr	w1, [x19, #128]
 8cc:	and	w0, w0, #0xfffffffc
 8d0:	str	w1, [x20]
 8d4:	orr	w0, w0, #0x2
 8d8:	strb	w0, [x20, #8]
 8dc:	mov	x0, x20
 8e0:	ldp	x19, x20, [sp, #16]
 8e4:	ldr	x21, [sp, #32]
 8e8:	ldp	x29, x30, [sp], #64
 8ec:	ret
 8f0:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 8f4:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 8f8:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 8fc:	add	x3, x3, #0x0
 900:	add	x1, x1, #0x0
 904:	add	x0, x0, #0x0
 908:	mov	w2, #0x26                  	// #38
 90c:	bl	0 <__assert_fail>

0000000000000910 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
 910:	stp	x29, x30, [sp, #-48]!
 914:	mov	x29, sp
 918:	stp	x19, x20, [sp, #16]
 91c:	mov	x20, x0
 920:	str	x1, [sp, #40]
 924:	cbz	x1, 934 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x24>
 928:	add	x1, sp, #0x28
 92c:	add	x0, x0, #0x50
 930:	bl	0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 934:	ldr	x19, [x20]
 938:	ldr	w20, [x20, #8]
 93c:	add	x20, x19, x20, lsl #3
 940:	cmp	x19, x20
 944:	b.eq	95c <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x4c>  // b.none
 948:	ldr	x0, [x19], #8
 94c:	ldr	x1, [sp, #40]
 950:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 954:	cmp	x20, x19
 958:	b.ne	948 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x38>  // b.any
 95c:	ldp	x19, x20, [sp, #16]
 960:	ldp	x29, x30, [sp], #48
 964:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	add	x23, x0, #0x8
  24:	cbz	x19, 128 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x128>
  28:	ldr	x21, [x1]
  2c:	mov	w1, #0x1                   	// #1
  30:	ldr	x2, [x19, #32]
  34:	cmp	x21, x2
  38:	b.cs	5c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x5c>  // b.hs, b.nlast
  3c:	nop
  40:	ldr	x0, [x19, #16]
  44:	cbz	x0, 68 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x68>
  48:	mov	x19, x0
  4c:	mov	w1, #0x1                   	// #1
  50:	ldr	x2, [x19, #32]
  54:	cmp	x21, x2
  58:	b.cc	40 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x40>  // b.lo, b.ul, b.last
  5c:	ldr	x0, [x19, #24]
  60:	mov	w1, #0x0                   	// #0
  64:	cbnz	x0, 48 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x48>
  68:	cbnz	w1, d8 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xd8>
  6c:	cmp	x21, x2
  70:	b.ls	fc <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xfc>  // b.plast
  74:	cmp	x23, x19
  78:	mov	w24, #0x1                   	// #1
  7c:	b.ne	118 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x118>  // b.any
  80:	mov	x0, #0x28                  	// #40
  84:	bl	0 <_Znwm>
  88:	mov	x21, x0
  8c:	mov	x3, x23
  90:	ldr	x4, [x22]
  94:	mov	x2, x19
  98:	str	x4, [x21, #32]
  9c:	mov	w0, w24
  a0:	mov	x1, x21
  a4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  a8:	ldr	x2, [x20, #40]
  ac:	mov	x3, #0x1                   	// #1
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	x0, x21
  b8:	add	x2, x2, x3
  bc:	str	x2, [x20, #40]
  c0:	bfxil	x1, x3, #0, #8
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	ldr	x0, [x20, #24]
  dc:	cmp	x19, x0
  e0:	b.eq	74 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x74>  // b.none
  e4:	mov	x0, x19
  e8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  ec:	ldr	x1, [x0, #32]
  f0:	cmp	x21, x1
  f4:	b.hi	74 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x74>  // b.pmore
  f8:	mov	x19, x0
  fc:	mov	x0, x19
 100:	mov	x1, #0x0                   	// #0
 104:	ldp	x19, x20, [sp, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	ldr	x0, [x19, #32]
 11c:	cmp	x21, x0
 120:	cset	w24, cc  // cc = lo, ul, last
 124:	b	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x80>
 128:	ldr	x0, [x0, #24]
 12c:	mov	x19, x23
 130:	cmp	x23, x0
 134:	b.eq	140 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x140>  // b.none
 138:	ldr	x21, [x1]
 13c:	b	e4 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xe4>
 140:	mov	w24, #0x1                   	// #1
 144:	b	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x80>

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
   0:	adrp	x6, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
   4:	add	x2, x0, #0x18
   8:	str	xzr, [x0, #8]
   c:	ldr	x6, [x6]
  10:	str	wzr, [x0, #24]
  14:	str	xzr, [x0, #32]
  18:	stp	x2, x2, [x2, #16]
  1c:	add	x6, x6, #0x10
  20:	str	xzr, [x2, #32]
  24:	str	x6, [x0]
  28:	stp	w3, w3, [x0, #64]
  2c:	str	wzr, [x0, #72]
  30:	str	wzr, [x0, #80]
  34:	stp	xzr, x1, [x0, #88]
  38:	stp	x4, x5, [x0, #104]
  3c:	cbnz	w3, 4c <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x4c>
  40:	ldr	x1, [x1, #152]
  44:	ldr	w1, [x1]
  48:	str	w1, [x0, #64]
  4c:	ret

0000000000000050 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  50:	stp	x29, x30, [sp, #-112]!
  54:	adrp	x5, 0 <_ZN4llvm9DebugFlagE>
  58:	mov	x29, sp
  5c:	ldr	x5, [x5]
  60:	stp	x19, x20, [sp, #16]
  64:	mov	x19, x0
  68:	stp	x21, x22, [sp, #32]
  6c:	mov	x21, x1
  70:	ldrb	w0, [x5]
  74:	stp	x23, x24, [sp, #48]
  78:	mov	w22, w4
  7c:	mov	x24, x2
  80:	mov	x23, x3
  84:	cbnz	w0, 114 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xc4>
  88:	ldr	x20, [x19, #40]
  8c:	mov	w0, #0x6                   	// #6
  90:	str	w0, [sp, #72]
  94:	add	x19, x19, #0x18
  98:	stp	x21, x24, [sp, #80]
  9c:	cmp	x20, x19
  a0:	str	x23, [sp, #96]
  a4:	str	w22, [sp, #104]
  a8:	b.eq	100 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xb0>  // b.none
  ac:	adrp	x21, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  b0:	add	x22, sp, #0x48
  b4:	add	x21, x21, #0x0
  b8:	b	d0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x80>
  bc:	mov	x0, x20
  c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  c4:	mov	x20, x0
  c8:	cmp	x19, x0
  cc:	b.eq	100 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xb0>  // b.none
  d0:	ldr	x0, [x20, #32]
  d4:	ldr	x1, [x0]
  d8:	ldr	x2, [x1, #16]
  dc:	cmp	x2, x21
  e0:	b.eq	bc <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x6c>  // b.none
  e4:	mov	x1, x22
  e8:	blr	x2
  ec:	mov	x0, x20
  f0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  f4:	mov	x20, x0
  f8:	cmp	x19, x0
  fc:	b.ne	d0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x80>  // b.any
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x23, x24, [sp, #48]
 10c:	ldp	x29, x30, [sp], #112
 110:	ret
 114:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 120:	tst	w0, #0xff
 124:	b.eq	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>  // b.none
 128:	bl	0 <_ZN4llvm4dbgsEv>
 12c:	mov	x20, x0
 130:	ldp	x1, x2, [x0, #16]
 134:	sub	x1, x1, x2
 138:	cmp	x1, #0x1c
 13c:	b.ls	198 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x148>  // b.plast
 140:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 144:	add	x3, x3, #0x0
 148:	ldr	x0, [x3, #16]
 14c:	str	x0, [x2, #16]
 150:	ldp	x0, x1, [x3]
 154:	stp	x0, x1, [x2]
 158:	ldur	x0, [x3, #21]
 15c:	stur	x0, [x2, #21]
 160:	ldr	x0, [x20, #24]
 164:	add	x0, x0, #0x1d
 168:	str	x0, [x20, #24]
 16c:	ldr	w1, [x21]
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 178:	ldp	x1, x0, [x20, #16]
 17c:	cmp	x0, x1
 180:	b.cs	1b0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x160>  // b.hs, b.nlast
 184:	add	x1, x0, #0x1
 188:	str	x1, [x20, #24]
 18c:	mov	w1, #0xa                   	// #10
 190:	strb	w1, [x0]
 194:	b	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>
 198:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 19c:	mov	x2, #0x1d                  	// #29
 1a0:	add	x1, x1, #0x0
 1a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1a8:	mov	x20, x0
 1ac:	b	16c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x11c>
 1b0:	mov	x0, x20
 1b4:	mov	w1, #0xa                   	// #10
 1b8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 1bc:	b	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>

00000000000001c0 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 1c0:	stp	x29, x30, [sp, #-128]!
 1c4:	mov	x29, sp
 1c8:	stp	x19, x20, [sp, #16]
 1cc:	mov	x19, x0
 1d0:	ldr	x0, [x0, #112]
 1d4:	stp	x21, x22, [sp, #32]
 1d8:	mov	x21, x8
 1dc:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 1e0:	ldr	w22, [x19, #72]
 1e4:	cbz	w22, 2c8 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x108>
 1e8:	ldr	w0, [x19, #64]
 1ec:	stp	x23, x24, [sp, #48]
 1f0:	cmp	w22, w0
 1f4:	str	x25, [sp, #64]
 1f8:	b.cc	2bc <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xfc>  // b.lo, b.ul, b.last
 1fc:	sub	w1, w22, w0
 200:	mov	w22, w0
 204:	mov	w2, #0x0                   	// #0
 208:	ldr	x0, [x19, #88]
 20c:	stp	w2, w1, [x19, #68]
 210:	cbz	x0, 330 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x170>
 214:	ldr	x1, [x19, #112]
 218:	add	x23, sp, #0x50
 21c:	add	x2, x23, #0x10
 220:	mov	x0, #0x800000000           	// #34359738368
 224:	stp	x2, x0, [sp, #80]
 228:	ldr	w24, [x1, #24]
 22c:	mov	w20, w24
 230:	cmp	x20, #0x8
 234:	mov	x25, x20
 238:	b.hi	308 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x148>  // b.pmore
 23c:	str	w24, [sp, #88]
 240:	add	x20, x2, x20, lsl #2
 244:	cmp	x2, x20
 248:	b.eq	260 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xa0>  // b.none
 24c:	mov	x0, x2
 250:	str	wzr, [x0], #4
 254:	cmp	x20, x0
 258:	b.ne	250 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x90>  // b.any
 25c:	ldr	w25, [sp, #88]
 260:	mov	x0, x19
 264:	mov	w4, w22
 268:	mov	x3, x25
 26c:	add	x1, x19, #0x50
 270:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 274:	ldr	w0, [x19, #72]
 278:	cbnz	w0, 284 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xc4>
 27c:	str	wzr, [x19, #80]
 280:	str	xzr, [x19, #88]
 284:	ldr	x0, [sp, #80]
 288:	mov	x1, #0x1                   	// #1
 28c:	str	x1, [x21]
 290:	add	x23, x23, #0x10
 294:	cmp	x0, x23
 298:	b.eq	2ec <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x12c>  // b.none
 29c:	bl	0 <free>
 2a0:	mov	x0, x21
 2a4:	ldp	x19, x20, [sp, #16]
 2a8:	ldp	x21, x22, [sp, #32]
 2ac:	ldp	x23, x24, [sp, #48]
 2b0:	ldr	x25, [sp, #64]
 2b4:	ldp	x29, x30, [sp], #128
 2b8:	ret
 2bc:	sub	w2, w0, w22
 2c0:	mov	w1, #0x0                   	// #0
 2c4:	b	208 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x48>
 2c8:	ldr	w1, [x19, #64]
 2cc:	mov	x0, #0x1                   	// #1
 2d0:	str	w1, [x19, #68]
 2d4:	str	x0, [x21]
 2d8:	mov	x0, x21
 2dc:	ldp	x19, x20, [sp, #16]
 2e0:	ldp	x21, x22, [sp, #32]
 2e4:	ldp	x29, x30, [sp], #128
 2e8:	ret
 2ec:	mov	x0, x21
 2f0:	ldp	x19, x20, [sp, #16]
 2f4:	ldp	x21, x22, [sp, #32]
 2f8:	ldp	x23, x24, [sp, #48]
 2fc:	ldr	x25, [sp, #64]
 300:	ldp	x29, x30, [sp], #128
 304:	ret
 308:	mov	x1, x2
 30c:	mov	x0, x23
 310:	mov	x2, x20
 314:	mov	x3, #0x4                   	// #4
 318:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 31c:	ldr	w0, [sp, #92]
 320:	cmp	x20, x0
 324:	b.hi	350 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x190>  // b.pmore
 328:	ldr	x2, [sp, #80]
 32c:	b	23c <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x7c>
 330:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 334:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 338:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 33c:	add	x3, x3, #0x0
 340:	add	x1, x1, #0x0
 344:	add	x0, x0, #0x0
 348:	mov	w2, #0x95                  	// #149
 34c:	bl	0 <__assert_fail>
 350:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 354:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 358:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 35c:	add	x3, x3, #0x0
 360:	add	x1, x1, #0x0
 364:	add	x0, x0, #0x0
 368:	mov	w2, #0x43                  	// #67
 36c:	bl	0 <__assert_fail>

0000000000000370 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 370:	stp	x29, x30, [sp, #-128]!
 374:	mov	w3, #0x88                  	// #136
 378:	mov	x4, #0x400000000           	// #17179869184
 37c:	mov	x29, sp
 380:	stp	x21, x22, [sp, #32]
 384:	mov	x22, x1
 388:	add	x21, sp, #0x68
 38c:	stp	x19, x20, [sp, #16]
 390:	add	x1, x21, #0x10
 394:	mov	x20, x0
 398:	ldr	x2, [x22, #8]
 39c:	stp	x23, x24, [sp, #48]
 3a0:	stp	x1, x4, [sp, #104]
 3a4:	ldr	w24, [x2, #24]
 3a8:	ldr	x19, [x2, #16]
 3ac:	umaddl	x24, w24, w3, x19
 3b0:	cmp	x24, x19
 3b4:	b.eq	4dc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x16c>  // b.none
 3b8:	ldrh	w23, [x19, #12]
 3bc:	add	x19, x19, #0x88
 3c0:	str	x25, [sp, #64]
 3c4:	mov	x25, x1
 3c8:	mov	w4, #0x4                   	// #4
 3cc:	mov	w2, #0x0                   	// #0
 3d0:	mov	x0, #0x4                   	// #4
 3d4:	nop
 3d8:	mov	w3, w2
 3dc:	strh	w23, [x1, w2, uxtw #1]
 3e0:	add	x3, x3, #0x1
 3e4:	cmp	x3, x0
 3e8:	b.hi	4e4 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x174>  // b.pmore
 3ec:	add	w2, w2, #0x1
 3f0:	str	w2, [sp, #112]
 3f4:	cbz	w2, 504 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x194>
 3f8:	cmp	x24, x19
 3fc:	b.eq	43c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xcc>  // b.none
 400:	ldrh	w23, [x19, #12]
 404:	cmp	w2, w4
 408:	b.cs	414 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xa4>  // b.hs, b.nlast
 40c:	add	x19, x19, #0x88
 410:	b	3d8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x68>
 414:	mov	x1, x25
 418:	mov	x0, x21
 41c:	mov	x2, #0x0                   	// #0
 420:	mov	x3, #0x2                   	// #2
 424:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 428:	add	x19, x19, #0x88
 42c:	ldp	w2, w4, [sp, #112]
 430:	ldr	x1, [sp, #104]
 434:	mov	w0, w4
 438:	b	3d8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x68>
 43c:	ldr	x25, [sp, #64]
 440:	mov	w23, #0x1                   	// #1
 444:	ldr	x0, [x20, #112]
 448:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 44c:	cbnz	w0, 47c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x10c>
 450:	ldr	x0, [sp, #104]
 454:	add	x21, x21, #0x10
 458:	cmp	x0, x21
 45c:	b.eq	464 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xf4>  // b.none
 460:	bl	0 <free>
 464:	mov	w0, w23
 468:	ldp	x19, x20, [sp, #16]
 46c:	ldp	x21, x22, [sp, #32]
 470:	ldp	x23, x24, [sp, #48]
 474:	ldp	x29, x30, [sp], #128
 478:	ret
 47c:	ldr	x19, [x20, #40]
 480:	str	w23, [sp, #88]
 484:	str	x22, [sp, #96]
 488:	add	x20, x20, #0x18
 48c:	adrp	x22, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 490:	cmp	x19, x20
 494:	add	x23, sp, #0x58
 498:	add	x22, x22, #0x0
 49c:	b.ne	4c4 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x154>  // b.any
 4a0:	mov	w23, #0x0                   	// #0
 4a4:	b	450 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xe0>
 4a8:	mov	x1, x23
 4ac:	blr	x2
 4b0:	mov	x0, x19
 4b4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 4b8:	mov	x19, x0
 4bc:	cmp	x20, x0
 4c0:	b.eq	4a0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x130>  // b.none
 4c4:	ldr	x0, [x19, #32]
 4c8:	ldr	x1, [x0]
 4cc:	ldr	x2, [x1, #24]
 4d0:	cmp	x2, x22
 4d4:	b.eq	4b0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x140>  // b.none
 4d8:	b	4a8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x138>
 4dc:	mov	x2, #0x0                   	// #0
 4e0:	b	440 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xd0>
 4e4:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4e8:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4ec:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4f0:	add	x3, x3, #0x0
 4f4:	add	x1, x1, #0x0
 4f8:	add	x0, x0, #0x0
 4fc:	mov	w2, #0x43                  	// #67
 500:	bl	0 <__assert_fail>
 504:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 508:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 50c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 510:	add	x3, x3, #0x0
 514:	add	x1, x1, #0x0
 518:	add	x0, x0, #0x0
 51c:	mov	w2, #0xa7                  	// #167
 520:	bl	0 <__assert_fail>
 524:	nop

0000000000000528 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 528:	ldr	x4, [x1, #8]
 52c:	mov	w3, #0x1                   	// #1
 530:	ldr	x2, [x0, #104]
 534:	ldr	x6, [x4]
 538:	ldr	w5, [x2, #20]
 53c:	ldr	w4, [x2, #16]
 540:	ldr	w2, [x6, #316]
 544:	cmp	w2, w4
 548:	csel	w2, w2, w4, ls  // ls = plast
 54c:	cmp	w2, #0x0
 550:	csel	w2, w2, w3, ne  // ne = any
 554:	cmp	w2, w5
 558:	b.hi	564 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x3c>  // b.pmore
 55c:	mov	w0, w3
 560:	ret
 564:	stp	x29, x30, [sp, #-64]!
 568:	mov	w2, #0x2                   	// #2
 56c:	mov	x29, sp
 570:	stp	x19, x20, [sp, #16]
 574:	add	x20, x0, #0x18
 578:	ldr	x19, [x0, #40]
 57c:	str	w2, [sp, #48]
 580:	str	x1, [sp, #56]
 584:	cmp	x19, x20
 588:	b.eq	5e8 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0xc0>  // b.none
 58c:	stp	x21, x22, [sp, #32]
 590:	adrp	x21, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 594:	add	x22, sp, #0x30
 598:	add	x21, x21, #0x0
 59c:	b	5b4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x8c>
 5a0:	mov	x0, x19
 5a4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 5a8:	mov	x19, x0
 5ac:	cmp	x20, x0
 5b0:	b.eq	5e4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0xbc>  // b.none
 5b4:	ldr	x0, [x19, #32]
 5b8:	ldr	x1, [x0]
 5bc:	ldr	x2, [x1, #24]
 5c0:	cmp	x2, x21
 5c4:	b.eq	5a0 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x78>  // b.none
 5c8:	mov	x1, x22
 5cc:	blr	x2
 5d0:	mov	x0, x19
 5d4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 5d8:	mov	x19, x0
 5dc:	cmp	x20, x0
 5e0:	b.ne	5b4 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x8c>  // b.any
 5e4:	ldp	x21, x22, [sp, #32]
 5e8:	mov	w0, #0x0                   	// #0
 5ec:	ldp	x19, x20, [sp, #16]
 5f0:	ldp	x29, x30, [sp], #64
 5f4:	ret

00000000000005f8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 5f8:	stp	x29, x30, [sp, #-48]!
 5fc:	mov	x29, sp
 600:	stp	x19, x20, [sp, #16]
 604:	mov	x19, x0
 608:	mov	x20, x1
 60c:	str	x21, [sp, #32]
 610:	bl	528 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>
 614:	mov	x1, x20
 618:	and	w21, w0, #0xff
 61c:	mov	x0, x19
 620:	bl	370 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 624:	ldr	x2, [x19, #8]
 628:	cbz	x2, 664 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x6c>
 62c:	ldr	x3, [x2]
 630:	and	w19, w0, #0xff
 634:	mov	x0, x2
 638:	mov	x1, x20
 63c:	ldr	x2, [x3, #16]
 640:	blr	x2
 644:	cmp	w21, #0x0
 648:	ccmp	w19, #0x0, #0x4, ne  // ne = any
 64c:	cset	w1, ne  // ne = any
 650:	and	w0, w1, w0
 654:	ldp	x19, x20, [sp, #16]
 658:	ldr	x21, [sp, #32]
 65c:	ldp	x29, x30, [sp], #48
 660:	ret
 664:	mov	w0, #0x0                   	// #0
 668:	ldp	x19, x20, [sp, #16]
 66c:	ldr	x21, [sp, #32]
 670:	ldp	x29, x30, [sp], #48
 674:	ret

0000000000000678 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 678:	ldr	x4, [x1, #8]
 67c:	ldp	w3, w5, [x0, #64]
 680:	ldr	x4, [x4]
 684:	ldr	w2, [x4, #316]
 688:	cmp	w2, w3
 68c:	csel	w2, w2, w3, ls  // ls = plast
 690:	cmp	w5, w2
 694:	b.cc	6b0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>  // b.lo, b.ul, b.last
 698:	cmp	w5, w3
 69c:	ldrb	w2, [x4, #327]
 6a0:	cset	w3, ne  // ne = any
 6a4:	tst	w3, w2
 6a8:	b.ne	6b0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>  // b.any
 6ac:	b	5f8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 6b0:	mov	w0, #0x0                   	// #0
 6b4:	ret

00000000000006b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 6b8:	stp	x29, x30, [sp, #-128]!
 6bc:	mov	x29, sp
 6c0:	stp	x19, x20, [sp, #16]
 6c4:	mov	x20, x0
 6c8:	ldr	w0, [x0, #72]
 6cc:	stp	x21, x22, [sp, #32]
 6d0:	stp	x23, x24, [sp, #48]
 6d4:	stp	x25, x26, [sp, #64]
 6d8:	stp	x1, x2, [sp, #80]
 6dc:	cbnz	w0, 990 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2d8>
 6e0:	ldr	x22, [sp, #88]
 6e4:	mov	x24, x8
 6e8:	ldp	w0, w1, [x20, #64]
 6ec:	ldr	x2, [x22]
 6f0:	ldr	w23, [x2, #316]
 6f4:	cmp	w0, w23
 6f8:	b.cc	888 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1d0>  // b.lo, b.ul, b.last
 6fc:	cmp	w23, w1
 700:	b.hi	9b0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2f8>  // b.pmore
 704:	sub	w1, w1, w23
 708:	str	w1, [x20, #68]
 70c:	ldrb	w0, [x2, #328]
 710:	cbz	w0, 718 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x60>
 714:	str	wzr, [x20, #68]
 718:	ldrb	w0, [x22, #8]
 71c:	cbz	w0, 8a8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1f0>
 720:	ldr	w0, [x22, #24]
 724:	cmp	w0, #0x1
 728:	b.ne	9d0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x318>  // b.any
 72c:	ldr	w19, [x22, #584]
 730:	cmp	w19, #0x1
 734:	b.ne	930 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x278>  // b.any
 738:	ldr	x1, [x22, #16]
 73c:	ldr	x0, [x20, #112]
 740:	ldr	x2, [x22, #576]
 744:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 748:	tst	w0, #0xff
 74c:	b.eq	8a8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1f0>  // b.none
 750:	strb	w19, [x22, #840]
 754:	ldr	x0, [x20, #112]
 758:	add	x25, sp, #0x60
 75c:	add	x3, x25, #0x10
 760:	mov	x1, #0x400000000           	// #17179869184
 764:	stp	x3, x1, [sp, #96]
 768:	ldr	w26, [x0, #24]
 76c:	cmp	w26, #0x4
 770:	mov	w19, w26
 774:	b.hi	908 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x250>  // b.pmore
 778:	str	w26, [sp, #104]
 77c:	add	x2, x3, x19, lsl #2
 780:	cmp	x3, x2
 784:	mov	x0, x3
 788:	b.eq	79c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xe4>  // b.none
 78c:	nop
 790:	str	wzr, [x0], #4
 794:	cmp	x2, x0
 798:	b.ne	790 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xd8>  // b.any
 79c:	ldr	w26, [x22, #24]
 7a0:	mov	w0, #0x88                  	// #136
 7a4:	ldr	x19, [x22, #16]
 7a8:	umaddl	x26, w26, w0, x19
 7ac:	cmp	x19, x26
 7b0:	b.ne	7bc <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x104>  // b.any
 7b4:	b	7e4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x12c>
 7b8:	ldr	x3, [sp, #96]
 7bc:	mov	x2, x19
 7c0:	ldr	w1, [sp, #80]
 7c4:	add	x19, x19, #0x88
 7c8:	ldr	w4, [sp, #104]
 7cc:	ldr	x0, [x20, #112]
 7d0:	bfxil	x21, x1, #0, #32
 7d4:	mov	x1, x21
 7d8:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 7dc:	cmp	x26, x19
 7e0:	b.ne	7b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x100>  // b.any
 7e4:	ldr	x0, [x20, #104]
 7e8:	add	x19, sp, #0x50
 7ec:	mov	x1, x19
 7f0:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 7f4:	mov	w1, w0
 7f8:	mov	x0, x22
 7fc:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 800:	ldr	w4, [x20, #64]
 804:	mov	x0, x20
 808:	ldr	w3, [sp, #104]
 80c:	mov	x1, x19
 810:	ldr	x2, [sp, #96]
 814:	cmp	w4, w23
 818:	csel	w4, w4, w23, ls  // ls = plast
 81c:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 820:	ldr	x0, [x20, #8]
 824:	cbz	x0, 8e8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x230>
 828:	ldr	x2, [x0]
 82c:	mov	x1, x19
 830:	ldr	x2, [x2, #16]
 834:	blr	x2
 838:	tst	w0, #0xff
 83c:	b.eq	8e8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x230>  // b.none
 840:	ldr	x0, [x20, #8]
 844:	mov	x1, x19
 848:	mov	x8, x24
 84c:	add	x25, x25, #0x10
 850:	ldr	x2, [x0]
 854:	ldr	x2, [x2, #48]
 858:	blr	x2
 85c:	ldr	x0, [sp, #96]
 860:	cmp	x0, x25
 864:	b.eq	86c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1b4>  // b.none
 868:	bl	0 <free>
 86c:	mov	x0, x24
 870:	ldp	x19, x20, [sp, #16]
 874:	ldp	x21, x22, [sp, #32]
 878:	ldp	x23, x24, [sp, #48]
 87c:	ldp	x25, x26, [sp, #64]
 880:	ldp	x29, x30, [sp], #128
 884:	ret
 888:	cmp	w0, w1
 88c:	b.ne	950 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x298>  // b.any
 890:	ldr	w1, [sp, #80]
 894:	sub	w0, w23, w0
 898:	stp	wzr, w0, [x20, #68]
 89c:	str	w1, [x20, #80]
 8a0:	str	x22, [x20, #88]
 8a4:	b	70c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x54>
 8a8:	ldrb	w0, [x22, #840]
 8ac:	cbnz	w0, 754 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>
 8b0:	ldr	w25, [x22, #584]
 8b4:	mov	w0, #0x30                  	// #48
 8b8:	ldr	x19, [x22, #576]
 8bc:	umaddl	x25, w25, w0, x19
 8c0:	cmp	x19, x25
 8c4:	b.eq	754 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>  // b.none
 8c8:	ldr	x2, [x20, #96]
 8cc:	mov	x1, x19
 8d0:	ldr	x0, [x20, #112]
 8d4:	add	x19, x19, #0x30
 8d8:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 8dc:	cmp	x25, x19
 8e0:	b.ne	8c8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x210>  // b.any
 8e4:	b	754 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>
 8e8:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8ec:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8f0:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8f4:	add	x3, x3, #0x0
 8f8:	add	x1, x1, #0x0
 8fc:	add	x0, x0, #0x0
 900:	mov	w2, #0x47                  	// #71
 904:	bl	0 <__assert_fail>
 908:	mov	x1, x3
 90c:	mov	x0, x25
 910:	mov	x2, x19
 914:	mov	x3, #0x4                   	// #4
 918:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 91c:	ldr	w0, [sp, #108]
 920:	cmp	x19, x0
 924:	b.hi	970 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2b8>  // b.pmore
 928:	ldr	x3, [sp, #96]
 92c:	b	778 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xc0>
 930:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 934:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 938:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 93c:	add	x3, x3, #0x0
 940:	add	x1, x1, #0x0
 944:	add	x0, x0, #0x0
 948:	mov	w2, #0x64                  	// #100
 94c:	bl	0 <__assert_fail>
 950:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 954:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 958:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 95c:	add	x3, x3, #0x0
 960:	add	x1, x1, #0x0
 964:	add	x0, x0, #0x0
 968:	mov	w2, #0x54                  	// #84
 96c:	bl	0 <__assert_fail>
 970:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 974:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 978:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 97c:	add	x3, x3, #0x0
 980:	add	x1, x1, #0x0
 984:	add	x0, x0, #0x0
 988:	mov	w2, #0x43                  	// #67
 98c:	bl	0 <__assert_fail>
 990:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 994:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 998:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 99c:	add	x3, x3, #0x0
 9a0:	add	x1, x1, #0x0
 9a4:	add	x0, x0, #0x0
 9a8:	mov	w2, #0x4f                  	// #79
 9ac:	bl	0 <__assert_fail>
 9b0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9b4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9b8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9bc:	add	x3, x3, #0x0
 9c0:	add	x1, x1, #0x0
 9c4:	add	x0, x0, #0x0
 9c8:	mov	w2, #0x59                  	// #89
 9cc:	bl	0 <__assert_fail>
 9d0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9d4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9d8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9dc:	add	x3, x3, #0x0
 9e0:	add	x1, x1, #0x0
 9e4:	add	x0, x0, #0x0
 9e8:	mov	w2, #0x63                  	// #99
 9ec:	bl	0 <__assert_fail>

00000000000009f0 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 9f0:	stp	x29, x30, [sp, #-48]!
 9f4:	mov	x29, sp
 9f8:	stp	x19, x20, [sp, #16]
 9fc:	mov	x19, x8
 a00:	mov	x20, x0
 a04:	str	x21, [sp, #32]
 a08:	mov	x21, x1
 a0c:	bl	5f8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 a10:	tst	w0, #0xff
 a14:	b.eq	a44 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x54>  // b.none
 a18:	ldp	x2, x3, [x21]
 a1c:	mov	x0, x20
 a20:	mov	x8, x19
 a24:	mov	x1, x2
 a28:	mov	x2, x3
 a2c:	bl	6b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 a30:	mov	x0, x19
 a34:	ldp	x19, x20, [sp, #16]
 a38:	ldr	x21, [sp, #32]
 a3c:	ldp	x29, x30, [sp], #48
 a40:	ret
 a44:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a48:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a4c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a50:	add	x3, x3, #0x0
 a54:	add	x1, x1, #0x0
 a58:	add	x0, x0, #0x0
 a5c:	mov	w2, #0xb0                  	// #176
 a60:	bl	0 <__assert_fail>
 a64:	nop

0000000000000a68 <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 a68:	stp	x29, x30, [sp, #-32]!
 a6c:	mov	x29, sp
 a70:	str	x19, [sp, #16]
 a74:	mov	x19, x0
 a78:	ldr	x0, [x0, #112]
 a7c:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 a80:	ldr	x0, [x19, #104]
 a84:	ldr	x19, [sp, #16]
 a88:	ldp	x29, x30, [sp], #32
 a8c:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca13DispatchStageD2Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x78                  	// #120
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #72]
   4:	cmp	x0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  10:	mov	x1, x0
  14:	ldr	x0, [x0, #72]
  18:	cbz	x0, 38 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x28>
  1c:	ldr	x0, [x1, #8]
  20:	cbz	x0, 38 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x28>
  24:	ldr	x2, [x0]
  28:	add	x1, x1, #0x40
  2c:	ldr	x2, [x2, #16]
  30:	mov	x16, x2
  34:	br	x16
  38:	mov	w0, #0x0                   	// #0
  3c:	ret

0000000000000040 <_ZN4llvm3mca10EntryStage8cycleEndEv>:
  40:	stp	x29, x30, [sp, #-96]!
  44:	mov	x29, sp
  48:	ldr	w2, [x0, #88]
  4c:	stp	x19, x20, [sp, #16]
  50:	ldr	w19, [x0, #232]
  54:	stp	x21, x22, [sp, #32]
  58:	stp	x23, x24, [sp, #48]
  5c:	cmp	x19, w2, uxtw
  60:	b.cs	36c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x32c>  // b.hs, b.nlast
  64:	mov	x22, x0
  68:	mov	w20, w2
  6c:	lsl	x19, x19, #3
  70:	mov	x24, x8
  74:	lsl	x20, x20, #3
  78:	ldr	x23, [x22, #80]
  7c:	sub	x1, x20, x19
  80:	mov	x0, x20
  84:	cmp	xzr, x1, asr #5
  88:	asr	x3, x1, #3
  8c:	add	x19, x23, x19
  90:	asr	x1, x1, #5
  94:	add	x20, x23, x20
  98:	b.ge	2e0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2a0>  // b.tcont
  9c:	add	x1, x19, x1, lsl #5
  a0:	b	e0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xa0>
  a4:	ldr	x3, [x19, #8]
  a8:	ldr	w3, [x3, #784]
  ac:	cmp	w3, #0x6
  b0:	b.ne	340 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x300>  // b.any
  b4:	ldr	x3, [x19, #16]
  b8:	ldr	w3, [x3, #784]
  bc:	cmp	w3, #0x6
  c0:	b.ne	34c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x30c>  // b.any
  c4:	ldr	x3, [x19, #24]
  c8:	ldr	w3, [x3, #784]
  cc:	cmp	w3, #0x6
  d0:	b.ne	358 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x318>  // b.any
  d4:	add	x19, x19, #0x20
  d8:	cmp	x1, x19
  dc:	b.eq	2d8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x298>  // b.none
  e0:	ldr	x3, [x19]
  e4:	ldr	w3, [x3, #784]
  e8:	cmp	w3, #0x6
  ec:	b.eq	a4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x64>  // b.none
  f0:	sub	x0, x19, x23
  f4:	asr	x0, x0, #3
  f8:	str	w0, [x22, #232]
  fc:	lsl	w0, w0, #1
 100:	cmp	w0, w2
 104:	b.cs	128 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe8>  // b.hs, b.nlast
 108:	mov	x1, #0x1                   	// #1
 10c:	mov	x0, x24
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	str	x1, [x24]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #96
 124:	ret
 128:	stp	x25, x26, [sp, #64]
 12c:	cmp	x23, x19
 130:	b.hi	394 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x354>  // b.pmore
 134:	cmp	x20, x19
 138:	b.cc	3b8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x378>  // b.lo, b.ul, b.last
 13c:	sub	x25, x20, x19
 140:	cmp	x25, #0x0
 144:	asr	x26, x25, #3
 148:	b.le	214 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1d4>
 14c:	stp	x27, x28, [sp, #80]
 150:	mov	x28, #0x0                   	// #0
 154:	nop
 158:	ldr	x0, [x19, x28, lsl #3]
 15c:	str	xzr, [x19, x28, lsl #3]
 160:	ldr	x21, [x23, x28, lsl #3]
 164:	str	x0, [x23, x28, lsl #3]
 168:	cbz	x21, 1dc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x19c>
 16c:	ldr	x0, [x21, #576]
 170:	add	x1, x21, #0x250
 174:	cmp	x0, x1
 178:	b.eq	180 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x140>  // b.none
 17c:	bl	0 <free>
 180:	ldr	w20, [x21, #24]
 184:	mov	w0, #0x88                  	// #136
 188:	ldr	x27, [x21, #16]
 18c:	umaddl	x20, w20, w0, x27
 190:	cmp	x27, x20
 194:	b.eq	1bc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x17c>  // b.none
 198:	ldur	x0, [x20, #-80]
 19c:	sub	x20, x20, #0x88
 1a0:	add	x2, x20, #0x48
 1a4:	cmp	x0, x2
 1a8:	b.eq	1b0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x170>  // b.none
 1ac:	bl	0 <free>
 1b0:	cmp	x27, x20
 1b4:	b.ne	198 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x158>  // b.any
 1b8:	ldr	x20, [x21, #16]
 1bc:	add	x0, x21, #0x20
 1c0:	cmp	x20, x0
 1c4:	b.eq	1d0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x190>  // b.none
 1c8:	mov	x0, x20
 1cc:	bl	0 <free>
 1d0:	mov	x0, x21
 1d4:	mov	x1, #0x350                 	// #848
 1d8:	bl	0 <_ZdlPvm>
 1dc:	add	x28, x28, #0x1
 1e0:	sub	x0, x26, x28
 1e4:	cmp	x0, #0x0
 1e8:	b.gt	158 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x118>
 1ec:	ldr	x0, [x22, #80]
 1f0:	cmp	x25, #0x0
 1f4:	ldr	w20, [x22, #88]
 1f8:	mov	x1, #0x8                   	// #8
 1fc:	csel	x25, x25, x1, gt
 200:	add	x23, x23, x25
 204:	add	x20, x0, x20, lsl #3
 208:	cmp	x20, x23
 20c:	b.eq	360 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x320>  // b.none
 210:	ldp	x27, x28, [sp, #80]
 214:	mov	w26, #0x88                  	// #136
 218:	ldr	x21, [x20, #-8]!
 21c:	cbz	x21, 28c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x24c>
 220:	ldr	x0, [x21, #576]
 224:	add	x1, x21, #0x250
 228:	cmp	x0, x1
 22c:	b.eq	234 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1f4>  // b.none
 230:	bl	0 <free>
 234:	ldr	w19, [x21, #24]
 238:	ldr	x25, [x21, #16]
 23c:	umaddl	x19, w19, w26, x25
 240:	cmp	x25, x19
 244:	b.eq	26c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x22c>  // b.none
 248:	ldur	x0, [x19, #-80]
 24c:	sub	x19, x19, #0x88
 250:	add	x1, x19, #0x48
 254:	cmp	x0, x1
 258:	b.eq	260 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x220>  // b.none
 25c:	bl	0 <free>
 260:	cmp	x25, x19
 264:	b.ne	248 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x208>  // b.any
 268:	ldr	x19, [x21, #16]
 26c:	add	x0, x21, #0x20
 270:	cmp	x19, x0
 274:	b.eq	280 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x240>  // b.none
 278:	mov	x0, x19
 27c:	bl	0 <free>
 280:	mov	x0, x21
 284:	mov	x1, #0x350                 	// #848
 288:	bl	0 <_ZdlPvm>
 28c:	cmp	x23, x20
 290:	b.ne	218 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1d8>  // b.any
 294:	ldr	x0, [x22, #80]
 298:	sub	x20, x20, x0
 29c:	ldr	w1, [x22, #92]
 2a0:	asr	x0, x20, #3
 2a4:	cmp	x1, x20, asr #3
 2a8:	b.cc	3dc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x39c>  // b.lo, b.ul, b.last
 2ac:	ldp	x25, x26, [sp, #64]
 2b0:	str	w0, [x22, #88]
 2b4:	str	wzr, [x22, #232]
 2b8:	mov	x1, #0x1                   	// #1
 2bc:	ldp	x19, x20, [sp, #16]
 2c0:	mov	x0, x24
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	str	x1, [x24]
 2cc:	ldp	x23, x24, [sp, #48]
 2d0:	ldp	x29, x30, [sp], #96
 2d4:	ret
 2d8:	sub	x3, x20, x19
 2dc:	asr	x3, x3, #3
 2e0:	cmp	x3, #0x2
 2e4:	b.eq	314 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2d4>  // b.none
 2e8:	cmp	x3, #0x3
 2ec:	b.eq	300 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2c0>  // b.none
 2f0:	cmp	x3, #0x1
 2f4:	b.eq	328 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2e8>  // b.none
 2f8:	mov	x19, x20
 2fc:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 300:	ldr	x1, [x19]
 304:	ldr	w1, [x1, #784]
 308:	cmp	w1, #0x6
 30c:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 310:	add	x19, x19, #0x8
 314:	ldr	x1, [x19]
 318:	ldr	w1, [x1, #784]
 31c:	cmp	w1, #0x6
 320:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 324:	add	x19, x19, #0x8
 328:	ldr	x1, [x19]
 32c:	ldr	w1, [x1, #784]
 330:	cmp	w1, #0x6
 334:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 338:	mov	x19, x20
 33c:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 340:	add	x19, x19, #0x8
 344:	sub	x0, x19, x23
 348:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 34c:	add	x19, x19, #0x10
 350:	sub	x0, x19, x23
 354:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 358:	add	x19, x19, #0x18
 35c:	b	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>
 360:	mov	x20, x23
 364:	ldp	x27, x28, [sp, #80]
 368:	b	298 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x258>
 36c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 370:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 374:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 378:	add	x3, x3, #0x0
 37c:	add	x1, x1, #0x0
 380:	add	x0, x0, #0x0
 384:	mov	w2, #0x95                  	// #149
 388:	stp	x25, x26, [sp, #64]
 38c:	stp	x27, x28, [sp, #80]
 390:	bl	0 <__assert_fail>
 394:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 398:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 39c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3a0:	add	x3, x3, #0x0
 3a4:	add	x1, x1, #0x0
 3a8:	add	x0, x0, #0x0
 3ac:	mov	w2, #0x1c7                 	// #455
 3b0:	stp	x27, x28, [sp, #80]
 3b4:	bl	0 <__assert_fail>
 3b8:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3bc:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3c0:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3c4:	add	x3, x3, #0x0
 3c8:	add	x1, x1, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	w2, #0x1c8                 	// #456
 3d4:	stp	x27, x28, [sp, #80]
 3d8:	bl	0 <__assert_fail>
 3dc:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3e0:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3e4:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3e8:	add	x3, x3, #0x0
 3ec:	add	x1, x1, #0x0
 3f0:	add	x0, x0, #0x0
 3f4:	mov	w2, #0x43                  	// #67
 3f8:	stp	x27, x28, [sp, #80]
 3fc:	bl	0 <__assert_fail>

0000000000000400 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
 400:	stp	x29, x30, [sp, #-48]!
 404:	mov	x29, sp
 408:	stp	x19, x20, [sp, #16]
 40c:	mov	x20, x0
 410:	ldr	x0, [x0, #72]
 414:	stp	x21, x22, [sp, #32]
 418:	cbnz	x0, 594 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x194>
 41c:	ldr	x1, [x20, #224]
 420:	ldp	w22, w0, [x1, #16]
 424:	ldr	x2, [x1, #8]
 428:	mov	w3, w22
 42c:	mul	x0, x0, x2
 430:	cmp	x0, w22, uxtw
 434:	b.hi	448 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x48>  // b.pmore
 438:	ldp	x19, x20, [sp, #16]
 43c:	ldp	x21, x22, [sp, #32]
 440:	ldp	x29, x30, [sp], #48
 444:	ret
 448:	udiv	x4, x3, x2
 44c:	mov	x0, #0x350                 	// #848
 450:	ldr	x1, [x1]
 454:	msub	x2, x4, x2, x3
 458:	ldr	x21, [x1, x2, lsl #3]
 45c:	bl	0 <_Znwm>
 460:	mov	x19, x0
 464:	add	x1, x0, #0x20
 468:	mov	x3, #0x400000000           	// #17179869184
 46c:	ldrb	w2, [x21, #8]
 470:	ldr	x0, [x21]
 474:	str	x3, [x19, #24]
 478:	str	x0, [x19]
 47c:	ldr	w0, [x21, #24]
 480:	strb	w2, [x19, #8]
 484:	str	x1, [x19, #16]
 488:	cbnz	w0, 54c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x14c>
 48c:	mov	x0, #0x400000000           	// #17179869184
 490:	str	x0, [x19, #584]
 494:	add	x0, x19, #0x250
 498:	str	x0, [x19, #576]
 49c:	ldr	w0, [x21, #584]
 4a0:	cbnz	w0, 570 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x170>
 4a4:	ldr	x2, [x21, #784]
 4a8:	str	x2, [x19, #784]
 4ac:	ldr	x2, [x21, #792]
 4b0:	add	x1, x21, #0x334
 4b4:	str	x2, [x19, #792]
 4b8:	add	x0, x19, #0x334
 4bc:	ldr	x2, [x21, #800]
 4c0:	str	x2, [x19, #800]
 4c4:	ldr	x2, [x21, #808]
 4c8:	str	x2, [x19, #808]
 4cc:	ldr	w2, [x21, #816]
 4d0:	str	w2, [x19, #816]
 4d4:	ldr	x2, [x1]
 4d8:	str	x2, [x0]
 4dc:	ldr	x0, [x21, #832]
 4e0:	str	x0, [x19, #832]
 4e4:	ldr	w1, [x21, #828]
 4e8:	ldrb	w0, [x21, #840]
 4ec:	str	w1, [x19, #828]
 4f0:	strb	w0, [x19, #840]
 4f4:	ldp	w0, w1, [x20, #88]
 4f8:	str	w22, [x20, #64]
 4fc:	str	x19, [x20, #72]
 500:	cmp	w0, w1
 504:	b.cs	580 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x180>  // b.hs, b.nlast
 508:	ldr	x3, [x20, #80]
 50c:	mov	w2, w0
 510:	add	x4, x2, #0x1
 514:	cmp	x4, w1, uxtw
 518:	str	x19, [x3, x2, lsl #3]
 51c:	b.hi	5b4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1b4>  // b.pmore
 520:	add	w0, w0, #0x1
 524:	str	w0, [x20, #88]
 528:	cbz	w0, 5d4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1d4>
 52c:	ldr	x1, [x20, #224]
 530:	ldp	x19, x20, [sp, #16]
 534:	ldr	w0, [x1, #16]
 538:	ldp	x21, x22, [sp, #32]
 53c:	add	w0, w0, #0x1
 540:	str	w0, [x1, #16]
 544:	ldp	x29, x30, [sp], #48
 548:	ret
 54c:	add	x1, x21, #0x10
 550:	add	x0, x19, #0x10
 554:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 558:	mov	x0, #0x400000000           	// #17179869184
 55c:	str	x0, [x19, #584]
 560:	add	x0, x19, #0x250
 564:	str	x0, [x19, #576]
 568:	ldr	w0, [x21, #584]
 56c:	cbz	w0, 4a4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa4>
 570:	add	x1, x21, #0x240
 574:	add	x0, x19, #0x240
 578:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 57c:	b	4a4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa4>
 580:	add	x0, x20, #0x50
 584:	mov	x1, #0x0                   	// #0
 588:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 58c:	ldp	w0, w1, [x20, #88]
 590:	b	508 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x108>
 594:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 598:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 59c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5a0:	add	x3, x3, #0x0
 5a4:	add	x1, x1, #0x0
 5a8:	add	x0, x0, #0x0
 5ac:	mov	w2, #0x20                  	// #32
 5b0:	bl	0 <__assert_fail>
 5b4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5b8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5bc:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5c0:	add	x3, x3, #0x0
 5c4:	add	x1, x1, #0x0
 5c8:	add	x0, x0, #0x0
 5cc:	mov	w2, #0x43                  	// #67
 5d0:	bl	0 <__assert_fail>
 5d4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5d8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5dc:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5e0:	add	x3, x3, #0x0
 5e4:	add	x1, x1, #0x0
 5e8:	add	x0, x0, #0x0
 5ec:	mov	w2, #0xa7                  	// #167
 5f0:	bl	0 <__assert_fail>
 5f4:	nop

00000000000005f8 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 5f8:	stp	x29, x30, [sp, #-64]!
 5fc:	mov	x29, sp
 600:	stp	x19, x20, [sp, #16]
 604:	mov	x19, x0
 608:	ldr	x0, [x0, #72]
 60c:	str	x21, [sp, #32]
 610:	cbz	x0, 6c4 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xcc>
 614:	ldr	x0, [x19, #8]
 618:	cbz	x0, 67c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>
 61c:	ldr	x2, [x0]
 620:	add	x21, x19, #0x40
 624:	mov	x20, x8
 628:	mov	x1, x21
 62c:	ldr	x2, [x2, #16]
 630:	blr	x2
 634:	tst	w0, #0xff
 638:	b.eq	67c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>  // b.none
 63c:	ldr	x0, [x19, #8]
 640:	mov	x1, x21
 644:	add	x8, sp, #0x38
 648:	ldr	x2, [x0]
 64c:	ldr	x2, [x2, #48]
 650:	blr	x2
 654:	ldr	x0, [sp, #56]
 658:	ands	x0, x0, #0xfffffffffffffffe
 65c:	b.eq	69c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xa4>  // b.none
 660:	orr	x0, x0, #0x1
 664:	str	x0, [x20]
 668:	mov	x0, x20
 66c:	ldp	x19, x20, [sp, #16]
 670:	ldr	x21, [sp, #32]
 674:	ldp	x29, x30, [sp], #64
 678:	ret
 67c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 680:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 684:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 688:	add	x3, x3, #0x0
 68c:	add	x1, x1, #0x0
 690:	add	x0, x0, #0x0
 694:	mov	w2, #0x47                  	// #71
 698:	bl	0 <__assert_fail>
 69c:	str	xzr, [x19, #72]
 6a0:	mov	x0, x19
 6a4:	bl	400 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 6a8:	mov	x0, #0x1                   	// #1
 6ac:	str	x0, [x20]
 6b0:	mov	x0, x20
 6b4:	ldp	x19, x20, [sp, #16]
 6b8:	ldr	x21, [sp, #32]
 6bc:	ldp	x29, x30, [sp], #64
 6c0:	ret
 6c4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6c8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6cc:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6d0:	add	x3, x3, #0x0
 6d4:	add	x1, x1, #0x0
 6d8:	add	x0, x0, #0x0
 6dc:	mov	w2, #0x2b                  	// #43
 6e0:	bl	0 <__assert_fail>
 6e4:	nop

00000000000006e8 <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 6e8:	stp	x29, x30, [sp, #-32]!
 6ec:	mov	x29, sp
 6f0:	ldr	x1, [x0, #72]
 6f4:	str	x19, [sp, #16]
 6f8:	mov	x19, x8
 6fc:	cbz	x1, 718 <_ZN4llvm3mca10EntryStage10cycleStartEv+0x30>
 700:	mov	x1, #0x1                   	// #1
 704:	str	x1, [x19]
 708:	mov	x0, x19
 70c:	ldr	x19, [sp, #16]
 710:	ldp	x29, x30, [sp], #32
 714:	ret
 718:	bl	400 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 71c:	mov	x1, #0x1                   	// #1
 720:	str	x1, [x19]
 724:	mov	x0, x19
 728:	ldr	x19, [sp, #16]
 72c:	ldp	x29, x30, [sp], #32
 730:	ret

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	adrp	x1, 0 <_ZN4llvm3mca10EntryStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x23, x24, [sp, #48]
  14:	ldr	x23, [x0, #80]
  18:	stp	x21, x22, [sp, #32]
  1c:	ldr	w21, [x0, #88]
  20:	stp	x19, x20, [sp, #16]
  24:	add	x1, x1, #0x10
  28:	mov	x20, x0
  2c:	str	x1, [x0]
  30:	add	x21, x23, x21, lsl #3
  34:	cmp	x23, x21
  38:	b.eq	cc <_ZN4llvm3mca10EntryStageD0Ev+0xcc>  // b.none
  3c:	str	x25, [sp, #64]
  40:	mov	w25, #0x88                  	// #136
  44:	nop
  48:	ldr	x22, [x21, #-8]!
  4c:	cbz	x22, bc <_ZN4llvm3mca10EntryStageD0Ev+0xbc>
  50:	ldr	x0, [x22, #576]
  54:	add	x1, x22, #0x250
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm3mca10EntryStageD0Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	w19, [x22, #24]
  68:	ldr	x24, [x22, #16]
  6c:	umaddl	x19, w19, w25, x24
  70:	cmp	x24, x19
  74:	b.eq	9c <_ZN4llvm3mca10EntryStageD0Ev+0x9c>  // b.none
  78:	ldur	x0, [x19, #-80]
  7c:	sub	x19, x19, #0x88
  80:	add	x1, x19, #0x48
  84:	cmp	x0, x1
  88:	b.eq	90 <_ZN4llvm3mca10EntryStageD0Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	cmp	x24, x19
  94:	b.ne	78 <_ZN4llvm3mca10EntryStageD0Ev+0x78>  // b.any
  98:	ldr	x19, [x22, #16]
  9c:	add	x0, x22, #0x20
  a0:	cmp	x19, x0
  a4:	b.eq	b0 <_ZN4llvm3mca10EntryStageD0Ev+0xb0>  // b.none
  a8:	mov	x0, x19
  ac:	bl	0 <free>
  b0:	mov	x0, x22
  b4:	mov	x1, #0x350                 	// #848
  b8:	bl	0 <_ZdlPvm>
  bc:	cmp	x23, x21
  c0:	b.ne	48 <_ZN4llvm3mca10EntryStageD0Ev+0x48>  // b.any
  c4:	ldr	x25, [sp, #64]
  c8:	ldr	x21, [x20, #80]
  cc:	add	x0, x20, #0x60
  d0:	cmp	x21, x0
  d4:	b.eq	e0 <_ZN4llvm3mca10EntryStageD0Ev+0xe0>  // b.none
  d8:	mov	x0, x21
  dc:	bl	0 <free>
  e0:	mov	x0, x20
  e4:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  e8:	mov	x0, x20
  ec:	mov	x1, #0xf0                  	// #240
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldp	x23, x24, [sp, #48]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD1Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	adrp	x1, 0 <_ZN4llvm3mca10EntryStageD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x23, x24, [sp, #48]
  14:	ldr	x23, [x0, #80]
  18:	stp	x19, x20, [sp, #16]
  1c:	ldr	w20, [x0, #88]
  20:	stp	x21, x22, [sp, #32]
  24:	add	x1, x1, #0x10
  28:	mov	x22, x0
  2c:	str	x1, [x0]
  30:	add	x20, x23, x20, lsl #3
  34:	cmp	x23, x20
  38:	b.eq	cc <_ZN4llvm3mca10EntryStageD1Ev+0xcc>  // b.none
  3c:	str	x25, [sp, #64]
  40:	mov	w25, #0x88                  	// #136
  44:	nop
  48:	ldr	x21, [x20, #-8]!
  4c:	cbz	x21, bc <_ZN4llvm3mca10EntryStageD1Ev+0xbc>
  50:	ldr	x0, [x21, #576]
  54:	add	x1, x21, #0x250
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm3mca10EntryStageD1Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	w19, [x21, #24]
  68:	ldr	x24, [x21, #16]
  6c:	umaddl	x19, w19, w25, x24
  70:	cmp	x24, x19
  74:	b.eq	9c <_ZN4llvm3mca10EntryStageD1Ev+0x9c>  // b.none
  78:	ldur	x0, [x19, #-80]
  7c:	sub	x19, x19, #0x88
  80:	add	x1, x19, #0x48
  84:	cmp	x0, x1
  88:	b.eq	90 <_ZN4llvm3mca10EntryStageD1Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	cmp	x24, x19
  94:	b.ne	78 <_ZN4llvm3mca10EntryStageD1Ev+0x78>  // b.any
  98:	ldr	x19, [x21, #16]
  9c:	add	x0, x21, #0x20
  a0:	cmp	x19, x0
  a4:	b.eq	b0 <_ZN4llvm3mca10EntryStageD1Ev+0xb0>  // b.none
  a8:	mov	x0, x19
  ac:	bl	0 <free>
  b0:	mov	x0, x21
  b4:	mov	x1, #0x350                 	// #848
  b8:	bl	0 <_ZdlPvm>
  bc:	cmp	x23, x20
  c0:	b.ne	48 <_ZN4llvm3mca10EntryStageD1Ev+0x48>  // b.any
  c4:	ldr	x25, [sp, #64]
  c8:	ldr	x20, [x22, #80]
  cc:	add	x0, x22, #0x60
  d0:	cmp	x20, x0
  d4:	b.eq	e0 <_ZN4llvm3mca10EntryStageD1Ev+0xe0>  // b.none
  d8:	mov	x0, x20
  dc:	bl	0 <free>
  e0:	mov	x0, x22
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x23, x24, [sp, #48]
  f0:	ldp	x29, x30, [sp], #80
  f4:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x1, x0
  24:	str	x1, [sp, #104]
  28:	b.hi	1b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1b8>  // b.pmore
  2c:	ldr	w2, [x22, #12]
  30:	mov	x3, #0xffffffff            	// #4294967295
  34:	str	x3, [sp, #120]
  38:	add	x2, x2, #0x2
  3c:	orr	x2, x2, x2, lsr #1
  40:	orr	x2, x2, x2, lsr #2
  44:	orr	x2, x2, x2, lsr #4
  48:	orr	x2, x2, x2, lsr #8
  4c:	orr	x1, x2, x2, lsr #16
  50:	orr	x2, x1, x2, lsr #32
  54:	add	x2, x2, #0x1
  58:	cmp	x2, x19
  5c:	csel	x1, x2, x19, cs  // cs = hs, nlast
  60:	cmp	x1, x3
  64:	b.hi	188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x188>  // b.pmore
  68:	mov	w23, w1
  6c:	lsl	x0, x1, #3
  70:	str	x1, [sp, #112]
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbz	x0, 1a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1a0>
  80:	ldr	w3, [x22, #8]
  84:	ldr	x1, [x22]
  88:	lsl	x3, x3, #3
  8c:	add	x21, x1, x3
  90:	cmp	x1, x21
  94:	b.eq	158 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x158>  // b.none
  98:	mov	x0, x24
  9c:	stp	x25, x26, [sp, #64]
  a0:	ldr	x2, [x1]
  a4:	str	xzr, [x1], #8
  a8:	str	x2, [x0], #8
  ac:	cmp	x21, x1
  b0:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xa0>  // b.any
  b4:	ldr	x25, [x22]
  b8:	add	x21, x25, x3
  bc:	cmp	x25, x21
  c0:	b.eq	1cc <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1cc>  // b.none
  c4:	mov	w26, #0x88                  	// #136
  c8:	str	x27, [sp, #80]
  cc:	nop
  d0:	ldr	x20, [x21, #-8]!
  d4:	cbz	x20, 144 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x144>
  d8:	ldr	x0, [x20, #576]
  dc:	add	x1, x20, #0x250
  e0:	cmp	x0, x1
  e4:	b.eq	ec <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xec>  // b.none
  e8:	bl	0 <free>
  ec:	ldr	w19, [x20, #24]
  f0:	ldr	x27, [x20, #16]
  f4:	umaddl	x19, w19, w26, x27
  f8:	cmp	x27, x19
  fc:	b.eq	124 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x124>  // b.none
 100:	ldur	x0, [x19, #-80]
 104:	sub	x19, x19, #0x88
 108:	add	x1, x19, #0x48
 10c:	cmp	x0, x1
 110:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.none
 114:	bl	0 <free>
 118:	cmp	x27, x19
 11c:	b.ne	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x100>  // b.any
 120:	ldr	x19, [x20, #16]
 124:	add	x0, x20, #0x20
 128:	cmp	x19, x0
 12c:	b.eq	138 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x138>  // b.none
 130:	mov	x0, x19
 134:	bl	0 <free>
 138:	mov	x0, x20
 13c:	mov	x1, #0x350                 	// #848
 140:	bl	0 <_ZdlPvm>
 144:	cmp	x21, x25
 148:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
 14c:	ldp	x25, x26, [sp, #64]
 150:	ldr	x21, [x22]
 154:	ldr	x27, [sp, #80]
 158:	add	x0, x22, #0x10
 15c:	cmp	x21, x0
 160:	b.eq	16c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x16c>  // b.none
 164:	mov	x0, x21
 168:	bl	0 <free>
 16c:	ldp	x19, x20, [sp, #16]
 170:	str	x24, [x22]
 174:	str	w23, [x22, #12]
 178:	ldp	x21, x22, [sp, #32]
 17c:	ldp	x23, x24, [sp, #48]
 180:	ldp	x29, x30, [sp], #128
 184:	ret
 188:	mov	x0, #0x7fffffff8           	// #34359738360
 18c:	mov	w23, #0xffffffff            	// #-1
 190:	str	x3, [sp, #112]
 194:	bl	0 <malloc>
 198:	mov	x24, x0
 19c:	cbnz	x0, 80 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x80>
 1a0:	mov	x24, #0x0                   	// #0
 1a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
 1a8:	mov	w1, #0x1                   	// #1
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1b4:	b	80 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x80>
 1b8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
 1bc:	mov	w1, #0x1                   	// #1
 1c0:	add	x0, x0, #0x0
 1c4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1c8:	b	2c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x2c>
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	b	158 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x158>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x6c>  // b.none
  18:	mov	x20, x1
  1c:	ldr	w1, [x0, #8]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	w3, w1
  28:	ldr	w22, [x20, #8]
  2c:	str	x23, [sp, #48]
  30:	cmp	w22, w1
  34:	mov	w23, w22
  38:	b.hi	7c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x7c>  // b.pmore
  3c:	cbz	x23, 60 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x60>
  40:	mov	w2, #0x30                  	// #48
  44:	ldr	x0, [x0]
  48:	umull	x2, w22, w2
  4c:	ldr	x1, [x20]
  50:	bl	0 <memmove>
  54:	ldr	w0, [x19, #12]
  58:	cmp	x23, x0
  5c:	b.hi	11c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x11c>  // b.pmore
  60:	ldr	x23, [sp, #48]
  64:	str	w22, [x19, #8]
  68:	ldp	x21, x22, [sp, #32]
  6c:	mov	x0, x19
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	ldr	w2, [x0, #12]
  80:	cmp	x23, x2
  84:	b.hi	f4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xf4>  // b.pmore
  88:	mov	w2, #0x30                  	// #48
  8c:	ldr	x0, [x0]
  90:	umull	x21, w1, w2
  94:	ldr	x4, [x20]
  98:	cbz	x3, d0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xd0>
  9c:	mov	x2, x21
  a0:	mov	x1, x4
  a4:	bl	0 <memmove>
  a8:	ldr	w2, [x20, #8]
  ac:	ldr	x0, [x19]
  b0:	ldr	x3, [x20]
  b4:	add	x2, x2, x2, lsl #1
  b8:	add	x1, x3, x21
  bc:	lsl	x2, x2, #4
  c0:	add	x3, x3, x2
  c4:	cmp	x1, x3
  c8:	b.ne	e4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xe4>  // b.any
  cc:	b	54 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x54>
  d0:	umull	x2, w22, w2
  d4:	add	x1, x4, x21
  d8:	add	x4, x4, x2
  dc:	cmp	x1, x4
  e0:	b.eq	60 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x60>  // b.none
  e4:	sub	x2, x2, x21
  e8:	add	x0, x0, x21
  ec:	bl	0 <memcpy>
  f0:	b	54 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x54>
  f4:	str	wzr, [x0, #8]
  f8:	mov	x2, x23
  fc:	add	x1, x0, #0x10
 100:	mov	x3, #0x30                  	// #48
 104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 108:	mov	x21, #0x0                   	// #0
 10c:	ldr	w2, [x20, #8]
 110:	ldr	x0, [x19]
 114:	ldr	x3, [x20]
 118:	b	b4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xb4>
 11c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w3, [x1, #8]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x4, [x1, #-16]
  a4:	str	x4, [x2]
  a8:	str	w3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x7c>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x4, w21, uxtw
  30:	b.cc	8c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x8c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 74 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x74>
  38:	ldr	x2, [x1]
  3c:	ldr	x0, [x0]
  40:	add	x1, x2, x22, lsl #4
  44:	nop
  48:	ldr	w3, [x2, #8]
  4c:	add	x2, x2, #0x10
  50:	ldur	x4, [x2, #-16]
  54:	str	x4, [x0]
  58:	str	w3, [x0, #8]
  5c:	cmp	x2, x1
  60:	add	x0, x0, #0x10
  64:	b.ne	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.any
  68:	ldr	w0, [x19, #12]
  6c:	cmp	x22, x0
  70:	b.hi	150 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x150>  // b.pmore
  74:	str	w21, [x19, #8]
  78:	ldp	x21, x22, [sp, #32]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	ldr	w1, [x0, #12]
  90:	cmp	x22, x1
  94:	b.hi	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.pmore
  98:	ldr	x3, [x0]
  9c:	ldr	x2, [x20]
  a0:	cbz	x4, f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>
  a4:	lsl	x4, x4, #4
  a8:	add	x5, x2, x4
  ac:	nop
  b0:	ldr	w0, [x2, #8]
  b4:	add	x2, x2, #0x10
  b8:	ldur	x1, [x2, #-16]
  bc:	str	x1, [x3]
  c0:	str	w0, [x3, #8]
  c4:	cmp	x2, x5
  c8:	add	x3, x3, #0x10
  cc:	b.ne	b0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xb0>  // b.any
  d0:	ldr	x0, [x20]
  d4:	ldr	w5, [x20, #8]
  d8:	ldr	x3, [x19]
  dc:	add	x2, x0, x4
  e0:	add	x5, x0, x5, lsl #4
  e4:	add	x3, x3, x4
  e8:	cmp	x2, x5
  ec:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
  f0:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  f4:	add	x5, x2, x22, lsl #4
  f8:	ldr	w0, [x2, #8]
  fc:	add	x2, x2, #0x10
 100:	ldur	x4, [x2, #-16]
 104:	str	x4, [x3]
 108:	str	w0, [x3, #8]
 10c:	cmp	x2, x5
 110:	add	x3, x3, #0x10
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 118:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 11c:	str	wzr, [x0, #8]
 120:	mov	x1, x22
 124:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 128:	ldr	x0, [x20]
 12c:	mov	x4, #0x0                   	// #0
 130:	ldr	w5, [x20, #8]
 134:	ldr	x3, [x19]
 138:	add	x2, x0, x4
 13c:	add	x5, x0, x5, lsl #4
 140:	add	x3, x3, x4
 144:	cmp	x2, x5
 148:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 14c:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 150:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 154:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 158:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 15c:	add	x3, x3, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x0, x0, #0x0
 168:	mov	w2, #0x43                  	// #67
 16c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x1, x0
  24:	str	x1, [sp, #88]
  28:	b.hi	1f4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1f4>  // b.pmore
  2c:	ldr	w2, [x22, #12]
  30:	mov	x3, #0xffffffff            	// #4294967295
  34:	str	x3, [sp, #104]
  38:	add	x2, x2, #0x2
  3c:	orr	x2, x2, x2, lsr #1
  40:	orr	x2, x2, x2, lsr #2
  44:	orr	x2, x2, x2, lsr #4
  48:	orr	x2, x2, x2, lsr #8
  4c:	orr	x1, x2, x2, lsr #16
  50:	orr	x2, x1, x2, lsr #32
  54:	add	x2, x2, #0x1
  58:	cmp	x2, x19
  5c:	csel	x1, x2, x19, cs  // cs = hs, nlast
  60:	cmp	x1, x3
  64:	b.hi	1c0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1c0>  // b.pmore
  68:	add	x0, x1, x1, lsl #4
  6c:	mov	w23, w1
  70:	str	x1, [sp, #96]
  74:	lsl	x0, x0, #3
  78:	bl	0 <malloc>
  7c:	mov	x24, x0
  80:	cbz	x0, 1dc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1dc>
  84:	ldr	w21, [x22, #8]
  88:	mov	w0, #0x88                  	// #136
  8c:	ldr	x20, [x22]
  90:	umaddl	x21, w21, w0, x20
  94:	cmp	x20, x21
  98:	b.eq	190 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x190>  // b.none
  9c:	mov	x19, x24
  a0:	str	x25, [sp, #64]
  a4:	mov	w25, #0x4                   	// #4
  a8:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>
  ac:	add	x20, x20, #0x88
  b0:	add	x19, x19, #0x88
  b4:	cmp	x21, x20
  b8:	b.eq	14c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x14c>  // b.none
  bc:	ldr	w0, [x20, #8]
  c0:	add	x1, x19, #0x48
  c4:	ldrb	w4, [x20, #20]
  c8:	ldrh	w2, [x20, #12]
  cc:	ldr	x3, [x20]
  d0:	str	w0, [x19, #8]
  d4:	ldr	w0, [x20, #16]
  d8:	strb	w4, [x19, #20]
  dc:	str	w0, [x19, #16]
  e0:	ldrb	w0, [x20, #21]
  e4:	strb	w0, [x19, #21]
  e8:	ldr	x0, [x20, #24]
  ec:	ldr	w4, [x20, #40]
  f0:	strh	w2, [x19, #12]
  f4:	ldrb	w2, [x20, #22]
  f8:	str	x0, [x19, #24]
  fc:	ldr	x0, [x20, #32]
 100:	str	w4, [x19, #40]
 104:	str	x3, [x19]
 108:	ldur	x3, [x20, #44]
 10c:	stur	x3, [x19, #44]
 110:	strb	w2, [x19, #22]
 114:	ldr	w2, [x20, #52]
 118:	str	w2, [x19, #52]
 11c:	stp	wzr, w25, [x19, #64]
 120:	str	x0, [x19, #32]
 124:	ldr	w0, [x20, #64]
 128:	str	x1, [x19, #56]
 12c:	cbz	w0, ac <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xac>
 130:	add	x1, x20, #0x38
 134:	add	x0, x19, #0x38
 138:	add	x20, x20, #0x88
 13c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 140:	add	x19, x19, #0x88
 144:	cmp	x21, x20
 148:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xbc>  // b.any
 14c:	ldr	w21, [x22, #8]
 150:	mov	w0, #0x88                  	// #136
 154:	ldr	x19, [x22]
 158:	umaddl	x21, w21, w0, x19
 15c:	cmp	x19, x21
 160:	b.eq	208 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x208>  // b.none
 164:	nop
 168:	ldur	x0, [x21, #-80]
 16c:	sub	x21, x21, #0x88
 170:	add	x1, x21, #0x48
 174:	cmp	x0, x1
 178:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x180>  // b.none
 17c:	bl	0 <free>
 180:	cmp	x21, x19
 184:	b.ne	168 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x168>  // b.any
 188:	ldr	x21, [x22]
 18c:	ldr	x25, [sp, #64]
 190:	add	x0, x22, #0x10
 194:	cmp	x21, x0
 198:	b.eq	1a4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1a4>  // b.none
 19c:	mov	x0, x21
 1a0:	bl	0 <free>
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	str	x24, [x22]
 1ac:	str	w23, [x22, #12]
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldp	x23, x24, [sp, #48]
 1b8:	ldp	x29, x30, [sp], #112
 1bc:	ret
 1c0:	mov	w0, #0xffffff78            	// #-136
 1c4:	mov	w23, #0xffffffff            	// #-1
 1c8:	movk	x0, #0x87, lsl #32
 1cc:	str	x3, [sp, #96]
 1d0:	bl	0 <malloc>
 1d4:	mov	x24, x0
 1d8:	cbnz	x0, 84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x84>
 1dc:	mov	x24, #0x0                   	// #0
 1e0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 1e4:	mov	w1, #0x1                   	// #1
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1f0:	b	84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x84>
 1f4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 1f8:	mov	w1, #0x1                   	// #1
 1fc:	add	x0, x0, #0x0
 200:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 204:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x2c>
 208:	ldr	x25, [sp, #64]
 20c:	b	190 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x190>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x17c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	ldr	w22, [x1, #8]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	w0, w2
  28:	cmp	w22, w2
  2c:	stp	x23, x24, [sp, #48]
  30:	mov	w23, w22
  34:	stp	x25, x26, [sp, #64]
  38:	mov	x25, x1
  3c:	ldr	x19, [x21]
  40:	b.ls	18c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x18c>  // b.plast
  44:	ldr	w1, [x21, #12]
  48:	cmp	x23, x1
  4c:	b.ls	278 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x278>  // b.plast
  50:	mov	w20, #0x88                  	// #136
  54:	umaddl	x20, w2, w20, x19
  58:	cmp	x20, x19
  5c:	b.eq	80 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x80>  // b.none
  60:	ldur	x0, [x20, #-80]
  64:	sub	x20, x20, #0x88
  68:	add	x1, x20, #0x48
  6c:	cmp	x0, x1
  70:	b.eq	58 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x58>  // b.none
  74:	bl	0 <free>
  78:	cmp	x20, x19
  7c:	b.ne	60 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x60>  // b.any
  80:	str	wzr, [x21, #8]
  84:	mov	x1, x23
  88:	mov	x0, x21
  8c:	mov	x19, #0x0                   	// #0
  90:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  94:	ldr	w24, [x25, #8]
  98:	mov	w2, #0x88                  	// #136
  9c:	ldr	x0, [x25]
  a0:	ldr	x1, [x21]
  a4:	add	x20, x0, x19
  a8:	umaddl	x24, w24, w2, x0
  ac:	add	x19, x1, x19
  b0:	cmp	x20, x24
  b4:	b.eq	160 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x160>  // b.none
  b8:	mov	w25, #0x4                   	// #4
  bc:	b	d0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xd0>
  c0:	add	x20, x20, #0x88
  c4:	add	x19, x19, #0x88
  c8:	cmp	x20, x24
  cc:	b.eq	160 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x160>  // b.none
  d0:	ldr	w1, [x20, #8]
  d4:	add	x0, x19, #0x48
  d8:	ldrb	w4, [x20, #20]
  dc:	ldrh	w2, [x20, #12]
  e0:	ldr	x3, [x20]
  e4:	str	w1, [x19, #8]
  e8:	ldr	w1, [x20, #16]
  ec:	strb	w4, [x19, #20]
  f0:	str	w1, [x19, #16]
  f4:	ldrb	w1, [x20, #21]
  f8:	strb	w1, [x19, #21]
  fc:	ldr	x1, [x20, #24]
 100:	ldr	w4, [x20, #40]
 104:	strh	w2, [x19, #12]
 108:	ldrb	w2, [x20, #22]
 10c:	str	x1, [x19, #24]
 110:	ldr	x1, [x20, #32]
 114:	str	w4, [x19, #40]
 118:	str	x3, [x19]
 11c:	ldur	x3, [x20, #44]
 120:	stur	x3, [x19, #44]
 124:	strb	w2, [x19, #22]
 128:	ldr	w2, [x20, #52]
 12c:	str	w2, [x19, #52]
 130:	stp	wzr, w25, [x19, #64]
 134:	str	x1, [x19, #32]
 138:	ldr	w1, [x20, #64]
 13c:	str	x0, [x19, #56]
 140:	cbz	w1, c0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xc0>
 144:	add	x1, x20, #0x38
 148:	add	x0, x19, #0x38
 14c:	add	x20, x20, #0x88
 150:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 154:	add	x19, x19, #0x88
 158:	cmp	x20, x24
 15c:	b.ne	d0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xd0>  // b.any
 160:	ldr	w0, [x21, #12]
 164:	cmp	x23, x0
 168:	b.hi	324 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x324>  // b.pmore
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldp	x25, x26, [sp, #64]
 178:	str	w22, [x21, #8]
 17c:	mov	x0, x21
 180:	ldp	x21, x22, [sp, #32]
 184:	ldp	x29, x30, [sp], #80
 188:	ret
 18c:	cbz	x23, 264 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x264>
 190:	mov	w0, #0x88                  	// #136
 194:	add	x24, x19, #0x38
 198:	ldr	x20, [x1]
 19c:	umull	x25, w22, w0
 1a0:	add	x20, x20, #0x38
 1a4:	add	x26, x20, x25
 1a8:	ldur	w0, [x20, #-48]
 1ac:	mov	x1, x20
 1b0:	ldurb	w5, [x20, #-36]
 1b4:	add	x20, x20, #0x88
 1b8:	ldurh	w2, [x20, #-180]
 1bc:	ldur	x4, [x20, #-192]
 1c0:	stur	w0, [x24, #-48]
 1c4:	mov	x0, x24
 1c8:	add	x24, x24, #0x88
 1cc:	ldur	w3, [x20, #-176]
 1d0:	sturb	w5, [x24, #-172]
 1d4:	stur	w3, [x24, #-176]
 1d8:	ldurb	w3, [x20, #-171]
 1dc:	sturb	w3, [x24, #-171]
 1e0:	ldur	x3, [x20, #-168]
 1e4:	ldur	w5, [x20, #-152]
 1e8:	sturh	w2, [x24, #-180]
 1ec:	ldurb	w2, [x20, #-170]
 1f0:	stur	x3, [x24, #-168]
 1f4:	ldur	x3, [x20, #-160]
 1f8:	stur	w5, [x24, #-152]
 1fc:	stur	x4, [x24, #-192]
 200:	ldur	x4, [x20, #-148]
 204:	stur	x4, [x24, #-148]
 208:	sturb	w2, [x24, #-170]
 20c:	ldur	w2, [x20, #-140]
 210:	stur	x3, [x24, #-160]
 214:	stur	w2, [x24, #-140]
 218:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 21c:	cmp	x20, x26
 220:	b.ne	1a8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1a8>  // b.any
 224:	ldr	w20, [x21, #8]
 228:	mov	w1, #0x88                  	// #136
 22c:	ldr	x0, [x21]
 230:	add	x19, x19, x25
 234:	umaddl	x20, w20, w1, x0
 238:	cmp	x19, x20
 23c:	b.eq	160 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x160>  // b.none
 240:	ldur	x0, [x20, #-80]
 244:	sub	x20, x20, #0x88
 248:	add	x1, x20, #0x48
 24c:	cmp	x0, x1
 250:	b.eq	258 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x258>  // b.none
 254:	bl	0 <free>
 258:	cmp	x20, x19
 25c:	b.ne	240 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x240>  // b.any
 260:	b	160 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x160>
 264:	mov	w20, #0x88                  	// #136
 268:	umaddl	x20, w2, w20, x19
 26c:	cmp	x20, x19
 270:	b.ne	240 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x240>  // b.any
 274:	b	16c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x16c>
 278:	ldr	x20, [x25]
 27c:	cbz	x0, 318 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x318>
 280:	mov	w0, #0x88                  	// #136
 284:	add	x24, x19, #0x38
 288:	add	x20, x20, #0x38
 28c:	umull	x19, w2, w0
 290:	add	x26, x24, x19
 294:	nop
 298:	ldur	w0, [x20, #-48]
 29c:	mov	x1, x20
 2a0:	ldurb	w5, [x20, #-36]
 2a4:	add	x20, x20, #0x88
 2a8:	ldurh	w2, [x20, #-180]
 2ac:	ldur	x4, [x20, #-192]
 2b0:	stur	w0, [x24, #-48]
 2b4:	mov	x0, x24
 2b8:	add	x24, x24, #0x88
 2bc:	ldur	w3, [x20, #-176]
 2c0:	sturb	w5, [x24, #-172]
 2c4:	stur	w3, [x24, #-176]
 2c8:	ldurb	w3, [x20, #-171]
 2cc:	sturb	w3, [x24, #-171]
 2d0:	ldur	x3, [x20, #-168]
 2d4:	ldur	w5, [x20, #-152]
 2d8:	sturh	w2, [x24, #-180]
 2dc:	ldurb	w2, [x20, #-170]
 2e0:	stur	x3, [x24, #-168]
 2e4:	ldur	x3, [x20, #-160]
 2e8:	stur	w5, [x24, #-152]
 2ec:	stur	x4, [x24, #-192]
 2f0:	ldur	x4, [x20, #-148]
 2f4:	stur	x4, [x24, #-148]
 2f8:	sturb	w2, [x24, #-170]
 2fc:	ldur	w2, [x20, #-140]
 300:	stur	x3, [x24, #-160]
 304:	stur	w2, [x24, #-140]
 308:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 30c:	cmp	x24, x26
 310:	b.ne	298 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x298>  // b.any
 314:	b	94 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x94>
 318:	mov	w24, #0x88                  	// #136
 31c:	umaddl	x24, w22, w24, x20
 320:	b	b8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xb8>
 324:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 328:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 32c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 330:	add	x3, x3, #0x0
 334:	add	x1, x1, #0x0
 338:	add	x0, x0, #0x0
 33c:	mov	w2, #0x43                  	// #67
 340:	bl	0 <__assert_fail>

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
       0:	sub	sp, sp, #0x230
       4:	stp	x29, x30, [sp]
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	mov	x19, x0
      14:	ldrb	w0, [x0, #80]
      18:	stp	x21, x22, [sp, #32]
      1c:	mov	x21, x8
      20:	cbz	w0, 290 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x290>
      24:	ldr	x0, [x19, #64]
      28:	ldrb	w1, [x0, #140]
      2c:	cbnz	w1, 3c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x3c>
      30:	ldp	w2, w1, [x19, #72]
      34:	cmp	w2, w1
      38:	b.ls	290 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x290>  // b.plast
      3c:	stp	x23, x24, [sp, #48]
      40:	add	x23, sp, #0x80
      44:	add	x3, x23, #0x10
      48:	mov	x2, #0x800000000           	// #34359738368
      4c:	mov	x1, x23
      50:	add	x22, sp, #0x1a0
      54:	stp	x25, x26, [sp, #64]
      58:	stp	x3, x2, [sp, #128]
      5c:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
      60:	mov	x24, x0
      64:	cbnz	x0, 214 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x214>
      68:	add	x24, sp, #0x110
      6c:	add	x4, x22, #0x10
      70:	ldr	x0, [x19, #64]
      74:	add	x5, x24, #0x10
      78:	mov	x3, #0x800000000           	// #34359738368
      7c:	mov	x1, x24
      80:	mov	x2, x22
      84:	stp	x5, x3, [sp, #272]
      88:	stp	x4, x3, [sp, #416]
      8c:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
      90:	ldr	w0, [sp, #280]
      94:	cbz	w0, 12c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x12c>
      98:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
      9c:	ldr	x1, [x1]
      a0:	ldrb	w1, [x1]
      a4:	str	x27, [sp, #80]
      a8:	cbnz	w1, 388 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x388>
      ac:	ldr	x20, [x19, #40]
      b0:	mov	w0, w0
      b4:	ldr	x1, [sp, #272]
      b8:	mov	w2, #0x2                   	// #2
      bc:	str	w2, [sp, #96]
      c0:	add	x26, x19, #0x18
      c4:	stp	x1, x0, [sp, #104]
      c8:	add	x27, sp, #0x60
      cc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
      d0:	str	xzr, [sp, #120]
      d4:	cmp	x20, x26
      d8:	add	x25, x0, #0x0
      dc:	b.ne	f8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf8>  // b.any
      e0:	b	128 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x128>
      e4:	mov	x0, x20
      e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
      ec:	mov	x20, x0
      f0:	cmp	x26, x0
      f4:	b.eq	128 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x128>  // b.none
      f8:	ldr	x0, [x20, #32]
      fc:	ldr	x1, [x0]
     100:	ldr	x2, [x1, #32]
     104:	cmp	x2, x25
     108:	b.eq	e4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xe4>  // b.none
     10c:	mov	x1, x27
     110:	blr	x2
     114:	mov	x0, x20
     118:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     11c:	mov	x20, x0
     120:	cmp	x26, x0
     124:	b.ne	f8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf8>  // b.any
     128:	ldr	x27, [sp, #80]
     12c:	ldr	w1, [sp, #424]
     130:	cbnz	w1, 198 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x198>
     134:	ldr	x0, [sp, #416]
     138:	mov	x1, #0x1                   	// #1
     13c:	str	x1, [x21]
     140:	add	x22, x22, #0x10
     144:	cmp	x0, x22
     148:	b.eq	150 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x150>  // b.none
     14c:	bl	0 <free>
     150:	ldr	x0, [sp, #272]
     154:	add	x24, x24, #0x10
     158:	cmp	x0, x24
     15c:	b.eq	164 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x164>  // b.none
     160:	bl	0 <free>
     164:	ldr	x0, [sp, #128]
     168:	add	x23, x23, #0x10
     16c:	cmp	x0, x23
     170:	b.eq	2b0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2b0>  // b.none
     174:	bl	0 <free>
     178:	mov	x0, x21
     17c:	ldp	x29, x30, [sp]
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x21, x22, [sp, #32]
     188:	ldp	x23, x24, [sp, #48]
     18c:	ldp	x25, x26, [sp, #64]
     190:	add	sp, sp, #0x230
     194:	ret
     198:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     19c:	ldr	x0, [x0]
     1a0:	ldrb	w0, [x0]
     1a4:	cbnz	w0, 3a4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x3a4>
     1a8:	ldr	x20, [x19, #40]
     1ac:	mov	w1, w1
     1b0:	ldr	x0, [sp, #416]
     1b4:	mov	w2, #0x3                   	// #3
     1b8:	str	w2, [sp, #96]
     1bc:	add	x19, x19, #0x18
     1c0:	stp	x0, x1, [sp, #104]
     1c4:	cmp	x20, x19
     1c8:	str	xzr, [sp, #120]
     1cc:	b.eq	138 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x138>  // b.none
     1d0:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     1d4:	add	x26, sp, #0x60
     1d8:	add	x25, x0, #0x0
     1dc:	b	1f4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1f4>
     1e0:	mov	x0, x20
     1e4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     1e8:	mov	x20, x0
     1ec:	cmp	x19, x0
     1f0:	b.eq	134 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>  // b.none
     1f4:	ldr	x0, [x20, #32]
     1f8:	ldr	x1, [x0]
     1fc:	ldr	x2, [x1, #32]
     200:	cmp	x2, x25
     204:	b.eq	1e0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1e0>  // b.none
     208:	mov	x1, x26
     20c:	blr	x2
     210:	b	1e0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1e0>
     214:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     218:	add	x22, sp, #0x1a0
     21c:	ldr	x0, [x0]
     220:	ldrb	w0, [x0]
     224:	cbnz	w0, 2d0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2d0>
     228:	ldr	w0, [sp, #136]
     22c:	mov	w2, #0x1                   	// #1
     230:	ldr	x20, [x19, #40]
     234:	str	w2, [sp, #416]
     238:	ldr	x1, [sp, #128]
     23c:	stp	x1, x0, [sp, #424]
     240:	add	x25, x19, #0x18
     244:	str	x24, [sp, #440]
     248:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     24c:	cmp	x20, x25
     250:	add	x24, x0, #0x0
     254:	b.ne	270 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x270>  // b.any
     258:	b	68 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x68>
     25c:	mov	x0, x20
     260:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     264:	mov	x20, x0
     268:	cmp	x25, x0
     26c:	b.eq	68 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x68>  // b.none
     270:	ldr	x0, [x20, #32]
     274:	ldr	x1, [x0]
     278:	ldr	x2, [x1, #32]
     27c:	cmp	x2, x24
     280:	b.eq	25c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x25c>  // b.none
     284:	mov	x1, x22
     288:	blr	x2
     28c:	b	25c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x25c>
     290:	mov	x0, #0x1                   	// #1
     294:	str	x0, [x21]
     298:	mov	x0, x21
     29c:	ldp	x29, x30, [sp]
     2a0:	ldp	x19, x20, [sp, #16]
     2a4:	ldp	x21, x22, [sp, #32]
     2a8:	add	sp, sp, #0x230
     2ac:	ret
     2b0:	mov	x0, x21
     2b4:	ldp	x29, x30, [sp]
     2b8:	ldp	x19, x20, [sp, #16]
     2bc:	ldp	x21, x22, [sp, #32]
     2c0:	ldp	x23, x24, [sp, #48]
     2c4:	ldp	x25, x26, [sp, #64]
     2c8:	add	sp, sp, #0x230
     2cc:	ret
     2d0:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     2d4:	add	x22, sp, #0x1a0
     2d8:	add	x0, x0, #0x0
     2dc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     2e0:	tst	w0, #0xff
     2e4:	b.eq	228 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x228>  // b.none
     2e8:	bl	0 <_ZN4llvm4dbgsEv>
     2ec:	mov	x1, x0
     2f0:	ldp	x2, x3, [x0, #16]
     2f4:	sub	x2, x2, x3
     2f8:	cmp	x2, #0x45
     2fc:	b.ls	4a4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x4a4>  // b.plast
     300:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     304:	add	x0, x0, #0x0
     308:	ldp	x4, x5, [x0, #48]
     30c:	stp	x4, x5, [x3, #48]
     310:	ldp	x4, x5, [x0]
     314:	stp	x4, x5, [x3]
     318:	ldp	x4, x5, [x0, #16]
     31c:	stp	x4, x5, [x3, #16]
     320:	ldp	x4, x5, [x0, #32]
     324:	stp	x4, x5, [x3, #32]
     328:	ldur	x0, [x0, #62]
     32c:	stur	x0, [x3, #62]
     330:	ldr	x0, [x1, #24]
     334:	add	x0, x0, #0x46
     338:	str	x0, [x1, #24]
     33c:	mov	w2, #0x1                   	// #1
     340:	mov	w3, #0x10                  	// #16
     344:	add	x22, sp, #0x1a0
     348:	mov	x0, x1
     34c:	mov	x1, x22
     350:	stp	x24, xzr, [sp, #416]
     354:	str	w3, [sp, #432]
     358:	strh	w2, [sp, #436]
     35c:	strb	w2, [sp, #438]
     360:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     364:	ldp	x3, x2, [x0, #16]
     368:	mov	x1, x0
     36c:	cmp	x2, x3
     370:	b.cs	498 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x498>  // b.hs, b.nlast
     374:	add	x0, x2, #0x1
     378:	str	x0, [x1, #24]
     37c:	mov	w0, #0xa                   	// #10
     380:	strb	w0, [x2]
     384:	b	228 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x228>
     388:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     38c:	add	x0, x0, #0x0
     390:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     394:	tst	w0, #0xff
     398:	b.ne	414 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x414>  // b.any
     39c:	ldr	w0, [sp, #280]
     3a0:	b	ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xac>
     3a4:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     3a8:	add	x0, x0, #0x0
     3ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     3b0:	tst	w0, #0xff
     3b4:	b.ne	3c0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x3c0>  // b.any
     3b8:	ldr	w1, [sp, #424]
     3bc:	b	1a8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a8>
     3c0:	bl	0 <_ZN4llvm4dbgsEv>
     3c4:	mov	x1, x0
     3c8:	ldp	x2, x3, [x0, #16]
     3cc:	sub	x2, x2, x3
     3d0:	cmp	x2, #0x31
     3d4:	b.ls	468 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x468>  // b.plast
     3d8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     3dc:	add	x0, x0, #0x0
     3e0:	ldp	x4, x5, [x0]
     3e4:	stp	x4, x5, [x3]
     3e8:	ldrh	w2, [x0, #48]
     3ec:	ldp	x4, x5, [x0, #16]
     3f0:	stp	x4, x5, [x3, #16]
     3f4:	ldp	x4, x5, [x0, #32]
     3f8:	stp	x4, x5, [x3, #32]
     3fc:	strh	w2, [x3, #48]
     400:	ldr	x0, [x1, #24]
     404:	add	x0, x0, #0x32
     408:	str	x0, [x1, #24]
     40c:	ldr	w1, [sp, #424]
     410:	b	1a8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a8>
     414:	bl	0 <_ZN4llvm4dbgsEv>
     418:	mov	x1, x0
     41c:	ldp	x2, x3, [x0, #16]
     420:	sub	x2, x2, x3
     424:	cmp	x2, #0x33
     428:	b.ls	480 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x480>  // b.plast
     42c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     430:	add	x0, x0, #0x0
     434:	ldp	x4, x5, [x0]
     438:	stp	x4, x5, [x3]
     43c:	ldr	w2, [x0, #48]
     440:	ldp	x4, x5, [x0, #16]
     444:	stp	x4, x5, [x3, #16]
     448:	ldp	x4, x5, [x0, #32]
     44c:	stp	x4, x5, [x3, #32]
     450:	str	w2, [x3, #48]
     454:	ldr	x0, [x1, #24]
     458:	add	x0, x0, #0x34
     45c:	str	x0, [x1, #24]
     460:	ldr	w0, [sp, #280]
     464:	b	ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xac>
     468:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     46c:	mov	x2, #0x32                  	// #50
     470:	add	x1, x1, #0x0
     474:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     478:	ldr	w1, [sp, #424]
     47c:	b	1a8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a8>
     480:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     484:	mov	x2, #0x34                  	// #52
     488:	add	x1, x1, #0x0
     48c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     490:	ldr	w0, [sp, #280]
     494:	b	ac <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xac>
     498:	mov	w1, #0xa                   	// #10
     49c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     4a0:	b	228 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x228>
     4a4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4a8:	add	x1, x1, #0x0
     4ac:	mov	x2, #0x46                  	// #70
     4b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4b4:	mov	x1, x0
     4b8:	b	33c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x33c>
     4bc:	nop

00000000000004c0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
     4c0:	cmp	w0, #0x4
     4c4:	b.hi	4d8 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x18>  // b.pmore
     4c8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4cc:	add	x1, x1, #0x0
     4d0:	ldr	w0, [x1, w0, uxtw #2]
     4d4:	ret
     4d8:	stp	x29, x30, [sp, #-16]!
     4dc:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4e0:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4e4:	mov	x29, sp
     4e8:	add	x1, x1, #0x0
     4ec:	add	x0, x0, #0x0
     4f0:	mov	w2, #0x28                  	// #40
     4f4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000004f8 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
     4f8:	stp	x29, x30, [sp, #-64]!
     4fc:	mov	x29, sp
     500:	stp	x19, x20, [sp, #16]
     504:	mov	x20, x0
     508:	ldr	x0, [x0, #64]
     50c:	stp	x21, x22, [sp, #32]
     510:	mov	x21, x1
     514:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
     518:	cbnz	w0, 530 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x38>
     51c:	mov	w0, #0x1                   	// #1
     520:	ldp	x19, x20, [sp, #16]
     524:	ldp	x21, x22, [sp, #32]
     528:	ldp	x29, x30, [sp], #64
     52c:	ret
     530:	bl	4c0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     534:	str	w0, [sp, #48]
     538:	ldr	x19, [x20, #40]
     53c:	str	x21, [sp, #56]
     540:	add	x20, x20, #0x18
     544:	cmp	x19, x20
     548:	b.eq	5a0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xa8>  // b.none
     54c:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     550:	add	x22, sp, #0x30
     554:	add	x21, x21, #0x0
     558:	b	570 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x78>
     55c:	mov	x0, x19
     560:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     564:	mov	x19, x0
     568:	cmp	x20, x0
     56c:	b.eq	5a0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xa8>  // b.none
     570:	ldr	x0, [x19, #32]
     574:	ldr	x1, [x0]
     578:	ldr	x2, [x1, #24]
     57c:	cmp	x2, x21
     580:	b.eq	55c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x64>  // b.none
     584:	mov	x1, x22
     588:	blr	x2
     58c:	mov	x0, x19
     590:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     594:	mov	x19, x0
     598:	cmp	x20, x0
     59c:	b.ne	570 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x78>  // b.any
     5a0:	mov	w0, #0x0                   	// #0
     5a4:	ldp	x19, x20, [sp, #16]
     5a8:	ldp	x21, x22, [sp, #32]
     5ac:	ldp	x29, x30, [sp], #64
     5b0:	ret
     5b4:	nop

00000000000005b8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
     5b8:	stp	x29, x30, [sp, #-64]!
     5bc:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     5c0:	mov	x29, sp
     5c4:	ldr	x2, [x2]
     5c8:	stp	x19, x20, [sp, #16]
     5cc:	mov	x20, x0
     5d0:	stp	x21, x22, [sp, #32]
     5d4:	mov	x21, x1
     5d8:	ldrb	w0, [x2]
     5dc:	cbnz	w0, 660 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xa8>
     5e0:	ldr	x19, [x20, #40]
     5e4:	mov	w0, #0x5                   	// #5
     5e8:	str	w0, [sp, #48]
     5ec:	add	x20, x20, #0x18
     5f0:	str	x21, [sp, #56]
     5f4:	cmp	x19, x20
     5f8:	b.eq	650 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x98>  // b.none
     5fc:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     600:	add	x22, sp, #0x30
     604:	add	x21, x21, #0x0
     608:	b	620 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x68>
     60c:	mov	x0, x19
     610:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     614:	mov	x19, x0
     618:	cmp	x20, x0
     61c:	b.eq	650 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x98>  // b.none
     620:	ldr	x0, [x19, #32]
     624:	ldr	x1, [x0]
     628:	ldr	x2, [x1, #16]
     62c:	cmp	x2, x21
     630:	b.eq	60c <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x54>  // b.none
     634:	mov	x1, x22
     638:	blr	x2
     63c:	mov	x0, x19
     640:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     644:	mov	x19, x0
     648:	cmp	x20, x0
     64c:	b.ne	620 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x68>  // b.any
     650:	ldp	x19, x20, [sp, #16]
     654:	ldp	x21, x22, [sp, #32]
     658:	ldp	x29, x30, [sp], #64
     65c:	ret
     660:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     664:	add	x0, x0, #0x0
     668:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     66c:	tst	w0, #0xff
     670:	b.eq	5e0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>  // b.none
     674:	bl	0 <_ZN4llvm4dbgsEv>
     678:	mov	x19, x0
     67c:	ldp	x1, x2, [x0, #16]
     680:	sub	x1, x1, x2
     684:	cmp	x1, #0x1a
     688:	b.ls	6e4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x12c>  // b.plast
     68c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     690:	add	x0, x0, #0x0
     694:	ldr	x1, [x0, #16]
     698:	str	x1, [x2, #16]
     69c:	ldp	x4, x5, [x0]
     6a0:	stp	x4, x5, [x2]
     6a4:	ldur	w0, [x0, #23]
     6a8:	stur	w0, [x2, #23]
     6ac:	ldr	x0, [x19, #24]
     6b0:	add	x0, x0, #0x1b
     6b4:	str	x0, [x19, #24]
     6b8:	ldr	w1, [x21]
     6bc:	mov	x0, x19
     6c0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6c4:	ldp	x1, x0, [x19, #16]
     6c8:	cmp	x0, x1
     6cc:	b.cs	6fc <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x144>  // b.hs, b.nlast
     6d0:	add	x1, x0, #0x1
     6d4:	str	x1, [x19, #24]
     6d8:	mov	w1, #0xa                   	// #10
     6dc:	strb	w1, [x0]
     6e0:	b	5e0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>
     6e4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     6e8:	mov	x2, #0x1b                  	// #27
     6ec:	add	x1, x1, #0x0
     6f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f4:	mov	x19, x0
     6f8:	b	6b8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x100>
     6fc:	mov	x0, x19
     700:	mov	w1, #0xa                   	// #10
     704:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     708:	b	5e0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>
     70c:	nop

0000000000000710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
     710:	stp	x29, x30, [sp, #-64]!
     714:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     718:	mov	x29, sp
     71c:	ldr	x2, [x2]
     720:	stp	x19, x20, [sp, #16]
     724:	mov	x20, x0
     728:	stp	x21, x22, [sp, #32]
     72c:	mov	x21, x1
     730:	ldrb	w0, [x2]
     734:	cbnz	w0, 7b8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xa8>
     738:	ldr	x19, [x20, #40]
     73c:	mov	w0, #0x2                   	// #2
     740:	str	w0, [sp, #48]
     744:	add	x20, x20, #0x18
     748:	str	x21, [sp, #56]
     74c:	cmp	x19, x20
     750:	b.eq	7a8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x98>  // b.none
     754:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     758:	add	x22, sp, #0x30
     75c:	add	x21, x21, #0x0
     760:	b	778 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x68>
     764:	mov	x0, x19
     768:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     76c:	mov	x19, x0
     770:	cmp	x20, x0
     774:	b.eq	7a8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x98>  // b.none
     778:	ldr	x0, [x19, #32]
     77c:	ldr	x1, [x0]
     780:	ldr	x2, [x1, #16]
     784:	cmp	x2, x21
     788:	b.eq	764 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x54>  // b.none
     78c:	mov	x1, x22
     790:	blr	x2
     794:	mov	x0, x19
     798:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     79c:	mov	x19, x0
     7a0:	cmp	x20, x0
     7a4:	b.ne	778 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x68>  // b.any
     7a8:	ldp	x19, x20, [sp, #16]
     7ac:	ldp	x21, x22, [sp, #32]
     7b0:	ldp	x29, x30, [sp], #64
     7b4:	ret
     7b8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     7bc:	add	x0, x0, #0x0
     7c0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     7c4:	tst	w0, #0xff
     7c8:	b.eq	738 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>  // b.none
     7cc:	bl	0 <_ZN4llvm4dbgsEv>
     7d0:	mov	x19, x0
     7d4:	ldp	x1, x2, [x0, #16]
     7d8:	sub	x1, x1, x2
     7dc:	cmp	x1, #0x19
     7e0:	b.ls	83c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x12c>  // b.plast
     7e4:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     7e8:	add	x0, x0, #0x0
     7ec:	ldrh	w1, [x0, #24]
     7f0:	ldp	x4, x5, [x0]
     7f4:	stp	x4, x5, [x2]
     7f8:	ldr	x0, [x0, #16]
     7fc:	str	x0, [x2, #16]
     800:	strh	w1, [x2, #24]
     804:	ldr	x0, [x19, #24]
     808:	add	x0, x0, #0x1a
     80c:	str	x0, [x19, #24]
     810:	ldr	w1, [x21]
     814:	mov	x0, x19
     818:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     81c:	ldp	x1, x0, [x19, #16]
     820:	cmp	x0, x1
     824:	b.cs	854 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x144>  // b.hs, b.nlast
     828:	add	x1, x0, #0x1
     82c:	str	x1, [x19, #24]
     830:	mov	w1, #0xa                   	// #10
     834:	strb	w1, [x0]
     838:	b	738 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>
     83c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     840:	mov	x2, #0x1a                  	// #26
     844:	add	x1, x1, #0x0
     848:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     84c:	mov	x19, x0
     850:	b	810 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x100>
     854:	mov	x0, x19
     858:	mov	w1, #0xa                   	// #10
     85c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     860:	b	738 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>
     864:	nop

0000000000000868 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
     868:	stp	x29, x30, [sp, #-64]!
     86c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     870:	mov	x29, sp
     874:	ldr	x2, [x2]
     878:	stp	x19, x20, [sp, #16]
     87c:	mov	x20, x0
     880:	stp	x21, x22, [sp, #32]
     884:	mov	x21, x1
     888:	ldrb	w0, [x2]
     88c:	cbnz	w0, 910 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xa8>
     890:	ldr	x19, [x20, #40]
     894:	mov	w0, #0x3                   	// #3
     898:	str	w0, [sp, #48]
     89c:	add	x20, x20, #0x18
     8a0:	str	x21, [sp, #56]
     8a4:	cmp	x19, x20
     8a8:	b.eq	900 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x98>  // b.none
     8ac:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     8b0:	add	x22, sp, #0x30
     8b4:	add	x21, x21, #0x0
     8b8:	b	8d0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x68>
     8bc:	mov	x0, x19
     8c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     8c4:	mov	x19, x0
     8c8:	cmp	x20, x0
     8cc:	b.eq	900 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x98>  // b.none
     8d0:	ldr	x0, [x19, #32]
     8d4:	ldr	x1, [x0]
     8d8:	ldr	x2, [x1, #16]
     8dc:	cmp	x2, x21
     8e0:	b.eq	8bc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x54>  // b.none
     8e4:	mov	x1, x22
     8e8:	blr	x2
     8ec:	mov	x0, x19
     8f0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     8f4:	mov	x19, x0
     8f8:	cmp	x20, x0
     8fc:	b.ne	8d0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x68>  // b.any
     900:	ldp	x19, x20, [sp, #16]
     904:	ldp	x21, x22, [sp, #32]
     908:	ldp	x29, x30, [sp], #64
     90c:	ret
     910:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     914:	add	x0, x0, #0x0
     918:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     91c:	tst	w0, #0xff
     920:	b.eq	890 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>  // b.none
     924:	bl	0 <_ZN4llvm4dbgsEv>
     928:	mov	x19, x0
     92c:	ldp	x1, x2, [x0, #16]
     930:	sub	x1, x1, x2
     934:	cmp	x1, #0x17
     938:	b.ls	98c <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x124>  // b.plast
     93c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     940:	add	x0, x0, #0x0
     944:	ldp	x4, x5, [x0]
     948:	stp	x4, x5, [x2]
     94c:	ldr	x0, [x0, #16]
     950:	str	x0, [x2, #16]
     954:	ldr	x0, [x19, #24]
     958:	add	x0, x0, #0x18
     95c:	str	x0, [x19, #24]
     960:	ldr	w1, [x21]
     964:	mov	x0, x19
     968:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     96c:	ldp	x1, x0, [x19, #16]
     970:	cmp	x0, x1
     974:	b.cs	9a4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x13c>  // b.hs, b.nlast
     978:	add	x1, x0, #0x1
     97c:	str	x1, [x19, #24]
     980:	mov	w1, #0xa                   	// #10
     984:	strb	w1, [x0]
     988:	b	890 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>
     98c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     990:	mov	x2, #0x18                  	// #24
     994:	add	x1, x1, #0x0
     998:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     99c:	mov	x19, x0
     9a0:	b	960 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xf8>
     9a4:	mov	x0, x19
     9a8:	mov	w1, #0xa                   	// #10
     9ac:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     9b0:	b	890 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>
     9b4:	nop

00000000000009b8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
     9b8:	stp	x29, x30, [sp, #-48]!
     9bc:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     9c0:	mov	x29, sp
     9c4:	ldr	x2, [x2]
     9c8:	stp	x19, x20, [sp, #16]
     9cc:	mov	x20, x0
     9d0:	stp	x21, x22, [sp, #32]
     9d4:	mov	x22, x1
     9d8:	ldrb	w0, [x2]
     9dc:	cbnz	w0, a50 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x98>
     9e0:	ldr	x19, [x20, #40]
     9e4:	add	x20, x20, #0x18
     9e8:	cmp	x20, x19
     9ec:	b.eq	a40 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x88>  // b.none
     9f0:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     9f4:	add	x21, x21, #0x0
     9f8:	b	a10 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x58>
     9fc:	mov	x0, x19
     a00:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     a04:	mov	x19, x0
     a08:	cmp	x20, x0
     a0c:	b.eq	a40 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x88>  // b.none
     a10:	ldr	x0, [x19, #32]
     a14:	ldr	x2, [x0]
     a18:	ldr	x2, [x2, #40]
     a1c:	cmp	x2, x21
     a20:	b.eq	9fc <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x44>  // b.none
     a24:	mov	x1, x22
     a28:	blr	x2
     a2c:	mov	x0, x19
     a30:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     a34:	mov	x19, x0
     a38:	cmp	x20, x0
     a3c:	b.ne	a10 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x58>  // b.any
     a40:	ldp	x19, x20, [sp, #16]
     a44:	ldp	x21, x22, [sp, #32]
     a48:	ldp	x29, x30, [sp], #48
     a4c:	ret
     a50:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     a54:	add	x0, x0, #0x0
     a58:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a5c:	tst	w0, #0xff
     a60:	b.eq	9e0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>  // b.none
     a64:	bl	0 <_ZN4llvm4dbgsEv>
     a68:	mov	x2, x0
     a6c:	ldp	x1, x3, [x0, #16]
     a70:	sub	x1, x1, x3
     a74:	cmp	x1, #0x18
     a78:	b.ls	b0c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x154>  // b.plast
     a7c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     a80:	add	x0, x0, #0x0
     a84:	ldrb	w1, [x0, #24]
     a88:	ldp	x4, x5, [x0]
     a8c:	stp	x4, x5, [x3]
     a90:	ldr	x0, [x0, #16]
     a94:	str	x0, [x3, #16]
     a98:	strb	w1, [x3, #24]
     a9c:	ldr	x0, [x2, #24]
     aa0:	add	x0, x0, #0x19
     aa4:	str	x0, [x2, #24]
     aa8:	ldr	x1, [x22]
     aac:	mov	x0, x2
     ab0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ab4:	mov	x2, x0
     ab8:	ldp	x3, x1, [x0, #16]
     abc:	cmp	x3, x1
     ac0:	b.ls	b38 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x180>  // b.plast
     ac4:	add	x0, x1, #0x1
     ac8:	str	x0, [x2, #24]
     acc:	mov	w0, #0x2e                  	// #46
     ad0:	strb	w0, [x1]
     ad4:	ldr	x1, [x22, #8]
     ad8:	mov	x0, x2
     adc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ae0:	mov	x1, x0
     ae4:	ldp	x2, x3, [x0, #16]
     ae8:	sub	x2, x2, x3
     aec:	cmp	x2, #0x1
     af0:	b.ls	b24 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x16c>  // b.plast
     af4:	mov	w0, #0xa5d                 	// #2653
     af8:	strh	w0, [x3]
     afc:	ldr	x0, [x1, #24]
     b00:	add	x0, x0, #0x2
     b04:	str	x0, [x1, #24]
     b08:	b	9e0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>
     b0c:	mov	x2, #0x19                  	// #25
     b10:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     b14:	add	x1, x1, #0x0
     b18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b1c:	mov	x2, x0
     b20:	b	aa8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xf0>
     b24:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     b28:	mov	x2, #0x2                   	// #2
     b2c:	add	x1, x1, #0x0
     b30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b34:	b	9e0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>
     b38:	mov	w1, #0x2e                  	// #46
     b3c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b40:	mov	x2, x0
     b44:	b	ad4 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x11c>

0000000000000b48 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
     b48:	stp	x29, x30, [sp, #-128]!
     b4c:	adrp	x4, 0 <_ZN4llvm9DebugFlagE>
     b50:	mov	x29, sp
     b54:	ldr	x4, [x4]
     b58:	stp	x19, x20, [sp, #16]
     b5c:	mov	x20, x0
     b60:	stp	x21, x22, [sp, #32]
     b64:	mov	x21, x2
     b68:	ldrb	w0, [x4]
     b6c:	stp	x23, x24, [sp, #48]
     b70:	mov	x22, x3
     b74:	mov	x23, x1
     b78:	cbnz	w0, c38 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xf0>
     b7c:	add	x24, x22, x22, lsl #1
     b80:	add	x24, x21, x24, lsl #3
     b84:	cmp	x21, x24
     b88:	b.eq	bb0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x68>  // b.none
     b8c:	mov	x19, x21
     b90:	ldr	x0, [x20, #64]
     b94:	ldr	x1, [x19]
     b98:	ldr	x0, [x0, #24]
     b9c:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     ba0:	mov	w0, w0
     ba4:	str	x0, [x19], #24
     ba8:	cmp	x24, x19
     bac:	b.ne	b90 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x48>  // b.any
     bb0:	ldr	x19, [x20, #40]
     bb4:	mov	w0, #0x4                   	// #4
     bb8:	str	w0, [sp, #96]
     bbc:	add	x20, x20, #0x18
     bc0:	stp	x23, x21, [sp, #104]
     bc4:	cmp	x19, x20
     bc8:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     bcc:	str	x22, [sp, #120]
     bd0:	add	x21, x21, #0x0
     bd4:	add	x22, sp, #0x60
     bd8:	b.ne	bf4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xac>  // b.any
     bdc:	b	c24 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xdc>
     be0:	mov	x0, x19
     be4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     be8:	mov	x19, x0
     bec:	cmp	x20, x0
     bf0:	b.eq	c24 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xdc>  // b.none
     bf4:	ldr	x0, [x19, #32]
     bf8:	ldr	x1, [x0]
     bfc:	ldr	x2, [x1, #16]
     c00:	cmp	x2, x21
     c04:	b.eq	be0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x98>  // b.none
     c08:	mov	x1, x22
     c0c:	blr	x2
     c10:	mov	x0, x19
     c14:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     c18:	mov	x19, x0
     c1c:	cmp	x20, x0
     c20:	b.ne	bf4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xac>  // b.any
     c24:	ldp	x19, x20, [sp, #16]
     c28:	ldp	x21, x22, [sp, #32]
     c2c:	ldp	x23, x24, [sp, #48]
     c30:	ldp	x29, x30, [sp], #128
     c34:	ret
     c38:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     c3c:	add	x0, x0, #0x0
     c40:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     c44:	tst	w0, #0xff
     c48:	b.eq	b7c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x34>  // b.none
     c4c:	stp	x25, x26, [sp, #64]
     c50:	bl	0 <_ZN4llvm4dbgsEv>
     c54:	mov	x19, x0
     c58:	ldp	x1, x2, [x0, #16]
     c5c:	sub	x1, x1, x2
     c60:	cmp	x1, #0x18
     c64:	b.ls	ed4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x38c>  // b.plast
     c68:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     c6c:	add	x0, x0, #0x0
     c70:	ldrb	w1, [x0, #24]
     c74:	ldp	x4, x5, [x0]
     c78:	stp	x4, x5, [x2]
     c7c:	ldr	x0, [x0, #16]
     c80:	str	x0, [x2, #16]
     c84:	strb	w1, [x2, #24]
     c88:	ldr	x0, [x19, #24]
     c8c:	add	x0, x0, #0x19
     c90:	str	x0, [x19, #24]
     c94:	ldr	w1, [x23]
     c98:	mov	x0, x19
     c9c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ca0:	ldp	x1, x0, [x19, #16]
     ca4:	cmp	x0, x1
     ca8:	b.cs	eec <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3a4>  // b.hs, b.nlast
     cac:	add	x1, x0, #0x1
     cb0:	str	x1, [x19, #24]
     cb4:	mov	w1, #0xa                   	// #10
     cb8:	strb	w1, [x0]
     cbc:	add	x25, x22, x22, lsl #1
     cc0:	mov	x19, x21
     cc4:	add	x25, x21, x25, lsl #3
     cc8:	cmp	x21, x25
     ccc:	b.eq	efc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3b4>  // b.none
     cd0:	stp	x27, x28, [sp, #80]
     cd4:	mov	x28, #0x7963                	// #31075
     cd8:	movk	x28, #0x6c63, lsl #16
     cdc:	movk	x28, #0x7365, lsl #32
     ce0:	adrp	x27, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     ce4:	adrp	x26, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     ce8:	add	x27, x27, #0x0
     cec:	add	x26, x26, #0x0
     cf0:	movk	x28, #0x203a, lsl #48
     cf4:	b	de0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x298>
     cf8:	ldp	x0, x1, [x27]
     cfc:	stp	x0, x1, [x3]
     d00:	ldr	w0, [x27, #16]
     d04:	str	w0, [x3, #16]
     d08:	ldr	x0, [x2, #24]
     d0c:	ldr	x1, [x19]
     d10:	add	x0, x0, #0x14
     d14:	str	x0, [x2, #24]
     d18:	mov	x0, x2
     d1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d20:	mov	x2, x0
     d24:	ldp	x3, x1, [x0, #16]
     d28:	cmp	x1, x3
     d2c:	b.cs	e30 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2e8>  // b.hs, b.nlast
     d30:	add	x0, x1, #0x1
     d34:	str	x0, [x2, #24]
     d38:	mov	w0, #0x2e                  	// #46
     d3c:	strb	w0, [x1]
     d40:	mov	x0, x2
     d44:	ldr	x1, [x19, #8]
     d48:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d4c:	mov	x1, x0
     d50:	ldp	x2, x3, [x0, #16]
     d54:	sub	x2, x2, x3
     d58:	cmp	x2, #0x2
     d5c:	b.ls	e5c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x314>  // b.plast
     d60:	ldrh	w2, [x26]
     d64:	ldrb	w0, [x26, #2]
     d68:	strh	w2, [x3]
     d6c:	strb	w0, [x3, #2]
     d70:	ldr	x0, [x1, #24]
     d74:	add	x0, x0, #0x3
     d78:	str	x0, [x1, #24]
     d7c:	bl	0 <_ZN4llvm4dbgsEv>
     d80:	mov	x2, x0
     d84:	ldp	x1, x3, [x0, #16]
     d88:	sub	x1, x1, x3
     d8c:	cmp	x1, #0x7
     d90:	b.ls	e80 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x338>  // b.plast
     d94:	str	x28, [x3]
     d98:	ldr	x0, [x0, #24]
     d9c:	ldr	w1, [x19, #16]
     da0:	add	x0, x0, #0x8
     da4:	str	x0, [x2, #24]
     da8:	mov	x0, x2
     dac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     db0:	mov	x1, x0
     db4:	ldp	x3, x2, [x0, #16]
     db8:	cmp	x2, x3
     dbc:	b.cs	eb0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x368>  // b.hs, b.nlast
     dc0:	add	x0, x2, #0x1
     dc4:	str	x0, [x1, #24]
     dc8:	mov	w0, #0xa                   	// #10
     dcc:	strb	w0, [x2]
     dd0:	add	x19, x19, #0x18
     dd4:	cmp	x19, x25
     dd8:	mov	x24, x19
     ddc:	b.eq	ec8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x380>  // b.none
     de0:	ldr	w0, [x19, #20]
     de4:	cmp	w0, #0x1
     de8:	b.ne	f04 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3bc>  // b.any
     dec:	bl	0 <_ZN4llvm4dbgsEv>
     df0:	mov	x2, x0
     df4:	ldp	x1, x3, [x0, #16]
     df8:	sub	x1, x1, x3
     dfc:	cmp	x1, #0x13
     e00:	b.hi	cf8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1b0>  // b.pmore
     e04:	mov	x1, x27
     e08:	mov	x2, #0x14                  	// #20
     e0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e10:	mov	x2, x0
     e14:	ldr	x1, [x19]
     e18:	mov	x0, x2
     e1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e20:	mov	x2, x0
     e24:	ldp	x3, x1, [x0, #16]
     e28:	cmp	x1, x3
     e2c:	b.cc	d30 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e8>  // b.lo, b.ul, b.last
     e30:	mov	w1, #0x2e                  	// #46
     e34:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     e38:	ldr	x1, [x19, #8]
     e3c:	mov	x2, x0
     e40:	mov	x0, x2
     e44:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e48:	mov	x1, x0
     e4c:	ldp	x2, x3, [x0, #16]
     e50:	sub	x2, x2, x3
     e54:	cmp	x2, #0x2
     e58:	b.hi	d60 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x218>  // b.pmore
     e5c:	mov	x1, x26
     e60:	mov	x2, #0x3                   	// #3
     e64:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e68:	bl	0 <_ZN4llvm4dbgsEv>
     e6c:	mov	x2, x0
     e70:	ldp	x1, x3, [x0, #16]
     e74:	sub	x1, x1, x3
     e78:	cmp	x1, #0x7
     e7c:	b.hi	d94 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x24c>  // b.pmore
     e80:	mov	x2, #0x8                   	// #8
     e84:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     e88:	add	x1, x1, #0x0
     e8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e90:	ldr	w1, [x19, #16]
     e94:	mov	x2, x0
     e98:	mov	x0, x2
     e9c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ea0:	mov	x1, x0
     ea4:	ldp	x3, x2, [x0, #16]
     ea8:	cmp	x2, x3
     eac:	b.cc	dc0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x278>  // b.lo, b.ul, b.last
     eb0:	add	x19, x19, #0x18
     eb4:	mov	w1, #0xa                   	// #10
     eb8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     ebc:	mov	x24, x19
     ec0:	cmp	x19, x25
     ec4:	b.ne	de0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x298>  // b.any
     ec8:	ldp	x25, x26, [sp, #64]
     ecc:	ldp	x27, x28, [sp, #80]
     ed0:	b	b8c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x44>
     ed4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     ed8:	mov	x2, #0x19                  	// #25
     edc:	add	x1, x1, #0x0
     ee0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ee4:	mov	x19, x0
     ee8:	b	c94 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x14c>
     eec:	mov	x0, x19
     ef0:	mov	w1, #0xa                   	// #10
     ef4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     ef8:	b	cbc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x174>
     efc:	ldp	x25, x26, [sp, #64]
     f00:	b	bb0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x68>
     f04:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     f08:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     f0c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     f10:	add	x3, x3, #0x0
     f14:	add	x1, x1, #0x0
     f18:	add	x0, x0, #0x0
     f1c:	mov	w2, #0x102                 	// #258
     f20:	bl	0 <__assert_fail>
     f24:	nop

0000000000000f28 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
     f28:	stp	x29, x30, [sp, #-48]!
     f2c:	mov	x29, sp
     f30:	ldr	x2, [x1, #8]
     f34:	stp	x19, x20, [sp, #16]
     f38:	ldrb	w3, [x2, #840]
     f3c:	str	x21, [sp, #32]
     f40:	cbz	w3, 1054 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x12c>
     f44:	ldr	w3, [x2, #784]
     f48:	cmp	w3, #0x3
     f4c:	b.ne	1034 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x10c>  // b.any
     f50:	ldr	x2, [x2]
     f54:	ldrb	w3, [x2, #324]
     f58:	cbnz	w3, 1014 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xec>
     f5c:	ldrb	w2, [x2, #325]
     f60:	cbnz	w2, 1014 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xec>
     f64:	mov	x19, x1
     f68:	mov	x21, x8
     f6c:	mov	x20, x0
     f70:	bl	710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
     f74:	mov	x1, x19
     f78:	mov	x0, x20
     f7c:	bl	868 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
     f80:	mov	x1, x19
     f84:	mov	x2, #0x0                   	// #0
     f88:	mov	x3, #0x0                   	// #0
     f8c:	mov	x0, x20
     f90:	bl	b48 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     f94:	ldr	x0, [x19, #8]
     f98:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
     f9c:	mov	x0, x20
     fa0:	mov	x1, x19
     fa4:	bl	5b8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
     fa8:	ldr	x0, [x20, #8]
     fac:	cbz	x0, ff4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xcc>
     fb0:	ldr	x2, [x0]
     fb4:	mov	x1, x19
     fb8:	ldr	x2, [x2, #16]
     fbc:	blr	x2
     fc0:	tst	w0, #0xff
     fc4:	b.eq	ff4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xcc>  // b.none
     fc8:	ldr	x0, [x20, #8]
     fcc:	mov	x1, x19
     fd0:	mov	x8, x21
     fd4:	ldr	x2, [x0]
     fd8:	ldr	x2, [x2, #48]
     fdc:	blr	x2
     fe0:	mov	x0, x21
     fe4:	ldp	x19, x20, [sp, #16]
     fe8:	ldr	x21, [sp, #32]
     fec:	ldp	x29, x30, [sp], #48
     ff0:	ret
     ff4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     ff8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     ffc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1000:	add	x3, x3, #0x0
    1004:	add	x1, x1, #0x0
    1008:	add	x0, x0, #0x0
    100c:	mov	w2, #0x47                  	// #71
    1010:	bl	0 <__assert_fail>
    1014:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1018:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    101c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1020:	add	x3, x3, #0x0
    1024:	add	x1, x1, #0x0
    1028:	add	x0, x0, #0x0
    102c:	mov	w2, #0xa9                  	// #169
    1030:	bl	0 <__assert_fail>
    1034:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1038:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    103c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1040:	add	x3, x3, #0x0
    1044:	add	x1, x1, #0x0
    1048:	add	x0, x0, #0x0
    104c:	mov	w2, #0xa4                  	// #164
    1050:	bl	0 <__assert_fail>
    1054:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1058:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    105c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1060:	add	x3, x3, #0x0
    1064:	add	x1, x1, #0x0
    1068:	add	x0, x0, #0x0
    106c:	mov	w2, #0xa3                  	// #163
    1070:	bl	0 <__assert_fail>
    1074:	nop

0000000000001078 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
    1078:	stp	x29, x30, [sp, #-112]!
    107c:	mov	x29, sp
    1080:	stp	x23, x24, [sp, #48]
    1084:	mov	x23, x0
    1088:	ldr	x0, [x1, #8]
    108c:	stp	x19, x20, [sp, #16]
    1090:	ldr	x0, [x0]
    1094:	ldr	x20, [x0, #288]
    1098:	cbnz	x20, 10ac <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x34>
    109c:	ldp	x19, x20, [sp, #16]
    10a0:	ldp	x23, x24, [sp, #48]
    10a4:	ldp	x29, x30, [sp], #112
    10a8:	ret
    10ac:	fmov	d0, x20
    10b0:	and	w24, w2, #0xff
    10b4:	stp	x21, x22, [sp, #32]
    10b8:	add	x22, sp, #0x50
    10bc:	cnt	v0.8b, v0.8b
    10c0:	mov	x21, x1
    10c4:	mov	x0, #0x400000000           	// #17179869184
    10c8:	add	x1, x22, #0x10
    10cc:	stp	x25, x26, [sp, #64]
    10d0:	mov	x3, #0x4                   	// #4
    10d4:	addv	b0, v0.8b
    10d8:	stp	x1, x0, [sp, #80]
    10dc:	umov	w2, v0.b[0]
    10e0:	cmp	w2, #0x4
    10e4:	sxtw	x19, w2
    10e8:	b.gt	126c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1f4>
    10ec:	cmp	x19, x3
    10f0:	b.hi	12a0 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x228>  // b.pmore
    10f4:	ldr	x26, [sp, #80]
    10f8:	str	w19, [sp, #88]
    10fc:	mov	x0, x26
    1100:	add	x2, x26, x19, lsl #2
    1104:	nop
    1108:	str	wzr, [x0], #4
    110c:	cmp	x2, x0
    1110:	b.ne	1108 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x90>  // b.any
    1114:	ldr	w25, [sp, #88]
    1118:	cbz	w25, 1164 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xec>
    111c:	mov	w0, w25
    1120:	mov	x19, #0x0                   	// #0
    1124:	b	112c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xb4>
    1128:	ldr	w0, [sp, #88]
    112c:	neg	x1, x20
    1130:	cmp	x19, w0, uxtw
    1134:	and	x1, x1, x20
    1138:	ldr	x0, [x23, #64]
    113c:	b.cs	1280 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x208>  // b.hs, b.nlast
    1140:	ldr	x0, [x0, #24]
    1144:	eor	x20, x20, x1
    1148:	ldr	x26, [sp, #80]
    114c:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
    1150:	str	w0, [x26, x19, lsl #2]
    1154:	add	x19, x19, #0x1
    1158:	cmp	w25, w19
    115c:	b.hi	1128 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xb0>  // b.pmore
    1160:	ldr	x26, [sp, #80]
    1164:	add	x20, x23, #0x18
    1168:	ldr	x19, [x23, #40]
    116c:	cmp	x20, x19
    1170:	cbnz	w24, 121c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1a4>
    1174:	b.eq	11d8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x160>  // b.none
    1178:	adrp	x23, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    117c:	add	x23, x23, #0x0
    1180:	b	1198 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x120>
    1184:	mov	x0, x19
    1188:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    118c:	mov	x19, x0
    1190:	cmp	x0, x20
    1194:	b.eq	11d8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x160>  // b.none
    1198:	ldr	x0, [x19, #32]
    119c:	ldr	w3, [sp, #88]
    11a0:	ldr	x1, [x0]
    11a4:	ldr	x4, [x1, #56]
    11a8:	cmp	x4, x23
    11ac:	b.eq	1184 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x10c>  // b.none
    11b0:	mov	x2, x26
    11b4:	mov	x1, x21
    11b8:	blr	x4
    11bc:	mov	x0, x19
    11c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    11c4:	mov	x19, x0
    11c8:	cmp	x0, x20
    11cc:	ldr	x26, [sp, #80]
    11d0:	b.ne	1198 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x120>  // b.any
    11d4:	nop
    11d8:	add	x22, x22, #0x10
    11dc:	cmp	x26, x22
    11e0:	b.eq	1204 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x18c>  // b.none
    11e4:	mov	x0, x26
    11e8:	bl	0 <free>
    11ec:	ldp	x19, x20, [sp, #16]
    11f0:	ldp	x21, x22, [sp, #32]
    11f4:	ldp	x23, x24, [sp, #48]
    11f8:	ldp	x25, x26, [sp, #64]
    11fc:	ldp	x29, x30, [sp], #112
    1200:	ret
    1204:	ldp	x19, x20, [sp, #16]
    1208:	ldp	x21, x22, [sp, #32]
    120c:	ldp	x23, x24, [sp, #48]
    1210:	ldp	x25, x26, [sp, #64]
    1214:	ldp	x29, x30, [sp], #112
    1218:	ret
    121c:	b.eq	11d8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x160>  // b.none
    1220:	adrp	x23, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1224:	add	x23, x23, #0x0
    1228:	b	1240 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1c8>
    122c:	mov	x0, x19
    1230:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1234:	mov	x19, x0
    1238:	cmp	x0, x20
    123c:	b.eq	11d8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x160>  // b.none
    1240:	ldr	x0, [x19, #32]
    1244:	ldr	w3, [sp, #88]
    1248:	ldr	x1, [x0]
    124c:	ldr	x4, [x1, #48]
    1250:	cmp	x4, x23
    1254:	b.eq	122c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b4>  // b.none
    1258:	mov	x2, x26
    125c:	mov	x1, x21
    1260:	blr	x4
    1264:	ldr	x26, [sp, #80]
    1268:	b	122c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b4>
    126c:	mov	x2, x19
    1270:	mov	x0, x22
    1274:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1278:	ldr	w3, [sp, #92]
    127c:	b	10ec <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x74>
    1280:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1284:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1288:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    128c:	add	x3, x3, #0x0
    1290:	add	x1, x1, #0x0
    1294:	add	x0, x0, #0x0
    1298:	mov	w2, #0x95                  	// #149
    129c:	bl	0 <__assert_fail>
    12a0:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    12a4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    12a8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    12ac:	add	x3, x3, #0x0
    12b0:	add	x1, x1, #0x0
    12b4:	add	x0, x0, #0x0
    12b8:	mov	w2, #0x43                  	// #67
    12bc:	bl	0 <__assert_fail>

00000000000012c0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
    12c0:	stp	x29, x30, [sp, #-368]!
    12c4:	mov	x5, #0x400000000           	// #17179869184
    12c8:	mov	x29, sp
    12cc:	stp	x19, x20, [sp, #16]
    12d0:	mov	x20, x0
    12d4:	mov	x19, x1
    12d8:	stp	x21, x22, [sp, #32]
    12dc:	add	x22, sp, #0x100
    12e0:	add	x6, x22, #0x10
    12e4:	stp	x23, x24, [sp, #48]
    12e8:	add	x23, sp, #0x60
    12ec:	add	x24, sp, #0xb0
    12f0:	ldr	x0, [x0, #64]
    12f4:	add	x7, x24, #0x10
    12f8:	str	x25, [sp, #64]
    12fc:	mov	x25, x8
    1300:	add	x8, x23, #0x10
    1304:	mov	x4, x24
    1308:	mov	x3, x23
    130c:	mov	x2, x22
    1310:	str	x8, [sp, #96]
    1314:	str	x5, [sp, #104]
    1318:	stp	x7, x5, [sp, #176]
    131c:	stp	x6, x5, [sp, #256]
    1320:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
    1324:	ldr	w3, [x20, #76]
    1328:	ldr	x21, [x19, #8]
    132c:	mov	x1, x19
    1330:	mov	x0, x20
    1334:	mov	w2, #0x0                   	// #0
    1338:	ldr	x4, [x21]
    133c:	ldr	w4, [x4, #316]
    1340:	add	w3, w3, w4
    1344:	str	w3, [x20, #76]
    1348:	bl	1078 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    134c:	ldr	w3, [sp, #264]
    1350:	mov	x0, x20
    1354:	ldr	x2, [sp, #256]
    1358:	mov	x1, x19
    135c:	bl	b48 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
    1360:	ldr	w0, [x21, #784]
    1364:	cmp	w0, #0x5
    1368:	b.eq	1434 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x174>  // b.none
    136c:	ldr	x0, [sp, #96]
    1370:	ldr	w21, [sp, #104]
    1374:	mov	x19, x0
    1378:	add	x21, x0, x21, lsl #4
    137c:	cmp	x0, x21
    1380:	b.eq	13a0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xe0>  // b.none
    1384:	nop
    1388:	mov	x1, x19
    138c:	mov	x0, x20
    1390:	add	x19, x19, #0x10
    1394:	bl	710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1398:	cmp	x21, x19
    139c:	b.ne	1388 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xc8>  // b.any
    13a0:	ldr	x19, [sp, #176]
    13a4:	ldr	w21, [sp, #184]
    13a8:	add	x21, x19, x21, lsl #4
    13ac:	cmp	x19, x21
    13b0:	b.eq	13d4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x114>  // b.none
    13b4:	nop
    13b8:	mov	x1, x19
    13bc:	mov	x0, x20
    13c0:	add	x19, x19, #0x10
    13c4:	bl	868 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    13c8:	cmp	x21, x19
    13cc:	b.ne	13b8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xf8>  // b.any
    13d0:	ldr	x21, [sp, #176]
    13d4:	mov	x0, #0x1                   	// #1
    13d8:	str	x0, [x25]
    13dc:	add	x24, x24, #0x10
    13e0:	cmp	x21, x24
    13e4:	b.eq	13f0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x130>  // b.none
    13e8:	mov	x0, x21
    13ec:	bl	0 <free>
    13f0:	ldr	x0, [sp, #96]
    13f4:	add	x23, x23, #0x10
    13f8:	cmp	x0, x23
    13fc:	b.eq	1404 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x144>  // b.none
    1400:	bl	0 <free>
    1404:	ldr	x0, [sp, #256]
    1408:	add	x22, x22, #0x10
    140c:	cmp	x0, x22
    1410:	b.eq	1418 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x158>  // b.none
    1414:	bl	0 <free>
    1418:	mov	x0, x25
    141c:	ldp	x19, x20, [sp, #16]
    1420:	ldp	x21, x22, [sp, #32]
    1424:	ldp	x23, x24, [sp, #48]
    1428:	ldr	x25, [sp, #64]
    142c:	ldp	x29, x30, [sp], #368
    1430:	ret
    1434:	mov	x0, x20
    1438:	mov	x1, x19
    143c:	bl	5b8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1440:	ldr	x0, [x20, #8]
    1444:	cbz	x0, 1494 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>
    1448:	ldr	x2, [x0]
    144c:	mov	x1, x19
    1450:	ldr	x2, [x2, #16]
    1454:	blr	x2
    1458:	tst	w0, #0xff
    145c:	b.eq	1494 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>  // b.none
    1460:	ldr	x0, [x20, #8]
    1464:	mov	x1, x19
    1468:	add	x8, sp, #0x58
    146c:	ldr	x2, [x0]
    1470:	ldr	x2, [x2, #48]
    1474:	blr	x2
    1478:	ldr	x0, [sp, #88]
    147c:	ands	x0, x0, #0xfffffffffffffffe
    1480:	b.eq	136c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xac>  // b.none
    1484:	orr	x0, x0, #0x1
    1488:	str	x0, [x25]
    148c:	ldr	x21, [sp, #176]
    1490:	b	13dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x11c>
    1494:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1498:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    149c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    14a0:	add	x3, x3, #0x0
    14a4:	add	x1, x1, #0x0
    14a8:	add	x0, x0, #0x0
    14ac:	mov	w2, #0x47                  	// #71
    14b0:	bl	0 <__assert_fail>
    14b4:	nop

00000000000014b8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
    14b8:	stp	x29, x30, [sp, #-80]!
    14bc:	mov	x29, sp
    14c0:	stp	x19, x20, [sp, #16]
    14c4:	mov	x19, x0
    14c8:	mov	x20, x8
    14cc:	ldr	x0, [x0, #64]
    14d0:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
    14d4:	stp	x0, x1, [sp, #64]
    14d8:	ldr	x0, [sp, #72]
    14dc:	cbz	x0, 153c <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x84>
    14e0:	stp	x21, x22, [sp, #32]
    14e4:	add	x22, sp, #0x40
    14e8:	add	x21, sp, #0x38
    14ec:	mov	x1, x22
    14f0:	mov	x8, x21
    14f4:	mov	x0, x19
    14f8:	bl	12c0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    14fc:	ldr	x1, [sp, #56]
    1500:	ands	x1, x1, #0xfffffffffffffffe
    1504:	b.eq	1524 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x6c>  // b.none
    1508:	orr	x1, x1, #0x1
    150c:	mov	x0, x20
    1510:	ldp	x21, x22, [sp, #32]
    1514:	str	x1, [x20]
    1518:	ldp	x19, x20, [sp, #16]
    151c:	ldp	x29, x30, [sp], #80
    1520:	ret
    1524:	ldr	x0, [x19, #64]
    1528:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
    152c:	str	w0, [sp, #64]
    1530:	str	x1, [sp, #72]
    1534:	cbnz	x1, 14ec <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x34>
    1538:	ldp	x21, x22, [sp, #32]
    153c:	mov	x0, #0x1                   	// #1
    1540:	str	x0, [x20]
    1544:	mov	x0, x20
    1548:	ldp	x19, x20, [sp, #16]
    154c:	ldp	x29, x30, [sp], #80
    1550:	ret
    1554:	nop

0000000000001558 <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
    1558:	stp	x29, x30, [sp, #-496]!
    155c:	mov	x5, #0x400000000           	// #17179869184
    1560:	mov	x6, #0x800000000           	// #34359738368
    1564:	mov	x29, sp
    1568:	stp	x19, x20, [sp, #16]
    156c:	mov	x20, x0
    1570:	stp	x23, x24, [sp, #48]
    1574:	add	x23, sp, #0x160
    1578:	add	x24, sp, #0x70
    157c:	stp	x25, x26, [sp, #64]
    1580:	add	x25, sp, #0xc0
    1584:	add	x26, sp, #0x110
    1588:	ldr	x0, [x0, #64]
    158c:	add	x7, x23, #0x10
    1590:	add	x10, x24, #0x10
    1594:	add	x9, x25, #0x10
    1598:	stp	x21, x22, [sp, #32]
    159c:	mov	x22, x8
    15a0:	add	x8, x26, #0x10
    15a4:	mov	x4, x26
    15a8:	mov	x3, x25
    15ac:	mov	x2, x24
    15b0:	mov	x1, x23
    15b4:	stp	x10, x5, [sp, #112]
    15b8:	stp	x9, x5, [sp, #192]
    15bc:	stp	x8, x5, [sp, #272]
    15c0:	stp	x7, x6, [sp, #352]
    15c4:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
    15c8:	ldr	w21, [sp, #360]
    15cc:	ldr	x0, [sp, #352]
    15d0:	str	xzr, [x20, #72]
    15d4:	mov	x19, x0
    15d8:	add	x21, x0, x21, lsl #4
    15dc:	cmp	x21, x0
    15e0:	b.eq	1600 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xa8>  // b.none
    15e4:	nop
    15e8:	mov	x1, x19
    15ec:	mov	x0, x20
    15f0:	add	x19, x19, #0x10
    15f4:	bl	9b8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
    15f8:	cmp	x21, x19
    15fc:	b.ne	15e8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x90>  // b.any
    1600:	ldr	x19, [sp, #112]
    1604:	ldr	w21, [sp, #120]
    1608:	add	x21, x19, x21, lsl #4
    160c:	cmp	x19, x21
    1610:	b.eq	1714 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1bc>  // b.none
    1614:	str	x27, [sp, #80]
    1618:	add	x27, sp, #0x68
    161c:	mov	x0, x20
    1620:	mov	x1, x19
    1624:	bl	5b8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1628:	ldr	x0, [x20, #8]
    162c:	cbz	x0, 16e4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x18c>
    1630:	ldr	x2, [x0]
    1634:	mov	x1, x19
    1638:	ldr	x2, [x2, #16]
    163c:	blr	x2
    1640:	tst	w0, #0xff
    1644:	b.eq	16e4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x18c>  // b.none
    1648:	ldr	x0, [x20, #8]
    164c:	mov	x8, x27
    1650:	mov	x1, x19
    1654:	ldr	x2, [x0]
    1658:	ldr	x2, [x2, #48]
    165c:	blr	x2
    1660:	ldr	x0, [sp, #104]
    1664:	ands	x0, x0, #0xfffffffffffffffe
    1668:	b.eq	1704 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1ac>  // b.none
    166c:	orr	x0, x0, #0x1
    1670:	ldr	x27, [sp, #80]
    1674:	str	x0, [x22]
    1678:	ldr	x0, [sp, #272]
    167c:	add	x26, x26, #0x10
    1680:	cmp	x0, x26
    1684:	b.eq	168c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x134>  // b.none
    1688:	bl	0 <free>
    168c:	ldr	x0, [sp, #192]
    1690:	add	x25, x25, #0x10
    1694:	cmp	x0, x25
    1698:	b.eq	16a0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x148>  // b.none
    169c:	bl	0 <free>
    16a0:	ldr	x0, [sp, #112]
    16a4:	add	x24, x24, #0x10
    16a8:	cmp	x0, x24
    16ac:	b.eq	16b4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x15c>  // b.none
    16b0:	bl	0 <free>
    16b4:	ldr	x0, [sp, #352]
    16b8:	add	x23, x23, #0x10
    16bc:	cmp	x0, x23
    16c0:	b.eq	16c8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x170>  // b.none
    16c4:	bl	0 <free>
    16c8:	mov	x0, x22
    16cc:	ldp	x19, x20, [sp, #16]
    16d0:	ldp	x21, x22, [sp, #32]
    16d4:	ldp	x23, x24, [sp, #48]
    16d8:	ldp	x25, x26, [sp, #64]
    16dc:	ldp	x29, x30, [sp], #496
    16e0:	ret
    16e4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    16e8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    16ec:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    16f0:	add	x3, x3, #0x0
    16f4:	add	x1, x1, #0x0
    16f8:	add	x0, x0, #0x0
    16fc:	mov	w2, #0x47                  	// #71
    1700:	bl	0 <__assert_fail>
    1704:	add	x19, x19, #0x10
    1708:	cmp	x21, x19
    170c:	b.ne	161c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc4>  // b.any
    1710:	ldr	x27, [sp, #80]
    1714:	ldr	x19, [sp, #192]
    1718:	ldr	w21, [sp, #200]
    171c:	add	x21, x19, x21, lsl #4
    1720:	cmp	x19, x21
    1724:	b.eq	1740 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1e8>  // b.none
    1728:	mov	x1, x19
    172c:	mov	x0, x20
    1730:	add	x19, x19, #0x10
    1734:	bl	710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1738:	cmp	x21, x19
    173c:	b.ne	1728 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1d0>  // b.any
    1740:	ldr	x19, [sp, #272]
    1744:	ldr	w21, [sp, #280]
    1748:	add	x21, x19, x21, lsl #4
    174c:	cmp	x19, x21
    1750:	b.eq	1770 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x218>  // b.none
    1754:	nop
    1758:	mov	x1, x19
    175c:	mov	x0, x20
    1760:	add	x19, x19, #0x10
    1764:	bl	868 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1768:	cmp	x21, x19
    176c:	b.ne	1758 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x200>  // b.any
    1770:	mov	x0, x20
    1774:	mov	x8, x22
    1778:	bl	14b8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>
    177c:	b	1678 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x120>

0000000000001780 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
    1780:	stp	x29, x30, [sp, #-64]!
    1784:	mov	x29, sp
    1788:	stp	x19, x20, [sp, #16]
    178c:	mov	x20, x1
    1790:	stp	x21, x22, [sp, #32]
    1794:	mov	x22, x8
    1798:	mov	x21, x0
    179c:	bl	4f8 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>
    17a0:	tst	w0, #0xff
    17a4:	b.eq	18f0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x170>  // b.none
    17a8:	ldr	x19, [x21, #64]
    17ac:	mov	x2, x20
    17b0:	mov	w3, #0x0                   	// #0
    17b4:	ldp	x0, x1, [x19, #32]
    17b8:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    17bc:	ldr	x1, [x19, #40]
    17c0:	cmp	x1, x0
    17c4:	b.ne	1938 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1b8>  // b.any
    17c8:	ldp	x0, x1, [x19, #80]
    17cc:	mov	x2, x20
    17d0:	mov	w3, #0x0                   	// #0
    17d4:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    17d8:	ldr	x1, [x19, #88]
    17dc:	cmp	x1, x0
    17e0:	b.ne	1914 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x194>  // b.any
    17e4:	ldp	x0, x1, [x19, #104]
    17e8:	mov	x2, x20
    17ec:	mov	w3, #0x0                   	// #0
    17f0:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    17f4:	ldr	x1, [x19, #112]
    17f8:	cmp	x1, x0
    17fc:	b.ne	195c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1dc>  // b.any
    1800:	ldr	x0, [x20, #8]
    1804:	ldrb	w0, [x0, #840]
    1808:	cbnz	w0, 1878 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xf8>
    180c:	ldr	x0, [x21, #64]
    1810:	mov	x1, x20
    1814:	str	x23, [sp, #48]
    1818:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
    181c:	and	w19, w0, #0xff
    1820:	ldr	x23, [x20, #8]
    1824:	mov	x1, x20
    1828:	ldr	w3, [x21, #72]
    182c:	mov	x0, x21
    1830:	mov	w2, #0x1                   	// #1
    1834:	ldr	x4, [x23]
    1838:	ldr	w4, [x4, #316]
    183c:	add	w3, w3, w4
    1840:	str	w3, [x21, #72]
    1844:	bl	1078 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    1848:	cbnz	w19, 189c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x11c>
    184c:	ldr	w0, [x23, #784]
    1850:	cmp	w0, #0x2
    1854:	b.eq	18e0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x160>  // b.none
    1858:	mov	x0, #0x1                   	// #1
    185c:	ldr	x23, [sp, #48]
    1860:	str	x0, [x22]
    1864:	mov	x0, x22
    1868:	ldp	x19, x20, [sp, #16]
    186c:	ldp	x21, x22, [sp, #32]
    1870:	ldp	x29, x30, [sp], #64
    1874:	ret
    1878:	mov	x1, x20
    187c:	mov	x0, x21
    1880:	mov	x8, x22
    1884:	bl	f28 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
    1888:	mov	x0, x22
    188c:	ldp	x19, x20, [sp, #16]
    1890:	ldp	x21, x22, [sp, #32]
    1894:	ldp	x29, x30, [sp], #64
    1898:	ret
    189c:	mov	x1, x20
    18a0:	mov	x0, x21
    18a4:	bl	710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    18a8:	mov	x1, x20
    18ac:	mov	x0, x21
    18b0:	bl	868 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    18b4:	ldr	x0, [x21, #64]
    18b8:	mov	x1, x20
    18bc:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    18c0:	tst	w0, #0xff
    18c4:	b.eq	1858 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xd8>  // b.none
    18c8:	mov	x1, x20
    18cc:	mov	x0, x21
    18d0:	mov	x8, x22
    18d4:	bl	12c0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    18d8:	ldr	x23, [sp, #48]
    18dc:	b	1864 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xe4>
    18e0:	mov	x1, x20
    18e4:	mov	x0, x21
    18e8:	bl	710 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    18ec:	b	1858 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xd8>
    18f0:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    18f4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    18f8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    18fc:	add	x3, x3, #0x0
    1900:	add	x1, x1, #0x0
    1904:	add	x0, x0, #0x0
    1908:	mov	w2, #0xbb                  	// #187
    190c:	str	x23, [sp, #48]
    1910:	bl	0 <__assert_fail>
    1914:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1918:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    191c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1920:	add	x3, x3, #0x0
    1924:	add	x1, x1, #0x0
    1928:	add	x0, x0, #0x0
    192c:	mov	w2, #0x10f                 	// #271
    1930:	str	x23, [sp, #48]
    1934:	bl	0 <__assert_fail>
    1938:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    193c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1940:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1944:	add	x3, x3, #0x0
    1948:	add	x1, x1, #0x0
    194c:	add	x0, x0, #0x0
    1950:	mov	w2, #0x10e                 	// #270
    1954:	str	x23, [sp, #48]
    1958:	bl	0 <__assert_fail>
    195c:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1960:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1964:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1968:	add	x3, x3, #0x0
    196c:	add	x1, x1, #0x0
    1970:	add	x0, x0, #0x0
    1974:	mov	w2, #0x110                 	// #272
    1978:	str	x23, [sp, #48]
    197c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD2Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x58                  	// #88
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	mov	x3, x0
   4:	sub	x0, x1, x0
   8:	cmp	xzr, x0, asr #6
   c:	asr	x5, x0, #4
  10:	asr	x4, x0, #6
  14:	b.ge	64 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x64>  // b.tcont
  18:	ldr	w0, [x2]
  1c:	add	x4, x3, x4, lsl #6
  20:	ldr	w5, [x3]
  24:	cmp	w0, w5
  28:	b.eq	84 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x84>  // b.none
  2c:	ldr	w5, [x3, #16]
  30:	cmp	w0, w5
  34:	b.eq	9c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x9c>  // b.none
  38:	ldr	w5, [x3, #32]
  3c:	cmp	w0, w5
  40:	b.eq	b4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xb4>  // b.none
  44:	ldr	w5, [x3, #48]
  48:	cmp	w0, w5
  4c:	b.eq	cc <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xcc>  // b.none
  50:	add	x3, x3, #0x40
  54:	cmp	x4, x3
  58:	b.ne	20 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x20>  // b.any
  5c:	sub	x5, x1, x3
  60:	asr	x5, x5, #4
  64:	cmp	x5, #0x2
  68:	b.eq	124 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x124>  // b.none
  6c:	cmp	x5, #0x3
  70:	b.eq	10c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x10c>  // b.none
  74:	cmp	x5, #0x1
  78:	b.eq	e4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe4>  // b.none
  7c:	mov	x0, x1
  80:	ret
  84:	ldr	x5, [x2, #8]
  88:	ldr	x6, [x3, #8]
  8c:	cmp	x6, x5
  90:	b.ne	2c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2c>  // b.any
  94:	mov	x0, x3
  98:	ret
  9c:	ldr	x5, [x2, #8]
  a0:	ldr	x6, [x3, #24]
  a4:	cmp	x6, x5
  a8:	b.ne	38 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x38>  // b.any
  ac:	add	x0, x3, #0x10
  b0:	ret
  b4:	ldr	x5, [x2, #8]
  b8:	ldr	x6, [x3, #40]
  bc:	cmp	x6, x5
  c0:	b.ne	44 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x44>  // b.any
  c4:	add	x0, x3, #0x20
  c8:	ret
  cc:	ldr	x5, [x2, #8]
  d0:	ldr	x6, [x3, #56]
  d4:	cmp	x6, x5
  d8:	b.ne	50 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x50>  // b.any
  dc:	add	x0, x3, #0x30
  e0:	ret
  e4:	ldr	w4, [x2]
  e8:	ldr	w0, [x3]
  ec:	cmp	w0, w4
  f0:	b.ne	7c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x7c>  // b.any
  f4:	ldr	x0, [x2, #8]
  f8:	ldr	x2, [x3, #8]
  fc:	cmp	x2, x0
 100:	b.eq	94 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x94>  // b.none
 104:	mov	x0, x1
 108:	b	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>
 10c:	ldr	w4, [x2]
 110:	ldr	w0, [x3]
 114:	cmp	w0, w4
 118:	b.eq	158 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x158>  // b.none
 11c:	add	x3, x3, #0x10
 120:	b	128 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x128>
 124:	ldr	w4, [x2]
 128:	ldr	w0, [x3]
 12c:	cmp	w0, w4
 130:	b.eq	13c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x13c>  // b.none
 134:	add	x3, x3, #0x10
 138:	b	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>
 13c:	ldr	x5, [x2, #8]
 140:	mov	x0, x3
 144:	ldr	x6, [x3, #8]
 148:	cmp	x6, x5
 14c:	b.eq	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>  // b.none
 150:	add	x3, x3, #0x10
 154:	b	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>
 158:	ldr	x5, [x2, #8]
 15c:	mov	x0, x3
 160:	ldr	x6, [x3, #8]
 164:	cmp	x6, x5
 168:	b.eq	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>  // b.none
 16c:	add	x3, x3, #0x10
 170:	b	128 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x128>

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	w6, #0x18                  	// #24
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x0, [x1, #8]
  18:	stp	x21, x22, [sp, #32]
  1c:	stp	x23, x24, [sp, #48]
  20:	ldr	x0, [x0]
  24:	str	x1, [sp, #168]
  28:	ldr	x22, [x0, #176]
  2c:	str	wzr, [x19, #80]
  30:	ldr	w23, [x0, #184]
  34:	umaddl	x0, w23, w6, x22
  38:	stp	x0, x8, [sp, #152]
  3c:	cmp	x0, x22
  40:	b.eq	3fc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3fc>  // b.none
  44:	mov	w24, w6
  48:	add	x0, x19, #0x48
  4c:	stp	x25, x26, [sp, #64]
  50:	mov	w25, #0x1                   	// #1
  54:	stp	x27, x28, [sp, #80]
  58:	stp	x22, x0, [sp, #136]
  5c:	nop
  60:	ldr	x0, [sp, #136]
  64:	ldp	w4, w5, [x0, #8]
  68:	cmp	w5, w4
  6c:	b.eq	278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>  // b.none
  70:	ldr	w0, [x19, #192]
  74:	ldr	x1, [sp, #136]
  78:	ldr	x9, [x19, #184]
  7c:	lsl	x0, x0, #3
  80:	ldr	x1, [x1]
  84:	cmp	xzr, x0, asr #5
  88:	asr	x8, x0, #3
  8c:	add	x10, x9, x0
  90:	asr	x0, x0, #5
  94:	b.eq	3f0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3f0>  // b.none
  98:	add	x3, x9, x0, lsl #5
  9c:	mov	x0, x9
  a0:	b	d4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xd4>
  a4:	ldr	x2, [x0, #8]
  a8:	cmp	x1, x2
  ac:	b.eq	34c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x34c>  // b.none
  b0:	ldr	x2, [x0, #16]
  b4:	cmp	x1, x2
  b8:	b.eq	33c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x33c>  // b.none
  bc:	ldr	x2, [x0, #24]
  c0:	cmp	x1, x2
  c4:	b.eq	394 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x394>  // b.none
  c8:	add	x0, x0, #0x20
  cc:	cmp	x3, x0
  d0:	b.eq	35c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x35c>  // b.none
  d4:	ldr	x2, [x0]
  d8:	cmp	x1, x2
  dc:	b.ne	a4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa4>  // b.any
  e0:	sub	x0, x0, x9
  e4:	asr	x8, x0, #3
  e8:	ldr	x0, [x19, #64]
  ec:	ldr	x1, [x0, #40]
  f0:	cbz	x1, 444 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x444>
  f4:	ldr	w1, [x0, #48]
  f8:	cmp	w8, w1
  fc:	b.cs	464 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x464>  // b.hs, b.nlast
 100:	ldr	x9, [x0, #32]
 104:	ubfiz	x2, x8, #5, #32
 108:	sub	w26, w5, w4
 10c:	and	x21, x8, #0xffffffff
 110:	add	x9, x9, x2
 114:	ldr	x2, [x9, #24]
 118:	ldr	w22, [x9, #8]
 11c:	cbz	x2, 218 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x218>
 120:	cbz	w22, 278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>
 124:	sub	w21, w22, #0x1
 128:	ldr	w28, [x2]
 12c:	add	x21, x21, #0x1
 130:	mov	x23, #0x4                   	// #4
 134:	lsl	x2, x21, #2
 138:	str	x2, [sp, #128]
 13c:	nop
 140:	cmp	w28, w1
 144:	b.cs	464 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x464>  // b.hs, b.nlast
 148:	ldr	x2, [x0, #32]
 14c:	ubfiz	x0, x28, #5, #32
 150:	mov	w28, w28
 154:	add	x2, x2, x0
 158:	ldr	w21, [x2, #8]
 15c:	cbz	w21, 1c8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1c8>
 160:	ldp	w1, w10, [x19, #80]
 164:	mov	w27, w21
 168:	mov	w20, #0x0                   	// #0
 16c:	b	174 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x174>
 170:	ldr	w27, [x2, #8]
 174:	mul	w27, w22, w27
 178:	cmp	w1, w10
 17c:	lsl	w11, w25, w20
 180:	b.cs	1f4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1f4>  // b.hs, b.nlast
 184:	ldr	x10, [x19, #72]
 188:	umull	x1, w1, w24
 18c:	add	x0, x10, x1
 190:	str	x28, [x10, x1]
 194:	str	x11, [x0, #8]
 198:	stp	w26, w27, [x0, #16]
 19c:	ldp	w1, w10, [x19, #80]
 1a0:	mov	w0, w1
 1a4:	add	x0, x0, #0x1
 1a8:	cmp	x0, w10, uxtw
 1ac:	b.hi	424 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x424>  // b.pmore
 1b0:	add	w1, w1, #0x1
 1b4:	str	w1, [x19, #80]
 1b8:	cbz	w1, 404 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x404>
 1bc:	add	w20, w20, #0x1
 1c0:	cmp	w21, w20
 1c4:	b.ne	170 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x170>  // b.any
 1c8:	ldr	x0, [sp, #128]
 1cc:	cmp	x0, x23
 1d0:	b.eq	278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>  // b.none
 1d4:	ldr	x0, [x19, #64]
 1d8:	ldr	x2, [x9, #24]
 1dc:	ldr	x1, [x0, #40]
 1e0:	ldr	w28, [x2, x23]
 1e4:	add	x23, x23, #0x4
 1e8:	cbz	x1, 444 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x444>
 1ec:	ldr	w1, [x0, #48]
 1f0:	b	140 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x140>
 1f4:	ldr	x0, [sp, #144]
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	stp	x11, x9, [sp, #104]
 200:	str	x2, [sp, #120]
 204:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 208:	ldr	w1, [x19, #80]
 20c:	ldp	x11, x9, [sp, #104]
 210:	ldr	x2, [sp, #120]
 214:	b	184 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x184>
 218:	cbz	w22, 278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>
 21c:	ldp	w0, w2, [x19, #80]
 220:	mov	w20, #0x0                   	// #0
 224:	nop
 228:	cmp	w2, w0
 22c:	lsl	w27, w25, w20
 230:	b.ls	3a4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3a4>  // b.plast
 234:	ldr	x2, [x19, #72]
 238:	umull	x0, w0, w24
 23c:	add	x1, x2, x0
 240:	str	x21, [x2, x0]
 244:	str	x27, [x1, #8]
 248:	stp	w26, w22, [x1, #16]
 24c:	ldp	w0, w2, [x19, #80]
 250:	mov	w1, w0
 254:	add	x1, x1, #0x1
 258:	cmp	x1, w2, uxtw
 25c:	b.hi	424 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x424>  // b.pmore
 260:	add	w0, w0, #0x1
 264:	str	w0, [x19, #80]
 268:	cbz	w0, 404 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x404>
 26c:	add	w20, w20, #0x1
 270:	cmp	w22, w20
 274:	b.ne	228 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x228>  // b.any
 278:	ldr	x0, [sp, #136]
 27c:	ldr	x1, [sp, #152]
 280:	add	x0, x0, #0x18
 284:	str	x0, [sp, #136]
 288:	cmp	x1, x0
 28c:	b.ne	60 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x60>  // b.any
 290:	ldp	x25, x26, [sp, #64]
 294:	ldp	x27, x28, [sp, #80]
 298:	ldr	w0, [x19, #80]
 29c:	mov	w2, #0x4                   	// #4
 2a0:	str	w2, [sp, #176]
 2a4:	ldr	x20, [x19, #40]
 2a8:	add	x19, x19, #0x18
 2ac:	ldr	x1, [x19, #48]
 2b0:	stp	x1, x0, [sp, #192]
 2b4:	adrp	x21, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 2b8:	ldr	x2, [sp, #168]
 2bc:	str	x2, [sp, #184]
 2c0:	add	x22, sp, #0xb0
 2c4:	add	x21, x21, #0x0
 2c8:	cmp	x20, x19
 2cc:	b.ne	2e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2e8>  // b.any
 2d0:	b	318 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x318>
 2d4:	mov	x0, x20
 2d8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 2dc:	mov	x20, x0
 2e0:	cmp	x19, x0
 2e4:	b.eq	318 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x318>  // b.none
 2e8:	ldr	x0, [x20, #32]
 2ec:	ldr	x1, [x0]
 2f0:	ldr	x2, [x1, #16]
 2f4:	cmp	x2, x21
 2f8:	b.eq	2d4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d4>  // b.none
 2fc:	mov	x1, x22
 300:	blr	x2
 304:	mov	x0, x20
 308:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 30c:	mov	x20, x0
 310:	cmp	x19, x0
 314:	b.ne	2e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2e8>  // b.any
 318:	ldr	x1, [sp, #160]
 31c:	mov	x0, #0x1                   	// #1
 320:	ldp	x19, x20, [sp, #16]
 324:	ldp	x21, x22, [sp, #32]
 328:	ldp	x23, x24, [sp, #48]
 32c:	str	x0, [x1]
 330:	mov	x0, x1
 334:	ldp	x29, x30, [sp], #208
 338:	ret
 33c:	add	x0, x0, #0x10
 340:	sub	x0, x0, x9
 344:	asr	x8, x0, #3
 348:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 34c:	add	x0, x0, #0x8
 350:	sub	x0, x0, x9
 354:	asr	x8, x0, #3
 358:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 35c:	sub	x2, x10, x0
 360:	asr	x2, x2, #3
 364:	cmp	x2, #0x2
 368:	b.eq	3c8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3c8>  // b.none
 36c:	cmp	x2, #0x3
 370:	b.eq	3b8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3b8>  // b.none
 374:	cmp	x2, #0x1
 378:	b.ne	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>  // b.any
 37c:	ldr	x2, [x0]
 380:	sub	x0, x0, x9
 384:	cmp	x1, x2
 388:	asr	x0, x0, #3
 38c:	csel	x8, x0, x8, eq  // eq = none
 390:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 394:	add	x0, x0, #0x18
 398:	sub	x0, x0, x9
 39c:	asr	x8, x0, #3
 3a0:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 3a4:	ldr	x0, [sp, #144]
 3a8:	mov	x1, #0x0                   	// #0
 3ac:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3b0:	ldr	w0, [x19, #80]
 3b4:	b	234 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x234>
 3b8:	ldr	x2, [x0]
 3bc:	cmp	x1, x2
 3c0:	b.eq	e0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe0>  // b.none
 3c4:	add	x0, x0, #0x8
 3c8:	ldr	x2, [x0]
 3cc:	cmp	x1, x2
 3d0:	b.eq	e0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe0>  // b.none
 3d4:	add	x0, x0, #0x8
 3d8:	ldr	x2, [x0]
 3dc:	sub	x0, x0, x9
 3e0:	cmp	x1, x2
 3e4:	asr	x0, x0, #3
 3e8:	csel	x8, x0, x8, eq  // eq = none
 3ec:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 3f0:	mov	x2, x8
 3f4:	mov	x0, x9
 3f8:	b	364 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x364>
 3fc:	mov	x0, #0x0                   	// #0
 400:	b	29c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x29c>
 404:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 408:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 40c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 410:	add	x3, x3, #0x0
 414:	add	x1, x1, #0x0
 418:	add	x0, x0, #0x0
 41c:	mov	w2, #0xa7                  	// #167
 420:	bl	0 <__assert_fail>
 424:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 428:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 42c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 430:	add	x3, x3, #0x0
 434:	add	x1, x1, #0x0
 438:	add	x0, x0, #0x0
 43c:	mov	w2, #0x43                  	// #67
 440:	bl	0 <__assert_fail>
 444:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 448:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 44c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 450:	add	x3, x3, #0x0
 454:	add	x1, x1, #0x0
 458:	add	x0, x0, #0x0
 45c:	mov	w2, #0x154                 	// #340
 460:	bl	0 <__assert_fail>
 464:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 468:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 46c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 470:	add	x3, x3, #0x0
 474:	add	x1, x1, #0x0
 478:	add	x0, x0, #0x0
 47c:	mov	w2, #0x156                 	// #342
 480:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTablesD1Ev>
   8:	add	x2, x0, #0xc8
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #184]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x1, x19, #0x58
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTablesD0Ev>
   8:	add	x2, x0, #0xc8
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #184]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x1, x19, #0x58
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  50:	mov	x0, x19
  54:	mov	x1, #0x108                 	// #264
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x0, #0xffffffff            	// #4294967295
  30:	add	x2, x2, #0x2
  34:	orr	x2, x2, x2, lsr #1
  38:	orr	x2, x2, x2, lsr #2
  3c:	orr	x2, x2, x2, lsr #4
  40:	orr	x2, x2, x2, lsr #8
  44:	orr	x1, x2, x2, lsr #16
  48:	orr	x2, x1, x2, lsr #32
  4c:	add	x2, x2, #0x1
  50:	str	x2, [sp, #72]
  54:	cmp	x19, x2
  58:	csel	x2, x19, x2, cs  // cs = hs, nlast
  5c:	cmp	x2, x0
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xe8>  // b.pmore
  64:	add	x0, x2, x2, lsl #1
  68:	mov	w19, w2
  6c:	lsl	x0, x0, #3
  70:	bl	0 <malloc>
  74:	mov	x21, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x100>
  7c:	ldr	w6, [x20, #8]
  80:	mov	w3, #0x18                  	// #24
  84:	ldr	x0, [x20]
  88:	mov	x2, x21
  8c:	mov	x1, x0
  90:	umaddl	x6, w6, w3, x0
  94:	cmp	x0, x6
  98:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xc0>  // b.none
  9c:	nop
  a0:	ldp	x4, x5, [x1]
  a4:	stp	x4, x5, [x2]
  a8:	add	x1, x1, #0x18
  ac:	ldur	x3, [x1, #-8]
  b0:	str	x3, [x2, #16]
  b4:	cmp	x6, x1
  b8:	add	x2, x2, #0x18
  bc:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xa0>  // b.any
  c0:	add	x1, x20, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x21, [x20]
  d4:	str	w19, [x20, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	w0, #0xffffffe8            	// #-24
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	movk	x0, #0x17, lsl #32
  f4:	bl	0 <malloc>
  f8:	mov	x21, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x7c>
 100:	mov	x21, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x28>

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
   0:	ldr	w4, [x0, #72]
   4:	mov	x2, x0
   8:	ldr	w3, [x0, #208]
   c:	cmp	x3, x4
  10:	b.cs	8c <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE+0x8c>  // b.hs, b.nlast
  14:	ldr	x4, [x2, #64]
  18:	lsl	x3, x3, #4
  1c:	ldr	w7, [x1]
  20:	mov	x0, x8
  24:	add	x5, x4, x3
  28:	mov	x8, #0x1                   	// #1
  2c:	ldr	x6, [x1, #8]
  30:	str	w7, [x4, x3]
  34:	ldr	w3, [x2, #208]
  38:	ldr	w4, [x2, #224]
  3c:	str	x6, [x5, #8]
  40:	ldr	w5, [x2, #72]
  44:	ldr	x1, [x1, #8]
  48:	mov	w7, w5
  4c:	ldr	w6, [x2, #220]
  50:	ldr	x1, [x1]
  54:	add	w6, w6, #0x1
  58:	ldr	w1, [x1, #316]
  5c:	cmp	w1, w5
  60:	csel	w1, w1, w5, ls  // ls = plast
  64:	cmp	w1, #0x0
  68:	csinc	w1, w1, wzr, ne  // ne = any
  6c:	add	w3, w1, w3
  70:	sub	w1, w4, w1
  74:	stp	w6, w1, [x2, #220]
  78:	udiv	x1, x3, x7
  7c:	msub	x3, x1, x7, x3
  80:	str	w3, [x2, #208]
  84:	str	x8, [x0]
  88:	ret
  8c:	stp	x29, x30, [sp, #-16]!
  90:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  98:	mov	x29, sp
  9c:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  a0:	add	x3, x3, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x0, x0, #0x0
  ac:	mov	w2, #0x95                  	// #149
  b0:	bl	0 <__assert_fail>
  b4:	nop

00000000000000b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
  b8:	stp	x29, x30, [sp, #-96]!
  bc:	mov	x29, sp
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x0
  c8:	ldr	w0, [x0, #212]
  cc:	ldr	w1, [x19, #72]
  d0:	cmp	x0, x1
  d4:	b.cs	240 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x188>  // b.hs, b.nlast
  d8:	ldr	x1, [x19, #64]
  dc:	mov	x20, x8
  e0:	add	x0, x1, x0, lsl #4
  e4:	ldp	x0, x1, [x0]
  e8:	stp	x0, x1, [sp, #80]
  ec:	ldr	x0, [sp, #88]
  f0:	cbz	x0, 130 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x78>
  f4:	stp	x21, x22, [sp, #32]
  f8:	add	x21, sp, #0x50
  fc:	add	x22, sp, #0x48
 100:	str	x23, [sp, #48]
 104:	mov	w23, #0x1                   	// #1
 108:	ldr	x0, [x19, #8]
 10c:	cbz	x0, 128 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x70>
 110:	ldr	x2, [x0]
 114:	mov	x1, x21
 118:	ldr	x2, [x2, #16]
 11c:	blr	x2
 120:	tst	w0, #0xff
 124:	b.ne	148 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x90>  // b.any
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldr	x23, [sp, #48]
 130:	mov	x0, #0x1                   	// #1
 134:	str	x0, [x20]
 138:	mov	x0, x20
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	ldr	x0, [x19, #8]
 14c:	cbz	x0, 1a0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xe8>
 150:	ldr	x2, [x0]
 154:	mov	x1, x21
 158:	ldr	x2, [x2, #16]
 15c:	blr	x2
 160:	tst	w0, #0xff
 164:	b.eq	1a0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xe8>  // b.none
 168:	ldr	x0, [x19, #8]
 16c:	mov	x8, x22
 170:	mov	x1, x21
 174:	ldr	x2, [x0]
 178:	ldr	x2, [x2, #48]
 17c:	blr	x2
 180:	ldr	x0, [sp, #72]
 184:	ands	x0, x0, #0xfffffffffffffffe
 188:	b.eq	1c0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x108>  // b.none
 18c:	orr	x0, x0, #0x1
 190:	ldp	x21, x22, [sp, #32]
 194:	ldr	x23, [sp, #48]
 198:	str	x0, [x20]
 19c:	b	138 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x80>
 1a0:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1a4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1a8:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47                  	// #71
 1bc:	bl	0 <__assert_fail>
 1c0:	ldr	w2, [x19, #72]
 1c4:	ldr	w1, [x19, #212]
 1c8:	mov	w5, w2
 1cc:	mov	w4, w1
 1d0:	cmp	w2, w1
 1d4:	b.ls	248 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x190>  // b.plast
 1d8:	ldr	x0, [x19, #64]
 1dc:	ldr	w3, [x19, #224]
 1e0:	add	x4, x0, x4, lsl #4
 1e4:	str	xzr, [x4, #8]
 1e8:	ldr	x0, [sp, #88]
 1ec:	ldr	x4, [x19, #64]
 1f0:	ldr	x0, [x0]
 1f4:	ldr	w0, [x0, #316]
 1f8:	cmp	w0, w2
 1fc:	csel	w0, w0, w2, ls  // ls = plast
 200:	cmp	w0, #0x0
 204:	csel	w0, w0, w23, ne  // ne = any
 208:	add	w1, w1, w0
 20c:	add	w0, w3, w0
 210:	str	w0, [x19, #224]
 214:	udiv	x0, x1, x5
 218:	msub	x0, x0, x5, x1
 21c:	str	w0, [x19, #212]
 220:	lsl	x0, x0, #4
 224:	add	x2, x4, x0
 228:	ldr	w1, [x4, x0]
 22c:	ldr	x0, [x2, #8]
 230:	str	w1, [sp, #80]
 234:	str	x0, [sp, #88]
 238:	cbnz	x0, 108 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x50>
 23c:	b	128 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x70>
 240:	stp	x21, x22, [sp, #32]
 244:	str	x23, [sp, #48]
 248:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 24c:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 250:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x95                  	// #149
 264:	bl	0 <__assert_fail>

0000000000000268 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 268:	stp	x29, x30, [sp, #-32]!
 26c:	mov	x29, sp
 270:	ldrb	w2, [x0, #228]
 274:	str	x19, [sp, #16]
 278:	mov	x19, x8
 27c:	str	wzr, [x0, #220]
 280:	cbnz	w2, 298 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x30>
 284:	bl	b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 288:	mov	x0, x19
 28c:	ldr	x19, [sp, #16]
 290:	ldp	x29, x30, [sp], #32
 294:	ret
 298:	mov	x0, #0x1                   	// #1
 29c:	str	x0, [x8]
 2a0:	mov	x0, x19
 2a4:	ldr	x19, [sp, #16]
 2a8:	ldp	x29, x30, [sp], #32
 2ac:	ret

00000000000002b0 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 2b0:	stp	x29, x30, [sp, #-32]!
 2b4:	mov	x29, sp
 2b8:	ldrb	w1, [x0, #228]
 2bc:	str	x19, [sp, #16]
 2c0:	mov	x19, x8
 2c4:	cbz	w1, 2dc <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0x2c>
 2c8:	bl	b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 2cc:	mov	x0, x19
 2d0:	ldr	x19, [sp, #16]
 2d4:	ldp	x29, x30, [sp], #32
 2d8:	ret
 2dc:	mov	x0, #0x1                   	// #1
 2e0:	str	x0, [x8]
 2e4:	mov	x0, x19
 2e8:	ldr	x19, [sp, #16]
 2ec:	ldp	x29, x30, [sp], #32
 2f0:	ret
 2f4:	nop

00000000000002f8 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 2f8:	stp	x29, x30, [sp, #-48]!
 2fc:	adrp	x5, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 300:	cmp	w1, #0x0
 304:	mov	x29, sp
 308:	stp	x19, x20, [sp, #16]
 30c:	mov	x19, x0
 310:	add	x0, x0, #0x18
 314:	mov	x4, x19
 318:	str	x21, [sp, #32]
 31c:	ldr	x5, [x5]
 320:	str	xzr, [x19, #8]
 324:	str	wzr, [x19, #24]
 328:	csinc	w20, w1, wzr, ne  // ne = any
 32c:	str	xzr, [x19, #32]
 330:	add	x5, x5, #0x10
 334:	stp	x0, x0, [x0, #16]
 338:	cmp	w1, #0x8
 33c:	mov	w21, w20
 340:	str	xzr, [x0, #32]
 344:	mov	x0, #0x800000000           	// #34359738368
 348:	str	x5, [x4], #80
 34c:	str	xzr, [x19, #208]
 350:	stp	x4, x0, [x19, #64]
 354:	mov	x0, x4
 358:	stp	w2, wzr, [x19, #216]
 35c:	strb	w3, [x19, #228]
 360:	b.hi	3a8 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xb0>  // b.pmore
 364:	add	x4, x4, x21, lsl #4
 368:	cmp	x4, x0
 36c:	b.eq	384 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x8c>  // b.none
 370:	str	wzr, [x0]
 374:	add	x0, x0, #0x10
 378:	stur	xzr, [x0, #-8]
 37c:	cmp	x4, x0
 380:	b.ne	370 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x78>  // b.any
 384:	ldr	w0, [x19, #76]
 388:	cmp	x21, x0
 38c:	b.hi	3c4 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xcc>  // b.pmore
 390:	ldr	x21, [sp, #32]
 394:	str	w20, [x19, #72]
 398:	str	w20, [x19, #224]
 39c:	ldp	x19, x20, [sp, #16]
 3a0:	ldp	x29, x30, [sp], #48
 3a4:	ret
 3a8:	add	x0, x19, #0x40
 3ac:	mov	x1, x21
 3b0:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3b4:	ldr	x4, [x19, #64]
 3b8:	ldr	w0, [x19, #72]
 3bc:	add	x0, x4, x0, lsl #4
 3c0:	b	364 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x6c>
 3c4:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3c8:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3cc:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3d0:	add	x3, x3, #0x0
 3d4:	add	x1, x1, #0x0
 3d8:	add	x0, x0, #0x0
 3dc:	mov	w2, #0x43                  	// #67
 3e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	ldr	w3, [x0, #216]
   4:	mov	x2, x0
   8:	cbz	w3, 1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>
   c:	ldr	w4, [x2, #220]
  10:	mov	w0, #0x0                   	// #0
  14:	cmp	w3, w4
  18:	b.eq	48 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x48>  // b.none
  1c:	ldr	x0, [x1, #8]
  20:	ldr	w1, [x2, #72]
  24:	ldr	w2, [x2, #224]
  28:	ldr	x0, [x0]
  2c:	ldr	w0, [x0, #316]
  30:	cmp	w0, w1
  34:	csel	w0, w0, w1, ls  // ls = plast
  38:	cmp	w0, #0x0
  3c:	csinc	w0, w0, wzr, ne  // ne = any
  40:	cmp	w2, w0
  44:	cset	w0, cs  // cs = hs, nlast
  48:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w1, [x0, #72]
   4:	ldr	w0, [x0, #224]
   8:	cmp	w0, w1
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  3c:	mov	x0, x19
  40:	mov	x1, #0xe8                  	// #232
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x28>

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1, #8]
   c:	ldr	x0, [x0, #64]
  10:	ldr	w1, [x1, #792]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x8
  1c:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
  20:	mov	x1, #0x1                   	// #1
  24:	str	x1, [x19]
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

0000000000000038 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  38:	stp	x29, x30, [sp, #-128]!
  3c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
  40:	mov	x29, sp
  44:	ldr	x2, [x2]
  48:	stp	x19, x20, [sp, #16]
  4c:	mov	x20, x0
  50:	stp	x21, x22, [sp, #32]
  54:	mov	x22, x1
  58:	ldrb	w0, [x2]
  5c:	str	x23, [sp, #48]
  60:	cbnz	w0, 1e8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1b0>
  64:	ldr	x0, [x20, #72]
  68:	add	x21, sp, #0x40
  6c:	add	x2, x21, #0x10
  70:	mov	x1, #0x400000000           	// #17179869184
  74:	stp	x2, x1, [sp, #64]
  78:	ldr	w23, [x0, #24]
  7c:	cmp	w23, #0x4
  80:	mov	w19, w23
  84:	b.hi	1c0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x188>  // b.pmore
  88:	str	w23, [sp, #72]
  8c:	add	x0, x2, x19, lsl #2
  90:	cmp	x0, x2
  94:	mov	x3, x2
  98:	b.eq	ac <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x74>  // b.none
  9c:	nop
  a0:	str	wzr, [x3], #4
  a4:	cmp	x0, x3
  a8:	b.ne	a0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x68>  // b.any
  ac:	ldr	x23, [x22, #8]
  b0:	ldr	x0, [x23]
  b4:	ldrb	w1, [x0, #324]
  b8:	cbz	w1, 1b4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x17c>
  bc:	ldr	x0, [x20, #80]
  c0:	mov	x1, x22
  c4:	ldr	x2, [x0]
  c8:	ldr	x2, [x2, #40]
  cc:	blr	x2
  d0:	ldr	x2, [sp, #64]
  d4:	mov	w0, #0x88                  	// #136
  d8:	ldr	x19, [x23, #16]
  dc:	ldr	w23, [x23, #24]
  e0:	umaddl	x23, w23, w0, x19
  e4:	cmp	x23, x19
  e8:	b.eq	110 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xd8>  // b.none
  ec:	nop
  f0:	ldr	w3, [sp, #72]
  f4:	mov	x1, x19
  f8:	ldr	x0, [x20, #72]
  fc:	add	x19, x19, #0x88
 100:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 104:	cmp	x23, x19
 108:	ldr	x2, [sp, #64]
 10c:	b.ne	f0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xb8>  // b.any
 110:	ldr	w0, [sp, #72]
 114:	mov	w1, #0x1                   	// #1
 118:	ldr	x19, [x20, #40]
 11c:	str	w1, [sp, #96]
 120:	stp	x22, x2, [sp, #104]
 124:	add	x20, x20, #0x18
 128:	cmp	x19, x20
 12c:	str	x0, [sp, #120]
 130:	b.eq	18c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x154>  // b.none
 134:	adrp	x22, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 138:	add	x23, sp, #0x60
 13c:	add	x22, x22, #0x0
 140:	b	158 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x120>
 144:	mov	x0, x19
 148:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 14c:	mov	x19, x0
 150:	cmp	x20, x0
 154:	b.eq	188 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x150>  // b.none
 158:	ldr	x0, [x19, #32]
 15c:	ldr	x1, [x0]
 160:	ldr	x2, [x1, #16]
 164:	cmp	x2, x22
 168:	b.eq	144 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x10c>  // b.none
 16c:	mov	x1, x23
 170:	blr	x2
 174:	mov	x0, x19
 178:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 17c:	mov	x19, x0
 180:	cmp	x20, x0
 184:	b.ne	158 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x120>  // b.any
 188:	ldr	x2, [sp, #64]
 18c:	add	x21, x21, #0x10
 190:	cmp	x2, x21
 194:	b.eq	1a0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x168>  // b.none
 198:	mov	x0, x2
 19c:	bl	0 <free>
 1a0:	ldp	x19, x20, [sp, #16]
 1a4:	ldp	x21, x22, [sp, #32]
 1a8:	ldr	x23, [sp, #48]
 1ac:	ldp	x29, x30, [sp], #128
 1b0:	ret
 1b4:	ldrb	w0, [x0, #325]
 1b8:	cbz	w0, d4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x9c>
 1bc:	b	bc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x84>
 1c0:	mov	x1, x2
 1c4:	mov	x0, x21
 1c8:	mov	x2, x19
 1cc:	mov	x3, #0x4                   	// #4
 1d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1d4:	ldr	w0, [sp, #76]
 1d8:	cmp	x19, x0
 1dc:	b.hi	294 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x25c>  // b.pmore
 1e0:	ldr	x2, [sp, #64]
 1e4:	b	88 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x50>
 1e8:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1f4:	tst	w0, #0xff
 1f8:	b.eq	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>  // b.none
 1fc:	bl	0 <_ZN4llvm4dbgsEv>
 200:	mov	x19, x0
 204:	ldp	x1, x2, [x0, #16]
 208:	sub	x1, x1, x2
 20c:	cmp	x1, #0x19
 210:	b.ls	26c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x234>  // b.plast
 214:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 218:	add	x0, x0, #0x0
 21c:	ldrh	w1, [x0, #24]
 220:	ldp	x4, x5, [x0]
 224:	stp	x4, x5, [x2]
 228:	ldr	x0, [x0, #16]
 22c:	str	x0, [x2, #16]
 230:	strh	w1, [x2, #24]
 234:	ldr	x0, [x19, #24]
 238:	add	x0, x0, #0x1a
 23c:	str	x0, [x19, #24]
 240:	ldr	w1, [x22]
 244:	mov	x0, x19
 248:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 24c:	ldp	x1, x0, [x19, #16]
 250:	cmp	x1, x0
 254:	b.ls	284 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x24c>  // b.plast
 258:	add	x1, x0, #0x1
 25c:	str	x1, [x19, #24]
 260:	mov	w1, #0xa                   	// #10
 264:	strb	w1, [x0]
 268:	b	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>
 26c:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 270:	mov	x2, #0x1a                  	// #26
 274:	add	x1, x1, #0x0
 278:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 27c:	mov	x19, x0
 280:	b	240 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x208>
 284:	mov	x0, x19
 288:	mov	w1, #0xa                   	// #10
 28c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 290:	b	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>
 294:	adrp	x3, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 298:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 29c:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2a0:	add	x3, x3, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x0, x0, #0x0
 2ac:	mov	w2, #0x43                  	// #67
 2b0:	bl	0 <__assert_fail>
 2b4:	nop

00000000000002b8 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
 2b8:	stp	x29, x30, [sp, #-64]!
 2bc:	mov	x29, sp
 2c0:	stp	x19, x20, [sp, #16]
 2c4:	mov	x19, x0
 2c8:	ldr	x0, [x0, #64]
 2cc:	ldp	w2, w1, [x0, #16]
 2d0:	str	x23, [sp, #48]
 2d4:	mov	x23, x8
 2d8:	cmp	w2, w1
 2dc:	b.eq	358 <_ZN4llvm3mca11RetireStage10cycleStartEv+0xa0>  // b.none
 2e0:	stp	x21, x22, [sp, #32]
 2e4:	mov	w20, #0x0                   	// #0
 2e8:	ldr	w21, [x0, #24]
 2ec:	cmp	w21, #0x0
 2f0:	cset	w22, ne  // ne = any
 2f4:	b	320 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x68>
 2f8:	bl	38 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
 2fc:	ldr	x0, [x19, #64]
 300:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
 304:	ldr	x0, [x19, #64]
 308:	ldp	w2, w1, [x0, #16]
 30c:	cmp	w2, w1
 310:	b.eq	338 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x80>  // b.none
 314:	cmp	w22, #0x0
 318:	ccmp	w20, w21, #0x0, ne  // ne = any
 31c:	b.eq	338 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x80>  // b.none
 320:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 324:	mov	x1, x0
 328:	add	w20, w20, #0x1
 32c:	mov	x0, x19
 330:	ldrb	w2, [x1, #20]
 334:	cbnz	w2, 2f8 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x40>
 338:	mov	x0, #0x1                   	// #1
 33c:	ldp	x21, x22, [sp, #32]
 340:	str	x0, [x23]
 344:	mov	x0, x23
 348:	ldp	x19, x20, [sp, #16]
 34c:	ldr	x23, [sp, #48]
 350:	ldp	x29, x30, [sp], #64
 354:	ret
 358:	mov	x0, #0x1                   	// #1
 35c:	str	x0, [x8]
 360:	mov	x0, x23
 364:	ldp	x19, x20, [sp, #16]
 368:	ldr	x23, [sp, #48]
 36c:	ldp	x29, x30, [sp], #64
 370:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #64]
   4:	ldp	w1, w0, [x0, #16]
   8:	cmp	w1, w0
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD2Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca11RetireStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca11RetireStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x58                  	// #88
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #32]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	str	x23, [sp, #48]
  20:	add	x22, x0, #0x18
  24:	cbz	x19, fc <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xfc>
  28:	ldr	x2, [x19, #32]
  2c:	mov	w1, #0x1                   	// #1
  30:	cmp	x2, x21
  34:	b.ls	54 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x54>  // b.plast
  38:	ldr	x0, [x19, #16]
  3c:	cbz	x0, 60 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x60>
  40:	mov	x19, x0
  44:	mov	w1, #0x1                   	// #1
  48:	ldr	x2, [x19, #32]
  4c:	cmp	x2, x21
  50:	b.hi	38 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x38>  // b.pmore
  54:	ldr	x0, [x19, #24]
  58:	mov	w1, #0x0                   	// #0
  5c:	cbnz	x0, 40 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x40>
  60:	cbnz	w1, b8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xb8>
  64:	cmp	x2, x21
  68:	b.cs	a4 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xa4>  // b.hs, b.nlast
  6c:	cmp	x22, x19
  70:	mov	w23, #0x1                   	// #1
  74:	b.ne	ec <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xec>  // b.any
  78:	mov	x0, #0x28                  	// #40
  7c:	bl	0 <_Znwm>
  80:	mov	x1, x0
  84:	mov	x3, x22
  88:	mov	w0, w23
  8c:	mov	x2, x19
  90:	str	x21, [x1, #32]
  94:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  98:	ldr	x0, [x20, #56]
  9c:	add	x0, x0, #0x1
  a0:	str	x0, [x20, #56]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x21, x22, [sp, #32]
  ac:	ldr	x23, [sp, #48]
  b0:	ldp	x29, x30, [sp], #64
  b4:	ret
  b8:	ldr	x0, [x20, #40]
  bc:	cmp	x0, x19
  c0:	b.eq	6c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x6c>  // b.none
  c4:	mov	x0, x19
  c8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  cc:	ldr	x0, [x0, #32]
  d0:	cmp	x21, x0
  d4:	b.hi	6c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x6c>  // b.pmore
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	ldr	x0, [x19, #32]
  f0:	cmp	x21, x0
  f4:	cset	w23, cc  // cc = lo, ul, last
  f8:	b	78 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x78>
  fc:	ldr	x0, [x0, #40]
 100:	mov	x19, x22
 104:	cmp	x22, x0
 108:	b.ne	c4 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xc4>  // b.any
 10c:	mov	w23, #0x1                   	// #1
 110:	b	78 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x78>
 114:	nop

0000000000000118 <_ZN4llvm3mca5StageD1Ev>:
 118:	mov	x2, x0
 11c:	adrp	x3, 0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 120:	add	x0, x0, #0x10
 124:	ldr	x3, [x3]
 128:	ldr	x1, [x2, #32]
 12c:	add	x3, x3, #0x10
 130:	str	x3, [x2]
 134:	b	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>

0000000000000138 <_ZN4llvm3mca5StageD0Ev>:
 138:	stp	x29, x30, [sp, #-32]!
 13c:	mov	x29, sp
 140:	str	x19, [sp, #16]
 144:	mov	x19, x0
 148:	bl	118 <_ZN4llvm3mca5StageD1Ev>
 14c:	mov	x0, x19
 150:	mov	x1, #0x40                  	// #64
 154:	ldr	x19, [sp, #16]
 158:	ldp	x29, x30, [sp], #32
 15c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldp	w6, w5, [x0]
   4:	ldp	w7, w4, [x1]
   8:	cmp	w5, w4
   c:	b.eq	58 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x58>  // b.none
  10:	mov	w3, w5
  14:	mov	w2, w4
  18:	cbnz	w4, 24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>
  1c:	b	64 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x64>
  20:	mov	x2, x1
  24:	udiv	x1, x3, x2
  28:	msub	x1, x1, x2, x3
  2c:	mov	x3, x2
  30:	cbnz	x1, 20 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x20>
  34:	mul	w1, w5, w4
  38:	udiv	w2, w1, w2
  3c:	udiv	w4, w2, w4
  40:	str	w2, [x0, #4]
  44:	udiv	w2, w2, w5
  48:	mul	w4, w4, w7
  4c:	madd	w4, w2, w6, w4
  50:	str	w4, [x0]
  54:	ret
  58:	add	w4, w6, w7
  5c:	str	w4, [x0]
  60:	ret
  64:	mov	w2, w5
  68:	b	34 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x34>
  6c:	nop

0000000000000070 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
  70:	stp	x29, x30, [sp, #-160]!
  74:	mov	x29, sp
  78:	stp	x21, x22, [sp, #32]
  7c:	ldr	w22, [x0, #48]
  80:	stp	x19, x20, [sp, #16]
  84:	stp	x23, x24, [sp, #48]
  88:	cmp	x2, w22, uxtw
  8c:	b.ne	528 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x4b8>  // b.any
  90:	stp	x27, x28, [sp, #80]
  94:	mov	x20, x2
  98:	cbz	x2, 4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>
  9c:	str	xzr, [x1]
  a0:	mov	x27, x0
  a4:	mov	x19, x1
  a8:	cmp	w22, #0x1
  ac:	b.ls	404 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x394>  // b.plast
  b0:	ldr	x9, [x27, #40]
  b4:	mov	x0, #0x1                   	// #1
  b8:	mov	x2, x0
  bc:	mov	w7, #0x0                   	// #0
  c0:	cbz	x9, 504 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x494>
  c4:	ldr	x6, [x27, #32]
  c8:	add	x1, x6, x0, lsl #5
  cc:	ldr	x1, [x1, #24]
  d0:	cbz	x1, 1b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x144>
  d4:	add	x0, x0, #0x1
  d8:	cmp	w22, w0
  dc:	b.hi	c0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x50>  // b.pmore
  e0:	mov	x2, #0x1                   	// #1
  e4:	add	x6, x6, #0x28
  e8:	mov	x10, x2
  ec:	nop
  f0:	ldr	x4, [x6, #16]
  f4:	cbz	x4, 144 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xd4>
  f8:	cmp	x2, x20
  fc:	b.cs	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.hs, b.nlast
 100:	ldr	w5, [x6]
 104:	lsl	x0, x10, x7
 108:	str	x0, [x19, x2, lsl #3]
 10c:	mov	x0, #0x0                   	// #0
 110:	cbz	w5, 140 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xd0>
 114:	nop
 118:	ldr	w1, [x4, x0, lsl #2]
 11c:	cmp	x1, x20
 120:	b.cs	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.hs, b.nlast
 124:	ldr	x3, [x19, x1, lsl #3]
 128:	add	x0, x0, #0x1
 12c:	ldr	x1, [x19, x2, lsl #3]
 130:	cmp	w5, w0
 134:	orr	x1, x1, x3
 138:	str	x1, [x19, x2, lsl #3]
 13c:	b.hi	118 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xa8>  // b.pmore
 140:	add	w7, w7, #0x1
 144:	add	x2, x2, #0x1
 148:	add	x6, x6, #0x20
 14c:	cmp	w22, w2
 150:	b.hi	f0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x80>  // b.pmore
 154:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 158:	ldr	x0, [x23]
 15c:	ldrb	w0, [x0]
 160:	cbnz	w0, 414 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3a4>
 164:	stp	x25, x26, [sp, #64]
 168:	adrp	x24, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 16c:	ldr	x23, [x23]
 170:	add	x24, x24, #0x0
 174:	add	x28, sp, #0x70
 178:	add	x0, sp, #0x88
 17c:	mov	x21, #0x0                   	// #0
 180:	str	x0, [sp, #96]
 184:	nop
 188:	cbz	x9, 508 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x498>
 18c:	ldr	w0, [x27, #48]
 190:	cmp	w0, w21
 194:	b.ls	550 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x4e0>  // b.plast
 198:	ldrb	w0, [x23]
 19c:	cbnz	w0, 1cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x15c>
 1a0:	add	x21, x21, #0x1
 1a4:	cmp	w22, w21
 1a8:	b.ls	35c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2ec>  // b.plast
 1ac:	ldr	x9, [x27, #40]
 1b0:	b	188 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x118>
 1b4:	cmp	x0, x20
 1b8:	b.cs	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.hs, b.nlast
 1bc:	lsl	x1, x2, x7
 1c0:	add	w7, w7, #0x1
 1c4:	str	x1, [x19, x0, lsl #3]
 1c8:	b	d4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x64>
 1cc:	mov	x0, x24
 1d0:	ldr	x25, [x27, #32]
 1d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1d8:	tst	w0, #0xff
 1dc:	b.eq	1a0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x130>  // b.none
 1e0:	bl	0 <_ZN4llvm4dbgsEv>
 1e4:	mov	x1, x0
 1e8:	ldp	x3, x2, [x0, #16]
 1ec:	cmp	x2, x3
 1f0:	b.cs	3bc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x34c>  // b.hs, b.nlast
 1f4:	add	x0, x2, #0x1
 1f8:	str	x0, [x1, #24]
 1fc:	mov	w0, #0x5b                  	// #91
 200:	strb	w0, [x2]
 204:	mov	w2, #0x2                   	// #2
 208:	mov	x0, x1
 20c:	mov	x1, x28
 210:	stp	xzr, x21, [sp, #112]
 214:	str	w2, [sp, #128]
 218:	strh	wzr, [sp, #132]
 21c:	strb	wzr, [sp, #134]
 220:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 224:	ldp	x2, x3, [x0, #16]
 228:	mov	x1, x0
 22c:	sub	x2, x2, x3
 230:	cmp	x2, #0x1
 234:	b.ls	3e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x378>  // b.plast
 238:	mov	w0, #0x205d                	// #8285
 23c:	strh	w0, [x3]
 240:	ldr	x2, [x1, #24]
 244:	add	x2, x2, #0x2
 248:	str	x2, [x1, #24]
 24c:	ldr	x0, [x1, #16]
 250:	sub	x0, x0, x2
 254:	cmp	x0, #0x2
 258:	b.ls	3cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x35c>  // b.plast
 25c:	adrp	x26, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 260:	add	x0, x26, #0x0
 264:	ldrh	w3, [x0]
 268:	ldrb	w0, [x0, #2]
 26c:	strh	w3, [x2]
 270:	strb	w0, [x2, #2]
 274:	ldr	x0, [x1, #24]
 278:	add	x0, x0, #0x3
 27c:	str	x0, [x1, #24]
 280:	cmp	x21, x20
 284:	b.cs	4ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x43c>  // b.hs, b.nlast
 288:	mov	x0, x1
 28c:	mov	w2, #0x1                   	// #1
 290:	ldr	x4, [x19, x21, lsl #3]
 294:	mov	w3, #0x10                  	// #16
 298:	ldr	x1, [sp, #96]
 29c:	stp	x4, xzr, [sp, #136]
 2a0:	str	w3, [sp, #152]
 2a4:	strh	w2, [sp, #156]
 2a8:	strb	w2, [sp, #158]
 2ac:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 2b0:	ldp	x1, x2, [x0, #16]
 2b4:	mov	x3, x0
 2b8:	sub	x1, x1, x2
 2bc:	cmp	x1, #0x2
 2c0:	b.ls	3a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x338>  // b.plast
 2c4:	add	x26, x26, #0x0
 2c8:	ldrb	w0, [x26, #2]
 2cc:	ldrh	w1, [x26]
 2d0:	strh	w1, [x2]
 2d4:	strb	w0, [x2, #2]
 2d8:	ldr	x0, [x3, #24]
 2dc:	add	x0, x0, #0x3
 2e0:	str	x0, [x3, #24]
 2e4:	lsl	x0, x21, #5
 2e8:	ldr	x26, [x25, x0]
 2ec:	cbz	x26, 38c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x31c>
 2f0:	mov	x0, x26
 2f4:	str	x3, [sp, #104]
 2f8:	bl	0 <strlen>
 2fc:	mov	x25, x0
 300:	ldr	x3, [sp, #104]
 304:	ldp	x2, x0, [x3, #16]
 308:	sub	x1, x2, x0
 30c:	cmp	x25, x1
 310:	b.hi	378 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x308>  // b.pmore
 314:	cbz	x25, 338 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2c8>
 318:	mov	x2, x25
 31c:	mov	x1, x26
 320:	str	x3, [sp, #104]
 324:	bl	0 <memcpy>
 328:	ldr	x3, [sp, #104]
 32c:	ldp	x2, x0, [x3, #16]
 330:	add	x0, x0, x25
 334:	str	x0, [x3, #24]
 338:	cmp	x2, x0
 33c:	b.ls	398 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x328>  // b.plast
 340:	add	x1, x0, #0x1
 344:	str	x1, [x3, #24]
 348:	mov	w1, #0xa                   	// #10
 34c:	strb	w1, [x0]
 350:	add	x21, x21, #0x1
 354:	cmp	w22, w21
 358:	b.hi	1ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x13c>  // b.pmore
 35c:	ldp	x25, x26, [sp, #64]
 360:	ldp	x19, x20, [sp, #16]
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x23, x24, [sp, #48]
 36c:	ldp	x27, x28, [sp, #80]
 370:	ldp	x29, x30, [sp], #160
 374:	ret
 378:	mov	x0, x3
 37c:	mov	x2, x25
 380:	mov	x1, x26
 384:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 388:	mov	x3, x0
 38c:	ldp	x2, x0, [x3, #16]
 390:	cmp	x2, x0
 394:	b.hi	340 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2d0>  // b.pmore
 398:	mov	x0, x3
 39c:	mov	w1, #0xa                   	// #10
 3a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3a4:	b	1a0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x130>
 3a8:	add	x1, x26, #0x0
 3ac:	mov	x2, #0x3                   	// #3
 3b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3b4:	mov	x3, x0
 3b8:	b	2e4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x274>
 3bc:	mov	w1, #0x5b                  	// #91
 3c0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3c4:	mov	x1, x0
 3c8:	b	204 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x194>
 3cc:	mov	x0, x1
 3d0:	adrp	x26, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3d4:	add	x1, x26, #0x0
 3d8:	mov	x2, #0x3                   	// #3
 3dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3e0:	mov	x1, x0
 3e4:	b	280 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x210>
 3e8:	mov	x2, #0x2                   	// #2
 3ec:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3f0:	add	x1, x1, #0x0
 3f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3f8:	mov	x1, x0
 3fc:	ldr	x2, [x0, #24]
 400:	b	24c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1dc>
 404:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 408:	ldr	x0, [x23]
 40c:	ldrb	w0, [x0]
 410:	cbz	w0, 42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 414:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 418:	add	x0, x0, #0x0
 41c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 420:	tst	w0, #0xff
 424:	b.ne	43c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3cc>  // b.any
 428:	ldr	w22, [x27, #48]
 42c:	cbz	w22, 360 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2f0>
 430:	stp	x25, x26, [sp, #64]
 434:	ldr	x9, [x27, #40]
 438:	b	168 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf8>
 43c:	bl	0 <_ZN4llvm4dbgsEv>
 440:	mov	x1, x0
 444:	ldp	x2, x4, [x0, #16]
 448:	sub	x2, x2, x4
 44c:	cmp	x2, #0x19
 450:	b.ls	4cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x45c>  // b.plast
 454:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 458:	add	x0, x0, #0x0
 45c:	ldp	x2, x3, [x0]
 460:	stp	x2, x3, [x4]
 464:	ldrh	w2, [x0, #24]
 468:	ldr	x0, [x0, #16]
 46c:	str	x0, [x4, #16]
 470:	strh	w2, [x4, #24]
 474:	ldr	x0, [x1, #24]
 478:	add	x0, x0, #0x1a
 47c:	str	x0, [x1, #24]
 480:	ldr	x2, [x1, #16]
 484:	cmp	x0, x2
 488:	b.eq	4e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x478>  // b.none
 48c:	mov	w2, #0xa                   	// #10
 490:	strb	w2, [x0]
 494:	ldr	x0, [x1, #24]
 498:	ldr	w22, [x27, #48]
 49c:	add	x0, x0, #0x1
 4a0:	str	x0, [x1, #24]
 4a4:	b	42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 4a8:	stp	x25, x26, [sp, #64]
 4ac:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b4:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b8:	add	x3, x3, #0x0
 4bc:	add	x1, x1, #0x0
 4c0:	add	x0, x0, #0x0
 4c4:	mov	w2, #0x1ab                 	// #427
 4c8:	bl	0 <__assert_fail>
 4cc:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d0:	add	x1, x1, #0x0
 4d4:	mov	x2, #0x1a                  	// #26
 4d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4dc:	mov	x1, x0
 4e0:	ldr	x0, [x0, #24]
 4e4:	b	480 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x410>
 4e8:	mov	x0, x1
 4ec:	mov	x2, #0x1                   	// #1
 4f0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4f4:	add	x1, x1, #0x0
 4f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4fc:	ldr	w22, [x27, #48]
 500:	b	42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 504:	stp	x25, x26, [sp, #64]
 508:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 50c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 510:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 514:	add	x3, x3, #0x0
 518:	add	x1, x1, #0x0
 51c:	add	x0, x0, #0x0
 520:	mov	w2, #0x154                 	// #340
 524:	bl	0 <__assert_fail>
 528:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 52c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 530:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 534:	add	x3, x3, #0x0
 538:	add	x1, x1, #0x0
 53c:	add	x0, x0, #0x0
 540:	mov	w2, #0x2b                  	// #43
 544:	stp	x25, x26, [sp, #64]
 548:	stp	x27, x28, [sp, #80]
 54c:	bl	0 <__assert_fail>
 550:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 554:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 558:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 55c:	add	x3, x3, #0x0
 560:	add	x1, x1, #0x0
 564:	add	x0, x0, #0x0
 568:	mov	w2, #0x156                 	// #342
 56c:	bl	0 <__assert_fail>

0000000000000570 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
 570:	ucvtf	d1, w1
 574:	ucvtf	d0, w2
 578:	ldr	w6, [x0, #48]
 57c:	fdiv	d0, d0, d1
 580:	cbz	w6, 5dc <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x6c>
 584:	stp	x29, x30, [sp, #-16]!
 588:	mov	x1, #0x0                   	// #0
 58c:	mov	x29, sp
 590:	cmp	x1, x4
 594:	b.eq	5e0 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x70>  // b.none
 598:	ldr	w2, [x3, x1, lsl #2]
 59c:	cbz	w2, 5c8 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x58>
 5a0:	ldr	x5, [x0, #40]
 5a4:	cbz	x5, 600 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x90>
 5a8:	ldr	x5, [x0, #32]
 5ac:	ucvtf	d1, w2
 5b0:	add	x2, x5, x1, lsl #5
 5b4:	ldr	w2, [x2, #8]
 5b8:	ucvtf	d2, w2
 5bc:	fdiv	d1, d1, d2
 5c0:	fcmp	d1, d0
 5c4:	fcsel	d0, d0, d1, le
 5c8:	add	x1, x1, #0x1
 5cc:	cmp	w6, w1
 5d0:	b.hi	590 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x20>  // b.pmore
 5d4:	ldp	x29, x30, [sp], #16
 5d8:	ret
 5dc:	ret
 5e0:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5e4:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5e8:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5ec:	add	x3, x3, #0x0
 5f0:	add	x1, x1, #0x0
 5f4:	add	x0, x0, #0x0
 5f8:	mov	w2, #0xfa                  	// #250
 5fc:	bl	0 <__assert_fail>
 600:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 604:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 608:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 60c:	add	x3, x3, #0x0
 610:	add	x1, x1, #0x0
 614:	add	x0, x0, #0x0
 618:	mov	w2, #0x154                 	// #340
 61c:	bl	0 <__assert_fail>
