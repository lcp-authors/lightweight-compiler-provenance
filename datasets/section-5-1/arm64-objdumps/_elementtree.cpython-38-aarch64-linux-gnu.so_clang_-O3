
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0xd4>:
    4250:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	nop
    4268:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    426c:	add	x0, x0, #0x428
    4270:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    4274:	add	x1, x1, #0x428
    4278:	cmp	x1, x0
    427c:	b.eq	4294 <PySequence_Fast@plt+0x54>  // b.none
    4280:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4284:	ldr	x1, [x1, #3888]
    4288:	cbz	x1, 4294 <PySequence_Fast@plt+0x54>
    428c:	mov	x16, x1
    4290:	br	x16
    4294:	ret
    4298:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    429c:	add	x0, x0, #0x428
    42a0:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    42a4:	add	x1, x1, #0x428
    42a8:	sub	x1, x1, x0
    42ac:	lsr	x2, x1, #63
    42b0:	add	x1, x2, x1, asr #3
    42b4:	cmp	xzr, x1, asr #1
    42b8:	asr	x1, x1, #1
    42bc:	b.eq	42d4 <PySequence_Fast@plt+0x94>  // b.none
    42c0:	adrp	x2, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    42c4:	ldr	x2, [x2, #4048]
    42c8:	cbz	x2, 42d4 <PySequence_Fast@plt+0x94>
    42cc:	mov	x16, x2
    42d0:	br	x16
    42d4:	ret
    42d8:	stp	x29, x30, [sp, #-32]!
    42dc:	mov	x29, sp
    42e0:	str	x19, [sp, #16]
    42e4:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    42e8:	ldrb	w0, [x19, #1064]
    42ec:	cbnz	w0, 4314 <PySequence_Fast@plt+0xd4>
    42f0:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    42f4:	ldr	x0, [x0, #3904]
    42f8:	cbz	x0, 4308 <PySequence_Fast@plt+0xc8>
    42fc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    4300:	ldr	x0, [x0, #792]
    4304:	bl	3d10 <__cxa_finalize@plt>
    4308:	bl	4268 <PySequence_Fast@plt+0x28>
    430c:	mov	w0, #0x1                   	// #1
    4310:	strb	w0, [x19, #1064]
    4314:	ldr	x19, [sp, #16]
    4318:	ldp	x29, x30, [sp], #32
    431c:	ret
    4320:	b	4298 <PySequence_Fast@plt+0x58>

0000000000004324 <PyInit__elementtree@@Base>:
    4324:	stp	x29, x30, [sp, #-48]!
    4328:	stp	x22, x21, [sp, #16]
    432c:	stp	x20, x19, [sp, #32]
    4330:	mov	x29, sp
    4334:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    4338:	add	x0, x0, #0xd40
    433c:	bl	3fc0 <PyState_FindModule@plt>
    4340:	cbz	x0, 4358 <PyInit__elementtree@@Base+0x34>
    4344:	ldr	x8, [x0]
    4348:	mov	x19, x0
    434c:	add	x8, x8, #0x1
    4350:	str	x8, [x0]
    4354:	b	453c <PyInit__elementtree@@Base+0x218>
    4358:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    435c:	add	x0, x0, #0xda8
    4360:	bl	3e90 <PyType_Ready@plt>
    4364:	tbnz	w0, #31, 4538 <PyInit__elementtree@@Base+0x214>
    4368:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    436c:	add	x20, x20, #0xf48
    4370:	mov	x0, x20
    4374:	bl	3e90 <PyType_Ready@plt>
    4378:	tbnz	w0, #31, 4538 <PyInit__elementtree@@Base+0x214>
    437c:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    4380:	add	x0, x0, #0xe8
    4384:	bl	3e90 <PyType_Ready@plt>
    4388:	tbnz	w0, #31, 4538 <PyInit__elementtree@@Base+0x214>
    438c:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    4390:	add	x0, x0, #0x288
    4394:	bl	3e90 <PyType_Ready@plt>
    4398:	tbnz	w0, #31, 4538 <PyInit__elementtree@@Base+0x214>
    439c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    43a0:	add	x0, x0, #0xd40
    43a4:	mov	w1, #0x3f5                 	// #1013
    43a8:	bl	3f90 <PyModule_Create2@plt>
    43ac:	mov	x19, x0
    43b0:	cbz	x0, 453c <PyInit__elementtree@@Base+0x218>
    43b4:	mov	x0, x19
    43b8:	bl	3e10 <PyModule_GetState@plt>
    43bc:	mov	x21, x0
    43c0:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    43c4:	add	x0, x0, #0xd64
    43c8:	bl	3fa0 <PyImport_ImportModule@plt>
    43cc:	cbz	x0, 4538 <PyInit__elementtree@@Base+0x214>
    43d0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    43d4:	add	x1, x1, #0xd60
    43d8:	mov	x22, x0
    43dc:	bl	3d00 <PyObject_GetAttrString@plt>
    43e0:	str	x0, [x21, #8]
    43e4:	ldr	x8, [x22]
    43e8:	subs	x8, x8, #0x1
    43ec:	str	x8, [x22]
    43f0:	b.ne	4400 <PyInit__elementtree@@Base+0xdc>  // b.any
    43f4:	mov	x0, x22
    43f8:	bl	3d70 <_Py_Dealloc@plt>
    43fc:	ldr	x0, [x21, #8]
    4400:	cbz	x0, 4538 <PyInit__elementtree@@Base+0x214>
    4404:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    4408:	add	x0, x0, #0xd69
    440c:	bl	3fa0 <PyImport_ImportModule@plt>
    4410:	str	x0, [x21, #16]
    4414:	cbz	x0, 4538 <PyInit__elementtree@@Base+0x214>
    4418:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    441c:	add	x0, x0, #0xd7f
    4420:	mov	w1, wzr
    4424:	bl	3e80 <PyCapsule_Import@plt>
    4428:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    442c:	str	x0, [x8, #1072]
    4430:	cbz	x0, 4538 <PyInit__elementtree@@Base+0x214>
    4434:	mov	x22, x0
    4438:	ldr	x0, [x0]
    443c:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    4440:	add	x1, x1, #0xd92
    4444:	bl	3ff0 <strcmp@plt>
    4448:	cbnz	w0, 4520 <PyInit__elementtree@@Base+0x1fc>
    444c:	ldr	w8, [x22, #8]
    4450:	cmp	w8, #0xb0
    4454:	b.cc	4520 <PyInit__elementtree@@Base+0x1fc>  // b.lo, b.ul, b.last
    4458:	ldr	w8, [x22, #12]
    445c:	cmp	w8, #0x2
    4460:	b.ne	4520 <PyInit__elementtree@@Base+0x1fc>  // b.any
    4464:	ldr	w8, [x22, #16]
    4468:	cmp	w8, #0x2
    446c:	b.ne	4520 <PyInit__elementtree@@Base+0x1fc>  // b.any
    4470:	ldr	w8, [x22, #20]
    4474:	cmp	w8, #0x9
    4478:	b.ne	4520 <PyInit__elementtree@@Base+0x1fc>  // b.any
    447c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4480:	ldr	x8, [x8, #4056]
    4484:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    4488:	add	x0, x0, #0xdc9
    448c:	mov	x2, xzr
    4490:	ldr	x1, [x8]
    4494:	bl	3ee0 <PyErr_NewException@plt>
    4498:	str	x0, [x21]
    449c:	ldr	x8, [x0]
    44a0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    44a4:	mov	x2, x0
    44a8:	add	x1, x1, #0xddf
    44ac:	add	x8, x8, #0x1
    44b0:	str	x8, [x0]
    44b4:	mov	x0, x19
    44b8:	bl	4120 <PyModule_AddObject@plt>
    44bc:	ldr	x8, [x20, #416]
    44c0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    44c4:	add	x2, x20, #0x1a0
    44c8:	add	x1, x1, #0x31a
    44cc:	add	x8, x8, #0x1
    44d0:	mov	x0, x19
    44d4:	str	x8, [x20, #416]
    44d8:	bl	4120 <PyModule_AddObject@plt>
    44dc:	ldr	x8, [x20]
    44e0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    44e4:	add	x1, x1, #0xeeb
    44e8:	mov	x0, x19
    44ec:	add	x8, x8, #0x1
    44f0:	mov	x2, x20
    44f4:	str	x8, [x20]
    44f8:	bl	4120 <PyModule_AddObject@plt>
    44fc:	ldr	x8, [x20, #832]
    4500:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    4504:	add	x2, x20, #0x340
    4508:	add	x1, x1, #0x476
    450c:	add	x8, x8, #0x1
    4510:	mov	x0, x19
    4514:	str	x8, [x20, #832]
    4518:	bl	4120 <PyModule_AddObject@plt>
    451c:	b	453c <PyInit__elementtree@@Base+0x218>
    4520:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4524:	ldr	x8, [x8, #4000]
    4528:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    452c:	add	x1, x1, #0xda9
    4530:	ldr	x0, [x8]
    4534:	bl	3de0 <PyErr_SetString@plt>
    4538:	mov	x19, xzr
    453c:	mov	x0, x19
    4540:	ldp	x20, x19, [sp, #32]
    4544:	ldp	x22, x21, [sp, #16]
    4548:	ldp	x29, x30, [sp], #48
    454c:	ret
    4550:	stp	x29, x30, [sp, #-48]!
    4554:	str	x21, [sp, #16]
    4558:	stp	x20, x19, [sp, #32]
    455c:	mov	x29, sp
    4560:	mov	x20, x2
    4564:	mov	x19, x1
    4568:	bl	3e10 <PyModule_GetState@plt>
    456c:	mov	x21, x0
    4570:	ldr	x0, [x0]
    4574:	cbz	x0, 4594 <PyInit__elementtree@@Base+0x270>
    4578:	mov	x1, x20
    457c:	blr	x19
    4580:	cbz	w0, 4594 <PyInit__elementtree@@Base+0x270>
    4584:	ldp	x20, x19, [sp, #32]
    4588:	ldr	x21, [sp, #16]
    458c:	ldp	x29, x30, [sp], #48
    4590:	ret
    4594:	ldr	x0, [x21, #8]
    4598:	cbz	x0, 45a8 <PyInit__elementtree@@Base+0x284>
    459c:	mov	x1, x20
    45a0:	blr	x19
    45a4:	cbnz	w0, 4584 <PyInit__elementtree@@Base+0x260>
    45a8:	ldr	x0, [x21, #16]
    45ac:	cbz	x0, 45bc <PyInit__elementtree@@Base+0x298>
    45b0:	mov	x1, x20
    45b4:	blr	x19
    45b8:	cbnz	w0, 4584 <PyInit__elementtree@@Base+0x260>
    45bc:	ldr	x0, [x21, #24]
    45c0:	cbz	x0, 45d0 <PyInit__elementtree@@Base+0x2ac>
    45c4:	mov	x1, x20
    45c8:	blr	x19
    45cc:	cbnz	w0, 4584 <PyInit__elementtree@@Base+0x260>
    45d0:	ldr	x0, [x21, #32]
    45d4:	cbz	x0, 45e4 <PyInit__elementtree@@Base+0x2c0>
    45d8:	mov	x1, x20
    45dc:	blr	x19
    45e0:	cbnz	w0, 4584 <PyInit__elementtree@@Base+0x260>
    45e4:	mov	w0, wzr
    45e8:	ldp	x20, x19, [sp, #32]
    45ec:	ldr	x21, [sp, #16]
    45f0:	ldp	x29, x30, [sp], #48
    45f4:	ret
    45f8:	stp	x29, x30, [sp, #-32]!
    45fc:	str	x19, [sp, #16]
    4600:	mov	x29, sp
    4604:	bl	3e10 <PyModule_GetState@plt>
    4608:	mov	x19, x0
    460c:	ldr	x0, [x0]
    4610:	cbz	x0, 4628 <PyInit__elementtree@@Base+0x304>
    4614:	str	xzr, [x19]
    4618:	ldr	x8, [x0]
    461c:	subs	x8, x8, #0x1
    4620:	str	x8, [x0]
    4624:	b.eq	464c <PyInit__elementtree@@Base+0x328>  // b.none
    4628:	ldr	x0, [x19, #8]
    462c:	cbz	x0, 4658 <PyInit__elementtree@@Base+0x334>
    4630:	str	xzr, [x19, #8]
    4634:	ldr	x8, [x0]
    4638:	subs	x8, x8, #0x1
    463c:	str	x8, [x0]
    4640:	b.ne	4658 <PyInit__elementtree@@Base+0x334>  // b.any
    4644:	bl	3d70 <_Py_Dealloc@plt>
    4648:	b	4658 <PyInit__elementtree@@Base+0x334>
    464c:	bl	3d70 <_Py_Dealloc@plt>
    4650:	ldr	x0, [x19, #8]
    4654:	cbnz	x0, 4630 <PyInit__elementtree@@Base+0x30c>
    4658:	ldr	x0, [x19, #16]
    465c:	cbz	x0, 4674 <PyInit__elementtree@@Base+0x350>
    4660:	str	xzr, [x19, #16]
    4664:	ldr	x8, [x0]
    4668:	subs	x8, x8, #0x1
    466c:	str	x8, [x0]
    4670:	b.eq	4698 <PyInit__elementtree@@Base+0x374>  // b.none
    4674:	ldr	x0, [x19, #24]
    4678:	cbz	x0, 46a4 <PyInit__elementtree@@Base+0x380>
    467c:	str	xzr, [x19, #24]
    4680:	ldr	x8, [x0]
    4684:	subs	x8, x8, #0x1
    4688:	str	x8, [x0]
    468c:	b.ne	46a4 <PyInit__elementtree@@Base+0x380>  // b.any
    4690:	bl	3d70 <_Py_Dealloc@plt>
    4694:	b	46a4 <PyInit__elementtree@@Base+0x380>
    4698:	bl	3d70 <_Py_Dealloc@plt>
    469c:	ldr	x0, [x19, #24]
    46a0:	cbnz	x0, 467c <PyInit__elementtree@@Base+0x358>
    46a4:	ldr	x0, [x19, #32]
    46a8:	cbz	x0, 46c0 <PyInit__elementtree@@Base+0x39c>
    46ac:	str	xzr, [x19, #32]
    46b0:	ldr	x8, [x0]
    46b4:	subs	x8, x8, #0x1
    46b8:	str	x8, [x0]
    46bc:	b.eq	46d0 <PyInit__elementtree@@Base+0x3ac>  // b.none
    46c0:	ldr	x19, [sp, #16]
    46c4:	mov	w0, wzr
    46c8:	ldp	x29, x30, [sp], #32
    46cc:	ret
    46d0:	bl	3d70 <_Py_Dealloc@plt>
    46d4:	ldr	x19, [sp, #16]
    46d8:	mov	w0, wzr
    46dc:	ldp	x29, x30, [sp], #32
    46e0:	ret
    46e4:	b	45f8 <PyInit__elementtree@@Base+0x2d4>
    46e8:	sub	sp, sp, #0x40
    46ec:	stp	x29, x30, [sp, #16]
    46f0:	str	x21, [sp, #32]
    46f4:	stp	x20, x19, [sp, #48]
    46f8:	add	x29, sp, #0x10
    46fc:	str	xzr, [sp]
    4700:	adrp	x5, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4704:	ldr	x5, [x5, #3992]
    4708:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    470c:	mov	x0, x1
    4710:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    4714:	add	x19, x19, #0xe8
    4718:	mov	x20, x2
    471c:	add	x1, x1, #0xe06
    4720:	add	x3, x29, #0x18
    4724:	add	x4, sp, #0x8
    4728:	mov	x6, sp
    472c:	mov	x2, x19
    4730:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    4734:	cbz	w0, 4874 <PyInit__elementtree@@Base+0x550>
    4738:	ldr	x0, [sp]
    473c:	cbz	x0, 4780 <PyInit__elementtree@@Base+0x45c>
    4740:	bl	4150 <PyDict_Copy@plt>
    4744:	str	x0, [sp]
    4748:	cbz	x0, 4874 <PyInit__elementtree@@Base+0x550>
    474c:	mov	x1, x0
    4750:	cbz	x20, 47b4 <PyInit__elementtree@@Base+0x490>
    4754:	mov	x0, x1
    4758:	mov	x1, x20
    475c:	bl	3f20 <PyDict_Update@plt>
    4760:	ldr	x1, [sp]
    4764:	tbz	w0, #31, 47b4 <PyInit__elementtree@@Base+0x490>
    4768:	ldr	x8, [x1]
    476c:	subs	x8, x8, #0x1
    4770:	str	x8, [x1]
    4774:	b.ne	4874 <PyInit__elementtree@@Base+0x550>  // b.any
    4778:	mov	x0, x1
    477c:	b	4870 <PyInit__elementtree@@Base+0x54c>
    4780:	cbz	x20, 479c <PyInit__elementtree@@Base+0x478>
    4784:	mov	x0, x20
    4788:	bl	4a40 <PyInit__elementtree@@Base+0x71c>
    478c:	mov	x1, x0
    4790:	str	x0, [sp]
    4794:	cbnz	x0, 47b4 <PyInit__elementtree@@Base+0x490>
    4798:	b	4874 <PyInit__elementtree@@Base+0x550>
    479c:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    47a0:	ldr	x1, [x1, #3976]
    47a4:	ldr	x8, [x1]
    47a8:	str	x1, [sp]
    47ac:	add	x8, x8, #0x1
    47b0:	str	x8, [x1]
    47b4:	ldr	x0, [sp, #8]
    47b8:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    47bc:	mov	x20, x0
    47c0:	ldr	x0, [sp]
    47c4:	ldr	x8, [x0]
    47c8:	subs	x8, x8, #0x1
    47cc:	str	x8, [x0]
    47d0:	b.ne	47d8 <PyInit__elementtree@@Base+0x4b4>  // b.any
    47d4:	bl	3d70 <_Py_Dealloc@plt>
    47d8:	cbz	x20, 4878 <PyInit__elementtree@@Base+0x554>
    47dc:	ldr	x0, [x20, #8]
    47e0:	ldr	x21, [x29, #24]
    47e4:	cmp	x0, x19
    47e8:	b.eq	47fc <PyInit__elementtree@@Base+0x4d8>  // b.none
    47ec:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    47f0:	add	x1, x1, #0xe8
    47f4:	bl	4160 <PyType_IsSubtype@plt>
    47f8:	cbz	w0, 483c <PyInit__elementtree@@Base+0x518>
    47fc:	mov	w1, #0x1                   	// #1
    4800:	mov	x0, x21
    4804:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    4808:	tbnz	w0, #31, 485c <PyInit__elementtree@@Base+0x538>
    480c:	ldr	x8, [x20]
    4810:	add	x8, x8, #0x1
    4814:	str	x8, [x20]
    4818:	ldr	x8, [x21, #40]
    481c:	ldr	x9, [x8, #24]
    4820:	ldr	x8, [x8, #8]
    4824:	str	x20, [x9, x8, lsl #3]
    4828:	ldr	x8, [x21, #40]
    482c:	ldr	x9, [x8, #8]
    4830:	add	x9, x9, #0x1
    4834:	str	x9, [x8, #8]
    4838:	b	4878 <PyInit__elementtree@@Base+0x554>
    483c:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4840:	ldr	x8, [x20, #8]
    4844:	ldr	x9, [x9, #3944]
    4848:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    484c:	add	x1, x1, #0xe3f
    4850:	ldr	x2, [x8, #24]
    4854:	ldr	x0, [x9]
    4858:	bl	4180 <PyErr_Format@plt>
    485c:	ldr	x8, [x20]
    4860:	subs	x8, x8, #0x1
    4864:	str	x8, [x20]
    4868:	b.ne	4874 <PyInit__elementtree@@Base+0x550>  // b.any
    486c:	mov	x0, x20
    4870:	bl	3d70 <_Py_Dealloc@plt>
    4874:	mov	x20, xzr
    4878:	mov	x0, x20
    487c:	ldp	x20, x19, [sp, #48]
    4880:	ldr	x21, [sp, #32]
    4884:	ldp	x29, x30, [sp, #16]
    4888:	add	sp, sp, #0x40
    488c:	ret
    4890:	stp	x29, x30, [sp, #-64]!
    4894:	str	x23, [sp, #16]
    4898:	stp	x22, x21, [sp, #32]
    489c:	stp	x20, x19, [sp, #48]
    48a0:	mov	x29, sp
    48a4:	cmp	x2, #0x2
    48a8:	mov	x19, x1
    48ac:	b.eq	48d0 <PyInit__elementtree@@Base+0x5ac>  // b.none
    48b0:	mov	x8, x2
    48b4:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    48b8:	add	x0, x0, #0xdf7
    48bc:	mov	w2, #0x2                   	// #2
    48c0:	mov	w3, #0x2                   	// #2
    48c4:	mov	x1, x8
    48c8:	bl	3f60 <_PyArg_CheckPositional@plt>
    48cc:	cbz	w0, 49ac <PyInit__elementtree@@Base+0x688>
    48d0:	ldp	x22, x19, [x19]
    48d4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    48d8:	add	x0, x0, #0xd40
    48dc:	bl	3fc0 <PyState_FindModule@plt>
    48e0:	bl	3e10 <PyModule_GetState@plt>
    48e4:	mov	x20, x0
    48e8:	mov	x0, x22
    48ec:	bl	4090 <PyCallable_Check@plt>
    48f0:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    48f4:	ldr	x23, [x23, #3976]
    48f8:	cmp	x22, x23
    48fc:	b.eq	491c <PyInit__elementtree@@Base+0x5f8>  // b.none
    4900:	cbnz	w0, 491c <PyInit__elementtree@@Base+0x5f8>
    4904:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4908:	ldr	x8, [x22, #8]
    490c:	ldr	x9, [x9, #3944]
    4910:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    4914:	add	x1, x1, #0xe61
    4918:	b	4944 <PyInit__elementtree@@Base+0x620>
    491c:	mov	x0, x19
    4920:	bl	4090 <PyCallable_Check@plt>
    4924:	cmp	x19, x23
    4928:	b.eq	4958 <PyInit__elementtree@@Base+0x634>  // b.none
    492c:	cbnz	w0, 4958 <PyInit__elementtree@@Base+0x634>
    4930:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4934:	ldr	x8, [x19, #8]
    4938:	ldr	x9, [x9, #3944]
    493c:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    4940:	add	x1, x1, #0xe8e
    4944:	ldr	x2, [x8, #24]
    4948:	ldr	x0, [x9]
    494c:	bl	4180 <PyErr_Format@plt>
    4950:	mov	x21, xzr
    4954:	b	4a28 <PyInit__elementtree@@Base+0x704>
    4958:	ldp	x8, x9, [x20, #24]
    495c:	mov	w0, #0x2                   	// #2
    4960:	cmp	x8, #0x0
    4964:	csel	x1, x23, x8, eq  // eq = none
    4968:	cmp	x9, #0x0
    496c:	csel	x2, x23, x9, eq  // eq = none
    4970:	bl	4210 <PyTuple_Pack@plt>
    4974:	cmp	x22, x23
    4978:	mov	x21, x0
    497c:	b.eq	49b4 <PyInit__elementtree@@Base+0x690>  // b.none
    4980:	ldr	x8, [x22]
    4984:	add	x8, x8, #0x1
    4988:	str	x8, [x22]
    498c:	ldr	x0, [x20, #24]
    4990:	str	x22, [x20, #24]
    4994:	cbz	x0, 49d4 <PyInit__elementtree@@Base+0x6b0>
    4998:	ldr	x8, [x0]
    499c:	subs	x8, x8, #0x1
    49a0:	str	x8, [x0]
    49a4:	b.ne	49d4 <PyInit__elementtree@@Base+0x6b0>  // b.any
    49a8:	b	49d0 <PyInit__elementtree@@Base+0x6ac>
    49ac:	mov	x21, xzr
    49b0:	b	4a28 <PyInit__elementtree@@Base+0x704>
    49b4:	ldr	x0, [x20, #24]
    49b8:	cbz	x0, 49d4 <PyInit__elementtree@@Base+0x6b0>
    49bc:	str	xzr, [x20, #24]
    49c0:	ldr	x8, [x0]
    49c4:	subs	x8, x8, #0x1
    49c8:	str	x8, [x0]
    49cc:	b.ne	49d4 <PyInit__elementtree@@Base+0x6b0>  // b.any
    49d0:	bl	3d70 <_Py_Dealloc@plt>
    49d4:	cmp	x19, x23
    49d8:	b.eq	4a08 <PyInit__elementtree@@Base+0x6e4>  // b.none
    49dc:	ldr	x8, [x19]
    49e0:	add	x8, x8, #0x1
    49e4:	str	x8, [x19]
    49e8:	ldr	x0, [x20, #32]
    49ec:	str	x19, [x20, #32]
    49f0:	cbz	x0, 4a28 <PyInit__elementtree@@Base+0x704>
    49f4:	ldr	x8, [x0]
    49f8:	subs	x8, x8, #0x1
    49fc:	str	x8, [x0]
    4a00:	b.ne	4a28 <PyInit__elementtree@@Base+0x704>  // b.any
    4a04:	b	4a24 <PyInit__elementtree@@Base+0x700>
    4a08:	ldr	x0, [x20, #32]
    4a0c:	cbz	x0, 4a28 <PyInit__elementtree@@Base+0x704>
    4a10:	str	xzr, [x20, #32]
    4a14:	ldr	x8, [x0]
    4a18:	subs	x8, x8, #0x1
    4a1c:	str	x8, [x0]
    4a20:	b.ne	4a28 <PyInit__elementtree@@Base+0x704>  // b.any
    4a24:	bl	3d70 <_Py_Dealloc@plt>
    4a28:	mov	x0, x21
    4a2c:	ldp	x20, x19, [sp, #48]
    4a30:	ldp	x22, x21, [sp, #32]
    4a34:	ldr	x23, [sp, #16]
    4a38:	ldp	x29, x30, [sp], #64
    4a3c:	ret
    4a40:	stp	x29, x30, [sp, #-48]!
    4a44:	str	x21, [sp, #16]
    4a48:	stp	x20, x19, [sp, #32]
    4a4c:	mov	x29, sp
    4a50:	mov	x19, x0
    4a54:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    4a58:	add	x0, x0, #0xe18
    4a5c:	bl	4100 <PyUnicode_FromString@plt>
    4a60:	cbz	x0, 4b6c <PyInit__elementtree@@Base+0x848>
    4a64:	mov	x20, x0
    4a68:	mov	x0, x19
    4a6c:	mov	x1, x20
    4a70:	bl	4230 <PyDict_GetItemWithError@plt>
    4a74:	cbz	x0, 4ac4 <PyInit__elementtree@@Base+0x7a0>
    4a78:	ldr	x8, [x0, #8]
    4a7c:	mov	x21, x0
    4a80:	ldrb	w9, [x8, #171]
    4a84:	tbnz	w9, #5, 4aec <PyInit__elementtree@@Base+0x7c8>
    4a88:	ldr	x9, [x20]
    4a8c:	subs	x9, x9, #0x1
    4a90:	str	x9, [x20]
    4a94:	b.ne	4aa4 <PyInit__elementtree@@Base+0x780>  // b.any
    4a98:	mov	x0, x20
    4a9c:	bl	3d70 <_Py_Dealloc@plt>
    4aa0:	ldr	x8, [x21, #8]
    4aa4:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4aa8:	ldr	x9, [x9, #3944]
    4aac:	ldr	x2, [x8, #24]
    4ab0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    4ab4:	add	x1, x1, #0xe1f
    4ab8:	ldr	x0, [x9]
    4abc:	bl	4180 <PyErr_Format@plt>
    4ac0:	b	4b6c <PyInit__elementtree@@Base+0x848>
    4ac4:	bl	3f80 <PyErr_Occurred@plt>
    4ac8:	cbz	x0, 4b28 <PyInit__elementtree@@Base+0x804>
    4acc:	mov	x21, xzr
    4ad0:	ldr	x8, [x20]
    4ad4:	subs	x8, x8, #0x1
    4ad8:	str	x8, [x20]
    4adc:	b.ne	4b40 <PyInit__elementtree@@Base+0x81c>  // b.any
    4ae0:	mov	x0, x20
    4ae4:	bl	3d70 <_Py_Dealloc@plt>
    4ae8:	b	4b40 <PyInit__elementtree@@Base+0x81c>
    4aec:	mov	x0, x21
    4af0:	bl	4150 <PyDict_Copy@plt>
    4af4:	mov	x21, x0
    4af8:	cbz	x0, 4b30 <PyInit__elementtree@@Base+0x80c>
    4afc:	mov	x0, x19
    4b00:	mov	x1, x20
    4b04:	bl	3f70 <PyDict_DelItem@plt>
    4b08:	tbz	w0, #31, 4b30 <PyInit__elementtree@@Base+0x80c>
    4b0c:	ldr	x8, [x21]
    4b10:	subs	x8, x8, #0x1
    4b14:	str	x8, [x21]
    4b18:	b.ne	4acc <PyInit__elementtree@@Base+0x7a8>  // b.any
    4b1c:	mov	x0, x21
    4b20:	bl	3d70 <_Py_Dealloc@plt>
    4b24:	b	4acc <PyInit__elementtree@@Base+0x7a8>
    4b28:	bl	4080 <PyDict_New@plt>
    4b2c:	mov	x21, x0
    4b30:	ldr	x8, [x20]
    4b34:	subs	x8, x8, #0x1
    4b38:	str	x8, [x20]
    4b3c:	b.eq	4ae0 <PyInit__elementtree@@Base+0x7bc>  // b.none
    4b40:	cbz	x21, 4b70 <PyInit__elementtree@@Base+0x84c>
    4b44:	mov	x0, x21
    4b48:	mov	x1, x19
    4b4c:	bl	3f20 <PyDict_Update@plt>
    4b50:	tbz	w0, #31, 4b70 <PyInit__elementtree@@Base+0x84c>
    4b54:	ldr	x8, [x21]
    4b58:	subs	x8, x8, #0x1
    4b5c:	str	x8, [x21]
    4b60:	b.ne	4b6c <PyInit__elementtree@@Base+0x848>  // b.any
    4b64:	mov	x0, x21
    4b68:	bl	3d70 <_Py_Dealloc@plt>
    4b6c:	mov	x21, xzr
    4b70:	mov	x0, x21
    4b74:	ldp	x20, x19, [sp, #32]
    4b78:	ldr	x21, [sp, #16]
    4b7c:	ldp	x29, x30, [sp], #48
    4b80:	ret
    4b84:	stp	x29, x30, [sp, #-48]!
    4b88:	stp	x22, x21, [sp, #16]
    4b8c:	stp	x20, x19, [sp, #32]
    4b90:	mov	x29, sp
    4b94:	mov	x21, x0
    4b98:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    4b9c:	add	x0, x0, #0xe8
    4ba0:	mov	x20, x1
    4ba4:	bl	3df0 <_PyObject_GC_New@plt>
    4ba8:	mov	x19, x0
    4bac:	cbz	x0, 4c6c <PyInit__elementtree@@Base+0x948>
    4bb0:	str	xzr, [x19, #40]
    4bb4:	ldr	x8, [x21]
    4bb8:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4bbc:	ldr	x22, [x22, #3976]
    4bc0:	mov	x0, x19
    4bc4:	add	x8, x8, #0x1
    4bc8:	str	x8, [x21]
    4bcc:	stp	x21, x22, [x19, #16]
    4bd0:	ldr	x8, [x22]
    4bd4:	add	x8, x8, #0x2
    4bd8:	str	x8, [x22]
    4bdc:	str	x22, [x19, #32]
    4be0:	str	xzr, [x19, #48]
    4be4:	bl	3dc0 <PyObject_GC_Track@plt>
    4be8:	cmp	x20, x22
    4bec:	b.eq	4c6c <PyInit__elementtree@@Base+0x948>  // b.none
    4bf0:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4bf4:	ldr	x8, [x20, #8]
    4bf8:	ldr	x9, [x9, #3992]
    4bfc:	cmp	x8, x9
    4c00:	b.ne	4c0c <PyInit__elementtree@@Base+0x8e8>  // b.any
    4c04:	ldr	x8, [x20, #16]
    4c08:	cbz	x8, 4c6c <PyInit__elementtree@@Base+0x948>
    4c0c:	mov	w0, #0x40                  	// #64
    4c10:	bl	3e00 <PyObject_Malloc@plt>
    4c14:	str	x0, [x19, #40]
    4c18:	cbz	x0, 4c4c <PyInit__elementtree@@Base+0x928>
    4c1c:	cmp	x20, #0x0
    4c20:	csel	x8, x22, x20, eq  // eq = none
    4c24:	ldr	x9, [x8]
    4c28:	adrp	x10, c000 <PyInit__elementtree@@Base+0x7cdc>
    4c2c:	ldr	q0, [x10, #3392]
    4c30:	add	x11, x0, #0x20
    4c34:	add	x9, x9, #0x1
    4c38:	str	x9, [x8]
    4c3c:	str	x8, [x0]
    4c40:	stur	q0, [x0, #8]
    4c44:	str	x11, [x0, #24]
    4c48:	b	4c6c <PyInit__elementtree@@Base+0x948>
    4c4c:	bl	3d80 <PyErr_NoMemory@plt>
    4c50:	ldr	x8, [x19]
    4c54:	subs	x8, x8, #0x1
    4c58:	str	x8, [x19]
    4c5c:	b.ne	4c68 <PyInit__elementtree@@Base+0x944>  // b.any
    4c60:	mov	x0, x19
    4c64:	bl	3d70 <_Py_Dealloc@plt>
    4c68:	mov	x19, xzr
    4c6c:	mov	x0, x19
    4c70:	ldp	x20, x19, [sp, #32]
    4c74:	ldp	x22, x21, [sp, #16]
    4c78:	ldp	x29, x30, [sp], #48
    4c7c:	ret
    4c80:	stp	x29, x30, [sp, #-48]!
    4c84:	str	x21, [sp, #16]
    4c88:	stp	x20, x19, [sp, #32]
    4c8c:	mov	x29, sp
    4c90:	mov	x19, x0
    4c94:	ldr	x0, [x0, #40]
    4c98:	mov	x20, x1
    4c9c:	cbz	x0, 4cfc <PyInit__elementtree@@Base+0x9d8>
    4ca0:	ldp	x8, x9, [x0, #8]
    4ca4:	add	x8, x8, x20
    4ca8:	cmp	x8, x9
    4cac:	b.le	4d48 <PyInit__elementtree@@Base+0xa24>
    4cb0:	cmp	x8, #0x9
    4cb4:	mov	w9, #0x6                   	// #6
    4cb8:	mov	w10, #0x3                   	// #3
    4cbc:	csel	x9, x10, x9, lt  // lt = tstop
    4cc0:	add	x8, x8, x8, asr #3
    4cc4:	adds	x8, x8, x9
    4cc8:	csinc	x21, x8, xzr, ne  // ne = any
    4ccc:	lsr	x8, x21, #60
    4cd0:	cbnz	x8, 4d9c <PyInit__elementtree@@Base+0xa78>
    4cd4:	ldr	x8, [x0, #24]
    4cd8:	add	x9, x0, #0x20
    4cdc:	cmp	x8, x9
    4ce0:	b.eq	4d5c <PyInit__elementtree@@Base+0xa38>  // b.none
    4ce4:	lsl	x1, x21, #3
    4ce8:	mov	x0, x8
    4cec:	bl	4060 <PyObject_Realloc@plt>
    4cf0:	mov	x20, x0
    4cf4:	cbnz	x0, 4d80 <PyInit__elementtree@@Base+0xa5c>
    4cf8:	b	4d9c <PyInit__elementtree@@Base+0xa78>
    4cfc:	mov	w0, #0x40                  	// #64
    4d00:	bl	3e00 <PyObject_Malloc@plt>
    4d04:	str	x0, [x19, #40]
    4d08:	cbz	x0, 4d9c <PyInit__elementtree@@Base+0xa78>
    4d0c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4d10:	ldr	x8, [x8, #3976]
    4d14:	adrp	x10, c000 <PyInit__elementtree@@Base+0x7cdc>
    4d18:	ldr	q0, [x10, #3392]
    4d1c:	add	x11, x0, #0x20
    4d20:	ldr	x9, [x8]
    4d24:	add	x9, x9, #0x1
    4d28:	str	x9, [x8]
    4d2c:	str	x8, [x0]
    4d30:	stur	q0, [x0, #8]
    4d34:	str	x11, [x0, #24]
    4d38:	ldp	x8, x9, [x0, #8]
    4d3c:	add	x8, x8, x20
    4d40:	cmp	x8, x9
    4d44:	b.gt	4cb0 <PyInit__elementtree@@Base+0x98c>
    4d48:	mov	w0, wzr
    4d4c:	ldp	x20, x19, [sp, #32]
    4d50:	ldr	x21, [sp, #16]
    4d54:	ldp	x29, x30, [sp], #48
    4d58:	ret
    4d5c:	lsl	x0, x21, #3
    4d60:	bl	3e00 <PyObject_Malloc@plt>
    4d64:	cbz	x0, 4d9c <PyInit__elementtree@@Base+0xa78>
    4d68:	ldr	x8, [x19, #40]
    4d6c:	mov	x20, x0
    4d70:	ldr	x9, [x8, #8]
    4d74:	ldr	x1, [x8, #24]
    4d78:	lsl	x2, x9, #3
    4d7c:	bl	3c20 <memcpy@plt>
    4d80:	ldr	x8, [x19, #40]
    4d84:	mov	w0, wzr
    4d88:	stp	x21, x20, [x8, #16]
    4d8c:	ldp	x20, x19, [sp, #32]
    4d90:	ldr	x21, [sp, #16]
    4d94:	ldp	x29, x30, [sp], #48
    4d98:	ret
    4d9c:	bl	3d80 <PyErr_NoMemory@plt>
    4da0:	mov	w0, #0xffffffff            	// #-1
    4da4:	ldp	x20, x19, [sp, #32]
    4da8:	ldr	x21, [sp, #16]
    4dac:	ldp	x29, x30, [sp], #48
    4db0:	ret
    4db4:	stp	x29, x30, [sp, #-48]!
    4db8:	str	x21, [sp, #16]
    4dbc:	stp	x20, x19, [sp, #32]
    4dc0:	mov	x29, sp
    4dc4:	ldr	x20, [x0, #24]
    4dc8:	mov	x19, x0
    4dcc:	str	xzr, [x0, #24]
    4dd0:	bl	4220 <PyObject_GC_UnTrack@plt>
    4dd4:	ldr	x0, [x19, #16]
    4dd8:	cbz	x20, 4e1c <PyInit__elementtree@@Base+0xaf8>
    4ddc:	lsl	x8, x20, #4
    4de0:	sub	x21, x8, #0x10
    4de4:	b	4df0 <PyInit__elementtree@@Base+0xacc>
    4de8:	sub	x21, x21, #0x10
    4dec:	cbz	x20, 4e1c <PyInit__elementtree@@Base+0xaf8>
    4df0:	ldr	x8, [x0, x21]
    4df4:	sub	x20, x20, #0x1
    4df8:	cbz	x8, 4de8 <PyInit__elementtree@@Base+0xac4>
    4dfc:	ldr	x9, [x8]
    4e00:	subs	x9, x9, #0x1
    4e04:	str	x9, [x8]
    4e08:	b.ne	4de8 <PyInit__elementtree@@Base+0xac4>  // b.any
    4e0c:	mov	x0, x8
    4e10:	bl	3d70 <_Py_Dealloc@plt>
    4e14:	ldr	x0, [x19, #16]
    4e18:	b	4de8 <PyInit__elementtree@@Base+0xac4>
    4e1c:	bl	3cd0 <PyMem_Free@plt>
    4e20:	ldr	x0, [x19, #48]
    4e24:	cbz	x0, 4e38 <PyInit__elementtree@@Base+0xb14>
    4e28:	ldr	x8, [x0]
    4e2c:	subs	x8, x8, #0x1
    4e30:	str	x8, [x0]
    4e34:	b.eq	4e58 <PyInit__elementtree@@Base+0xb34>  // b.none
    4e38:	ldr	x0, [x19, #40]
    4e3c:	cbz	x0, 4e64 <PyInit__elementtree@@Base+0xb40>
    4e40:	ldr	x8, [x0]
    4e44:	subs	x8, x8, #0x1
    4e48:	str	x8, [x0]
    4e4c:	b.ne	4e64 <PyInit__elementtree@@Base+0xb40>  // b.any
    4e50:	bl	3d70 <_Py_Dealloc@plt>
    4e54:	b	4e64 <PyInit__elementtree@@Base+0xb40>
    4e58:	bl	3d70 <_Py_Dealloc@plt>
    4e5c:	ldr	x0, [x19, #40]
    4e60:	cbnz	x0, 4e40 <PyInit__elementtree@@Base+0xb1c>
    4e64:	mov	x0, x19
    4e68:	ldp	x20, x19, [sp, #32]
    4e6c:	ldr	x21, [sp, #16]
    4e70:	ldp	x29, x30, [sp], #48
    4e74:	b	3da0 <PyObject_GC_Del@plt>
    4e78:	stp	x29, x30, [sp, #-64]!
    4e7c:	str	x23, [sp, #16]
    4e80:	stp	x22, x21, [sp, #32]
    4e84:	stp	x20, x19, [sp, #48]
    4e88:	mov	x29, sp
    4e8c:	ldr	x22, [x0, #24]
    4e90:	mov	x19, x2
    4e94:	mov	x21, x0
    4e98:	mov	x20, x1
    4e9c:	cbz	x22, 4ed4 <PyInit__elementtree@@Base+0xbb0>
    4ea0:	lsl	x8, x22, #4
    4ea4:	sub	x23, x8, #0x10
    4ea8:	b	4eb8 <PyInit__elementtree@@Base+0xb94>
    4eac:	sub	x22, x22, #0x1
    4eb0:	sub	x23, x23, #0x10
    4eb4:	cbz	x22, 4ed4 <PyInit__elementtree@@Base+0xbb0>
    4eb8:	ldr	x8, [x21, #16]
    4ebc:	ldr	x0, [x8, x23]
    4ec0:	cbz	x0, 4eac <PyInit__elementtree@@Base+0xb88>
    4ec4:	mov	x1, x19
    4ec8:	blr	x20
    4ecc:	cbz	w0, 4eac <PyInit__elementtree@@Base+0xb88>
    4ed0:	b	4f00 <PyInit__elementtree@@Base+0xbdc>
    4ed4:	ldr	x0, [x21, #40]
    4ed8:	cbz	x0, 4ee8 <PyInit__elementtree@@Base+0xbc4>
    4edc:	mov	x1, x19
    4ee0:	blr	x20
    4ee4:	cbnz	w0, 4f00 <PyInit__elementtree@@Base+0xbdc>
    4ee8:	ldr	x0, [x21, #48]
    4eec:	cbz	x0, 4efc <PyInit__elementtree@@Base+0xbd8>
    4ef0:	mov	x1, x19
    4ef4:	blr	x20
    4ef8:	cbnz	w0, 4f00 <PyInit__elementtree@@Base+0xbdc>
    4efc:	mov	w0, wzr
    4f00:	ldp	x20, x19, [sp, #48]
    4f04:	ldp	x22, x21, [sp, #32]
    4f08:	ldr	x23, [sp, #16]
    4f0c:	ldp	x29, x30, [sp], #64
    4f10:	ret
    4f14:	stp	x29, x30, [sp, #-80]!
    4f18:	stp	x26, x25, [sp, #16]
    4f1c:	stp	x24, x23, [sp, #32]
    4f20:	stp	x22, x21, [sp, #48]
    4f24:	stp	x20, x19, [sp, #64]
    4f28:	mov	x29, sp
    4f2c:	adrp	x25, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4f30:	adrp	x26, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4f34:	ldr	x25, [x25, #3976]
    4f38:	ldr	x26, [x26, #4064]
    4f3c:	adrp	x20, d000 <PyInit__elementtree@@Base+0x8cdc>
    4f40:	mov	x19, x0
    4f44:	add	x20, x20, #0x79
    4f48:	b	4f50 <PyInit__elementtree@@Base+0xc2c>
    4f4c:	tbnz	w21, #31, 5228 <PyInit__elementtree@@Base+0xf04>
    4f50:	ldr	x8, [x19, #24]
    4f54:	cbz	x8, 5054 <PyInit__elementtree@@Base+0xd30>
    4f58:	ldr	x12, [x19, #16]
    4f5c:	sub	x9, x8, #0x1
    4f60:	lsl	x13, x9, #4
    4f64:	add	x10, x12, x13
    4f68:	ldr	x11, [x10, #8]!
    4f6c:	ldr	x21, [x12, x13]
    4f70:	ldr	x12, [x21, #40]
    4f74:	cbz	x12, 4fd8 <PyInit__elementtree@@Base+0xcb4>
    4f78:	ldr	x13, [x12, #8]
    4f7c:	cmp	x11, x13
    4f80:	b.ge	4fd8 <PyInit__elementtree@@Base+0xcb4>  // b.tcont
    4f84:	ldr	x9, [x12, #24]
    4f88:	ldr	x21, [x9, x11, lsl #3]
    4f8c:	add	x9, x11, #0x1
    4f90:	str	x9, [x10]
    4f94:	ldr	x9, [x21]
    4f98:	add	x9, x9, #0x1
    4f9c:	str	x9, [x21]
    4fa0:	ldr	x22, [x19, #32]
    4fa4:	cmp	x8, x22
    4fa8:	b.lt	506c <PyInit__elementtree@@Base+0xd48>  // b.tstop
    4fac:	ubfx	x8, x22, #58, #5
    4fb0:	cbnz	x8, 51f0 <PyInit__elementtree@@Base+0xecc>
    4fb4:	ldr	x0, [x19, #16]
    4fb8:	lsl	x1, x22, #5
    4fbc:	bl	3e30 <PyMem_Realloc@plt>
    4fc0:	cbz	x0, 51f0 <PyInit__elementtree@@Base+0xecc>
    4fc4:	ldr	x8, [x19, #24]
    4fc8:	lsl	x9, x22, #1
    4fcc:	str	x0, [x19, #16]
    4fd0:	str	x9, [x19, #32]
    4fd4:	b	5070 <PyInit__elementtree@@Base+0xd4c>
    4fd8:	str	x9, [x19, #24]
    4fdc:	cbz	x9, 5110 <PyInit__elementtree@@Base+0xdec>
    4fe0:	ldr	w8, [x19, #56]
    4fe4:	cbz	w8, 5110 <PyInit__elementtree@@Base+0xdec>
    4fe8:	ldr	x23, [x21, #32]
    4fec:	tbz	w23, #0, 50ac <PyInit__elementtree@@Base+0xd88>
    4ff0:	and	x23, x23, #0xfffffffffffffffe
    4ff4:	ldr	x8, [x23, #8]
    4ff8:	cmp	x8, x26
    4ffc:	b.ne	50ac <PyInit__elementtree@@Base+0xd88>  // b.any
    5000:	mov	x0, x20
    5004:	mov	x1, xzr
    5008:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    500c:	cbz	x0, 51d4 <PyInit__elementtree@@Base+0xeb0>
    5010:	mov	x1, x23
    5014:	mov	x24, x0
    5018:	bl	3d20 <PyUnicode_Join@plt>
    501c:	ldr	x8, [x24]
    5020:	mov	x22, x0
    5024:	subs	x8, x8, #0x1
    5028:	str	x8, [x24]
    502c:	b.ne	5038 <PyInit__elementtree@@Base+0xd14>  // b.any
    5030:	mov	x0, x24
    5034:	bl	3d70 <_Py_Dealloc@plt>
    5038:	cbz	x22, 51d4 <PyInit__elementtree@@Base+0xeb0>
    503c:	str	x22, [x21, #32]
    5040:	ldr	x8, [x23]
    5044:	subs	x8, x8, #0x1
    5048:	str	x8, [x23]
    504c:	b.ne	50b4 <PyInit__elementtree@@Base+0xd90>  // b.any
    5050:	b	51c8 <PyInit__elementtree@@Base+0xea4>
    5054:	ldr	x21, [x19, #40]
    5058:	cbz	x21, 5218 <PyInit__elementtree@@Base+0xef4>
    505c:	str	xzr, [x19, #40]
    5060:	ldr	x22, [x19, #32]
    5064:	cmp	x8, x22
    5068:	b.ge	4fac <PyInit__elementtree@@Base+0xc88>  // b.tcont
    506c:	ldr	x0, [x19, #16]
    5070:	add	x9, x8, #0x1
    5074:	str	x9, [x19, #24]
    5078:	ldr	x9, [x21]
    507c:	add	x8, x0, x8, lsl #4
    5080:	add	x9, x9, #0x1
    5084:	str	x9, [x21]
    5088:	stp	x21, xzr, [x8]
    508c:	ldr	w8, [x19, #56]
    5090:	cbz	w8, 512c <PyInit__elementtree@@Base+0xe08>
    5094:	ldr	x23, [x21, #24]
    5098:	tbz	w23, #0, 50ac <PyInit__elementtree@@Base+0xd88>
    509c:	and	x23, x23, #0xfffffffffffffffe
    50a0:	ldr	x8, [x23, #8]
    50a4:	cmp	x8, x26
    50a8:	b.eq	5178 <PyInit__elementtree@@Base+0xe54>  // b.none
    50ac:	mov	x22, x23
    50b0:	cbz	x23, 51d4 <PyInit__elementtree@@Base+0xeb0>
    50b4:	cmp	x22, x25
    50b8:	b.eq	5110 <PyInit__elementtree@@Base+0xdec>  // b.none
    50bc:	ldr	x8, [x22]
    50c0:	add	x8, x8, #0x1
    50c4:	str	x8, [x22]
    50c8:	ldr	x8, [x21]
    50cc:	subs	x8, x8, #0x1
    50d0:	str	x8, [x21]
    50d4:	b.ne	50e0 <PyInit__elementtree@@Base+0xdbc>  // b.any
    50d8:	mov	x0, x21
    50dc:	bl	3d70 <_Py_Dealloc@plt>
    50e0:	mov	x0, x22
    50e4:	bl	4050 <PyObject_IsTrue@plt>
    50e8:	cmp	w0, #0x0
    50ec:	b.gt	522c <PyInit__elementtree@@Base+0xf08>
    50f0:	ldr	x8, [x22]
    50f4:	mov	w21, w0
    50f8:	subs	x8, x8, #0x1
    50fc:	str	x8, [x22]
    5100:	b.ne	4f4c <PyInit__elementtree@@Base+0xc28>  // b.any
    5104:	mov	x0, x22
    5108:	bl	3d70 <_Py_Dealloc@plt>
    510c:	b	4f4c <PyInit__elementtree@@Base+0xc28>
    5110:	ldr	x8, [x21]
    5114:	subs	x8, x8, #0x1
    5118:	str	x8, [x21]
    511c:	b.ne	4f50 <PyInit__elementtree@@Base+0xc2c>  // b.any
    5120:	mov	x0, x21
    5124:	bl	3d70 <_Py_Dealloc@plt>
    5128:	b	4f50 <PyInit__elementtree@@Base+0xc2c>
    512c:	ldr	x1, [x19, #48]
    5130:	cmp	x1, x25
    5134:	b.eq	5210 <PyInit__elementtree@@Base+0xeec>  // b.none
    5138:	ldr	x0, [x21, #16]
    513c:	mov	w2, #0x2                   	// #2
    5140:	bl	3ec0 <PyObject_RichCompareBool@plt>
    5144:	cmp	w0, #0x0
    5148:	b.gt	5210 <PyInit__elementtree@@Base+0xeec>
    514c:	ldr	x8, [x21]
    5150:	mov	w22, w0
    5154:	subs	x8, x8, #0x1
    5158:	str	x8, [x21]
    515c:	b.eq	5168 <PyInit__elementtree@@Base+0xe44>  // b.none
    5160:	tbz	w22, #31, 4f50 <PyInit__elementtree@@Base+0xc2c>
    5164:	b	5228 <PyInit__elementtree@@Base+0xf04>
    5168:	mov	x0, x21
    516c:	bl	3d70 <_Py_Dealloc@plt>
    5170:	tbz	w22, #31, 4f50 <PyInit__elementtree@@Base+0xc2c>
    5174:	b	5228 <PyInit__elementtree@@Base+0xf04>
    5178:	mov	x0, x20
    517c:	mov	x1, xzr
    5180:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    5184:	cbz	x0, 51d4 <PyInit__elementtree@@Base+0xeb0>
    5188:	mov	x1, x23
    518c:	mov	x24, x0
    5190:	bl	3d20 <PyUnicode_Join@plt>
    5194:	ldr	x8, [x24]
    5198:	mov	x22, x0
    519c:	subs	x8, x8, #0x1
    51a0:	str	x8, [x24]
    51a4:	b.ne	51b0 <PyInit__elementtree@@Base+0xe8c>  // b.any
    51a8:	mov	x0, x24
    51ac:	bl	3d70 <_Py_Dealloc@plt>
    51b0:	cbz	x22, 51d4 <PyInit__elementtree@@Base+0xeb0>
    51b4:	str	x22, [x21, #24]
    51b8:	ldr	x8, [x23]
    51bc:	subs	x8, x8, #0x1
    51c0:	str	x8, [x23]
    51c4:	b.ne	50b4 <PyInit__elementtree@@Base+0xd90>  // b.any
    51c8:	mov	x0, x23
    51cc:	bl	3d70 <_Py_Dealloc@plt>
    51d0:	b	50b4 <PyInit__elementtree@@Base+0xd90>
    51d4:	ldr	x8, [x21]
    51d8:	subs	x8, x8, #0x1
    51dc:	str	x8, [x21]
    51e0:	b.ne	5228 <PyInit__elementtree@@Base+0xf04>  // b.any
    51e4:	mov	x0, x21
    51e8:	bl	3d70 <_Py_Dealloc@plt>
    51ec:	b	5228 <PyInit__elementtree@@Base+0xf04>
    51f0:	ldr	x8, [x21]
    51f4:	subs	x8, x8, #0x1
    51f8:	str	x8, [x21]
    51fc:	b.ne	5208 <PyInit__elementtree@@Base+0xee4>  // b.any
    5200:	mov	x0, x21
    5204:	bl	3d70 <_Py_Dealloc@plt>
    5208:	bl	3d80 <PyErr_NoMemory@plt>
    520c:	b	5228 <PyInit__elementtree@@Base+0xf04>
    5210:	mov	x22, x21
    5214:	b	522c <PyInit__elementtree@@Base+0xf08>
    5218:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    521c:	ldr	x8, [x8, #4016]
    5220:	ldr	x0, [x8]
    5224:	bl	3e40 <PyErr_SetNone@plt>
    5228:	mov	x22, xzr
    522c:	mov	x0, x22
    5230:	ldp	x20, x19, [sp, #64]
    5234:	ldp	x22, x21, [sp, #48]
    5238:	ldp	x24, x23, [sp, #32]
    523c:	ldp	x26, x25, [sp, #16]
    5240:	ldp	x29, x30, [sp], #80
    5244:	ret
    5248:	stp	x29, x30, [sp, #-32]!
    524c:	str	x19, [sp, #16]
    5250:	mov	x29, sp
    5254:	mov	x19, x0
    5258:	bl	4220 <PyObject_GC_UnTrack@plt>
    525c:	mov	x0, x19
    5260:	bl	53fc <PyInit__elementtree@@Base+0x10d8>
    5264:	ldr	x8, [x19, #8]
    5268:	mov	x0, x19
    526c:	ldr	x19, [sp, #16]
    5270:	ldr	x1, [x8, #320]
    5274:	ldp	x29, x30, [sp], #32
    5278:	br	x1
    527c:	stp	x29, x30, [sp, #-48]!
    5280:	str	x21, [sp, #16]
    5284:	stp	x20, x19, [sp, #32]
    5288:	mov	x29, sp
    528c:	mov	x21, x0
    5290:	ldr	x0, [x0, #144]
    5294:	mov	x19, x2
    5298:	mov	x20, x1
    529c:	cbz	x0, 52bc <PyInit__elementtree@@Base+0xf98>
    52a0:	mov	x1, x19
    52a4:	blr	x20
    52a8:	cbz	w0, 52bc <PyInit__elementtree@@Base+0xf98>
    52ac:	ldp	x20, x19, [sp, #32]
    52b0:	ldr	x21, [sp, #16]
    52b4:	ldp	x29, x30, [sp], #48
    52b8:	ret
    52bc:	ldr	x0, [x21, #136]
    52c0:	cbz	x0, 52d0 <PyInit__elementtree@@Base+0xfac>
    52c4:	mov	x1, x19
    52c8:	blr	x20
    52cc:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    52d0:	ldr	x0, [x21, #128]
    52d4:	cbz	x0, 52e4 <PyInit__elementtree@@Base+0xfc0>
    52d8:	mov	x1, x19
    52dc:	blr	x20
    52e0:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    52e4:	ldr	x0, [x21, #120]
    52e8:	cbz	x0, 52f8 <PyInit__elementtree@@Base+0xfd4>
    52ec:	mov	x1, x19
    52f0:	blr	x20
    52f4:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    52f8:	ldr	x0, [x21, #112]
    52fc:	cbz	x0, 530c <PyInit__elementtree@@Base+0xfe8>
    5300:	mov	x1, x19
    5304:	blr	x20
    5308:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    530c:	ldr	x0, [x21, #104]
    5310:	cbz	x0, 5320 <PyInit__elementtree@@Base+0xffc>
    5314:	mov	x1, x19
    5318:	blr	x20
    531c:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5320:	ldr	x0, [x21, #96]
    5324:	cbz	x0, 5334 <PyInit__elementtree@@Base+0x1010>
    5328:	mov	x1, x19
    532c:	blr	x20
    5330:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5334:	ldr	x0, [x21, #16]
    5338:	cbz	x0, 5348 <PyInit__elementtree@@Base+0x1024>
    533c:	mov	x1, x19
    5340:	blr	x20
    5344:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5348:	ldr	x0, [x21, #24]
    534c:	cbz	x0, 535c <PyInit__elementtree@@Base+0x1038>
    5350:	mov	x1, x19
    5354:	blr	x20
    5358:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    535c:	ldr	x0, [x21, #32]
    5360:	cbz	x0, 5370 <PyInit__elementtree@@Base+0x104c>
    5364:	mov	x1, x19
    5368:	blr	x20
    536c:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5370:	ldr	x0, [x21, #40]
    5374:	cbz	x0, 5384 <PyInit__elementtree@@Base+0x1060>
    5378:	mov	x1, x19
    537c:	blr	x20
    5380:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5384:	ldr	x0, [x21, #48]
    5388:	cbz	x0, 5398 <PyInit__elementtree@@Base+0x1074>
    538c:	mov	x1, x19
    5390:	blr	x20
    5394:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    5398:	ldr	x0, [x21, #56]
    539c:	cbz	x0, 53ac <PyInit__elementtree@@Base+0x1088>
    53a0:	mov	x1, x19
    53a4:	blr	x20
    53a8:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    53ac:	ldr	x0, [x21, #88]
    53b0:	cbz	x0, 53c0 <PyInit__elementtree@@Base+0x109c>
    53b4:	mov	x1, x19
    53b8:	blr	x20
    53bc:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    53c0:	ldr	x0, [x21, #80]
    53c4:	cbz	x0, 53d4 <PyInit__elementtree@@Base+0x10b0>
    53c8:	mov	x1, x19
    53cc:	blr	x20
    53d0:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    53d4:	ldr	x0, [x21, #72]
    53d8:	cbz	x0, 53e8 <PyInit__elementtree@@Base+0x10c4>
    53dc:	mov	x1, x19
    53e0:	blr	x20
    53e4:	cbnz	w0, 52ac <PyInit__elementtree@@Base+0xf88>
    53e8:	mov	w0, wzr
    53ec:	ldp	x20, x19, [sp, #32]
    53f0:	ldr	x21, [sp, #16]
    53f4:	ldp	x29, x30, [sp], #48
    53f8:	ret
    53fc:	stp	x29, x30, [sp, #-32]!
    5400:	str	x19, [sp, #16]
    5404:	mov	x29, sp
    5408:	mov	x19, x0
    540c:	ldr	x0, [x0, #144]
    5410:	cbz	x0, 5428 <PyInit__elementtree@@Base+0x1104>
    5414:	str	xzr, [x19, #144]
    5418:	ldr	x8, [x0]
    541c:	subs	x8, x8, #0x1
    5420:	str	x8, [x0]
    5424:	b.eq	544c <PyInit__elementtree@@Base+0x1128>  // b.none
    5428:	ldr	x0, [x19, #136]
    542c:	cbz	x0, 5458 <PyInit__elementtree@@Base+0x1134>
    5430:	str	xzr, [x19, #136]
    5434:	ldr	x8, [x0]
    5438:	subs	x8, x8, #0x1
    543c:	str	x8, [x0]
    5440:	b.ne	5458 <PyInit__elementtree@@Base+0x1134>  // b.any
    5444:	bl	3d70 <_Py_Dealloc@plt>
    5448:	b	5458 <PyInit__elementtree@@Base+0x1134>
    544c:	bl	3d70 <_Py_Dealloc@plt>
    5450:	ldr	x0, [x19, #136]
    5454:	cbnz	x0, 5430 <PyInit__elementtree@@Base+0x110c>
    5458:	ldr	x0, [x19, #128]
    545c:	cbz	x0, 5474 <PyInit__elementtree@@Base+0x1150>
    5460:	str	xzr, [x19, #128]
    5464:	ldr	x8, [x0]
    5468:	subs	x8, x8, #0x1
    546c:	str	x8, [x0]
    5470:	b.eq	5498 <PyInit__elementtree@@Base+0x1174>  // b.none
    5474:	ldr	x0, [x19, #120]
    5478:	cbz	x0, 54a4 <PyInit__elementtree@@Base+0x1180>
    547c:	str	xzr, [x19, #120]
    5480:	ldr	x8, [x0]
    5484:	subs	x8, x8, #0x1
    5488:	str	x8, [x0]
    548c:	b.ne	54a4 <PyInit__elementtree@@Base+0x1180>  // b.any
    5490:	bl	3d70 <_Py_Dealloc@plt>
    5494:	b	54a4 <PyInit__elementtree@@Base+0x1180>
    5498:	bl	3d70 <_Py_Dealloc@plt>
    549c:	ldr	x0, [x19, #120]
    54a0:	cbnz	x0, 547c <PyInit__elementtree@@Base+0x1158>
    54a4:	ldr	x0, [x19, #112]
    54a8:	cbz	x0, 54c0 <PyInit__elementtree@@Base+0x119c>
    54ac:	str	xzr, [x19, #112]
    54b0:	ldr	x8, [x0]
    54b4:	subs	x8, x8, #0x1
    54b8:	str	x8, [x0]
    54bc:	b.eq	54e4 <PyInit__elementtree@@Base+0x11c0>  // b.none
    54c0:	ldr	x0, [x19, #104]
    54c4:	cbz	x0, 54f0 <PyInit__elementtree@@Base+0x11cc>
    54c8:	str	xzr, [x19, #104]
    54cc:	ldr	x8, [x0]
    54d0:	subs	x8, x8, #0x1
    54d4:	str	x8, [x0]
    54d8:	b.ne	54f0 <PyInit__elementtree@@Base+0x11cc>  // b.any
    54dc:	bl	3d70 <_Py_Dealloc@plt>
    54e0:	b	54f0 <PyInit__elementtree@@Base+0x11cc>
    54e4:	bl	3d70 <_Py_Dealloc@plt>
    54e8:	ldr	x0, [x19, #104]
    54ec:	cbnz	x0, 54c8 <PyInit__elementtree@@Base+0x11a4>
    54f0:	ldr	x0, [x19, #96]
    54f4:	cbz	x0, 550c <PyInit__elementtree@@Base+0x11e8>
    54f8:	str	xzr, [x19, #96]
    54fc:	ldr	x8, [x0]
    5500:	subs	x8, x8, #0x1
    5504:	str	x8, [x0]
    5508:	b.eq	5530 <PyInit__elementtree@@Base+0x120c>  // b.none
    550c:	ldr	x0, [x19, #56]
    5510:	cbz	x0, 553c <PyInit__elementtree@@Base+0x1218>
    5514:	str	xzr, [x19, #56]
    5518:	ldr	x8, [x0]
    551c:	subs	x8, x8, #0x1
    5520:	str	x8, [x0]
    5524:	b.ne	553c <PyInit__elementtree@@Base+0x1218>  // b.any
    5528:	bl	3d70 <_Py_Dealloc@plt>
    552c:	b	553c <PyInit__elementtree@@Base+0x1218>
    5530:	bl	3d70 <_Py_Dealloc@plt>
    5534:	ldr	x0, [x19, #56]
    5538:	cbnz	x0, 5514 <PyInit__elementtree@@Base+0x11f0>
    553c:	ldr	x0, [x19, #48]
    5540:	cbz	x0, 5558 <PyInit__elementtree@@Base+0x1234>
    5544:	str	xzr, [x19, #48]
    5548:	ldr	x8, [x0]
    554c:	subs	x8, x8, #0x1
    5550:	str	x8, [x0]
    5554:	b.eq	557c <PyInit__elementtree@@Base+0x1258>  // b.none
    5558:	ldr	x0, [x19, #32]
    555c:	cbz	x0, 5588 <PyInit__elementtree@@Base+0x1264>
    5560:	str	xzr, [x19, #32]
    5564:	ldr	x8, [x0]
    5568:	subs	x8, x8, #0x1
    556c:	str	x8, [x0]
    5570:	b.ne	5588 <PyInit__elementtree@@Base+0x1264>  // b.any
    5574:	bl	3d70 <_Py_Dealloc@plt>
    5578:	b	5588 <PyInit__elementtree@@Base+0x1264>
    557c:	bl	3d70 <_Py_Dealloc@plt>
    5580:	ldr	x0, [x19, #32]
    5584:	cbnz	x0, 5560 <PyInit__elementtree@@Base+0x123c>
    5588:	ldr	x0, [x19, #40]
    558c:	cbz	x0, 55a4 <PyInit__elementtree@@Base+0x1280>
    5590:	str	xzr, [x19, #40]
    5594:	ldr	x8, [x0]
    5598:	subs	x8, x8, #0x1
    559c:	str	x8, [x0]
    55a0:	b.eq	55c8 <PyInit__elementtree@@Base+0x12a4>  // b.none
    55a4:	ldr	x0, [x19, #24]
    55a8:	cbz	x0, 55d4 <PyInit__elementtree@@Base+0x12b0>
    55ac:	str	xzr, [x19, #24]
    55b0:	ldr	x8, [x0]
    55b4:	subs	x8, x8, #0x1
    55b8:	str	x8, [x0]
    55bc:	b.ne	55d4 <PyInit__elementtree@@Base+0x12b0>  // b.any
    55c0:	bl	3d70 <_Py_Dealloc@plt>
    55c4:	b	55d4 <PyInit__elementtree@@Base+0x12b0>
    55c8:	bl	3d70 <_Py_Dealloc@plt>
    55cc:	ldr	x0, [x19, #24]
    55d0:	cbnz	x0, 55ac <PyInit__elementtree@@Base+0x1288>
    55d4:	ldr	x0, [x19, #88]
    55d8:	cbz	x0, 55f0 <PyInit__elementtree@@Base+0x12cc>
    55dc:	str	xzr, [x19, #88]
    55e0:	ldr	x8, [x0]
    55e4:	subs	x8, x8, #0x1
    55e8:	str	x8, [x0]
    55ec:	b.eq	5614 <PyInit__elementtree@@Base+0x12f0>  // b.none
    55f0:	ldr	x0, [x19, #80]
    55f4:	cbz	x0, 5620 <PyInit__elementtree@@Base+0x12fc>
    55f8:	str	xzr, [x19, #80]
    55fc:	ldr	x8, [x0]
    5600:	subs	x8, x8, #0x1
    5604:	str	x8, [x0]
    5608:	b.ne	5620 <PyInit__elementtree@@Base+0x12fc>  // b.any
    560c:	bl	3d70 <_Py_Dealloc@plt>
    5610:	b	5620 <PyInit__elementtree@@Base+0x12fc>
    5614:	bl	3d70 <_Py_Dealloc@plt>
    5618:	ldr	x0, [x19, #80]
    561c:	cbnz	x0, 55f8 <PyInit__elementtree@@Base+0x12d4>
    5620:	ldr	x0, [x19, #72]
    5624:	cbz	x0, 563c <PyInit__elementtree@@Base+0x1318>
    5628:	str	xzr, [x19, #72]
    562c:	ldr	x8, [x0]
    5630:	subs	x8, x8, #0x1
    5634:	str	x8, [x0]
    5638:	b.eq	5668 <PyInit__elementtree@@Base+0x1344>  // b.none
    563c:	ldr	x0, [x19, #16]
    5640:	cbz	x0, 5658 <PyInit__elementtree@@Base+0x1334>
    5644:	str	xzr, [x19, #16]
    5648:	ldr	x8, [x0]
    564c:	subs	x8, x8, #0x1
    5650:	str	x8, [x0]
    5654:	b.eq	5678 <PyInit__elementtree@@Base+0x1354>  // b.none
    5658:	ldr	x19, [sp, #16]
    565c:	mov	w0, wzr
    5660:	ldp	x29, x30, [sp], #32
    5664:	ret
    5668:	bl	3d70 <_Py_Dealloc@plt>
    566c:	ldr	x0, [x19, #16]
    5670:	cbnz	x0, 5644 <PyInit__elementtree@@Base+0x1320>
    5674:	b	5658 <PyInit__elementtree@@Base+0x1334>
    5678:	bl	3d70 <_Py_Dealloc@plt>
    567c:	ldr	x19, [sp, #16]
    5680:	mov	w0, wzr
    5684:	ldp	x29, x30, [sp], #32
    5688:	ret
    568c:	sub	sp, sp, #0x80
    5690:	stp	x29, x30, [sp, #48]
    5694:	stp	x26, x25, [sp, #64]
    5698:	stp	x24, x23, [sp, #80]
    569c:	stp	x22, x21, [sp, #96]
    56a0:	stp	x20, x19, [sp, #112]
    56a4:	add	x29, sp, #0x30
    56a8:	ldr	x22, [x1, #16]
    56ac:	mov	x19, x0
    56b0:	cbz	x2, 56c4 <PyInit__elementtree@@Base+0x13a0>
    56b4:	ldr	x8, [x2, #16]
    56b8:	add	x20, x1, #0x18
    56bc:	add	x21, x8, x22
    56c0:	b	56d4 <PyInit__elementtree@@Base+0x13b0>
    56c4:	cmp	x22, #0x2
    56c8:	add	x20, x1, #0x18
    56cc:	mov	x21, x22
    56d0:	b.cc	570c <PyInit__elementtree@@Base+0x13e8>  // b.lo, b.ul, b.last
    56d4:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    56d8:	add	x8, sp, #0x8
    56dc:	add	x4, x4, #0xbc0
    56e0:	mov	w6, #0x1                   	// #1
    56e4:	mov	x0, x20
    56e8:	mov	x1, x22
    56ec:	mov	x3, xzr
    56f0:	mov	w5, wzr
    56f4:	mov	w7, wzr
    56f8:	str	x8, [sp]
    56fc:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5700:	mov	x20, x0
    5704:	mov	x22, x21
    5708:	cbz	x0, 5824 <PyInit__elementtree@@Base+0x1500>
    570c:	cbz	x22, 5750 <PyInit__elementtree@@Base+0x142c>
    5710:	adrp	x26, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5714:	ldr	x25, [x20]
    5718:	ldr	x26, [x26, #3976]
    571c:	cbz	x25, 5768 <PyInit__elementtree@@Base+0x1444>
    5720:	sub	x22, x22, #0x1
    5724:	cbz	x22, 57b0 <PyInit__elementtree@@Base+0x148c>
    5728:	ldr	x24, [x20, #8]
    572c:	cbz	x24, 5774 <PyInit__elementtree@@Base+0x1450>
    5730:	subs	x22, x22, #0x1
    5734:	b.eq	57c8 <PyInit__elementtree@@Base+0x14a4>  // b.none
    5738:	ldr	x23, [x20, #16]
    573c:	cbz	x23, 5784 <PyInit__elementtree@@Base+0x1460>
    5740:	subs	x22, x22, #0x1
    5744:	b.ne	578c <PyInit__elementtree@@Base+0x1468>  // b.any
    5748:	mov	w21, wzr
    574c:	b	57a8 <PyInit__elementtree@@Base+0x1484>
    5750:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5754:	ldr	x23, [x23, #3976]
    5758:	mov	w20, wzr
    575c:	mov	w21, wzr
    5760:	mov	x24, x23
    5764:	b	582c <PyInit__elementtree@@Base+0x1508>
    5768:	mov	x25, x26
    576c:	ldr	x24, [x20, #8]
    5770:	cbnz	x24, 5730 <PyInit__elementtree@@Base+0x140c>
    5774:	adrp	x24, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5778:	ldr	x24, [x24, #3976]
    577c:	ldr	x23, [x20, #16]
    5780:	cbnz	x23, 5740 <PyInit__elementtree@@Base+0x141c>
    5784:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5788:	ldr	x23, [x23, #3976]
    578c:	ldr	x0, [x20, #24]
    5790:	cbz	x0, 57dc <PyInit__elementtree@@Base+0x14b8>
    5794:	bl	4050 <PyObject_IsTrue@plt>
    5798:	tbnz	w0, #31, 5824 <PyInit__elementtree@@Base+0x1500>
    579c:	mov	w21, w0
    57a0:	cmp	x22, #0x1
    57a4:	b.ne	57e0 <PyInit__elementtree@@Base+0x14bc>  // b.any
    57a8:	mov	w20, wzr
    57ac:	b	57f0 <PyInit__elementtree@@Base+0x14cc>
    57b0:	adrp	x24, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    57b4:	ldr	x24, [x24, #3976]
    57b8:	mov	w21, wzr
    57bc:	mov	w20, wzr
    57c0:	mov	x23, x24
    57c4:	b	57f0 <PyInit__elementtree@@Base+0x14cc>
    57c8:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    57cc:	ldr	x23, [x23, #3976]
    57d0:	mov	w21, wzr
    57d4:	mov	w20, wzr
    57d8:	b	57f0 <PyInit__elementtree@@Base+0x14cc>
    57dc:	mov	w21, wzr
    57e0:	ldr	x0, [x20, #32]
    57e4:	bl	4050 <PyObject_IsTrue@plt>
    57e8:	mov	w20, w0
    57ec:	tbnz	w0, #31, 5824 <PyInit__elementtree@@Base+0x1500>
    57f0:	cmp	x25, x26
    57f4:	b.eq	582c <PyInit__elementtree@@Base+0x1508>  // b.none
    57f8:	ldr	x8, [x25]
    57fc:	add	x8, x8, #0x1
    5800:	str	x8, [x25]
    5804:	ldr	x0, [x19, #72]
    5808:	str	x25, [x19, #72]
    580c:	cbz	x0, 5848 <PyInit__elementtree@@Base+0x1524>
    5810:	ldr	x8, [x0]
    5814:	subs	x8, x8, #0x1
    5818:	str	x8, [x0]
    581c:	b.ne	5848 <PyInit__elementtree@@Base+0x1524>  // b.any
    5820:	b	58d0 <PyInit__elementtree@@Base+0x15ac>
    5824:	mov	w0, #0xffffffff            	// #-1
    5828:	b	596c <PyInit__elementtree@@Base+0x1648>
    582c:	ldr	x0, [x19, #72]
    5830:	cbz	x0, 5848 <PyInit__elementtree@@Base+0x1524>
    5834:	str	xzr, [x19, #72]
    5838:	ldr	x8, [x0]
    583c:	subs	x8, x8, #0x1
    5840:	str	x8, [x0]
    5844:	b.eq	58d0 <PyInit__elementtree@@Base+0x15ac>  // b.none
    5848:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    584c:	ldr	x22, [x22, #3976]
    5850:	cmp	x24, x22
    5854:	b.eq	58e4 <PyInit__elementtree@@Base+0x15c0>  // b.none
    5858:	cbz	x24, 58fc <PyInit__elementtree@@Base+0x15d8>
    585c:	ldr	x8, [x24]
    5860:	add	x8, x8, #0x1
    5864:	str	x8, [x24]
    5868:	ldr	x0, [x19, #80]
    586c:	str	x24, [x19, #80]
    5870:	cbz	x0, 5888 <PyInit__elementtree@@Base+0x1564>
    5874:	ldr	x8, [x0]
    5878:	subs	x8, x8, #0x1
    587c:	str	x8, [x0]
    5880:	b.ne	5888 <PyInit__elementtree@@Base+0x1564>  // b.any
    5884:	bl	3d70 <_Py_Dealloc@plt>
    5888:	cmp	x23, x22
    588c:	strb	w21, [x19, #152]
    5890:	b.eq	592c <PyInit__elementtree@@Base+0x1608>  // b.none
    5894:	cbz	x23, 5944 <PyInit__elementtree@@Base+0x1620>
    5898:	ldr	x8, [x23]
    589c:	add	x8, x8, #0x1
    58a0:	str	x8, [x23]
    58a4:	ldr	x0, [x19, #88]
    58a8:	str	x23, [x19, #88]
    58ac:	cbz	x0, 58c4 <PyInit__elementtree@@Base+0x15a0>
    58b0:	ldr	x8, [x0]
    58b4:	subs	x8, x8, #0x1
    58b8:	str	x8, [x0]
    58bc:	b.ne	58c4 <PyInit__elementtree@@Base+0x15a0>  // b.any
    58c0:	bl	3d70 <_Py_Dealloc@plt>
    58c4:	mov	w0, wzr
    58c8:	strb	w20, [x19, #153]
    58cc:	b	596c <PyInit__elementtree@@Base+0x1648>
    58d0:	bl	3d70 <_Py_Dealloc@plt>
    58d4:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    58d8:	ldr	x22, [x22, #3976]
    58dc:	cmp	x24, x22
    58e0:	b.ne	5858 <PyInit__elementtree@@Base+0x1534>  // b.any
    58e4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    58e8:	add	x0, x0, #0xd40
    58ec:	bl	3fc0 <PyState_FindModule@plt>
    58f0:	bl	3e10 <PyModule_GetState@plt>
    58f4:	ldr	x24, [x0, #24]
    58f8:	cbnz	x24, 585c <PyInit__elementtree@@Base+0x1538>
    58fc:	ldr	x0, [x19, #80]
    5900:	cbz	x0, 591c <PyInit__elementtree@@Base+0x15f8>
    5904:	str	xzr, [x19, #80]
    5908:	ldr	x8, [x0]
    590c:	subs	x8, x8, #0x1
    5910:	str	x8, [x0]
    5914:	b.ne	591c <PyInit__elementtree@@Base+0x15f8>  // b.any
    5918:	bl	3d70 <_Py_Dealloc@plt>
    591c:	mov	w21, wzr
    5920:	cmp	x23, x22
    5924:	strb	w21, [x19, #152]
    5928:	b.ne	5894 <PyInit__elementtree@@Base+0x1570>  // b.any
    592c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    5930:	add	x0, x0, #0xd40
    5934:	bl	3fc0 <PyState_FindModule@plt>
    5938:	bl	3e10 <PyModule_GetState@plt>
    593c:	ldr	x23, [x0, #32]
    5940:	cbnz	x23, 5898 <PyInit__elementtree@@Base+0x1574>
    5944:	ldr	x0, [x19, #88]
    5948:	cbz	x0, 5964 <PyInit__elementtree@@Base+0x1640>
    594c:	str	xzr, [x19, #88]
    5950:	ldr	x8, [x0]
    5954:	subs	x8, x8, #0x1
    5958:	str	x8, [x0]
    595c:	b.ne	5964 <PyInit__elementtree@@Base+0x1640>  // b.any
    5960:	bl	3d70 <_Py_Dealloc@plt>
    5964:	mov	w0, wzr
    5968:	strb	wzr, [x19, #153]
    596c:	ldp	x20, x19, [sp, #112]
    5970:	ldp	x22, x21, [sp, #96]
    5974:	ldp	x24, x23, [sp, #80]
    5978:	ldp	x26, x25, [sp, #64]
    597c:	ldp	x29, x30, [sp, #48]
    5980:	add	sp, sp, #0x80
    5984:	ret
    5988:	stp	x29, x30, [sp, #-32]!
    598c:	str	x19, [sp, #16]
    5990:	mov	x29, sp
    5994:	ldr	x8, [x0, #304]
    5998:	mov	x1, xzr
    599c:	blr	x8
    59a0:	mov	x19, x0
    59a4:	cbz	x0, 59f8 <PyInit__elementtree@@Base+0x16d4>
    59a8:	str	xzr, [x19, #16]
    59ac:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    59b0:	ldr	x8, [x8, #3976]
    59b4:	mov	w0, #0x14                  	// #20
    59b8:	ldr	x9, [x8]
    59bc:	stp	x8, x8, [x19, #24]
    59c0:	add	x9, x9, #0x2
    59c4:	str	x9, [x8]
    59c8:	str	xzr, [x19, #48]
    59cc:	stp	xzr, xzr, [x19, #80]
    59d0:	str	xzr, [x19, #72]
    59d4:	bl	3c50 <PyList_New@plt>
    59d8:	str	x0, [x19, #56]
    59dc:	cbz	x0, 5a08 <PyInit__elementtree@@Base+0x16e4>
    59e0:	movi	v0.2d, #0x0
    59e4:	str	xzr, [x19, #64]
    59e8:	str	xzr, [x19, #144]
    59ec:	stp	q0, q0, [x19, #96]
    59f0:	str	q0, [x19, #128]
    59f4:	strh	wzr, [x19, #152]
    59f8:	mov	x0, x19
    59fc:	ldr	x19, [sp, #16]
    5a00:	ldp	x29, x30, [sp], #32
    5a04:	ret
    5a08:	ldr	x0, [x19, #24]
    5a0c:	ldr	x8, [x0]
    5a10:	subs	x8, x8, #0x1
    5a14:	str	x8, [x0]
    5a18:	b.ne	5a20 <PyInit__elementtree@@Base+0x16fc>  // b.any
    5a1c:	bl	3d70 <_Py_Dealloc@plt>
    5a20:	ldr	x0, [x19, #32]
    5a24:	ldr	x8, [x0]
    5a28:	subs	x8, x8, #0x1
    5a2c:	str	x8, [x0]
    5a30:	b.eq	5a58 <PyInit__elementtree@@Base+0x1734>  // b.none
    5a34:	ldr	x8, [x19]
    5a38:	subs	x8, x8, #0x1
    5a3c:	str	x8, [x19]
    5a40:	b.eq	5a6c <PyInit__elementtree@@Base+0x1748>  // b.none
    5a44:	mov	x19, xzr
    5a48:	mov	x0, x19
    5a4c:	ldr	x19, [sp, #16]
    5a50:	ldp	x29, x30, [sp], #32
    5a54:	ret
    5a58:	bl	3d70 <_Py_Dealloc@plt>
    5a5c:	ldr	x8, [x19]
    5a60:	subs	x8, x8, #0x1
    5a64:	str	x8, [x19]
    5a68:	b.ne	5a44 <PyInit__elementtree@@Base+0x1720>  // b.any
    5a6c:	mov	x0, x19
    5a70:	bl	3d70 <_Py_Dealloc@plt>
    5a74:	b	5a44 <PyInit__elementtree@@Base+0x1720>
    5a78:	b	5bb8 <PyInit__elementtree@@Base+0x1894>
    5a7c:	stp	x29, x30, [sp, #-48]!
    5a80:	str	x21, [sp, #16]
    5a84:	stp	x20, x19, [sp, #32]
    5a88:	mov	x29, sp
    5a8c:	sub	x8, x2, #0x1
    5a90:	mov	x21, x2
    5a94:	mov	x20, x1
    5a98:	cmp	x8, #0x2
    5a9c:	mov	x19, x0
    5aa0:	b.cc	5ac0 <PyInit__elementtree@@Base+0x179c>  // b.lo, b.ul, b.last
    5aa4:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    5aa8:	add	x0, x0, #0xefc
    5aac:	mov	w2, #0x1                   	// #1
    5ab0:	mov	w3, #0x2                   	// #2
    5ab4:	mov	x1, x21
    5ab8:	bl	3f60 <_PyArg_CheckPositional@plt>
    5abc:	cbz	w0, 5af0 <PyInit__elementtree@@Base+0x17cc>
    5ac0:	ldr	x1, [x20]
    5ac4:	cmp	x21, #0x2
    5ac8:	b.ge	5ad8 <PyInit__elementtree@@Base+0x17b4>  // b.tcont
    5acc:	adrp	x2, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5ad0:	ldr	x2, [x2, #3976]
    5ad4:	b	5adc <PyInit__elementtree@@Base+0x17b8>
    5ad8:	ldr	x2, [x20, #8]
    5adc:	mov	x0, x19
    5ae0:	ldp	x20, x19, [sp, #32]
    5ae4:	ldr	x21, [sp, #16]
    5ae8:	ldp	x29, x30, [sp], #48
    5aec:	b	5cdc <PyInit__elementtree@@Base+0x19b8>
    5af0:	ldp	x20, x19, [sp, #32]
    5af4:	ldr	x21, [sp, #16]
    5af8:	mov	x0, xzr
    5afc:	ldp	x29, x30, [sp], #48
    5b00:	ret
    5b04:	b	62b4 <PyInit__elementtree@@Base+0x1f90>
    5b08:	b	6494 <PyInit__elementtree@@Base+0x2170>
    5b0c:	stp	x29, x30, [sp, #-48]!
    5b10:	str	x21, [sp, #16]
    5b14:	stp	x20, x19, [sp, #32]
    5b18:	mov	x29, sp
    5b1c:	sub	x8, x2, #0x1
    5b20:	mov	x21, x2
    5b24:	mov	x20, x1
    5b28:	cmp	x8, #0x2
    5b2c:	mov	x19, x0
    5b30:	b.cc	5b50 <PyInit__elementtree@@Base+0x182c>  // b.lo, b.ul, b.last
    5b34:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    5b38:	add	x0, x0, #0xf0a
    5b3c:	mov	w2, #0x1                   	// #1
    5b40:	mov	w3, #0x2                   	// #2
    5b44:	mov	x1, x21
    5b48:	bl	3f60 <_PyArg_CheckPositional@plt>
    5b4c:	cbz	w0, 5b80 <PyInit__elementtree@@Base+0x185c>
    5b50:	ldr	x1, [x20]
    5b54:	cmp	x21, #0x2
    5b58:	b.ge	5b68 <PyInit__elementtree@@Base+0x1844>  // b.tcont
    5b5c:	adrp	x2, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5b60:	ldr	x2, [x2, #3976]
    5b64:	b	5b6c <PyInit__elementtree@@Base+0x1848>
    5b68:	ldr	x2, [x20, #8]
    5b6c:	mov	x0, x19
    5b70:	ldp	x20, x19, [sp, #32]
    5b74:	ldr	x21, [sp, #16]
    5b78:	ldp	x29, x30, [sp], #48
    5b7c:	b	6768 <PyInit__elementtree@@Base+0x2444>
    5b80:	ldp	x20, x19, [sp, #32]
    5b84:	ldr	x21, [sp, #16]
    5b88:	mov	x0, xzr
    5b8c:	ldp	x29, x30, [sp], #48
    5b90:	ret
    5b94:	ldr	x8, [x0, #16]
    5b98:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5b9c:	ldr	x9, [x9, #3976]
    5ba0:	cmp	x8, #0x0
    5ba4:	csel	x0, x9, x8, eq  // eq = none
    5ba8:	ldr	x8, [x0]
    5bac:	add	x8, x8, #0x1
    5bb0:	str	x8, [x0]
    5bb4:	ret
    5bb8:	stp	x29, x30, [sp, #-48]!
    5bbc:	stp	x22, x21, [sp, #16]
    5bc0:	stp	x20, x19, [sp, #32]
    5bc4:	mov	x29, sp
    5bc8:	mov	x21, x0
    5bcc:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5bd0:	mov	x8, x0
    5bd4:	ldr	x0, [x21, #48]!
    5bd8:	ldr	x19, [x19, #3976]
    5bdc:	mov	x20, x1
    5be0:	cbz	x0, 5c18 <PyInit__elementtree@@Base+0x18f4>
    5be4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5be8:	ldr	x9, [x0, #8]
    5bec:	ldr	x8, [x8, #3912]
    5bf0:	cmp	x9, x8
    5bf4:	b.eq	5c38 <PyInit__elementtree@@Base+0x1914>  // b.none
    5bf8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5bfc:	ldr	x8, [x8, #4064]
    5c00:	cmp	x9, x8
    5c04:	b.ne	5c84 <PyInit__elementtree@@Base+0x1960>  // b.any
    5c08:	mov	x1, x20
    5c0c:	bl	3f00 <PyList_Append@plt>
    5c10:	tbz	w0, #31, 5cb4 <PyInit__elementtree@@Base+0x1990>
    5c14:	b	5cc4 <PyInit__elementtree@@Base+0x19a0>
    5c18:	ldr	x8, [x8, #32]
    5c1c:	cmp	x8, x19
    5c20:	b.eq	5cb4 <PyInit__elementtree@@Base+0x1990>  // b.none
    5c24:	ldr	x8, [x20]
    5c28:	add	x8, x8, #0x1
    5c2c:	str	x8, [x20]
    5c30:	str	x20, [x21]
    5c34:	b	5cb4 <PyInit__elementtree@@Base+0x1990>
    5c38:	ldr	x9, [x0]
    5c3c:	cmp	x9, #0x1
    5c40:	b.ne	5c84 <PyInit__elementtree@@Base+0x1960>  // b.any
    5c44:	ldr	x9, [x20, #8]
    5c48:	cmp	x9, x8
    5c4c:	b.ne	5c84 <PyInit__elementtree@@Base+0x1960>  // b.any
    5c50:	ldr	x8, [x20, #16]
    5c54:	cmp	x8, #0x1
    5c58:	b.ne	5c84 <PyInit__elementtree@@Base+0x1960>  // b.any
    5c5c:	ldr	x22, [x0, #16]
    5c60:	mov	x0, x21
    5c64:	add	x1, x22, #0x1
    5c68:	bl	3ca0 <_PyBytes_Resize@plt>
    5c6c:	tbnz	w0, #31, 5cc4 <PyInit__elementtree@@Base+0x19a0>
    5c70:	ldr	x8, [x21]
    5c74:	ldrb	w9, [x20, #32]
    5c78:	add	x8, x8, x22
    5c7c:	strb	w9, [x8, #32]
    5c80:	b	5cb4 <PyInit__elementtree@@Base+0x1990>
    5c84:	mov	w0, #0x2                   	// #2
    5c88:	bl	3c50 <PyList_New@plt>
    5c8c:	cbz	x0, 5cc4 <PyInit__elementtree@@Base+0x19a0>
    5c90:	ldr	x8, [x21]
    5c94:	ldr	x9, [x0, #24]
    5c98:	str	x8, [x9]
    5c9c:	ldr	x8, [x20]
    5ca0:	add	x8, x8, #0x1
    5ca4:	str	x8, [x20]
    5ca8:	ldr	x8, [x0, #24]
    5cac:	str	x20, [x8, #8]
    5cb0:	str	x0, [x21]
    5cb4:	ldr	x8, [x19]
    5cb8:	add	x8, x8, #0x1
    5cbc:	str	x8, [x19]
    5cc0:	b	5cc8 <PyInit__elementtree@@Base+0x19a4>
    5cc4:	mov	x19, xzr
    5cc8:	mov	x0, x19
    5ccc:	ldp	x20, x19, [sp, #32]
    5cd0:	ldp	x22, x21, [sp, #16]
    5cd4:	ldp	x29, x30, [sp], #48
    5cd8:	ret
    5cdc:	stp	x29, x30, [sp, #-64]!
    5ce0:	str	x23, [sp, #16]
    5ce4:	stp	x22, x21, [sp, #32]
    5ce8:	stp	x20, x19, [sp, #48]
    5cec:	mov	x29, sp
    5cf0:	mov	x20, x0
    5cf4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    5cf8:	add	x0, x0, #0xd40
    5cfc:	mov	x22, x2
    5d00:	mov	x19, x1
    5d04:	bl	3fc0 <PyState_FindModule@plt>
    5d08:	bl	3e10 <PyModule_GetState@plt>
    5d0c:	mov	x1, x20
    5d10:	ldr	x8, [x1, #48]!
    5d14:	mov	x21, x0
    5d18:	cbz	x8, 5d54 <PyInit__elementtree@@Base+0x1a30>
    5d1c:	ldr	x0, [x20, #40]
    5d20:	cbz	x0, 5d3c <PyInit__elementtree@@Base+0x1a18>
    5d24:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    5d28:	add	x2, x0, #0x20
    5d2c:	add	x3, x3, #0xae8
    5d30:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    5d34:	tbz	w0, #31, 5d54 <PyInit__elementtree@@Base+0x1a30>
    5d38:	b	6070 <PyInit__elementtree@@Base+0x1d4c>
    5d3c:	ldr	x0, [x20, #32]
    5d40:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    5d44:	add	x3, x3, #0xad0
    5d48:	add	x2, x0, #0x18
    5d4c:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    5d50:	tbnz	w0, #31, 6070 <PyInit__elementtree@@Base+0x1d4c>
    5d54:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    5d58:	ldr	x0, [x20, #72]
    5d5c:	ldr	x23, [x23, #3976]
    5d60:	cbz	x0, 5d80 <PyInit__elementtree@@Base+0x1a5c>
    5d64:	cmp	x22, x23
    5d68:	b.eq	5e14 <PyInit__elementtree@@Base+0x1af0>  // b.none
    5d6c:	mov	x1, x19
    5d70:	mov	x2, x22
    5d74:	mov	x3, xzr
    5d78:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    5d7c:	b	5d8c <PyInit__elementtree@@Base+0x1a68>
    5d80:	mov	x0, x19
    5d84:	mov	x1, x22
    5d88:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    5d8c:	mov	x19, x0
    5d90:	cbz	x19, 6074 <PyInit__elementtree@@Base+0x1d50>
    5d94:	ldr	x0, [x20, #40]
    5d98:	ldr	x22, [x20, #24]
    5d9c:	cbz	x0, 5db4 <PyInit__elementtree@@Base+0x1a90>
    5da0:	str	xzr, [x20, #40]
    5da4:	ldr	x8, [x0]
    5da8:	subs	x8, x8, #0x1
    5dac:	str	x8, [x0]
    5db0:	b.eq	5e54 <PyInit__elementtree@@Base+0x1b30>  // b.none
    5db4:	cmp	x22, x23
    5db8:	b.eq	5e60 <PyInit__elementtree@@Base+0x1b3c>  // b.none
    5dbc:	ldr	x9, [x22, #8]
    5dc0:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    5dc4:	add	x8, x8, #0xe8
    5dc8:	cmp	x9, x8
    5dcc:	b.eq	5e7c <PyInit__elementtree@@Base+0x1b58>  // b.none
    5dd0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    5dd4:	add	x1, x1, #0xb00
    5dd8:	mov	x0, x22
    5ddc:	mov	x2, x19
    5de0:	mov	x3, xzr
    5de4:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    5de8:	cbz	x0, 6058 <PyInit__elementtree@@Base+0x1d34>
    5dec:	ldr	x8, [x0]
    5df0:	subs	x8, x8, #0x1
    5df4:	str	x8, [x0]
    5df8:	b.ne	5ed4 <PyInit__elementtree@@Base+0x1bb0>  // b.any
    5dfc:	bl	3d70 <_Py_Dealloc@plt>
    5e00:	ldp	x0, x1, [x20, #56]
    5e04:	ldr	x8, [x0, #16]
    5e08:	cmp	x1, x8
    5e0c:	b.lt	5ee4 <PyInit__elementtree@@Base+0x1bc0>  // b.tstop
    5e10:	b	5f20 <PyInit__elementtree@@Base+0x1bfc>
    5e14:	bl	4080 <PyDict_New@plt>
    5e18:	cbz	x0, 6070 <PyInit__elementtree@@Base+0x1d4c>
    5e1c:	mov	x22, x0
    5e20:	ldr	x0, [x20, #72]
    5e24:	mov	x1, x19
    5e28:	mov	x2, x22
    5e2c:	mov	x3, xzr
    5e30:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    5e34:	ldr	x8, [x22]
    5e38:	mov	x19, x0
    5e3c:	subs	x8, x8, #0x1
    5e40:	str	x8, [x22]
    5e44:	b.ne	5d90 <PyInit__elementtree@@Base+0x1a6c>  // b.any
    5e48:	mov	x0, x22
    5e4c:	bl	3d70 <_Py_Dealloc@plt>
    5e50:	b	5d90 <PyInit__elementtree@@Base+0x1a6c>
    5e54:	bl	3d70 <_Py_Dealloc@plt>
    5e58:	cmp	x22, x23
    5e5c:	b.ne	5dbc <PyInit__elementtree@@Base+0x1a98>  // b.any
    5e60:	ldr	x8, [x20, #16]
    5e64:	cbz	x8, 5f00 <PyInit__elementtree@@Base+0x1bdc>
    5e68:	ldr	x0, [x21]
    5e6c:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    5e70:	add	x1, x1, #0xf13
    5e74:	bl	3de0 <PyErr_SetString@plt>
    5e78:	b	6058 <PyInit__elementtree@@Base+0x1d34>
    5e7c:	ldr	x0, [x19, #8]
    5e80:	cmp	x0, x8
    5e84:	b.eq	5e98 <PyInit__elementtree@@Base+0x1b74>  // b.none
    5e88:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    5e8c:	add	x1, x1, #0xe8
    5e90:	bl	4160 <PyType_IsSubtype@plt>
    5e94:	cbz	w0, 6038 <PyInit__elementtree@@Base+0x1d14>
    5e98:	mov	w1, #0x1                   	// #1
    5e9c:	mov	x0, x22
    5ea0:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    5ea4:	tbnz	w0, #31, 6058 <PyInit__elementtree@@Base+0x1d34>
    5ea8:	ldr	x8, [x19]
    5eac:	add	x8, x8, #0x1
    5eb0:	str	x8, [x19]
    5eb4:	ldr	x8, [x22, #40]
    5eb8:	ldr	x9, [x8, #24]
    5ebc:	ldr	x8, [x8, #8]
    5ec0:	str	x19, [x9, x8, lsl #3]
    5ec4:	ldr	x8, [x22, #40]
    5ec8:	ldr	x9, [x8, #8]
    5ecc:	add	x9, x9, #0x1
    5ed0:	str	x9, [x8, #8]
    5ed4:	ldp	x0, x1, [x20, #56]
    5ed8:	ldr	x8, [x0, #16]
    5edc:	cmp	x1, x8
    5ee0:	b.ge	5f20 <PyInit__elementtree@@Base+0x1bfc>  // b.tcont
    5ee4:	mov	x2, x22
    5ee8:	bl	3fb0 <PyList_SetItem@plt>
    5eec:	tbnz	w0, #31, 6058 <PyInit__elementtree@@Base+0x1d34>
    5ef0:	ldr	x8, [x22]
    5ef4:	add	x8, x8, #0x1
    5ef8:	str	x8, [x22]
    5efc:	b	5f2c <PyInit__elementtree@@Base+0x1c08>
    5f00:	ldr	x8, [x19]
    5f04:	add	x8, x8, #0x1
    5f08:	str	x8, [x19]
    5f0c:	str	x19, [x20, #16]
    5f10:	ldp	x0, x1, [x20, #56]
    5f14:	ldr	x8, [x0, #16]
    5f18:	cmp	x1, x8
    5f1c:	b.lt	5ee4 <PyInit__elementtree@@Base+0x1bc0>  // b.tstop
    5f20:	mov	x1, x22
    5f24:	bl	3f00 <PyList_Append@plt>
    5f28:	tbnz	w0, #31, 6058 <PyInit__elementtree@@Base+0x1d34>
    5f2c:	ldr	x8, [x20, #64]
    5f30:	add	x8, x8, #0x1
    5f34:	str	x8, [x20, #64]
    5f38:	ldr	x8, [x19]
    5f3c:	add	x8, x8, #0x1
    5f40:	str	x8, [x19]
    5f44:	ldr	x0, [x20, #24]
    5f48:	str	x19, [x20, #24]
    5f4c:	ldr	x8, [x0]
    5f50:	subs	x8, x8, #0x1
    5f54:	str	x8, [x0]
    5f58:	b.ne	5f60 <PyInit__elementtree@@Base+0x1c3c>  // b.any
    5f5c:	bl	3d70 <_Py_Dealloc@plt>
    5f60:	ldr	x8, [x19]
    5f64:	add	x8, x8, #0x1
    5f68:	str	x8, [x19]
    5f6c:	ldr	x0, [x20, #32]
    5f70:	str	x19, [x20, #32]
    5f74:	ldr	x8, [x0]
    5f78:	subs	x8, x8, #0x1
    5f7c:	str	x8, [x0]
    5f80:	b.ne	5f88 <PyInit__elementtree@@Base+0x1c64>  // b.any
    5f84:	bl	3d70 <_Py_Dealloc@plt>
    5f88:	ldr	x1, [x20, #104]
    5f8c:	cbz	x1, 6074 <PyInit__elementtree@@Base+0x1d50>
    5f90:	mov	w0, #0x2                   	// #2
    5f94:	mov	x2, x19
    5f98:	bl	4210 <PyTuple_Pack@plt>
    5f9c:	str	x0, [x29, #24]
    5fa0:	cbz	x0, 6058 <PyInit__elementtree@@Base+0x1d34>
    5fa4:	ldr	x20, [x20, #96]
    5fa8:	ldr	x8, [x20, #8]
    5fac:	ldrb	w9, [x8, #169]
    5fb0:	tbz	w9, #3, 5fe8 <PyInit__elementtree@@Base+0x1cc4>
    5fb4:	ldr	x8, [x8, #56]
    5fb8:	ldr	x8, [x20, x8]
    5fbc:	cbz	x8, 5fe8 <PyInit__elementtree@@Base+0x1cc4>
    5fc0:	add	x1, x29, #0x18
    5fc4:	mov	w2, #0x1                   	// #1
    5fc8:	mov	x0, x20
    5fcc:	mov	x3, xzr
    5fd0:	blr	x8
    5fd4:	mov	x1, x0
    5fd8:	mov	x0, x20
    5fdc:	mov	x2, xzr
    5fe0:	bl	4020 <_Py_CheckFunctionResult@plt>
    5fe4:	b	5ffc <PyInit__elementtree@@Base+0x1cd8>
    5fe8:	add	x1, x29, #0x18
    5fec:	mov	w2, #0x1                   	// #1
    5ff0:	mov	x0, x20
    5ff4:	mov	x3, xzr
    5ff8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    5ffc:	mov	x20, x0
    6000:	ldr	x0, [x29, #24]
    6004:	ldr	x8, [x0]
    6008:	subs	x8, x8, #0x1
    600c:	str	x8, [x0]
    6010:	b.ne	6018 <PyInit__elementtree@@Base+0x1cf4>  // b.any
    6014:	bl	3d70 <_Py_Dealloc@plt>
    6018:	cbz	x20, 6058 <PyInit__elementtree@@Base+0x1d34>
    601c:	ldr	x8, [x20]
    6020:	subs	x8, x8, #0x1
    6024:	str	x8, [x20]
    6028:	b.ne	6074 <PyInit__elementtree@@Base+0x1d50>  // b.any
    602c:	mov	x0, x20
    6030:	bl	3d70 <_Py_Dealloc@plt>
    6034:	b	6074 <PyInit__elementtree@@Base+0x1d50>
    6038:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    603c:	ldr	x8, [x19, #8]
    6040:	ldr	x9, [x9, #3944]
    6044:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    6048:	add	x1, x1, #0xe3f
    604c:	ldr	x2, [x8, #24]
    6050:	ldr	x0, [x9]
    6054:	bl	4180 <PyErr_Format@plt>
    6058:	ldr	x8, [x19]
    605c:	subs	x8, x8, #0x1
    6060:	str	x8, [x19]
    6064:	b.ne	6070 <PyInit__elementtree@@Base+0x1d4c>  // b.any
    6068:	mov	x0, x19
    606c:	bl	3d70 <_Py_Dealloc@plt>
    6070:	mov	x19, xzr
    6074:	mov	x0, x19
    6078:	ldp	x20, x19, [sp, #48]
    607c:	ldp	x22, x21, [sp, #32]
    6080:	ldr	x23, [sp, #16]
    6084:	ldp	x29, x30, [sp], #64
    6088:	ret
    608c:	stp	x29, x30, [sp, #-64]!
    6090:	stp	x24, x23, [sp, #16]
    6094:	stp	x22, x21, [sp, #32]
    6098:	stp	x20, x19, [sp, #48]
    609c:	mov	x29, sp
    60a0:	ldr	x8, [x0, #8]
    60a4:	adrp	x9, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    60a8:	add	x9, x9, #0xe8
    60ac:	mov	x20, x3
    60b0:	mov	x21, x0
    60b4:	cmp	x8, x9
    60b8:	mov	x19, x1
    60bc:	b.eq	6158 <PyInit__elementtree@@Base+0x1e34>  // b.none
    60c0:	mov	x0, x21
    60c4:	mov	x1, x20
    60c8:	bl	40f0 <_PyObject_GetAttrId@plt>
    60cc:	cbz	x0, 629c <PyInit__elementtree@@Base+0x1f78>
    60d0:	ldr	x23, [x19]
    60d4:	mov	x22, x0
    60d8:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    60dc:	add	x0, x0, #0x79
    60e0:	mov	x1, xzr
    60e4:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    60e8:	cbz	x0, 61dc <PyInit__elementtree@@Base+0x1eb8>
    60ec:	mov	x1, x23
    60f0:	mov	x24, x0
    60f4:	bl	3d20 <PyUnicode_Join@plt>
    60f8:	ldr	x8, [x24]
    60fc:	mov	x23, x0
    6100:	subs	x8, x8, #0x1
    6104:	str	x8, [x24]
    6108:	b.eq	61d0 <PyInit__elementtree@@Base+0x1eac>  // b.none
    610c:	cbz	x23, 61dc <PyInit__elementtree@@Base+0x1eb8>
    6110:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6114:	ldr	x8, [x8, #3976]
    6118:	cmp	x22, x8
    611c:	b.eq	61fc <PyInit__elementtree@@Base+0x1ed8>  // b.none
    6120:	mov	x0, x22
    6124:	mov	x1, x23
    6128:	bl	3cf0 <PyNumber_Add@plt>
    612c:	ldr	x8, [x23]
    6130:	mov	x24, x0
    6134:	subs	x8, x8, #0x1
    6138:	str	x8, [x23]
    613c:	b.eq	6220 <PyInit__elementtree@@Base+0x1efc>  // b.none
    6140:	ldr	x8, [x22]
    6144:	subs	x8, x8, #0x1
    6148:	str	x8, [x22]
    614c:	b.eq	6238 <PyInit__elementtree@@Base+0x1f14>  // b.none
    6150:	cbnz	x24, 6244 <PyInit__elementtree@@Base+0x1f20>
    6154:	b	629c <PyInit__elementtree@@Base+0x1f78>
    6158:	ldr	x9, [x2]
    615c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6160:	ldr	x8, [x8, #3976]
    6164:	and	x0, x9, #0xfffffffffffffffe
    6168:	cmp	x0, x8
    616c:	b.eq	618c <PyInit__elementtree@@Base+0x1e68>  // b.none
    6170:	tbz	w9, #0, 60c0 <PyInit__elementtree@@Base+0x1d9c>
    6174:	ldr	x3, [x19]
    6178:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    617c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    6180:	bl	3d30 <PyList_SetSlice@plt>
    6184:	tbz	w0, #31, 6274 <PyInit__elementtree@@Base+0x1f50>
    6188:	b	629c <PyInit__elementtree@@Base+0x1f78>
    618c:	ldr	x9, [x19]
    6190:	adrp	x11, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6194:	ldr	x10, [x9, #8]
    6198:	ldr	x11, [x11, #4064]
    619c:	and	x9, x9, #0xfffffffffffffffe
    61a0:	cmp	x10, x11
    61a4:	cset	w10, eq  // eq = none
    61a8:	orr	x9, x9, x10
    61ac:	str	x9, [x2]
    61b0:	str	xzr, [x19]
    61b4:	ldr	x9, [x8]
    61b8:	subs	x9, x9, #0x1
    61bc:	str	x9, [x8]
    61c0:	b.ne	6294 <PyInit__elementtree@@Base+0x1f70>  // b.any
    61c4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    61c8:	ldr	x0, [x0, #3976]
    61cc:	b	6290 <PyInit__elementtree@@Base+0x1f6c>
    61d0:	mov	x0, x24
    61d4:	bl	3d70 <_Py_Dealloc@plt>
    61d8:	cbnz	x23, 6110 <PyInit__elementtree@@Base+0x1dec>
    61dc:	ldr	x8, [x22]
    61e0:	subs	x8, x8, #0x1
    61e4:	str	x8, [x22]
    61e8:	b.ne	629c <PyInit__elementtree@@Base+0x1f78>  // b.any
    61ec:	mov	x0, x22
    61f0:	bl	3d70 <_Py_Dealloc@plt>
    61f4:	mov	w0, #0xffffffff            	// #-1
    61f8:	b	62a0 <PyInit__elementtree@@Base+0x1f7c>
    61fc:	ldr	x9, [x8]
    6200:	subs	x9, x9, #0x1
    6204:	str	x9, [x8]
    6208:	b.ne	6218 <PyInit__elementtree@@Base+0x1ef4>  // b.any
    620c:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6210:	ldr	x0, [x0, #3976]
    6214:	bl	3d70 <_Py_Dealloc@plt>
    6218:	mov	x24, x23
    621c:	b	6244 <PyInit__elementtree@@Base+0x1f20>
    6220:	mov	x0, x23
    6224:	bl	3d70 <_Py_Dealloc@plt>
    6228:	ldr	x8, [x22]
    622c:	subs	x8, x8, #0x1
    6230:	str	x8, [x22]
    6234:	b.ne	6150 <PyInit__elementtree@@Base+0x1e2c>  // b.any
    6238:	mov	x0, x22
    623c:	bl	3d70 <_Py_Dealloc@plt>
    6240:	cbz	x24, 629c <PyInit__elementtree@@Base+0x1f78>
    6244:	mov	x0, x21
    6248:	mov	x1, x20
    624c:	mov	x2, x24
    6250:	bl	4000 <_PyObject_SetAttrId@plt>
    6254:	ldr	x8, [x24]
    6258:	mov	w20, w0
    625c:	subs	x8, x8, #0x1
    6260:	str	x8, [x24]
    6264:	b.ne	6270 <PyInit__elementtree@@Base+0x1f4c>  // b.any
    6268:	mov	x0, x24
    626c:	bl	3d70 <_Py_Dealloc@plt>
    6270:	tbnz	w20, #31, 629c <PyInit__elementtree@@Base+0x1f78>
    6274:	ldr	x0, [x19]
    6278:	cbz	x0, 62a0 <PyInit__elementtree@@Base+0x1f7c>
    627c:	str	xzr, [x19]
    6280:	ldr	x8, [x0]
    6284:	subs	x8, x8, #0x1
    6288:	str	x8, [x0]
    628c:	b.ne	6294 <PyInit__elementtree@@Base+0x1f70>  // b.any
    6290:	bl	3d70 <_Py_Dealloc@plt>
    6294:	mov	w0, wzr
    6298:	b	62a0 <PyInit__elementtree@@Base+0x1f7c>
    629c:	mov	w0, #0xffffffff            	// #-1
    62a0:	ldp	x20, x19, [sp, #48]
    62a4:	ldp	x22, x21, [sp, #32]
    62a8:	ldp	x24, x23, [sp, #16]
    62ac:	ldp	x29, x30, [sp], #64
    62b0:	ret
    62b4:	sub	sp, sp, #0x30
    62b8:	stp	x29, x30, [sp, #16]
    62bc:	stp	x20, x19, [sp, #32]
    62c0:	add	x29, sp, #0x10
    62c4:	mov	x1, x0
    62c8:	ldr	x8, [x1, #48]!
    62cc:	mov	x19, x0
    62d0:	cbz	x8, 630c <PyInit__elementtree@@Base+0x1fe8>
    62d4:	ldr	x0, [x19, #40]
    62d8:	cbz	x0, 62f4 <PyInit__elementtree@@Base+0x1fd0>
    62dc:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    62e0:	add	x2, x0, #0x20
    62e4:	add	x3, x3, #0xae8
    62e8:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    62ec:	tbz	w0, #31, 630c <PyInit__elementtree@@Base+0x1fe8>
    62f0:	b	6480 <PyInit__elementtree@@Base+0x215c>
    62f4:	ldr	x0, [x19, #32]
    62f8:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    62fc:	add	x3, x3, #0xad0
    6300:	add	x2, x0, #0x18
    6304:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    6308:	tbnz	w0, #31, 6480 <PyInit__elementtree@@Base+0x215c>
    630c:	ldr	x8, [x19, #64]
    6310:	cbz	x8, 638c <PyInit__elementtree@@Base+0x2068>
    6314:	ldp	x9, x20, [x19, #24]
    6318:	str	x9, [x19, #32]
    631c:	ldr	x10, [x9]
    6320:	add	x10, x10, #0x1
    6324:	str	x10, [x9]
    6328:	ldr	x0, [x19, #40]
    632c:	str	x9, [x19, #40]
    6330:	cbz	x0, 634c <PyInit__elementtree@@Base+0x2028>
    6334:	ldr	x9, [x0]
    6338:	subs	x9, x9, #0x1
    633c:	str	x9, [x0]
    6340:	b.ne	634c <PyInit__elementtree@@Base+0x2028>  // b.any
    6344:	bl	3d70 <_Py_Dealloc@plt>
    6348:	ldr	x8, [x19, #64]
    634c:	ldr	x9, [x19, #56]
    6350:	sub	x8, x8, #0x1
    6354:	str	x8, [x19, #64]
    6358:	ldr	x9, [x9, #24]
    635c:	ldr	x8, [x9, x8, lsl #3]
    6360:	str	x8, [x19, #24]
    6364:	ldr	x9, [x8]
    6368:	add	x9, x9, #0x1
    636c:	str	x9, [x8]
    6370:	ldr	x8, [x20]
    6374:	subs	x8, x8, #0x1
    6378:	str	x8, [x20]
    637c:	b.eq	63a8 <PyInit__elementtree@@Base+0x2084>  // b.none
    6380:	ldr	x1, [x19, #112]
    6384:	cbnz	x1, 63b8 <PyInit__elementtree@@Base+0x2094>
    6388:	b	6458 <PyInit__elementtree@@Base+0x2134>
    638c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6390:	ldr	x8, [x8, #3984]
    6394:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    6398:	add	x1, x1, #0xf3e
    639c:	ldr	x0, [x8]
    63a0:	bl	3de0 <PyErr_SetString@plt>
    63a4:	b	6480 <PyInit__elementtree@@Base+0x215c>
    63a8:	mov	x0, x20
    63ac:	bl	3d70 <_Py_Dealloc@plt>
    63b0:	ldr	x1, [x19, #112]
    63b4:	cbz	x1, 6458 <PyInit__elementtree@@Base+0x2134>
    63b8:	ldr	x2, [x19, #32]
    63bc:	mov	w0, #0x2                   	// #2
    63c0:	bl	4210 <PyTuple_Pack@plt>
    63c4:	str	x0, [sp, #8]
    63c8:	cbz	x0, 6480 <PyInit__elementtree@@Base+0x215c>
    63cc:	ldr	x20, [x19, #96]
    63d0:	ldr	x8, [x20, #8]
    63d4:	ldrb	w9, [x8, #169]
    63d8:	tbz	w9, #3, 6410 <PyInit__elementtree@@Base+0x20ec>
    63dc:	ldr	x8, [x8, #56]
    63e0:	ldr	x8, [x20, x8]
    63e4:	cbz	x8, 6410 <PyInit__elementtree@@Base+0x20ec>
    63e8:	add	x1, sp, #0x8
    63ec:	mov	w2, #0x1                   	// #1
    63f0:	mov	x0, x20
    63f4:	mov	x3, xzr
    63f8:	blr	x8
    63fc:	mov	x1, x0
    6400:	mov	x0, x20
    6404:	mov	x2, xzr
    6408:	bl	4020 <_Py_CheckFunctionResult@plt>
    640c:	b	6424 <PyInit__elementtree@@Base+0x2100>
    6410:	add	x1, sp, #0x8
    6414:	mov	w2, #0x1                   	// #1
    6418:	mov	x0, x20
    641c:	mov	x3, xzr
    6420:	bl	41d0 <_PyObject_MakeTpCall@plt>
    6424:	mov	x20, x0
    6428:	ldr	x0, [sp, #8]
    642c:	ldr	x8, [x0]
    6430:	subs	x8, x8, #0x1
    6434:	str	x8, [x0]
    6438:	b.eq	6478 <PyInit__elementtree@@Base+0x2154>  // b.none
    643c:	cbz	x20, 6480 <PyInit__elementtree@@Base+0x215c>
    6440:	ldr	x8, [x20]
    6444:	subs	x8, x8, #0x1
    6448:	str	x8, [x20]
    644c:	b.ne	6458 <PyInit__elementtree@@Base+0x2134>  // b.any
    6450:	mov	x0, x20
    6454:	bl	3d70 <_Py_Dealloc@plt>
    6458:	ldr	x0, [x19, #32]
    645c:	ldr	x8, [x0]
    6460:	add	x8, x8, #0x1
    6464:	str	x8, [x0]
    6468:	ldp	x20, x19, [sp, #32]
    646c:	ldp	x29, x30, [sp, #16]
    6470:	add	sp, sp, #0x30
    6474:	ret
    6478:	bl	3d70 <_Py_Dealloc@plt>
    647c:	cbnz	x20, 6440 <PyInit__elementtree@@Base+0x211c>
    6480:	mov	x0, xzr
    6484:	ldp	x20, x19, [sp, #32]
    6488:	ldp	x29, x30, [sp, #16]
    648c:	add	sp, sp, #0x30
    6490:	ret
    6494:	sub	sp, sp, #0x40
    6498:	stp	x29, x30, [sp, #16]
    649c:	str	x21, [sp, #32]
    64a0:	stp	x20, x19, [sp, #48]
    64a4:	add	x29, sp, #0x10
    64a8:	mov	x19, x1
    64ac:	str	x1, [sp, #8]
    64b0:	mov	x1, x0
    64b4:	ldr	x8, [x1, #48]!
    64b8:	mov	x20, x0
    64bc:	cbz	x8, 64f8 <PyInit__elementtree@@Base+0x21d4>
    64c0:	ldr	x0, [x20, #40]
    64c4:	cbz	x0, 64e0 <PyInit__elementtree@@Base+0x21bc>
    64c8:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    64cc:	add	x2, x0, #0x20
    64d0:	add	x3, x3, #0xae8
    64d4:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    64d8:	tbz	w0, #31, 64f8 <PyInit__elementtree@@Base+0x21d4>
    64dc:	b	674c <PyInit__elementtree@@Base+0x2428>
    64e0:	ldr	x0, [x20, #32]
    64e4:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    64e8:	add	x3, x3, #0xad0
    64ec:	add	x2, x0, #0x18
    64f0:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    64f4:	tbnz	w0, #31, 674c <PyInit__elementtree@@Base+0x2428>
    64f8:	ldr	x21, [x20, #80]
    64fc:	cbz	x21, 65c8 <PyInit__elementtree@@Base+0x22a4>
    6500:	ldr	x8, [x21, #8]
    6504:	ldrb	w9, [x8, #169]
    6508:	tbz	w9, #3, 6548 <PyInit__elementtree@@Base+0x2224>
    650c:	ldr	x8, [x8, #56]
    6510:	ldr	x8, [x21, x8]
    6514:	cbz	x8, 6548 <PyInit__elementtree@@Base+0x2224>
    6518:	add	x1, sp, #0x8
    651c:	mov	w2, #0x1                   	// #1
    6520:	mov	x0, x21
    6524:	mov	x3, xzr
    6528:	blr	x8
    652c:	mov	x1, x0
    6530:	mov	x0, x21
    6534:	mov	x2, xzr
    6538:	bl	4020 <_Py_CheckFunctionResult@plt>
    653c:	mov	x19, x0
    6540:	cbnz	x0, 6564 <PyInit__elementtree@@Base+0x2240>
    6544:	b	6750 <PyInit__elementtree@@Base+0x242c>
    6548:	add	x1, sp, #0x8
    654c:	mov	w2, #0x1                   	// #1
    6550:	mov	x0, x21
    6554:	mov	x3, xzr
    6558:	bl	41d0 <_PyObject_MakeTpCall@plt>
    655c:	mov	x19, x0
    6560:	cbz	x0, 6750 <PyInit__elementtree@@Base+0x242c>
    6564:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6568:	ldr	x21, [x20, #24]
    656c:	ldr	x8, [x8, #3976]
    6570:	cmp	x21, x8
    6574:	b.eq	65d4 <PyInit__elementtree@@Base+0x22b0>  // b.none
    6578:	ldrb	w8, [x20, #152]
    657c:	cbz	w8, 65d4 <PyInit__elementtree@@Base+0x22b0>
    6580:	ldr	x9, [x21, #8]
    6584:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    6588:	add	x8, x8, #0xe8
    658c:	cmp	x9, x8
    6590:	b.eq	668c <PyInit__elementtree@@Base+0x2368>  // b.none
    6594:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    6598:	add	x1, x1, #0xb00
    659c:	mov	x0, x21
    65a0:	mov	x2, x19
    65a4:	mov	x3, xzr
    65a8:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    65ac:	cbz	x0, 6734 <PyInit__elementtree@@Base+0x2410>
    65b0:	ldr	x8, [x0]
    65b4:	subs	x8, x8, #0x1
    65b8:	str	x8, [x0]
    65bc:	b.ne	66e4 <PyInit__elementtree@@Base+0x23c0>  // b.any
    65c0:	bl	3d70 <_Py_Dealloc@plt>
    65c4:	b	66e4 <PyInit__elementtree@@Base+0x23c0>
    65c8:	ldr	x8, [x19]
    65cc:	add	x8, x8, #0x1
    65d0:	str	x8, [x19]
    65d4:	ldr	x8, [x20, #96]
    65d8:	cbz	x8, 6750 <PyInit__elementtree@@Base+0x242c>
    65dc:	ldr	x1, [x20, #136]
    65e0:	cbz	x1, 6750 <PyInit__elementtree@@Base+0x242c>
    65e4:	mov	w0, #0x2                   	// #2
    65e8:	mov	x2, x19
    65ec:	bl	4210 <PyTuple_Pack@plt>
    65f0:	str	x0, [x29, #24]
    65f4:	cbz	x0, 6734 <PyInit__elementtree@@Base+0x2410>
    65f8:	ldr	x20, [x20, #96]
    65fc:	ldr	x8, [x20, #8]
    6600:	ldrb	w9, [x8, #169]
    6604:	tbz	w9, #3, 663c <PyInit__elementtree@@Base+0x2318>
    6608:	ldr	x8, [x8, #56]
    660c:	ldr	x8, [x20, x8]
    6610:	cbz	x8, 663c <PyInit__elementtree@@Base+0x2318>
    6614:	add	x1, x29, #0x18
    6618:	mov	w2, #0x1                   	// #1
    661c:	mov	x0, x20
    6620:	mov	x3, xzr
    6624:	blr	x8
    6628:	mov	x1, x0
    662c:	mov	x0, x20
    6630:	mov	x2, xzr
    6634:	bl	4020 <_Py_CheckFunctionResult@plt>
    6638:	b	6650 <PyInit__elementtree@@Base+0x232c>
    663c:	add	x1, x29, #0x18
    6640:	mov	w2, #0x1                   	// #1
    6644:	mov	x0, x20
    6648:	mov	x3, xzr
    664c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    6650:	mov	x20, x0
    6654:	ldr	x0, [x29, #24]
    6658:	ldr	x8, [x0]
    665c:	subs	x8, x8, #0x1
    6660:	str	x8, [x0]
    6664:	b.ne	666c <PyInit__elementtree@@Base+0x2348>  // b.any
    6668:	bl	3d70 <_Py_Dealloc@plt>
    666c:	cbz	x20, 6734 <PyInit__elementtree@@Base+0x2410>
    6670:	ldr	x8, [x20]
    6674:	subs	x8, x8, #0x1
    6678:	str	x8, [x20]
    667c:	b.ne	6750 <PyInit__elementtree@@Base+0x242c>  // b.any
    6680:	mov	x0, x20
    6684:	bl	3d70 <_Py_Dealloc@plt>
    6688:	b	6750 <PyInit__elementtree@@Base+0x242c>
    668c:	ldr	x0, [x19, #8]
    6690:	cmp	x0, x8
    6694:	b.eq	66a8 <PyInit__elementtree@@Base+0x2384>  // b.none
    6698:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    669c:	add	x1, x1, #0xe8
    66a0:	bl	4160 <PyType_IsSubtype@plt>
    66a4:	cbz	w0, 6714 <PyInit__elementtree@@Base+0x23f0>
    66a8:	mov	w1, #0x1                   	// #1
    66ac:	mov	x0, x21
    66b0:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    66b4:	tbnz	w0, #31, 6734 <PyInit__elementtree@@Base+0x2410>
    66b8:	ldr	x8, [x19]
    66bc:	add	x8, x8, #0x1
    66c0:	str	x8, [x19]
    66c4:	ldr	x8, [x21, #40]
    66c8:	ldr	x9, [x8, #24]
    66cc:	ldr	x8, [x8, #8]
    66d0:	str	x19, [x9, x8, lsl #3]
    66d4:	ldr	x8, [x21, #40]
    66d8:	ldr	x9, [x8, #8]
    66dc:	add	x9, x9, #0x1
    66e0:	str	x9, [x8, #8]
    66e4:	ldr	x8, [x19]
    66e8:	add	x8, x8, #0x1
    66ec:	str	x8, [x19]
    66f0:	ldr	x0, [x20, #40]
    66f4:	str	x19, [x20, #40]
    66f8:	cbz	x0, 65d4 <PyInit__elementtree@@Base+0x22b0>
    66fc:	ldr	x8, [x0]
    6700:	subs	x8, x8, #0x1
    6704:	str	x8, [x0]
    6708:	b.ne	65d4 <PyInit__elementtree@@Base+0x22b0>  // b.any
    670c:	bl	3d70 <_Py_Dealloc@plt>
    6710:	b	65d4 <PyInit__elementtree@@Base+0x22b0>
    6714:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6718:	ldr	x8, [x19, #8]
    671c:	ldr	x9, [x9, #3944]
    6720:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    6724:	add	x1, x1, #0xe3f
    6728:	ldr	x2, [x8, #24]
    672c:	ldr	x0, [x9]
    6730:	bl	4180 <PyErr_Format@plt>
    6734:	ldr	x8, [x19]
    6738:	subs	x8, x8, #0x1
    673c:	str	x8, [x19]
    6740:	b.ne	674c <PyInit__elementtree@@Base+0x2428>  // b.any
    6744:	mov	x0, x19
    6748:	bl	3d70 <_Py_Dealloc@plt>
    674c:	mov	x19, xzr
    6750:	mov	x0, x19
    6754:	ldp	x20, x19, [sp, #48]
    6758:	ldr	x21, [sp, #32]
    675c:	ldp	x29, x30, [sp, #16]
    6760:	add	sp, sp, #0x40
    6764:	ret
    6768:	sub	sp, sp, #0x50
    676c:	stp	x29, x30, [sp, #32]
    6770:	stp	x22, x21, [sp, #48]
    6774:	stp	x20, x19, [sp, #64]
    6778:	add	x29, sp, #0x20
    677c:	mov	x21, x1
    6780:	stp	x1, x2, [sp, #8]
    6784:	mov	x1, x0
    6788:	ldr	x8, [x1, #48]!
    678c:	mov	x19, x2
    6790:	mov	x20, x0
    6794:	cbz	x8, 67d0 <PyInit__elementtree@@Base+0x24ac>
    6798:	ldr	x0, [x20, #40]
    679c:	cbz	x0, 67b8 <PyInit__elementtree@@Base+0x2494>
    67a0:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    67a4:	add	x2, x0, #0x20
    67a8:	add	x3, x3, #0xae8
    67ac:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    67b0:	tbz	w0, #31, 67d0 <PyInit__elementtree@@Base+0x24ac>
    67b4:	b	6a30 <PyInit__elementtree@@Base+0x270c>
    67b8:	ldr	x0, [x20, #32]
    67bc:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    67c0:	add	x3, x3, #0xad0
    67c4:	add	x2, x0, #0x18
    67c8:	bl	608c <PyInit__elementtree@@Base+0x1d68>
    67cc:	tbnz	w0, #31, 6a30 <PyInit__elementtree@@Base+0x270c>
    67d0:	ldr	x22, [x20, #88]
    67d4:	cbz	x22, 68a0 <PyInit__elementtree@@Base+0x257c>
    67d8:	ldr	x8, [x22, #8]
    67dc:	ldrb	w9, [x8, #169]
    67e0:	tbz	w9, #3, 6820 <PyInit__elementtree@@Base+0x24fc>
    67e4:	ldr	x8, [x8, #56]
    67e8:	ldr	x8, [x22, x8]
    67ec:	cbz	x8, 6820 <PyInit__elementtree@@Base+0x24fc>
    67f0:	add	x1, sp, #0x8
    67f4:	mov	w2, #0x2                   	// #2
    67f8:	mov	x0, x22
    67fc:	mov	x3, xzr
    6800:	blr	x8
    6804:	mov	x1, x0
    6808:	mov	x0, x22
    680c:	mov	x2, xzr
    6810:	bl	4020 <_Py_CheckFunctionResult@plt>
    6814:	mov	x19, x0
    6818:	cbnz	x0, 683c <PyInit__elementtree@@Base+0x2518>
    681c:	b	6a34 <PyInit__elementtree@@Base+0x2710>
    6820:	add	x1, sp, #0x8
    6824:	mov	w2, #0x2                   	// #2
    6828:	mov	x0, x22
    682c:	mov	x3, xzr
    6830:	bl	41d0 <_PyObject_MakeTpCall@plt>
    6834:	mov	x19, x0
    6838:	cbz	x0, 6a34 <PyInit__elementtree@@Base+0x2710>
    683c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6840:	ldr	x21, [x20, #24]
    6844:	ldr	x8, [x8, #3976]
    6848:	cmp	x21, x8
    684c:	b.eq	68b8 <PyInit__elementtree@@Base+0x2594>  // b.none
    6850:	ldrb	w8, [x20, #153]
    6854:	cbz	w8, 68b8 <PyInit__elementtree@@Base+0x2594>
    6858:	ldr	x9, [x21, #8]
    685c:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    6860:	add	x8, x8, #0xe8
    6864:	cmp	x9, x8
    6868:	b.eq	6970 <PyInit__elementtree@@Base+0x264c>  // b.none
    686c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    6870:	add	x1, x1, #0xb00
    6874:	mov	x0, x21
    6878:	mov	x2, x19
    687c:	mov	x3, xzr
    6880:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    6884:	cbz	x0, 6a18 <PyInit__elementtree@@Base+0x26f4>
    6888:	ldr	x8, [x0]
    688c:	subs	x8, x8, #0x1
    6890:	str	x8, [x0]
    6894:	b.ne	69c8 <PyInit__elementtree@@Base+0x26a4>  // b.any
    6898:	bl	3d70 <_Py_Dealloc@plt>
    689c:	b	69c8 <PyInit__elementtree@@Base+0x26a4>
    68a0:	mov	w0, #0x2                   	// #2
    68a4:	mov	x1, x21
    68a8:	mov	x2, x19
    68ac:	bl	4210 <PyTuple_Pack@plt>
    68b0:	mov	x19, x0
    68b4:	cbz	x0, 6a34 <PyInit__elementtree@@Base+0x2710>
    68b8:	ldr	x8, [x20, #96]
    68bc:	cbz	x8, 6a34 <PyInit__elementtree@@Base+0x2710>
    68c0:	ldr	x1, [x20, #144]
    68c4:	cbz	x1, 6a34 <PyInit__elementtree@@Base+0x2710>
    68c8:	mov	w0, #0x2                   	// #2
    68cc:	mov	x2, x19
    68d0:	bl	4210 <PyTuple_Pack@plt>
    68d4:	stur	x0, [x29, #-8]
    68d8:	cbz	x0, 6a18 <PyInit__elementtree@@Base+0x26f4>
    68dc:	ldr	x20, [x20, #96]
    68e0:	ldr	x8, [x20, #8]
    68e4:	ldrb	w9, [x8, #169]
    68e8:	tbz	w9, #3, 6920 <PyInit__elementtree@@Base+0x25fc>
    68ec:	ldr	x8, [x8, #56]
    68f0:	ldr	x8, [x20, x8]
    68f4:	cbz	x8, 6920 <PyInit__elementtree@@Base+0x25fc>
    68f8:	sub	x1, x29, #0x8
    68fc:	mov	w2, #0x1                   	// #1
    6900:	mov	x0, x20
    6904:	mov	x3, xzr
    6908:	blr	x8
    690c:	mov	x1, x0
    6910:	mov	x0, x20
    6914:	mov	x2, xzr
    6918:	bl	4020 <_Py_CheckFunctionResult@plt>
    691c:	b	6934 <PyInit__elementtree@@Base+0x2610>
    6920:	sub	x1, x29, #0x8
    6924:	mov	w2, #0x1                   	// #1
    6928:	mov	x0, x20
    692c:	mov	x3, xzr
    6930:	bl	41d0 <_PyObject_MakeTpCall@plt>
    6934:	mov	x20, x0
    6938:	ldur	x0, [x29, #-8]
    693c:	ldr	x8, [x0]
    6940:	subs	x8, x8, #0x1
    6944:	str	x8, [x0]
    6948:	b.ne	6950 <PyInit__elementtree@@Base+0x262c>  // b.any
    694c:	bl	3d70 <_Py_Dealloc@plt>
    6950:	cbz	x20, 6a18 <PyInit__elementtree@@Base+0x26f4>
    6954:	ldr	x8, [x20]
    6958:	subs	x8, x8, #0x1
    695c:	str	x8, [x20]
    6960:	b.ne	6a34 <PyInit__elementtree@@Base+0x2710>  // b.any
    6964:	mov	x0, x20
    6968:	bl	3d70 <_Py_Dealloc@plt>
    696c:	b	6a34 <PyInit__elementtree@@Base+0x2710>
    6970:	ldr	x0, [x19, #8]
    6974:	cmp	x0, x8
    6978:	b.eq	698c <PyInit__elementtree@@Base+0x2668>  // b.none
    697c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    6980:	add	x1, x1, #0xe8
    6984:	bl	4160 <PyType_IsSubtype@plt>
    6988:	cbz	w0, 69f8 <PyInit__elementtree@@Base+0x26d4>
    698c:	mov	w1, #0x1                   	// #1
    6990:	mov	x0, x21
    6994:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    6998:	tbnz	w0, #31, 6a18 <PyInit__elementtree@@Base+0x26f4>
    699c:	ldr	x8, [x19]
    69a0:	add	x8, x8, #0x1
    69a4:	str	x8, [x19]
    69a8:	ldr	x8, [x21, #40]
    69ac:	ldr	x9, [x8, #24]
    69b0:	ldr	x8, [x8, #8]
    69b4:	str	x19, [x9, x8, lsl #3]
    69b8:	ldr	x8, [x21, #40]
    69bc:	ldr	x9, [x8, #8]
    69c0:	add	x9, x9, #0x1
    69c4:	str	x9, [x8, #8]
    69c8:	ldr	x8, [x19]
    69cc:	add	x8, x8, #0x1
    69d0:	str	x8, [x19]
    69d4:	ldr	x0, [x20, #40]
    69d8:	str	x19, [x20, #40]
    69dc:	cbz	x0, 68b8 <PyInit__elementtree@@Base+0x2594>
    69e0:	ldr	x8, [x0]
    69e4:	subs	x8, x8, #0x1
    69e8:	str	x8, [x0]
    69ec:	b.ne	68b8 <PyInit__elementtree@@Base+0x2594>  // b.any
    69f0:	bl	3d70 <_Py_Dealloc@plt>
    69f4:	b	68b8 <PyInit__elementtree@@Base+0x2594>
    69f8:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    69fc:	ldr	x8, [x19, #8]
    6a00:	ldr	x9, [x9, #3944]
    6a04:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    6a08:	add	x1, x1, #0xe3f
    6a0c:	ldr	x2, [x8, #24]
    6a10:	ldr	x0, [x9]
    6a14:	bl	4180 <PyErr_Format@plt>
    6a18:	ldr	x8, [x19]
    6a1c:	subs	x8, x8, #0x1
    6a20:	str	x8, [x19]
    6a24:	b.ne	6a30 <PyInit__elementtree@@Base+0x270c>  // b.any
    6a28:	mov	x0, x19
    6a2c:	bl	3d70 <_Py_Dealloc@plt>
    6a30:	mov	x19, xzr
    6a34:	mov	x0, x19
    6a38:	ldp	x20, x19, [sp, #64]
    6a3c:	ldp	x22, x21, [sp, #48]
    6a40:	ldp	x29, x30, [sp, #32]
    6a44:	add	sp, sp, #0x50
    6a48:	ret
    6a4c:	stp	x29, x30, [sp, #-32]!
    6a50:	stp	x20, x19, [sp, #16]
    6a54:	mov	x29, sp
    6a58:	mov	x19, x0
    6a5c:	bl	4220 <PyObject_GC_UnTrack@plt>
    6a60:	ldr	x8, [x19, #8]
    6a64:	adrp	x9, 6000 <PyInit__elementtree@@Base+0x1cdc>
    6a68:	add	x9, x9, #0xa4c
    6a6c:	ldr	x8, [x8, #48]
    6a70:	cmp	x8, x9
    6a74:	b.eq	6adc <PyInit__elementtree@@Base+0x27b8>  // b.none
    6a78:	mov	x20, xzr
    6a7c:	ldr	x8, [x19, #48]
    6a80:	cbz	x8, 6a8c <PyInit__elementtree@@Base+0x2768>
    6a84:	mov	x0, x19
    6a88:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    6a8c:	mov	x0, x19
    6a90:	bl	6ca0 <PyInit__elementtree@@Base+0x297c>
    6a94:	ldr	x8, [x19, #8]
    6a98:	mov	x0, x19
    6a9c:	ldr	x8, [x8, #320]
    6aa0:	blr	x8
    6aa4:	cbz	x20, 6ad0 <PyInit__elementtree@@Base+0x27ac>
    6aa8:	ldr	w8, [x20, #184]
    6aac:	sub	w8, w8, #0x1
    6ab0:	cmp	w8, #0x0
    6ab4:	str	w8, [x20, #184]
    6ab8:	b.gt	6ad0 <PyInit__elementtree@@Base+0x27ac>
    6abc:	ldr	x8, [x20, #192]
    6ac0:	cbz	x8, 6ad0 <PyInit__elementtree@@Base+0x27ac>
    6ac4:	ldp	x20, x19, [sp, #16]
    6ac8:	ldp	x29, x30, [sp], #32
    6acc:	b	41c0 <_PyTrash_thread_destroy_chain@plt>
    6ad0:	ldp	x20, x19, [sp, #16]
    6ad4:	ldp	x29, x30, [sp], #32
    6ad8:	ret
    6adc:	bl	3f50 <PyThreadState_Get@plt>
    6ae0:	ldr	w8, [x0, #184]
    6ae4:	cmp	w8, #0x32
    6ae8:	b.lt	6afc <PyInit__elementtree@@Base+0x27d8>  // b.tstop
    6aec:	mov	x0, x19
    6af0:	ldp	x20, x19, [sp, #16]
    6af4:	ldp	x29, x30, [sp], #32
    6af8:	b	4040 <_PyTrash_thread_deposit_object@plt>
    6afc:	mov	x20, x0
    6b00:	add	w8, w8, #0x1
    6b04:	str	w8, [x0, #184]
    6b08:	ldr	x8, [x19, #48]
    6b0c:	cbnz	x8, 6a84 <PyInit__elementtree@@Base+0x2760>
    6b10:	b	6a8c <PyInit__elementtree@@Base+0x2768>
    6b14:	stp	x29, x30, [sp, #-32]!
    6b18:	stp	x20, x19, [sp, #16]
    6b1c:	mov	x29, sp
    6b20:	ldr	x8, [x0, #16]
    6b24:	mov	x19, x0
    6b28:	cbz	x8, 6b70 <PyInit__elementtree@@Base+0x284c>
    6b2c:	mov	x0, x19
    6b30:	bl	3fe0 <Py_ReprEnter@plt>
    6b34:	cbz	w0, 6b88 <PyInit__elementtree@@Base+0x2864>
    6b38:	cmp	w0, #0x1
    6b3c:	b.lt	6b60 <PyInit__elementtree@@Base+0x283c>  // b.tstop
    6b40:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6b44:	ldr	x8, [x19, #8]
    6b48:	ldr	x9, [x9, #3920]
    6b4c:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    6b50:	add	x1, x1, #0xfda
    6b54:	ldr	x2, [x8, #24]
    6b58:	ldr	x0, [x9]
    6b5c:	bl	4180 <PyErr_Format@plt>
    6b60:	mov	x0, xzr
    6b64:	ldp	x20, x19, [sp, #16]
    6b68:	ldp	x29, x30, [sp], #32
    6b6c:	ret
    6b70:	mov	x1, x19
    6b74:	ldp	x20, x19, [sp, #16]
    6b78:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    6b7c:	add	x0, x0, #0xfb7
    6b80:	ldp	x29, x30, [sp], #32
    6b84:	b	3c30 <PyUnicode_FromFormat@plt>
    6b88:	ldr	x1, [x19, #16]
    6b8c:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    6b90:	add	x0, x0, #0xfc7
    6b94:	mov	x2, x19
    6b98:	bl	3c30 <PyUnicode_FromFormat@plt>
    6b9c:	mov	x20, x0
    6ba0:	mov	x0, x19
    6ba4:	bl	41a0 <Py_ReprLeave@plt>
    6ba8:	mov	x0, x20
    6bac:	ldp	x20, x19, [sp, #16]
    6bb0:	ldp	x29, x30, [sp], #32
    6bb4:	ret
    6bb8:	stp	x29, x30, [sp, #-48]!
    6bbc:	stp	x22, x21, [sp, #16]
    6bc0:	stp	x20, x19, [sp, #32]
    6bc4:	mov	x29, sp
    6bc8:	mov	x20, x0
    6bcc:	ldr	x0, [x0, #16]
    6bd0:	mov	x19, x2
    6bd4:	mov	x21, x1
    6bd8:	cbz	x0, 6bf8 <PyInit__elementtree@@Base+0x28d4>
    6bdc:	mov	x1, x19
    6be0:	blr	x21
    6be4:	cbz	w0, 6bf8 <PyInit__elementtree@@Base+0x28d4>
    6be8:	ldp	x20, x19, [sp, #32]
    6bec:	ldp	x22, x21, [sp, #16]
    6bf0:	ldp	x29, x30, [sp], #48
    6bf4:	ret
    6bf8:	ldr	x8, [x20, #24]
    6bfc:	ands	x0, x8, #0xfffffffffffffffe
    6c00:	b.eq	6c10 <PyInit__elementtree@@Base+0x28ec>  // b.none
    6c04:	mov	x1, x19
    6c08:	blr	x21
    6c0c:	cbnz	w0, 6be8 <PyInit__elementtree@@Base+0x28c4>
    6c10:	ldr	x8, [x20, #32]
    6c14:	ands	x0, x8, #0xfffffffffffffffe
    6c18:	b.eq	6c28 <PyInit__elementtree@@Base+0x2904>  // b.none
    6c1c:	mov	x1, x19
    6c20:	blr	x21
    6c24:	cbnz	w0, 6be8 <PyInit__elementtree@@Base+0x28c4>
    6c28:	ldr	x8, [x20, #40]
    6c2c:	cbz	x8, 6c8c <PyInit__elementtree@@Base+0x2968>
    6c30:	ldr	x0, [x8]
    6c34:	cbz	x0, 6c48 <PyInit__elementtree@@Base+0x2924>
    6c38:	mov	x1, x19
    6c3c:	blr	x21
    6c40:	cbnz	w0, 6be8 <PyInit__elementtree@@Base+0x28c4>
    6c44:	ldr	x8, [x20, #40]
    6c48:	ldr	x9, [x8, #8]
    6c4c:	cmp	x9, #0x1
    6c50:	b.lt	6c8c <PyInit__elementtree@@Base+0x2968>  // b.tstop
    6c54:	mov	x22, xzr
    6c58:	b	6c70 <PyInit__elementtree@@Base+0x294c>
    6c5c:	ldr	x8, [x20, #40]
    6c60:	ldr	x9, [x8, #8]
    6c64:	add	x22, x22, #0x1
    6c68:	cmp	x22, x9
    6c6c:	b.ge	6c8c <PyInit__elementtree@@Base+0x2968>  // b.tcont
    6c70:	ldr	x9, [x8, #24]
    6c74:	ldr	x0, [x9, x22, lsl #3]
    6c78:	cbz	x0, 6c60 <PyInit__elementtree@@Base+0x293c>
    6c7c:	mov	x1, x19
    6c80:	blr	x21
    6c84:	cbz	w0, 6c5c <PyInit__elementtree@@Base+0x2938>
    6c88:	b	6be8 <PyInit__elementtree@@Base+0x28c4>
    6c8c:	mov	w0, wzr
    6c90:	ldp	x20, x19, [sp, #32]
    6c94:	ldp	x22, x21, [sp, #16]
    6c98:	ldp	x29, x30, [sp], #48
    6c9c:	ret
    6ca0:	stp	x29, x30, [sp, #-32]!
    6ca4:	stp	x20, x19, [sp, #16]
    6ca8:	mov	x29, sp
    6cac:	mov	x20, x0
    6cb0:	ldr	x0, [x0, #16]
    6cb4:	cbz	x0, 6ccc <PyInit__elementtree@@Base+0x29a8>
    6cb8:	str	xzr, [x20, #16]
    6cbc:	ldr	x8, [x0]
    6cc0:	subs	x8, x8, #0x1
    6cc4:	str	x8, [x0]
    6cc8:	b.eq	6cf4 <PyInit__elementtree@@Base+0x29d0>  // b.none
    6ccc:	ldr	x8, [x20, #24]
    6cd0:	cbz	x8, 6d00 <PyInit__elementtree@@Base+0x29dc>
    6cd4:	and	x0, x8, #0xfffffffffffffffe
    6cd8:	str	xzr, [x20, #24]
    6cdc:	ldr	x8, [x0]
    6ce0:	subs	x8, x8, #0x1
    6ce4:	str	x8, [x0]
    6ce8:	b.ne	6d00 <PyInit__elementtree@@Base+0x29dc>  // b.any
    6cec:	bl	3d70 <_Py_Dealloc@plt>
    6cf0:	b	6d00 <PyInit__elementtree@@Base+0x29dc>
    6cf4:	bl	3d70 <_Py_Dealloc@plt>
    6cf8:	ldr	x8, [x20, #24]
    6cfc:	cbnz	x8, 6cd4 <PyInit__elementtree@@Base+0x29b0>
    6d00:	ldr	x8, [x20, #32]
    6d04:	cbz	x8, 6d20 <PyInit__elementtree@@Base+0x29fc>
    6d08:	and	x0, x8, #0xfffffffffffffffe
    6d0c:	str	xzr, [x20, #32]
    6d10:	ldr	x8, [x0]
    6d14:	subs	x8, x8, #0x1
    6d18:	str	x8, [x0]
    6d1c:	b.eq	6d54 <PyInit__elementtree@@Base+0x2a30>  // b.none
    6d20:	ldr	x19, [x20, #40]
    6d24:	cbz	x19, 6d60 <PyInit__elementtree@@Base+0x2a3c>
    6d28:	str	xzr, [x20, #40]
    6d2c:	ldr	x0, [x19]
    6d30:	ldr	x8, [x0]
    6d34:	subs	x8, x8, #0x1
    6d38:	str	x8, [x0]
    6d3c:	b.eq	6d70 <PyInit__elementtree@@Base+0x2a4c>  // b.none
    6d40:	ldr	x9, [x19, #8]
    6d44:	ldr	x0, [x19, #24]
    6d48:	cmp	x9, #0x1
    6d4c:	b.ge	6d84 <PyInit__elementtree@@Base+0x2a60>  // b.tcont
    6d50:	b	6dc0 <PyInit__elementtree@@Base+0x2a9c>
    6d54:	bl	3d70 <_Py_Dealloc@plt>
    6d58:	ldr	x19, [x20, #40]
    6d5c:	cbnz	x19, 6d28 <PyInit__elementtree@@Base+0x2a04>
    6d60:	ldp	x20, x19, [sp, #16]
    6d64:	mov	w0, wzr
    6d68:	ldp	x29, x30, [sp], #32
    6d6c:	ret
    6d70:	bl	3d70 <_Py_Dealloc@plt>
    6d74:	ldr	x9, [x19, #8]
    6d78:	ldr	x0, [x19, #24]
    6d7c:	cmp	x9, #0x1
    6d80:	b.lt	6dc0 <PyInit__elementtree@@Base+0x2a9c>  // b.tstop
    6d84:	mov	x20, xzr
    6d88:	b	6d98 <PyInit__elementtree@@Base+0x2a74>
    6d8c:	add	x20, x20, #0x1
    6d90:	cmp	x20, x9
    6d94:	b.ge	6dc0 <PyInit__elementtree@@Base+0x2a9c>  // b.tcont
    6d98:	ldr	x8, [x0, x20, lsl #3]
    6d9c:	ldr	x10, [x8]
    6da0:	subs	x10, x10, #0x1
    6da4:	str	x10, [x8]
    6da8:	b.ne	6d8c <PyInit__elementtree@@Base+0x2a68>  // b.any
    6dac:	mov	x0, x8
    6db0:	bl	3d70 <_Py_Dealloc@plt>
    6db4:	ldr	x9, [x19, #8]
    6db8:	ldr	x0, [x19, #24]
    6dbc:	b	6d8c <PyInit__elementtree@@Base+0x2a68>
    6dc0:	add	x8, x19, #0x20
    6dc4:	cmp	x0, x8
    6dc8:	b.eq	6dd0 <PyInit__elementtree@@Base+0x2aac>  // b.none
    6dcc:	bl	3e60 <PyObject_Free@plt>
    6dd0:	mov	x0, x19
    6dd4:	bl	3e60 <PyObject_Free@plt>
    6dd8:	ldp	x20, x19, [sp, #16]
    6ddc:	mov	w0, wzr
    6de0:	ldp	x29, x30, [sp], #32
    6de4:	ret
    6de8:	sub	sp, sp, #0x40
    6dec:	stp	x29, x30, [sp, #16]
    6df0:	stp	x22, x21, [sp, #32]
    6df4:	stp	x20, x19, [sp, #48]
    6df8:	add	x29, sp, #0x10
    6dfc:	str	xzr, [sp]
    6e00:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6e04:	ldr	x21, [x21, #3992]
    6e08:	mov	x8, x1
    6e0c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    6e10:	mov	x22, x2
    6e14:	mov	x19, x0
    6e18:	add	x1, x1, #0x453
    6e1c:	add	x2, sp, #0x8
    6e20:	mov	x4, sp
    6e24:	mov	x0, x8
    6e28:	mov	x3, x21
    6e2c:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    6e30:	cbz	w0, 6fb8 <PyInit__elementtree@@Base+0x2c94>
    6e34:	ldr	x0, [sp]
    6e38:	cbz	x0, 6e6c <PyInit__elementtree@@Base+0x2b48>
    6e3c:	bl	4150 <PyDict_Copy@plt>
    6e40:	str	x0, [sp]
    6e44:	cbz	x0, 6fb8 <PyInit__elementtree@@Base+0x2c94>
    6e48:	mov	x20, x0
    6e4c:	cbz	x22, 6e84 <PyInit__elementtree@@Base+0x2b60>
    6e50:	mov	x0, x20
    6e54:	mov	x1, x22
    6e58:	bl	3f20 <PyDict_Update@plt>
    6e5c:	ldr	x20, [sp]
    6e60:	tbnz	w0, #31, 6fa0 <PyInit__elementtree@@Base+0x2c7c>
    6e64:	cbnz	x20, 6e84 <PyInit__elementtree@@Base+0x2b60>
    6e68:	b	6eec <PyInit__elementtree@@Base+0x2bc8>
    6e6c:	cbz	x22, 6eec <PyInit__elementtree@@Base+0x2bc8>
    6e70:	mov	x0, x22
    6e74:	bl	4a40 <PyInit__elementtree@@Base+0x71c>
    6e78:	mov	x20, x0
    6e7c:	str	x0, [sp]
    6e80:	cbz	x0, 6fb8 <PyInit__elementtree@@Base+0x2c94>
    6e84:	ldr	x8, [x20, #8]
    6e88:	cmp	x8, x21
    6e8c:	b.ne	6e98 <PyInit__elementtree@@Base+0x2b74>  // b.any
    6e90:	ldr	x8, [x20, #16]
    6e94:	cbz	x8, 6ed4 <PyInit__elementtree@@Base+0x2bb0>
    6e98:	mov	w0, #0x40                  	// #64
    6e9c:	bl	3e00 <PyObject_Malloc@plt>
    6ea0:	str	x0, [x19, #40]
    6ea4:	cbz	x0, 6f84 <PyInit__elementtree@@Base+0x2c60>
    6ea8:	ldr	x8, [x20]
    6eac:	adrp	x9, c000 <PyInit__elementtree@@Base+0x7cdc>
    6eb0:	ldr	q0, [x9, #3392]
    6eb4:	add	x10, x0, #0x20
    6eb8:	add	x8, x8, #0x1
    6ebc:	str	x8, [x20]
    6ec0:	str	x20, [x0]
    6ec4:	stur	q0, [x0, #8]
    6ec8:	str	x10, [x0, #24]
    6ecc:	ldr	x20, [sp]
    6ed0:	cbz	x20, 6eec <PyInit__elementtree@@Base+0x2bc8>
    6ed4:	ldr	x8, [x20]
    6ed8:	subs	x8, x8, #0x1
    6edc:	str	x8, [x20]
    6ee0:	b.ne	6eec <PyInit__elementtree@@Base+0x2bc8>  // b.any
    6ee4:	mov	x0, x20
    6ee8:	bl	3d70 <_Py_Dealloc@plt>
    6eec:	ldr	x8, [sp, #8]
    6ef0:	ldr	x9, [x8]
    6ef4:	add	x9, x9, #0x1
    6ef8:	str	x9, [x8]
    6efc:	ldr	x0, [x19, #16]
    6f00:	str	x8, [x19, #16]
    6f04:	cbz	x0, 6f1c <PyInit__elementtree@@Base+0x2bf8>
    6f08:	ldr	x8, [x0]
    6f0c:	subs	x8, x8, #0x1
    6f10:	str	x8, [x0]
    6f14:	b.ne	6f1c <PyInit__elementtree@@Base+0x2bf8>  // b.any
    6f18:	bl	3d70 <_Py_Dealloc@plt>
    6f1c:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6f20:	ldr	x20, [x20, #3976]
    6f24:	ldr	x8, [x20]
    6f28:	add	x8, x8, #0x1
    6f2c:	str	x8, [x20]
    6f30:	ldr	x8, [x19, #24]
    6f34:	str	x20, [x19, #24]
    6f38:	and	x0, x8, #0xfffffffffffffffe
    6f3c:	ldr	x8, [x0]
    6f40:	subs	x8, x8, #0x1
    6f44:	str	x8, [x0]
    6f48:	b.ne	6f50 <PyInit__elementtree@@Base+0x2c2c>  // b.any
    6f4c:	bl	3d70 <_Py_Dealloc@plt>
    6f50:	ldr	x8, [x20]
    6f54:	add	x8, x8, #0x1
    6f58:	str	x8, [x20]
    6f5c:	ldr	x8, [x19, #32]
    6f60:	str	x20, [x19, #32]
    6f64:	and	x0, x8, #0xfffffffffffffffe
    6f68:	ldr	x8, [x0]
    6f6c:	subs	x8, x8, #0x1
    6f70:	str	x8, [x0]
    6f74:	b.ne	6f7c <PyInit__elementtree@@Base+0x2c58>  // b.any
    6f78:	bl	3d70 <_Py_Dealloc@plt>
    6f7c:	mov	w0, wzr
    6f80:	b	6fbc <PyInit__elementtree@@Base+0x2c98>
    6f84:	bl	3d80 <PyErr_NoMemory@plt>
    6f88:	ldr	x0, [sp]
    6f8c:	ldr	x8, [x0]
    6f90:	subs	x8, x8, #0x1
    6f94:	str	x8, [x0]
    6f98:	b.ne	6fb8 <PyInit__elementtree@@Base+0x2c94>  // b.any
    6f9c:	b	6fb4 <PyInit__elementtree@@Base+0x2c90>
    6fa0:	ldr	x8, [x20]
    6fa4:	subs	x8, x8, #0x1
    6fa8:	str	x8, [x20]
    6fac:	b.ne	6fb8 <PyInit__elementtree@@Base+0x2c94>  // b.any
    6fb0:	mov	x0, x20
    6fb4:	bl	3d70 <_Py_Dealloc@plt>
    6fb8:	mov	w0, #0xffffffff            	// #-1
    6fbc:	ldp	x20, x19, [sp, #48]
    6fc0:	ldp	x22, x21, [sp, #32]
    6fc4:	ldp	x29, x30, [sp, #16]
    6fc8:	add	sp, sp, #0x40
    6fcc:	ret
    6fd0:	stp	x29, x30, [sp, #-16]!
    6fd4:	mov	x29, sp
    6fd8:	ldr	x8, [x0, #304]
    6fdc:	mov	x1, xzr
    6fe0:	blr	x8
    6fe4:	cbz	x0, 7008 <PyInit__elementtree@@Base+0x2ce4>
    6fe8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    6fec:	ldr	x8, [x8, #3976]
    6ff0:	ldr	x9, [x8]
    6ff4:	stp	x8, x8, [x0, #16]
    6ff8:	add	x9, x9, #0x3
    6ffc:	str	x9, [x8]
    7000:	stp	xzr, xzr, [x0, #40]
    7004:	str	x8, [x0, #32]
    7008:	ldp	x29, x30, [sp], #16
    700c:	ret
    7010:	ldr	x8, [x0, #40]
    7014:	cbz	x8, 7020 <PyInit__elementtree@@Base+0x2cfc>
    7018:	ldr	x0, [x8, #8]
    701c:	ret
    7020:	mov	x0, xzr
    7024:	ret
    7028:	stp	x29, x30, [sp, #-16]!
    702c:	mov	x29, sp
    7030:	tbnz	x1, #63, 7064 <PyInit__elementtree@@Base+0x2d40>
    7034:	ldr	x8, [x0, #40]
    7038:	cbz	x8, 7064 <PyInit__elementtree@@Base+0x2d40>
    703c:	ldr	x9, [x8, #8]
    7040:	cmp	x9, x1
    7044:	b.le	7064 <PyInit__elementtree@@Base+0x2d40>
    7048:	ldr	x8, [x8, #24]
    704c:	ldr	x0, [x8, x1, lsl #3]
    7050:	ldr	x8, [x0]
    7054:	add	x8, x8, #0x1
    7058:	str	x8, [x0]
    705c:	ldp	x29, x30, [sp], #16
    7060:	ret
    7064:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7068:	ldr	x8, [x8, #3984]
    706c:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    7070:	add	x1, x1, #0xffc
    7074:	ldr	x0, [x8]
    7078:	bl	3de0 <PyErr_SetString@plt>
    707c:	mov	x0, xzr
    7080:	ldp	x29, x30, [sp], #16
    7084:	ret
    7088:	stp	x29, x30, [sp, #-48]!
    708c:	stp	x22, x21, [sp, #16]
    7090:	stp	x20, x19, [sp, #32]
    7094:	mov	x29, sp
    7098:	tbnz	x1, #63, 7108 <PyInit__elementtree@@Base+0x2de4>
    709c:	ldr	x9, [x0, #40]
    70a0:	mov	x21, x0
    70a4:	cbz	x9, 7108 <PyInit__elementtree@@Base+0x2de4>
    70a8:	ldr	x10, [x9, #8]
    70ac:	mov	x19, x1
    70b0:	cmp	x10, x1
    70b4:	b.le	7108 <PyInit__elementtree@@Base+0x2de4>
    70b8:	ldr	x8, [x9, #24]
    70bc:	mov	x22, x2
    70c0:	ldr	x20, [x8, x19, lsl #3]
    70c4:	cbz	x2, 7134 <PyInit__elementtree@@Base+0x2e10>
    70c8:	ldr	x0, [x22, #8]
    70cc:	adrp	x9, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    70d0:	add	x9, x9, #0xe8
    70d4:	cmp	x0, x9
    70d8:	b.eq	70f4 <PyInit__elementtree@@Base+0x2dd0>  // b.none
    70dc:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    70e0:	add	x1, x1, #0xe8
    70e4:	bl	4160 <PyType_IsSubtype@plt>
    70e8:	cbz	w0, 71b4 <PyInit__elementtree@@Base+0x2e90>
    70ec:	ldr	x8, [x21, #40]
    70f0:	ldr	x8, [x8, #24]
    70f4:	ldr	x9, [x22]
    70f8:	add	x9, x9, #0x1
    70fc:	str	x9, [x22]
    7100:	str	x22, [x8, x19, lsl #3]
    7104:	b	7188 <PyInit__elementtree@@Base+0x2e64>
    7108:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    710c:	ldr	x8, [x8, #3984]
    7110:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    7114:	add	x1, x1, #0x15
    7118:	ldr	x0, [x8]
    711c:	bl	3de0 <PyErr_SetString@plt>
    7120:	mov	w0, #0xffffffff            	// #-1
    7124:	ldp	x20, x19, [sp, #32]
    7128:	ldp	x22, x21, [sp, #16]
    712c:	ldp	x29, x30, [sp], #48
    7130:	ret
    7134:	sub	x10, x10, #0x1
    7138:	cmp	x10, x19
    713c:	str	x10, [x9, #8]
    7140:	b.le	7188 <PyInit__elementtree@@Base+0x2e64>
    7144:	add	x9, x19, #0x1
    7148:	ldr	x10, [x8, x9, lsl #3]
    714c:	str	x10, [x8, x19, lsl #3]
    7150:	ldr	x8, [x21, #40]
    7154:	ldr	x10, [x8, #8]
    7158:	cmp	x9, x10
    715c:	b.ge	7188 <PyInit__elementtree@@Base+0x2e64>  // b.tcont
    7160:	ldr	x8, [x8, #24]
    7164:	add	x10, x19, #0x2
    7168:	add	x8, x8, x19, lsl #3
    716c:	ldr	x9, [x8, #16]
    7170:	add	x19, x19, #0x1
    7174:	str	x9, [x8, #8]
    7178:	ldr	x8, [x21, #40]
    717c:	ldr	x9, [x8, #8]
    7180:	cmp	x10, x9
    7184:	b.lt	7160 <PyInit__elementtree@@Base+0x2e3c>  // b.tstop
    7188:	ldr	x8, [x20]
    718c:	subs	x8, x8, #0x1
    7190:	str	x8, [x20]
    7194:	b.ne	71a0 <PyInit__elementtree@@Base+0x2e7c>  // b.any
    7198:	mov	x0, x20
    719c:	bl	3d70 <_Py_Dealloc@plt>
    71a0:	mov	w0, wzr
    71a4:	ldp	x20, x19, [sp, #32]
    71a8:	ldp	x22, x21, [sp, #16]
    71ac:	ldp	x29, x30, [sp], #48
    71b0:	ret
    71b4:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    71b8:	ldr	x8, [x22, #8]
    71bc:	ldr	x9, [x9, #3944]
    71c0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    71c4:	add	x1, x1, #0xe3f
    71c8:	ldr	x2, [x8, #24]
    71cc:	ldr	x0, [x9]
    71d0:	bl	4180 <PyErr_Format@plt>
    71d4:	b	7120 <PyInit__elementtree@@Base+0x2dfc>
    71d8:	sub	sp, sp, #0x40
    71dc:	stp	x29, x30, [sp, #16]
    71e0:	str	x21, [sp, #32]
    71e4:	stp	x20, x19, [sp, #48]
    71e8:	add	x29, sp, #0x10
    71ec:	ldr	x9, [x1, #8]
    71f0:	mov	x8, x1
    71f4:	mov	x19, x0
    71f8:	ldr	x10, [x9, #96]
    71fc:	cbz	x10, 7238 <PyInit__elementtree@@Base+0x2f14>
    7200:	ldr	x10, [x10, #264]
    7204:	cbz	x10, 7238 <PyInit__elementtree@@Base+0x2f14>
    7208:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    720c:	ldr	x21, [x21, #3984]
    7210:	mov	x0, x8
    7214:	ldr	x1, [x21]
    7218:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    721c:	mov	x20, x0
    7220:	cmn	x0, #0x1
    7224:	b.eq	72ec <PyInit__elementtree@@Base+0x2fc8>  // b.none
    7228:	tbnz	x20, #63, 72f4 <PyInit__elementtree@@Base+0x2fd0>
    722c:	ldr	x8, [x19, #40]
    7230:	tbz	x20, #63, 7308 <PyInit__elementtree@@Base+0x2fe4>
    7234:	b	7330 <PyInit__elementtree@@Base+0x300c>
    7238:	adrp	x10, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    723c:	ldr	x10, [x10, #3952]
    7240:	cmp	x9, x10
    7244:	b.eq	7260 <PyInit__elementtree@@Base+0x2f3c>  // b.none
    7248:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    724c:	ldr	x8, [x8, #3944]
    7250:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    7254:	add	x1, x1, #0x39
    7258:	ldr	x0, [x8]
    725c:	b	733c <PyInit__elementtree@@Base+0x3018>
    7260:	ldr	x9, [x19, #40]
    7264:	cbz	x9, 7358 <PyInit__elementtree@@Base+0x3034>
    7268:	add	x1, x29, #0x18
    726c:	add	x2, sp, #0x8
    7270:	mov	x3, sp
    7274:	mov	x0, x8
    7278:	bl	4130 <PySlice_Unpack@plt>
    727c:	tbnz	w0, #31, 7340 <PyInit__elementtree@@Base+0x301c>
    7280:	ldr	x8, [x19, #40]
    7284:	ldr	x3, [sp]
    7288:	add	x1, x29, #0x18
    728c:	add	x2, sp, #0x8
    7290:	ldr	x0, [x8, #8]
    7294:	bl	3f10 <PySlice_AdjustIndices@plt>
    7298:	cmp	x0, #0x0
    729c:	b.le	7358 <PyInit__elementtree@@Base+0x3034>
    72a0:	mov	x20, x0
    72a4:	bl	3c50 <PyList_New@plt>
    72a8:	cbz	x0, 7344 <PyInit__elementtree@@Base+0x3020>
    72ac:	ldr	x8, [x29, #24]
    72b0:	mov	x9, xzr
    72b4:	ldr	x10, [x19, #40]
    72b8:	ldr	x10, [x10, #24]
    72bc:	ldr	x10, [x10, x8, lsl #3]
    72c0:	ldr	x11, [x10]
    72c4:	add	x11, x11, #0x1
    72c8:	str	x11, [x10]
    72cc:	ldr	x11, [x0, #24]
    72d0:	str	x10, [x11, x9, lsl #3]
    72d4:	ldr	x10, [sp]
    72d8:	add	x9, x9, #0x1
    72dc:	cmp	x20, x9
    72e0:	add	x8, x10, x8
    72e4:	b.ne	72b4 <PyInit__elementtree@@Base+0x2f90>  // b.any
    72e8:	b	7344 <PyInit__elementtree@@Base+0x3020>
    72ec:	bl	3f80 <PyErr_Occurred@plt>
    72f0:	cbnz	x0, 7340 <PyInit__elementtree@@Base+0x301c>
    72f4:	ldr	x8, [x19, #40]
    72f8:	cbz	x8, 7330 <PyInit__elementtree@@Base+0x300c>
    72fc:	ldr	x9, [x8, #8]
    7300:	add	x20, x9, x20
    7304:	tbnz	x20, #63, 7330 <PyInit__elementtree@@Base+0x300c>
    7308:	cbz	x8, 7330 <PyInit__elementtree@@Base+0x300c>
    730c:	ldr	x9, [x8, #8]
    7310:	cmp	x9, x20
    7314:	b.le	7330 <PyInit__elementtree@@Base+0x300c>
    7318:	ldr	x8, [x8, #24]
    731c:	ldr	x0, [x8, x20, lsl #3]
    7320:	ldr	x8, [x0]
    7324:	add	x8, x8, #0x1
    7328:	str	x8, [x0]
    732c:	b	7344 <PyInit__elementtree@@Base+0x3020>
    7330:	ldr	x0, [x21]
    7334:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    7338:	add	x1, x1, #0xffc
    733c:	bl	3de0 <PyErr_SetString@plt>
    7340:	mov	x0, xzr
    7344:	ldp	x20, x19, [sp, #48]
    7348:	ldr	x21, [sp, #32]
    734c:	ldp	x29, x30, [sp, #16]
    7350:	add	sp, sp, #0x40
    7354:	ret
    7358:	mov	x0, xzr
    735c:	bl	3c50 <PyList_New@plt>
    7360:	b	7344 <PyInit__elementtree@@Base+0x3020>
    7364:	sub	sp, sp, #0x70
    7368:	stp	x29, x30, [sp, #16]
    736c:	str	x27, [sp, #32]
    7370:	stp	x26, x25, [sp, #48]
    7374:	stp	x24, x23, [sp, #64]
    7378:	stp	x22, x21, [sp, #80]
    737c:	stp	x20, x19, [sp, #96]
    7380:	add	x29, sp, #0x10
    7384:	ldr	x8, [x1, #8]
    7388:	mov	x22, x2
    738c:	mov	x20, x1
    7390:	mov	x19, x0
    7394:	ldr	x9, [x8, #96]
    7398:	cbz	x9, 73cc <PyInit__elementtree@@Base+0x30a8>
    739c:	ldr	x9, [x9, #264]
    73a0:	cbz	x9, 73cc <PyInit__elementtree@@Base+0x30a8>
    73a4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    73a8:	ldr	x8, [x8, #3984]
    73ac:	mov	x0, x20
    73b0:	ldr	x1, [x8]
    73b4:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    73b8:	mov	x20, x0
    73bc:	cmn	x0, #0x1
    73c0:	b.eq	7500 <PyInit__elementtree@@Base+0x31dc>  // b.none
    73c4:	tbz	x20, #63, 7518 <PyInit__elementtree@@Base+0x31f4>
    73c8:	b	7508 <PyInit__elementtree@@Base+0x31e4>
    73cc:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    73d0:	ldr	x9, [x9, #3952]
    73d4:	cmp	x8, x9
    73d8:	b.eq	7418 <PyInit__elementtree@@Base+0x30f4>  // b.none
    73dc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    73e0:	ldr	x8, [x8, #3944]
    73e4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    73e8:	add	x1, x1, #0x39
    73ec:	ldr	x0, [x8]
    73f0:	bl	3de0 <PyErr_SetString@plt>
    73f4:	mov	w0, #0xffffffff            	// #-1
    73f8:	ldp	x20, x19, [sp, #96]
    73fc:	ldp	x22, x21, [sp, #80]
    7400:	ldp	x24, x23, [sp, #64]
    7404:	ldp	x26, x25, [sp, #48]
    7408:	ldr	x27, [sp, #32]
    740c:	ldp	x29, x30, [sp, #16]
    7410:	add	sp, sp, #0x70
    7414:	ret
    7418:	ldr	x8, [x19, #40]
    741c:	cbnz	x8, 745c <PyInit__elementtree@@Base+0x3138>
    7420:	mov	w0, #0x40                  	// #64
    7424:	bl	3e00 <PyObject_Malloc@plt>
    7428:	str	x0, [x19, #40]
    742c:	cbz	x0, 7608 <PyInit__elementtree@@Base+0x32e4>
    7430:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7434:	ldr	x8, [x8, #3976]
    7438:	adrp	x10, c000 <PyInit__elementtree@@Base+0x7cdc>
    743c:	ldr	q0, [x10, #3392]
    7440:	add	x11, x0, #0x20
    7444:	ldr	x9, [x8]
    7448:	add	x9, x9, #0x1
    744c:	str	x9, [x8]
    7450:	str	x8, [x0]
    7454:	stur	q0, [x0, #8]
    7458:	str	x11, [x0, #24]
    745c:	add	x1, x29, #0x18
    7460:	add	x2, sp, #0x8
    7464:	mov	x3, sp
    7468:	mov	x0, x20
    746c:	bl	4130 <PySlice_Unpack@plt>
    7470:	tbnz	w0, #31, 73f4 <PyInit__elementtree@@Base+0x30d0>
    7474:	ldr	x8, [x19, #40]
    7478:	ldr	x3, [sp]
    747c:	add	x1, x29, #0x18
    7480:	add	x2, sp, #0x8
    7484:	ldr	x0, [x8, #8]
    7488:	bl	3f10 <PySlice_AdjustIndices@plt>
    748c:	mov	x20, x0
    7490:	cbz	x22, 7544 <PyInit__elementtree@@Base+0x3220>
    7494:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    7498:	add	x1, x1, #0x79
    749c:	mov	x0, x22
    74a0:	bl	4240 <PySequence_Fast@plt>
    74a4:	cbz	x0, 7610 <PyInit__elementtree@@Base+0x32ec>
    74a8:	ldr	x22, [x0, #16]
    74ac:	mov	x21, x0
    74b0:	cmp	x22, x20
    74b4:	b.eq	7634 <PyInit__elementtree@@Base+0x3310>  // b.none
    74b8:	ldr	x8, [sp]
    74bc:	cmp	x8, #0x1
    74c0:	b.eq	7634 <PyInit__elementtree@@Base+0x3310>  // b.none
    74c4:	ldr	x8, [x21]
    74c8:	subs	x8, x8, #0x1
    74cc:	str	x8, [x21]
    74d0:	b.ne	74dc <PyInit__elementtree@@Base+0x31b8>  // b.any
    74d4:	mov	x0, x21
    74d8:	bl	3d70 <_Py_Dealloc@plt>
    74dc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    74e0:	ldr	x8, [x8, #3928]
    74e4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    74e8:	add	x1, x1, #0x7a
    74ec:	mov	x2, x22
    74f0:	ldr	x0, [x8]
    74f4:	mov	x3, x20
    74f8:	bl	4180 <PyErr_Format@plt>
    74fc:	b	73f4 <PyInit__elementtree@@Base+0x30d0>
    7500:	bl	3f80 <PyErr_Occurred@plt>
    7504:	cbnz	x0, 73f4 <PyInit__elementtree@@Base+0x30d0>
    7508:	ldr	x8, [x19, #40]
    750c:	cbz	x8, 7518 <PyInit__elementtree@@Base+0x31f4>
    7510:	ldr	x8, [x8, #8]
    7514:	add	x20, x8, x20
    7518:	mov	x0, x19
    751c:	mov	x1, x20
    7520:	mov	x2, x22
    7524:	ldp	x20, x19, [sp, #96]
    7528:	ldp	x22, x21, [sp, #80]
    752c:	ldp	x24, x23, [sp, #64]
    7530:	ldp	x26, x25, [sp, #48]
    7534:	ldr	x27, [sp, #32]
    7538:	ldp	x29, x30, [sp, #16]
    753c:	add	sp, sp, #0x70
    7540:	b	7088 <PyInit__elementtree@@Base+0x2d64>
    7544:	subs	x8, x20, #0x1
    7548:	b.lt	78fc <PyInit__elementtree@@Base+0x35d8>  // b.tstop
    754c:	ldr	x9, [sp]
    7550:	tbz	x9, #63, 756c <PyInit__elementtree@@Base+0x3248>
    7554:	ldr	x10, [x29, #24]
    7558:	neg	x11, x9
    755c:	add	x12, x10, #0x1
    7560:	madd	x8, x9, x8, x10
    7564:	stp	x11, x12, [sp]
    7568:	str	x8, [x29, #24]
    756c:	mov	x0, x20
    7570:	bl	3c50 <PyList_New@plt>
    7574:	cbz	x0, 73f4 <PyInit__elementtree@@Base+0x30d0>
    7578:	ldr	x22, [x29, #24]
    757c:	ldr	x8, [sp, #8]
    7580:	mov	x21, x0
    7584:	cmp	x22, x8
    7588:	b.cs	7740 <PyInit__elementtree@@Base+0x341c>  // b.hs, b.nlast
    758c:	ldr	x8, [sp]
    7590:	mov	x23, xzr
    7594:	mov	x24, xzr
    7598:	ldr	x9, [x19, #40]
    759c:	lsl	x11, x22, #3
    75a0:	ldr	x12, [x21, #24]
    75a4:	ldr	x10, [x9, #24]
    75a8:	ldr	x9, [x9, #8]
    75ac:	ldr	x10, [x10, x11]
    75b0:	str	x10, [x12, x24]
    75b4:	ldr	x10, [x19, #40]
    75b8:	sub	x12, x8, #0x1
    75bc:	add	x8, x8, x22
    75c0:	cmp	x8, x9
    75c4:	ldr	x8, [x10, #24]
    75c8:	mvn	x10, x22
    75cc:	add	x9, x9, x10
    75d0:	csel	x9, x12, x9, cc  // cc = lo, ul, last
    75d4:	add	x8, x8, x11
    75d8:	add	x0, x8, x23
    75dc:	add	x1, x8, #0x8
    75e0:	lsl	x2, x9, #3
    75e4:	bl	3c40 <memmove@plt>
    75e8:	ldp	x8, x9, [sp]
    75ec:	add	x24, x24, #0x8
    75f0:	sub	x23, x23, #0x8
    75f4:	add	x22, x8, x22
    75f8:	cmp	x22, x9
    75fc:	b.cc	7598 <PyInit__elementtree@@Base+0x3274>  // b.lo, b.ul, b.last
    7600:	ldr	x22, [x29, #24]
    7604:	b	7744 <PyInit__elementtree@@Base+0x3420>
    7608:	bl	3d80 <PyErr_NoMemory@plt>
    760c:	b	73f4 <PyInit__elementtree@@Base+0x30d0>
    7610:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7614:	ldr	x8, [x22, #8]
    7618:	ldr	x9, [x9, #3944]
    761c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    7620:	add	x1, x1, #0x5a
    7624:	ldr	x2, [x8, #24]
    7628:	ldr	x0, [x9]
    762c:	bl	4180 <PyErr_Format@plt>
    7630:	b	73f4 <PyInit__elementtree@@Base+0x30d0>
    7634:	subs	x1, x22, x20
    7638:	b.le	7648 <PyInit__elementtree@@Base+0x3324>
    763c:	mov	x0, x19
    7640:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    7644:	tbnz	w0, #31, 7724 <PyInit__elementtree@@Base+0x3400>
    7648:	cmp	x22, #0x1
    764c:	b.lt	76d0 <PyInit__elementtree@@Base+0x33ac>  // b.tstop
    7650:	adrp	x23, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    7654:	mov	x24, xzr
    7658:	add	x25, x21, #0x18
    765c:	add	x23, x23, #0xe8
    7660:	mov	x26, x22
    7664:	b	7678 <PyInit__elementtree@@Base+0x3354>
    7668:	add	x24, x24, #0x1
    766c:	subs	x26, x26, #0x1
    7670:	add	x25, x25, #0x8
    7674:	b.eq	76d0 <PyInit__elementtree@@Base+0x33ac>  // b.none
    7678:	ldr	x8, [x21, #8]
    767c:	ldrb	w9, [x8, #171]
    7680:	mov	x8, x25
    7684:	tbz	w9, #1, 7690 <PyInit__elementtree@@Base+0x336c>
    7688:	ldr	x8, [x21, #24]
    768c:	add	x8, x8, x24, lsl #3
    7690:	ldr	x27, [x8]
    7694:	ldr	x0, [x27, #8]
    7698:	cmp	x0, x23
    769c:	b.eq	7668 <PyInit__elementtree@@Base+0x3344>  // b.none
    76a0:	mov	x1, x23
    76a4:	bl	4160 <PyType_IsSubtype@plt>
    76a8:	cbnz	w0, 7668 <PyInit__elementtree@@Base+0x3344>
    76ac:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    76b0:	ldr	x8, [x27, #8]
    76b4:	ldr	x9, [x9, #3944]
    76b8:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    76bc:	add	x1, x1, #0xe3f
    76c0:	ldr	x2, [x8, #24]
    76c4:	ldr	x0, [x9]
    76c8:	bl	4180 <PyErr_Format@plt>
    76cc:	b	7724 <PyInit__elementtree@@Base+0x3400>
    76d0:	cmp	x20, #0x1
    76d4:	b.lt	7798 <PyInit__elementtree@@Base+0x3474>  // b.tstop
    76d8:	mov	x0, x20
    76dc:	bl	3c50 <PyList_New@plt>
    76e0:	cbz	x0, 7724 <PyInit__elementtree@@Base+0x3400>
    76e4:	ldr	x9, [x29, #24]
    76e8:	ldr	x10, [sp]
    76ec:	mov	x23, x0
    76f0:	mov	x8, xzr
    76f4:	lsl	x9, x9, #3
    76f8:	lsl	x10, x10, #3
    76fc:	ldr	x11, [x19, #40]
    7700:	ldr	x12, [x23, #24]
    7704:	ldr	x11, [x11, #24]
    7708:	ldr	x11, [x11, x9]
    770c:	add	x9, x9, x10
    7710:	str	x11, [x12, x8, lsl #3]
    7714:	add	x8, x8, #0x1
    7718:	cmp	x20, x8
    771c:	b.ne	76fc <PyInit__elementtree@@Base+0x33d8>  // b.any
    7720:	b	779c <PyInit__elementtree@@Base+0x3478>
    7724:	ldr	x8, [x21]
    7728:	subs	x8, x8, #0x1
    772c:	str	x8, [x21]
    7730:	b.ne	73f4 <PyInit__elementtree@@Base+0x30d0>  // b.any
    7734:	mov	x0, x21
    7738:	bl	3d70 <_Py_Dealloc@plt>
    773c:	b	73f4 <PyInit__elementtree@@Base+0x30d0>
    7740:	ldr	x8, [sp]
    7744:	ldr	x9, [x19, #40]
    7748:	madd	x11, x8, x20, x22
    774c:	ldr	x10, [x9, #8]
    7750:	subs	x8, x10, x11
    7754:	b.ls	7778 <PyInit__elementtree@@Base+0x3454>  // b.plast
    7758:	ldr	x9, [x9, #24]
    775c:	neg	x10, x20
    7760:	lsl	x2, x8, #3
    7764:	add	x1, x9, x11, lsl #3
    7768:	add	x0, x1, x10, lsl #3
    776c:	bl	3c40 <memmove@plt>
    7770:	ldr	x9, [x19, #40]
    7774:	ldr	x10, [x9, #8]
    7778:	sub	x8, x10, x20
    777c:	str	x8, [x9, #8]
    7780:	ldr	x8, [x21]
    7784:	subs	x8, x8, #0x1
    7788:	str	x8, [x21]
    778c:	b.ne	78fc <PyInit__elementtree@@Base+0x35d8>  // b.any
    7790:	mov	x0, x21
    7794:	b	78f8 <PyInit__elementtree@@Base+0x35d4>
    7798:	mov	x23, xzr
    779c:	subs	x8, x22, x20
    77a0:	b.ge	77ec <PyInit__elementtree@@Base+0x34c8>  // b.tcont
    77a4:	ldr	x10, [x19, #40]
    77a8:	ldr	x9, [sp, #8]
    77ac:	ldr	x11, [x10, #8]
    77b0:	cmp	x9, x11
    77b4:	b.ge	7850 <PyInit__elementtree@@Base+0x352c>  // b.tcont
    77b8:	lsl	x11, x22, #3
    77bc:	sub	x11, x11, x20, lsl #3
    77c0:	ldr	x10, [x10, #24]
    77c4:	lsl	x12, x9, #3
    77c8:	add	x9, x9, #0x1
    77cc:	ldr	x13, [x10, x12]
    77d0:	add	x10, x10, x11
    77d4:	str	x13, [x10, x12]
    77d8:	ldr	x10, [x19, #40]
    77dc:	ldr	x12, [x10, #8]
    77e0:	cmp	x9, x12
    77e4:	b.lt	77c0 <PyInit__elementtree@@Base+0x349c>  // b.tstop
    77e8:	b	7850 <PyInit__elementtree@@Base+0x352c>
    77ec:	b.le	7850 <PyInit__elementtree@@Base+0x352c>
    77f0:	ldr	x11, [x19, #40]
    77f4:	ldr	x9, [sp, #8]
    77f8:	ldr	x10, [x11, #8]
    77fc:	sub	x12, x10, #0x1
    7800:	cmp	x12, x9
    7804:	b.lt	7850 <PyInit__elementtree@@Base+0x352c>  // b.tstop
    7808:	ldr	x11, [x11, #24]
    780c:	sub	x10, x10, #0x2
    7810:	cmp	x10, x9
    7814:	ldr	x13, [x11, x12, lsl #3]
    7818:	add	x12, x8, x12
    781c:	str	x13, [x11, x12, lsl #3]
    7820:	b.lt	7850 <PyInit__elementtree@@Base+0x352c>  // b.tstop
    7824:	lsl	x11, x22, #3
    7828:	sub	x11, x11, x20, lsl #3
    782c:	ldr	x12, [x19, #40]
    7830:	lsl	x13, x10, #3
    7834:	sub	x10, x10, #0x1
    7838:	cmp	x10, x9
    783c:	ldr	x12, [x12, #24]
    7840:	ldr	x14, [x12, x13]
    7844:	add	x12, x12, x11
    7848:	str	x14, [x12, x13]
    784c:	b.ge	782c <PyInit__elementtree@@Base+0x3508>  // b.tcont
    7850:	cmp	x22, #0x1
    7854:	b.lt	78b8 <PyInit__elementtree@@Base+0x3594>  // b.tstop
    7858:	ldr	x10, [x29, #24]
    785c:	mov	x9, xzr
    7860:	add	x11, x21, #0x18
    7864:	b	789c <PyInit__elementtree@@Base+0x3578>
    7868:	ldr	x12, [x12]
    786c:	add	x9, x9, #0x1
    7870:	subs	x22, x22, #0x1
    7874:	add	x11, x11, #0x8
    7878:	ldr	x13, [x12]
    787c:	add	x13, x13, #0x1
    7880:	str	x13, [x12]
    7884:	ldr	x13, [x19, #40]
    7888:	ldr	x13, [x13, #24]
    788c:	str	x12, [x13, x10, lsl #3]
    7890:	ldr	x12, [sp]
    7894:	add	x10, x12, x10
    7898:	b.eq	78b8 <PyInit__elementtree@@Base+0x3594>  // b.none
    789c:	ldr	x12, [x21, #8]
    78a0:	ldrb	w13, [x12, #171]
    78a4:	mov	x12, x11
    78a8:	tbz	w13, #1, 7868 <PyInit__elementtree@@Base+0x3544>
    78ac:	ldr	x12, [x21, #24]
    78b0:	add	x12, x12, x9, lsl #3
    78b4:	b	7868 <PyInit__elementtree@@Base+0x3544>
    78b8:	ldr	x9, [x19, #40]
    78bc:	ldr	x10, [x9, #8]
    78c0:	add	x8, x8, x10
    78c4:	str	x8, [x9, #8]
    78c8:	ldr	x8, [x21]
    78cc:	subs	x8, x8, #0x1
    78d0:	str	x8, [x21]
    78d4:	b.ne	78e0 <PyInit__elementtree@@Base+0x35bc>  // b.any
    78d8:	mov	x0, x21
    78dc:	bl	3d70 <_Py_Dealloc@plt>
    78e0:	cbz	x23, 78fc <PyInit__elementtree@@Base+0x35d8>
    78e4:	ldr	x8, [x23]
    78e8:	subs	x8, x8, #0x1
    78ec:	str	x8, [x23]
    78f0:	b.ne	78fc <PyInit__elementtree@@Base+0x35d8>  // b.any
    78f4:	mov	x0, x23
    78f8:	bl	3d70 <_Py_Dealloc@plt>
    78fc:	mov	w0, wzr
    7900:	b	73f8 <PyInit__elementtree@@Base+0x30d4>
    7904:	stp	x29, x30, [sp, #-48]!
    7908:	str	x21, [sp, #16]
    790c:	stp	x20, x19, [sp, #32]
    7910:	mov	x29, sp
    7914:	ldr	x20, [x0, #40]
    7918:	mov	x19, x0
    791c:	cbz	x20, 79b4 <PyInit__elementtree@@Base+0x3690>
    7920:	str	xzr, [x19, #40]
    7924:	ldr	x0, [x20]
    7928:	ldr	x8, [x0]
    792c:	subs	x8, x8, #0x1
    7930:	str	x8, [x0]
    7934:	b.eq	794c <PyInit__elementtree@@Base+0x3628>  // b.none
    7938:	ldr	x9, [x20, #8]
    793c:	ldr	x0, [x20, #24]
    7940:	cmp	x9, #0x1
    7944:	b.ge	7960 <PyInit__elementtree@@Base+0x363c>  // b.tcont
    7948:	b	799c <PyInit__elementtree@@Base+0x3678>
    794c:	bl	3d70 <_Py_Dealloc@plt>
    7950:	ldr	x9, [x20, #8]
    7954:	ldr	x0, [x20, #24]
    7958:	cmp	x9, #0x1
    795c:	b.lt	799c <PyInit__elementtree@@Base+0x3678>  // b.tstop
    7960:	mov	x21, xzr
    7964:	b	7974 <PyInit__elementtree@@Base+0x3650>
    7968:	add	x21, x21, #0x1
    796c:	cmp	x21, x9
    7970:	b.ge	799c <PyInit__elementtree@@Base+0x3678>  // b.tcont
    7974:	ldr	x8, [x0, x21, lsl #3]
    7978:	ldr	x10, [x8]
    797c:	subs	x10, x10, #0x1
    7980:	str	x10, [x8]
    7984:	b.ne	7968 <PyInit__elementtree@@Base+0x3644>  // b.any
    7988:	mov	x0, x8
    798c:	bl	3d70 <_Py_Dealloc@plt>
    7990:	ldr	x9, [x20, #8]
    7994:	ldr	x0, [x20, #24]
    7998:	b	7968 <PyInit__elementtree@@Base+0x3644>
    799c:	add	x8, x20, #0x20
    79a0:	cmp	x0, x8
    79a4:	b.eq	79ac <PyInit__elementtree@@Base+0x3688>  // b.none
    79a8:	bl	3e60 <PyObject_Free@plt>
    79ac:	mov	x0, x20
    79b0:	bl	3e60 <PyObject_Free@plt>
    79b4:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    79b8:	ldr	x20, [x20, #3976]
    79bc:	ldr	x8, [x20]
    79c0:	add	x8, x8, #0x1
    79c4:	str	x8, [x20]
    79c8:	ldr	x8, [x19, #24]
    79cc:	str	x20, [x19, #24]
    79d0:	and	x0, x8, #0xfffffffffffffffe
    79d4:	ldr	x8, [x0]
    79d8:	subs	x8, x8, #0x1
    79dc:	str	x8, [x0]
    79e0:	b.ne	79e8 <PyInit__elementtree@@Base+0x36c4>  // b.any
    79e4:	bl	3d70 <_Py_Dealloc@plt>
    79e8:	ldr	x8, [x20]
    79ec:	add	x8, x8, #0x1
    79f0:	str	x8, [x20]
    79f4:	ldr	x8, [x19, #32]
    79f8:	str	x20, [x19, #32]
    79fc:	and	x0, x8, #0xfffffffffffffffe
    7a00:	ldr	x8, [x0]
    7a04:	subs	x8, x8, #0x1
    7a08:	str	x8, [x0]
    7a0c:	b.ne	7a14 <PyInit__elementtree@@Base+0x36f0>  // b.any
    7a10:	bl	3d70 <_Py_Dealloc@plt>
    7a14:	ldr	x8, [x20]
    7a18:	mov	x0, x20
    7a1c:	ldr	x21, [sp, #16]
    7a20:	add	x8, x8, #0x1
    7a24:	str	x8, [x20]
    7a28:	ldp	x20, x19, [sp, #32]
    7a2c:	ldp	x29, x30, [sp], #48
    7a30:	ret
    7a34:	sub	sp, sp, #0x40
    7a38:	stp	x29, x30, [sp, #32]
    7a3c:	stp	x20, x19, [sp, #48]
    7a40:	add	x29, sp, #0x20
    7a44:	mov	x8, x1
    7a48:	mov	x19, x0
    7a4c:	cbz	x3, 7aa0 <PyInit__elementtree@@Base+0x377c>
    7a50:	ldr	x9, [x3, #16]
    7a54:	add	x20, x9, x2
    7a58:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7a5c:	add	x9, sp, #0x10
    7a60:	add	x4, x4, #0x890
    7a64:	mov	w5, #0x1                   	// #1
    7a68:	mov	w6, #0x2                   	// #2
    7a6c:	mov	x0, x8
    7a70:	mov	x1, x2
    7a74:	mov	x2, xzr
    7a78:	mov	w7, wzr
    7a7c:	str	x9, [sp]
    7a80:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7a84:	mov	x8, x0
    7a88:	mov	x2, x20
    7a8c:	cbnz	x0, 7ab8 <PyInit__elementtree@@Base+0x3794>
    7a90:	ldp	x20, x19, [sp, #48]
    7a94:	ldp	x29, x30, [sp, #32]
    7a98:	add	sp, sp, #0x40
    7a9c:	ret
    7aa0:	mov	x20, x2
    7aa4:	cbz	x8, 7a58 <PyInit__elementtree@@Base+0x3734>
    7aa8:	sub	x9, x2, #0x1
    7aac:	cmp	x9, #0x2
    7ab0:	mov	x20, x2
    7ab4:	b.cs	7a58 <PyInit__elementtree@@Base+0x3734>  // b.hs, b.nlast
    7ab8:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7abc:	ldr	x1, [x8]
    7ac0:	ldr	x9, [x9, #3976]
    7ac4:	cmp	x2, #0x1
    7ac8:	mov	x20, x9
    7acc:	b.eq	7ad4 <PyInit__elementtree@@Base+0x37b0>  // b.none
    7ad0:	ldr	x20, [x8, #8]
    7ad4:	ldr	x8, [x19, #40]
    7ad8:	cbz	x8, 7b14 <PyInit__elementtree@@Base+0x37f0>
    7adc:	ldr	x0, [x8]
    7ae0:	cmp	x0, x9
    7ae4:	b.eq	7b14 <PyInit__elementtree@@Base+0x37f0>  // b.none
    7ae8:	bl	4230 <PyDict_GetItemWithError@plt>
    7aec:	cbnz	x0, 7b18 <PyInit__elementtree@@Base+0x37f4>
    7af0:	bl	3f80 <PyErr_Occurred@plt>
    7af4:	mov	x8, x0
    7af8:	mov	x0, x20
    7afc:	cbz	x8, 7b18 <PyInit__elementtree@@Base+0x37f4>
    7b00:	mov	x0, xzr
    7b04:	ldp	x20, x19, [sp, #48]
    7b08:	ldp	x29, x30, [sp, #32]
    7b0c:	add	sp, sp, #0x40
    7b10:	ret
    7b14:	mov	x0, x20
    7b18:	ldr	x8, [x0]
    7b1c:	add	x8, x8, #0x1
    7b20:	str	x8, [x0]
    7b24:	ldp	x20, x19, [sp, #48]
    7b28:	ldp	x29, x30, [sp, #32]
    7b2c:	add	sp, sp, #0x40
    7b30:	ret
    7b34:	stp	x29, x30, [sp, #-64]!
    7b38:	str	x23, [sp, #16]
    7b3c:	stp	x22, x21, [sp, #32]
    7b40:	stp	x20, x19, [sp, #48]
    7b44:	mov	x29, sp
    7b48:	mov	x19, x1
    7b4c:	cmp	x2, #0x2
    7b50:	mov	x20, x0
    7b54:	b.eq	7b78 <PyInit__elementtree@@Base+0x3854>  // b.none
    7b58:	mov	x8, x2
    7b5c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    7b60:	add	x0, x0, #0xc5
    7b64:	mov	w2, #0x2                   	// #2
    7b68:	mov	w3, #0x2                   	// #2
    7b6c:	mov	x1, x8
    7b70:	bl	3f60 <_PyArg_CheckPositional@plt>
    7b74:	cbz	w0, 7c38 <PyInit__elementtree@@Base+0x3914>
    7b78:	ldp	x22, x21, [x19]
    7b7c:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7b80:	ldr	x0, [x20, #40]
    7b84:	ldr	x19, [x19, #3976]
    7b88:	cbz	x0, 7ba0 <PyInit__elementtree@@Base+0x387c>
    7b8c:	ldr	x23, [x0]
    7b90:	cmp	x23, x19
    7b94:	b.eq	7be0 <PyInit__elementtree@@Base+0x38bc>  // b.none
    7b98:	cbnz	x23, 7c10 <PyInit__elementtree@@Base+0x38ec>
    7b9c:	b	7c38 <PyInit__elementtree@@Base+0x3914>
    7ba0:	mov	w0, #0x40                  	// #64
    7ba4:	bl	3e00 <PyObject_Malloc@plt>
    7ba8:	str	x0, [x20, #40]
    7bac:	cbz	x0, 7c34 <PyInit__elementtree@@Base+0x3910>
    7bb0:	ldr	x8, [x19]
    7bb4:	adrp	x9, c000 <PyInit__elementtree@@Base+0x7cdc>
    7bb8:	ldr	q0, [x9, #3392]
    7bbc:	add	x10, x0, #0x20
    7bc0:	add	x8, x8, #0x1
    7bc4:	str	x8, [x19]
    7bc8:	str	x19, [x0]
    7bcc:	stur	q0, [x0, #8]
    7bd0:	str	x10, [x0, #24]
    7bd4:	mov	x23, x19
    7bd8:	cmp	x23, x19
    7bdc:	b.ne	7b98 <PyInit__elementtree@@Base+0x3874>  // b.any
    7be0:	bl	4080 <PyDict_New@plt>
    7be4:	cbz	x0, 7c38 <PyInit__elementtree@@Base+0x3914>
    7be8:	ldr	x8, [x19]
    7bec:	mov	x23, x0
    7bf0:	subs	x8, x8, #0x1
    7bf4:	str	x8, [x19]
    7bf8:	b.ne	7c08 <PyInit__elementtree@@Base+0x38e4>  // b.any
    7bfc:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7c00:	ldr	x0, [x0, #3976]
    7c04:	bl	3d70 <_Py_Dealloc@plt>
    7c08:	ldr	x8, [x20, #40]
    7c0c:	str	x23, [x8]
    7c10:	mov	x0, x23
    7c14:	mov	x1, x22
    7c18:	mov	x2, x21
    7c1c:	bl	4140 <PyDict_SetItem@plt>
    7c20:	tbnz	w0, #31, 7c38 <PyInit__elementtree@@Base+0x3914>
    7c24:	ldr	x8, [x19]
    7c28:	add	x8, x8, #0x1
    7c2c:	str	x8, [x19]
    7c30:	b	7c3c <PyInit__elementtree@@Base+0x3918>
    7c34:	bl	3d80 <PyErr_NoMemory@plt>
    7c38:	mov	x19, xzr
    7c3c:	mov	x0, x19
    7c40:	ldp	x20, x19, [sp, #48]
    7c44:	ldp	x22, x21, [sp, #32]
    7c48:	ldr	x23, [sp, #16]
    7c4c:	ldp	x29, x30, [sp], #64
    7c50:	ret
    7c54:	sub	sp, sp, #0x60
    7c58:	stp	x29, x30, [sp, #32]
    7c5c:	stp	x24, x23, [sp, #48]
    7c60:	stp	x22, x21, [sp, #64]
    7c64:	stp	x20, x19, [sp, #80]
    7c68:	add	x29, sp, #0x20
    7c6c:	mov	x19, x0
    7c70:	cbz	x3, 7cbc <PyInit__elementtree@@Base+0x3998>
    7c74:	ldr	x8, [x3, #16]
    7c78:	add	x20, x8, x2
    7c7c:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7c80:	add	x8, sp, #0x10
    7c84:	add	x4, x4, #0xc00
    7c88:	mov	w5, #0x1                   	// #1
    7c8c:	mov	w6, #0x2                   	// #2
    7c90:	mov	x0, x1
    7c94:	mov	x1, x2
    7c98:	mov	x2, xzr
    7c9c:	mov	w7, wzr
    7ca0:	str	x8, [sp]
    7ca4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7ca8:	mov	x1, x0
    7cac:	mov	x2, x20
    7cb0:	cbnz	x0, 7cd4 <PyInit__elementtree@@Base+0x39b0>
    7cb4:	mov	x21, xzr
    7cb8:	b	7dc8 <PyInit__elementtree@@Base+0x3aa4>
    7cbc:	mov	x20, x2
    7cc0:	cbz	x1, 7c7c <PyInit__elementtree@@Base+0x3958>
    7cc4:	sub	x8, x2, #0x1
    7cc8:	cmp	x8, #0x2
    7ccc:	mov	x20, x2
    7cd0:	b.cs	7c7c <PyInit__elementtree@@Base+0x3958>  // b.hs, b.nlast
    7cd4:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7cd8:	ldr	x20, [x1]
    7cdc:	ldr	x23, [x23, #3976]
    7ce0:	cmp	x2, #0x1
    7ce4:	mov	x21, x23
    7ce8:	b.eq	7cf0 <PyInit__elementtree@@Base+0x39cc>  // b.none
    7cec:	ldr	x21, [x1, #8]
    7cf0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7cf4:	add	x0, x0, #0xd40
    7cf8:	bl	3fc0 <PyState_FindModule@plt>
    7cfc:	bl	3e10 <PyModule_GetState@plt>
    7d00:	mov	x22, x0
    7d04:	mov	x0, x20
    7d08:	bl	9690 <PyInit__elementtree@@Base+0x536c>
    7d0c:	cmp	x21, x23
    7d10:	b.ne	7da4 <PyInit__elementtree@@Base+0x3a80>  // b.any
    7d14:	cbnz	w0, 7da4 <PyInit__elementtree@@Base+0x3a80>
    7d18:	ldr	x8, [x19, #40]
    7d1c:	cbz	x8, 7d90 <PyInit__elementtree@@Base+0x3a6c>
    7d20:	ldr	x9, [x8, #8]
    7d24:	cmp	x9, #0x1
    7d28:	b.lt	7d90 <PyInit__elementtree@@Base+0x3a6c>  // b.tstop
    7d2c:	mov	x24, xzr
    7d30:	ldr	x8, [x8, #24]
    7d34:	mov	w2, #0x2                   	// #2
    7d38:	mov	x1, x20
    7d3c:	ldr	x21, [x8, x24, lsl #3]
    7d40:	ldr	x8, [x21]
    7d44:	ldr	x0, [x21, #16]
    7d48:	add	x8, x8, #0x1
    7d4c:	str	x8, [x21]
    7d50:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7d54:	cmp	w0, #0x0
    7d58:	b.gt	7dc8 <PyInit__elementtree@@Base+0x3aa4>
    7d5c:	ldr	x8, [x21]
    7d60:	mov	w22, w0
    7d64:	subs	x8, x8, #0x1
    7d68:	str	x8, [x21]
    7d6c:	b.ne	7d78 <PyInit__elementtree@@Base+0x3a54>  // b.any
    7d70:	mov	x0, x21
    7d74:	bl	3d70 <_Py_Dealloc@plt>
    7d78:	tbnz	w22, #31, 7cb4 <PyInit__elementtree@@Base+0x3990>
    7d7c:	ldr	x8, [x19, #40]
    7d80:	add	x24, x24, #0x1
    7d84:	ldr	x9, [x8, #8]
    7d88:	cmp	x24, x9
    7d8c:	b.lt	7d30 <PyInit__elementtree@@Base+0x3a0c>  // b.tstop
    7d90:	ldr	x8, [x23]
    7d94:	mov	x21, x23
    7d98:	add	x8, x8, #0x1
    7d9c:	str	x8, [x23]
    7da0:	b	7dc8 <PyInit__elementtree@@Base+0x3aa4>
    7da4:	ldr	x0, [x22, #16]
    7da8:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7dac:	add	x1, x1, #0xb18
    7db0:	mov	x2, x19
    7db4:	mov	x3, x20
    7db8:	mov	x4, x21
    7dbc:	mov	x5, xzr
    7dc0:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    7dc4:	mov	x21, x0
    7dc8:	mov	x0, x21
    7dcc:	ldp	x20, x19, [sp, #80]
    7dd0:	ldp	x22, x21, [sp, #64]
    7dd4:	ldp	x24, x23, [sp, #48]
    7dd8:	ldp	x29, x30, [sp, #32]
    7ddc:	add	sp, sp, #0x60
    7de0:	ret
    7de4:	sub	sp, sp, #0x70
    7de8:	stp	x29, x30, [sp, #32]
    7dec:	str	x25, [sp, #48]
    7df0:	stp	x24, x23, [sp, #64]
    7df4:	stp	x22, x21, [sp, #80]
    7df8:	stp	x20, x19, [sp, #96]
    7dfc:	add	x29, sp, #0x20
    7e00:	mov	x20, x0
    7e04:	cbz	x3, 7e50 <PyInit__elementtree@@Base+0x3b2c>
    7e08:	ldr	x8, [x3, #16]
    7e0c:	add	x19, x8, x2
    7e10:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7e14:	add	x8, sp, #0x8
    7e18:	add	x4, x4, #0xc40
    7e1c:	mov	w5, #0x1                   	// #1
    7e20:	mov	w6, #0x3                   	// #3
    7e24:	mov	x0, x1
    7e28:	mov	x1, x2
    7e2c:	mov	x2, xzr
    7e30:	mov	w7, wzr
    7e34:	str	x8, [sp]
    7e38:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7e3c:	mov	x1, x0
    7e40:	mov	x2, x19
    7e44:	cbnz	x0, 7e68 <PyInit__elementtree@@Base+0x3b44>
    7e48:	mov	x19, xzr
    7e4c:	b	7f84 <PyInit__elementtree@@Base+0x3c60>
    7e50:	mov	x19, x2
    7e54:	cbz	x1, 7e10 <PyInit__elementtree@@Base+0x3aec>
    7e58:	sub	x8, x2, #0x1
    7e5c:	cmp	x8, #0x3
    7e60:	mov	x19, x2
    7e64:	b.cs	7e10 <PyInit__elementtree@@Base+0x3aec>  // b.hs, b.nlast
    7e68:	adrp	x24, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7e6c:	ldr	x21, [x1]
    7e70:	ldr	x24, [x24, #3976]
    7e74:	cmp	x2, #0x1
    7e78:	mov	x19, x24
    7e7c:	mov	x22, x24
    7e80:	b.eq	7eac <PyInit__elementtree@@Base+0x3b88>  // b.none
    7e84:	ldr	x19, [x1, #8]
    7e88:	cbz	x19, 7ea0 <PyInit__elementtree@@Base+0x3b7c>
    7e8c:	cmp	x2, #0x2
    7e90:	b.ne	7ea8 <PyInit__elementtree@@Base+0x3b84>  // b.any
    7e94:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7e98:	ldr	x22, [x22, #3976]
    7e9c:	b	7eac <PyInit__elementtree@@Base+0x3b88>
    7ea0:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7ea4:	ldr	x19, [x19, #3976]
    7ea8:	ldr	x22, [x1, #16]
    7eac:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7eb0:	add	x0, x0, #0xd40
    7eb4:	bl	3fc0 <PyState_FindModule@plt>
    7eb8:	bl	3e10 <PyModule_GetState@plt>
    7ebc:	mov	x23, x0
    7ec0:	mov	x0, x21
    7ec4:	bl	9690 <PyInit__elementtree@@Base+0x536c>
    7ec8:	cmp	x22, x24
    7ecc:	b.ne	7f5c <PyInit__elementtree@@Base+0x3c38>  // b.any
    7ed0:	cbnz	w0, 7f5c <PyInit__elementtree@@Base+0x3c38>
    7ed4:	ldr	x8, [x20, #40]
    7ed8:	cbz	x8, 7f4c <PyInit__elementtree@@Base+0x3c28>
    7edc:	ldr	x9, [x8, #8]
    7ee0:	cmp	x9, #0x1
    7ee4:	b.lt	7f4c <PyInit__elementtree@@Base+0x3c28>  // b.tstop
    7ee8:	mov	x25, xzr
    7eec:	ldr	x8, [x8, #24]
    7ef0:	mov	w2, #0x2                   	// #2
    7ef4:	mov	x1, x21
    7ef8:	ldr	x22, [x8, x25, lsl #3]
    7efc:	ldr	x8, [x22]
    7f00:	ldr	x0, [x22, #16]
    7f04:	add	x8, x8, #0x1
    7f08:	str	x8, [x22]
    7f0c:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7f10:	cmp	w0, #0x1
    7f14:	b.ge	7fa4 <PyInit__elementtree@@Base+0x3c80>  // b.tcont
    7f18:	ldr	x8, [x22]
    7f1c:	mov	w23, w0
    7f20:	subs	x8, x8, #0x1
    7f24:	str	x8, [x22]
    7f28:	b.ne	7f34 <PyInit__elementtree@@Base+0x3c10>  // b.any
    7f2c:	mov	x0, x22
    7f30:	bl	3d70 <_Py_Dealloc@plt>
    7f34:	tbnz	w23, #31, 7e48 <PyInit__elementtree@@Base+0x3b24>
    7f38:	ldr	x8, [x20, #40]
    7f3c:	add	x25, x25, #0x1
    7f40:	ldr	x9, [x8, #8]
    7f44:	cmp	x25, x9
    7f48:	b.lt	7eec <PyInit__elementtree@@Base+0x3bc8>  // b.tstop
    7f4c:	ldr	x8, [x19]
    7f50:	add	x8, x8, #0x1
    7f54:	str	x8, [x19]
    7f58:	b	7f84 <PyInit__elementtree@@Base+0x3c60>
    7f5c:	ldr	x0, [x23, #16]
    7f60:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    7f64:	add	x1, x1, #0xb30
    7f68:	mov	x2, x20
    7f6c:	mov	x3, x21
    7f70:	mov	x4, x19
    7f74:	mov	x5, x22
    7f78:	mov	x6, xzr
    7f7c:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    7f80:	mov	x19, x0
    7f84:	mov	x0, x19
    7f88:	ldp	x20, x19, [sp, #96]
    7f8c:	ldp	x22, x21, [sp, #80]
    7f90:	ldp	x24, x23, [sp, #64]
    7f94:	ldr	x25, [sp, #48]
    7f98:	ldp	x29, x30, [sp, #32]
    7f9c:	add	sp, sp, #0x70
    7fa0:	ret
    7fa4:	ldr	x19, [x22, #24]
    7fa8:	tbz	w19, #0, 7fc8 <PyInit__elementtree@@Base+0x3ca4>
    7fac:	and	x20, x19, #0xfffffffffffffffe
    7fb0:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7fb4:	ldr	x8, [x20, #8]
    7fb8:	ldr	x9, [x9, #4064]
    7fbc:	mov	x19, x20
    7fc0:	cmp	x8, x9
    7fc4:	b.eq	8024 <PyInit__elementtree@@Base+0x3d00>  // b.none
    7fc8:	cmp	x19, x24
    7fcc:	b.eq	7ffc <PyInit__elementtree@@Base+0x3cd8>  // b.none
    7fd0:	cbz	x19, 7fe0 <PyInit__elementtree@@Base+0x3cbc>
    7fd4:	ldr	x8, [x19]
    7fd8:	add	x8, x8, #0x1
    7fdc:	str	x8, [x19]
    7fe0:	ldr	x8, [x22]
    7fe4:	subs	x8, x8, #0x1
    7fe8:	str	x8, [x22]
    7fec:	b.ne	7f84 <PyInit__elementtree@@Base+0x3c60>  // b.any
    7ff0:	mov	x0, x22
    7ff4:	bl	3d70 <_Py_Dealloc@plt>
    7ff8:	b	7f84 <PyInit__elementtree@@Base+0x3c60>
    7ffc:	ldr	x8, [x22]
    8000:	subs	x8, x8, #0x1
    8004:	str	x8, [x22]
    8008:	b.ne	8014 <PyInit__elementtree@@Base+0x3cf0>  // b.any
    800c:	mov	x0, x22
    8010:	bl	3d70 <_Py_Dealloc@plt>
    8014:	mov	x0, xzr
    8018:	mov	w1, wzr
    801c:	bl	4200 <PyUnicode_New@plt>
    8020:	b	7f80 <PyInit__elementtree@@Base+0x3c5c>
    8024:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    8028:	add	x0, x0, #0x79
    802c:	mov	x1, xzr
    8030:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    8034:	cbz	x0, 8084 <PyInit__elementtree@@Base+0x3d60>
    8038:	mov	x1, x20
    803c:	mov	x21, x0
    8040:	bl	3d20 <PyUnicode_Join@plt>
    8044:	ldr	x8, [x21]
    8048:	mov	x19, x0
    804c:	subs	x8, x8, #0x1
    8050:	str	x8, [x21]
    8054:	b.ne	8060 <PyInit__elementtree@@Base+0x3d3c>  // b.any
    8058:	mov	x0, x21
    805c:	bl	3d70 <_Py_Dealloc@plt>
    8060:	cbz	x19, 7fe0 <PyInit__elementtree@@Base+0x3cbc>
    8064:	str	x19, [x22, #24]
    8068:	ldr	x8, [x20]
    806c:	subs	x8, x8, #0x1
    8070:	str	x8, [x20]
    8074:	b.ne	7fc8 <PyInit__elementtree@@Base+0x3ca4>  // b.any
    8078:	mov	x0, x20
    807c:	bl	3d70 <_Py_Dealloc@plt>
    8080:	b	7fc8 <PyInit__elementtree@@Base+0x3ca4>
    8084:	mov	x19, xzr
    8088:	b	7fe0 <PyInit__elementtree@@Base+0x3cbc>
    808c:	sub	sp, sp, #0x60
    8090:	stp	x29, x30, [sp, #32]
    8094:	str	x23, [sp, #48]
    8098:	stp	x22, x21, [sp, #64]
    809c:	stp	x20, x19, [sp, #80]
    80a0:	add	x29, sp, #0x20
    80a4:	mov	x19, x0
    80a8:	cbz	x3, 80f4 <PyInit__elementtree@@Base+0x3dd0>
    80ac:	ldr	x8, [x3, #16]
    80b0:	add	x20, x8, x2
    80b4:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    80b8:	add	x8, sp, #0x10
    80bc:	add	x4, x4, #0xc80
    80c0:	mov	w5, #0x1                   	// #1
    80c4:	mov	w6, #0x2                   	// #2
    80c8:	mov	x0, x1
    80cc:	mov	x1, x2
    80d0:	mov	x2, xzr
    80d4:	mov	w7, wzr
    80d8:	str	x8, [sp]
    80dc:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    80e0:	mov	x1, x0
    80e4:	mov	x2, x20
    80e8:	cbnz	x0, 810c <PyInit__elementtree@@Base+0x3de8>
    80ec:	mov	x21, xzr
    80f0:	b	820c <PyInit__elementtree@@Base+0x3ee8>
    80f4:	mov	x20, x2
    80f8:	cbz	x1, 80b4 <PyInit__elementtree@@Base+0x3d90>
    80fc:	sub	x8, x2, #0x1
    8100:	cmp	x8, #0x2
    8104:	mov	x20, x2
    8108:	b.cs	80b4 <PyInit__elementtree@@Base+0x3d90>  // b.hs, b.nlast
    810c:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8110:	ldr	x20, [x1]
    8114:	ldr	x23, [x23, #3976]
    8118:	cmp	x2, #0x1
    811c:	mov	x21, x23
    8120:	b.eq	8128 <PyInit__elementtree@@Base+0x3e04>  // b.none
    8124:	ldr	x21, [x1, #8]
    8128:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    812c:	add	x0, x0, #0xd40
    8130:	bl	3fc0 <PyState_FindModule@plt>
    8134:	bl	3e10 <PyModule_GetState@plt>
    8138:	mov	x22, x0
    813c:	mov	x0, x20
    8140:	bl	9690 <PyInit__elementtree@@Base+0x536c>
    8144:	cmp	x21, x23
    8148:	b.ne	81e8 <PyInit__elementtree@@Base+0x3ec4>  // b.any
    814c:	cbnz	w0, 81e8 <PyInit__elementtree@@Base+0x3ec4>
    8150:	mov	x0, xzr
    8154:	bl	3c50 <PyList_New@plt>
    8158:	mov	x21, x0
    815c:	cbz	x0, 820c <PyInit__elementtree@@Base+0x3ee8>
    8160:	ldr	x8, [x19, #40]
    8164:	cbz	x8, 820c <PyInit__elementtree@@Base+0x3ee8>
    8168:	ldr	x9, [x8, #8]
    816c:	cmp	x9, #0x1
    8170:	b.lt	820c <PyInit__elementtree@@Base+0x3ee8>  // b.tstop
    8174:	mov	x23, xzr
    8178:	b	8190 <PyInit__elementtree@@Base+0x3e6c>
    817c:	ldr	x8, [x19, #40]
    8180:	add	x23, x23, #0x1
    8184:	ldr	x9, [x8, #8]
    8188:	cmp	x23, x9
    818c:	b.ge	820c <PyInit__elementtree@@Base+0x3ee8>  // b.tcont
    8190:	ldr	x8, [x8, #24]
    8194:	mov	w2, #0x2                   	// #2
    8198:	mov	x1, x20
    819c:	ldr	x22, [x8, x23, lsl #3]
    81a0:	ldr	x8, [x22]
    81a4:	ldr	x0, [x22, #16]
    81a8:	add	x8, x8, #0x1
    81ac:	str	x8, [x22]
    81b0:	bl	3ec0 <PyObject_RichCompareBool@plt>
    81b4:	cbz	w0, 81cc <PyInit__elementtree@@Base+0x3ea8>
    81b8:	tbnz	w0, #31, 8228 <PyInit__elementtree@@Base+0x3f04>
    81bc:	mov	x0, x21
    81c0:	mov	x1, x22
    81c4:	bl	3f00 <PyList_Append@plt>
    81c8:	tbnz	w0, #31, 8228 <PyInit__elementtree@@Base+0x3f04>
    81cc:	ldr	x8, [x22]
    81d0:	subs	x8, x8, #0x1
    81d4:	str	x8, [x22]
    81d8:	b.ne	817c <PyInit__elementtree@@Base+0x3e58>  // b.any
    81dc:	mov	x0, x22
    81e0:	bl	3d70 <_Py_Dealloc@plt>
    81e4:	b	817c <PyInit__elementtree@@Base+0x3e58>
    81e8:	ldr	x0, [x22, #16]
    81ec:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    81f0:	add	x1, x1, #0xb48
    81f4:	mov	x2, x19
    81f8:	mov	x3, x20
    81fc:	mov	x4, x21
    8200:	mov	x5, xzr
    8204:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    8208:	mov	x21, x0
    820c:	mov	x0, x21
    8210:	ldp	x20, x19, [sp, #80]
    8214:	ldp	x22, x21, [sp, #64]
    8218:	ldr	x23, [sp, #48]
    821c:	ldp	x29, x30, [sp, #32]
    8220:	add	sp, sp, #0x60
    8224:	ret
    8228:	ldr	x8, [x22]
    822c:	subs	x8, x8, #0x1
    8230:	str	x8, [x22]
    8234:	b.ne	8240 <PyInit__elementtree@@Base+0x3f1c>  // b.any
    8238:	mov	x0, x22
    823c:	bl	3d70 <_Py_Dealloc@plt>
    8240:	ldr	x8, [x21]
    8244:	subs	x8, x8, #0x1
    8248:	str	x8, [x21]
    824c:	b.ne	80ec <PyInit__elementtree@@Base+0x3dc8>  // b.any
    8250:	mov	x0, x21
    8254:	bl	3d70 <_Py_Dealloc@plt>
    8258:	mov	x21, xzr
    825c:	b	820c <PyInit__elementtree@@Base+0x3ee8>
    8260:	stp	x29, x30, [sp, #-48]!
    8264:	str	x21, [sp, #16]
    8268:	stp	x20, x19, [sp, #32]
    826c:	mov	x29, sp
    8270:	ldr	x8, [x1, #8]
    8274:	adrp	x9, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8278:	add	x9, x9, #0xe8
    827c:	mov	x19, x1
    8280:	cmp	x8, x9
    8284:	mov	x20, x0
    8288:	b.eq	82c0 <PyInit__elementtree@@Base+0x3f9c>  // b.none
    828c:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8290:	add	x21, x21, #0xe8
    8294:	mov	x0, x8
    8298:	mov	x1, x21
    829c:	bl	4160 <PyType_IsSubtype@plt>
    82a0:	cbz	w0, 8320 <PyInit__elementtree@@Base+0x3ffc>
    82a4:	ldr	x0, [x19, #8]
    82a8:	cmp	x0, x21
    82ac:	b.eq	82c0 <PyInit__elementtree@@Base+0x3f9c>  // b.none
    82b0:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    82b4:	add	x1, x1, #0xe8
    82b8:	bl	4160 <PyType_IsSubtype@plt>
    82bc:	cbz	w0, 8344 <PyInit__elementtree@@Base+0x4020>
    82c0:	mov	w1, #0x1                   	// #1
    82c4:	mov	x0, x20
    82c8:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    82cc:	tbnz	w0, #31, 8364 <PyInit__elementtree@@Base+0x4040>
    82d0:	ldr	x8, [x19]
    82d4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    82d8:	add	x8, x8, #0x1
    82dc:	str	x8, [x19]
    82e0:	ldr	x8, [x20, #40]
    82e4:	ldr	x9, [x8, #24]
    82e8:	ldr	x8, [x8, #8]
    82ec:	str	x19, [x9, x8, lsl #3]
    82f0:	ldr	x8, [x20, #40]
    82f4:	ldr	x9, [x8, #8]
    82f8:	add	x9, x9, #0x1
    82fc:	str	x9, [x8, #8]
    8300:	ldr	x0, [x0, #3976]
    8304:	ldr	x8, [x0]
    8308:	add	x8, x8, #0x1
    830c:	str	x8, [x0]
    8310:	ldp	x20, x19, [sp, #32]
    8314:	ldr	x21, [sp, #16]
    8318:	ldp	x29, x30, [sp], #48
    831c:	ret
    8320:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8324:	ldr	x2, [x8, #256]
    8328:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    832c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8330:	add	x0, x0, #0xf37
    8334:	add	x1, x1, #0x18c
    8338:	mov	x3, x19
    833c:	bl	3ed0 <_PyArg_BadArgument@plt>
    8340:	b	8364 <PyInit__elementtree@@Base+0x4040>
    8344:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8348:	ldr	x8, [x19, #8]
    834c:	ldr	x9, [x9, #3944]
    8350:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    8354:	add	x1, x1, #0xe3f
    8358:	ldr	x2, [x8, #24]
    835c:	ldr	x0, [x9]
    8360:	bl	4180 <PyErr_Format@plt>
    8364:	mov	x0, xzr
    8368:	ldp	x20, x19, [sp, #32]
    836c:	ldr	x21, [sp, #16]
    8370:	ldp	x29, x30, [sp], #48
    8374:	ret
    8378:	stp	x29, x30, [sp, #-64]!
    837c:	stp	x24, x23, [sp, #16]
    8380:	stp	x22, x21, [sp, #32]
    8384:	stp	x20, x19, [sp, #48]
    8388:	mov	x29, sp
    838c:	mov	x21, x1
    8390:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8394:	mov	x20, x0
    8398:	add	x1, x1, #0x79
    839c:	mov	x0, x21
    83a0:	bl	4240 <PySequence_Fast@plt>
    83a4:	cbz	x0, 8464 <PyInit__elementtree@@Base+0x4140>
    83a8:	ldr	x8, [x0, #16]
    83ac:	mov	x19, x0
    83b0:	cmp	x8, #0x1
    83b4:	b.lt	8488 <PyInit__elementtree@@Base+0x4164>  // b.tstop
    83b8:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    83bc:	mov	x23, xzr
    83c0:	add	x24, x19, #0x18
    83c4:	add	x21, x21, #0xe8
    83c8:	b	83e0 <PyInit__elementtree@@Base+0x40bc>
    83cc:	ldr	x8, [x19, #16]
    83d0:	add	x23, x23, #0x1
    83d4:	add	x24, x24, #0x8
    83d8:	cmp	x23, x8
    83dc:	b.ge	8488 <PyInit__elementtree@@Base+0x4164>  // b.tcont
    83e0:	ldr	x8, [x19, #8]
    83e4:	ldrb	w9, [x8, #171]
    83e8:	mov	x8, x24
    83ec:	tbz	w9, #1, 83f8 <PyInit__elementtree@@Base+0x40d4>
    83f0:	ldr	x8, [x19, #24]
    83f4:	add	x8, x8, x23, lsl #3
    83f8:	ldr	x22, [x8]
    83fc:	ldp	x8, x0, [x22]
    8400:	add	x8, x8, #0x1
    8404:	cmp	x0, x21
    8408:	str	x8, [x22]
    840c:	b.eq	841c <PyInit__elementtree@@Base+0x40f8>  // b.none
    8410:	mov	x1, x21
    8414:	bl	4160 <PyType_IsSubtype@plt>
    8418:	cbz	w0, 84b8 <PyInit__elementtree@@Base+0x4194>
    841c:	mov	w1, #0x1                   	// #1
    8420:	mov	x0, x20
    8424:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    8428:	tbnz	w0, #31, 84d8 <PyInit__elementtree@@Base+0x41b4>
    842c:	ldr	x8, [x20, #40]
    8430:	ldr	x10, [x22]
    8434:	ldr	x9, [x8, #24]
    8438:	ldr	x8, [x8, #8]
    843c:	str	x22, [x9, x8, lsl #3]
    8440:	ldr	x8, [x20, #40]
    8444:	ldr	x9, [x8, #8]
    8448:	add	x9, x9, #0x1
    844c:	str	x9, [x8, #8]
    8450:	str	x10, [x22]
    8454:	cbnz	x10, 83cc <PyInit__elementtree@@Base+0x40a8>
    8458:	mov	x0, x22
    845c:	bl	3d70 <_Py_Dealloc@plt>
    8460:	b	83cc <PyInit__elementtree@@Base+0x40a8>
    8464:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8468:	ldr	x8, [x21, #8]
    846c:	ldr	x9, [x9, #3944]
    8470:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8474:	add	x1, x1, #0x5a
    8478:	ldr	x2, [x8, #24]
    847c:	ldr	x0, [x9]
    8480:	bl	4180 <PyErr_Format@plt>
    8484:	b	84f8 <PyInit__elementtree@@Base+0x41d4>
    8488:	ldr	x8, [x19]
    848c:	subs	x8, x8, #0x1
    8490:	str	x8, [x19]
    8494:	b.ne	84a0 <PyInit__elementtree@@Base+0x417c>  // b.any
    8498:	mov	x0, x19
    849c:	bl	3d70 <_Py_Dealloc@plt>
    84a0:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    84a4:	ldr	x0, [x0, #3976]
    84a8:	ldr	x8, [x0]
    84ac:	add	x8, x8, #0x1
    84b0:	str	x8, [x0]
    84b4:	b	84fc <PyInit__elementtree@@Base+0x41d8>
    84b8:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    84bc:	ldr	x8, [x22, #8]
    84c0:	ldr	x9, [x9, #3944]
    84c4:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    84c8:	add	x1, x1, #0xe3f
    84cc:	ldr	x2, [x8, #24]
    84d0:	ldr	x0, [x9]
    84d4:	bl	4180 <PyErr_Format@plt>
    84d8:	ldr	x8, [x19]
    84dc:	subs	x8, x8, #0x1
    84e0:	str	x8, [x19]
    84e4:	b.eq	8510 <PyInit__elementtree@@Base+0x41ec>  // b.none
    84e8:	ldr	x8, [x22]
    84ec:	subs	x8, x8, #0x1
    84f0:	str	x8, [x22]
    84f4:	b.eq	8528 <PyInit__elementtree@@Base+0x4204>  // b.none
    84f8:	mov	x0, xzr
    84fc:	ldp	x20, x19, [sp, #48]
    8500:	ldp	x22, x21, [sp, #32]
    8504:	ldp	x24, x23, [sp, #16]
    8508:	ldp	x29, x30, [sp], #64
    850c:	ret
    8510:	mov	x0, x19
    8514:	bl	3d70 <_Py_Dealloc@plt>
    8518:	ldr	x8, [x22]
    851c:	subs	x8, x8, #0x1
    8520:	str	x8, [x22]
    8524:	b.ne	84f8 <PyInit__elementtree@@Base+0x41d4>  // b.any
    8528:	mov	x0, x22
    852c:	bl	3d70 <_Py_Dealloc@plt>
    8530:	b	84f8 <PyInit__elementtree@@Base+0x41d4>
    8534:	stp	x29, x30, [sp, #-48]!
    8538:	stp	x22, x21, [sp, #16]
    853c:	stp	x20, x19, [sp, #32]
    8540:	mov	x29, sp
    8544:	mov	x20, x1
    8548:	cmp	x2, #0x2
    854c:	mov	x19, x0
    8550:	b.eq	8574 <PyInit__elementtree@@Base+0x4250>  // b.none
    8554:	mov	x8, x2
    8558:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    855c:	add	x0, x0, #0xe1
    8560:	mov	w2, #0x2                   	// #2
    8564:	mov	w3, #0x2                   	// #2
    8568:	mov	x1, x8
    856c:	bl	3f60 <_PyArg_CheckPositional@plt>
    8570:	cbz	w0, 85b4 <PyInit__elementtree@@Base+0x4290>
    8574:	ldr	x8, [x20]
    8578:	ldr	x0, [x8, #8]
    857c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8580:	ldr	x8, [x8, #3896]
    8584:	cmp	x0, x8
    8588:	b.eq	859c <PyInit__elementtree@@Base+0x4278>  // b.none
    858c:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8590:	ldr	x1, [x1, #3896]
    8594:	bl	4160 <PyType_IsSubtype@plt>
    8598:	cbz	w0, 85c8 <PyInit__elementtree@@Base+0x42a4>
    859c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    85a0:	ldr	x8, [x8, #3944]
    85a4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    85a8:	add	x1, x1, #0x195
    85ac:	ldr	x0, [x8]
    85b0:	bl	3de0 <PyErr_SetString@plt>
    85b4:	mov	x0, xzr
    85b8:	ldp	x20, x19, [sp, #32]
    85bc:	ldp	x22, x21, [sp, #16]
    85c0:	ldp	x29, x30, [sp], #48
    85c4:	ret
    85c8:	ldr	x0, [x20]
    85cc:	bl	41e0 <PyNumber_Index@plt>
    85d0:	cbz	x0, 8600 <PyInit__elementtree@@Base+0x42dc>
    85d4:	mov	x22, x0
    85d8:	bl	3eb0 <PyLong_AsSsize_t@plt>
    85dc:	ldr	x8, [x22]
    85e0:	mov	x21, x0
    85e4:	subs	x8, x8, #0x1
    85e8:	str	x8, [x22]
    85ec:	b.ne	85f8 <PyInit__elementtree@@Base+0x42d4>  // b.any
    85f0:	mov	x0, x22
    85f4:	bl	3d70 <_Py_Dealloc@plt>
    85f8:	cmn	x21, #0x1
    85fc:	b.ne	860c <PyInit__elementtree@@Base+0x42e8>  // b.any
    8600:	bl	3f80 <PyErr_Occurred@plt>
    8604:	cbnz	x0, 85b4 <PyInit__elementtree@@Base+0x4290>
    8608:	mov	x21, #0xffffffffffffffff    	// #-1
    860c:	ldr	x22, [x20, #8]
    8610:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8614:	add	x8, x8, #0xe8
    8618:	ldr	x0, [x22, #8]
    861c:	cmp	x0, x8
    8620:	b.eq	8638 <PyInit__elementtree@@Base+0x4314>  // b.none
    8624:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8628:	add	x1, x1, #0xe8
    862c:	bl	4160 <PyType_IsSubtype@plt>
    8630:	cbz	w0, 8720 <PyInit__elementtree@@Base+0x43fc>
    8634:	ldr	x22, [x20, #8]
    8638:	ldr	x0, [x19, #40]
    863c:	cbnz	x0, 867c <PyInit__elementtree@@Base+0x4358>
    8640:	mov	w0, #0x40                  	// #64
    8644:	bl	3e00 <PyObject_Malloc@plt>
    8648:	str	x0, [x19, #40]
    864c:	cbz	x0, 8744 <PyInit__elementtree@@Base+0x4420>
    8650:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8654:	ldr	x8, [x8, #3976]
    8658:	adrp	x10, c000 <PyInit__elementtree@@Base+0x7cdc>
    865c:	ldr	q0, [x10, #3392]
    8660:	add	x11, x0, #0x20
    8664:	ldr	x9, [x8]
    8668:	add	x9, x9, #0x1
    866c:	str	x9, [x8]
    8670:	str	x8, [x0]
    8674:	stur	q0, [x0, #8]
    8678:	str	x11, [x0, #24]
    867c:	ldr	x8, [x0, #8]
    8680:	cmp	x21, #0x0
    8684:	mov	w1, #0x1                   	// #1
    8688:	mov	x0, x19
    868c:	add	x9, x8, x21
    8690:	bic	x9, x9, x9, asr #63
    8694:	csel	x9, x9, x21, lt  // lt = tstop
    8698:	cmp	x9, x8
    869c:	csel	x20, x8, x9, gt
    86a0:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    86a4:	tbnz	w0, #31, 85b4 <PyInit__elementtree@@Base+0x4290>
    86a8:	ldr	x8, [x19, #40]
    86ac:	ldr	x9, [x8, #8]
    86b0:	cmp	x9, x20
    86b4:	b.le	86d8 <PyInit__elementtree@@Base+0x43b4>
    86b8:	ldr	x8, [x8, #24]
    86bc:	add	x8, x8, x9, lsl #3
    86c0:	ldur	x10, [x8, #-8]
    86c4:	sub	x9, x9, #0x1
    86c8:	str	x10, [x8]
    86cc:	ldr	x8, [x19, #40]
    86d0:	cmp	x9, x20
    86d4:	b.gt	86b8 <PyInit__elementtree@@Base+0x4394>
    86d8:	ldr	x9, [x22]
    86dc:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    86e0:	add	x9, x9, #0x1
    86e4:	str	x9, [x22]
    86e8:	ldr	x8, [x8, #24]
    86ec:	str	x22, [x8, x20, lsl #3]
    86f0:	ldr	x8, [x19, #40]
    86f4:	ldr	x9, [x8, #8]
    86f8:	add	x9, x9, #0x1
    86fc:	str	x9, [x8, #8]
    8700:	ldr	x0, [x0, #3976]
    8704:	ldr	x8, [x0]
    8708:	add	x8, x8, #0x1
    870c:	str	x8, [x0]
    8710:	ldp	x20, x19, [sp, #32]
    8714:	ldp	x22, x21, [sp, #16]
    8718:	ldp	x29, x30, [sp], #48
    871c:	ret
    8720:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8724:	ldr	x2, [x8, #256]
    8728:	ldr	x3, [x20, #8]
    872c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    8730:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8734:	add	x0, x0, #0xe1
    8738:	add	x1, x1, #0x1ba
    873c:	bl	3ed0 <_PyArg_BadArgument@plt>
    8740:	b	85b4 <PyInit__elementtree@@Base+0x4290>
    8744:	bl	3d80 <PyErr_NoMemory@plt>
    8748:	b	85b4 <PyInit__elementtree@@Base+0x4290>
    874c:	stp	x29, x30, [sp, #-48]!
    8750:	str	x21, [sp, #16]
    8754:	stp	x20, x19, [sp, #32]
    8758:	mov	x29, sp
    875c:	ldr	x8, [x1, #8]
    8760:	adrp	x9, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8764:	add	x9, x9, #0xe8
    8768:	mov	x20, x1
    876c:	cmp	x8, x9
    8770:	mov	x19, x0
    8774:	b.eq	878c <PyInit__elementtree@@Base+0x4468>  // b.none
    8778:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    877c:	add	x1, x1, #0xe8
    8780:	mov	x0, x8
    8784:	bl	4160 <PyType_IsSubtype@plt>
    8788:	cbz	w0, 8880 <PyInit__elementtree@@Base+0x455c>
    878c:	ldr	x8, [x19, #40]
    8790:	cbz	x8, 88b0 <PyInit__elementtree@@Base+0x458c>
    8794:	ldr	x9, [x8, #8]
    8798:	cmp	x9, #0x1
    879c:	b.lt	88a4 <PyInit__elementtree@@Base+0x4580>  // b.tstop
    87a0:	mov	x21, xzr
    87a4:	ldr	x9, [x8, #24]
    87a8:	ldr	x0, [x9, x21, lsl #3]
    87ac:	cmp	x0, x20
    87b0:	b.eq	87e0 <PyInit__elementtree@@Base+0x44bc>  // b.none
    87b4:	mov	w2, #0x2                   	// #2
    87b8:	mov	x1, x20
    87bc:	bl	3ec0 <PyObject_RichCompareBool@plt>
    87c0:	cmp	w0, #0x1
    87c4:	b.ge	88dc <PyInit__elementtree@@Base+0x45b8>  // b.tcont
    87c8:	tbnz	w0, #31, 88c8 <PyInit__elementtree@@Base+0x45a4>
    87cc:	ldr	x8, [x19, #40]
    87d0:	add	x21, x21, #0x1
    87d4:	ldr	x9, [x8, #8]
    87d8:	cmp	x21, x9
    87dc:	b.lt	87a4 <PyInit__elementtree@@Base+0x4480>  // b.tstop
    87e0:	ldr	x9, [x8, #8]
    87e4:	cmp	x21, x9
    87e8:	b.ge	88b0 <PyInit__elementtree@@Base+0x458c>  // b.tcont
    87ec:	ldr	x10, [x8, #24]
    87f0:	sub	x9, x9, #0x1
    87f4:	cmp	x21, x9
    87f8:	ldr	x0, [x10, x21, lsl #3]
    87fc:	str	x9, [x8, #8]
    8800:	b.ge	8848 <PyInit__elementtree@@Base+0x4524>  // b.tcont
    8804:	add	x9, x21, #0x1
    8808:	ldr	x8, [x10, x9, lsl #3]
    880c:	str	x8, [x10, x21, lsl #3]
    8810:	ldr	x8, [x19, #40]
    8814:	ldr	x10, [x8, #8]
    8818:	cmp	x9, x10
    881c:	b.ge	8848 <PyInit__elementtree@@Base+0x4524>  // b.tcont
    8820:	ldr	x8, [x8, #24]
    8824:	add	x10, x21, #0x2
    8828:	add	x8, x8, x21, lsl #3
    882c:	ldr	x9, [x8, #16]
    8830:	add	x21, x21, #0x1
    8834:	str	x9, [x8, #8]
    8838:	ldr	x8, [x19, #40]
    883c:	ldr	x9, [x8, #8]
    8840:	cmp	x10, x9
    8844:	b.lt	8820 <PyInit__elementtree@@Base+0x44fc>  // b.tstop
    8848:	ldr	x8, [x0]
    884c:	subs	x8, x8, #0x1
    8850:	str	x8, [x0]
    8854:	b.ne	885c <PyInit__elementtree@@Base+0x4538>  // b.any
    8858:	bl	3d70 <_Py_Dealloc@plt>
    885c:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8860:	ldr	x0, [x0, #3976]
    8864:	ldr	x8, [x0]
    8868:	add	x8, x8, #0x1
    886c:	str	x8, [x0]
    8870:	ldp	x20, x19, [sp, #32]
    8874:	ldr	x21, [sp, #16]
    8878:	ldp	x29, x30, [sp], #48
    887c:	ret
    8880:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    8884:	ldr	x2, [x8, #256]
    8888:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    888c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8890:	add	x0, x0, #0xe8
    8894:	add	x1, x1, #0x18c
    8898:	mov	x3, x20
    889c:	bl	3ed0 <_PyArg_BadArgument@plt>
    88a0:	b	88c8 <PyInit__elementtree@@Base+0x45a4>
    88a4:	mov	x21, xzr
    88a8:	cmp	x21, x9
    88ac:	b.lt	87ec <PyInit__elementtree@@Base+0x44c8>  // b.tstop
    88b0:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    88b4:	ldr	x8, [x8, #3928]
    88b8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    88bc:	add	x1, x1, #0x1c5
    88c0:	ldr	x0, [x8]
    88c4:	bl	3de0 <PyErr_SetString@plt>
    88c8:	mov	x0, xzr
    88cc:	ldp	x20, x19, [sp, #32]
    88d0:	ldr	x21, [sp, #16]
    88d4:	ldp	x29, x30, [sp], #48
    88d8:	ret
    88dc:	ldr	x8, [x19, #40]
    88e0:	ldr	x9, [x8, #8]
    88e4:	cmp	x21, x9
    88e8:	b.ge	88b0 <PyInit__elementtree@@Base+0x458c>  // b.tcont
    88ec:	b	87ec <PyInit__elementtree@@Base+0x44c8>
    88f0:	sub	sp, sp, #0x40
    88f4:	stp	x29, x30, [sp, #16]
    88f8:	str	x21, [sp, #32]
    88fc:	stp	x20, x19, [sp, #48]
    8900:	add	x29, sp, #0x10
    8904:	mov	x20, x2
    8908:	mov	x19, x0
    890c:	cbz	x3, 894c <PyInit__elementtree@@Base+0x4628>
    8910:	ldr	x21, [x3, #16]
    8914:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    8918:	add	x8, x29, #0x18
    891c:	add	x4, x4, #0x8d0
    8920:	mov	w6, #0x1                   	// #1
    8924:	mov	x0, x1
    8928:	mov	x1, x20
    892c:	mov	x2, xzr
    8930:	mov	w5, wzr
    8934:	mov	w7, wzr
    8938:	str	x8, [sp]
    893c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8940:	mov	x1, x0
    8944:	cbnz	x0, 895c <PyInit__elementtree@@Base+0x4638>
    8948:	b	897c <PyInit__elementtree@@Base+0x4658>
    894c:	mov	x21, xzr
    8950:	cbz	x1, 8914 <PyInit__elementtree@@Base+0x45f0>
    8954:	cmp	x20, #0x2
    8958:	b.cs	8914 <PyInit__elementtree@@Base+0x45f0>  // b.hs, b.nlast
    895c:	cmn	x21, x20
    8960:	b.ne	8970 <PyInit__elementtree@@Base+0x464c>  // b.any
    8964:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8968:	ldr	x1, [x1, #3976]
    896c:	b	8974 <PyInit__elementtree@@Base+0x4650>
    8970:	ldr	x1, [x1]
    8974:	mov	x0, x19
    8978:	bl	9998 <PyInit__elementtree@@Base+0x5674>
    897c:	ldp	x20, x19, [sp, #48]
    8980:	ldr	x21, [sp, #32]
    8984:	ldp	x29, x30, [sp, #16]
    8988:	add	sp, sp, #0x40
    898c:	ret
    8990:	stp	x29, x30, [sp, #-32]!
    8994:	stp	x20, x19, [sp, #16]
    8998:	mov	x29, sp
    899c:	mov	x20, x0
    89a0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    89a4:	add	x0, x0, #0xda8
    89a8:	bl	3df0 <_PyObject_GC_New@plt>
    89ac:	mov	x19, x0
    89b0:	cbz	x0, 8a08 <PyInit__elementtree@@Base+0x46e4>
    89b4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    89b8:	ldr	x8, [x8, #3976]
    89bc:	mov	w10, #0x1                   	// #1
    89c0:	mov	x0, x19
    89c4:	ldr	x9, [x8]
    89c8:	add	x9, x9, #0x1
    89cc:	str	x9, [x8]
    89d0:	str	x8, [x19, #48]
    89d4:	str	w10, [x19, #56]
    89d8:	ldr	x8, [x20]
    89dc:	add	x8, x8, #0x1
    89e0:	str	x8, [x20]
    89e4:	str	x20, [x19, #40]
    89e8:	bl	3dc0 <PyObject_GC_Track@plt>
    89ec:	mov	w0, #0x80                  	// #128
    89f0:	bl	41f0 <PyMem_Malloc@plt>
    89f4:	str	x0, [x19, #16]
    89f8:	cbz	x0, 8a18 <PyInit__elementtree@@Base+0x46f4>
    89fc:	adrp	x8, c000 <PyInit__elementtree@@Base+0x7cdc>
    8a00:	ldr	q0, [x8, #3408]
    8a04:	stur	q0, [x19, #24]
    8a08:	mov	x0, x19
    8a0c:	ldp	x20, x19, [sp, #16]
    8a10:	ldp	x29, x30, [sp], #32
    8a14:	ret
    8a18:	ldr	x8, [x19]
    8a1c:	subs	x8, x8, #0x1
    8a20:	str	x8, [x19]
    8a24:	b.ne	8a30 <PyInit__elementtree@@Base+0x470c>  // b.any
    8a28:	mov	x0, x19
    8a2c:	bl	3d70 <_Py_Dealloc@plt>
    8a30:	bl	3d80 <PyErr_NoMemory@plt>
    8a34:	mov	x19, xzr
    8a38:	mov	x0, x19
    8a3c:	ldp	x20, x19, [sp, #16]
    8a40:	ldp	x29, x30, [sp], #32
    8a44:	ret
    8a48:	sub	sp, sp, #0x50
    8a4c:	stp	x29, x30, [sp, #32]
    8a50:	stp	x22, x21, [sp, #48]
    8a54:	stp	x20, x19, [sp, #64]
    8a58:	add	x29, sp, #0x20
    8a5c:	mov	x19, x0
    8a60:	cbz	x3, 8aa8 <PyInit__elementtree@@Base+0x4784>
    8a64:	ldr	x8, [x3, #16]
    8a68:	add	x20, x8, x2
    8a6c:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    8a70:	add	x8, sp, #0x10
    8a74:	add	x4, x4, #0xcc0
    8a78:	mov	w5, #0x1                   	// #1
    8a7c:	mov	w6, #0x2                   	// #2
    8a80:	mov	x0, x1
    8a84:	mov	x1, x2
    8a88:	mov	x2, xzr
    8a8c:	mov	w7, wzr
    8a90:	str	x8, [sp]
    8a94:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8a98:	mov	x1, x0
    8a9c:	mov	x2, x20
    8aa0:	cbnz	x0, 8ac0 <PyInit__elementtree@@Base+0x479c>
    8aa4:	b	8b0c <PyInit__elementtree@@Base+0x47e8>
    8aa8:	mov	x20, x2
    8aac:	cbz	x1, 8a6c <PyInit__elementtree@@Base+0x4748>
    8ab0:	sub	x8, x2, #0x1
    8ab4:	cmp	x8, #0x2
    8ab8:	mov	x20, x2
    8abc:	b.cs	8a6c <PyInit__elementtree@@Base+0x4748>  // b.hs, b.nlast
    8ac0:	ldr	x20, [x1]
    8ac4:	cmp	x2, #0x1
    8ac8:	b.ne	8ad8 <PyInit__elementtree@@Base+0x47b4>  // b.any
    8acc:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8ad0:	ldr	x21, [x21, #3976]
    8ad4:	b	8adc <PyInit__elementtree@@Base+0x47b8>
    8ad8:	ldr	x21, [x1, #8]
    8adc:	adrp	x22, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    8ae0:	add	x22, x22, #0xb60
    8ae4:	add	x0, x22, #0x1e0
    8ae8:	bl	3fc0 <PyState_FindModule@plt>
    8aec:	bl	3e10 <PyModule_GetState@plt>
    8af0:	ldr	x0, [x0, #16]
    8af4:	mov	x1, x22
    8af8:	mov	x2, x19
    8afc:	mov	x3, x20
    8b00:	mov	x4, x21
    8b04:	mov	x5, xzr
    8b08:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    8b0c:	ldp	x20, x19, [sp, #64]
    8b10:	ldp	x22, x21, [sp, #48]
    8b14:	ldp	x29, x30, [sp, #32]
    8b18:	add	sp, sp, #0x50
    8b1c:	ret
    8b20:	sub	sp, sp, #0x40
    8b24:	stp	x29, x30, [sp, #16]
    8b28:	str	x21, [sp, #32]
    8b2c:	stp	x20, x19, [sp, #48]
    8b30:	add	x29, sp, #0x10
    8b34:	mov	x20, x2
    8b38:	mov	x19, x0
    8b3c:	cbz	x3, 8b7c <PyInit__elementtree@@Base+0x4858>
    8b40:	ldr	x21, [x3, #16]
    8b44:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    8b48:	add	x8, x29, #0x18
    8b4c:	add	x4, x4, #0x910
    8b50:	mov	w6, #0x1                   	// #1
    8b54:	mov	x0, x1
    8b58:	mov	x1, x20
    8b5c:	mov	x2, xzr
    8b60:	mov	w5, wzr
    8b64:	mov	w7, wzr
    8b68:	str	x8, [sp]
    8b6c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8b70:	mov	x1, x0
    8b74:	cbnz	x0, 8b8c <PyInit__elementtree@@Base+0x4868>
    8b78:	b	8bd8 <PyInit__elementtree@@Base+0x48b4>
    8b7c:	mov	x21, xzr
    8b80:	cbz	x1, 8b44 <PyInit__elementtree@@Base+0x4820>
    8b84:	cmp	x20, #0x2
    8b88:	b.cs	8b44 <PyInit__elementtree@@Base+0x4820>  // b.hs, b.nlast
    8b8c:	cmn	x21, x20
    8b90:	b.ne	8ba0 <PyInit__elementtree@@Base+0x487c>  // b.any
    8b94:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8b98:	ldr	x20, [x20, #3976]
    8b9c:	b	8ba4 <PyInit__elementtree@@Base+0x4880>
    8ba0:	ldr	x20, [x1]
    8ba4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8ba8:	ldr	x8, [x8, #3936]
    8bac:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8bb0:	add	x1, x1, #0x1e7
    8bb4:	mov	w2, #0x1                   	// #1
    8bb8:	ldr	x0, [x8]
    8bbc:	bl	3d60 <PyErr_WarnEx@plt>
    8bc0:	tbnz	w0, #31, 8bd4 <PyInit__elementtree@@Base+0x48b0>
    8bc4:	mov	x0, x19
    8bc8:	mov	x1, x20
    8bcc:	bl	9998 <PyInit__elementtree@@Base+0x5674>
    8bd0:	b	8bd8 <PyInit__elementtree@@Base+0x48b4>
    8bd4:	mov	x0, xzr
    8bd8:	ldp	x20, x19, [sp, #48]
    8bdc:	ldr	x21, [sp, #32]
    8be0:	ldp	x29, x30, [sp, #16]
    8be4:	add	sp, sp, #0x40
    8be8:	ret
    8bec:	stp	x29, x30, [sp, #-32]!
    8bf0:	str	x19, [sp, #16]
    8bf4:	mov	x29, sp
    8bf8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8bfc:	ldr	x8, [x8, #3936]
    8c00:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8c04:	mov	x19, x0
    8c08:	add	x1, x1, #0x24a
    8c0c:	ldr	x8, [x8]
    8c10:	mov	w2, #0x1                   	// #1
    8c14:	mov	x0, x8
    8c18:	bl	3d60 <PyErr_WarnEx@plt>
    8c1c:	tbnz	w0, #31, 8c88 <PyInit__elementtree@@Base+0x4964>
    8c20:	ldr	x8, [x19, #40]
    8c24:	cbz	x8, 8c98 <PyInit__elementtree@@Base+0x4974>
    8c28:	ldr	x0, [x8, #8]
    8c2c:	bl	3c50 <PyList_New@plt>
    8c30:	cbz	x0, 8c7c <PyInit__elementtree@@Base+0x4958>
    8c34:	ldr	x9, [x19, #40]
    8c38:	ldr	x8, [x9, #8]
    8c3c:	cmp	x8, #0x1
    8c40:	b.lt	8c7c <PyInit__elementtree@@Base+0x4958>  // b.tstop
    8c44:	mov	x8, xzr
    8c48:	ldr	x9, [x9, #24]
    8c4c:	lsl	x10, x8, #3
    8c50:	add	x8, x8, #0x1
    8c54:	ldr	x9, [x9, x10]
    8c58:	ldr	x11, [x9]
    8c5c:	add	x11, x11, #0x1
    8c60:	str	x11, [x9]
    8c64:	ldr	x11, [x0, #24]
    8c68:	str	x9, [x11, x10]
    8c6c:	ldr	x9, [x19, #40]
    8c70:	ldr	x10, [x9, #8]
    8c74:	cmp	x8, x10
    8c78:	b.lt	8c48 <PyInit__elementtree@@Base+0x4924>  // b.tstop
    8c7c:	ldr	x19, [sp, #16]
    8c80:	ldp	x29, x30, [sp], #32
    8c84:	ret
    8c88:	mov	x0, xzr
    8c8c:	ldr	x19, [sp, #16]
    8c90:	ldp	x29, x30, [sp], #32
    8c94:	ret
    8c98:	ldr	x19, [sp, #16]
    8c9c:	mov	x0, xzr
    8ca0:	ldp	x29, x30, [sp], #32
    8ca4:	b	3c50 <PyList_New@plt>
    8ca8:	ldr	x8, [x0, #40]
    8cac:	cbz	x8, 8cc8 <PyInit__elementtree@@Base+0x49a4>
    8cb0:	ldr	x0, [x8]
    8cb4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8cb8:	ldr	x8, [x8, #3976]
    8cbc:	cmp	x0, x8
    8cc0:	b.eq	8cc8 <PyInit__elementtree@@Base+0x49a4>  // b.none
    8cc4:	b	3c80 <PyDict_Items@plt>
    8cc8:	mov	x0, xzr
    8ccc:	b	3c50 <PyList_New@plt>
    8cd0:	ldr	x8, [x0, #40]
    8cd4:	cbz	x8, 8cf0 <PyInit__elementtree@@Base+0x49cc>
    8cd8:	ldr	x0, [x8]
    8cdc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8ce0:	ldr	x8, [x8, #3976]
    8ce4:	cmp	x0, x8
    8ce8:	b.eq	8cf0 <PyInit__elementtree@@Base+0x49cc>  // b.none
    8cec:	b	40e0 <PyDict_Keys@plt>
    8cf0:	mov	x0, xzr
    8cf4:	b	3c50 <PyList_New@plt>
    8cf8:	stp	x29, x30, [sp, #-48]!
    8cfc:	str	x21, [sp, #16]
    8d00:	stp	x20, x19, [sp, #32]
    8d04:	mov	x29, sp
    8d08:	cmp	x2, #0x2
    8d0c:	mov	x19, x1
    8d10:	b.eq	8d34 <PyInit__elementtree@@Base+0x4a10>  // b.none
    8d14:	mov	x8, x2
    8d18:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    8d1c:	add	x0, x0, #0x129
    8d20:	mov	w2, #0x2                   	// #2
    8d24:	mov	w3, #0x2                   	// #2
    8d28:	mov	x1, x8
    8d2c:	bl	3f60 <_PyArg_CheckPositional@plt>
    8d30:	cbz	w0, 8d70 <PyInit__elementtree@@Base+0x4a4c>
    8d34:	ldp	x21, x0, [x19]
    8d38:	bl	4150 <PyDict_Copy@plt>
    8d3c:	cbz	x0, 8d70 <PyInit__elementtree@@Base+0x4a4c>
    8d40:	mov	x20, x0
    8d44:	mov	x0, x21
    8d48:	mov	x1, x20
    8d4c:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    8d50:	ldr	x8, [x20]
    8d54:	mov	x19, x0
    8d58:	subs	x8, x8, #0x1
    8d5c:	str	x8, [x20]
    8d60:	b.ne	8d74 <PyInit__elementtree@@Base+0x4a50>  // b.any
    8d64:	mov	x0, x20
    8d68:	bl	3d70 <_Py_Dealloc@plt>
    8d6c:	b	8d74 <PyInit__elementtree@@Base+0x4a50>
    8d70:	mov	x19, xzr
    8d74:	mov	x0, x19
    8d78:	ldp	x20, x19, [sp, #32]
    8d7c:	ldr	x21, [sp, #16]
    8d80:	ldp	x29, x30, [sp], #48
    8d84:	ret
    8d88:	stp	x29, x30, [sp, #-32]!
    8d8c:	stp	x20, x19, [sp, #16]
    8d90:	mov	x29, sp
    8d94:	mov	x20, x0
    8d98:	ldr	x8, [x0, #40]
    8d9c:	ldr	x0, [x0, #16]
    8da0:	cbz	x8, 8dc4 <PyInit__elementtree@@Base+0x4aa0>
    8da4:	ldr	x1, [x8]
    8da8:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    8dac:	mov	x19, x0
    8db0:	cbnz	x0, 8dd8 <PyInit__elementtree@@Base+0x4ab4>
    8db4:	mov	x0, x19
    8db8:	ldp	x20, x19, [sp, #16]
    8dbc:	ldp	x29, x30, [sp], #32
    8dc0:	ret
    8dc4:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8dc8:	ldr	x1, [x1, #3976]
    8dcc:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    8dd0:	mov	x19, x0
    8dd4:	cbz	x0, 8db4 <PyInit__elementtree@@Base+0x4a90>
    8dd8:	ldr	x8, [x20, #24]
    8ddc:	and	x9, x8, #0xfffffffffffffffe
    8de0:	ldr	x10, [x9]
    8de4:	add	x10, x10, #0x1
    8de8:	str	x10, [x9]
    8dec:	ldr	x9, [x19, #24]
    8df0:	str	x8, [x19, #24]
    8df4:	and	x0, x9, #0xfffffffffffffffe
    8df8:	ldr	x8, [x0]
    8dfc:	subs	x8, x8, #0x1
    8e00:	str	x8, [x0]
    8e04:	b.ne	8e0c <PyInit__elementtree@@Base+0x4ae8>  // b.any
    8e08:	bl	3d70 <_Py_Dealloc@plt>
    8e0c:	ldr	x8, [x20, #32]
    8e10:	and	x9, x8, #0xfffffffffffffffe
    8e14:	ldr	x10, [x9]
    8e18:	add	x10, x10, #0x1
    8e1c:	str	x10, [x9]
    8e20:	ldr	x9, [x19, #32]
    8e24:	str	x8, [x19, #32]
    8e28:	and	x0, x9, #0xfffffffffffffffe
    8e2c:	ldr	x8, [x0]
    8e30:	subs	x8, x8, #0x1
    8e34:	str	x8, [x0]
    8e38:	b.ne	8e40 <PyInit__elementtree@@Base+0x4b1c>  // b.any
    8e3c:	bl	3d70 <_Py_Dealloc@plt>
    8e40:	ldr	x8, [x20, #40]
    8e44:	cbz	x8, 8db4 <PyInit__elementtree@@Base+0x4a90>
    8e48:	ldr	x1, [x8, #8]
    8e4c:	mov	x0, x19
    8e50:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    8e54:	tbnz	w0, #31, 8ebc <PyInit__elementtree@@Base+0x4b98>
    8e58:	ldr	x9, [x20, #40]
    8e5c:	ldr	x10, [x9, #8]
    8e60:	cmp	x10, #0x1
    8e64:	b.lt	8ea4 <PyInit__elementtree@@Base+0x4b80>  // b.tstop
    8e68:	mov	x8, xzr
    8e6c:	ldr	x9, [x9, #24]
    8e70:	lsl	x10, x8, #3
    8e74:	add	x8, x8, #0x1
    8e78:	ldr	x9, [x9, x10]
    8e7c:	ldr	x11, [x9]
    8e80:	add	x11, x11, #0x1
    8e84:	str	x11, [x9]
    8e88:	ldr	x11, [x19, #40]
    8e8c:	ldr	x11, [x11, #24]
    8e90:	str	x9, [x11, x10]
    8e94:	ldr	x9, [x20, #40]
    8e98:	ldr	x10, [x9, #8]
    8e9c:	cmp	x8, x10
    8ea0:	b.lt	8e6c <PyInit__elementtree@@Base+0x4b48>  // b.tstop
    8ea4:	ldr	x8, [x19, #40]
    8ea8:	str	x10, [x8, #8]
    8eac:	mov	x0, x19
    8eb0:	ldp	x20, x19, [sp, #16]
    8eb4:	ldp	x29, x30, [sp], #32
    8eb8:	ret
    8ebc:	ldr	x8, [x19]
    8ec0:	subs	x8, x8, #0x1
    8ec4:	str	x8, [x19]
    8ec8:	b.ne	8ed4 <PyInit__elementtree@@Base+0x4bb0>  // b.any
    8ecc:	mov	x0, x19
    8ed0:	bl	3d70 <_Py_Dealloc@plt>
    8ed4:	mov	x19, xzr
    8ed8:	mov	x0, x19
    8edc:	ldp	x20, x19, [sp, #16]
    8ee0:	ldp	x29, x30, [sp], #32
    8ee4:	ret
    8ee8:	stp	x29, x30, [sp, #-16]!
    8eec:	mov	x29, sp
    8ef0:	ldr	x8, [x1, #8]
    8ef4:	mov	x3, x1
    8ef8:	ldrb	w8, [x8, #171]
    8efc:	tbnz	w8, #5, 8f28 <PyInit__elementtree@@Base+0x4c04>
    8f00:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    8f04:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    8f08:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    8f0c:	add	x0, x0, #0x13e
    8f10:	add	x1, x1, #0x18c
    8f14:	add	x2, x2, #0x2ac
    8f18:	bl	3ed0 <_PyArg_BadArgument@plt>
    8f1c:	mov	x0, xzr
    8f20:	ldp	x29, x30, [sp], #16
    8f24:	ret
    8f28:	mov	x1, x3
    8f2c:	ldp	x29, x30, [sp], #16
    8f30:	b	9b20 <PyInit__elementtree@@Base+0x57fc>
    8f34:	stp	x29, x30, [sp, #-32]!
    8f38:	str	x19, [sp, #16]
    8f3c:	mov	x29, sp
    8f40:	ldr	x9, [x0, #8]
    8f44:	ldr	x8, [x0, #40]
    8f48:	ldr	x19, [x9, #32]
    8f4c:	cbz	x8, 8f6c <PyInit__elementtree@@Base+0x4c48>
    8f50:	ldr	x9, [x8, #24]
    8f54:	add	x10, x8, #0x20
    8f58:	add	x19, x19, #0x40
    8f5c:	cmp	x9, x10
    8f60:	b.eq	8f6c <PyInit__elementtree@@Base+0x4c48>  // b.none
    8f64:	ldr	x8, [x8, #16]
    8f68:	add	x19, x19, x8, lsl #3
    8f6c:	cmn	x19, #0x1
    8f70:	b.eq	8f84 <PyInit__elementtree@@Base+0x4c60>  // b.none
    8f74:	mov	x0, x19
    8f78:	ldr	x19, [sp, #16]
    8f7c:	ldp	x29, x30, [sp], #32
    8f80:	b	3e70 <PyLong_FromSsize_t@plt>
    8f84:	bl	3f80 <PyErr_Occurred@plt>
    8f88:	cbz	x0, 8f74 <PyInit__elementtree@@Base+0x4c50>
    8f8c:	ldr	x19, [sp, #16]
    8f90:	mov	x0, xzr
    8f94:	ldp	x29, x30, [sp], #32
    8f98:	ret
    8f9c:	sub	sp, sp, #0x40
    8fa0:	stp	x29, x30, [sp, #32]
    8fa4:	stp	x20, x19, [sp, #48]
    8fa8:	add	x29, sp, #0x20
    8fac:	ldr	x8, [x0, #40]
    8fb0:	mov	x20, x0
    8fb4:	cbz	x8, 8fc8 <PyInit__elementtree@@Base+0x4ca4>
    8fb8:	ldr	x0, [x8, #8]
    8fbc:	bl	3c50 <PyList_New@plt>
    8fc0:	cbnz	x0, 8fd4 <PyInit__elementtree@@Base+0x4cb0>
    8fc4:	b	9158 <PyInit__elementtree@@Base+0x4e34>
    8fc8:	mov	x0, xzr
    8fcc:	bl	3c50 <PyList_New@plt>
    8fd0:	cbz	x0, 9158 <PyInit__elementtree@@Base+0x4e34>
    8fd4:	ldr	x8, [x0, #16]
    8fd8:	ldr	x9, [x20, #40]
    8fdc:	mov	x19, x0
    8fe0:	cmp	x8, #0x1
    8fe4:	b.lt	901c <PyInit__elementtree@@Base+0x4cf8>  // b.tstop
    8fe8:	mov	x10, xzr
    8fec:	ldr	x9, [x9, #24]
    8ff0:	lsl	x11, x10, #3
    8ff4:	add	x10, x10, #0x1
    8ff8:	cmp	x8, x10
    8ffc:	ldr	x9, [x9, x11]
    9000:	ldr	x12, [x9]
    9004:	add	x12, x12, #0x1
    9008:	str	x12, [x9]
    900c:	ldr	x12, [x19, #24]
    9010:	str	x9, [x12, x11]
    9014:	ldr	x9, [x20, #40]
    9018:	b.ne	8fec <PyInit__elementtree@@Base+0x4cc8>  // b.any
    901c:	cbz	x9, 90d0 <PyInit__elementtree@@Base+0x4dac>
    9020:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9024:	ldr	x6, [x9]
    9028:	ldr	x2, [x20, #16]
    902c:	ldr	x8, [x8, #3976]
    9030:	cmp	x6, x8
    9034:	b.eq	90d4 <PyInit__elementtree@@Base+0x4db0>  // b.none
    9038:	ldp	x8, x9, [x20, #24]
    903c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    9040:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    9044:	adrp	x3, d000 <PyInit__elementtree@@Base+0x8cdc>
    9048:	and	x9, x9, #0xfffffffffffffffe
    904c:	str	x9, [sp, #16]
    9050:	adrp	x9, c000 <PyInit__elementtree@@Base+0x7cdc>
    9054:	adrp	x5, c000 <PyInit__elementtree@@Base+0x7cdc>
    9058:	adrp	x7, d000 <PyInit__elementtree@@Base+0x8cdc>
    905c:	and	x8, x8, #0xfffffffffffffffe
    9060:	add	x9, x9, #0xf32
    9064:	add	x0, x0, #0x2e3
    9068:	add	x1, x1, #0x1e3
    906c:	add	x3, x3, #0x2d9
    9070:	add	x5, x5, #0xe18
    9074:	add	x7, x7, #0xcd
    9078:	stp	x8, x9, [sp]
    907c:	mov	x4, x19
    9080:	bl	4190 <_Py_BuildValue_SizeT@plt>
    9084:	mov	x20, x0
    9088:	cbnz	x0, 9124 <PyInit__elementtree@@Base+0x4e00>
    908c:	ldr	x8, [x19, #16]
    9090:	cmp	x8, #0x1
    9094:	b.lt	9140 <PyInit__elementtree@@Base+0x4e1c>  // b.tstop
    9098:	mov	x20, xzr
    909c:	b	90ac <PyInit__elementtree@@Base+0x4d88>
    90a0:	add	x20, x20, #0x1
    90a4:	cmp	x20, x8
    90a8:	b.ge	9140 <PyInit__elementtree@@Base+0x4e1c>  // b.tcont
    90ac:	ldr	x9, [x19, #24]
    90b0:	ldr	x0, [x9, x20, lsl #3]
    90b4:	ldr	x9, [x0]
    90b8:	subs	x9, x9, #0x1
    90bc:	str	x9, [x0]
    90c0:	b.ne	90a0 <PyInit__elementtree@@Base+0x4d7c>  // b.any
    90c4:	bl	3d70 <_Py_Dealloc@plt>
    90c8:	ldr	x8, [x19, #16]
    90cc:	b	90a0 <PyInit__elementtree@@Base+0x4d7c>
    90d0:	ldr	x2, [x20, #16]
    90d4:	ldp	x8, x9, [x20, #24]
    90d8:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    90dc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    90e0:	adrp	x3, d000 <PyInit__elementtree@@Base+0x8cdc>
    90e4:	and	x7, x8, #0xfffffffffffffffe
    90e8:	and	x8, x9, #0xfffffffffffffffe
    90ec:	adrp	x9, c000 <PyInit__elementtree@@Base+0x7cdc>
    90f0:	add	x9, x9, #0xf32
    90f4:	adrp	x5, c000 <PyInit__elementtree@@Base+0x7cdc>
    90f8:	adrp	x6, d000 <PyInit__elementtree@@Base+0x8cdc>
    90fc:	add	x0, x0, #0x2cb
    9100:	add	x1, x1, #0x1e3
    9104:	add	x3, x3, #0x2d9
    9108:	add	x5, x5, #0xe18
    910c:	add	x6, x6, #0xcd
    9110:	stp	x9, x8, [sp]
    9114:	mov	x4, x19
    9118:	bl	4190 <_Py_BuildValue_SizeT@plt>
    911c:	mov	x20, x0
    9120:	cbz	x0, 908c <PyInit__elementtree@@Base+0x4d68>
    9124:	ldr	x8, [x19]
    9128:	subs	x8, x8, #0x1
    912c:	str	x8, [x19]
    9130:	b.ne	915c <PyInit__elementtree@@Base+0x4e38>  // b.any
    9134:	mov	x0, x19
    9138:	bl	3d70 <_Py_Dealloc@plt>
    913c:	b	915c <PyInit__elementtree@@Base+0x4e38>
    9140:	ldr	x8, [x19]
    9144:	subs	x8, x8, #0x1
    9148:	str	x8, [x19]
    914c:	b.ne	9158 <PyInit__elementtree@@Base+0x4e34>  // b.any
    9150:	mov	x0, x19
    9154:	bl	3d70 <_Py_Dealloc@plt>
    9158:	mov	x20, xzr
    915c:	mov	x0, x20
    9160:	ldp	x20, x19, [sp, #48]
    9164:	ldp	x29, x30, [sp, #32]
    9168:	add	sp, sp, #0x40
    916c:	ret
    9170:	sub	sp, sp, #0x90
    9174:	stp	x29, x30, [sp, #48]
    9178:	stp	x28, x27, [sp, #64]
    917c:	stp	x26, x25, [sp, #80]
    9180:	stp	x24, x23, [sp, #96]
    9184:	stp	x22, x21, [sp, #112]
    9188:	stp	x20, x19, [sp, #128]
    918c:	add	x29, sp, #0x30
    9190:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9194:	ldr	x8, [x1, #8]
    9198:	ldr	x9, [x9, #3992]
    919c:	mov	x20, x1
    91a0:	cmp	x8, x9
    91a4:	b.eq	91ec <PyInit__elementtree@@Base+0x4ec8>  // b.none
    91a8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    91ac:	ldr	x8, [x8, #3944]
    91b0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    91b4:	add	x1, x1, #0x2f0
    91b8:	mov	x2, x20
    91bc:	ldr	x0, [x8]
    91c0:	bl	4180 <PyErr_Format@plt>
    91c4:	mov	x22, xzr
    91c8:	mov	x0, x22
    91cc:	ldp	x20, x19, [sp, #128]
    91d0:	ldp	x22, x21, [sp, #112]
    91d4:	ldp	x24, x23, [sp, #96]
    91d8:	ldp	x26, x25, [sp, #80]
    91dc:	ldp	x28, x27, [sp, #64]
    91e0:	ldp	x29, x30, [sp, #48]
    91e4:	add	sp, sp, #0x90
    91e8:	ret
    91ec:	mov	x21, x0
    91f0:	mov	x0, xzr
    91f4:	stp	xzr, xzr, [sp, #8]
    91f8:	str	xzr, [sp, #24]
    91fc:	stp	xzr, xzr, [x29, #-16]
    9200:	bl	3f40 <PyTuple_New@plt>
    9204:	cbz	x0, 91c4 <PyInit__elementtree@@Base+0x4ea0>
    9208:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    920c:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    9210:	add	x8, sp, #0x8
    9214:	add	x2, x2, #0x322
    9218:	add	x3, x3, #0xb90
    921c:	sub	x4, x29, #0x8
    9220:	sub	x5, x29, #0x10
    9224:	add	x6, sp, #0x18
    9228:	add	x7, sp, #0x10
    922c:	mov	x1, x20
    9230:	mov	x19, x0
    9234:	str	x8, [sp]
    9238:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    923c:	cbz	w0, 9670 <PyInit__elementtree@@Base+0x534c>
    9240:	ldur	x8, [x29, #-8]
    9244:	cbz	x8, 92a4 <PyInit__elementtree@@Base+0x4f80>
    9248:	ldr	x9, [x8]
    924c:	ldur	x25, [x29, #-16]
    9250:	ldp	x20, x23, [sp, #16]
    9254:	ldr	x26, [sp, #8]
    9258:	add	x9, x9, #0x1
    925c:	str	x9, [x8]
    9260:	ldr	x0, [x21, #16]
    9264:	str	x8, [x21, #16]
    9268:	cbz	x0, 9280 <PyInit__elementtree@@Base+0x4f5c>
    926c:	ldr	x8, [x0]
    9270:	subs	x8, x8, #0x1
    9274:	str	x8, [x0]
    9278:	b.ne	9280 <PyInit__elementtree@@Base+0x4f5c>  // b.any
    927c:	bl	3d70 <_Py_Dealloc@plt>
    9280:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9284:	ldr	x22, [x22, #4064]
    9288:	cbz	x23, 92b8 <PyInit__elementtree@@Base+0x4f94>
    928c:	ldr	x8, [x23, #8]
    9290:	and	x9, x23, #0xfffffffffffffffe
    9294:	cmp	x8, x22
    9298:	cset	w8, eq  // eq = none
    929c:	orr	x8, x9, x8
    92a0:	b	92c0 <PyInit__elementtree@@Base+0x4f9c>
    92a4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    92a8:	ldr	x8, [x8, #3944]
    92ac:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    92b0:	add	x1, x1, #0x32a
    92b4:	b	937c <PyInit__elementtree@@Base+0x5058>
    92b8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    92bc:	ldr	x8, [x8, #3976]
    92c0:	and	x9, x8, #0xfffffffffffffffe
    92c4:	ldr	x10, [x9]
    92c8:	add	x10, x10, #0x1
    92cc:	str	x10, [x9]
    92d0:	ldr	x9, [x21, #24]
    92d4:	str	x8, [x21, #24]
    92d8:	and	x0, x9, #0xfffffffffffffffe
    92dc:	ldr	x8, [x0]
    92e0:	subs	x8, x8, #0x1
    92e4:	str	x8, [x0]
    92e8:	b.ne	92f0 <PyInit__elementtree@@Base+0x4fcc>  // b.any
    92ec:	bl	3d70 <_Py_Dealloc@plt>
    92f0:	adrp	x24, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    92f4:	ldr	x24, [x24, #3976]
    92f8:	cbz	x20, 9314 <PyInit__elementtree@@Base+0x4ff0>
    92fc:	ldr	x8, [x20, #8]
    9300:	and	x9, x20, #0xfffffffffffffffe
    9304:	cmp	x8, x22
    9308:	cset	w8, eq  // eq = none
    930c:	orr	x8, x9, x8
    9310:	b	9318 <PyInit__elementtree@@Base+0x4ff4>
    9314:	mov	x8, x24
    9318:	and	x9, x8, #0xfffffffffffffffe
    931c:	ldr	x10, [x9]
    9320:	add	x10, x10, #0x1
    9324:	str	x10, [x9]
    9328:	ldr	x9, [x21, #32]
    932c:	str	x8, [x21, #32]
    9330:	and	x0, x9, #0xfffffffffffffffe
    9334:	ldr	x8, [x0]
    9338:	subs	x8, x8, #0x1
    933c:	str	x8, [x0]
    9340:	b.eq	9350 <PyInit__elementtree@@Base+0x502c>  // b.none
    9344:	orr	x8, x25, x26
    9348:	cbnz	x8, 935c <PyInit__elementtree@@Base+0x5038>
    934c:	b	9634 <PyInit__elementtree@@Base+0x5310>
    9350:	bl	3d70 <_Py_Dealloc@plt>
    9354:	orr	x8, x25, x26
    9358:	cbz	x8, 9634 <PyInit__elementtree@@Base+0x5310>
    935c:	cbz	x26, 939c <PyInit__elementtree@@Base+0x5078>
    9360:	ldr	x8, [x26, #8]
    9364:	ldrb	w8, [x8, #171]
    9368:	tbnz	w8, #1, 93b8 <PyInit__elementtree@@Base+0x5094>
    936c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9370:	ldr	x8, [x8, #3944]
    9374:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    9378:	add	x1, x1, #0x33e
    937c:	ldr	x0, [x8]
    9380:	bl	3de0 <PyErr_SetString@plt>
    9384:	mov	x22, xzr
    9388:	ldr	x8, [x19]
    938c:	subs	x8, x8, #0x1
    9390:	str	x8, [x19]
    9394:	b.ne	91c8 <PyInit__elementtree@@Base+0x4ea4>  // b.any
    9398:	b	9684 <PyInit__elementtree@@Base+0x5360>
    939c:	mov	x0, x21
    93a0:	mov	x1, xzr
    93a4:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    93a8:	mov	x22, xzr
    93ac:	cbnz	w0, 9644 <PyInit__elementtree@@Base+0x5320>
    93b0:	mov	x20, xzr
    93b4:	b	9580 <PyInit__elementtree@@Base+0x525c>
    93b8:	ldr	x22, [x26, #16]
    93bc:	ldr	x20, [x21, #40]
    93c0:	mov	x0, x21
    93c4:	str	xzr, [x21, #40]
    93c8:	mov	x1, x22
    93cc:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    93d0:	cbz	w0, 9478 <PyInit__elementtree@@Base+0x5154>
    93d4:	ldr	x22, [x21, #40]
    93d8:	cbz	x22, 945c <PyInit__elementtree@@Base+0x5138>
    93dc:	str	xzr, [x21, #40]
    93e0:	ldr	x0, [x22]
    93e4:	ldr	x8, [x0]
    93e8:	subs	x8, x8, #0x1
    93ec:	str	x8, [x0]
    93f0:	b.ne	93f8 <PyInit__elementtree@@Base+0x50d4>  // b.any
    93f4:	bl	3d70 <_Py_Dealloc@plt>
    93f8:	ldr	x9, [x22, #8]
    93fc:	ldr	x0, [x22, #24]
    9400:	cmp	x9, #0x1
    9404:	b.lt	9444 <PyInit__elementtree@@Base+0x5120>  // b.tstop
    9408:	mov	x23, xzr
    940c:	b	941c <PyInit__elementtree@@Base+0x50f8>
    9410:	add	x23, x23, #0x1
    9414:	cmp	x23, x9
    9418:	b.ge	9444 <PyInit__elementtree@@Base+0x5120>  // b.tcont
    941c:	ldr	x8, [x0, x23, lsl #3]
    9420:	ldr	x10, [x8]
    9424:	subs	x10, x10, #0x1
    9428:	str	x10, [x8]
    942c:	b.ne	9410 <PyInit__elementtree@@Base+0x50ec>  // b.any
    9430:	mov	x0, x8
    9434:	bl	3d70 <_Py_Dealloc@plt>
    9438:	ldr	x9, [x22, #8]
    943c:	ldr	x0, [x22, #24]
    9440:	b	9410 <PyInit__elementtree@@Base+0x50ec>
    9444:	add	x8, x22, #0x20
    9448:	cmp	x0, x8
    944c:	b.eq	9454 <PyInit__elementtree@@Base+0x5130>  // b.none
    9450:	bl	3e60 <PyObject_Free@plt>
    9454:	mov	x0, x22
    9458:	bl	3e60 <PyObject_Free@plt>
    945c:	mov	x22, xzr
    9460:	str	x20, [x21, #40]
    9464:	ldr	x8, [x19]
    9468:	subs	x8, x8, #0x1
    946c:	str	x8, [x19]
    9470:	b.ne	91c8 <PyInit__elementtree@@Base+0x4ea4>  // b.any
    9474:	b	9684 <PyInit__elementtree@@Base+0x5360>
    9478:	cbz	x20, 948c <PyInit__elementtree@@Base+0x5168>
    947c:	ldr	x8, [x20]
    9480:	ldr	x9, [x21, #40]
    9484:	str	x8, [x9]
    9488:	str	x24, [x20]
    948c:	cmp	x22, #0x1
    9490:	b.lt	9578 <PyInit__elementtree@@Base+0x5254>  // b.tstop
    9494:	adrp	x23, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    9498:	mov	x27, xzr
    949c:	add	x23, x23, #0xe8
    94a0:	b	94c8 <PyInit__elementtree@@Base+0x51a4>
    94a4:	ldr	x8, [x28]
    94a8:	add	x8, x8, #0x1
    94ac:	str	x8, [x28]
    94b0:	ldr	x8, [x21, #40]
    94b4:	ldr	x8, [x8, #24]
    94b8:	str	x28, [x8, x27, lsl #3]
    94bc:	add	x27, x27, #0x1
    94c0:	cmp	x22, x27
    94c4:	b.eq	9578 <PyInit__elementtree@@Base+0x5254>  // b.none
    94c8:	ldr	x8, [x26, #24]
    94cc:	ldr	x28, [x8, x27, lsl #3]
    94d0:	ldr	x0, [x28, #8]
    94d4:	cmp	x0, x23
    94d8:	b.eq	94a4 <PyInit__elementtree@@Base+0x5180>  // b.none
    94dc:	mov	x1, x23
    94e0:	bl	4160 <PyType_IsSubtype@plt>
    94e4:	cbnz	w0, 94a4 <PyInit__elementtree@@Base+0x5180>
    94e8:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    94ec:	ldr	x8, [x28, #8]
    94f0:	ldr	x9, [x9, #3944]
    94f4:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    94f8:	add	x1, x1, #0xe3f
    94fc:	ldr	x2, [x8, #24]
    9500:	ldr	x0, [x9]
    9504:	bl	4180 <PyErr_Format@plt>
    9508:	ldr	x8, [x21, #40]
    950c:	str	x27, [x8, #8]
    9510:	cbz	x20, 9670 <PyInit__elementtree@@Base+0x534c>
    9514:	ldr	x0, [x20]
    9518:	ldr	x8, [x0]
    951c:	subs	x8, x8, #0x1
    9520:	str	x8, [x0]
    9524:	b.ne	952c <PyInit__elementtree@@Base+0x5208>  // b.any
    9528:	bl	3d70 <_Py_Dealloc@plt>
    952c:	ldr	x9, [x20, #8]
    9530:	ldr	x0, [x20, #24]
    9534:	cmp	x9, #0x1
    9538:	b.lt	9658 <PyInit__elementtree@@Base+0x5334>  // b.tstop
    953c:	mov	x21, xzr
    9540:	b	9550 <PyInit__elementtree@@Base+0x522c>
    9544:	add	x21, x21, #0x1
    9548:	cmp	x21, x9
    954c:	b.ge	9658 <PyInit__elementtree@@Base+0x5334>  // b.tcont
    9550:	ldr	x8, [x0, x21, lsl #3]
    9554:	ldr	x10, [x8]
    9558:	subs	x10, x10, #0x1
    955c:	str	x10, [x8]
    9560:	b.ne	9544 <PyInit__elementtree@@Base+0x5220>  // b.any
    9564:	mov	x0, x8
    9568:	bl	3d70 <_Py_Dealloc@plt>
    956c:	ldr	x9, [x20, #8]
    9570:	ldr	x0, [x20, #24]
    9574:	b	9544 <PyInit__elementtree@@Base+0x5220>
    9578:	ldr	x8, [x21, #40]
    957c:	str	x22, [x8, #8]
    9580:	cbz	x25, 95b4 <PyInit__elementtree@@Base+0x5290>
    9584:	ldr	x8, [x25]
    9588:	add	x8, x8, #0x1
    958c:	str	x8, [x25]
    9590:	ldr	x8, [x21, #40]
    9594:	ldr	x0, [x8]
    9598:	str	x25, [x8]
    959c:	cbz	x0, 95b4 <PyInit__elementtree@@Base+0x5290>
    95a0:	ldr	x8, [x0]
    95a4:	subs	x8, x8, #0x1
    95a8:	str	x8, [x0]
    95ac:	b.ne	95b4 <PyInit__elementtree@@Base+0x5290>  // b.any
    95b0:	bl	3d70 <_Py_Dealloc@plt>
    95b4:	cbz	x20, 9634 <PyInit__elementtree@@Base+0x5310>
    95b8:	ldr	x0, [x20]
    95bc:	ldr	x8, [x0]
    95c0:	subs	x8, x8, #0x1
    95c4:	str	x8, [x0]
    95c8:	b.ne	95d0 <PyInit__elementtree@@Base+0x52ac>  // b.any
    95cc:	bl	3d70 <_Py_Dealloc@plt>
    95d0:	ldr	x9, [x20, #8]
    95d4:	ldr	x0, [x20, #24]
    95d8:	cmp	x9, #0x1
    95dc:	b.lt	961c <PyInit__elementtree@@Base+0x52f8>  // b.tstop
    95e0:	mov	x21, xzr
    95e4:	b	95f4 <PyInit__elementtree@@Base+0x52d0>
    95e8:	add	x21, x21, #0x1
    95ec:	cmp	x21, x9
    95f0:	b.ge	961c <PyInit__elementtree@@Base+0x52f8>  // b.tcont
    95f4:	ldr	x8, [x0, x21, lsl #3]
    95f8:	ldr	x10, [x8]
    95fc:	subs	x10, x10, #0x1
    9600:	str	x10, [x8]
    9604:	b.ne	95e8 <PyInit__elementtree@@Base+0x52c4>  // b.any
    9608:	mov	x0, x8
    960c:	bl	3d70 <_Py_Dealloc@plt>
    9610:	ldr	x9, [x20, #8]
    9614:	ldr	x0, [x20, #24]
    9618:	b	95e8 <PyInit__elementtree@@Base+0x52c4>
    961c:	add	x8, x20, #0x20
    9620:	cmp	x0, x8
    9624:	b.eq	962c <PyInit__elementtree@@Base+0x5308>  // b.none
    9628:	bl	3e60 <PyObject_Free@plt>
    962c:	mov	x0, x20
    9630:	bl	3e60 <PyObject_Free@plt>
    9634:	ldr	x8, [x24]
    9638:	mov	x22, x24
    963c:	add	x8, x8, #0x1
    9640:	str	x8, [x24]
    9644:	ldr	x8, [x19]
    9648:	subs	x8, x8, #0x1
    964c:	str	x8, [x19]
    9650:	b.ne	91c8 <PyInit__elementtree@@Base+0x4ea4>  // b.any
    9654:	b	9684 <PyInit__elementtree@@Base+0x5360>
    9658:	add	x8, x20, #0x20
    965c:	cmp	x0, x8
    9660:	b.eq	9668 <PyInit__elementtree@@Base+0x5344>  // b.none
    9664:	bl	3e60 <PyObject_Free@plt>
    9668:	mov	x0, x20
    966c:	bl	3e60 <PyObject_Free@plt>
    9670:	mov	x22, xzr
    9674:	ldr	x8, [x19]
    9678:	subs	x8, x8, #0x1
    967c:	str	x8, [x19]
    9680:	b.ne	91c8 <PyInit__elementtree@@Base+0x4ea4>  // b.any
    9684:	mov	x0, x19
    9688:	bl	3d70 <_Py_Dealloc@plt>
    968c:	b	91c8 <PyInit__elementtree@@Base+0x4ea4>
    9690:	ldr	x8, [x0, #8]
    9694:	ldr	x8, [x8, #168]
    9698:	tbnz	w8, #28, 96a8 <PyInit__elementtree@@Base+0x5384>
    969c:	tbnz	w8, #27, 96d0 <PyInit__elementtree@@Base+0x53ac>
    96a0:	mov	w0, #0x1                   	// #1
    96a4:	ret
    96a8:	ldr	w10, [x0, #32]
    96ac:	ldr	x8, [x0, #16]
    96b0:	tbnz	w10, #5, 9710 <PyInit__elementtree@@Base+0x53ec>
    96b4:	ldr	x9, [x0, #72]
    96b8:	cmp	x8, #0x3
    96bc:	ubfx	w10, w10, #2, #3
    96c0:	b.ge	972c <PyInit__elementtree@@Base+0x5408>  // b.tcont
    96c4:	cmp	x8, #0x1
    96c8:	b.ge	9858 <PyInit__elementtree@@Base+0x5534>  // b.tcont
    96cc:	b	9990 <PyInit__elementtree@@Base+0x566c>
    96d0:	ldr	x8, [x0, #16]
    96d4:	add	x9, x0, #0x20
    96d8:	cmp	x8, #0x3
    96dc:	b.lt	9744 <PyInit__elementtree@@Base+0x5420>  // b.tstop
    96e0:	ldrb	w10, [x9]
    96e4:	cmp	w10, #0x7b
    96e8:	b.ne	974c <PyInit__elementtree@@Base+0x5428>  // b.any
    96ec:	ldrb	w10, [x9, #1]
    96f0:	cmp	w10, #0x7d
    96f4:	b.eq	96a0 <PyInit__elementtree@@Base+0x537c>  // b.none
    96f8:	cmp	w10, #0x2a
    96fc:	b.ne	974c <PyInit__elementtree@@Base+0x5428>  // b.any
    9700:	ldrb	w10, [x9, #2]
    9704:	cmp	w10, #0x7d
    9708:	b.eq	96a0 <PyInit__elementtree@@Base+0x537c>  // b.none
    970c:	b	974c <PyInit__elementtree@@Base+0x5428>
    9710:	add	x9, x0, #0x30
    9714:	add	x11, x0, #0x48
    9718:	tst	w10, #0x40
    971c:	csel	x9, x11, x9, eq  // eq = none
    9720:	cmp	x8, #0x3
    9724:	ubfx	w10, w10, #2, #3
    9728:	b.lt	96c4 <PyInit__elementtree@@Base+0x53a0>  // b.tstop
    972c:	cmp	w10, #0x1
    9730:	b.ne	97b0 <PyInit__elementtree@@Base+0x548c>  // b.any
    9734:	ldrb	w11, [x9]
    9738:	cmp	w11, #0x7b
    973c:	b.eq	97d4 <PyInit__elementtree@@Base+0x54b0>  // b.none
    9740:	b	9858 <PyInit__elementtree@@Base+0x5534>
    9744:	cmp	x8, #0x1
    9748:	b.lt	9990 <PyInit__elementtree@@Base+0x566c>  // b.tstop
    974c:	mov	x11, #0x31                  	// #49
    9750:	movk	x11, #0x40, lsl #16
    9754:	mov	w10, #0x1                   	// #1
    9758:	movk	x11, #0x2, lsl #48
    975c:	mov	w12, #0x1                   	// #1
    9760:	b	9774 <PyInit__elementtree@@Base+0x5450>
    9764:	mov	w12, wzr
    9768:	subs	x8, x8, #0x1
    976c:	add	x9, x9, #0x1
    9770:	b.eq	9990 <PyInit__elementtree@@Base+0x566c>  // b.none
    9774:	ldrb	w13, [x9]
    9778:	cmp	w13, #0x7b
    977c:	b.eq	9764 <PyInit__elementtree@@Base+0x5440>  // b.none
    9780:	cmp	w13, #0x7d
    9784:	b.ne	9790 <PyInit__elementtree@@Base+0x546c>  // b.any
    9788:	mov	w12, #0x1                   	// #1
    978c:	b	9768 <PyInit__elementtree@@Base+0x5444>
    9790:	cbz	w12, 9768 <PyInit__elementtree@@Base+0x5444>
    9794:	sub	w13, w13, #0x2a
    9798:	cmp	w13, #0x31
    979c:	b.hi	9768 <PyInit__elementtree@@Base+0x5444>  // b.pmore
    97a0:	lsl	x13, x10, x13
    97a4:	tst	x13, x11
    97a8:	b.eq	9768 <PyInit__elementtree@@Base+0x5444>  // b.none
    97ac:	b	96a0 <PyInit__elementtree@@Base+0x537c>
    97b0:	cmp	w10, #0x2
    97b4:	b.ne	97c8 <PyInit__elementtree@@Base+0x54a4>  // b.any
    97b8:	ldrh	w11, [x9]
    97bc:	cmp	w11, #0x7b
    97c0:	b.eq	97d4 <PyInit__elementtree@@Base+0x54b0>  // b.none
    97c4:	b	9858 <PyInit__elementtree@@Base+0x5534>
    97c8:	ldr	w11, [x9]
    97cc:	cmp	w11, #0x7b
    97d0:	b.ne	9858 <PyInit__elementtree@@Base+0x5534>  // b.any
    97d4:	cmp	w10, #0x1
    97d8:	b.ne	97e4 <PyInit__elementtree@@Base+0x54c0>  // b.any
    97dc:	ldrb	w11, [x9, #1]
    97e0:	b	97f8 <PyInit__elementtree@@Base+0x54d4>
    97e4:	cmp	w10, #0x2
    97e8:	b.ne	97f4 <PyInit__elementtree@@Base+0x54d0>  // b.any
    97ec:	ldrh	w11, [x9, #2]
    97f0:	b	97f8 <PyInit__elementtree@@Base+0x54d4>
    97f4:	ldr	w11, [x9, #4]
    97f8:	cmp	w11, #0x7d
    97fc:	b.eq	96a0 <PyInit__elementtree@@Base+0x537c>  // b.none
    9800:	cmp	w10, #0x1
    9804:	b.ne	9810 <PyInit__elementtree@@Base+0x54ec>  // b.any
    9808:	ldrb	w11, [x9, #1]
    980c:	b	9824 <PyInit__elementtree@@Base+0x5500>
    9810:	cmp	w10, #0x2
    9814:	b.ne	9820 <PyInit__elementtree@@Base+0x54fc>  // b.any
    9818:	ldrh	w11, [x9, #2]
    981c:	b	9824 <PyInit__elementtree@@Base+0x5500>
    9820:	ldr	w11, [x9, #4]
    9824:	cmp	w11, #0x2a
    9828:	b.ne	9858 <PyInit__elementtree@@Base+0x5534>  // b.any
    982c:	cmp	w10, #0x1
    9830:	b.ne	983c <PyInit__elementtree@@Base+0x5518>  // b.any
    9834:	ldrb	w11, [x9, #2]
    9838:	b	9850 <PyInit__elementtree@@Base+0x552c>
    983c:	cmp	w10, #0x2
    9840:	b.ne	984c <PyInit__elementtree@@Base+0x5528>  // b.any
    9844:	ldrh	w11, [x9, #4]
    9848:	b	9850 <PyInit__elementtree@@Base+0x552c>
    984c:	ldr	w11, [x9, #8]
    9850:	cmp	w11, #0x7d
    9854:	b.eq	96a0 <PyInit__elementtree@@Base+0x537c>  // b.none
    9858:	cmp	w10, #0x1
    985c:	b.eq	98cc <PyInit__elementtree@@Base+0x55a8>  // b.none
    9860:	cmp	w10, #0x2
    9864:	b.ne	992c <PyInit__elementtree@@Base+0x5608>  // b.any
    9868:	mov	x11, #0x31                  	// #49
    986c:	movk	x11, #0x40, lsl #16
    9870:	mov	w10, #0x1                   	// #1
    9874:	movk	x11, #0x2, lsl #48
    9878:	mov	w12, #0x1                   	// #1
    987c:	b	9890 <PyInit__elementtree@@Base+0x556c>
    9880:	mov	w12, wzr
    9884:	subs	x8, x8, #0x1
    9888:	add	x9, x9, #0x2
    988c:	b.eq	9990 <PyInit__elementtree@@Base+0x566c>  // b.none
    9890:	ldrh	w13, [x9]
    9894:	cmp	w13, #0x7b
    9898:	b.eq	9880 <PyInit__elementtree@@Base+0x555c>  // b.none
    989c:	cmp	w13, #0x7d
    98a0:	b.ne	98ac <PyInit__elementtree@@Base+0x5588>  // b.any
    98a4:	mov	w12, #0x1                   	// #1
    98a8:	b	9884 <PyInit__elementtree@@Base+0x5560>
    98ac:	cbz	w12, 9884 <PyInit__elementtree@@Base+0x5560>
    98b0:	sub	w13, w13, #0x2a
    98b4:	cmp	w13, #0x31
    98b8:	b.hi	9884 <PyInit__elementtree@@Base+0x5560>  // b.pmore
    98bc:	lsl	x13, x10, x13
    98c0:	tst	x13, x11
    98c4:	b.eq	9884 <PyInit__elementtree@@Base+0x5560>  // b.none
    98c8:	b	96a0 <PyInit__elementtree@@Base+0x537c>
    98cc:	mov	x12, #0x31                  	// #49
    98d0:	movk	x12, #0x40, lsl #16
    98d4:	mov	w11, #0x1                   	// #1
    98d8:	movk	x12, #0x2, lsl #48
    98dc:	b	98f0 <PyInit__elementtree@@Base+0x55cc>
    98e0:	mov	w10, wzr
    98e4:	subs	x8, x8, #0x1
    98e8:	add	x9, x9, #0x1
    98ec:	b.eq	9990 <PyInit__elementtree@@Base+0x566c>  // b.none
    98f0:	ldrb	w13, [x9]
    98f4:	cmp	w13, #0x7b
    98f8:	b.eq	98e0 <PyInit__elementtree@@Base+0x55bc>  // b.none
    98fc:	cmp	w13, #0x7d
    9900:	b.ne	990c <PyInit__elementtree@@Base+0x55e8>  // b.any
    9904:	mov	w10, #0x1                   	// #1
    9908:	b	98e4 <PyInit__elementtree@@Base+0x55c0>
    990c:	cbz	w10, 98e4 <PyInit__elementtree@@Base+0x55c0>
    9910:	sub	w13, w13, #0x2a
    9914:	cmp	w13, #0x31
    9918:	b.hi	98e4 <PyInit__elementtree@@Base+0x55c0>  // b.pmore
    991c:	lsl	x13, x11, x13
    9920:	tst	x13, x12
    9924:	b.eq	98e4 <PyInit__elementtree@@Base+0x55c0>  // b.none
    9928:	b	96a0 <PyInit__elementtree@@Base+0x537c>
    992c:	mov	x11, #0x31                  	// #49
    9930:	movk	x11, #0x40, lsl #16
    9934:	mov	w10, #0x1                   	// #1
    9938:	movk	x11, #0x2, lsl #48
    993c:	mov	w12, #0x1                   	// #1
    9940:	b	9954 <PyInit__elementtree@@Base+0x5630>
    9944:	mov	w12, wzr
    9948:	subs	x8, x8, #0x1
    994c:	add	x9, x9, #0x4
    9950:	b.eq	9990 <PyInit__elementtree@@Base+0x566c>  // b.none
    9954:	ldr	w13, [x9]
    9958:	cmp	w13, #0x7b
    995c:	b.eq	9944 <PyInit__elementtree@@Base+0x5620>  // b.none
    9960:	cmp	w13, #0x7d
    9964:	b.ne	9970 <PyInit__elementtree@@Base+0x564c>  // b.any
    9968:	mov	w12, #0x1                   	// #1
    996c:	b	9948 <PyInit__elementtree@@Base+0x5624>
    9970:	cbz	w12, 9948 <PyInit__elementtree@@Base+0x5624>
    9974:	sub	w13, w13, #0x2a
    9978:	cmp	w13, #0x31
    997c:	b.hi	9948 <PyInit__elementtree@@Base+0x5624>  // b.pmore
    9980:	lsl	x13, x10, x13
    9984:	tst	x13, x11
    9988:	b.eq	9948 <PyInit__elementtree@@Base+0x5624>  // b.none
    998c:	b	96a0 <PyInit__elementtree@@Base+0x537c>
    9990:	mov	w0, wzr
    9994:	ret
    9998:	stp	x29, x30, [sp, #-48]!
    999c:	str	x21, [sp, #16]
    99a0:	stp	x20, x19, [sp, #32]
    99a4:	mov	x29, sp
    99a8:	ldr	x8, [x1, #8]
    99ac:	mov	x20, x1
    99b0:	mov	x19, x0
    99b4:	ldr	x8, [x8, #168]
    99b8:	tbnz	w8, #28, 99d4 <PyInit__elementtree@@Base+0x56b0>
    99bc:	tbz	w8, #27, 9a8c <PyInit__elementtree@@Base+0x5768>
    99c0:	ldr	x8, [x20, #16]
    99c4:	cmp	x8, #0x1
    99c8:	b.ne	9a8c <PyInit__elementtree@@Base+0x5768>  // b.any
    99cc:	ldrb	w8, [x20, #32]
    99d0:	b	9a7c <PyInit__elementtree@@Base+0x5758>
    99d4:	ldrb	w8, [x20, #32]
    99d8:	tbnz	w8, #7, 99e8 <PyInit__elementtree@@Base+0x56c4>
    99dc:	mov	x0, x20
    99e0:	bl	3c60 <_PyUnicode_Ready@plt>
    99e4:	tbnz	w0, #31, 9b08 <PyInit__elementtree@@Base+0x57e4>
    99e8:	ldr	x8, [x20, #16]
    99ec:	cmp	x8, #0x1
    99f0:	b.ne	9a8c <PyInit__elementtree@@Base+0x5768>  // b.any
    99f4:	ldr	w8, [x20, #32]
    99f8:	ubfx	w9, w8, #2, #3
    99fc:	cmp	w9, #0x1
    9a00:	b.ne	9a14 <PyInit__elementtree@@Base+0x56f0>  // b.any
    9a04:	tbnz	w8, #5, 9a38 <PyInit__elementtree@@Base+0x5714>
    9a08:	ldr	x8, [x20, #72]
    9a0c:	ldrb	w8, [x8]
    9a10:	b	9a7c <PyInit__elementtree@@Base+0x5758>
    9a14:	cmp	w9, #0x2
    9a18:	b.ne	9a50 <PyInit__elementtree@@Base+0x572c>  // b.any
    9a1c:	tbz	w8, #5, 9a68 <PyInit__elementtree@@Base+0x5744>
    9a20:	add	x9, x20, #0x30
    9a24:	add	x10, x20, #0x48
    9a28:	tst	w8, #0x40
    9a2c:	csel	x8, x10, x9, eq  // eq = none
    9a30:	ldrh	w8, [x8]
    9a34:	b	9a7c <PyInit__elementtree@@Base+0x5758>
    9a38:	add	x9, x20, #0x30
    9a3c:	add	x10, x20, #0x48
    9a40:	tst	w8, #0x40
    9a44:	csel	x8, x10, x9, eq  // eq = none
    9a48:	ldrb	w8, [x8]
    9a4c:	b	9a7c <PyInit__elementtree@@Base+0x5758>
    9a50:	tbz	w8, #5, 9a74 <PyInit__elementtree@@Base+0x5750>
    9a54:	add	x9, x20, #0x30
    9a58:	add	x10, x20, #0x48
    9a5c:	tst	w8, #0x40
    9a60:	csel	x8, x10, x9, eq  // eq = none
    9a64:	b	9a78 <PyInit__elementtree@@Base+0x5754>
    9a68:	ldr	x8, [x20, #72]
    9a6c:	ldrh	w8, [x8]
    9a70:	b	9a7c <PyInit__elementtree@@Base+0x5758>
    9a74:	ldr	x8, [x20, #72]
    9a78:	ldr	w8, [x8]
    9a7c:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9a80:	ldr	x9, [x9, #3976]
    9a84:	cmp	w8, #0x2a
    9a88:	csel	x20, x9, x20, eq  // eq = none
    9a8c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    9a90:	add	x0, x0, #0xda8
    9a94:	bl	3df0 <_PyObject_GC_New@plt>
    9a98:	mov	x21, x0
    9a9c:	cbz	x0, 9b0c <PyInit__elementtree@@Base+0x57e8>
    9aa0:	ldr	x8, [x20]
    9aa4:	mov	x0, x21
    9aa8:	add	x8, x8, #0x1
    9aac:	str	x8, [x20]
    9ab0:	str	x20, [x21, #48]
    9ab4:	str	wzr, [x21, #56]
    9ab8:	ldr	x8, [x19]
    9abc:	add	x8, x8, #0x1
    9ac0:	str	x8, [x19]
    9ac4:	str	x19, [x21, #40]
    9ac8:	bl	3dc0 <PyObject_GC_Track@plt>
    9acc:	mov	w0, #0x80                  	// #128
    9ad0:	bl	41f0 <PyMem_Malloc@plt>
    9ad4:	str	x0, [x21, #16]
    9ad8:	cbz	x0, 9aec <PyInit__elementtree@@Base+0x57c8>
    9adc:	adrp	x8, c000 <PyInit__elementtree@@Base+0x7cdc>
    9ae0:	ldr	q0, [x8, #3408]
    9ae4:	stur	q0, [x21, #24]
    9ae8:	b	9b0c <PyInit__elementtree@@Base+0x57e8>
    9aec:	ldr	x8, [x21]
    9af0:	subs	x8, x8, #0x1
    9af4:	str	x8, [x21]
    9af8:	b.ne	9b04 <PyInit__elementtree@@Base+0x57e0>  // b.any
    9afc:	mov	x0, x21
    9b00:	bl	3d70 <_Py_Dealloc@plt>
    9b04:	bl	3d80 <PyErr_NoMemory@plt>
    9b08:	mov	x21, xzr
    9b0c:	mov	x0, x21
    9b10:	ldp	x20, x19, [sp, #32]
    9b14:	ldr	x21, [sp, #16]
    9b18:	ldp	x29, x30, [sp], #48
    9b1c:	ret
    9b20:	stp	x29, x30, [sp, #-64]!
    9b24:	stp	x24, x23, [sp, #16]
    9b28:	stp	x22, x21, [sp, #32]
    9b2c:	stp	x20, x19, [sp, #48]
    9b30:	mov	x29, sp
    9b34:	mov	x21, x0
    9b38:	ldr	x0, [x0, #16]
    9b3c:	mov	x20, x1
    9b40:	bl	9db8 <PyInit__elementtree@@Base+0x5a94>
    9b44:	cbz	x0, 9d9c <PyInit__elementtree@@Base+0x5a78>
    9b48:	ldr	x8, [x21, #40]
    9b4c:	mov	x22, x0
    9b50:	cbz	x8, 9b80 <PyInit__elementtree@@Base+0x585c>
    9b54:	ldr	x0, [x8]
    9b58:	mov	x1, x20
    9b5c:	bl	9db8 <PyInit__elementtree@@Base+0x5a94>
    9b60:	mov	x23, x0
    9b64:	cbnz	x0, 9b94 <PyInit__elementtree@@Base+0x5870>
    9b68:	ldr	x8, [x22]
    9b6c:	subs	x8, x8, #0x1
    9b70:	str	x8, [x22]
    9b74:	b.ne	9d9c <PyInit__elementtree@@Base+0x5a78>  // b.any
    9b78:	mov	x0, x22
    9b7c:	b	9d98 <PyInit__elementtree@@Base+0x5a74>
    9b80:	adrp	x23, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9b84:	ldr	x23, [x23, #3976]
    9b88:	ldr	x8, [x23]
    9b8c:	add	x8, x8, #0x1
    9b90:	str	x8, [x23]
    9b94:	mov	x0, x22
    9b98:	mov	x1, x23
    9b9c:	bl	4b84 <PyInit__elementtree@@Base+0x860>
    9ba0:	ldr	x8, [x22]
    9ba4:	mov	x19, x0
    9ba8:	subs	x8, x8, #0x1
    9bac:	str	x8, [x22]
    9bb0:	b.eq	9bcc <PyInit__elementtree@@Base+0x58a8>  // b.none
    9bb4:	ldr	x8, [x23]
    9bb8:	subs	x8, x8, #0x1
    9bbc:	str	x8, [x23]
    9bc0:	b.eq	9be4 <PyInit__elementtree@@Base+0x58c0>  // b.none
    9bc4:	cbnz	x19, 9bf0 <PyInit__elementtree@@Base+0x58cc>
    9bc8:	b	9da0 <PyInit__elementtree@@Base+0x5a7c>
    9bcc:	mov	x0, x22
    9bd0:	bl	3d70 <_Py_Dealloc@plt>
    9bd4:	ldr	x8, [x23]
    9bd8:	subs	x8, x8, #0x1
    9bdc:	str	x8, [x23]
    9be0:	b.ne	9bc4 <PyInit__elementtree@@Base+0x58a0>  // b.any
    9be4:	mov	x0, x23
    9be8:	bl	3d70 <_Py_Dealloc@plt>
    9bec:	cbz	x19, 9da0 <PyInit__elementtree@@Base+0x5a7c>
    9bf0:	ldr	x8, [x21, #24]
    9bf4:	mov	x1, x20
    9bf8:	and	x0, x8, #0xfffffffffffffffe
    9bfc:	bl	9db8 <PyInit__elementtree@@Base+0x5a94>
    9c00:	cbz	x0, 9d84 <PyInit__elementtree@@Base+0x5a60>
    9c04:	ldr	x9, [x21, #24]
    9c08:	ldr	x10, [x19, #24]
    9c0c:	mov	x8, x0
    9c10:	bfxil	x8, x9, #0, #1
    9c14:	and	x0, x10, #0xfffffffffffffffe
    9c18:	str	x8, [x19, #24]
    9c1c:	ldr	x8, [x0]
    9c20:	subs	x8, x8, #0x1
    9c24:	str	x8, [x0]
    9c28:	b.ne	9c30 <PyInit__elementtree@@Base+0x590c>  // b.any
    9c2c:	bl	3d70 <_Py_Dealloc@plt>
    9c30:	ldr	x8, [x21, #32]
    9c34:	mov	x1, x20
    9c38:	and	x0, x8, #0xfffffffffffffffe
    9c3c:	bl	9db8 <PyInit__elementtree@@Base+0x5a94>
    9c40:	cbz	x0, 9d84 <PyInit__elementtree@@Base+0x5a60>
    9c44:	ldr	x9, [x21, #32]
    9c48:	ldr	x10, [x19, #32]
    9c4c:	mov	x8, x0
    9c50:	bfxil	x8, x9, #0, #1
    9c54:	and	x0, x10, #0xfffffffffffffffe
    9c58:	str	x8, [x19, #32]
    9c5c:	ldr	x8, [x0]
    9c60:	subs	x8, x8, #0x1
    9c64:	str	x8, [x0]
    9c68:	b.ne	9c70 <PyInit__elementtree@@Base+0x594c>  // b.any
    9c6c:	bl	3d70 <_Py_Dealloc@plt>
    9c70:	ldr	x8, [x21, #40]
    9c74:	cbz	x8, 9d44 <PyInit__elementtree@@Base+0x5a20>
    9c78:	ldr	x1, [x8, #8]
    9c7c:	mov	x0, x19
    9c80:	bl	4c80 <PyInit__elementtree@@Base+0x95c>
    9c84:	tbnz	w0, #31, 9d84 <PyInit__elementtree@@Base+0x5a60>
    9c88:	ldr	x8, [x21, #40]
    9c8c:	ldr	x9, [x8, #8]
    9c90:	cmp	x9, #0x1
    9c94:	b.lt	9d3c <PyInit__elementtree@@Base+0x5a18>  // b.tstop
    9c98:	adrp	x22, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    9c9c:	mov	x24, xzr
    9ca0:	add	x22, x22, #0xe8
    9ca4:	b	9cc8 <PyInit__elementtree@@Base+0x59a4>
    9ca8:	ldr	x8, [x19, #40]
    9cac:	ldr	x8, [x8, #24]
    9cb0:	str	x23, [x8, x24, lsl #3]
    9cb4:	ldr	x8, [x21, #40]
    9cb8:	add	x24, x24, #0x1
    9cbc:	ldr	x9, [x8, #8]
    9cc0:	cmp	x24, x9
    9cc4:	b.ge	9d3c <PyInit__elementtree@@Base+0x5a18>  // b.tcont
    9cc8:	ldr	x8, [x8, #24]
    9ccc:	mov	x1, x20
    9cd0:	ldr	x0, [x8, x24, lsl #3]
    9cd4:	bl	9db8 <PyInit__elementtree@@Base+0x5a94>
    9cd8:	cbz	x0, 9d30 <PyInit__elementtree@@Base+0x5a0c>
    9cdc:	mov	x23, x0
    9ce0:	ldr	x0, [x0, #8]
    9ce4:	cmp	x0, x22
    9ce8:	b.eq	9ca8 <PyInit__elementtree@@Base+0x5984>  // b.none
    9cec:	mov	x1, x22
    9cf0:	bl	4160 <PyType_IsSubtype@plt>
    9cf4:	cbnz	w0, 9ca8 <PyInit__elementtree@@Base+0x5984>
    9cf8:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9cfc:	ldr	x8, [x23, #8]
    9d00:	ldr	x9, [x9, #3944]
    9d04:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    9d08:	add	x1, x1, #0xe3f
    9d0c:	ldr	x2, [x8, #24]
    9d10:	ldr	x0, [x9]
    9d14:	bl	4180 <PyErr_Format@plt>
    9d18:	ldr	x8, [x23]
    9d1c:	subs	x8, x8, #0x1
    9d20:	str	x8, [x23]
    9d24:	b.ne	9d30 <PyInit__elementtree@@Base+0x5a0c>  // b.any
    9d28:	mov	x0, x23
    9d2c:	bl	3d70 <_Py_Dealloc@plt>
    9d30:	ldr	x8, [x19, #40]
    9d34:	str	x24, [x8, #8]
    9d38:	b	9d84 <PyInit__elementtree@@Base+0x5a60>
    9d3c:	ldr	x8, [x19, #40]
    9d40:	str	x9, [x8, #8]
    9d44:	mov	x0, x21
    9d48:	bl	3e70 <PyLong_FromSsize_t@plt>
    9d4c:	cbz	x0, 9d84 <PyInit__elementtree@@Base+0x5a60>
    9d50:	mov	x21, x0
    9d54:	mov	x0, x20
    9d58:	mov	x1, x21
    9d5c:	mov	x2, x19
    9d60:	bl	4140 <PyDict_SetItem@plt>
    9d64:	ldr	x8, [x21]
    9d68:	mov	w20, w0
    9d6c:	subs	x8, x8, #0x1
    9d70:	str	x8, [x21]
    9d74:	b.ne	9d80 <PyInit__elementtree@@Base+0x5a5c>  // b.any
    9d78:	mov	x0, x21
    9d7c:	bl	3d70 <_Py_Dealloc@plt>
    9d80:	tbz	w20, #31, 9da0 <PyInit__elementtree@@Base+0x5a7c>
    9d84:	ldr	x8, [x19]
    9d88:	subs	x8, x8, #0x1
    9d8c:	str	x8, [x19]
    9d90:	b.ne	9d9c <PyInit__elementtree@@Base+0x5a78>  // b.any
    9d94:	mov	x0, x19
    9d98:	bl	3d70 <_Py_Dealloc@plt>
    9d9c:	mov	x19, xzr
    9da0:	mov	x0, x19
    9da4:	ldp	x20, x19, [sp, #48]
    9da8:	ldp	x22, x21, [sp, #32]
    9dac:	ldp	x24, x23, [sp, #16]
    9db0:	ldp	x29, x30, [sp], #64
    9db4:	ret
    9db8:	sub	sp, sp, #0x50
    9dbc:	stp	x29, x30, [sp, #32]
    9dc0:	str	x21, [sp, #48]
    9dc4:	stp	x20, x19, [sp, #64]
    9dc8:	add	x29, sp, #0x20
    9dcc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9dd0:	ldr	x8, [x8, #3976]
    9dd4:	cmp	x0, x8
    9dd8:	b.eq	9e30 <PyInit__elementtree@@Base+0x5b0c>  // b.none
    9ddc:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9de0:	ldp	x9, x8, [x0]
    9de4:	ldr	x21, [x21, #4032]
    9de8:	mov	x19, x0
    9dec:	cmp	x8, x21
    9df0:	b.eq	9e44 <PyInit__elementtree@@Base+0x5b20>  // b.none
    9df4:	mov	x20, x1
    9df8:	cmp	x9, #0x1
    9dfc:	b.ne	9e8c <PyInit__elementtree@@Base+0x5b68>  // b.any
    9e00:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9e04:	ldr	x9, [x9, #3992]
    9e08:	cmp	x8, x9
    9e0c:	b.eq	9e50 <PyInit__elementtree@@Base+0x5b2c>  // b.none
    9e10:	adrp	x9, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    9e14:	add	x9, x9, #0xe8
    9e18:	cmp	x8, x9
    9e1c:	b.ne	9e8c <PyInit__elementtree@@Base+0x5b68>  // b.any
    9e20:	mov	x0, x19
    9e24:	mov	x1, x20
    9e28:	bl	9b20 <PyInit__elementtree@@Base+0x57fc>
    9e2c:	b	9f00 <PyInit__elementtree@@Base+0x5bdc>
    9e30:	ldr	x9, [x8]
    9e34:	mov	x19, x8
    9e38:	add	x9, x9, #0x1
    9e3c:	str	x9, [x8]
    9e40:	b	9f24 <PyInit__elementtree@@Base+0x5c00>
    9e44:	add	x8, x9, #0x1
    9e48:	str	x8, [x19]
    9e4c:	b	9f24 <PyInit__elementtree@@Base+0x5c00>
    9e50:	str	xzr, [sp, #8]
    9e54:	add	x1, sp, #0x8
    9e58:	add	x2, sp, #0x10
    9e5c:	add	x3, x29, #0x18
    9e60:	mov	x0, x19
    9e64:	bl	40b0 <PyDict_Next@plt>
    9e68:	cbz	w0, 9f3c <PyInit__elementtree@@Base+0x5c18>
    9e6c:	ldr	x8, [sp, #16]
    9e70:	ldr	x8, [x8, #8]
    9e74:	cmp	x8, x21
    9e78:	b.ne	9e8c <PyInit__elementtree@@Base+0x5b68>  // b.any
    9e7c:	ldr	x8, [x29, #24]
    9e80:	ldr	x8, [x8, #8]
    9e84:	cmp	x8, x21
    9e88:	b.eq	9e54 <PyInit__elementtree@@Base+0x5b30>  // b.none
    9e8c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    9e90:	add	x0, x0, #0xd40
    9e94:	bl	3fc0 <PyState_FindModule@plt>
    9e98:	bl	3e10 <PyModule_GetState@plt>
    9e9c:	ldr	x8, [x0, #8]
    9ea0:	cbz	x8, 9f08 <PyInit__elementtree@@Base+0x5be4>
    9ea4:	stp	x19, x20, [sp, #16]
    9ea8:	ldr	x19, [x0, #8]
    9eac:	ldr	x8, [x19, #8]
    9eb0:	ldrb	w9, [x8, #169]
    9eb4:	tbz	w9, #3, 9eec <PyInit__elementtree@@Base+0x5bc8>
    9eb8:	ldr	x8, [x8, #56]
    9ebc:	ldr	x8, [x19, x8]
    9ec0:	cbz	x8, 9eec <PyInit__elementtree@@Base+0x5bc8>
    9ec4:	add	x1, sp, #0x10
    9ec8:	mov	w2, #0x2                   	// #2
    9ecc:	mov	x0, x19
    9ed0:	mov	x3, xzr
    9ed4:	blr	x8
    9ed8:	mov	x1, x0
    9edc:	mov	x0, x19
    9ee0:	mov	x2, xzr
    9ee4:	bl	4020 <_Py_CheckFunctionResult@plt>
    9ee8:	b	9f00 <PyInit__elementtree@@Base+0x5bdc>
    9eec:	add	x1, sp, #0x10
    9ef0:	mov	w2, #0x2                   	// #2
    9ef4:	mov	x0, x19
    9ef8:	mov	x3, xzr
    9efc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    9f00:	mov	x19, x0
    9f04:	b	9f24 <PyInit__elementtree@@Base+0x5c00>
    9f08:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9f0c:	ldr	x8, [x8, #3920]
    9f10:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    9f14:	add	x1, x1, #0x2b1
    9f18:	ldr	x0, [x8]
    9f1c:	bl	3de0 <PyErr_SetString@plt>
    9f20:	mov	x19, xzr
    9f24:	mov	x0, x19
    9f28:	ldp	x20, x19, [sp, #64]
    9f2c:	ldr	x21, [sp, #48]
    9f30:	ldp	x29, x30, [sp, #32]
    9f34:	add	sp, sp, #0x50
    9f38:	ret
    9f3c:	mov	x0, x19
    9f40:	bl	4150 <PyDict_Copy@plt>
    9f44:	b	9f00 <PyInit__elementtree@@Base+0x5bdc>
    9f48:	ldr	x0, [x0, #16]
    9f4c:	ldr	x8, [x0]
    9f50:	add	x8, x8, #0x1
    9f54:	str	x8, [x0]
    9f58:	ret
    9f5c:	stp	x29, x30, [sp, #-16]!
    9f60:	mov	x29, sp
    9f64:	cbz	x1, 9f9c <PyInit__elementtree@@Base+0x5c78>
    9f68:	ldr	x9, [x1]
    9f6c:	mov	x8, x0
    9f70:	add	x9, x9, #0x1
    9f74:	str	x9, [x1]
    9f78:	ldr	x0, [x0, #16]
    9f7c:	str	x1, [x8, #16]
    9f80:	ldr	x8, [x0]
    9f84:	subs	x8, x8, #0x1
    9f88:	str	x8, [x0]
    9f8c:	b.eq	9fc0 <PyInit__elementtree@@Base+0x5c9c>  // b.none
    9f90:	mov	w0, wzr
    9f94:	ldp	x29, x30, [sp], #16
    9f98:	ret
    9f9c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9fa0:	ldr	x8, [x8, #4008]
    9fa4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    9fa8:	add	x1, x1, #0x434
    9fac:	ldr	x0, [x8]
    9fb0:	bl	3de0 <PyErr_SetString@plt>
    9fb4:	mov	w0, #0xffffffff            	// #-1
    9fb8:	ldp	x29, x30, [sp], #16
    9fbc:	ret
    9fc0:	bl	3d70 <_Py_Dealloc@plt>
    9fc4:	mov	w0, wzr
    9fc8:	ldp	x29, x30, [sp], #16
    9fcc:	ret
    9fd0:	stp	x29, x30, [sp, #-48]!
    9fd4:	stp	x22, x21, [sp, #16]
    9fd8:	stp	x20, x19, [sp, #32]
    9fdc:	mov	x29, sp
    9fe0:	ldr	x19, [x0, #24]
    9fe4:	tbz	w19, #0, a004 <PyInit__elementtree@@Base+0x5ce0>
    9fe8:	and	x21, x19, #0xfffffffffffffffe
    9fec:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9ff0:	ldr	x8, [x21, #8]
    9ff4:	ldr	x9, [x9, #4064]
    9ff8:	mov	x19, x21
    9ffc:	cmp	x8, x9
    a000:	b.eq	a028 <PyInit__elementtree@@Base+0x5d04>  // b.none
    a004:	cbz	x19, a014 <PyInit__elementtree@@Base+0x5cf0>
    a008:	ldr	x8, [x19]
    a00c:	add	x8, x8, #0x1
    a010:	str	x8, [x19]
    a014:	mov	x0, x19
    a018:	ldp	x20, x19, [sp, #32]
    a01c:	ldp	x22, x21, [sp, #16]
    a020:	ldp	x29, x30, [sp], #48
    a024:	ret
    a028:	mov	x20, x0
    a02c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    a030:	add	x0, x0, #0x79
    a034:	mov	x1, xzr
    a038:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    a03c:	cbz	x0, a08c <PyInit__elementtree@@Base+0x5d68>
    a040:	mov	x1, x21
    a044:	mov	x22, x0
    a048:	bl	3d20 <PyUnicode_Join@plt>
    a04c:	ldr	x8, [x22]
    a050:	mov	x19, x0
    a054:	subs	x8, x8, #0x1
    a058:	str	x8, [x22]
    a05c:	b.ne	a068 <PyInit__elementtree@@Base+0x5d44>  // b.any
    a060:	mov	x0, x22
    a064:	bl	3d70 <_Py_Dealloc@plt>
    a068:	cbz	x19, a014 <PyInit__elementtree@@Base+0x5cf0>
    a06c:	str	x19, [x20, #24]
    a070:	ldr	x8, [x21]
    a074:	subs	x8, x8, #0x1
    a078:	str	x8, [x21]
    a07c:	b.ne	a008 <PyInit__elementtree@@Base+0x5ce4>  // b.any
    a080:	mov	x0, x21
    a084:	bl	3d70 <_Py_Dealloc@plt>
    a088:	b	a008 <PyInit__elementtree@@Base+0x5ce4>
    a08c:	mov	x19, xzr
    a090:	b	a014 <PyInit__elementtree@@Base+0x5cf0>
    a094:	stp	x29, x30, [sp, #-16]!
    a098:	mov	x29, sp
    a09c:	cbz	x1, a0d4 <PyInit__elementtree@@Base+0x5db0>
    a0a0:	ldr	x8, [x1]
    a0a4:	add	x8, x8, #0x1
    a0a8:	str	x8, [x1]
    a0ac:	ldr	x8, [x0, #24]
    a0b0:	str	x1, [x0, #24]
    a0b4:	and	x0, x8, #0xfffffffffffffffe
    a0b8:	ldr	x8, [x0]
    a0bc:	subs	x8, x8, #0x1
    a0c0:	str	x8, [x0]
    a0c4:	b.eq	a0f8 <PyInit__elementtree@@Base+0x5dd4>  // b.none
    a0c8:	mov	w0, wzr
    a0cc:	ldp	x29, x30, [sp], #16
    a0d0:	ret
    a0d4:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a0d8:	ldr	x8, [x8, #4008]
    a0dc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a0e0:	add	x1, x1, #0x434
    a0e4:	ldr	x0, [x8]
    a0e8:	bl	3de0 <PyErr_SetString@plt>
    a0ec:	mov	w0, #0xffffffff            	// #-1
    a0f0:	ldp	x29, x30, [sp], #16
    a0f4:	ret
    a0f8:	bl	3d70 <_Py_Dealloc@plt>
    a0fc:	mov	w0, wzr
    a100:	ldp	x29, x30, [sp], #16
    a104:	ret
    a108:	stp	x29, x30, [sp, #-48]!
    a10c:	stp	x22, x21, [sp, #16]
    a110:	stp	x20, x19, [sp, #32]
    a114:	mov	x29, sp
    a118:	ldr	x19, [x0, #32]
    a11c:	tbz	w19, #0, a13c <PyInit__elementtree@@Base+0x5e18>
    a120:	and	x21, x19, #0xfffffffffffffffe
    a124:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a128:	ldr	x8, [x21, #8]
    a12c:	ldr	x9, [x9, #4064]
    a130:	mov	x19, x21
    a134:	cmp	x8, x9
    a138:	b.eq	a160 <PyInit__elementtree@@Base+0x5e3c>  // b.none
    a13c:	cbz	x19, a14c <PyInit__elementtree@@Base+0x5e28>
    a140:	ldr	x8, [x19]
    a144:	add	x8, x8, #0x1
    a148:	str	x8, [x19]
    a14c:	mov	x0, x19
    a150:	ldp	x20, x19, [sp, #32]
    a154:	ldp	x22, x21, [sp, #16]
    a158:	ldp	x29, x30, [sp], #48
    a15c:	ret
    a160:	mov	x20, x0
    a164:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    a168:	add	x0, x0, #0x79
    a16c:	mov	x1, xzr
    a170:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    a174:	cbz	x0, a1c4 <PyInit__elementtree@@Base+0x5ea0>
    a178:	mov	x1, x21
    a17c:	mov	x22, x0
    a180:	bl	3d20 <PyUnicode_Join@plt>
    a184:	ldr	x8, [x22]
    a188:	mov	x19, x0
    a18c:	subs	x8, x8, #0x1
    a190:	str	x8, [x22]
    a194:	b.ne	a1a0 <PyInit__elementtree@@Base+0x5e7c>  // b.any
    a198:	mov	x0, x22
    a19c:	bl	3d70 <_Py_Dealloc@plt>
    a1a0:	cbz	x19, a14c <PyInit__elementtree@@Base+0x5e28>
    a1a4:	str	x19, [x20, #32]
    a1a8:	ldr	x8, [x21]
    a1ac:	subs	x8, x8, #0x1
    a1b0:	str	x8, [x21]
    a1b4:	b.ne	a140 <PyInit__elementtree@@Base+0x5e1c>  // b.any
    a1b8:	mov	x0, x21
    a1bc:	bl	3d70 <_Py_Dealloc@plt>
    a1c0:	b	a140 <PyInit__elementtree@@Base+0x5e1c>
    a1c4:	mov	x19, xzr
    a1c8:	b	a14c <PyInit__elementtree@@Base+0x5e28>
    a1cc:	stp	x29, x30, [sp, #-16]!
    a1d0:	mov	x29, sp
    a1d4:	cbz	x1, a20c <PyInit__elementtree@@Base+0x5ee8>
    a1d8:	ldr	x8, [x1]
    a1dc:	add	x8, x8, #0x1
    a1e0:	str	x8, [x1]
    a1e4:	ldr	x8, [x0, #32]
    a1e8:	str	x1, [x0, #32]
    a1ec:	and	x0, x8, #0xfffffffffffffffe
    a1f0:	ldr	x8, [x0]
    a1f4:	subs	x8, x8, #0x1
    a1f8:	str	x8, [x0]
    a1fc:	b.eq	a230 <PyInit__elementtree@@Base+0x5f0c>  // b.none
    a200:	mov	w0, wzr
    a204:	ldp	x29, x30, [sp], #16
    a208:	ret
    a20c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a210:	ldr	x8, [x8, #4008]
    a214:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a218:	add	x1, x1, #0x434
    a21c:	ldr	x0, [x8]
    a220:	bl	3de0 <PyErr_SetString@plt>
    a224:	mov	w0, #0xffffffff            	// #-1
    a228:	ldp	x29, x30, [sp], #16
    a22c:	ret
    a230:	bl	3d70 <_Py_Dealloc@plt>
    a234:	mov	w0, wzr
    a238:	ldp	x29, x30, [sp], #16
    a23c:	ret
    a240:	stp	x29, x30, [sp, #-48]!
    a244:	str	x21, [sp, #16]
    a248:	stp	x20, x19, [sp, #32]
    a24c:	mov	x29, sp
    a250:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a254:	mov	x19, x0
    a258:	ldr	x0, [x0, #40]
    a25c:	ldr	x21, [x21, #3976]
    a260:	cbz	x0, a278 <PyInit__elementtree@@Base+0x5f54>
    a264:	ldr	x20, [x0]
    a268:	cmp	x20, x21
    a26c:	b.eq	a2b8 <PyInit__elementtree@@Base+0x5f94>  // b.none
    a270:	cbnz	x20, a2e8 <PyInit__elementtree@@Base+0x5fc4>
    a274:	b	a300 <PyInit__elementtree@@Base+0x5fdc>
    a278:	mov	w0, #0x40                  	// #64
    a27c:	bl	3e00 <PyObject_Malloc@plt>
    a280:	str	x0, [x19, #40]
    a284:	cbz	x0, a2f8 <PyInit__elementtree@@Base+0x5fd4>
    a288:	ldr	x8, [x21]
    a28c:	adrp	x9, c000 <PyInit__elementtree@@Base+0x7cdc>
    a290:	ldr	q0, [x9, #3392]
    a294:	add	x10, x0, #0x20
    a298:	add	x8, x8, #0x1
    a29c:	str	x8, [x21]
    a2a0:	str	x21, [x0]
    a2a4:	stur	q0, [x0, #8]
    a2a8:	str	x10, [x0, #24]
    a2ac:	mov	x20, x21
    a2b0:	cmp	x20, x21
    a2b4:	b.ne	a270 <PyInit__elementtree@@Base+0x5f4c>  // b.any
    a2b8:	bl	4080 <PyDict_New@plt>
    a2bc:	mov	x20, x0
    a2c0:	cbz	x0, a300 <PyInit__elementtree@@Base+0x5fdc>
    a2c4:	ldr	x8, [x21]
    a2c8:	subs	x8, x8, #0x1
    a2cc:	str	x8, [x21]
    a2d0:	b.ne	a2e0 <PyInit__elementtree@@Base+0x5fbc>  // b.any
    a2d4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a2d8:	ldr	x0, [x0, #3976]
    a2dc:	bl	3d70 <_Py_Dealloc@plt>
    a2e0:	ldr	x8, [x19, #40]
    a2e4:	str	x20, [x8]
    a2e8:	ldr	x8, [x20]
    a2ec:	add	x8, x8, #0x1
    a2f0:	str	x8, [x20]
    a2f4:	b	a300 <PyInit__elementtree@@Base+0x5fdc>
    a2f8:	bl	3d80 <PyErr_NoMemory@plt>
    a2fc:	mov	x20, xzr
    a300:	mov	x0, x20
    a304:	ldp	x20, x19, [sp, #32]
    a308:	ldr	x21, [sp, #16]
    a30c:	ldp	x29, x30, [sp], #48
    a310:	ret
    a314:	stp	x29, x30, [sp, #-32]!
    a318:	stp	x20, x19, [sp, #16]
    a31c:	mov	x29, sp
    a320:	cbz	x1, a3ac <PyInit__elementtree@@Base+0x6088>
    a324:	mov	x20, x0
    a328:	ldr	x0, [x0, #40]
    a32c:	mov	x19, x1
    a330:	cbnz	x0, a370 <PyInit__elementtree@@Base+0x604c>
    a334:	mov	w0, #0x40                  	// #64
    a338:	bl	3e00 <PyObject_Malloc@plt>
    a33c:	str	x0, [x20, #40]
    a340:	cbz	x0, a3d4 <PyInit__elementtree@@Base+0x60b0>
    a344:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a348:	ldr	x8, [x8, #3976]
    a34c:	adrp	x10, c000 <PyInit__elementtree@@Base+0x7cdc>
    a350:	ldr	q0, [x10, #3392]
    a354:	add	x11, x0, #0x20
    a358:	ldr	x9, [x8]
    a35c:	add	x9, x9, #0x1
    a360:	str	x9, [x8]
    a364:	str	x8, [x0]
    a368:	stur	q0, [x0, #8]
    a36c:	str	x11, [x0, #24]
    a370:	ldr	x8, [x19]
    a374:	add	x8, x8, #0x1
    a378:	str	x8, [x19]
    a37c:	ldr	x8, [x0]
    a380:	str	x19, [x0]
    a384:	ldr	x9, [x8]
    a388:	subs	x9, x9, #0x1
    a38c:	str	x9, [x8]
    a390:	b.ne	a39c <PyInit__elementtree@@Base+0x6078>  // b.any
    a394:	mov	x0, x8
    a398:	bl	3d70 <_Py_Dealloc@plt>
    a39c:	mov	w0, wzr
    a3a0:	ldp	x20, x19, [sp, #16]
    a3a4:	ldp	x29, x30, [sp], #32
    a3a8:	ret
    a3ac:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a3b0:	ldr	x8, [x8, #4008]
    a3b4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a3b8:	add	x1, x1, #0x434
    a3bc:	ldr	x0, [x8]
    a3c0:	bl	3de0 <PyErr_SetString@plt>
    a3c4:	mov	w0, #0xffffffff            	// #-1
    a3c8:	ldp	x20, x19, [sp, #16]
    a3cc:	ldp	x29, x30, [sp], #32
    a3d0:	ret
    a3d4:	bl	3d80 <PyErr_NoMemory@plt>
    a3d8:	mov	w0, #0xffffffff            	// #-1
    a3dc:	ldp	x20, x19, [sp, #16]
    a3e0:	ldp	x29, x30, [sp], #32
    a3e4:	ret
    a3e8:	stp	x29, x30, [sp, #-32]!
    a3ec:	str	x19, [sp, #16]
    a3f0:	mov	x29, sp
    a3f4:	mov	x19, x0
    a3f8:	bl	4220 <PyObject_GC_UnTrack@plt>
    a3fc:	mov	x0, x19
    a400:	bl	a54c <PyInit__elementtree@@Base+0x6228>
    a404:	ldr	x8, [x19, #8]
    a408:	mov	x0, x19
    a40c:	ldr	x19, [sp, #16]
    a410:	ldr	x1, [x8, #320]
    a414:	ldp	x29, x30, [sp], #32
    a418:	br	x1
    a41c:	stp	x29, x30, [sp, #-48]!
    a420:	str	x21, [sp, #16]
    a424:	stp	x20, x19, [sp, #32]
    a428:	mov	x29, sp
    a42c:	mov	x21, x0
    a430:	ldr	x0, [x0, #112]
    a434:	mov	x19, x2
    a438:	mov	x20, x1
    a43c:	cbz	x0, a45c <PyInit__elementtree@@Base+0x6138>
    a440:	mov	x1, x19
    a444:	blr	x20
    a448:	cbz	w0, a45c <PyInit__elementtree@@Base+0x6138>
    a44c:	ldp	x20, x19, [sp, #32]
    a450:	ldr	x21, [sp, #16]
    a454:	ldp	x29, x30, [sp], #48
    a458:	ret
    a45c:	ldr	x0, [x21, #96]
    a460:	cbz	x0, a470 <PyInit__elementtree@@Base+0x614c>
    a464:	mov	x1, x19
    a468:	blr	x20
    a46c:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a470:	ldr	x0, [x21, #88]
    a474:	cbz	x0, a484 <PyInit__elementtree@@Base+0x6160>
    a478:	mov	x1, x19
    a47c:	blr	x20
    a480:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a484:	ldr	x0, [x21, #80]
    a488:	cbz	x0, a498 <PyInit__elementtree@@Base+0x6174>
    a48c:	mov	x1, x19
    a490:	blr	x20
    a494:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a498:	ldr	x0, [x21, #72]
    a49c:	cbz	x0, a4ac <PyInit__elementtree@@Base+0x6188>
    a4a0:	mov	x1, x19
    a4a4:	blr	x20
    a4a8:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a4ac:	ldr	x0, [x21, #64]
    a4b0:	cbz	x0, a4c0 <PyInit__elementtree@@Base+0x619c>
    a4b4:	mov	x1, x19
    a4b8:	blr	x20
    a4bc:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a4c0:	ldr	x0, [x21, #48]
    a4c4:	cbz	x0, a4d4 <PyInit__elementtree@@Base+0x61b0>
    a4c8:	mov	x1, x19
    a4cc:	blr	x20
    a4d0:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a4d4:	ldr	x0, [x21, #56]
    a4d8:	cbz	x0, a4e8 <PyInit__elementtree@@Base+0x61c4>
    a4dc:	mov	x1, x19
    a4e0:	blr	x20
    a4e4:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a4e8:	ldr	x0, [x21, #104]
    a4ec:	cbz	x0, a4fc <PyInit__elementtree@@Base+0x61d8>
    a4f0:	mov	x1, x19
    a4f4:	blr	x20
    a4f8:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a4fc:	ldr	x0, [x21, #24]
    a500:	cbz	x0, a510 <PyInit__elementtree@@Base+0x61ec>
    a504:	mov	x1, x19
    a508:	blr	x20
    a50c:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a510:	ldr	x0, [x21, #32]
    a514:	cbz	x0, a524 <PyInit__elementtree@@Base+0x6200>
    a518:	mov	x1, x19
    a51c:	blr	x20
    a520:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a524:	ldr	x0, [x21, #40]
    a528:	cbz	x0, a538 <PyInit__elementtree@@Base+0x6214>
    a52c:	mov	x1, x19
    a530:	blr	x20
    a534:	cbnz	w0, a44c <PyInit__elementtree@@Base+0x6128>
    a538:	mov	w0, wzr
    a53c:	ldp	x20, x19, [sp, #32]
    a540:	ldr	x21, [sp, #16]
    a544:	ldp	x29, x30, [sp], #48
    a548:	ret
    a54c:	stp	x29, x30, [sp, #-32]!
    a550:	str	x19, [sp, #16]
    a554:	mov	x29, sp
    a558:	mov	x19, x0
    a55c:	ldr	x0, [x0, #16]
    a560:	cbz	x0, a578 <PyInit__elementtree@@Base+0x6254>
    a564:	str	xzr, [x19, #16]
    a568:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    a56c:	ldr	x8, [x8, #1072]
    a570:	ldr	x8, [x8, #72]
    a574:	blr	x8
    a578:	ldr	x0, [x19, #112]
    a57c:	cbz	x0, a594 <PyInit__elementtree@@Base+0x6270>
    a580:	str	xzr, [x19, #112]
    a584:	ldr	x8, [x0]
    a588:	subs	x8, x8, #0x1
    a58c:	str	x8, [x0]
    a590:	b.eq	a5b8 <PyInit__elementtree@@Base+0x6294>  // b.none
    a594:	ldr	x0, [x19, #96]
    a598:	cbz	x0, a5c4 <PyInit__elementtree@@Base+0x62a0>
    a59c:	str	xzr, [x19, #96]
    a5a0:	ldr	x8, [x0]
    a5a4:	subs	x8, x8, #0x1
    a5a8:	str	x8, [x0]
    a5ac:	b.ne	a5c4 <PyInit__elementtree@@Base+0x62a0>  // b.any
    a5b0:	bl	3d70 <_Py_Dealloc@plt>
    a5b4:	b	a5c4 <PyInit__elementtree@@Base+0x62a0>
    a5b8:	bl	3d70 <_Py_Dealloc@plt>
    a5bc:	ldr	x0, [x19, #96]
    a5c0:	cbnz	x0, a59c <PyInit__elementtree@@Base+0x6278>
    a5c4:	ldr	x0, [x19, #88]
    a5c8:	cbz	x0, a5e0 <PyInit__elementtree@@Base+0x62bc>
    a5cc:	str	xzr, [x19, #88]
    a5d0:	ldr	x8, [x0]
    a5d4:	subs	x8, x8, #0x1
    a5d8:	str	x8, [x0]
    a5dc:	b.eq	a604 <PyInit__elementtree@@Base+0x62e0>  // b.none
    a5e0:	ldr	x0, [x19, #80]
    a5e4:	cbz	x0, a610 <PyInit__elementtree@@Base+0x62ec>
    a5e8:	str	xzr, [x19, #80]
    a5ec:	ldr	x8, [x0]
    a5f0:	subs	x8, x8, #0x1
    a5f4:	str	x8, [x0]
    a5f8:	b.ne	a610 <PyInit__elementtree@@Base+0x62ec>  // b.any
    a5fc:	bl	3d70 <_Py_Dealloc@plt>
    a600:	b	a610 <PyInit__elementtree@@Base+0x62ec>
    a604:	bl	3d70 <_Py_Dealloc@plt>
    a608:	ldr	x0, [x19, #80]
    a60c:	cbnz	x0, a5e8 <PyInit__elementtree@@Base+0x62c4>
    a610:	ldr	x0, [x19, #72]
    a614:	cbz	x0, a62c <PyInit__elementtree@@Base+0x6308>
    a618:	str	xzr, [x19, #72]
    a61c:	ldr	x8, [x0]
    a620:	subs	x8, x8, #0x1
    a624:	str	x8, [x0]
    a628:	b.eq	a650 <PyInit__elementtree@@Base+0x632c>  // b.none
    a62c:	ldr	x0, [x19, #64]
    a630:	cbz	x0, a65c <PyInit__elementtree@@Base+0x6338>
    a634:	str	xzr, [x19, #64]
    a638:	ldr	x8, [x0]
    a63c:	subs	x8, x8, #0x1
    a640:	str	x8, [x0]
    a644:	b.ne	a65c <PyInit__elementtree@@Base+0x6338>  // b.any
    a648:	bl	3d70 <_Py_Dealloc@plt>
    a64c:	b	a65c <PyInit__elementtree@@Base+0x6338>
    a650:	bl	3d70 <_Py_Dealloc@plt>
    a654:	ldr	x0, [x19, #64]
    a658:	cbnz	x0, a634 <PyInit__elementtree@@Base+0x6310>
    a65c:	ldr	x0, [x19, #48]
    a660:	cbz	x0, a678 <PyInit__elementtree@@Base+0x6354>
    a664:	str	xzr, [x19, #48]
    a668:	ldr	x8, [x0]
    a66c:	subs	x8, x8, #0x1
    a670:	str	x8, [x0]
    a674:	b.eq	a69c <PyInit__elementtree@@Base+0x6378>  // b.none
    a678:	ldr	x0, [x19, #56]
    a67c:	cbz	x0, a6a8 <PyInit__elementtree@@Base+0x6384>
    a680:	str	xzr, [x19, #56]
    a684:	ldr	x8, [x0]
    a688:	subs	x8, x8, #0x1
    a68c:	str	x8, [x0]
    a690:	b.ne	a6a8 <PyInit__elementtree@@Base+0x6384>  // b.any
    a694:	bl	3d70 <_Py_Dealloc@plt>
    a698:	b	a6a8 <PyInit__elementtree@@Base+0x6384>
    a69c:	bl	3d70 <_Py_Dealloc@plt>
    a6a0:	ldr	x0, [x19, #56]
    a6a4:	cbnz	x0, a680 <PyInit__elementtree@@Base+0x635c>
    a6a8:	ldr	x0, [x19, #104]
    a6ac:	cbz	x0, a6c4 <PyInit__elementtree@@Base+0x63a0>
    a6b0:	str	xzr, [x19, #104]
    a6b4:	ldr	x8, [x0]
    a6b8:	subs	x8, x8, #0x1
    a6bc:	str	x8, [x0]
    a6c0:	b.eq	a6e8 <PyInit__elementtree@@Base+0x63c4>  // b.none
    a6c4:	ldr	x0, [x19, #24]
    a6c8:	cbz	x0, a6f4 <PyInit__elementtree@@Base+0x63d0>
    a6cc:	str	xzr, [x19, #24]
    a6d0:	ldr	x8, [x0]
    a6d4:	subs	x8, x8, #0x1
    a6d8:	str	x8, [x0]
    a6dc:	b.ne	a6f4 <PyInit__elementtree@@Base+0x63d0>  // b.any
    a6e0:	bl	3d70 <_Py_Dealloc@plt>
    a6e4:	b	a6f4 <PyInit__elementtree@@Base+0x63d0>
    a6e8:	bl	3d70 <_Py_Dealloc@plt>
    a6ec:	ldr	x0, [x19, #24]
    a6f0:	cbnz	x0, a6cc <PyInit__elementtree@@Base+0x63a8>
    a6f4:	ldr	x0, [x19, #32]
    a6f8:	cbz	x0, a710 <PyInit__elementtree@@Base+0x63ec>
    a6fc:	str	xzr, [x19, #32]
    a700:	ldr	x8, [x0]
    a704:	subs	x8, x8, #0x1
    a708:	str	x8, [x0]
    a70c:	b.eq	a73c <PyInit__elementtree@@Base+0x6418>  // b.none
    a710:	ldr	x0, [x19, #40]
    a714:	cbz	x0, a72c <PyInit__elementtree@@Base+0x6408>
    a718:	str	xzr, [x19, #40]
    a71c:	ldr	x8, [x0]
    a720:	subs	x8, x8, #0x1
    a724:	str	x8, [x0]
    a728:	b.eq	a74c <PyInit__elementtree@@Base+0x6428>  // b.none
    a72c:	ldr	x19, [sp, #16]
    a730:	mov	w0, wzr
    a734:	ldp	x29, x30, [sp], #32
    a738:	ret
    a73c:	bl	3d70 <_Py_Dealloc@plt>
    a740:	ldr	x0, [x19, #40]
    a744:	cbnz	x0, a718 <PyInit__elementtree@@Base+0x63f4>
    a748:	b	a72c <PyInit__elementtree@@Base+0x6408>
    a74c:	bl	3d70 <_Py_Dealloc@plt>
    a750:	ldr	x19, [sp, #16]
    a754:	mov	w0, wzr
    a758:	ldp	x29, x30, [sp], #32
    a75c:	ret
    a760:	sub	sp, sp, #0x50
    a764:	stp	x29, x30, [sp, #32]
    a768:	stp	x22, x21, [sp, #48]
    a76c:	stp	x20, x19, [sp, #64]
    a770:	add	x29, sp, #0x20
    a774:	ldr	x20, [x1, #16]
    a778:	mov	x19, x0
    a77c:	cbz	x2, a788 <PyInit__elementtree@@Base+0x6464>
    a780:	ldr	x21, [x2, #16]
    a784:	b	a790 <PyInit__elementtree@@Base+0x646c>
    a788:	mov	x21, xzr
    a78c:	cbz	x20, a81c <PyInit__elementtree@@Base+0x64f8>
    a790:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    a794:	add	x0, x1, #0x18
    a798:	add	x8, sp, #0x10
    a79c:	add	x4, x4, #0xd00
    a7a0:	mov	x1, x20
    a7a4:	mov	x3, xzr
    a7a8:	mov	w5, wzr
    a7ac:	mov	w6, wzr
    a7b0:	mov	w7, wzr
    a7b4:	str	x8, [sp]
    a7b8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    a7bc:	cbz	x0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a7c0:	add	x8, x21, x20
    a7c4:	cbz	x8, a818 <PyInit__elementtree@@Base+0x64f4>
    a7c8:	ldr	x20, [x0]
    a7cc:	cmp	x8, #0x1
    a7d0:	b.ne	a7d8 <PyInit__elementtree@@Base+0x64b4>  // b.any
    a7d4:	cbnz	x20, a81c <PyInit__elementtree@@Base+0x64f8>
    a7d8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a7dc:	ldr	x3, [x0, #8]
    a7e0:	ldr	x8, [x8, #3976]
    a7e4:	cmp	x3, x8
    a7e8:	b.eq	a81c <PyInit__elementtree@@Base+0x64f8>  // b.none
    a7ec:	ldr	x8, [x3, #8]
    a7f0:	ldrb	w8, [x8, #171]
    a7f4:	tbnz	w8, #4, abf0 <PyInit__elementtree@@Base+0x68cc>
    a7f8:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    a7fc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a800:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    a804:	add	x0, x0, #0x476
    a808:	add	x1, x1, #0x5e2
    a80c:	add	x2, x2, #0x5f6
    a810:	bl	3ed0 <_PyArg_BadArgument@plt>
    a814:	b	a8fc <PyInit__elementtree@@Base+0x65d8>
    a818:	mov	x20, xzr
    a81c:	mov	x21, xzr
    a820:	bl	4080 <PyDict_New@plt>
    a824:	str	x0, [x19, #32]
    a828:	cbz	x0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a82c:	bl	4080 <PyDict_New@plt>
    a830:	str	x0, [x19, #40]
    a834:	cbz	x0, a894 <PyInit__elementtree@@Base+0x6570>
    a838:	adrp	x22, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    a83c:	ldr	x8, [x22, #1072]
    a840:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    a844:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    a848:	add	x1, x1, #0xb78
    a84c:	ldr	x8, [x8, #64]
    a850:	add	x2, x2, #0x2ee
    a854:	mov	x0, x21
    a858:	blr	x8
    a85c:	str	x0, [x19, #16]
    a860:	cbz	x0, a8b8 <PyInit__elementtree@@Base+0x6594>
    a864:	ldr	x8, [x22, #1072]
    a868:	ldr	x8, [x8, #168]
    a86c:	cbz	x8, a880 <PyInit__elementtree@@Base+0x655c>
    a870:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a874:	ldr	x9, [x9, #4040]
    a878:	ldr	x1, [x9, #16]
    a87c:	blr	x8
    a880:	cbz	x20, a914 <PyInit__elementtree@@Base+0x65f0>
    a884:	ldr	x8, [x20]
    a888:	add	x8, x8, #0x1
    a88c:	str	x8, [x20]
    a890:	b	a930 <PyInit__elementtree@@Base+0x660c>
    a894:	ldr	x0, [x19, #32]
    a898:	cbz	x0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a89c:	str	xzr, [x19, #32]
    a8a0:	ldr	x8, [x0]
    a8a4:	subs	x8, x8, #0x1
    a8a8:	str	x8, [x0]
    a8ac:	b.ne	a8fc <PyInit__elementtree@@Base+0x65d8>  // b.any
    a8b0:	bl	3d70 <_Py_Dealloc@plt>
    a8b4:	b	a8fc <PyInit__elementtree@@Base+0x65d8>
    a8b8:	ldr	x0, [x19, #32]
    a8bc:	cbz	x0, a8d8 <PyInit__elementtree@@Base+0x65b4>
    a8c0:	str	xzr, [x19, #32]
    a8c4:	ldr	x8, [x0]
    a8c8:	subs	x8, x8, #0x1
    a8cc:	str	x8, [x0]
    a8d0:	b.ne	a8d8 <PyInit__elementtree@@Base+0x65b4>  // b.any
    a8d4:	bl	3d70 <_Py_Dealloc@plt>
    a8d8:	ldr	x0, [x19, #40]
    a8dc:	cbz	x0, a8f8 <PyInit__elementtree@@Base+0x65d4>
    a8e0:	str	xzr, [x19, #40]
    a8e4:	ldr	x8, [x0]
    a8e8:	subs	x8, x8, #0x1
    a8ec:	str	x8, [x0]
    a8f0:	b.ne	a8f8 <PyInit__elementtree@@Base+0x65d4>  // b.any
    a8f4:	bl	3d70 <_Py_Dealloc@plt>
    a8f8:	bl	3d80 <PyErr_NoMemory@plt>
    a8fc:	mov	w0, #0xffffffff            	// #-1
    a900:	ldp	x20, x19, [sp, #64]
    a904:	ldp	x22, x21, [sp, #48]
    a908:	ldp	x29, x30, [sp, #32]
    a90c:	add	sp, sp, #0x50
    a910:	ret
    a914:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    a918:	add	x0, x0, #0xf48
    a91c:	mov	x1, xzr
    a920:	mov	x2, xzr
    a924:	bl	5988 <PyInit__elementtree@@Base+0x1664>
    a928:	mov	x20, x0
    a92c:	cbz	x0, ac30 <PyInit__elementtree@@Base+0x690c>
    a930:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a934:	add	x1, x1, #0x602
    a938:	mov	x0, x20
    a93c:	str	x20, [x19, #24]
    a940:	bl	3d00 <PyObject_GetAttrString@plt>
    a944:	str	x0, [x19, #48]
    a948:	cbnz	x0, a964 <PyInit__elementtree@@Base+0x6640>
    a94c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a950:	ldr	x8, [x8, #4008]
    a954:	ldr	x0, [x8]
    a958:	bl	3e50 <PyErr_ExceptionMatches@plt>
    a95c:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a960:	bl	3ef0 <PyErr_Clear@plt>
    a964:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    a968:	add	x1, x1, #0x60b
    a96c:	mov	x0, x20
    a970:	bl	3d00 <PyObject_GetAttrString@plt>
    a974:	str	x0, [x19, #56]
    a978:	cbnz	x0, a994 <PyInit__elementtree@@Base+0x6670>
    a97c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a980:	ldr	x8, [x8, #4008]
    a984:	ldr	x0, [x8]
    a988:	bl	3e50 <PyErr_ExceptionMatches@plt>
    a98c:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a990:	bl	3ef0 <PyErr_Clear@plt>
    a994:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    a998:	add	x1, x1, #0xefc
    a99c:	mov	x0, x20
    a9a0:	bl	3d00 <PyObject_GetAttrString@plt>
    a9a4:	str	x0, [x19, #64]
    a9a8:	cbnz	x0, a9c4 <PyInit__elementtree@@Base+0x66a0>
    a9ac:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a9b0:	ldr	x8, [x8, #4008]
    a9b4:	ldr	x0, [x8]
    a9b8:	bl	3e50 <PyErr_ExceptionMatches@plt>
    a9bc:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a9c0:	bl	3ef0 <PyErr_Clear@plt>
    a9c4:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    a9c8:	add	x1, x1, #0xef7
    a9cc:	mov	x0, x20
    a9d0:	bl	3d00 <PyObject_GetAttrString@plt>
    a9d4:	str	x0, [x19, #72]
    a9d8:	cbnz	x0, a9f4 <PyInit__elementtree@@Base+0x66d0>
    a9dc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a9e0:	ldr	x8, [x8, #4008]
    a9e4:	ldr	x0, [x8]
    a9e8:	bl	3e50 <PyErr_ExceptionMatches@plt>
    a9ec:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    a9f0:	bl	3ef0 <PyErr_Clear@plt>
    a9f4:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    a9f8:	add	x1, x1, #0xf3a
    a9fc:	mov	x0, x20
    aa00:	bl	3d00 <PyObject_GetAttrString@plt>
    aa04:	str	x0, [x19, #80]
    aa08:	cbnz	x0, aa24 <PyInit__elementtree@@Base+0x6700>
    aa0c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    aa10:	ldr	x8, [x8, #4008]
    aa14:	ldr	x0, [x8]
    aa18:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aa1c:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    aa20:	bl	3ef0 <PyErr_Clear@plt>
    aa24:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    aa28:	add	x1, x1, #0xf02
    aa2c:	mov	x0, x20
    aa30:	bl	3d00 <PyObject_GetAttrString@plt>
    aa34:	str	x0, [x19, #88]
    aa38:	cbnz	x0, aa54 <PyInit__elementtree@@Base+0x6730>
    aa3c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    aa40:	ldr	x8, [x8, #4008]
    aa44:	ldr	x0, [x8]
    aa48:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aa4c:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    aa50:	bl	3ef0 <PyErr_Clear@plt>
    aa54:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    aa58:	add	x1, x1, #0xf0a
    aa5c:	mov	x0, x20
    aa60:	bl	3d00 <PyObject_GetAttrString@plt>
    aa64:	str	x0, [x19, #96]
    aa68:	cbnz	x0, aa84 <PyInit__elementtree@@Base+0x6760>
    aa6c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    aa70:	ldr	x8, [x8, #4008]
    aa74:	ldr	x0, [x8]
    aa78:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aa7c:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    aa80:	bl	3ef0 <PyErr_Clear@plt>
    aa84:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    aa88:	add	x1, x1, #0xf0d
    aa8c:	mov	x0, x20
    aa90:	bl	3d00 <PyObject_GetAttrString@plt>
    aa94:	str	x0, [x19, #112]
    aa98:	cbnz	x0, aab4 <PyInit__elementtree@@Base+0x6790>
    aa9c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    aaa0:	ldr	x8, [x8, #4008]
    aaa4:	ldr	x0, [x8]
    aaa8:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aaac:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    aab0:	bl	3ef0 <PyErr_Clear@plt>
    aab4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    aab8:	add	x1, x1, #0x612
    aabc:	mov	x0, x20
    aac0:	bl	3d00 <PyObject_GetAttrString@plt>
    aac4:	str	x0, [x19, #104]
    aac8:	cbnz	x0, aae4 <PyInit__elementtree@@Base+0x67c0>
    aacc:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    aad0:	ldr	x8, [x8, #4008]
    aad4:	ldr	x0, [x8]
    aad8:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aadc:	cbz	w0, a8fc <PyInit__elementtree@@Base+0x65d8>
    aae0:	bl	3ef0 <PyErr_Clear@plt>
    aae4:	ldr	x8, [x22, #1072]
    aae8:	ldr	x0, [x19, #16]
    aaec:	mov	x1, x19
    aaf0:	ldr	x8, [x8, #136]
    aaf4:	blr	x8
    aaf8:	ldr	x8, [x19, #48]
    aafc:	cbnz	x8, ab08 <PyInit__elementtree@@Base+0x67e4>
    ab00:	ldr	x8, [x19, #56]
    ab04:	cbz	x8, ab28 <PyInit__elementtree@@Base+0x6804>
    ab08:	ldr	x8, [x22, #1072]
    ab0c:	ldr	x0, [x19, #16]
    ab10:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    ab14:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    ab18:	ldr	x8, [x8, #112]
    ab1c:	add	x1, x1, #0xacc
    ab20:	add	x2, x2, #0xddc
    ab24:	blr	x8
    ab28:	ldr	x8, [x22, #1072]
    ab2c:	ldr	x0, [x19, #16]
    ab30:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    ab34:	adrp	x2, c000 <PyInit__elementtree@@Base+0x7cdc>
    ab38:	ldr	x8, [x8, #104]
    ab3c:	add	x1, x1, #0x324
    ab40:	add	x2, x2, #0x5cc
    ab44:	blr	x8
    ab48:	ldr	x8, [x22, #1072]
    ab4c:	ldr	x0, [x19, #16]
    ab50:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    ab54:	add	x1, x1, #0x6dc
    ab58:	ldr	x8, [x8, #96]
    ab5c:	blr	x8
    ab60:	ldr	x8, [x22, #1072]
    ab64:	ldr	x0, [x19, #16]
    ab68:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    ab6c:	add	x1, x1, #0x8a4
    ab70:	ldr	x8, [x8, #80]
    ab74:	blr	x8
    ab78:	ldr	x8, [x19, #88]
    ab7c:	cbz	x8, ab98 <PyInit__elementtree@@Base+0x6874>
    ab80:	ldr	x8, [x22, #1072]
    ab84:	ldr	x0, [x19, #16]
    ab88:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    ab8c:	add	x1, x1, #0xfd8
    ab90:	ldr	x8, [x8, #88]
    ab94:	blr	x8
    ab98:	ldr	x8, [x19, #96]
    ab9c:	cbz	x8, abb8 <PyInit__elementtree@@Base+0x6894>
    aba0:	ldr	x8, [x22, #1072]
    aba4:	ldr	x0, [x19, #16]
    aba8:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    abac:	add	x1, x1, #0x148
    abb0:	ldr	x8, [x8, #120]
    abb4:	blr	x8
    abb8:	ldr	x8, [x22, #1072]
    abbc:	ldr	x0, [x19, #16]
    abc0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    abc4:	add	x1, x1, #0x9bc
    abc8:	ldr	x8, [x8, #144]
    abcc:	blr	x8
    abd0:	ldr	x8, [x22, #1072]
    abd4:	ldr	x0, [x19, #16]
    abd8:	mov	x2, xzr
    abdc:	ldr	x9, [x8, #128]
    abe0:	ldr	x1, [x8, #160]
    abe4:	blr	x9
    abe8:	mov	w0, wzr
    abec:	b	a900 <PyInit__elementtree@@Base+0x65dc>
    abf0:	add	x1, sp, #0x8
    abf4:	mov	x0, x3
    abf8:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    abfc:	cbz	x0, a8fc <PyInit__elementtree@@Base+0x65d8>
    ac00:	mov	x21, x0
    ac04:	bl	3c70 <strlen@plt>
    ac08:	ldr	x8, [sp, #8]
    ac0c:	cmp	x0, x8
    ac10:	b.eq	a820 <PyInit__elementtree@@Base+0x64fc>  // b.none
    ac14:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    ac18:	ldr	x8, [x8, #3928]
    ac1c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    ac20:	add	x1, x1, #0x5ca
    ac24:	ldr	x0, [x8]
    ac28:	bl	3de0 <PyErr_SetString@plt>
    ac2c:	b	a8fc <PyInit__elementtree@@Base+0x65d8>
    ac30:	ldr	x0, [x19, #32]
    ac34:	cbz	x0, ac50 <PyInit__elementtree@@Base+0x692c>
    ac38:	str	xzr, [x19, #32]
    ac3c:	ldr	x8, [x0]
    ac40:	subs	x8, x8, #0x1
    ac44:	str	x8, [x0]
    ac48:	b.ne	ac50 <PyInit__elementtree@@Base+0x692c>  // b.any
    ac4c:	bl	3d70 <_Py_Dealloc@plt>
    ac50:	ldr	x0, [x19, #40]
    ac54:	cbz	x0, a8fc <PyInit__elementtree@@Base+0x65d8>
    ac58:	str	xzr, [x19, #40]
    ac5c:	ldr	x8, [x0]
    ac60:	subs	x8, x8, #0x1
    ac64:	str	x8, [x0]
    ac68:	b.ne	a8fc <PyInit__elementtree@@Base+0x65d8>  // b.any
    ac6c:	b	a8b0 <PyInit__elementtree@@Base+0x658c>
    ac70:	stp	x29, x30, [sp, #-16]!
    ac74:	mov	x29, sp
    ac78:	ldr	x8, [x0, #304]
    ac7c:	mov	x1, xzr
    ac80:	blr	x8
    ac84:	cbz	x0, ac9c <PyInit__elementtree@@Base+0x6978>
    ac88:	movi	v0.2d, #0x0
    ac8c:	str	xzr, [x0, #112]
    ac90:	stp	q0, q0, [x0, #80]
    ac94:	stp	q0, q0, [x0, #48]
    ac98:	stp	q0, q0, [x0, #16]
    ac9c:	ldp	x29, x30, [sp], #16
    aca0:	ret
    aca4:	sub	sp, sp, #0x80
    aca8:	stp	x29, x30, [sp, #80]
    acac:	str	x21, [sp, #96]
    acb0:	stp	x20, x19, [sp, #112]
    acb4:	add	x29, sp, #0x50
    acb8:	ldr	x9, [x1, #8]
    acbc:	mov	x8, x1
    acc0:	mov	x19, x0
    acc4:	mov	x1, sp
    acc8:	ldrb	w9, [x9, #171]
    accc:	mov	x0, x8
    acd0:	tbnz	w9, #4, acfc <PyInit__elementtree@@Base+0x69d8>
    acd4:	mov	w2, wzr
    acd8:	bl	40a0 <PyObject_GetBuffer@plt>
    acdc:	tbnz	w0, #31, ada8 <PyInit__elementtree@@Base+0x6a84>
    ace0:	ldr	x2, [sp, #16]
    ace4:	mov	w8, #0x80000000            	// #-2147483648
    ace8:	cmp	x2, x8
    acec:	b.lt	ad30 <PyInit__elementtree@@Base+0x6a0c>  // b.tstop
    acf0:	mov	x0, sp
    acf4:	bl	3ce0 <PyBuffer_Release@plt>
    acf8:	b	ad14 <PyInit__elementtree@@Base+0x69f0>
    acfc:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    ad00:	cbz	x0, ada8 <PyInit__elementtree@@Base+0x6a84>
    ad04:	ldr	x8, [sp]
    ad08:	mov	w9, #0x80000000            	// #-2147483648
    ad0c:	cmp	x8, x9
    ad10:	b.lt	ad60 <PyInit__elementtree@@Base+0x6a3c>  // b.tstop
    ad14:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    ad18:	ldr	x8, [x8, #3968]
    ad1c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    ad20:	add	x1, x1, #0x49d
    ad24:	ldr	x0, [x8]
    ad28:	bl	3de0 <PyErr_SetString@plt>
    ad2c:	b	ada8 <PyInit__elementtree@@Base+0x6a84>
    ad30:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    ad34:	ldr	x8, [x21, #1072]
    ad38:	ldr	x1, [sp]
    ad3c:	ldr	x0, [x19, #16]
    ad40:	mov	w3, wzr
    ad44:	ldr	x8, [x8, #56]
    ad48:	blr	x8
    ad4c:	mov	w20, w0
    ad50:	bl	3f80 <PyErr_Occurred@plt>
    ad54:	cbz	x0, adc4 <PyInit__elementtree@@Base+0x6aa0>
    ad58:	mov	x19, xzr
    ad5c:	b	addc <PyInit__elementtree@@Base+0x6ab8>
    ad60:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    ad64:	ldr	x8, [x21, #1072]
    ad68:	mov	x20, x0
    ad6c:	ldr	x0, [x19, #16]
    ad70:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    ad74:	ldr	x8, [x8, #152]
    ad78:	add	x1, x1, #0x4b9
    ad7c:	blr	x8
    ad80:	ldr	x8, [x21, #1072]
    ad84:	ldr	w2, [sp]
    ad88:	ldr	x0, [x19, #16]
    ad8c:	mov	x1, x20
    ad90:	ldr	x8, [x8, #56]
    ad94:	mov	w3, wzr
    ad98:	blr	x8
    ad9c:	mov	w20, w0
    ada0:	bl	3f80 <PyErr_Occurred@plt>
    ada4:	cbz	x0, ade8 <PyInit__elementtree@@Base+0x6ac4>
    ada8:	mov	x19, xzr
    adac:	mov	x0, x19
    adb0:	ldp	x20, x19, [sp, #112]
    adb4:	ldr	x21, [sp, #96]
    adb8:	ldp	x29, x30, [sp, #80]
    adbc:	add	sp, sp, #0x80
    adc0:	ret
    adc4:	cbz	w20, ae04 <PyInit__elementtree@@Base+0x6ae0>
    adc8:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    adcc:	ldr	x19, [x19, #3976]
    add0:	ldr	x8, [x19]
    add4:	add	x8, x8, #0x1
    add8:	str	x8, [x19]
    addc:	mov	x0, sp
    ade0:	bl	3ce0 <PyBuffer_Release@plt>
    ade4:	b	adac <PyInit__elementtree@@Base+0x6a88>
    ade8:	cbz	w20, ae5c <PyInit__elementtree@@Base+0x6b38>
    adec:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    adf0:	ldr	x19, [x19, #3976]
    adf4:	ldr	x8, [x19]
    adf8:	add	x8, x8, #0x1
    adfc:	str	x8, [x19]
    ae00:	b	adac <PyInit__elementtree@@Base+0x6a88>
    ae04:	ldr	x8, [x21, #1072]
    ae08:	ldr	x0, [x19, #16]
    ae0c:	ldr	x8, [x8, #32]
    ae10:	blr	x8
    ae14:	ldr	x8, [x21, #1072]
    ae18:	mov	w20, w0
    ae1c:	ldr	x9, [x8, #48]
    ae20:	ldr	x8, [x19, #16]
    ae24:	mov	x0, x8
    ae28:	blr	x9
    ae2c:	ldr	x8, [x21, #1072]
    ae30:	ldr	x9, [x8, #40]
    ae34:	ldr	x8, [x19, #16]
    ae38:	mov	x19, x0
    ae3c:	mov	x0, x8
    ae40:	blr	x9
    ae44:	mov	x2, x0
    ae48:	mov	w0, w20
    ae4c:	mov	x1, x19
    ae50:	mov	x3, xzr
    ae54:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    ae58:	b	ad58 <PyInit__elementtree@@Base+0x6a34>
    ae5c:	ldr	x8, [x21, #1072]
    ae60:	ldr	x0, [x19, #16]
    ae64:	ldr	x8, [x8, #32]
    ae68:	blr	x8
    ae6c:	ldr	x8, [x21, #1072]
    ae70:	mov	w20, w0
    ae74:	ldr	x9, [x8, #48]
    ae78:	ldr	x8, [x19, #16]
    ae7c:	mov	x0, x8
    ae80:	blr	x9
    ae84:	ldr	x8, [x21, #1072]
    ae88:	ldr	x9, [x8, #40]
    ae8c:	ldr	x8, [x19, #16]
    ae90:	mov	x19, x0
    ae94:	mov	x0, x8
    ae98:	blr	x9
    ae9c:	mov	x2, x0
    aea0:	mov	w0, w20
    aea4:	mov	x1, x19
    aea8:	mov	x3, xzr
    aeac:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    aeb0:	mov	x19, xzr
    aeb4:	b	adac <PyInit__elementtree@@Base+0x6a88>
    aeb8:	stp	x29, x30, [sp, #-48]!
    aebc:	str	x21, [sp, #16]
    aec0:	stp	x20, x19, [sp, #32]
    aec4:	mov	x29, sp
    aec8:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    aecc:	ldr	x8, [x21, #1072]
    aed0:	mov	x19, x0
    aed4:	ldr	x0, [x0, #16]
    aed8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    aedc:	ldr	x8, [x8, #56]
    aee0:	add	x1, x1, #0x79
    aee4:	mov	w3, #0x1                   	// #1
    aee8:	mov	w2, wzr
    aeec:	blr	x8
    aef0:	mov	w20, w0
    aef4:	bl	3f80 <PyErr_Occurred@plt>
    aef8:	cbz	x0, af10 <PyInit__elementtree@@Base+0x6bec>
    aefc:	mov	x0, xzr
    af00:	ldp	x20, x19, [sp, #32]
    af04:	ldr	x21, [sp, #16]
    af08:	ldp	x29, x30, [sp], #48
    af0c:	ret
    af10:	cbz	w20, af68 <PyInit__elementtree@@Base+0x6c44>
    af14:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    af18:	ldr	x20, [x20, #3976]
    af1c:	adrp	x11, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    af20:	add	x11, x11, #0xf48
    af24:	ldr	x8, [x20]
    af28:	add	x9, x8, #0x1
    af2c:	str	x9, [x20]
    af30:	ldr	x9, [x19, #24]
    af34:	ldr	x10, [x9, #8]
    af38:	cmp	x10, x11
    af3c:	b.eq	afd0 <PyInit__elementtree@@Base+0x6cac>  // b.none
    af40:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    af44:	ldr	x20, [x19, #112]
    af48:	ldr	x0, [x0, #3976]
    af4c:	cbz	x20, af00 <PyInit__elementtree@@Base+0x6bdc>
    af50:	str	x8, [x0]
    af54:	cbz	x8, b010 <PyInit__elementtree@@Base+0x6cec>
    af58:	ldr	x8, [x20, #8]
    af5c:	ldrb	w9, [x8, #169]
    af60:	tbnz	w9, #3, b02c <PyInit__elementtree@@Base+0x6d08>
    af64:	b	b068 <PyInit__elementtree@@Base+0x6d44>
    af68:	ldr	x8, [x21, #1072]
    af6c:	ldr	x0, [x19, #16]
    af70:	ldr	x8, [x8, #32]
    af74:	blr	x8
    af78:	ldr	x8, [x21, #1072]
    af7c:	mov	w20, w0
    af80:	ldr	x9, [x8, #48]
    af84:	ldr	x8, [x19, #16]
    af88:	mov	x0, x8
    af8c:	blr	x9
    af90:	ldr	x8, [x21, #1072]
    af94:	ldr	x9, [x8, #40]
    af98:	ldr	x8, [x19, #16]
    af9c:	mov	x19, x0
    afa0:	mov	x0, x8
    afa4:	blr	x9
    afa8:	mov	x2, x0
    afac:	mov	w0, w20
    afb0:	mov	x1, x19
    afb4:	mov	x3, xzr
    afb8:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    afbc:	mov	x0, xzr
    afc0:	ldp	x20, x19, [sp, #32]
    afc4:	ldr	x21, [sp, #16]
    afc8:	ldp	x29, x30, [sp], #48
    afcc:	ret
    afd0:	str	x8, [x20]
    afd4:	cbnz	x8, afe8 <PyInit__elementtree@@Base+0x6cc4>
    afd8:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    afdc:	ldr	x0, [x0, #3976]
    afe0:	bl	3d70 <_Py_Dealloc@plt>
    afe4:	ldr	x9, [x19, #24]
    afe8:	ldr	x8, [x9, #16]
    afec:	cmp	x8, #0x0
    aff0:	csel	x0, x20, x8, eq  // eq = none
    aff4:	ldr	x8, [x0]
    aff8:	add	x8, x8, #0x1
    affc:	str	x8, [x0]
    b000:	ldp	x20, x19, [sp, #32]
    b004:	ldr	x21, [sp, #16]
    b008:	ldp	x29, x30, [sp], #48
    b00c:	ret
    b010:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b014:	ldr	x0, [x0, #3976]
    b018:	bl	3d70 <_Py_Dealloc@plt>
    b01c:	ldr	x20, [x19, #112]
    b020:	ldr	x8, [x20, #8]
    b024:	ldrb	w9, [x8, #169]
    b028:	tbz	w9, #3, b068 <PyInit__elementtree@@Base+0x6d44>
    b02c:	ldr	x8, [x8, #56]
    b030:	ldr	x8, [x20, x8]
    b034:	cbz	x8, b068 <PyInit__elementtree@@Base+0x6d44>
    b038:	mov	x0, x20
    b03c:	mov	x1, xzr
    b040:	mov	x2, xzr
    b044:	mov	x3, xzr
    b048:	blr	x8
    b04c:	mov	x1, x0
    b050:	mov	x0, x20
    b054:	ldp	x20, x19, [sp, #32]
    b058:	ldr	x21, [sp, #16]
    b05c:	mov	x2, xzr
    b060:	ldp	x29, x30, [sp], #48
    b064:	b	4020 <_Py_CheckFunctionResult@plt>
    b068:	mov	x0, x20
    b06c:	ldp	x20, x19, [sp, #32]
    b070:	ldr	x21, [sp, #16]
    b074:	mov	x1, xzr
    b078:	mov	x2, xzr
    b07c:	mov	x3, xzr
    b080:	ldp	x29, x30, [sp], #48
    b084:	b	41d0 <_PyObject_MakeTpCall@plt>
    b088:	stp	x29, x30, [sp, #-96]!
    b08c:	stp	x28, x27, [sp, #16]
    b090:	stp	x26, x25, [sp, #32]
    b094:	stp	x24, x23, [sp, #48]
    b098:	stp	x22, x21, [sp, #64]
    b09c:	stp	x20, x19, [sp, #80]
    b0a0:	mov	x29, sp
    b0a4:	mov	x8, x1
    b0a8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b0ac:	mov	x19, x0
    b0b0:	add	x1, x1, #0x4eb
    b0b4:	mov	x0, x8
    b0b8:	bl	3d00 <PyObject_GetAttrString@plt>
    b0bc:	cbz	x0, b3ac <PyInit__elementtree@@Base+0x7088>
    b0c0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b0c4:	add	x1, x1, #0xf0b
    b0c8:	mov	w2, #0x10000               	// #65536
    b0cc:	mov	x21, x0
    b0d0:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    b0d4:	cbz	x0, b290 <PyInit__elementtree@@Base+0x6f6c>
    b0d8:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b0dc:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b0e0:	ldr	x22, [x22, #4032]
    b0e4:	ldr	x20, [x20, #3976]
    b0e8:	adrp	x27, d000 <PyInit__elementtree@@Base+0x8cdc>
    b0ec:	adrp	x24, c000 <PyInit__elementtree@@Base+0x7cdc>
    b0f0:	mov	x26, x0
    b0f4:	add	x27, x27, #0x4b9
    b0f8:	mov	w23, #0x80000000            	// #-2147483648
    b0fc:	adrp	x28, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    b100:	add	x24, x24, #0xf0b
    b104:	b	b120 <PyInit__elementtree@@Base+0x6dfc>
    b108:	mov	w2, #0x10000               	// #65536
    b10c:	mov	x0, x21
    b110:	mov	x1, x24
    b114:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    b118:	mov	x26, x0
    b11c:	cbz	x0, b290 <PyInit__elementtree@@Base+0x6f6c>
    b120:	ldr	x8, [x26, #8]
    b124:	cmp	x8, x22
    b128:	b.eq	b154 <PyInit__elementtree@@Base+0x6e30>  // b.none
    b12c:	adrp	x9, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b130:	ldr	x9, [x9, #3912]
    b134:	cmp	x8, x9
    b138:	b.ne	b2ac <PyInit__elementtree@@Base+0x6f88>  // b.any
    b13c:	ldr	x2, [x26, #16]
    b140:	cbz	x2, b2ac <PyInit__elementtree@@Base+0x6f88>
    b144:	mov	x25, x26
    b148:	cmp	x2, x23
    b14c:	b.lt	b19c <PyInit__elementtree@@Base+0x6e78>  // b.tstop
    b150:	b	b364 <PyInit__elementtree@@Base+0x7040>
    b154:	ldr	x8, [x26, #16]
    b158:	cbz	x8, b2ac <PyInit__elementtree@@Base+0x6f88>
    b15c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    b160:	mov	x0, x26
    b164:	mov	x1, x27
    b168:	add	x2, x2, #0x4f0
    b16c:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    b170:	ldr	x8, [x26]
    b174:	mov	x25, x0
    b178:	subs	x8, x8, #0x1
    b17c:	str	x8, [x26]
    b180:	b.ne	b18c <PyInit__elementtree@@Base+0x6e68>  // b.any
    b184:	mov	x0, x26
    b188:	bl	3d70 <_Py_Dealloc@plt>
    b18c:	cbz	x25, b290 <PyInit__elementtree@@Base+0x6f6c>
    b190:	ldr	x2, [x25, #16]
    b194:	cmp	x2, x23
    b198:	b.ge	b364 <PyInit__elementtree@@Base+0x7040>  // b.tcont
    b19c:	ldr	x8, [x28, #1072]
    b1a0:	ldr	x0, [x19, #16]
    b1a4:	add	x1, x25, #0x20
    b1a8:	mov	w3, wzr
    b1ac:	ldr	x8, [x8, #56]
    b1b0:	blr	x8
    b1b4:	mov	w26, w0
    b1b8:	bl	3f80 <PyErr_Occurred@plt>
    b1bc:	cbz	x0, b1fc <PyInit__elementtree@@Base+0x6ed8>
    b1c0:	mov	x26, xzr
    b1c4:	ldr	x8, [x25]
    b1c8:	subs	x8, x8, #0x1
    b1cc:	str	x8, [x25]
    b1d0:	b.ne	b1dc <PyInit__elementtree@@Base+0x6eb8>  // b.any
    b1d4:	mov	x0, x25
    b1d8:	bl	3d70 <_Py_Dealloc@plt>
    b1dc:	cbz	x26, b290 <PyInit__elementtree@@Base+0x6f6c>
    b1e0:	ldr	x8, [x26]
    b1e4:	subs	x8, x8, #0x1
    b1e8:	str	x8, [x26]
    b1ec:	b.ne	b108 <PyInit__elementtree@@Base+0x6de4>  // b.any
    b1f0:	mov	x0, x26
    b1f4:	bl	3d70 <_Py_Dealloc@plt>
    b1f8:	b	b108 <PyInit__elementtree@@Base+0x6de4>
    b1fc:	cbz	w26, b224 <PyInit__elementtree@@Base+0x6f00>
    b200:	ldr	x8, [x20]
    b204:	mov	x26, x20
    b208:	add	x8, x8, #0x1
    b20c:	str	x8, [x20]
    b210:	ldr	x8, [x25]
    b214:	subs	x8, x8, #0x1
    b218:	str	x8, [x25]
    b21c:	b.ne	b1dc <PyInit__elementtree@@Base+0x6eb8>  // b.any
    b220:	b	b1d4 <PyInit__elementtree@@Base+0x6eb0>
    b224:	ldr	x8, [x28, #1072]
    b228:	ldr	x0, [x19, #16]
    b22c:	ldr	x8, [x8, #32]
    b230:	blr	x8
    b234:	ldr	x8, [x28, #1072]
    b238:	mov	w26, w0
    b23c:	ldr	x9, [x8, #48]
    b240:	ldr	x8, [x19, #16]
    b244:	mov	x0, x8
    b248:	blr	x9
    b24c:	ldr	x8, [x28, #1072]
    b250:	mov	x23, x24
    b254:	mov	x24, x27
    b258:	mov	x27, x0
    b25c:	ldr	x9, [x8, #40]
    b260:	ldr	x8, [x19, #16]
    b264:	mov	x0, x8
    b268:	blr	x9
    b26c:	mov	x2, x0
    b270:	mov	w0, w26
    b274:	mov	x1, x27
    b278:	mov	x3, xzr
    b27c:	mov	x27, x24
    b280:	mov	x24, x23
    b284:	mov	w23, #0x80000000            	// #-2147483648
    b288:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    b28c:	b	b1c0 <PyInit__elementtree@@Base+0x6e9c>
    b290:	ldr	x8, [x21]
    b294:	subs	x8, x8, #0x1
    b298:	str	x8, [x21]
    b29c:	b.ne	b3ac <PyInit__elementtree@@Base+0x7088>  // b.any
    b2a0:	mov	x0, x21
    b2a4:	bl	3d70 <_Py_Dealloc@plt>
    b2a8:	b	b3ac <PyInit__elementtree@@Base+0x7088>
    b2ac:	ldr	x8, [x26]
    b2b0:	subs	x8, x8, #0x1
    b2b4:	str	x8, [x26]
    b2b8:	b.ne	b2c4 <PyInit__elementtree@@Base+0x6fa0>  // b.any
    b2bc:	mov	x0, x26
    b2c0:	bl	3d70 <_Py_Dealloc@plt>
    b2c4:	ldr	x8, [x21]
    b2c8:	subs	x8, x8, #0x1
    b2cc:	str	x8, [x21]
    b2d0:	b.ne	b2dc <PyInit__elementtree@@Base+0x6fb8>  // b.any
    b2d4:	mov	x0, x21
    b2d8:	bl	3d70 <_Py_Dealloc@plt>
    b2dc:	ldr	x8, [x28, #1072]
    b2e0:	ldr	x0, [x19, #16]
    b2e4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b2e8:	add	x1, x1, #0x79
    b2ec:	ldr	x8, [x8, #56]
    b2f0:	mov	w3, #0x1                   	// #1
    b2f4:	mov	w2, wzr
    b2f8:	blr	x8
    b2fc:	mov	w21, w0
    b300:	bl	3f80 <PyErr_Occurred@plt>
    b304:	cbnz	x0, b3ac <PyInit__elementtree@@Base+0x7088>
    b308:	cbz	w21, b3d0 <PyInit__elementtree@@Base+0x70ac>
    b30c:	ldr	x9, [x20]
    b310:	adrp	x11, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    b314:	add	x11, x11, #0xf48
    b318:	add	x8, x9, #0x1
    b31c:	str	x8, [x20]
    b320:	ldr	x8, [x19, #24]
    b324:	ldr	x10, [x8, #8]
    b328:	cmp	x10, x11
    b32c:	b.ne	b3b0 <PyInit__elementtree@@Base+0x708c>  // b.any
    b330:	str	x9, [x20]
    b334:	cbnz	x9, b348 <PyInit__elementtree@@Base+0x7024>
    b338:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b33c:	ldr	x0, [x0, #3976]
    b340:	bl	3d70 <_Py_Dealloc@plt>
    b344:	ldr	x8, [x19, #24]
    b348:	ldr	x8, [x8, #16]
    b34c:	cmp	x8, #0x0
    b350:	csel	x20, x20, x8, eq  // eq = none
    b354:	ldr	x8, [x20]
    b358:	add	x8, x8, #0x1
    b35c:	str	x8, [x20]
    b360:	b	b3b0 <PyInit__elementtree@@Base+0x708c>
    b364:	ldr	x8, [x25]
    b368:	subs	x8, x8, #0x1
    b36c:	str	x8, [x25]
    b370:	b.ne	b37c <PyInit__elementtree@@Base+0x7058>  // b.any
    b374:	mov	x0, x25
    b378:	bl	3d70 <_Py_Dealloc@plt>
    b37c:	ldr	x8, [x21]
    b380:	subs	x8, x8, #0x1
    b384:	str	x8, [x21]
    b388:	b.ne	b394 <PyInit__elementtree@@Base+0x7070>  // b.any
    b38c:	mov	x0, x21
    b390:	bl	3d70 <_Py_Dealloc@plt>
    b394:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b398:	ldr	x8, [x8, #3968]
    b39c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b3a0:	add	x1, x1, #0x49d
    b3a4:	ldr	x0, [x8]
    b3a8:	bl	3de0 <PyErr_SetString@plt>
    b3ac:	mov	x20, xzr
    b3b0:	mov	x0, x20
    b3b4:	ldp	x20, x19, [sp, #80]
    b3b8:	ldp	x22, x21, [sp, #64]
    b3bc:	ldp	x24, x23, [sp, #48]
    b3c0:	ldp	x26, x25, [sp, #32]
    b3c4:	ldp	x28, x27, [sp, #16]
    b3c8:	ldp	x29, x30, [sp], #96
    b3cc:	ret
    b3d0:	ldr	x8, [x28, #1072]
    b3d4:	ldr	x0, [x19, #16]
    b3d8:	ldr	x8, [x8, #32]
    b3dc:	blr	x8
    b3e0:	ldr	x8, [x28, #1072]
    b3e4:	mov	w20, w0
    b3e8:	ldr	x9, [x8, #48]
    b3ec:	ldr	x8, [x19, #16]
    b3f0:	mov	x0, x8
    b3f4:	blr	x9
    b3f8:	ldr	x8, [x28, #1072]
    b3fc:	ldr	x9, [x8, #40]
    b400:	ldr	x8, [x19, #16]
    b404:	mov	x19, x0
    b408:	mov	x0, x8
    b40c:	blr	x9
    b410:	mov	x2, x0
    b414:	mov	w0, w20
    b418:	mov	x1, x19
    b41c:	mov	x3, xzr
    b420:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    b424:	b	b3ac <PyInit__elementtree@@Base+0x7088>
    b428:	stp	x29, x30, [sp, #-96]!
    b42c:	stp	x28, x27, [sp, #16]
    b430:	stp	x26, x25, [sp, #32]
    b434:	stp	x24, x23, [sp, #48]
    b438:	stp	x22, x21, [sp, #64]
    b43c:	stp	x20, x19, [sp, #80]
    b440:	mov	x29, sp
    b444:	sub	x8, x2, #0x1
    b448:	mov	x21, x2
    b44c:	mov	x22, x1
    b450:	cmp	x8, #0x2
    b454:	mov	x20, x0
    b458:	b.cc	b478 <PyInit__elementtree@@Base+0x7154>  // b.lo, b.ul, b.last
    b45c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    b460:	add	x0, x0, #0x492
    b464:	mov	w2, #0x1                   	// #1
    b468:	mov	w3, #0x2                   	// #2
    b46c:	mov	x1, x21
    b470:	bl	3f60 <_PyArg_CheckPositional@plt>
    b474:	cbz	w0, b4c4 <PyInit__elementtree@@Base+0x71a0>
    b478:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b47c:	ldr	x0, [x22]
    b480:	ldr	x19, [x19, #3976]
    b484:	cmp	x21, #0x2
    b488:	mov	x21, x19
    b48c:	b.lt	b494 <PyInit__elementtree@@Base+0x7170>  // b.tstop
    b490:	ldr	x21, [x22, #8]
    b494:	ldr	x26, [x20, #24]
    b498:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    b49c:	add	x9, x9, #0xf48
    b4a0:	ldr	x8, [x26, #8]
    b4a4:	cmp	x8, x9
    b4a8:	b.eq	b4e8 <PyInit__elementtree@@Base+0x71c4>  // b.none
    b4ac:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b4b0:	ldr	x8, [x8, #3944]
    b4b4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b4b8:	add	x1, x1, #0x4fe
    b4bc:	ldr	x0, [x8]
    b4c0:	bl	3de0 <PyErr_SetString@plt>
    b4c4:	mov	x19, xzr
    b4c8:	mov	x0, x19
    b4cc:	ldp	x20, x19, [sp, #80]
    b4d0:	ldp	x22, x21, [sp, #64]
    b4d4:	ldp	x24, x23, [sp, #48]
    b4d8:	ldp	x26, x25, [sp, #32]
    b4dc:	ldp	x28, x27, [sp, #16]
    b4e0:	ldp	x29, x30, [sp], #96
    b4e4:	ret
    b4e8:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b4ec:	add	x1, x1, #0xf37
    b4f0:	bl	3d00 <PyObject_GetAttrString@plt>
    b4f4:	cbz	x0, b4c4 <PyInit__elementtree@@Base+0x71a0>
    b4f8:	mov	x8, x0
    b4fc:	ldr	x0, [x26, #96]
    b500:	str	x8, [x26, #96]
    b504:	cbz	x0, b51c <PyInit__elementtree@@Base+0x71f8>
    b508:	ldr	x8, [x0]
    b50c:	subs	x8, x8, #0x1
    b510:	str	x8, [x0]
    b514:	b.ne	b51c <PyInit__elementtree@@Base+0x71f8>  // b.any
    b518:	bl	3d70 <_Py_Dealloc@plt>
    b51c:	ldr	x0, [x26, #104]
    b520:	cbz	x0, b53c <PyInit__elementtree@@Base+0x7218>
    b524:	str	xzr, [x26, #104]
    b528:	ldr	x8, [x0]
    b52c:	subs	x8, x8, #0x1
    b530:	str	x8, [x0]
    b534:	b.ne	b53c <PyInit__elementtree@@Base+0x7218>  // b.any
    b538:	bl	3d70 <_Py_Dealloc@plt>
    b53c:	ldr	x0, [x26, #112]
    b540:	cbz	x0, b55c <PyInit__elementtree@@Base+0x7238>
    b544:	str	xzr, [x26, #112]
    b548:	ldr	x8, [x0]
    b54c:	subs	x8, x8, #0x1
    b550:	str	x8, [x0]
    b554:	b.ne	b55c <PyInit__elementtree@@Base+0x7238>  // b.any
    b558:	bl	3d70 <_Py_Dealloc@plt>
    b55c:	ldr	x0, [x26, #120]
    b560:	cbz	x0, b57c <PyInit__elementtree@@Base+0x7258>
    b564:	str	xzr, [x26, #120]
    b568:	ldr	x8, [x0]
    b56c:	subs	x8, x8, #0x1
    b570:	str	x8, [x0]
    b574:	b.ne	b57c <PyInit__elementtree@@Base+0x7258>  // b.any
    b578:	bl	3d70 <_Py_Dealloc@plt>
    b57c:	ldr	x0, [x26, #128]
    b580:	cbz	x0, b59c <PyInit__elementtree@@Base+0x7278>
    b584:	str	xzr, [x26, #128]
    b588:	ldr	x8, [x0]
    b58c:	subs	x8, x8, #0x1
    b590:	str	x8, [x0]
    b594:	b.ne	b59c <PyInit__elementtree@@Base+0x7278>  // b.any
    b598:	bl	3d70 <_Py_Dealloc@plt>
    b59c:	ldr	x0, [x26, #136]
    b5a0:	cbz	x0, b5bc <PyInit__elementtree@@Base+0x7298>
    b5a4:	str	xzr, [x26, #136]
    b5a8:	ldr	x8, [x0]
    b5ac:	subs	x8, x8, #0x1
    b5b0:	str	x8, [x0]
    b5b4:	b.ne	b5bc <PyInit__elementtree@@Base+0x7298>  // b.any
    b5b8:	bl	3d70 <_Py_Dealloc@plt>
    b5bc:	ldr	x0, [x26, #144]
    b5c0:	cbz	x0, b5dc <PyInit__elementtree@@Base+0x72b8>
    b5c4:	str	xzr, [x26, #144]
    b5c8:	ldr	x8, [x0]
    b5cc:	subs	x8, x8, #0x1
    b5d0:	str	x8, [x0]
    b5d4:	b.ne	b5dc <PyInit__elementtree@@Base+0x72b8>  // b.any
    b5d8:	bl	3d70 <_Py_Dealloc@plt>
    b5dc:	cmp	x21, x19
    b5e0:	b.eq	b7fc <PyInit__elementtree@@Base+0x74d8>  // b.none
    b5e4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b5e8:	add	x1, x1, #0x540
    b5ec:	mov	x0, x21
    b5f0:	bl	4240 <PySequence_Fast@plt>
    b5f4:	cbz	x0, b4c4 <PyInit__elementtree@@Base+0x71a0>
    b5f8:	ldr	x8, [x0, #16]
    b5fc:	mov	x21, x0
    b600:	cmp	x8, #0x1
    b604:	b.lt	b810 <PyInit__elementtree@@Base+0x74ec>  // b.tstop
    b608:	adrp	x22, c000 <PyInit__elementtree@@Base+0x7cdc>
    b60c:	mov	x27, xzr
    b610:	add	x24, x21, #0x18
    b614:	add	x22, x22, #0xefc
    b618:	b	b654 <PyInit__elementtree@@Base+0x7330>
    b61c:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    b620:	ldr	x8, [x8, #1072]
    b624:	ldr	x0, [x20, #16]
    b628:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    b62c:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    b630:	ldr	x8, [x8, #112]
    b634:	add	x1, x1, #0xacc
    b638:	add	x2, x2, #0xddc
    b63c:	blr	x8
    b640:	ldr	x8, [x21, #16]
    b644:	add	x27, x27, #0x1
    b648:	add	x24, x24, #0x8
    b64c:	cmp	x27, x8
    b650:	b.ge	b810 <PyInit__elementtree@@Base+0x74ec>  // b.tcont
    b654:	ldr	x8, [x21, #8]
    b658:	ldrb	w9, [x8, #171]
    b65c:	mov	x8, x24
    b660:	tbz	w9, #1, b66c <PyInit__elementtree@@Base+0x7348>
    b664:	ldr	x8, [x21, #24]
    b668:	add	x8, x8, x27, lsl #3
    b66c:	ldr	x28, [x8]
    b670:	ldr	x8, [x28, #8]
    b674:	ldr	x8, [x8, #168]
    b678:	tbnz	w8, #28, b688 <PyInit__elementtree@@Base+0x7364>
    b67c:	tbz	w8, #27, b838 <PyInit__elementtree@@Base+0x7514>
    b680:	add	x25, x28, #0x20
    b684:	b	b698 <PyInit__elementtree@@Base+0x7374>
    b688:	mov	x0, x28
    b68c:	bl	40c0 <PyUnicode_AsUTF8@plt>
    b690:	mov	x25, x0
    b694:	cbz	x0, b838 <PyInit__elementtree@@Base+0x7514>
    b698:	ldr	x23, [x28]
    b69c:	mov	x0, x25
    b6a0:	mov	x1, x22
    b6a4:	add	x8, x23, #0x1
    b6a8:	str	x8, [x28]
    b6ac:	bl	3ff0 <strcmp@plt>
    b6b0:	cbz	w0, b754 <PyInit__elementtree@@Base+0x7430>
    b6b4:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b6b8:	mov	x0, x25
    b6bc:	add	x1, x1, #0xf3a
    b6c0:	bl	3ff0 <strcmp@plt>
    b6c4:	cbz	w0, b764 <PyInit__elementtree@@Base+0x7440>
    b6c8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b6cc:	mov	x0, x25
    b6d0:	add	x1, x1, #0x572
    b6d4:	bl	3ff0 <strcmp@plt>
    b6d8:	cbz	w0, b788 <PyInit__elementtree@@Base+0x7464>
    b6dc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b6e0:	mov	x0, x25
    b6e4:	add	x1, x1, #0x57b
    b6e8:	bl	3ff0 <strcmp@plt>
    b6ec:	cbz	w0, b798 <PyInit__elementtree@@Base+0x7474>
    b6f0:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b6f4:	mov	x0, x25
    b6f8:	add	x1, x1, #0xf02
    b6fc:	bl	3ff0 <strcmp@plt>
    b700:	cbz	w0, b7bc <PyInit__elementtree@@Base+0x7498>
    b704:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b708:	mov	x0, x25
    b70c:	add	x1, x1, #0xf0a
    b710:	bl	3ff0 <strcmp@plt>
    b714:	cbnz	w0, b86c <PyInit__elementtree@@Base+0x7548>
    b718:	ldr	x0, [x26, #144]
    b71c:	str	x28, [x26, #144]
    b720:	cbz	x0, b738 <PyInit__elementtree@@Base+0x7414>
    b724:	ldr	x8, [x0]
    b728:	subs	x8, x8, #0x1
    b72c:	str	x8, [x0]
    b730:	b.ne	b738 <PyInit__elementtree@@Base+0x7414>  // b.any
    b734:	bl	3d70 <_Py_Dealloc@plt>
    b738:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    b73c:	ldr	x8, [x8, #1072]
    b740:	ldr	x0, [x20, #16]
    b744:	adrp	x1, c000 <PyInit__elementtree@@Base+0x7cdc>
    b748:	add	x1, x1, #0x148
    b74c:	ldr	x8, [x8, #120]
    b750:	b	b7f4 <PyInit__elementtree@@Base+0x74d0>
    b754:	ldr	x0, [x26, #104]
    b758:	str	x28, [x26, #104]
    b75c:	cbnz	x0, b770 <PyInit__elementtree@@Base+0x744c>
    b760:	b	b640 <PyInit__elementtree@@Base+0x731c>
    b764:	ldr	x0, [x26, #112]
    b768:	str	x28, [x26, #112]
    b76c:	cbz	x0, b640 <PyInit__elementtree@@Base+0x731c>
    b770:	ldr	x8, [x0]
    b774:	subs	x8, x8, #0x1
    b778:	str	x8, [x0]
    b77c:	b.ne	b640 <PyInit__elementtree@@Base+0x731c>  // b.any
    b780:	bl	3d70 <_Py_Dealloc@plt>
    b784:	b	b640 <PyInit__elementtree@@Base+0x731c>
    b788:	ldr	x0, [x26, #120]
    b78c:	str	x28, [x26, #120]
    b790:	cbnz	x0, b7a4 <PyInit__elementtree@@Base+0x7480>
    b794:	b	b61c <PyInit__elementtree@@Base+0x72f8>
    b798:	ldr	x0, [x26, #128]
    b79c:	str	x28, [x26, #128]
    b7a0:	cbz	x0, b61c <PyInit__elementtree@@Base+0x72f8>
    b7a4:	ldr	x8, [x0]
    b7a8:	subs	x8, x8, #0x1
    b7ac:	str	x8, [x0]
    b7b0:	b.ne	b61c <PyInit__elementtree@@Base+0x72f8>  // b.any
    b7b4:	bl	3d70 <_Py_Dealloc@plt>
    b7b8:	b	b61c <PyInit__elementtree@@Base+0x72f8>
    b7bc:	ldr	x0, [x26, #136]
    b7c0:	str	x28, [x26, #136]
    b7c4:	cbz	x0, b7dc <PyInit__elementtree@@Base+0x74b8>
    b7c8:	ldr	x8, [x0]
    b7cc:	subs	x8, x8, #0x1
    b7d0:	str	x8, [x0]
    b7d4:	b.ne	b7dc <PyInit__elementtree@@Base+0x74b8>  // b.any
    b7d8:	bl	3d70 <_Py_Dealloc@plt>
    b7dc:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    b7e0:	ldr	x8, [x8, #1072]
    b7e4:	ldr	x0, [x20, #16]
    b7e8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    b7ec:	add	x1, x1, #0xfd8
    b7f0:	ldr	x8, [x8, #88]
    b7f4:	blr	x8
    b7f8:	b	b640 <PyInit__elementtree@@Base+0x731c>
    b7fc:	adrp	x0, c000 <PyInit__elementtree@@Base+0x7cdc>
    b800:	add	x0, x0, #0xf3a
    b804:	bl	4100 <PyUnicode_FromString@plt>
    b808:	str	x0, [x26, #112]
    b80c:	b	b828 <PyInit__elementtree@@Base+0x7504>
    b810:	ldr	x8, [x21]
    b814:	subs	x8, x8, #0x1
    b818:	str	x8, [x21]
    b81c:	b.ne	b828 <PyInit__elementtree@@Base+0x7504>  // b.any
    b820:	mov	x0, x21
    b824:	bl	3d70 <_Py_Dealloc@plt>
    b828:	ldr	x8, [x19]
    b82c:	add	x8, x8, #0x1
    b830:	str	x8, [x19]
    b834:	b	b4c8 <PyInit__elementtree@@Base+0x71a4>
    b838:	ldr	x8, [x21]
    b83c:	subs	x8, x8, #0x1
    b840:	str	x8, [x21]
    b844:	b.ne	b850 <PyInit__elementtree@@Base+0x752c>  // b.any
    b848:	mov	x0, x21
    b84c:	bl	3d70 <_Py_Dealloc@plt>
    b850:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b854:	ldr	x8, [x8, #3928]
    b858:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b85c:	add	x1, x1, #0x55a
    b860:	ldr	x0, [x8]
    b864:	bl	4180 <PyErr_Format@plt>
    b868:	b	b4c4 <PyInit__elementtree@@Base+0x71a0>
    b86c:	str	x23, [x28]
    b870:	cbnz	x23, b87c <PyInit__elementtree@@Base+0x7558>
    b874:	mov	x0, x28
    b878:	bl	3d70 <_Py_Dealloc@plt>
    b87c:	ldr	x8, [x21]
    b880:	subs	x8, x8, #0x1
    b884:	str	x8, [x21]
    b888:	b.ne	b894 <PyInit__elementtree@@Base+0x7570>  // b.any
    b88c:	mov	x0, x21
    b890:	bl	3d70 <_Py_Dealloc@plt>
    b894:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b898:	ldr	x8, [x8, #3928]
    b89c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b8a0:	add	x1, x1, #0x582
    b8a4:	mov	x2, x25
    b8a8:	ldr	x0, [x8]
    b8ac:	bl	4180 <PyErr_Format@plt>
    b8b0:	b	b4c4 <PyInit__elementtree@@Base+0x71a0>
    b8b4:	stp	x29, x30, [sp, #-64]!
    b8b8:	str	x23, [sp, #16]
    b8bc:	stp	x22, x21, [sp, #32]
    b8c0:	stp	x20, x19, [sp, #48]
    b8c4:	mov	x29, sp
    b8c8:	mov	w23, w0
    b8cc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    b8d0:	add	x0, x0, #0xd40
    b8d4:	mov	x22, x3
    b8d8:	mov	x20, x2
    b8dc:	mov	x21, x1
    b8e0:	bl	3fc0 <PyState_FindModule@plt>
    b8e4:	bl	3e10 <PyModule_GetState@plt>
    b8e8:	mov	x19, x0
    b8ec:	cbnz	x22, b908 <PyInit__elementtree@@Base+0x75e4>
    b8f0:	adrp	x8, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    b8f4:	ldr	x8, [x8, #1072]
    b8f8:	mov	w0, w23
    b8fc:	ldr	x8, [x8, #24]
    b900:	blr	x8
    b904:	mov	x22, x0
    b908:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    b90c:	add	x0, x0, #0x4bf
    b910:	mov	x1, x22
    b914:	mov	x2, x21
    b918:	mov	x3, x20
    b91c:	bl	3c30 <PyUnicode_FromFormat@plt>
    b920:	str	x0, [x29, #24]
    b924:	cbz	x0, bab8 <PyInit__elementtree@@Base+0x7794>
    b928:	ldr	x22, [x19]
    b92c:	ldr	x8, [x22, #8]
    b930:	ldrb	w9, [x8, #169]
    b934:	tbz	w9, #3, b96c <PyInit__elementtree@@Base+0x7648>
    b938:	ldr	x8, [x8, #56]
    b93c:	ldr	x8, [x22, x8]
    b940:	cbz	x8, b96c <PyInit__elementtree@@Base+0x7648>
    b944:	add	x1, x29, #0x18
    b948:	mov	w2, #0x1                   	// #1
    b94c:	mov	x0, x22
    b950:	mov	x3, xzr
    b954:	blr	x8
    b958:	mov	x1, x0
    b95c:	mov	x0, x22
    b960:	mov	x2, xzr
    b964:	bl	4020 <_Py_CheckFunctionResult@plt>
    b968:	b	b980 <PyInit__elementtree@@Base+0x765c>
    b96c:	add	x1, x29, #0x18
    b970:	mov	w2, #0x1                   	// #1
    b974:	mov	x0, x22
    b978:	mov	x3, xzr
    b97c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b980:	mov	x22, x0
    b984:	ldr	x0, [x29, #24]
    b988:	ldr	x8, [x0]
    b98c:	subs	x8, x8, #0x1
    b990:	str	x8, [x0]
    b994:	b.ne	b99c <PyInit__elementtree@@Base+0x7678>  // b.any
    b998:	bl	3d70 <_Py_Dealloc@plt>
    b99c:	cbz	x22, bab8 <PyInit__elementtree@@Base+0x7794>
    b9a0:	mov	w0, w23
    b9a4:	bl	3ea0 <PyLong_FromLong@plt>
    b9a8:	cbz	x0, ba40 <PyInit__elementtree@@Base+0x771c>
    b9ac:	mov	x23, x0
    b9b0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    b9b4:	add	x1, x1, #0x4d8
    b9b8:	mov	x0, x22
    b9bc:	mov	x2, x23
    b9c0:	bl	3d50 <PyObject_SetAttrString@plt>
    b9c4:	cmn	w0, #0x1
    b9c8:	b.eq	ba58 <PyInit__elementtree@@Base+0x7734>  // b.none
    b9cc:	ldr	x8, [x23]
    b9d0:	subs	x8, x8, #0x1
    b9d4:	str	x8, [x23]
    b9d8:	b.ne	b9e4 <PyInit__elementtree@@Base+0x76c0>  // b.any
    b9dc:	mov	x0, x23
    b9e0:	bl	3d70 <_Py_Dealloc@plt>
    b9e4:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    b9e8:	add	x0, x0, #0x4dd
    b9ec:	mov	x1, x21
    b9f0:	mov	x2, x20
    b9f4:	bl	4190 <_Py_BuildValue_SizeT@plt>
    b9f8:	cbz	x0, ba40 <PyInit__elementtree@@Base+0x771c>
    b9fc:	mov	x20, x0
    ba00:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    ba04:	add	x1, x1, #0x4e2
    ba08:	mov	x0, x22
    ba0c:	mov	x2, x20
    ba10:	bl	3d50 <PyObject_SetAttrString@plt>
    ba14:	cmn	w0, #0x1
    ba18:	b.eq	ba88 <PyInit__elementtree@@Base+0x7764>  // b.none
    ba1c:	ldr	x8, [x20]
    ba20:	subs	x8, x8, #0x1
    ba24:	str	x8, [x20]
    ba28:	b.ne	ba34 <PyInit__elementtree@@Base+0x7710>  // b.any
    ba2c:	mov	x0, x20
    ba30:	bl	3d70 <_Py_Dealloc@plt>
    ba34:	ldr	x0, [x19]
    ba38:	mov	x1, x22
    ba3c:	bl	3d90 <PyErr_SetObject@plt>
    ba40:	ldr	x8, [x22]
    ba44:	subs	x8, x8, #0x1
    ba48:	str	x8, [x22]
    ba4c:	b.ne	bab8 <PyInit__elementtree@@Base+0x7794>  // b.any
    ba50:	mov	x0, x22
    ba54:	b	bab4 <PyInit__elementtree@@Base+0x7790>
    ba58:	ldr	x8, [x22]
    ba5c:	subs	x8, x8, #0x1
    ba60:	str	x8, [x22]
    ba64:	b.ne	ba70 <PyInit__elementtree@@Base+0x774c>  // b.any
    ba68:	mov	x0, x22
    ba6c:	bl	3d70 <_Py_Dealloc@plt>
    ba70:	ldr	x8, [x23]
    ba74:	subs	x8, x8, #0x1
    ba78:	str	x8, [x23]
    ba7c:	b.ne	bab8 <PyInit__elementtree@@Base+0x7794>  // b.any
    ba80:	mov	x0, x23
    ba84:	b	bab4 <PyInit__elementtree@@Base+0x7790>
    ba88:	ldr	x8, [x22]
    ba8c:	subs	x8, x8, #0x1
    ba90:	str	x8, [x22]
    ba94:	b.ne	baa0 <PyInit__elementtree@@Base+0x777c>  // b.any
    ba98:	mov	x0, x22
    ba9c:	bl	3d70 <_Py_Dealloc@plt>
    baa0:	ldr	x8, [x20]
    baa4:	subs	x8, x8, #0x1
    baa8:	str	x8, [x20]
    baac:	b.ne	bab8 <PyInit__elementtree@@Base+0x7794>  // b.any
    bab0:	mov	x0, x20
    bab4:	bl	3d70 <_Py_Dealloc@plt>
    bab8:	ldp	x20, x19, [sp, #48]
    babc:	ldp	x22, x21, [sp, #32]
    bac0:	ldr	x23, [sp, #16]
    bac4:	ldp	x29, x30, [sp], #64
    bac8:	ret
    bacc:	sub	sp, sp, #0x40
    bad0:	stp	x29, x30, [sp, #16]
    bad4:	stp	x22, x21, [sp, #32]
    bad8:	stp	x20, x19, [sp, #48]
    badc:	add	x29, sp, #0x10
    bae0:	mov	x20, x2
    bae4:	mov	x19, x1
    bae8:	mov	x21, x0
    baec:	bl	3f80 <PyErr_Occurred@plt>
    baf0:	cbz	x0, bb08 <PyInit__elementtree@@Base+0x77e4>
    baf4:	ldp	x20, x19, [sp, #48]
    baf8:	ldp	x22, x21, [sp, #32]
    bafc:	ldp	x29, x30, [sp, #16]
    bb00:	add	sp, sp, #0x40
    bb04:	ret
    bb08:	ldr	x22, [x21, #24]
    bb0c:	adrp	x8, d000 <PyInit__elementtree@@Base+0x8cdc>
    bb10:	add	x8, x8, #0x79
    bb14:	cmp	x20, #0x0
    bb18:	ldr	x9, [x22, #8]
    bb1c:	csel	x20, x8, x20, eq  // eq = none
    bb20:	cmp	x19, #0x0
    bb24:	csel	x19, x8, x19, eq  // eq = none
    bb28:	adrp	x8, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    bb2c:	add	x8, x8, #0xf48
    bb30:	cmp	x9, x8
    bb34:	b.eq	bbd0 <PyInit__elementtree@@Base+0x78ac>  // b.none
    bb38:	ldr	x8, [x21, #48]
    bb3c:	cbz	x8, baf4 <PyInit__elementtree@@Base+0x77d0>
    bb40:	mov	x0, x19
    bb44:	bl	3c70 <strlen@plt>
    bb48:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    bb4c:	mov	x1, x0
    bb50:	add	x2, x2, #0x595
    bb54:	mov	x0, x19
    bb58:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bb5c:	cbz	x0, baf4 <PyInit__elementtree@@Base+0x77d0>
    bb60:	mov	x19, x0
    bb64:	mov	x0, x20
    bb68:	bl	3c70 <strlen@plt>
    bb6c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    bb70:	mov	x1, x0
    bb74:	add	x2, x2, #0x595
    bb78:	mov	x0, x20
    bb7c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bb80:	cbz	x0, bcb0 <PyInit__elementtree@@Base+0x798c>
    bb84:	stp	x19, x0, [sp]
    bb88:	ldr	x21, [x21, #48]
    bb8c:	mov	x20, x0
    bb90:	ldr	x8, [x21, #8]
    bb94:	ldrb	w9, [x8, #169]
    bb98:	tbz	w9, #3, bcc8 <PyInit__elementtree@@Base+0x79a4>
    bb9c:	ldr	x8, [x8, #56]
    bba0:	ldr	x8, [x21, x8]
    bba4:	cbz	x8, bcc8 <PyInit__elementtree@@Base+0x79a4>
    bba8:	mov	x1, sp
    bbac:	mov	w2, #0x2                   	// #2
    bbb0:	mov	x0, x21
    bbb4:	mov	x3, xzr
    bbb8:	blr	x8
    bbbc:	mov	x1, x0
    bbc0:	mov	x0, x21
    bbc4:	mov	x2, xzr
    bbc8:	bl	4020 <_Py_CheckFunctionResult@plt>
    bbcc:	b	bcdc <PyInit__elementtree@@Base+0x79b8>
    bbd0:	ldr	x8, [x22, #96]
    bbd4:	cbz	x8, baf4 <PyInit__elementtree@@Base+0x77d0>
    bbd8:	ldr	x8, [x22, #120]
    bbdc:	cbz	x8, baf4 <PyInit__elementtree@@Base+0x77d0>
    bbe0:	mov	x0, x19
    bbe4:	bl	3c70 <strlen@plt>
    bbe8:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    bbec:	mov	x1, x0
    bbf0:	add	x2, x2, #0x595
    bbf4:	mov	x0, x19
    bbf8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bbfc:	cbz	x0, baf4 <PyInit__elementtree@@Base+0x77d0>
    bc00:	mov	x19, x0
    bc04:	mov	x0, x20
    bc08:	bl	3c70 <strlen@plt>
    bc0c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    bc10:	mov	x1, x0
    bc14:	add	x2, x2, #0x595
    bc18:	mov	x0, x20
    bc1c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bc20:	cbz	x0, bcb0 <PyInit__elementtree@@Base+0x798c>
    bc24:	ldr	x8, [x22, #96]
    bc28:	mov	x20, x0
    bc2c:	cbz	x8, bd60 <PyInit__elementtree@@Base+0x7a3c>
    bc30:	ldr	x8, [x22, #120]
    bc34:	cbz	x8, bd60 <PyInit__elementtree@@Base+0x7a3c>
    bc38:	mov	w0, #0x2                   	// #2
    bc3c:	mov	x1, x19
    bc40:	mov	x2, x20
    bc44:	bl	4210 <PyTuple_Pack@plt>
    bc48:	mov	x21, x0
    bc4c:	cbz	x0, bd74 <PyInit__elementtree@@Base+0x7a50>
    bc50:	ldr	x1, [x22, #120]
    bc54:	cbz	x1, bd30 <PyInit__elementtree@@Base+0x7a0c>
    bc58:	mov	w0, #0x2                   	// #2
    bc5c:	mov	x2, x21
    bc60:	bl	4210 <PyTuple_Pack@plt>
    bc64:	str	x0, [sp]
    bc68:	cbz	x0, bd38 <PyInit__elementtree@@Base+0x7a14>
    bc6c:	ldr	x22, [x22, #96]
    bc70:	ldr	x8, [x22, #8]
    bc74:	ldrb	w9, [x8, #169]
    bc78:	tbz	w9, #3, bce4 <PyInit__elementtree@@Base+0x79c0>
    bc7c:	ldr	x8, [x8, #56]
    bc80:	ldr	x8, [x22, x8]
    bc84:	cbz	x8, bce4 <PyInit__elementtree@@Base+0x79c0>
    bc88:	mov	x1, sp
    bc8c:	mov	w2, #0x1                   	// #1
    bc90:	mov	x0, x22
    bc94:	mov	x3, xzr
    bc98:	blr	x8
    bc9c:	mov	x1, x0
    bca0:	mov	x0, x22
    bca4:	mov	x2, xzr
    bca8:	bl	4020 <_Py_CheckFunctionResult@plt>
    bcac:	b	bcf8 <PyInit__elementtree@@Base+0x79d4>
    bcb0:	ldr	x8, [x19]
    bcb4:	subs	x8, x8, #0x1
    bcb8:	str	x8, [x19]
    bcbc:	b.ne	baf4 <PyInit__elementtree@@Base+0x77d0>  // b.any
    bcc0:	mov	x0, x19
    bcc4:	b	bdd4 <PyInit__elementtree@@Base+0x7ab0>
    bcc8:	mov	x1, sp
    bccc:	mov	w2, #0x2                   	// #2
    bcd0:	mov	x0, x21
    bcd4:	mov	x3, xzr
    bcd8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bcdc:	mov	x21, x0
    bce0:	b	bd74 <PyInit__elementtree@@Base+0x7a50>
    bce4:	mov	x1, sp
    bce8:	mov	w2, #0x1                   	// #1
    bcec:	mov	x0, x22
    bcf0:	mov	x3, xzr
    bcf4:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bcf8:	mov	x22, x0
    bcfc:	ldr	x0, [sp]
    bd00:	ldr	x8, [x0]
    bd04:	subs	x8, x8, #0x1
    bd08:	str	x8, [x0]
    bd0c:	b.ne	bd14 <PyInit__elementtree@@Base+0x79f0>  // b.any
    bd10:	bl	3d70 <_Py_Dealloc@plt>
    bd14:	cbz	x22, bd38 <PyInit__elementtree@@Base+0x7a14>
    bd18:	ldr	x8, [x22]
    bd1c:	subs	x8, x8, #0x1
    bd20:	str	x8, [x22]
    bd24:	b.ne	bd30 <PyInit__elementtree@@Base+0x7a0c>  // b.any
    bd28:	mov	x0, x22
    bd2c:	bl	3d70 <_Py_Dealloc@plt>
    bd30:	mov	w22, wzr
    bd34:	b	bd3c <PyInit__elementtree@@Base+0x7a18>
    bd38:	mov	w22, #0x1                   	// #1
    bd3c:	ldr	x8, [x21]
    bd40:	subs	x8, x8, #0x1
    bd44:	str	x8, [x21]
    bd48:	b.ne	bd54 <PyInit__elementtree@@Base+0x7a30>  // b.any
    bd4c:	mov	x0, x21
    bd50:	bl	3d70 <_Py_Dealloc@plt>
    bd54:	tbz	w22, #0, bd60 <PyInit__elementtree@@Base+0x7a3c>
    bd58:	mov	x21, xzr
    bd5c:	b	bd74 <PyInit__elementtree@@Base+0x7a50>
    bd60:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    bd64:	ldr	x21, [x21, #3976]
    bd68:	ldr	x8, [x21]
    bd6c:	add	x8, x8, #0x1
    bd70:	str	x8, [x21]
    bd74:	ldr	x8, [x20]
    bd78:	subs	x8, x8, #0x1
    bd7c:	str	x8, [x20]
    bd80:	b.eq	bd9c <PyInit__elementtree@@Base+0x7a78>  // b.none
    bd84:	ldr	x8, [x19]
    bd88:	subs	x8, x8, #0x1
    bd8c:	str	x8, [x19]
    bd90:	b.eq	bdb4 <PyInit__elementtree@@Base+0x7a90>  // b.none
    bd94:	cbnz	x21, bdc0 <PyInit__elementtree@@Base+0x7a9c>
    bd98:	b	baf4 <PyInit__elementtree@@Base+0x77d0>
    bd9c:	mov	x0, x20
    bda0:	bl	3d70 <_Py_Dealloc@plt>
    bda4:	ldr	x8, [x19]
    bda8:	subs	x8, x8, #0x1
    bdac:	str	x8, [x19]
    bdb0:	b.ne	bd94 <PyInit__elementtree@@Base+0x7a70>  // b.any
    bdb4:	mov	x0, x19
    bdb8:	bl	3d70 <_Py_Dealloc@plt>
    bdbc:	cbz	x21, baf4 <PyInit__elementtree@@Base+0x77d0>
    bdc0:	ldr	x8, [x21]
    bdc4:	subs	x8, x8, #0x1
    bdc8:	str	x8, [x21]
    bdcc:	b.ne	baf4 <PyInit__elementtree@@Base+0x77d0>  // b.any
    bdd0:	mov	x0, x21
    bdd4:	bl	3d70 <_Py_Dealloc@plt>
    bdd8:	b	baf4 <PyInit__elementtree@@Base+0x77d0>
    bddc:	stp	x29, x30, [sp, #-48]!
    bde0:	str	x21, [sp, #16]
    bde4:	stp	x20, x19, [sp, #32]
    bde8:	mov	x29, sp
    bdec:	mov	x20, x1
    bdf0:	mov	x19, x0
    bdf4:	bl	3f80 <PyErr_Occurred@plt>
    bdf8:	cbz	x0, be0c <PyInit__elementtree@@Base+0x7ae8>
    bdfc:	ldp	x20, x19, [sp, #32]
    be00:	ldr	x21, [sp, #16]
    be04:	ldp	x29, x30, [sp], #48
    be08:	ret
    be0c:	ldr	x21, [x19, #24]
    be10:	adrp	x8, d000 <PyInit__elementtree@@Base+0x8cdc>
    be14:	add	x8, x8, #0x79
    be18:	cmp	x20, #0x0
    be1c:	ldr	x9, [x21, #8]
    be20:	csel	x20, x8, x20, eq  // eq = none
    be24:	adrp	x8, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    be28:	add	x8, x8, #0xf48
    be2c:	cmp	x9, x8
    be30:	b.eq	bea4 <PyInit__elementtree@@Base+0x7b80>  // b.none
    be34:	ldr	x8, [x19, #56]
    be38:	cbz	x8, bdfc <PyInit__elementtree@@Base+0x7ad8>
    be3c:	mov	x0, x20
    be40:	bl	3c70 <strlen@plt>
    be44:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    be48:	mov	x1, x0
    be4c:	add	x2, x2, #0x595
    be50:	mov	x0, x20
    be54:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    be58:	str	x0, [x29, #24]
    be5c:	cbz	x0, bdfc <PyInit__elementtree@@Base+0x7ad8>
    be60:	ldr	x19, [x19, #56]
    be64:	ldr	x8, [x19, #8]
    be68:	ldrb	w9, [x8, #169]
    be6c:	tbz	w9, #3, bf14 <PyInit__elementtree@@Base+0x7bf0>
    be70:	ldr	x8, [x8, #56]
    be74:	ldr	x8, [x19, x8]
    be78:	cbz	x8, bf14 <PyInit__elementtree@@Base+0x7bf0>
    be7c:	add	x1, x29, #0x18
    be80:	mov	w2, #0x1                   	// #1
    be84:	mov	x0, x19
    be88:	mov	x3, xzr
    be8c:	blr	x8
    be90:	mov	x1, x0
    be94:	mov	x0, x19
    be98:	mov	x2, xzr
    be9c:	bl	4020 <_Py_CheckFunctionResult@plt>
    bea0:	b	bf28 <PyInit__elementtree@@Base+0x7c04>
    bea4:	ldr	x8, [x21, #96]
    bea8:	cbz	x8, bdfc <PyInit__elementtree@@Base+0x7ad8>
    beac:	ldr	x1, [x21, #128]
    beb0:	cbz	x1, bdfc <PyInit__elementtree@@Base+0x7ad8>
    beb4:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    beb8:	ldr	x19, [x19, #3976]
    bebc:	mov	w0, #0x2                   	// #2
    bec0:	mov	x2, x19
    bec4:	bl	4210 <PyTuple_Pack@plt>
    bec8:	str	x0, [x29, #24]
    becc:	cbz	x0, bdfc <PyInit__elementtree@@Base+0x7ad8>
    bed0:	ldr	x20, [x21, #96]
    bed4:	ldr	x8, [x20, #8]
    bed8:	ldrb	w9, [x8, #169]
    bedc:	tbz	w9, #3, bf5c <PyInit__elementtree@@Base+0x7c38>
    bee0:	ldr	x8, [x8, #56]
    bee4:	ldr	x8, [x20, x8]
    bee8:	cbz	x8, bf5c <PyInit__elementtree@@Base+0x7c38>
    beec:	add	x1, x29, #0x18
    bef0:	mov	w2, #0x1                   	// #1
    bef4:	mov	x0, x20
    bef8:	mov	x3, xzr
    befc:	blr	x8
    bf00:	mov	x1, x0
    bf04:	mov	x0, x20
    bf08:	mov	x2, xzr
    bf0c:	bl	4020 <_Py_CheckFunctionResult@plt>
    bf10:	b	bf70 <PyInit__elementtree@@Base+0x7c4c>
    bf14:	add	x1, x29, #0x18
    bf18:	mov	w2, #0x1                   	// #1
    bf1c:	mov	x0, x19
    bf20:	mov	x3, xzr
    bf24:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bf28:	mov	x19, x0
    bf2c:	ldr	x0, [x29, #24]
    bf30:	ldr	x8, [x0]
    bf34:	subs	x8, x8, #0x1
    bf38:	str	x8, [x0]
    bf3c:	b.ne	bf44 <PyInit__elementtree@@Base+0x7c20>  // b.any
    bf40:	bl	3d70 <_Py_Dealloc@plt>
    bf44:	cbz	x19, bdfc <PyInit__elementtree@@Base+0x7ad8>
    bf48:	ldr	x8, [x19]
    bf4c:	subs	x8, x8, #0x1
    bf50:	str	x8, [x19]
    bf54:	b.ne	bdfc <PyInit__elementtree@@Base+0x7ad8>  // b.any
    bf58:	b	bfc0 <PyInit__elementtree@@Base+0x7c9c>
    bf5c:	add	x1, x29, #0x18
    bf60:	mov	w2, #0x1                   	// #1
    bf64:	mov	x0, x20
    bf68:	mov	x3, xzr
    bf6c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bf70:	mov	x20, x0
    bf74:	ldr	x0, [x29, #24]
    bf78:	ldr	x8, [x0]
    bf7c:	subs	x8, x8, #0x1
    bf80:	str	x8, [x0]
    bf84:	b.ne	bf8c <PyInit__elementtree@@Base+0x7c68>  // b.any
    bf88:	bl	3d70 <_Py_Dealloc@plt>
    bf8c:	cbz	x20, bdfc <PyInit__elementtree@@Base+0x7ad8>
    bf90:	ldr	x8, [x20]
    bf94:	subs	x8, x8, #0x1
    bf98:	str	x8, [x20]
    bf9c:	b.ne	bfa8 <PyInit__elementtree@@Base+0x7c84>  // b.any
    bfa0:	mov	x0, x20
    bfa4:	bl	3d70 <_Py_Dealloc@plt>
    bfa8:	ldr	x8, [x19]
    bfac:	add	x8, x8, #0x1
    bfb0:	str	x8, [x19]
    bfb4:	subs	x8, x8, #0x1
    bfb8:	str	x8, [x19]
    bfbc:	b.ne	bdfc <PyInit__elementtree@@Base+0x7ad8>  // b.any
    bfc0:	mov	x0, x19
    bfc4:	bl	3d70 <_Py_Dealloc@plt>
    bfc8:	ldp	x20, x19, [sp, #32]
    bfcc:	ldr	x21, [sp, #16]
    bfd0:	ldp	x29, x30, [sp], #48
    bfd4:	ret
    bfd8:	stp	x29, x30, [sp, #-48]!
    bfdc:	str	x21, [sp, #16]
    bfe0:	stp	x20, x19, [sp, #32]
    bfe4:	mov	x29, sp
    bfe8:	mov	x20, x1
    bfec:	mov	x19, x0
    bff0:	bl	3f80 <PyErr_Occurred@plt>
    bff4:	cbz	x0, c008 <PyInit__elementtree@@Base+0x7ce4>
    bff8:	ldp	x20, x19, [sp, #32]
    bffc:	ldr	x21, [sp, #16]
    c000:	ldp	x29, x30, [sp], #48
    c004:	ret
    c008:	ldr	x21, [x19, #24]
    c00c:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c010:	add	x9, x9, #0xf48
    c014:	ldr	x8, [x21, #8]
    c018:	cmp	x8, x9
    c01c:	b.eq	c090 <PyInit__elementtree@@Base+0x7d6c>  // b.none
    c020:	ldr	x8, [x19, #88]
    c024:	cbz	x8, bff8 <PyInit__elementtree@@Base+0x7cd4>
    c028:	mov	x0, x20
    c02c:	bl	3c70 <strlen@plt>
    c030:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c034:	mov	x1, x0
    c038:	add	x2, x2, #0x595
    c03c:	mov	x0, x20
    c040:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c044:	str	x0, [x29, #24]
    c048:	cbz	x0, bff8 <PyInit__elementtree@@Base+0x7cd4>
    c04c:	ldr	x19, [x19, #88]
    c050:	ldr	x8, [x19, #8]
    c054:	ldrb	w9, [x8, #169]
    c058:	tbz	w9, #3, c0f4 <PyInit__elementtree@@Base+0x7dd0>
    c05c:	ldr	x8, [x8, #56]
    c060:	ldr	x8, [x19, x8]
    c064:	cbz	x8, c0f4 <PyInit__elementtree@@Base+0x7dd0>
    c068:	add	x1, x29, #0x18
    c06c:	mov	w2, #0x1                   	// #1
    c070:	mov	x0, x19
    c074:	mov	x3, xzr
    c078:	blr	x8
    c07c:	mov	x1, x0
    c080:	mov	x0, x19
    c084:	mov	x2, xzr
    c088:	bl	4020 <_Py_CheckFunctionResult@plt>
    c08c:	b	c108 <PyInit__elementtree@@Base+0x7de4>
    c090:	mov	x0, x20
    c094:	bl	3c70 <strlen@plt>
    c098:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c09c:	mov	x1, x0
    c0a0:	add	x2, x2, #0x595
    c0a4:	mov	x0, x20
    c0a8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c0ac:	str	x0, [x29, #24]
    c0b0:	cbz	x0, bff8 <PyInit__elementtree@@Base+0x7cd4>
    c0b4:	mov	x19, x0
    c0b8:	mov	x0, x21
    c0bc:	mov	x1, x19
    c0c0:	bl	6494 <PyInit__elementtree@@Base+0x2170>
    c0c4:	cbz	x0, c0dc <PyInit__elementtree@@Base+0x7db8>
    c0c8:	ldr	x8, [x0]
    c0cc:	subs	x8, x8, #0x1
    c0d0:	str	x8, [x0]
    c0d4:	b.ne	c0dc <PyInit__elementtree@@Base+0x7db8>  // b.any
    c0d8:	bl	3d70 <_Py_Dealloc@plt>
    c0dc:	ldr	x8, [x19]
    c0e0:	subs	x8, x8, #0x1
    c0e4:	str	x8, [x19]
    c0e8:	b.ne	bff8 <PyInit__elementtree@@Base+0x7cd4>  // b.any
    c0ec:	mov	x0, x19
    c0f0:	b	c134 <PyInit__elementtree@@Base+0x7e10>
    c0f4:	add	x1, x29, #0x18
    c0f8:	mov	w2, #0x1                   	// #1
    c0fc:	mov	x0, x19
    c100:	mov	x3, xzr
    c104:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c108:	cbz	x0, c120 <PyInit__elementtree@@Base+0x7dfc>
    c10c:	ldr	x8, [x0]
    c110:	subs	x8, x8, #0x1
    c114:	str	x8, [x0]
    c118:	b.ne	c120 <PyInit__elementtree@@Base+0x7dfc>  // b.any
    c11c:	bl	3d70 <_Py_Dealloc@plt>
    c120:	ldr	x0, [x29, #24]
    c124:	ldr	x8, [x0]
    c128:	subs	x8, x8, #0x1
    c12c:	str	x8, [x0]
    c130:	b.ne	bff8 <PyInit__elementtree@@Base+0x7cd4>  // b.any
    c134:	bl	3d70 <_Py_Dealloc@plt>
    c138:	ldp	x20, x19, [sp, #32]
    c13c:	ldr	x21, [sp, #16]
    c140:	ldp	x29, x30, [sp], #48
    c144:	ret
    c148:	sub	sp, sp, #0x40
    c14c:	stp	x29, x30, [sp, #16]
    c150:	stp	x22, x21, [sp, #32]
    c154:	stp	x20, x19, [sp, #48]
    c158:	add	x29, sp, #0x10
    c15c:	mov	x20, x2
    c160:	mov	x19, x1
    c164:	mov	x22, x0
    c168:	bl	3f80 <PyErr_Occurred@plt>
    c16c:	cbz	x0, c184 <PyInit__elementtree@@Base+0x7e60>
    c170:	ldp	x20, x19, [sp, #48]
    c174:	ldp	x22, x21, [sp, #32]
    c178:	ldp	x29, x30, [sp, #16]
    c17c:	add	sp, sp, #0x40
    c180:	ret
    c184:	ldr	x21, [x22, #24]
    c188:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c18c:	add	x9, x9, #0xf48
    c190:	ldr	x8, [x21, #8]
    c194:	cmp	x8, x9
    c198:	b.eq	c234 <PyInit__elementtree@@Base+0x7f10>  // b.none
    c19c:	ldr	x8, [x22, #96]
    c1a0:	cbz	x8, c170 <PyInit__elementtree@@Base+0x7e4c>
    c1a4:	mov	x0, x19
    c1a8:	bl	3c70 <strlen@plt>
    c1ac:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c1b0:	mov	x1, x0
    c1b4:	add	x2, x2, #0x595
    c1b8:	mov	x0, x19
    c1bc:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c1c0:	cbz	x0, c170 <PyInit__elementtree@@Base+0x7e4c>
    c1c4:	mov	x19, x0
    c1c8:	mov	x0, x20
    c1cc:	bl	3c70 <strlen@plt>
    c1d0:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c1d4:	mov	x1, x0
    c1d8:	add	x2, x2, #0x595
    c1dc:	mov	x0, x20
    c1e0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c1e4:	cbz	x0, c2f0 <PyInit__elementtree@@Base+0x7fcc>
    c1e8:	stp	x19, x0, [sp]
    c1ec:	ldr	x21, [x22, #96]
    c1f0:	mov	x20, x0
    c1f4:	ldr	x8, [x21, #8]
    c1f8:	ldrb	w9, [x8, #169]
    c1fc:	tbz	w9, #3, c2ac <PyInit__elementtree@@Base+0x7f88>
    c200:	ldr	x8, [x8, #56]
    c204:	ldr	x8, [x21, x8]
    c208:	cbz	x8, c2ac <PyInit__elementtree@@Base+0x7f88>
    c20c:	mov	x1, sp
    c210:	mov	w2, #0x2                   	// #2
    c214:	mov	x0, x21
    c218:	mov	x3, xzr
    c21c:	blr	x8
    c220:	mov	x1, x0
    c224:	mov	x0, x21
    c228:	mov	x2, xzr
    c22c:	bl	4020 <_Py_CheckFunctionResult@plt>
    c230:	b	c2c0 <PyInit__elementtree@@Base+0x7f9c>
    c234:	ldr	x8, [x21, #96]
    c238:	cbz	x8, c244 <PyInit__elementtree@@Base+0x7f20>
    c23c:	ldr	x8, [x21, #144]
    c240:	cbnz	x8, c24c <PyInit__elementtree@@Base+0x7f28>
    c244:	ldrb	w8, [x21, #153]
    c248:	cbz	w8, c170 <PyInit__elementtree@@Base+0x7e4c>
    c24c:	mov	x0, x19
    c250:	bl	3c70 <strlen@plt>
    c254:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c258:	mov	x1, x0
    c25c:	add	x2, x2, #0x595
    c260:	mov	x0, x19
    c264:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c268:	cbz	x0, c170 <PyInit__elementtree@@Base+0x7e4c>
    c26c:	mov	x19, x0
    c270:	mov	x0, x20
    c274:	bl	3c70 <strlen@plt>
    c278:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c27c:	mov	x1, x0
    c280:	add	x2, x2, #0x595
    c284:	mov	x0, x20
    c288:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c28c:	cbz	x0, c2f0 <PyInit__elementtree@@Base+0x7fcc>
    c290:	mov	x20, x0
    c294:	mov	x0, x21
    c298:	mov	x1, x19
    c29c:	mov	x2, x20
    c2a0:	bl	6768 <PyInit__elementtree@@Base+0x2444>
    c2a4:	cbnz	x0, c2c4 <PyInit__elementtree@@Base+0x7fa0>
    c2a8:	b	c2d8 <PyInit__elementtree@@Base+0x7fb4>
    c2ac:	mov	x1, sp
    c2b0:	mov	w2, #0x2                   	// #2
    c2b4:	mov	x0, x21
    c2b8:	mov	x3, xzr
    c2bc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c2c0:	cbz	x0, c2d8 <PyInit__elementtree@@Base+0x7fb4>
    c2c4:	ldr	x8, [x0]
    c2c8:	subs	x8, x8, #0x1
    c2cc:	str	x8, [x0]
    c2d0:	b.ne	c2d8 <PyInit__elementtree@@Base+0x7fb4>  // b.any
    c2d4:	bl	3d70 <_Py_Dealloc@plt>
    c2d8:	ldr	x8, [x20]
    c2dc:	subs	x8, x8, #0x1
    c2e0:	str	x8, [x20]
    c2e4:	b.ne	c2f0 <PyInit__elementtree@@Base+0x7fcc>  // b.any
    c2e8:	mov	x0, x20
    c2ec:	bl	3d70 <_Py_Dealloc@plt>
    c2f0:	ldr	x8, [x19]
    c2f4:	subs	x8, x8, #0x1
    c2f8:	str	x8, [x19]
    c2fc:	b.ne	c170 <PyInit__elementtree@@Base+0x7e4c>  // b.any
    c300:	mov	x0, x19
    c304:	bl	3d70 <_Py_Dealloc@plt>
    c308:	b	c170 <PyInit__elementtree@@Base+0x7e4c>
    c30c:	adrp	x0, d000 <PyInit__elementtree@@Base+0x8cdc>
    c310:	add	x0, x0, #0x5b2
    c314:	mov	w1, #0x2                   	// #2
    c318:	mov	w2, #0x2                   	// #2
    c31c:	mov	w3, #0x9                   	// #9
    c320:	b	3c30 <PyUnicode_FromFormat@plt>
    c324:	stp	x29, x30, [sp, #-80]!
    c328:	stp	x26, x25, [sp, #16]
    c32c:	stp	x24, x23, [sp, #32]
    c330:	stp	x22, x21, [sp, #48]
    c334:	stp	x20, x19, [sp, #64]
    c338:	mov	x29, sp
    c33c:	mov	x22, x2
    c340:	mov	x19, x1
    c344:	mov	x21, x0
    c348:	bl	3f80 <PyErr_Occurred@plt>
    c34c:	cbz	x0, c368 <PyInit__elementtree@@Base+0x8044>
    c350:	ldp	x20, x19, [sp, #64]
    c354:	ldp	x22, x21, [sp, #48]
    c358:	ldp	x24, x23, [sp, #32]
    c35c:	ldp	x26, x25, [sp, #16]
    c360:	ldp	x29, x30, [sp], #80
    c364:	ret
    c368:	mov	x0, x21
    c36c:	mov	x1, x19
    c370:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    c374:	cbz	x0, c350 <PyInit__elementtree@@Base+0x802c>
    c378:	ldr	x8, [x22]
    c37c:	mov	x19, x0
    c380:	cbz	x8, c450 <PyInit__elementtree@@Base+0x812c>
    c384:	bl	4080 <PyDict_New@plt>
    c388:	cbz	x0, c5a0 <PyInit__elementtree@@Base+0x827c>
    c38c:	ldr	x1, [x22]
    c390:	mov	x20, x0
    c394:	cbz	x1, c464 <PyInit__elementtree@@Base+0x8140>
    c398:	add	x26, x22, #0x8
    c39c:	adrp	x22, d000 <PyInit__elementtree@@Base+0x8cdc>
    c3a0:	add	x22, x22, #0x595
    c3a4:	ldr	x8, [x26]
    c3a8:	cbz	x8, c464 <PyInit__elementtree@@Base+0x8140>
    c3ac:	mov	x0, x21
    c3b0:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    c3b4:	ldr	x24, [x26]
    c3b8:	mov	x23, x0
    c3bc:	mov	x0, x24
    c3c0:	bl	3c70 <strlen@plt>
    c3c4:	mov	x1, x0
    c3c8:	mov	x0, x24
    c3cc:	mov	x2, x22
    c3d0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c3d4:	mov	x24, x0
    c3d8:	cbz	x23, c550 <PyInit__elementtree@@Base+0x822c>
    c3dc:	cbz	x24, c550 <PyInit__elementtree@@Base+0x822c>
    c3e0:	mov	x0, x20
    c3e4:	mov	x1, x23
    c3e8:	mov	x2, x24
    c3ec:	bl	4140 <PyDict_SetItem@plt>
    c3f0:	ldr	x8, [x24]
    c3f4:	mov	w25, w0
    c3f8:	subs	x8, x8, #0x1
    c3fc:	str	x8, [x24]
    c400:	b.eq	c41c <PyInit__elementtree@@Base+0x80f8>  // b.none
    c404:	ldr	x8, [x23]
    c408:	subs	x8, x8, #0x1
    c40c:	str	x8, [x23]
    c410:	b.eq	c434 <PyInit__elementtree@@Base+0x8110>  // b.none
    c414:	tbz	w25, #31, c440 <PyInit__elementtree@@Base+0x811c>
    c418:	b	c588 <PyInit__elementtree@@Base+0x8264>
    c41c:	mov	x0, x24
    c420:	bl	3d70 <_Py_Dealloc@plt>
    c424:	ldr	x8, [x23]
    c428:	subs	x8, x8, #0x1
    c42c:	str	x8, [x23]
    c430:	b.ne	c414 <PyInit__elementtree@@Base+0x80f0>  // b.any
    c434:	mov	x0, x23
    c438:	bl	3d70 <_Py_Dealloc@plt>
    c43c:	tbnz	w25, #31, c588 <PyInit__elementtree@@Base+0x8264>
    c440:	ldr	x1, [x26, #8]
    c444:	add	x26, x26, #0x10
    c448:	cbnz	x1, c3a4 <PyInit__elementtree@@Base+0x8080>
    c44c:	b	c464 <PyInit__elementtree@@Base+0x8140>
    c450:	adrp	x20, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    c454:	ldr	x20, [x20, #3976]
    c458:	ldr	x8, [x20]
    c45c:	add	x8, x8, #0x1
    c460:	str	x8, [x20]
    c464:	ldr	x0, [x21, #24]
    c468:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c46c:	add	x9, x9, #0xf48
    c470:	ldr	x8, [x0, #8]
    c474:	cmp	x8, x9
    c478:	b.eq	c4d4 <PyInit__elementtree@@Base+0x81b0>  // b.none
    c47c:	ldr	x0, [x21, #64]
    c480:	cbz	x0, c538 <PyInit__elementtree@@Base+0x8214>
    c484:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    c488:	ldr	x8, [x8, #3976]
    c48c:	cmp	x20, x8
    c490:	b.ne	c4c0 <PyInit__elementtree@@Base+0x819c>  // b.any
    c494:	ldr	x9, [x8]
    c498:	subs	x9, x9, #0x1
    c49c:	str	x9, [x8]
    c4a0:	b.ne	c4b0 <PyInit__elementtree@@Base+0x818c>  // b.any
    c4a4:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    c4a8:	ldr	x0, [x0, #3976]
    c4ac:	bl	3d70 <_Py_Dealloc@plt>
    c4b0:	bl	4080 <PyDict_New@plt>
    c4b4:	cbz	x0, c5a0 <PyInit__elementtree@@Base+0x827c>
    c4b8:	mov	x20, x0
    c4bc:	ldr	x0, [x21, #64]
    c4c0:	mov	x1, x19
    c4c4:	mov	x2, x20
    c4c8:	mov	x3, xzr
    c4cc:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    c4d0:	b	c4e0 <PyInit__elementtree@@Base+0x81bc>
    c4d4:	mov	x1, x19
    c4d8:	mov	x2, x20
    c4dc:	bl	5cdc <PyInit__elementtree@@Base+0x19b8>
    c4e0:	mov	x21, x0
    c4e4:	ldr	x8, [x19]
    c4e8:	subs	x8, x8, #0x1
    c4ec:	str	x8, [x19]
    c4f0:	b.ne	c4fc <PyInit__elementtree@@Base+0x81d8>  // b.any
    c4f4:	mov	x0, x19
    c4f8:	bl	3d70 <_Py_Dealloc@plt>
    c4fc:	ldr	x8, [x20]
    c500:	subs	x8, x8, #0x1
    c504:	str	x8, [x20]
    c508:	b.eq	c514 <PyInit__elementtree@@Base+0x81f0>  // b.none
    c50c:	cbnz	x21, c520 <PyInit__elementtree@@Base+0x81fc>
    c510:	b	c350 <PyInit__elementtree@@Base+0x802c>
    c514:	mov	x0, x20
    c518:	bl	3d70 <_Py_Dealloc@plt>
    c51c:	cbz	x21, c350 <PyInit__elementtree@@Base+0x802c>
    c520:	ldr	x8, [x21]
    c524:	subs	x8, x8, #0x1
    c528:	str	x8, [x21]
    c52c:	b.ne	c350 <PyInit__elementtree@@Base+0x802c>  // b.any
    c530:	mov	x0, x21
    c534:	b	c5b4 <PyInit__elementtree@@Base+0x8290>
    c538:	mov	x21, xzr
    c53c:	ldr	x8, [x19]
    c540:	subs	x8, x8, #0x1
    c544:	str	x8, [x19]
    c548:	b.ne	c4fc <PyInit__elementtree@@Base+0x81d8>  // b.any
    c54c:	b	c4f4 <PyInit__elementtree@@Base+0x81d0>
    c550:	cbz	x24, c56c <PyInit__elementtree@@Base+0x8248>
    c554:	ldr	x8, [x24]
    c558:	subs	x8, x8, #0x1
    c55c:	str	x8, [x24]
    c560:	b.ne	c56c <PyInit__elementtree@@Base+0x8248>  // b.any
    c564:	mov	x0, x24
    c568:	bl	3d70 <_Py_Dealloc@plt>
    c56c:	cbz	x23, c588 <PyInit__elementtree@@Base+0x8264>
    c570:	ldr	x8, [x23]
    c574:	subs	x8, x8, #0x1
    c578:	str	x8, [x23]
    c57c:	b.ne	c588 <PyInit__elementtree@@Base+0x8264>  // b.any
    c580:	mov	x0, x23
    c584:	bl	3d70 <_Py_Dealloc@plt>
    c588:	ldr	x8, [x20]
    c58c:	subs	x8, x8, #0x1
    c590:	str	x8, [x20]
    c594:	b.ne	c5a0 <PyInit__elementtree@@Base+0x827c>  // b.any
    c598:	mov	x0, x20
    c59c:	bl	3d70 <_Py_Dealloc@plt>
    c5a0:	ldr	x8, [x19]
    c5a4:	subs	x8, x8, #0x1
    c5a8:	str	x8, [x19]
    c5ac:	b.ne	c350 <PyInit__elementtree@@Base+0x802c>  // b.any
    c5b0:	mov	x0, x19
    c5b4:	ldp	x20, x19, [sp, #64]
    c5b8:	ldp	x22, x21, [sp, #48]
    c5bc:	ldp	x24, x23, [sp, #32]
    c5c0:	ldp	x26, x25, [sp, #16]
    c5c4:	ldp	x29, x30, [sp], #80
    c5c8:	b	3d70 <_Py_Dealloc@plt>
    c5cc:	sub	sp, sp, #0x30
    c5d0:	stp	x29, x30, [sp, #16]
    c5d4:	stp	x20, x19, [sp, #32]
    c5d8:	add	x29, sp, #0x10
    c5dc:	mov	x20, x1
    c5e0:	mov	x19, x0
    c5e4:	bl	3f80 <PyErr_Occurred@plt>
    c5e8:	cbz	x0, c5fc <PyInit__elementtree@@Base+0x82d8>
    c5ec:	ldp	x20, x19, [sp, #32]
    c5f0:	ldp	x29, x30, [sp, #16]
    c5f4:	add	sp, sp, #0x30
    c5f8:	ret
    c5fc:	ldr	x0, [x19, #24]
    c600:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c604:	add	x9, x9, #0xf48
    c608:	ldr	x8, [x0, #8]
    c60c:	cmp	x8, x9
    c610:	b.eq	c674 <PyInit__elementtree@@Base+0x8350>  // b.none
    c614:	ldr	x8, [x19, #80]
    c618:	cbz	x8, c5ec <PyInit__elementtree@@Base+0x82c8>
    c61c:	mov	x0, x19
    c620:	mov	x1, x20
    c624:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    c628:	str	x0, [sp, #8]
    c62c:	cbz	x0, c5ec <PyInit__elementtree@@Base+0x82c8>
    c630:	ldr	x19, [x19, #80]
    c634:	ldr	x8, [x19, #8]
    c638:	ldrb	w9, [x8, #169]
    c63c:	tbz	w9, #3, c680 <PyInit__elementtree@@Base+0x835c>
    c640:	ldr	x8, [x8, #56]
    c644:	ldr	x8, [x19, x8]
    c648:	cbz	x8, c680 <PyInit__elementtree@@Base+0x835c>
    c64c:	add	x1, sp, #0x8
    c650:	mov	w2, #0x1                   	// #1
    c654:	mov	x0, x19
    c658:	mov	x3, xzr
    c65c:	blr	x8
    c660:	mov	x1, x0
    c664:	mov	x0, x19
    c668:	mov	x2, xzr
    c66c:	bl	4020 <_Py_CheckFunctionResult@plt>
    c670:	b	c694 <PyInit__elementtree@@Base+0x8370>
    c674:	bl	62b4 <PyInit__elementtree@@Base+0x1f90>
    c678:	mov	x19, x0
    c67c:	b	c6b0 <PyInit__elementtree@@Base+0x838c>
    c680:	add	x1, sp, #0x8
    c684:	mov	w2, #0x1                   	// #1
    c688:	mov	x0, x19
    c68c:	mov	x3, xzr
    c690:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c694:	mov	x19, x0
    c698:	ldr	x0, [sp, #8]
    c69c:	ldr	x8, [x0]
    c6a0:	subs	x8, x8, #0x1
    c6a4:	str	x8, [x0]
    c6a8:	b.ne	c6b0 <PyInit__elementtree@@Base+0x838c>  // b.any
    c6ac:	bl	3d70 <_Py_Dealloc@plt>
    c6b0:	cbz	x19, c5ec <PyInit__elementtree@@Base+0x82c8>
    c6b4:	ldr	x8, [x19]
    c6b8:	subs	x8, x8, #0x1
    c6bc:	str	x8, [x19]
    c6c0:	b.ne	c5ec <PyInit__elementtree@@Base+0x82c8>  // b.any
    c6c4:	mov	x0, x19
    c6c8:	bl	3d70 <_Py_Dealloc@plt>
    c6cc:	ldp	x20, x19, [sp, #32]
    c6d0:	ldp	x29, x30, [sp, #16]
    c6d4:	add	sp, sp, #0x30
    c6d8:	ret
    c6dc:	sub	sp, sp, #0xc0
    c6e0:	stp	x29, x30, [sp, #144]
    c6e4:	stp	x22, x21, [sp, #160]
    c6e8:	stp	x20, x19, [sp, #176]
    c6ec:	add	x29, sp, #0x90
    c6f0:	subs	w19, w2, #0x2
    c6f4:	b.lt	c718 <PyInit__elementtree@@Base+0x83f4>  // b.tstop
    c6f8:	ldrb	w8, [x1]
    c6fc:	mov	x21, x1
    c700:	cmp	w8, #0x26
    c704:	b.ne	c718 <PyInit__elementtree@@Base+0x83f4>  // b.any
    c708:	mov	w22, w2
    c70c:	mov	x20, x0
    c710:	bl	3f80 <PyErr_Occurred@plt>
    c714:	cbz	x0, c72c <PyInit__elementtree@@Base+0x8408>
    c718:	ldp	x20, x19, [sp, #176]
    c71c:	ldp	x22, x21, [sp, #160]
    c720:	ldp	x29, x30, [sp, #144]
    c724:	add	sp, sp, #0xc0
    c728:	ret
    c72c:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c730:	add	x0, x21, #0x1
    c734:	sxtw	x1, w19
    c738:	add	x2, x2, #0x595
    c73c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c740:	cbz	x0, c718 <PyInit__elementtree@@Base+0x83f4>
    c744:	mov	x19, x0
    c748:	ldr	x0, [x20, #32]
    c74c:	mov	x1, x19
    c750:	bl	4230 <PyDict_GetItemWithError@plt>
    c754:	stur	x0, [x29, #-8]
    c758:	cbz	x0, c7c0 <PyInit__elementtree@@Base+0x849c>
    c75c:	mov	x1, x0
    c760:	ldr	x0, [x20, #24]
    c764:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c768:	add	x9, x9, #0xf48
    c76c:	ldr	x8, [x0, #8]
    c770:	cmp	x8, x9
    c774:	b.eq	c854 <PyInit__elementtree@@Base+0x8530>  // b.none
    c778:	ldr	x20, [x20, #72]
    c77c:	cbz	x20, c888 <PyInit__elementtree@@Base+0x8564>
    c780:	ldr	x8, [x20, #8]
    c784:	ldrb	w9, [x8, #169]
    c788:	tbz	w9, #3, c85c <PyInit__elementtree@@Base+0x8538>
    c78c:	ldr	x8, [x8, #56]
    c790:	ldr	x8, [x20, x8]
    c794:	cbz	x8, c85c <PyInit__elementtree@@Base+0x8538>
    c798:	sub	x1, x29, #0x8
    c79c:	mov	w2, #0x1                   	// #1
    c7a0:	mov	x0, x20
    c7a4:	mov	x3, xzr
    c7a8:	blr	x8
    c7ac:	mov	x1, x0
    c7b0:	mov	x0, x20
    c7b4:	mov	x2, xzr
    c7b8:	bl	4020 <_Py_CheckFunctionResult@plt>
    c7bc:	b	c870 <PyInit__elementtree@@Base+0x854c>
    c7c0:	bl	3f80 <PyErr_Occurred@plt>
    c7c4:	cbnz	x0, c888 <PyInit__elementtree@@Base+0x8564>
    c7c8:	adrp	x8, d000 <PyInit__elementtree@@Base+0x8cdc>
    c7cc:	add	x8, x8, #0xb5f
    c7d0:	ldp	q0, q1, [x8, #64]
    c7d4:	ldp	q2, q3, [x8, #96]
    c7d8:	cmp	w22, #0x64
    c7dc:	mov	x0, sp
    c7e0:	stp	q0, q1, [sp, #64]
    c7e4:	ldp	q0, q1, [x8]
    c7e8:	stp	q2, q3, [sp, #96]
    c7ec:	mov	x1, x21
    c7f0:	str	q0, [sp]
    c7f4:	ldp	q2, q0, [x8, #32]
    c7f8:	mov	w8, #0x64                  	// #100
    c7fc:	csel	w8, w22, w8, lt  // lt = tstop
    c800:	sxtw	x2, w8
    c804:	stp	q1, q2, [sp, #16]
    c808:	str	q0, [sp, #48]
    c80c:	bl	40d0 <strncat@plt>
    c810:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x1bcdc>
    c814:	ldr	x8, [x21, #1072]
    c818:	ldr	x0, [x20, #16]
    c81c:	ldr	x8, [x8, #48]
    c820:	blr	x8
    c824:	ldr	x8, [x21, #1072]
    c828:	ldr	x9, [x8, #40]
    c82c:	ldr	x8, [x20, #16]
    c830:	mov	x20, x0
    c834:	mov	x0, x8
    c838:	blr	x9
    c83c:	mov	x2, x0
    c840:	mov	x3, sp
    c844:	mov	w0, #0xb                   	// #11
    c848:	mov	x1, x20
    c84c:	bl	b8b4 <PyInit__elementtree@@Base+0x7590>
    c850:	b	c888 <PyInit__elementtree@@Base+0x8564>
    c854:	bl	5bb8 <PyInit__elementtree@@Base+0x1894>
    c858:	b	c870 <PyInit__elementtree@@Base+0x854c>
    c85c:	sub	x1, x29, #0x8
    c860:	mov	w2, #0x1                   	// #1
    c864:	mov	x0, x20
    c868:	mov	x3, xzr
    c86c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c870:	cbz	x0, c888 <PyInit__elementtree@@Base+0x8564>
    c874:	ldr	x8, [x0]
    c878:	subs	x8, x8, #0x1
    c87c:	str	x8, [x0]
    c880:	b.ne	c888 <PyInit__elementtree@@Base+0x8564>  // b.any
    c884:	bl	3d70 <_Py_Dealloc@plt>
    c888:	ldr	x8, [x19]
    c88c:	subs	x8, x8, #0x1
    c890:	str	x8, [x19]
    c894:	b.ne	c718 <PyInit__elementtree@@Base+0x83f4>  // b.any
    c898:	mov	x0, x19
    c89c:	bl	3d70 <_Py_Dealloc@plt>
    c8a0:	b	c718 <PyInit__elementtree@@Base+0x83f4>
    c8a4:	stp	x29, x30, [sp, #-48]!
    c8a8:	str	x21, [sp, #16]
    c8ac:	stp	x20, x19, [sp, #32]
    c8b0:	mov	x29, sp
    c8b4:	mov	w21, w2
    c8b8:	mov	x20, x1
    c8bc:	mov	x19, x0
    c8c0:	bl	3f80 <PyErr_Occurred@plt>
    c8c4:	cbz	x0, c8d8 <PyInit__elementtree@@Base+0x85b4>
    c8c8:	ldp	x20, x19, [sp, #32]
    c8cc:	ldr	x21, [sp, #16]
    c8d0:	ldp	x29, x30, [sp], #48
    c8d4:	ret
    c8d8:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    c8dc:	sxtw	x1, w21
    c8e0:	add	x2, x2, #0x595
    c8e4:	mov	x0, x20
    c8e8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c8ec:	str	x0, [x29, #24]
    c8f0:	cbz	x0, c8c8 <PyInit__elementtree@@Base+0x85a4>
    c8f4:	mov	x1, x0
    c8f8:	ldr	x0, [x19, #24]
    c8fc:	adrp	x9, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    c900:	add	x9, x9, #0xf48
    c904:	ldr	x8, [x0, #8]
    c908:	cmp	x8, x9
    c90c:	b.eq	c958 <PyInit__elementtree@@Base+0x8634>  // b.none
    c910:	ldr	x19, [x19, #72]
    c914:	cbz	x19, c978 <PyInit__elementtree@@Base+0x8654>
    c918:	ldr	x8, [x19, #8]
    c91c:	ldrb	w9, [x8, #169]
    c920:	tbz	w9, #3, c960 <PyInit__elementtree@@Base+0x863c>
    c924:	ldr	x8, [x8, #56]
    c928:	ldr	x8, [x19, x8]
    c92c:	cbz	x8, c960 <PyInit__elementtree@@Base+0x863c>
    c930:	add	x1, x29, #0x18
    c934:	mov	w2, #0x1                   	// #1
    c938:	mov	x0, x19
    c93c:	mov	x3, xzr
    c940:	blr	x8
    c944:	mov	x1, x0
    c948:	mov	x0, x19
    c94c:	mov	x2, xzr
    c950:	bl	4020 <_Py_CheckFunctionResult@plt>
    c954:	b	c974 <PyInit__elementtree@@Base+0x8650>
    c958:	bl	5bb8 <PyInit__elementtree@@Base+0x1894>
    c95c:	b	c974 <PyInit__elementtree@@Base+0x8650>
    c960:	add	x1, x29, #0x18
    c964:	mov	w2, #0x1                   	// #1
    c968:	mov	x0, x19
    c96c:	mov	x3, xzr
    c970:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c974:	mov	x19, x0
    c978:	ldr	x0, [x29, #24]
    c97c:	ldr	x8, [x0]
    c980:	subs	x8, x8, #0x1
    c984:	str	x8, [x0]
    c988:	b.ne	c990 <PyInit__elementtree@@Base+0x866c>  // b.any
    c98c:	bl	3d70 <_Py_Dealloc@plt>
    c990:	cbz	x19, c8c8 <PyInit__elementtree@@Base+0x85a4>
    c994:	ldr	x8, [x19]
    c998:	subs	x8, x8, #0x1
    c99c:	str	x8, [x19]
    c9a0:	b.ne	c8c8 <PyInit__elementtree@@Base+0x85a4>  // b.any
    c9a4:	mov	x0, x19
    c9a8:	bl	3d70 <_Py_Dealloc@plt>
    c9ac:	ldp	x20, x19, [sp, #32]
    c9b0:	ldr	x21, [sp, #16]
    c9b4:	ldp	x29, x30, [sp], #48
    c9b8:	ret
    c9bc:	sub	sp, sp, #0x40
    c9c0:	stp	x29, x30, [sp, #16]
    c9c4:	stp	x22, x21, [sp, #32]
    c9c8:	stp	x20, x19, [sp, #48]
    c9cc:	add	x29, sp, #0x10
    c9d0:	mov	x21, x3
    c9d4:	mov	x19, x2
    c9d8:	mov	x20, x1
    c9dc:	mov	x22, x0
    c9e0:	bl	3f80 <PyErr_Occurred@plt>
    c9e4:	cbz	x0, c9fc <PyInit__elementtree@@Base+0x86d8>
    c9e8:	ldp	x20, x19, [sp, #48]
    c9ec:	ldp	x22, x21, [sp, #32]
    c9f0:	ldp	x29, x30, [sp, #16]
    c9f4:	add	sp, sp, #0x40
    c9f8:	ret
    c9fc:	mov	x0, x22
    ca00:	mov	x1, x20
    ca04:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    ca08:	cbz	x0, c9e8 <PyInit__elementtree@@Base+0x86c4>
    ca0c:	mov	x20, x0
    ca10:	cbz	x19, ca40 <PyInit__elementtree@@Base+0x871c>
    ca14:	mov	x0, x22
    ca18:	mov	x1, x19
    ca1c:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    ca20:	mov	x19, x0
    ca24:	cbnz	x0, ca54 <PyInit__elementtree@@Base+0x8730>
    ca28:	ldr	x8, [x20]
    ca2c:	subs	x8, x8, #0x1
    ca30:	str	x8, [x20]
    ca34:	b.ne	c9e8 <PyInit__elementtree@@Base+0x86c4>  // b.any
    ca38:	mov	x0, x20
    ca3c:	b	cb64 <PyInit__elementtree@@Base+0x8840>
    ca40:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    ca44:	ldr	x19, [x19, #3976]
    ca48:	ldr	x8, [x19]
    ca4c:	add	x8, x8, #0x1
    ca50:	str	x8, [x19]
    ca54:	cbz	x21, ca84 <PyInit__elementtree@@Base+0x8760>
    ca58:	mov	x0, x22
    ca5c:	mov	x1, x21
    ca60:	bl	cb6c <PyInit__elementtree@@Base+0x8848>
    ca64:	mov	x21, x0
    ca68:	cbnz	x0, ca98 <PyInit__elementtree@@Base+0x8774>
    ca6c:	ldr	x8, [x20]
    ca70:	subs	x8, x8, #0x1
    ca74:	str	x8, [x20]
    ca78:	b.ne	cb50 <PyInit__elementtree@@Base+0x882c>  // b.any
    ca7c:	mov	x0, x20
    ca80:	b	cb4c <PyInit__elementtree@@Base+0x8828>
    ca84:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    ca88:	ldr	x21, [x21, #3976]
    ca8c:	ldr	x8, [x21]
    ca90:	add	x8, x8, #0x1
    ca94:	str	x8, [x21]
    ca98:	ldr	x0, [x22, #104]
    ca9c:	cbz	x0, cad0 <PyInit__elementtree@@Base+0x87ac>
    caa0:	mov	x1, x20
    caa4:	mov	x2, x21
    caa8:	mov	x3, x19
    caac:	mov	x4, xzr
    cab0:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    cab4:	str	x0, [sp, #8]
    cab8:	cbz	x0, cb20 <PyInit__elementtree@@Base+0x87fc>
    cabc:	ldr	x8, [x0]
    cac0:	subs	x8, x8, #0x1
    cac4:	str	x8, [x0]
    cac8:	b.ne	cb20 <PyInit__elementtree@@Base+0x87fc>  // b.any
    cacc:	b	cb1c <PyInit__elementtree@@Base+0x87f8>
    cad0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x1acdc>
    cad4:	add	x1, x1, #0xab8
    cad8:	add	x2, sp, #0x8
    cadc:	mov	x0, x22
    cae0:	bl	3c90 <_PyObject_LookupAttrId@plt>
    cae4:	cmp	w0, #0x1
    cae8:	b.lt	cb20 <PyInit__elementtree@@Base+0x87fc>  // b.tstop
    caec:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    caf0:	ldr	x8, [x8, #4024]
    caf4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x8cdc>
    caf8:	add	x1, x1, #0x61a
    cafc:	mov	w2, #0x1                   	// #1
    cb00:	ldr	x0, [x8]
    cb04:	bl	3d60 <PyErr_WarnEx@plt>
    cb08:	ldr	x0, [sp, #8]
    cb0c:	ldr	x8, [x0]
    cb10:	subs	x8, x8, #0x1
    cb14:	str	x8, [x0]
    cb18:	b.ne	cb20 <PyInit__elementtree@@Base+0x87fc>  // b.any
    cb1c:	bl	3d70 <_Py_Dealloc@plt>
    cb20:	ldr	x8, [x20]
    cb24:	subs	x8, x8, #0x1
    cb28:	str	x8, [x20]
    cb2c:	b.ne	cb38 <PyInit__elementtree@@Base+0x8814>  // b.any
    cb30:	mov	x0, x20
    cb34:	bl	3d70 <_Py_Dealloc@plt>
    cb38:	ldr	x8, [x21]
    cb3c:	subs	x8, x8, #0x1
    cb40:	str	x8, [x21]
    cb44:	b.ne	cb50 <PyInit__elementtree@@Base+0x882c>  // b.any
    cb48:	mov	x0, x21
    cb4c:	bl	3d70 <_Py_Dealloc@plt>
    cb50:	ldr	x8, [x19]
    cb54:	subs	x8, x8, #0x1
    cb58:	str	x8, [x19]
    cb5c:	b.ne	c9e8 <PyInit__elementtree@@Base+0x86c4>  // b.any
    cb60:	mov	x0, x19
    cb64:	bl	3d70 <_Py_Dealloc@plt>
    cb68:	b	c9e8 <PyInit__elementtree@@Base+0x86c4>
    cb6c:	stp	x29, x30, [sp, #-64]!
    cb70:	stp	x24, x23, [sp, #16]
    cb74:	stp	x22, x21, [sp, #32]
    cb78:	stp	x20, x19, [sp, #48]
    cb7c:	mov	x29, sp
    cb80:	mov	x20, x0
    cb84:	mov	x0, x1
    cb88:	mov	x23, x1
    cb8c:	bl	3c70 <strlen@plt>
    cb90:	mov	x21, x0
    cb94:	mov	x0, x23
    cb98:	mov	x1, x21
    cb9c:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    cba0:	cbz	x0, ccf8 <PyInit__elementtree@@Base+0x89d4>
    cba4:	mov	x19, x0
    cba8:	ldr	x0, [x20, #40]
    cbac:	mov	x1, x19
    cbb0:	bl	4230 <PyDict_GetItemWithError@plt>
    cbb4:	cbz	x0, cbcc <PyInit__elementtree@@Base+0x88a8>
    cbb8:	ldr	x8, [x0]
    cbbc:	mov	x22, x0
    cbc0:	add	x8, x8, #0x1
    cbc4:	str	x8, [x0]
    cbc8:	b	cbd8 <PyInit__elementtree@@Base+0x88b4>
    cbcc:	bl	3f80 <PyErr_Occurred@plt>
    cbd0:	cbz	x0, cbf4 <PyInit__elementtree@@Base+0x88d0>
    cbd4:	mov	x22, xzr
    cbd8:	ldr	x8, [x19]
    cbdc:	subs	x8, x8, #0x1
    cbe0:	str	x8, [x19]
    cbe4:	b.ne	ccfc <PyInit__elementtree@@Base+0x89d8>  // b.any
    cbe8:	mov	x0, x19
    cbec:	bl	3d70 <_Py_Dealloc@plt>
    cbf0:	b	ccfc <PyInit__elementtree@@Base+0x89d8>
    cbf4:	cmp	x21, #0x1
    cbf8:	b.lt	cc1c <PyInit__elementtree@@Base+0x88f8>  // b.tstop
    cbfc:	mov	x8, xzr
    cc00:	ldrb	w9, [x23, x8]
    cc04:	cmp	w9, #0x7d
    cc08:	b.eq	cc20 <PyInit__elementtree@@Base+0x88fc>  // b.none
    cc0c:	add	x8, x8, #0x1
    cc10:	cmp	x21, x8
    cc14:	b.ne	cc00 <PyInit__elementtree@@Base+0x88dc>  // b.any
    cc18:	b	cc28 <PyInit__elementtree@@Base+0x8904>
    cc1c:	mov	x8, xzr
    cc20:	cmp	x8, x21
    cc24:	b.ne	cc3c <PyInit__elementtree@@Base+0x8918>  // b.any
    cc28:	ldr	x8, [x19]
    cc2c:	mov	x24, x19
    cc30:	add	x8, x8, #0x1
    cc34:	str	x8, [x19]
    cc38:	b	cc70 <PyInit__elementtree@@Base+0x894c>
    cc3c:	add	x22, x21, #0x1
    cc40:	mov	x0, xzr
    cc44:	mov	x1, x22
    cc48:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    cc4c:	cbz	x0, cce8 <PyInit__elementtree@@Base+0x89c4>
    cc50:	mov	w8, #0x7b                  	// #123
    cc54:	mov	x24, x0
    cc58:	strb	w8, [x0, #32]
    cc5c:	add	x0, x0, #0x21
    cc60:	mov	x1, x23
    cc64:	mov	x2, x21
    cc68:	bl	3c20 <memcpy@plt>
    cc6c:	mov	x21, x22
    cc70:	adrp	x2, d000 <PyInit__elementtree@@Base+0x8cdc>
    cc74:	add	x0, x24, #0x20
    cc78:	add	x2, x2, #0x595
    cc7c:	mov	x1, x21
    cc80:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    cc84:	ldr	x8, [x24]
    cc88:	mov	x22, x0
    cc8c:	subs	x8, x8, #0x1
    cc90:	str	x8, [x24]
    cc94:	b.ne	cca0 <PyInit__elementtree@@Base+0x897c>  // b.any
    cc98:	mov	x0, x24
    cc9c:	bl	3d70 <_Py_Dealloc@plt>
    cca0:	cbz	x22, cce8 <PyInit__elementtree@@Base+0x89c4>
    cca4:	ldr	x0, [x20, #40]
    cca8:	mov	x1, x19
    ccac:	mov	x2, x22
    ccb0:	bl	4140 <PyDict_SetItem@plt>
    ccb4:	tbz	w0, #31, cbd8 <PyInit__elementtree@@Base+0x88b4>
    ccb8:	ldr	x8, [x19]
    ccbc:	subs	x8, x8, #0x1
    ccc0:	str	x8, [x19]
    ccc4:	b.ne	ccd0 <PyInit__elementtree@@Base+0x89ac>  // b.any
    ccc8:	mov	x0, x19
    cccc:	bl	3d70 <_Py_Dealloc@plt>
    ccd0:	ldr	x8, [x22]
    ccd4:	subs	x8, x8, #0x1
    ccd8:	str	x8, [x22]
    ccdc:	b.ne	ccf8 <PyInit__elementtree@@Base+0x89d4>  // b.any
    cce0:	mov	x0, x22
    cce4:	b	cd18 <PyInit__elementtree@@Base+0x89f4>
    cce8:	ldr	x8, [x19]
    ccec:	subs	x8, x8, #0x1
    ccf0:	str	x8, [x19]
    ccf4:	b.eq	cd14 <PyInit__elementtree@@Base+0x89f0>  // b.none
    ccf8:	mov	x22, xzr
    ccfc:	mov	x0, x22
    cd00:	ldp	x20, x19, [sp, #48]
    cd04:	ldp	x22, x21, [sp, #32]
    cd08:	ldp	x24, x23, [sp, #16]
    cd0c:	ldp	x29, x30, [sp], #64
    cd10:	ret
    cd14:	mov	x0, x19
    cd18:	bl	3d70 <_Py_Dealloc@plt>
    cd1c:	mov	x22, xzr
    cd20:	b	ccfc <PyInit__elementtree@@Base+0x89d8>

Disassembly of section .fini:

000000000000cd24 <.fini>:
    cd24:	stp	x29, x30, [sp, #-16]!
    cd28:	mov	x29, sp
    cd2c:	ldp	x29, x30, [sp], #16
    cd30:	ret
