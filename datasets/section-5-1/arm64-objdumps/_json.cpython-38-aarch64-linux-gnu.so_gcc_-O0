
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_json.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d58 <.init>:
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x29, sp
    1d60:	bl	20e0 <PySequence_Fast@plt+0x10>
    1d64:	ldp	x29, x30, [sp], #16
    1d68:	ret

Disassembly of section .plt:

0000000000001d70 <PyMapping_Items@plt-0x20>:
    1d70:	stp	x16, x30, [sp, #-16]!
    1d74:	adrp	x16, 1b000 <PyInit__json@@Base+0x1070c>
    1d78:	ldr	x17, [x16, #4088]
    1d7c:	add	x16, x16, #0xff8
    1d80:	br	x17
    1d84:	nop
    1d88:	nop
    1d8c:	nop

0000000000001d90 <PyMapping_Items@plt>:
    1d90:	adrp	x16, 1c000 <PyMapping_Items>
    1d94:	ldr	x17, [x16]
    1d98:	add	x16, x16, #0x0
    1d9c:	br	x17

0000000000001da0 <PyList_New@plt>:
    1da0:	adrp	x16, 1c000 <PyMapping_Items>
    1da4:	ldr	x17, [x16, #8]
    1da8:	add	x16, x16, #0x8
    1dac:	br	x17

0000000000001db0 <_PyUnicode_Ready@plt>:
    1db0:	adrp	x16, 1c000 <PyMapping_Items>
    1db4:	ldr	x17, [x16, #16]
    1db8:	add	x16, x16, #0x10
    1dbc:	br	x17

0000000000001dc0 <PyArg_ParseTupleAndKeywords@plt>:
    1dc0:	adrp	x16, 1c000 <PyMapping_Items>
    1dc4:	ldr	x17, [x16, #24]
    1dc8:	add	x16, x16, #0x18
    1dcc:	br	x17

0000000000001dd0 <PyObject_GetAttrString@plt>:
    1dd0:	adrp	x16, 1c000 <PyMapping_Items>
    1dd4:	ldr	x17, [x16, #32]
    1dd8:	add	x16, x16, #0x20
    1ddc:	br	x17

0000000000001de0 <__cxa_finalize@plt>:
    1de0:	adrp	x16, 1c000 <PyMapping_Items>
    1de4:	ldr	x17, [x16, #40]
    1de8:	add	x16, x16, #0x28
    1dec:	br	x17

0000000000001df0 <_PyAccu_Init@plt>:
    1df0:	adrp	x16, 1c000 <PyMapping_Items>
    1df4:	ldr	x17, [x16, #48]
    1df8:	add	x16, x16, #0x30
    1dfc:	br	x17

0000000000001e00 <PyUnicode_Join@plt>:
    1e00:	adrp	x16, 1c000 <PyMapping_Items>
    1e04:	ldr	x17, [x16, #56]
    1e08:	add	x16, x16, #0x38
    1e0c:	br	x17

0000000000001e10 <PyDict_Contains@plt>:
    1e10:	adrp	x16, 1c000 <PyMapping_Items>
    1e14:	ldr	x17, [x16, #64]
    1e18:	add	x16, x16, #0x40
    1e1c:	br	x17

0000000000001e20 <PyBytes_FromStringAndSize@plt>:
    1e20:	adrp	x16, 1c000 <PyMapping_Items>
    1e24:	ldr	x17, [x16, #72]
    1e28:	add	x16, x16, #0x48
    1e2c:	br	x17

0000000000001e30 <_Py_Dealloc@plt>:
    1e30:	adrp	x16, 1c000 <PyMapping_Items>
    1e34:	ldr	x17, [x16, #80]
    1e38:	add	x16, x16, #0x50
    1e3c:	br	x17

0000000000001e40 <PyErr_SetObject@plt>:
    1e40:	adrp	x16, 1c000 <PyMapping_Items>
    1e44:	ldr	x17, [x16, #88]
    1e48:	add	x16, x16, #0x58
    1e4c:	br	x17

0000000000001e50 <PyIter_Next@plt>:
    1e50:	adrp	x16, 1c000 <PyMapping_Items>
    1e54:	ldr	x17, [x16, #96]
    1e58:	add	x16, x16, #0x60
    1e5c:	br	x17

0000000000001e60 <PyErr_SetString@plt>:
    1e60:	adrp	x16, 1c000 <PyMapping_Items>
    1e64:	ldr	x17, [x16, #104]
    1e68:	add	x16, x16, #0x68
    1e6c:	br	x17

0000000000001e70 <_PyAccu_Accumulate@plt>:
    1e70:	adrp	x16, 1c000 <PyMapping_Items>
    1e74:	ldr	x17, [x16, #112]
    1e78:	add	x16, x16, #0x70
    1e7c:	br	x17

0000000000001e80 <PyLong_FromSsize_t@plt>:
    1e80:	adrp	x16, 1c000 <PyMapping_Items>
    1e84:	ldr	x17, [x16, #120]
    1e88:	add	x16, x16, #0x78
    1e8c:	br	x17

0000000000001e90 <PyType_Ready@plt>:
    1e90:	adrp	x16, 1c000 <PyMapping_Items>
    1e94:	ldr	x17, [x16, #128]
    1e98:	add	x16, x16, #0x80
    1e9c:	br	x17

0000000000001ea0 <PyLong_FromVoidPtr@plt>:
    1ea0:	adrp	x16, 1c000 <PyMapping_Items>
    1ea4:	ldr	x17, [x16, #136]
    1ea8:	add	x16, x16, #0x88
    1eac:	br	x17

0000000000001eb0 <PyList_Append@plt>:
    1eb0:	adrp	x16, 1c000 <PyMapping_Items>
    1eb4:	ldr	x17, [x16, #144]
    1eb8:	add	x16, x16, #0x90
    1ebc:	br	x17

0000000000001ec0 <_Py_CheckRecursiveCall@plt>:
    1ec0:	adrp	x16, 1c000 <PyMapping_Items>
    1ec4:	ldr	x17, [x16, #152]
    1ec8:	add	x16, x16, #0x98
    1ecc:	br	x17

0000000000001ed0 <PyDict_Clear@plt>:
    1ed0:	adrp	x16, 1c000 <PyMapping_Items>
    1ed4:	ldr	x17, [x16, #160]
    1ed8:	add	x16, x16, #0xa0
    1edc:	br	x17

0000000000001ee0 <_PyAccu_Destroy@plt>:
    1ee0:	adrp	x16, 1c000 <PyMapping_Items>
    1ee4:	ldr	x17, [x16, #168]
    1ee8:	add	x16, x16, #0xa8
    1eec:	br	x17

0000000000001ef0 <__gmon_start__@plt>:
    1ef0:	adrp	x16, 1c000 <PyMapping_Items>
    1ef4:	ldr	x17, [x16, #176]
    1ef8:	add	x16, x16, #0xb0
    1efc:	br	x17

0000000000001f00 <PyObject_CallFunction@plt>:
    1f00:	adrp	x16, 1c000 <PyMapping_Items>
    1f04:	ldr	x17, [x16, #184]
    1f08:	add	x16, x16, #0xb8
    1f0c:	br	x17

0000000000001f10 <PyTuple_New@plt>:
    1f10:	adrp	x16, 1c000 <PyMapping_Items>
    1f14:	ldr	x17, [x16, #192]
    1f18:	add	x16, x16, #0xc0
    1f1c:	br	x17

0000000000001f20 <PyThreadState_Get@plt>:
    1f20:	adrp	x16, 1c000 <PyMapping_Items>
    1f24:	ldr	x17, [x16, #200]
    1f28:	add	x16, x16, #0xc8
    1f2c:	br	x17

0000000000001f30 <PyDict_DelItem@plt>:
    1f30:	adrp	x16, 1c000 <PyMapping_Items>
    1f34:	ldr	x17, [x16, #208]
    1f38:	add	x16, x16, #0xd0
    1f3c:	br	x17

0000000000001f40 <PyErr_Occurred@plt>:
    1f40:	adrp	x16, 1c000 <PyMapping_Items>
    1f44:	ldr	x17, [x16, #216]
    1f48:	add	x16, x16, #0xd8
    1f4c:	br	x17

0000000000001f50 <PyModule_Create2@plt>:
    1f50:	adrp	x16, 1c000 <PyMapping_Items>
    1f54:	ldr	x17, [x16, #224]
    1f58:	add	x16, x16, #0xe0
    1f5c:	br	x17

0000000000001f60 <PyImport_ImportModule@plt>:
    1f60:	adrp	x16, 1c000 <PyMapping_Items>
    1f64:	ldr	x17, [x16, #232]
    1f68:	add	x16, x16, #0xe8
    1f6c:	br	x17

0000000000001f70 <PyObject_CallFunctionObjArgs@plt>:
    1f70:	adrp	x16, 1c000 <PyMapping_Items>
    1f74:	ldr	x17, [x16, #240]
    1f78:	add	x16, x16, #0xf0
    1f7c:	br	x17

0000000000001f80 <PyList_Sort@plt>:
    1f80:	adrp	x16, 1c000 <PyMapping_Items>
    1f84:	ldr	x17, [x16, #248]
    1f88:	add	x16, x16, #0xf8
    1f8c:	br	x17

0000000000001f90 <PyObject_IsTrue@plt>:
    1f90:	adrp	x16, 1c000 <PyMapping_Items>
    1f94:	ldr	x17, [x16, #256]
    1f98:	add	x16, x16, #0x100
    1f9c:	br	x17

0000000000001fa0 <PyArg_ParseTuple@plt>:
    1fa0:	adrp	x16, 1c000 <PyMapping_Items>
    1fa4:	ldr	x17, [x16, #264]
    1fa8:	add	x16, x16, #0x108
    1fac:	br	x17

0000000000001fb0 <PyUnicode_FromKindAndData@plt>:
    1fb0:	adrp	x16, 1c000 <PyMapping_Items>
    1fb4:	ldr	x17, [x16, #272]
    1fb8:	add	x16, x16, #0x110
    1fbc:	br	x17

0000000000001fc0 <PyCFunction_GetFunction@plt>:
    1fc0:	adrp	x16, 1c000 <PyMapping_Items>
    1fc4:	ldr	x17, [x16, #280]
    1fc8:	add	x16, x16, #0x118
    1fcc:	br	x17

0000000000001fd0 <PyDict_New@plt>:
    1fd0:	adrp	x16, 1c000 <PyMapping_Items>
    1fd4:	ldr	x17, [x16, #288]
    1fd8:	add	x16, x16, #0x120
    1fdc:	br	x17

0000000000001fe0 <PyUnicode_FromString@plt>:
    1fe0:	adrp	x16, 1c000 <PyMapping_Items>
    1fe4:	ldr	x17, [x16, #296]
    1fe8:	add	x16, x16, #0x128
    1fec:	br	x17

0000000000001ff0 <PyObject_GetIter@plt>:
    1ff0:	adrp	x16, 1c000 <PyMapping_Items>
    1ff4:	ldr	x17, [x16, #304]
    1ff8:	add	x16, x16, #0x130
    1ffc:	br	x17

0000000000002000 <PyUnicode_InternFromString@plt>:
    2000:	adrp	x16, 1c000 <PyMapping_Items>
    2004:	ldr	x17, [x16, #312]
    2008:	add	x16, x16, #0x138
    200c:	br	x17

0000000000002010 <PyModule_AddObject@plt>:
    2010:	adrp	x16, 1c000 <PyMapping_Items>
    2014:	ldr	x17, [x16, #320]
    2018:	add	x16, x16, #0x140
    201c:	br	x17

0000000000002020 <PyDict_SetItem@plt>:
    2020:	adrp	x16, 1c000 <PyMapping_Items>
    2024:	ldr	x17, [x16, #328]
    2028:	add	x16, x16, #0x148
    202c:	br	x17

0000000000002030 <PyType_IsSubtype@plt>:
    2030:	adrp	x16, 1c000 <PyMapping_Items>
    2034:	ldr	x17, [x16, #336]
    2038:	add	x16, x16, #0x150
    203c:	br	x17

0000000000002040 <PyErr_Format@plt>:
    2040:	adrp	x16, 1c000 <PyMapping_Items>
    2044:	ldr	x17, [x16, #344]
    2048:	add	x16, x16, #0x158
    204c:	br	x17

0000000000002050 <PyUnicode_FromStringAndSize@plt>:
    2050:	adrp	x16, 1c000 <PyMapping_Items>
    2054:	ldr	x17, [x16, #352]
    2058:	add	x16, x16, #0x160
    205c:	br	x17

0000000000002060 <PyLong_FromString@plt>:
    2060:	adrp	x16, 1c000 <PyMapping_Items>
    2064:	ldr	x17, [x16, #360]
    2068:	add	x16, x16, #0x168
    206c:	br	x17

0000000000002070 <_PyAccu_FinishAsList@plt>:
    2070:	adrp	x16, 1c000 <PyMapping_Items>
    2074:	ldr	x17, [x16, #368]
    2078:	add	x16, x16, #0x170
    207c:	br	x17

0000000000002080 <PyUnicode_New@plt>:
    2080:	adrp	x16, 1c000 <PyMapping_Items>
    2084:	ldr	x17, [x16, #376]
    2088:	add	x16, x16, #0x178
    208c:	br	x17

0000000000002090 <PyTuple_Pack@plt>:
    2090:	adrp	x16, 1c000 <PyMapping_Items>
    2094:	ldr	x17, [x16, #384]
    2098:	add	x16, x16, #0x180
    209c:	br	x17

00000000000020a0 <PyObject_GC_UnTrack@plt>:
    20a0:	adrp	x16, 1c000 <PyMapping_Items>
    20a4:	ldr	x17, [x16, #392]
    20a8:	add	x16, x16, #0x188
    20ac:	br	x17

00000000000020b0 <PyDict_GetItemWithError@plt>:
    20b0:	adrp	x16, 1c000 <PyMapping_Items>
    20b4:	ldr	x17, [x16, #400]
    20b8:	add	x16, x16, #0x190
    20bc:	br	x17

00000000000020c0 <PyFloat_FromString@plt>:
    20c0:	adrp	x16, 1c000 <PyMapping_Items>
    20c4:	ldr	x17, [x16, #408]
    20c8:	add	x16, x16, #0x198
    20cc:	br	x17

00000000000020d0 <PySequence_Fast@plt>:
    20d0:	adrp	x16, 1c000 <PyMapping_Items>
    20d4:	ldr	x17, [x16, #416]
    20d8:	add	x16, x16, #0x1a0
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <PyInit__json@@Base-0x8814>:
    20e0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    20e4:	ldr	x0, [x0, #4000]
    20e8:	cbz	x0, 20f0 <PySequence_Fast@plt+0x20>
    20ec:	b	1ef0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	stp	x29, x30, [sp, #-32]!
    20f8:	mov	x29, sp
    20fc:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2100:	add	x0, x0, #0x8e8
    2104:	str	x0, [sp, #24]
    2108:	ldr	x0, [sp, #24]
    210c:	str	x0, [sp, #24]
    2110:	ldr	x1, [sp, #24]
    2114:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2118:	add	x0, x0, #0x8e8
    211c:	cmp	x1, x0
    2120:	b.eq	2158 <PySequence_Fast@plt+0x88>  // b.none
    2124:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2128:	ldr	x0, [x0, #3944]
    212c:	str	x0, [sp, #16]
    2130:	ldr	x0, [sp, #16]
    2134:	str	x0, [sp, #16]
    2138:	ldr	x0, [sp, #16]
    213c:	cmp	x0, #0x0
    2140:	b.eq	215c <PySequence_Fast@plt+0x8c>  // b.none
    2144:	ldr	x1, [sp, #16]
    2148:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    214c:	add	x0, x0, #0x8e8
    2150:	blr	x1
    2154:	b	215c <PySequence_Fast@plt+0x8c>
    2158:	nop
    215c:	ldp	x29, x30, [sp], #32
    2160:	ret
    2164:	stp	x29, x30, [sp, #-48]!
    2168:	mov	x29, sp
    216c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2170:	add	x0, x0, #0x8e8
    2174:	str	x0, [sp, #40]
    2178:	ldr	x0, [sp, #40]
    217c:	str	x0, [sp, #40]
    2180:	ldr	x1, [sp, #40]
    2184:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2188:	add	x0, x0, #0x8e8
    218c:	sub	x0, x1, x0
    2190:	asr	x0, x0, #3
    2194:	lsr	x1, x0, #63
    2198:	add	x0, x1, x0
    219c:	asr	x0, x0, #1
    21a0:	str	x0, [sp, #32]
    21a4:	ldr	x0, [sp, #32]
    21a8:	cmp	x0, #0x0
    21ac:	b.eq	21e8 <PySequence_Fast@plt+0x118>  // b.none
    21b0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    21b4:	ldr	x0, [x0, #4056]
    21b8:	str	x0, [sp, #24]
    21bc:	ldr	x0, [sp, #24]
    21c0:	str	x0, [sp, #24]
    21c4:	ldr	x0, [sp, #24]
    21c8:	cmp	x0, #0x0
    21cc:	b.eq	21ec <PySequence_Fast@plt+0x11c>  // b.none
    21d0:	ldr	x2, [sp, #24]
    21d4:	ldr	x1, [sp, #32]
    21d8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    21dc:	add	x0, x0, #0x8e8
    21e0:	blr	x2
    21e4:	b	21ec <PySequence_Fast@plt+0x11c>
    21e8:	nop
    21ec:	ldp	x29, x30, [sp], #48
    21f0:	ret
    21f4:	stp	x29, x30, [sp, #-16]!
    21f8:	mov	x29, sp
    21fc:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2200:	add	x0, x0, #0x8e8
    2204:	ldrb	w0, [x0]
    2208:	and	x0, x0, #0xff
    220c:	cmp	x0, #0x0
    2210:	b.ne	224c <PySequence_Fast@plt+0x17c>  // b.any
    2214:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2218:	ldr	x0, [x0, #3960]
    221c:	cmp	x0, #0x0
    2220:	b.eq	2234 <PySequence_Fast@plt+0x164>  // b.none
    2224:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2228:	add	x0, x0, #0x1a8
    222c:	ldr	x0, [x0]
    2230:	bl	1de0 <__cxa_finalize@plt>
    2234:	bl	20f4 <PySequence_Fast@plt+0x24>
    2238:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    223c:	add	x0, x0, #0x8e8
    2240:	mov	w1, #0x1                   	// #1
    2244:	strb	w1, [x0]
    2248:	b	2250 <PySequence_Fast@plt+0x180>
    224c:	nop
    2250:	ldp	x29, x30, [sp], #16
    2254:	ret
    2258:	stp	x29, x30, [sp, #-16]!
    225c:	mov	x29, sp
    2260:	bl	2164 <PySequence_Fast@plt+0x94>
    2264:	nop
    2268:	ldp	x29, x30, [sp], #16
    226c:	ret
    2270:	sub	sp, sp, #0x10
    2274:	str	x0, [sp, #8]
    2278:	ldr	x0, [sp, #8]
    227c:	ldr	x0, [x0]
    2280:	add	x1, x0, #0x1
    2284:	ldr	x0, [sp, #8]
    2288:	str	x1, [x0]
    228c:	nop
    2290:	add	sp, sp, #0x10
    2294:	ret
    2298:	stp	x29, x30, [sp, #-48]!
    229c:	mov	x29, sp
    22a0:	str	x0, [sp, #40]
    22a4:	str	w1, [sp, #36]
    22a8:	str	x2, [sp, #24]
    22ac:	ldr	x0, [sp, #24]
    22b0:	ldr	x0, [x0]
    22b4:	sub	x1, x0, #0x1
    22b8:	ldr	x0, [sp, #24]
    22bc:	str	x1, [x0]
    22c0:	ldr	x0, [sp, #24]
    22c4:	ldr	x0, [x0]
    22c8:	cmp	x0, #0x0
    22cc:	b.ne	22d8 <PySequence_Fast@plt+0x208>  // b.any
    22d0:	ldr	x0, [sp, #24]
    22d4:	bl	1e30 <_Py_Dealloc@plt>
    22d8:	nop
    22dc:	ldp	x29, x30, [sp], #48
    22e0:	ret
    22e4:	stp	x29, x30, [sp, #-32]!
    22e8:	mov	x29, sp
    22ec:	str	x0, [sp, #24]
    22f0:	ldr	x0, [sp, #24]
    22f4:	cmp	x0, #0x0
    22f8:	b.eq	2304 <PySequence_Fast@plt+0x234>  // b.none
    22fc:	ldr	x0, [sp, #24]
    2300:	bl	2270 <PySequence_Fast@plt+0x1a0>
    2304:	nop
    2308:	ldp	x29, x30, [sp], #32
    230c:	ret
    2310:	stp	x29, x30, [sp, #-32]!
    2314:	mov	x29, sp
    2318:	str	x0, [sp, #24]
    231c:	ldr	x0, [sp, #24]
    2320:	cmp	x0, #0x0
    2324:	b.eq	233c <PySequence_Fast@plt+0x26c>  // b.none
    2328:	ldr	x2, [sp, #24]
    232c:	mov	w1, #0x21d                 	// #541
    2330:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    2334:	add	x0, x0, #0xa20
    2338:	bl	2298 <PySequence_Fast@plt+0x1c8>
    233c:	nop
    2340:	ldp	x29, x30, [sp], #32
    2344:	ret
    2348:	stp	x29, x30, [sp, #-32]!
    234c:	mov	x29, sp
    2350:	str	x0, [sp, #24]
    2354:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2358:	add	x0, x0, #0x8f0
    235c:	ldr	x0, [x0]
    2360:	cmp	x0, #0x0
    2364:	b.ne	23a4 <PySequence_Fast@plt+0x2d4>  // b.any
    2368:	mov	x1, #0x0                   	// #0
    236c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    2370:	add	x0, x0, #0xb18
    2374:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    2378:	mov	x1, x0
    237c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    2380:	add	x0, x0, #0x8f0
    2384:	str	x1, [x0]
    2388:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    238c:	add	x0, x0, #0x8f0
    2390:	ldr	x0, [x0]
    2394:	cmp	x0, #0x0
    2398:	b.ne	23a4 <PySequence_Fast@plt+0x2d4>  // b.any
    239c:	mov	x0, #0x0                   	// #0
    23a0:	b	23b8 <PySequence_Fast@plt+0x2e8>
    23a4:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    23a8:	add	x0, x0, #0x8f0
    23ac:	ldr	x0, [x0]
    23b0:	ldr	x1, [sp, #24]
    23b4:	bl	1e00 <PyUnicode_Join@plt>
    23b8:	ldp	x29, x30, [sp], #32
    23bc:	ret
    23c0:	sub	sp, sp, #0x30
    23c4:	str	w0, [sp, #28]
    23c8:	str	x1, [sp, #16]
    23cc:	str	x2, [sp, #8]
    23d0:	ldr	x0, [sp, #8]
    23d4:	add	x1, x0, #0x1
    23d8:	str	x1, [sp, #8]
    23dc:	mov	x1, x0
    23e0:	ldr	x0, [sp, #16]
    23e4:	add	x0, x0, x1
    23e8:	mov	w1, #0x5c                  	// #92
    23ec:	strb	w1, [x0]
    23f0:	ldr	w0, [sp, #28]
    23f4:	cmp	w0, #0x5c
    23f8:	b.eq	2484 <PySequence_Fast@plt+0x3b4>  // b.none
    23fc:	ldr	w0, [sp, #28]
    2400:	cmp	w0, #0x5c
    2404:	b.hi	2588 <PySequence_Fast@plt+0x4b8>  // b.pmore
    2408:	ldr	w0, [sp, #28]
    240c:	cmp	w0, #0x22
    2410:	b.eq	24ac <PySequence_Fast@plt+0x3dc>  // b.none
    2414:	ldr	w0, [sp, #28]
    2418:	cmp	w0, #0x22
    241c:	b.hi	2588 <PySequence_Fast@plt+0x4b8>  // b.pmore
    2420:	ldr	w0, [sp, #28]
    2424:	cmp	w0, #0xd
    2428:	b.eq	2540 <PySequence_Fast@plt+0x470>  // b.none
    242c:	ldr	w0, [sp, #28]
    2430:	cmp	w0, #0xd
    2434:	b.hi	2588 <PySequence_Fast@plt+0x4b8>  // b.pmore
    2438:	ldr	w0, [sp, #28]
    243c:	cmp	w0, #0xc
    2440:	b.eq	24f8 <PySequence_Fast@plt+0x428>  // b.none
    2444:	ldr	w0, [sp, #28]
    2448:	cmp	w0, #0xc
    244c:	b.hi	2588 <PySequence_Fast@plt+0x4b8>  // b.pmore
    2450:	ldr	w0, [sp, #28]
    2454:	cmp	w0, #0xa
    2458:	b.eq	251c <PySequence_Fast@plt+0x44c>  // b.none
    245c:	ldr	w0, [sp, #28]
    2460:	cmp	w0, #0xa
    2464:	b.hi	2588 <PySequence_Fast@plt+0x4b8>  // b.pmore
    2468:	ldr	w0, [sp, #28]
    246c:	cmp	w0, #0x8
    2470:	b.eq	24d4 <PySequence_Fast@plt+0x404>  // b.none
    2474:	ldr	w0, [sp, #28]
    2478:	cmp	w0, #0x9
    247c:	b.eq	2564 <PySequence_Fast@plt+0x494>  // b.none
    2480:	b	2588 <PySequence_Fast@plt+0x4b8>
    2484:	ldr	x0, [sp, #8]
    2488:	add	x1, x0, #0x1
    248c:	str	x1, [sp, #8]
    2490:	mov	x1, x0
    2494:	ldr	x0, [sp, #16]
    2498:	add	x0, x0, x1
    249c:	ldr	w1, [sp, #28]
    24a0:	and	w1, w1, #0xff
    24a4:	strb	w1, [x0]
    24a8:	b	2810 <PySequence_Fast@plt+0x740>
    24ac:	ldr	x0, [sp, #8]
    24b0:	add	x1, x0, #0x1
    24b4:	str	x1, [sp, #8]
    24b8:	mov	x1, x0
    24bc:	ldr	x0, [sp, #16]
    24c0:	add	x0, x0, x1
    24c4:	ldr	w1, [sp, #28]
    24c8:	and	w1, w1, #0xff
    24cc:	strb	w1, [x0]
    24d0:	b	2810 <PySequence_Fast@plt+0x740>
    24d4:	ldr	x0, [sp, #8]
    24d8:	add	x1, x0, #0x1
    24dc:	str	x1, [sp, #8]
    24e0:	mov	x1, x0
    24e4:	ldr	x0, [sp, #16]
    24e8:	add	x0, x0, x1
    24ec:	mov	w1, #0x62                  	// #98
    24f0:	strb	w1, [x0]
    24f4:	b	2810 <PySequence_Fast@plt+0x740>
    24f8:	ldr	x0, [sp, #8]
    24fc:	add	x1, x0, #0x1
    2500:	str	x1, [sp, #8]
    2504:	mov	x1, x0
    2508:	ldr	x0, [sp, #16]
    250c:	add	x0, x0, x1
    2510:	mov	w1, #0x66                  	// #102
    2514:	strb	w1, [x0]
    2518:	b	2810 <PySequence_Fast@plt+0x740>
    251c:	ldr	x0, [sp, #8]
    2520:	add	x1, x0, #0x1
    2524:	str	x1, [sp, #8]
    2528:	mov	x1, x0
    252c:	ldr	x0, [sp, #16]
    2530:	add	x0, x0, x1
    2534:	mov	w1, #0x6e                  	// #110
    2538:	strb	w1, [x0]
    253c:	b	2810 <PySequence_Fast@plt+0x740>
    2540:	ldr	x0, [sp, #8]
    2544:	add	x1, x0, #0x1
    2548:	str	x1, [sp, #8]
    254c:	mov	x1, x0
    2550:	ldr	x0, [sp, #16]
    2554:	add	x0, x0, x1
    2558:	mov	w1, #0x72                  	// #114
    255c:	strb	w1, [x0]
    2560:	b	2810 <PySequence_Fast@plt+0x740>
    2564:	ldr	x0, [sp, #8]
    2568:	add	x1, x0, #0x1
    256c:	str	x1, [sp, #8]
    2570:	mov	x1, x0
    2574:	ldr	x0, [sp, #16]
    2578:	add	x0, x0, x1
    257c:	mov	w1, #0x74                  	// #116
    2580:	strb	w1, [x0]
    2584:	b	2810 <PySequence_Fast@plt+0x740>
    2588:	ldr	w1, [sp, #28]
    258c:	mov	w0, #0xffff                	// #65535
    2590:	cmp	w1, w0
    2594:	b.ls	26f8 <PySequence_Fast@plt+0x628>  // b.plast
    2598:	ldr	w0, [sp, #28]
    259c:	lsr	w1, w0, #10
    25a0:	mov	w0, #0xd7c0                	// #55232
    25a4:	add	w0, w1, w0
    25a8:	str	w0, [sp, #44]
    25ac:	ldr	x0, [sp, #8]
    25b0:	add	x1, x0, #0x1
    25b4:	str	x1, [sp, #8]
    25b8:	mov	x1, x0
    25bc:	ldr	x0, [sp, #16]
    25c0:	add	x0, x0, x1
    25c4:	mov	w1, #0x75                  	// #117
    25c8:	strb	w1, [x0]
    25cc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    25d0:	ldr	x0, [x0, #4048]
    25d4:	ldr	x1, [x0]
    25d8:	ldr	w0, [sp, #44]
    25dc:	lsr	w0, w0, #12
    25e0:	mov	w0, w0
    25e4:	and	x0, x0, #0xf
    25e8:	add	x1, x1, x0
    25ec:	ldr	x0, [sp, #8]
    25f0:	add	x2, x0, #0x1
    25f4:	str	x2, [sp, #8]
    25f8:	mov	x2, x0
    25fc:	ldr	x0, [sp, #16]
    2600:	add	x0, x0, x2
    2604:	ldrb	w1, [x1]
    2608:	strb	w1, [x0]
    260c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2610:	ldr	x0, [x0, #4048]
    2614:	ldr	x1, [x0]
    2618:	ldr	w0, [sp, #44]
    261c:	lsr	w0, w0, #8
    2620:	mov	w0, w0
    2624:	and	x0, x0, #0xf
    2628:	add	x1, x1, x0
    262c:	ldr	x0, [sp, #8]
    2630:	add	x2, x0, #0x1
    2634:	str	x2, [sp, #8]
    2638:	mov	x2, x0
    263c:	ldr	x0, [sp, #16]
    2640:	add	x0, x0, x2
    2644:	ldrb	w1, [x1]
    2648:	strb	w1, [x0]
    264c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2650:	ldr	x0, [x0, #4048]
    2654:	ldr	x1, [x0]
    2658:	ldr	w0, [sp, #44]
    265c:	lsr	w0, w0, #4
    2660:	mov	w0, w0
    2664:	and	x0, x0, #0xf
    2668:	add	x1, x1, x0
    266c:	ldr	x0, [sp, #8]
    2670:	add	x2, x0, #0x1
    2674:	str	x2, [sp, #8]
    2678:	mov	x2, x0
    267c:	ldr	x0, [sp, #16]
    2680:	add	x0, x0, x2
    2684:	ldrb	w1, [x1]
    2688:	strb	w1, [x0]
    268c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2690:	ldr	x0, [x0, #4048]
    2694:	ldr	x1, [x0]
    2698:	ldr	w0, [sp, #44]
    269c:	and	x0, x0, #0xf
    26a0:	add	x1, x1, x0
    26a4:	ldr	x0, [sp, #8]
    26a8:	add	x2, x0, #0x1
    26ac:	str	x2, [sp, #8]
    26b0:	mov	x2, x0
    26b4:	ldr	x0, [sp, #16]
    26b8:	add	x0, x0, x2
    26bc:	ldrb	w1, [x1]
    26c0:	strb	w1, [x0]
    26c4:	ldr	w0, [sp, #28]
    26c8:	and	w1, w0, #0x3ff
    26cc:	mov	w0, #0xdc00                	// #56320
    26d0:	add	w0, w1, w0
    26d4:	str	w0, [sp, #28]
    26d8:	ldr	x0, [sp, #8]
    26dc:	add	x1, x0, #0x1
    26e0:	str	x1, [sp, #8]
    26e4:	mov	x1, x0
    26e8:	ldr	x0, [sp, #16]
    26ec:	add	x0, x0, x1
    26f0:	mov	w1, #0x5c                  	// #92
    26f4:	strb	w1, [x0]
    26f8:	ldr	x0, [sp, #8]
    26fc:	add	x1, x0, #0x1
    2700:	str	x1, [sp, #8]
    2704:	mov	x1, x0
    2708:	ldr	x0, [sp, #16]
    270c:	add	x0, x0, x1
    2710:	mov	w1, #0x75                  	// #117
    2714:	strb	w1, [x0]
    2718:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    271c:	ldr	x0, [x0, #4048]
    2720:	ldr	x1, [x0]
    2724:	ldr	w0, [sp, #28]
    2728:	lsr	w0, w0, #12
    272c:	mov	w0, w0
    2730:	and	x0, x0, #0xf
    2734:	add	x1, x1, x0
    2738:	ldr	x0, [sp, #8]
    273c:	add	x2, x0, #0x1
    2740:	str	x2, [sp, #8]
    2744:	mov	x2, x0
    2748:	ldr	x0, [sp, #16]
    274c:	add	x0, x0, x2
    2750:	ldrb	w1, [x1]
    2754:	strb	w1, [x0]
    2758:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    275c:	ldr	x0, [x0, #4048]
    2760:	ldr	x1, [x0]
    2764:	ldr	w0, [sp, #28]
    2768:	lsr	w0, w0, #8
    276c:	mov	w0, w0
    2770:	and	x0, x0, #0xf
    2774:	add	x1, x1, x0
    2778:	ldr	x0, [sp, #8]
    277c:	add	x2, x0, #0x1
    2780:	str	x2, [sp, #8]
    2784:	mov	x2, x0
    2788:	ldr	x0, [sp, #16]
    278c:	add	x0, x0, x2
    2790:	ldrb	w1, [x1]
    2794:	strb	w1, [x0]
    2798:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    279c:	ldr	x0, [x0, #4048]
    27a0:	ldr	x1, [x0]
    27a4:	ldr	w0, [sp, #28]
    27a8:	lsr	w0, w0, #4
    27ac:	mov	w0, w0
    27b0:	and	x0, x0, #0xf
    27b4:	add	x1, x1, x0
    27b8:	ldr	x0, [sp, #8]
    27bc:	add	x2, x0, #0x1
    27c0:	str	x2, [sp, #8]
    27c4:	mov	x2, x0
    27c8:	ldr	x0, [sp, #16]
    27cc:	add	x0, x0, x2
    27d0:	ldrb	w1, [x1]
    27d4:	strb	w1, [x0]
    27d8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    27dc:	ldr	x0, [x0, #4048]
    27e0:	ldr	x1, [x0]
    27e4:	ldr	w0, [sp, #28]
    27e8:	and	x0, x0, #0xf
    27ec:	add	x1, x1, x0
    27f0:	ldr	x0, [sp, #8]
    27f4:	add	x2, x0, #0x1
    27f8:	str	x2, [sp, #8]
    27fc:	mov	x2, x0
    2800:	ldr	x0, [sp, #16]
    2804:	add	x0, x0, x2
    2808:	ldrb	w1, [x1]
    280c:	strb	w1, [x0]
    2810:	ldr	x0, [sp, #8]
    2814:	add	sp, sp, #0x30
    2818:	ret
    281c:	stp	x29, x30, [sp, #-112]!
    2820:	mov	x29, sp
    2824:	str	x0, [sp, #24]
    2828:	ldr	x0, [sp, #24]
    282c:	ldrb	w0, [x0, #32]
    2830:	and	w0, w0, #0xffffff80
    2834:	and	w0, w0, #0xff
    2838:	cmp	w0, #0x0
    283c:	b.ne	2858 <PySequence_Fast@plt+0x788>  // b.any
    2840:	ldr	x0, [sp, #24]
    2844:	bl	1db0 <_PyUnicode_Ready@plt>
    2848:	cmn	w0, #0x1
    284c:	b.ne	2858 <PySequence_Fast@plt+0x788>  // b.any
    2850:	mov	x0, #0x0                   	// #0
    2854:	b	2c10 <PySequence_Fast@plt+0xb40>
    2858:	ldr	x0, [sp, #24]
    285c:	ldr	x0, [x0, #16]
    2860:	str	x0, [sp, #72]
    2864:	ldr	x0, [sp, #24]
    2868:	ldrb	w0, [x0, #32]
    286c:	and	w0, w0, #0x20
    2870:	and	w0, w0, #0xff
    2874:	cmp	w0, #0x0
    2878:	b.eq	28ac <PySequence_Fast@plt+0x7dc>  // b.none
    287c:	ldr	x0, [sp, #24]
    2880:	ldrb	w0, [x0, #32]
    2884:	and	w0, w0, #0x40
    2888:	and	w0, w0, #0xff
    288c:	cmp	w0, #0x0
    2890:	b.eq	28a0 <PySequence_Fast@plt+0x7d0>  // b.none
    2894:	ldr	x0, [sp, #24]
    2898:	add	x0, x0, #0x30
    289c:	b	28b4 <PySequence_Fast@plt+0x7e4>
    28a0:	ldr	x0, [sp, #24]
    28a4:	add	x0, x0, #0x48
    28a8:	b	28b4 <PySequence_Fast@plt+0x7e4>
    28ac:	ldr	x0, [sp, #24]
    28b0:	ldr	x0, [x0, #72]
    28b4:	str	x0, [sp, #64]
    28b8:	ldr	x0, [sp, #24]
    28bc:	ldrb	w0, [x0, #32]
    28c0:	ubfx	x0, x0, #2, #3
    28c4:	and	w0, w0, #0xff
    28c8:	str	w0, [sp, #60]
    28cc:	str	xzr, [sp, #104]
    28d0:	mov	x0, #0x2                   	// #2
    28d4:	str	x0, [sp, #96]
    28d8:	b	2a54 <PySequence_Fast@plt+0x984>
    28dc:	ldr	w0, [sp, #60]
    28e0:	cmp	w0, #0x1
    28e4:	b.ne	28fc <PySequence_Fast@plt+0x82c>  // b.any
    28e8:	ldr	x0, [sp, #104]
    28ec:	ldr	x1, [sp, #64]
    28f0:	add	x0, x1, x0
    28f4:	ldrb	w0, [x0]
    28f8:	b	2934 <PySequence_Fast@plt+0x864>
    28fc:	ldr	w0, [sp, #60]
    2900:	cmp	w0, #0x2
    2904:	b.ne	2920 <PySequence_Fast@plt+0x850>  // b.any
    2908:	ldr	x0, [sp, #104]
    290c:	lsl	x0, x0, #1
    2910:	ldr	x1, [sp, #64]
    2914:	add	x0, x1, x0
    2918:	ldrh	w0, [x0]
    291c:	b	2934 <PySequence_Fast@plt+0x864>
    2920:	ldr	x0, [sp, #104]
    2924:	lsl	x0, x0, #2
    2928:	ldr	x1, [sp, #64]
    292c:	add	x0, x1, x0
    2930:	ldr	w0, [x0]
    2934:	str	w0, [sp, #32]
    2938:	ldr	w0, [sp, #32]
    293c:	cmp	w0, #0x1f
    2940:	b.ls	2974 <PySequence_Fast@plt+0x8a4>  // b.plast
    2944:	ldr	w0, [sp, #32]
    2948:	cmp	w0, #0x7e
    294c:	b.hi	2974 <PySequence_Fast@plt+0x8a4>  // b.pmore
    2950:	ldr	w0, [sp, #32]
    2954:	cmp	w0, #0x5c
    2958:	b.eq	2974 <PySequence_Fast@plt+0x8a4>  // b.none
    295c:	ldr	w0, [sp, #32]
    2960:	cmp	w0, #0x22
    2964:	b.eq	2974 <PySequence_Fast@plt+0x8a4>  // b.none
    2968:	mov	x0, #0x1                   	// #1
    296c:	str	x0, [sp, #80]
    2970:	b	29fc <PySequence_Fast@plt+0x92c>
    2974:	ldr	w0, [sp, #32]
    2978:	cmp	w0, #0x5c
    297c:	b.eq	29d0 <PySequence_Fast@plt+0x900>  // b.none
    2980:	ldr	w0, [sp, #32]
    2984:	cmp	w0, #0x5c
    2988:	b.hi	29dc <PySequence_Fast@plt+0x90c>  // b.pmore
    298c:	ldr	w0, [sp, #32]
    2990:	cmp	w0, #0x22
    2994:	b.eq	29d0 <PySequence_Fast@plt+0x900>  // b.none
    2998:	ldr	w0, [sp, #32]
    299c:	cmp	w0, #0x22
    29a0:	b.hi	29dc <PySequence_Fast@plt+0x90c>  // b.pmore
    29a4:	ldr	w0, [sp, #32]
    29a8:	cmp	w0, #0xa
    29ac:	b.hi	29c0 <PySequence_Fast@plt+0x8f0>  // b.pmore
    29b0:	ldr	w0, [sp, #32]
    29b4:	cmp	w0, #0x8
    29b8:	b.cs	29d0 <PySequence_Fast@plt+0x900>  // b.hs, b.nlast
    29bc:	b	29dc <PySequence_Fast@plt+0x90c>
    29c0:	ldr	w0, [sp, #32]
    29c4:	sub	w0, w0, #0xc
    29c8:	cmp	w0, #0x1
    29cc:	b.hi	29dc <PySequence_Fast@plt+0x90c>  // b.pmore
    29d0:	mov	x0, #0x2                   	// #2
    29d4:	str	x0, [sp, #80]
    29d8:	b	29fc <PySequence_Fast@plt+0x92c>
    29dc:	ldr	w1, [sp, #32]
    29e0:	mov	w0, #0xffff                	// #65535
    29e4:	cmp	w1, w0
    29e8:	b.ls	29f4 <PySequence_Fast@plt+0x924>  // b.plast
    29ec:	mov	x0, #0xc                   	// #12
    29f0:	b	29f8 <PySequence_Fast@plt+0x928>
    29f4:	mov	x0, #0x6                   	// #6
    29f8:	str	x0, [sp, #80]
    29fc:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    2a00:	ldr	x0, [sp, #80]
    2a04:	sub	x0, x1, x0
    2a08:	ldr	x1, [sp, #96]
    2a0c:	cmp	x1, x0
    2a10:	b.le	2a38 <PySequence_Fast@plt+0x968>
    2a14:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2a18:	ldr	x0, [x0, #4008]
    2a1c:	ldr	x2, [x0]
    2a20:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    2a24:	add	x1, x0, #0xb20
    2a28:	mov	x0, x2
    2a2c:	bl	1e60 <PyErr_SetString@plt>
    2a30:	mov	x0, #0x0                   	// #0
    2a34:	b	2c10 <PySequence_Fast@plt+0xb40>
    2a38:	ldr	x1, [sp, #96]
    2a3c:	ldr	x0, [sp, #80]
    2a40:	add	x0, x1, x0
    2a44:	str	x0, [sp, #96]
    2a48:	ldr	x0, [sp, #104]
    2a4c:	add	x0, x0, #0x1
    2a50:	str	x0, [sp, #104]
    2a54:	ldr	x1, [sp, #104]
    2a58:	ldr	x0, [sp, #72]
    2a5c:	cmp	x1, x0
    2a60:	b.lt	28dc <PySequence_Fast@plt+0x80c>  // b.tstop
    2a64:	mov	w1, #0x7f                  	// #127
    2a68:	ldr	x0, [sp, #96]
    2a6c:	bl	2080 <PyUnicode_New@plt>
    2a70:	str	x0, [sp, #48]
    2a74:	ldr	x0, [sp, #48]
    2a78:	cmp	x0, #0x0
    2a7c:	b.ne	2a88 <PySequence_Fast@plt+0x9b8>  // b.any
    2a80:	mov	x0, #0x0                   	// #0
    2a84:	b	2c10 <PySequence_Fast@plt+0xb40>
    2a88:	ldr	x0, [sp, #48]
    2a8c:	ldrb	w0, [x0, #32]
    2a90:	and	w0, w0, #0x20
    2a94:	and	w0, w0, #0xff
    2a98:	cmp	w0, #0x0
    2a9c:	b.eq	2ad0 <PySequence_Fast@plt+0xa00>  // b.none
    2aa0:	ldr	x0, [sp, #48]
    2aa4:	ldrb	w0, [x0, #32]
    2aa8:	and	w0, w0, #0x40
    2aac:	and	w0, w0, #0xff
    2ab0:	cmp	w0, #0x0
    2ab4:	b.eq	2ac4 <PySequence_Fast@plt+0x9f4>  // b.none
    2ab8:	ldr	x0, [sp, #48]
    2abc:	add	x0, x0, #0x30
    2ac0:	b	2ad8 <PySequence_Fast@plt+0xa08>
    2ac4:	ldr	x0, [sp, #48]
    2ac8:	add	x0, x0, #0x48
    2acc:	b	2ad8 <PySequence_Fast@plt+0xa08>
    2ad0:	ldr	x0, [sp, #48]
    2ad4:	ldr	x0, [x0, #72]
    2ad8:	str	x0, [sp, #40]
    2adc:	str	xzr, [sp, #88]
    2ae0:	ldr	x0, [sp, #88]
    2ae4:	add	x1, x0, #0x1
    2ae8:	str	x1, [sp, #88]
    2aec:	mov	x1, x0
    2af0:	ldr	x0, [sp, #40]
    2af4:	add	x0, x0, x1
    2af8:	mov	w1, #0x22                  	// #34
    2afc:	strb	w1, [x0]
    2b00:	str	xzr, [sp, #104]
    2b04:	b	2bdc <PySequence_Fast@plt+0xb0c>
    2b08:	ldr	w0, [sp, #60]
    2b0c:	cmp	w0, #0x1
    2b10:	b.ne	2b28 <PySequence_Fast@plt+0xa58>  // b.any
    2b14:	ldr	x0, [sp, #104]
    2b18:	ldr	x1, [sp, #64]
    2b1c:	add	x0, x1, x0
    2b20:	ldrb	w0, [x0]
    2b24:	b	2b60 <PySequence_Fast@plt+0xa90>
    2b28:	ldr	w0, [sp, #60]
    2b2c:	cmp	w0, #0x2
    2b30:	b.ne	2b4c <PySequence_Fast@plt+0xa7c>  // b.any
    2b34:	ldr	x0, [sp, #104]
    2b38:	lsl	x0, x0, #1
    2b3c:	ldr	x1, [sp, #64]
    2b40:	add	x0, x1, x0
    2b44:	ldrh	w0, [x0]
    2b48:	b	2b60 <PySequence_Fast@plt+0xa90>
    2b4c:	ldr	x0, [sp, #104]
    2b50:	lsl	x0, x0, #2
    2b54:	ldr	x1, [sp, #64]
    2b58:	add	x0, x1, x0
    2b5c:	ldr	w0, [x0]
    2b60:	str	w0, [sp, #36]
    2b64:	ldr	w0, [sp, #36]
    2b68:	cmp	w0, #0x1f
    2b6c:	b.ls	2bbc <PySequence_Fast@plt+0xaec>  // b.plast
    2b70:	ldr	w0, [sp, #36]
    2b74:	cmp	w0, #0x7e
    2b78:	b.hi	2bbc <PySequence_Fast@plt+0xaec>  // b.pmore
    2b7c:	ldr	w0, [sp, #36]
    2b80:	cmp	w0, #0x5c
    2b84:	b.eq	2bbc <PySequence_Fast@plt+0xaec>  // b.none
    2b88:	ldr	w0, [sp, #36]
    2b8c:	cmp	w0, #0x22
    2b90:	b.eq	2bbc <PySequence_Fast@plt+0xaec>  // b.none
    2b94:	ldr	x0, [sp, #88]
    2b98:	add	x1, x0, #0x1
    2b9c:	str	x1, [sp, #88]
    2ba0:	mov	x1, x0
    2ba4:	ldr	x0, [sp, #40]
    2ba8:	add	x0, x0, x1
    2bac:	ldr	w1, [sp, #36]
    2bb0:	and	w1, w1, #0xff
    2bb4:	strb	w1, [x0]
    2bb8:	b	2bd0 <PySequence_Fast@plt+0xb00>
    2bbc:	ldr	x2, [sp, #88]
    2bc0:	ldr	x1, [sp, #40]
    2bc4:	ldr	w0, [sp, #36]
    2bc8:	bl	23c0 <PySequence_Fast@plt+0x2f0>
    2bcc:	str	x0, [sp, #88]
    2bd0:	ldr	x0, [sp, #104]
    2bd4:	add	x0, x0, #0x1
    2bd8:	str	x0, [sp, #104]
    2bdc:	ldr	x1, [sp, #104]
    2be0:	ldr	x0, [sp, #72]
    2be4:	cmp	x1, x0
    2be8:	b.lt	2b08 <PySequence_Fast@plt+0xa38>  // b.tstop
    2bec:	ldr	x0, [sp, #88]
    2bf0:	add	x1, x0, #0x1
    2bf4:	str	x1, [sp, #88]
    2bf8:	mov	x1, x0
    2bfc:	ldr	x0, [sp, #40]
    2c00:	add	x0, x0, x1
    2c04:	mov	w1, #0x22                  	// #34
    2c08:	strb	w1, [x0]
    2c0c:	ldr	x0, [sp, #48]
    2c10:	ldp	x29, x30, [sp], #112
    2c14:	ret
    2c18:	stp	x29, x30, [sp, #-160]!
    2c1c:	mov	x29, sp
    2c20:	str	x0, [sp, #24]
    2c24:	ldr	x0, [sp, #24]
    2c28:	ldrb	w0, [x0, #32]
    2c2c:	and	w0, w0, #0xffffff80
    2c30:	and	w0, w0, #0xff
    2c34:	cmp	w0, #0x0
    2c38:	b.ne	2c54 <PySequence_Fast@plt+0xb84>  // b.any
    2c3c:	ldr	x0, [sp, #24]
    2c40:	bl	1db0 <_PyUnicode_Ready@plt>
    2c44:	cmn	w0, #0x1
    2c48:	b.ne	2c54 <PySequence_Fast@plt+0xb84>  // b.any
    2c4c:	mov	x0, #0x0                   	// #0
    2c50:	b	3d20 <PySequence_Fast@plt+0x1c50>
    2c54:	ldr	x0, [sp, #24]
    2c58:	ldrb	w0, [x0, #32]
    2c5c:	and	w0, w0, #0x40
    2c60:	and	w0, w0, #0xff
    2c64:	cmp	w0, #0x0
    2c68:	b.ne	2cb4 <PySequence_Fast@plt+0xbe4>  // b.any
    2c6c:	ldr	x0, [sp, #24]
    2c70:	ldrb	w0, [x0, #32]
    2c74:	and	w0, w0, #0x1c
    2c78:	and	w0, w0, #0xff
    2c7c:	cmp	w0, #0x4
    2c80:	b.eq	2cac <PySequence_Fast@plt+0xbdc>  // b.none
    2c84:	ldr	x0, [sp, #24]
    2c88:	ldrb	w0, [x0, #32]
    2c8c:	and	w0, w0, #0x1c
    2c90:	and	w0, w0, #0xff
    2c94:	cmp	w0, #0x8
    2c98:	b.ne	2ca4 <PySequence_Fast@plt+0xbd4>  // b.any
    2c9c:	mov	w0, #0xffff                	// #65535
    2ca0:	b	2cb8 <PySequence_Fast@plt+0xbe8>
    2ca4:	mov	w0, #0x10ffff              	// #1114111
    2ca8:	b	2cb8 <PySequence_Fast@plt+0xbe8>
    2cac:	mov	w0, #0xff                  	// #255
    2cb0:	b	2cb8 <PySequence_Fast@plt+0xbe8>
    2cb4:	mov	w0, #0x7f                  	// #127
    2cb8:	str	w0, [sp, #124]
    2cbc:	ldr	x0, [sp, #24]
    2cc0:	ldr	x0, [x0, #16]
    2cc4:	str	x0, [sp, #112]
    2cc8:	ldr	x0, [sp, #24]
    2ccc:	ldrb	w0, [x0, #32]
    2cd0:	and	w0, w0, #0x20
    2cd4:	and	w0, w0, #0xff
    2cd8:	cmp	w0, #0x0
    2cdc:	b.eq	2d10 <PySequence_Fast@plt+0xc40>  // b.none
    2ce0:	ldr	x0, [sp, #24]
    2ce4:	ldrb	w0, [x0, #32]
    2ce8:	and	w0, w0, #0x40
    2cec:	and	w0, w0, #0xff
    2cf0:	cmp	w0, #0x0
    2cf4:	b.eq	2d04 <PySequence_Fast@plt+0xc34>  // b.none
    2cf8:	ldr	x0, [sp, #24]
    2cfc:	add	x0, x0, #0x30
    2d00:	b	2d18 <PySequence_Fast@plt+0xc48>
    2d04:	ldr	x0, [sp, #24]
    2d08:	add	x0, x0, #0x48
    2d0c:	b	2d18 <PySequence_Fast@plt+0xc48>
    2d10:	ldr	x0, [sp, #24]
    2d14:	ldr	x0, [x0, #72]
    2d18:	str	x0, [sp, #104]
    2d1c:	ldr	x0, [sp, #24]
    2d20:	ldrb	w0, [x0, #32]
    2d24:	ubfx	x0, x0, #2, #3
    2d28:	and	w0, w0, #0xff
    2d2c:	str	w0, [sp, #100]
    2d30:	str	xzr, [sp, #152]
    2d34:	mov	x0, #0x2                   	// #2
    2d38:	str	x0, [sp, #144]
    2d3c:	b	2e7c <PySequence_Fast@plt+0xdac>
    2d40:	ldr	w0, [sp, #100]
    2d44:	cmp	w0, #0x1
    2d48:	b.ne	2d60 <PySequence_Fast@plt+0xc90>  // b.any
    2d4c:	ldr	x0, [sp, #152]
    2d50:	ldr	x1, [sp, #104]
    2d54:	add	x0, x1, x0
    2d58:	ldrb	w0, [x0]
    2d5c:	b	2d98 <PySequence_Fast@plt+0xcc8>
    2d60:	ldr	w0, [sp, #100]
    2d64:	cmp	w0, #0x2
    2d68:	b.ne	2d84 <PySequence_Fast@plt+0xcb4>  // b.any
    2d6c:	ldr	x0, [sp, #152]
    2d70:	lsl	x0, x0, #1
    2d74:	ldr	x1, [sp, #104]
    2d78:	add	x0, x1, x0
    2d7c:	ldrh	w0, [x0]
    2d80:	b	2d98 <PySequence_Fast@plt+0xcc8>
    2d84:	ldr	x0, [sp, #152]
    2d88:	lsl	x0, x0, #2
    2d8c:	ldr	x1, [sp, #104]
    2d90:	add	x0, x1, x0
    2d94:	ldr	w0, [x0]
    2d98:	str	w0, [sp, #40]
    2d9c:	ldr	w0, [sp, #40]
    2da0:	cmp	w0, #0x5c
    2da4:	b.eq	2df8 <PySequence_Fast@plt+0xd28>  // b.none
    2da8:	ldr	w0, [sp, #40]
    2dac:	cmp	w0, #0x5c
    2db0:	b.hi	2e04 <PySequence_Fast@plt+0xd34>  // b.pmore
    2db4:	ldr	w0, [sp, #40]
    2db8:	cmp	w0, #0x22
    2dbc:	b.eq	2df8 <PySequence_Fast@plt+0xd28>  // b.none
    2dc0:	ldr	w0, [sp, #40]
    2dc4:	cmp	w0, #0x22
    2dc8:	b.hi	2e04 <PySequence_Fast@plt+0xd34>  // b.pmore
    2dcc:	ldr	w0, [sp, #40]
    2dd0:	cmp	w0, #0xa
    2dd4:	b.hi	2de8 <PySequence_Fast@plt+0xd18>  // b.pmore
    2dd8:	ldr	w0, [sp, #40]
    2ddc:	cmp	w0, #0x8
    2de0:	b.cs	2df8 <PySequence_Fast@plt+0xd28>  // b.hs, b.nlast
    2de4:	b	2e04 <PySequence_Fast@plt+0xd34>
    2de8:	ldr	w0, [sp, #40]
    2dec:	sub	w0, w0, #0xc
    2df0:	cmp	w0, #0x1
    2df4:	b.hi	2e04 <PySequence_Fast@plt+0xd34>  // b.pmore
    2df8:	mov	x0, #0x2                   	// #2
    2dfc:	str	x0, [sp, #128]
    2e00:	b	2e24 <PySequence_Fast@plt+0xd54>
    2e04:	ldr	w0, [sp, #40]
    2e08:	cmp	w0, #0x1f
    2e0c:	b.hi	2e1c <PySequence_Fast@plt+0xd4c>  // b.pmore
    2e10:	mov	x0, #0x6                   	// #6
    2e14:	str	x0, [sp, #128]
    2e18:	b	2e24 <PySequence_Fast@plt+0xd54>
    2e1c:	mov	x0, #0x1                   	// #1
    2e20:	str	x0, [sp, #128]
    2e24:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    2e28:	ldr	x0, [sp, #128]
    2e2c:	sub	x0, x1, x0
    2e30:	ldr	x1, [sp, #144]
    2e34:	cmp	x1, x0
    2e38:	b.le	2e60 <PySequence_Fast@plt+0xd90>
    2e3c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    2e40:	ldr	x0, [x0, #4008]
    2e44:	ldr	x2, [x0]
    2e48:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    2e4c:	add	x1, x0, #0xb20
    2e50:	mov	x0, x2
    2e54:	bl	1e60 <PyErr_SetString@plt>
    2e58:	mov	x0, #0x0                   	// #0
    2e5c:	b	3d20 <PySequence_Fast@plt+0x1c50>
    2e60:	ldr	x1, [sp, #144]
    2e64:	ldr	x0, [sp, #128]
    2e68:	add	x0, x1, x0
    2e6c:	str	x0, [sp, #144]
    2e70:	ldr	x0, [sp, #152]
    2e74:	add	x0, x0, #0x1
    2e78:	str	x0, [sp, #152]
    2e7c:	ldr	x1, [sp, #152]
    2e80:	ldr	x0, [sp, #112]
    2e84:	cmp	x1, x0
    2e88:	b.lt	2d40 <PySequence_Fast@plt+0xc70>  // b.tstop
    2e8c:	ldr	w1, [sp, #124]
    2e90:	ldr	x0, [sp, #144]
    2e94:	bl	2080 <PyUnicode_New@plt>
    2e98:	str	x0, [sp, #88]
    2e9c:	ldr	x0, [sp, #88]
    2ea0:	cmp	x0, #0x0
    2ea4:	b.ne	2eb0 <PySequence_Fast@plt+0xde0>  // b.any
    2ea8:	mov	x0, #0x0                   	// #0
    2eac:	b	3d20 <PySequence_Fast@plt+0x1c50>
    2eb0:	ldr	x0, [sp, #88]
    2eb4:	ldrb	w0, [x0, #32]
    2eb8:	ubfx	x0, x0, #2, #3
    2ebc:	and	w0, w0, #0xff
    2ec0:	str	w0, [sp, #100]
    2ec4:	ldr	w0, [sp, #100]
    2ec8:	cmp	w0, #0x1
    2ecc:	b.ne	3390 <PySequence_Fast@plt+0x12c0>  // b.any
    2ed0:	ldr	x0, [sp, #88]
    2ed4:	ldrb	w0, [x0, #32]
    2ed8:	and	w0, w0, #0x20
    2edc:	and	w0, w0, #0xff
    2ee0:	cmp	w0, #0x0
    2ee4:	b.eq	2f18 <PySequence_Fast@plt+0xe48>  // b.none
    2ee8:	ldr	x0, [sp, #88]
    2eec:	ldrb	w0, [x0, #32]
    2ef0:	and	w0, w0, #0x40
    2ef4:	and	w0, w0, #0xff
    2ef8:	cmp	w0, #0x0
    2efc:	b.eq	2f0c <PySequence_Fast@plt+0xe3c>  // b.none
    2f00:	ldr	x0, [sp, #88]
    2f04:	add	x0, x0, #0x30
    2f08:	b	2f20 <PySequence_Fast@plt+0xe50>
    2f0c:	ldr	x0, [sp, #88]
    2f10:	add	x0, x0, #0x48
    2f14:	b	2f20 <PySequence_Fast@plt+0xe50>
    2f18:	ldr	x0, [sp, #88]
    2f1c:	ldr	x0, [x0, #72]
    2f20:	str	x0, [sp, #48]
    2f24:	str	xzr, [sp, #136]
    2f28:	ldr	x0, [sp, #136]
    2f2c:	add	x1, x0, #0x1
    2f30:	str	x1, [sp, #136]
    2f34:	mov	x1, x0
    2f38:	ldr	x0, [sp, #48]
    2f3c:	add	x0, x0, x1
    2f40:	mov	w1, #0x22                  	// #34
    2f44:	strb	w1, [x0]
    2f48:	str	xzr, [sp, #152]
    2f4c:	b	335c <PySequence_Fast@plt+0x128c>
    2f50:	ldr	w0, [sp, #100]
    2f54:	cmp	w0, #0x1
    2f58:	b.ne	2f70 <PySequence_Fast@plt+0xea0>  // b.any
    2f5c:	ldr	x0, [sp, #152]
    2f60:	ldr	x1, [sp, #104]
    2f64:	add	x0, x1, x0
    2f68:	ldrb	w0, [x0]
    2f6c:	b	2fa8 <PySequence_Fast@plt+0xed8>
    2f70:	ldr	w0, [sp, #100]
    2f74:	cmp	w0, #0x2
    2f78:	b.ne	2f94 <PySequence_Fast@plt+0xec4>  // b.any
    2f7c:	ldr	x0, [sp, #152]
    2f80:	lsl	x0, x0, #1
    2f84:	ldr	x1, [sp, #104]
    2f88:	add	x0, x1, x0
    2f8c:	ldrh	w0, [x0]
    2f90:	b	2fa8 <PySequence_Fast@plt+0xed8>
    2f94:	ldr	x0, [sp, #152]
    2f98:	lsl	x0, x0, #2
    2f9c:	ldr	x1, [sp, #104]
    2fa0:	add	x0, x1, x0
    2fa4:	ldr	w0, [x0]
    2fa8:	str	w0, [sp, #44]
    2fac:	ldr	w0, [sp, #44]
    2fb0:	cmp	w0, #0x5c
    2fb4:	b.eq	3040 <PySequence_Fast@plt+0xf70>  // b.none
    2fb8:	ldr	w0, [sp, #44]
    2fbc:	cmp	w0, #0x5c
    2fc0:	b.hi	3224 <PySequence_Fast@plt+0x1154>  // b.pmore
    2fc4:	ldr	w0, [sp, #44]
    2fc8:	cmp	w0, #0x22
    2fcc:	b.eq	3088 <PySequence_Fast@plt+0xfb8>  // b.none
    2fd0:	ldr	w0, [sp, #44]
    2fd4:	cmp	w0, #0x22
    2fd8:	b.hi	3224 <PySequence_Fast@plt+0x1154>  // b.pmore
    2fdc:	ldr	w0, [sp, #44]
    2fe0:	cmp	w0, #0xd
    2fe4:	b.eq	319c <PySequence_Fast@plt+0x10cc>  // b.none
    2fe8:	ldr	w0, [sp, #44]
    2fec:	cmp	w0, #0xd
    2ff0:	b.hi	3224 <PySequence_Fast@plt+0x1154>  // b.pmore
    2ff4:	ldr	w0, [sp, #44]
    2ff8:	cmp	w0, #0xc
    2ffc:	b.eq	3114 <PySequence_Fast@plt+0x1044>  // b.none
    3000:	ldr	w0, [sp, #44]
    3004:	cmp	w0, #0xc
    3008:	b.hi	3224 <PySequence_Fast@plt+0x1154>  // b.pmore
    300c:	ldr	w0, [sp, #44]
    3010:	cmp	w0, #0xa
    3014:	b.eq	3158 <PySequence_Fast@plt+0x1088>  // b.none
    3018:	ldr	w0, [sp, #44]
    301c:	cmp	w0, #0xa
    3020:	b.hi	3224 <PySequence_Fast@plt+0x1154>  // b.pmore
    3024:	ldr	w0, [sp, #44]
    3028:	cmp	w0, #0x8
    302c:	b.eq	30d0 <PySequence_Fast@plt+0x1000>  // b.none
    3030:	ldr	w0, [sp, #44]
    3034:	cmp	w0, #0x9
    3038:	b.eq	31e0 <PySequence_Fast@plt+0x1110>  // b.none
    303c:	b	3224 <PySequence_Fast@plt+0x1154>
    3040:	ldr	x0, [sp, #136]
    3044:	add	x1, x0, #0x1
    3048:	str	x1, [sp, #136]
    304c:	mov	x1, x0
    3050:	ldr	x0, [sp, #48]
    3054:	add	x0, x0, x1
    3058:	mov	w1, #0x5c                  	// #92
    305c:	strb	w1, [x0]
    3060:	ldr	x0, [sp, #136]
    3064:	add	x1, x0, #0x1
    3068:	str	x1, [sp, #136]
    306c:	mov	x1, x0
    3070:	ldr	x0, [sp, #48]
    3074:	add	x0, x0, x1
    3078:	ldr	w1, [sp, #44]
    307c:	and	w1, w1, #0xff
    3080:	strb	w1, [x0]
    3084:	b	3350 <PySequence_Fast@plt+0x1280>
    3088:	ldr	x0, [sp, #136]
    308c:	add	x1, x0, #0x1
    3090:	str	x1, [sp, #136]
    3094:	mov	x1, x0
    3098:	ldr	x0, [sp, #48]
    309c:	add	x0, x0, x1
    30a0:	mov	w1, #0x5c                  	// #92
    30a4:	strb	w1, [x0]
    30a8:	ldr	x0, [sp, #136]
    30ac:	add	x1, x0, #0x1
    30b0:	str	x1, [sp, #136]
    30b4:	mov	x1, x0
    30b8:	ldr	x0, [sp, #48]
    30bc:	add	x0, x0, x1
    30c0:	ldr	w1, [sp, #44]
    30c4:	and	w1, w1, #0xff
    30c8:	strb	w1, [x0]
    30cc:	b	3350 <PySequence_Fast@plt+0x1280>
    30d0:	ldr	x0, [sp, #136]
    30d4:	add	x1, x0, #0x1
    30d8:	str	x1, [sp, #136]
    30dc:	mov	x1, x0
    30e0:	ldr	x0, [sp, #48]
    30e4:	add	x0, x0, x1
    30e8:	mov	w1, #0x5c                  	// #92
    30ec:	strb	w1, [x0]
    30f0:	ldr	x0, [sp, #136]
    30f4:	add	x1, x0, #0x1
    30f8:	str	x1, [sp, #136]
    30fc:	mov	x1, x0
    3100:	ldr	x0, [sp, #48]
    3104:	add	x0, x0, x1
    3108:	mov	w1, #0x62                  	// #98
    310c:	strb	w1, [x0]
    3110:	b	3350 <PySequence_Fast@plt+0x1280>
    3114:	ldr	x0, [sp, #136]
    3118:	add	x1, x0, #0x1
    311c:	str	x1, [sp, #136]
    3120:	mov	x1, x0
    3124:	ldr	x0, [sp, #48]
    3128:	add	x0, x0, x1
    312c:	mov	w1, #0x5c                  	// #92
    3130:	strb	w1, [x0]
    3134:	ldr	x0, [sp, #136]
    3138:	add	x1, x0, #0x1
    313c:	str	x1, [sp, #136]
    3140:	mov	x1, x0
    3144:	ldr	x0, [sp, #48]
    3148:	add	x0, x0, x1
    314c:	mov	w1, #0x66                  	// #102
    3150:	strb	w1, [x0]
    3154:	b	3350 <PySequence_Fast@plt+0x1280>
    3158:	ldr	x0, [sp, #136]
    315c:	add	x1, x0, #0x1
    3160:	str	x1, [sp, #136]
    3164:	mov	x1, x0
    3168:	ldr	x0, [sp, #48]
    316c:	add	x0, x0, x1
    3170:	mov	w1, #0x5c                  	// #92
    3174:	strb	w1, [x0]
    3178:	ldr	x0, [sp, #136]
    317c:	add	x1, x0, #0x1
    3180:	str	x1, [sp, #136]
    3184:	mov	x1, x0
    3188:	ldr	x0, [sp, #48]
    318c:	add	x0, x0, x1
    3190:	mov	w1, #0x6e                  	// #110
    3194:	strb	w1, [x0]
    3198:	b	3350 <PySequence_Fast@plt+0x1280>
    319c:	ldr	x0, [sp, #136]
    31a0:	add	x1, x0, #0x1
    31a4:	str	x1, [sp, #136]
    31a8:	mov	x1, x0
    31ac:	ldr	x0, [sp, #48]
    31b0:	add	x0, x0, x1
    31b4:	mov	w1, #0x5c                  	// #92
    31b8:	strb	w1, [x0]
    31bc:	ldr	x0, [sp, #136]
    31c0:	add	x1, x0, #0x1
    31c4:	str	x1, [sp, #136]
    31c8:	mov	x1, x0
    31cc:	ldr	x0, [sp, #48]
    31d0:	add	x0, x0, x1
    31d4:	mov	w1, #0x72                  	// #114
    31d8:	strb	w1, [x0]
    31dc:	b	3350 <PySequence_Fast@plt+0x1280>
    31e0:	ldr	x0, [sp, #136]
    31e4:	add	x1, x0, #0x1
    31e8:	str	x1, [sp, #136]
    31ec:	mov	x1, x0
    31f0:	ldr	x0, [sp, #48]
    31f4:	add	x0, x0, x1
    31f8:	mov	w1, #0x5c                  	// #92
    31fc:	strb	w1, [x0]
    3200:	ldr	x0, [sp, #136]
    3204:	add	x1, x0, #0x1
    3208:	str	x1, [sp, #136]
    320c:	mov	x1, x0
    3210:	ldr	x0, [sp, #48]
    3214:	add	x0, x0, x1
    3218:	mov	w1, #0x74                  	// #116
    321c:	strb	w1, [x0]
    3220:	b	3350 <PySequence_Fast@plt+0x1280>
    3224:	ldr	w0, [sp, #44]
    3228:	cmp	w0, #0x1f
    322c:	b.hi	332c <PySequence_Fast@plt+0x125c>  // b.pmore
    3230:	ldr	x0, [sp, #136]
    3234:	add	x1, x0, #0x1
    3238:	str	x1, [sp, #136]
    323c:	mov	x1, x0
    3240:	ldr	x0, [sp, #48]
    3244:	add	x0, x0, x1
    3248:	mov	w1, #0x5c                  	// #92
    324c:	strb	w1, [x0]
    3250:	ldr	x0, [sp, #136]
    3254:	add	x1, x0, #0x1
    3258:	str	x1, [sp, #136]
    325c:	mov	x1, x0
    3260:	ldr	x0, [sp, #48]
    3264:	add	x0, x0, x1
    3268:	mov	w1, #0x75                  	// #117
    326c:	strb	w1, [x0]
    3270:	ldr	x0, [sp, #136]
    3274:	add	x1, x0, #0x1
    3278:	str	x1, [sp, #136]
    327c:	mov	x1, x0
    3280:	ldr	x0, [sp, #48]
    3284:	add	x0, x0, x1
    3288:	mov	w1, #0x30                  	// #48
    328c:	strb	w1, [x0]
    3290:	ldr	x0, [sp, #136]
    3294:	add	x1, x0, #0x1
    3298:	str	x1, [sp, #136]
    329c:	mov	x1, x0
    32a0:	ldr	x0, [sp, #48]
    32a4:	add	x0, x0, x1
    32a8:	mov	w1, #0x30                  	// #48
    32ac:	strb	w1, [x0]
    32b0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    32b4:	ldr	x0, [x0, #4048]
    32b8:	ldr	x1, [x0]
    32bc:	ldr	w0, [sp, #44]
    32c0:	lsr	w0, w0, #4
    32c4:	mov	w0, w0
    32c8:	and	x0, x0, #0xf
    32cc:	add	x1, x1, x0
    32d0:	ldr	x0, [sp, #136]
    32d4:	add	x2, x0, #0x1
    32d8:	str	x2, [sp, #136]
    32dc:	mov	x2, x0
    32e0:	ldr	x0, [sp, #48]
    32e4:	add	x0, x0, x2
    32e8:	ldrb	w1, [x1]
    32ec:	strb	w1, [x0]
    32f0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    32f4:	ldr	x0, [x0, #4048]
    32f8:	ldr	x1, [x0]
    32fc:	ldr	w0, [sp, #44]
    3300:	and	x0, x0, #0xf
    3304:	add	x1, x1, x0
    3308:	ldr	x0, [sp, #136]
    330c:	add	x2, x0, #0x1
    3310:	str	x2, [sp, #136]
    3314:	mov	x2, x0
    3318:	ldr	x0, [sp, #48]
    331c:	add	x0, x0, x2
    3320:	ldrb	w1, [x1]
    3324:	strb	w1, [x0]
    3328:	b	3350 <PySequence_Fast@plt+0x1280>
    332c:	ldr	x0, [sp, #136]
    3330:	add	x1, x0, #0x1
    3334:	str	x1, [sp, #136]
    3338:	mov	x1, x0
    333c:	ldr	x0, [sp, #48]
    3340:	add	x0, x0, x1
    3344:	ldr	w1, [sp, #44]
    3348:	and	w1, w1, #0xff
    334c:	strb	w1, [x0]
    3350:	ldr	x0, [sp, #152]
    3354:	add	x0, x0, #0x1
    3358:	str	x0, [sp, #152]
    335c:	ldr	x1, [sp, #152]
    3360:	ldr	x0, [sp, #112]
    3364:	cmp	x1, x0
    3368:	b.lt	2f50 <PySequence_Fast@plt+0xe80>  // b.tstop
    336c:	ldr	x0, [sp, #136]
    3370:	add	x1, x0, #0x1
    3374:	str	x1, [sp, #136]
    3378:	mov	x1, x0
    337c:	ldr	x0, [sp, #48]
    3380:	add	x0, x0, x1
    3384:	mov	w1, #0x22                  	// #34
    3388:	strb	w1, [x0]
    338c:	b	3d1c <PySequence_Fast@plt+0x1c4c>
    3390:	ldr	w0, [sp, #100]
    3394:	cmp	w0, #0x2
    3398:	b.ne	3864 <PySequence_Fast@plt+0x1794>  // b.any
    339c:	ldr	x0, [sp, #88]
    33a0:	ldrb	w0, [x0, #32]
    33a4:	and	w0, w0, #0x20
    33a8:	and	w0, w0, #0xff
    33ac:	cmp	w0, #0x0
    33b0:	b.eq	33e4 <PySequence_Fast@plt+0x1314>  // b.none
    33b4:	ldr	x0, [sp, #88]
    33b8:	ldrb	w0, [x0, #32]
    33bc:	and	w0, w0, #0x40
    33c0:	and	w0, w0, #0xff
    33c4:	cmp	w0, #0x0
    33c8:	b.eq	33d8 <PySequence_Fast@plt+0x1308>  // b.none
    33cc:	ldr	x0, [sp, #88]
    33d0:	add	x0, x0, #0x30
    33d4:	b	33ec <PySequence_Fast@plt+0x131c>
    33d8:	ldr	x0, [sp, #88]
    33dc:	add	x0, x0, #0x48
    33e0:	b	33ec <PySequence_Fast@plt+0x131c>
    33e4:	ldr	x0, [sp, #88]
    33e8:	ldr	x0, [x0, #72]
    33ec:	str	x0, [sp, #64]
    33f0:	str	xzr, [sp, #136]
    33f4:	ldr	x0, [sp, #136]
    33f8:	add	x1, x0, #0x1
    33fc:	str	x1, [sp, #136]
    3400:	lsl	x0, x0, #1
    3404:	ldr	x1, [sp, #64]
    3408:	add	x0, x1, x0
    340c:	mov	w1, #0x22                  	// #34
    3410:	strh	w1, [x0]
    3414:	str	xzr, [sp, #152]
    3418:	b	3830 <PySequence_Fast@plt+0x1760>
    341c:	ldr	w0, [sp, #100]
    3420:	cmp	w0, #0x1
    3424:	b.ne	343c <PySequence_Fast@plt+0x136c>  // b.any
    3428:	ldr	x0, [sp, #152]
    342c:	ldr	x1, [sp, #104]
    3430:	add	x0, x1, x0
    3434:	ldrb	w0, [x0]
    3438:	b	3474 <PySequence_Fast@plt+0x13a4>
    343c:	ldr	w0, [sp, #100]
    3440:	cmp	w0, #0x2
    3444:	b.ne	3460 <PySequence_Fast@plt+0x1390>  // b.any
    3448:	ldr	x0, [sp, #152]
    344c:	lsl	x0, x0, #1
    3450:	ldr	x1, [sp, #104]
    3454:	add	x0, x1, x0
    3458:	ldrh	w0, [x0]
    345c:	b	3474 <PySequence_Fast@plt+0x13a4>
    3460:	ldr	x0, [sp, #152]
    3464:	lsl	x0, x0, #2
    3468:	ldr	x1, [sp, #104]
    346c:	add	x0, x1, x0
    3470:	ldr	w0, [x0]
    3474:	str	w0, [sp, #60]
    3478:	ldr	w0, [sp, #60]
    347c:	cmp	w0, #0x5c
    3480:	b.eq	350c <PySequence_Fast@plt+0x143c>  // b.none
    3484:	ldr	w0, [sp, #60]
    3488:	cmp	w0, #0x5c
    348c:	b.hi	36f0 <PySequence_Fast@plt+0x1620>  // b.pmore
    3490:	ldr	w0, [sp, #60]
    3494:	cmp	w0, #0x22
    3498:	b.eq	3554 <PySequence_Fast@plt+0x1484>  // b.none
    349c:	ldr	w0, [sp, #60]
    34a0:	cmp	w0, #0x22
    34a4:	b.hi	36f0 <PySequence_Fast@plt+0x1620>  // b.pmore
    34a8:	ldr	w0, [sp, #60]
    34ac:	cmp	w0, #0xd
    34b0:	b.eq	3668 <PySequence_Fast@plt+0x1598>  // b.none
    34b4:	ldr	w0, [sp, #60]
    34b8:	cmp	w0, #0xd
    34bc:	b.hi	36f0 <PySequence_Fast@plt+0x1620>  // b.pmore
    34c0:	ldr	w0, [sp, #60]
    34c4:	cmp	w0, #0xc
    34c8:	b.eq	35e0 <PySequence_Fast@plt+0x1510>  // b.none
    34cc:	ldr	w0, [sp, #60]
    34d0:	cmp	w0, #0xc
    34d4:	b.hi	36f0 <PySequence_Fast@plt+0x1620>  // b.pmore
    34d8:	ldr	w0, [sp, #60]
    34dc:	cmp	w0, #0xa
    34e0:	b.eq	3624 <PySequence_Fast@plt+0x1554>  // b.none
    34e4:	ldr	w0, [sp, #60]
    34e8:	cmp	w0, #0xa
    34ec:	b.hi	36f0 <PySequence_Fast@plt+0x1620>  // b.pmore
    34f0:	ldr	w0, [sp, #60]
    34f4:	cmp	w0, #0x8
    34f8:	b.eq	359c <PySequence_Fast@plt+0x14cc>  // b.none
    34fc:	ldr	w0, [sp, #60]
    3500:	cmp	w0, #0x9
    3504:	b.eq	36ac <PySequence_Fast@plt+0x15dc>  // b.none
    3508:	b	36f0 <PySequence_Fast@plt+0x1620>
    350c:	ldr	x0, [sp, #136]
    3510:	add	x1, x0, #0x1
    3514:	str	x1, [sp, #136]
    3518:	lsl	x0, x0, #1
    351c:	ldr	x1, [sp, #64]
    3520:	add	x0, x1, x0
    3524:	mov	w1, #0x5c                  	// #92
    3528:	strh	w1, [x0]
    352c:	ldr	x0, [sp, #136]
    3530:	add	x1, x0, #0x1
    3534:	str	x1, [sp, #136]
    3538:	lsl	x0, x0, #1
    353c:	ldr	x1, [sp, #64]
    3540:	add	x0, x1, x0
    3544:	ldr	w1, [sp, #60]
    3548:	and	w1, w1, #0xffff
    354c:	strh	w1, [x0]
    3550:	b	3824 <PySequence_Fast@plt+0x1754>
    3554:	ldr	x0, [sp, #136]
    3558:	add	x1, x0, #0x1
    355c:	str	x1, [sp, #136]
    3560:	lsl	x0, x0, #1
    3564:	ldr	x1, [sp, #64]
    3568:	add	x0, x1, x0
    356c:	mov	w1, #0x5c                  	// #92
    3570:	strh	w1, [x0]
    3574:	ldr	x0, [sp, #136]
    3578:	add	x1, x0, #0x1
    357c:	str	x1, [sp, #136]
    3580:	lsl	x0, x0, #1
    3584:	ldr	x1, [sp, #64]
    3588:	add	x0, x1, x0
    358c:	ldr	w1, [sp, #60]
    3590:	and	w1, w1, #0xffff
    3594:	strh	w1, [x0]
    3598:	b	3824 <PySequence_Fast@plt+0x1754>
    359c:	ldr	x0, [sp, #136]
    35a0:	add	x1, x0, #0x1
    35a4:	str	x1, [sp, #136]
    35a8:	lsl	x0, x0, #1
    35ac:	ldr	x1, [sp, #64]
    35b0:	add	x0, x1, x0
    35b4:	mov	w1, #0x5c                  	// #92
    35b8:	strh	w1, [x0]
    35bc:	ldr	x0, [sp, #136]
    35c0:	add	x1, x0, #0x1
    35c4:	str	x1, [sp, #136]
    35c8:	lsl	x0, x0, #1
    35cc:	ldr	x1, [sp, #64]
    35d0:	add	x0, x1, x0
    35d4:	mov	w1, #0x62                  	// #98
    35d8:	strh	w1, [x0]
    35dc:	b	3824 <PySequence_Fast@plt+0x1754>
    35e0:	ldr	x0, [sp, #136]
    35e4:	add	x1, x0, #0x1
    35e8:	str	x1, [sp, #136]
    35ec:	lsl	x0, x0, #1
    35f0:	ldr	x1, [sp, #64]
    35f4:	add	x0, x1, x0
    35f8:	mov	w1, #0x5c                  	// #92
    35fc:	strh	w1, [x0]
    3600:	ldr	x0, [sp, #136]
    3604:	add	x1, x0, #0x1
    3608:	str	x1, [sp, #136]
    360c:	lsl	x0, x0, #1
    3610:	ldr	x1, [sp, #64]
    3614:	add	x0, x1, x0
    3618:	mov	w1, #0x66                  	// #102
    361c:	strh	w1, [x0]
    3620:	b	3824 <PySequence_Fast@plt+0x1754>
    3624:	ldr	x0, [sp, #136]
    3628:	add	x1, x0, #0x1
    362c:	str	x1, [sp, #136]
    3630:	lsl	x0, x0, #1
    3634:	ldr	x1, [sp, #64]
    3638:	add	x0, x1, x0
    363c:	mov	w1, #0x5c                  	// #92
    3640:	strh	w1, [x0]
    3644:	ldr	x0, [sp, #136]
    3648:	add	x1, x0, #0x1
    364c:	str	x1, [sp, #136]
    3650:	lsl	x0, x0, #1
    3654:	ldr	x1, [sp, #64]
    3658:	add	x0, x1, x0
    365c:	mov	w1, #0x6e                  	// #110
    3660:	strh	w1, [x0]
    3664:	b	3824 <PySequence_Fast@plt+0x1754>
    3668:	ldr	x0, [sp, #136]
    366c:	add	x1, x0, #0x1
    3670:	str	x1, [sp, #136]
    3674:	lsl	x0, x0, #1
    3678:	ldr	x1, [sp, #64]
    367c:	add	x0, x1, x0
    3680:	mov	w1, #0x5c                  	// #92
    3684:	strh	w1, [x0]
    3688:	ldr	x0, [sp, #136]
    368c:	add	x1, x0, #0x1
    3690:	str	x1, [sp, #136]
    3694:	lsl	x0, x0, #1
    3698:	ldr	x1, [sp, #64]
    369c:	add	x0, x1, x0
    36a0:	mov	w1, #0x72                  	// #114
    36a4:	strh	w1, [x0]
    36a8:	b	3824 <PySequence_Fast@plt+0x1754>
    36ac:	ldr	x0, [sp, #136]
    36b0:	add	x1, x0, #0x1
    36b4:	str	x1, [sp, #136]
    36b8:	lsl	x0, x0, #1
    36bc:	ldr	x1, [sp, #64]
    36c0:	add	x0, x1, x0
    36c4:	mov	w1, #0x5c                  	// #92
    36c8:	strh	w1, [x0]
    36cc:	ldr	x0, [sp, #136]
    36d0:	add	x1, x0, #0x1
    36d4:	str	x1, [sp, #136]
    36d8:	lsl	x0, x0, #1
    36dc:	ldr	x1, [sp, #64]
    36e0:	add	x0, x1, x0
    36e4:	mov	w1, #0x74                  	// #116
    36e8:	strh	w1, [x0]
    36ec:	b	3824 <PySequence_Fast@plt+0x1754>
    36f0:	ldr	w0, [sp, #60]
    36f4:	cmp	w0, #0x1f
    36f8:	b.hi	3800 <PySequence_Fast@plt+0x1730>  // b.pmore
    36fc:	ldr	x0, [sp, #136]
    3700:	add	x1, x0, #0x1
    3704:	str	x1, [sp, #136]
    3708:	lsl	x0, x0, #1
    370c:	ldr	x1, [sp, #64]
    3710:	add	x0, x1, x0
    3714:	mov	w1, #0x5c                  	// #92
    3718:	strh	w1, [x0]
    371c:	ldr	x0, [sp, #136]
    3720:	add	x1, x0, #0x1
    3724:	str	x1, [sp, #136]
    3728:	lsl	x0, x0, #1
    372c:	ldr	x1, [sp, #64]
    3730:	add	x0, x1, x0
    3734:	mov	w1, #0x75                  	// #117
    3738:	strh	w1, [x0]
    373c:	ldr	x0, [sp, #136]
    3740:	add	x1, x0, #0x1
    3744:	str	x1, [sp, #136]
    3748:	lsl	x0, x0, #1
    374c:	ldr	x1, [sp, #64]
    3750:	add	x0, x1, x0
    3754:	mov	w1, #0x30                  	// #48
    3758:	strh	w1, [x0]
    375c:	ldr	x0, [sp, #136]
    3760:	add	x1, x0, #0x1
    3764:	str	x1, [sp, #136]
    3768:	lsl	x0, x0, #1
    376c:	ldr	x1, [sp, #64]
    3770:	add	x0, x1, x0
    3774:	mov	w1, #0x30                  	// #48
    3778:	strh	w1, [x0]
    377c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    3780:	ldr	x0, [x0, #4048]
    3784:	ldr	x1, [x0]
    3788:	ldr	w0, [sp, #60]
    378c:	lsr	w0, w0, #4
    3790:	mov	w0, w0
    3794:	and	x0, x0, #0xf
    3798:	add	x0, x1, x0
    379c:	ldrb	w2, [x0]
    37a0:	ldr	x0, [sp, #136]
    37a4:	add	x1, x0, #0x1
    37a8:	str	x1, [sp, #136]
    37ac:	lsl	x0, x0, #1
    37b0:	ldr	x1, [sp, #64]
    37b4:	add	x0, x1, x0
    37b8:	and	w1, w2, #0xffff
    37bc:	strh	w1, [x0]
    37c0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    37c4:	ldr	x0, [x0, #4048]
    37c8:	ldr	x1, [x0]
    37cc:	ldr	w0, [sp, #60]
    37d0:	and	x0, x0, #0xf
    37d4:	add	x0, x1, x0
    37d8:	ldrb	w2, [x0]
    37dc:	ldr	x0, [sp, #136]
    37e0:	add	x1, x0, #0x1
    37e4:	str	x1, [sp, #136]
    37e8:	lsl	x0, x0, #1
    37ec:	ldr	x1, [sp, #64]
    37f0:	add	x0, x1, x0
    37f4:	and	w1, w2, #0xffff
    37f8:	strh	w1, [x0]
    37fc:	b	3824 <PySequence_Fast@plt+0x1754>
    3800:	ldr	x0, [sp, #136]
    3804:	add	x1, x0, #0x1
    3808:	str	x1, [sp, #136]
    380c:	lsl	x0, x0, #1
    3810:	ldr	x1, [sp, #64]
    3814:	add	x0, x1, x0
    3818:	ldr	w1, [sp, #60]
    381c:	and	w1, w1, #0xffff
    3820:	strh	w1, [x0]
    3824:	ldr	x0, [sp, #152]
    3828:	add	x0, x0, #0x1
    382c:	str	x0, [sp, #152]
    3830:	ldr	x1, [sp, #152]
    3834:	ldr	x0, [sp, #112]
    3838:	cmp	x1, x0
    383c:	b.lt	341c <PySequence_Fast@plt+0x134c>  // b.tstop
    3840:	ldr	x0, [sp, #136]
    3844:	add	x1, x0, #0x1
    3848:	str	x1, [sp, #136]
    384c:	lsl	x0, x0, #1
    3850:	ldr	x1, [sp, #64]
    3854:	add	x0, x1, x0
    3858:	mov	w1, #0x22                  	// #34
    385c:	strh	w1, [x0]
    3860:	b	3d1c <PySequence_Fast@plt+0x1c4c>
    3864:	ldr	x0, [sp, #88]
    3868:	ldrb	w0, [x0, #32]
    386c:	and	w0, w0, #0x20
    3870:	and	w0, w0, #0xff
    3874:	cmp	w0, #0x0
    3878:	b.eq	38ac <PySequence_Fast@plt+0x17dc>  // b.none
    387c:	ldr	x0, [sp, #88]
    3880:	ldrb	w0, [x0, #32]
    3884:	and	w0, w0, #0x40
    3888:	and	w0, w0, #0xff
    388c:	cmp	w0, #0x0
    3890:	b.eq	38a0 <PySequence_Fast@plt+0x17d0>  // b.none
    3894:	ldr	x0, [sp, #88]
    3898:	add	x0, x0, #0x30
    389c:	b	38b4 <PySequence_Fast@plt+0x17e4>
    38a0:	ldr	x0, [sp, #88]
    38a4:	add	x0, x0, #0x48
    38a8:	b	38b4 <PySequence_Fast@plt+0x17e4>
    38ac:	ldr	x0, [sp, #88]
    38b0:	ldr	x0, [x0, #72]
    38b4:	str	x0, [sp, #80]
    38b8:	str	xzr, [sp, #136]
    38bc:	ldr	x0, [sp, #136]
    38c0:	add	x1, x0, #0x1
    38c4:	str	x1, [sp, #136]
    38c8:	lsl	x0, x0, #2
    38cc:	ldr	x1, [sp, #80]
    38d0:	add	x0, x1, x0
    38d4:	mov	w1, #0x22                  	// #34
    38d8:	str	w1, [x0]
    38dc:	str	xzr, [sp, #152]
    38e0:	b	3cec <PySequence_Fast@plt+0x1c1c>
    38e4:	ldr	w0, [sp, #100]
    38e8:	cmp	w0, #0x1
    38ec:	b.ne	3904 <PySequence_Fast@plt+0x1834>  // b.any
    38f0:	ldr	x0, [sp, #152]
    38f4:	ldr	x1, [sp, #104]
    38f8:	add	x0, x1, x0
    38fc:	ldrb	w0, [x0]
    3900:	b	393c <PySequence_Fast@plt+0x186c>
    3904:	ldr	w0, [sp, #100]
    3908:	cmp	w0, #0x2
    390c:	b.ne	3928 <PySequence_Fast@plt+0x1858>  // b.any
    3910:	ldr	x0, [sp, #152]
    3914:	lsl	x0, x0, #1
    3918:	ldr	x1, [sp, #104]
    391c:	add	x0, x1, x0
    3920:	ldrh	w0, [x0]
    3924:	b	393c <PySequence_Fast@plt+0x186c>
    3928:	ldr	x0, [sp, #152]
    392c:	lsl	x0, x0, #2
    3930:	ldr	x1, [sp, #104]
    3934:	add	x0, x1, x0
    3938:	ldr	w0, [x0]
    393c:	str	w0, [sp, #76]
    3940:	ldr	w0, [sp, #76]
    3944:	cmp	w0, #0x5c
    3948:	b.eq	39d4 <PySequence_Fast@plt+0x1904>  // b.none
    394c:	ldr	w0, [sp, #76]
    3950:	cmp	w0, #0x5c
    3954:	b.hi	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.pmore
    3958:	ldr	w0, [sp, #76]
    395c:	cmp	w0, #0x22
    3960:	b.eq	3a18 <PySequence_Fast@plt+0x1948>  // b.none
    3964:	ldr	w0, [sp, #76]
    3968:	cmp	w0, #0x22
    396c:	b.hi	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.pmore
    3970:	ldr	w0, [sp, #76]
    3974:	cmp	w0, #0xd
    3978:	b.eq	3b28 <PySequence_Fast@plt+0x1a58>  // b.none
    397c:	ldr	w0, [sp, #76]
    3980:	cmp	w0, #0xd
    3984:	b.hi	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.pmore
    3988:	ldr	w0, [sp, #76]
    398c:	cmp	w0, #0xc
    3990:	b.eq	3aa0 <PySequence_Fast@plt+0x19d0>  // b.none
    3994:	ldr	w0, [sp, #76]
    3998:	cmp	w0, #0xc
    399c:	b.hi	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.pmore
    39a0:	ldr	w0, [sp, #76]
    39a4:	cmp	w0, #0xa
    39a8:	b.eq	3ae4 <PySequence_Fast@plt+0x1a14>  // b.none
    39ac:	ldr	w0, [sp, #76]
    39b0:	cmp	w0, #0xa
    39b4:	b.hi	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.pmore
    39b8:	ldr	w0, [sp, #76]
    39bc:	cmp	w0, #0x8
    39c0:	b.eq	3a5c <PySequence_Fast@plt+0x198c>  // b.none
    39c4:	ldr	w0, [sp, #76]
    39c8:	cmp	w0, #0x9
    39cc:	b.eq	3b6c <PySequence_Fast@plt+0x1a9c>  // b.none
    39d0:	b	3bb0 <PySequence_Fast@plt+0x1ae0>
    39d4:	ldr	x0, [sp, #136]
    39d8:	add	x1, x0, #0x1
    39dc:	str	x1, [sp, #136]
    39e0:	lsl	x0, x0, #2
    39e4:	ldr	x1, [sp, #80]
    39e8:	add	x0, x1, x0
    39ec:	mov	w1, #0x5c                  	// #92
    39f0:	str	w1, [x0]
    39f4:	ldr	x0, [sp, #136]
    39f8:	add	x1, x0, #0x1
    39fc:	str	x1, [sp, #136]
    3a00:	lsl	x0, x0, #2
    3a04:	ldr	x1, [sp, #80]
    3a08:	add	x0, x1, x0
    3a0c:	ldr	w1, [sp, #76]
    3a10:	str	w1, [x0]
    3a14:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3a18:	ldr	x0, [sp, #136]
    3a1c:	add	x1, x0, #0x1
    3a20:	str	x1, [sp, #136]
    3a24:	lsl	x0, x0, #2
    3a28:	ldr	x1, [sp, #80]
    3a2c:	add	x0, x1, x0
    3a30:	mov	w1, #0x5c                  	// #92
    3a34:	str	w1, [x0]
    3a38:	ldr	x0, [sp, #136]
    3a3c:	add	x1, x0, #0x1
    3a40:	str	x1, [sp, #136]
    3a44:	lsl	x0, x0, #2
    3a48:	ldr	x1, [sp, #80]
    3a4c:	add	x0, x1, x0
    3a50:	ldr	w1, [sp, #76]
    3a54:	str	w1, [x0]
    3a58:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3a5c:	ldr	x0, [sp, #136]
    3a60:	add	x1, x0, #0x1
    3a64:	str	x1, [sp, #136]
    3a68:	lsl	x0, x0, #2
    3a6c:	ldr	x1, [sp, #80]
    3a70:	add	x0, x1, x0
    3a74:	mov	w1, #0x5c                  	// #92
    3a78:	str	w1, [x0]
    3a7c:	ldr	x0, [sp, #136]
    3a80:	add	x1, x0, #0x1
    3a84:	str	x1, [sp, #136]
    3a88:	lsl	x0, x0, #2
    3a8c:	ldr	x1, [sp, #80]
    3a90:	add	x0, x1, x0
    3a94:	mov	w1, #0x62                  	// #98
    3a98:	str	w1, [x0]
    3a9c:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3aa0:	ldr	x0, [sp, #136]
    3aa4:	add	x1, x0, #0x1
    3aa8:	str	x1, [sp, #136]
    3aac:	lsl	x0, x0, #2
    3ab0:	ldr	x1, [sp, #80]
    3ab4:	add	x0, x1, x0
    3ab8:	mov	w1, #0x5c                  	// #92
    3abc:	str	w1, [x0]
    3ac0:	ldr	x0, [sp, #136]
    3ac4:	add	x1, x0, #0x1
    3ac8:	str	x1, [sp, #136]
    3acc:	lsl	x0, x0, #2
    3ad0:	ldr	x1, [sp, #80]
    3ad4:	add	x0, x1, x0
    3ad8:	mov	w1, #0x66                  	// #102
    3adc:	str	w1, [x0]
    3ae0:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3ae4:	ldr	x0, [sp, #136]
    3ae8:	add	x1, x0, #0x1
    3aec:	str	x1, [sp, #136]
    3af0:	lsl	x0, x0, #2
    3af4:	ldr	x1, [sp, #80]
    3af8:	add	x0, x1, x0
    3afc:	mov	w1, #0x5c                  	// #92
    3b00:	str	w1, [x0]
    3b04:	ldr	x0, [sp, #136]
    3b08:	add	x1, x0, #0x1
    3b0c:	str	x1, [sp, #136]
    3b10:	lsl	x0, x0, #2
    3b14:	ldr	x1, [sp, #80]
    3b18:	add	x0, x1, x0
    3b1c:	mov	w1, #0x6e                  	// #110
    3b20:	str	w1, [x0]
    3b24:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3b28:	ldr	x0, [sp, #136]
    3b2c:	add	x1, x0, #0x1
    3b30:	str	x1, [sp, #136]
    3b34:	lsl	x0, x0, #2
    3b38:	ldr	x1, [sp, #80]
    3b3c:	add	x0, x1, x0
    3b40:	mov	w1, #0x5c                  	// #92
    3b44:	str	w1, [x0]
    3b48:	ldr	x0, [sp, #136]
    3b4c:	add	x1, x0, #0x1
    3b50:	str	x1, [sp, #136]
    3b54:	lsl	x0, x0, #2
    3b58:	ldr	x1, [sp, #80]
    3b5c:	add	x0, x1, x0
    3b60:	mov	w1, #0x72                  	// #114
    3b64:	str	w1, [x0]
    3b68:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3b6c:	ldr	x0, [sp, #136]
    3b70:	add	x1, x0, #0x1
    3b74:	str	x1, [sp, #136]
    3b78:	lsl	x0, x0, #2
    3b7c:	ldr	x1, [sp, #80]
    3b80:	add	x0, x1, x0
    3b84:	mov	w1, #0x5c                  	// #92
    3b88:	str	w1, [x0]
    3b8c:	ldr	x0, [sp, #136]
    3b90:	add	x1, x0, #0x1
    3b94:	str	x1, [sp, #136]
    3b98:	lsl	x0, x0, #2
    3b9c:	ldr	x1, [sp, #80]
    3ba0:	add	x0, x1, x0
    3ba4:	mov	w1, #0x74                  	// #116
    3ba8:	str	w1, [x0]
    3bac:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3bb0:	ldr	w0, [sp, #76]
    3bb4:	cmp	w0, #0x1f
    3bb8:	b.hi	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.pmore
    3bbc:	ldr	x0, [sp, #136]
    3bc0:	add	x1, x0, #0x1
    3bc4:	str	x1, [sp, #136]
    3bc8:	lsl	x0, x0, #2
    3bcc:	ldr	x1, [sp, #80]
    3bd0:	add	x0, x1, x0
    3bd4:	mov	w1, #0x5c                  	// #92
    3bd8:	str	w1, [x0]
    3bdc:	ldr	x0, [sp, #136]
    3be0:	add	x1, x0, #0x1
    3be4:	str	x1, [sp, #136]
    3be8:	lsl	x0, x0, #2
    3bec:	ldr	x1, [sp, #80]
    3bf0:	add	x0, x1, x0
    3bf4:	mov	w1, #0x75                  	// #117
    3bf8:	str	w1, [x0]
    3bfc:	ldr	x0, [sp, #136]
    3c00:	add	x1, x0, #0x1
    3c04:	str	x1, [sp, #136]
    3c08:	lsl	x0, x0, #2
    3c0c:	ldr	x1, [sp, #80]
    3c10:	add	x0, x1, x0
    3c14:	mov	w1, #0x30                  	// #48
    3c18:	str	w1, [x0]
    3c1c:	ldr	x0, [sp, #136]
    3c20:	add	x1, x0, #0x1
    3c24:	str	x1, [sp, #136]
    3c28:	lsl	x0, x0, #2
    3c2c:	ldr	x1, [sp, #80]
    3c30:	add	x0, x1, x0
    3c34:	mov	w1, #0x30                  	// #48
    3c38:	str	w1, [x0]
    3c3c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    3c40:	ldr	x0, [x0, #4048]
    3c44:	ldr	x1, [x0]
    3c48:	ldr	w0, [sp, #76]
    3c4c:	lsr	w0, w0, #4
    3c50:	mov	w0, w0
    3c54:	and	x0, x0, #0xf
    3c58:	add	x0, x1, x0
    3c5c:	ldrb	w2, [x0]
    3c60:	ldr	x0, [sp, #136]
    3c64:	add	x1, x0, #0x1
    3c68:	str	x1, [sp, #136]
    3c6c:	lsl	x0, x0, #2
    3c70:	ldr	x1, [sp, #80]
    3c74:	add	x0, x1, x0
    3c78:	mov	w1, w2
    3c7c:	str	w1, [x0]
    3c80:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    3c84:	ldr	x0, [x0, #4048]
    3c88:	ldr	x1, [x0]
    3c8c:	ldr	w0, [sp, #76]
    3c90:	and	x0, x0, #0xf
    3c94:	add	x0, x1, x0
    3c98:	ldrb	w2, [x0]
    3c9c:	ldr	x0, [sp, #136]
    3ca0:	add	x1, x0, #0x1
    3ca4:	str	x1, [sp, #136]
    3ca8:	lsl	x0, x0, #2
    3cac:	ldr	x1, [sp, #80]
    3cb0:	add	x0, x1, x0
    3cb4:	mov	w1, w2
    3cb8:	str	w1, [x0]
    3cbc:	b	3ce0 <PySequence_Fast@plt+0x1c10>
    3cc0:	ldr	x0, [sp, #136]
    3cc4:	add	x1, x0, #0x1
    3cc8:	str	x1, [sp, #136]
    3ccc:	lsl	x0, x0, #2
    3cd0:	ldr	x1, [sp, #80]
    3cd4:	add	x0, x1, x0
    3cd8:	ldr	w1, [sp, #76]
    3cdc:	str	w1, [x0]
    3ce0:	ldr	x0, [sp, #152]
    3ce4:	add	x0, x0, #0x1
    3ce8:	str	x0, [sp, #152]
    3cec:	ldr	x1, [sp, #152]
    3cf0:	ldr	x0, [sp, #112]
    3cf4:	cmp	x1, x0
    3cf8:	b.lt	38e4 <PySequence_Fast@plt+0x1814>  // b.tstop
    3cfc:	ldr	x0, [sp, #136]
    3d00:	add	x1, x0, #0x1
    3d04:	str	x1, [sp, #136]
    3d08:	lsl	x0, x0, #2
    3d0c:	ldr	x1, [sp, #80]
    3d10:	add	x0, x1, x0
    3d14:	mov	w1, #0x22                  	// #34
    3d18:	str	w1, [x0]
    3d1c:	ldr	x0, [sp, #88]
    3d20:	ldp	x29, x30, [sp], #160
    3d24:	ret
    3d28:	stp	x29, x30, [sp, #-64]!
    3d2c:	mov	x29, sp
    3d30:	str	x0, [sp, #40]
    3d34:	str	x1, [sp, #32]
    3d38:	str	x2, [sp, #24]
    3d3c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    3d40:	add	x0, x0, #0x8f8
    3d44:	ldr	x0, [x0]
    3d48:	cmp	x0, #0x0
    3d4c:	b.ne	3db4 <PySequence_Fast@plt+0x1ce4>  // b.any
    3d50:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3d54:	add	x0, x0, #0xb40
    3d58:	bl	1f60 <PyImport_ImportModule@plt>
    3d5c:	str	x0, [sp, #56]
    3d60:	ldr	x0, [sp, #56]
    3d64:	cmp	x0, #0x0
    3d68:	b.eq	3e18 <PySequence_Fast@plt+0x1d48>  // b.none
    3d6c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3d70:	add	x1, x0, #0xb50
    3d74:	ldr	x0, [sp, #56]
    3d78:	bl	1dd0 <PyObject_GetAttrString@plt>
    3d7c:	mov	x1, x0
    3d80:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    3d84:	add	x0, x0, #0x8f8
    3d88:	str	x1, [x0]
    3d8c:	ldr	x2, [sp, #56]
    3d90:	mov	w1, #0x154                 	// #340
    3d94:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3d98:	add	x0, x0, #0xb60
    3d9c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3da0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    3da4:	add	x0, x0, #0x8f8
    3da8:	ldr	x0, [x0]
    3dac:	cmp	x0, #0x0
    3db0:	b.eq	3e20 <PySequence_Fast@plt+0x1d50>  // b.none
    3db4:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    3db8:	add	x0, x0, #0x8f8
    3dbc:	ldr	x5, [x0]
    3dc0:	ldr	x4, [sp, #24]
    3dc4:	ldr	x3, [sp, #32]
    3dc8:	ldr	x2, [sp, #40]
    3dcc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3dd0:	add	x1, x0, #0xb88
    3dd4:	mov	x0, x5
    3dd8:	bl	1f00 <PyObject_CallFunction@plt>
    3ddc:	str	x0, [sp, #48]
    3de0:	ldr	x0, [sp, #48]
    3de4:	cmp	x0, #0x0
    3de8:	b.eq	3e24 <PySequence_Fast@plt+0x1d54>  // b.none
    3dec:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    3df0:	add	x0, x0, #0x8f8
    3df4:	ldr	x0, [x0]
    3df8:	ldr	x1, [sp, #48]
    3dfc:	bl	1e40 <PyErr_SetObject@plt>
    3e00:	ldr	x2, [sp, #48]
    3e04:	mov	w1, #0x15b                 	// #347
    3e08:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3e0c:	add	x0, x0, #0xb60
    3e10:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3e14:	b	3e24 <PySequence_Fast@plt+0x1d54>
    3e18:	nop
    3e1c:	b	3e24 <PySequence_Fast@plt+0x1d54>
    3e20:	nop
    3e24:	ldp	x29, x30, [sp], #64
    3e28:	ret
    3e2c:	stp	x29, x30, [sp, #-48]!
    3e30:	mov	x29, sp
    3e34:	str	x0, [sp, #24]
    3e38:	ldr	x0, [sp, #24]
    3e3c:	bl	1e80 <PyLong_FromSsize_t@plt>
    3e40:	str	x0, [sp, #40]
    3e44:	ldr	x0, [sp, #40]
    3e48:	cmp	x0, #0x0
    3e4c:	b.eq	3e78 <PySequence_Fast@plt+0x1da8>  // b.none
    3e50:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    3e54:	ldr	x0, [x0, #4040]
    3e58:	ldr	x0, [x0]
    3e5c:	ldr	x1, [sp, #40]
    3e60:	bl	1e40 <PyErr_SetObject@plt>
    3e64:	ldr	x2, [sp, #40]
    3e68:	mov	w1, #0x165                 	// #357
    3e6c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3e70:	add	x0, x0, #0xb60
    3e74:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3e78:	nop
    3e7c:	ldp	x29, x30, [sp], #48
    3e80:	ret
    3e84:	stp	x29, x30, [sp, #-48]!
    3e88:	mov	x29, sp
    3e8c:	str	x0, [sp, #24]
    3e90:	str	x1, [sp, #16]
    3e94:	ldr	x0, [sp, #24]
    3e98:	cmp	x0, #0x0
    3e9c:	b.ne	3ea8 <PySequence_Fast@plt+0x1dd8>  // b.any
    3ea0:	mov	x0, #0x0                   	// #0
    3ea4:	b	3f40 <PySequence_Fast@plt+0x1e70>
    3ea8:	ldr	x0, [sp, #16]
    3eac:	bl	1e80 <PyLong_FromSsize_t@plt>
    3eb0:	str	x0, [sp, #40]
    3eb4:	ldr	x0, [sp, #40]
    3eb8:	cmp	x0, #0x0
    3ebc:	b.ne	3edc <PySequence_Fast@plt+0x1e0c>  // b.any
    3ec0:	ldr	x2, [sp, #24]
    3ec4:	mov	w1, #0x176                 	// #374
    3ec8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3ecc:	add	x0, x0, #0xb60
    3ed0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3ed4:	mov	x0, #0x0                   	// #0
    3ed8:	b	3f40 <PySequence_Fast@plt+0x1e70>
    3edc:	mov	x0, #0x2                   	// #2
    3ee0:	bl	1f10 <PyTuple_New@plt>
    3ee4:	str	x0, [sp, #32]
    3ee8:	ldr	x0, [sp, #32]
    3eec:	cmp	x0, #0x0
    3ef0:	b.ne	3f24 <PySequence_Fast@plt+0x1e54>  // b.any
    3ef4:	ldr	x2, [sp, #40]
    3ef8:	mov	w1, #0x17b                 	// #379
    3efc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3f00:	add	x0, x0, #0xb60
    3f04:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3f08:	ldr	x2, [sp, #24]
    3f0c:	mov	w1, #0x17c                 	// #380
    3f10:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    3f14:	add	x0, x0, #0xb60
    3f18:	bl	2298 <PySequence_Fast@plt+0x1c8>
    3f1c:	mov	x0, #0x0                   	// #0
    3f20:	b	3f40 <PySequence_Fast@plt+0x1e70>
    3f24:	ldr	x0, [sp, #32]
    3f28:	ldr	x1, [sp, #24]
    3f2c:	str	x1, [x0, #24]
    3f30:	ldr	x0, [sp, #32]
    3f34:	ldr	x1, [sp, #40]
    3f38:	str	x1, [x0, #32]
    3f3c:	ldr	x0, [sp, #32]
    3f40:	ldp	x29, x30, [sp], #48
    3f44:	ret
    3f48:	stp	x29, x30, [sp, #-192]!
    3f4c:	mov	x29, sp
    3f50:	str	x0, [sp, #40]
    3f54:	str	x1, [sp, #32]
    3f58:	str	w2, [sp, #28]
    3f5c:	str	x3, [sp, #16]
    3f60:	str	xzr, [sp, #184]
    3f64:	ldr	x0, [sp, #32]
    3f68:	sub	x0, x0, #0x1
    3f6c:	str	x0, [sp, #144]
    3f70:	str	xzr, [sp, #168]
    3f74:	str	xzr, [sp, #160]
    3f78:	ldr	x0, [sp, #40]
    3f7c:	ldrb	w0, [x0, #32]
    3f80:	and	w0, w0, #0xffffff80
    3f84:	and	w0, w0, #0xff
    3f88:	cmp	w0, #0x0
    3f8c:	b.ne	3fa8 <PySequence_Fast@plt+0x1ed8>  // b.any
    3f90:	ldr	x0, [sp, #40]
    3f94:	bl	1db0 <_PyUnicode_Ready@plt>
    3f98:	cmn	w0, #0x1
    3f9c:	b.ne	3fa8 <PySequence_Fast@plt+0x1ed8>  // b.any
    3fa0:	mov	x0, #0x0                   	// #0
    3fa4:	b	4af4 <PySequence_Fast@plt+0x2a24>
    3fa8:	ldr	x0, [sp, #40]
    3fac:	ldr	x0, [x0, #16]
    3fb0:	str	x0, [sp, #136]
    3fb4:	ldr	x0, [sp, #40]
    3fb8:	ldrb	w0, [x0, #32]
    3fbc:	and	w0, w0, #0x20
    3fc0:	and	w0, w0, #0xff
    3fc4:	cmp	w0, #0x0
    3fc8:	b.eq	3ffc <PySequence_Fast@plt+0x1f2c>  // b.none
    3fcc:	ldr	x0, [sp, #40]
    3fd0:	ldrb	w0, [x0, #32]
    3fd4:	and	w0, w0, #0x40
    3fd8:	and	w0, w0, #0xff
    3fdc:	cmp	w0, #0x0
    3fe0:	b.eq	3ff0 <PySequence_Fast@plt+0x1f20>  // b.none
    3fe4:	ldr	x0, [sp, #40]
    3fe8:	add	x0, x0, #0x30
    3fec:	b	4004 <PySequence_Fast@plt+0x1f34>
    3ff0:	ldr	x0, [sp, #40]
    3ff4:	add	x0, x0, #0x48
    3ff8:	b	4004 <PySequence_Fast@plt+0x1f34>
    3ffc:	ldr	x0, [sp, #40]
    4000:	ldr	x0, [x0, #72]
    4004:	str	x0, [sp, #128]
    4008:	ldr	x0, [sp, #40]
    400c:	ldrb	w0, [x0, #32]
    4010:	ubfx	x0, x0, #2, #3
    4014:	and	w0, w0, #0xff
    4018:	str	w0, [sp, #124]
    401c:	ldr	x0, [sp, #32]
    4020:	cmp	x0, #0x0
    4024:	b.lt	4038 <PySequence_Fast@plt+0x1f68>  // b.tstop
    4028:	ldr	x1, [sp, #136]
    402c:	ldr	x0, [sp, #32]
    4030:	cmp	x1, x0
    4034:	b.ge	4058 <PySequence_Fast@plt+0x1f88>  // b.tcont
    4038:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    403c:	ldr	x0, [x0, #3968]
    4040:	ldr	x2, [x0]
    4044:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4048:	add	x1, x0, #0xb90
    404c:	mov	x0, x2
    4050:	bl	1e60 <PyErr_SetString@plt>
    4054:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4058:	str	wzr, [sp, #52]
    405c:	ldr	x0, [sp, #32]
    4060:	str	x0, [sp, #176]
    4064:	b	4118 <PySequence_Fast@plt+0x2048>
    4068:	ldr	w0, [sp, #124]
    406c:	cmp	w0, #0x1
    4070:	b.ne	4088 <PySequence_Fast@plt+0x1fb8>  // b.any
    4074:	ldr	x0, [sp, #176]
    4078:	ldr	x1, [sp, #128]
    407c:	add	x0, x1, x0
    4080:	ldrb	w0, [x0]
    4084:	b	40c0 <PySequence_Fast@plt+0x1ff0>
    4088:	ldr	w0, [sp, #124]
    408c:	cmp	w0, #0x2
    4090:	b.ne	40ac <PySequence_Fast@plt+0x1fdc>  // b.any
    4094:	ldr	x0, [sp, #176]
    4098:	lsl	x0, x0, #1
    409c:	ldr	x1, [sp, #128]
    40a0:	add	x0, x1, x0
    40a4:	ldrh	w0, [x0]
    40a8:	b	40c0 <PySequence_Fast@plt+0x1ff0>
    40ac:	ldr	x0, [sp, #176]
    40b0:	lsl	x0, x0, #2
    40b4:	ldr	x1, [sp, #128]
    40b8:	add	x0, x1, x0
    40bc:	ldr	w0, [x0]
    40c0:	str	w0, [sp, #52]
    40c4:	ldr	w0, [sp, #52]
    40c8:	cmp	w0, #0x22
    40cc:	b.eq	4128 <PySequence_Fast@plt+0x2058>  // b.none
    40d0:	ldr	w0, [sp, #52]
    40d4:	cmp	w0, #0x5c
    40d8:	b.eq	4128 <PySequence_Fast@plt+0x2058>  // b.none
    40dc:	ldr	w0, [sp, #52]
    40e0:	cmp	w0, #0x1f
    40e4:	b.hi	410c <PySequence_Fast@plt+0x203c>  // b.pmore
    40e8:	ldr	w0, [sp, #28]
    40ec:	cmp	w0, #0x0
    40f0:	b.eq	410c <PySequence_Fast@plt+0x203c>  // b.none
    40f4:	ldr	x2, [sp, #176]
    40f8:	ldr	x1, [sp, #40]
    40fc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4100:	add	x0, x0, #0xba8
    4104:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    4108:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    410c:	ldr	x0, [sp, #176]
    4110:	add	x0, x0, #0x1
    4114:	str	x0, [sp, #176]
    4118:	ldr	x1, [sp, #176]
    411c:	ldr	x0, [sp, #136]
    4120:	cmp	x1, x0
    4124:	b.lt	4068 <PySequence_Fast@plt+0x1f98>  // b.tstop
    4128:	ldr	w0, [sp, #52]
    412c:	cmp	w0, #0x22
    4130:	b.eq	4158 <PySequence_Fast@plt+0x2088>  // b.none
    4134:	ldr	w0, [sp, #52]
    4138:	cmp	w0, #0x5c
    413c:	b.eq	4158 <PySequence_Fast@plt+0x2088>  // b.none
    4140:	ldr	x2, [sp, #144]
    4144:	ldr	x1, [sp, #40]
    4148:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    414c:	add	x0, x0, #0xbc8
    4150:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    4154:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4158:	ldr	x1, [sp, #176]
    415c:	ldr	x0, [sp, #32]
    4160:	cmp	x1, x0
    4164:	b.eq	424c <PySequence_Fast@plt+0x217c>  // b.none
    4168:	ldr	x0, [sp, #160]
    416c:	cmp	x0, #0x0
    4170:	b.eq	4208 <PySequence_Fast@plt+0x2138>  // b.none
    4174:	ldr	x0, [sp, #168]
    4178:	cmp	x0, #0x0
    417c:	b.ne	4198 <PySequence_Fast@plt+0x20c8>  // b.any
    4180:	mov	x0, #0x0                   	// #0
    4184:	bl	1da0 <PyList_New@plt>
    4188:	str	x0, [sp, #168]
    418c:	ldr	x0, [sp, #168]
    4190:	cmp	x0, #0x0
    4194:	b.eq	4a90 <PySequence_Fast@plt+0x29c0>  // b.none
    4198:	ldr	x1, [sp, #160]
    419c:	ldr	x0, [sp, #168]
    41a0:	bl	1eb0 <PyList_Append@plt>
    41a4:	cmp	w0, #0x0
    41a8:	b.eq	41dc <PySequence_Fast@plt+0x210c>  // b.none
    41ac:	ldr	x0, [sp, #160]
    41b0:	str	x0, [sp, #104]
    41b4:	ldr	x0, [sp, #104]
    41b8:	cmp	x0, #0x0
    41bc:	b.eq	4a98 <PySequence_Fast@plt+0x29c8>  // b.none
    41c0:	str	xzr, [sp, #160]
    41c4:	ldr	x2, [sp, #104]
    41c8:	mov	w1, #0x1c5                 	// #453
    41cc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    41d0:	add	x0, x0, #0xb60
    41d4:	bl	2298 <PySequence_Fast@plt+0x1c8>
    41d8:	b	4a98 <PySequence_Fast@plt+0x29c8>
    41dc:	ldr	x0, [sp, #160]
    41e0:	str	x0, [sp, #112]
    41e4:	ldr	x0, [sp, #112]
    41e8:	cmp	x0, #0x0
    41ec:	b.eq	4208 <PySequence_Fast@plt+0x2138>  // b.none
    41f0:	str	xzr, [sp, #160]
    41f4:	ldr	x2, [sp, #112]
    41f8:	mov	w1, #0x1c5                 	// #453
    41fc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4200:	add	x0, x0, #0xb60
    4204:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4208:	ldrsw	x1, [sp, #124]
    420c:	ldr	x0, [sp, #32]
    4210:	mul	x0, x1, x0
    4214:	mov	x1, x0
    4218:	ldr	x0, [sp, #128]
    421c:	add	x3, x0, x1
    4220:	ldr	x1, [sp, #176]
    4224:	ldr	x0, [sp, #32]
    4228:	sub	x0, x1, x0
    422c:	mov	x2, x0
    4230:	mov	x1, x3
    4234:	ldr	w0, [sp, #124]
    4238:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    423c:	str	x0, [sp, #160]
    4240:	ldr	x0, [sp, #160]
    4244:	cmp	x0, #0x0
    4248:	b.eq	4aa0 <PySequence_Fast@plt+0x29d0>  // b.none
    424c:	ldr	x0, [sp, #176]
    4250:	add	x0, x0, #0x1
    4254:	str	x0, [sp, #176]
    4258:	ldr	w0, [sp, #52]
    425c:	cmp	w0, #0x22
    4260:	b.ne	427c <PySequence_Fast@plt+0x21ac>  // b.any
    4264:	ldr	x0, [sp, #176]
    4268:	str	x0, [sp, #32]
    426c:	ldr	x0, [sp, #168]
    4270:	cmp	x0, #0x0
    4274:	b.eq	4968 <PySequence_Fast@plt+0x2898>  // b.none
    4278:	b	4998 <PySequence_Fast@plt+0x28c8>
    427c:	ldr	x1, [sp, #176]
    4280:	ldr	x0, [sp, #136]
    4284:	cmp	x1, x0
    4288:	b.ne	42a4 <PySequence_Fast@plt+0x21d4>  // b.any
    428c:	ldr	x2, [sp, #144]
    4290:	ldr	x1, [sp, #40]
    4294:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4298:	add	x0, x0, #0xbc8
    429c:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    42a0:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    42a4:	ldr	w0, [sp, #124]
    42a8:	cmp	w0, #0x1
    42ac:	b.ne	42c4 <PySequence_Fast@plt+0x21f4>  // b.any
    42b0:	ldr	x0, [sp, #176]
    42b4:	ldr	x1, [sp, #128]
    42b8:	add	x0, x1, x0
    42bc:	ldrb	w0, [x0]
    42c0:	b	42fc <PySequence_Fast@plt+0x222c>
    42c4:	ldr	w0, [sp, #124]
    42c8:	cmp	w0, #0x2
    42cc:	b.ne	42e8 <PySequence_Fast@plt+0x2218>  // b.any
    42d0:	ldr	x0, [sp, #176]
    42d4:	lsl	x0, x0, #1
    42d8:	ldr	x1, [sp, #128]
    42dc:	add	x0, x1, x0
    42e0:	ldrh	w0, [x0]
    42e4:	b	42fc <PySequence_Fast@plt+0x222c>
    42e8:	ldr	x0, [sp, #176]
    42ec:	lsl	x0, x0, #2
    42f0:	ldr	x1, [sp, #128]
    42f4:	add	x0, x1, x0
    42f8:	ldr	w0, [x0]
    42fc:	str	w0, [sp, #52]
    4300:	ldr	w0, [sp, #52]
    4304:	cmp	w0, #0x75
    4308:	b.eq	4414 <PySequence_Fast@plt+0x2344>  // b.none
    430c:	ldr	x0, [sp, #176]
    4310:	add	x0, x0, #0x1
    4314:	str	x0, [sp, #32]
    4318:	ldr	w0, [sp, #52]
    431c:	cmp	w0, #0x74
    4320:	b.eq	43c0 <PySequence_Fast@plt+0x22f0>  // b.none
    4324:	cmp	w0, #0x74
    4328:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    432c:	cmp	w0, #0x72
    4330:	b.eq	43b4 <PySequence_Fast@plt+0x22e4>  // b.none
    4334:	cmp	w0, #0x72
    4338:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    433c:	cmp	w0, #0x6e
    4340:	b.eq	43a8 <PySequence_Fast@plt+0x22d8>  // b.none
    4344:	cmp	w0, #0x6e
    4348:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    434c:	cmp	w0, #0x66
    4350:	b.eq	439c <PySequence_Fast@plt+0x22cc>  // b.none
    4354:	cmp	w0, #0x66
    4358:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    435c:	cmp	w0, #0x62
    4360:	b.eq	4390 <PySequence_Fast@plt+0x22c0>  // b.none
    4364:	cmp	w0, #0x62
    4368:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    436c:	cmp	w0, #0x5c
    4370:	b.eq	43d4 <PySequence_Fast@plt+0x2304>  // b.none
    4374:	cmp	w0, #0x5c
    4378:	b.hi	43cc <PySequence_Fast@plt+0x22fc>  // b.pmore
    437c:	cmp	w0, #0x22
    4380:	b.eq	43dc <PySequence_Fast@plt+0x230c>  // b.none
    4384:	cmp	w0, #0x2f
    4388:	b.eq	43e4 <PySequence_Fast@plt+0x2314>  // b.none
    438c:	b	43cc <PySequence_Fast@plt+0x22fc>
    4390:	mov	w0, #0x8                   	// #8
    4394:	str	w0, [sp, #52]
    4398:	b	43e8 <PySequence_Fast@plt+0x2318>
    439c:	mov	w0, #0xc                   	// #12
    43a0:	str	w0, [sp, #52]
    43a4:	b	43e8 <PySequence_Fast@plt+0x2318>
    43a8:	mov	w0, #0xa                   	// #10
    43ac:	str	w0, [sp, #52]
    43b0:	b	43e8 <PySequence_Fast@plt+0x2318>
    43b4:	mov	w0, #0xd                   	// #13
    43b8:	str	w0, [sp, #52]
    43bc:	b	43e8 <PySequence_Fast@plt+0x2318>
    43c0:	mov	w0, #0x9                   	// #9
    43c4:	str	w0, [sp, #52]
    43c8:	b	43e8 <PySequence_Fast@plt+0x2318>
    43cc:	str	wzr, [sp, #52]
    43d0:	b	43e8 <PySequence_Fast@plt+0x2318>
    43d4:	nop
    43d8:	b	43e8 <PySequence_Fast@plt+0x2318>
    43dc:	nop
    43e0:	b	43e8 <PySequence_Fast@plt+0x2318>
    43e4:	nop
    43e8:	ldr	w0, [sp, #52]
    43ec:	cmp	w0, #0x0
    43f0:	b.ne	48a0 <PySequence_Fast@plt+0x27d0>  // b.any
    43f4:	ldr	x0, [sp, #32]
    43f8:	sub	x0, x0, #0x2
    43fc:	mov	x2, x0
    4400:	ldr	x1, [sp, #40]
    4404:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4408:	add	x0, x0, #0xbe8
    440c:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    4410:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4414:	str	wzr, [sp, #52]
    4418:	ldr	x0, [sp, #176]
    441c:	add	x0, x0, #0x1
    4420:	str	x0, [sp, #176]
    4424:	ldr	x0, [sp, #176]
    4428:	add	x0, x0, #0x4
    442c:	str	x0, [sp, #32]
    4430:	ldr	x1, [sp, #32]
    4434:	ldr	x0, [sp, #136]
    4438:	cmp	x1, x0
    443c:	b.lt	4584 <PySequence_Fast@plt+0x24b4>  // b.tstop
    4440:	ldr	x0, [sp, #176]
    4444:	sub	x0, x0, #0x1
    4448:	mov	x2, x0
    444c:	ldr	x1, [sp, #40]
    4450:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4454:	add	x0, x0, #0xbf8
    4458:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    445c:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4460:	ldr	w0, [sp, #124]
    4464:	cmp	w0, #0x1
    4468:	b.ne	4480 <PySequence_Fast@plt+0x23b0>  // b.any
    446c:	ldr	x0, [sp, #176]
    4470:	ldr	x1, [sp, #128]
    4474:	add	x0, x1, x0
    4478:	ldrb	w0, [x0]
    447c:	b	44b8 <PySequence_Fast@plt+0x23e8>
    4480:	ldr	w0, [sp, #124]
    4484:	cmp	w0, #0x2
    4488:	b.ne	44a4 <PySequence_Fast@plt+0x23d4>  // b.any
    448c:	ldr	x0, [sp, #176]
    4490:	lsl	x0, x0, #1
    4494:	ldr	x1, [sp, #128]
    4498:	add	x0, x1, x0
    449c:	ldrh	w0, [x0]
    44a0:	b	44b8 <PySequence_Fast@plt+0x23e8>
    44a4:	ldr	x0, [sp, #176]
    44a8:	lsl	x0, x0, #2
    44ac:	ldr	x1, [sp, #128]
    44b0:	add	x0, x1, x0
    44b4:	ldr	w0, [x0]
    44b8:	str	w0, [sp, #96]
    44bc:	ldr	w0, [sp, #52]
    44c0:	lsl	w0, w0, #4
    44c4:	str	w0, [sp, #52]
    44c8:	ldr	w0, [sp, #96]
    44cc:	cmp	w0, #0x66
    44d0:	b.hi	4558 <PySequence_Fast@plt+0x2488>  // b.pmore
    44d4:	ldr	w0, [sp, #96]
    44d8:	cmp	w0, #0x61
    44dc:	b.cs	4528 <PySequence_Fast@plt+0x2458>  // b.hs, b.nlast
    44e0:	ldr	w0, [sp, #96]
    44e4:	cmp	w0, #0x39
    44e8:	b.hi	44fc <PySequence_Fast@plt+0x242c>  // b.pmore
    44ec:	ldr	w0, [sp, #96]
    44f0:	cmp	w0, #0x30
    44f4:	b.cs	4510 <PySequence_Fast@plt+0x2440>  // b.hs, b.nlast
    44f8:	b	4558 <PySequence_Fast@plt+0x2488>
    44fc:	ldr	w0, [sp, #96]
    4500:	sub	w0, w0, #0x41
    4504:	cmp	w0, #0x5
    4508:	b.hi	4558 <PySequence_Fast@plt+0x2488>  // b.pmore
    450c:	b	4540 <PySequence_Fast@plt+0x2470>
    4510:	ldr	w0, [sp, #96]
    4514:	sub	w1, w0, #0x30
    4518:	ldr	w0, [sp, #52]
    451c:	orr	w0, w1, w0
    4520:	str	w0, [sp, #52]
    4524:	b	4578 <PySequence_Fast@plt+0x24a8>
    4528:	ldr	w0, [sp, #96]
    452c:	sub	w1, w0, #0x57
    4530:	ldr	w0, [sp, #52]
    4534:	orr	w0, w1, w0
    4538:	str	w0, [sp, #52]
    453c:	b	4578 <PySequence_Fast@plt+0x24a8>
    4540:	ldr	w0, [sp, #96]
    4544:	sub	w1, w0, #0x37
    4548:	ldr	w0, [sp, #52]
    454c:	orr	w0, w1, w0
    4550:	str	w0, [sp, #52]
    4554:	b	4578 <PySequence_Fast@plt+0x24a8>
    4558:	ldr	x0, [sp, #32]
    455c:	sub	x0, x0, #0x5
    4560:	mov	x2, x0
    4564:	ldr	x1, [sp, #40]
    4568:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    456c:	add	x0, x0, #0xbf8
    4570:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    4574:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4578:	ldr	x0, [sp, #176]
    457c:	add	x0, x0, #0x1
    4580:	str	x0, [sp, #176]
    4584:	ldr	x1, [sp, #176]
    4588:	ldr	x0, [sp, #32]
    458c:	cmp	x1, x0
    4590:	b.lt	4460 <PySequence_Fast@plt+0x2390>  // b.tstop
    4594:	ldr	w1, [sp, #52]
    4598:	mov	w0, #0xd7ff                	// #55295
    459c:	cmp	w1, w0
    45a0:	b.ls	48a0 <PySequence_Fast@plt+0x27d0>  // b.plast
    45a4:	ldr	w1, [sp, #52]
    45a8:	mov	w0, #0xdbff                	// #56319
    45ac:	cmp	w1, w0
    45b0:	b.hi	48a0 <PySequence_Fast@plt+0x27d0>  // b.pmore
    45b4:	ldr	x0, [sp, #32]
    45b8:	add	x0, x0, #0x6
    45bc:	ldr	x1, [sp, #136]
    45c0:	cmp	x1, x0
    45c4:	b.le	48a0 <PySequence_Fast@plt+0x27d0>
    45c8:	ldr	w0, [sp, #124]
    45cc:	cmp	w0, #0x1
    45d0:	b.ne	4600 <PySequence_Fast@plt+0x2530>  // b.any
    45d4:	ldr	x0, [sp, #176]
    45d8:	add	x1, x0, #0x1
    45dc:	str	x1, [sp, #176]
    45e0:	mov	x1, x0
    45e4:	ldr	x0, [sp, #128]
    45e8:	add	x0, x0, x1
    45ec:	ldrb	w0, [x0]
    45f0:	cmp	w0, #0x5c
    45f4:	cset	w0, eq  // eq = none
    45f8:	and	w0, w0, #0xff
    45fc:	b	4660 <PySequence_Fast@plt+0x2590>
    4600:	ldr	w0, [sp, #124]
    4604:	cmp	w0, #0x2
    4608:	b.ne	4638 <PySequence_Fast@plt+0x2568>  // b.any
    460c:	ldr	x0, [sp, #176]
    4610:	add	x1, x0, #0x1
    4614:	str	x1, [sp, #176]
    4618:	lsl	x0, x0, #1
    461c:	ldr	x1, [sp, #128]
    4620:	add	x0, x1, x0
    4624:	ldrh	w0, [x0]
    4628:	cmp	w0, #0x5c
    462c:	cset	w0, eq  // eq = none
    4630:	and	w0, w0, #0xff
    4634:	b	4660 <PySequence_Fast@plt+0x2590>
    4638:	ldr	x0, [sp, #176]
    463c:	add	x1, x0, #0x1
    4640:	str	x1, [sp, #176]
    4644:	lsl	x0, x0, #2
    4648:	ldr	x1, [sp, #128]
    464c:	add	x0, x1, x0
    4650:	ldr	w0, [x0]
    4654:	cmp	w0, #0x5c
    4658:	cset	w0, eq  // eq = none
    465c:	and	w0, w0, #0xff
    4660:	cmp	w0, #0x0
    4664:	b.eq	48a0 <PySequence_Fast@plt+0x27d0>  // b.none
    4668:	ldr	w0, [sp, #124]
    466c:	cmp	w0, #0x1
    4670:	b.ne	46a0 <PySequence_Fast@plt+0x25d0>  // b.any
    4674:	ldr	x0, [sp, #176]
    4678:	add	x1, x0, #0x1
    467c:	str	x1, [sp, #176]
    4680:	mov	x1, x0
    4684:	ldr	x0, [sp, #128]
    4688:	add	x0, x0, x1
    468c:	ldrb	w0, [x0]
    4690:	cmp	w0, #0x75
    4694:	cset	w0, eq  // eq = none
    4698:	and	w0, w0, #0xff
    469c:	b	4700 <PySequence_Fast@plt+0x2630>
    46a0:	ldr	w0, [sp, #124]
    46a4:	cmp	w0, #0x2
    46a8:	b.ne	46d8 <PySequence_Fast@plt+0x2608>  // b.any
    46ac:	ldr	x0, [sp, #176]
    46b0:	add	x1, x0, #0x1
    46b4:	str	x1, [sp, #176]
    46b8:	lsl	x0, x0, #1
    46bc:	ldr	x1, [sp, #128]
    46c0:	add	x0, x1, x0
    46c4:	ldrh	w0, [x0]
    46c8:	cmp	w0, #0x75
    46cc:	cset	w0, eq  // eq = none
    46d0:	and	w0, w0, #0xff
    46d4:	b	4700 <PySequence_Fast@plt+0x2630>
    46d8:	ldr	x0, [sp, #176]
    46dc:	add	x1, x0, #0x1
    46e0:	str	x1, [sp, #176]
    46e4:	lsl	x0, x0, #2
    46e8:	ldr	x1, [sp, #128]
    46ec:	add	x0, x1, x0
    46f0:	ldr	w0, [x0]
    46f4:	cmp	w0, #0x75
    46f8:	cset	w0, eq  // eq = none
    46fc:	and	w0, w0, #0xff
    4700:	cmp	w0, #0x0
    4704:	b.eq	48a0 <PySequence_Fast@plt+0x27d0>  // b.none
    4708:	str	wzr, [sp, #156]
    470c:	ldr	x0, [sp, #32]
    4710:	add	x0, x0, #0x6
    4714:	str	x0, [sp, #32]
    4718:	b	4840 <PySequence_Fast@plt+0x2770>
    471c:	ldr	w0, [sp, #124]
    4720:	cmp	w0, #0x1
    4724:	b.ne	473c <PySequence_Fast@plt+0x266c>  // b.any
    4728:	ldr	x0, [sp, #176]
    472c:	ldr	x1, [sp, #128]
    4730:	add	x0, x1, x0
    4734:	ldrb	w0, [x0]
    4738:	b	4774 <PySequence_Fast@plt+0x26a4>
    473c:	ldr	w0, [sp, #124]
    4740:	cmp	w0, #0x2
    4744:	b.ne	4760 <PySequence_Fast@plt+0x2690>  // b.any
    4748:	ldr	x0, [sp, #176]
    474c:	lsl	x0, x0, #1
    4750:	ldr	x1, [sp, #128]
    4754:	add	x0, x1, x0
    4758:	ldrh	w0, [x0]
    475c:	b	4774 <PySequence_Fast@plt+0x26a4>
    4760:	ldr	x0, [sp, #176]
    4764:	lsl	x0, x0, #2
    4768:	ldr	x1, [sp, #128]
    476c:	add	x0, x1, x0
    4770:	ldr	w0, [x0]
    4774:	str	w0, [sp, #100]
    4778:	ldr	w0, [sp, #156]
    477c:	lsl	w0, w0, #4
    4780:	str	w0, [sp, #156]
    4784:	ldr	w0, [sp, #100]
    4788:	cmp	w0, #0x66
    478c:	b.hi	4814 <PySequence_Fast@plt+0x2744>  // b.pmore
    4790:	ldr	w0, [sp, #100]
    4794:	cmp	w0, #0x61
    4798:	b.cs	47e4 <PySequence_Fast@plt+0x2714>  // b.hs, b.nlast
    479c:	ldr	w0, [sp, #100]
    47a0:	cmp	w0, #0x39
    47a4:	b.hi	47b8 <PySequence_Fast@plt+0x26e8>  // b.pmore
    47a8:	ldr	w0, [sp, #100]
    47ac:	cmp	w0, #0x30
    47b0:	b.cs	47cc <PySequence_Fast@plt+0x26fc>  // b.hs, b.nlast
    47b4:	b	4814 <PySequence_Fast@plt+0x2744>
    47b8:	ldr	w0, [sp, #100]
    47bc:	sub	w0, w0, #0x41
    47c0:	cmp	w0, #0x5
    47c4:	b.hi	4814 <PySequence_Fast@plt+0x2744>  // b.pmore
    47c8:	b	47fc <PySequence_Fast@plt+0x272c>
    47cc:	ldr	w0, [sp, #100]
    47d0:	sub	w0, w0, #0x30
    47d4:	ldr	w1, [sp, #156]
    47d8:	orr	w0, w1, w0
    47dc:	str	w0, [sp, #156]
    47e0:	b	4834 <PySequence_Fast@plt+0x2764>
    47e4:	ldr	w0, [sp, #100]
    47e8:	sub	w0, w0, #0x57
    47ec:	ldr	w1, [sp, #156]
    47f0:	orr	w0, w1, w0
    47f4:	str	w0, [sp, #156]
    47f8:	b	4834 <PySequence_Fast@plt+0x2764>
    47fc:	ldr	w0, [sp, #100]
    4800:	sub	w0, w0, #0x37
    4804:	ldr	w1, [sp, #156]
    4808:	orr	w0, w1, w0
    480c:	str	w0, [sp, #156]
    4810:	b	4834 <PySequence_Fast@plt+0x2764>
    4814:	ldr	x0, [sp, #32]
    4818:	sub	x0, x0, #0x5
    481c:	mov	x2, x0
    4820:	ldr	x1, [sp, #40]
    4824:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4828:	add	x0, x0, #0xbf8
    482c:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    4830:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4834:	ldr	x0, [sp, #176]
    4838:	add	x0, x0, #0x1
    483c:	str	x0, [sp, #176]
    4840:	ldr	x1, [sp, #176]
    4844:	ldr	x0, [sp, #32]
    4848:	cmp	x1, x0
    484c:	b.lt	471c <PySequence_Fast@plt+0x264c>  // b.tstop
    4850:	ldr	w1, [sp, #156]
    4854:	mov	w0, #0xdbff                	// #56319
    4858:	cmp	w1, w0
    485c:	b.ls	4894 <PySequence_Fast@plt+0x27c4>  // b.plast
    4860:	ldr	w1, [sp, #156]
    4864:	mov	w0, #0xdfff                	// #57343
    4868:	cmp	w1, w0
    486c:	b.hi	4894 <PySequence_Fast@plt+0x27c4>  // b.pmore
    4870:	ldr	w0, [sp, #52]
    4874:	lsl	w0, w0, #10
    4878:	and	w1, w0, #0xffc00
    487c:	ldr	w0, [sp, #156]
    4880:	and	w0, w0, #0x3ff
    4884:	orr	w0, w1, w0
    4888:	add	w0, w0, #0x10, lsl #12
    488c:	str	w0, [sp, #52]
    4890:	b	48a0 <PySequence_Fast@plt+0x27d0>
    4894:	ldr	x0, [sp, #32]
    4898:	sub	x0, x0, #0x6
    489c:	str	x0, [sp, #32]
    48a0:	ldr	x0, [sp, #160]
    48a4:	cmp	x0, #0x0
    48a8:	b.eq	4940 <PySequence_Fast@plt+0x2870>  // b.none
    48ac:	ldr	x0, [sp, #168]
    48b0:	cmp	x0, #0x0
    48b4:	b.ne	48d0 <PySequence_Fast@plt+0x2800>  // b.any
    48b8:	mov	x0, #0x0                   	// #0
    48bc:	bl	1da0 <PyList_New@plt>
    48c0:	str	x0, [sp, #168]
    48c4:	ldr	x0, [sp, #168]
    48c8:	cmp	x0, #0x0
    48cc:	b.eq	4aa8 <PySequence_Fast@plt+0x29d8>  // b.none
    48d0:	ldr	x1, [sp, #160]
    48d4:	ldr	x0, [sp, #168]
    48d8:	bl	1eb0 <PyList_Append@plt>
    48dc:	cmp	w0, #0x0
    48e0:	b.eq	4914 <PySequence_Fast@plt+0x2844>  // b.none
    48e4:	ldr	x0, [sp, #160]
    48e8:	str	x0, [sp, #80]
    48ec:	ldr	x0, [sp, #80]
    48f0:	cmp	x0, #0x0
    48f4:	b.eq	4ab0 <PySequence_Fast@plt+0x29e0>  // b.none
    48f8:	str	xzr, [sp, #160]
    48fc:	ldr	x2, [sp, #80]
    4900:	mov	w1, #0x225                 	// #549
    4904:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4908:	add	x0, x0, #0xb60
    490c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4910:	b	4ab0 <PySequence_Fast@plt+0x29e0>
    4914:	ldr	x0, [sp, #160]
    4918:	str	x0, [sp, #88]
    491c:	ldr	x0, [sp, #88]
    4920:	cmp	x0, #0x0
    4924:	b.eq	4940 <PySequence_Fast@plt+0x2870>  // b.none
    4928:	str	xzr, [sp, #160]
    492c:	ldr	x2, [sp, #88]
    4930:	mov	w1, #0x225                 	// #549
    4934:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4938:	add	x0, x0, #0xb60
    493c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4940:	add	x0, sp, #0x34
    4944:	mov	x2, #0x1                   	// #1
    4948:	mov	x1, x0
    494c:	mov	w0, #0x4                   	// #4
    4950:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    4954:	str	x0, [sp, #160]
    4958:	ldr	x0, [sp, #160]
    495c:	cmp	x0, #0x0
    4960:	b.eq	4ab8 <PySequence_Fast@plt+0x29e8>  // b.none
    4964:	b	4058 <PySequence_Fast@plt+0x1f88>
    4968:	ldr	x0, [sp, #160]
    496c:	cmp	x0, #0x0
    4970:	b.eq	4980 <PySequence_Fast@plt+0x28b0>  // b.none
    4974:	ldr	x0, [sp, #160]
    4978:	str	x0, [sp, #184]
    497c:	b	4a7c <PySequence_Fast@plt+0x29ac>
    4980:	mov	x1, #0x0                   	// #0
    4984:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4988:	add	x0, x0, #0xb18
    498c:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    4990:	str	x0, [sp, #184]
    4994:	b	4a7c <PySequence_Fast@plt+0x29ac>
    4998:	ldr	x0, [sp, #160]
    499c:	cmp	x0, #0x0
    49a0:	b.eq	4a38 <PySequence_Fast@plt+0x2968>  // b.none
    49a4:	ldr	x0, [sp, #168]
    49a8:	cmp	x0, #0x0
    49ac:	b.ne	49c8 <PySequence_Fast@plt+0x28f8>  // b.any
    49b0:	mov	x0, #0x0                   	// #0
    49b4:	bl	1da0 <PyList_New@plt>
    49b8:	str	x0, [sp, #168]
    49bc:	ldr	x0, [sp, #168]
    49c0:	cmp	x0, #0x0
    49c4:	b.eq	4ac0 <PySequence_Fast@plt+0x29f0>  // b.none
    49c8:	ldr	x1, [sp, #160]
    49cc:	ldr	x0, [sp, #168]
    49d0:	bl	1eb0 <PyList_Append@plt>
    49d4:	cmp	w0, #0x0
    49d8:	b.eq	4a0c <PySequence_Fast@plt+0x293c>  // b.none
    49dc:	ldr	x0, [sp, #160]
    49e0:	str	x0, [sp, #64]
    49e4:	ldr	x0, [sp, #64]
    49e8:	cmp	x0, #0x0
    49ec:	b.eq	4ac8 <PySequence_Fast@plt+0x29f8>  // b.none
    49f0:	str	xzr, [sp, #160]
    49f4:	ldr	x2, [sp, #64]
    49f8:	mov	w1, #0x233                 	// #563
    49fc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4a00:	add	x0, x0, #0xb60
    4a04:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4a08:	b	4ac8 <PySequence_Fast@plt+0x29f8>
    4a0c:	ldr	x0, [sp, #160]
    4a10:	str	x0, [sp, #72]
    4a14:	ldr	x0, [sp, #72]
    4a18:	cmp	x0, #0x0
    4a1c:	b.eq	4a38 <PySequence_Fast@plt+0x2968>  // b.none
    4a20:	str	xzr, [sp, #160]
    4a24:	ldr	x2, [sp, #72]
    4a28:	mov	w1, #0x233                 	// #563
    4a2c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4a30:	add	x0, x0, #0xb60
    4a34:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4a38:	ldr	x0, [sp, #168]
    4a3c:	bl	2348 <PySequence_Fast@plt+0x278>
    4a40:	str	x0, [sp, #184]
    4a44:	ldr	x0, [sp, #184]
    4a48:	cmp	x0, #0x0
    4a4c:	b.eq	4ad0 <PySequence_Fast@plt+0x2a00>  // b.none
    4a50:	ldr	x0, [sp, #168]
    4a54:	str	x0, [sp, #56]
    4a58:	ldr	x0, [sp, #56]
    4a5c:	cmp	x0, #0x0
    4a60:	b.eq	4a7c <PySequence_Fast@plt+0x29ac>  // b.none
    4a64:	str	xzr, [sp, #168]
    4a68:	ldr	x2, [sp, #56]
    4a6c:	mov	w1, #0x238                 	// #568
    4a70:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4a74:	add	x0, x0, #0xb60
    4a78:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4a7c:	ldr	x0, [sp, #16]
    4a80:	ldr	x1, [sp, #32]
    4a84:	str	x1, [x0]
    4a88:	ldr	x0, [sp, #184]
    4a8c:	b	4af4 <PySequence_Fast@plt+0x2a24>
    4a90:	nop
    4a94:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4a98:	nop
    4a9c:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4aa0:	nop
    4aa4:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4aa8:	nop
    4aac:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4ab0:	nop
    4ab4:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4ab8:	nop
    4abc:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4ac0:	nop
    4ac4:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4ac8:	nop
    4acc:	b	4ad4 <PySequence_Fast@plt+0x2a04>
    4ad0:	nop
    4ad4:	ldr	x0, [sp, #16]
    4ad8:	mov	x1, #0xffffffffffffffff    	// #-1
    4adc:	str	x1, [x0]
    4ae0:	ldr	x0, [sp, #168]
    4ae4:	bl	2310 <PySequence_Fast@plt+0x240>
    4ae8:	ldr	x0, [sp, #160]
    4aec:	bl	2310 <PySequence_Fast@plt+0x240>
    4af0:	mov	x0, #0x0                   	// #0
    4af4:	ldp	x29, x30, [sp], #192
    4af8:	ret
    4afc:	stp	x29, x30, [sp, #-80]!
    4b00:	mov	x29, sp
    4b04:	str	x0, [sp, #24]
    4b08:	str	x1, [sp, #16]
    4b0c:	mov	x0, #0xffffffffffffffff    	// #-1
    4b10:	str	x0, [sp, #48]
    4b14:	mov	w0, #0x1                   	// #1
    4b18:	str	w0, [sp, #44]
    4b1c:	add	x2, sp, #0x2c
    4b20:	add	x1, sp, #0x38
    4b24:	add	x0, sp, #0x40
    4b28:	mov	x4, x2
    4b2c:	mov	x3, x1
    4b30:	mov	x2, x0
    4b34:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4b38:	add	x1, x0, #0xde0
    4b3c:	ldr	x0, [sp, #16]
    4b40:	bl	1fa0 <PyArg_ParseTuple@plt>
    4b44:	cmp	w0, #0x0
    4b48:	b.ne	4b54 <PySequence_Fast@plt+0x2a84>  // b.any
    4b4c:	mov	x0, #0x0                   	// #0
    4b50:	b	4bc8 <PySequence_Fast@plt+0x2af8>
    4b54:	ldr	x0, [sp, #64]
    4b58:	ldr	x0, [x0, #8]
    4b5c:	ldr	x0, [x0, #168]
    4b60:	and	x0, x0, #0x10000000
    4b64:	cmp	x0, #0x0
    4b68:	b.eq	4b98 <PySequence_Fast@plt+0x2ac8>  // b.none
    4b6c:	ldr	x0, [sp, #64]
    4b70:	ldr	x1, [sp, #56]
    4b74:	ldr	w2, [sp, #44]
    4b78:	add	x3, sp, #0x30
    4b7c:	bl	3f48 <PySequence_Fast@plt+0x1e78>
    4b80:	str	x0, [sp, #72]
    4b84:	ldr	x0, [sp, #48]
    4b88:	mov	x1, x0
    4b8c:	ldr	x0, [sp, #72]
    4b90:	bl	3e84 <PySequence_Fast@plt+0x1db4>
    4b94:	b	4bc8 <PySequence_Fast@plt+0x2af8>
    4b98:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    4b9c:	ldr	x0, [x0, #3976]
    4ba0:	ldr	x3, [x0]
    4ba4:	ldr	x0, [sp, #64]
    4ba8:	ldr	x0, [x0, #8]
    4bac:	ldr	x0, [x0, #24]
    4bb0:	mov	x2, x0
    4bb4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4bb8:	add	x1, x0, #0xdf0
    4bbc:	mov	x0, x3
    4bc0:	bl	2040 <PyErr_Format@plt>
    4bc4:	mov	x0, #0x0                   	// #0
    4bc8:	ldp	x29, x30, [sp], #80
    4bcc:	ret
    4bd0:	stp	x29, x30, [sp, #-48]!
    4bd4:	mov	x29, sp
    4bd8:	str	x0, [sp, #24]
    4bdc:	str	x1, [sp, #16]
    4be0:	ldr	x0, [sp, #16]
    4be4:	ldr	x0, [x0, #8]
    4be8:	ldr	x0, [x0, #168]
    4bec:	and	x0, x0, #0x10000000
    4bf0:	cmp	x0, #0x0
    4bf4:	b.eq	4c0c <PySequence_Fast@plt+0x2b3c>  // b.none
    4bf8:	ldr	x0, [sp, #16]
    4bfc:	bl	281c <PySequence_Fast@plt+0x74c>
    4c00:	str	x0, [sp, #40]
    4c04:	ldr	x0, [sp, #40]
    4c08:	b	4c3c <PySequence_Fast@plt+0x2b6c>
    4c0c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    4c10:	ldr	x0, [x0, #3976]
    4c14:	ldr	x3, [x0]
    4c18:	ldr	x0, [sp, #16]
    4c1c:	ldr	x0, [x0, #8]
    4c20:	ldr	x0, [x0, #24]
    4c24:	mov	x2, x0
    4c28:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4c2c:	add	x1, x0, #0xdf0
    4c30:	mov	x0, x3
    4c34:	bl	2040 <PyErr_Format@plt>
    4c38:	mov	x0, #0x0                   	// #0
    4c3c:	ldp	x29, x30, [sp], #48
    4c40:	ret
    4c44:	stp	x29, x30, [sp, #-48]!
    4c48:	mov	x29, sp
    4c4c:	str	x0, [sp, #24]
    4c50:	str	x1, [sp, #16]
    4c54:	ldr	x0, [sp, #16]
    4c58:	ldr	x0, [x0, #8]
    4c5c:	ldr	x0, [x0, #168]
    4c60:	and	x0, x0, #0x10000000
    4c64:	cmp	x0, #0x0
    4c68:	b.eq	4c80 <PySequence_Fast@plt+0x2bb0>  // b.none
    4c6c:	ldr	x0, [sp, #16]
    4c70:	bl	2c18 <PySequence_Fast@plt+0xb48>
    4c74:	str	x0, [sp, #40]
    4c78:	ldr	x0, [sp, #40]
    4c7c:	b	4cb0 <PySequence_Fast@plt+0x2be0>
    4c80:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    4c84:	ldr	x0, [x0, #3976]
    4c88:	ldr	x3, [x0]
    4c8c:	ldr	x0, [sp, #16]
    4c90:	ldr	x0, [x0, #8]
    4c94:	ldr	x0, [x0, #24]
    4c98:	mov	x2, x0
    4c9c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4ca0:	add	x1, x0, #0xdf0
    4ca4:	mov	x0, x3
    4ca8:	bl	2040 <PyErr_Format@plt>
    4cac:	mov	x0, #0x0                   	// #0
    4cb0:	ldp	x29, x30, [sp], #48
    4cb4:	ret
    4cb8:	stp	x29, x30, [sp, #-32]!
    4cbc:	mov	x29, sp
    4cc0:	str	x0, [sp, #24]
    4cc4:	ldr	x0, [sp, #24]
    4cc8:	bl	20a0 <PyObject_GC_UnTrack@plt>
    4ccc:	ldr	x0, [sp, #24]
    4cd0:	bl	4e48 <PySequence_Fast@plt+0x2d78>
    4cd4:	ldr	x0, [sp, #24]
    4cd8:	ldr	x0, [x0, #8]
    4cdc:	ldr	x1, [x0, #320]
    4ce0:	ldr	x0, [sp, #24]
    4ce4:	blr	x1
    4ce8:	nop
    4cec:	ldp	x29, x30, [sp], #32
    4cf0:	ret
    4cf4:	stp	x29, x30, [sp, #-80]!
    4cf8:	mov	x29, sp
    4cfc:	str	x0, [sp, #40]
    4d00:	str	x1, [sp, #32]
    4d04:	str	x2, [sp, #24]
    4d08:	ldr	x0, [sp, #40]
    4d0c:	str	x0, [sp, #72]
    4d10:	ldr	x0, [sp, #72]
    4d14:	ldr	x0, [x0, #24]
    4d18:	cmp	x0, #0x0
    4d1c:	b.eq	4d4c <PySequence_Fast@plt+0x2c7c>  // b.none
    4d20:	ldr	x0, [sp, #72]
    4d24:	ldr	x0, [x0, #24]
    4d28:	ldr	x2, [sp, #32]
    4d2c:	ldr	x1, [sp, #24]
    4d30:	blr	x2
    4d34:	str	w0, [sp, #68]
    4d38:	ldr	w0, [sp, #68]
    4d3c:	cmp	w0, #0x0
    4d40:	b.eq	4d4c <PySequence_Fast@plt+0x2c7c>  // b.none
    4d44:	ldr	w0, [sp, #68]
    4d48:	b	4e40 <PySequence_Fast@plt+0x2d70>
    4d4c:	ldr	x0, [sp, #72]
    4d50:	ldr	x0, [x0, #32]
    4d54:	cmp	x0, #0x0
    4d58:	b.eq	4d88 <PySequence_Fast@plt+0x2cb8>  // b.none
    4d5c:	ldr	x0, [sp, #72]
    4d60:	ldr	x0, [x0, #32]
    4d64:	ldr	x2, [sp, #32]
    4d68:	ldr	x1, [sp, #24]
    4d6c:	blr	x2
    4d70:	str	w0, [sp, #64]
    4d74:	ldr	w0, [sp, #64]
    4d78:	cmp	w0, #0x0
    4d7c:	b.eq	4d88 <PySequence_Fast@plt+0x2cb8>  // b.none
    4d80:	ldr	w0, [sp, #64]
    4d84:	b	4e40 <PySequence_Fast@plt+0x2d70>
    4d88:	ldr	x0, [sp, #72]
    4d8c:	ldr	x0, [x0, #40]
    4d90:	cmp	x0, #0x0
    4d94:	b.eq	4dc4 <PySequence_Fast@plt+0x2cf4>  // b.none
    4d98:	ldr	x0, [sp, #72]
    4d9c:	ldr	x0, [x0, #40]
    4da0:	ldr	x2, [sp, #32]
    4da4:	ldr	x1, [sp, #24]
    4da8:	blr	x2
    4dac:	str	w0, [sp, #60]
    4db0:	ldr	w0, [sp, #60]
    4db4:	cmp	w0, #0x0
    4db8:	b.eq	4dc4 <PySequence_Fast@plt+0x2cf4>  // b.none
    4dbc:	ldr	w0, [sp, #60]
    4dc0:	b	4e40 <PySequence_Fast@plt+0x2d70>
    4dc4:	ldr	x0, [sp, #72]
    4dc8:	ldr	x0, [x0, #48]
    4dcc:	cmp	x0, #0x0
    4dd0:	b.eq	4e00 <PySequence_Fast@plt+0x2d30>  // b.none
    4dd4:	ldr	x0, [sp, #72]
    4dd8:	ldr	x0, [x0, #48]
    4ddc:	ldr	x2, [sp, #32]
    4de0:	ldr	x1, [sp, #24]
    4de4:	blr	x2
    4de8:	str	w0, [sp, #56]
    4dec:	ldr	w0, [sp, #56]
    4df0:	cmp	w0, #0x0
    4df4:	b.eq	4e00 <PySequence_Fast@plt+0x2d30>  // b.none
    4df8:	ldr	w0, [sp, #56]
    4dfc:	b	4e40 <PySequence_Fast@plt+0x2d70>
    4e00:	ldr	x0, [sp, #72]
    4e04:	ldr	x0, [x0, #56]
    4e08:	cmp	x0, #0x0
    4e0c:	b.eq	4e3c <PySequence_Fast@plt+0x2d6c>  // b.none
    4e10:	ldr	x0, [sp, #72]
    4e14:	ldr	x0, [x0, #56]
    4e18:	ldr	x2, [sp, #32]
    4e1c:	ldr	x1, [sp, #24]
    4e20:	blr	x2
    4e24:	str	w0, [sp, #52]
    4e28:	ldr	w0, [sp, #52]
    4e2c:	cmp	w0, #0x0
    4e30:	b.eq	4e3c <PySequence_Fast@plt+0x2d6c>  // b.none
    4e34:	ldr	w0, [sp, #52]
    4e38:	b	4e40 <PySequence_Fast@plt+0x2d70>
    4e3c:	mov	w0, #0x0                   	// #0
    4e40:	ldp	x29, x30, [sp], #80
    4e44:	ret
    4e48:	stp	x29, x30, [sp, #-96]!
    4e4c:	mov	x29, sp
    4e50:	str	x0, [sp, #24]
    4e54:	ldr	x0, [sp, #24]
    4e58:	str	x0, [sp, #88]
    4e5c:	ldr	x0, [sp, #88]
    4e60:	ldr	x0, [x0, #24]
    4e64:	str	x0, [sp, #80]
    4e68:	ldr	x0, [sp, #80]
    4e6c:	cmp	x0, #0x0
    4e70:	b.eq	4e90 <PySequence_Fast@plt+0x2dc0>  // b.none
    4e74:	ldr	x0, [sp, #88]
    4e78:	str	xzr, [x0, #24]
    4e7c:	ldr	x2, [sp, #80]
    4e80:	mov	w1, #0x2b6                 	// #694
    4e84:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4e88:	add	x0, x0, #0xb60
    4e8c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4e90:	ldr	x0, [sp, #88]
    4e94:	ldr	x0, [x0, #32]
    4e98:	str	x0, [sp, #72]
    4e9c:	ldr	x0, [sp, #72]
    4ea0:	cmp	x0, #0x0
    4ea4:	b.eq	4ec4 <PySequence_Fast@plt+0x2df4>  // b.none
    4ea8:	ldr	x0, [sp, #88]
    4eac:	str	xzr, [x0, #32]
    4eb0:	ldr	x2, [sp, #72]
    4eb4:	mov	w1, #0x2b7                 	// #695
    4eb8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4ebc:	add	x0, x0, #0xb60
    4ec0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4ec4:	ldr	x0, [sp, #88]
    4ec8:	ldr	x0, [x0, #40]
    4ecc:	str	x0, [sp, #64]
    4ed0:	ldr	x0, [sp, #64]
    4ed4:	cmp	x0, #0x0
    4ed8:	b.eq	4ef8 <PySequence_Fast@plt+0x2e28>  // b.none
    4edc:	ldr	x0, [sp, #88]
    4ee0:	str	xzr, [x0, #40]
    4ee4:	ldr	x2, [sp, #64]
    4ee8:	mov	w1, #0x2b8                 	// #696
    4eec:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4ef0:	add	x0, x0, #0xb60
    4ef4:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4ef8:	ldr	x0, [sp, #88]
    4efc:	ldr	x0, [x0, #48]
    4f00:	str	x0, [sp, #56]
    4f04:	ldr	x0, [sp, #56]
    4f08:	cmp	x0, #0x0
    4f0c:	b.eq	4f2c <PySequence_Fast@plt+0x2e5c>  // b.none
    4f10:	ldr	x0, [sp, #88]
    4f14:	str	xzr, [x0, #48]
    4f18:	ldr	x2, [sp, #56]
    4f1c:	mov	w1, #0x2b9                 	// #697
    4f20:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4f24:	add	x0, x0, #0xb60
    4f28:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4f2c:	ldr	x0, [sp, #88]
    4f30:	ldr	x0, [x0, #56]
    4f34:	str	x0, [sp, #48]
    4f38:	ldr	x0, [sp, #48]
    4f3c:	cmp	x0, #0x0
    4f40:	b.eq	4f60 <PySequence_Fast@plt+0x2e90>  // b.none
    4f44:	ldr	x0, [sp, #88]
    4f48:	str	xzr, [x0, #56]
    4f4c:	ldr	x2, [sp, #48]
    4f50:	mov	w1, #0x2ba                 	// #698
    4f54:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4f58:	add	x0, x0, #0xb60
    4f5c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4f60:	ldr	x0, [sp, #88]
    4f64:	ldr	x0, [x0, #64]
    4f68:	str	x0, [sp, #40]
    4f6c:	ldr	x0, [sp, #40]
    4f70:	cmp	x0, #0x0
    4f74:	b.eq	4f94 <PySequence_Fast@plt+0x2ec4>  // b.none
    4f78:	ldr	x0, [sp, #88]
    4f7c:	str	xzr, [x0, #64]
    4f80:	ldr	x2, [sp, #40]
    4f84:	mov	w1, #0x2bb                 	// #699
    4f88:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    4f8c:	add	x0, x0, #0xb60
    4f90:	bl	2298 <PySequence_Fast@plt+0x1c8>
    4f94:	mov	w0, #0x0                   	// #0
    4f98:	ldp	x29, x30, [sp], #96
    4f9c:	ret
    4fa0:	stp	x29, x30, [sp, #-160]!
    4fa4:	mov	x29, sp
    4fa8:	str	x0, [sp, #40]
    4fac:	str	x1, [sp, #32]
    4fb0:	str	x2, [sp, #24]
    4fb4:	str	x3, [sp, #16]
    4fb8:	str	xzr, [sp, #152]
    4fbc:	str	xzr, [sp, #144]
    4fc0:	str	xzr, [sp, #136]
    4fc4:	ldr	x0, [sp, #40]
    4fc8:	ldr	x1, [x0, #32]
    4fcc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    4fd0:	ldr	x0, [x0, #4016]
    4fd4:	cmp	x1, x0
    4fd8:	cset	w0, ne  // ne = any
    4fdc:	and	w0, w0, #0xff
    4fe0:	str	w0, [sp, #132]
    4fe4:	ldr	x0, [sp, #32]
    4fe8:	ldrb	w0, [x0, #32]
    4fec:	and	w0, w0, #0xffffff80
    4ff0:	and	w0, w0, #0xff
    4ff4:	cmp	w0, #0x0
    4ff8:	b.ne	5014 <PySequence_Fast@plt+0x2f44>  // b.any
    4ffc:	ldr	x0, [sp, #32]
    5000:	bl	1db0 <_PyUnicode_Ready@plt>
    5004:	cmn	w0, #0x1
    5008:	b.ne	5014 <PySequence_Fast@plt+0x2f44>  // b.any
    500c:	mov	x0, #0x0                   	// #0
    5010:	b	601c <PySequence_Fast@plt+0x3f4c>
    5014:	ldr	x0, [sp, #32]
    5018:	ldrb	w0, [x0, #32]
    501c:	and	w0, w0, #0x20
    5020:	and	w0, w0, #0xff
    5024:	cmp	w0, #0x0
    5028:	b.eq	505c <PySequence_Fast@plt+0x2f8c>  // b.none
    502c:	ldr	x0, [sp, #32]
    5030:	ldrb	w0, [x0, #32]
    5034:	and	w0, w0, #0x40
    5038:	and	w0, w0, #0xff
    503c:	cmp	w0, #0x0
    5040:	b.eq	5050 <PySequence_Fast@plt+0x2f80>  // b.none
    5044:	ldr	x0, [sp, #32]
    5048:	add	x0, x0, #0x30
    504c:	b	5064 <PySequence_Fast@plt+0x2f94>
    5050:	ldr	x0, [sp, #32]
    5054:	add	x0, x0, #0x48
    5058:	b	5064 <PySequence_Fast@plt+0x2f94>
    505c:	ldr	x0, [sp, #32]
    5060:	ldr	x0, [x0, #72]
    5064:	str	x0, [sp, #120]
    5068:	ldr	x0, [sp, #32]
    506c:	ldrb	w0, [x0, #32]
    5070:	ubfx	x0, x0, #2, #3
    5074:	and	w0, w0, #0xff
    5078:	str	w0, [sp, #116]
    507c:	ldr	x0, [sp, #32]
    5080:	ldr	x0, [x0, #16]
    5084:	sub	x0, x0, #0x1
    5088:	str	x0, [sp, #104]
    508c:	ldr	w0, [sp, #132]
    5090:	cmp	w0, #0x0
    5094:	b.eq	50a8 <PySequence_Fast@plt+0x2fd8>  // b.none
    5098:	mov	x0, #0x0                   	// #0
    509c:	bl	1da0 <PyList_New@plt>
    50a0:	str	x0, [sp, #144]
    50a4:	b	50b0 <PySequence_Fast@plt+0x2fe0>
    50a8:	bl	1fd0 <PyDict_New@plt>
    50ac:	str	x0, [sp, #144]
    50b0:	ldr	x0, [sp, #144]
    50b4:	cmp	x0, #0x0
    50b8:	b.ne	50d0 <PySequence_Fast@plt+0x3000>  // b.any
    50bc:	mov	x0, #0x0                   	// #0
    50c0:	b	601c <PySequence_Fast@plt+0x3f4c>
    50c4:	ldr	x0, [sp, #24]
    50c8:	add	x0, x0, #0x1
    50cc:	str	x0, [sp, #24]
    50d0:	ldr	x1, [sp, #24]
    50d4:	ldr	x0, [sp, #104]
    50d8:	cmp	x1, x0
    50dc:	b.gt	52a0 <PySequence_Fast@plt+0x31d0>
    50e0:	ldr	w0, [sp, #116]
    50e4:	cmp	w0, #0x1
    50e8:	b.ne	5108 <PySequence_Fast@plt+0x3038>  // b.any
    50ec:	ldr	x0, [sp, #24]
    50f0:	ldr	x1, [sp, #120]
    50f4:	add	x0, x1, x0
    50f8:	ldrb	w0, [x0]
    50fc:	cmp	w0, #0x20
    5100:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5104:	b	5150 <PySequence_Fast@plt+0x3080>
    5108:	ldr	w0, [sp, #116]
    510c:	cmp	w0, #0x2
    5110:	b.ne	5134 <PySequence_Fast@plt+0x3064>  // b.any
    5114:	ldr	x0, [sp, #24]
    5118:	lsl	x0, x0, #1
    511c:	ldr	x1, [sp, #120]
    5120:	add	x0, x1, x0
    5124:	ldrh	w0, [x0]
    5128:	cmp	w0, #0x20
    512c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5130:	b	5150 <PySequence_Fast@plt+0x3080>
    5134:	ldr	x0, [sp, #24]
    5138:	lsl	x0, x0, #2
    513c:	ldr	x1, [sp, #120]
    5140:	add	x0, x1, x0
    5144:	ldr	w0, [x0]
    5148:	cmp	w0, #0x20
    514c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5150:	ldr	w0, [sp, #116]
    5154:	cmp	w0, #0x1
    5158:	b.ne	5178 <PySequence_Fast@plt+0x30a8>  // b.any
    515c:	ldr	x0, [sp, #24]
    5160:	ldr	x1, [sp, #120]
    5164:	add	x0, x1, x0
    5168:	ldrb	w0, [x0]
    516c:	cmp	w0, #0x9
    5170:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5174:	b	51c0 <PySequence_Fast@plt+0x30f0>
    5178:	ldr	w0, [sp, #116]
    517c:	cmp	w0, #0x2
    5180:	b.ne	51a4 <PySequence_Fast@plt+0x30d4>  // b.any
    5184:	ldr	x0, [sp, #24]
    5188:	lsl	x0, x0, #1
    518c:	ldr	x1, [sp, #120]
    5190:	add	x0, x1, x0
    5194:	ldrh	w0, [x0]
    5198:	cmp	w0, #0x9
    519c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    51a0:	b	51c0 <PySequence_Fast@plt+0x30f0>
    51a4:	ldr	x0, [sp, #24]
    51a8:	lsl	x0, x0, #2
    51ac:	ldr	x1, [sp, #120]
    51b0:	add	x0, x1, x0
    51b4:	ldr	w0, [x0]
    51b8:	cmp	w0, #0x9
    51bc:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    51c0:	ldr	w0, [sp, #116]
    51c4:	cmp	w0, #0x1
    51c8:	b.ne	51e8 <PySequence_Fast@plt+0x3118>  // b.any
    51cc:	ldr	x0, [sp, #24]
    51d0:	ldr	x1, [sp, #120]
    51d4:	add	x0, x1, x0
    51d8:	ldrb	w0, [x0]
    51dc:	cmp	w0, #0xa
    51e0:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    51e4:	b	5230 <PySequence_Fast@plt+0x3160>
    51e8:	ldr	w0, [sp, #116]
    51ec:	cmp	w0, #0x2
    51f0:	b.ne	5214 <PySequence_Fast@plt+0x3144>  // b.any
    51f4:	ldr	x0, [sp, #24]
    51f8:	lsl	x0, x0, #1
    51fc:	ldr	x1, [sp, #120]
    5200:	add	x0, x1, x0
    5204:	ldrh	w0, [x0]
    5208:	cmp	w0, #0xa
    520c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5210:	b	5230 <PySequence_Fast@plt+0x3160>
    5214:	ldr	x0, [sp, #24]
    5218:	lsl	x0, x0, #2
    521c:	ldr	x1, [sp, #120]
    5220:	add	x0, x1, x0
    5224:	ldr	w0, [x0]
    5228:	cmp	w0, #0xa
    522c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5230:	ldr	w0, [sp, #116]
    5234:	cmp	w0, #0x1
    5238:	b.ne	5258 <PySequence_Fast@plt+0x3188>  // b.any
    523c:	ldr	x0, [sp, #24]
    5240:	ldr	x1, [sp, #120]
    5244:	add	x0, x1, x0
    5248:	ldrb	w0, [x0]
    524c:	cmp	w0, #0xd
    5250:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5254:	b	52a0 <PySequence_Fast@plt+0x31d0>
    5258:	ldr	w0, [sp, #116]
    525c:	cmp	w0, #0x2
    5260:	b.ne	5284 <PySequence_Fast@plt+0x31b4>  // b.any
    5264:	ldr	x0, [sp, #24]
    5268:	lsl	x0, x0, #1
    526c:	ldr	x1, [sp, #120]
    5270:	add	x0, x1, x0
    5274:	ldrh	w0, [x0]
    5278:	cmp	w0, #0xd
    527c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    5280:	b	52a0 <PySequence_Fast@plt+0x31d0>
    5284:	ldr	x0, [sp, #24]
    5288:	lsl	x0, x0, #2
    528c:	ldr	x1, [sp, #120]
    5290:	add	x0, x1, x0
    5294:	ldr	w0, [x0]
    5298:	cmp	w0, #0xd
    529c:	b.eq	50c4 <PySequence_Fast@plt+0x2ff4>  // b.none
    52a0:	ldr	x1, [sp, #24]
    52a4:	ldr	x0, [sp, #104]
    52a8:	cmp	x1, x0
    52ac:	b.gt	5320 <PySequence_Fast@plt+0x3250>
    52b0:	ldr	w0, [sp, #116]
    52b4:	cmp	w0, #0x1
    52b8:	b.ne	52d8 <PySequence_Fast@plt+0x3208>  // b.any
    52bc:	ldr	x0, [sp, #24]
    52c0:	ldr	x1, [sp, #120]
    52c4:	add	x0, x1, x0
    52c8:	ldrb	w0, [x0]
    52cc:	cmp	w0, #0x7d
    52d0:	b.ne	5320 <PySequence_Fast@plt+0x3250>  // b.any
    52d4:	b	5f30 <PySequence_Fast@plt+0x3e60>
    52d8:	ldr	w0, [sp, #116]
    52dc:	cmp	w0, #0x2
    52e0:	b.ne	5304 <PySequence_Fast@plt+0x3234>  // b.any
    52e4:	ldr	x0, [sp, #24]
    52e8:	lsl	x0, x0, #1
    52ec:	ldr	x1, [sp, #120]
    52f0:	add	x0, x1, x0
    52f4:	ldrh	w0, [x0]
    52f8:	cmp	w0, #0x7d
    52fc:	b.ne	5320 <PySequence_Fast@plt+0x3250>  // b.any
    5300:	b	5f30 <PySequence_Fast@plt+0x3e60>
    5304:	ldr	x0, [sp, #24]
    5308:	lsl	x0, x0, #2
    530c:	ldr	x1, [sp, #120]
    5310:	add	x0, x1, x0
    5314:	ldr	w0, [x0]
    5318:	cmp	w0, #0x7d
    531c:	b.eq	5f30 <PySequence_Fast@plt+0x3e60>  // b.none
    5320:	ldr	x1, [sp, #24]
    5324:	ldr	x0, [sp, #104]
    5328:	cmp	x1, x0
    532c:	b.gt	53a0 <PySequence_Fast@plt+0x32d0>
    5330:	ldr	w0, [sp, #116]
    5334:	cmp	w0, #0x1
    5338:	b.ne	5358 <PySequence_Fast@plt+0x3288>  // b.any
    533c:	ldr	x0, [sp, #24]
    5340:	ldr	x1, [sp, #120]
    5344:	add	x0, x1, x0
    5348:	ldrb	w0, [x0]
    534c:	cmp	w0, #0x22
    5350:	b.ne	53a0 <PySequence_Fast@plt+0x32d0>  // b.any
    5354:	b	53b8 <PySequence_Fast@plt+0x32e8>
    5358:	ldr	w0, [sp, #116]
    535c:	cmp	w0, #0x2
    5360:	b.ne	5384 <PySequence_Fast@plt+0x32b4>  // b.any
    5364:	ldr	x0, [sp, #24]
    5368:	lsl	x0, x0, #1
    536c:	ldr	x1, [sp, #120]
    5370:	add	x0, x1, x0
    5374:	ldrh	w0, [x0]
    5378:	cmp	w0, #0x22
    537c:	b.ne	53a0 <PySequence_Fast@plt+0x32d0>  // b.any
    5380:	b	53b8 <PySequence_Fast@plt+0x32e8>
    5384:	ldr	x0, [sp, #24]
    5388:	lsl	x0, x0, #2
    538c:	ldr	x1, [sp, #120]
    5390:	add	x0, x1, x0
    5394:	ldr	w0, [x0]
    5398:	cmp	w0, #0x22
    539c:	b.eq	53b8 <PySequence_Fast@plt+0x32e8>  // b.none
    53a0:	ldr	x2, [sp, #24]
    53a4:	ldr	x1, [sp, #32]
    53a8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    53ac:	add	x0, x0, #0xee0
    53b0:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    53b4:	b	6000 <PySequence_Fast@plt+0x3f30>
    53b8:	ldr	x0, [sp, #24]
    53bc:	add	x1, x0, #0x1
    53c0:	ldr	x0, [sp, #40]
    53c4:	ldrsb	w0, [x0, #16]
    53c8:	mov	w2, w0
    53cc:	add	x0, sp, #0x30
    53d0:	mov	x3, x0
    53d4:	ldr	x0, [sp, #32]
    53d8:	bl	3f48 <PySequence_Fast@plt+0x1e78>
    53dc:	str	x0, [sp, #136]
    53e0:	ldr	x0, [sp, #136]
    53e4:	cmp	x0, #0x0
    53e8:	b.eq	5fd4 <PySequence_Fast@plt+0x3f04>  // b.none
    53ec:	ldr	x0, [sp, #40]
    53f0:	ldr	x0, [x0, #64]
    53f4:	ldr	x1, [sp, #136]
    53f8:	bl	20b0 <PyDict_GetItemWithError@plt>
    53fc:	str	x0, [sp, #96]
    5400:	ldr	x0, [sp, #96]
    5404:	cmp	x0, #0x0
    5408:	b.eq	5434 <PySequence_Fast@plt+0x3364>  // b.none
    540c:	ldr	x0, [sp, #96]
    5410:	bl	2270 <PySequence_Fast@plt+0x1a0>
    5414:	ldr	x2, [sp, #136]
    5418:	mov	w1, #0x2f3                 	// #755
    541c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5420:	add	x0, x0, #0xb60
    5424:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5428:	ldr	x0, [sp, #96]
    542c:	str	x0, [sp, #136]
    5430:	b	545c <PySequence_Fast@plt+0x338c>
    5434:	bl	1f40 <PyErr_Occurred@plt>
    5438:	cmp	x0, #0x0
    543c:	b.ne	5fdc <PySequence_Fast@plt+0x3f0c>  // b.any
    5440:	ldr	x0, [sp, #40]
    5444:	ldr	x0, [x0, #64]
    5448:	ldr	x2, [sp, #136]
    544c:	ldr	x1, [sp, #136]
    5450:	bl	2020 <PyDict_SetItem@plt>
    5454:	cmp	w0, #0x0
    5458:	b.lt	5fe4 <PySequence_Fast@plt+0x3f14>  // b.tstop
    545c:	ldr	x0, [sp, #48]
    5460:	str	x0, [sp, #24]
    5464:	b	5474 <PySequence_Fast@plt+0x33a4>
    5468:	ldr	x0, [sp, #24]
    546c:	add	x0, x0, #0x1
    5470:	str	x0, [sp, #24]
    5474:	ldr	x1, [sp, #24]
    5478:	ldr	x0, [sp, #104]
    547c:	cmp	x1, x0
    5480:	b.gt	5644 <PySequence_Fast@plt+0x3574>
    5484:	ldr	w0, [sp, #116]
    5488:	cmp	w0, #0x1
    548c:	b.ne	54ac <PySequence_Fast@plt+0x33dc>  // b.any
    5490:	ldr	x0, [sp, #24]
    5494:	ldr	x1, [sp, #120]
    5498:	add	x0, x1, x0
    549c:	ldrb	w0, [x0]
    54a0:	cmp	w0, #0x20
    54a4:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    54a8:	b	54f4 <PySequence_Fast@plt+0x3424>
    54ac:	ldr	w0, [sp, #116]
    54b0:	cmp	w0, #0x2
    54b4:	b.ne	54d8 <PySequence_Fast@plt+0x3408>  // b.any
    54b8:	ldr	x0, [sp, #24]
    54bc:	lsl	x0, x0, #1
    54c0:	ldr	x1, [sp, #120]
    54c4:	add	x0, x1, x0
    54c8:	ldrh	w0, [x0]
    54cc:	cmp	w0, #0x20
    54d0:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    54d4:	b	54f4 <PySequence_Fast@plt+0x3424>
    54d8:	ldr	x0, [sp, #24]
    54dc:	lsl	x0, x0, #2
    54e0:	ldr	x1, [sp, #120]
    54e4:	add	x0, x1, x0
    54e8:	ldr	w0, [x0]
    54ec:	cmp	w0, #0x20
    54f0:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    54f4:	ldr	w0, [sp, #116]
    54f8:	cmp	w0, #0x1
    54fc:	b.ne	551c <PySequence_Fast@plt+0x344c>  // b.any
    5500:	ldr	x0, [sp, #24]
    5504:	ldr	x1, [sp, #120]
    5508:	add	x0, x1, x0
    550c:	ldrb	w0, [x0]
    5510:	cmp	w0, #0x9
    5514:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5518:	b	5564 <PySequence_Fast@plt+0x3494>
    551c:	ldr	w0, [sp, #116]
    5520:	cmp	w0, #0x2
    5524:	b.ne	5548 <PySequence_Fast@plt+0x3478>  // b.any
    5528:	ldr	x0, [sp, #24]
    552c:	lsl	x0, x0, #1
    5530:	ldr	x1, [sp, #120]
    5534:	add	x0, x1, x0
    5538:	ldrh	w0, [x0]
    553c:	cmp	w0, #0x9
    5540:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5544:	b	5564 <PySequence_Fast@plt+0x3494>
    5548:	ldr	x0, [sp, #24]
    554c:	lsl	x0, x0, #2
    5550:	ldr	x1, [sp, #120]
    5554:	add	x0, x1, x0
    5558:	ldr	w0, [x0]
    555c:	cmp	w0, #0x9
    5560:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5564:	ldr	w0, [sp, #116]
    5568:	cmp	w0, #0x1
    556c:	b.ne	558c <PySequence_Fast@plt+0x34bc>  // b.any
    5570:	ldr	x0, [sp, #24]
    5574:	ldr	x1, [sp, #120]
    5578:	add	x0, x1, x0
    557c:	ldrb	w0, [x0]
    5580:	cmp	w0, #0xa
    5584:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5588:	b	55d4 <PySequence_Fast@plt+0x3504>
    558c:	ldr	w0, [sp, #116]
    5590:	cmp	w0, #0x2
    5594:	b.ne	55b8 <PySequence_Fast@plt+0x34e8>  // b.any
    5598:	ldr	x0, [sp, #24]
    559c:	lsl	x0, x0, #1
    55a0:	ldr	x1, [sp, #120]
    55a4:	add	x0, x1, x0
    55a8:	ldrh	w0, [x0]
    55ac:	cmp	w0, #0xa
    55b0:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    55b4:	b	55d4 <PySequence_Fast@plt+0x3504>
    55b8:	ldr	x0, [sp, #24]
    55bc:	lsl	x0, x0, #2
    55c0:	ldr	x1, [sp, #120]
    55c4:	add	x0, x1, x0
    55c8:	ldr	w0, [x0]
    55cc:	cmp	w0, #0xa
    55d0:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    55d4:	ldr	w0, [sp, #116]
    55d8:	cmp	w0, #0x1
    55dc:	b.ne	55fc <PySequence_Fast@plt+0x352c>  // b.any
    55e0:	ldr	x0, [sp, #24]
    55e4:	ldr	x1, [sp, #120]
    55e8:	add	x0, x1, x0
    55ec:	ldrb	w0, [x0]
    55f0:	cmp	w0, #0xd
    55f4:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    55f8:	b	5644 <PySequence_Fast@plt+0x3574>
    55fc:	ldr	w0, [sp, #116]
    5600:	cmp	w0, #0x2
    5604:	b.ne	5628 <PySequence_Fast@plt+0x3558>  // b.any
    5608:	ldr	x0, [sp, #24]
    560c:	lsl	x0, x0, #1
    5610:	ldr	x1, [sp, #120]
    5614:	add	x0, x1, x0
    5618:	ldrh	w0, [x0]
    561c:	cmp	w0, #0xd
    5620:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5624:	b	5644 <PySequence_Fast@plt+0x3574>
    5628:	ldr	x0, [sp, #24]
    562c:	lsl	x0, x0, #2
    5630:	ldr	x1, [sp, #120]
    5634:	add	x0, x1, x0
    5638:	ldr	w0, [x0]
    563c:	cmp	w0, #0xd
    5640:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    5644:	ldr	x1, [sp, #24]
    5648:	ldr	x0, [sp, #104]
    564c:	cmp	x1, x0
    5650:	b.gt	56c4 <PySequence_Fast@plt+0x35f4>
    5654:	ldr	w0, [sp, #116]
    5658:	cmp	w0, #0x1
    565c:	b.ne	567c <PySequence_Fast@plt+0x35ac>  // b.any
    5660:	ldr	x0, [sp, #24]
    5664:	ldr	x1, [sp, #120]
    5668:	add	x0, x1, x0
    566c:	ldrb	w0, [x0]
    5670:	cmp	w0, #0x3a
    5674:	b.ne	56c4 <PySequence_Fast@plt+0x35f4>  // b.any
    5678:	b	56dc <PySequence_Fast@plt+0x360c>
    567c:	ldr	w0, [sp, #116]
    5680:	cmp	w0, #0x2
    5684:	b.ne	56a8 <PySequence_Fast@plt+0x35d8>  // b.any
    5688:	ldr	x0, [sp, #24]
    568c:	lsl	x0, x0, #1
    5690:	ldr	x1, [sp, #120]
    5694:	add	x0, x1, x0
    5698:	ldrh	w0, [x0]
    569c:	cmp	w0, #0x3a
    56a0:	b.ne	56c4 <PySequence_Fast@plt+0x35f4>  // b.any
    56a4:	b	56dc <PySequence_Fast@plt+0x360c>
    56a8:	ldr	x0, [sp, #24]
    56ac:	lsl	x0, x0, #2
    56b0:	ldr	x1, [sp, #120]
    56b4:	add	x0, x1, x0
    56b8:	ldr	w0, [x0]
    56bc:	cmp	w0, #0x3a
    56c0:	b.eq	56dc <PySequence_Fast@plt+0x360c>  // b.none
    56c4:	ldr	x2, [sp, #24]
    56c8:	ldr	x1, [sp, #32]
    56cc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    56d0:	add	x0, x0, #0xf18
    56d4:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    56d8:	b	6000 <PySequence_Fast@plt+0x3f30>
    56dc:	ldr	x0, [sp, #24]
    56e0:	add	x0, x0, #0x1
    56e4:	str	x0, [sp, #24]
    56e8:	b	56f8 <PySequence_Fast@plt+0x3628>
    56ec:	ldr	x0, [sp, #24]
    56f0:	add	x0, x0, #0x1
    56f4:	str	x0, [sp, #24]
    56f8:	ldr	x1, [sp, #24]
    56fc:	ldr	x0, [sp, #104]
    5700:	cmp	x1, x0
    5704:	b.gt	58c8 <PySequence_Fast@plt+0x37f8>
    5708:	ldr	w0, [sp, #116]
    570c:	cmp	w0, #0x1
    5710:	b.ne	5730 <PySequence_Fast@plt+0x3660>  // b.any
    5714:	ldr	x0, [sp, #24]
    5718:	ldr	x1, [sp, #120]
    571c:	add	x0, x1, x0
    5720:	ldrb	w0, [x0]
    5724:	cmp	w0, #0x20
    5728:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    572c:	b	5778 <PySequence_Fast@plt+0x36a8>
    5730:	ldr	w0, [sp, #116]
    5734:	cmp	w0, #0x2
    5738:	b.ne	575c <PySequence_Fast@plt+0x368c>  // b.any
    573c:	ldr	x0, [sp, #24]
    5740:	lsl	x0, x0, #1
    5744:	ldr	x1, [sp, #120]
    5748:	add	x0, x1, x0
    574c:	ldrh	w0, [x0]
    5750:	cmp	w0, #0x20
    5754:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    5758:	b	5778 <PySequence_Fast@plt+0x36a8>
    575c:	ldr	x0, [sp, #24]
    5760:	lsl	x0, x0, #2
    5764:	ldr	x1, [sp, #120]
    5768:	add	x0, x1, x0
    576c:	ldr	w0, [x0]
    5770:	cmp	w0, #0x20
    5774:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    5778:	ldr	w0, [sp, #116]
    577c:	cmp	w0, #0x1
    5780:	b.ne	57a0 <PySequence_Fast@plt+0x36d0>  // b.any
    5784:	ldr	x0, [sp, #24]
    5788:	ldr	x1, [sp, #120]
    578c:	add	x0, x1, x0
    5790:	ldrb	w0, [x0]
    5794:	cmp	w0, #0x9
    5798:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    579c:	b	57e8 <PySequence_Fast@plt+0x3718>
    57a0:	ldr	w0, [sp, #116]
    57a4:	cmp	w0, #0x2
    57a8:	b.ne	57cc <PySequence_Fast@plt+0x36fc>  // b.any
    57ac:	ldr	x0, [sp, #24]
    57b0:	lsl	x0, x0, #1
    57b4:	ldr	x1, [sp, #120]
    57b8:	add	x0, x1, x0
    57bc:	ldrh	w0, [x0]
    57c0:	cmp	w0, #0x9
    57c4:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    57c8:	b	57e8 <PySequence_Fast@plt+0x3718>
    57cc:	ldr	x0, [sp, #24]
    57d0:	lsl	x0, x0, #2
    57d4:	ldr	x1, [sp, #120]
    57d8:	add	x0, x1, x0
    57dc:	ldr	w0, [x0]
    57e0:	cmp	w0, #0x9
    57e4:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    57e8:	ldr	w0, [sp, #116]
    57ec:	cmp	w0, #0x1
    57f0:	b.ne	5810 <PySequence_Fast@plt+0x3740>  // b.any
    57f4:	ldr	x0, [sp, #24]
    57f8:	ldr	x1, [sp, #120]
    57fc:	add	x0, x1, x0
    5800:	ldrb	w0, [x0]
    5804:	cmp	w0, #0xa
    5808:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    580c:	b	5858 <PySequence_Fast@plt+0x3788>
    5810:	ldr	w0, [sp, #116]
    5814:	cmp	w0, #0x2
    5818:	b.ne	583c <PySequence_Fast@plt+0x376c>  // b.any
    581c:	ldr	x0, [sp, #24]
    5820:	lsl	x0, x0, #1
    5824:	ldr	x1, [sp, #120]
    5828:	add	x0, x1, x0
    582c:	ldrh	w0, [x0]
    5830:	cmp	w0, #0xa
    5834:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    5838:	b	5858 <PySequence_Fast@plt+0x3788>
    583c:	ldr	x0, [sp, #24]
    5840:	lsl	x0, x0, #2
    5844:	ldr	x1, [sp, #120]
    5848:	add	x0, x1, x0
    584c:	ldr	w0, [x0]
    5850:	cmp	w0, #0xa
    5854:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    5858:	ldr	w0, [sp, #116]
    585c:	cmp	w0, #0x1
    5860:	b.ne	5880 <PySequence_Fast@plt+0x37b0>  // b.any
    5864:	ldr	x0, [sp, #24]
    5868:	ldr	x1, [sp, #120]
    586c:	add	x0, x1, x0
    5870:	ldrb	w0, [x0]
    5874:	cmp	w0, #0xd
    5878:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    587c:	b	58c8 <PySequence_Fast@plt+0x37f8>
    5880:	ldr	w0, [sp, #116]
    5884:	cmp	w0, #0x2
    5888:	b.ne	58ac <PySequence_Fast@plt+0x37dc>  // b.any
    588c:	ldr	x0, [sp, #24]
    5890:	lsl	x0, x0, #1
    5894:	ldr	x1, [sp, #120]
    5898:	add	x0, x1, x0
    589c:	ldrh	w0, [x0]
    58a0:	cmp	w0, #0xd
    58a4:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    58a8:	b	58c8 <PySequence_Fast@plt+0x37f8>
    58ac:	ldr	x0, [sp, #24]
    58b0:	lsl	x0, x0, #2
    58b4:	ldr	x1, [sp, #120]
    58b8:	add	x0, x1, x0
    58bc:	ldr	w0, [x0]
    58c0:	cmp	w0, #0xd
    58c4:	b.eq	56ec <PySequence_Fast@plt+0x361c>  // b.none
    58c8:	add	x0, sp, #0x30
    58cc:	mov	x3, x0
    58d0:	ldr	x2, [sp, #24]
    58d4:	ldr	x1, [sp, #32]
    58d8:	ldr	x0, [sp, #40]
    58dc:	bl	7760 <PySequence_Fast@plt+0x5690>
    58e0:	str	x0, [sp, #152]
    58e4:	ldr	x0, [sp, #152]
    58e8:	cmp	x0, #0x0
    58ec:	b.eq	5fec <PySequence_Fast@plt+0x3f1c>  // b.none
    58f0:	ldr	w0, [sp, #132]
    58f4:	cmp	w0, #0x0
    58f8:	b.eq	59b8 <PySequence_Fast@plt+0x38e8>  // b.none
    58fc:	ldr	x2, [sp, #152]
    5900:	ldr	x1, [sp, #136]
    5904:	mov	x0, #0x2                   	// #2
    5908:	bl	2090 <PyTuple_Pack@plt>
    590c:	str	x0, [sp, #72]
    5910:	ldr	x0, [sp, #72]
    5914:	cmp	x0, #0x0
    5918:	b.eq	5ff4 <PySequence_Fast@plt+0x3f24>  // b.none
    591c:	ldr	x0, [sp, #136]
    5920:	str	x0, [sp, #64]
    5924:	ldr	x0, [sp, #64]
    5928:	cmp	x0, #0x0
    592c:	b.eq	5948 <PySequence_Fast@plt+0x3878>  // b.none
    5930:	str	xzr, [sp, #136]
    5934:	ldr	x2, [sp, #64]
    5938:	mov	w1, #0x311                 	// #785
    593c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5940:	add	x0, x0, #0xb60
    5944:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5948:	ldr	x0, [sp, #152]
    594c:	str	x0, [sp, #56]
    5950:	ldr	x0, [sp, #56]
    5954:	cmp	x0, #0x0
    5958:	b.eq	5974 <PySequence_Fast@plt+0x38a4>  // b.none
    595c:	str	xzr, [sp, #152]
    5960:	ldr	x2, [sp, #56]
    5964:	mov	w1, #0x312                 	// #786
    5968:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    596c:	add	x0, x0, #0xb60
    5970:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5974:	ldr	x1, [sp, #72]
    5978:	ldr	x0, [sp, #144]
    597c:	bl	1eb0 <PyList_Append@plt>
    5980:	cmn	w0, #0x1
    5984:	b.ne	59a0 <PySequence_Fast@plt+0x38d0>  // b.any
    5988:	ldr	x2, [sp, #72]
    598c:	mov	w1, #0x314                 	// #788
    5990:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5994:	add	x0, x0, #0xb60
    5998:	bl	2298 <PySequence_Fast@plt+0x1c8>
    599c:	b	6000 <PySequence_Fast@plt+0x3f30>
    59a0:	ldr	x2, [sp, #72]
    59a4:	mov	w1, #0x317                 	// #791
    59a8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    59ac:	add	x0, x0, #0xb60
    59b0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    59b4:	b	5a28 <PySequence_Fast@plt+0x3958>
    59b8:	ldr	x2, [sp, #152]
    59bc:	ldr	x1, [sp, #136]
    59c0:	ldr	x0, [sp, #144]
    59c4:	bl	2020 <PyDict_SetItem@plt>
    59c8:	cmp	w0, #0x0
    59cc:	b.lt	5ffc <PySequence_Fast@plt+0x3f2c>  // b.tstop
    59d0:	ldr	x0, [sp, #136]
    59d4:	str	x0, [sp, #88]
    59d8:	ldr	x0, [sp, #88]
    59dc:	cmp	x0, #0x0
    59e0:	b.eq	59fc <PySequence_Fast@plt+0x392c>  // b.none
    59e4:	str	xzr, [sp, #136]
    59e8:	ldr	x2, [sp, #88]
    59ec:	mov	w1, #0x31c                 	// #796
    59f0:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    59f4:	add	x0, x0, #0xb60
    59f8:	bl	2298 <PySequence_Fast@plt+0x1c8>
    59fc:	ldr	x0, [sp, #152]
    5a00:	str	x0, [sp, #80]
    5a04:	ldr	x0, [sp, #80]
    5a08:	cmp	x0, #0x0
    5a0c:	b.eq	5a28 <PySequence_Fast@plt+0x3958>  // b.none
    5a10:	str	xzr, [sp, #152]
    5a14:	ldr	x2, [sp, #80]
    5a18:	mov	w1, #0x31d                 	// #797
    5a1c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5a20:	add	x0, x0, #0xb60
    5a24:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5a28:	ldr	x0, [sp, #48]
    5a2c:	str	x0, [sp, #24]
    5a30:	b	5a40 <PySequence_Fast@plt+0x3970>
    5a34:	ldr	x0, [sp, #24]
    5a38:	add	x0, x0, #0x1
    5a3c:	str	x0, [sp, #24]
    5a40:	ldr	x1, [sp, #24]
    5a44:	ldr	x0, [sp, #104]
    5a48:	cmp	x1, x0
    5a4c:	b.gt	5c10 <PySequence_Fast@plt+0x3b40>
    5a50:	ldr	w0, [sp, #116]
    5a54:	cmp	w0, #0x1
    5a58:	b.ne	5a78 <PySequence_Fast@plt+0x39a8>  // b.any
    5a5c:	ldr	x0, [sp, #24]
    5a60:	ldr	x1, [sp, #120]
    5a64:	add	x0, x1, x0
    5a68:	ldrb	w0, [x0]
    5a6c:	cmp	w0, #0x20
    5a70:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5a74:	b	5ac0 <PySequence_Fast@plt+0x39f0>
    5a78:	ldr	w0, [sp, #116]
    5a7c:	cmp	w0, #0x2
    5a80:	b.ne	5aa4 <PySequence_Fast@plt+0x39d4>  // b.any
    5a84:	ldr	x0, [sp, #24]
    5a88:	lsl	x0, x0, #1
    5a8c:	ldr	x1, [sp, #120]
    5a90:	add	x0, x1, x0
    5a94:	ldrh	w0, [x0]
    5a98:	cmp	w0, #0x20
    5a9c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5aa0:	b	5ac0 <PySequence_Fast@plt+0x39f0>
    5aa4:	ldr	x0, [sp, #24]
    5aa8:	lsl	x0, x0, #2
    5aac:	ldr	x1, [sp, #120]
    5ab0:	add	x0, x1, x0
    5ab4:	ldr	w0, [x0]
    5ab8:	cmp	w0, #0x20
    5abc:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5ac0:	ldr	w0, [sp, #116]
    5ac4:	cmp	w0, #0x1
    5ac8:	b.ne	5ae8 <PySequence_Fast@plt+0x3a18>  // b.any
    5acc:	ldr	x0, [sp, #24]
    5ad0:	ldr	x1, [sp, #120]
    5ad4:	add	x0, x1, x0
    5ad8:	ldrb	w0, [x0]
    5adc:	cmp	w0, #0x9
    5ae0:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5ae4:	b	5b30 <PySequence_Fast@plt+0x3a60>
    5ae8:	ldr	w0, [sp, #116]
    5aec:	cmp	w0, #0x2
    5af0:	b.ne	5b14 <PySequence_Fast@plt+0x3a44>  // b.any
    5af4:	ldr	x0, [sp, #24]
    5af8:	lsl	x0, x0, #1
    5afc:	ldr	x1, [sp, #120]
    5b00:	add	x0, x1, x0
    5b04:	ldrh	w0, [x0]
    5b08:	cmp	w0, #0x9
    5b0c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5b10:	b	5b30 <PySequence_Fast@plt+0x3a60>
    5b14:	ldr	x0, [sp, #24]
    5b18:	lsl	x0, x0, #2
    5b1c:	ldr	x1, [sp, #120]
    5b20:	add	x0, x1, x0
    5b24:	ldr	w0, [x0]
    5b28:	cmp	w0, #0x9
    5b2c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5b30:	ldr	w0, [sp, #116]
    5b34:	cmp	w0, #0x1
    5b38:	b.ne	5b58 <PySequence_Fast@plt+0x3a88>  // b.any
    5b3c:	ldr	x0, [sp, #24]
    5b40:	ldr	x1, [sp, #120]
    5b44:	add	x0, x1, x0
    5b48:	ldrb	w0, [x0]
    5b4c:	cmp	w0, #0xa
    5b50:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5b54:	b	5ba0 <PySequence_Fast@plt+0x3ad0>
    5b58:	ldr	w0, [sp, #116]
    5b5c:	cmp	w0, #0x2
    5b60:	b.ne	5b84 <PySequence_Fast@plt+0x3ab4>  // b.any
    5b64:	ldr	x0, [sp, #24]
    5b68:	lsl	x0, x0, #1
    5b6c:	ldr	x1, [sp, #120]
    5b70:	add	x0, x1, x0
    5b74:	ldrh	w0, [x0]
    5b78:	cmp	w0, #0xa
    5b7c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5b80:	b	5ba0 <PySequence_Fast@plt+0x3ad0>
    5b84:	ldr	x0, [sp, #24]
    5b88:	lsl	x0, x0, #2
    5b8c:	ldr	x1, [sp, #120]
    5b90:	add	x0, x1, x0
    5b94:	ldr	w0, [x0]
    5b98:	cmp	w0, #0xa
    5b9c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5ba0:	ldr	w0, [sp, #116]
    5ba4:	cmp	w0, #0x1
    5ba8:	b.ne	5bc8 <PySequence_Fast@plt+0x3af8>  // b.any
    5bac:	ldr	x0, [sp, #24]
    5bb0:	ldr	x1, [sp, #120]
    5bb4:	add	x0, x1, x0
    5bb8:	ldrb	w0, [x0]
    5bbc:	cmp	w0, #0xd
    5bc0:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5bc4:	b	5c10 <PySequence_Fast@plt+0x3b40>
    5bc8:	ldr	w0, [sp, #116]
    5bcc:	cmp	w0, #0x2
    5bd0:	b.ne	5bf4 <PySequence_Fast@plt+0x3b24>  // b.any
    5bd4:	ldr	x0, [sp, #24]
    5bd8:	lsl	x0, x0, #1
    5bdc:	ldr	x1, [sp, #120]
    5be0:	add	x0, x1, x0
    5be4:	ldrh	w0, [x0]
    5be8:	cmp	w0, #0xd
    5bec:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5bf0:	b	5c10 <PySequence_Fast@plt+0x3b40>
    5bf4:	ldr	x0, [sp, #24]
    5bf8:	lsl	x0, x0, #2
    5bfc:	ldr	x1, [sp, #120]
    5c00:	add	x0, x1, x0
    5c04:	ldr	w0, [x0]
    5c08:	cmp	w0, #0xd
    5c0c:	b.eq	5a34 <PySequence_Fast@plt+0x3964>  // b.none
    5c10:	ldr	x1, [sp, #24]
    5c14:	ldr	x0, [sp, #104]
    5c18:	cmp	x1, x0
    5c1c:	b.gt	5ca4 <PySequence_Fast@plt+0x3bd4>
    5c20:	ldr	w0, [sp, #116]
    5c24:	cmp	w0, #0x1
    5c28:	b.ne	5c4c <PySequence_Fast@plt+0x3b7c>  // b.any
    5c2c:	ldr	x0, [sp, #24]
    5c30:	ldr	x1, [sp, #120]
    5c34:	add	x0, x1, x0
    5c38:	ldrb	w0, [x0]
    5c3c:	cmp	w0, #0x7d
    5c40:	cset	w0, eq  // eq = none
    5c44:	and	w0, w0, #0xff
    5c48:	b	5c9c <PySequence_Fast@plt+0x3bcc>
    5c4c:	ldr	w0, [sp, #116]
    5c50:	cmp	w0, #0x2
    5c54:	b.ne	5c7c <PySequence_Fast@plt+0x3bac>  // b.any
    5c58:	ldr	x0, [sp, #24]
    5c5c:	lsl	x0, x0, #1
    5c60:	ldr	x1, [sp, #120]
    5c64:	add	x0, x1, x0
    5c68:	ldrh	w0, [x0]
    5c6c:	cmp	w0, #0x7d
    5c70:	cset	w0, eq  // eq = none
    5c74:	and	w0, w0, #0xff
    5c78:	b	5c9c <PySequence_Fast@plt+0x3bcc>
    5c7c:	ldr	x0, [sp, #24]
    5c80:	lsl	x0, x0, #2
    5c84:	ldr	x1, [sp, #120]
    5c88:	add	x0, x1, x0
    5c8c:	ldr	w0, [x0]
    5c90:	cmp	w0, #0x7d
    5c94:	cset	w0, eq  // eq = none
    5c98:	and	w0, w0, #0xff
    5c9c:	cmp	w0, #0x0
    5ca0:	b.ne	5f2c <PySequence_Fast@plt+0x3e5c>  // b.any
    5ca4:	ldr	x1, [sp, #24]
    5ca8:	ldr	x0, [sp, #104]
    5cac:	cmp	x1, x0
    5cb0:	b.gt	5d24 <PySequence_Fast@plt+0x3c54>
    5cb4:	ldr	w0, [sp, #116]
    5cb8:	cmp	w0, #0x1
    5cbc:	b.ne	5cdc <PySequence_Fast@plt+0x3c0c>  // b.any
    5cc0:	ldr	x0, [sp, #24]
    5cc4:	ldr	x1, [sp, #120]
    5cc8:	add	x0, x1, x0
    5ccc:	ldrb	w0, [x0]
    5cd0:	cmp	w0, #0x2c
    5cd4:	b.ne	5d24 <PySequence_Fast@plt+0x3c54>  // b.any
    5cd8:	b	5d3c <PySequence_Fast@plt+0x3c6c>
    5cdc:	ldr	w0, [sp, #116]
    5ce0:	cmp	w0, #0x2
    5ce4:	b.ne	5d08 <PySequence_Fast@plt+0x3c38>  // b.any
    5ce8:	ldr	x0, [sp, #24]
    5cec:	lsl	x0, x0, #1
    5cf0:	ldr	x1, [sp, #120]
    5cf4:	add	x0, x1, x0
    5cf8:	ldrh	w0, [x0]
    5cfc:	cmp	w0, #0x2c
    5d00:	b.ne	5d24 <PySequence_Fast@plt+0x3c54>  // b.any
    5d04:	b	5d3c <PySequence_Fast@plt+0x3c6c>
    5d08:	ldr	x0, [sp, #24]
    5d0c:	lsl	x0, x0, #2
    5d10:	ldr	x1, [sp, #120]
    5d14:	add	x0, x1, x0
    5d18:	ldr	w0, [x0]
    5d1c:	cmp	w0, #0x2c
    5d20:	b.eq	5d3c <PySequence_Fast@plt+0x3c6c>  // b.none
    5d24:	ldr	x2, [sp, #24]
    5d28:	ldr	x1, [sp, #32]
    5d2c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5d30:	add	x0, x0, #0xf30
    5d34:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    5d38:	b	6000 <PySequence_Fast@plt+0x3f30>
    5d3c:	ldr	x0, [sp, #24]
    5d40:	add	x0, x0, #0x1
    5d44:	str	x0, [sp, #24]
    5d48:	b	5d58 <PySequence_Fast@plt+0x3c88>
    5d4c:	ldr	x0, [sp, #24]
    5d50:	add	x0, x0, #0x1
    5d54:	str	x0, [sp, #24]
    5d58:	ldr	x1, [sp, #24]
    5d5c:	ldr	x0, [sp, #104]
    5d60:	cmp	x1, x0
    5d64:	b.gt	5320 <PySequence_Fast@plt+0x3250>
    5d68:	ldr	w0, [sp, #116]
    5d6c:	cmp	w0, #0x1
    5d70:	b.ne	5d90 <PySequence_Fast@plt+0x3cc0>  // b.any
    5d74:	ldr	x0, [sp, #24]
    5d78:	ldr	x1, [sp, #120]
    5d7c:	add	x0, x1, x0
    5d80:	ldrb	w0, [x0]
    5d84:	cmp	w0, #0x20
    5d88:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5d8c:	b	5dd8 <PySequence_Fast@plt+0x3d08>
    5d90:	ldr	w0, [sp, #116]
    5d94:	cmp	w0, #0x2
    5d98:	b.ne	5dbc <PySequence_Fast@plt+0x3cec>  // b.any
    5d9c:	ldr	x0, [sp, #24]
    5da0:	lsl	x0, x0, #1
    5da4:	ldr	x1, [sp, #120]
    5da8:	add	x0, x1, x0
    5dac:	ldrh	w0, [x0]
    5db0:	cmp	w0, #0x20
    5db4:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5db8:	b	5dd8 <PySequence_Fast@plt+0x3d08>
    5dbc:	ldr	x0, [sp, #24]
    5dc0:	lsl	x0, x0, #2
    5dc4:	ldr	x1, [sp, #120]
    5dc8:	add	x0, x1, x0
    5dcc:	ldr	w0, [x0]
    5dd0:	cmp	w0, #0x20
    5dd4:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5dd8:	ldr	w0, [sp, #116]
    5ddc:	cmp	w0, #0x1
    5de0:	b.ne	5e00 <PySequence_Fast@plt+0x3d30>  // b.any
    5de4:	ldr	x0, [sp, #24]
    5de8:	ldr	x1, [sp, #120]
    5dec:	add	x0, x1, x0
    5df0:	ldrb	w0, [x0]
    5df4:	cmp	w0, #0x9
    5df8:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5dfc:	b	5e48 <PySequence_Fast@plt+0x3d78>
    5e00:	ldr	w0, [sp, #116]
    5e04:	cmp	w0, #0x2
    5e08:	b.ne	5e2c <PySequence_Fast@plt+0x3d5c>  // b.any
    5e0c:	ldr	x0, [sp, #24]
    5e10:	lsl	x0, x0, #1
    5e14:	ldr	x1, [sp, #120]
    5e18:	add	x0, x1, x0
    5e1c:	ldrh	w0, [x0]
    5e20:	cmp	w0, #0x9
    5e24:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5e28:	b	5e48 <PySequence_Fast@plt+0x3d78>
    5e2c:	ldr	x0, [sp, #24]
    5e30:	lsl	x0, x0, #2
    5e34:	ldr	x1, [sp, #120]
    5e38:	add	x0, x1, x0
    5e3c:	ldr	w0, [x0]
    5e40:	cmp	w0, #0x9
    5e44:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5e48:	ldr	w0, [sp, #116]
    5e4c:	cmp	w0, #0x1
    5e50:	b.ne	5e70 <PySequence_Fast@plt+0x3da0>  // b.any
    5e54:	ldr	x0, [sp, #24]
    5e58:	ldr	x1, [sp, #120]
    5e5c:	add	x0, x1, x0
    5e60:	ldrb	w0, [x0]
    5e64:	cmp	w0, #0xa
    5e68:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5e6c:	b	5eb8 <PySequence_Fast@plt+0x3de8>
    5e70:	ldr	w0, [sp, #116]
    5e74:	cmp	w0, #0x2
    5e78:	b.ne	5e9c <PySequence_Fast@plt+0x3dcc>  // b.any
    5e7c:	ldr	x0, [sp, #24]
    5e80:	lsl	x0, x0, #1
    5e84:	ldr	x1, [sp, #120]
    5e88:	add	x0, x1, x0
    5e8c:	ldrh	w0, [x0]
    5e90:	cmp	w0, #0xa
    5e94:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5e98:	b	5eb8 <PySequence_Fast@plt+0x3de8>
    5e9c:	ldr	x0, [sp, #24]
    5ea0:	lsl	x0, x0, #2
    5ea4:	ldr	x1, [sp, #120]
    5ea8:	add	x0, x1, x0
    5eac:	ldr	w0, [x0]
    5eb0:	cmp	w0, #0xa
    5eb4:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5eb8:	ldr	w0, [sp, #116]
    5ebc:	cmp	w0, #0x1
    5ec0:	b.ne	5ee0 <PySequence_Fast@plt+0x3e10>  // b.any
    5ec4:	ldr	x0, [sp, #24]
    5ec8:	ldr	x1, [sp, #120]
    5ecc:	add	x0, x1, x0
    5ed0:	ldrb	w0, [x0]
    5ed4:	cmp	w0, #0xd
    5ed8:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5edc:	b	5320 <PySequence_Fast@plt+0x3250>
    5ee0:	ldr	w0, [sp, #116]
    5ee4:	cmp	w0, #0x2
    5ee8:	b.ne	5f0c <PySequence_Fast@plt+0x3e3c>  // b.any
    5eec:	ldr	x0, [sp, #24]
    5ef0:	lsl	x0, x0, #1
    5ef4:	ldr	x1, [sp, #120]
    5ef8:	add	x0, x1, x0
    5efc:	ldrh	w0, [x0]
    5f00:	cmp	w0, #0xd
    5f04:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5f08:	b	5320 <PySequence_Fast@plt+0x3250>
    5f0c:	ldr	x0, [sp, #24]
    5f10:	lsl	x0, x0, #2
    5f14:	ldr	x1, [sp, #120]
    5f18:	add	x0, x1, x0
    5f1c:	ldr	w0, [x0]
    5f20:	cmp	w0, #0xd
    5f24:	b.eq	5d4c <PySequence_Fast@plt+0x3c7c>  // b.none
    5f28:	b	5320 <PySequence_Fast@plt+0x3250>
    5f2c:	nop
    5f30:	ldr	x0, [sp, #24]
    5f34:	add	x1, x0, #0x1
    5f38:	ldr	x0, [sp, #16]
    5f3c:	str	x1, [x0]
    5f40:	ldr	w0, [sp, #132]
    5f44:	cmp	w0, #0x0
    5f48:	b.eq	5f80 <PySequence_Fast@plt+0x3eb0>  // b.none
    5f4c:	ldr	x0, [sp, #40]
    5f50:	ldr	x0, [x0, #32]
    5f54:	mov	x2, #0x0                   	// #0
    5f58:	ldr	x1, [sp, #144]
    5f5c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5f60:	str	x0, [sp, #152]
    5f64:	ldr	x2, [sp, #144]
    5f68:	mov	w1, #0x336                 	// #822
    5f6c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5f70:	add	x0, x0, #0xb60
    5f74:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5f78:	ldr	x0, [sp, #152]
    5f7c:	b	601c <PySequence_Fast@plt+0x3f4c>
    5f80:	ldr	x0, [sp, #40]
    5f84:	ldr	x1, [x0, #24]
    5f88:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    5f8c:	ldr	x0, [x0, #4016]
    5f90:	cmp	x1, x0
    5f94:	b.eq	5fcc <PySequence_Fast@plt+0x3efc>  // b.none
    5f98:	ldr	x0, [sp, #40]
    5f9c:	ldr	x0, [x0, #24]
    5fa0:	mov	x2, #0x0                   	// #0
    5fa4:	ldr	x1, [sp, #144]
    5fa8:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5fac:	str	x0, [sp, #152]
    5fb0:	ldr	x2, [sp, #144]
    5fb4:	mov	w1, #0x33d                 	// #829
    5fb8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    5fbc:	add	x0, x0, #0xb60
    5fc0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    5fc4:	ldr	x0, [sp, #152]
    5fc8:	b	601c <PySequence_Fast@plt+0x3f4c>
    5fcc:	ldr	x0, [sp, #144]
    5fd0:	b	601c <PySequence_Fast@plt+0x3f4c>
    5fd4:	nop
    5fd8:	b	6000 <PySequence_Fast@plt+0x3f30>
    5fdc:	nop
    5fe0:	b	6000 <PySequence_Fast@plt+0x3f30>
    5fe4:	nop
    5fe8:	b	6000 <PySequence_Fast@plt+0x3f30>
    5fec:	nop
    5ff0:	b	6000 <PySequence_Fast@plt+0x3f30>
    5ff4:	nop
    5ff8:	b	6000 <PySequence_Fast@plt+0x3f30>
    5ffc:	nop
    6000:	ldr	x0, [sp, #136]
    6004:	bl	2310 <PySequence_Fast@plt+0x240>
    6008:	ldr	x0, [sp, #152]
    600c:	bl	2310 <PySequence_Fast@plt+0x240>
    6010:	ldr	x0, [sp, #144]
    6014:	bl	2310 <PySequence_Fast@plt+0x240>
    6018:	mov	x0, #0x0                   	// #0
    601c:	ldp	x29, x30, [sp], #160
    6020:	ret
    6024:	stp	x29, x30, [sp, #-112]!
    6028:	mov	x29, sp
    602c:	str	x0, [sp, #40]
    6030:	str	x1, [sp, #32]
    6034:	str	x2, [sp, #24]
    6038:	str	x3, [sp, #16]
    603c:	str	xzr, [sp, #104]
    6040:	ldr	x0, [sp, #32]
    6044:	ldrb	w0, [x0, #32]
    6048:	and	w0, w0, #0xffffff80
    604c:	and	w0, w0, #0xff
    6050:	cmp	w0, #0x0
    6054:	b.ne	6070 <PySequence_Fast@plt+0x3fa0>  // b.any
    6058:	ldr	x0, [sp, #32]
    605c:	bl	1db0 <_PyUnicode_Ready@plt>
    6060:	cmn	w0, #0x1
    6064:	b.ne	6070 <PySequence_Fast@plt+0x3fa0>  // b.any
    6068:	mov	x0, #0x0                   	// #0
    606c:	b	69b4 <PySequence_Fast@plt+0x48e4>
    6070:	mov	x0, #0x0                   	// #0
    6074:	bl	1da0 <PyList_New@plt>
    6078:	str	x0, [sp, #96]
    607c:	ldr	x0, [sp, #96]
    6080:	cmp	x0, #0x0
    6084:	b.ne	6090 <PySequence_Fast@plt+0x3fc0>  // b.any
    6088:	mov	x0, #0x0                   	// #0
    608c:	b	69b4 <PySequence_Fast@plt+0x48e4>
    6090:	ldr	x0, [sp, #32]
    6094:	ldrb	w0, [x0, #32]
    6098:	and	w0, w0, #0x20
    609c:	and	w0, w0, #0xff
    60a0:	cmp	w0, #0x0
    60a4:	b.eq	60d8 <PySequence_Fast@plt+0x4008>  // b.none
    60a8:	ldr	x0, [sp, #32]
    60ac:	ldrb	w0, [x0, #32]
    60b0:	and	w0, w0, #0x40
    60b4:	and	w0, w0, #0xff
    60b8:	cmp	w0, #0x0
    60bc:	b.eq	60cc <PySequence_Fast@plt+0x3ffc>  // b.none
    60c0:	ldr	x0, [sp, #32]
    60c4:	add	x0, x0, #0x30
    60c8:	b	60e0 <PySequence_Fast@plt+0x4010>
    60cc:	ldr	x0, [sp, #32]
    60d0:	add	x0, x0, #0x48
    60d4:	b	60e0 <PySequence_Fast@plt+0x4010>
    60d8:	ldr	x0, [sp, #32]
    60dc:	ldr	x0, [x0, #72]
    60e0:	str	x0, [sp, #88]
    60e4:	ldr	x0, [sp, #32]
    60e8:	ldrb	w0, [x0, #32]
    60ec:	ubfx	x0, x0, #2, #3
    60f0:	and	w0, w0, #0xff
    60f4:	str	w0, [sp, #84]
    60f8:	ldr	x0, [sp, #32]
    60fc:	ldr	x0, [x0, #16]
    6100:	sub	x0, x0, #0x1
    6104:	str	x0, [sp, #72]
    6108:	b	6118 <PySequence_Fast@plt+0x4048>
    610c:	ldr	x0, [sp, #24]
    6110:	add	x0, x0, #0x1
    6114:	str	x0, [sp, #24]
    6118:	ldr	x1, [sp, #24]
    611c:	ldr	x0, [sp, #72]
    6120:	cmp	x1, x0
    6124:	b.gt	62e8 <PySequence_Fast@plt+0x4218>
    6128:	ldr	w0, [sp, #84]
    612c:	cmp	w0, #0x1
    6130:	b.ne	6150 <PySequence_Fast@plt+0x4080>  // b.any
    6134:	ldr	x0, [sp, #24]
    6138:	ldr	x1, [sp, #88]
    613c:	add	x0, x1, x0
    6140:	ldrb	w0, [x0]
    6144:	cmp	w0, #0x20
    6148:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    614c:	b	6198 <PySequence_Fast@plt+0x40c8>
    6150:	ldr	w0, [sp, #84]
    6154:	cmp	w0, #0x2
    6158:	b.ne	617c <PySequence_Fast@plt+0x40ac>  // b.any
    615c:	ldr	x0, [sp, #24]
    6160:	lsl	x0, x0, #1
    6164:	ldr	x1, [sp, #88]
    6168:	add	x0, x1, x0
    616c:	ldrh	w0, [x0]
    6170:	cmp	w0, #0x20
    6174:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    6178:	b	6198 <PySequence_Fast@plt+0x40c8>
    617c:	ldr	x0, [sp, #24]
    6180:	lsl	x0, x0, #2
    6184:	ldr	x1, [sp, #88]
    6188:	add	x0, x1, x0
    618c:	ldr	w0, [x0]
    6190:	cmp	w0, #0x20
    6194:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    6198:	ldr	w0, [sp, #84]
    619c:	cmp	w0, #0x1
    61a0:	b.ne	61c0 <PySequence_Fast@plt+0x40f0>  // b.any
    61a4:	ldr	x0, [sp, #24]
    61a8:	ldr	x1, [sp, #88]
    61ac:	add	x0, x1, x0
    61b0:	ldrb	w0, [x0]
    61b4:	cmp	w0, #0x9
    61b8:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    61bc:	b	6208 <PySequence_Fast@plt+0x4138>
    61c0:	ldr	w0, [sp, #84]
    61c4:	cmp	w0, #0x2
    61c8:	b.ne	61ec <PySequence_Fast@plt+0x411c>  // b.any
    61cc:	ldr	x0, [sp, #24]
    61d0:	lsl	x0, x0, #1
    61d4:	ldr	x1, [sp, #88]
    61d8:	add	x0, x1, x0
    61dc:	ldrh	w0, [x0]
    61e0:	cmp	w0, #0x9
    61e4:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    61e8:	b	6208 <PySequence_Fast@plt+0x4138>
    61ec:	ldr	x0, [sp, #24]
    61f0:	lsl	x0, x0, #2
    61f4:	ldr	x1, [sp, #88]
    61f8:	add	x0, x1, x0
    61fc:	ldr	w0, [x0]
    6200:	cmp	w0, #0x9
    6204:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    6208:	ldr	w0, [sp, #84]
    620c:	cmp	w0, #0x1
    6210:	b.ne	6230 <PySequence_Fast@plt+0x4160>  // b.any
    6214:	ldr	x0, [sp, #24]
    6218:	ldr	x1, [sp, #88]
    621c:	add	x0, x1, x0
    6220:	ldrb	w0, [x0]
    6224:	cmp	w0, #0xa
    6228:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    622c:	b	6278 <PySequence_Fast@plt+0x41a8>
    6230:	ldr	w0, [sp, #84]
    6234:	cmp	w0, #0x2
    6238:	b.ne	625c <PySequence_Fast@plt+0x418c>  // b.any
    623c:	ldr	x0, [sp, #24]
    6240:	lsl	x0, x0, #1
    6244:	ldr	x1, [sp, #88]
    6248:	add	x0, x1, x0
    624c:	ldrh	w0, [x0]
    6250:	cmp	w0, #0xa
    6254:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    6258:	b	6278 <PySequence_Fast@plt+0x41a8>
    625c:	ldr	x0, [sp, #24]
    6260:	lsl	x0, x0, #2
    6264:	ldr	x1, [sp, #88]
    6268:	add	x0, x1, x0
    626c:	ldr	w0, [x0]
    6270:	cmp	w0, #0xa
    6274:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    6278:	ldr	w0, [sp, #84]
    627c:	cmp	w0, #0x1
    6280:	b.ne	62a0 <PySequence_Fast@plt+0x41d0>  // b.any
    6284:	ldr	x0, [sp, #24]
    6288:	ldr	x1, [sp, #88]
    628c:	add	x0, x1, x0
    6290:	ldrb	w0, [x0]
    6294:	cmp	w0, #0xd
    6298:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    629c:	b	62e8 <PySequence_Fast@plt+0x4218>
    62a0:	ldr	w0, [sp, #84]
    62a4:	cmp	w0, #0x2
    62a8:	b.ne	62cc <PySequence_Fast@plt+0x41fc>  // b.any
    62ac:	ldr	x0, [sp, #24]
    62b0:	lsl	x0, x0, #1
    62b4:	ldr	x1, [sp, #88]
    62b8:	add	x0, x1, x0
    62bc:	ldrh	w0, [x0]
    62c0:	cmp	w0, #0xd
    62c4:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    62c8:	b	62e8 <PySequence_Fast@plt+0x4218>
    62cc:	ldr	x0, [sp, #24]
    62d0:	lsl	x0, x0, #2
    62d4:	ldr	x1, [sp, #88]
    62d8:	add	x0, x1, x0
    62dc:	ldr	w0, [x0]
    62e0:	cmp	w0, #0xd
    62e4:	b.eq	610c <PySequence_Fast@plt+0x403c>  // b.none
    62e8:	ldr	x1, [sp, #24]
    62ec:	ldr	x0, [sp, #72]
    62f0:	cmp	x1, x0
    62f4:	b.gt	6368 <PySequence_Fast@plt+0x4298>
    62f8:	ldr	w0, [sp, #84]
    62fc:	cmp	w0, #0x1
    6300:	b.ne	6320 <PySequence_Fast@plt+0x4250>  // b.any
    6304:	ldr	x0, [sp, #24]
    6308:	ldr	x1, [sp, #88]
    630c:	add	x0, x1, x0
    6310:	ldrb	w0, [x0]
    6314:	cmp	w0, #0x5d
    6318:	b.ne	6368 <PySequence_Fast@plt+0x4298>  // b.any
    631c:	b	68d8 <PySequence_Fast@plt+0x4808>
    6320:	ldr	w0, [sp, #84]
    6324:	cmp	w0, #0x2
    6328:	b.ne	634c <PySequence_Fast@plt+0x427c>  // b.any
    632c:	ldr	x0, [sp, #24]
    6330:	lsl	x0, x0, #1
    6334:	ldr	x1, [sp, #88]
    6338:	add	x0, x1, x0
    633c:	ldrh	w0, [x0]
    6340:	cmp	w0, #0x5d
    6344:	b.ne	6368 <PySequence_Fast@plt+0x4298>  // b.any
    6348:	b	68d8 <PySequence_Fast@plt+0x4808>
    634c:	ldr	x0, [sp, #24]
    6350:	lsl	x0, x0, #2
    6354:	ldr	x1, [sp, #88]
    6358:	add	x0, x1, x0
    635c:	ldr	w0, [x0]
    6360:	cmp	w0, #0x5d
    6364:	b.eq	68d8 <PySequence_Fast@plt+0x4808>  // b.none
    6368:	add	x0, sp, #0x38
    636c:	mov	x3, x0
    6370:	ldr	x2, [sp, #24]
    6374:	ldr	x1, [sp, #32]
    6378:	ldr	x0, [sp, #40]
    637c:	bl	7760 <PySequence_Fast@plt+0x5690>
    6380:	str	x0, [sp, #104]
    6384:	ldr	x0, [sp, #104]
    6388:	cmp	x0, #0x0
    638c:	b.eq	6988 <PySequence_Fast@plt+0x48b8>  // b.none
    6390:	ldr	x1, [sp, #104]
    6394:	ldr	x0, [sp, #96]
    6398:	bl	1eb0 <PyList_Append@plt>
    639c:	cmn	w0, #0x1
    63a0:	b.eq	6990 <PySequence_Fast@plt+0x48c0>  // b.none
    63a4:	ldr	x0, [sp, #104]
    63a8:	str	x0, [sp, #64]
    63ac:	ldr	x0, [sp, #64]
    63b0:	cmp	x0, #0x0
    63b4:	b.eq	63d0 <PySequence_Fast@plt+0x4300>  // b.none
    63b8:	str	xzr, [sp, #104]
    63bc:	ldr	x2, [sp, #64]
    63c0:	mov	w1, #0x372                 	// #882
    63c4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    63c8:	add	x0, x0, #0xb60
    63cc:	bl	2298 <PySequence_Fast@plt+0x1c8>
    63d0:	ldr	x0, [sp, #56]
    63d4:	str	x0, [sp, #24]
    63d8:	b	63e8 <PySequence_Fast@plt+0x4318>
    63dc:	ldr	x0, [sp, #24]
    63e0:	add	x0, x0, #0x1
    63e4:	str	x0, [sp, #24]
    63e8:	ldr	x1, [sp, #24]
    63ec:	ldr	x0, [sp, #72]
    63f0:	cmp	x1, x0
    63f4:	b.gt	65b8 <PySequence_Fast@plt+0x44e8>
    63f8:	ldr	w0, [sp, #84]
    63fc:	cmp	w0, #0x1
    6400:	b.ne	6420 <PySequence_Fast@plt+0x4350>  // b.any
    6404:	ldr	x0, [sp, #24]
    6408:	ldr	x1, [sp, #88]
    640c:	add	x0, x1, x0
    6410:	ldrb	w0, [x0]
    6414:	cmp	w0, #0x20
    6418:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    641c:	b	6468 <PySequence_Fast@plt+0x4398>
    6420:	ldr	w0, [sp, #84]
    6424:	cmp	w0, #0x2
    6428:	b.ne	644c <PySequence_Fast@plt+0x437c>  // b.any
    642c:	ldr	x0, [sp, #24]
    6430:	lsl	x0, x0, #1
    6434:	ldr	x1, [sp, #88]
    6438:	add	x0, x1, x0
    643c:	ldrh	w0, [x0]
    6440:	cmp	w0, #0x20
    6444:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    6448:	b	6468 <PySequence_Fast@plt+0x4398>
    644c:	ldr	x0, [sp, #24]
    6450:	lsl	x0, x0, #2
    6454:	ldr	x1, [sp, #88]
    6458:	add	x0, x1, x0
    645c:	ldr	w0, [x0]
    6460:	cmp	w0, #0x20
    6464:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    6468:	ldr	w0, [sp, #84]
    646c:	cmp	w0, #0x1
    6470:	b.ne	6490 <PySequence_Fast@plt+0x43c0>  // b.any
    6474:	ldr	x0, [sp, #24]
    6478:	ldr	x1, [sp, #88]
    647c:	add	x0, x1, x0
    6480:	ldrb	w0, [x0]
    6484:	cmp	w0, #0x9
    6488:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    648c:	b	64d8 <PySequence_Fast@plt+0x4408>
    6490:	ldr	w0, [sp, #84]
    6494:	cmp	w0, #0x2
    6498:	b.ne	64bc <PySequence_Fast@plt+0x43ec>  // b.any
    649c:	ldr	x0, [sp, #24]
    64a0:	lsl	x0, x0, #1
    64a4:	ldr	x1, [sp, #88]
    64a8:	add	x0, x1, x0
    64ac:	ldrh	w0, [x0]
    64b0:	cmp	w0, #0x9
    64b4:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    64b8:	b	64d8 <PySequence_Fast@plt+0x4408>
    64bc:	ldr	x0, [sp, #24]
    64c0:	lsl	x0, x0, #2
    64c4:	ldr	x1, [sp, #88]
    64c8:	add	x0, x1, x0
    64cc:	ldr	w0, [x0]
    64d0:	cmp	w0, #0x9
    64d4:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    64d8:	ldr	w0, [sp, #84]
    64dc:	cmp	w0, #0x1
    64e0:	b.ne	6500 <PySequence_Fast@plt+0x4430>  // b.any
    64e4:	ldr	x0, [sp, #24]
    64e8:	ldr	x1, [sp, #88]
    64ec:	add	x0, x1, x0
    64f0:	ldrb	w0, [x0]
    64f4:	cmp	w0, #0xa
    64f8:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    64fc:	b	6548 <PySequence_Fast@plt+0x4478>
    6500:	ldr	w0, [sp, #84]
    6504:	cmp	w0, #0x2
    6508:	b.ne	652c <PySequence_Fast@plt+0x445c>  // b.any
    650c:	ldr	x0, [sp, #24]
    6510:	lsl	x0, x0, #1
    6514:	ldr	x1, [sp, #88]
    6518:	add	x0, x1, x0
    651c:	ldrh	w0, [x0]
    6520:	cmp	w0, #0xa
    6524:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    6528:	b	6548 <PySequence_Fast@plt+0x4478>
    652c:	ldr	x0, [sp, #24]
    6530:	lsl	x0, x0, #2
    6534:	ldr	x1, [sp, #88]
    6538:	add	x0, x1, x0
    653c:	ldr	w0, [x0]
    6540:	cmp	w0, #0xa
    6544:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    6548:	ldr	w0, [sp, #84]
    654c:	cmp	w0, #0x1
    6550:	b.ne	6570 <PySequence_Fast@plt+0x44a0>  // b.any
    6554:	ldr	x0, [sp, #24]
    6558:	ldr	x1, [sp, #88]
    655c:	add	x0, x1, x0
    6560:	ldrb	w0, [x0]
    6564:	cmp	w0, #0xd
    6568:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    656c:	b	65b8 <PySequence_Fast@plt+0x44e8>
    6570:	ldr	w0, [sp, #84]
    6574:	cmp	w0, #0x2
    6578:	b.ne	659c <PySequence_Fast@plt+0x44cc>  // b.any
    657c:	ldr	x0, [sp, #24]
    6580:	lsl	x0, x0, #1
    6584:	ldr	x1, [sp, #88]
    6588:	add	x0, x1, x0
    658c:	ldrh	w0, [x0]
    6590:	cmp	w0, #0xd
    6594:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    6598:	b	65b8 <PySequence_Fast@plt+0x44e8>
    659c:	ldr	x0, [sp, #24]
    65a0:	lsl	x0, x0, #2
    65a4:	ldr	x1, [sp, #88]
    65a8:	add	x0, x1, x0
    65ac:	ldr	w0, [x0]
    65b0:	cmp	w0, #0xd
    65b4:	b.eq	63dc <PySequence_Fast@plt+0x430c>  // b.none
    65b8:	ldr	x1, [sp, #24]
    65bc:	ldr	x0, [sp, #72]
    65c0:	cmp	x1, x0
    65c4:	b.gt	664c <PySequence_Fast@plt+0x457c>
    65c8:	ldr	w0, [sp, #84]
    65cc:	cmp	w0, #0x1
    65d0:	b.ne	65f4 <PySequence_Fast@plt+0x4524>  // b.any
    65d4:	ldr	x0, [sp, #24]
    65d8:	ldr	x1, [sp, #88]
    65dc:	add	x0, x1, x0
    65e0:	ldrb	w0, [x0]
    65e4:	cmp	w0, #0x5d
    65e8:	cset	w0, eq  // eq = none
    65ec:	and	w0, w0, #0xff
    65f0:	b	6644 <PySequence_Fast@plt+0x4574>
    65f4:	ldr	w0, [sp, #84]
    65f8:	cmp	w0, #0x2
    65fc:	b.ne	6624 <PySequence_Fast@plt+0x4554>  // b.any
    6600:	ldr	x0, [sp, #24]
    6604:	lsl	x0, x0, #1
    6608:	ldr	x1, [sp, #88]
    660c:	add	x0, x1, x0
    6610:	ldrh	w0, [x0]
    6614:	cmp	w0, #0x5d
    6618:	cset	w0, eq  // eq = none
    661c:	and	w0, w0, #0xff
    6620:	b	6644 <PySequence_Fast@plt+0x4574>
    6624:	ldr	x0, [sp, #24]
    6628:	lsl	x0, x0, #2
    662c:	ldr	x1, [sp, #88]
    6630:	add	x0, x1, x0
    6634:	ldr	w0, [x0]
    6638:	cmp	w0, #0x5d
    663c:	cset	w0, eq  // eq = none
    6640:	and	w0, w0, #0xff
    6644:	cmp	w0, #0x0
    6648:	b.ne	68d4 <PySequence_Fast@plt+0x4804>  // b.any
    664c:	ldr	x1, [sp, #24]
    6650:	ldr	x0, [sp, #72]
    6654:	cmp	x1, x0
    6658:	b.gt	66cc <PySequence_Fast@plt+0x45fc>
    665c:	ldr	w0, [sp, #84]
    6660:	cmp	w0, #0x1
    6664:	b.ne	6684 <PySequence_Fast@plt+0x45b4>  // b.any
    6668:	ldr	x0, [sp, #24]
    666c:	ldr	x1, [sp, #88]
    6670:	add	x0, x1, x0
    6674:	ldrb	w0, [x0]
    6678:	cmp	w0, #0x2c
    667c:	b.ne	66cc <PySequence_Fast@plt+0x45fc>  // b.any
    6680:	b	66e4 <PySequence_Fast@plt+0x4614>
    6684:	ldr	w0, [sp, #84]
    6688:	cmp	w0, #0x2
    668c:	b.ne	66b0 <PySequence_Fast@plt+0x45e0>  // b.any
    6690:	ldr	x0, [sp, #24]
    6694:	lsl	x0, x0, #1
    6698:	ldr	x1, [sp, #88]
    669c:	add	x0, x1, x0
    66a0:	ldrh	w0, [x0]
    66a4:	cmp	w0, #0x2c
    66a8:	b.ne	66cc <PySequence_Fast@plt+0x45fc>  // b.any
    66ac:	b	66e4 <PySequence_Fast@plt+0x4614>
    66b0:	ldr	x0, [sp, #24]
    66b4:	lsl	x0, x0, #2
    66b8:	ldr	x1, [sp, #88]
    66bc:	add	x0, x1, x0
    66c0:	ldr	w0, [x0]
    66c4:	cmp	w0, #0x2c
    66c8:	b.eq	66e4 <PySequence_Fast@plt+0x4614>  // b.none
    66cc:	ldr	x2, [sp, #24]
    66d0:	ldr	x1, [sp, #32]
    66d4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    66d8:	add	x0, x0, #0xf30
    66dc:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    66e0:	b	6994 <PySequence_Fast@plt+0x48c4>
    66e4:	ldr	x0, [sp, #24]
    66e8:	add	x0, x0, #0x1
    66ec:	str	x0, [sp, #24]
    66f0:	b	6700 <PySequence_Fast@plt+0x4630>
    66f4:	ldr	x0, [sp, #24]
    66f8:	add	x0, x0, #0x1
    66fc:	str	x0, [sp, #24]
    6700:	ldr	x1, [sp, #24]
    6704:	ldr	x0, [sp, #72]
    6708:	cmp	x1, x0
    670c:	b.gt	6368 <PySequence_Fast@plt+0x4298>
    6710:	ldr	w0, [sp, #84]
    6714:	cmp	w0, #0x1
    6718:	b.ne	6738 <PySequence_Fast@plt+0x4668>  // b.any
    671c:	ldr	x0, [sp, #24]
    6720:	ldr	x1, [sp, #88]
    6724:	add	x0, x1, x0
    6728:	ldrb	w0, [x0]
    672c:	cmp	w0, #0x20
    6730:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6734:	b	6780 <PySequence_Fast@plt+0x46b0>
    6738:	ldr	w0, [sp, #84]
    673c:	cmp	w0, #0x2
    6740:	b.ne	6764 <PySequence_Fast@plt+0x4694>  // b.any
    6744:	ldr	x0, [sp, #24]
    6748:	lsl	x0, x0, #1
    674c:	ldr	x1, [sp, #88]
    6750:	add	x0, x1, x0
    6754:	ldrh	w0, [x0]
    6758:	cmp	w0, #0x20
    675c:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6760:	b	6780 <PySequence_Fast@plt+0x46b0>
    6764:	ldr	x0, [sp, #24]
    6768:	lsl	x0, x0, #2
    676c:	ldr	x1, [sp, #88]
    6770:	add	x0, x1, x0
    6774:	ldr	w0, [x0]
    6778:	cmp	w0, #0x20
    677c:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6780:	ldr	w0, [sp, #84]
    6784:	cmp	w0, #0x1
    6788:	b.ne	67a8 <PySequence_Fast@plt+0x46d8>  // b.any
    678c:	ldr	x0, [sp, #24]
    6790:	ldr	x1, [sp, #88]
    6794:	add	x0, x1, x0
    6798:	ldrb	w0, [x0]
    679c:	cmp	w0, #0x9
    67a0:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    67a4:	b	67f0 <PySequence_Fast@plt+0x4720>
    67a8:	ldr	w0, [sp, #84]
    67ac:	cmp	w0, #0x2
    67b0:	b.ne	67d4 <PySequence_Fast@plt+0x4704>  // b.any
    67b4:	ldr	x0, [sp, #24]
    67b8:	lsl	x0, x0, #1
    67bc:	ldr	x1, [sp, #88]
    67c0:	add	x0, x1, x0
    67c4:	ldrh	w0, [x0]
    67c8:	cmp	w0, #0x9
    67cc:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    67d0:	b	67f0 <PySequence_Fast@plt+0x4720>
    67d4:	ldr	x0, [sp, #24]
    67d8:	lsl	x0, x0, #2
    67dc:	ldr	x1, [sp, #88]
    67e0:	add	x0, x1, x0
    67e4:	ldr	w0, [x0]
    67e8:	cmp	w0, #0x9
    67ec:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    67f0:	ldr	w0, [sp, #84]
    67f4:	cmp	w0, #0x1
    67f8:	b.ne	6818 <PySequence_Fast@plt+0x4748>  // b.any
    67fc:	ldr	x0, [sp, #24]
    6800:	ldr	x1, [sp, #88]
    6804:	add	x0, x1, x0
    6808:	ldrb	w0, [x0]
    680c:	cmp	w0, #0xa
    6810:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6814:	b	6860 <PySequence_Fast@plt+0x4790>
    6818:	ldr	w0, [sp, #84]
    681c:	cmp	w0, #0x2
    6820:	b.ne	6844 <PySequence_Fast@plt+0x4774>  // b.any
    6824:	ldr	x0, [sp, #24]
    6828:	lsl	x0, x0, #1
    682c:	ldr	x1, [sp, #88]
    6830:	add	x0, x1, x0
    6834:	ldrh	w0, [x0]
    6838:	cmp	w0, #0xa
    683c:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6840:	b	6860 <PySequence_Fast@plt+0x4790>
    6844:	ldr	x0, [sp, #24]
    6848:	lsl	x0, x0, #2
    684c:	ldr	x1, [sp, #88]
    6850:	add	x0, x1, x0
    6854:	ldr	w0, [x0]
    6858:	cmp	w0, #0xa
    685c:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6860:	ldr	w0, [sp, #84]
    6864:	cmp	w0, #0x1
    6868:	b.ne	6888 <PySequence_Fast@plt+0x47b8>  // b.any
    686c:	ldr	x0, [sp, #24]
    6870:	ldr	x1, [sp, #88]
    6874:	add	x0, x1, x0
    6878:	ldrb	w0, [x0]
    687c:	cmp	w0, #0xd
    6880:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    6884:	b	6368 <PySequence_Fast@plt+0x4298>
    6888:	ldr	w0, [sp, #84]
    688c:	cmp	w0, #0x2
    6890:	b.ne	68b4 <PySequence_Fast@plt+0x47e4>  // b.any
    6894:	ldr	x0, [sp, #24]
    6898:	lsl	x0, x0, #1
    689c:	ldr	x1, [sp, #88]
    68a0:	add	x0, x1, x0
    68a4:	ldrh	w0, [x0]
    68a8:	cmp	w0, #0xd
    68ac:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    68b0:	b	6368 <PySequence_Fast@plt+0x4298>
    68b4:	ldr	x0, [sp, #24]
    68b8:	lsl	x0, x0, #2
    68bc:	ldr	x1, [sp, #88]
    68c0:	add	x0, x1, x0
    68c4:	ldr	w0, [x0]
    68c8:	cmp	w0, #0xd
    68cc:	b.eq	66f4 <PySequence_Fast@plt+0x4624>  // b.none
    68d0:	b	6368 <PySequence_Fast@plt+0x4298>
    68d4:	nop
    68d8:	ldr	x1, [sp, #24]
    68dc:	ldr	x0, [sp, #72]
    68e0:	cmp	x1, x0
    68e4:	b.gt	6958 <PySequence_Fast@plt+0x4888>
    68e8:	ldr	w0, [sp, #84]
    68ec:	cmp	w0, #0x1
    68f0:	b.ne	6910 <PySequence_Fast@plt+0x4840>  // b.any
    68f4:	ldr	x0, [sp, #24]
    68f8:	ldr	x1, [sp, #88]
    68fc:	add	x0, x1, x0
    6900:	ldrb	w0, [x0]
    6904:	cmp	w0, #0x5d
    6908:	b.ne	6958 <PySequence_Fast@plt+0x4888>  // b.any
    690c:	b	6970 <PySequence_Fast@plt+0x48a0>
    6910:	ldr	w0, [sp, #84]
    6914:	cmp	w0, #0x2
    6918:	b.ne	693c <PySequence_Fast@plt+0x486c>  // b.any
    691c:	ldr	x0, [sp, #24]
    6920:	lsl	x0, x0, #1
    6924:	ldr	x1, [sp, #88]
    6928:	add	x0, x1, x0
    692c:	ldrh	w0, [x0]
    6930:	cmp	w0, #0x5d
    6934:	b.ne	6958 <PySequence_Fast@plt+0x4888>  // b.any
    6938:	b	6970 <PySequence_Fast@plt+0x48a0>
    693c:	ldr	x0, [sp, #24]
    6940:	lsl	x0, x0, #2
    6944:	ldr	x1, [sp, #88]
    6948:	add	x0, x1, x0
    694c:	ldr	w0, [x0]
    6950:	cmp	w0, #0x5d
    6954:	b.eq	6970 <PySequence_Fast@plt+0x48a0>  // b.none
    6958:	ldr	x2, [sp, #72]
    695c:	ldr	x1, [sp, #32]
    6960:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    6964:	add	x0, x0, #0xf48
    6968:	bl	3d28 <PySequence_Fast@plt+0x1c58>
    696c:	b	6994 <PySequence_Fast@plt+0x48c4>
    6970:	ldr	x0, [sp, #24]
    6974:	add	x1, x0, #0x1
    6978:	ldr	x0, [sp, #16]
    697c:	str	x1, [x0]
    6980:	ldr	x0, [sp, #96]
    6984:	b	69b4 <PySequence_Fast@plt+0x48e4>
    6988:	nop
    698c:	b	6994 <PySequence_Fast@plt+0x48c4>
    6990:	nop
    6994:	ldr	x0, [sp, #104]
    6998:	bl	2310 <PySequence_Fast@plt+0x240>
    699c:	ldr	x2, [sp, #96]
    69a0:	mov	w1, #0x38f                 	// #911
    69a4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    69a8:	add	x0, x0, #0xb60
    69ac:	bl	2298 <PySequence_Fast@plt+0x1c8>
    69b0:	mov	x0, #0x0                   	// #0
    69b4:	ldp	x29, x30, [sp], #112
    69b8:	ret
    69bc:	stp	x29, x30, [sp, #-64]!
    69c0:	mov	x29, sp
    69c4:	str	x0, [sp, #40]
    69c8:	str	x1, [sp, #32]
    69cc:	str	x2, [sp, #24]
    69d0:	str	x3, [sp, #16]
    69d4:	ldr	x0, [sp, #32]
    69d8:	bl	2000 <PyUnicode_InternFromString@plt>
    69dc:	str	x0, [sp, #56]
    69e0:	ldr	x0, [sp, #56]
    69e4:	cmp	x0, #0x0
    69e8:	b.ne	69f4 <PySequence_Fast@plt+0x4924>  // b.any
    69ec:	mov	x0, #0x0                   	// #0
    69f0:	b	6a44 <PySequence_Fast@plt+0x4974>
    69f4:	ldr	x0, [sp, #40]
    69f8:	ldr	x0, [x0, #56]
    69fc:	mov	x2, #0x0                   	// #0
    6a00:	ldr	x1, [sp, #56]
    6a04:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    6a08:	str	x0, [sp, #48]
    6a0c:	ldr	x0, [sp, #56]
    6a10:	ldr	x0, [x0, #16]
    6a14:	ldr	x1, [sp, #24]
    6a18:	add	x0, x1, x0
    6a1c:	str	x0, [sp, #24]
    6a20:	ldr	x2, [sp, #56]
    6a24:	mov	w1, #0x3a8                 	// #936
    6a28:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    6a2c:	add	x0, x0, #0xb60
    6a30:	bl	2298 <PySequence_Fast@plt+0x1c8>
    6a34:	ldr	x0, [sp, #16]
    6a38:	ldr	x1, [sp, #24]
    6a3c:	str	x1, [x0]
    6a40:	ldr	x0, [sp, #48]
    6a44:	ldp	x29, x30, [sp], #64
    6a48:	ret
    6a4c:	stp	x29, x30, [sp, #-144]!
    6a50:	mov	x29, sp
    6a54:	str	x0, [sp, #40]
    6a58:	str	x1, [sp, #32]
    6a5c:	str	x2, [sp, #24]
    6a60:	str	x3, [sp, #16]
    6a64:	ldr	x0, [sp, #24]
    6a68:	str	x0, [sp, #136]
    6a6c:	str	wzr, [sp, #132]
    6a70:	str	xzr, [sp, #112]
    6a74:	ldr	x0, [sp, #32]
    6a78:	ldrb	w0, [x0, #32]
    6a7c:	and	w0, w0, #0xffffff80
    6a80:	and	w0, w0, #0xff
    6a84:	cmp	w0, #0x0
    6a88:	b.ne	6aa4 <PySequence_Fast@plt+0x49d4>  // b.any
    6a8c:	ldr	x0, [sp, #32]
    6a90:	bl	1db0 <_PyUnicode_Ready@plt>
    6a94:	cmn	w0, #0x1
    6a98:	b.ne	6aa4 <PySequence_Fast@plt+0x49d4>  // b.any
    6a9c:	mov	x0, #0x0                   	// #0
    6aa0:	b	7758 <PySequence_Fast@plt+0x5688>
    6aa4:	ldr	x0, [sp, #32]
    6aa8:	ldrb	w0, [x0, #32]
    6aac:	and	w0, w0, #0x20
    6ab0:	and	w0, w0, #0xff
    6ab4:	cmp	w0, #0x0
    6ab8:	b.eq	6aec <PySequence_Fast@plt+0x4a1c>  // b.none
    6abc:	ldr	x0, [sp, #32]
    6ac0:	ldrb	w0, [x0, #32]
    6ac4:	and	w0, w0, #0x40
    6ac8:	and	w0, w0, #0xff
    6acc:	cmp	w0, #0x0
    6ad0:	b.eq	6ae0 <PySequence_Fast@plt+0x4a10>  // b.none
    6ad4:	ldr	x0, [sp, #32]
    6ad8:	add	x0, x0, #0x30
    6adc:	b	6af4 <PySequence_Fast@plt+0x4a24>
    6ae0:	ldr	x0, [sp, #32]
    6ae4:	add	x0, x0, #0x48
    6ae8:	b	6af4 <PySequence_Fast@plt+0x4a24>
    6aec:	ldr	x0, [sp, #32]
    6af0:	ldr	x0, [x0, #72]
    6af4:	str	x0, [sp, #88]
    6af8:	ldr	x0, [sp, #32]
    6afc:	ldrb	w0, [x0, #32]
    6b00:	ubfx	x0, x0, #2, #3
    6b04:	and	w0, w0, #0xff
    6b08:	str	w0, [sp, #84]
    6b0c:	ldr	x0, [sp, #32]
    6b10:	ldr	x0, [x0, #16]
    6b14:	sub	x0, x0, #0x1
    6b18:	str	x0, [sp, #72]
    6b1c:	ldr	w0, [sp, #84]
    6b20:	cmp	w0, #0x1
    6b24:	b.ne	6b48 <PySequence_Fast@plt+0x4a78>  // b.any
    6b28:	ldr	x0, [sp, #136]
    6b2c:	ldr	x1, [sp, #88]
    6b30:	add	x0, x1, x0
    6b34:	ldrb	w0, [x0]
    6b38:	cmp	w0, #0x2d
    6b3c:	cset	w0, eq  // eq = none
    6b40:	and	w0, w0, #0xff
    6b44:	b	6b98 <PySequence_Fast@plt+0x4ac8>
    6b48:	ldr	w0, [sp, #84]
    6b4c:	cmp	w0, #0x2
    6b50:	b.ne	6b78 <PySequence_Fast@plt+0x4aa8>  // b.any
    6b54:	ldr	x0, [sp, #136]
    6b58:	lsl	x0, x0, #1
    6b5c:	ldr	x1, [sp, #88]
    6b60:	add	x0, x1, x0
    6b64:	ldrh	w0, [x0]
    6b68:	cmp	w0, #0x2d
    6b6c:	cset	w0, eq  // eq = none
    6b70:	and	w0, w0, #0xff
    6b74:	b	6b98 <PySequence_Fast@plt+0x4ac8>
    6b78:	ldr	x0, [sp, #136]
    6b7c:	lsl	x0, x0, #2
    6b80:	ldr	x1, [sp, #88]
    6b84:	add	x0, x1, x0
    6b88:	ldr	w0, [x0]
    6b8c:	cmp	w0, #0x2d
    6b90:	cset	w0, eq  // eq = none
    6b94:	and	w0, w0, #0xff
    6b98:	cmp	w0, #0x0
    6b9c:	b.eq	6bcc <PySequence_Fast@plt+0x4afc>  // b.none
    6ba0:	ldr	x0, [sp, #136]
    6ba4:	add	x0, x0, #0x1
    6ba8:	str	x0, [sp, #136]
    6bac:	ldr	x1, [sp, #136]
    6bb0:	ldr	x0, [sp, #72]
    6bb4:	cmp	x1, x0
    6bb8:	b.le	6bcc <PySequence_Fast@plt+0x4afc>
    6bbc:	ldr	x0, [sp, #24]
    6bc0:	bl	3e2c <PySequence_Fast@plt+0x1d5c>
    6bc4:	mov	x0, #0x0                   	// #0
    6bc8:	b	7758 <PySequence_Fast@plt+0x5688>
    6bcc:	ldr	w0, [sp, #84]
    6bd0:	cmp	w0, #0x1
    6bd4:	b.ne	6bf4 <PySequence_Fast@plt+0x4b24>  // b.any
    6bd8:	ldr	x0, [sp, #136]
    6bdc:	ldr	x1, [sp, #88]
    6be0:	add	x0, x1, x0
    6be4:	ldrb	w0, [x0]
    6be8:	cmp	w0, #0x30
    6bec:	b.hi	6c3c <PySequence_Fast@plt+0x4b6c>  // b.pmore
    6bf0:	b	6dbc <PySequence_Fast@plt+0x4cec>
    6bf4:	ldr	w0, [sp, #84]
    6bf8:	cmp	w0, #0x2
    6bfc:	b.ne	6c20 <PySequence_Fast@plt+0x4b50>  // b.any
    6c00:	ldr	x0, [sp, #136]
    6c04:	lsl	x0, x0, #1
    6c08:	ldr	x1, [sp, #88]
    6c0c:	add	x0, x1, x0
    6c10:	ldrh	w0, [x0]
    6c14:	cmp	w0, #0x30
    6c18:	b.hi	6c3c <PySequence_Fast@plt+0x4b6c>  // b.pmore
    6c1c:	b	6dbc <PySequence_Fast@plt+0x4cec>
    6c20:	ldr	x0, [sp, #136]
    6c24:	lsl	x0, x0, #2
    6c28:	ldr	x1, [sp, #88]
    6c2c:	add	x0, x1, x0
    6c30:	ldr	w0, [x0]
    6c34:	cmp	w0, #0x30
    6c38:	b.ls	6dbc <PySequence_Fast@plt+0x4cec>  // b.plast
    6c3c:	ldr	w0, [sp, #84]
    6c40:	cmp	w0, #0x1
    6c44:	b.ne	6c64 <PySequence_Fast@plt+0x4b94>  // b.any
    6c48:	ldr	x0, [sp, #136]
    6c4c:	ldr	x1, [sp, #88]
    6c50:	add	x0, x1, x0
    6c54:	ldrb	w0, [x0]
    6c58:	cmp	w0, #0x39
    6c5c:	b.ls	6cac <PySequence_Fast@plt+0x4bdc>  // b.plast
    6c60:	b	6dbc <PySequence_Fast@plt+0x4cec>
    6c64:	ldr	w0, [sp, #84]
    6c68:	cmp	w0, #0x2
    6c6c:	b.ne	6c90 <PySequence_Fast@plt+0x4bc0>  // b.any
    6c70:	ldr	x0, [sp, #136]
    6c74:	lsl	x0, x0, #1
    6c78:	ldr	x1, [sp, #88]
    6c7c:	add	x0, x1, x0
    6c80:	ldrh	w0, [x0]
    6c84:	cmp	w0, #0x39
    6c88:	b.ls	6cac <PySequence_Fast@plt+0x4bdc>  // b.plast
    6c8c:	b	6dbc <PySequence_Fast@plt+0x4cec>
    6c90:	ldr	x0, [sp, #136]
    6c94:	lsl	x0, x0, #2
    6c98:	ldr	x1, [sp, #88]
    6c9c:	add	x0, x1, x0
    6ca0:	ldr	w0, [x0]
    6ca4:	cmp	w0, #0x39
    6ca8:	b.hi	6dbc <PySequence_Fast@plt+0x4cec>  // b.pmore
    6cac:	ldr	x0, [sp, #136]
    6cb0:	add	x0, x0, #0x1
    6cb4:	str	x0, [sp, #136]
    6cb8:	b	6cc8 <PySequence_Fast@plt+0x4bf8>
    6cbc:	ldr	x0, [sp, #136]
    6cc0:	add	x0, x0, #0x1
    6cc4:	str	x0, [sp, #136]
    6cc8:	ldr	x1, [sp, #136]
    6ccc:	ldr	x0, [sp, #72]
    6cd0:	cmp	x1, x0
    6cd4:	b.gt	6e60 <PySequence_Fast@plt+0x4d90>
    6cd8:	ldr	w0, [sp, #84]
    6cdc:	cmp	w0, #0x1
    6ce0:	b.ne	6d00 <PySequence_Fast@plt+0x4c30>  // b.any
    6ce4:	ldr	x0, [sp, #136]
    6ce8:	ldr	x1, [sp, #88]
    6cec:	add	x0, x1, x0
    6cf0:	ldrb	w0, [x0]
    6cf4:	cmp	w0, #0x2f
    6cf8:	b.hi	6d48 <PySequence_Fast@plt+0x4c78>  // b.pmore
    6cfc:	b	6e60 <PySequence_Fast@plt+0x4d90>
    6d00:	ldr	w0, [sp, #84]
    6d04:	cmp	w0, #0x2
    6d08:	b.ne	6d2c <PySequence_Fast@plt+0x4c5c>  // b.any
    6d0c:	ldr	x0, [sp, #136]
    6d10:	lsl	x0, x0, #1
    6d14:	ldr	x1, [sp, #88]
    6d18:	add	x0, x1, x0
    6d1c:	ldrh	w0, [x0]
    6d20:	cmp	w0, #0x2f
    6d24:	b.hi	6d48 <PySequence_Fast@plt+0x4c78>  // b.pmore
    6d28:	b	6e60 <PySequence_Fast@plt+0x4d90>
    6d2c:	ldr	x0, [sp, #136]
    6d30:	lsl	x0, x0, #2
    6d34:	ldr	x1, [sp, #88]
    6d38:	add	x0, x1, x0
    6d3c:	ldr	w0, [x0]
    6d40:	cmp	w0, #0x2f
    6d44:	b.ls	6e60 <PySequence_Fast@plt+0x4d90>  // b.plast
    6d48:	ldr	w0, [sp, #84]
    6d4c:	cmp	w0, #0x1
    6d50:	b.ne	6d70 <PySequence_Fast@plt+0x4ca0>  // b.any
    6d54:	ldr	x0, [sp, #136]
    6d58:	ldr	x1, [sp, #88]
    6d5c:	add	x0, x1, x0
    6d60:	ldrb	w0, [x0]
    6d64:	cmp	w0, #0x39
    6d68:	b.ls	6cbc <PySequence_Fast@plt+0x4bec>  // b.plast
    6d6c:	b	6e60 <PySequence_Fast@plt+0x4d90>
    6d70:	ldr	w0, [sp, #84]
    6d74:	cmp	w0, #0x2
    6d78:	b.ne	6d9c <PySequence_Fast@plt+0x4ccc>  // b.any
    6d7c:	ldr	x0, [sp, #136]
    6d80:	lsl	x0, x0, #1
    6d84:	ldr	x1, [sp, #88]
    6d88:	add	x0, x1, x0
    6d8c:	ldrh	w0, [x0]
    6d90:	cmp	w0, #0x39
    6d94:	b.ls	6cbc <PySequence_Fast@plt+0x4bec>  // b.plast
    6d98:	b	6e60 <PySequence_Fast@plt+0x4d90>
    6d9c:	ldr	x0, [sp, #136]
    6da0:	lsl	x0, x0, #2
    6da4:	ldr	x1, [sp, #88]
    6da8:	add	x0, x1, x0
    6dac:	ldr	w0, [x0]
    6db0:	cmp	w0, #0x39
    6db4:	b.ls	6cbc <PySequence_Fast@plt+0x4bec>  // b.plast
    6db8:	b	6e60 <PySequence_Fast@plt+0x4d90>
    6dbc:	ldr	w0, [sp, #84]
    6dc0:	cmp	w0, #0x1
    6dc4:	b.ne	6de8 <PySequence_Fast@plt+0x4d18>  // b.any
    6dc8:	ldr	x0, [sp, #136]
    6dcc:	ldr	x1, [sp, #88]
    6dd0:	add	x0, x1, x0
    6dd4:	ldrb	w0, [x0]
    6dd8:	cmp	w0, #0x30
    6ddc:	cset	w0, eq  // eq = none
    6de0:	and	w0, w0, #0xff
    6de4:	b	6e38 <PySequence_Fast@plt+0x4d68>
    6de8:	ldr	w0, [sp, #84]
    6dec:	cmp	w0, #0x2
    6df0:	b.ne	6e18 <PySequence_Fast@plt+0x4d48>  // b.any
    6df4:	ldr	x0, [sp, #136]
    6df8:	lsl	x0, x0, #1
    6dfc:	ldr	x1, [sp, #88]
    6e00:	add	x0, x1, x0
    6e04:	ldrh	w0, [x0]
    6e08:	cmp	w0, #0x30
    6e0c:	cset	w0, eq  // eq = none
    6e10:	and	w0, w0, #0xff
    6e14:	b	6e38 <PySequence_Fast@plt+0x4d68>
    6e18:	ldr	x0, [sp, #136]
    6e1c:	lsl	x0, x0, #2
    6e20:	ldr	x1, [sp, #88]
    6e24:	add	x0, x1, x0
    6e28:	ldr	w0, [x0]
    6e2c:	cmp	w0, #0x30
    6e30:	cset	w0, eq  // eq = none
    6e34:	and	w0, w0, #0xff
    6e38:	cmp	w0, #0x0
    6e3c:	b.eq	6e50 <PySequence_Fast@plt+0x4d80>  // b.none
    6e40:	ldr	x0, [sp, #136]
    6e44:	add	x0, x0, #0x1
    6e48:	str	x0, [sp, #136]
    6e4c:	b	6e64 <PySequence_Fast@plt+0x4d94>
    6e50:	ldr	x0, [sp, #24]
    6e54:	bl	3e2c <PySequence_Fast@plt+0x1d5c>
    6e58:	mov	x0, #0x0                   	// #0
    6e5c:	b	7758 <PySequence_Fast@plt+0x5688>
    6e60:	nop
    6e64:	ldr	x1, [sp, #136]
    6e68:	ldr	x0, [sp, #72]
    6e6c:	cmp	x1, x0
    6e70:	b.ge	712c <PySequence_Fast@plt+0x505c>  // b.tcont
    6e74:	ldr	w0, [sp, #84]
    6e78:	cmp	w0, #0x1
    6e7c:	b.ne	6ea0 <PySequence_Fast@plt+0x4dd0>  // b.any
    6e80:	ldr	x0, [sp, #136]
    6e84:	ldr	x1, [sp, #88]
    6e88:	add	x0, x1, x0
    6e8c:	ldrb	w0, [x0]
    6e90:	cmp	w0, #0x2e
    6e94:	cset	w0, eq  // eq = none
    6e98:	and	w0, w0, #0xff
    6e9c:	b	6ef0 <PySequence_Fast@plt+0x4e20>
    6ea0:	ldr	w0, [sp, #84]
    6ea4:	cmp	w0, #0x2
    6ea8:	b.ne	6ed0 <PySequence_Fast@plt+0x4e00>  // b.any
    6eac:	ldr	x0, [sp, #136]
    6eb0:	lsl	x0, x0, #1
    6eb4:	ldr	x1, [sp, #88]
    6eb8:	add	x0, x1, x0
    6ebc:	ldrh	w0, [x0]
    6ec0:	cmp	w0, #0x2e
    6ec4:	cset	w0, eq  // eq = none
    6ec8:	and	w0, w0, #0xff
    6ecc:	b	6ef0 <PySequence_Fast@plt+0x4e20>
    6ed0:	ldr	x0, [sp, #136]
    6ed4:	lsl	x0, x0, #2
    6ed8:	ldr	x1, [sp, #88]
    6edc:	add	x0, x1, x0
    6ee0:	ldr	w0, [x0]
    6ee4:	cmp	w0, #0x2e
    6ee8:	cset	w0, eq  // eq = none
    6eec:	and	w0, w0, #0xff
    6ef0:	cmp	w0, #0x0
    6ef4:	b.eq	712c <PySequence_Fast@plt+0x505c>  // b.none
    6ef8:	ldr	w0, [sp, #84]
    6efc:	cmp	w0, #0x1
    6f00:	b.ne	6f28 <PySequence_Fast@plt+0x4e58>  // b.any
    6f04:	ldr	x0, [sp, #136]
    6f08:	add	x0, x0, #0x1
    6f0c:	ldr	x1, [sp, #88]
    6f10:	add	x0, x1, x0
    6f14:	ldrb	w0, [x0]
    6f18:	cmp	w0, #0x2f
    6f1c:	cset	w0, hi  // hi = pmore
    6f20:	and	w0, w0, #0xff
    6f24:	b	6f80 <PySequence_Fast@plt+0x4eb0>
    6f28:	ldr	w0, [sp, #84]
    6f2c:	cmp	w0, #0x2
    6f30:	b.ne	6f5c <PySequence_Fast@plt+0x4e8c>  // b.any
    6f34:	ldr	x0, [sp, #136]
    6f38:	add	x0, x0, #0x1
    6f3c:	lsl	x0, x0, #1
    6f40:	ldr	x1, [sp, #88]
    6f44:	add	x0, x1, x0
    6f48:	ldrh	w0, [x0]
    6f4c:	cmp	w0, #0x2f
    6f50:	cset	w0, hi  // hi = pmore
    6f54:	and	w0, w0, #0xff
    6f58:	b	6f80 <PySequence_Fast@plt+0x4eb0>
    6f5c:	ldr	x0, [sp, #136]
    6f60:	add	x0, x0, #0x1
    6f64:	lsl	x0, x0, #2
    6f68:	ldr	x1, [sp, #88]
    6f6c:	add	x0, x1, x0
    6f70:	ldr	w0, [x0]
    6f74:	cmp	w0, #0x2f
    6f78:	cset	w0, hi  // hi = pmore
    6f7c:	and	w0, w0, #0xff
    6f80:	cmp	w0, #0x0
    6f84:	b.eq	712c <PySequence_Fast@plt+0x505c>  // b.none
    6f88:	ldr	w0, [sp, #84]
    6f8c:	cmp	w0, #0x1
    6f90:	b.ne	6fb8 <PySequence_Fast@plt+0x4ee8>  // b.any
    6f94:	ldr	x0, [sp, #136]
    6f98:	add	x0, x0, #0x1
    6f9c:	ldr	x1, [sp, #88]
    6fa0:	add	x0, x1, x0
    6fa4:	ldrb	w0, [x0]
    6fa8:	cmp	w0, #0x39
    6fac:	cset	w0, ls  // ls = plast
    6fb0:	and	w0, w0, #0xff
    6fb4:	b	7010 <PySequence_Fast@plt+0x4f40>
    6fb8:	ldr	w0, [sp, #84]
    6fbc:	cmp	w0, #0x2
    6fc0:	b.ne	6fec <PySequence_Fast@plt+0x4f1c>  // b.any
    6fc4:	ldr	x0, [sp, #136]
    6fc8:	add	x0, x0, #0x1
    6fcc:	lsl	x0, x0, #1
    6fd0:	ldr	x1, [sp, #88]
    6fd4:	add	x0, x1, x0
    6fd8:	ldrh	w0, [x0]
    6fdc:	cmp	w0, #0x39
    6fe0:	cset	w0, ls  // ls = plast
    6fe4:	and	w0, w0, #0xff
    6fe8:	b	7010 <PySequence_Fast@plt+0x4f40>
    6fec:	ldr	x0, [sp, #136]
    6ff0:	add	x0, x0, #0x1
    6ff4:	lsl	x0, x0, #2
    6ff8:	ldr	x1, [sp, #88]
    6ffc:	add	x0, x1, x0
    7000:	ldr	w0, [x0]
    7004:	cmp	w0, #0x39
    7008:	cset	w0, ls  // ls = plast
    700c:	and	w0, w0, #0xff
    7010:	cmp	w0, #0x0
    7014:	b.eq	712c <PySequence_Fast@plt+0x505c>  // b.none
    7018:	mov	w0, #0x1                   	// #1
    701c:	str	w0, [sp, #132]
    7020:	ldr	x0, [sp, #136]
    7024:	add	x0, x0, #0x2
    7028:	str	x0, [sp, #136]
    702c:	b	703c <PySequence_Fast@plt+0x4f6c>
    7030:	ldr	x0, [sp, #136]
    7034:	add	x0, x0, #0x1
    7038:	str	x0, [sp, #136]
    703c:	ldr	x1, [sp, #136]
    7040:	ldr	x0, [sp, #72]
    7044:	cmp	x1, x0
    7048:	b.gt	712c <PySequence_Fast@plt+0x505c>
    704c:	ldr	w0, [sp, #84]
    7050:	cmp	w0, #0x1
    7054:	b.ne	7074 <PySequence_Fast@plt+0x4fa4>  // b.any
    7058:	ldr	x0, [sp, #136]
    705c:	ldr	x1, [sp, #88]
    7060:	add	x0, x1, x0
    7064:	ldrb	w0, [x0]
    7068:	cmp	w0, #0x2f
    706c:	b.hi	70bc <PySequence_Fast@plt+0x4fec>  // b.pmore
    7070:	b	712c <PySequence_Fast@plt+0x505c>
    7074:	ldr	w0, [sp, #84]
    7078:	cmp	w0, #0x2
    707c:	b.ne	70a0 <PySequence_Fast@plt+0x4fd0>  // b.any
    7080:	ldr	x0, [sp, #136]
    7084:	lsl	x0, x0, #1
    7088:	ldr	x1, [sp, #88]
    708c:	add	x0, x1, x0
    7090:	ldrh	w0, [x0]
    7094:	cmp	w0, #0x2f
    7098:	b.hi	70bc <PySequence_Fast@plt+0x4fec>  // b.pmore
    709c:	b	712c <PySequence_Fast@plt+0x505c>
    70a0:	ldr	x0, [sp, #136]
    70a4:	lsl	x0, x0, #2
    70a8:	ldr	x1, [sp, #88]
    70ac:	add	x0, x1, x0
    70b0:	ldr	w0, [x0]
    70b4:	cmp	w0, #0x2f
    70b8:	b.ls	712c <PySequence_Fast@plt+0x505c>  // b.plast
    70bc:	ldr	w0, [sp, #84]
    70c0:	cmp	w0, #0x1
    70c4:	b.ne	70e4 <PySequence_Fast@plt+0x5014>  // b.any
    70c8:	ldr	x0, [sp, #136]
    70cc:	ldr	x1, [sp, #88]
    70d0:	add	x0, x1, x0
    70d4:	ldrb	w0, [x0]
    70d8:	cmp	w0, #0x39
    70dc:	b.ls	7030 <PySequence_Fast@plt+0x4f60>  // b.plast
    70e0:	b	712c <PySequence_Fast@plt+0x505c>
    70e4:	ldr	w0, [sp, #84]
    70e8:	cmp	w0, #0x2
    70ec:	b.ne	7110 <PySequence_Fast@plt+0x5040>  // b.any
    70f0:	ldr	x0, [sp, #136]
    70f4:	lsl	x0, x0, #1
    70f8:	ldr	x1, [sp, #88]
    70fc:	add	x0, x1, x0
    7100:	ldrh	w0, [x0]
    7104:	cmp	w0, #0x39
    7108:	b.ls	7030 <PySequence_Fast@plt+0x4f60>  // b.plast
    710c:	b	712c <PySequence_Fast@plt+0x505c>
    7110:	ldr	x0, [sp, #136]
    7114:	lsl	x0, x0, #2
    7118:	ldr	x1, [sp, #88]
    711c:	add	x0, x1, x0
    7120:	ldr	w0, [x0]
    7124:	cmp	w0, #0x39
    7128:	b.ls	7030 <PySequence_Fast@plt+0x4f60>  // b.plast
    712c:	ldr	x1, [sp, #136]
    7130:	ldr	x0, [sp, #72]
    7134:	cmp	x1, x0
    7138:	b.ge	7538 <PySequence_Fast@plt+0x5468>  // b.tcont
    713c:	ldr	w0, [sp, #84]
    7140:	cmp	w0, #0x1
    7144:	b.ne	7164 <PySequence_Fast@plt+0x5094>  // b.any
    7148:	ldr	x0, [sp, #136]
    714c:	ldr	x1, [sp, #88]
    7150:	add	x0, x1, x0
    7154:	ldrb	w0, [x0]
    7158:	cmp	w0, #0x65
    715c:	b.eq	721c <PySequence_Fast@plt+0x514c>  // b.none
    7160:	b	71ac <PySequence_Fast@plt+0x50dc>
    7164:	ldr	w0, [sp, #84]
    7168:	cmp	w0, #0x2
    716c:	b.ne	7190 <PySequence_Fast@plt+0x50c0>  // b.any
    7170:	ldr	x0, [sp, #136]
    7174:	lsl	x0, x0, #1
    7178:	ldr	x1, [sp, #88]
    717c:	add	x0, x1, x0
    7180:	ldrh	w0, [x0]
    7184:	cmp	w0, #0x65
    7188:	b.eq	721c <PySequence_Fast@plt+0x514c>  // b.none
    718c:	b	71ac <PySequence_Fast@plt+0x50dc>
    7190:	ldr	x0, [sp, #136]
    7194:	lsl	x0, x0, #2
    7198:	ldr	x1, [sp, #88]
    719c:	add	x0, x1, x0
    71a0:	ldr	w0, [x0]
    71a4:	cmp	w0, #0x65
    71a8:	b.eq	721c <PySequence_Fast@plt+0x514c>  // b.none
    71ac:	ldr	w0, [sp, #84]
    71b0:	cmp	w0, #0x1
    71b4:	b.ne	71d4 <PySequence_Fast@plt+0x5104>  // b.any
    71b8:	ldr	x0, [sp, #136]
    71bc:	ldr	x1, [sp, #88]
    71c0:	add	x0, x1, x0
    71c4:	ldrb	w0, [x0]
    71c8:	cmp	w0, #0x45
    71cc:	b.eq	721c <PySequence_Fast@plt+0x514c>  // b.none
    71d0:	b	7538 <PySequence_Fast@plt+0x5468>
    71d4:	ldr	w0, [sp, #84]
    71d8:	cmp	w0, #0x2
    71dc:	b.ne	7200 <PySequence_Fast@plt+0x5130>  // b.any
    71e0:	ldr	x0, [sp, #136]
    71e4:	lsl	x0, x0, #1
    71e8:	ldr	x1, [sp, #88]
    71ec:	add	x0, x1, x0
    71f0:	ldrh	w0, [x0]
    71f4:	cmp	w0, #0x45
    71f8:	b.eq	721c <PySequence_Fast@plt+0x514c>  // b.none
    71fc:	b	7538 <PySequence_Fast@plt+0x5468>
    7200:	ldr	x0, [sp, #136]
    7204:	lsl	x0, x0, #2
    7208:	ldr	x1, [sp, #88]
    720c:	add	x0, x1, x0
    7210:	ldr	w0, [x0]
    7214:	cmp	w0, #0x45
    7218:	b.ne	7538 <PySequence_Fast@plt+0x5468>  // b.any
    721c:	ldr	x0, [sp, #136]
    7220:	str	x0, [sp, #64]
    7224:	ldr	x0, [sp, #136]
    7228:	add	x0, x0, #0x1
    722c:	str	x0, [sp, #136]
    7230:	ldr	x1, [sp, #136]
    7234:	ldr	x0, [sp, #72]
    7238:	cmp	x1, x0
    723c:	b.ge	733c <PySequence_Fast@plt+0x526c>  // b.tcont
    7240:	ldr	w0, [sp, #84]
    7244:	cmp	w0, #0x1
    7248:	b.ne	7268 <PySequence_Fast@plt+0x5198>  // b.any
    724c:	ldr	x0, [sp, #136]
    7250:	ldr	x1, [sp, #88]
    7254:	add	x0, x1, x0
    7258:	ldrb	w0, [x0]
    725c:	cmp	w0, #0x2d
    7260:	b.eq	7320 <PySequence_Fast@plt+0x5250>  // b.none
    7264:	b	72b0 <PySequence_Fast@plt+0x51e0>
    7268:	ldr	w0, [sp, #84]
    726c:	cmp	w0, #0x2
    7270:	b.ne	7294 <PySequence_Fast@plt+0x51c4>  // b.any
    7274:	ldr	x0, [sp, #136]
    7278:	lsl	x0, x0, #1
    727c:	ldr	x1, [sp, #88]
    7280:	add	x0, x1, x0
    7284:	ldrh	w0, [x0]
    7288:	cmp	w0, #0x2d
    728c:	b.eq	7320 <PySequence_Fast@plt+0x5250>  // b.none
    7290:	b	72b0 <PySequence_Fast@plt+0x51e0>
    7294:	ldr	x0, [sp, #136]
    7298:	lsl	x0, x0, #2
    729c:	ldr	x1, [sp, #88]
    72a0:	add	x0, x1, x0
    72a4:	ldr	w0, [x0]
    72a8:	cmp	w0, #0x2d
    72ac:	b.eq	7320 <PySequence_Fast@plt+0x5250>  // b.none
    72b0:	ldr	w0, [sp, #84]
    72b4:	cmp	w0, #0x1
    72b8:	b.ne	72d8 <PySequence_Fast@plt+0x5208>  // b.any
    72bc:	ldr	x0, [sp, #136]
    72c0:	ldr	x1, [sp, #88]
    72c4:	add	x0, x1, x0
    72c8:	ldrb	w0, [x0]
    72cc:	cmp	w0, #0x2b
    72d0:	b.eq	7320 <PySequence_Fast@plt+0x5250>  // b.none
    72d4:	b	733c <PySequence_Fast@plt+0x526c>
    72d8:	ldr	w0, [sp, #84]
    72dc:	cmp	w0, #0x2
    72e0:	b.ne	7304 <PySequence_Fast@plt+0x5234>  // b.any
    72e4:	ldr	x0, [sp, #136]
    72e8:	lsl	x0, x0, #1
    72ec:	ldr	x1, [sp, #88]
    72f0:	add	x0, x1, x0
    72f4:	ldrh	w0, [x0]
    72f8:	cmp	w0, #0x2b
    72fc:	b.eq	7320 <PySequence_Fast@plt+0x5250>  // b.none
    7300:	b	733c <PySequence_Fast@plt+0x526c>
    7304:	ldr	x0, [sp, #136]
    7308:	lsl	x0, x0, #2
    730c:	ldr	x1, [sp, #88]
    7310:	add	x0, x1, x0
    7314:	ldr	w0, [x0]
    7318:	cmp	w0, #0x2b
    731c:	b.ne	733c <PySequence_Fast@plt+0x526c>  // b.any
    7320:	ldr	x0, [sp, #136]
    7324:	add	x0, x0, #0x1
    7328:	str	x0, [sp, #136]
    732c:	b	733c <PySequence_Fast@plt+0x526c>
    7330:	ldr	x0, [sp, #136]
    7334:	add	x0, x0, #0x1
    7338:	str	x0, [sp, #136]
    733c:	ldr	x1, [sp, #136]
    7340:	ldr	x0, [sp, #72]
    7344:	cmp	x1, x0
    7348:	b.gt	742c <PySequence_Fast@plt+0x535c>
    734c:	ldr	w0, [sp, #84]
    7350:	cmp	w0, #0x1
    7354:	b.ne	7374 <PySequence_Fast@plt+0x52a4>  // b.any
    7358:	ldr	x0, [sp, #136]
    735c:	ldr	x1, [sp, #88]
    7360:	add	x0, x1, x0
    7364:	ldrb	w0, [x0]
    7368:	cmp	w0, #0x2f
    736c:	b.hi	73bc <PySequence_Fast@plt+0x52ec>  // b.pmore
    7370:	b	742c <PySequence_Fast@plt+0x535c>
    7374:	ldr	w0, [sp, #84]
    7378:	cmp	w0, #0x2
    737c:	b.ne	73a0 <PySequence_Fast@plt+0x52d0>  // b.any
    7380:	ldr	x0, [sp, #136]
    7384:	lsl	x0, x0, #1
    7388:	ldr	x1, [sp, #88]
    738c:	add	x0, x1, x0
    7390:	ldrh	w0, [x0]
    7394:	cmp	w0, #0x2f
    7398:	b.hi	73bc <PySequence_Fast@plt+0x52ec>  // b.pmore
    739c:	b	742c <PySequence_Fast@plt+0x535c>
    73a0:	ldr	x0, [sp, #136]
    73a4:	lsl	x0, x0, #2
    73a8:	ldr	x1, [sp, #88]
    73ac:	add	x0, x1, x0
    73b0:	ldr	w0, [x0]
    73b4:	cmp	w0, #0x2f
    73b8:	b.ls	742c <PySequence_Fast@plt+0x535c>  // b.plast
    73bc:	ldr	w0, [sp, #84]
    73c0:	cmp	w0, #0x1
    73c4:	b.ne	73e4 <PySequence_Fast@plt+0x5314>  // b.any
    73c8:	ldr	x0, [sp, #136]
    73cc:	ldr	x1, [sp, #88]
    73d0:	add	x0, x1, x0
    73d4:	ldrb	w0, [x0]
    73d8:	cmp	w0, #0x39
    73dc:	b.ls	7330 <PySequence_Fast@plt+0x5260>  // b.plast
    73e0:	b	742c <PySequence_Fast@plt+0x535c>
    73e4:	ldr	w0, [sp, #84]
    73e8:	cmp	w0, #0x2
    73ec:	b.ne	7410 <PySequence_Fast@plt+0x5340>  // b.any
    73f0:	ldr	x0, [sp, #136]
    73f4:	lsl	x0, x0, #1
    73f8:	ldr	x1, [sp, #88]
    73fc:	add	x0, x1, x0
    7400:	ldrh	w0, [x0]
    7404:	cmp	w0, #0x39
    7408:	b.ls	7330 <PySequence_Fast@plt+0x5260>  // b.plast
    740c:	b	742c <PySequence_Fast@plt+0x535c>
    7410:	ldr	x0, [sp, #136]
    7414:	lsl	x0, x0, #2
    7418:	ldr	x1, [sp, #88]
    741c:	add	x0, x1, x0
    7420:	ldr	w0, [x0]
    7424:	cmp	w0, #0x39
    7428:	b.ls	7330 <PySequence_Fast@plt+0x5260>  // b.plast
    742c:	ldr	w0, [sp, #84]
    7430:	cmp	w0, #0x1
    7434:	b.ne	7458 <PySequence_Fast@plt+0x5388>  // b.any
    7438:	ldr	x0, [sp, #136]
    743c:	sub	x0, x0, #0x1
    7440:	ldr	x1, [sp, #88]
    7444:	add	x0, x1, x0
    7448:	ldrb	w0, [x0]
    744c:	cmp	w0, #0x2f
    7450:	b.hi	74a8 <PySequence_Fast@plt+0x53d8>  // b.pmore
    7454:	b	7530 <PySequence_Fast@plt+0x5460>
    7458:	ldr	w0, [sp, #84]
    745c:	cmp	w0, #0x2
    7460:	b.ne	7488 <PySequence_Fast@plt+0x53b8>  // b.any
    7464:	ldr	x0, [sp, #136]
    7468:	lsl	x0, x0, #1
    746c:	sub	x0, x0, #0x2
    7470:	ldr	x1, [sp, #88]
    7474:	add	x0, x1, x0
    7478:	ldrh	w0, [x0]
    747c:	cmp	w0, #0x2f
    7480:	b.hi	74a8 <PySequence_Fast@plt+0x53d8>  // b.pmore
    7484:	b	7530 <PySequence_Fast@plt+0x5460>
    7488:	ldr	x0, [sp, #136]
    748c:	lsl	x0, x0, #2
    7490:	sub	x0, x0, #0x4
    7494:	ldr	x1, [sp, #88]
    7498:	add	x0, x1, x0
    749c:	ldr	w0, [x0]
    74a0:	cmp	w0, #0x2f
    74a4:	b.ls	7530 <PySequence_Fast@plt+0x5460>  // b.plast
    74a8:	ldr	w0, [sp, #84]
    74ac:	cmp	w0, #0x1
    74b0:	b.ne	74d4 <PySequence_Fast@plt+0x5404>  // b.any
    74b4:	ldr	x0, [sp, #136]
    74b8:	sub	x0, x0, #0x1
    74bc:	ldr	x1, [sp, #88]
    74c0:	add	x0, x1, x0
    74c4:	ldrb	w0, [x0]
    74c8:	cmp	w0, #0x39
    74cc:	b.ls	7524 <PySequence_Fast@plt+0x5454>  // b.plast
    74d0:	b	7530 <PySequence_Fast@plt+0x5460>
    74d4:	ldr	w0, [sp, #84]
    74d8:	cmp	w0, #0x2
    74dc:	b.ne	7504 <PySequence_Fast@plt+0x5434>  // b.any
    74e0:	ldr	x0, [sp, #136]
    74e4:	lsl	x0, x0, #1
    74e8:	sub	x0, x0, #0x2
    74ec:	ldr	x1, [sp, #88]
    74f0:	add	x0, x1, x0
    74f4:	ldrh	w0, [x0]
    74f8:	cmp	w0, #0x39
    74fc:	b.ls	7524 <PySequence_Fast@plt+0x5454>  // b.plast
    7500:	b	7530 <PySequence_Fast@plt+0x5460>
    7504:	ldr	x0, [sp, #136]
    7508:	lsl	x0, x0, #2
    750c:	sub	x0, x0, #0x4
    7510:	ldr	x1, [sp, #88]
    7514:	add	x0, x1, x0
    7518:	ldr	w0, [x0]
    751c:	cmp	w0, #0x39
    7520:	b.hi	7530 <PySequence_Fast@plt+0x5460>  // b.pmore
    7524:	mov	w0, #0x1                   	// #1
    7528:	str	w0, [sp, #132]
    752c:	b	7538 <PySequence_Fast@plt+0x5468>
    7530:	ldr	x0, [sp, #64]
    7534:	str	x0, [sp, #136]
    7538:	ldr	w0, [sp, #132]
    753c:	cmp	w0, #0x0
    7540:	b.eq	756c <PySequence_Fast@plt+0x549c>  // b.none
    7544:	ldr	x0, [sp, #40]
    7548:	ldr	x1, [x0, #40]
    754c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7550:	ldr	x0, [x0, #3952]
    7554:	cmp	x1, x0
    7558:	b.eq	756c <PySequence_Fast@plt+0x549c>  // b.none
    755c:	ldr	x0, [sp, #40]
    7560:	ldr	x0, [x0, #40]
    7564:	str	x0, [sp, #104]
    7568:	b	75a4 <PySequence_Fast@plt+0x54d4>
    756c:	ldr	w0, [sp, #132]
    7570:	cmp	w0, #0x0
    7574:	b.ne	75a0 <PySequence_Fast@plt+0x54d0>  // b.any
    7578:	ldr	x0, [sp, #40]
    757c:	ldr	x1, [x0, #48]
    7580:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7584:	ldr	x0, [x0, #4032]
    7588:	cmp	x1, x0
    758c:	b.eq	75a0 <PySequence_Fast@plt+0x54d0>  // b.none
    7590:	ldr	x0, [sp, #40]
    7594:	ldr	x0, [x0, #48]
    7598:	str	x0, [sp, #104]
    759c:	b	75a4 <PySequence_Fast@plt+0x54d4>
    75a0:	str	xzr, [sp, #104]
    75a4:	ldr	x0, [sp, #104]
    75a8:	cmp	x0, #0x0
    75ac:	b.eq	7614 <PySequence_Fast@plt+0x5544>  // b.none
    75b0:	ldrsw	x1, [sp, #84]
    75b4:	ldr	x0, [sp, #24]
    75b8:	mul	x0, x1, x0
    75bc:	mov	x1, x0
    75c0:	ldr	x0, [sp, #88]
    75c4:	add	x3, x0, x1
    75c8:	ldr	x1, [sp, #136]
    75cc:	ldr	x0, [sp, #24]
    75d0:	sub	x0, x1, x0
    75d4:	mov	x2, x0
    75d8:	mov	x1, x3
    75dc:	ldr	w0, [sp, #84]
    75e0:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    75e4:	str	x0, [sp, #112]
    75e8:	ldr	x0, [sp, #112]
    75ec:	cmp	x0, #0x0
    75f0:	b.ne	75fc <PySequence_Fast@plt+0x552c>  // b.any
    75f4:	mov	x0, #0x0                   	// #0
    75f8:	b	7758 <PySequence_Fast@plt+0x5688>
    75fc:	mov	x2, #0x0                   	// #0
    7600:	ldr	x1, [sp, #112]
    7604:	ldr	x0, [sp, #104]
    7608:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    760c:	str	x0, [sp, #120]
    7610:	b	7734 <PySequence_Fast@plt+0x5664>
    7614:	ldr	x1, [sp, #136]
    7618:	ldr	x0, [sp, #24]
    761c:	sub	x0, x1, x0
    7620:	str	x0, [sp, #56]
    7624:	ldr	x1, [sp, #56]
    7628:	mov	x0, #0x0                   	// #0
    762c:	bl	1e20 <PyBytes_FromStringAndSize@plt>
    7630:	str	x0, [sp, #112]
    7634:	ldr	x0, [sp, #112]
    7638:	cmp	x0, #0x0
    763c:	b.ne	7648 <PySequence_Fast@plt+0x5578>  // b.any
    7640:	mov	x0, #0x0                   	// #0
    7644:	b	7758 <PySequence_Fast@plt+0x5688>
    7648:	ldr	x0, [sp, #112]
    764c:	add	x0, x0, #0x20
    7650:	str	x0, [sp, #48]
    7654:	str	xzr, [sp, #96]
    7658:	b	76f4 <PySequence_Fast@plt+0x5624>
    765c:	ldr	w0, [sp, #84]
    7660:	cmp	w0, #0x1
    7664:	b.ne	7688 <PySequence_Fast@plt+0x55b8>  // b.any
    7668:	ldr	x1, [sp, #96]
    766c:	ldr	x0, [sp, #24]
    7670:	add	x0, x1, x0
    7674:	mov	x1, x0
    7678:	ldr	x0, [sp, #88]
    767c:	add	x0, x0, x1
    7680:	ldrb	w0, [x0]
    7684:	b	76d8 <PySequence_Fast@plt+0x5608>
    7688:	ldr	w0, [sp, #84]
    768c:	cmp	w0, #0x2
    7690:	b.ne	76b8 <PySequence_Fast@plt+0x55e8>  // b.any
    7694:	ldr	x1, [sp, #96]
    7698:	ldr	x0, [sp, #24]
    769c:	add	x0, x1, x0
    76a0:	lsl	x0, x0, #1
    76a4:	ldr	x1, [sp, #88]
    76a8:	add	x0, x1, x0
    76ac:	ldrh	w0, [x0]
    76b0:	and	w0, w0, #0xff
    76b4:	b	76d8 <PySequence_Fast@plt+0x5608>
    76b8:	ldr	x1, [sp, #96]
    76bc:	ldr	x0, [sp, #24]
    76c0:	add	x0, x1, x0
    76c4:	lsl	x0, x0, #2
    76c8:	ldr	x1, [sp, #88]
    76cc:	add	x0, x1, x0
    76d0:	ldr	w0, [x0]
    76d4:	and	w0, w0, #0xff
    76d8:	ldr	x1, [sp, #96]
    76dc:	ldr	x2, [sp, #48]
    76e0:	add	x1, x2, x1
    76e4:	strb	w0, [x1]
    76e8:	ldr	x0, [sp, #96]
    76ec:	add	x0, x0, #0x1
    76f0:	str	x0, [sp, #96]
    76f4:	ldr	x1, [sp, #96]
    76f8:	ldr	x0, [sp, #56]
    76fc:	cmp	x1, x0
    7700:	b.lt	765c <PySequence_Fast@plt+0x558c>  // b.tstop
    7704:	ldr	w0, [sp, #132]
    7708:	cmp	w0, #0x0
    770c:	b.eq	7720 <PySequence_Fast@plt+0x5650>  // b.none
    7710:	ldr	x0, [sp, #112]
    7714:	bl	20c0 <PyFloat_FromString@plt>
    7718:	str	x0, [sp, #120]
    771c:	b	7734 <PySequence_Fast@plt+0x5664>
    7720:	mov	w2, #0xa                   	// #10
    7724:	mov	x1, #0x0                   	// #0
    7728:	ldr	x0, [sp, #48]
    772c:	bl	2060 <PyLong_FromString@plt>
    7730:	str	x0, [sp, #120]
    7734:	ldr	x2, [sp, #112]
    7738:	mov	w1, #0x41d                 	// #1053
    773c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    7740:	add	x0, x0, #0xb60
    7744:	bl	2298 <PySequence_Fast@plt+0x1c8>
    7748:	ldr	x0, [sp, #16]
    774c:	ldr	x1, [sp, #136]
    7750:	str	x1, [x0]
    7754:	ldr	x0, [sp, #120]
    7758:	ldp	x29, x30, [sp], #144
    775c:	ret
    7760:	stp	x29, x30, [sp, #-80]!
    7764:	mov	x29, sp
    7768:	str	x0, [sp, #40]
    776c:	str	x1, [sp, #32]
    7770:	str	x2, [sp, #24]
    7774:	str	x3, [sp, #16]
    7778:	ldr	x0, [sp, #32]
    777c:	ldrb	w0, [x0, #32]
    7780:	and	w0, w0, #0xffffff80
    7784:	and	w0, w0, #0xff
    7788:	cmp	w0, #0x0
    778c:	b.ne	77a8 <PySequence_Fast@plt+0x56d8>  // b.any
    7790:	ldr	x0, [sp, #32]
    7794:	bl	1db0 <_PyUnicode_Ready@plt>
    7798:	cmn	w0, #0x1
    779c:	b.ne	77a8 <PySequence_Fast@plt+0x56d8>  // b.any
    77a0:	mov	x0, #0x0                   	// #0
    77a4:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    77a8:	ldr	x0, [sp, #32]
    77ac:	ldrb	w0, [x0, #32]
    77b0:	and	w0, w0, #0x20
    77b4:	and	w0, w0, #0xff
    77b8:	cmp	w0, #0x0
    77bc:	b.eq	77f0 <PySequence_Fast@plt+0x5720>  // b.none
    77c0:	ldr	x0, [sp, #32]
    77c4:	ldrb	w0, [x0, #32]
    77c8:	and	w0, w0, #0x40
    77cc:	and	w0, w0, #0xff
    77d0:	cmp	w0, #0x0
    77d4:	b.eq	77e4 <PySequence_Fast@plt+0x5714>  // b.none
    77d8:	ldr	x0, [sp, #32]
    77dc:	add	x0, x0, #0x30
    77e0:	b	77f8 <PySequence_Fast@plt+0x5728>
    77e4:	ldr	x0, [sp, #32]
    77e8:	add	x0, x0, #0x48
    77ec:	b	77f8 <PySequence_Fast@plt+0x5728>
    77f0:	ldr	x0, [sp, #32]
    77f4:	ldr	x0, [x0, #72]
    77f8:	str	x0, [sp, #72]
    77fc:	ldr	x0, [sp, #32]
    7800:	ldrb	w0, [x0, #32]
    7804:	ubfx	x0, x0, #2, #3
    7808:	and	w0, w0, #0xff
    780c:	str	w0, [sp, #68]
    7810:	ldr	x0, [sp, #32]
    7814:	ldr	x0, [x0, #16]
    7818:	str	x0, [sp, #56]
    781c:	ldr	x0, [sp, #24]
    7820:	cmp	x0, #0x0
    7824:	b.ge	784c <PySequence_Fast@plt+0x577c>  // b.tcont
    7828:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    782c:	ldr	x0, [x0, #3968]
    7830:	ldr	x2, [x0]
    7834:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    7838:	add	x1, x0, #0xf58
    783c:	mov	x0, x2
    7840:	bl	1e60 <PyErr_SetString@plt>
    7844:	mov	x0, #0x0                   	// #0
    7848:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    784c:	ldr	x1, [sp, #24]
    7850:	ldr	x0, [sp, #56]
    7854:	cmp	x1, x0
    7858:	b.lt	786c <PySequence_Fast@plt+0x579c>  // b.tstop
    785c:	ldr	x0, [sp, #24]
    7860:	bl	3e2c <PySequence_Fast@plt+0x1d5c>
    7864:	mov	x0, #0x0                   	// #0
    7868:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    786c:	ldr	w0, [sp, #68]
    7870:	cmp	w0, #0x1
    7874:	b.ne	788c <PySequence_Fast@plt+0x57bc>  // b.any
    7878:	ldr	x0, [sp, #24]
    787c:	ldr	x1, [sp, #72]
    7880:	add	x0, x1, x0
    7884:	ldrb	w0, [x0]
    7888:	b	78c4 <PySequence_Fast@plt+0x57f4>
    788c:	ldr	w0, [sp, #68]
    7890:	cmp	w0, #0x2
    7894:	b.ne	78b0 <PySequence_Fast@plt+0x57e0>  // b.any
    7898:	ldr	x0, [sp, #24]
    789c:	lsl	x0, x0, #1
    78a0:	ldr	x1, [sp, #72]
    78a4:	add	x0, x1, x0
    78a8:	ldrh	w0, [x0]
    78ac:	b	78c4 <PySequence_Fast@plt+0x57f4>
    78b0:	ldr	x0, [sp, #24]
    78b4:	lsl	x0, x0, #2
    78b8:	ldr	x1, [sp, #72]
    78bc:	add	x0, x1, x0
    78c0:	ldr	w0, [x0]
    78c4:	cmp	w0, #0x7b
    78c8:	b.eq	796c <PySequence_Fast@plt+0x589c>  // b.none
    78cc:	cmp	w0, #0x7b
    78d0:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    78d4:	cmp	w0, #0x74
    78d8:	b.eq	7d00 <PySequence_Fast@plt+0x5c30>  // b.none
    78dc:	cmp	w0, #0x74
    78e0:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    78e4:	cmp	w0, #0x6e
    78e8:	b.eq	7b14 <PySequence_Fast@plt+0x5a44>  // b.none
    78ec:	cmp	w0, #0x6e
    78f0:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    78f4:	cmp	w0, #0x66
    78f8:	b.eq	7eec <PySequence_Fast@plt+0x5e1c>  // b.none
    78fc:	cmp	w0, #0x66
    7900:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    7904:	cmp	w0, #0x5b
    7908:	b.eq	7a40 <PySequence_Fast@plt+0x5970>  // b.none
    790c:	cmp	w0, #0x5b
    7910:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    7914:	cmp	w0, #0x4e
    7918:	b.eq	8168 <PySequence_Fast@plt+0x6098>  // b.none
    791c:	cmp	w0, #0x4e
    7920:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    7924:	cmp	w0, #0x49
    7928:	b.eq	82b8 <PySequence_Fast@plt+0x61e8>  // b.none
    792c:	cmp	w0, #0x49
    7930:	b.hi	8bb4 <PySequence_Fast@plt+0x6ae4>  // b.pmore
    7934:	cmp	w0, #0x22
    7938:	b.eq	7948 <PySequence_Fast@plt+0x5878>  // b.none
    793c:	cmp	w0, #0x2d
    7940:	b.eq	86d8 <PySequence_Fast@plt+0x6608>  // b.none
    7944:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    7948:	ldr	x0, [sp, #24]
    794c:	add	x1, x0, #0x1
    7950:	ldr	x0, [sp, #40]
    7954:	ldrsb	w0, [x0, #16]
    7958:	ldr	x3, [sp, #16]
    795c:	mov	w2, w0
    7960:	ldr	x0, [sp, #32]
    7964:	bl	3f48 <PySequence_Fast@plt+0x1e78>
    7968:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    796c:	bl	1f20 <PyThreadState_Get@plt>
    7970:	ldr	w1, [x0, #32]
    7974:	add	w1, w1, #0x1
    7978:	str	w1, [x0, #32]
    797c:	ldr	w1, [x0, #32]
    7980:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7984:	ldr	x0, [x0, #3984]
    7988:	ldr	w0, [x0]
    798c:	cmp	w1, w0
    7990:	b.le	79b0 <PySequence_Fast@plt+0x58e0>
    7994:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    7998:	add	x0, x0, #0xf70
    799c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    79a0:	cmp	w0, #0x0
    79a4:	b.eq	79b0 <PySequence_Fast@plt+0x58e0>  // b.none
    79a8:	mov	x0, #0x0                   	// #0
    79ac:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    79b0:	ldr	x0, [sp, #24]
    79b4:	add	x0, x0, #0x1
    79b8:	ldr	x3, [sp, #16]
    79bc:	mov	x2, x0
    79c0:	ldr	x1, [sp, #32]
    79c4:	ldr	x0, [sp, #40]
    79c8:	bl	4fa0 <PySequence_Fast@plt+0x2ed0>
    79cc:	str	x0, [sp, #48]
    79d0:	bl	1f20 <PyThreadState_Get@plt>
    79d4:	ldr	w1, [x0, #32]
    79d8:	sub	w1, w1, #0x1
    79dc:	str	w1, [x0, #32]
    79e0:	ldr	w2, [x0, #32]
    79e4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    79e8:	ldr	x0, [x0, #3984]
    79ec:	ldr	w0, [x0]
    79f0:	cmp	w0, #0xc8
    79f4:	b.le	7a0c <PySequence_Fast@plt+0x593c>
    79f8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    79fc:	ldr	x0, [x0, #3984]
    7a00:	ldr	w0, [x0]
    7a04:	sub	w0, w0, #0x32
    7a08:	b	7a28 <PySequence_Fast@plt+0x5958>
    7a0c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7a10:	ldr	x0, [x0, #3984]
    7a14:	ldr	w0, [x0]
    7a18:	asr	w1, w0, #2
    7a1c:	mov	w0, w1
    7a20:	lsl	w0, w0, #1
    7a24:	add	w0, w0, w1
    7a28:	cmp	w0, w2
    7a2c:	b.le	7a38 <PySequence_Fast@plt+0x5968>
    7a30:	bl	1f20 <PyThreadState_Get@plt>
    7a34:	strb	wzr, [x0, #36]
    7a38:	ldr	x0, [sp, #48]
    7a3c:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    7a40:	bl	1f20 <PyThreadState_Get@plt>
    7a44:	ldr	w1, [x0, #32]
    7a48:	add	w1, w1, #0x1
    7a4c:	str	w1, [x0, #32]
    7a50:	ldr	w1, [x0, #32]
    7a54:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7a58:	ldr	x0, [x0, #3984]
    7a5c:	ldr	w0, [x0]
    7a60:	cmp	w1, w0
    7a64:	b.le	7a84 <PySequence_Fast@plt+0x59b4>
    7a68:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    7a6c:	add	x0, x0, #0xfa8
    7a70:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    7a74:	cmp	w0, #0x0
    7a78:	b.eq	7a84 <PySequence_Fast@plt+0x59b4>  // b.none
    7a7c:	mov	x0, #0x0                   	// #0
    7a80:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    7a84:	ldr	x0, [sp, #24]
    7a88:	add	x0, x0, #0x1
    7a8c:	ldr	x3, [sp, #16]
    7a90:	mov	x2, x0
    7a94:	ldr	x1, [sp, #32]
    7a98:	ldr	x0, [sp, #40]
    7a9c:	bl	6024 <PySequence_Fast@plt+0x3f54>
    7aa0:	str	x0, [sp, #48]
    7aa4:	bl	1f20 <PyThreadState_Get@plt>
    7aa8:	ldr	w1, [x0, #32]
    7aac:	sub	w1, w1, #0x1
    7ab0:	str	w1, [x0, #32]
    7ab4:	ldr	w2, [x0, #32]
    7ab8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7abc:	ldr	x0, [x0, #3984]
    7ac0:	ldr	w0, [x0]
    7ac4:	cmp	w0, #0xc8
    7ac8:	b.le	7ae0 <PySequence_Fast@plt+0x5a10>
    7acc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7ad0:	ldr	x0, [x0, #3984]
    7ad4:	ldr	w0, [x0]
    7ad8:	sub	w0, w0, #0x32
    7adc:	b	7afc <PySequence_Fast@plt+0x5a2c>
    7ae0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7ae4:	ldr	x0, [x0, #3984]
    7ae8:	ldr	w0, [x0]
    7aec:	asr	w1, w0, #2
    7af0:	mov	w0, w1
    7af4:	lsl	w0, w0, #1
    7af8:	add	w0, w0, w1
    7afc:	cmp	w0, w2
    7b00:	b.le	7b0c <PySequence_Fast@plt+0x5a3c>
    7b04:	bl	1f20 <PyThreadState_Get@plt>
    7b08:	strb	wzr, [x0, #36]
    7b0c:	ldr	x0, [sp, #48]
    7b10:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    7b14:	ldr	x0, [sp, #24]
    7b18:	add	x0, x0, #0x3
    7b1c:	ldr	x1, [sp, #56]
    7b20:	cmp	x1, x0
    7b24:	b.le	8b88 <PySequence_Fast@plt+0x6ab8>
    7b28:	ldr	w0, [sp, #68]
    7b2c:	cmp	w0, #0x1
    7b30:	b.ne	7b58 <PySequence_Fast@plt+0x5a88>  // b.any
    7b34:	ldr	x0, [sp, #24]
    7b38:	add	x0, x0, #0x1
    7b3c:	ldr	x1, [sp, #72]
    7b40:	add	x0, x1, x0
    7b44:	ldrb	w0, [x0]
    7b48:	cmp	w0, #0x75
    7b4c:	cset	w0, eq  // eq = none
    7b50:	and	w0, w0, #0xff
    7b54:	b	7bb0 <PySequence_Fast@plt+0x5ae0>
    7b58:	ldr	w0, [sp, #68]
    7b5c:	cmp	w0, #0x2
    7b60:	b.ne	7b8c <PySequence_Fast@plt+0x5abc>  // b.any
    7b64:	ldr	x0, [sp, #24]
    7b68:	add	x0, x0, #0x1
    7b6c:	lsl	x0, x0, #1
    7b70:	ldr	x1, [sp, #72]
    7b74:	add	x0, x1, x0
    7b78:	ldrh	w0, [x0]
    7b7c:	cmp	w0, #0x75
    7b80:	cset	w0, eq  // eq = none
    7b84:	and	w0, w0, #0xff
    7b88:	b	7bb0 <PySequence_Fast@plt+0x5ae0>
    7b8c:	ldr	x0, [sp, #24]
    7b90:	add	x0, x0, #0x1
    7b94:	lsl	x0, x0, #2
    7b98:	ldr	x1, [sp, #72]
    7b9c:	add	x0, x1, x0
    7ba0:	ldr	w0, [x0]
    7ba4:	cmp	w0, #0x75
    7ba8:	cset	w0, eq  // eq = none
    7bac:	and	w0, w0, #0xff
    7bb0:	cmp	w0, #0x0
    7bb4:	b.eq	8b88 <PySequence_Fast@plt+0x6ab8>  // b.none
    7bb8:	ldr	w0, [sp, #68]
    7bbc:	cmp	w0, #0x1
    7bc0:	b.ne	7be8 <PySequence_Fast@plt+0x5b18>  // b.any
    7bc4:	ldr	x0, [sp, #24]
    7bc8:	add	x0, x0, #0x2
    7bcc:	ldr	x1, [sp, #72]
    7bd0:	add	x0, x1, x0
    7bd4:	ldrb	w0, [x0]
    7bd8:	cmp	w0, #0x6c
    7bdc:	cset	w0, eq  // eq = none
    7be0:	and	w0, w0, #0xff
    7be4:	b	7c40 <PySequence_Fast@plt+0x5b70>
    7be8:	ldr	w0, [sp, #68]
    7bec:	cmp	w0, #0x2
    7bf0:	b.ne	7c1c <PySequence_Fast@plt+0x5b4c>  // b.any
    7bf4:	ldr	x0, [sp, #24]
    7bf8:	add	x0, x0, #0x2
    7bfc:	lsl	x0, x0, #1
    7c00:	ldr	x1, [sp, #72]
    7c04:	add	x0, x1, x0
    7c08:	ldrh	w0, [x0]
    7c0c:	cmp	w0, #0x6c
    7c10:	cset	w0, eq  // eq = none
    7c14:	and	w0, w0, #0xff
    7c18:	b	7c40 <PySequence_Fast@plt+0x5b70>
    7c1c:	ldr	x0, [sp, #24]
    7c20:	add	x0, x0, #0x2
    7c24:	lsl	x0, x0, #2
    7c28:	ldr	x1, [sp, #72]
    7c2c:	add	x0, x1, x0
    7c30:	ldr	w0, [x0]
    7c34:	cmp	w0, #0x6c
    7c38:	cset	w0, eq  // eq = none
    7c3c:	and	w0, w0, #0xff
    7c40:	cmp	w0, #0x0
    7c44:	b.eq	8b88 <PySequence_Fast@plt+0x6ab8>  // b.none
    7c48:	ldr	w0, [sp, #68]
    7c4c:	cmp	w0, #0x1
    7c50:	b.ne	7c78 <PySequence_Fast@plt+0x5ba8>  // b.any
    7c54:	ldr	x0, [sp, #24]
    7c58:	add	x0, x0, #0x3
    7c5c:	ldr	x1, [sp, #72]
    7c60:	add	x0, x1, x0
    7c64:	ldrb	w0, [x0]
    7c68:	cmp	w0, #0x6c
    7c6c:	cset	w0, eq  // eq = none
    7c70:	and	w0, w0, #0xff
    7c74:	b	7cd0 <PySequence_Fast@plt+0x5c00>
    7c78:	ldr	w0, [sp, #68]
    7c7c:	cmp	w0, #0x2
    7c80:	b.ne	7cac <PySequence_Fast@plt+0x5bdc>  // b.any
    7c84:	ldr	x0, [sp, #24]
    7c88:	add	x0, x0, #0x3
    7c8c:	lsl	x0, x0, #1
    7c90:	ldr	x1, [sp, #72]
    7c94:	add	x0, x1, x0
    7c98:	ldrh	w0, [x0]
    7c9c:	cmp	w0, #0x6c
    7ca0:	cset	w0, eq  // eq = none
    7ca4:	and	w0, w0, #0xff
    7ca8:	b	7cd0 <PySequence_Fast@plt+0x5c00>
    7cac:	ldr	x0, [sp, #24]
    7cb0:	add	x0, x0, #0x3
    7cb4:	lsl	x0, x0, #2
    7cb8:	ldr	x1, [sp, #72]
    7cbc:	add	x0, x1, x0
    7cc0:	ldr	w0, [x0]
    7cc4:	cmp	w0, #0x6c
    7cc8:	cset	w0, eq  // eq = none
    7ccc:	and	w0, w0, #0xff
    7cd0:	cmp	w0, #0x0
    7cd4:	b.eq	8b88 <PySequence_Fast@plt+0x6ab8>  // b.none
    7cd8:	ldr	x0, [sp, #24]
    7cdc:	add	x1, x0, #0x4
    7ce0:	ldr	x0, [sp, #16]
    7ce4:	str	x1, [x0]
    7ce8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7cec:	ldr	x0, [x0, #4016]
    7cf0:	bl	2270 <PySequence_Fast@plt+0x1a0>
    7cf4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7cf8:	ldr	x0, [x0, #4016]
    7cfc:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    7d00:	ldr	x0, [sp, #24]
    7d04:	add	x0, x0, #0x3
    7d08:	ldr	x1, [sp, #56]
    7d0c:	cmp	x1, x0
    7d10:	b.le	8b90 <PySequence_Fast@plt+0x6ac0>
    7d14:	ldr	w0, [sp, #68]
    7d18:	cmp	w0, #0x1
    7d1c:	b.ne	7d44 <PySequence_Fast@plt+0x5c74>  // b.any
    7d20:	ldr	x0, [sp, #24]
    7d24:	add	x0, x0, #0x1
    7d28:	ldr	x1, [sp, #72]
    7d2c:	add	x0, x1, x0
    7d30:	ldrb	w0, [x0]
    7d34:	cmp	w0, #0x72
    7d38:	cset	w0, eq  // eq = none
    7d3c:	and	w0, w0, #0xff
    7d40:	b	7d9c <PySequence_Fast@plt+0x5ccc>
    7d44:	ldr	w0, [sp, #68]
    7d48:	cmp	w0, #0x2
    7d4c:	b.ne	7d78 <PySequence_Fast@plt+0x5ca8>  // b.any
    7d50:	ldr	x0, [sp, #24]
    7d54:	add	x0, x0, #0x1
    7d58:	lsl	x0, x0, #1
    7d5c:	ldr	x1, [sp, #72]
    7d60:	add	x0, x1, x0
    7d64:	ldrh	w0, [x0]
    7d68:	cmp	w0, #0x72
    7d6c:	cset	w0, eq  // eq = none
    7d70:	and	w0, w0, #0xff
    7d74:	b	7d9c <PySequence_Fast@plt+0x5ccc>
    7d78:	ldr	x0, [sp, #24]
    7d7c:	add	x0, x0, #0x1
    7d80:	lsl	x0, x0, #2
    7d84:	ldr	x1, [sp, #72]
    7d88:	add	x0, x1, x0
    7d8c:	ldr	w0, [x0]
    7d90:	cmp	w0, #0x72
    7d94:	cset	w0, eq  // eq = none
    7d98:	and	w0, w0, #0xff
    7d9c:	cmp	w0, #0x0
    7da0:	b.eq	8b90 <PySequence_Fast@plt+0x6ac0>  // b.none
    7da4:	ldr	w0, [sp, #68]
    7da8:	cmp	w0, #0x1
    7dac:	b.ne	7dd4 <PySequence_Fast@plt+0x5d04>  // b.any
    7db0:	ldr	x0, [sp, #24]
    7db4:	add	x0, x0, #0x2
    7db8:	ldr	x1, [sp, #72]
    7dbc:	add	x0, x1, x0
    7dc0:	ldrb	w0, [x0]
    7dc4:	cmp	w0, #0x75
    7dc8:	cset	w0, eq  // eq = none
    7dcc:	and	w0, w0, #0xff
    7dd0:	b	7e2c <PySequence_Fast@plt+0x5d5c>
    7dd4:	ldr	w0, [sp, #68]
    7dd8:	cmp	w0, #0x2
    7ddc:	b.ne	7e08 <PySequence_Fast@plt+0x5d38>  // b.any
    7de0:	ldr	x0, [sp, #24]
    7de4:	add	x0, x0, #0x2
    7de8:	lsl	x0, x0, #1
    7dec:	ldr	x1, [sp, #72]
    7df0:	add	x0, x1, x0
    7df4:	ldrh	w0, [x0]
    7df8:	cmp	w0, #0x75
    7dfc:	cset	w0, eq  // eq = none
    7e00:	and	w0, w0, #0xff
    7e04:	b	7e2c <PySequence_Fast@plt+0x5d5c>
    7e08:	ldr	x0, [sp, #24]
    7e0c:	add	x0, x0, #0x2
    7e10:	lsl	x0, x0, #2
    7e14:	ldr	x1, [sp, #72]
    7e18:	add	x0, x1, x0
    7e1c:	ldr	w0, [x0]
    7e20:	cmp	w0, #0x75
    7e24:	cset	w0, eq  // eq = none
    7e28:	and	w0, w0, #0xff
    7e2c:	cmp	w0, #0x0
    7e30:	b.eq	8b90 <PySequence_Fast@plt+0x6ac0>  // b.none
    7e34:	ldr	w0, [sp, #68]
    7e38:	cmp	w0, #0x1
    7e3c:	b.ne	7e64 <PySequence_Fast@plt+0x5d94>  // b.any
    7e40:	ldr	x0, [sp, #24]
    7e44:	add	x0, x0, #0x3
    7e48:	ldr	x1, [sp, #72]
    7e4c:	add	x0, x1, x0
    7e50:	ldrb	w0, [x0]
    7e54:	cmp	w0, #0x65
    7e58:	cset	w0, eq  // eq = none
    7e5c:	and	w0, w0, #0xff
    7e60:	b	7ebc <PySequence_Fast@plt+0x5dec>
    7e64:	ldr	w0, [sp, #68]
    7e68:	cmp	w0, #0x2
    7e6c:	b.ne	7e98 <PySequence_Fast@plt+0x5dc8>  // b.any
    7e70:	ldr	x0, [sp, #24]
    7e74:	add	x0, x0, #0x3
    7e78:	lsl	x0, x0, #1
    7e7c:	ldr	x1, [sp, #72]
    7e80:	add	x0, x1, x0
    7e84:	ldrh	w0, [x0]
    7e88:	cmp	w0, #0x65
    7e8c:	cset	w0, eq  // eq = none
    7e90:	and	w0, w0, #0xff
    7e94:	b	7ebc <PySequence_Fast@plt+0x5dec>
    7e98:	ldr	x0, [sp, #24]
    7e9c:	add	x0, x0, #0x3
    7ea0:	lsl	x0, x0, #2
    7ea4:	ldr	x1, [sp, #72]
    7ea8:	add	x0, x1, x0
    7eac:	ldr	w0, [x0]
    7eb0:	cmp	w0, #0x65
    7eb4:	cset	w0, eq  // eq = none
    7eb8:	and	w0, w0, #0xff
    7ebc:	cmp	w0, #0x0
    7ec0:	b.eq	8b90 <PySequence_Fast@plt+0x6ac0>  // b.none
    7ec4:	ldr	x0, [sp, #24]
    7ec8:	add	x1, x0, #0x4
    7ecc:	ldr	x0, [sp, #16]
    7ed0:	str	x1, [x0]
    7ed4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7ed8:	ldr	x0, [x0, #4024]
    7edc:	bl	2270 <PySequence_Fast@plt+0x1a0>
    7ee0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    7ee4:	ldr	x0, [x0, #4024]
    7ee8:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    7eec:	ldr	x0, [sp, #24]
    7ef0:	add	x0, x0, #0x4
    7ef4:	ldr	x1, [sp, #56]
    7ef8:	cmp	x1, x0
    7efc:	b.le	8b98 <PySequence_Fast@plt+0x6ac8>
    7f00:	ldr	w0, [sp, #68]
    7f04:	cmp	w0, #0x1
    7f08:	b.ne	7f30 <PySequence_Fast@plt+0x5e60>  // b.any
    7f0c:	ldr	x0, [sp, #24]
    7f10:	add	x0, x0, #0x1
    7f14:	ldr	x1, [sp, #72]
    7f18:	add	x0, x1, x0
    7f1c:	ldrb	w0, [x0]
    7f20:	cmp	w0, #0x61
    7f24:	cset	w0, eq  // eq = none
    7f28:	and	w0, w0, #0xff
    7f2c:	b	7f88 <PySequence_Fast@plt+0x5eb8>
    7f30:	ldr	w0, [sp, #68]
    7f34:	cmp	w0, #0x2
    7f38:	b.ne	7f64 <PySequence_Fast@plt+0x5e94>  // b.any
    7f3c:	ldr	x0, [sp, #24]
    7f40:	add	x0, x0, #0x1
    7f44:	lsl	x0, x0, #1
    7f48:	ldr	x1, [sp, #72]
    7f4c:	add	x0, x1, x0
    7f50:	ldrh	w0, [x0]
    7f54:	cmp	w0, #0x61
    7f58:	cset	w0, eq  // eq = none
    7f5c:	and	w0, w0, #0xff
    7f60:	b	7f88 <PySequence_Fast@plt+0x5eb8>
    7f64:	ldr	x0, [sp, #24]
    7f68:	add	x0, x0, #0x1
    7f6c:	lsl	x0, x0, #2
    7f70:	ldr	x1, [sp, #72]
    7f74:	add	x0, x1, x0
    7f78:	ldr	w0, [x0]
    7f7c:	cmp	w0, #0x61
    7f80:	cset	w0, eq  // eq = none
    7f84:	and	w0, w0, #0xff
    7f88:	cmp	w0, #0x0
    7f8c:	b.eq	8b98 <PySequence_Fast@plt+0x6ac8>  // b.none
    7f90:	ldr	w0, [sp, #68]
    7f94:	cmp	w0, #0x1
    7f98:	b.ne	7fc0 <PySequence_Fast@plt+0x5ef0>  // b.any
    7f9c:	ldr	x0, [sp, #24]
    7fa0:	add	x0, x0, #0x2
    7fa4:	ldr	x1, [sp, #72]
    7fa8:	add	x0, x1, x0
    7fac:	ldrb	w0, [x0]
    7fb0:	cmp	w0, #0x6c
    7fb4:	cset	w0, eq  // eq = none
    7fb8:	and	w0, w0, #0xff
    7fbc:	b	8018 <PySequence_Fast@plt+0x5f48>
    7fc0:	ldr	w0, [sp, #68]
    7fc4:	cmp	w0, #0x2
    7fc8:	b.ne	7ff4 <PySequence_Fast@plt+0x5f24>  // b.any
    7fcc:	ldr	x0, [sp, #24]
    7fd0:	add	x0, x0, #0x2
    7fd4:	lsl	x0, x0, #1
    7fd8:	ldr	x1, [sp, #72]
    7fdc:	add	x0, x1, x0
    7fe0:	ldrh	w0, [x0]
    7fe4:	cmp	w0, #0x6c
    7fe8:	cset	w0, eq  // eq = none
    7fec:	and	w0, w0, #0xff
    7ff0:	b	8018 <PySequence_Fast@plt+0x5f48>
    7ff4:	ldr	x0, [sp, #24]
    7ff8:	add	x0, x0, #0x2
    7ffc:	lsl	x0, x0, #2
    8000:	ldr	x1, [sp, #72]
    8004:	add	x0, x1, x0
    8008:	ldr	w0, [x0]
    800c:	cmp	w0, #0x6c
    8010:	cset	w0, eq  // eq = none
    8014:	and	w0, w0, #0xff
    8018:	cmp	w0, #0x0
    801c:	b.eq	8b98 <PySequence_Fast@plt+0x6ac8>  // b.none
    8020:	ldr	w0, [sp, #68]
    8024:	cmp	w0, #0x1
    8028:	b.ne	8050 <PySequence_Fast@plt+0x5f80>  // b.any
    802c:	ldr	x0, [sp, #24]
    8030:	add	x0, x0, #0x3
    8034:	ldr	x1, [sp, #72]
    8038:	add	x0, x1, x0
    803c:	ldrb	w0, [x0]
    8040:	cmp	w0, #0x73
    8044:	cset	w0, eq  // eq = none
    8048:	and	w0, w0, #0xff
    804c:	b	80a8 <PySequence_Fast@plt+0x5fd8>
    8050:	ldr	w0, [sp, #68]
    8054:	cmp	w0, #0x2
    8058:	b.ne	8084 <PySequence_Fast@plt+0x5fb4>  // b.any
    805c:	ldr	x0, [sp, #24]
    8060:	add	x0, x0, #0x3
    8064:	lsl	x0, x0, #1
    8068:	ldr	x1, [sp, #72]
    806c:	add	x0, x1, x0
    8070:	ldrh	w0, [x0]
    8074:	cmp	w0, #0x73
    8078:	cset	w0, eq  // eq = none
    807c:	and	w0, w0, #0xff
    8080:	b	80a8 <PySequence_Fast@plt+0x5fd8>
    8084:	ldr	x0, [sp, #24]
    8088:	add	x0, x0, #0x3
    808c:	lsl	x0, x0, #2
    8090:	ldr	x1, [sp, #72]
    8094:	add	x0, x1, x0
    8098:	ldr	w0, [x0]
    809c:	cmp	w0, #0x73
    80a0:	cset	w0, eq  // eq = none
    80a4:	and	w0, w0, #0xff
    80a8:	cmp	w0, #0x0
    80ac:	b.eq	8b98 <PySequence_Fast@plt+0x6ac8>  // b.none
    80b0:	ldr	w0, [sp, #68]
    80b4:	cmp	w0, #0x1
    80b8:	b.ne	80e0 <PySequence_Fast@plt+0x6010>  // b.any
    80bc:	ldr	x0, [sp, #24]
    80c0:	add	x0, x0, #0x4
    80c4:	ldr	x1, [sp, #72]
    80c8:	add	x0, x1, x0
    80cc:	ldrb	w0, [x0]
    80d0:	cmp	w0, #0x65
    80d4:	cset	w0, eq  // eq = none
    80d8:	and	w0, w0, #0xff
    80dc:	b	8138 <PySequence_Fast@plt+0x6068>
    80e0:	ldr	w0, [sp, #68]
    80e4:	cmp	w0, #0x2
    80e8:	b.ne	8114 <PySequence_Fast@plt+0x6044>  // b.any
    80ec:	ldr	x0, [sp, #24]
    80f0:	add	x0, x0, #0x4
    80f4:	lsl	x0, x0, #1
    80f8:	ldr	x1, [sp, #72]
    80fc:	add	x0, x1, x0
    8100:	ldrh	w0, [x0]
    8104:	cmp	w0, #0x65
    8108:	cset	w0, eq  // eq = none
    810c:	and	w0, w0, #0xff
    8110:	b	8138 <PySequence_Fast@plt+0x6068>
    8114:	ldr	x0, [sp, #24]
    8118:	add	x0, x0, #0x4
    811c:	lsl	x0, x0, #2
    8120:	ldr	x1, [sp, #72]
    8124:	add	x0, x1, x0
    8128:	ldr	w0, [x0]
    812c:	cmp	w0, #0x65
    8130:	cset	w0, eq  // eq = none
    8134:	and	w0, w0, #0xff
    8138:	cmp	w0, #0x0
    813c:	b.eq	8b98 <PySequence_Fast@plt+0x6ac8>  // b.none
    8140:	ldr	x0, [sp, #24]
    8144:	add	x1, x0, #0x5
    8148:	ldr	x0, [sp, #16]
    814c:	str	x1, [x0]
    8150:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    8154:	ldr	x0, [x0, #3992]
    8158:	bl	2270 <PySequence_Fast@plt+0x1a0>
    815c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    8160:	ldr	x0, [x0, #3992]
    8164:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    8168:	ldr	x0, [sp, #24]
    816c:	add	x0, x0, #0x2
    8170:	ldr	x1, [sp, #56]
    8174:	cmp	x1, x0
    8178:	b.le	8ba0 <PySequence_Fast@plt+0x6ad0>
    817c:	ldr	w0, [sp, #68]
    8180:	cmp	w0, #0x1
    8184:	b.ne	81ac <PySequence_Fast@plt+0x60dc>  // b.any
    8188:	ldr	x0, [sp, #24]
    818c:	add	x0, x0, #0x1
    8190:	ldr	x1, [sp, #72]
    8194:	add	x0, x1, x0
    8198:	ldrb	w0, [x0]
    819c:	cmp	w0, #0x61
    81a0:	cset	w0, eq  // eq = none
    81a4:	and	w0, w0, #0xff
    81a8:	b	8204 <PySequence_Fast@plt+0x6134>
    81ac:	ldr	w0, [sp, #68]
    81b0:	cmp	w0, #0x2
    81b4:	b.ne	81e0 <PySequence_Fast@plt+0x6110>  // b.any
    81b8:	ldr	x0, [sp, #24]
    81bc:	add	x0, x0, #0x1
    81c0:	lsl	x0, x0, #1
    81c4:	ldr	x1, [sp, #72]
    81c8:	add	x0, x1, x0
    81cc:	ldrh	w0, [x0]
    81d0:	cmp	w0, #0x61
    81d4:	cset	w0, eq  // eq = none
    81d8:	and	w0, w0, #0xff
    81dc:	b	8204 <PySequence_Fast@plt+0x6134>
    81e0:	ldr	x0, [sp, #24]
    81e4:	add	x0, x0, #0x1
    81e8:	lsl	x0, x0, #2
    81ec:	ldr	x1, [sp, #72]
    81f0:	add	x0, x1, x0
    81f4:	ldr	w0, [x0]
    81f8:	cmp	w0, #0x61
    81fc:	cset	w0, eq  // eq = none
    8200:	and	w0, w0, #0xff
    8204:	cmp	w0, #0x0
    8208:	b.eq	8ba0 <PySequence_Fast@plt+0x6ad0>  // b.none
    820c:	ldr	w0, [sp, #68]
    8210:	cmp	w0, #0x1
    8214:	b.ne	823c <PySequence_Fast@plt+0x616c>  // b.any
    8218:	ldr	x0, [sp, #24]
    821c:	add	x0, x0, #0x2
    8220:	ldr	x1, [sp, #72]
    8224:	add	x0, x1, x0
    8228:	ldrb	w0, [x0]
    822c:	cmp	w0, #0x4e
    8230:	cset	w0, eq  // eq = none
    8234:	and	w0, w0, #0xff
    8238:	b	8294 <PySequence_Fast@plt+0x61c4>
    823c:	ldr	w0, [sp, #68]
    8240:	cmp	w0, #0x2
    8244:	b.ne	8270 <PySequence_Fast@plt+0x61a0>  // b.any
    8248:	ldr	x0, [sp, #24]
    824c:	add	x0, x0, #0x2
    8250:	lsl	x0, x0, #1
    8254:	ldr	x1, [sp, #72]
    8258:	add	x0, x1, x0
    825c:	ldrh	w0, [x0]
    8260:	cmp	w0, #0x4e
    8264:	cset	w0, eq  // eq = none
    8268:	and	w0, w0, #0xff
    826c:	b	8294 <PySequence_Fast@plt+0x61c4>
    8270:	ldr	x0, [sp, #24]
    8274:	add	x0, x0, #0x2
    8278:	lsl	x0, x0, #2
    827c:	ldr	x1, [sp, #72]
    8280:	add	x0, x1, x0
    8284:	ldr	w0, [x0]
    8288:	cmp	w0, #0x4e
    828c:	cset	w0, eq  // eq = none
    8290:	and	w0, w0, #0xff
    8294:	cmp	w0, #0x0
    8298:	b.eq	8ba0 <PySequence_Fast@plt+0x6ad0>  // b.none
    829c:	ldr	x3, [sp, #16]
    82a0:	ldr	x2, [sp, #24]
    82a4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    82a8:	add	x1, x0, #0xfe0
    82ac:	ldr	x0, [sp, #40]
    82b0:	bl	69bc <PySequence_Fast@plt+0x48ec>
    82b4:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    82b8:	ldr	x0, [sp, #24]
    82bc:	add	x0, x0, #0x7
    82c0:	ldr	x1, [sp, #56]
    82c4:	cmp	x1, x0
    82c8:	b.le	8ba8 <PySequence_Fast@plt+0x6ad8>
    82cc:	ldr	w0, [sp, #68]
    82d0:	cmp	w0, #0x1
    82d4:	b.ne	82fc <PySequence_Fast@plt+0x622c>  // b.any
    82d8:	ldr	x0, [sp, #24]
    82dc:	add	x0, x0, #0x1
    82e0:	ldr	x1, [sp, #72]
    82e4:	add	x0, x1, x0
    82e8:	ldrb	w0, [x0]
    82ec:	cmp	w0, #0x6e
    82f0:	cset	w0, eq  // eq = none
    82f4:	and	w0, w0, #0xff
    82f8:	b	8354 <PySequence_Fast@plt+0x6284>
    82fc:	ldr	w0, [sp, #68]
    8300:	cmp	w0, #0x2
    8304:	b.ne	8330 <PySequence_Fast@plt+0x6260>  // b.any
    8308:	ldr	x0, [sp, #24]
    830c:	add	x0, x0, #0x1
    8310:	lsl	x0, x0, #1
    8314:	ldr	x1, [sp, #72]
    8318:	add	x0, x1, x0
    831c:	ldrh	w0, [x0]
    8320:	cmp	w0, #0x6e
    8324:	cset	w0, eq  // eq = none
    8328:	and	w0, w0, #0xff
    832c:	b	8354 <PySequence_Fast@plt+0x6284>
    8330:	ldr	x0, [sp, #24]
    8334:	add	x0, x0, #0x1
    8338:	lsl	x0, x0, #2
    833c:	ldr	x1, [sp, #72]
    8340:	add	x0, x1, x0
    8344:	ldr	w0, [x0]
    8348:	cmp	w0, #0x6e
    834c:	cset	w0, eq  // eq = none
    8350:	and	w0, w0, #0xff
    8354:	cmp	w0, #0x0
    8358:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    835c:	ldr	w0, [sp, #68]
    8360:	cmp	w0, #0x1
    8364:	b.ne	838c <PySequence_Fast@plt+0x62bc>  // b.any
    8368:	ldr	x0, [sp, #24]
    836c:	add	x0, x0, #0x2
    8370:	ldr	x1, [sp, #72]
    8374:	add	x0, x1, x0
    8378:	ldrb	w0, [x0]
    837c:	cmp	w0, #0x66
    8380:	cset	w0, eq  // eq = none
    8384:	and	w0, w0, #0xff
    8388:	b	83e4 <PySequence_Fast@plt+0x6314>
    838c:	ldr	w0, [sp, #68]
    8390:	cmp	w0, #0x2
    8394:	b.ne	83c0 <PySequence_Fast@plt+0x62f0>  // b.any
    8398:	ldr	x0, [sp, #24]
    839c:	add	x0, x0, #0x2
    83a0:	lsl	x0, x0, #1
    83a4:	ldr	x1, [sp, #72]
    83a8:	add	x0, x1, x0
    83ac:	ldrh	w0, [x0]
    83b0:	cmp	w0, #0x66
    83b4:	cset	w0, eq  // eq = none
    83b8:	and	w0, w0, #0xff
    83bc:	b	83e4 <PySequence_Fast@plt+0x6314>
    83c0:	ldr	x0, [sp, #24]
    83c4:	add	x0, x0, #0x2
    83c8:	lsl	x0, x0, #2
    83cc:	ldr	x1, [sp, #72]
    83d0:	add	x0, x1, x0
    83d4:	ldr	w0, [x0]
    83d8:	cmp	w0, #0x66
    83dc:	cset	w0, eq  // eq = none
    83e0:	and	w0, w0, #0xff
    83e4:	cmp	w0, #0x0
    83e8:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    83ec:	ldr	w0, [sp, #68]
    83f0:	cmp	w0, #0x1
    83f4:	b.ne	841c <PySequence_Fast@plt+0x634c>  // b.any
    83f8:	ldr	x0, [sp, #24]
    83fc:	add	x0, x0, #0x3
    8400:	ldr	x1, [sp, #72]
    8404:	add	x0, x1, x0
    8408:	ldrb	w0, [x0]
    840c:	cmp	w0, #0x69
    8410:	cset	w0, eq  // eq = none
    8414:	and	w0, w0, #0xff
    8418:	b	8474 <PySequence_Fast@plt+0x63a4>
    841c:	ldr	w0, [sp, #68]
    8420:	cmp	w0, #0x2
    8424:	b.ne	8450 <PySequence_Fast@plt+0x6380>  // b.any
    8428:	ldr	x0, [sp, #24]
    842c:	add	x0, x0, #0x3
    8430:	lsl	x0, x0, #1
    8434:	ldr	x1, [sp, #72]
    8438:	add	x0, x1, x0
    843c:	ldrh	w0, [x0]
    8440:	cmp	w0, #0x69
    8444:	cset	w0, eq  // eq = none
    8448:	and	w0, w0, #0xff
    844c:	b	8474 <PySequence_Fast@plt+0x63a4>
    8450:	ldr	x0, [sp, #24]
    8454:	add	x0, x0, #0x3
    8458:	lsl	x0, x0, #2
    845c:	ldr	x1, [sp, #72]
    8460:	add	x0, x1, x0
    8464:	ldr	w0, [x0]
    8468:	cmp	w0, #0x69
    846c:	cset	w0, eq  // eq = none
    8470:	and	w0, w0, #0xff
    8474:	cmp	w0, #0x0
    8478:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    847c:	ldr	w0, [sp, #68]
    8480:	cmp	w0, #0x1
    8484:	b.ne	84ac <PySequence_Fast@plt+0x63dc>  // b.any
    8488:	ldr	x0, [sp, #24]
    848c:	add	x0, x0, #0x4
    8490:	ldr	x1, [sp, #72]
    8494:	add	x0, x1, x0
    8498:	ldrb	w0, [x0]
    849c:	cmp	w0, #0x6e
    84a0:	cset	w0, eq  // eq = none
    84a4:	and	w0, w0, #0xff
    84a8:	b	8504 <PySequence_Fast@plt+0x6434>
    84ac:	ldr	w0, [sp, #68]
    84b0:	cmp	w0, #0x2
    84b4:	b.ne	84e0 <PySequence_Fast@plt+0x6410>  // b.any
    84b8:	ldr	x0, [sp, #24]
    84bc:	add	x0, x0, #0x4
    84c0:	lsl	x0, x0, #1
    84c4:	ldr	x1, [sp, #72]
    84c8:	add	x0, x1, x0
    84cc:	ldrh	w0, [x0]
    84d0:	cmp	w0, #0x6e
    84d4:	cset	w0, eq  // eq = none
    84d8:	and	w0, w0, #0xff
    84dc:	b	8504 <PySequence_Fast@plt+0x6434>
    84e0:	ldr	x0, [sp, #24]
    84e4:	add	x0, x0, #0x4
    84e8:	lsl	x0, x0, #2
    84ec:	ldr	x1, [sp, #72]
    84f0:	add	x0, x1, x0
    84f4:	ldr	w0, [x0]
    84f8:	cmp	w0, #0x6e
    84fc:	cset	w0, eq  // eq = none
    8500:	and	w0, w0, #0xff
    8504:	cmp	w0, #0x0
    8508:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    850c:	ldr	w0, [sp, #68]
    8510:	cmp	w0, #0x1
    8514:	b.ne	853c <PySequence_Fast@plt+0x646c>  // b.any
    8518:	ldr	x0, [sp, #24]
    851c:	add	x0, x0, #0x5
    8520:	ldr	x1, [sp, #72]
    8524:	add	x0, x1, x0
    8528:	ldrb	w0, [x0]
    852c:	cmp	w0, #0x69
    8530:	cset	w0, eq  // eq = none
    8534:	and	w0, w0, #0xff
    8538:	b	8594 <PySequence_Fast@plt+0x64c4>
    853c:	ldr	w0, [sp, #68]
    8540:	cmp	w0, #0x2
    8544:	b.ne	8570 <PySequence_Fast@plt+0x64a0>  // b.any
    8548:	ldr	x0, [sp, #24]
    854c:	add	x0, x0, #0x5
    8550:	lsl	x0, x0, #1
    8554:	ldr	x1, [sp, #72]
    8558:	add	x0, x1, x0
    855c:	ldrh	w0, [x0]
    8560:	cmp	w0, #0x69
    8564:	cset	w0, eq  // eq = none
    8568:	and	w0, w0, #0xff
    856c:	b	8594 <PySequence_Fast@plt+0x64c4>
    8570:	ldr	x0, [sp, #24]
    8574:	add	x0, x0, #0x5
    8578:	lsl	x0, x0, #2
    857c:	ldr	x1, [sp, #72]
    8580:	add	x0, x1, x0
    8584:	ldr	w0, [x0]
    8588:	cmp	w0, #0x69
    858c:	cset	w0, eq  // eq = none
    8590:	and	w0, w0, #0xff
    8594:	cmp	w0, #0x0
    8598:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    859c:	ldr	w0, [sp, #68]
    85a0:	cmp	w0, #0x1
    85a4:	b.ne	85cc <PySequence_Fast@plt+0x64fc>  // b.any
    85a8:	ldr	x0, [sp, #24]
    85ac:	add	x0, x0, #0x6
    85b0:	ldr	x1, [sp, #72]
    85b4:	add	x0, x1, x0
    85b8:	ldrb	w0, [x0]
    85bc:	cmp	w0, #0x74
    85c0:	cset	w0, eq  // eq = none
    85c4:	and	w0, w0, #0xff
    85c8:	b	8624 <PySequence_Fast@plt+0x6554>
    85cc:	ldr	w0, [sp, #68]
    85d0:	cmp	w0, #0x2
    85d4:	b.ne	8600 <PySequence_Fast@plt+0x6530>  // b.any
    85d8:	ldr	x0, [sp, #24]
    85dc:	add	x0, x0, #0x6
    85e0:	lsl	x0, x0, #1
    85e4:	ldr	x1, [sp, #72]
    85e8:	add	x0, x1, x0
    85ec:	ldrh	w0, [x0]
    85f0:	cmp	w0, #0x74
    85f4:	cset	w0, eq  // eq = none
    85f8:	and	w0, w0, #0xff
    85fc:	b	8624 <PySequence_Fast@plt+0x6554>
    8600:	ldr	x0, [sp, #24]
    8604:	add	x0, x0, #0x6
    8608:	lsl	x0, x0, #2
    860c:	ldr	x1, [sp, #72]
    8610:	add	x0, x1, x0
    8614:	ldr	w0, [x0]
    8618:	cmp	w0, #0x74
    861c:	cset	w0, eq  // eq = none
    8620:	and	w0, w0, #0xff
    8624:	cmp	w0, #0x0
    8628:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    862c:	ldr	w0, [sp, #68]
    8630:	cmp	w0, #0x1
    8634:	b.ne	865c <PySequence_Fast@plt+0x658c>  // b.any
    8638:	ldr	x0, [sp, #24]
    863c:	add	x0, x0, #0x7
    8640:	ldr	x1, [sp, #72]
    8644:	add	x0, x1, x0
    8648:	ldrb	w0, [x0]
    864c:	cmp	w0, #0x79
    8650:	cset	w0, eq  // eq = none
    8654:	and	w0, w0, #0xff
    8658:	b	86b4 <PySequence_Fast@plt+0x65e4>
    865c:	ldr	w0, [sp, #68]
    8660:	cmp	w0, #0x2
    8664:	b.ne	8690 <PySequence_Fast@plt+0x65c0>  // b.any
    8668:	ldr	x0, [sp, #24]
    866c:	add	x0, x0, #0x7
    8670:	lsl	x0, x0, #1
    8674:	ldr	x1, [sp, #72]
    8678:	add	x0, x1, x0
    867c:	ldrh	w0, [x0]
    8680:	cmp	w0, #0x79
    8684:	cset	w0, eq  // eq = none
    8688:	and	w0, w0, #0xff
    868c:	b	86b4 <PySequence_Fast@plt+0x65e4>
    8690:	ldr	x0, [sp, #24]
    8694:	add	x0, x0, #0x7
    8698:	lsl	x0, x0, #2
    869c:	ldr	x1, [sp, #72]
    86a0:	add	x0, x1, x0
    86a4:	ldr	w0, [x0]
    86a8:	cmp	w0, #0x79
    86ac:	cset	w0, eq  // eq = none
    86b0:	and	w0, w0, #0xff
    86b4:	cmp	w0, #0x0
    86b8:	b.eq	8ba8 <PySequence_Fast@plt+0x6ad8>  // b.none
    86bc:	ldr	x3, [sp, #16]
    86c0:	ldr	x2, [sp, #24]
    86c4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    86c8:	add	x1, x0, #0xfe8
    86cc:	ldr	x0, [sp, #40]
    86d0:	bl	69bc <PySequence_Fast@plt+0x48ec>
    86d4:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    86d8:	ldr	x0, [sp, #24]
    86dc:	add	x0, x0, #0x8
    86e0:	ldr	x1, [sp, #56]
    86e4:	cmp	x1, x0
    86e8:	b.le	8bb0 <PySequence_Fast@plt+0x6ae0>
    86ec:	ldr	w0, [sp, #68]
    86f0:	cmp	w0, #0x1
    86f4:	b.ne	871c <PySequence_Fast@plt+0x664c>  // b.any
    86f8:	ldr	x0, [sp, #24]
    86fc:	add	x0, x0, #0x1
    8700:	ldr	x1, [sp, #72]
    8704:	add	x0, x1, x0
    8708:	ldrb	w0, [x0]
    870c:	cmp	w0, #0x49
    8710:	cset	w0, eq  // eq = none
    8714:	and	w0, w0, #0xff
    8718:	b	8774 <PySequence_Fast@plt+0x66a4>
    871c:	ldr	w0, [sp, #68]
    8720:	cmp	w0, #0x2
    8724:	b.ne	8750 <PySequence_Fast@plt+0x6680>  // b.any
    8728:	ldr	x0, [sp, #24]
    872c:	add	x0, x0, #0x1
    8730:	lsl	x0, x0, #1
    8734:	ldr	x1, [sp, #72]
    8738:	add	x0, x1, x0
    873c:	ldrh	w0, [x0]
    8740:	cmp	w0, #0x49
    8744:	cset	w0, eq  // eq = none
    8748:	and	w0, w0, #0xff
    874c:	b	8774 <PySequence_Fast@plt+0x66a4>
    8750:	ldr	x0, [sp, #24]
    8754:	add	x0, x0, #0x1
    8758:	lsl	x0, x0, #2
    875c:	ldr	x1, [sp, #72]
    8760:	add	x0, x1, x0
    8764:	ldr	w0, [x0]
    8768:	cmp	w0, #0x49
    876c:	cset	w0, eq  // eq = none
    8770:	and	w0, w0, #0xff
    8774:	cmp	w0, #0x0
    8778:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    877c:	ldr	w0, [sp, #68]
    8780:	cmp	w0, #0x1
    8784:	b.ne	87ac <PySequence_Fast@plt+0x66dc>  // b.any
    8788:	ldr	x0, [sp, #24]
    878c:	add	x0, x0, #0x2
    8790:	ldr	x1, [sp, #72]
    8794:	add	x0, x1, x0
    8798:	ldrb	w0, [x0]
    879c:	cmp	w0, #0x6e
    87a0:	cset	w0, eq  // eq = none
    87a4:	and	w0, w0, #0xff
    87a8:	b	8804 <PySequence_Fast@plt+0x6734>
    87ac:	ldr	w0, [sp, #68]
    87b0:	cmp	w0, #0x2
    87b4:	b.ne	87e0 <PySequence_Fast@plt+0x6710>  // b.any
    87b8:	ldr	x0, [sp, #24]
    87bc:	add	x0, x0, #0x2
    87c0:	lsl	x0, x0, #1
    87c4:	ldr	x1, [sp, #72]
    87c8:	add	x0, x1, x0
    87cc:	ldrh	w0, [x0]
    87d0:	cmp	w0, #0x6e
    87d4:	cset	w0, eq  // eq = none
    87d8:	and	w0, w0, #0xff
    87dc:	b	8804 <PySequence_Fast@plt+0x6734>
    87e0:	ldr	x0, [sp, #24]
    87e4:	add	x0, x0, #0x2
    87e8:	lsl	x0, x0, #2
    87ec:	ldr	x1, [sp, #72]
    87f0:	add	x0, x1, x0
    87f4:	ldr	w0, [x0]
    87f8:	cmp	w0, #0x6e
    87fc:	cset	w0, eq  // eq = none
    8800:	and	w0, w0, #0xff
    8804:	cmp	w0, #0x0
    8808:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    880c:	ldr	w0, [sp, #68]
    8810:	cmp	w0, #0x1
    8814:	b.ne	883c <PySequence_Fast@plt+0x676c>  // b.any
    8818:	ldr	x0, [sp, #24]
    881c:	add	x0, x0, #0x3
    8820:	ldr	x1, [sp, #72]
    8824:	add	x0, x1, x0
    8828:	ldrb	w0, [x0]
    882c:	cmp	w0, #0x66
    8830:	cset	w0, eq  // eq = none
    8834:	and	w0, w0, #0xff
    8838:	b	8894 <PySequence_Fast@plt+0x67c4>
    883c:	ldr	w0, [sp, #68]
    8840:	cmp	w0, #0x2
    8844:	b.ne	8870 <PySequence_Fast@plt+0x67a0>  // b.any
    8848:	ldr	x0, [sp, #24]
    884c:	add	x0, x0, #0x3
    8850:	lsl	x0, x0, #1
    8854:	ldr	x1, [sp, #72]
    8858:	add	x0, x1, x0
    885c:	ldrh	w0, [x0]
    8860:	cmp	w0, #0x66
    8864:	cset	w0, eq  // eq = none
    8868:	and	w0, w0, #0xff
    886c:	b	8894 <PySequence_Fast@plt+0x67c4>
    8870:	ldr	x0, [sp, #24]
    8874:	add	x0, x0, #0x3
    8878:	lsl	x0, x0, #2
    887c:	ldr	x1, [sp, #72]
    8880:	add	x0, x1, x0
    8884:	ldr	w0, [x0]
    8888:	cmp	w0, #0x66
    888c:	cset	w0, eq  // eq = none
    8890:	and	w0, w0, #0xff
    8894:	cmp	w0, #0x0
    8898:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    889c:	ldr	w0, [sp, #68]
    88a0:	cmp	w0, #0x1
    88a4:	b.ne	88cc <PySequence_Fast@plt+0x67fc>  // b.any
    88a8:	ldr	x0, [sp, #24]
    88ac:	add	x0, x0, #0x4
    88b0:	ldr	x1, [sp, #72]
    88b4:	add	x0, x1, x0
    88b8:	ldrb	w0, [x0]
    88bc:	cmp	w0, #0x69
    88c0:	cset	w0, eq  // eq = none
    88c4:	and	w0, w0, #0xff
    88c8:	b	8924 <PySequence_Fast@plt+0x6854>
    88cc:	ldr	w0, [sp, #68]
    88d0:	cmp	w0, #0x2
    88d4:	b.ne	8900 <PySequence_Fast@plt+0x6830>  // b.any
    88d8:	ldr	x0, [sp, #24]
    88dc:	add	x0, x0, #0x4
    88e0:	lsl	x0, x0, #1
    88e4:	ldr	x1, [sp, #72]
    88e8:	add	x0, x1, x0
    88ec:	ldrh	w0, [x0]
    88f0:	cmp	w0, #0x69
    88f4:	cset	w0, eq  // eq = none
    88f8:	and	w0, w0, #0xff
    88fc:	b	8924 <PySequence_Fast@plt+0x6854>
    8900:	ldr	x0, [sp, #24]
    8904:	add	x0, x0, #0x4
    8908:	lsl	x0, x0, #2
    890c:	ldr	x1, [sp, #72]
    8910:	add	x0, x1, x0
    8914:	ldr	w0, [x0]
    8918:	cmp	w0, #0x69
    891c:	cset	w0, eq  // eq = none
    8920:	and	w0, w0, #0xff
    8924:	cmp	w0, #0x0
    8928:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    892c:	ldr	w0, [sp, #68]
    8930:	cmp	w0, #0x1
    8934:	b.ne	895c <PySequence_Fast@plt+0x688c>  // b.any
    8938:	ldr	x0, [sp, #24]
    893c:	add	x0, x0, #0x5
    8940:	ldr	x1, [sp, #72]
    8944:	add	x0, x1, x0
    8948:	ldrb	w0, [x0]
    894c:	cmp	w0, #0x6e
    8950:	cset	w0, eq  // eq = none
    8954:	and	w0, w0, #0xff
    8958:	b	89b4 <PySequence_Fast@plt+0x68e4>
    895c:	ldr	w0, [sp, #68]
    8960:	cmp	w0, #0x2
    8964:	b.ne	8990 <PySequence_Fast@plt+0x68c0>  // b.any
    8968:	ldr	x0, [sp, #24]
    896c:	add	x0, x0, #0x5
    8970:	lsl	x0, x0, #1
    8974:	ldr	x1, [sp, #72]
    8978:	add	x0, x1, x0
    897c:	ldrh	w0, [x0]
    8980:	cmp	w0, #0x6e
    8984:	cset	w0, eq  // eq = none
    8988:	and	w0, w0, #0xff
    898c:	b	89b4 <PySequence_Fast@plt+0x68e4>
    8990:	ldr	x0, [sp, #24]
    8994:	add	x0, x0, #0x5
    8998:	lsl	x0, x0, #2
    899c:	ldr	x1, [sp, #72]
    89a0:	add	x0, x1, x0
    89a4:	ldr	w0, [x0]
    89a8:	cmp	w0, #0x6e
    89ac:	cset	w0, eq  // eq = none
    89b0:	and	w0, w0, #0xff
    89b4:	cmp	w0, #0x0
    89b8:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    89bc:	ldr	w0, [sp, #68]
    89c0:	cmp	w0, #0x1
    89c4:	b.ne	89ec <PySequence_Fast@plt+0x691c>  // b.any
    89c8:	ldr	x0, [sp, #24]
    89cc:	add	x0, x0, #0x6
    89d0:	ldr	x1, [sp, #72]
    89d4:	add	x0, x1, x0
    89d8:	ldrb	w0, [x0]
    89dc:	cmp	w0, #0x69
    89e0:	cset	w0, eq  // eq = none
    89e4:	and	w0, w0, #0xff
    89e8:	b	8a44 <PySequence_Fast@plt+0x6974>
    89ec:	ldr	w0, [sp, #68]
    89f0:	cmp	w0, #0x2
    89f4:	b.ne	8a20 <PySequence_Fast@plt+0x6950>  // b.any
    89f8:	ldr	x0, [sp, #24]
    89fc:	add	x0, x0, #0x6
    8a00:	lsl	x0, x0, #1
    8a04:	ldr	x1, [sp, #72]
    8a08:	add	x0, x1, x0
    8a0c:	ldrh	w0, [x0]
    8a10:	cmp	w0, #0x69
    8a14:	cset	w0, eq  // eq = none
    8a18:	and	w0, w0, #0xff
    8a1c:	b	8a44 <PySequence_Fast@plt+0x6974>
    8a20:	ldr	x0, [sp, #24]
    8a24:	add	x0, x0, #0x6
    8a28:	lsl	x0, x0, #2
    8a2c:	ldr	x1, [sp, #72]
    8a30:	add	x0, x1, x0
    8a34:	ldr	w0, [x0]
    8a38:	cmp	w0, #0x69
    8a3c:	cset	w0, eq  // eq = none
    8a40:	and	w0, w0, #0xff
    8a44:	cmp	w0, #0x0
    8a48:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    8a4c:	ldr	w0, [sp, #68]
    8a50:	cmp	w0, #0x1
    8a54:	b.ne	8a7c <PySequence_Fast@plt+0x69ac>  // b.any
    8a58:	ldr	x0, [sp, #24]
    8a5c:	add	x0, x0, #0x7
    8a60:	ldr	x1, [sp, #72]
    8a64:	add	x0, x1, x0
    8a68:	ldrb	w0, [x0]
    8a6c:	cmp	w0, #0x74
    8a70:	cset	w0, eq  // eq = none
    8a74:	and	w0, w0, #0xff
    8a78:	b	8ad4 <PySequence_Fast@plt+0x6a04>
    8a7c:	ldr	w0, [sp, #68]
    8a80:	cmp	w0, #0x2
    8a84:	b.ne	8ab0 <PySequence_Fast@plt+0x69e0>  // b.any
    8a88:	ldr	x0, [sp, #24]
    8a8c:	add	x0, x0, #0x7
    8a90:	lsl	x0, x0, #1
    8a94:	ldr	x1, [sp, #72]
    8a98:	add	x0, x1, x0
    8a9c:	ldrh	w0, [x0]
    8aa0:	cmp	w0, #0x74
    8aa4:	cset	w0, eq  // eq = none
    8aa8:	and	w0, w0, #0xff
    8aac:	b	8ad4 <PySequence_Fast@plt+0x6a04>
    8ab0:	ldr	x0, [sp, #24]
    8ab4:	add	x0, x0, #0x7
    8ab8:	lsl	x0, x0, #2
    8abc:	ldr	x1, [sp, #72]
    8ac0:	add	x0, x1, x0
    8ac4:	ldr	w0, [x0]
    8ac8:	cmp	w0, #0x74
    8acc:	cset	w0, eq  // eq = none
    8ad0:	and	w0, w0, #0xff
    8ad4:	cmp	w0, #0x0
    8ad8:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    8adc:	ldr	w0, [sp, #68]
    8ae0:	cmp	w0, #0x1
    8ae4:	b.ne	8b0c <PySequence_Fast@plt+0x6a3c>  // b.any
    8ae8:	ldr	x0, [sp, #24]
    8aec:	add	x0, x0, #0x8
    8af0:	ldr	x1, [sp, #72]
    8af4:	add	x0, x1, x0
    8af8:	ldrb	w0, [x0]
    8afc:	cmp	w0, #0x79
    8b00:	cset	w0, eq  // eq = none
    8b04:	and	w0, w0, #0xff
    8b08:	b	8b64 <PySequence_Fast@plt+0x6a94>
    8b0c:	ldr	w0, [sp, #68]
    8b10:	cmp	w0, #0x2
    8b14:	b.ne	8b40 <PySequence_Fast@plt+0x6a70>  // b.any
    8b18:	ldr	x0, [sp, #24]
    8b1c:	add	x0, x0, #0x8
    8b20:	lsl	x0, x0, #1
    8b24:	ldr	x1, [sp, #72]
    8b28:	add	x0, x1, x0
    8b2c:	ldrh	w0, [x0]
    8b30:	cmp	w0, #0x79
    8b34:	cset	w0, eq  // eq = none
    8b38:	and	w0, w0, #0xff
    8b3c:	b	8b64 <PySequence_Fast@plt+0x6a94>
    8b40:	ldr	x0, [sp, #24]
    8b44:	add	x0, x0, #0x8
    8b48:	lsl	x0, x0, #2
    8b4c:	ldr	x1, [sp, #72]
    8b50:	add	x0, x1, x0
    8b54:	ldr	w0, [x0]
    8b58:	cmp	w0, #0x79
    8b5c:	cset	w0, eq  // eq = none
    8b60:	and	w0, w0, #0xff
    8b64:	cmp	w0, #0x0
    8b68:	b.eq	8bb0 <PySequence_Fast@plt+0x6ae0>  // b.none
    8b6c:	ldr	x3, [sp, #16]
    8b70:	ldr	x2, [sp, #24]
    8b74:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8b78:	add	x1, x0, #0xff8
    8b7c:	ldr	x0, [sp, #40]
    8b80:	bl	69bc <PySequence_Fast@plt+0x48ec>
    8b84:	b	8bc8 <PySequence_Fast@plt+0x6af8>
    8b88:	nop
    8b8c:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    8b90:	nop
    8b94:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    8b98:	nop
    8b9c:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    8ba0:	nop
    8ba4:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    8ba8:	nop
    8bac:	b	8bb4 <PySequence_Fast@plt+0x6ae4>
    8bb0:	nop
    8bb4:	ldr	x3, [sp, #16]
    8bb8:	ldr	x2, [sp, #24]
    8bbc:	ldr	x1, [sp, #32]
    8bc0:	ldr	x0, [sp, #40]
    8bc4:	bl	6a4c <PySequence_Fast@plt+0x497c>
    8bc8:	ldp	x29, x30, [sp], #80
    8bcc:	ret
    8bd0:	stp	x29, x30, [sp, #-96]!
    8bd4:	mov	x29, sp
    8bd8:	str	x0, [sp, #40]
    8bdc:	str	x1, [sp, #32]
    8be0:	str	x2, [sp, #24]
    8be4:	mov	x0, #0xffffffffffffffff    	// #-1
    8be8:	str	x0, [sp, #56]
    8bec:	ldr	x0, [sp, #40]
    8bf0:	str	x0, [sp, #88]
    8bf4:	add	x1, sp, #0x40
    8bf8:	add	x0, sp, #0x48
    8bfc:	mov	x5, x1
    8c00:	mov	x4, x0
    8c04:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    8c08:	add	x3, x0, #0x858
    8c0c:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    8c10:	add	x2, x0, #0x8
    8c14:	ldr	x1, [sp, #24]
    8c18:	ldr	x0, [sp, #32]
    8c1c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    8c20:	cmp	w0, #0x0
    8c24:	b.ne	8c30 <PySequence_Fast@plt+0x6b60>  // b.any
    8c28:	mov	x0, #0x0                   	// #0
    8c2c:	b	8cd4 <PySequence_Fast@plt+0x6c04>
    8c30:	ldr	x0, [sp, #72]
    8c34:	ldr	x0, [x0, #8]
    8c38:	ldr	x0, [x0, #168]
    8c3c:	and	x0, x0, #0x10000000
    8c40:	cmp	x0, #0x0
    8c44:	b.eq	8c88 <PySequence_Fast@plt+0x6bb8>  // b.none
    8c48:	ldr	x0, [sp, #72]
    8c4c:	ldr	x1, [sp, #64]
    8c50:	add	x2, sp, #0x38
    8c54:	mov	x3, x2
    8c58:	mov	x2, x1
    8c5c:	mov	x1, x0
    8c60:	ldr	x0, [sp, #88]
    8c64:	bl	7760 <PySequence_Fast@plt+0x5690>
    8c68:	str	x0, [sp, #80]
    8c6c:	ldr	x0, [sp, #88]
    8c70:	ldr	x0, [x0, #64]
    8c74:	bl	1ed0 <PyDict_Clear@plt>
    8c78:	ldr	x0, [sp, #80]
    8c7c:	cmp	x0, #0x0
    8c80:	b.ne	8cc4 <PySequence_Fast@plt+0x6bf4>  // b.any
    8c84:	b	8cbc <PySequence_Fast@plt+0x6bec>
    8c88:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    8c8c:	ldr	x0, [x0, #3976]
    8c90:	ldr	x3, [x0]
    8c94:	ldr	x0, [sp, #72]
    8c98:	ldr	x0, [x0, #8]
    8c9c:	ldr	x0, [x0, #24]
    8ca0:	mov	x2, x0
    8ca4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8ca8:	add	x1, x0, #0xdf0
    8cac:	mov	x0, x3
    8cb0:	bl	2040 <PyErr_Format@plt>
    8cb4:	mov	x0, #0x0                   	// #0
    8cb8:	b	8cd4 <PySequence_Fast@plt+0x6c04>
    8cbc:	mov	x0, #0x0                   	// #0
    8cc0:	b	8cd4 <PySequence_Fast@plt+0x6c04>
    8cc4:	ldr	x0, [sp, #56]
    8cc8:	mov	x1, x0
    8ccc:	ldr	x0, [sp, #80]
    8cd0:	bl	3e84 <PySequence_Fast@plt+0x1db4>
    8cd4:	ldp	x29, x30, [sp], #96
    8cd8:	ret
    8cdc:	stp	x29, x30, [sp, #-80]!
    8ce0:	mov	x29, sp
    8ce4:	str	x0, [sp, #40]
    8ce8:	str	x1, [sp, #32]
    8cec:	str	x2, [sp, #24]
    8cf0:	add	x0, sp, #0x38
    8cf4:	mov	x4, x0
    8cf8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    8cfc:	add	x3, x0, #0x870
    8d00:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    8d04:	add	x2, x0, #0x18
    8d08:	ldr	x1, [sp, #24]
    8d0c:	ldr	x0, [sp, #32]
    8d10:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    8d14:	cmp	w0, #0x0
    8d18:	b.ne	8d24 <PySequence_Fast@plt+0x6c54>  // b.any
    8d1c:	mov	x0, #0x0                   	// #0
    8d20:	b	8f18 <PySequence_Fast@plt+0x6e48>
    8d24:	ldr	x0, [sp, #40]
    8d28:	ldr	x2, [x0, #304]
    8d2c:	mov	x1, #0x0                   	// #0
    8d30:	ldr	x0, [sp, #40]
    8d34:	blr	x2
    8d38:	str	x0, [sp, #72]
    8d3c:	ldr	x0, [sp, #72]
    8d40:	cmp	x0, #0x0
    8d44:	b.ne	8d50 <PySequence_Fast@plt+0x6c80>  // b.any
    8d48:	mov	x0, #0x0                   	// #0
    8d4c:	b	8f18 <PySequence_Fast@plt+0x6e48>
    8d50:	bl	1fd0 <PyDict_New@plt>
    8d54:	mov	x1, x0
    8d58:	ldr	x0, [sp, #72]
    8d5c:	str	x1, [x0, #64]
    8d60:	ldr	x0, [sp, #72]
    8d64:	ldr	x0, [x0, #64]
    8d68:	cmp	x0, #0x0
    8d6c:	b.eq	8ec4 <PySequence_Fast@plt+0x6df4>  // b.none
    8d70:	ldr	x2, [sp, #56]
    8d74:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8d78:	add	x1, x0, #0xa58
    8d7c:	mov	x0, x2
    8d80:	bl	1dd0 <PyObject_GetAttrString@plt>
    8d84:	str	x0, [sp, #64]
    8d88:	ldr	x0, [sp, #64]
    8d8c:	cmp	x0, #0x0
    8d90:	b.eq	8ecc <PySequence_Fast@plt+0x6dfc>  // b.none
    8d94:	ldr	x0, [sp, #64]
    8d98:	bl	1f90 <PyObject_IsTrue@plt>
    8d9c:	sxtb	w1, w0
    8da0:	ldr	x0, [sp, #72]
    8da4:	strb	w1, [x0, #16]
    8da8:	ldr	x2, [sp, #64]
    8dac:	mov	w1, #0x4c9                 	// #1225
    8db0:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8db4:	add	x0, x0, #0xb60
    8db8:	bl	2298 <PySequence_Fast@plt+0x1c8>
    8dbc:	ldr	x0, [sp, #72]
    8dc0:	ldrsb	w0, [x0, #16]
    8dc4:	cmp	w0, #0x0
    8dc8:	b.lt	8ed4 <PySequence_Fast@plt+0x6e04>  // b.tstop
    8dcc:	ldr	x2, [sp, #56]
    8dd0:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8dd4:	add	x1, x0, #0xa60
    8dd8:	mov	x0, x2
    8ddc:	bl	1dd0 <PyObject_GetAttrString@plt>
    8de0:	mov	x1, x0
    8de4:	ldr	x0, [sp, #72]
    8de8:	str	x1, [x0, #24]
    8dec:	ldr	x0, [sp, #72]
    8df0:	ldr	x0, [x0, #24]
    8df4:	cmp	x0, #0x0
    8df8:	b.eq	8edc <PySequence_Fast@plt+0x6e0c>  // b.none
    8dfc:	ldr	x2, [sp, #56]
    8e00:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8e04:	add	x1, x0, #0xa70
    8e08:	mov	x0, x2
    8e0c:	bl	1dd0 <PyObject_GetAttrString@plt>
    8e10:	mov	x1, x0
    8e14:	ldr	x0, [sp, #72]
    8e18:	str	x1, [x0, #32]
    8e1c:	ldr	x0, [sp, #72]
    8e20:	ldr	x0, [x0, #32]
    8e24:	cmp	x0, #0x0
    8e28:	b.eq	8ee4 <PySequence_Fast@plt+0x6e14>  // b.none
    8e2c:	ldr	x2, [sp, #56]
    8e30:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8e34:	add	x1, x0, #0xa88
    8e38:	mov	x0, x2
    8e3c:	bl	1dd0 <PyObject_GetAttrString@plt>
    8e40:	mov	x1, x0
    8e44:	ldr	x0, [sp, #72]
    8e48:	str	x1, [x0, #40]
    8e4c:	ldr	x0, [sp, #72]
    8e50:	ldr	x0, [x0, #40]
    8e54:	cmp	x0, #0x0
    8e58:	b.eq	8eec <PySequence_Fast@plt+0x6e1c>  // b.none
    8e5c:	ldr	x2, [sp, #56]
    8e60:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8e64:	add	x1, x0, #0xa98
    8e68:	mov	x0, x2
    8e6c:	bl	1dd0 <PyObject_GetAttrString@plt>
    8e70:	mov	x1, x0
    8e74:	ldr	x0, [sp, #72]
    8e78:	str	x1, [x0, #48]
    8e7c:	ldr	x0, [sp, #72]
    8e80:	ldr	x0, [x0, #48]
    8e84:	cmp	x0, #0x0
    8e88:	b.eq	8ef4 <PySequence_Fast@plt+0x6e24>  // b.none
    8e8c:	ldr	x2, [sp, #56]
    8e90:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8e94:	add	x1, x0, #0xaa8
    8e98:	mov	x0, x2
    8e9c:	bl	1dd0 <PyObject_GetAttrString@plt>
    8ea0:	mov	x1, x0
    8ea4:	ldr	x0, [sp, #72]
    8ea8:	str	x1, [x0, #56]
    8eac:	ldr	x0, [sp, #72]
    8eb0:	ldr	x0, [x0, #56]
    8eb4:	cmp	x0, #0x0
    8eb8:	b.eq	8efc <PySequence_Fast@plt+0x6e2c>  // b.none
    8ebc:	ldr	x0, [sp, #72]
    8ec0:	b	8f18 <PySequence_Fast@plt+0x6e48>
    8ec4:	nop
    8ec8:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8ecc:	nop
    8ed0:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8ed4:	nop
    8ed8:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8edc:	nop
    8ee0:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8ee4:	nop
    8ee8:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8eec:	nop
    8ef0:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8ef4:	nop
    8ef8:	b	8f00 <PySequence_Fast@plt+0x6e30>
    8efc:	nop
    8f00:	ldr	x2, [sp, #72]
    8f04:	mov	w1, #0x4df                 	// #1247
    8f08:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    8f0c:	add	x0, x0, #0xb60
    8f10:	bl	2298 <PySequence_Fast@plt+0x1c8>
    8f14:	mov	x0, #0x0                   	// #0
    8f18:	ldp	x29, x30, [sp], #80
    8f1c:	ret
    8f20:	sub	sp, sp, #0xb0
    8f24:	stp	x29, x30, [sp, #48]
    8f28:	add	x29, sp, #0x30
    8f2c:	str	x0, [sp, #88]
    8f30:	str	x1, [sp, #80]
    8f34:	str	x2, [sp, #72]
    8f38:	add	x4, sp, #0x80
    8f3c:	add	x3, sp, #0x88
    8f40:	add	x2, sp, #0x90
    8f44:	add	x1, sp, #0x98
    8f48:	add	x0, sp, #0x64
    8f4c:	str	x0, [sp, #32]
    8f50:	add	x0, sp, #0x68
    8f54:	str	x0, [sp, #24]
    8f58:	add	x0, sp, #0x6c
    8f5c:	str	x0, [sp, #16]
    8f60:	add	x0, sp, #0x70
    8f64:	str	x0, [sp, #8]
    8f68:	add	x0, sp, #0x78
    8f6c:	str	x0, [sp]
    8f70:	mov	x7, x4
    8f74:	mov	x6, x3
    8f78:	mov	x5, x2
    8f7c:	mov	x4, x1
    8f80:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    8f84:	add	x3, x0, #0x880
    8f88:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    8f8c:	add	x2, x0, #0x40
    8f90:	ldr	x1, [sp, #72]
    8f94:	ldr	x0, [sp, #80]
    8f98:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    8f9c:	cmp	w0, #0x0
    8fa0:	b.ne	8fac <PySequence_Fast@plt+0x6edc>  // b.any
    8fa4:	mov	x0, #0x0                   	// #0
    8fa8:	b	9160 <PySequence_Fast@plt+0x7090>
    8fac:	ldr	x1, [sp, #152]
    8fb0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    8fb4:	ldr	x0, [x0, #4016]
    8fb8:	cmp	x1, x0
    8fbc:	b.eq	900c <PySequence_Fast@plt+0x6f3c>  // b.none
    8fc0:	ldr	x0, [sp, #152]
    8fc4:	ldr	x0, [x0, #8]
    8fc8:	ldr	x0, [x0, #168]
    8fcc:	and	x0, x0, #0x20000000
    8fd0:	cmp	x0, #0x0
    8fd4:	b.ne	900c <PySequence_Fast@plt+0x6f3c>  // b.any
    8fd8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    8fdc:	ldr	x0, [x0, #3976]
    8fe0:	ldr	x3, [x0]
    8fe4:	ldr	x0, [sp, #152]
    8fe8:	ldr	x0, [x0, #8]
    8fec:	ldr	x0, [x0, #24]
    8ff0:	mov	x2, x0
    8ff4:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    8ff8:	add	x1, x0, #0x58
    8ffc:	mov	x0, x3
    9000:	bl	2040 <PyErr_Format@plt>
    9004:	mov	x0, #0x0                   	// #0
    9008:	b	9160 <PySequence_Fast@plt+0x7090>
    900c:	ldr	x0, [sp, #88]
    9010:	ldr	x2, [x0, #304]
    9014:	mov	x1, #0x0                   	// #0
    9018:	ldr	x0, [sp, #88]
    901c:	blr	x2
    9020:	str	x0, [sp, #168]
    9024:	ldr	x0, [sp, #168]
    9028:	cmp	x0, #0x0
    902c:	b.ne	9038 <PySequence_Fast@plt+0x6f68>  // b.any
    9030:	mov	x0, #0x0                   	// #0
    9034:	b	9160 <PySequence_Fast@plt+0x7090>
    9038:	ldr	x1, [sp, #152]
    903c:	ldr	x0, [sp, #168]
    9040:	str	x1, [x0, #16]
    9044:	ldr	x1, [sp, #144]
    9048:	ldr	x0, [sp, #168]
    904c:	str	x1, [x0, #24]
    9050:	ldr	x1, [sp, #136]
    9054:	ldr	x0, [sp, #168]
    9058:	str	x1, [x0, #32]
    905c:	ldr	x1, [sp, #128]
    9060:	ldr	x0, [sp, #168]
    9064:	str	x1, [x0, #40]
    9068:	ldr	x1, [sp, #120]
    906c:	ldr	x0, [sp, #168]
    9070:	str	x1, [x0, #48]
    9074:	ldr	x1, [sp, #112]
    9078:	ldr	x0, [sp, #168]
    907c:	str	x1, [x0, #56]
    9080:	ldr	w0, [sp, #108]
    9084:	and	w1, w0, #0xff
    9088:	ldr	x0, [sp, #168]
    908c:	strb	w1, [x0, #64]
    9090:	ldr	w0, [sp, #104]
    9094:	and	w1, w0, #0xff
    9098:	ldr	x0, [sp, #168]
    909c:	strb	w1, [x0, #65]
    90a0:	ldr	w1, [sp, #100]
    90a4:	ldr	x0, [sp, #168]
    90a8:	str	w1, [x0, #68]
    90ac:	ldr	x0, [sp, #168]
    90b0:	str	xzr, [x0, #72]
    90b4:	ldr	x0, [sp, #168]
    90b8:	ldr	x0, [x0, #32]
    90bc:	ldr	x1, [x0, #8]
    90c0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    90c4:	ldr	x0, [x0, #4064]
    90c8:	cmp	x1, x0
    90cc:	b.ne	9114 <PySequence_Fast@plt+0x7044>  // b.any
    90d0:	ldr	x0, [sp, #168]
    90d4:	ldr	x0, [x0, #32]
    90d8:	bl	1fc0 <PyCFunction_GetFunction@plt>
    90dc:	str	x0, [sp, #160]
    90e0:	ldr	x1, [sp, #160]
    90e4:	adrp	x0, 4000 <PySequence_Fast@plt+0x1f30>
    90e8:	add	x0, x0, #0xbd0
    90ec:	cmp	x1, x0
    90f0:	b.eq	9108 <PySequence_Fast@plt+0x7038>  // b.none
    90f4:	ldr	x1, [sp, #160]
    90f8:	adrp	x0, 4000 <PySequence_Fast@plt+0x1f30>
    90fc:	add	x0, x0, #0xc44
    9100:	cmp	x1, x0
    9104:	b.ne	9114 <PySequence_Fast@plt+0x7044>  // b.any
    9108:	ldr	x0, [sp, #168]
    910c:	ldr	x1, [sp, #160]
    9110:	str	x1, [x0, #72]
    9114:	ldr	x0, [sp, #168]
    9118:	ldr	x0, [x0, #16]
    911c:	bl	2270 <PySequence_Fast@plt+0x1a0>
    9120:	ldr	x0, [sp, #168]
    9124:	ldr	x0, [x0, #24]
    9128:	bl	2270 <PySequence_Fast@plt+0x1a0>
    912c:	ldr	x0, [sp, #168]
    9130:	ldr	x0, [x0, #32]
    9134:	bl	2270 <PySequence_Fast@plt+0x1a0>
    9138:	ldr	x0, [sp, #168]
    913c:	ldr	x0, [x0, #40]
    9140:	bl	2270 <PySequence_Fast@plt+0x1a0>
    9144:	ldr	x0, [sp, #168]
    9148:	ldr	x0, [x0, #48]
    914c:	bl	2270 <PySequence_Fast@plt+0x1a0>
    9150:	ldr	x0, [sp, #168]
    9154:	ldr	x0, [x0, #56]
    9158:	bl	2270 <PySequence_Fast@plt+0x1a0>
    915c:	ldr	x0, [sp, #168]
    9160:	ldp	x29, x30, [sp, #48]
    9164:	add	sp, sp, #0xb0
    9168:	ret
    916c:	stp	x29, x30, [sp, #-96]!
    9170:	mov	x29, sp
    9174:	str	x0, [sp, #40]
    9178:	str	x1, [sp, #32]
    917c:	str	x2, [sp, #24]
    9180:	ldr	x0, [sp, #40]
    9184:	str	x0, [sp, #88]
    9188:	add	x1, sp, #0x48
    918c:	add	x0, sp, #0x50
    9190:	mov	x5, x1
    9194:	mov	x4, x0
    9198:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    919c:	add	x3, x0, #0x8d0
    91a0:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    91a4:	add	x2, x0, #0x98
    91a8:	ldr	x1, [sp, #24]
    91ac:	ldr	x0, [sp, #32]
    91b0:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    91b4:	cmp	w0, #0x0
    91b8:	b.ne	91c4 <PySequence_Fast@plt+0x70f4>  // b.any
    91bc:	mov	x0, #0x0                   	// #0
    91c0:	b	921c <PySequence_Fast@plt+0x714c>
    91c4:	add	x0, sp, #0x38
    91c8:	bl	1df0 <_PyAccu_Init@plt>
    91cc:	cmp	w0, #0x0
    91d0:	b.eq	91dc <PySequence_Fast@plt+0x710c>  // b.none
    91d4:	mov	x0, #0x0                   	// #0
    91d8:	b	921c <PySequence_Fast@plt+0x714c>
    91dc:	ldr	x1, [sp, #80]
    91e0:	ldr	x2, [sp, #72]
    91e4:	add	x0, sp, #0x38
    91e8:	mov	x3, x2
    91ec:	mov	x2, x1
    91f0:	mov	x1, x0
    91f4:	ldr	x0, [sp, #88]
    91f8:	bl	9558 <PySequence_Fast@plt+0x7488>
    91fc:	cmp	w0, #0x0
    9200:	b.eq	9214 <PySequence_Fast@plt+0x7144>  // b.none
    9204:	add	x0, sp, #0x38
    9208:	bl	1ee0 <_PyAccu_Destroy@plt>
    920c:	mov	x0, #0x0                   	// #0
    9210:	b	921c <PySequence_Fast@plt+0x714c>
    9214:	add	x0, sp, #0x38
    9218:	bl	2070 <_PyAccu_FinishAsList@plt>
    921c:	ldp	x29, x30, [sp], #96
    9220:	ret
    9224:	stp	x29, x30, [sp, #-32]!
    9228:	mov	x29, sp
    922c:	str	x0, [sp, #24]
    9230:	ldr	x1, [sp, #24]
    9234:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9238:	ldr	x0, [x0, #4016]
    923c:	cmp	x1, x0
    9240:	b.ne	9294 <PySequence_Fast@plt+0x71c4>  // b.any
    9244:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9248:	add	x0, x0, #0x900
    924c:	ldr	x0, [x0]
    9250:	cmp	x0, #0x0
    9254:	b.ne	9274 <PySequence_Fast@plt+0x71a4>  // b.any
    9258:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    925c:	add	x0, x0, #0xa8
    9260:	bl	2000 <PyUnicode_InternFromString@plt>
    9264:	mov	x1, x0
    9268:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    926c:	add	x0, x0, #0x900
    9270:	str	x1, [x0]
    9274:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9278:	add	x0, x0, #0x900
    927c:	ldr	x0, [x0]
    9280:	bl	22e4 <PySequence_Fast@plt+0x214>
    9284:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9288:	add	x0, x0, #0x900
    928c:	ldr	x0, [x0]
    9290:	b	937c <PySequence_Fast@plt+0x72ac>
    9294:	ldr	x1, [sp, #24]
    9298:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    929c:	ldr	x0, [x0, #4024]
    92a0:	cmp	x1, x0
    92a4:	b.ne	92f8 <PySequence_Fast@plt+0x7228>  // b.any
    92a8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    92ac:	add	x0, x0, #0x908
    92b0:	ldr	x0, [x0]
    92b4:	cmp	x0, #0x0
    92b8:	b.ne	92d8 <PySequence_Fast@plt+0x7208>  // b.any
    92bc:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    92c0:	add	x0, x0, #0xb0
    92c4:	bl	2000 <PyUnicode_InternFromString@plt>
    92c8:	mov	x1, x0
    92cc:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    92d0:	add	x0, x0, #0x908
    92d4:	str	x1, [x0]
    92d8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    92dc:	add	x0, x0, #0x908
    92e0:	ldr	x0, [x0]
    92e4:	bl	22e4 <PySequence_Fast@plt+0x214>
    92e8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    92ec:	add	x0, x0, #0x908
    92f0:	ldr	x0, [x0]
    92f4:	b	937c <PySequence_Fast@plt+0x72ac>
    92f8:	ldr	x1, [sp, #24]
    92fc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9300:	ldr	x0, [x0, #3992]
    9304:	cmp	x1, x0
    9308:	b.ne	935c <PySequence_Fast@plt+0x728c>  // b.any
    930c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9310:	add	x0, x0, #0x910
    9314:	ldr	x0, [x0]
    9318:	cmp	x0, #0x0
    931c:	b.ne	933c <PySequence_Fast@plt+0x726c>  // b.any
    9320:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9324:	add	x0, x0, #0xb8
    9328:	bl	2000 <PyUnicode_InternFromString@plt>
    932c:	mov	x1, x0
    9330:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9334:	add	x0, x0, #0x910
    9338:	str	x1, [x0]
    933c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9340:	add	x0, x0, #0x910
    9344:	ldr	x0, [x0]
    9348:	bl	22e4 <PySequence_Fast@plt+0x214>
    934c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9350:	add	x0, x0, #0x910
    9354:	ldr	x0, [x0]
    9358:	b	937c <PySequence_Fast@plt+0x72ac>
    935c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9360:	ldr	x0, [x0, #3968]
    9364:	ldr	x2, [x0]
    9368:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    936c:	add	x1, x0, #0xc0
    9370:	mov	x0, x2
    9374:	bl	1e60 <PyErr_SetString@plt>
    9378:	mov	x0, #0x0                   	// #0
    937c:	ldp	x29, x30, [sp], #32
    9380:	ret
    9384:	stp	x29, x30, [sp, #-48]!
    9388:	mov	x29, sp
    938c:	str	x0, [sp, #24]
    9390:	str	x1, [sp, #16]
    9394:	ldr	x0, [sp, #16]
    9398:	ldr	d0, [x0, #16]
    939c:	str	d0, [sp, #40]
    93a0:	ldr	d0, [sp, #40]
    93a4:	fabs	d0, d0
    93a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    93ac:	fmov	d1, x0
    93b0:	fcmp	d0, d1
    93b4:	b.ls	9434 <PySequence_Fast@plt+0x7364>  // b.plast
    93b8:	ldr	x0, [sp, #24]
    93bc:	ldr	w0, [x0, #68]
    93c0:	cmp	w0, #0x0
    93c4:	b.ne	93ec <PySequence_Fast@plt+0x731c>  // b.any
    93c8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    93cc:	ldr	x0, [x0, #3968]
    93d0:	ldr	x2, [x0]
    93d4:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    93d8:	add	x1, x0, #0xd0
    93dc:	mov	x0, x2
    93e0:	bl	1e60 <PyErr_SetString@plt>
    93e4:	mov	x0, #0x0                   	// #0
    93e8:	b	9448 <PySequence_Fast@plt+0x7378>
    93ec:	ldr	d0, [sp, #40]
    93f0:	fcmpe	d0, #0.0
    93f4:	b.le	9408 <PySequence_Fast@plt+0x7338>
    93f8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    93fc:	add	x0, x0, #0xfe8
    9400:	bl	1fe0 <PyUnicode_FromString@plt>
    9404:	b	9448 <PySequence_Fast@plt+0x7378>
    9408:	ldr	d0, [sp, #40]
    940c:	fcmpe	d0, #0.0
    9410:	b.pl	9424 <PySequence_Fast@plt+0x7354>  // b.nfrst
    9414:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9418:	add	x0, x0, #0xff8
    941c:	bl	1fe0 <PyUnicode_FromString@plt>
    9420:	b	9448 <PySequence_Fast@plt+0x7378>
    9424:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9428:	add	x0, x0, #0xfe0
    942c:	bl	1fe0 <PyUnicode_FromString@plt>
    9430:	b	9448 <PySequence_Fast@plt+0x7378>
    9434:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9438:	ldr	x0, [x0, #3952]
    943c:	ldr	x1, [x0, #88]
    9440:	ldr	x0, [sp, #16]
    9444:	blr	x1
    9448:	ldp	x29, x30, [sp], #48
    944c:	ret
    9450:	stp	x29, x30, [sp, #-48]!
    9454:	mov	x29, sp
    9458:	str	x0, [sp, #24]
    945c:	str	x1, [sp, #16]
    9460:	ldr	x0, [sp, #24]
    9464:	ldr	x0, [x0, #72]
    9468:	cmp	x0, #0x0
    946c:	b.eq	9488 <PySequence_Fast@plt+0x73b8>  // b.none
    9470:	ldr	x0, [sp, #24]
    9474:	ldr	x2, [x0, #72]
    9478:	ldr	x1, [sp, #16]
    947c:	mov	x0, #0x0                   	// #0
    9480:	blr	x2
    9484:	b	9510 <PySequence_Fast@plt+0x7440>
    9488:	ldr	x0, [sp, #24]
    948c:	ldr	x0, [x0, #32]
    9490:	mov	x2, #0x0                   	// #0
    9494:	ldr	x1, [sp, #16]
    9498:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    949c:	str	x0, [sp, #40]
    94a0:	ldr	x0, [sp, #40]
    94a4:	cmp	x0, #0x0
    94a8:	b.eq	950c <PySequence_Fast@plt+0x743c>  // b.none
    94ac:	ldr	x0, [sp, #40]
    94b0:	ldr	x0, [x0, #8]
    94b4:	ldr	x0, [x0, #168]
    94b8:	and	x0, x0, #0x10000000
    94bc:	cmp	x0, #0x0
    94c0:	b.ne	950c <PySequence_Fast@plt+0x743c>  // b.any
    94c4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    94c8:	ldr	x0, [x0, #3976]
    94cc:	ldr	x3, [x0]
    94d0:	ldr	x0, [sp, #40]
    94d4:	ldr	x0, [x0, #8]
    94d8:	ldr	x0, [x0, #24]
    94dc:	mov	x2, x0
    94e0:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    94e4:	add	x1, x0, #0x108
    94e8:	mov	x0, x3
    94ec:	bl	2040 <PyErr_Format@plt>
    94f0:	ldr	x2, [sp, #40]
    94f4:	mov	w1, #0x5a8                 	// #1448
    94f8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    94fc:	add	x0, x0, #0xb60
    9500:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9504:	mov	x0, #0x0                   	// #0
    9508:	b	9510 <PySequence_Fast@plt+0x7440>
    950c:	ldr	x0, [sp, #40]
    9510:	ldp	x29, x30, [sp], #48
    9514:	ret
    9518:	stp	x29, x30, [sp, #-48]!
    951c:	mov	x29, sp
    9520:	str	x0, [sp, #24]
    9524:	str	x1, [sp, #16]
    9528:	ldr	x1, [sp, #16]
    952c:	ldr	x0, [sp, #24]
    9530:	bl	1e70 <_PyAccu_Accumulate@plt>
    9534:	str	w0, [sp, #44]
    9538:	ldr	x2, [sp, #16]
    953c:	mov	w1, #0x5b3                 	// #1459
    9540:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9544:	add	x0, x0, #0xb60
    9548:	bl	2298 <PySequence_Fast@plt+0x1c8>
    954c:	ldr	w0, [sp, #44]
    9550:	ldp	x29, x30, [sp], #48
    9554:	ret
    9558:	stp	x29, x30, [sp, #-112]!
    955c:	mov	x29, sp
    9560:	str	x0, [sp, #40]
    9564:	str	x1, [sp, #32]
    9568:	str	x2, [sp, #24]
    956c:	str	x3, [sp, #16]
    9570:	ldr	x1, [sp, #24]
    9574:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9578:	ldr	x0, [x0, #4016]
    957c:	cmp	x1, x0
    9580:	b.eq	95ac <PySequence_Fast@plt+0x74dc>  // b.none
    9584:	ldr	x1, [sp, #24]
    9588:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    958c:	ldr	x0, [x0, #4024]
    9590:	cmp	x1, x0
    9594:	b.eq	95ac <PySequence_Fast@plt+0x74dc>  // b.none
    9598:	ldr	x1, [sp, #24]
    959c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    95a0:	ldr	x0, [x0, #3992]
    95a4:	cmp	x1, x0
    95a8:	b.ne	95dc <PySequence_Fast@plt+0x750c>  // b.any
    95ac:	ldr	x0, [sp, #24]
    95b0:	bl	9224 <PySequence_Fast@plt+0x7154>
    95b4:	str	x0, [sp, #48]
    95b8:	ldr	x0, [sp, #48]
    95bc:	cmp	x0, #0x0
    95c0:	b.ne	95cc <PySequence_Fast@plt+0x74fc>  // b.any
    95c4:	mov	w0, #0xffffffff            	// #-1
    95c8:	b	9b24 <PySequence_Fast@plt+0x7a54>
    95cc:	ldr	x1, [sp, #48]
    95d0:	ldr	x0, [sp, #32]
    95d4:	bl	9518 <PySequence_Fast@plt+0x7448>
    95d8:	b	9b24 <PySequence_Fast@plt+0x7a54>
    95dc:	ldr	x0, [sp, #24]
    95e0:	ldr	x0, [x0, #8]
    95e4:	ldr	x0, [x0, #168]
    95e8:	and	x0, x0, #0x10000000
    95ec:	cmp	x0, #0x0
    95f0:	b.eq	9628 <PySequence_Fast@plt+0x7558>  // b.none
    95f4:	ldr	x1, [sp, #24]
    95f8:	ldr	x0, [sp, #40]
    95fc:	bl	9450 <PySequence_Fast@plt+0x7380>
    9600:	str	x0, [sp, #56]
    9604:	ldr	x0, [sp, #56]
    9608:	cmp	x0, #0x0
    960c:	b.ne	9618 <PySequence_Fast@plt+0x7548>  // b.any
    9610:	mov	w0, #0xffffffff            	// #-1
    9614:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9618:	ldr	x1, [sp, #56]
    961c:	ldr	x0, [sp, #32]
    9620:	bl	9518 <PySequence_Fast@plt+0x7448>
    9624:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9628:	ldr	x0, [sp, #24]
    962c:	ldr	x0, [x0, #8]
    9630:	ldr	x0, [x0, #168]
    9634:	and	x0, x0, #0x1000000
    9638:	cmp	x0, #0x0
    963c:	b.eq	967c <PySequence_Fast@plt+0x75ac>  // b.none
    9640:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9644:	ldr	x0, [x0, #4032]
    9648:	ldr	x1, [x0, #88]
    964c:	ldr	x0, [sp, #24]
    9650:	blr	x1
    9654:	str	x0, [sp, #64]
    9658:	ldr	x0, [sp, #64]
    965c:	cmp	x0, #0x0
    9660:	b.ne	966c <PySequence_Fast@plt+0x759c>  // b.any
    9664:	mov	w0, #0xffffffff            	// #-1
    9668:	b	9b24 <PySequence_Fast@plt+0x7a54>
    966c:	ldr	x1, [sp, #64]
    9670:	ldr	x0, [sp, #32]
    9674:	bl	9518 <PySequence_Fast@plt+0x7448>
    9678:	b	9b24 <PySequence_Fast@plt+0x7a54>
    967c:	ldr	x0, [sp, #24]
    9680:	ldr	x1, [x0, #8]
    9684:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9688:	ldr	x0, [x0, #3952]
    968c:	cmp	x1, x0
    9690:	b.eq	96b4 <PySequence_Fast@plt+0x75e4>  // b.none
    9694:	ldr	x0, [sp, #24]
    9698:	ldr	x2, [x0, #8]
    969c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    96a0:	ldr	x1, [x0, #3952]
    96a4:	mov	x0, x2
    96a8:	bl	2030 <PyType_IsSubtype@plt>
    96ac:	cmp	w0, #0x0
    96b0:	b.eq	96e8 <PySequence_Fast@plt+0x7618>  // b.none
    96b4:	ldr	x1, [sp, #24]
    96b8:	ldr	x0, [sp, #40]
    96bc:	bl	9384 <PySequence_Fast@plt+0x72b4>
    96c0:	str	x0, [sp, #72]
    96c4:	ldr	x0, [sp, #72]
    96c8:	cmp	x0, #0x0
    96cc:	b.ne	96d8 <PySequence_Fast@plt+0x7608>  // b.any
    96d0:	mov	w0, #0xffffffff            	// #-1
    96d4:	b	9b24 <PySequence_Fast@plt+0x7a54>
    96d8:	ldr	x1, [sp, #72]
    96dc:	ldr	x0, [sp, #32]
    96e0:	bl	9518 <PySequence_Fast@plt+0x7448>
    96e4:	b	9b24 <PySequence_Fast@plt+0x7a54>
    96e8:	ldr	x0, [sp, #24]
    96ec:	ldr	x0, [x0, #8]
    96f0:	ldr	x0, [x0, #168]
    96f4:	and	x0, x0, #0x2000000
    96f8:	cmp	x0, #0x0
    96fc:	b.ne	9718 <PySequence_Fast@plt+0x7648>  // b.any
    9700:	ldr	x0, [sp, #24]
    9704:	ldr	x0, [x0, #8]
    9708:	ldr	x0, [x0, #168]
    970c:	and	x0, x0, #0x4000000
    9710:	cmp	x0, #0x0
    9714:	b.eq	97e4 <PySequence_Fast@plt+0x7714>  // b.none
    9718:	bl	1f20 <PyThreadState_Get@plt>
    971c:	ldr	w1, [x0, #32]
    9720:	add	w1, w1, #0x1
    9724:	str	w1, [x0, #32]
    9728:	ldr	w1, [x0, #32]
    972c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9730:	ldr	x0, [x0, #3984]
    9734:	ldr	w0, [x0]
    9738:	cmp	w1, w0
    973c:	b.le	975c <PySequence_Fast@plt+0x768c>
    9740:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9744:	add	x0, x0, #0x138
    9748:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    974c:	cmp	w0, #0x0
    9750:	b.eq	975c <PySequence_Fast@plt+0x768c>  // b.none
    9754:	mov	w0, #0xffffffff            	// #-1
    9758:	b	9b24 <PySequence_Fast@plt+0x7a54>
    975c:	ldr	x3, [sp, #16]
    9760:	ldr	x2, [sp, #24]
    9764:	ldr	x1, [sp, #32]
    9768:	ldr	x0, [sp, #40]
    976c:	bl	a1e8 <PySequence_Fast@plt+0x8118>
    9770:	str	w0, [sp, #84]
    9774:	bl	1f20 <PyThreadState_Get@plt>
    9778:	ldr	w1, [x0, #32]
    977c:	sub	w1, w1, #0x1
    9780:	str	w1, [x0, #32]
    9784:	ldr	w2, [x0, #32]
    9788:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    978c:	ldr	x0, [x0, #3984]
    9790:	ldr	w0, [x0]
    9794:	cmp	w0, #0xc8
    9798:	b.le	97b0 <PySequence_Fast@plt+0x76e0>
    979c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    97a0:	ldr	x0, [x0, #3984]
    97a4:	ldr	w0, [x0]
    97a8:	sub	w0, w0, #0x32
    97ac:	b	97cc <PySequence_Fast@plt+0x76fc>
    97b0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    97b4:	ldr	x0, [x0, #3984]
    97b8:	ldr	w0, [x0]
    97bc:	asr	w1, w0, #2
    97c0:	mov	w0, w1
    97c4:	lsl	w0, w0, #1
    97c8:	add	w0, w0, w1
    97cc:	cmp	w0, w2
    97d0:	b.le	97dc <PySequence_Fast@plt+0x770c>
    97d4:	bl	1f20 <PyThreadState_Get@plt>
    97d8:	strb	wzr, [x0, #36]
    97dc:	ldr	w0, [sp, #84]
    97e0:	b	9b24 <PySequence_Fast@plt+0x7a54>
    97e4:	ldr	x0, [sp, #24]
    97e8:	ldr	x0, [x0, #8]
    97ec:	ldr	x0, [x0, #168]
    97f0:	and	x0, x0, #0x20000000
    97f4:	cmp	x0, #0x0
    97f8:	b.eq	98c8 <PySequence_Fast@plt+0x77f8>  // b.none
    97fc:	bl	1f20 <PyThreadState_Get@plt>
    9800:	ldr	w1, [x0, #32]
    9804:	add	w1, w1, #0x1
    9808:	str	w1, [x0, #32]
    980c:	ldr	w1, [x0, #32]
    9810:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9814:	ldr	x0, [x0, #3984]
    9818:	ldr	w0, [x0]
    981c:	cmp	w1, w0
    9820:	b.le	9840 <PySequence_Fast@plt+0x7770>
    9824:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9828:	add	x0, x0, #0x138
    982c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    9830:	cmp	w0, #0x0
    9834:	b.eq	9840 <PySequence_Fast@plt+0x7770>  // b.none
    9838:	mov	w0, #0xffffffff            	// #-1
    983c:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9840:	ldr	x3, [sp, #16]
    9844:	ldr	x2, [sp, #24]
    9848:	ldr	x1, [sp, #32]
    984c:	ldr	x0, [sp, #40]
    9850:	bl	9b2c <PySequence_Fast@plt+0x7a5c>
    9854:	str	w0, [sp, #84]
    9858:	bl	1f20 <PyThreadState_Get@plt>
    985c:	ldr	w1, [x0, #32]
    9860:	sub	w1, w1, #0x1
    9864:	str	w1, [x0, #32]
    9868:	ldr	w2, [x0, #32]
    986c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9870:	ldr	x0, [x0, #3984]
    9874:	ldr	w0, [x0]
    9878:	cmp	w0, #0xc8
    987c:	b.le	9894 <PySequence_Fast@plt+0x77c4>
    9880:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9884:	ldr	x0, [x0, #3984]
    9888:	ldr	w0, [x0]
    988c:	sub	w0, w0, #0x32
    9890:	b	98b0 <PySequence_Fast@plt+0x77e0>
    9894:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9898:	ldr	x0, [x0, #3984]
    989c:	ldr	w0, [x0]
    98a0:	asr	w1, w0, #2
    98a4:	mov	w0, w1
    98a8:	lsl	w0, w0, #1
    98ac:	add	w0, w0, w1
    98b0:	cmp	w0, w2
    98b4:	b.le	98c0 <PySequence_Fast@plt+0x77f0>
    98b8:	bl	1f20 <PyThreadState_Get@plt>
    98bc:	strb	wzr, [x0, #36]
    98c0:	ldr	w0, [sp, #84]
    98c4:	b	9b24 <PySequence_Fast@plt+0x7a54>
    98c8:	str	xzr, [sp, #104]
    98cc:	ldr	x0, [sp, #40]
    98d0:	ldr	x1, [x0, #16]
    98d4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    98d8:	ldr	x0, [x0, #4016]
    98dc:	cmp	x1, x0
    98e0:	b.eq	99a0 <PySequence_Fast@plt+0x78d0>  // b.none
    98e4:	ldr	x0, [sp, #24]
    98e8:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    98ec:	str	x0, [sp, #104]
    98f0:	ldr	x0, [sp, #104]
    98f4:	cmp	x0, #0x0
    98f8:	b.ne	9904 <PySequence_Fast@plt+0x7834>  // b.any
    98fc:	mov	w0, #0xffffffff            	// #-1
    9900:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9904:	ldr	x0, [sp, #40]
    9908:	ldr	x0, [x0, #16]
    990c:	ldr	x1, [sp, #104]
    9910:	bl	1e10 <PyDict_Contains@plt>
    9914:	str	w0, [sp, #100]
    9918:	ldr	w0, [sp, #100]
    991c:	cmp	w0, #0x0
    9920:	b.eq	9968 <PySequence_Fast@plt+0x7898>  // b.none
    9924:	ldr	w0, [sp, #100]
    9928:	cmn	w0, #0x1
    992c:	b.eq	994c <PySequence_Fast@plt+0x787c>  // b.none
    9930:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9934:	ldr	x0, [x0, #3968]
    9938:	ldr	x2, [x0]
    993c:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9940:	add	x1, x0, #0x158
    9944:	mov	x0, x2
    9948:	bl	1e60 <PyErr_SetString@plt>
    994c:	ldr	x2, [sp, #104]
    9950:	mov	w1, #0x5f1                 	// #1521
    9954:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9958:	add	x0, x0, #0xb60
    995c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9960:	mov	w0, #0xffffffff            	// #-1
    9964:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9968:	ldr	x0, [sp, #40]
    996c:	ldr	x0, [x0, #16]
    9970:	ldr	x2, [sp, #24]
    9974:	ldr	x1, [sp, #104]
    9978:	bl	2020 <PyDict_SetItem@plt>
    997c:	cmp	w0, #0x0
    9980:	b.eq	99a0 <PySequence_Fast@plt+0x78d0>  // b.none
    9984:	ldr	x2, [sp, #104]
    9988:	mov	w1, #0x5f5                 	// #1525
    998c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9990:	add	x0, x0, #0xb60
    9994:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9998:	mov	w0, #0xffffffff            	// #-1
    999c:	b	9b24 <PySequence_Fast@plt+0x7a54>
    99a0:	ldr	x0, [sp, #40]
    99a4:	ldr	x0, [x0, #24]
    99a8:	mov	x2, #0x0                   	// #0
    99ac:	ldr	x1, [sp, #24]
    99b0:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    99b4:	str	x0, [sp, #88]
    99b8:	ldr	x0, [sp, #88]
    99bc:	cmp	x0, #0x0
    99c0:	b.ne	99d4 <PySequence_Fast@plt+0x7904>  // b.any
    99c4:	ldr	x0, [sp, #104]
    99c8:	bl	2310 <PySequence_Fast@plt+0x240>
    99cc:	mov	w0, #0xffffffff            	// #-1
    99d0:	b	9b24 <PySequence_Fast@plt+0x7a54>
    99d4:	bl	1f20 <PyThreadState_Get@plt>
    99d8:	ldr	w1, [x0, #32]
    99dc:	add	w1, w1, #0x1
    99e0:	str	w1, [x0, #32]
    99e4:	ldr	w1, [x0, #32]
    99e8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    99ec:	ldr	x0, [x0, #3984]
    99f0:	ldr	w0, [x0]
    99f4:	cmp	w1, w0
    99f8:	b.le	9a34 <PySequence_Fast@plt+0x7964>
    99fc:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9a00:	add	x0, x0, #0x138
    9a04:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    9a08:	cmp	w0, #0x0
    9a0c:	b.eq	9a34 <PySequence_Fast@plt+0x7964>  // b.none
    9a10:	ldr	x2, [sp, #88]
    9a14:	mov	w1, #0x600                 	// #1536
    9a18:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9a1c:	add	x0, x0, #0xb60
    9a20:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9a24:	ldr	x0, [sp, #104]
    9a28:	bl	2310 <PySequence_Fast@plt+0x240>
    9a2c:	mov	w0, #0xffffffff            	// #-1
    9a30:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9a34:	ldr	x3, [sp, #16]
    9a38:	ldr	x2, [sp, #88]
    9a3c:	ldr	x1, [sp, #32]
    9a40:	ldr	x0, [sp, #40]
    9a44:	bl	9558 <PySequence_Fast@plt+0x7488>
    9a48:	str	w0, [sp, #84]
    9a4c:	bl	1f20 <PyThreadState_Get@plt>
    9a50:	ldr	w1, [x0, #32]
    9a54:	sub	w1, w1, #0x1
    9a58:	str	w1, [x0, #32]
    9a5c:	ldr	w2, [x0, #32]
    9a60:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9a64:	ldr	x0, [x0, #3984]
    9a68:	ldr	w0, [x0]
    9a6c:	cmp	w0, #0xc8
    9a70:	b.le	9a88 <PySequence_Fast@plt+0x79b8>
    9a74:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9a78:	ldr	x0, [x0, #3984]
    9a7c:	ldr	w0, [x0]
    9a80:	sub	w0, w0, #0x32
    9a84:	b	9aa4 <PySequence_Fast@plt+0x79d4>
    9a88:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9a8c:	ldr	x0, [x0, #3984]
    9a90:	ldr	w0, [x0]
    9a94:	asr	w1, w0, #2
    9a98:	mov	w0, w1
    9a9c:	lsl	w0, w0, #1
    9aa0:	add	w0, w0, w1
    9aa4:	cmp	w0, w2
    9aa8:	b.le	9ab4 <PySequence_Fast@plt+0x79e4>
    9aac:	bl	1f20 <PyThreadState_Get@plt>
    9ab0:	strb	wzr, [x0, #36]
    9ab4:	ldr	x2, [sp, #88]
    9ab8:	mov	w1, #0x607                 	// #1543
    9abc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9ac0:	add	x0, x0, #0xb60
    9ac4:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9ac8:	ldr	w0, [sp, #84]
    9acc:	cmp	w0, #0x0
    9ad0:	b.eq	9ae4 <PySequence_Fast@plt+0x7a14>  // b.none
    9ad4:	ldr	x0, [sp, #104]
    9ad8:	bl	2310 <PySequence_Fast@plt+0x240>
    9adc:	mov	w0, #0xffffffff            	// #-1
    9ae0:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9ae4:	ldr	x0, [sp, #104]
    9ae8:	cmp	x0, #0x0
    9aec:	b.eq	9b20 <PySequence_Fast@plt+0x7a50>  // b.none
    9af0:	ldr	x0, [sp, #40]
    9af4:	ldr	x0, [x0, #16]
    9af8:	ldr	x1, [sp, #104]
    9afc:	bl	1f30 <PyDict_DelItem@plt>
    9b00:	cmp	w0, #0x0
    9b04:	b.eq	9b18 <PySequence_Fast@plt+0x7a48>  // b.none
    9b08:	ldr	x0, [sp, #104]
    9b0c:	bl	2310 <PySequence_Fast@plt+0x240>
    9b10:	mov	w0, #0xffffffff            	// #-1
    9b14:	b	9b24 <PySequence_Fast@plt+0x7a54>
    9b18:	ldr	x0, [sp, #104]
    9b1c:	bl	2310 <PySequence_Fast@plt+0x240>
    9b20:	ldr	w0, [sp, #84]
    9b24:	ldp	x29, x30, [sp], #112
    9b28:	ret
    9b2c:	stp	x29, x30, [sp, #-160]!
    9b30:	mov	x29, sp
    9b34:	str	x0, [sp, #40]
    9b38:	str	x1, [sp, #32]
    9b3c:	str	x2, [sp, #24]
    9b40:	str	x3, [sp, #16]
    9b44:	str	xzr, [sp, #152]
    9b48:	str	xzr, [sp, #144]
    9b4c:	str	xzr, [sp, #136]
    9b50:	str	xzr, [sp, #128]
    9b54:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9b58:	add	x0, x0, #0x918
    9b5c:	ldr	x0, [x0]
    9b60:	cmp	x0, #0x0
    9b64:	b.eq	9b90 <PySequence_Fast@plt+0x7ac0>  // b.none
    9b68:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9b6c:	add	x0, x0, #0x920
    9b70:	ldr	x0, [x0]
    9b74:	cmp	x0, #0x0
    9b78:	b.eq	9b90 <PySequence_Fast@plt+0x7ac0>  // b.none
    9b7c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9b80:	add	x0, x0, #0x928
    9b84:	ldr	x0, [x0]
    9b88:	cmp	x0, #0x0
    9b8c:	b.ne	9c28 <PySequence_Fast@plt+0x7b58>  // b.any
    9b90:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9b94:	add	x0, x0, #0x178
    9b98:	bl	2000 <PyUnicode_InternFromString@plt>
    9b9c:	mov	x1, x0
    9ba0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9ba4:	add	x0, x0, #0x918
    9ba8:	str	x1, [x0]
    9bac:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9bb0:	add	x0, x0, #0x180
    9bb4:	bl	2000 <PyUnicode_InternFromString@plt>
    9bb8:	mov	x1, x0
    9bbc:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9bc0:	add	x0, x0, #0x920
    9bc4:	str	x1, [x0]
    9bc8:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9bcc:	add	x0, x0, #0x188
    9bd0:	bl	2000 <PyUnicode_InternFromString@plt>
    9bd4:	mov	x1, x0
    9bd8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9bdc:	add	x0, x0, #0x928
    9be0:	str	x1, [x0]
    9be4:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9be8:	add	x0, x0, #0x918
    9bec:	ldr	x0, [x0]
    9bf0:	cmp	x0, #0x0
    9bf4:	b.eq	9c20 <PySequence_Fast@plt+0x7b50>  // b.none
    9bf8:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9bfc:	add	x0, x0, #0x920
    9c00:	ldr	x0, [x0]
    9c04:	cmp	x0, #0x0
    9c08:	b.eq	9c20 <PySequence_Fast@plt+0x7b50>  // b.none
    9c0c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9c10:	add	x0, x0, #0x928
    9c14:	ldr	x0, [x0]
    9c18:	cmp	x0, #0x0
    9c1c:	b.ne	9c28 <PySequence_Fast@plt+0x7b58>  // b.any
    9c20:	mov	w0, #0xffffffff            	// #-1
    9c24:	b	a1e0 <PySequence_Fast@plt+0x8110>
    9c28:	ldr	x0, [sp, #24]
    9c2c:	ldr	x0, [x0, #16]
    9c30:	cmp	x0, #0x0
    9c34:	b.ne	9c54 <PySequence_Fast@plt+0x7b84>  // b.any
    9c38:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9c3c:	add	x0, x0, #0x928
    9c40:	ldr	x0, [x0]
    9c44:	mov	x1, x0
    9c48:	ldr	x0, [sp, #32]
    9c4c:	bl	1e70 <_PyAccu_Accumulate@plt>
    9c50:	b	a1e0 <PySequence_Fast@plt+0x8110>
    9c54:	ldr	x0, [sp, #40]
    9c58:	ldr	x1, [x0, #16]
    9c5c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9c60:	ldr	x0, [x0, #4016]
    9c64:	cmp	x1, x0
    9c68:	b.eq	9cec <PySequence_Fast@plt+0x7c1c>  // b.none
    9c6c:	ldr	x0, [sp, #24]
    9c70:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    9c74:	str	x0, [sp, #144]
    9c78:	ldr	x0, [sp, #144]
    9c7c:	cmp	x0, #0x0
    9c80:	b.eq	a158 <PySequence_Fast@plt+0x8088>  // b.none
    9c84:	ldr	x0, [sp, #40]
    9c88:	ldr	x0, [x0, #16]
    9c8c:	ldr	x1, [sp, #144]
    9c90:	bl	1e10 <PyDict_Contains@plt>
    9c94:	str	w0, [sp, #116]
    9c98:	ldr	w0, [sp, #116]
    9c9c:	cmp	w0, #0x0
    9ca0:	b.eq	9cd0 <PySequence_Fast@plt+0x7c00>  // b.none
    9ca4:	ldr	w0, [sp, #116]
    9ca8:	cmn	w0, #0x1
    9cac:	b.eq	a160 <PySequence_Fast@plt+0x8090>  // b.none
    9cb0:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9cb4:	ldr	x0, [x0, #3968]
    9cb8:	ldr	x2, [x0]
    9cbc:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9cc0:	add	x1, x0, #0x158
    9cc4:	mov	x0, x2
    9cc8:	bl	1e60 <PyErr_SetString@plt>
    9ccc:	b	a160 <PySequence_Fast@plt+0x8090>
    9cd0:	ldr	x0, [sp, #40]
    9cd4:	ldr	x0, [x0, #16]
    9cd8:	ldr	x2, [sp, #24]
    9cdc:	ldr	x1, [sp, #144]
    9ce0:	bl	2020 <PyDict_SetItem@plt>
    9ce4:	cmp	w0, #0x0
    9ce8:	b.ne	a168 <PySequence_Fast@plt+0x8098>  // b.any
    9cec:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    9cf0:	add	x0, x0, #0x918
    9cf4:	ldr	x0, [x0]
    9cf8:	mov	x1, x0
    9cfc:	ldr	x0, [sp, #32]
    9d00:	bl	1e70 <_PyAccu_Accumulate@plt>
    9d04:	cmp	w0, #0x0
    9d08:	b.ne	a170 <PySequence_Fast@plt+0x80a0>  // b.any
    9d0c:	ldr	x0, [sp, #40]
    9d10:	ldr	x1, [x0, #40]
    9d14:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9d18:	ldr	x0, [x0, #4016]
    9d1c:	cmp	x1, x0
    9d20:	b.eq	9d30 <PySequence_Fast@plt+0x7c60>  // b.none
    9d24:	ldr	x0, [sp, #16]
    9d28:	add	x0, x0, #0x1
    9d2c:	str	x0, [sp, #16]
    9d30:	ldr	x0, [sp, #24]
    9d34:	bl	1d90 <PyMapping_Items@plt>
    9d38:	str	x0, [sp, #104]
    9d3c:	ldr	x0, [sp, #104]
    9d40:	cmp	x0, #0x0
    9d44:	b.eq	a178 <PySequence_Fast@plt+0x80a8>  // b.none
    9d48:	ldr	x0, [sp, #40]
    9d4c:	ldrb	w0, [x0, #64]
    9d50:	cmp	w0, #0x0
    9d54:	b.eq	9d80 <PySequence_Fast@plt+0x7cb0>  // b.none
    9d58:	ldr	x0, [sp, #104]
    9d5c:	bl	1f80 <PyList_Sort@plt>
    9d60:	cmp	w0, #0x0
    9d64:	b.ge	9d80 <PySequence_Fast@plt+0x7cb0>  // b.tcont
    9d68:	ldr	x2, [sp, #104]
    9d6c:	mov	w1, #0x651                 	// #1617
    9d70:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9d74:	add	x0, x0, #0xb60
    9d78:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9d7c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9d80:	ldr	x0, [sp, #104]
    9d84:	bl	1ff0 <PyObject_GetIter@plt>
    9d88:	str	x0, [sp, #136]
    9d8c:	ldr	x2, [sp, #104]
    9d90:	mov	w1, #0x655                 	// #1621
    9d94:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9d98:	add	x0, x0, #0xb60
    9d9c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9da0:	ldr	x0, [sp, #136]
    9da4:	cmp	x0, #0x0
    9da8:	b.eq	a180 <PySequence_Fast@plt+0x80b0>  // b.none
    9dac:	str	xzr, [sp, #120]
    9db0:	b	a090 <PySequence_Fast@plt+0x7fc0>
    9db4:	ldr	x0, [sp, #128]
    9db8:	ldr	x0, [x0, #8]
    9dbc:	ldr	x0, [x0, #168]
    9dc0:	and	x0, x0, #0x4000000
    9dc4:	cmp	x0, #0x0
    9dc8:	b.eq	9ddc <PySequence_Fast@plt+0x7d0c>  // b.none
    9dcc:	ldr	x0, [sp, #128]
    9dd0:	ldr	x0, [x0, #16]
    9dd4:	cmp	x0, #0x2
    9dd8:	b.eq	9dfc <PySequence_Fast@plt+0x7d2c>  // b.none
    9ddc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9de0:	ldr	x0, [x0, #3968]
    9de4:	ldr	x2, [x0]
    9de8:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9dec:	add	x1, x0, #0x190
    9df0:	mov	x0, x2
    9df4:	bl	1e60 <PyErr_SetString@plt>
    9df8:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9dfc:	ldr	x0, [sp, #128]
    9e00:	ldr	x0, [x0, #24]
    9e04:	str	x0, [sp, #80]
    9e08:	ldr	x0, [sp, #80]
    9e0c:	ldr	x0, [x0, #8]
    9e10:	ldr	x0, [x0, #168]
    9e14:	and	x0, x0, #0x10000000
    9e18:	cmp	x0, #0x0
    9e1c:	b.eq	9e34 <PySequence_Fast@plt+0x7d64>  // b.none
    9e20:	ldr	x0, [sp, #80]
    9e24:	bl	2270 <PySequence_Fast@plt+0x1a0>
    9e28:	ldr	x0, [sp, #80]
    9e2c:	str	x0, [sp, #152]
    9e30:	b	9f7c <PySequence_Fast@plt+0x7eac>
    9e34:	ldr	x0, [sp, #80]
    9e38:	ldr	x1, [x0, #8]
    9e3c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9e40:	ldr	x0, [x0, #3952]
    9e44:	cmp	x1, x0
    9e48:	b.eq	9e6c <PySequence_Fast@plt+0x7d9c>  // b.none
    9e4c:	ldr	x0, [sp, #80]
    9e50:	ldr	x2, [x0, #8]
    9e54:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9e58:	ldr	x1, [x0, #3952]
    9e5c:	mov	x0, x2
    9e60:	bl	2030 <PyType_IsSubtype@plt>
    9e64:	cmp	w0, #0x0
    9e68:	b.eq	9e8c <PySequence_Fast@plt+0x7dbc>  // b.none
    9e6c:	ldr	x1, [sp, #80]
    9e70:	ldr	x0, [sp, #40]
    9e74:	bl	9384 <PySequence_Fast@plt+0x72b4>
    9e78:	str	x0, [sp, #152]
    9e7c:	ldr	x0, [sp, #152]
    9e80:	cmp	x0, #0x0
    9e84:	b.ne	9f7c <PySequence_Fast@plt+0x7eac>  // b.any
    9e88:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9e8c:	ldr	x1, [sp, #80]
    9e90:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9e94:	ldr	x0, [x0, #4024]
    9e98:	cmp	x1, x0
    9e9c:	b.eq	9ec8 <PySequence_Fast@plt+0x7df8>  // b.none
    9ea0:	ldr	x1, [sp, #80]
    9ea4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9ea8:	ldr	x0, [x0, #3992]
    9eac:	cmp	x1, x0
    9eb0:	b.eq	9ec8 <PySequence_Fast@plt+0x7df8>  // b.none
    9eb4:	ldr	x1, [sp, #80]
    9eb8:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9ebc:	ldr	x0, [x0, #4016]
    9ec0:	cmp	x1, x0
    9ec4:	b.ne	9ee4 <PySequence_Fast@plt+0x7e14>  // b.any
    9ec8:	ldr	x0, [sp, #80]
    9ecc:	bl	9224 <PySequence_Fast@plt+0x7154>
    9ed0:	str	x0, [sp, #152]
    9ed4:	ldr	x0, [sp, #152]
    9ed8:	cmp	x0, #0x0
    9edc:	b.ne	9f7c <PySequence_Fast@plt+0x7eac>  // b.any
    9ee0:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9ee4:	ldr	x0, [sp, #80]
    9ee8:	ldr	x0, [x0, #8]
    9eec:	ldr	x0, [x0, #168]
    9ef0:	and	x0, x0, #0x1000000
    9ef4:	cmp	x0, #0x0
    9ef8:	b.eq	9f24 <PySequence_Fast@plt+0x7e54>  // b.none
    9efc:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9f00:	ldr	x0, [x0, #4032]
    9f04:	ldr	x1, [x0, #88]
    9f08:	ldr	x0, [sp, #80]
    9f0c:	blr	x1
    9f10:	str	x0, [sp, #152]
    9f14:	ldr	x0, [sp, #152]
    9f18:	cmp	x0, #0x0
    9f1c:	b.ne	9f7c <PySequence_Fast@plt+0x7eac>  // b.any
    9f20:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9f24:	ldr	x0, [sp, #40]
    9f28:	ldrb	w0, [x0, #65]
    9f2c:	cmp	w0, #0x0
    9f30:	b.eq	9f4c <PySequence_Fast@plt+0x7e7c>  // b.none
    9f34:	ldr	x2, [sp, #128]
    9f38:	mov	w1, #0x677                 	// #1655
    9f3c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9f40:	add	x0, x0, #0xb60
    9f44:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9f48:	b	a090 <PySequence_Fast@plt+0x7fc0>
    9f4c:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    9f50:	ldr	x0, [x0, #3976]
    9f54:	ldr	x3, [x0]
    9f58:	ldr	x0, [sp, #80]
    9f5c:	ldr	x0, [x0, #8]
    9f60:	ldr	x0, [x0, #24]
    9f64:	mov	x2, x0
    9f68:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    9f6c:	add	x1, x0, #0x1b0
    9f70:	mov	x0, x3
    9f74:	bl	2040 <PyErr_Format@plt>
    9f78:	b	a1bc <PySequence_Fast@plt+0x80ec>
    9f7c:	ldr	x0, [sp, #120]
    9f80:	cmp	x0, #0x0
    9f84:	b.eq	9fa4 <PySequence_Fast@plt+0x7ed4>  // b.none
    9f88:	ldr	x0, [sp, #40]
    9f8c:	ldr	x0, [x0, #56]
    9f90:	mov	x1, x0
    9f94:	ldr	x0, [sp, #32]
    9f98:	bl	1e70 <_PyAccu_Accumulate@plt>
    9f9c:	cmp	w0, #0x0
    9fa0:	b.ne	a188 <PySequence_Fast@plt+0x80b8>  // b.any
    9fa4:	ldr	x1, [sp, #152]
    9fa8:	ldr	x0, [sp, #40]
    9fac:	bl	9450 <PySequence_Fast@plt+0x7380>
    9fb0:	str	x0, [sp, #72]
    9fb4:	ldr	x0, [sp, #152]
    9fb8:	str	x0, [sp, #64]
    9fbc:	ldr	x0, [sp, #64]
    9fc0:	cmp	x0, #0x0
    9fc4:	b.eq	9fe0 <PySequence_Fast@plt+0x7f10>  // b.none
    9fc8:	str	xzr, [sp, #152]
    9fcc:	ldr	x2, [sp, #64]
    9fd0:	mov	w1, #0x687                 	// #1671
    9fd4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    9fd8:	add	x0, x0, #0xb60
    9fdc:	bl	2298 <PySequence_Fast@plt+0x1c8>
    9fe0:	ldr	x0, [sp, #72]
    9fe4:	cmp	x0, #0x0
    9fe8:	b.eq	a190 <PySequence_Fast@plt+0x80c0>  // b.none
    9fec:	ldr	x1, [sp, #72]
    9ff0:	ldr	x0, [sp, #32]
    9ff4:	bl	1e70 <_PyAccu_Accumulate@plt>
    9ff8:	cmp	w0, #0x0
    9ffc:	b.eq	a018 <PySequence_Fast@plt+0x7f48>  // b.none
    a000:	ldr	x2, [sp, #72]
    a004:	mov	w1, #0x68b                 	// #1675
    a008:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a00c:	add	x0, x0, #0xb60
    a010:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a014:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a018:	ldr	x2, [sp, #72]
    a01c:	mov	w1, #0x68e                 	// #1678
    a020:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a024:	add	x0, x0, #0xb60
    a028:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a02c:	ldr	x0, [sp, #40]
    a030:	ldr	x0, [x0, #48]
    a034:	mov	x1, x0
    a038:	ldr	x0, [sp, #32]
    a03c:	bl	1e70 <_PyAccu_Accumulate@plt>
    a040:	cmp	w0, #0x0
    a044:	b.ne	a198 <PySequence_Fast@plt+0x80c8>  // b.any
    a048:	ldr	x0, [sp, #128]
    a04c:	ldr	x0, [x0, #32]
    a050:	str	x0, [sp, #56]
    a054:	ldr	x3, [sp, #16]
    a058:	ldr	x2, [sp, #56]
    a05c:	ldr	x1, [sp, #32]
    a060:	ldr	x0, [sp, #40]
    a064:	bl	9558 <PySequence_Fast@plt+0x7488>
    a068:	cmp	w0, #0x0
    a06c:	b.ne	a1a0 <PySequence_Fast@plt+0x80d0>  // b.any
    a070:	ldr	x0, [sp, #120]
    a074:	add	x0, x0, #0x1
    a078:	str	x0, [sp, #120]
    a07c:	ldr	x2, [sp, #128]
    a080:	mov	w1, #0x696                 	// #1686
    a084:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a088:	add	x0, x0, #0xb60
    a08c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a090:	ldr	x0, [sp, #136]
    a094:	bl	1e50 <PyIter_Next@plt>
    a098:	str	x0, [sp, #128]
    a09c:	ldr	x0, [sp, #128]
    a0a0:	cmp	x0, #0x0
    a0a4:	b.ne	9db4 <PySequence_Fast@plt+0x7ce4>  // b.any
    a0a8:	bl	1f40 <PyErr_Occurred@plt>
    a0ac:	cmp	x0, #0x0
    a0b0:	b.ne	a1a8 <PySequence_Fast@plt+0x80d8>  // b.any
    a0b4:	ldr	x0, [sp, #136]
    a0b8:	str	x0, [sp, #96]
    a0bc:	ldr	x0, [sp, #96]
    a0c0:	cmp	x0, #0x0
    a0c4:	b.eq	a0e0 <PySequence_Fast@plt+0x8010>  // b.none
    a0c8:	str	xzr, [sp, #136]
    a0cc:	ldr	x2, [sp, #96]
    a0d0:	mov	w1, #0x69a                 	// #1690
    a0d4:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a0d8:	add	x0, x0, #0xb60
    a0dc:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a0e0:	ldr	x0, [sp, #144]
    a0e4:	cmp	x0, #0x0
    a0e8:	b.eq	a130 <PySequence_Fast@plt+0x8060>  // b.none
    a0ec:	ldr	x0, [sp, #40]
    a0f0:	ldr	x0, [x0, #16]
    a0f4:	ldr	x1, [sp, #144]
    a0f8:	bl	1f30 <PyDict_DelItem@plt>
    a0fc:	cmp	w0, #0x0
    a100:	b.ne	a1b0 <PySequence_Fast@plt+0x80e0>  // b.any
    a104:	ldr	x0, [sp, #144]
    a108:	str	x0, [sp, #88]
    a10c:	ldr	x0, [sp, #88]
    a110:	cmp	x0, #0x0
    a114:	b.eq	a130 <PySequence_Fast@plt+0x8060>  // b.none
    a118:	str	xzr, [sp, #144]
    a11c:	ldr	x2, [sp, #88]
    a120:	mov	w1, #0x69f                 	// #1695
    a124:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a128:	add	x0, x0, #0xb60
    a12c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a130:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a134:	add	x0, x0, #0x920
    a138:	ldr	x0, [x0]
    a13c:	mov	x1, x0
    a140:	ldr	x0, [sp, #32]
    a144:	bl	1e70 <_PyAccu_Accumulate@plt>
    a148:	cmp	w0, #0x0
    a14c:	b.ne	a1b8 <PySequence_Fast@plt+0x80e8>  // b.any
    a150:	mov	w0, #0x0                   	// #0
    a154:	b	a1e0 <PySequence_Fast@plt+0x8110>
    a158:	nop
    a15c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a160:	nop
    a164:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a168:	nop
    a16c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a170:	nop
    a174:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a178:	nop
    a17c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a180:	nop
    a184:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a188:	nop
    a18c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a190:	nop
    a194:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a198:	nop
    a19c:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a1a0:	nop
    a1a4:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a1a8:	nop
    a1ac:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a1b0:	nop
    a1b4:	b	a1bc <PySequence_Fast@plt+0x80ec>
    a1b8:	nop
    a1bc:	ldr	x0, [sp, #136]
    a1c0:	bl	2310 <PySequence_Fast@plt+0x240>
    a1c4:	ldr	x0, [sp, #128]
    a1c8:	bl	2310 <PySequence_Fast@plt+0x240>
    a1cc:	ldr	x0, [sp, #152]
    a1d0:	bl	2310 <PySequence_Fast@plt+0x240>
    a1d4:	ldr	x0, [sp, #144]
    a1d8:	bl	2310 <PySequence_Fast@plt+0x240>
    a1dc:	mov	w0, #0xffffffff            	// #-1
    a1e0:	ldp	x29, x30, [sp], #160
    a1e4:	ret
    a1e8:	stp	x29, x30, [sp, #-96]!
    a1ec:	mov	x29, sp
    a1f0:	str	x0, [sp, #40]
    a1f4:	str	x1, [sp, #32]
    a1f8:	str	x2, [sp, #24]
    a1fc:	str	x3, [sp, #16]
    a200:	str	xzr, [sp, #88]
    a204:	str	xzr, [sp, #72]
    a208:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a20c:	add	x0, x0, #0x930
    a210:	ldr	x0, [x0]
    a214:	cmp	x0, #0x0
    a218:	b.eq	a244 <PySequence_Fast@plt+0x8174>  // b.none
    a21c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a220:	add	x0, x0, #0x938
    a224:	ldr	x0, [x0]
    a228:	cmp	x0, #0x0
    a22c:	b.eq	a244 <PySequence_Fast@plt+0x8174>  // b.none
    a230:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a234:	add	x0, x0, #0x940
    a238:	ldr	x0, [x0]
    a23c:	cmp	x0, #0x0
    a240:	b.ne	a2dc <PySequence_Fast@plt+0x820c>  // b.any
    a244:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a248:	add	x0, x0, #0x1e8
    a24c:	bl	2000 <PyUnicode_InternFromString@plt>
    a250:	mov	x1, x0
    a254:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a258:	add	x0, x0, #0x930
    a25c:	str	x1, [x0]
    a260:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a264:	add	x0, x0, #0x1f0
    a268:	bl	2000 <PyUnicode_InternFromString@plt>
    a26c:	mov	x1, x0
    a270:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a274:	add	x0, x0, #0x938
    a278:	str	x1, [x0]
    a27c:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a280:	add	x0, x0, #0x1f8
    a284:	bl	2000 <PyUnicode_InternFromString@plt>
    a288:	mov	x1, x0
    a28c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a290:	add	x0, x0, #0x940
    a294:	str	x1, [x0]
    a298:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a29c:	add	x0, x0, #0x930
    a2a0:	ldr	x0, [x0]
    a2a4:	cmp	x0, #0x0
    a2a8:	b.eq	a2d4 <PySequence_Fast@plt+0x8204>  // b.none
    a2ac:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a2b0:	add	x0, x0, #0x938
    a2b4:	ldr	x0, [x0]
    a2b8:	cmp	x0, #0x0
    a2bc:	b.eq	a2d4 <PySequence_Fast@plt+0x8204>  // b.none
    a2c0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a2c4:	add	x0, x0, #0x940
    a2c8:	ldr	x0, [x0]
    a2cc:	cmp	x0, #0x0
    a2d0:	b.ne	a2dc <PySequence_Fast@plt+0x820c>  // b.any
    a2d4:	mov	w0, #0xffffffff            	// #-1
    a2d8:	b	a5c8 <PySequence_Fast@plt+0x84f8>
    a2dc:	str	xzr, [sp, #88]
    a2e0:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a2e4:	add	x1, x0, #0x200
    a2e8:	ldr	x0, [sp, #24]
    a2ec:	bl	20d0 <PySequence_Fast@plt>
    a2f0:	str	x0, [sp, #72]
    a2f4:	ldr	x0, [sp, #72]
    a2f8:	cmp	x0, #0x0
    a2fc:	b.ne	a308 <PySequence_Fast@plt+0x8238>  // b.any
    a300:	mov	w0, #0xffffffff            	// #-1
    a304:	b	a5c8 <PySequence_Fast@plt+0x84f8>
    a308:	ldr	x0, [sp, #72]
    a30c:	ldr	x0, [x0, #16]
    a310:	cmp	x0, #0x0
    a314:	b.ne	a348 <PySequence_Fast@plt+0x8278>  // b.any
    a318:	ldr	x2, [sp, #72]
    a31c:	mov	w1, #0x6cc                 	// #1740
    a320:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a324:	add	x0, x0, #0xb60
    a328:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a32c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a330:	add	x0, x0, #0x940
    a334:	ldr	x0, [x0]
    a338:	mov	x1, x0
    a33c:	ldr	x0, [sp, #32]
    a340:	bl	1e70 <_PyAccu_Accumulate@plt>
    a344:	b	a5c8 <PySequence_Fast@plt+0x84f8>
    a348:	ldr	x0, [sp, #40]
    a34c:	ldr	x1, [x0, #16]
    a350:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    a354:	ldr	x0, [x0, #4016]
    a358:	cmp	x1, x0
    a35c:	b.eq	a3e0 <PySequence_Fast@plt+0x8310>  // b.none
    a360:	ldr	x0, [sp, #24]
    a364:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    a368:	str	x0, [sp, #88]
    a36c:	ldr	x0, [sp, #88]
    a370:	cmp	x0, #0x0
    a374:	b.eq	a56c <PySequence_Fast@plt+0x849c>  // b.none
    a378:	ldr	x0, [sp, #40]
    a37c:	ldr	x0, [x0, #16]
    a380:	ldr	x1, [sp, #88]
    a384:	bl	1e10 <PyDict_Contains@plt>
    a388:	str	w0, [sp, #68]
    a38c:	ldr	w0, [sp, #68]
    a390:	cmp	w0, #0x0
    a394:	b.eq	a3c4 <PySequence_Fast@plt+0x82f4>  // b.none
    a398:	ldr	w0, [sp, #68]
    a39c:	cmn	w0, #0x1
    a3a0:	b.eq	a574 <PySequence_Fast@plt+0x84a4>  // b.none
    a3a4:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    a3a8:	ldr	x0, [x0, #3968]
    a3ac:	ldr	x2, [x0]
    a3b0:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a3b4:	add	x1, x0, #0x158
    a3b8:	mov	x0, x2
    a3bc:	bl	1e60 <PyErr_SetString@plt>
    a3c0:	b	a574 <PySequence_Fast@plt+0x84a4>
    a3c4:	ldr	x0, [sp, #40]
    a3c8:	ldr	x0, [x0, #16]
    a3cc:	ldr	x2, [sp, #24]
    a3d0:	ldr	x1, [sp, #88]
    a3d4:	bl	2020 <PyDict_SetItem@plt>
    a3d8:	cmp	w0, #0x0
    a3dc:	b.ne	a57c <PySequence_Fast@plt+0x84ac>  // b.any
    a3e0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a3e4:	add	x0, x0, #0x930
    a3e8:	ldr	x0, [x0]
    a3ec:	mov	x1, x0
    a3f0:	ldr	x0, [sp, #32]
    a3f4:	bl	1e70 <_PyAccu_Accumulate@plt>
    a3f8:	cmp	w0, #0x0
    a3fc:	b.ne	a584 <PySequence_Fast@plt+0x84b4>  // b.any
    a400:	ldr	x0, [sp, #40]
    a404:	ldr	x1, [x0, #40]
    a408:	adrp	x0, 1b000 <PyInit__json@@Base+0x1070c>
    a40c:	ldr	x0, [x0, #4016]
    a410:	cmp	x1, x0
    a414:	b.eq	a424 <PySequence_Fast@plt+0x8354>  // b.none
    a418:	ldr	x0, [sp, #16]
    a41c:	add	x0, x0, #0x1
    a420:	str	x0, [sp, #16]
    a424:	str	xzr, [sp, #80]
    a428:	b	a4cc <PySequence_Fast@plt+0x83fc>
    a42c:	ldr	x0, [sp, #72]
    a430:	ldr	x0, [x0, #8]
    a434:	ldr	x0, [x0, #168]
    a438:	and	x0, x0, #0x2000000
    a43c:	cmp	x0, #0x0
    a440:	b.eq	a460 <PySequence_Fast@plt+0x8390>  // b.none
    a444:	ldr	x0, [sp, #72]
    a448:	ldr	x1, [x0, #24]
    a44c:	ldr	x0, [sp, #80]
    a450:	lsl	x0, x0, #3
    a454:	add	x0, x1, x0
    a458:	ldr	x0, [x0]
    a45c:	b	a478 <PySequence_Fast@plt+0x83a8>
    a460:	ldr	x1, [sp, #72]
    a464:	ldr	x0, [sp, #80]
    a468:	add	x0, x0, #0x2
    a46c:	lsl	x0, x0, #3
    a470:	add	x0, x1, x0
    a474:	ldr	x0, [x0, #8]
    a478:	str	x0, [sp, #48]
    a47c:	ldr	x0, [sp, #80]
    a480:	cmp	x0, #0x0
    a484:	b.eq	a4a4 <PySequence_Fast@plt+0x83d4>  // b.none
    a488:	ldr	x0, [sp, #40]
    a48c:	ldr	x0, [x0, #56]
    a490:	mov	x1, x0
    a494:	ldr	x0, [sp, #32]
    a498:	bl	1e70 <_PyAccu_Accumulate@plt>
    a49c:	cmp	w0, #0x0
    a4a0:	b.ne	a58c <PySequence_Fast@plt+0x84bc>  // b.any
    a4a4:	ldr	x3, [sp, #16]
    a4a8:	ldr	x2, [sp, #48]
    a4ac:	ldr	x1, [sp, #32]
    a4b0:	ldr	x0, [sp, #40]
    a4b4:	bl	9558 <PySequence_Fast@plt+0x7488>
    a4b8:	cmp	w0, #0x0
    a4bc:	b.ne	a594 <PySequence_Fast@plt+0x84c4>  // b.any
    a4c0:	ldr	x0, [sp, #80]
    a4c4:	add	x0, x0, #0x1
    a4c8:	str	x0, [sp, #80]
    a4cc:	ldr	x0, [sp, #72]
    a4d0:	ldr	x0, [x0, #16]
    a4d4:	ldr	x1, [sp, #80]
    a4d8:	cmp	x1, x0
    a4dc:	b.lt	a42c <PySequence_Fast@plt+0x835c>  // b.tstop
    a4e0:	ldr	x0, [sp, #88]
    a4e4:	cmp	x0, #0x0
    a4e8:	b.eq	a530 <PySequence_Fast@plt+0x8460>  // b.none
    a4ec:	ldr	x0, [sp, #40]
    a4f0:	ldr	x0, [x0, #16]
    a4f4:	ldr	x1, [sp, #88]
    a4f8:	bl	1f30 <PyDict_DelItem@plt>
    a4fc:	cmp	w0, #0x0
    a500:	b.ne	a59c <PySequence_Fast@plt+0x84cc>  // b.any
    a504:	ldr	x0, [sp, #88]
    a508:	str	x0, [sp, #56]
    a50c:	ldr	x0, [sp, #56]
    a510:	cmp	x0, #0x0
    a514:	b.eq	a530 <PySequence_Fast@plt+0x8460>  // b.none
    a518:	str	xzr, [sp, #88]
    a51c:	ldr	x2, [sp, #56]
    a520:	mov	w1, #0x6f7                 	// #1783
    a524:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a528:	add	x0, x0, #0xb60
    a52c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a530:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a534:	add	x0, x0, #0x938
    a538:	ldr	x0, [x0]
    a53c:	mov	x1, x0
    a540:	ldr	x0, [sp, #32]
    a544:	bl	1e70 <_PyAccu_Accumulate@plt>
    a548:	cmp	w0, #0x0
    a54c:	b.ne	a5a4 <PySequence_Fast@plt+0x84d4>  // b.any
    a550:	ldr	x2, [sp, #72]
    a554:	mov	w1, #0x702                 	// #1794
    a558:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a55c:	add	x0, x0, #0xb60
    a560:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a564:	mov	w0, #0x0                   	// #0
    a568:	b	a5c8 <PySequence_Fast@plt+0x84f8>
    a56c:	nop
    a570:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a574:	nop
    a578:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a57c:	nop
    a580:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a584:	nop
    a588:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a58c:	nop
    a590:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a594:	nop
    a598:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a59c:	nop
    a5a0:	b	a5a8 <PySequence_Fast@plt+0x84d8>
    a5a4:	nop
    a5a8:	ldr	x0, [sp, #88]
    a5ac:	bl	2310 <PySequence_Fast@plt+0x240>
    a5b0:	ldr	x2, [sp, #72]
    a5b4:	mov	w1, #0x707                 	// #1799
    a5b8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a5bc:	add	x0, x0, #0xb60
    a5c0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a5c4:	mov	w0, #0xffffffff            	// #-1
    a5c8:	ldp	x29, x30, [sp], #96
    a5cc:	ret
    a5d0:	stp	x29, x30, [sp, #-32]!
    a5d4:	mov	x29, sp
    a5d8:	str	x0, [sp, #24]
    a5dc:	ldr	x0, [sp, #24]
    a5e0:	bl	20a0 <PyObject_GC_UnTrack@plt>
    a5e4:	ldr	x0, [sp, #24]
    a5e8:	bl	a79c <PySequence_Fast@plt+0x86cc>
    a5ec:	ldr	x0, [sp, #24]
    a5f0:	ldr	x0, [x0, #8]
    a5f4:	ldr	x1, [x0, #320]
    a5f8:	ldr	x0, [sp, #24]
    a5fc:	blr	x1
    a600:	nop
    a604:	ldp	x29, x30, [sp], #32
    a608:	ret
    a60c:	stp	x29, x30, [sp, #-80]!
    a610:	mov	x29, sp
    a614:	str	x0, [sp, #40]
    a618:	str	x1, [sp, #32]
    a61c:	str	x2, [sp, #24]
    a620:	ldr	x0, [sp, #40]
    a624:	str	x0, [sp, #72]
    a628:	ldr	x0, [sp, #72]
    a62c:	ldr	x0, [x0, #16]
    a630:	cmp	x0, #0x0
    a634:	b.eq	a664 <PySequence_Fast@plt+0x8594>  // b.none
    a638:	ldr	x0, [sp, #72]
    a63c:	ldr	x0, [x0, #16]
    a640:	ldr	x2, [sp, #32]
    a644:	ldr	x1, [sp, #24]
    a648:	blr	x2
    a64c:	str	w0, [sp, #68]
    a650:	ldr	w0, [sp, #68]
    a654:	cmp	w0, #0x0
    a658:	b.eq	a664 <PySequence_Fast@plt+0x8594>  // b.none
    a65c:	ldr	w0, [sp, #68]
    a660:	b	a794 <PySequence_Fast@plt+0x86c4>
    a664:	ldr	x0, [sp, #72]
    a668:	ldr	x0, [x0, #24]
    a66c:	cmp	x0, #0x0
    a670:	b.eq	a6a0 <PySequence_Fast@plt+0x85d0>  // b.none
    a674:	ldr	x0, [sp, #72]
    a678:	ldr	x0, [x0, #24]
    a67c:	ldr	x2, [sp, #32]
    a680:	ldr	x1, [sp, #24]
    a684:	blr	x2
    a688:	str	w0, [sp, #64]
    a68c:	ldr	w0, [sp, #64]
    a690:	cmp	w0, #0x0
    a694:	b.eq	a6a0 <PySequence_Fast@plt+0x85d0>  // b.none
    a698:	ldr	w0, [sp, #64]
    a69c:	b	a794 <PySequence_Fast@plt+0x86c4>
    a6a0:	ldr	x0, [sp, #72]
    a6a4:	ldr	x0, [x0, #32]
    a6a8:	cmp	x0, #0x0
    a6ac:	b.eq	a6dc <PySequence_Fast@plt+0x860c>  // b.none
    a6b0:	ldr	x0, [sp, #72]
    a6b4:	ldr	x0, [x0, #32]
    a6b8:	ldr	x2, [sp, #32]
    a6bc:	ldr	x1, [sp, #24]
    a6c0:	blr	x2
    a6c4:	str	w0, [sp, #60]
    a6c8:	ldr	w0, [sp, #60]
    a6cc:	cmp	w0, #0x0
    a6d0:	b.eq	a6dc <PySequence_Fast@plt+0x860c>  // b.none
    a6d4:	ldr	w0, [sp, #60]
    a6d8:	b	a794 <PySequence_Fast@plt+0x86c4>
    a6dc:	ldr	x0, [sp, #72]
    a6e0:	ldr	x0, [x0, #40]
    a6e4:	cmp	x0, #0x0
    a6e8:	b.eq	a718 <PySequence_Fast@plt+0x8648>  // b.none
    a6ec:	ldr	x0, [sp, #72]
    a6f0:	ldr	x0, [x0, #40]
    a6f4:	ldr	x2, [sp, #32]
    a6f8:	ldr	x1, [sp, #24]
    a6fc:	blr	x2
    a700:	str	w0, [sp, #56]
    a704:	ldr	w0, [sp, #56]
    a708:	cmp	w0, #0x0
    a70c:	b.eq	a718 <PySequence_Fast@plt+0x8648>  // b.none
    a710:	ldr	w0, [sp, #56]
    a714:	b	a794 <PySequence_Fast@plt+0x86c4>
    a718:	ldr	x0, [sp, #72]
    a71c:	ldr	x0, [x0, #48]
    a720:	cmp	x0, #0x0
    a724:	b.eq	a754 <PySequence_Fast@plt+0x8684>  // b.none
    a728:	ldr	x0, [sp, #72]
    a72c:	ldr	x0, [x0, #48]
    a730:	ldr	x2, [sp, #32]
    a734:	ldr	x1, [sp, #24]
    a738:	blr	x2
    a73c:	str	w0, [sp, #52]
    a740:	ldr	w0, [sp, #52]
    a744:	cmp	w0, #0x0
    a748:	b.eq	a754 <PySequence_Fast@plt+0x8684>  // b.none
    a74c:	ldr	w0, [sp, #52]
    a750:	b	a794 <PySequence_Fast@plt+0x86c4>
    a754:	ldr	x0, [sp, #72]
    a758:	ldr	x0, [x0, #56]
    a75c:	cmp	x0, #0x0
    a760:	b.eq	a790 <PySequence_Fast@plt+0x86c0>  // b.none
    a764:	ldr	x0, [sp, #72]
    a768:	ldr	x0, [x0, #56]
    a76c:	ldr	x2, [sp, #32]
    a770:	ldr	x1, [sp, #24]
    a774:	blr	x2
    a778:	str	w0, [sp, #48]
    a77c:	ldr	w0, [sp, #48]
    a780:	cmp	w0, #0x0
    a784:	b.eq	a790 <PySequence_Fast@plt+0x86c0>  // b.none
    a788:	ldr	w0, [sp, #48]
    a78c:	b	a794 <PySequence_Fast@plt+0x86c4>
    a790:	mov	w0, #0x0                   	// #0
    a794:	ldp	x29, x30, [sp], #80
    a798:	ret
    a79c:	stp	x29, x30, [sp, #-96]!
    a7a0:	mov	x29, sp
    a7a4:	str	x0, [sp, #24]
    a7a8:	ldr	x0, [sp, #24]
    a7ac:	str	x0, [sp, #88]
    a7b0:	ldr	x0, [sp, #88]
    a7b4:	ldr	x0, [x0, #16]
    a7b8:	str	x0, [sp, #80]
    a7bc:	ldr	x0, [sp, #80]
    a7c0:	cmp	x0, #0x0
    a7c4:	b.eq	a7e4 <PySequence_Fast@plt+0x8714>  // b.none
    a7c8:	ldr	x0, [sp, #88]
    a7cc:	str	xzr, [x0, #16]
    a7d0:	ldr	x2, [sp, #80]
    a7d4:	mov	w1, #0x72a                 	// #1834
    a7d8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a7dc:	add	x0, x0, #0xb60
    a7e0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a7e4:	ldr	x0, [sp, #88]
    a7e8:	ldr	x0, [x0, #24]
    a7ec:	str	x0, [sp, #72]
    a7f0:	ldr	x0, [sp, #72]
    a7f4:	cmp	x0, #0x0
    a7f8:	b.eq	a818 <PySequence_Fast@plt+0x8748>  // b.none
    a7fc:	ldr	x0, [sp, #88]
    a800:	str	xzr, [x0, #24]
    a804:	ldr	x2, [sp, #72]
    a808:	mov	w1, #0x72b                 	// #1835
    a80c:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a810:	add	x0, x0, #0xb60
    a814:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a818:	ldr	x0, [sp, #88]
    a81c:	ldr	x0, [x0, #32]
    a820:	str	x0, [sp, #64]
    a824:	ldr	x0, [sp, #64]
    a828:	cmp	x0, #0x0
    a82c:	b.eq	a84c <PySequence_Fast@plt+0x877c>  // b.none
    a830:	ldr	x0, [sp, #88]
    a834:	str	xzr, [x0, #32]
    a838:	ldr	x2, [sp, #64]
    a83c:	mov	w1, #0x72c                 	// #1836
    a840:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a844:	add	x0, x0, #0xb60
    a848:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a84c:	ldr	x0, [sp, #88]
    a850:	ldr	x0, [x0, #40]
    a854:	str	x0, [sp, #56]
    a858:	ldr	x0, [sp, #56]
    a85c:	cmp	x0, #0x0
    a860:	b.eq	a880 <PySequence_Fast@plt+0x87b0>  // b.none
    a864:	ldr	x0, [sp, #88]
    a868:	str	xzr, [x0, #40]
    a86c:	ldr	x2, [sp, #56]
    a870:	mov	w1, #0x72d                 	// #1837
    a874:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a878:	add	x0, x0, #0xb60
    a87c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a880:	ldr	x0, [sp, #88]
    a884:	ldr	x0, [x0, #48]
    a888:	str	x0, [sp, #48]
    a88c:	ldr	x0, [sp, #48]
    a890:	cmp	x0, #0x0
    a894:	b.eq	a8b4 <PySequence_Fast@plt+0x87e4>  // b.none
    a898:	ldr	x0, [sp, #88]
    a89c:	str	xzr, [x0, #48]
    a8a0:	ldr	x2, [sp, #48]
    a8a4:	mov	w1, #0x72e                 	// #1838
    a8a8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a8ac:	add	x0, x0, #0xb60
    a8b0:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a8b4:	ldr	x0, [sp, #88]
    a8b8:	ldr	x0, [x0, #56]
    a8bc:	str	x0, [sp, #40]
    a8c0:	ldr	x0, [sp, #40]
    a8c4:	cmp	x0, #0x0
    a8c8:	b.eq	a8e8 <PySequence_Fast@plt+0x8818>  // b.none
    a8cc:	ldr	x0, [sp, #88]
    a8d0:	str	xzr, [x0, #56]
    a8d4:	ldr	x2, [sp, #40]
    a8d8:	mov	w1, #0x72f                 	// #1839
    a8dc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a8e0:	add	x0, x0, #0xb60
    a8e4:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a8e8:	mov	w0, #0x0                   	// #0
    a8ec:	ldp	x29, x30, [sp], #96
    a8f0:	ret

000000000000a8f4 <PyInit__json@@Base>:
    a8f4:	stp	x29, x30, [sp, #-32]!
    a8f8:	mov	x29, sp
    a8fc:	mov	w1, #0x3f5                 	// #1013
    a900:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a904:	add	x0, x0, #0x7f0
    a908:	bl	1f50 <PyModule_Create2@plt>
    a90c:	str	x0, [sp, #24]
    a910:	ldr	x0, [sp, #24]
    a914:	cmp	x0, #0x0
    a918:	b.ne	a924 <PyInit__json@@Base+0x30>  // b.any
    a91c:	mov	x0, #0x0                   	// #0
    a920:	b	aa08 <PyInit__json@@Base+0x114>
    a924:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a928:	add	x0, x0, #0x1b0
    a92c:	bl	1e90 <PyType_Ready@plt>
    a930:	cmp	w0, #0x0
    a934:	b.lt	a9e4 <PyInit__json@@Base+0xf0>  // b.tstop
    a938:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a93c:	add	x0, x0, #0x350
    a940:	bl	1e90 <PyType_Ready@plt>
    a944:	cmp	w0, #0x0
    a948:	b.lt	a9ec <PyInit__json@@Base+0xf8>  // b.tstop
    a94c:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a950:	add	x0, x0, #0x1b0
    a954:	bl	2270 <PySequence_Fast@plt+0x1a0>
    a958:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a95c:	add	x2, x0, #0x1b0
    a960:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a964:	add	x1, x0, #0x2b8
    a968:	ldr	x0, [sp, #24]
    a96c:	bl	2010 <PyModule_AddObject@plt>
    a970:	cmp	w0, #0x0
    a974:	b.ge	a994 <PyInit__json@@Base+0xa0>  // b.tcont
    a978:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a97c:	add	x2, x0, #0x1b0
    a980:	mov	w1, #0x78b                 	// #1931
    a984:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a988:	add	x0, x0, #0xb60
    a98c:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a990:	b	a9f0 <PyInit__json@@Base+0xfc>
    a994:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a998:	add	x0, x0, #0x350
    a99c:	bl	2270 <PySequence_Fast@plt+0x1a0>
    a9a0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a9a4:	add	x2, x0, #0x350
    a9a8:	adrp	x0, b000 <PyInit__json@@Base+0x70c>
    a9ac:	add	x1, x0, #0x2c8
    a9b0:	ldr	x0, [sp, #24]
    a9b4:	bl	2010 <PyModule_AddObject@plt>
    a9b8:	cmp	w0, #0x0
    a9bc:	b.ge	a9dc <PyInit__json@@Base+0xe8>  // b.tcont
    a9c0:	adrp	x0, 1c000 <PyInit__json@@Base+0x1170c>
    a9c4:	add	x2, x0, #0x350
    a9c8:	mov	w1, #0x790                 	// #1936
    a9cc:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a9d0:	add	x0, x0, #0xb60
    a9d4:	bl	2298 <PySequence_Fast@plt+0x1c8>
    a9d8:	b	a9f0 <PyInit__json@@Base+0xfc>
    a9dc:	ldr	x0, [sp, #24]
    a9e0:	b	aa08 <PyInit__json@@Base+0x114>
    a9e4:	nop
    a9e8:	b	a9f0 <PyInit__json@@Base+0xfc>
    a9ec:	nop
    a9f0:	ldr	x2, [sp, #24]
    a9f4:	mov	w1, #0x795                 	// #1941
    a9f8:	adrp	x0, a000 <PySequence_Fast@plt+0x7f30>
    a9fc:	add	x0, x0, #0xb60
    aa00:	bl	2298 <PySequence_Fast@plt+0x1c8>
    aa04:	mov	x0, #0x0                   	// #0
    aa08:	ldp	x29, x30, [sp], #32
    aa0c:	ret

Disassembly of section .fini:

000000000000aa10 <.fini>:
    aa10:	stp	x29, x30, [sp, #-16]!
    aa14:	mov	x29, sp
    aa18:	ldp	x29, x30, [sp], #16
    aa1c:	ret
