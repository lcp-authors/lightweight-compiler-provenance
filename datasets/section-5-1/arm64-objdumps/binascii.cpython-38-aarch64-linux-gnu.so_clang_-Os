
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//binascii.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000016c8 <.init>:
    16c8:	stp	x29, x30, [sp, #-16]!
    16cc:	mov	x29, sp
    16d0:	bl	1930 <PyMem_Malloc@plt+0x10>
    16d4:	ldp	x29, x30, [sp], #16
    16d8:	ret

Disassembly of section .plt:

00000000000016e0 <_PyUnicode_Ready@plt-0x20>:
    16e0:	stp	x16, x30, [sp, #-16]!
    16e4:	adrp	x16, 15000 <PyInit_binascii@@Base+0x135fc>
    16e8:	ldr	x17, [x16, #4088]
    16ec:	add	x16, x16, #0xff8
    16f0:	br	x17
    16f4:	nop
    16f8:	nop
    16fc:	nop

0000000000001700 <_PyUnicode_Ready@plt>:
    1700:	adrp	x16, 16000 <_PyUnicode_Ready>
    1704:	ldr	x17, [x16]
    1708:	add	x16, x16, #0x0
    170c:	br	x17

0000000000001710 <PyModuleDef_Init@plt>:
    1710:	adrp	x16, 16000 <_PyUnicode_Ready>
    1714:	ldr	x17, [x16, #8]
    1718:	add	x16, x16, #0x8
    171c:	br	x17

0000000000001720 <PyMem_Free@plt>:
    1720:	adrp	x16, 16000 <_PyUnicode_Ready>
    1724:	ldr	x17, [x16, #16]
    1728:	add	x16, x16, #0x10
    172c:	br	x17

0000000000001730 <PyBuffer_Release@plt>:
    1730:	adrp	x16, 16000 <_PyUnicode_Ready>
    1734:	ldr	x17, [x16, #24]
    1738:	add	x16, x16, #0x18
    173c:	br	x17

0000000000001740 <__cxa_finalize@plt>:
    1740:	adrp	x16, 16000 <_PyUnicode_Ready>
    1744:	ldr	x17, [x16, #32]
    1748:	add	x16, x16, #0x20
    174c:	br	x17

0000000000001750 <crc32@plt>:
    1750:	adrp	x16, 16000 <_PyUnicode_Ready>
    1754:	ldr	x17, [x16, #40]
    1758:	add	x16, x16, #0x28
    175c:	br	x17

0000000000001760 <PyBuffer_IsContiguous@plt>:
    1760:	adrp	x16, 16000 <_PyUnicode_Ready>
    1764:	ldr	x17, [x16, #48]
    1768:	add	x16, x16, #0x30
    176c:	br	x17

0000000000001770 <PyBytes_FromStringAndSize@plt>:
    1770:	adrp	x16, 16000 <_PyUnicode_Ready>
    1774:	ldr	x17, [x16, #56]
    1778:	add	x16, x16, #0x38
    177c:	br	x17

0000000000001780 <_Py_Dealloc@plt>:
    1780:	adrp	x16, 16000 <_PyUnicode_Ready>
    1784:	ldr	x17, [x16, #64]
    1788:	add	x16, x16, #0x40
    178c:	br	x17

0000000000001790 <PyErr_NoMemory@plt>:
    1790:	adrp	x16, 16000 <_PyUnicode_Ready>
    1794:	ldr	x17, [x16, #72]
    1798:	add	x16, x16, #0x48
    179c:	br	x17

00000000000017a0 <_PyBytesWriter_Prepare@plt>:
    17a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17a4:	ldr	x17, [x16, #80]
    17a8:	add	x16, x16, #0x50
    17ac:	br	x17

00000000000017b0 <_PyArg_UnpackKeywords@plt>:
    17b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17b4:	ldr	x17, [x16, #88]
    17b8:	add	x16, x16, #0x58
    17bc:	br	x17

00000000000017c0 <PyErr_SetString@plt>:
    17c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17c4:	ldr	x17, [x16, #96]
    17c8:	add	x16, x16, #0x60
    17cc:	br	x17

00000000000017d0 <_PyBytesWriter_Finish@plt>:
    17d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17d4:	ldr	x17, [x16, #104]
    17d8:	add	x16, x16, #0x68
    17dc:	br	x17

00000000000017e0 <PyModule_GetState@plt>:
    17e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17e4:	ldr	x17, [x16, #112]
    17e8:	add	x16, x16, #0x70
    17ec:	br	x17

00000000000017f0 <memset@plt>:
    17f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17f4:	ldr	x17, [x16, #120]
    17f8:	add	x16, x16, #0x78
    17fc:	br	x17

0000000000001800 <_PyBytesWriter_Init@plt>:
    1800:	adrp	x16, 16000 <_PyUnicode_Ready>
    1804:	ldr	x17, [x16, #128]
    1808:	add	x16, x16, #0x80
    180c:	br	x17

0000000000001810 <_PyArg_BadArgument@plt>:
    1810:	adrp	x16, 16000 <_PyUnicode_Ready>
    1814:	ldr	x17, [x16, #136]
    1818:	add	x16, x16, #0x88
    181c:	br	x17

0000000000001820 <PyErr_NewException@plt>:
    1820:	adrp	x16, 16000 <_PyUnicode_Ready>
    1824:	ldr	x17, [x16, #144]
    1828:	add	x16, x16, #0x90
    182c:	br	x17

0000000000001830 <_PyBytesWriter_Alloc@plt>:
    1830:	adrp	x16, 16000 <_PyUnicode_Ready>
    1834:	ldr	x17, [x16, #152]
    1838:	add	x16, x16, #0x98
    183c:	br	x17

0000000000001840 <PyLong_AsUnsignedLongMask@plt>:
    1840:	adrp	x16, 16000 <_PyUnicode_Ready>
    1844:	ldr	x17, [x16, #160]
    1848:	add	x16, x16, #0xa0
    184c:	br	x17

0000000000001850 <__gmon_start__@plt>:
    1850:	adrp	x16, 16000 <_PyUnicode_Ready>
    1854:	ldr	x17, [x16, #168]
    1858:	add	x16, x16, #0xa8
    185c:	br	x17

0000000000001860 <_PyArg_CheckPositional@plt>:
    1860:	adrp	x16, 16000 <_PyUnicode_Ready>
    1864:	ldr	x17, [x16, #176]
    1868:	add	x16, x16, #0xb0
    186c:	br	x17

0000000000001870 <PyErr_Occurred@plt>:
    1870:	adrp	x16, 16000 <_PyUnicode_Ready>
    1874:	ldr	x17, [x16, #184]
    1878:	add	x16, x16, #0xb8
    187c:	br	x17

0000000000001880 <PyObject_GetBuffer@plt>:
    1880:	adrp	x16, 16000 <_PyUnicode_Ready>
    1884:	ldr	x17, [x16, #192]
    1888:	add	x16, x16, #0xc0
    188c:	br	x17

0000000000001890 <PyLong_FromUnsignedLong@plt>:
    1890:	adrp	x16, 16000 <_PyUnicode_Ready>
    1894:	ldr	x17, [x16, #200]
    1898:	add	x16, x16, #0xc8
    189c:	br	x17

00000000000018a0 <_Py_strhex_bytes_with_sep@plt>:
    18a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18a4:	ldr	x17, [x16, #208]
    18a8:	add	x16, x16, #0xd0
    18ac:	br	x17

00000000000018b0 <_PyBytesWriter_Dealloc@plt>:
    18b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18b4:	ldr	x17, [x16, #216]
    18b8:	add	x16, x16, #0xd8
    18bc:	br	x17

00000000000018c0 <memchr@plt>:
    18c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18c4:	ldr	x17, [x16, #224]
    18c8:	add	x16, x16, #0xe0
    18cc:	br	x17

00000000000018d0 <PyModule_AddObject@plt>:
    18d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18d4:	ldr	x17, [x16, #232]
    18d8:	add	x16, x16, #0xe8
    18dc:	br	x17

00000000000018e0 <PyType_IsSubtype@plt>:
    18e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18e4:	ldr	x17, [x16, #240]
    18e8:	add	x16, x16, #0xf0
    18ec:	br	x17

00000000000018f0 <PyErr_Format@plt>:
    18f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18f4:	ldr	x17, [x16, #248]
    18f8:	add	x16, x16, #0xf8
    18fc:	br	x17

0000000000001900 <_Py_BuildValue_SizeT@plt>:
    1900:	adrp	x16, 16000 <_PyUnicode_Ready>
    1904:	ldr	x17, [x16, #256]
    1908:	add	x16, x16, #0x100
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 16000 <_PyUnicode_Ready>
    1914:	ldr	x17, [x16, #264]
    1918:	add	x16, x16, #0x108
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 16000 <_PyUnicode_Ready>
    1924:	ldr	x17, [x16, #272]
    1928:	add	x16, x16, #0x110
    192c:	br	x17

Disassembly of section .text:

0000000000001930 <PyInit_binascii@@Base-0xd4>:
    1930:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    1934:	ldr	x0, [x0, #4048]
    1938:	cbz	x0, 1940 <PyMem_Malloc@plt+0x20>
    193c:	b	1850 <__gmon_start__@plt>
    1940:	ret
    1944:	nop
    1948:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    194c:	add	x0, x0, #0x548
    1950:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1954:	add	x1, x1, #0x548
    1958:	cmp	x1, x0
    195c:	b.eq	1974 <PyMem_Malloc@plt+0x54>  // b.none
    1960:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1964:	ldr	x1, [x1, #4008]
    1968:	cbz	x1, 1974 <PyMem_Malloc@plt+0x54>
    196c:	mov	x16, x1
    1970:	br	x16
    1974:	ret
    1978:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    197c:	add	x0, x0, #0x548
    1980:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1984:	add	x1, x1, #0x548
    1988:	sub	x1, x1, x0
    198c:	lsr	x2, x1, #63
    1990:	add	x1, x2, x1, asr #3
    1994:	cmp	xzr, x1, asr #1
    1998:	asr	x1, x1, #1
    199c:	b.eq	19b4 <PyMem_Malloc@plt+0x94>  // b.none
    19a0:	adrp	x2, 15000 <PyInit_binascii@@Base+0x135fc>
    19a4:	ldr	x2, [x2, #4064]
    19a8:	cbz	x2, 19b4 <PyMem_Malloc@plt+0x94>
    19ac:	mov	x16, x2
    19b0:	br	x16
    19b4:	ret
    19b8:	stp	x29, x30, [sp, #-32]!
    19bc:	mov	x29, sp
    19c0:	str	x19, [sp, #16]
    19c4:	adrp	x19, 16000 <PyInit_binascii@@Base+0x145fc>
    19c8:	ldrb	w0, [x19, #1352]
    19cc:	cbnz	w0, 19f4 <PyMem_Malloc@plt+0xd4>
    19d0:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    19d4:	ldr	x0, [x0, #4024]
    19d8:	cbz	x0, 19e8 <PyMem_Malloc@plt+0xc8>
    19dc:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    19e0:	ldr	x0, [x0, #280]
    19e4:	bl	1740 <__cxa_finalize@plt>
    19e8:	bl	1948 <PyMem_Malloc@plt+0x28>
    19ec:	mov	w0, #0x1                   	// #1
    19f0:	strb	w0, [x19, #1352]
    19f4:	ldr	x19, [sp, #16]
    19f8:	ldp	x29, x30, [sp], #32
    19fc:	ret
    1a00:	b	1978 <PyMem_Malloc@plt+0x58>

0000000000001a04 <PyInit_binascii@@Base>:
    1a04:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    1a08:	add	x0, x0, #0x120
    1a0c:	b	1710 <PyModuleDef_Init@plt>
    1a10:	sub	sp, sp, #0x90
    1a14:	stp	x29, x30, [sp, #80]
    1a18:	str	x23, [sp, #96]
    1a1c:	stp	x22, x21, [sp, #112]
    1a20:	stp	x20, x19, [sp, #128]
    1a24:	add	x29, sp, #0x50
    1a28:	mov	x8, x1
    1a2c:	mov	x20, x0
    1a30:	movi	v0.2d, #0x0
    1a34:	mov	x1, sp
    1a38:	mov	x0, x8
    1a3c:	stp	q0, q0, [sp, #48]
    1a40:	stp	q0, q0, [sp, #16]
    1a44:	str	q0, [sp]
    1a48:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    1a4c:	cbz	w0, 1bac <PyInit_binascii@@Base+0x1a8>
    1a50:	ldr	x23, [sp]
    1a54:	ldr	x22, [sp, #16]
    1a58:	mov	x0, xzr
    1a5c:	ldrb	w8, [x23]
    1a60:	add	w8, w8, #0x20
    1a64:	and	w21, w8, #0x3f
    1a68:	mov	x1, x21
    1a6c:	bl	1770 <PyBytes_FromStringAndSize@plt>
    1a70:	mov	x19, x0
    1a74:	cbz	x0, 1bb0 <PyInit_binascii@@Base+0x1ac>
    1a78:	add	x8, x23, #0x1
    1a7c:	sub	x9, x22, #0x1
    1a80:	cbz	w21, 1b10 <PyInit_binascii@@Base+0x10c>
    1a84:	mov	w13, wzr
    1a88:	mov	w11, wzr
    1a8c:	add	x10, x19, #0x20
    1a90:	mov	w12, #0xffffffff            	// #-1
    1a94:	subs	x9, x9, #0x1
    1a98:	b.lt	1acc <PyInit_binascii@@Base+0xc8>  // b.tstop
    1a9c:	ldrb	w15, [x8]
    1aa0:	mov	w14, wzr
    1aa4:	cmp	w15, #0xa
    1aa8:	b.eq	1ad0 <PyInit_binascii@@Base+0xcc>  // b.none
    1aac:	cmp	w15, #0xd
    1ab0:	b.eq	1ad0 <PyInit_binascii@@Base+0xcc>  // b.none
    1ab4:	sub	w14, w15, #0x20
    1ab8:	cmp	w14, #0x41
    1abc:	b.cs	1b78 <PyInit_binascii@@Base+0x174>  // b.hs, b.nlast
    1ac0:	add	w14, w15, #0x20
    1ac4:	and	w14, w14, #0x3f
    1ac8:	b	1ad0 <PyInit_binascii@@Base+0xcc>
    1acc:	mov	w14, wzr
    1ad0:	add	w15, w11, #0x6
    1ad4:	cmp	w15, #0x8
    1ad8:	bfi	w14, w13, #6, #26
    1adc:	b.lt	1afc <PyInit_binascii@@Base+0xf8>  // b.tstop
    1ae0:	sub	w11, w11, #0x2
    1ae4:	lsr	w13, w14, w11
    1ae8:	lsl	w15, w12, w11
    1aec:	strb	w13, [x10], #1
    1af0:	bic	w13, w14, w15
    1af4:	sub	x21, x21, #0x1
    1af8:	b	1b04 <PyInit_binascii@@Base+0x100>
    1afc:	mov	w11, w15
    1b00:	mov	w13, w14
    1b04:	cmp	x21, #0x0
    1b08:	add	x8, x8, #0x1
    1b0c:	b.gt	1a94 <PyInit_binascii@@Base+0x90>
    1b10:	cmp	x9, #0x1
    1b14:	b.lt	1bb0 <PyInit_binascii@@Base+0x1ac>  // b.tstop
    1b18:	mov	x11, #0x2400                	// #9216
    1b1c:	add	x9, x9, #0x1
    1b20:	mov	w10, #0x1                   	// #1
    1b24:	movk	x11, #0x1, lsl #32
    1b28:	ldrb	w12, [x8]
    1b2c:	cmp	w12, #0x20
    1b30:	b.hi	1b40 <PyInit_binascii@@Base+0x13c>  // b.pmore
    1b34:	lsl	x13, x10, x12
    1b38:	tst	x13, x11
    1b3c:	b.ne	1b48 <PyInit_binascii@@Base+0x144>  // b.any
    1b40:	cmp	w12, #0x60
    1b44:	b.ne	1b5c <PyInit_binascii@@Base+0x158>  // b.any
    1b48:	sub	x9, x9, #0x1
    1b4c:	cmp	x9, #0x1
    1b50:	add	x8, x8, #0x1
    1b54:	b.gt	1b28 <PyInit_binascii@@Base+0x124>
    1b58:	b	1bb0 <PyInit_binascii@@Base+0x1ac>
    1b5c:	mov	x0, x20
    1b60:	bl	17e0 <PyModule_GetState@plt>
    1b64:	cbz	x0, 1bac <PyInit_binascii@@Base+0x1a8>
    1b68:	ldr	x0, [x0]
    1b6c:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    1b70:	add	x1, x1, #0xf77
    1b74:	b	1b90 <PyInit_binascii@@Base+0x18c>
    1b78:	mov	x0, x20
    1b7c:	bl	17e0 <PyModule_GetState@plt>
    1b80:	cbz	x0, 1bac <PyInit_binascii@@Base+0x1a8>
    1b84:	ldr	x0, [x0]
    1b88:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    1b8c:	add	x1, x1, #0xf6a
    1b90:	bl	17c0 <PyErr_SetString@plt>
    1b94:	ldr	x8, [x19]
    1b98:	subs	x8, x8, #0x1
    1b9c:	str	x8, [x19]
    1ba0:	b.ne	1bac <PyInit_binascii@@Base+0x1a8>  // b.any
    1ba4:	mov	x0, x19
    1ba8:	bl	1780 <_Py_Dealloc@plt>
    1bac:	mov	x19, xzr
    1bb0:	ldr	x8, [sp, #8]
    1bb4:	cbz	x8, 1bc0 <PyInit_binascii@@Base+0x1bc>
    1bb8:	mov	x0, sp
    1bbc:	bl	1730 <PyBuffer_Release@plt>
    1bc0:	mov	x0, x19
    1bc4:	ldp	x20, x19, [sp, #128]
    1bc8:	ldp	x22, x21, [sp, #112]
    1bcc:	ldr	x23, [sp, #96]
    1bd0:	ldp	x29, x30, [sp, #80]
    1bd4:	add	sp, sp, #0x90
    1bd8:	ret
    1bdc:	stp	x29, x30, [sp, #-64]!
    1be0:	str	x28, [sp, #16]
    1be4:	stp	x22, x21, [sp, #32]
    1be8:	stp	x20, x19, [sp, #48]
    1bec:	mov	x29, sp
    1bf0:	sub	sp, sp, #0x2a0
    1bf4:	mov	x21, x2
    1bf8:	mov	x19, x1
    1bfc:	mov	x20, x0
    1c00:	cbz	x3, 1c0c <PyInit_binascii@@Base+0x208>
    1c04:	ldr	x22, [x3, #16]
    1c08:	b	1c10 <PyInit_binascii@@Base+0x20c>
    1c0c:	mov	x22, xzr
    1c10:	movi	v0.2d, #0x0
    1c14:	stp	q0, q0, [sp, #64]
    1c18:	stp	q0, q0, [sp, #32]
    1c1c:	str	q0, [sp, #16]
    1c20:	cbz	x19, 1c30 <PyInit_binascii@@Base+0x22c>
    1c24:	cmp	x21, #0x1
    1c28:	b.ne	1c30 <PyInit_binascii@@Base+0x22c>  // b.any
    1c2c:	cbz	x3, 1c64 <PyInit_binascii@@Base+0x260>
    1c30:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    1c34:	add	x8, sp, #0x68
    1c38:	add	x4, x4, #0x3c8
    1c3c:	mov	w5, #0x1                   	// #1
    1c40:	mov	w6, #0x1                   	// #1
    1c44:	mov	x0, x19
    1c48:	mov	x1, x21
    1c4c:	mov	x2, xzr
    1c50:	mov	w7, wzr
    1c54:	str	x8, [sp]
    1c58:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    1c5c:	mov	x19, x0
    1c60:	cbz	x0, 1c7c <PyInit_binascii@@Base+0x278>
    1c64:	ldr	x0, [x19]
    1c68:	add	x1, sp, #0x10
    1c6c:	mov	w2, wzr
    1c70:	bl	1880 <PyObject_GetBuffer@plt>
    1c74:	cbz	w0, 1ca8 <PyInit_binascii@@Base+0x2a4>
    1c78:	mov	x19, xzr
    1c7c:	ldr	x8, [sp, #24]
    1c80:	cbz	x8, 1c8c <PyInit_binascii@@Base+0x288>
    1c84:	add	x0, sp, #0x10
    1c88:	bl	1730 <PyBuffer_Release@plt>
    1c8c:	mov	x0, x19
    1c90:	add	sp, sp, #0x2a0
    1c94:	ldp	x20, x19, [sp, #48]
    1c98:	ldp	x22, x21, [sp, #32]
    1c9c:	ldr	x28, [sp, #16]
    1ca0:	ldp	x29, x30, [sp], #64
    1ca4:	ret
    1ca8:	add	x0, sp, #0x10
    1cac:	mov	w1, #0x43                  	// #67
    1cb0:	bl	1760 <PyBuffer_IsContiguous@plt>
    1cb4:	cbz	w0, 1cf8 <PyInit_binascii@@Base+0x2f4>
    1cb8:	add	x8, x22, x21
    1cbc:	cmp	x8, #0x1
    1cc0:	b.ne	1d1c <PyInit_binascii@@Base+0x318>  // b.any
    1cc4:	mov	w19, wzr
    1cc8:	add	x0, sp, #0x78
    1ccc:	bl	1800 <_PyBytesWriter_Init@plt>
    1cd0:	ldr	x21, [sp, #32]
    1cd4:	cmp	x21, #0x2e
    1cd8:	b.lt	1d60 <PyInit_binascii@@Base+0x35c>  // b.tstop
    1cdc:	mov	x0, x20
    1ce0:	bl	17e0 <PyModule_GetState@plt>
    1ce4:	cbz	x0, 1c78 <PyInit_binascii@@Base+0x274>
    1ce8:	ldr	x0, [x0]
    1cec:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    1cf0:	add	x1, x1, #0xfd3
    1cf4:	b	1d58 <PyInit_binascii@@Base+0x354>
    1cf8:	ldr	x3, [x19]
    1cfc:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    1d00:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    1d04:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    1d08:	add	x0, x0, #0xe44
    1d0c:	add	x1, x1, #0xf91
    1d10:	add	x2, x2, #0xf9c
    1d14:	bl	1810 <_PyArg_BadArgument@plt>
    1d18:	b	1c78 <PyInit_binascii@@Base+0x274>
    1d1c:	ldr	x8, [x19, #8]
    1d20:	ldr	x0, [x8, #8]
    1d24:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d28:	ldr	x8, [x8, #4016]
    1d2c:	cmp	x0, x8
    1d30:	b.eq	1d44 <PyInit_binascii@@Base+0x340>  // b.none
    1d34:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1d38:	ldr	x1, [x1, #4016]
    1d3c:	bl	18e0 <PyType_IsSubtype@plt>
    1d40:	cbz	w0, 1e40 <PyInit_binascii@@Base+0x43c>
    1d44:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d48:	ldr	x8, [x8, #4040]
    1d4c:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    1d50:	add	x1, x1, #0xfae
    1d54:	ldr	x0, [x8]
    1d58:	bl	17c0 <PyErr_SetString@plt>
    1d5c:	b	1c78 <PyInit_binascii@@Base+0x274>
    1d60:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    1d64:	add	x8, x21, #0x2
    1d68:	movk	x9, #0x5556
    1d6c:	ldr	x20, [sp, #16]
    1d70:	smulh	x8, x8, x9
    1d74:	add	x8, x8, x8, lsr #63
    1d78:	mov	w1, #0x2                   	// #2
    1d7c:	bfi	x1, x8, #2, #62
    1d80:	add	x0, sp, #0x78
    1d84:	bl	1830 <_PyBytesWriter_Alloc@plt>
    1d88:	cbz	x0, 1c78 <PyInit_binascii@@Base+0x274>
    1d8c:	cmp	x21, #0x0
    1d90:	add	w9, w21, #0x20
    1d94:	mov	w8, #0x60                  	// #96
    1d98:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    1d9c:	mov	x1, x0
    1da0:	csel	w9, w9, w8, eq  // eq = none
    1da4:	cmp	x21, #0x1
    1da8:	strb	w9, [x1], #1
    1dac:	b.lt	1e28 <PyInit_binascii@@Base+0x424>  // b.tstop
    1db0:	mov	w9, wzr
    1db4:	mov	w10, wzr
    1db8:	mov	w11, #0x1                   	// #1
    1dbc:	lsl	w9, w9, #8
    1dc0:	tbz	w11, #0, 1dcc <PyInit_binascii@@Base+0x3c8>
    1dc4:	ldrb	w11, [x20]
    1dc8:	orr	w9, w9, w11
    1dcc:	cmn	w10, #0x2
    1dd0:	b.lt	1e0c <PyInit_binascii@@Base+0x408>  // b.tstop
    1dd4:	add	w10, w10, #0xe
    1dd8:	sub	w11, w10, #0xc
    1ddc:	lsr	w11, w9, w11
    1de0:	tst	w11, #0x3f
    1de4:	and	w11, w11, #0x3f
    1de8:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    1dec:	add	w11, w11, #0x20
    1df0:	sub	w10, w10, #0x6
    1df4:	csel	w11, w11, w8, eq  // eq = none
    1df8:	cmp	w10, #0xb
    1dfc:	strb	w11, [x1], #1
    1e00:	b.gt	1dd8 <PyInit_binascii@@Base+0x3d4>
    1e04:	sub	w10, w10, #0x6
    1e08:	b	1e10 <PyInit_binascii@@Base+0x40c>
    1e0c:	add	w10, w10, #0x8
    1e10:	sub	x21, x21, #0x1
    1e14:	cmp	x21, #0x0
    1e18:	add	x20, x20, #0x1
    1e1c:	cset	w11, gt
    1e20:	b.gt	1dbc <PyInit_binascii@@Base+0x3b8>
    1e24:	cbnz	w10, 1dbc <PyInit_binascii@@Base+0x3b8>
    1e28:	mov	w8, #0xa                   	// #10
    1e2c:	strb	w8, [x1], #1
    1e30:	add	x0, sp, #0x78
    1e34:	bl	17d0 <_PyBytesWriter_Finish@plt>
    1e38:	mov	x19, x0
    1e3c:	b	1c7c <PyInit_binascii@@Base+0x278>
    1e40:	ldr	x0, [x19, #8]
    1e44:	bl	1910 <_PyLong_AsInt@plt>
    1e48:	mov	w19, w0
    1e4c:	cmn	w0, #0x1
    1e50:	b.ne	1cc8 <PyInit_binascii@@Base+0x2c4>  // b.any
    1e54:	bl	1870 <PyErr_Occurred@plt>
    1e58:	cbnz	x0, 1c78 <PyInit_binascii@@Base+0x274>
    1e5c:	mov	w19, #0xffffffff            	// #-1
    1e60:	b	1cc8 <PyInit_binascii@@Base+0x2c4>
    1e64:	stp	x29, x30, [sp, #-80]!
    1e68:	str	x28, [sp, #16]
    1e6c:	stp	x24, x23, [sp, #32]
    1e70:	stp	x22, x21, [sp, #48]
    1e74:	stp	x20, x19, [sp, #64]
    1e78:	mov	x29, sp
    1e7c:	sub	sp, sp, #0x280
    1e80:	mov	x8, x1
    1e84:	mov	x19, x0
    1e88:	movi	v0.2d, #0x0
    1e8c:	mov	x1, sp
    1e90:	mov	x0, x8
    1e94:	stp	q0, q0, [sp, #48]
    1e98:	stp	q0, q0, [sp, #16]
    1e9c:	str	q0, [sp]
    1ea0:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    1ea4:	cbz	w0, 2098 <PyInit_binascii@@Base+0x694>
    1ea8:	ldr	x21, [sp, #16]
    1eac:	mov	x8, #0xfffffffffffffffd    	// #-3
    1eb0:	movk	x8, #0x7fff, lsl #48
    1eb4:	cmp	x21, x8
    1eb8:	b.lt	1ec4 <PyInit_binascii@@Base+0x4c0>  // b.tstop
    1ebc:	bl	1790 <PyErr_NoMemory@plt>
    1ec0:	b	207c <PyInit_binascii@@Base+0x678>
    1ec4:	add	x8, x21, #0x3
    1ec8:	add	x9, x21, #0x6
    1ecc:	cmp	x8, #0x0
    1ed0:	ldr	x22, [sp]
    1ed4:	csel	x8, x9, x8, lt  // lt = tstop
    1ed8:	asr	x9, x8, #2
    1edc:	lsl	x9, x9, #1
    1ee0:	add	x0, sp, #0x58
    1ee4:	add	x20, x9, x8, asr #2
    1ee8:	bl	1800 <_PyBytesWriter_Init@plt>
    1eec:	add	x0, sp, #0x58
    1ef0:	mov	x1, x20
    1ef4:	bl	1830 <_PyBytesWriter_Alloc@plt>
    1ef8:	cbz	x0, 2098 <PyInit_binascii@@Base+0x694>
    1efc:	mov	x20, x0
    1f00:	cmp	x21, #0x1
    1f04:	b.lt	2070 <PyInit_binascii@@Base+0x66c>  // b.tstop
    1f08:	adrp	x9, 4000 <PyInit_binascii@@Base+0x25fc>
    1f0c:	mov	w11, wzr
    1f10:	mov	w8, wzr
    1f14:	mov	w24, wzr
    1f18:	add	x9, x9, #0xb64
    1f1c:	mov	w10, #0xffffffff            	// #-1
    1f20:	mov	x23, x20
    1f24:	ldrsb	w12, [x22]
    1f28:	tbnz	w12, #31, 2018 <PyInit_binascii@@Base+0x614>
    1f2c:	and	x12, x12, #0xff
    1f30:	cmp	w12, #0x1f
    1f34:	b.gt	1f4c <PyInit_binascii@@Base+0x548>
    1f38:	cmp	w12, #0xa
    1f3c:	b.eq	2018 <PyInit_binascii@@Base+0x614>  // b.none
    1f40:	cmp	w12, #0xd
    1f44:	b.eq	2018 <PyInit_binascii@@Base+0x614>  // b.none
    1f48:	b	1fc8 <PyInit_binascii@@Base+0x5c4>
    1f4c:	cmp	w12, #0x20
    1f50:	b.eq	2018 <PyInit_binascii@@Base+0x614>  // b.none
    1f54:	cmp	w12, #0x3d
    1f58:	b.ne	1fc8 <PyInit_binascii@@Base+0x5c4>  // b.any
    1f5c:	cmp	w11, #0x2
    1f60:	b.lt	2018 <PyInit_binascii@@Base+0x614>  // b.tstop
    1f64:	b.ne	206c <PyInit_binascii@@Base+0x668>  // b.any
    1f68:	mov	w11, #0x1                   	// #1
    1f6c:	mov	w14, #0x3d                  	// #61
    1f70:	mov	x12, x21
    1f74:	mov	w13, #0x1                   	// #1
    1f78:	sxtb	w15, w14
    1f7c:	tbnz	w15, #31, 1fa4 <PyInit_binascii@@Base+0x5a0>
    1f80:	and	w14, w14, #0xff
    1f84:	and	x15, x14, #0x7f
    1f88:	ldrb	w15, [x9, x15]
    1f8c:	cmp	w15, #0xff
    1f90:	b.eq	1fa4 <PyInit_binascii@@Base+0x5a0>  // b.none
    1f94:	cmp	w13, #0x0
    1f98:	csinv	w14, w14, wzr, eq  // eq = none
    1f9c:	sub	w13, w13, #0x1
    1fa0:	b	1fa8 <PyInit_binascii@@Base+0x5a4>
    1fa4:	mov	w14, #0xffffffff            	// #-1
    1fa8:	cmp	x12, #0x2
    1fac:	b.lt	2004 <PyInit_binascii@@Base+0x600>  // b.tstop
    1fb0:	cmn	w14, #0x1
    1fb4:	b.ne	2004 <PyInit_binascii@@Base+0x600>  // b.any
    1fb8:	ldrb	w14, [x22, x11]
    1fbc:	sub	x12, x12, #0x1
    1fc0:	add	x11, x11, #0x1
    1fc4:	b	1f78 <PyInit_binascii@@Base+0x574>
    1fc8:	ldrb	w12, [x9, x12]
    1fcc:	cmp	w12, #0xff
    1fd0:	b.eq	2018 <PyInit_binascii@@Base+0x614>  // b.none
    1fd4:	add	w11, w11, #0x1
    1fd8:	add	w13, w24, #0x6
    1fdc:	and	w11, w11, #0x3
    1fe0:	cmp	w13, #0x8
    1fe4:	orr	w8, w12, w8, lsl #6
    1fe8:	b.lt	2014 <PyInit_binascii@@Base+0x610>  // b.tstop
    1fec:	sub	w24, w24, #0x2
    1ff0:	lsr	w12, w8, w24
    1ff4:	lsl	w13, w10, w24
    1ff8:	strb	w12, [x23], #1
    1ffc:	bic	w8, w8, w13
    2000:	b	2018 <PyInit_binascii@@Base+0x614>
    2004:	cmp	w14, #0x3d
    2008:	b.eq	206c <PyInit_binascii@@Base+0x668>  // b.none
    200c:	mov	w11, #0x2                   	// #2
    2010:	b	2018 <PyInit_binascii@@Base+0x614>
    2014:	mov	w24, w13
    2018:	subs	x21, x21, #0x1
    201c:	add	x22, x22, #0x1
    2020:	b.gt	1f24 <PyInit_binascii@@Base+0x520>
    2024:	cbz	w24, 206c <PyInit_binascii@@Base+0x668>
    2028:	mov	x0, x19
    202c:	bl	17e0 <PyModule_GetState@plt>
    2030:	cbz	x0, 2098 <PyInit_binascii@@Base+0x694>
    2034:	ldr	x0, [x0]
    2038:	cmp	w24, #0x6
    203c:	b.ne	2084 <PyInit_binascii@@Base+0x680>  // b.any
    2040:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    2044:	sub	x8, x23, x20
    2048:	movk	x9, #0x5556
    204c:	smulh	x8, x8, x9
    2050:	add	x8, x8, x8, lsr #63
    2054:	mov	w2, #0x1                   	// #1
    2058:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    205c:	bfi	x2, x8, #2, #62
    2060:	add	x1, x1, #0xfec
    2064:	bl	18f0 <PyErr_Format@plt>
    2068:	b	2090 <PyInit_binascii@@Base+0x68c>
    206c:	mov	x20, x23
    2070:	add	x0, sp, #0x58
    2074:	mov	x1, x20
    2078:	bl	17d0 <_PyBytesWriter_Finish@plt>
    207c:	mov	x19, x0
    2080:	b	209c <PyInit_binascii@@Base+0x698>
    2084:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2088:	add	x1, x1, #0x51
    208c:	bl	17c0 <PyErr_SetString@plt>
    2090:	add	x0, sp, #0x58
    2094:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    2098:	mov	x19, xzr
    209c:	ldr	x8, [sp, #8]
    20a0:	cbz	x8, 20ac <PyInit_binascii@@Base+0x6a8>
    20a4:	mov	x0, sp
    20a8:	bl	1730 <PyBuffer_Release@plt>
    20ac:	mov	x0, x19
    20b0:	add	sp, sp, #0x280
    20b4:	ldp	x20, x19, [sp, #64]
    20b8:	ldp	x22, x21, [sp, #48]
    20bc:	ldp	x24, x23, [sp, #32]
    20c0:	ldr	x28, [sp, #16]
    20c4:	ldp	x29, x30, [sp], #80
    20c8:	ret
    20cc:	stp	x29, x30, [sp, #-64]!
    20d0:	str	x28, [sp, #16]
    20d4:	stp	x22, x21, [sp, #32]
    20d8:	stp	x20, x19, [sp, #48]
    20dc:	mov	x29, sp
    20e0:	sub	sp, sp, #0x2a0
    20e4:	mov	x21, x2
    20e8:	mov	x19, x1
    20ec:	mov	x20, x0
    20f0:	cbz	x3, 20fc <PyInit_binascii@@Base+0x6f8>
    20f4:	ldr	x22, [x3, #16]
    20f8:	b	2100 <PyInit_binascii@@Base+0x6fc>
    20fc:	mov	x22, xzr
    2100:	movi	v0.2d, #0x0
    2104:	stp	q0, q0, [sp, #64]
    2108:	stp	q0, q0, [sp, #32]
    210c:	str	q0, [sp, #16]
    2110:	cbz	x19, 2120 <PyInit_binascii@@Base+0x71c>
    2114:	cmp	x21, #0x1
    2118:	b.ne	2120 <PyInit_binascii@@Base+0x71c>  // b.any
    211c:	cbz	x3, 2154 <PyInit_binascii@@Base+0x750>
    2120:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2124:	add	x8, sp, #0x68
    2128:	add	x4, x4, #0x408
    212c:	mov	w5, #0x1                   	// #1
    2130:	mov	w6, #0x1                   	// #1
    2134:	mov	x0, x19
    2138:	mov	x1, x21
    213c:	mov	x2, xzr
    2140:	mov	w7, wzr
    2144:	str	x8, [sp]
    2148:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    214c:	mov	x19, x0
    2150:	cbz	x0, 216c <PyInit_binascii@@Base+0x768>
    2154:	ldr	x0, [x19]
    2158:	add	x1, sp, #0x10
    215c:	mov	w2, wzr
    2160:	bl	1880 <PyObject_GetBuffer@plt>
    2164:	cbz	w0, 2198 <PyInit_binascii@@Base+0x794>
    2168:	mov	x19, xzr
    216c:	ldr	x8, [sp, #24]
    2170:	cbz	x8, 217c <PyInit_binascii@@Base+0x778>
    2174:	add	x0, sp, #0x10
    2178:	bl	1730 <PyBuffer_Release@plt>
    217c:	mov	x0, x19
    2180:	add	sp, sp, #0x2a0
    2184:	ldp	x20, x19, [sp, #48]
    2188:	ldp	x22, x21, [sp, #32]
    218c:	ldr	x28, [sp, #16]
    2190:	ldp	x29, x30, [sp], #64
    2194:	ret
    2198:	add	x0, sp, #0x10
    219c:	mov	w1, #0x43                  	// #67
    21a0:	bl	1760 <PyBuffer_IsContiguous@plt>
    21a4:	cbz	w0, 21f0 <PyInit_binascii@@Base+0x7ec>
    21a8:	add	x8, x22, x21
    21ac:	cmp	x8, #0x1
    21b0:	b.ne	2214 <PyInit_binascii@@Base+0x810>  // b.any
    21b4:	mov	w19, #0xffffffff            	// #-1
    21b8:	ldr	x21, [sp, #16]
    21bc:	ldr	x22, [sp, #32]
    21c0:	add	x0, sp, #0x78
    21c4:	bl	1800 <_PyBytesWriter_Init@plt>
    21c8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    21cc:	cmp	x22, x8
    21d0:	b.lt	2258 <PyInit_binascii@@Base+0x854>  // b.tstop
    21d4:	mov	x0, x20
    21d8:	bl	17e0 <PyModule_GetState@plt>
    21dc:	cbz	x0, 2168 <PyInit_binascii@@Base+0x764>
    21e0:	ldr	x0, [x0]
    21e4:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    21e8:	add	x1, x1, #0x6b
    21ec:	b	2250 <PyInit_binascii@@Base+0x84c>
    21f0:	ldr	x3, [x19]
    21f4:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    21f8:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    21fc:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    2200:	add	x0, x0, #0xe56
    2204:	add	x1, x1, #0xf91
    2208:	add	x2, x2, #0xf9c
    220c:	bl	1810 <_PyArg_BadArgument@plt>
    2210:	b	2168 <PyInit_binascii@@Base+0x764>
    2214:	ldr	x8, [x19, #8]
    2218:	ldr	x0, [x8, #8]
    221c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2220:	ldr	x8, [x8, #4016]
    2224:	cmp	x0, x8
    2228:	b.eq	223c <PyInit_binascii@@Base+0x838>  // b.none
    222c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2230:	ldr	x1, [x1, #4016]
    2234:	bl	18e0 <PyType_IsSubtype@plt>
    2238:	cbz	w0, 230c <PyInit_binascii@@Base+0x908>
    223c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2240:	ldr	x8, [x8, #4040]
    2244:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    2248:	add	x1, x1, #0xfae
    224c:	ldr	x0, [x8]
    2250:	bl	17c0 <PyErr_SetString@plt>
    2254:	b	2168 <PyInit_binascii@@Base+0x764>
    2258:	cmp	w19, #0x0
    225c:	mov	w8, #0x2                   	// #2
    2260:	cinc	x8, x8, ne  // ne = any
    2264:	add	x1, x8, x22, lsl #1
    2268:	add	x0, sp, #0x78
    226c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2270:	cbz	x0, 2168 <PyInit_binascii@@Base+0x764>
    2274:	mov	x1, x0
    2278:	cmp	x22, #0x1
    227c:	b.lt	234c <PyInit_binascii@@Base+0x948>  // b.tstop
    2280:	adrp	x8, 4000 <PyInit_binascii@@Base+0x25fc>
    2284:	mov	w9, wzr
    2288:	mov	w11, wzr
    228c:	add	x8, x8, #0x89
    2290:	ldrb	w10, [x21]
    2294:	lsl	w9, w9, #8
    2298:	cmn	w11, #0x2
    229c:	orr	x9, x9, x10
    22a0:	b.lt	22d0 <PyInit_binascii@@Base+0x8cc>  // b.tstop
    22a4:	add	w11, w11, #0xe
    22a8:	sub	w12, w11, #0xc
    22ac:	lsr	x12, x9, x12
    22b0:	and	x12, x12, #0x3f
    22b4:	ldrb	w12, [x8, x12]
    22b8:	sub	w11, w11, #0x6
    22bc:	cmp	w11, #0xb
    22c0:	strb	w12, [x1], #1
    22c4:	b.gt	22a8 <PyInit_binascii@@Base+0x8a4>
    22c8:	sub	w11, w11, #0x6
    22cc:	b	22d4 <PyInit_binascii@@Base+0x8d0>
    22d0:	add	w11, w11, #0x8
    22d4:	subs	x22, x22, #0x1
    22d8:	add	x21, x21, #0x1
    22dc:	b.gt	2290 <PyInit_binascii@@Base+0x88c>
    22e0:	cmp	w11, #0x4
    22e4:	b.eq	232c <PyInit_binascii@@Base+0x928>  // b.none
    22e8:	cmp	w11, #0x2
    22ec:	b.ne	234c <PyInit_binascii@@Base+0x948>  // b.any
    22f0:	lsl	w9, w10, #4
    22f4:	and	x9, x9, #0x30
    22f8:	ldrb	w8, [x8, x9]
    22fc:	mov	w9, #0x3d3d                	// #15677
    2300:	sturh	w9, [x1, #1]
    2304:	strb	w8, [x1], #3
    2308:	b	234c <PyInit_binascii@@Base+0x948>
    230c:	ldr	x0, [x19, #8]
    2310:	bl	1910 <_PyLong_AsInt@plt>
    2314:	mov	w19, w0
    2318:	cmn	w0, #0x1
    231c:	b.ne	21b8 <PyInit_binascii@@Base+0x7b4>  // b.any
    2320:	bl	1870 <PyErr_Occurred@plt>
    2324:	cbnz	x0, 2168 <PyInit_binascii@@Base+0x764>
    2328:	b	21b4 <PyInit_binascii@@Base+0x7b0>
    232c:	lsl	w9, w10, #2
    2330:	and	x9, x9, #0x3c
    2334:	ldrb	w8, [x8, x9]
    2338:	mov	w9, #0x3d                  	// #61
    233c:	strb	w9, [x1, #1]
    2340:	strb	w8, [x1]
    2344:	add	x8, x1, #0x2
    2348:	mov	x1, x8
    234c:	cbz	w19, 2358 <PyInit_binascii@@Base+0x954>
    2350:	mov	w8, #0xa                   	// #10
    2354:	strb	w8, [x1], #1
    2358:	add	x0, sp, #0x78
    235c:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2360:	mov	x19, x0
    2364:	b	216c <PyInit_binascii@@Base+0x768>
    2368:	stp	x29, x30, [sp, #-48]!
    236c:	stp	x28, x21, [sp, #16]
    2370:	stp	x20, x19, [sp, #32]
    2374:	mov	x29, sp
    2378:	sub	sp, sp, #0x280
    237c:	mov	x8, x1
    2380:	mov	x19, x0
    2384:	movi	v0.2d, #0x0
    2388:	mov	x1, sp
    238c:	mov	x0, x8
    2390:	stp	q0, q0, [sp, #48]
    2394:	stp	q0, q0, [sp, #16]
    2398:	str	q0, [sp]
    239c:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    23a0:	cbz	w0, 24d0 <PyInit_binascii@@Base+0xacc>
    23a4:	ldr	x20, [sp]
    23a8:	ldr	x21, [sp, #16]
    23ac:	add	x0, sp, #0x58
    23b0:	bl	1800 <_PyBytesWriter_Init@plt>
    23b4:	mov	x8, #0x7ffffffffffffffe    	// #9223372036854775806
    23b8:	cmp	x21, x8
    23bc:	b.lt	23cc <PyInit_binascii@@Base+0x9c8>  // b.tstop
    23c0:	bl	1790 <PyErr_NoMemory@plt>
    23c4:	mov	x19, x0
    23c8:	b	24d4 <PyInit_binascii@@Base+0xad0>
    23cc:	add	x1, x21, #0x2
    23d0:	add	x0, sp, #0x58
    23d4:	bl	1830 <_PyBytesWriter_Alloc@plt>
    23d8:	cbz	x0, 24d0 <PyInit_binascii@@Base+0xacc>
    23dc:	mov	x1, x0
    23e0:	cmp	x21, #0x1
    23e4:	b.lt	2484 <PyInit_binascii@@Base+0xa80>  // b.tstop
    23e8:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    23ec:	mov	w8, wzr
    23f0:	mov	w10, wzr
    23f4:	add	x9, x21, #0x1
    23f8:	add	x11, x11, #0xbe4
    23fc:	mov	w12, #0xffffffff            	// #-1
    2400:	ldrb	w13, [x20]
    2404:	cmp	w13, #0xa
    2408:	b.eq	2454 <PyInit_binascii@@Base+0xa50>  // b.none
    240c:	cmp	w13, #0xd
    2410:	b.eq	2454 <PyInit_binascii@@Base+0xa50>  // b.none
    2414:	ldrb	w14, [x11, x13]
    2418:	cmp	w14, #0x7d
    241c:	b.eq	24ac <PyInit_binascii@@Base+0xaa8>  // b.none
    2420:	cmp	w13, #0x3a
    2424:	b.eq	24fc <PyInit_binascii@@Base+0xaf8>  // b.none
    2428:	add	w13, w10, #0x6
    242c:	cmp	w13, #0x8
    2430:	orr	w8, w14, w8, lsl #6
    2434:	b.lt	2450 <PyInit_binascii@@Base+0xa4c>  // b.tstop
    2438:	sub	w10, w10, #0x2
    243c:	lsr	w13, w8, w10
    2440:	lsl	w14, w12, w10
    2444:	strb	w13, [x1], #1
    2448:	bic	w8, w8, w14
    244c:	b	2454 <PyInit_binascii@@Base+0xa50>
    2450:	mov	w10, w13
    2454:	sub	x9, x9, #0x1
    2458:	cmp	x9, #0x1
    245c:	add	x20, x20, #0x1
    2460:	b.gt	2400 <PyInit_binascii@@Base+0x9fc>
    2464:	cbz	w10, 2484 <PyInit_binascii@@Base+0xa80>
    2468:	mov	x0, x19
    246c:	bl	17e0 <PyModule_GetState@plt>
    2470:	cbz	x0, 24d0 <PyInit_binascii@@Base+0xacc>
    2474:	ldr	x0, [x0, #8]
    2478:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    247c:	add	x1, x1, #0xca
    2480:	b	24c4 <PyInit_binascii@@Base+0xac0>
    2484:	mov	w19, wzr
    2488:	add	x0, sp, #0x58
    248c:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2490:	cbz	x0, 24d0 <PyInit_binascii@@Base+0xacc>
    2494:	mov	x1, x0
    2498:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    249c:	add	x0, x0, #0xf0
    24a0:	mov	w2, w19
    24a4:	bl	1900 <_Py_BuildValue_SizeT@plt>
    24a8:	b	23c4 <PyInit_binascii@@Base+0x9c0>
    24ac:	mov	x0, x19
    24b0:	bl	17e0 <PyModule_GetState@plt>
    24b4:	cbz	x0, 24d0 <PyInit_binascii@@Base+0xacc>
    24b8:	ldr	x0, [x0]
    24bc:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    24c0:	add	x1, x1, #0xf6a
    24c4:	bl	17c0 <PyErr_SetString@plt>
    24c8:	add	x0, sp, #0x58
    24cc:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    24d0:	mov	x19, xzr
    24d4:	ldr	x8, [sp, #8]
    24d8:	cbz	x8, 24e4 <PyInit_binascii@@Base+0xae0>
    24dc:	mov	x0, sp
    24e0:	bl	1730 <PyBuffer_Release@plt>
    24e4:	mov	x0, x19
    24e8:	add	sp, sp, #0x280
    24ec:	ldp	x20, x19, [sp, #32]
    24f0:	ldp	x28, x21, [sp, #16]
    24f4:	ldp	x29, x30, [sp], #48
    24f8:	ret
    24fc:	mov	w19, #0x1                   	// #1
    2500:	b	2488 <PyInit_binascii@@Base+0xa84>
    2504:	stp	x29, x30, [sp, #-48]!
    2508:	str	x28, [sp, #16]
    250c:	stp	x20, x19, [sp, #32]
    2510:	mov	x29, sp
    2514:	sub	sp, sp, #0x280
    2518:	mov	x19, x1
    251c:	movi	v0.2d, #0x0
    2520:	mov	x1, sp
    2524:	mov	x0, x19
    2528:	mov	w2, wzr
    252c:	stp	q0, q0, [sp, #48]
    2530:	stp	q0, q0, [sp, #16]
    2534:	str	q0, [sp]
    2538:	bl	1880 <PyObject_GetBuffer@plt>
    253c:	cbz	w0, 256c <PyInit_binascii@@Base+0xb68>
    2540:	mov	x19, xzr
    2544:	ldr	x8, [sp, #8]
    2548:	cbz	x8, 2554 <PyInit_binascii@@Base+0xb50>
    254c:	mov	x0, sp
    2550:	bl	1730 <PyBuffer_Release@plt>
    2554:	mov	x0, x19
    2558:	add	sp, sp, #0x280
    255c:	ldp	x20, x19, [sp, #32]
    2560:	ldr	x28, [sp, #16]
    2564:	ldp	x29, x30, [sp], #48
    2568:	ret
    256c:	mov	x0, sp
    2570:	mov	w1, #0x43                  	// #67
    2574:	bl	1760 <PyBuffer_IsContiguous@plt>
    2578:	cbz	w0, 25a0 <PyInit_binascii@@Base+0xb9c>
    257c:	ldr	x19, [sp]
    2580:	ldr	x20, [sp, #16]
    2584:	add	x0, sp, #0x58
    2588:	bl	1800 <_PyBytesWriter_Init@plt>
    258c:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    2590:	cmp	x20, x8
    2594:	b.lt	25c4 <PyInit_binascii@@Base+0xbc0>  // b.tstop
    2598:	bl	1790 <PyErr_NoMemory@plt>
    259c:	b	2668 <PyInit_binascii@@Base+0xc64>
    25a0:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    25a4:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    25a8:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    25ac:	add	x0, x0, #0xe69
    25b0:	add	x1, x1, #0xf3
    25b4:	add	x2, x2, #0xf9c
    25b8:	mov	x3, x19
    25bc:	bl	1810 <_PyArg_BadArgument@plt>
    25c0:	b	2540 <PyInit_binascii@@Base+0xb3c>
    25c4:	lsl	x8, x20, #1
    25c8:	add	x1, x8, #0x2
    25cc:	add	x0, sp, #0x58
    25d0:	bl	1830 <_PyBytesWriter_Alloc@plt>
    25d4:	cbz	x0, 2540 <PyInit_binascii@@Base+0xb3c>
    25d8:	mov	x1, x0
    25dc:	cmp	x20, #0x1
    25e0:	b.lt	2660 <PyInit_binascii@@Base+0xc5c>  // b.tstop
    25e4:	adrp	x8, 4000 <PyInit_binascii@@Base+0x25fc>
    25e8:	mov	w9, wzr
    25ec:	mov	w10, wzr
    25f0:	add	x8, x8, #0xfc
    25f4:	ldrb	w11, [x19]
    25f8:	lsl	w9, w9, #8
    25fc:	cmn	w10, #0x2
    2600:	orr	x9, x9, x11
    2604:	b.lt	2634 <PyInit_binascii@@Base+0xc30>  // b.tstop
    2608:	add	w10, w10, #0xe
    260c:	sub	w11, w10, #0xc
    2610:	lsr	x11, x9, x11
    2614:	and	x11, x11, #0x3f
    2618:	ldrb	w11, [x8, x11]
    261c:	sub	w10, w10, #0x6
    2620:	cmp	w10, #0xb
    2624:	strb	w11, [x1], #1
    2628:	b.gt	260c <PyInit_binascii@@Base+0xc08>
    262c:	sub	w10, w10, #0x6
    2630:	b	2638 <PyInit_binascii@@Base+0xc34>
    2634:	add	w10, w10, #0x8
    2638:	subs	x20, x20, #0x1
    263c:	add	x19, x19, #0x1
    2640:	b.gt	25f4 <PyInit_binascii@@Base+0xbf0>
    2644:	cbz	w10, 2660 <PyInit_binascii@@Base+0xc5c>
    2648:	mov	w11, #0x6                   	// #6
    264c:	sub	w10, w11, w10
    2650:	lsl	w9, w9, w10
    2654:	and	x9, x9, #0x3f
    2658:	ldrb	w8, [x8, x9]
    265c:	strb	w8, [x1], #1
    2660:	add	x0, sp, #0x58
    2664:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2668:	mov	x19, x0
    266c:	b	2544 <PyInit_binascii@@Base+0xb40>
    2670:	sub	sp, sp, #0x70
    2674:	stp	x29, x30, [sp, #80]
    2678:	str	x19, [sp, #96]
    267c:	add	x29, sp, #0x50
    2680:	mov	x8, x1
    2684:	mov	x19, x0
    2688:	movi	v0.2d, #0x0
    268c:	mov	x1, sp
    2690:	mov	x0, x8
    2694:	stp	q0, q0, [sp, #48]
    2698:	stp	q0, q0, [sp, #16]
    269c:	str	q0, [sp]
    26a0:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    26a4:	cbz	w0, 26bc <PyInit_binascii@@Base+0xcb8>
    26a8:	mov	x1, sp
    26ac:	mov	x0, x19
    26b0:	bl	3c80 <PyInit_binascii@@Base+0x227c>
    26b4:	mov	x19, x0
    26b8:	b	26c0 <PyInit_binascii@@Base+0xcbc>
    26bc:	mov	x19, xzr
    26c0:	ldr	x8, [sp, #8]
    26c4:	cbz	x8, 26d0 <PyInit_binascii@@Base+0xccc>
    26c8:	mov	x0, sp
    26cc:	bl	1730 <PyBuffer_Release@plt>
    26d0:	mov	x0, x19
    26d4:	ldr	x19, [sp, #96]
    26d8:	ldp	x29, x30, [sp, #80]
    26dc:	add	sp, sp, #0x70
    26e0:	ret
    26e4:	sub	sp, sp, #0xb0
    26e8:	stp	x29, x30, [sp, #128]
    26ec:	str	x21, [sp, #144]
    26f0:	stp	x20, x19, [sp, #160]
    26f4:	add	x29, sp, #0x80
    26f8:	mov	x20, x2
    26fc:	mov	x19, x1
    2700:	cbz	x3, 270c <PyInit_binascii@@Base+0xd08>
    2704:	ldr	x21, [x3, #16]
    2708:	b	2710 <PyInit_binascii@@Base+0xd0c>
    270c:	mov	x21, xzr
    2710:	movi	v0.2d, #0x0
    2714:	stp	q0, q0, [sp, #64]
    2718:	stp	q0, q0, [sp, #32]
    271c:	str	q0, [sp, #16]
    2720:	cbz	x19, 2734 <PyInit_binascii@@Base+0xd30>
    2724:	sub	x8, x20, #0x1
    2728:	cmp	x8, #0x2
    272c:	b.hi	2734 <PyInit_binascii@@Base+0xd30>  // b.pmore
    2730:	cbz	x3, 2768 <PyInit_binascii@@Base+0xd64>
    2734:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2738:	sub	x8, x29, #0x18
    273c:	add	x4, x4, #0x448
    2740:	mov	w5, #0x1                   	// #1
    2744:	mov	w6, #0x3                   	// #3
    2748:	mov	x0, x19
    274c:	mov	x1, x20
    2750:	mov	x2, xzr
    2754:	mov	w7, wzr
    2758:	str	x8, [sp]
    275c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2760:	mov	x19, x0
    2764:	cbz	x0, 2780 <PyInit_binascii@@Base+0xd7c>
    2768:	ldr	x0, [x19]
    276c:	add	x1, sp, #0x10
    2770:	mov	w2, wzr
    2774:	bl	1880 <PyObject_GetBuffer@plt>
    2778:	cbz	w0, 27a8 <PyInit_binascii@@Base+0xda4>
    277c:	mov	x19, xzr
    2780:	ldr	x8, [sp, #24]
    2784:	cbz	x8, 2790 <PyInit_binascii@@Base+0xd8c>
    2788:	add	x0, sp, #0x10
    278c:	bl	1730 <PyBuffer_Release@plt>
    2790:	mov	x0, x19
    2794:	ldp	x20, x19, [sp, #160]
    2798:	ldr	x21, [sp, #144]
    279c:	ldp	x29, x30, [sp, #128]
    27a0:	add	sp, sp, #0xb0
    27a4:	ret
    27a8:	add	x0, sp, #0x10
    27ac:	mov	w1, #0x43                  	// #67
    27b0:	bl	1760 <PyBuffer_IsContiguous@plt>
    27b4:	cbz	w0, 27cc <PyInit_binascii@@Base+0xdc8>
    27b8:	add	x8, x21, x20
    27bc:	cmp	x8, #0x1
    27c0:	b.ne	27f0 <PyInit_binascii@@Base+0xdec>  // b.any
    27c4:	mov	x20, xzr
    27c8:	b	2800 <PyInit_binascii@@Base+0xdfc>
    27cc:	ldr	x3, [x19]
    27d0:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    27d4:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    27d8:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    27dc:	add	x0, x0, #0xe79
    27e0:	add	x1, x1, #0x17e
    27e4:	add	x2, x2, #0xf9c
    27e8:	bl	1810 <_PyArg_BadArgument@plt>
    27ec:	b	277c <PyInit_binascii@@Base+0xd78>
    27f0:	ldr	x20, [x19, #8]
    27f4:	cmp	x8, #0x2
    27f8:	b.ne	281c <PyInit_binascii@@Base+0xe18>  // b.any
    27fc:	cbz	x20, 281c <PyInit_binascii@@Base+0xe18>
    2800:	mov	w3, #0x1                   	// #1
    2804:	ldr	x0, [sp, #16]
    2808:	ldr	x1, [sp, #32]
    280c:	mov	x2, x20
    2810:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    2814:	mov	x19, x0
    2818:	b	2780 <PyInit_binascii@@Base+0xd7c>
    281c:	ldr	x8, [x19, #16]
    2820:	ldr	x0, [x8, #8]
    2824:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2828:	ldr	x8, [x8, #4016]
    282c:	cmp	x0, x8
    2830:	b.eq	2844 <PyInit_binascii@@Base+0xe40>  // b.none
    2834:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2838:	ldr	x1, [x1, #4016]
    283c:	bl	18e0 <PyType_IsSubtype@plt>
    2840:	cbz	w0, 2860 <PyInit_binascii@@Base+0xe5c>
    2844:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2848:	ldr	x8, [x8, #4040]
    284c:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    2850:	add	x1, x1, #0xfae
    2854:	ldr	x0, [x8]
    2858:	bl	17c0 <PyErr_SetString@plt>
    285c:	b	277c <PyInit_binascii@@Base+0xd78>
    2860:	ldr	x0, [x19, #16]
    2864:	bl	1910 <_PyLong_AsInt@plt>
    2868:	cmn	w0, #0x1
    286c:	b.eq	2878 <PyInit_binascii@@Base+0xe74>  // b.none
    2870:	mov	w3, w0
    2874:	b	2804 <PyInit_binascii@@Base+0xe00>
    2878:	bl	1870 <PyErr_Occurred@plt>
    287c:	cbnz	x0, 277c <PyInit_binascii@@Base+0xd78>
    2880:	mov	w3, #0xffffffff            	// #-1
    2884:	b	2804 <PyInit_binascii@@Base+0xe00>
    2888:	sub	sp, sp, #0xb0
    288c:	stp	x29, x30, [sp, #128]
    2890:	str	x21, [sp, #144]
    2894:	stp	x20, x19, [sp, #160]
    2898:	add	x29, sp, #0x80
    289c:	mov	x20, x2
    28a0:	mov	x19, x1
    28a4:	cbz	x3, 28b0 <PyInit_binascii@@Base+0xeac>
    28a8:	ldr	x21, [x3, #16]
    28ac:	b	28b4 <PyInit_binascii@@Base+0xeb0>
    28b0:	mov	x21, xzr
    28b4:	movi	v0.2d, #0x0
    28b8:	stp	q0, q0, [sp, #64]
    28bc:	stp	q0, q0, [sp, #32]
    28c0:	str	q0, [sp, #16]
    28c4:	cbz	x19, 28d8 <PyInit_binascii@@Base+0xed4>
    28c8:	sub	x8, x20, #0x1
    28cc:	cmp	x8, #0x2
    28d0:	b.hi	28d8 <PyInit_binascii@@Base+0xed4>  // b.pmore
    28d4:	cbz	x3, 290c <PyInit_binascii@@Base+0xf08>
    28d8:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    28dc:	sub	x8, x29, #0x18
    28e0:	add	x4, x4, #0x488
    28e4:	mov	w5, #0x1                   	// #1
    28e8:	mov	w6, #0x3                   	// #3
    28ec:	mov	x0, x19
    28f0:	mov	x1, x20
    28f4:	mov	x2, xzr
    28f8:	mov	w7, wzr
    28fc:	str	x8, [sp]
    2900:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2904:	mov	x19, x0
    2908:	cbz	x0, 2924 <PyInit_binascii@@Base+0xf20>
    290c:	ldr	x0, [x19]
    2910:	add	x1, sp, #0x10
    2914:	mov	w2, wzr
    2918:	bl	1880 <PyObject_GetBuffer@plt>
    291c:	cbz	w0, 294c <PyInit_binascii@@Base+0xf48>
    2920:	mov	x19, xzr
    2924:	ldr	x8, [sp, #24]
    2928:	cbz	x8, 2934 <PyInit_binascii@@Base+0xf30>
    292c:	add	x0, sp, #0x10
    2930:	bl	1730 <PyBuffer_Release@plt>
    2934:	mov	x0, x19
    2938:	ldp	x20, x19, [sp, #160]
    293c:	ldr	x21, [sp, #144]
    2940:	ldp	x29, x30, [sp, #128]
    2944:	add	sp, sp, #0xb0
    2948:	ret
    294c:	add	x0, sp, #0x10
    2950:	mov	w1, #0x43                  	// #67
    2954:	bl	1760 <PyBuffer_IsContiguous@plt>
    2958:	cbz	w0, 2970 <PyInit_binascii@@Base+0xf6c>
    295c:	add	x8, x21, x20
    2960:	cmp	x8, #0x1
    2964:	b.ne	2994 <PyInit_binascii@@Base+0xf90>  // b.any
    2968:	mov	x20, xzr
    296c:	b	29a4 <PyInit_binascii@@Base+0xfa0>
    2970:	ldr	x3, [x19]
    2974:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2978:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    297c:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    2980:	add	x0, x0, #0xe83
    2984:	add	x1, x1, #0x17e
    2988:	add	x2, x2, #0xf9c
    298c:	bl	1810 <_PyArg_BadArgument@plt>
    2990:	b	2920 <PyInit_binascii@@Base+0xf1c>
    2994:	ldr	x20, [x19, #8]
    2998:	cmp	x8, #0x2
    299c:	b.ne	29c0 <PyInit_binascii@@Base+0xfbc>  // b.any
    29a0:	cbz	x20, 29c0 <PyInit_binascii@@Base+0xfbc>
    29a4:	mov	w3, #0x1                   	// #1
    29a8:	ldr	x0, [sp, #16]
    29ac:	ldr	x1, [sp, #32]
    29b0:	mov	x2, x20
    29b4:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    29b8:	mov	x19, x0
    29bc:	b	2924 <PyInit_binascii@@Base+0xf20>
    29c0:	ldr	x8, [x19, #16]
    29c4:	ldr	x0, [x8, #8]
    29c8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    29cc:	ldr	x8, [x8, #4016]
    29d0:	cmp	x0, x8
    29d4:	b.eq	29e8 <PyInit_binascii@@Base+0xfe4>  // b.none
    29d8:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    29dc:	ldr	x1, [x1, #4016]
    29e0:	bl	18e0 <PyType_IsSubtype@plt>
    29e4:	cbz	w0, 2a04 <PyInit_binascii@@Base+0x1000>
    29e8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    29ec:	ldr	x8, [x8, #4040]
    29f0:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    29f4:	add	x1, x1, #0xfae
    29f8:	ldr	x0, [x8]
    29fc:	bl	17c0 <PyErr_SetString@plt>
    2a00:	b	2920 <PyInit_binascii@@Base+0xf1c>
    2a04:	ldr	x0, [x19, #16]
    2a08:	bl	1910 <_PyLong_AsInt@plt>
    2a0c:	cmn	w0, #0x1
    2a10:	b.eq	2a1c <PyInit_binascii@@Base+0x1018>  // b.none
    2a14:	mov	w3, w0
    2a18:	b	29a8 <PyInit_binascii@@Base+0xfa4>
    2a1c:	bl	1870 <PyErr_Occurred@plt>
    2a20:	cbnz	x0, 2920 <PyInit_binascii@@Base+0xf1c>
    2a24:	mov	w3, #0xffffffff            	// #-1
    2a28:	b	29a8 <PyInit_binascii@@Base+0xfa4>
    2a2c:	sub	sp, sp, #0x70
    2a30:	stp	x29, x30, [sp, #80]
    2a34:	str	x19, [sp, #96]
    2a38:	add	x29, sp, #0x50
    2a3c:	mov	x8, x1
    2a40:	mov	x19, x0
    2a44:	movi	v0.2d, #0x0
    2a48:	mov	x1, sp
    2a4c:	mov	x0, x8
    2a50:	stp	q0, q0, [sp, #48]
    2a54:	stp	q0, q0, [sp, #16]
    2a58:	str	q0, [sp]
    2a5c:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    2a60:	cbz	w0, 2a78 <PyInit_binascii@@Base+0x1074>
    2a64:	mov	x1, sp
    2a68:	mov	x0, x19
    2a6c:	bl	3c80 <PyInit_binascii@@Base+0x227c>
    2a70:	mov	x19, x0
    2a74:	b	2a7c <PyInit_binascii@@Base+0x1078>
    2a78:	mov	x19, xzr
    2a7c:	ldr	x8, [sp, #8]
    2a80:	cbz	x8, 2a8c <PyInit_binascii@@Base+0x1088>
    2a84:	mov	x0, sp
    2a88:	bl	1730 <PyBuffer_Release@plt>
    2a8c:	mov	x0, x19
    2a90:	ldr	x19, [sp, #96]
    2a94:	ldp	x29, x30, [sp, #80]
    2a98:	add	sp, sp, #0x70
    2a9c:	ret
    2aa0:	stp	x29, x30, [sp, #-48]!
    2aa4:	str	x28, [sp, #16]
    2aa8:	stp	x20, x19, [sp, #32]
    2aac:	mov	x29, sp
    2ab0:	sub	sp, sp, #0x280
    2ab4:	mov	x19, x1
    2ab8:	movi	v0.2d, #0x0
    2abc:	mov	x1, sp
    2ac0:	mov	x0, x19
    2ac4:	mov	w2, wzr
    2ac8:	stp	q0, q0, [sp, #48]
    2acc:	stp	q0, q0, [sp, #16]
    2ad0:	str	q0, [sp]
    2ad4:	bl	1880 <PyObject_GetBuffer@plt>
    2ad8:	cbz	w0, 2b08 <PyInit_binascii@@Base+0x1104>
    2adc:	mov	x19, xzr
    2ae0:	ldr	x8, [sp, #8]
    2ae4:	cbz	x8, 2af0 <PyInit_binascii@@Base+0x10ec>
    2ae8:	mov	x0, sp
    2aec:	bl	1730 <PyBuffer_Release@plt>
    2af0:	mov	x0, x19
    2af4:	add	sp, sp, #0x280
    2af8:	ldp	x20, x19, [sp, #32]
    2afc:	ldr	x28, [sp, #16]
    2b00:	ldp	x29, x30, [sp], #48
    2b04:	ret
    2b08:	mov	x0, sp
    2b0c:	mov	w1, #0x43                  	// #67
    2b10:	bl	1760 <PyBuffer_IsContiguous@plt>
    2b14:	cbz	w0, 2b38 <PyInit_binascii@@Base+0x1134>
    2b18:	add	x0, sp, #0x58
    2b1c:	bl	1800 <_PyBytesWriter_Init@plt>
    2b20:	ldr	x19, [sp, #16]
    2b24:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    2b28:	cmp	x19, x8
    2b2c:	b.lt	2b5c <PyInit_binascii@@Base+0x1158>  // b.tstop
    2b30:	bl	1790 <PyErr_NoMemory@plt>
    2b34:	b	2c1c <PyInit_binascii@@Base+0x1218>
    2b38:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2b3c:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2b40:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    2b44:	add	x0, x0, #0xe8b
    2b48:	add	x1, x1, #0xf3
    2b4c:	add	x2, x2, #0xf9c
    2b50:	mov	x3, x19
    2b54:	bl	1810 <_PyArg_BadArgument@plt>
    2b58:	b	2adc <PyInit_binascii@@Base+0x10d8>
    2b5c:	ldr	x20, [sp]
    2b60:	lsl	x8, x19, #1
    2b64:	add	x1, x8, #0x2
    2b68:	add	x0, sp, #0x58
    2b6c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2b70:	cbz	x0, 2adc <PyInit_binascii@@Base+0x10d8>
    2b74:	mov	x1, x0
    2b78:	cmp	x19, #0x1
    2b7c:	b.lt	2c14 <PyInit_binascii@@Base+0x1210>  // b.tstop
    2b80:	mov	x10, xzr
    2b84:	add	x8, x20, #0x1
    2b88:	mov	w9, #0x90                  	// #144
    2b8c:	ldrb	w11, [x20, x10]
    2b90:	cmp	w11, #0x90
    2b94:	b.ne	2ba0 <PyInit_binascii@@Base+0x119c>  // b.any
    2b98:	strh	w9, [x1], #2
    2b9c:	b	2c08 <PyInit_binascii@@Base+0x1204>
    2ba0:	mov	x16, xzr
    2ba4:	add	x13, x10, #0xff
    2ba8:	add	x14, x8, x10
    2bac:	add	x12, x10, x16
    2bb0:	mov	x15, x16
    2bb4:	add	x16, x12, #0x1
    2bb8:	cmp	x16, x19
    2bbc:	b.ge	2bd8 <PyInit_binascii@@Base+0x11d4>  // b.tcont
    2bc0:	cmp	x16, x13
    2bc4:	b.ge	2bd8 <PyInit_binascii@@Base+0x11d4>  // b.tcont
    2bc8:	ldrb	w16, [x14, x15]
    2bcc:	cmp	w16, w11
    2bd0:	add	x16, x15, #0x1
    2bd4:	b.eq	2bac <PyInit_binascii@@Base+0x11a8>  // b.none
    2bd8:	add	x13, x15, #0x1
    2bdc:	mov	x14, x1
    2be0:	cmp	x13, #0x4
    2be4:	strb	w11, [x14], #1
    2be8:	b.lt	2c04 <PyInit_binascii@@Base+0x1200>  // b.tstop
    2bec:	add	x10, x1, #0x3
    2bf0:	strb	w9, [x1, #1]
    2bf4:	strb	w13, [x1, #2]
    2bf8:	mov	x1, x10
    2bfc:	mov	x10, x12
    2c00:	b	2c08 <PyInit_binascii@@Base+0x1204>
    2c04:	mov	x1, x14
    2c08:	add	x10, x10, #0x1
    2c0c:	cmp	x10, x19
    2c10:	b.lt	2b8c <PyInit_binascii@@Base+0x1188>  // b.tstop
    2c14:	add	x0, sp, #0x58
    2c18:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2c1c:	mov	x19, x0
    2c20:	b	2ae0 <PyInit_binascii@@Base+0x10dc>
    2c24:	stp	x29, x30, [sp, #-80]!
    2c28:	stp	x28, x25, [sp, #16]
    2c2c:	stp	x24, x23, [sp, #32]
    2c30:	stp	x22, x21, [sp, #48]
    2c34:	stp	x20, x19, [sp, #64]
    2c38:	mov	x29, sp
    2c3c:	sub	sp, sp, #0x280
    2c40:	mov	x20, x1
    2c44:	mov	x19, x0
    2c48:	movi	v0.2d, #0x0
    2c4c:	mov	x1, sp
    2c50:	mov	x0, x20
    2c54:	mov	w2, wzr
    2c58:	stp	q0, q0, [sp, #48]
    2c5c:	stp	q0, q0, [sp, #16]
    2c60:	str	q0, [sp]
    2c64:	bl	1880 <PyObject_GetBuffer@plt>
    2c68:	cbz	w0, 2ca0 <PyInit_binascii@@Base+0x129c>
    2c6c:	mov	x19, xzr
    2c70:	ldr	x8, [sp, #8]
    2c74:	cbz	x8, 2c80 <PyInit_binascii@@Base+0x127c>
    2c78:	mov	x0, sp
    2c7c:	bl	1730 <PyBuffer_Release@plt>
    2c80:	mov	x0, x19
    2c84:	add	sp, sp, #0x280
    2c88:	ldp	x20, x19, [sp, #64]
    2c8c:	ldp	x22, x21, [sp, #48]
    2c90:	ldp	x24, x23, [sp, #32]
    2c94:	ldp	x28, x25, [sp, #16]
    2c98:	ldp	x29, x30, [sp], #80
    2c9c:	ret
    2ca0:	mov	x0, sp
    2ca4:	mov	w1, #0x43                  	// #67
    2ca8:	bl	1760 <PyBuffer_IsContiguous@plt>
    2cac:	cbz	w0, 2cd8 <PyInit_binascii@@Base+0x12d4>
    2cb0:	ldr	x21, [sp]
    2cb4:	ldr	x20, [sp, #16]
    2cb8:	add	x0, sp, #0x58
    2cbc:	bl	1800 <_PyBytesWriter_Init@plt>
    2cc0:	cbz	x20, 2cfc <PyInit_binascii@@Base+0x12f8>
    2cc4:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    2cc8:	cmp	x20, x8
    2ccc:	b.lt	2d14 <PyInit_binascii@@Base+0x1310>  // b.tstop
    2cd0:	bl	1790 <PyErr_NoMemory@plt>
    2cd4:	b	2d0c <PyInit_binascii@@Base+0x1308>
    2cd8:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2cdc:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2ce0:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    2ce4:	add	x0, x0, #0xe97
    2ce8:	add	x1, x1, #0xf3
    2cec:	add	x2, x2, #0xf9c
    2cf0:	mov	x3, x20
    2cf4:	bl	1810 <_PyArg_BadArgument@plt>
    2cf8:	b	2c6c <PyInit_binascii@@Base+0x1268>
    2cfc:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    2d00:	add	x0, x0, #0x18d
    2d04:	mov	x1, xzr
    2d08:	bl	1770 <PyBytes_FromStringAndSize@plt>
    2d0c:	mov	x19, x0
    2d10:	b	2c70 <PyInit_binascii@@Base+0x126c>
    2d14:	add	x0, sp, #0x58
    2d18:	mov	x1, x20
    2d1c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2d20:	cbz	x0, 2c6c <PyInit_binascii@@Base+0x1268>
    2d24:	mov	w8, #0x1                   	// #1
    2d28:	subs	x22, x20, #0x1
    2d2c:	str	w8, [sp, #116]
    2d30:	b.mi	2e2c <PyInit_binascii@@Base+0x1428>  // b.first
    2d34:	mov	x8, x21
    2d38:	ldrb	w9, [x8], #1
    2d3c:	mov	x1, x0
    2d40:	cmp	w9, #0x90
    2d44:	b.ne	2d80 <PyInit_binascii@@Base+0x137c>  // b.any
    2d48:	subs	x22, x20, #0x2
    2d4c:	b.mi	2e2c <PyInit_binascii@@Base+0x1428>  // b.first
    2d50:	ldr	x10, [sp, #104]
    2d54:	ldrb	w8, [x8]
    2d58:	sub	x10, x10, #0x1
    2d5c:	str	x10, [sp, #104]
    2d60:	cbz	w8, 2d7c <PyInit_binascii@@Base+0x1378>
    2d64:	mov	x0, x19
    2d68:	bl	17e0 <PyModule_GetState@plt>
    2d6c:	cbz	x0, 2c6c <PyInit_binascii@@Base+0x1268>
    2d70:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2d74:	add	x1, x1, #0x18e
    2d78:	b	2e44 <PyInit_binascii@@Base+0x1440>
    2d7c:	add	x8, x21, #0x2
    2d80:	cmp	x22, #0x1
    2d84:	strb	w9, [x1], #1
    2d88:	b.lt	2e20 <PyInit_binascii@@Base+0x141c>  // b.tstop
    2d8c:	mov	w23, #0x90                  	// #144
    2d90:	mov	x24, x8
    2d94:	ldrb	w9, [x24], #1
    2d98:	cmp	w9, #0x90
    2d9c:	b.ne	2e04 <PyInit_binascii@@Base+0x1400>  // b.any
    2da0:	cmp	x22, #0x1
    2da4:	b.le	2e2c <PyInit_binascii@@Base+0x1428>
    2da8:	ldr	x9, [sp, #104]
    2dac:	ldrb	w25, [x8, #1]
    2db0:	sub	x22, x22, #0x2
    2db4:	add	x24, x8, #0x2
    2db8:	sub	x8, x9, #0x1
    2dbc:	str	x8, [sp, #104]
    2dc0:	cbz	x25, 2e10 <PyInit_binascii@@Base+0x140c>
    2dc4:	cmp	w25, #0x1
    2dc8:	b.eq	2e14 <PyInit_binascii@@Base+0x1410>  // b.none
    2dcc:	ldurb	w20, [x1, #-1]
    2dd0:	sub	x2, x25, #0x1
    2dd4:	add	x0, sp, #0x58
    2dd8:	bl	17a0 <_PyBytesWriter_Prepare@plt>
    2ddc:	cbz	x0, 2e4c <PyInit_binascii@@Base+0x1448>
    2de0:	sub	w8, w25, #0x1
    2de4:	and	x2, x8, #0xff
    2de8:	mov	w1, w20
    2dec:	mov	x21, x0
    2df0:	bl	17f0 <memset@plt>
    2df4:	sub	w8, w25, #0x2
    2df8:	add	x8, x21, w8, uxtb
    2dfc:	add	x1, x8, #0x1
    2e00:	b	2e14 <PyInit_binascii@@Base+0x1410>
    2e04:	sub	x22, x22, #0x1
    2e08:	strb	w9, [x1], #1
    2e0c:	b	2e14 <PyInit_binascii@@Base+0x1410>
    2e10:	strb	w23, [x1], #1
    2e14:	cmp	x22, #0x0
    2e18:	mov	x8, x24
    2e1c:	b.gt	2d94 <PyInit_binascii@@Base+0x1390>
    2e20:	add	x0, sp, #0x58
    2e24:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2e28:	b	2d0c <PyInit_binascii@@Base+0x1308>
    2e2c:	mov	x0, x19
    2e30:	bl	17e0 <PyModule_GetState@plt>
    2e34:	cbz	x0, 2c6c <PyInit_binascii@@Base+0x1268>
    2e38:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    2e3c:	add	x0, x0, #0x8
    2e40:	add	x1, x1, #0x18d
    2e44:	ldr	x0, [x0]
    2e48:	bl	17c0 <PyErr_SetString@plt>
    2e4c:	add	x0, sp, #0x58
    2e50:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    2e54:	b	2c6c <PyInit_binascii@@Base+0x1268>
    2e58:	sub	sp, sp, #0x70
    2e5c:	stp	x29, x30, [sp, #80]
    2e60:	str	x19, [sp, #96]
    2e64:	add	x29, sp, #0x50
    2e68:	mov	x19, x1
    2e6c:	movi	v0.2d, #0x0
    2e70:	cmp	x2, #0x2
    2e74:	stp	q0, q0, [sp, #48]
    2e78:	stp	q0, q0, [sp, #16]
    2e7c:	str	q0, [sp]
    2e80:	b.eq	2ea4 <PyInit_binascii@@Base+0x14a0>  // b.none
    2e84:	mov	x8, x2
    2e88:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2e8c:	add	x0, x0, #0xea5
    2e90:	mov	w2, #0x2                   	// #2
    2e94:	mov	w3, #0x2                   	// #2
    2e98:	mov	x1, x8
    2e9c:	bl	1860 <_PyArg_CheckPositional@plt>
    2ea0:	cbz	w0, 2f2c <PyInit_binascii@@Base+0x1528>
    2ea4:	ldr	x0, [x19]
    2ea8:	mov	x1, sp
    2eac:	mov	w2, wzr
    2eb0:	bl	1880 <PyObject_GetBuffer@plt>
    2eb4:	cbnz	w0, 2f2c <PyInit_binascii@@Base+0x1528>
    2eb8:	mov	x0, sp
    2ebc:	mov	w1, #0x43                  	// #67
    2ec0:	bl	1760 <PyBuffer_IsContiguous@plt>
    2ec4:	cbz	w0, 2f0c <PyInit_binascii@@Base+0x1508>
    2ec8:	ldr	x8, [x19, #8]
    2ecc:	ldr	x0, [x8, #8]
    2ed0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2ed4:	ldr	x8, [x8, #4016]
    2ed8:	cmp	x0, x8
    2edc:	b.eq	2ef0 <PyInit_binascii@@Base+0x14ec>  // b.none
    2ee0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2ee4:	ldr	x1, [x1, #4016]
    2ee8:	bl	18e0 <PyType_IsSubtype@plt>
    2eec:	cbz	w0, 2f54 <PyInit_binascii@@Base+0x1550>
    2ef0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2ef4:	ldr	x8, [x8, #4040]
    2ef8:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    2efc:	add	x1, x1, #0xfae
    2f00:	ldr	x0, [x8]
    2f04:	bl	17c0 <PyErr_SetString@plt>
    2f08:	b	2f2c <PyInit_binascii@@Base+0x1528>
    2f0c:	ldr	x3, [x19]
    2f10:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2f14:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    2f18:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    2f1c:	add	x0, x0, #0xea5
    2f20:	add	x1, x1, #0xf91
    2f24:	add	x2, x2, #0xf9c
    2f28:	bl	1810 <_PyArg_BadArgument@plt>
    2f2c:	mov	x19, xzr
    2f30:	ldr	x8, [sp, #8]
    2f34:	cbz	x8, 2f40 <PyInit_binascii@@Base+0x153c>
    2f38:	mov	x0, sp
    2f3c:	bl	1730 <PyBuffer_Release@plt>
    2f40:	mov	x0, x19
    2f44:	ldr	x19, [sp, #96]
    2f48:	ldp	x29, x30, [sp, #80]
    2f4c:	add	sp, sp, #0x70
    2f50:	ret
    2f54:	ldr	x0, [x19, #8]
    2f58:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    2f5c:	mov	x19, x0
    2f60:	cmn	w19, #0x1
    2f64:	b.ne	2f70 <PyInit_binascii@@Base+0x156c>  // b.any
    2f68:	bl	1870 <PyErr_Occurred@plt>
    2f6c:	cbnz	x0, 2f2c <PyInit_binascii@@Base+0x1528>
    2f70:	ldr	x9, [sp, #16]
    2f74:	and	w0, w19, #0xffff
    2f78:	cmp	x9, #0x1
    2f7c:	b.lt	2fb0 <PyInit_binascii@@Base+0x15ac>  // b.tstop
    2f80:	ldr	x8, [sp]
    2f84:	adrp	x10, 4000 <PyInit_binascii@@Base+0x25fc>
    2f88:	add	x9, x9, #0x1
    2f8c:	add	x10, x10, #0xce4
    2f90:	ldrb	w11, [x8], #1
    2f94:	ubfiz	w12, w0, #8, #8
    2f98:	sub	x9, x9, #0x1
    2f9c:	cmp	x9, #0x1
    2fa0:	eor	w11, w11, w0, lsr #8
    2fa4:	ldrh	w11, [x10, w11, uxtw #1]
    2fa8:	eor	w0, w12, w11
    2fac:	b.gt	2f90 <PyInit_binascii@@Base+0x158c>
    2fb0:	bl	1890 <PyLong_FromUnsignedLong@plt>
    2fb4:	mov	x19, x0
    2fb8:	b	2f30 <PyInit_binascii@@Base+0x152c>
    2fbc:	sub	sp, sp, #0x70
    2fc0:	stp	x29, x30, [sp, #80]
    2fc4:	stp	x20, x19, [sp, #96]
    2fc8:	add	x29, sp, #0x50
    2fcc:	sub	x8, x2, #0x1
    2fd0:	mov	x20, x2
    2fd4:	mov	x19, x1
    2fd8:	movi	v0.2d, #0x0
    2fdc:	cmp	x8, #0x2
    2fe0:	stp	q0, q0, [sp, #48]
    2fe4:	stp	q0, q0, [sp, #16]
    2fe8:	str	q0, [sp]
    2fec:	b.cc	300c <PyInit_binascii@@Base+0x1608>  // b.lo, b.ul, b.last
    2ff0:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    2ff4:	add	x0, x0, #0xead
    2ff8:	mov	w2, #0x1                   	// #1
    2ffc:	mov	w3, #0x2                   	// #2
    3000:	mov	x1, x20
    3004:	bl	1860 <_PyArg_CheckPositional@plt>
    3008:	cbz	w0, 3020 <PyInit_binascii@@Base+0x161c>
    300c:	ldr	x0, [x19]
    3010:	mov	x1, sp
    3014:	mov	w2, wzr
    3018:	bl	1880 <PyObject_GetBuffer@plt>
    301c:	cbz	w0, 3048 <PyInit_binascii@@Base+0x1644>
    3020:	mov	x19, xzr
    3024:	ldr	x8, [sp, #8]
    3028:	cbz	x8, 3034 <PyInit_binascii@@Base+0x1630>
    302c:	mov	x0, sp
    3030:	bl	1730 <PyBuffer_Release@plt>
    3034:	mov	x0, x19
    3038:	ldp	x20, x19, [sp, #96]
    303c:	ldp	x29, x30, [sp, #80]
    3040:	add	sp, sp, #0x70
    3044:	ret
    3048:	mov	x0, sp
    304c:	mov	w1, #0x43                  	// #67
    3050:	bl	1760 <PyBuffer_IsContiguous@plt>
    3054:	cbz	w0, 3090 <PyInit_binascii@@Base+0x168c>
    3058:	cmp	x20, #0x2
    305c:	b.ge	30b4 <PyInit_binascii@@Base+0x16b0>  // b.tcont
    3060:	mov	x0, xzr
    3064:	ldr	x1, [sp]
    3068:	ldr	w2, [sp, #16]
    306c:	and	x0, x0, #0xffffffff
    3070:	bl	1750 <crc32@plt>
    3074:	mov	x19, x0
    3078:	cmn	w19, #0x1
    307c:	b.eq	30f8 <PyInit_binascii@@Base+0x16f4>  // b.none
    3080:	and	x0, x19, #0xffffffff
    3084:	bl	1890 <PyLong_FromUnsignedLong@plt>
    3088:	mov	x19, x0
    308c:	b	3024 <PyInit_binascii@@Base+0x1620>
    3090:	ldr	x3, [x19]
    3094:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    3098:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    309c:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    30a0:	add	x0, x0, #0xead
    30a4:	add	x1, x1, #0xf91
    30a8:	add	x2, x2, #0xf9c
    30ac:	bl	1810 <_PyArg_BadArgument@plt>
    30b0:	b	3020 <PyInit_binascii@@Base+0x161c>
    30b4:	ldr	x8, [x19, #8]
    30b8:	ldr	x0, [x8, #8]
    30bc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    30c0:	ldr	x8, [x8, #4016]
    30c4:	cmp	x0, x8
    30c8:	b.eq	30dc <PyInit_binascii@@Base+0x16d8>  // b.none
    30cc:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    30d0:	ldr	x1, [x1, #4016]
    30d4:	bl	18e0 <PyType_IsSubtype@plt>
    30d8:	cbz	w0, 3104 <PyInit_binascii@@Base+0x1700>
    30dc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    30e0:	ldr	x8, [x8, #4040]
    30e4:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    30e8:	add	x1, x1, #0xfae
    30ec:	ldr	x0, [x8]
    30f0:	bl	17c0 <PyErr_SetString@plt>
    30f4:	b	3020 <PyInit_binascii@@Base+0x161c>
    30f8:	bl	1870 <PyErr_Occurred@plt>
    30fc:	cbnz	x0, 3020 <PyInit_binascii@@Base+0x161c>
    3100:	b	3080 <PyInit_binascii@@Base+0x167c>
    3104:	ldr	x0, [x19, #8]
    3108:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    310c:	cmn	w0, #0x1
    3110:	b.ne	3064 <PyInit_binascii@@Base+0x1660>  // b.any
    3114:	bl	1870 <PyErr_Occurred@plt>
    3118:	cbnz	x0, 3020 <PyInit_binascii@@Base+0x161c>
    311c:	mov	w0, #0xffffffff            	// #-1
    3120:	b	3064 <PyInit_binascii@@Base+0x1660>
    3124:	sub	sp, sp, #0xa0
    3128:	stp	x29, x30, [sp, #112]
    312c:	stp	x22, x21, [sp, #128]
    3130:	stp	x20, x19, [sp, #144]
    3134:	add	x29, sp, #0x70
    3138:	mov	x20, x2
    313c:	mov	x19, x1
    3140:	cbz	x3, 314c <PyInit_binascii@@Base+0x1748>
    3144:	ldr	x21, [x3, #16]
    3148:	b	3150 <PyInit_binascii@@Base+0x174c>
    314c:	mov	x21, xzr
    3150:	movi	v0.2d, #0x0
    3154:	stp	q0, q0, [sp, #64]
    3158:	stp	q0, q0, [sp, #32]
    315c:	str	q0, [sp, #16]
    3160:	cbz	x19, 3174 <PyInit_binascii@@Base+0x1770>
    3164:	sub	x8, x20, #0x1
    3168:	cmp	x8, #0x1
    316c:	b.hi	3174 <PyInit_binascii@@Base+0x1770>  // b.pmore
    3170:	cbz	x3, 31a8 <PyInit_binascii@@Base+0x17a4>
    3174:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    3178:	sub	x8, x29, #0x10
    317c:	add	x4, x4, #0x4c8
    3180:	mov	w5, #0x1                   	// #1
    3184:	mov	w6, #0x2                   	// #2
    3188:	mov	x0, x19
    318c:	mov	x1, x20
    3190:	mov	x2, xzr
    3194:	mov	w7, wzr
    3198:	str	x8, [sp]
    319c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    31a0:	mov	x19, x0
    31a4:	cbz	x0, 33b4 <PyInit_binascii@@Base+0x19b0>
    31a8:	ldr	x0, [x19]
    31ac:	add	x1, sp, #0x10
    31b0:	bl	3b68 <PyInit_binascii@@Base+0x2164>
    31b4:	cbz	w0, 3394 <PyInit_binascii@@Base+0x1990>
    31b8:	add	x8, x21, x20
    31bc:	cmp	x8, #0x1
    31c0:	b.ne	334c <PyInit_binascii@@Base+0x1948>  // b.any
    31c4:	mov	w19, wzr
    31c8:	ldr	x21, [sp, #32]
    31cc:	ldr	x22, [sp, #16]
    31d0:	mov	x0, x21
    31d4:	bl	1920 <PyMem_Malloc@plt>
    31d8:	cbz	x0, 3390 <PyInit_binascii@@Base+0x198c>
    31dc:	mov	w1, wzr
    31e0:	mov	x2, x21
    31e4:	mov	x20, x0
    31e8:	bl	17f0 <memset@plt>
    31ec:	cmp	x21, #0x1
    31f0:	b.lt	339c <PyInit_binascii@@Base+0x1998>  // b.tstop
    31f4:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    31f8:	ldr	x9, [x9, #4056]
    31fc:	mov	x12, xzr
    3200:	mov	x1, xzr
    3204:	mov	w8, #0x3d                  	// #61
    3208:	mov	w10, #0x1                   	// #1
    320c:	mov	w11, #0x20                  	// #32
    3210:	ldrb	w13, [x22, x12]
    3214:	cmp	w13, #0x3d
    3218:	b.ne	3268 <PyInit_binascii@@Base+0x1864>  // b.any
    321c:	add	x13, x12, #0x1
    3220:	cmp	x13, x21
    3224:	b.ge	33a0 <PyInit_binascii@@Base+0x199c>  // b.tcont
    3228:	ldrb	w14, [x22, x13]
    322c:	cmp	w14, #0xa
    3230:	b.eq	3334 <PyInit_binascii@@Base+0x1930>  // b.none
    3234:	cmp	w14, #0x3d
    3238:	b.eq	3294 <PyInit_binascii@@Base+0x1890>  // b.none
    323c:	cmp	w14, #0xd
    3240:	b.ne	32a4 <PyInit_binascii@@Base+0x18a0>  // b.any
    3244:	add	x12, x12, #0x2
    3248:	cmp	x21, x12
    324c:	b.eq	3330 <PyInit_binascii@@Base+0x192c>  // b.none
    3250:	ldrb	w13, [x22, x12]
    3254:	add	x12, x12, #0x1
    3258:	cmp	w13, #0xa
    325c:	b.ne	3248 <PyInit_binascii@@Base+0x1844>  // b.any
    3260:	sub	x13, x12, #0x1
    3264:	b	3334 <PyInit_binascii@@Base+0x1930>
    3268:	cbz	w19, 3284 <PyInit_binascii@@Base+0x1880>
    326c:	cmp	w13, #0x5f
    3270:	b.ne	3284 <PyInit_binascii@@Base+0x1880>  // b.any
    3274:	strb	w11, [x20, x1]
    3278:	add	x1, x1, #0x1
    327c:	add	x13, x12, #0x1
    3280:	b	333c <PyInit_binascii@@Base+0x1938>
    3284:	strb	w13, [x20, x1]
    3288:	add	x13, x12, #0x1
    328c:	add	x1, x1, #0x1
    3290:	b	333c <PyInit_binascii@@Base+0x1938>
    3294:	strb	w8, [x20, x1]
    3298:	add	x1, x1, #0x1
    329c:	add	x13, x12, #0x2
    32a0:	b	333c <PyInit_binascii@@Base+0x1938>
    32a4:	add	x15, x12, #0x2
    32a8:	cmp	x15, x21
    32ac:	b.ge	3320 <PyInit_binascii@@Base+0x191c>  // b.tcont
    32b0:	sub	w16, w14, #0x30
    32b4:	and	w16, w16, #0xff
    32b8:	cmp	w16, #0xa
    32bc:	b.cc	32d8 <PyInit_binascii@@Base+0x18d4>  // b.lo, b.ul, b.last
    32c0:	sub	w16, w14, #0x41
    32c4:	cmp	w16, #0x25
    32c8:	b.hi	3320 <PyInit_binascii@@Base+0x191c>  // b.pmore
    32cc:	lsl	x16, x10, x16
    32d0:	tst	x16, #0x3f0000003f
    32d4:	b.eq	3320 <PyInit_binascii@@Base+0x191c>  // b.none
    32d8:	ldrb	w15, [x22, x15]
    32dc:	sub	w16, w15, #0x30
    32e0:	and	w16, w16, #0xff
    32e4:	cmp	w16, #0xa
    32e8:	b.cc	3304 <PyInit_binascii@@Base+0x1900>  // b.lo, b.ul, b.last
    32ec:	sub	w16, w15, #0x41
    32f0:	cmp	w16, #0x25
    32f4:	b.hi	3320 <PyInit_binascii@@Base+0x191c>  // b.pmore
    32f8:	lsl	x16, x10, x16
    32fc:	tst	x16, #0x3f0000003f
    3300:	b.eq	3320 <PyInit_binascii@@Base+0x191c>  // b.none
    3304:	ldrb	w13, [x9, x14]
    3308:	ldrb	w14, [x9, x15]
    330c:	orr	w13, w14, w13, lsl #4
    3310:	strb	w13, [x20, x1]
    3314:	add	x1, x1, #0x1
    3318:	add	x13, x12, #0x3
    331c:	b	333c <PyInit_binascii@@Base+0x1938>
    3320:	add	x12, x1, #0x1
    3324:	strb	w8, [x20, x1]
    3328:	mov	x1, x12
    332c:	b	333c <PyInit_binascii@@Base+0x1938>
    3330:	mov	x13, x21
    3334:	cmp	x13, x21
    3338:	cinc	x13, x13, lt  // lt = tstop
    333c:	cmp	x13, x21
    3340:	mov	x12, x13
    3344:	b.lt	3210 <PyInit_binascii@@Base+0x180c>  // b.tstop
    3348:	b	33a0 <PyInit_binascii@@Base+0x199c>
    334c:	ldr	x8, [x19, #8]
    3350:	ldr	x0, [x8, #8]
    3354:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3358:	ldr	x8, [x8, #4016]
    335c:	cmp	x0, x8
    3360:	b.eq	3374 <PyInit_binascii@@Base+0x1970>  // b.none
    3364:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3368:	ldr	x1, [x1, #4016]
    336c:	bl	18e0 <PyType_IsSubtype@plt>
    3370:	cbz	w0, 33dc <PyInit_binascii@@Base+0x19d8>
    3374:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3378:	ldr	x8, [x8, #4040]
    337c:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    3380:	add	x1, x1, #0xfae
    3384:	ldr	x0, [x8]
    3388:	bl	17c0 <PyErr_SetString@plt>
    338c:	b	3394 <PyInit_binascii@@Base+0x1990>
    3390:	bl	1790 <PyErr_NoMemory@plt>
    3394:	mov	x19, xzr
    3398:	b	33b4 <PyInit_binascii@@Base+0x19b0>
    339c:	mov	x1, xzr
    33a0:	mov	x0, x20
    33a4:	bl	1770 <PyBytes_FromStringAndSize@plt>
    33a8:	mov	x19, x0
    33ac:	mov	x0, x20
    33b0:	bl	1720 <PyMem_Free@plt>
    33b4:	ldr	x8, [sp, #24]
    33b8:	cbz	x8, 33c4 <PyInit_binascii@@Base+0x19c0>
    33bc:	add	x0, sp, #0x10
    33c0:	bl	1730 <PyBuffer_Release@plt>
    33c4:	mov	x0, x19
    33c8:	ldp	x20, x19, [sp, #144]
    33cc:	ldp	x22, x21, [sp, #128]
    33d0:	ldp	x29, x30, [sp, #112]
    33d4:	add	sp, sp, #0xa0
    33d8:	ret
    33dc:	ldr	x0, [x19, #8]
    33e0:	bl	1910 <_PyLong_AsInt@plt>
    33e4:	mov	w19, w0
    33e8:	cmn	w0, #0x1
    33ec:	b.ne	31c8 <PyInit_binascii@@Base+0x17c4>  // b.any
    33f0:	bl	1870 <PyErr_Occurred@plt>
    33f4:	cbnz	x0, 3394 <PyInit_binascii@@Base+0x1990>
    33f8:	mov	w19, #0xffffffff            	// #-1
    33fc:	b	31c8 <PyInit_binascii@@Base+0x17c4>
    3400:	sub	sp, sp, #0xd0
    3404:	stp	x29, x30, [sp, #128]
    3408:	stp	x26, x25, [sp, #144]
    340c:	stp	x24, x23, [sp, #160]
    3410:	stp	x22, x21, [sp, #176]
    3414:	stp	x20, x19, [sp, #192]
    3418:	add	x29, sp, #0x80
    341c:	mov	x19, x2
    3420:	mov	x21, x1
    3424:	cbz	x3, 3430 <PyInit_binascii@@Base+0x1a2c>
    3428:	ldr	x20, [x3, #16]
    342c:	b	3434 <PyInit_binascii@@Base+0x1a30>
    3430:	mov	x20, xzr
    3434:	movi	v0.2d, #0x0
    3438:	stp	q0, q0, [sp, #64]
    343c:	stp	q0, q0, [sp, #32]
    3440:	str	q0, [sp, #16]
    3444:	cbz	x21, 3458 <PyInit_binascii@@Base+0x1a54>
    3448:	sub	x8, x19, #0x1
    344c:	cmp	x8, #0x3
    3450:	b.hi	3458 <PyInit_binascii@@Base+0x1a54>  // b.pmore
    3454:	cbz	x3, 348c <PyInit_binascii@@Base+0x1a88>
    3458:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    345c:	sub	x8, x29, #0x20
    3460:	add	x4, x4, #0x508
    3464:	mov	w5, #0x1                   	// #1
    3468:	mov	w6, #0x4                   	// #4
    346c:	mov	x0, x21
    3470:	mov	x1, x19
    3474:	mov	x2, xzr
    3478:	mov	w7, wzr
    347c:	str	x8, [sp]
    3480:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    3484:	mov	x21, x0
    3488:	cbz	x0, 34a0 <PyInit_binascii@@Base+0x1a9c>
    348c:	ldr	x0, [x21]
    3490:	add	x1, sp, #0x10
    3494:	mov	w2, wzr
    3498:	bl	1880 <PyObject_GetBuffer@plt>
    349c:	cbz	w0, 34d4 <PyInit_binascii@@Base+0x1ad0>
    34a0:	mov	x19, xzr
    34a4:	ldr	x8, [sp, #24]
    34a8:	cbz	x8, 34b4 <PyInit_binascii@@Base+0x1ab0>
    34ac:	add	x0, sp, #0x10
    34b0:	bl	1730 <PyBuffer_Release@plt>
    34b4:	mov	x0, x19
    34b8:	ldp	x20, x19, [sp, #192]
    34bc:	ldp	x22, x21, [sp, #176]
    34c0:	ldp	x24, x23, [sp, #160]
    34c4:	ldp	x26, x25, [sp, #144]
    34c8:	ldp	x29, x30, [sp, #128]
    34cc:	add	sp, sp, #0xd0
    34d0:	ret
    34d4:	add	x0, sp, #0x10
    34d8:	mov	w1, #0x43                  	// #67
    34dc:	bl	1760 <PyBuffer_IsContiguous@plt>
    34e0:	cbz	w0, 353c <PyInit_binascii@@Base+0x1b38>
    34e4:	add	x20, x20, x19
    34e8:	sub	x22, x20, #0x1
    34ec:	cbz	x22, 3560 <PyInit_binascii@@Base+0x1b5c>
    34f0:	ldr	x8, [x21, #8]
    34f4:	cbz	x8, 359c <PyInit_binascii@@Base+0x1b98>
    34f8:	ldr	x0, [x8, #8]
    34fc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3500:	ldr	x8, [x8, #4016]
    3504:	cmp	x0, x8
    3508:	b.eq	3af0 <PyInit_binascii@@Base+0x20ec>  // b.none
    350c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3510:	ldr	x1, [x1, #4016]
    3514:	bl	18e0 <PyType_IsSubtype@plt>
    3518:	cbnz	w0, 3af0 <PyInit_binascii@@Base+0x20ec>
    351c:	ldr	x0, [x21, #8]
    3520:	bl	1910 <_PyLong_AsInt@plt>
    3524:	mov	w19, w0
    3528:	cmn	w0, #0x1
    352c:	b.eq	3b28 <PyInit_binascii@@Base+0x2124>  // b.none
    3530:	subs	x22, x20, #0x2
    3534:	b.ne	35a0 <PyInit_binascii@@Base+0x1b9c>  // b.any
    3538:	b	3564 <PyInit_binascii@@Base+0x1b60>
    353c:	ldr	x3, [x21]
    3540:	adrp	x0, 3000 <PyInit_binascii@@Base+0x15fc>
    3544:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3548:	adrp	x2, 3000 <PyInit_binascii@@Base+0x15fc>
    354c:	add	x0, x0, #0xeba
    3550:	add	x1, x1, #0x17e
    3554:	add	x2, x2, #0xf9c
    3558:	bl	1810 <_PyArg_BadArgument@plt>
    355c:	b	34a0 <PyInit_binascii@@Base+0x1a9c>
    3560:	mov	w19, wzr
    3564:	mov	w21, wzr
    3568:	mov	w20, #0x1                   	// #1
    356c:	ldr	x22, [sp, #16]
    3570:	ldr	x23, [sp, #32]
    3574:	mov	w1, #0xa                   	// #10
    3578:	mov	x0, x22
    357c:	mov	x2, x23
    3580:	bl	18c0 <memchr@plt>
    3584:	cmp	x0, x22
    3588:	b.ls	35f0 <PyInit_binascii@@Base+0x1bec>  // b.plast
    358c:	ldurb	w8, [x0, #-1]
    3590:	cmp	w8, #0xd
    3594:	cset	w26, eq  // eq = none
    3598:	b	35f4 <PyInit_binascii@@Base+0x1bf0>
    359c:	mov	w19, wzr
    35a0:	ldr	x8, [x21, #16]
    35a4:	cbz	x8, 3ac4 <PyInit_binascii@@Base+0x20c0>
    35a8:	ldr	x0, [x8, #8]
    35ac:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    35b0:	ldr	x8, [x8, #4016]
    35b4:	cmp	x0, x8
    35b8:	b.eq	3af0 <PyInit_binascii@@Base+0x20ec>  // b.none
    35bc:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    35c0:	ldr	x1, [x1, #4016]
    35c4:	bl	18e0 <PyType_IsSubtype@plt>
    35c8:	cbnz	w0, 3af0 <PyInit_binascii@@Base+0x20ec>
    35cc:	ldr	x0, [x21, #16]
    35d0:	bl	1910 <_PyLong_AsInt@plt>
    35d4:	mov	w20, w0
    35d8:	cmn	w0, #0x1
    35dc:	b.eq	3b4c <PyInit_binascii@@Base+0x2148>  // b.none
    35e0:	cmp	x22, #0x1
    35e4:	b.ne	3ac8 <PyInit_binascii@@Base+0x20c4>  // b.any
    35e8:	mov	w21, wzr
    35ec:	b	356c <PyInit_binascii@@Base+0x1b68>
    35f0:	mov	w26, wzr
    35f4:	cmp	x23, #0x1
    35f8:	b.lt	37f8 <PyInit_binascii@@Base+0x1df4>  // b.tstop
    35fc:	cmp	w26, #0x0
    3600:	mov	w8, #0x3                   	// #3
    3604:	mov	w12, #0x5                   	// #5
    3608:	mov	x14, xzr
    360c:	mov	w15, wzr
    3610:	mov	x25, xzr
    3614:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    3618:	mov	w10, #0x1                   	// #1
    361c:	cinc	x11, x8, ne  // ne = any
    3620:	cinc	x12, x12, ne  // ne = any
    3624:	mov	w13, #0x2401                	// #9217
    3628:	ldrb	w16, [x22, x14]
    362c:	cmp	w21, #0x0
    3630:	cset	w17, ne  // ne = any
    3634:	cmp	w16, #0x5f
    3638:	cset	w18, eq  // eq = none
    363c:	cmp	w16, #0x7e
    3640:	b.hi	3754 <PyInit_binascii@@Base+0x1d50>  // b.pmore
    3644:	cmp	w16, #0x3d
    3648:	b.eq	3754 <PyInit_binascii@@Base+0x1d50>  // b.none
    364c:	and	w17, w17, w18
    3650:	tbnz	w17, #0, 3754 <PyInit_binascii@@Base+0x1d50>
    3654:	cbnz	w15, 3684 <PyInit_binascii@@Base+0x1c80>
    3658:	cmp	w16, #0x2e
    365c:	b.ne	3684 <PyInit_binascii@@Base+0x1c80>  // b.any
    3660:	add	x17, x14, #0x1
    3664:	cmp	x17, x23
    3668:	b.eq	3754 <PyInit_binascii@@Base+0x1d50>  // b.none
    366c:	ldrb	w17, [x22, x17]
    3670:	cmp	w17, #0xd
    3674:	b.hi	3684 <PyInit_binascii@@Base+0x1c80>  // b.pmore
    3678:	lsl	w17, w10, w17
    367c:	tst	w17, w13
    3680:	b.ne	3754 <PyInit_binascii@@Base+0x1d50>  // b.any
    3684:	cbz	w20, 36a4 <PyInit_binascii@@Base+0x1ca0>
    3688:	cmp	w16, #0x20
    368c:	b.eq	36d0 <PyInit_binascii@@Base+0x1ccc>  // b.none
    3690:	cmp	w16, #0x9
    3694:	b.eq	36d0 <PyInit_binascii@@Base+0x1ccc>  // b.none
    3698:	cmp	w16, #0x20
    369c:	b.ls	36dc <PyInit_binascii@@Base+0x1cd8>  // b.plast
    36a0:	b	36ec <PyInit_binascii@@Base+0x1ce8>
    36a4:	cmp	w16, #0xc
    36a8:	b.gt	36c0 <PyInit_binascii@@Base+0x1cbc>
    36ac:	cmp	w16, #0x9
    36b0:	b.eq	36d0 <PyInit_binascii@@Base+0x1ccc>  // b.none
    36b4:	cmp	w16, #0xa
    36b8:	b.eq	3754 <PyInit_binascii@@Base+0x1d50>  // b.none
    36bc:	b	3698 <PyInit_binascii@@Base+0x1c94>
    36c0:	cmp	w16, #0xd
    36c4:	b.eq	3754 <PyInit_binascii@@Base+0x1d50>  // b.none
    36c8:	cmp	w16, #0x20
    36cc:	b.ne	3698 <PyInit_binascii@@Base+0x1c94>  // b.any
    36d0:	add	x17, x14, #0x1
    36d4:	cmp	x17, x23
    36d8:	b.eq	3754 <PyInit_binascii@@Base+0x1d50>  // b.none
    36dc:	cmp	w16, #0xa
    36e0:	b.eq	36ec <PyInit_binascii@@Base+0x1ce8>  // b.none
    36e4:	cmp	w16, #0xd
    36e8:	b.ne	3750 <PyInit_binascii@@Base+0x1d4c>  // b.any
    36ec:	cbz	w20, 373c <PyInit_binascii@@Base+0x1d38>
    36f0:	cmp	w16, #0xa
    36f4:	b.eq	3718 <PyInit_binascii@@Base+0x1d14>  // b.none
    36f8:	add	x18, x14, #0x1
    36fc:	cmp	x18, x23
    3700:	b.ge	3740 <PyInit_binascii@@Base+0x1d3c>  // b.tcont
    3704:	cmp	w16, #0xd
    3708:	b.ne	3740 <PyInit_binascii@@Base+0x1d3c>  // b.any
    370c:	ldrb	w17, [x22, x18]
    3710:	cmp	w17, #0xa
    3714:	b.ne	3740 <PyInit_binascii@@Base+0x1d3c>  // b.any
    3718:	cbz	x14, 37b4 <PyInit_binascii@@Base+0x1db0>
    371c:	add	x15, x14, x22
    3720:	ldurb	w15, [x15, #-1]
    3724:	cmp	w15, #0x20
    3728:	b.eq	3734 <PyInit_binascii@@Base+0x1d30>  // b.none
    372c:	cmp	w15, #0x9
    3730:	b.ne	37b4 <PyInit_binascii@@Base+0x1db0>  // b.any
    3734:	mov	w15, #0x2                   	// #2
    3738:	b	37b8 <PyInit_binascii@@Base+0x1db4>
    373c:	add	x18, x14, #0x1
    3740:	cmp	x18, x23
    3744:	b.ne	3784 <PyInit_binascii@@Base+0x1d80>  // b.any
    3748:	mov	w17, #0x1                   	// #1
    374c:	b	37a8 <PyInit_binascii@@Base+0x1da4>
    3750:	cbz	w19, 37e4 <PyInit_binascii@@Base+0x1de0>
    3754:	add	w15, w15, #0x3
    3758:	cmp	w15, #0x4b
    375c:	csel	x17, x12, x8, hi  // hi = pmore
    3760:	csel	w15, w8, w15, hi  // hi = pmore
    3764:	add	x14, x14, #0x1
    3768:	sub	x16, x9, x17
    376c:	cmp	x16, x25
    3770:	b.lt	3abc <PyInit_binascii@@Base+0x20b8>  // b.tstop
    3774:	cmp	x14, x23
    3778:	add	x25, x17, x25
    377c:	b.lt	3628 <PyInit_binascii@@Base+0x1c24>  // b.tstop
    3780:	b	37fc <PyInit_binascii@@Base+0x1df8>
    3784:	ldrb	w14, [x22, x18]
    3788:	add	w16, w15, #0x1
    378c:	cmp	w14, #0xa
    3790:	cset	w14, ne  // ne = any
    3794:	cmp	w16, #0x4b
    3798:	cset	w16, hi  // hi = pmore
    379c:	tst	w16, w14
    37a0:	csel	w15, wzr, w15, ne  // ne = any
    37a4:	csinc	x17, x11, xzr, ne  // ne = any
    37a8:	add	w15, w15, #0x1
    37ac:	mov	x14, x18
    37b0:	b	3768 <PyInit_binascii@@Base+0x1d64>
    37b4:	mov	x15, xzr
    37b8:	add	x17, x15, #0x2
    37bc:	orr	x15, x15, #0x1
    37c0:	cmp	w26, #0x0
    37c4:	csel	x17, x15, x17, eq  // eq = none
    37c8:	cmp	w16, #0xd
    37cc:	b.ne	37dc <PyInit_binascii@@Base+0x1dd8>  // b.any
    37d0:	mov	w15, wzr
    37d4:	add	x14, x14, #0x2
    37d8:	b	3768 <PyInit_binascii@@Base+0x1d64>
    37dc:	mov	w15, wzr
    37e0:	b	3764 <PyInit_binascii@@Base+0x1d60>
    37e4:	cmp	w16, #0x9
    37e8:	b.eq	36ec <PyInit_binascii@@Base+0x1ce8>  // b.none
    37ec:	cmp	w16, #0x20
    37f0:	b.eq	36ec <PyInit_binascii@@Base+0x1ce8>  // b.none
    37f4:	b	3754 <PyInit_binascii@@Base+0x1d50>
    37f8:	mov	x25, xzr
    37fc:	mov	x0, x25
    3800:	bl	1920 <PyMem_Malloc@plt>
    3804:	cbz	x0, 3abc <PyInit_binascii@@Base+0x20b8>
    3808:	mov	w1, wzr
    380c:	mov	x2, x25
    3810:	mov	x24, x0
    3814:	bl	17f0 <memset@plt>
    3818:	cmp	x23, #0x1
    381c:	b.lt	3b0c <PyInit_binascii@@Base+0x2108>  // b.tstop
    3820:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    3824:	mov	x16, xzr
    3828:	mov	w17, wzr
    382c:	mov	x15, xzr
    3830:	mov	w8, #0x3d                  	// #61
    3834:	mov	w9, #0xa                   	// #10
    3838:	mov	w10, #0xd                   	// #13
    383c:	add	x11, x11, #0x1c1
    3840:	mov	w12, #0x1                   	// #1
    3844:	mov	w13, #0x2401                	// #9217
    3848:	mov	w14, #0x5f                  	// #95
    384c:	ldrb	w18, [x22, x16]
    3850:	cmp	w21, #0x0
    3854:	cset	w0, ne  // ne = any
    3858:	cmp	w18, #0x5f
    385c:	cset	w1, eq  // eq = none
    3860:	cmp	w18, #0x7e
    3864:	b.hi	3a24 <PyInit_binascii@@Base+0x2020>  // b.pmore
    3868:	cmp	w18, #0x3d
    386c:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    3870:	and	w0, w0, w1
    3874:	tbnz	w0, #0, 3a24 <PyInit_binascii@@Base+0x2020>
    3878:	cbnz	w17, 38b0 <PyInit_binascii@@Base+0x1eac>
    387c:	cmp	w18, #0x2e
    3880:	b.ne	38b0 <PyInit_binascii@@Base+0x1eac>  // b.any
    3884:	add	x0, x16, #0x1
    3888:	cmp	x0, x23
    388c:	b.eq	38a8 <PyInit_binascii@@Base+0x1ea4>  // b.none
    3890:	ldrb	w0, [x22, x0]
    3894:	cmp	w0, #0xd
    3898:	b.hi	38b0 <PyInit_binascii@@Base+0x1eac>  // b.pmore
    389c:	lsl	w0, w12, w0
    38a0:	tst	w0, w13
    38a4:	b.eq	38b0 <PyInit_binascii@@Base+0x1eac>  // b.none
    38a8:	mov	w17, wzr
    38ac:	b	3a54 <PyInit_binascii@@Base+0x2050>
    38b0:	cbz	w20, 38d0 <PyInit_binascii@@Base+0x1ecc>
    38b4:	cmp	w18, #0x20
    38b8:	b.eq	38fc <PyInit_binascii@@Base+0x1ef8>  // b.none
    38bc:	cmp	w18, #0x9
    38c0:	b.eq	38fc <PyInit_binascii@@Base+0x1ef8>  // b.none
    38c4:	cmp	w18, #0x20
    38c8:	b.ls	3908 <PyInit_binascii@@Base+0x1f04>  // b.plast
    38cc:	b	3918 <PyInit_binascii@@Base+0x1f14>
    38d0:	cmp	w18, #0xc
    38d4:	b.gt	38ec <PyInit_binascii@@Base+0x1ee8>
    38d8:	cmp	w18, #0x9
    38dc:	b.eq	38fc <PyInit_binascii@@Base+0x1ef8>  // b.none
    38e0:	cmp	w18, #0xa
    38e4:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    38e8:	b	38c4 <PyInit_binascii@@Base+0x1ec0>
    38ec:	cmp	w18, #0xd
    38f0:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    38f4:	cmp	w18, #0x20
    38f8:	b.ne	38c4 <PyInit_binascii@@Base+0x1ec0>  // b.any
    38fc:	add	x0, x16, #0x1
    3900:	cmp	x0, x23
    3904:	b.eq	3a24 <PyInit_binascii@@Base+0x2020>  // b.none
    3908:	cmp	w18, #0xa
    390c:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3910:	cmp	w18, #0xd
    3914:	b.ne	3a20 <PyInit_binascii@@Base+0x201c>  // b.any
    3918:	cbz	w20, 3994 <PyInit_binascii@@Base+0x1f90>
    391c:	cmp	w18, #0xa
    3920:	b.ne	39fc <PyInit_binascii@@Base+0x1ff8>  // b.any
    3924:	cbz	x15, 3964 <PyInit_binascii@@Base+0x1f60>
    3928:	sub	x17, x15, #0x1
    392c:	ldrb	w18, [x24, x17]
    3930:	cmp	w18, #0x20
    3934:	b.eq	3940 <PyInit_binascii@@Base+0x1f3c>  // b.none
    3938:	cmp	w18, #0x9
    393c:	b.ne	3964 <PyInit_binascii@@Base+0x1f60>  // b.any
    3940:	and	x0, x18, #0xf
    3944:	lsr	x18, x18, #4
    3948:	ldrb	w0, [x11, x0]
    394c:	ldrb	w18, [x11, x18]
    3950:	strb	w8, [x24, x17]
    3954:	add	x17, x24, x15
    3958:	add	x15, x15, #0x2
    395c:	strb	w0, [x17, #1]
    3960:	strb	w18, [x17]
    3964:	cbz	w26, 3974 <PyInit_binascii@@Base+0x1f70>
    3968:	add	x17, x15, #0x1
    396c:	strb	w10, [x24, x15]
    3970:	mov	x15, x17
    3974:	strb	w9, [x24, x15]
    3978:	ldrb	w17, [x22, x16]
    397c:	add	x1, x15, #0x1
    3980:	cmp	w17, #0xd
    3984:	mov	w17, wzr
    3988:	b.ne	3aa0 <PyInit_binascii@@Base+0x209c>  // b.any
    398c:	add	x0, x16, #0x2
    3990:	b	3a84 <PyInit_binascii@@Base+0x2080>
    3994:	add	x0, x16, #0x1
    3998:	cmp	x0, x23
    399c:	b.eq	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.none
    39a0:	add	w1, w17, #0x1
    39a4:	cmp	w1, #0x4c
    39a8:	b.cc	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.lo, b.ul, b.last
    39ac:	ldrb	w1, [x22, x0]
    39b0:	cmp	w1, #0xa
    39b4:	b.eq	39e0 <PyInit_binascii@@Base+0x1fdc>  // b.none
    39b8:	add	x1, x15, #0x1
    39bc:	strb	w8, [x24, x15]
    39c0:	cbz	w26, 39d0 <PyInit_binascii@@Base+0x1fcc>
    39c4:	add	x15, x15, #0x2
    39c8:	strb	w10, [x24, x1]
    39cc:	mov	x1, x15
    39d0:	strb	w9, [x24, x1]
    39d4:	ldrb	w18, [x22, x16]
    39d8:	mov	w17, wzr
    39dc:	add	x15, x1, #0x1
    39e0:	add	w17, w17, #0x1
    39e4:	add	x1, x15, #0x1
    39e8:	cbz	w21, 3a98 <PyInit_binascii@@Base+0x2094>
    39ec:	cmp	w18, #0x20
    39f0:	b.ne	3a98 <PyInit_binascii@@Base+0x2094>  // b.any
    39f4:	strb	w14, [x24, x15]
    39f8:	b	3a84 <PyInit_binascii@@Base+0x2080>
    39fc:	add	x0, x16, #0x1
    3a00:	cmp	x0, x23
    3a04:	b.ge	3998 <PyInit_binascii@@Base+0x1f94>  // b.tcont
    3a08:	cmp	w18, #0xd
    3a0c:	b.ne	3998 <PyInit_binascii@@Base+0x1f94>  // b.any
    3a10:	ldrb	w1, [x22, x0]
    3a14:	cmp	w1, #0xa
    3a18:	b.eq	3924 <PyInit_binascii@@Base+0x1f20>  // b.none
    3a1c:	b	3998 <PyInit_binascii@@Base+0x1f94>
    3a20:	cbz	w19, 3aa8 <PyInit_binascii@@Base+0x20a4>
    3a24:	add	w18, w17, #0x3
    3a28:	cmp	w18, #0x4c
    3a2c:	b.cc	3a54 <PyInit_binascii@@Base+0x2050>  // b.lo, b.ul, b.last
    3a30:	add	x18, x15, #0x1
    3a34:	strb	w8, [x24, x15]
    3a38:	cbz	w26, 3a48 <PyInit_binascii@@Base+0x2044>
    3a3c:	add	x15, x15, #0x2
    3a40:	strb	w10, [x24, x18]
    3a44:	mov	x18, x15
    3a48:	mov	w17, wzr
    3a4c:	add	x15, x18, #0x1
    3a50:	strb	w9, [x24, x18]
    3a54:	add	x18, x24, x15
    3a58:	strb	w8, [x18]
    3a5c:	ldrb	w0, [x22, x16]
    3a60:	add	w17, w17, #0x3
    3a64:	and	x1, x0, #0xf
    3a68:	lsr	x0, x0, #4
    3a6c:	ldrb	w2, [x11, x1]
    3a70:	ldrb	w3, [x11, x0]
    3a74:	add	x1, x15, #0x3
    3a78:	add	x0, x16, #0x1
    3a7c:	strb	w2, [x18, #2]
    3a80:	strb	w3, [x18, #1]
    3a84:	cmp	x0, x23
    3a88:	mov	x16, x0
    3a8c:	mov	x15, x1
    3a90:	b.lt	384c <PyInit_binascii@@Base+0x1e48>  // b.tstop
    3a94:	b	3b10 <PyInit_binascii@@Base+0x210c>
    3a98:	strb	w18, [x24, x15]
    3a9c:	b	3a84 <PyInit_binascii@@Base+0x2080>
    3aa0:	add	x0, x16, #0x1
    3aa4:	b	3a84 <PyInit_binascii@@Base+0x2080>
    3aa8:	cmp	w18, #0x9
    3aac:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3ab0:	cmp	w18, #0x20
    3ab4:	b.eq	3918 <PyInit_binascii@@Base+0x1f14>  // b.none
    3ab8:	b	3a24 <PyInit_binascii@@Base+0x2020>
    3abc:	bl	1790 <PyErr_NoMemory@plt>
    3ac0:	b	34a0 <PyInit_binascii@@Base+0x1a9c>
    3ac4:	mov	w20, #0x1                   	// #1
    3ac8:	ldr	x8, [x21, #24]
    3acc:	ldr	x0, [x8, #8]
    3ad0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3ad4:	ldr	x8, [x8, #4016]
    3ad8:	cmp	x0, x8
    3adc:	b.eq	3af0 <PyInit_binascii@@Base+0x20ec>  // b.none
    3ae0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3ae4:	ldr	x1, [x1, #4016]
    3ae8:	bl	18e0 <PyType_IsSubtype@plt>
    3aec:	cbz	w0, 3b34 <PyInit_binascii@@Base+0x2130>
    3af0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3af4:	ldr	x8, [x8, #4040]
    3af8:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    3afc:	add	x1, x1, #0xfae
    3b00:	ldr	x0, [x8]
    3b04:	bl	17c0 <PyErr_SetString@plt>
    3b08:	b	34a0 <PyInit_binascii@@Base+0x1a9c>
    3b0c:	mov	x1, xzr
    3b10:	mov	x0, x24
    3b14:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3b18:	mov	x19, x0
    3b1c:	mov	x0, x24
    3b20:	bl	1720 <PyMem_Free@plt>
    3b24:	b	34a4 <PyInit_binascii@@Base+0x1aa0>
    3b28:	bl	1870 <PyErr_Occurred@plt>
    3b2c:	cbnz	x0, 34a0 <PyInit_binascii@@Base+0x1a9c>
    3b30:	b	3530 <PyInit_binascii@@Base+0x1b2c>
    3b34:	ldr	x0, [x21, #24]
    3b38:	bl	1910 <_PyLong_AsInt@plt>
    3b3c:	cmn	w0, #0x1
    3b40:	b.eq	3b58 <PyInit_binascii@@Base+0x2154>  // b.none
    3b44:	mov	w21, w0
    3b48:	b	356c <PyInit_binascii@@Base+0x1b68>
    3b4c:	bl	1870 <PyErr_Occurred@plt>
    3b50:	cbnz	x0, 34a0 <PyInit_binascii@@Base+0x1a9c>
    3b54:	b	35e0 <PyInit_binascii@@Base+0x1bdc>
    3b58:	bl	1870 <PyErr_Occurred@plt>
    3b5c:	cbnz	x0, 34a0 <PyInit_binascii@@Base+0x1a9c>
    3b60:	mov	w21, #0xffffffff            	// #-1
    3b64:	b	356c <PyInit_binascii@@Base+0x1b68>
    3b68:	stp	x29, x30, [sp, #-32]!
    3b6c:	stp	x20, x19, [sp, #16]
    3b70:	mov	x29, sp
    3b74:	mov	x19, x1
    3b78:	cbz	x0, 3bc4 <PyInit_binascii@@Base+0x21c0>
    3b7c:	ldr	x8, [x0, #8]
    3b80:	mov	x20, x0
    3b84:	ldrb	w8, [x8, #171]
    3b88:	tbnz	w8, #4, 3bd4 <PyInit_binascii@@Base+0x21d0>
    3b8c:	mov	x0, x20
    3b90:	mov	x1, x19
    3b94:	mov	w2, wzr
    3b98:	bl	1880 <PyObject_GetBuffer@plt>
    3b9c:	cbz	w0, 3c18 <PyInit_binascii@@Base+0x2214>
    3ba0:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3ba4:	ldr	x8, [x20, #8]
    3ba8:	ldr	x9, [x9, #4040]
    3bac:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    3bb0:	add	x1, x1, #0xef6
    3bb4:	ldr	x2, [x8, #24]
    3bb8:	ldr	x0, [x9]
    3bbc:	bl	18f0 <PyErr_Format@plt>
    3bc0:	b	3c70 <PyInit_binascii@@Base+0x226c>
    3bc4:	mov	x0, x19
    3bc8:	bl	1730 <PyBuffer_Release@plt>
    3bcc:	mov	w0, #0x1                   	// #1
    3bd0:	b	3c74 <PyInit_binascii@@Base+0x2270>
    3bd4:	ldr	w8, [x20, #32]
    3bd8:	tbnz	w8, #7, 3bec <PyInit_binascii@@Base+0x21e8>
    3bdc:	mov	x0, x20
    3be0:	bl	1700 <_PyUnicode_Ready@plt>
    3be4:	tbnz	w0, #31, 3c70 <PyInit_binascii@@Base+0x226c>
    3be8:	ldr	w8, [x20, #32]
    3bec:	tbnz	w8, #6, 3c0c <PyInit_binascii@@Base+0x2208>
    3bf0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3bf4:	ldr	x8, [x8, #4032]
    3bf8:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    3bfc:	add	x1, x1, #0xec1
    3c00:	ldr	x0, [x8]
    3c04:	bl	17c0 <PyErr_SetString@plt>
    3c08:	b	3c70 <PyInit_binascii@@Base+0x226c>
    3c0c:	tbnz	w8, #5, 3c30 <PyInit_binascii@@Base+0x222c>
    3c10:	ldr	x8, [x20, #72]
    3c14:	b	3c34 <PyInit_binascii@@Base+0x2230>
    3c18:	mov	w1, #0x43                  	// #67
    3c1c:	mov	x0, x19
    3c20:	bl	1760 <PyBuffer_IsContiguous@plt>
    3c24:	cbz	w0, 3c48 <PyInit_binascii@@Base+0x2244>
    3c28:	mov	w0, #0x20000               	// #131072
    3c2c:	b	3c74 <PyInit_binascii@@Base+0x2270>
    3c30:	add	x8, x20, #0x30
    3c34:	str	x8, [x19]
    3c38:	ldr	x8, [x20, #16]
    3c3c:	mov	w0, #0x1                   	// #1
    3c40:	stp	xzr, x8, [x19, #8]
    3c44:	b	3c74 <PyInit_binascii@@Base+0x2270>
    3c48:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3c4c:	ldr	x8, [x20, #8]
    3c50:	ldr	x9, [x9, #4040]
    3c54:	adrp	x1, 3000 <PyInit_binascii@@Base+0x15fc>
    3c58:	add	x1, x1, #0xf35
    3c5c:	ldr	x2, [x8, #24]
    3c60:	ldr	x0, [x9]
    3c64:	bl	18f0 <PyErr_Format@plt>
    3c68:	mov	x0, x19
    3c6c:	bl	1730 <PyBuffer_Release@plt>
    3c70:	mov	w0, wzr
    3c74:	ldp	x20, x19, [sp, #16]
    3c78:	ldp	x29, x30, [sp], #32
    3c7c:	ret
    3c80:	stp	x29, x30, [sp, #-48]!
    3c84:	stp	x22, x21, [sp, #16]
    3c88:	stp	x20, x19, [sp, #32]
    3c8c:	mov	x29, sp
    3c90:	ldr	x21, [x1, #16]
    3c94:	mov	x20, x0
    3c98:	tbnz	w21, #0, 3d10 <PyInit_binascii@@Base+0x230c>
    3c9c:	ldr	x22, [x1]
    3ca0:	cmp	x21, #0x0
    3ca4:	cinc	x8, x21, lt  // lt = tstop
    3ca8:	asr	x1, x8, #1
    3cac:	mov	x0, xzr
    3cb0:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3cb4:	mov	x19, x0
    3cb8:	cbz	x0, 3d30 <PyInit_binascii@@Base+0x232c>
    3cbc:	cmp	x21, #0x1
    3cc0:	b.lt	3d30 <PyInit_binascii@@Base+0x232c>  // b.tstop
    3cc4:	adrp	x10, 15000 <PyInit_binascii@@Base+0x135fc>
    3cc8:	ldr	x10, [x10, #4056]
    3ccc:	mov	x8, xzr
    3cd0:	mov	w9, #0x20                  	// #32
    3cd4:	add	x11, x22, x8
    3cd8:	ldrb	w12, [x11]
    3cdc:	ldrb	w13, [x11, #1]
    3ce0:	ldrb	w11, [x10, x12]
    3ce4:	ldrb	w12, [x10, x13]
    3ce8:	orr	w13, w12, w11
    3cec:	cmp	w13, #0x10
    3cf0:	b.cs	3d44 <PyInit_binascii@@Base+0x2340>  // b.hs, b.nlast
    3cf4:	add	w11, w12, w11, lsl #4
    3cf8:	add	x8, x8, #0x2
    3cfc:	strb	w11, [x19, x9]
    3d00:	cmp	x8, x21
    3d04:	add	x9, x9, #0x1
    3d08:	b.lt	3cd4 <PyInit_binascii@@Base+0x22d0>  // b.tstop
    3d0c:	b	3d30 <PyInit_binascii@@Base+0x232c>
    3d10:	mov	x0, x20
    3d14:	bl	17e0 <PyModule_GetState@plt>
    3d18:	cbz	x0, 3d2c <PyInit_binascii@@Base+0x2328>
    3d1c:	ldr	x0, [x0]
    3d20:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3d24:	add	x1, x1, #0x13d
    3d28:	bl	17c0 <PyErr_SetString@plt>
    3d2c:	mov	x19, xzr
    3d30:	mov	x0, x19
    3d34:	ldp	x20, x19, [sp, #32]
    3d38:	ldp	x22, x21, [sp, #16]
    3d3c:	ldp	x29, x30, [sp], #48
    3d40:	ret
    3d44:	mov	x0, x20
    3d48:	bl	17e0 <PyModule_GetState@plt>
    3d4c:	cbz	x0, 3d2c <PyInit_binascii@@Base+0x2328>
    3d50:	ldr	x0, [x0]
    3d54:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3d58:	add	x1, x1, #0x14f
    3d5c:	bl	17c0 <PyErr_SetString@plt>
    3d60:	ldr	x8, [x19]
    3d64:	subs	x8, x8, #0x1
    3d68:	str	x8, [x19]
    3d6c:	b.ne	3d2c <PyInit_binascii@@Base+0x2328>  // b.any
    3d70:	mov	x0, x19
    3d74:	bl	1780 <_Py_Dealloc@plt>
    3d78:	b	3d2c <PyInit_binascii@@Base+0x2328>
    3d7c:	stp	x29, x30, [sp, #-32]!
    3d80:	stp	x20, x19, [sp, #16]
    3d84:	mov	x29, sp
    3d88:	mov	x19, x0
    3d8c:	bl	17e0 <PyModule_GetState@plt>
    3d90:	cbz	x0, 3e14 <PyInit_binascii@@Base+0x2410>
    3d94:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3d98:	ldr	x8, [x8, #4032]
    3d9c:	mov	x20, x0
    3da0:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    3da4:	add	x0, x0, #0x1d2
    3da8:	ldr	x1, [x8]
    3dac:	mov	x2, xzr
    3db0:	bl	1820 <PyErr_NewException@plt>
    3db4:	str	x0, [x20]
    3db8:	cbz	x0, 3e14 <PyInit_binascii@@Base+0x2410>
    3dbc:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3dc0:	mov	x2, x0
    3dc4:	add	x1, x1, #0x1db
    3dc8:	mov	x0, x19
    3dcc:	bl	18d0 <PyModule_AddObject@plt>
    3dd0:	cmn	w0, #0x1
    3dd4:	b.eq	3e18 <PyInit_binascii@@Base+0x2414>  // b.none
    3dd8:	adrp	x0, 4000 <PyInit_binascii@@Base+0x25fc>
    3ddc:	add	x0, x0, #0x1e1
    3de0:	mov	x1, xzr
    3de4:	mov	x2, xzr
    3de8:	bl	1820 <PyErr_NewException@plt>
    3dec:	str	x0, [x20, #8]
    3df0:	cbz	x0, 3e14 <PyInit_binascii@@Base+0x2410>
    3df4:	adrp	x1, 4000 <PyInit_binascii@@Base+0x25fc>
    3df8:	mov	x2, x0
    3dfc:	add	x1, x1, #0x1ea
    3e00:	mov	x0, x19
    3e04:	bl	18d0 <PyModule_AddObject@plt>
    3e08:	cmn	w0, #0x1
    3e0c:	csetm	w0, eq  // eq = none
    3e10:	b	3e18 <PyInit_binascii@@Base+0x2414>
    3e14:	mov	w0, #0xffffffff            	// #-1
    3e18:	ldp	x20, x19, [sp, #16]
    3e1c:	ldp	x29, x30, [sp], #32
    3e20:	ret

Disassembly of section .fini:

0000000000003e24 <.fini>:
    3e24:	stp	x29, x30, [sp, #-16]!
    3e28:	mov	x29, sp
    3e2c:	ldp	x29, x30, [sp], #16
    3e30:	ret
