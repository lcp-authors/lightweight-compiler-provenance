
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libubsan.so.1.0.0_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006318 <.init>:
    6318:	stp	x29, x30, [sp, #-16]!
    631c:	mov	x29, sp
    6320:	bl	6a40 <__asan_backtrace_open@plt+0x10>
    6324:	ldp	x29, x30, [sp], #16
    6328:	ret

Disassembly of section .plt:

0000000000006330 <_Unwind_Backtrace@plt-0x20>:
    6330:	stp	x16, x30, [sp, #-16]!
    6334:	adrp	x16, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6338:	ldr	x17, [x16, #4088]
    633c:	add	x16, x16, #0xff8
    6340:	br	x17
    6344:	nop
    6348:	nop
    634c:	nop

0000000000006350 <_Unwind_Backtrace@plt>:
    6350:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6354:	ldr	x17, [x16]
    6358:	add	x16, x16, #0x0
    635c:	br	x17

0000000000006360 <__fxstat@plt>:
    6360:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6364:	ldr	x17, [x16, #8]
    6368:	add	x16, x16, #0x8
    636c:	br	x17

0000000000006370 <__sanitizer_report_error_summary@plt>:
    6370:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6374:	ldr	x17, [x16, #16]
    6378:	add	x16, x16, #0x10
    637c:	br	x17

0000000000006380 <OnPrint@plt>:
    6380:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6384:	ldr	x17, [x16, #24]
    6388:	add	x16, x16, #0x18
    638c:	br	x17

0000000000006390 <__asan_cplus_demangle_init_info@plt>:
    6390:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6394:	ldr	x17, [x16, #32]
    6398:	add	x16, x16, #0x20
    639c:	br	x17

00000000000063a0 <__asan_backtrace_qsort@plt>:
    63a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63a4:	ldr	x17, [x16, #40]
    63a8:	add	x16, x16, #0x28
    63ac:	br	x17

00000000000063b0 <readlink@plt>:
    63b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63b4:	ldr	x17, [x16, #48]
    63b8:	add	x16, x16, #0x30
    63bc:	br	x17

00000000000063c0 <shm_open@plt>:
    63c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63c4:	ldr	x17, [x16, #56]
    63c8:	add	x16, x16, #0x38
    63cc:	br	x17

00000000000063d0 <sched_getaffinity@plt>:
    63d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63d4:	ldr	x17, [x16, #64]
    63d8:	add	x16, x16, #0x40
    63dc:	br	x17

00000000000063e0 <__asan_backtrace_pcinfo@plt>:
    63e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63e4:	ldr	x17, [x16, #72]
    63e8:	add	x16, x16, #0x48
    63ec:	br	x17

00000000000063f0 <execv@plt>:
    63f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    63f4:	ldr	x17, [x16, #80]
    63f8:	add	x16, x16, #0x50
    63fc:	br	x17

0000000000006400 <pipe@plt>:
    6400:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16, #88]
    6408:	add	x16, x16, #0x58
    640c:	br	x17

0000000000006410 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6410:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #96]
    6418:	add	x16, x16, #0x60
    641c:	br	x17

0000000000006420 <__asan_cplus_demangle_type@plt>:
    6420:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #104]
    6428:	add	x16, x16, #0x68
    642c:	br	x17

0000000000006430 <__asan_backtrace_release_view@plt>:
    6430:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #112]
    6438:	add	x16, x16, #0x70
    643c:	br	x17

0000000000006440 <__asan_backtrace_dwarf_add@plt>:
    6440:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #120]
    6448:	add	x16, x16, #0x78
    644c:	br	x17

0000000000006450 <dlvsym@plt>:
    6450:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #128]
    6458:	add	x16, x16, #0x80
    645c:	br	x17

0000000000006460 <pthread_getattr_np@plt>:
    6460:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #136]
    6468:	add	x16, x16, #0x88
    646c:	br	x17

0000000000006470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6470:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #144]
    6478:	add	x16, x16, #0x90
    647c:	br	x17

0000000000006480 <__sanitizer_symbolize_demangle@plt>:
    6480:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #152]
    6488:	add	x16, x16, #0x98
    648c:	br	x17

0000000000006490 <__asan_cplus_demangle_fill_name@plt>:
    6490:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #160]
    6498:	add	x16, x16, #0xa0
    649c:	br	x17

00000000000064a0 <__asan_internal_memcpy@plt>:
    64a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #168]
    64a8:	add	x16, x16, #0xa8
    64ac:	br	x17

00000000000064b0 <__asan_internal_strlen@plt>:
    64b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #176]
    64b8:	add	x16, x16, #0xb0
    64bc:	br	x17

00000000000064c0 <open@plt>:
    64c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #184]
    64c8:	add	x16, x16, #0xb8
    64cc:	br	x17

00000000000064d0 <pthread_attr_init@plt>:
    64d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #192]
    64d8:	add	x16, x16, #0xc0
    64dc:	br	x17

00000000000064e0 <real_pthread_attr_getstack@plt>:
    64e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #200]
    64e8:	add	x16, x16, #0xc8
    64ec:	br	x17

00000000000064f0 <sleep@plt>:
    64f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #208]
    64f8:	add	x16, x16, #0xd0
    64fc:	br	x17

0000000000006500 <dlsym@plt>:
    6500:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #216]
    6508:	add	x16, x16, #0xd8
    650c:	br	x17

0000000000006510 <__asan_backtrace_vector_grow@plt>:
    6510:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #224]
    6518:	add	x16, x16, #0xe0
    651c:	br	x17

0000000000006520 <__asan_backtrace_syminfo@plt>:
    6520:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #232]
    6528:	add	x16, x16, #0xe8
    652c:	br	x17

0000000000006530 <__asan_internal_memset@plt>:
    6530:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #240]
    6538:	add	x16, x16, #0xf0
    653c:	br	x17

0000000000006540 <free@plt>:
    6540:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #248]
    6548:	add	x16, x16, #0xf8
    654c:	br	x17

0000000000006550 <__sanitizer_symbolize_data@plt>:
    6550:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #256]
    6558:	add	x16, x16, #0x100
    655c:	br	x17

0000000000006560 <isatty@plt>:
    6560:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #264]
    6568:	add	x16, x16, #0x108
    656c:	br	x17

0000000000006570 <dlerror@plt>:
    6570:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #272]
    6578:	add	x16, x16, #0x110
    657c:	br	x17

0000000000006580 <__cxa_finalize@plt>:
    6580:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #280]
    6588:	add	x16, x16, #0x118
    658c:	br	x17

0000000000006590 <realloc@plt>:
    6590:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #288]
    6598:	add	x16, x16, #0x120
    659c:	br	x17

00000000000065a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>:
    65a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #296]
    65a8:	add	x16, x16, #0x128
    65ac:	br	x17

00000000000065b0 <__asan_backtrace_alloc@plt>:
    65b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #304]
    65b8:	add	x16, x16, #0x130
    65bc:	br	x17

00000000000065c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    65c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #312]
    65c8:	add	x16, x16, #0x138
    65cc:	br	x17

00000000000065d0 <getrusage@plt>:
    65d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #320]
    65d8:	add	x16, x16, #0x140
    65dc:	br	x17

00000000000065e0 <pthread_attr_destroy@plt>:
    65e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #328]
    65e8:	add	x16, x16, #0x148
    65ec:	br	x17

00000000000065f0 <sprintf@plt>:
    65f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #336]
    65f8:	add	x16, x16, #0x150
    65fc:	br	x17

0000000000006600 <__asan_backtrace_vector_release@plt>:
    6600:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #344]
    6608:	add	x16, x16, #0x158
    660c:	br	x17

0000000000006610 <real_clock_gettime@plt>:
    6610:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #352]
    6618:	add	x16, x16, #0x160
    661c:	br	x17

0000000000006620 <__cxa_demangle@plt>:
    6620:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #360]
    6628:	add	x16, x16, #0x168
    662c:	br	x17

0000000000006630 <__sanitizer_symbolize_code@plt>:
    6630:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #368]
    6638:	add	x16, x16, #0x170
    663c:	br	x17

0000000000006640 <dl_iterate_phdr@plt>:
    6640:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #376]
    6648:	add	x16, x16, #0x178
    664c:	br	x17

0000000000006650 <__sanitizer_dump_coverage@plt>:
    6650:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #384]
    6658:	add	x16, x16, #0x180
    665c:	br	x17

0000000000006660 <clock_gettime@plt>:
    6660:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #392]
    6668:	add	x16, x16, #0x188
    666c:	br	x17

0000000000006670 <getpid@plt>:
    6670:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #400]
    6678:	add	x16, x16, #0x190
    667c:	br	x17

0000000000006680 <__sanitizer_symbolize_flush@plt>:
    6680:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #408]
    6688:	add	x16, x16, #0x198
    668c:	br	x17

0000000000006690 <__asan_backtrace_create_state@plt>:
    6690:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #416]
    6698:	add	x16, x16, #0x1a0
    669c:	br	x17

00000000000066a0 <mmap@plt>:
    66a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #424]
    66a8:	add	x16, x16, #0x1a8
    66ac:	br	x17

00000000000066b0 <munmap@plt>:
    66b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #432]
    66b8:	add	x16, x16, #0x1b0
    66bc:	br	x17

00000000000066c0 <__asan_cplus_demangle_print_callback@plt>:
    66c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #440]
    66c8:	add	x16, x16, #0x1b8
    66cc:	br	x17

00000000000066d0 <__ubsan_on_report@plt>:
    66d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #448]
    66d8:	add	x16, x16, #0x1c0
    66dc:	br	x17

00000000000066e0 <__dynamic_cast@plt>:
    66e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #456]
    66e8:	add	x16, x16, #0x1c8
    66ec:	br	x17

00000000000066f0 <__cxa_atexit@plt>:
    66f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #464]
    66f8:	add	x16, x16, #0x1d0
    66fc:	br	x17

0000000000006700 <snprintf@plt>:
    6700:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #472]
    6708:	add	x16, x16, #0x1d8
    670c:	br	x17

0000000000006710 <pthread_attr_getstack@plt>:
    6710:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #480]
    6718:	add	x16, x16, #0x1e0
    671c:	br	x17

0000000000006720 <pthread_attr_setstacksize@plt>:
    6720:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #488]
    6728:	add	x16, x16, #0x1e8
    672c:	br	x17

0000000000006730 <_Unwind_GetIP@plt>:
    6730:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #496]
    6738:	add	x16, x16, #0x1f0
    673c:	br	x17

0000000000006740 <madvise@plt>:
    6740:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #504]
    6748:	add	x16, x16, #0x1f8
    674c:	br	x17

0000000000006750 <usleep@plt>:
    6750:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #512]
    6758:	add	x16, x16, #0x200
    675c:	br	x17

0000000000006760 <shm_unlink@plt>:
    6760:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #520]
    6768:	add	x16, x16, #0x208
    676c:	br	x17

0000000000006770 <__sched_cpucount@plt>:
    6770:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #528]
    6778:	add	x16, x16, #0x210
    677c:	br	x17

0000000000006780 <strrchr@plt>:
    6780:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #536]
    6788:	add	x16, x16, #0x218
    678c:	br	x17

0000000000006790 <__errno_location@plt>:
    6790:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #544]
    6798:	add	x16, x16, #0x220
    679c:	br	x17

00000000000067a0 <sched_yield@plt>:
    67a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #552]
    67a8:	add	x16, x16, #0x228
    67ac:	br	x17

00000000000067b0 <__asan_backtrace_get_view@plt>:
    67b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #560]
    67b8:	add	x16, x16, #0x230
    67bc:	br	x17

00000000000067c0 <syslog@plt>:
    67c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #568]
    67c8:	add	x16, x16, #0x238
    67cc:	br	x17

00000000000067d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    67d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #576]
    67d8:	add	x16, x16, #0x240
    67dc:	br	x17

00000000000067e0 <__asan_cplus_demangle_fill_extended_operator@plt>:
    67e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #584]
    67e8:	add	x16, x16, #0x248
    67ec:	br	x17

00000000000067f0 <__asan_internal_strcmp@plt>:
    67f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #592]
    67f8:	add	x16, x16, #0x250
    67fc:	br	x17

0000000000006800 <__asan_internal_strnlen@plt>:
    6800:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #600]
    6808:	add	x16, x16, #0x258
    680c:	br	x17

0000000000006810 <close@plt>:
    6810:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #608]
    6818:	add	x16, x16, #0x260
    681c:	br	x17

0000000000006820 <__extenddftf2@plt>:
    6820:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #616]
    6828:	add	x16, x16, #0x268
    682c:	br	x17

0000000000006830 <__asan_internal_strncmp@plt>:
    6830:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #624]
    6838:	add	x16, x16, #0x270
    683c:	br	x17

0000000000006840 <__ubsan_handle_cfi_bad_type@plt>:
    6840:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #632]
    6848:	add	x16, x16, #0x278
    684c:	br	x17

0000000000006850 <__asan_cplus_demangle_fill_ctor@plt>:
    6850:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #640]
    6858:	add	x16, x16, #0x280
    685c:	br	x17

0000000000006860 <setrlimit@plt>:
    6860:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #648]
    6868:	add	x16, x16, #0x288
    686c:	br	x17

0000000000006870 <getauxval@plt>:
    6870:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #656]
    6878:	add	x16, x16, #0x290
    687c:	br	x17

0000000000006880 <malloc@plt>:
    6880:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #664]
    6888:	add	x16, x16, #0x298
    688c:	br	x17

0000000000006890 <__asan_backtrace_free@plt>:
    6890:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #672]
    6898:	add	x16, x16, #0x2a0
    689c:	br	x17

00000000000068a0 <__lxstat@plt>:
    68a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #680]
    68a8:	add	x16, x16, #0x2a8
    68ac:	br	x17

00000000000068b0 <abort@plt>:
    68b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #688]
    68b8:	add	x16, x16, #0x2b0
    68bc:	br	x17

00000000000068c0 <getenv@plt>:
    68c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #696]
    68c8:	add	x16, x16, #0x2b8
    68cc:	br	x17

00000000000068d0 <__asan_backtrace_initialize@plt>:
    68d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #704]
    68d8:	add	x16, x16, #0x2c0
    68dc:	br	x17

00000000000068e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    68e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #712]
    68e8:	add	x16, x16, #0x2c8
    68ec:	br	x17

00000000000068f0 <__asan_internal_memcmp@plt>:
    68f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #720]
    68f8:	add	x16, x16, #0x2d0
    68fc:	br	x17

0000000000006900 <sysconf@plt>:
    6900:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #728]
    6908:	add	x16, x16, #0x2d8
    690c:	br	x17

0000000000006910 <__extendsftf2@plt>:
    6910:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #736]
    6918:	add	x16, x16, #0x2e0
    691c:	br	x17

0000000000006920 <pthread_self@plt>:
    6920:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #744]
    6928:	add	x16, x16, #0x2e8
    692c:	br	x17

0000000000006930 <getuid@plt>:
    6930:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #752]
    6938:	add	x16, x16, #0x2f0
    693c:	br	x17

0000000000006940 <getpagesize@plt>:
    6940:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #760]
    6948:	add	x16, x16, #0x2f8
    694c:	br	x17

0000000000006950 <__asan_backtrace_vector_finish@plt>:
    6950:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #768]
    6958:	add	x16, x16, #0x300
    695c:	br	x17

0000000000006960 <__asan_backtrace_close@plt>:
    6960:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #776]
    6968:	add	x16, x16, #0x308
    696c:	br	x17

0000000000006970 <__asan_cplus_demangle_mangled_name@plt>:
    6970:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #784]
    6978:	add	x16, x16, #0x310
    697c:	br	x17

0000000000006980 <__ubsan_default_options@plt>:
    6980:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #792]
    6988:	add	x16, x16, #0x318
    698c:	br	x17

0000000000006990 <getrlimit@plt>:
    6990:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #800]
    6998:	add	x16, x16, #0x320
    699c:	br	x17

00000000000069a0 <sigaltstack@plt>:
    69a0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #808]
    69a8:	add	x16, x16, #0x328
    69ac:	br	x17

00000000000069b0 <fcntl@plt>:
    69b0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #816]
    69b8:	add	x16, x16, #0x330
    69bc:	br	x17

00000000000069c0 <__gmon_start__@plt>:
    69c0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #824]
    69c8:	add	x16, x16, #0x338
    69cc:	br	x17

00000000000069d0 <sigaction@plt>:
    69d0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #832]
    69d8:	add	x16, x16, #0x340
    69dc:	br	x17

00000000000069e0 <__sanitizer_set_report_path@plt>:
    69e0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #840]
    69e8:	add	x16, x16, #0x348
    69ec:	br	x17

00000000000069f0 <__asan_cplus_demangle_v3_callback@plt>:
    69f0:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #848]
    69f8:	add	x16, x16, #0x350
    69fc:	br	x17

0000000000006a00 <__sanitizer_print_memory_profile@plt>:
    6a00:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #856]
    6a08:	add	x16, x16, #0x358
    6a0c:	br	x17

0000000000006a10 <__asan_cplus_demangle_fill_dtor@plt>:
    6a10:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #864]
    6a18:	add	x16, x16, #0x360
    6a1c:	br	x17

0000000000006a20 <__sancov_default_options@plt>:
    6a20:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #872]
    6a28:	add	x16, x16, #0x368
    6a2c:	br	x17

0000000000006a30 <__asan_backtrace_open@plt>:
    6a30:	adrp	x16, 66000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #880]
    6a38:	add	x16, x16, #0x370
    6a3c:	br	x17

Disassembly of section .text:

0000000000006a40 <__ubsan_default_options@@Base-0x1688>:
    6a40:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6a44:	ldr	x0, [x0, #4032]
    6a48:	cbz	x0, 6a50 <__asan_backtrace_open@plt+0x20>
    6a4c:	b	69c0 <__gmon_start__@plt>
    6a50:	ret
    6a54:	nop
    6a58:	adrp	x0, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    6a5c:	add	x0, x0, #0xd80
    6a60:	adrp	x1, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    6a64:	add	x1, x1, #0xd80
    6a68:	cmp	x1, x0
    6a6c:	b.eq	6a84 <__asan_backtrace_open@plt+0x54>  // b.none
    6a70:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6a74:	ldr	x1, [x1, #4000]
    6a78:	cbz	x1, 6a84 <__asan_backtrace_open@plt+0x54>
    6a7c:	mov	x16, x1
    6a80:	br	x16
    6a84:	ret
    6a88:	adrp	x0, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    6a8c:	add	x0, x0, #0xd80
    6a90:	adrp	x1, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    6a94:	add	x1, x1, #0xd80
    6a98:	sub	x1, x1, x0
    6a9c:	lsr	x2, x1, #63
    6aa0:	add	x1, x2, x1, asr #3
    6aa4:	cmp	xzr, x1, asr #1
    6aa8:	asr	x1, x1, #1
    6aac:	b.eq	6ac4 <__asan_backtrace_open@plt+0x94>  // b.none
    6ab0:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6ab4:	ldr	x2, [x2, #4040]
    6ab8:	cbz	x2, 6ac4 <__asan_backtrace_open@plt+0x94>
    6abc:	mov	x16, x2
    6ac0:	br	x16
    6ac4:	ret
    6ac8:	stp	x29, x30, [sp, #-32]!
    6acc:	mov	x29, sp
    6ad0:	str	x19, [sp, #16]
    6ad4:	adrp	x19, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    6ad8:	ldrb	w0, [x19, #3456]
    6adc:	cbnz	w0, 6b04 <__asan_backtrace_open@plt+0xd4>
    6ae0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6ae4:	ldr	x0, [x0, #3864]
    6ae8:	cbz	x0, 6af8 <__asan_backtrace_open@plt+0xc8>
    6aec:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
    6af0:	ldr	x0, [x0, #896]
    6af4:	bl	6580 <__cxa_finalize@plt>
    6af8:	bl	6a58 <__asan_backtrace_open@plt+0x28>
    6afc:	mov	w0, #0x1                   	// #1
    6b00:	strb	w0, [x19, #3456]
    6b04:	ldr	x19, [sp, #16]
    6b08:	ldp	x29, x30, [sp], #32
    6b0c:	ret
    6b10:	b	6a88 <__asan_backtrace_open@plt+0x58>
    6b14:	nop
    6b18:	cmp	w0, #0x19
    6b1c:	b.ls	6b44 <__asan_backtrace_open@plt+0x114>  // b.plast
    6b20:	str	x30, [sp, #-16]!
    6b24:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b28:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b2c:	add	x2, x2, #0x800
    6b30:	add	x0, x0, #0x828
    6b34:	mov	x4, #0x0                   	// #0
    6b38:	mov	x3, #0x0                   	// #0
    6b3c:	mov	w1, #0x39                  	// #57
    6b40:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    6b44:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b48:	add	x1, x1, #0xb48
    6b4c:	ldrb	w0, [x1, w0, uxtw]
    6b50:	adr	x1, 6b5c <__asan_backtrace_open@plt+0x12c>
    6b54:	add	x0, x1, w0, sxtb #2
    6b58:	br	x0
    6b5c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b60:	add	x0, x0, #0x598
    6b64:	ret
    6b68:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b6c:	add	x0, x0, #0x7e8
    6b70:	ret
    6b74:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b78:	add	x0, x0, #0x740
    6b7c:	ret
    6b80:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b84:	add	x0, x0, #0x728
    6b88:	ret
    6b8c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b90:	add	x0, x0, #0x718
    6b94:	ret
    6b98:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6b9c:	add	x0, x0, #0x700
    6ba0:	ret
    6ba4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6ba8:	add	x0, x0, #0x6e8
    6bac:	ret
    6bb0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bb4:	add	x0, x0, #0x6d0
    6bb8:	ret
    6bbc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bc0:	add	x0, x0, #0x6b8
    6bc4:	ret
    6bc8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bcc:	add	x0, x0, #0x7b8
    6bd0:	ret
    6bd4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bd8:	add	x0, x0, #0x758
    6bdc:	ret
    6be0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6be4:	add	x0, x0, #0x5c8
    6be8:	ret
    6bec:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bf0:	add	x0, x0, #0x600
    6bf4:	ret
    6bf8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6bfc:	add	x0, x0, #0x5e8
    6c00:	ret
    6c04:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c08:	add	x0, x0, #0x668
    6c0c:	ret
    6c10:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c14:	add	x0, x0, #0x650
    6c18:	ret
    6c1c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c20:	add	x0, x0, #0x638
    6c24:	ret
    6c28:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c2c:	add	x0, x0, #0x620
    6c30:	ret
    6c34:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c38:	add	x0, x0, #0x7a0
    6c3c:	ret
    6c40:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c44:	add	x0, x0, #0x788
    6c48:	ret
    6c4c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c50:	add	x0, x0, #0x770
    6c54:	ret
    6c58:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c5c:	add	x0, x0, #0x570
    6c60:	ret
    6c64:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c68:	add	x0, x0, #0x7d0
    6c6c:	ret
    6c70:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c74:	add	x0, x0, #0x580
    6c78:	ret
    6c7c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c80:	add	x0, x0, #0x5b0
    6c84:	ret
    6c88:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6c8c:	add	x0, x0, #0x690
    6c90:	ret
    6c94:	nop
    6c98:	cbz	w2, 6d84 <__asan_backtrace_open@plt+0x354>
    6c9c:	sub	w2, w2, #0x1
    6ca0:	add	x3, x1, #0x58
    6ca4:	mov	w5, #0x58                  	// #88
    6ca8:	mov	x4, #0x0                   	// #0
    6cac:	str	x30, [sp, #-16]!
    6cb0:	umaddl	x2, w2, w5, x3
    6cb4:	b	6cec <__asan_backtrace_open@plt+0x2bc>
    6cb8:	ldr	w3, [x4]
    6cbc:	ldr	x5, [x4, #24]
    6cc0:	cmp	w3, #0x2
    6cc4:	b.ne	6d44 <__asan_backtrace_open@plt+0x314>  // b.any
    6cc8:	ldr	w3, [x1]
    6ccc:	ldr	x6, [x1, #24]
    6cd0:	cmp	w3, #0x2
    6cd4:	b.ne	6d64 <__asan_backtrace_open@plt+0x334>  // b.any
    6cd8:	cmp	x5, x6
    6cdc:	csel	x4, x4, x1, ls  // ls = plast
    6ce0:	add	x1, x1, #0x58
    6ce4:	cmp	x1, x2
    6ce8:	b.eq	6d18 <__asan_backtrace_open@plt+0x2e8>  // b.none
    6cec:	ldr	w3, [x1, #40]
    6cf0:	ldr	x5, [x1, #64]
    6cf4:	cmp	w3, #0x2
    6cf8:	b.ne	6d24 <__asan_backtrace_open@plt+0x2f4>  // b.any
    6cfc:	cmp	x5, x0
    6d00:	b.ls	6ce0 <__asan_backtrace_open@plt+0x2b0>  // b.plast
    6d04:	cbnz	x4, 6cb8 <__asan_backtrace_open@plt+0x288>
    6d08:	mov	x4, x1
    6d0c:	add	x1, x1, #0x58
    6d10:	cmp	x1, x2
    6d14:	b.ne	6cec <__asan_backtrace_open@plt+0x2bc>  // b.any
    6d18:	mov	x0, x4
    6d1c:	ldr	x30, [sp], #16
    6d20:	ret
    6d24:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d28:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d2c:	add	x2, x2, #0x858
    6d30:	add	x0, x0, #0x878
    6d34:	mov	x4, #0x0                   	// #0
    6d38:	mov	x3, #0x0                   	// #0
    6d3c:	mov	w1, #0x55                  	// #85
    6d40:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    6d44:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d48:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d4c:	add	x2, x2, #0x858
    6d50:	add	x0, x0, #0x878
    6d54:	mov	x4, #0x0                   	// #0
    6d58:	mov	x3, #0x0                   	// #0
    6d5c:	mov	w1, #0x55                  	// #85
    6d60:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    6d64:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d68:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6d6c:	add	x2, x2, #0x858
    6d70:	add	x0, x0, #0x878
    6d74:	mov	x4, #0x0                   	// #0
    6d78:	mov	x3, #0x0                   	// #0
    6d7c:	mov	w1, #0x55                  	// #85
    6d80:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    6d84:	mov	x4, #0x0                   	// #0
    6d88:	mov	x0, x4
    6d8c:	ret
    6d90:	stp	x19, x20, [sp, #-112]!
    6d94:	mov	x20, x2
    6d98:	str	x30, [sp, #64]
    6d9c:	ldrb	w2, [x1]
    6da0:	cbz	w2, 6e4c <__asan_backtrace_open@plt+0x41c>
    6da4:	mov	x19, x1
    6da8:	stp	x21, x22, [sp, #16]
    6dac:	adrp	x22, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6db0:	mov	x21, x0
    6db4:	add	x22, x22, #0x8c8
    6db8:	stp	x23, x24, [sp, #32]
    6dbc:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6dc0:	add	x24, sp, #0x50
    6dc4:	add	x23, x23, #0x8c0
    6dc8:	stp	x25, x26, [sp, #48]
    6dcc:	nop
    6dd0:	cmp	w2, #0x25
    6dd4:	add	x25, x19, #0x1
    6dd8:	b.ne	6e9c <__asan_backtrace_open@plt+0x46c>  // b.any
    6ddc:	ldrb	w3, [x19, #1]
    6de0:	add	x19, x19, #0x2
    6de4:	ubfiz	x3, x3, #5, #8
    6de8:	sub	x3, x3, #0x600
    6dec:	add	x26, x20, x3
    6df0:	ldr	w3, [x20, x3]
    6df4:	cmp	w3, #0x3
    6df8:	b.eq	6ee0 <__asan_backtrace_open@plt+0x4b0>  // b.none
    6dfc:	b.hi	6e74 <__asan_backtrace_open@plt+0x444>  // b.pmore
    6e00:	cmp	w3, #0x1
    6e04:	b.eq	6ebc <__asan_backtrace_open@plt+0x48c>  // b.none
    6e08:	cmp	w3, #0x2
    6e0c:	b.ne	6e58 <__asan_backtrace_open@plt+0x428>  // b.any
    6e10:	ldp	x2, x0, [x26, #16]
    6e14:	cbz	x0, 6f30 <__asan_backtrace_open@plt+0x500>
    6e18:	mov	w5, w2
    6e1c:	lsr	x4, x2, #32
    6e20:	mov	w3, w0
    6e24:	lsr	x2, x0, #32
    6e28:	mov	x1, x22
    6e2c:	mov	x0, x21
    6e30:	bl	1ce00 <OnPrint@@Base+0x420>
    6e34:	nop
    6e38:	ldrb	w2, [x25, #1]
    6e3c:	cbnz	w2, 6dd0 <__asan_backtrace_open@plt+0x3a0>
    6e40:	ldp	x21, x22, [sp, #16]
    6e44:	ldp	x23, x24, [sp, #32]
    6e48:	ldp	x25, x26, [sp, #48]
    6e4c:	ldr	x30, [sp, #64]
    6e50:	ldp	x19, x20, [sp], #112
    6e54:	ret
    6e58:	cbnz	w3, 6e38 <__asan_backtrace_open@plt+0x408>
    6e5c:	ldr	x2, [x26, #16]
    6e60:	mov	x0, x21
    6e64:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6e68:	add	x1, x1, #0x8b0
    6e6c:	bl	1ce00 <OnPrint@@Base+0x420>
    6e70:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6e74:	cmp	w3, #0x4
    6e78:	b.eq	6f00 <__asan_backtrace_open@plt+0x4d0>  // b.none
    6e7c:	cmp	w3, #0x5
    6e80:	b.ne	6e38 <__asan_backtrace_open@plt+0x408>  // b.any
    6e84:	ldr	x2, [x26, #16]
    6e88:	mov	x0, x21
    6e8c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6e90:	add	x1, x1, #0x8f0
    6e94:	bl	1ce00 <OnPrint@@Base+0x420>
    6e98:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6e9c:	mov	x0, x21
    6ea0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6ea4:	add	x1, x1, #0x8a8
    6ea8:	bl	1ce00 <OnPrint@@Base+0x420>
    6eac:	mov	x0, x25
    6eb0:	mov	x25, x19
    6eb4:	mov	x19, x0
    6eb8:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ebc:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    6ec0:	ldr	x1, [x26, #16]
    6ec4:	bl	23e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f8>
    6ec8:	mov	x2, x0
    6ecc:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6ed0:	mov	x0, x21
    6ed4:	add	x1, x1, #0x8b8
    6ed8:	bl	1ce00 <OnPrint@@Base+0x420>
    6edc:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6ee0:	ldp	x2, x0, [x26, #16]
    6ee4:	cmp	x2, #0x0
    6ee8:	cinc	x1, x0, lt  // lt = tstop
    6eec:	cbnz	x1, 6e18 <__asan_backtrace_open@plt+0x3e8>
    6ef0:	mov	x1, x23
    6ef4:	mov	x0, x21
    6ef8:	bl	1ce00 <OnPrint@@Base+0x420>
    6efc:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f00:	ldr	q0, [x26, #16]
    6f04:	mov	x0, x24
    6f08:	mov	x1, #0x20                  	// #32
    6f0c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6f10:	add	x2, x2, #0x8e8
    6f14:	bl	6700 <snprintf@plt>
    6f18:	mov	x2, x24
    6f1c:	mov	x0, x21
    6f20:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6f24:	add	x1, x1, #0x8b0
    6f28:	bl	1ce00 <OnPrint@@Base+0x420>
    6f2c:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f30:	mov	x0, x21
    6f34:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    6f38:	add	x1, x1, #0x8e0
    6f3c:	bl	1ce00 <OnPrint@@Base+0x420>
    6f40:	b	6e38 <__asan_backtrace_open@plt+0x408>
    6f44:	nop
    6f48:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6f4c:	sub	sp, sp, #0x860
    6f50:	ldr	x4, [x4, #3816]
    6f54:	stp	x19, x20, [sp]
    6f58:	mov	x19, x0
    6f5c:	ldrb	w0, [x4, #1]
    6f60:	str	x30, [sp, #32]
    6f64:	cbnz	w0, 6f78 <__asan_backtrace_open@plt+0x548>
    6f68:	ldp	x19, x20, [sp]
    6f6c:	ldr	x30, [sp, #32]
    6f70:	add	sp, sp, #0x860
    6f74:	ret
    6f78:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    6f7c:	stp	x21, x22, [sp, #16]
    6f80:	add	x21, sp, #0x48
    6f84:	ldr	x0, [x0, #4056]
    6f88:	mov	x20, x1
    6f8c:	add	x1, x21, #0x10
    6f90:	stp	xzr, xzr, [sp, #56]
    6f94:	mov	x6, #0x0                   	// #0
    6f98:	ldrb	w22, [x0, #33]
    6f9c:	mov	x5, #0x0                   	// #0
    6fa0:	str	x1, [sp, #72]
    6fa4:	str	xzr, [sp, #80]
    6fa8:	str	xzr, [sp, #2136]
    6fac:	cbnz	w22, 6fe8 <__asan_backtrace_open@plt+0x5b8>
    6fb0:	mov	w7, w22
    6fb4:	mov	x3, x20
    6fb8:	mov	x2, x19
    6fbc:	mov	x4, #0x0                   	// #0
    6fc0:	mov	w1, #0x100                 	// #256
    6fc4:	mov	x0, x21
    6fc8:	bl	1f060 <OnPrint@@Base+0x2680>
    6fcc:	mov	x0, x21
    6fd0:	bl	1ebf8 <OnPrint@@Base+0x2218>
    6fd4:	ldp	x19, x20, [sp]
    6fd8:	ldp	x21, x22, [sp, #16]
    6fdc:	ldr	x30, [sp, #32]
    6fe0:	add	sp, sp, #0x860
    6fe4:	ret
    6fe8:	add	x2, sp, #0x40
    6fec:	add	x1, sp, #0x38
    6ff0:	mov	w0, #0x0                   	// #0
    6ff4:	bl	19720 <__sanitizer_set_report_fd@@Base+0x5e50>
    6ff8:	ldp	x5, x6, [sp, #56]
    6ffc:	b	6fb0 <__asan_backtrace_open@plt+0x580>
    7000:	stp	x19, x20, [sp, #-80]!
    7004:	mov	x19, x0
    7008:	mov	x20, x1
    700c:	stp	x21, x24, [sp, #16]
    7010:	mov	x21, x2
    7014:	ands	w24, w5, #0xff
    7018:	str	x30, [sp, #32]
    701c:	stp	xzr, xzr, [sp, #64]
    7020:	b.ne	7050 <__asan_backtrace_open@plt+0x620>  // b.any
    7024:	mov	x6, #0x0                   	// #0
    7028:	mov	x5, #0x0                   	// #0
    702c:	mov	w7, w24
    7030:	mov	x2, x21
    7034:	mov	w1, w20
    7038:	mov	x0, x19
    703c:	bl	1f060 <OnPrint@@Base+0x2680>
    7040:	ldp	x21, x24, [sp, #16]
    7044:	ldr	x30, [sp, #32]
    7048:	ldp	x19, x20, [sp], #80
    704c:	ret
    7050:	add	x2, sp, #0x48
    7054:	add	x1, sp, #0x40
    7058:	mov	w0, #0x0                   	// #0
    705c:	stp	x3, x4, [sp, #48]
    7060:	bl	19720 <__sanitizer_set_report_fd@@Base+0x5e50>
    7064:	ldp	x3, x4, [sp, #48]
    7068:	ldp	x5, x6, [sp, #64]
    706c:	b	702c <__asan_backtrace_open@plt+0x5fc>
    7070:	stp	x19, x30, [sp, #-16]!
    7074:	mov	x19, x0
    7078:	bl	bd08 <__ubsan_handle_cfi_bad_type@@Base+0x4b0>
    707c:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    7080:	mov	x1, x19
    7084:	ldp	x19, x30, [sp], #16
    7088:	b	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
    708c:	nop
    7090:	ldr	w3, [x0, #320]
    7094:	cmp	w3, #0x8
    7098:	b.eq	70c0 <__asan_backtrace_open@plt+0x690>  // b.none
    709c:	ubfiz	x4, x3, #5, #32
    70a0:	add	w3, w3, #0x1
    70a4:	add	x4, x4, #0x40
    70a8:	str	w3, [x0, #320]
    70ac:	add	x3, x0, x4
    70b0:	add	x1, x1, #0x4
    70b4:	str	wzr, [x0, x4]
    70b8:	str	x1, [x3, #16]
    70bc:	ret
    70c0:	str	x30, [sp, #-16]!
    70c4:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    70c8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    70cc:	add	x2, x2, #0x8f8
    70d0:	add	x0, x0, #0x878
    70d4:	mov	x4, #0x0                   	// #0
    70d8:	mov	x3, #0x0                   	// #0
    70dc:	mov	w1, #0xbf                  	// #191
    70e0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    70e4:	nop
    70e8:	stp	x19, x30, [sp, #-16]!
    70ec:	mov	x19, x0
    70f0:	ldr	x0, [x1]
    70f4:	ldrh	w2, [x0]
    70f8:	cbz	w2, 7144 <__asan_backtrace_open@plt+0x714>
    70fc:	cmp	w2, #0x1
    7100:	b.ne	71cc <__asan_backtrace_open@plt+0x79c>  // b.any
    7104:	mov	x0, x1
    7108:	bl	c8d8 <__ubsan_get_current_report_data@@Base+0x888>
    710c:	ldr	w0, [x19, #320]
    7110:	cmp	w0, #0x8
    7114:	b.eq	7208 <__asan_backtrace_open@plt+0x7d8>  // b.none
    7118:	ubfiz	x1, x0, #5, #32
    711c:	add	w0, w0, #0x1
    7120:	add	x1, x1, #0x40
    7124:	str	w0, [x19, #320]
    7128:	add	x0, x19, x1
    712c:	mov	w2, #0x4                   	// #4
    7130:	str	w2, [x19, x1]
    7134:	str	q0, [x0, #16]
    7138:	mov	x0, x19
    713c:	ldp	x19, x30, [sp], #16
    7140:	ret
    7144:	ldrh	w0, [x0, #2]
    7148:	tbz	w0, #0, 718c <__asan_backtrace_open@plt+0x75c>
    714c:	mov	x0, x1
    7150:	bl	c648 <__ubsan_get_current_report_data@@Base+0x5f8>
    7154:	ldr	w2, [x19, #320]
    7158:	cmp	w2, #0x8
    715c:	b.eq	7208 <__asan_backtrace_open@plt+0x7d8>  // b.none
    7160:	ubfiz	x3, x2, #5, #32
    7164:	add	w2, w2, #0x1
    7168:	add	x3, x3, #0x40
    716c:	str	w2, [x19, #320]
    7170:	add	x2, x19, x3
    7174:	mov	w4, #0x3                   	// #3
    7178:	str	w4, [x19, x3]
    717c:	stp	x0, x1, [x2, #16]
    7180:	mov	x0, x19
    7184:	ldp	x19, x30, [sp], #16
    7188:	ret
    718c:	mov	x0, x1
    7190:	bl	c730 <__ubsan_get_current_report_data@@Base+0x6e0>
    7194:	ldr	w2, [x19, #320]
    7198:	cmp	w2, #0x8
    719c:	b.eq	7208 <__asan_backtrace_open@plt+0x7d8>  // b.none
    71a0:	ubfiz	x3, x2, #5, #32
    71a4:	add	w2, w2, #0x1
    71a8:	add	x3, x3, #0x40
    71ac:	str	w2, [x19, #320]
    71b0:	add	x2, x19, x3
    71b4:	mov	w4, #0x2                   	// #2
    71b8:	str	w4, [x19, x3]
    71bc:	stp	x0, x1, [x2, #16]
    71c0:	mov	x0, x19
    71c4:	ldp	x19, x30, [sp], #16
    71c8:	ret
    71cc:	ldr	w0, [x19, #320]
    71d0:	cmp	w0, #0x8
    71d4:	b.eq	7208 <__asan_backtrace_open@plt+0x7d8>  // b.none
    71d8:	ubfiz	x1, x0, #5, #32
    71dc:	add	w0, w0, #0x1
    71e0:	add	x1, x1, #0x40
    71e4:	str	w0, [x19, #320]
    71e8:	add	x2, x19, x1
    71ec:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    71f0:	add	x0, x0, #0x918
    71f4:	str	wzr, [x19, x1]
    71f8:	str	x0, [x2, #16]
    71fc:	mov	x0, x19
    7200:	ldp	x19, x30, [sp], #16
    7204:	ret
    7208:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    720c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7210:	add	x2, x2, #0x8f8
    7214:	add	x0, x0, #0x878
    7218:	mov	x4, #0x0                   	// #0
    721c:	mov	x3, #0x0                   	// #0
    7220:	mov	w1, #0xbf                  	// #191
    7224:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7228:	stp	x19, x20, [sp, #-208]!
    722c:	stp	x27, x28, [sp, #64]
    7230:	adrp	x27, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    7234:	stp	x21, x22, [sp, #16]
    7238:	stp	x23, x24, [sp, #32]
    723c:	mov	x24, x0
    7240:	stp	x25, x26, [sp, #48]
    7244:	str	x30, [sp, #80]
    7248:	bl	20838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b0>
    724c:	bl	1f838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
    7250:	and	w26, w0, #0xff
    7254:	ldr	x19, [x27, #4016]
    7258:	str	xzr, [sp, #128]
    725c:	stp	xzr, xzr, [sp, #136]
    7260:	ldr	x0, [x19]
    7264:	cbz	x0, 7498 <__asan_backtrace_open@plt+0xa68>
    7268:	sub	x25, x0, #0x1
    726c:	ands	x25, x25, x0
    7270:	b.ne	77a8 <__asan_backtrace_open@plt+0xd78>  // b.any
    7274:	add	x19, x0, #0x3ff
    7278:	neg	x0, x0
    727c:	and	x19, x19, x0
    7280:	mov	w2, #0x0                   	// #0
    7284:	mov	x0, x19
    7288:	adrp	x28, 40000 <__asan_backtrace_get_view@@Base+0x78>
    728c:	add	x1, x28, #0x988
    7290:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    7294:	ldr	x1, [sp, #128]
    7298:	mov	x20, x0
    729c:	ldr	x2, [sp, #144]
    72a0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    72a4:	ldp	x0, x1, [sp, #128]
    72a8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    72ac:	stp	x20, x19, [sp, #128]
    72b0:	ldr	x2, [sp, #144]
    72b4:	cmp	x2, #0x3ff
    72b8:	b.hi	72dc <__asan_backtrace_open@plt+0x8ac>  // b.pmore
    72bc:	cmp	x19, #0x3ff
    72c0:	b.ls	7728 <__asan_backtrace_open@plt+0xcf8>  // b.plast
    72c4:	mov	x3, #0x400                 	// #1024
    72c8:	add	x0, x20, x2
    72cc:	mov	w1, #0x0                   	// #0
    72d0:	sub	x2, x3, x2
    72d4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    72d8:	ldr	x20, [sp, #128]
    72dc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    72e0:	add	x19, x24, #0x40
    72e4:	add	x22, sp, #0x80
    72e8:	ldr	q0, [x0, #2992]
    72ec:	str	q0, [sp, #144]
    72f0:	strb	wzr, [x20]
    72f4:	ldr	w0, [x24, #40]
    72f8:	cbz	w0, 744c <__asan_backtrace_open@plt+0xa1c>
    72fc:	cmp	w26, #0x0
    7300:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    7304:	adrp	x20, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7308:	add	x1, x1, #0xd20
    730c:	add	x20, x20, #0x958
    7310:	mov	x0, x22
    7314:	csel	x20, x20, x1, ne  // ne = any
    7318:	mov	x1, x20
    731c:	bl	1ce00 <OnPrint@@Base+0x420>
    7320:	ldp	x2, x3, [x24, #16]
    7324:	stp	x2, x3, [sp, #176]
    7328:	ldp	x0, x1, [x24]
    732c:	stp	x0, x1, [sp, #160]
    7330:	ldr	w0, [x24]
    7334:	ldr	x2, [x24, #32]
    7338:	str	x2, [sp, #192]
    733c:	cmp	w0, #0x2
    7340:	b.eq	74f4 <__asan_backtrace_open@plt+0xac4>  // b.none
    7344:	b.hi	7360 <__asan_backtrace_open@plt+0x930>  // b.pmore
    7348:	cbz	w0, 74a4 <__asan_backtrace_open@plt+0xa74>
    734c:	ldr	x1, [sp, #168]
    7350:	cbz	x1, 74a4 <__asan_backtrace_open@plt+0xa74>
    7354:	ldp	w2, w3, [sp, #176]
    7358:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    735c:	b	737c <__asan_backtrace_open@plt+0x94c>
    7360:	cmp	w0, #0x3
    7364:	b.ne	7390 <__asan_backtrace_open@plt+0x960>  // b.any
    7368:	ldr	x1, [x2, #56]
    736c:	add	x0, x2, #0x8
    7370:	cbz	x1, 77b8 <__asan_backtrace_open@plt+0xd88>
    7374:	ldp	w2, w3, [x0, #56]
    7378:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    737c:	ldr	x4, [x4, #4056]
    7380:	mov	x0, x22
    7384:	ldr	x5, [x4, #24]
    7388:	ldrb	w4, [x4, #181]
    738c:	bl	209b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>
    7390:	mov	x0, x22
    7394:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7398:	add	x1, x1, #0x9f8
    739c:	bl	1ce00 <OnPrint@@Base+0x420>
    73a0:	ldr	w0, [x24, #40]
    73a4:	cbz	w0, 74cc <__asan_backtrace_open@plt+0xa9c>
    73a8:	cmp	w0, #0x1
    73ac:	b.ne	73d0 <__asan_backtrace_open@plt+0x9a0>  // b.any
    73b0:	cbnz	w26, 7794 <__asan_backtrace_open@plt+0xd64>
    73b4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    73b8:	add	x2, x2, #0xd20
    73bc:	mov	x3, x2
    73c0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    73c4:	mov	x0, x22
    73c8:	add	x1, x1, #0xa18
    73cc:	bl	1ce00 <OnPrint@@Base+0x420>
    73d0:	ldr	x1, [x24, #48]
    73d4:	mov	x2, x19
    73d8:	mov	x0, x22
    73dc:	adrp	x20, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
    73e0:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    73e4:	adrp	x4, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    73e8:	cmp	w26, #0x0
    73ec:	add	x0, x4, #0xd20
    73f0:	adrp	x4, 40000 <__asan_backtrace_get_view@@Base+0x78>
    73f4:	add	x4, x4, #0x938
    73f8:	add	x1, x20, #0x6e0
    73fc:	csel	x21, x4, x0, ne  // ne = any
    7400:	mov	x0, x22
    7404:	mov	x2, x21
    7408:	bl	1ce00 <OnPrint@@Base+0x420>
    740c:	ldr	x1, [sp, #128]
    7410:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7414:	add	x0, x0, #0x8b0
    7418:	bl	1ccf0 <OnPrint@@Base+0x310>
    741c:	ldr	w0, [x24]
    7420:	cmp	w0, #0x2
    7424:	b.eq	7524 <__asan_backtrace_open@plt+0xaf4>  // b.none
    7428:	ldp	x0, x1, [sp, #128]
    742c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7430:	ldp	x21, x22, [sp, #16]
    7434:	ldp	x23, x24, [sp, #32]
    7438:	ldp	x25, x26, [sp, #48]
    743c:	ldp	x27, x28, [sp, #64]
    7440:	ldr	x30, [sp, #80]
    7444:	ldp	x19, x20, [sp], #208
    7448:	ret
    744c:	ldr	x1, [x24, #48]
    7450:	mov	x2, x19
    7454:	mov	x0, x22
    7458:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    745c:	ldr	w0, [x24, #44]
    7460:	bl	6b18 <__asan_backtrace_open@plt+0xe8>
    7464:	mov	x1, x0
    7468:	mov	x3, x22
    746c:	add	x0, sp, #0xa0
    7470:	mov	x2, x24
    7474:	bl	bea8 <__ubsan_on_report@@Base+0x8>
    7478:	ldr	x0, [sp, #144]
    747c:	ldr	x1, [sp, #128]
    7480:	cbz	x0, 77e0 <__asan_backtrace_open@plt+0xdb0>
    7484:	strb	wzr, [x1]
    7488:	str	xzr, [sp, #152]
    748c:	ldp	x0, x1, [sp, #176]
    7490:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7494:	b	72fc <__asan_backtrace_open@plt+0x8cc>
    7498:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    749c:	str	x0, [x19]
    74a0:	b	7268 <__asan_backtrace_open@plt+0x838>
    74a4:	mov	x0, x22
    74a8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    74ac:	add	x1, x1, #0x918
    74b0:	bl	1ce00 <OnPrint@@Base+0x420>
    74b4:	mov	x0, x22
    74b8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    74bc:	add	x1, x1, #0x9f8
    74c0:	bl	1ce00 <OnPrint@@Base+0x420>
    74c4:	ldr	w0, [x24, #40]
    74c8:	cbnz	w0, 73a8 <__asan_backtrace_open@plt+0x978>
    74cc:	cbnz	w26, 7780 <__asan_backtrace_open@plt+0xd50>
    74d0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    74d4:	add	x2, x2, #0xd20
    74d8:	mov	x3, x2
    74dc:	mov	x4, x20
    74e0:	mov	x0, x22
    74e4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    74e8:	add	x1, x1, #0xa00
    74ec:	bl	1ce00 <OnPrint@@Base+0x420>
    74f0:	b	73d0 <__asan_backtrace_open@plt+0x9a0>
    74f4:	ldr	x2, [x24, #24]
    74f8:	mov	x0, x22
    74fc:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7500:	add	x1, x1, #0x8f0
    7504:	bl	1ce00 <OnPrint@@Base+0x420>
    7508:	mov	x0, x22
    750c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7510:	add	x1, x1, #0x9f8
    7514:	bl	1ce00 <OnPrint@@Base+0x420>
    7518:	ldr	w0, [x24, #40]
    751c:	cbnz	w0, 73a8 <__asan_backtrace_open@plt+0x978>
    7520:	b	74cc <__asan_backtrace_open@plt+0xa9c>
    7524:	ldr	x6, [x24, #24]
    7528:	add	x0, x24, #0x148
    752c:	str	x0, [sp, #96]
    7530:	ldr	w22, [x24, #416]
    7534:	cmp	x6, #0x3
    7538:	b.ls	7700 <__asan_backtrace_open@plt+0xcd0>  // b.plast
    753c:	cmn	x6, #0x5
    7540:	sub	x25, x6, #0x4
    7544:	mov	x2, #0xffffffffffffffff    	// #-1
    7548:	b.ls	7700 <__asan_backtrace_open@plt+0xcd0>  // b.plast
    754c:	cbz	w22, 7a58 <__asan_backtrace_open@plt+0x1028>
    7550:	add	x24, x24, #0x1a0
    7554:	sub	w3, w22, #0x1
    7558:	mov	w0, #0x58                  	// #88
    755c:	mov	x23, x25
    7560:	ldr	x1, [sp, #96]
    7564:	umaddl	x24, w3, w0, x24
    7568:	ldr	w3, [x1]
    756c:	ldr	x0, [x1, #24]
    7570:	cmp	w3, #0x2
    7574:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    7578:	ldr	w3, [x1, #40]
    757c:	cmp	x23, x0
    7580:	csel	x23, x23, x0, ls  // ls = plast
    7584:	cmp	w3, #0x2
    7588:	ldr	x0, [x1, #64]
    758c:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    7590:	cmp	x2, x0
    7594:	add	x1, x1, #0x58
    7598:	csel	x2, x2, x0, cs  // cs = hs, nlast
    759c:	cmp	x24, x1
    75a0:	b.ne	7568 <__asan_backtrace_open@plt+0xb38>  // b.any
    75a4:	sub	x0, x2, x23
    75a8:	cmp	x0, #0x20
    75ac:	b.ls	75bc <__asan_backtrace_open@plt+0xb8c>  // b.plast
    75b0:	sub	x2, x2, #0x20
    75b4:	cmp	x2, x25
    75b8:	csel	x23, x2, x25, ls  // ls = plast
    75bc:	cmn	x23, #0x21
    75c0:	add	x25, x23, #0x20
    75c4:	mov	x1, #0x20                  	// #32
    75c8:	b.ls	75d4 <__asan_backtrace_open@plt+0xba4>  // b.plast
    75cc:	mvn	x1, x23
    75d0:	mov	x25, #0xffffffffffffffff    	// #-1
    75d4:	mov	x0, x23
    75d8:	str	x6, [sp, #104]
    75dc:	bl	1b7d8 <__sanitizer_set_report_fd@@Base+0x7f08>
    75e0:	tst	w0, #0xff
    75e4:	ldr	x6, [sp, #104]
    75e8:	b.eq	79e0 <__asan_backtrace_open@plt+0xfb0>  // b.none
    75ec:	ldr	x24, [x27, #4016]
    75f0:	str	xzr, [sp, #160]
    75f4:	stp	xzr, xzr, [sp, #168]
    75f8:	ldr	x0, [x24]
    75fc:	cbz	x0, 7a60 <__asan_backtrace_open@plt+0x1030>
    7600:	str	x6, [sp, #104]
    7604:	sub	x1, x0, #0x1
    7608:	tst	x1, x0
    760c:	b.ne	77a8 <__asan_backtrace_open@plt+0xd78>  // b.any
    7610:	add	x3, x0, #0x3ff
    7614:	neg	x0, x0
    7618:	and	x3, x3, x0
    761c:	add	x1, x28, #0x988
    7620:	mov	x0, x3
    7624:	mov	w2, #0x0                   	// #0
    7628:	str	x3, [sp, #112]
    762c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    7630:	mov	x24, x0
    7634:	ldr	x1, [sp, #160]
    7638:	ldr	x2, [sp, #176]
    763c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    7640:	ldp	x0, x1, [sp, #160]
    7644:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7648:	ldp	x6, x3, [sp, #104]
    764c:	stp	x24, x3, [sp, #160]
    7650:	ldr	x2, [sp, #176]
    7654:	cmp	x2, #0x3ff
    7658:	b.hi	7684 <__asan_backtrace_open@plt+0xc54>  // b.pmore
    765c:	cmp	x3, #0x3ff
    7660:	b.ls	7a90 <__asan_backtrace_open@plt+0x1060>  // b.plast
    7664:	mov	x3, #0x400                 	// #1024
    7668:	add	x0, x24, x2
    766c:	mov	w1, #0x0                   	// #0
    7670:	sub	x2, x3, x2
    7674:	str	x6, [sp, #104]
    7678:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    767c:	ldr	x6, [sp, #104]
    7680:	ldr	x24, [sp, #160]
    7684:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7688:	cmp	x23, x25
    768c:	ldr	q0, [x0, #2992]
    7690:	str	q0, [sp, #176]
    7694:	strb	wzr, [x24]
    7698:	b.eq	7af8 <__asan_backtrace_open@plt+0x10c8>  // b.none
    769c:	adrp	x28, 40000 <__asan_backtrace_get_view@@Base+0x78>
    76a0:	add	x0, x28, #0xa50
    76a4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    76a8:	mov	x28, x23
    76ac:	add	x27, x1, #0xa48
    76b0:	add	x24, sp, #0xa0
    76b4:	str	x0, [sp, #112]
    76b8:	adrp	x0, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
    76bc:	add	x0, x0, #0xb0
    76c0:	str	x0, [sp, #120]
    76c4:	b	76e4 <__asan_backtrace_open@plt+0xcb4>
    76c8:	ldr	x2, [sp, #120]
    76cc:	mov	x1, x27
    76d0:	mov	x0, x24
    76d4:	bl	1ce00 <OnPrint@@Base+0x420>
    76d8:	cmp	x25, x28
    76dc:	ldr	x6, [sp, #104]
    76e0:	b.eq	7824 <__asan_backtrace_open@plt+0xdf4>  // b.none
    76e4:	str	x6, [sp, #104]
    76e8:	tst	x28, #0x7
    76ec:	ldrb	w3, [x28]
    76f0:	add	x28, x28, #0x1
    76f4:	b.ne	76c8 <__asan_backtrace_open@plt+0xc98>  // b.any
    76f8:	ldr	x2, [sp, #112]
    76fc:	b	76cc <__asan_backtrace_open@plt+0xc9c>
    7700:	add	x2, x6, #0x4
    7704:	b	754c <__asan_backtrace_open@plt+0xb1c>
    7708:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    770c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7710:	add	x2, x2, #0x858
    7714:	add	x0, x0, #0x878
    7718:	mov	x4, #0x0                   	// #0
    771c:	mov	x3, #0x0                   	// #0
    7720:	mov	w1, #0x55                  	// #85
    7724:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7728:	ldr	x19, [x27, #4016]
    772c:	ldr	x0, [x19]
    7730:	cbz	x0, 7818 <__asan_backtrace_open@plt+0xde8>
    7734:	sub	x1, x0, #0x1
    7738:	tst	x1, x0
    773c:	b.ne	77a8 <__asan_backtrace_open@plt+0xd78>  // b.any
    7740:	add	x19, x0, #0x3ff
    7744:	neg	x0, x0
    7748:	and	x19, x19, x0
    774c:	add	x1, x28, #0x988
    7750:	mov	w2, #0x0                   	// #0
    7754:	mov	x0, x19
    7758:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    775c:	mov	x20, x0
    7760:	ldr	x1, [sp, #128]
    7764:	ldr	x2, [sp, #144]
    7768:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    776c:	ldp	x0, x1, [sp, #128]
    7770:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7774:	stp	x20, x19, [sp, #128]
    7778:	ldr	x2, [sp, #144]
    777c:	b	72c4 <__asan_backtrace_open@plt+0x894>
    7780:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7784:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7788:	add	x2, x2, #0x928
    778c:	add	x3, x3, #0x938
    7790:	b	74dc <__asan_backtrace_open@plt+0xaac>
    7794:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7798:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    779c:	add	x2, x2, #0x948
    77a0:	add	x3, x3, #0x938
    77a4:	b	73c0 <__asan_backtrace_open@plt+0x990>
    77a8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    77ac:	add	x0, x0, #0x970
    77b0:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    77b4:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    77b8:	ldr	x1, [x0, #8]
    77bc:	cbz	x1, 7800 <__asan_backtrace_open@plt+0xdd0>
    77c0:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    77c4:	ldr	w3, [x0, #24]
    77c8:	ldr	x2, [x0, #16]
    77cc:	mov	x0, x22
    77d0:	ldr	x4, [x4, #4056]
    77d4:	ldr	x4, [x4, #24]
    77d8:	bl	20ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
    77dc:	b	7390 <__asan_backtrace_open@plt+0x960>
    77e0:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    77e4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    77e8:	add	x2, x2, #0x9a0
    77ec:	add	x0, x0, #0x9b8
    77f0:	mov	x4, #0x0                   	// #0
    77f4:	mov	x3, #0x0                   	// #0
    77f8:	mov	w1, #0x1b6                 	// #438
    77fc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7800:	ldr	x2, [x2, #8]
    7804:	mov	x0, x22
    7808:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    780c:	add	x1, x1, #0x8f0
    7810:	bl	1ce00 <OnPrint@@Base+0x420>
    7814:	b	7390 <__asan_backtrace_open@plt+0x960>
    7818:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    781c:	str	x0, [x19]
    7820:	b	7734 <__asan_backtrace_open@plt+0xd04>
    7824:	mov	x0, x24
    7828:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    782c:	add	x1, x1, #0x3b8
    7830:	str	x6, [sp, #104]
    7834:	bl	1ce00 <OnPrint@@Base+0x420>
    7838:	mov	x27, x23
    783c:	cmp	w26, #0x0
    7840:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7844:	add	x2, x2, #0x960
    7848:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    784c:	add	x1, x1, #0xd20
    7850:	mov	x0, x24
    7854:	csel	x1, x2, x1, ne  // ne = any
    7858:	bl	1ce00 <OnPrint@@Base+0x420>
    785c:	ldr	x1, [sp, #96]
    7860:	mov	w2, w22
    7864:	mov	x0, x23
    7868:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    786c:	mov	x28, x0
    7870:	ldr	x6, [sp, #104]
    7874:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7878:	add	x0, x0, #0x8a8
    787c:	str	x0, [sp, #120]
    7880:	cbz	x28, 79ac <__asan_backtrace_open@plt+0xf7c>
    7884:	ldr	w0, [x28, #40]
    7888:	ldr	x1, [x28, #64]
    788c:	cmp	w0, #0x2
    7890:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    7894:	cmp	x27, x1
    7898:	b.eq	7a28 <__asan_backtrace_open@plt+0xff8>  // b.none
    789c:	ldr	w0, [x28]
    78a0:	ldr	x1, [x28, #24]
    78a4:	cmp	w0, #0x2
    78a8:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    78ac:	cmp	x27, x1
    78b0:	b.ls	7998 <__asan_backtrace_open@plt+0xf68>  // b.plast
    78b4:	mov	w26, #0x7e                  	// #126
    78b8:	mov	w2, w26
    78bc:	tst	x27, #0x7
    78c0:	b.eq	79c0 <__asan_backtrace_open@plt+0xf90>  // b.none
    78c4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    78c8:	add	x1, x0, #0x8a8
    78cc:	mov	x0, x24
    78d0:	stp	x1, x6, [sp, #104]
    78d4:	bl	1ce00 <OnPrint@@Base+0x420>
    78d8:	ldp	x1, x6, [sp, #104]
    78dc:	cmp	x6, x27
    78e0:	b.eq	79f0 <__asan_backtrace_open@plt+0xfc0>  // b.none
    78e4:	mov	w2, w26
    78e8:	mov	x0, x24
    78ec:	bl	1ce00 <OnPrint@@Base+0x420>
    78f0:	add	x27, x27, #0x1
    78f4:	ldr	x1, [sp, #104]
    78f8:	mov	w2, w26
    78fc:	mov	x0, x24
    7900:	bl	1ce00 <OnPrint@@Base+0x420>
    7904:	cmp	x27, x25
    7908:	ldr	x6, [sp, #112]
    790c:	b.ne	7880 <__asan_backtrace_open@plt+0xe50>  // b.any
    7910:	add	x1, x20, #0x6e0
    7914:	mov	w26, #0x0                   	// #0
    7918:	mov	x20, #0x0                   	// #0
    791c:	mov	x2, x21
    7920:	mov	x0, x24
    7924:	bl	1ce00 <OnPrint@@Base+0x420>
    7928:	cbz	x20, 7a74 <__asan_backtrace_open@plt+0x1044>
    792c:	ldr	w0, [x20, #40]
    7930:	ldr	x1, [x20, #64]
    7934:	cmp	w0, #0x2
    7938:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    793c:	cmp	x23, x1
    7940:	b.eq	7a74 <__asan_backtrace_open@plt+0x1044>  // b.none
    7944:	tst	x23, #0x7
    7948:	ldr	w1, [x20]
    794c:	cset	w0, eq  // eq = none
    7950:	add	w0, w0, #0x1
    7954:	cmp	w1, #0x2
    7958:	add	w0, w26, w0
    795c:	ldr	x1, [x20, #24]
    7960:	b.ne	7708 <__asan_backtrace_open@plt+0xcd8>  // b.any
    7964:	cmp	x23, x1
    7968:	b.eq	7b64 <__asan_backtrace_open@plt+0x1134>  // b.none
    796c:	add	x23, x23, #0x1
    7970:	add	w26, w0, #0x2
    7974:	cmp	x25, x23
    7978:	b.ne	7928 <__asan_backtrace_open@plt+0xef8>  // b.any
    797c:	ldr	x1, [sp, #160]
    7980:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7984:	add	x0, x0, #0x8b0
    7988:	bl	1ccf0 <OnPrint@@Base+0x310>
    798c:	ldp	x0, x1, [sp, #160]
    7990:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7994:	b	7428 <__asan_backtrace_open@plt+0x9f8>
    7998:	mov	w26, #0x20                  	// #32
    799c:	mov	w0, #0x7e                  	// #126
    79a0:	csel	w2, w26, w26, cc  // cc = lo, ul, last
    79a4:	csel	w26, w26, w0, cc  // cc = lo, ul, last
    79a8:	b	78bc <__asan_backtrace_open@plt+0xe8c>
    79ac:	cmp	x6, x27
    79b0:	b.cc	7910 <__asan_backtrace_open@plt+0xee0>  // b.lo, b.ul, b.last
    79b4:	mov	w26, #0x20                  	// #32
    79b8:	mov	w2, w26
    79bc:	b	78bc <__asan_backtrace_open@plt+0xe8c>
    79c0:	ldr	x1, [sp, #120]
    79c4:	mov	x0, x24
    79c8:	str	w2, [sp, #104]
    79cc:	str	x6, [sp, #112]
    79d0:	bl	1ce00 <OnPrint@@Base+0x420>
    79d4:	ldr	w2, [sp, #104]
    79d8:	ldr	x6, [sp, #112]
    79dc:	b	78c4 <__asan_backtrace_open@plt+0xe94>
    79e0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    79e4:	add	x0, x0, #0xa28
    79e8:	bl	1ccf0 <OnPrint@@Base+0x310>
    79ec:	b	7428 <__asan_backtrace_open@plt+0x9f8>
    79f0:	mov	x0, x24
    79f4:	mov	w2, #0x5e                  	// #94
    79f8:	stp	x1, x6, [sp, #104]
    79fc:	bl	1ce00 <OnPrint@@Base+0x420>
    7a00:	mov	w2, w26
    7a04:	ldp	x1, x6, [sp, #104]
    7a08:	mov	x0, x24
    7a0c:	str	x6, [sp, #104]
    7a10:	add	x27, x6, #0x1
    7a14:	bl	1ce00 <OnPrint@@Base+0x420>
    7a18:	cmp	x25, x27
    7a1c:	ldr	x6, [sp, #104]
    7a20:	b.ne	7880 <__asan_backtrace_open@plt+0xe50>  // b.any
    7a24:	b	7910 <__asan_backtrace_open@plt+0xee0>
    7a28:	ldr	x1, [sp, #96]
    7a2c:	mov	w2, w22
    7a30:	mov	x0, x27
    7a34:	str	x6, [sp, #104]
    7a38:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7a3c:	cmp	x0, #0x0
    7a40:	ldr	x6, [sp, #104]
    7a44:	mov	x28, x0
    7a48:	ccmp	x6, x27, #0x2, eq  // eq = none
    7a4c:	b.cc	7910 <__asan_backtrace_open@plt+0xee0>  // b.lo, b.ul, b.last
    7a50:	cbnz	x0, 789c <__asan_backtrace_open@plt+0xe6c>
    7a54:	b	79b4 <__asan_backtrace_open@plt+0xf84>
    7a58:	mov	x23, x25
    7a5c:	b	75a4 <__asan_backtrace_open@plt+0xb74>
    7a60:	str	x6, [sp, #104]
    7a64:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    7a68:	str	x0, [x24]
    7a6c:	ldr	x6, [sp, #104]
    7a70:	b	7600 <__asan_backtrace_open@plt+0xbd0>
    7a74:	ldr	x1, [sp, #96]
    7a78:	mov	w2, w22
    7a7c:	mov	x0, x23
    7a80:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7a84:	mov	x20, x0
    7a88:	cbnz	x0, 7944 <__asan_backtrace_open@plt+0xf14>
    7a8c:	b	797c <__asan_backtrace_open@plt+0xf4c>
    7a90:	ldr	x24, [x27, #4016]
    7a94:	ldr	x0, [x24]
    7a98:	cbz	x0, 7b44 <__asan_backtrace_open@plt+0x1114>
    7a9c:	ldr	x27, [x27, #4016]
    7aa0:	str	x6, [sp, #104]
    7aa4:	ldr	x0, [x27]
    7aa8:	sub	x1, x0, #0x1
    7aac:	tst	x1, x0
    7ab0:	b.ne	77a8 <__asan_backtrace_open@plt+0xd78>  // b.any
    7ab4:	add	x27, x0, #0x3ff
    7ab8:	neg	x0, x0
    7abc:	and	x27, x27, x0
    7ac0:	add	x1, x28, #0x988
    7ac4:	mov	w2, #0x0                   	// #0
    7ac8:	mov	x0, x27
    7acc:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    7ad0:	mov	x24, x0
    7ad4:	ldr	x1, [sp, #160]
    7ad8:	ldr	x2, [sp, #176]
    7adc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    7ae0:	ldp	x0, x1, [sp, #160]
    7ae4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    7ae8:	stp	x24, x27, [sp, #160]
    7aec:	ldr	x6, [sp, #104]
    7af0:	ldr	x2, [sp, #176]
    7af4:	b	7664 <__asan_backtrace_open@plt+0xc34>
    7af8:	add	x24, sp, #0xa0
    7afc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    7b00:	mov	x0, x24
    7b04:	add	x1, x1, #0x3b8
    7b08:	bl	1ce00 <OnPrint@@Base+0x420>
    7b0c:	cbnz	w26, 7b54 <__asan_backtrace_open@plt+0x1124>
    7b10:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    7b14:	mov	x0, x24
    7b18:	add	x1, x1, #0xd20
    7b1c:	bl	1ce00 <OnPrint@@Base+0x420>
    7b20:	ldr	x1, [sp, #96]
    7b24:	mov	w2, w22
    7b28:	mov	x0, x23
    7b2c:	bl	6c98 <__asan_backtrace_open@plt+0x268>
    7b30:	mov	x2, x21
    7b34:	add	x1, x20, #0x6e0
    7b38:	mov	x0, x24
    7b3c:	bl	1ce00 <OnPrint@@Base+0x420>
    7b40:	b	797c <__asan_backtrace_open@plt+0xf4c>
    7b44:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    7b48:	str	x0, [x24]
    7b4c:	ldr	x6, [sp, #104]
    7b50:	b	7a9c <__asan_backtrace_open@plt+0x106c>
    7b54:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7b58:	mov	x0, x24
    7b5c:	add	x1, x1, #0x960
    7b60:	b	7b1c <__asan_backtrace_open@plt+0x10ec>
    7b64:	adrp	x22, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
    7b68:	sub	w23, w0, #0x1
    7b6c:	add	x22, x22, #0xb0
    7b70:	cbz	w0, 7b8c <__asan_backtrace_open@plt+0x115c>
    7b74:	sub	w23, w23, #0x1
    7b78:	mov	x1, x22
    7b7c:	mov	x0, x24
    7b80:	bl	1ce00 <OnPrint@@Base+0x420>
    7b84:	cmn	w23, #0x1
    7b88:	b.ne	7b74 <__asan_backtrace_open@plt+0x1144>  // b.any
    7b8c:	ldr	x1, [x20, #80]
    7b90:	mov	x2, x19
    7b94:	mov	x0, x24
    7b98:	bl	6d90 <__asan_backtrace_open@plt+0x360>
    7b9c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    7ba0:	add	x1, x0, #0x3b8
    7ba4:	mov	x0, x24
    7ba8:	bl	1ce00 <OnPrint@@Base+0x420>
    7bac:	b	797c <__asan_backtrace_open@plt+0xf4c>
    7bb0:	b	bd08 <__ubsan_handle_cfi_bad_type@@Base+0x4b0>
    7bb4:	nop
    7bb8:	stp	x19, x20, [sp, #-48]!
    7bbc:	mov	x19, x0
    7bc0:	mov	x20, x2
    7bc4:	stp	x21, x22, [sp, #16]
    7bc8:	mov	x21, x1
    7bcc:	mov	w22, w3
    7bd0:	str	x30, [sp, #32]
    7bd4:	bl	bd08 <__ubsan_handle_cfi_bad_type@@Base+0x4b0>
    7bd8:	add	x0, x19, #0x1
    7bdc:	bl	206c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1140>
    7be0:	ldp	x2, x3, [x21]
    7be4:	stp	x2, x3, [x19, #8]
    7be8:	ldp	x2, x3, [x20]
    7bec:	stp	x2, x3, [x19, #32]
    7bf0:	ldr	x1, [x21, #16]
    7bf4:	ldp	x2, x3, [x20, #16]
    7bf8:	stp	x2, x3, [x19, #48]
    7bfc:	ldr	x30, [sp, #32]
    7c00:	str	x1, [x19, #24]
    7c04:	ldr	x1, [x20, #32]
    7c08:	str	w22, [x19, #72]
    7c0c:	ldp	x21, x22, [sp, #16]
    7c10:	str	x1, [x19, #64]
    7c14:	ldp	x19, x20, [sp], #48
    7c18:	ret
    7c1c:	nop
    7c20:	stp	x19, x20, [sp, #-176]!
    7c24:	mov	x19, x0
    7c28:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    7c2c:	ldr	x0, [x0, #16]
    7c30:	ldr	x1, [x19, #24]
    7c34:	str	x30, [sp, #48]
    7c38:	bl	6f48 <__asan_backtrace_open@plt+0x518>
    7c3c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    7c40:	ldr	w0, [x19, #72]
    7c44:	ldp	x2, x3, [x19, #32]
    7c48:	stp	x2, x3, [sp, #72]
    7c4c:	ldr	x1, [x1, #4056]
    7c50:	ldp	x2, x3, [x19, #48]
    7c54:	stp	x2, x3, [sp, #88]
    7c58:	ldrb	w1, [x1, #60]
    7c5c:	cbz	w1, 7ca4 <__asan_backtrace_open@plt+0x1274>
    7c60:	ldr	x1, [x20, #3816]
    7c64:	stp	x21, x22, [sp, #16]
    7c68:	ldrb	w1, [x1, #16]
    7c6c:	cmp	w1, #0x0
    7c70:	csel	w0, w0, wzr, ne  // ne = any
    7c74:	bl	6b18 <__asan_backtrace_open@plt+0xe8>
    7c78:	ldr	w22, [x19, #32]
    7c7c:	mov	x21, x0
    7c80:	cmp	w22, #0x1
    7c84:	b.eq	7ce8 <__asan_backtrace_open@plt+0x12b8>  // b.none
    7c88:	cmp	w22, #0x3
    7c8c:	b.eq	7cc4 <__asan_backtrace_open@plt+0x1294>  // b.none
    7c90:	bl	bc40 <__ubsan_handle_cfi_bad_type@@Base+0x3e8>
    7c94:	mov	x1, x0
    7c98:	mov	x0, x21
    7c9c:	bl	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
    7ca0:	ldp	x21, x22, [sp, #16]
    7ca4:	ldr	x20, [x20, #3816]
    7ca8:	ldrb	w0, [x20]
    7cac:	cbnz	w0, 7d4c <__asan_backtrace_open@plt+0x131c>
    7cb0:	add	x0, x19, #0x1
    7cb4:	bl	20820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1298>
    7cb8:	ldr	x30, [sp, #48]
    7cbc:	ldp	x19, x20, [sp], #176
    7cc0:	ret
    7cc4:	ldr	x22, [x19, #64]
    7cc8:	bl	bc40 <__ubsan_handle_cfi_bad_type@@Base+0x3e8>
    7ccc:	mov	x2, x0
    7cd0:	mov	x0, x21
    7cd4:	add	x22, x22, #0x8
    7cd8:	mov	x1, x22
    7cdc:	bl	1f7c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x240>
    7ce0:	ldp	x21, x22, [sp, #16]
    7ce4:	b	7ca4 <__asan_backtrace_open@plt+0x1274>
    7ce8:	ldr	x22, [sp, #80]
    7cec:	cbz	x22, 7c90 <__asan_backtrace_open@plt+0x1260>
    7cf0:	stp	x23, x24, [sp, #32]
    7cf4:	add	x23, sp, #0x70
    7cf8:	mov	x0, x23
    7cfc:	ldr	x24, [sp, #88]
    7d00:	bl	22d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37d0>
    7d04:	mov	x0, x22
    7d08:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
    7d0c:	mov	x1, x0
    7d10:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    7d14:	add	x0, x0, #0xd20
    7d18:	stp	x1, x24, [sp, #160]
    7d1c:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
    7d20:	str	x0, [sp, #144]
    7d24:	bl	bc40 <__ubsan_handle_cfi_bad_type@@Base+0x3e8>
    7d28:	mov	x2, x0
    7d2c:	mov	x1, x23
    7d30:	mov	x0, x21
    7d34:	bl	1f7c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x240>
    7d38:	mov	x0, x23
    7d3c:	bl	22d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37f8>
    7d40:	ldp	x21, x22, [sp, #16]
    7d44:	ldp	x23, x24, [sp, #32]
    7d48:	b	7ca4 <__asan_backtrace_open@plt+0x1274>
    7d4c:	stp	x21, x22, [sp, #16]
    7d50:	stp	x23, x24, [sp, #32]
    7d54:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    7d58:	stp	x19, x20, [sp, #-32]!
    7d5c:	adrp	x20, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    7d60:	ldr	x4, [x20, #3520]
    7d64:	str	x30, [sp, #16]
    7d68:	cbnz	x4, 7da8 <__asan_backtrace_open@plt+0x1378>
    7d6c:	add	x19, x20, #0xdc0
    7d70:	mov	w2, #0x1b                  	// #27
    7d74:	add	x19, x19, #0x40
    7d78:	adrp	x1, 66000 <_Unwind_Backtrace@GCC_3.3>
    7d7c:	mov	x0, x19
    7d80:	add	x1, x1, #0x390
    7d84:	bl	22210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c88>
    7d88:	str	x19, [x20, #3520]
    7d8c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    7d90:	mov	x0, x19
    7d94:	ldr	x30, [sp, #16]
    7d98:	ldr	x1, [x1, #3816]
    7d9c:	ldp	x19, x20, [sp], #32
    7da0:	ldr	x1, [x1, #8]
    7da4:	b	22770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31e8>
    7da8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7dac:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7db0:	add	x2, x2, #0xa58
    7db4:	add	x0, x0, #0x828
    7db8:	mov	x3, #0x0                   	// #0
    7dbc:	mov	w1, #0x18d                 	// #397
    7dc0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7dc4:	nop
    7dc8:	stp	x19, x30, [sp, #-32]!
    7dcc:	mov	x19, x0
    7dd0:	bl	bd08 <__ubsan_handle_cfi_bad_type@@Base+0x4b0>
    7dd4:	adrp	x0, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    7dd8:	ldr	x0, [x0, #3520]
    7ddc:	cbz	x0, 7dfc <__asan_backtrace_open@plt+0x13cc>
    7de0:	mov	x1, x19
    7de4:	add	x3, sp, #0x18
    7de8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7dec:	add	x2, x2, #0xb98
    7df0:	bl	222f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    7df4:	ldp	x19, x30, [sp], #32
    7df8:	ret
    7dfc:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7e00:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7e04:	add	x2, x2, #0xa80
    7e08:	add	x0, x0, #0x828
    7e0c:	mov	x4, #0x0                   	// #0
    7e10:	mov	x3, #0x0                   	// #0
    7e14:	mov	w1, #0x195                 	// #405
    7e18:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7e1c:	nop
    7e20:	stp	x19, x20, [sp, #-96]!
    7e24:	mov	w19, w0
    7e28:	mov	x20, x2
    7e2c:	stp	x21, x22, [sp, #16]
    7e30:	adrp	x22, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    7e34:	mov	x21, x1
    7e38:	stp	x23, x24, [sp, #32]
    7e3c:	str	x30, [sp, #48]
    7e40:	bl	bd08 <__ubsan_handle_cfi_bad_type@@Base+0x4b0>
    7e44:	ldr	x0, [x22, #3520]
    7e48:	cbz	x0, 7f68 <__asan_backtrace_open@plt+0x1538>
    7e4c:	cmp	w19, #0x19
    7e50:	b.hi	80a8 <__asan_backtrace_open@plt+0x1678>  // b.pmore
    7e54:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7e58:	add	x1, x1, #0xb64
    7e5c:	ldrh	w1, [x1, w19, uxtw #1]
    7e60:	adr	x2, 7e6c <__asan_backtrace_open@plt+0x143c>
    7e64:	add	x1, x2, w1, sxth #2
    7e68:	br	x1
    7e6c:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7e70:	add	x19, x19, #0x598
    7e74:	mov	x1, x19
    7e78:	bl	22ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3538>
    7e7c:	ands	w23, w0, #0xff
    7e80:	b.eq	7f20 <__asan_backtrace_open@plt+0x14f0>  // b.none
    7e84:	str	xzr, [sp, #72]
    7e88:	cbz	x20, 7f44 <__asan_backtrace_open@plt+0x1514>
    7e8c:	ldr	x0, [x22, #3520]
    7e90:	add	x24, sp, #0x48
    7e94:	mov	x1, x20
    7e98:	mov	x3, x24
    7e9c:	mov	x2, x19
    7ea0:	bl	222f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    7ea4:	tst	w0, #0xff
    7ea8:	b.ne	7f20 <__asan_backtrace_open@plt+0x14f0>  // b.any
    7eac:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    7eb0:	str	xzr, [sp, #80]
    7eb4:	add	x3, sp, #0x58
    7eb8:	add	x2, sp, #0x50
    7ebc:	mov	x1, x21
    7ec0:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
    7ec4:	tst	w0, #0xff
    7ec8:	b.eq	7eec <__asan_backtrace_open@plt+0x14bc>  // b.none
    7ecc:	ldr	x1, [sp, #80]
    7ed0:	cbz	x1, 7eec <__asan_backtrace_open@plt+0x14bc>
    7ed4:	ldr	x0, [x22, #3520]
    7ed8:	mov	x3, x24
    7edc:	mov	x2, x19
    7ee0:	bl	222f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    7ee4:	tst	w0, #0xff
    7ee8:	b.ne	7f20 <__asan_backtrace_open@plt+0x14f0>  // b.any
    7eec:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    7ef0:	mov	x1, x21
    7ef4:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
    7ef8:	mov	x20, x0
    7efc:	mov	x3, x24
    7f00:	ldr	x0, [x22, #3520]
    7f04:	mov	x2, x19
    7f08:	ldr	x1, [x20, #40]
    7f0c:	bl	222f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    7f10:	ands	w23, w0, #0xff
    7f14:	b.eq	7f4c <__asan_backtrace_open@plt+0x151c>  // b.none
    7f18:	mov	x0, x20
    7f1c:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    7f20:	mov	w0, w23
    7f24:	ldp	x21, x22, [sp, #16]
    7f28:	ldp	x23, x24, [sp, #32]
    7f2c:	ldr	x30, [sp, #48]
    7f30:	ldp	x19, x20, [sp], #96
    7f34:	ret
    7f38:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7f3c:	add	x19, x19, #0xb40
    7f40:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7f44:	add	x24, sp, #0x48
    7f48:	b	7eac <__asan_backtrace_open@plt+0x147c>
    7f4c:	ldr	x0, [x22, #3520]
    7f50:	mov	x3, x24
    7f54:	ldr	x1, [x20, #56]
    7f58:	mov	x2, x19
    7f5c:	bl	222f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d70>
    7f60:	and	w23, w0, #0xff
    7f64:	b	7f18 <__asan_backtrace_open@plt+0x14e8>
    7f68:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7f6c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7f70:	add	x2, x2, #0xa80
    7f74:	add	x0, x0, #0x828
    7f78:	mov	x4, #0x0                   	// #0
    7f7c:	mov	x3, #0x0                   	// #0
    7f80:	mov	w1, #0x19c                 	// #412
    7f84:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    7f88:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    7f8c:	add	x19, x19, #0x828
    7f90:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7f94:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7f98:	add	x19, x19, #0xb28
    7f9c:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fa0:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fa4:	add	x19, x19, #0xb20
    7fa8:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fac:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fb0:	add	x19, x19, #0xb10
    7fb4:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fb8:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fbc:	add	x19, x19, #0xb08
    7fc0:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fc4:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fc8:	add	x19, x19, #0xb00
    7fcc:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fd0:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fd4:	add	x19, x19, #0x740
    7fd8:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fdc:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fe0:	add	x19, x19, #0xaf0
    7fe4:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7fe8:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7fec:	add	x19, x19, #0x720
    7ff0:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    7ff4:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    7ff8:	add	x19, x19, #0xae0
    7ffc:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8000:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8004:	add	x19, x19, #0xad8
    8008:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    800c:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8010:	add	x19, x19, #0x6d8
    8014:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8018:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    801c:	add	x19, x19, #0x6c0
    8020:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8024:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8028:	add	x19, x19, #0x690
    802c:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8030:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8034:	add	x19, x19, #0x668
    8038:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    803c:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8040:	add	x19, x19, #0x650
    8044:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8048:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    804c:	add	x19, x19, #0x638
    8050:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8054:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8058:	add	x19, x19, #0x620
    805c:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8060:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8064:	add	x19, x19, #0x600
    8068:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    806c:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8070:	add	x19, x19, #0x5e8
    8074:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8078:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    807c:	add	x19, x19, #0xac8
    8080:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8084:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8088:	add	x19, x19, #0xab8
    808c:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    8090:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8094:	add	x19, x19, #0xaa8
    8098:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    809c:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
    80a0:	add	x19, x19, #0xaa0
    80a4:	b	7e74 <__asan_backtrace_open@plt+0x1444>
    80a8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    80ac:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    80b0:	add	x2, x2, #0x800
    80b4:	add	x0, x0, #0x828
    80b8:	mov	x4, #0x0                   	// #0
    80bc:	mov	x3, #0x0                   	// #0
    80c0:	mov	w1, #0x44                  	// #68
    80c4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

00000000000080c8 <__ubsan_default_options@@Base>:
    80c8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    80cc:	add	x0, x0, #0xd20
    80d0:	ret
    80d4:	nop
    80d8:	b	6980 <__ubsan_default_options@plt>
    80dc:	nop
    80e0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    80e4:	add	x1, x1, #0xd20
    80e8:	strh	wzr, [x0]
    80ec:	str	x1, [x0, #8]
    80f0:	strh	wzr, [x0, #16]
    80f4:	ret
    80f8:	stp	x19, x20, [sp, #-48]!
    80fc:	mov	x20, x0
    8100:	mov	x19, x1
    8104:	stp	x21, x22, [sp, #16]
    8108:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    810c:	mov	x1, #0x10                  	// #16
    8110:	ldr	x21, [x21, #3776]
    8114:	str	x30, [sp, #32]
    8118:	adrp	x22, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
    811c:	add	x22, x22, #0xd40
    8120:	mov	x0, x21
    8124:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    8128:	mov	x2, x0
    812c:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8130:	add	x3, x3, #0xc18
    8134:	mov	x0, x20
    8138:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    813c:	add	x1, x1, #0xc50
    8140:	stp	x22, x19, [x2]
    8144:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    8148:	mov	x0, x21
    814c:	mov	x1, #0x10                  	// #16
    8150:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    8154:	mov	x2, x0
    8158:	add	x4, x19, #0x1
    815c:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8160:	add	x3, x3, #0xc60
    8164:	mov	x0, x20
    8168:	stp	x22, x4, [x2]
    816c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8170:	add	x1, x1, #0xc90
    8174:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    8178:	mov	x0, x21
    817c:	mov	x1, #0x10                  	// #16
    8180:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    8184:	mov	x2, x0
    8188:	add	x1, x19, #0x8
    818c:	adrp	x0, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
    8190:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8194:	add	x0, x0, #0xd58
    8198:	add	x3, x3, #0xca8
    819c:	stp	x0, x1, [x2]
    81a0:	mov	x0, x20
    81a4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    81a8:	add	x1, x1, #0xcc0
    81ac:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    81b0:	mov	x0, x21
    81b4:	mov	x1, #0x10                  	// #16
    81b8:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    81bc:	mov	x2, x0
    81c0:	add	x4, x19, #0x10
    81c4:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    81c8:	add	x3, x3, #0xcd0
    81cc:	mov	x0, x20
    81d0:	stp	x22, x4, [x2]
    81d4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    81d8:	add	x1, x1, #0xd18
    81dc:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    81e0:	add	x19, x19, #0x11
    81e4:	mov	x0, x21
    81e8:	mov	x1, #0x10                  	// #16
    81ec:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    81f0:	mov	x2, x0
    81f4:	ldr	x30, [sp, #32]
    81f8:	mov	x0, x20
    81fc:	stp	x22, x19, [x2]
    8200:	adrp	x3, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8204:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8208:	ldp	x21, x22, [sp, #16]
    820c:	add	x3, x3, #0xd30
    8210:	ldp	x19, x20, [sp], #48
    8214:	add	x1, x1, #0xda8
    8218:	b	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    821c:	nop
    8220:	stp	x19, x20, [sp, #-288]!
    8224:	stp	x21, x22, [sp, #16]
    8228:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    822c:	add	x19, sp, #0x30
    8230:	ldr	x20, [x21, #4056]
    8234:	str	x30, [sp, #32]
    8238:	mov	x0, x20
    823c:	bl	138f0 <__sanitizer_set_report_fd@@Base+0x20>
    8240:	mov	x1, x20
    8244:	mov	x0, x19
    8248:	bl	139f0 <__sanitizer_set_report_fd@@Base+0x120>
    824c:	strb	wzr, [sp, #108]
    8250:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8254:	add	x0, x0, #0xdc8
    8258:	bl	68c0 <getenv@plt>
    825c:	mov	x2, x0
    8260:	mov	x1, x19
    8264:	mov	x0, x20
    8268:	str	x2, [sp, #56]
    826c:	bl	139f0 <__sanitizer_set_report_fd@@Base+0x120>
    8270:	adrp	x2, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    8274:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    8278:	add	x22, x2, #0xe50
    827c:	add	x1, x1, #0xd20
    8280:	strh	wzr, [x2, #3664]
    8284:	mov	x0, x19
    8288:	str	x1, [x22, #8]
    828c:	strh	wzr, [x22, #16]
    8290:	bl	15558 <__sanitizer_set_report_fd@@Base+0x1c88>
    8294:	mov	x1, x20
    8298:	mov	x0, x19
    829c:	bl	13bf0 <__sanitizer_set_report_fd@@Base+0x320>
    82a0:	mov	x1, x22
    82a4:	mov	x0, x19
    82a8:	bl	80f8 <__ubsan_default_options@@Base+0x30>
    82ac:	bl	6980 <__ubsan_default_options@plt>
    82b0:	mov	x1, x0
    82b4:	mov	x0, x19
    82b8:	bl	15308 <__sanitizer_set_report_fd@@Base+0x1a38>
    82bc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    82c0:	add	x0, x0, #0xde0
    82c4:	bl	68c0 <getenv@plt>
    82c8:	mov	x1, x0
    82cc:	mov	x0, x19
    82d0:	bl	15308 <__sanitizer_set_report_fd@@Base+0x1a38>
    82d4:	mov	x0, x20
    82d8:	bl	14ac0 <__sanitizer_set_report_fd@@Base+0x11f0>
    82dc:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    82e0:	ldr	x0, [x0, #3896]
    82e4:	ldr	w0, [x0]
    82e8:	cbnz	w0, 8308 <__ubsan_default_options@@Base+0x240>
    82ec:	ldr	x21, [x21, #4056]
    82f0:	ldrb	w0, [x21, #122]
    82f4:	cbnz	w0, 8318 <__ubsan_default_options@@Base+0x250>
    82f8:	ldp	x21, x22, [sp, #16]
    82fc:	ldr	x30, [sp, #32]
    8300:	ldp	x19, x20, [sp], #288
    8304:	ret
    8308:	bl	14d70 <__sanitizer_set_report_fd@@Base+0x14a0>
    830c:	ldr	x21, [x21, #4056]
    8310:	ldrb	w0, [x21, #122]
    8314:	cbz	w0, 82f8 <__ubsan_default_options@@Base+0x230>
    8318:	mov	x0, x19
    831c:	bl	14e50 <__sanitizer_set_report_fd@@Base+0x1580>
    8320:	ldp	x21, x22, [sp, #16]
    8324:	ldr	x30, [sp, #32]
    8328:	ldp	x19, x20, [sp], #288
    832c:	ret
    8330:	mov	x2, x0
    8334:	mov	w0, #0x1                   	// #1
    8338:	ldr	x2, [x2, #8]
    833c:	str	x1, [x2]
    8340:	ret
    8344:	nop
    8348:	mov	x2, x0
    834c:	stp	x19, x20, [sp, #-32]!
    8350:	mov	x19, x1
    8354:	mov	x0, x19
    8358:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    835c:	add	x1, x1, #0xbc0
    8360:	ldr	x20, [x2, #8]
    8364:	str	x30, [sp, #16]
    8368:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    836c:	cbnz	w0, 8384 <__ubsan_default_options@@Base+0x2bc>
    8370:	mov	w0, #0x1                   	// #1
    8374:	strb	wzr, [x20]
    8378:	ldr	x30, [sp, #16]
    837c:	ldp	x19, x20, [sp], #32
    8380:	ret
    8384:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8388:	mov	x0, x19
    838c:	add	x1, x1, #0xbc8
    8390:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    8394:	cbz	w0, 8370 <__ubsan_default_options@@Base+0x2a8>
    8398:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    839c:	mov	x0, x19
    83a0:	add	x1, x1, #0xbd0
    83a4:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    83a8:	cbz	w0, 8370 <__ubsan_default_options@@Base+0x2a8>
    83ac:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    83b0:	mov	x0, x19
    83b4:	add	x1, x1, #0x218
    83b8:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    83bc:	cbz	w0, 83d4 <__ubsan_default_options@@Base+0x30c>
    83c0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    83c4:	mov	x0, x19
    83c8:	add	x1, x1, #0xbd8
    83cc:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    83d0:	cbnz	w0, 83e4 <__ubsan_default_options@@Base+0x31c>
    83d4:	mov	w1, #0x1                   	// #1
    83d8:	mov	w0, #0x1                   	// #1
    83dc:	strb	w1, [x20]
    83e0:	b	8378 <__ubsan_default_options@@Base+0x2b0>
    83e4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    83e8:	mov	x0, x19
    83ec:	add	x1, x1, #0xbe0
    83f0:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    83f4:	cbz	w0, 83d4 <__ubsan_default_options@@Base+0x30c>
    83f8:	mov	x1, x19
    83fc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8400:	add	x0, x0, #0xbe8
    8404:	bl	1ccf0 <OnPrint@@Base+0x310>
    8408:	mov	w0, #0x0                   	// #0
    840c:	ldr	x30, [sp, #16]
    8410:	ldp	x19, x20, [sp], #32
    8414:	ret
    8418:	sub	sp, sp, #0x2c0
    841c:	ldrb	w3, [x2]
    8420:	mov	w4, #0xffffffff            	// #-1
    8424:	stp	x19, x20, [sp]
    8428:	mov	x19, x0
    842c:	add	x0, x0, #0xc
    8430:	stp	x23, x24, [sp, #32]
    8434:	mov	x24, x2
    8438:	mov	x20, x1
    843c:	stp	x21, x22, [sp, #16]
    8440:	stp	x25, x26, [sp, #48]
    8444:	ldr	x1, [x2, #8]
    8448:	str	x30, [sp, #80]
    844c:	ldxr	w21, [x0]
    8450:	stxr	w2, w4, [x0]
    8454:	cbnz	w2, 844c <__ubsan_default_options@@Base+0x384>
    8458:	dmb	ish
    845c:	ldr	x0, [x19, #16]
    8460:	mov	w26, w3
    8464:	ldr	w25, [x19, #8]
    8468:	ldr	x23, [x19]
    846c:	ldrh	w4, [x0]
    8470:	cbnz	w4, 84ac <__ubsan_default_options@@Base+0x3e4>
    8474:	ldrh	w0, [x0, #2]
    8478:	tbz	w0, #0, 84ac <__ubsan_default_options@@Base+0x3e4>
    847c:	cbnz	w3, 8638 <__ubsan_default_options@@Base+0x570>
    8480:	mov	w26, #0x1                   	// #1
    8484:	mov	w22, #0x5                   	// #5
    8488:	cmn	w21, #0x1
    848c:	b.ne	85b0 <__ubsan_default_options@@Base+0x4e8>  // b.any
    8490:	ldp	x19, x20, [sp]
    8494:	ldp	x21, x22, [sp, #16]
    8498:	ldp	x23, x24, [sp, #32]
    849c:	ldp	x25, x26, [sp, #48]
    84a0:	ldr	x30, [sp, #80]
    84a4:	add	sp, sp, #0x2c0
    84a8:	ret
    84ac:	mov	w22, #0x6                   	// #6
    84b0:	cbz	w3, 8488 <__ubsan_default_options@@Base+0x3c0>
    84b4:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    84b8:	ldr	x0, [x0, #3816]
    84bc:	ldrb	w0, [x0, #17]
    84c0:	cbnz	w0, 8490 <__ubsan_default_options@@Base+0x3c8>
    84c4:	stp	x27, x28, [sp, #64]
    84c8:	mov	w28, #0x1                   	// #1
    84cc:	add	x26, sp, #0xc0
    84d0:	str	w28, [sp, #272]
    84d4:	mov	w3, w22
    84d8:	str	x23, [sp, #280]
    84dc:	add	x2, sp, #0x60
    84e0:	str	w25, [sp, #288]
    84e4:	mov	x0, x26
    84e8:	str	w21, [sp, #292]
    84ec:	add	x1, sp, #0x90
    84f0:	ldp	x6, x7, [sp, #272]
    84f4:	add	x27, sp, #0x110
    84f8:	ldr	x8, [x24, #16]
    84fc:	stp	x6, x7, [sp, #96]
    8500:	ldp	x6, x7, [x24]
    8504:	stp	x6, x7, [sp, #144]
    8508:	ldp	x4, x5, [sp, #288]
    850c:	stp	x4, x5, [sp, #112]
    8510:	ldr	x9, [sp, #304]
    8514:	str	x9, [sp, #128]
    8518:	str	x8, [sp, #160]
    851c:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8520:	ldr	x3, [x19, #16]
    8524:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8528:	mov	x0, x27
    852c:	add	x2, x2, #0xe60
    8530:	stp	x3, x20, [sp, #176]
    8534:	add	x3, sp, #0x130
    8538:	add	x1, sp, #0xb0
    853c:	str	w28, [sp, #272]
    8540:	str	x23, [sp, #280]
    8544:	stp	w25, w21, [x3, #-16]
    8548:	stp	wzr, w22, [x3, #8]
    854c:	str	x2, [sp, #320]
    8550:	str	wzr, [sp, #592]
    8554:	str	wzr, [sp, #600]
    8558:	str	xzr, [sp, #608]
    855c:	str	xzr, [sp, #616]
    8560:	str	wzr, [sp, #640]
    8564:	str	xzr, [sp, #648]
    8568:	str	xzr, [sp, #656]
    856c:	str	xzr, [sp, #680]
    8570:	str	wzr, [sp, #688]
    8574:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8578:	ldr	x1, [x19, #16]
    857c:	bl	7090 <__asan_backtrace_open@plt+0x660>
    8580:	mov	x0, x27
    8584:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8588:	mov	x0, x26
    858c:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8590:	ldp	x19, x20, [sp]
    8594:	ldp	x21, x22, [sp, #16]
    8598:	ldp	x23, x24, [sp, #32]
    859c:	ldp	x25, x26, [sp, #48]
    85a0:	ldp	x27, x28, [sp, #64]
    85a4:	ldr	x30, [sp, #80]
    85a8:	add	sp, sp, #0x2c0
    85ac:	ret
    85b0:	mov	x2, x23
    85b4:	mov	w0, w22
    85b8:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    85bc:	tst	w0, #0xff
    85c0:	b.ne	8490 <__ubsan_default_options@@Base+0x3c8>  // b.any
    85c4:	cbz	w26, 84b4 <__ubsan_default_options@@Base+0x3ec>
    85c8:	stp	x27, x28, [sp, #64]
    85cc:	mov	w28, #0x1                   	// #1
    85d0:	str	w28, [sp, #272]
    85d4:	add	x26, sp, #0xc0
    85d8:	str	x23, [sp, #280]
    85dc:	mov	w3, w22
    85e0:	str	w25, [sp, #288]
    85e4:	add	x2, sp, #0x60
    85e8:	str	w21, [sp, #292]
    85ec:	mov	x0, x26
    85f0:	ldp	x6, x7, [sp, #272]
    85f4:	add	x1, sp, #0x90
    85f8:	ldr	x8, [x24, #16]
    85fc:	stp	x6, x7, [sp, #96]
    8600:	add	x27, sp, #0x110
    8604:	ldp	x6, x7, [x24]
    8608:	stp	x6, x7, [sp, #144]
    860c:	ldp	x4, x5, [sp, #288]
    8610:	stp	x4, x5, [sp, #112]
    8614:	ldr	x9, [sp, #304]
    8618:	str	x9, [sp, #128]
    861c:	str	x8, [sp, #160]
    8620:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8624:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8628:	mov	x0, x27
    862c:	add	x2, x2, #0xdf0
    8630:	ldr	x3, [x19, #16]
    8634:	b	8530 <__ubsan_default_options@@Base+0x468>
    8638:	mov	w22, #0x5                   	// #5
    863c:	stp	x27, x28, [sp, #64]
    8640:	b	85cc <__ubsan_default_options@@Base+0x504>
    8644:	nop
    8648:	sub	sp, sp, #0x2b0
    864c:	stp	x19, x20, [sp]
    8650:	mov	x19, x0
    8654:	mov	x20, x2
    8658:	add	x0, x0, #0xc
    865c:	stp	x21, x22, [sp, #16]
    8660:	mov	x21, x1
    8664:	mov	w1, #0xffffffff            	// #-1
    8668:	stp	x25, x26, [sp, #48]
    866c:	str	x30, [sp, #72]
    8670:	ldxr	w22, [x0]
    8674:	stxr	w2, w1, [x0]
    8678:	cbnz	w2, 8670 <__ubsan_default_options@@Base+0x5a8>
    867c:	dmb	ish
    8680:	ldrb	w0, [x20]
    8684:	ldr	w26, [x19, #8]
    8688:	ldr	x25, [x19]
    868c:	cbnz	w0, 86c8 <__ubsan_default_options@@Base+0x600>
    8690:	cmp	w22, w1
    8694:	b.ne	86b0 <__ubsan_default_options@@Base+0x5e8>  // b.any
    8698:	ldp	x19, x20, [sp]
    869c:	ldp	x21, x22, [sp, #16]
    86a0:	ldp	x25, x26, [sp, #48]
    86a4:	ldr	x30, [sp, #72]
    86a8:	add	sp, sp, #0x2b0
    86ac:	ret
    86b0:	ldr	x1, [x20, #8]
    86b4:	mov	x2, x25
    86b8:	mov	w0, #0xe                   	// #14
    86bc:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    86c0:	tst	w0, #0xff
    86c4:	b.ne	8698 <__ubsan_default_options@@Base+0x5d0>  // b.any
    86c8:	str	x25, [sp, #264]
    86cc:	add	x2, sp, #0x50
    86d0:	str	w26, [sp, #272]
    86d4:	add	x1, sp, #0x80
    86d8:	str	w22, [sp, #276]
    86dc:	mov	w3, #0xe                   	// #14
    86e0:	ldp	x8, x9, [x20]
    86e4:	str	x27, [sp, #64]
    86e8:	mov	w27, #0x1                   	// #1
    86ec:	str	w27, [sp, #256]
    86f0:	ldp	x4, x5, [sp, #272]
    86f4:	stp	x23, x24, [sp, #32]
    86f8:	add	x23, sp, #0xb0
    86fc:	ldp	x6, x7, [sp, #256]
    8700:	stp	x6, x7, [sp, #80]
    8704:	mov	x0, x23
    8708:	ldr	x6, [x20, #16]
    870c:	stp	x4, x5, [sp, #96]
    8710:	add	x24, sp, #0x100
    8714:	ldr	x10, [sp, #288]
    8718:	str	x10, [sp, #112]
    871c:	stp	x8, x9, [sp, #128]
    8720:	str	x6, [sp, #144]
    8724:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8728:	ldr	x4, [x19, #24]
    872c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8730:	add	x2, x2, #0xe90
    8734:	mov	x3, #0xe00000000           	// #60129542144
    8738:	add	x1, sp, #0xa0
    873c:	mov	x0, x24
    8740:	stp	x4, x21, [sp, #160]
    8744:	str	w27, [sp, #256]
    8748:	str	x25, [sp, #264]
    874c:	str	w26, [sp, #272]
    8750:	str	w22, [sp, #276]
    8754:	stp	x3, x2, [sp, #296]
    8758:	str	wzr, [sp, #576]
    875c:	str	wzr, [sp, #584]
    8760:	str	xzr, [sp, #592]
    8764:	str	xzr, [sp, #600]
    8768:	str	wzr, [sp, #624]
    876c:	str	xzr, [sp, #632]
    8770:	str	xzr, [sp, #640]
    8774:	str	xzr, [sp, #664]
    8778:	str	wzr, [sp, #672]
    877c:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8780:	ldr	x1, [x19, #16]
    8784:	bl	7090 <__asan_backtrace_open@plt+0x660>
    8788:	mov	x0, x24
    878c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8790:	mov	x0, x23
    8794:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8798:	ldp	x19, x20, [sp]
    879c:	ldp	x21, x22, [sp, #16]
    87a0:	ldp	x23, x24, [sp, #32]
    87a4:	ldp	x25, x26, [sp, #48]
    87a8:	ldr	x27, [sp, #64]
    87ac:	ldr	x30, [sp, #72]
    87b0:	add	sp, sp, #0x2b0
    87b4:	ret
    87b8:	sub	sp, sp, #0x2b0
    87bc:	stp	x19, x20, [sp]
    87c0:	mov	x19, x0
    87c4:	mov	x20, x2
    87c8:	add	x0, x0, #0xc
    87cc:	stp	x21, x22, [sp, #16]
    87d0:	mov	x21, x1
    87d4:	mov	w1, #0xffffffff            	// #-1
    87d8:	stp	x23, x24, [sp, #32]
    87dc:	stp	x25, x26, [sp, #48]
    87e0:	str	x30, [sp, #72]
    87e4:	ldxr	w26, [x0]
    87e8:	stxr	w2, w1, [x0]
    87ec:	cbnz	w2, 87e4 <__ubsan_default_options@@Base+0x71c>
    87f0:	dmb	ish
    87f4:	ldrb	w0, [x20]
    87f8:	ldr	w25, [x19, #8]
    87fc:	ldr	x24, [x19]
    8800:	cbnz	w0, 8840 <__ubsan_default_options@@Base+0x778>
    8804:	cmp	w26, w1
    8808:	b.ne	8828 <__ubsan_default_options@@Base+0x760>  // b.any
    880c:	ldp	x19, x20, [sp]
    8810:	ldp	x21, x22, [sp, #16]
    8814:	ldp	x23, x24, [sp, #32]
    8818:	ldp	x25, x26, [sp, #48]
    881c:	ldr	x30, [sp, #72]
    8820:	add	sp, sp, #0x2b0
    8824:	ret
    8828:	ldr	x1, [x20, #8]
    882c:	mov	x2, x24
    8830:	mov	w0, #0x11                  	// #17
    8834:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    8838:	tst	w0, #0xff
    883c:	b.ne	880c <__ubsan_default_options@@Base+0x744>  // b.any
    8840:	str	x27, [sp, #64]
    8844:	mov	w27, #0x1                   	// #1
    8848:	str	w27, [sp, #256]
    884c:	add	x22, sp, #0xb0
    8850:	str	x24, [sp, #264]
    8854:	mov	x0, x22
    8858:	str	w25, [sp, #272]
    885c:	add	x2, sp, #0x50
    8860:	str	w26, [sp, #276]
    8864:	add	x1, sp, #0x80
    8868:	ldp	x6, x7, [sp, #256]
    886c:	stp	x6, x7, [sp, #80]
    8870:	mov	w3, #0x11                  	// #17
    8874:	ldp	x6, x7, [x20]
    8878:	add	x23, sp, #0x100
    887c:	ldp	x4, x5, [sp, #272]
    8880:	stp	x4, x5, [sp, #96]
    8884:	ldr	x4, [x20, #16]
    8888:	stp	x6, x7, [sp, #128]
    888c:	ldr	x8, [sp, #288]
    8890:	str	x8, [sp, #112]
    8894:	str	x4, [sp, #144]
    8898:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    889c:	str	w27, [sp, #256]
    88a0:	ldr	x4, [x19, #16]
    88a4:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    88a8:	add	x2, x2, #0xeb8
    88ac:	add	x1, sp, #0xa0
    88b0:	mov	x3, #0x1100000000          	// #73014444032
    88b4:	mov	x0, x23
    88b8:	stp	x4, x21, [sp, #160]
    88bc:	str	x24, [sp, #264]
    88c0:	str	w25, [sp, #272]
    88c4:	str	w26, [sp, #276]
    88c8:	stp	x3, x2, [sp, #296]
    88cc:	str	wzr, [sp, #576]
    88d0:	str	wzr, [sp, #584]
    88d4:	str	xzr, [sp, #592]
    88d8:	str	xzr, [sp, #600]
    88dc:	str	wzr, [sp, #624]
    88e0:	str	xzr, [sp, #632]
    88e4:	str	xzr, [sp, #640]
    88e8:	str	xzr, [sp, #664]
    88ec:	str	wzr, [sp, #672]
    88f0:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    88f4:	mov	x0, x23
    88f8:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    88fc:	mov	x0, x22
    8900:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8904:	ldp	x19, x20, [sp]
    8908:	ldp	x21, x22, [sp, #16]
    890c:	ldp	x23, x24, [sp, #32]
    8910:	ldp	x25, x26, [sp, #48]
    8914:	ldr	x27, [sp, #64]
    8918:	ldr	x30, [sp, #72]
    891c:	add	sp, sp, #0x2b0
    8920:	ret
    8924:	nop
    8928:	sub	sp, sp, #0x2c0
    892c:	stp	x19, x20, [sp]
    8930:	mov	x20, x3
    8934:	mov	x19, x0
    8938:	add	x0, x0, #0xc
    893c:	stp	x21, x22, [sp, #16]
    8940:	stp	x23, x24, [sp, #32]
    8944:	stp	x25, x26, [sp, #48]
    8948:	ldrb	w25, [x3]
    894c:	mov	w3, #0xffffffff            	// #-1
    8950:	ldr	x26, [x20, #8]
    8954:	str	x30, [sp, #64]
    8958:	ldxr	w21, [x0]
    895c:	stxr	w4, w3, [x0]
    8960:	cbnz	w4, 8958 <__ubsan_default_options@@Base+0x890>
    8964:	dmb	ish
    8968:	ldr	x0, [x19, #16]
    896c:	stp	x0, x1, [sp, #160]
    8970:	ldr	w22, [x19, #8]
    8974:	stp	x0, x2, [sp, #176]
    8978:	ldrh	w1, [x0]
    897c:	ldr	x23, [x19]
    8980:	cbnz	w1, 89b0 <__ubsan_default_options@@Base+0x8e8>
    8984:	ldrh	w0, [x0, #2]
    8988:	tbz	w0, #0, 8ac4 <__ubsan_default_options@@Base+0x9fc>
    898c:	add	x0, sp, #0xb0
    8990:	bl	c648 <__ubsan_get_current_report_data@@Base+0x5f8>
    8994:	cmn	x0, #0x1
    8998:	b.ne	89a4 <__ubsan_default_options@@Base+0x8dc>  // b.any
    899c:	cmn	x1, #0x1
    89a0:	b.eq	8b24 <__ubsan_default_options@@Base+0xa5c>  // b.none
    89a4:	ldr	x0, [x19, #16]
    89a8:	ldrh	w0, [x0]
    89ac:	cbz	w0, 8ac4 <__ubsan_default_options@@Base+0x9fc>
    89b0:	mov	w24, #0x8                   	// #8
    89b4:	cbnz	w25, 8acc <__ubsan_default_options@@Base+0xa04>
    89b8:	cmn	w21, #0x1
    89bc:	b.ne	89dc <__ubsan_default_options@@Base+0x914>  // b.any
    89c0:	ldp	x19, x20, [sp]
    89c4:	ldp	x21, x22, [sp, #16]
    89c8:	ldp	x23, x24, [sp, #32]
    89cc:	ldp	x25, x26, [sp, #48]
    89d0:	ldr	x30, [sp, #64]
    89d4:	add	sp, sp, #0x2c0
    89d8:	ret
    89dc:	mov	x1, x26
    89e0:	mov	x2, x23
    89e4:	mov	w0, w24
    89e8:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    89ec:	tst	w0, #0xff
    89f0:	b.ne	89c0 <__ubsan_default_options@@Base+0x8f8>  // b.any
    89f4:	mov	w0, #0x1                   	// #1
    89f8:	str	w0, [sp, #272]
    89fc:	str	x23, [sp, #280]
    8a00:	add	x25, sp, #0xc0
    8a04:	str	w22, [sp, #288]
    8a08:	mov	w3, w24
    8a0c:	str	w21, [sp, #292]
    8a10:	add	x2, sp, #0x50
    8a14:	ldp	x6, x7, [sp, #272]
    8a18:	stp	x6, x7, [sp, #80]
    8a1c:	add	x1, sp, #0x80
    8a20:	ldp	x6, x7, [x20]
    8a24:	mov	x0, x25
    8a28:	ldp	x4, x5, [sp, #288]
    8a2c:	stp	x4, x5, [sp, #96]
    8a30:	ldr	x4, [x20, #16]
    8a34:	stp	x6, x7, [sp, #128]
    8a38:	ldr	x8, [sp, #304]
    8a3c:	str	x8, [sp, #112]
    8a40:	str	x4, [sp, #144]
    8a44:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8a48:	cmp	w24, #0x5
    8a4c:	b.eq	8b80 <__ubsan_default_options@@Base+0xab8>  // b.none
    8a50:	mov	w2, #0x1                   	// #1
    8a54:	str	w2, [sp, #272]
    8a58:	add	x2, sp, #0x130
    8a5c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8a60:	add	x1, x1, #0xf30
    8a64:	str	x23, [sp, #280]
    8a68:	add	x0, sp, #0x110
    8a6c:	stp	w22, w21, [x2, #-16]
    8a70:	stp	wzr, w24, [x2, #8]
    8a74:	str	x1, [sp, #320]
    8a78:	str	wzr, [sp, #592]
    8a7c:	str	wzr, [sp, #600]
    8a80:	str	xzr, [sp, #608]
    8a84:	str	xzr, [sp, #616]
    8a88:	str	wzr, [sp, #640]
    8a8c:	str	xzr, [sp, #648]
    8a90:	str	xzr, [sp, #656]
    8a94:	str	xzr, [sp, #680]
    8a98:	str	wzr, [sp, #688]
    8a9c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8aa0:	mov	x0, x25
    8aa4:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8aa8:	ldp	x19, x20, [sp]
    8aac:	ldp	x21, x22, [sp, #16]
    8ab0:	ldp	x23, x24, [sp, #32]
    8ab4:	ldp	x25, x26, [sp, #48]
    8ab8:	ldr	x30, [sp, #64]
    8abc:	add	sp, sp, #0x2c0
    8ac0:	ret
    8ac4:	mov	w24, #0x7                   	// #7
    8ac8:	cbz	w25, 89b8 <__ubsan_default_options@@Base+0x8f0>
    8acc:	mov	w0, #0x1                   	// #1
    8ad0:	str	w0, [sp, #272]
    8ad4:	str	x23, [sp, #280]
    8ad8:	add	x25, sp, #0xc0
    8adc:	str	w22, [sp, #288]
    8ae0:	mov	w3, w24
    8ae4:	str	w21, [sp, #292]
    8ae8:	add	x2, sp, #0x50
    8aec:	ldp	x6, x7, [sp, #272]
    8af0:	stp	x6, x7, [sp, #80]
    8af4:	add	x1, sp, #0x80
    8af8:	ldp	x6, x7, [x20]
    8afc:	mov	x0, x25
    8b00:	ldp	x4, x5, [sp, #288]
    8b04:	stp	x4, x5, [sp, #96]
    8b08:	ldr	x4, [x20, #16]
    8b0c:	stp	x6, x7, [sp, #128]
    8b10:	ldr	x8, [sp, #304]
    8b14:	str	x8, [sp, #112]
    8b18:	str	x4, [sp, #144]
    8b1c:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8b20:	b	8a50 <__ubsan_default_options@@Base+0x988>
    8b24:	mov	w24, #0x5                   	// #5
    8b28:	cbz	w25, 89b8 <__ubsan_default_options@@Base+0x8f0>
    8b2c:	mov	w0, #0x1                   	// #1
    8b30:	str	w0, [sp, #272]
    8b34:	str	x23, [sp, #280]
    8b38:	add	x25, sp, #0xc0
    8b3c:	str	w22, [sp, #288]
    8b40:	add	x2, sp, #0x50
    8b44:	str	w21, [sp, #292]
    8b48:	add	x1, sp, #0x80
    8b4c:	ldp	x6, x7, [sp, #272]
    8b50:	stp	x6, x7, [sp, #80]
    8b54:	mov	x0, x25
    8b58:	ldp	x6, x7, [x20]
    8b5c:	mov	w3, #0x5                   	// #5
    8b60:	ldp	x4, x5, [sp, #288]
    8b64:	stp	x4, x5, [sp, #96]
    8b68:	ldr	x4, [x20, #16]
    8b6c:	stp	x6, x7, [sp, #128]
    8b70:	ldr	x8, [sp, #304]
    8b74:	str	x8, [sp, #112]
    8b78:	str	x4, [sp, #144]
    8b7c:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8b80:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8b84:	add	x2, x2, #0xef8
    8b88:	mov	w4, #0x1                   	// #1
    8b8c:	mov	x3, #0x500000000           	// #21474836480
    8b90:	add	x20, sp, #0x110
    8b94:	add	x1, sp, #0xa0
    8b98:	mov	x0, x20
    8b9c:	str	w4, [sp, #272]
    8ba0:	str	x23, [sp, #280]
    8ba4:	str	w22, [sp, #288]
    8ba8:	str	w21, [sp, #292]
    8bac:	stp	x3, x2, [sp, #312]
    8bb0:	str	wzr, [sp, #592]
    8bb4:	str	wzr, [sp, #600]
    8bb8:	str	xzr, [sp, #608]
    8bbc:	str	xzr, [sp, #616]
    8bc0:	str	wzr, [sp, #640]
    8bc4:	str	xzr, [sp, #648]
    8bc8:	str	xzr, [sp, #656]
    8bcc:	str	xzr, [sp, #680]
    8bd0:	str	wzr, [sp, #688]
    8bd4:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8bd8:	ldr	x1, [x19, #16]
    8bdc:	bl	7090 <__asan_backtrace_open@plt+0x660>
    8be0:	mov	x0, x20
    8be4:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8be8:	b	8aa0 <__ubsan_default_options@@Base+0x9d8>
    8bec:	nop
    8bf0:	sub	sp, sp, #0x2c0
    8bf4:	stp	x19, x20, [sp]
    8bf8:	mov	x19, x0
    8bfc:	mov	x20, x2
    8c00:	add	x0, x0, #0xc
    8c04:	stp	x21, x22, [sp, #16]
    8c08:	mov	x21, x1
    8c0c:	mov	w1, #0xffffffff            	// #-1
    8c10:	stp	x23, x24, [sp, #32]
    8c14:	stp	x27, x28, [sp, #64]
    8c18:	str	x30, [sp, #80]
    8c1c:	ldxr	w22, [x0]
    8c20:	stxr	w2, w1, [x0]
    8c24:	cbnz	w2, 8c1c <__ubsan_default_options@@Base+0xb54>
    8c28:	dmb	ish
    8c2c:	ldr	x0, [x19, #16]
    8c30:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8c34:	ldr	w24, [x19, #8]
    8c38:	add	x1, x1, #0xf48
    8c3c:	add	x0, x0, #0x4
    8c40:	ldr	x23, [x19]
    8c44:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    8c48:	cbnz	w0, 8d80 <__ubsan_default_options@@Base+0xcb8>
    8c4c:	mov	w27, #0x13                  	// #19
    8c50:	ldrb	w0, [x20]
    8c54:	cbnz	w0, 8c94 <__ubsan_default_options@@Base+0xbcc>
    8c58:	cmn	w22, #0x1
    8c5c:	b.ne	8c7c <__ubsan_default_options@@Base+0xbb4>  // b.any
    8c60:	ldp	x19, x20, [sp]
    8c64:	ldp	x21, x22, [sp, #16]
    8c68:	ldp	x23, x24, [sp, #32]
    8c6c:	ldp	x27, x28, [sp, #64]
    8c70:	ldr	x30, [sp, #80]
    8c74:	add	sp, sp, #0x2c0
    8c78:	ret
    8c7c:	ldr	x1, [x20, #8]
    8c80:	mov	x2, x23
    8c84:	mov	w0, w27
    8c88:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    8c8c:	tst	w0, #0xff
    8c90:	b.ne	8c60 <__ubsan_default_options@@Base+0xb98>  // b.any
    8c94:	mov	w28, #0x1                   	// #1
    8c98:	str	w28, [sp, #272]
    8c9c:	str	x23, [sp, #280]
    8ca0:	mov	w3, w27
    8ca4:	str	w24, [sp, #288]
    8ca8:	add	x2, sp, #0x60
    8cac:	str	w22, [sp, #292]
    8cb0:	add	x1, sp, #0x90
    8cb4:	ldp	x6, x7, [sp, #272]
    8cb8:	stp	x25, x26, [sp, #48]
    8cbc:	add	x25, sp, #0xc0
    8cc0:	ldr	x8, [x20, #16]
    8cc4:	stp	x6, x7, [sp, #96]
    8cc8:	mov	x0, x25
    8ccc:	ldp	x6, x7, [x20]
    8cd0:	stp	x6, x7, [sp, #144]
    8cd4:	add	x26, sp, #0x110
    8cd8:	ldp	x4, x5, [sp, #288]
    8cdc:	stp	x4, x5, [sp, #112]
    8ce0:	ldr	x9, [sp, #304]
    8ce4:	str	x9, [sp, #128]
    8ce8:	str	x8, [sp, #160]
    8cec:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8cf0:	str	w28, [sp, #272]
    8cf4:	ldr	x3, [x19, #16]
    8cf8:	stp	x3, x21, [sp, #176]
    8cfc:	add	x3, sp, #0x130
    8d00:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8d04:	add	x2, x2, #0xf58
    8d08:	str	x23, [sp, #280]
    8d0c:	add	x1, sp, #0xb0
    8d10:	stp	w24, w22, [x3, #-16]
    8d14:	mov	x0, x26
    8d18:	stp	wzr, w27, [x3, #8]
    8d1c:	str	x2, [sp, #320]
    8d20:	str	wzr, [sp, #592]
    8d24:	str	wzr, [sp, #600]
    8d28:	str	xzr, [sp, #608]
    8d2c:	str	xzr, [sp, #616]
    8d30:	str	wzr, [sp, #640]
    8d34:	str	xzr, [sp, #648]
    8d38:	str	xzr, [sp, #656]
    8d3c:	str	xzr, [sp, #680]
    8d40:	str	wzr, [sp, #688]
    8d44:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    8d48:	ldr	x1, [x19, #16]
    8d4c:	bl	7090 <__asan_backtrace_open@plt+0x660>
    8d50:	mov	x0, x26
    8d54:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8d58:	mov	x0, x25
    8d5c:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8d60:	ldp	x19, x20, [sp]
    8d64:	ldp	x21, x22, [sp, #16]
    8d68:	ldp	x23, x24, [sp, #32]
    8d6c:	ldp	x25, x26, [sp, #48]
    8d70:	ldp	x27, x28, [sp, #64]
    8d74:	ldr	x30, [sp, #80]
    8d78:	add	sp, sp, #0x2c0
    8d7c:	ret
    8d80:	ldr	x0, [x19, #16]
    8d84:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8d88:	mov	x2, #0x6                   	// #6
    8d8c:	add	x1, x1, #0xf50
    8d90:	add	x0, x0, #0x4
    8d94:	mov	w27, #0x14                  	// #20
    8d98:	bl	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
    8d9c:	cbnz	w0, 8c50 <__ubsan_default_options@@Base+0xb88>
    8da0:	b	8c4c <__ubsan_default_options@@Base+0xb84>
    8da4:	nop
    8da8:	sub	sp, sp, #0x280
    8dac:	mov	x4, x1
    8db0:	add	x2, sp, #0x30
    8db4:	add	x1, sp, #0x60
    8db8:	mov	w3, #0x10                  	// #16
    8dbc:	stp	x19, x20, [sp]
    8dc0:	mov	x19, x0
    8dc4:	add	x20, sp, #0x80
    8dc8:	ldr	x0, [x0]
    8dcc:	stp	x21, x22, [sp, #16]
    8dd0:	ldr	d0, [x19, #8]
    8dd4:	mov	w22, #0x1                   	// #1
    8dd8:	str	w22, [sp, #208]
    8ddc:	str	x0, [sp, #216]
    8de0:	mov	x0, x20
    8de4:	str	d0, [sp, #224]
    8de8:	add	x21, sp, #0xd0
    8dec:	ldp	x6, x7, [sp, #224]
    8df0:	stp	x6, x7, [sp, #64]
    8df4:	ldp	x6, x7, [x4]
    8df8:	str	x30, [sp, #32]
    8dfc:	ldp	x8, x9, [sp, #208]
    8e00:	stp	x8, x9, [sp, #48]
    8e04:	ldr	x4, [x4, #16]
    8e08:	stp	x6, x7, [sp, #96]
    8e0c:	ldr	x5, [sp, #240]
    8e10:	str	x5, [sp, #80]
    8e14:	str	x4, [sp, #112]
    8e18:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8e1c:	str	w22, [sp, #208]
    8e20:	ldr	x3, [x19]
    8e24:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8e28:	add	x1, x1, #0xf98
    8e2c:	ldr	d0, [x19, #8]
    8e30:	mov	x2, #0x1000000000          	// #68719476736
    8e34:	mov	x0, x21
    8e38:	str	x3, [sp, #216]
    8e3c:	str	d0, [sp, #224]
    8e40:	stp	x2, x1, [sp, #248]
    8e44:	str	wzr, [sp, #528]
    8e48:	str	wzr, [sp, #536]
    8e4c:	str	xzr, [sp, #544]
    8e50:	str	xzr, [sp, #552]
    8e54:	str	wzr, [sp, #576]
    8e58:	str	xzr, [sp, #584]
    8e5c:	str	xzr, [sp, #592]
    8e60:	str	xzr, [sp, #616]
    8e64:	str	wzr, [sp, #624]
    8e68:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8e6c:	mov	x0, x20
    8e70:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8e74:	ldp	x19, x20, [sp]
    8e78:	ldp	x21, x22, [sp, #16]
    8e7c:	ldr	x30, [sp, #32]
    8e80:	add	sp, sp, #0x280
    8e84:	ret
    8e88:	sub	sp, sp, #0x280
    8e8c:	mov	x4, x1
    8e90:	add	x2, sp, #0x30
    8e94:	add	x1, sp, #0x60
    8e98:	mov	w3, #0xf                   	// #15
    8e9c:	stp	x19, x20, [sp]
    8ea0:	mov	x19, x0
    8ea4:	add	x20, sp, #0x80
    8ea8:	ldr	x0, [x0]
    8eac:	stp	x21, x22, [sp, #16]
    8eb0:	ldr	d0, [x19, #8]
    8eb4:	mov	w22, #0x1                   	// #1
    8eb8:	str	w22, [sp, #208]
    8ebc:	str	x0, [sp, #216]
    8ec0:	mov	x0, x20
    8ec4:	str	d0, [sp, #224]
    8ec8:	add	x21, sp, #0xd0
    8ecc:	ldp	x6, x7, [sp, #224]
    8ed0:	stp	x6, x7, [sp, #64]
    8ed4:	ldp	x6, x7, [x4]
    8ed8:	str	x30, [sp, #32]
    8edc:	ldp	x8, x9, [sp, #208]
    8ee0:	stp	x8, x9, [sp, #48]
    8ee4:	ldr	x4, [x4, #16]
    8ee8:	stp	x6, x7, [sp, #96]
    8eec:	ldr	x5, [sp, #240]
    8ef0:	str	x5, [sp, #80]
    8ef4:	str	x4, [sp, #112]
    8ef8:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    8efc:	str	w22, [sp, #208]
    8f00:	ldr	x3, [x19]
    8f04:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    8f08:	add	x1, x1, #0xff0
    8f0c:	ldr	d0, [x19, #8]
    8f10:	mov	x2, #0xf00000000           	// #64424509440
    8f14:	mov	x0, x21
    8f18:	str	x3, [sp, #216]
    8f1c:	str	d0, [sp, #224]
    8f20:	stp	x2, x1, [sp, #248]
    8f24:	str	wzr, [sp, #528]
    8f28:	str	wzr, [sp, #536]
    8f2c:	str	xzr, [sp, #544]
    8f30:	str	xzr, [sp, #552]
    8f34:	str	wzr, [sp, #576]
    8f38:	str	xzr, [sp, #584]
    8f3c:	str	xzr, [sp, #592]
    8f40:	str	xzr, [sp, #616]
    8f44:	str	wzr, [sp, #624]
    8f48:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    8f4c:	mov	x0, x20
    8f50:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    8f54:	ldp	x19, x20, [sp]
    8f58:	ldp	x21, x22, [sp, #16]
    8f5c:	ldr	x30, [sp, #32]
    8f60:	add	sp, sp, #0x280
    8f64:	ret
    8f68:	sub	sp, sp, #0x300
    8f6c:	stp	x19, x20, [sp]
    8f70:	mov	x20, x2
    8f74:	mov	x19, x0
    8f78:	stp	x21, x22, [sp, #16]
    8f7c:	add	x22, sp, #0x150
    8f80:	mov	x2, #0x8                   	// #8
    8f84:	mov	x21, x1
    8f88:	mov	x1, x0
    8f8c:	mov	x0, x22
    8f90:	stp	x23, x24, [sp, #32]
    8f94:	stp	x25, x26, [sp, #48]
    8f98:	stp	x27, x28, [sp, #64]
    8f9c:	ldr	x23, [x20, #8]
    8fa0:	str	x30, [sp, #80]
    8fa4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    8fa8:	ldr	x0, [sp, #336]
    8fac:	ldrb	w1, [x0]
    8fb0:	ldrb	w0, [x0, #1]
    8fb4:	add	w2, w1, w0
    8fb8:	cmp	w2, #0x1
    8fbc:	b.ls	9020 <__ubsan_default_options@@Base+0xf58>  // b.plast
    8fc0:	cmp	w1, #0xff
    8fc4:	b.eq	9020 <__ubsan_default_options@@Base+0xf58>  // b.none
    8fc8:	cmp	w0, #0xff
    8fcc:	b.eq	9020 <__ubsan_default_options@@Base+0xf58>  // b.none
    8fd0:	add	x0, x19, #0xc
    8fd4:	mov	w1, #0xffffffff            	// #-1
    8fd8:	ldxr	w26, [x0]
    8fdc:	stxr	w2, w1, [x0]
    8fe0:	cbnz	w2, 8fd8 <__ubsan_default_options@@Base+0xf10>
    8fe4:	dmb	ish
    8fe8:	ldrb	w0, [x20]
    8fec:	ldr	w28, [x19, #8]
    8ff0:	ldr	x27, [x19]
    8ff4:	cbnz	w0, 9160 <__ubsan_default_options@@Base+0x1098>
    8ff8:	cmn	w26, #0x1
    8ffc:	b.ne	9144 <__ubsan_default_options@@Base+0x107c>  // b.any
    9000:	ldp	x19, x20, [sp]
    9004:	ldp	x21, x22, [sp, #16]
    9008:	ldp	x23, x24, [sp, #32]
    900c:	ldp	x25, x26, [sp, #48]
    9010:	ldp	x27, x28, [sp, #64]
    9014:	ldr	x30, [sp, #80]
    9018:	add	sp, sp, #0x300
    901c:	ret
    9020:	cbz	x23, 9170 <__ubsan_default_options@@Base+0x10a8>
    9024:	sub	x0, x23, #0x4
    9028:	bl	7070 <__asan_backtrace_open@plt+0x640>
    902c:	ldp	x23, x9, [x19]
    9030:	mov	x25, x0
    9034:	mov	x24, x0
    9038:	mov	w26, #0x0                   	// #0
    903c:	mov	w28, #0x0                   	// #0
    9040:	mov	x27, #0x0                   	// #0
    9044:	mov	w8, #0x3                   	// #3
    9048:	str	w8, [sp, #216]
    904c:	add	x19, sp, #0x100
    9050:	str	x27, [sp, #224]
    9054:	add	x2, sp, #0x70
    9058:	stp	w28, w26, [sp, #232]
    905c:	mov	x0, x19
    9060:	ldp	x6, x7, [sp, #216]
    9064:	stp	x6, x7, [sp, #112]
    9068:	add	x1, sp, #0xa0
    906c:	ldp	x6, x7, [x20]
    9070:	mov	w3, #0x12                  	// #18
    9074:	ldp	x4, x5, [sp, #232]
    9078:	stp	x4, x5, [sp, #128]
    907c:	ldr	x4, [x20, #16]
    9080:	str	w8, [sp, #100]
    9084:	str	x9, [sp, #104]
    9088:	str	x24, [sp, #144]
    908c:	stp	x6, x7, [sp, #160]
    9090:	str	x4, [sp, #176]
    9094:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9098:	ldr	w8, [sp, #100]
    909c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    90a0:	add	x2, x2, #0x38
    90a4:	mov	x3, #0x1200000000          	// #77309411328
    90a8:	add	x1, sp, #0xc8
    90ac:	mov	x0, x22
    90b0:	stp	x23, x21, [sp, #200]
    90b4:	str	w8, [sp, #336]
    90b8:	str	x27, [sp, #344]
    90bc:	str	w28, [sp, #352]
    90c0:	str	w26, [sp, #356]
    90c4:	stp	x24, x3, [sp, #368]
    90c8:	str	x2, [sp, #384]
    90cc:	str	wzr, [sp, #656]
    90d0:	str	wzr, [sp, #664]
    90d4:	str	xzr, [sp, #672]
    90d8:	str	xzr, [sp, #680]
    90dc:	str	wzr, [sp, #704]
    90e0:	str	xzr, [sp, #712]
    90e4:	str	xzr, [sp, #720]
    90e8:	str	xzr, [sp, #744]
    90ec:	str	wzr, [sp, #752]
    90f0:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    90f4:	mov	x1, x23
    90f8:	bl	7090 <__asan_backtrace_open@plt+0x660>
    90fc:	ldr	x9, [sp, #104]
    9100:	mov	x1, x9
    9104:	bl	7090 <__asan_backtrace_open@plt+0x660>
    9108:	mov	x0, x22
    910c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9110:	mov	x0, x19
    9114:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9118:	cbz	x25, 9000 <__ubsan_default_options@@Base+0xf38>
    911c:	mov	x0, x25
    9120:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    9124:	ldp	x19, x20, [sp]
    9128:	ldp	x21, x22, [sp, #16]
    912c:	ldp	x23, x24, [sp, #32]
    9130:	ldp	x25, x26, [sp, #48]
    9134:	ldp	x27, x28, [sp, #64]
    9138:	ldr	x30, [sp, #80]
    913c:	add	sp, sp, #0x300
    9140:	ret
    9144:	mov	x1, x23
    9148:	mov	x2, x27
    914c:	mov	w0, #0x12                  	// #18
    9150:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    9154:	tst	w0, #0xff
    9158:	b.ne	9000 <__ubsan_default_options@@Base+0xf38>  // b.any
    915c:	nop
    9160:	mov	w8, #0x1                   	// #1
    9164:	mov	x25, #0x0                   	// #0
    9168:	ldp	x23, x9, [x19, #16]
    916c:	b	9048 <__ubsan_default_options@@Base+0xf80>
    9170:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9174:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    9178:	add	x2, x2, #0x20
    917c:	add	x0, x0, #0x878
    9180:	mov	x4, #0x0                   	// #0
    9184:	mov	x3, #0x0                   	// #0
    9188:	mov	w1, #0x2b                  	// #43
    918c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9190:	sub	sp, sp, #0x2c0
    9194:	stp	x25, x26, [sp, #48]
    9198:	mov	x25, x3
    919c:	stp	x19, x20, [sp]
    91a0:	mov	x19, x0
    91a4:	add	x0, x0, #0xc
    91a8:	stp	x21, x22, [sp, #16]
    91ac:	stp	x23, x24, [sp, #32]
    91b0:	ldrb	w24, [x3]
    91b4:	mov	w3, #0xffffffff            	// #-1
    91b8:	ldr	x26, [x25, #8]
    91bc:	str	x30, [sp, #72]
    91c0:	ldxr	w21, [x0]
    91c4:	stxr	w4, w3, [x0]
    91c8:	cbnz	w4, 91c0 <__ubsan_default_options@@Base+0x10f8>
    91cc:	dmb	ish
    91d0:	ldr	x0, [x19, #24]
    91d4:	stp	x1, x0, [sp, #168]
    91d8:	ldr	w23, [x19, #8]
    91dc:	ldr	x1, [x19, #16]
    91e0:	str	x1, [sp, #160]
    91e4:	ldrh	w1, [x0]
    91e8:	str	x2, [sp, #184]
    91ec:	ldr	x22, [x19]
    91f0:	cbnz	w1, 9200 <__ubsan_default_options@@Base+0x1138>
    91f4:	ldrh	w0, [x0, #2]
    91f8:	tbnz	w0, #0, 9374 <__ubsan_default_options@@Base+0x12ac>
    91fc:	nop
    9200:	add	x20, sp, #0xb0
    9204:	mov	x0, x20
    9208:	bl	c7c8 <__ubsan_get_current_report_data@@Base+0x778>
    920c:	ldr	x2, [x19, #16]
    9210:	ldrh	w3, [x2]
    9214:	cbnz	w3, 9590 <__ubsan_default_options@@Base+0x14c8>
    9218:	ldrh	w2, [x2, #2]
    921c:	mov	w3, #0x1                   	// #1
    9220:	asr	w2, w2, #1
    9224:	lsl	w2, w3, w2
    9228:	cbz	x1, 938c <__ubsan_default_options@@Base+0x12c4>
    922c:	cbnz	w24, 93ec <__ubsan_default_options@@Base+0x1324>
    9230:	str	x27, [sp, #64]
    9234:	mov	w27, #0xd                   	// #13
    9238:	cmn	w21, #0x1
    923c:	b.eq	9570 <__ubsan_default_options@@Base+0x14a8>  // b.none
    9240:	mov	x1, x26
    9244:	mov	x2, x22
    9248:	mov	w0, w27
    924c:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    9250:	tst	w0, #0xff
    9254:	b.ne	9570 <__ubsan_default_options@@Base+0x14a8>  // b.any
    9258:	mov	w0, #0x1                   	// #1
    925c:	str	w0, [sp, #272]
    9260:	str	x22, [sp, #280]
    9264:	add	x24, sp, #0xc0
    9268:	str	w23, [sp, #288]
    926c:	mov	w3, w27
    9270:	str	w21, [sp, #292]
    9274:	add	x2, sp, #0x50
    9278:	ldp	x6, x7, [sp, #272]
    927c:	stp	x6, x7, [sp, #80]
    9280:	add	x1, sp, #0x80
    9284:	ldp	x6, x7, [x25]
    9288:	mov	x0, x24
    928c:	ldp	x4, x5, [sp, #288]
    9290:	stp	x4, x5, [sp, #96]
    9294:	ldr	x4, [x25, #16]
    9298:	stp	x6, x7, [sp, #128]
    929c:	ldr	x8, [sp, #304]
    92a0:	str	x8, [sp, #112]
    92a4:	str	x4, [sp, #144]
    92a8:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    92ac:	cmp	w27, #0xd
    92b0:	ldr	x27, [sp, #64]
    92b4:	b.eq	9440 <__ubsan_default_options@@Base+0x1378>  // b.none
    92b8:	ldr	x0, [sp, #160]
    92bc:	add	x26, sp, #0xa0
    92c0:	ldrh	w1, [x0]
    92c4:	cbnz	w1, 92e0 <__ubsan_default_options@@Base+0x1218>
    92c8:	ldrh	w0, [x0, #2]
    92cc:	add	x26, sp, #0xa0
    92d0:	tbz	w0, #0, 92e0 <__ubsan_default_options@@Base+0x1218>
    92d4:	mov	x0, x26
    92d8:	bl	c648 <__ubsan_get_current_report_data@@Base+0x5f8>
    92dc:	tbnz	x1, #63, 95b4 <__ubsan_default_options@@Base+0x14ec>
    92e0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    92e4:	add	x2, x2, #0x140
    92e8:	mov	w4, #0x1                   	// #1
    92ec:	mov	x3, #0xc00000000           	// #51539607552
    92f0:	add	x25, sp, #0x110
    92f4:	mov	x1, x26
    92f8:	mov	x0, x25
    92fc:	str	w4, [sp, #272]
    9300:	str	x22, [sp, #280]
    9304:	str	w23, [sp, #288]
    9308:	str	w21, [sp, #292]
    930c:	stp	x3, x2, [sp, #312]
    9310:	str	wzr, [sp, #592]
    9314:	str	wzr, [sp, #600]
    9318:	str	xzr, [sp, #608]
    931c:	str	xzr, [sp, #616]
    9320:	str	wzr, [sp, #640]
    9324:	str	xzr, [sp, #648]
    9328:	str	xzr, [sp, #656]
    932c:	str	xzr, [sp, #680]
    9330:	str	wzr, [sp, #688]
    9334:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9338:	mov	x1, x20
    933c:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9340:	ldr	x1, [x19, #16]
    9344:	bl	7090 <__asan_backtrace_open@plt+0x660>
    9348:	mov	x0, x25
    934c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9350:	mov	x0, x24
    9354:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9358:	ldp	x19, x20, [sp]
    935c:	ldp	x21, x22, [sp, #16]
    9360:	ldp	x23, x24, [sp, #32]
    9364:	ldp	x25, x26, [sp, #48]
    9368:	ldr	x30, [sp, #72]
    936c:	add	sp, sp, #0x2c0
    9370:	ret
    9374:	add	x20, sp, #0xb0
    9378:	mov	x0, x20
    937c:	bl	c648 <__ubsan_get_current_report_data@@Base+0x5f8>
    9380:	tbz	x1, #63, 9204 <__ubsan_default_options@@Base+0x113c>
    9384:	cbz	w24, 9230 <__ubsan_default_options@@Base+0x1168>
    9388:	b	93ec <__ubsan_default_options@@Base+0x1324>
    938c:	cmp	x2, x0
    9390:	b.ls	922c <__ubsan_default_options@@Base+0x1164>  // b.plast
    9394:	cbz	w24, 95f8 <__ubsan_default_options@@Base+0x1530>
    9398:	str	w3, [sp, #272]
    939c:	add	x24, sp, #0xc0
    93a0:	str	x22, [sp, #280]
    93a4:	mov	x0, x24
    93a8:	str	w23, [sp, #288]
    93ac:	add	x2, sp, #0x50
    93b0:	str	w21, [sp, #292]
    93b4:	add	x1, sp, #0x80
    93b8:	ldp	x6, x7, [sp, #272]
    93bc:	stp	x6, x7, [sp, #80]
    93c0:	mov	w3, #0xc                   	// #12
    93c4:	ldp	x6, x7, [x25]
    93c8:	ldp	x4, x5, [sp, #288]
    93cc:	stp	x4, x5, [sp, #96]
    93d0:	ldr	x4, [x25, #16]
    93d4:	stp	x6, x7, [sp, #128]
    93d8:	ldr	x8, [sp, #304]
    93dc:	str	x8, [sp, #112]
    93e0:	str	x4, [sp, #144]
    93e4:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    93e8:	b	92b8 <__ubsan_default_options@@Base+0x11f0>
    93ec:	mov	w0, #0x1                   	// #1
    93f0:	str	w0, [sp, #272]
    93f4:	str	x22, [sp, #280]
    93f8:	add	x24, sp, #0xc0
    93fc:	str	w23, [sp, #288]
    9400:	add	x2, sp, #0x50
    9404:	str	w21, [sp, #292]
    9408:	add	x1, sp, #0x80
    940c:	ldp	x6, x7, [sp, #272]
    9410:	stp	x6, x7, [sp, #80]
    9414:	mov	x0, x24
    9418:	ldp	x6, x7, [x25]
    941c:	mov	w3, #0xd                   	// #13
    9420:	ldp	x4, x5, [sp, #288]
    9424:	stp	x4, x5, [sp, #96]
    9428:	ldr	x4, [x25, #16]
    942c:	stp	x6, x7, [sp, #128]
    9430:	ldr	x8, [sp, #304]
    9434:	str	x8, [sp, #112]
    9438:	str	x4, [sp, #144]
    943c:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9440:	ldr	x0, [sp, #176]
    9444:	ldrh	w1, [x0]
    9448:	cbnz	w1, 94c4 <__ubsan_default_options@@Base+0x13fc>
    944c:	ldrh	w0, [x0, #2]
    9450:	tbz	w0, #0, 94c4 <__ubsan_default_options@@Base+0x13fc>
    9454:	mov	x0, x20
    9458:	bl	c648 <__ubsan_get_current_report_data@@Base+0x5f8>
    945c:	tbz	x1, #63, 94c4 <__ubsan_default_options@@Base+0x13fc>
    9460:	add	x19, sp, #0x110
    9464:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9468:	mov	x1, x20
    946c:	mov	x0, x19
    9470:	add	x2, x2, #0xc8
    9474:	mov	w4, #0x1                   	// #1
    9478:	mov	x3, #0xd00000000           	// #55834574848
    947c:	str	w4, [sp, #272]
    9480:	str	x22, [sp, #280]
    9484:	str	w23, [sp, #288]
    9488:	str	w21, [sp, #292]
    948c:	stp	x3, x2, [sp, #312]
    9490:	str	wzr, [sp, #592]
    9494:	str	wzr, [sp, #600]
    9498:	str	xzr, [sp, #608]
    949c:	str	xzr, [sp, #616]
    94a0:	str	wzr, [sp, #640]
    94a4:	str	xzr, [sp, #648]
    94a8:	str	xzr, [sp, #656]
    94ac:	str	xzr, [sp, #680]
    94b0:	str	wzr, [sp, #688]
    94b4:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    94b8:	mov	x0, x19
    94bc:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    94c0:	b	9350 <__ubsan_default_options@@Base+0x1288>
    94c4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    94c8:	add	x2, x2, #0xe8
    94cc:	mov	x3, #0xd00000000           	// #55834574848
    94d0:	add	x25, sp, #0x110
    94d4:	mov	x1, x20
    94d8:	mov	x0, x25
    94dc:	mov	w20, #0x1                   	// #1
    94e0:	str	w20, [sp, #272]
    94e4:	str	x22, [sp, #280]
    94e8:	str	w23, [sp, #288]
    94ec:	str	w21, [sp, #292]
    94f0:	stp	x3, x2, [sp, #312]
    94f4:	str	wzr, [sp, #592]
    94f8:	str	wzr, [sp, #600]
    94fc:	str	xzr, [sp, #608]
    9500:	str	xzr, [sp, #616]
    9504:	str	wzr, [sp, #640]
    9508:	str	xzr, [sp, #648]
    950c:	str	xzr, [sp, #656]
    9510:	str	xzr, [sp, #680]
    9514:	str	wzr, [sp, #688]
    9518:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    951c:	ldr	x1, [x19, #16]
    9520:	ldrh	w3, [x1]
    9524:	cbnz	w3, 9590 <__ubsan_default_options@@Base+0x14c8>
    9528:	ldrh	w4, [x1, #2]
    952c:	ldr	w3, [x0, #320]
    9530:	asr	w4, w4, #1
    9534:	cmp	w3, #0x8
    9538:	lsl	w20, w20, w4
    953c:	b.eq	95d4 <__ubsan_default_options@@Base+0x150c>  // b.none
    9540:	ubfiz	x4, x3, #5, #32
    9544:	add	w3, w3, #0x1
    9548:	add	x4, x4, #0x40
    954c:	str	w3, [x0, #320]
    9550:	add	x3, x0, x4
    9554:	mov	w5, #0x2                   	// #2
    9558:	str	w5, [x0, x4]
    955c:	stp	x20, xzr, [x3, #16]
    9560:	bl	7090 <__asan_backtrace_open@plt+0x660>
    9564:	mov	x0, x25
    9568:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    956c:	b	9350 <__ubsan_default_options@@Base+0x1288>
    9570:	ldp	x19, x20, [sp]
    9574:	ldp	x21, x22, [sp, #16]
    9578:	ldp	x23, x24, [sp, #32]
    957c:	ldp	x25, x26, [sp, #48]
    9580:	ldr	x27, [sp, #64]
    9584:	ldr	x30, [sp, #72]
    9588:	add	sp, sp, #0x2c0
    958c:	ret
    9590:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9594:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9598:	add	x2, x2, #0x78
    959c:	add	x0, x0, #0x98
    95a0:	mov	x4, #0x0                   	// #0
    95a4:	mov	x3, #0x0                   	// #0
    95a8:	mov	w1, #0x7b                  	// #123
    95ac:	str	x27, [sp, #64]
    95b0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    95b4:	add	x19, sp, #0x110
    95b8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    95bc:	mov	x1, x26
    95c0:	mov	x0, x19
    95c4:	add	x2, x2, #0x120
    95c8:	mov	w4, #0x1                   	// #1
    95cc:	mov	x3, #0xc00000000           	// #51539607552
    95d0:	b	947c <__ubsan_default_options@@Base+0x13b4>
    95d4:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    95d8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    95dc:	add	x2, x2, #0x8f8
    95e0:	add	x0, x0, #0x878
    95e4:	mov	x4, #0x0                   	// #0
    95e8:	mov	x3, #0x0                   	// #0
    95ec:	mov	w1, #0xbf                  	// #191
    95f0:	str	x27, [sp, #64]
    95f4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    95f8:	str	x27, [sp, #64]
    95fc:	mov	w27, #0xc                   	// #12
    9600:	b	9238 <__ubsan_default_options@@Base+0x1170>
    9604:	nop
    9608:	sub	sp, sp, #0x290
    960c:	mov	x4, x1
    9610:	mov	w1, #0xffffffff            	// #-1
    9614:	stp	x19, x20, [sp]
    9618:	mov	x19, x0
    961c:	add	x0, x0, #0xc
    9620:	stp	x21, x22, [sp, #16]
    9624:	stp	x23, x24, [sp, #32]
    9628:	str	x30, [sp, #48]
    962c:	ldxr	w22, [x0]
    9630:	stxr	w2, w1, [x0]
    9634:	cbnz	w2, 962c <__ubsan_default_options@@Base+0x1564>
    9638:	dmb	ish
    963c:	ldr	x24, [x19]
    9640:	mov	w21, #0x1                   	// #1
    9644:	ldr	w23, [x19, #8]
    9648:	add	x20, sp, #0x90
    964c:	str	w21, [sp, #224]
    9650:	mov	x0, x20
    9654:	str	x24, [sp, #232]
    9658:	add	x2, sp, #0x40
    965c:	stp	w23, w22, [sp, #240]
    9660:	add	x1, sp, #0x70
    9664:	ldp	x6, x7, [sp, #224]
    9668:	stp	x6, x7, [sp, #64]
    966c:	mov	w3, #0x9                   	// #9
    9670:	ldp	x6, x7, [sp, #240]
    9674:	stp	x6, x7, [sp, #80]
    9678:	ldp	x6, x7, [x4]
    967c:	stp	x6, x7, [sp, #112]
    9680:	ldr	x4, [x4, #16]
    9684:	str	x4, [sp, #128]
    9688:	ldr	x5, [sp, #256]
    968c:	str	x5, [sp, #96]
    9690:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9694:	str	w21, [sp, #224]
    9698:	ldrb	w2, [x19, #16]
    969c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    96a0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    96a4:	add	x0, x0, #0x188
    96a8:	cmp	w2, #0x0
    96ac:	add	x1, x1, #0x180
    96b0:	csel	x1, x1, x0, eq  // eq = none
    96b4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    96b8:	add	x2, x2, #0x190
    96bc:	mov	x3, #0x900000000           	// #38654705664
    96c0:	add	x0, sp, #0xe0
    96c4:	str	x24, [sp, #232]
    96c8:	stp	w23, w22, [sp, #240]
    96cc:	stp	x3, x2, [sp, #264]
    96d0:	str	wzr, [sp, #288]
    96d4:	str	x1, [sp, #304]
    96d8:	str	w21, [sp, #544]
    96dc:	str	wzr, [sp, #552]
    96e0:	str	xzr, [sp, #560]
    96e4:	str	xzr, [sp, #568]
    96e8:	str	wzr, [sp, #592]
    96ec:	str	xzr, [sp, #600]
    96f0:	str	xzr, [sp, #608]
    96f4:	str	xzr, [sp, #632]
    96f8:	str	wzr, [sp, #640]
    96fc:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9700:	mov	x0, x20
    9704:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9708:	ldp	x19, x20, [sp]
    970c:	ldp	x21, x22, [sp, #16]
    9710:	ldp	x23, x24, [sp, #32]
    9714:	ldr	x30, [sp, #48]
    9718:	add	sp, sp, #0x290
    971c:	ret
    9720:	sub	sp, sp, #0x2a0
    9724:	stp	x19, x20, [sp]
    9728:	mov	x19, x0
    972c:	mov	x20, x2
    9730:	add	x0, x0, #0xc
    9734:	stp	x21, x22, [sp, #16]
    9738:	mov	x21, x1
    973c:	mov	w1, #0xffffffff            	// #-1
    9740:	stp	x23, x24, [sp, #32]
    9744:	stp	x25, x26, [sp, #48]
    9748:	stp	x27, x30, [sp, #64]
    974c:	ldxr	w23, [x0]
    9750:	stxr	w2, w1, [x0]
    9754:	cbnz	w2, 974c <__ubsan_default_options@@Base+0x1684>
    9758:	dmb	ish
    975c:	ldrb	w0, [x20]
    9760:	ldr	w27, [x19, #8]
    9764:	ldr	x26, [x19]
    9768:	cbnz	w0, 97a8 <__ubsan_default_options@@Base+0x16e0>
    976c:	cmp	w23, w1
    9770:	b.ne	9790 <__ubsan_default_options@@Base+0x16c8>  // b.any
    9774:	ldp	x19, x20, [sp]
    9778:	ldp	x21, x22, [sp, #16]
    977c:	ldp	x23, x24, [sp, #32]
    9780:	ldp	x25, x26, [sp, #48]
    9784:	ldp	x27, x30, [sp, #64]
    9788:	add	sp, sp, #0x2a0
    978c:	ret
    9790:	ldr	x1, [x20, #8]
    9794:	mov	x2, x26
    9798:	mov	w0, #0x15                  	// #21
    979c:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    97a0:	tst	w0, #0xff
    97a4:	b.ne	9774 <__ubsan_default_options@@Base+0x16ac>  // b.any
    97a8:	mov	w25, #0x1                   	// #1
    97ac:	str	w25, [sp, #240]
    97b0:	str	x26, [sp, #248]
    97b4:	add	x2, sp, #0x50
    97b8:	str	w27, [sp, #256]
    97bc:	add	x1, sp, #0x80
    97c0:	str	w23, [sp, #260]
    97c4:	add	x24, sp, #0xa0
    97c8:	ldp	x4, x5, [sp, #240]
    97cc:	stp	x4, x5, [sp, #80]
    97d0:	mov	w3, #0x15                  	// #21
    97d4:	ldp	x4, x5, [sp, #256]
    97d8:	stp	x4, x5, [sp, #96]
    97dc:	mov	x0, x24
    97e0:	ldr	x4, [sp, #272]
    97e4:	str	x4, [sp, #112]
    97e8:	ldp	x4, x5, [x20]
    97ec:	stp	x4, x5, [sp, #128]
    97f0:	add	x22, sp, #0xf0
    97f4:	ldr	x4, [x20, #16]
    97f8:	str	x4, [sp, #144]
    97fc:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9800:	mov	x0, x21
    9804:	bl	7070 <__asan_backtrace_open@plt+0x640>
    9808:	mov	x20, x0
    980c:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9810:	ldr	x1, [x19, #16]
    9814:	add	x3, x3, #0x1c8
    9818:	ldr	x19, [x20, #40]
    981c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9820:	add	x2, x2, #0x1d8
    9824:	mov	x4, #0x1500000000          	// #90194313216
    9828:	cmp	x19, #0x0
    982c:	mov	x0, x22
    9830:	csel	x19, x3, x19, eq  // eq = none
    9834:	str	w25, [sp, #240]
    9838:	str	x26, [sp, #248]
    983c:	str	w27, [sp, #256]
    9840:	str	w23, [sp, #260]
    9844:	stp	x4, x2, [sp, #280]
    9848:	str	wzr, [sp, #304]
    984c:	str	x19, [sp, #320]
    9850:	str	w25, [sp, #560]
    9854:	str	wzr, [sp, #568]
    9858:	str	xzr, [sp, #576]
    985c:	str	xzr, [sp, #584]
    9860:	str	wzr, [sp, #608]
    9864:	str	xzr, [sp, #616]
    9868:	str	xzr, [sp, #624]
    986c:	str	xzr, [sp, #648]
    9870:	str	wzr, [sp, #656]
    9874:	bl	7090 <__asan_backtrace_open@plt+0x660>
    9878:	mov	x0, x22
    987c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9880:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9884:	mov	x2, #0x1                   	// #1
    9888:	add	x1, x1, #0x220
    988c:	mov	w3, #0x3                   	// #3
    9890:	movk	x2, #0x15, lsl #32
    9894:	mov	x0, x22
    9898:	str	w3, [sp, #240]
    989c:	str	xzr, [sp, #248]
    98a0:	str	xzr, [sp, #256]
    98a4:	stp	x20, x2, [sp, #272]
    98a8:	str	x1, [sp, #288]
    98ac:	str	wzr, [sp, #304]
    98b0:	str	x19, [sp, #320]
    98b4:	str	w25, [sp, #560]
    98b8:	str	wzr, [sp, #568]
    98bc:	str	xzr, [sp, #576]
    98c0:	str	xzr, [sp, #584]
    98c4:	str	wzr, [sp, #608]
    98c8:	str	xzr, [sp, #616]
    98cc:	str	xzr, [sp, #624]
    98d0:	str	xzr, [sp, #648]
    98d4:	str	wzr, [sp, #656]
    98d8:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    98dc:	mov	x0, x20
    98e0:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    98e4:	mov	x0, x24
    98e8:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    98ec:	ldp	x19, x20, [sp]
    98f0:	ldp	x21, x22, [sp, #16]
    98f4:	ldp	x23, x24, [sp, #32]
    98f8:	ldp	x25, x26, [sp, #48]
    98fc:	ldp	x27, x30, [sp, #64]
    9900:	add	sp, sp, #0x2a0
    9904:	ret
    9908:	sub	sp, sp, #0x2e0
    990c:	str	x2, [sp, #104]
    9910:	ldrb	w2, [x5]
    9914:	stp	x19, x20, [sp]
    9918:	mov	x19, x0
    991c:	mov	x20, x5
    9920:	add	x0, x0, #0xc
    9924:	stp	x21, x22, [sp, #16]
    9928:	mov	x21, x1
    992c:	stp	x23, x24, [sp, #32]
    9930:	stp	x25, x26, [sp, #48]
    9934:	stp	x27, x28, [sp, #64]
    9938:	stp	x3, x4, [sp, #192]
    993c:	mov	w3, #0xffffffff            	// #-1
    9940:	ldr	x1, [x5, #8]
    9944:	str	x30, [sp, #80]
    9948:	ldxr	w25, [x0]
    994c:	stxr	w4, w3, [x0]
    9950:	cbnz	w4, 9948 <__ubsan_default_options@@Base+0x1880>
    9954:	dmb	ish
    9958:	ldr	x0, [x19, #16]
    995c:	mov	w23, w2
    9960:	ldr	w28, [x19, #8]
    9964:	ldr	x27, [x19]
    9968:	ldrh	w3, [x0]
    996c:	cbnz	w3, 99ac <__ubsan_default_options@@Base+0x18e4>
    9970:	ldrh	w0, [x0, #2]
    9974:	tbz	w0, #0, 99ac <__ubsan_default_options@@Base+0x18e4>
    9978:	cbnz	w2, 9b20 <__ubsan_default_options@@Base+0x1a58>
    997c:	mov	w23, #0x1                   	// #1
    9980:	mov	w26, #0x5                   	// #5
    9984:	cmn	w25, #0x1
    9988:	b.ne	9b04 <__ubsan_default_options@@Base+0x1a3c>  // b.any
    998c:	ldp	x19, x20, [sp]
    9990:	ldp	x21, x22, [sp, #16]
    9994:	ldp	x23, x24, [sp, #32]
    9998:	ldp	x25, x26, [sp, #48]
    999c:	ldp	x27, x28, [sp, #64]
    99a0:	ldr	x30, [sp, #80]
    99a4:	add	sp, sp, #0x2e0
    99a8:	ret
    99ac:	mov	w26, #0x6                   	// #6
    99b0:	cbz	w2, 9984 <__ubsan_default_options@@Base+0x18bc>
    99b4:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    99b8:	ldr	x0, [x0, #3816]
    99bc:	ldrb	w23, [x0, #17]
    99c0:	cbnz	w23, 998c <__ubsan_default_options@@Base+0x18c4>
    99c4:	mov	w9, #0x1                   	// #1
    99c8:	str	w9, [sp, #304]
    99cc:	str	x27, [sp, #312]
    99d0:	add	x22, sp, #0xe0
    99d4:	str	w28, [sp, #320]
    99d8:	mov	x0, x22
    99dc:	str	w25, [sp, #324]
    99e0:	mov	w3, w26
    99e4:	ldp	x6, x7, [sp, #304]
    99e8:	stp	x6, x7, [sp, #112]
    99ec:	add	x2, sp, #0x70
    99f0:	ldp	x4, x5, [sp, #320]
    99f4:	add	x1, sp, #0xa0
    99f8:	ldr	x6, [x20, #16]
    99fc:	stp	x4, x5, [sp, #128]
    9a00:	add	x24, sp, #0x130
    9a04:	ldp	x4, x5, [x20]
    9a08:	stp	x4, x5, [sp, #160]
    9a0c:	ldr	x10, [sp, #336]
    9a10:	str	x10, [sp, #144]
    9a14:	str	x6, [sp, #176]
    9a18:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9a1c:	str	x27, [sp, #312]
    9a20:	ldr	x4, [x19, #16]
    9a24:	stp	x4, x21, [sp, #208]
    9a28:	add	x4, sp, #0x150
    9a2c:	cmp	w23, #0x0
    9a30:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9a34:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9a38:	add	x0, x0, #0x238
    9a3c:	add	x2, x2, #0x230
    9a40:	mov	w9, #0x1                   	// #1
    9a44:	csel	x2, x2, x0, ne  // ne = any
    9a48:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9a4c:	add	x3, x3, #0x248
    9a50:	str	w9, [sp, #304]
    9a54:	stp	w28, w25, [x4, #-16]
    9a58:	add	x1, sp, #0xd0
    9a5c:	stp	wzr, w26, [x4, #8]
    9a60:	mov	x0, x24
    9a64:	str	x3, [sp, #352]
    9a68:	str	wzr, [sp, #368]
    9a6c:	str	x2, [sp, #384]
    9a70:	str	w9, [sp, #624]
    9a74:	str	wzr, [sp, #632]
    9a78:	str	xzr, [sp, #640]
    9a7c:	str	xzr, [sp, #648]
    9a80:	str	wzr, [sp, #672]
    9a84:	str	xzr, [sp, #680]
    9a88:	str	xzr, [sp, #688]
    9a8c:	str	xzr, [sp, #712]
    9a90:	str	wzr, [sp, #720]
    9a94:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9a98:	ldr	w1, [x0, #320]
    9a9c:	cmp	w1, #0x8
    9aa0:	b.eq	9b28 <__ubsan_default_options@@Base+0x1a60>  // b.none
    9aa4:	ubfiz	x3, x1, #5, #32
    9aa8:	add	w1, w1, #0x1
    9aac:	add	x3, x3, #0x40
    9ab0:	str	w1, [x0, #320]
    9ab4:	add	x4, x0, x3
    9ab8:	add	x1, sp, #0xc0
    9abc:	ldr	x2, [sp, #104]
    9ac0:	str	wzr, [x0, x3]
    9ac4:	str	x2, [x4, #16]
    9ac8:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    9acc:	ldr	x1, [x19, #16]
    9ad0:	bl	7090 <__asan_backtrace_open@plt+0x660>
    9ad4:	mov	x0, x24
    9ad8:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9adc:	mov	x0, x22
    9ae0:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9ae4:	ldp	x19, x20, [sp]
    9ae8:	ldp	x21, x22, [sp, #16]
    9aec:	ldp	x23, x24, [sp, #32]
    9af0:	ldp	x25, x26, [sp, #48]
    9af4:	ldp	x27, x28, [sp, #64]
    9af8:	ldr	x30, [sp, #80]
    9afc:	add	sp, sp, #0x2e0
    9b00:	ret
    9b04:	mov	x2, x27
    9b08:	mov	w0, w26
    9b0c:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    9b10:	tst	w0, #0xff
    9b14:	b.ne	998c <__ubsan_default_options@@Base+0x18c4>  // b.any
    9b18:	cbz	w23, 99b4 <__ubsan_default_options@@Base+0x18ec>
    9b1c:	b	99c4 <__ubsan_default_options@@Base+0x18fc>
    9b20:	mov	w26, #0x5                   	// #5
    9b24:	b	99c4 <__ubsan_default_options@@Base+0x18fc>
    9b28:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    9b2c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    9b30:	add	x2, x2, #0x8f8
    9b34:	add	x0, x0, #0x878
    9b38:	mov	x4, #0x0                   	// #0
    9b3c:	mov	x3, #0x0                   	// #0
    9b40:	mov	w1, #0xbf                  	// #191
    9b44:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9b48:	sub	sp, sp, #0x2a0
    9b4c:	stp	x19, x20, [sp]
    9b50:	mov	x19, x0
    9b54:	add	x0, x0, #0xc
    9b58:	stp	x23, x24, [sp, #32]
    9b5c:	and	w23, w2, #0xff
    9b60:	mov	x20, x1
    9b64:	mov	w1, #0xffffffff            	// #-1
    9b68:	stp	x21, x22, [sp, #16]
    9b6c:	stp	x25, x26, [sp, #48]
    9b70:	str	x30, [sp, #72]
    9b74:	ldxr	w21, [x0]
    9b78:	stxr	w2, w1, [x0]
    9b7c:	cbnz	w2, 9b74 <__ubsan_default_options@@Base+0x1aac>
    9b80:	dmb	ish
    9b84:	ldrb	w0, [x20]
    9b88:	ldr	w25, [x19, #8]
    9b8c:	ldr	x22, [x19]
    9b90:	cbnz	w0, 9bd0 <__ubsan_default_options@@Base+0x1b08>
    9b94:	cmp	w21, w1
    9b98:	b.ne	9bb8 <__ubsan_default_options@@Base+0x1af0>  // b.any
    9b9c:	ldp	x19, x20, [sp]
    9ba0:	ldp	x21, x22, [sp, #16]
    9ba4:	ldp	x23, x24, [sp, #32]
    9ba8:	ldp	x25, x26, [sp, #48]
    9bac:	ldr	x30, [sp, #72]
    9bb0:	add	sp, sp, #0x2a0
    9bb4:	ret
    9bb8:	ldr	x1, [x20, #8]
    9bbc:	mov	x2, x22
    9bc0:	mov	w0, #0x17                  	// #23
    9bc4:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    9bc8:	tst	w0, #0xff
    9bcc:	b.ne	9b9c <__ubsan_default_options@@Base+0x1ad4>  // b.any
    9bd0:	mov	w26, #0x1                   	// #1
    9bd4:	str	w26, [sp, #240]
    9bd8:	str	x22, [sp, #248]
    9bdc:	add	x2, sp, #0x50
    9be0:	str	w25, [sp, #256]
    9be4:	add	x1, sp, #0x80
    9be8:	str	w21, [sp, #260]
    9bec:	mov	w3, #0x17                  	// #23
    9bf0:	ldp	x6, x7, [sp, #240]
    9bf4:	stp	x6, x7, [sp, #80]
    9bf8:	add	x24, sp, #0xf0
    9bfc:	ldp	x6, x7, [x20]
    9c00:	str	x27, [sp, #64]
    9c04:	ldp	x4, x5, [sp, #256]
    9c08:	stp	x4, x5, [sp, #96]
    9c0c:	add	x27, sp, #0xa0
    9c10:	ldr	x4, [x20, #16]
    9c14:	mov	x0, x27
    9c18:	ldr	x8, [sp, #272]
    9c1c:	str	x8, [sp, #112]
    9c20:	stp	x6, x7, [sp, #128]
    9c24:	str	x4, [sp, #144]
    9c28:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9c2c:	ldrsw	x2, [x19, #32]
    9c30:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9c34:	add	x1, x1, #0x2a8
    9c38:	mov	x4, #0x1700000000          	// #98784247808
    9c3c:	mov	w3, #0x2                   	// #2
    9c40:	mov	x0, x24
    9c44:	str	w26, [sp, #240]
    9c48:	str	x22, [sp, #248]
    9c4c:	str	w25, [sp, #256]
    9c50:	str	w21, [sp, #260]
    9c54:	stp	x4, x1, [sp, #280]
    9c58:	str	w3, [sp, #304]
    9c5c:	stp	x2, xzr, [sp, #320]
    9c60:	str	w26, [sp, #560]
    9c64:	str	wzr, [sp, #568]
    9c68:	str	xzr, [sp, #576]
    9c6c:	str	xzr, [sp, #584]
    9c70:	str	wzr, [sp, #608]
    9c74:	str	xzr, [sp, #616]
    9c78:	str	xzr, [sp, #624]
    9c7c:	str	xzr, [sp, #648]
    9c80:	str	wzr, [sp, #656]
    9c84:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9c88:	ldr	x2, [x19, #16]
    9c8c:	cbz	x2, 9d00 <__ubsan_default_options@@Base+0x1c38>
    9c90:	cmp	w23, #0x0
    9c94:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9c98:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9c9c:	add	x3, x3, #0x288
    9ca0:	add	x1, x1, #0x310
    9ca4:	mov	x4, #0x1                   	// #1
    9ca8:	csel	x1, x1, x3, ne  // ne = any
    9cac:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9cb0:	add	x3, x3, #0x2f0
    9cb4:	ldr	d0, [x19, #24]
    9cb8:	movk	x4, #0x17, lsl #32
    9cbc:	mov	x0, x24
    9cc0:	str	w26, [sp, #240]
    9cc4:	str	x2, [sp, #248]
    9cc8:	str	d0, [sp, #256]
    9ccc:	stp	x4, x3, [sp, #280]
    9cd0:	str	wzr, [sp, #304]
    9cd4:	str	x1, [sp, #320]
    9cd8:	str	w26, [sp, #560]
    9cdc:	str	wzr, [sp, #568]
    9ce0:	str	xzr, [sp, #576]
    9ce4:	str	xzr, [sp, #584]
    9ce8:	str	wzr, [sp, #608]
    9cec:	str	xzr, [sp, #616]
    9cf0:	str	xzr, [sp, #624]
    9cf4:	str	xzr, [sp, #648]
    9cf8:	str	wzr, [sp, #656]
    9cfc:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9d00:	mov	x0, x27
    9d04:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9d08:	ldp	x19, x20, [sp]
    9d0c:	ldp	x21, x22, [sp, #16]
    9d10:	ldp	x23, x24, [sp, #32]
    9d14:	ldp	x25, x26, [sp, #48]
    9d18:	ldr	x27, [sp, #64]
    9d1c:	ldr	x30, [sp, #72]
    9d20:	add	sp, sp, #0x2a0
    9d24:	ret
    9d28:	sub	sp, sp, #0x2a0
    9d2c:	stp	x19, x20, [sp]
    9d30:	stp	x21, x22, [sp, #16]
    9d34:	stp	x23, x24, [sp, #32]
    9d38:	stp	x25, x26, [sp, #48]
    9d3c:	str	x30, [sp, #72]
    9d40:	cbz	x1, 9f00 <__ubsan_default_options@@Base+0x1e38>
    9d44:	mov	x19, x2
    9d48:	and	w22, w3, #0xff
    9d4c:	add	x2, x1, #0xc
    9d50:	mov	x25, x0
    9d54:	mov	w0, #0xffffffff            	// #-1
    9d58:	ldxr	w20, [x2]
    9d5c:	stxr	w3, w0, [x2]
    9d60:	cbnz	w3, 9d58 <__ubsan_default_options@@Base+0x1c90>
    9d64:	dmb	ish
    9d68:	ldrb	w0, [x19]
    9d6c:	ldr	w24, [x1, #8]
    9d70:	ldr	x21, [x1]
    9d74:	cbnz	w0, 9db8 <__ubsan_default_options@@Base+0x1cf0>
    9d78:	cmn	w20, #0x1
    9d7c:	b.ne	9d9c <__ubsan_default_options@@Base+0x1cd4>  // b.any
    9d80:	ldp	x19, x20, [sp]
    9d84:	ldp	x21, x22, [sp, #16]
    9d88:	ldp	x23, x24, [sp, #32]
    9d8c:	ldp	x25, x26, [sp, #48]
    9d90:	ldr	x30, [sp, #72]
    9d94:	add	sp, sp, #0x2a0
    9d98:	ret
    9d9c:	ldr	x1, [x19, #8]
    9da0:	mov	x2, x21
    9da4:	mov	w0, #0x16                  	// #22
    9da8:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    9dac:	tst	w0, #0xff
    9db0:	b.ne	9d80 <__ubsan_default_options@@Base+0x1cb8>  // b.any
    9db4:	nop
    9db8:	mov	w26, #0x1                   	// #1
    9dbc:	str	w26, [sp, #240]
    9dc0:	str	x21, [sp, #248]
    9dc4:	mov	w3, #0x16                  	// #22
    9dc8:	str	w24, [sp, #256]
    9dcc:	add	x2, sp, #0x50
    9dd0:	str	w20, [sp, #260]
    9dd4:	add	x1, sp, #0x80
    9dd8:	ldp	x6, x7, [sp, #240]
    9ddc:	stp	x6, x7, [sp, #80]
    9de0:	add	x23, sp, #0xf0
    9de4:	ldp	x6, x7, [x19]
    9de8:	str	x27, [sp, #64]
    9dec:	ldp	x4, x5, [sp, #256]
    9df0:	stp	x4, x5, [sp, #96]
    9df4:	add	x27, sp, #0xa0
    9df8:	ldr	x4, [x19, #16]
    9dfc:	mov	x0, x27
    9e00:	ldr	x8, [sp, #272]
    9e04:	str	x8, [sp, #112]
    9e08:	stp	x6, x7, [sp, #128]
    9e0c:	str	x4, [sp, #144]
    9e10:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    9e14:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9e18:	add	x1, x1, #0x3b8
    9e1c:	mov	x2, #0x1600000000          	// #94489280512
    9e20:	mov	x0, x23
    9e24:	str	w26, [sp, #240]
    9e28:	str	x21, [sp, #248]
    9e2c:	str	w24, [sp, #256]
    9e30:	str	w20, [sp, #260]
    9e34:	stp	x2, x1, [sp, #280]
    9e38:	str	wzr, [sp, #560]
    9e3c:	str	wzr, [sp, #568]
    9e40:	str	xzr, [sp, #576]
    9e44:	str	xzr, [sp, #584]
    9e48:	str	wzr, [sp, #608]
    9e4c:	str	xzr, [sp, #616]
    9e50:	str	xzr, [sp, #624]
    9e54:	str	xzr, [sp, #648]
    9e58:	str	wzr, [sp, #656]
    9e5c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9e60:	ldr	x3, [x25]
    9e64:	cbz	x3, 9ed8 <__ubsan_default_options@@Base+0x1e10>
    9e68:	cmp	w22, #0x0
    9e6c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9e70:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9e74:	add	x2, x2, #0x328
    9e78:	add	x1, x1, #0x308
    9e7c:	mov	x4, #0x1                   	// #1
    9e80:	csel	x1, x1, x2, ne  // ne = any
    9e84:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9e88:	add	x2, x2, #0x2f0
    9e8c:	ldr	d0, [x25, #8]
    9e90:	movk	x4, #0x16, lsl #32
    9e94:	mov	x0, x23
    9e98:	str	w26, [sp, #240]
    9e9c:	str	x3, [sp, #248]
    9ea0:	str	d0, [sp, #256]
    9ea4:	stp	x4, x2, [sp, #280]
    9ea8:	str	wzr, [sp, #304]
    9eac:	str	x1, [sp, #320]
    9eb0:	str	w26, [sp, #560]
    9eb4:	str	wzr, [sp, #568]
    9eb8:	str	xzr, [sp, #576]
    9ebc:	str	xzr, [sp, #584]
    9ec0:	str	wzr, [sp, #608]
    9ec4:	str	xzr, [sp, #616]
    9ec8:	str	xzr, [sp, #624]
    9ecc:	str	xzr, [sp, #648]
    9ed0:	str	wzr, [sp, #656]
    9ed4:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    9ed8:	mov	x0, x27
    9edc:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    9ee0:	ldp	x19, x20, [sp]
    9ee4:	ldp	x21, x22, [sp, #16]
    9ee8:	ldp	x23, x24, [sp, #32]
    9eec:	ldp	x25, x26, [sp, #48]
    9ef0:	ldr	x27, [sp, #64]
    9ef4:	ldr	x30, [sp, #72]
    9ef8:	add	sp, sp, #0x2a0
    9efc:	ret
    9f00:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9f04:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    9f08:	add	x2, x2, #0x348
    9f0c:	add	x0, x0, #0x380
    9f10:	mov	x4, #0x0                   	// #0
    9f14:	mov	x3, #0x0                   	// #0
    9f18:	mov	w1, #0x23f                 	// #575
    9f1c:	str	x27, [sp, #64]
    9f20:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    9f24:	nop
    9f28:	sub	sp, sp, #0x2f0
    9f2c:	stp	x19, x20, [sp]
    9f30:	mov	x19, x1
    9f34:	add	x1, x0, #0xc
    9f38:	stp	x21, x22, [sp, #16]
    9f3c:	stp	x23, x24, [sp, #32]
    9f40:	stp	x25, x26, [sp, #48]
    9f44:	stp	x27, x28, [sp, #64]
    9f48:	str	x30, [sp, #80]
    9f4c:	stp	x2, x3, [sp, #96]
    9f50:	mov	w2, #0xffffffff            	// #-1
    9f54:	ldxr	w21, [x1]
    9f58:	stxr	w3, w2, [x1]
    9f5c:	cbnz	w3, 9f54 <__ubsan_default_options@@Base+0x1e8c>
    9f60:	dmb	ish
    9f64:	ldp	x26, x28, [x0, #16]
    9f68:	mov	w23, #0x0                   	// #0
    9f6c:	ldr	w20, [x0, #8]
    9f70:	ldr	x10, [x0]
    9f74:	ldrh	w1, [x26]
    9f78:	cbnz	w1, 9f84 <__ubsan_default_options@@Base+0x1ebc>
    9f7c:	ldrh	w8, [x26, #2]
    9f80:	and	w23, w8, #0x1
    9f84:	ldrh	w1, [x28]
    9f88:	cbnz	w1, 9f94 <__ubsan_default_options@@Base+0x1ecc>
    9f8c:	ldrh	w1, [x28, #2]
    9f90:	tbnz	w1, #0, a204 <__ubsan_default_options@@Base+0x213c>
    9f94:	mov	w1, w23
    9f98:	str	wzr, [sp, #116]
    9f9c:	ldrb	w0, [x0, #32]
    9fa0:	mov	w25, #0xa                   	// #10
    9fa4:	cmp	w0, #0x1
    9fa8:	b.eq	9fc0 <__ubsan_default_options@@Base+0x1ef8>  // b.none
    9fac:	cmp	w0, #0x2
    9fb0:	mov	w25, #0xb                   	// #11
    9fb4:	b.eq	9fc0 <__ubsan_default_options@@Base+0x1ef8>  // b.none
    9fb8:	mov	w25, #0x0                   	// #0
    9fbc:	cbz	w0, a210 <__ubsan_default_options@@Base+0x2148>
    9fc0:	ldrb	w0, [x19]
    9fc4:	cbnz	w0, a010 <__ubsan_default_options@@Base+0x1f48>
    9fc8:	cmn	w21, #0x1
    9fcc:	b.ne	9ff0 <__ubsan_default_options@@Base+0x1f28>  // b.any
    9fd0:	ldp	x19, x20, [sp]
    9fd4:	ldp	x21, x22, [sp, #16]
    9fd8:	ldp	x23, x24, [sp, #32]
    9fdc:	ldp	x25, x26, [sp, #48]
    9fe0:	ldp	x27, x28, [sp, #64]
    9fe4:	ldr	x30, [sp, #80]
    9fe8:	add	sp, sp, #0x2f0
    9fec:	ret
    9ff0:	ldr	x1, [x19, #8]
    9ff4:	mov	x2, x10
    9ff8:	mov	w0, w25
    9ffc:	str	x10, [sp, #120]
    a000:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    a004:	tst	w0, #0xff
    a008:	ldr	x10, [sp, #120]
    a00c:	b.ne	9fd0 <__ubsan_default_options@@Base+0x1f08>  // b.any
    a010:	mov	w22, #0x1                   	// #1
    a014:	str	w22, [sp, #320]
    a018:	str	x10, [sp, #328]
    a01c:	add	x24, sp, #0xf0
    a020:	str	w20, [sp, #336]
    a024:	mov	w3, w25
    a028:	str	w21, [sp, #340]
    a02c:	add	x2, sp, #0x80
    a030:	ldp	x6, x7, [sp, #320]
    a034:	stp	x6, x7, [sp, #128]
    a038:	mov	x0, x24
    a03c:	ldp	x4, x5, [sp, #336]
    a040:	stp	x4, x5, [sp, #144]
    a044:	add	x1, sp, #0xb0
    a048:	ldp	x4, x5, [x19]
    a04c:	str	x10, [sp, #120]
    a050:	ldr	x6, [sp, #352]
    a054:	str	x6, [sp, #160]
    a058:	ldr	x6, [x19, #16]
    a05c:	stp	x4, x5, [sp, #176]
    a060:	add	x27, sp, #0x140
    a064:	str	x6, [sp, #192]
    a068:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    a06c:	str	w22, [sp, #320]
    a070:	add	x3, sp, #0x160
    a074:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a078:	ldr	x10, [sp, #120]
    a07c:	add	x2, x2, #0x408
    a080:	str	x10, [sp, #328]
    a084:	mov	x1, x26
    a088:	stp	w20, w21, [x3, #-16]
    a08c:	mov	x0, x27
    a090:	stp	wzr, w25, [x3, #8]
    a094:	str	x2, [sp, #368]
    a098:	str	wzr, [sp, #640]
    a09c:	str	wzr, [sp, #648]
    a0a0:	str	xzr, [sp, #656]
    a0a4:	str	xzr, [sp, #664]
    a0a8:	str	wzr, [sp, #688]
    a0ac:	str	xzr, [sp, #696]
    a0b0:	str	xzr, [sp, #704]
    a0b4:	str	xzr, [sp, #728]
    a0b8:	str	wzr, [sp, #736]
    a0bc:	bl	7090 <__asan_backtrace_open@plt+0x660>
    a0c0:	ldr	x2, [sp, #96]
    a0c4:	add	x1, sp, #0xd0
    a0c8:	stp	x26, x2, [sp, #208]
    a0cc:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    a0d0:	ldrh	w1, [x26]
    a0d4:	cbnz	w1, a220 <__ubsan_default_options@@Base+0x2158>
    a0d8:	ldrh	w1, [x26, #2]
    a0dc:	ldr	w4, [x0, #320]
    a0e0:	asr	w1, w1, #1
    a0e4:	cmp	w4, #0x8
    a0e8:	lsl	w5, w22, w1
    a0ec:	b.eq	a240 <__ubsan_default_options@@Base+0x2178>  // b.none
    a0f0:	ubfiz	x3, x4, #5, #32
    a0f4:	add	w1, w4, #0x1
    a0f8:	add	x3, x3, #0x40
    a0fc:	str	w1, [x0, #320]
    a100:	add	x6, x0, x3
    a104:	mov	w19, #0x2                   	// #2
    a108:	cmp	w23, #0x0
    a10c:	adrp	x20, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a110:	str	w19, [x0, x3]
    a114:	add	x20, x20, #0x400
    a118:	stp	x5, xzr, [x6, #16]
    a11c:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    a120:	add	x25, x25, #0xd20
    a124:	csel	x5, x25, x20, ne  // ne = any
    a128:	cmp	w1, #0x8
    a12c:	b.eq	a240 <__ubsan_default_options@@Base+0x2178>  // b.none
    a130:	ubfiz	x1, x1, #5, #32
    a134:	add	w4, w4, #0x2
    a138:	add	x3, x1, #0x40
    a13c:	str	w4, [x0, #320]
    a140:	add	x4, x0, x3
    a144:	mov	x1, x28
    a148:	str	wzr, [x0, x3]
    a14c:	str	x5, [x4, #16]
    a150:	bl	7090 <__asan_backtrace_open@plt+0x660>
    a154:	ldr	x2, [sp, #104]
    a158:	add	x1, sp, #0xe0
    a15c:	stp	x28, x2, [sp, #224]
    a160:	bl	70e8 <__asan_backtrace_open@plt+0x6b8>
    a164:	mov	x1, x0
    a168:	ldrh	w2, [x28]
    a16c:	cbnz	w2, a220 <__ubsan_default_options@@Base+0x2158>
    a170:	ldrh	w0, [x28, #2]
    a174:	ldr	w3, [x1, #320]
    a178:	asr	w0, w0, #1
    a17c:	cmp	w3, #0x8
    a180:	lsl	w22, w22, w0
    a184:	b.eq	a240 <__ubsan_default_options@@Base+0x2178>  // b.none
    a188:	ubfiz	x2, x3, #5, #32
    a18c:	add	w0, w3, #0x1
    a190:	add	x2, x2, #0x40
    a194:	str	w0, [x1, #320]
    a198:	add	x5, x1, x2
    a19c:	ldr	w4, [sp, #116]
    a1a0:	str	w19, [x1, x2]
    a1a4:	cmp	w4, #0x0
    a1a8:	stp	x22, xzr, [x5, #16]
    a1ac:	csel	x4, x25, x20, ne  // ne = any
    a1b0:	cmp	w0, #0x8
    a1b4:	b.eq	a240 <__ubsan_default_options@@Base+0x2178>  // b.none
    a1b8:	ubfiz	x0, x0, #5, #32
    a1bc:	add	w3, w3, #0x2
    a1c0:	add	x2, x0, #0x40
    a1c4:	str	w3, [x1, #320]
    a1c8:	add	x3, x1, x2
    a1cc:	mov	x0, x27
    a1d0:	str	wzr, [x1, x2]
    a1d4:	str	x4, [x3, #16]
    a1d8:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a1dc:	mov	x0, x24
    a1e0:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    a1e4:	ldp	x19, x20, [sp]
    a1e8:	ldp	x21, x22, [sp, #16]
    a1ec:	ldp	x23, x24, [sp, #32]
    a1f0:	ldp	x25, x26, [sp, #48]
    a1f4:	ldp	x27, x28, [sp, #64]
    a1f8:	ldr	x30, [sp, #80]
    a1fc:	add	sp, sp, #0x2f0
    a200:	ret
    a204:	mov	w1, #0x1                   	// #1
    a208:	str	w1, [sp, #116]
    a20c:	b	9f9c <__ubsan_default_options@@Base+0x1ed4>
    a210:	cmp	w1, #0x0
    a214:	cset	w25, ne  // ne = any
    a218:	add	w25, w25, #0xa
    a21c:	b	9fc0 <__ubsan_default_options@@Base+0x1ef8>
    a220:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a224:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a228:	add	x2, x2, #0x78
    a22c:	add	x0, x0, #0x98
    a230:	mov	x4, #0x0                   	// #0
    a234:	mov	x3, #0x0                   	// #0
    a238:	mov	w1, #0x7b                  	// #123
    a23c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a240:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    a244:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    a248:	add	x2, x2, #0x8f8
    a24c:	add	x0, x0, #0x878
    a250:	mov	x4, #0x0                   	// #0
    a254:	mov	x3, #0x0                   	// #0
    a258:	mov	w1, #0xbf                  	// #191
    a25c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a260:	sub	sp, sp, #0x2c0
    a264:	stp	x19, x20, [sp]
    a268:	mov	x19, x0
    a26c:	ldrb	w0, [x0]
    a270:	stp	x21, x22, [sp, #16]
    a274:	sub	w0, w0, #0x4
    a278:	stp	x23, x24, [sp, #32]
    a27c:	and	w0, w0, #0xff
    a280:	cmp	w0, #0x1
    a284:	stp	x25, x26, [sp, #48]
    a288:	stp	x27, x28, [sp, #64]
    a28c:	ldr	x26, [x2, #8]
    a290:	str	x30, [sp, #80]
    a294:	b.hi	a584 <__ubsan_default_options@@Base+0x24bc>  // b.pmore
    a298:	mov	x28, x2
    a29c:	add	x0, x19, #0x14
    a2a0:	mov	x20, x1
    a2a4:	mov	w1, #0xffffffff            	// #-1
    a2a8:	ldxr	w21, [x0]
    a2ac:	stxr	w2, w1, [x0]
    a2b0:	cbnz	w2, a2a8 <__ubsan_default_options@@Base+0x21e0>
    a2b4:	dmb	ish
    a2b8:	ldrb	w0, [x28]
    a2bc:	ldr	w24, [x19, #16]
    a2c0:	ldr	x23, [x19, #8]
    a2c4:	cbnz	w0, a308 <__ubsan_default_options@@Base+0x2240>
    a2c8:	cmp	w21, w1
    a2cc:	b.ne	a2f0 <__ubsan_default_options@@Base+0x2228>  // b.any
    a2d0:	ldp	x19, x20, [sp]
    a2d4:	ldp	x21, x22, [sp, #16]
    a2d8:	ldp	x23, x24, [sp, #32]
    a2dc:	ldp	x25, x26, [sp, #48]
    a2e0:	ldp	x27, x28, [sp, #64]
    a2e4:	ldr	x30, [sp, #80]
    a2e8:	add	sp, sp, #0x2c0
    a2ec:	ret
    a2f0:	mov	x2, x23
    a2f4:	mov	x1, x26
    a2f8:	mov	w0, #0x19                  	// #25
    a2fc:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    a300:	tst	w0, #0xff
    a304:	b.ne	a2d0 <__ubsan_default_options@@Base+0x2208>  // b.any
    a308:	mov	w25, #0x1                   	// #1
    a30c:	str	w25, [sp, #272]
    a310:	str	x23, [sp, #280]
    a314:	add	x27, sp, #0xc0
    a318:	str	w24, [sp, #288]
    a31c:	mov	x0, x27
    a320:	str	w21, [sp, #292]
    a324:	add	x2, sp, #0x60
    a328:	ldp	x6, x7, [sp, #272]
    a32c:	stp	x6, x7, [sp, #96]
    a330:	add	x1, sp, #0x90
    a334:	ldp	x6, x7, [x28]
    a338:	mov	w3, #0x19                  	// #25
    a33c:	ldp	x4, x5, [sp, #288]
    a340:	stp	x4, x5, [sp, #112]
    a344:	add	x22, sp, #0x110
    a348:	ldr	x4, [x28, #16]
    a34c:	stp	x6, x7, [sp, #144]
    a350:	ldr	x8, [sp, #304]
    a354:	str	x8, [sp, #128]
    a358:	str	x4, [sp, #160]
    a35c:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    a360:	str	w25, [sp, #272]
    a364:	ldrb	w2, [x19]
    a368:	mov	x3, #0x1900000000          	// #107374182400
    a36c:	ldr	x1, [x19, #24]
    a370:	cmp	w2, #0x5
    a374:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a378:	add	x2, x2, #0x4c8
    a37c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a380:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a384:	add	x0, x0, #0x4b0
    a388:	add	x19, x19, #0x480
    a38c:	csel	x19, x19, x0, eq  // eq = none
    a390:	mov	x0, x22
    a394:	str	x23, [sp, #280]
    a398:	str	w24, [sp, #288]
    a39c:	str	w21, [sp, #292]
    a3a0:	stp	x3, x2, [sp, #312]
    a3a4:	str	wzr, [sp, #592]
    a3a8:	str	wzr, [sp, #600]
    a3ac:	str	xzr, [sp, #608]
    a3b0:	str	xzr, [sp, #616]
    a3b4:	str	wzr, [sp, #640]
    a3b8:	str	xzr, [sp, #648]
    a3bc:	str	xzr, [sp, #656]
    a3c0:	str	xzr, [sp, #680]
    a3c4:	str	wzr, [sp, #688]
    a3c8:	bl	7090 <__asan_backtrace_open@plt+0x660>
    a3cc:	mov	x1, x0
    a3d0:	ldr	w0, [x0, #320]
    a3d4:	cmp	w0, #0x8
    a3d8:	b.eq	a4f8 <__ubsan_default_options@@Base+0x2430>  // b.none
    a3dc:	ubfiz	x2, x0, #5, #32
    a3e0:	add	w0, w0, #0x1
    a3e4:	add	x2, x2, #0x40
    a3e8:	str	w0, [x1, #320]
    a3ec:	add	x3, x1, x2
    a3f0:	mov	x0, x22
    a3f4:	str	wzr, [x1, x2]
    a3f8:	str	x19, [x3, #16]
    a3fc:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a400:	mov	x0, x20
    a404:	bl	7070 <__asan_backtrace_open@plt+0x640>
    a408:	mov	x19, x0
    a40c:	adrp	x20, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a410:	add	x20, x20, #0x1c8
    a414:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a418:	mov	x3, #0x1                   	// #1
    a41c:	add	x2, x2, #0x220
    a420:	ldr	x1, [x19, #40]
    a424:	mov	w4, #0x3                   	// #3
    a428:	movk	x3, #0x19, lsl #32
    a42c:	mov	x0, x22
    a430:	cmp	x1, #0x0
    a434:	str	w4, [sp, #272]
    a438:	csel	x1, x20, x1, eq  // eq = none
    a43c:	str	xzr, [sp, #280]
    a440:	str	xzr, [sp, #288]
    a444:	stp	x19, x3, [sp, #304]
    a448:	str	x2, [sp, #320]
    a44c:	str	wzr, [sp, #336]
    a450:	str	x1, [sp, #352]
    a454:	str	w25, [sp, #592]
    a458:	str	wzr, [sp, #600]
    a45c:	str	xzr, [sp, #608]
    a460:	str	xzr, [sp, #616]
    a464:	str	wzr, [sp, #640]
    a468:	str	xzr, [sp, #648]
    a46c:	str	xzr, [sp, #656]
    a470:	str	xzr, [sp, #680]
    a474:	str	wzr, [sp, #688]
    a478:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a47c:	ldr	x25, [x19, #16]
    a480:	cmp	x25, #0x0
    a484:	csel	x25, x20, x25, eq  // eq = none
    a488:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    a48c:	str	xzr, [sp, #184]
    a490:	mov	x1, x26
    a494:	mov	x3, x22
    a498:	add	x2, sp, #0xb8
    a49c:	mov	x26, x20
    a4a0:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
    a4a4:	tst	w0, #0xff
    a4a8:	b.eq	a4b8 <__ubsan_default_options@@Base+0x23f0>  // b.none
    a4ac:	ldr	x26, [sp, #184]
    a4b0:	cmp	x26, #0x0
    a4b4:	csel	x26, x20, x26, eq  // eq = none
    a4b8:	mov	x1, x25
    a4bc:	mov	x0, x26
    a4c0:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    a4c4:	cbnz	w0, a518 <__ubsan_default_options@@Base+0x2450>
    a4c8:	mov	x0, x19
    a4cc:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    a4d0:	mov	x0, x27
    a4d4:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    a4d8:	ldp	x19, x20, [sp]
    a4dc:	ldp	x21, x22, [sp, #16]
    a4e0:	ldp	x23, x24, [sp, #32]
    a4e4:	ldp	x25, x26, [sp, #48]
    a4e8:	ldp	x27, x28, [sp, #64]
    a4ec:	ldr	x30, [sp, #80]
    a4f0:	add	sp, sp, #0x2c0
    a4f4:	ret
    a4f8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    a4fc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    a500:	add	x2, x2, #0x8f8
    a504:	add	x0, x0, #0x878
    a508:	mov	x4, #0x0                   	// #0
    a50c:	mov	x3, #0x0                   	// #0
    a510:	mov	w1, #0xbf                  	// #191
    a514:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a518:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a51c:	mov	x3, #0x1                   	// #1
    a520:	add	x1, x1, #0x508
    a524:	mov	w4, #0x1                   	// #1
    a528:	movk	x3, #0x19, lsl #32
    a52c:	mov	w2, #0x2                   	// #2
    a530:	mov	x0, x22
    a534:	str	w4, [sp, #272]
    a538:	str	x23, [sp, #280]
    a53c:	str	w24, [sp, #288]
    a540:	str	w21, [sp, #292]
    a544:	stp	x3, x1, [sp, #312]
    a548:	str	wzr, [sp, #336]
    a54c:	str	x26, [sp, #352]
    a550:	str	wzr, [sp, #368]
    a554:	str	x25, [sp, #384]
    a558:	str	w2, [sp, #592]
    a55c:	str	wzr, [sp, #600]
    a560:	str	xzr, [sp, #608]
    a564:	str	xzr, [sp, #616]
    a568:	str	wzr, [sp, #640]
    a56c:	str	xzr, [sp, #648]
    a570:	str	xzr, [sp, #656]
    a574:	str	xzr, [sp, #680]
    a578:	str	wzr, [sp, #688]
    a57c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a580:	b	a4c8 <__ubsan_default_options@@Base+0x2400>
    a584:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    a588:	sub	sp, sp, #0x2a0
    a58c:	stp	x19, x20, [sp]
    a590:	mov	x20, x2
    a594:	add	x2, x0, #0xc
    a598:	stp	x23, x24, [sp, #32]
    a59c:	mov	x24, x1
    a5a0:	mov	x19, x3
    a5a4:	mov	w3, #0xffffffff            	// #-1
    a5a8:	stp	x21, x22, [sp, #16]
    a5ac:	str	x30, [sp, #72]
    a5b0:	ldxr	w21, [x2]
    a5b4:	stxr	w1, w3, [x2]
    a5b8:	cbnz	w1, a5b0 <__ubsan_default_options@@Base+0x24e8>
    a5bc:	dmb	ish
    a5c0:	ldrb	w2, [x19]
    a5c4:	ldr	w23, [x0, #8]
    a5c8:	ldr	x22, [x0]
    a5cc:	cbnz	w2, a608 <__ubsan_default_options@@Base+0x2540>
    a5d0:	cmp	w21, w3
    a5d4:	b.ne	a5f0 <__ubsan_default_options@@Base+0x2528>  // b.any
    a5d8:	ldp	x19, x20, [sp]
    a5dc:	ldp	x21, x22, [sp, #16]
    a5e0:	ldp	x23, x24, [sp, #32]
    a5e4:	ldr	x30, [sp, #72]
    a5e8:	add	sp, sp, #0x2a0
    a5ec:	ret
    a5f0:	ldr	x1, [x19, #8]
    a5f4:	mov	x2, x22
    a5f8:	mov	w0, #0x2                   	// #2
    a5fc:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    a600:	tst	w0, #0xff
    a604:	b.ne	a5d8 <__ubsan_default_options@@Base+0x2510>  // b.any
    a608:	stp	x25, x26, [sp, #48]
    a60c:	mov	w25, #0x1                   	// #1
    a610:	add	x26, sp, #0xa0
    a614:	str	w25, [sp, #240]
    a618:	mov	x0, x26
    a61c:	str	x22, [sp, #248]
    a620:	add	x2, sp, #0x50
    a624:	str	w23, [sp, #256]
    a628:	add	x1, sp, #0x80
    a62c:	str	w21, [sp, #260]
    a630:	mov	w3, #0x2                   	// #2
    a634:	ldp	x6, x7, [sp, #240]
    a638:	stp	x6, x7, [sp, #80]
    a63c:	ldp	x6, x7, [x19]
    a640:	str	x27, [sp, #64]
    a644:	ldp	x4, x5, [sp, #256]
    a648:	stp	x4, x5, [sp, #96]
    a64c:	add	x27, sp, #0xf0
    a650:	ldr	x4, [x19, #16]
    a654:	stp	x6, x7, [sp, #128]
    a658:	ldr	x8, [sp, #272]
    a65c:	str	x8, [sp, #112]
    a660:	str	x4, [sp, #144]
    a664:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    a668:	mvn	x0, x24
    a66c:	mvn	x2, x20
    a670:	lsr	x0, x0, #63
    a674:	cmp	x0, x2, lsr #63
    a678:	mov	x0, x27
    a67c:	b.ne	a698 <__ubsan_default_options@@Base+0x25d0>  // b.any
    a680:	cmp	x24, x20
    a684:	b.ls	a720 <__ubsan_default_options@@Base+0x2658>  // b.plast
    a688:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a68c:	mov	x4, #0x200000000           	// #8589934592
    a690:	add	x1, x1, #0x540
    a694:	b	a6a4 <__ubsan_default_options@@Base+0x25dc>
    a698:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a69c:	add	x1, x1, #0x5b0
    a6a0:	mov	x4, #0x200000000           	// #8589934592
    a6a4:	mov	w2, #0x5                   	// #5
    a6a8:	mov	w3, #0x2                   	// #2
    a6ac:	str	w25, [sp, #240]
    a6b0:	str	x22, [sp, #248]
    a6b4:	str	w23, [sp, #256]
    a6b8:	str	w21, [sp, #260]
    a6bc:	stp	x4, x1, [sp, #280]
    a6c0:	str	w2, [sp, #304]
    a6c4:	str	x24, [sp, #320]
    a6c8:	str	w2, [sp, #336]
    a6cc:	str	x20, [sp, #352]
    a6d0:	str	w3, [sp, #560]
    a6d4:	str	wzr, [sp, #568]
    a6d8:	str	xzr, [sp, #576]
    a6dc:	str	xzr, [sp, #584]
    a6e0:	str	wzr, [sp, #608]
    a6e4:	str	xzr, [sp, #616]
    a6e8:	str	xzr, [sp, #624]
    a6ec:	str	xzr, [sp, #648]
    a6f0:	str	wzr, [sp, #656]
    a6f4:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a6f8:	mov	x0, x26
    a6fc:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    a700:	ldp	x19, x20, [sp]
    a704:	ldp	x21, x22, [sp, #16]
    a708:	ldp	x23, x24, [sp, #32]
    a70c:	ldp	x25, x26, [sp, #48]
    a710:	ldr	x27, [sp, #64]
    a714:	ldr	x30, [sp, #72]
    a718:	add	sp, sp, #0x2a0
    a71c:	ret
    a720:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a724:	mov	x4, #0x200000000           	// #8589934592
    a728:	add	x1, x1, #0x578
    a72c:	b	a6a4 <__ubsan_default_options@@Base+0x25dc>
    a730:	sub	sp, sp, #0x2f0
    a734:	mov	w3, #0xffffffff            	// #-1
    a738:	stp	x19, x20, [sp]
    a73c:	mov	x19, x0
    a740:	mov	x20, x1
    a744:	add	x0, x0, #0xc
    a748:	stp	x25, x26, [sp, #48]
    a74c:	mov	x25, x2
    a750:	stp	x21, x22, [sp, #16]
    a754:	stp	x23, x24, [sp, #32]
    a758:	stp	x27, x28, [sp, #64]
    a75c:	ldr	x24, [x2, #8]
    a760:	str	x30, [sp, #80]
    a764:	ldxr	w28, [x0]
    a768:	stxr	w1, w3, [x0]
    a76c:	cbnz	w1, a764 <__ubsan_default_options@@Base+0x269c>
    a770:	dmb	ish
    a774:	ldrb	w3, [x19, #24]
    a778:	mov	x0, #0x1                   	// #1
    a77c:	ldr	w22, [x19, #8]
    a780:	mov	w21, w0
    a784:	lsl	x27, x0, x3
    a788:	ldr	x23, [x19]
    a78c:	cbz	x20, a7a0 <__ubsan_default_options@@Base+0x26d8>
    a790:	sub	x0, x27, #0x1
    a794:	tst	x0, x20
    a798:	cset	w21, eq  // eq = none
    a79c:	add	w21, w21, #0x3
    a7a0:	ldrb	w0, [x25]
    a7a4:	cbnz	w0, a7f0 <__ubsan_default_options@@Base+0x2728>
    a7a8:	cmn	w28, #0x1
    a7ac:	b.ne	a7d0 <__ubsan_default_options@@Base+0x2708>  // b.any
    a7b0:	ldp	x19, x20, [sp]
    a7b4:	ldp	x21, x22, [sp, #16]
    a7b8:	ldp	x23, x24, [sp, #32]
    a7bc:	ldp	x25, x26, [sp, #48]
    a7c0:	ldp	x27, x28, [sp, #64]
    a7c4:	ldr	x30, [sp, #80]
    a7c8:	add	sp, sp, #0x2f0
    a7cc:	ret
    a7d0:	mov	x2, x23
    a7d4:	mov	x1, x24
    a7d8:	mov	w0, w21
    a7dc:	bl	7e20 <__asan_backtrace_open@plt+0x13f0>
    a7e0:	tst	w0, #0xff
    a7e4:	b.ne	a7b0 <__ubsan_default_options@@Base+0x26e8>  // b.any
    a7e8:	ldr	x0, [x19]
    a7ec:	b	a7f4 <__ubsan_default_options@@Base+0x272c>
    a7f0:	mov	x0, x23
    a7f4:	str	xzr, [sp, #104]
    a7f8:	mov	w26, #0x1                   	// #1
    a7fc:	cbz	x0, aa64 <__ubsan_default_options@@Base+0x299c>
    a800:	str	w26, [sp, #200]
    a804:	add	x24, sp, #0xf0
    a808:	str	x23, [sp, #208]
    a80c:	mov	x0, x24
    a810:	stp	w22, w28, [sp, #216]
    a814:	mov	w3, w21
    a818:	ldp	x6, x7, [sp, #200]
    a81c:	stp	x6, x7, [sp, #112]
    a820:	add	x2, sp, #0x70
    a824:	ldp	x6, x7, [x25]
    a828:	add	x1, sp, #0xa0
    a82c:	ldp	x4, x5, [sp, #216]
    a830:	stp	x4, x5, [sp, #128]
    a834:	ldr	x4, [x25, #16]
    a838:	stp	x6, x7, [sp, #160]
    a83c:	ldr	x5, [sp, #96]
    a840:	str	x5, [sp, #144]
    a844:	str	x4, [sp, #176]
    a848:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    a84c:	cmp	w21, #0x3
    a850:	b.eq	a99c <__ubsan_default_options@@Base+0x28d4>  // b.none
    a854:	cmp	w21, #0x4
    a858:	b.ne	a920 <__ubsan_default_options@@Base+0x2858>  // b.any
    a85c:	ldrb	w3, [x19, #25]
    a860:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
    a864:	add	x0, x0, #0x470
    a868:	add	x25, sp, #0x140
    a86c:	ldr	x1, [x19, #16]
    a870:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a874:	ldr	x5, [x0, x3, lsl #3]
    a878:	mov	x0, x25
    a87c:	ldr	x7, [sp, #96]
    a880:	add	x2, x2, #0x650
    a884:	mov	x6, #0x400000000           	// #17179869184
    a888:	mov	w3, #0x2                   	// #2
    a88c:	mov	w4, #0x5                   	// #5
    a890:	str	w26, [sp, #320]
    a894:	str	x23, [sp, #328]
    a898:	str	w22, [sp, #336]
    a89c:	str	w28, [sp, #340]
    a8a0:	stp	x7, x6, [sp, #352]
    a8a4:	str	x2, [sp, #368]
    a8a8:	str	wzr, [sp, #384]
    a8ac:	str	x5, [sp, #400]
    a8b0:	str	w4, [sp, #416]
    a8b4:	str	x20, [sp, #432]
    a8b8:	str	w3, [sp, #640]
    a8bc:	str	wzr, [sp, #648]
    a8c0:	str	xzr, [sp, #656]
    a8c4:	str	xzr, [sp, #664]
    a8c8:	str	wzr, [sp, #688]
    a8cc:	str	xzr, [sp, #696]
    a8d0:	str	xzr, [sp, #704]
    a8d4:	str	xzr, [sp, #728]
    a8d8:	str	wzr, [sp, #736]
    a8dc:	bl	7090 <__asan_backtrace_open@plt+0x660>
    a8e0:	mov	x0, x25
    a8e4:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    a8e8:	cbnz	x20, aa08 <__ubsan_default_options@@Base+0x2940>
    a8ec:	mov	x0, x24
    a8f0:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    a8f4:	ldr	x0, [sp, #104]
    a8f8:	cbz	x0, a7b0 <__ubsan_default_options@@Base+0x26e8>
    a8fc:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
    a900:	ldp	x19, x20, [sp]
    a904:	ldp	x21, x22, [sp, #16]
    a908:	ldp	x23, x24, [sp, #32]
    a90c:	ldp	x25, x26, [sp, #48]
    a910:	ldp	x27, x28, [sp, #64]
    a914:	ldr	x30, [sp, #80]
    a918:	add	sp, sp, #0x2f0
    a91c:	ret
    a920:	cmp	w21, #0x1
    a924:	b.eq	a948 <__ubsan_default_options@@Base+0x2880>  // b.none
    a928:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a92c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a930:	add	x2, x2, #0x690
    a934:	add	x0, x0, #0x380
    a938:	mov	x4, #0x0                   	// #0
    a93c:	mov	x3, #0x0                   	// #0
    a940:	mov	w1, #0x58                  	// #88
    a944:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    a948:	ldrb	w3, [x19, #25]
    a94c:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
    a950:	add	x0, x0, #0x470
    a954:	add	x25, sp, #0x140
    a958:	ldr	x5, [sp, #96]
    a95c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a960:	ldr	x3, [x0, x3, lsl #3]
    a964:	add	x2, x2, #0x5e8
    a968:	mov	x4, #0x100000000           	// #4294967296
    a96c:	mov	x0, x25
    a970:	str	w26, [sp, #320]
    a974:	str	x23, [sp, #328]
    a978:	str	w22, [sp, #336]
    a97c:	str	w28, [sp, #340]
    a980:	stp	x5, x4, [sp, #352]
    a984:	str	x2, [sp, #368]
    a988:	str	wzr, [sp, #384]
    a98c:	str	x3, [sp, #400]
    a990:	ldr	x1, [x19, #16]
    a994:	str	w21, [sp, #640]
    a998:	b	a8bc <__ubsan_default_options@@Base+0x27f4>
    a99c:	ldrb	w3, [x19, #25]
    a9a0:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
    a9a4:	add	x0, x0, #0x470
    a9a8:	add	x25, sp, #0x140
    a9ac:	ldr	x7, [sp, #96]
    a9b0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    a9b4:	ldr	x5, [x0, x3, lsl #3]
    a9b8:	add	x2, x2, #0x608
    a9bc:	mov	x6, #0x300000000           	// #12884901888
    a9c0:	mov	w4, #0x5                   	// #5
    a9c4:	mov	w3, #0x2                   	// #2
    a9c8:	mov	x0, x25
    a9cc:	str	w26, [sp, #320]
    a9d0:	str	x23, [sp, #328]
    a9d4:	str	w22, [sp, #336]
    a9d8:	str	w28, [sp, #340]
    a9dc:	stp	x7, x6, [sp, #352]
    a9e0:	str	x2, [sp, #368]
    a9e4:	str	wzr, [sp, #384]
    a9e8:	str	x5, [sp, #400]
    a9ec:	str	w4, [sp, #416]
    a9f0:	str	x20, [sp, #432]
    a9f4:	str	w3, [sp, #448]
    a9f8:	stp	x27, xzr, [sp, #464]
    a9fc:	ldr	x1, [x19, #16]
    aa00:	str	w21, [sp, #640]
    aa04:	b	a8bc <__ubsan_default_options@@Base+0x27f4>
    aa08:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    aa0c:	add	x1, x1, #0x6c0
    aa10:	mov	w3, #0x2                   	// #2
    aa14:	mov	w2, #0x1                   	// #1
    aa18:	mov	x0, x25
    aa1c:	str	w3, [sp, #320]
    aa20:	str	xzr, [sp, #328]
    aa24:	str	xzr, [sp, #336]
    aa28:	str	x20, [sp, #344]
    aa2c:	str	w2, [sp, #360]
    aa30:	str	w21, [sp, #364]
    aa34:	str	x1, [sp, #368]
    aa38:	str	wzr, [sp, #640]
    aa3c:	str	wzr, [sp, #648]
    aa40:	str	xzr, [sp, #656]
    aa44:	str	xzr, [sp, #664]
    aa48:	str	wzr, [sp, #688]
    aa4c:	str	xzr, [sp, #696]
    aa50:	str	xzr, [sp, #704]
    aa54:	str	xzr, [sp, #728]
    aa58:	str	wzr, [sp, #736]
    aa5c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    aa60:	b	a8ec <__ubsan_default_options@@Base+0x2824>
    aa64:	cbz	x24, aa88 <__ubsan_default_options@@Base+0x29c0>
    aa68:	sub	x0, x24, #0x4
    aa6c:	mov	x23, #0x0                   	// #0
    aa70:	bl	7070 <__asan_backtrace_open@plt+0x640>
    aa74:	mov	w28, #0x0                   	// #0
    aa78:	mov	w22, #0x0                   	// #0
    aa7c:	mov	w26, #0x3                   	// #3
    aa80:	stp	x0, x0, [sp, #96]
    aa84:	b	a800 <__ubsan_default_options@@Base+0x2738>
    aa88:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    aa8c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    aa90:	add	x2, x2, #0x20
    aa94:	add	x0, x0, #0x878
    aa98:	mov	x4, #0x0                   	// #0
    aa9c:	mov	x3, #0x0                   	// #0
    aaa0:	mov	w1, #0x2b                  	// #43
    aaa4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    aaa8:	mov	x4, x2
    aaac:	mov	x2, x0
    aab0:	ldrb	w0, [x4]
    aab4:	cbnz	w0, aad8 <__ubsan_default_options@@Base+0x2a10>
    aab8:	lsr	x1, x1, #32
    aabc:	mov	w0, #0x1                   	// #1
    aac0:	cmn	w1, #0x1
    aac4:	b.ne	aacc <__ubsan_default_options@@Base+0x2a04>  // b.any
    aac8:	ret
    aacc:	ldr	x1, [x4, #8]
    aad0:	mov	w0, w3
    aad4:	b	7e20 <__asan_backtrace_open@plt+0x13f0>
    aad8:	mov	w0, #0x0                   	// #0
    aadc:	ret

000000000000aae0 <__ubsan_handle_type_mismatch_v1@@Base>:
    aae0:	stp	x29, x30, [sp, #-80]!
    aae4:	mov	x29, sp
    aae8:	add	x2, x29, #0x10
    aaec:	stp	xzr, x30, [x29, #56]
    aaf0:	ldp	x4, x5, [x29, #56]
    aaf4:	stp	x4, x5, [x29, #16]
    aaf8:	str	x29, [x29, #32]
    aafc:	bl	a730 <__ubsan_default_options@@Base+0x2668>
    ab00:	ldp	x29, x30, [sp], #80
    ab04:	ret

000000000000ab08 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
    ab08:	stp	x29, x30, [sp, #-80]!
    ab0c:	mov	w3, #0x1                   	// #1
    ab10:	mov	x29, sp
    ab14:	add	x2, x29, #0x10
    ab18:	strb	w3, [x29, #56]
    ab1c:	stur	wzr, [x29, #57]
    ab20:	sturh	wzr, [x29, #61]
    ab24:	strb	wzr, [x29, #63]
    ab28:	str	x30, [x29, #64]
    ab2c:	str	x29, [x29, #32]
    ab30:	ldp	x4, x5, [x29, #56]
    ab34:	stp	x4, x5, [x29, #16]
    ab38:	bl	a730 <__ubsan_default_options@@Base+0x2668>
    ab3c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ab40 <__ubsan_handle_add_overflow@@Base>:
    ab40:	stp	x29, x30, [sp, #-80]!
    ab44:	mov	x4, x2
    ab48:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ab4c:	mov	x29, sp
    ab50:	ldr	x3, [x0, #16]
    ab54:	add	x5, x29, #0x10
    ab58:	stp	xzr, x30, [x29, #56]
    ab5c:	add	x2, x2, #0x6d8
    ab60:	ldp	x6, x7, [x29, #56]
    ab64:	stp	x6, x7, [x29, #16]
    ab68:	str	x29, [x29, #32]
    ab6c:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    ab70:	ldp	x29, x30, [sp], #80
    ab74:	ret

000000000000ab78 <__ubsan_handle_add_overflow_abort@@Base>:
    ab78:	stp	x29, x30, [sp, #-80]!
    ab7c:	mov	w6, #0x1                   	// #1
    ab80:	mov	x4, x2
    ab84:	mov	x29, sp
    ab88:	ldr	x3, [x0, #16]
    ab8c:	add	x5, x29, #0x10
    ab90:	strb	w6, [x29, #56]
    ab94:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ab98:	stur	wzr, [x29, #57]
    ab9c:	add	x2, x2, #0x6d8
    aba0:	sturh	wzr, [x29, #61]
    aba4:	strb	wzr, [x29, #63]
    aba8:	str	x30, [x29, #64]
    abac:	str	x29, [x29, #32]
    abb0:	ldp	x6, x7, [x29, #56]
    abb4:	stp	x6, x7, [x29, #16]
    abb8:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    abbc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000abc0 <__ubsan_handle_sub_overflow@@Base>:
    abc0:	stp	x29, x30, [sp, #-80]!
    abc4:	mov	x4, x2
    abc8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    abcc:	mov	x29, sp
    abd0:	ldr	x3, [x0, #16]
    abd4:	add	x5, x29, #0x10
    abd8:	stp	xzr, x30, [x29, #56]
    abdc:	add	x2, x2, #0x6e0
    abe0:	ldp	x6, x7, [x29, #56]
    abe4:	stp	x6, x7, [x29, #16]
    abe8:	str	x29, [x29, #32]
    abec:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    abf0:	ldp	x29, x30, [sp], #80
    abf4:	ret

000000000000abf8 <__ubsan_handle_sub_overflow_abort@@Base>:
    abf8:	stp	x29, x30, [sp, #-80]!
    abfc:	mov	w6, #0x1                   	// #1
    ac00:	mov	x4, x2
    ac04:	mov	x29, sp
    ac08:	ldr	x3, [x0, #16]
    ac0c:	add	x5, x29, #0x10
    ac10:	strb	w6, [x29, #56]
    ac14:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ac18:	stur	wzr, [x29, #57]
    ac1c:	add	x2, x2, #0x6e0
    ac20:	sturh	wzr, [x29, #61]
    ac24:	strb	wzr, [x29, #63]
    ac28:	str	x30, [x29, #64]
    ac2c:	str	x29, [x29, #32]
    ac30:	ldp	x6, x7, [x29, #56]
    ac34:	stp	x6, x7, [x29, #16]
    ac38:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    ac3c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ac40 <__ubsan_handle_mul_overflow@@Base>:
    ac40:	stp	x29, x30, [sp, #-80]!
    ac44:	mov	x4, x2
    ac48:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ac4c:	mov	x29, sp
    ac50:	ldr	x3, [x0, #16]
    ac54:	add	x5, x29, #0x10
    ac58:	stp	xzr, x30, [x29, #56]
    ac5c:	add	x2, x2, #0x6e8
    ac60:	ldp	x6, x7, [x29, #56]
    ac64:	stp	x6, x7, [x29, #16]
    ac68:	str	x29, [x29, #32]
    ac6c:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    ac70:	ldp	x29, x30, [sp], #80
    ac74:	ret

000000000000ac78 <__ubsan_handle_mul_overflow_abort@@Base>:
    ac78:	stp	x29, x30, [sp, #-80]!
    ac7c:	mov	w6, #0x1                   	// #1
    ac80:	mov	x4, x2
    ac84:	mov	x29, sp
    ac88:	ldr	x3, [x0, #16]
    ac8c:	add	x5, x29, #0x10
    ac90:	strb	w6, [x29, #56]
    ac94:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ac98:	stur	wzr, [x29, #57]
    ac9c:	add	x2, x2, #0x6e8
    aca0:	sturh	wzr, [x29, #61]
    aca4:	strb	wzr, [x29, #63]
    aca8:	str	x30, [x29, #64]
    acac:	str	x29, [x29, #32]
    acb0:	ldp	x6, x7, [x29, #56]
    acb4:	stp	x6, x7, [x29, #16]
    acb8:	bl	9908 <__ubsan_default_options@@Base+0x1840>
    acbc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000acc0 <__ubsan_handle_negate_overflow@@Base>:
    acc0:	stp	x29, x30, [sp, #-80]!
    acc4:	mov	x29, sp
    acc8:	add	x2, x29, #0x10
    accc:	stp	xzr, x30, [x29, #56]
    acd0:	ldp	x4, x5, [x29, #56]
    acd4:	stp	x4, x5, [x29, #16]
    acd8:	str	x29, [x29, #32]
    acdc:	bl	8418 <__ubsan_default_options@@Base+0x350>
    ace0:	ldp	x29, x30, [sp], #80
    ace4:	ret

000000000000ace8 <__ubsan_handle_negate_overflow_abort@@Base>:
    ace8:	stp	x29, x30, [sp, #-80]!
    acec:	mov	w3, #0x1                   	// #1
    acf0:	mov	x29, sp
    acf4:	add	x2, x29, #0x10
    acf8:	strb	w3, [x29, #56]
    acfc:	stur	wzr, [x29, #57]
    ad00:	sturh	wzr, [x29, #61]
    ad04:	strb	wzr, [x29, #63]
    ad08:	str	x30, [x29, #64]
    ad0c:	str	x29, [x29, #32]
    ad10:	ldp	x4, x5, [x29, #56]
    ad14:	stp	x4, x5, [x29, #16]
    ad18:	bl	8418 <__ubsan_default_options@@Base+0x350>
    ad1c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ad20 <__ubsan_handle_divrem_overflow@@Base>:
    ad20:	stp	x29, x30, [sp, #-80]!
    ad24:	mov	x29, sp
    ad28:	add	x3, x29, #0x10
    ad2c:	stp	xzr, x30, [x29, #56]
    ad30:	ldp	x4, x5, [x29, #56]
    ad34:	stp	x4, x5, [x29, #16]
    ad38:	str	x29, [x29, #32]
    ad3c:	bl	8928 <__ubsan_default_options@@Base+0x860>
    ad40:	ldp	x29, x30, [sp], #80
    ad44:	ret

000000000000ad48 <__ubsan_handle_divrem_overflow_abort@@Base>:
    ad48:	stp	x29, x30, [sp, #-80]!
    ad4c:	mov	w4, #0x1                   	// #1
    ad50:	mov	x29, sp
    ad54:	add	x3, x29, #0x10
    ad58:	strb	w4, [x29, #56]
    ad5c:	stur	wzr, [x29, #57]
    ad60:	sturh	wzr, [x29, #61]
    ad64:	strb	wzr, [x29, #63]
    ad68:	str	x30, [x29, #64]
    ad6c:	str	x29, [x29, #32]
    ad70:	ldp	x4, x5, [x29, #56]
    ad74:	stp	x4, x5, [x29, #16]
    ad78:	bl	8928 <__ubsan_default_options@@Base+0x860>
    ad7c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ad80 <__ubsan_handle_shift_out_of_bounds@@Base>:
    ad80:	stp	x29, x30, [sp, #-80]!
    ad84:	mov	x29, sp
    ad88:	add	x3, x29, #0x10
    ad8c:	stp	xzr, x30, [x29, #56]
    ad90:	ldp	x4, x5, [x29, #56]
    ad94:	stp	x4, x5, [x29, #16]
    ad98:	str	x29, [x29, #32]
    ad9c:	bl	9190 <__ubsan_default_options@@Base+0x10c8>
    ada0:	ldp	x29, x30, [sp], #80
    ada4:	ret

000000000000ada8 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
    ada8:	stp	x29, x30, [sp, #-80]!
    adac:	mov	w4, #0x1                   	// #1
    adb0:	mov	x29, sp
    adb4:	add	x3, x29, #0x10
    adb8:	strb	w4, [x29, #56]
    adbc:	stur	wzr, [x29, #57]
    adc0:	sturh	wzr, [x29, #61]
    adc4:	strb	wzr, [x29, #63]
    adc8:	str	x30, [x29, #64]
    adcc:	str	x29, [x29, #32]
    add0:	ldp	x4, x5, [x29, #56]
    add4:	stp	x4, x5, [x29, #16]
    add8:	bl	9190 <__ubsan_default_options@@Base+0x10c8>
    addc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ade0 <__ubsan_handle_out_of_bounds@@Base>:
    ade0:	stp	x29, x30, [sp, #-80]!
    ade4:	mov	x29, sp
    ade8:	add	x2, x29, #0x10
    adec:	stp	xzr, x30, [x29, #56]
    adf0:	ldp	x4, x5, [x29, #56]
    adf4:	stp	x4, x5, [x29, #16]
    adf8:	str	x29, [x29, #32]
    adfc:	bl	8648 <__ubsan_default_options@@Base+0x580>
    ae00:	ldp	x29, x30, [sp], #80
    ae04:	ret

000000000000ae08 <__ubsan_handle_out_of_bounds_abort@@Base>:
    ae08:	stp	x29, x30, [sp, #-80]!
    ae0c:	mov	w3, #0x1                   	// #1
    ae10:	mov	x29, sp
    ae14:	add	x2, x29, #0x10
    ae18:	strb	w3, [x29, #56]
    ae1c:	stur	wzr, [x29, #57]
    ae20:	sturh	wzr, [x29, #61]
    ae24:	strb	wzr, [x29, #63]
    ae28:	str	x30, [x29, #64]
    ae2c:	str	x29, [x29, #32]
    ae30:	ldp	x4, x5, [x29, #56]
    ae34:	stp	x4, x5, [x29, #16]
    ae38:	bl	8648 <__ubsan_default_options@@Base+0x580>
    ae3c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ae40 <__ubsan_handle_builtin_unreachable@@Base>:
    ae40:	stp	x29, x30, [sp, #-80]!
    ae44:	mov	w2, #0x1                   	// #1
    ae48:	mov	x29, sp
    ae4c:	add	x1, x29, #0x10
    ae50:	strb	w2, [x29, #56]
    ae54:	stur	wzr, [x29, #57]
    ae58:	sturh	wzr, [x29, #61]
    ae5c:	strb	wzr, [x29, #63]
    ae60:	str	x30, [x29, #64]
    ae64:	str	x29, [x29, #32]
    ae68:	ldp	x2, x3, [x29, #56]
    ae6c:	stp	x2, x3, [x29, #16]
    ae70:	bl	8e88 <__ubsan_default_options@@Base+0xdc0>
    ae74:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000ae78 <__ubsan_handle_missing_return@@Base>:
    ae78:	stp	x29, x30, [sp, #-80]!
    ae7c:	mov	w2, #0x1                   	// #1
    ae80:	mov	x29, sp
    ae84:	add	x1, x29, #0x10
    ae88:	strb	w2, [x29, #56]
    ae8c:	stur	wzr, [x29, #57]
    ae90:	sturh	wzr, [x29, #61]
    ae94:	strb	wzr, [x29, #63]
    ae98:	str	x30, [x29, #64]
    ae9c:	str	x29, [x29, #32]
    aea0:	ldp	x2, x3, [x29, #56]
    aea4:	stp	x2, x3, [x29, #16]
    aea8:	bl	8da8 <__ubsan_default_options@@Base+0xce0>
    aeac:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000aeb0 <__ubsan_handle_vla_bound_not_positive@@Base>:
    aeb0:	stp	x29, x30, [sp, #-80]!
    aeb4:	mov	x29, sp
    aeb8:	add	x2, x29, #0x10
    aebc:	stp	xzr, x30, [x29, #56]
    aec0:	ldp	x4, x5, [x29, #56]
    aec4:	stp	x4, x5, [x29, #16]
    aec8:	str	x29, [x29, #32]
    aecc:	bl	87b8 <__ubsan_default_options@@Base+0x6f0>
    aed0:	ldp	x29, x30, [sp], #80
    aed4:	ret

000000000000aed8 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
    aed8:	stp	x29, x30, [sp, #-80]!
    aedc:	mov	w3, #0x1                   	// #1
    aee0:	mov	x29, sp
    aee4:	add	x2, x29, #0x10
    aee8:	strb	w3, [x29, #56]
    aeec:	stur	wzr, [x29, #57]
    aef0:	sturh	wzr, [x29, #61]
    aef4:	strb	wzr, [x29, #63]
    aef8:	str	x30, [x29, #64]
    aefc:	str	x29, [x29, #32]
    af00:	ldp	x4, x5, [x29, #56]
    af04:	stp	x4, x5, [x29, #16]
    af08:	bl	87b8 <__ubsan_default_options@@Base+0x6f0>
    af0c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000af10 <__ubsan_handle_float_cast_overflow@@Base>:
    af10:	stp	x29, x30, [sp, #-80]!
    af14:	mov	x29, sp
    af18:	add	x2, x29, #0x10
    af1c:	stp	xzr, x30, [x29, #56]
    af20:	ldp	x4, x5, [x29, #56]
    af24:	stp	x4, x5, [x29, #16]
    af28:	str	x29, [x29, #32]
    af2c:	bl	8f68 <__ubsan_default_options@@Base+0xea0>
    af30:	ldp	x29, x30, [sp], #80
    af34:	ret

000000000000af38 <__ubsan_handle_float_cast_overflow_abort@@Base>:
    af38:	stp	x29, x30, [sp, #-80]!
    af3c:	mov	w3, #0x1                   	// #1
    af40:	mov	x29, sp
    af44:	add	x2, x29, #0x10
    af48:	strb	w3, [x29, #56]
    af4c:	stur	wzr, [x29, #57]
    af50:	sturh	wzr, [x29, #61]
    af54:	strb	wzr, [x29, #63]
    af58:	str	x30, [x29, #64]
    af5c:	str	x29, [x29, #32]
    af60:	ldp	x4, x5, [x29, #56]
    af64:	stp	x4, x5, [x29, #16]
    af68:	bl	8f68 <__ubsan_default_options@@Base+0xea0>
    af6c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000af70 <__ubsan_handle_load_invalid_value@@Base>:
    af70:	stp	x29, x30, [sp, #-80]!
    af74:	mov	x29, sp
    af78:	add	x2, x29, #0x10
    af7c:	stp	xzr, x30, [x29, #56]
    af80:	ldp	x4, x5, [x29, #56]
    af84:	stp	x4, x5, [x29, #16]
    af88:	str	x29, [x29, #32]
    af8c:	bl	8bf0 <__ubsan_default_options@@Base+0xb28>
    af90:	ldp	x29, x30, [sp], #80
    af94:	ret

000000000000af98 <__ubsan_handle_load_invalid_value_abort@@Base>:
    af98:	stp	x29, x30, [sp, #-80]!
    af9c:	mov	w3, #0x1                   	// #1
    afa0:	mov	x29, sp
    afa4:	add	x2, x29, #0x10
    afa8:	strb	w3, [x29, #56]
    afac:	stur	wzr, [x29, #57]
    afb0:	sturh	wzr, [x29, #61]
    afb4:	strb	wzr, [x29, #63]
    afb8:	str	x30, [x29, #64]
    afbc:	str	x29, [x29, #32]
    afc0:	ldp	x4, x5, [x29, #56]
    afc4:	stp	x4, x5, [x29, #16]
    afc8:	bl	8bf0 <__ubsan_default_options@@Base+0xb28>
    afcc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000afd0 <__ubsan_handle_implicit_conversion@@Base>:
    afd0:	stp	x29, x30, [sp, #-80]!
    afd4:	mov	x6, x1
    afd8:	mov	x3, x2
    afdc:	mov	x29, sp
    afe0:	add	x1, x29, #0x10
    afe4:	mov	x2, x6
    afe8:	stp	xzr, x30, [x29, #56]
    afec:	ldp	x4, x5, [x29, #56]
    aff0:	stp	x4, x5, [x29, #16]
    aff4:	str	x29, [x29, #32]
    aff8:	bl	9f28 <__ubsan_default_options@@Base+0x1e60>
    affc:	ldp	x29, x30, [sp], #80
    b000:	ret
    b004:	nop

000000000000b008 <__ubsan_handle_implicit_conversion_abort@@Base>:
    b008:	stp	x29, x30, [sp, #-80]!
    b00c:	mov	w4, #0x1                   	// #1
    b010:	mov	x3, x2
    b014:	mov	x29, sp
    b018:	mov	x2, x1
    b01c:	add	x1, x29, #0x10
    b020:	strb	w4, [x29, #56]
    b024:	stur	wzr, [x29, #57]
    b028:	sturh	wzr, [x29, #61]
    b02c:	strb	wzr, [x29, #63]
    b030:	str	x30, [x29, #64]
    b034:	str	x29, [x29, #32]
    b038:	ldp	x4, x5, [x29, #56]
    b03c:	stp	x4, x5, [x29, #16]
    b040:	bl	9f28 <__ubsan_default_options@@Base+0x1e60>
    b044:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b048 <__ubsan_handle_invalid_builtin@@Base>:
    b048:	stp	x29, x30, [sp, #-80]!
    b04c:	mov	w1, #0x1                   	// #1
    b050:	mov	x29, sp
    b054:	strb	w1, [x29, #56]
    b058:	add	x1, x29, #0x10
    b05c:	stur	wzr, [x29, #57]
    b060:	sturh	wzr, [x29, #61]
    b064:	strb	wzr, [x29, #63]
    b068:	str	x30, [x29, #64]
    b06c:	str	x29, [x29, #32]
    b070:	ldp	x2, x3, [x29, #56]
    b074:	stp	x2, x3, [x29, #16]
    b078:	bl	9608 <__ubsan_default_options@@Base+0x1540>
    b07c:	ldp	x29, x30, [sp], #80
    b080:	ret
    b084:	nop

000000000000b088 <__ubsan_handle_invalid_builtin_abort@@Base>:
    b088:	stp	x29, x30, [sp, #-80]!
    b08c:	mov	w2, #0x1                   	// #1
    b090:	mov	x29, sp
    b094:	add	x1, x29, #0x10
    b098:	strb	w2, [x29, #56]
    b09c:	stur	wzr, [x29, #57]
    b0a0:	sturh	wzr, [x29, #61]
    b0a4:	strb	wzr, [x29, #63]
    b0a8:	str	x30, [x29, #64]
    b0ac:	str	x29, [x29, #32]
    b0b0:	ldp	x2, x3, [x29, #56]
    b0b4:	stp	x2, x3, [x29, #16]
    b0b8:	bl	9608 <__ubsan_default_options@@Base+0x1540>
    b0bc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b0c0 <__ubsan_handle_function_type_mismatch@@Base>:
    b0c0:	stp	x29, x30, [sp, #-80]!
    b0c4:	mov	x29, sp
    b0c8:	add	x2, x29, #0x10
    b0cc:	stp	xzr, x30, [x29, #56]
    b0d0:	ldp	x4, x5, [x29, #56]
    b0d4:	stp	x4, x5, [x29, #16]
    b0d8:	str	x29, [x29, #32]
    b0dc:	bl	9720 <__ubsan_default_options@@Base+0x1658>
    b0e0:	ldp	x29, x30, [sp], #80
    b0e4:	ret

000000000000b0e8 <__ubsan_handle_function_type_mismatch_abort@@Base>:
    b0e8:	stp	x29, x30, [sp, #-80]!
    b0ec:	mov	w3, #0x1                   	// #1
    b0f0:	mov	x29, sp
    b0f4:	add	x2, x29, #0x10
    b0f8:	strb	w3, [x29, #56]
    b0fc:	stur	wzr, [x29, #57]
    b100:	sturh	wzr, [x29, #61]
    b104:	strb	wzr, [x29, #63]
    b108:	str	x30, [x29, #64]
    b10c:	str	x29, [x29, #32]
    b110:	ldp	x4, x5, [x29, #56]
    b114:	stp	x4, x5, [x29, #16]
    b118:	bl	9720 <__ubsan_default_options@@Base+0x1658>
    b11c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b120 <__ubsan_handle_nonnull_return_v1@@Base>:
    b120:	stp	x29, x30, [sp, #-80]!
    b124:	mov	w3, #0x1                   	// #1
    b128:	mov	x29, sp
    b12c:	add	x2, x29, #0x10
    b130:	stp	xzr, x30, [x29, #56]
    b134:	ldp	x4, x5, [x29, #56]
    b138:	stp	x4, x5, [x29, #16]
    b13c:	str	x29, [x29, #32]
    b140:	bl	9d28 <__ubsan_default_options@@Base+0x1c60>
    b144:	ldp	x29, x30, [sp], #80
    b148:	ret
    b14c:	nop

000000000000b150 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
    b150:	stp	x29, x30, [sp, #-80]!
    b154:	mov	w3, #0x1                   	// #1
    b158:	mov	x29, sp
    b15c:	add	x2, x29, #0x10
    b160:	strb	w3, [x29, #56]
    b164:	stur	wzr, [x29, #57]
    b168:	sturh	wzr, [x29, #61]
    b16c:	strb	wzr, [x29, #63]
    b170:	str	x30, [x29, #64]
    b174:	str	x29, [x29, #32]
    b178:	ldp	x4, x5, [x29, #56]
    b17c:	stp	x4, x5, [x29, #16]
    b180:	bl	9d28 <__ubsan_default_options@@Base+0x1c60>
    b184:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b188 <__ubsan_handle_nullability_return_v1@@Base>:
    b188:	stp	x29, x30, [sp, #-80]!
    b18c:	mov	w3, #0x0                   	// #0
    b190:	mov	x29, sp
    b194:	add	x2, x29, #0x10
    b198:	stp	xzr, x30, [x29, #56]
    b19c:	ldp	x4, x5, [x29, #56]
    b1a0:	stp	x4, x5, [x29, #16]
    b1a4:	str	x29, [x29, #32]
    b1a8:	bl	9d28 <__ubsan_default_options@@Base+0x1c60>
    b1ac:	ldp	x29, x30, [sp], #80
    b1b0:	ret
    b1b4:	nop

000000000000b1b8 <__ubsan_handle_nullability_return_v1_abort@@Base>:
    b1b8:	stp	x29, x30, [sp, #-80]!
    b1bc:	mov	w3, #0x1                   	// #1
    b1c0:	mov	x29, sp
    b1c4:	add	x2, x29, #0x10
    b1c8:	strb	w3, [x29, #56]
    b1cc:	mov	w3, #0x0                   	// #0
    b1d0:	stur	wzr, [x29, #57]
    b1d4:	sturh	wzr, [x29, #61]
    b1d8:	strb	wzr, [x29, #63]
    b1dc:	str	x30, [x29, #64]
    b1e0:	str	x29, [x29, #32]
    b1e4:	ldp	x4, x5, [x29, #56]
    b1e8:	stp	x4, x5, [x29, #16]
    b1ec:	bl	9d28 <__ubsan_default_options@@Base+0x1c60>
    b1f0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b1f4:	nop

000000000000b1f8 <__ubsan_handle_nonnull_arg@@Base>:
    b1f8:	stp	x29, x30, [sp, #-80]!
    b1fc:	mov	w2, #0x1                   	// #1
    b200:	mov	x29, sp
    b204:	add	x1, x29, #0x10
    b208:	stp	xzr, x30, [x29, #56]
    b20c:	ldp	x4, x5, [x29, #56]
    b210:	stp	x4, x5, [x29, #16]
    b214:	str	x29, [x29, #32]
    b218:	bl	9b48 <__ubsan_default_options@@Base+0x1a80>
    b21c:	ldp	x29, x30, [sp], #80
    b220:	ret
    b224:	nop

000000000000b228 <__ubsan_handle_nonnull_arg_abort@@Base>:
    b228:	stp	x29, x30, [sp, #-80]!
    b22c:	mov	w2, #0x1                   	// #1
    b230:	mov	x29, sp
    b234:	add	x1, x29, #0x10
    b238:	strb	w2, [x29, #56]
    b23c:	stur	wzr, [x29, #57]
    b240:	sturh	wzr, [x29, #61]
    b244:	strb	wzr, [x29, #63]
    b248:	str	x30, [x29, #64]
    b24c:	str	x29, [x29, #32]
    b250:	ldp	x4, x5, [x29, #56]
    b254:	stp	x4, x5, [x29, #16]
    b258:	bl	9b48 <__ubsan_default_options@@Base+0x1a80>
    b25c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b260 <__ubsan_handle_nullability_arg@@Base>:
    b260:	stp	x29, x30, [sp, #-80]!
    b264:	mov	w2, #0x0                   	// #0
    b268:	mov	x29, sp
    b26c:	add	x1, x29, #0x10
    b270:	stp	xzr, x30, [x29, #56]
    b274:	ldp	x4, x5, [x29, #56]
    b278:	stp	x4, x5, [x29, #16]
    b27c:	str	x29, [x29, #32]
    b280:	bl	9b48 <__ubsan_default_options@@Base+0x1a80>
    b284:	ldp	x29, x30, [sp], #80
    b288:	ret
    b28c:	nop

000000000000b290 <__ubsan_handle_nullability_arg_abort@@Base>:
    b290:	stp	x29, x30, [sp, #-80]!
    b294:	mov	w2, #0x1                   	// #1
    b298:	mov	x29, sp
    b29c:	add	x1, x29, #0x10
    b2a0:	strb	w2, [x29, #56]
    b2a4:	mov	w2, #0x0                   	// #0
    b2a8:	stur	wzr, [x29, #57]
    b2ac:	sturh	wzr, [x29, #61]
    b2b0:	strb	wzr, [x29, #63]
    b2b4:	str	x30, [x29, #64]
    b2b8:	str	x29, [x29, #32]
    b2bc:	ldp	x4, x5, [x29, #56]
    b2c0:	stp	x4, x5, [x29, #16]
    b2c4:	bl	9b48 <__ubsan_default_options@@Base+0x1a80>
    b2c8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b2cc:	nop

000000000000b2d0 <__ubsan_handle_pointer_overflow@@Base>:
    b2d0:	stp	x29, x30, [sp, #-80]!
    b2d4:	mov	x29, sp
    b2d8:	add	x3, x29, #0x10
    b2dc:	stp	xzr, x30, [x29, #56]
    b2e0:	ldp	x4, x5, [x29, #56]
    b2e4:	stp	x4, x5, [x29, #16]
    b2e8:	str	x29, [x29, #32]
    b2ec:	bl	a588 <__ubsan_default_options@@Base+0x24c0>
    b2f0:	ldp	x29, x30, [sp], #80
    b2f4:	ret

000000000000b2f8 <__ubsan_handle_pointer_overflow_abort@@Base>:
    b2f8:	stp	x29, x30, [sp, #-80]!
    b2fc:	mov	w4, #0x1                   	// #1
    b300:	mov	x29, sp
    b304:	add	x3, x29, #0x10
    b308:	strb	w4, [x29, #56]
    b30c:	stur	wzr, [x29, #57]
    b310:	sturh	wzr, [x29, #61]
    b314:	strb	wzr, [x29, #63]
    b318:	str	x30, [x29, #64]
    b31c:	str	x29, [x29, #32]
    b320:	ldp	x4, x5, [x29, #56]
    b324:	stp	x4, x5, [x29, #16]
    b328:	bl	a588 <__ubsan_default_options@@Base+0x24c0>
    b32c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000b330 <__ubsan_handle_cfi_bad_icall@@Base>:
    b330:	stp	x29, x30, [sp, #-112]!
    b334:	mov	x3, x0
    b338:	mov	w6, #0x4                   	// #4
    b33c:	mov	x29, sp
    b340:	add	x2, x29, #0x10
    b344:	add	x0, x29, #0x50
    b348:	stp	xzr, x30, [x29, #56]
    b34c:	ldp	x4, x5, [x29, #56]
    b350:	stp	x4, x5, [x29, #16]
    b354:	ldp	x4, x5, [x3]
    b358:	strb	w6, [x29, #80]
    b35c:	ldr	x3, [x3, #16]
    b360:	str	x29, [x29, #32]
    b364:	stur	wzr, [x29, #81]
    b368:	sturh	wzr, [x29, #85]
    b36c:	strb	wzr, [x29, #87]
    b370:	stp	x4, x5, [x29, #88]
    b374:	str	x3, [x29, #104]
    b378:	bl	a260 <__ubsan_default_options@@Base+0x2198>
    b37c:	ldp	x29, x30, [sp], #112
    b380:	ret
    b384:	nop

000000000000b388 <__ubsan_handle_cfi_bad_icall_abort@@Base>:
    b388:	stp	x29, x30, [sp, #-112]!
    b38c:	mov	x3, x0
    b390:	mov	w4, #0x1                   	// #1
    b394:	mov	x29, sp
    b398:	add	x2, x29, #0x10
    b39c:	add	x0, x29, #0x50
    b3a0:	mov	w6, #0x4                   	// #4
    b3a4:	strb	w4, [x29, #56]
    b3a8:	stur	wzr, [x29, #57]
    b3ac:	sturh	wzr, [x29, #61]
    b3b0:	strb	wzr, [x29, #63]
    b3b4:	str	x30, [x29, #64]
    b3b8:	ldp	x4, x5, [x3]
    b3bc:	strb	w6, [x29, #80]
    b3c0:	ldp	x8, x9, [x29, #56]
    b3c4:	stur	wzr, [x29, #81]
    b3c8:	ldr	x3, [x3, #16]
    b3cc:	stp	x8, x9, [x29, #16]
    b3d0:	str	x29, [x29, #32]
    b3d4:	sturh	wzr, [x29, #85]
    b3d8:	strb	wzr, [x29, #87]
    b3dc:	stp	x4, x5, [x29, #88]
    b3e0:	str	x3, [x29, #104]
    b3e4:	bl	a260 <__ubsan_default_options@@Base+0x2198>
    b3e8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b3ec:	nop

000000000000b3f0 <__ubsan_handle_cfi_check_fail@@Base>:
    b3f0:	stp	x29, x30, [sp, #-80]!
    b3f4:	mov	x29, sp
    b3f8:	ldrb	w3, [x0]
    b3fc:	sub	w3, w3, #0x4
    b400:	stp	xzr, x30, [x29, #56]
    b404:	and	w3, w3, #0xff
    b408:	cmp	w3, #0x1
    b40c:	b.ls	b434 <__ubsan_handle_cfi_check_fail@@Base+0x44>  // b.plast
    b410:	ldp	x4, x5, [x29, #56]
    b414:	cmp	x2, #0x0
    b418:	add	x3, x29, #0x10
    b41c:	cset	w2, ne  // ne = any
    b420:	stp	x4, x5, [x29, #16]
    b424:	str	x29, [x29, #32]
    b428:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b42c:	ldp	x29, x30, [sp], #80
    b430:	ret
    b434:	ldp	x4, x5, [x29, #56]
    b438:	add	x2, x29, #0x10
    b43c:	stp	x4, x5, [x29, #16]
    b440:	str	x29, [x29, #32]
    b444:	bl	a260 <__ubsan_default_options@@Base+0x2198>
    b448:	ldp	x29, x30, [sp], #80
    b44c:	ret

000000000000b450 <__ubsan_handle_cfi_check_fail_abort@@Base>:
    b450:	stp	x29, x30, [sp, #-80]!
    b454:	mov	w3, #0x1                   	// #1
    b458:	mov	x29, sp
    b45c:	strb	w3, [x29, #56]
    b460:	ldrb	w3, [x0]
    b464:	stur	wzr, [x29, #57]
    b468:	sub	w3, w3, #0x4
    b46c:	sturh	wzr, [x29, #61]
    b470:	strb	wzr, [x29, #63]
    b474:	and	w3, w3, #0xff
    b478:	str	x30, [x29, #64]
    b47c:	cmp	w3, #0x1
    b480:	b.ls	b4a4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x54>  // b.plast
    b484:	ldp	x4, x5, [x29, #56]
    b488:	cmp	x2, #0x0
    b48c:	add	x3, x29, #0x10
    b490:	cset	w2, ne  // ne = any
    b494:	stp	x4, x5, [x29, #16]
    b498:	str	x29, [x29, #32]
    b49c:	bl	6840 <__ubsan_handle_cfi_bad_type@plt>
    b4a0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b4a4:	ldp	x4, x5, [x29, #56]
    b4a8:	add	x2, x29, #0x10
    b4ac:	stp	x4, x5, [x29, #16]
    b4b0:	str	x29, [x29, #32]
    b4b4:	bl	a260 <__ubsan_default_options@@Base+0x2198>
    b4b8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b4bc:	nop
    b4c0:	sub	sp, sp, #0x2e0
    b4c4:	stp	x19, x20, [sp]
    b4c8:	mov	x19, x0
    b4cc:	mov	x20, x1
    b4d0:	mov	x0, x1
    b4d4:	stp	x21, x22, [sp, #16]
    b4d8:	mov	x21, x3
    b4dc:	ldr	x1, [x19, #24]
    b4e0:	str	x30, [sp, #80]
    b4e4:	bl	c3a8 <__ubsan_get_current_report_data@@Base+0x358>
    b4e8:	tst	w0, #0xff
    b4ec:	b.eq	b508 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb8>  // b.none
    b4f0:	mov	w0, #0x0                   	// #0
    b4f4:	ldp	x19, x20, [sp]
    b4f8:	ldp	x21, x22, [sp, #16]
    b4fc:	ldr	x30, [sp, #80]
    b500:	add	sp, sp, #0x2e0
    b504:	ret
    b508:	add	x8, sp, #0xc8
    b50c:	mov	x0, x20
    b510:	stp	x23, x24, [sp, #32]
    b514:	bl	c150 <__ubsan_get_current_report_data@@Base+0x100>
    b518:	ldp	x22, x23, [sp, #200]
    b51c:	cbz	x22, b530 <__ubsan_handle_cfi_check_fail_abort@@Base+0xe0>
    b520:	mov	x0, x22
    b524:	bl	7dc8 <__asan_backtrace_open@plt+0x1398>
    b528:	tst	w0, #0xff
    b52c:	b.ne	b72c <__ubsan_handle_cfi_check_fail_abort@@Base+0x2dc>  // b.any
    b530:	add	x0, x19, #0xc
    b534:	mov	w1, #0xffffffff            	// #-1
    b538:	stp	x25, x26, [sp, #48]
    b53c:	stp	x27, x28, [sp, #64]
    b540:	ldxr	w24, [x0]
    b544:	stxr	w2, w1, [x0]
    b548:	cbnz	w2, b540 <__ubsan_handle_cfi_check_fail_abort@@Base+0xf0>
    b54c:	dmb	ish
    b550:	ldp	x4, x5, [x21]
    b554:	mov	x1, #0x0                   	// #0
    b558:	ldr	w25, [x19, #8]
    b55c:	add	x26, sp, #0xa0
    b560:	ldr	x6, [x21, #16]
    b564:	mov	x2, x26
    b568:	ldr	x27, [x19]
    b56c:	bfxil	x1, x25, #0, #32
    b570:	mov	w3, #0x18                  	// #24
    b574:	stp	x4, x5, [sp, #160]
    b578:	bfi	x1, x24, #32, #32
    b57c:	mov	x0, x27
    b580:	str	x6, [sp, #176]
    b584:	bl	aaa8 <__ubsan_default_options@@Base+0x29e0>
    b588:	tst	w0, #0xff
    b58c:	b.ne	b71c <__ubsan_handle_cfi_check_fail_abort@@Base+0x2cc>  // b.any
    b590:	mov	w28, #0x1                   	// #1
    b594:	str	w28, [sp, #304]
    b598:	str	x27, [sp, #312]
    b59c:	add	x8, sp, #0xe0
    b5a0:	str	w25, [sp, #320]
    b5a4:	mov	x0, x8
    b5a8:	str	w24, [sp, #324]
    b5ac:	mov	x1, x26
    b5b0:	ldp	x6, x7, [sp, #304]
    b5b4:	stp	x6, x7, [sp, #112]
    b5b8:	add	x2, sp, #0x70
    b5bc:	ldp	x6, x7, [x21]
    b5c0:	mov	w3, #0x18                  	// #24
    b5c4:	ldp	x4, x5, [sp, #320]
    b5c8:	stp	x4, x5, [sp, #128]
    b5cc:	add	x26, sp, #0x130
    b5d0:	ldr	x5, [x21, #16]
    b5d4:	str	x8, [sp, #104]
    b5d8:	ldr	x9, [sp, #336]
    b5dc:	str	x9, [sp, #144]
    b5e0:	stp	x6, x7, [sp, #160]
    b5e4:	str	x5, [sp, #176]
    b5e8:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    b5ec:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    b5f0:	ldrb	w7, [x19, #32]
    b5f4:	ldr	x1, [x19, #16]
    b5f8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b5fc:	ldr	x3, [x3, #3760]
    b600:	add	x2, x2, #0x7c8
    b604:	mov	w4, #0x2                   	// #2
    b608:	mov	x6, #0x1800000000          	// #103079215104
    b60c:	mov	w5, #0x5                   	// #5
    b610:	mov	x0, x26
    b614:	ldr	x3, [x3, x7, lsl #3]
    b618:	str	w28, [sp, #304]
    b61c:	str	x27, [sp, #312]
    b620:	str	w25, [sp, #320]
    b624:	str	w24, [sp, #324]
    b628:	stp	x6, x2, [sp, #344]
    b62c:	str	wzr, [sp, #368]
    b630:	str	x3, [sp, #384]
    b634:	str	w5, [sp, #400]
    b638:	str	x20, [sp, #416]
    b63c:	str	w4, [sp, #624]
    b640:	str	wzr, [sp, #632]
    b644:	str	xzr, [sp, #640]
    b648:	str	xzr, [sp, #648]
    b64c:	str	wzr, [sp, #672]
    b650:	str	xzr, [sp, #680]
    b654:	str	xzr, [sp, #688]
    b658:	str	xzr, [sp, #712]
    b65c:	str	wzr, [sp, #720]
    b660:	bl	7090 <__asan_backtrace_open@plt+0x660>
    b664:	mov	x0, x26
    b668:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    b66c:	add	x1, x20, #0x8
    b670:	mov	w4, #0x2                   	// #2
    b674:	ldr	x8, [sp, #104]
    b678:	cbz	x22, b790 <__ubsan_handle_cfi_check_fail_abort@@Base+0x340>
    b67c:	str	x8, [sp, #104]
    b680:	cbnz	x23, b734 <__ubsan_handle_cfi_check_fail_abort@@Base+0x2e4>
    b684:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b688:	mov	x5, #0x1                   	// #1
    b68c:	mov	x0, x26
    b690:	add	x2, x2, #0x8a0
    b694:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b698:	movk	x5, #0x18, lsl #32
    b69c:	add	x3, x3, #0x888
    b6a0:	str	w4, [sp, #304]
    b6a4:	str	xzr, [sp, #312]
    b6a8:	str	xzr, [sp, #320]
    b6ac:	str	x20, [sp, #328]
    b6b0:	stp	x5, x3, [sp, #344]
    b6b4:	str	w28, [sp, #368]
    b6b8:	str	x22, [sp, #384]
    b6bc:	str	w28, [sp, #624]
    b6c0:	str	w4, [sp, #632]
    b6c4:	str	xzr, [sp, #640]
    b6c8:	str	xzr, [sp, #648]
    b6cc:	str	x20, [sp, #656]
    b6d0:	str	w4, [sp, #672]
    b6d4:	str	xzr, [sp, #680]
    b6d8:	str	xzr, [sp, #688]
    b6dc:	str	x1, [sp, #696]
    b6e0:	str	x2, [sp, #712]
    b6e4:	str	w28, [sp, #720]
    b6e8:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    b6ec:	ldr	x8, [sp, #104]
    b6f0:	mov	x0, x8
    b6f4:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    b6f8:	mov	w0, #0x1                   	// #1
    b6fc:	ldp	x19, x20, [sp]
    b700:	ldp	x21, x22, [sp, #16]
    b704:	ldp	x23, x24, [sp, #32]
    b708:	ldp	x25, x26, [sp, #48]
    b70c:	ldp	x27, x28, [sp, #64]
    b710:	ldr	x30, [sp, #80]
    b714:	add	sp, sp, #0x2e0
    b718:	ret
    b71c:	ldp	x23, x24, [sp, #32]
    b720:	ldp	x25, x26, [sp, #48]
    b724:	ldp	x27, x28, [sp, #64]
    b728:	b	b4f0 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa0>
    b72c:	ldp	x23, x24, [sp, #32]
    b730:	b	b4f0 <__ubsan_handle_cfi_check_fail_abort@@Base+0xa0>
    b734:	mov	x7, #0x1                   	// #1
    b738:	sub	x9, x20, x23
    b73c:	ldr	x6, [sp, #216]
    b740:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b744:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b748:	add	x3, x3, #0x8b0
    b74c:	movk	x7, #0x18, lsl #32
    b750:	mov	w5, #0x3                   	// #3
    b754:	mov	x0, x26
    b758:	add	x2, x2, #0x8f8
    b75c:	str	w4, [sp, #304]
    b760:	str	xzr, [sp, #312]
    b764:	str	xzr, [sp, #320]
    b768:	str	x9, [sp, #328]
    b76c:	stp	x7, x3, [sp, #344]
    b770:	str	w4, [sp, #368]
    b774:	stp	x23, xzr, [sp, #384]
    b778:	str	w28, [sp, #400]
    b77c:	str	x22, [sp, #416]
    b780:	str	w28, [sp, #432]
    b784:	str	x6, [sp, #448]
    b788:	str	w5, [sp, #624]
    b78c:	b	b6c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x270>
    b790:	add	x23, x23, #0x100, lsl #12
    b794:	cmp	x23, #0x200, lsl #12
    b798:	b.ls	b7e0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x390>  // b.plast
    b79c:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b7a0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b7a4:	mov	x0, x26
    b7a8:	add	x3, x3, #0x830
    b7ac:	add	x2, x2, #0x870
    b7b0:	str	x8, [sp, #104]
    b7b4:	mov	x5, #0x1                   	// #1
    b7b8:	str	w4, [sp, #304]
    b7bc:	movk	x5, #0x18, lsl #32
    b7c0:	str	xzr, [sp, #312]
    b7c4:	str	xzr, [sp, #320]
    b7c8:	str	x20, [sp, #328]
    b7cc:	stp	x5, x3, [sp, #344]
    b7d0:	str	w28, [sp, #368]
    b7d4:	str	xzr, [sp, #384]
    b7d8:	str	w28, [sp, #624]
    b7dc:	b	b6c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x270>
    b7e0:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b7e4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b7e8:	mov	x0, x26
    b7ec:	add	x3, x3, #0x808
    b7f0:	add	x2, x2, #0x820
    b7f4:	b	b7b4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x364>

000000000000b7f8 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
    b7f8:	stp	x29, x30, [sp, #-80]!
    b7fc:	mov	x29, sp
    b800:	add	x3, x29, #0x10
    b804:	stp	xzr, x30, [x29, #56]
    b808:	ldp	x4, x5, [x29, #56]
    b80c:	stp	x4, x5, [x29, #16]
    b810:	str	x29, [x29, #32]
    b814:	bl	b4c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
    b818:	ldp	x29, x30, [sp], #80
    b81c:	ret

000000000000b820 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
    b820:	stp	x29, x30, [sp, #-80]!
    b824:	mov	x29, sp
    b828:	add	x3, x29, #0x10
    b82c:	stp	xzr, x30, [x29, #56]
    b830:	ldp	x4, x5, [x29, #56]
    b834:	stp	x4, x5, [x29, #16]
    b838:	str	x29, [x29, #32]
    b83c:	bl	b4c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
    b840:	tst	w0, #0xff
    b844:	b.ne	b850 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x30>  // b.any
    b848:	ldp	x29, x30, [sp], #80
    b84c:	ret
    b850:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    b854:	nop

000000000000b858 <__ubsan_handle_cfi_bad_type@@Base>:
    b858:	sub	sp, sp, #0x2d0
    b85c:	stp	x19, x20, [sp]
    b860:	mov	x20, x3
    b864:	and	w19, w2, #0xff
    b868:	stp	x27, x28, [sp, #64]
    b86c:	mov	x27, x0
    b870:	add	x0, x0, #0x14
    b874:	stp	x21, x22, [sp, #16]
    b878:	mov	x21, x1
    b87c:	mov	w1, #0xffffffff            	// #-1
    b880:	stp	x23, x24, [sp, #32]
    b884:	stp	x25, x26, [sp, #48]
    b888:	str	x30, [sp, #80]
    b88c:	ldxr	w22, [x0]
    b890:	stxr	w2, w1, [x0]
    b894:	cbnz	w2, b88c <__ubsan_handle_cfi_bad_type@@Base+0x34>
    b898:	dmb	ish
    b89c:	ldp	x4, x5, [x20]
    b8a0:	mov	x1, #0x0                   	// #0
    b8a4:	ldr	w23, [x27, #16]
    b8a8:	add	x26, sp, #0x90
    b8ac:	ldr	x6, [x20, #16]
    b8b0:	mov	x2, x26
    b8b4:	ldr	x24, [x27, #8]
    b8b8:	bfxil	x1, x23, #0, #32
    b8bc:	mov	w3, #0x19                  	// #25
    b8c0:	stp	x4, x5, [sp, #144]
    b8c4:	bfi	x1, x22, #32, #32
    b8c8:	mov	x0, x24
    b8cc:	str	x6, [sp, #160]
    b8d0:	bl	aaa8 <__ubsan_default_options@@Base+0x29e0>
    b8d4:	tst	w0, #0xff
    b8d8:	b.ne	bb08 <__ubsan_handle_cfi_bad_type@@Base+0x2b0>  // b.any
    b8dc:	mov	w0, #0x1                   	// #1
    b8e0:	str	w0, [sp, #288]
    b8e4:	str	x24, [sp, #296]
    b8e8:	add	x25, sp, #0xd0
    b8ec:	str	w23, [sp, #304]
    b8f0:	mov	x1, x26
    b8f4:	str	w22, [sp, #308]
    b8f8:	add	x2, sp, #0x60
    b8fc:	ldp	x8, x9, [x20]
    b900:	mov	x0, x25
    b904:	ldp	x4, x5, [sp, #288]
    b908:	stp	x4, x5, [sp, #96]
    b90c:	mov	w3, #0x19                  	// #25
    b910:	ldp	x6, x7, [sp, #304]
    b914:	mov	x26, #0x0                   	// #0
    b918:	ldr	x4, [x20, #16]
    b91c:	stp	x6, x7, [sp, #112]
    b920:	ldr	x10, [sp, #320]
    b924:	str	x10, [sp, #128]
    b928:	stp	x8, x9, [sp, #144]
    b92c:	str	x4, [sp, #160]
    b930:	bl	7bb8 <__asan_backtrace_open@plt+0x1188>
    b934:	cbnz	w19, bb58 <__ubsan_handle_cfi_bad_type@@Base+0x300>
    b938:	ldrb	w0, [x27]
    b93c:	cmp	w0, #0x2
    b940:	b.eq	bc2c <__ubsan_handle_cfi_bad_type@@Base+0x3d4>  // b.none
    b944:	b.hi	bb28 <__ubsan_handle_cfi_bad_type@@Base+0x2d0>  // b.pmore
    b948:	cmp	w0, #0x0
    b94c:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b950:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b954:	add	x19, x19, #0x948
    b958:	add	x0, x0, #0x960
    b95c:	csel	x19, x19, x0, ne  // ne = any
    b960:	ldr	x1, [x27, #24]
    b964:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    b968:	add	x2, x2, #0x998
    b96c:	mov	x3, #0x1900000000          	// #107374182400
    b970:	add	x27, sp, #0x120
    b974:	mov	w28, #0x1                   	// #1
    b978:	mov	x0, x27
    b97c:	str	w28, [sp, #288]
    b980:	str	x24, [sp, #296]
    b984:	str	w23, [sp, #304]
    b988:	str	w22, [sp, #308]
    b98c:	stp	x3, x2, [sp, #328]
    b990:	str	wzr, [sp, #608]
    b994:	str	wzr, [sp, #616]
    b998:	str	xzr, [sp, #624]
    b99c:	str	xzr, [sp, #632]
    b9a0:	str	wzr, [sp, #656]
    b9a4:	str	xzr, [sp, #664]
    b9a8:	str	xzr, [sp, #672]
    b9ac:	str	xzr, [sp, #696]
    b9b0:	str	wzr, [sp, #704]
    b9b4:	bl	7090 <__asan_backtrace_open@plt+0x660>
    b9b8:	ldr	w3, [x0, #320]
    b9bc:	mov	x1, x0
    b9c0:	cmp	w3, #0x8
    b9c4:	b.eq	bc0c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
    b9c8:	ubfiz	x2, x3, #5, #32
    b9cc:	add	w0, w3, #0x1
    b9d0:	add	x2, x2, #0x40
    b9d4:	str	w0, [x1, #320]
    b9d8:	add	x4, x1, x2
    b9dc:	cmp	w0, #0x8
    b9e0:	str	wzr, [x1, x2]
    b9e4:	str	x19, [x4, #16]
    b9e8:	b.eq	bc0c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
    b9ec:	ubfiz	x0, x0, #5, #32
    b9f0:	add	w3, w3, #0x2
    b9f4:	add	x2, x0, #0x40
    b9f8:	str	w3, [x1, #320]
    b9fc:	add	x3, x1, x2
    ba00:	mov	w4, #0x5                   	// #5
    ba04:	mov	x0, x27
    ba08:	str	w4, [x1, x2]
    ba0c:	str	x21, [x3, #16]
    ba10:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    ba14:	cbz	x26, bbd8 <__ubsan_handle_cfi_bad_type@@Base+0x380>
    ba18:	mov	x2, #0x1                   	// #1
    ba1c:	mov	x0, x27
    ba20:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ba24:	mov	w3, #0x2                   	// #2
    ba28:	add	x1, x1, #0x9f8
    ba2c:	movk	x2, #0x19, lsl #32
    ba30:	str	w3, [sp, #288]
    ba34:	str	xzr, [sp, #296]
    ba38:	str	xzr, [sp, #304]
    ba3c:	str	x21, [sp, #312]
    ba40:	stp	x2, x1, [sp, #328]
    ba44:	str	w28, [sp, #352]
    ba48:	str	x26, [sp, #368]
    ba4c:	str	w28, [sp, #608]
    ba50:	str	wzr, [sp, #616]
    ba54:	add	x26, sp, #0xb0
    ba58:	str	xzr, [sp, #624]
    ba5c:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ba60:	str	xzr, [sp, #632]
    ba64:	add	x19, x19, #0x1c8
    ba68:	str	wzr, [sp, #656]
    ba6c:	str	xzr, [sp, #664]
    ba70:	str	xzr, [sp, #672]
    ba74:	str	xzr, [sp, #696]
    ba78:	str	wzr, [sp, #704]
    ba7c:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    ba80:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    ba84:	str	xzr, [sp, #176]
    ba88:	mov	x1, x21
    ba8c:	mov	x2, x26
    ba90:	mov	x3, x27
    ba94:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
    ba98:	tst	w0, #0xff
    ba9c:	b.eq	bab4 <__ubsan_handle_cfi_bad_type@@Base+0x25c>  // b.none
    baa0:	ldr	x19, [sp, #176]
    baa4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    baa8:	add	x0, x0, #0x1c8
    baac:	cmp	x19, #0x0
    bab0:	csel	x19, x0, x19, eq  // eq = none
    bab4:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
    bab8:	str	xzr, [sp, #176]
    babc:	ldr	x1, [x20, #8]
    bac0:	mov	x2, x26
    bac4:	mov	x3, x27
    bac8:	adrp	x20, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bacc:	add	x20, x20, #0x1c8
    bad0:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
    bad4:	tst	w0, #0xff
    bad8:	b.eq	baf0 <__ubsan_handle_cfi_bad_type@@Base+0x298>  // b.none
    badc:	ldr	x20, [sp, #176]
    bae0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bae4:	add	x0, x0, #0x1c8
    bae8:	cmp	x20, #0x0
    baec:	csel	x20, x0, x20, eq  // eq = none
    baf0:	mov	x1, x19
    baf4:	mov	x0, x20
    baf8:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    bafc:	cbnz	w0, bb6c <__ubsan_handle_cfi_bad_type@@Base+0x314>
    bb00:	mov	x0, x25
    bb04:	bl	7c20 <__asan_backtrace_open@plt+0x11f0>
    bb08:	ldp	x19, x20, [sp]
    bb0c:	ldp	x21, x22, [sp, #16]
    bb10:	ldp	x23, x24, [sp, #32]
    bb14:	ldp	x25, x26, [sp, #48]
    bb18:	ldp	x27, x28, [sp, #64]
    bb1c:	ldr	x30, [sp, #80]
    bb20:	add	sp, sp, #0x2d0
    bb24:	ret
    bb28:	cmp	w0, #0x5
    bb2c:	b.hi	bb44 <__ubsan_handle_cfi_bad_type@@Base+0x2ec>  // b.pmore
    bb30:	cmp	w0, #0x3
    bb34:	b.ne	bc38 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>  // b.any
    bb38:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bb3c:	add	x19, x19, #0x918
    bb40:	b	b960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bb44:	cmp	w0, #0x6
    bb48:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bb4c:	add	x19, x19, #0x970
    bb50:	csel	x19, x19, xzr, eq  // eq = none
    bb54:	b	b960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bb58:	add	x8, sp, #0xb8
    bb5c:	mov	x0, x21
    bb60:	bl	c598 <__ubsan_get_current_report_data@@Base+0x548>
    bb64:	ldr	x26, [sp, #184]
    bb68:	b	b938 <__ubsan_handle_cfi_bad_type@@Base+0xe0>
    bb6c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bb70:	mov	x3, #0x1                   	// #1
    bb74:	add	x1, x1, #0xa10
    bb78:	mov	w4, #0x1                   	// #1
    bb7c:	movk	x3, #0x19, lsl #32
    bb80:	mov	w2, #0x2                   	// #2
    bb84:	mov	x0, x27
    bb88:	str	w4, [sp, #288]
    bb8c:	str	x24, [sp, #296]
    bb90:	str	w23, [sp, #304]
    bb94:	str	w22, [sp, #308]
    bb98:	stp	x3, x1, [sp, #328]
    bb9c:	str	wzr, [sp, #352]
    bba0:	str	x20, [sp, #368]
    bba4:	str	wzr, [sp, #384]
    bba8:	str	x19, [sp, #400]
    bbac:	str	w2, [sp, #608]
    bbb0:	str	wzr, [sp, #616]
    bbb4:	str	xzr, [sp, #624]
    bbb8:	str	xzr, [sp, #632]
    bbbc:	str	wzr, [sp, #656]
    bbc0:	str	xzr, [sp, #664]
    bbc4:	str	xzr, [sp, #672]
    bbc8:	str	xzr, [sp, #696]
    bbcc:	str	wzr, [sp, #704]
    bbd0:	bl	7228 <__asan_backtrace_open@plt+0x7f8>
    bbd4:	b	bb00 <__ubsan_handle_cfi_bad_type@@Base+0x2a8>
    bbd8:	mov	x2, #0x1                   	// #1
    bbdc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bbe0:	mov	w3, #0x2                   	// #2
    bbe4:	add	x1, x1, #0x9e8
    bbe8:	movk	x2, #0x19, lsl #32
    bbec:	mov	x0, x27
    bbf0:	str	w3, [sp, #288]
    bbf4:	str	xzr, [sp, #296]
    bbf8:	str	xzr, [sp, #304]
    bbfc:	str	x21, [sp, #312]
    bc00:	stp	x2, x1, [sp, #328]
    bc04:	str	wzr, [sp, #608]
    bc08:	b	ba50 <__ubsan_handle_cfi_bad_type@@Base+0x1f8>
    bc0c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bc10:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bc14:	add	x2, x2, #0x8f8
    bc18:	add	x0, x0, #0x878
    bc1c:	mov	x4, #0x0                   	// #0
    bc20:	mov	x3, #0x0                   	// #0
    bc24:	mov	w1, #0xbf                  	// #191
    bc28:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bc2c:	adrp	x19, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bc30:	add	x19, x19, #0x930
    bc34:	b	b960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
    bc38:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    bc3c:	nop
    bc40:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bc44:	add	x0, x0, #0xa40
    bc48:	ret
    bc4c:	nop
    bc50:	stp	x19, x20, [sp, #-32]!
    bc54:	adrp	x19, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    bc58:	add	x0, x19, #0xe68
    bc5c:	mov	w2, #0x1                   	// #1
    bc60:	str	x30, [sp, #24]
    bc64:	ldxrb	w1, [x0]
    bc68:	stxrb	w3, w2, [x0]
    bc6c:	cbnz	w3, bc64 <__ubsan_handle_cfi_bad_type@@Base+0x40c>
    bc70:	dmb	ish
    bc74:	tst	w1, #0xff
    bc78:	b.eq	bc80 <__ubsan_handle_cfi_bad_type@@Base+0x428>  // b.none
    bc7c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    bc80:	add	x20, x19, #0xe68
    bc84:	ldrb	w0, [x20, #1]
    bc88:	cbz	w0, bca0 <__ubsan_handle_cfi_bad_type@@Base+0x448>
    bc8c:	dmb	ish
    bc90:	strb	wzr, [x19, #3688]
    bc94:	ldr	x30, [sp, #24]
    bc98:	ldp	x19, x20, [sp], #32
    bc9c:	ret
    bca0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    bca4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bca8:	add	x1, x1, #0xa40
    bcac:	str	x21, [sp, #16]
    bcb0:	ldr	x0, [x0, #4024]
    bcb4:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    bcb8:	str	x1, [x0]
    bcbc:	bl	fd10 <__sancov_default_options@@Base+0x3360>
    bcc0:	bl	8220 <__ubsan_default_options@@Base+0x158>
    bcc4:	ldr	x21, [x21, #4056]
    bcc8:	ldr	x0, [x21, #40]
    bccc:	bl	69e0 <__sanitizer_set_report_path@plt>
    bcd0:	bl	19f98 <__sanitizer_set_report_fd@@Base+0x66c8>
    bcd4:	ldrb	w0, [x21, #161]
    bcd8:	ldr	x1, [x21, #168]
    bcdc:	bl	107b8 <__sanitizer_sandbox_on_notify@@Base+0x140>
    bce0:	bl	7d58 <__asan_backtrace_open@plt+0x1328>
    bce4:	mov	w0, #0x1                   	// #1
    bce8:	strb	w0, [x20, #1]
    bcec:	ldr	x21, [sp, #16]
    bcf0:	dmb	ish
    bcf4:	strb	wzr, [x19, #3688]
    bcf8:	ldr	x30, [sp, #24]
    bcfc:	ldp	x19, x20, [sp], #32
    bd00:	ret
    bd04:	nop
    bd08:	stp	x19, x20, [sp, #-32]!
    bd0c:	adrp	x19, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    bd10:	add	x0, x19, #0xe68
    bd14:	mov	w2, #0x1                   	// #1
    bd18:	str	x30, [sp, #24]
    bd1c:	ldxrb	w1, [x0]
    bd20:	stxrb	w3, w2, [x0]
    bd24:	cbnz	w3, bd1c <__ubsan_handle_cfi_bad_type@@Base+0x4c4>
    bd28:	dmb	ish
    bd2c:	tst	w1, #0xff
    bd30:	b.eq	bd38 <__ubsan_handle_cfi_bad_type@@Base+0x4e0>  // b.none
    bd34:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    bd38:	add	x20, x19, #0xe68
    bd3c:	ldrb	w0, [x20, #1]
    bd40:	cbz	w0, bd58 <__ubsan_handle_cfi_bad_type@@Base+0x500>
    bd44:	dmb	ish
    bd48:	strb	wzr, [x19, #3688]
    bd4c:	ldr	x30, [sp, #24]
    bd50:	ldp	x19, x20, [sp], #32
    bd54:	ret
    bd58:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    bd5c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    bd60:	add	x1, x1, #0xa40
    bd64:	str	x21, [sp, #16]
    bd68:	ldr	x0, [x0, #4024]
    bd6c:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    bd70:	str	x1, [x0]
    bd74:	bl	fd10 <__sancov_default_options@@Base+0x3360>
    bd78:	bl	8220 <__ubsan_default_options@@Base+0x158>
    bd7c:	ldr	x21, [x21, #4056]
    bd80:	ldr	x0, [x21, #40]
    bd84:	bl	69e0 <__sanitizer_set_report_path@plt>
    bd88:	bl	19f98 <__sanitizer_set_report_fd@@Base+0x66c8>
    bd8c:	ldrb	w0, [x21, #161]
    bd90:	ldr	x1, [x21, #168]
    bd94:	bl	107b8 <__sanitizer_sandbox_on_notify@@Base+0x140>
    bd98:	bl	7d58 <__asan_backtrace_open@plt+0x1328>
    bd9c:	mov	w0, #0x1                   	// #1
    bda0:	strb	w0, [x20, #1]
    bda4:	ldr	x21, [sp, #16]
    bda8:	dmb	ish
    bdac:	strb	wzr, [x19, #3688]
    bdb0:	ldr	x30, [sp, #24]
    bdb4:	ldp	x19, x20, [sp], #32
    bdb8:	ret
    bdbc:	nop
    bdc0:	stp	x19, x20, [sp, #-32]!
    bdc4:	adrp	x19, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    bdc8:	add	x0, x19, #0xe68
    bdcc:	mov	w2, #0x1                   	// #1
    bdd0:	str	x30, [sp, #16]
    bdd4:	ldxrb	w1, [x0]
    bdd8:	stxrb	w3, w2, [x0]
    bddc:	cbnz	w3, bdd4 <__ubsan_handle_cfi_bad_type@@Base+0x57c>
    bde0:	dmb	ish
    bde4:	tst	w1, #0xff
    bde8:	b.eq	bdf0 <__ubsan_handle_cfi_bad_type@@Base+0x598>  // b.none
    bdec:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    bdf0:	add	x20, x19, #0xe68
    bdf4:	ldrb	w0, [x20, #1]
    bdf8:	cbz	w0, be10 <__ubsan_handle_cfi_bad_type@@Base+0x5b8>
    bdfc:	dmb	ish
    be00:	strb	wzr, [x19, #3688]
    be04:	ldr	x30, [sp, #16]
    be08:	ldp	x19, x20, [sp], #32
    be0c:	ret
    be10:	bl	7d58 <__asan_backtrace_open@plt+0x1328>
    be14:	mov	w0, #0x1                   	// #1
    be18:	strb	w0, [x20, #1]
    be1c:	dmb	ish
    be20:	strb	wzr, [x19, #3688]
    be24:	ldr	x30, [sp, #16]
    be28:	ldp	x19, x20, [sp], #32
    be2c:	ret
    be30:	stp	x19, x20, [sp, #-32]!
    be34:	mov	x20, x0
    be38:	mov	w19, #0x0                   	// #0
    be3c:	stp	x21, x30, [sp, #16]
    be40:	mov	w21, #0x1                   	// #1
    be44:	nop
    be48:	cmp	w19, #0x9
    be4c:	b.gt	be88 <__ubsan_handle_cfi_bad_type@@Base+0x630>
    be50:	ldrb	w0, [x20]
    be54:	tst	w0, #0xff
    be58:	b.ne	be74 <__ubsan_handle_cfi_bad_type@@Base+0x61c>  // b.any
    be5c:	ldxrb	w0, [x20]
    be60:	stxrb	w1, w21, [x20]
    be64:	cbnz	w1, be5c <__ubsan_handle_cfi_bad_type@@Base+0x604>
    be68:	dmb	ish
    be6c:	tst	w0, #0xff
    be70:	b.eq	be7c <__ubsan_handle_cfi_bad_type@@Base+0x624>  // b.none
    be74:	add	w19, w19, #0x1
    be78:	b	be48 <__ubsan_handle_cfi_bad_type@@Base+0x5f0>
    be7c:	ldp	x21, x30, [sp, #16]
    be80:	ldp	x19, x20, [sp], #32
    be84:	ret
    be88:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
    be8c:	b	be50 <__ubsan_handle_cfi_bad_type@@Base+0x5f8>

000000000000be90 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
    be90:	adrp	x1, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    be94:	str	x0, [x1, #3696]
    be98:	ret
    be9c:	nop

000000000000bea0 <__ubsan_on_report@@Base>:
    bea0:	ret
    bea4:	nop
    bea8:	stp	x19, x20, [sp, #-80]!
    beac:	add	x20, x0, #0x10
    beb0:	mov	x19, x0
    beb4:	stp	x21, x22, [sp, #16]
    beb8:	stp	x23, x24, [sp, #32]
    bebc:	stp	x25, x26, [sp, #48]
    bec0:	str	x30, [sp, #64]
    bec4:	stp	x1, x2, [x0]
    bec8:	ldr	x0, [x3, #24]
    becc:	stp	xzr, xzr, [x20, #8]
    bed0:	str	xzr, [x19, #16]
    bed4:	adds	x21, x0, #0x1
    bed8:	b.ne	bf00 <__ubsan_on_report@@Base+0x60>  // b.any
    bedc:	str	xzr, [x20, #24]
    bee0:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bee4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bee8:	add	x2, x2, #0x9a0
    beec:	add	x0, x0, #0x9b8
    bef0:	mov	x4, #0x0                   	// #0
    bef4:	mov	x3, #0x0                   	// #0
    bef8:	mov	w1, #0x1b6                 	// #438
    befc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    bf00:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    bf04:	mov	x22, x3
    bf08:	ldr	x23, [x25, #4016]
    bf0c:	ldr	x0, [x23]
    bf10:	cbz	x0, bfc8 <__ubsan_on_report@@Base+0x128>
    bf14:	sub	x1, x0, #0x1
    bf18:	tst	x0, x1
    bf1c:	b.ne	c040 <__ubsan_on_report@@Base+0x1a0>  // b.any
    bf20:	add	x1, x21, x1
    bf24:	neg	x0, x0
    bf28:	and	x24, x1, x0
    bf2c:	mov	w2, #0x0                   	// #0
    bf30:	mov	x0, x24
    bf34:	adrp	x26, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bf38:	add	x1, x26, #0x988
    bf3c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    bf40:	ldr	x2, [x20, #16]
    bf44:	mov	x23, x0
    bf48:	ldr	x1, [x19, #16]
    bf4c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    bf50:	ldr	x1, [x20, #8]
    bf54:	ldr	x0, [x19, #16]
    bf58:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    bf5c:	ldr	x2, [x20, #16]
    bf60:	str	x23, [x19, #16]
    bf64:	str	x24, [x20, #8]
    bf68:	cmp	x21, x2
    bf6c:	b.ls	bf8c <__ubsan_on_report@@Base+0xec>  // b.plast
    bf70:	cmp	x21, x24
    bf74:	b.hi	bfd4 <__ubsan_on_report@@Base+0x134>  // b.pmore
    bf78:	add	x0, x23, x2
    bf7c:	mov	w1, #0x0                   	// #0
    bf80:	sub	x2, x21, x2
    bf84:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    bf88:	ldr	x23, [x19, #16]
    bf8c:	stp	x21, xzr, [x20, #16]
    bf90:	mov	x0, x19
    bf94:	strb	wzr, [x23]
    bf98:	bl	65a0 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@plt>
    bf9c:	ldr	x2, [x22]
    bfa0:	mov	x0, x20
    bfa4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    bfa8:	add	x1, x1, #0x8b0
    bfac:	bl	1ce00 <OnPrint@@Base+0x420>
    bfb0:	ldp	x21, x22, [sp, #16]
    bfb4:	ldp	x23, x24, [sp, #32]
    bfb8:	ldp	x25, x26, [sp, #48]
    bfbc:	ldr	x30, [sp, #64]
    bfc0:	ldp	x19, x20, [sp], #80
    bfc4:	b	66d0 <__ubsan_on_report@plt>
    bfc8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    bfcc:	str	x0, [x23]
    bfd0:	b	bf14 <__ubsan_on_report@@Base+0x74>
    bfd4:	ldr	x25, [x25, #4016]
    bfd8:	ldr	x0, [x25]
    bfdc:	cbz	x0, c034 <__ubsan_on_report@@Base+0x194>
    bfe0:	sub	x1, x0, #0x1
    bfe4:	tst	x0, x1
    bfe8:	b.ne	c040 <__ubsan_on_report@@Base+0x1a0>  // b.any
    bfec:	add	x1, x21, x1
    bff0:	neg	x0, x0
    bff4:	and	x24, x1, x0
    bff8:	mov	w2, #0x0                   	// #0
    bffc:	add	x1, x26, #0x988
    c000:	mov	x0, x24
    c004:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    c008:	mov	x23, x0
    c00c:	ldr	x2, [x20, #16]
    c010:	ldr	x1, [x19, #16]
    c014:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    c018:	ldr	x1, [x20, #8]
    c01c:	ldr	x0, [x19, #16]
    c020:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    c024:	ldr	x2, [x20, #16]
    c028:	str	x23, [x19, #16]
    c02c:	str	x24, [x20, #8]
    c030:	b	bf78 <__ubsan_on_report@@Base+0xd8>
    c034:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    c038:	str	x0, [x25]
    c03c:	b	bfe0 <__ubsan_on_report@@Base+0x140>
    c040:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    c044:	add	x0, x0, #0x970
    c048:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    c04c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>

000000000000c050 <__ubsan_get_current_report_data@@Base>:
    c050:	cmp	x0, #0x0
    c054:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    c058:	b.eq	c128 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    c05c:	cmp	x2, #0x0
    c060:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    c064:	b.eq	c128 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    c068:	cmp	x4, #0x0
    c06c:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    c070:	b.eq	c128 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
    c074:	adrp	x6, 68000 <__asan_cplus_demangle_operators@@Base+0x2a68>
    c078:	ldr	x6, [x6, #3696]
    c07c:	ldr	x9, [x6, #16]
    c080:	ldrb	w8, [x9]
    c084:	sub	w7, w8, #0x61
    c088:	and	w7, w7, #0xff
    c08c:	cmp	w7, #0x19
    c090:	b.ls	c0d8 <__ubsan_get_current_report_data@@Base+0x88>  // b.plast
    c094:	ldr	x7, [x6]
    c098:	str	x7, [x0]
    c09c:	ldp	x7, x0, [x6, #8]
    c0a0:	str	x0, [x1]
    c0a4:	ldr	w1, [x7]
    c0a8:	cmp	w1, #0x1
    c0ac:	b.eq	c0fc <__ubsan_get_current_report_data@@Base+0xac>  // b.none
    c0b0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    c0b4:	add	x0, x0, #0x918
    c0b8:	str	x0, [x2]
    c0bc:	cmp	w1, #0x2
    c0c0:	str	wzr, [x4]
    c0c4:	str	wzr, [x3]
    c0c8:	b.eq	c11c <__ubsan_get_current_report_data@@Base+0xcc>  // b.none
    c0cc:	mov	x0, #0x0                   	// #0
    c0d0:	str	x0, [x5]
    c0d4:	ret
    c0d8:	sub	w8, w8, #0x20
    c0dc:	strb	w8, [x9]
    c0e0:	ldr	x7, [x6]
    c0e4:	str	x7, [x0]
    c0e8:	ldp	x7, x0, [x6, #8]
    c0ec:	str	x0, [x1]
    c0f0:	ldr	w1, [x7]
    c0f4:	cmp	w1, #0x1
    c0f8:	b.ne	c0b0 <__ubsan_get_current_report_data@@Base+0x60>  // b.any
    c0fc:	ldr	x8, [x7, #8]
    c100:	mov	x0, #0x0                   	// #0
    c104:	ldp	w6, w1, [x7, #16]
    c108:	str	x8, [x2]
    c10c:	str	w6, [x3]
    c110:	str	w1, [x4]
    c114:	str	x0, [x5]
    c118:	ret
    c11c:	ldr	x0, [x7, #24]
    c120:	str	x0, [x5]
    c124:	ret
    c128:	str	x30, [sp, #-16]!
    c12c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c130:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c134:	add	x2, x2, #0xa60
    c138:	add	x0, x0, #0xab0
    c13c:	mov	x4, #0x0                   	// #0
    c140:	mov	x3, #0x0                   	// #0
    c144:	mov	w1, #0x30                  	// #48
    c148:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c14c:	nop
    c150:	ldr	x0, [x0]
    c154:	str	x30, [sp, #-16]!
    c158:	bl	c598 <__ubsan_get_current_report_data@@Base+0x548>
    c15c:	ldr	x30, [sp], #16
    c160:	ret
    c164:	nop
    c168:	stp	x19, x20, [sp, #-48]!
    c16c:	mov	x20, x0
    c170:	str	x30, [sp, #40]
    c174:	cbz	x1, c26c <__ubsan_get_current_report_data@@Base+0x21c>
    c178:	cbz	x0, c274 <__ubsan_get_current_report_data@@Base+0x224>
    c17c:	stp	x21, x22, [sp, #16]
    c180:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c184:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c188:	ldr	x22, [x22, #3960]
    c18c:	str	x23, [sp, #32]
    c190:	ldr	x21, [x21, #4064]
    c194:	mov	x23, x1
    c198:	b	c1a4 <__ubsan_get_current_report_data@@Base+0x154>
    c19c:	ldr	x20, [x0, #16]
    c1a0:	cbz	x20, c234 <__ubsan_get_current_report_data@@Base+0x1e4>
    c1a4:	mov	x2, x22
    c1a8:	mov	x1, x21
    c1ac:	mov	x0, x20
    c1b0:	mov	x3, #0x0                   	// #0
    c1b4:	bl	66e0 <__dynamic_cast@plt>
    c1b8:	mov	x19, x0
    c1bc:	cbnz	x0, c19c <__ubsan_get_current_report_data@@Base+0x14c>
    c1c0:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c1c4:	mov	x1, x21
    c1c8:	mov	x0, x20
    c1cc:	mov	x3, #0x0                   	// #0
    c1d0:	ldr	x2, [x2, #3920]
    c1d4:	bl	66e0 <__dynamic_cast@plt>
    c1d8:	cbz	x0, c21c <__ubsan_get_current_report_data@@Base+0x1cc>
    c1dc:	ldr	w21, [x0, #20]
    c1e0:	cbz	w21, c21c <__ubsan_get_current_report_data@@Base+0x1cc>
    c1e4:	sub	w21, w21, #0x1
    c1e8:	add	x1, x0, #0x28
    c1ec:	add	x20, x0, #0x18
    c1f0:	add	x21, x1, w21, uxtw #4
    c1f4:	nop
    c1f8:	ldr	x0, [x20, #8]
    c1fc:	sub	x1, x23, x0, asr #8
    c200:	tbnz	w0, #0, c210 <__ubsan_get_current_report_data@@Base+0x1c0>
    c204:	ldr	x0, [x20]
    c208:	bl	c168 <__ubsan_get_current_report_data@@Base+0x118>
    c20c:	cbnz	x0, c250 <__ubsan_get_current_report_data@@Base+0x200>
    c210:	add	x20, x20, #0x10
    c214:	cmp	x20, x21
    c218:	b.ne	c1f8 <__ubsan_get_current_report_data@@Base+0x1a8>  // b.any
    c21c:	ldp	x21, x22, [sp, #16]
    c220:	ldr	x23, [sp, #32]
    c224:	mov	x0, x19
    c228:	ldr	x30, [sp, #40]
    c22c:	ldp	x19, x20, [sp], #48
    c230:	ret
    c234:	mov	x19, #0x0                   	// #0
    c238:	mov	x0, x19
    c23c:	ldp	x21, x22, [sp, #16]
    c240:	ldr	x23, [sp, #32]
    c244:	ldr	x30, [sp, #40]
    c248:	ldp	x19, x20, [sp], #48
    c24c:	ret
    c250:	mov	x19, x0
    c254:	mov	x0, x19
    c258:	ldp	x21, x22, [sp, #16]
    c25c:	ldr	x23, [sp, #32]
    c260:	ldr	x30, [sp, #40]
    c264:	ldp	x19, x20, [sp], #48
    c268:	ret
    c26c:	mov	x19, x0
    c270:	b	c224 <__ubsan_get_current_report_data@@Base+0x1d4>
    c274:	mov	x19, #0x0                   	// #0
    c278:	b	c224 <__ubsan_get_current_report_data@@Base+0x1d4>
    c27c:	nop
    c280:	stp	x19, x20, [sp, #-48]!
    c284:	mov	x19, x0
    c288:	mov	x20, x1
    c28c:	ldr	x0, [x0, #8]
    c290:	stp	x23, x30, [sp, #32]
    c294:	mov	x23, x2
    c298:	ldr	x1, [x1, #8]
    c29c:	cmp	x1, x0
    c2a0:	b.eq	c37c <__ubsan_get_current_report_data@@Base+0x32c>  // b.none
    c2a4:	stp	x21, x22, [sp, #16]
    c2a8:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c2ac:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c2b0:	ldr	x22, [x22, #3960]
    c2b4:	ldr	x21, [x21, #4064]
    c2b8:	b	c2d0 <__ubsan_get_current_report_data@@Base+0x280>
    c2bc:	ldr	x19, [x0, #16]
    c2c0:	ldr	x1, [x20, #8]
    c2c4:	ldr	x0, [x19, #8]
    c2c8:	cmp	x0, x1
    c2cc:	b.eq	c378 <__ubsan_get_current_report_data@@Base+0x328>  // b.none
    c2d0:	ldrb	w3, [x0]
    c2d4:	cmp	w3, #0x2a
    c2d8:	b.eq	c2e4 <__ubsan_get_current_report_data@@Base+0x294>  // b.none
    c2dc:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
    c2e0:	cbz	w0, c378 <__ubsan_get_current_report_data@@Base+0x328>
    c2e4:	mov	x2, x22
    c2e8:	mov	x1, x21
    c2ec:	mov	x0, x19
    c2f0:	mov	x3, #0x0                   	// #0
    c2f4:	bl	66e0 <__dynamic_cast@plt>
    c2f8:	cbnz	x0, c2bc <__ubsan_get_current_report_data@@Base+0x26c>
    c2fc:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c300:	mov	x1, x21
    c304:	mov	x0, x19
    c308:	mov	x3, #0x0                   	// #0
    c30c:	ldr	x2, [x2, #3920]
    c310:	bl	66e0 <__dynamic_cast@plt>
    c314:	mov	x21, x0
    c318:	cbz	x0, c364 <__ubsan_get_current_report_data@@Base+0x314>
    c31c:	ldr	w0, [x0, #20]
    c320:	cbz	w0, c364 <__ubsan_get_current_report_data@@Base+0x314>
    c324:	mov	w19, #0x0                   	// #0
    c328:	ubfiz	x3, x19, #4, #32
    c32c:	mov	x1, x20
    c330:	add	x3, x21, x3
    c334:	add	w19, w19, #0x1
    c338:	ldr	x0, [x3, #32]
    c33c:	asr	x2, x0, #8
    c340:	tbnz	w0, #0, c390 <__ubsan_get_current_report_data@@Base+0x340>
    c344:	ldr	x0, [x3, #24]
    c348:	sub	x2, x23, x2
    c34c:	bl	c280 <__ubsan_get_current_report_data@@Base+0x230>
    c350:	tst	w0, #0xff
    c354:	b.ne	c390 <__ubsan_get_current_report_data@@Base+0x340>  // b.any
    c358:	ldr	w0, [x21, #20]
    c35c:	cmp	w0, w19
    c360:	b.ne	c328 <__ubsan_get_current_report_data@@Base+0x2d8>  // b.any
    c364:	mov	w0, #0x0                   	// #0
    c368:	ldp	x21, x22, [sp, #16]
    c36c:	ldp	x23, x30, [sp, #32]
    c370:	ldp	x19, x20, [sp], #48
    c374:	ret
    c378:	ldp	x21, x22, [sp, #16]
    c37c:	cmp	x23, #0x0
    c380:	cset	w0, eq  // eq = none
    c384:	ldp	x23, x30, [sp, #32]
    c388:	ldp	x19, x20, [sp], #48
    c38c:	ret
    c390:	mov	w0, #0x1                   	// #1
    c394:	ldp	x21, x22, [sp, #16]
    c398:	ldp	x23, x30, [sp, #32]
    c39c:	ldp	x19, x20, [sp], #48
    c3a0:	ret
    c3a4:	nop
    c3a8:	stp	x19, x20, [sp, #-48]!
    c3ac:	mov	x19, x2
    c3b0:	and	w2, w2, #0xffff
    c3b4:	eor	w6, w2, #0x1
    c3b8:	stp	x21, x22, [sp, #16]
    c3bc:	adrp	x21, 69000 <__ubsan_vptr_type_cache@@Base+0x188>
    c3c0:	add	x5, x21, #0x280
    c3c4:	mov	x20, x1
    c3c8:	ldr	x3, [x5, x6, lsl #3]
    c3cc:	str	x30, [sp, #32]
    c3d0:	cbz	x3, c560 <__ubsan_get_current_report_data@@Base+0x510>
    c3d4:	cmp	x19, x3
    c3d8:	b.eq	c550 <__ubsan_get_current_report_data@@Base+0x500>  // b.none
    c3dc:	lsr	w1, w19, #16
    c3e0:	add	w3, w6, w1
    c3e4:	add	w2, w3, #0x1
    c3e8:	sub	w3, w3, #0x10, lsl #12
    c3ec:	cmp	w2, #0x10, lsl #12
    c3f0:	csel	w2, w3, w2, hi  // hi = pmore
    c3f4:	mov	w4, w2
    c3f8:	ldr	x3, [x5, x4, lsl #3]
    c3fc:	cbz	x3, c55c <__ubsan_get_current_report_data@@Base+0x50c>
    c400:	cmp	x19, x3
    c404:	b.eq	c570 <__ubsan_get_current_report_data@@Base+0x520>  // b.none
    c408:	add	w2, w1, w2
    c40c:	add	w4, w2, #0x1
    c410:	sub	w2, w2, #0x10, lsl #12
    c414:	cmp	w4, #0x10, lsl #12
    c418:	csel	w4, w2, w4, hi  // hi = pmore
    c41c:	mov	w2, w4
    c420:	ldr	x3, [x5, x2, lsl #3]
    c424:	cbz	x3, c578 <__ubsan_get_current_report_data@@Base+0x528>
    c428:	cmp	x19, x3
    c42c:	b.eq	c54c <__ubsan_get_current_report_data@@Base+0x4fc>  // b.none
    c430:	add	w4, w1, w4
    c434:	add	w2, w4, #0x1
    c438:	sub	w4, w4, #0x10, lsl #12
    c43c:	cmp	w2, #0x10, lsl #12
    c440:	csel	w2, w4, w2, hi  // hi = pmore
    c444:	mov	w4, w2
    c448:	ldr	x3, [x5, x4, lsl #3]
    c44c:	cbz	x3, c55c <__ubsan_get_current_report_data@@Base+0x50c>
    c450:	cmp	x19, x3
    c454:	b.eq	c570 <__ubsan_get_current_report_data@@Base+0x520>  // b.none
    c458:	add	w1, w1, w2
    c45c:	add	w2, w1, #0x1
    c460:	sub	w1, w1, #0x10, lsl #12
    c464:	cmp	w2, #0x10, lsl #12
    c468:	csel	w2, w1, w2, hi  // hi = pmore
    c46c:	mov	w1, w2
    c470:	ldr	x3, [x5, x1, lsl #3]
    c474:	cbz	x3, c584 <__ubsan_get_current_report_data@@Base+0x534>
    c478:	cmp	x19, x3
    c47c:	b.eq	c590 <__ubsan_get_current_report_data@@Base+0x540>  // b.none
    c480:	ldr	x3, [x5, x6, lsl #3]
    c484:	add	x21, x5, x6, lsl #3
    c488:	cmp	x3, x19
    c48c:	b.eq	c528 <__ubsan_get_current_report_data@@Base+0x4d8>  // b.none
    c490:	ldr	x22, [x0]
    c494:	mov	x1, #0x10                  	// #16
    c498:	sub	x0, x22, #0x10
    c49c:	bl	1b7d8 <__sanitizer_set_report_fd@@Base+0x7f08>
    c4a0:	tst	w0, #0xff
    c4a4:	b.eq	c514 <__ubsan_get_current_report_data@@Base+0x4c4>  // b.none
    c4a8:	ldur	x0, [x22, #-8]
    c4ac:	cbz	x0, c514 <__ubsan_get_current_report_data@@Base+0x4c4>
    c4b0:	ldur	x22, [x22, #-16]
    c4b4:	add	x1, x22, #0x100, lsl #12
    c4b8:	cmp	x1, #0x200, lsl #12
    c4bc:	b.hi	c514 <__ubsan_get_current_report_data@@Base+0x4c4>  // b.pmore
    c4c0:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c4c4:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c4c8:	mov	x3, #0x0                   	// #0
    c4cc:	ldr	x2, [x2, #4064]
    c4d0:	ldr	x1, [x1, #3928]
    c4d4:	bl	66e0 <__dynamic_cast@plt>
    c4d8:	cbz	x0, c514 <__ubsan_get_current_report_data@@Base+0x4c4>
    c4dc:	neg	x2, x22
    c4e0:	mov	x1, x20
    c4e4:	bl	c280 <__ubsan_get_current_report_data@@Base+0x230>
    c4e8:	ands	w0, w0, #0xff
    c4ec:	b.eq	c514 <__ubsan_get_current_report_data@@Base+0x4c4>  // b.none
    c4f0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c4f4:	and	x2, x19, #0x7f
    c4f8:	str	x19, [x21]
    c4fc:	ldr	x1, [x1, #3792]
    c500:	ldp	x21, x22, [sp, #16]
    c504:	str	x19, [x1, x2, lsl #3]
    c508:	ldr	x30, [sp, #32]
    c50c:	ldp	x19, x20, [sp], #48
    c510:	ret
    c514:	mov	w0, #0x0                   	// #0
    c518:	ldp	x21, x22, [sp, #16]
    c51c:	ldr	x30, [sp, #32]
    c520:	ldp	x19, x20, [sp], #48
    c524:	ret
    c528:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c52c:	and	x2, x3, #0x7f
    c530:	mov	w0, #0x1                   	// #1
    c534:	ldr	x1, [x1, #3792]
    c538:	ldp	x21, x22, [sp, #16]
    c53c:	str	x3, [x1, x2, lsl #3]
    c540:	ldr	x30, [sp, #32]
    c544:	ldp	x19, x20, [sp], #48
    c548:	ret
    c54c:	mov	x6, x2
    c550:	add	x21, x21, #0x280
    c554:	add	x21, x21, x6, lsl #3
    c558:	b	c488 <__ubsan_get_current_report_data@@Base+0x438>
    c55c:	mov	x6, x4
    c560:	mov	x3, #0x0                   	// #0
    c564:	add	x21, x21, #0x280
    c568:	add	x21, x21, x6, lsl #3
    c56c:	b	c488 <__ubsan_get_current_report_data@@Base+0x438>
    c570:	mov	x6, x4
    c574:	b	c550 <__ubsan_get_current_report_data@@Base+0x500>
    c578:	mov	x6, x2
    c57c:	mov	x3, #0x0                   	// #0
    c580:	b	c564 <__ubsan_get_current_report_data@@Base+0x514>
    c584:	mov	x6, x1
    c588:	mov	x3, #0x0                   	// #0
    c58c:	b	c564 <__ubsan_get_current_report_data@@Base+0x514>
    c590:	mov	w6, w2
    c594:	b	c550 <__ubsan_get_current_report_data@@Base+0x500>
    c598:	stp	x19, x20, [sp, #-32]!
    c59c:	mov	x1, #0x10                  	// #16
    c5a0:	mov	x20, x0
    c5a4:	mov	x19, x8
    c5a8:	sub	x0, x0, #0x10
    c5ac:	str	x30, [sp, #24]
    c5b0:	bl	1b7d8 <__sanitizer_set_report_fd@@Base+0x7f08>
    c5b4:	tst	w0, #0xff
    c5b8:	b.eq	c628 <__ubsan_get_current_report_data@@Base+0x5d8>  // b.none
    c5bc:	str	x21, [sp, #16]
    c5c0:	ldur	x21, [x20, #-8]
    c5c4:	cbz	x21, c624 <__ubsan_get_current_report_data@@Base+0x5d4>
    c5c8:	ldur	x1, [x20, #-16]
    c5cc:	add	x0, x1, #0x100, lsl #12
    c5d0:	cmp	x0, #0x200, lsl #12
    c5d4:	b.ls	c5f0 <__ubsan_get_current_report_data@@Base+0x5a0>  // b.plast
    c5d8:	ldr	x21, [sp, #16]
    c5dc:	stp	xzr, x1, [x19]
    c5e0:	str	xzr, [x19, #16]
    c5e4:	ldr	x30, [sp, #24]
    c5e8:	ldp	x19, x20, [sp], #32
    c5ec:	ret
    c5f0:	neg	x20, x1
    c5f4:	mov	x0, x21
    c5f8:	mov	x1, x20
    c5fc:	bl	c168 <__ubsan_get_current_report_data@@Base+0x118>
    c600:	ldr	x1, [x21, #8]
    c604:	cbz	x0, c63c <__ubsan_get_current_report_data@@Base+0x5ec>
    c608:	ldr	x0, [x0, #8]
    c60c:	ldr	x21, [sp, #16]
    c610:	stp	x1, x20, [x19]
    c614:	str	x0, [x19, #16]
    c618:	ldr	x30, [sp, #24]
    c61c:	ldp	x19, x20, [sp], #32
    c620:	ret
    c624:	ldr	x21, [sp, #16]
    c628:	stp	xzr, xzr, [x19]
    c62c:	str	xzr, [x19, #16]
    c630:	ldr	x30, [sp, #24]
    c634:	ldp	x19, x20, [sp], #32
    c638:	ret
    c63c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    c640:	add	x0, x0, #0x918
    c644:	b	c60c <__ubsan_get_current_report_data@@Base+0x5bc>
    c648:	ldr	x1, [x0]
    c64c:	str	x30, [sp, #-16]!
    c650:	ldrh	w2, [x1]
    c654:	cbnz	w2, c68c <__ubsan_get_current_report_data@@Base+0x63c>
    c658:	ldrh	w1, [x1, #2]
    c65c:	tbz	w1, #0, c68c <__ubsan_get_current_report_data@@Base+0x63c>
    c660:	asr	w2, w1, #1
    c664:	mov	w1, #0x1                   	// #1
    c668:	lsl	w1, w1, w2
    c66c:	cmp	w1, #0x40
    c670:	b.ls	c6ac <__ubsan_get_current_report_data@@Base+0x65c>  // b.plast
    c674:	cmp	w1, #0x80
    c678:	b.ne	c70c <__ubsan_get_current_report_data@@Base+0x6bc>  // b.any
    c67c:	ldr	x1, [x0, #8]
    c680:	ldr	x30, [sp], #16
    c684:	ldp	x0, x1, [x1]
    c688:	ret
    c68c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c690:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c694:	add	x2, x2, #0xae0
    c698:	add	x0, x0, #0xb10
    c69c:	mov	x4, #0x0                   	// #0
    c6a0:	mov	x3, #0x0                   	// #0
    c6a4:	mov	w1, #0x16                  	// #22
    c6a8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c6ac:	ldr	x0, [x0, #8]
    c6b0:	mov	w2, #0x80                  	// #128
    c6b4:	sub	w2, w2, w1
    c6b8:	mov	w4, #0x3f                  	// #63
    c6bc:	sub	w3, w2, #0x40
    c6c0:	sub	w4, w4, w2
    c6c4:	lsr	x5, x0, #1
    c6c8:	cmp	w3, #0x0
    c6cc:	lsl	x1, x0, x3
    c6d0:	lsr	x5, x5, x4
    c6d4:	csel	x1, x1, x5, ge  // ge = tcont
    c6d8:	lsl	x0, x0, x2
    c6dc:	csel	x0, xzr, x0, ge  // ge = tcont
    c6e0:	lsl	x5, x1, #1
    c6e4:	asr	x6, x1, #63
    c6e8:	lsr	x0, x0, x2
    c6ec:	lsl	x4, x5, x4
    c6f0:	orr	x0, x4, x0
    c6f4:	asr	x7, x1, x3
    c6f8:	csel	x0, x7, x0, ge  // ge = tcont
    c6fc:	asr	x1, x1, x2
    c700:	csel	x1, x6, x1, ge  // ge = tcont
    c704:	ldr	x30, [sp], #16
    c708:	ret
    c70c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c710:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c714:	add	x2, x2, #0xb40
    c718:	add	x0, x0, #0xb10
    c71c:	mov	x4, #0x0                   	// #0
    c720:	mov	x3, #0x0                   	// #0
    c724:	mov	w1, #0x27                  	// #39
    c728:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c72c:	nop
    c730:	ldr	x1, [x0]
    c734:	str	x30, [sp, #-16]!
    c738:	ldrh	w2, [x1]
    c73c:	cbnz	w2, c76c <__ubsan_get_current_report_data@@Base+0x71c>
    c740:	ldrh	w1, [x1, #2]
    c744:	tbnz	w1, #0, c76c <__ubsan_get_current_report_data@@Base+0x71c>
    c748:	asr	w1, w1, #1
    c74c:	mov	w2, #0x1                   	// #1
    c750:	lsl	w1, w2, w1
    c754:	cmp	w1, #0x40
    c758:	b.hi	c78c <__ubsan_get_current_report_data@@Base+0x73c>  // b.pmore
    c75c:	mov	x1, #0x0                   	// #0
    c760:	ldr	x0, [x0, #8]
    c764:	ldr	x30, [sp], #16
    c768:	ret
    c76c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c770:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c774:	add	x2, x2, #0xb68
    c778:	add	x0, x0, #0xb10
    c77c:	mov	x4, #0x0                   	// #0
    c780:	mov	x3, #0x0                   	// #0
    c784:	mov	w1, #0x2b                  	// #43
    c788:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c78c:	cmp	w1, #0x80
    c790:	b.ne	c7a4 <__ubsan_get_current_report_data@@Base+0x754>  // b.any
    c794:	ldr	x1, [x0, #8]
    c798:	ldr	x30, [sp], #16
    c79c:	ldp	x0, x1, [x1]
    c7a0:	ret
    c7a4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c7a8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c7ac:	add	x2, x2, #0xb40
    c7b0:	add	x0, x0, #0xb10
    c7b4:	mov	x4, #0x0                   	// #0
    c7b8:	mov	x3, #0x0                   	// #0
    c7bc:	mov	w1, #0x37                  	// #55
    c7c0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c7c4:	nop
    c7c8:	ldr	x2, [x0]
    c7cc:	str	x30, [sp, #-16]!
    c7d0:	ldrh	w3, [x2]
    c7d4:	cbnz	w3, c81c <__ubsan_get_current_report_data@@Base+0x7cc>
    c7d8:	ldrh	w2, [x2, #2]
    c7dc:	tbnz	w2, #0, c7e8 <__ubsan_get_current_report_data@@Base+0x798>
    c7e0:	ldr	x30, [sp], #16
    c7e4:	b	c730 <__ubsan_get_current_report_data@@Base+0x6e0>
    c7e8:	asr	w2, w2, #1
    c7ec:	mov	x1, x0
    c7f0:	mov	w0, #0x1                   	// #1
    c7f4:	lsl	w2, w0, w2
    c7f8:	cmp	w2, #0x40
    c7fc:	b.ls	c83c <__ubsan_get_current_report_data@@Base+0x7ec>  // b.plast
    c800:	cmp	w2, #0x80
    c804:	b.ne	c8b8 <__ubsan_get_current_report_data@@Base+0x868>  // b.any
    c808:	ldr	x1, [x1, #8]
    c80c:	ldp	x0, x1, [x1]
    c810:	tbnz	x1, #63, c898 <__ubsan_get_current_report_data@@Base+0x848>
    c814:	ldr	x30, [sp], #16
    c818:	ret
    c81c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c820:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c824:	add	x2, x2, #0xae0
    c828:	add	x0, x0, #0xb10
    c82c:	mov	x4, #0x0                   	// #0
    c830:	mov	x3, #0x0                   	// #0
    c834:	mov	w1, #0x16                  	// #22
    c838:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c83c:	ldr	x0, [x1, #8]
    c840:	mov	w1, #0x80                  	// #128
    c844:	sub	w2, w1, w2
    c848:	mov	w4, #0x3f                  	// #63
    c84c:	sub	w3, w2, #0x40
    c850:	sub	w4, w4, w2
    c854:	lsr	x5, x0, #1
    c858:	cmp	w3, #0x0
    c85c:	lsl	x1, x0, x3
    c860:	lsr	x5, x5, x4
    c864:	csel	x1, x1, x5, ge  // ge = tcont
    c868:	lsl	x0, x0, x2
    c86c:	csel	x0, xzr, x0, ge  // ge = tcont
    c870:	lsl	x5, x1, #1
    c874:	asr	x6, x1, #63
    c878:	lsr	x0, x0, x2
    c87c:	lsl	x4, x5, x4
    c880:	orr	x0, x4, x0
    c884:	asr	x7, x1, x3
    c888:	csel	x0, x7, x0, ge  // ge = tcont
    c88c:	asr	x1, x1, x2
    c890:	csel	x1, x6, x1, ge  // ge = tcont
    c894:	b	c810 <__ubsan_get_current_report_data@@Base+0x7c0>
    c898:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c89c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c8a0:	add	x2, x2, #0xb98
    c8a4:	add	x0, x0, #0xb10
    c8a8:	mov	x4, #0x0                   	// #0
    c8ac:	mov	x3, #0x0                   	// #0
    c8b0:	mov	w1, #0x3e                  	// #62
    c8b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c8b8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c8bc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c8c0:	add	x2, x2, #0xb40
    c8c4:	add	x0, x0, #0xb10
    c8c8:	mov	x4, #0x0                   	// #0
    c8cc:	mov	x3, #0x0                   	// #0
    c8d0:	mov	w1, #0x27                  	// #39
    c8d4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c8d8:	ldr	x1, [x0]
    c8dc:	str	x30, [sp, #-32]!
    c8e0:	ldrh	w2, [x1]
    c8e4:	cmp	w2, #0x1
    c8e8:	b.ne	c990 <__ubsan_get_current_report_data@@Base+0x940>  // b.any
    c8ec:	ldrh	w1, [x1, #2]
    c8f0:	cmp	w1, #0x40
    c8f4:	b.ls	c918 <__ubsan_get_current_report_data@@Base+0x8c8>  // b.plast
    c8f8:	cmp	w1, #0x60
    c8fc:	b.eq	c908 <__ubsan_get_current_report_data@@Base+0x8b8>  // b.none
    c900:	cmp	w1, #0x80
    c904:	b.ne	c940 <__ubsan_get_current_report_data@@Base+0x8f0>  // b.any
    c908:	ldr	x0, [x0, #8]
    c90c:	ldr	q0, [x0]
    c910:	ldr	x30, [sp], #32
    c914:	ret
    c918:	cmp	w1, #0x20
    c91c:	b.ne	c968 <__ubsan_get_current_report_data@@Base+0x918>  // b.any
    c920:	add	x1, x0, #0x8
    c924:	mov	x2, #0x4                   	// #4
    c928:	add	x0, sp, #0x18
    c92c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    c930:	ldr	s0, [sp, #24]
    c934:	bl	6910 <__extendsftf2@plt>
    c938:	ldr	x30, [sp], #32
    c93c:	ret
    c940:	cmp	w1, #0x50
    c944:	b.eq	c908 <__ubsan_get_current_report_data@@Base+0x8b8>  // b.none
    c948:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c94c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c950:	add	x2, x2, #0xbd8
    c954:	add	x0, x0, #0xb10
    c958:	mov	x4, #0x0                   	// #0
    c95c:	mov	x3, #0x0                   	// #0
    c960:	mov	w1, #0x6c                  	// #108
    c964:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    c968:	cmp	w1, #0x40
    c96c:	b.ne	c948 <__ubsan_get_current_report_data@@Base+0x8f8>  // b.any
    c970:	add	x1, x0, #0x8
    c974:	mov	x2, #0x8                   	// #8
    c978:	add	x0, sp, #0x18
    c97c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    c980:	ldr	d0, [sp, #24]
    c984:	bl	6820 <__extenddftf2@plt>
    c988:	ldr	x30, [sp], #32
    c98c:	ret
    c990:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c994:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    c998:	add	x2, x2, #0xbb0
    c99c:	add	x0, x0, #0xb10
    c9a0:	mov	x4, #0x0                   	// #0
    c9a4:	mov	x3, #0x0                   	// #0
    c9a8:	mov	w1, #0x46                  	// #70
    c9ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

000000000000c9b0 <__sancov_default_options@@Base>:
    c9b0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    c9b4:	add	x0, x0, #0xd20
    c9b8:	ret
    c9bc:	nop
    c9c0:	mov	w1, #0x1                   	// #1
    c9c4:	strh	w1, [x0]
    c9c8:	ret
    c9cc:	nop
    c9d0:	stp	x19, x20, [sp, #-80]!
    c9d4:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    c9d8:	mov	w1, #0x1                   	// #1
    c9dc:	stp	x21, x22, [sp, #16]
    c9e0:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    c9e4:	add	x19, sp, #0x30
    c9e8:	add	x22, x0, #0x288
    c9ec:	strh	w1, [x0, #648]
    c9f0:	mov	x0, x19
    c9f4:	str	x30, [sp, #32]
    c9f8:	bl	15558 <__sanitizer_set_report_fd@@Base+0x1c88>
    c9fc:	adrp	x20, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
    ca00:	ldr	x21, [x21, #3776]
    ca04:	mov	x1, #0x10                  	// #16
    ca08:	add	x20, x20, #0xd40
    ca0c:	mov	x0, x21
    ca10:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    ca14:	mov	x2, x0
    ca18:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ca1c:	add	x3, x3, #0xc10
    ca20:	mov	x0, x19
    ca24:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ca28:	add	x1, x1, #0xc60
    ca2c:	stp	x20, x22, [x2]
    ca30:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    ca34:	mov	x1, #0x10                  	// #16
    ca38:	mov	x0, x21
    ca3c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
    ca40:	mov	x2, x0
    ca44:	add	x4, x22, #0x1
    ca48:	mov	x0, x19
    ca4c:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ca50:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ca54:	add	x3, x3, #0xc70
    ca58:	add	x1, x1, #0xc88
    ca5c:	stp	x20, x4, [x2]
    ca60:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
    ca64:	bl	6a20 <__sancov_default_options@plt>
    ca68:	mov	x1, x0
    ca6c:	mov	x0, x19
    ca70:	bl	15308 <__sanitizer_set_report_fd@@Base+0x1a38>
    ca74:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ca78:	add	x0, x0, #0xc90
    ca7c:	bl	17d30 <__sanitizer_set_report_fd@@Base+0x4460>
    ca80:	mov	x1, x0
    ca84:	mov	x0, x19
    ca88:	bl	15308 <__sanitizer_set_report_fd@@Base+0x1a38>
    ca8c:	bl	14d70 <__sanitizer_set_report_fd@@Base+0x14a0>
    ca90:	ldrb	w0, [x22, #1]
    ca94:	cbnz	w0, caa8 <__sancov_default_options@@Base+0xf8>
    ca98:	ldp	x21, x22, [sp, #16]
    ca9c:	ldr	x30, [sp, #32]
    caa0:	ldp	x19, x20, [sp], #80
    caa4:	ret
    caa8:	mov	x0, x19
    caac:	bl	14e50 <__sanitizer_set_report_fd@@Base+0x1580>
    cab0:	ldp	x21, x22, [sp, #16]
    cab4:	ldr	x30, [sp, #32]
    cab8:	ldp	x19, x20, [sp], #80
    cabc:	ret
    cac0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    cac4:	mov	x2, x0
    cac8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    cacc:	add	x0, x0, #0xca0
    cad0:	ldr	x1, [x1, #4024]
    cad4:	adrp	x3, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cad8:	mov	w4, #0x1                   	// #1
    cadc:	str	x30, [sp, #-16]!
    cae0:	strb	w4, [x3, #704]
    cae4:	ldr	x1, [x1]
    cae8:	bl	1cd78 <OnPrint@@Base+0x398>
    caec:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    caf0:	stp	x19, x20, [sp, #-32]!
    caf4:	adrp	x19, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    caf8:	add	x0, x19, #0x2c0
    cafc:	add	x0, x0, #0x8
    cb00:	mov	w2, #0x1                   	// #1
    cb04:	str	x30, [sp, #24]
    cb08:	ldxrb	w1, [x0]
    cb0c:	stxrb	w3, w2, [x0]
    cb10:	cbnz	w3, cb08 <__sancov_default_options@@Base+0x158>
    cb14:	dmb	ish
    cb18:	tst	w1, #0xff
    cb1c:	b.eq	cb24 <__sancov_default_options@@Base+0x174>  // b.none
    cb20:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    cb24:	add	x0, x19, #0x2c0
    cb28:	ldrb	w0, [x0, #16]
    cb2c:	tst	w0, #0xff
    cb30:	b.eq	cb4c <__sancov_default_options@@Base+0x19c>  // b.none
    cb34:	dmb	ish
    cb38:	add	x19, x19, #0x2c0
    cb3c:	strb	wzr, [x19, #8]
    cb40:	ldr	x30, [sp, #24]
    cb44:	ldp	x19, x20, [sp], #32
    cb48:	ret
    cb4c:	adrp	x20, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cb50:	str	x21, [sp, #16]
    cb54:	add	x21, x20, #0xb40
    cb58:	mov	x2, #0x80000               	// #524288
    cb5c:	mov	x0, x21
    cb60:	add	x21, x21, #0x80, lsl #12
    cb64:	mov	w1, #0x0                   	// #0
    cb68:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    cb6c:	mov	x2, #0xd80                 	// #3456
    cb70:	mov	w1, #0x0                   	// #0
    cb74:	strb	wzr, [x21]
    cb78:	adrp	x0, 176000 <__ubsan_vptr_type_cache@@Base+0x10d188>
    cb7c:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    cb80:	add	x0, x0, #0xb80
    cb84:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    cb88:	mov	x2, #0x248                 	// #584
    cb8c:	adrp	x0, 177000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    cb90:	movk	x2, #0x4, lsl #16
    cb94:	add	x0, x0, #0x900
    cb98:	mov	w1, #0x0                   	// #0
    cb9c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    cba0:	ldr	x21, [x21, #4016]
    cba4:	ldr	x3, [x21]
    cba8:	cbz	x3, cc14 <__sancov_default_options@@Base+0x264>
    cbac:	add	x20, x20, #0xb40
    cbb0:	adrp	x4, 177000 <__ubsan_vptr_type_cache@@Base+0x10e188>
    cbb4:	add	x5, x20, #0x80, lsl #12
    cbb8:	add	x4, x4, #0x910
    cbbc:	add	x20, x20, #0xc0, lsl #12
    cbc0:	adrp	x21, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    cbc4:	mov	x2, #0x28                  	// #40
    cbc8:	add	x0, x21, #0xb48
    cbcc:	str	x3, [x5, #3520]
    cbd0:	add	x21, x21, #0xb48
    cbd4:	str	x4, [x5, #3528]
    cbd8:	mov	w1, #0x0                   	// #0
    cbdc:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    cbe0:	str	x21, [x20, #4104]
    cbe4:	str	x21, [x20, #4112]
    cbe8:	dmb	ish
    cbec:	add	x0, x19, #0x2c0
    cbf0:	mov	w1, #0x1                   	// #1
    cbf4:	strb	w1, [x0, #16]
    cbf8:	ldr	x21, [sp, #16]
    cbfc:	dmb	ish
    cc00:	add	x19, x19, #0x2c0
    cc04:	strb	wzr, [x19, #8]
    cc08:	ldr	x30, [sp, #24]
    cc0c:	ldp	x19, x20, [sp], #32
    cc10:	ret
    cc14:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    cc18:	mov	x3, x0
    cc1c:	str	x0, [x21]
    cc20:	b	cbac <__sancov_default_options@@Base+0x1fc>
    cc24:	nop
    cc28:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cc2c:	add	x0, x0, #0x2c0
    cc30:	ldrb	w0, [x0, #16]
    cc34:	dmb	ish
    cc38:	and	w0, w0, #0xff
    cc3c:	cbz	w0, cc4c <__sancov_default_options@@Base+0x29c>
    cc40:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cc44:	add	x0, x0, #0xb40
    cc48:	ret
    cc4c:	str	x30, [sp, #-16]!
    cc50:	bl	caf0 <__sancov_default_options@@Base+0x140>
    cc54:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cc58:	add	x0, x0, #0xb40
    cc5c:	ldr	x30, [sp], #16
    cc60:	ret
    cc64:	nop
    cc68:	adrp	x2, 66000 <_Unwind_Backtrace@GCC_3.3>
    cc6c:	stp	x19, x20, [sp, #-32]!
    cc70:	mov	x20, x0
    cc74:	ldr	x0, [x2, #1232]
    cc78:	str	x30, [sp, #24]
    cc7c:	sub	x19, x0, #0x1
    cc80:	tst	x0, x19
    cc84:	b.ne	cd2c <__sancov_default_options@@Base+0x37c>  // b.any
    cc88:	ldp	x3, x2, [x20]
    cc8c:	add	x1, x1, x19
    cc90:	neg	x19, x0
    cc94:	and	x19, x1, x19
    cc98:	sub	x0, x3, x2
    cc9c:	cmp	x0, x19
    cca0:	b.ge	cd08 <__sancov_default_options@@Base+0x358>  // b.tcont
    cca4:	str	x21, [sp, #16]
    cca8:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    ccac:	ldr	x21, [x21, #4016]
    ccb0:	ldr	x0, [x21]
    ccb4:	cbz	x0, cd20 <__sancov_default_options@@Base+0x370>
    ccb8:	cmp	x19, x0
    ccbc:	mov	w2, #0x0                   	// #0
    ccc0:	csel	x21, x19, x0, cs  // cs = hs, nlast
    ccc4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ccc8:	mov	x0, x21
    cccc:	add	x1, x1, #0xcf0
    ccd0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    ccd4:	add	x1, x0, x21
    ccd8:	adrp	x3, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ccdc:	stp	x1, x0, [x20]
    cce0:	mov	x2, x0
    cce4:	ldr	x3, [x3, #728]
    cce8:	cbz	x3, ccf8 <__sancov_default_options@@Base+0x348>
    ccec:	mov	x1, x21
    ccf0:	blr	x3
    ccf4:	ldp	x1, x2, [x20]
    ccf8:	sub	x1, x1, x2
    ccfc:	cmp	x19, x1
    cd00:	b.gt	cd40 <__sancov_default_options@@Base+0x390>
    cd04:	ldr	x21, [sp, #16]
    cd08:	add	x19, x2, x19
    cd0c:	ldr	x30, [sp, #24]
    cd10:	str	x19, [x20, #8]
    cd14:	mov	x0, x2
    cd18:	ldp	x19, x20, [sp], #32
    cd1c:	ret
    cd20:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    cd24:	str	x0, [x21]
    cd28:	b	ccb8 <__sancov_default_options@@Base+0x308>
    cd2c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    cd30:	add	x0, x0, #0x970
    cd34:	str	x21, [sp, #16]
    cd38:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    cd3c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    cd40:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    cd44:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    cd48:	add	x2, x2, #0xd00
    cd4c:	add	x0, x0, #0xd40
    cd50:	mov	x4, #0x0                   	// #0
    cd54:	mov	x3, #0x0                   	// #0
    cd58:	mov	w1, #0xd4                  	// #212
    cd5c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cd60:	sub	x1, x0, #0x1
    cd64:	tst	x1, x0
    cd68:	b.ne	cd84 <__sancov_default_options@@Base+0x3d4>  // b.any
    cd6c:	adrp	x2, 66000 <_Unwind_Backtrace@GCC_3.3>
    cd70:	ldr	x1, [x2, #1232]
    cd74:	cmp	x1, x0
    cd78:	csel	x0, x1, x0, cs  // cs = hs, nlast
    cd7c:	str	x0, [x2, #1232]
    cd80:	ret
    cd84:	str	x30, [sp, #-16]!
    cd88:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    cd8c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    cd90:	add	x2, x2, #0xd88
    cd94:	add	x0, x0, #0xd40
    cd98:	mov	x4, #0x0                   	// #0
    cd9c:	mov	x3, #0x0                   	// #0
    cda0:	mov	w1, #0xdb                  	// #219
    cda4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    cda8:	adrp	x1, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cdac:	str	x0, [x1, #728]
    cdb0:	ret
    cdb4:	nop
    cdb8:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cdbc:	ldrb	w0, [x0, #704]
    cdc0:	tst	w0, #0xff
    cdc4:	cset	w0, ne  // ne = any
    cdc8:	ret
    cdcc:	nop
    cdd0:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cdd4:	mov	w1, #0x1                   	// #1
    cdd8:	strb	w1, [x0, #704]
    cddc:	ret
    cde0:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cde4:	add	x0, x0, #0x2c0
    cde8:	ldrb	w0, [x0, #32]
    cdec:	tst	w0, #0xff
    cdf0:	cset	w0, ne  // ne = any
    cdf4:	ret
    cdf8:	adrp	x1, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cdfc:	add	x1, x1, #0x2c0
    ce00:	and	w0, w0, #0xff
    ce04:	strb	w0, [x1, #32]
    ce08:	ret
    ce0c:	nop
    ce10:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    ce14:	add	x0, x0, #0xdb0
    ce18:	b	1cd78 <OnPrint@@Base+0x398>
    ce1c:	nop
    ce20:	cmn	x0, #0x9
    ce24:	b.hi	cf08 <__sancov_default_options@@Base+0x558>  // b.pmore
    ce28:	stp	x19, x20, [sp, #-48]!
    ce2c:	cmp	x2, #0x0
    ce30:	add	x20, x0, #0x8
    ce34:	str	x30, [sp, #24]
    ce38:	mov	x0, #0x8                   	// #8
    ce3c:	csel	x19, x2, x0, ne  // ne = any
    ce40:	cbz	x1, ce94 <__sancov_default_options@@Base+0x4e4>
    ce44:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce48:	add	x0, x0, #0x2c0
    ce4c:	ldrb	w0, [x0, #16]
    ce50:	dmb	ish
    ce54:	and	w0, w0, #0xff
    ce58:	cbz	w0, cf18 <__sancov_default_options@@Base+0x568>
    ce5c:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    ce60:	mov	x3, x19
    ce64:	mov	x2, x20
    ce68:	add	x0, x0, #0xb40
    ce6c:	bl	e428 <__sancov_default_options@@Base+0x1a78>
    ce70:	cbz	x0, cf28 <__sancov_default_options@@Base+0x578>
    ce74:	mov	x1, #0xc041                	// #49217
    ce78:	movk	x1, #0xbceb, lsl #16
    ce7c:	movk	x1, #0xb03a, lsl #32
    ce80:	movk	x1, #0x6a6c, lsl #48
    ce84:	str	x1, [x0], #8
    ce88:	ldr	x30, [sp, #24]
    ce8c:	ldp	x19, x20, [sp], #48
    ce90:	ret
    ce94:	str	x21, [sp, #16]
    ce98:	adrp	x21, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    ce9c:	add	x0, x21, #0x2c0
    cea0:	mov	w2, #0x1                   	// #1
    cea4:	add	x0, x0, #0x28
    cea8:	ldxrb	w1, [x0]
    ceac:	stxrb	w3, w2, [x0]
    ceb0:	cbnz	w3, cea8 <__sancov_default_options@@Base+0x4f8>
    ceb4:	dmb	ish
    ceb8:	tst	w1, #0xff
    cebc:	b.eq	cec4 <__sancov_default_options@@Base+0x514>  // b.none
    cec0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    cec4:	add	x0, x21, #0x2c0
    cec8:	ldrb	w0, [x0, #16]
    cecc:	dmb	ish
    ced0:	and	w0, w0, #0xff
    ced4:	cbz	w0, cf10 <__sancov_default_options@@Base+0x560>
    ced8:	mov	x3, x19
    cedc:	mov	x2, x20
    cee0:	adrp	x1, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cee4:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cee8:	add	x1, x1, #0x2f0
    ceec:	add	x0, x0, #0xb40
    cef0:	bl	e428 <__sancov_default_options@@Base+0x1a78>
    cef4:	dmb	ish
    cef8:	add	x21, x21, #0x2c0
    cefc:	strb	wzr, [x21, #40]
    cf00:	ldr	x21, [sp, #16]
    cf04:	b	ce70 <__sancov_default_options@@Base+0x4c0>
    cf08:	mov	x0, #0x0                   	// #0
    cf0c:	ret
    cf10:	bl	caf0 <__sancov_default_options@@Base+0x140>
    cf14:	b	ced8 <__sancov_default_options@@Base+0x528>
    cf18:	str	x1, [sp, #40]
    cf1c:	bl	caf0 <__sancov_default_options@@Base+0x140>
    cf20:	ldr	x1, [sp, #40]
    cf24:	b	ce5c <__sancov_default_options@@Base+0x4ac>
    cf28:	mov	x0, x20
    cf2c:	str	x21, [sp, #16]
    cf30:	bl	cac0 <__sancov_default_options@@Base+0x110>
    cf34:	nop
    cf38:	stp	x19, x20, [sp, #-48]!
    cf3c:	mov	x19, x2
    cf40:	str	x30, [sp, #32]
    cf44:	cbz	x0, cff0 <__sancov_default_options@@Base+0x640>
    cf48:	mov	x20, x1
    cf4c:	umulh	x1, x1, x0
    cf50:	cbnz	x1, d088 <__sancov_default_options@@Base+0x6d8>
    cf54:	mul	x20, x0, x20
    cf58:	cmn	x20, #0x9
    cf5c:	b.hi	cfdc <__sancov_default_options@@Base+0x62c>  // b.pmore
    cf60:	stp	x21, x22, [sp, #16]
    cf64:	add	x21, x20, #0x8
    cf68:	cbz	x19, d000 <__sancov_default_options@@Base+0x650>
    cf6c:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    cf70:	add	x0, x0, #0x2c0
    cf74:	ldrb	w0, [x0, #16]
    cf78:	dmb	ish
    cf7c:	and	w0, w0, #0xff
    cf80:	cbz	w0, d070 <__sancov_default_options@@Base+0x6c0>
    cf84:	mov	x1, x19
    cf88:	mov	x2, x21
    cf8c:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    cf90:	mov	x3, #0x8                   	// #8
    cf94:	add	x0, x0, #0xb40
    cf98:	bl	e428 <__sancov_default_options@@Base+0x1a78>
    cf9c:	mov	x19, x0
    cfa0:	cbz	x19, d078 <__sancov_default_options@@Base+0x6c8>
    cfa4:	mov	x0, #0xc041                	// #49217
    cfa8:	mov	x2, x20
    cfac:	movk	x0, #0xbceb, lsl #16
    cfb0:	mov	w1, #0x0                   	// #0
    cfb4:	movk	x0, #0xb03a, lsl #32
    cfb8:	movk	x0, #0x6a6c, lsl #48
    cfbc:	str	x0, [x19], #8
    cfc0:	mov	x0, x19
    cfc4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    cfc8:	mov	x0, x19
    cfcc:	ldp	x21, x22, [sp, #16]
    cfd0:	ldr	x30, [sp, #32]
    cfd4:	ldp	x19, x20, [sp], #48
    cfd8:	ret
    cfdc:	mov	x19, #0x0                   	// #0
    cfe0:	mov	x0, x19
    cfe4:	ldr	x30, [sp, #32]
    cfe8:	ldp	x19, x20, [sp], #48
    cfec:	ret
    cff0:	stp	x21, x22, [sp, #16]
    cff4:	mov	x20, #0x0                   	// #0
    cff8:	add	x21, x20, #0x8
    cffc:	cbnz	x19, cf6c <__sancov_default_options@@Base+0x5bc>
    d000:	adrp	x22, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d004:	add	x0, x22, #0x2c0
    d008:	add	x0, x0, #0x28
    d00c:	mov	w2, #0x1                   	// #1
    d010:	ldxrb	w1, [x0]
    d014:	stxrb	w3, w2, [x0]
    d018:	cbnz	w3, d010 <__sancov_default_options@@Base+0x660>
    d01c:	dmb	ish
    d020:	tst	w1, #0xff
    d024:	b.eq	d02c <__sancov_default_options@@Base+0x67c>  // b.none
    d028:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d02c:	add	x0, x22, #0x2c0
    d030:	ldrb	w0, [x0, #16]
    d034:	dmb	ish
    d038:	and	w0, w0, #0xff
    d03c:	cbz	w0, d080 <__sancov_default_options@@Base+0x6d0>
    d040:	mov	x2, x21
    d044:	mov	x3, #0x8                   	// #8
    d048:	adrp	x1, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d04c:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    d050:	add	x1, x1, #0x2f0
    d054:	add	x0, x0, #0xb40
    d058:	bl	e428 <__sancov_default_options@@Base+0x1a78>
    d05c:	dmb	ish
    d060:	mov	x19, x0
    d064:	add	x22, x22, #0x2c0
    d068:	strb	wzr, [x22, #40]
    d06c:	b	cfa0 <__sancov_default_options@@Base+0x5f0>
    d070:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d074:	b	cf84 <__sancov_default_options@@Base+0x5d4>
    d078:	mov	x0, x21
    d07c:	bl	cac0 <__sancov_default_options@@Base+0x110>
    d080:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d084:	b	d040 <__sancov_default_options@@Base+0x690>
    d088:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    d08c:	mov	x2, x0
    d090:	mov	x3, x20
    d094:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d098:	ldr	x1, [x1, #4024]
    d09c:	add	x0, x0, #0xe08
    d0a0:	stp	x21, x22, [sp, #16]
    d0a4:	ldr	x1, [x1]
    d0a8:	bl	1cd78 <OnPrint@@Base+0x398>
    d0ac:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    d0b0:	stp	x19, x20, [sp, #-48]!
    d0b4:	mov	x20, x1
    d0b8:	mov	x1, x2
    d0bc:	str	x30, [sp, #24]
    d0c0:	cbz	x0, d1b8 <__sancov_default_options@@Base+0x808>
    d0c4:	cmn	x20, #0x9
    d0c8:	b.hi	d1cc <__sancov_default_options@@Base+0x81c>  // b.pmore
    d0cc:	mov	x3, #0xc041                	// #49217
    d0d0:	add	x20, x20, #0x8
    d0d4:	ldur	x4, [x0, #-8]
    d0d8:	movk	x3, #0xbceb, lsl #16
    d0dc:	movk	x3, #0xb03a, lsl #32
    d0e0:	sub	x19, x0, #0x8
    d0e4:	movk	x3, #0x6a6c, lsl #48
    d0e8:	cmp	x4, x3
    d0ec:	b.ne	d1ec <__sancov_default_options@@Base+0x83c>  // b.any
    d0f0:	cbz	x2, d13c <__sancov_default_options@@Base+0x78c>
    d0f4:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d0f8:	add	x0, x0, #0x2c0
    d0fc:	ldrb	w0, [x0, #16]
    d100:	dmb	ish
    d104:	and	w0, w0, #0xff
    d108:	cbz	w0, d1dc <__sancov_default_options@@Base+0x82c>
    d10c:	mov	x2, x19
    d110:	mov	x3, x20
    d114:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    d118:	mov	x4, #0x8                   	// #8
    d11c:	add	x0, x0, #0xb40
    d120:	bl	ea98 <__sancov_default_options@@Base+0x20e8>
    d124:	mov	x1, x0
    d128:	add	x0, x1, #0x8
    d12c:	cbz	x1, d208 <__sancov_default_options@@Base+0x858>
    d130:	ldr	x30, [sp, #24]
    d134:	ldp	x19, x20, [sp], #48
    d138:	ret
    d13c:	str	x21, [sp, #16]
    d140:	adrp	x21, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d144:	add	x0, x21, #0x2c0
    d148:	mov	w2, #0x1                   	// #1
    d14c:	add	x0, x0, #0x28
    d150:	ldxrb	w1, [x0]
    d154:	stxrb	w3, w2, [x0]
    d158:	cbnz	w3, d150 <__sancov_default_options@@Base+0x7a0>
    d15c:	dmb	ish
    d160:	tst	w1, #0xff
    d164:	b.eq	d16c <__sancov_default_options@@Base+0x7bc>  // b.none
    d168:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d16c:	add	x0, x21, #0x2c0
    d170:	ldrb	w0, [x0, #16]
    d174:	dmb	ish
    d178:	and	w0, w0, #0xff
    d17c:	cbz	w0, d214 <__sancov_default_options@@Base+0x864>
    d180:	adrp	x1, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d184:	add	x1, x1, #0x2f0
    d188:	mov	x2, x19
    d18c:	mov	x3, x20
    d190:	mov	x4, #0x8                   	// #8
    d194:	adrp	x0, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    d198:	add	x0, x0, #0xb40
    d19c:	bl	ea98 <__sancov_default_options@@Base+0x20e8>
    d1a0:	dmb	ish
    d1a4:	mov	x1, x0
    d1a8:	add	x21, x21, #0x2c0
    d1ac:	strb	wzr, [x21, #40]
    d1b0:	ldr	x21, [sp, #16]
    d1b4:	b	d128 <__sancov_default_options@@Base+0x778>
    d1b8:	mov	x0, x20
    d1bc:	mov	x2, #0x0                   	// #0
    d1c0:	ldr	x30, [sp, #24]
    d1c4:	ldp	x19, x20, [sp], #48
    d1c8:	b	ce20 <__sancov_default_options@@Base+0x470>
    d1cc:	mov	x0, #0x0                   	// #0
    d1d0:	ldr	x30, [sp, #24]
    d1d4:	ldp	x19, x20, [sp], #48
    d1d8:	ret
    d1dc:	str	x2, [sp, #40]
    d1e0:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d1e4:	ldr	x1, [sp, #40]
    d1e8:	b	d10c <__sancov_default_options@@Base+0x75c>
    d1ec:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d1f0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d1f4:	add	x2, x2, #0xe70
    d1f8:	add	x0, x0, #0xd40
    d1fc:	mov	w1, #0xa5                  	// #165
    d200:	str	x21, [sp, #16]
    d204:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d208:	mov	x0, x20
    d20c:	str	x21, [sp, #16]
    d210:	bl	cac0 <__sancov_default_options@@Base+0x110>
    d214:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d218:	b	d180 <__sancov_default_options@@Base+0x7d0>
    d21c:	nop
    d220:	cbz	x0, d588 <__sancov_default_options@@Base+0xbd8>
    d224:	stp	x19, x20, [sp, #-64]!
    d228:	mov	x3, #0xc041                	// #49217
    d22c:	movk	x3, #0xbceb, lsl #16
    d230:	ldur	x4, [x0, #-8]
    d234:	stp	x21, x22, [sp, #16]
    d238:	movk	x3, #0xb03a, lsl #32
    d23c:	str	x30, [sp, #48]
    d240:	movk	x3, #0x6a6c, lsl #48
    d244:	sub	x21, x0, #0x8
    d248:	cmp	x4, x3
    d24c:	b.ne	d56c <__sancov_default_options@@Base+0xbbc>  // b.any
    d250:	stur	xzr, [x0, #-8]
    d254:	mov	x19, x1
    d258:	cbz	x1, d388 <__sancov_default_options@@Base+0x9d8>
    d25c:	adrp	x0, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d260:	add	x0, x0, #0x2c0
    d264:	ldrb	w0, [x0, #16]
    d268:	dmb	ish
    d26c:	and	w0, w0, #0xff
    d270:	cbz	w0, d380 <__sancov_default_options@@Base+0x9d0>
    d274:	mov	x0, #0xffffffffffff        	// #281474976710655
    d278:	adrp	x20, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    d27c:	cmp	x21, x0
    d280:	b.hi	d2a4 <__sancov_default_options@@Base+0x8f4>  // b.pmore
    d284:	lsr	x2, x21, #32
    d288:	add	x1, x20, #0xb40
    d28c:	ldr	x0, [x1, x2, lsl #3]
    d290:	dmb	ish
    d294:	cbz	x0, d2a4 <__sancov_default_options@@Base+0x8f4>
    d298:	lsr	w3, w21, #20
    d29c:	ldrb	w0, [x0, x3]
    d2a0:	cbnz	w0, d58c <__sancov_default_options@@Base+0xbdc>
    d2a4:	add	x0, x20, #0xb40
    d2a8:	add	x0, x0, #0x80, lsl #12
    d2ac:	ldr	x19, [x0, #3520]
    d2b0:	sub	x0, x19, #0x1
    d2b4:	tst	x21, x0
    d2b8:	b.ne	d608 <__sancov_default_options@@Base+0xc58>  // b.any
    d2bc:	adrp	x0, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    d2c0:	sub	x19, x21, x19
    d2c4:	add	x0, x0, #0xb40
    d2c8:	mov	w2, #0x1                   	// #1
    d2cc:	ldxrb	w1, [x0]
    d2d0:	stxrb	w3, w2, [x0]
    d2d4:	cbnz	w3, d2cc <__sancov_default_options@@Base+0x91c>
    d2d8:	dmb	ish
    d2dc:	tst	w1, #0xff
    d2e0:	b.eq	d2e8 <__sancov_default_options@@Base+0x938>  // b.none
    d2e4:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d2e8:	add	x20, x20, #0xb40
    d2ec:	add	x0, x20, #0x80, lsl #12
    d2f0:	ldr	x1, [x19, #24]
    d2f4:	ldr	x2, [x0, #3528]
    d2f8:	ldr	x3, [x2, x1, lsl #3]
    d2fc:	cmp	x3, x19
    d300:	b.ne	d62c <__sancov_default_options@@Base+0xc7c>  // b.any
    d304:	add	x0, x20, #0xc0, lsl #12
    d308:	ldr	x4, [x0, #3536]
    d30c:	cmp	x1, x4
    d310:	b.cs	d64c <__sancov_default_options@@Base+0xc9c>  // b.hs, b.nlast
    d314:	sub	x4, x4, #0x1
    d318:	ldr	x3, [x19, #8]
    d31c:	str	x4, [x0, #3536]
    d320:	ldr	x4, [x2, x4, lsl #3]
    d324:	str	x4, [x2, x1, lsl #3]
    d328:	ldr	x2, [x0, #4120]
    d32c:	str	x1, [x4, #24]
    d330:	sub	x2, x2, x3
    d334:	str	x2, [x0, #4120]
    d338:	ldr	x4, [x0, #3560]
    d33c:	strb	wzr, [x0, #3544]
    d340:	ldr	x2, [x0, #3568]
    d344:	add	x4, x4, #0x1
    d348:	ldr	x1, [x0, #4128]
    d34c:	sub	x2, x2, x3
    d350:	str	x4, [x0, #3560]
    d354:	sub	x1, x1, x3
    d358:	str	x2, [x0, #3568]
    d35c:	str	x1, [x0, #4128]
    d360:	dmb	ish
    d364:	add	x20, x20, #0xc1, lsl #12
    d368:	strb	wzr, [x20]
    d36c:	ldp	x0, x1, [x19]
    d370:	ldp	x21, x22, [sp, #16]
    d374:	ldr	x30, [sp, #48]
    d378:	ldp	x19, x20, [sp], #64
    d37c:	b	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    d380:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d384:	b	d274 <__sancov_default_options@@Base+0x8c4>
    d388:	adrp	x19, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d38c:	add	x0, x19, #0x2c0
    d390:	add	x0, x0, #0x28
    d394:	mov	w2, #0x1                   	// #1
    d398:	ldxrb	w1, [x0]
    d39c:	stxrb	w3, w2, [x0]
    d3a0:	cbnz	w3, d398 <__sancov_default_options@@Base+0x9e8>
    d3a4:	dmb	ish
    d3a8:	tst	w1, #0xff
    d3ac:	b.eq	d3b4 <__sancov_default_options@@Base+0xa04>  // b.none
    d3b0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d3b4:	add	x0, x19, #0x2c0
    d3b8:	ldrb	w0, [x0, #16]
    d3bc:	dmb	ish
    d3c0:	and	w0, w0, #0xff
    d3c4:	cbz	w0, d600 <__sancov_default_options@@Base+0xc50>
    d3c8:	mov	x0, #0xffffffffffff        	// #281474976710655
    d3cc:	adrp	x20, f6000 <__ubsan_vptr_type_cache@@Base+0x8d188>
    d3d0:	cmp	x21, x0
    d3d4:	b.hi	d480 <__sancov_default_options@@Base+0xad0>  // b.pmore
    d3d8:	lsr	x2, x21, #32
    d3dc:	add	x1, x20, #0xb40
    d3e0:	ldr	x0, [x1, x2, lsl #3]
    d3e4:	dmb	ish
    d3e8:	cbz	x0, d480 <__sancov_default_options@@Base+0xad0>
    d3ec:	lsr	w3, w21, #20
    d3f0:	ldrb	w0, [x0, x3]
    d3f4:	cbz	w0, d480 <__sancov_default_options@@Base+0xad0>
    d3f8:	stp	x23, x24, [sp, #32]
    d3fc:	ldr	x0, [x1, x2, lsl #3]
    d400:	dmb	ish
    d404:	cbz	x0, d66c <__sancov_default_options@@Base+0xcbc>
    d408:	ldrb	w24, [x0, x3]
    d40c:	cbz	x24, d66c <__sancov_default_options@@Base+0xcbc>
    d410:	cmp	x24, #0x35
    d414:	b.hi	d808 <__sancov_default_options@@Base+0xe58>  // b.pmore
    d418:	lsl	x23, x24, #10
    d41c:	adrp	x22, e9000 <__ubsan_vptr_type_cache@@Base+0x80188>
    d420:	add	x6, x22, #0x2f0
    d424:	add	x0, x6, x23
    d428:	ldr	x2, [x0, #8]
    d42c:	cbz	x2, d838 <__sancov_default_options@@Base+0xe88>
    d430:	add	x0, x22, #0x2f0
    d434:	add	x1, x0, x23
    d438:	ldr	x4, [x0, x23]
    d43c:	cmp	x4, x2
    d440:	b.eq	d828 <__sancov_default_options@@Base+0xe78>  // b.none
    d444:	add	x22, x22, #0x2f0
    d448:	add	x1, x22, x23
    d44c:	add	x2, x22, #0x8, lsl #12
    d450:	ldr	x0, [x22, x23]
    d454:	ldr	x4, [x1, #16]
    d458:	add	x1, x0, #0x1
    d45c:	add	x0, x0, x24, lsl #7
    d460:	str	x1, [x22, x23]
    d464:	add	x0, x0, #0x4
    d468:	ldr	x1, [x2, #22544]
    d46c:	str	x21, [x22, x0, lsl #3]
    d470:	sub	x0, x1, x4
    d474:	ldp	x23, x24, [sp, #32]
    d478:	str	x0, [x2, #22544]
    d47c:	b	d550 <__sancov_default_options@@Base+0xba0>
    d480:	add	x0, x20, #0xb40
    d484:	add	x0, x0, #0x80, lsl #12
    d488:	ldr	x4, [x0, #3520]
    d48c:	sub	x0, x4, #0x1
    d490:	tst	x21, x0
    d494:	b.ne	d68c <__sancov_default_options@@Base+0xcdc>  // b.any
    d498:	adrp	x0, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    d49c:	sub	x21, x21, x4
    d4a0:	add	x0, x0, #0xb40
    d4a4:	mov	w2, #0x1                   	// #1
    d4a8:	ldxrb	w1, [x0]
    d4ac:	stxrb	w3, w2, [x0]
    d4b0:	cbnz	w3, d4a8 <__sancov_default_options@@Base+0xaf8>
    d4b4:	dmb	ish
    d4b8:	tst	w1, #0xff
    d4bc:	b.eq	d4c4 <__sancov_default_options@@Base+0xb14>  // b.none
    d4c0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d4c4:	add	x20, x20, #0xb40
    d4c8:	add	x0, x20, #0x80, lsl #12
    d4cc:	ldr	x1, [x21, #24]
    d4d0:	ldr	x2, [x0, #3528]
    d4d4:	ldr	x3, [x2, x1, lsl #3]
    d4d8:	cmp	x3, x21
    d4dc:	b.ne	d6b0 <__sancov_default_options@@Base+0xd00>  // b.any
    d4e0:	add	x0, x20, #0xc0, lsl #12
    d4e4:	ldr	x4, [x0, #3536]
    d4e8:	cmp	x1, x4
    d4ec:	b.cs	d6d0 <__sancov_default_options@@Base+0xd20>  // b.hs, b.nlast
    d4f0:	sub	x4, x4, #0x1
    d4f4:	ldr	x3, [x21, #8]
    d4f8:	str	x4, [x0, #3536]
    d4fc:	ldr	x4, [x2, x4, lsl #3]
    d500:	str	x4, [x2, x1, lsl #3]
    d504:	ldr	x2, [x0, #4120]
    d508:	str	x1, [x4, #24]
    d50c:	sub	x2, x2, x3
    d510:	str	x2, [x0, #4120]
    d514:	ldr	x4, [x0, #3560]
    d518:	strb	wzr, [x0, #3544]
    d51c:	ldr	x2, [x0, #3568]
    d520:	add	x4, x4, #0x1
    d524:	ldr	x1, [x0, #4128]
    d528:	sub	x2, x2, x3
    d52c:	str	x4, [x0, #3560]
    d530:	sub	x1, x1, x3
    d534:	str	x2, [x0, #3568]
    d538:	str	x1, [x0, #4128]
    d53c:	dmb	ish
    d540:	add	x20, x20, #0xc1, lsl #12
    d544:	strb	wzr, [x20]
    d548:	ldp	x0, x1, [x21]
    d54c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    d550:	dmb	ish
    d554:	add	x19, x19, #0x2c0
    d558:	strb	wzr, [x19, #40]
    d55c:	ldp	x21, x22, [sp, #16]
    d560:	ldr	x30, [sp, #48]
    d564:	ldp	x19, x20, [sp], #64
    d568:	ret
    d56c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d570:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d574:	add	x2, x2, #0xe70
    d578:	add	x0, x0, #0xd40
    d57c:	mov	w1, #0xbd                  	// #189
    d580:	stp	x23, x24, [sp, #32]
    d584:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d588:	ret
    d58c:	stp	x23, x24, [sp, #32]
    d590:	ldr	x0, [x1, x2, lsl #3]
    d594:	dmb	ish
    d598:	cbz	x0, d66c <__sancov_default_options@@Base+0xcbc>
    d59c:	ldrb	w22, [x0, x3]
    d5a0:	cbz	x22, d66c <__sancov_default_options@@Base+0xcbc>
    d5a4:	cmp	x22, #0x35
    d5a8:	b.hi	d6f0 <__sancov_default_options@@Base+0xd40>  // b.pmore
    d5ac:	lsl	x23, x22, #10
    d5b0:	add	x1, x19, x23
    d5b4:	ldr	x2, [x1, #8]
    d5b8:	cbz	x2, d710 <__sancov_default_options@@Base+0xd60>
    d5bc:	ldr	x0, [x19, x23]
    d5c0:	cmp	x2, x0
    d5c4:	b.eq	d7f0 <__sancov_default_options@@Base+0xe40>  // b.none
    d5c8:	add	x22, x0, x22, lsl #7
    d5cc:	add	x2, x19, x23
    d5d0:	add	x22, x22, #0x4
    d5d4:	add	x0, x0, #0x1
    d5d8:	mov	x3, #0xd800                	// #55296
    d5dc:	add	x1, x19, x3
    d5e0:	str	x0, [x19, x23]
    d5e4:	str	x21, [x19, x22, lsl #3]
    d5e8:	ldr	x0, [x1, #16]
    d5ec:	ldr	x2, [x2, #16]
    d5f0:	ldp	x23, x24, [sp, #32]
    d5f4:	sub	x0, x0, x2
    d5f8:	str	x0, [x1, #16]
    d5fc:	b	d55c <__sancov_default_options@@Base+0xbac>
    d600:	bl	caf0 <__sancov_default_options@@Base+0x140>
    d604:	b	d3c8 <__sancov_default_options@@Base+0xa18>
    d608:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d60c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d610:	add	x2, x2, #0x3b8
    d614:	add	x0, x0, #0x140
    d618:	mov	x4, #0x0                   	// #0
    d61c:	mov	x3, #0x0                   	// #0
    d620:	mov	w1, #0x123                 	// #291
    d624:	stp	x23, x24, [sp, #32]
    d628:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d62c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d630:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d634:	mov	x4, x19
    d638:	add	x2, x2, #0x3e0
    d63c:	add	x0, x0, #0x140
    d640:	mov	w1, #0x88                  	// #136
    d644:	stp	x23, x24, [sp, #32]
    d648:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d64c:	mov	x3, x1
    d650:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d654:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d658:	add	x2, x2, #0x400
    d65c:	add	x0, x0, #0x140
    d660:	mov	w1, #0x89                  	// #137
    d664:	stp	x23, x24, [sp, #32]
    d668:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d66c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d670:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d674:	add	x2, x2, #0x128
    d678:	add	x0, x0, #0x20
    d67c:	mov	x4, #0x0                   	// #0
    d680:	mov	x3, #0x0                   	// #0
    d684:	mov	w1, #0xae                  	// #174
    d688:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d68c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d690:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d694:	add	x2, x2, #0x3b8
    d698:	add	x0, x0, #0x140
    d69c:	mov	x4, #0x0                   	// #0
    d6a0:	mov	x3, #0x0                   	// #0
    d6a4:	mov	w1, #0x123                 	// #291
    d6a8:	stp	x23, x24, [sp, #32]
    d6ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d6b0:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6b4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6b8:	mov	x4, x21
    d6bc:	add	x2, x2, #0x3e0
    d6c0:	add	x0, x0, #0x140
    d6c4:	mov	w1, #0x88                  	// #136
    d6c8:	stp	x23, x24, [sp, #32]
    d6cc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d6d0:	mov	x3, x1
    d6d4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6d8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6dc:	add	x2, x2, #0x400
    d6e0:	add	x0, x0, #0x140
    d6e4:	mov	w1, #0x89                  	// #137
    d6e8:	stp	x23, x24, [sp, #32]
    d6ec:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d6f0:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6f4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d6f8:	mov	x3, x22
    d6fc:	add	x2, x2, #0x0
    d700:	add	x0, x0, #0x20
    d704:	mov	x4, #0x36                  	// #54
    d708:	mov	w1, #0xaf                  	// #175
    d70c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d710:	mov	x2, #0x1                   	// #1
    d714:	mov	x11, x2
    d718:	mov	x12, #0x7c                  	// #124
    d71c:	mov	x10, #0x14                  	// #20
    d720:	mov	x9, #0x100                 	// #256
    d724:	mov	w8, #0x4000                	// #16384
    d728:	mov	x7, #0x3e                  	// #62
    d72c:	nop
    d730:	add	x5, x19, x2, lsl #10
    d734:	lsl	x6, x2, #4
    d738:	mov	x4, x5
    d73c:	mov	x0, #0x14                  	// #20
    d740:	mov	x3, x2
    d744:	add	x2, x2, #0x1
    d748:	stp	x12, x6, [x5, #8]
    d74c:	cmp	x2, #0x36
    d750:	str	x0, [x4, #24]
    d754:	b.eq	d7c4 <__sancov_default_options@@Base+0xe14>  // b.none
    d758:	cmp	x2, #0x35
    d75c:	b.eq	d7cc <__sancov_default_options@@Base+0xe1c>  // b.none
    d760:	cmp	x2, #0x10
    d764:	b.ls	d730 <__sancov_default_options@@Base+0xd80>  // b.plast
    d768:	sub	x0, x3, #0xf
    d76c:	add	x4, x4, #0x400
    d770:	and	x6, x0, #0x3
    d774:	mov	x3, x2
    d778:	lsr	x0, x0, #2
    d77c:	add	x2, x2, #0x1
    d780:	lsl	x0, x9, x0
    d784:	lsr	x5, x0, #2
    d788:	madd	x5, x5, x6, x0
    d78c:	str	x5, [x4, #16]
    d790:	udiv	w0, w8, w5
    d794:	cmp	x0, #0x0
    d798:	csel	x0, x0, x11, ne  // ne = any
    d79c:	cmp	x0, #0x3e
    d7a0:	csel	x0, x0, x7, ls  // ls = plast
    d7a4:	add	x6, x0, #0x2
    d7a8:	lsl	x0, x0, #1
    d7ac:	str	x0, [x4, #8]
    d7b0:	cmp	x5, x6, lsl #3
    d7b4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    d7b8:	str	x0, [x4, #24]
    d7bc:	cmp	x2, #0x36
    d7c0:	b.ne	d758 <__sancov_default_options@@Base+0xda8>  // b.any
    d7c4:	ldr	x2, [x1, #8]
    d7c8:	b	d5bc <__sancov_default_options@@Base+0xc0c>
    d7cc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d7d0:	ldr	q0, [x0, #1264]
    d7d4:	mov	x0, #0xd400                	// #54272
    d7d8:	add	x2, x19, x0
    d7dc:	add	x0, x19, #0x8, lsl #12
    d7e0:	stur	q0, [x2, #8]
    d7e4:	str	xzr, [x0, #21528]
    d7e8:	ldr	x2, [x1, #8]
    d7ec:	b	d5bc <__sancov_default_options@@Base+0xc0c>
    d7f0:	mov	x0, x19
    d7f4:	add	x2, x20, #0xb40
    d7f8:	mov	x3, x22
    d7fc:	bl	e8c0 <__sancov_default_options@@Base+0x1f10>
    d800:	ldr	x0, [x19, x23]
    d804:	b	d5c8 <__sancov_default_options@@Base+0xc18>
    d808:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d80c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d810:	mov	x3, x24
    d814:	add	x2, x2, #0x0
    d818:	add	x0, x0, #0x20
    d81c:	mov	x4, #0x36                  	// #54
    d820:	mov	w1, #0xaf                  	// #175
    d824:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    d828:	add	x2, x20, #0xb40
    d82c:	mov	x3, x24
    d830:	bl	e8c0 <__sancov_default_options@@Base+0x1f10>
    d834:	b	d444 <__sancov_default_options@@Base+0xa94>
    d838:	mov	x1, #0x1                   	// #1
    d83c:	mov	x11, x1
    d840:	mov	x12, #0x7c                  	// #124
    d844:	mov	x10, #0x14                  	// #20
    d848:	mov	x9, #0x100                 	// #256
    d84c:	mov	w8, #0x4000                	// #16384
    d850:	mov	x7, #0x3e                  	// #62
    d854:	nop
    d858:	lsl	x0, x1, #10
    d85c:	lsl	x4, x1, #4
    d860:	add	x13, x6, x0
    d864:	add	x0, x0, #0x18
    d868:	add	x2, x0, x6
    d86c:	mov	x0, #0x14                  	// #20
    d870:	mov	x5, x1
    d874:	add	x1, x1, #0x1
    d878:	stp	x12, x4, [x13, #8]
    d87c:	cmp	x1, #0x36
    d880:	str	x0, [x2]
    d884:	b.eq	d8f4 <__sancov_default_options@@Base+0xf44>  // b.none
    d888:	cmp	x1, #0x35
    d88c:	b.eq	d904 <__sancov_default_options@@Base+0xf54>  // b.none
    d890:	cmp	x1, #0x10
    d894:	b.ls	d858 <__sancov_default_options@@Base+0xea8>  // b.plast
    d898:	sub	x0, x5, #0xf
    d89c:	add	x2, x2, #0x400
    d8a0:	and	x13, x0, #0x3
    d8a4:	mov	x5, x1
    d8a8:	lsr	x0, x0, #2
    d8ac:	add	x1, x1, #0x1
    d8b0:	lsl	x0, x9, x0
    d8b4:	lsr	x4, x0, #2
    d8b8:	madd	x4, x4, x13, x0
    d8bc:	stur	x4, [x2, #-8]
    d8c0:	udiv	w0, w8, w4
    d8c4:	cmp	x0, #0x0
    d8c8:	csel	x0, x0, x11, ne  // ne = any
    d8cc:	cmp	x0, #0x3e
    d8d0:	csel	x0, x0, x7, ls  // ls = plast
    d8d4:	add	x13, x0, #0x2
    d8d8:	lsl	x0, x0, #1
    d8dc:	stur	x0, [x2, #-16]
    d8e0:	cmp	x4, x13, lsl #3
    d8e4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    d8e8:	str	x0, [x2]
    d8ec:	cmp	x1, #0x36
    d8f0:	b.ne	d888 <__sancov_default_options@@Base+0xed8>  // b.any
    d8f4:	add	x0, x22, #0x2f0
    d8f8:	add	x0, x0, x23
    d8fc:	ldr	x2, [x0, #8]
    d900:	b	d430 <__sancov_default_options@@Base+0xa80>
    d904:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    d908:	add	x0, x22, #0x2f0
    d90c:	ldr	q0, [x1, #1264]
    d910:	mov	x1, #0xd400                	// #54272
    d914:	add	x2, x0, x1
    d918:	add	x1, x0, x23
    d91c:	add	x0, x0, #0x8, lsl #12
    d920:	stur	q0, [x2, #8]
    d924:	str	xzr, [x0, #21528]
    d928:	ldr	x2, [x1, #8]
    d92c:	b	d430 <__sancov_default_options@@Base+0xa80>
    d930:	stp	x19, x20, [sp, #-48]!
    d934:	stp	x21, x22, [sp, #16]
    d938:	mov	x21, x0
    d93c:	ldr	x0, [x2, #8]
    d940:	stp	x23, x30, [sp, #32]
    d944:	cbz	x0, d9f0 <__sancov_default_options@@Base+0x1040>
    d948:	mov	x0, #0x2001                	// #8193
    d94c:	add	x22, x1, x0
    d950:	mov	x20, x2
    d954:	mov	x19, x1
    d958:	add	x23, x21, x22, lsl #6
    d95c:	mov	w1, #0x1                   	// #1
    d960:	ldxrb	w0, [x23]
    d964:	stxrb	w2, w1, [x23]
    d968:	cbnz	w2, d960 <__sancov_default_options@@Base+0xfb0>
    d96c:	dmb	ish
    d970:	tst	w0, #0xff
    d974:	b.eq	d980 <__sancov_default_options@@Base+0xfd0>  // b.none
    d978:	mov	x0, x23
    d97c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    d980:	ldr	x0, [x23, #8]
    d984:	cbz	x0, d9bc <__sancov_default_options@@Base+0x100c>
    d988:	add	x19, x21, x19, lsl #6
    d98c:	add	x0, x0, #0x1
    d990:	add	x19, x19, #0x80, lsl #12
    d994:	ldr	x1, [x19, #80]
    d998:	str	x1, [x20]
    d99c:	stp	x0, x20, [x19, #72]
    d9a0:	dmb	ish
    d9a4:	lsl	x22, x22, #6
    d9a8:	strb	wzr, [x21, x22]
    d9ac:	ldp	x21, x22, [sp, #16]
    d9b0:	ldp	x23, x30, [sp, #32]
    d9b4:	ldp	x19, x20, [sp], #48
    d9b8:	ret
    d9bc:	add	x0, x21, x22, lsl #6
    d9c0:	dup	v0.2d, x20
    d9c4:	str	xzr, [x20]
    d9c8:	mov	x1, #0x1                   	// #1
    d9cc:	str	x1, [x0, #8]
    d9d0:	str	q0, [x0, #16]
    d9d4:	dmb	ish
    d9d8:	lsl	x22, x22, #6
    d9dc:	strb	wzr, [x21, x22]
    d9e0:	ldp	x21, x22, [sp, #16]
    d9e4:	ldp	x23, x30, [sp, #32]
    d9e8:	ldp	x19, x20, [sp], #48
    d9ec:	ret
    d9f0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d9f4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    d9f8:	add	x2, x2, #0xec8
    d9fc:	add	x0, x0, #0xee0
    da00:	mov	x4, #0x0                   	// #0
    da04:	mov	x3, #0x0                   	// #0
    da08:	mov	w1, #0xad                  	// #173
    da0c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    da10:	sub	sp, sp, #0x210
    da14:	adrp	x5, 66000 <_Unwind_Backtrace@GCC_3.3>
    da18:	stp	x25, x26, [sp, #48]
    da1c:	mov	x26, x2
    da20:	mov	x25, x3
    da24:	ldr	x2, [x5, #1240]
    da28:	stp	x19, x20, [sp]
    da2c:	mov	x19, x1
    da30:	mov	x1, #0x100000              	// #1048576
    da34:	stp	x21, x22, [sp, #16]
    da38:	mov	x21, x0
    da3c:	mov	x0, x1
    da40:	str	x30, [sp, #80]
    da44:	str	x4, [sp, #104]
    da48:	bl	1a2a8 <__sanitizer_set_report_fd@@Base+0x69d8>
    da4c:	ldr	x4, [sp, #104]
    da50:	cbz	x0, dc34 <__sancov_default_options@@Base+0x1284>
    da54:	mov	x22, x0
    da58:	tst	x0, #0xfffff
    da5c:	ldr	x0, [x19, #24]
    da60:	stp	x23, x24, [sp, #32]
    da64:	stp	x27, x28, [sp, #64]
    da68:	add	x0, x0, #0x100, lsl #12
    da6c:	str	x0, [x19, #24]
    da70:	b.ne	de3c <__sancov_default_options@@Base+0x148c>  // b.any
    da74:	mov	x0, #0xfffffff             	// #268435455
    da78:	lsr	x19, x22, #20
    da7c:	cmp	x0, x22, lsr #20
    da80:	b.cc	dea4 <__sancov_default_options@@Base+0x14f4>  // b.lo, b.ul, b.last
    da84:	and	w23, w4, #0xff
    da88:	lsr	x20, x22, #32
    da8c:	ldr	x0, [x21, x20, lsl #3]
    da90:	dmb	ish
    da94:	cbz	x0, ddf4 <__sancov_default_options@@Base+0x1444>
    da98:	and	x3, x19, #0xfff
    da9c:	ldrb	w1, [x0, x3]
    daa0:	cbnz	x1, defc <__sancov_default_options@@Base+0x154c>
    daa4:	strb	w23, [x0, x3]
    daa8:	cmp	x4, #0x35
    daac:	b.eq	dccc <__sancov_default_options@@Base+0x131c>  // b.none
    dab0:	lsl	x28, x4, #4
    dab4:	cmp	x4, #0x10
    dab8:	b.ls	dad8 <__sancov_default_options@@Base+0x1128>  // b.plast
    dabc:	sub	x0, x4, #0x10
    dac0:	mov	x28, #0x100                 	// #256
    dac4:	and	x1, x0, #0x3
    dac8:	lsr	x0, x0, #2
    dacc:	lsl	x0, x28, x0
    dad0:	lsr	x28, x0, #2
    dad4:	madd	x28, x28, x1, x0
    dad8:	mov	x27, #0x100000              	// #1048576
    dadc:	udiv	x27, x27, x28
    dae0:	cbz	x28, dde4 <__sancov_default_options@@Base+0x1434>
    dae4:	mov	w23, #0x4000                	// #16384
    dae8:	mov	x1, #0x40                  	// #64
    daec:	mov	x0, #0x3e                  	// #62
    daf0:	mul	x27, x27, x28
    daf4:	udiv	w23, w23, w28
    daf8:	cmp	x23, x1
    dafc:	csel	x23, x23, x1, ls  // ls = plast
    db00:	cmp	x23, #0x0
    db04:	csinc	x23, x23, xzr, ne  // ne = any
    db08:	cmp	x23, x0
    db0c:	csel	x23, x23, x0, ls  // ls = plast
    db10:	add	x27, x22, x27
    db14:	cmp	x22, x27
    db18:	b.cs	dde4 <__sancov_default_options@@Base+0x1434>  // b.hs, b.nlast
    db1c:	add	x24, sp, #0x90
    db20:	add	x7, x26, x4, lsl #10
    db24:	mov	x1, #0x0                   	// #0
    db28:	mov	x19, #0x1                   	// #1
    db2c:	str	x22, [sp, #144]
    db30:	add	x22, x22, x28
    db34:	cmp	x22, x27
    db38:	b.cs	dc88 <__sancov_default_options@@Base+0x12d8>  // b.hs, b.nlast
    db3c:	str	x22, [x24, x19, lsl #3]
    db40:	cmp	x19, #0x2f
    db44:	add	x19, x19, #0x1
    db48:	b.ne	db30 <__sancov_default_options@@Base+0x1180>  // b.any
    db4c:	mov	x2, #0xd800                	// #55296
    db50:	mov	x19, #0x0                   	// #0
    db54:	add	x9, x26, x2
    db58:	b	db64 <__sancov_default_options@@Base+0x11b4>
    db5c:	cmp	x19, #0x2f
    db60:	b.hi	dcc4 <__sancov_default_options@@Base+0x1314>  // b.pmore
    db64:	ldr	x8, [x24, x19, lsl #3]
    db68:	cbz	x1, dbb4 <__sancov_default_options@@Base+0x1204>
    db6c:	ldr	x5, [x1, #8]
    db70:	add	x6, x5, #0x1
    db74:	add	x5, x5, #0x2
    db78:	str	x6, [x1, #8]
    db7c:	add	x19, x19, #0x1
    db80:	cmp	x6, x23
    db84:	str	x8, [x1, x5, lsl #3]
    db88:	b.ne	db5c <__sancov_default_options@@Base+0x11ac>  // b.any
    db8c:	ldr	x5, [x25, #8]
    db90:	cbnz	x5, dc50 <__sancov_default_options@@Base+0x12a0>
    db94:	dup	v0.2d, x1
    db98:	str	xzr, [x1]
    db9c:	mov	x0, #0x1                   	// #1
    dba0:	str	x0, [x25, #8]
    dba4:	cmp	x19, #0x2f
    dba8:	str	q0, [x25, #16]
    dbac:	b.hi	dc70 <__sancov_default_options@@Base+0x12c0>  // b.pmore
    dbb0:	ldr	x8, [x24, x19, lsl #3]
    dbb4:	mov	x1, x8
    dbb8:	ldr	x20, [x7, #24]
    dbbc:	cbnz	x20, dbd4 <__sancov_default_options@@Base+0x1224>
    dbc0:	cbz	x1, dc2c <__sancov_default_options@@Base+0x127c>
    dbc4:	mov	x5, #0x0                   	// #0
    dbc8:	mov	x6, #0x1                   	// #1
    dbcc:	str	xzr, [x1, #8]
    dbd0:	b	db74 <__sancov_default_options@@Base+0x11c4>
    dbd4:	cmp	x20, #0x35
    dbd8:	b.hi	de5c <__sancov_default_options@@Base+0x14ac>  // b.pmore
    dbdc:	lsl	x5, x20, #10
    dbe0:	add	x1, x26, x5
    dbe4:	ldr	x0, [x26, x5]
    dbe8:	cbz	x0, dec4 <__sancov_default_options@@Base+0x1514>
    dbec:	lsl	x20, x20, #7
    dbf0:	add	x3, x26, x5
    dbf4:	add	x1, x20, x0
    dbf8:	sub	x0, x0, #0x1
    dbfc:	add	x1, x1, #0x2
    dc00:	str	x0, [x26, x5]
    dc04:	add	x20, x20, x0
    dc08:	add	x20, x20, #0x4
    dc0c:	ldr	x2, [x26, x1, lsl #3]
    dc10:	ldr	x0, [x9, #16]
    dc14:	ldr	x1, [x3, #16]
    dc18:	prfm	pldl1keep, [x2]
    dc1c:	add	x0, x0, x1
    dc20:	ldr	x1, [x26, x20, lsl #3]
    dc24:	str	x0, [x9, #16]
    dc28:	cbnz	x1, dbc4 <__sancov_default_options@@Base+0x1214>
    dc2c:	ldp	x23, x24, [sp, #32]
    dc30:	ldp	x27, x28, [sp, #64]
    dc34:	mov	w0, #0x0                   	// #0
    dc38:	ldp	x19, x20, [sp]
    dc3c:	ldp	x21, x22, [sp, #16]
    dc40:	ldp	x25, x26, [sp, #48]
    dc44:	ldr	x30, [sp, #80]
    dc48:	add	sp, sp, #0x210
    dc4c:	ret
    dc50:	ldr	x2, [x25, #24]
    dc54:	str	xzr, [x1]
    dc58:	add	x5, x5, #0x1
    dc5c:	cmp	x19, #0x2f
    dc60:	str	x1, [x2]
    dc64:	str	x5, [x25, #8]
    dc68:	str	x1, [x25, #24]
    dc6c:	b.ls	dbb0 <__sancov_default_options@@Base+0x1200>  // b.plast
    dc70:	add	x22, x22, x28
    dc74:	mov	x19, #0x0                   	// #0
    dc78:	cmp	x22, x27
    dc7c:	mov	x1, #0x0                   	// #0
    dc80:	b.cc	db3c <__sancov_default_options@@Base+0x118c>  // b.lo, b.ul, b.last
    dc84:	nop
    dc88:	cbnz	x19, dcdc <__sancov_default_options@@Base+0x132c>
    dc8c:	cbz	x1, dde4 <__sancov_default_options@@Base+0x1434>
    dc90:	ldr	x2, [x1, #8]
    dc94:	cbz	x2, df1c <__sancov_default_options@@Base+0x156c>
    dc98:	ldr	x0, [x25, #8]
    dc9c:	cbnz	x0, de7c <__sancov_default_options@@Base+0x14cc>
    dca0:	dup	v0.2d, x1
    dca4:	ldp	x23, x24, [sp, #32]
    dca8:	ldp	x27, x28, [sp, #64]
    dcac:	str	xzr, [x1]
    dcb0:	mov	x1, #0x1                   	// #1
    dcb4:	mov	w0, w1
    dcb8:	str	x1, [x25, #8]
    dcbc:	str	q0, [x25, #16]
    dcc0:	b	dc38 <__sancov_default_options@@Base+0x1288>
    dcc4:	mov	x19, #0x0                   	// #0
    dcc8:	b	db30 <__sancov_default_options@@Base+0x1180>
    dccc:	mov	x27, #0x100000              	// #1048576
    dcd0:	mov	x23, #0x20                  	// #32
    dcd4:	mov	x28, #0x200                 	// #512
    dcd8:	b	db10 <__sancov_default_options@@Base+0x1160>
    dcdc:	add	x28, x26, x4, lsl #10
    dce0:	mov	x0, #0xd800                	// #55296
    dce4:	add	x27, sp, #0x90
    dce8:	add	x4, x26, x0
    dcec:	mov	x20, #0x0                   	// #0
    dcf0:	b	dcfc <__sancov_default_options@@Base+0x134c>
    dcf4:	cmp	x19, x20
    dcf8:	b.ls	dc94 <__sancov_default_options@@Base+0x12e4>  // b.plast
    dcfc:	ldr	x22, [x27, x20, lsl #3]
    dd00:	cbz	x1, dd4c <__sancov_default_options@@Base+0x139c>
    dd04:	ldr	x0, [x1, #8]
    dd08:	add	x2, x0, #0x1
    dd0c:	add	x0, x0, #0x2
    dd10:	str	x2, [x1, #8]
    dd14:	add	x20, x20, #0x1
    dd18:	cmp	x2, x23
    dd1c:	str	x22, [x1, x0, lsl #3]
    dd20:	b.ne	dcf4 <__sancov_default_options@@Base+0x1344>  // b.any
    dd24:	ldr	x0, [x25, #8]
    dd28:	cbnz	x0, ddc4 <__sancov_default_options@@Base+0x1414>
    dd2c:	dup	v0.2d, x1
    dd30:	str	xzr, [x1]
    dd34:	mov	x0, #0x1                   	// #1
    dd38:	str	x0, [x25, #8]
    dd3c:	cmp	x19, x20
    dd40:	str	q0, [x25, #16]
    dd44:	b.ls	dde4 <__sancov_default_options@@Base+0x1434>  // b.plast
    dd48:	ldr	x22, [x27, x20, lsl #3]
    dd4c:	mov	x1, x22
    dd50:	ldr	x24, [x28, #24]
    dd54:	cbnz	x24, dd6c <__sancov_default_options@@Base+0x13bc>
    dd58:	cbz	x1, dc2c <__sancov_default_options@@Base+0x127c>
    dd5c:	mov	x0, #0x0                   	// #0
    dd60:	mov	x2, #0x1                   	// #1
    dd64:	str	xzr, [x1, #8]
    dd68:	b	dd0c <__sancov_default_options@@Base+0x135c>
    dd6c:	cmp	x24, #0x35
    dd70:	b.hi	df64 <__sancov_default_options@@Base+0x15b4>  // b.pmore
    dd74:	lsl	x5, x24, #10
    dd78:	add	x1, x26, x5
    dd7c:	ldr	x0, [x26, x5]
    dd80:	cbz	x0, df6c <__sancov_default_options@@Base+0x15bc>
    dd84:	lsl	x24, x24, #7
    dd88:	add	x2, x26, x5
    dd8c:	add	x1, x24, x0
    dd90:	sub	x0, x0, #0x1
    dd94:	add	x1, x1, #0x2
    dd98:	str	x0, [x26, x5]
    dd9c:	add	x24, x24, x0
    dda0:	add	x0, x24, #0x4
    dda4:	ldr	x3, [x26, x1, lsl #3]
    dda8:	ldr	x1, [x2, #16]
    ddac:	ldr	x2, [x4, #16]
    ddb0:	prfm	pldl1keep, [x3]
    ddb4:	add	x2, x2, x1
    ddb8:	ldr	x1, [x26, x0, lsl #3]
    ddbc:	str	x2, [x4, #16]
    ddc0:	b	dd58 <__sancov_default_options@@Base+0x13a8>
    ddc4:	ldr	x3, [x25, #24]
    ddc8:	str	xzr, [x1]
    ddcc:	add	x0, x0, #0x1
    ddd0:	cmp	x19, x20
    ddd4:	str	x1, [x3]
    ddd8:	str	x0, [x25, #8]
    dddc:	str	x1, [x25, #24]
    dde0:	b.hi	dd48 <__sancov_default_options@@Base+0x1398>  // b.pmore
    dde4:	mov	w0, #0x1                   	// #1
    dde8:	ldp	x23, x24, [sp, #32]
    ddec:	ldp	x27, x28, [sp, #64]
    ddf0:	b	dc38 <__sancov_default_options@@Base+0x1288>
    ddf4:	add	x24, x21, #0x80, lsl #12
    ddf8:	mov	w1, #0x1                   	// #1
    ddfc:	ldxrb	w0, [x24]
    de00:	stxrb	w2, w1, [x24]
    de04:	cbnz	w2, ddfc <__sancov_default_options@@Base+0x144c>
    de08:	dmb	ish
    de0c:	tst	w0, #0xff
    de10:	b.eq	de24 <__sancov_default_options@@Base+0x1474>  // b.none
    de14:	mov	x0, x24
    de18:	str	x4, [sp, #104]
    de1c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    de20:	ldr	x4, [sp, #104]
    de24:	ldr	x0, [x21, x20, lsl #3]
    de28:	dmb	ish
    de2c:	cbz	x0, df3c <__sancov_default_options@@Base+0x158c>
    de30:	dmb	ish
    de34:	strb	wzr, [x24]
    de38:	b	da98 <__sancov_default_options@@Base+0x10e8>
    de3c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    de40:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    de44:	add	x2, x2, #0xf30
    de48:	add	x0, x0, #0xee0
    de4c:	mov	x4, #0x0                   	// #0
    de50:	mov	x3, #0x0                   	// #0
    de54:	mov	w1, #0x126                 	// #294
    de58:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    de5c:	mov	x3, x20
    de60:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    de64:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    de68:	add	x2, x2, #0x0
    de6c:	add	x0, x0, #0x20
    de70:	mov	x4, #0x36                  	// #54
    de74:	mov	w1, #0xa0                  	// #160
    de78:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    de7c:	ldr	x4, [x25, #24]
    de80:	add	x2, x0, #0x1
    de84:	ldp	x23, x24, [sp, #32]
    de88:	mov	w0, #0x1                   	// #1
    de8c:	ldp	x27, x28, [sp, #64]
    de90:	str	xzr, [x1]
    de94:	str	x1, [x4]
    de98:	str	x2, [x25, #8]
    de9c:	str	x1, [x25, #24]
    dea0:	b	dc38 <__sancov_default_options@@Base+0x1288>
    dea4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    dea8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    deac:	mov	x3, x19
    deb0:	add	x2, x2, #0xf58
    deb4:	add	x0, x0, #0xee0
    deb8:	mov	x4, #0x10000000            	// #268435456
    debc:	mov	w1, #0x116                 	// #278
    dec0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    dec4:	mov	x3, x20
    dec8:	mov	x2, x21
    decc:	mov	x0, x26
    ded0:	stp	x8, x4, [sp, #104]
    ded4:	stp	x5, x9, [sp, #120]
    ded8:	str	x7, [sp, #136]
    dedc:	bl	e0a0 <__sancov_default_options@@Base+0x16f0>
    dee0:	tst	w0, #0xff
    dee4:	b.eq	dc2c <__sancov_default_options@@Base+0x127c>  // b.none
    dee8:	ldp	x5, x9, [sp, #120]
    deec:	ldp	x8, x4, [sp, #104]
    def0:	ldr	x7, [sp, #136]
    def4:	ldr	x0, [x26, x5]
    def8:	b	dbec <__sancov_default_options@@Base+0x123c>
    defc:	mov	x4, x1
    df00:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    df04:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    df08:	add	x2, x2, #0xf90
    df0c:	add	x0, x0, #0xfb8
    df10:	mov	x3, #0x0                   	// #0
    df14:	mov	w1, #0x42                  	// #66
    df18:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    df1c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    df20:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    df24:	add	x2, x2, #0xec8
    df28:	add	x0, x0, #0xee0
    df2c:	mov	x4, #0x0                   	// #0
    df30:	mov	x3, #0x0                   	// #0
    df34:	mov	w1, #0x169                 	// #361
    df38:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    df3c:	mov	w2, #0x0                   	// #0
    df40:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    df44:	mov	x0, #0x1000                	// #4096
    df48:	add	x1, x1, #0xf80
    df4c:	str	x4, [sp, #104]
    df50:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
    df54:	dmb	ish
    df58:	str	x0, [x21, x20, lsl #3]
    df5c:	ldr	x4, [sp, #104]
    df60:	b	de30 <__sancov_default_options@@Base+0x1480>
    df64:	mov	x3, x24
    df68:	b	de60 <__sancov_default_options@@Base+0x14b0>
    df6c:	mov	x3, x24
    df70:	mov	x2, x21
    df74:	mov	x0, x26
    df78:	stp	x5, x4, [sp, #104]
    df7c:	bl	e0a0 <__sancov_default_options@@Base+0x16f0>
    df80:	tst	w0, #0xff
    df84:	b.eq	dc2c <__sancov_default_options@@Base+0x127c>  // b.none
    df88:	ldp	x5, x4, [sp, #104]
    df8c:	ldr	x0, [x26, x5]
    df90:	b	dd84 <__sancov_default_options@@Base+0x13d4>
    df94:	nop
    df98:	stp	x19, x20, [sp, #-80]!
    df9c:	mov	x20, x0
    dfa0:	mov	x0, #0x2001                	// #8193
    dfa4:	stp	x21, x22, [sp, #16]
    dfa8:	add	x22, x3, x0
    dfac:	mov	x19, x3
    dfb0:	lsl	x21, x22, #6
    dfb4:	stp	x23, x24, [sp, #32]
    dfb8:	add	x23, x20, x21
    dfbc:	stp	x25, x26, [sp, #48]
    dfc0:	mov	x25, x2
    dfc4:	mov	x24, x1
    dfc8:	mov	w1, #0x1                   	// #1
    dfcc:	str	x30, [sp, #64]
    dfd0:	ldxrb	w0, [x23]
    dfd4:	stxrb	w2, w1, [x23]
    dfd8:	cbnz	w2, dfd0 <__sancov_default_options@@Base+0x1620>
    dfdc:	dmb	ish
    dfe0:	tst	w0, #0xff
    dfe4:	b.eq	dff0 <__sancov_default_options@@Base+0x1640>  // b.none
    dfe8:	mov	x0, x23
    dfec:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    dff0:	add	x21, x21, #0x8
    dff4:	add	x26, x20, x21
    dff8:	ldr	x5, [x20, x21]
    dffc:	cbnz	x5, e028 <__sancov_default_options@@Base+0x1678>
    e000:	mov	x3, x23
    e004:	mov	x2, x25
    e008:	mov	x1, x24
    e00c:	mov	x4, x19
    e010:	mov	x0, x20
    e014:	bl	da10 <__sancov_default_options@@Base+0x1060>
    e018:	tst	w0, #0xff
    e01c:	b.eq	e098 <__sancov_default_options@@Base+0x16e8>  // b.none
    e020:	ldr	x5, [x20, x21]
    e024:	cbz	x5, e078 <__sancov_default_options@@Base+0x16c8>
    e028:	add	x4, x20, x19, lsl #6
    e02c:	add	x4, x4, #0x80, lsl #12
    e030:	ldr	x0, [x26, #8]
    e034:	ldr	x1, [x4, #80]
    e038:	ldr	x1, [x1]
    e03c:	str	x1, [x4, #80]
    e040:	cbz	x1, e070 <__sancov_default_options@@Base+0x16c0>
    e044:	sub	x5, x5, #0x1
    e048:	str	x5, [x4, #72]
    e04c:	dmb	ish
    e050:	lsl	x22, x22, #6
    e054:	strb	wzr, [x20, x22]
    e058:	ldp	x21, x22, [sp, #16]
    e05c:	ldp	x23, x24, [sp, #32]
    e060:	ldp	x25, x26, [sp, #48]
    e064:	ldr	x30, [sp, #64]
    e068:	ldp	x19, x20, [sp], #80
    e06c:	ret
    e070:	str	xzr, [x4, #88]
    e074:	b	e044 <__sancov_default_options@@Base+0x1694>
    e078:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e07c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e080:	add	x2, x2, #0x70
    e084:	add	x0, x0, #0x88
    e088:	mov	x4, #0x0                   	// #0
    e08c:	mov	x3, #0x0                   	// #0
    e090:	mov	w1, #0x40                  	// #64
    e094:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e098:	mov	x0, #0x0                   	// #0
    e09c:	b	e04c <__sancov_default_options@@Base+0x169c>
    e0a0:	stp	x19, x20, [sp, #-64]!
    e0a4:	mov	x19, x0
    e0a8:	ldr	x0, [x1, #8]
    e0ac:	stp	x21, x22, [sp, #16]
    e0b0:	mov	x21, x1
    e0b4:	stp	x23, x24, [sp, #32]
    e0b8:	mov	x22, x2
    e0bc:	mov	x23, x3
    e0c0:	str	x30, [sp, #48]
    e0c4:	cbz	x0, e208 <__sancov_default_options@@Base+0x1858>
    e0c8:	mov	x3, #0xd800                	// #55296
    e0cc:	add	x24, x19, x3
    e0d0:	mov	x1, x24
    e0d4:	mov	x3, x23
    e0d8:	mov	x2, x19
    e0dc:	mov	x0, x22
    e0e0:	bl	df98 <__sancov_default_options@@Base+0x15e8>
    e0e4:	mov	x20, x0
    e0e8:	cbz	x0, e1f0 <__sancov_default_options@@Base+0x1840>
    e0ec:	ldr	x5, [x0, #8]
    e0f0:	cbz	x5, e2e4 <__sancov_default_options@@Base+0x1934>
    e0f4:	add	x2, x0, #0x10
    e0f8:	add	x0, x21, #0x30
    e0fc:	cmp	x2, x0
    e100:	sub	x1, x5, #0x1
    e104:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
    e108:	add	x0, x21, #0x20
    e10c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
    e110:	b.ls	e1d4 <__sancov_default_options@@Base+0x1824>  // b.plast
    e114:	lsr	x1, x5, #1
    e118:	mov	x4, #0x0                   	// #0
    e11c:	lsl	x1, x1, #4
    e120:	ldr	q0, [x2, x4]
    e124:	str	q0, [x0, x4]
    e128:	add	x4, x4, #0x10
    e12c:	cmp	x1, x4
    e130:	b.ne	e120 <__sancov_default_options@@Base+0x1770>  // b.any
    e134:	and	x4, x5, #0xfffffffffffffffe
    e138:	tbz	w5, #0, e148 <__sancov_default_options@@Base+0x1798>
    e13c:	add	x1, x4, #0x2
    e140:	ldr	x1, [x20, x1, lsl #3]
    e144:	str	x1, [x0, x4, lsl #3]
    e148:	add	x23, x19, x23, lsl #10
    e14c:	str	x5, [x21]
    e150:	mov	w0, #0x1                   	// #1
    e154:	ldr	x21, [x23, #24]
    e158:	cbnz	x21, e170 <__sancov_default_options@@Base+0x17c0>
    e15c:	ldp	x21, x22, [sp, #16]
    e160:	ldp	x23, x24, [sp, #32]
    e164:	ldr	x30, [sp, #48]
    e168:	ldp	x19, x20, [sp], #64
    e16c:	ret
    e170:	cmp	x21, #0x35
    e174:	b.hi	e404 <__sancov_default_options@@Base+0x1a54>  // b.pmore
    e178:	lsl	x23, x21, #10
    e17c:	add	x1, x19, x23
    e180:	ldr	x2, [x1, #8]
    e184:	cbz	x2, e31c <__sancov_default_options@@Base+0x196c>
    e188:	ldr	x0, [x19, x23]
    e18c:	cmp	x0, x2
    e190:	b.eq	e304 <__sancov_default_options@@Base+0x1954>  // b.none
    e194:	add	x2, x0, x21, lsl #7
    e198:	add	x3, x19, x23
    e19c:	add	x2, x2, #0x4
    e1a0:	add	x0, x0, #0x1
    e1a4:	str	x0, [x19, x23]
    e1a8:	mov	w0, #0x1                   	// #1
    e1ac:	ldr	x1, [x24, #16]
    e1b0:	str	x20, [x19, x2, lsl #3]
    e1b4:	ldp	x21, x22, [sp, #16]
    e1b8:	ldr	x2, [x3, #16]
    e1bc:	ldr	x30, [sp, #48]
    e1c0:	sub	x1, x1, x2
    e1c4:	str	x1, [x24, #16]
    e1c8:	ldp	x23, x24, [sp, #32]
    e1cc:	ldp	x19, x20, [sp], #64
    e1d0:	ret
    e1d4:	mov	x1, #0x0                   	// #0
    e1d8:	ldr	x3, [x2, x1, lsl #3]
    e1dc:	str	x3, [x0, x1, lsl #3]
    e1e0:	add	x1, x1, #0x1
    e1e4:	cmp	x5, x1
    e1e8:	b.ne	e1d8 <__sancov_default_options@@Base+0x1828>  // b.any
    e1ec:	b	e148 <__sancov_default_options@@Base+0x1798>
    e1f0:	mov	w0, #0x0                   	// #0
    e1f4:	ldp	x21, x22, [sp, #16]
    e1f8:	ldp	x23, x24, [sp, #32]
    e1fc:	ldr	x30, [sp, #48]
    e200:	ldp	x19, x20, [sp], #64
    e204:	ret
    e208:	mov	x5, #0x1                   	// #1
    e20c:	mov	x11, x5
    e210:	mov	x12, #0x7c                  	// #124
    e214:	mov	x10, #0x14                  	// #20
    e218:	mov	x9, #0x100                 	// #256
    e21c:	mov	w8, #0x4000                	// #16384
    e220:	mov	x3, #0x3e                  	// #62
    e224:	nop
    e228:	add	x2, x19, x5, lsl #10
    e22c:	lsl	x4, x5, #4
    e230:	mov	x6, x2
    e234:	mov	x0, #0x14                  	// #20
    e238:	mov	x1, x5
    e23c:	add	x5, x5, #0x1
    e240:	stp	x12, x4, [x2, #8]
    e244:	cmp	x5, #0x36
    e248:	str	x0, [x6, #24]
    e24c:	b.eq	e0c8 <__sancov_default_options@@Base+0x1718>  // b.none
    e250:	cmp	x5, #0x35
    e254:	b.eq	e2c4 <__sancov_default_options@@Base+0x1914>  // b.none
    e258:	cmp	x5, #0x10
    e25c:	b.ls	e228 <__sancov_default_options@@Base+0x1878>  // b.plast
    e260:	sub	x4, x1, #0xf
    e264:	add	x6, x6, #0x400
    e268:	and	x0, x4, #0x3
    e26c:	mov	x1, x5
    e270:	lsr	x4, x4, #2
    e274:	add	x5, x5, #0x1
    e278:	lsl	x4, x9, x4
    e27c:	lsr	x7, x4, #2
    e280:	madd	x7, x7, x0, x4
    e284:	str	x7, [x6, #16]
    e288:	udiv	w4, w8, w7
    e28c:	cmp	x4, #0x0
    e290:	csel	x4, x4, x11, ne  // ne = any
    e294:	cmp	x4, #0x3e
    e298:	csel	x4, x4, x3, ls  // ls = plast
    e29c:	add	x0, x4, #0x2
    e2a0:	lsl	x4, x4, #1
    e2a4:	str	x4, [x6, #8]
    e2a8:	cmp	x7, x0, lsl #3
    e2ac:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    e2b0:	str	x0, [x6, #24]
    e2b4:	cmp	x5, #0x36
    e2b8:	b.eq	e0c8 <__sancov_default_options@@Base+0x1718>  // b.none
    e2bc:	cmp	x5, #0x35
    e2c0:	b.ne	e258 <__sancov_default_options@@Base+0x18a8>  // b.any
    e2c4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e2c8:	ldr	q0, [x0, #1264]
    e2cc:	mov	x0, #0xd400                	// #54272
    e2d0:	add	x1, x19, x0
    e2d4:	add	x0, x19, #0x8, lsl #12
    e2d8:	stur	q0, [x1, #8]
    e2dc:	str	xzr, [x0, #21528]
    e2e0:	b	e0c8 <__sancov_default_options@@Base+0x1718>
    e2e4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    e2e8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e2ec:	add	x2, x2, #0xec8
    e2f0:	add	x0, x0, #0x20
    e2f4:	mov	x4, #0x0                   	// #0
    e2f8:	mov	x3, #0x0                   	// #0
    e2fc:	mov	w1, #0xf6                  	// #246
    e300:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e304:	mov	x0, x19
    e308:	mov	x2, x22
    e30c:	mov	x3, x21
    e310:	bl	e8c0 <__sancov_default_options@@Base+0x1f10>
    e314:	ldr	x0, [x19, x23]
    e318:	b	e194 <__sancov_default_options@@Base+0x17e4>
    e31c:	mov	x2, #0x1                   	// #1
    e320:	mov	x11, x2
    e324:	mov	x12, #0x7c                  	// #124
    e328:	mov	x10, #0x14                  	// #20
    e32c:	mov	x9, #0x100                 	// #256
    e330:	mov	w8, #0x4000                	// #16384
    e334:	mov	x7, #0x3e                  	// #62
    e338:	add	x5, x19, x2, lsl #10
    e33c:	lsl	x6, x2, #4
    e340:	mov	x4, x5
    e344:	mov	x0, #0x14                  	// #20
    e348:	mov	x3, x2
    e34c:	add	x2, x2, #0x1
    e350:	stp	x12, x6, [x5, #8]
    e354:	cmp	x2, #0x36
    e358:	str	x0, [x4, #24]
    e35c:	b.eq	e3cc <__sancov_default_options@@Base+0x1a1c>  // b.none
    e360:	cmp	x2, #0x35
    e364:	b.eq	e3d4 <__sancov_default_options@@Base+0x1a24>  // b.none
    e368:	cmp	x2, #0x10
    e36c:	b.ls	e338 <__sancov_default_options@@Base+0x1988>  // b.plast
    e370:	sub	x0, x3, #0xf
    e374:	add	x4, x4, #0x400
    e378:	and	x6, x0, #0x3
    e37c:	mov	x3, x2
    e380:	lsr	x0, x0, #2
    e384:	add	x2, x2, #0x1
    e388:	lsl	x0, x9, x0
    e38c:	lsr	x5, x0, #2
    e390:	madd	x5, x5, x6, x0
    e394:	str	x5, [x4, #16]
    e398:	udiv	w0, w8, w5
    e39c:	cmp	x0, #0x0
    e3a0:	csel	x0, x0, x11, ne  // ne = any
    e3a4:	cmp	x0, #0x3e
    e3a8:	csel	x0, x0, x7, ls  // ls = plast
    e3ac:	add	x6, x0, #0x2
    e3b0:	lsl	x0, x0, #1
    e3b4:	str	x0, [x4, #8]
    e3b8:	cmp	x5, x6, lsl #3
    e3bc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    e3c0:	str	x0, [x4, #24]
    e3c4:	cmp	x2, #0x36
    e3c8:	b.ne	e360 <__sancov_default_options@@Base+0x19b0>  // b.any
    e3cc:	ldr	x2, [x1, #8]
    e3d0:	b	e188 <__sancov_default_options@@Base+0x17d8>
    e3d4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e3d8:	mov	x2, #0xd400                	// #54272
    e3dc:	add	x2, x19, x2
    e3e0:	ldr	q0, [x0, #1264]
    e3e4:	add	x0, x19, #0x8, lsl #12
    e3e8:	stur	q0, [x2, #8]
    e3ec:	str	xzr, [x0, #21528]
    e3f0:	ldr	x0, [x19, x23]
    e3f4:	ldr	x2, [x1, #8]
    e3f8:	cmp	x0, x2
    e3fc:	b.ne	e194 <__sancov_default_options@@Base+0x17e4>  // b.any
    e400:	b	e304 <__sancov_default_options@@Base+0x1954>
    e404:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e408:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e40c:	mov	x3, x21
    e410:	add	x2, x2, #0x0
    e414:	add	x0, x0, #0x20
    e418:	mov	x4, #0x36                  	// #54
    e41c:	mov	w1, #0xaf                  	// #175
    e420:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e424:	nop
    e428:	stp	x19, x20, [sp, #-80]!
    e42c:	cmp	x2, #0x0
    e430:	stp	x21, x22, [sp, #16]
    e434:	csinc	x22, x2, xzr, ne  // ne = any
    e438:	mov	x21, x1
    e43c:	str	x30, [sp, #64]
    e440:	adds	x1, x3, x22
    e444:	b.cs	e898 <__sancov_default_options@@Base+0x1ee8>  // b.hs, b.nlast
    e448:	stp	x23, x24, [sp, #32]
    e44c:	mov	x19, x3
    e450:	mov	x23, x0
    e454:	cmp	x3, #0x8
    e458:	b.hi	e6a0 <__sancov_default_options@@Base+0x1cf0>  // b.pmore
    e45c:	cmp	x2, #0x20, lsl #12
    e460:	b.hi	e524 <__sancov_default_options@@Base+0x1b74>  // b.pmore
    e464:	cmp	x22, #0x100
    e468:	b.ls	e6d4 <__sancov_default_options@@Base+0x1d24>  // b.plast
    e46c:	clz	x3, x22
    e470:	mov	w20, #0x3f                  	// #63
    e474:	sub	w20, w20, w3
    e478:	mov	w3, #0x1                   	// #1
    e47c:	sub	w1, w20, #0x2
    e480:	lsl	w3, w3, w1
    e484:	sub	w3, w3, #0x1
    e488:	tst	x3, x22
    e48c:	lsr	x3, x22, x1
    e490:	and	x3, x3, #0x3
    e494:	cinc	x3, x3, ne  // ne = any
    e498:	add	x20, x3, w20, sxtw #2
    e49c:	sub	x20, x20, #0x10
    e4a0:	cmp	x20, #0x35
    e4a4:	b.hi	e724 <__sancov_default_options@@Base+0x1d74>  // b.pmore
    e4a8:	lsl	x22, x20, #10
    e4ac:	add	x1, x21, x22
    e4b0:	ldr	x3, [x21, x22]
    e4b4:	cbz	x3, e7b8 <__sancov_default_options@@Base+0x1e08>
    e4b8:	lsl	x20, x20, #7
    e4bc:	add	x1, x21, x22
    e4c0:	add	x0, x20, x3
    e4c4:	mov	x2, #0xd800                	// #55296
    e4c8:	add	x0, x0, #0x2
    e4cc:	sub	x3, x3, #0x1
    e4d0:	add	x2, x21, x2
    e4d4:	str	x3, [x21, x22]
    e4d8:	add	x20, x20, x3
    e4dc:	ldr	x3, [x21, x0, lsl #3]
    e4e0:	add	x20, x20, #0x4
    e4e4:	ldr	x0, [x1, #16]
    e4e8:	ldr	x1, [x2, #16]
    e4ec:	prfm	pldl1keep, [x3]
    e4f0:	add	x1, x1, x0
    e4f4:	ldr	x0, [x21, x20, lsl #3]
    e4f8:	str	x1, [x2, #16]
    e4fc:	cmp	x19, #0x8
    e500:	b.ls	e510 <__sancov_default_options@@Base+0x1b60>  // b.plast
    e504:	sub	x19, x19, #0x1
    e508:	ands	x3, x0, x19
    e50c:	b.ne	e778 <__sancov_default_options@@Base+0x1dc8>  // b.any
    e510:	ldp	x23, x24, [sp, #32]
    e514:	ldp	x21, x22, [sp, #16]
    e518:	ldr	x30, [sp, #64]
    e51c:	ldp	x19, x20, [sp], #80
    e520:	ret
    e524:	stp	x25, x26, [sp, #48]
    e528:	sub	x24, x3, #0x1
    e52c:	tst	x3, x24
    e530:	b.ne	e798 <__sancov_default_options@@Base+0x1de8>  // b.any
    e534:	add	x25, x23, #0x80, lsl #12
    e538:	add	x25, x25, #0xc00
    e53c:	ldr	x2, [x25, #448]
    e540:	sub	x0, x2, #0x1
    e544:	tst	x2, x0
    e548:	b.ne	e714 <__sancov_default_options@@Base+0x1d64>  // b.any
    e54c:	add	x20, x22, x0
    e550:	neg	x0, x2
    e554:	and	x20, x20, x0
    e558:	cmp	x19, x2
    e55c:	add	x20, x20, x2
    e560:	add	x0, x20, x19
    e564:	csel	x20, x0, x20, hi  // hi = pmore
    e568:	cmp	x22, x20
    e56c:	b.hi	e748 <__sancov_default_options@@Base+0x1d98>  // b.pmore
    e570:	adrp	x1, 66000 <_Unwind_Backtrace@GCC_3.3>
    e574:	mov	x0, x20
    e578:	ldr	x1, [x1, #1248]
    e57c:	bl	1a1d8 <__sanitizer_set_report_fd@@Base+0x6908>
    e580:	cbz	x0, e7d8 <__sancov_default_options@@Base+0x1e28>
    e584:	ldr	x1, [x25, #448]
    e588:	sub	x2, x1, #0x1
    e58c:	tst	x0, x2
    e590:	b.ne	e7e8 <__sancov_default_options@@Base+0x1e38>  // b.any
    e594:	add	x21, x0, x1
    e598:	ands	x3, x24, x21
    e59c:	b.eq	e5b0 <__sancov_default_options@@Base+0x1c00>  // b.none
    e5a0:	add	x21, x19, x21
    e5a4:	sub	x21, x21, x3
    e5a8:	tst	x24, x21
    e5ac:	b.ne	e808 <__sancov_default_options@@Base+0x1e58>  // b.any
    e5b0:	tst	x21, x2
    e5b4:	b.ne	e828 <__sancov_default_options@@Base+0x1e78>  // b.any
    e5b8:	add	x3, x21, x22
    e5bc:	cmp	x0, x3
    e5c0:	b.hi	e848 <__sancov_default_options@@Base+0x1e98>  // b.pmore
    e5c4:	add	x4, x0, x20
    e5c8:	cmp	x4, x3
    e5cc:	b.cc	e864 <__sancov_default_options@@Base+0x1eb4>  // b.lo, b.ul, b.last
    e5d0:	sub	x24, x21, x1
    e5d4:	add	x26, x23, #0xc1, lsl #12
    e5d8:	mov	w1, #0x1                   	// #1
    e5dc:	stp	x0, x20, [x24]
    e5e0:	str	x22, [x24, #16]
    e5e4:	ldxrb	w0, [x26]
    e5e8:	stxrb	w2, w1, [x26]
    e5ec:	cbnz	w2, e5e4 <__sancov_default_options@@Base+0x1c34>
    e5f0:	dmb	ish
    e5f4:	tst	w0, #0xff
    e5f8:	b.eq	e604 <__sancov_default_options@@Base+0x1c54>  // b.none
    e5fc:	mov	x0, x26
    e600:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    e604:	add	x25, x25, #0x1c0
    e608:	mov	x0, #0x7fff                	// #32767
    e60c:	add	x1, x25, #0x40, lsl #12
    e610:	ldr	x3, [x1, #16]
    e614:	cmp	x3, x0
    e618:	b.hi	e87c <__sancov_default_options@@Base+0x1ecc>  // b.pmore
    e61c:	clz	x0, x20
    e620:	mov	w2, #0x3f                  	// #63
    e624:	sub	w2, w2, w0
    e628:	add	x5, x3, #0x1
    e62c:	ldp	x0, x4, [x1, #48]
    e630:	add	x23, x23, w2, sxtw #3
    e634:	ldr	x6, [x25, #8]
    e638:	str	x5, [x1, #16]
    e63c:	ldr	x5, [x1, #32]
    e640:	str	x3, [x24, #24]
    e644:	add	x0, x20, x0
    e648:	add	x23, x23, #0xc0, lsl #12
    e64c:	cmp	x4, x0
    e650:	str	x24, [x6, x3, lsl #3]
    e654:	csel	x4, x4, x0, cs  // cs = hs, nlast
    e658:	add	x5, x5, #0x1
    e65c:	strb	wzr, [x1, #24]
    e660:	str	x5, [x1, #32]
    e664:	stp	x0, x4, [x1, #48]
    e668:	ldr	x1, [x23, #3584]
    e66c:	ldr	x0, [x26, #24]
    e670:	add	x1, x1, #0x1
    e674:	str	x1, [x23, #3584]
    e678:	add	x0, x20, x0
    e67c:	str	x0, [x26, #24]
    e680:	ldr	x0, [x26, #32]
    e684:	add	x20, x20, x0
    e688:	str	x20, [x26, #32]
    e68c:	dmb	ish
    e690:	strb	wzr, [x26]
    e694:	mov	x0, x21
    e698:	ldp	x25, x26, [sp, #48]
    e69c:	b	e4fc <__sancov_default_options@@Base+0x1b4c>
    e6a0:	sub	x24, x3, #0x1
    e6a4:	tst	x3, x24
    e6a8:	b.ne	e710 <__sancov_default_options@@Base+0x1d60>  // b.any
    e6ac:	sub	x3, x1, #0x1
    e6b0:	neg	x1, x19
    e6b4:	cmp	x19, #0x20, lsl #12
    e6b8:	and	x1, x3, x1
    e6bc:	mov	x0, #0x20000               	// #131072
    e6c0:	ccmp	x1, x0, #0x2, ls  // ls = plast
    e6c4:	b.hi	e708 <__sancov_default_options@@Base+0x1d58>  // b.pmore
    e6c8:	mov	x22, x1
    e6cc:	cmp	x22, #0x100
    e6d0:	b.hi	e46c <__sancov_default_options@@Base+0x1abc>  // b.pmore
    e6d4:	add	x20, x22, #0xf
    e6d8:	cmp	xzr, x20, lsr #4
    e6dc:	lsr	x20, x20, #4
    e6e0:	b.ne	e4a8 <__sancov_default_options@@Base+0x1af8>  // b.any
    e6e4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e6e8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e6ec:	add	x2, x2, #0x128
    e6f0:	add	x0, x0, #0x20
    e6f4:	mov	x4, #0x0                   	// #0
    e6f8:	mov	x3, #0x0                   	// #0
    e6fc:	mov	w1, #0x9f                  	// #159
    e700:	stp	x25, x26, [sp, #48]
    e704:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e708:	stp	x25, x26, [sp, #48]
    e70c:	b	e534 <__sancov_default_options@@Base+0x1b84>
    e710:	stp	x25, x26, [sp, #48]
    e714:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    e718:	add	x0, x0, #0x970
    e71c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    e720:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    e724:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e728:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e72c:	mov	x3, x20
    e730:	add	x2, x2, #0x0
    e734:	add	x0, x0, #0x20
    e738:	mov	x4, #0x36                  	// #54
    e73c:	mov	w1, #0xa0                  	// #160
    e740:	stp	x25, x26, [sp, #48]
    e744:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e748:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    e74c:	mov	x3, x19
    e750:	mov	x2, x20
    e754:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e758:	ldr	x1, [x1, #4024]
    e75c:	add	x0, x0, #0x190
    e760:	ldr	x1, [x1]
    e764:	bl	1cd78 <OnPrint@@Base+0x398>
    e768:	mov	x0, #0x0                   	// #0
    e76c:	ldp	x23, x24, [sp, #32]
    e770:	ldp	x25, x26, [sp, #48]
    e774:	b	e514 <__sancov_default_options@@Base+0x1b64>
    e778:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e77c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e780:	add	x2, x2, #0x2d8
    e784:	add	x0, x0, #0x318
    e788:	mov	x4, #0x0                   	// #0
    e78c:	mov	w1, #0x42                  	// #66
    e790:	stp	x25, x26, [sp, #48]
    e794:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e798:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    e79c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e7a0:	add	x2, x2, #0xd88
    e7a4:	add	x0, x0, #0x140
    e7a8:	mov	x4, #0x0                   	// #0
    e7ac:	mov	x3, #0x0                   	// #0
    e7b0:	mov	w1, #0x53                  	// #83
    e7b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e7b8:	mov	x2, x23
    e7bc:	mov	x3, x20
    e7c0:	mov	x0, x21
    e7c4:	bl	e0a0 <__sancov_default_options@@Base+0x16f0>
    e7c8:	tst	w0, #0xff
    e7cc:	b.eq	e7dc <__sancov_default_options@@Base+0x1e2c>  // b.none
    e7d0:	ldr	x3, [x21, x22]
    e7d4:	b	e4b8 <__sancov_default_options@@Base+0x1b08>
    e7d8:	ldp	x25, x26, [sp, #48]
    e7dc:	mov	x0, #0x0                   	// #0
    e7e0:	ldp	x23, x24, [sp, #32]
    e7e4:	b	e514 <__sancov_default_options@@Base+0x1b64>
    e7e8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e7ec:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e7f0:	add	x2, x2, #0x1f8
    e7f4:	add	x0, x0, #0x140
    e7f8:	mov	x4, #0x0                   	// #0
    e7fc:	mov	x3, #0x0                   	// #0
    e800:	mov	w1, #0x62                  	// #98
    e804:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e808:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e80c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e810:	add	x2, x2, #0x228
    e814:	add	x0, x0, #0x140
    e818:	mov	x4, #0x0                   	// #0
    e81c:	mov	x3, #0x0                   	// #0
    e820:	mov	w1, #0x68                  	// #104
    e824:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e828:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e82c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e830:	add	x2, x2, #0x250
    e834:	add	x0, x0, #0x140
    e838:	mov	x4, #0x0                   	// #0
    e83c:	mov	x3, #0x0                   	// #0
    e840:	mov	w1, #0x69                  	// #105
    e844:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e848:	mov	x4, x0
    e84c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e850:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e854:	add	x2, x2, #0x278
    e858:	add	x0, x0, #0x140
    e85c:	mov	w1, #0x6a                  	// #106
    e860:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e864:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e868:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e86c:	add	x2, x2, #0x298
    e870:	add	x0, x0, #0x140
    e874:	mov	w1, #0x6b                  	// #107
    e878:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e87c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e880:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e884:	add	x2, x2, #0x2b8
    e888:	add	x0, x0, #0x140
    e88c:	mov	x4, #0x8000                	// #32768
    e890:	mov	w1, #0x15                  	// #21
    e894:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    e898:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    e89c:	mov	x2, x22
    e8a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    e8a4:	add	x0, x0, #0xc8
    e8a8:	ldr	x1, [x1, #4024]
    e8ac:	ldr	x1, [x1]
    e8b0:	bl	1cd78 <OnPrint@@Base+0x398>
    e8b4:	mov	x0, #0x0                   	// #0
    e8b8:	b	e514 <__sancov_default_options@@Base+0x1b64>
    e8bc:	nop
    e8c0:	stp	x19, x20, [sp, #-80]!
    e8c4:	stp	x23, x24, [sp, #32]
    e8c8:	mov	x23, x1
    e8cc:	add	x1, x0, x3, lsl #10
    e8d0:	stp	x25, x26, [sp, #48]
    e8d4:	mov	x24, x3
    e8d8:	mov	x25, x2
    e8dc:	ldp	x20, x19, [x23]
    e8e0:	stp	x21, x22, [sp, #16]
    e8e4:	ldr	x26, [x1, #24]
    e8e8:	str	x30, [sp, #72]
    e8ec:	lsr	x19, x19, #1
    e8f0:	cmp	x19, x20
    e8f4:	csel	x19, x19, x20, ls  // ls = plast
    e8f8:	sub	x21, x20, x19
    e8fc:	cbnz	x26, e9b4 <__sancov_default_options@@Base+0x2004>
    e900:	add	x0, x21, #0x4
    e904:	ldr	x2, [x23, x0, lsl #3]
    e908:	cbz	x2, ea40 <__sancov_default_options@@Base+0x2090>
    e90c:	add	x5, x21, #0x4
    e910:	str	x19, [x2, #8]
    e914:	add	x5, x23, x5, lsl #3
    e918:	cbz	x19, e988 <__sancov_default_options@@Base+0x1fd8>
    e91c:	add	x0, x20, #0x6
    e920:	add	x4, x20, #0x4
    e924:	sub	x0, x0, x19
    e928:	sub	x4, x4, x19
    e92c:	add	x7, x2, #0x10
    e930:	add	x1, x2, #0x20
    e934:	add	x0, x23, x0, lsl #3
    e938:	add	x4, x23, x4, lsl #3
    e93c:	cmp	x7, x0
    e940:	sub	x0, x19, #0x1
    e944:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
    e948:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
    e94c:	b.ls	ea20 <__sancov_default_options@@Base+0x2070>  // b.plast
    e950:	lsr	x6, x19, #1
    e954:	mov	x0, #0x0                   	// #0
    e958:	lsl	x6, x6, #4
    e95c:	nop
    e960:	ldr	q0, [x4, x0]
    e964:	str	q0, [x7, x0]
    e968:	add	x0, x0, #0x10
    e96c:	cmp	x0, x6
    e970:	b.ne	e960 <__sancov_default_options@@Base+0x1fb0>  // b.any
    e974:	and	x0, x19, #0xfffffffffffffffe
    e978:	tbz	w19, #0, e988 <__sancov_default_options@@Base+0x1fd8>
    e97c:	add	x4, x0, #0x2
    e980:	ldr	x0, [x5, x0, lsl #3]
    e984:	str	x0, [x2, x4, lsl #3]
    e988:	ldr	x3, [x23]
    e98c:	mov	x0, x25
    e990:	ldp	x21, x22, [sp, #16]
    e994:	sub	x19, x3, x19
    e998:	ldp	x25, x26, [sp, #48]
    e99c:	mov	x1, x24
    e9a0:	ldr	x30, [sp, #72]
    e9a4:	str	x19, [x23]
    e9a8:	ldp	x23, x24, [sp, #32]
    e9ac:	ldp	x19, x20, [sp], #80
    e9b0:	b	d930 <__sancov_default_options@@Base+0xf80>
    e9b4:	str	x27, [sp, #64]
    e9b8:	cmp	x26, #0x35
    e9bc:	b.hi	ea60 <__sancov_default_options@@Base+0x20b0>  // b.pmore
    e9c0:	lsl	x27, x26, #10
    e9c4:	mov	x22, x0
    e9c8:	add	x1, x0, x27
    e9cc:	ldr	x3, [x0, x27]
    e9d0:	cbz	x3, ea80 <__sancov_default_options@@Base+0x20d0>
    e9d4:	lsl	x26, x26, #7
    e9d8:	add	x2, x22, x27
    e9dc:	add	x0, x26, x3
    e9e0:	mov	x1, #0xd800                	// #55296
    e9e4:	add	x0, x0, #0x2
    e9e8:	sub	x3, x3, #0x1
    e9ec:	add	x1, x22, x1
    e9f0:	str	x3, [x22, x27]
    e9f4:	add	x26, x26, x3
    e9f8:	ldr	x3, [x22, x0, lsl #3]
    e9fc:	add	x26, x26, #0x4
    ea00:	ldr	x2, [x2, #16]
    ea04:	ldr	x0, [x1, #16]
    ea08:	prfm	pldl1keep, [x3]
    ea0c:	add	x0, x0, x2
    ea10:	ldr	x2, [x22, x26, lsl #3]
    ea14:	ldr	x27, [sp, #64]
    ea18:	str	x0, [x1, #16]
    ea1c:	b	e908 <__sancov_default_options@@Base+0x1f58>
    ea20:	mov	x0, #0x0                   	// #0
    ea24:	nop
    ea28:	ldr	x1, [x5, x0, lsl #3]
    ea2c:	str	x1, [x7, x0, lsl #3]
    ea30:	add	x0, x0, #0x1
    ea34:	cmp	x19, x0
    ea38:	b.ne	ea28 <__sancov_default_options@@Base+0x2078>  // b.any
    ea3c:	b	e988 <__sancov_default_options@@Base+0x1fd8>
    ea40:	str	x27, [sp, #64]
    ea44:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    ea48:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ea4c:	add	x0, x0, #0x368
    ea50:	ldr	x1, [x1, #4024]
    ea54:	ldr	x1, [x1]
    ea58:	bl	1cd78 <OnPrint@@Base+0x398>
    ea5c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    ea60:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ea64:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ea68:	mov	x3, x26
    ea6c:	add	x2, x2, #0x0
    ea70:	add	x0, x0, #0x20
    ea74:	mov	x4, #0x36                  	// #54
    ea78:	mov	w1, #0xa0                  	// #160
    ea7c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ea80:	mov	x3, x26
    ea84:	bl	e0a0 <__sancov_default_options@@Base+0x16f0>
    ea88:	tst	w0, #0xff
    ea8c:	b.eq	ea44 <__sancov_default_options@@Base+0x2094>  // b.none
    ea90:	ldr	x3, [x22, x27]
    ea94:	b	e9d4 <__sancov_default_options@@Base+0x2024>
    ea98:	stp	x19, x20, [sp, #-64]!
    ea9c:	stp	x23, x24, [sp, #32]
    eaa0:	mov	x23, x3
    eaa4:	mov	x24, x4
    eaa8:	str	x30, [sp, #56]
    eaac:	cbz	x2, ed58 <__sancov_default_options@@Base+0x23a8>
    eab0:	stp	x21, x22, [sp, #16]
    eab4:	mov	x19, x2
    eab8:	mov	x20, x0
    eabc:	mov	x22, x1
    eac0:	cbz	x3, ed70 <__sancov_default_options@@Base+0x23c0>
    eac4:	str	x25, [sp, #48]
    eac8:	mov	x0, #0xffffffffffff        	// #281474976710655
    eacc:	cmp	x2, x0
    ead0:	b.ls	ece8 <__sancov_default_options@@Base+0x2338>  // b.plast
    ead4:	add	x25, x20, #0xc1, lsl #12
    ead8:	mov	w2, #0x1                   	// #1
    eadc:	ldxrb	w1, [x25]
    eae0:	stxrb	w0, w2, [x25]
    eae4:	cbnz	w0, eadc <__sancov_default_options@@Base+0x212c>
    eae8:	dmb	ish
    eaec:	tst	w1, #0xff
    eaf0:	b.eq	eafc <__sancov_default_options@@Base+0x214c>  // b.none
    eaf4:	mov	x0, x25
    eaf8:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    eafc:	add	x21, x20, #0x80, lsl #12
    eb00:	add	x21, x21, #0xc00
    eb04:	add	x1, x21, #0x1c0
    eb08:	add	x2, x1, #0x40, lsl #12
    eb0c:	ldr	x7, [x2, #16]
    eb10:	cbz	x7, ed30 <__sancov_default_options@@Base+0x2380>
    eb14:	ldr	x6, [x1, #8]
    eb18:	mov	x3, #0x0                   	// #0
    eb1c:	add	x8, x6, x7, lsl #3
    eb20:	ldr	x7, [x6]
    eb24:	cmp	x19, x7
    eb28:	b.cc	eb3c <__sancov_default_options@@Base+0x218c>  // b.lo, b.ul, b.last
    eb2c:	sub	x2, x19, x3
    eb30:	sub	x1, x19, x7
    eb34:	cmp	x2, x1
    eb38:	csel	x3, x3, x7, ls  // ls = plast
    eb3c:	add	x6, x6, #0x8
    eb40:	cmp	x6, x8
    eb44:	b.ne	eb20 <__sancov_default_options@@Base+0x2170>  // b.any
    eb48:	cbz	x3, ed30 <__sancov_default_options@@Base+0x2380>
    eb4c:	ldr	x4, [x3]
    eb50:	cmp	x4, x3
    eb54:	b.hi	f01c <__sancov_default_options@@Base+0x266c>  // b.pmore
    eb58:	ldr	x0, [x3, #8]
    eb5c:	add	x4, x4, x0
    eb60:	cmp	x4, x3
    eb64:	b.ls	f034 <__sancov_default_options@@Base+0x2684>  // b.plast
    eb68:	cmp	x19, x3
    eb6c:	b.cc	f04c <__sancov_default_options@@Base+0x269c>  // b.lo, b.ul, b.last
    eb70:	cmp	x4, x19
    eb74:	b.ls	ed30 <__sancov_default_options@@Base+0x2380>  // b.plast
    eb78:	ldr	x0, [x21, #448]
    eb7c:	sub	x1, x0, #0x1
    eb80:	tst	x1, x3
    eb84:	b.ne	ef90 <__sancov_default_options@@Base+0x25e0>  // b.any
    eb88:	dmb	ish
    eb8c:	strb	wzr, [x25]
    eb90:	cmn	x0, x3
    eb94:	b.eq	ed38 <__sancov_default_options@@Base+0x2388>  // b.none
    eb98:	mov	x0, #0xffffffffffff        	// #281474976710655
    eb9c:	cmp	x19, x0
    eba0:	b.ls	eed8 <__sancov_default_options@@Base+0x2528>  // b.plast
    eba4:	ldr	x1, [x21, #448]
    eba8:	sub	x0, x1, #0x1
    ebac:	tst	x19, x0
    ebb0:	b.ne	ef70 <__sancov_default_options@@Base+0x25c0>  // b.any
    ebb4:	sub	x2, x19, x1
    ebb8:	tst	x1, x0
    ebbc:	ldr	x5, [x2, #16]
    ebc0:	b.ne	f068 <__sancov_default_options@@Base+0x26b8>  // b.any
    ebc4:	add	x5, x5, x0
    ebc8:	neg	x0, x1
    ebcc:	and	x0, x5, x0
    ebd0:	cmp	x0, x23
    ebd4:	csel	x21, x0, x23, ls  // ls = plast
    ebd8:	mov	x2, x23
    ebdc:	mov	x3, x24
    ebe0:	mov	x1, x22
    ebe4:	mov	x0, x20
    ebe8:	bl	e428 <__sancov_default_options@@Base+0x1a78>
    ebec:	mov	x23, x0
    ebf0:	cbz	x0, ec00 <__sancov_default_options@@Base+0x2250>
    ebf4:	mov	x2, x21
    ebf8:	mov	x1, x19
    ebfc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    ec00:	mov	x0, #0xffffffffffff        	// #281474976710655
    ec04:	cmp	x19, x0
    ec08:	b.ls	eee4 <__sancov_default_options@@Base+0x2534>  // b.plast
    ec0c:	add	x21, x20, #0x80, lsl #12
    ec10:	add	x21, x21, #0xc00
    ec14:	ldr	x4, [x21, #448]
    ec18:	sub	x0, x4, #0x1
    ec1c:	tst	x19, x0
    ec20:	b.ne	ef70 <__sancov_default_options@@Base+0x25c0>  // b.any
    ec24:	sub	x19, x19, x4
    ec28:	add	x25, x20, #0xc1, lsl #12
    ec2c:	mov	w1, #0x1                   	// #1
    ec30:	ldxrb	w0, [x25]
    ec34:	stxrb	w2, w1, [x25]
    ec38:	cbnz	w2, ec30 <__sancov_default_options@@Base+0x2280>
    ec3c:	dmb	ish
    ec40:	tst	w0, #0xff
    ec44:	b.eq	ec50 <__sancov_default_options@@Base+0x22a0>  // b.none
    ec48:	mov	x0, x25
    ec4c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    ec50:	ldr	x0, [x19, #24]
    ec54:	add	x21, x21, #0x1c0
    ec58:	ldr	x2, [x21, #8]
    ec5c:	ldr	x3, [x2, x0, lsl #3]
    ec60:	cmp	x3, x19
    ec64:	b.ne	f078 <__sancov_default_options@@Base+0x26c8>  // b.any
    ec68:	add	x21, x21, #0x40, lsl #12
    ec6c:	ldr	x4, [x21, #16]
    ec70:	cmp	x0, x4
    ec74:	b.cs	f094 <__sancov_default_options@@Base+0x26e4>  // b.hs, b.nlast
    ec78:	sub	x4, x4, #0x1
    ec7c:	ldr	x3, [x19, #8]
    ec80:	ldr	x5, [x2, x4, lsl #3]
    ec84:	str	x4, [x21, #16]
    ec88:	str	x5, [x2, x0, lsl #3]
    ec8c:	ldp	x4, x2, [x21, #40]
    ec90:	str	x0, [x5, #24]
    ec94:	ldr	x0, [x25, #24]
    ec98:	strb	wzr, [x21, #24]
    ec9c:	sub	x0, x0, x3
    eca0:	sub	x2, x2, x3
    eca4:	add	x4, x4, #0x1
    eca8:	stp	x4, x2, [x21, #40]
    ecac:	str	x0, [x25, #24]
    ecb0:	ldr	x0, [x25, #32]
    ecb4:	sub	x0, x0, x3
    ecb8:	str	x0, [x25, #32]
    ecbc:	dmb	ish
    ecc0:	strb	wzr, [x25]
    ecc4:	ldp	x0, x1, [x19]
    ecc8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    eccc:	ldr	x25, [sp, #48]
    ecd0:	mov	x0, x23
    ecd4:	ldp	x21, x22, [sp, #16]
    ecd8:	ldp	x23, x24, [sp, #32]
    ecdc:	ldr	x30, [sp, #56]
    ece0:	ldp	x19, x20, [sp], #64
    ece4:	ret
    ece8:	lsr	x0, x2, #32
    ecec:	ldr	x1, [x20, x0, lsl #3]
    ecf0:	dmb	ish
    ecf4:	cbz	x1, ead4 <__sancov_default_options@@Base+0x2124>
    ecf8:	lsr	w2, w2, #20
    ecfc:	lsr	x3, x19, #20
    ed00:	ldrb	w1, [x1, x2]
    ed04:	cbz	w1, ead4 <__sancov_default_options@@Base+0x2124>
    ed08:	lsl	x1, x0, #3
    ed0c:	ldr	x0, [x20, x0, lsl #3]
    ed10:	dmb	ish
    ed14:	cbz	x0, ed24 <__sancov_default_options@@Base+0x2374>
    ed18:	and	x3, x3, #0xfff
    ed1c:	ldrb	w0, [x0, x3]
    ed20:	cbnz	w0, efb0 <__sancov_default_options@@Base+0x2600>
    ed24:	add	x21, x20, #0x80, lsl #12
    ed28:	add	x21, x21, #0xc00
    ed2c:	b	eba4 <__sancov_default_options@@Base+0x21f4>
    ed30:	dmb	ish
    ed34:	strb	wzr, [x25]
    ed38:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ed3c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ed40:	add	x2, x2, #0x4c8
    ed44:	add	x0, x0, #0x318
    ed48:	mov	x4, #0x0                   	// #0
    ed4c:	mov	x3, #0x0                   	// #0
    ed50:	mov	w1, #0x62                  	// #98
    ed54:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ed58:	mov	x2, x23
    ed5c:	mov	x3, x4
    ed60:	ldp	x23, x24, [sp, #32]
    ed64:	ldr	x30, [sp, #56]
    ed68:	ldp	x19, x20, [sp], #64
    ed6c:	b	e428 <__sancov_default_options@@Base+0x1a78>
    ed70:	mov	x0, #0xffffffffffff        	// #281474976710655
    ed74:	cmp	x2, x0
    ed78:	b.hi	ee08 <__sancov_default_options@@Base+0x2458>  // b.pmore
    ed7c:	lsr	x1, x2, #32
    ed80:	ldr	x0, [x20, x1, lsl #3]
    ed84:	dmb	ish
    ed88:	cbz	x0, ee08 <__sancov_default_options@@Base+0x2458>
    ed8c:	lsr	w2, w2, #20
    ed90:	ldrb	w0, [x0, x2]
    ed94:	cbz	w0, ee08 <__sancov_default_options@@Base+0x2458>
    ed98:	ldr	x0, [x20, x1, lsl #3]
    ed9c:	dmb	ish
    eda0:	cbz	x0, f0c0 <__sancov_default_options@@Base+0x2710>
    eda4:	ldrb	w21, [x0, x2]
    eda8:	cbz	x21, f0c0 <__sancov_default_options@@Base+0x2710>
    edac:	cmp	x21, #0x35
    edb0:	b.hi	f104 <__sancov_default_options@@Base+0x2754>  // b.pmore
    edb4:	lsl	x23, x21, #10
    edb8:	add	x1, x22, x23
    edbc:	ldr	x2, [x1, #8]
    edc0:	cbz	x2, f238 <__sancov_default_options@@Base+0x2888>
    edc4:	ldr	x0, [x22, x23]
    edc8:	cmp	x0, x2
    edcc:	b.eq	f220 <__sancov_default_options@@Base+0x2870>  // b.none
    edd0:	add	x1, x0, x21, lsl #7
    edd4:	add	x3, x22, x23
    edd8:	add	x1, x1, #0x4
    eddc:	add	x0, x0, #0x1
    ede0:	mov	x5, #0xd800                	// #55296
    ede4:	add	x2, x22, x5
    ede8:	str	x0, [x22, x23]
    edec:	mov	x23, #0x0                   	// #0
    edf0:	str	x19, [x22, x1, lsl #3]
    edf4:	ldr	x0, [x2, #16]
    edf8:	ldr	x1, [x3, #16]
    edfc:	sub	x0, x0, x1
    ee00:	str	x0, [x2, #16]
    ee04:	b	ecd0 <__sancov_default_options@@Base+0x2320>
    ee08:	add	x21, x20, #0x80, lsl #12
    ee0c:	add	x21, x21, #0xc00
    ee10:	ldr	x4, [x21, #448]
    ee14:	str	x25, [sp, #48]
    ee18:	sub	x0, x4, #0x1
    ee1c:	tst	x19, x0
    ee20:	b.ne	ef70 <__sancov_default_options@@Base+0x25c0>  // b.any
    ee24:	sub	x19, x19, x4
    ee28:	add	x25, x20, #0xc1, lsl #12
    ee2c:	mov	w1, #0x1                   	// #1
    ee30:	ldxrb	w0, [x25]
    ee34:	stxrb	w2, w1, [x25]
    ee38:	cbnz	w2, ee30 <__sancov_default_options@@Base+0x2480>
    ee3c:	dmb	ish
    ee40:	tst	w0, #0xff
    ee44:	b.eq	ee50 <__sancov_default_options@@Base+0x24a0>  // b.none
    ee48:	mov	x0, x25
    ee4c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
    ee50:	ldr	x0, [x19, #24]
    ee54:	add	x21, x21, #0x1c0
    ee58:	ldr	x2, [x21, #8]
    ee5c:	ldr	x3, [x2, x0, lsl #3]
    ee60:	cmp	x3, x19
    ee64:	b.ne	f078 <__sancov_default_options@@Base+0x26c8>  // b.any
    ee68:	add	x21, x21, #0x40, lsl #12
    ee6c:	ldr	x4, [x21, #16]
    ee70:	cmp	x0, x4
    ee74:	b.cs	f094 <__sancov_default_options@@Base+0x26e4>  // b.hs, b.nlast
    ee78:	sub	x4, x4, #0x1
    ee7c:	ldr	x3, [x19, #8]
    ee80:	ldr	x5, [x2, x4, lsl #3]
    ee84:	str	x4, [x21, #16]
    ee88:	str	x5, [x2, x0, lsl #3]
    ee8c:	ldp	x4, x2, [x21, #40]
    ee90:	str	x0, [x5, #24]
    ee94:	ldr	x0, [x25, #24]
    ee98:	strb	wzr, [x21, #24]
    ee9c:	sub	x0, x0, x3
    eea0:	sub	x2, x2, x3
    eea4:	add	x4, x4, #0x1
    eea8:	stp	x4, x2, [x21, #40]
    eeac:	str	x0, [x25, #24]
    eeb0:	ldr	x0, [x25, #32]
    eeb4:	sub	x0, x0, x3
    eeb8:	str	x0, [x25, #32]
    eebc:	dmb	ish
    eec0:	strb	wzr, [x25]
    eec4:	ldp	x0, x1, [x19]
    eec8:	mov	x23, #0x0                   	// #0
    eecc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
    eed0:	ldr	x25, [sp, #48]
    eed4:	b	ecd0 <__sancov_default_options@@Base+0x2320>
    eed8:	lsr	x3, x19, #20
    eedc:	lsr	x0, x19, #32
    eee0:	b	ed08 <__sancov_default_options@@Base+0x2358>
    eee4:	lsr	x1, x19, #32
    eee8:	ldr	x0, [x20, x1, lsl #3]
    eeec:	dmb	ish
    eef0:	cbz	x0, ec0c <__sancov_default_options@@Base+0x225c>
    eef4:	lsr	w2, w19, #20
    eef8:	ldrb	w0, [x0, x2]
    eefc:	cbz	w0, ec0c <__sancov_default_options@@Base+0x225c>
    ef00:	ldr	x0, [x20, x1, lsl #3]
    ef04:	dmb	ish
    ef08:	cbz	x0, f0c4 <__sancov_default_options@@Base+0x2714>
    ef0c:	ldrb	w21, [x0, x2]
    ef10:	cbz	x21, f0c4 <__sancov_default_options@@Base+0x2714>
    ef14:	cmp	x21, #0x35
    ef18:	b.hi	f108 <__sancov_default_options@@Base+0x2758>  // b.pmore
    ef1c:	lsl	x24, x21, #10
    ef20:	add	x1, x22, x24
    ef24:	ldr	x2, [x1, #8]
    ef28:	cbz	x2, f140 <__sancov_default_options@@Base+0x2790>
    ef2c:	ldr	x0, [x22, x24]
    ef30:	cmp	x0, x2
    ef34:	b.eq	f128 <__sancov_default_options@@Base+0x2778>  // b.none
    ef38:	add	x1, x0, x21, lsl #7
    ef3c:	add	x3, x22, x24
    ef40:	add	x1, x1, #0x4
    ef44:	add	x0, x0, #0x1
    ef48:	mov	x4, #0xd800                	// #55296
    ef4c:	add	x2, x22, x4
    ef50:	str	x0, [x22, x24]
    ef54:	str	x19, [x22, x1, lsl #3]
    ef58:	ldr	x0, [x2, #16]
    ef5c:	ldr	x1, [x3, #16]
    ef60:	ldr	x25, [sp, #48]
    ef64:	sub	x0, x0, x1
    ef68:	str	x0, [x2, #16]
    ef6c:	b	ecd0 <__sancov_default_options@@Base+0x2320>
    ef70:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ef74:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ef78:	add	x2, x2, #0x3b8
    ef7c:	add	x0, x0, #0x140
    ef80:	mov	x4, #0x0                   	// #0
    ef84:	mov	x3, #0x0                   	// #0
    ef88:	mov	w1, #0x123                 	// #291
    ef8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    ef90:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ef94:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    ef98:	add	x2, x2, #0x498
    ef9c:	add	x0, x0, #0x140
    efa0:	mov	x4, #0x0                   	// #0
    efa4:	mov	x3, #0x0                   	// #0
    efa8:	mov	w1, #0x12b                 	// #299
    efac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    efb0:	ldr	x0, [x20, x1]
    efb4:	dmb	ish
    efb8:	cbz	x0, f0e4 <__sancov_default_options@@Base+0x2734>
    efbc:	ldrb	w0, [x0, x3]
    efc0:	cbz	w0, f0e4 <__sancov_default_options@@Base+0x2734>
    efc4:	ldr	x21, [x20, x1]
    efc8:	dmb	ish
    efcc:	cbz	x21, ebd8 <__sancov_default_options@@Base+0x2228>
    efd0:	ldrb	w0, [x21, x3]
    efd4:	cmp	w0, #0x35
    efd8:	and	x1, x0, #0xff
    efdc:	b.eq	f0b0 <__sancov_default_options@@Base+0x2700>  // b.none
    efe0:	ubfiz	x0, x0, #4, #8
    efe4:	cmp	x0, x23
    efe8:	csel	x21, x0, x23, ls  // ls = plast
    efec:	cmp	x1, #0x10
    eff0:	b.ls	ebd8 <__sancov_default_options@@Base+0x2228>  // b.plast
    eff4:	sub	x1, x1, #0x10
    eff8:	mov	x0, #0x100                 	// #256
    effc:	and	x21, x1, #0x3
    f000:	lsr	x1, x1, #2
    f004:	lsl	x1, x0, x1
    f008:	lsr	x0, x1, #2
    f00c:	madd	x0, x0, x21, x1
    f010:	cmp	x0, x23
    f014:	csel	x21, x0, x23, ls  // ls = plast
    f018:	b	ebd8 <__sancov_default_options@@Base+0x2228>
    f01c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f020:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f024:	add	x2, x2, #0x418
    f028:	add	x0, x0, #0x140
    f02c:	mov	w1, #0xc1                  	// #193
    f030:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f034:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f038:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f03c:	add	x2, x2, #0x440
    f040:	add	x0, x0, #0x140
    f044:	mov	w1, #0xc2                  	// #194
    f048:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f04c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f050:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f054:	mov	x4, x19
    f058:	add	x2, x2, #0x478
    f05c:	add	x0, x0, #0x140
    f060:	mov	w1, #0xc3                  	// #195
    f064:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f068:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    f06c:	add	x0, x0, #0x970
    f070:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    f074:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f078:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f07c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f080:	mov	x4, x19
    f084:	add	x2, x2, #0x3e0
    f088:	add	x0, x0, #0x140
    f08c:	mov	w1, #0x88                  	// #136
    f090:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f094:	mov	x3, x0
    f098:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f09c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f0a0:	add	x2, x2, #0x400
    f0a4:	add	x0, x0, #0x140
    f0a8:	mov	w1, #0x89                  	// #137
    f0ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f0b0:	cmp	x23, #0x200
    f0b4:	mov	x0, #0x200                 	// #512
    f0b8:	csel	x21, x23, x0, ls  // ls = plast
    f0bc:	b	ebd8 <__sancov_default_options@@Base+0x2228>
    f0c0:	str	x25, [sp, #48]
    f0c4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f0c8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f0cc:	add	x2, x2, #0x128
    f0d0:	add	x0, x0, #0x20
    f0d4:	mov	x4, #0x0                   	// #0
    f0d8:	mov	x3, #0x0                   	// #0
    f0dc:	mov	w1, #0xae                  	// #174
    f0e0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f0e4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f0e8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
    f0ec:	add	x2, x2, #0x4c8
    f0f0:	add	x0, x0, #0xee0
    f0f4:	mov	x4, #0x0                   	// #0
    f0f8:	mov	x3, #0x0                   	// #0
    f0fc:	mov	w1, #0xcc                  	// #204
    f100:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f104:	str	x25, [sp, #48]
    f108:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f10c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f110:	mov	x3, x21
    f114:	add	x2, x2, #0x0
    f118:	add	x0, x0, #0x20
    f11c:	mov	x4, #0x36                  	// #54
    f120:	mov	w1, #0xaf                  	// #175
    f124:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f128:	mov	x0, x22
    f12c:	mov	x2, x20
    f130:	mov	x3, x21
    f134:	bl	e8c0 <__sancov_default_options@@Base+0x1f10>
    f138:	ldr	x0, [x22, x24]
    f13c:	b	ef38 <__sancov_default_options@@Base+0x2588>
    f140:	mov	x2, #0x1                   	// #1
    f144:	mov	x11, x2
    f148:	mov	x12, #0x7c                  	// #124
    f14c:	mov	x10, #0x14                  	// #20
    f150:	mov	x9, #0x100                 	// #256
    f154:	mov	w8, #0x4000                	// #16384
    f158:	mov	x7, #0x3e                  	// #62
    f15c:	nop
    f160:	add	x5, x22, x2, lsl #10
    f164:	lsl	x6, x2, #4
    f168:	mov	x4, x5
    f16c:	mov	x0, #0x14                  	// #20
    f170:	mov	x3, x2
    f174:	add	x2, x2, #0x1
    f178:	stp	x12, x6, [x5, #8]
    f17c:	cmp	x2, #0x36
    f180:	str	x0, [x4, #24]
    f184:	b.eq	f1f4 <__sancov_default_options@@Base+0x2844>  // b.none
    f188:	cmp	x2, #0x35
    f18c:	b.eq	f1fc <__sancov_default_options@@Base+0x284c>  // b.none
    f190:	cmp	x2, #0x10
    f194:	b.ls	f160 <__sancov_default_options@@Base+0x27b0>  // b.plast
    f198:	sub	x0, x3, #0xf
    f19c:	add	x4, x4, #0x400
    f1a0:	and	x6, x0, #0x3
    f1a4:	mov	x3, x2
    f1a8:	lsr	x0, x0, #2
    f1ac:	add	x2, x2, #0x1
    f1b0:	lsl	x0, x9, x0
    f1b4:	lsr	x5, x0, #2
    f1b8:	madd	x5, x5, x6, x0
    f1bc:	str	x5, [x4, #16]
    f1c0:	udiv	w0, w8, w5
    f1c4:	cmp	x0, #0x0
    f1c8:	csel	x0, x0, x11, ne  // ne = any
    f1cc:	cmp	x0, #0x3e
    f1d0:	csel	x0, x0, x7, ls  // ls = plast
    f1d4:	add	x6, x0, #0x2
    f1d8:	lsl	x0, x0, #1
    f1dc:	str	x0, [x4, #8]
    f1e0:	cmp	x5, x6, lsl #3
    f1e4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    f1e8:	str	x0, [x4, #24]
    f1ec:	cmp	x2, #0x36
    f1f0:	b.ne	f188 <__sancov_default_options@@Base+0x27d8>  // b.any
    f1f4:	ldr	x2, [x1, #8]
    f1f8:	b	ef2c <__sancov_default_options@@Base+0x257c>
    f1fc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f200:	ldr	q0, [x0, #1264]
    f204:	mov	x0, #0xd400                	// #54272
    f208:	add	x2, x22, x0
    f20c:	add	x0, x22, #0x8, lsl #12
    f210:	stur	q0, [x2, #8]
    f214:	str	xzr, [x0, #21528]
    f218:	ldr	x2, [x1, #8]
    f21c:	b	ef2c <__sancov_default_options@@Base+0x257c>
    f220:	mov	x0, x22
    f224:	mov	x2, x20
    f228:	mov	x3, x21
    f22c:	bl	e8c0 <__sancov_default_options@@Base+0x1f10>
    f230:	ldr	x0, [x22, x23]
    f234:	b	edd0 <__sancov_default_options@@Base+0x2420>
    f238:	mov	x2, #0x1                   	// #1
    f23c:	mov	x11, x2
    f240:	mov	x12, #0x7c                  	// #124
    f244:	mov	x10, #0x14                  	// #20
    f248:	mov	x9, #0x100                 	// #256
    f24c:	mov	w8, #0x4000                	// #16384
    f250:	mov	x7, #0x3e                  	// #62
    f254:	nop
    f258:	add	x5, x22, x2, lsl #10
    f25c:	lsl	x6, x2, #4
    f260:	mov	x4, x5
    f264:	mov	x0, #0x14                  	// #20
    f268:	mov	x3, x2
    f26c:	add	x2, x2, #0x1
    f270:	stp	x12, x6, [x5, #8]
    f274:	cmp	x2, #0x36
    f278:	str	x0, [x4, #24]
    f27c:	b.eq	f2ec <__sancov_default_options@@Base+0x293c>  // b.none
    f280:	cmp	x2, #0x35
    f284:	b.eq	f2f4 <__sancov_default_options@@Base+0x2944>  // b.none
    f288:	cmp	x2, #0x10
    f28c:	b.ls	f258 <__sancov_default_options@@Base+0x28a8>  // b.plast
    f290:	sub	x0, x3, #0xf
    f294:	add	x4, x4, #0x400
    f298:	and	x6, x0, #0x3
    f29c:	mov	x3, x2
    f2a0:	lsr	x0, x0, #2
    f2a4:	add	x2, x2, #0x1
    f2a8:	lsl	x0, x9, x0
    f2ac:	lsr	x5, x0, #2
    f2b0:	madd	x5, x5, x6, x0
    f2b4:	str	x5, [x4, #16]
    f2b8:	udiv	w0, w8, w5
    f2bc:	cmp	x0, #0x0
    f2c0:	csel	x0, x0, x11, ne  // ne = any
    f2c4:	cmp	x0, #0x3e
    f2c8:	csel	x0, x0, x7, ls  // ls = plast
    f2cc:	add	x6, x0, #0x2
    f2d0:	lsl	x0, x0, #1
    f2d4:	str	x0, [x4, #8]
    f2d8:	cmp	x5, x6, lsl #3
    f2dc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    f2e0:	str	x0, [x4, #24]
    f2e4:	cmp	x2, #0x36
    f2e8:	b.ne	f280 <__sancov_default_options@@Base+0x28d0>  // b.any
    f2ec:	ldr	x2, [x1, #8]
    f2f0:	b	edc4 <__sancov_default_options@@Base+0x2414>
    f2f4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f2f8:	mov	x2, #0xd400                	// #54272
    f2fc:	add	x2, x22, x2
    f300:	ldr	q0, [x0, #1264]
    f304:	add	x0, x22, #0x8, lsl #12
    f308:	stur	q0, [x2, #8]
    f30c:	str	xzr, [x0, #21528]
    f310:	ldr	x2, [x1, #8]
    f314:	b	edc4 <__sancov_default_options@@Base+0x2414>
    f318:	str	x30, [sp, #-16]!
    f31c:	bl	6790 <__errno_location@plt>
    f320:	mov	w1, #0xc                   	// #12
    f324:	ldr	x30, [sp], #16
    f328:	str	w1, [x0]
    f32c:	ret
    f330:	stp	x19, x20, [sp, #-64]!
    f334:	mov	x20, x0
    f338:	add	x19, sp, #0x20
    f33c:	stp	x21, x30, [sp, #16]
    f340:	mov	x0, x19
    f344:	mov	x21, x1
    f348:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f34c:	add	x1, x1, #0x500
    f350:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f354:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f358:	mov	x3, x21
    f35c:	mov	x2, x20
    f360:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f364:	ldr	x1, [x4, #4024]
    f368:	add	x0, x0, #0x510
    f36c:	ldr	x1, [x1]
    f370:	bl	1cd78 <OnPrint@@Base+0x398>
    f374:	mov	x0, x19
    f378:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f37c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f380:	stp	x19, x20, [sp, #-80]!
    f384:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f388:	mov	x2, x1
    f38c:	stp	x21, x22, [sp, #16]
    f390:	add	x21, sp, #0x30
    f394:	mov	x20, x0
    f398:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f39c:	mov	x0, x21
    f3a0:	add	x1, x1, #0x578
    f3a4:	str	x30, [sp, #32]
    f3a8:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f3ac:	ldr	x19, [x19, #4016]
    f3b0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f3b4:	ldr	x0, [x0, #4024]
    f3b8:	ldr	x3, [x19]
    f3bc:	ldr	x22, [x0]
    f3c0:	cbz	x3, f3e4 <__sancov_default_options@@Base+0x2a34>
    f3c4:	mov	x2, x20
    f3c8:	mov	x1, x22
    f3cc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f3d0:	add	x0, x0, #0x590
    f3d4:	bl	1cd78 <OnPrint@@Base+0x398>
    f3d8:	mov	x0, x21
    f3dc:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f3e0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f3e4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
    f3e8:	mov	x3, x0
    f3ec:	str	x0, [x19]
    f3f0:	b	f3c4 <__sancov_default_options@@Base+0x2a14>
    f3f4:	nop
    f3f8:	stp	x19, x20, [sp, #-64]!
    f3fc:	mov	x2, x1
    f400:	mov	x20, x0
    f404:	add	x19, sp, #0x20
    f408:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f40c:	mov	x0, x19
    f410:	add	x1, x1, #0x610
    f414:	str	x30, [sp, #16]
    f418:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f41c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f420:	mov	x2, x20
    f424:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f428:	add	x0, x0, #0x630
    f42c:	ldr	x1, [x1, #4024]
    f430:	ldr	x1, [x1]
    f434:	bl	1cd78 <OnPrint@@Base+0x398>
    f438:	mov	x0, x19
    f43c:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f440:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f444:	nop
    f448:	stp	x19, x20, [sp, #-80]!
    f44c:	mov	x20, x1
    f450:	add	x19, sp, #0x30
    f454:	stp	x21, x30, [sp, #16]
    f458:	mov	x21, x0
    f45c:	mov	x0, x19
    f460:	str	x1, [sp, #40]
    f464:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f468:	add	x1, x1, #0x680
    f46c:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f470:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f474:	mov	x3, x21
    f478:	mov	x2, x20
    f47c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f480:	ldr	x1, [x1, #4024]
    f484:	add	x0, x0, #0x6a0
    f488:	ldr	x1, [x1]
    f48c:	bl	1cd78 <OnPrint@@Base+0x398>
    f490:	mov	x0, x19
    f494:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f498:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f49c:	nop
    f4a0:	stp	x19, x20, [sp, #-64]!
    f4a4:	mov	x2, x1
    f4a8:	mov	x20, x0
    f4ac:	add	x19, sp, #0x20
    f4b0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f4b4:	mov	x0, x19
    f4b8:	add	x1, x1, #0x740
    f4bc:	str	x30, [sp, #16]
    f4c0:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f4c4:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f4c8:	mov	x2, x20
    f4cc:	mov	x3, #0x8                   	// #8
    f4d0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f4d4:	ldr	x1, [x1, #4024]
    f4d8:	add	x0, x0, #0x768
    f4dc:	ldr	x1, [x1]
    f4e0:	bl	1cd78 <OnPrint@@Base+0x398>
    f4e4:	mov	x0, x19
    f4e8:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f4ec:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f4f0:	stp	x19, x20, [sp, #-80]!
    f4f4:	mov	x20, x0
    f4f8:	add	x19, sp, #0x30
    f4fc:	stp	x21, x30, [sp, #16]
    f500:	mov	x0, x19
    f504:	mov	x21, x1
    f508:	str	x1, [sp, #40]
    f50c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f510:	add	x1, x1, #0x7f0
    f514:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f518:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f51c:	mov	x3, x21
    f520:	mov	x2, x20
    f524:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f528:	ldr	x1, [x1, #4024]
    f52c:	add	x0, x0, #0x808
    f530:	ldr	x1, [x1]
    f534:	bl	1cd78 <OnPrint@@Base+0x398>
    f538:	mov	x0, x19
    f53c:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f540:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f544:	nop
    f548:	stp	x19, x20, [sp, #-64]!
    f54c:	mov	x2, x1
    f550:	mov	x20, x0
    f554:	add	x19, sp, #0x20
    f558:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f55c:	mov	x0, x19
    f560:	add	x1, x1, #0x860
    f564:	str	x30, [sp, #16]
    f568:	bl	f598 <__sancov_default_options@@Base+0x2be8>
    f56c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    f570:	mov	x2, x20
    f574:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f578:	add	x0, x0, #0x870
    f57c:	ldr	x1, [x1, #4024]
    f580:	ldr	x1, [x1]
    f584:	bl	1cd78 <OnPrint@@Base+0x398>
    f588:	mov	x0, x19
    f58c:	bl	f5e8 <__sancov_default_options@@Base+0x2c38>
    f590:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f594:	nop
    f598:	stp	x19, x20, [sp, #-32]!
    f59c:	mov	x19, x0
    f5a0:	mov	x20, x2
    f5a4:	stp	x21, x30, [sp, #16]
    f5a8:	mov	x21, x1
    f5ac:	bl	206c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1140>
    f5b0:	stp	x21, x20, [x19, #8]
    f5b4:	bl	1f838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
    f5b8:	strb	w0, [x19, #24]
    f5bc:	ldp	x21, x30, [sp, #16]
    f5c0:	tst	w0, #0xff
    f5c4:	ldp	x19, x20, [sp], #32
    f5c8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    f5cc:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    f5d0:	add	x2, x2, #0xd20
    f5d4:	add	x1, x1, #0x928
    f5d8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    f5dc:	csel	x1, x1, x2, ne  // ne = any
    f5e0:	add	x0, x0, #0x8b0
    f5e4:	b	1ccf0 <OnPrint@@Base+0x310>
    f5e8:	stp	x19, x30, [sp, #-16]!
    f5ec:	mov	x19, x0
    f5f0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    f5f4:	add	x2, x2, #0xd20
    f5f8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
    f5fc:	ldrb	w3, [x19, #24]
    f600:	add	x1, x1, #0x938
    f604:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
    f608:	add	x0, x0, #0x8b0
    f60c:	cmp	w3, #0x0
    f610:	csel	x1, x1, x2, ne  // ne = any
    f614:	bl	1ccf0 <OnPrint@@Base+0x310>
    f618:	ldr	x0, [x19, #16]
    f61c:	bl	1ebf8 <OnPrint@@Base+0x2218>
    f620:	bl	ce10 <__sancov_default_options@@Base+0x460>
    f624:	ldp	x0, x1, [x19, #8]
    f628:	mov	x2, #0x0                   	// #0
    f62c:	bl	1f8f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x368>
    f630:	mov	x0, x19
    f634:	ldp	x19, x30, [sp], #16
    f638:	b	20820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1298>
    f63c:	nop
    f640:	str	x30, [sp, #-16]!
    f644:	tst	w4, #0xff
    f648:	b.ne	f65c <__sancov_default_options@@Base+0x2cac>  // b.any
    f64c:	adrp	x8, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    f650:	mov	x7, x0
    f654:	ldr	w0, [x8, #2944]
    f658:	cbz	w0, f66c <__sancov_default_options@@Base+0x2cbc>
    f65c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f660:	add	x0, x0, #0x8b8
    f664:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    f668:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    f66c:	adrp	x4, 66000 <_Unwind_Backtrace@GCC_3.3>
    f670:	mov	x5, x1
    f674:	mov	w6, w3
    f678:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f67c:	ldr	x1, [x4, #1256]
    f680:	mov	x3, x7
    f684:	mov	x4, x7
    f688:	add	x0, x0, #0x8d0
    f68c:	mov	w7, #0x1                   	// #1
    f690:	str	w7, [x8, #2944]
    f694:	bl	1cd78 <OnPrint@@Base+0x398>
    f698:	bl	1ac68 <__sanitizer_set_report_fd@@Base+0x7398>
    f69c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f6a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f6a4:	add	x2, x2, #0x918
    f6a8:	add	x0, x0, #0x940
    f6ac:	mov	x4, #0x0                   	// #0
    f6b0:	mov	x3, #0x0                   	// #0
    f6b4:	mov	w1, #0x35                  	// #53
    f6b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f6bc:	nop
    f6c0:	stp	x19, x20, [sp, #-32]!
    f6c4:	str	x30, [sp, #24]
    f6c8:	cbz	x0, f738 <__sancov_default_options@@Base+0x2d88>
    f6cc:	mov	x19, x0
    f6d0:	mov	x20, x1
    f6d4:	cbz	x1, f704 <__sancov_default_options@@Base+0x2d54>
    f6d8:	str	x21, [sp, #16]
    f6dc:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
    f6e0:	mov	x21, x0
    f6e4:	cbz	x0, f6f4 <__sancov_default_options@@Base+0x2d44>
    f6e8:	mov	x0, x20
    f6ec:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    f6f0:	add	x19, x21, x0
    f6f4:	ldrb	w0, [x19]
    f6f8:	cmp	w0, #0x2e
    f6fc:	b.eq	f714 <__sancov_default_options@@Base+0x2d64>  // b.none
    f700:	ldr	x21, [sp, #16]
    f704:	mov	x0, x19
    f708:	ldr	x30, [sp, #24]
    f70c:	ldp	x19, x20, [sp], #32
    f710:	ret
    f714:	ldrb	w1, [x19, #1]
    f718:	add	x0, x19, #0x2
    f71c:	ldr	x21, [sp, #16]
    f720:	cmp	w1, #0x2f
    f724:	csel	x19, x0, x19, eq  // eq = none
    f728:	mov	x0, x19
    f72c:	ldr	x30, [sp, #24]
    f730:	ldp	x19, x20, [sp], #32
    f734:	ret
    f738:	mov	x19, #0x0                   	// #0
    f73c:	b	f704 <__sancov_default_options@@Base+0x2d54>
    f740:	stp	x19, x30, [sp, #-16]!
    f744:	mov	x19, x0
    f748:	cbz	x0, f75c <__sancov_default_options@@Base+0x2dac>
    f74c:	mov	w1, #0x2f                  	// #47
    f750:	bl	15ed8 <__sanitizer_set_report_fd@@Base+0x2608>
    f754:	cmp	x0, #0x0
    f758:	csinc	x19, x19, x0, eq  // eq = none
    f75c:	mov	x0, x19
    f760:	ldp	x19, x30, [sp], #16
    f764:	ret
    f768:	cbz	x0, f7f4 <__sancov_default_options@@Base+0x2e44>
    f76c:	stp	x19, x30, [sp, #-16]!
    f770:	mov	x19, x0
    f774:	ldrb	w1, [x0]
    f778:	cbz	w1, f7e8 <__sancov_default_options@@Base+0x2e38>
    f77c:	nop
    f780:	cmp	w1, #0x1b
    f784:	b.eq	f7cc <__sancov_default_options@@Base+0x2e1c>  // b.none
    f788:	cmp	x0, x19
    f78c:	b.eq	f794 <__sancov_default_options@@Base+0x2de4>  // b.none
    f790:	strb	w1, [x19]
    f794:	add	x19, x19, #0x1
    f798:	ldrb	w1, [x0, #1]
    f79c:	add	x0, x0, #0x1
    f7a0:	cbz	w1, f7e8 <__sancov_default_options@@Base+0x2e38>
    f7a4:	cmp	x0, x19
    f7a8:	b.cs	f780 <__sancov_default_options@@Base+0x2dd0>  // b.hs, b.nlast
    f7ac:	mov	x3, x0
    f7b0:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f7b4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    f7b8:	mov	x4, x19
    f7bc:	add	x2, x2, #0x980
    f7c0:	add	x0, x0, #0x940
    f7c4:	mov	w1, #0x68                  	// #104
    f7c8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
    f7cc:	ldrb	w2, [x0, #1]
    f7d0:	cmp	w2, #0x5b
    f7d4:	b.ne	f788 <__sancov_default_options@@Base+0x2dd8>  // b.any
    f7d8:	mov	w1, #0x6d                  	// #109
    f7dc:	bl	15e88 <__sanitizer_set_report_fd@@Base+0x25b8>
    f7e0:	ldrb	w1, [x0]
    f7e4:	cbnz	w1, f798 <__sancov_default_options@@Base+0x2de8>
    f7e8:	strb	wzr, [x19]
    f7ec:	ldp	x19, x30, [sp], #16
    f7f0:	ret
    f7f4:	ret
    f7f8:	stp	x19, x20, [sp, #-32]!
    f7fc:	mov	x19, x0
    f800:	mov	x1, #0x0                   	// #0
    f804:	ldr	x0, [x0]
    f808:	str	x30, [sp, #16]
    f80c:	bl	d220 <__sancov_default_options@@Base+0x870>
    f810:	str	xzr, [x19]
    f814:	stp	xzr, xzr, [x19, #8]
    f818:	mov	x2, #0x10                  	// #16
    f81c:	add	x0, x19, #0x1c
    f820:	str	wzr, [x19, #24]
    f824:	mov	w1, #0x0                   	// #0
    f828:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
    f82c:	strb	wzr, [x19, #44]
    f830:	ldr	x2, [x19, #48]
    f834:	cbz	x2, f868 <__sancov_default_options@@Base+0x2eb8>
    f838:	add	x20, x19, #0x30
    f83c:	nop
    f840:	ldr	x0, [x19, #56]
    f844:	sub	x4, x2, #0x1
    f848:	mov	x1, #0x0                   	// #0
    f84c:	ldr	x3, [x0]
    f850:	str	x3, [x20, #8]
    f854:	cbz	x3, f874 <__sancov_default_options@@Base+0x2ec4>
    f858:	str	x4, [x20]
    f85c:	bl	d220 <__sancov_default_options@@Base+0x870>
    f860:	ldr	x2, [x19, #48]
    f864:	cbnz	x2, f840 <__sancov_default_options@@Base+0x2e90>
    f868:	ldr	x30, [sp, #16]
    f86c:	ldp	x19, x20, [sp], #32
    f870:	ret
    f874:	str	x4, [x20]
    f878:	str	xzr, [x20, #16]
    f87c:	bl	d220 <__sancov_default_options@@Base+0x870>
    f880:	ldr	x2, [x19, #48]
    f884:	cbnz	x2, f840 <__sancov_default_options@@Base+0x2e90>
    f888:	ldr	x30, [sp, #16]
    f88c:	ldp	x19, x20, [sp], #32
    f890:	ret
    f894:	nop
    f898:	stp	x19, x20, [sp, #-32]!
    f89c:	mov	x19, x0
    f8a0:	mov	x20, x2
    f8a4:	stp	x21, x30, [sp, #16]
    f8a8:	mov	x21, x1
    f8ac:	bl	f7f8 <__sancov_default_options@@Base+0x2e48>
    f8b0:	mov	x0, x21
    f8b4:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
    f8b8:	ldp	x21, x30, [sp, #16]
    f8bc:	stp	x0, x20, [x19]
    f8c0:	ldp	x19, x20, [sp], #32
    f8c4:	ret
    f8c8:	stp	x19, x20, [sp, #-64]!
    f8cc:	mov	x19, x0
    f8d0:	mov	w20, w3
    f8d4:	stp	x21, x22, [sp, #16]
    f8d8:	mov	x21, x4
    f8dc:	mov	x22, x2
    f8e0:	stp	x23, x24, [sp, #32]
    f8e4:	and	w24, w5, #0xff
    f8e8:	mov	x23, x1
    f8ec:	str	x30, [sp, #48]
    f8f0:	bl	f7f8 <__sancov_default_options@@Base+0x2e48>
    f8f4:	mov	x0, x23
    f8f8:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
    f8fc:	stp	x0, x22, [x19]
    f900:	mov	x1, x21
    f904:	add	x0, x19, #0x1c
    f908:	str	w20, [x19, #24]
    f90c:	mov	x2, #0x10                  	// #16
    f910:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    f914:	strb	w24, [x19, #44]
    f918:	ldp	x21, x22, [sp, #16]
    f91c:	ldp	x23, x24, [sp, #32]
    f920:	ldr	x30, [sp, #48]
    f924:	ldp	x19, x20, [sp], #64
    f928:	ret
    f92c:	nop
    f930:	stp	x19, x20, [sp, #-64]!
    f934:	mov	x20, x0
    f938:	mov	x0, #0x30                  	// #48
    f93c:	stp	x21, x22, [sp, #16]
    f940:	mov	x21, x5
    f944:	mov	x22, x2
    f948:	mov	x2, #0x0                   	// #0
    f94c:	stp	x23, x24, [sp, #32]
    f950:	and	w24, w3, #0xff
    f954:	mov	x23, x1
    f958:	mov	x1, #0x0                   	// #0
    f95c:	stp	x25, x30, [sp, #48]
    f960:	and	w25, w4, #0xff
    f964:	bl	ce20 <__sancov_default_options@@Base+0x470>
    f968:	mov	x19, x0
    f96c:	cmp	x21, #0x0
    f970:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    f974:	add	x1, x1, #0xd20
    f978:	add	x0, x0, #0x1a
    f97c:	csel	x1, x1, x21, eq  // eq = none
    f980:	stp	xzr, x23, [x19]
    f984:	mov	x2, #0x10                  	// #16
    f988:	str	x22, [x19, #16]
    f98c:	strb	w24, [x19, #24]
    f990:	strb	w25, [x19, #25]
    f994:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
    f998:	ldr	x0, [x20, #48]
    f99c:	cbnz	x0, f9dc <__sancov_default_options@@Base+0x302c>
    f9a0:	dup	v0.2d, x19
    f9a4:	str	xzr, [x19]
    f9a8:	mov	x0, #0x1                   	// #1
    f9ac:	str	x0, [x20, #48]
    f9b0:	stur	q0, [x20, #56]
    f9b4:	cbz	w24, f9c8 <__sancov_default_options@@Base+0x3018>
    f9b8:	ldr	x0, [x20, #16]
    f9bc:	cmp	x0, x22
    f9c0:	b.cs	f9c8 <__sancov_default_options@@Base+0x3018>  // b.hs, b.nlast
    f9c4:	str	x22, [x20, #16]
    f9c8:	ldp	x21, x22, [sp, #16]
    f9cc:	ldp	x23, x24, [sp, #32]
    f9d0:	ldp	x25, x30, [sp, #48]
    f9d4:	ldp	x19, x20, [sp], #64
    f9d8:	ret
    f9dc:	str	xzr, [x19]
    f9e0:	add	x0, x0, #0x1
    f9e4:	ldr	x2, [x20, #64]
    f9e8:	str	x19, [x2]
    f9ec:	str	x0, [x20, #48]
    f9f0:	str	x19, [x20, #64]
    f9f4:	b	f9b4 <__sancov_default_options@@Base+0x3004>
    f9f8:	ldr	x0, [x0, #56]
    f9fc:	cbz	x0, fa2c <__sancov_default_options@@Base+0x307c>
    fa00:	ldr	x2, [x0, #8]
    fa04:	cmp	x2, x1
    fa08:	b.hi	fa18 <__sancov_default_options@@Base+0x3068>  // b.pmore
    fa0c:	ldr	x2, [x0, #16]
    fa10:	cmp	x2, x1
    fa14:	b.hi	fa24 <__sancov_default_options@@Base+0x3074>  // b.pmore
    fa18:	ldr	x0, [x0]
    fa1c:	cbnz	x0, fa00 <__sancov_default_options@@Base+0x3050>
    fa20:	ret
    fa24:	mov	w0, #0x1                   	// #1
    fa28:	ret
    fa2c:	mov	w0, #0x0                   	// #0
    fa30:	ret
    fa34:	nop
    fa38:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    fa3c:	ldr	x1, [x1, #4056]
    fa40:	ldr	x2, [x1, #128]
    fa44:	cbnz	x2, fa4c <__sancov_default_options@@Base+0x309c>
    fa48:	ret
    fa4c:	adrp	x2, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fa50:	add	x2, x2, #0xb80
    fa54:	add	x2, x2, #0x8
    fa58:	ldxr	x3, [x2]
    fa5c:	add	x4, x3, x0
    fa60:	stlxr	w5, x4, [x2]
    fa64:	cbnz	w5, fa58 <__sancov_default_options@@Base+0x30a8>
    fa68:	dmb	ish
    fa6c:	ldr	x1, [x1, #128]
    fa70:	add	x0, x3, x0
    fa74:	cmp	x1, x0, lsr #20
    fa78:	b.hi	fa48 <__sancov_default_options@@Base+0x3098>  // b.pmore
    fa7c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    fa80:	add	x0, x0, #0x990
    fa84:	str	x30, [sp, #-16]!
    fa88:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
    fa8c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
    fa90:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    fa94:	ldr	x1, [x1, #4056]
    fa98:	ldr	x1, [x1, #128]
    fa9c:	cbnz	x1, faa4 <__sancov_default_options@@Base+0x30f4>
    faa0:	ret
    faa4:	adrp	x1, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    faa8:	add	x1, x1, #0xb80
    faac:	neg	x0, x0
    fab0:	add	x1, x1, #0x8
    fab4:	ldxr	x2, [x1]
    fab8:	add	x2, x2, x0
    fabc:	stlxr	w3, x2, [x1]
    fac0:	cbnz	w3, fab4 <__sancov_default_options@@Base+0x3104>
    fac4:	dmb	ish
    fac8:	ret
    facc:	nop
    fad0:	cbz	x1, fc64 <__sancov_default_options@@Base+0x32b4>
    fad4:	stp	x19, x20, [sp, #-80]!
    fad8:	mov	x19, x0
    fadc:	stp	x21, x22, [sp, #16]
    fae0:	mov	x21, x1
    fae4:	str	x30, [sp, #64]
    fae8:	ldrb	w0, [x1]
    faec:	cbz	w0, fbe4 <__sancov_default_options@@Base+0x3234>
    faf0:	cbz	x19, fbc8 <__sancov_default_options@@Base+0x3218>
    faf4:	stp	x23, x24, [sp, #32]
    faf8:	mov	w23, #0x0                   	// #0
    fafc:	stp	x25, x26, [sp, #48]
    fb00:	ldrb	w1, [x19]
    fb04:	cmp	w1, #0x5e
    fb08:	b.ne	fb18 <__sancov_default_options@@Base+0x3168>  // b.any
    fb0c:	ldrb	w1, [x19, #1]
    fb10:	add	x19, x19, #0x1
    fb14:	mov	w23, #0x1                   	// #1
    fb18:	mov	w2, #0x0                   	// #0
    fb1c:	mov	w25, #0x2a                  	// #42
    fb20:	mov	w24, #0x24                  	// #36
    fb24:	cbz	w1, fbc0 <__sancov_default_options@@Base+0x3210>
    fb28:	cmp	w1, #0x2a
    fb2c:	b.eq	fc54 <__sancov_default_options@@Base+0x32a4>  // b.none
    fb30:	ldrb	w0, [x21]
    fb34:	cmp	w1, #0x24
    fb38:	b.eq	fc6c <__sancov_default_options@@Base+0x32bc>  // b.none
    fb3c:	cbz	w0, fbdc <__sancov_default_options@@Base+0x322c>
    fb40:	mov	w1, #0x2a                  	// #42
    fb44:	mov	x0, x19
    fb48:	bl	15e58 <__sanitizer_set_report_fd@@Base+0x2588>
    fb4c:	mov	x22, x0
    fb50:	mov	w1, #0x24                  	// #36
    fb54:	mov	x0, x19
    fb58:	bl	15e58 <__sanitizer_set_report_fd@@Base+0x2588>
    fb5c:	mov	x26, x0
    fb60:	cbz	x22, fc2c <__sancov_default_options@@Base+0x327c>
    fb64:	cmp	x0, #0x0
    fb68:	ccmp	x22, x0, #0x0, ne  // ne = any
    fb6c:	b.ls	fbf8 <__sancov_default_options@@Base+0x3248>  // b.plast
    fb70:	strb	wzr, [x26]
    fb74:	mov	x1, x19
    fb78:	mov	x0, x21
    fb7c:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
    fb80:	mov	x20, x0
    fb84:	mov	x0, x19
    fb88:	mov	x19, x26
    fb8c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fb90:	add	x0, x20, x0
    fb94:	mov	w1, #0x24                  	// #36
    fb98:	strb	w1, [x19]
    fb9c:	cbz	x20, fbdc <__sancov_default_options@@Base+0x322c>
    fba0:	cmp	x21, x20
    fba4:	csel	w2, w23, wzr, ne  // ne = any
    fba8:	cbnz	w2, fbdc <__sancov_default_options@@Base+0x322c>
    fbac:	cbz	x19, fbc0 <__sancov_default_options@@Base+0x3210>
    fbb0:	ldrb	w1, [x19]
    fbb4:	mov	x21, x0
    fbb8:	mov	w23, #0x0                   	// #0
    fbbc:	cbnz	w1, fb28 <__sancov_default_options@@Base+0x3178>
    fbc0:	ldp	x23, x24, [sp, #32]
    fbc4:	ldp	x25, x26, [sp, #48]
    fbc8:	mov	w0, #0x1                   	// #1
    fbcc:	ldp	x21, x22, [sp, #16]
    fbd0:	ldr	x30, [sp, #64]
    fbd4:	ldp	x19, x20, [sp], #80
    fbd8:	ret
    fbdc:	ldp	x23, x24, [sp, #32]
    fbe0:	ldp	x25, x26, [sp, #48]
    fbe4:	mov	w0, #0x0                   	// #0
    fbe8:	ldp	x21, x22, [sp, #16]
    fbec:	ldr	x30, [sp, #64]
    fbf0:	ldp	x19, x20, [sp], #80
    fbf4:	ret
    fbf8:	strb	wzr, [x22]
    fbfc:	mov	x1, x19
    fc00:	mov	x0, x21
    fc04:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
    fc08:	mov	x20, x0
    fc0c:	mov	x0, x19
    fc10:	mov	x19, x22
    fc14:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fc18:	add	x0, x20, x0
    fc1c:	cmp	x22, x26
    fc20:	csel	w1, w24, w25, eq  // eq = none
    fc24:	strb	w1, [x19]
    fc28:	b	fb9c <__sancov_default_options@@Base+0x31ec>
    fc2c:	cbnz	x0, fb70 <__sancov_default_options@@Base+0x31c0>
    fc30:	mov	x1, x19
    fc34:	mov	x0, x21
    fc38:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
    fc3c:	mov	x20, x0
    fc40:	mov	x0, x19
    fc44:	mov	x19, #0x0                   	// #0
    fc48:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fc4c:	add	x0, x20, x0
    fc50:	b	fb9c <__sancov_default_options@@Base+0x31ec>
    fc54:	add	x19, x19, #0x1
    fc58:	mov	x0, x21
    fc5c:	mov	w2, #0x1                   	// #1
    fc60:	b	fbb0 <__sancov_default_options@@Base+0x3200>
    fc64:	mov	w0, #0x0                   	// #0
    fc68:	ret
    fc6c:	cmp	w0, #0x0
    fc70:	csinc	w0, w2, wzr, ne  // ne = any
    fc74:	ldp	x23, x24, [sp, #32]
    fc78:	ldp	x25, x26, [sp, #48]
    fc7c:	b	fbe8 <__sancov_default_options@@Base+0x3238>
    fc80:	adrp	x0, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fc84:	add	x0, x0, #0xbf0
    fc88:	ret
    fc8c:	nop
    fc90:	stp	x19, x20, [sp, #-32]!
    fc94:	adrp	x19, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fc98:	add	x19, x19, #0xbf0
    fc9c:	mov	x1, #0x1000                	// #4096
    fca0:	mov	x0, x19
    fca4:	str	x30, [sp, #24]
    fca8:	bl	18c60 <__sanitizer_set_report_fd@@Base+0x5390>
    fcac:	mov	x0, x19
    fcb0:	mov	w1, #0x2f                  	// #47
    fcb4:	bl	15ed8 <__sanitizer_set_report_fd@@Base+0x2608>
    fcb8:	cbz	x0, fcfc <__sancov_default_options@@Base+0x334c>
    fcbc:	add	x20, x0, #0x1
    fcc0:	str	x21, [sp, #16]
    fcc4:	mov	x0, x20
    fcc8:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fccc:	cmp	x20, x19
    fcd0:	mov	x21, x0
    fcd4:	b.eq	fcec <__sancov_default_options@@Base+0x333c>  // b.none
    fcd8:	mov	x2, x0
    fcdc:	mov	x1, x20
    fce0:	mov	x0, x19
    fce4:	bl	157b8 <__sanitizer_set_report_fd@@Base+0x1ee8>
    fce8:	strb	wzr, [x21, x19]
    fcec:	ldr	x21, [sp, #16]
    fcf0:	ldr	x30, [sp, #24]
    fcf4:	ldp	x19, x20, [sp], #32
    fcf8:	ret
    fcfc:	mov	x0, x19
    fd00:	ldr	x30, [sp, #24]
    fd04:	ldp	x19, x20, [sp], #32
    fd08:	b	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fd0c:	nop
    fd10:	adrp	x1, 1b8000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    fd14:	add	x0, x1, #0xbf0
    fd18:	ldrb	w1, [x1, #3056]
    fd1c:	cbz	w1, fd24 <__sancov_default_options@@Base+0x3374>
    fd20:	ret
    fd24:	stp	x19, x20, [sp, #-32]!
    fd28:	mov	x1, #0x1000                	// #4096
    fd2c:	adrp	x19, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fd30:	add	x19, x19, #0xbf0
    fd34:	str	x30, [sp, #24]
    fd38:	bl	18bc8 <__sanitizer_set_report_fd@@Base+0x52f8>
    fd3c:	mov	x1, #0x1000                	// #4096
    fd40:	mov	x0, x19
    fd44:	bl	18c60 <__sanitizer_set_report_fd@@Base+0x5390>
    fd48:	mov	x0, x19
    fd4c:	mov	w1, #0x2f                  	// #47
    fd50:	bl	15ed8 <__sanitizer_set_report_fd@@Base+0x2608>
    fd54:	cbz	x0, fd98 <__sancov_default_options@@Base+0x33e8>
    fd58:	add	x20, x0, #0x1
    fd5c:	str	x21, [sp, #16]
    fd60:	mov	x0, x20
    fd64:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fd68:	cmp	x20, x19
    fd6c:	mov	x21, x0
    fd70:	b.eq	fd88 <__sancov_default_options@@Base+0x33d8>  // b.none
    fd74:	mov	x2, x0
    fd78:	mov	x1, x20
    fd7c:	mov	x0, x19
    fd80:	bl	157b8 <__sanitizer_set_report_fd@@Base+0x1ee8>
    fd84:	strb	wzr, [x21, x19]
    fd88:	ldr	x21, [sp, #16]
    fd8c:	ldr	x30, [sp, #24]
    fd90:	ldp	x19, x20, [sp], #32
    fd94:	ret
    fd98:	mov	x0, x19
    fd9c:	ldr	x30, [sp, #24]
    fda0:	ldp	x19, x20, [sp], #32
    fda4:	b	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fda8:	stp	x19, x20, [sp, #-64]!
    fdac:	adrp	x20, 1b8000 <__ubsan_vptr_type_cache@@Base+0x14f188>
    fdb0:	mov	x19, x1
    fdb4:	ldrb	w2, [x20, #3056]
    fdb8:	stp	x21, x22, [sp, #16]
    fdbc:	mov	x21, x0
    fdc0:	str	x30, [sp, #48]
    fdc4:	cbz	w2, fe10 <__sancov_default_options@@Base+0x3460>
    fdc8:	add	x20, x20, #0xbf0
    fdcc:	mov	x0, x20
    fdd0:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fdd4:	mov	x2, x0
    fdd8:	cbz	x19, fdfc <__sancov_default_options@@Base+0x344c>
    fddc:	sub	x19, x19, #0x1
    fde0:	mov	x1, x20
    fde4:	cmp	x19, x0
    fde8:	mov	x0, x21
    fdec:	csel	x19, x19, x2, ls  // ls = plast
    fdf0:	mov	x2, x19
    fdf4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
    fdf8:	strb	wzr, [x21, x19]
    fdfc:	mov	x0, x19
    fe00:	ldp	x21, x22, [sp, #16]
    fe04:	ldr	x30, [sp, #48]
    fe08:	ldp	x19, x20, [sp], #64
    fe0c:	ret
    fe10:	mov	x1, #0x1000                	// #4096
    fe14:	add	x0, x20, #0xbf0
    fe18:	adrp	x22, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    fe1c:	bl	18bc8 <__sanitizer_set_report_fd@@Base+0x52f8>
    fe20:	add	x22, x22, #0xbf0
    fe24:	mov	x1, #0x1000                	// #4096
    fe28:	mov	x0, x22
    fe2c:	bl	18c60 <__sanitizer_set_report_fd@@Base+0x5390>
    fe30:	mov	x0, x22
    fe34:	mov	w1, #0x2f                  	// #47
    fe38:	bl	15ed8 <__sanitizer_set_report_fd@@Base+0x2608>
    fe3c:	cbz	x0, fe78 <__sancov_default_options@@Base+0x34c8>
    fe40:	stp	x23, x24, [sp, #32]
    fe44:	add	x23, x0, #0x1
    fe48:	mov	x0, x23
    fe4c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fe50:	mov	x24, x0
    fe54:	cmp	x23, x22
    fe58:	b.eq	fe84 <__sancov_default_options@@Base+0x34d4>  // b.none
    fe5c:	mov	x1, x23
    fe60:	mov	x2, x0
    fe64:	mov	x0, x22
    fe68:	bl	157b8 <__sanitizer_set_report_fd@@Base+0x1ee8>
    fe6c:	strb	wzr, [x24, x22]
    fe70:	ldp	x23, x24, [sp, #32]
    fe74:	b	fdc8 <__sancov_default_options@@Base+0x3418>
    fe78:	mov	x0, x22
    fe7c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
    fe80:	b	fdc8 <__sancov_default_options@@Base+0x3418>
    fe84:	ldp	x23, x24, [sp, #32]
    fe88:	b	fdc8 <__sancov_default_options@@Base+0x3418>
    fe8c:	nop
    fe90:	stp	x19, x20, [sp, #-32]!
    fe94:	str	x30, [sp, #16]
    fe98:	bl	17e38 <__sanitizer_set_report_fd@@Base+0x4568>
    fe9c:	cbz	x0, feec <__sancov_default_options@@Base+0x353c>
    fea0:	mov	x19, x0
    fea4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    fea8:	add	x0, x0, #0x9c8
    feac:	bl	1ccf0 <OnPrint@@Base+0x310>
    feb0:	ldr	x1, [x19]
    feb4:	cbz	x1, fed8 <__sancov_default_options@@Base+0x3528>
    feb8:	adrp	x20, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
    febc:	add	x19, x19, #0x8
    fec0:	add	x20, x20, #0x288
    fec4:	nop
    fec8:	mov	x0, x20
    fecc:	bl	1ccf0 <OnPrint@@Base+0x310>
    fed0:	ldr	x1, [x19], #8
    fed4:	cbnz	x1, fec8 <__sancov_default_options@@Base+0x3518>
    fed8:	ldr	x30, [sp, #16]
    fedc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
    fee0:	ldp	x19, x20, [sp], #32
    fee4:	add	x0, x0, #0x9d8
    fee8:	b	1ccf0 <OnPrint@@Base+0x310>
    feec:	ldr	x30, [sp, #16]
    fef0:	ldp	x19, x20, [sp], #32
    fef4:	ret
    fef8:	stp	x19, x20, [sp, #-48]!
    fefc:	adrp	x20, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    ff00:	add	x20, x20, #0xb80
    ff04:	add	x19, x20, #0x10
    ff08:	add	x20, x20, #0x60
    ff0c:	stp	x21, x22, [sp, #16]
    ff10:	mov	x22, x0
    ff14:	mov	x21, x1
    ff18:	str	x30, [sp, #32]
    ff1c:	ldr	x2, [x19]
    ff20:	mov	x1, x21
    ff24:	mov	x0, x22
    ff28:	add	x19, x19, #0x10
    ff2c:	cbz	x2, ff3c <__sancov_default_options@@Base+0x358c>
    ff30:	blr	x2
    ff34:	cmp	x19, x20
    ff38:	b.ne	ff1c <__sancov_default_options@@Base+0x356c>  // b.any
    ff3c:	ldp	x21, x22, [sp, #16]
    ff40:	ldr	x30, [sp, #32]
    ff44:	ldp	x19, x20, [sp], #48
    ff48:	ret
    ff4c:	nop
    ff50:	stp	x19, x20, [sp, #-32]!
    ff54:	adrp	x20, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    ff58:	add	x20, x20, #0xb80
    ff5c:	add	x20, x20, #0x10
    ff60:	stp	x21, x30, [sp, #16]
    ff64:	mov	x21, x0
    ff68:	mov	x19, #0x0                   	// #0
    ff6c:	add	x1, x20, x19
    ff70:	mov	x0, x21
    ff74:	add	x19, x19, #0x10
    ff78:	ldr	x1, [x1, #8]
    ff7c:	cbz	x1, ff8c <__sancov_default_options@@Base+0x35dc>
    ff80:	blr	x1
    ff84:	cmp	x19, #0x50
    ff88:	b.ne	ff6c <__sancov_default_options@@Base+0x35bc>  // b.any
    ff8c:	ldp	x21, x30, [sp, #16]
    ff90:	ldp	x19, x20, [sp], #32
    ff94:	ret

000000000000ff98 <__sanitizer_report_error_summary@@Base>:
    ff98:	mov	x1, x0
    ff9c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
    ffa0:	add	x0, x2, #0x6e0
    ffa4:	b	1ccf0 <OnPrint@@Base+0x310>
    ffa8:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
    ffac:	ldr	x4, [x4, #4056]
    ffb0:	ldrb	w2, [x4, #60]
    ffb4:	cbnz	w2, ffbc <__sanitizer_report_error_summary@@Base+0x24>
    ffb8:	ret
    ffbc:	stp	x19, x20, [sp, #-96]!
    ffc0:	mov	x20, x1
    ffc4:	stp	x23, x24, [sp, #32]
    ffc8:	adrp	x23, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
    ffcc:	add	x19, x23, #0xb80
    ffd0:	stp	x21, x22, [sp, #16]
    ffd4:	mov	x21, x0
    ffd8:	ldr	x2, [x19, #96]
    ffdc:	str	x30, [sp, #48]
    ffe0:	str	xzr, [sp, #64]
    ffe4:	stp	xzr, xzr, [sp, #72]
    ffe8:	cbz	x2, 100b8 <__sanitizer_report_error_summary@@Base+0x120>
    ffec:	sub	x0, x2, #0x1
    fff0:	tst	x0, x2
    fff4:	b.ne	10120 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
    fff8:	add	x22, x2, #0x3ff
    fffc:	neg	x2, x2
   10000:	and	x22, x22, x2
   10004:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10008:	mov	w2, #0x0                   	// #0
   1000c:	add	x1, x24, #0x988
   10010:	mov	x0, x22
   10014:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   10018:	ldr	x1, [sp, #64]
   1001c:	mov	x19, x0
   10020:	ldr	x2, [sp, #80]
   10024:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   10028:	ldp	x0, x1, [sp, #64]
   1002c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   10030:	stp	x19, x22, [sp, #64]
   10034:	ldr	x2, [sp, #80]
   10038:	cmp	x2, #0x3ff
   1003c:	b.hi	10060 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
   10040:	cmp	x22, #0x3ff
   10044:	b.ls	100c8 <__sanitizer_report_error_summary@@Base+0x130>  // b.plast
   10048:	mov	x3, #0x400                 	// #1024
   1004c:	add	x0, x19, x2
   10050:	mov	w1, #0x0                   	// #0
   10054:	sub	x2, x3, x2
   10058:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1005c:	ldr	x19, [sp, #64]
   10060:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10064:	adrp	x2, 66000 <_Unwind_Backtrace@GCC_3.3>
   10068:	cmp	x20, #0x0
   1006c:	ldr	q0, [x0, #2992]
   10070:	mov	x3, x21
   10074:	add	x0, sp, #0x40
   10078:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1007c:	add	x1, x1, #0x9e0
   10080:	str	q0, [sp, #80]
   10084:	strb	wzr, [x19]
   10088:	ldr	x2, [x2, #1256]
   1008c:	csel	x2, x2, x20, eq  // eq = none
   10090:	bl	1ce00 <OnPrint@@Base+0x420>
   10094:	ldr	x0, [sp, #64]
   10098:	bl	6370 <__sanitizer_report_error_summary@plt>
   1009c:	ldp	x0, x1, [sp, #64]
   100a0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   100a4:	ldp	x21, x22, [sp, #16]
   100a8:	ldp	x23, x24, [sp, #32]
   100ac:	ldr	x30, [sp, #48]
   100b0:	ldp	x19, x20, [sp], #96
   100b4:	ret
   100b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   100bc:	mov	x2, x0
   100c0:	str	x0, [x19, #96]
   100c4:	b	ffec <__sanitizer_report_error_summary@@Base+0x54>
   100c8:	add	x23, x23, #0xb80
   100cc:	ldr	x0, [x23, #96]
   100d0:	cbz	x0, 10130 <__sanitizer_report_error_summary@@Base+0x198>
   100d4:	sub	x1, x0, #0x1
   100d8:	tst	x1, x0
   100dc:	b.ne	10120 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   100e0:	add	x22, x0, #0x3ff
   100e4:	neg	x0, x0
   100e8:	and	x22, x22, x0
   100ec:	add	x1, x24, #0x988
   100f0:	mov	w2, #0x0                   	// #0
   100f4:	mov	x0, x22
   100f8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   100fc:	mov	x19, x0
   10100:	ldr	x1, [sp, #64]
   10104:	ldr	x2, [sp, #80]
   10108:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1010c:	ldp	x0, x1, [sp, #64]
   10110:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   10114:	stp	x19, x22, [sp, #64]
   10118:	ldr	x2, [sp, #80]
   1011c:	b	10048 <__sanitizer_report_error_summary@@Base+0xb0>
   10120:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10124:	add	x0, x0, #0x970
   10128:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1012c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   10130:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   10134:	str	x0, [x23, #96]
   10138:	b	100d4 <__sanitizer_report_error_summary@@Base+0x13c>
   1013c:	nop

0000000000010140 <__sanitizer_acquire_crash_state@@Base>:
   10140:	adrp	x0, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
   10144:	add	x0, x0, #0xb80
   10148:	add	x0, x0, #0x68
   1014c:	mov	w2, #0x1                   	// #1
   10150:	ldxrb	w1, [x0]
   10154:	stxrb	w3, w2, [x0]
   10158:	cbnz	w3, 10150 <__sanitizer_acquire_crash_state@@Base+0x10>
   1015c:	tst	w1, #0xff
   10160:	dmb	ish
   10164:	cset	w0, eq  // eq = none
   10168:	ret
   1016c:	nop

0000000000010170 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   10170:	cmp	x0, #0x0
   10174:	mov	x2, x0
   10178:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1017c:	mov	w0, #0x0                   	// #0
   10180:	b.eq	101bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>  // b.none
   10184:	adrp	x3, 1b7000 <__ubsan_vptr_type_cache@@Base+0x14e188>
   10188:	add	x4, x3, #0xb80
   1018c:	add	x0, x4, #0x10
   10190:	ldr	x4, [x4, #16]
   10194:	cbz	x4, 101e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   10198:	ldr	x4, [x0, #16]
   1019c:	cbz	x4, 101f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x80>
   101a0:	ldr	x4, [x0, #32]
   101a4:	cbz	x4, 101fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
   101a8:	ldr	x4, [x0, #48]
   101ac:	cbz	x4, 10208 <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   101b0:	ldr	x4, [x0, #64]
   101b4:	mov	w0, #0x0                   	// #0
   101b8:	cbz	x4, 101c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x50>
   101bc:	ret
   101c0:	mov	w4, #0x4                   	// #4
   101c4:	mov	w0, #0x5                   	// #5
   101c8:	add	x3, x3, #0xb80
   101cc:	sbfiz	x4, x4, #4, #32
   101d0:	add	x3, x3, #0x10
   101d4:	add	x5, x3, x4
   101d8:	str	x2, [x3, x4]
   101dc:	str	x1, [x5, #8]
   101e0:	ret
   101e4:	mov	w4, #0x0                   	// #0
   101e8:	mov	w0, #0x1                   	// #1
   101ec:	b	101c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   101f0:	mov	w4, #0x1                   	// #1
   101f4:	mov	w0, #0x2                   	// #2
   101f8:	b	101c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   101fc:	mov	w4, #0x2                   	// #2
   10200:	mov	w0, #0x3                   	// #3
   10204:	b	101c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   10208:	mov	w4, #0x3                   	// #3
   1020c:	mov	w0, #0x4                   	// #4
   10210:	b	101c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   10214:	nop
   10218:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1021c:	ldr	x3, [x1, #3088]
   10220:	cbnz	x3, 1022c <__sanitizer_install_malloc_and_free_hooks@@Base+0xbc>
   10224:	str	x0, [x1, #3088]
   10228:	ret
   1022c:	str	x30, [sp, #-16]!
   10230:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10234:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10238:	add	x2, x2, #0xa00
   1023c:	add	x0, x0, #0xa30
   10240:	mov	x4, #0x0                   	// #0
   10244:	mov	w1, #0x16                  	// #22
   10248:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1024c:	nop
   10250:	mov	x0, #0x0                   	// #0
   10254:	ret
   10258:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1025c:	stp	x19, x20, [sp, #-128]!
   10260:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10264:	ldr	x0, [x0, #4056]
   10268:	stp	x21, x22, [sp, #16]
   1026c:	add	x1, x1, #0xa88
   10270:	str	x1, [sp, #120]
   10274:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10278:	ldp	x21, x19, [x0, #136]
   1027c:	stp	x23, x24, [sp, #32]
   10280:	mov	x22, #0x0                   	// #0
   10284:	stp	x27, x28, [sp, #64]
   10288:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
   1028c:	mov	w23, #0x0                   	// #0
   10290:	stp	d8, d9, [sp, #96]
   10294:	mov	x20, #0x0                   	// #0
   10298:	cmp	x21, #0x0
   1029c:	cset	w24, ne  // ne = any
   102a0:	ldr	d9, [x1, #2872]
   102a4:	fmov	d8, xzr
   102a8:	movk	x27, #0xcccd
   102ac:	stp	x25, x26, [sp, #48]
   102b0:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   102b4:	ldrb	w26, [x0, #152]
   102b8:	str	x30, [sp, #80]
   102bc:	nop
   102c0:	mov	w0, #0x64                  	// #100
   102c4:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x7c90>
   102c8:	bl	19de0 <__sanitizer_set_report_fd@@Base+0x6510>
   102cc:	lsr	x28, x0, #20
   102d0:	ldr	x1, [x25, #3896]
   102d4:	ldr	w0, [x1]
   102d8:	cbz	w0, 1031c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac>
   102dc:	add	x0, x20, x20, lsl #1
   102e0:	lsl	x0, x0, #2
   102e4:	sub	x0, x0, x20
   102e8:	umulh	x0, x0, x27
   102ec:	cmp	x28, x0, lsr #3
   102f0:	b.hi	103a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x234>  // b.pmore
   102f4:	bl	1dd80 <OnPrint@@Base+0x13a0>
   102f8:	mov	x5, x0
   102fc:	cbz	x0, 1031c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac>
   10300:	add	x1, x22, x22, lsl #1
   10304:	ldr	x3, [x0, #8]
   10308:	lsl	x1, x1, #2
   1030c:	sub	x1, x1, x22
   10310:	umulh	x1, x1, x27
   10314:	cmp	x3, x1, lsr #3
   10318:	b.hi	10404 <__sanitizer_install_malloc_and_free_hooks@@Base+0x294>  // b.pmore
   1031c:	cmp	w24, #0x0
   10320:	ccmp	x21, x28, #0x2, ne  // ne = any
   10324:	b.cc	10438 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c8>  // b.lo, b.ul, b.last
   10328:	cbz	x19, 10368 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   1032c:	cmp	x19, x28
   10330:	eor	w0, w23, #0x1
   10334:	cset	w1, cc  // cc = lo, ul, last
   10338:	ands	w1, w1, w0
   1033c:	b.ne	103c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x258>  // b.any
   10340:	cmp	w23, #0x0
   10344:	ccmp	x19, x28, #0x0, ne  // ne = any
   10348:	b.cc	10368 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>  // b.lo, b.ul, b.last
   1034c:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10350:	mov	w23, #0x0                   	// #0
   10354:	ldr	x1, [x0, #3088]
   10358:	cbz	x1, 10368 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   1035c:	mov	w0, #0x0                   	// #0
   10360:	blr	x1
   10364:	nop
   10368:	cbz	w26, 102c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   1036c:	scvtf	d0, d8
   10370:	scvtf	d1, x28
   10374:	fmul	d0, d0, d9
   10378:	fcmpe	d1, d0
   1037c:	b.le	102c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   10380:	mov	x1, x28
   10384:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10388:	add	x0, x0, #0xb18
   1038c:	bl	1ccf0 <OnPrint@@Base+0x310>
   10390:	fmov	d8, x28
   10394:	mov	x1, #0x14                  	// #20
   10398:	mov	x0, #0x5a                  	// #90
   1039c:	bl	6a00 <__sanitizer_print_memory_profile@plt>
   103a0:	b	102c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>
   103a4:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   103a8:	mov	x20, x28
   103ac:	mov	x2, x28
   103b0:	ldr	x1, [x0, #4024]
   103b4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   103b8:	add	x0, x0, #0xa78
   103bc:	ldr	x1, [x1]
   103c0:	bl	1ccf0 <OnPrint@@Base+0x310>
   103c4:	b	102f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x184>
   103c8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   103cc:	mov	w23, w1
   103d0:	mov	x3, x28
   103d4:	mov	x2, x19
   103d8:	ldr	x5, [x0, #4024]
   103dc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   103e0:	add	x0, x0, #0xae8
   103e4:	ldr	x1, [x5]
   103e8:	bl	1cd78 <OnPrint@@Base+0x398>
   103ec:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   103f0:	ldr	x1, [x0, #3088]
   103f4:	cbz	x1, 10368 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   103f8:	mov	w0, #0x1                   	// #1
   103fc:	blr	x1
   10400:	b	10368 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   10404:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   10408:	lsr	x3, x3, #20
   1040c:	ldr	x2, [x5]
   10410:	str	x5, [sp, #112]
   10414:	ldr	x1, [x0, #4024]
   10418:	ldr	x0, [sp, #120]
   1041c:	ldr	x1, [x1]
   10420:	bl	1ccf0 <OnPrint@@Base+0x310>
   10424:	ldr	x5, [sp, #112]
   10428:	cmp	w24, #0x0
   1042c:	ccmp	x21, x28, #0x2, ne  // ne = any
   10430:	ldr	x22, [x5, #8]
   10434:	b.cs	10328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b8>  // b.hs, b.nlast
   10438:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1043c:	mov	x3, x28
   10440:	mov	x2, x21
   10444:	ldr	x1, [x0, #4024]
   10448:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1044c:	add	x0, x0, #0xab8
   10450:	ldr	x1, [x1]
   10454:	bl	1cd78 <OnPrint@@Base+0x398>
   10458:	bl	1ac68 <__sanitizer_set_report_fd@@Base+0x7398>
   1045c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   10460:	stp	x19, x20, [sp, #-96]!
   10464:	stp	x23, x24, [sp, #32]
   10468:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1046c:	ldr	x19, [x23, #4016]
   10470:	stp	x21, x22, [sp, #16]
   10474:	mov	x21, x0
   10478:	str	xzr, [sp, #64]
   1047c:	ldr	x1, [x19]
   10480:	str	x30, [sp, #48]
   10484:	stp	xzr, xzr, [sp, #72]
   10488:	cbz	x1, 105a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x430>
   1048c:	sub	x0, x1, #0x1
   10490:	tst	x0, x1
   10494:	b.ne	1060c <__sanitizer_install_malloc_and_free_hooks@@Base+0x49c>  // b.any
   10498:	neg	x19, x1
   1049c:	mov	x22, #0xffff                	// #65535
   104a0:	add	x1, x1, x22
   104a4:	mov	w2, #0x0                   	// #0
   104a8:	and	x19, x1, x19
   104ac:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   104b0:	mov	x0, x19
   104b4:	add	x1, x24, #0x988
   104b8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   104bc:	mov	x20, x0
   104c0:	ldr	x1, [sp, #64]
   104c4:	ldr	x2, [sp, #80]
   104c8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   104cc:	ldp	x0, x1, [sp, #64]
   104d0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   104d4:	stp	x20, x19, [sp, #64]
   104d8:	ldr	x2, [sp, #80]
   104dc:	cmp	x2, x22
   104e0:	b.ls	10558 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e8>  // b.plast
   104e4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   104e8:	mov	x2, x21
   104ec:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   104f0:	add	x1, x1, #0x8b0
   104f4:	ldr	q0, [x0, #2880]
   104f8:	add	x0, sp, #0x40
   104fc:	str	q0, [sp, #80]
   10500:	strb	wzr, [x20]
   10504:	bl	1ce00 <OnPrint@@Base+0x420>
   10508:	ldr	x19, [sp, #64]
   1050c:	b	10520 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3b0>
   10510:	strb	wzr, [x0]
   10514:	mov	x0, x19
   10518:	add	x19, x1, #0x1
   1051c:	bl	19fa0 <__sanitizer_set_report_fd@@Base+0x66d0>
   10520:	mov	w1, #0xa                   	// #10
   10524:	mov	x0, x19
   10528:	bl	15e58 <__sanitizer_set_report_fd@@Base+0x2588>
   1052c:	mov	x1, x0
   10530:	cbnz	x0, 10510 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3a0>
   10534:	ldrb	w0, [x19]
   10538:	cbnz	w0, 1057c <__sanitizer_install_malloc_and_free_hooks@@Base+0x40c>
   1053c:	ldp	x0, x1, [sp, #64]
   10540:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   10544:	ldp	x21, x22, [sp, #16]
   10548:	ldp	x23, x24, [sp, #32]
   1054c:	ldr	x30, [sp, #48]
   10550:	ldp	x19, x20, [sp], #96
   10554:	ret
   10558:	cmp	x19, x22
   1055c:	b.ls	105b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x440>  // b.plast
   10560:	mov	x3, #0x10000               	// #65536
   10564:	add	x0, x20, x2
   10568:	mov	w1, #0x0                   	// #0
   1056c:	sub	x2, x3, x2
   10570:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   10574:	ldr	x20, [sp, #64]
   10578:	b	104e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x374>
   1057c:	mov	x0, x19
   10580:	bl	19fa0 <__sanitizer_set_report_fd@@Base+0x66d0>
   10584:	ldp	x0, x1, [sp, #64]
   10588:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1058c:	ldp	x21, x22, [sp, #16]
   10590:	ldp	x23, x24, [sp, #32]
   10594:	ldr	x30, [sp, #48]
   10598:	ldp	x19, x20, [sp], #96
   1059c:	ret
   105a0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   105a4:	mov	x1, x0
   105a8:	str	x0, [x19]
   105ac:	b	1048c <__sanitizer_install_malloc_and_free_hooks@@Base+0x31c>
   105b0:	ldr	x23, [x23, #4016]
   105b4:	ldr	x0, [x23]
   105b8:	cbz	x0, 1061c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ac>
   105bc:	sub	x1, x0, #0x1
   105c0:	tst	x1, x0
   105c4:	b.ne	1060c <__sanitizer_install_malloc_and_free_hooks@@Base+0x49c>  // b.any
   105c8:	mov	x1, #0xffff                	// #65535
   105cc:	add	x19, x0, x1
   105d0:	neg	x0, x0
   105d4:	add	x1, x24, #0x988
   105d8:	and	x19, x19, x0
   105dc:	mov	w2, #0x0                   	// #0
   105e0:	mov	x0, x19
   105e4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   105e8:	ldr	x1, [sp, #64]
   105ec:	mov	x20, x0
   105f0:	ldr	x2, [sp, #80]
   105f4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   105f8:	ldp	x0, x1, [sp, #64]
   105fc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   10600:	stp	x20, x19, [sp, #64]
   10604:	ldr	x2, [sp, #80]
   10608:	b	10560 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f0>
   1060c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10610:	add	x0, x0, #0x970
   10614:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   10618:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1061c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   10620:	str	x0, [x23]
   10624:	b	105bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x44c>
   10628:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1062c:	ldr	x0, [x0, #4056]
   10630:	ldp	x1, x2, [x0, #136]
   10634:	orr	x1, x1, x2
   10638:	cbnz	x1, 10644 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d4>
   1063c:	ldrb	w0, [x0, #152]
   10640:	cbz	w0, 10660 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f0>
   10644:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   10648:	ldr	x0, [x0, #3992]
   1064c:	cbz	x0, 10660 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f0>
   10650:	adrp	x0, 10000 <__sanitizer_report_error_summary@@Base+0x68>
   10654:	mov	x1, #0x0                   	// #0
   10658:	add	x0, x0, #0x258
   1065c:	b	190d0 <__sanitizer_set_report_fd@@Base+0x5800>
   10660:	ret
   10664:	nop
   10668:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1066c:	str	x0, [x1, #3096]
   10670:	ret
   10674:	nop

0000000000010678 <__sanitizer_sandbox_on_notify@@Base>:
   10678:	str	x30, [sp, #-16]!
   1067c:	bl	1b900 <__sanitizer_set_report_fd@@Base+0x8030>
   10680:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10684:	ldr	x0, [x0, #3096]
   10688:	cbz	x0, 10698 <__sanitizer_sandbox_on_notify@@Base+0x20>
   1068c:	ldr	x30, [sp], #16
   10690:	mov	x16, x0
   10694:	br	x16
   10698:	ldr	x30, [sp], #16
   1069c:	ret
   106a0:	stp	x19, x20, [sp, #-64]!
   106a4:	mov	x20, x0
   106a8:	mov	x0, x1
   106ac:	stp	x21, x22, [sp, #16]
   106b0:	mov	x22, x2
   106b4:	mov	x21, x3
   106b8:	stp	x23, x30, [sp, #32]
   106bc:	bl	f740 <__sancov_default_options@@Base+0x2d90>
   106c0:	cbz	x0, 10794 <__sanitizer_sandbox_on_notify@@Base+0x11c>
   106c4:	mov	x19, x0
   106c8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   106cc:	ldr	x0, [x0, #4056]
   106d0:	ldr	x23, [x0, #168]
   106d4:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   106d8:	mov	x4, x19
   106dc:	mov	x5, x0
   106e0:	mov	x3, x23
   106e4:	adrp	x6, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   106e8:	add	x6, x6, #0xbb0
   106ec:	mov	x1, #0x1000                	// #4096
   106f0:	mov	x0, x20
   106f4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   106f8:	add	x2, x2, #0xbb8
   106fc:	bl	1c9e8 <OnPrint@@Base+0x8>
   10700:	add	x2, sp, #0x3c
   10704:	mov	x0, x20
   10708:	mov	w1, #0x1                   	// #1
   1070c:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   10710:	mov	w19, w0
   10714:	cmn	w0, #0x1
   10718:	b.eq	1077c <__sanitizer_sandbox_on_notify@@Base+0x104>  // b.none
   1071c:	mov	w0, w19
   10720:	mov	x4, #0x0                   	// #0
   10724:	mov	x3, #0x0                   	// #0
   10728:	mov	x2, #0x8                   	// #8
   1072c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10730:	add	x1, x1, #0xcb0
   10734:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   10738:	mov	x1, x22
   1073c:	lsl	x2, x21, #3
   10740:	mov	x4, #0x0                   	// #0
   10744:	mov	x3, #0x0                   	// #0
   10748:	mov	w0, w19
   1074c:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   10750:	mov	w0, w19
   10754:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   10758:	mov	x2, x21
   1075c:	mov	x1, x20
   10760:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10764:	add	x0, x0, #0xc08
   10768:	bl	1ccf0 <OnPrint@@Base+0x310>
   1076c:	ldp	x21, x22, [sp, #16]
   10770:	ldp	x23, x30, [sp, #32]
   10774:	ldp	x19, x20, [sp], #64
   10778:	ret
   1077c:	ldr	w2, [sp, #60]
   10780:	mov	x1, x20
   10784:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10788:	add	x0, x0, #0xbc8
   1078c:	bl	1cd78 <OnPrint@@Base+0x398>
   10790:	b	1071c <__sanitizer_sandbox_on_notify@@Base+0xa4>
   10794:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10798:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1079c:	add	x2, x2, #0xb50
   107a0:	add	x0, x0, #0xb60
   107a4:	mov	x4, #0x0                   	// #0
   107a8:	mov	x3, #0x0                   	// #0
   107ac:	mov	w1, #0x28                  	// #40
   107b0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   107b4:	nop
   107b8:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   107bc:	ldrb	w2, [x1, #3104]
   107c0:	cbz	w2, 107c8 <__sanitizer_sandbox_on_notify@@Base+0x150>
   107c4:	ret
   107c8:	stp	x19, x30, [sp, #-16]!
   107cc:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   107d0:	and	w0, w0, #0xff
   107d4:	ldr	x19, [x19, #3952]
   107d8:	strb	w0, [x1, #3104]
   107dc:	mov	x0, x19
   107e0:	bl	1b5b0 <__sanitizer_set_report_fd@@Base+0x7ce0>
   107e4:	mov	x0, x19
   107e8:	ldp	x19, x30, [sp], #16
   107ec:	b	26530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fa8>

00000000000107f0 <__sanitizer_cov_trace_pc_guard@@Base>:
   107f0:	ldr	w3, [x0]
   107f4:	cbnz	w3, 107fc <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   107f8:	ret
   107fc:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10800:	add	x0, x0, #0xc20
   10804:	add	x0, x0, #0x8
   10808:	str	x30, [sp, #-16]!
   1080c:	sub	w3, w3, #0x1
   10810:	ldr	x4, [x0, #24]
   10814:	ldr	x0, [x0, #8]
   10818:	cmp	x3, x4
   1081c:	b.cs	10838 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   10820:	ldr	x1, [x0, x3, lsl #3]
   10824:	cbnz	x1, 10830 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   10828:	sub	x30, x30, #0x1
   1082c:	str	x30, [x0, x3, lsl #3]
   10830:	ldr	x30, [sp], #16
   10834:	ret
   10838:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1083c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10840:	add	x2, x2, #0x9a0
   10844:	add	x0, x0, #0x9b8
   10848:	mov	w1, #0x1b6                 	// #438
   1084c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010850 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   10850:	cmp	x0, x1
   10854:	b.eq	109b0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>  // b.none
   10858:	stp	x19, x20, [sp, #-48]!
   1085c:	mov	x19, x0
   10860:	ldr	w0, [x0]
   10864:	str	x30, [sp, #40]
   10868:	cbz	w0, 10878 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   1086c:	ldr	x30, [sp, #40]
   10870:	ldp	x19, x20, [sp], #48
   10874:	ret
   10878:	stp	x21, x22, [sp, #16]
   1087c:	adrp	x22, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10880:	add	x0, x22, #0xc20
   10884:	mov	x20, x1
   10888:	add	x21, x0, #0x8
   1088c:	ldrb	w1, [x0, #8]
   10890:	cbz	w1, 109b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x164>
   10894:	cmp	x19, x20
   10898:	mov	x1, x19
   1089c:	b.eq	10a64 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>  // b.none
   108a0:	add	x0, x22, #0xc20
   108a4:	ldr	x0, [x0, #32]
   108a8:	mov	w21, w0
   108ac:	b.cs	10960 <__sanitizer_cov_trace_pc_guard_init@@Base+0x110>  // b.hs, b.nlast
   108b0:	sub	x3, x20, #0x1
   108b4:	sub	x3, x3, x19
   108b8:	cmp	x3, #0xf
   108bc:	lsr	x3, x3, #2
   108c0:	add	x4, x3, #0x1
   108c4:	b.ls	10a88 <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>  // b.plast
   108c8:	adrp	x5, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   108cc:	dup	v1.4s, w0
   108d0:	movi	v3.4s, #0x4
   108d4:	lsr	x2, x4, #2
   108d8:	ldr	q0, [x5, #3232]
   108dc:	add	x2, x19, x2, lsl #4
   108e0:	movi	v2.4s, #0x1
   108e4:	add	v1.4s, v1.4s, v0.4s
   108e8:	mov	v0.16b, v1.16b
   108ec:	add	v1.4s, v1.4s, v3.4s
   108f0:	add	v0.4s, v0.4s, v2.4s
   108f4:	str	q0, [x1], #16
   108f8:	cmp	x1, x2
   108fc:	b.ne	108e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x98>  // b.any
   10900:	and	x2, x4, #0xfffffffffffffffc
   10904:	cmp	x4, x2
   10908:	add	w1, w21, w2
   1090c:	add	x19, x19, x2, lsl #2
   10910:	b.eq	10958 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   10914:	mov	x2, x19
   10918:	add	w4, w1, #0x1
   1091c:	str	w4, [x2], #4
   10920:	cmp	x20, x2
   10924:	b.ls	10958 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   10928:	add	w2, w1, #0x2
   1092c:	str	w2, [x19, #4]
   10930:	add	x2, x19, #0x8
   10934:	cmp	x20, x2
   10938:	b.ls	10958 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   1093c:	add	w2, w1, #0x3
   10940:	str	w2, [x19, #8]
   10944:	add	x2, x19, #0xc
   10948:	cmp	x20, x2
   1094c:	b.ls	10958 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   10950:	add	w1, w1, #0x4
   10954:	str	w1, [x19, #12]
   10958:	add	w19, w21, #0x1
   1095c:	add	w21, w19, w3
   10960:	cmp	x0, w21, uxtw
   10964:	mov	w20, w21
   10968:	b.cs	10998 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.hs, b.nlast
   1096c:	add	x1, x22, #0xc20
   10970:	add	x1, x1, #0x8
   10974:	ldr	x2, [x1, #16]
   10978:	cmp	x20, x2, lsr #3
   1097c:	b.hi	109f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a4>  // b.pmore
   10980:	ldr	x21, [x1, #8]
   10984:	sub	x2, x20, x0
   10988:	mov	w1, #0x0                   	// #0
   1098c:	add	x0, x21, x0, lsl #3
   10990:	lsl	x2, x2, #3
   10994:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   10998:	add	x0, x22, #0xc20
   1099c:	ldp	x21, x22, [sp, #16]
   109a0:	str	x20, [x0, #32]
   109a4:	ldr	x30, [sp, #40]
   109a8:	ldp	x19, x20, [sp], #48
   109ac:	ret
   109b0:	ret
   109b4:	mov	w1, #0x1                   	// #1
   109b8:	strb	w1, [x0, #8]
   109bc:	bl	c9d0 <__sancov_default_options@@Base+0x20>
   109c0:	ldr	w0, [x19]
   109c4:	str	xzr, [x21, #8]
   109c8:	stp	xzr, xzr, [x21, #16]
   109cc:	cbz	w0, 10894 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   109d0:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   109d4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   109d8:	add	x2, x2, #0xc30
   109dc:	add	x0, x0, #0xb60
   109e0:	mov	x4, #0x0                   	// #0
   109e4:	mov	x3, #0x0                   	// #0
   109e8:	mov	w1, #0x77                  	// #119
   109ec:	str	x23, [sp, #32]
   109f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   109f4:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   109f8:	ldr	x19, [x19, #4016]
   109fc:	ldr	x0, [x19]
   10a00:	str	x23, [sp, #32]
   10a04:	cbz	x0, 10a90 <__sanitizer_cov_trace_pc_guard_init@@Base+0x240>
   10a08:	sub	x19, x0, #0x1
   10a0c:	tst	x19, x0
   10a10:	b.ne	10a9c <__sanitizer_cov_trace_pc_guard_init@@Base+0x24c>  // b.any
   10a14:	add	x23, x22, #0xc20
   10a18:	add	x19, x19, w21, uxtw #3
   10a1c:	neg	x0, x0
   10a20:	mov	w2, #0x0                   	// #0
   10a24:	and	x19, x19, x0
   10a28:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10a2c:	mov	x0, x19
   10a30:	add	x1, x1, #0x988
   10a34:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   10a38:	mov	x21, x0
   10a3c:	ldr	x1, [x23, #16]
   10a40:	ldr	x2, [x23, #32]
   10a44:	lsl	x2, x2, #3
   10a48:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   10a4c:	ldp	x0, x1, [x23, #16]
   10a50:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   10a54:	stp	x21, x19, [x23, #16]
   10a58:	ldr	x0, [x23, #32]
   10a5c:	ldr	x23, [sp, #32]
   10a60:	b	10984 <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   10a64:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10a68:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10a6c:	add	x2, x2, #0xc48
   10a70:	add	x0, x0, #0xb60
   10a74:	mov	x4, x19
   10a78:	mov	x3, x19
   10a7c:	mov	w1, #0x78                  	// #120
   10a80:	str	x23, [sp, #32]
   10a84:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   10a88:	mov	w1, w0
   10a8c:	b	10914 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>
   10a90:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   10a94:	str	x0, [x19]
   10a98:	b	10a08 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b8>
   10a9c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10aa0:	add	x0, x0, #0x970
   10aa4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   10aa8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   10aac:	nop

0000000000010ab0 <__sanitizer_cov_reset@@Base>:
   10ab0:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10ab4:	add	x0, x0, #0xc20
   10ab8:	add	x0, x0, #0x8
   10abc:	ldr	x2, [x0, #24]
   10ac0:	ldr	x0, [x0, #8]
   10ac4:	cbz	x2, 10ad4 <__sanitizer_cov_reset@@Base+0x24>
   10ac8:	lsl	x2, x2, #3
   10acc:	mov	w1, #0x0                   	// #0
   10ad0:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   10ad4:	str	x30, [sp, #-16]!
   10ad8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10adc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   10ae0:	add	x2, x2, #0x9a0
   10ae4:	add	x0, x0, #0x9b8
   10ae8:	mov	x4, #0x0                   	// #0
   10aec:	mov	x3, #0x0                   	// #0
   10af0:	mov	w1, #0x1b6                 	// #438
   10af4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>

0000000000010af8 <__sanitizer_cov_trace_cmp@@Base>:
   10af8:	ret
   10afc:	nop

0000000000010b00 <__sanitizer_cov_trace_cmp1@@Base>:
   10b00:	ret
   10b04:	nop

0000000000010b08 <__sanitizer_cov_trace_cmp2@@Base>:
   10b08:	ret
   10b0c:	nop

0000000000010b10 <__sanitizer_cov_trace_cmp4@@Base>:
   10b10:	ret
   10b14:	nop

0000000000010b18 <__sanitizer_cov_trace_cmp8@@Base>:
   10b18:	ret
   10b1c:	nop

0000000000010b20 <__sanitizer_cov_trace_const_cmp1@@Base>:
   10b20:	ret
   10b24:	nop

0000000000010b28 <__sanitizer_cov_trace_const_cmp2@@Base>:
   10b28:	ret
   10b2c:	nop

0000000000010b30 <__sanitizer_cov_trace_const_cmp4@@Base>:
   10b30:	ret
   10b34:	nop

0000000000010b38 <__sanitizer_cov_trace_const_cmp8@@Base>:
   10b38:	ret
   10b3c:	nop

0000000000010b40 <__sanitizer_cov_trace_switch@@Base>:
   10b40:	ret
   10b44:	nop

0000000000010b48 <__sanitizer_cov_trace_div4@@Base>:
   10b48:	ret
   10b4c:	nop

0000000000010b50 <__sanitizer_cov_trace_div8@@Base>:
   10b50:	ret
   10b54:	nop

0000000000010b58 <__sanitizer_cov_trace_gep@@Base>:
   10b58:	ret
   10b5c:	nop

0000000000010b60 <__sanitizer_cov_trace_pc_indir@@Base>:
   10b60:	ret
   10b64:	nop

0000000000010b68 <__sanitizer_cov_8bit_counters_init@@Base>:
   10b68:	ret
   10b6c:	nop

0000000000010b70 <__sanitizer_cov_pcs_init@@Base>:
   10b70:	ret
   10b74:	nop

0000000000010b78 <__sanitizer_dump_coverage@@Base>:
   10b78:	cbnz	x1, 10b80 <__sanitizer_dump_coverage@@Base+0x8>
   10b7c:	ret
   10b80:	stp	x19, x20, [sp, #-128]!
   10b84:	mov	x20, x1
   10b88:	mov	x19, x0
   10b8c:	mov	x2, #0x0                   	// #0
   10b90:	mov	x1, #0x0                   	// #0
   10b94:	mov	x0, #0x1000                	// #4096
   10b98:	stp	x21, x22, [sp, #16]
   10b9c:	lsl	x22, x20, #3
   10ba0:	stp	x23, x24, [sp, #32]
   10ba4:	mov	w23, #0x0                   	// #0
   10ba8:	stp	x25, x26, [sp, #48]
   10bac:	mov	x26, #0x0                   	// #0
   10bb0:	stp	x27, x28, [sp, #64]
   10bb4:	adrp	x28, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   10bb8:	mov	x27, #0x0                   	// #0
   10bbc:	str	x30, [sp, #80]
   10bc0:	bl	ce20 <__sancov_default_options@@Base+0x470>
   10bc4:	mov	x2, #0x0                   	// #0
   10bc8:	mov	x1, #0x0                   	// #0
   10bcc:	mov	x25, x0
   10bd0:	mov	x0, #0x1000                	// #4096
   10bd4:	bl	ce20 <__sancov_default_options@@Base+0x470>
   10bd8:	mov	x24, x0
   10bdc:	mov	x2, #0x0                   	// #0
   10be0:	mov	x1, #0x0                   	// #0
   10be4:	mov	x0, x22
   10be8:	bl	ce20 <__sancov_default_options@@Base+0x470>
   10bec:	mov	x1, x19
   10bf0:	mov	x2, x22
   10bf4:	mov	x21, x0
   10bf8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   10bfc:	mov	x0, x21
   10c00:	mov	x1, x20
   10c04:	mov	w2, #0x0                   	// #0
   10c08:	bl	10d68 <__sanitizer_cov_dump@@Base+0x8>
   10c0c:	add	x0, x28, #0xc60
   10c10:	mov	x19, #0x0                   	// #0
   10c14:	str	x0, [sp, #104]
   10c18:	b	10c4c <__sanitizer_dump_coverage@@Base+0xd4>
   10c1c:	cbnz	w23, 10d00 <__sanitizer_dump_coverage@@Base+0x188>
   10c20:	mov	x3, x28
   10c24:	mov	x0, x22
   10c28:	mov	x26, x5
   10c2c:	mov	w23, w4
   10c30:	mov	x1, x24
   10c34:	mov	x27, x19
   10c38:	mov	x2, #0x1000                	// #4096
   10c3c:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   10c40:	add	x19, x19, #0x1
   10c44:	cmp	x20, x19
   10c48:	b.eq	10c9c <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   10c4c:	ldr	x22, [x21, x19, lsl #3]
   10c50:	add	x28, x21, x19, lsl #3
   10c54:	mov	x3, x28
   10c58:	mov	x2, #0x0                   	// #0
   10c5c:	mov	x0, x22
   10c60:	mov	x1, #0x0                   	// #0
   10c64:	cbz	x22, 10c40 <__sanitizer_dump_coverage@@Base+0xc8>
   10c68:	bl	6410 <__sanitizer_get_module_and_offset_for_pc@plt>
   10c6c:	eor	w1, w23, #0x1
   10c70:	cbz	w0, 10cf0 <__sanitizer_dump_coverage@@Base+0x178>
   10c74:	ldr	x5, [x21, x19, lsl #3]
   10c78:	sub	x5, x22, x5
   10c7c:	cmp	x5, x26
   10c80:	cset	w4, ne  // ne = any
   10c84:	orr	w4, w4, w1
   10c88:	cbnz	w4, 10c1c <__sanitizer_dump_coverage@@Base+0xa4>
   10c8c:	add	x19, x19, #0x1
   10c90:	mov	w23, #0x1                   	// #1
   10c94:	cmp	x20, x19
   10c98:	b.ne	10c4c <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   10c9c:	cbz	w23, 10cb4 <__sanitizer_dump_coverage@@Base+0x13c>
   10ca0:	sub	x3, x20, x27
   10ca4:	add	x2, x21, x27, lsl #3
   10ca8:	mov	x1, x24
   10cac:	mov	x0, x25
   10cb0:	bl	106a0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   10cb4:	mov	x0, x25
   10cb8:	mov	x1, #0x0                   	// #0
   10cbc:	bl	d220 <__sancov_default_options@@Base+0x870>
   10cc0:	mov	x0, x24
   10cc4:	mov	x1, #0x0                   	// #0
   10cc8:	bl	d220 <__sancov_default_options@@Base+0x870>
   10ccc:	mov	x0, x21
   10cd0:	mov	x1, #0x0                   	// #0
   10cd4:	ldp	x21, x22, [sp, #16]
   10cd8:	ldp	x23, x24, [sp, #32]
   10cdc:	ldp	x25, x26, [sp, #48]
   10ce0:	ldp	x27, x28, [sp, #64]
   10ce4:	ldr	x30, [sp, #80]
   10ce8:	ldp	x19, x20, [sp], #128
   10cec:	b	d220 <__sancov_default_options@@Base+0x870>
   10cf0:	ldr	x0, [sp, #104]
   10cf4:	mov	x1, x22
   10cf8:	bl	1ccf0 <OnPrint@@Base+0x310>
   10cfc:	b	10c40 <__sanitizer_dump_coverage@@Base+0xc8>
   10d00:	sub	x3, x19, x27
   10d04:	add	x2, x21, x27, lsl #3
   10d08:	mov	x1, x24
   10d0c:	mov	x0, x25
   10d10:	str	x5, [sp, #112]
   10d14:	str	w4, [sp, #124]
   10d18:	bl	106a0 <__sanitizer_sandbox_on_notify@@Base+0x28>
   10d1c:	ldr	w4, [sp, #124]
   10d20:	ldr	x5, [sp, #112]
   10d24:	b	10c20 <__sanitizer_dump_coverage@@Base+0xa8>

0000000000010d28 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   10d28:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   10d2c:	add	x0, x0, #0xc20
   10d30:	add	x1, x0, #0x8
   10d34:	ldrb	w0, [x0, #8]
   10d38:	cbz	w0, 10d4c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   10d3c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   10d40:	ldr	x0, [x0, #4056]
   10d44:	ldrb	w0, [x0, #161]
   10d48:	cbnz	w0, 10d50 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   10d4c:	ret
   10d50:	ldr	x0, [x1, #8]
   10d54:	ldr	x1, [x1, #24]
   10d58:	b	6650 <__sanitizer_dump_coverage@plt>
   10d5c:	nop

0000000000010d60 <__sanitizer_cov_dump@@Base>:
   10d60:	b	67d0 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   10d64:	nop
   10d68:	cmp	x1, #0x1
   10d6c:	mov	x4, #0x1                   	// #1
   10d70:	b.ls	10e64 <__sanitizer_cov_dump@@Base+0x104>  // b.plast
   10d74:	nop
   10d78:	ldr	x5, [x0, x4, lsl #3]
   10d7c:	mov	x2, x4
   10d80:	sub	x3, x2, #0x1
   10d84:	mov	x6, x2
   10d88:	lsr	x2, x3, #1
   10d8c:	ldr	x3, [x0, x2, lsl #3]
   10d90:	cmp	x3, x5
   10d94:	b.cs	10da4 <__sanitizer_cov_dump@@Base+0x44>  // b.hs, b.nlast
   10d98:	str	x3, [x0, x6, lsl #3]
   10d9c:	str	x5, [x0, x2, lsl #3]
   10da0:	cbnz	x2, 10d80 <__sanitizer_cov_dump@@Base+0x20>
   10da4:	add	x2, x4, #0x1
   10da8:	cmp	x1, x2
   10dac:	b.eq	10dfc <__sanitizer_cov_dump@@Base+0x9c>  // b.none
   10db0:	mov	x4, x2
   10db4:	b	10d78 <__sanitizer_cov_dump@@Base+0x18>
   10db8:	cmp	x1, x4
   10dbc:	b.cs	10df4 <__sanitizer_cov_dump@@Base+0x94>  // b.hs, b.nlast
   10dc0:	lsl	x5, x5, #4
   10dc4:	add	x7, x0, x5
   10dc8:	ldr	x3, [x0, x2, lsl #3]
   10dcc:	ldr	x5, [x0, x5]
   10dd0:	cmp	x5, x3
   10dd4:	b.ls	10df4 <__sanitizer_cov_dump@@Base+0x94>  // b.plast
   10dd8:	cmp	x1, x2
   10ddc:	b.eq	10df4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   10de0:	ldr	x3, [x0, x2, lsl #3]
   10de4:	str	x5, [x0, x2, lsl #3]
   10de8:	str	x3, [x7]
   10dec:	cmp	x1, x4
   10df0:	b.cc	10e5c <__sanitizer_cov_dump@@Base+0xfc>  // b.lo, b.ul, b.last
   10df4:	subs	x4, x4, #0x1
   10df8:	b.eq	10e64 <__sanitizer_cov_dump@@Base+0x104>  // b.none
   10dfc:	ldr	x3, [x0, x4, lsl #3]
   10e00:	mov	x2, #0x0                   	// #0
   10e04:	ldr	x1, [x0]
   10e08:	str	x3, [x0]
   10e0c:	str	x1, [x0, x4, lsl #3]
   10e10:	lsl	x1, x2, #1
   10e14:	add	x5, x2, #0x1
   10e18:	add	x3, x1, #0x1
   10e1c:	add	x1, x1, #0x2
   10e20:	cmp	x3, x4
   10e24:	b.cs	10db8 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   10e28:	ldr	x6, [x0, x3, lsl #3]
   10e2c:	add	x8, x0, x3, lsl #3
   10e30:	ldr	x7, [x0, x2, lsl #3]
   10e34:	cmp	x7, x6
   10e38:	b.cs	10db8 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   10e3c:	cmp	x1, x4
   10e40:	b.cc	10e68 <__sanitizer_cov_dump@@Base+0x108>  // b.lo, b.ul, b.last
   10e44:	cmp	x3, x2
   10e48:	b.eq	10df4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   10e4c:	mov	x1, x3
   10e50:	ldr	x5, [x0, x2, lsl #3]
   10e54:	str	x6, [x0, x2, lsl #3]
   10e58:	str	x5, [x0, x3, lsl #3]
   10e5c:	mov	x2, x1
   10e60:	b	10e10 <__sanitizer_cov_dump@@Base+0xb0>
   10e64:	ret
   10e68:	lsl	x9, x5, #4
   10e6c:	add	x7, x0, x5, lsl #4
   10e70:	ldr	x5, [x0, x9]
   10e74:	cmp	x6, x5
   10e78:	b.cc	10dd8 <__sanitizer_cov_dump@@Base+0x78>  // b.lo, b.ul, b.last
   10e7c:	mov	x5, x6
   10e80:	mov	x7, x8
   10e84:	mov	x1, x3
   10e88:	b	10dd8 <__sanitizer_cov_dump@@Base+0x78>
   10e8c:	nop
   10e90:	mov	x0, #0x0                   	// #0
   10e94:	ret
   10e98:	ret
   10e9c:	nop
   10ea0:	ldr	x1, [x1, #16]
   10ea4:	ldrb	w0, [x1, #2224]
   10ea8:	cbz	w0, 10eb8 <__sanitizer_cov_dump@@Base+0x158>
   10eac:	add	x0, x1, #0x628
   10eb0:	strb	wzr, [x1, #2224]
   10eb4:	ret
   10eb8:	mov	x0, #0x0                   	// #0
   10ebc:	ret
   10ec0:	stp	x19, x30, [sp, #-16]!
   10ec4:	mov	x2, #0x0                   	// #0
   10ec8:	mov	x19, x1
   10ecc:	mov	x0, #0x8b8                 	// #2232
   10ed0:	mov	x1, #0x0                   	// #0
   10ed4:	bl	ce20 <__sancov_default_options@@Base+0x470>
   10ed8:	mov	x3, x0
   10edc:	str	x19, [x0]
   10ee0:	str	xzr, [x3, #8]!
   10ee4:	str	xzr, [x3, #520]
   10ee8:	str	xzr, [x3, #1040]
   10eec:	str	xzr, [x3, #1560]
   10ef0:	strb	wzr, [x0, #2224]
   10ef4:	ldp	x19, x30, [sp], #16
   10ef8:	ret
   10efc:	nop
   10f00:	mov	x0, x1
   10f04:	mov	x1, #0x0                   	// #0
   10f08:	b	d220 <__sancov_default_options@@Base+0x870>
   10f0c:	nop
   10f10:	ldr	x1, [x1, #16]
   10f14:	ldr	x2, [x2]
   10f18:	ldr	x3, [x1, #528]
   10f1c:	and	x0, x2, #0xfffffffffffff000
   10f20:	cmp	x3, x0
   10f24:	b.eq	10f2c <__sanitizer_cov_dump@@Base+0x1cc>  // b.none
   10f28:	ret
   10f2c:	ldr	x7, [x1, #1048]
   10f30:	add	x6, x1, #0x8
   10f34:	and	x4, x2, #0xfff
   10f38:	cbz	x7, 10f84 <__sanitizer_cov_dump@@Base+0x224>
   10f3c:	sub	x8, x7, #0x1
   10f40:	mov	x0, x8
   10f44:	tbnz	x8, #63, 10f84 <__sanitizer_cov_dump@@Base+0x224>
   10f48:	add	x5, x1, #0x218
   10f4c:	b	10f5c <__sanitizer_cov_dump@@Base+0x1fc>
   10f50:	sub	x0, x0, #0x1
   10f54:	cmn	x0, #0x1
   10f58:	b.eq	10f84 <__sanitizer_cov_dump@@Base+0x224>  // b.none
   10f5c:	ldr	x3, [x5, x0, lsl #3]
   10f60:	cmp	x4, x3
   10f64:	b.ne	10f50 <__sanitizer_cov_dump@@Base+0x1f0>  // b.any
   10f68:	add	x1, x1, x7, lsl #3
   10f6c:	add	x0, x0, #0x42
   10f70:	str	x8, [x6, #1040]
   10f74:	ldr	x2, [x1, #528]
   10f78:	str	x2, [x6, x0, lsl #3]
   10f7c:	str	x4, [x1, #528]
   10f80:	ret
   10f84:	ldr	x7, [x1, #8]
   10f88:	lsr	x3, x4, #6
   10f8c:	mov	x0, #0x1                   	// #1
   10f90:	lsl	x5, x0, x3
   10f94:	tst	x7, x5
   10f98:	b.eq	10f28 <__sanitizer_cov_dump@@Base+0x1c8>  // b.none
   10f9c:	add	x3, x3, x0
   10fa0:	lsl	x0, x0, x2
   10fa4:	ldr	x2, [x6, x3, lsl #3]
   10fa8:	bic	x0, x2, x0
   10fac:	str	x0, [x6, x3, lsl #3]
   10fb0:	cbz	x0, 1102c <__sanitizer_cov_dump@@Base+0x2cc>
   10fb4:	cmp	x2, x0
   10fb8:	b.eq	10f28 <__sanitizer_cov_dump@@Base+0x1c8>  // b.none
   10fbc:	ldr	x5, [x6, #1560]
   10fc0:	cbz	x5, 10f28 <__sanitizer_cov_dump@@Base+0x1c8>
   10fc4:	sub	x7, x5, #0x1
   10fc8:	mov	x0, x7
   10fcc:	tbnz	x7, #63, 10f28 <__sanitizer_cov_dump@@Base+0x1c8>
   10fd0:	add	x1, x1, #0x420
   10fd4:	mov	w3, w4
   10fd8:	b	10fe8 <__sanitizer_cov_dump@@Base+0x288>
   10fdc:	sub	x0, x0, #0x1
   10fe0:	cmn	x0, #0x1
   10fe4:	b.eq	10f28 <__sanitizer_cov_dump@@Base+0x1c8>  // b.none
   10fe8:	lsl	x2, x0, #3
   10fec:	ldr	w2, [x1, x2]
   10ff0:	cmp	w3, w2
   10ff4:	b.ne	10fdc <__sanitizer_cov_dump@@Base+0x27c>  // b.any
   10ff8:	add	x3, x6, x0, lsl #3
   10ffc:	add	x1, x5, #0x82
   11000:	add	x5, x6, x7, lsl #3
   11004:	mov	x0, x3
   11008:	lsl	x1, x1, #3
   1100c:	add	x2, x6, x1
   11010:	ldr	w3, [x3, #1052]
   11014:	ldr	x5, [x5, #1048]
   11018:	str	x5, [x0, #1048]
   1101c:	str	w4, [x6, x1]
   11020:	str	w3, [x2, #4]
   11024:	str	x7, [x6, #1560]
   11028:	ret
   1102c:	bic	x5, x7, x5
   11030:	str	x5, [x1, #8]
   11034:	b	10fb4 <__sanitizer_cov_dump@@Base+0x254>
   11038:	ldr	x3, [x1]
   1103c:	stp	x19, x30, [sp, #-16]!
   11040:	mov	x19, x2
   11044:	adrp	x2, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   11048:	add	x2, x2, #0x508
   1104c:	ldr	x3, [x3]
   11050:	str	xzr, [x19]
   11054:	mov	w0, #0x0                   	// #0
   11058:	cmp	x3, x2
   1105c:	b.ne	1106c <__sanitizer_cov_dump@@Base+0x30c>  // b.any
   11060:	str	w0, [x19, #8]
   11064:	ldp	x19, x30, [sp], #16
   11068:	ret
   1106c:	mov	x0, x1
   11070:	blr	x3
   11074:	str	w0, [x19, #8]
   11078:	ldp	x19, x30, [sp], #16
   1107c:	ret
   11080:	stp	x19, x20, [sp, #-32]!
   11084:	mov	x20, x0
   11088:	ldr	x0, [x2]
   1108c:	str	x30, [sp, #16]
   11090:	cbnz	x0, 110a0 <__sanitizer_cov_dump@@Base+0x340>
   11094:	ldr	x30, [sp, #16]
   11098:	ldp	x19, x20, [sp], #32
   1109c:	ret
   110a0:	add	x0, x20, #0x8
   110a4:	mov	x19, x2
   110a8:	mov	w2, #0x1                   	// #1
   110ac:	ldxrb	w1, [x0]
   110b0:	stxrb	w3, w2, [x0]
   110b4:	cbnz	w3, 110ac <__sanitizer_cov_dump@@Base+0x34c>
   110b8:	dmb	ish
   110bc:	tst	w1, #0xff
   110c0:	b.eq	110c8 <__sanitizer_cov_dump@@Base+0x368>  // b.none
   110c4:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   110c8:	ldr	x3, [x19]
   110cc:	cbz	x3, 110e0 <__sanitizer_cov_dump@@Base+0x380>
   110d0:	ldr	x0, [x20, #16]
   110d4:	and	x1, x3, #0xfffffffffffff000
   110d8:	cmp	x1, x0
   110dc:	b.eq	110f8 <__sanitizer_cov_dump@@Base+0x398>  // b.none
   110e0:	str	xzr, [x19]
   110e4:	dmb	ish
   110e8:	strb	wzr, [x20, #8]
   110ec:	ldr	x30, [sp, #16]
   110f0:	ldp	x19, x20, [sp], #32
   110f4:	ret
   110f8:	cmp	x3, #0xfff
   110fc:	b.ls	111b8 <__sanitizer_cov_dump@@Base+0x458>  // b.plast
   11100:	ubfx	x0, x3, #6, #6
   11104:	mov	x1, #0x1                   	// #1
   11108:	ldr	x6, [x20, #24]
   1110c:	add	x4, x0, x1
   11110:	and	x2, x3, #0xfff
   11114:	lsl	x0, x1, x0
   11118:	lsl	x5, x4, #3
   1111c:	tst	x0, x6
   11120:	lsl	x3, x1, x3
   11124:	b.ne	11154 <__sanitizer_cov_dump@@Base+0x3f4>  // b.any
   11128:	ldr	x1, [x20, #544]
   1112c:	add	x5, x20, #0x220
   11130:	tst	x0, x1
   11134:	b.ne	11184 <__sanitizer_cov_dump@@Base+0x424>  // b.any
   11138:	orr	x0, x0, x1
   1113c:	str	x0, [x20, #544]
   11140:	str	x3, [x5, x4, lsl #3]
   11144:	add	x2, x2, x2, lsl #6
   11148:	add	x2, x20, x2, lsl #3
   1114c:	str	xzr, [x2, #1584]
   11150:	b	110e0 <__sanitizer_cov_dump@@Base+0x380>
   11154:	add	x5, x20, x5
   11158:	ldr	x1, [x5, #24]
   1115c:	tst	x3, x1
   11160:	b.eq	11128 <__sanitizer_cov_dump@@Base+0x3c8>  // b.none
   11164:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11168:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1116c:	add	x2, x2, #0xd90
   11170:	add	x0, x0, #0xd48
   11174:	mov	x4, #0x0                   	// #0
   11178:	mov	x3, #0x0                   	// #0
   1117c:	mov	w1, #0xc0                  	// #192
   11180:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11184:	ldr	x0, [x5, x4, lsl #3]
   11188:	orr	x3, x0, x3
   1118c:	str	x3, [x5, x4, lsl #3]
   11190:	cmp	x0, x3
   11194:	b.ne	11144 <__sanitizer_cov_dump@@Base+0x3e4>  // b.any
   11198:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1119c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   111a0:	add	x2, x2, #0xdc0
   111a4:	add	x0, x0, #0xd48
   111a8:	mov	x4, #0x0                   	// #0
   111ac:	mov	x3, #0x0                   	// #0
   111b0:	mov	w1, #0xc1                  	// #193
   111b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   111b8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   111bc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   111c0:	add	x2, x2, #0xd30
   111c4:	add	x0, x0, #0xd48
   111c8:	mov	x4, #0x1000                	// #4096
   111cc:	mov	w1, #0x172                 	// #370
   111d0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   111d4:	nop
   111d8:	stp	x19, x30, [sp, #-16]!
   111dc:	mov	x19, x0
   111e0:	mov	x0, #0xa50                 	// #2640
   111e4:	mov	w2, #0x0                   	// #0
   111e8:	movk	x0, #0x41, lsl #16
   111ec:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   111f0:	add	x1, x1, #0xde8
   111f4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   111f8:	add	x4, x0, #0x410, lsl #12
   111fc:	strb	wzr, [x0, #8]
   11200:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   11204:	add	x3, x1, #0xd70
   11208:	add	x2, x0, #0x208, lsl #12
   1120c:	str	x3, [x0]
   11210:	add	x1, x0, #0x630
   11214:	ldrb	w3, [x19]
   11218:	add	x2, x2, #0x630
   1121c:	strb	w3, [x4, #2632]
   11220:	stp	xzr, xzr, [x0, #16]
   11224:	str	xzr, [x0, #544]
   11228:	str	xzr, [x1]
   1122c:	add	x1, x1, #0x208
   11230:	cmp	x1, x2
   11234:	b.ne	11228 <__sanitizer_cov_dump@@Base+0x4c8>  // b.any
   11238:	add	x1, x0, #0x10
   1123c:	add	x1, x1, #0x410, lsl #12
   11240:	str	xzr, [x1, #2608]
   11244:	ldp	x19, x30, [sp], #16
   11248:	ret
   1124c:	nop
   11250:	add	x5, x0, #0x410, lsl #12
   11254:	strb	wzr, [x0, #8]
   11258:	add	x3, x0, #0x208, lsl #12
   1125c:	adrp	x4, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   11260:	ldrb	w1, [x1]
   11264:	add	x4, x4, #0xd70
   11268:	str	x4, [x0]
   1126c:	add	x2, x0, #0x630
   11270:	add	x3, x3, #0x630
   11274:	strb	w1, [x5, #2632]
   11278:	stp	xzr, xzr, [x0, #16]
   1127c:	str	xzr, [x0, #544]
   11280:	str	xzr, [x2]
   11284:	add	x2, x2, #0x208
   11288:	cmp	x2, x3
   1128c:	b.ne	11280 <__sanitizer_cov_dump@@Base+0x520>  // b.any
   11290:	add	x0, x0, #0x10
   11294:	add	x0, x0, #0x410, lsl #12
   11298:	str	xzr, [x0, #2608]
   1129c:	ret
   112a0:	ldr	x3, [x2]
   112a4:	cbz	x3, 112b8 <__sanitizer_cov_dump@@Base+0x558>
   112a8:	ldr	x4, [x0, #16]
   112ac:	and	x3, x3, #0xfffffffffffff000
   112b0:	cmp	x3, x4
   112b4:	b.eq	1157c <__sanitizer_cov_dump@@Base+0x81c>  // b.none
   112b8:	stp	x19, x20, [sp, #-32]!
   112bc:	ldr	x9, [x0, #24]
   112c0:	str	x30, [sp, #16]
   112c4:	cbz	x9, 11330 <__sanitizer_cov_dump@@Base+0x5d0>
   112c8:	mov	x4, x0
   112cc:	rbit	x3, x9
   112d0:	clz	x3, x3
   112d4:	mov	x5, #0x1                   	// #1
   112d8:	add	x8, x3, x5
   112dc:	lsl	x7, x5, x3
   112e0:	bic	x9, x9, x7
   112e4:	str	x9, [x4, #24]!
   112e8:	ldr	x6, [x4, x8, lsl #3]
   112ec:	cbz	x6, 116d8 <__sanitizer_cov_dump@@Base+0x978>
   112f0:	rbit	x10, x6
   112f4:	clz	x10, x10
   112f8:	lsl	x5, x5, x10
   112fc:	bic	x5, x6, x5
   11300:	str	x5, [x4, x8, lsl #3]
   11304:	cbz	x5, 11310 <__sanitizer_cov_dump@@Base+0x5b0>
   11308:	orr	x7, x7, x9
   1130c:	str	x7, [x0, #24]
   11310:	add	x3, x10, x3, lsl #6
   11314:	add	x4, x0, #0x10
   11318:	add	x5, x3, #0x41, lsl #12
   1131c:	add	x5, x5, #0x146
   11320:	str	x2, [x4, x5, lsl #3]
   11324:	ldr	x4, [x0, #16]
   11328:	add	x3, x3, x4
   1132c:	b	11530 <__sanitizer_cov_dump@@Base+0x7d0>
   11330:	ldr	x15, [x0, #544]
   11334:	cbz	x15, 1147c <__sanitizer_cov_dump@@Base+0x71c>
   11338:	add	x11, x0, #0x10
   1133c:	add	x10, x11, #0x410, lsl #12
   11340:	ldr	x4, [x10, #2608]
   11344:	subs	x12, x4, #0x1
   11348:	b.mi	11420 <__sanitizer_cov_dump@@Base+0x6c0>  // b.first
   1134c:	add	x4, x4, #0x21, lsl #12
   11350:	mov	x16, #0x10a2                	// #4258
   11354:	add	x4, x4, #0xa3
   11358:	add	x14, x0, #0x220
   1135c:	mov	x13, #0x1                   	// #1
   11360:	movk	x16, #0x2, lsl #16
   11364:	add	x4, x0, x4, lsl #4
   11368:	ldrh	w6, [x4]
   1136c:	and	x3, x6, #0xffff
   11370:	cmp	x3, #0x1, lsl #12
   11374:	b.hi	11674 <__sanitizer_cov_dump@@Base+0x914>  // b.pmore
   11378:	lsr	x5, x3, #12
   1137c:	ubfx	x3, x3, #6, #6
   11380:	lsl	x8, x13, x3
   11384:	ldr	x7, [x14, x5, lsl #3]
   11388:	tst	x8, x7
   1138c:	b.ne	11560 <__sanitizer_cov_dump@@Base+0x800>  // b.any
   11390:	ldrh	w6, [x4, #2]
   11394:	and	x3, x6, #0xffff
   11398:	cmp	x3, #0x1, lsl #12
   1139c:	b.hi	1169c <__sanitizer_cov_dump@@Base+0x93c>  // b.pmore
   113a0:	lsr	x5, x3, #12
   113a4:	ubfx	x3, x3, #6, #6
   113a8:	lsl	x8, x13, x3
   113ac:	ldr	x7, [x14, x5, lsl #3]
   113b0:	tst	x8, x7
   113b4:	b.eq	11410 <__sanitizer_cov_dump@@Base+0x6b0>  // b.none
   113b8:	add	x3, x3, x5, lsl #6
   113bc:	lsl	x6, x13, x6
   113c0:	add	x3, x3, #0x1
   113c4:	ldr	x3, [x14, x3, lsl #3]
   113c8:	tst	x6, x3
   113cc:	b.eq	11410 <__sanitizer_cov_dump@@Base+0x6b0>  // b.none
   113d0:	ldr	x3, [x10, #2608]
   113d4:	ldrh	w20, [x4]
   113d8:	add	x8, x3, x16
   113dc:	sub	x5, x3, #0x1
   113e0:	ldrh	w19, [x4, #2]
   113e4:	lsl	x8, x8, #4
   113e8:	ldr	w17, [x4, #12]
   113ec:	add	x3, x11, x8
   113f0:	ldp	w30, w18, [x4, #4]
   113f4:	ldp	x6, x7, [x3]
   113f8:	stp	x6, x7, [x4]
   113fc:	strh	w20, [x11, x8]
   11400:	strh	w19, [x3, #2]
   11404:	stp	w30, w18, [x3, #4]
   11408:	str	w17, [x3, #12]
   1140c:	str	x5, [x10, #2608]
   11410:	sub	x12, x12, #0x1
   11414:	sub	x4, x4, #0x10
   11418:	cmn	x12, #0x1
   1141c:	b.ne	11368 <__sanitizer_cov_dump@@Base+0x608>  // b.any
   11420:	mov	x12, #0x1                   	// #1
   11424:	add	x6, x0, #0x630
   11428:	mov	x14, x12
   1142c:	ldr	x3, [x6, x9, lsl #3]
   11430:	add	x13, x9, #0x1
   11434:	and	x3, x15, x3
   11438:	cbz	x3, 115bc <__sanitizer_cov_dump@@Base+0x85c>
   1143c:	rbit	x4, x3
   11440:	clz	x4, x4
   11444:	add	x7, x13, x4
   11448:	add	x10, x0, x4, lsl #3
   1144c:	lsl	x5, x12, x4
   11450:	bic	x3, x3, x5
   11454:	ldr	x8, [x6, x7, lsl #3]
   11458:	ldr	x5, [x10, #552]
   1145c:	bic	x5, x8, x5
   11460:	str	x5, [x6, x7, lsl #3]
   11464:	cbnz	x5, 11438 <__sanitizer_cov_dump@@Base+0x6d8>
   11468:	ldr	x5, [x6, x9, lsl #3]
   1146c:	lsl	x4, x14, x4
   11470:	bic	x4, x5, x4
   11474:	str	x4, [x6, x9, lsl #3]
   11478:	b	11438 <__sanitizer_cov_dump@@Base+0x6d8>
   1147c:	ldr	x4, [x0, #16]
   11480:	mov	x5, x0
   11484:	mvni	v0.4s, #0x0
   11488:	add	x3, x0, #0x20
   1148c:	add	x4, x4, #0x1, lsl #12
   11490:	str	x4, [x0, #16]
   11494:	add	x4, x0, #0x220
   11498:	mov	x6, #0xffffffffffffffff    	// #-1
   1149c:	str	x6, [x5, #24]!
   114a0:	str	q0, [x3], #16
   114a4:	cmp	x3, x4
   114a8:	b.ne	114a0 <__sanitizer_cov_dump@@Base+0x740>  // b.any
   114ac:	add	x4, x0, #0x208, lsl #12
   114b0:	add	x3, x0, #0x630
   114b4:	add	x4, x4, #0x630
   114b8:	str	xzr, [x3]
   114bc:	add	x3, x3, #0x208
   114c0:	cmp	x4, x3
   114c4:	b.ne	114b8 <__sanitizer_cov_dump@@Base+0x758>  // b.any
   114c8:	add	x11, x0, #0x10
   114cc:	add	x3, x11, #0x410, lsl #12
   114d0:	str	xzr, [x3, #2608]
   114d4:	ldr	x4, [x0, #24]
   114d8:	cbz	x4, 1159c <__sanitizer_cov_dump@@Base+0x83c>
   114dc:	rbit	x3, x4
   114e0:	mov	x6, #0x1                   	// #1
   114e4:	clz	x3, x3
   114e8:	add	x9, x3, x6
   114ec:	lsl	x8, x6, x3
   114f0:	bic	x4, x4, x8
   114f4:	str	x4, [x0, #24]
   114f8:	ldr	x7, [x5, x9, lsl #3]
   114fc:	cbz	x7, 116b8 <__sanitizer_cov_dump@@Base+0x958>
   11500:	rbit	x10, x7
   11504:	clz	x10, x10
   11508:	lsl	x6, x6, x10
   1150c:	bic	x6, x7, x6
   11510:	str	x6, [x5, x9, lsl #3]
   11514:	cbnz	x6, 11690 <__sanitizer_cov_dump@@Base+0x930>
   11518:	add	x3, x10, x3, lsl #6
   1151c:	add	x4, x3, #0x41, lsl #12
   11520:	add	x4, x4, #0x146
   11524:	str	x2, [x11, x4, lsl #3]
   11528:	ldr	x4, [x0, #16]
   1152c:	add	x3, x3, x4
   11530:	str	x3, [x2]
   11534:	ldr	x2, [x1, #528]
   11538:	ldr	x4, [x0, #16]
   1153c:	cmp	x2, x4
   11540:	b.eq	11554 <__sanitizer_cov_dump@@Base+0x7f4>  // b.none
   11544:	str	xzr, [x1, #8]
   11548:	str	x4, [x1, #528]
   1154c:	str	xzr, [x1, #1048]
   11550:	str	xzr, [x1, #1568]
   11554:	ldr	x30, [sp, #16]
   11558:	ldp	x19, x20, [sp], #32
   1155c:	ret
   11560:	add	x3, x3, x5, lsl #6
   11564:	lsl	x6, x13, x6
   11568:	add	x3, x3, #0x1
   1156c:	ldr	x3, [x14, x3, lsl #3]
   11570:	tst	x6, x3
   11574:	b.ne	113d0 <__sanitizer_cov_dump@@Base+0x670>  // b.any
   11578:	b	11390 <__sanitizer_cov_dump@@Base+0x630>
   1157c:	ldr	x2, [x1, #528]
   11580:	cmp	x2, x4
   11584:	b.eq	11598 <__sanitizer_cov_dump@@Base+0x838>  // b.none
   11588:	str	xzr, [x1, #8]
   1158c:	str	x4, [x1, #528]
   11590:	str	xzr, [x1, #1048]
   11594:	str	xzr, [x1, #1568]
   11598:	ret
   1159c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   115a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   115a4:	add	x2, x2, #0xe00
   115a8:	add	x0, x0, #0xcd8
   115ac:	mov	x4, #0x0                   	// #0
   115b0:	mov	x3, #0x0                   	// #0
   115b4:	mov	w1, #0xbf                  	// #191
   115b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   115bc:	add	x9, x9, #0x41
   115c0:	cmp	x9, #0x41, lsl #12
   115c4:	ldr	x15, [x0, #544]
   115c8:	b.ne	1142c <__sanitizer_cov_dump@@Base+0x6cc>  // b.any
   115cc:	add	x8, x0, #0x220
   115d0:	add	x6, x0, #0x18
   115d4:	mov	x7, #0x1                   	// #1
   115d8:	cbz	x15, 11618 <__sanitizer_cov_dump@@Base+0x8b8>
   115dc:	rbit	x3, x15
   115e0:	ldr	x5, [x0, #24]
   115e4:	clz	x3, x3
   115e8:	lsl	x4, x7, x3
   115ec:	add	x3, x3, #0x1
   115f0:	bic	x15, x15, x4
   115f4:	orr	x4, x4, x5
   115f8:	str	x4, [x0, #24]
   115fc:	cmp	x4, x5
   11600:	lsl	x4, x3, #3
   11604:	b.eq	116f8 <__sanitizer_cov_dump@@Base+0x998>  // b.none
   11608:	str	xzr, [x6, x3, lsl #3]
   1160c:	ldr	x4, [x8, x3, lsl #3]
   11610:	str	x4, [x6, x3, lsl #3]
   11614:	cbnz	x15, 115dc <__sanitizer_cov_dump@@Base+0x87c>
   11618:	ldr	x5, [x0, #24]
   1161c:	str	xzr, [x0, #544]
   11620:	cbz	x5, 1159c <__sanitizer_cov_dump@@Base+0x83c>
   11624:	rbit	x3, x5
   11628:	mov	x7, x0
   1162c:	clz	x3, x3
   11630:	mov	x4, #0x1                   	// #1
   11634:	add	x6, x3, #0x1
   11638:	lsl	x8, x4, x3
   1163c:	bic	x5, x5, x8
   11640:	lsl	x6, x6, #3
   11644:	str	x5, [x7, #24]!
   11648:	ldr	x9, [x7, x6]
   1164c:	cbz	x9, 11710 <__sanitizer_cov_dump@@Base+0x9b0>
   11650:	rbit	x10, x9
   11654:	clz	x10, x10
   11658:	lsl	x4, x4, x10
   1165c:	bic	x4, x9, x4
   11660:	str	x4, [x7, x6]
   11664:	cbz	x4, 11518 <__sanitizer_cov_dump@@Base+0x7b8>
   11668:	orr	x5, x8, x5
   1166c:	str	x5, [x0, #24]
   11670:	b	11518 <__sanitizer_cov_dump@@Base+0x7b8>
   11674:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11678:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1167c:	add	x2, x2, #0xd18
   11680:	add	x0, x0, #0xcd8
   11684:	mov	x4, #0x1000                	// #4096
   11688:	mov	w1, #0x143                 	// #323
   1168c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11690:	orr	x4, x8, x4
   11694:	str	x4, [x0, #24]
   11698:	b	11518 <__sanitizer_cov_dump@@Base+0x7b8>
   1169c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116a4:	add	x2, x2, #0xd18
   116a8:	add	x0, x0, #0xcd8
   116ac:	mov	x4, #0x1000                	// #4096
   116b0:	mov	w1, #0x143                 	// #323
   116b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   116b8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116bc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116c0:	add	x2, x2, #0x70
   116c4:	add	x0, x0, #0xcd8
   116c8:	mov	x4, #0x0                   	// #0
   116cc:	mov	x3, #0x0                   	// #0
   116d0:	mov	w1, #0x30                  	// #48
   116d4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   116d8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116dc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   116e0:	add	x2, x2, #0x70
   116e4:	add	x0, x0, #0xcd8
   116e8:	mov	x4, #0x0                   	// #0
   116ec:	mov	x3, #0x0                   	// #0
   116f0:	mov	w1, #0x30                  	// #48
   116f4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   116f8:	ldr	x3, [x6, x4]
   116fc:	ldr	x5, [x8, x4]
   11700:	orr	x3, x3, x5
   11704:	str	x3, [x6, x4]
   11708:	cbnz	x15, 115dc <__sanitizer_cov_dump@@Base+0x87c>
   1170c:	b	11618 <__sanitizer_cov_dump@@Base+0x8b8>
   11710:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11714:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11718:	add	x2, x2, #0x70
   1171c:	add	x0, x0, #0xcd8
   11720:	mov	x4, #0x0                   	// #0
   11724:	mov	x3, #0x0                   	// #0
   11728:	mov	w1, #0x30                  	// #48
   1172c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11730:	stp	x19, x20, [sp, #-96]!
   11734:	mov	x20, x1
   11738:	add	x1, x0, #0x410, lsl #12
   1173c:	stp	x21, x22, [sp, #16]
   11740:	mov	x19, x0
   11744:	mov	x21, x2
   11748:	ldrb	w1, [x1, #2632]
   1174c:	stp	x23, x24, [sp, #32]
   11750:	and	w24, w3, #0xff
   11754:	stp	x25, x26, [sp, #48]
   11758:	and	w26, w4, #0xff
   1175c:	mov	w25, #0x0                   	// #0
   11760:	ldr	x23, [x20, #16]
   11764:	str	x30, [sp, #64]
   11768:	cbz	w1, 11784 <__sanitizer_cov_dump@@Base+0xa24>
   1176c:	ldr	x0, [x20]
   11770:	adrp	x1, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   11774:	add	x1, x1, #0x508
   11778:	ldr	x2, [x0]
   1177c:	cmp	x2, x1
   11780:	b.ne	1191c <__sanitizer_cov_dump@@Base+0xbbc>  // b.any
   11784:	ldr	x1, [x23, #8]
   11788:	add	x22, x23, #0x8
   1178c:	ldr	x2, [x21]
   11790:	ldr	x5, [x23, #528]
   11794:	cbz	x1, 118c0 <__sanitizer_cov_dump@@Base+0xb60>
   11798:	cbz	x2, 117a8 <__sanitizer_cov_dump@@Base+0xa48>
   1179c:	ldr	x0, [x19, #16]
   117a0:	cmp	x0, x5
   117a4:	b.eq	11940 <__sanitizer_cov_dump@@Base+0xbe0>  // b.none
   117a8:	add	x0, x19, #0x8
   117ac:	mov	w2, #0x1                   	// #1
   117b0:	ldxrb	w1, [x0]
   117b4:	stxrb	w3, w2, [x0]
   117b8:	cbnz	w3, 117b0 <__sanitizer_cov_dump@@Base+0xa50>
   117bc:	dmb	ish
   117c0:	tst	w1, #0xff
   117c4:	b.eq	117d0 <__sanitizer_cov_dump@@Base+0xa70>  // b.none
   117c8:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   117cc:	nop
   117d0:	mov	x2, x21
   117d4:	mov	x1, x23
   117d8:	mov	x0, x19
   117dc:	bl	112a0 <__sanitizer_cov_dump@@Base+0x540>
   117e0:	cbnz	w24, 119fc <__sanitizer_cov_dump@@Base+0xc9c>
   117e4:	ldr	x24, [x21]
   117e8:	cbnz	w26, 11824 <__sanitizer_cov_dump@@Base+0xac4>
   117ec:	mov	w3, w25
   117f0:	ldr	x1, [x20]
   117f4:	cbz	w25, 11ac4 <__sanitizer_cov_dump@@Base+0xd64>
   117f8:	ldr	x2, [x1, #8]
   117fc:	adrp	x1, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   11800:	add	x1, x1, #0x510
   11804:	mov	w4, #0x0                   	// #0
   11808:	cmp	x2, x1
   1180c:	b.ne	11b90 <__sanitizer_cov_dump@@Base+0xe30>  // b.any
   11810:	mov	x2, x24
   11814:	mov	x1, x22
   11818:	add	x0, x19, #0x10
   1181c:	bl	12750 <__sanitizer_cov_dump@@Base+0x19f0>
   11820:	ldr	x24, [x21]
   11824:	ldr	x0, [x19, #16]
   11828:	ldr	x1, [x22, #520]
   1182c:	cmp	x0, x1
   11830:	b.eq	11844 <__sanitizer_cov_dump@@Base+0xae4>  // b.none
   11834:	str	xzr, [x23, #8]
   11838:	str	x0, [x22, #520]
   1183c:	str	xzr, [x22, #1040]
   11840:	str	xzr, [x22, #1560]
   11844:	cmp	x24, #0xfff
   11848:	b.ls	11b58 <__sanitizer_cov_dump@@Base+0xdf8>  // b.plast
   1184c:	ldr	x3, [x19, #16]
   11850:	and	x4, x24, #0xfffffffffffff000
   11854:	cmp	x3, x4
   11858:	b.ne	11b78 <__sanitizer_cov_dump@@Base+0xe18>  // b.any
   1185c:	cmp	x3, x0
   11860:	and	x4, x24, #0xfff
   11864:	b.ne	11ba8 <__sanitizer_cov_dump@@Base+0xe48>  // b.any
   11868:	ldr	x1, [x23, #8]
   1186c:	lsr	x2, x4, #6
   11870:	mov	x0, #0x1                   	// #1
   11874:	add	x3, x2, x0
   11878:	lsl	x24, x0, x24
   1187c:	lsl	x0, x0, x2
   11880:	tst	x1, x0
   11884:	b.ne	11a74 <__sanitizer_cov_dump@@Base+0xd14>  // b.any
   11888:	orr	x0, x1, x0
   1188c:	str	x0, [x23, #8]
   11890:	str	x24, [x22, x3, lsl #3]
   11894:	ldr	x3, [x22, #1560]
   11898:	cmp	x3, #0x3f
   1189c:	b.hi	11aec <__sanitizer_cov_dump@@Base+0xd8c>  // b.pmore
   118a0:	add	x0, x3, #0x83
   118a4:	add	x3, x3, #0x1
   118a8:	str	x3, [x22, #1560]
   118ac:	lsl	x0, x0, #3
   118b0:	add	x1, x22, x0
   118b4:	str	w4, [x22, x0]
   118b8:	str	w25, [x1, #4]
   118bc:	b	11aa4 <__sanitizer_cov_dump@@Base+0xd44>
   118c0:	cbz	x5, 11798 <__sanitizer_cov_dump@@Base+0xa38>
   118c4:	and	x0, x2, #0xfffffffffffff000
   118c8:	cmp	x0, x5
   118cc:	b.ne	11798 <__sanitizer_cov_dump@@Base+0xa38>  // b.any
   118d0:	ubfx	x1, x2, #6, #6
   118d4:	mov	x0, #0x1                   	// #1
   118d8:	add	x3, x1, x0
   118dc:	lsl	x4, x0, x2
   118e0:	lsl	x0, x0, x1
   118e4:	str	x0, [x23, #8]
   118e8:	and	x2, x2, #0xfff
   118ec:	str	x4, [x22, x3, lsl #3]
   118f0:	ldr	x3, [x22, #1560]
   118f4:	cmp	x3, #0x3f
   118f8:	b.hi	11aec <__sanitizer_cov_dump@@Base+0xd8c>  // b.pmore
   118fc:	add	x0, x3, #0x83
   11900:	add	x3, x3, #0x1
   11904:	str	x3, [x22, #1560]
   11908:	lsl	x0, x0, #3
   1190c:	add	x1, x22, x0
   11910:	str	w2, [x22, x0]
   11914:	str	w25, [x1, #4]
   11918:	b	11aac <__sanitizer_cov_dump@@Base+0xd4c>
   1191c:	mov	x0, x20
   11920:	blr	x2
   11924:	ldr	x1, [x23, #8]
   11928:	mov	w25, w0
   1192c:	add	x22, x23, #0x8
   11930:	ldr	x2, [x21]
   11934:	ldr	x5, [x23, #528]
   11938:	cbnz	x1, 11798 <__sanitizer_cov_dump@@Base+0xa38>
   1193c:	b	118c0 <__sanitizer_cov_dump@@Base+0xb60>
   11940:	and	x0, x2, #0xfffffffffffff000
   11944:	cmp	x0, x5
   11948:	b.ne	117a8 <__sanitizer_cov_dump@@Base+0xa48>  // b.any
   1194c:	ldr	x9, [x23, #1568]
   11950:	ubfx	x6, x2, #6, #6
   11954:	mov	x0, #0x1                   	// #1
   11958:	and	x8, x2, #0xfff
   1195c:	add	x5, x6, x0
   11960:	lsl	x3, x0, x6
   11964:	lsl	x2, x0, x2
   11968:	cbz	x9, 119bc <__sanitizer_cov_dump@@Base+0xc5c>
   1196c:	add	x6, x6, #0x1
   11970:	add	x7, x19, #0x630
   11974:	add	x11, x23, #0x420
   11978:	mov	x0, #0x0                   	// #0
   1197c:	mov	w10, #0x208                 	// #520
   11980:	mov	w12, #0x41                  	// #65
   11984:	lsl	x4, x0, #3
   11988:	ldr	w4, [x11, x4]
   1198c:	umull	x5, w4, w10
   11990:	ldr	x5, [x7, x5]
   11994:	tst	x3, x5
   11998:	b.eq	117a8 <__sanitizer_cov_dump@@Base+0xa48>  // b.none
   1199c:	umaddl	x4, w4, w12, x6
   119a0:	mov	x5, x6
   119a4:	ldr	x4, [x7, x4, lsl #3]
   119a8:	tst	x2, x4
   119ac:	b.eq	117a8 <__sanitizer_cov_dump@@Base+0xa48>  // b.none
   119b0:	add	x0, x0, #0x1
   119b4:	cmp	x9, x0
   119b8:	b.ne	11984 <__sanitizer_cov_dump@@Base+0xc24>  // b.any
   119bc:	tst	x1, x3
   119c0:	b.ne	11b24 <__sanitizer_cov_dump@@Base+0xdc4>  // b.any
   119c4:	orr	x1, x1, x3
   119c8:	str	x1, [x23, #8]
   119cc:	str	x2, [x22, x5, lsl #3]
   119d0:	ldr	x3, [x22, #1560]
   119d4:	cmp	x3, #0x3f
   119d8:	b.hi	11aec <__sanitizer_cov_dump@@Base+0xd8c>  // b.pmore
   119dc:	add	x0, x3, #0x83
   119e0:	add	x3, x3, #0x1
   119e4:	str	x3, [x22, #1560]
   119e8:	lsl	x0, x0, #3
   119ec:	add	x1, x22, x0
   119f0:	str	w8, [x22, x0]
   119f4:	str	w25, [x1, #4]
   119f8:	b	11aac <__sanitizer_cov_dump@@Base+0xd4c>
   119fc:	ldr	x0, [x19, #16]
   11a00:	ldr	x3, [x22, #520]
   11a04:	ldr	x24, [x21]
   11a08:	cmp	x0, x3
   11a0c:	b.ne	11bc8 <__sanitizer_cov_dump@@Base+0xe68>  // b.any
   11a10:	cmp	x24, #0xfff
   11a14:	b.ls	11b58 <__sanitizer_cov_dump@@Base+0xdf8>  // b.plast
   11a18:	and	x4, x24, #0xfffffffffffff000
   11a1c:	mov	x3, x0
   11a20:	cmp	x0, x4
   11a24:	b.ne	11b78 <__sanitizer_cov_dump@@Base+0xe18>  // b.any
   11a28:	ldr	x2, [x23, #8]
   11a2c:	ubfx	x1, x24, #6, #6
   11a30:	mov	x0, #0x1                   	// #1
   11a34:	lsl	x3, x0, x1
   11a38:	tst	x3, x2
   11a3c:	b.eq	117e8 <__sanitizer_cov_dump@@Base+0xa88>  // b.none
   11a40:	add	x1, x1, x0
   11a44:	lsl	x0, x0, x24
   11a48:	ldr	x1, [x22, x1, lsl #3]
   11a4c:	tst	x0, x1
   11a50:	b.eq	117e8 <__sanitizer_cov_dump@@Base+0xa88>  // b.none
   11a54:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11a58:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11a5c:	add	x2, x2, #0xec8
   11a60:	add	x0, x0, #0xef0
   11a64:	mov	x4, #0x0                   	// #0
   11a68:	mov	x3, #0x0                   	// #0
   11a6c:	mov	w1, #0xa5                  	// #165
   11a70:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11a74:	ldr	x0, [x22, x3, lsl #3]
   11a78:	orr	x24, x0, x24
   11a7c:	str	x24, [x22, x3, lsl #3]
   11a80:	cmp	x0, x24
   11a84:	b.ne	11894 <__sanitizer_cov_dump@@Base+0xb34>  // b.any
   11a88:	ldr	x3, [x22, #1040]
   11a8c:	cmp	x3, #0x3f
   11a90:	b.hi	11b08 <__sanitizer_cov_dump@@Base+0xda8>  // b.pmore
   11a94:	add	x0, x3, #0x42
   11a98:	add	x3, x3, #0x1
   11a9c:	str	x3, [x22, #1040]
   11aa0:	str	x4, [x22, x0, lsl #3]
   11aa4:	dmb	ish
   11aa8:	strb	wzr, [x19, #8]
   11aac:	ldp	x21, x22, [sp, #16]
   11ab0:	ldp	x23, x24, [sp, #32]
   11ab4:	ldp	x25, x26, [sp, #48]
   11ab8:	ldr	x30, [sp, #64]
   11abc:	ldp	x19, x20, [sp], #96
   11ac0:	ret
   11ac4:	ldr	x2, [x1]
   11ac8:	adrp	x0, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   11acc:	add	x0, x0, #0x508
   11ad0:	cmp	x2, x0
   11ad4:	b.eq	117f8 <__sanitizer_cov_dump@@Base+0xa98>  // b.none
   11ad8:	mov	x0, x20
   11adc:	blr	x2
   11ae0:	mov	w3, w0
   11ae4:	ldr	x1, [x20]
   11ae8:	b	117f8 <__sanitizer_cov_dump@@Base+0xa98>
   11aec:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11af0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11af4:	add	x2, x2, #0xe10
   11af8:	add	x0, x0, #0xd48
   11afc:	mov	x4, #0x40                  	// #64
   11b00:	mov	w1, #0x43                  	// #67
   11b04:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11b08:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b0c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b10:	add	x2, x2, #0xe70
   11b14:	add	x0, x0, #0xd48
   11b18:	mov	x4, #0x40                  	// #64
   11b1c:	mov	w1, #0x3f                  	// #63
   11b20:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11b24:	ldr	x0, [x22, x5, lsl #3]
   11b28:	orr	x2, x0, x2
   11b2c:	str	x2, [x22, x5, lsl #3]
   11b30:	cmp	x0, x2
   11b34:	b.ne	119d0 <__sanitizer_cov_dump@@Base+0xc70>  // b.any
   11b38:	ldr	x3, [x22, #1040]
   11b3c:	cmp	x3, #0x3f
   11b40:	b.hi	11b08 <__sanitizer_cov_dump@@Base+0xda8>  // b.pmore
   11b44:	add	x0, x3, #0x42
   11b48:	add	x3, x3, #0x1
   11b4c:	str	x3, [x22, #1040]
   11b50:	str	x8, [x22, x0, lsl #3]
   11b54:	b	11aac <__sanitizer_cov_dump@@Base+0xd4c>
   11b58:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b5c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b60:	mov	x3, x24
   11b64:	add	x2, x2, #0xd30
   11b68:	add	x0, x0, #0xd48
   11b6c:	mov	x4, #0x1000                	// #4096
   11b70:	mov	w1, #0x172                 	// #370
   11b74:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11b78:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b7c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11b80:	add	x2, x2, #0xfe0
   11b84:	add	x0, x0, #0xd48
   11b88:	mov	w1, #0x173                 	// #371
   11b8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11b90:	str	w3, [sp, #92]
   11b94:	mov	x0, x20
   11b98:	blr	x2
   11b9c:	mov	w4, w0
   11ba0:	ldr	w3, [sp, #92]
   11ba4:	b	11810 <__sanitizer_cov_dump@@Base+0xab0>
   11ba8:	mov	x4, x3
   11bac:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   11bb0:	mov	x3, x0
   11bb4:	add	x2, x2, #0x10
   11bb8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11bbc:	mov	w1, #0x3c                  	// #60
   11bc0:	add	x0, x0, #0xd48
   11bc4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11bc8:	mov	x4, x0
   11bcc:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   11bd0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11bd4:	add	x2, x2, #0x10
   11bd8:	add	x0, x0, #0xd48
   11bdc:	mov	w1, #0x6c                  	// #108
   11be0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11be4:	nop
   11be8:	stp	x19, x20, [sp, #-336]!
   11bec:	stp	x23, x24, [sp, #32]
   11bf0:	ldr	x23, [x1, #16]
   11bf4:	stp	x21, x22, [sp, #16]
   11bf8:	mov	x22, x2
   11bfc:	ldr	x4, [x0, #16]
   11c00:	stp	x25, x26, [sp, #48]
   11c04:	add	x2, x23, #0x8
   11c08:	ldr	x3, [x2, #520]
   11c0c:	stp	x27, x28, [sp, #64]
   11c10:	ldr	x25, [x22]
   11c14:	str	x30, [sp, #80]
   11c18:	cmp	x4, x3
   11c1c:	b.ne	11e28 <__sanitizer_cov_dump@@Base+0x10c8>  // b.any
   11c20:	str	xzr, [x0, #1064]
   11c24:	mov	x19, x0
   11c28:	add	x21, x0, #0x428
   11c2c:	ldr	x1, [x23, #8]
   11c30:	cbz	x1, 11c8c <__sanitizer_cov_dump@@Base+0xf2c>
   11c34:	mov	x3, #0x0                   	// #0
   11c38:	mov	x6, #0x1                   	// #1
   11c3c:	rbit	x0, x1
   11c40:	clz	x0, x0
   11c44:	lsl	x5, x6, x0
   11c48:	orr	x4, x5, x3
   11c4c:	str	x4, [x19, #1064]
   11c50:	bic	x1, x1, x5
   11c54:	cmp	x4, x3
   11c58:	add	x0, x0, #0x1
   11c5c:	b.eq	11c78 <__sanitizer_cov_dump@@Base+0xf18>  // b.none
   11c60:	str	xzr, [x21, x0, lsl #3]
   11c64:	ldr	x3, [x2, x0, lsl #3]
   11c68:	str	x3, [x21, x0, lsl #3]
   11c6c:	cbz	x1, 11c8c <__sanitizer_cov_dump@@Base+0xf2c>
   11c70:	ldr	x3, [x19, #1064]
   11c74:	b	11c3c <__sanitizer_cov_dump@@Base+0xedc>
   11c78:	ldr	x3, [x21, x0, lsl #3]
   11c7c:	ldr	x4, [x2, x0, lsl #3]
   11c80:	orr	x3, x3, x4
   11c84:	str	x3, [x21, x0, lsl #3]
   11c88:	cbnz	x1, 11c70 <__sanitizer_cov_dump@@Base+0xf10>
   11c8c:	mov	x3, x25
   11c90:	cmp	x25, #0xfff
   11c94:	b.ls	11e6c <__sanitizer_cov_dump@@Base+0x110c>  // b.plast
   11c98:	ldr	x3, [x19, #16]
   11c9c:	and	x4, x25, #0xfffffffffffff000
   11ca0:	cmp	x3, x4
   11ca4:	b.ne	11e8c <__sanitizer_cov_dump@@Base+0x112c>  // b.any
   11ca8:	ubfx	x24, x25, #6, #6
   11cac:	mov	x5, #0x1                   	// #1
   11cb0:	ldr	x20, [x19, #1064]
   11cb4:	add	x0, x24, x5
   11cb8:	and	x6, x25, #0xfff
   11cbc:	lsl	x24, x5, x24
   11cc0:	add	x11, x21, x0, lsl #3
   11cc4:	ands	x20, x20, x24
   11cc8:	lsl	x5, x5, x25
   11ccc:	b.eq	11cfc <__sanitizer_cov_dump@@Base+0xf9c>  // b.none
   11cd0:	ldr	x0, [x21, x0, lsl #3]
   11cd4:	tst	x5, x0
   11cd8:	b.eq	11cfc <__sanitizer_cov_dump@@Base+0xf9c>  // b.none
   11cdc:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11ce0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11ce4:	add	x2, x2, #0xf40
   11ce8:	add	x0, x0, #0xd48
   11cec:	mov	x4, #0x0                   	// #0
   11cf0:	mov	x3, #0x0                   	// #0
   11cf4:	mov	w1, #0x13e                 	// #318
   11cf8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11cfc:	add	x8, x6, x6, lsl #6
   11d00:	str	x6, [sp, #176]
   11d04:	add	x7, x19, #0x630
   11d08:	mov	x26, #0x1                   	// #1
   11d0c:	add	x3, sp, #0xb8
   11d10:	add	x10, x7, x8, lsl #3
   11d14:	mov	x9, x26
   11d18:	cbz	x20, 11d50 <__sanitizer_cov_dump@@Base+0xff0>
   11d1c:	ldr	x20, [x11]
   11d20:	ands	x20, x5, x20
   11d24:	b.eq	11d50 <__sanitizer_cov_dump@@Base+0xff0>  // b.none
   11d28:	mov	x0, #0x1                   	// #1
   11d2c:	cmp	x0, x26
   11d30:	b.eq	11ec4 <__sanitizer_cov_dump@@Base+0x1164>  // b.none
   11d34:	add	x26, x26, #0x1
   11d38:	cmp	x26, #0x15
   11d3c:	b.eq	12058 <__sanitizer_cov_dump@@Base+0x12f8>  // b.none
   11d40:	ldr	x20, [x19, #1064]
   11d44:	str	x6, [sp, #176]
   11d48:	and	x20, x20, x24
   11d4c:	cbnz	x20, 11d1c <__sanitizer_cov_dump@@Base+0xfbc>
   11d50:	sub	x4, x26, #0x1
   11d54:	mov	x28, #0x0                   	// #0
   11d58:	mov	x27, #0x0                   	// #0
   11d5c:	mov	x12, #0x0                   	// #0
   11d60:	cbnz	x27, 11e04 <__sanitizer_cov_dump@@Base+0x10a4>
   11d64:	cbnz	x20, 11d34 <__sanitizer_cov_dump@@Base+0xfd4>
   11d68:	ldr	x27, [x10]
   11d6c:	cbz	x27, 11d34 <__sanitizer_cov_dump@@Base+0xfd4>
   11d70:	cbnz	x28, 11e40 <__sanitizer_cov_dump@@Base+0x10e0>
   11d74:	mov	x1, x8
   11d78:	mov	x20, x28
   11d7c:	rbit	x12, x27
   11d80:	clz	x12, x12
   11d84:	add	x0, x1, x12
   11d88:	add	x0, x0, #0x1
   11d8c:	ldr	x2, [x7, x0, lsl #3]
   11d90:	cbz	x2, 11ea4 <__sanitizer_cov_dump@@Base+0x1144>
   11d94:	add	x1, x12, x28
   11d98:	lsl	x0, x9, x12
   11d9c:	mov	x28, x2
   11da0:	bic	x27, x27, x0
   11da4:	rbit	x0, x28
   11da8:	clz	x0, x0
   11dac:	add	x1, x0, x1, lsl #6
   11db0:	lsl	x2, x9, x0
   11db4:	bic	x28, x28, x2
   11db8:	orr	x0, x28, x27
   11dbc:	cbz	x0, 11e58 <__sanitizer_cov_dump@@Base+0x10f8>
   11dc0:	mov	x0, x7
   11dc4:	mov	x2, x21
   11dc8:	stp	x7, x3, [sp, #104]
   11dcc:	stp	x4, x6, [sp, #120]
   11dd0:	stp	x10, x12, [sp, #136]
   11dd4:	stp	x11, x5, [sp, #152]
   11dd8:	str	x8, [sp, #168]
   11ddc:	bl	12a30 <__sanitizer_cov_dump@@Base+0x1cd0>
   11de0:	mov	x9, #0x1                   	// #1
   11de4:	ldp	x7, x3, [sp, #104]
   11de8:	ldp	x4, x6, [sp, #120]
   11dec:	ldp	x10, x12, [sp, #136]
   11df0:	ldp	x11, x5, [sp, #152]
   11df4:	ldr	x8, [sp, #168]
   11df8:	cbz	x0, 11d60 <__sanitizer_cov_dump@@Base+0x1000>
   11dfc:	add	x0, x0, x9
   11e00:	b	11d2c <__sanitizer_cov_dump@@Base+0xfcc>
   11e04:	lsl	x0, x20, #6
   11e08:	cbz	x28, 11e4c <__sanitizer_cov_dump@@Base+0x10ec>
   11e0c:	rbit	x1, x28
   11e10:	add	x0, x12, x0
   11e14:	clz	x1, x1
   11e18:	lsl	x2, x9, x1
   11e1c:	add	x1, x1, x0, lsl #6
   11e20:	bic	x28, x28, x2
   11e24:	b	11dc0 <__sanitizer_cov_dump@@Base+0x1060>
   11e28:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   11e2c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11e30:	add	x2, x2, #0x10
   11e34:	add	x0, x0, #0xd48
   11e38:	mov	w1, #0x6c                  	// #108
   11e3c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11e40:	mov	x1, x12
   11e44:	mov	x27, #0x0                   	// #0
   11e48:	b	11da4 <__sanitizer_cov_dump@@Base+0x1044>
   11e4c:	add	x1, x8, x0
   11e50:	mov	x28, x0
   11e54:	b	11d7c <__sanitizer_cov_dump@@Base+0x101c>
   11e58:	add	x20, x20, #0x1
   11e5c:	mov	x27, #0x0                   	// #0
   11e60:	mov	x28, #0x0                   	// #0
   11e64:	b	11dc0 <__sanitizer_cov_dump@@Base+0x1060>
   11e68:	mov	x3, x5
   11e6c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11e70:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11e74:	add	x2, x2, #0xd30
   11e78:	add	x0, x0, #0xd48
   11e7c:	mov	x4, #0x1000                	// #4096
   11e80:	mov	w1, #0x172                 	// #370
   11e84:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11e88:	mov	x3, x1
   11e8c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11e90:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11e94:	add	x2, x2, #0xfe0
   11e98:	add	x0, x0, #0xd48
   11e9c:	mov	w1, #0x173                 	// #371
   11ea0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11ea4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11ea8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11eac:	add	x2, x2, #0xcb8
   11eb0:	add	x0, x0, #0xcd8
   11eb4:	mov	x4, #0x0                   	// #0
   11eb8:	mov	x3, #0x0                   	// #0
   11ebc:	mov	w1, #0x132                 	// #306
   11ec0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11ec4:	add	x7, sp, #0xb0
   11ec8:	mov	x0, x7
   11ecc:	add	x2, x7, x26, lsl #3
   11ed0:	b	11ee8 <__sanitizer_cov_dump@@Base+0x1188>
   11ed4:	ldr	x1, [x19, #16]
   11ed8:	add	x3, x3, x1
   11edc:	str	x3, [x0], #8
   11ee0:	cmp	x2, x0
   11ee4:	b.eq	11f10 <__sanitizer_cov_dump@@Base+0x11b0>  // b.none
   11ee8:	ldr	x3, [x0]
   11eec:	cmp	x3, #0xfff
   11ef0:	b.ls	11ed4 <__sanitizer_cov_dump@@Base+0x1174>  // b.plast
   11ef4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11ef8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   11efc:	add	x2, x2, #0xf60
   11f00:	add	x0, x0, #0xd48
   11f04:	mov	x4, #0x1000                	// #4096
   11f08:	mov	w1, #0x16f                 	// #367
   11f0c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   11f10:	ldr	x3, [sp, #176]
   11f14:	cmp	x25, x3
   11f18:	b.ne	12090 <__sanitizer_cov_dump@@Base+0x1330>  // b.any
   11f1c:	ldr	x3, [x22]
   11f20:	cmp	x3, x25
   11f24:	b.ne	12068 <__sanitizer_cov_dump@@Base+0x1308>  // b.any
   11f28:	add	x10, x19, #0x10
   11f2c:	mov	x0, #0x14                  	// #20
   11f30:	cmp	x26, #0x14
   11f34:	mov	x13, #0xa40                 	// #2624
   11f38:	mov	x11, #0x1146                	// #4422
   11f3c:	add	x12, x10, #0x410, lsl #12
   11f40:	add	x9, x23, #0x630
   11f44:	csel	x26, x26, x0, ls  // ls = plast
   11f48:	mov	x8, #0x1                   	// #1
   11f4c:	mov	w0, #0x1                   	// #1
   11f50:	movk	x13, #0x21, lsl #16
   11f54:	movk	x11, #0x4, lsl #16
   11f58:	str	w26, [x23, #1576]
   11f5c:	strb	w0, [x23, #2224]
   11f60:	udiv	x0, x8, x26
   11f64:	add	x2, x7, x8, lsl #3
   11f68:	ldur	x5, [x2, #-8]
   11f6c:	msub	x0, x0, x26, x8
   11f70:	cmp	x5, #0xfff
   11f74:	b.ls	11e68 <__sanitizer_cov_dump@@Base+0x1108>  // b.plast
   11f78:	and	x4, x5, #0xfffffffffffff000
   11f7c:	cmp	x1, x4
   11f80:	b.ne	11e88 <__sanitizer_cov_dump@@Base+0x1128>  // b.any
   11f84:	ldr	x3, [x7, x0, lsl #3]
   11f88:	and	x5, x5, #0xfff
   11f8c:	cmp	x3, #0xfff
   11f90:	b.ls	11e6c <__sanitizer_cov_dump@@Base+0x110c>  // b.plast
   11f94:	and	x4, x3, #0xfffffffffffff000
   11f98:	cmp	x1, x4
   11f9c:	b.ne	11e88 <__sanitizer_cov_dump@@Base+0x1128>  // b.any
   11fa0:	ldr	x4, [x12, #2608]
   11fa4:	and	x6, x3, #0xfff
   11fa8:	cbz	x4, 12084 <__sanitizer_cov_dump@@Base+0x1324>
   11fac:	add	x0, x19, x13
   11fb0:	mov	x2, #0x0                   	// #0
   11fb4:	b	11fc8 <__sanitizer_cov_dump@@Base+0x1268>
   11fb8:	add	x2, x2, #0x1
   11fbc:	add	x0, x0, #0x10
   11fc0:	cmp	x4, x2
   11fc4:	b.eq	12048 <__sanitizer_cov_dump@@Base+0x12e8>  // b.none
   11fc8:	ldrh	w3, [x0]
   11fcc:	cmp	x5, x3
   11fd0:	b.ne	11fb8 <__sanitizer_cov_dump@@Base+0x1258>  // b.any
   11fd4:	ldrh	w3, [x0, #2]
   11fd8:	cmp	x6, x3
   11fdc:	b.ne	11fb8 <__sanitizer_cov_dump@@Base+0x1258>  // b.any
   11fe0:	add	x0, x19, x2, lsl #4
   11fe4:	add	x0, x0, #0x210, lsl #12
   11fe8:	ldrsw	x4, [x0, #2636]
   11fec:	ldr	w2, [x0, #2628]
   11ff0:	ldr	w0, [x0, #2632]
   11ff4:	add	x5, x5, x11
   11ff8:	add	x3, x6, x11
   11ffc:	cmp	x26, x8
   12000:	add	x8, x8, #0x1
   12004:	ldr	x5, [x10, x5, lsl #3]
   12008:	ldr	x3, [x10, x3, lsl #3]
   1200c:	str	x4, [x9]
   12010:	ldr	x4, [x5, #16]
   12014:	str	x4, [x9, #8]
   12018:	ldr	x3, [x3, #16]
   1201c:	str	x3, [x9, #16]
   12020:	stp	w0, w2, [x9, #24]
   12024:	add	x9, x9, #0x20
   12028:	b.ne	11f60 <__sanitizer_cov_dump@@Base+0x1200>  // b.any
   1202c:	ldp	x21, x22, [sp, #16]
   12030:	ldp	x23, x24, [sp, #32]
   12034:	ldp	x25, x26, [sp, #48]
   12038:	ldp	x27, x28, [sp, #64]
   1203c:	ldr	x30, [sp, #80]
   12040:	ldp	x19, x20, [sp], #336
   12044:	ret
   12048:	mov	w0, #0xffffffff            	// #-1
   1204c:	mov	x4, #0x0                   	// #0
   12050:	mov	w2, w0
   12054:	b	11ff4 <__sanitizer_cov_dump@@Base+0x1294>
   12058:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1205c:	add	x0, x0, #0xfb8
   12060:	bl	1ccf0 <OnPrint@@Base+0x310>
   12064:	b	1202c <__sanitizer_cov_dump@@Base+0x12cc>
   12068:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1206c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12070:	mov	x4, x25
   12074:	add	x2, x2, #0xf98
   12078:	add	x0, x0, #0xef0
   1207c:	mov	w1, #0x7f                  	// #127
   12080:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12084:	mov	w0, #0xffffffff            	// #-1
   12088:	mov	w2, w0
   1208c:	b	11ff4 <__sanitizer_cov_dump@@Base+0x1294>
   12090:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12094:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12098:	mov	x4, x25
   1209c:	add	x2, x2, #0xf78
   120a0:	add	x0, x0, #0xd48
   120a4:	mov	w1, #0x143                 	// #323
   120a8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   120ac:	nop
   120b0:	stp	x19, x20, [sp, #-64]!
   120b4:	mov	x19, x0
   120b8:	stp	x21, x22, [sp, #16]
   120bc:	ldr	x21, [x1, #16]
   120c0:	ldr	x0, [x21, #8]
   120c4:	str	x30, [sp, #40]
   120c8:	cbz	x0, 1228c <__sanitizer_cov_dump@@Base+0x152c>
   120cc:	ldr	x0, [x2]
   120d0:	mov	x22, x1
   120d4:	mov	x20, x2
   120d8:	cbz	x0, 120ec <__sanitizer_cov_dump@@Base+0x138c>
   120dc:	ldr	x2, [x19, #16]
   120e0:	ldr	x1, [x21, #528]
   120e4:	cmp	x1, x2
   120e8:	b.eq	122ac <__sanitizer_cov_dump@@Base+0x154c>  // b.none
   120ec:	add	x0, x19, #0x8
   120f0:	mov	w2, #0x1                   	// #1
   120f4:	str	x23, [sp, #32]
   120f8:	ldxrb	w1, [x0]
   120fc:	stxrb	w3, w2, [x0]
   12100:	cbnz	w3, 120f8 <__sanitizer_cov_dump@@Base+0x1398>
   12104:	dmb	ish
   12108:	tst	w1, #0xff
   1210c:	b.eq	12114 <__sanitizer_cov_dump@@Base+0x13b4>  // b.none
   12110:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   12114:	add	x23, x21, #0x8
   12118:	mov	x1, x21
   1211c:	mov	x0, x19
   12120:	mov	x2, x20
   12124:	bl	112a0 <__sanitizer_cov_dump@@Base+0x540>
   12128:	ldr	x1, [x19, #16]
   1212c:	ldr	x3, [x23, #520]
   12130:	ldr	x0, [x20]
   12134:	cmp	x1, x3
   12138:	b.ne	12434 <__sanitizer_cov_dump@@Base+0x16d4>  // b.any
   1213c:	cmp	x0, #0xfff
   12140:	b.ls	12450 <__sanitizer_cov_dump@@Base+0x16f0>  // b.plast
   12144:	and	x4, x0, #0xfffffffffffff000
   12148:	cmp	x1, x4
   1214c:	b.ne	12470 <__sanitizer_cov_dump@@Base+0x1710>  // b.any
   12150:	ldr	x2, [x21, #8]
   12154:	ubfx	x1, x0, #6, #6
   12158:	mov	x3, #0x1                   	// #1
   1215c:	add	x8, x1, x3
   12160:	lsl	x5, x3, x1
   12164:	and	x1, x0, #0xfff
   12168:	tst	x5, x2
   1216c:	lsl	x3, x3, x0
   12170:	b.ne	1229c <__sanitizer_cov_dump@@Base+0x153c>  // b.any
   12174:	add	x6, x19, #0x208, lsl #12
   12178:	add	x4, x1, x1, lsl #6
   1217c:	add	x10, x19, #0x630
   12180:	str	xzr, [x6, #1584]
   12184:	ldr	x1, [x10, x4, lsl #3]
   12188:	cbz	x1, 12338 <__sanitizer_cov_dump@@Base+0x15d8>
   1218c:	add	x9, x19, #0x208, lsl #12
   12190:	mov	x2, #0x0                   	// #0
   12194:	add	x9, x9, #0x630
   12198:	mov	x11, #0x1                   	// #1
   1219c:	rbit	x0, x1
   121a0:	clz	x0, x0
   121a4:	lsl	x0, x11, x0
   121a8:	orr	x7, x0, x2
   121ac:	cmp	x7, x2
   121b0:	rbit	x2, x1
   121b4:	str	x7, [x6, #1584]
   121b8:	clz	x2, x2
   121bc:	bic	x1, x1, x0
   121c0:	add	x0, x2, #0x1
   121c4:	add	x2, x2, x4
   121c8:	b.eq	12320 <__sanitizer_cov_dump@@Base+0x15c0>  // b.none
   121cc:	add	x2, x2, #0x1
   121d0:	str	xzr, [x9, x0, lsl #3]
   121d4:	ldr	x2, [x10, x2, lsl #3]
   121d8:	str	x2, [x9, x0, lsl #3]
   121dc:	cbz	x1, 12338 <__sanitizer_cov_dump@@Base+0x15d8>
   121e0:	ldr	x2, [x6, #1584]
   121e4:	b	1219c <__sanitizer_cov_dump@@Base+0x143c>
   121e8:	ldr	x0, [x21, #8]
   121ec:	mov	x4, #0x1                   	// #1
   121f0:	ldr	x3, [x6, #2104]
   121f4:	ands	x0, x3, x0
   121f8:	b.eq	12280 <__sanitizer_cov_dump@@Base+0x1520>  // b.none
   121fc:	rbit	x1, x0
   12200:	clz	x1, x1
   12204:	mov	x2, x1
   12208:	lsl	x1, x4, x1
   1220c:	tst	x1, x3
   12210:	bic	x0, x0, x1
   12214:	b.eq	1248c <__sanitizer_cov_dump@@Base+0x172c>  // b.none
   12218:	add	x1, x2, #0x1
   1221c:	ldr	x2, [x23, x1, lsl #3]
   12220:	ldr	x1, [x7, x1, lsl #3]
   12224:	tst	x2, x1
   12228:	b.eq	1248c <__sanitizer_cov_dump@@Base+0x172c>  // b.none
   1222c:	ldr	x1, [x22]
   12230:	adrp	x0, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   12234:	add	x0, x0, #0x508
   12238:	mov	w3, #0x0                   	// #0
   1223c:	ldr	x2, [x20]
   12240:	ldr	x4, [x1]
   12244:	cmp	x4, x0
   12248:	b.ne	124cc <__sanitizer_cov_dump@@Base+0x176c>  // b.any
   1224c:	ldr	x1, [x1, #8]
   12250:	adrp	x0, 12000 <__sanitizer_cov_dump@@Base+0x12a0>
   12254:	add	x0, x0, #0x510
   12258:	mov	w4, #0x0                   	// #0
   1225c:	cmp	x1, x0
   12260:	b.ne	124ac <__sanitizer_cov_dump@@Base+0x174c>  // b.any
   12264:	mov	x1, x23
   12268:	add	x0, x19, #0x10
   1226c:	bl	12750 <__sanitizer_cov_dump@@Base+0x19f0>
   12270:	mov	x2, x20
   12274:	mov	x1, x22
   12278:	mov	x0, x19
   1227c:	bl	11be8 <__sanitizer_cov_dump@@Base+0xe88>
   12280:	dmb	ish
   12284:	strb	wzr, [x19, #8]
   12288:	ldr	x23, [sp, #32]
   1228c:	ldp	x21, x22, [sp, #16]
   12290:	ldr	x30, [sp, #40]
   12294:	ldp	x19, x20, [sp], #64
   12298:	ret
   1229c:	ldr	x0, [x23, x8, lsl #3]
   122a0:	tst	x3, x0
   122a4:	b.eq	12174 <__sanitizer_cov_dump@@Base+0x1414>  // b.none
   122a8:	b	12280 <__sanitizer_cov_dump@@Base+0x1520>
   122ac:	and	x2, x0, #0xfffffffffffff000
   122b0:	cmp	x1, x2
   122b4:	b.ne	120ec <__sanitizer_cov_dump@@Base+0x138c>  // b.any
   122b8:	ldr	x6, [x21, #1568]
   122bc:	cbz	x6, 1228c <__sanitizer_cov_dump@@Base+0x152c>
   122c0:	ubfx	x3, x0, #6, #6
   122c4:	mov	x1, #0x1                   	// #1
   122c8:	add	x5, x19, #0x630
   122cc:	add	x8, x21, #0x420
   122d0:	add	x10, x3, x1
   122d4:	lsl	x0, x1, x0
   122d8:	lsl	x3, x1, x3
   122dc:	mov	w7, #0x208                 	// #520
   122e0:	mov	x1, #0x0                   	// #0
   122e4:	mov	w9, #0x41                  	// #65
   122e8:	lsl	x2, x1, #3
   122ec:	ldr	w2, [x8, x2]
   122f0:	umull	x4, w2, w7
   122f4:	ldr	x4, [x5, x4]
   122f8:	tst	x3, x4
   122fc:	b.eq	120ec <__sanitizer_cov_dump@@Base+0x138c>  // b.none
   12300:	umaddl	x2, w2, w9, x10
   12304:	ldr	x2, [x5, x2, lsl #3]
   12308:	tst	x0, x2
   1230c:	b.eq	120ec <__sanitizer_cov_dump@@Base+0x138c>  // b.none
   12310:	add	x1, x1, #0x1
   12314:	cmp	x6, x1
   12318:	b.ne	122e8 <__sanitizer_cov_dump@@Base+0x1588>  // b.any
   1231c:	b	1228c <__sanitizer_cov_dump@@Base+0x152c>
   12320:	add	x2, x2, #0x1
   12324:	ldr	x7, [x9, x0, lsl #3]
   12328:	ldr	x2, [x10, x2, lsl #3]
   1232c:	orr	x2, x7, x2
   12330:	str	x2, [x9, x0, lsl #3]
   12334:	cbnz	x1, 121e0 <__sanitizer_cov_dump@@Base+0x1480>
   12338:	add	x7, x19, #0x208, lsl #12
   1233c:	add	x9, x19, #0x208, lsl #12
   12340:	add	x7, x7, #0x838
   12344:	add	x9, x9, #0x630
   12348:	str	x5, [x6, #2104]
   1234c:	mov	w12, #0x40                  	// #64
   12350:	mov	x13, #0x208                 	// #520
   12354:	mov	x5, #0x1                   	// #1
   12358:	str	x3, [x7, x8, lsl #3]
   1235c:	ldr	x0, [x6, #1584]
   12360:	cbz	x0, 121e8 <__sanitizer_cov_dump@@Base+0x1488>
   12364:	rbit	x1, x0
   12368:	clz	x1, x1
   1236c:	add	x3, x1, #0x1
   12370:	lsl	x4, x5, x1
   12374:	bic	x0, x0, x4
   12378:	str	x0, [x6, #1584]
   1237c:	ldr	x2, [x9, x3, lsl #3]
   12380:	cbz	x2, 124e8 <__sanitizer_cov_dump@@Base+0x1788>
   12384:	rbit	x11, x2
   12388:	clz	x11, x11
   1238c:	lsl	x8, x5, x11
   12390:	bic	x2, x2, x8
   12394:	str	x2, [x9, x3, lsl #3]
   12398:	cbz	x2, 123a4 <__sanitizer_cov_dump@@Base+0x1644>
   1239c:	orr	x0, x4, x0
   123a0:	str	x0, [x6, #1584]
   123a4:	sxtw	x11, w11
   123a8:	ldr	x3, [x6, #2104]
   123ac:	smaddl	x1, w1, w12, x11
   123b0:	lsr	x0, x1, #6
   123b4:	lsl	x2, x5, x1
   123b8:	add	x4, x0, #0x1
   123bc:	lsl	x0, x5, x0
   123c0:	tst	x3, x0
   123c4:	b.ne	12494 <__sanitizer_cov_dump@@Base+0x1734>  // b.any
   123c8:	orr	x0, x3, x0
   123cc:	str	x0, [x6, #2104]
   123d0:	str	x2, [x7, x4, lsl #3]
   123d4:	mul	x0, x1, x13
   123d8:	add	x1, x1, x1, lsl #6
   123dc:	ldr	x2, [x10, x0]
   123e0:	ldr	x11, [x6, #1584]
   123e4:	cbz	x2, 1235c <__sanitizer_cov_dump@@Base+0x15fc>
   123e8:	rbit	x4, x2
   123ec:	clz	x4, x4
   123f0:	mov	x0, x4
   123f4:	add	x3, x0, #0x1
   123f8:	lsl	x4, x5, x4
   123fc:	orr	x8, x4, x11
   12400:	str	x8, [x6, #1584]
   12404:	cmp	x11, x8
   12408:	bic	x2, x2, x4
   1240c:	lsl	x3, x3, #3
   12410:	b.eq	12418 <__sanitizer_cov_dump@@Base+0x16b8>  // b.none
   12414:	str	xzr, [x9, x3]
   12418:	add	x0, x0, x1
   1241c:	add	x0, x0, #0x1
   12420:	ldr	x4, [x9, x3]
   12424:	ldr	x0, [x10, x0, lsl #3]
   12428:	orr	x0, x4, x0
   1242c:	str	x0, [x9, x3]
   12430:	b	123e0 <__sanitizer_cov_dump@@Base+0x1680>
   12434:	mov	x4, x1
   12438:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1243c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12440:	add	x2, x2, #0x10
   12444:	add	x0, x0, #0xd48
   12448:	mov	w1, #0x6c                  	// #108
   1244c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12450:	mov	x3, x0
   12454:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12458:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1245c:	add	x2, x2, #0xd30
   12460:	add	x0, x0, #0xd48
   12464:	mov	x4, #0x1000                	// #4096
   12468:	mov	w1, #0x172                 	// #370
   1246c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12470:	mov	x3, x1
   12474:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12478:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1247c:	add	x2, x2, #0xfe0
   12480:	add	x0, x0, #0xd48
   12484:	mov	w1, #0x173                 	// #371
   12488:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1248c:	cbnz	x0, 121fc <__sanitizer_cov_dump@@Base+0x149c>
   12490:	b	12280 <__sanitizer_cov_dump@@Base+0x1520>
   12494:	ldr	x0, [x7, x4, lsl #3]
   12498:	orr	x2, x0, x2
   1249c:	str	x2, [x7, x4, lsl #3]
   124a0:	cmp	x0, x2
   124a4:	b.eq	1235c <__sanitizer_cov_dump@@Base+0x15fc>  // b.none
   124a8:	b	123d4 <__sanitizer_cov_dump@@Base+0x1674>
   124ac:	str	x2, [sp, #48]
   124b0:	mov	x0, x22
   124b4:	str	w3, [sp, #60]
   124b8:	blr	x1
   124bc:	mov	w4, w0
   124c0:	ldr	w3, [sp, #60]
   124c4:	ldr	x2, [sp, #48]
   124c8:	b	12264 <__sanitizer_cov_dump@@Base+0x1504>
   124cc:	str	x2, [sp, #48]
   124d0:	mov	x0, x22
   124d4:	blr	x4
   124d8:	mov	w3, w0
   124dc:	ldr	x1, [x22]
   124e0:	ldr	x2, [sp, #48]
   124e4:	b	1224c <__sanitizer_cov_dump@@Base+0x14ec>
   124e8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   124ec:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   124f0:	add	x2, x2, #0x70
   124f4:	add	x0, x0, #0xcd8
   124f8:	mov	x4, #0x0                   	// #0
   124fc:	mov	x3, #0x0                   	// #0
   12500:	mov	w1, #0x30                  	// #48
   12504:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12508:	mov	w0, #0x0                   	// #0
   1250c:	ret
   12510:	mov	w0, #0x0                   	// #0
   12514:	ret
   12518:	stp	x19, x20, [sp, #-112]!
   1251c:	add	x1, x1, x1, lsl #6
   12520:	mov	x19, #0x0                   	// #0
   12524:	stp	x21, x22, [sp, #16]
   12528:	mov	x22, x0
   1252c:	add	x21, x1, #0x1
   12530:	stp	x23, x24, [sp, #32]
   12534:	sub	x23, x4, #0x1
   12538:	mov	x20, #0x0                   	// #0
   1253c:	stp	x25, x26, [sp, #48]
   12540:	mov	x26, x3
   12544:	add	x3, x3, #0x8
   12548:	stp	x27, x28, [sp, #64]
   1254c:	add	x27, x0, x1, lsl #3
   12550:	mov	x25, #0x0                   	// #0
   12554:	mov	x28, #0x0                   	// #0
   12558:	mov	x24, #0x1                   	// #1
   1255c:	str	x30, [sp, #80]
   12560:	cbnz	x23, 125a4 <__sanitizer_cov_dump@@Base+0x1844>
   12564:	mov	x1, #0x1                   	// #1
   12568:	cbnz	x20, 12648 <__sanitizer_cov_dump@@Base+0x18e8>
   1256c:	cbnz	x28, 126ec <__sanitizer_cov_dump@@Base+0x198c>
   12570:	ldr	x20, [x27]
   12574:	cbz	x20, 126ec <__sanitizer_cov_dump@@Base+0x198c>
   12578:	cbz	x19, 12664 <__sanitizer_cov_dump@@Base+0x1904>
   1257c:	mov	x20, #0x0                   	// #0
   12580:	rbit	x0, x19
   12584:	clz	x0, x0
   12588:	lsl	x0, x1, x0
   1258c:	bic	x19, x19, x0
   12590:	orr	x0, x19, x20
   12594:	cbnz	x0, 12568 <__sanitizer_cov_dump@@Base+0x1808>
   12598:	add	x28, x28, #0x1
   1259c:	mov	x19, #0x0                   	// #0
   125a0:	b	1256c <__sanitizer_cov_dump@@Base+0x180c>
   125a4:	cbnz	x20, 126a8 <__sanitizer_cov_dump@@Base+0x1948>
   125a8:	cbnz	x28, 126ec <__sanitizer_cov_dump@@Base+0x198c>
   125ac:	ldr	x20, [x27]
   125b0:	cbz	x20, 126ec <__sanitizer_cov_dump@@Base+0x198c>
   125b4:	cbz	x19, 126c4 <__sanitizer_cov_dump@@Base+0x1964>
   125b8:	mov	x1, x25
   125bc:	mov	x20, #0x0                   	// #0
   125c0:	rbit	x0, x19
   125c4:	clz	x0, x0
   125c8:	lsl	x4, x24, x0
   125cc:	bic	x19, x19, x4
   125d0:	orr	x4, x19, x20
   125d4:	cbnz	x4, 125e4 <__sanitizer_cov_dump@@Base+0x1884>
   125d8:	add	x28, x28, #0x1
   125dc:	mov	x20, #0x0                   	// #0
   125e0:	mov	x19, #0x0                   	// #0
   125e4:	sxtw	x0, w0
   125e8:	add	x1, x0, x1, lsl #6
   125ec:	str	x1, [x26, #8]
   125f0:	cmp	x1, #0x1, lsl #12
   125f4:	b.hi	1272c <__sanitizer_cov_dump@@Base+0x19cc>  // b.pmore
   125f8:	lsr	x0, x1, #12
   125fc:	ubfx	x4, x1, #6, #6
   12600:	lsl	x6, x24, x4
   12604:	ldr	x5, [x2, x0, lsl #3]
   12608:	tst	x6, x5
   1260c:	b.eq	12688 <__sanitizer_cov_dump@@Base+0x1928>  // b.none
   12610:	add	x0, x4, x0, lsl #6
   12614:	lsl	x4, x24, x1
   12618:	add	x0, x0, #0x1
   1261c:	ldr	x5, [x2, x0, lsl #3]
   12620:	tst	x4, x5
   12624:	b.eq	12688 <__sanitizer_cov_dump@@Base+0x1928>  // b.none
   12628:	mov	x0, #0x2                   	// #2
   1262c:	ldp	x21, x22, [sp, #16]
   12630:	ldp	x23, x24, [sp, #32]
   12634:	ldp	x25, x26, [sp, #48]
   12638:	ldp	x27, x28, [sp, #64]
   1263c:	ldr	x30, [sp, #80]
   12640:	ldp	x19, x20, [sp], #112
   12644:	ret
   12648:	cbz	x19, 12664 <__sanitizer_cov_dump@@Base+0x1904>
   1264c:	rbit	x0, x19
   12650:	clz	x0, x0
   12654:	lsl	x0, x1, x0
   12658:	bic	x19, x19, x0
   1265c:	cbz	x20, 1256c <__sanitizer_cov_dump@@Base+0x180c>
   12660:	b	12648 <__sanitizer_cov_dump@@Base+0x18e8>
   12664:	rbit	x2, x20
   12668:	add	x0, x21, x28, lsl #6
   1266c:	clz	x2, x2
   12670:	add	x0, x0, x2
   12674:	ldr	x19, [x22, x0, lsl #3]
   12678:	cbz	x19, 1270c <__sanitizer_cov_dump@@Base+0x19ac>
   1267c:	lsl	x2, x1, x2
   12680:	bic	x20, x20, x2
   12684:	b	12580 <__sanitizer_cov_dump@@Base+0x1820>
   12688:	mov	x4, x23
   1268c:	mov	x0, x22
   12690:	stp	x2, x3, [sp, #96]
   12694:	bl	12518 <__sanitizer_cov_dump@@Base+0x17b8>
   12698:	ldp	x2, x3, [sp, #96]
   1269c:	cbz	x0, 12560 <__sanitizer_cov_dump@@Base+0x1800>
   126a0:	add	x0, x0, #0x1
   126a4:	b	126f0 <__sanitizer_cov_dump@@Base+0x1990>
   126a8:	cbz	x19, 126c4 <__sanitizer_cov_dump@@Base+0x1964>
   126ac:	rbit	x0, x19
   126b0:	add	x1, x25, x28, lsl #6
   126b4:	clz	x0, x0
   126b8:	lsl	x4, x24, x0
   126bc:	bic	x19, x19, x4
   126c0:	b	125e4 <__sanitizer_cov_dump@@Base+0x1884>
   126c4:	rbit	x25, x20
   126c8:	clz	x25, x25
   126cc:	add	x1, x25, x28, lsl #6
   126d0:	mov	x0, x25
   126d4:	add	x4, x1, x21
   126d8:	ldr	x19, [x22, x4, lsl #3]
   126dc:	cbz	x19, 1270c <__sanitizer_cov_dump@@Base+0x19ac>
   126e0:	lsl	x0, x24, x0
   126e4:	bic	x20, x20, x0
   126e8:	b	125c0 <__sanitizer_cov_dump@@Base+0x1860>
   126ec:	mov	x0, #0x0                   	// #0
   126f0:	ldp	x21, x22, [sp, #16]
   126f4:	ldp	x23, x24, [sp, #32]
   126f8:	ldp	x25, x26, [sp, #48]
   126fc:	ldp	x27, x28, [sp, #64]
   12700:	ldr	x30, [sp, #80]
   12704:	ldp	x19, x20, [sp], #112
   12708:	ret
   1270c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12710:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12714:	add	x2, x2, #0xcb8
   12718:	add	x0, x0, #0xcd8
   1271c:	mov	x4, #0x0                   	// #0
   12720:	mov	x3, #0x0                   	// #0
   12724:	mov	w1, #0x132                 	// #306
   12728:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1272c:	mov	x3, x1
   12730:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12734:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12738:	add	x2, x2, #0xd18
   1273c:	add	x0, x0, #0xcd8
   12740:	mov	x4, #0x1000                	// #4096
   12744:	mov	w1, #0x143                 	// #323
   12748:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1274c:	nop
   12750:	stp	x19, x20, [sp, #-352]!
   12754:	mov	x8, x0
   12758:	ldr	x0, [x0]
   1275c:	ldr	x5, [x1, #520]
   12760:	str	x30, [sp, #16]
   12764:	cmp	x0, x5
   12768:	b.eq	1277c <__sanitizer_cov_dump@@Base+0x1a1c>  // b.none
   1276c:	str	xzr, [x1]
   12770:	str	x0, [x1, #520]
   12774:	str	xzr, [x1, #1040]
   12778:	str	xzr, [x1, #1560]
   1277c:	cmp	x2, #0xfff
   12780:	b.ls	12974 <__sanitizer_cov_dump@@Base+0x1c14>  // b.plast
   12784:	ldr	x5, [x8]
   12788:	and	x6, x2, #0xfffffffffffff000
   1278c:	cmp	x5, x6
   12790:	b.ne	12994 <__sanitizer_cov_dump@@Base+0x1c34>  // b.any
   12794:	cmp	x5, x0
   12798:	b.ne	129b4 <__sanitizer_cov_dump@@Base+0x1c54>  // b.any
   1279c:	add	x12, x8, #0x208, lsl #12
   127a0:	str	xzr, [x12, #1568]
   127a4:	ldr	x5, [x1]
   127a8:	cbz	x5, 12810 <__sanitizer_cov_dump@@Base+0x1ab0>
   127ac:	add	x10, x8, #0x208, lsl #12
   127b0:	mov	x6, #0x0                   	// #0
   127b4:	add	x10, x10, #0x620
   127b8:	mov	x11, #0x1                   	// #1
   127bc:	rbit	x0, x5
   127c0:	clz	x0, x0
   127c4:	lsl	x9, x11, x0
   127c8:	orr	x7, x9, x6
   127cc:	str	x7, [x12, #1568]
   127d0:	bic	x5, x5, x9
   127d4:	cmp	x7, x6
   127d8:	add	x0, x0, #0x1
   127dc:	b.eq	127f8 <__sanitizer_cov_dump@@Base+0x1a98>  // b.none
   127e0:	str	xzr, [x10, x0, lsl #3]
   127e4:	ldr	x6, [x1, x0, lsl #3]
   127e8:	str	x6, [x10, x0, lsl #3]
   127ec:	cbz	x5, 1280c <__sanitizer_cov_dump@@Base+0x1aac>
   127f0:	ldr	x6, [x12, #1568]
   127f4:	b	127bc <__sanitizer_cov_dump@@Base+0x1a5c>
   127f8:	ldr	x6, [x10, x0, lsl #3]
   127fc:	ldr	x7, [x1, x0, lsl #3]
   12800:	orr	x6, x6, x7
   12804:	str	x6, [x10, x0, lsl #3]
   12808:	cbnz	x5, 127f0 <__sanitizer_cov_dump@@Base+0x1a90>
   1280c:	ldr	x5, [x12, #1568]
   12810:	ubfx	x0, x2, #6, #6
   12814:	mov	x6, #0x1                   	// #1
   12818:	add	x10, x8, #0x208, lsl #12
   1281c:	add	x19, x0, x6
   12820:	lsl	x16, x6, x0
   12824:	mov	x11, x6
   12828:	and	x14, x2, #0xfff
   1282c:	add	x10, x10, #0x620
   12830:	add	x17, x8, #0x620
   12834:	add	x30, sp, #0x20
   12838:	mov	x0, #0x0                   	// #0
   1283c:	lsl	x13, x6, x2
   12840:	mov	w20, #0x40                  	// #64
   12844:	cbz	x5, 128b8 <__sanitizer_cov_dump@@Base+0x1b58>
   12848:	rbit	x2, x5
   1284c:	clz	x2, x2
   12850:	add	x9, x2, #0x1
   12854:	lsl	x7, x11, x2
   12858:	bic	x5, x5, x7
   1285c:	str	x5, [x12, #1568]
   12860:	ldr	x6, [x10, x9, lsl #3]
   12864:	cbz	x6, 12a10 <__sanitizer_cov_dump@@Base+0x1cb0>
   12868:	rbit	x18, x6
   1286c:	clz	x18, x18
   12870:	lsl	x15, x11, x18
   12874:	bic	x6, x6, x15
   12878:	str	x6, [x10, x9, lsl #3]
   1287c:	cbnz	x6, 129dc <__sanitizer_cov_dump@@Base+0x1c7c>
   12880:	sxtw	x18, w18
   12884:	smaddl	x2, w2, w20, x18
   12888:	add	x7, x2, x2, lsl #6
   1288c:	add	x6, x19, x7
   12890:	ldr	x5, [x17, x7, lsl #3]
   12894:	tst	x5, x16
   12898:	b.ne	129e8 <__sanitizer_cov_dump@@Base+0x1c88>  // b.any
   1289c:	orr	x5, x5, x16
   128a0:	str	x5, [x17, x7, lsl #3]
   128a4:	str	x13, [x17, x6, lsl #3]
   128a8:	cmp	x0, #0x27
   128ac:	b.ls	12a00 <__sanitizer_cov_dump@@Base+0x1ca0>  // b.plast
   128b0:	ldr	x5, [x12, #1568]
   128b4:	cbnz	x5, 12848 <__sanitizer_cov_dump@@Base+0x1ae8>
   128b8:	cbz	x0, 12968 <__sanitizer_cov_dump@@Base+0x1c08>
   128bc:	add	x15, x8, #0x410, lsl #12
   128c0:	mov	x16, #0x10a3                	// #4259
   128c4:	and	w14, w14, #0xffff
   128c8:	add	x17, sp, #0x20
   128cc:	add	x11, x1, #0x418
   128d0:	mov	x5, #0x1                   	// #1
   128d4:	mov	x12, #0x1ffff               	// #131071
   128d8:	movk	x16, #0x2, lsl #16
   128dc:	ldr	x10, [x15, #2608]
   128e0:	b	128f0 <__sanitizer_cov_dump@@Base+0x1b90>
   128e4:	cmp	x0, x5
   128e8:	add	x5, x5, #0x1
   128ec:	b.eq	12968 <__sanitizer_cov_dump@@Base+0x1c08>  // b.none
   128f0:	cmp	x10, x12
   128f4:	b.hi	128e4 <__sanitizer_cov_dump@@Base+0x1b84>  // b.pmore
   128f8:	add	x2, x17, x5, lsl #3
   128fc:	ldr	x9, [x1, #1560]
   12900:	ldur	x7, [x2, #-8]
   12904:	and	w13, w7, #0xffff
   12908:	cbz	x9, 129d4 <__sanitizer_cov_dump@@Base+0x1c74>
   1290c:	mov	x2, #0x0                   	// #0
   12910:	b	12920 <__sanitizer_cov_dump@@Base+0x1bc0>
   12914:	add	x2, x2, #0x1
   12918:	cmp	x2, x9
   1291c:	b.eq	129d4 <__sanitizer_cov_dump@@Base+0x1c74>  // b.none
   12920:	lsl	x6, x2, #3
   12924:	ldr	w6, [x11, x6]
   12928:	cmp	w6, w7
   1292c:	b.ne	12914 <__sanitizer_cov_dump@@Base+0x1bb4>  // b.any
   12930:	add	x2, x1, x2, lsl #3
   12934:	ldr	w7, [x2, #1052]
   12938:	add	x6, x10, x16
   1293c:	add	x10, x10, #0x1
   12940:	str	x10, [x15, #2608]
   12944:	cmp	x0, x5
   12948:	lsl	x6, x6, #4
   1294c:	add	x5, x5, #0x1
   12950:	add	x2, x8, x6
   12954:	strh	w13, [x8, x6]
   12958:	strh	w14, [x2, #2]
   1295c:	stp	w7, w3, [x2, #4]
   12960:	str	w4, [x2, #12]
   12964:	b.ne	128f0 <__sanitizer_cov_dump@@Base+0x1b90>  // b.any
   12968:	ldr	x30, [sp, #16]
   1296c:	ldp	x19, x20, [sp], #352
   12970:	ret
   12974:	mov	x3, x2
   12978:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1297c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12980:	add	x0, x0, #0xd48
   12984:	add	x2, x2, #0xd30
   12988:	mov	x4, #0x1000                	// #4096
   1298c:	mov	w1, #0x172                 	// #370
   12990:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12994:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12998:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   1299c:	mov	x4, x6
   129a0:	mov	x3, x5
   129a4:	add	x2, x2, #0xfe0
   129a8:	add	x0, x0, #0xd48
   129ac:	mov	w1, #0x173                 	// #371
   129b0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   129b4:	mov	x3, x0
   129b8:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   129bc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   129c0:	mov	x4, x5
   129c4:	add	x2, x2, #0x10
   129c8:	add	x0, x0, #0xd48
   129cc:	mov	w1, #0x6c                  	// #108
   129d0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   129d4:	mov	w7, #0x0                   	// #0
   129d8:	b	12938 <__sanitizer_cov_dump@@Base+0x1bd8>
   129dc:	orr	x7, x7, x5
   129e0:	str	x7, [x12, #1568]
   129e4:	b	12880 <__sanitizer_cov_dump@@Base+0x1b20>
   129e8:	ldr	x7, [x17, x6, lsl #3]
   129ec:	cmp	x0, #0x27
   129f0:	orr	x5, x7, x13
   129f4:	str	x5, [x17, x6, lsl #3]
   129f8:	ccmp	x7, x5, #0x4, ls  // ls = plast
   129fc:	b.eq	128b0 <__sanitizer_cov_dump@@Base+0x1b50>  // b.none
   12a00:	str	x2, [x30, x0, lsl #3]
   12a04:	add	x0, x0, #0x1
   12a08:	ldr	x5, [x12, #1568]
   12a0c:	b	128b4 <__sanitizer_cov_dump@@Base+0x1b54>
   12a10:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12a14:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12a18:	add	x2, x2, #0x70
   12a1c:	add	x0, x0, #0xcd8
   12a20:	mov	x4, #0x0                   	// #0
   12a24:	mov	x3, #0x0                   	// #0
   12a28:	mov	w1, #0x30                  	// #48
   12a2c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12a30:	stp	x19, x20, [sp, #-112]!
   12a34:	stp	x23, x24, [sp, #32]
   12a38:	mov	x24, x0
   12a3c:	mov	x0, x4
   12a40:	str	x30, [sp, #80]
   12a44:	cbnz	x4, 12a58 <__sanitizer_cov_dump@@Base+0x1cf8>
   12a48:	ldp	x23, x24, [sp, #32]
   12a4c:	ldr	x30, [sp, #80]
   12a50:	ldp	x19, x20, [sp], #112
   12a54:	ret
   12a58:	str	x1, [x3]
   12a5c:	mov	x23, x3
   12a60:	cmp	x1, #0x1, lsl #12
   12a64:	b.hi	12c64 <__sanitizer_cov_dump@@Base+0x1f04>  // b.pmore
   12a68:	lsr	x3, x1, #12
   12a6c:	ubfx	x5, x1, #6, #6
   12a70:	mov	x4, #0x1                   	// #1
   12a74:	lsl	x7, x4, x5
   12a78:	ldr	x6, [x2, x3, lsl #3]
   12a7c:	tst	x7, x6
   12a80:	b.eq	12aa4 <__sanitizer_cov_dump@@Base+0x1d44>  // b.none
   12a84:	add	x3, x5, x3, lsl #6
   12a88:	lsl	x5, x4, x1
   12a8c:	add	x3, x3, x4
   12a90:	ldr	x6, [x2, x3, lsl #3]
   12a94:	tst	x5, x6
   12a98:	b.eq	12aa4 <__sanitizer_cov_dump@@Base+0x1d44>  // b.none
   12a9c:	mov	x0, x4
   12aa0:	b	12a48 <__sanitizer_cov_dump@@Base+0x1ce8>
   12aa4:	add	x1, x1, x1, lsl #6
   12aa8:	sub	x20, x0, #0x1
   12aac:	add	x3, x23, #0x8
   12ab0:	stp	x27, x28, [sp, #64]
   12ab4:	add	x19, x24, x1, lsl #3
   12ab8:	add	x28, x1, #0x1
   12abc:	mov	x27, #0x0                   	// #0
   12ac0:	stp	x21, x22, [sp, #16]
   12ac4:	mov	x21, #0x0                   	// #0
   12ac8:	mov	x22, #0x0                   	// #0
   12acc:	stp	x25, x26, [sp, #48]
   12ad0:	mov	x25, #0x0                   	// #0
   12ad4:	mov	x26, #0x1                   	// #1
   12ad8:	cbnz	x20, 12b1c <__sanitizer_cov_dump@@Base+0x1dbc>
   12adc:	mov	x1, #0x1                   	// #1
   12ae0:	cbnz	x22, 12b60 <__sanitizer_cov_dump@@Base+0x1e00>
   12ae4:	cbnz	x25, 12cb0 <__sanitizer_cov_dump@@Base+0x1f50>
   12ae8:	ldr	x22, [x19]
   12aec:	cbz	x22, 12cb0 <__sanitizer_cov_dump@@Base+0x1f50>
   12af0:	cbz	x21, 12bec <__sanitizer_cov_dump@@Base+0x1e8c>
   12af4:	mov	x22, #0x0                   	// #0
   12af8:	rbit	x0, x21
   12afc:	clz	x0, x0
   12b00:	lsl	x0, x1, x0
   12b04:	bic	x21, x21, x0
   12b08:	orr	x0, x22, x21
   12b0c:	cbnz	x0, 12ae0 <__sanitizer_cov_dump@@Base+0x1d80>
   12b10:	add	x25, x25, #0x1
   12b14:	mov	x21, #0x0                   	// #0
   12b18:	b	12ae4 <__sanitizer_cov_dump@@Base+0x1d84>
   12b1c:	cbnz	x22, 12b7c <__sanitizer_cov_dump@@Base+0x1e1c>
   12b20:	cbnz	x25, 12cb0 <__sanitizer_cov_dump@@Base+0x1f50>
   12b24:	ldr	x22, [x19]
   12b28:	cbz	x22, 12cb0 <__sanitizer_cov_dump@@Base+0x1f50>
   12b2c:	cbz	x21, 12c3c <__sanitizer_cov_dump@@Base+0x1edc>
   12b30:	mov	x1, x27
   12b34:	mov	x22, #0x0                   	// #0
   12b38:	rbit	x0, x21
   12b3c:	clz	x0, x0
   12b40:	lsl	x4, x26, x0
   12b44:	bic	x21, x21, x4
   12b48:	orr	x4, x21, x22
   12b4c:	cbnz	x4, 12b94 <__sanitizer_cov_dump@@Base+0x1e34>
   12b50:	add	x25, x25, #0x1
   12b54:	mov	x22, #0x0                   	// #0
   12b58:	mov	x21, #0x0                   	// #0
   12b5c:	b	12b94 <__sanitizer_cov_dump@@Base+0x1e34>
   12b60:	cbz	x21, 12bec <__sanitizer_cov_dump@@Base+0x1e8c>
   12b64:	rbit	x0, x21
   12b68:	clz	x0, x0
   12b6c:	lsl	x0, x1, x0
   12b70:	bic	x21, x21, x0
   12b74:	cbz	x22, 12ae4 <__sanitizer_cov_dump@@Base+0x1d84>
   12b78:	b	12b60 <__sanitizer_cov_dump@@Base+0x1e00>
   12b7c:	cbz	x21, 12c3c <__sanitizer_cov_dump@@Base+0x1edc>
   12b80:	rbit	x0, x21
   12b84:	add	x1, x27, x25, lsl #6
   12b88:	clz	x0, x0
   12b8c:	lsl	x4, x26, x0
   12b90:	bic	x21, x21, x4
   12b94:	sxtw	x0, w0
   12b98:	add	x1, x0, x1, lsl #6
   12b9c:	str	x1, [x23, #8]
   12ba0:	cmp	x1, #0x1, lsl #12
   12ba4:	b.hi	12c70 <__sanitizer_cov_dump@@Base+0x1f10>  // b.pmore
   12ba8:	lsr	x0, x1, #12
   12bac:	ubfx	x4, x1, #6, #6
   12bb0:	lsl	x6, x26, x4
   12bb4:	ldr	x5, [x2, x0, lsl #3]
   12bb8:	tst	x6, x5
   12bbc:	b.eq	12c10 <__sanitizer_cov_dump@@Base+0x1eb0>  // b.none
   12bc0:	add	x0, x4, x0, lsl #6
   12bc4:	lsl	x4, x26, x1
   12bc8:	add	x0, x0, #0x1
   12bcc:	ldr	x5, [x2, x0, lsl #3]
   12bd0:	tst	x4, x5
   12bd4:	b.eq	12c10 <__sanitizer_cov_dump@@Base+0x1eb0>  // b.none
   12bd8:	mov	x0, #0x2                   	// #2
   12bdc:	ldp	x21, x22, [sp, #16]
   12be0:	ldp	x25, x26, [sp, #48]
   12be4:	ldp	x27, x28, [sp, #64]
   12be8:	b	12a48 <__sanitizer_cov_dump@@Base+0x1ce8>
   12bec:	rbit	x2, x22
   12bf0:	add	x0, x28, x25, lsl #6
   12bf4:	clz	x2, x2
   12bf8:	add	x0, x0, x2
   12bfc:	ldr	x21, [x24, x0, lsl #3]
   12c00:	cbz	x21, 12c90 <__sanitizer_cov_dump@@Base+0x1f30>
   12c04:	lsl	x2, x1, x2
   12c08:	bic	x22, x22, x2
   12c0c:	b	12af8 <__sanitizer_cov_dump@@Base+0x1d98>
   12c10:	mov	x4, x20
   12c14:	mov	x0, x24
   12c18:	stp	x2, x3, [sp, #96]
   12c1c:	bl	12518 <__sanitizer_cov_dump@@Base+0x17b8>
   12c20:	ldp	x2, x3, [sp, #96]
   12c24:	cbz	x0, 12ad8 <__sanitizer_cov_dump@@Base+0x1d78>
   12c28:	add	x0, x0, #0x1
   12c2c:	ldp	x21, x22, [sp, #16]
   12c30:	ldp	x25, x26, [sp, #48]
   12c34:	ldp	x27, x28, [sp, #64]
   12c38:	b	12a48 <__sanitizer_cov_dump@@Base+0x1ce8>
   12c3c:	rbit	x27, x22
   12c40:	clz	x27, x27
   12c44:	add	x1, x27, x25, lsl #6
   12c48:	mov	x0, x27
   12c4c:	add	x4, x1, x28
   12c50:	ldr	x21, [x24, x4, lsl #3]
   12c54:	cbz	x21, 12c90 <__sanitizer_cov_dump@@Base+0x1f30>
   12c58:	lsl	x0, x26, x0
   12c5c:	bic	x22, x22, x0
   12c60:	b	12b38 <__sanitizer_cov_dump@@Base+0x1dd8>
   12c64:	stp	x21, x22, [sp, #16]
   12c68:	stp	x25, x26, [sp, #48]
   12c6c:	stp	x27, x28, [sp, #64]
   12c70:	mov	x3, x1
   12c74:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12c78:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12c7c:	add	x2, x2, #0xd18
   12c80:	add	x0, x0, #0xcd8
   12c84:	mov	x4, #0x1000                	// #4096
   12c88:	mov	w1, #0x143                 	// #323
   12c8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12c90:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12c94:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   12c98:	add	x2, x2, #0xcb8
   12c9c:	add	x0, x0, #0xcd8
   12ca0:	mov	x4, #0x0                   	// #0
   12ca4:	mov	x3, #0x0                   	// #0
   12ca8:	mov	w1, #0x132                 	// #306
   12cac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12cb0:	mov	x0, #0x0                   	// #0
   12cb4:	ldp	x21, x22, [sp, #16]
   12cb8:	ldp	x25, x26, [sp, #48]
   12cbc:	ldp	x27, x28, [sp, #64]
   12cc0:	b	12a48 <__sanitizer_cov_dump@@Base+0x1ce8>
   12cc4:	nop
   12cc8:	mov	x2, x1
   12ccc:	mov	x4, #0x0                   	// #0
   12cd0:	mov	x1, x0
   12cd4:	mov	x3, #0x0                   	// #0
   12cd8:	mov	w0, #0x2                   	// #2
   12cdc:	b	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   12ce0:	stp	x19, x30, [sp, #-16]!
   12ce4:	mov	x19, x0
   12ce8:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   12cec:	mov	x2, x0
   12cf0:	mov	x1, x19
   12cf4:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
   12cf8:	ldp	x19, x30, [sp], #16
   12cfc:	add	x0, x0, #0x4f0
   12d00:	b	1add0 <__sanitizer_set_report_fd@@Base+0x7500>
   12d04:	nop
   12d08:	stp	x19, x20, [sp, #-32]!
   12d0c:	mov	x19, x0
   12d10:	ldr	x0, [x0]
   12d14:	str	x30, [sp, #24]
   12d18:	ldrb	w3, [x0]
   12d1c:	and	x3, x3, #0xff
   12d20:	cmp	x3, #0x1
   12d24:	b.ne	12e28 <__sanitizer_cov_dump@@Base+0x20c8>  // b.any
   12d28:	ldr	w0, [x19, #8]
   12d2c:	sub	w0, w0, #0x1
   12d30:	cmp	w0, #0x1
   12d34:	b.ls	12de0 <__sanitizer_cov_dump@@Base+0x2080>  // b.plast
   12d38:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   12d3c:	mov	x20, x0
   12d40:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   12d44:	ldr	x1, [x1, #3848]
   12d48:	ldr	x0, [x1]
   12d4c:	cmp	x0, x20
   12d50:	b.eq	12dec <__sanitizer_cov_dump@@Base+0x208c>  // b.none
   12d54:	ldr	w0, [x19, #8]
   12d58:	cmn	w0, #0x1
   12d5c:	b.eq	12e04 <__sanitizer_cov_dump@@Base+0x20a4>  // b.none
   12d60:	ldr	x1, [x19, #8208]
   12d64:	cmp	x1, x20
   12d68:	b.eq	12de0 <__sanitizer_cov_dump@@Base+0x2080>  // b.none
   12d6c:	str	x21, [sp, #16]
   12d70:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   12d74:	bl	fc80 <__sancov_default_options@@Base+0x32d0>
   12d78:	cmp	x0, #0x0
   12d7c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   12d80:	mov	x4, x0
   12d84:	mov	x0, #0x100c                	// #4108
   12d88:	add	x21, x19, x0
   12d8c:	ldr	x0, [x1, #4056]
   12d90:	cset	w1, ne  // ne = any
   12d94:	add	x3, x19, #0xc
   12d98:	ldrb	w0, [x0, #48]
   12d9c:	tst	w1, w0
   12da0:	b.ne	12e0c <__sanitizer_cov_dump@@Base+0x20ac>  // b.any
   12da4:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12da8:	mov	x4, x20
   12dac:	add	x2, x2, #0xc0
   12db0:	mov	x0, x21
   12db4:	mov	x1, #0x1000                	// #4096
   12db8:	bl	1c9e8 <OnPrint@@Base+0x8>
   12dbc:	mov	x0, x21
   12dc0:	mov	x2, #0x0                   	// #0
   12dc4:	mov	w1, #0x1                   	// #1
   12dc8:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   12dcc:	str	w0, [x19, #8]
   12dd0:	cmn	w0, #0x1
   12dd4:	b.eq	12e48 <__sanitizer_cov_dump@@Base+0x20e8>  // b.none
   12dd8:	ldr	x21, [sp, #16]
   12ddc:	str	x20, [x19, #8208]
   12de0:	ldr	x30, [sp, #24]
   12de4:	ldp	x19, x20, [sp], #32
   12de8:	ret
   12dec:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   12df0:	ldr	x0, [x0, #3840]
   12df4:	ldr	x20, [x0]
   12df8:	ldr	w0, [x19, #8]
   12dfc:	cmn	w0, #0x1
   12e00:	b.ne	12d60 <__sanitizer_cov_dump@@Base+0x2000>  // b.any
   12e04:	str	x21, [sp, #16]
   12e08:	b	12d74 <__sanitizer_cov_dump@@Base+0x2014>
   12e0c:	mov	x5, x20
   12e10:	mov	x0, x21
   12e14:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12e18:	mov	x1, #0x1000                	// #4096
   12e1c:	add	x2, x2, #0xb0
   12e20:	bl	1c9e8 <OnPrint@@Base+0x8>
   12e24:	b	12dbc <__sanitizer_cov_dump@@Base+0x205c>
   12e28:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12e2c:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12e30:	add	x2, x2, #0x38
   12e34:	add	x0, x0, #0x70
   12e38:	mov	x4, #0x1                   	// #1
   12e3c:	mov	w1, #0x2a                  	// #42
   12e40:	str	x21, [sp, #16]
   12e44:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   12e48:	adrp	x19, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12e4c:	add	x19, x19, #0xc8
   12e50:	mov	x0, x19
   12e54:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   12e58:	mov	x1, x19
   12e5c:	mov	x2, x0
   12e60:	mov	x4, #0x0                   	// #0
   12e64:	mov	x3, #0x0                   	// #0
   12e68:	mov	w0, #0x2                   	// #2
   12e6c:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   12e70:	mov	x0, x21
   12e74:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   12e78:	mov	x1, x21
   12e7c:	mov	x2, x0
   12e80:	mov	x4, #0x0                   	// #0
   12e84:	mov	x3, #0x0                   	// #0
   12e88:	mov	w0, #0x2                   	// #2
   12e8c:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   12e90:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   12e94:	nop
   12e98:	cbz	x1, 12f8c <__sanitizer_cov_dump@@Base+0x222c>
   12e9c:	sub	sp, sp, #0x30
   12ea0:	stp	x19, x20, [sp, #16]
   12ea4:	mov	x19, x0
   12ea8:	mov	x20, x1
   12eac:	mov	x0, x1
   12eb0:	stp	x21, x30, [sp, #32]
   12eb4:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   12eb8:	cmp	x0, #0xf9c
   12ebc:	b.hi	12fac <__sanitizer_cov_dump@@Base+0x224c>  // b.pmore
   12ec0:	ldr	x21, [x19]
   12ec4:	mov	w1, #0x1                   	// #1
   12ec8:	ldxrb	w0, [x21]
   12ecc:	stxrb	w2, w1, [x21]
   12ed0:	cbnz	w2, 12ec8 <__sanitizer_cov_dump@@Base+0x2168>
   12ed4:	dmb	ish
   12ed8:	tst	w0, #0xff
   12edc:	b.eq	12ee8 <__sanitizer_cov_dump@@Base+0x2188>  // b.none
   12ee0:	mov	x0, x21
   12ee4:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   12ee8:	ldr	w0, [x19, #8]
   12eec:	sub	w1, w0, #0x1
   12ef0:	cmp	w1, #0x1
   12ef4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   12ef8:	b.ne	12f38 <__sanitizer_cov_dump@@Base+0x21d8>  // b.any
   12efc:	mov	w0, #0xffffffff            	// #-1
   12f00:	str	w0, [x19, #8]
   12f04:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12f08:	mov	x0, x20
   12f0c:	add	x1, x1, #0x118
   12f10:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   12f14:	cbnz	w0, 12f58 <__sanitizer_cov_dump@@Base+0x21f8>
   12f18:	mov	w0, #0x1                   	// #1
   12f1c:	str	w0, [x19, #8]
   12f20:	dmb	ish
   12f24:	strb	wzr, [x21]
   12f28:	ldp	x19, x20, [sp, #16]
   12f2c:	ldp	x21, x30, [sp, #32]
   12f30:	add	sp, sp, #0x30
   12f34:	ret
   12f38:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   12f3c:	mov	w0, #0xffffffff            	// #-1
   12f40:	str	w0, [x19, #8]
   12f44:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12f48:	mov	x0, x20
   12f4c:	add	x1, x1, #0x118
   12f50:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   12f54:	cbz	w0, 12f18 <__sanitizer_cov_dump@@Base+0x21b8>
   12f58:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12f5c:	mov	x0, x20
   12f60:	add	x1, x1, #0x120
   12f64:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   12f68:	cbnz	w0, 12f90 <__sanitizer_cov_dump@@Base+0x2230>
   12f6c:	mov	w0, #0x2                   	// #2
   12f70:	str	w0, [x19, #8]
   12f74:	dmb	ish
   12f78:	strb	wzr, [x21]
   12f7c:	ldp	x19, x20, [sp, #16]
   12f80:	ldp	x21, x30, [sp, #32]
   12f84:	add	sp, sp, #0x30
   12f88:	ret
   12f8c:	ret
   12f90:	mov	x3, x20
   12f94:	add	x0, x19, #0xc
   12f98:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   12f9c:	mov	x1, #0x1000                	// #4096
   12fa0:	add	x2, x2, #0x8b0
   12fa4:	bl	1c9e8 <OnPrint@@Base+0x8>
   12fa8:	b	12f20 <__sanitizer_cov_dump@@Base+0x21c0>
   12fac:	ldrb	w7, [x20, #6]
   12fb0:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   12fb4:	ldrb	w6, [x20, #5]
   12fb8:	add	x0, x0, #0xe8
   12fbc:	ldrb	w5, [x20, #4]
   12fc0:	ldrb	w4, [x20, #3]
   12fc4:	ldrb	w3, [x20, #2]
   12fc8:	ldrb	w2, [x20, #1]
   12fcc:	ldrb	w1, [x20]
   12fd0:	ldrb	w8, [x20, #7]
   12fd4:	str	w8, [sp]
   12fd8:	bl	1cd78 <OnPrint@@Base+0x398>
   12fdc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   12fe0:	stp	x19, x20, [sp, #-128]!
   12fe4:	mov	w19, #0x1                   	// #1
   12fe8:	str	x30, [sp, #80]
   12fec:	str	xzr, [x1]
   12ff0:	str	xzr, [x2]
   12ff4:	str	xzr, [x3]
   12ff8:	cbz	x4, 13104 <__sanitizer_cov_dump@@Base+0x23a4>
   12ffc:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   13000:	stp	x21, x22, [sp, #16]
   13004:	mov	x21, x1
   13008:	ldr	x19, [x19, #4016]
   1300c:	stp	x23, x24, [sp, #32]
   13010:	mov	x22, x4
   13014:	stp	x25, x26, [sp, #48]
   13018:	mov	x23, x5
   1301c:	mov	x26, x0
   13020:	ldr	x20, [x19]
   13024:	stp	x27, x28, [sp, #64]
   13028:	mov	x25, x2
   1302c:	mov	x28, x3
   13030:	mov	x0, #0x0                   	// #0
   13034:	cbz	x20, 13140 <__sanitizer_cov_dump@@Base+0x23e0>
   13038:	cmp	x20, x22
   1303c:	add	x24, sp, #0x78
   13040:	csel	x20, x20, x22, ls  // ls = plast
   13044:	adrp	x27, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13048:	add	x1, x27, #0x128
   1304c:	str	x1, [sp, #104]
   13050:	ldr	x1, [x25]
   13054:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   13058:	ldr	x1, [sp, #104]
   1305c:	mov	w2, #0x0                   	// #0
   13060:	mov	x0, x20
   13064:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   13068:	str	x0, [x21]
   1306c:	str	x20, [x25]
   13070:	mov	x2, x23
   13074:	mov	x0, x26
   13078:	mov	w1, #0x0                   	// #0
   1307c:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   13080:	mov	w27, w0
   13084:	cmn	w0, #0x1
   13088:	b.eq	13154 <__sanitizer_cov_dump@@Base+0x23f4>  // b.none
   1308c:	str	xzr, [x28]
   13090:	mov	x1, #0x0                   	// #0
   13094:	cbnz	x20, 130a4 <__sanitizer_cov_dump@@Base+0x2344>
   13098:	b	13114 <__sanitizer_cov_dump@@Base+0x23b4>
   1309c:	cmp	x1, x20
   130a0:	b.cs	13114 <__sanitizer_cov_dump@@Base+0x23b4>  // b.hs, b.nlast
   130a4:	ldr	x5, [x21]
   130a8:	sub	x2, x20, x1
   130ac:	mov	x4, x23
   130b0:	mov	x3, x24
   130b4:	mov	w0, w27
   130b8:	add	x1, x5, x1
   130bc:	bl	1a890 <__sanitizer_set_report_fd@@Base+0x6fc0>
   130c0:	ands	w19, w0, #0xff
   130c4:	b.eq	13130 <__sanitizer_cov_dump@@Base+0x23d0>  // b.none
   130c8:	ldr	x1, [x28]
   130cc:	ldr	x2, [sp, #120]
   130d0:	add	x1, x2, x1
   130d4:	str	x1, [x28]
   130d8:	cmp	x1, x22
   130dc:	cset	w19, eq  // eq = none
   130e0:	cmp	x2, #0x0
   130e4:	csinc	w19, w19, wzr, ne  // ne = any
   130e8:	cbz	w19, 1309c <__sanitizer_cov_dump@@Base+0x233c>
   130ec:	mov	w0, w27
   130f0:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   130f4:	ldp	x21, x22, [sp, #16]
   130f8:	ldp	x23, x24, [sp, #32]
   130fc:	ldp	x25, x26, [sp, #48]
   13100:	ldp	x27, x28, [sp, #64]
   13104:	mov	w0, w19
   13108:	ldr	x30, [sp, #80]
   1310c:	ldp	x19, x20, [sp], #128
   13110:	ret
   13114:	mov	w0, w27
   13118:	lsl	x20, x20, #1
   1311c:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   13120:	cmp	x20, x22
   13124:	csel	x20, x20, x22, ls  // ls = plast
   13128:	ldr	x0, [x21]
   1312c:	b	13050 <__sanitizer_cov_dump@@Base+0x22f0>
   13130:	ldr	x0, [x21]
   13134:	ldr	x1, [x25]
   13138:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1313c:	b	130ec <__sanitizer_cov_dump@@Base+0x238c>
   13140:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   13144:	mov	x20, x0
   13148:	ldr	x0, [x21]
   1314c:	str	x20, [x19]
   13150:	b	13038 <__sanitizer_cov_dump@@Base+0x22d8>
   13154:	ldr	x0, [x21]
   13158:	mov	w19, #0x0                   	// #0
   1315c:	ldr	x1, [x25]
   13160:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   13164:	ldp	x21, x22, [sp, #16]
   13168:	ldp	x23, x24, [sp, #32]
   1316c:	ldp	x25, x26, [sp, #48]
   13170:	ldp	x27, x28, [sp, #64]
   13174:	b	13104 <__sanitizer_cov_dump@@Base+0x23a4>
   13178:	stp	x19, x20, [sp, #-144]!
   1317c:	stp	x27, x28, [sp, #64]
   13180:	str	x30, [sp, #80]
   13184:	str	xzr, [x1, #16]
   13188:	cbz	x2, 13304 <__sanitizer_cov_dump@@Base+0x25a4>
   1318c:	stp	x25, x26, [sp, #48]
   13190:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   13194:	mov	x20, x1
   13198:	stp	x23, x24, [sp, #32]
   1319c:	mov	x19, x0
   131a0:	ldr	x24, [x25, #4016]
   131a4:	stp	x21, x22, [sp, #16]
   131a8:	mov	x21, x2
   131ac:	mov	x22, x3
   131b0:	ldr	x23, [x24]
   131b4:	cbz	x23, 132b8 <__sanitizer_cov_dump@@Base+0x2558>
   131b8:	mov	x0, x19
   131bc:	mov	x2, x22
   131c0:	mov	w1, #0x0                   	// #0
   131c4:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   131c8:	mov	w27, w0
   131cc:	cmn	w0, #0x1
   131d0:	b.eq	132e0 <__sanitizer_cov_dump@@Base+0x2580>  // b.none
   131d4:	ldr	x0, [x25, #4016]
   131d8:	str	x0, [sp, #104]
   131dc:	ldr	x3, [x20, #16]
   131e0:	adrp	x26, 40000 <__asan_backtrace_get_view@@Base+0x78>
   131e4:	mov	x19, #0x0                   	// #0
   131e8:	add	x24, sp, #0x88
   131ec:	add	x26, x26, #0x988
   131f0:	cmp	x3, x19
   131f4:	b.ls	13248 <__sanitizer_cov_dump@@Base+0x24e8>  // b.plast
   131f8:	cmp	x21, x3
   131fc:	b.cc	1329c <__sanitizer_cov_dump@@Base+0x253c>  // b.lo, b.ul, b.last
   13200:	ldr	x1, [x20]
   13204:	sub	x2, x3, x19
   13208:	mov	x4, x22
   1320c:	mov	x3, x24
   13210:	mov	w0, w27
   13214:	add	x1, x1, x19
   13218:	bl	1a890 <__sanitizer_set_report_fd@@Base+0x6fc0>
   1321c:	ands	w28, w0, #0xff
   13220:	b.eq	133f8 <__sanitizer_cov_dump@@Base+0x2698>  // b.none
   13224:	ldr	x1, [sp, #136]
   13228:	add	x3, x1, x19
   1322c:	cbz	x1, 1339c <__sanitizer_cov_dump@@Base+0x263c>
   13230:	cmp	x21, x3
   13234:	b.ls	133a0 <__sanitizer_cov_dump@@Base+0x2640>  // b.plast
   13238:	mov	x19, x3
   1323c:	ldr	x3, [x20, #16]
   13240:	cmp	x3, x19
   13244:	b.hi	131f8 <__sanitizer_cov_dump@@Base+0x2498>  // b.pmore
   13248:	lsl	x28, x19, #1
   1324c:	cmp	x28, x23
   13250:	csel	x28, x28, x23, cs  // cs = hs, nlast
   13254:	cmp	x28, x21
   13258:	csel	x28, x28, x21, ls  // ls = plast
   1325c:	cmp	x28, x3
   13260:	b.ls	13284 <__sanitizer_cov_dump@@Base+0x2524>  // b.plast
   13264:	ldr	x0, [x20, #8]
   13268:	cmp	x28, x0
   1326c:	b.hi	1333c <__sanitizer_cov_dump@@Base+0x25dc>  // b.pmore
   13270:	ldr	x4, [x20]
   13274:	add	x0, x4, x3
   13278:	sub	x2, x28, x3
   1327c:	mov	w1, #0x0                   	// #0
   13280:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   13284:	str	x28, [x20, #16]
   13288:	cmp	x28, x19
   1328c:	b.ls	1331c <__sanitizer_cov_dump@@Base+0x25bc>  // b.plast
   13290:	mov	x3, x28
   13294:	cmp	x21, x3
   13298:	b.cs	13200 <__sanitizer_cov_dump@@Base+0x24a0>  // b.hs, b.nlast
   1329c:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   132a0:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   132a4:	mov	x4, x21
   132a8:	add	x2, x2, #0x1c0
   132ac:	add	x0, x0, #0x180
   132b0:	mov	w1, #0x99                  	// #153
   132b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   132b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   132bc:	mov	x23, x0
   132c0:	mov	x2, x22
   132c4:	mov	w1, #0x0                   	// #0
   132c8:	str	x0, [x24]
   132cc:	mov	x0, x19
   132d0:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   132d4:	mov	w27, w0
   132d8:	cmn	w0, #0x1
   132dc:	b.ne	131d4 <__sanitizer_cov_dump@@Base+0x2474>  // b.any
   132e0:	mov	w28, #0x0                   	// #0
   132e4:	mov	w0, w28
   132e8:	ldp	x21, x22, [sp, #16]
   132ec:	ldp	x23, x24, [sp, #32]
   132f0:	ldp	x25, x26, [sp, #48]
   132f4:	ldp	x27, x28, [sp, #64]
   132f8:	ldr	x30, [sp, #80]
   132fc:	ldp	x19, x20, [sp], #144
   13300:	ret
   13304:	mov	w28, #0x1                   	// #1
   13308:	mov	w0, w28
   1330c:	ldp	x27, x28, [sp, #64]
   13310:	ldr	x30, [sp, #80]
   13314:	ldp	x19, x20, [sp], #144
   13318:	ret
   1331c:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13320:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13324:	mov	x4, x28
   13328:	mov	x3, x19
   1332c:	add	x2, x2, #0x160
   13330:	add	x0, x0, #0x180
   13334:	mov	w1, #0x98                  	// #152
   13338:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1333c:	ldr	x0, [sp, #104]
   13340:	ldr	x0, [x0]
   13344:	cbz	x0, 13410 <__sanitizer_cov_dump@@Base+0x26b0>
   13348:	sub	x1, x0, #0x1
   1334c:	tst	x1, x0
   13350:	b.ne	134a8 <__sanitizer_cov_dump@@Base+0x2748>  // b.any
   13354:	add	x1, x28, x1
   13358:	neg	x0, x0
   1335c:	and	x6, x1, x0
   13360:	mov	w2, #0x0                   	// #0
   13364:	mov	x0, x6
   13368:	mov	x1, x26
   1336c:	str	x6, [sp, #120]
   13370:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   13374:	str	x0, [sp, #112]
   13378:	ldr	x1, [x20]
   1337c:	ldr	x2, [x20, #16]
   13380:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   13384:	ldp	x0, x1, [x20]
   13388:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1338c:	ldp	x4, x6, [sp, #112]
   13390:	stp	x4, x6, [x20]
   13394:	ldr	x3, [x20, #16]
   13398:	b	13274 <__sanitizer_cov_dump@@Base+0x2514>
   1339c:	mov	x3, x19
   133a0:	mov	w0, w27
   133a4:	str	x3, [sp, #104]
   133a8:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   133ac:	ldr	x2, [x20, #16]
   133b0:	ldr	x3, [sp, #104]
   133b4:	cmp	x3, x2
   133b8:	b.ls	133e4 <__sanitizer_cov_dump@@Base+0x2684>  // b.plast
   133bc:	ldr	x0, [x20, #8]
   133c0:	cmp	x3, x0
   133c4:	b.hi	13420 <__sanitizer_cov_dump@@Base+0x26c0>  // b.pmore
   133c8:	ldr	x19, [x20]
   133cc:	add	x0, x19, x2
   133d0:	mov	w1, #0x0                   	// #0
   133d4:	sub	x2, x3, x2
   133d8:	str	x3, [sp, #104]
   133dc:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   133e0:	ldr	x3, [sp, #104]
   133e4:	ldp	x21, x22, [sp, #16]
   133e8:	ldp	x23, x24, [sp, #32]
   133ec:	ldp	x25, x26, [sp, #48]
   133f0:	str	x3, [x20, #16]
   133f4:	b	13308 <__sanitizer_cov_dump@@Base+0x25a8>
   133f8:	mov	w0, w27
   133fc:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   13400:	ldp	x21, x22, [sp, #16]
   13404:	ldp	x23, x24, [sp, #32]
   13408:	ldp	x25, x26, [sp, #48]
   1340c:	b	13308 <__sanitizer_cov_dump@@Base+0x25a8>
   13410:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   13414:	ldr	x1, [sp, #104]
   13418:	str	x0, [x1]
   1341c:	b	13348 <__sanitizer_cov_dump@@Base+0x25e8>
   13420:	cbz	x3, 13488 <__sanitizer_cov_dump@@Base+0x2728>
   13424:	ldr	x25, [x25, #4016]
   13428:	ldr	x0, [x25]
   1342c:	cbz	x0, 134d0 <__sanitizer_cov_dump@@Base+0x2770>
   13430:	sub	x1, x0, #0x1
   13434:	tst	x0, x1
   13438:	b.ne	134a8 <__sanitizer_cov_dump@@Base+0x2748>  // b.any
   1343c:	add	x1, x3, x1
   13440:	neg	x0, x0
   13444:	and	x21, x1, x0
   13448:	mov	w2, #0x0                   	// #0
   1344c:	mov	x0, x21
   13450:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13454:	add	x1, x1, #0x988
   13458:	str	x3, [sp, #104]
   1345c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   13460:	mov	x19, x0
   13464:	ldr	x1, [x20]
   13468:	ldr	x2, [x20, #16]
   1346c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   13470:	ldp	x0, x1, [x20]
   13474:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   13478:	stp	x19, x21, [x20]
   1347c:	ldr	x2, [x20, #16]
   13480:	ldr	x3, [sp, #104]
   13484:	b	133cc <__sanitizer_cov_dump@@Base+0x266c>
   13488:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1348c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13490:	add	x2, x2, #0x140
   13494:	add	x0, x0, #0x9b8
   13498:	mov	x4, #0x0                   	// #0
   1349c:	mov	x3, #0x0                   	// #0
   134a0:	mov	w1, #0x1fc                 	// #508
   134a4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   134a8:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
   134ac:	add	x19, x19, #0x970
   134b0:	mov	x0, x19
   134b4:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   134b8:	mov	x1, x19
   134bc:	mov	x2, x0
   134c0:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
   134c4:	add	x0, x0, #0x4f0
   134c8:	bl	1add0 <__sanitizer_set_report_fd@@Base+0x7500>
   134cc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   134d0:	str	x3, [sp, #104]
   134d4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   134d8:	str	x0, [x25]
   134dc:	ldr	x3, [sp, #104]
   134e0:	b	13430 <__sanitizer_cov_dump@@Base+0x26d0>
   134e4:	nop
   134e8:	stp	x19, x20, [sp, #-80]!
   134ec:	stp	x23, x24, [sp, #32]
   134f0:	mov	x23, x0
   134f4:	str	x30, [sp, #72]
   134f8:	bl	17c60 <__sanitizer_set_report_fd@@Base+0x4390>
   134fc:	tst	w0, #0xff
   13500:	b.eq	13518 <__sanitizer_cov_dump@@Base+0x27b8>  // b.none
   13504:	mov	x0, x23
   13508:	ldp	x23, x24, [sp, #32]
   1350c:	ldr	x30, [sp, #72]
   13510:	ldp	x19, x20, [sp], #80
   13514:	b	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   13518:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1351c:	add	x0, x0, #0x1e0
   13520:	stp	x21, x22, [sp, #16]
   13524:	bl	17d30 <__sanitizer_set_report_fd@@Base+0x4460>
   13528:	mov	x21, x0
   1352c:	cbz	x0, 13668 <__sanitizer_cov_dump@@Base+0x2908>
   13530:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   13534:	mov	x0, x23
   13538:	stp	x25, x26, [sp, #48]
   1353c:	str	x27, [sp, #64]
   13540:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   13544:	ldr	x20, [x19, #4016]
   13548:	mov	x24, x0
   1354c:	ldr	x0, [x20]
   13550:	cbz	x0, 13680 <__sanitizer_cov_dump@@Base+0x2920>
   13554:	sub	x1, x0, #0x1
   13558:	tst	x1, x0
   1355c:	b.ne	13744 <__sanitizer_cov_dump@@Base+0x29e4>  // b.any
   13560:	add	x25, x0, #0xfff
   13564:	neg	x0, x0
   13568:	and	x25, x25, x0
   1356c:	mov	w2, #0x0                   	// #0
   13570:	mov	x0, x25
   13574:	adrp	x20, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13578:	add	x1, x20, #0x988
   1357c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   13580:	mov	x2, #0x0                   	// #0
   13584:	mov	x1, #0x0                   	// #0
   13588:	mov	x22, x0
   1358c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   13590:	mov	x1, #0x0                   	// #0
   13594:	mov	x0, #0x0                   	// #0
   13598:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1359c:	cmp	x25, #0xfff
   135a0:	b.ls	136e8 <__sanitizer_cov_dump@@Base+0x2988>  // b.plast
   135a4:	mov	x0, x22
   135a8:	mov	w26, #0x2f                  	// #47
   135ac:	mov	x2, #0x1000                	// #4096
   135b0:	mov	w1, #0x0                   	// #0
   135b4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   135b8:	b	135c8 <__sanitizer_cov_dump@@Base+0x2868>
   135bc:	ldrb	w0, [x19]
   135c0:	cbz	w0, 13650 <__sanitizer_cov_dump@@Base+0x28f0>
   135c4:	add	x21, x19, #0x1
   135c8:	mov	x0, x21
   135cc:	mov	w1, #0x3a                  	// #58
   135d0:	bl	15e88 <__sanitizer_set_report_fd@@Base+0x25b8>
   135d4:	sub	x20, x0, x21
   135d8:	add	x27, x24, x20
   135dc:	mov	x19, x0
   135e0:	add	x0, x27, #0x2
   135e4:	cmp	x0, #0x1, lsl #12
   135e8:	b.hi	135bc <__sanitizer_cov_dump@@Base+0x285c>  // b.pmore
   135ec:	mov	x1, x21
   135f0:	mov	x2, x20
   135f4:	mov	x0, x22
   135f8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   135fc:	cmp	x20, #0xfff
   13600:	b.hi	1368c <__sanitizer_cov_dump@@Base+0x292c>  // b.pmore
   13604:	strb	w26, [x22, x20]
   13608:	add	x4, x20, #0x1
   1360c:	b.eq	136ac <__sanitizer_cov_dump@@Base+0x294c>  // b.none
   13610:	add	x0, x22, x4
   13614:	mov	x2, x24
   13618:	mov	x1, x23
   1361c:	add	x27, x27, #0x1
   13620:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   13624:	cmp	x27, #0xfff
   13628:	b.hi	136c8 <__sanitizer_cov_dump@@Base+0x2968>  // b.pmore
   1362c:	strb	wzr, [x22, x27]
   13630:	mov	x0, x22
   13634:	bl	17c60 <__sanitizer_set_report_fd@@Base+0x4390>
   13638:	tst	w0, #0xff
   1363c:	b.eq	135bc <__sanitizer_cov_dump@@Base+0x285c>  // b.none
   13640:	mov	x0, x22
   13644:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   13648:	mov	x21, x0
   1364c:	b	13654 <__sanitizer_cov_dump@@Base+0x28f4>
   13650:	mov	x21, #0x0                   	// #0
   13654:	mov	x1, x25
   13658:	mov	x0, x22
   1365c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   13660:	ldp	x25, x26, [sp, #48]
   13664:	ldr	x27, [sp, #64]
   13668:	mov	x0, x21
   1366c:	ldp	x21, x22, [sp, #16]
   13670:	ldp	x23, x24, [sp, #32]
   13674:	ldr	x30, [sp, #72]
   13678:	ldp	x19, x20, [sp], #80
   1367c:	ret
   13680:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   13684:	str	x0, [x20]
   13688:	b	13554 <__sanitizer_cov_dump@@Base+0x27f4>
   1368c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13690:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13694:	mov	x3, x20
   13698:	add	x2, x2, #0x9a0
   1369c:	add	x0, x0, #0x9b8
   136a0:	mov	x4, #0x1000                	// #4096
   136a4:	mov	w1, #0x1b6                 	// #438
   136a8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   136ac:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   136b0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   136b4:	add	x2, x2, #0x9a0
   136b8:	add	x0, x0, #0x9b8
   136bc:	mov	x3, x4
   136c0:	mov	w1, #0x1b6                 	// #438
   136c4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   136c8:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   136cc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   136d0:	add	x2, x2, #0x9a0
   136d4:	add	x0, x0, #0x9b8
   136d8:	mov	x4, #0x1000                	// #4096
   136dc:	mov	x3, #0xffffffffffffffff    	// #-1
   136e0:	mov	w1, #0x1b6                 	// #438
   136e4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   136e8:	ldr	x19, [x19, #4016]
   136ec:	ldr	x0, [x19]
   136f0:	cbz	x0, 1376c <__sanitizer_cov_dump@@Base+0x2a0c>
   136f4:	sub	x1, x0, #0x1
   136f8:	tst	x1, x0
   136fc:	b.ne	13744 <__sanitizer_cov_dump@@Base+0x29e4>  // b.any
   13700:	add	x19, x0, #0xfff
   13704:	neg	x0, x0
   13708:	and	x19, x19, x0
   1370c:	add	x1, x20, #0x988
   13710:	mov	x0, x19
   13714:	mov	w2, #0x0                   	// #0
   13718:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1371c:	mov	x20, x0
   13720:	mov	x2, #0x0                   	// #0
   13724:	mov	x1, x22
   13728:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1372c:	mov	x1, x25
   13730:	mov	x0, x22
   13734:	mov	x25, x19
   13738:	mov	x22, x20
   1373c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   13740:	b	135a4 <__sanitizer_cov_dump@@Base+0x2844>
   13744:	adrp	x19, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13748:	add	x19, x19, #0x970
   1374c:	mov	x0, x19
   13750:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   13754:	mov	x1, x19
   13758:	mov	x2, x0
   1375c:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
   13760:	add	x0, x0, #0x4f0
   13764:	bl	1add0 <__sanitizer_set_report_fd@@Base+0x7500>
   13768:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1376c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   13770:	str	x0, [x19]
   13774:	b	136f4 <__sanitizer_cov_dump@@Base+0x2994>

0000000000013778 <__sanitizer_set_report_path@@Base>:
   13778:	cbz	x0, 13874 <__sanitizer_set_report_path@@Base+0xfc>
   1377c:	sub	sp, sp, #0x30
   13780:	stp	x19, x20, [sp, #16]
   13784:	mov	x19, x0
   13788:	stp	x21, x30, [sp, #32]
   1378c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   13790:	cmp	x0, #0xf9c
   13794:	b.hi	13898 <__sanitizer_set_report_path@@Base+0x120>  // b.pmore
   13798:	adrp	x20, 66000 <_Unwind_Backtrace@GCC_3.3>
   1379c:	mov	w1, #0x1                   	// #1
   137a0:	ldr	x21, [x20, #1264]
   137a4:	ldxrb	w0, [x21]
   137a8:	stxrb	w2, w1, [x21]
   137ac:	cbnz	w2, 137a4 <__sanitizer_set_report_path@@Base+0x2c>
   137b0:	dmb	ish
   137b4:	tst	w0, #0xff
   137b8:	b.eq	137c4 <__sanitizer_set_report_path@@Base+0x4c>  // b.none
   137bc:	mov	x0, x21
   137c0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   137c4:	add	x0, x20, #0x4f0
   137c8:	ldr	w0, [x0, #8]
   137cc:	sub	w1, w0, #0x1
   137d0:	cmp	w1, #0x1
   137d4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   137d8:	b.ne	1381c <__sanitizer_set_report_path@@Base+0xa4>  // b.any
   137dc:	add	x20, x20, #0x4f0
   137e0:	mov	w2, #0xffffffff            	// #-1
   137e4:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   137e8:	mov	x0, x19
   137ec:	add	x1, x1, #0x118
   137f0:	str	w2, [x20, #8]
   137f4:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   137f8:	cbnz	w0, 13840 <__sanitizer_set_report_path@@Base+0xc8>
   137fc:	mov	w0, #0x1                   	// #1
   13800:	str	w0, [x20, #8]
   13804:	dmb	ish
   13808:	strb	wzr, [x21]
   1380c:	ldp	x19, x20, [sp, #16]
   13810:	ldp	x21, x30, [sp, #32]
   13814:	add	sp, sp, #0x30
   13818:	ret
   1381c:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   13820:	add	x20, x20, #0x4f0
   13824:	mov	w2, #0xffffffff            	// #-1
   13828:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1382c:	mov	x0, x19
   13830:	add	x1, x1, #0x118
   13834:	str	w2, [x20, #8]
   13838:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1383c:	cbz	w0, 137fc <__sanitizer_set_report_path@@Base+0x84>
   13840:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13844:	mov	x0, x19
   13848:	add	x1, x1, #0x120
   1384c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   13850:	cbnz	w0, 13878 <__sanitizer_set_report_path@@Base+0x100>
   13854:	mov	w0, #0x2                   	// #2
   13858:	str	w0, [x20, #8]
   1385c:	dmb	ish
   13860:	strb	wzr, [x21]
   13864:	ldp	x19, x20, [sp, #16]
   13868:	ldp	x21, x30, [sp, #32]
   1386c:	add	sp, sp, #0x30
   13870:	ret
   13874:	ret
   13878:	mov	x3, x19
   1387c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   13880:	adrp	x0, 66000 <_Unwind_Backtrace@GCC_3.3>
   13884:	add	x2, x2, #0x8b0
   13888:	mov	x1, #0x1000                	// #4096
   1388c:	add	x0, x0, #0x4fc
   13890:	bl	1c9e8 <OnPrint@@Base+0x8>
   13894:	b	13804 <__sanitizer_set_report_path@@Base+0x8c>
   13898:	ldrb	w7, [x19, #6]
   1389c:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   138a0:	ldrb	w6, [x19, #5]
   138a4:	add	x0, x0, #0xe8
   138a8:	ldrb	w5, [x19, #4]
   138ac:	ldrb	w4, [x19, #3]
   138b0:	ldrb	w3, [x19, #2]
   138b4:	ldrb	w2, [x19, #1]
   138b8:	ldrb	w1, [x19]
   138bc:	ldrb	w8, [x19, #7]
   138c0:	str	w8, [sp]
   138c4:	bl	1cd78 <OnPrint@@Base+0x398>
   138c8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   138cc:	nop

00000000000138d0 <__sanitizer_set_report_fd@@Base>:
   138d0:	stp	x19, x30, [sp, #-16]!
   138d4:	adrp	x19, 66000 <_Unwind_Backtrace@GCC_3.3>
   138d8:	add	x19, x19, #0x4f0
   138dc:	str	w0, [x19, #8]
   138e0:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   138e4:	str	x0, [x19, #8208]
   138e8:	ldp	x19, x30, [sp], #16
   138ec:	ret
   138f0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   138f4:	add	x7, x1, #0xd20
   138f8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   138fc:	mov	x17, #0x10000               	// #65536
   13900:	mov	x16, #0x10100000000         	// #1103806595072
   13904:	mov	w11, #0x100                 	// #256
   13908:	ldr	q1, [x1, #1632]
   1390c:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   13910:	mov	w5, #0x1                   	// #1
   13914:	mov	w8, #0x1                   	// #1
   13918:	ldr	q0, [x1, #1648]
   1391c:	movk	x17, #0x1, lsl #32
   13920:	movk	x16, #0x1, lsl #48
   13924:	mov	x15, #0x100000000           	// #4294967296
   13928:	mov	w14, #0x101                 	// #257
   1392c:	mov	x13, #0x10000               	// #65536
   13930:	mov	w12, #0x1388                	// #5000
   13934:	movk	w11, #0x101, lsl #16
   13938:	adrp	x6, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1393c:	adrp	x4, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13940:	add	x6, x6, #0x120
   13944:	add	x4, x4, #0x290
   13948:	adrp	x3, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   1394c:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13950:	add	x3, x3, #0x950
   13954:	add	x2, x2, #0x298
   13958:	mov	x10, #0x1                   	// #1
   1395c:	strb	w5, [x0]
   13960:	str	xzr, [x0, #8]
   13964:	movk	x10, #0x100, lsl #32
   13968:	strb	wzr, [x0, #16]
   1396c:	mov	w9, #0x100                 	// #256
   13970:	stp	x7, x17, [x0, #24]
   13974:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   13978:	add	x1, x1, #0xbb0
   1397c:	str	x6, [x0, #40]
   13980:	strh	wzr, [x0, #48]
   13984:	stur	x16, [x0, #52]
   13988:	strb	w5, [x0, #60]
   1398c:	str	wzr, [x0, #64]
   13990:	strb	w5, [x0, #68]
   13994:	stur	q1, [x0, #72]
   13998:	str	x15, [x0, #88]
   1399c:	strh	w14, [x0, #96]
   139a0:	strb	wzr, [x0, #98]
   139a4:	stp	x13, x4, [x0, #104]
   139a8:	strh	wzr, [x0, #120]
   139ac:	strb	wzr, [x0, #122]
   139b0:	stp	xzr, xzr, [x0, #128]
   139b4:	str	xzr, [x0, #144]
   139b8:	strb	wzr, [x0, #152]
   139bc:	str	w12, [x0, #156]
   139c0:	strh	w8, [x0, #160]
   139c4:	str	x3, [x0, #168]
   139c8:	str	w11, [x0, #176]
   139cc:	strh	w8, [x0, #180]
   139d0:	str	wzr, [x0, #184]
   139d4:	str	x2, [x0, #192]
   139d8:	stur	q0, [x0, #200]
   139dc:	stp	x10, x1, [x0, #216]
   139e0:	strh	w9, [x0, #232]
   139e4:	strb	wzr, [x0, #234]
   139e8:	ret
   139ec:	nop
   139f0:	mov	x2, #0xf0                  	// #240
   139f4:	b	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   139f8:	stp	x19, x20, [sp, #-80]!
   139fc:	sub	x2, x2, #0x1
   13a00:	mov	x19, x1
   13a04:	stp	x21, x22, [sp, #16]
   13a08:	mov	x21, x0
   13a0c:	add	x20, x1, x2
   13a10:	str	x30, [sp, #32]
   13a14:	ldrb	w0, [x0]
   13a18:	cbz	w0, 13af0 <__sanitizer_set_report_fd@@Base+0x220>
   13a1c:	cmp	x1, x20
   13a20:	b.cs	13abc <__sanitizer_set_report_fd@@Base+0x1ec>  // b.hs, b.nlast
   13a24:	mov	w22, #0x6667                	// #26215
   13a28:	movk	w22, #0x6666, lsl #16
   13a2c:	nop
   13a30:	cmp	w0, #0x25
   13a34:	b.ne	13ae0 <__sanitizer_set_report_fd@@Base+0x210>  // b.any
   13a38:	ldrb	w1, [x21, #1]
   13a3c:	cmp	w1, #0x62
   13a40:	b.eq	13b0c <__sanitizer_set_report_fd@@Base+0x23c>  // b.none
   13a44:	cmp	w1, #0x70
   13a48:	b.ne	13ae0 <__sanitizer_set_report_fd@@Base+0x210>  // b.any
   13a4c:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   13a50:	add	x3, sp, #0x50
   13a54:	nop
   13a58:	smull	x1, w0, w22
   13a5c:	asr	x1, x1, #34
   13a60:	sub	w1, w1, w0, asr #31
   13a64:	add	w2, w1, w1, lsl #2
   13a68:	sub	w2, w0, w2, lsl #1
   13a6c:	mov	w0, w1
   13a70:	add	w1, w2, #0x30
   13a74:	strb	w1, [x3, #-1]!
   13a78:	cbnz	w0, 13a58 <__sanitizer_set_report_fd@@Base+0x188>
   13a7c:	add	x0, sp, #0x50
   13a80:	cmp	x0, x3
   13a84:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   13a88:	b.cs	13aa8 <__sanitizer_set_report_fd@@Base+0x1d8>  // b.hs, b.nlast
   13a8c:	nop
   13a90:	ldrb	w0, [x3], #1
   13a94:	strb	w0, [x19], #1
   13a98:	add	x0, sp, #0x50
   13a9c:	cmp	x19, x20
   13aa0:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   13aa4:	b.hi	13a90 <__sanitizer_set_report_fd@@Base+0x1c0>  // b.pmore
   13aa8:	ldrb	w0, [x21, #2]
   13aac:	add	x21, x21, #0x2
   13ab0:	cbz	w0, 13af0 <__sanitizer_set_report_fd@@Base+0x220>
   13ab4:	cmp	x19, x20
   13ab8:	b.cc	13a30 <__sanitizer_set_report_fd@@Base+0x160>  // b.lo, b.ul, b.last
   13abc:	cmp	x19, x20
   13ac0:	cset	x3, cc  // cc = lo, ul, last
   13ac4:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ac8:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13acc:	add	x2, x2, #0x2f0
   13ad0:	add	x0, x0, #0x2b0
   13ad4:	mov	x4, #0x0                   	// #0
   13ad8:	mov	w1, #0x46                  	// #70
   13adc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13ae0:	add	x21, x21, #0x1
   13ae4:	strb	w0, [x19], #1
   13ae8:	ldrb	w0, [x21]
   13aec:	cbnz	w0, 13ab4 <__sanitizer_set_report_fd@@Base+0x1e4>
   13af0:	cmp	x19, x20
   13af4:	b.cs	13b60 <__sanitizer_set_report_fd@@Base+0x290>  // b.hs, b.nlast
   13af8:	strb	wzr, [x19]
   13afc:	ldp	x21, x22, [sp, #16]
   13b00:	ldr	x30, [sp, #32]
   13b04:	ldp	x19, x20, [sp], #80
   13b08:	ret
   13b0c:	bl	fc80 <__sancov_default_options@@Base+0x32d0>
   13b10:	cbz	x0, 13b40 <__sanitizer_set_report_fd@@Base+0x270>
   13b14:	ldrb	w1, [x0]
   13b18:	cmp	w1, #0x0
   13b1c:	ccmp	x19, x20, #0x2, ne  // ne = any
   13b20:	b.cs	13aa8 <__sanitizer_set_report_fd@@Base+0x1d8>  // b.hs, b.nlast
   13b24:	nop
   13b28:	strb	w1, [x19], #1
   13b2c:	ldrb	w1, [x0, #1]!
   13b30:	cmp	w1, #0x0
   13b34:	ccmp	x19, x20, #0x2, ne  // ne = any
   13b38:	b.cc	13b28 <__sanitizer_set_report_fd@@Base+0x258>  // b.lo, b.ul, b.last
   13b3c:	b	13aa8 <__sanitizer_set_report_fd@@Base+0x1d8>
   13b40:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13b44:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13b48:	add	x2, x2, #0x2a0
   13b4c:	add	x0, x0, #0x2b0
   13b50:	mov	x4, #0x0                   	// #0
   13b54:	mov	x3, #0x0                   	// #0
   13b58:	mov	w1, #0x2e                  	// #46
   13b5c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   13b60:	mov	x3, #0x0                   	// #0
   13b64:	b	13ac4 <__sanitizer_set_report_fd@@Base+0x1f4>
   13b68:	stp	x19, x20, [sp, #-32]!
   13b6c:	mov	x1, #0x18                  	// #24
   13b70:	mov	x19, x0
   13b74:	stp	x21, x30, [sp, #16]
   13b78:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   13b7c:	adrp	x20, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   13b80:	ldr	x21, [x21, #3776]
   13b84:	add	x20, x20, #0xe18
   13b88:	mov	x0, x21
   13b8c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13b90:	mov	x2, x0
   13b94:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13b98:	add	x3, x3, #0x310
   13b9c:	mov	x0, x19
   13ba0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ba4:	add	x1, x1, #0x338
   13ba8:	stp	x20, x19, [x2]
   13bac:	strb	wzr, [x2, #16]
   13bb0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13bb4:	mov	x0, x21
   13bb8:	mov	x1, #0x18                  	// #24
   13bbc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13bc0:	mov	x2, x0
   13bc4:	mov	w4, #0x1                   	// #1
   13bc8:	mov	x0, x19
   13bcc:	ldp	x21, x30, [sp, #16]
   13bd0:	stp	x20, x19, [x2]
   13bd4:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13bd8:	strb	w4, [x2, #16]
   13bdc:	add	x3, x3, #0x340
   13be0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13be4:	add	x1, x1, #0x378
   13be8:	ldp	x19, x20, [sp], #32
   13bec:	b	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13bf0:	stp	x19, x20, [sp, #-64]!
   13bf4:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   13bf8:	mov	x19, x0
   13bfc:	ldr	x20, [x20, #3776]
   13c00:	stp	x21, x22, [sp, #16]
   13c04:	mov	x21, x1
   13c08:	mov	x0, x20
   13c0c:	mov	x1, #0x10                  	// #16
   13c10:	stp	x23, x24, [sp, #32]
   13c14:	adrp	x22, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   13c18:	add	x22, x22, #0xd40
   13c1c:	stp	x25, x30, [sp, #48]
   13c20:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13c24:	mov	x2, x0
   13c28:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13c2c:	add	x3, x3, #0x390
   13c30:	mov	x0, x19
   13c34:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
   13c38:	stp	x22, x21, [x2]
   13c3c:	add	x1, x1, #0xc60
   13c40:	adrp	x23, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   13c44:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13c48:	add	x23, x23, #0xd58
   13c4c:	mov	x0, x20
   13c50:	mov	x1, #0x10                  	// #16
   13c54:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13c58:	mov	x2, x0
   13c5c:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13c60:	add	x0, x21, #0x8
   13c64:	add	x3, x3, #0x408
   13c68:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13c6c:	stp	x23, x0, [x2]
   13c70:	add	x1, x1, #0x460
   13c74:	mov	x0, x19
   13c78:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13c7c:	adrp	x25, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   13c80:	mov	x0, x20
   13c84:	mov	x1, #0x10                  	// #16
   13c88:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13c8c:	mov	x2, x0
   13c90:	add	x4, x21, #0x10
   13c94:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13c98:	add	x3, x3, #0x480
   13c9c:	mov	x0, x19
   13ca0:	stp	x22, x4, [x2]
   13ca4:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ca8:	add	x1, x1, #0x520
   13cac:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13cb0:	add	x25, x25, #0xde8
   13cb4:	mov	x0, x20
   13cb8:	mov	x1, #0x10                  	// #16
   13cbc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13cc0:	mov	x2, x0
   13cc4:	add	x4, x21, #0x18
   13cc8:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ccc:	add	x3, x3, #0x530
   13cd0:	mov	x0, x19
   13cd4:	stp	x23, x4, [x2]
   13cd8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13cdc:	add	x1, x1, #0x568
   13ce0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13ce4:	adrp	x24, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   13ce8:	mov	x0, x20
   13cec:	mov	x1, #0x10                  	// #16
   13cf0:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13cf4:	mov	x2, x0
   13cf8:	add	x4, x21, #0x20
   13cfc:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d00:	add	x3, x3, #0x580
   13d04:	mov	x0, x19
   13d08:	stp	x22, x4, [x2]
   13d0c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d10:	add	x1, x1, #0x5d8
   13d14:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13d18:	add	x24, x24, #0xdd0
   13d1c:	mov	x0, x20
   13d20:	mov	x1, #0x10                  	// #16
   13d24:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13d28:	mov	x2, x0
   13d2c:	add	x4, x21, #0x21
   13d30:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d34:	add	x3, x3, #0x5f0
   13d38:	mov	x0, x19
   13d3c:	stp	x22, x4, [x2]
   13d40:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d44:	add	x1, x1, #0x640
   13d48:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13d4c:	mov	x0, x20
   13d50:	mov	x1, #0x10                  	// #16
   13d54:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13d58:	mov	x2, x0
   13d5c:	add	x4, x21, #0x22
   13d60:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d64:	add	x3, x3, #0x658
   13d68:	mov	x0, x19
   13d6c:	stp	x22, x4, [x2]
   13d70:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d74:	add	x1, x1, #0x6a0
   13d78:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13d7c:	mov	x0, x20
   13d80:	mov	x1, #0x10                  	// #16
   13d84:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13d88:	mov	x2, x0
   13d8c:	add	x4, x21, #0x23
   13d90:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13d94:	add	x3, x3, #0x6b8
   13d98:	mov	x0, x19
   13d9c:	stp	x22, x4, [x2]
   13da0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13da4:	add	x1, x1, #0x6e0
   13da8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13dac:	mov	x0, x20
   13db0:	mov	x1, #0x10                  	// #16
   13db4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13db8:	mov	x2, x0
   13dbc:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13dc0:	add	x0, x21, #0x24
   13dc4:	add	x3, x3, #0x6f0
   13dc8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13dcc:	stp	x25, x0, [x2]
   13dd0:	add	x1, x1, #0x738
   13dd4:	mov	x0, x19
   13dd8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13ddc:	mov	x0, x20
   13de0:	mov	x1, #0x10                  	// #16
   13de4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13de8:	mov	x2, x0
   13dec:	add	x4, x21, #0x28
   13df0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13df4:	add	x3, x3, #0x750
   13df8:	mov	x0, x19
   13dfc:	stp	x23, x4, [x2]
   13e00:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e04:	add	x1, x1, #0x7b8
   13e08:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13e0c:	mov	x0, x20
   13e10:	mov	x1, #0x10                  	// #16
   13e14:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13e18:	mov	x2, x0
   13e1c:	add	x4, x21, #0x30
   13e20:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e24:	add	x3, x3, #0x7c8
   13e28:	mov	x0, x19
   13e2c:	stp	x22, x4, [x2]
   13e30:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e34:	add	x1, x1, #0x840
   13e38:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13e3c:	mov	x0, x20
   13e40:	mov	x1, #0x10                  	// #16
   13e44:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13e48:	mov	x2, x0
   13e4c:	add	x4, x21, #0x31
   13e50:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e54:	add	x3, x3, #0x850
   13e58:	mov	x0, x19
   13e5c:	stp	x22, x4, [x2]
   13e60:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e64:	add	x1, x1, #0x8a0
   13e68:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13e6c:	mov	x0, x20
   13e70:	mov	x1, #0x10                  	// #16
   13e74:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13e78:	mov	x2, x0
   13e7c:	add	x4, x21, #0x34
   13e80:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e84:	add	x3, x3, #0x8b0
   13e88:	mov	x0, x19
   13e8c:	stp	x25, x4, [x2]
   13e90:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13e94:	add	x1, x1, #0x8f8
   13e98:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13e9c:	mov	x0, x20
   13ea0:	mov	x1, #0x10                  	// #16
   13ea4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13ea8:	mov	x2, x0
   13eac:	add	x4, x21, #0x38
   13eb0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13eb4:	add	x3, x3, #0x908
   13eb8:	mov	x0, x19
   13ebc:	stp	x22, x4, [x2]
   13ec0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ec4:	add	x1, x1, #0x978
   13ec8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13ecc:	mov	x0, x20
   13ed0:	mov	x1, #0x10                  	// #16
   13ed4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13ed8:	mov	x2, x0
   13edc:	add	x4, x21, #0x39
   13ee0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ee4:	add	x3, x3, #0x988
   13ee8:	mov	x0, x19
   13eec:	stp	x22, x4, [x2]
   13ef0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13ef4:	add	x1, x1, #0x9a8
   13ef8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13efc:	mov	x0, x20
   13f00:	mov	x1, #0x10                  	// #16
   13f04:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13f08:	mov	x2, x0
   13f0c:	add	x4, x21, #0x3a
   13f10:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f14:	add	x3, x3, #0x9b8
   13f18:	mov	x0, x19
   13f1c:	stp	x22, x4, [x2]
   13f20:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f24:	add	x1, x1, #0xa58
   13f28:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13f2c:	mov	x0, x20
   13f30:	mov	x1, #0x10                  	// #16
   13f34:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13f38:	mov	x2, x0
   13f3c:	add	x4, x21, #0x3b
   13f40:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f44:	add	x3, x3, #0xa70
   13f48:	mov	x0, x19
   13f4c:	stp	x22, x4, [x2]
   13f50:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f54:	add	x1, x1, #0xac0
   13f58:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13f5c:	mov	x0, x20
   13f60:	mov	x1, #0x10                  	// #16
   13f64:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13f68:	mov	x2, x0
   13f6c:	add	x4, x21, #0x3c
   13f70:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f74:	add	x3, x3, #0xae0
   13f78:	mov	x0, x19
   13f7c:	stp	x22, x4, [x2]
   13f80:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13f84:	add	x1, x1, #0xb30
   13f88:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13f8c:	mov	x0, x20
   13f90:	mov	x1, #0x10                  	// #16
   13f94:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13f98:	mov	x2, x0
   13f9c:	add	x4, x21, #0x40
   13fa0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13fa4:	add	x3, x3, #0xb40
   13fa8:	mov	x0, x19
   13fac:	stp	x25, x4, [x2]
   13fb0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13fb4:	add	x1, x1, #0xba8
   13fb8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13fbc:	mov	x0, x20
   13fc0:	mov	x1, #0x10                  	// #16
   13fc4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13fc8:	mov	x2, x0
   13fcc:	add	x4, x21, #0x44
   13fd0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13fd4:	add	x3, x3, #0xbc0
   13fd8:	mov	x0, x19
   13fdc:	stp	x22, x4, [x2]
   13fe0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   13fe4:	add	x1, x1, #0xbd8
   13fe8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   13fec:	mov	x0, x20
   13ff0:	mov	x1, #0x10                  	// #16
   13ff4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   13ff8:	mov	x2, x0
   13ffc:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14000:	add	x0, x21, #0x48
   14004:	add	x3, x3, #0xbe8
   14008:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1400c:	stp	x24, x0, [x2]
   14010:	add	x1, x1, #0xca8
   14014:	mov	x0, x19
   14018:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   1401c:	mov	x0, x20
   14020:	mov	x1, #0x10                  	// #16
   14024:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14028:	mov	x2, x0
   1402c:	add	x4, x21, #0x4c
   14030:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14034:	add	x3, x3, #0xcb8
   14038:	mov	x0, x19
   1403c:	stp	x24, x4, [x2]
   14040:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14044:	add	x1, x1, #0xd78
   14048:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   1404c:	mov	x0, x20
   14050:	mov	x1, #0x10                  	// #16
   14054:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14058:	mov	x2, x0
   1405c:	add	x4, x21, #0x50
   14060:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14064:	add	x3, x3, #0xd88
   14068:	mov	x0, x19
   1406c:	stp	x24, x4, [x2]
   14070:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14074:	add	x1, x1, #0xe48
   14078:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   1407c:	mov	x0, x20
   14080:	mov	x1, #0x10                  	// #16
   14084:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14088:	mov	x2, x0
   1408c:	add	x4, x21, #0x54
   14090:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14094:	add	x3, x3, #0xe58
   14098:	mov	x0, x19
   1409c:	stp	x24, x4, [x2]
   140a0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   140a4:	add	x1, x1, #0xf18
   140a8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   140ac:	mov	x0, x20
   140b0:	mov	x1, #0x10                  	// #16
   140b4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   140b8:	mov	x2, x0
   140bc:	add	x4, x21, #0x58
   140c0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   140c4:	add	x3, x3, #0xf28
   140c8:	mov	x0, x19
   140cc:	stp	x24, x4, [x2]
   140d0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   140d4:	add	x1, x1, #0xfe8
   140d8:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   140dc:	mov	x0, x20
   140e0:	mov	x1, #0x10                  	// #16
   140e4:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   140e8:	mov	x2, x0
   140ec:	add	x4, x21, #0x5c
   140f0:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   140f4:	add	x3, x3, #0xff8
   140f8:	mov	x0, x19
   140fc:	stp	x24, x4, [x2]
   14100:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   14104:	add	x1, x1, #0xb8
   14108:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   1410c:	adrp	x24, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   14110:	mov	x0, x20
   14114:	mov	x1, #0x10                  	// #16
   14118:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   1411c:	mov	x2, x0
   14120:	add	x4, x21, #0x60
   14124:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   14128:	add	x3, x3, #0xc8
   1412c:	mov	x0, x19
   14130:	stp	x22, x4, [x2]
   14134:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   14138:	add	x1, x1, #0x138
   1413c:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14140:	add	x24, x24, #0xe00
   14144:	mov	x0, x20
   14148:	mov	x1, #0x10                  	// #16
   1414c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14150:	mov	x2, x0
   14154:	add	x4, x21, #0x61
   14158:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1415c:	add	x3, x3, #0x150
   14160:	mov	x0, x19
   14164:	stp	x22, x4, [x2]
   14168:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1416c:	add	x1, x1, #0x188
   14170:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14174:	mov	x0, x20
   14178:	mov	x1, #0x10                  	// #16
   1417c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14180:	mov	x2, x0
   14184:	add	x4, x21, #0x62
   14188:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1418c:	add	x3, x3, #0x198
   14190:	mov	x0, x19
   14194:	stp	x22, x4, [x2]
   14198:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1419c:	add	x1, x1, #0x1c0
   141a0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   141a4:	mov	x0, x20
   141a8:	mov	x1, #0x10                  	// #16
   141ac:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   141b0:	mov	x2, x0
   141b4:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   141b8:	add	x0, x21, #0x68
   141bc:	add	x3, x3, #0x1d8
   141c0:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   141c4:	stp	x24, x0, [x2]
   141c8:	add	x1, x1, #0x250
   141cc:	mov	x0, x19
   141d0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   141d4:	mov	x0, x20
   141d8:	mov	x1, #0x10                  	// #16
   141dc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   141e0:	mov	x2, x0
   141e4:	add	x4, x21, #0x70
   141e8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   141ec:	add	x3, x3, #0x270
   141f0:	mov	x0, x19
   141f4:	stp	x23, x4, [x2]
   141f8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   141fc:	add	x1, x1, #0x298
   14200:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14204:	mov	x0, x20
   14208:	mov	x1, #0x10                  	// #16
   1420c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14210:	mov	x2, x0
   14214:	add	x4, x21, #0x78
   14218:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1421c:	add	x3, x3, #0x2a0
   14220:	mov	x0, x19
   14224:	stp	x22, x4, [x2]
   14228:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1422c:	add	x1, x1, #0x2e8
   14230:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14234:	mov	x0, x20
   14238:	mov	x1, #0x10                  	// #16
   1423c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14240:	mov	x2, x0
   14244:	add	x4, x21, #0x79
   14248:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1424c:	add	x3, x3, #0x300
   14250:	mov	x0, x19
   14254:	stp	x22, x4, [x2]
   14258:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1425c:	add	x1, x1, #0x320
   14260:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14264:	mov	x0, x20
   14268:	mov	x1, #0x10                  	// #16
   1426c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14270:	mov	x2, x0
   14274:	add	x4, x21, #0x7a
   14278:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1427c:	add	x3, x3, #0x338
   14280:	mov	x0, x19
   14284:	stp	x22, x4, [x2]
   14288:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
   1428c:	add	x1, x1, #0xc88
   14290:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14294:	mov	x0, x20
   14298:	mov	x1, #0x10                  	// #16
   1429c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   142a0:	mov	x2, x0
   142a4:	add	x4, x21, #0x80
   142a8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   142ac:	add	x3, x3, #0x358
   142b0:	mov	x0, x19
   142b4:	stp	x24, x4, [x2]
   142b8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   142bc:	add	x1, x1, #0x3d0
   142c0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   142c4:	mov	x0, x20
   142c8:	mov	x1, #0x10                  	// #16
   142cc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   142d0:	mov	x2, x0
   142d4:	add	x4, x21, #0x88
   142d8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   142dc:	add	x3, x3, #0x3e0
   142e0:	mov	x0, x19
   142e4:	stp	x24, x4, [x2]
   142e8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   142ec:	add	x1, x1, #0x480
   142f0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   142f4:	mov	x0, x20
   142f8:	mov	x1, #0x10                  	// #16
   142fc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14300:	mov	x2, x0
   14304:	add	x4, x21, #0x90
   14308:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1430c:	add	x3, x3, #0x498
   14310:	mov	x0, x19
   14314:	stp	x24, x4, [x2]
   14318:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1431c:	add	x1, x1, #0x5f8
   14320:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14324:	mov	x0, x20
   14328:	mov	x1, #0x10                  	// #16
   1432c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14330:	mov	x2, x0
   14334:	add	x4, x21, #0x98
   14338:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1433c:	add	x3, x3, #0x610
   14340:	mov	x0, x19
   14344:	stp	x22, x4, [x2]
   14348:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1434c:	add	x1, x1, #0x638
   14350:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14354:	mov	x0, x20
   14358:	mov	x1, #0x10                  	// #16
   1435c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14360:	mov	x2, x0
   14364:	add	x4, x21, #0x9c
   14368:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1436c:	add	x3, x3, #0x648
   14370:	mov	x0, x19
   14374:	stp	x25, x4, [x2]
   14378:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1437c:	add	x1, x1, #0x718
   14380:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14384:	mov	x0, x20
   14388:	mov	x1, #0x10                  	// #16
   1438c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14390:	mov	x2, x0
   14394:	add	x4, x21, #0xa0
   14398:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1439c:	add	x3, x3, #0x740
   143a0:	mov	x0, x19
   143a4:	stp	x22, x4, [x2]
   143a8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   143ac:	add	x1, x1, #0x7a0
   143b0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   143b4:	mov	x0, x20
   143b8:	mov	x1, #0x10                  	// #16
   143bc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   143c0:	mov	x2, x0
   143c4:	add	x4, x21, #0xa1
   143c8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   143cc:	add	x3, x3, #0x7b8
   143d0:	mov	x0, x19
   143d4:	stp	x22, x4, [x2]
   143d8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   143dc:	add	x1, x1, #0x838
   143e0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   143e4:	mov	x0, x20
   143e8:	mov	x1, #0x10                  	// #16
   143ec:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   143f0:	mov	x2, x0
   143f4:	add	x4, x21, #0xa8
   143f8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   143fc:	add	x3, x3, #0x848
   14400:	mov	x0, x19
   14404:	stp	x23, x4, [x2]
   14408:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1440c:	add	x1, x1, #0x890
   14410:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14414:	mov	x0, x20
   14418:	mov	x1, #0x10                  	// #16
   1441c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14420:	mov	x2, x0
   14424:	add	x4, x21, #0xb0
   14428:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1442c:	add	x3, x3, #0x8a0
   14430:	mov	x0, x19
   14434:	stp	x22, x4, [x2]
   14438:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1443c:	add	x1, x1, #0x908
   14440:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14444:	mov	x0, x20
   14448:	mov	x1, #0x10                  	// #16
   1444c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14450:	mov	x2, x0
   14454:	add	x4, x21, #0xb1
   14458:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1445c:	add	x3, x3, #0x920
   14460:	mov	x0, x19
   14464:	stp	x22, x4, [x2]
   14468:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1446c:	add	x1, x1, #0x948
   14470:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14474:	mov	x0, x20
   14478:	mov	x1, #0x10                  	// #16
   1447c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14480:	mov	x2, x0
   14484:	add	x4, x21, #0xb2
   14488:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1448c:	add	x3, x3, #0x960
   14490:	mov	x0, x19
   14494:	stp	x22, x4, [x2]
   14498:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1449c:	add	x1, x1, #0xa30
   144a0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   144a4:	mov	x0, x20
   144a8:	mov	x1, #0x10                  	// #16
   144ac:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   144b0:	mov	x2, x0
   144b4:	add	x4, x21, #0xb3
   144b8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   144bc:	add	x3, x3, #0xa48
   144c0:	mov	x0, x19
   144c4:	stp	x22, x4, [x2]
   144c8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   144cc:	add	x1, x1, #0xa90
   144d0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   144d4:	mov	x0, x20
   144d8:	mov	x1, #0x10                  	// #16
   144dc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   144e0:	mov	x2, x0
   144e4:	add	x4, x21, #0xb4
   144e8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   144ec:	add	x3, x3, #0xaa8
   144f0:	mov	x0, x19
   144f4:	stp	x22, x4, [x2]
   144f8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   144fc:	add	x1, x1, #0xae0
   14500:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14504:	mov	x0, x20
   14508:	mov	x1, #0x10                  	// #16
   1450c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14510:	mov	x2, x0
   14514:	add	x4, x21, #0xb5
   14518:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1451c:	add	x3, x3, #0xaf8
   14520:	mov	x0, x19
   14524:	stp	x22, x4, [x2]
   14528:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1452c:	add	x1, x1, #0xb40
   14530:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14534:	mov	x0, x20
   14538:	mov	x1, #0x10                  	// #16
   1453c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14540:	mov	x2, x0
   14544:	add	x4, x21, #0xb8
   14548:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1454c:	add	x3, x3, #0xb58
   14550:	mov	x0, x19
   14554:	stp	x25, x4, [x2]
   14558:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1455c:	add	x1, x1, #0xc28
   14560:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14564:	mov	x0, x20
   14568:	mov	x1, #0x10                  	// #16
   1456c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14570:	mov	x2, x0
   14574:	add	x4, x21, #0xc0
   14578:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1457c:	add	x3, x3, #0xc40
   14580:	mov	x0, x19
   14584:	stp	x23, x4, [x2]
   14588:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1458c:	add	x1, x1, #0xcd0
   14590:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14594:	mov	x0, x20
   14598:	mov	x1, #0x10                  	// #16
   1459c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   145a0:	mov	x2, x0
   145a4:	add	x4, x21, #0xc8
   145a8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   145ac:	add	x3, x3, #0xce8
   145b0:	mov	x0, x19
   145b4:	stp	x22, x4, [x2]
   145b8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   145bc:	add	x1, x1, #0xd20
   145c0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   145c4:	mov	x0, x20
   145c8:	mov	x1, #0x10                  	// #16
   145cc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   145d0:	mov	x2, x0
   145d4:	add	x4, x21, #0xc9
   145d8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   145dc:	add	x3, x3, #0xd40
   145e0:	mov	x0, x19
   145e4:	stp	x22, x4, [x2]
   145e8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   145ec:	add	x1, x1, #0xd80
   145f0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   145f4:	mov	x0, x20
   145f8:	mov	x1, #0x10                  	// #16
   145fc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14600:	mov	x2, x0
   14604:	add	x4, x21, #0xca
   14608:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1460c:	add	x3, x3, #0xd98
   14610:	mov	x0, x19
   14614:	stp	x22, x4, [x2]
   14618:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1461c:	add	x1, x1, #0xdf0
   14620:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14624:	mov	x0, x20
   14628:	mov	x1, #0x10                  	// #16
   1462c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14630:	mov	x2, x0
   14634:	add	x4, x21, #0xcb
   14638:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1463c:	add	x3, x3, #0xe08
   14640:	mov	x0, x19
   14644:	stp	x22, x4, [x2]
   14648:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1464c:	add	x1, x1, #0xe60
   14650:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14654:	mov	x0, x20
   14658:	mov	x1, #0x10                  	// #16
   1465c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14660:	mov	x2, x0
   14664:	add	x4, x21, #0xcc
   14668:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1466c:	add	x3, x3, #0xe78
   14670:	mov	x0, x19
   14674:	stp	x22, x4, [x2]
   14678:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1467c:	add	x1, x1, #0xec8
   14680:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14684:	mov	x0, x20
   14688:	mov	x1, #0x10                  	// #16
   1468c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14690:	mov	x2, x0
   14694:	add	x4, x21, #0xcd
   14698:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1469c:	add	x3, x3, #0xee0
   146a0:	mov	x0, x19
   146a4:	stp	x22, x4, [x2]
   146a8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   146ac:	add	x1, x1, #0xf28
   146b0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   146b4:	mov	x0, x20
   146b8:	mov	x1, #0x10                  	// #16
   146bc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   146c0:	mov	x2, x0
   146c4:	add	x4, x21, #0xce
   146c8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   146cc:	add	x3, x3, #0xf40
   146d0:	mov	x0, x19
   146d4:	stp	x22, x4, [x2]
   146d8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   146dc:	add	x1, x1, #0xf98
   146e0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   146e4:	mov	x0, x20
   146e8:	mov	x1, #0x10                  	// #16
   146ec:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   146f0:	mov	x2, x0
   146f4:	add	x4, x21, #0xcf
   146f8:	adrp	x3, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   146fc:	add	x3, x3, #0xfb0
   14700:	mov	x0, x19
   14704:	stp	x22, x4, [x2]
   14708:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   1470c:	add	x1, x1, #0xff8
   14710:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14714:	mov	x0, x20
   14718:	mov	x1, #0x10                  	// #16
   1471c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14720:	mov	x2, x0
   14724:	add	x4, x21, #0xd0
   14728:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1472c:	add	x3, x3, #0x10
   14730:	mov	x0, x19
   14734:	stp	x22, x4, [x2]
   14738:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1473c:	add	x1, x1, #0x70
   14740:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14744:	mov	x0, x20
   14748:	mov	x1, #0x10                  	// #16
   1474c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14750:	mov	x2, x0
   14754:	add	x4, x21, #0xd1
   14758:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1475c:	add	x3, x3, #0x88
   14760:	mov	x0, x19
   14764:	stp	x22, x4, [x2]
   14768:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1476c:	add	x1, x1, #0xd0
   14770:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14774:	mov	x0, x20
   14778:	mov	x1, #0x10                  	// #16
   1477c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14780:	mov	x2, x0
   14784:	add	x4, x21, #0xd2
   14788:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1478c:	add	x3, x3, #0xe8
   14790:	mov	x0, x19
   14794:	stp	x22, x4, [x2]
   14798:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1479c:	add	x1, x1, #0x140
   147a0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   147a4:	mov	x0, x20
   147a8:	mov	x1, #0x10                  	// #16
   147ac:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   147b0:	mov	x2, x0
   147b4:	add	x4, x21, #0xd3
   147b8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   147bc:	add	x3, x3, #0x150
   147c0:	mov	x0, x19
   147c4:	stp	x22, x4, [x2]
   147c8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   147cc:	add	x1, x1, #0x190
   147d0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   147d4:	mov	x0, x20
   147d8:	mov	x1, #0x10                  	// #16
   147dc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   147e0:	mov	x2, x0
   147e4:	add	x4, x21, #0xd4
   147e8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   147ec:	add	x3, x3, #0x1a8
   147f0:	mov	x0, x19
   147f4:	stp	x22, x4, [x2]
   147f8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   147fc:	add	x1, x1, #0x200
   14800:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14804:	mov	x0, x20
   14808:	mov	x1, #0x10                  	// #16
   1480c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14810:	mov	x2, x0
   14814:	add	x4, x21, #0xd5
   14818:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1481c:	add	x3, x3, #0x218
   14820:	mov	x0, x19
   14824:	stp	x22, x4, [x2]
   14828:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1482c:	add	x1, x1, #0x260
   14830:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14834:	mov	x0, x20
   14838:	mov	x1, #0x10                  	// #16
   1483c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14840:	mov	x2, x0
   14844:	add	x4, x21, #0xd6
   14848:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1484c:	add	x3, x3, #0x270
   14850:	mov	x0, x19
   14854:	stp	x22, x4, [x2]
   14858:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1485c:	add	x1, x1, #0x2b8
   14860:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14864:	mov	x0, x20
   14868:	mov	x1, #0x10                  	// #16
   1486c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14870:	mov	x2, x0
   14874:	add	x4, x21, #0xd7
   14878:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1487c:	add	x3, x3, #0x2c8
   14880:	mov	x0, x19
   14884:	stp	x22, x4, [x2]
   14888:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1488c:	add	x1, x1, #0x318
   14890:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14894:	mov	x0, x20
   14898:	mov	x1, #0x10                  	// #16
   1489c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   148a0:	mov	x2, x0
   148a4:	add	x1, x21, #0xd8
   148a8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   148ac:	add	x3, x3, #0x330
   148b0:	stp	x25, x1, [x0]
   148b4:	mov	x0, x19
   148b8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   148bc:	add	x1, x1, #0x370
   148c0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   148c4:	mov	x0, x20
   148c8:	mov	x1, #0x10                  	// #16
   148cc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   148d0:	mov	x2, x0
   148d4:	add	x4, x21, #0xdc
   148d8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   148dc:	add	x3, x3, #0x380
   148e0:	mov	x0, x19
   148e4:	stp	x22, x4, [x2]
   148e8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   148ec:	add	x1, x1, #0x3d8
   148f0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   148f4:	mov	x0, x20
   148f8:	mov	x1, #0x10                  	// #16
   148fc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14900:	mov	x2, x0
   14904:	add	x4, x21, #0xdd
   14908:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1490c:	add	x3, x3, #0x3e8
   14910:	mov	x0, x19
   14914:	stp	x22, x4, [x2]
   14918:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1491c:	add	x1, x1, #0x450
   14920:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14924:	mov	x0, x20
   14928:	mov	x1, #0x10                  	// #16
   1492c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14930:	mov	x2, x0
   14934:	add	x4, x21, #0xde
   14938:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1493c:	add	x3, x3, #0x468
   14940:	mov	x0, x19
   14944:	stp	x22, x4, [x2]
   14948:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1494c:	add	x1, x1, #0x498
   14950:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14954:	mov	x0, x20
   14958:	mov	x1, #0x10                  	// #16
   1495c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14960:	mov	x2, x0
   14964:	add	x4, x21, #0xdf
   14968:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1496c:	add	x3, x3, #0x4a8
   14970:	mov	x0, x19
   14974:	stp	x22, x4, [x2]
   14978:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1497c:	add	x1, x1, #0x4c8
   14980:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14984:	mov	x0, x20
   14988:	mov	x1, #0x10                  	// #16
   1498c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14990:	mov	x2, x0
   14994:	add	x1, x21, #0xe0
   14998:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1499c:	add	x3, x3, #0x4d8
   149a0:	stp	x23, x1, [x0]
   149a4:	mov	x0, x19
   149a8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   149ac:	add	x1, x1, #0x4f0
   149b0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   149b4:	mov	x0, x20
   149b8:	mov	x1, #0x10                  	// #16
   149bc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   149c0:	mov	x2, x0
   149c4:	add	x4, x21, #0xe8
   149c8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   149cc:	add	x3, x3, #0x500
   149d0:	mov	x0, x19
   149d4:	stp	x22, x4, [x2]
   149d8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   149dc:	add	x1, x1, #0x548
   149e0:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   149e4:	mov	x0, x20
   149e8:	mov	x1, #0x10                  	// #16
   149ec:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   149f0:	mov	x2, x0
   149f4:	add	x4, x21, #0xe9
   149f8:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   149fc:	add	x3, x3, #0x560
   14a00:	mov	x0, x19
   14a04:	stp	x22, x4, [x2]
   14a08:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14a0c:	add	x1, x1, #0x5c0
   14a10:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14a14:	add	x21, x21, #0xea
   14a18:	mov	x0, x20
   14a1c:	mov	x1, #0x10                  	// #16
   14a20:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14a24:	mov	x2, x0
   14a28:	adrp	x3, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14a2c:	add	x3, x3, #0x5d0
   14a30:	mov	x0, x19
   14a34:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14a38:	stp	x22, x21, [x2]
   14a3c:	add	x1, x1, #0x628
   14a40:	adrp	x21, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   14a44:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14a48:	add	x21, x21, #0xe18
   14a4c:	mov	x0, x20
   14a50:	mov	x1, #0x18                  	// #24
   14a54:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14a58:	mov	x2, x0
   14a5c:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14a60:	add	x3, x3, #0x310
   14a64:	mov	x0, x19
   14a68:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14a6c:	stp	x21, x19, [x2]
   14a70:	add	x1, x1, #0x338
   14a74:	strb	wzr, [x2, #16]
   14a78:	bl	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14a7c:	mov	x0, x20
   14a80:	mov	x1, #0x18                  	// #24
   14a84:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14a88:	mov	x2, x0
   14a8c:	mov	w4, #0x1                   	// #1
   14a90:	mov	x0, x19
   14a94:	ldp	x23, x24, [sp, #32]
   14a98:	strb	w4, [x2, #16]
   14a9c:	ldp	x25, x30, [sp, #48]
   14aa0:	stp	x21, x19, [x2]
   14aa4:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14aa8:	ldp	x21, x22, [sp, #16]
   14aac:	add	x3, x3, #0x340
   14ab0:	ldp	x19, x20, [sp], #64
   14ab4:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14ab8:	add	x1, x1, #0x378
   14abc:	b	15500 <__sanitizer_set_report_fd@@Base+0x1c30>
   14ac0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   14ac4:	ldrb	w4, [x0, #223]
   14ac8:	ldr	w3, [x0, #52]
   14acc:	ldr	x2, [x1, #3896]
   14ad0:	ldrb	w1, [x0, #161]
   14ad4:	orr	w1, w1, w4
   14ad8:	str	w3, [x2]
   14adc:	strb	w1, [x0, #161]
   14ae0:	ret
   14ae4:	nop
   14ae8:	stp	x19, x20, [sp, #-48]!
   14aec:	mov	x20, x0
   14af0:	mov	w2, #0xa                   	// #10
   14af4:	mov	x0, x1
   14af8:	mov	x19, x1
   14afc:	add	x1, sp, #0x28
   14b00:	str	x30, [sp, #16]
   14b04:	bl	16e80 <__sanitizer_set_report_fd@@Base+0x35b0>
   14b08:	ldr	x2, [x20, #8]
   14b0c:	ldr	x1, [sp, #40]
   14b10:	str	x0, [x2]
   14b14:	ldrb	w0, [x1]
   14b18:	cmp	w0, #0x0
   14b1c:	cset	w20, eq  // eq = none
   14b20:	cbnz	w0, 14b34 <__sanitizer_set_report_fd@@Base+0x1264>
   14b24:	mov	w0, w20
   14b28:	ldr	x30, [sp, #16]
   14b2c:	ldp	x19, x20, [sp], #48
   14b30:	ret
   14b34:	mov	x1, x19
   14b38:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14b3c:	add	x0, x0, #0x1e8
   14b40:	bl	1ccf0 <OnPrint@@Base+0x310>
   14b44:	mov	w0, w20
   14b48:	ldr	x30, [sp, #16]
   14b4c:	ldp	x19, x20, [sp], #48
   14b50:	ret
   14b54:	nop
   14b58:	stp	x19, x20, [sp, #-48]!
   14b5c:	mov	x20, x0
   14b60:	mov	w2, #0xa                   	// #10
   14b64:	mov	x0, x1
   14b68:	mov	x19, x1
   14b6c:	add	x1, sp, #0x28
   14b70:	str	x30, [sp, #16]
   14b74:	bl	16e80 <__sanitizer_set_report_fd@@Base+0x35b0>
   14b78:	ldr	x2, [x20, #8]
   14b7c:	ldr	x1, [sp, #40]
   14b80:	str	w0, [x2]
   14b84:	ldrb	w0, [x1]
   14b88:	cmp	w0, #0x0
   14b8c:	cset	w20, eq  // eq = none
   14b90:	cbnz	w0, 14ba4 <__sanitizer_set_report_fd@@Base+0x12d4>
   14b94:	mov	w0, w20
   14b98:	ldr	x30, [sp, #16]
   14b9c:	ldp	x19, x20, [sp], #48
   14ba0:	ret
   14ba4:	mov	x1, x19
   14ba8:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14bac:	add	x0, x0, #0x218
   14bb0:	bl	1ccf0 <OnPrint@@Base+0x310>
   14bb4:	mov	w0, w20
   14bb8:	ldr	x30, [sp, #16]
   14bbc:	ldp	x19, x20, [sp], #48
   14bc0:	ret
   14bc4:	nop
   14bc8:	stp	x19, x20, [sp, #-32]!
   14bcc:	mov	x19, x1
   14bd0:	mov	x20, x0
   14bd4:	mov	x0, x1
   14bd8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   14bdc:	add	x1, x1, #0xbc0
   14be0:	str	x30, [sp, #16]
   14be4:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14be8:	cbnz	w0, 14c08 <__sanitizer_set_report_fd@@Base+0x1338>
   14bec:	mov	w1, #0x0                   	// #0
   14bf0:	ldr	x2, [x20, #8]
   14bf4:	mov	w0, #0x1                   	// #1
   14bf8:	ldr	x30, [sp, #16]
   14bfc:	str	w1, [x2]
   14c00:	ldp	x19, x20, [sp], #32
   14c04:	ret
   14c08:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   14c0c:	mov	x0, x19
   14c10:	add	x1, x1, #0xbc8
   14c14:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c18:	cbz	w0, 14bec <__sanitizer_set_report_fd@@Base+0x131c>
   14c1c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   14c20:	mov	x0, x19
   14c24:	add	x1, x1, #0xbd0
   14c28:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c2c:	cbz	w0, 14bec <__sanitizer_set_report_fd@@Base+0x131c>
   14c30:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
   14c34:	mov	x0, x19
   14c38:	add	x1, x1, #0x218
   14c3c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c40:	cbz	w0, 14c58 <__sanitizer_set_report_fd@@Base+0x1388>
   14c44:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   14c48:	mov	x0, x19
   14c4c:	add	x1, x1, #0xbd8
   14c50:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c54:	cbnz	w0, 14c60 <__sanitizer_set_report_fd@@Base+0x1390>
   14c58:	mov	w1, #0x1                   	// #1
   14c5c:	b	14bf0 <__sanitizer_set_report_fd@@Base+0x1320>
   14c60:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   14c64:	mov	x0, x19
   14c68:	add	x1, x1, #0xbe0
   14c6c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c70:	cbz	w0, 14c58 <__sanitizer_set_report_fd@@Base+0x1388>
   14c74:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
   14c78:	mov	x0, x19
   14c7c:	add	x1, x1, #0x118
   14c80:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c84:	cbz	w0, 14cbc <__sanitizer_set_report_fd@@Base+0x13ec>
   14c88:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14c8c:	mov	x0, x19
   14c90:	add	x1, x1, #0x248
   14c94:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   14c98:	cbz	w0, 14cbc <__sanitizer_set_report_fd@@Base+0x13ec>
   14c9c:	mov	x1, x19
   14ca0:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   14ca4:	add	x0, x0, #0x258
   14ca8:	bl	1ccf0 <OnPrint@@Base+0x310>
   14cac:	mov	w0, #0x0                   	// #0
   14cb0:	ldr	x30, [sp, #16]
   14cb4:	ldp	x19, x20, [sp], #32
   14cb8:	ret
   14cbc:	ldr	x1, [x20, #8]
   14cc0:	mov	w2, #0x2                   	// #2
   14cc4:	mov	w0, #0x1                   	// #1
   14cc8:	ldr	x30, [sp, #16]
   14ccc:	str	w2, [x1]
   14cd0:	ldp	x19, x20, [sp], #32
   14cd4:	ret
   14cd8:	stp	x19, x20, [sp, #-32]!
   14cdc:	mov	x19, x1
   14ce0:	mov	x20, x0
   14ce4:	mov	x0, x1
   14ce8:	mov	w1, #0x25                  	// #37
   14cec:	str	x30, [sp, #24]
   14cf0:	bl	15e58 <__sanitizer_set_report_fd@@Base+0x2588>
   14cf4:	cbz	x0, 14d58 <__sanitizer_set_report_fd@@Base+0x1488>
   14cf8:	mov	w2, #0x0                   	// #0
   14cfc:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14d00:	mov	x0, #0x1000                	// #4096
   14d04:	add	x1, x1, #0x640
   14d08:	str	x21, [sp, #16]
   14d0c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   14d10:	mov	x21, x0
   14d14:	mov	x2, #0x1000                	// #4096
   14d18:	mov	x0, x19
   14d1c:	mov	x1, x21
   14d20:	bl	139f8 <__sanitizer_set_report_fd@@Base+0x128>
   14d24:	ldrb	w2, [x20, #16]
   14d28:	mov	x1, x21
   14d2c:	ldr	x0, [x20, #8]
   14d30:	bl	15338 <__sanitizer_set_report_fd@@Base+0x1a68>
   14d34:	mov	w19, w0
   14d38:	mov	x1, #0x1000                	// #4096
   14d3c:	mov	x0, x21
   14d40:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   14d44:	mov	w0, w19
   14d48:	ldr	x21, [sp, #16]
   14d4c:	ldr	x30, [sp, #24]
   14d50:	ldp	x19, x20, [sp], #32
   14d54:	ret
   14d58:	ldrb	w2, [x20, #16]
   14d5c:	mov	x1, x19
   14d60:	ldr	x0, [x20, #8]
   14d64:	ldr	x30, [sp, #24]
   14d68:	ldp	x19, x20, [sp], #32
   14d6c:	b	15338 <__sanitizer_set_report_fd@@Base+0x1a68>
   14d70:	stp	x19, x20, [sp, #-48]!
   14d74:	stp	x21, x22, [sp, #16]
   14d78:	adrp	x21, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14d7c:	add	x19, x21, #0xd40
   14d80:	str	x30, [sp, #32]
   14d84:	ldr	w1, [x19, #160]
   14d88:	cbnz	w1, 14d9c <__sanitizer_set_report_fd@@Base+0x14cc>
   14d8c:	ldp	x21, x22, [sp, #16]
   14d90:	ldr	x30, [sp, #32]
   14d94:	ldp	x19, x20, [sp], #48
   14d98:	ret
   14d9c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14da0:	add	x0, x0, #0x680
   14da4:	bl	1ccf0 <OnPrint@@Base+0x310>
   14da8:	ldr	w0, [x19, #160]
   14dac:	cmp	w0, #0x0
   14db0:	b.le	14ddc <__sanitizer_set_report_fd@@Base+0x150c>
   14db4:	adrp	x22, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14db8:	add	x22, x22, #0x6b0
   14dbc:	mov	x20, #0x0                   	// #0
   14dc0:	ldr	x1, [x19, x20, lsl #3]
   14dc4:	mov	x0, x22
   14dc8:	add	x20, x20, #0x1
   14dcc:	bl	1ccf0 <OnPrint@@Base+0x310>
   14dd0:	ldr	w0, [x19, #160]
   14dd4:	cmp	w0, w20
   14dd8:	b.gt	14dc0 <__sanitizer_set_report_fd@@Base+0x14f0>
   14ddc:	add	x21, x21, #0xd40
   14de0:	ldr	x30, [sp, #32]
   14de4:	str	wzr, [x21, #160]
   14de8:	ldp	x21, x22, [sp, #16]
   14dec:	ldp	x19, x20, [sp], #48
   14df0:	ret
   14df4:	nop
   14df8:	stp	x19, x20, [sp, #-32]!
   14dfc:	stp	x21, x30, [sp, #16]
   14e00:	mov	x21, x1
   14e04:	mov	x0, x21
   14e08:	mov	x1, x2
   14e0c:	bl	16dc8 <__sanitizer_set_report_fd@@Base+0x34f8>
   14e10:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   14e14:	mov	x19, x0
   14e18:	add	x0, x1, #0xd40
   14e1c:	add	x1, x19, #0x1
   14e20:	add	x0, x0, #0xa8
   14e24:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   14e28:	mov	x20, x0
   14e2c:	mov	x1, x21
   14e30:	mov	x2, x19
   14e34:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   14e38:	mov	x0, x20
   14e3c:	strb	wzr, [x20, x19]
   14e40:	ldp	x21, x30, [sp, #16]
   14e44:	ldp	x19, x20, [sp], #32
   14e48:	ret
   14e4c:	nop
   14e50:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   14e54:	stp	x19, x20, [sp, #-48]!
   14e58:	ldr	x1, [x1, #4024]
   14e5c:	stp	x21, x22, [sp, #16]
   14e60:	mov	x21, x0
   14e64:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14e68:	add	x0, x0, #0x6b8
   14e6c:	ldr	x1, [x1]
   14e70:	str	x30, [sp, #32]
   14e74:	bl	1ccf0 <OnPrint@@Base+0x310>
   14e78:	ldr	w0, [x21, #8]
   14e7c:	cmp	w0, #0x0
   14e80:	b.le	14ec4 <__sanitizer_set_report_fd@@Base+0x15f4>
   14e84:	adrp	x22, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14e88:	add	x22, x22, #0x6d8
   14e8c:	mov	x19, #0x0                   	// #0
   14e90:	mov	w20, #0x0                   	// #0
   14e94:	nop
   14e98:	ldr	x1, [x21]
   14e9c:	mov	x0, x22
   14ea0:	add	w20, w20, #0x1
   14ea4:	add	x2, x1, x19
   14ea8:	ldr	x1, [x1, x19]
   14eac:	add	x19, x19, #0x18
   14eb0:	ldr	x2, [x2, #8]
   14eb4:	bl	1ccf0 <OnPrint@@Base+0x310>
   14eb8:	ldr	w1, [x21, #8]
   14ebc:	cmp	w1, w20
   14ec0:	b.gt	14e98 <__sanitizer_set_report_fd@@Base+0x15c8>
   14ec4:	ldp	x21, x22, [sp, #16]
   14ec8:	ldr	x30, [sp, #32]
   14ecc:	ldp	x19, x20, [sp], #48
   14ed0:	ret
   14ed4:	nop
   14ed8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14edc:	add	x0, x0, #0x6e8
   14ee0:	str	x30, [sp, #-16]!
   14ee4:	bl	1ccf0 <OnPrint@@Base+0x310>
   14ee8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   14eec:	nop
   14ef0:	and	w1, w1, #0xff
   14ef4:	cmp	w1, #0x20
   14ef8:	cset	w0, eq  // eq = none
   14efc:	cmp	w1, #0x2c
   14f00:	csinc	w0, w0, wzr, ne  // ne = any
   14f04:	cbnz	w0, 14f1c <__sanitizer_set_report_fd@@Base+0x164c>
   14f08:	cmp	w1, #0x3a
   14f0c:	cset	w0, eq  // eq = none
   14f10:	cmp	w1, #0xa
   14f14:	csinc	w0, w0, wzr, ne  // ne = any
   14f18:	cbz	w0, 14f20 <__sanitizer_set_report_fd@@Base+0x1650>
   14f1c:	ret
   14f20:	and	w1, w1, #0xfffffffb
   14f24:	cmp	w1, #0x9
   14f28:	cset	w0, eq  // eq = none
   14f2c:	ret
   14f30:	ldp	x4, x2, [x0, #16]
   14f34:	mov	w5, #0x2c                  	// #44
   14f38:	ldrb	w1, [x4, x2]
   14f3c:	add	x2, x2, #0x1
   14f40:	cmp	w1, #0x20
   14f44:	ccmp	w1, w5, #0x4, ne  // ne = any
   14f48:	b.eq	14f6c <__sanitizer_set_report_fd@@Base+0x169c>  // b.none
   14f4c:	sub	w3, w1, #0x9
   14f50:	cmp	w1, #0x3a
   14f54:	and	w3, w3, #0xff
   14f58:	b.eq	14f6c <__sanitizer_set_report_fd@@Base+0x169c>  // b.none
   14f5c:	cmp	w3, #0x1
   14f60:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   14f64:	b.eq	14f6c <__sanitizer_set_report_fd@@Base+0x169c>  // b.none
   14f68:	ret
   14f6c:	str	x2, [x0, #24]
   14f70:	b	14f38 <__sanitizer_set_report_fd@@Base+0x1668>
   14f74:	nop
   14f78:	stp	x19, x20, [sp, #-64]!
   14f7c:	mov	x19, x0
   14f80:	ldp	x4, x1, [x0, #16]
   14f84:	stp	x21, x22, [sp, #16]
   14f88:	stp	x23, x24, [sp, #32]
   14f8c:	str	x30, [sp, #48]
   14f90:	add	x21, x4, x1
   14f94:	ldrb	w2, [x4, x1]
   14f98:	cmp	w2, #0x3d
   14f9c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   14fa0:	b.eq	15004 <__sanitizer_set_report_fd@@Base+0x1734>  // b.none
   14fa4:	add	x0, x1, #0x1
   14fa8:	mov	w5, #0x2c                  	// #44
   14fac:	b	14fe8 <__sanitizer_set_report_fd@@Base+0x1718>
   14fb0:	cmp	w2, #0x3a
   14fb4:	b.eq	14ff4 <__sanitizer_set_report_fd@@Base+0x1724>  // b.none
   14fb8:	sub	w3, w2, #0x9
   14fbc:	and	w3, w3, #0xff
   14fc0:	cmp	w3, #0x1
   14fc4:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   14fc8:	b.eq	14ff4 <__sanitizer_set_report_fd@@Base+0x1724>  // b.none
   14fcc:	str	x0, [x19, #24]
   14fd0:	add	x3, x0, #0x1
   14fd4:	ldrb	w2, [x4, x0]
   14fd8:	cmp	w2, #0x3d
   14fdc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   14fe0:	b.eq	15008 <__sanitizer_set_report_fd@@Base+0x1738>  // b.none
   14fe4:	mov	x0, x3
   14fe8:	cmp	w2, #0x20
   14fec:	ccmp	w2, w5, #0x4, ne  // ne = any
   14ff0:	b.ne	14fb0 <__sanitizer_set_report_fd@@Base+0x16e0>  // b.any
   14ff4:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   14ff8:	mov	x0, x19
   14ffc:	add	x1, x1, #0x6f8
   15000:	bl	14ed8 <__sanitizer_set_report_fd@@Base+0x1608>
   15004:	mov	x0, x1
   15008:	cmp	w2, #0x3d
   1500c:	b.ne	14ff4 <__sanitizer_set_report_fd@@Base+0x1724>  // b.any
   15010:	sub	x1, x0, x1
   15014:	mov	x0, x21
   15018:	bl	16dc8 <__sanitizer_set_report_fd@@Base+0x34f8>
   1501c:	adrp	x23, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15020:	mov	x20, x0
   15024:	add	x0, x23, #0xd40
   15028:	add	x1, x20, #0x1
   1502c:	add	x0, x0, #0xa8
   15030:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   15034:	mov	x22, x0
   15038:	mov	x1, x21
   1503c:	mov	x2, x20
   15040:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   15044:	strb	wzr, [x22, x20]
   15048:	mov	w0, #0x22                  	// #34
   1504c:	ldp	x4, x3, [x19, #16]
   15050:	add	x5, x3, #0x1
   15054:	str	x5, [x19, #24]
   15058:	add	x21, x4, x5
   1505c:	ldrb	w2, [x4, x5]
   15060:	cmp	w2, #0x27
   15064:	ccmp	w2, w0, #0x4, ne  // ne = any
   15068:	b.eq	150e8 <__sanitizer_set_report_fd@@Base+0x1818>  // b.none
   1506c:	cbz	w2, 15268 <__sanitizer_set_report_fd@@Base+0x1998>
   15070:	mov	x1, x5
   15074:	mov	w6, #0x2c                  	// #44
   15078:	cmp	w2, #0x20
   1507c:	ccmp	w2, w6, #0x4, ne  // ne = any
   15080:	b.eq	150b0 <__sanitizer_set_report_fd@@Base+0x17e0>  // b.none
   15084:	cmp	w2, #0x3a
   15088:	b.eq	150b0 <__sanitizer_set_report_fd@@Base+0x17e0>  // b.none
   1508c:	sub	w0, w2, #0x9
   15090:	and	w0, w0, #0xff
   15094:	cmp	w0, #0x1
   15098:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   1509c:	b.ne	151d8 <__sanitizer_set_report_fd@@Base+0x1908>  // b.any
   150a0:	cmp	w0, #0x1
   150a4:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   150a8:	b.ne	15258 <__sanitizer_set_report_fd@@Base+0x1988>  // b.any
   150ac:	nop
   150b0:	sub	x1, x1, x5
   150b4:	mov	x0, x21
   150b8:	bl	16dc8 <__sanitizer_set_report_fd@@Base+0x34f8>
   150bc:	mov	x20, x0
   150c0:	add	x0, x23, #0xd40
   150c4:	add	x1, x20, #0x1
   150c8:	add	x0, x0, #0xa8
   150cc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   150d0:	mov	x24, x0
   150d4:	mov	x1, x21
   150d8:	mov	x2, x20
   150dc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   150e0:	strb	wzr, [x24, x20]
   150e4:	b	15160 <__sanitizer_set_report_fd@@Base+0x1890>
   150e8:	add	x3, x3, #0x2
   150ec:	str	x3, [x19, #24]
   150f0:	add	x21, x4, x3
   150f4:	ldrb	w1, [x4, x5]
   150f8:	ldrb	w0, [x4, x3]
   150fc:	cbnz	w0, 15114 <__sanitizer_set_report_fd@@Base+0x1844>
   15100:	b	15224 <__sanitizer_set_report_fd@@Base+0x1954>
   15104:	add	x3, x3, #0x1
   15108:	str	x3, [x19, #24]
   1510c:	ldrb	w0, [x4, x3]
   15110:	cbz	w0, 15224 <__sanitizer_set_report_fd@@Base+0x1954>
   15114:	cmp	w0, w1
   15118:	b.ne	15104 <__sanitizer_set_report_fd@@Base+0x1834>  // b.any
   1511c:	mvn	x1, x5
   15120:	mov	x0, x21
   15124:	add	x1, x1, x3
   15128:	bl	16dc8 <__sanitizer_set_report_fd@@Base+0x34f8>
   1512c:	add	x1, x23, #0xd40
   15130:	mov	x20, x0
   15134:	add	x0, x1, #0xa8
   15138:	add	x1, x20, #0x1
   1513c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   15140:	mov	x24, x0
   15144:	mov	x1, x21
   15148:	mov	x2, x20
   1514c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   15150:	strb	wzr, [x24, x20]
   15154:	ldr	x0, [x19, #24]
   15158:	add	x0, x0, #0x1
   1515c:	str	x0, [x19, #24]
   15160:	ldr	w0, [x19, #8]
   15164:	mov	x20, #0x0                   	// #0
   15168:	mov	w21, #0x0                   	// #0
   1516c:	cmp	w0, #0x0
   15170:	b.gt	1518c <__sanitizer_set_report_fd@@Base+0x18bc>
   15174:	b	151f0 <__sanitizer_set_report_fd@@Base+0x1920>
   15178:	ldr	w1, [x19, #8]
   1517c:	add	w21, w21, #0x1
   15180:	add	x20, x20, #0x18
   15184:	cmp	w1, w21
   15188:	b.le	151f0 <__sanitizer_set_report_fd@@Base+0x1920>
   1518c:	ldr	x1, [x19]
   15190:	mov	x0, x22
   15194:	ldr	x1, [x1, x20]
   15198:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1519c:	cbnz	w0, 15178 <__sanitizer_set_report_fd@@Base+0x18a8>
   151a0:	ldr	x0, [x19]
   151a4:	mov	x1, x24
   151a8:	add	x20, x0, x20
   151ac:	ldr	x0, [x20, #16]
   151b0:	ldr	x2, [x0]
   151b4:	ldr	x2, [x2]
   151b8:	blr	x2
   151bc:	tst	w0, #0xff
   151c0:	b.eq	15270 <__sanitizer_set_report_fd@@Base+0x19a0>  // b.none
   151c4:	ldp	x21, x22, [sp, #16]
   151c8:	ldp	x23, x24, [sp, #32]
   151cc:	ldr	x30, [sp, #48]
   151d0:	ldp	x19, x20, [sp], #64
   151d4:	ret
   151d8:	add	x0, x1, #0x1
   151dc:	str	x0, [x19, #24]
   151e0:	ldrb	w2, [x4, x0]
   151e4:	cbz	w2, 15234 <__sanitizer_set_report_fd@@Base+0x1964>
   151e8:	mov	x1, x0
   151ec:	b	15078 <__sanitizer_set_report_fd@@Base+0x17a8>
   151f0:	add	x23, x23, #0xd40
   151f4:	ldr	w0, [x23, #160]
   151f8:	sxtw	x3, w0
   151fc:	cmp	x3, #0x13
   15200:	b.hi	1523c <__sanitizer_set_report_fd@@Base+0x196c>  // b.pmore
   15204:	add	w0, w0, #0x1
   15208:	str	x22, [x23, x3, lsl #3]
   1520c:	str	w0, [x23, #160]
   15210:	ldp	x21, x22, [sp, #16]
   15214:	ldp	x23, x24, [sp, #32]
   15218:	ldr	x30, [sp, #48]
   1521c:	ldp	x19, x20, [sp], #64
   15220:	ret
   15224:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   15228:	mov	x0, x19
   1522c:	add	x1, x1, #0x7b8
   15230:	bl	14ed8 <__sanitizer_set_report_fd@@Base+0x1608>
   15234:	sub	x1, x1, x3
   15238:	b	150b4 <__sanitizer_set_report_fd@@Base+0x17e4>
   1523c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   15240:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   15244:	add	x2, x2, #0x728
   15248:	add	x0, x0, #0x758
   1524c:	mov	x4, #0x14                  	// #20
   15250:	mov	w1, #0x1e                  	// #30
   15254:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15258:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1525c:	mov	x0, x19
   15260:	add	x1, x1, #0x708
   15264:	bl	14ed8 <__sanitizer_set_report_fd@@Base+0x1608>
   15268:	mov	x1, #0x0                   	// #0
   1526c:	b	150b4 <__sanitizer_set_report_fd@@Base+0x17e4>
   15270:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   15274:	mov	x0, x19
   15278:	add	x1, x1, #0x7a0
   1527c:	bl	14ed8 <__sanitizer_set_report_fd@@Base+0x1608>
   15280:	stp	x19, x20, [sp, #-32]!
   15284:	mov	x19, x0
   15288:	mov	w20, #0x2c                  	// #44
   1528c:	str	x30, [sp, #16]
   15290:	ldp	x0, x3, [x19, #16]
   15294:	nop
   15298:	ldrb	w1, [x0, x3]
   1529c:	add	x3, x3, #0x1
   152a0:	cmp	w1, #0x20
   152a4:	ccmp	w1, w20, #0x4, ne  // ne = any
   152a8:	b.eq	152d8 <__sanitizer_set_report_fd@@Base+0x1a08>  // b.none
   152ac:	sub	w2, w1, #0x9
   152b0:	cmp	w1, #0x3a
   152b4:	and	w2, w2, #0xff
   152b8:	b.eq	152d8 <__sanitizer_set_report_fd@@Base+0x1a08>  // b.none
   152bc:	cmp	w2, #0x1
   152c0:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   152c4:	b.eq	152d8 <__sanitizer_set_report_fd@@Base+0x1a08>  // b.none
   152c8:	cbz	w1, 152e0 <__sanitizer_set_report_fd@@Base+0x1a10>
   152cc:	mov	x0, x19
   152d0:	bl	14f78 <__sanitizer_set_report_fd@@Base+0x16a8>
   152d4:	b	15290 <__sanitizer_set_report_fd@@Base+0x19c0>
   152d8:	str	x3, [x19, #24]
   152dc:	b	15298 <__sanitizer_set_report_fd@@Base+0x19c8>
   152e0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   152e4:	ldr	x0, [x0, #4056]
   152e8:	ldr	w1, [x0, #36]
   152ec:	cmp	w1, #0x0
   152f0:	b.gt	152fc <__sanitizer_set_report_fd@@Base+0x1a2c>
   152f4:	mov	w1, #0x1                   	// #1
   152f8:	str	w1, [x0, #36]
   152fc:	ldr	x30, [sp, #16]
   15300:	ldp	x19, x20, [sp], #32
   15304:	ret
   15308:	cbz	x1, 15334 <__sanitizer_set_report_fd@@Base+0x1a64>
   1530c:	stp	x19, x20, [sp, #-32]!
   15310:	mov	x19, x0
   15314:	stp	x21, x30, [sp, #16]
   15318:	ldp	x21, x20, [x0, #16]
   1531c:	stp	x1, xzr, [x0, #16]
   15320:	bl	15280 <__sanitizer_set_report_fd@@Base+0x19b0>
   15324:	stp	x21, x20, [x19, #16]
   15328:	ldp	x21, x30, [sp, #16]
   1532c:	ldp	x19, x20, [sp], #32
   15330:	ret
   15334:	ret
   15338:	stp	x19, x20, [sp, #-80]!
   1533c:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   15340:	mov	x19, x0
   15344:	ldr	x20, [x20, #4016]
   15348:	stp	x21, x22, [sp, #16]
   1534c:	mov	x21, x1
   15350:	and	w22, w2, #0xff
   15354:	ldr	x0, [x20]
   15358:	str	x30, [sp, #32]
   1535c:	cbz	x0, 153e4 <__sanitizer_set_report_fd@@Base+0x1b14>
   15360:	cmp	x0, #0x8, lsl #12
   15364:	add	x5, sp, #0x34
   15368:	add	x3, sp, #0x48
   1536c:	add	x2, sp, #0x40
   15370:	add	x1, sp, #0x38
   15374:	mov	x4, #0x8000                	// #32768
   15378:	csel	x4, x0, x4, cs  // cs = hs, nlast
   1537c:	mov	x0, x21
   15380:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   15384:	ands	w20, w0, #0xff
   15388:	b.ne	153a4 <__sanitizer_set_report_fd@@Base+0x1ad4>  // b.any
   1538c:	cbz	w22, 153f0 <__sanitizer_set_report_fd@@Base+0x1b20>
   15390:	mov	w0, w22
   15394:	ldp	x21, x22, [sp, #16]
   15398:	ldr	x30, [sp, #32]
   1539c:	ldp	x19, x20, [sp], #80
   153a0:	ret
   153a4:	ldr	x0, [sp, #56]
   153a8:	cbz	x0, 153c4 <__sanitizer_set_report_fd@@Base+0x1af4>
   153ac:	ldp	x22, x21, [x19, #16]
   153b0:	stp	x0, xzr, [x19, #16]
   153b4:	mov	x0, x19
   153b8:	bl	15280 <__sanitizer_set_report_fd@@Base+0x19b0>
   153bc:	stp	x22, x21, [x19, #16]
   153c0:	ldr	x0, [sp, #56]
   153c4:	mov	w22, w20
   153c8:	ldr	x1, [sp, #64]
   153cc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   153d0:	mov	w0, w22
   153d4:	ldp	x21, x22, [sp, #16]
   153d8:	ldr	x30, [sp, #32]
   153dc:	ldp	x19, x20, [sp], #80
   153e0:	ret
   153e4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   153e8:	str	x0, [x20]
   153ec:	b	15360 <__sanitizer_set_report_fd@@Base+0x1a90>
   153f0:	ldr	w2, [sp, #52]
   153f4:	mov	x1, x21
   153f8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   153fc:	add	x0, x0, #0x7d0
   15400:	bl	1ccf0 <OnPrint@@Base+0x310>
   15404:	mov	w0, w22
   15408:	ldp	x21, x22, [sp, #16]
   1540c:	ldr	x30, [sp, #32]
   15410:	ldp	x19, x20, [sp], #80
   15414:	ret
   15418:	stp	x19, x20, [sp, #-48]!
   1541c:	stp	x21, x22, [sp, #16]
   15420:	mov	x21, x0
   15424:	ldr	w0, [x0, #8]
   15428:	str	x30, [sp, #40]
   1542c:	mov	x22, x1
   15430:	cmp	w0, #0x0
   15434:	b.le	154a8 <__sanitizer_set_report_fd@@Base+0x1bd8>
   15438:	mov	x19, #0x0                   	// #0
   1543c:	mov	w20, #0x0                   	// #0
   15440:	str	x23, [sp, #32]
   15444:	mov	x23, x2
   15448:	b	15460 <__sanitizer_set_report_fd@@Base+0x1b90>
   1544c:	ldr	w0, [x21, #8]
   15450:	add	w20, w20, #0x1
   15454:	add	x19, x19, #0x18
   15458:	cmp	w0, w20
   1545c:	b.le	154a4 <__sanitizer_set_report_fd@@Base+0x1bd4>
   15460:	ldr	x3, [x21]
   15464:	mov	x0, x22
   15468:	ldr	x1, [x3, x19]
   1546c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   15470:	cbnz	w0, 1544c <__sanitizer_set_report_fd@@Base+0x1b7c>
   15474:	ldr	x0, [x21]
   15478:	mov	x1, x23
   1547c:	ldp	x21, x22, [sp, #16]
   15480:	add	x19, x0, x19
   15484:	ldr	x23, [sp, #32]
   15488:	ldr	x0, [x19, #16]
   1548c:	ldr	x30, [sp, #40]
   15490:	ldr	x2, [x0]
   15494:	ldp	x19, x20, [sp], #48
   15498:	ldr	x2, [x2]
   1549c:	mov	x16, x2
   154a0:	br	x16
   154a4:	ldr	x23, [sp, #32]
   154a8:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   154ac:	add	x1, x1, #0xd40
   154b0:	ldr	w0, [x1, #160]
   154b4:	sxtw	x3, w0
   154b8:	cmp	x3, #0x13
   154bc:	b.hi	154e0 <__sanitizer_set_report_fd@@Base+0x1c10>  // b.pmore
   154c0:	add	w2, w0, #0x1
   154c4:	str	x22, [x1, x3, lsl #3]
   154c8:	ldp	x21, x22, [sp, #16]
   154cc:	mov	w0, #0x1                   	// #1
   154d0:	ldr	x30, [sp, #40]
   154d4:	str	w2, [x1, #160]
   154d8:	ldp	x19, x20, [sp], #48
   154dc:	ret
   154e0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   154e4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   154e8:	add	x2, x2, #0x728
   154ec:	add	x0, x0, #0x758
   154f0:	mov	x4, #0x14                  	// #20
   154f4:	mov	w1, #0x1e                  	// #30
   154f8:	str	x23, [sp, #32]
   154fc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15500:	ldr	w4, [x0, #8]
   15504:	sxtw	x5, w4
   15508:	cmp	x5, #0xc7
   1550c:	b.hi	15534 <__sanitizer_set_report_fd@@Base+0x1c64>  // b.pmore
   15510:	mov	w5, #0x18                  	// #24
   15514:	add	w7, w4, #0x1
   15518:	ldr	x6, [x0]
   1551c:	smull	x4, w4, w5
   15520:	add	x5, x6, x4
   15524:	str	x1, [x6, x4]
   15528:	stp	x3, x2, [x5, #8]
   1552c:	str	w7, [x0, #8]
   15530:	ret
   15534:	str	x30, [sp, #-16]!
   15538:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1553c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   15540:	mov	x3, x5
   15544:	add	x2, x2, #0x800
   15548:	add	x0, x0, #0x758
   1554c:	mov	x4, #0xc8                  	// #200
   15550:	mov	w1, #0x9e                  	// #158
   15554:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   15558:	stp	x19, x30, [sp, #-16]!
   1555c:	mov	x19, x0
   15560:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   15564:	add	x0, x1, #0xd40
   15568:	mov	x1, #0x12c0                	// #4800
   1556c:	str	wzr, [x19, #8]
   15570:	add	x0, x0, #0xa8
   15574:	stp	xzr, xzr, [x19, #16]
   15578:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   1557c:	str	x0, [x19]
   15580:	ldp	x19, x30, [sp], #16
   15584:	ret
   15588:	cbz	x2, 155b0 <__sanitizer_set_report_fd@@Base+0x1ce0>
   1558c:	add	x3, x0, x2
   15590:	b	155a0 <__sanitizer_set_report_fd@@Base+0x1cd0>
   15594:	add	x0, x0, #0x1
   15598:	cmp	x3, x0
   1559c:	b.eq	155b0 <__sanitizer_set_report_fd@@Base+0x1ce0>  // b.none
   155a0:	ldrb	w2, [x0]
   155a4:	cmp	w2, w1
   155a8:	b.ne	15594 <__sanitizer_set_report_fd@@Base+0x1cc4>  // b.any
   155ac:	ret
   155b0:	mov	x0, #0x0                   	// #0
   155b4:	ret
   155b8:	mov	x3, x0
   155bc:	cbz	x2, 155e4 <__sanitizer_set_report_fd@@Base+0x1d14>
   155c0:	add	x4, x0, x2
   155c4:	mov	x0, #0x0                   	// #0
   155c8:	ldrb	w2, [x3]
   155cc:	cmp	w1, w2
   155d0:	csel	x0, x0, x3, ne  // ne = any
   155d4:	add	x3, x3, #0x1
   155d8:	cmp	x4, x3
   155dc:	b.ne	155c8 <__sanitizer_set_report_fd@@Base+0x1cf8>  // b.any
   155e0:	ret
   155e4:	mov	x0, #0x0                   	// #0
   155e8:	ret
   155ec:	nop
   155f0:	cbz	x2, 15624 <__sanitizer_set_report_fd@@Base+0x1d54>
   155f4:	mov	x3, #0x0                   	// #0
   155f8:	b	15604 <__sanitizer_set_report_fd@@Base+0x1d34>
   155fc:	cmp	x2, x3
   15600:	b.eq	15624 <__sanitizer_set_report_fd@@Base+0x1d54>  // b.none
   15604:	ldrb	w5, [x0, x3]
   15608:	ldrb	w4, [x1, x3]
   1560c:	add	x3, x3, #0x1
   15610:	cmp	w5, w4
   15614:	b.eq	155fc <__sanitizer_set_report_fd@@Base+0x1d2c>  // b.none
   15618:	mov	w0, #0x1                   	// #1
   1561c:	cneg	w0, w0, cc  // cc = lo, ul, last
   15620:	ret
   15624:	mov	w0, #0x0                   	// #0
   15628:	ret
   1562c:	nop
   15630:	cbz	x2, 15798 <__sanitizer_set_report_fd@@Base+0x1ec8>
   15634:	add	x3, x0, #0xf
   15638:	sub	x4, x2, #0x1
   1563c:	sub	x3, x3, x1
   15640:	cmp	x3, #0x1e
   15644:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   15648:	b.ls	1579c <__sanitizer_set_report_fd@@Base+0x1ecc>  // b.plast
   1564c:	and	x4, x2, #0xfffffffffffffff0
   15650:	mov	x3, #0x0                   	// #0
   15654:	nop
   15658:	ldr	q0, [x1, x3]
   1565c:	str	q0, [x0, x3]
   15660:	add	x3, x3, #0x10
   15664:	cmp	x3, x4
   15668:	b.ne	15658 <__sanitizer_set_report_fd@@Base+0x1d88>  // b.any
   1566c:	tst	x2, #0xf
   15670:	and	x3, x2, #0xfffffffffffffff0
   15674:	b.eq	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.none
   15678:	ldrb	w5, [x1, x3]
   1567c:	add	x4, x3, #0x1
   15680:	strb	w5, [x0, x3]
   15684:	cmp	x2, x4
   15688:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   1568c:	ldrb	w6, [x1, x4]
   15690:	add	x5, x3, #0x2
   15694:	strb	w6, [x0, x4]
   15698:	cmp	x2, x5
   1569c:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   156a0:	ldrb	w6, [x1, x5]
   156a4:	add	x4, x3, #0x3
   156a8:	strb	w6, [x0, x5]
   156ac:	cmp	x2, x4
   156b0:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   156b4:	ldrb	w6, [x1, x4]
   156b8:	add	x5, x3, #0x4
   156bc:	strb	w6, [x0, x4]
   156c0:	cmp	x2, x5
   156c4:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   156c8:	ldrb	w6, [x1, x5]
   156cc:	add	x4, x3, #0x5
   156d0:	strb	w6, [x0, x5]
   156d4:	cmp	x2, x4
   156d8:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   156dc:	ldrb	w6, [x1, x4]
   156e0:	add	x5, x3, #0x6
   156e4:	strb	w6, [x0, x4]
   156e8:	cmp	x2, x5
   156ec:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   156f0:	ldrb	w6, [x1, x5]
   156f4:	add	x4, x3, #0x7
   156f8:	strb	w6, [x0, x5]
   156fc:	cmp	x2, x4
   15700:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15704:	ldrb	w6, [x1, x4]
   15708:	add	x5, x3, #0x8
   1570c:	strb	w6, [x0, x4]
   15710:	cmp	x2, x5
   15714:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15718:	ldrb	w6, [x1, x5]
   1571c:	add	x4, x3, #0x9
   15720:	strb	w6, [x0, x5]
   15724:	cmp	x2, x4
   15728:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   1572c:	ldrb	w6, [x1, x4]
   15730:	add	x5, x3, #0xa
   15734:	strb	w6, [x0, x4]
   15738:	cmp	x2, x5
   1573c:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15740:	ldrb	w6, [x1, x5]
   15744:	add	x4, x3, #0xb
   15748:	strb	w6, [x0, x5]
   1574c:	cmp	x2, x4
   15750:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15754:	ldrb	w6, [x1, x4]
   15758:	add	x5, x3, #0xc
   1575c:	strb	w6, [x0, x4]
   15760:	cmp	x2, x5
   15764:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15768:	ldrb	w6, [x1, x5]
   1576c:	add	x4, x3, #0xd
   15770:	strb	w6, [x0, x5]
   15774:	cmp	x2, x4
   15778:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   1577c:	ldrb	w5, [x1, x4]
   15780:	add	x3, x3, #0xe
   15784:	strb	w5, [x0, x4]
   15788:	cmp	x2, x3
   1578c:	b.ls	15798 <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
   15790:	ldrb	w1, [x1, x3]
   15794:	strb	w1, [x0, x3]
   15798:	ret
   1579c:	mov	x3, #0x0                   	// #0
   157a0:	ldrb	w4, [x1, x3]
   157a4:	strb	w4, [x0, x3]
   157a8:	add	x3, x3, #0x1
   157ac:	cmp	x2, x3
   157b0:	b.ne	157a0 <__sanitizer_set_report_fd@@Base+0x1ed0>  // b.any
   157b4:	ret
   157b8:	cmp	x0, x1
   157bc:	b.cs	1592c <__sanitizer_set_report_fd@@Base+0x205c>  // b.hs, b.nlast
   157c0:	cmp	x2, #0x0
   157c4:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   157c8:	add	x3, x0, #0xf
   157cc:	sub	x4, x2, #0x1
   157d0:	sub	x3, x3, x1
   157d4:	cmp	x3, #0x1e
   157d8:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   157dc:	b.ls	15ad8 <__sanitizer_set_report_fd@@Base+0x2208>  // b.plast
   157e0:	and	x4, x2, #0xfffffffffffffff0
   157e4:	mov	x3, #0x0                   	// #0
   157e8:	ldr	q0, [x1, x3]
   157ec:	str	q0, [x0, x3]
   157f0:	add	x3, x3, #0x10
   157f4:	cmp	x3, x4
   157f8:	b.ne	157e8 <__sanitizer_set_report_fd@@Base+0x1f18>  // b.any
   157fc:	tst	x2, #0xf
   15800:	and	x3, x2, #0xfffffffffffffff0
   15804:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15808:	ldrb	w5, [x1, x3]
   1580c:	add	x4, x3, #0x1
   15810:	strb	w5, [x0, x3]
   15814:	cmp	x4, x2
   15818:	b.ge	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.tcont
   1581c:	ldrb	w6, [x1, x4]
   15820:	add	x5, x3, #0x2
   15824:	strb	w6, [x0, x4]
   15828:	cmp	x2, x5
   1582c:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15830:	ldrb	w6, [x1, x5]
   15834:	add	x4, x3, #0x3
   15838:	strb	w6, [x0, x5]
   1583c:	cmp	x2, x4
   15840:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15844:	ldrb	w6, [x1, x4]
   15848:	add	x5, x3, #0x4
   1584c:	strb	w6, [x0, x4]
   15850:	cmp	x2, x5
   15854:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15858:	ldrb	w6, [x1, x5]
   1585c:	add	x4, x3, #0x5
   15860:	strb	w6, [x0, x5]
   15864:	cmp	x2, x4
   15868:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   1586c:	ldrb	w6, [x1, x4]
   15870:	add	x5, x3, #0x6
   15874:	strb	w6, [x0, x4]
   15878:	cmp	x2, x5
   1587c:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15880:	ldrb	w6, [x1, x5]
   15884:	add	x4, x3, #0x7
   15888:	strb	w6, [x0, x5]
   1588c:	cmp	x2, x4
   15890:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15894:	ldrb	w6, [x1, x4]
   15898:	add	x5, x3, #0x8
   1589c:	strb	w6, [x0, x4]
   158a0:	cmp	x2, x5
   158a4:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   158a8:	ldrb	w6, [x1, x5]
   158ac:	add	x4, x3, #0x9
   158b0:	strb	w6, [x0, x5]
   158b4:	cmp	x2, x4
   158b8:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   158bc:	ldrb	w6, [x1, x4]
   158c0:	add	x5, x3, #0xa
   158c4:	strb	w6, [x0, x4]
   158c8:	cmp	x2, x5
   158cc:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   158d0:	ldrb	w6, [x1, x5]
   158d4:	add	x4, x3, #0xb
   158d8:	strb	w6, [x0, x5]
   158dc:	cmp	x2, x4
   158e0:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   158e4:	ldrb	w6, [x1, x4]
   158e8:	add	x5, x3, #0xc
   158ec:	strb	w6, [x0, x4]
   158f0:	cmp	x2, x5
   158f4:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   158f8:	ldrb	w6, [x1, x5]
   158fc:	add	x4, x3, #0xd
   15900:	strb	w6, [x0, x5]
   15904:	cmp	x2, x4
   15908:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   1590c:	ldrb	w5, [x1, x4]
   15910:	add	x3, x3, #0xe
   15914:	strb	w5, [x0, x4]
   15918:	cmp	x2, x3
   1591c:	b.le	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15920:	ldrb	w1, [x1, x3]
   15924:	strb	w1, [x0, x3]
   15928:	ret
   1592c:	cmp	x2, #0x0
   15930:	ccmp	x0, x1, #0x0, gt
   15934:	b.ls	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.plast
   15938:	sub	x4, x2, #0x10
   1593c:	add	x3, x0, x2
   15940:	add	x7, x1, x4
   15944:	add	x4, x0, x4
   15948:	cmp	x3, x7
   1594c:	add	x3, x1, x2
   15950:	ccmp	x3, x4, #0x0, hi  // hi = pmore
   15954:	sub	x5, x2, #0x1
   15958:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1595c:	b.ls	15aac <__sanitizer_set_report_fd@@Base+0x21dc>  // b.plast
   15960:	neg	x6, x2, lsr #4
   15964:	mov	x3, #0x0                   	// #0
   15968:	lsl	x6, x6, #4
   1596c:	nop
   15970:	ldr	q0, [x7, x3]
   15974:	str	q0, [x4, x3]
   15978:	sub	x3, x3, #0x10
   1597c:	cmp	x3, x6
   15980:	b.ne	15970 <__sanitizer_set_report_fd@@Base+0x20a0>  // b.any
   15984:	and	x4, x2, #0xfffffffffffffff0
   15988:	sub	x3, x5, x4
   1598c:	cmp	x2, x4
   15990:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15994:	ldrb	w4, [x1, x3]
   15998:	sub	x2, x3, #0x1
   1599c:	strb	w4, [x0, x3]
   159a0:	cbz	x3, 15928 <__sanitizer_set_report_fd@@Base+0x2058>
   159a4:	ldrb	w4, [x1, x2]
   159a8:	cmp	x3, #0x1
   159ac:	strb	w4, [x0, x2]
   159b0:	sub	x2, x3, #0x2
   159b4:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   159b8:	ldrb	w4, [x1, x2]
   159bc:	cmp	x3, #0x2
   159c0:	strb	w4, [x0, x2]
   159c4:	sub	x2, x3, #0x3
   159c8:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   159cc:	ldrb	w4, [x1, x2]
   159d0:	cmp	x3, #0x3
   159d4:	strb	w4, [x0, x2]
   159d8:	sub	x2, x3, #0x4
   159dc:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   159e0:	ldrb	w4, [x1, x2]
   159e4:	cmp	x3, #0x4
   159e8:	strb	w4, [x0, x2]
   159ec:	sub	x2, x3, #0x5
   159f0:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   159f4:	ldrb	w4, [x1, x2]
   159f8:	cmp	x3, #0x5
   159fc:	strb	w4, [x0, x2]
   15a00:	sub	x2, x3, #0x6
   15a04:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a08:	ldrb	w4, [x1, x2]
   15a0c:	cmp	x3, #0x6
   15a10:	strb	w4, [x0, x2]
   15a14:	sub	x2, x3, #0x7
   15a18:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a1c:	ldrb	w4, [x1, x2]
   15a20:	cmp	x3, #0x7
   15a24:	strb	w4, [x0, x2]
   15a28:	sub	x2, x3, #0x8
   15a2c:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a30:	ldrb	w4, [x1, x2]
   15a34:	cmp	x3, #0x8
   15a38:	strb	w4, [x0, x2]
   15a3c:	sub	x2, x3, #0x9
   15a40:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a44:	ldrb	w4, [x1, x2]
   15a48:	cmp	x3, #0x9
   15a4c:	strb	w4, [x0, x2]
   15a50:	sub	x2, x3, #0xa
   15a54:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a58:	ldrb	w4, [x1, x2]
   15a5c:	cmp	x3, #0xa
   15a60:	strb	w4, [x0, x2]
   15a64:	sub	x2, x3, #0xb
   15a68:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a6c:	ldrb	w4, [x1, x2]
   15a70:	cmp	x3, #0xb
   15a74:	strb	w4, [x0, x2]
   15a78:	sub	x2, x3, #0xc
   15a7c:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a80:	ldrb	w4, [x1, x2]
   15a84:	cmp	x3, #0xc
   15a88:	strb	w4, [x0, x2]
   15a8c:	sub	x2, x3, #0xd
   15a90:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15a94:	ldrb	w4, [x1, x2]
   15a98:	cmp	x3, #0xd
   15a9c:	strb	w4, [x0, x2]
   15aa0:	sub	x3, x3, #0xe
   15aa4:	b.ne	15920 <__sanitizer_set_report_fd@@Base+0x2050>  // b.any
   15aa8:	ret
   15aac:	ldrb	w2, [x1, x5]
   15ab0:	strb	w2, [x0, x5]
   15ab4:	sub	x5, x5, #0x1
   15ab8:	cmn	x5, #0x1
   15abc:	b.eq	15928 <__sanitizer_set_report_fd@@Base+0x2058>  // b.none
   15ac0:	ldrb	w2, [x1, x5]
   15ac4:	strb	w2, [x0, x5]
   15ac8:	sub	x5, x5, #0x1
   15acc:	cmn	x5, #0x1
   15ad0:	b.ne	15aac <__sanitizer_set_report_fd@@Base+0x21dc>  // b.any
   15ad4:	b	15928 <__sanitizer_set_report_fd@@Base+0x2058>
   15ad8:	mov	x3, #0x0                   	// #0
   15adc:	nop
   15ae0:	ldrb	w4, [x1, x3]
   15ae4:	strb	w4, [x0, x3]
   15ae8:	add	x3, x3, #0x1
   15aec:	cmp	x2, x3
   15af0:	b.ne	15ae0 <__sanitizer_set_report_fd@@Base+0x2210>  // b.any
   15af4:	ret
   15af8:	orr	x3, x0, x2
   15afc:	ands	x3, x3, #0xf
   15b00:	b.eq	15b28 <__sanitizer_set_report_fd@@Base+0x2258>  // b.none
   15b04:	cbz	x2, 15b24 <__sanitizer_set_report_fd@@Base+0x2254>
   15b08:	and	w3, w1, #0xff
   15b0c:	add	x2, x0, x2
   15b10:	mov	x1, x0
   15b14:	nop
   15b18:	strb	w3, [x1], #1
   15b1c:	cmp	x1, x2
   15b20:	b.ne	15b18 <__sanitizer_set_report_fd@@Base+0x2248>  // b.any
   15b24:	ret
   15b28:	sxtw	x4, w1
   15b2c:	sbfiz	x1, x1, #8, #32
   15b30:	orr	x1, x4, x1
   15b34:	and	x2, x2, #0xfffffffffffffff8
   15b38:	add	x4, x0, x2
   15b3c:	orr	x1, x1, x1, lsl #16
   15b40:	cmp	x0, x4
   15b44:	orr	x4, x1, x1, lsl #32
   15b48:	b.cs	15b24 <__sanitizer_set_report_fd@@Base+0x2254>  // b.hs, b.nlast
   15b4c:	sub	x1, x2, #0x1
   15b50:	dup	v0.2d, x4
   15b54:	lsr	x1, x1, #4
   15b58:	add	x1, x1, #0x1
   15b5c:	nop
   15b60:	lsl	x2, x3, #4
   15b64:	add	x3, x3, #0x1
   15b68:	cmp	x1, x3
   15b6c:	str	q0, [x0, x2]
   15b70:	b.hi	15b60 <__sanitizer_set_report_fd@@Base+0x2290>  // b.pmore
   15b74:	ret
   15b78:	ldrb	w4, [x0]
   15b7c:	mov	x6, x0
   15b80:	cbz	w4, 15bc4 <__sanitizer_set_report_fd@@Base+0x22f4>
   15b84:	ldrb	w5, [x1]
   15b88:	mov	x0, #0x0                   	// #0
   15b8c:	nop
   15b90:	cmp	w4, w5
   15b94:	b.eq	15bb0 <__sanitizer_set_report_fd@@Base+0x22e0>  // b.none
   15b98:	mov	w2, w5
   15b9c:	mov	x3, x1
   15ba0:	cbz	w2, 15bb4 <__sanitizer_set_report_fd@@Base+0x22e4>
   15ba4:	ldrb	w2, [x3, #1]!
   15ba8:	cmp	w4, w2
   15bac:	b.ne	15ba0 <__sanitizer_set_report_fd@@Base+0x22d0>  // b.any
   15bb0:	ret
   15bb4:	add	x0, x0, #0x1
   15bb8:	ldrb	w4, [x6, x0]
   15bbc:	cbnz	w4, 15b90 <__sanitizer_set_report_fd@@Base+0x22c0>
   15bc0:	ret
   15bc4:	mov	x0, #0x0                   	// #0
   15bc8:	ret
   15bcc:	nop
   15bd0:	stp	x19, x20, [sp, #-32]!
   15bd4:	mov	x20, x0
   15bd8:	str	x30, [sp, #24]
   15bdc:	ldrb	w0, [x0]
   15be0:	cbz	w0, 15da8 <__sanitizer_set_report_fd@@Base+0x24d8>
   15be4:	mov	x19, #0x0                   	// #0
   15be8:	str	x21, [sp, #16]
   15bec:	nop
   15bf0:	mov	x21, x19
   15bf4:	add	x19, x19, #0x1
   15bf8:	ldrb	w0, [x20, x19]
   15bfc:	cbnz	w0, 15bf0 <__sanitizer_set_report_fd@@Base+0x2320>
   15c00:	mov	x1, #0x0                   	// #0
   15c04:	add	x0, x21, #0x2
   15c08:	mov	x2, #0x0                   	// #0
   15c0c:	bl	ce20 <__sancov_default_options@@Base+0x470>
   15c10:	add	x1, x20, #0xf
   15c14:	sub	x1, x1, x0
   15c18:	cmp	x1, #0x1e
   15c1c:	ccmp	x21, #0xe, #0x0, hi  // hi = pmore
   15c20:	b.ls	15d88 <__sanitizer_set_report_fd@@Base+0x24b8>  // b.plast
   15c24:	and	x2, x19, #0xfffffffffffffff0
   15c28:	mov	x1, #0x0                   	// #0
   15c2c:	nop
   15c30:	ldr	q0, [x20, x1]
   15c34:	str	q0, [x0, x1]
   15c38:	add	x1, x1, #0x10
   15c3c:	cmp	x1, x2
   15c40:	b.ne	15c30 <__sanitizer_set_report_fd@@Base+0x2360>  // b.any
   15c44:	tst	x19, #0xf
   15c48:	and	x1, x19, #0xfffffffffffffff0
   15c4c:	b.eq	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.none
   15c50:	ldrb	w3, [x20, x1]
   15c54:	add	x2, x1, #0x1
   15c58:	strb	w3, [x0, x1]
   15c5c:	cmp	x19, x2
   15c60:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15c64:	ldrb	w4, [x20, x2]
   15c68:	add	x3, x1, #0x2
   15c6c:	strb	w4, [x0, x2]
   15c70:	cmp	x19, x3
   15c74:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15c78:	ldrb	w4, [x20, x3]
   15c7c:	add	x2, x1, #0x3
   15c80:	strb	w4, [x0, x3]
   15c84:	cmp	x19, x2
   15c88:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15c8c:	ldrb	w4, [x20, x2]
   15c90:	add	x3, x1, #0x4
   15c94:	strb	w4, [x0, x2]
   15c98:	cmp	x19, x3
   15c9c:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15ca0:	ldrb	w4, [x20, x3]
   15ca4:	add	x2, x1, #0x5
   15ca8:	strb	w4, [x0, x3]
   15cac:	cmp	x19, x2
   15cb0:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15cb4:	ldrb	w4, [x20, x2]
   15cb8:	add	x3, x1, #0x6
   15cbc:	strb	w4, [x0, x2]
   15cc0:	cmp	x19, x3
   15cc4:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15cc8:	ldrb	w4, [x20, x3]
   15ccc:	add	x2, x1, #0x7
   15cd0:	strb	w4, [x0, x3]
   15cd4:	cmp	x19, x2
   15cd8:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15cdc:	ldrb	w4, [x20, x2]
   15ce0:	add	x3, x1, #0x8
   15ce4:	strb	w4, [x0, x2]
   15ce8:	cmp	x19, x3
   15cec:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15cf0:	ldrb	w4, [x20, x3]
   15cf4:	add	x2, x1, #0x9
   15cf8:	strb	w4, [x0, x3]
   15cfc:	cmp	x19, x2
   15d00:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d04:	ldrb	w4, [x20, x2]
   15d08:	add	x3, x1, #0xa
   15d0c:	strb	w4, [x0, x2]
   15d10:	cmp	x19, x3
   15d14:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d18:	ldrb	w4, [x20, x3]
   15d1c:	add	x2, x1, #0xb
   15d20:	strb	w4, [x0, x3]
   15d24:	cmp	x19, x2
   15d28:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d2c:	ldrb	w4, [x20, x2]
   15d30:	add	x3, x1, #0xc
   15d34:	strb	w4, [x0, x2]
   15d38:	cmp	x19, x3
   15d3c:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d40:	ldrb	w4, [x20, x3]
   15d44:	add	x2, x1, #0xd
   15d48:	strb	w4, [x0, x3]
   15d4c:	cmp	x19, x2
   15d50:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d54:	ldrb	w3, [x20, x2]
   15d58:	add	x1, x1, #0xe
   15d5c:	strb	w3, [x0, x2]
   15d60:	cmp	x19, x1
   15d64:	b.ls	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.plast
   15d68:	ldrb	w2, [x20, x1]
   15d6c:	strb	w2, [x0, x1]
   15d70:	add	x19, x0, x19
   15d74:	ldr	x21, [sp, #16]
   15d78:	strb	wzr, [x19]
   15d7c:	ldr	x30, [sp, #24]
   15d80:	ldp	x19, x20, [sp], #32
   15d84:	ret
   15d88:	mov	x1, #0x0                   	// #0
   15d8c:	nop
   15d90:	ldrb	w3, [x20, x1]
   15d94:	cmp	x21, x1
   15d98:	strb	w3, [x0, x1]
   15d9c:	add	x1, x1, #0x1
   15da0:	b.ne	15d90 <__sanitizer_set_report_fd@@Base+0x24c0>  // b.any
   15da4:	b	15d70 <__sanitizer_set_report_fd@@Base+0x24a0>
   15da8:	mov	x2, #0x0                   	// #0
   15dac:	mov	x1, #0x0                   	// #0
   15db0:	mov	x0, #0x1                   	// #1
   15db4:	bl	ce20 <__sancov_default_options@@Base+0x470>
   15db8:	mov	x19, x0
   15dbc:	strb	wzr, [x19]
   15dc0:	ldr	x30, [sp, #24]
   15dc4:	ldp	x19, x20, [sp], #32
   15dc8:	ret
   15dcc:	nop
   15dd0:	ldrb	w3, [x0]
   15dd4:	mov	x2, #0x1                   	// #1
   15dd8:	ldrb	w4, [x1]
   15ddc:	cmp	w4, w3
   15de0:	b.ne	15e00 <__sanitizer_set_report_fd@@Base+0x2530>  // b.any
   15de4:	nop
   15de8:	cbz	w3, 15e10 <__sanitizer_set_report_fd@@Base+0x2540>
   15dec:	ldrb	w3, [x0, x2]
   15df0:	ldrb	w4, [x1, x2]
   15df4:	add	x2, x2, #0x1
   15df8:	cmp	w3, w4
   15dfc:	b.eq	15de8 <__sanitizer_set_report_fd@@Base+0x2518>  // b.none
   15e00:	cmp	w3, w4
   15e04:	mov	w0, #0x1                   	// #1
   15e08:	cneg	w0, w0, cc  // cc = lo, ul, last
   15e0c:	ret
   15e10:	mov	w0, #0x0                   	// #0
   15e14:	ret
   15e18:	cbz	x2, 15e50 <__sanitizer_set_report_fd@@Base+0x2580>
   15e1c:	mov	x3, #0x0                   	// #0
   15e20:	b	15e30 <__sanitizer_set_report_fd@@Base+0x2560>
   15e24:	cbz	w4, 15e50 <__sanitizer_set_report_fd@@Base+0x2580>
   15e28:	cmp	x2, x3
   15e2c:	b.eq	15e50 <__sanitizer_set_report_fd@@Base+0x2580>  // b.none
   15e30:	ldrb	w4, [x0, x3]
   15e34:	ldrb	w5, [x1, x3]
   15e38:	add	x3, x3, #0x1
   15e3c:	cmp	w4, w5
   15e40:	b.eq	15e24 <__sanitizer_set_report_fd@@Base+0x2554>  // b.none
   15e44:	mov	w0, #0x1                   	// #1
   15e48:	cneg	w0, w0, cc  // cc = lo, ul, last
   15e4c:	ret
   15e50:	mov	w0, #0x0                   	// #0
   15e54:	ret
   15e58:	ldrb	w2, [x0]
   15e5c:	and	w3, w1, #0xff
   15e60:	cmp	w2, w1, uxtb
   15e64:	b.eq	15e78 <__sanitizer_set_report_fd@@Base+0x25a8>  // b.none
   15e68:	cbz	w2, 15e7c <__sanitizer_set_report_fd@@Base+0x25ac>
   15e6c:	ldrb	w2, [x0, #1]!
   15e70:	cmp	w2, w3
   15e74:	b.ne	15e68 <__sanitizer_set_report_fd@@Base+0x2598>  // b.any
   15e78:	ret
   15e7c:	mov	x0, #0x0                   	// #0
   15e80:	ret
   15e84:	nop
   15e88:	ldrb	w4, [x0]
   15e8c:	mov	x2, x0
   15e90:	and	w3, w1, #0xff
   15e94:	cmp	w4, w1, uxtb
   15e98:	b.eq	15eb0 <__sanitizer_set_report_fd@@Base+0x25e0>  // b.none
   15e9c:	mov	w1, w4
   15ea0:	cbz	w1, 15eb4 <__sanitizer_set_report_fd@@Base+0x25e4>
   15ea4:	ldrb	w1, [x0, #1]!
   15ea8:	cmp	w1, w3
   15eac:	b.ne	15ea0 <__sanitizer_set_report_fd@@Base+0x25d0>  // b.any
   15eb0:	ret
   15eb4:	cbz	w4, 15ed0 <__sanitizer_set_report_fd@@Base+0x2600>
   15eb8:	add	x1, x2, #0x1
   15ebc:	nop
   15ec0:	mov	x0, x1
   15ec4:	ldrb	w2, [x1], #1
   15ec8:	cbnz	w2, 15ec0 <__sanitizer_set_report_fd@@Base+0x25f0>
   15ecc:	ret
   15ed0:	mov	x0, x2
   15ed4:	ret
   15ed8:	ldrb	w3, [x0]
   15edc:	mov	x2, x0
   15ee0:	mov	x0, #0x0                   	// #0
   15ee4:	cbz	w3, 15ef8 <__sanitizer_set_report_fd@@Base+0x2628>
   15ee8:	cmp	w1, w3
   15eec:	csel	x0, x0, x2, ne  // ne = any
   15ef0:	ldrb	w3, [x2, #1]!
   15ef4:	cbnz	w3, 15ee8 <__sanitizer_set_report_fd@@Base+0x2618>
   15ef8:	ret
   15efc:	nop
   15f00:	mov	x2, x0
   15f04:	ldrb	w0, [x0]
   15f08:	cbz	w0, 15f20 <__sanitizer_set_report_fd@@Base+0x2650>
   15f0c:	mov	x0, #0x0                   	// #0
   15f10:	add	x0, x0, #0x1
   15f14:	ldrb	w1, [x2, x0]
   15f18:	cbnz	w1, 15f10 <__sanitizer_set_report_fd@@Base+0x2640>
   15f1c:	ret
   15f20:	mov	x0, #0x0                   	// #0
   15f24:	ret
   15f28:	ldrb	w3, [x1]
   15f2c:	mov	x4, #0x0                   	// #0
   15f30:	cbz	w3, 15f44 <__sanitizer_set_report_fd@@Base+0x2674>
   15f34:	nop
   15f38:	add	x4, x4, #0x1
   15f3c:	ldrb	w3, [x1, x4]
   15f40:	cbnz	w3, 15f38 <__sanitizer_set_report_fd@@Base+0x2668>
   15f44:	cbz	x2, 16268 <__sanitizer_set_report_fd@@Base+0x2998>
   15f48:	mov	x3, #0x0                   	// #0
   15f4c:	b	15f5c <__sanitizer_set_report_fd@@Base+0x268c>
   15f50:	add	x3, x3, #0x1
   15f54:	cmp	x2, x3
   15f58:	b.eq	16268 <__sanitizer_set_report_fd@@Base+0x2998>  // b.none
   15f5c:	ldrb	w5, [x0, x3]
   15f60:	add	x7, x0, x3
   15f64:	cbnz	w5, 15f50 <__sanitizer_set_report_fd@@Base+0x2680>
   15f68:	sub	x5, x2, x3
   15f6c:	cmp	x5, x4
   15f70:	b.ls	160e8 <__sanitizer_set_report_fd@@Base+0x2818>  // b.plast
   15f74:	cmp	x1, x7
   15f78:	add	x5, x4, #0x1
   15f7c:	b.ls	16270 <__sanitizer_set_report_fd@@Base+0x29a0>  // b.plast
   15f80:	cmp	x5, #0x0
   15f84:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   15f88:	add	x0, x1, #0xf
   15f8c:	sub	x0, x0, x7
   15f90:	cmp	x0, #0x1e
   15f94:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   15f98:	b.ls	165f0 <__sanitizer_set_report_fd@@Base+0x2d20>  // b.plast
   15f9c:	and	x2, x5, #0xfffffffffffffff0
   15fa0:	mov	x0, #0x0                   	// #0
   15fa4:	nop
   15fa8:	ldr	q0, [x1, x0]
   15fac:	str	q0, [x7, x0]
   15fb0:	add	x0, x0, #0x10
   15fb4:	cmp	x0, x2
   15fb8:	b.ne	15fa8 <__sanitizer_set_report_fd@@Base+0x26d8>  // b.any
   15fbc:	tst	x5, #0xf
   15fc0:	and	x0, x5, #0xfffffffffffffff0
   15fc4:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   15fc8:	ldrb	w6, [x1, x0]
   15fcc:	add	x2, x0, #0x1
   15fd0:	strb	w6, [x7, x0]
   15fd4:	cmp	x5, x2
   15fd8:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   15fdc:	ldrb	w8, [x1, x2]
   15fe0:	add	x6, x0, #0x2
   15fe4:	strb	w8, [x7, x2]
   15fe8:	cmp	x5, x6
   15fec:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   15ff0:	ldrb	w8, [x1, x6]
   15ff4:	add	x2, x0, #0x3
   15ff8:	strb	w8, [x7, x6]
   15ffc:	cmp	x5, x2
   16000:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16004:	ldrb	w8, [x1, x2]
   16008:	add	x6, x0, #0x4
   1600c:	strb	w8, [x7, x2]
   16010:	cmp	x5, x6
   16014:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16018:	ldrb	w8, [x1, x6]
   1601c:	add	x2, x0, #0x5
   16020:	strb	w8, [x7, x6]
   16024:	cmp	x5, x2
   16028:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   1602c:	ldrb	w8, [x1, x2]
   16030:	add	x6, x0, #0x6
   16034:	strb	w8, [x7, x2]
   16038:	cmp	x5, x6
   1603c:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16040:	ldrb	w8, [x1, x6]
   16044:	add	x2, x0, #0x7
   16048:	strb	w8, [x7, x6]
   1604c:	cmp	x5, x2
   16050:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16054:	ldrb	w8, [x1, x2]
   16058:	add	x6, x0, #0x8
   1605c:	strb	w8, [x7, x2]
   16060:	cmp	x5, x6
   16064:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16068:	ldrb	w8, [x1, x6]
   1606c:	add	x2, x0, #0x9
   16070:	strb	w8, [x7, x6]
   16074:	cmp	x5, x2
   16078:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   1607c:	ldrb	w8, [x1, x2]
   16080:	add	x6, x0, #0xa
   16084:	strb	w8, [x7, x2]
   16088:	cmp	x5, x6
   1608c:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   16090:	ldrb	w8, [x1, x6]
   16094:	add	x2, x0, #0xb
   16098:	strb	w8, [x7, x6]
   1609c:	cmp	x5, x2
   160a0:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   160a4:	ldrb	w8, [x1, x2]
   160a8:	add	x6, x0, #0xc
   160ac:	strb	w8, [x7, x2]
   160b0:	cmp	x5, x6
   160b4:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   160b8:	ldrb	w8, [x1, x6]
   160bc:	add	x2, x0, #0xd
   160c0:	strb	w8, [x7, x6]
   160c4:	cmp	x5, x2
   160c8:	b.le	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   160cc:	ldrb	w6, [x1, x2]
   160d0:	add	x0, x0, #0xe
   160d4:	strb	w6, [x7, x2]
   160d8:	cmp	x5, x0
   160dc:	b.gt	163e8 <__sanitizer_set_report_fd@@Base+0x2b18>
   160e0:	add	x0, x4, x3
   160e4:	ret
   160e8:	cmp	x1, x7
   160ec:	sub	x8, x5, #0x1
   160f0:	b.ls	163f8 <__sanitizer_set_report_fd@@Base+0x2b28>  // b.plast
   160f4:	cmp	x8, #0x0
   160f8:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   160fc:	add	x6, x1, #0xf
   16100:	sub	x5, x5, #0x2
   16104:	sub	x6, x6, x7
   16108:	cmp	x6, #0x1e
   1610c:	ccmp	x5, #0xe, #0x0, hi  // hi = pmore
   16110:	b.ls	165d4 <__sanitizer_set_report_fd@@Base+0x2d04>  // b.plast
   16114:	and	x6, x8, #0xfffffffffffffff0
   16118:	mov	x5, #0x0                   	// #0
   1611c:	nop
   16120:	ldr	q0, [x1, x5]
   16124:	str	q0, [x7, x5]
   16128:	add	x5, x5, #0x10
   1612c:	cmp	x5, x6
   16130:	b.ne	16120 <__sanitizer_set_report_fd@@Base+0x2850>  // b.any
   16134:	tst	x8, #0xf
   16138:	and	x5, x8, #0xfffffffffffffff0
   1613c:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16140:	ldrb	w9, [x1, x5]
   16144:	add	x6, x5, #0x1
   16148:	strb	w9, [x7, x5]
   1614c:	cmp	x8, x6
   16150:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16154:	ldrb	w10, [x1, x6]
   16158:	add	x9, x5, #0x2
   1615c:	strb	w10, [x7, x6]
   16160:	cmp	x8, x9
   16164:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16168:	ldrb	w10, [x1, x9]
   1616c:	add	x6, x5, #0x3
   16170:	strb	w10, [x7, x9]
   16174:	cmp	x8, x6
   16178:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   1617c:	ldrb	w10, [x1, x6]
   16180:	add	x9, x5, #0x4
   16184:	strb	w10, [x7, x6]
   16188:	cmp	x8, x9
   1618c:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16190:	ldrb	w10, [x1, x9]
   16194:	add	x6, x5, #0x5
   16198:	strb	w10, [x7, x9]
   1619c:	cmp	x8, x6
   161a0:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   161a4:	ldrb	w10, [x1, x6]
   161a8:	add	x9, x5, #0x6
   161ac:	strb	w10, [x7, x6]
   161b0:	cmp	x8, x9
   161b4:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   161b8:	ldrb	w10, [x1, x9]
   161bc:	add	x6, x5, #0x7
   161c0:	strb	w10, [x7, x9]
   161c4:	cmp	x8, x6
   161c8:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   161cc:	ldrb	w10, [x1, x6]
   161d0:	add	x9, x5, #0x8
   161d4:	strb	w10, [x7, x6]
   161d8:	cmp	x8, x9
   161dc:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   161e0:	ldrb	w10, [x1, x9]
   161e4:	add	x6, x5, #0x9
   161e8:	strb	w10, [x7, x9]
   161ec:	cmp	x8, x6
   161f0:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   161f4:	ldrb	w10, [x1, x6]
   161f8:	add	x9, x5, #0xa
   161fc:	strb	w10, [x7, x6]
   16200:	cmp	x8, x9
   16204:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16208:	ldrb	w10, [x1, x9]
   1620c:	add	x6, x5, #0xb
   16210:	strb	w10, [x7, x9]
   16214:	cmp	x8, x6
   16218:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   1621c:	ldrb	w10, [x1, x6]
   16220:	add	x9, x5, #0xc
   16224:	strb	w10, [x7, x6]
   16228:	cmp	x8, x9
   1622c:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16230:	ldrb	w10, [x1, x9]
   16234:	add	x6, x5, #0xd
   16238:	strb	w10, [x7, x9]
   1623c:	cmp	x8, x6
   16240:	b.le	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   16244:	ldrb	w9, [x1, x6]
   16248:	add	x5, x5, #0xe
   1624c:	strb	w9, [x7, x6]
   16250:	cmp	x8, x5
   16254:	b.gt	16570 <__sanitizer_set_report_fd@@Base+0x2ca0>
   16258:	add	x0, x0, x2
   1625c:	sturb	wzr, [x0, #-1]
   16260:	add	x0, x4, x3
   16264:	b	160e4 <__sanitizer_set_report_fd@@Base+0x2814>
   16268:	add	x0, x2, x4
   1626c:	ret
   16270:	cmp	x5, #0x0
   16274:	ccmp	x1, x7, #0x2, gt
   16278:	b.cs	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.hs, b.nlast
   1627c:	sub	x2, x4, #0xf
   16280:	add	x0, x1, x5
   16284:	add	x8, x7, x2
   16288:	add	x2, x1, x2
   1628c:	cmp	x8, x0
   16290:	add	x0, x7, x5
   16294:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   16298:	mov	x0, x4
   1629c:	ccmp	x4, #0xe, #0x0, ls  // ls = plast
   162a0:	b.ls	1657c <__sanitizer_set_report_fd@@Base+0x2cac>  // b.plast
   162a4:	neg	x6, x5, lsr #4
   162a8:	mov	x0, #0x0                   	// #0
   162ac:	lsl	x6, x6, #4
   162b0:	ldr	q0, [x2, x0]
   162b4:	str	q0, [x8, x0]
   162b8:	sub	x0, x0, #0x10
   162bc:	cmp	x0, x6
   162c0:	b.ne	162b0 <__sanitizer_set_report_fd@@Base+0x29e0>  // b.any
   162c4:	and	x0, x5, #0xfffffffffffffff0
   162c8:	cmp	x5, x0
   162cc:	sub	x0, x4, x0
   162d0:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   162d4:	ldrb	w5, [x1, x0]
   162d8:	sub	x2, x0, #0x1
   162dc:	strb	w5, [x7, x0]
   162e0:	cbz	x0, 160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   162e4:	ldrb	w5, [x1, x2]
   162e8:	cmp	x0, #0x1
   162ec:	strb	w5, [x7, x2]
   162f0:	sub	x2, x0, #0x2
   162f4:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   162f8:	ldrb	w5, [x1, x2]
   162fc:	cmp	x0, #0x2
   16300:	strb	w5, [x7, x2]
   16304:	sub	x2, x0, #0x3
   16308:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   1630c:	ldrb	w5, [x1, x2]
   16310:	cmp	x0, #0x3
   16314:	strb	w5, [x7, x2]
   16318:	sub	x2, x0, #0x4
   1631c:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16320:	ldrb	w5, [x1, x2]
   16324:	cmp	x0, #0x4
   16328:	strb	w5, [x7, x2]
   1632c:	sub	x2, x0, #0x5
   16330:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16334:	ldrb	w5, [x1, x2]
   16338:	cmp	x0, #0x5
   1633c:	strb	w5, [x7, x2]
   16340:	sub	x2, x0, #0x6
   16344:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16348:	ldrb	w5, [x1, x2]
   1634c:	cmp	x0, #0x6
   16350:	strb	w5, [x7, x2]
   16354:	sub	x2, x0, #0x7
   16358:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   1635c:	ldrb	w5, [x1, x2]
   16360:	cmp	x0, #0x7
   16364:	strb	w5, [x7, x2]
   16368:	sub	x2, x0, #0x8
   1636c:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16370:	ldrb	w5, [x1, x2]
   16374:	cmp	x0, #0x8
   16378:	strb	w5, [x7, x2]
   1637c:	sub	x2, x0, #0x9
   16380:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16384:	ldrb	w5, [x1, x2]
   16388:	cmp	x0, #0x9
   1638c:	strb	w5, [x7, x2]
   16390:	sub	x2, x0, #0xa
   16394:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16398:	ldrb	w5, [x1, x2]
   1639c:	cmp	x0, #0xa
   163a0:	strb	w5, [x7, x2]
   163a4:	sub	x2, x0, #0xb
   163a8:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   163ac:	ldrb	w5, [x1, x2]
   163b0:	cmp	x0, #0xb
   163b4:	strb	w5, [x7, x2]
   163b8:	sub	x2, x0, #0xc
   163bc:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   163c0:	ldrb	w5, [x1, x2]
   163c4:	cmp	x0, #0xc
   163c8:	strb	w5, [x7, x2]
   163cc:	sub	x2, x0, #0xd
   163d0:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   163d4:	ldrb	w5, [x1, x2]
   163d8:	cmp	x0, #0xd
   163dc:	strb	w5, [x7, x2]
   163e0:	sub	x0, x0, #0xe
   163e4:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   163e8:	ldrb	w1, [x1, x0]
   163ec:	strb	w1, [x7, x0]
   163f0:	add	x0, x4, x3
   163f4:	b	160e4 <__sanitizer_set_report_fd@@Base+0x2814>
   163f8:	cmp	x8, #0x0
   163fc:	ccmp	x1, x7, #0x2, gt
   16400:	b.cs	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.hs, b.nlast
   16404:	sub	x9, x5, #0x11
   16408:	add	x6, x1, x8
   1640c:	add	x11, x7, x9
   16410:	add	x9, x1, x9
   16414:	cmp	x6, x11
   16418:	add	x6, x7, x8
   1641c:	sub	x5, x5, #0x2
   16420:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   16424:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   16428:	b.ls	165a8 <__sanitizer_set_report_fd@@Base+0x2cd8>  // b.plast
   1642c:	neg	x10, x8, lsr #4
   16430:	mov	x6, #0x0                   	// #0
   16434:	lsl	x10, x10, #4
   16438:	ldr	q0, [x9, x6]
   1643c:	str	q0, [x11, x6]
   16440:	sub	x6, x6, #0x10
   16444:	cmp	x6, x10
   16448:	b.ne	16438 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.any
   1644c:	and	x6, x8, #0xfffffffffffffff0
   16450:	sub	x5, x5, x6
   16454:	cmp	x8, x6
   16458:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   1645c:	ldrb	w8, [x1, x5]
   16460:	sub	x6, x5, #0x1
   16464:	strb	w8, [x7, x5]
   16468:	cbz	x5, 16258 <__sanitizer_set_report_fd@@Base+0x2988>
   1646c:	ldrb	w8, [x1, x6]
   16470:	cmp	x5, #0x1
   16474:	strb	w8, [x7, x6]
   16478:	sub	x6, x5, #0x2
   1647c:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16480:	ldrb	w8, [x1, x6]
   16484:	cmp	x5, #0x2
   16488:	strb	w8, [x7, x6]
   1648c:	sub	x6, x5, #0x3
   16490:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16494:	ldrb	w8, [x1, x6]
   16498:	cmp	x5, #0x3
   1649c:	strb	w8, [x7, x6]
   164a0:	sub	x6, x5, #0x4
   164a4:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   164a8:	ldrb	w8, [x1, x6]
   164ac:	cmp	x5, #0x4
   164b0:	strb	w8, [x7, x6]
   164b4:	sub	x6, x5, #0x5
   164b8:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   164bc:	ldrb	w8, [x1, x6]
   164c0:	cmp	x5, #0x5
   164c4:	strb	w8, [x7, x6]
   164c8:	sub	x6, x5, #0x6
   164cc:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   164d0:	ldrb	w8, [x1, x6]
   164d4:	cmp	x5, #0x6
   164d8:	strb	w8, [x7, x6]
   164dc:	sub	x6, x5, #0x7
   164e0:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   164e4:	ldrb	w8, [x1, x6]
   164e8:	cmp	x5, #0x7
   164ec:	strb	w8, [x7, x6]
   164f0:	sub	x6, x5, #0x8
   164f4:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   164f8:	ldrb	w8, [x1, x6]
   164fc:	cmp	x5, #0x8
   16500:	strb	w8, [x7, x6]
   16504:	sub	x6, x5, #0x9
   16508:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   1650c:	ldrb	w8, [x1, x6]
   16510:	cmp	x5, #0x9
   16514:	strb	w8, [x7, x6]
   16518:	sub	x6, x5, #0xa
   1651c:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16520:	ldrb	w8, [x1, x6]
   16524:	cmp	x5, #0xa
   16528:	strb	w8, [x7, x6]
   1652c:	sub	x6, x5, #0xb
   16530:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16534:	ldrb	w8, [x1, x6]
   16538:	cmp	x5, #0xb
   1653c:	strb	w8, [x7, x6]
   16540:	sub	x6, x5, #0xc
   16544:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16548:	ldrb	w8, [x1, x6]
   1654c:	cmp	x5, #0xc
   16550:	strb	w8, [x7, x6]
   16554:	sub	x6, x5, #0xd
   16558:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   1655c:	ldrb	w8, [x1, x6]
   16560:	cmp	x5, #0xd
   16564:	strb	w8, [x7, x6]
   16568:	sub	x5, x5, #0xe
   1656c:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   16570:	ldrb	w1, [x1, x5]
   16574:	strb	w1, [x7, x5]
   16578:	b	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   1657c:	ldrb	w2, [x1, x0]
   16580:	strb	w2, [x7, x0]
   16584:	sub	x0, x0, #0x1
   16588:	cmn	x0, #0x1
   1658c:	b.eq	160e0 <__sanitizer_set_report_fd@@Base+0x2810>  // b.none
   16590:	ldrb	w2, [x1, x0]
   16594:	strb	w2, [x7, x0]
   16598:	sub	x0, x0, #0x1
   1659c:	cmn	x0, #0x1
   165a0:	b.ne	1657c <__sanitizer_set_report_fd@@Base+0x2cac>  // b.any
   165a4:	b	160e0 <__sanitizer_set_report_fd@@Base+0x2810>
   165a8:	ldrb	w6, [x1, x5]
   165ac:	strb	w6, [x7, x5]
   165b0:	sub	x5, x5, #0x1
   165b4:	cmn	x5, #0x1
   165b8:	b.eq	16258 <__sanitizer_set_report_fd@@Base+0x2988>  // b.none
   165bc:	ldrb	w6, [x1, x5]
   165c0:	strb	w6, [x7, x5]
   165c4:	sub	x5, x5, #0x1
   165c8:	cmn	x5, #0x1
   165cc:	b.ne	165a8 <__sanitizer_set_report_fd@@Base+0x2cd8>  // b.any
   165d0:	b	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   165d4:	mov	x5, #0x0                   	// #0
   165d8:	ldrb	w6, [x1, x5]
   165dc:	strb	w6, [x7, x5]
   165e0:	add	x5, x5, #0x1
   165e4:	cmp	x8, x5
   165e8:	b.ne	165d8 <__sanitizer_set_report_fd@@Base+0x2d08>  // b.any
   165ec:	b	16258 <__sanitizer_set_report_fd@@Base+0x2988>
   165f0:	mov	x0, #0x0                   	// #0
   165f4:	nop
   165f8:	ldrb	w2, [x1, x0]
   165fc:	strb	w2, [x7, x0]
   16600:	add	x0, x0, #0x1
   16604:	cmp	x5, x0
   16608:	b.ne	165f8 <__sanitizer_set_report_fd@@Base+0x2d28>  // b.any
   1660c:	add	x0, x4, x3
   16610:	b	160e4 <__sanitizer_set_report_fd@@Base+0x2814>
   16614:	nop
   16618:	ldrb	w3, [x0]
   1661c:	mov	x4, #0x0                   	// #0
   16620:	cbz	w3, 16680 <__sanitizer_set_report_fd@@Base+0x2db0>
   16624:	nop
   16628:	add	x4, x4, #0x1
   1662c:	add	x5, x0, x4
   16630:	ldrb	w3, [x0, x4]
   16634:	cbnz	w3, 16628 <__sanitizer_set_report_fd@@Base+0x2d58>
   16638:	add	x6, x0, x4
   1663c:	mov	x3, #0x0                   	// #0
   16640:	cbnz	x2, 16654 <__sanitizer_set_report_fd@@Base+0x2d84>
   16644:	b	16668 <__sanitizer_set_report_fd@@Base+0x2d98>
   16648:	strb	w7, [x6]
   1664c:	add	x6, x6, #0x1
   16650:	b.eq	16670 <__sanitizer_set_report_fd@@Base+0x2da0>  // b.none
   16654:	ldrb	w7, [x1, x3]
   16658:	add	x3, x3, #0x1
   1665c:	mov	x5, x6
   16660:	cmp	x2, x3
   16664:	cbnz	w7, 16648 <__sanitizer_set_report_fd@@Base+0x2d78>
   16668:	strb	wzr, [x5]
   1666c:	ret
   16670:	add	x4, x2, x4
   16674:	add	x5, x0, x4
   16678:	strb	wzr, [x5]
   1667c:	ret
   16680:	mov	x5, x0
   16684:	b	16638 <__sanitizer_set_report_fd@@Base+0x2d68>
   16688:	mov	x4, x0
   1668c:	ldrb	w0, [x1]
   16690:	cbz	w0, 16ce8 <__sanitizer_set_report_fd@@Base+0x3418>
   16694:	mov	x0, #0x0                   	// #0
   16698:	add	x0, x0, #0x1
   1669c:	ldrb	w3, [x1, x0]
   166a0:	cbnz	w3, 16698 <__sanitizer_set_report_fd@@Base+0x2dc8>
   166a4:	cmp	x2, x0
   166a8:	b.hi	16830 <__sanitizer_set_report_fd@@Base+0x2f60>  // b.pmore
   166ac:	cbnz	x2, 166b4 <__sanitizer_set_report_fd@@Base+0x2de4>
   166b0:	ret
   166b4:	cmp	x1, x4
   166b8:	sub	x5, x2, #0x1
   166bc:	b.ls	16b50 <__sanitizer_set_report_fd@@Base+0x3280>  // b.plast
   166c0:	cmp	x5, #0x0
   166c4:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   166c8:	add	x3, x1, #0xf
   166cc:	sub	x2, x2, #0x2
   166d0:	sub	x3, x3, x4
   166d4:	cmp	x3, #0x1e
   166d8:	ccmp	x2, #0xe, #0x0, hi  // hi = pmore
   166dc:	b.ls	16d10 <__sanitizer_set_report_fd@@Base+0x3440>  // b.plast
   166e0:	and	x3, x5, #0xfffffffffffffff0
   166e4:	mov	x2, #0x0                   	// #0
   166e8:	ldr	q0, [x1, x2]
   166ec:	str	q0, [x4, x2]
   166f0:	add	x2, x2, #0x10
   166f4:	cmp	x2, x3
   166f8:	b.ne	166e8 <__sanitizer_set_report_fd@@Base+0x2e18>  // b.any
   166fc:	tst	x5, #0xf
   16700:	and	x2, x5, #0xfffffffffffffff0
   16704:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16708:	ldrb	w6, [x1, x2]
   1670c:	add	x3, x2, #0x1
   16710:	strb	w6, [x4, x2]
   16714:	cmp	x5, x3
   16718:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   1671c:	ldrb	w7, [x1, x3]
   16720:	add	x6, x2, #0x2
   16724:	strb	w7, [x4, x3]
   16728:	cmp	x5, x6
   1672c:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16730:	ldrb	w7, [x1, x6]
   16734:	add	x3, x2, #0x3
   16738:	strb	w7, [x4, x6]
   1673c:	cmp	x5, x3
   16740:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16744:	ldrb	w7, [x1, x3]
   16748:	add	x6, x2, #0x4
   1674c:	strb	w7, [x4, x3]
   16750:	cmp	x5, x6
   16754:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16758:	ldrb	w7, [x1, x6]
   1675c:	add	x3, x2, #0x5
   16760:	strb	w7, [x4, x6]
   16764:	cmp	x5, x3
   16768:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   1676c:	ldrb	w7, [x1, x3]
   16770:	add	x6, x2, #0x6
   16774:	strb	w7, [x4, x3]
   16778:	cmp	x5, x6
   1677c:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16780:	ldrb	w7, [x1, x6]
   16784:	add	x3, x2, #0x7
   16788:	strb	w7, [x4, x6]
   1678c:	cmp	x5, x3
   16790:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16794:	ldrb	w7, [x1, x3]
   16798:	add	x6, x2, #0x8
   1679c:	strb	w7, [x4, x3]
   167a0:	cmp	x5, x6
   167a4:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   167a8:	ldrb	w7, [x1, x6]
   167ac:	add	x3, x2, #0x9
   167b0:	strb	w7, [x4, x6]
   167b4:	cmp	x5, x3
   167b8:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   167bc:	ldrb	w6, [x1, x3]
   167c0:	add	x7, x2, #0xa
   167c4:	strb	w6, [x4, x3]
   167c8:	cmp	x5, x7
   167cc:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   167d0:	ldrb	w3, [x1, x7]
   167d4:	add	x6, x2, #0xb
   167d8:	strb	w3, [x4, x7]
   167dc:	cmp	x5, x6
   167e0:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   167e4:	ldrb	w7, [x1, x6]
   167e8:	add	x3, x2, #0xc
   167ec:	strb	w7, [x4, x6]
   167f0:	cmp	x5, x3
   167f4:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   167f8:	ldrb	w7, [x1, x3]
   167fc:	add	x6, x2, #0xd
   16800:	strb	w7, [x4, x3]
   16804:	cmp	x5, x6
   16808:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   1680c:	ldrb	w3, [x1, x6]
   16810:	add	x2, x2, #0xe
   16814:	strb	w3, [x4, x6]
   16818:	cmp	x5, x2
   1681c:	b.le	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16820:	ldrb	w1, [x1, x2]
   16824:	strb	w1, [x4, x2]
   16828:	strb	wzr, [x4, x5]
   1682c:	ret
   16830:	cmp	x1, x4
   16834:	add	x6, x0, #0x1
   16838:	b.ls	169a4 <__sanitizer_set_report_fd@@Base+0x30d4>  // b.plast
   1683c:	cmp	x6, #0x0
   16840:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16844:	add	x2, x1, #0xf
   16848:	sub	x2, x2, x4
   1684c:	cmp	x2, #0x1e
   16850:	ccmp	x0, #0xe, #0x0, hi  // hi = pmore
   16854:	b.ls	16cf0 <__sanitizer_set_report_fd@@Base+0x3420>  // b.plast
   16858:	and	x3, x6, #0xfffffffffffffff0
   1685c:	mov	x2, #0x0                   	// #0
   16860:	ldr	q0, [x1, x2]
   16864:	str	q0, [x4, x2]
   16868:	add	x2, x2, #0x10
   1686c:	cmp	x2, x3
   16870:	b.ne	16860 <__sanitizer_set_report_fd@@Base+0x2f90>  // b.any
   16874:	tst	x6, #0xf
   16878:	and	x2, x6, #0xfffffffffffffff0
   1687c:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16880:	ldrb	w5, [x1, x2]
   16884:	add	x3, x2, #0x1
   16888:	strb	w5, [x4, x2]
   1688c:	cmp	x6, x3
   16890:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16894:	ldrb	w7, [x1, x3]
   16898:	add	x5, x2, #0x2
   1689c:	strb	w7, [x4, x3]
   168a0:	cmp	x6, x5
   168a4:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   168a8:	ldrb	w7, [x1, x5]
   168ac:	add	x3, x2, #0x3
   168b0:	strb	w7, [x4, x5]
   168b4:	cmp	x6, x3
   168b8:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   168bc:	ldrb	w7, [x1, x3]
   168c0:	add	x5, x2, #0x4
   168c4:	strb	w7, [x4, x3]
   168c8:	cmp	x6, x5
   168cc:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   168d0:	ldrb	w7, [x1, x5]
   168d4:	add	x3, x2, #0x5
   168d8:	strb	w7, [x4, x5]
   168dc:	cmp	x6, x3
   168e0:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   168e4:	ldrb	w7, [x1, x3]
   168e8:	add	x5, x2, #0x6
   168ec:	strb	w7, [x4, x3]
   168f0:	cmp	x6, x5
   168f4:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   168f8:	ldrb	w7, [x1, x5]
   168fc:	add	x3, x2, #0x7
   16900:	strb	w7, [x4, x5]
   16904:	cmp	x6, x3
   16908:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   1690c:	ldrb	w7, [x1, x3]
   16910:	add	x5, x2, #0x8
   16914:	strb	w7, [x4, x3]
   16918:	cmp	x6, x5
   1691c:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16920:	ldrb	w7, [x1, x5]
   16924:	add	x3, x2, #0x9
   16928:	strb	w7, [x4, x5]
   1692c:	cmp	x6, x3
   16930:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16934:	ldrb	w7, [x1, x3]
   16938:	add	x5, x2, #0xa
   1693c:	strb	w7, [x4, x3]
   16940:	cmp	x6, x5
   16944:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16948:	ldrb	w3, [x1, x5]
   1694c:	add	x7, x2, #0xb
   16950:	strb	w3, [x4, x5]
   16954:	cmp	x6, x7
   16958:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   1695c:	ldrb	w5, [x1, x7]
   16960:	add	x3, x2, #0xc
   16964:	strb	w5, [x4, x7]
   16968:	cmp	x6, x3
   1696c:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16970:	ldrb	w7, [x1, x3]
   16974:	add	x5, x2, #0xd
   16978:	strb	w7, [x4, x3]
   1697c:	cmp	x6, x5
   16980:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16984:	ldrb	w3, [x1, x5]
   16988:	add	x2, x2, #0xe
   1698c:	strb	w3, [x4, x5]
   16990:	cmp	x6, x2
   16994:	b.le	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16998:	ldrb	w1, [x1, x2]
   1699c:	strb	w1, [x4, x2]
   169a0:	ret
   169a4:	cmp	x6, #0x0
   169a8:	ccmp	x1, x4, #0x2, gt
   169ac:	b.cs	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.hs, b.nlast
   169b0:	sub	x3, x0, #0xf
   169b4:	add	x2, x1, x6
   169b8:	add	x7, x4, x3
   169bc:	add	x3, x1, x3
   169c0:	cmp	x2, x7
   169c4:	add	x2, x4, x6
   169c8:	ccmp	x2, x3, #0x0, hi  // hi = pmore
   169cc:	mov	x2, x0
   169d0:	ccmp	x0, #0xe, #0x0, ls  // ls = plast
   169d4:	b.ls	16b24 <__sanitizer_set_report_fd@@Base+0x3254>  // b.plast
   169d8:	neg	x5, x6, lsr #4
   169dc:	mov	x2, #0x0                   	// #0
   169e0:	lsl	x5, x5, #4
   169e4:	nop
   169e8:	ldr	q0, [x3, x2]
   169ec:	str	q0, [x7, x2]
   169f0:	sub	x2, x2, #0x10
   169f4:	cmp	x2, x5
   169f8:	b.ne	169e8 <__sanitizer_set_report_fd@@Base+0x3118>  // b.any
   169fc:	and	x2, x6, #0xfffffffffffffff0
   16a00:	cmp	x6, x2
   16a04:	sub	x2, x0, x2
   16a08:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a0c:	ldrb	w5, [x1, x2]
   16a10:	sub	x3, x2, #0x1
   16a14:	strb	w5, [x4, x2]
   16a18:	cbz	x2, 166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16a1c:	ldrb	w5, [x1, x3]
   16a20:	cmp	x2, #0x1
   16a24:	strb	w5, [x4, x3]
   16a28:	sub	x3, x2, #0x2
   16a2c:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a30:	ldrb	w5, [x1, x3]
   16a34:	cmp	x2, #0x2
   16a38:	strb	w5, [x4, x3]
   16a3c:	sub	x3, x2, #0x3
   16a40:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a44:	ldrb	w5, [x1, x3]
   16a48:	cmp	x2, #0x3
   16a4c:	strb	w5, [x4, x3]
   16a50:	sub	x3, x2, #0x4
   16a54:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a58:	ldrb	w5, [x1, x3]
   16a5c:	cmp	x2, #0x4
   16a60:	strb	w5, [x4, x3]
   16a64:	sub	x3, x2, #0x5
   16a68:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a6c:	ldrb	w5, [x1, x3]
   16a70:	cmp	x2, #0x5
   16a74:	strb	w5, [x4, x3]
   16a78:	sub	x3, x2, #0x6
   16a7c:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a80:	ldrb	w5, [x1, x3]
   16a84:	cmp	x2, #0x6
   16a88:	strb	w5, [x4, x3]
   16a8c:	sub	x3, x2, #0x7
   16a90:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16a94:	ldrb	w5, [x1, x3]
   16a98:	cmp	x2, #0x7
   16a9c:	strb	w5, [x4, x3]
   16aa0:	sub	x3, x2, #0x8
   16aa4:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16aa8:	ldrb	w5, [x1, x3]
   16aac:	cmp	x2, #0x8
   16ab0:	strb	w5, [x4, x3]
   16ab4:	sub	x3, x2, #0x9
   16ab8:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16abc:	ldrb	w5, [x1, x3]
   16ac0:	cmp	x2, #0x9
   16ac4:	strb	w5, [x4, x3]
   16ac8:	sub	x3, x2, #0xa
   16acc:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16ad0:	ldrb	w5, [x1, x3]
   16ad4:	cmp	x2, #0xa
   16ad8:	strb	w5, [x4, x3]
   16adc:	sub	x3, x2, #0xb
   16ae0:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16ae4:	ldrb	w5, [x1, x3]
   16ae8:	cmp	x2, #0xb
   16aec:	strb	w5, [x4, x3]
   16af0:	sub	x3, x2, #0xc
   16af4:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16af8:	ldrb	w5, [x1, x3]
   16afc:	cmp	x2, #0xc
   16b00:	strb	w5, [x4, x3]
   16b04:	sub	x3, x2, #0xd
   16b08:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16b0c:	ldrb	w5, [x1, x3]
   16b10:	cmp	x2, #0xd
   16b14:	strb	w5, [x4, x3]
   16b18:	sub	x2, x2, #0xe
   16b1c:	b.ne	16998 <__sanitizer_set_report_fd@@Base+0x30c8>  // b.any
   16b20:	ret
   16b24:	ldrb	w3, [x1, x2]
   16b28:	strb	w3, [x4, x2]
   16b2c:	sub	x2, x2, #0x1
   16b30:	cmn	x2, #0x1
   16b34:	b.eq	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>  // b.none
   16b38:	ldrb	w3, [x1, x2]
   16b3c:	strb	w3, [x4, x2]
   16b40:	sub	x2, x2, #0x1
   16b44:	cmn	x2, #0x1
   16b48:	b.ne	16b24 <__sanitizer_set_report_fd@@Base+0x3254>  // b.any
   16b4c:	b	166b0 <__sanitizer_set_report_fd@@Base+0x2de0>
   16b50:	cmp	x5, #0x0
   16b54:	ccmp	x1, x4, #0x2, gt
   16b58:	b.cs	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.hs, b.nlast
   16b5c:	sub	x6, x2, #0x11
   16b60:	add	x3, x1, x5
   16b64:	add	x8, x4, x6
   16b68:	add	x6, x1, x6
   16b6c:	cmp	x3, x8
   16b70:	add	x3, x4, x5
   16b74:	sub	x2, x2, #0x2
   16b78:	ccmp	x3, x6, #0x0, hi  // hi = pmore
   16b7c:	ccmp	x2, #0xe, #0x0, ls  // ls = plast
   16b80:	b.ls	16cd0 <__sanitizer_set_report_fd@@Base+0x3400>  // b.plast
   16b84:	neg	x7, x5, lsr #4
   16b88:	mov	x3, #0x0                   	// #0
   16b8c:	lsl	x7, x7, #4
   16b90:	ldr	q0, [x6, x3]
   16b94:	str	q0, [x8, x3]
   16b98:	sub	x3, x3, #0x10
   16b9c:	cmp	x3, x7
   16ba0:	b.ne	16b90 <__sanitizer_set_report_fd@@Base+0x32c0>  // b.any
   16ba4:	and	x3, x5, #0xfffffffffffffff0
   16ba8:	sub	x2, x2, x3
   16bac:	cmp	x5, x3
   16bb0:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16bb4:	ldrb	w6, [x1, x2]
   16bb8:	sub	x3, x2, #0x1
   16bbc:	strb	w6, [x4, x2]
   16bc0:	cbz	x2, 16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16bc4:	ldrb	w6, [x1, x3]
   16bc8:	cmp	x2, #0x1
   16bcc:	strb	w6, [x4, x3]
   16bd0:	sub	x3, x2, #0x2
   16bd4:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16bd8:	ldrb	w6, [x1, x3]
   16bdc:	cmp	x2, #0x2
   16be0:	strb	w6, [x4, x3]
   16be4:	sub	x3, x2, #0x3
   16be8:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16bec:	ldrb	w6, [x1, x3]
   16bf0:	cmp	x2, #0x3
   16bf4:	strb	w6, [x4, x3]
   16bf8:	sub	x3, x2, #0x4
   16bfc:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c00:	ldrb	w6, [x1, x3]
   16c04:	cmp	x2, #0x4
   16c08:	strb	w6, [x4, x3]
   16c0c:	sub	x3, x2, #0x5
   16c10:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c14:	ldrb	w6, [x1, x3]
   16c18:	cmp	x2, #0x5
   16c1c:	strb	w6, [x4, x3]
   16c20:	sub	x3, x2, #0x6
   16c24:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c28:	ldrb	w6, [x1, x3]
   16c2c:	cmp	x2, #0x6
   16c30:	strb	w6, [x4, x3]
   16c34:	sub	x3, x2, #0x7
   16c38:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c3c:	ldrb	w6, [x1, x3]
   16c40:	cmp	x2, #0x7
   16c44:	strb	w6, [x4, x3]
   16c48:	sub	x3, x2, #0x8
   16c4c:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c50:	ldrb	w6, [x1, x3]
   16c54:	cmp	x2, #0x8
   16c58:	strb	w6, [x4, x3]
   16c5c:	sub	x3, x2, #0x9
   16c60:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c64:	ldrb	w6, [x1, x3]
   16c68:	cmp	x2, #0x9
   16c6c:	strb	w6, [x4, x3]
   16c70:	sub	x3, x2, #0xa
   16c74:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c78:	ldrb	w6, [x1, x3]
   16c7c:	cmp	x2, #0xa
   16c80:	strb	w6, [x4, x3]
   16c84:	sub	x3, x2, #0xb
   16c88:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16c8c:	ldrb	w6, [x1, x3]
   16c90:	cmp	x2, #0xb
   16c94:	strb	w6, [x4, x3]
   16c98:	sub	x3, x2, #0xc
   16c9c:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16ca0:	ldrb	w6, [x1, x3]
   16ca4:	cmp	x2, #0xc
   16ca8:	strb	w6, [x4, x3]
   16cac:	sub	x3, x2, #0xd
   16cb0:	b.eq	16828 <__sanitizer_set_report_fd@@Base+0x2f58>  // b.none
   16cb4:	ldrb	w6, [x1, x3]
   16cb8:	cmp	x2, #0xd
   16cbc:	strb	w6, [x4, x3]
   16cc0:	sub	x2, x2, #0xe
   16cc4:	b.ne	16820 <__sanitizer_set_report_fd@@Base+0x2f50>  // b.any
   16cc8:	strb	wzr, [x4, x5]
   16ccc:	b	1682c <__sanitizer_set_report_fd@@Base+0x2f5c>
   16cd0:	ldrb	w3, [x1, x2]
   16cd4:	strb	w3, [x4, x2]
   16cd8:	sub	x2, x2, #0x1
   16cdc:	cmn	x2, #0x1
   16ce0:	b.ne	16cd0 <__sanitizer_set_report_fd@@Base+0x3400>  // b.any
   16ce4:	b	16828 <__sanitizer_set_report_fd@@Base+0x2f58>
   16ce8:	mov	x0, #0x0                   	// #0
   16cec:	b	166a4 <__sanitizer_set_report_fd@@Base+0x2dd4>
   16cf0:	mov	x2, #0x0                   	// #0
   16cf4:	nop
   16cf8:	ldrb	w3, [x1, x2]
   16cfc:	strb	w3, [x4, x2]
   16d00:	add	x2, x2, #0x1
   16d04:	cmp	x6, x2
   16d08:	b.ne	16cf8 <__sanitizer_set_report_fd@@Base+0x3428>  // b.any
   16d0c:	ret
   16d10:	mov	x2, #0x0                   	// #0
   16d14:	nop
   16d18:	ldrb	w3, [x1, x2]
   16d1c:	strb	w3, [x4, x2]
   16d20:	add	x2, x2, #0x1
   16d24:	cmp	x5, x2
   16d28:	b.ne	16d18 <__sanitizer_set_report_fd@@Base+0x3448>  // b.any
   16d2c:	strb	wzr, [x4, x5]
   16d30:	b	1682c <__sanitizer_set_report_fd@@Base+0x2f5c>
   16d34:	nop
   16d38:	cbz	x2, 16d84 <__sanitizer_set_report_fd@@Base+0x34b4>
   16d3c:	mov	x3, #0x0                   	// #0
   16d40:	b	16d54 <__sanitizer_set_report_fd@@Base+0x3484>
   16d44:	strb	w5, [x0, x3]
   16d48:	add	x3, x3, #0x1
   16d4c:	cmp	x2, x3
   16d50:	b.eq	16d84 <__sanitizer_set_report_fd@@Base+0x34b4>  // b.none
   16d54:	ldrb	w5, [x1, x3]
   16d58:	add	x4, x0, x3
   16d5c:	cbnz	w5, 16d44 <__sanitizer_set_report_fd@@Base+0x3474>
   16d60:	sub	x2, x2, x3
   16d64:	orr	x3, x2, x4
   16d68:	ands	x3, x3, #0xf
   16d6c:	b.eq	16d88 <__sanitizer_set_report_fd@@Base+0x34b8>  // b.none
   16d70:	cbz	x2, 16d84 <__sanitizer_set_report_fd@@Base+0x34b4>
   16d74:	add	x2, x4, x2
   16d78:	strb	wzr, [x4], #1
   16d7c:	cmp	x4, x2
   16d80:	b.ne	16d78 <__sanitizer_set_report_fd@@Base+0x34a8>  // b.any
   16d84:	ret
   16d88:	and	x2, x2, #0xfffffffffffffff8
   16d8c:	add	x1, x4, x2
   16d90:	cmp	x1, x4
   16d94:	b.ls	16d84 <__sanitizer_set_report_fd@@Base+0x34b4>  // b.plast
   16d98:	movi	v0.4s, #0x0
   16d9c:	mvn	x2, x4
   16da0:	add	x1, x1, x2
   16da4:	lsr	x1, x1, #4
   16da8:	add	x1, x1, #0x1
   16dac:	nop
   16db0:	lsl	x2, x3, #4
   16db4:	add	x3, x3, #0x1
   16db8:	cmp	x3, x1
   16dbc:	str	q0, [x4, x2]
   16dc0:	b.cc	16db0 <__sanitizer_set_report_fd@@Base+0x34e0>  // b.lo, b.ul, b.last
   16dc4:	ret
   16dc8:	mov	x3, x0
   16dcc:	mov	x0, #0x0                   	// #0
   16dd0:	cbnz	x1, 16de4 <__sanitizer_set_report_fd@@Base+0x3514>
   16dd4:	b	16dec <__sanitizer_set_report_fd@@Base+0x351c>
   16dd8:	add	x0, x0, #0x1
   16ddc:	cmp	x1, x0
   16de0:	b.eq	16dec <__sanitizer_set_report_fd@@Base+0x351c>  // b.none
   16de4:	ldrb	w2, [x3, x0]
   16de8:	cbnz	w2, 16dd8 <__sanitizer_set_report_fd@@Base+0x3508>
   16dec:	ret
   16df0:	mov	x8, x0
   16df4:	ldrb	w0, [x0]
   16df8:	mov	x2, #0x0                   	// #0
   16dfc:	cbz	w0, 16e0c <__sanitizer_set_report_fd@@Base+0x353c>
   16e00:	add	x2, x2, #0x1
   16e04:	ldrb	w3, [x8, x2]
   16e08:	cbnz	w3, 16e00 <__sanitizer_set_report_fd@@Base+0x3530>
   16e0c:	ldrb	w0, [x1]
   16e10:	cbz	w0, 16e78 <__sanitizer_set_report_fd@@Base+0x35a8>
   16e14:	mov	x3, #0x0                   	// #0
   16e18:	mov	x4, x3
   16e1c:	add	x3, x3, #0x1
   16e20:	ldrb	w5, [x1, x3]
   16e24:	cbnz	w5, 16e18 <__sanitizer_set_report_fd@@Base+0x3548>
   16e28:	cmp	x3, x2
   16e2c:	b.hi	16e70 <__sanitizer_set_report_fd@@Base+0x35a0>  // b.pmore
   16e30:	sub	x3, x2, x3
   16e34:	mov	x9, #0x0                   	// #0
   16e38:	add	x0, x8, x9
   16e3c:	mov	x2, #0x0                   	// #0
   16e40:	b	16e50 <__sanitizer_set_report_fd@@Base+0x3580>
   16e44:	cmp	x4, x2
   16e48:	b.eq	16e74 <__sanitizer_set_report_fd@@Base+0x35a4>  // b.none
   16e4c:	mov	x2, x7
   16e50:	ldrb	w6, [x0, x2]
   16e54:	add	x7, x2, #0x1
   16e58:	ldrb	w5, [x1, x2]
   16e5c:	cmp	w6, w5
   16e60:	b.eq	16e44 <__sanitizer_set_report_fd@@Base+0x3574>  // b.none
   16e64:	add	x9, x9, #0x1
   16e68:	cmp	x3, x9
   16e6c:	b.cs	16e38 <__sanitizer_set_report_fd@@Base+0x3568>  // b.hs, b.nlast
   16e70:	mov	x0, #0x0                   	// #0
   16e74:	ret
   16e78:	mov	x0, x8
   16e7c:	ret
   16e80:	cmp	w2, #0xa
   16e84:	b.ne	16f78 <__sanitizer_set_report_fd@@Base+0x36a8>  // b.any
   16e88:	ldrb	w2, [x0]
   16e8c:	cmp	w2, #0x20
   16e90:	b.eq	16f38 <__sanitizer_set_report_fd@@Base+0x3668>  // b.none
   16e94:	sub	w3, w2, #0x9
   16e98:	and	w3, w3, #0xff
   16e9c:	cmp	w3, #0x4
   16ea0:	b.ls	16f38 <__sanitizer_set_report_fd@@Base+0x3668>  // b.plast
   16ea4:	cmp	w2, #0x2b
   16ea8:	b.eq	16f64 <__sanitizer_set_report_fd@@Base+0x3694>  // b.none
   16eac:	cmp	w2, #0x2d
   16eb0:	b.eq	16f40 <__sanitizer_set_report_fd@@Base+0x3670>  // b.none
   16eb4:	mov	w4, w2
   16eb8:	mov	x5, x0
   16ebc:	mov	w8, #0x1                   	// #1
   16ec0:	sub	w2, w2, #0x30
   16ec4:	cmp	w2, #0x9
   16ec8:	b.hi	16f9c <__sanitizer_set_report_fd@@Base+0x36cc>  // b.pmore
   16ecc:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   16ed0:	mov	x3, #0x0                   	// #0
   16ed4:	movk	x7, #0x1999, lsl #48
   16ed8:	mov	x6, #0xffffffffffffffff    	// #-1
   16edc:	nop
   16ee0:	sub	w0, w4, #0x30
   16ee4:	add	x2, x3, x3, lsl #2
   16ee8:	cmp	x3, x7
   16eec:	ldrb	w4, [x5, #1]!
   16ef0:	sxtw	x0, w0
   16ef4:	lsl	x2, x2, #1
   16ef8:	csel	x2, x2, x6, ls  // ls = plast
   16efc:	mvn	x3, x0
   16f00:	cmp	x3, x2
   16f04:	add	x0, x0, x2
   16f08:	sub	w2, w4, #0x30
   16f0c:	csel	x3, x0, x6, cs  // cs = hs, nlast
   16f10:	cmp	w2, #0x9
   16f14:	b.ls	16ee0 <__sanitizer_set_report_fd@@Base+0x3610>  // b.plast
   16f18:	cbz	x1, 16f20 <__sanitizer_set_report_fd@@Base+0x3650>
   16f1c:	str	x5, [x1]
   16f20:	cmp	w8, #0x1
   16f24:	b.ne	16f54 <__sanitizer_set_report_fd@@Base+0x3684>  // b.any
   16f28:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   16f2c:	cmp	x3, x0
   16f30:	csel	x0, x3, x0, ls  // ls = plast
   16f34:	ret
   16f38:	add	x0, x0, #0x1
   16f3c:	b	16e88 <__sanitizer_set_report_fd@@Base+0x35b8>
   16f40:	ldrb	w2, [x0, #1]
   16f44:	add	x5, x0, #0x1
   16f48:	mov	w8, #0xffffffff            	// #-1
   16f4c:	mov	w4, w2
   16f50:	b	16ec0 <__sanitizer_set_report_fd@@Base+0x35f0>
   16f54:	cmp	x3, #0x0
   16f58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   16f5c:	csneg	x0, x0, x3, lt  // lt = tstop
   16f60:	ret
   16f64:	ldrb	w2, [x0, #1]
   16f68:	add	x5, x0, #0x1
   16f6c:	mov	w8, #0x1                   	// #1
   16f70:	mov	w4, w2
   16f74:	b	16ec0 <__sanitizer_set_report_fd@@Base+0x35f0>
   16f78:	str	x30, [sp, #-16]!
   16f7c:	sxtw	x3, w2
   16f80:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   16f84:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   16f88:	add	x0, x0, #0x838
   16f8c:	add	x2, x2, #0x820
   16f90:	mov	x4, #0xa                   	// #10
   16f94:	mov	w1, #0xe5                  	// #229
   16f98:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   16f9c:	mov	x5, x0
   16fa0:	mov	x3, #0x0                   	// #0
   16fa4:	cbnz	x1, 16f1c <__sanitizer_set_report_fd@@Base+0x364c>
   16fa8:	mov	x0, #0x0                   	// #0
   16fac:	ret
   16fb0:	mov	w2, #0xa                   	// #10
   16fb4:	mov	x1, #0x0                   	// #0
   16fb8:	b	16e80 <__sanitizer_set_report_fd@@Base+0x35b0>
   16fbc:	nop
   16fc0:	mov	x4, #0x10000000000         	// #1099511627776
   16fc4:	cmp	x1, x4
   16fc8:	b.hi	172d8 <__sanitizer_set_report_fd@@Base+0x3a08>  // b.pmore
   16fcc:	add	x4, x0, x1
   16fd0:	add	x2, x0, #0x7
   16fd4:	and	x2, x2, #0xfffffffffffffff8
   16fd8:	cmp	x0, x4
   16fdc:	and	x6, x4, #0xfffffffffffffff8
   16fe0:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   16fe4:	mov	x8, x2
   16fe8:	mov	x7, x6
   16fec:	mov	x1, x0
   16ff0:	mov	x3, #0x0                   	// #0
   16ff4:	b.cs	1700c <__sanitizer_set_report_fd@@Base+0x373c>  // b.hs, b.nlast
   16ff8:	ldrb	w5, [x1], #1
   16ffc:	cmp	x2, x1
   17000:	orr	x3, x3, x5
   17004:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   17008:	b.hi	16ff8 <__sanitizer_set_report_fd@@Base+0x3728>  // b.pmore
   1700c:	cmp	x2, x6
   17010:	b.cs	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.hs, b.nlast
   17014:	sub	x1, x6, x2
   17018:	add	x9, x2, #0x1
   1701c:	sub	x1, x1, #0x1
   17020:	cmp	x6, x9
   17024:	mov	x10, #0x1                   	// #1
   17028:	lsr	x5, x1, #3
   1702c:	csinc	x5, x10, x5, cc  // cc = lo, ul, last
   17030:	cmp	x1, #0x27
   17034:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   17038:	b.cc	1707c <__sanitizer_set_report_fd@@Base+0x37ac>  // b.lo, b.ul, b.last
   1703c:	movi	v0.4s, #0x0
   17040:	lsr	x1, x5, #1
   17044:	add	x1, x2, x1, lsl #4
   17048:	ldr	q1, [x2], #16
   1704c:	orr	v0.16b, v0.16b, v1.16b
   17050:	cmp	x2, x1
   17054:	b.ne	17048 <__sanitizer_set_report_fd@@Base+0x3778>  // b.any
   17058:	movi	v1.4s, #0x0
   1705c:	and	x1, x5, #0xfffffffffffffffe
   17060:	cmp	x5, x1
   17064:	add	x8, x8, x1, lsl #3
   17068:	ext	v1.16b, v0.16b, v1.16b, #8
   1706c:	orr	v0.16b, v0.16b, v1.16b
   17070:	mov	x1, v0.d[0]
   17074:	orr	x3, x3, x1
   17078:	b.eq	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.none
   1707c:	mov	x1, x8
   17080:	ldr	x2, [x1], #8
   17084:	orr	x3, x3, x2
   17088:	cmp	x6, x1
   1708c:	b.ls	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.plast
   17090:	ldr	x1, [x8, #8]
   17094:	add	x2, x8, #0x10
   17098:	cmp	x6, x2
   1709c:	orr	x3, x3, x1
   170a0:	b.ls	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.plast
   170a4:	ldr	x1, [x8, #16]
   170a8:	add	x2, x8, #0x18
   170ac:	cmp	x6, x2
   170b0:	orr	x3, x3, x1
   170b4:	b.ls	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.plast
   170b8:	ldr	x1, [x8, #24]
   170bc:	add	x2, x8, #0x20
   170c0:	cmp	x6, x2
   170c4:	orr	x3, x3, x1
   170c8:	b.ls	170d4 <__sanitizer_set_report_fd@@Base+0x3804>  // b.plast
   170cc:	ldr	x1, [x8, #32]
   170d0:	orr	x3, x3, x1
   170d4:	cmp	x0, x6
   170d8:	b.hi	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.pmore
   170dc:	cmp	x4, x6
   170e0:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   170e4:	add	x1, x6, #0x1
   170e8:	sub	x0, x4, #0x1
   170ec:	cmp	x4, x1
   170f0:	sub	x2, x4, x6
   170f4:	sub	x0, x0, x6
   170f8:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
   170fc:	cmp	x0, #0xe
   17100:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   17104:	b.cc	171ac <__sanitizer_set_report_fd@@Base+0x38dc>  // b.lo, b.ul, b.last
   17108:	sub	x1, x2, #0x10
   1710c:	mov	x0, #0x0                   	// #0
   17110:	movi	v5.4s, #0x0
   17114:	lsr	x1, x1, #4
   17118:	add	x1, x1, #0x1
   1711c:	nop
   17120:	ldr	q2, [x6], #16
   17124:	add	x0, x0, #0x1
   17128:	cmp	x1, x0
   1712c:	uxtl	v3.8h, v2.8b
   17130:	uxtl2	v2.8h, v2.16b
   17134:	uxtl	v0.4s, v3.4h
   17138:	uxtl2	v3.4s, v3.8h
   1713c:	uxtl	v4.4s, v2.4h
   17140:	uxtl2	v2.4s, v2.8h
   17144:	uxtl	v1.2d, v0.2s
   17148:	uxtl2	v0.2d, v0.4s
   1714c:	uxtl	v16.2d, v3.2s
   17150:	uxtl2	v3.2d, v3.4s
   17154:	uxtl	v7.2d, v4.2s
   17158:	orr	v1.16b, v1.16b, v0.16b
   1715c:	uxtl2	v4.2d, v4.4s
   17160:	uxtl	v6.2d, v2.2s
   17164:	uxtl2	v2.2d, v2.4s
   17168:	orr	v0.16b, v1.16b, v16.16b
   1716c:	orr	v0.16b, v0.16b, v3.16b
   17170:	orr	v0.16b, v0.16b, v7.16b
   17174:	orr	v0.16b, v0.16b, v4.16b
   17178:	orr	v0.16b, v0.16b, v6.16b
   1717c:	orr	v0.16b, v0.16b, v2.16b
   17180:	orr	v5.16b, v5.16b, v0.16b
   17184:	b.hi	17120 <__sanitizer_set_report_fd@@Base+0x3850>  // b.pmore
   17188:	movi	v0.4s, #0x0
   1718c:	lsl	x1, x1, #4
   17190:	add	x7, x7, x1
   17194:	cmp	x2, x1
   17198:	ext	v0.16b, v5.16b, v0.16b, #8
   1719c:	orr	v5.16b, v5.16b, v0.16b
   171a0:	mov	x0, v5.d[0]
   171a4:	orr	x3, x3, x0
   171a8:	b.eq	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.none
   171ac:	mov	x0, x7
   171b0:	ldrb	w1, [x0], #1
   171b4:	orr	x3, x3, x1
   171b8:	cmp	x4, x0
   171bc:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   171c0:	ldrb	w0, [x7, #1]
   171c4:	add	x1, x7, #0x2
   171c8:	cmp	x4, x1
   171cc:	orr	x3, x3, x0
   171d0:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   171d4:	ldrb	w0, [x7, #2]
   171d8:	add	x1, x7, #0x3
   171dc:	cmp	x4, x1
   171e0:	orr	x3, x3, x0
   171e4:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   171e8:	ldrb	w0, [x7, #3]
   171ec:	add	x1, x7, #0x4
   171f0:	cmp	x4, x1
   171f4:	orr	x3, x3, x0
   171f8:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   171fc:	ldrb	w0, [x7, #4]
   17200:	add	x1, x7, #0x5
   17204:	cmp	x4, x1
   17208:	orr	x3, x3, x0
   1720c:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17210:	ldrb	w0, [x7, #5]
   17214:	add	x1, x7, #0x6
   17218:	cmp	x4, x1
   1721c:	orr	x3, x3, x0
   17220:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17224:	ldrb	w0, [x7, #6]
   17228:	add	x1, x7, #0x7
   1722c:	cmp	x4, x1
   17230:	orr	x3, x3, x0
   17234:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17238:	ldrb	w0, [x7, #7]
   1723c:	add	x1, x7, #0x8
   17240:	cmp	x4, x1
   17244:	orr	x3, x3, x0
   17248:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   1724c:	ldrb	w0, [x7, #8]
   17250:	add	x1, x7, #0x9
   17254:	cmp	x4, x1
   17258:	orr	x3, x3, x0
   1725c:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17260:	ldrb	w0, [x7, #9]
   17264:	add	x1, x7, #0xa
   17268:	cmp	x4, x1
   1726c:	orr	x3, x3, x0
   17270:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17274:	ldrb	w0, [x7, #10]
   17278:	add	x1, x7, #0xb
   1727c:	cmp	x4, x1
   17280:	orr	x3, x3, x0
   17284:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   17288:	ldrb	w0, [x7, #11]
   1728c:	add	x1, x7, #0xc
   17290:	cmp	x4, x1
   17294:	orr	x3, x3, x0
   17298:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   1729c:	ldrb	w0, [x7, #12]
   172a0:	add	x1, x7, #0xd
   172a4:	cmp	x4, x1
   172a8:	orr	x3, x3, x0
   172ac:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   172b0:	ldrb	w0, [x7, #13]
   172b4:	add	x1, x7, #0xe
   172b8:	cmp	x4, x1
   172bc:	orr	x3, x3, x0
   172c0:	b.ls	172cc <__sanitizer_set_report_fd@@Base+0x39fc>  // b.plast
   172c4:	ldrb	w0, [x7, #14]
   172c8:	orr	x3, x3, x0
   172cc:	cmp	x3, #0x0
   172d0:	cset	w0, eq  // eq = none
   172d4:	ret
   172d8:	str	x30, [sp, #-16]!
   172dc:	mov	x3, x1
   172e0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   172e4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   172e8:	add	x2, x2, #0x878
   172ec:	add	x0, x0, #0x838
   172f0:	mov	w1, #0x104                 	// #260
   172f4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   172f8:	mov	x1, #0x4810                	// #18448
   172fc:	add	x0, x0, x1
   17300:	b	17f20 <__sanitizer_set_report_fd@@Base+0x4650>
   17304:	nop
   17308:	stp	x19, x20, [sp, #-48]!
   1730c:	mov	x20, x0
   17310:	stp	x21, x22, [sp, #16]
   17314:	mov	x21, x1
   17318:	mov	x1, #0x4810                	// #18448
   1731c:	add	x22, x0, x1
   17320:	str	x30, [sp, #32]
   17324:	mov	x0, x22
   17328:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   1732c:	ldr	x19, [x20, #18536]
   17330:	cmp	x19, #0x3ff
   17334:	b.hi	17378 <__sanitizer_set_report_fd@@Base+0x3aa8>  // b.pmore
   17338:	add	x0, x19, #0x1
   1733c:	str	x0, [x20, #18536]
   17340:	mov	x0, x21
   17344:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   17348:	mov	x3, x0
   1734c:	add	x1, x20, x19, lsl #5
   17350:	mov	x0, x22
   17354:	add	x2, x1, #0x4, lsl #12
   17358:	ldp	x21, x22, [sp, #16]
   1735c:	ldr	x30, [sp, #32]
   17360:	str	x3, [x1, #18544]
   17364:	str	xzr, [x1, #18552]
   17368:	str	xzr, [x1, #18560]
   1736c:	strb	wzr, [x2, #2184]
   17370:	ldp	x19, x20, [sp], #48
   17374:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   17378:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1737c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17380:	add	x0, x0, #0x898
   17384:	mov	x2, #0x400                 	// #1024
   17388:	ldr	x1, [x1, #4024]
   1738c:	ldr	x1, [x1]
   17390:	bl	1cd78 <OnPrint@@Base+0x398>
   17394:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   17398:	stp	x19, x20, [sp, #-160]!
   1739c:	mov	x3, #0x4810                	// #18448
   173a0:	mov	x20, x0
   173a4:	stp	x21, x22, [sp, #16]
   173a8:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   173ac:	add	x0, x0, x3
   173b0:	mov	x19, x1
   173b4:	stp	x23, x24, [sp, #32]
   173b8:	stp	x25, x26, [sp, #48]
   173bc:	str	x30, [sp, #80]
   173c0:	str	x0, [sp, #112]
   173c4:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   173c8:	ldr	x22, [x21, #4016]
   173cc:	ldr	x0, [x22]
   173d0:	cbz	x0, 1767c <__sanitizer_set_report_fd@@Base+0x3dac>
   173d4:	sub	x1, x0, #0x1
   173d8:	tst	x1, x0
   173dc:	b.ne	1771c <__sanitizer_set_report_fd@@Base+0x3e4c>  // b.any
   173e0:	add	x25, x0, #0xfff
   173e4:	neg	x0, x0
   173e8:	and	x23, x25, x0
   173ec:	mov	w2, #0x0                   	// #0
   173f0:	mov	x0, x23
   173f4:	adrp	x22, 40000 <__asan_backtrace_get_view@@Base+0x78>
   173f8:	add	x1, x22, #0x988
   173fc:	str	x23, [sp, #120]
   17400:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   17404:	mov	x24, x0
   17408:	mov	x2, #0x0                   	// #0
   1740c:	mov	x1, #0x0                   	// #0
   17410:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   17414:	mov	x1, #0x0                   	// #0
   17418:	mov	x0, #0x0                   	// #0
   1741c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   17420:	cmp	x23, #0xfff
   17424:	b.ls	17688 <__sanitizer_set_report_fd@@Base+0x3db8>  // b.plast
   17428:	mov	x0, x24
   1742c:	mov	x2, #0x1000                	// #4096
   17430:	mov	w1, #0x0                   	// #0
   17434:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   17438:	strb	wzr, [x24]
   1743c:	cbz	x19, 17460 <__sanitizer_set_report_fd@@Base+0x3b90>
   17440:	mov	x1, x24
   17444:	mov	x0, x19
   17448:	mov	x2, #0xfff                 	// #4095
   1744c:	bl	17b98 <__sanitizer_set_report_fd@@Base+0x42c8>
   17450:	cbz	x0, 17460 <__sanitizer_set_report_fd@@Base+0x3b90>
   17454:	ldrb	w0, [x24]
   17458:	cbnz	w0, 176e4 <__sanitizer_set_report_fd@@Base+0x3e14>
   1745c:	nop
   17460:	add	x0, sp, #0x80
   17464:	strb	wzr, [sp, #152]
   17468:	bl	19bc8 <__sanitizer_set_report_fd@@Base+0x62f8>
   1746c:	ldr	x0, [x20, #18536]
   17470:	cbz	x0, 17584 <__sanitizer_set_report_fd@@Base+0x3cb4>
   17474:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   17478:	mov	x0, #0x4870                	// #18544
   1747c:	adrp	x26, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17480:	add	x19, x20, x0
   17484:	ldr	x22, [x22, #3896]
   17488:	add	x0, x26, #0x920
   1748c:	stp	x27, x28, [sp, #64]
   17490:	stp	x0, xzr, [sp, #96]
   17494:	ldr	x21, [sp, #144]
   17498:	ldr	x5, [sp, #128]
   1749c:	add	x21, x21, x21, lsl #3
   174a0:	add	x21, x5, x21, lsl #3
   174a4:	cmp	x5, x21
   174a8:	b.eq	1776c <__sanitizer_set_report_fd@@Base+0x3e9c>  // b.none
   174ac:	mov	x28, x5
   174b0:	mov	w27, #0x0                   	// #0
   174b4:	mov	w23, #0x1                   	// #1
   174b8:	ldr	x26, [x28, #56]
   174bc:	cbz	x26, 17544 <__sanitizer_set_report_fd@@Base+0x3c74>
   174c0:	ldrb	w25, [x26, #24]
   174c4:	cbz	w25, 17628 <__sanitizer_set_report_fd@@Base+0x3d58>
   174c8:	ldr	x0, [x19]
   174cc:	ldr	x1, [x28]
   174d0:	bl	fad0 <__sancov_default_options@@Base+0x3120>
   174d4:	tst	w0, #0xff
   174d8:	b.ne	174f0 <__sanitizer_set_report_fd@@Base+0x3c20>  // b.any
   174dc:	ldr	x0, [x19, #16]
   174e0:	cbz	x0, 17628 <__sanitizer_set_report_fd@@Base+0x3d58>
   174e4:	ldr	x1, [x28]
   174e8:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   174ec:	cbnz	w0, 17628 <__sanitizer_set_report_fd@@Base+0x3d58>
   174f0:	cbnz	w27, 17880 <__sanitizer_set_report_fd@@Base+0x3fb0>
   174f4:	ldrb	w27, [x19, #24]
   174f8:	cbnz	w27, 17628 <__sanitizer_set_report_fd@@Base+0x3d58>
   174fc:	ldr	w0, [x22]
   17500:	cbnz	w0, 17634 <__sanitizer_set_report_fd@@Base+0x3d64>
   17504:	strb	w23, [x19, #24]
   17508:	ldr	x0, [x28]
   1750c:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   17510:	ldr	x3, [x20]
   17514:	str	x0, [x19, #8]
   17518:	cmp	x3, #0x7f
   1751c:	b.hi	17660 <__sanitizer_set_report_fd@@Base+0x3d90>  // b.pmore
   17520:	add	x0, x20, x3, lsl #4
   17524:	add	x3, x3, #0x1
   17528:	ldr	x1, [x26, #8]
   1752c:	str	x1, [x0, #8]
   17530:	ldr	x1, [x26, #16]
   17534:	str	x1, [x0, #16]
   17538:	dmb	ish
   1753c:	str	x3, [x20]
   17540:	mov	w27, w25
   17544:	add	x28, x28, #0x48
   17548:	cmp	x21, x28
   1754c:	b.ne	174b8 <__sanitizer_set_report_fd@@Base+0x3be8>  // b.any
   17550:	ldrb	w0, [x19, #24]
   17554:	eor	w0, w0, #0x1
   17558:	orr	w2, w27, w0
   1755c:	tst	w2, #0xff
   17560:	b.eq	178b0 <__sanitizer_set_report_fd@@Base+0x3fe0>  // b.none
   17564:	ldr	x1, [sp, #104]
   17568:	add	x19, x19, #0x20
   1756c:	ldr	x0, [x20, #18536]
   17570:	add	x1, x1, #0x1
   17574:	str	x1, [sp, #104]
   17578:	cmp	x0, x1
   1757c:	b.hi	17494 <__sanitizer_set_report_fd@@Base+0x3bc4>  // b.pmore
   17580:	ldp	x27, x28, [sp, #64]
   17584:	add	x1, x20, #0xc, lsl #12
   17588:	ldr	x0, [sp, #144]
   1758c:	ldrb	w1, [x1, #2160]
   17590:	ldr	x19, [sp, #128]
   17594:	add	x0, x0, x0, lsl #3
   17598:	add	x22, x19, x0, lsl #3
   1759c:	cbz	w1, 175e0 <__sanitizer_set_report_fd@@Base+0x3d10>
   175a0:	mov	x21, x19
   175a4:	cmp	x19, x22
   175a8:	b.eq	175fc <__sanitizer_set_report_fd@@Base+0x3d2c>  // b.none
   175ac:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   175b0:	adrp	x26, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   175b4:	add	x26, x26, #0xa50
   175b8:	ldr	x23, [x23, #3896]
   175bc:	ldrb	w0, [x21, #44]
   175c0:	cbnz	w0, 17774 <__sanitizer_set_report_fd@@Base+0x3ea4>
   175c4:	add	x21, x21, #0x48
   175c8:	cmp	x22, x21
   175cc:	b.ne	175bc <__sanitizer_set_report_fd@@Base+0x3cec>  // b.any
   175d0:	ldr	x0, [sp, #144]
   175d4:	ldr	x19, [sp, #128]
   175d8:	add	x0, x0, x0, lsl #3
   175dc:	add	x22, x19, x0, lsl #3
   175e0:	cmp	x19, x22
   175e4:	b.eq	175fc <__sanitizer_set_report_fd@@Base+0x3d2c>  // b.none
   175e8:	mov	x0, x19
   175ec:	add	x19, x19, #0x48
   175f0:	bl	f7f8 <__sancov_default_options@@Base+0x2e48>
   175f4:	cmp	x22, x19
   175f8:	b.ne	175e8 <__sanitizer_set_report_fd@@Base+0x3d18>  // b.any
   175fc:	ldr	x1, [sp, #120]
   17600:	mov	x0, x24
   17604:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   17608:	ldr	x0, [sp, #112]
   1760c:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   17610:	ldp	x21, x22, [sp, #16]
   17614:	ldp	x23, x24, [sp, #32]
   17618:	ldp	x25, x26, [sp, #48]
   1761c:	ldr	x30, [sp, #80]
   17620:	ldp	x19, x20, [sp], #160
   17624:	ret
   17628:	ldr	x26, [x26]
   1762c:	cbnz	x26, 174c0 <__sanitizer_set_report_fd@@Base+0x3bf0>
   17630:	b	17544 <__sanitizer_set_report_fd@@Base+0x3c74>
   17634:	ldr	x1, [x19]
   17638:	ldr	x2, [x28]
   1763c:	ldr	x0, [sp, #96]
   17640:	bl	1cd78 <OnPrint@@Base+0x398>
   17644:	strb	w23, [x19, #24]
   17648:	ldr	x0, [x28]
   1764c:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   17650:	ldr	x3, [x20]
   17654:	str	x0, [x19, #8]
   17658:	cmp	x3, #0x7f
   1765c:	b.ls	17520 <__sanitizer_set_report_fd@@Base+0x3c50>  // b.plast
   17660:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17664:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17668:	add	x2, x2, #0x960
   1766c:	add	x0, x0, #0x9b0
   17670:	mov	x4, #0x80                  	// #128
   17674:	mov	w1, #0x52                  	// #82
   17678:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1767c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   17680:	str	x0, [x22]
   17684:	b	173d4 <__sanitizer_set_report_fd@@Base+0x3b04>
   17688:	ldr	x21, [x21, #4016]
   1768c:	ldr	x0, [x21]
   17690:	cbz	x0, 17760 <__sanitizer_set_report_fd@@Base+0x3e90>
   17694:	sub	x1, x0, #0x1
   17698:	tst	x1, x0
   1769c:	b.ne	1771c <__sanitizer_set_report_fd@@Base+0x3e4c>  // b.any
   176a0:	add	x21, x0, #0xfff
   176a4:	neg	x0, x0
   176a8:	and	x21, x21, x0
   176ac:	add	x1, x22, #0x988
   176b0:	mov	x0, x21
   176b4:	mov	w2, #0x0                   	// #0
   176b8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   176bc:	mov	x22, x0
   176c0:	mov	x1, x24
   176c4:	mov	x2, #0x0                   	// #0
   176c8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   176cc:	ldr	x1, [sp, #120]
   176d0:	mov	x0, x24
   176d4:	mov	x24, x22
   176d8:	str	x21, [sp, #120]
   176dc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   176e0:	b	17428 <__sanitizer_set_report_fd@@Base+0x3b58>
   176e4:	ldr	x1, [x20, #18536]
   176e8:	cbz	x1, 17460 <__sanitizer_set_report_fd@@Base+0x3b90>
   176ec:	mov	x2, #0x4870                	// #18544
   176f0:	add	x21, x20, x2
   176f4:	mov	x22, #0x0                   	// #0
   176f8:	ldrb	w0, [x21, #24]
   176fc:	cbnz	w0, 17708 <__sanitizer_set_report_fd@@Base+0x3e38>
   17700:	ldr	x0, [x21, #16]
   17704:	cbz	x0, 17730 <__sanitizer_set_report_fd@@Base+0x3e60>
   17708:	add	x22, x22, #0x1
   1770c:	add	x21, x21, #0x20
   17710:	cmp	x22, x1
   17714:	b.cc	176f8 <__sanitizer_set_report_fd@@Base+0x3e28>  // b.lo, b.ul, b.last
   17718:	b	17460 <__sanitizer_set_report_fd@@Base+0x3b90>
   1771c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   17720:	add	x0, x0, #0x970
   17724:	stp	x27, x28, [sp, #64]
   17728:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1772c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   17730:	ldr	x0, [x21]
   17734:	mov	x1, x19
   17738:	bl	fad0 <__sancov_default_options@@Base+0x3120>
   1773c:	tst	w0, #0xff
   17740:	b.ne	1774c <__sanitizer_set_report_fd@@Base+0x3e7c>  // b.any
   17744:	ldr	x1, [x20, #18536]
   17748:	b	17708 <__sanitizer_set_report_fd@@Base+0x3e38>
   1774c:	mov	x0, x24
   17750:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   17754:	str	x0, [x21, #16]
   17758:	ldr	x1, [x20, #18536]
   1775c:	b	17708 <__sanitizer_set_report_fd@@Base+0x3e38>
   17760:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   17764:	str	x0, [x21]
   17768:	b	17694 <__sanitizer_set_report_fd@@Base+0x3dc4>
   1776c:	mov	w27, #0x0                   	// #0
   17770:	b	17550 <__sanitizer_set_report_fd@@Base+0x3c80>
   17774:	ldr	x19, [x21, #56]
   17778:	cbz	x19, 175c4 <__sanitizer_set_report_fd@@Base+0x3cf4>
   1777c:	ldrb	w1, [x19, #24]
   17780:	cbz	w1, 1782c <__sanitizer_set_report_fd@@Base+0x3f5c>
   17784:	ldr	x4, [x19, #8]
   17788:	ldr	x6, [x20, #2056]
   1778c:	dmb	ish
   17790:	add	x5, x20, #0x810
   17794:	mov	x2, #0x0                   	// #0
   17798:	mov	x1, x5
   1779c:	cbz	x6, 177f8 <__sanitizer_set_report_fd@@Base+0x3f28>
   177a0:	ldr	x3, [x1]
   177a4:	cmp	x4, x3
   177a8:	b.cc	17838 <__sanitizer_set_report_fd@@Base+0x3f68>  // b.lo, b.ul, b.last
   177ac:	ldr	x3, [x1, #8]
   177b0:	cmp	x4, x3
   177b4:	b.cs	17838 <__sanitizer_set_report_fd@@Base+0x3f68>  // b.hs, b.nlast
   177b8:	ldr	x2, [x19, #16]
   177bc:	sub	x2, x2, #0x1
   177c0:	ldr	x0, [x20, #2056]
   177c4:	dmb	ish
   177c8:	cbz	x0, 177f8 <__sanitizer_set_report_fd@@Base+0x3f28>
   177cc:	mov	x1, #0x0                   	// #0
   177d0:	ldr	x3, [x5]
   177d4:	cmp	x2, x3
   177d8:	b.cc	177e8 <__sanitizer_set_report_fd@@Base+0x3f18>  // b.lo, b.ul, b.last
   177dc:	ldr	x3, [x5, #8]
   177e0:	cmp	x2, x3
   177e4:	b.cc	1782c <__sanitizer_set_report_fd@@Base+0x3f5c>  // b.lo, b.ul, b.last
   177e8:	add	x1, x1, #0x1
   177ec:	add	x5, x5, #0x10
   177f0:	cmp	x1, x0
   177f4:	b.ne	177d0 <__sanitizer_set_report_fd@@Base+0x3f00>  // b.any
   177f8:	ldr	w0, [x23]
   177fc:	cbnz	w0, 1784c <__sanitizer_set_report_fd@@Base+0x3f7c>
   17800:	ldr	x3, [x20, #2056]
   17804:	cmp	x3, #0x3ff
   17808:	b.hi	17860 <__sanitizer_set_report_fd@@Base+0x3f90>  // b.pmore
   1780c:	add	x1, x20, x3, lsl #4
   17810:	add	x3, x3, #0x1
   17814:	ldr	x0, [x19, #8]
   17818:	str	x0, [x1, #2064]
   1781c:	ldr	x0, [x19, #16]
   17820:	str	x0, [x1, #2072]
   17824:	dmb	ish
   17828:	str	x3, [x20, #2056]
   1782c:	ldr	x19, [x19]
   17830:	cbnz	x19, 1777c <__sanitizer_set_report_fd@@Base+0x3eac>
   17834:	b	175c4 <__sanitizer_set_report_fd@@Base+0x3cf4>
   17838:	add	x2, x2, #0x1
   1783c:	add	x1, x1, #0x10
   17840:	cmp	x2, x6
   17844:	b.ne	177a0 <__sanitizer_set_report_fd@@Base+0x3ed0>  // b.any
   17848:	b	177f8 <__sanitizer_set_report_fd@@Base+0x3f28>
   1784c:	ldp	x1, x2, [x19, #8]
   17850:	mov	x0, x26
   17854:	ldr	x3, [x21]
   17858:	bl	1cd78 <OnPrint@@Base+0x398>
   1785c:	b	17800 <__sanitizer_set_report_fd@@Base+0x3f30>
   17860:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17864:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17868:	add	x2, x2, #0xa88
   1786c:	add	x0, x0, #0x9b0
   17870:	mov	x4, #0x400                 	// #1024
   17874:	mov	w1, #0x6f                  	// #111
   17878:	stp	x27, x28, [sp, #64]
   1787c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17880:	ldr	x0, [sp, #104]
   17884:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   17888:	ldr	x4, [x28]
   1788c:	ldr	x1, [x1, #4024]
   17890:	add	x20, x20, x0, lsl #5
   17894:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17898:	add	x0, x0, #0x8c8
   1789c:	ldr	x1, [x1]
   178a0:	ldr	x2, [x20, #18544]
   178a4:	ldr	x3, [x20, #18552]
   178a8:	bl	1cd78 <OnPrint@@Base+0x398>
   178ac:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   178b0:	ldr	x0, [sp, #104]
   178b4:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   178b8:	ldr	x1, [x1, #4024]
   178bc:	add	x20, x20, x0, lsl #5
   178c0:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   178c4:	add	x0, x0, #0x9f8
   178c8:	ldr	x1, [x1]
   178cc:	ldr	x3, [x20, #18544]
   178d0:	ldr	x2, [x20, #18552]
   178d4:	bl	1cd78 <OnPrint@@Base+0x398>
   178d8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   178dc:	nop
   178e0:	mov	x1, #0x0                   	// #0
   178e4:	b	17398 <__sanitizer_set_report_fd@@Base+0x3ac8>
   178e8:	stp	x19, x20, [sp, #-64]!
   178ec:	mov	x19, x1
   178f0:	mov	x20, x0
   178f4:	mov	w2, #0x0                   	// #0
   178f8:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   178fc:	mov	x0, #0x3e80                	// #16000
   17900:	add	x1, x1, #0xae8
   17904:	str	x30, [sp, #16]
   17908:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1790c:	str	x0, [x19]
   17910:	add	x3, sp, #0x38
   17914:	add	x2, sp, #0x30
   17918:	add	x1, sp, #0x28
   1791c:	mov	x0, x20
   17920:	mov	x5, #0x0                   	// #0
   17924:	mov	x4, #0x100000              	// #1048576
   17928:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   1792c:	tst	w0, #0xff
   17930:	b.eq	179d0 <__sanitizer_set_report_fd@@Base+0x4100>  // b.none
   17934:	ldr	x4, [x19]
   17938:	mov	x0, #0x1                   	// #1
   1793c:	ldr	x1, [sp, #40]
   17940:	mov	w2, w0
   17944:	str	x1, [x4]
   17948:	ldr	x1, [sp, #40]
   1794c:	nop
   17950:	ldrb	w3, [x1, x0]
   17954:	add	x0, x0, #0x1
   17958:	cbnz	w3, 17950 <__sanitizer_set_report_fd@@Base+0x4080>
   1795c:	add	x5, x1, x0
   17960:	ldrb	w1, [x1, x0]
   17964:	sxtw	x3, w2
   17968:	add	x6, x4, w2, sxtw #3
   1796c:	cbz	w1, 179a4 <__sanitizer_set_report_fd@@Base+0x40d4>
   17970:	str	x5, [x4, x3, lsl #3]
   17974:	cmp	w2, #0x7cf
   17978:	b.gt	179b4 <__sanitizer_set_report_fd@@Base+0x40e4>
   1797c:	ldr	x1, [sp, #40]
   17980:	add	w2, w2, #0x1
   17984:	ldrb	w3, [x1, x0]
   17988:	add	x0, x0, #0x1
   1798c:	cbnz	w3, 17950 <__sanitizer_set_report_fd@@Base+0x4080>
   17990:	add	x5, x1, x0
   17994:	ldrb	w1, [x1, x0]
   17998:	sxtw	x3, w2
   1799c:	add	x6, x4, w2, sxtw #3
   179a0:	cbnz	w1, 17970 <__sanitizer_set_report_fd@@Base+0x40a0>
   179a4:	str	xzr, [x6]
   179a8:	ldr	x30, [sp, #16]
   179ac:	ldp	x19, x20, [sp], #64
   179b0:	ret
   179b4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   179b8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   179bc:	add	x2, x2, #0xb00
   179c0:	add	x0, x0, #0xb20
   179c4:	mov	x4, #0x7cf                 	// #1999
   179c8:	mov	w1, #0x23f                 	// #575
   179cc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   179d0:	ldr	x0, [x19]
   179d4:	ldr	x30, [sp, #16]
   179d8:	str	xzr, [x0]
   179dc:	ldp	x19, x20, [sp], #64
   179e0:	ret
   179e4:	nop
   179e8:	mov	x2, x0
   179ec:	mov	w0, #0x0                   	// #0
   179f0:	cmn	x2, #0x1, lsl #12
   179f4:	b.hi	179fc <__sanitizer_set_report_fd@@Base+0x412c>  // b.pmore
   179f8:	ret
   179fc:	mov	w0, #0x1                   	// #1
   17a00:	cbz	x1, 179f8 <__sanitizer_set_report_fd@@Base+0x4128>
   17a04:	neg	w2, w2
   17a08:	str	w2, [x1]
   17a0c:	ret
   17a10:	mov	x8, #0xde                  	// #222
   17a14:	sxtw	x2, w2
   17a18:	sxtw	x3, w3
   17a1c:	sxtw	x4, w4
   17a20:	svc	#0x0
   17a24:	ret
   17a28:	mov	x8, #0xd7                  	// #215
   17a2c:	svc	#0x0
   17a30:	ret
   17a34:	nop
   17a38:	mov	x8, #0xe2                  	// #226
   17a3c:	sxtw	x2, w2
   17a40:	svc	#0x0
   17a44:	ret
   17a48:	mov	x8, #0x39                  	// #57
   17a4c:	sxtw	x0, w0
   17a50:	svc	#0x0
   17a54:	ret
   17a58:	sxtw	x2, w1
   17a5c:	mov	x8, #0x38                  	// #56
   17a60:	mov	x1, x0
   17a64:	mov	x0, #0xffffffffffffff9c    	// #-100
   17a68:	svc	#0x0
   17a6c:	ret
   17a70:	mov	w4, w1
   17a74:	mov	w3, w2
   17a78:	mov	x1, x0
   17a7c:	mov	x8, #0x38                  	// #56
   17a80:	sxtw	x2, w4
   17a84:	mov	x0, #0xffffffffffffff9c    	// #-100
   17a88:	svc	#0x0
   17a8c:	ret
   17a90:	sxtw	x3, w0
   17a94:	mov	x0, x3
   17a98:	mov	x8, #0x3f                  	// #63
   17a9c:	svc	#0x0
   17aa0:	cmn	x0, #0x1, lsl #12
   17aa4:	b.hi	17aac <__sanitizer_set_report_fd@@Base+0x41dc>  // b.pmore
   17aa8:	ret
   17aac:	cmn	w0, #0x4
   17ab0:	b.eq	17a94 <__sanitizer_set_report_fd@@Base+0x41c4>  // b.none
   17ab4:	ret
   17ab8:	sxtw	x3, w0
   17abc:	mov	x0, x3
   17ac0:	mov	x8, #0x40                  	// #64
   17ac4:	svc	#0x0
   17ac8:	cmn	x0, #0x1, lsl #12
   17acc:	b.hi	17ad4 <__sanitizer_set_report_fd@@Base+0x4204>  // b.pmore
   17ad0:	ret
   17ad4:	cmn	w0, #0x4
   17ad8:	b.eq	17abc <__sanitizer_set_report_fd@@Base+0x41ec>  // b.none
   17adc:	ret
   17ae0:	sxtw	x2, w0
   17ae4:	mov	x0, x2
   17ae8:	mov	x8, #0x2e                  	// #46
   17aec:	svc	#0x0
   17af0:	cmn	x0, #0x1, lsl #12
   17af4:	b.hi	17afc <__sanitizer_set_report_fd@@Base+0x422c>  // b.pmore
   17af8:	ret
   17afc:	cmn	w0, #0x4
   17b00:	b.eq	17ae4 <__sanitizer_set_report_fd@@Base+0x4214>  // b.none
   17b04:	ret
   17b08:	mov	x2, x1
   17b0c:	mov	x8, #0x4f                  	// #79
   17b10:	mov	x1, x0
   17b14:	mov	x3, #0x0                   	// #0
   17b18:	mov	x0, #0xffffffffffffff9c    	// #-100
   17b1c:	svc	#0x0
   17b20:	ret
   17b24:	nop
   17b28:	mov	x2, x1
   17b2c:	mov	x8, #0x4f                  	// #79
   17b30:	mov	x1, x0
   17b34:	mov	x3, #0x100                 	// #256
   17b38:	mov	x0, #0xffffffffffffff9c    	// #-100
   17b3c:	svc	#0x0
   17b40:	ret
   17b44:	nop
   17b48:	mov	x8, #0x50                  	// #80
   17b4c:	sxtw	x0, w0
   17b50:	svc	#0x0
   17b54:	ret
   17b58:	sub	sp, sp, #0x80
   17b5c:	mov	x8, #0x50                  	// #80
   17b60:	mov	x1, sp
   17b64:	sxtw	x0, w0
   17b68:	svc	#0x0
   17b6c:	ldr	x1, [sp, #48]
   17b70:	cmp	x0, #0x0
   17b74:	add	sp, sp, #0x80
   17b78:	csinv	x0, x1, xzr, eq  // eq = none
   17b7c:	ret
   17b80:	mov	x8, #0x18                  	// #24
   17b84:	mov	x2, #0x0                   	// #0
   17b88:	sxtw	x0, w0
   17b8c:	sxtw	x1, w1
   17b90:	svc	#0x0
   17b94:	ret
   17b98:	mov	x4, x1
   17b9c:	mov	x3, x2
   17ba0:	mov	x1, x0
   17ba4:	mov	x2, x4
   17ba8:	mov	x8, #0x4e                  	// #78
   17bac:	mov	x0, #0xffffffffffffff9c    	// #-100
   17bb0:	svc	#0x0
   17bb4:	ret
   17bb8:	mov	x1, x0
   17bbc:	mov	x8, #0x23                  	// #35
   17bc0:	mov	x0, #0xffffffffffffff9c    	// #-100
   17bc4:	mov	x2, #0x0                   	// #0
   17bc8:	svc	#0x0
   17bcc:	ret
   17bd0:	mov	x3, x1
   17bd4:	mov	x8, #0x26                  	// #38
   17bd8:	mov	x1, x0
   17bdc:	mov	x0, #0xffffffffffffff9c    	// #-100
   17be0:	mov	x2, x0
   17be4:	svc	#0x0
   17be8:	ret
   17bec:	nop
   17bf0:	mov	x8, #0x7c                  	// #124
   17bf4:	svc	#0x0
   17bf8:	ret
   17bfc:	nop
   17c00:	sxtw	x0, w0
   17c04:	mov	x8, #0x5e                  	// #94
   17c08:	str	x30, [sp, #-16]!
   17c0c:	svc	#0x0
   17c10:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   17c14:	nop
   17c18:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   17c1c:	sub	sp, sp, #0x10
   17c20:	mov	x8, #0x65                  	// #101
   17c24:	ldr	q0, [x0, #16]
   17c28:	mov	x0, sp
   17c2c:	mov	x1, x0
   17c30:	str	q0, [sp]
   17c34:	svc	#0x0
   17c38:	ldr	w1, [sp]
   17c3c:	cmp	w0, #0x0
   17c40:	mov	w0, #0x0                   	// #0
   17c44:	add	sp, sp, #0x10
   17c48:	csel	w0, w1, w0, ne  // ne = any
   17c4c:	ret
   17c50:	mov	x8, #0xdd                  	// #221
   17c54:	svc	#0x0
   17c58:	ret
   17c5c:	nop
   17c60:	sub	sp, sp, #0x80
   17c64:	mov	x1, x0
   17c68:	mov	x2, sp
   17c6c:	mov	x8, #0x4f                  	// #79
   17c70:	mov	x0, #0xffffffffffffff9c    	// #-100
   17c74:	mov	x3, #0x0                   	// #0
   17c78:	svc	#0x0
   17c7c:	cbnz	x0, 17c98 <__sanitizer_set_report_fd@@Base+0x43c8>
   17c80:	ldr	w0, [sp, #16]
   17c84:	add	sp, sp, #0x80
   17c88:	and	w0, w0, #0xf000
   17c8c:	cmp	w0, #0x8, lsl #12
   17c90:	cset	w0, eq  // eq = none
   17c94:	ret
   17c98:	mov	w0, #0x0                   	// #0
   17c9c:	add	sp, sp, #0x80
   17ca0:	ret
   17ca4:	nop
   17ca8:	mov	x8, #0xb2                  	// #178
   17cac:	svc	#0x0
   17cb0:	ret
   17cb4:	nop
   17cb8:	mov	x8, #0x83                  	// #131
   17cbc:	sxtw	x0, w0
   17cc0:	sxtw	x2, w2
   17cc4:	svc	#0x0
   17cc8:	ret
   17ccc:	nop
   17cd0:	stp	x19, x30, [sp, #-32]!
   17cd4:	mov	x2, #0x10                  	// #16
   17cd8:	mov	w1, #0x0                   	// #0
   17cdc:	add	x19, sp, #0x10
   17ce0:	mov	x0, x19
   17ce4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   17ce8:	mov	x0, x19
   17cec:	mov	x8, #0xa9                  	// #169
   17cf0:	mov	x1, #0x0                   	// #0
   17cf4:	svc	#0x0
   17cf8:	ldp	x3, x2, [sp, #16]
   17cfc:	mov	x0, #0xca00                	// #51712
   17d00:	movk	x0, #0x3b9a, lsl #16
   17d04:	ldp	x19, x30, [sp], #32
   17d08:	lsl	x1, x2, #5
   17d0c:	sub	x1, x1, x2
   17d10:	add	x1, x2, x1, lsl #2
   17d14:	lsl	x1, x1, #3
   17d18:	madd	x0, x3, x0, x1
   17d1c:	ret
   17d20:	mov	x8, #0x71                  	// #113
   17d24:	sxtw	x0, w0
   17d28:	svc	#0x0
   17d2c:	ret
   17d30:	stp	x19, x20, [sp, #-64]!
   17d34:	stp	x21, x22, [sp, #16]
   17d38:	adrp	x21, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   17d3c:	add	x19, x21, #0xdf8
   17d40:	stp	x23, x30, [sp, #32]
   17d44:	mov	x23, x0
   17d48:	ldrb	w0, [x21, #3576]
   17d4c:	cbz	w0, 17de8 <__sanitizer_set_report_fd@@Base+0x4518>
   17d50:	ldr	x0, [x19, #8]
   17d54:	cbz	x0, 17dd4 <__sanitizer_set_report_fd@@Base+0x4504>
   17d58:	add	x21, x21, #0xdf8
   17d5c:	ldr	x0, [x21, #16]
   17d60:	cbz	x0, 17dd4 <__sanitizer_set_report_fd@@Base+0x4504>
   17d64:	mov	x0, x23
   17d68:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   17d6c:	ldr	x20, [x21, #8]
   17d70:	mov	x22, x0
   17d74:	ldrb	w0, [x20]
   17d78:	cbz	w0, 17dd4 <__sanitizer_set_report_fd@@Base+0x4504>
   17d7c:	mov	x2, x20
   17d80:	b	17db0 <__sanitizer_set_report_fd@@Base+0x44e0>
   17d84:	mov	x1, x23
   17d88:	mov	x0, x20
   17d8c:	bl	155f0 <__sanitizer_set_report_fd@@Base+0x1d20>
   17d90:	cbnz	w0, 17da0 <__sanitizer_set_report_fd@@Base+0x44d0>
   17d94:	ldrb	w0, [x20, x22]
   17d98:	cmp	w0, #0x3d
   17d9c:	b.eq	17e20 <__sanitizer_set_report_fd@@Base+0x4550>  // b.none
   17da0:	ldrb	w0, [x19, #1]
   17da4:	add	x20, x19, #0x1
   17da8:	cbz	w0, 17dd4 <__sanitizer_set_report_fd@@Base+0x4504>
   17dac:	ldr	x2, [x21, #8]
   17db0:	sub	x2, x20, x2
   17db4:	ldr	x3, [x21, #16]
   17db8:	mov	x0, x20
   17dbc:	mov	w1, #0x0                   	// #0
   17dc0:	sub	x2, x3, x2
   17dc4:	bl	15588 <__sanitizer_set_report_fd@@Base+0x1cb8>
   17dc8:	mov	x19, x0
   17dcc:	mov	x2, x22
   17dd0:	cbnz	x0, 17d84 <__sanitizer_set_report_fd@@Base+0x44b4>
   17dd4:	mov	x0, #0x0                   	// #0
   17dd8:	ldp	x21, x22, [sp, #16]
   17ddc:	ldp	x23, x30, [sp, #32]
   17de0:	ldp	x19, x20, [sp], #64
   17de4:	ret
   17de8:	mov	w1, #0x1                   	// #1
   17dec:	add	x3, x19, #0x10
   17df0:	strb	w1, [x21, #3576]
   17df4:	add	x2, sp, #0x38
   17df8:	add	x1, x19, #0x8
   17dfc:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17e00:	mov	x5, #0x0                   	// #0
   17e04:	add	x0, x0, #0xb60
   17e08:	mov	x4, #0x4000000             	// #67108864
   17e0c:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   17e10:	tst	w0, #0xff
   17e14:	b.ne	17d50 <__sanitizer_set_report_fd@@Base+0x4480>  // b.any
   17e18:	str	xzr, [x19, #8]
   17e1c:	b	17dd4 <__sanitizer_set_report_fd@@Base+0x4504>
   17e20:	add	x0, x22, #0x1
   17e24:	add	x0, x20, x0
   17e28:	ldp	x21, x22, [sp, #16]
   17e2c:	ldp	x23, x30, [sp, #32]
   17e30:	ldp	x19, x20, [sp], #64
   17e34:	ret
   17e38:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   17e3c:	ldr	x0, [x0, #4048]
   17e40:	cbz	x0, 17e50 <__sanitizer_set_report_fd@@Base+0x4580>
   17e44:	ldr	x0, [x0]
   17e48:	add	x0, x0, #0x8
   17e4c:	ret
   17e50:	str	x30, [sp, #-32]!
   17e54:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17e58:	add	x0, x0, #0xb78
   17e5c:	add	x1, sp, #0x10
   17e60:	bl	178e8 <__sanitizer_set_report_fd@@Base+0x4018>
   17e64:	add	x1, sp, #0x18
   17e68:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17e6c:	add	x0, x0, #0xb60
   17e70:	bl	178e8 <__sanitizer_set_report_fd@@Base+0x4018>
   17e74:	ldr	x0, [sp, #16]
   17e78:	ldr	x30, [sp], #32
   17e7c:	ret
   17e80:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   17e84:	str	x30, [sp, #-32]!
   17e88:	ldr	x0, [x0, #4048]
   17e8c:	cbz	x0, 17ef4 <__sanitizer_set_report_fd@@Base+0x4624>
   17e90:	ldr	x0, [x0]
   17e94:	mov	x1, x0
   17e98:	ldr	x2, [x1], #8
   17e9c:	add	x2, x0, w2, sxtw #3
   17ea0:	add	x2, x2, #0x10
   17ea4:	stp	x1, x2, [sp, #16]
   17ea8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17eac:	mov	x8, #0xdd                  	// #221
   17eb0:	add	x0, x0, #0xb90
   17eb4:	svc	#0x0
   17eb8:	cmn	x0, #0x1, lsl #12
   17ebc:	b.hi	17ee0 <__sanitizer_set_report_fd@@Base+0x4610>  // b.pmore
   17ec0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17ec4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17ec8:	add	x2, x2, #0xba0
   17ecc:	add	x0, x0, #0xb20
   17ed0:	mov	x4, #0x1                   	// #1
   17ed4:	mov	x3, #0x0                   	// #0
   17ed8:	mov	w1, #0x286                 	// #646
   17edc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17ee0:	neg	w1, w0
   17ee4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17ee8:	add	x0, x0, #0xbd0
   17eec:	bl	1ccf0 <OnPrint@@Base+0x310>
   17ef0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   17ef4:	add	x1, sp, #0x10
   17ef8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17efc:	add	x0, x0, #0xb78
   17f00:	bl	178e8 <__sanitizer_set_report_fd@@Base+0x4018>
   17f04:	add	x1, sp, #0x18
   17f08:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17f0c:	add	x0, x0, #0xb60
   17f10:	bl	178e8 <__sanitizer_set_report_fd@@Base+0x4018>
   17f14:	ldp	x1, x2, [sp, #16]
   17f18:	b	17ea8 <__sanitizer_set_report_fd@@Base+0x45d8>
   17f1c:	nop
   17f20:	mov	x2, #0x58                  	// #88
   17f24:	mov	w1, #0x0                   	// #0
   17f28:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   17f2c:	nop
   17f30:	ldr	x3, [x0, #80]
   17f34:	mov	x6, x0
   17f38:	mov	w1, #0x1                   	// #1
   17f3c:	cbnz	x3, 17fa4 <__sanitizer_set_report_fd@@Base+0x46d4>
   17f40:	ldxr	w0, [x6]
   17f44:	stxr	w2, w1, [x6]
   17f48:	cbnz	w2, 17f40 <__sanitizer_set_report_fd@@Base+0x4670>
   17f4c:	dmb	ish
   17f50:	cbz	w0, 17fa0 <__sanitizer_set_report_fd@@Base+0x46d0>
   17f54:	mov	w7, #0x2                   	// #2
   17f58:	ldxr	w0, [x6]
   17f5c:	stxr	w1, w7, [x6]
   17f60:	cbnz	w1, 17f58 <__sanitizer_set_report_fd@@Base+0x4688>
   17f64:	dmb	ish
   17f68:	cbz	w0, 17fa0 <__sanitizer_set_report_fd@@Base+0x46d0>
   17f6c:	mov	x0, x6
   17f70:	mov	x8, #0x62                  	// #98
   17f74:	mov	x1, #0x80                  	// #128
   17f78:	mov	x2, #0x2                   	// #2
   17f7c:	mov	x3, #0x0                   	// #0
   17f80:	mov	x4, #0x0                   	// #0
   17f84:	mov	x5, #0x0                   	// #0
   17f88:	svc	#0x0
   17f8c:	ldxr	w0, [x6]
   17f90:	stxr	w1, w7, [x6]
   17f94:	cbnz	w1, 17f58 <__sanitizer_set_report_fd@@Base+0x4688>
   17f98:	dmb	ish
   17f9c:	cbnz	w0, 17f6c <__sanitizer_set_report_fd@@Base+0x469c>
   17fa0:	ret
   17fa4:	str	x30, [sp, #-16]!
   17fa8:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17fac:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   17fb0:	add	x2, x2, #0xbf0
   17fb4:	add	x0, x0, #0xb20
   17fb8:	mov	x4, #0x0                   	// #0
   17fbc:	mov	w1, #0x298                 	// #664
   17fc0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   17fc4:	nop
   17fc8:	dmb	ish
   17fcc:	mov	x1, x0
   17fd0:	ldxr	w2, [x1]
   17fd4:	stxr	w3, wzr, [x1]
   17fd8:	cbnz	w3, 17fd0 <__sanitizer_set_report_fd@@Base+0x4700>
   17fdc:	dmb	ish
   17fe0:	cbz	w2, 18010 <__sanitizer_set_report_fd@@Base+0x4740>
   17fe4:	cmp	w2, #0x2
   17fe8:	b.eq	17ff0 <__sanitizer_set_report_fd@@Base+0x4720>  // b.none
   17fec:	ret
   17ff0:	mov	x8, #0x62                  	// #98
   17ff4:	mov	x1, #0x81                  	// #129
   17ff8:	mov	x2, #0x1                   	// #1
   17ffc:	mov	x3, #0x0                   	// #0
   18000:	mov	x4, #0x0                   	// #0
   18004:	mov	x5, #0x0                   	// #0
   18008:	svc	#0x0
   1800c:	ret
   18010:	str	x30, [sp, #-16]!
   18014:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18018:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1801c:	add	x2, x2, #0xc08
   18020:	add	x0, x0, #0xb20
   18024:	mov	x4, #0x0                   	// #0
   18028:	mov	x3, #0x0                   	// #0
   1802c:	mov	w1, #0x2ab                 	// #683
   18030:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18034:	nop
   18038:	ldr	w0, [x0]
   1803c:	cbz	w0, 18044 <__sanitizer_set_report_fd@@Base+0x4774>
   18040:	ret
   18044:	str	x30, [sp, #-16]!
   18048:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1804c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18050:	add	x2, x2, #0xc28
   18054:	add	x0, x0, #0xb20
   18058:	mov	x4, #0x0                   	// #0
   1805c:	mov	x3, #0x0                   	// #0
   18060:	mov	w1, #0x2b9                 	// #697
   18064:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18068:	mov	x8, #0x75                  	// #117
   1806c:	sxtw	x0, w0
   18070:	sxtw	x1, w1
   18074:	svc	#0x0
   18078:	ret
   1807c:	nop
   18080:	mov	x8, #0x104                 	// #260
   18084:	mov	x3, #0x0                   	// #0
   18088:	sxtw	x0, w0
   1808c:	sxtw	x2, w2
   18090:	svc	#0x0
   18094:	ret
   18098:	mov	x8, #0xac                  	// #172
   1809c:	svc	#0x0
   180a0:	ret
   180a4:	nop
   180a8:	mov	x8, #0xad                  	// #173
   180ac:	svc	#0x0
   180b0:	ret
   180b4:	nop
   180b8:	mov	w2, w2
   180bc:	mov	x8, #0x3d                  	// #61
   180c0:	sxtw	x0, w0
   180c4:	svc	#0x0
   180c8:	ret
   180cc:	nop
   180d0:	mov	x8, #0x3e                  	// #62
   180d4:	sxtw	x0, w0
   180d8:	sxtw	x2, w2
   180dc:	svc	#0x0
   180e0:	ret
   180e4:	nop
   180e8:	mov	x8, #0xa7                  	// #167
   180ec:	sxtw	x0, w0
   180f0:	svc	#0x0
   180f4:	ret
   180f8:	mov	x8, #0x84                  	// #132
   180fc:	svc	#0x0
   18100:	ret
   18104:	nop
   18108:	mov	x8, #0xdc                  	// #220
   1810c:	mov	x0, #0x11                  	// #17
   18110:	mov	x1, #0x0                   	// #0
   18114:	svc	#0x0
   18118:	ret
   1811c:	nop
   18120:	stp	x19, x20, [sp, #-112]!
   18124:	sxtw	x20, w0
   18128:	mov	x19, x1
   1812c:	stp	x23, x30, [sp, #32]
   18130:	add	x23, sp, #0x30
   18134:	mov	w1, #0x0                   	// #0
   18138:	mov	x0, x23
   1813c:	stp	x21, x22, [sp, #16]
   18140:	mov	x21, x2
   18144:	add	x22, sp, #0x50
   18148:	mov	x2, #0x20                  	// #32
   1814c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18150:	mov	w1, #0x0                   	// #0
   18154:	mov	x0, x22
   18158:	mov	x2, #0x20                  	// #32
   1815c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18160:	mov	x1, #0x0                   	// #0
   18164:	cbz	x19, 18198 <__sanitizer_set_report_fd@@Base+0x48c8>
   18168:	mov	x1, x19
   1816c:	mov	x2, #0x8                   	// #8
   18170:	add	x0, x23, #0x18
   18174:	ldr	x3, [x1], #8
   18178:	str	x3, [sp, #48]
   1817c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18180:	ldr	w0, [x19, #136]
   18184:	mov	x1, x23
   18188:	ldr	x2, [x19, #144]
   1818c:	orr	w0, w0, #0x4000000
   18190:	sxtw	x0, w0
   18194:	stp	x0, x2, [sp, #56]
   18198:	cmp	x21, #0x0
   1819c:	mov	x0, x20
   181a0:	csel	x2, x22, xzr, ne  // ne = any
   181a4:	mov	x8, #0x86                  	// #134
   181a8:	mov	x3, #0x8                   	// #8
   181ac:	svc	#0x0
   181b0:	cmp	x0, #0x0
   181b4:	mov	x19, x0
   181b8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   181bc:	b.ne	181d4 <__sanitizer_set_report_fd@@Base+0x4904>  // b.any
   181c0:	mov	w0, w19
   181c4:	ldp	x21, x22, [sp, #16]
   181c8:	ldp	x23, x30, [sp, #32]
   181cc:	ldp	x19, x20, [sp], #112
   181d0:	ret
   181d4:	mov	x0, x21
   181d8:	mov	x2, x3
   181dc:	ldr	x3, [sp, #80]
   181e0:	add	x1, x22, #0x18
   181e4:	str	x3, [x0], #8
   181e8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   181ec:	ldr	x0, [sp, #88]
   181f0:	str	w0, [x21, #136]
   181f4:	ldr	x0, [sp, #96]
   181f8:	str	x0, [x21, #144]
   181fc:	mov	w0, w19
   18200:	ldp	x21, x22, [sp, #16]
   18204:	ldp	x23, x30, [sp, #32]
   18208:	ldp	x19, x20, [sp], #112
   1820c:	ret
   18210:	mov	x8, #0x87                  	// #135
   18214:	mov	x3, #0x8                   	// #8
   18218:	sxtw	x0, w0
   1821c:	svc	#0x0
   18220:	ret
   18224:	nop
   18228:	mov	x2, #0x80                  	// #128
   1822c:	mov	w1, #0xff                  	// #255
   18230:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18234:	nop
   18238:	mov	x2, #0x80                  	// #128
   1823c:	mov	w1, #0x0                   	// #0
   18240:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18244:	nop
   18248:	sub	w1, w1, #0x1
   1824c:	sxtw	x3, w1
   18250:	cmp	x3, #0x3ff
   18254:	b.hi	18278 <__sanitizer_set_report_fd@@Base+0x49a8>  // b.pmore
   18258:	lsr	x3, x3, #3
   1825c:	and	w1, w1, #0x7
   18260:	mov	w2, #0x1                   	// #1
   18264:	lsl	w1, w2, w1
   18268:	ldrb	w2, [x0, x3]
   1826c:	bic	w1, w2, w1
   18270:	strb	w1, [x0, x3]
   18274:	ret
   18278:	str	x30, [sp, #-16]!
   1827c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18280:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18284:	add	x2, x2, #0xc68
   18288:	add	x0, x0, #0xb20
   1828c:	mov	x4, #0x400                 	// #1024
   18290:	mov	w1, #0x381                 	// #897
   18294:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18298:	sub	w1, w1, #0x1
   1829c:	sxtw	x3, w1
   182a0:	cmp	x3, #0x3ff
   182a4:	b.hi	182c0 <__sanitizer_set_report_fd@@Base+0x49f0>  // b.pmore
   182a8:	lsr	x3, x3, #3
   182ac:	and	w1, w1, #0x7
   182b0:	ldrb	w0, [x0, x3]
   182b4:	asr	w0, w0, w1
   182b8:	and	w0, w0, #0x1
   182bc:	ret
   182c0:	str	x30, [sp, #-16]!
   182c4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   182c8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   182cc:	add	x2, x2, #0xc68
   182d0:	add	x0, x0, #0xb20
   182d4:	mov	x4, #0x400                 	// #1024
   182d8:	mov	w1, #0x38b                 	// #907
   182dc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   182e0:	stp	x19, x20, [sp, #-144]!
   182e4:	mov	x19, x0
   182e8:	mov	w20, w1
   182ec:	stp	x23, x24, [sp, #32]
   182f0:	adrp	x24, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   182f4:	mov	w1, #0xffffffff            	// #-1
   182f8:	stp	x21, x22, [sp, #16]
   182fc:	ldr	x21, [x24, #4016]
   18300:	stp	x25, x30, [sp, #48]
   18304:	stp	xzr, xzr, [x0, #16]
   18308:	ldr	x0, [x21]
   1830c:	stp	w20, w1, [x19]
   18310:	str	xzr, [x19, #8]
   18314:	cbz	x0, 18414 <__sanitizer_set_report_fd@@Base+0x4b44>
   18318:	sub	x1, x0, #0x1
   1831c:	tst	x1, x0
   18320:	b.ne	18484 <__sanitizer_set_report_fd@@Base+0x4bb4>  // b.any
   18324:	add	x21, x19, #0x8
   18328:	add	x22, x0, #0xfff
   1832c:	neg	x0, x0
   18330:	mov	w2, #0x0                   	// #0
   18334:	and	x22, x22, x0
   18338:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1833c:	mov	x0, x22
   18340:	add	x1, x25, #0x988
   18344:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   18348:	mov	x23, x0
   1834c:	ldr	x1, [x19, #8]
   18350:	ldr	x2, [x21, #16]
   18354:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18358:	ldr	x0, [x19, #8]
   1835c:	ldr	x1, [x21, #8]
   18360:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18364:	ldr	x2, [x21, #16]
   18368:	str	x23, [x19, #8]
   1836c:	str	x22, [x21, #8]
   18370:	cmp	x2, #0xfff
   18374:	b.hi	18394 <__sanitizer_set_report_fd@@Base+0x4ac4>  // b.pmore
   18378:	cmp	x22, #0xfff
   1837c:	b.ls	18424 <__sanitizer_set_report_fd@@Base+0x4b54>  // b.plast
   18380:	mov	x3, #0x1000                	// #4096
   18384:	add	x0, x23, x2
   18388:	mov	w1, #0x0                   	// #0
   1838c:	sub	x2, x3, x2
   18390:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18394:	mov	x0, #0x1000                	// #4096
   18398:	str	x0, [x21, #16]
   1839c:	add	x21, sp, #0x40
   183a0:	mov	w3, w20
   183a4:	mov	x0, x21
   183a8:	mov	x1, #0x50                  	// #80
   183ac:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   183b0:	add	x2, x2, #0xc90
   183b4:	bl	1c9e8 <OnPrint@@Base+0x8>
   183b8:	mov	x1, x21
   183bc:	mov	x8, #0x38                  	// #56
   183c0:	mov	x0, #0xffffffffffffff9c    	// #-100
   183c4:	mov	x2, #0x4000                	// #16384
   183c8:	svc	#0x0
   183cc:	str	w0, [x19, #4]
   183d0:	sxtw	x0, w0
   183d4:	cmn	x0, #0x1, lsl #12
   183d8:	b.hi	183f0 <__sanitizer_set_report_fd@@Base+0x4b20>  // b.pmore
   183dc:	ldp	x21, x22, [sp, #16]
   183e0:	ldp	x23, x24, [sp, #32]
   183e4:	ldp	x25, x30, [sp, #48]
   183e8:	ldp	x19, x20, [sp], #144
   183ec:	ret
   183f0:	mov	w1, w20
   183f4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   183f8:	add	x0, x0, #0xca0
   183fc:	bl	1cd78 <OnPrint@@Base+0x398>
   18400:	ldp	x21, x22, [sp, #16]
   18404:	ldp	x23, x24, [sp, #32]
   18408:	ldp	x25, x30, [sp, #48]
   1840c:	ldp	x19, x20, [sp], #144
   18410:	ret
   18414:	mov	x0, #0x6                   	// #6
   18418:	bl	6870 <getauxval@plt>
   1841c:	str	x0, [x21]
   18420:	b	18318 <__sanitizer_set_report_fd@@Base+0x4a48>
   18424:	ldr	x24, [x24, #4016]
   18428:	ldr	x0, [x24]
   1842c:	cbz	x0, 18494 <__sanitizer_set_report_fd@@Base+0x4bc4>
   18430:	sub	x1, x0, #0x1
   18434:	tst	x1, x0
   18438:	b.ne	18484 <__sanitizer_set_report_fd@@Base+0x4bb4>  // b.any
   1843c:	add	x22, x0, #0xfff
   18440:	neg	x0, x0
   18444:	and	x22, x22, x0
   18448:	add	x1, x25, #0x988
   1844c:	mov	w2, #0x0                   	// #0
   18450:	mov	x0, x22
   18454:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   18458:	mov	x23, x0
   1845c:	ldr	x1, [x19, #8]
   18460:	ldr	x2, [x21, #16]
   18464:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18468:	ldr	x0, [x19, #8]
   1846c:	ldr	x1, [x21, #8]
   18470:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18474:	ldr	x2, [x21, #16]
   18478:	str	x23, [x19, #8]
   1847c:	str	x22, [x21, #8]
   18480:	b	18380 <__sanitizer_set_report_fd@@Base+0x4ab0>
   18484:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18488:	add	x0, x0, #0x970
   1848c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   18490:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   18494:	mov	x0, #0x6                   	// #6
   18498:	bl	6870 <getauxval@plt>
   1849c:	str	x0, [x24]
   184a0:	b	18430 <__sanitizer_set_report_fd@@Base+0x4b60>
   184a4:	nop
   184a8:	stp	x19, x20, [sp, #-144]!
   184ac:	mov	x20, x0
   184b0:	mov	w4, w1
   184b4:	stp	x21, x22, [sp, #16]
   184b8:	add	x21, sp, #0x40
   184bc:	ldr	w3, [x20], #8
   184c0:	mov	x1, #0x50                  	// #80
   184c4:	mov	x19, x0
   184c8:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   184cc:	mov	x0, x21
   184d0:	add	x2, x2, #0xcc8
   184d4:	str	x30, [sp, #32]
   184d8:	bl	1c9e8 <OnPrint@@Base+0x8>
   184dc:	mov	x0, x21
   184e0:	mov	x1, x20
   184e4:	mov	x3, #0x0                   	// #0
   184e8:	mov	x2, #0x4000000             	// #67108864
   184ec:	bl	13178 <__sanitizer_cov_dump@@Base+0x2418>
   184f0:	tst	w0, #0xff
   184f4:	b.eq	18500 <__sanitizer_set_report_fd@@Base+0x4c30>  // b.none
   184f8:	ldr	x3, [x19, #24]
   184fc:	cbnz	x3, 18514 <__sanitizer_set_report_fd@@Base+0x4c44>
   18500:	mov	w0, #0x0                   	// #0
   18504:	ldp	x21, x22, [sp, #16]
   18508:	ldr	x30, [sp, #32]
   1850c:	ldp	x19, x20, [sp], #144
   18510:	ret
   18514:	ldr	x4, [x19, #16]
   18518:	strb	wzr, [sp, #63]
   1851c:	cmp	x3, x4
   18520:	b.hi	1863c <__sanitizer_set_report_fd@@Base+0x4d6c>  // b.pmore
   18524:	add	x1, x3, #0x1
   18528:	b.eq	18588 <__sanitizer_set_report_fd@@Base+0x4cb8>  // b.none
   1852c:	ldr	x21, [x19, #8]
   18530:	str	x1, [x20, #16]
   18534:	add	x0, x21, x3
   18538:	add	x1, sp, #0x3f
   1853c:	mov	x2, #0x1                   	// #1
   18540:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18544:	ldr	x0, [x19, #8]
   18548:	adrp	x20, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1854c:	add	x20, x20, #0x20
   18550:	mov	x1, x20
   18554:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
   18558:	mov	x19, x0
   1855c:	cbz	x0, 18500 <__sanitizer_set_report_fd@@Base+0x4c30>
   18560:	mov	x0, x20
   18564:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   18568:	add	x0, x19, x0
   1856c:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   18570:	cmp	w0, #0x0
   18574:	cset	w0, ne  // ne = any
   18578:	ldp	x21, x22, [sp, #16]
   1857c:	ldr	x30, [sp, #32]
   18580:	ldp	x19, x20, [sp], #144
   18584:	ret
   18588:	cbz	x1, 18664 <__sanitizer_set_report_fd@@Base+0x4d94>
   1858c:	tst	x3, x1
   18590:	b.eq	18634 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.none
   18594:	clz	x2, x1
   18598:	mov	w0, #0x3f                  	// #63
   1859c:	sub	w0, w0, w2
   185a0:	mov	x2, #0x1                   	// #1
   185a4:	add	w21, w0, #0x1
   185a8:	lsl	x21, x2, x21
   185ac:	cmp	x1, x21
   185b0:	b.cs	186b0 <__sanitizer_set_report_fd@@Base+0x4de0>  // b.hs, b.nlast
   185b4:	lsl	x4, x2, x0
   185b8:	cmp	x1, x4
   185bc:	b.ls	186d0 <__sanitizer_set_report_fd@@Base+0x4e00>  // b.plast
   185c0:	cmp	x3, x21
   185c4:	b.hi	18684 <__sanitizer_set_report_fd@@Base+0x4db4>  // b.pmore
   185c8:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   185cc:	ldr	x22, [x22, #4016]
   185d0:	ldr	x0, [x22]
   185d4:	cbz	x0, 18654 <__sanitizer_set_report_fd@@Base+0x4d84>
   185d8:	sub	x22, x0, #0x1
   185dc:	tst	x22, x0
   185e0:	b.ne	186a0 <__sanitizer_set_report_fd@@Base+0x4dd0>  // b.any
   185e4:	add	x21, x21, x22
   185e8:	neg	x0, x0
   185ec:	and	x22, x21, x0
   185f0:	mov	w2, #0x0                   	// #0
   185f4:	mov	x0, x22
   185f8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   185fc:	add	x1, x1, #0x988
   18600:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   18604:	ldr	x1, [x19, #8]
   18608:	mov	x21, x0
   1860c:	ldr	x2, [x20, #16]
   18610:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18614:	ldr	x1, [x20, #8]
   18618:	ldr	x0, [x19, #8]
   1861c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18620:	ldr	x3, [x20, #16]
   18624:	str	x21, [x19, #8]
   18628:	str	x22, [x20, #8]
   1862c:	add	x1, x3, #0x1
   18630:	b	18530 <__sanitizer_set_report_fd@@Base+0x4c60>
   18634:	mov	x21, x1
   18638:	b	185c8 <__sanitizer_set_report_fd@@Base+0x4cf8>
   1863c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18640:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18644:	add	x2, x2, #0xce0
   18648:	add	x0, x0, #0x9b8
   1864c:	mov	w1, #0x1be                 	// #446
   18650:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18654:	mov	x0, #0x6                   	// #6
   18658:	bl	6870 <getauxval@plt>
   1865c:	str	x0, [x22]
   18660:	b	185d8 <__sanitizer_set_report_fd@@Base+0x4d08>
   18664:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18668:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1866c:	add	x2, x2, #0xd00
   18670:	add	x0, x0, #0x9b8
   18674:	mov	x4, #0x0                   	// #0
   18678:	mov	x3, #0x0                   	// #0
   1867c:	mov	w1, #0x177                 	// #375
   18680:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18684:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18688:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1868c:	mov	x4, x21
   18690:	add	x2, x2, #0xd58
   18694:	add	x0, x0, #0x9b8
   18698:	mov	w1, #0x1fd                 	// #509
   1869c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   186a0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   186a4:	add	x0, x0, #0x970
   186a8:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   186ac:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   186b0:	mov	x3, x1
   186b4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   186b8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   186bc:	mov	x4, x21
   186c0:	add	x2, x2, #0xd10
   186c4:	add	x0, x0, #0x9b8
   186c8:	mov	w1, #0x17b                 	// #379
   186cc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   186d0:	mov	x3, x1
   186d4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   186d8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   186dc:	add	x2, x2, #0xd38
   186e0:	add	x0, x0, #0x9b8
   186e4:	mov	w1, #0x17c                 	// #380
   186e8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   186ec:	nop
   186f0:	stp	x19, x20, [sp, #-144]!
   186f4:	stp	x23, x24, [sp, #32]
   186f8:	stp	x25, x26, [sp, #48]
   186fc:	mov	x25, x0
   18700:	ldrsw	x0, [x0, #4]
   18704:	str	x30, [sp, #80]
   18708:	cmn	x0, #0x1, lsl #12
   1870c:	b.hi	188cc <__sanitizer_set_report_fd@@Base+0x4ffc>  // b.pmore
   18710:	mov	x8, #0x3e                  	// #62
   18714:	mov	x2, #0x0                   	// #0
   18718:	stp	x21, x22, [sp, #16]
   1871c:	stp	x27, x28, [sp, #64]
   18720:	mov	x28, x1
   18724:	mov	x1, #0x0                   	// #0
   18728:	svc	#0x0
   1872c:	add	x23, x25, #0x8
   18730:	str	xzr, [x28, #16]
   18734:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   18738:	add	x0, sp, #0x88
   1873c:	ldr	x19, [x25, #16]
   18740:	str	x0, [sp, #96]
   18744:	ldr	x3, [x23, #16]
   18748:	mov	w20, #0x1                   	// #1
   1874c:	ldr	x0, [x22, #4016]
   18750:	mov	w24, #0x2                   	// #2
   18754:	str	x0, [sp, #104]
   18758:	cmp	x19, x3
   1875c:	b.ls	18774 <__sanitizer_set_report_fd@@Base+0x4ea4>  // b.plast
   18760:	ldr	x0, [x23]
   18764:	sub	x2, x19, x3
   18768:	mov	w1, #0x0                   	// #0
   1876c:	add	x0, x0, x3
   18770:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18774:	str	x19, [x23, #16]
   18778:	cmp	x19, #0xfff
   1877c:	b.ls	188f4 <__sanitizer_set_report_fd@@Base+0x5024>  // b.plast
   18780:	ldrsw	x0, [x25, #4]
   18784:	and	x2, x19, #0xffffffff
   18788:	mov	x8, #0x3d                  	// #61
   1878c:	ldr	x1, [x25, #8]
   18790:	svc	#0x0
   18794:	mov	x26, x0
   18798:	cbz	x0, 18aac <__sanitizer_set_report_fd@@Base+0x51dc>
   1879c:	cmn	x0, #0x1, lsl #12
   187a0:	b.hi	18898 <__sanitizer_set_report_fd@@Base+0x4fc8>  // b.pmore
   187a4:	ldr	x19, [x25, #8]
   187a8:	add	x27, x19, x0
   187ac:	cmp	x19, x27
   187b0:	b.cs	18840 <__sanitizer_set_report_fd@@Base+0x4f70>  // b.hs, b.nlast
   187b4:	adrp	x21, 40000 <__asan_backtrace_get_view@@Base+0x78>
   187b8:	add	x21, x21, #0x988
   187bc:	b	187cc <__sanitizer_set_report_fd@@Base+0x4efc>
   187c0:	cbnz	x2, 187e8 <__sanitizer_set_report_fd@@Base+0x4f18>
   187c4:	cmp	x27, x19
   187c8:	b.ls	18840 <__sanitizer_set_report_fd@@Base+0x4f70>  // b.plast
   187cc:	mov	x0, x19
   187d0:	ldrh	w2, [x19, #16]
   187d4:	add	x19, x19, x2
   187d8:	ldr	x2, [x0]
   187dc:	cmp	x2, #0x1
   187e0:	b.ne	187c0 <__sanitizer_set_report_fd@@Base+0x4ef0>  // b.any
   187e4:	mov	w24, w2
   187e8:	ldrb	w2, [x0, #19]
   187ec:	sub	w2, w2, #0x30
   187f0:	and	w2, w2, #0xff
   187f4:	cmp	w2, #0x9
   187f8:	b.hi	187c4 <__sanitizer_set_report_fd@@Base+0x4ef4>  // b.pmore
   187fc:	add	x0, x0, #0x13
   18800:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   18804:	ldp	x4, x3, [x28, #8]
   18808:	str	x0, [sp, #136]
   1880c:	lsr	x4, x4, #3
   18810:	cmp	x3, x4
   18814:	b.hi	18a94 <__sanitizer_set_report_fd@@Base+0x51c4>  // b.pmore
   18818:	add	x0, x3, #0x1
   1881c:	b.eq	18958 <__sanitizer_set_report_fd@@Base+0x5088>  // b.none
   18820:	ldr	x7, [x28]
   18824:	str	x0, [x28, #16]
   18828:	ldr	x1, [sp, #96]
   1882c:	add	x0, x7, x3, lsl #3
   18830:	mov	x2, #0x8                   	// #8
   18834:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18838:	cmp	x27, x19
   1883c:	b.hi	187cc <__sanitizer_set_report_fd@@Base+0x4efc>  // b.pmore
   18840:	ldr	x3, [x25, #24]
   18844:	cbz	w20, 18888 <__sanitizer_set_report_fd@@Base+0x4fb8>
   18848:	sub	x0, x3, #0x400
   1884c:	cmp	x0, x26
   18850:	b.cc	18914 <__sanitizer_set_report_fd@@Base+0x5044>  // b.lo, b.ul, b.last
   18854:	ldr	x1, [x28, #16]
   18858:	cbz	x1, 188e8 <__sanitizer_set_report_fd@@Base+0x5018>
   1885c:	ldr	x2, [x28]
   18860:	mov	x0, x25
   18864:	add	x1, x2, x1, lsl #3
   18868:	ldur	w1, [x1, #-8]
   1886c:	bl	184a8 <__sanitizer_set_report_fd@@Base+0x4bd8>
   18870:	tst	w0, #0xff
   18874:	b.eq	18a04 <__sanitizer_set_report_fd@@Base+0x5134>  // b.none
   18878:	mov	w20, #0x0                   	// #0
   1887c:	ldr	x3, [x23, #16]
   18880:	ldr	x19, [x25, #16]
   18884:	b	18758 <__sanitizer_set_report_fd@@Base+0x4e88>
   18888:	mov	w24, #0x1                   	// #1
   1888c:	mov	w20, #0x0                   	// #0
   18890:	ldr	x19, [x25, #16]
   18894:	b	18758 <__sanitizer_set_report_fd@@Base+0x4e88>
   18898:	ldr	w1, [x25]
   1889c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   188a0:	add	x0, x0, #0xd98
   188a4:	mov	w24, #0x0                   	// #0
   188a8:	bl	1cd78 <OnPrint@@Base+0x398>
   188ac:	ldp	x21, x22, [sp, #16]
   188b0:	ldp	x27, x28, [sp, #64]
   188b4:	mov	w0, w24
   188b8:	ldp	x23, x24, [sp, #32]
   188bc:	ldp	x25, x26, [sp, #48]
   188c0:	ldr	x30, [sp, #80]
   188c4:	ldp	x19, x20, [sp], #144
   188c8:	ret
   188cc:	mov	w24, #0x0                   	// #0
   188d0:	mov	w0, w24
   188d4:	ldp	x23, x24, [sp, #32]
   188d8:	ldp	x25, x26, [sp, #48]
   188dc:	ldr	x30, [sp, #80]
   188e0:	ldp	x19, x20, [sp], #144
   188e4:	ret
   188e8:	mov	w20, #0x0                   	// #0
   188ec:	ldr	x19, [x25, #16]
   188f0:	b	18758 <__sanitizer_set_report_fd@@Base+0x4e88>
   188f4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   188f8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   188fc:	mov	x3, x19
   18900:	add	x2, x2, #0xd78
   18904:	add	x0, x0, #0xb20
   18908:	mov	x4, #0x1000                	// #4096
   1890c:	mov	w1, #0x3b5                 	// #949
   18910:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18914:	cmp	x3, x3, lsl #1
   18918:	lsl	x20, x3, #1
   1891c:	ldr	x19, [x25, #16]
   18920:	b.cs	18944 <__sanitizer_set_report_fd@@Base+0x5074>  // b.hs, b.nlast
   18924:	cmp	x20, x19
   18928:	b.hi	18a18 <__sanitizer_set_report_fd@@Base+0x5148>  // b.pmore
   1892c:	ldr	x19, [x23]
   18930:	add	x0, x19, x3
   18934:	sub	x2, x20, x3
   18938:	mov	w1, #0x0                   	// #0
   1893c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   18940:	ldr	x19, [x25, #16]
   18944:	mov	x3, x20
   18948:	mov	w24, #0x1                   	// #1
   1894c:	str	x20, [x23, #16]
   18950:	mov	w20, #0x0                   	// #0
   18954:	b	18758 <__sanitizer_set_report_fd@@Base+0x4e88>
   18958:	tst	x3, x0
   1895c:	b.eq	18998 <__sanitizer_set_report_fd@@Base+0x50c8>  // b.none
   18960:	clz	x2, x0
   18964:	mov	w1, #0x3f                  	// #63
   18968:	sub	w2, w1, w2
   1896c:	mov	x1, #0x1                   	// #1
   18970:	add	w4, w2, #0x1
   18974:	lsl	x4, x1, x4
   18978:	cmp	x4, x0
   1897c:	b.ls	18a78 <__sanitizer_set_report_fd@@Base+0x51a8>  // b.plast
   18980:	lsl	x1, x1, x2
   18984:	cmp	x1, x0
   18988:	b.cs	18b0c <__sanitizer_set_report_fd@@Base+0x523c>  // b.hs, b.nlast
   1898c:	cmp	x3, x4
   18990:	b.hi	18ae4 <__sanitizer_set_report_fd@@Base+0x5214>  // b.pmore
   18994:	mov	x0, x4
   18998:	ldr	x1, [sp, #104]
   1899c:	ldr	x2, [x1]
   189a0:	lsl	x1, x0, #3
   189a4:	cbz	x2, 18ab8 <__sanitizer_set_report_fd@@Base+0x51e8>
   189a8:	sub	x0, x2, #0x1
   189ac:	tst	x2, x0
   189b0:	b.ne	18ad4 <__sanitizer_set_report_fd@@Base+0x5204>  // b.any
   189b4:	add	x0, x1, x0
   189b8:	neg	x2, x2
   189bc:	and	x4, x0, x2
   189c0:	mov	x1, x21
   189c4:	mov	x0, x4
   189c8:	mov	w2, #0x0                   	// #0
   189cc:	str	x4, [sp, #120]
   189d0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   189d4:	str	x0, [sp, #112]
   189d8:	ldr	x1, [x28]
   189dc:	ldr	x2, [x28, #16]
   189e0:	lsl	x2, x2, #3
   189e4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   189e8:	ldp	x0, x1, [x28]
   189ec:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   189f0:	ldr	x3, [x28, #16]
   189f4:	ldp	x7, x4, [sp, #112]
   189f8:	add	x0, x3, #0x1
   189fc:	stp	x7, x4, [x28]
   18a00:	b	18824 <__sanitizer_set_report_fd@@Base+0x4f54>
   18a04:	mov	w24, #0x1                   	// #1
   18a08:	mov	w20, #0x0                   	// #0
   18a0c:	ldr	x3, [x23, #16]
   18a10:	ldr	x19, [x25, #16]
   18a14:	b	18758 <__sanitizer_set_report_fd@@Base+0x4e88>
   18a18:	cbz	x20, 18b2c <__sanitizer_set_report_fd@@Base+0x525c>
   18a1c:	ldr	x19, [x22, #4016]
   18a20:	ldr	x0, [x19]
   18a24:	cbz	x0, 18afc <__sanitizer_set_report_fd@@Base+0x522c>
   18a28:	sub	x1, x0, #0x1
   18a2c:	tst	x0, x1
   18a30:	b.ne	18ad4 <__sanitizer_set_report_fd@@Base+0x5204>  // b.any
   18a34:	add	x1, x20, x1
   18a38:	neg	x0, x0
   18a3c:	and	x21, x1, x0
   18a40:	mov	w2, #0x0                   	// #0
   18a44:	mov	x0, x21
   18a48:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18a4c:	add	x1, x1, #0x988
   18a50:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   18a54:	ldr	x1, [x23]
   18a58:	mov	x19, x0
   18a5c:	ldr	x2, [x23, #16]
   18a60:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   18a64:	ldp	x0, x1, [x23]
   18a68:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18a6c:	stp	x19, x21, [x23]
   18a70:	ldr	x3, [x23, #16]
   18a74:	b	18930 <__sanitizer_set_report_fd@@Base+0x5060>
   18a78:	mov	x3, x0
   18a7c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18a80:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18a84:	add	x2, x2, #0xd10
   18a88:	add	x0, x0, #0x9b8
   18a8c:	mov	w1, #0x17b                 	// #379
   18a90:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18a94:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18a98:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18a9c:	add	x2, x2, #0xce0
   18aa0:	add	x0, x0, #0x9b8
   18aa4:	mov	w1, #0x1be                 	// #446
   18aa8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18aac:	ldp	x21, x22, [sp, #16]
   18ab0:	ldp	x27, x28, [sp, #64]
   18ab4:	b	188b4 <__sanitizer_set_report_fd@@Base+0x4fe4>
   18ab8:	mov	x0, #0x6                   	// #6
   18abc:	str	x1, [sp, #112]
   18ac0:	bl	6870 <getauxval@plt>
   18ac4:	mov	x2, x0
   18ac8:	ldp	x0, x1, [sp, #104]
   18acc:	str	x2, [x0]
   18ad0:	b	189a8 <__sanitizer_set_report_fd@@Base+0x50d8>
   18ad4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18ad8:	add	x0, x0, #0x970
   18adc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   18ae0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   18ae4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18ae8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18aec:	add	x2, x2, #0xd58
   18af0:	add	x0, x0, #0x9b8
   18af4:	mov	w1, #0x1fd                 	// #509
   18af8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18afc:	mov	x0, #0x6                   	// #6
   18b00:	bl	6870 <getauxval@plt>
   18b04:	str	x0, [x19]
   18b08:	b	18a28 <__sanitizer_set_report_fd@@Base+0x5158>
   18b0c:	mov	x4, x1
   18b10:	mov	x3, x0
   18b14:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18b18:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18b1c:	add	x2, x2, #0xd38
   18b20:	add	x0, x0, #0x9b8
   18b24:	mov	w1, #0x17c                 	// #380
   18b28:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18b2c:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   18b30:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18b34:	add	x2, x2, #0x140
   18b38:	add	x0, x0, #0x9b8
   18b3c:	mov	x4, #0x0                   	// #0
   18b40:	mov	x3, #0x0                   	// #0
   18b44:	mov	w1, #0x1fc                 	// #508
   18b48:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18b4c:	nop
   18b50:	mov	x1, x0
   18b54:	ldrsw	x0, [x0, #4]
   18b58:	cmn	x0, #0x1, lsl #12
   18b5c:	b.hi	18b68 <__sanitizer_set_report_fd@@Base+0x5298>  // b.pmore
   18b60:	mov	x8, #0x39                  	// #57
   18b64:	svc	#0x0
   18b68:	ldp	x0, x1, [x1, #8]
   18b6c:	b	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18b70:	stp	x29, x30, [sp, #-16]!
   18b74:	mov	x0, #0x1                   	// #1
   18b78:	mov	x29, sp
   18b7c:	clz	x1, x29
   18b80:	neg	w1, w1
   18b84:	ldp	x29, x30, [sp], #16
   18b88:	lsl	x0, x0, x1
   18b8c:	sub	x0, x0, #0x1
   18b90:	ret
   18b94:	nop
   18b98:	stp	x29, x30, [sp, #-16]!
   18b9c:	mov	x0, #0x1                   	// #1
   18ba0:	mov	x29, sp
   18ba4:	clz	x1, x29
   18ba8:	neg	w1, w1
   18bac:	ldp	x29, x30, [sp], #16
   18bb0:	lsl	x0, x0, x1
   18bb4:	sub	x0, x0, #0x1
   18bb8:	ret
   18bbc:	nop
   18bc0:	mov	x0, #0x6                   	// #6
   18bc4:	b	6870 <getauxval@plt>
   18bc8:	stp	x19, x20, [sp, #-32]!
   18bcc:	mov	x2, x0
   18bd0:	mov	x20, x0
   18bd4:	mov	x19, x1
   18bd8:	mov	x3, x1
   18bdc:	mov	x8, #0x4e                  	// #78
   18be0:	mov	x0, #0xffffffffffffff9c    	// #-100
   18be4:	stp	x21, x30, [sp, #16]
   18be8:	adrp	x21, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18bec:	add	x1, x21, #0xb90
   18bf0:	svc	#0x0
   18bf4:	cmn	x0, #0x1, lsl #12
   18bf8:	b.hi	18c08 <__sanitizer_set_report_fd@@Base+0x5338>  // b.pmore
   18bfc:	ldp	x21, x30, [sp, #16]
   18c00:	ldp	x19, x20, [sp], #32
   18c04:	ret
   18c08:	neg	w1, w0
   18c0c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18c10:	add	x0, x0, #0xde0
   18c14:	bl	1cd78 <OnPrint@@Base+0x398>
   18c18:	add	x3, x21, #0xb90
   18c1c:	mov	x0, x20
   18c20:	mov	x1, x19
   18c24:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18c28:	add	x2, x2, #0x8b0
   18c2c:	bl	1c9e8 <OnPrint@@Base+0x8>
   18c30:	cmp	x19, w0, sxtw
   18c34:	sxtw	x0, w0
   18c38:	b.hi	18bfc <__sanitizer_set_report_fd@@Base+0x532c>  // b.pmore
   18c3c:	mov	x3, x0
   18c40:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18c44:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18c48:	mov	x4, x19
   18c4c:	add	x2, x2, #0xe40
   18c50:	add	x0, x0, #0xb20
   18c54:	mov	w1, #0x470                 	// #1136
   18c58:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18c5c:	nop
   18c60:	stp	x19, x20, [sp, #-64]!
   18c64:	mov	x5, #0x0                   	// #0
   18c68:	mov	x19, x0
   18c6c:	mov	x20, x1
   18c70:	add	x3, sp, #0x38
   18c74:	add	x2, sp, #0x30
   18c78:	add	x1, sp, #0x28
   18c7c:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18c80:	mov	x4, #0x100000              	// #1048576
   18c84:	add	x0, x0, #0xb78
   18c88:	str	x30, [sp, #24]
   18c8c:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   18c90:	tst	w0, #0xff
   18c94:	b.eq	18cc4 <__sanitizer_set_report_fd@@Base+0x53f4>  // b.none
   18c98:	ldr	x1, [sp, #40]
   18c9c:	mov	x2, x20
   18ca0:	mov	x0, x19
   18ca4:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   18ca8:	ldp	x0, x1, [sp, #40]
   18cac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   18cb0:	mov	x0, x19
   18cb4:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   18cb8:	ldr	x30, [sp, #24]
   18cbc:	ldp	x19, x20, [sp], #64
   18cc0:	ret
   18cc4:	mov	x2, x19
   18cc8:	mov	x3, x20
   18ccc:	mov	x8, #0x4e                  	// #78
   18cd0:	mov	x0, #0xffffffffffffff9c    	// #-100
   18cd4:	str	x21, [sp, #16]
   18cd8:	adrp	x21, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18cdc:	add	x1, x21, #0xb90
   18ce0:	svc	#0x0
   18ce4:	cmn	x0, #0x1, lsl #12
   18ce8:	b.hi	18cfc <__sanitizer_set_report_fd@@Base+0x542c>  // b.pmore
   18cec:	ldr	x21, [sp, #16]
   18cf0:	ldr	x30, [sp, #24]
   18cf4:	ldp	x19, x20, [sp], #64
   18cf8:	ret
   18cfc:	neg	w1, w0
   18d00:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18d04:	add	x0, x0, #0xde0
   18d08:	bl	1cd78 <OnPrint@@Base+0x398>
   18d0c:	add	x3, x21, #0xb90
   18d10:	mov	x0, x19
   18d14:	mov	x1, x20
   18d18:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18d1c:	add	x2, x2, #0x8b0
   18d20:	bl	1c9e8 <OnPrint@@Base+0x8>
   18d24:	cmp	x20, w0, sxtw
   18d28:	sxtw	x0, w0
   18d2c:	b.hi	18cec <__sanitizer_set_report_fd@@Base+0x541c>  // b.pmore
   18d30:	mov	x3, x0
   18d34:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18d38:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18d3c:	mov	x4, x20
   18d40:	add	x2, x2, #0xe40
   18d44:	add	x0, x0, #0xb20
   18d48:	mov	w1, #0x470                 	// #1136
   18d4c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18d50:	stp	x19, x20, [sp, #-32]!
   18d54:	mov	x20, x1
   18d58:	mov	x19, x0
   18d5c:	str	x30, [sp, #16]
   18d60:	ldrb	w1, [x0]
   18d64:	cbz	w1, 18d98 <__sanitizer_set_report_fd@@Base+0x54c8>
   18d68:	ldrb	w2, [x19, #1]!
   18d6c:	cbnz	w2, 18d68 <__sanitizer_set_report_fd@@Base+0x5498>
   18d70:	cmp	x0, x19
   18d74:	b.cc	18d88 <__sanitizer_set_report_fd@@Base+0x54b8>  // b.lo, b.ul, b.last
   18d78:	b	18d98 <__sanitizer_set_report_fd@@Base+0x54c8>
   18d7c:	ldrb	w2, [x19, #-1]!
   18d80:	cmp	x0, x19
   18d84:	b.eq	18de0 <__sanitizer_set_report_fd@@Base+0x5510>  // b.none
   18d88:	ldrb	w2, [x19]
   18d8c:	cmp	w2, #0x2f
   18d90:	b.ne	18d7c <__sanitizer_set_report_fd@@Base+0x54ac>  // b.any
   18d94:	add	x19, x19, #0x1
   18d98:	mov	x0, x20
   18d9c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   18da0:	mov	x1, x20
   18da4:	mov	x20, x0
   18da8:	mov	x2, x20
   18dac:	mov	x0, x19
   18db0:	bl	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
   18db4:	mov	w1, #0x0                   	// #0
   18db8:	cbnz	w0, 18dd0 <__sanitizer_set_report_fd@@Base+0x5500>
   18dbc:	ldrb	w0, [x19, x20]
   18dc0:	sub	w0, w0, #0x2d
   18dc4:	and	w0, w0, #0xff
   18dc8:	cmp	w0, #0x1
   18dcc:	cset	w1, ls  // ls = plast
   18dd0:	mov	w0, w1
   18dd4:	ldr	x30, [sp, #16]
   18dd8:	ldp	x19, x20, [sp], #32
   18ddc:	ret
   18de0:	cmp	w2, #0x2f
   18de4:	b.ne	18d98 <__sanitizer_set_report_fd@@Base+0x54c8>  // b.any
   18de8:	add	x19, x19, #0x1
   18dec:	b	18d98 <__sanitizer_set_report_fd@@Base+0x54c8>
   18df0:	stp	x19, x20, [sp, #-80]!
   18df4:	stp	x21, x22, [sp, #16]
   18df8:	str	x30, [sp, #72]
   18dfc:	cbz	x0, 18f3c <__sanitizer_set_report_fd@@Base+0x566c>
   18e00:	str	x27, [sp, #64]
   18e04:	mov	x21, x1
   18e08:	ldr	x27, [x0]
   18e0c:	mov	x22, #0xffffffffffffffff    	// #-1
   18e10:	ldrh	w0, [x27, #54]
   18e14:	ldrh	w20, [x27, #56]
   18e18:	ldr	x19, [x27, #32]
   18e1c:	and	x2, x0, #0xffff
   18e20:	mul	w20, w20, w0
   18e24:	add	x19, x27, x19
   18e28:	mov	x0, x19
   18e2c:	add	x20, x19, w20, sxtw
   18e30:	cmp	x19, x20
   18e34:	b.eq	18ee8 <__sanitizer_set_report_fd@@Base+0x5618>  // b.none
   18e38:	stp	x23, x24, [sp, #32]
   18e3c:	stp	x25, x26, [sp, #48]
   18e40:	ldr	w3, [x0]
   18e44:	cmp	w3, #0x1
   18e48:	b.ne	18e58 <__sanitizer_set_report_fd@@Base+0x5588>  // b.any
   18e4c:	ldr	x1, [x0, #16]
   18e50:	cmp	x22, x1
   18e54:	csel	x22, x22, x1, ls  // ls = plast
   18e58:	add	x0, x0, x2
   18e5c:	cmp	x20, x0
   18e60:	b.ne	18e40 <__sanitizer_set_report_fd@@Base+0x5570>  // b.any
   18e64:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   18e68:	sub	x22, x27, x22
   18e6c:	ldr	x23, [x23, #4016]
   18e70:	b	18e80 <__sanitizer_set_report_fd@@Base+0x55b0>
   18e74:	add	x19, x19, x2
   18e78:	cmp	x20, x19
   18e7c:	b.eq	18ee0 <__sanitizer_set_report_fd@@Base+0x5610>  // b.none
   18e80:	ldr	w0, [x19]
   18e84:	cmp	w0, #0x1
   18e88:	b.ne	18e74 <__sanitizer_set_report_fd@@Base+0x55a4>  // b.any
   18e8c:	ldr	x0, [x23]
   18e90:	ldr	x25, [x19, #16]
   18e94:	neg	x24, x0
   18e98:	ldr	x1, [x19, #40]
   18e9c:	add	x25, x22, x25
   18ea0:	and	x24, x24, x25
   18ea4:	add	x26, x25, x1
   18ea8:	cbz	x0, 18efc <__sanitizer_set_report_fd@@Base+0x562c>
   18eac:	sub	x2, x0, #0x1
   18eb0:	tst	x2, x0
   18eb4:	b.ne	18f2c <__sanitizer_set_report_fd@@Base+0x565c>  // b.any
   18eb8:	add	x2, x2, x26
   18ebc:	neg	x0, x0
   18ec0:	and	x1, x2, x0
   18ec4:	mov	x0, x24
   18ec8:	sub	x1, x1, x24
   18ecc:	blr	x21
   18ed0:	ldrh	w2, [x27, #54]
   18ed4:	add	x19, x19, x2
   18ed8:	cmp	x20, x19
   18edc:	b.ne	18e80 <__sanitizer_set_report_fd@@Base+0x55b0>  // b.any
   18ee0:	ldp	x23, x24, [sp, #32]
   18ee4:	ldp	x25, x26, [sp, #48]
   18ee8:	ldp	x21, x22, [sp, #16]
   18eec:	ldr	x27, [sp, #64]
   18ef0:	ldr	x30, [sp, #72]
   18ef4:	ldp	x19, x20, [sp], #80
   18ef8:	ret
   18efc:	mov	x0, #0x6                   	// #6
   18f00:	bl	6870 <getauxval@plt>
   18f04:	str	x0, [x23]
   18f08:	neg	x24, x0
   18f0c:	and	x24, x24, x25
   18f10:	cbnz	x0, 18eac <__sanitizer_set_report_fd@@Base+0x55dc>
   18f14:	mov	x0, #0x6                   	// #6
   18f18:	bl	6870 <getauxval@plt>
   18f1c:	str	x0, [x23]
   18f20:	sub	x2, x0, #0x1
   18f24:	tst	x2, x0
   18f28:	b.eq	18eb8 <__sanitizer_set_report_fd@@Base+0x55e8>  // b.none
   18f2c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   18f30:	add	x0, x0, #0x970
   18f34:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   18f38:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   18f3c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18f40:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18f44:	add	x2, x2, #0xe68
   18f48:	add	x0, x0, #0xb20
   18f4c:	mov	x4, #0x0                   	// #0
   18f50:	mov	x3, #0x0                   	// #0
   18f54:	mov	w1, #0x495                 	// #1173
   18f58:	stp	x23, x24, [sp, #32]
   18f5c:	stp	x25, x26, [sp, #48]
   18f60:	str	x27, [sp, #64]
   18f64:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18f68:	cmp	x0, #0x0
   18f6c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   18f70:	b.eq	18fc4 <__sanitizer_set_report_fd@@Base+0x56f4>  // b.none
   18f74:	str	x30, [sp, #-16]!
   18f78:	mov	x7, x1
   18f7c:	ands	x1, x1, #0xf
   18f80:	b.ne	18fcc <__sanitizer_set_report_fd@@Base+0x56fc>  // b.any
   18f84:	sub	x1, x7, #0x10
   18f88:	stp	x0, x3, [x7, #-16]
   18f8c:	mov	x0, x2
   18f90:	mov	x2, x4
   18f94:	mov	x3, x5
   18f98:	mov	x4, x6
   18f9c:	mov	x8, #0xdc                  	// #220
   18fa0:	svc	#0x0
   18fa4:	cmp	x0, #0x0
   18fa8:	b.ne	18fbc <__sanitizer_set_report_fd@@Base+0x56ec>  // b.any
   18fac:	ldp	x1, x0, [sp], #16
   18fb0:	blr	x1
   18fb4:	mov	x8, #0x5d                  	// #93
   18fb8:	svc	#0x0
   18fbc:	ldr	x30, [sp], #16
   18fc0:	ret
   18fc4:	mov	x0, #0xffffffffffffffea    	// #-22
   18fc8:	ret
   18fcc:	mov	x4, x1
   18fd0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18fd4:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   18fd8:	add	x2, x2, #0xe80
   18fdc:	add	x0, x0, #0xb20
   18fe0:	mov	x3, #0x0                   	// #0
   18fe4:	mov	w1, #0x54b                 	// #1355
   18fe8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   18fec:	nop
   18ff0:	cmp	w0, #0x7
   18ff4:	b.eq	190a0 <__sanitizer_set_report_fd@@Base+0x57d0>  // b.none
   18ff8:	b.gt	19044 <__sanitizer_set_report_fd@@Base+0x5774>
   18ffc:	cmp	w0, #0x5
   19000:	b.eq	190b8 <__sanitizer_set_report_fd@@Base+0x57e8>  // b.none
   19004:	cmp	w0, #0x6
   19008:	b.ne	19024 <__sanitizer_set_report_fd@@Base+0x5754>  // b.any
   1900c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19010:	ldr	x0, [x1, #4056]
   19014:	ldr	w0, [x0, #80]
   19018:	cmp	w0, #0x1
   1901c:	b.eq	19068 <__sanitizer_set_report_fd@@Base+0x5798>  // b.none
   19020:	ret
   19024:	cmp	w0, #0x4
   19028:	b.ne	19080 <__sanitizer_set_report_fd@@Base+0x57b0>  // b.any
   1902c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19030:	ldr	x0, [x1, #4056]
   19034:	ldr	w0, [x0, #84]
   19038:	cmp	w0, #0x1
   1903c:	b.ne	19020 <__sanitizer_set_report_fd@@Base+0x5750>  // b.any
   19040:	b	19068 <__sanitizer_set_report_fd@@Base+0x5798>
   19044:	cmp	w0, #0x8
   19048:	b.eq	19088 <__sanitizer_set_report_fd@@Base+0x57b8>  // b.none
   1904c:	cmp	w0, #0xb
   19050:	b.ne	19080 <__sanitizer_set_report_fd@@Base+0x57b0>  // b.any
   19054:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19058:	ldr	x0, [x1, #4056]
   1905c:	ldr	w0, [x0, #72]
   19060:	cmp	w0, #0x1
   19064:	b.ne	19020 <__sanitizer_set_report_fd@@Base+0x5750>  // b.any
   19068:	ldr	x1, [x1, #4056]
   1906c:	mov	w2, #0x2                   	// #2
   19070:	ldrb	w1, [x1, #96]
   19074:	cmp	w1, #0x0
   19078:	csel	w0, w0, w2, ne  // ne = any
   1907c:	ret
   19080:	mov	w0, #0x0                   	// #0
   19084:	ret
   19088:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1908c:	ldr	x0, [x1, #4056]
   19090:	ldr	w0, [x0, #92]
   19094:	cmp	w0, #0x1
   19098:	b.ne	19020 <__sanitizer_set_report_fd@@Base+0x5750>  // b.any
   1909c:	b	19068 <__sanitizer_set_report_fd@@Base+0x5798>
   190a0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   190a4:	ldr	x0, [x1, #4056]
   190a8:	ldr	w0, [x0, #76]
   190ac:	cmp	w0, #0x1
   190b0:	b.ne	19020 <__sanitizer_set_report_fd@@Base+0x5750>  // b.any
   190b4:	b	19068 <__sanitizer_set_report_fd@@Base+0x5798>
   190b8:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   190bc:	ldr	x0, [x1, #4056]
   190c0:	ldr	w0, [x0, #88]
   190c4:	cmp	w0, #0x1
   190c8:	b.ne	19020 <__sanitizer_set_report_fd@@Base+0x5750>  // b.any
   190cc:	b	19068 <__sanitizer_set_report_fd@@Base+0x5798>
   190d0:	stp	x19, x20, [sp, #-320]!
   190d4:	mov	x2, #0x80                  	// #128
   190d8:	add	x20, sp, #0x40
   190dc:	stp	x21, x22, [sp, #16]
   190e0:	mov	x21, x0
   190e4:	mov	x22, x1
   190e8:	mov	x0, x20
   190ec:	mov	w1, #0xff                  	// #255
   190f0:	str	x30, [sp, #32]
   190f4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   190f8:	add	x19, sp, #0xc0
   190fc:	ldrb	w4, [sp, #68]
   19100:	mov	x1, x20
   19104:	mov	x2, x19
   19108:	mov	x8, #0x87                  	// #135
   1910c:	and	w4, w4, #0xfffffffe
   19110:	mov	x0, #0x2                   	// #2
   19114:	mov	x3, #0x8                   	// #8
   19118:	strb	w4, [sp, #68]
   1911c:	svc	#0x0
   19120:	mov	x1, #0x0                   	// #0
   19124:	mov	x3, x22
   19128:	mov	x2, x21
   1912c:	add	x0, sp, #0x38
   19130:	bl	68e0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   19134:	mov	x1, x19
   19138:	mov	x8, #0x87                  	// #135
   1913c:	mov	x0, #0x2                   	// #2
   19140:	mov	x2, #0x0                   	// #0
   19144:	mov	x3, #0x8                   	// #8
   19148:	svc	#0x0
   1914c:	ldp	x21, x22, [sp, #16]
   19150:	ldr	x30, [sp, #32]
   19154:	ldr	x0, [sp, #56]
   19158:	ldp	x19, x20, [sp], #320
   1915c:	ret
   19160:	mov	x1, #0x0                   	// #0
   19164:	b	65c0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   19168:	ldr	x0, [x0, #8]
   1916c:	add	x1, x0, #0x1d0
   19170:	ldr	w0, [x0, #468]
   19174:	cbz	w0, 191a8 <__sanitizer_set_report_fd@@Base+0x58d8>
   19178:	mov	w3, #0x5201                	// #20993
   1917c:	movk	w3, #0x4553, lsl #16
   19180:	b	19190 <__sanitizer_set_report_fd@@Base+0x58c0>
   19184:	add	x1, x1, w0, uxtw
   19188:	ldr	w0, [x1, #4]
   1918c:	cbz	w0, 191a8 <__sanitizer_set_report_fd@@Base+0x58d8>
   19190:	ldr	w2, [x1]
   19194:	cmp	w2, w3
   19198:	b.ne	19184 <__sanitizer_set_report_fd@@Base+0x58b4>  // b.any
   1919c:	ldr	x0, [x1, #8]
   191a0:	ubfx	w0, w0, #6, #1
   191a4:	add	w0, w0, #0x1
   191a8:	ret
   191ac:	nop
   191b0:	ret
   191b4:	nop
   191b8:	ldr	x1, [x0, #8]
   191bc:	ldr	x2, [x1, #416]
   191c0:	ldp	x3, x1, [x1, #432]
   191c4:	stp	x1, x3, [x0, #24]
   191c8:	str	x2, [x0, #40]
   191cc:	ret
   191d0:	ret
   191d4:	nop
   191d8:	ret
   191dc:	nop
   191e0:	ret
   191e4:	nop
   191e8:	tbnz	w1, #3, 191f0 <__sanitizer_set_report_fd@@Base+0x5920>
   191ec:	ret
   191f0:	mov	x2, x0
   191f4:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   191f8:	add	x0, x1, #0xea8
   191fc:	mov	x1, x2
   19200:	str	x30, [sp, #-16]!
   19204:	bl	1cd78 <OnPrint@@Base+0x398>
   19208:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1920c:	nop
   19210:	str	x30, [sp, #-16]!
   19214:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   19218:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1921c:	add	x2, x2, #0xfc0
   19220:	add	x0, x0, #0xb20
   19224:	mov	x4, #0x0                   	// #0
   19228:	mov	x3, #0x0                   	// #0
   1922c:	mov	w1, #0x80a                 	// #2058
   19230:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19234:	nop
   19238:	sub	x5, x1, #0x1
   1923c:	mov	x3, x1
   19240:	cmp	x5, #0xff
   19244:	mov	x4, x0
   19248:	and	w2, w2, #0xff
   1924c:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   19250:	b.ne	1925c <__sanitizer_set_report_fd@@Base+0x598c>  // b.any
   19254:	mov	w0, #0x0                   	// #0
   19258:	ret
   1925c:	adrp	x5, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19260:	add	x5, x5, #0xdf8
   19264:	ldrb	w6, [x5, #24]
   19268:	tst	w6, #0xff
   1926c:	b.ne	19294 <__sanitizer_set_report_fd@@Base+0x59c4>  // b.any
   19270:	eor	w2, w2, #0x1
   19274:	mov	x8, #0x116                 	// #278
   19278:	and	x2, x2, #0xff
   1927c:	svc	#0x0
   19280:	cmn	x0, #0x1, lsl #12
   19284:	b.hi	192e8 <__sanitizer_set_report_fd@@Base+0x5a18>  // b.pmore
   19288:	cmp	x1, x0
   1928c:	mov	w0, #0x1                   	// #1
   19290:	b.eq	19258 <__sanitizer_set_report_fd@@Base+0x5988>  // b.none
   19294:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19298:	mov	x8, #0x38                  	// #56
   1929c:	add	x1, x1, #0x0
   192a0:	mov	x0, #0xffffffffffffff9c    	// #-100
   192a4:	mov	x2, #0x0                   	// #0
   192a8:	svc	#0x0
   192ac:	cmn	x0, #0x1, lsl #12
   192b0:	b.hi	19254 <__sanitizer_set_report_fd@@Base+0x5984>  // b.pmore
   192b4:	sxtw	x5, w0
   192b8:	mov	x0, x5
   192bc:	mov	x1, x4
   192c0:	mov	x2, x3
   192c4:	mov	x8, #0x3f                  	// #63
   192c8:	svc	#0x0
   192cc:	cmn	x0, #0x1, lsl #12
   192d0:	b.hi	192fc <__sanitizer_set_report_fd@@Base+0x5a2c>  // b.pmore
   192d4:	mov	x0, x5
   192d8:	mov	x8, #0x39                  	// #57
   192dc:	svc	#0x0
   192e0:	mov	w0, #0x1                   	// #1
   192e4:	ret
   192e8:	cmn	w0, #0x26
   192ec:	b.ne	19294 <__sanitizer_set_report_fd@@Base+0x59c4>  // b.any
   192f0:	mov	w0, #0x1                   	// #1
   192f4:	strb	w0, [x5, #24]
   192f8:	b	19294 <__sanitizer_set_report_fd@@Base+0x59c4>
   192fc:	cmn	w0, #0x4
   19300:	b.eq	192b8 <__sanitizer_set_report_fd@@Base+0x59e8>  // b.none
   19304:	mov	w0, #0x0                   	// #0
   19308:	b	19258 <__sanitizer_set_report_fd@@Base+0x5988>
   1930c:	nop
   19310:	stp	x19, x20, [sp, #-176]!
   19314:	stp	x23, x24, [sp, #32]
   19318:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1931c:	ldr	x19, [x23, #4016]
   19320:	stp	x21, x22, [sp, #16]
   19324:	mov	x21, x0
   19328:	stp	x25, x30, [sp, #48]
   1932c:	mov	x22, x2
   19330:	ldr	x1, [x19]
   19334:	str	xzr, [sp, #64]
   19338:	stp	xzr, xzr, [sp, #72]
   1933c:	cbz	x1, 1953c <__sanitizer_set_report_fd@@Base+0x5c6c>
   19340:	sub	x19, x1, #0x1
   19344:	ands	x19, x19, x1
   19348:	b.ne	19650 <__sanitizer_set_report_fd@@Base+0x5d80>  // b.any
   1934c:	add	x25, x1, #0xfff
   19350:	neg	x1, x1
   19354:	and	x25, x25, x1
   19358:	mov	w2, #0x0                   	// #0
   1935c:	mov	x0, x25
   19360:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19364:	add	x1, x24, #0x988
   19368:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1936c:	ldr	x1, [sp, #64]
   19370:	mov	x20, x0
   19374:	ldr	x2, [sp, #80]
   19378:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1937c:	ldp	x0, x1, [sp, #64]
   19380:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   19384:	stp	x20, x25, [sp, #64]
   19388:	ldr	x2, [sp, #80]
   1938c:	cmp	x2, #0xfff
   19390:	b.hi	193b4 <__sanitizer_set_report_fd@@Base+0x5ae4>  // b.pmore
   19394:	cmp	x25, #0xfff
   19398:	b.ls	195f8 <__sanitizer_set_report_fd@@Base+0x5d28>  // b.plast
   1939c:	mov	x3, #0x1000                	// #4096
   193a0:	add	x0, x20, x2
   193a4:	mov	w1, #0x0                   	// #0
   193a8:	sub	x2, x3, x2
   193ac:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   193b0:	ldr	x20, [sp, #64]
   193b4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   193b8:	ldr	q0, [x0, #592]
   193bc:	str	q0, [sp, #80]
   193c0:	strb	wzr, [x20]
   193c4:	ldrb	w0, [x22, #8]
   193c8:	cbnz	w0, 194e0 <__sanitizer_set_report_fd@@Base+0x5c10>
   193cc:	ldr	x2, [x21, #8]
   193d0:	cbz	x2, 193e4 <__sanitizer_set_report_fd@@Base+0x5b14>
   193d4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   193d8:	add	x0, sp, #0x40
   193dc:	add	x1, x1, #0x8b0
   193e0:	bl	1ce00 <OnPrint@@Base+0x420>
   193e4:	ldr	x1, [sp, #80]
   193e8:	ldr	x0, [sp, #64]
   193ec:	cbz	x1, 19660 <__sanitizer_set_report_fd@@Base+0x5d90>
   193f0:	ldrb	w1, [x0]
   193f4:	cbz	w1, 194c0 <__sanitizer_set_report_fd@@Base+0x5bf0>
   193f8:	movi	v0.4s, #0x0
   193fc:	add	x25, sp, #0x60
   19400:	mov	x2, #0x10                  	// #16
   19404:	mov	w1, #0x0                   	// #0
   19408:	add	x0, x25, #0x1c
   1940c:	str	xzr, [sp, #96]
   19410:	str	wzr, [sp, #120]
   19414:	stur	q0, [sp, #104]
   19418:	strb	wzr, [sp, #140]
   1941c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   19420:	movi	v0.4s, #0x0
   19424:	mov	x0, x25
   19428:	ldr	x2, [x21]
   1942c:	str	xzr, [sp, #144]
   19430:	ldr	x1, [sp, #64]
   19434:	stur	q0, [sp, #152]
   19438:	bl	f898 <__sancov_default_options@@Base+0x2ee8>
   1943c:	ldrh	w3, [x21, #24]
   19440:	cbz	w3, 19470 <__sanitizer_set_report_fd@@Base+0x5ba0>
   19444:	ldr	x0, [x21, #16]
   19448:	mov	w20, #0x0                   	// #0
   1944c:	nop
   19450:	ldr	w1, [x0, x19]
   19454:	add	x2, x0, x19
   19458:	cmp	w1, #0x1
   1945c:	b.eq	194f4 <__sanitizer_set_report_fd@@Base+0x5c24>  // b.none
   19460:	add	w20, w20, #0x1
   19464:	add	x19, x19, #0x38
   19468:	cmp	w3, w20
   1946c:	b.gt	19450 <__sanitizer_set_report_fd@@Base+0x5b80>
   19470:	ldr	x19, [x22]
   19474:	mov	x0, #0xe38f                	// #58255
   19478:	movk	x0, #0x8e38, lsl #16
   1947c:	movk	x0, #0x38e3, lsl #32
   19480:	ldp	x4, x3, [x19, #8]
   19484:	movk	x0, #0xe38e, lsl #48
   19488:	umulh	x4, x4, x0
   1948c:	lsr	x4, x4, #6
   19490:	cmp	x3, x4
   19494:	b.hi	1968c <__sanitizer_set_report_fd@@Base+0x5dbc>  // b.pmore
   19498:	add	x0, x3, #0x1
   1949c:	b.eq	1954c <__sanitizer_set_report_fd@@Base+0x5c7c>  // b.none
   194a0:	ldr	x21, [x19]
   194a4:	add	x3, x3, x3, lsl #3
   194a8:	str	x0, [x19, #16]
   194ac:	mov	x1, x25
   194b0:	add	x0, x21, x3, lsl #3
   194b4:	mov	x2, #0x48                  	// #72
   194b8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   194bc:	ldr	x0, [sp, #64]
   194c0:	ldr	x1, [sp, #72]
   194c4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   194c8:	mov	w0, #0x0                   	// #0
   194cc:	ldp	x21, x22, [sp, #16]
   194d0:	ldp	x23, x24, [sp, #32]
   194d4:	ldp	x25, x30, [sp, #48]
   194d8:	ldp	x19, x20, [sp], #176
   194dc:	ret
   194e0:	ldr	x0, [sp, #64]
   194e4:	strb	wzr, [x22, #8]
   194e8:	ldr	x1, [sp, #80]
   194ec:	bl	fda8 <__sancov_default_options@@Base+0x33f8>
   194f0:	b	193e4 <__sanitizer_set_report_fd@@Base+0x5b14>
   194f4:	ldr	x1, [x21]
   194f8:	mov	x0, x25
   194fc:	ldr	x4, [x2, #16]
   19500:	mov	x5, #0x0                   	// #0
   19504:	ldr	w3, [x2, #4]
   19508:	add	w20, w20, #0x1
   1950c:	ldr	x2, [x2, #40]
   19510:	add	x1, x1, x4
   19514:	ubfx	x4, x3, #1, #1
   19518:	and	w3, w3, #0x1
   1951c:	add	x2, x1, x2
   19520:	bl	f930 <__sancov_default_options@@Base+0x2f80>
   19524:	ldrh	w3, [x21, #24]
   19528:	add	x19, x19, #0x38
   1952c:	cmp	w20, w3
   19530:	b.ge	19470 <__sanitizer_set_report_fd@@Base+0x5ba0>  // b.tcont
   19534:	ldr	x0, [x21, #16]
   19538:	b	19450 <__sanitizer_set_report_fd@@Base+0x5b80>
   1953c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   19540:	mov	x1, x0
   19544:	str	x0, [x19]
   19548:	b	19340 <__sanitizer_set_report_fd@@Base+0x5a70>
   1954c:	tst	x0, x3
   19550:	b.eq	1958c <__sanitizer_set_report_fd@@Base+0x5cbc>  // b.none
   19554:	clz	x2, x0
   19558:	mov	w1, #0x3f                  	// #63
   1955c:	sub	w1, w1, w2
   19560:	mov	x2, #0x1                   	// #1
   19564:	add	w4, w1, #0x1
   19568:	lsl	x4, x2, x4
   1956c:	cmp	x0, x4
   19570:	b.cs	196e8 <__sanitizer_set_report_fd@@Base+0x5e18>  // b.hs, b.nlast
   19574:	lsl	x1, x2, x1
   19578:	cmp	x0, x1
   1957c:	b.ls	196c8 <__sanitizer_set_report_fd@@Base+0x5df8>  // b.plast
   19580:	cmp	x3, x4
   19584:	b.hi	196b0 <__sanitizer_set_report_fd@@Base+0x5de0>  // b.pmore
   19588:	mov	x0, x4
   1958c:	ldr	x23, [x23, #4016]
   19590:	add	x0, x0, x0, lsl #3
   19594:	lsl	x20, x0, #3
   19598:	ldr	x0, [x23]
   1959c:	cbz	x0, 196a4 <__sanitizer_set_report_fd@@Base+0x5dd4>
   195a0:	sub	x1, x0, #0x1
   195a4:	tst	x1, x0
   195a8:	b.ne	19650 <__sanitizer_set_report_fd@@Base+0x5d80>  // b.any
   195ac:	add	x20, x20, x1
   195b0:	neg	x0, x0
   195b4:	and	x20, x20, x0
   195b8:	add	x1, x24, #0x988
   195bc:	mov	w2, #0x0                   	// #0
   195c0:	mov	x0, x20
   195c4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   195c8:	mov	x21, x0
   195cc:	ldr	x2, [x19, #16]
   195d0:	ldr	x1, [x19]
   195d4:	add	x2, x2, x2, lsl #3
   195d8:	lsl	x2, x2, #3
   195dc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   195e0:	ldp	x0, x1, [x19]
   195e4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   195e8:	stp	x21, x20, [x19]
   195ec:	ldr	x3, [x19, #16]
   195f0:	add	x0, x3, #0x1
   195f4:	b	194a4 <__sanitizer_set_report_fd@@Base+0x5bd4>
   195f8:	ldr	x20, [x23, #4016]
   195fc:	ldr	x0, [x20]
   19600:	cbz	x0, 19680 <__sanitizer_set_report_fd@@Base+0x5db0>
   19604:	sub	x1, x0, #0x1
   19608:	tst	x1, x0
   1960c:	b.ne	19650 <__sanitizer_set_report_fd@@Base+0x5d80>  // b.any
   19610:	add	x25, x0, #0xfff
   19614:	neg	x0, x0
   19618:	and	x25, x25, x0
   1961c:	add	x1, x24, #0x988
   19620:	mov	w2, #0x0                   	// #0
   19624:	mov	x0, x25
   19628:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1962c:	mov	x20, x0
   19630:	ldr	x1, [sp, #64]
   19634:	ldr	x2, [sp, #80]
   19638:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1963c:	ldp	x0, x1, [sp, #64]
   19640:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   19644:	stp	x20, x25, [sp, #64]
   19648:	ldr	x2, [sp, #80]
   1964c:	b	1939c <__sanitizer_set_report_fd@@Base+0x5acc>
   19650:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19654:	add	x0, x0, #0x970
   19658:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1965c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   19660:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19664:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19668:	add	x2, x2, #0x9a0
   1966c:	add	x0, x0, #0x9b8
   19670:	mov	x4, #0x0                   	// #0
   19674:	mov	x3, #0x0                   	// #0
   19678:	mov	w1, #0x1b6                 	// #438
   1967c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19680:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   19684:	str	x0, [x20]
   19688:	b	19604 <__sanitizer_set_report_fd@@Base+0x5d34>
   1968c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   19690:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19694:	add	x2, x2, #0xce0
   19698:	add	x0, x0, #0x9b8
   1969c:	mov	w1, #0x1be                 	// #446
   196a0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196a4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   196a8:	str	x0, [x23]
   196ac:	b	195a0 <__sanitizer_set_report_fd@@Base+0x5cd0>
   196b0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   196b4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   196b8:	add	x2, x2, #0xd58
   196bc:	add	x0, x0, #0x9b8
   196c0:	mov	w1, #0x1fd                 	// #509
   196c4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196c8:	mov	x4, x1
   196cc:	mov	x3, x0
   196d0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   196d4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   196d8:	add	x2, x2, #0xd38
   196dc:	add	x0, x0, #0x9b8
   196e0:	mov	w1, #0x17c                 	// #380
   196e4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   196e8:	mov	x3, x0
   196ec:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   196f0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   196f4:	add	x2, x2, #0xd10
   196f8:	add	x0, x0, #0x9b8
   196fc:	mov	w1, #0x17b                 	// #379
   19700:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19704:	nop
   19708:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1970c:	ldr	x3, [x3, #3800]
   19710:	cbz	x3, 19718 <__sanitizer_set_report_fd@@Base+0x5e48>
   19714:	b	6470 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   19718:	b	69d0 <sigaction@plt>
   1971c:	nop
   19720:	stp	x19, x20, [sp, #-192]!
   19724:	str	x30, [sp, #48]
   19728:	cbz	x1, 19894 <__sanitizer_set_report_fd@@Base+0x5fc4>
   1972c:	stp	x23, x24, [sp, #32]
   19730:	mov	x24, x2
   19734:	cbz	x2, 198bc <__sanitizer_set_report_fd@@Base+0x5fec>
   19738:	mov	x20, x1
   1973c:	and	w0, w0, #0xff
   19740:	cbz	w0, 197dc <__sanitizer_set_report_fd@@Base+0x5f0c>
   19744:	stp	x21, x22, [sp, #16]
   19748:	add	x21, sp, #0x40
   1974c:	mov	x1, x21
   19750:	mov	w0, #0x3                   	// #3
   19754:	bl	6990 <getrlimit@plt>
   19758:	sxtw	x19, w0
   1975c:	cbnz	w0, 198e0 <__sanitizer_set_report_fd@@Base+0x6010>
   19760:	add	x22, sp, #0x50
   19764:	mov	w1, #0x1                   	// #1
   19768:	mov	x0, x22
   1976c:	add	x23, sp, #0x70
   19770:	bl	1d060 <OnPrint@@Base+0x680>
   19774:	stp	xzr, xzr, [sp, #136]
   19778:	str	xzr, [sp, #184]
   1977c:	b	19790 <__sanitizer_set_report_fd@@Base+0x5ec0>
   19780:	ldr	x0, [sp, #120]
   19784:	cmp	x0, x21
   19788:	b.hi	19840 <__sanitizer_set_report_fd@@Base+0x5f70>  // b.pmore
   1978c:	mov	x19, x0
   19790:	mov	x1, x23
   19794:	mov	x0, x22
   19798:	bl	1d908 <OnPrint@@Base+0xf28>
   1979c:	tst	w0, #0xff
   197a0:	b.ne	19780 <__sanitizer_set_report_fd@@Base+0x5eb0>  // b.any
   197a4:	ldr	x0, [sp, #112]
   197a8:	cmp	x0, x21
   197ac:	b.hi	197bc <__sanitizer_set_report_fd@@Base+0x5eec>  // b.pmore
   197b0:	ldr	x3, [sp, #120]
   197b4:	cmp	x3, x21
   197b8:	b.hi	19850 <__sanitizer_set_report_fd@@Base+0x5f80>  // b.pmore
   197bc:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   197c0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   197c4:	add	x2, x2, #0xd0
   197c8:	add	x0, x0, #0x40
   197cc:	mov	x4, #0x0                   	// #0
   197d0:	mov	x3, #0x0                   	// #0
   197d4:	mov	w1, #0x6a                  	// #106
   197d8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   197dc:	add	x19, sp, #0x70
   197e0:	str	xzr, [sp, #64]
   197e4:	mov	x0, x19
   197e8:	str	xzr, [sp, #80]
   197ec:	bl	64d0 <pthread_attr_init@plt>
   197f0:	bl	6920 <pthread_self@plt>
   197f4:	mov	x1, x19
   197f8:	bl	6460 <pthread_getattr_np@plt>
   197fc:	sxtw	x3, w0
   19800:	cbnz	w0, 19900 <__sanitizer_set_report_fd@@Base+0x6030>
   19804:	add	x2, sp, #0x40
   19808:	add	x1, sp, #0x50
   1980c:	mov	x0, x19
   19810:	bl	1bcf0 <__sanitizer_set_report_fd@@Base+0x8420>
   19814:	mov	x0, x19
   19818:	bl	65e0 <pthread_attr_destroy@plt>
   1981c:	ldr	x0, [sp, #64]
   19820:	ldr	x1, [sp, #80]
   19824:	ldr	x30, [sp, #48]
   19828:	add	x0, x0, x1
   1982c:	str	x0, [x20]
   19830:	str	x1, [x24]
   19834:	ldp	x23, x24, [sp, #32]
   19838:	ldp	x19, x20, [sp], #192
   1983c:	ret
   19840:	ldr	x1, [sp, #112]
   19844:	cmp	x1, x21
   19848:	b.hi	197bc <__sanitizer_set_report_fd@@Base+0x5eec>  // b.pmore
   1984c:	mov	x3, x0
   19850:	ldr	x1, [sp, #64]
   19854:	mov	x2, #0x40000000            	// #1073741824
   19858:	sub	x19, x3, x19
   1985c:	str	x3, [x20]
   19860:	cmp	x1, x2
   19864:	mov	x0, x22
   19868:	csel	x1, x1, x2, ls  // ls = plast
   1986c:	cmp	x19, x1
   19870:	csel	x19, x19, x1, ls  // ls = plast
   19874:	sub	x3, x3, x19
   19878:	str	x3, [x24]
   1987c:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   19880:	ldp	x21, x22, [sp, #16]
   19884:	ldp	x23, x24, [sp, #32]
   19888:	ldr	x30, [sp, #48]
   1988c:	ldp	x19, x20, [sp], #192
   19890:	ret
   19894:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19898:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1989c:	add	x2, x2, #0x28
   198a0:	add	x0, x0, #0x40
   198a4:	mov	x4, #0x0                   	// #0
   198a8:	mov	x3, #0x0                   	// #0
   198ac:	mov	w1, #0x5b                  	// #91
   198b0:	stp	x21, x22, [sp, #16]
   198b4:	stp	x23, x24, [sp, #32]
   198b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   198bc:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   198c0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   198c4:	add	x2, x2, #0x88
   198c8:	add	x0, x0, #0x40
   198cc:	mov	x4, #0x0                   	// #0
   198d0:	mov	x3, #0x0                   	// #0
   198d4:	mov	w1, #0x5c                  	// #92
   198d8:	stp	x21, x22, [sp, #16]
   198dc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   198e0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   198e4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   198e8:	mov	x3, x19
   198ec:	add	x2, x2, #0xa0
   198f0:	add	x0, x0, #0x40
   198f4:	mov	x4, #0x0                   	// #0
   198f8:	mov	w1, #0x60                  	// #96
   198fc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19900:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19904:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19908:	add	x2, x2, #0x118
   1990c:	add	x0, x0, #0x40
   19910:	mov	x4, #0x0                   	// #0
   19914:	mov	w1, #0x88                  	// #136
   19918:	stp	x21, x22, [sp, #16]
   1991c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19920:	stp	x19, x20, [sp, #-48]!
   19924:	mov	x19, x0
   19928:	mov	x20, x1
   1992c:	mov	x0, #0xffffffffffffffff    	// #-1
   19930:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19934:	add	x1, x1, #0x150
   19938:	str	x30, [sp, #16]
   1993c:	bl	6500 <dlsym@plt>
   19940:	str	x0, [sp, #32]
   19944:	cbz	x0, 19980 <__sanitizer_set_report_fd@@Base+0x60b0>
   19948:	add	x1, sp, #0x20
   1994c:	add	x0, sp, #0x28
   19950:	mov	x2, #0x8                   	// #8
   19954:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   19958:	ldr	x3, [sp, #40]
   1995c:	mov	x1, x20
   19960:	mov	x0, x19
   19964:	mov	w2, #0x1                   	// #1
   19968:	blr	x3
   1996c:	cmp	w0, #0x0
   19970:	cset	w0, eq  // eq = none
   19974:	ldr	x30, [sp, #16]
   19978:	ldp	x19, x20, [sp], #48
   1997c:	ret
   19980:	mov	w0, #0x0                   	// #0
   19984:	ldr	x30, [sp, #16]
   19988:	ldp	x19, x20, [sp], #48
   1998c:	ret
   19990:	str	x30, [sp, #-48]!
   19994:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19998:	mov	x0, #0xffffffffffffffff    	// #-1
   1999c:	add	x1, x1, #0x158
   199a0:	bl	6500 <dlsym@plt>
   199a4:	mov	x3, x0
   199a8:	mov	x2, #0x8                   	// #8
   199ac:	add	x1, sp, #0x20
   199b0:	add	x0, sp, #0x28
   199b4:	stp	xzr, xzr, [sp, #16]
   199b8:	str	x3, [sp, #32]
   199bc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   199c0:	ldr	x2, [sp, #40]
   199c4:	cbz	x2, 19a38 <__sanitizer_set_report_fd@@Base+0x6168>
   199c8:	add	x1, sp, #0x18
   199cc:	add	x0, sp, #0x10
   199d0:	blr	x2
   199d4:	ldr	x1, [sp, #24]
   199d8:	cmp	x1, #0xf
   199dc:	b.ls	19a10 <__sanitizer_set_report_fd@@Base+0x6140>  // b.plast
   199e0:	sub	x0, x1, #0x1
   199e4:	tst	x0, x1
   199e8:	b.ne	19a58 <__sanitizer_set_report_fd@@Base+0x6188>  // b.any
   199ec:	ldr	x0, [sp, #16]
   199f0:	adrp	x2, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   199f4:	add	x0, x0, x1
   199f8:	neg	x1, x1
   199fc:	sub	x0, x0, #0x1
   19a00:	and	x0, x0, x1
   19a04:	str	x0, [x2, #3608]
   19a08:	ldr	x30, [sp], #48
   19a0c:	ret
   19a10:	ldr	x0, [sp, #16]
   19a14:	mov	x1, #0x10                  	// #16
   19a18:	adrp	x2, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19a1c:	add	x0, x0, x1
   19a20:	neg	x1, x1
   19a24:	sub	x0, x0, #0x1
   19a28:	and	x0, x0, x1
   19a2c:	str	x0, [x2, #3608]
   19a30:	ldr	x30, [sp], #48
   19a34:	ret
   19a38:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19a3c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19a40:	add	x2, x2, #0x170
   19a44:	add	x0, x0, #0x40
   19a48:	mov	x4, #0x0                   	// #0
   19a4c:	mov	x3, #0x0                   	// #0
   19a50:	mov	w1, #0xd4                  	// #212
   19a54:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19a58:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19a5c:	add	x0, x0, #0x970
   19a60:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   19a64:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   19a68:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19a6c:	add	x1, x1, #0xe18
   19a70:	ldr	x0, [x1, #8]
   19a74:	cbnz	x0, 19a84 <__sanitizer_set_report_fd@@Base+0x61b4>
   19a78:	mov	x2, #0x6f0                 	// #1776
   19a7c:	mov	x0, x2
   19a80:	str	x2, [x1, #8]
   19a84:	ret
   19a88:	mov	x0, #0x10                  	// #16
   19a8c:	ret
   19a90:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19a94:	add	x1, x1, #0xe18
   19a98:	mrs	x2, tpidr_el0
   19a9c:	ldr	x0, [x1, #8]
   19aa0:	cbnz	x0, 19ab0 <__sanitizer_set_report_fd@@Base+0x61e0>
   19aa4:	mov	x3, #0x6f0                 	// #1776
   19aa8:	mov	x0, x3
   19aac:	str	x3, [x1, #8]
   19ab0:	sub	x0, x2, x0
   19ab4:	ret
   19ab8:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19abc:	ldr	x0, [x0, #3608]
   19ac0:	ret
   19ac4:	nop
   19ac8:	adrp	x6, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   19acc:	add	x7, x6, #0xe18
   19ad0:	stp	x19, x20, [sp, #-64]!
   19ad4:	mov	x20, x1
   19ad8:	mov	x19, x3
   19adc:	ldr	x5, [x7, #8]
   19ae0:	stp	x21, x22, [sp, #16]
   19ae4:	mov	x22, x2
   19ae8:	stp	x23, x30, [sp, #32]
   19aec:	mov	x21, x4
   19af0:	and	w23, w0, #0xff
   19af4:	mrs	x0, tpidr_el0
   19af8:	cbnz	x5, 19b08 <__sanitizer_set_report_fd@@Base+0x6238>
   19afc:	mov	x1, #0x6f0                 	// #1776
   19b00:	mov	x5, x1
   19b04:	str	x1, [x7, #8]
   19b08:	sub	x0, x0, x5
   19b0c:	str	x0, [x19]
   19b10:	ldr	x0, [x6, #3608]
   19b14:	str	x0, [x21]
   19b18:	add	x1, sp, #0x30
   19b1c:	mov	w0, w23
   19b20:	add	x2, sp, #0x38
   19b24:	bl	19720 <__sanitizer_set_report_fd@@Base+0x5e50>
   19b28:	ldp	x0, x1, [sp, #48]
   19b2c:	str	x1, [x20]
   19b30:	sub	x0, x0, x1
   19b34:	str	x0, [x22]
   19b38:	cbnz	w23, 19b84 <__sanitizer_set_report_fd@@Base+0x62b4>
   19b3c:	ldr	x3, [x19]
   19b40:	ldr	x4, [x20]
   19b44:	cmp	x3, x4
   19b48:	b.ls	19b84 <__sanitizer_set_report_fd@@Base+0x62b4>  // b.plast
   19b4c:	add	x1, x0, x4
   19b50:	cmp	x3, x1
   19b54:	b.cs	19b84 <__sanitizer_set_report_fd@@Base+0x62b4>  // b.hs, b.nlast
   19b58:	ldr	x2, [x21]
   19b5c:	add	x3, x3, x2
   19b60:	cmp	x4, x3
   19b64:	b.cs	19b94 <__sanitizer_set_report_fd@@Base+0x62c4>  // b.hs, b.nlast
   19b68:	cmp	x1, x3
   19b6c:	b.cc	19bac <__sanitizer_set_report_fd@@Base+0x62dc>  // b.lo, b.ul, b.last
   19b70:	sub	x0, x0, x2
   19b74:	str	x0, [x22]
   19b78:	ldr	x1, [x20]
   19b7c:	add	x0, x1, x0
   19b80:	str	x0, [x19]
   19b84:	ldp	x21, x22, [sp, #16]
   19b88:	ldp	x23, x30, [sp, #32]
   19b8c:	ldp	x19, x20, [sp], #64
   19b90:	ret
   19b94:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19b98:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19b9c:	add	x2, x2, #0x188
   19ba0:	add	x0, x0, #0x40
   19ba4:	mov	w1, #0x203                 	// #515
   19ba8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19bac:	mov	x4, x1
   19bb0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19bb4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19bb8:	add	x2, x2, #0x1b8
   19bbc:	add	x0, x0, #0x40
   19bc0:	mov	w1, #0x204                 	// #516
   19bc4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19bc8:	stp	x19, x20, [sp, #-48]!
   19bcc:	mov	x19, x0
   19bd0:	ldrb	w0, [x0, #24]
   19bd4:	stp	x21, x30, [sp, #16]
   19bd8:	cbz	w0, 19c48 <__sanitizer_set_report_fd@@Base+0x6378>
   19bdc:	ldr	x20, [x19, #16]
   19be0:	ldr	x0, [x19]
   19be4:	add	x20, x20, x20, lsl #3
   19be8:	mov	x21, x0
   19bec:	add	x20, x0, x20, lsl #3
   19bf0:	cmp	x0, x20
   19bf4:	b.eq	19c0c <__sanitizer_set_report_fd@@Base+0x633c>  // b.none
   19bf8:	mov	x0, x21
   19bfc:	add	x21, x21, #0x48
   19c00:	bl	f7f8 <__sancov_default_options@@Base+0x2e48>
   19c04:	cmp	x20, x21
   19c08:	b.ne	19bf8 <__sanitizer_set_report_fd@@Base+0x6328>  // b.any
   19c0c:	str	xzr, [x19, #16]
   19c10:	mov	w2, #0x1                   	// #1
   19c14:	strb	w2, [x19, #24]
   19c18:	add	x1, sp, #0x20
   19c1c:	adrp	x0, 19000 <__sanitizer_set_report_fd@@Base+0x5730>
   19c20:	add	x0, x0, #0x310
   19c24:	str	x19, [sp, #32]
   19c28:	strb	w2, [sp, #40]
   19c2c:	stur	wzr, [sp, #41]
   19c30:	sturh	wzr, [sp, #45]
   19c34:	strb	wzr, [sp, #47]
   19c38:	bl	6640 <dl_iterate_phdr@plt>
   19c3c:	ldp	x21, x30, [sp, #16]
   19c40:	ldp	x19, x20, [sp], #48
   19c44:	ret
   19c48:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19c4c:	stp	xzr, xzr, [x19, #8]
   19c50:	ldr	x20, [x20, #4016]
   19c54:	ldr	x0, [x20]
   19c58:	str	xzr, [x19]
   19c5c:	cbz	x0, 19cb8 <__sanitizer_set_report_fd@@Base+0x63e8>
   19c60:	sub	x1, x0, #0x1
   19c64:	tst	x1, x0
   19c68:	b.ne	19cc4 <__sanitizer_set_report_fd@@Base+0x63f4>  // b.any
   19c6c:	add	x20, x0, #0x11f, lsl #12
   19c70:	neg	x0, x0
   19c74:	add	x20, x20, #0xfff
   19c78:	mov	w2, #0x0                   	// #0
   19c7c:	and	x20, x20, x0
   19c80:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19c84:	mov	x0, x20
   19c88:	add	x1, x1, #0x988
   19c8c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   19c90:	mov	x21, x0
   19c94:	ldr	x2, [x19, #16]
   19c98:	ldr	x1, [x19]
   19c9c:	add	x2, x2, x2, lsl #3
   19ca0:	lsl	x2, x2, #3
   19ca4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   19ca8:	ldp	x0, x1, [x19]
   19cac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   19cb0:	stp	x21, x20, [x19]
   19cb4:	b	19c10 <__sanitizer_set_report_fd@@Base+0x6340>
   19cb8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   19cbc:	str	x0, [x20]
   19cc0:	b	19c60 <__sanitizer_set_report_fd@@Base+0x6390>
   19cc4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19cc8:	add	x0, x0, #0x970
   19ccc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   19cd0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   19cd4:	nop
   19cd8:	stp	x19, x20, [sp, #-64]!
   19cdc:	mov	x19, x0
   19ce0:	ldrb	w0, [x0, #24]
   19ce4:	stp	x21, x30, [sp, #16]
   19ce8:	cbz	w0, 19d54 <__sanitizer_set_report_fd@@Base+0x6484>
   19cec:	ldr	x20, [x19, #16]
   19cf0:	ldr	x0, [x19]
   19cf4:	add	x20, x20, x20, lsl #3
   19cf8:	mov	x21, x0
   19cfc:	add	x20, x0, x20, lsl #3
   19d00:	cmp	x0, x20
   19d04:	b.eq	19d1c <__sanitizer_set_report_fd@@Base+0x644c>  // b.none
   19d08:	mov	x0, x21
   19d0c:	add	x21, x21, #0x48
   19d10:	bl	f7f8 <__sancov_default_options@@Base+0x2e48>
   19d14:	cmp	x20, x21
   19d18:	b.ne	19d08 <__sanitizer_set_report_fd@@Base+0x6438>  // b.any
   19d1c:	str	xzr, [x19, #16]
   19d20:	mov	w1, #0x1                   	// #1
   19d24:	strb	w1, [x19, #24]
   19d28:	add	x20, sp, #0x20
   19d2c:	mov	x0, x20
   19d30:	bl	1d060 <OnPrint@@Base+0x680>
   19d34:	mov	x1, x19
   19d38:	mov	x0, x20
   19d3c:	bl	1d2e8 <OnPrint@@Base+0x908>
   19d40:	mov	x0, x20
   19d44:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   19d48:	ldp	x21, x30, [sp, #16]
   19d4c:	ldp	x19, x20, [sp], #64
   19d50:	ret
   19d54:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19d58:	stp	xzr, xzr, [x19, #8]
   19d5c:	ldr	x20, [x20, #4016]
   19d60:	ldr	x0, [x20]
   19d64:	str	xzr, [x19]
   19d68:	cbz	x0, 19dc4 <__sanitizer_set_report_fd@@Base+0x64f4>
   19d6c:	sub	x1, x0, #0x1
   19d70:	tst	x1, x0
   19d74:	b.ne	19dd0 <__sanitizer_set_report_fd@@Base+0x6500>  // b.any
   19d78:	add	x20, x0, #0x11f, lsl #12
   19d7c:	neg	x0, x0
   19d80:	add	x20, x20, #0xfff
   19d84:	mov	w2, #0x0                   	// #0
   19d88:	and	x20, x20, x0
   19d8c:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19d90:	mov	x0, x20
   19d94:	add	x1, x1, #0x988
   19d98:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   19d9c:	mov	x21, x0
   19da0:	ldr	x2, [x19, #16]
   19da4:	ldr	x1, [x19]
   19da8:	add	x2, x2, x2, lsl #3
   19dac:	lsl	x2, x2, #3
   19db0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   19db4:	ldp	x0, x1, [x19]
   19db8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   19dbc:	stp	x21, x20, [x19]
   19dc0:	b	19d20 <__sanitizer_set_report_fd@@Base+0x6450>
   19dc4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   19dc8:	str	x0, [x20]
   19dcc:	b	19d6c <__sanitizer_set_report_fd@@Base+0x649c>
   19dd0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19dd4:	add	x0, x0, #0x970
   19dd8:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   19ddc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   19de0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19de4:	stp	x19, x20, [sp, #-176]!
   19de8:	ldr	x0, [x0, #4056]
   19dec:	ldrb	w0, [x0, #160]
   19df0:	str	x30, [sp, #16]
   19df4:	cbnz	w0, 19e20 <__sanitizer_set_report_fd@@Base+0x6550>
   19df8:	add	x1, sp, #0x20
   19dfc:	bl	65d0 <getrusage@plt>
   19e00:	mov	w1, w0
   19e04:	mov	x0, #0x0                   	// #0
   19e08:	cbnz	w1, 19e14 <__sanitizer_set_report_fd@@Base+0x6544>
   19e0c:	ldr	x0, [sp, #64]
   19e10:	lsl	x0, x0, #10
   19e14:	ldr	x30, [sp, #16]
   19e18:	ldp	x19, x20, [sp], #176
   19e1c:	ret
   19e20:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19e24:	mov	x2, #0x0                   	// #0
   19e28:	add	x0, x0, #0x1f0
   19e2c:	mov	w1, #0x0                   	// #0
   19e30:	bl	1a840 <__sanitizer_set_report_fd@@Base+0x6f70>
   19e34:	mov	w20, w0
   19e38:	cmn	w0, #0x1
   19e3c:	b.eq	19f0c <__sanitizer_set_report_fd@@Base+0x663c>  // b.none
   19e40:	add	x19, sp, #0x20
   19e44:	mov	x2, #0x3f                  	// #63
   19e48:	mov	x1, x19
   19e4c:	bl	17a90 <__sanitizer_set_report_fd@@Base+0x41c0>
   19e50:	mov	x1, x0
   19e54:	mov	w0, w20
   19e58:	mov	x20, x1
   19e5c:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   19e60:	cmp	x20, #0x0
   19e64:	mov	x0, #0x0                   	// #0
   19e68:	b.le	19e14 <__sanitizer_set_report_fd@@Base+0x6544>
   19e6c:	strb	wzr, [x19, x20]
   19e70:	mov	x1, x19
   19e74:	ldrb	w2, [sp, #32]
   19e78:	sub	w0, w2, #0x30
   19e7c:	and	w0, w0, #0xff
   19e80:	cmp	w0, #0x9
   19e84:	b.hi	19e9c <__sanitizer_set_report_fd@@Base+0x65cc>  // b.pmore
   19e88:	ldrb	w2, [x1, #1]!
   19e8c:	sub	w0, w2, #0x30
   19e90:	and	w0, w0, #0xff
   19e94:	cmp	w0, #0x9
   19e98:	b.ls	19e88 <__sanitizer_set_report_fd@@Base+0x65b8>  // b.plast
   19e9c:	cbz	w2, 19f40 <__sanitizer_set_report_fd@@Base+0x6670>
   19ea0:	ldrb	w2, [x1, #1]!
   19ea4:	sub	w0, w2, #0x30
   19ea8:	cmp	w2, #0x0
   19eac:	and	w0, w0, #0xff
   19eb0:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   19eb4:	b.hi	19ea0 <__sanitizer_set_report_fd@@Base+0x65d0>  // b.pmore
   19eb8:	cmp	w0, #0x9
   19ebc:	mov	x19, #0x0                   	// #0
   19ec0:	b.hi	19eec <__sanitizer_set_report_fd@@Base+0x661c>  // b.pmore
   19ec4:	nop
   19ec8:	and	x3, x2, #0xff
   19ecc:	ldrb	w2, [x1, #1]!
   19ed0:	add	x19, x19, x19, lsl #2
   19ed4:	sub	w0, w2, #0x30
   19ed8:	add	x19, x3, x19, lsl #1
   19edc:	and	w0, w0, #0xff
   19ee0:	sub	x19, x19, #0x30
   19ee4:	cmp	w0, #0x9
   19ee8:	b.ls	19ec8 <__sanitizer_set_report_fd@@Base+0x65f8>  // b.plast
   19eec:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19ef0:	ldr	x20, [x20, #4016]
   19ef4:	ldr	x0, [x20]
   19ef8:	cbz	x0, 19f30 <__sanitizer_set_report_fd@@Base+0x6660>
   19efc:	mul	x0, x19, x0
   19f00:	ldr	x30, [sp, #16]
   19f04:	ldp	x19, x20, [sp], #176
   19f08:	ret
   19f0c:	add	x1, sp, #0x20
   19f10:	mov	w0, #0x0                   	// #0
   19f14:	bl	65d0 <getrusage@plt>
   19f18:	mov	w1, w0
   19f1c:	mov	x0, #0x0                   	// #0
   19f20:	cbnz	w1, 19e14 <__sanitizer_set_report_fd@@Base+0x6544>
   19f24:	ldr	x0, [sp, #64]
   19f28:	lsl	x0, x0, #10
   19f2c:	b	19e14 <__sanitizer_set_report_fd@@Base+0x6544>
   19f30:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   19f34:	str	x0, [x20]
   19f38:	mul	x0, x19, x0
   19f3c:	b	19f00 <__sanitizer_set_report_fd@@Base+0x6630>
   19f40:	mov	x19, #0x0                   	// #0
   19f44:	b	19eec <__sanitizer_set_report_fd@@Base+0x661c>
   19f48:	stp	x19, x30, [sp, #-144]!
   19f4c:	mov	x1, #0x80                  	// #128
   19f50:	mov	w0, #0x0                   	// #0
   19f54:	add	x19, sp, #0x10
   19f58:	mov	x2, x19
   19f5c:	bl	63d0 <sched_getaffinity@plt>
   19f60:	cbnz	w0, 19f78 <__sanitizer_set_report_fd@@Base+0x66a8>
   19f64:	mov	x1, x19
   19f68:	mov	x0, #0x80                  	// #128
   19f6c:	bl	6770 <__sched_cpucount@plt>
   19f70:	ldp	x19, x30, [sp], #144
   19f74:	ret
   19f78:	sxtw	x3, w0
   19f7c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19f80:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   19f84:	add	x2, x2, #0x208
   19f88:	add	x0, x0, #0x40
   19f8c:	mov	x4, #0x0                   	// #0
   19f90:	mov	w1, #0x2bb                 	// #699
   19f94:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   19f98:	ret
   19f9c:	nop
   19fa0:	mov	x2, x0
   19fa4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   19fa8:	mov	w0, #0x6                   	// #6
   19fac:	add	x1, x1, #0x8b0
   19fb0:	b	67c0 <syslog@plt>
   19fb4:	nop
   19fb8:	ret
   19fbc:	nop
   19fc0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19fc4:	ldr	x1, [x1, #4056]
   19fc8:	ldrb	w1, [x1, #49]
   19fcc:	cbnz	w1, 19fd4 <__sanitizer_set_report_fd@@Base+0x6704>
   19fd0:	ret
   19fd4:	b	10460 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f0>
   19fd8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   19fdc:	str	x30, [sp, #-32]!
   19fe0:	ldr	x0, [x0, #4008]
   19fe4:	cbz	x0, 19ff8 <__sanitizer_set_report_fd@@Base+0x6728>
   19fe8:	ldr	x0, [x0]
   19fec:	cbz	x0, 19ff8 <__sanitizer_set_report_fd@@Base+0x6728>
   19ff0:	ldrb	w0, [x0]
   19ff4:	cbnz	w0, 1a01c <__sanitizer_set_report_fd@@Base+0x674c>
   19ff8:	add	x1, sp, #0x10
   19ffc:	mov	w0, #0x1                   	// #1
   1a000:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x4450>
   1a004:	ldp	x2, x1, [sp, #16]
   1a008:	mov	x0, #0xca00                	// #51712
   1a00c:	movk	x0, #0x3b9a, lsl #16
   1a010:	ldr	x30, [sp], #32
   1a014:	madd	x0, x2, x0, x1
   1a018:	ret
   1a01c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a020:	add	x1, sp, #0x10
   1a024:	ldr	x0, [x0, #3872]
   1a028:	cbz	x0, 1a04c <__sanitizer_set_report_fd@@Base+0x677c>
   1a02c:	mov	w0, #0x1                   	// #1
   1a030:	bl	6610 <real_clock_gettime@plt>
   1a034:	ldp	x2, x1, [sp, #16]
   1a038:	mov	x0, #0xca00                	// #51712
   1a03c:	movk	x0, #0x3b9a, lsl #16
   1a040:	ldr	x30, [sp], #32
   1a044:	madd	x0, x2, x0, x1
   1a048:	ret
   1a04c:	mov	w0, #0x1                   	// #1
   1a050:	bl	6660 <clock_gettime@plt>
   1a054:	b	1a004 <__sanitizer_set_report_fd@@Base+0x6734>
   1a058:	cmp	w0, #0x2
   1a05c:	b.eq	1a070 <__sanitizer_set_report_fd@@Base+0x67a0>  // b.none
   1a060:	cmp	w0, #0xa
   1a064:	cset	x0, eq  // eq = none
   1a068:	lsl	x0, x0, #4
   1a06c:	ret
   1a070:	mov	x0, #0x4                   	// #4
   1a074:	ret
   1a078:	b	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a07c:	nop
   1a080:	stp	x19, x20, [sp, #-64]!
   1a084:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a088:	mov	x19, x0
   1a08c:	ldr	x20, [x20, #4016]
   1a090:	stp	x21, x22, [sp, #16]
   1a094:	mov	x21, x1
   1a098:	and	w22, w2, #0xff
   1a09c:	ldr	x0, [x20]
   1a0a0:	str	x30, [sp, #32]
   1a0a4:	cbz	x0, 1a10c <__sanitizer_set_report_fd@@Base+0x683c>
   1a0a8:	sub	x1, x0, #0x1
   1a0ac:	tst	x0, x1
   1a0b0:	b.ne	1a120 <__sanitizer_set_report_fd@@Base+0x6850>  // b.any
   1a0b4:	add	x19, x19, x1
   1a0b8:	neg	x0, x0
   1a0bc:	and	x19, x19, x0
   1a0c0:	mov	x5, #0x0                   	// #0
   1a0c4:	mov	w4, #0xffffffff            	// #-1
   1a0c8:	mov	w3, #0x22                  	// #34
   1a0cc:	mov	w2, #0x3                   	// #3
   1a0d0:	mov	x1, x19
   1a0d4:	mov	x0, #0x0                   	// #0
   1a0d8:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a0dc:	add	x1, sp, #0x3c
   1a0e0:	mov	x20, x0
   1a0e4:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a0e8:	tst	w0, #0xff
   1a0ec:	b.ne	1a130 <__sanitizer_set_report_fd@@Base+0x6860>  // b.any
   1a0f0:	mov	x0, x19
   1a0f4:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a0f8:	mov	x0, x20
   1a0fc:	ldp	x21, x22, [sp, #16]
   1a100:	ldr	x30, [sp, #32]
   1a104:	ldp	x19, x20, [sp], #64
   1a108:	ret
   1a10c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a110:	str	x0, [x20]
   1a114:	sub	x1, x0, #0x1
   1a118:	tst	x0, x1
   1a11c:	b.eq	1a0b4 <__sanitizer_set_report_fd@@Base+0x67e4>  // b.none
   1a120:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a124:	add	x0, x0, #0x970
   1a128:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a12c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a130:	ldr	w3, [sp, #60]
   1a134:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a138:	mov	w4, w22
   1a13c:	mov	x1, x21
   1a140:	mov	x0, x19
   1a144:	add	x2, x2, #0x290
   1a148:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a14c:	nop
   1a150:	cmp	x0, #0x0
   1a154:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1a158:	b.ne	1a160 <__sanitizer_set_report_fd@@Base+0x6890>  // b.any
   1a15c:	ret
   1a160:	stp	x19, x20, [sp, #-32]!
   1a164:	mov	x19, x1
   1a168:	mov	x20, x0
   1a16c:	str	x30, [sp, #16]
   1a170:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1a174:	mov	x1, #0x0                   	// #0
   1a178:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a17c:	tst	w0, #0xff
   1a180:	b.ne	1a194 <__sanitizer_set_report_fd@@Base+0x68c4>  // b.any
   1a184:	mov	x0, x19
   1a188:	ldr	x30, [sp, #16]
   1a18c:	ldp	x19, x20, [sp], #32
   1a190:	b	fa90 <__sancov_default_options@@Base+0x30e0>
   1a194:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a198:	mov	x4, x20
   1a19c:	mov	x3, x19
   1a1a0:	mov	x2, x19
   1a1a4:	ldr	x1, [x1, #4024]
   1a1a8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a1ac:	add	x0, x0, #0x2a0
   1a1b0:	ldr	x1, [x1]
   1a1b4:	bl	1cd78 <OnPrint@@Base+0x398>
   1a1b8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a1bc:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a1c0:	add	x2, x2, #0x2e0
   1a1c4:	add	x0, x0, #0x308
   1a1c8:	mov	x4, #0x0                   	// #0
   1a1cc:	mov	x3, #0x0                   	// #0
   1a1d0:	mov	w1, #0x3c                  	// #60
   1a1d4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1a1d8:	stp	x19, x20, [sp, #-48]!
   1a1dc:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a1e0:	mov	x19, x0
   1a1e4:	ldr	x20, [x20, #4016]
   1a1e8:	stp	x21, x30, [sp, #16]
   1a1ec:	mov	x21, x1
   1a1f0:	ldr	x0, [x20]
   1a1f4:	cbz	x0, 1a258 <__sanitizer_set_report_fd@@Base+0x6988>
   1a1f8:	sub	x1, x0, #0x1
   1a1fc:	tst	x0, x1
   1a200:	b.ne	1a26c <__sanitizer_set_report_fd@@Base+0x699c>  // b.any
   1a204:	add	x19, x19, x1
   1a208:	neg	x0, x0
   1a20c:	and	x19, x19, x0
   1a210:	mov	x5, #0x0                   	// #0
   1a214:	mov	w4, #0xffffffff            	// #-1
   1a218:	mov	w3, #0x22                  	// #34
   1a21c:	mov	w2, #0x3                   	// #3
   1a220:	mov	x1, x19
   1a224:	mov	x0, #0x0                   	// #0
   1a228:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a22c:	add	x1, sp, #0x2c
   1a230:	mov	x20, x0
   1a234:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a238:	tst	w0, #0xff
   1a23c:	b.ne	1a27c <__sanitizer_set_report_fd@@Base+0x69ac>  // b.any
   1a240:	mov	x0, x19
   1a244:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a248:	mov	x0, x20
   1a24c:	ldp	x21, x30, [sp, #16]
   1a250:	ldp	x19, x20, [sp], #48
   1a254:	ret
   1a258:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a25c:	str	x0, [x20]
   1a260:	sub	x1, x0, #0x1
   1a264:	tst	x0, x1
   1a268:	b.eq	1a204 <__sanitizer_set_report_fd@@Base+0x6934>  // b.none
   1a26c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a270:	add	x0, x0, #0x970
   1a274:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a278:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a27c:	ldr	w3, [sp, #44]
   1a280:	mov	x0, #0x0                   	// #0
   1a284:	cmp	w3, #0xc
   1a288:	b.eq	1a24c <__sanitizer_set_report_fd@@Base+0x697c>  // b.none
   1a28c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a290:	mov	x1, x21
   1a294:	mov	x0, x19
   1a298:	add	x2, x2, #0x290
   1a29c:	mov	w4, #0x0                   	// #0
   1a2a0:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a2a4:	nop
   1a2a8:	stp	x19, x20, [sp, #-48]!
   1a2ac:	mov	x19, x0
   1a2b0:	sub	x0, x0, #0x1
   1a2b4:	stp	x21, x22, [sp, #16]
   1a2b8:	tst	x0, x19
   1a2bc:	stp	x23, x30, [sp, #32]
   1a2c0:	b.ne	1a3b4 <__sanitizer_set_report_fd@@Base+0x6ae4>  // b.any
   1a2c4:	sub	x23, x1, #0x1
   1a2c8:	mov	x21, x1
   1a2cc:	tst	x1, x23
   1a2d0:	b.ne	1a3d4 <__sanitizer_set_report_fd@@Base+0x6b04>  // b.any
   1a2d4:	add	x22, x19, x21
   1a2d8:	mov	x1, x2
   1a2dc:	mov	x0, x22
   1a2e0:	bl	1a1d8 <__sanitizer_set_report_fd@@Base+0x6908>
   1a2e4:	mov	x20, x0
   1a2e8:	cbz	x0, 1a304 <__sanitizer_set_report_fd@@Base+0x6a34>
   1a2ec:	add	x22, x22, x0
   1a2f0:	tst	x0, x23
   1a2f4:	b.ne	1a358 <__sanitizer_set_report_fd@@Base+0x6a88>  // b.any
   1a2f8:	add	x19, x20, x19
   1a2fc:	cmp	x22, x19
   1a300:	b.ne	1a318 <__sanitizer_set_report_fd@@Base+0x6a48>  // b.any
   1a304:	mov	x0, x20
   1a308:	ldp	x21, x22, [sp, #16]
   1a30c:	ldp	x23, x30, [sp, #32]
   1a310:	ldp	x19, x20, [sp], #48
   1a314:	ret
   1a318:	cbz	x19, 1a304 <__sanitizer_set_report_fd@@Base+0x6a34>
   1a31c:	sub	x22, x22, x19
   1a320:	mov	x0, x19
   1a324:	mov	x1, x22
   1a328:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1a32c:	mov	x1, #0x0                   	// #0
   1a330:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a334:	tst	w0, #0xff
   1a338:	b.ne	1a3f4 <__sanitizer_set_report_fd@@Base+0x6b24>  // b.any
   1a33c:	mov	x0, x22
   1a340:	bl	fa90 <__sancov_default_options@@Base+0x30e0>
   1a344:	mov	x0, x20
   1a348:	ldp	x21, x22, [sp, #16]
   1a34c:	ldp	x23, x30, [sp, #32]
   1a350:	ldp	x19, x20, [sp], #48
   1a354:	ret
   1a358:	add	x23, x0, x23
   1a35c:	neg	x21, x21
   1a360:	and	x21, x23, x21
   1a364:	subs	x23, x21, x0
   1a368:	b.ne	1a380 <__sanitizer_set_report_fd@@Base+0x6ab0>  // b.any
   1a36c:	mov	x20, x21
   1a370:	add	x19, x20, x19
   1a374:	cmp	x22, x19
   1a378:	b.eq	1a304 <__sanitizer_set_report_fd@@Base+0x6a34>  // b.none
   1a37c:	b	1a318 <__sanitizer_set_report_fd@@Base+0x6a48>
   1a380:	mov	x1, x23
   1a384:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1a388:	mov	x1, #0x0                   	// #0
   1a38c:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a390:	tst	w0, #0xff
   1a394:	b.ne	1a438 <__sanitizer_set_report_fd@@Base+0x6b68>  // b.any
   1a398:	mov	x20, x21
   1a39c:	mov	x0, x23
   1a3a0:	add	x19, x20, x19
   1a3a4:	bl	fa90 <__sancov_default_options@@Base+0x30e0>
   1a3a8:	cmp	x22, x19
   1a3ac:	b.eq	1a304 <__sanitizer_set_report_fd@@Base+0x6a34>  // b.none
   1a3b0:	b	1a318 <__sanitizer_set_report_fd@@Base+0x6a48>
   1a3b4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a3b8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a3bc:	add	x2, x2, #0x348
   1a3c0:	add	x0, x0, #0x308
   1a3c4:	mov	x4, #0x0                   	// #0
   1a3c8:	mov	x3, #0x0                   	// #0
   1a3cc:	mov	w1, #0x55                  	// #85
   1a3d0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1a3d4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0xb10>
   1a3d8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a3dc:	add	x2, x2, #0xd88
   1a3e0:	add	x0, x0, #0x308
   1a3e4:	mov	x4, #0x0                   	// #0
   1a3e8:	mov	x3, #0x0                   	// #0
   1a3ec:	mov	w1, #0x56                  	// #86
   1a3f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1a3f4:	mov	x4, x19
   1a3f8:	mov	x3, x22
   1a3fc:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a400:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a404:	ldr	x1, [x1, #4024]
   1a408:	mov	x2, x3
   1a40c:	add	x0, x0, #0x2a0
   1a410:	ldr	x1, [x1]
   1a414:	bl	1cd78 <OnPrint@@Base+0x398>
   1a418:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a41c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a420:	add	x2, x2, #0x2e0
   1a424:	add	x0, x0, #0x308
   1a428:	mov	x4, #0x0                   	// #0
   1a42c:	mov	x3, #0x0                   	// #0
   1a430:	mov	w1, #0x3c                  	// #60
   1a434:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1a438:	mov	x4, x20
   1a43c:	mov	x3, x23
   1a440:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a444:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a448:	b	1a404 <__sanitizer_set_report_fd@@Base+0x6b34>
   1a44c:	nop
   1a450:	stp	x19, x20, [sp, #-48]!
   1a454:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a458:	mov	x19, x0
   1a45c:	ldr	x20, [x20, #4016]
   1a460:	stp	x21, x30, [sp, #16]
   1a464:	mov	x21, x1
   1a468:	ldr	x2, [x20]
   1a46c:	cbz	x2, 1a4cc <__sanitizer_set_report_fd@@Base+0x6bfc>
   1a470:	sub	x0, x2, #0x1
   1a474:	tst	x2, x0
   1a478:	b.ne	1a4e4 <__sanitizer_set_report_fd@@Base+0x6c14>  // b.any
   1a47c:	add	x0, x19, x0
   1a480:	neg	x1, x2
   1a484:	mov	x5, #0x0                   	// #0
   1a488:	mov	w4, #0xffffffff            	// #-1
   1a48c:	mov	w3, #0x4022                	// #16418
   1a490:	mov	w2, #0x3                   	// #3
   1a494:	and	x1, x0, x1
   1a498:	mov	x0, #0x0                   	// #0
   1a49c:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a4a0:	mov	x20, x0
   1a4a4:	add	x1, sp, #0x2c
   1a4a8:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a4ac:	tst	w0, #0xff
   1a4b0:	b.ne	1a4f4 <__sanitizer_set_report_fd@@Base+0x6c24>  // b.any
   1a4b4:	mov	x0, x19
   1a4b8:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a4bc:	mov	x0, x20
   1a4c0:	ldp	x21, x30, [sp, #16]
   1a4c4:	ldp	x19, x20, [sp], #48
   1a4c8:	ret
   1a4cc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a4d0:	mov	x2, x0
   1a4d4:	str	x0, [x20]
   1a4d8:	sub	x0, x2, #0x1
   1a4dc:	tst	x2, x0
   1a4e0:	b.eq	1a47c <__sanitizer_set_report_fd@@Base+0x6bac>  // b.none
   1a4e4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a4e8:	add	x0, x0, #0x970
   1a4ec:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a4f0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a4f4:	ldr	w3, [sp, #44]
   1a4f8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a4fc:	mov	x1, x21
   1a500:	mov	x0, x19
   1a504:	add	x2, x2, #0x368
   1a508:	mov	w4, #0x0                   	// #0
   1a50c:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a510:	stp	x19, x20, [sp, #-96]!
   1a514:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a518:	mov	x20, x1
   1a51c:	ldr	x19, [x19, #4016]
   1a520:	stp	x21, x22, [sp, #16]
   1a524:	and	w22, w2, #0xff
   1a528:	mov	x21, x0
   1a52c:	ldr	x2, [x19]
   1a530:	str	x30, [sp, #32]
   1a534:	cbz	x2, 1a598 <__sanitizer_set_report_fd@@Base+0x6cc8>
   1a538:	neg	x6, x2
   1a53c:	sub	x3, x2, #0x1
   1a540:	and	x0, x6, x21
   1a544:	tst	x3, x2
   1a548:	b.ne	1a5b8 <__sanitizer_set_report_fd@@Base+0x6ce8>  // b.any
   1a54c:	add	x1, x20, x3
   1a550:	mov	x5, #0x0                   	// #0
   1a554:	mov	w4, #0xffffffff            	// #-1
   1a558:	mov	w3, #0x32                  	// #50
   1a55c:	mov	w2, #0x3                   	// #3
   1a560:	and	x1, x1, x6
   1a564:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a568:	mov	x19, x0
   1a56c:	add	x1, sp, #0x34
   1a570:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a574:	tst	w0, #0xff
   1a578:	b.ne	1a5c8 <__sanitizer_set_report_fd@@Base+0x6cf8>  // b.any
   1a57c:	mov	x0, x20
   1a580:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a584:	mov	x0, x19
   1a588:	ldp	x21, x22, [sp, #16]
   1a58c:	ldr	x30, [sp, #32]
   1a590:	ldp	x19, x20, [sp], #96
   1a594:	ret
   1a598:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a59c:	mov	x2, x0
   1a5a0:	str	x0, [x19]
   1a5a4:	neg	x6, x2
   1a5a8:	sub	x3, x2, #0x1
   1a5ac:	and	x0, x6, x21
   1a5b0:	tst	x3, x2
   1a5b4:	b.eq	1a54c <__sanitizer_set_report_fd@@Base+0x6c7c>  // b.none
   1a5b8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a5bc:	add	x0, x0, #0x970
   1a5c0:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a5c4:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a5c8:	cbz	w22, 1a5e0 <__sanitizer_set_report_fd@@Base+0x6d10>
   1a5cc:	ldr	w0, [sp, #52]
   1a5d0:	cmp	w0, #0xc
   1a5d4:	b.ne	1a5e0 <__sanitizer_set_report_fd@@Base+0x6d10>  // b.any
   1a5d8:	mov	x0, #0x0                   	// #0
   1a5dc:	b	1a588 <__sanitizer_set_report_fd@@Base+0x6cb8>
   1a5e0:	add	x19, sp, #0x38
   1a5e4:	mov	x3, x21
   1a5e8:	mov	x1, #0x28                  	// #40
   1a5ec:	mov	x0, x19
   1a5f0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a5f4:	add	x2, x2, #0x380
   1a5f8:	bl	1c9e8 <OnPrint@@Base+0x8>
   1a5fc:	ldr	w3, [sp, #52]
   1a600:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a604:	mov	x1, x19
   1a608:	mov	x0, x20
   1a60c:	add	x2, x2, #0x290
   1a610:	mov	w4, #0x0                   	// #0
   1a614:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a618:	stp	x19, x20, [sp, #-80]!
   1a61c:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a620:	mov	x19, x1
   1a624:	ldr	x20, [x20, #4016]
   1a628:	stp	x21, x30, [sp, #16]
   1a62c:	mov	x21, x0
   1a630:	ldr	x2, [x20]
   1a634:	cbz	x2, 1a694 <__sanitizer_set_report_fd@@Base+0x6dc4>
   1a638:	neg	x6, x2
   1a63c:	sub	x3, x2, #0x1
   1a640:	and	x0, x21, x6
   1a644:	tst	x3, x2
   1a648:	b.ne	1a6b4 <__sanitizer_set_report_fd@@Base+0x6de4>  // b.any
   1a64c:	add	x1, x19, x3
   1a650:	mov	x5, #0x0                   	// #0
   1a654:	mov	w4, #0xffffffff            	// #-1
   1a658:	mov	w3, #0x32                  	// #50
   1a65c:	mov	w2, #0x3                   	// #3
   1a660:	and	x1, x1, x6
   1a664:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a668:	mov	x20, x0
   1a66c:	add	x1, sp, #0x24
   1a670:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a674:	tst	w0, #0xff
   1a678:	b.ne	1a6c4 <__sanitizer_set_report_fd@@Base+0x6df4>  // b.any
   1a67c:	mov	x0, x19
   1a680:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a684:	mov	x0, x20
   1a688:	ldp	x21, x30, [sp, #16]
   1a68c:	ldp	x19, x20, [sp], #80
   1a690:	ret
   1a694:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a698:	mov	x2, x0
   1a69c:	str	x0, [x20]
   1a6a0:	neg	x6, x2
   1a6a4:	sub	x3, x2, #0x1
   1a6a8:	and	x0, x21, x6
   1a6ac:	tst	x3, x2
   1a6b0:	b.eq	1a64c <__sanitizer_set_report_fd@@Base+0x6d7c>  // b.none
   1a6b4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a6b8:	add	x0, x0, #0x970
   1a6bc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a6c0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a6c4:	add	x20, sp, #0x28
   1a6c8:	mov	x3, x21
   1a6cc:	mov	x1, #0x28                  	// #40
   1a6d0:	mov	x0, x20
   1a6d4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a6d8:	add	x2, x2, #0x380
   1a6dc:	bl	1c9e8 <OnPrint@@Base+0x8>
   1a6e0:	ldr	w3, [sp, #36]
   1a6e4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a6e8:	mov	x1, x20
   1a6ec:	mov	x0, x19
   1a6f0:	add	x2, x2, #0x290
   1a6f4:	mov	w4, #0x0                   	// #0
   1a6f8:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a6fc:	nop
   1a700:	stp	x19, x20, [sp, #-80]!
   1a704:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a708:	mov	x20, x1
   1a70c:	ldr	x19, [x19, #4016]
   1a710:	stp	x21, x30, [sp, #16]
   1a714:	mov	x21, x0
   1a718:	ldr	x2, [x19]
   1a71c:	cbz	x2, 1a77c <__sanitizer_set_report_fd@@Base+0x6eac>
   1a720:	neg	x6, x2
   1a724:	sub	x3, x2, #0x1
   1a728:	and	x0, x21, x6
   1a72c:	tst	x3, x2
   1a730:	b.ne	1a79c <__sanitizer_set_report_fd@@Base+0x6ecc>  // b.any
   1a734:	add	x1, x20, x3
   1a738:	mov	x5, #0x0                   	// #0
   1a73c:	mov	w4, #0xffffffff            	// #-1
   1a740:	mov	w3, #0x32                  	// #50
   1a744:	mov	w2, #0x3                   	// #3
   1a748:	and	x1, x1, x6
   1a74c:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a750:	mov	x19, x0
   1a754:	add	x1, sp, #0x24
   1a758:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a75c:	tst	w0, #0xff
   1a760:	b.ne	1a7ac <__sanitizer_set_report_fd@@Base+0x6edc>  // b.any
   1a764:	mov	x0, x20
   1a768:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1a76c:	mov	x0, x19
   1a770:	ldp	x21, x30, [sp, #16]
   1a774:	ldp	x19, x20, [sp], #80
   1a778:	ret
   1a77c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1a780:	mov	x2, x0
   1a784:	str	x0, [x19]
   1a788:	neg	x6, x2
   1a78c:	sub	x3, x2, #0x1
   1a790:	and	x0, x21, x6
   1a794:	tst	x3, x2
   1a798:	b.eq	1a734 <__sanitizer_set_report_fd@@Base+0x6e64>  // b.none
   1a79c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1a7a0:	add	x0, x0, #0x970
   1a7a4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1a7a8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1a7ac:	ldr	w0, [sp, #36]
   1a7b0:	cmp	w0, #0xc
   1a7b4:	b.ne	1a7c0 <__sanitizer_set_report_fd@@Base+0x6ef0>  // b.any
   1a7b8:	mov	x0, #0x0                   	// #0
   1a7bc:	b	1a770 <__sanitizer_set_report_fd@@Base+0x6ea0>
   1a7c0:	add	x19, sp, #0x28
   1a7c4:	mov	x3, x21
   1a7c8:	mov	x1, #0x28                  	// #40
   1a7cc:	mov	x0, x19
   1a7d0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a7d4:	add	x2, x2, #0x380
   1a7d8:	bl	1c9e8 <OnPrint@@Base+0x8>
   1a7dc:	ldr	w3, [sp, #36]
   1a7e0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a7e4:	mov	x1, x19
   1a7e8:	mov	x0, x20
   1a7ec:	add	x2, x2, #0x290
   1a7f0:	mov	w4, #0x0                   	// #0
   1a7f4:	bl	f640 <__sancov_default_options@@Base+0x2c90>
   1a7f8:	str	x30, [sp, #-16]!
   1a7fc:	mov	w2, #0x0                   	// #0
   1a800:	bl	17a38 <__sanitizer_set_report_fd@@Base+0x4168>
   1a804:	cmp	w0, #0x0
   1a808:	cset	w0, eq  // eq = none
   1a80c:	ldr	x30, [sp], #16
   1a810:	ret
   1a814:	nop
   1a818:	str	x30, [sp, #-16]!
   1a81c:	mov	w2, #0x1                   	// #1
   1a820:	bl	17a38 <__sanitizer_set_report_fd@@Base+0x4168>
   1a824:	cmp	w0, #0x0
   1a828:	cset	w0, eq  // eq = none
   1a82c:	ldr	x30, [sp], #16
   1a830:	ret
   1a834:	nop
   1a838:	ret
   1a83c:	nop
   1a840:	stp	x19, x30, [sp, #-16]!
   1a844:	cmp	w1, #0x2
   1a848:	mov	x19, x2
   1a84c:	b.hi	1a85c <__sanitizer_set_report_fd@@Base+0x6f8c>  // b.pmore
   1a850:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1a854:	add	x2, x2, #0x568
   1a858:	ldr	w3, [x2, w1, uxtw #2]
   1a85c:	mov	w2, #0x1b0                 	// #432
   1a860:	mov	w1, w3
   1a864:	bl	17a70 <__sanitizer_set_report_fd@@Base+0x41a0>
   1a868:	mov	x1, x19
   1a86c:	mov	x19, x0
   1a870:	sxtw	x0, w0
   1a874:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a878:	tst	w0, #0xff
   1a87c:	csinv	w0, w19, wzr, eq  // eq = none
   1a880:	ldp	x19, x30, [sp], #16
   1a884:	ret
   1a888:	b	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1a88c:	nop
   1a890:	stp	x19, x20, [sp, #-32]!
   1a894:	mov	x20, x4
   1a898:	mov	x19, x3
   1a89c:	str	x30, [sp, #16]
   1a8a0:	bl	17a90 <__sanitizer_set_report_fd@@Base+0x41c0>
   1a8a4:	mov	x1, x20
   1a8a8:	mov	x20, x0
   1a8ac:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a8b0:	tst	w0, #0xff
   1a8b4:	b.ne	1a8d0 <__sanitizer_set_report_fd@@Base+0x7000>  // b.any
   1a8b8:	mov	w0, #0x1                   	// #1
   1a8bc:	cbz	x19, 1a8c4 <__sanitizer_set_report_fd@@Base+0x6ff4>
   1a8c0:	str	x20, [x19]
   1a8c4:	ldr	x30, [sp, #16]
   1a8c8:	ldp	x19, x20, [sp], #32
   1a8cc:	ret
   1a8d0:	mov	w0, #0x0                   	// #0
   1a8d4:	ldr	x30, [sp, #16]
   1a8d8:	ldp	x19, x20, [sp], #32
   1a8dc:	ret
   1a8e0:	stp	x19, x20, [sp, #-32]!
   1a8e4:	mov	x20, x4
   1a8e8:	mov	x19, x3
   1a8ec:	str	x30, [sp, #16]
   1a8f0:	bl	17ab8 <__sanitizer_set_report_fd@@Base+0x41e8>
   1a8f4:	mov	x1, x20
   1a8f8:	mov	x20, x0
   1a8fc:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a900:	tst	w0, #0xff
   1a904:	b.ne	1a920 <__sanitizer_set_report_fd@@Base+0x7050>  // b.any
   1a908:	mov	w0, #0x1                   	// #1
   1a90c:	cbz	x19, 1a914 <__sanitizer_set_report_fd@@Base+0x7044>
   1a910:	str	x20, [x19]
   1a914:	ldr	x30, [sp, #16]
   1a918:	ldp	x19, x20, [sp], #32
   1a91c:	ret
   1a920:	mov	w0, #0x0                   	// #0
   1a924:	ldr	x30, [sp, #16]
   1a928:	ldp	x19, x20, [sp], #32
   1a92c:	ret
   1a930:	stp	x19, x30, [sp, #-16]!
   1a934:	mov	x19, x2
   1a938:	bl	17bd0 <__sanitizer_set_report_fd@@Base+0x4300>
   1a93c:	mov	x1, x19
   1a940:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a944:	and	w0, w0, #0xff
   1a948:	eor	w0, w0, #0x1
   1a94c:	ldp	x19, x30, [sp], #16
   1a950:	ret
   1a954:	nop
   1a958:	stp	x19, x20, [sp, #-48]!
   1a95c:	mov	w2, #0x1b0                 	// #432
   1a960:	stp	x21, x22, [sp, #16]
   1a964:	mov	x21, x1
   1a968:	mov	w1, #0x0                   	// #0
   1a96c:	str	x30, [sp, #32]
   1a970:	bl	17a70 <__sanitizer_set_report_fd@@Base+0x41a0>
   1a974:	mov	x1, #0x0                   	// #0
   1a978:	mov	x20, x0
   1a97c:	sxtw	x0, w0
   1a980:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a984:	tst	w0, #0xff
   1a988:	b.ne	1aa20 <__sanitizer_set_report_fd@@Base+0x7150>  // b.any
   1a98c:	cmn	w20, #0x1
   1a990:	b.eq	1aa20 <__sanitizer_set_report_fd@@Base+0x7150>  // b.none
   1a994:	mov	w0, w20
   1a998:	bl	17b58 <__sanitizer_set_report_fd@@Base+0x4288>
   1a99c:	mov	x19, x0
   1a9a0:	cmn	x0, #0x1
   1a9a4:	b.eq	1aa40 <__sanitizer_set_report_fd@@Base+0x7170>  // b.none
   1a9a8:	cbz	x0, 1aa60 <__sanitizer_set_report_fd@@Base+0x7190>
   1a9ac:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1a9b0:	ldr	x22, [x22, #4016]
   1a9b4:	ldr	x0, [x22]
   1a9b8:	cbz	x0, 1aa14 <__sanitizer_set_report_fd@@Base+0x7144>
   1a9bc:	sub	x1, x0, #0x1
   1a9c0:	tst	x0, x1
   1a9c4:	b.ne	1aa80 <__sanitizer_set_report_fd@@Base+0x71b0>  // b.any
   1a9c8:	add	x19, x19, x1
   1a9cc:	neg	x0, x0
   1a9d0:	and	x1, x19, x0
   1a9d4:	mov	w4, w20
   1a9d8:	str	x1, [x21]
   1a9dc:	mov	x5, #0x0                   	// #0
   1a9e0:	mov	w3, #0x2                   	// #2
   1a9e4:	mov	w2, #0x1                   	// #1
   1a9e8:	mov	x0, #0x0                   	// #0
   1a9ec:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1a9f0:	mov	x1, #0x0                   	// #0
   1a9f4:	mov	x19, x0
   1a9f8:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1a9fc:	tst	w0, #0xff
   1aa00:	csel	x0, x19, xzr, eq  // eq = none
   1aa04:	ldp	x21, x22, [sp, #16]
   1aa08:	ldr	x30, [sp, #32]
   1aa0c:	ldp	x19, x20, [sp], #48
   1aa10:	ret
   1aa14:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1aa18:	str	x0, [x22]
   1aa1c:	b	1a9bc <__sanitizer_set_report_fd@@Base+0x70ec>
   1aa20:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa24:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa28:	add	x2, x2, #0x398
   1aa2c:	add	x0, x0, #0x308
   1aa30:	mov	x4, #0x0                   	// #0
   1aa34:	mov	x3, #0x0                   	// #0
   1aa38:	mov	w1, #0xc9                  	// #201
   1aa3c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1aa40:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa44:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa48:	add	x2, x2, #0x3b8
   1aa4c:	add	x0, x0, #0x308
   1aa50:	mov	x4, x19
   1aa54:	mov	x3, x19
   1aa58:	mov	w1, #0xcb                  	// #203
   1aa5c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1aa60:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa64:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1aa68:	add	x2, x2, #0x3d8
   1aa6c:	add	x0, x0, #0x308
   1aa70:	mov	x4, #0x0                   	// #0
   1aa74:	mov	x3, #0x0                   	// #0
   1aa78:	mov	w1, #0xcc                  	// #204
   1aa7c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1aa80:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1aa84:	add	x0, x0, #0x970
   1aa88:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1aa8c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1aa90:	stp	x19, x20, [sp, #-64]!
   1aa94:	cmp	x0, #0x0
   1aa98:	mov	x5, x3
   1aa9c:	mov	w4, w2
   1aaa0:	stp	x21, x22, [sp, #16]
   1aaa4:	mov	x21, x3
   1aaa8:	mov	w3, #0x11                  	// #17
   1aaac:	csinc	w3, w3, wzr, ne  // ne = any
   1aab0:	mov	w20, w2
   1aab4:	mov	w2, #0x3                   	// #3
   1aab8:	mov	x22, x1
   1aabc:	str	x30, [sp, #32]
   1aac0:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1aac4:	mov	x19, x0
   1aac8:	add	x1, sp, #0x3c
   1aacc:	str	wzr, [sp, #60]
   1aad0:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1aad4:	tst	w0, #0xff
   1aad8:	b.ne	1aaf0 <__sanitizer_set_report_fd@@Base+0x7220>  // b.any
   1aadc:	mov	x0, x19
   1aae0:	ldp	x21, x22, [sp, #16]
   1aae4:	ldr	x30, [sp, #32]
   1aae8:	ldp	x19, x20, [sp], #64
   1aaec:	ret
   1aaf0:	ldr	w5, [sp, #60]
   1aaf4:	mov	x4, x19
   1aaf8:	mov	x3, x22
   1aafc:	mov	x2, x21
   1ab00:	mov	w1, w20
   1ab04:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ab08:	add	x0, x0, #0x3f0
   1ab0c:	bl	1ccf0 <OnPrint@@Base+0x310>
   1ab10:	mov	x0, #0x0                   	// #0
   1ab14:	b	1aae0 <__sanitizer_set_report_fd@@Base+0x7210>
   1ab18:	stp	x19, x20, [sp, #-160]!
   1ab1c:	add	x20, sp, #0x30
   1ab20:	stp	x21, x22, [sp, #16]
   1ab24:	mov	x21, x0
   1ab28:	mov	x22, x1
   1ab2c:	mov	x0, x20
   1ab30:	mov	w1, #0x1                   	// #1
   1ab34:	stp	x23, x30, [sp, #32]
   1ab38:	bl	1d060 <OnPrint@@Base+0x680>
   1ab3c:	stp	xzr, xzr, [sp, #104]
   1ab40:	add	x23, sp, #0x50
   1ab44:	cmp	x21, x22
   1ab48:	str	xzr, [sp, #152]
   1ab4c:	b.hi	1abb4 <__sanitizer_set_report_fd@@Base+0x72e4>  // b.pmore
   1ab50:	mov	x1, x23
   1ab54:	mov	x0, x20
   1ab58:	bl	1d908 <OnPrint@@Base+0xf28>
   1ab5c:	tst	w0, #0xff
   1ab60:	b.eq	1ac48 <__sanitizer_set_report_fd@@Base+0x7378>  // b.none
   1ab64:	ldp	x3, x2, [sp, #80]
   1ab68:	cmp	x3, x2
   1ab6c:	b.eq	1ab50 <__sanitizer_set_report_fd@@Base+0x7280>  // b.none
   1ab70:	cbz	x2, 1ac04 <__sanitizer_set_report_fd@@Base+0x7334>
   1ab74:	sub	x2, x2, #0x1
   1ab78:	cmp	x3, x2
   1ab7c:	b.hi	1ac24 <__sanitizer_set_report_fd@@Base+0x7354>  // b.pmore
   1ab80:	cmp	x22, x3
   1ab84:	cset	w19, cc  // cc = lo, ul, last
   1ab88:	cmp	x21, x2
   1ab8c:	cset	w0, hi  // hi = pmore
   1ab90:	orr	w19, w19, w0
   1ab94:	cbnz	w19, 1ab50 <__sanitizer_set_report_fd@@Base+0x7280>
   1ab98:	mov	x0, x20
   1ab9c:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   1aba0:	mov	w0, w19
   1aba4:	ldp	x21, x22, [sp, #16]
   1aba8:	ldp	x23, x30, [sp, #32]
   1abac:	ldp	x19, x20, [sp], #160
   1abb0:	ret
   1abb4:	mov	x1, x23
   1abb8:	mov	x0, x20
   1abbc:	bl	1d908 <OnPrint@@Base+0xf28>
   1abc0:	tst	w0, #0xff
   1abc4:	b.eq	1ac48 <__sanitizer_set_report_fd@@Base+0x7378>  // b.none
   1abc8:	ldp	x3, x2, [sp, #80]
   1abcc:	cmp	x3, x2
   1abd0:	b.eq	1abb4 <__sanitizer_set_report_fd@@Base+0x72e4>  // b.none
   1abd4:	cbz	x2, 1ac04 <__sanitizer_set_report_fd@@Base+0x7334>
   1abd8:	sub	x2, x2, #0x1
   1abdc:	cmp	x3, x2
   1abe0:	b.hi	1ac24 <__sanitizer_set_report_fd@@Base+0x7354>  // b.pmore
   1abe4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1abe8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1abec:	add	x2, x2, #0x470
   1abf0:	add	x0, x0, #0x308
   1abf4:	mov	x4, #0x0                   	// #0
   1abf8:	mov	x3, #0x0                   	// #0
   1abfc:	mov	w1, #0xe2                  	// #226
   1ac00:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ac04:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac08:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac0c:	add	x2, x2, #0x430
   1ac10:	add	x0, x0, #0x308
   1ac14:	mov	x4, #0x0                   	// #0
   1ac18:	mov	x3, #0x0                   	// #0
   1ac1c:	mov	w1, #0xef                  	// #239
   1ac20:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ac24:	cmp	x2, x3
   1ac28:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac2c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac30:	cset	x3, cs  // cs = hs, nlast
   1ac34:	add	x2, x2, #0x450
   1ac38:	add	x0, x0, #0x308
   1ac3c:	mov	x4, #0x0                   	// #0
   1ac40:	mov	w1, #0xe1                  	// #225
   1ac44:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ac48:	mov	x0, x20
   1ac4c:	mov	w19, #0x1                   	// #1
   1ac50:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   1ac54:	mov	w0, w19
   1ac58:	ldp	x21, x22, [sp, #16]
   1ac5c:	ldp	x23, x30, [sp, #32]
   1ac60:	ldp	x19, x20, [sp], #160
   1ac64:	ret
   1ac68:	stp	x19, x20, [sp, #-160]!
   1ac6c:	mov	w1, #0x1                   	// #1
   1ac70:	adrp	x20, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac74:	add	x19, sp, #0x30
   1ac78:	stp	x21, x22, [sp, #16]
   1ac7c:	mov	x0, x19
   1ac80:	str	x30, [sp, #32]
   1ac84:	bl	1d060 <OnPrint@@Base+0x680>
   1ac88:	mov	w2, #0x0                   	// #0
   1ac8c:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ac90:	mov	x0, #0xfff                 	// #4095
   1ac94:	add	x1, x1, #0x490
   1ac98:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1ac9c:	add	x21, sp, #0x50
   1aca0:	mov	x1, #0xfff                 	// #4095
   1aca4:	mov	x22, x0
   1aca8:	add	x20, x20, #0x4c0
   1acac:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1acb0:	add	x0, x0, #0x4a0
   1acb4:	stp	x22, x1, [sp, #104]
   1acb8:	str	xzr, [sp, #152]
   1acbc:	bl	1cd78 <OnPrint@@Base+0x398>
   1acc0:	b	1acd4 <__sanitizer_set_report_fd@@Base+0x7404>
   1acc4:	ldp	x1, x2, [sp, #80]
   1acc8:	mov	x0, x20
   1accc:	ldr	x3, [sp, #104]
   1acd0:	bl	1ccf0 <OnPrint@@Base+0x310>
   1acd4:	mov	x1, x21
   1acd8:	mov	x0, x19
   1acdc:	bl	1d908 <OnPrint@@Base+0xf28>
   1ace0:	tst	w0, #0xff
   1ace4:	b.ne	1acc4 <__sanitizer_set_report_fd@@Base+0x73f4>  // b.any
   1ace8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1acec:	add	x0, x0, #0x4d0
   1acf0:	bl	1cd78 <OnPrint@@Base+0x398>
   1acf4:	cbnz	x22, 1ad10 <__sanitizer_set_report_fd@@Base+0x7440>
   1acf8:	mov	x0, x19
   1acfc:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   1ad00:	ldp	x21, x22, [sp, #16]
   1ad04:	ldr	x30, [sp, #32]
   1ad08:	ldp	x19, x20, [sp], #160
   1ad0c:	ret
   1ad10:	mov	x1, #0xfff                 	// #4095
   1ad14:	mov	x0, x22
   1ad18:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1ad1c:	mov	x1, #0x0                   	// #0
   1ad20:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1ad24:	tst	w0, #0xff
   1ad28:	b.ne	1ad4c <__sanitizer_set_report_fd@@Base+0x747c>  // b.any
   1ad2c:	mov	x0, #0xfff                 	// #4095
   1ad30:	bl	fa90 <__sancov_default_options@@Base+0x30e0>
   1ad34:	mov	x0, x19
   1ad38:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   1ad3c:	ldp	x21, x22, [sp, #16]
   1ad40:	ldr	x30, [sp, #32]
   1ad44:	ldp	x19, x20, [sp], #160
   1ad48:	ret
   1ad4c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ad50:	mov	x3, #0xfff                 	// #4095
   1ad54:	mov	x4, x22
   1ad58:	mov	x2, x3
   1ad5c:	ldr	x1, [x1, #4024]
   1ad60:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ad64:	add	x0, x0, #0x2a0
   1ad68:	ldr	x1, [x1]
   1ad6c:	bl	1cd78 <OnPrint@@Base+0x398>
   1ad70:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ad74:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ad78:	add	x2, x2, #0x2e0
   1ad7c:	add	x0, x0, #0x308
   1ad80:	mov	x4, #0x0                   	// #0
   1ad84:	mov	x3, #0x0                   	// #0
   1ad88:	mov	w1, #0x3c                  	// #60
   1ad8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ad90:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ad94:	add	x0, x0, #0x4f0
   1ad98:	b	17d30 <__sanitizer_set_report_fd@@Base+0x4460>
   1ad9c:	nop
   1ada0:	and	w0, w0, #0xff
   1ada4:	cmp	w0, #0x2f
   1ada8:	cset	w0, eq  // eq = none
   1adac:	ret
   1adb0:	cbz	x0, 1adc4 <__sanitizer_set_report_fd@@Base+0x74f4>
   1adb4:	ldrb	w0, [x0]
   1adb8:	cmp	w0, #0x2f
   1adbc:	cset	w0, eq  // eq = none
   1adc0:	ret
   1adc4:	mov	w0, #0x0                   	// #0
   1adc8:	ret
   1adcc:	nop
   1add0:	stp	x19, x20, [sp, #-48]!
   1add4:	mov	x19, x0
   1add8:	mov	x20, x2
   1addc:	stp	x21, x22, [sp, #16]
   1ade0:	mov	x22, x1
   1ade4:	mov	w1, #0x1                   	// #1
   1ade8:	ldr	x21, [x0]
   1adec:	str	x30, [sp, #32]
   1adf0:	ldxrb	w0, [x21]
   1adf4:	stxrb	w2, w1, [x21]
   1adf8:	cbnz	w2, 1adf0 <__sanitizer_set_report_fd@@Base+0x7520>
   1adfc:	dmb	ish
   1ae00:	tst	w0, #0xff
   1ae04:	b.eq	1ae10 <__sanitizer_set_report_fd@@Base+0x7540>  // b.none
   1ae08:	mov	x0, x21
   1ae0c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1ae10:	mov	x0, x19
   1ae14:	bl	12d08 <__sanitizer_cov_dump@@Base+0x1fa8>
   1ae18:	ldr	w0, [x19, #8]
   1ae1c:	mov	x2, x20
   1ae20:	mov	x1, x22
   1ae24:	bl	17ab8 <__sanitizer_set_report_fd@@Base+0x41e8>
   1ae28:	cmp	x0, x20
   1ae2c:	b.ne	1ae48 <__sanitizer_set_report_fd@@Base+0x7578>  // b.any
   1ae30:	dmb	ish
   1ae34:	strb	wzr, [x21]
   1ae38:	ldp	x21, x22, [sp, #16]
   1ae3c:	ldr	x30, [sp, #32]
   1ae40:	ldp	x19, x20, [sp], #48
   1ae44:	ret
   1ae48:	ldr	w20, [x19, #8]
   1ae4c:	adrp	x19, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ae50:	add	x19, x19, #0x4f8
   1ae54:	mov	x0, x19
   1ae58:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   1ae5c:	mov	x1, x19
   1ae60:	mov	x2, x0
   1ae64:	mov	w0, w20
   1ae68:	bl	17ab8 <__sanitizer_set_report_fd@@Base+0x41e8>
   1ae6c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1ae70:	stp	x19, x20, [sp, #-192]!
   1ae74:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ae78:	add	x20, sp, #0x50
   1ae7c:	stp	x21, x22, [sp, #16]
   1ae80:	mov	x22, x0
   1ae84:	mov	x0, x20
   1ae88:	stp	x23, x24, [sp, #32]
   1ae8c:	mov	x24, x1
   1ae90:	mov	x23, x2
   1ae94:	mov	w1, #0x0                   	// #0
   1ae98:	stp	x25, x26, [sp, #48]
   1ae9c:	str	x30, [sp, #64]
   1aea0:	bl	1d060 <OnPrint@@Base+0x680>
   1aea4:	ldr	x21, [x19, #4016]
   1aea8:	ldr	x3, [x21]
   1aeac:	cbz	x3, 1afb0 <__sanitizer_set_report_fd@@Base+0x76e0>
   1aeb0:	sub	x0, x3, #0x1
   1aeb4:	tst	x0, x3
   1aeb8:	b.ne	1b01c <__sanitizer_set_report_fd@@Base+0x774c>  // b.any
   1aebc:	add	x25, x3, #0xfff
   1aec0:	neg	x3, x3
   1aec4:	and	x25, x25, x3
   1aec8:	mov	w2, #0x0                   	// #0
   1aecc:	mov	x0, x25
   1aed0:	adrp	x21, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1aed4:	add	x1, x21, #0x988
   1aed8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1aedc:	mov	x2, #0x0                   	// #0
   1aee0:	mov	x26, x0
   1aee4:	mov	x1, #0x0                   	// #0
   1aee8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1aeec:	cmp	x25, #0xfff
   1aef0:	b.ls	1afc0 <__sanitizer_set_report_fd@@Base+0x76f0>  // b.plast
   1aef4:	mov	x0, x26
   1aef8:	mov	x2, #0x1000                	// #4096
   1aefc:	mov	w1, #0x0                   	// #0
   1af00:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1af04:	strb	wzr, [x26]
   1af08:	mov	x0, #0x1000                	// #4096
   1af0c:	add	x21, sp, #0x70
   1af10:	stp	x26, x0, [sp, #136]
   1af14:	str	xzr, [sp, #184]
   1af18:	b	1af24 <__sanitizer_set_report_fd@@Base+0x7654>
   1af1c:	ldr	x3, [sp, #152]
   1af20:	tbnz	w3, #2, 1af60 <__sanitizer_set_report_fd@@Base+0x7690>
   1af24:	mov	x1, x21
   1af28:	mov	x0, x20
   1af2c:	bl	1d908 <OnPrint@@Base+0xf28>
   1af30:	ands	w19, w0, #0xff
   1af34:	b.ne	1af1c <__sanitizer_set_report_fd@@Base+0x764c>  // b.any
   1af38:	cbnz	x25, 1af88 <__sanitizer_set_report_fd@@Base+0x76b8>
   1af3c:	mov	x0, x20
   1af40:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   1af44:	mov	w0, w19
   1af48:	ldp	x21, x22, [sp, #16]
   1af4c:	ldp	x23, x24, [sp, #32]
   1af50:	ldp	x25, x26, [sp, #48]
   1af54:	ldr	x30, [sp, #64]
   1af58:	ldp	x19, x20, [sp], #192
   1af5c:	ret
   1af60:	ldr	x1, [sp, #136]
   1af64:	mov	x0, x22
   1af68:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1af6c:	cbnz	w0, 1af24 <__sanitizer_set_report_fd@@Base+0x7654>
   1af70:	ldr	x0, [sp, #112]
   1af74:	str	x0, [x24]
   1af78:	ldr	x0, [sp, #120]
   1af7c:	str	x0, [x23]
   1af80:	cbz	x25, 1af3c <__sanitizer_set_report_fd@@Base+0x766c>
   1af84:	nop
   1af88:	mov	x1, x25
   1af8c:	mov	x0, x26
   1af90:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1af94:	mov	x1, #0x0                   	// #0
   1af98:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1af9c:	tst	w0, #0xff
   1afa0:	b.ne	1b054 <__sanitizer_set_report_fd@@Base+0x7784>  // b.any
   1afa4:	mov	x0, x25
   1afa8:	bl	fa90 <__sancov_default_options@@Base+0x30e0>
   1afac:	b	1af3c <__sanitizer_set_report_fd@@Base+0x766c>
   1afb0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1afb4:	mov	x3, x0
   1afb8:	str	x0, [x21]
   1afbc:	b	1aeb0 <__sanitizer_set_report_fd@@Base+0x75e0>
   1afc0:	ldr	x19, [x19, #4016]
   1afc4:	ldr	x0, [x19]
   1afc8:	cbz	x0, 1b098 <__sanitizer_set_report_fd@@Base+0x77c8>
   1afcc:	sub	x1, x0, #0x1
   1afd0:	tst	x1, x0
   1afd4:	b.ne	1b01c <__sanitizer_set_report_fd@@Base+0x774c>  // b.any
   1afd8:	add	x19, x0, #0xfff
   1afdc:	neg	x0, x0
   1afe0:	and	x19, x19, x0
   1afe4:	add	x1, x21, #0x988
   1afe8:	mov	w2, #0x0                   	// #0
   1afec:	mov	x0, x19
   1aff0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1aff4:	mov	x21, x0
   1aff8:	mov	x1, x26
   1affc:	mov	x2, #0x0                   	// #0
   1b000:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1b004:	cmp	x26, #0x0
   1b008:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   1b00c:	b.ne	1b02c <__sanitizer_set_report_fd@@Base+0x775c>  // b.any
   1b010:	mov	x25, x19
   1b014:	mov	x26, x21
   1b018:	b	1aef4 <__sanitizer_set_report_fd@@Base+0x7624>
   1b01c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1b020:	add	x0, x0, #0x970
   1b024:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1b028:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1b02c:	mov	x1, x25
   1b030:	mov	x0, x26
   1b034:	bl	17a28 <__sanitizer_set_report_fd@@Base+0x4158>
   1b038:	mov	x1, #0x0                   	// #0
   1b03c:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1b040:	tst	w0, #0xff
   1b044:	b.ne	1b054 <__sanitizer_set_report_fd@@Base+0x7784>  // b.any
   1b048:	mov	x0, x25
   1b04c:	bl	fa90 <__sancov_default_options@@Base+0x30e0>
   1b050:	b	1b010 <__sanitizer_set_report_fd@@Base+0x7740>
   1b054:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b058:	mov	x4, x26
   1b05c:	mov	x3, x25
   1b060:	mov	x2, x25
   1b064:	ldr	x1, [x1, #4024]
   1b068:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b06c:	add	x0, x0, #0x2a0
   1b070:	ldr	x1, [x1]
   1b074:	bl	1cd78 <OnPrint@@Base+0x398>
   1b078:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b07c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b080:	add	x2, x2, #0x2e0
   1b084:	add	x0, x0, #0x308
   1b088:	mov	x4, #0x0                   	// #0
   1b08c:	mov	x3, #0x0                   	// #0
   1b090:	mov	w1, #0x3c                  	// #60
   1b094:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b098:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1b09c:	str	x0, [x19]
   1b0a0:	b	1afcc <__sanitizer_set_report_fd@@Base+0x76fc>
   1b0a4:	nop
   1b0a8:	ldr	x0, [x0]
   1b0ac:	ldr	x0, [x0, #16]
   1b0b0:	ret
   1b0b4:	nop
   1b0b8:	ldr	x0, [x0]
   1b0bc:	ldr	w0, [x0]
   1b0c0:	cmp	w0, #0xb
   1b0c4:	cset	w0, eq  // eq = none
   1b0c8:	ret
   1b0cc:	nop
   1b0d0:	ldr	x0, [x0]
   1b0d4:	ldr	w0, [x0]
   1b0d8:	ret
   1b0dc:	nop
   1b0e0:	ldr	x0, [x0]
   1b0e4:	ldr	w0, [x0]
   1b0e8:	cmp	w0, #0x7
   1b0ec:	b.eq	1b144 <__sanitizer_set_report_fd@@Base+0x7874>  // b.none
   1b0f0:	b.le	1b110 <__sanitizer_set_report_fd@@Base+0x7840>
   1b0f4:	cmp	w0, #0x8
   1b0f8:	b.eq	1b12c <__sanitizer_set_report_fd@@Base+0x785c>  // b.none
   1b0fc:	cmp	w0, #0xb
   1b100:	b.ne	1b150 <__sanitizer_set_report_fd@@Base+0x7880>  // b.any
   1b104:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b108:	add	x0, x0, #0x560
   1b10c:	ret
   1b110:	cmp	w0, #0x4
   1b114:	b.eq	1b138 <__sanitizer_set_report_fd@@Base+0x7868>  // b.none
   1b118:	cmp	w0, #0x6
   1b11c:	b.ne	1b150 <__sanitizer_set_report_fd@@Base+0x7880>  // b.any
   1b120:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b124:	add	x0, x0, #0x558
   1b128:	ret
   1b12c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b130:	add	x0, x0, #0x550
   1b134:	ret
   1b138:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b13c:	add	x0, x0, #0x548
   1b140:	ret
   1b144:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b148:	add	x0, x0, #0x540
   1b14c:	ret
   1b150:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b154:	add	x0, x0, #0x530
   1b158:	ret
   1b15c:	nop
   1b160:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b164:	stp	x19, x30, [sp, #-16]!
   1b168:	ldr	x0, [x0, #4024]
   1b16c:	ldr	x19, [x0]
   1b170:	bl	6790 <__errno_location@plt>
   1b174:	mov	x2, x0
   1b178:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b17c:	mov	x1, x19
   1b180:	add	x0, x0, #0x578
   1b184:	ldr	w2, [x2]
   1b188:	bl	1cd78 <OnPrint@@Base+0x398>
   1b18c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1b190:	stp	x19, x20, [sp, #-192]!
   1b194:	mov	x19, x1
   1b198:	stp	x21, x30, [sp, #16]
   1b19c:	mov	w21, w0
   1b1a0:	bl	18ff0 <__sanitizer_set_report_fd@@Base+0x5720>
   1b1a4:	cbnz	w0, 1b1b4 <__sanitizer_set_report_fd@@Base+0x78e4>
   1b1a8:	ldp	x21, x30, [sp, #16]
   1b1ac:	ldp	x19, x20, [sp], #192
   1b1b0:	ret
   1b1b4:	add	x20, sp, #0x28
   1b1b8:	mov	x2, #0x98                  	// #152
   1b1bc:	mov	w1, #0x0                   	// #0
   1b1c0:	mov	x0, x20
   1b1c4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1b1c8:	str	x19, [sp, #40]
   1b1cc:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b1d0:	mov	w5, #0x4                   	// #4
   1b1d4:	mov	w3, #0x4                   	// #4
   1b1d8:	movk	w5, #0x4000, lsl #16
   1b1dc:	ldr	x4, [x4, #4056]
   1b1e0:	movk	w3, #0x4800, lsl #16
   1b1e4:	mov	x1, x20
   1b1e8:	mov	w0, w21
   1b1ec:	mov	x2, #0x0                   	// #0
   1b1f0:	ldrb	w4, [x4, #97]
   1b1f4:	cmp	w4, #0x0
   1b1f8:	csel	w3, w3, w5, ne  // ne = any
   1b1fc:	str	w3, [sp, #176]
   1b200:	bl	19708 <__sanitizer_set_report_fd@@Base+0x5e38>
   1b204:	sxtw	x4, w0
   1b208:	cbnz	w0, 1b238 <__sanitizer_set_report_fd@@Base+0x7968>
   1b20c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b210:	ldr	x0, [x0, #3896]
   1b214:	ldr	w0, [x0]
   1b218:	cbz	w0, 1b1a8 <__sanitizer_set_report_fd@@Base+0x78d8>
   1b21c:	mov	w1, w21
   1b220:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b224:	add	x0, x0, #0x628
   1b228:	bl	1cd78 <OnPrint@@Base+0x398>
   1b22c:	ldp	x21, x30, [sp, #16]
   1b230:	ldp	x19, x20, [sp], #192
   1b234:	ret
   1b238:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b23c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b240:	add	x2, x2, #0x5a0
   1b244:	add	x0, x0, #0x5e0
   1b248:	mov	x3, #0x0                   	// #0
   1b24c:	mov	w1, #0xd2                  	// #210
   1b250:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b254:	nop
   1b258:	b	6930 <getuid@plt>
   1b25c:	nop
   1b260:	b	6920 <pthread_self@plt>
   1b264:	nop
   1b268:	stp	x19, x20, [sp, #-32]!
   1b26c:	mov	x19, x0
   1b270:	mov	x20, x1
   1b274:	stp	x21, x30, [sp, #16]
   1b278:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b27c:	ldr	x21, [x21, #4016]
   1b280:	ldr	x2, [x21]
   1b284:	cbz	x2, 1b2b8 <__sanitizer_set_report_fd@@Base+0x79e8>
   1b288:	sub	x0, x2, #0x1
   1b28c:	tst	x2, x0
   1b290:	b.ne	1b2d0 <__sanitizer_set_report_fd@@Base+0x7a00>  // b.any
   1b294:	neg	x2, x2
   1b298:	add	x0, x19, x0
   1b29c:	and	x20, x20, x2
   1b2a0:	and	x0, x0, x2
   1b2a4:	cmp	x20, x0
   1b2a8:	b.hi	1b2e0 <__sanitizer_set_report_fd@@Base+0x7a10>  // b.pmore
   1b2ac:	ldp	x21, x30, [sp, #16]
   1b2b0:	ldp	x19, x20, [sp], #32
   1b2b4:	ret
   1b2b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1b2bc:	mov	x2, x0
   1b2c0:	str	x0, [x21]
   1b2c4:	sub	x0, x2, #0x1
   1b2c8:	tst	x2, x0
   1b2cc:	b.eq	1b294 <__sanitizer_set_report_fd@@Base+0x79c4>  // b.none
   1b2d0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1b2d4:	add	x0, x0, #0x970
   1b2d8:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1b2dc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1b2e0:	sub	x1, x20, x0
   1b2e4:	mov	w2, #0x4                   	// #4
   1b2e8:	ldp	x21, x30, [sp, #16]
   1b2ec:	ldp	x19, x20, [sp], #32
   1b2f0:	b	6740 <madvise@plt>
   1b2f4:	nop
   1b2f8:	str	x30, [sp, #-16]!
   1b2fc:	mov	w2, #0xf                   	// #15
   1b300:	bl	6740 <madvise@plt>
   1b304:	cmp	w0, #0x0
   1b308:	cset	w0, eq  // eq = none
   1b30c:	ldr	x30, [sp], #16
   1b310:	ret
   1b314:	nop
   1b318:	str	x30, [sp, #-16]!
   1b31c:	mov	w2, #0x10                  	// #16
   1b320:	bl	6740 <madvise@plt>
   1b324:	cmp	w0, #0x0
   1b328:	cset	w0, eq  // eq = none
   1b32c:	ldr	x30, [sp], #16
   1b330:	ret
   1b334:	nop
   1b338:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b33c:	ldr	x0, [x0, #4056]
   1b340:	ldrb	w0, [x0, #178]
   1b344:	cbnz	w0, 1b34c <__sanitizer_set_report_fd@@Base+0x7a7c>
   1b348:	ret
   1b34c:	str	x30, [sp, #-32]!
   1b350:	mov	w0, #0x4                   	// #4
   1b354:	str	xzr, [sp, #16]
   1b358:	add	x1, sp, #0x10
   1b35c:	str	xzr, [sp, #24]
   1b360:	bl	6860 <setrlimit@plt>
   1b364:	cbnz	w0, 1b370 <__sanitizer_set_report_fd@@Base+0x7aa0>
   1b368:	ldr	x30, [sp], #32
   1b36c:	ret
   1b370:	bl	1b160 <__sanitizer_set_report_fd@@Base+0x7890>
   1b374:	nop
   1b378:	str	x30, [sp, #-32]!
   1b37c:	mov	w0, #0x3                   	// #3
   1b380:	add	x1, sp, #0x10
   1b384:	bl	6990 <getrlimit@plt>
   1b388:	cbnz	w0, 1b3a0 <__sanitizer_set_report_fd@@Base+0x7ad0>
   1b38c:	ldr	x0, [sp, #16]
   1b390:	ldr	x30, [sp], #32
   1b394:	cmn	x0, #0x1
   1b398:	cset	w0, eq  // eq = none
   1b39c:	ret
   1b3a0:	sxtw	x4, w0
   1b3a4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b3a8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b3ac:	add	x2, x2, #0x650
   1b3b0:	add	x0, x0, #0x5e0
   1b3b4:	mov	x3, #0x0                   	// #0
   1b3b8:	mov	w1, #0x5a                  	// #90
   1b3bc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b3c0:	str	x30, [sp, #-32]!
   1b3c4:	mov	w0, #0x3                   	// #3
   1b3c8:	add	x1, sp, #0x10
   1b3cc:	bl	6990 <getrlimit@plt>
   1b3d0:	cbnz	w0, 1b3e0 <__sanitizer_set_report_fd@@Base+0x7b10>
   1b3d4:	ldr	x0, [sp, #16]
   1b3d8:	ldr	x30, [sp], #32
   1b3dc:	ret
   1b3e0:	sxtw	x4, w0
   1b3e4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b3e8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b3ec:	add	x2, x2, #0x650
   1b3f0:	add	x0, x0, #0x5e0
   1b3f4:	mov	x3, #0x0                   	// #0
   1b3f8:	mov	w1, #0x5a                  	// #90
   1b3fc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b400:	str	x30, [sp, #-48]!
   1b404:	str	x0, [sp, #32]
   1b408:	add	x1, sp, #0x20
   1b40c:	str	x0, [sp, #40]
   1b410:	mov	w0, #0x3                   	// #3
   1b414:	bl	6860 <setrlimit@plt>
   1b418:	cbnz	w0, 1b480 <__sanitizer_set_report_fd@@Base+0x7bb0>
   1b41c:	add	x1, sp, #0x10
   1b420:	mov	w0, #0x3                   	// #3
   1b424:	bl	6990 <getrlimit@plt>
   1b428:	sxtw	x4, w0
   1b42c:	cbnz	w0, 1b444 <__sanitizer_set_report_fd@@Base+0x7b74>
   1b430:	ldr	x0, [sp, #16]
   1b434:	cmn	x0, #0x1
   1b438:	b.eq	1b460 <__sanitizer_set_report_fd@@Base+0x7b90>  // b.none
   1b43c:	ldr	x30, [sp], #48
   1b440:	ret
   1b444:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b448:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b44c:	add	x2, x2, #0x650
   1b450:	add	x0, x0, #0x5e0
   1b454:	mov	x3, #0x0                   	// #0
   1b458:	mov	w1, #0x5a                  	// #90
   1b45c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b460:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b464:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b468:	add	x2, x2, #0x678
   1b46c:	add	x0, x0, #0x5e0
   1b470:	mov	x4, #0x0                   	// #0
   1b474:	mov	x3, #0x0                   	// #0
   1b478:	mov	w1, #0x7a                  	// #122
   1b47c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b480:	bl	1b160 <__sanitizer_set_report_fd@@Base+0x7890>
   1b484:	nop
   1b488:	str	x30, [sp, #-32]!
   1b48c:	mov	w0, #0x9                   	// #9
   1b490:	add	x1, sp, #0x10
   1b494:	bl	6990 <getrlimit@plt>
   1b498:	cbnz	w0, 1b4b0 <__sanitizer_set_report_fd@@Base+0x7be0>
   1b49c:	ldr	x0, [sp, #16]
   1b4a0:	ldr	x30, [sp], #32
   1b4a4:	cmn	x0, #0x1
   1b4a8:	cset	w0, eq  // eq = none
   1b4ac:	ret
   1b4b0:	sxtw	x4, w0
   1b4b4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b4b8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b4bc:	add	x2, x2, #0x650
   1b4c0:	add	x0, x0, #0x5e0
   1b4c4:	mov	x3, #0x0                   	// #0
   1b4c8:	mov	w1, #0x5a                  	// #90
   1b4cc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b4d0:	str	x30, [sp, #-48]!
   1b4d4:	mov	x2, #0xffffffffffffffff    	// #-1
   1b4d8:	mov	w0, #0x9                   	// #9
   1b4dc:	str	x2, [sp, #32]
   1b4e0:	add	x1, sp, #0x20
   1b4e4:	str	x2, [sp, #40]
   1b4e8:	bl	6860 <setrlimit@plt>
   1b4ec:	cbnz	w0, 1b554 <__sanitizer_set_report_fd@@Base+0x7c84>
   1b4f0:	add	x1, sp, #0x10
   1b4f4:	mov	w0, #0x9                   	// #9
   1b4f8:	bl	6990 <getrlimit@plt>
   1b4fc:	sxtw	x4, w0
   1b500:	cbnz	w0, 1b518 <__sanitizer_set_report_fd@@Base+0x7c48>
   1b504:	ldr	x0, [sp, #16]
   1b508:	cmn	x0, #0x1
   1b50c:	b.ne	1b534 <__sanitizer_set_report_fd@@Base+0x7c64>  // b.any
   1b510:	ldr	x30, [sp], #48
   1b514:	ret
   1b518:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b51c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b520:	add	x2, x2, #0x650
   1b524:	add	x0, x0, #0x5e0
   1b528:	mov	x3, #0x0                   	// #0
   1b52c:	mov	w1, #0x5a                  	// #90
   1b530:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b534:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b538:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b53c:	add	x2, x2, #0x6a0
   1b540:	add	x0, x0, #0x5e0
   1b544:	mov	x4, #0x0                   	// #0
   1b548:	mov	x3, #0x0                   	// #0
   1b54c:	mov	w1, #0x84                  	// #132
   1b550:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b554:	bl	1b160 <__sanitizer_set_report_fd@@Base+0x7890>
   1b558:	b	64f0 <sleep@plt>
   1b55c:	nop
   1b560:	mov	w1, #0x3e8                 	// #1000
   1b564:	mul	w0, w0, w1
   1b568:	b	6750 <usleep@plt>
   1b56c:	nop
   1b570:	stp	x19, x30, [sp, #-176]!
   1b574:	mov	w0, #0x6                   	// #6
   1b578:	bl	18ff0 <__sanitizer_set_report_fd@@Base+0x5720>
   1b57c:	cbnz	w0, 1b584 <__sanitizer_set_report_fd@@Base+0x7cb4>
   1b580:	bl	68b0 <abort@plt>
   1b584:	add	x19, sp, #0x18
   1b588:	mov	x2, #0x98                  	// #152
   1b58c:	mov	w1, #0x0                   	// #0
   1b590:	mov	x0, x19
   1b594:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1b598:	str	xzr, [sp, #24]
   1b59c:	mov	x1, x19
   1b5a0:	mov	x2, #0x0                   	// #0
   1b5a4:	mov	w0, #0x6                   	// #6
   1b5a8:	bl	19708 <__sanitizer_set_report_fd@@Base+0x5e38>
   1b5ac:	bl	68b0 <abort@plt>
   1b5b0:	b	40548 <__asan_backtrace_vector_release@@Base+0x58>
   1b5b4:	nop
   1b5b8:	str	x30, [sp, #-16]!
   1b5bc:	bl	6560 <isatty@plt>
   1b5c0:	cmp	w0, #0x0
   1b5c4:	cset	w0, ne  // ne = any
   1b5c8:	ldr	x30, [sp], #16
   1b5cc:	ret
   1b5d0:	str	x30, [sp, #-64]!
   1b5d4:	mov	x0, #0x0                   	// #0
   1b5d8:	add	x1, sp, #0x10
   1b5dc:	bl	69a0 <sigaltstack@plt>
   1b5e0:	cbnz	w0, 1b64c <__sanitizer_set_report_fd@@Base+0x7d7c>
   1b5e4:	ldr	w0, [sp, #24]
   1b5e8:	tbnz	w0, #1, 1b5f4 <__sanitizer_set_report_fd@@Base+0x7d24>
   1b5ec:	ldr	x30, [sp], #64
   1b5f0:	ret
   1b5f4:	mov	w2, #0x0                   	// #0
   1b5f8:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b5fc:	mov	x0, #0x10000               	// #65536
   1b600:	add	x1, x1, #0x6f8
   1b604:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1b608:	mov	x3, x0
   1b60c:	mov	x2, #0x10000               	// #65536
   1b610:	add	x0, sp, #0x28
   1b614:	mov	x1, #0x0                   	// #0
   1b618:	str	x3, [sp, #40]
   1b61c:	str	wzr, [sp, #48]
   1b620:	str	x2, [sp, #56]
   1b624:	bl	69a0 <sigaltstack@plt>
   1b628:	sxtw	x4, w0
   1b62c:	cbz	w0, 1b5ec <__sanitizer_set_report_fd@@Base+0x7d1c>
   1b630:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b634:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b638:	add	x2, x2, #0x710
   1b63c:	add	x0, x0, #0x5e0
   1b640:	mov	x3, #0x0                   	// #0
   1b644:	mov	w1, #0xbb                  	// #187
   1b648:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b64c:	sxtw	x4, w0
   1b650:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b654:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b658:	add	x2, x2, #0x6c8
   1b65c:	add	x0, x0, #0x5e0
   1b660:	mov	x3, #0x0                   	// #0
   1b664:	mov	w1, #0xb0                  	// #176
   1b668:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b66c:	nop
   1b670:	mov	w3, #0x2                   	// #2
   1b674:	mov	x2, #0x10000               	// #65536
   1b678:	str	x30, [sp, #-64]!
   1b67c:	add	x1, sp, #0x28
   1b680:	add	x0, sp, #0x10
   1b684:	str	xzr, [sp, #16]
   1b688:	str	w3, [sp, #24]
   1b68c:	str	x2, [sp, #32]
   1b690:	bl	69a0 <sigaltstack@plt>
   1b694:	cbnz	w0, 1b6ac <__sanitizer_set_report_fd@@Base+0x7ddc>
   1b698:	ldr	x0, [sp, #40]
   1b69c:	ldr	x1, [sp, #56]
   1b6a0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1b6a4:	ldr	x30, [sp], #64
   1b6a8:	ret
   1b6ac:	sxtw	x4, w0
   1b6b0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b6b4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b6b8:	add	x2, x2, #0x740
   1b6bc:	add	x0, x0, #0x5e0
   1b6c0:	mov	x3, #0x0                   	// #0
   1b6c4:	mov	w1, #0xc3                  	// #195
   1b6c8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b6cc:	nop
   1b6d0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b6d4:	stp	x19, x30, [sp, #-16]!
   1b6d8:	mov	x19, x0
   1b6dc:	ldr	x1, [x1, #4056]
   1b6e0:	ldrb	w0, [x1, #97]
   1b6e4:	cbnz	w0, 1b734 <__sanitizer_set_report_fd@@Base+0x7e64>
   1b6e8:	mov	x1, x19
   1b6ec:	mov	w0, #0xb                   	// #11
   1b6f0:	bl	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b6f4:	mov	x1, x19
   1b6f8:	mov	w0, #0x7                   	// #7
   1b6fc:	bl	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b700:	mov	x1, x19
   1b704:	mov	w0, #0x6                   	// #6
   1b708:	bl	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b70c:	mov	x1, x19
   1b710:	mov	w0, #0x8                   	// #8
   1b714:	bl	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b718:	mov	x1, x19
   1b71c:	mov	w0, #0x4                   	// #4
   1b720:	bl	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b724:	mov	x1, x19
   1b728:	mov	w0, #0x5                   	// #5
   1b72c:	ldp	x19, x30, [sp], #16
   1b730:	b	1b190 <__sanitizer_set_report_fd@@Base+0x78c0>
   1b734:	bl	1b5d0 <__sanitizer_set_report_fd@@Base+0x7d00>
   1b738:	b	1b6e8 <__sanitizer_set_report_fd@@Base+0x7e18>
   1b73c:	nop
   1b740:	stp	x19, x20, [sp, #-32]!
   1b744:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b748:	mov	x19, x0
   1b74c:	ldr	x20, [x20, #4016]
   1b750:	stp	x21, x30, [sp, #16]
   1b754:	ldr	x21, [x0, #16]
   1b758:	ldr	x0, [x20]
   1b75c:	cbz	x0, 1b7c8 <__sanitizer_set_report_fd@@Base+0x7ef8>
   1b760:	ldr	x1, [x19, #32]
   1b764:	add	x21, x21, x0
   1b768:	mov	w0, #0x0                   	// #0
   1b76c:	cmp	x21, x1
   1b770:	b.ls	1b7bc <__sanitizer_set_report_fd@@Base+0x7eec>  // b.plast
   1b774:	mov	x2, #0xffff                	// #65535
   1b778:	add	x1, x1, x2
   1b77c:	ldr	x2, [x19, #16]
   1b780:	cmp	x2, x1
   1b784:	b.cs	1b7bc <__sanitizer_set_report_fd@@Base+0x7eec>  // b.hs, b.nlast
   1b788:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b78c:	mov	w0, #0x1                   	// #1
   1b790:	ldr	x2, [x19]
   1b794:	ldr	x1, [x1, #3768]
   1b798:	ldr	w2, [x2, #8]
   1b79c:	ldr	w1, [x1]
   1b7a0:	cmp	w2, w1
   1b7a4:	b.eq	1b7bc <__sanitizer_set_report_fd@@Base+0x7eec>  // b.none
   1b7a8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b7ac:	ldr	x0, [x0, #3784]
   1b7b0:	ldr	w0, [x0]
   1b7b4:	cmp	w0, w2
   1b7b8:	cset	w0, eq  // eq = none
   1b7bc:	ldp	x21, x30, [sp, #16]
   1b7c0:	ldp	x19, x20, [sp], #32
   1b7c4:	ret
   1b7c8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1b7cc:	str	x0, [x20]
   1b7d0:	b	1b760 <__sanitizer_set_report_fd@@Base+0x7e90>
   1b7d4:	nop
   1b7d8:	stp	x19, x20, [sp, #-64]!
   1b7dc:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b7e0:	mov	x19, x1
   1b7e4:	ldr	x20, [x20, #4016]
   1b7e8:	stp	x21, x22, [sp, #16]
   1b7ec:	mov	x21, x0
   1b7f0:	ldr	x4, [x20]
   1b7f4:	str	x30, [sp, #32]
   1b7f8:	cbz	x4, 1b88c <__sanitizer_set_report_fd@@Base+0x7fbc>
   1b7fc:	add	x4, x4, x4, lsl #2
   1b800:	cmp	x19, x4, lsl #1
   1b804:	lsl	x4, x4, #1
   1b808:	b.cs	1b8a8 <__sanitizer_set_report_fd@@Base+0x7fd8>  // b.hs, b.nlast
   1b80c:	add	x0, sp, #0x38
   1b810:	mov	w22, #0x0                   	// #0
   1b814:	bl	6400 <pipe@plt>
   1b818:	mov	w20, w0
   1b81c:	cbz	w0, 1b834 <__sanitizer_set_report_fd@@Base+0x7f64>
   1b820:	mov	w0, w22
   1b824:	ldp	x21, x22, [sp, #16]
   1b828:	ldr	x30, [sp, #32]
   1b82c:	ldp	x19, x20, [sp], #64
   1b830:	ret
   1b834:	ldr	w0, [sp, #60]
   1b838:	mov	x2, x19
   1b83c:	mov	x1, x21
   1b840:	bl	17ab8 <__sanitizer_set_report_fd@@Base+0x41e8>
   1b844:	mov	x21, x0
   1b848:	add	x1, sp, #0x34
   1b84c:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1b850:	tst	w0, #0xff
   1b854:	b.eq	1b8c4 <__sanitizer_set_report_fd@@Base+0x7ff4>  // b.none
   1b858:	ldrsw	x4, [sp, #52]
   1b85c:	mov	w22, w20
   1b860:	cmp	x4, #0xe
   1b864:	b.ne	1b8e0 <__sanitizer_set_report_fd@@Base+0x8010>  // b.any
   1b868:	ldr	w0, [sp, #56]
   1b86c:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1b870:	ldr	w0, [sp, #60]
   1b874:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1b878:	mov	w0, w22
   1b87c:	ldp	x21, x22, [sp, #16]
   1b880:	ldr	x30, [sp, #32]
   1b884:	ldp	x19, x20, [sp], #64
   1b888:	ret
   1b88c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1b890:	mov	x4, x0
   1b894:	str	x0, [x20]
   1b898:	add	x4, x4, x4, lsl #2
   1b89c:	cmp	x19, x4, lsl #1
   1b8a0:	lsl	x4, x4, #1
   1b8a4:	b.cc	1b80c <__sanitizer_set_report_fd@@Base+0x7f3c>  // b.lo, b.ul, b.last
   1b8a8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b8ac:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b8b0:	mov	x3, x19
   1b8b4:	add	x2, x2, #0x770
   1b8b8:	add	x0, x0, #0x5e0
   1b8bc:	mov	w1, #0x118                 	// #280
   1b8c0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b8c4:	ldr	w0, [sp, #56]
   1b8c8:	cmp	x19, x21
   1b8cc:	cset	w22, eq  // eq = none
   1b8d0:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1b8d4:	ldr	w0, [sp, #60]
   1b8d8:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1b8dc:	b	1b878 <__sanitizer_set_report_fd@@Base+0x7fa8>
   1b8e0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b8e4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b8e8:	add	x2, x2, #0x790
   1b8ec:	add	x0, x0, #0x5e0
   1b8f0:	mov	x3, #0xe                   	// #14
   1b8f4:	mov	w1, #0x121                 	// #289
   1b8f8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b8fc:	nop
   1b900:	b	1d200 <OnPrint@@Base+0x820>
   1b904:	nop
   1b908:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1b90c:	stp	x19, x20, [sp, #-240]!
   1b910:	ldr	x2, [x2, #4056]
   1b914:	ldrb	w2, [x2, #215]
   1b918:	str	x30, [sp, #16]
   1b91c:	cbz	w2, 1b9f4 <__sanitizer_set_report_fd@@Base+0x8124>
   1b920:	mov	x20, x1
   1b924:	mov	x19, x0
   1b928:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   1b92c:	cmp	x0, #0xbd
   1b930:	b.hi	1b99c <__sanitizer_set_report_fd@@Base+0x80cc>  // b.pmore
   1b934:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   1b938:	mov	x3, x0
   1b93c:	mov	x4, x19
   1b940:	add	x19, sp, #0x28
   1b944:	mov	x1, #0xc8                  	// #200
   1b948:	mov	x0, x19
   1b94c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b950:	add	x2, x2, #0x7e8
   1b954:	bl	1c9e8 <OnPrint@@Base+0x8>
   1b958:	mov	w2, #0x1c0                 	// #448
   1b95c:	mov	w1, #0x242                 	// #578
   1b960:	mov	x0, x19
   1b964:	bl	63c0 <shm_open@plt>
   1b968:	mov	x1, x20
   1b96c:	mov	w20, w0
   1b970:	bl	17ae0 <__sanitizer_set_report_fd@@Base+0x4210>
   1b974:	sxtw	x4, w0
   1b978:	cbnz	w0, 1b9bc <__sanitizer_set_report_fd@@Base+0x80ec>
   1b97c:	mov	x0, x19
   1b980:	bl	6760 <shm_unlink@plt>
   1b984:	sxtw	x4, w0
   1b988:	cbnz	w0, 1b9d8 <__sanitizer_set_report_fd@@Base+0x8108>
   1b98c:	mov	w0, w20
   1b990:	ldr	x30, [sp, #16]
   1b994:	ldp	x19, x20, [sp], #240
   1b998:	ret
   1b99c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9a0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9a4:	add	x2, x2, #0x7b0
   1b9a8:	add	x0, x0, #0x5e0
   1b9ac:	mov	x4, #0x0                   	// #0
   1b9b0:	mov	x3, #0x0                   	// #0
   1b9b4:	mov	w1, #0x13c                 	// #316
   1b9b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b9bc:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9c0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9c4:	add	x2, x2, #0x7f8
   1b9c8:	add	x0, x0, #0x5e0
   1b9cc:	mov	x3, #0x0                   	// #0
   1b9d0:	mov	w1, #0x142                 	// #322
   1b9d4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b9d8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9dc:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1b9e0:	add	x2, x2, #0x7f8
   1b9e4:	add	x0, x0, #0x5e0
   1b9e8:	mov	x3, #0x0                   	// #0
   1b9ec:	mov	w1, #0x144                 	// #324
   1b9f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1b9f4:	mov	w20, #0xffffffff            	// #-1
   1b9f8:	b	1b98c <__sanitizer_set_report_fd@@Base+0x80bc>
   1b9fc:	nop
   1ba00:	stp	x19, x20, [sp, #-64]!
   1ba04:	mov	x19, x1
   1ba08:	stp	x21, x22, [sp, #16]
   1ba0c:	mov	x21, x0
   1ba10:	stp	x23, x30, [sp, #32]
   1ba14:	cbz	x2, 1baa0 <__sanitizer_set_report_fd@@Base+0x81d0>
   1ba18:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ba1c:	mov	x0, x2
   1ba20:	bl	1b908 <__sanitizer_set_report_fd@@Base+0x8038>
   1ba24:	cmn	w0, #0x1
   1ba28:	ldr	x20, [x20, #4016]
   1ba2c:	mov	w23, #0x4012                	// #16402
   1ba30:	mov	w3, #0x4032                	// #16434
   1ba34:	mov	w22, w0
   1ba38:	csel	w23, w23, w3, ne  // ne = any
   1ba3c:	ldr	x2, [x20]
   1ba40:	cbz	x2, 1bab8 <__sanitizer_set_report_fd@@Base+0x81e8>
   1ba44:	neg	x6, x2
   1ba48:	sub	x5, x2, #0x1
   1ba4c:	and	x0, x6, x21
   1ba50:	tst	x5, x2
   1ba54:	b.ne	1bad8 <__sanitizer_set_report_fd@@Base+0x8208>  // b.any
   1ba58:	mov	w4, w22
   1ba5c:	mov	w3, w23
   1ba60:	add	x1, x19, x5
   1ba64:	mov	w2, #0x3                   	// #3
   1ba68:	mov	x5, #0x0                   	// #0
   1ba6c:	and	x1, x1, x6
   1ba70:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1ba74:	add	x1, sp, #0x3c
   1ba78:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1ba7c:	tst	w0, #0xff
   1ba80:	b.ne	1bae8 <__sanitizer_set_report_fd@@Base+0x8218>  // b.any
   1ba84:	mov	x0, x19
   1ba88:	bl	fa38 <__sancov_default_options@@Base+0x3088>
   1ba8c:	mov	w0, #0x1                   	// #1
   1ba90:	ldp	x21, x22, [sp, #16]
   1ba94:	ldp	x23, x30, [sp, #32]
   1ba98:	ldp	x19, x20, [sp], #64
   1ba9c:	ret
   1baa0:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1baa4:	mov	w23, #0x4032                	// #16434
   1baa8:	mov	w22, #0xffffffff            	// #-1
   1baac:	ldr	x20, [x20, #4016]
   1bab0:	ldr	x2, [x20]
   1bab4:	cbnz	x2, 1ba44 <__sanitizer_set_report_fd@@Base+0x8174>
   1bab8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1babc:	mov	x2, x0
   1bac0:	str	x0, [x20]
   1bac4:	neg	x6, x2
   1bac8:	sub	x5, x2, #0x1
   1bacc:	and	x0, x6, x21
   1bad0:	tst	x5, x2
   1bad4:	b.eq	1ba58 <__sanitizer_set_report_fd@@Base+0x8188>  // b.none
   1bad8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1badc:	add	x0, x0, #0x970
   1bae0:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1bae4:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1bae8:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1baec:	ldr	w5, [sp, #60]
   1baf0:	mov	x4, x21
   1baf4:	mov	x3, x19
   1baf8:	ldr	x1, [x1, #4024]
   1bafc:	mov	x2, x19
   1bb00:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bb04:	add	x0, x0, #0x810
   1bb08:	ldr	x1, [x1]
   1bb0c:	bl	1cd78 <OnPrint@@Base+0x398>
   1bb10:	mov	w0, #0x0                   	// #0
   1bb14:	ldp	x21, x22, [sp, #16]
   1bb18:	ldp	x23, x30, [sp, #32]
   1bb1c:	ldp	x19, x20, [sp], #64
   1bb20:	ret
   1bb24:	nop
   1bb28:	stp	x19, x20, [sp, #-32]!
   1bb2c:	mov	x19, x0
   1bb30:	mov	x20, x2
   1bb34:	stp	x21, x30, [sp, #16]
   1bb38:	mov	x21, x1
   1bb3c:	cbz	x3, 1bb6c <__sanitizer_set_report_fd@@Base+0x829c>
   1bb40:	mov	x0, x3
   1bb44:	mov	x5, #0x0                   	// #0
   1bb48:	mov	w4, #0xffffffff            	// #-1
   1bb4c:	mov	w3, #0x4032                	// #16434
   1bb50:	mov	w2, #0x0                   	// #0
   1bb54:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1bb58:	stp	x0, x21, [x19]
   1bb5c:	str	x20, [x19, #16]
   1bb60:	ldp	x21, x30, [sp, #16]
   1bb64:	ldp	x19, x20, [sp], #32
   1bb68:	ret
   1bb6c:	mov	x5, #0x0                   	// #0
   1bb70:	mov	w4, #0xffffffff            	// #-1
   1bb74:	mov	w3, #0x4022                	// #16418
   1bb78:	mov	w2, #0x0                   	// #0
   1bb7c:	mov	x0, #0x0                   	// #0
   1bb80:	bl	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1bb84:	stp	x0, x21, [x19]
   1bb88:	str	x20, [x19, #16]
   1bb8c:	ldp	x21, x30, [sp, #16]
   1bb90:	ldp	x19, x20, [sp], #32
   1bb94:	ret
   1bb98:	mov	x0, x1
   1bb9c:	mov	x1, x2
   1bba0:	b	1a700 <__sanitizer_set_report_fd@@Base+0x6e30>
   1bba4:	nop
   1bba8:	mov	x0, x1
   1bbac:	mov	x1, x2
   1bbb0:	b	1a618 <__sanitizer_set_report_fd@@Base+0x6d48>
   1bbb4:	nop
   1bbb8:	ldr	x4, [x0, #8]
   1bbbc:	str	x30, [sp, #-16]!
   1bbc0:	mov	x5, x0
   1bbc4:	cmp	x2, x4
   1bbc8:	b.hi	1bc24 <__sanitizer_set_report_fd@@Base+0x8354>  // b.pmore
   1bbcc:	mov	x0, x1
   1bbd0:	ldr	x1, [x5]
   1bbd4:	cmp	x1, x0
   1bbd8:	b.eq	1bc00 <__sanitizer_set_report_fd@@Base+0x8330>  // b.none
   1bbdc:	add	x1, x1, x4
   1bbe0:	add	x3, x2, x0
   1bbe4:	cmp	x3, x1
   1bbe8:	b.ne	1bc40 <__sanitizer_set_report_fd@@Base+0x8370>  // b.any
   1bbec:	ldr	x30, [sp], #16
   1bbf0:	sub	x4, x4, x2
   1bbf4:	str	x4, [x5, #8]
   1bbf8:	mov	x1, x2
   1bbfc:	b	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1bc00:	ldr	x30, [sp], #16
   1bc04:	cmp	x2, x4
   1bc08:	add	x1, x2, x0
   1bc0c:	sub	x4, x4, x2
   1bc10:	csel	x1, x1, xzr, ne  // ne = any
   1bc14:	str	x1, [x5]
   1bc18:	str	x4, [x5, #8]
   1bc1c:	mov	x1, x2
   1bc20:	b	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1bc24:	mov	x3, x2
   1bc28:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bc2c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bc30:	add	x0, x0, #0x5e0
   1bc34:	add	x2, x2, #0x860
   1bc38:	mov	w1, #0x175                 	// #373
   1bc3c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1bc40:	mov	x4, x1
   1bc44:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bc48:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bc4c:	add	x2, x2, #0x878
   1bc50:	add	x0, x0, #0x5e0
   1bc54:	mov	w1, #0x17a                 	// #378
   1bc58:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1bc5c:	nop
   1bc60:	stp	x19, x20, [sp, #-32]!
   1bc64:	mov	x19, x0
   1bc68:	mov	x20, x1
   1bc6c:	str	x30, [sp, #16]
   1bc70:	cbz	x2, 1bcac <__sanitizer_set_report_fd@@Base+0x83dc>
   1bc74:	mov	x0, x2
   1bc78:	bl	1b908 <__sanitizer_set_report_fd@@Base+0x8038>
   1bc7c:	mov	w4, w0
   1bc80:	mov	w0, #0x4032                	// #16434
   1bc84:	cmn	w4, #0x1
   1bc88:	mov	x1, x20
   1bc8c:	mov	w3, #0x4012                	// #16402
   1bc90:	csel	w3, w3, w0, ne  // ne = any
   1bc94:	mov	x0, x19
   1bc98:	mov	x5, #0x0                   	// #0
   1bc9c:	ldr	x30, [sp, #16]
   1bca0:	mov	w2, #0x0                   	// #0
   1bca4:	ldp	x19, x20, [sp], #32
   1bca8:	b	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1bcac:	mov	x1, x20
   1bcb0:	mov	x0, x19
   1bcb4:	ldr	x30, [sp, #16]
   1bcb8:	mov	w3, #0x4032                	// #16434
   1bcbc:	ldp	x19, x20, [sp], #32
   1bcc0:	mov	w4, #0xffffffff            	// #-1
   1bcc4:	mov	x5, #0x0                   	// #0
   1bcc8:	mov	w2, #0x0                   	// #0
   1bccc:	b	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1bcd0:	mov	x1, x0
   1bcd4:	mov	x5, #0x0                   	// #0
   1bcd8:	mov	w4, #0xffffffff            	// #-1
   1bcdc:	mov	w3, #0x4022                	// #16418
   1bce0:	mov	w2, #0x0                   	// #0
   1bce4:	mov	x0, #0x0                   	// #0
   1bce8:	b	17a10 <__sanitizer_set_report_fd@@Base+0x4140>
   1bcec:	nop
   1bcf0:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1bcf4:	ldr	x3, [x3, #3832]
   1bcf8:	cbz	x3, 1bd00 <__sanitizer_set_report_fd@@Base+0x8430>
   1bcfc:	b	64e0 <real_pthread_attr_getstack@plt>
   1bd00:	b	6710 <pthread_attr_getstack@plt>
   1bd04:	nop
   1bd08:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1bd0c:	stp	x19, x20, [sp, #-48]!
   1bd10:	mov	x20, x0
   1bd14:	ldr	x1, [x1, #3832]
   1bd18:	str	x30, [sp, #16]
   1bd1c:	stp	xzr, xzr, [sp, #32]
   1bd20:	add	x2, sp, #0x28
   1bd24:	cbz	x1, 1bda0 <__sanitizer_set_report_fd@@Base+0x84d0>
   1bd28:	add	x1, sp, #0x20
   1bd2c:	bl	64e0 <real_pthread_attr_getstack@plt>
   1bd30:	ldr	x1, [sp, #32]
   1bd34:	cbz	x1, 1bd44 <__sanitizer_set_report_fd@@Base+0x8474>
   1bd38:	ldr	x0, [sp, #40]
   1bd3c:	cmn	x1, x0
   1bd40:	b.ne	1bd68 <__sanitizer_set_report_fd@@Base+0x8498>  // b.any
   1bd44:	bl	19ab8 <__sanitizer_set_report_fd@@Base+0x61e8>
   1bd48:	add	x19, x0, #0x20, lsl #12
   1bd4c:	ldr	x1, [sp, #40]
   1bd50:	cmp	x1, #0x0
   1bd54:	ccmp	x19, x1, #0x0, ne  // ne = any
   1bd58:	b.hi	1bdac <__sanitizer_set_report_fd@@Base+0x84dc>  // b.pmore
   1bd5c:	ldr	x30, [sp, #16]
   1bd60:	ldp	x19, x20, [sp], #48
   1bd64:	ret
   1bd68:	bl	19ab8 <__sanitizer_set_report_fd@@Base+0x61e8>
   1bd6c:	add	x2, x0, #0x20, lsl #12
   1bd70:	ldr	x1, [sp, #40]
   1bd74:	cmp	x2, x1
   1bd78:	b.ls	1bd5c <__sanitizer_set_report_fd@@Base+0x848c>  // b.plast
   1bd7c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bd80:	add	x0, x0, #0x8e8
   1bd84:	bl	1ccf0 <OnPrint@@Base+0x310>
   1bd88:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bd8c:	add	x0, x0, #0x928
   1bd90:	bl	1ccf0 <OnPrint@@Base+0x310>
   1bd94:	ldr	x30, [sp, #16]
   1bd98:	ldp	x19, x20, [sp], #48
   1bd9c:	ret
   1bda0:	add	x1, sp, #0x20
   1bda4:	bl	6710 <pthread_attr_getstack@plt>
   1bda8:	b	1bd30 <__sanitizer_set_report_fd@@Base+0x8460>
   1bdac:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1bdb0:	ldr	x0, [x0, #3896]
   1bdb4:	ldr	w0, [x0]
   1bdb8:	cbnz	w0, 1bdd4 <__sanitizer_set_report_fd@@Base+0x8504>
   1bdbc:	mov	x1, x19
   1bdc0:	mov	x0, x20
   1bdc4:	bl	6720 <pthread_attr_setstacksize@plt>
   1bdc8:	ldr	x30, [sp, #16]
   1bdcc:	ldp	x19, x20, [sp], #48
   1bdd0:	ret
   1bdd4:	mov	x2, x19
   1bdd8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bddc:	add	x0, x0, #0x8b8
   1bde0:	bl	1ccf0 <OnPrint@@Base+0x310>
   1bde4:	b	1bdbc <__sanitizer_set_report_fd@@Base+0x84ec>
   1bde8:	stp	x19, x20, [sp, #-80]!
   1bdec:	mov	w20, w4
   1bdf0:	stp	x21, x22, [sp, #16]
   1bdf4:	mov	w22, w2
   1bdf8:	mov	w21, w3
   1bdfc:	stp	x23, x24, [sp, #32]
   1be00:	mov	x23, x0
   1be04:	mov	x24, x1
   1be08:	str	x30, [sp, #48]
   1be0c:	bl	18108 <__sanitizer_set_report_fd@@Base+0x4838>
   1be10:	mov	w19, w0
   1be14:	cmp	w0, #0x0
   1be18:	b.lt	1be68 <__sanitizer_set_report_fd@@Base+0x8598>  // b.tstop
   1be1c:	b.eq	1be90 <__sanitizer_set_report_fd@@Base+0x85c0>  // b.none
   1be20:	cmn	w22, #0x1
   1be24:	b.eq	1be30 <__sanitizer_set_report_fd@@Base+0x8560>  // b.none
   1be28:	mov	w0, w22
   1be2c:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1be30:	cmn	w21, #0x1
   1be34:	b.eq	1be40 <__sanitizer_set_report_fd@@Base+0x8570>  // b.none
   1be38:	mov	w0, w21
   1be3c:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1be40:	cmn	w20, #0x1
   1be44:	b.eq	1be50 <__sanitizer_set_report_fd@@Base+0x8580>  // b.none
   1be48:	mov	w0, w20
   1be4c:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1be50:	mov	w0, w19
   1be54:	ldp	x21, x22, [sp, #16]
   1be58:	ldp	x23, x24, [sp, #32]
   1be5c:	ldr	x30, [sp, #48]
   1be60:	ldp	x19, x20, [sp], #80
   1be64:	ret
   1be68:	add	x1, sp, #0x4c
   1be6c:	sxtw	x0, w0
   1be70:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1be74:	tst	w0, #0xff
   1be78:	b.eq	1be20 <__sanitizer_set_report_fd@@Base+0x8550>  // b.none
   1be7c:	ldr	w1, [sp, #76]
   1be80:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1be84:	add	x0, x0, #0x958
   1be88:	bl	1cd78 <OnPrint@@Base+0x398>
   1be8c:	b	1be20 <__sanitizer_set_report_fd@@Base+0x8550>
   1be90:	cmn	w22, #0x1
   1be94:	b.eq	1beb0 <__sanitizer_set_report_fd@@Base+0x85e0>  // b.none
   1be98:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1be9c:	mov	w1, #0x0                   	// #0
   1bea0:	mov	w0, w22
   1bea4:	bl	17b80 <__sanitizer_set_report_fd@@Base+0x42b0>
   1bea8:	mov	w0, w22
   1beac:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1beb0:	cmn	w21, #0x1
   1beb4:	b.eq	1bed4 <__sanitizer_set_report_fd@@Base+0x8604>  // b.none
   1beb8:	mov	w0, #0x1                   	// #1
   1bebc:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1bec0:	mov	w1, #0x1                   	// #1
   1bec4:	mov	w0, w21
   1bec8:	bl	17b80 <__sanitizer_set_report_fd@@Base+0x42b0>
   1becc:	mov	w0, w21
   1bed0:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1bed4:	cmn	w20, #0x1
   1bed8:	b.eq	1bef8 <__sanitizer_set_report_fd@@Base+0x8628>  // b.none
   1bedc:	mov	w0, #0x2                   	// #2
   1bee0:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1bee4:	mov	w1, #0x2                   	// #2
   1bee8:	mov	w0, w20
   1beec:	bl	17b80 <__sanitizer_set_report_fd@@Base+0x42b0>
   1bef0:	mov	w0, w20
   1bef4:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1bef8:	mov	w0, #0x4                   	// #4
   1befc:	bl	6900 <sysconf@plt>
   1bf00:	mov	x19, x0
   1bf04:	cmp	w0, #0x2
   1bf08:	b.le	1bf20 <__sanitizer_set_report_fd@@Base+0x8650>
   1bf0c:	mov	w0, w19
   1bf10:	sub	w19, w19, #0x1
   1bf14:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   1bf18:	cmp	w19, #0x2
   1bf1c:	b.ne	1bf0c <__sanitizer_set_report_fd@@Base+0x863c>  // b.any
   1bf20:	mov	x1, x24
   1bf24:	mov	x0, x23
   1bf28:	bl	63f0 <execv@plt>
   1bf2c:	mov	w0, #0x1                   	// #1
   1bf30:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   1bf34:	nop
   1bf38:	stp	x19, x30, [sp, #-32]!
   1bf3c:	mov	w2, #0x1                   	// #1
   1bf40:	add	x1, sp, #0x18
   1bf44:	bl	18080 <__sanitizer_set_report_fd@@Base+0x47b0>
   1bf48:	add	x1, sp, #0x1c
   1bf4c:	mov	x19, x0
   1bf50:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1bf54:	cmp	x19, #0x0
   1bf58:	cset	w19, eq  // eq = none
   1bf5c:	tst	w0, #0xff
   1bf60:	b.ne	1bf70 <__sanitizer_set_report_fd@@Base+0x86a0>  // b.any
   1bf64:	mov	w0, w19
   1bf68:	ldp	x19, x30, [sp], #32
   1bf6c:	ret
   1bf70:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1bf74:	mov	w19, #0x0                   	// #0
   1bf78:	ldr	x0, [x0, #3896]
   1bf7c:	ldr	w0, [x0]
   1bf80:	cbz	w0, 1bf64 <__sanitizer_set_report_fd@@Base+0x8694>
   1bf84:	ldr	w1, [sp, #28]
   1bf88:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bf8c:	add	x0, x0, #0x980
   1bf90:	bl	1cd78 <OnPrint@@Base+0x398>
   1bf94:	mov	w0, w19
   1bf98:	ldp	x19, x30, [sp], #32
   1bf9c:	ret
   1bfa0:	stp	x19, x30, [sp, #-32]!
   1bfa4:	mov	w2, #0x0                   	// #0
   1bfa8:	add	x1, sp, #0x18
   1bfac:	bl	18080 <__sanitizer_set_report_fd@@Base+0x47b0>
   1bfb0:	add	x1, sp, #0x1c
   1bfb4:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   1bfb8:	tst	w0, #0xff
   1bfbc:	b.ne	1bfd0 <__sanitizer_set_report_fd@@Base+0x8700>  // b.any
   1bfc0:	ldr	w19, [sp, #24]
   1bfc4:	mov	w0, w19
   1bfc8:	ldp	x19, x30, [sp], #32
   1bfcc:	ret
   1bfd0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1bfd4:	mov	w19, #0xffffffff            	// #-1
   1bfd8:	ldr	x0, [x0, #3896]
   1bfdc:	ldr	w0, [x0]
   1bfe0:	cbz	w0, 1bfc4 <__sanitizer_set_report_fd@@Base+0x86f4>
   1bfe4:	ldr	w1, [sp, #28]
   1bfe8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1bfec:	add	x0, x0, #0x980
   1bff0:	bl	1cd78 <OnPrint@@Base+0x398>
   1bff4:	b	1bfc4 <__sanitizer_set_report_fd@@Base+0x86f4>
   1bff8:	cmp	w0, #0x1
   1bffc:	cset	w0, eq  // eq = none
   1c000:	ret
   1c004:	nop
   1c008:	stp	x19, x20, [sp, #-320]!
   1c00c:	and	w3, w3, #0xff
   1c010:	cmp	w3, #0xa
   1c014:	cset	w8, ne  // ne = any
   1c018:	stp	x21, x22, [sp, #16]
   1c01c:	cmp	w8, #0x0
   1c020:	stp	x23, x24, [sp, #32]
   1c024:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   1c028:	stp	x25, x26, [sp, #48]
   1c02c:	str	x30, [sp, #64]
   1c030:	b.ne	1c224 <__sanitizer_set_report_fd@@Base+0x8954>  // b.any
   1c034:	and	w24, w6, #0xff
   1c038:	cmp	w8, #0x0
   1c03c:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1c040:	b.ne	1c244 <__sanitizer_set_report_fd@@Base+0x8974>  // b.any
   1c044:	cmp	x2, #0x0
   1c048:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   1c04c:	b.ne	1c254 <__sanitizer_set_report_fd@@Base+0x8984>  // b.any
   1c050:	and	w23, w4, #0xff
   1c054:	cmp	w23, #0x1d
   1c058:	b.hi	1c264 <__sanitizer_set_report_fd@@Base+0x8994>  // b.pmore
   1c05c:	cmp	w23, #0x0
   1c060:	mov	x19, x0
   1c064:	sub	w0, w23, #0x1
   1c068:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1c06c:	and	w0, w0, #0xff
   1c070:	and	w25, w5, #0xff
   1c074:	csel	w23, w0, w23, ne  // ne = any
   1c078:	cmp	w24, #0x0
   1c07c:	mov	x20, x1
   1c080:	and	w26, w7, #0xff
   1c084:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1c088:	mov	w21, #0x0                   	// #0
   1c08c:	b.ne	1c0dc <__sanitizer_set_report_fd@@Base+0x880c>  // b.any
   1c090:	add	x22, sp, #0x50
   1c094:	and	x3, x3, #0xff
   1c098:	mov	x10, x22
   1c09c:	mov	w0, #0x0                   	// #0
   1c0a0:	udiv	x11, x2, x3
   1c0a4:	mov	w8, w0
   1c0a8:	cmp	x3, x2
   1c0ac:	add	w0, w0, #0x1
   1c0b0:	msub	x12, x11, x3, x2
   1c0b4:	mov	x2, x11
   1c0b8:	str	x12, [x10]
   1c0bc:	b.hi	1c104 <__sanitizer_set_report_fd@@Base+0x8834>  // b.pmore
   1c0c0:	add	x10, x10, #0x8
   1c0c4:	cmp	w0, #0x1e
   1c0c8:	b.ne	1c0a0 <__sanitizer_set_report_fd@@Base+0x87d0>  // b.any
   1c0cc:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c0d0:	add	x0, x0, #0xa28
   1c0d4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c0d8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c0dc:	ldr	x9, [x19]
   1c0e0:	mov	w21, #0x1                   	// #1
   1c0e4:	cmp	x1, x9
   1c0e8:	b.ls	1c090 <__sanitizer_set_report_fd@@Base+0x87c0>  // b.plast
   1c0ec:	mov	w0, #0x2d                  	// #45
   1c0f0:	strb	w0, [x9]
   1c0f4:	ldr	x9, [x19]
   1c0f8:	add	x9, x9, #0x1
   1c0fc:	str	x9, [x19]
   1c100:	b	1c090 <__sanitizer_set_report_fd@@Base+0x87c0>
   1c104:	cmp	w0, w23
   1c108:	b.lt	1c208 <__sanitizer_set_report_fd@@Base+0x8938>  // b.tstop
   1c10c:	ldr	x9, [x19]
   1c110:	add	x0, x22, w8, sxtw #3
   1c114:	mov	w3, #0x20                  	// #32
   1c118:	mov	w2, #0x30                  	// #48
   1c11c:	nop
   1c120:	ldr	x1, [x0]
   1c124:	cbnz	x1, 1c234 <__sanitizer_set_report_fd@@Base+0x8964>
   1c128:	cmp	w8, #0x0
   1c12c:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   1c130:	csel	w1, w3, w2, eq  // eq = none
   1c134:	cmp	x20, x9
   1c138:	b.ls	1c14c <__sanitizer_set_report_fd@@Base+0x887c>  // b.plast
   1c13c:	strb	w1, [x9]
   1c140:	ldr	x9, [x19]
   1c144:	add	x9, x9, #0x1
   1c148:	str	x9, [x19]
   1c14c:	sub	w8, w8, #0x1
   1c150:	add	w21, w21, #0x1
   1c154:	cmn	w8, #0x1
   1c158:	sub	x0, x0, #0x8
   1c15c:	b.ne	1c120 <__sanitizer_set_report_fd@@Base+0x8850>  // b.any
   1c160:	eor	w25, w25, #0x1
   1c164:	tst	w24, w25
   1c168:	b.eq	1c1ec <__sanitizer_set_report_fd@@Base+0x891c>  // b.none
   1c16c:	cmp	x20, x9
   1c170:	b.hi	1c274 <__sanitizer_set_report_fd@@Base+0x89a4>  // b.pmore
   1c174:	add	w21, w21, #0x1
   1c178:	cmn	w8, #0x1
   1c17c:	b.eq	1c1ec <__sanitizer_set_report_fd@@Base+0x891c>  // b.none
   1c180:	cmp	w26, #0x0
   1c184:	sub	w3, w8, #0x1
   1c188:	mov	w4, #0x41                  	// #65
   1c18c:	mov	w0, #0x61                  	// #97
   1c190:	csel	w4, w4, w0, ne  // ne = any
   1c194:	sxtw	x3, w3
   1c198:	sub	w4, w4, #0xa
   1c19c:	mov	x5, #0xfffffffffffffffe    	// #-2
   1c1a0:	add	x0, x22, x3, lsl #3
   1c1a4:	ldrb	w1, [x0, #8]
   1c1a8:	add	w0, w1, #0x30
   1c1ac:	add	w2, w1, w4
   1c1b0:	cmp	w1, #0x9
   1c1b4:	and	w0, w0, #0xff
   1c1b8:	and	w2, w2, #0xff
   1c1bc:	csel	w2, w2, w0, hi  // hi = pmore
   1c1c0:	cmp	x20, x9
   1c1c4:	b.ls	1c1d8 <__sanitizer_set_report_fd@@Base+0x8908>  // b.plast
   1c1c8:	strb	w2, [x9]
   1c1cc:	ldr	x9, [x19]
   1c1d0:	add	x9, x9, #0x1
   1c1d4:	str	x9, [x19]
   1c1d8:	sub	x3, x3, #0x1
   1c1dc:	cmp	x3, x5
   1c1e0:	b.ne	1c1a0 <__sanitizer_set_report_fd@@Base+0x88d0>  // b.any
   1c1e4:	add	w21, w21, #0x1
   1c1e8:	add	w21, w21, w8
   1c1ec:	mov	w0, w21
   1c1f0:	ldp	x21, x22, [sp, #16]
   1c1f4:	ldp	x23, x24, [sp, #32]
   1c1f8:	ldp	x25, x26, [sp, #48]
   1c1fc:	ldr	x30, [sp, #64]
   1c200:	ldp	x19, x20, [sp], #320
   1c204:	ret
   1c208:	sub	w2, w23, w0
   1c20c:	mov	w1, #0x0                   	// #0
   1c210:	add	x0, x22, w0, sxtw #3
   1c214:	sbfiz	x2, x2, #3, #32
   1c218:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1c21c:	sub	w8, w23, #0x1
   1c220:	b	1c10c <__sanitizer_set_report_fd@@Base+0x883c>
   1c224:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c228:	add	x0, x0, #0x9b0
   1c22c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c230:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c234:	eor	w25, w25, #0x1
   1c238:	tst	w24, w25
   1c23c:	b.eq	1c180 <__sanitizer_set_report_fd@@Base+0x88b0>  // b.none
   1c240:	b	1c16c <__sanitizer_set_report_fd@@Base+0x889c>
   1c244:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c248:	add	x0, x0, #0x9d0
   1c24c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c250:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c254:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c258:	add	x0, x0, #0x9e8
   1c25c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c260:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c264:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c268:	add	x0, x0, #0xa08
   1c26c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c270:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c274:	mov	w0, #0x2d                  	// #45
   1c278:	strb	w0, [x9]
   1c27c:	ldr	x9, [x19]
   1c280:	add	x9, x9, #0x1
   1c284:	str	x9, [x19]
   1c288:	b	1c174 <__sanitizer_set_report_fd@@Base+0x88a4>
   1c28c:	nop
   1c290:	stp	x19, x20, [sp, #-112]!
   1c294:	stp	x23, x24, [sp, #32]
   1c298:	stp	x27, x28, [sp, #64]
   1c29c:	str	x30, [sp, #80]
   1c2a0:	str	x0, [sp, #104]
   1c2a4:	cbz	x2, 1c8d0 <__sanitizer_set_report_fd@@Base+0x9000>
   1c2a8:	cmp	w1, #0x0
   1c2ac:	b.le	1c8e8 <__sanitizer_set_report_fd@@Base+0x9018>
   1c2b0:	ldrb	w4, [x2]
   1c2b4:	sxtw	x19, w1
   1c2b8:	sub	x28, x19, #0x1
   1c2bc:	mov	x20, x0
   1c2c0:	add	x28, x0, x28
   1c2c4:	cbz	w4, 1c9ac <__sanitizer_set_report_fd@@Base+0x90dc>
   1c2c8:	stp	x21, x22, [sp, #16]
   1c2cc:	adrp	x21, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c2d0:	add	x0, x21, #0xa48
   1c2d4:	mov	w27, #0x1                   	// #1
   1c2d8:	mov	w24, #0x0                   	// #0
   1c2dc:	sub	w27, w27, w0
   1c2e0:	stp	x25, x26, [sp, #48]
   1c2e4:	ldr	w26, [x3, #24]
   1c2e8:	ldp	x25, x22, [x3]
   1c2ec:	b	1c324 <__sanitizer_set_report_fd@@Base+0x8a54>
   1c2f0:	ldr	x0, [sp, #104]
   1c2f4:	cmp	x28, x0
   1c2f8:	b.ls	1c30c <__sanitizer_set_report_fd@@Base+0x8a3c>  // b.plast
   1c2fc:	strb	w4, [x0]
   1c300:	ldr	x0, [sp, #104]
   1c304:	add	x0, x0, #0x1
   1c308:	str	x0, [sp, #104]
   1c30c:	mov	x0, x23
   1c310:	add	w24, w24, #0x1
   1c314:	mov	x23, x2
   1c318:	mov	x2, x0
   1c31c:	ldrb	w4, [x23, #1]
   1c320:	cbz	w4, 1c4c0 <__sanitizer_set_report_fd@@Base+0x8bf0>
   1c324:	cmp	w4, #0x25
   1c328:	add	x23, x2, #0x1
   1c32c:	b.ne	1c2f0 <__sanitizer_set_report_fd@@Base+0x8a20>  // b.any
   1c330:	ldrb	w1, [x2, #1]
   1c334:	cmp	w1, #0x2d
   1c338:	mov	w3, w1
   1c33c:	b.ne	1c348 <__sanitizer_set_report_fd@@Base+0x8a78>  // b.any
   1c340:	ldrb	w3, [x2, #2]
   1c344:	add	x23, x2, #0x2
   1c348:	sub	w0, w3, #0x30
   1c34c:	mov	w4, #0x0                   	// #0
   1c350:	and	w0, w0, #0xff
   1c354:	cmp	w0, #0x9
   1c358:	cset	w6, ls  // ls = plast
   1c35c:	cmp	w3, #0x30
   1c360:	cset	w5, eq  // eq = none
   1c364:	cmp	w0, #0x9
   1c368:	b.ls	1c3d4 <__sanitizer_set_report_fd@@Base+0x8b04>  // b.plast
   1c36c:	cmp	w3, #0x2e
   1c370:	mov	w8, #0x1                   	// #1
   1c374:	mov	w2, #0xffffffff            	// #-1
   1c378:	b.eq	1c418 <__sanitizer_set_report_fd@@Base+0x8b48>  // b.none
   1c37c:	cmp	w3, #0x7a
   1c380:	cinc	x23, x23, eq  // eq = none
   1c384:	cset	w7, eq  // eq = none
   1c388:	ldrb	w3, [x23]
   1c38c:	b.eq	1c398 <__sanitizer_set_report_fd@@Base+0x8ac8>  // b.none
   1c390:	cmp	w3, #0x6c
   1c394:	b.eq	1c434 <__sanitizer_set_report_fd@@Base+0x8b64>  // b.none
   1c398:	cmp	w1, #0x2d
   1c39c:	orr	w6, w6, w7
   1c3a0:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1c3a4:	mov	w9, #0x0                   	// #0
   1c3a8:	b.ne	1c460 <__sanitizer_set_report_fd@@Base+0x8b90>  // b.any
   1c3ac:	cmp	w3, #0x73
   1c3b0:	b.eq	1c668 <__sanitizer_set_report_fd@@Base+0x8d98>  // b.none
   1c3b4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c3b8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c3bc:	add	x2, x2, #0xa70
   1c3c0:	add	x0, x0, #0xab0
   1c3c4:	mov	x4, #0x0                   	// #0
   1c3c8:	mov	x3, #0x0                   	// #0
   1c3cc:	mov	w1, #0xa9                  	// #169
   1c3d0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1c3d4:	add	w4, w4, w4, lsl #2
   1c3d8:	add	w4, w3, w4, lsl #1
   1c3dc:	ldrb	w3, [x23, #1]!
   1c3e0:	sub	w4, w4, #0x30
   1c3e4:	sub	w2, w3, #0x30
   1c3e8:	and	w2, w2, #0xff
   1c3ec:	cmp	w2, #0x9
   1c3f0:	b.hi	1c36c <__sanitizer_set_report_fd@@Base+0x8a9c>  // b.pmore
   1c3f4:	add	w4, w4, w4, lsl #2
   1c3f8:	add	w4, w3, w4, lsl #1
   1c3fc:	ldrb	w3, [x23, #1]!
   1c400:	sub	w4, w4, #0x30
   1c404:	sub	w2, w3, #0x30
   1c408:	and	w2, w2, #0xff
   1c40c:	cmp	w2, #0x9
   1c410:	b.ls	1c3d4 <__sanitizer_set_report_fd@@Base+0x8b04>  // b.plast
   1c414:	b	1c36c <__sanitizer_set_report_fd@@Base+0x8a9c>
   1c418:	ldrb	w3, [x23, #1]
   1c41c:	cmp	w3, #0x2a
   1c420:	b.eq	1c7d4 <__sanitizer_set_report_fd@@Base+0x8f04>  // b.none
   1c424:	ldrb	w3, [x23]
   1c428:	mov	w7, #0x0                   	// #0
   1c42c:	cmp	w3, #0x6c
   1c430:	b.ne	1c398 <__sanitizer_set_report_fd@@Base+0x8ac8>  // b.any
   1c434:	ldrb	w9, [x23, #1]
   1c438:	cmp	w9, #0x6c
   1c43c:	b.ne	1c398 <__sanitizer_set_report_fd@@Base+0x8ac8>  // b.any
   1c440:	cmp	w1, #0x2d
   1c444:	mov	w7, #0x1                   	// #1
   1c448:	ldrb	w3, [x23, #2]
   1c44c:	mov	w6, w7
   1c450:	add	x23, x23, #0x2
   1c454:	mov	w9, w7
   1c458:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1c45c:	b.eq	1c3ac <__sanitizer_set_report_fd@@Base+0x8adc>  // b.none
   1c460:	cmp	w3, #0x64
   1c464:	b.eq	1c638 <__sanitizer_set_report_fd@@Base+0x8d68>  // b.none
   1c468:	b.hi	1c4fc <__sanitizer_set_report_fd@@Base+0x8c2c>  // b.pmore
   1c46c:	cmp	w3, #0x58
   1c470:	b.eq	1c5ec <__sanitizer_set_report_fd@@Base+0x8d1c>  // b.none
   1c474:	cmp	w3, #0x63
   1c478:	b.ne	1c584 <__sanitizer_set_report_fd@@Base+0x8cb4>  // b.any
   1c47c:	cbnz	w6, 1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>
   1c480:	tbnz	w26, #31, 1c784 <__sanitizer_set_report_fd@@Base+0x8eb4>
   1c484:	add	x0, x25, #0xb
   1c488:	mov	x1, x25
   1c48c:	and	x25, x0, #0xfffffffffffffff8
   1c490:	ldr	x0, [sp, #104]
   1c494:	cmp	x28, x0
   1c498:	b.ls	1c4b0 <__sanitizer_set_report_fd@@Base+0x8be0>  // b.plast
   1c49c:	ldr	w1, [x1]
   1c4a0:	strb	w1, [x0]
   1c4a4:	ldr	x0, [sp, #104]
   1c4a8:	add	x0, x0, #0x1
   1c4ac:	str	x0, [sp, #104]
   1c4b0:	add	w24, w24, #0x1
   1c4b4:	add	x2, x23, #0x1
   1c4b8:	ldrb	w4, [x23, #1]
   1c4bc:	cbnz	w4, 1c324 <__sanitizer_set_report_fd@@Base+0x8a54>
   1c4c0:	ldp	x21, x22, [sp, #16]
   1c4c4:	ldp	x25, x26, [sp, #48]
   1c4c8:	ldr	x0, [sp, #104]
   1c4cc:	cmp	x28, x0
   1c4d0:	b.cc	1c9b4 <__sanitizer_set_report_fd@@Base+0x90e4>  // b.lo, b.ul, b.last
   1c4d4:	add	x19, x20, x19
   1c4d8:	cmp	x0, x19
   1c4dc:	b.cs	1c4e4 <__sanitizer_set_report_fd@@Base+0x8c14>  // b.hs, b.nlast
   1c4e0:	strb	wzr, [x0]
   1c4e4:	mov	w0, w24
   1c4e8:	ldp	x23, x24, [sp, #32]
   1c4ec:	ldp	x27, x28, [sp, #64]
   1c4f0:	ldr	x30, [sp, #80]
   1c4f4:	ldp	x19, x20, [sp], #112
   1c4f8:	ret
   1c4fc:	cmp	w3, #0x70
   1c500:	b.ne	1c5b8 <__sanitizer_set_report_fd@@Base+0x8ce8>  // b.any
   1c504:	cbnz	w6, 1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>
   1c508:	tbnz	w26, #31, 1c7a4 <__sanitizer_set_report_fd@@Base+0x8ed4>
   1c50c:	add	x0, x25, #0xf
   1c510:	mov	x2, x25
   1c514:	and	x25, x0, #0xfffffffffffffff8
   1c518:	ldr	x2, [x2]
   1c51c:	add	x1, x21, #0xa48
   1c520:	ldr	x0, [sp, #104]
   1c524:	mov	w3, #0x30                  	// #48
   1c528:	cmp	x28, x0
   1c52c:	b.ls	1c7c4 <__sanitizer_set_report_fd@@Base+0x8ef4>  // b.plast
   1c530:	strb	w3, [x0]
   1c534:	add	w8, w27, w1
   1c538:	ldrb	w3, [x1, #1]!
   1c53c:	ldr	x0, [sp, #104]
   1c540:	add	x0, x0, #0x1
   1c544:	str	x0, [sp, #104]
   1c548:	cbnz	w3, 1c528 <__sanitizer_set_report_fd@@Base+0x8c58>
   1c54c:	mov	x1, x28
   1c550:	add	x0, sp, #0x68
   1c554:	mov	w7, #0x0                   	// #0
   1c558:	mov	w6, #0x0                   	// #0
   1c55c:	mov	w5, #0x1                   	// #1
   1c560:	mov	w4, #0xc                   	// #12
   1c564:	mov	w3, #0x10                  	// #16
   1c568:	str	w8, [sp, #100]
   1c56c:	bl	1c008 <__sanitizer_set_report_fd@@Base+0x8738>
   1c570:	ldr	w8, [sp, #100]
   1c574:	add	x2, x23, #0x1
   1c578:	add	w8, w0, w8
   1c57c:	add	w24, w24, w8
   1c580:	b	1c31c <__sanitizer_set_report_fd@@Base+0x8a4c>
   1c584:	cmp	w3, #0x25
   1c588:	b.ne	1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>  // b.any
   1c58c:	cbnz	w6, 1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>
   1c590:	ldr	x0, [sp, #104]
   1c594:	cmp	x28, x0
   1c598:	b.ls	1c4b0 <__sanitizer_set_report_fd@@Base+0x8be0>  // b.plast
   1c59c:	strb	w3, [x0]
   1c5a0:	add	w24, w24, #0x1
   1c5a4:	add	x2, x23, #0x1
   1c5a8:	ldr	x0, [sp, #104]
   1c5ac:	add	x0, x0, #0x1
   1c5b0:	str	x0, [sp, #104]
   1c5b4:	b	1c4b8 <__sanitizer_set_report_fd@@Base+0x8be8>
   1c5b8:	cmp	w3, #0x6f
   1c5bc:	b.hi	1c5d0 <__sanitizer_set_report_fd@@Base+0x8d00>  // b.pmore
   1c5c0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c5c4:	add	x0, x0, #0xaf0
   1c5c8:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c5cc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c5d0:	cmp	w3, #0x78
   1c5d4:	b.eq	1c5ec <__sanitizer_set_report_fd@@Base+0x8d1c>  // b.none
   1c5d8:	b.hi	1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>  // b.pmore
   1c5dc:	cmp	w3, #0x73
   1c5e0:	b.eq	1c668 <__sanitizer_set_report_fd@@Base+0x8d98>  // b.none
   1c5e4:	cmp	w3, #0x75
   1c5e8:	b.ne	1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>  // b.any
   1c5ec:	cbz	w9, 1c74c <__sanitizer_set_report_fd@@Base+0x8e7c>
   1c5f0:	tbnz	w26, #31, 1c890 <__sanitizer_set_report_fd@@Base+0x8fc0>
   1c5f4:	add	x1, x25, #0xf
   1c5f8:	mov	x0, x25
   1c5fc:	and	x25, x1, #0xfffffffffffffff8
   1c600:	ldr	x2, [x0]
   1c604:	cmp	w3, #0x58
   1c608:	cset	w7, eq  // eq = none
   1c60c:	cmp	w3, #0x75
   1c610:	mov	w0, #0x10                  	// #16
   1c614:	mov	w3, #0xa                   	// #10
   1c618:	csel	w3, w3, w0, eq  // eq = none
   1c61c:	mov	w6, #0x0                   	// #0
   1c620:	mov	x1, x28
   1c624:	add	x0, sp, #0x68
   1c628:	bl	1c008 <__sanitizer_set_report_fd@@Base+0x8738>
   1c62c:	add	w24, w24, w0
   1c630:	add	x2, x23, #0x1
   1c634:	b	1c31c <__sanitizer_set_report_fd@@Base+0x8a4c>
   1c638:	cbz	w9, 1c768 <__sanitizer_set_report_fd@@Base+0x8e98>
   1c63c:	tbnz	w26, #31, 1c8b0 <__sanitizer_set_report_fd@@Base+0x8fe0>
   1c640:	add	x1, x25, #0xf
   1c644:	mov	x0, x25
   1c648:	and	x25, x1, #0xfffffffffffffff8
   1c64c:	ldr	x6, [x0]
   1c650:	cmp	x6, #0x0
   1c654:	cneg	x2, x6, lt  // lt = tstop
   1c658:	mov	w7, #0x0                   	// #0
   1c65c:	lsr	x6, x6, #63
   1c660:	mov	w3, #0xa                   	// #10
   1c664:	b	1c620 <__sanitizer_set_report_fd@@Base+0x8d50>
   1c668:	cbnz	w7, 1c5c0 <__sanitizer_set_report_fd@@Base+0x8cf0>
   1c66c:	cmp	w1, #0x2d
   1c670:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   1c674:	b.ls	1c814 <__sanitizer_set_report_fd@@Base+0x8f44>  // b.plast
   1c678:	cmp	w1, #0x2d
   1c67c:	cneg	w4, w4, eq  // eq = none
   1c680:	tbnz	w26, #31, 1c83c <__sanitizer_set_report_fd@@Base+0x8f6c>
   1c684:	add	x1, x25, #0xf
   1c688:	mov	x0, x25
   1c68c:	and	x25, x1, #0xfffffffffffffff8
   1c690:	ldr	x5, [x0]
   1c694:	cbz	x5, 1c860 <__sanitizer_set_report_fd@@Base+0x8f90>
   1c698:	ldrb	w3, [x5]
   1c69c:	cbz	w3, 1c998 <__sanitizer_set_report_fd@@Base+0x90c8>
   1c6a0:	cbz	w2, 1c9a4 <__sanitizer_set_report_fd@@Base+0x90d4>
   1c6a4:	mov	w6, #0x0                   	// #0
   1c6a8:	ldr	x0, [sp, #104]
   1c6ac:	b	1c6bc <__sanitizer_set_report_fd@@Base+0x8dec>
   1c6b0:	cmp	w1, w2
   1c6b4:	b.eq	1c834 <__sanitizer_set_report_fd@@Base+0x8f64>  // b.none
   1c6b8:	mov	w6, w1
   1c6bc:	cmp	x28, x0
   1c6c0:	b.ls	1c6d4 <__sanitizer_set_report_fd@@Base+0x8e04>  // b.plast
   1c6c4:	strb	w3, [x0]
   1c6c8:	ldr	x0, [sp, #104]
   1c6cc:	add	x0, x0, #0x1
   1c6d0:	str	x0, [sp, #104]
   1c6d4:	ldrb	w3, [x5, #1]!
   1c6d8:	add	w1, w6, #0x1
   1c6dc:	cbnz	w3, 1c6b0 <__sanitizer_set_report_fd@@Base+0x8de0>
   1c6e0:	mvn	w6, w6
   1c6e4:	mov	w2, w1
   1c6e8:	cmp	w4, w6
   1c6ec:	b.ge	1c740 <__sanitizer_set_report_fd@@Base+0x8e70>  // b.tcont
   1c6f0:	ldr	x0, [sp, #104]
   1c6f4:	mov	w1, w2
   1c6f8:	mov	w5, #0x20                  	// #32
   1c6fc:	nop
   1c700:	cmp	x28, x0
   1c704:	b.ls	1c718 <__sanitizer_set_report_fd@@Base+0x8e48>  // b.plast
   1c708:	strb	w5, [x0]
   1c70c:	ldr	x0, [sp, #104]
   1c710:	add	x0, x0, #0x1
   1c714:	str	x0, [sp, #104]
   1c718:	add	w1, w1, #0x1
   1c71c:	neg	w3, w1
   1c720:	cmp	w4, w3
   1c724:	b.lt	1c700 <__sanitizer_set_report_fd@@Base+0x8e30>  // b.tstop
   1c728:	mvn	w0, w2
   1c72c:	add	w2, w2, #0x1
   1c730:	cmp	w4, w0
   1c734:	sub	w4, w0, w4
   1c738:	csel	w4, w4, wzr, le
   1c73c:	add	w2, w4, w2
   1c740:	add	w24, w24, w2
   1c744:	add	x2, x23, #0x1
   1c748:	b	1c31c <__sanitizer_set_report_fd@@Base+0x8a4c>
   1c74c:	cbnz	w7, 1c5f0 <__sanitizer_set_report_fd@@Base+0x8d20>
   1c750:	tbnz	w26, #31, 1c930 <__sanitizer_set_report_fd@@Base+0x9060>
   1c754:	mov	x0, x25
   1c758:	add	x1, x25, #0xb
   1c75c:	and	x25, x1, #0xfffffffffffffff8
   1c760:	ldr	w2, [x0]
   1c764:	b	1c604 <__sanitizer_set_report_fd@@Base+0x8d34>
   1c768:	cbnz	w7, 1c63c <__sanitizer_set_report_fd@@Base+0x8d6c>
   1c76c:	tbnz	w26, #31, 1c90c <__sanitizer_set_report_fd@@Base+0x903c>
   1c770:	mov	x0, x25
   1c774:	add	x1, x25, #0xb
   1c778:	and	x25, x1, #0xfffffffffffffff8
   1c77c:	ldrsw	x6, [x0]
   1c780:	b	1c650 <__sanitizer_set_report_fd@@Base+0x8d80>
   1c784:	add	w0, w26, #0x8
   1c788:	cmp	w0, #0x0
   1c78c:	b.le	1c7fc <__sanitizer_set_report_fd@@Base+0x8f2c>
   1c790:	add	x2, x25, #0xb
   1c794:	mov	x1, x25
   1c798:	mov	w26, w0
   1c79c:	and	x25, x2, #0xfffffffffffffff8
   1c7a0:	b	1c490 <__sanitizer_set_report_fd@@Base+0x8bc0>
   1c7a4:	add	w0, w26, #0x8
   1c7a8:	cmp	w0, #0x0
   1c7ac:	b.le	1c808 <__sanitizer_set_report_fd@@Base+0x8f38>
   1c7b0:	add	x1, x25, #0xf
   1c7b4:	mov	x2, x25
   1c7b8:	mov	w26, w0
   1c7bc:	and	x25, x1, #0xfffffffffffffff8
   1c7c0:	b	1c518 <__sanitizer_set_report_fd@@Base+0x8c48>
   1c7c4:	add	w8, w27, w1
   1c7c8:	ldrb	w3, [x1, #1]!
   1c7cc:	cbnz	w3, 1c528 <__sanitizer_set_report_fd@@Base+0x8c58>
   1c7d0:	b	1c54c <__sanitizer_set_report_fd@@Base+0x8c7c>
   1c7d4:	add	x7, x23, #0x2
   1c7d8:	tbnz	w26, #31, 1c870 <__sanitizer_set_report_fd@@Base+0x8fa0>
   1c7dc:	add	x3, x25, #0xb
   1c7e0:	mov	x2, x25
   1c7e4:	and	x25, x3, #0xfffffffffffffff8
   1c7e8:	ldr	w2, [x2]
   1c7ec:	ldrb	w3, [x23, #2]
   1c7f0:	mov	x23, x7
   1c7f4:	lsr	w8, w2, #31
   1c7f8:	b	1c37c <__sanitizer_set_report_fd@@Base+0x8aac>
   1c7fc:	add	x1, x22, w26, sxtw
   1c800:	mov	w26, w0
   1c804:	b	1c490 <__sanitizer_set_report_fd@@Base+0x8bc0>
   1c808:	add	x2, x22, w26, sxtw
   1c80c:	mov	w26, w0
   1c810:	b	1c518 <__sanitizer_set_report_fd@@Base+0x8c48>
   1c814:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c818:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c81c:	add	x2, x2, #0xb48
   1c820:	add	x0, x0, #0xab0
   1c824:	mov	x4, #0x0                   	// #0
   1c828:	mov	x3, #0x0                   	// #0
   1c82c:	mov	w1, #0xc6                  	// #198
   1c830:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1c834:	neg	w6, w2
   1c838:	b	1c6e8 <__sanitizer_set_report_fd@@Base+0x8e18>
   1c83c:	add	w1, w26, #0x8
   1c840:	cmp	w1, #0x0
   1c844:	b.le	1c900 <__sanitizer_set_report_fd@@Base+0x9030>
   1c848:	mov	x0, x25
   1c84c:	add	x3, x25, #0xf
   1c850:	mov	w26, w1
   1c854:	and	x25, x3, #0xfffffffffffffff8
   1c858:	ldr	x5, [x0]
   1c85c:	cbnz	x5, 1c698 <__sanitizer_set_report_fd@@Base+0x8dc8>
   1c860:	adrp	x5, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c864:	mov	w3, #0x3c                  	// #60
   1c868:	add	x5, x5, #0xa50
   1c86c:	b	1c6a0 <__sanitizer_set_report_fd@@Base+0x8dd0>
   1c870:	add	w3, w26, #0x8
   1c874:	cmp	w3, #0x0
   1c878:	b.le	1c954 <__sanitizer_set_report_fd@@Base+0x9084>
   1c87c:	add	x8, x25, #0xb
   1c880:	mov	x2, x25
   1c884:	mov	w26, w3
   1c888:	and	x25, x8, #0xfffffffffffffff8
   1c88c:	b	1c7e8 <__sanitizer_set_report_fd@@Base+0x8f18>
   1c890:	add	w1, w26, #0x8
   1c894:	cmp	w1, #0x0
   1c898:	b.le	1c960 <__sanitizer_set_report_fd@@Base+0x9090>
   1c89c:	add	x2, x25, #0xf
   1c8a0:	mov	x0, x25
   1c8a4:	mov	w26, w1
   1c8a8:	and	x25, x2, #0xfffffffffffffff8
   1c8ac:	b	1c600 <__sanitizer_set_report_fd@@Base+0x8d30>
   1c8b0:	add	w1, w26, #0x8
   1c8b4:	cmp	w1, #0x0
   1c8b8:	b.le	1c96c <__sanitizer_set_report_fd@@Base+0x909c>
   1c8bc:	add	x2, x25, #0xf
   1c8c0:	mov	x0, x25
   1c8c4:	mov	w26, w1
   1c8c8:	and	x25, x2, #0xfffffffffffffff8
   1c8cc:	b	1c64c <__sanitizer_set_report_fd@@Base+0x8d7c>
   1c8d0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c8d4:	add	x0, x0, #0xa58
   1c8d8:	stp	x21, x22, [sp, #16]
   1c8dc:	stp	x25, x26, [sp, #48]
   1c8e0:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c8e4:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c8e8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c8ec:	add	x0, x0, #0xa60
   1c8f0:	stp	x21, x22, [sp, #16]
   1c8f4:	stp	x25, x26, [sp, #48]
   1c8f8:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c8fc:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c900:	add	x0, x22, w26, sxtw
   1c904:	mov	w26, w1
   1c908:	b	1c690 <__sanitizer_set_report_fd@@Base+0x8dc0>
   1c90c:	add	w1, w26, #0x8
   1c910:	cmp	w1, #0x0
   1c914:	b.le	1c978 <__sanitizer_set_report_fd@@Base+0x90a8>
   1c918:	mov	x0, x25
   1c91c:	add	x2, x25, #0xb
   1c920:	mov	w26, w1
   1c924:	and	x25, x2, #0xfffffffffffffff8
   1c928:	ldrsw	x6, [x0]
   1c92c:	b	1c650 <__sanitizer_set_report_fd@@Base+0x8d80>
   1c930:	add	w1, w26, #0x8
   1c934:	cmp	w1, #0x0
   1c938:	b.le	1c988 <__sanitizer_set_report_fd@@Base+0x90b8>
   1c93c:	mov	x0, x25
   1c940:	add	x2, x25, #0xb
   1c944:	and	x25, x2, #0xfffffffffffffff8
   1c948:	mov	w26, w1
   1c94c:	ldr	w2, [x0]
   1c950:	b	1c604 <__sanitizer_set_report_fd@@Base+0x8d34>
   1c954:	add	x2, x22, w26, sxtw
   1c958:	mov	w26, w3
   1c95c:	b	1c7e8 <__sanitizer_set_report_fd@@Base+0x8f18>
   1c960:	add	x0, x22, w26, sxtw
   1c964:	mov	w26, w1
   1c968:	b	1c600 <__sanitizer_set_report_fd@@Base+0x8d30>
   1c96c:	add	x0, x22, w26, sxtw
   1c970:	mov	w26, w1
   1c974:	b	1c64c <__sanitizer_set_report_fd@@Base+0x8d7c>
   1c978:	add	x0, x22, w26, sxtw
   1c97c:	mov	w26, w1
   1c980:	ldrsw	x6, [x0]
   1c984:	b	1c650 <__sanitizer_set_report_fd@@Base+0x8d80>
   1c988:	add	x0, x22, w26, sxtw
   1c98c:	mov	w26, w1
   1c990:	ldr	w2, [x0]
   1c994:	b	1c604 <__sanitizer_set_report_fd@@Base+0x8d34>
   1c998:	mov	w6, #0x0                   	// #0
   1c99c:	mov	w2, #0x0                   	// #0
   1c9a0:	b	1c6e8 <__sanitizer_set_report_fd@@Base+0x8e18>
   1c9a4:	mov	w6, #0x0                   	// #0
   1c9a8:	b	1c6e8 <__sanitizer_set_report_fd@@Base+0x8e18>
   1c9ac:	mov	w24, #0x0                   	// #0
   1c9b0:	b	1c4cc <__sanitizer_set_report_fd@@Base+0x8bfc>
   1c9b4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1c9b8:	add	x0, x0, #0xb78
   1c9bc:	stp	x21, x22, [sp, #16]
   1c9c0:	stp	x25, x26, [sp, #48]
   1c9c4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1c9c8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1c9cc:	nop
   1c9d0:	adrp	x1, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1c9d4:	str	x0, [x1, #3656]
   1c9d8:	ret
   1c9dc:	nop

000000000001c9e0 <OnPrint@@Base>:
   1c9e0:	ret
   1c9e4:	nop
   1c9e8:	sub	sp, sp, #0x100
   1c9ec:	mov	w9, #0xffffffd8            	// #-40
   1c9f0:	add	x10, sp, #0xd0
   1c9f4:	add	x11, sp, #0x100
   1c9f8:	mov	w8, #0xffffff80            	// #-128
   1c9fc:	stp	x11, x11, [sp, #48]
   1ca00:	str	x10, [sp, #64]
   1ca04:	stp	w9, w8, [sp, #72]
   1ca08:	ldp	x10, x11, [sp, #48]
   1ca0c:	str	x30, [sp]
   1ca10:	ldp	x8, x9, [sp, #64]
   1ca14:	stp	x10, x11, [sp, #16]
   1ca18:	stp	x8, x9, [sp, #32]
   1ca1c:	str	q0, [sp, #80]
   1ca20:	str	q1, [sp, #96]
   1ca24:	str	q2, [sp, #112]
   1ca28:	str	q3, [sp, #128]
   1ca2c:	str	q4, [sp, #144]
   1ca30:	str	q5, [sp, #160]
   1ca34:	str	q6, [sp, #176]
   1ca38:	str	q7, [sp, #192]
   1ca3c:	stp	x3, x4, [sp, #216]
   1ca40:	add	x3, sp, #0x10
   1ca44:	stp	x5, x6, [sp, #232]
   1ca48:	str	x7, [sp, #248]
   1ca4c:	bl	1c290 <__sanitizer_set_report_fd@@Base+0x89c0>
   1ca50:	ldr	x30, [sp]
   1ca54:	add	sp, sp, #0x100
   1ca58:	ret
   1ca5c:	nop
   1ca60:	stp	x19, x20, [sp, #-176]!
   1ca64:	and	w0, w0, #0xff
   1ca68:	mov	x19, x1
   1ca6c:	stp	x23, x24, [sp, #32]
   1ca70:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ca74:	adrp	x24, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ca78:	stp	x27, x28, [sp, #64]
   1ca7c:	mov	x27, x3
   1ca80:	add	x24, x24, #0xbc0
   1ca84:	ldr	x23, [x23, #4056]
   1ca88:	stp	x21, x22, [sp, #16]
   1ca8c:	mov	x21, x1
   1ca90:	mov	x22, x2
   1ca94:	stp	x25, x26, [sp, #48]
   1ca98:	add	x25, sp, #0x70
   1ca9c:	str	w0, [sp, #104]
   1caa0:	mov	w26, #0x0                   	// #0
   1caa4:	ldp	x2, x3, [x3]
   1caa8:	mov	w20, #0x190                 	// #400
   1caac:	ldp	x0, x1, [x27, #16]
   1cab0:	str	x30, [sp, #80]
   1cab4:	stp	x2, x3, [sp, #144]
   1cab8:	stp	x0, x1, [sp, #160]
   1cabc:	ldr	w0, [sp, #104]
   1cac0:	cbz	w0, 1cb20 <OnPrint@@Base+0x140>
   1cac4:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   1cac8:	mov	x28, x0
   1cacc:	bl	fc80 <__sancov_default_options@@Base+0x32d0>
   1cad0:	cmp	x0, #0x0
   1cad4:	ldrb	w2, [x23, #48]
   1cad8:	cset	w6, ne  // ne = any
   1cadc:	mov	x3, x0
   1cae0:	sxtw	x1, w20
   1cae4:	mov	x0, x19
   1cae8:	tst	w6, w2
   1caec:	mov	w5, #0x0                   	// #0
   1caf0:	b.ne	1cc3c <OnPrint@@Base+0x25c>  // b.any
   1caf4:	mov	w3, w28
   1caf8:	mov	x2, x24
   1cafc:	str	w5, [sp, #108]
   1cb00:	bl	1c9e8 <OnPrint@@Base+0x8>
   1cb04:	ldr	w5, [sp, #108]
   1cb08:	add	w28, w5, w0
   1cb0c:	cmp	w20, w28
   1cb10:	b.le	1cb8c <OnPrint@@Base+0x1ac>
   1cb14:	add	x0, x19, w28, sxtw
   1cb18:	sub	w1, w20, w28
   1cb1c:	b	1cb2c <OnPrint@@Base+0x14c>
   1cb20:	mov	w1, w20
   1cb24:	mov	x0, x19
   1cb28:	mov	w28, #0x0                   	// #0
   1cb2c:	ldp	x6, x7, [x27]
   1cb30:	mov	x3, x25
   1cb34:	ldp	x8, x9, [x27, #16]
   1cb38:	mov	x2, x22
   1cb3c:	stp	x6, x7, [x25]
   1cb40:	stp	x8, x9, [x25, #16]
   1cb44:	bl	1c290 <__sanitizer_set_report_fd@@Base+0x89c0>
   1cb48:	add	w0, w28, w0
   1cb4c:	cmp	w20, w0
   1cb50:	b.gt	1cbd8 <OnPrint@@Base+0x1f8>
   1cb54:	cbnz	w26, 1cbcc <OnPrint@@Base+0x1ec>
   1cb58:	ldp	x2, x3, [sp, #160]
   1cb5c:	stp	x2, x3, [x27, #16]
   1cb60:	mov	w26, #0x1                   	// #1
   1cb64:	ldp	x0, x1, [sp, #144]
   1cb68:	stp	x0, x1, [x27]
   1cb6c:	mov	w2, #0x0                   	// #0
   1cb70:	mov	w20, #0x4000                	// #16384
   1cb74:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cb78:	mov	x0, #0x4000                	// #16384
   1cb7c:	add	x1, x1, #0xb90
   1cb80:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1cb84:	mov	x19, x0
   1cb88:	b	1cabc <OnPrint@@Base+0xdc>
   1cb8c:	cbz	w26, 1cb58 <OnPrint@@Base+0x178>
   1cb90:	mov	w0, #0x3fff                	// #16383
   1cb94:	cmp	w28, w0
   1cb98:	b.gt	1cc64 <OnPrint@@Base+0x284>
   1cb9c:	ldp	x6, x7, [x27]
   1cba0:	mov	x2, x22
   1cba4:	ldp	x4, x5, [x27, #16]
   1cba8:	add	x3, sp, #0x70
   1cbac:	sub	w1, w20, w28
   1cbb0:	add	x0, x19, w28, sxtw
   1cbb4:	stp	x6, x7, [sp, #112]
   1cbb8:	stp	x4, x5, [sp, #128]
   1cbbc:	bl	1c290 <__sanitizer_set_report_fd@@Base+0x89c0>
   1cbc0:	add	w0, w28, w0
   1cbc4:	cmp	w20, w0
   1cbc8:	b.gt	1cbd8 <OnPrint@@Base+0x1f8>
   1cbcc:	mov	w1, #0x3fff                	// #16383
   1cbd0:	cmp	w0, w1
   1cbd4:	b.gt	1cc64 <OnPrint@@Base+0x284>
   1cbd8:	mov	x0, x19
   1cbdc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1cbe0:	mov	x0, x19
   1cbe4:	bl	f768 <__sancov_default_options@@Base+0x2db8>
   1cbe8:	mov	x0, x19
   1cbec:	bl	6380 <OnPrint@plt>
   1cbf0:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1cbf4:	ldr	x1, [x0, #3656]
   1cbf8:	cbz	x1, 1cc04 <OnPrint@@Base+0x224>
   1cbfc:	mov	x0, x19
   1cc00:	blr	x1
   1cc04:	mov	x0, x19
   1cc08:	bl	19fc0 <__sanitizer_set_report_fd@@Base+0x66f0>
   1cc0c:	cmp	x19, x21
   1cc10:	b.eq	1cc20 <OnPrint@@Base+0x240>  // b.none
   1cc14:	sxtw	x1, w20
   1cc18:	mov	x0, x19
   1cc1c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1cc20:	ldp	x21, x22, [sp, #16]
   1cc24:	ldp	x23, x24, [sp, #32]
   1cc28:	ldp	x25, x26, [sp, #48]
   1cc2c:	ldp	x27, x28, [sp, #64]
   1cc30:	ldr	x30, [sp, #80]
   1cc34:	ldp	x19, x20, [sp], #176
   1cc38:	ret
   1cc3c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cc40:	add	x2, x2, #0xb98
   1cc44:	bl	1c9e8 <OnPrint@@Base+0x8>
   1cc48:	mov	w5, w0
   1cc4c:	cmp	w20, w0
   1cc50:	b.le	1cc74 <OnPrint@@Base+0x294>
   1cc54:	sub	w1, w20, w0
   1cc58:	add	x0, x19, w0, sxtw
   1cc5c:	sxtw	x1, w1
   1cc60:	b	1caf4 <OnPrint@@Base+0x114>
   1cc64:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cc68:	add	x0, x0, #0xba0
   1cc6c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1cc70:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1cc74:	cbz	w26, 1cb58 <OnPrint@@Base+0x178>
   1cc78:	mov	w0, #0x3fff                	// #16383
   1cc7c:	cmp	w5, w0
   1cc80:	b.gt	1cc64 <OnPrint@@Base+0x284>
   1cc84:	sub	w1, w20, w5
   1cc88:	mov	w3, w28
   1cc8c:	add	x0, x19, w5, sxtw
   1cc90:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cc94:	sxtw	x1, w1
   1cc98:	add	x2, x2, #0xbc0
   1cc9c:	str	w5, [sp, #104]
   1cca0:	bl	1c9e8 <OnPrint@@Base+0x8>
   1cca4:	ldr	w5, [sp, #104]
   1cca8:	add	w28, w5, w0
   1ccac:	cmp	w20, w28
   1ccb0:	b.le	1cb90 <OnPrint@@Base+0x1b0>
   1ccb4:	b	1cb9c <OnPrint@@Base+0x1bc>
   1ccb8:	mov	x4, x2
   1ccbc:	sub	sp, sp, #0x1c0
   1ccc0:	mov	x2, x1
   1ccc4:	add	x3, sp, #0x10
   1ccc8:	add	x1, sp, #0x30
   1cccc:	ldp	x6, x7, [x4]
   1ccd0:	stp	x6, x7, [sp, #16]
   1ccd4:	ldp	x4, x5, [x4, #16]
   1ccd8:	str	x30, [sp]
   1ccdc:	stp	x4, x5, [sp, #32]
   1cce0:	bl	1ca60 <OnPrint@@Base+0x80>
   1cce4:	ldr	x30, [sp]
   1cce8:	add	sp, sp, #0x1c0
   1ccec:	ret
   1ccf0:	sub	sp, sp, #0x110
   1ccf4:	mov	w9, #0xffffffc8            	// #-56
   1ccf8:	add	x11, sp, #0xd0
   1ccfc:	add	x10, sp, #0x110
   1cd00:	mov	w8, #0xffffff80            	// #-128
   1cd04:	stp	x10, x10, [sp, #48]
   1cd08:	mov	x10, x0
   1cd0c:	mov	w0, #0x0                   	// #0
   1cd10:	str	x11, [sp, #64]
   1cd14:	stp	w9, w8, [sp, #72]
   1cd18:	ldp	x12, x13, [sp, #48]
   1cd1c:	str	x30, [sp]
   1cd20:	ldp	x8, x9, [sp, #64]
   1cd24:	stp	x12, x13, [sp, #16]
   1cd28:	stp	x8, x9, [sp, #32]
   1cd2c:	str	q0, [sp, #80]
   1cd30:	str	q1, [sp, #96]
   1cd34:	str	q2, [sp, #112]
   1cd38:	str	q3, [sp, #128]
   1cd3c:	str	q4, [sp, #144]
   1cd40:	str	q5, [sp, #160]
   1cd44:	str	q6, [sp, #176]
   1cd48:	str	q7, [sp, #192]
   1cd4c:	stp	x1, x2, [sp, #216]
   1cd50:	add	x2, sp, #0x10
   1cd54:	mov	x1, x10
   1cd58:	stp	x3, x4, [sp, #232]
   1cd5c:	stp	x5, x6, [sp, #248]
   1cd60:	str	x7, [sp, #264]
   1cd64:	bl	1ccb8 <OnPrint@@Base+0x2d8>
   1cd68:	ldr	x30, [sp]
   1cd6c:	add	sp, sp, #0x110
   1cd70:	ret
   1cd74:	nop
   1cd78:	sub	sp, sp, #0x110
   1cd7c:	mov	w9, #0xffffffc8            	// #-56
   1cd80:	add	x11, sp, #0xd0
   1cd84:	add	x10, sp, #0x110
   1cd88:	mov	w8, #0xffffff80            	// #-128
   1cd8c:	stp	x10, x10, [sp, #48]
   1cd90:	mov	x10, x0
   1cd94:	mov	w0, #0x1                   	// #1
   1cd98:	str	x11, [sp, #64]
   1cd9c:	stp	w9, w8, [sp, #72]
   1cda0:	ldp	x12, x13, [sp, #48]
   1cda4:	str	x30, [sp]
   1cda8:	ldp	x8, x9, [sp, #64]
   1cdac:	stp	x12, x13, [sp, #16]
   1cdb0:	stp	x8, x9, [sp, #32]
   1cdb4:	str	q0, [sp, #80]
   1cdb8:	str	q1, [sp, #96]
   1cdbc:	str	q2, [sp, #112]
   1cdc0:	str	q3, [sp, #128]
   1cdc4:	str	q4, [sp, #144]
   1cdc8:	str	q5, [sp, #160]
   1cdcc:	str	q6, [sp, #176]
   1cdd0:	str	q7, [sp, #192]
   1cdd4:	stp	x1, x2, [sp, #216]
   1cdd8:	add	x2, sp, #0x10
   1cddc:	mov	x1, x10
   1cde0:	stp	x3, x4, [sp, #232]
   1cde4:	stp	x5, x6, [sp, #248]
   1cde8:	str	x7, [sp, #264]
   1cdec:	bl	1ccb8 <OnPrint@@Base+0x2d8>
   1cdf0:	ldr	x30, [sp]
   1cdf4:	add	sp, sp, #0x110
   1cdf8:	ret
   1cdfc:	nop
   1ce00:	stp	x19, x30, [sp, #-256]!
   1ce04:	mov	x19, x0
   1ce08:	str	q0, [sp, #80]
   1ce0c:	str	q1, [sp, #96]
   1ce10:	ldr	x8, [x0, #16]
   1ce14:	str	q2, [sp, #112]
   1ce18:	ldr	x0, [x0, #24]
   1ce1c:	str	q3, [sp, #128]
   1ce20:	str	q4, [sp, #144]
   1ce24:	cmp	x0, x8
   1ce28:	str	q5, [sp, #160]
   1ce2c:	str	q6, [sp, #176]
   1ce30:	str	q7, [sp, #192]
   1ce34:	stp	x2, x3, [sp, #208]
   1ce38:	stp	x4, x5, [sp, #224]
   1ce3c:	stp	x6, x7, [sp, #240]
   1ce40:	b.cs	1ceb4 <OnPrint@@Base+0x4d4>  // b.hs, b.nlast
   1ce44:	mov	w4, #0xffffff80            	// #-128
   1ce48:	mov	w3, #0xffffffd0            	// #-48
   1ce4c:	stp	w3, w4, [sp, #72]
   1ce50:	add	x5, sp, #0xd0
   1ce54:	ldr	x4, [x19]
   1ce58:	add	x2, sp, #0x100
   1ce5c:	stp	x2, x2, [sp, #48]
   1ce60:	mov	x2, x1
   1ce64:	sub	w1, w8, w0
   1ce68:	str	x5, [sp, #64]
   1ce6c:	add	x0, x4, x0
   1ce70:	ldp	x6, x7, [sp, #48]
   1ce74:	add	x3, sp, #0x10
   1ce78:	ldp	x4, x5, [sp, #64]
   1ce7c:	stp	x6, x7, [sp, #16]
   1ce80:	stp	x4, x5, [sp, #32]
   1ce84:	bl	1c290 <__sanitizer_set_report_fd@@Base+0x89c0>
   1ce88:	ldr	x1, [x19]
   1ce8c:	ldr	x0, [x19, #24]
   1ce90:	add	x0, x1, x0
   1ce94:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   1ce98:	ldp	x4, x3, [x19, #16]
   1ce9c:	add	x3, x0, x3
   1cea0:	str	x3, [x19, #24]
   1cea4:	cmp	x3, x4
   1cea8:	b.cs	1ced4 <OnPrint@@Base+0x4f4>  // b.hs, b.nlast
   1ceac:	ldp	x19, x30, [sp], #256
   1ceb0:	ret
   1ceb4:	mov	x3, x0
   1ceb8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cebc:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cec0:	mov	x4, x8
   1cec4:	add	x2, x2, #0xbc8
   1cec8:	add	x0, x0, #0xab0
   1cecc:	mov	w1, #0x15c                 	// #348
   1ced0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ced4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1ced8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1cedc:	add	x2, x2, #0xbc8
   1cee0:	add	x0, x0, #0xab0
   1cee4:	mov	w1, #0x162                 	// #354
   1cee8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ceec:	nop
   1cef0:	and	w0, w0, #0xff
   1cef4:	sub	w0, w0, #0x30
   1cef8:	and	w0, w0, #0xff
   1cefc:	cmp	w0, #0xa
   1cf00:	cset	w0, cc  // cc = lo, ul, last
   1cf04:	ret
   1cf08:	ldr	x2, [x0]
   1cf0c:	mov	x3, x0
   1cf10:	ldrb	w1, [x2]
   1cf14:	sub	w1, w1, #0x30
   1cf18:	and	w0, w1, #0xff
   1cf1c:	cmp	w0, #0x9
   1cf20:	mov	x0, #0x0                   	// #0
   1cf24:	b.ls	1cf2c <OnPrint@@Base+0x54c>  // b.plast
   1cf28:	ret
   1cf2c:	add	x2, x2, #0x1
   1cf30:	str	x2, [x3]
   1cf34:	sxtw	x4, w1
   1cf38:	add	x0, x0, x0, lsl #2
   1cf3c:	ldrb	w1, [x2]
   1cf40:	add	x0, x4, x0, lsl #1
   1cf44:	sub	w1, w1, #0x30
   1cf48:	and	w4, w1, #0xff
   1cf4c:	cmp	w4, #0x9
   1cf50:	b.ls	1cf2c <OnPrint@@Base+0x54c>  // b.plast
   1cf54:	ret
   1cf58:	and	w1, w0, #0xff
   1cf5c:	sub	w0, w1, #0x30
   1cf60:	and	w0, w0, #0xff
   1cf64:	cmp	w0, #0x9
   1cf68:	b.ls	1cf94 <OnPrint@@Base+0x5b4>  // b.plast
   1cf6c:	sub	w2, w1, #0x61
   1cf70:	mov	w0, #0x1                   	// #1
   1cf74:	and	w2, w2, #0xff
   1cf78:	cmp	w2, #0x5
   1cf7c:	b.ls	1cf90 <OnPrint@@Base+0x5b0>  // b.plast
   1cf80:	sub	w1, w1, #0x41
   1cf84:	and	w1, w1, #0xff
   1cf88:	cmp	w1, #0x5
   1cf8c:	cset	w0, ls  // ls = plast
   1cf90:	ret
   1cf94:	mov	w0, #0x1                   	// #1
   1cf98:	ret
   1cf9c:	nop
   1cfa0:	mov	x4, x0
   1cfa4:	mov	x0, #0x0                   	// #0
   1cfa8:	ldr	x3, [x4]
   1cfac:	b	1cfd0 <OnPrint@@Base+0x5f0>
   1cfb0:	cmp	w6, #0x5
   1cfb4:	b.ls	1d000 <OnPrint@@Base+0x620>  // b.plast
   1cfb8:	cmp	w5, #0x5
   1cfbc:	b.hi	1d008 <OnPrint@@Base+0x628>  // b.pmore
   1cfc0:	sxtw	x1, w1
   1cfc4:	add	x3, x3, #0x1
   1cfc8:	add	x0, x1, x0, lsl #4
   1cfcc:	str	x3, [x4]
   1cfd0:	ldrb	w2, [x3]
   1cfd4:	sub	w7, w2, #0x30
   1cfd8:	sub	w6, w2, #0x61
   1cfdc:	sub	w5, w2, #0x41
   1cfe0:	and	w8, w7, #0xff
   1cfe4:	sub	w1, w2, #0x37
   1cfe8:	and	w6, w6, #0xff
   1cfec:	and	w5, w5, #0xff
   1cff0:	cmp	w8, #0x9
   1cff4:	b.hi	1cfb0 <OnPrint@@Base+0x5d0>  // b.pmore
   1cff8:	mov	w1, w7
   1cffc:	b	1cfc0 <OnPrint@@Base+0x5e0>
   1d000:	sub	w1, w2, #0x57
   1d004:	b	1cfc0 <OnPrint@@Base+0x5e0>
   1d008:	ret
   1d00c:	nop
   1d010:	mov	x2, x0
   1d014:	mov	x0, x1
   1d018:	ldr	x1, [x2, #72]
   1d01c:	cbnz	x1, 1d03c <OnPrint@@Base+0x65c>
   1d020:	ldr	x1, [x2]
   1d024:	mov	x5, #0x0                   	// #0
   1d028:	ldr	x3, [x2, #40]
   1d02c:	ldr	x2, [x2, #8]
   1d030:	ubfx	w4, w3, #1, #1
   1d034:	ubfx	w3, w3, #2, #1
   1d038:	b	f930 <__sancov_default_options@@Base+0x2f80>
   1d03c:	str	x30, [sp, #-16]!
   1d040:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d044:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d048:	add	x2, x2, #0xbe8
   1d04c:	add	x0, x0, #0xc00
   1d050:	mov	x4, #0x0                   	// #0
   1d054:	mov	x3, #0x0                   	// #0
   1d058:	mov	w1, #0x43                  	// #67
   1d05c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d060:	stp	x19, x20, [sp, #-64]!
   1d064:	tst	w1, #0xff
   1d068:	mov	x19, x0
   1d06c:	str	x30, [sp, #16]
   1d070:	b.ne	1d09c <OnPrint@@Base+0x6bc>  // b.any
   1d074:	bl	1d8c8 <OnPrint@@Base+0xee8>
   1d078:	ldr	x0, [x19, #8]
   1d07c:	cbz	x0, 1d114 <OnPrint@@Base+0x734>
   1d080:	ldr	x0, [x19, #16]
   1d084:	cbz	x0, 1d198 <OnPrint@@Base+0x7b8>
   1d088:	ldr	x0, [x19]
   1d08c:	ldr	x30, [sp, #16]
   1d090:	str	x0, [x19, #24]
   1d094:	ldp	x19, x20, [sp], #64
   1d098:	ret
   1d09c:	add	x0, sp, #0x28
   1d0a0:	bl	1d8c8 <OnPrint@@Base+0xee8>
   1d0a4:	ldr	x0, [sp, #48]
   1d0a8:	cbnz	x0, 1d134 <OnPrint@@Base+0x754>
   1d0ac:	mov	x0, x19
   1d0b0:	bl	1d8c8 <OnPrint@@Base+0xee8>
   1d0b4:	ldr	x0, [x19, #8]
   1d0b8:	cbnz	x0, 1d080 <OnPrint@@Base+0x6a0>
   1d0bc:	adrp	x20, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1d0c0:	add	x0, x20, #0xe50
   1d0c4:	mov	w2, #0x1                   	// #1
   1d0c8:	ldxrb	w1, [x0]
   1d0cc:	stxrb	w3, w2, [x0]
   1d0d0:	cbnz	w3, 1d0c8 <OnPrint@@Base+0x6e8>
   1d0d4:	dmb	ish
   1d0d8:	tst	w1, #0xff
   1d0dc:	b.eq	1d0e4 <OnPrint@@Base+0x704>  // b.none
   1d0e0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1d0e4:	add	x0, x20, #0xe50
   1d0e8:	add	x2, x0, #0x8
   1d0ec:	ldr	x1, [x0, #8]
   1d0f0:	cbz	x1, 1d104 <OnPrint@@Base+0x724>
   1d0f4:	ldp	x0, x1, [x0, #8]
   1d0f8:	stp	x0, x1, [x19]
   1d0fc:	ldr	x0, [x2, #16]
   1d100:	str	x0, [x19, #16]
   1d104:	dmb	ish
   1d108:	strb	wzr, [x20, #3664]
   1d10c:	ldr	x0, [x19, #8]
   1d110:	cbnz	x0, 1d080 <OnPrint@@Base+0x6a0>
   1d114:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d118:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d11c:	add	x2, x2, #0xc48
   1d120:	add	x0, x0, #0xc00
   1d124:	mov	x4, #0x0                   	// #0
   1d128:	mov	x3, #0x0                   	// #0
   1d12c:	mov	w1, #0x51                  	// #81
   1d130:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d134:	adrp	x20, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1d138:	add	x0, x20, #0xe50
   1d13c:	mov	w2, #0x1                   	// #1
   1d140:	ldxrb	w1, [x0]
   1d144:	stxrb	w3, w2, [x0]
   1d148:	cbnz	w3, 1d140 <OnPrint@@Base+0x760>
   1d14c:	dmb	ish
   1d150:	tst	w1, #0xff
   1d154:	b.eq	1d15c <OnPrint@@Base+0x77c>  // b.none
   1d158:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1d15c:	add	x0, x20, #0xe50
   1d160:	ldr	x1, [x0, #16]
   1d164:	cbnz	x1, 1d1b8 <OnPrint@@Base+0x7d8>
   1d168:	add	x0, x20, #0xe50
   1d16c:	ldp	x2, x3, [sp, #40]
   1d170:	ldr	x1, [sp, #56]
   1d174:	stp	x2, x3, [x0, #8]
   1d178:	str	x1, [x0, #24]
   1d17c:	dmb	ish
   1d180:	strb	wzr, [x20, #3664]
   1d184:	mov	x0, x19
   1d188:	bl	1d8c8 <OnPrint@@Base+0xee8>
   1d18c:	ldr	x0, [x19, #8]
   1d190:	cbnz	x0, 1d080 <OnPrint@@Base+0x6a0>
   1d194:	b	1d0bc <OnPrint@@Base+0x6dc>
   1d198:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d19c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d1a0:	add	x2, x2, #0xc78
   1d1a4:	add	x0, x0, #0xc00
   1d1a8:	mov	x4, #0x0                   	// #0
   1d1ac:	mov	x3, #0x0                   	// #0
   1d1b0:	mov	w1, #0x52                  	// #82
   1d1b4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d1b8:	ldr	x0, [x0, #8]
   1d1bc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d1c0:	b	1d168 <OnPrint@@Base+0x788>
   1d1c4:	nop
   1d1c8:	adrp	x2, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1d1cc:	mov	x1, x0
   1d1d0:	ldr	x0, [x0]
   1d1d4:	ldr	x2, [x2, #3672]
   1d1d8:	cmp	x0, x2
   1d1dc:	b.eq	1d1e8 <OnPrint@@Base+0x808>  // b.none
   1d1e0:	ldr	x1, [x1, #8]
   1d1e4:	b	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d1e8:	ret
   1d1ec:	nop
   1d1f0:	ldr	x1, [x0]
   1d1f4:	str	x1, [x0, #24]
   1d1f8:	ret
   1d1fc:	nop
   1d200:	stp	x19, x30, [sp, #-48]!
   1d204:	add	x0, sp, #0x18
   1d208:	bl	1d8c8 <OnPrint@@Base+0xee8>
   1d20c:	ldr	x0, [sp, #32]
   1d210:	cbnz	x0, 1d21c <OnPrint@@Base+0x83c>
   1d214:	ldp	x19, x30, [sp], #48
   1d218:	ret
   1d21c:	adrp	x19, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1d220:	add	x0, x19, #0xe50
   1d224:	mov	w2, #0x1                   	// #1
   1d228:	ldxrb	w1, [x0]
   1d22c:	stxrb	w3, w2, [x0]
   1d230:	cbnz	w3, 1d228 <OnPrint@@Base+0x848>
   1d234:	dmb	ish
   1d238:	tst	w1, #0xff
   1d23c:	b.eq	1d244 <OnPrint@@Base+0x864>  // b.none
   1d240:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1d244:	add	x0, x19, #0xe50
   1d248:	ldr	x1, [x0, #16]
   1d24c:	cbnz	x1, 1d274 <OnPrint@@Base+0x894>
   1d250:	add	x0, x19, #0xe50
   1d254:	ldp	x2, x3, [sp, #24]
   1d258:	ldr	x1, [sp, #40]
   1d25c:	stp	x2, x3, [x0, #8]
   1d260:	str	x1, [x0, #24]
   1d264:	dmb	ish
   1d268:	strb	wzr, [x19, #3664]
   1d26c:	ldp	x19, x30, [sp], #48
   1d270:	ret
   1d274:	ldr	x0, [x0, #8]
   1d278:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d27c:	b	1d250 <OnPrint@@Base+0x870>
   1d280:	stp	x19, x20, [sp, #-32]!
   1d284:	mov	x19, x0
   1d288:	adrp	x20, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1d28c:	add	x0, x20, #0xe50
   1d290:	mov	w2, #0x1                   	// #1
   1d294:	str	x30, [sp, #16]
   1d298:	ldxrb	w1, [x0]
   1d29c:	stxrb	w3, w2, [x0]
   1d2a0:	cbnz	w3, 1d298 <OnPrint@@Base+0x8b8>
   1d2a4:	dmb	ish
   1d2a8:	tst	w1, #0xff
   1d2ac:	b.eq	1d2b4 <OnPrint@@Base+0x8d4>  // b.none
   1d2b0:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1d2b4:	add	x0, x20, #0xe50
   1d2b8:	add	x2, x0, #0x8
   1d2bc:	ldr	x1, [x0, #8]
   1d2c0:	cbz	x1, 1d2d4 <OnPrint@@Base+0x8f4>
   1d2c4:	ldp	x0, x1, [x0, #8]
   1d2c8:	stp	x0, x1, [x19]
   1d2cc:	ldr	x0, [x2, #16]
   1d2d0:	str	x0, [x19, #16]
   1d2d4:	dmb	ish
   1d2d8:	strb	wzr, [x20, #3664]
   1d2dc:	ldr	x30, [sp, #16]
   1d2e0:	ldp	x19, x20, [sp], #32
   1d2e4:	ret
   1d2e8:	stp	x19, x20, [sp, #-272]!
   1d2ec:	mov	x19, x1
   1d2f0:	stp	x21, x22, [sp, #16]
   1d2f4:	mov	x21, x0
   1d2f8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1d2fc:	stp	x23, x24, [sp, #32]
   1d300:	ldr	x20, [x0, #4016]
   1d304:	stp	x25, x26, [sp, #48]
   1d308:	stp	x27, x28, [sp, #64]
   1d30c:	ldr	x0, [x21]
   1d310:	str	x30, [sp, #80]
   1d314:	str	x0, [x21, #24]
   1d318:	ldr	x0, [x20]
   1d31c:	cbz	x0, 1d4b4 <OnPrint@@Base+0xad4>
   1d320:	sub	x20, x0, #0x1
   1d324:	ands	x20, x20, x0
   1d328:	b.ne	1d618 <OnPrint@@Base+0xc38>  // b.any
   1d32c:	add	x24, x0, #0xfff
   1d330:	neg	x0, x0
   1d334:	and	x24, x24, x0
   1d338:	mov	w2, #0x0                   	// #0
   1d33c:	mov	x0, x24
   1d340:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d344:	add	x1, x1, #0x988
   1d348:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1d34c:	mov	x2, #0x0                   	// #0
   1d350:	mov	x1, #0x0                   	// #0
   1d354:	mov	x23, x0
   1d358:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1d35c:	mov	x1, #0x0                   	// #0
   1d360:	mov	x0, #0x0                   	// #0
   1d364:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d368:	cmp	x24, #0xfff
   1d36c:	b.ls	1d57c <OnPrint@@Base+0xb9c>  // b.plast
   1d370:	mov	x2, #0x1000                	// #4096
   1d374:	mov	w1, #0x0                   	// #0
   1d378:	mov	x0, x23
   1d37c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1d380:	strb	wzr, [x23]
   1d384:	mov	x0, #0x1000                	// #4096
   1d388:	add	x22, sp, #0x70
   1d38c:	add	x25, sp, #0xc0
   1d390:	mov	x1, x25
   1d394:	add	x27, x22, #0x1c
   1d398:	stp	x23, x0, [sp, #216]
   1d39c:	mov	x0, x21
   1d3a0:	str	xzr, [sp, #264]
   1d3a4:	bl	1d908 <OnPrint@@Base+0xf28>
   1d3a8:	tst	w0, #0xff
   1d3ac:	b.eq	1d48c <OnPrint@@Base+0xaac>  // b.none
   1d3b0:	ldr	x28, [sp, #216]
   1d3b4:	ldrb	w0, [x28]
   1d3b8:	cbz	w0, 1d474 <OnPrint@@Base+0xa94>
   1d3bc:	ldr	x3, [sp, #192]
   1d3c0:	cmp	x20, #0x0
   1d3c4:	ldr	x0, [sp, #208]
   1d3c8:	csel	x3, x3, xzr, ne  // ne = any
   1d3cc:	mov	x2, #0x10                  	// #16
   1d3d0:	mov	w1, #0x0                   	// #0
   1d3d4:	sub	x26, x3, x0
   1d3d8:	mov	x0, x27
   1d3dc:	str	xzr, [sp, #112]
   1d3e0:	stp	xzr, xzr, [sp, #120]
   1d3e4:	str	wzr, [sp, #136]
   1d3e8:	strb	wzr, [sp, #156]
   1d3ec:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1d3f0:	mov	x0, x22
   1d3f4:	mov	x2, x26
   1d3f8:	mov	x1, x28
   1d3fc:	str	xzr, [sp, #160]
   1d400:	stp	xzr, xzr, [sp, #168]
   1d404:	bl	f898 <__sancov_default_options@@Base+0x2ee8>
   1d408:	ldr	x0, [sp, #264]
   1d40c:	cbnz	x0, 1d5e0 <OnPrint@@Base+0xc00>
   1d410:	ldp	x1, x2, [sp, #192]
   1d414:	mov	x0, x22
   1d418:	ldr	x3, [sp, #232]
   1d41c:	mov	x5, #0x0                   	// #0
   1d420:	ubfx	w4, w3, #1, #1
   1d424:	ubfx	w3, w3, #2, #1
   1d428:	bl	f930 <__sancov_default_options@@Base+0x2f80>
   1d42c:	ldp	x4, x3, [x19, #8]
   1d430:	mov	x0, #0xe38f                	// #58255
   1d434:	movk	x0, #0x8e38, lsl #16
   1d438:	movk	x0, #0x38e3, lsl #32
   1d43c:	movk	x0, #0xe38e, lsl #48
   1d440:	umulh	x4, x4, x0
   1d444:	lsr	x4, x4, #6
   1d448:	cmp	x3, x4
   1d44c:	b.hi	1d600 <OnPrint@@Base+0xc20>  // b.pmore
   1d450:	add	x1, x3, #0x1
   1d454:	b.eq	1d4c0 <OnPrint@@Base+0xae0>  // b.none
   1d458:	ldr	x5, [x19]
   1d45c:	add	x3, x3, x3, lsl #3
   1d460:	str	x1, [x19, #16]
   1d464:	mov	x2, #0x48                  	// #72
   1d468:	add	x0, x5, x3, lsl #3
   1d46c:	mov	x1, x22
   1d470:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1d474:	mov	x1, x25
   1d478:	mov	x0, x21
   1d47c:	add	x20, x20, #0x1
   1d480:	bl	1d908 <OnPrint@@Base+0xf28>
   1d484:	tst	w0, #0xff
   1d488:	b.ne	1d3b0 <OnPrint@@Base+0x9d0>  // b.any
   1d48c:	mov	x1, x24
   1d490:	mov	x0, x23
   1d494:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d498:	ldp	x21, x22, [sp, #16]
   1d49c:	ldp	x23, x24, [sp, #32]
   1d4a0:	ldp	x25, x26, [sp, #48]
   1d4a4:	ldp	x27, x28, [sp, #64]
   1d4a8:	ldr	x30, [sp, #80]
   1d4ac:	ldp	x19, x20, [sp], #272
   1d4b0:	ret
   1d4b4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1d4b8:	str	x0, [x20]
   1d4bc:	b	1d320 <OnPrint@@Base+0x940>
   1d4c0:	tst	x3, x1
   1d4c4:	b.eq	1d500 <OnPrint@@Base+0xb20>  // b.none
   1d4c8:	clz	x2, x1
   1d4cc:	mov	w0, #0x3f                  	// #63
   1d4d0:	sub	w0, w0, w2
   1d4d4:	mov	x2, #0x1                   	// #1
   1d4d8:	add	w4, w0, #0x1
   1d4dc:	lsl	x4, x2, x4
   1d4e0:	cmp	x4, x1
   1d4e4:	b.ls	1d660 <OnPrint@@Base+0xc80>  // b.plast
   1d4e8:	lsl	x0, x2, x0
   1d4ec:	cmp	x0, x1
   1d4f0:	b.cs	1d67c <OnPrint@@Base+0xc9c>  // b.hs, b.nlast
   1d4f4:	cmp	x3, x4
   1d4f8:	b.hi	1d648 <OnPrint@@Base+0xc68>  // b.pmore
   1d4fc:	mov	x1, x4
   1d500:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1d504:	add	x1, x1, x1, lsl #3
   1d508:	ldr	x2, [x0, #4016]
   1d50c:	lsl	x1, x1, #3
   1d510:	ldr	x0, [x2]
   1d514:	cbz	x0, 1d628 <OnPrint@@Base+0xc48>
   1d518:	sub	x4, x0, #0x1
   1d51c:	tst	x0, x4
   1d520:	b.ne	1d618 <OnPrint@@Base+0xc38>  // b.any
   1d524:	add	x1, x1, x4
   1d528:	neg	x0, x0
   1d52c:	and	x4, x1, x0
   1d530:	mov	w2, #0x0                   	// #0
   1d534:	mov	x0, x4
   1d538:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d53c:	add	x1, x1, #0x988
   1d540:	str	x4, [sp, #104]
   1d544:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1d548:	str	x0, [sp, #96]
   1d54c:	ldr	x2, [x19, #16]
   1d550:	ldr	x1, [x19]
   1d554:	add	x2, x2, x2, lsl #3
   1d558:	lsl	x2, x2, #3
   1d55c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1d560:	ldp	x0, x1, [x19]
   1d564:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d568:	ldr	x3, [x19, #16]
   1d56c:	ldp	x5, x4, [sp, #96]
   1d570:	add	x1, x3, #0x1
   1d574:	stp	x5, x4, [x19]
   1d578:	b	1d45c <OnPrint@@Base+0xa7c>
   1d57c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1d580:	ldr	x22, [x0, #4016]
   1d584:	ldr	x0, [x22]
   1d588:	cbz	x0, 1d63c <OnPrint@@Base+0xc5c>
   1d58c:	sub	x1, x0, #0x1
   1d590:	tst	x1, x0
   1d594:	b.ne	1d618 <OnPrint@@Base+0xc38>  // b.any
   1d598:	add	x22, x0, #0xfff
   1d59c:	neg	x0, x0
   1d5a0:	and	x22, x22, x0
   1d5a4:	mov	w2, #0x0                   	// #0
   1d5a8:	mov	x0, x22
   1d5ac:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d5b0:	add	x1, x1, #0x988
   1d5b4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1d5b8:	mov	x2, #0x0                   	// #0
   1d5bc:	mov	x25, x0
   1d5c0:	mov	x1, x23
   1d5c4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1d5c8:	mov	x1, x24
   1d5cc:	mov	x0, x23
   1d5d0:	mov	x24, x22
   1d5d4:	mov	x23, x25
   1d5d8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d5dc:	b	1d370 <OnPrint@@Base+0x990>
   1d5e0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d5e4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d5e8:	add	x2, x2, #0xbe8
   1d5ec:	add	x0, x0, #0xc00
   1d5f0:	mov	x4, #0x0                   	// #0
   1d5f4:	mov	x3, #0x0                   	// #0
   1d5f8:	mov	w1, #0x43                  	// #67
   1d5fc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d600:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1d604:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d608:	add	x2, x2, #0xce0
   1d60c:	add	x0, x0, #0x9b8
   1d610:	mov	w1, #0x1be                 	// #446
   1d614:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d618:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d61c:	add	x0, x0, #0x970
   1d620:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1d624:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1d628:	stp	x1, x2, [sp, #96]
   1d62c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1d630:	ldp	x1, x2, [sp, #96]
   1d634:	str	x0, [x2]
   1d638:	b	1d518 <OnPrint@@Base+0xb38>
   1d63c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1d640:	str	x0, [x22]
   1d644:	b	1d58c <OnPrint@@Base+0xbac>
   1d648:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1d64c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d650:	add	x2, x2, #0xd58
   1d654:	add	x0, x0, #0x9b8
   1d658:	mov	w1, #0x1fd                 	// #509
   1d65c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d660:	mov	x3, x1
   1d664:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1d668:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d66c:	add	x2, x2, #0xd10
   1d670:	add	x0, x0, #0x9b8
   1d674:	mov	w1, #0x17b                 	// #379
   1d678:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d67c:	mov	x4, x0
   1d680:	mov	x3, x1
   1d684:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1d688:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1d68c:	add	x2, x2, #0xd38
   1d690:	add	x0, x0, #0x9b8
   1d694:	mov	w1, #0x17c                 	// #380
   1d698:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1d69c:	nop
   1d6a0:	stp	x19, x20, [sp, #-112]!
   1d6a4:	mov	x5, #0x0                   	// #0
   1d6a8:	mov	x4, #0x4000000             	// #67108864
   1d6ac:	add	x3, sp, #0x68
   1d6b0:	stp	x21, x22, [sp, #16]
   1d6b4:	mov	x21, x0
   1d6b8:	mov	x22, x1
   1d6bc:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d6c0:	add	x1, sp, #0x58
   1d6c4:	add	x0, x0, #0xca0
   1d6c8:	stp	x23, x24, [sp, #32]
   1d6cc:	mov	x23, x2
   1d6d0:	add	x2, sp, #0x60
   1d6d4:	str	x30, [sp, #64]
   1d6d8:	stp	xzr, xzr, [sp, #88]
   1d6dc:	str	xzr, [sp, #104]
   1d6e0:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   1d6e4:	tst	w0, #0xff
   1d6e8:	b.eq	1d7ec <OnPrint@@Base+0xe0c>  // b.none
   1d6ec:	ldr	x20, [sp, #88]
   1d6f0:	ldr	x6, [sp, #104]
   1d6f4:	add	x0, x20, x6
   1d6f8:	cmp	x20, x0
   1d6fc:	b.cs	1d8c0 <OnPrint@@Base+0xee0>  // b.hs, b.nlast
   1d700:	adrp	x24, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d704:	mov	x0, x20
   1d708:	add	x24, x24, #0xcb8
   1d70c:	stp	x25, x26, [sp, #48]
   1d710:	mov	w26, #0x0                   	// #0
   1d714:	mov	x25, #0x0                   	// #0
   1d718:	ldrb	w1, [x20]
   1d71c:	sub	w3, w1, #0x30
   1d720:	and	w2, w3, #0xff
   1d724:	cmp	w2, #0x9
   1d728:	b.ls	1d740 <OnPrint@@Base+0xd60>  // b.plast
   1d72c:	and	w2, w1, #0xffffffdf
   1d730:	sub	w2, w2, #0x41
   1d734:	and	w2, w2, #0xff
   1d738:	cmp	w2, #0x5
   1d73c:	b.hi	1d800 <OnPrint@@Base+0xe20>  // b.pmore
   1d740:	mov	x25, #0x0                   	// #0
   1d744:	b	1d75c <OnPrint@@Base+0xd7c>
   1d748:	sub	w3, w1, #0x37
   1d74c:	ldrb	w1, [x20, #1]!
   1d750:	sxtw	x3, w3
   1d754:	add	x25, x3, x25, lsl #4
   1d758:	sub	w3, w1, #0x30
   1d75c:	sub	w2, w1, #0x61
   1d760:	sub	w4, w1, #0x41
   1d764:	and	w5, w3, #0xff
   1d768:	and	w2, w2, #0xff
   1d76c:	and	w4, w4, #0xff
   1d770:	cmp	w5, #0x9
   1d774:	b.ls	1d74c <OnPrint@@Base+0xd6c>  // b.plast
   1d778:	sub	w3, w1, #0x57
   1d77c:	cmp	w2, #0x5
   1d780:	b.ls	1d74c <OnPrint@@Base+0xd6c>  // b.plast
   1d784:	cmp	w4, #0x5
   1d788:	b.ls	1d748 <OnPrint@@Base+0xd68>  // b.plast
   1d78c:	cmp	w1, #0x2f
   1d790:	cset	w26, eq  // eq = none
   1d794:	cmp	w26, #0x0
   1d798:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1d79c:	b.ls	1d7b8 <OnPrint@@Base+0xdd8>  // b.plast
   1d7a0:	ldrb	w1, [x20, #1]!
   1d7a4:	cmp	w1, #0x2f
   1d7a8:	cset	w26, eq  // eq = none
   1d7ac:	cmp	w26, #0x0
   1d7b0:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1d7b4:	b.hi	1d7a0 <OnPrint@@Base+0xdc0>  // b.pmore
   1d7b8:	add	x19, x20, #0x1
   1d7bc:	nop
   1d7c0:	ldurb	w3, [x19, #-1]
   1d7c4:	mov	x20, x19
   1d7c8:	add	x19, x19, #0x1
   1d7cc:	cmp	w3, #0xa
   1d7d0:	b.ne	1d7c0 <OnPrint@@Base+0xde0>  // b.any
   1d7d4:	add	x1, x0, x6
   1d7d8:	cmp	x20, x1
   1d7dc:	b.cc	1d718 <OnPrint@@Base+0xd38>  // b.lo, b.ul, b.last
   1d7e0:	ldp	x25, x26, [sp, #48]
   1d7e4:	ldr	x1, [sp, #96]
   1d7e8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1d7ec:	ldp	x21, x22, [sp, #16]
   1d7f0:	ldp	x23, x24, [sp, #32]
   1d7f4:	ldr	x30, [sp, #64]
   1d7f8:	ldp	x19, x20, [sp], #112
   1d7fc:	ret
   1d800:	mov	x1, x24
   1d804:	mov	x0, x20
   1d808:	mov	x2, #0x4                   	// #4
   1d80c:	bl	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
   1d810:	cbz	w0, 1d828 <OnPrint@@Base+0xe48>
   1d814:	add	x19, x20, #0x1
   1d818:	ldr	x0, [sp, #88]
   1d81c:	ldr	x6, [sp, #104]
   1d820:	b	1d7c0 <OnPrint@@Base+0xde0>
   1d824:	add	x20, x20, #0x1
   1d828:	ldrb	w0, [x20]
   1d82c:	sub	w0, w0, #0x30
   1d830:	and	w0, w0, #0xff
   1d834:	cmp	w0, #0x9
   1d838:	b.hi	1d824 <OnPrint@@Base+0xe44>  // b.pmore
   1d83c:	mov	x19, x20
   1d840:	ldrb	w2, [x19], #1
   1d844:	sub	w0, w2, #0x30
   1d848:	and	w1, w0, #0xff
   1d84c:	cmp	w1, #0x9
   1d850:	mov	x1, #0x0                   	// #0
   1d854:	b.ls	1d87c <OnPrint@@Base+0xe9c>  // b.plast
   1d858:	mov	x0, x25
   1d85c:	lsl	x1, x1, #10
   1d860:	mov	x4, x23
   1d864:	mov	x3, x22
   1d868:	mov	w2, w26
   1d86c:	blr	x21
   1d870:	ldr	x0, [sp, #88]
   1d874:	ldr	x6, [sp, #104]
   1d878:	b	1d7c0 <OnPrint@@Base+0xde0>
   1d87c:	ldrb	w2, [x19], #1
   1d880:	sxtw	x3, w0
   1d884:	add	x1, x1, x1, lsl #2
   1d888:	sub	w0, w2, #0x30
   1d88c:	and	w2, w0, #0xff
   1d890:	add	x1, x3, x1, lsl #1
   1d894:	cmp	w2, #0x9
   1d898:	b.hi	1d858 <OnPrint@@Base+0xe78>  // b.pmore
   1d89c:	ldrb	w2, [x19], #1
   1d8a0:	sxtw	x3, w0
   1d8a4:	add	x1, x1, x1, lsl #2
   1d8a8:	sub	w0, w2, #0x30
   1d8ac:	and	w2, w0, #0xff
   1d8b0:	add	x1, x3, x1, lsl #1
   1d8b4:	cmp	w2, #0x9
   1d8b8:	b.hi	1d858 <OnPrint@@Base+0xe78>  // b.pmore
   1d8bc:	b	1d87c <OnPrint@@Base+0xe9c>
   1d8c0:	mov	x0, x20
   1d8c4:	b	1d7e4 <OnPrint@@Base+0xe04>
   1d8c8:	stp	x19, x30, [sp, #-16]!
   1d8cc:	adrp	x1, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1d8d0:	mov	x19, x0
   1d8d4:	add	x3, x19, #0x10
   1d8d8:	add	x0, x1, #0xcc0
   1d8dc:	add	x2, x19, #0x8
   1d8e0:	mov	x1, x19
   1d8e4:	mov	x5, #0x0                   	// #0
   1d8e8:	mov	x4, #0x4000000             	// #67108864
   1d8ec:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   1d8f0:	tst	w0, #0xff
   1d8f4:	b.ne	1d900 <OnPrint@@Base+0xf20>  // b.any
   1d8f8:	str	xzr, [x19]
   1d8fc:	stp	xzr, xzr, [x19, #8]
   1d900:	ldp	x19, x30, [sp], #16
   1d904:	ret
   1d908:	stp	x19, x20, [sp, #-64]!
   1d90c:	mov	x19, x0
   1d910:	mov	x20, x1
   1d914:	stp	x21, x22, [sp, #16]
   1d918:	ldr	x22, [x0]
   1d91c:	ldp	x1, x0, [x0, #16]
   1d920:	str	x30, [sp, #56]
   1d924:	add	x22, x22, x1
   1d928:	cmp	x0, x22
   1d92c:	b.cc	1d948 <OnPrint@@Base+0xf68>  // b.lo, b.ul, b.last
   1d930:	mov	w22, #0x0                   	// #0
   1d934:	mov	w0, w22
   1d938:	ldp	x21, x22, [sp, #16]
   1d93c:	ldr	x30, [sp, #56]
   1d940:	ldp	x19, x20, [sp], #64
   1d944:	ret
   1d948:	sub	x2, x22, x0
   1d94c:	mov	w1, #0xa                   	// #10
   1d950:	stp	x23, x24, [sp, #32]
   1d954:	add	x23, x19, #0x18
   1d958:	str	x25, [sp, #48]
   1d95c:	bl	15588 <__sanitizer_set_report_fd@@Base+0x1cb8>
   1d960:	mov	x21, x0
   1d964:	mov	x0, x23
   1d968:	cmp	x21, #0x0
   1d96c:	csel	x21, x21, x22, ne  // ne = any
   1d970:	bl	1cfa0 <OnPrint@@Base+0x5c0>
   1d974:	ldr	x1, [x19, #24]
   1d978:	str	x0, [x20]
   1d97c:	add	x0, x1, #0x1
   1d980:	str	x0, [x19, #24]
   1d984:	ldrb	w22, [x1]
   1d988:	cmp	x22, #0x2d
   1d98c:	b.ne	1dbf4 <OnPrint@@Base+0x1214>  // b.any
   1d990:	mov	x0, x23
   1d994:	bl	1cfa0 <OnPrint@@Base+0x5c0>
   1d998:	ldr	x2, [x19, #24]
   1d99c:	str	x0, [x20, #8]
   1d9a0:	add	x0, x2, #0x1
   1d9a4:	str	x0, [x19, #24]
   1d9a8:	ldrb	w3, [x2]
   1d9ac:	cmp	x3, #0x20
   1d9b0:	b.ne	1dc14 <OnPrint@@Base+0x1234>  // b.any
   1d9b4:	ldrb	w0, [x2, #1]
   1d9b8:	cmp	w0, #0x72
   1d9bc:	ccmp	w0, w22, #0x4, ne  // ne = any
   1d9c0:	b.ne	1dc30 <OnPrint@@Base+0x1250>  // b.any
   1d9c4:	str	xzr, [x20, #40]
   1d9c8:	add	x0, x2, #0x2
   1d9cc:	str	x0, [x19, #24]
   1d9d0:	ldrb	w0, [x2, #1]
   1d9d4:	cmp	w0, #0x72
   1d9d8:	b.eq	1dbac <OnPrint@@Base+0x11cc>  // b.none
   1d9dc:	mov	x9, #0xe                   	// #14
   1d9e0:	mov	x8, #0xa                   	// #10
   1d9e4:	mov	x7, #0x6                   	// #6
   1d9e8:	mov	x5, #0xc                   	// #12
   1d9ec:	mov	x3, #0x8                   	// #8
   1d9f0:	mov	x4, #0x4                   	// #4
   1d9f4:	mov	x6, #0x2                   	// #2
   1d9f8:	ldrb	w0, [x2, #2]
   1d9fc:	mov	w1, #0x2d                  	// #45
   1da00:	cmp	w0, #0x77
   1da04:	ccmp	w0, w1, #0x4, ne  // ne = any
   1da08:	b.ne	1dc50 <OnPrint@@Base+0x1270>  // b.any
   1da0c:	add	x0, x2, #0x3
   1da10:	str	x0, [x19, #24]
   1da14:	ldrb	w0, [x2, #2]
   1da18:	cmp	w0, #0x77
   1da1c:	b.ne	1da30 <OnPrint@@Base+0x1050>  // b.any
   1da20:	mov	x5, x9
   1da24:	mov	x3, x8
   1da28:	mov	x4, x7
   1da2c:	str	x6, [x20, #40]
   1da30:	ldrb	w0, [x2, #3]
   1da34:	mov	w1, #0x78                  	// #120
   1da38:	cmp	w0, #0x2d
   1da3c:	ccmp	w0, w1, #0x4, ne  // ne = any
   1da40:	b.ne	1dc70 <OnPrint@@Base+0x1290>  // b.any
   1da44:	add	x0, x2, #0x4
   1da48:	str	x0, [x19, #24]
   1da4c:	ldrb	w0, [x2, #3]
   1da50:	cmp	w0, #0x78
   1da54:	b.eq	1db98 <OnPrint@@Base+0x11b8>  // b.none
   1da58:	ldrb	w0, [x2, #4]
   1da5c:	cmp	w0, #0x73
   1da60:	cset	w22, eq  // eq = none
   1da64:	cmp	w0, #0x70
   1da68:	csinc	w22, w22, wzr, ne  // ne = any
   1da6c:	cbz	w22, 1dc90 <OnPrint@@Base+0x12b0>
   1da70:	add	x0, x2, #0x5
   1da74:	str	x0, [x19, #24]
   1da78:	ldrb	w0, [x2, #4]
   1da7c:	cmp	w0, #0x73
   1da80:	b.eq	1dba4 <OnPrint@@Base+0x11c4>  // b.none
   1da84:	add	x0, x2, #0x6
   1da88:	str	x0, [x19, #24]
   1da8c:	ldrb	w24, [x2, #5]
   1da90:	cmp	x24, #0x20
   1da94:	b.ne	1dcb0 <OnPrint@@Base+0x12d0>  // b.any
   1da98:	mov	x0, x23
   1da9c:	bl	1cfa0 <OnPrint@@Base+0x5c0>
   1daa0:	str	x0, [x20, #16]
   1daa4:	ldr	x0, [x19, #24]
   1daa8:	add	x1, x0, #0x1
   1daac:	str	x1, [x19, #24]
   1dab0:	ldrb	w25, [x0]
   1dab4:	cmp	x25, #0x20
   1dab8:	b.ne	1dcd0 <OnPrint@@Base+0x12f0>  // b.any
   1dabc:	mov	x0, x23
   1dac0:	bl	1cfa0 <OnPrint@@Base+0x5c0>
   1dac4:	ldr	x0, [x19, #24]
   1dac8:	add	x1, x0, #0x1
   1dacc:	str	x1, [x19, #24]
   1dad0:	ldrb	w24, [x0]
   1dad4:	cmp	x24, #0x3a
   1dad8:	b.ne	1dbd4 <OnPrint@@Base+0x11f4>  // b.any
   1dadc:	mov	x0, x23
   1dae0:	bl	1cfa0 <OnPrint@@Base+0x5c0>
   1dae4:	ldr	x0, [x19, #24]
   1dae8:	add	x2, x0, #0x1
   1daec:	str	x2, [x19, #24]
   1daf0:	ldrb	w3, [x0]
   1daf4:	cmp	x3, #0x20
   1daf8:	b.eq	1db0c <OnPrint@@Base+0x112c>  // b.none
   1dafc:	b	1dcf0 <OnPrint@@Base+0x1310>
   1db00:	ldr	x2, [x19, #24]
   1db04:	add	x2, x2, #0x1
   1db08:	str	x2, [x19, #24]
   1db0c:	ldrb	w0, [x2]
   1db10:	bl	1cef0 <OnPrint@@Base+0x510>
   1db14:	tst	w0, #0xff
   1db18:	b.ne	1db00 <OnPrint@@Base+0x1120>  // b.any
   1db1c:	ldr	x1, [x19, #24]
   1db20:	cmp	x1, x21
   1db24:	b.cc	1db3c <OnPrint@@Base+0x115c>  // b.lo, b.ul, b.last
   1db28:	b	1db48 <OnPrint@@Base+0x1168>
   1db2c:	add	x1, x1, #0x1
   1db30:	str	x1, [x19, #24]
   1db34:	cmp	x1, x21
   1db38:	b.eq	1db48 <OnPrint@@Base+0x1168>  // b.none
   1db3c:	ldrb	w0, [x1]
   1db40:	cmp	w0, #0x20
   1db44:	b.eq	1db2c <OnPrint@@Base+0x114c>  // b.none
   1db48:	ldr	x0, [x20, #24]
   1db4c:	cbz	x0, 1db74 <OnPrint@@Base+0x1194>
   1db50:	ldr	x23, [x20, #32]
   1db54:	sub	x3, x21, x1
   1db58:	sub	x23, x23, #0x1
   1db5c:	cmp	x23, x3
   1db60:	csel	x23, x23, x3, ls  // ls = plast
   1db64:	mov	x2, x23
   1db68:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   1db6c:	ldr	x0, [x20, #24]
   1db70:	strb	wzr, [x0, x23]
   1db74:	add	x21, x21, #0x1
   1db78:	mov	w0, w22
   1db7c:	ldp	x23, x24, [sp, #32]
   1db80:	ldr	x25, [sp, #48]
   1db84:	str	x21, [x19, #24]
   1db88:	ldp	x21, x22, [sp, #16]
   1db8c:	ldr	x30, [sp, #56]
   1db90:	ldp	x19, x20, [sp], #64
   1db94:	ret
   1db98:	mov	x3, x5
   1db9c:	str	x4, [x20, #40]
   1dba0:	b	1da58 <OnPrint@@Base+0x1078>
   1dba4:	str	x3, [x20, #40]
   1dba8:	b	1da84 <OnPrint@@Base+0x10a4>
   1dbac:	mov	x0, #0x1                   	// #1
   1dbb0:	mov	x9, #0xf                   	// #15
   1dbb4:	mov	x8, #0xb                   	// #11
   1dbb8:	mov	x7, #0x7                   	// #7
   1dbbc:	mov	x5, #0xd                   	// #13
   1dbc0:	mov	x3, #0x9                   	// #9
   1dbc4:	mov	x4, #0x5                   	// #5
   1dbc8:	mov	x6, #0x3                   	// #3
   1dbcc:	str	x0, [x20, #40]
   1dbd0:	b	1d9f8 <OnPrint@@Base+0x1018>
   1dbd4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dbd8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dbdc:	mov	x3, x24
   1dbe0:	add	x2, x2, #0xe18
   1dbe4:	add	x0, x0, #0xcf0
   1dbe8:	mov	x4, #0x3a                  	// #58
   1dbec:	mov	w1, #0x38                  	// #56
   1dbf0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dbf4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dbf8:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dbfc:	mov	x3, x22
   1dc00:	add	x2, x2, #0xcd0
   1dc04:	add	x0, x0, #0xcf0
   1dc08:	mov	x4, #0x2d                  	// #45
   1dc0c:	mov	w1, #0x28                  	// #40
   1dc10:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dc14:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc18:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc1c:	add	x2, x2, #0xd38
   1dc20:	add	x0, x0, #0xcf0
   1dc24:	mov	x4, #0x20                  	// #32
   1dc28:	mov	w1, #0x2a                  	// #42
   1dc2c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dc30:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc34:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc38:	add	x2, x2, #0xd58
   1dc3c:	add	x0, x0, #0xcf0
   1dc40:	mov	x4, #0x0                   	// #0
   1dc44:	mov	x3, #0x0                   	// #0
   1dc48:	mov	w1, #0x2b                  	// #43
   1dc4c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dc50:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc54:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc58:	add	x2, x2, #0xd88
   1dc5c:	add	x0, x0, #0xcf0
   1dc60:	mov	x4, #0x0                   	// #0
   1dc64:	mov	x3, #0x0                   	// #0
   1dc68:	mov	w1, #0x2e                  	// #46
   1dc6c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dc70:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc74:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc78:	add	x2, x2, #0xdb8
   1dc7c:	add	x0, x0, #0xcf0
   1dc80:	mov	x4, #0x0                   	// #0
   1dc84:	mov	x3, #0x0                   	// #0
   1dc88:	mov	w1, #0x30                  	// #48
   1dc8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dc90:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc94:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dc98:	add	x2, x2, #0xde8
   1dc9c:	add	x0, x0, #0xcf0
   1dca0:	mov	x4, #0x0                   	// #0
   1dca4:	mov	x3, #0x0                   	// #0
   1dca8:	mov	w1, #0x32                  	// #50
   1dcac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dcb0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcb4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcb8:	mov	x3, x24
   1dcbc:	add	x2, x2, #0xd38
   1dcc0:	add	x0, x0, #0xcf0
   1dcc4:	mov	x4, #0x20                  	// #32
   1dcc8:	mov	w1, #0x34                  	// #52
   1dccc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dcd0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcd4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcd8:	mov	x4, x24
   1dcdc:	mov	x3, x25
   1dce0:	add	x2, x2, #0xd38
   1dce4:	add	x0, x0, #0xcf0
   1dce8:	mov	w1, #0x36                  	// #54
   1dcec:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dcf0:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcf4:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dcf8:	mov	x4, x25
   1dcfc:	mov	w1, w24
   1dd00:	add	x2, x2, #0xd38
   1dd04:	add	x0, x0, #0xcf0
   1dd08:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dd0c:	nop
   1dd10:	ldr	x0, [x0]
   1dd14:	ldr	w0, [x0, #8]
   1dd18:	ret
   1dd1c:	nop
   1dd20:	ldr	x0, [x0]
   1dd24:	ldr	w0, [x0, #12]
   1dd28:	and	w0, w0, #0xfffff
   1dd2c:	ret
   1dd30:	ldr	x0, [x0]
   1dd34:	add	x0, x0, #0xc
   1dd38:	ldxr	w1, [x0]
   1dd3c:	add	w2, w1, #0x1
   1dd40:	stlxr	w3, w2, [x0]
   1dd44:	cbnz	w3, 1dd38 <OnPrint@@Base+0x1358>
   1dd48:	mvn	x0, x1
   1dd4c:	dmb	ish
   1dd50:	tst	x0, #0xfffff
   1dd54:	b.eq	1dd5c <OnPrint@@Base+0x137c>  // b.none
   1dd58:	ret
   1dd5c:	str	x30, [sp, #-16]!
   1dd60:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dd64:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1dd68:	mov	x4, #0x100000              	// #1048576
   1dd6c:	add	x2, x2, #0xe38
   1dd70:	add	x0, x0, #0xe68
   1dd74:	mov	x3, x4
   1dd78:	mov	w1, #0x61                  	// #97
   1dd7c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1dd80:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1dd84:	add	x0, x0, #0x270
   1dd88:	ret
   1dd8c:	nop
   1dd90:	mov	w2, w0
   1dd94:	cbz	w0, 1de0c <OnPrint@@Base+0x142c>
   1dd98:	str	x30, [sp, #-16]!
   1dd9c:	and	x3, x2, #0x7fffffff
   1dda0:	mov	w4, w0
   1dda4:	cmp	x3, w0, uxtw
   1dda8:	b.ne	1de40 <OnPrint@@Base+0x1460>  // b.any
   1ddac:	lsr	w3, w0, #23
   1ddb0:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1ddb4:	add	x0, x0, #0xe70
   1ddb8:	mov	x5, #0xfffff               	// #1048575
   1ddbc:	lsl	x3, x3, #12
   1ddc0:	add	x6, x3, #0x1, lsl #12
   1ddc4:	cmp	x3, x5
   1ddc8:	b.hi	1de58 <OnPrint@@Base+0x1478>  // b.pmore
   1ddcc:	ldr	x1, [x0, x3, lsl #3]
   1ddd0:	ands	x1, x1, #0xfffffffffffffffe
   1ddd4:	b.ne	1dde4 <OnPrint@@Base+0x1404>  // b.any
   1ddd8:	b	1de24 <OnPrint@@Base+0x1444>
   1dddc:	ldr	x1, [x1]
   1dde0:	cbz	x1, 1de24 <OnPrint@@Base+0x1444>
   1dde4:	ldr	w4, [x1, #8]
   1dde8:	cmp	w2, w4
   1ddec:	b.ne	1dddc <OnPrint@@Base+0x13fc>  // b.any
   1ddf0:	ldp	w2, w3, [x1, #16]
   1ddf4:	add	x0, x1, #0x18
   1ddf8:	mov	x1, #0x0                   	// #0
   1ddfc:	bfxil	x1, x2, #0, #32
   1de00:	ldr	x30, [sp], #16
   1de04:	bfi	x1, x3, #32, #32
   1de08:	ret
   1de0c:	mov	x1, #0x0                   	// #0
   1de10:	mov	w3, #0x0                   	// #0
   1de14:	bfxil	x1, x2, #0, #32
   1de18:	mov	x0, #0x0                   	// #0
   1de1c:	bfi	x1, x3, #32, #32
   1de20:	ret
   1de24:	add	x3, x3, #0x1
   1de28:	cmp	x6, x3
   1de2c:	b.ne	1ddc4 <OnPrint@@Base+0x13e4>  // b.any
   1de30:	mov	w3, #0x0                   	// #0
   1de34:	mov	w2, #0x0                   	// #0
   1de38:	mov	x0, #0x0                   	// #0
   1de3c:	b	1ddf8 <OnPrint@@Base+0x1418>
   1de40:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1de44:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1de48:	add	x2, x2, #0xeb0
   1de4c:	add	x0, x0, #0xee0
   1de50:	mov	w1, #0x8c                  	// #140
   1de54:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1de58:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1de5c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1de60:	add	x2, x2, #0xf28
   1de64:	add	x0, x0, #0xee0
   1de68:	mov	x4, #0x100000              	// #1048576
   1de6c:	mov	w1, #0x91                  	// #145
   1de70:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1de74:	nop
   1de78:	stp	x19, x20, [sp, #-48]!
   1de7c:	adrp	x19, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1de80:	add	x19, x19, #0xe70
   1de84:	stp	x23, x30, [sp, #32]
   1de88:	mov	x23, x19
   1de8c:	stp	x21, x22, [sp, #16]
   1de90:	mov	w21, #0x0                   	// #0
   1de94:	nop
   1de98:	sxtw	x22, w21
   1de9c:	mov	w20, #0x0                   	// #0
   1dea0:	ldr	x0, [x23, x22, lsl #3]
   1dea4:	orr	x2, x0, #0x1
   1dea8:	tbnz	w0, #0, 1decc <OnPrint@@Base+0x14ec>
   1deac:	ldxr	x1, [x19]
   1deb0:	cmp	x1, x0
   1deb4:	b.ne	1dec0 <OnPrint@@Base+0x14e0>  // b.any
   1deb8:	stlxr	w3, x2, [x19]
   1debc:	cbnz	w3, 1deac <OnPrint@@Base+0x14cc>
   1dec0:	dmb	ish
   1dec4:	cmp	x0, x1
   1dec8:	b.eq	1dee8 <OnPrint@@Base+0x1508>  // b.none
   1decc:	cmp	w20, #0x9
   1ded0:	b.gt	1dedc <OnPrint@@Base+0x14fc>
   1ded4:	add	w20, w20, #0x1
   1ded8:	b	1dea0 <OnPrint@@Base+0x14c0>
   1dedc:	add	w20, w20, #0x1
   1dee0:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
   1dee4:	b	1dea0 <OnPrint@@Base+0x14c0>
   1dee8:	add	w21, w21, #0x1
   1deec:	add	x19, x19, #0x8
   1def0:	cmp	w21, #0x100, lsl #12
   1def4:	b.ne	1de98 <OnPrint@@Base+0x14b8>  // b.any
   1def8:	ldp	x21, x22, [sp, #16]
   1defc:	ldp	x23, x30, [sp, #32]
   1df00:	ldp	x19, x20, [sp], #48
   1df04:	ret
   1df08:	adrp	x3, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1df0c:	add	x3, x3, #0xe70
   1df10:	mov	w0, #0x0                   	// #0
   1df14:	nop
   1df18:	sxtw	x2, w0
   1df1c:	ldr	x1, [x3, x2, lsl #3]
   1df20:	dmb	ish
   1df24:	and	x1, x1, #0xfffffffffffffffe
   1df28:	str	x1, [x3, x2, lsl #3]
   1df2c:	add	w0, w0, #0x1
   1df30:	cmp	w0, #0x100, lsl #12
   1df34:	b.ne	1df18 <OnPrint@@Base+0x1538>  // b.any
   1df38:	ret
   1df3c:	nop
   1df40:	ldr	w2, [x0]
   1df44:	ldr	w0, [x1]
   1df48:	cmp	w2, w0
   1df4c:	cset	w0, cc  // cc = lo, ul, last
   1df50:	ret
   1df54:	nop
   1df58:	stp	x19, x20, [sp, #-128]!
   1df5c:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1df60:	mov	x19, x0
   1df64:	stp	x21, x22, [sp, #16]
   1df68:	ldr	x21, [x20, #4016]
   1df6c:	stp	x23, x24, [sp, #32]
   1df70:	stp	x25, x26, [sp, #48]
   1df74:	stp	x27, x28, [sp, #64]
   1df78:	str	x30, [sp, #80]
   1df7c:	str	xzr, [x0]
   1df80:	stp	xzr, xzr, [x0, #8]
   1df84:	ldr	x0, [x21]
   1df88:	cbz	x0, 1e30c <OnPrint@@Base+0x192c>
   1df8c:	sub	x1, x0, #0x1
   1df90:	tst	x1, x0
   1df94:	b.ne	1e33c <OnPrint@@Base+0x195c>  // b.any
   1df98:	add	x21, x0, #0xf
   1df9c:	neg	x0, x0
   1dfa0:	and	x21, x21, x0
   1dfa4:	mov	w2, #0x0                   	// #0
   1dfa8:	mov	x0, x21
   1dfac:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1dfb0:	add	x1, x24, #0x988
   1dfb4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1dfb8:	ldr	x1, [x19]
   1dfbc:	mov	x23, x0
   1dfc0:	ldr	x2, [x19, #16]
   1dfc4:	adrp	x22, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1dfc8:	lsl	x2, x2, #4
   1dfcc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1dfd0:	ldp	x0, x1, [x19]
   1dfd4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1dfd8:	stp	x23, x21, [x19]
   1dfdc:	add	x0, x22, #0xe70
   1dfe0:	add	x0, x0, #0x800, lsl #12
   1dfe4:	ldr	x4, [x0, #1024]
   1dfe8:	add	x4, x4, #0x64
   1dfec:	cmp	x4, x21, lsr #4
   1dff0:	b.hi	1e28c <OnPrint@@Base+0x18ac>  // b.pmore
   1dff4:	ldr	x20, [x20, #4016]
   1dff8:	add	x22, x22, #0xe70
   1dffc:	add	x23, sp, #0x70
   1e000:	mov	w21, #0x0                   	// #0
   1e004:	sxtw	x0, w21
   1e008:	ldr	x5, [x22, x0, lsl #3]
   1e00c:	mov	x25, #0x1                   	// #1
   1e010:	ands	x27, x5, #0xfffffffffffffffe
   1e014:	add	x26, x24, #0x988
   1e018:	b.eq	1e060 <OnPrint@@Base+0x1680>  // b.none
   1e01c:	ldp	x4, x3, [x19, #8]
   1e020:	ldr	w0, [x27, #8]
   1e024:	str	w0, [sp, #112]
   1e028:	str	x27, [sp, #120]
   1e02c:	lsr	x4, x4, #4
   1e030:	cmp	x3, x4
   1e034:	b.hi	1e2f4 <OnPrint@@Base+0x1914>  // b.pmore
   1e038:	add	x28, x3, #0x1
   1e03c:	b.eq	1e1ec <OnPrint@@Base+0x180c>  // b.none
   1e040:	ldr	x4, [x19]
   1e044:	str	x28, [x19, #16]
   1e048:	add	x0, x4, x3, lsl #4
   1e04c:	mov	x1, x23
   1e050:	mov	x2, #0x10                  	// #16
   1e054:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1e058:	ldr	x27, [x27]
   1e05c:	cbnz	x27, 1e01c <OnPrint@@Base+0x163c>
   1e060:	add	w21, w21, #0x1
   1e064:	cmp	w21, #0x100, lsl #12
   1e068:	b.ne	1e004 <OnPrint@@Base+0x1624>  // b.any
   1e06c:	ldr	x2, [x19, #16]
   1e070:	cmp	x2, #0x1
   1e074:	b.ls	1e1d0 <OnPrint@@Base+0x17f0>  // b.plast
   1e078:	ldr	x0, [x19]
   1e07c:	mov	x1, #0x1                   	// #1
   1e080:	lsl	x4, x1, #4
   1e084:	mov	x3, x1
   1e088:	ldr	w8, [x0, x4]
   1e08c:	sub	x5, x3, #0x1
   1e090:	mov	x4, x3
   1e094:	lsr	x3, x5, #1
   1e098:	add	x4, x0, x4, lsl #4
   1e09c:	lsl	x5, x3, #4
   1e0a0:	add	x9, x0, x5
   1e0a4:	ldr	w6, [x0, x5]
   1e0a8:	cmp	w6, w8
   1e0ac:	b.cs	1e0c8 <OnPrint@@Base+0x16e8>  // b.hs, b.nlast
   1e0b0:	ldp	x6, x7, [x9]
   1e0b4:	ldr	x10, [x4, #8]
   1e0b8:	stp	x6, x7, [x4]
   1e0bc:	str	w8, [x0, x5]
   1e0c0:	str	x10, [x9, #8]
   1e0c4:	cbnz	x3, 1e08c <OnPrint@@Base+0x16ac>
   1e0c8:	add	x1, x1, #0x1
   1e0cc:	cmp	x2, x1
   1e0d0:	b.ne	1e080 <OnPrint@@Base+0x16a0>  // b.any
   1e0d4:	sub	x8, x2, #0x1
   1e0d8:	add	x2, x0, x2, lsl #4
   1e0dc:	ldp	x6, x7, [x2, #-16]
   1e0e0:	mov	x3, #0x0                   	// #0
   1e0e4:	ldr	w4, [x0]
   1e0e8:	add	x5, x3, #0x1
   1e0ec:	ldr	x1, [x0, #8]
   1e0f0:	stp	x6, x7, [x0]
   1e0f4:	stur	w4, [x2, #-16]
   1e0f8:	stur	x1, [x2, #-8]
   1e0fc:	lsl	x1, x3, #1
   1e100:	add	x7, x1, #0x1
   1e104:	add	x1, x1, #0x2
   1e108:	cmp	x7, x8
   1e10c:	b.cs	1e174 <OnPrint@@Base+0x1794>  // b.hs, b.nlast
   1e110:	lsl	x6, x7, #4
   1e114:	lsl	x4, x3, #4
   1e118:	add	x9, x0, x6
   1e11c:	add	x11, x0, x4
   1e120:	ldr	w10, [x0, x6]
   1e124:	ldr	w12, [x0, x4]
   1e128:	cmp	w12, w10
   1e12c:	b.cs	1e174 <OnPrint@@Base+0x1794>  // b.hs, b.nlast
   1e130:	cmp	x1, x8
   1e134:	b.cc	1e358 <OnPrint@@Base+0x1978>  // b.lo, b.ul, b.last
   1e138:	cmp	x7, x3
   1e13c:	b.eq	1e1c4 <OnPrint@@Base+0x17e4>  // b.none
   1e140:	ldp	x4, x5, [x9]
   1e144:	mov	x1, x7
   1e148:	ldr	x3, [x11, #8]
   1e14c:	stp	x4, x5, [x11]
   1e150:	str	w12, [x0, x6]
   1e154:	str	x3, [x9, #8]
   1e158:	mov	x3, x1
   1e15c:	add	x5, x3, #0x1
   1e160:	lsl	x1, x3, #1
   1e164:	add	x7, x1, #0x1
   1e168:	add	x1, x1, #0x2
   1e16c:	cmp	x7, x8
   1e170:	b.cc	1e110 <OnPrint@@Base+0x1730>  // b.lo, b.ul, b.last
   1e174:	cmp	x1, x8
   1e178:	b.cs	1e1c4 <OnPrint@@Base+0x17e4>  // b.hs, b.nlast
   1e17c:	lsl	x5, x5, #5
   1e180:	lsl	x4, x3, #4
   1e184:	add	x6, x0, x5
   1e188:	ldr	w7, [x0, x5]
   1e18c:	ldr	w5, [x0, x4]
   1e190:	cmp	w7, w5
   1e194:	b.ls	1e1c4 <OnPrint@@Base+0x17e4>  // b.plast
   1e198:	cmp	x1, x3
   1e19c:	b.eq	1e1c4 <OnPrint@@Base+0x17e4>  // b.none
   1e1a0:	add	x3, x0, x4
   1e1a4:	ldr	w9, [x0, x4]
   1e1a8:	ldp	x4, x5, [x6]
   1e1ac:	cmp	x1, x8
   1e1b0:	ldr	x7, [x3, #8]
   1e1b4:	stp	x4, x5, [x3]
   1e1b8:	str	w9, [x6]
   1e1bc:	str	x7, [x6, #8]
   1e1c0:	b.cc	1e158 <OnPrint@@Base+0x1778>  // b.lo, b.ul, b.last
   1e1c4:	sub	x2, x2, #0x10
   1e1c8:	subs	x8, x8, #0x1
   1e1cc:	b.ne	1e0dc <OnPrint@@Base+0x16fc>  // b.any
   1e1d0:	ldp	x21, x22, [sp, #16]
   1e1d4:	ldp	x23, x24, [sp, #32]
   1e1d8:	ldp	x25, x26, [sp, #48]
   1e1dc:	ldp	x27, x28, [sp, #64]
   1e1e0:	ldr	x30, [sp, #80]
   1e1e4:	ldp	x19, x20, [sp], #128
   1e1e8:	ret
   1e1ec:	tst	x3, x28
   1e1f0:	b.eq	1e228 <OnPrint@@Base+0x1848>  // b.none
   1e1f4:	clz	x0, x28
   1e1f8:	mov	w1, #0x3f                  	// #63
   1e1fc:	sub	w0, w1, w0
   1e200:	add	w4, w0, #0x1
   1e204:	lsl	x4, x25, x4
   1e208:	cmp	x4, x28
   1e20c:	b.ls	1e374 <OnPrint@@Base+0x1994>  // b.plast
   1e210:	lsl	x0, x25, x0
   1e214:	cmp	x0, x28
   1e218:	b.cs	1e390 <OnPrint@@Base+0x19b0>  // b.hs, b.nlast
   1e21c:	cmp	x3, x4
   1e220:	b.hi	1e318 <OnPrint@@Base+0x1938>  // b.pmore
   1e224:	mov	x28, x4
   1e228:	ldr	x0, [x20]
   1e22c:	lsl	x28, x28, #4
   1e230:	cbz	x0, 1e330 <OnPrint@@Base+0x1950>
   1e234:	sub	x1, x0, #0x1
   1e238:	tst	x1, x0
   1e23c:	b.ne	1e33c <OnPrint@@Base+0x195c>  // b.any
   1e240:	add	x28, x28, x1
   1e244:	neg	x0, x0
   1e248:	and	x28, x28, x0
   1e24c:	mov	x1, x26
   1e250:	mov	x0, x28
   1e254:	mov	w2, #0x0                   	// #0
   1e258:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1e25c:	str	x0, [sp, #104]
   1e260:	ldr	x1, [x19]
   1e264:	ldr	x2, [x19, #16]
   1e268:	lsl	x2, x2, #4
   1e26c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1e270:	ldp	x0, x1, [x19]
   1e274:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1e278:	ldr	x3, [x19, #16]
   1e27c:	ldr	x4, [sp, #104]
   1e280:	stp	x4, x28, [x19]
   1e284:	add	x28, x3, #0x1
   1e288:	b	1e044 <OnPrint@@Base+0x1664>
   1e28c:	ldr	x3, [x19, #16]
   1e290:	cmp	x4, x3
   1e294:	b.cc	1e318 <OnPrint@@Base+0x1938>  // b.lo, b.ul, b.last
   1e298:	ldr	x23, [x20, #4016]
   1e29c:	lsl	x21, x4, #4
   1e2a0:	ldr	x0, [x23]
   1e2a4:	cbz	x0, 1e34c <OnPrint@@Base+0x196c>
   1e2a8:	sub	x1, x0, #0x1
   1e2ac:	tst	x1, x0
   1e2b0:	b.ne	1e33c <OnPrint@@Base+0x195c>  // b.any
   1e2b4:	add	x21, x21, x1
   1e2b8:	neg	x0, x0
   1e2bc:	and	x21, x21, x0
   1e2c0:	add	x1, x24, #0x988
   1e2c4:	mov	w2, #0x0                   	// #0
   1e2c8:	mov	x0, x21
   1e2cc:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1e2d0:	mov	x23, x0
   1e2d4:	ldr	x1, [x19]
   1e2d8:	ldr	x2, [x19, #16]
   1e2dc:	lsl	x2, x2, #4
   1e2e0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1e2e4:	ldp	x0, x1, [x19]
   1e2e8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1e2ec:	stp	x23, x21, [x19]
   1e2f0:	b	1dff4 <OnPrint@@Base+0x1614>
   1e2f4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1e2f8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e2fc:	add	x2, x2, #0xce0
   1e300:	add	x0, x0, #0x9b8
   1e304:	mov	w1, #0x1be                 	// #446
   1e308:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e30c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1e310:	str	x0, [x21]
   1e314:	b	1df8c <OnPrint@@Base+0x15ac>
   1e318:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1e31c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e320:	add	x2, x2, #0xd58
   1e324:	add	x0, x0, #0x9b8
   1e328:	mov	w1, #0x1fd                 	// #509
   1e32c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e330:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1e334:	str	x0, [x20]
   1e338:	b	1e234 <OnPrint@@Base+0x1854>
   1e33c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e340:	add	x0, x0, #0x970
   1e344:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1e348:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1e34c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1e350:	str	x0, [x23]
   1e354:	b	1e2a8 <OnPrint@@Base+0x18c8>
   1e358:	lsl	x11, x5, #5
   1e35c:	add	x6, x0, x5, lsl #5
   1e360:	ldr	w5, [x0, x11]
   1e364:	cmp	w10, w5
   1e368:	csel	x6, x6, x9, cc  // cc = lo, ul, last
   1e36c:	csel	x1, x1, x7, cc  // cc = lo, ul, last
   1e370:	b	1e198 <OnPrint@@Base+0x17b8>
   1e374:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1e378:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e37c:	mov	x3, x28
   1e380:	add	x2, x2, #0xd10
   1e384:	add	x0, x0, #0x9b8
   1e388:	mov	w1, #0x17b                 	// #379
   1e38c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e390:	mov	x4, x0
   1e394:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1e398:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e39c:	mov	x3, x28
   1e3a0:	add	x2, x2, #0xd38
   1e3a4:	add	x0, x0, #0x9b8
   1e3a8:	mov	w1, #0x17c                 	// #380
   1e3ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e3b0:	ldr	x4, [x0, #16]
   1e3b4:	cbnz	x4, 1e3c4 <OnPrint@@Base+0x19e4>
   1e3b8:	mov	x0, #0x0                   	// #0
   1e3bc:	mov	x1, #0x0                   	// #0
   1e3c0:	ret
   1e3c4:	mov	x5, x4
   1e3c8:	mov	x2, #0x0                   	// #0
   1e3cc:	str	x30, [sp, #-16]!
   1e3d0:	cmp	x5, x2
   1e3d4:	b.ls	1e408 <OnPrint@@Base+0x1a28>  // b.plast
   1e3d8:	add	x3, x5, x2
   1e3dc:	ldr	x7, [x0]
   1e3e0:	cmp	x4, x3, lsr #1
   1e3e4:	lsr	x3, x3, #1
   1e3e8:	b.ls	1e444 <OnPrint@@Base+0x1a64>  // b.plast
   1e3ec:	lsl	x6, x3, #4
   1e3f0:	ldr	w6, [x7, x6]
   1e3f4:	cmp	w1, w6
   1e3f8:	b.ls	1e43c <OnPrint@@Base+0x1a5c>  // b.plast
   1e3fc:	add	x2, x3, #0x1
   1e400:	cmp	x5, x2
   1e404:	b.hi	1e3d8 <OnPrint@@Base+0x19f8>  // b.pmore
   1e408:	cmp	x4, x2
   1e40c:	b.cc	1e42c <OnPrint@@Base+0x1a4c>  // b.lo, b.ul, b.last
   1e410:	ldr	x0, [x0]
   1e414:	b.eq	1e46c <OnPrint@@Base+0x1a8c>  // b.none
   1e418:	lsl	x2, x2, #4
   1e41c:	add	x3, x0, x2
   1e420:	ldr	w0, [x0, x2]
   1e424:	cmp	w0, w1
   1e428:	b.eq	1e45c <OnPrint@@Base+0x1a7c>  // b.none
   1e42c:	mov	x0, #0x0                   	// #0
   1e430:	mov	x1, #0x0                   	// #0
   1e434:	ldr	x30, [sp], #16
   1e438:	ret
   1e43c:	mov	x5, x3
   1e440:	b	1e3d0 <OnPrint@@Base+0x19f0>
   1e444:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e448:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e44c:	add	x2, x2, #0x9a0
   1e450:	add	x0, x0, #0x9b8
   1e454:	mov	w1, #0x1ba                 	// #442
   1e458:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e45c:	ldr	x1, [x3, #8]
   1e460:	add	x0, x1, #0x18
   1e464:	ldr	x1, [x1, #16]
   1e468:	b	1e434 <OnPrint@@Base+0x1a54>
   1e46c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e470:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1e474:	add	x2, x2, #0x9a0
   1e478:	add	x0, x0, #0x9b8
   1e47c:	mov	x3, x4
   1e480:	mov	w1, #0x1b6                 	// #438
   1e484:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e488:	str	x30, [sp, #-16]!
   1e48c:	mov	x2, x1
   1e490:	mov	x3, #0x0                   	// #0
   1e494:	mov	x1, x0
   1e498:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1e49c:	add	x0, x0, #0xe70
   1e4a0:	bl	1e4d8 <OnPrint@@Base+0x1af8>
   1e4a4:	cbz	x0, 1e4b4 <OnPrint@@Base+0x1ad4>
   1e4a8:	ldr	w0, [x0, #8]
   1e4ac:	ldr	x30, [sp], #16
   1e4b0:	ret
   1e4b4:	mov	w0, #0x0                   	// #0
   1e4b8:	ldr	x30, [sp], #16
   1e4bc:	ret
   1e4c0:	mov	x2, x1
   1e4c4:	mov	x3, #0x0                   	// #0
   1e4c8:	mov	x1, x0
   1e4cc:	adrp	x0, 1b9000 <__ubsan_vptr_type_cache@@Base+0x150188>
   1e4d0:	add	x0, x0, #0xe70
   1e4d4:	b	1e4d8 <OnPrint@@Base+0x1af8>
   1e4d8:	stp	x19, x20, [sp, #-160]!
   1e4dc:	stp	x21, x22, [sp, #16]
   1e4e0:	mov	x22, x2
   1e4e4:	mov	x21, x1
   1e4e8:	stp	x23, x24, [sp, #32]
   1e4ec:	mov	x24, x0
   1e4f0:	mov	x23, x3
   1e4f4:	stp	x25, x26, [sp, #48]
   1e4f8:	lsr	x25, x2, #32
   1e4fc:	stp	x27, x28, [sp, #64]
   1e500:	mov	w28, w25
   1e504:	mov	w27, w2
   1e508:	str	x30, [sp, #80]
   1e50c:	cbz	x3, 1e514 <OnPrint@@Base+0x1b34>
   1e510:	strb	wzr, [x3]
   1e514:	cmp	x21, #0x0
   1e518:	mov	x0, #0x0                   	// #0
   1e51c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   1e520:	b.ne	1e540 <OnPrint@@Base+0x1b60>  // b.any
   1e524:	ldp	x21, x22, [sp, #16]
   1e528:	ldp	x23, x24, [sp, #32]
   1e52c:	ldp	x25, x26, [sp, #48]
   1e530:	ldp	x27, x28, [sp, #64]
   1e534:	ldr	x30, [sp, #80]
   1e538:	ldp	x19, x20, [sp], #160
   1e53c:	ret
   1e540:	mov	w4, #0xb28c                	// #45708
   1e544:	mov	w20, #0xe995                	// #59797
   1e548:	movk	w4, #0x9747, lsl #16
   1e54c:	mov	w26, w22
   1e550:	eor	w5, w4, w22, lsl #3
   1e554:	mov	x1, #0x0                   	// #0
   1e558:	movk	w20, #0x5bd1, lsl #16
   1e55c:	nop
   1e560:	ldr	x4, [x21, x1, lsl #3]
   1e564:	mul	w5, w5, w20
   1e568:	add	x1, x1, #0x1
   1e56c:	cmp	x26, x1
   1e570:	mul	w4, w20, w4
   1e574:	eor	w4, w4, w4, lsr #24
   1e578:	mul	w4, w4, w20
   1e57c:	eor	w5, w4, w5
   1e580:	b.hi	1e560 <OnPrint@@Base+0x1b80>  // b.pmore
   1e584:	eor	w4, w5, w5, lsr #13
   1e588:	mul	w20, w4, w20
   1e58c:	eor	w20, w20, w20, lsr #15
   1e590:	and	x5, x20, #0xfffff
   1e594:	ubfiz	x2, x20, #3, #20
   1e598:	add	x2, x24, x2
   1e59c:	ldr	x9, [x24, x5, lsl #3]
   1e5a0:	ands	x9, x9, #0xfffffffffffffffe
   1e5a4:	b.eq	1e610 <OnPrint@@Base+0x1c30>  // b.none
   1e5a8:	and	w10, w20, #0xfff00000
   1e5ac:	mov	x4, x9
   1e5b0:	ldr	w1, [x4, #12]
   1e5b4:	and	w1, w1, #0xfff00000
   1e5b8:	cmp	w1, w10
   1e5bc:	b.ne	1e608 <OnPrint@@Base+0x1c28>  // b.any
   1e5c0:	bfxil	x6, x27, #0, #32
   1e5c4:	ldr	x0, [x4, #16]
   1e5c8:	bfi	x6, x28, #32, #32
   1e5cc:	cmp	x0, x6
   1e5d0:	b.ne	1e608 <OnPrint@@Base+0x1c28>  // b.any
   1e5d4:	ldr	w0, [x4, #16]
   1e5d8:	cbz	x0, 1e674 <OnPrint@@Base+0x1c94>
   1e5dc:	add	x3, x4, #0x18
   1e5e0:	mov	x1, #0x0                   	// #0
   1e5e4:	b	1e5f4 <OnPrint@@Base+0x1c14>
   1e5e8:	add	x1, x1, #0x1
   1e5ec:	cmp	x0, x1
   1e5f0:	b.eq	1e674 <OnPrint@@Base+0x1c94>  // b.none
   1e5f4:	ldr	x8, [x3, x1, lsl #3]
   1e5f8:	ldr	x7, [x21, x1, lsl #3]
   1e5fc:	cmp	x8, x7
   1e600:	b.eq	1e5e8 <OnPrint@@Base+0x1c08>  // b.none
   1e604:	nop
   1e608:	ldr	x4, [x4]
   1e60c:	cbnz	x4, 1e5b0 <OnPrint@@Base+0x1bd0>
   1e610:	mov	w1, #0x0                   	// #0
   1e614:	ldr	x0, [x2]
   1e618:	tbnz	w0, #0, 1e640 <OnPrint@@Base+0x1c60>
   1e61c:	orr	x3, x0, #0x1
   1e620:	ldxr	x6, [x2]
   1e624:	cmp	x6, x0
   1e628:	b.ne	1e634 <OnPrint@@Base+0x1c54>  // b.any
   1e62c:	stlxr	w4, x3, [x2]
   1e630:	cbnz	w4, 1e620 <OnPrint@@Base+0x1c40>
   1e634:	dmb	ish
   1e638:	cmp	x0, x6
   1e63c:	b.eq	1e67c <OnPrint@@Base+0x1c9c>  // b.none
   1e640:	cmp	w1, #0x9
   1e644:	b.gt	1e650 <OnPrint@@Base+0x1c70>
   1e648:	add	w1, w1, #0x1
   1e64c:	b	1e614 <OnPrint@@Base+0x1c34>
   1e650:	stp	x5, x2, [sp, #104]
   1e654:	str	x9, [sp, #120]
   1e658:	str	w1, [sp, #128]
   1e65c:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
   1e660:	ldr	w1, [sp, #128]
   1e664:	ldp	x5, x2, [sp, #104]
   1e668:	add	w1, w1, #0x1
   1e66c:	ldr	x9, [sp, #120]
   1e670:	b	1e614 <OnPrint@@Base+0x1c34>
   1e674:	mov	x0, x4
   1e678:	b	1e524 <OnPrint@@Base+0x1b44>
   1e67c:	cmp	x9, x6
   1e680:	b.eq	1e6f0 <OnPrint@@Base+0x1d10>  // b.none
   1e684:	cbz	x6, 1e6f0 <OnPrint@@Base+0x1d10>
   1e688:	and	w8, w20, #0xfff00000
   1e68c:	mov	x4, x6
   1e690:	ldr	w0, [x4, #12]
   1e694:	and	w0, w0, #0xfff00000
   1e698:	cmp	w0, w8
   1e69c:	b.ne	1e6e8 <OnPrint@@Base+0x1d08>  // b.any
   1e6a0:	bfxil	x19, x27, #0, #32
   1e6a4:	ldr	x0, [x4, #16]
   1e6a8:	bfi	x19, x28, #32, #32
   1e6ac:	cmp	x0, x19
   1e6b0:	b.ne	1e6e8 <OnPrint@@Base+0x1d08>  // b.any
   1e6b4:	ldr	w3, [x4, #16]
   1e6b8:	cbz	x3, 1e7e8 <OnPrint@@Base+0x1e08>
   1e6bc:	add	x7, x4, #0x18
   1e6c0:	mov	x1, #0x0                   	// #0
   1e6c4:	b	1e6d4 <OnPrint@@Base+0x1cf4>
   1e6c8:	add	x1, x1, #0x1
   1e6cc:	cmp	x3, x1
   1e6d0:	b.eq	1e7e8 <OnPrint@@Base+0x1e08>  // b.none
   1e6d4:	ldr	x2, [x7, x1, lsl #3]
   1e6d8:	ldr	x0, [x21, x1, lsl #3]
   1e6dc:	cmp	x2, x0
   1e6e0:	b.eq	1e6c8 <OnPrint@@Base+0x1ce8>  // b.none
   1e6e4:	nop
   1e6e8:	ldr	x4, [x4]
   1e6ec:	cbnz	x4, 1e690 <OnPrint@@Base+0x1cb0>
   1e6f0:	lsr	x7, x5, #12
   1e6f4:	add	x0, x7, #0x200, lsl #12
   1e6f8:	add	x0, x24, x0, lsl #2
   1e6fc:	ldxr	w3, [x0]
   1e700:	add	w1, w3, #0x1
   1e704:	stlxr	w2, w1, [x0]
   1e708:	cbnz	w2, 1e6fc <OnPrint@@Base+0x1d1c>
   1e70c:	add	x28, x24, #0x800, lsl #12
   1e710:	mov	w0, #0x7fffff              	// #8388607
   1e714:	add	w3, w3, #0x1
   1e718:	dmb	ish
   1e71c:	cmp	w3, w0
   1e720:	ldr	x0, [x28, #1024]
   1e724:	add	x0, x0, #0x1
   1e728:	str	x0, [x28, #1024]
   1e72c:	b.hi	1e900 <OnPrint@@Base+0x1f20>  // b.pmore
   1e730:	orr	w7, w3, w7, lsl #23
   1e734:	cbz	w7, 1e91c <OnPrint@@Base+0x1f3c>
   1e738:	adrp	x9, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1e73c:	sub	w27, w22, #0x1
   1e740:	add	x27, x27, #0x4
   1e744:	ldr	x1, [x9, #3824]
   1e748:	lsl	x27, x27, #3
   1e74c:	add	x2, x1, #0x8
   1e750:	ldr	x19, [x1, #8]
   1e754:	dmb	ish
   1e758:	ldr	x3, [x1, #16]
   1e75c:	dmb	ish
   1e760:	cbz	x19, 1e7f8 <OnPrint@@Base+0x1e18>
   1e764:	add	x0, x27, x19
   1e768:	cmp	x0, x3
   1e76c:	b.hi	1e7f8 <OnPrint@@Base+0x1e18>  // b.pmore
   1e770:	ldxr	x3, [x2]
   1e774:	cmp	x3, x19
   1e778:	b.ne	1e784 <OnPrint@@Base+0x1da4>  // b.any
   1e77c:	stlxr	w4, x0, [x2]
   1e780:	cbnz	w4, 1e770 <OnPrint@@Base+0x1d90>
   1e784:	dmb	ish
   1e788:	cmp	x3, x19
   1e78c:	b.ne	1e750 <OnPrint@@Base+0x1d70>  // b.any
   1e790:	ldr	x0, [x28, #1032]
   1e794:	and	w20, w20, #0xfff00000
   1e798:	lsl	x2, x26, #3
   1e79c:	mov	x1, x21
   1e7a0:	add	x27, x0, x27
   1e7a4:	str	x27, [x28, #1032]
   1e7a8:	str	w7, [x19, #8]
   1e7ac:	add	x0, x19, #0x18
   1e7b0:	str	w20, [x19, #12]
   1e7b4:	stp	w22, w25, [x19, #16]
   1e7b8:	stp	x5, x6, [sp, #104]
   1e7bc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1e7c0:	ldr	x6, [sp, #112]
   1e7c4:	str	x6, [x19]
   1e7c8:	dmb	ish
   1e7cc:	ldr	x5, [sp, #104]
   1e7d0:	str	x19, [x24, x5, lsl #3]
   1e7d4:	cbz	x23, 1e7e0 <OnPrint@@Base+0x1e00>
   1e7d8:	mov	w0, #0x1                   	// #1
   1e7dc:	strb	w0, [x23]
   1e7e0:	mov	x0, x19
   1e7e4:	b	1e524 <OnPrint@@Base+0x1b44>
   1e7e8:	dmb	ish
   1e7ec:	str	x6, [x24, x5, lsl #3]
   1e7f0:	mov	x0, x4
   1e7f4:	b	1e524 <OnPrint@@Base+0x1b44>
   1e7f8:	ldr	x0, [x9, #3824]
   1e7fc:	mov	w2, #0x1                   	// #1
   1e800:	ldxrb	w1, [x0]
   1e804:	stxrb	w3, w2, [x0]
   1e808:	cbnz	w3, 1e800 <OnPrint@@Base+0x1e20>
   1e80c:	dmb	ish
   1e810:	tst	w1, #0xff
   1e814:	b.eq	1e838 <OnPrint@@Base+0x1e58>  // b.none
   1e818:	str	x5, [sp, #104]
   1e81c:	str	w7, [sp, #112]
   1e820:	str	x6, [sp, #120]
   1e824:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1e828:	ldr	w7, [sp, #112]
   1e82c:	adrp	x9, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1e830:	ldr	x5, [sp, #104]
   1e834:	ldr	x6, [sp, #120]
   1e838:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e83c:	ldr	x3, [x9, #3824]
   1e840:	add	x0, x0, #0xf68
   1e844:	str	x0, [sp, #152]
   1e848:	add	x4, x3, #0x8
   1e84c:	nop
   1e850:	ldr	x19, [x3, #8]
   1e854:	dmb	ish
   1e858:	ldr	x1, [x3, #16]
   1e85c:	dmb	ish
   1e860:	cbz	x19, 1e89c <OnPrint@@Base+0x1ebc>
   1e864:	add	x0, x27, x19
   1e868:	cmp	x0, x1
   1e86c:	b.hi	1e89c <OnPrint@@Base+0x1ebc>  // b.pmore
   1e870:	ldxr	x1, [x4]
   1e874:	cmp	x1, x19
   1e878:	b.ne	1e884 <OnPrint@@Base+0x1ea4>  // b.any
   1e87c:	stlxr	w2, x0, [x4]
   1e880:	cbnz	w2, 1e870 <OnPrint@@Base+0x1e90>
   1e884:	dmb	ish
   1e888:	cmp	x1, x19
   1e88c:	b.ne	1e850 <OnPrint@@Base+0x1e70>  // b.any
   1e890:	dmb	ish
   1e894:	strb	wzr, [x3]
   1e898:	b	1e790 <OnPrint@@Base+0x1db0>
   1e89c:	ldr	x10, [x9, #3824]
   1e8a0:	cmp	x27, #0x10, lsl #12
   1e8a4:	ldr	x1, [sp, #152]
   1e8a8:	mov	x19, #0x10000               	// #65536
   1e8ac:	str	xzr, [x10, #8]
   1e8b0:	csel	x19, x27, x19, cs  // cs = hs, nlast
   1e8b4:	mov	x0, x19
   1e8b8:	mov	w2, #0x0                   	// #0
   1e8bc:	stp	x10, x5, [sp, #104]
   1e8c0:	str	w7, [sp, #120]
   1e8c4:	stp	x6, x3, [sp, #128]
   1e8c8:	str	x4, [sp, #144]
   1e8cc:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1e8d0:	dmb	ish
   1e8d4:	add	x19, x19, x0
   1e8d8:	ldr	x10, [sp, #104]
   1e8dc:	str	x19, [x10, #16]
   1e8e0:	dmb	ish
   1e8e4:	str	x0, [x10, #8]
   1e8e8:	adrp	x9, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1e8ec:	ldr	w7, [sp, #120]
   1e8f0:	ldr	x5, [sp, #112]
   1e8f4:	ldp	x6, x3, [sp, #128]
   1e8f8:	ldr	x4, [sp, #144]
   1e8fc:	b	1e850 <OnPrint@@Base+0x1e70>
   1e900:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e904:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e908:	add	x2, x2, #0xf40
   1e90c:	add	x0, x0, #0xee0
   1e910:	mov	x4, #0x800000              	// #8388608
   1e914:	mov	w1, #0x77                  	// #119
   1e918:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e91c:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e920:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e924:	add	x2, x2, #0xf58
   1e928:	add	x0, x0, #0xee0
   1e92c:	mov	x4, #0x0                   	// #0
   1e930:	mov	x3, #0x0                   	// #0
   1e934:	mov	w1, #0x79                  	// #121
   1e938:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e93c:	nop
   1e940:	add	x0, x0, #0x4
   1e944:	ret
   1e948:	str	x30, [sp, #-16]!
   1e94c:	mov	x0, x30
   1e950:	ldr	x30, [sp], #16
   1e954:	ret
   1e958:	stp	x19, x20, [sp, #-32]!
   1e95c:	cmp	x3, #0x0
   1e960:	stp	x21, x30, [sp, #16]
   1e964:	mov	x21, x3
   1e968:	cinc	w3, w2, ne  // ne = any
   1e96c:	str	w3, [x0, #8]
   1e970:	cmp	w3, #0x100
   1e974:	b.hi	1e9a8 <OnPrint@@Base+0x1fc8>  // b.pmore
   1e978:	mov	x19, x0
   1e97c:	mov	x20, x2
   1e980:	add	x0, x0, #0x10
   1e984:	lsl	x2, x2, #3
   1e988:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1e98c:	cbz	x21, 1e998 <OnPrint@@Base+0x1fb8>
   1e990:	add	x20, x20, #0x2
   1e994:	str	x21, [x19, x20, lsl #3]
   1e998:	ldp	x21, x30, [sp, #16]
   1e99c:	str	xzr, [x19, #2064]
   1e9a0:	ldp	x19, x20, [sp], #32
   1e9a4:	ret
   1e9a8:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e9ac:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1e9b0:	mov	w3, w3
   1e9b4:	add	x2, x2, #0xf78
   1e9b8:	add	x0, x0, #0xf98
   1e9bc:	mov	x4, #0x100                 	// #256
   1e9c0:	mov	w1, #0x22                  	// #34
   1e9c4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1e9c8:	stp	x19, x20, [sp, #-64]!
   1e9cc:	mov	x19, x0
   1e9d0:	mov	w20, w5
   1e9d4:	stp	x23, x24, [sp, #32]
   1e9d8:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1e9dc:	mov	x24, x1
   1e9e0:	ldr	x23, [x23, #4016]
   1e9e4:	stp	x21, x22, [sp, #16]
   1e9e8:	mov	x22, x2
   1e9ec:	stp	x25, x30, [sp, #48]
   1e9f0:	mov	x21, x3
   1e9f4:	mov	x25, x4
   1e9f8:	ldr	x0, [x23]
   1e9fc:	cbz	x0, 1eaa8 <OnPrint@@Base+0x20c8>
   1ea00:	cmp	w20, #0x1
   1ea04:	mov	w3, w20
   1ea08:	b.ls	1eabc <OnPrint@@Base+0x20dc>  // b.plast
   1ea0c:	mov	w1, #0x1                   	// #1
   1ea10:	str	w1, [x19, #8]
   1ea14:	str	x24, [x19, #16]
   1ea18:	cmp	x21, #0xfff
   1ea1c:	b.ls	1ea94 <OnPrint@@Base+0x20b4>  // b.plast
   1ea20:	cmp	x22, x25
   1ea24:	b.ls	1ea94 <OnPrint@@Base+0x20b4>  // b.plast
   1ea28:	sub	x21, x21, #0x10
   1ea2c:	cmp	x22, x21
   1ea30:	b.cs	1ea94 <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   1ea34:	tst	x22, #0x7
   1ea38:	b.ne	1ea94 <OnPrint@@Base+0x20b4>  // b.any
   1ea3c:	mov	x2, x22
   1ea40:	ldr	x3, [x2, #8]
   1ea44:	cmp	x0, x3
   1ea48:	b.hi	1ea94 <OnPrint@@Base+0x20b4>  // b.pmore
   1ea4c:	cmp	x24, x3
   1ea50:	b.eq	1ea64 <OnPrint@@Base+0x2084>  // b.none
   1ea54:	add	x4, x19, w1, uxtw #3
   1ea58:	add	w1, w1, #0x1
   1ea5c:	str	w1, [x19, #8]
   1ea60:	str	x3, [x4, #16]
   1ea64:	ldr	x2, [x2]
   1ea68:	cmp	x2, x22
   1ea6c:	b.ls	1ea94 <OnPrint@@Base+0x20b4>  // b.plast
   1ea70:	cmp	x2, x21
   1ea74:	b.cs	1ea94 <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   1ea78:	tst	x2, #0x7
   1ea7c:	b.ne	1ea94 <OnPrint@@Base+0x20b4>  // b.any
   1ea80:	ldr	w1, [x19, #8]
   1ea84:	cmp	w1, w20
   1ea88:	b.cs	1ea94 <OnPrint@@Base+0x20b4>  // b.hs, b.nlast
   1ea8c:	mov	x22, x2
   1ea90:	b	1ea40 <OnPrint@@Base+0x2060>
   1ea94:	ldp	x21, x22, [sp, #16]
   1ea98:	ldp	x23, x24, [sp, #32]
   1ea9c:	ldp	x25, x30, [sp, #48]
   1eaa0:	ldp	x19, x20, [sp], #64
   1eaa4:	ret
   1eaa8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1eaac:	str	x0, [x23]
   1eab0:	cmp	w20, #0x1
   1eab4:	mov	w3, w20
   1eab8:	b.hi	1ea0c <OnPrint@@Base+0x202c>  // b.pmore
   1eabc:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1eac0:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1eac4:	add	x2, x2, #0xfe0
   1eac8:	add	x0, x0, #0xf98
   1eacc:	mov	x4, #0x2                   	// #2
   1ead0:	mov	w1, #0x47                  	// #71
   1ead4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ead8:	ldr	w2, [x0, #8]
   1eadc:	cmp	x1, w2, uxtw
   1eae0:	b.cs	1eb6c <OnPrint@@Base+0x218c>  // b.hs, b.nlast
   1eae4:	sub	w6, w2, w1
   1eae8:	str	w6, [x0, #8]
   1eaec:	cbz	w6, 1eb68 <OnPrint@@Base+0x2188>
   1eaf0:	sub	x3, x6, #0x1
   1eaf4:	cmp	x3, #0x9
   1eaf8:	ccmp	x1, #0x1, #0x0, hi  // hi = pmore
   1eafc:	b.ls	1eb4c <OnPrint@@Base+0x216c>  // b.plast
   1eb00:	add	x4, x1, #0x2
   1eb04:	lsr	x3, x6, #1
   1eb08:	add	x5, x0, #0x10
   1eb0c:	mov	x2, #0x0                   	// #0
   1eb10:	add	x4, x0, x4, lsl #3
   1eb14:	lsl	x3, x3, #4
   1eb18:	ldr	q0, [x4, x2]
   1eb1c:	str	q0, [x5, x2]
   1eb20:	add	x2, x2, #0x10
   1eb24:	cmp	x2, x3
   1eb28:	b.ne	1eb18 <OnPrint@@Base+0x2138>  // b.any
   1eb2c:	and	x2, x6, #0xfffffffffffffffe
   1eb30:	tbz	w6, #0, 1eb68 <OnPrint@@Base+0x2188>
   1eb34:	add	x1, x2, x1
   1eb38:	add	x2, x2, #0x2
   1eb3c:	add	x1, x1, #0x2
   1eb40:	ldr	x1, [x0, x1, lsl #3]
   1eb44:	str	x1, [x0, x2, lsl #3]
   1eb48:	ret
   1eb4c:	add	x0, x0, #0x10
   1eb50:	add	x2, x0, w6, uxtw #3
   1eb54:	nop
   1eb58:	ldr	x3, [x0, x1, lsl #3]
   1eb5c:	str	x3, [x0], #8
   1eb60:	cmp	x0, x2
   1eb64:	b.ne	1eb58 <OnPrint@@Base+0x2178>  // b.any
   1eb68:	ret
   1eb6c:	str	x30, [sp, #-16]!
   1eb70:	mov	w4, w2
   1eb74:	mov	x3, x1
   1eb78:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1eb7c:	adrp	x0, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   1eb80:	add	x2, x2, #0xff8
   1eb84:	add	x0, x0, #0xf98
   1eb88:	mov	w1, #0x78                  	// #120
   1eb8c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1eb90:	ldr	w9, [x0, #8]
   1eb94:	cmp	x9, #0x1
   1eb98:	b.ls	1ebf0 <OnPrint@@Base+0x2210>  // b.plast
   1eb9c:	ldr	x10, [x0]
   1eba0:	mov	x3, #0x1                   	// #1
   1eba4:	mov	x0, #0x0                   	// #0
   1eba8:	ldr	x2, [x10]
   1ebac:	nop
   1ebb0:	sub	x7, x1, x2
   1ebb4:	ldr	x6, [x10, x3, lsl #3]
   1ebb8:	sub	x5, x2, x1
   1ebbc:	cmp	x6, x1
   1ebc0:	sub	x8, x1, x6
   1ebc4:	sub	x4, x6, x1
   1ebc8:	csel	x4, x4, x8, cs  // cs = hs, nlast
   1ebcc:	cmp	x2, x1
   1ebd0:	csel	x5, x5, x7, cs  // cs = hs, nlast
   1ebd4:	cmp	x5, x4
   1ebd8:	csel	x0, x3, x0, hi  // hi = pmore
   1ebdc:	add	x3, x3, #0x1
   1ebe0:	csel	x2, x6, x2, hi  // hi = pmore
   1ebe4:	cmp	x9, x3
   1ebe8:	b.ne	1ebb0 <OnPrint@@Base+0x21d0>  // b.any
   1ebec:	ret
   1ebf0:	mov	x0, #0x0                   	// #0
   1ebf4:	ret
   1ebf8:	stp	x19, x20, [sp, #-176]!
   1ebfc:	stp	x21, x22, [sp, #16]
   1ec00:	mov	x21, x0
   1ec04:	ldr	x0, [x0]
   1ec08:	str	x30, [sp, #80]
   1ec0c:	cbz	x0, 1ec6c <OnPrint@@Base+0x228c>
   1ec10:	ldr	w0, [x21, #8]
   1ec14:	cbz	w0, 1ec6c <OnPrint@@Base+0x228c>
   1ec18:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ec1c:	stp	x23, x24, [sp, #32]
   1ec20:	ldr	x22, [x20, #4016]
   1ec24:	stp	x25, x26, [sp, #48]
   1ec28:	stp	x27, x28, [sp, #64]
   1ec2c:	ldr	x0, [x22]
   1ec30:	cbz	x0, 1ec88 <OnPrint@@Base+0x22a8>
   1ec34:	str	xzr, [sp, #112]
   1ec38:	cmp	xzr, x0, lsl #1
   1ec3c:	stp	xzr, xzr, [sp, #120]
   1ec40:	lsl	x19, x0, #1
   1ec44:	b.ne	1ecb4 <OnPrint@@Base+0x22d4>  // b.any
   1ec48:	stp	xzr, xzr, [sp, #128]
   1ec4c:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1ec50:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1ec54:	add	x2, x2, #0x9a0
   1ec58:	add	x0, x0, #0x9b8
   1ec5c:	mov	x4, #0x0                   	// #0
   1ec60:	mov	x3, #0x0                   	// #0
   1ec64:	mov	w1, #0x1b6                 	// #438
   1ec68:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ec6c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ec70:	add	x0, x0, #0x10
   1ec74:	bl	1ccf0 <OnPrint@@Base+0x310>
   1ec78:	ldp	x21, x22, [sp, #16]
   1ec7c:	ldr	x30, [sp, #80]
   1ec80:	ldp	x19, x20, [sp], #176
   1ec84:	ret
   1ec88:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1ec8c:	str	x0, [x22]
   1ec90:	str	xzr, [sp, #112]
   1ec94:	mov	x19, x0
   1ec98:	stp	xzr, xzr, [sp, #120]
   1ec9c:	cmp	xzr, x0, lsl #1
   1eca0:	lsl	x1, x0, #1
   1eca4:	b.eq	1ec48 <OnPrint@@Base+0x2268>  // b.none
   1eca8:	cbnz	x0, 1f04c <OnPrint@@Base+0x266c>
   1ecac:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1ecb0:	str	x0, [x22]
   1ecb4:	sub	x1, x0, #0x1
   1ecb8:	tst	x1, x0
   1ecbc:	b.ne	1f020 <OnPrint@@Base+0x2640>  // b.any
   1ecc0:	add	x1, x19, x1
   1ecc4:	neg	x0, x0
   1ecc8:	and	x23, x1, x0
   1eccc:	mov	w2, #0x0                   	// #0
   1ecd0:	mov	x0, x23
   1ecd4:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1ecd8:	add	x1, x24, #0x988
   1ecdc:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1ece0:	ldr	x1, [sp, #112]
   1ece4:	mov	x22, x0
   1ece8:	ldr	x2, [sp, #128]
   1ecec:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1ecf0:	ldp	x0, x1, [sp, #112]
   1ecf4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1ecf8:	stp	x22, x23, [sp, #112]
   1ecfc:	ldr	x2, [sp, #128]
   1ed00:	cmp	x19, x2
   1ed04:	b.ls	1f044 <OnPrint@@Base+0x2664>  // b.plast
   1ed08:	cmp	x19, x23
   1ed0c:	b.hi	1ef04 <OnPrint@@Base+0x2524>  // b.pmore
   1ed10:	add	x0, x22, x2
   1ed14:	mov	w1, #0x0                   	// #0
   1ed18:	sub	x2, x19, x2
   1ed1c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1ed20:	stp	x19, xzr, [sp, #128]
   1ed24:	ldr	x22, [sp, #112]
   1ed28:	cbz	x19, 1ec4c <OnPrint@@Base+0x226c>
   1ed2c:	ldr	x23, [x20, #4016]
   1ed30:	strb	wzr, [x22]
   1ed34:	ldr	x19, [x23]
   1ed38:	cbz	x19, 1eeb8 <OnPrint@@Base+0x24d8>
   1ed3c:	str	xzr, [sp, #144]
   1ed40:	stp	xzr, xzr, [sp, #152]
   1ed44:	sub	x23, x19, #0x1
   1ed48:	ands	x23, x23, x19
   1ed4c:	b.ne	1f020 <OnPrint@@Base+0x2640>  // b.any
   1ed50:	lsl	x0, x19, #1
   1ed54:	neg	x25, x19
   1ed58:	sub	x0, x0, #0x1
   1ed5c:	add	x1, x24, #0x988
   1ed60:	and	x25, x0, x25
   1ed64:	mov	w2, #0x0                   	// #0
   1ed68:	mov	x0, x25
   1ed6c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1ed70:	ldr	x1, [sp, #144]
   1ed74:	mov	x22, x0
   1ed78:	ldr	x2, [sp, #160]
   1ed7c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1ed80:	ldp	x0, x1, [sp, #144]
   1ed84:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1ed88:	stp	x22, x25, [sp, #144]
   1ed8c:	ldr	x2, [sp, #160]
   1ed90:	cmp	x19, x2
   1ed94:	b.ls	1f054 <OnPrint@@Base+0x2674>  // b.plast
   1ed98:	cmp	x19, x25
   1ed9c:	b.hi	1ef7c <OnPrint@@Base+0x259c>  // b.pmore
   1eda0:	add	x0, x22, x2
   1eda4:	mov	w1, #0x0                   	// #0
   1eda8:	sub	x2, x19, x2
   1edac:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1edb0:	ldr	x22, [sp, #144]
   1edb4:	stp	x19, xzr, [sp, #160]
   1edb8:	adrp	x26, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1edbc:	strb	wzr, [x22]
   1edc0:	ldr	x1, [x26, #4056]
   1edc4:	str	xzr, [sp, #96]
   1edc8:	ldr	w0, [x21, #8]
   1edcc:	ldr	w27, [x1, #184]
   1edd0:	cbz	w0, 1efec <OnPrint@@Base+0x260c>
   1edd4:	adrp	x24, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1edd8:	add	x28, sp, #0x70
   1eddc:	add	x24, x24, #0xd20
   1ede0:	ldr	x0, [x21]
   1ede4:	ldr	x1, [sp, #96]
   1ede8:	ldr	x19, [x0, x1, lsl #3]
   1edec:	cbz	x19, 1efec <OnPrint@@Base+0x260c>
   1edf0:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1edf4:	sub	x1, x19, #0x4
   1edf8:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   1edfc:	str	x0, [sp, #104]
   1ee00:	cbz	x0, 1ef5c <OnPrint@@Base+0x257c>
   1ee04:	mov	x25, x0
   1ee08:	adrp	x22, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   1ee0c:	ldr	x0, [sp, #128]
   1ee10:	add	x22, x22, #0x6e0
   1ee14:	mov	x19, x23
   1ee18:	ldr	x2, [sp, #112]
   1ee1c:	cbz	x0, 1ec4c <OnPrint@@Base+0x226c>
   1ee20:	ldr	x1, [x26, #4056]
   1ee24:	strb	wzr, [x2]
   1ee28:	mov	x6, x24
   1ee2c:	mov	w2, w19
   1ee30:	add	x3, x25, #0x8
   1ee34:	mov	x0, x28
   1ee38:	ldrb	w4, [x1, #181]
   1ee3c:	add	x20, x19, #0x1
   1ee40:	ldr	x5, [x1, #24]
   1ee44:	str	xzr, [sp, #136]
   1ee48:	ldr	x1, [x1, #192]
   1ee4c:	bl	20c10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   1ee50:	ldr	x1, [sp, #112]
   1ee54:	mov	x0, x22
   1ee58:	bl	1ccf0 <OnPrint@@Base+0x310>
   1ee5c:	add	w1, w27, w23
   1ee60:	sub	w0, w1, w19
   1ee64:	sub	w19, w1, w20
   1ee68:	cmp	w0, #0x0
   1ee6c:	b.le	1ee88 <OnPrint@@Base+0x24a8>
   1ee70:	ldr	x0, [sp, #168]
   1ee74:	cbnz	x0, 1eea4 <OnPrint@@Base+0x24c4>
   1ee78:	ldr	x1, [x25, #40]
   1ee7c:	cbz	x1, 1ee88 <OnPrint@@Base+0x24a8>
   1ee80:	add	x0, sp, #0x90
   1ee84:	bl	1ce00 <OnPrint@@Base+0x420>
   1ee88:	ldr	x25, [x25]
   1ee8c:	cbz	x25, 1eed8 <OnPrint@@Base+0x24f8>
   1ee90:	ldr	x0, [sp, #128]
   1ee94:	mov	x19, x20
   1ee98:	ldr	x2, [sp, #112]
   1ee9c:	cbnz	x0, 1ee20 <OnPrint@@Base+0x2440>
   1eea0:	b	1ec4c <OnPrint@@Base+0x226c>
   1eea4:	add	x0, sp, #0x90
   1eea8:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1eeac:	add	x1, x1, #0x90
   1eeb0:	bl	1ce00 <OnPrint@@Base+0x420>
   1eeb4:	b	1ee78 <OnPrint@@Base+0x2498>
   1eeb8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1eebc:	str	x0, [x23]
   1eec0:	str	xzr, [sp, #144]
   1eec4:	mov	x19, x0
   1eec8:	stp	xzr, xzr, [sp, #152]
   1eecc:	cbnz	x0, 1ed44 <OnPrint@@Base+0x2364>
   1eed0:	stp	xzr, xzr, [sp, #160]
   1eed4:	b	1ec4c <OnPrint@@Base+0x226c>
   1eed8:	ldr	x0, [sp, #104]
   1eedc:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   1eee0:	ldr	x1, [sp, #96]
   1eee4:	ldr	w0, [x21, #8]
   1eee8:	add	x1, x1, #0x1
   1eeec:	str	x1, [sp, #96]
   1eef0:	cmp	x0, x1
   1eef4:	b.ls	1efec <OnPrint@@Base+0x260c>  // b.plast
   1eef8:	mov	x23, x20
   1eefc:	mov	w27, w19
   1ef00:	b	1ede0 <OnPrint@@Base+0x2400>
   1ef04:	ldr	x22, [x20, #4016]
   1ef08:	ldr	x0, [x22]
   1ef0c:	cbz	x0, 1efd4 <OnPrint@@Base+0x25f4>
   1ef10:	sub	x1, x0, #0x1
   1ef14:	tst	x1, x0
   1ef18:	b.ne	1f020 <OnPrint@@Base+0x2640>  // b.any
   1ef1c:	add	x1, x19, x1
   1ef20:	neg	x0, x0
   1ef24:	and	x23, x1, x0
   1ef28:	mov	w2, #0x0                   	// #0
   1ef2c:	add	x1, x24, #0x988
   1ef30:	mov	x0, x23
   1ef34:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1ef38:	mov	x22, x0
   1ef3c:	ldr	x1, [sp, #112]
   1ef40:	ldr	x2, [sp, #128]
   1ef44:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1ef48:	ldp	x0, x1, [sp, #112]
   1ef4c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1ef50:	stp	x22, x23, [sp, #112]
   1ef54:	ldr	x2, [sp, #128]
   1ef58:	b	1ed10 <OnPrint@@Base+0x2330>
   1ef5c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ef60:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ef64:	add	x2, x2, #0x28
   1ef68:	add	x0, x0, #0x40
   1ef6c:	mov	x4, #0x0                   	// #0
   1ef70:	mov	x3, #0x0                   	// #0
   1ef74:	mov	w1, #0x22                  	// #34
   1ef78:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1ef7c:	ldr	x20, [x20, #4016]
   1ef80:	ldr	x0, [x20]
   1ef84:	cbz	x0, 1efe0 <OnPrint@@Base+0x2600>
   1ef88:	sub	x1, x0, #0x1
   1ef8c:	tst	x1, x0
   1ef90:	b.ne	1f020 <OnPrint@@Base+0x2640>  // b.any
   1ef94:	add	x1, x19, x1
   1ef98:	neg	x0, x0
   1ef9c:	and	x20, x1, x0
   1efa0:	mov	w2, #0x0                   	// #0
   1efa4:	add	x1, x24, #0x988
   1efa8:	mov	x0, x20
   1efac:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1efb0:	mov	x22, x0
   1efb4:	ldr	x1, [sp, #144]
   1efb8:	ldr	x2, [sp, #160]
   1efbc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1efc0:	ldp	x0, x1, [sp, #144]
   1efc4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1efc8:	stp	x22, x20, [sp, #144]
   1efcc:	ldr	x2, [sp, #160]
   1efd0:	b	1eda0 <OnPrint@@Base+0x23c0>
   1efd4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1efd8:	str	x0, [x22]
   1efdc:	b	1ef10 <OnPrint@@Base+0x2530>
   1efe0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1efe4:	str	x0, [x20]
   1efe8:	b	1ef88 <OnPrint@@Base+0x25a8>
   1efec:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1eff0:	add	x0, x0, #0x3b8
   1eff4:	bl	1ccf0 <OnPrint@@Base+0x310>
   1eff8:	ldr	x0, [sp, #168]
   1effc:	cbnz	x0, 1f030 <OnPrint@@Base+0x2650>
   1f000:	ldp	x0, x1, [sp, #144]
   1f004:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f008:	ldp	x0, x1, [sp, #112]
   1f00c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f010:	ldp	x23, x24, [sp, #32]
   1f014:	ldp	x25, x26, [sp, #48]
   1f018:	ldp	x27, x28, [sp, #64]
   1f01c:	b	1ec78 <OnPrint@@Base+0x2298>
   1f020:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f024:	add	x0, x0, #0x970
   1f028:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1f02c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f030:	ldr	x1, [sp, #144]
   1f034:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f038:	add	x0, x0, #0x98
   1f03c:	bl	1ccf0 <OnPrint@@Base+0x310>
   1f040:	b	1f000 <OnPrint@@Base+0x2620>
   1f044:	stp	x19, xzr, [sp, #128]
   1f048:	b	1ed2c <OnPrint@@Base+0x234c>
   1f04c:	mov	x19, x1
   1f050:	b	1ecb4 <OnPrint@@Base+0x22d4>
   1f054:	stp	x19, xzr, [sp, #160]
   1f058:	b	1edb8 <OnPrint@@Base+0x23d8>
   1f05c:	nop
   1f060:	mov	w8, w1
   1f064:	and	w7, w7, #0xff
   1f068:	mov	x1, x2
   1f06c:	mov	x9, x0
   1f070:	mov	x2, x3
   1f074:	mov	x3, x5
   1f078:	cbnz	w8, 1f088 <OnPrint@@Base+0x26a8>
   1f07c:	str	wzr, [x0, #8]
   1f080:	str	xzr, [x0, #2064]
   1f084:	ret
   1f088:	str	x2, [x0, #2064]
   1f08c:	cmp	w8, #0x1
   1f090:	b.eq	1f0b4 <OnPrint@@Base+0x26d4>  // b.none
   1f094:	cbnz	w7, 1f0a8 <OnPrint@@Base+0x26c8>
   1f098:	cbz	x4, 1f0c0 <OnPrint@@Base+0x26e0>
   1f09c:	mov	w3, w8
   1f0a0:	mov	x2, x4
   1f0a4:	b	28080 <__sanitizer_set_death_callback@@Base+0x1920>
   1f0a8:	mov	w5, w8
   1f0ac:	mov	x4, x6
   1f0b0:	b	1e9c8 <OnPrint@@Base+0x1fe8>
   1f0b4:	str	w8, [x9, #8]
   1f0b8:	str	x1, [x9, #16]
   1f0bc:	ret
   1f0c0:	mov	w2, w8
   1f0c4:	b	27fe0 <__sanitizer_set_death_callback@@Base+0x1880>

000000000001f0c8 <__sanitizer_symbolize_pc@@Base>:
   1f0c8:	cbnz	x3, 1f0d0 <__sanitizer_symbolize_pc@@Base+0x8>
   1f0cc:	ret
   1f0d0:	stp	x19, x20, [sp, #-112]!
   1f0d4:	mov	x19, x2
   1f0d8:	mov	x20, x3
   1f0dc:	stp	x21, x22, [sp, #16]
   1f0e0:	mov	x21, x0
   1f0e4:	stp	x23, x24, [sp, #32]
   1f0e8:	mov	x23, x1
   1f0ec:	str	x30, [sp, #72]
   1f0f0:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1f0f4:	sub	x1, x21, #0x4
   1f0f8:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   1f0fc:	mov	x21, x0
   1f100:	cbz	x0, 1f33c <__sanitizer_symbolize_pc@@Base+0x274>
   1f104:	stp	x25, x26, [sp, #48]
   1f108:	adrp	x26, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f10c:	ldr	x24, [x26, #4016]
   1f110:	ldr	x22, [x24]
   1f114:	str	x27, [sp, #64]
   1f118:	cbz	x22, 1f274 <__sanitizer_symbolize_pc@@Base+0x1ac>
   1f11c:	str	xzr, [sp, #80]
   1f120:	stp	xzr, xzr, [sp, #88]
   1f124:	sub	x0, x22, #0x1
   1f128:	tst	x0, x22
   1f12c:	b.ne	1f32c <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   1f130:	lsl	x0, x22, #1
   1f134:	neg	x25, x22
   1f138:	sub	x0, x0, #0x1
   1f13c:	mov	w2, #0x0                   	// #0
   1f140:	and	x25, x0, x25
   1f144:	adrp	x27, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f148:	mov	x0, x25
   1f14c:	add	x1, x27, #0x988
   1f150:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f154:	mov	x24, x0
   1f158:	ldr	x1, [sp, #80]
   1f15c:	ldr	x2, [sp, #96]
   1f160:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f164:	ldp	x0, x1, [sp, #80]
   1f168:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f16c:	stp	x24, x25, [sp, #80]
   1f170:	ldr	x2, [sp, #96]
   1f174:	cmp	x22, x2
   1f178:	b.ls	1f37c <__sanitizer_symbolize_pc@@Base+0x2b4>  // b.plast
   1f17c:	cmp	x22, x25
   1f180:	b.hi	1f2c8 <__sanitizer_symbolize_pc@@Base+0x200>  // b.pmore
   1f184:	add	x0, x24, x2
   1f188:	mov	w1, #0x0                   	// #0
   1f18c:	sub	x2, x22, x2
   1f190:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1f194:	ldr	x24, [sp, #80]
   1f198:	stp	x22, xzr, [sp, #96]
   1f19c:	sub	x20, x20, #0x1
   1f1a0:	strb	wzr, [x24]
   1f1a4:	add	x20, x19, x20
   1f1a8:	cmp	x19, x20
   1f1ac:	b.cs	1f244 <__sanitizer_symbolize_pc@@Base+0x17c>  // b.hs, b.nlast
   1f1b0:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f1b4:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f1b8:	add	x27, sp, #0x50
   1f1bc:	add	x26, x26, #0xd20
   1f1c0:	ldr	x25, [x25, #4056]
   1f1c4:	mov	w22, #0x0                   	// #0
   1f1c8:	ldr	x0, [sp, #96]
   1f1cc:	ldr	x1, [sp, #80]
   1f1d0:	cbz	x0, 1f290 <__sanitizer_symbolize_pc@@Base+0x1c8>
   1f1d4:	strb	wzr, [x1]
   1f1d8:	mov	x0, x27
   1f1dc:	mov	x6, x26
   1f1e0:	add	x3, x21, #0x8
   1f1e4:	ldrb	w4, [x25, #181]
   1f1e8:	mov	w2, w22
   1f1ec:	ldr	x5, [x25, #24]
   1f1f0:	mov	x1, x23
   1f1f4:	str	xzr, [sp, #104]
   1f1f8:	bl	20c10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   1f1fc:	ldr	x0, [sp, #104]
   1f200:	cbz	x0, 1f2b0 <__sanitizer_symbolize_pc@@Base+0x1e8>
   1f204:	ldr	x1, [sp, #80]
   1f208:	sub	x24, x20, x19
   1f20c:	sub	x24, x24, #0x1
   1f210:	mov	x0, x19
   1f214:	mov	x2, x24
   1f218:	add	w22, w22, #0x1
   1f21c:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   1f220:	ldr	x2, [sp, #104]
   1f224:	cmp	x2, x24
   1f228:	csel	x2, x2, x24, ls  // ls = plast
   1f22c:	add	x19, x19, x2
   1f230:	strb	wzr, [x19], #1
   1f234:	ldr	x21, [x21]
   1f238:	cmp	x21, #0x0
   1f23c:	ccmp	x20, x19, #0x0, ne  // ne = any
   1f240:	b.hi	1f1c8 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   1f244:	cmp	x19, x20
   1f248:	b.hi	1f35c <__sanitizer_symbolize_pc@@Base+0x294>  // b.pmore
   1f24c:	ldp	x0, x1, [sp, #80]
   1f250:	strb	wzr, [x19]
   1f254:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f258:	ldp	x25, x26, [sp, #48]
   1f25c:	ldr	x27, [sp, #64]
   1f260:	ldp	x21, x22, [sp, #16]
   1f264:	ldp	x23, x24, [sp, #32]
   1f268:	ldr	x30, [sp, #72]
   1f26c:	ldp	x19, x20, [sp], #112
   1f270:	ret
   1f274:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f278:	str	x0, [x24]
   1f27c:	str	xzr, [sp, #80]
   1f280:	mov	x22, x0
   1f284:	stp	xzr, xzr, [sp, #88]
   1f288:	cbnz	x0, 1f124 <__sanitizer_symbolize_pc@@Base+0x5c>
   1f28c:	stp	xzr, xzr, [sp, #96]
   1f290:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f294:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f298:	add	x2, x2, #0x9a0
   1f29c:	add	x0, x0, #0x9b8
   1f2a0:	mov	x4, #0x0                   	// #0
   1f2a4:	mov	x3, #0x0                   	// #0
   1f2a8:	mov	w1, #0x1b6                 	// #438
   1f2ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f2b0:	ldr	x21, [x21]
   1f2b4:	add	w22, w22, #0x1
   1f2b8:	cmp	x21, #0x0
   1f2bc:	ccmp	x20, x19, #0x0, ne  // ne = any
   1f2c0:	b.hi	1f1c8 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   1f2c4:	b	1f244 <__sanitizer_symbolize_pc@@Base+0x17c>
   1f2c8:	ldr	x26, [x26, #4016]
   1f2cc:	ldr	x0, [x26]
   1f2d0:	cbz	x0, 1f320 <__sanitizer_symbolize_pc@@Base+0x258>
   1f2d4:	sub	x1, x0, #0x1
   1f2d8:	tst	x0, x1
   1f2dc:	b.ne	1f32c <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   1f2e0:	add	x1, x22, x1
   1f2e4:	neg	x0, x0
   1f2e8:	and	x25, x1, x0
   1f2ec:	mov	w2, #0x0                   	// #0
   1f2f0:	add	x1, x27, #0x988
   1f2f4:	mov	x0, x25
   1f2f8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f2fc:	mov	x24, x0
   1f300:	ldr	x1, [sp, #80]
   1f304:	ldr	x2, [sp, #96]
   1f308:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f30c:	ldp	x0, x1, [sp, #80]
   1f310:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f314:	stp	x24, x25, [sp, #80]
   1f318:	ldr	x2, [sp, #96]
   1f31c:	b	1f184 <__sanitizer_symbolize_pc@@Base+0xbc>
   1f320:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f324:	str	x0, [x26]
   1f328:	b	1f2d4 <__sanitizer_symbolize_pc@@Base+0x20c>
   1f32c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f330:	add	x0, x0, #0x970
   1f334:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1f338:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f33c:	mov	x0, x19
   1f340:	add	x19, x19, x20
   1f344:	mov	x2, x20
   1f348:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f34c:	add	x1, x1, #0xb0
   1f350:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   1f354:	sturb	wzr, [x19, #-1]
   1f358:	b	1f260 <__sanitizer_symbolize_pc@@Base+0x198>
   1f35c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f360:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f364:	add	x2, x2, #0xc8
   1f368:	add	x0, x0, #0x40
   1f36c:	mov	x4, #0x0                   	// #0
   1f370:	mov	x3, #0x0                   	// #0
   1f374:	mov	w1, #0x84                  	// #132
   1f378:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f37c:	stp	x22, xzr, [sp, #96]
   1f380:	b	1f19c <__sanitizer_symbolize_pc@@Base+0xd4>
   1f384:	nop

000000000001f388 <__sanitizer_symbolize_global@@Base>:
   1f388:	cbnz	x3, 1f390 <__sanitizer_symbolize_global@@Base+0x8>
   1f38c:	ret
   1f390:	stp	x19, x20, [sp, #-176]!
   1f394:	mov	x20, x0
   1f398:	mov	x19, x3
   1f39c:	stp	x21, x22, [sp, #16]
   1f3a0:	mov	x22, x1
   1f3a4:	mov	x21, x2
   1f3a8:	stp	x23, x24, [sp, #32]
   1f3ac:	add	x23, sp, #0x70
   1f3b0:	mov	x0, x23
   1f3b4:	str	x30, [sp, #72]
   1f3b8:	strb	wzr, [x2]
   1f3bc:	bl	22ef8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3970>
   1f3c0:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1f3c4:	mov	x2, x23
   1f3c8:	mov	x1, x20
   1f3cc:	bl	24c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56b8>
   1f3d0:	tst	w0, #0xff
   1f3d4:	b.eq	1f4b8 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   1f3d8:	stp	x25, x26, [sp, #48]
   1f3dc:	adrp	x26, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f3e0:	ldr	x24, [x26, #4016]
   1f3e4:	ldr	x20, [x24]
   1f3e8:	str	x27, [sp, #64]
   1f3ec:	cbz	x20, 1f4cc <__sanitizer_symbolize_global@@Base+0x144>
   1f3f0:	str	xzr, [sp, #80]
   1f3f4:	stp	xzr, xzr, [sp, #88]
   1f3f8:	sub	x0, x20, #0x1
   1f3fc:	tst	x0, x20
   1f400:	b.ne	1f56c <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   1f404:	lsl	x0, x20, #1
   1f408:	neg	x25, x20
   1f40c:	sub	x0, x0, #0x1
   1f410:	mov	w2, #0x0                   	// #0
   1f414:	and	x25, x0, x25
   1f418:	adrp	x27, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f41c:	mov	x0, x25
   1f420:	add	x1, x27, #0x988
   1f424:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f428:	mov	x24, x0
   1f42c:	ldr	x1, [sp, #80]
   1f430:	ldr	x2, [sp, #96]
   1f434:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f438:	ldp	x0, x1, [sp, #80]
   1f43c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f440:	stp	x24, x25, [sp, #80]
   1f444:	ldr	x2, [sp, #96]
   1f448:	cmp	x20, x2
   1f44c:	b.ls	1f57c <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   1f450:	cmp	x20, x25
   1f454:	b.hi	1f508 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   1f458:	add	x0, x24, x2
   1f45c:	mov	w1, #0x0                   	// #0
   1f460:	sub	x2, x20, x2
   1f464:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1f468:	ldr	x24, [sp, #80]
   1f46c:	stp	x20, xzr, [sp, #96]
   1f470:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f474:	strb	wzr, [x24]
   1f478:	mov	x2, x23
   1f47c:	ldr	x3, [x3, #4056]
   1f480:	mov	x1, x22
   1f484:	add	x0, sp, #0x50
   1f488:	ldr	x3, [x3, #24]
   1f48c:	bl	20878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12f0>
   1f490:	ldr	x1, [sp, #80]
   1f494:	mov	x2, x19
   1f498:	mov	x0, x21
   1f49c:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   1f4a0:	ldp	x0, x1, [sp, #80]
   1f4a4:	add	x2, x21, x19
   1f4a8:	sturb	wzr, [x2, #-1]
   1f4ac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f4b0:	ldp	x25, x26, [sp, #48]
   1f4b4:	ldr	x27, [sp, #64]
   1f4b8:	ldp	x21, x22, [sp, #16]
   1f4bc:	ldp	x23, x24, [sp, #32]
   1f4c0:	ldr	x30, [sp, #72]
   1f4c4:	ldp	x19, x20, [sp], #176
   1f4c8:	ret
   1f4cc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f4d0:	str	x0, [x24]
   1f4d4:	str	xzr, [sp, #80]
   1f4d8:	mov	x20, x0
   1f4dc:	stp	xzr, xzr, [sp, #88]
   1f4e0:	cbnz	x0, 1f3f8 <__sanitizer_symbolize_global@@Base+0x70>
   1f4e4:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f4e8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f4ec:	add	x2, x2, #0x9a0
   1f4f0:	add	x0, x0, #0x9b8
   1f4f4:	mov	x4, #0x0                   	// #0
   1f4f8:	mov	x3, #0x0                   	// #0
   1f4fc:	mov	w1, #0x1b6                 	// #438
   1f500:	stp	xzr, xzr, [sp, #96]
   1f504:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   1f508:	ldr	x26, [x26, #4016]
   1f50c:	ldr	x0, [x26]
   1f510:	cbz	x0, 1f560 <__sanitizer_symbolize_global@@Base+0x1d8>
   1f514:	sub	x1, x0, #0x1
   1f518:	tst	x0, x1
   1f51c:	b.ne	1f56c <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   1f520:	add	x1, x20, x1
   1f524:	neg	x0, x0
   1f528:	and	x25, x1, x0
   1f52c:	mov	w2, #0x0                   	// #0
   1f530:	add	x1, x27, #0x988
   1f534:	mov	x0, x25
   1f538:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f53c:	mov	x24, x0
   1f540:	ldr	x1, [sp, #80]
   1f544:	ldr	x2, [sp, #96]
   1f548:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f54c:	ldp	x0, x1, [sp, #80]
   1f550:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f554:	stp	x24, x25, [sp, #80]
   1f558:	ldr	x2, [sp, #96]
   1f55c:	b	1f458 <__sanitizer_symbolize_global@@Base+0xd0>
   1f560:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f564:	str	x0, [x26]
   1f568:	b	1f514 <__sanitizer_symbolize_global@@Base+0x18c>
   1f56c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f570:	add	x0, x0, #0x970
   1f574:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1f578:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f57c:	stp	x20, xzr, [sp, #96]
   1f580:	b	1f470 <__sanitizer_symbolize_global@@Base+0xe8>
   1f584:	nop

000000000001f588 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   1f588:	stp	x19, x20, [sp, #-64]!
   1f58c:	mov	x19, x1
   1f590:	mov	x20, x2
   1f594:	stp	x21, x22, [sp, #16]
   1f598:	mov	x21, x0
   1f59c:	mov	x22, x3
   1f5a0:	str	x30, [sp, #32]
   1f5a4:	str	xzr, [sp, #56]
   1f5a8:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1f5ac:	mov	x1, x21
   1f5b0:	mov	x3, x22
   1f5b4:	add	x2, sp, #0x38
   1f5b8:	mov	w21, #0x0                   	// #0
   1f5bc:	bl	241c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
   1f5c0:	tst	w0, #0xff
   1f5c4:	b.eq	1f5d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   1f5c8:	cmp	x19, #0x0
   1f5cc:	mov	w21, #0x1                   	// #1
   1f5d0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1f5d4:	b.ne	1f5ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   1f5d8:	mov	w0, w21
   1f5dc:	ldp	x21, x22, [sp, #16]
   1f5e0:	ldr	x30, [sp, #32]
   1f5e4:	ldp	x19, x20, [sp], #64
   1f5e8:	ret
   1f5ec:	ldr	x1, [sp, #56]
   1f5f0:	mov	x0, x19
   1f5f4:	add	x19, x19, x20
   1f5f8:	mov	x2, x20
   1f5fc:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   1f600:	sturb	wzr, [x19, #-1]
   1f604:	mov	w0, w21
   1f608:	ldp	x21, x22, [sp, #16]
   1f60c:	ldr	x30, [sp, #32]
   1f610:	ldp	x19, x20, [sp], #64
   1f614:	ret
   1f618:	stp	x19, x20, [sp, #-96]!
   1f61c:	stp	x23, x24, [sp, #32]
   1f620:	adrp	x24, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f624:	mov	x23, x0
   1f628:	ldr	x19, [x24, #4016]
   1f62c:	stp	x21, x22, [sp, #16]
   1f630:	mov	x22, x1
   1f634:	stp	x25, x30, [sp, #48]
   1f638:	mov	x21, x2
   1f63c:	ldr	x3, [x19]
   1f640:	str	xzr, [sp, #64]
   1f644:	stp	xzr, xzr, [sp, #72]
   1f648:	cbz	x3, 1f740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b8>
   1f64c:	sub	x0, x3, #0x1
   1f650:	tst	x0, x3
   1f654:	b.ne	1f7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>  // b.any
   1f658:	add	x20, x3, #0x3ff
   1f65c:	neg	x3, x3
   1f660:	and	x20, x20, x3
   1f664:	mov	w2, #0x0                   	// #0
   1f668:	mov	x0, x20
   1f66c:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f670:	add	x1, x25, #0x988
   1f674:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f678:	ldr	x1, [sp, #64]
   1f67c:	mov	x19, x0
   1f680:	ldr	x2, [sp, #80]
   1f684:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f688:	ldp	x0, x1, [sp, #64]
   1f68c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f690:	stp	x19, x20, [sp, #64]
   1f694:	ldr	x2, [sp, #80]
   1f698:	cmp	x2, #0x3ff
   1f69c:	b.hi	1f6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.pmore
   1f6a0:	cmp	x20, #0x3ff
   1f6a4:	b.ls	1f750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>  // b.plast
   1f6a8:	mov	x3, #0x400                 	// #1024
   1f6ac:	add	x0, x19, x2
   1f6b0:	mov	w1, #0x0                   	// #0
   1f6b4:	sub	x2, x3, x2
   1f6b8:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1f6bc:	ldr	x19, [sp, #64]
   1f6c0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f6c4:	add	x20, sp, #0x40
   1f6c8:	mov	x2, x23
   1f6cc:	ldr	q0, [x0, #2992]
   1f6d0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f6d4:	mov	x0, x20
   1f6d8:	add	x1, x1, #0x288
   1f6dc:	str	q0, [sp, #80]
   1f6e0:	strb	wzr, [x19]
   1f6e4:	bl	1ce00 <OnPrint@@Base+0x420>
   1f6e8:	adrp	x4, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f6ec:	mov	x3, x22
   1f6f0:	mov	w2, #0x0                   	// #0
   1f6f4:	mov	x0, x20
   1f6f8:	ldr	x4, [x4, #4056]
   1f6fc:	adrp	x6, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f700:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f704:	add	x6, x6, #0xd20
   1f708:	add	x1, x1, #0xe8
   1f70c:	ldr	x5, [x4, #24]
   1f710:	ldrb	w4, [x4, #181]
   1f714:	bl	20c10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1688>
   1f718:	ldr	x0, [sp, #64]
   1f71c:	mov	x1, x21
   1f720:	bl	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
   1f724:	ldp	x0, x1, [sp, #64]
   1f728:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f72c:	ldp	x21, x22, [sp, #16]
   1f730:	ldp	x23, x24, [sp, #32]
   1f734:	ldp	x25, x30, [sp, #48]
   1f738:	ldp	x19, x20, [sp], #96
   1f73c:	ret
   1f740:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f744:	mov	x3, x0
   1f748:	str	x0, [x19]
   1f74c:	b	1f64c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4>
   1f750:	ldr	x24, [x24, #4016]
   1f754:	ldr	x0, [x24]
   1f758:	cbz	x0, 1f7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x230>
   1f75c:	sub	x1, x0, #0x1
   1f760:	tst	x1, x0
   1f764:	b.ne	1f7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>  // b.any
   1f768:	add	x20, x0, #0x3ff
   1f76c:	neg	x0, x0
   1f770:	and	x20, x20, x0
   1f774:	add	x1, x25, #0x988
   1f778:	mov	w2, #0x0                   	// #0
   1f77c:	mov	x0, x20
   1f780:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1f784:	mov	x19, x0
   1f788:	ldr	x1, [sp, #64]
   1f78c:	ldr	x2, [sp, #80]
   1f790:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1f794:	ldp	x0, x1, [sp, #64]
   1f798:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1f79c:	stp	x19, x20, [sp, #64]
   1f7a0:	ldr	x2, [sp, #80]
   1f7a4:	b	1f6a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x120>
   1f7a8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1f7ac:	add	x0, x0, #0x970
   1f7b0:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1f7b4:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1f7b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1f7bc:	str	x0, [x24]
   1f7c0:	b	1f75c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d4>
   1f7c4:	nop
   1f7c8:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f7cc:	ldr	x3, [x3, #4056]
   1f7d0:	ldrb	w3, [x3, #60]
   1f7d4:	cbnz	w3, 1f7dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x254>
   1f7d8:	ret
   1f7dc:	b	1f618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1f7e0:	stp	x19, x20, [sp, #-32]!
   1f7e4:	mov	x19, x0
   1f7e8:	mov	w1, #0x1                   	// #1
   1f7ec:	ldr	x20, [x0]
   1f7f0:	str	x30, [sp, #16]
   1f7f4:	ldxrb	w0, [x20]
   1f7f8:	stxrb	w2, w1, [x20]
   1f7fc:	cbnz	w2, 1f7f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26c>
   1f800:	dmb	ish
   1f804:	tst	w0, #0xff
   1f808:	b.eq	1f814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28c>  // b.none
   1f80c:	mov	x0, x20
   1f810:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1f814:	mov	x0, x19
   1f818:	bl	12d08 <__sanitizer_cov_dump@@Base+0x1fa8>
   1f81c:	ldr	w0, [x19, #8]
   1f820:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x7ce8>
   1f824:	dmb	ish
   1f828:	strb	wzr, [x20]
   1f82c:	ldr	x30, [sp, #16]
   1f830:	ldp	x19, x20, [sp], #32
   1f834:	ret
   1f838:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f83c:	stp	x19, x20, [sp, #-32]!
   1f840:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1f844:	ldr	x0, [x0, #4056]
   1f848:	add	x1, x1, #0xf0
   1f84c:	ldr	x19, [x0, #112]
   1f850:	str	x30, [sp, #16]
   1f854:	mov	x0, x19
   1f858:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1f85c:	mov	w1, #0x1                   	// #1
   1f860:	cbnz	w0, 1f874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec>
   1f864:	mov	w0, w1
   1f868:	ldr	x30, [sp, #16]
   1f86c:	ldp	x19, x20, [sp], #32
   1f870:	ret
   1f874:	mov	x0, x19
   1f878:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   1f87c:	add	x1, x1, #0x290
   1f880:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1f884:	mov	w1, #0x0                   	// #0
   1f888:	cbnz	w0, 1f864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dc>
   1f88c:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f890:	mov	w1, #0x1                   	// #1
   1f894:	ldr	x0, [x19, #3976]
   1f898:	ldr	x20, [x0]
   1f89c:	ldxrb	w0, [x20]
   1f8a0:	stxrb	w2, w1, [x20]
   1f8a4:	cbnz	w2, 1f89c <__sanitizer_get_module_and_offset_for_pc@@Base+0x314>
   1f8a8:	dmb	ish
   1f8ac:	tst	w0, #0xff
   1f8b0:	b.eq	1f8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x334>  // b.none
   1f8b4:	mov	x0, x20
   1f8b8:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1f8bc:	ldr	x19, [x19, #3976]
   1f8c0:	mov	x0, x19
   1f8c4:	bl	12d08 <__sanitizer_cov_dump@@Base+0x1fa8>
   1f8c8:	ldr	w0, [x19, #8]
   1f8cc:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x7ce8>
   1f8d0:	dmb	ish
   1f8d4:	and	w1, w0, #0xff
   1f8d8:	strb	wzr, [x20]
   1f8dc:	mov	w0, w1
   1f8e0:	ldr	x30, [sp, #16]
   1f8e4:	ldp	x19, x20, [sp], #32
   1f8e8:	ret
   1f8ec:	nop
   1f8f0:	stp	x19, x20, [sp, #-48]!
   1f8f4:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1f8f8:	ldr	x19, [x19, #4056]
   1f8fc:	stp	x21, x22, [sp, #16]
   1f900:	mov	x21, x2
   1f904:	ldrb	w2, [x19, #60]
   1f908:	str	x30, [sp, #32]
   1f90c:	cbz	w2, 1f978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f0>
   1f910:	ldr	w2, [x1, #8]
   1f914:	cbz	w2, 1f964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc>
   1f918:	mov	x20, x0
   1f91c:	ldr	x0, [x1]
   1f920:	ldr	x22, [x0]
   1f924:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1f928:	sub	x22, x22, #0x4
   1f92c:	mov	x1, x22
   1f930:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   1f934:	ldrb	w1, [x19, #60]
   1f938:	mov	x19, x0
   1f93c:	cbz	w1, 1f950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c8>
   1f940:	mov	x2, x21
   1f944:	mov	x0, x20
   1f948:	add	x1, x19, #0x8
   1f94c:	bl	1f618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1f950:	mov	x0, x19
   1f954:	ldp	x21, x22, [sp, #16]
   1f958:	ldr	x30, [sp, #32]
   1f95c:	ldp	x19, x20, [sp], #48
   1f960:	b	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   1f964:	ldp	x21, x22, [sp, #16]
   1f968:	mov	x1, #0x0                   	// #0
   1f96c:	ldr	x30, [sp, #32]
   1f970:	ldp	x19, x20, [sp], #48
   1f974:	b	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
   1f978:	ldp	x21, x22, [sp, #16]
   1f97c:	ldr	x30, [sp, #32]
   1f980:	ldp	x19, x20, [sp], #48
   1f984:	ret
   1f988:	and	w0, w0, #0x6
   1f98c:	cmp	w0, #0x6
   1f990:	b.eq	1f998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x410>  // b.none
   1f994:	ret
   1f998:	stp	x29, x30, [sp, #-96]!
   1f99c:	mov	x29, sp
   1f9a0:	stp	x19, x20, [sp, #16]
   1f9a4:	mov	x20, x30
   1f9a8:	stp	x21, x22, [sp, #32]
   1f9ac:	adrp	x22, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   1f9b0:	add	x19, x22, #0x280
   1f9b4:	stp	x23, x24, [sp, #48]
   1f9b8:	stp	x25, x26, [sp, #64]
   1f9bc:	bl	1b260 <__sanitizer_set_report_fd@@Base+0x7990>
   1f9c0:	mov	x21, x0
   1f9c4:	ldxr	x1, [x19]
   1f9c8:	cbnz	x1, 1f9d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c>
   1f9cc:	stlxr	w0, x21, [x19]
   1f9d0:	cbnz	w0, 1f9c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43c>
   1f9d4:	dmb	ish
   1f9d8:	cbz	x1, 1f9f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46c>
   1f9dc:	cmp	x21, x1
   1f9e0:	b.eq	1fc8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x704>  // b.none
   1f9e4:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
   1f9e8:	ldxr	x1, [x19]
   1f9ec:	cbz	x1, 1f9cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x444>
   1f9f0:	b	1f9d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c>
   1f9f4:	add	x0, x19, #0x8
   1f9f8:	mov	w2, #0x1                   	// #1
   1f9fc:	ldxrb	w1, [x0]
   1fa00:	stxrb	w3, w2, [x0]
   1fa04:	cbnz	w3, 1f9fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x474>
   1fa08:	dmb	ish
   1fa0c:	tst	w1, #0xff
   1fa10:	b.eq	1fa18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x490>  // b.none
   1fa14:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   1fa18:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fa1c:	bl	1f838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
   1fa20:	and	w24, w0, #0xff
   1fa24:	ldr	x19, [x23, #4016]
   1fa28:	ldr	x0, [x19]
   1fa2c:	cbz	x0, 1fbf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>
   1fa30:	sub	x1, x0, #0x1
   1fa34:	tst	x1, x0
   1fa38:	b.ne	1fc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>  // b.any
   1fa3c:	add	x21, x0, #0x817
   1fa40:	neg	x0, x0
   1fa44:	and	x21, x21, x0
   1fa48:	mov	w2, #0x0                   	// #0
   1fa4c:	mov	x0, x21
   1fa50:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fa54:	add	x1, x25, #0x988
   1fa58:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1fa5c:	mov	x2, #0x0                   	// #0
   1fa60:	mov	x1, #0x0                   	// #0
   1fa64:	mov	x19, x0
   1fa68:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1fa6c:	mov	x1, #0x0                   	// #0
   1fa70:	mov	x0, #0x0                   	// #0
   1fa74:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1fa78:	cmp	x21, #0x817
   1fa7c:	b.ls	1fc14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>  // b.plast
   1fa80:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fa84:	mov	w1, #0x0                   	// #0
   1fa88:	mov	x0, x19
   1fa8c:	mov	x2, #0x818                 	// #2072
   1fa90:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1fa94:	str	xzr, [x19, #2064]
   1fa98:	ldr	x1, [x23, #4056]
   1fa9c:	add	x0, x19, #0x10
   1faa0:	mov	x26, x29
   1faa4:	ldrb	w25, [x1, #33]
   1faa8:	str	x0, [x19]
   1faac:	str	xzr, [x19, #8]
   1fab0:	stp	xzr, xzr, [x29, #80]
   1fab4:	cbnz	w25, 1fbe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x658>
   1fab8:	ldp	x5, x6, [x29, #80]
   1fabc:	mov	w7, w25
   1fac0:	mov	x3, x26
   1fac4:	mov	x2, x20
   1fac8:	mov	x0, x19
   1facc:	mov	x4, #0x0                   	// #0
   1fad0:	mov	w1, #0x100                 	// #256
   1fad4:	bl	1f060 <OnPrint@@Base+0x2680>
   1fad8:	cbnz	w24, 1fba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   1fadc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fae0:	add	x20, x1, #0xd20
   1fae4:	mov	x1, x20
   1fae8:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1faec:	add	x0, x24, #0x8b0
   1faf0:	bl	1ccf0 <OnPrint@@Base+0x310>
   1faf4:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1faf8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fafc:	add	x0, x0, #0x108
   1fb00:	ldr	x1, [x1, #4024]
   1fb04:	ldr	x1, [x1]
   1fb08:	bl	1cd78 <OnPrint@@Base+0x398>
   1fb0c:	mov	x1, x20
   1fb10:	add	x0, x24, #0x8b0
   1fb14:	bl	1ccf0 <OnPrint@@Base+0x310>
   1fb18:	mov	x0, x19
   1fb1c:	bl	1ebf8 <OnPrint@@Base+0x2218>
   1fb20:	ldr	x23, [x23, #4056]
   1fb24:	ldrb	w0, [x23, #60]
   1fb28:	cbz	w0, 1fb74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>
   1fb2c:	ldr	w0, [x19, #8]
   1fb30:	cbz	w0, 1fc00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x678>
   1fb34:	ldr	x0, [x19]
   1fb38:	ldr	x20, [x0]
   1fb3c:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1fb40:	sub	x20, x20, #0x4
   1fb44:	mov	x1, x20
   1fb48:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   1fb4c:	ldrb	w1, [x23, #60]
   1fb50:	mov	x20, x0
   1fb54:	cbz	w1, 1fb6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e4>
   1fb58:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fb5c:	add	x1, x20, #0x8
   1fb60:	add	x0, x0, #0xf8
   1fb64:	mov	x2, #0x0                   	// #0
   1fb68:	bl	1f618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1fb6c:	mov	x0, x20
   1fb70:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   1fb74:	mov	x1, x21
   1fb78:	mov	x0, x19
   1fb7c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1fb80:	dmb	ish
   1fb84:	add	x0, x22, #0x280
   1fb88:	strb	wzr, [x0, #8]
   1fb8c:	str	xzr, [x22, #640]
   1fb90:	ldp	x19, x20, [sp, #16]
   1fb94:	ldp	x21, x22, [sp, #32]
   1fb98:	ldp	x23, x24, [sp, #48]
   1fb9c:	ldp	x25, x26, [sp, #64]
   1fba0:	ldp	x29, x30, [sp], #96
   1fba4:	ret
   1fba8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fbac:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fbb0:	add	x1, x1, #0x928
   1fbb4:	add	x0, x24, #0x8b0
   1fbb8:	bl	1ccf0 <OnPrint@@Base+0x310>
   1fbbc:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fbc0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fbc4:	add	x0, x0, #0x108
   1fbc8:	ldr	x1, [x1, #4024]
   1fbcc:	ldr	x1, [x1]
   1fbd0:	bl	1cd78 <OnPrint@@Base+0x398>
   1fbd4:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fbd8:	add	x1, x1, #0x938
   1fbdc:	b	1fb10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x588>
   1fbe0:	add	x2, x29, #0x58
   1fbe4:	add	x1, x29, #0x50
   1fbe8:	mov	w0, #0x0                   	// #0
   1fbec:	bl	19720 <__sanitizer_set_report_fd@@Base+0x5e50>
   1fbf0:	b	1fab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x530>
   1fbf4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1fbf8:	str	x0, [x19]
   1fbfc:	b	1fa30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   1fc00:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fc04:	mov	x1, #0x0                   	// #0
   1fc08:	add	x0, x0, #0xf8
   1fc0c:	bl	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
   1fc10:	b	1fb74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>
   1fc14:	ldr	x23, [x23, #4016]
   1fc18:	ldr	x0, [x23]
   1fc1c:	cbz	x0, 1fc80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f8>
   1fc20:	sub	x1, x0, #0x1
   1fc24:	tst	x1, x0
   1fc28:	b.ne	1fc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>  // b.any
   1fc2c:	add	x23, x0, #0x817
   1fc30:	neg	x0, x0
   1fc34:	and	x23, x23, x0
   1fc38:	add	x1, x25, #0x988
   1fc3c:	mov	x0, x23
   1fc40:	mov	w2, #0x0                   	// #0
   1fc44:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1fc48:	mov	x25, x0
   1fc4c:	mov	x2, #0x0                   	// #0
   1fc50:	mov	x1, x19
   1fc54:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1fc58:	mov	x1, x21
   1fc5c:	mov	x0, x19
   1fc60:	mov	x21, x23
   1fc64:	mov	x19, x25
   1fc68:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1fc6c:	b	1fa80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   1fc70:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fc74:	add	x0, x0, #0x970
   1fc78:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   1fc7c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   1fc80:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   1fc84:	str	x0, [x23]
   1fc88:	b	1fc20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>
   1fc8c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fc90:	ldr	x0, [x0, #4024]
   1fc94:	ldr	x19, [x0]
   1fc98:	mov	x0, x19
   1fc9c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   1fca0:	mov	x1, x0
   1fca4:	mov	x0, x19
   1fca8:	bl	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   1fcac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fcb0:	mov	x1, #0x2b                  	// #43
   1fcb4:	add	x0, x0, #0x320
   1fcb8:	bl	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   1fcbc:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fcc0:	ldr	x0, [x0, #4056]
   1fcc4:	ldr	w0, [x0, #216]
   1fcc8:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   1fccc:	nop
   1fcd0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fcd4:	stp	x19, x30, [sp, #-16]!
   1fcd8:	ldr	x0, [x0, #4024]
   1fcdc:	ldr	x19, [x0]
   1fce0:	mov	x0, x19
   1fce4:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   1fce8:	mov	x1, x0
   1fcec:	mov	x0, x19
   1fcf0:	bl	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   1fcf4:	ldp	x19, x30, [sp], #16
   1fcf8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fcfc:	add	x0, x0, #0x320
   1fd00:	mov	x1, #0xe                   	// #14
   1fd04:	add	x0, x0, #0x30
   1fd08:	b	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   1fd0c:	nop
   1fd10:	stp	x19, x20, [sp, #-272]!
   1fd14:	mov	x19, x0
   1fd18:	stp	x21, x22, [sp, #16]
   1fd1c:	mov	w21, w1
   1fd20:	mov	x22, x2
   1fd24:	stp	x23, x24, [sp, #32]
   1fd28:	mov	x23, x3
   1fd2c:	stp	x25, x26, [sp, #48]
   1fd30:	stp	x27, x28, [sp, #64]
   1fd34:	str	x30, [sp, #80]
   1fd38:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x7e70>
   1fd3c:	tst	w0, #0xff
   1fd40:	b.eq	1fecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x944>  // b.none
   1fd44:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fd48:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fd4c:	add	x1, x1, #0xf0
   1fd50:	ldr	x0, [x20, #4056]
   1fd54:	ldr	x24, [x0, #112]
   1fd58:	mov	x0, x24
   1fd5c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   1fd60:	cbnz	w0, 2037c <__sanitizer_get_module_and_offset_for_pc@@Base+0xdf4>
   1fd64:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fd68:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fd6c:	add	x0, x24, #0x8b0
   1fd70:	add	x1, x1, #0x928
   1fd74:	bl	1ccf0 <OnPrint@@Base+0x310>
   1fd78:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fd7c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fd80:	add	x2, x26, #0x320
   1fd84:	ldp	x3, x4, [x19, #16]
   1fd88:	mov	w7, w21
   1fd8c:	ldr	x0, [x0, #4024]
   1fd90:	add	x2, x2, #0x40
   1fd94:	ldp	x6, x5, [x19, #32]
   1fd98:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fd9c:	ldr	x1, [x0]
   1fda0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fda4:	add	x0, x0, #0x160
   1fda8:	bl	1cd78 <OnPrint@@Base+0x398>
   1fdac:	add	x0, x24, #0x8b0
   1fdb0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fdb4:	add	x1, x1, #0x938
   1fdb8:	bl	1ccf0 <OnPrint@@Base+0x310>
   1fdbc:	ldr	x21, [x25, #4016]
   1fdc0:	ldr	x0, [x21]
   1fdc4:	cbz	x0, 203f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>
   1fdc8:	sub	x1, x0, #0x1
   1fdcc:	tst	x1, x0
   1fdd0:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   1fdd4:	add	x24, x0, #0x817
   1fdd8:	neg	x0, x0
   1fddc:	and	x24, x24, x0
   1fde0:	mov	w2, #0x0                   	// #0
   1fde4:	mov	x0, x24
   1fde8:	adrp	x28, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fdec:	add	x1, x28, #0x988
   1fdf0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   1fdf4:	mov	x2, #0x0                   	// #0
   1fdf8:	mov	x1, #0x0                   	// #0
   1fdfc:	mov	x21, x0
   1fe00:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   1fe04:	mov	x1, #0x0                   	// #0
   1fe08:	mov	x0, #0x0                   	// #0
   1fe0c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1fe10:	cmp	x24, #0x817
   1fe14:	b.ls	205d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1050>  // b.plast
   1fe18:	mov	x2, #0x818                 	// #2072
   1fe1c:	mov	w1, #0x0                   	// #0
   1fe20:	mov	x0, x21
   1fe24:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   1fe28:	mov	x1, x23
   1fe2c:	mov	x2, x21
   1fe30:	add	x0, x21, #0x10
   1fe34:	str	x0, [x21]
   1fe38:	str	xzr, [x21, #8]
   1fe3c:	mov	x0, x19
   1fe40:	str	xzr, [x21, #2064]
   1fe44:	blr	x22
   1fe48:	mov	x0, x21
   1fe4c:	bl	1ebf8 <OnPrint@@Base+0x2218>
   1fe50:	ldr	x20, [x20, #4056]
   1fe54:	ldrb	w0, [x20, #60]
   1fe58:	cbz	w0, 1fea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x91c>
   1fe5c:	ldr	w0, [x21, #8]
   1fe60:	cbz	w0, 20418 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe90>
   1fe64:	ldr	x0, [x21]
   1fe68:	ldr	x19, [x0]
   1fe6c:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   1fe70:	sub	x19, x19, #0x4
   1fe74:	mov	x1, x19
   1fe78:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   1fe7c:	ldrb	w1, [x20, #60]
   1fe80:	mov	x19, x0
   1fe84:	cbz	w1, 1fe9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x914>
   1fe88:	add	x0, x26, #0x320
   1fe8c:	add	x1, x19, #0x8
   1fe90:	add	x0, x0, #0x40
   1fe94:	mov	x2, #0x0                   	// #0
   1fe98:	bl	1f618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   1fe9c:	mov	x0, x19
   1fea0:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   1fea4:	mov	x1, x24
   1fea8:	mov	x0, x21
   1feac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   1feb0:	ldp	x21, x22, [sp, #16]
   1feb4:	ldp	x23, x24, [sp, #32]
   1feb8:	ldp	x25, x26, [sp, #48]
   1febc:	ldp	x27, x28, [sp, #64]
   1fec0:	ldr	x30, [sp, #80]
   1fec4:	ldp	x19, x20, [sp], #272
   1fec8:	ret
   1fecc:	bl	1f838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0>
   1fed0:	tst	w0, #0xff
   1fed4:	b.ne	20228 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>  // b.any
   1fed8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1fedc:	add	x20, x0, #0xd20
   1fee0:	mov	x1, x20
   1fee4:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1fee8:	mov	x25, x0
   1feec:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   1fef0:	add	x0, x24, #0x8b0
   1fef4:	str	x25, [sp, #120]
   1fef8:	bl	1ccf0 <OnPrint@@Base+0x310>
   1fefc:	mov	x0, x19
   1ff00:	bl	1b0e0 <__sanitizer_set_report_fd@@Base+0x7810>
   1ff04:	ldr	x1, [x25, #4024]
   1ff08:	mov	w7, w21
   1ff0c:	ldp	x3, x4, [x19, #16]
   1ff10:	mov	x2, x0
   1ff14:	ldp	x6, x5, [x19, #32]
   1ff18:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   1ff1c:	ldr	x1, [x1]
   1ff20:	str	x0, [sp, #128]
   1ff24:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ff28:	add	x0, x0, #0x2c8
   1ff2c:	bl	1cd78 <OnPrint@@Base+0x398>
   1ff30:	mov	x1, x20
   1ff34:	add	x0, x24, #0x8b0
   1ff38:	bl	1ccf0 <OnPrint@@Base+0x310>
   1ff3c:	ldr	x20, [x25, #4016]
   1ff40:	ldr	x21, [x19, #24]
   1ff44:	ldr	x0, [x20]
   1ff48:	cbz	x0, 2029c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd14>
   1ff4c:	cmp	x0, x21
   1ff50:	b.hi	202ac <__sanitizer_get_module_and_offset_for_pc@@Base+0xd24>  // b.pmore
   1ff54:	ldrb	w0, [x19, #48]
   1ff58:	cbz	w0, 1ffb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa28>
   1ff5c:	ldr	w0, [x19, #52]
   1ff60:	cmp	w0, #0x2
   1ff64:	b.eq	2040c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe84>  // b.none
   1ff68:	cmp	w0, #0x1
   1ff6c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ff70:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ff74:	add	x1, x1, #0x140
   1ff78:	add	x0, x0, #0x148
   1ff7c:	csel	x1, x1, x0, eq  // eq = none
   1ff80:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ff84:	add	x0, x0, #0x1c0
   1ff88:	bl	1cd78 <OnPrint@@Base+0x398>
   1ff8c:	ldr	x20, [x25, #4016]
   1ff90:	ldr	x21, [x19, #16]
   1ff94:	ldr	x0, [x20]
   1ff98:	cbz	x0, 20480 <__sanitizer_get_module_and_offset_for_pc@@Base+0xef8>
   1ff9c:	cmp	x21, x0
   1ffa0:	b.cs	1ffb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa28>  // b.hs, b.nlast
   1ffa4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ffa8:	add	x0, x0, #0x1f0
   1ffac:	bl	1cd78 <OnPrint@@Base+0x398>
   1ffb0:	add	x27, sp, #0xa0
   1ffb4:	adrp	x21, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   1ffb8:	add	x26, sp, #0xc0
   1ffbc:	add	x21, x21, #0x218
   1ffc0:	mov	x0, x27
   1ffc4:	mov	w1, #0x1                   	// #1
   1ffc8:	ldr	x20, [x19, #24]
   1ffcc:	bl	1d060 <OnPrint@@Base+0x680>
   1ffd0:	stp	xzr, xzr, [sp, #216]
   1ffd4:	str	xzr, [sp, #264]
   1ffd8:	mov	x1, x26
   1ffdc:	mov	x0, x27
   1ffe0:	bl	1d908 <OnPrint@@Base+0xf28>
   1ffe4:	tst	w0, #0xff
   1ffe8:	b.eq	20028 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa0>  // b.none
   1ffec:	ldr	x0, [sp, #192]
   1fff0:	cmp	x20, x0
   1fff4:	b.cc	1ffd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>  // b.lo, b.ul, b.last
   1fff8:	ldr	x0, [sp, #200]
   1fffc:	cmp	x20, x0
   20000:	b.cs	1ffd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>  // b.hs, b.nlast
   20004:	ldr	x0, [sp, #232]
   20008:	tbnz	w0, #2, 1ffd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa50>
   2000c:	mov	x0, x21
   20010:	bl	1cd78 <OnPrint@@Base+0x398>
   20014:	mov	x1, x26
   20018:	mov	x0, x27
   2001c:	bl	1d908 <OnPrint@@Base+0xf28>
   20020:	tst	w0, #0xff
   20024:	b.ne	1ffec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>  // b.any
   20028:	mov	x0, x27
   2002c:	bl	1d1c8 <OnPrint@@Base+0x7e8>
   20030:	ldr	x20, [x25, #4016]
   20034:	ldr	x0, [x20]
   20038:	cbz	x0, 20464 <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   2003c:	sub	x1, x0, #0x1
   20040:	tst	x1, x0
   20044:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   20048:	add	x27, x0, #0x817
   2004c:	neg	x0, x0
   20050:	and	x27, x27, x0
   20054:	mov	w2, #0x0                   	// #0
   20058:	mov	x0, x27
   2005c:	adrp	x28, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20060:	add	x1, x28, #0x988
   20064:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   20068:	mov	x2, #0x0                   	// #0
   2006c:	mov	x1, #0x0                   	// #0
   20070:	mov	x21, x0
   20074:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   20078:	mov	x1, #0x0                   	// #0
   2007c:	mov	x0, #0x0                   	// #0
   20080:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   20084:	cmp	x27, #0x817
   20088:	b.ls	20578 <__sanitizer_get_module_and_offset_for_pc@@Base+0xff0>  // b.plast
   2008c:	mov	x2, #0x818                 	// #2072
   20090:	mov	w1, #0x0                   	// #0
   20094:	mov	x0, x21
   20098:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   2009c:	mov	x1, x23
   200a0:	mov	x2, x21
   200a4:	add	x0, x21, #0x10
   200a8:	str	x0, [x21]
   200ac:	str	xzr, [x21, #8]
   200b0:	mov	x0, x19
   200b4:	str	xzr, [x21, #2064]
   200b8:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   200bc:	blr	x22
   200c0:	mov	x0, x21
   200c4:	bl	1ebf8 <OnPrint@@Base+0x2218>
   200c8:	ldr	x0, [x20, #4056]
   200cc:	ldrb	w0, [x0, #232]
   200d0:	cbz	w0, 202e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   200d4:	ldr	x23, [x25, #4016]
   200d8:	ldr	x22, [x19, #24]
   200dc:	ldr	x0, [x23]
   200e0:	cbz	x0, 2042c <__sanitizer_get_module_and_offset_for_pc@@Base+0xea4>
   200e4:	cmp	x22, x0
   200e8:	b.cc	202e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.lo, b.ul, b.last
   200ec:	str	xzr, [sp, #192]
   200f0:	stp	xzr, xzr, [sp, #200]
   200f4:	sub	x1, x0, #0x1
   200f8:	tst	x1, x0
   200fc:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   20100:	add	x3, x0, #0x3ff
   20104:	neg	x0, x0
   20108:	and	x3, x3, x0
   2010c:	add	x1, x28, #0x988
   20110:	mov	x0, x3
   20114:	mov	w2, #0x0                   	// #0
   20118:	str	x3, [sp, #104]
   2011c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   20120:	mov	x23, x0
   20124:	ldr	x1, [sp, #192]
   20128:	ldr	x2, [sp, #208]
   2012c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   20130:	ldp	x0, x1, [sp, #192]
   20134:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   20138:	ldr	x3, [sp, #104]
   2013c:	stp	x23, x3, [sp, #192]
   20140:	ldr	x2, [sp, #208]
   20144:	cmp	x2, #0x3ff
   20148:	b.ls	20554 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfcc>  // b.plast
   2014c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20150:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20154:	add	x1, x1, #0x258
   20158:	ldr	q0, [x0, #2992]
   2015c:	mov	x0, x26
   20160:	str	q0, [sp, #208]
   20164:	strb	wzr, [x23]
   20168:	bl	1ce00 <OnPrint@@Base+0x420>
   2016c:	mov	x0, x22
   20170:	mov	x1, #0x10                  	// #16
   20174:	bl	1b7d8 <__sanitizer_set_report_fd@@Base+0x7f08>
   20178:	tst	w0, #0xff
   2017c:	b.eq	20634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10ac>  // b.none
   20180:	ldr	x0, [x20, #4056]
   20184:	str	x0, [sp, #112]
   20188:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2018c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20190:	add	x23, x0, #0xd20
   20194:	add	x0, x1, #0x150
   20198:	str	x0, [sp, #136]
   2019c:	add	x0, x22, #0x10
   201a0:	str	x0, [sp, #104]
   201a4:	b	201e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc58>
   201a8:	ldr	x3, [sp, #136]
   201ac:	adrp	x6, 40000 <__asan_backtrace_get_view@@Base+0x78>
   201b0:	asr	w4, w25, #4
   201b4:	add	x6, x6, #0x938
   201b8:	and	w5, w25, #0xf
   201bc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   201c0:	mov	x2, x23
   201c4:	add	x1, x0, #0x280
   201c8:	mov	x0, x26
   201cc:	bl	1ce00 <OnPrint@@Base+0x420>
   201d0:	add	x22, x22, #0x1
   201d4:	ldr	x0, [sp, #104]
   201d8:	cmp	x22, x0
   201dc:	b.eq	202bc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd34>  // b.none
   201e0:	ldr	x0, [sp, #112]
   201e4:	ldrb	w25, [x22]
   201e8:	ldr	x28, [x0, #112]
   201ec:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   201f0:	add	x1, x0, #0xf0
   201f4:	mov	x0, x28
   201f8:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   201fc:	cbz	w0, 201a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc20>
   20200:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   20204:	mov	x0, x28
   20208:	add	x1, x1, #0x290
   2020c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   20210:	cbz	w0, 2048c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf04>
   20214:	asr	w4, w25, #4
   20218:	and	w5, w25, #0xf
   2021c:	mov	x3, x23
   20220:	mov	x6, x23
   20224:	b	201bc <__sanitizer_get_module_and_offset_for_pc@@Base+0xc34>
   20228:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2022c:	add	x1, x1, #0x928
   20230:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   20234:	mov	x20, x0
   20238:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2023c:	add	x0, x24, #0x8b0
   20240:	str	x20, [sp, #120]
   20244:	bl	1ccf0 <OnPrint@@Base+0x310>
   20248:	mov	x0, x19
   2024c:	bl	1b0e0 <__sanitizer_set_report_fd@@Base+0x7810>
   20250:	ldr	x1, [x20, #4024]
   20254:	mov	w7, w21
   20258:	ldp	x3, x4, [x19, #16]
   2025c:	mov	x2, x0
   20260:	ldp	x6, x5, [x19, #32]
   20264:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   20268:	ldr	x1, [x1]
   2026c:	str	x0, [sp, #128]
   20270:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20274:	add	x0, x0, #0x2c8
   20278:	bl	1cd78 <OnPrint@@Base+0x398>
   2027c:	add	x0, x24, #0x8b0
   20280:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20284:	add	x1, x1, #0x938
   20288:	bl	1ccf0 <OnPrint@@Base+0x310>
   2028c:	ldr	x20, [x25, #4016]
   20290:	ldr	x21, [x19, #24]
   20294:	ldr	x0, [x20]
   20298:	cbnz	x0, 1ff4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x9c4>
   2029c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   202a0:	str	x0, [x20]
   202a4:	cmp	x0, x21
   202a8:	b.ls	1ff54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>  // b.plast
   202ac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   202b0:	add	x0, x0, #0x198
   202b4:	bl	1cd78 <OnPrint@@Base+0x398>
   202b8:	b	1ff54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>
   202bc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   202c0:	mov	x0, x26
   202c4:	add	x1, x1, #0x3b8
   202c8:	bl	1ce00 <OnPrint@@Base+0x420>
   202cc:	ldr	x1, [sp, #192]
   202d0:	add	x0, x24, #0x8b0
   202d4:	bl	1cd78 <OnPrint@@Base+0x398>
   202d8:	ldp	x0, x1, [sp, #192]
   202dc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   202e0:	ldr	x0, [x20, #4056]
   202e4:	ldrb	w0, [x0, #233]
   202e8:	cbnz	w0, 20400 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe78>
   202ec:	ldr	x0, [sp, #120]
   202f0:	ldr	x1, [x0, #4024]
   202f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   202f8:	add	x0, x0, #0x2a0
   202fc:	ldr	x1, [x1]
   20300:	bl	1ccf0 <OnPrint@@Base+0x310>
   20304:	ldr	x20, [x20, #4056]
   20308:	ldrb	w0, [x20, #60]
   2030c:	cbz	w0, 20354 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   20310:	ldr	w0, [x21, #8]
   20314:	cbz	w0, 20454 <__sanitizer_get_module_and_offset_for_pc@@Base+0xecc>
   20318:	ldr	x0, [x21]
   2031c:	ldr	x19, [x0]
   20320:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   20324:	sub	x19, x19, #0x4
   20328:	mov	x1, x19
   2032c:	bl	24e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5900>
   20330:	ldrb	w1, [x20, #60]
   20334:	mov	x19, x0
   20338:	cbz	w1, 2034c <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc4>
   2033c:	add	x1, x0, #0x8
   20340:	mov	x2, #0x0                   	// #0
   20344:	ldr	x0, [sp, #128]
   20348:	bl	1f618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   2034c:	mov	x0, x19
   20350:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   20354:	mov	x1, x27
   20358:	mov	x0, x21
   2035c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   20360:	ldp	x21, x22, [sp, #16]
   20364:	ldp	x23, x24, [sp, #32]
   20368:	ldp	x25, x26, [sp, #48]
   2036c:	ldp	x27, x28, [sp, #64]
   20370:	ldr	x30, [sp, #80]
   20374:	ldp	x19, x20, [sp], #272
   20378:	ret
   2037c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   20380:	mov	x0, x24
   20384:	add	x1, x1, #0x290
   20388:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   2038c:	cbz	w0, 204f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf6c>
   20390:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20394:	add	x25, x1, #0xd20
   20398:	mov	x1, x25
   2039c:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   203a0:	add	x0, x24, #0x8b0
   203a4:	bl	1ccf0 <OnPrint@@Base+0x310>
   203a8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   203ac:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   203b0:	ldp	x3, x4, [x19, #16]
   203b4:	add	x2, x26, #0x320
   203b8:	ldr	x0, [x0, #4024]
   203bc:	mov	w7, w21
   203c0:	ldp	x6, x5, [x19, #32]
   203c4:	add	x2, x2, #0x40
   203c8:	ldr	x1, [x0]
   203cc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   203d0:	add	x0, x0, #0x160
   203d4:	bl	1cd78 <OnPrint@@Base+0x398>
   203d8:	mov	x1, x25
   203dc:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   203e0:	add	x0, x24, #0x8b0
   203e4:	bl	1ccf0 <OnPrint@@Base+0x310>
   203e8:	ldr	x21, [x25, #4016]
   203ec:	ldr	x0, [x21]
   203f0:	cbnz	x0, 1fdc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x840>
   203f4:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   203f8:	str	x0, [x21]
   203fc:	b	1fdc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x840>
   20400:	ldr	x0, [x19, #8]
   20404:	bl	191b0 <__sanitizer_set_report_fd@@Base+0x58e0>
   20408:	b	202ec <__sanitizer_get_module_and_offset_for_pc@@Base+0xd64>
   2040c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20410:	add	x1, x1, #0x138
   20414:	b	1ff80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f8>
   20418:	add	x0, x26, #0x320
   2041c:	mov	x1, #0x0                   	// #0
   20420:	add	x0, x0, #0x40
   20424:	bl	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
   20428:	b	1fea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x91c>
   2042c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   20430:	str	x0, [x23]
   20434:	cmp	x22, x0
   20438:	b.cc	202e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.lo, b.ul, b.last
   2043c:	str	xzr, [sp, #192]
   20440:	stp	xzr, xzr, [sp, #200]
   20444:	cbnz	x0, 200f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb6c>
   20448:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   2044c:	str	x0, [x23]
   20450:	b	200f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb6c>
   20454:	ldr	x0, [sp, #128]
   20458:	mov	x1, #0x0                   	// #0
   2045c:	bl	ffa8 <__sanitizer_report_error_summary@@Base+0x10>
   20460:	b	20354 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdcc>
   20464:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   20468:	str	x0, [x20]
   2046c:	b	2003c <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   20470:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20474:	add	x0, x0, #0x970
   20478:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   2047c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20480:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   20484:	str	x0, [x20]
   20488:	b	1ff9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa14>
   2048c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   20490:	mov	w3, #0x1                   	// #1
   20494:	ldr	x0, [x1, #3976]
   20498:	ldr	x2, [x0]
   2049c:	ldxrb	w0, [x2]
   204a0:	stxrb	w4, w3, [x2]
   204a4:	cbnz	w4, 2049c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf14>
   204a8:	dmb	ish
   204ac:	tst	w0, #0xff
   204b0:	b.eq	204c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf3c>  // b.none
   204b4:	mov	x0, x2
   204b8:	stp	x2, x1, [sp, #144]
   204bc:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   204c0:	ldp	x2, x1, [sp, #144]
   204c4:	ldr	x0, [x1, #3976]
   204c8:	stp	x0, x2, [sp, #144]
   204cc:	bl	12d08 <__sanitizer_cov_dump@@Base+0x1fa8>
   204d0:	ldr	x0, [sp, #144]
   204d4:	ldr	w0, [x0, #8]
   204d8:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x7ce8>
   204dc:	dmb	ish
   204e0:	and	w0, w0, #0xff
   204e4:	ldr	x2, [sp, #152]
   204e8:	strb	wzr, [x2]
   204ec:	cbnz	w0, 201a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc20>
   204f0:	b	20214 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc8c>
   204f4:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   204f8:	mov	w2, #0x1                   	// #1
   204fc:	ldr	x0, [x1, #3976]
   20500:	ldr	x25, [x0]
   20504:	ldxrb	w0, [x25]
   20508:	stxrb	w3, w2, [x25]
   2050c:	cbnz	w3, 20504 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf7c>
   20510:	dmb	ish
   20514:	tst	w0, #0xff
   20518:	b.eq	2052c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfa4>  // b.none
   2051c:	mov	x0, x25
   20520:	str	x1, [sp, #104]
   20524:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   20528:	ldr	x1, [sp, #104]
   2052c:	ldr	x24, [x1, #3976]
   20530:	mov	x0, x24
   20534:	bl	12d08 <__sanitizer_cov_dump@@Base+0x1fa8>
   20538:	ldr	w0, [x24, #8]
   2053c:	bl	1b5b8 <__sanitizer_set_report_fd@@Base+0x7ce8>
   20540:	dmb	ish
   20544:	and	w0, w0, #0xff
   20548:	strb	wzr, [x25]
   2054c:	cbnz	w0, 1fd64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dc>
   20550:	b	20390 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe08>
   20554:	cmp	x3, #0x3ff
   20558:	b.ls	20660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10d8>  // b.plast
   2055c:	mov	x3, #0x400                 	// #1024
   20560:	add	x0, x23, x2
   20564:	mov	w1, #0x0                   	// #0
   20568:	sub	x2, x3, x2
   2056c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   20570:	ldr	x23, [sp, #192]
   20574:	b	2014c <__sanitizer_get_module_and_offset_for_pc@@Base+0xbc4>
   20578:	ldr	x20, [x25, #4016]
   2057c:	ldr	x0, [x20]
   20580:	cbz	x0, 20648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c0>
   20584:	sub	x1, x0, #0x1
   20588:	tst	x1, x0
   2058c:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   20590:	add	x20, x0, #0x817
   20594:	neg	x0, x0
   20598:	and	x20, x20, x0
   2059c:	add	x1, x28, #0x988
   205a0:	mov	x0, x20
   205a4:	mov	w2, #0x0                   	// #0
   205a8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   205ac:	str	x0, [sp, #104]
   205b0:	mov	x1, x21
   205b4:	mov	x2, #0x0                   	// #0
   205b8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   205bc:	ldr	x3, [sp, #104]
   205c0:	mov	x1, x27
   205c4:	mov	x0, x21
   205c8:	mov	x27, x20
   205cc:	mov	x21, x3
   205d0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   205d4:	b	2008c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb04>
   205d8:	ldr	x25, [x25, #4016]
   205dc:	ldr	x0, [x25]
   205e0:	cbz	x0, 20654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10cc>
   205e4:	sub	x1, x0, #0x1
   205e8:	tst	x1, x0
   205ec:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   205f0:	add	x25, x0, #0x817
   205f4:	neg	x0, x0
   205f8:	and	x25, x25, x0
   205fc:	add	x1, x28, #0x988
   20600:	mov	x0, x25
   20604:	mov	w2, #0x0                   	// #0
   20608:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   2060c:	mov	x27, x0
   20610:	mov	x2, #0x0                   	// #0
   20614:	mov	x1, x21
   20618:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   2061c:	mov	x1, x24
   20620:	mov	x0, x21
   20624:	mov	x24, x25
   20628:	mov	x21, x27
   2062c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   20630:	b	1fe18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x890>
   20634:	mov	x0, x26
   20638:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2063c:	add	x1, x1, #0x290
   20640:	bl	1ce00 <OnPrint@@Base+0x420>
   20644:	b	202cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd44>
   20648:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   2064c:	str	x0, [x20]
   20650:	b	20584 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   20654:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   20658:	str	x0, [x25]
   2065c:	b	205e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x105c>
   20660:	ldr	x25, [x25, #4016]
   20664:	ldr	x0, [x25]
   20668:	cbz	x0, 206b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1130>
   2066c:	sub	x1, x0, #0x1
   20670:	tst	x1, x0
   20674:	b.ne	20470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xee8>  // b.any
   20678:	add	x25, x0, #0x3ff
   2067c:	neg	x0, x0
   20680:	and	x25, x25, x0
   20684:	add	x1, x28, #0x988
   20688:	mov	w2, #0x0                   	// #0
   2068c:	mov	x0, x25
   20690:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   20694:	mov	x23, x0
   20698:	ldr	x1, [sp, #192]
   2069c:	ldr	x2, [sp, #208]
   206a0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   206a4:	ldp	x0, x1, [sp, #192]
   206a8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   206ac:	stp	x23, x25, [sp, #192]
   206b0:	ldr	x2, [sp, #208]
   206b4:	b	2055c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfd4>
   206b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   206bc:	str	x0, [x25]
   206c0:	b	2066c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10e4>
   206c4:	nop
   206c8:	stp	x19, x20, [sp, #-32]!
   206cc:	adrp	x19, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   206d0:	add	x19, x19, #0x280
   206d4:	str	x30, [sp, #16]
   206d8:	bl	1b260 <__sanitizer_set_report_fd@@Base+0x7990>
   206dc:	mov	x20, x0
   206e0:	ldxr	x1, [x19]
   206e4:	cbnz	x1, 206f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1168>
   206e8:	stlxr	w0, x20, [x19]
   206ec:	cbnz	w0, 206e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1158>
   206f0:	dmb	ish
   206f4:	cbz	x1, 20710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1188>
   206f8:	cmp	x20, x1
   206fc:	b.eq	20748 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11c0>  // b.none
   20700:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
   20704:	ldxr	x1, [x19]
   20708:	cbz	x1, 206e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1160>
   2070c:	b	206f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1168>
   20710:	add	x0, x19, #0x8
   20714:	mov	w2, #0x1                   	// #1
   20718:	ldxrb	w1, [x0]
   2071c:	stxrb	w3, w2, [x0]
   20720:	cbnz	w3, 20718 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1190>
   20724:	dmb	ish
   20728:	tst	w1, #0xff
   2072c:	b.eq	2073c <__sanitizer_get_module_and_offset_for_pc@@Base+0x11b4>  // b.none
   20730:	ldr	x30, [sp, #16]
   20734:	ldp	x19, x20, [sp], #32
   20738:	b	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   2073c:	ldr	x30, [sp, #16]
   20740:	ldp	x19, x20, [sp], #32
   20744:	ret
   20748:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2074c:	ldr	x0, [x0, #4024]
   20750:	ldr	x19, [x0]
   20754:	mov	x0, x19
   20758:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   2075c:	mov	x1, x0
   20760:	mov	x0, x19
   20764:	bl	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   20768:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2076c:	mov	x1, #0x2b                  	// #43
   20770:	add	x0, x0, #0x320
   20774:	bl	12cc8 <__sanitizer_cov_dump@@Base+0x1f68>
   20778:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2077c:	ldr	x0, [x0, #4056]
   20780:	ldr	w0, [x0, #216]
   20784:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   20788:	stp	x19, x20, [sp, #-128]!
   2078c:	mov	w20, w2
   20790:	stp	x21, x22, [sp, #16]
   20794:	mov	x22, x4
   20798:	mov	x21, x3
   2079c:	stp	x23, x24, [sp, #32]
   207a0:	mov	x23, x1
   207a4:	mov	x24, x0
   207a8:	str	x30, [sp, #48]
   207ac:	bl	1fcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x748>
   207b0:	add	x19, sp, #0x48
   207b4:	add	x0, sp, #0x40
   207b8:	bl	206c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1140>
   207bc:	stp	x24, x23, [sp, #72]
   207c0:	mov	x0, x19
   207c4:	bl	1b0a8 <__sanitizer_set_report_fd@@Base+0x77d8>
   207c8:	mov	x1, x0
   207cc:	mov	x0, x19
   207d0:	str	x1, [sp, #88]
   207d4:	bl	1b0b8 <__sanitizer_set_report_fd@@Base+0x77e8>
   207d8:	mov	w1, w0
   207dc:	mov	x0, x19
   207e0:	strb	w1, [sp, #120]
   207e4:	bl	19168 <__sanitizer_set_report_fd@@Base+0x5898>
   207e8:	mov	w1, w0
   207ec:	mov	x0, x19
   207f0:	str	w1, [sp, #124]
   207f4:	bl	191b8 <__sanitizer_set_report_fd@@Base+0x58e8>
   207f8:	mov	x3, x22
   207fc:	mov	x2, x21
   20800:	mov	w1, w20
   20804:	mov	x0, x19
   20808:	bl	1fd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x788>
   2080c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20810:	add	x0, x0, #0x308
   20814:	bl	1cd78 <OnPrint@@Base+0x398>
   20818:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   2081c:	nop
   20820:	dmb	ish
   20824:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   20828:	add	x1, x0, #0x280
   2082c:	strb	wzr, [x1, #8]
   20830:	str	xzr, [x0, #640]
   20834:	ret
   20838:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   2083c:	add	x0, x0, #0x280
   20840:	ldrb	w3, [x0, #8]
   20844:	and	x3, x3, #0xff
   20848:	cmp	x3, #0x1
   2084c:	b.ne	20854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12cc>  // b.any
   20850:	ret
   20854:	str	x30, [sp, #-16]!
   20858:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   2085c:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   20860:	add	x2, x2, #0x38
   20864:	add	x0, x0, #0x70
   20868:	mov	x4, #0x1                   	// #1
   2086c:	mov	w1, #0x2a                  	// #42
   20870:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20874:	nop
   20878:	stp	x19, x20, [sp, #-80]!
   2087c:	stp	x21, x22, [sp, #16]
   20880:	mov	x22, x2
   20884:	str	x30, [sp, #64]
   20888:	ldrb	w2, [x1]
   2088c:	cbz	w2, 20928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a0>
   20890:	mov	x19, x1
   20894:	mov	x21, x0
   20898:	stp	x23, x24, [sp, #32]
   2089c:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
   208a0:	mov	x24, x3
   208a4:	add	x23, x23, #0x8b0
   208a8:	stp	x25, x26, [sp, #48]
   208ac:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   208b0:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   208b4:	add	x25, x25, #0x378
   208b8:	b	208d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   208bc:	add	x19, x19, #0x2
   208c0:	add	x1, x26, #0x370
   208c4:	mov	x0, x21
   208c8:	bl	1ce00 <OnPrint@@Base+0x420>
   208cc:	ldrb	w2, [x20, #1]
   208d0:	cbz	w2, 20920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1398>
   208d4:	cmp	w2, #0x25
   208d8:	add	x20, x19, #0x1
   208dc:	b.ne	20964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13dc>  // b.any
   208e0:	ldrb	w2, [x19, #1]
   208e4:	cmp	w2, #0x6c
   208e8:	b.eq	20984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13fc>  // b.none
   208ec:	b.hi	20938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13b0>  // b.pmore
   208f0:	cmp	w2, #0x25
   208f4:	b.eq	208bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1334>  // b.none
   208f8:	cmp	w2, #0x67
   208fc:	b.ne	2099c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1414>  // b.any
   20900:	ldr	x2, [x22, #40]
   20904:	mov	x1, x23
   20908:	mov	x0, x21
   2090c:	add	x19, x19, #0x2
   20910:	bl	1ce00 <OnPrint@@Base+0x420>
   20914:	ldrb	w2, [x20, #1]
   20918:	cbnz	w2, 208d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   2091c:	nop
   20920:	ldp	x23, x24, [sp, #32]
   20924:	ldp	x25, x26, [sp, #48]
   20928:	ldp	x21, x22, [sp, #16]
   2092c:	ldr	x30, [sp, #64]
   20930:	ldp	x19, x20, [sp], #80
   20934:	ret
   20938:	cmp	w2, #0x73
   2093c:	b.ne	2099c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1414>  // b.any
   20940:	ldr	x0, [x22, #24]
   20944:	mov	x1, x24
   20948:	add	x19, x19, #0x2
   2094c:	bl	f6c0 <__sancov_default_options@@Base+0x2d10>
   20950:	mov	x2, x0
   20954:	mov	x1, x23
   20958:	mov	x0, x21
   2095c:	bl	1ce00 <OnPrint@@Base+0x420>
   20960:	b	208cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   20964:	mov	x0, x21
   20968:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2096c:	add	x1, x1, #0x8a8
   20970:	bl	1ce00 <OnPrint@@Base+0x420>
   20974:	mov	x0, x20
   20978:	mov	x20, x19
   2097c:	mov	x19, x0
   20980:	b	208cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   20984:	ldr	x2, [x22, #32]
   20988:	add	x19, x19, #0x2
   2098c:	mov	x1, x25
   20990:	mov	x0, x21
   20994:	bl	1ce00 <OnPrint@@Base+0x420>
   20998:	b	208cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   2099c:	mov	w1, w2
   209a0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   209a4:	add	x0, x0, #0x380
   209a8:	bl	1cd78 <OnPrint@@Base+0x398>
   209ac:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   209b0:	stp	x19, x20, [sp, #-48]!
   209b4:	cmp	w2, #0x0
   209b8:	and	w4, w4, #0xff
   209bc:	stp	x21, x22, [sp, #16]
   209c0:	mov	x20, x0
   209c4:	mov	w19, w2
   209c8:	str	x30, [sp, #32]
   209cc:	mov	x0, x1
   209d0:	mov	w21, w3
   209d4:	ccmp	w4, #0x0, #0x4, gt
   209d8:	mov	x1, x5
   209dc:	b.ne	20a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>  // b.any
   209e0:	bl	f6c0 <__sancov_default_options@@Base+0x2d10>
   209e4:	mov	x2, x0
   209e8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   209ec:	mov	x0, x20
   209f0:	add	x1, x1, #0x8b0
   209f4:	bl	1ce00 <OnPrint@@Base+0x420>
   209f8:	cmp	w19, #0x0
   209fc:	b.gt	20a10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>
   20a00:	ldp	x21, x22, [sp, #16]
   20a04:	ldr	x30, [sp, #32]
   20a08:	ldp	x19, x20, [sp], #48
   20a0c:	ret
   20a10:	adrp	x22, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20a14:	add	x22, x22, #0x3d0
   20a18:	mov	w2, w19
   20a1c:	mov	x1, x22
   20a20:	mov	x0, x20
   20a24:	bl	1ce00 <OnPrint@@Base+0x420>
   20a28:	cmp	w21, #0x0
   20a2c:	b.le	20a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1478>
   20a30:	mov	w2, w21
   20a34:	mov	x1, x22
   20a38:	mov	x0, x20
   20a3c:	ldp	x21, x22, [sp, #16]
   20a40:	ldr	x30, [sp, #32]
   20a44:	ldp	x19, x20, [sp], #48
   20a48:	b	1ce00 <OnPrint@@Base+0x420>
   20a4c:	bl	f6c0 <__sancov_default_options@@Base+0x2d10>
   20a50:	mov	x2, x0
   20a54:	mov	w3, w19
   20a58:	mov	x0, x20
   20a5c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20a60:	add	x1, x1, #0x3c0
   20a64:	bl	1ce00 <OnPrint@@Base+0x420>
   20a68:	cmp	w21, #0x0
   20a6c:	b.gt	20a8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1504>
   20a70:	mov	x0, x20
   20a74:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   20a78:	ldp	x21, x22, [sp, #16]
   20a7c:	add	x1, x1, #0xd30
   20a80:	ldr	x30, [sp, #32]
   20a84:	ldp	x19, x20, [sp], #48
   20a88:	b	1ce00 <OnPrint@@Base+0x420>
   20a8c:	mov	w2, w21
   20a90:	mov	x0, x20
   20a94:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20a98:	add	x1, x1, #0x3c8
   20a9c:	bl	1ce00 <OnPrint@@Base+0x420>
   20aa0:	mov	x0, x20
   20aa4:	adrp	x1, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   20aa8:	ldp	x21, x22, [sp, #16]
   20aac:	add	x1, x1, #0xd30
   20ab0:	ldr	x30, [sp, #32]
   20ab4:	ldp	x19, x20, [sp], #48
   20ab8:	b	1ce00 <OnPrint@@Base+0x420>
   20abc:	nop
   20ac0:	stp	x19, x20, [sp, #-32]!
   20ac4:	mov	x20, x0
   20ac8:	mov	w19, w3
   20acc:	mov	x0, x1
   20ad0:	mov	x1, x4
   20ad4:	stp	x21, x30, [sp, #16]
   20ad8:	mov	x21, x2
   20adc:	bl	f6c0 <__sancov_default_options@@Base+0x2d10>
   20ae0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20ae4:	mov	x2, x0
   20ae8:	add	x1, x1, #0x418
   20aec:	mov	x0, x20
   20af0:	bl	1ce00 <OnPrint@@Base+0x420>
   20af4:	cbnz	w19, 20b14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x158c>
   20af8:	mov	x2, x21
   20afc:	mov	x0, x20
   20b00:	ldp	x21, x30, [sp, #16]
   20b04:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b08:	ldp	x19, x20, [sp], #32
   20b0c:	add	x1, x1, #0x450
   20b10:	b	1ce00 <OnPrint@@Base+0x420>
   20b14:	cmp	w19, #0x5
   20b18:	b.eq	20be4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x165c>  // b.none
   20b1c:	b.hi	20b64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15dc>  // b.pmore
   20b20:	cmp	w19, #0x3
   20b24:	b.eq	20bd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>  // b.none
   20b28:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b2c:	cmp	w19, #0x4
   20b30:	add	x2, x1, #0x400
   20b34:	b.ne	20b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>  // b.any
   20b38:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b3c:	mov	x0, x20
   20b40:	add	x1, x1, #0x448
   20b44:	bl	1ce00 <OnPrint@@Base+0x420>
   20b48:	mov	x2, x21
   20b4c:	mov	x0, x20
   20b50:	ldp	x21, x30, [sp, #16]
   20b54:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b58:	ldp	x19, x20, [sp], #32
   20b5c:	add	x1, x1, #0x450
   20b60:	b	1ce00 <OnPrint@@Base+0x420>
   20b64:	cmp	w19, #0x7
   20b68:	b.eq	20bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1644>  // b.none
   20b6c:	cmp	w19, #0x8
   20b70:	b.ne	20bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1624>  // b.any
   20b74:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b78:	mov	x0, x20
   20b7c:	add	x2, x1, #0x408
   20b80:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20b84:	add	x1, x1, #0x448
   20b88:	bl	1ce00 <OnPrint@@Base+0x420>
   20b8c:	b	20b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c0>
   20b90:	cmp	w19, #0x1
   20b94:	b.eq	20bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1638>  // b.none
   20b98:	cmp	w19, #0x2
   20b9c:	b.ne	20bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1668>  // b.any
   20ba0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20ba4:	add	x2, x1, #0x3e0
   20ba8:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20bac:	cmp	w19, #0x6
   20bb0:	b.ne	20bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1668>  // b.any
   20bb4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20bb8:	add	x2, x1, #0x410
   20bbc:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20bc0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20bc4:	add	x2, x1, #0x3e8
   20bc8:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20bcc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20bd0:	add	x2, x1, #0x3d8
   20bd4:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20bd8:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20bdc:	add	x2, x1, #0x3f8
   20be0:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20be4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20be8:	add	x2, x1, #0x3f0
   20bec:	b	20b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b0>
   20bf0:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20bf4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20bf8:	add	x2, x2, #0x420
   20bfc:	add	x0, x0, #0x9b8
   20c00:	mov	x4, #0x0                   	// #0
   20c04:	mov	x3, #0x0                   	// #0
   20c08:	mov	w1, #0x2a9                 	// #681
   20c0c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   20c10:	stp	x19, x20, [sp, #-112]!
   20c14:	mov	x19, x1
   20c18:	mov	x20, x0
   20c1c:	mov	x0, x1
   20c20:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   20c24:	add	x1, x1, #0x298
   20c28:	stp	x21, x22, [sp, #16]
   20c2c:	mov	x21, x3
   20c30:	mov	x22, x6
   20c34:	stp	x23, x24, [sp, #32]
   20c38:	mov	x23, x5
   20c3c:	stp	x25, x26, [sp, #48]
   20c40:	mov	w26, w2
   20c44:	stp	x27, x28, [sp, #64]
   20c48:	and	w27, w4, #0xff
   20c4c:	str	x30, [sp, #80]
   20c50:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   20c54:	cbz	w0, 20f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19f8>
   20c58:	ldrb	w2, [x19]
   20c5c:	cbz	w2, 20d30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   20c60:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20c64:	adrp	x24, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20c68:	add	x25, x25, #0x378
   20c6c:	add	x24, x24, #0x460
   20c70:	b	20d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1778>
   20c74:	ldrb	w2, [x19, #1]
   20c78:	cmp	w2, #0x6c
   20c7c:	b.eq	20f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19e0>  // b.none
   20c80:	b.hi	20da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>  // b.pmore
   20c84:	cmp	w2, #0x4d
   20c88:	b.eq	20f30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19a8>  // b.none
   20c8c:	b.ls	20d74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17ec>  // b.plast
   20c90:	cmp	w2, #0x63
   20c94:	b.eq	20f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1990>  // b.none
   20c98:	cmp	w2, #0x66
   20c9c:	b.ne	20d4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c4>  // b.any
   20ca0:	ldr	x3, [x21, #32]
   20ca4:	cbz	x3, 20ce0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1758>
   20ca8:	cbz	x22, 20ce0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1758>
   20cac:	mov	x0, x22
   20cb0:	str	x3, [sp, #96]
   20cb4:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   20cb8:	mov	x2, x0
   20cbc:	ldr	x3, [sp, #96]
   20cc0:	mov	x1, x22
   20cc4:	stp	x2, x3, [sp, #96]
   20cc8:	mov	x0, x3
   20ccc:	bl	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
   20cd0:	cmp	w0, #0x0
   20cd4:	ldp	x2, x3, [sp, #96]
   20cd8:	add	x2, x3, x2
   20cdc:	csel	x3, x2, x3, eq  // eq = none
   20ce0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20ce4:	mov	x2, x3
   20ce8:	add	x19, x19, #0x2
   20cec:	mov	x0, x20
   20cf0:	add	x1, x1, #0x8b0
   20cf4:	bl	1ce00 <OnPrint@@Base+0x420>
   20cf8:	ldrb	w2, [x28, #1]
   20cfc:	cbz	w2, 20d30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a8>
   20d00:	cmp	w2, #0x25
   20d04:	add	x28, x19, #0x1
   20d08:	b.eq	20c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16ec>  // b.none
   20d0c:	mov	x0, x20
   20d10:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20d14:	add	x1, x1, #0x8a8
   20d18:	bl	1ce00 <OnPrint@@Base+0x420>
   20d1c:	mov	x0, x28
   20d20:	mov	x28, x19
   20d24:	mov	x19, x0
   20d28:	ldrb	w2, [x28, #1]
   20d2c:	cbnz	w2, 20d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1778>
   20d30:	ldp	x21, x22, [sp, #16]
   20d34:	ldp	x23, x24, [sp, #32]
   20d38:	ldp	x25, x26, [sp, #48]
   20d3c:	ldp	x27, x28, [sp, #64]
   20d40:	ldr	x30, [sp, #80]
   20d44:	ldp	x19, x20, [sp], #112
   20d48:	ret
   20d4c:	cmp	w2, #0x53
   20d50:	b.ne	20fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   20d54:	ldp	w2, w3, [x21, #56]
   20d58:	add	x19, x19, #0x2
   20d5c:	ldr	x1, [x21, #48]
   20d60:	mov	x5, x23
   20d64:	mov	w4, w27
   20d68:	mov	x0, x20
   20d6c:	bl	209b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>
   20d70:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20d74:	cmp	w2, #0x46
   20d78:	b.eq	20e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18f8>  // b.none
   20d7c:	cmp	w2, #0x4c
   20d80:	b.ne	20ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1854>  // b.any
   20d84:	ldr	x1, [x21, #48]
   20d88:	add	x19, x19, #0x2
   20d8c:	cbz	x1, 20f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   20d90:	ldp	w2, w3, [x21, #56]
   20d94:	mov	x5, x23
   20d98:	mov	w4, w27
   20d9c:	mov	x0, x20
   20da0:	bl	209b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>
   20da4:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20da8:	cmp	w2, #0x70
   20dac:	b.eq	20f00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>  // b.none
   20db0:	b.ls	20e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18a4>  // b.plast
   20db4:	cmp	w2, #0x71
   20db8:	b.ne	20dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1874>  // b.any
   20dbc:	ldr	x2, [x21, #40]
   20dc0:	add	x19, x19, #0x2
   20dc4:	mov	x1, x24
   20dc8:	mov	x0, x20
   20dcc:	cmn	x2, #0x1
   20dd0:	csel	x2, x2, xzr, ne  // ne = any
   20dd4:	bl	1ce00 <OnPrint@@Base+0x420>
   20dd8:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20ddc:	cmp	w2, #0x25
   20de0:	b.ne	20fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   20de4:	add	x19, x19, #0x2
   20de8:	mov	x0, x20
   20dec:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20df0:	add	x1, x1, #0x370
   20df4:	bl	1ce00 <OnPrint@@Base+0x420>
   20df8:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20dfc:	cmp	w2, #0x73
   20e00:	b.ne	20fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   20e04:	ldr	x0, [x21, #48]
   20e08:	mov	x1, x23
   20e0c:	bl	f6c0 <__sancov_default_options@@Base+0x2d10>
   20e10:	add	x19, x19, #0x2
   20e14:	mov	x2, x0
   20e18:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   20e1c:	mov	x0, x20
   20e20:	add	x1, x1, #0x8b0
   20e24:	bl	1ce00 <OnPrint@@Base+0x420>
   20e28:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20e2c:	cmp	w2, #0x6e
   20e30:	b.eq	20e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18dc>  // b.none
   20e34:	cmp	w2, #0x6f
   20e38:	b.ne	20e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>  // b.any
   20e3c:	ldr	x2, [x21, #16]
   20e40:	add	x19, x19, #0x2
   20e44:	mov	x1, x24
   20e48:	mov	x0, x20
   20e4c:	bl	1ce00 <OnPrint@@Base+0x420>
   20e50:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20e54:	cmp	w2, #0x6d
   20e58:	b.ne	20fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a50>  // b.any
   20e5c:	ldr	x0, [x21, #8]
   20e60:	b	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1880>
   20e64:	add	x19, x19, #0x2
   20e68:	mov	w2, w26
   20e6c:	mov	x0, x20
   20e70:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20e74:	add	x1, x1, #0x458
   20e78:	bl	1ce00 <OnPrint@@Base+0x420>
   20e7c:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20e80:	ldr	x3, [x21, #32]
   20e84:	add	x19, x19, #0x2
   20e88:	cbz	x3, 20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20e8c:	cbz	x22, 20ec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x193c>
   20e90:	mov	x0, x22
   20e94:	str	x3, [sp, #96]
   20e98:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   20e9c:	mov	x2, x0
   20ea0:	ldr	x3, [sp, #96]
   20ea4:	mov	x1, x22
   20ea8:	stp	x2, x3, [sp, #96]
   20eac:	mov	x0, x3
   20eb0:	bl	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
   20eb4:	cmp	w0, #0x0
   20eb8:	ldp	x2, x3, [sp, #96]
   20ebc:	add	x2, x3, x2
   20ec0:	csel	x3, x2, x3, eq  // eq = none
   20ec4:	mov	x0, x20
   20ec8:	mov	x2, x3
   20ecc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20ed0:	add	x1, x1, #0x468
   20ed4:	bl	1ce00 <OnPrint@@Base+0x420>
   20ed8:	ldr	x0, [x21, #48]
   20edc:	cbnz	x0, 20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20ee0:	ldr	x2, [x21, #40]
   20ee4:	cmn	x2, #0x1
   20ee8:	b.eq	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>  // b.none
   20eec:	mov	x0, x20
   20ef0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20ef4:	add	x1, x1, #0x470
   20ef8:	bl	1ce00 <OnPrint@@Base+0x420>
   20efc:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f00:	ldr	x2, [x21]
   20f04:	add	x19, x19, #0x2
   20f08:	mov	x1, x24
   20f0c:	mov	x0, x20
   20f10:	bl	1ce00 <OnPrint@@Base+0x420>
   20f14:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f18:	ldr	w2, [x21, #60]
   20f1c:	add	x19, x19, #0x2
   20f20:	mov	x1, x25
   20f24:	mov	x0, x20
   20f28:	bl	1ce00 <OnPrint@@Base+0x420>
   20f2c:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f30:	ldr	x2, [x21]
   20f34:	add	x19, x19, #0x2
   20f38:	tbnz	x2, #60, 20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f3c:	ldr	x0, [x21, #8]
   20f40:	cbz	x0, 20fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   20f44:	bl	f740 <__sancov_default_options@@Base+0x2d90>
   20f48:	mov	x1, x0
   20f4c:	ldr	w3, [x21, #24]
   20f50:	mov	x0, x20
   20f54:	ldr	x2, [x21, #16]
   20f58:	adrp	x4, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20f5c:	add	x4, x4, #0xd20
   20f60:	bl	20ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   20f64:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f68:	ldr	w2, [x21, #56]
   20f6c:	add	x19, x19, #0x2
   20f70:	mov	x1, x25
   20f74:	mov	x0, x20
   20f78:	bl	1ce00 <OnPrint@@Base+0x420>
   20f7c:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20f80:	adrp	x19, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20f84:	mov	w2, #0x20                  	// #32
   20f88:	add	x19, x19, #0x4a0
   20f8c:	b	20c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>
   20f90:	ldr	x1, [x21, #8]
   20f94:	cbz	x1, 20fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a3c>
   20f98:	ldr	w3, [x21, #24]
   20f9c:	mov	x4, x23
   20fa0:	ldr	x2, [x21, #16]
   20fa4:	mov	x0, x20
   20fa8:	bl	20ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1538>
   20fac:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20fb0:	mov	x0, x20
   20fb4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20fb8:	add	x1, x1, #0x490
   20fbc:	bl	1ce00 <OnPrint@@Base+0x420>
   20fc0:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20fc4:	mov	x0, x20
   20fc8:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20fcc:	add	x1, x1, #0x478
   20fd0:	bl	1ce00 <OnPrint@@Base+0x420>
   20fd4:	b	20cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1770>
   20fd8:	mov	w1, w2
   20fdc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   20fe0:	add	x0, x0, #0x380
   20fe4:	bl	1cd78 <OnPrint@@Base+0x398>
   20fe8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   20fec:	nop
   20ff0:	ldr	x0, [x0, #24]
   20ff4:	ret
   20ff8:	mov	x0, #0x22                  	// #34
   20ffc:	ret
   21000:	ldr	x4, [x0, #24]
   21004:	cmp	x1, x4
   21008:	b.cs	21018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a90>  // b.hs, b.nlast
   2100c:	ldr	x0, [x0, #8]
   21010:	ldr	x0, [x0, x1, lsl #3]
   21014:	ret
   21018:	str	x30, [sp, #-16]!
   2101c:	mov	x3, x1
   21020:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21024:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21028:	add	x2, x2, #0x4b8
   2102c:	add	x0, x0, #0x4e0
   21030:	mov	w1, #0x202                 	// #514
   21034:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21038:	stp	x19, x20, [sp, #-352]!
   2103c:	mov	x19, x2
   21040:	adrp	x4, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   21044:	ldr	x2, [x0]
   21048:	stp	x21, x22, [sp, #16]
   2104c:	add	x4, x4, #0x0
   21050:	stp	x23, x30, [sp, #32]
   21054:	mov	x20, x3
   21058:	ldr	x2, [x2, #24]
   2105c:	cmp	x2, x4
   21060:	b.ne	21104 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.any
   21064:	ldr	x4, [x0, #24]
   21068:	mov	x3, x1
   2106c:	cmp	x1, x4
   21070:	b.cs	21128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba0>  // b.hs, b.nlast
   21074:	ldr	x0, [x0, #8]
   21078:	ldr	x21, [x0, x1, lsl #3]
   2107c:	add	x3, sp, #0x40
   21080:	mov	x2, #0x1                   	// #1
   21084:	mov	w1, w21
   21088:	add	x22, sp, #0x50
   2108c:	mov	x23, #0x110                 	// #272
   21090:	mov	w0, #0x4204                	// #16900
   21094:	stp	x22, x23, [sp, #64]
   21098:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   2109c:	add	x1, sp, #0x3c
   210a0:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   210a4:	tst	w0, #0xff
   210a8:	b.eq	210d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b50>  // b.none
   210ac:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   210b0:	ldr	w2, [sp, #60]
   210b4:	ldr	x0, [x0, #3896]
   210b8:	ldr	w0, [x0]
   210bc:	cbnz	w0, 21110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   210c0:	cmp	w2, #0x3
   210c4:	csetm	w0, eq  // eq = none
   210c8:	ldp	x21, x22, [sp, #16]
   210cc:	ldp	x23, x30, [sp, #32]
   210d0:	ldp	x19, x20, [sp], #352
   210d4:	ret
   210d8:	ldr	x0, [sp, #328]
   210dc:	str	x0, [x20]
   210e0:	mov	x2, x23
   210e4:	mov	x1, x22
   210e8:	mov	x0, x19
   210ec:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   210f0:	mov	w0, #0x1                   	// #1
   210f4:	ldp	x21, x22, [sp, #16]
   210f8:	ldp	x23, x30, [sp, #32]
   210fc:	ldp	x19, x20, [sp], #352
   21100:	ret
   21104:	blr	x2
   21108:	mov	x21, x0
   2110c:	b	2107c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af4>
   21110:	mov	w1, w21
   21114:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21118:	add	x0, x0, #0x538
   2111c:	bl	1cd78 <OnPrint@@Base+0x398>
   21120:	ldr	w2, [sp, #60]
   21124:	b	210c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b38>
   21128:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2112c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21130:	add	x2, x2, #0x4b8
   21134:	add	x0, x0, #0x4e0
   21138:	mov	w1, #0x202                 	// #514
   2113c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21140:	stp	x19, x20, [sp, #-32]!
   21144:	adrp	x20, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21148:	ldr	x19, [x20, #656]
   2114c:	str	x30, [sp, #24]
   21150:	cbz	x19, 2116c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   21154:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   21158:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2115c:	ldr	x1, [x1, #3848]
   21160:	ldr	x1, [x1]
   21164:	cmp	x0, x1
   21168:	b.eq	21178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bf0>  // b.none
   2116c:	ldr	x30, [sp, #24]
   21170:	ldp	x19, x20, [sp], #32
   21174:	ret
   21178:	ldr	x0, [x19, #32]
   2117c:	cbz	x0, 211b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c2c>
   21180:	str	x21, [sp, #16]
   21184:	mov	x21, #0x0                   	// #0
   21188:	ldr	x1, [x19, #16]
   2118c:	mov	x3, #0x0                   	// #0
   21190:	mov	x2, #0x0                   	// #0
   21194:	mov	w0, #0x8                   	// #8
   21198:	ldr	x1, [x1, x21, lsl #3]
   2119c:	add	x21, x21, #0x1
   211a0:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   211a4:	ldr	x0, [x19, #32]
   211a8:	cmp	x0, x21
   211ac:	b.hi	21188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c00>  // b.pmore
   211b0:	ldr	x21, [sp, #16]
   211b4:	str	xzr, [x20, #656]
   211b8:	b	2116c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1be4>
   211bc:	nop
   211c0:	stp	x19, x20, [sp, #-96]!
   211c4:	mov	x19, x1
   211c8:	mov	x20, x0
   211cc:	ldr	x1, [x0, #32]
   211d0:	stp	x21, x22, [sp, #16]
   211d4:	str	x30, [sp, #64]
   211d8:	cbz	x1, 21218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c90>
   211dc:	mov	x2, #0x0                   	// #0
   211e0:	ldr	x4, [x0, #16]
   211e4:	b	211f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c6c>
   211e8:	add	x2, x2, #0x1
   211ec:	cmp	x2, x1
   211f0:	b.eq	21218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c90>  // b.none
   211f4:	ldr	x3, [x4, x2, lsl #3]
   211f8:	cmp	x19, x3
   211fc:	b.ne	211e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c60>  // b.any
   21200:	mov	w21, #0x0                   	// #0
   21204:	mov	w0, w21
   21208:	ldp	x21, x22, [sp, #16]
   2120c:	ldr	x30, [sp, #64]
   21210:	ldp	x19, x20, [sp], #96
   21214:	ret
   21218:	mov	x3, #0x0                   	// #0
   2121c:	mov	x2, #0x0                   	// #0
   21220:	mov	w1, w19
   21224:	mov	w0, #0x10                  	// #16
   21228:	stp	x23, x24, [sp, #32]
   2122c:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   21230:	add	x1, sp, #0x50
   21234:	mov	w23, w19
   21238:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   2123c:	ands	w21, w0, #0xff
   21240:	b.ne	2133c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>  // b.any
   21244:	stp	x25, x26, [sp, #48]
   21248:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2124c:	ldr	x0, [x25, #3896]
   21250:	ldr	w0, [x0]
   21254:	sxtw	x0, w0
   21258:	cmp	x0, #0x1
   2125c:	b.hi	21368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1de0>  // b.pmore
   21260:	add	x24, sp, #0x54
   21264:	add	x22, sp, #0x58
   21268:	mov	w2, #0x40000000            	// #1073741824
   2126c:	mov	x1, x24
   21270:	mov	w0, w23
   21274:	bl	18080 <__sanitizer_set_report_fd@@Base+0x47b0>
   21278:	mov	x1, x22
   2127c:	mov	x26, x0
   21280:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   21284:	tst	w0, #0xff
   21288:	b.eq	21298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d10>  // b.none
   2128c:	ldr	w0, [sp, #88]
   21290:	cmp	w0, #0x4
   21294:	b.eq	21268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce0>  // b.none
   21298:	mov	x0, x26
   2129c:	mov	x1, x22
   212a0:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   212a4:	tst	w0, #0xff
   212a8:	b.ne	21464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1edc>  // b.any
   212ac:	ldr	w3, [sp, #84]
   212b0:	and	w0, w3, #0xff
   212b4:	cmp	w0, #0x7f
   212b8:	b.ne	212e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d58>  // b.any
   212bc:	ubfx	x3, x3, #8, #8
   212c0:	cmp	w3, #0x13
   212c4:	b.eq	212e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d58>  // b.none
   212c8:	and	x3, x3, #0xff
   212cc:	mov	w1, w23
   212d0:	mov	x2, #0x0                   	// #0
   212d4:	mov	w0, #0x7                   	// #7
   212d8:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   212dc:	b	21268 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce0>
   212e0:	ldr	x4, [x20, #24]
   212e4:	str	x19, [sp, #88]
   212e8:	ldr	x3, [x20, #32]
   212ec:	add	x21, x20, #0x10
   212f0:	lsr	x4, x4, #3
   212f4:	cmp	x3, x4
   212f8:	b.hi	2144c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec4>  // b.pmore
   212fc:	add	x19, x3, #0x1
   21300:	b.eq	2137c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df4>  // b.none
   21304:	ldr	x23, [x20, #16]
   21308:	str	x19, [x21, #16]
   2130c:	mov	x1, x22
   21310:	add	x0, x23, x3, lsl #3
   21314:	mov	x2, #0x8                   	// #8
   21318:	mov	w21, #0x1                   	// #1
   2131c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21320:	mov	w0, w21
   21324:	ldp	x21, x22, [sp, #16]
   21328:	ldp	x23, x24, [sp, #32]
   2132c:	ldp	x25, x26, [sp, #48]
   21330:	ldr	x30, [sp, #64]
   21334:	ldp	x19, x20, [sp], #96
   21338:	ret
   2133c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21340:	mov	w21, #0x0                   	// #0
   21344:	ldr	x0, [x0, #3896]
   21348:	ldr	w0, [x0]
   2134c:	cbnz	w0, 21430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>
   21350:	mov	w0, w21
   21354:	ldp	x21, x22, [sp, #16]
   21358:	ldp	x23, x24, [sp, #32]
   2135c:	ldr	x30, [sp, #64]
   21360:	ldp	x19, x20, [sp], #96
   21364:	ret
   21368:	mov	x1, x19
   2136c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21370:	add	x0, x0, #0x5a0
   21374:	bl	1cd78 <OnPrint@@Base+0x398>
   21378:	b	21260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cd8>
   2137c:	tst	x3, x19
   21380:	b.eq	213bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e34>  // b.none
   21384:	clz	x2, x19
   21388:	mov	w1, #0x3f                  	// #63
   2138c:	sub	w2, w1, w2
   21390:	mov	x1, #0x1                   	// #1
   21394:	add	w4, w2, #0x1
   21398:	lsl	x4, x1, x4
   2139c:	cmp	x4, x19
   213a0:	b.ls	214fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f74>  // b.plast
   213a4:	lsl	x1, x1, x2
   213a8:	cmp	x1, x19
   213ac:	b.cs	214dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>  // b.hs, b.nlast
   213b0:	cmp	x3, x4
   213b4:	b.hi	214b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f2c>  // b.pmore
   213b8:	mov	x19, x4
   213bc:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   213c0:	lsl	x19, x19, #3
   213c4:	ldr	x23, [x23, #4016]
   213c8:	ldr	x0, [x23]
   213cc:	cbz	x0, 21490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f08>
   213d0:	sub	x1, x0, #0x1
   213d4:	tst	x0, x1
   213d8:	b.ne	214cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f44>  // b.any
   213dc:	add	x19, x19, x1
   213e0:	neg	x0, x0
   213e4:	and	x19, x19, x0
   213e8:	mov	w2, #0x0                   	// #0
   213ec:	mov	x0, x19
   213f0:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   213f4:	add	x1, x1, #0x988
   213f8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   213fc:	ldr	x1, [x20, #16]
   21400:	mov	x23, x0
   21404:	ldr	x2, [x21, #16]
   21408:	lsl	x2, x2, #3
   2140c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21410:	ldr	x1, [x21, #8]
   21414:	ldr	x0, [x20, #16]
   21418:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   2141c:	ldr	x3, [x21, #16]
   21420:	str	x23, [x20, #16]
   21424:	str	x19, [x21, #8]
   21428:	add	x19, x3, #0x1
   2142c:	b	21308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d80>
   21430:	ldr	w2, [sp, #80]
   21434:	mov	x1, x19
   21438:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2143c:	add	x0, x0, #0x570
   21440:	bl	1cd78 <OnPrint@@Base+0x398>
   21444:	ldp	x23, x24, [sp, #32]
   21448:	b	21204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c7c>
   2144c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   21450:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21454:	add	x2, x2, #0xce0
   21458:	add	x0, x0, #0x9b8
   2145c:	mov	w1, #0x1be                 	// #446
   21460:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21464:	ldr	x25, [x25, #3896]
   21468:	ldr	w0, [x25]
   2146c:	cbnz	w0, 2149c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f14>
   21470:	mov	w1, w19
   21474:	mov	x3, #0x0                   	// #0
   21478:	mov	x2, #0x0                   	// #0
   2147c:	mov	w0, #0x11                  	// #17
   21480:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   21484:	ldp	x23, x24, [sp, #32]
   21488:	ldp	x25, x26, [sp, #48]
   2148c:	b	21204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c7c>
   21490:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21494:	str	x0, [x23]
   21498:	b	213d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e48>
   2149c:	ldr	w2, [sp, #88]
   214a0:	mov	x1, x19
   214a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   214a8:	add	x0, x0, #0x5c0
   214ac:	bl	1cd78 <OnPrint@@Base+0x398>
   214b0:	b	21470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ee8>
   214b4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   214b8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   214bc:	add	x2, x2, #0xd58
   214c0:	add	x0, x0, #0x9b8
   214c4:	mov	w1, #0x1fd                 	// #509
   214c8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   214cc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   214d0:	add	x0, x0, #0x970
   214d4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   214d8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   214dc:	mov	x4, x1
   214e0:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   214e4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   214e8:	mov	x3, x19
   214ec:	add	x2, x2, #0xd38
   214f0:	add	x0, x0, #0x9b8
   214f4:	mov	w1, #0x17c                 	// #380
   214f8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   214fc:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   21500:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21504:	mov	x3, x19
   21508:	add	x2, x2, #0xd10
   2150c:	add	x0, x0, #0x9b8
   21510:	mov	w1, #0x17b                 	// #379
   21514:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21518:	stp	x19, x20, [sp, #-80]!
   2151c:	mov	x20, x0
   21520:	ldr	x0, [x0, #32]
   21524:	str	x30, [sp, #56]
   21528:	cbz	x0, 215ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2064>
   2152c:	mov	x19, #0x0                   	// #0
   21530:	stp	x21, x22, [sp, #16]
   21534:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21538:	stp	x23, x24, [sp, #32]
   2153c:	adrp	x24, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21540:	add	x23, sp, #0x4c
   21544:	add	x24, x24, #0x5f8
   21548:	str	x25, [sp, #48]
   2154c:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21550:	add	x25, x25, #0x618
   21554:	b	21588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2000>
   21558:	ldr	x2, [x22, #3896]
   2155c:	mov	w1, w21
   21560:	mov	x0, x24
   21564:	ldr	w2, [x2]
   21568:	sxtw	x2, w2
   2156c:	cmp	x2, #0x1
   21570:	b.ls	21578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>  // b.plast
   21574:	bl	1cd78 <OnPrint@@Base+0x398>
   21578:	ldr	x0, [x20, #32]
   2157c:	add	x19, x19, #0x1
   21580:	cmp	x0, x19
   21584:	b.ls	215e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>  // b.plast
   21588:	ldr	x1, [x20, #16]
   2158c:	mov	x3, #0x0                   	// #0
   21590:	mov	x2, #0x0                   	// #0
   21594:	mov	w0, #0x11                  	// #17
   21598:	ldr	x21, [x1, x19, lsl #3]
   2159c:	mov	w1, w21
   215a0:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   215a4:	mov	x1, x23
   215a8:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   215ac:	tst	w0, #0xff
   215b0:	b.eq	21558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd0>  // b.none
   215b4:	ldr	x0, [x22, #3896]
   215b8:	ldr	w0, [x0]
   215bc:	cbz	w0, 21578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>
   215c0:	ldr	w2, [sp, #76]
   215c4:	mov	x0, x25
   215c8:	mov	w1, w21
   215cc:	add	x19, x19, #0x1
   215d0:	bl	1cd78 <OnPrint@@Base+0x398>
   215d4:	ldr	x0, [x20, #32]
   215d8:	cmp	x0, x19
   215dc:	b.hi	21588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2000>  // b.pmore
   215e0:	ldp	x21, x22, [sp, #16]
   215e4:	ldp	x23, x24, [sp, #32]
   215e8:	ldr	x25, [sp, #48]
   215ec:	ldr	x30, [sp, #56]
   215f0:	ldp	x19, x20, [sp], #80
   215f4:	ret
   215f8:	stp	x19, x20, [sp, #-32]!
   215fc:	mov	x20, x0
   21600:	ldr	x0, [x0, #32]
   21604:	str	x30, [sp, #16]
   21608:	cbz	x0, 21638 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20b0>
   2160c:	mov	x19, #0x0                   	// #0
   21610:	ldr	x1, [x20, #16]
   21614:	mov	x3, #0x0                   	// #0
   21618:	mov	x2, #0x0                   	// #0
   2161c:	mov	w0, #0x8                   	// #8
   21620:	ldr	x1, [x1, x19, lsl #3]
   21624:	add	x19, x19, #0x1
   21628:	bl	18068 <__sanitizer_set_report_fd@@Base+0x4798>
   2162c:	ldr	x0, [x20, #32]
   21630:	cmp	x0, x19
   21634:	b.hi	21610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.pmore
   21638:	ldr	x30, [sp, #16]
   2163c:	ldp	x19, x20, [sp], #32
   21640:	ret
   21644:	nop
   21648:	stp	x19, x20, [sp, #-96]!
   2164c:	mov	w20, w0
   21650:	add	x19, sp, #0x28
   21654:	stp	x21, x30, [sp, #16]
   21658:	mov	x0, x19
   2165c:	stp	x1, x2, [sp, #40]
   21660:	bl	1b0a8 <__sanitizer_set_report_fd@@Base+0x77d8>
   21664:	mov	x1, x0
   21668:	mov	x0, x19
   2166c:	str	x1, [sp, #56]
   21670:	adrp	x21, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21674:	bl	1b0b8 <__sanitizer_set_report_fd@@Base+0x77e8>
   21678:	mov	w1, w0
   2167c:	mov	x0, x19
   21680:	strb	w1, [sp, #88]
   21684:	bl	19168 <__sanitizer_set_report_fd@@Base+0x5898>
   21688:	mov	w1, w0
   2168c:	mov	x0, x19
   21690:	str	w1, [sp, #92]
   21694:	bl	191b8 <__sanitizer_set_report_fd@@Base+0x58e8>
   21698:	ldp	x2, x3, [sp, #56]
   2169c:	mov	w1, w20
   216a0:	ldr	x4, [sp, #72]
   216a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   216a8:	add	x0, x0, #0x648
   216ac:	bl	1ccf0 <OnPrint@@Base+0x310>
   216b0:	ldr	x19, [x21, #656]
   216b4:	cbz	x19, 216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2164>
   216b8:	mov	x0, x19
   216bc:	cmp	w20, #0x6
   216c0:	b.eq	216fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2174>  // b.none
   216c4:	bl	21518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   216c8:	adrp	x0, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   216cc:	add	x0, x0, #0x140
   216d0:	bl	265a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7020>
   216d4:	tst	w0, #0xff
   216d8:	b.eq	21704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x217c>  // b.none
   216dc:	ldr	x0, [x19]
   216e0:	mov	x1, #0x1                   	// #1
   216e4:	str	xzr, [x21, #656]
   216e8:	str	x1, [x0, #104]
   216ec:	cmp	w20, #0x6
   216f0:	cset	w0, ne  // ne = any
   216f4:	add	w0, w0, #0x1
   216f8:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   216fc:	bl	215f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2070>
   21700:	b	216c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2140>
   21704:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21708:	add	x0, x0, #0x680
   2170c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   21710:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21714:	nop
   21718:	stp	x19, x20, [sp, #-128]!
   2171c:	stp	x21, x22, [sp, #16]
   21720:	mov	x21, x0
   21724:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21728:	stp	x23, x24, [sp, #32]
   2172c:	add	x23, sp, #0x60
   21730:	ldr	w1, [x21, #40]
   21734:	mov	x0, x23
   21738:	stp	x25, x30, [sp, #48]
   2173c:	bl	182e0 <__sanitizer_set_report_fd@@Base+0x4a10>
   21740:	str	xzr, [sp, #64]
   21744:	ldr	x19, [x22, #4016]
   21748:	stp	xzr, xzr, [sp, #72]
   2174c:	ldr	x0, [x19]
   21750:	cbz	x0, 218e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2360>
   21754:	sub	x1, x0, #0x1
   21758:	tst	x1, x0
   2175c:	b.ne	218f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x236c>  // b.any
   21760:	add	x19, x0, #0x7
   21764:	neg	x0, x0
   21768:	and	x19, x19, x0
   2176c:	mov	w2, #0x0                   	// #0
   21770:	mov	x0, x19
   21774:	adrp	x24, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21778:	add	x1, x24, #0x988
   2177c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   21780:	ldr	x1, [sp, #64]
   21784:	mov	x20, x0
   21788:	ldr	x2, [sp, #80]
   2178c:	lsl	x2, x2, #3
   21790:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21794:	ldp	x0, x1, [sp, #64]
   21798:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   2179c:	stp	x20, x19, [sp, #64]
   217a0:	cmp	x19, #0x3ff
   217a4:	b.ls	21884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22fc>  // b.plast
   217a8:	add	x25, sp, #0x40
   217ac:	mov	w24, #0x0                   	// #0
   217b0:	mov	x1, x25
   217b4:	mov	x0, x23
   217b8:	bl	186f0 <__sanitizer_set_report_fd@@Base+0x4e20>
   217bc:	cbz	w0, 21848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c0>
   217c0:	cmp	w0, #0x1
   217c4:	b.ne	217e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x225c>  // b.any
   217c8:	ldr	x19, [sp, #64]
   217cc:	ldr	x22, [sp, #80]
   217d0:	add	x22, x19, x22, lsl #3
   217d4:	cmp	x22, x19
   217d8:	b.eq	2192c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a4>  // b.none
   217dc:	mov	w20, w0
   217e0:	b	21800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2278>
   217e4:	ldr	x19, [sp, #64]
   217e8:	ldr	x22, [sp, #80]
   217ec:	add	x22, x19, x22, lsl #3
   217f0:	cmp	x22, x19
   217f4:	b.eq	21838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b0>  // b.none
   217f8:	mov	w20, #0x0                   	// #0
   217fc:	nop
   21800:	ldr	x1, [x19], #8
   21804:	mov	x0, x21
   21808:	bl	211c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c38>
   2180c:	ands	w0, w0, #0xff
   21810:	csel	w20, w20, w0, eq  // eq = none
   21814:	cmp	x22, x19
   21818:	b.ne	21800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2278>  // b.any
   2181c:	eor	w20, w20, #0x1
   21820:	and	w20, w20, #0xff
   21824:	add	w24, w24, #0x1
   21828:	cmp	w20, #0x0
   2182c:	ccmp	w24, #0x1d, #0x0, eq  // eq = none
   21830:	b.le	217b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   21834:	ldr	x19, [sp, #64]
   21838:	ldr	x0, [x21, #32]
   2183c:	cmp	x0, #0x0
   21840:	cset	w20, ne  // ne = any
   21844:	b	21858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22d0>
   21848:	mov	x0, x21
   2184c:	bl	21518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   21850:	ldr	x19, [sp, #64]
   21854:	mov	w20, #0x0                   	// #0
   21858:	ldr	x1, [sp, #72]
   2185c:	mov	x0, x19
   21860:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21864:	mov	x0, x23
   21868:	bl	18b50 <__sanitizer_set_report_fd@@Base+0x5280>
   2186c:	mov	w0, w20
   21870:	ldp	x21, x22, [sp, #16]
   21874:	ldp	x23, x24, [sp, #32]
   21878:	ldp	x25, x30, [sp, #48]
   2187c:	ldp	x19, x20, [sp], #128
   21880:	ret
   21884:	ldr	x3, [sp, #80]
   21888:	cmp	x3, #0x80
   2188c:	b.hi	21910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2388>  // b.pmore
   21890:	ldr	x22, [x22, #4016]
   21894:	ldr	x0, [x22]
   21898:	cbz	x0, 21904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x237c>
   2189c:	sub	x1, x0, #0x1
   218a0:	tst	x1, x0
   218a4:	b.ne	218f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x236c>  // b.any
   218a8:	add	x19, x0, #0x3ff
   218ac:	neg	x0, x0
   218b0:	and	x19, x19, x0
   218b4:	add	x1, x24, #0x988
   218b8:	mov	w2, #0x0                   	// #0
   218bc:	mov	x0, x19
   218c0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   218c4:	mov	x20, x0
   218c8:	ldr	x1, [sp, #64]
   218cc:	ldr	x2, [sp, #80]
   218d0:	lsl	x2, x2, #3
   218d4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   218d8:	ldp	x0, x1, [sp, #64]
   218dc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   218e0:	stp	x20, x19, [sp, #64]
   218e4:	b	217a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2220>
   218e8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   218ec:	str	x0, [x19]
   218f0:	b	21754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   218f4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   218f8:	add	x0, x0, #0x970
   218fc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   21900:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21904:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21908:	str	x0, [x22]
   2190c:	b	2189c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2314>
   21910:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   21914:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21918:	add	x2, x2, #0xd58
   2191c:	add	x0, x0, #0x9b8
   21920:	mov	x4, #0x80                  	// #128
   21924:	mov	w1, #0x1fd                 	// #509
   21928:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2192c:	mov	w20, #0x0                   	// #0
   21930:	b	21824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x229c>
   21934:	nop
   21938:	stp	x19, x20, [sp, #-336]!
   2193c:	mov	x1, #0x9                   	// #9
   21940:	mov	x4, #0x0                   	// #0
   21944:	mov	x3, #0x0                   	// #0
   21948:	mov	x2, #0x0                   	// #0
   2194c:	stp	x21, x22, [sp, #16]
   21950:	mov	x21, x0
   21954:	mov	w0, #0x1                   	// #1
   21958:	stp	x23, x24, [sp, #32]
   2195c:	stp	x25, x26, [sp, #48]
   21960:	stp	x27, x28, [sp, #64]
   21964:	str	x30, [sp, #80]
   21968:	bl	180e8 <__sanitizer_set_report_fd@@Base+0x4818>
   2196c:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x47d8>
   21970:	ldr	x1, [x21, #112]
   21974:	cmp	x0, x1
   21978:	b.ne	21d34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27ac>  // b.any
   2197c:	add	x19, x21, #0x10
   21980:	adrp	x27, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   21984:	mov	x0, x19
   21988:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   2198c:	mov	x0, x19
   21990:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   21994:	add	x0, x27, #0x140
   21998:	bl	26530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fa8>
   2199c:	tst	w0, #0xff
   219a0:	b.eq	21c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26f8>  // b.none
   219a4:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   219a8:	bl	180a8 <__sanitizer_set_report_fd@@Base+0x47d8>
   219ac:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   219b0:	add	x1, x1, #0xe30
   219b4:	ldr	x20, [x22, #4016]
   219b8:	stp	x21, x1, [sp, #128]
   219bc:	mov	x19, x0
   219c0:	str	xzr, [sp, #144]
   219c4:	ldr	x1, [x20]
   219c8:	stp	xzr, xzr, [sp, #152]
   219cc:	cbz	x1, 21ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2620>
   219d0:	sub	x0, x1, #0x1
   219d4:	tst	x0, x1
   219d8:	b.ne	21c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   219dc:	add	x20, x1, #0x7
   219e0:	neg	x1, x1
   219e4:	and	x20, x20, x1
   219e8:	mov	w2, #0x0                   	// #0
   219ec:	mov	x0, x20
   219f0:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
   219f4:	add	x1, x23, #0x988
   219f8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   219fc:	ldr	x1, [sp, #144]
   21a00:	mov	x24, x0
   21a04:	ldr	x2, [sp, #160]
   21a08:	lsl	x2, x2, #3
   21a0c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21a10:	ldp	x0, x1, [sp, #144]
   21a14:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21a18:	stp	x24, x20, [sp, #144]
   21a1c:	lsr	x1, x20, #3
   21a20:	cmp	x1, #0x3ff
   21a24:	b.ls	21bd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x264c>  // b.plast
   21a28:	ldr	x20, [x22, #4016]
   21a2c:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21a30:	add	x28, sp, #0x80
   21a34:	str	w19, [sp, #168]
   21a38:	str	x28, [x0, #656]
   21a3c:	ldr	x0, [x20]
   21a40:	cbz	x0, 21c54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26cc>
   21a44:	sub	x19, x0, #0x1
   21a48:	ands	x19, x19, x0
   21a4c:	b.ne	21c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   21a50:	neg	x20, x0
   21a54:	mov	x24, #0x1fff                	// #8191
   21a58:	add	x0, x0, x24
   21a5c:	add	x1, x23, #0x988
   21a60:	and	x20, x0, x20
   21a64:	mov	w2, #0x0                   	// #0
   21a68:	mov	x0, x20
   21a6c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   21a70:	mov	x2, #0x0                   	// #0
   21a74:	mov	x1, #0x0                   	// #0
   21a78:	mov	x26, x0
   21a7c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21a80:	mov	x1, #0x0                   	// #0
   21a84:	mov	x0, #0x0                   	// #0
   21a88:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21a8c:	cmp	x20, x24
   21a90:	b.ls	21c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2708>  // b.plast
   21a94:	add	x23, sp, #0x68
   21a98:	mov	x2, #0x2000                	// #8192
   21a9c:	mov	w1, #0x0                   	// #0
   21aa0:	mov	x0, x26
   21aa4:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   21aa8:	mov	w25, #0x4                   	// #4
   21aac:	mov	x0, x23
   21ab0:	mov	x2, #0x18                  	// #24
   21ab4:	mov	w1, #0x0                   	// #0
   21ab8:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   21abc:	mov	x2, #0x2000                	// #8192
   21ac0:	mov	x0, x23
   21ac4:	adrp	x24, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   21ac8:	adrp	x23, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21acc:	add	x22, sp, #0xb8
   21ad0:	add	x24, x24, #0x648
   21ad4:	add	x23, x23, #0x7d0
   21ad8:	mov	x1, #0x0                   	// #0
   21adc:	movk	w25, #0x800, lsl #16
   21ae0:	str	x26, [sp, #104]
   21ae4:	str	x2, [sp, #120]
   21ae8:	bl	180f8 <__sanitizer_set_report_fd@@Base+0x4828>
   21aec:	nop
   21af0:	mov	x2, #0x98                  	// #152
   21af4:	mov	w1, #0x0                   	// #0
   21af8:	mov	x0, x22
   21afc:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   21b00:	ldr	w0, [x23, x19, lsl #2]
   21b04:	mov	x1, x22
   21b08:	add	x19, x19, #0x1
   21b0c:	mov	x2, #0x0                   	// #0
   21b10:	str	x24, [sp, #184]
   21b14:	str	w25, [sp, #320]
   21b18:	bl	18120 <__sanitizer_set_report_fd@@Base+0x4850>
   21b1c:	cmp	x19, #0x7
   21b20:	b.ne	21af0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2568>  // b.any
   21b24:	mov	x0, x28
   21b28:	bl	21718 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>
   21b2c:	tst	w0, #0xff
   21b30:	b.ne	21bb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2630>  // b.any
   21b34:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21b38:	mov	w19, #0x3                   	// #3
   21b3c:	ldr	x0, [x0, #3896]
   21b40:	ldr	w0, [x0]
   21b44:	cbnz	w0, 21c60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26d8>
   21b48:	add	x0, x27, #0x140
   21b4c:	bl	265a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7020>
   21b50:	tst	w0, #0xff
   21b54:	b.eq	21d08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2780>  // b.none
   21b58:	mov	x0, #0x1                   	// #1
   21b5c:	str	x0, [x21, #104]
   21b60:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21b64:	mov	x1, x20
   21b68:	str	xzr, [x0, #656]
   21b6c:	mov	x0, x26
   21b70:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21b74:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   21b78:	add	x2, x1, #0xe30
   21b7c:	ldp	x0, x1, [sp, #144]
   21b80:	str	x2, [sp, #136]
   21b84:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21b88:	mov	w0, w19
   21b8c:	ldp	x21, x22, [sp, #16]
   21b90:	ldp	x23, x24, [sp, #32]
   21b94:	ldp	x25, x26, [sp, #48]
   21b98:	ldp	x27, x28, [sp, #64]
   21b9c:	ldr	x30, [sp, #80]
   21ba0:	ldp	x19, x20, [sp], #336
   21ba4:	ret
   21ba8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21bac:	mov	x1, x0
   21bb0:	str	x0, [x20]
   21bb4:	b	219d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2448>
   21bb8:	ldp	x2, x1, [x21]
   21bbc:	add	x0, x28, #0x8
   21bc0:	mov	w19, #0x0                   	// #0
   21bc4:	blr	x2
   21bc8:	mov	x0, x28
   21bcc:	bl	21518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f90>
   21bd0:	b	21b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c0>
   21bd4:	ldr	x3, [sp, #160]
   21bd8:	cmp	x3, #0x400
   21bdc:	b.hi	21d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>  // b.pmore
   21be0:	ldr	x20, [x22, #4016]
   21be4:	ldr	x0, [x20]
   21be8:	cbz	x0, 21cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2768>
   21bec:	sub	x1, x0, #0x1
   21bf0:	tst	x1, x0
   21bf4:	b.ne	21c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   21bf8:	mov	x2, #0x1fff                	// #8191
   21bfc:	add	x20, x0, x2
   21c00:	neg	x0, x0
   21c04:	add	x1, x23, #0x988
   21c08:	and	x20, x20, x0
   21c0c:	mov	w2, #0x0                   	// #0
   21c10:	mov	x0, x20
   21c14:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   21c18:	ldr	x1, [sp, #144]
   21c1c:	mov	x24, x0
   21c20:	ldr	x2, [sp, #160]
   21c24:	add	x28, sp, #0x80
   21c28:	lsl	x2, x2, #3
   21c2c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21c30:	ldp	x0, x1, [sp, #144]
   21c34:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21c38:	stp	x24, x20, [sp, #144]
   21c3c:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21c40:	ldr	x20, [x22, #4016]
   21c44:	str	x28, [x0, #656]
   21c48:	str	w19, [sp, #168]
   21c4c:	ldr	x0, [x20]
   21c50:	cbnz	x0, 21a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24bc>
   21c54:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21c58:	str	x0, [x20]
   21c5c:	b	21a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24bc>
   21c60:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21c64:	add	x0, x0, #0x6d8
   21c68:	bl	1cd78 <OnPrint@@Base+0x398>
   21c6c:	b	21b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c0>
   21c70:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21c74:	add	x0, x0, #0x970
   21c78:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   21c7c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21c80:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21c84:	add	x0, x0, #0x6b0
   21c88:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   21c8c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21c90:	ldr	x22, [x22, #4016]
   21c94:	ldr	x0, [x22]
   21c98:	cbz	x0, 21cfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2774>
   21c9c:	sub	x1, x0, #0x1
   21ca0:	tst	x1, x0
   21ca4:	b.ne	21c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e8>  // b.any
   21ca8:	mov	x1, #0x1fff                	// #8191
   21cac:	add	x22, x0, x1
   21cb0:	neg	x0, x0
   21cb4:	add	x1, x23, #0x988
   21cb8:	and	x22, x22, x0
   21cbc:	mov	w2, #0x0                   	// #0
   21cc0:	mov	x0, x22
   21cc4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   21cc8:	mov	x2, #0x0                   	// #0
   21ccc:	mov	x23, x0
   21cd0:	mov	x1, x26
   21cd4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   21cd8:	mov	x1, x20
   21cdc:	mov	x0, x26
   21ce0:	mov	x20, x22
   21ce4:	mov	x26, x23
   21ce8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21cec:	b	21a94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x250c>
   21cf0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21cf4:	str	x0, [x20]
   21cf8:	b	21bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2664>
   21cfc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21d00:	str	x0, [x22]
   21d04:	b	21c9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2714>
   21d08:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21d0c:	add	x0, x0, #0x680
   21d10:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   21d14:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   21d18:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   21d1c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   21d20:	add	x2, x2, #0xd58
   21d24:	add	x0, x0, #0x9b8
   21d28:	mov	x4, #0x400                 	// #1024
   21d2c:	mov	w1, #0x1fd                 	// #509
   21d30:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   21d34:	mov	w0, #0x4                   	// #4
   21d38:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   21d3c:	nop
   21d40:	stp	x19, x20, [sp, #-208]!
   21d44:	mov	x4, #0x0                   	// #0
   21d48:	mov	x20, x0
   21d4c:	mov	x19, x1
   21d50:	mov	x3, #0x0                   	// #0
   21d54:	mov	x2, #0x0                   	// #0
   21d58:	mov	x1, #0x0                   	// #0
   21d5c:	mov	w0, #0x3                   	// #3
   21d60:	stp	x21, x22, [sp, #16]
   21d64:	stp	x23, x24, [sp, #32]
   21d68:	stp	x25, x26, [sp, #48]
   21d6c:	str	x30, [sp, #64]
   21d70:	bl	180e8 <__sanitizer_set_report_fd@@Base+0x4818>
   21d74:	mov	x22, x0
   21d78:	cbz	w0, 21edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2954>
   21d7c:	add	x24, sp, #0x58
   21d80:	add	x0, x24, #0x10
   21d84:	bl	17f20 <__sanitizer_set_report_fd@@Base+0x4650>
   21d88:	stp	x20, x19, [sp, #88]
   21d8c:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21d90:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   21d94:	str	xzr, [sp, #192]
   21d98:	ldr	x20, [x20, #4016]
   21d9c:	str	x0, [sp, #200]
   21da0:	ldr	x19, [x20]
   21da4:	cbz	x19, 21ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2944>
   21da8:	mov	w2, #0x0                   	// #0
   21dac:	add	x25, x19, #0x200, lsl #12
   21db0:	mov	x0, x25
   21db4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21db8:	add	x1, x1, #0x6f8
   21dbc:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   21dc0:	mov	x1, x19
   21dc4:	mov	x23, x0
   21dc8:	bl	1a7f8 <__sanitizer_set_report_fd@@Base+0x6f28>
   21dcc:	tst	w0, #0xff
   21dd0:	b.eq	21ff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a70>  // b.none
   21dd4:	add	x0, x24, #0x10
   21dd8:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   21ddc:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   21de0:	adrp	x20, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21de4:	add	x1, x1, #0x290
   21de8:	add	x20, x20, #0x7d0
   21dec:	mov	x19, #0x0                   	// #0
   21df0:	add	x0, x1, #0x10
   21df4:	mov	x21, x1
   21df8:	mov	x26, x0
   21dfc:	bl	18228 <__sanitizer_set_report_fd@@Base+0x4958>
   21e00:	ldr	w1, [x20, x19, lsl #2]
   21e04:	mov	x0, x26
   21e08:	add	x19, x19, #0x1
   21e0c:	bl	18248 <__sanitizer_set_report_fd@@Base+0x4978>
   21e10:	cmp	x19, #0x7
   21e14:	b.ne	21e00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2878>  // b.any
   21e18:	add	x21, x21, #0x90
   21e1c:	mov	x1, x26
   21e20:	mov	x2, x21
   21e24:	mov	w0, #0x0                   	// #0
   21e28:	bl	18210 <__sanitizer_set_report_fd@@Base+0x4940>
   21e2c:	sxtw	x3, w0
   21e30:	cbnz	w0, 22018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   21e34:	mov	x3, x24
   21e38:	mov	w2, #0x700                 	// #1792
   21e3c:	mov	x6, #0x0                   	// #0
   21e40:	mov	x5, #0x0                   	// #0
   21e44:	mov	x4, #0x0                   	// #0
   21e48:	add	x1, x23, x25
   21e4c:	movk	w2, #0x80, lsl #16
   21e50:	adrp	x0, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   21e54:	add	x0, x0, #0x938
   21e58:	bl	18f68 <__sanitizer_set_report_fd@@Base+0x5698>
   21e5c:	mov	x2, #0x0                   	// #0
   21e60:	mov	x20, x0
   21e64:	mov	x1, x21
   21e68:	add	x19, sp, #0x54
   21e6c:	mov	w0, #0x2                   	// #2
   21e70:	bl	18210 <__sanitizer_set_report_fd@@Base+0x4940>
   21e74:	mov	x0, x20
   21e78:	mov	x1, x19
   21e7c:	str	wzr, [sp, #84]
   21e80:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   21e84:	tst	w0, #0xff
   21e88:	b.eq	21f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29a0>  // b.none
   21e8c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21e90:	ldr	x0, [x0, #3896]
   21e94:	ldr	w0, [x0]
   21e98:	cbnz	w0, 21fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>
   21e9c:	add	x0, x24, #0x10
   21ea0:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   21ea4:	mov	x1, x25
   21ea8:	mov	x0, x23
   21eac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   21eb0:	cbz	w22, 21ef8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2970>
   21eb4:	ldp	x21, x22, [sp, #16]
   21eb8:	ldp	x23, x24, [sp, #32]
   21ebc:	ldp	x25, x26, [sp, #48]
   21ec0:	ldr	x30, [sp, #64]
   21ec4:	ldp	x19, x20, [sp], #208
   21ec8:	ret
   21ecc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   21ed0:	mov	x19, x0
   21ed4:	str	x0, [x20]
   21ed8:	b	21da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2820>
   21edc:	mov	x4, #0x0                   	// #0
   21ee0:	mov	x3, #0x0                   	// #0
   21ee4:	mov	x2, #0x0                   	// #0
   21ee8:	mov	x1, #0x1                   	// #1
   21eec:	mov	w0, #0x4                   	// #4
   21ef0:	bl	180e8 <__sanitizer_set_report_fd@@Base+0x4818>
   21ef4:	b	21d7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f4>
   21ef8:	mov	x4, #0x0                   	// #0
   21efc:	mov	x3, #0x0                   	// #0
   21f00:	mov	x2, #0x0                   	// #0
   21f04:	mov	x1, #0x0                   	// #0
   21f08:	mov	w0, #0x4                   	// #4
   21f0c:	bl	180e8 <__sanitizer_set_report_fd@@Base+0x4818>
   21f10:	ldp	x21, x22, [sp, #16]
   21f14:	ldp	x23, x24, [sp, #32]
   21f18:	ldp	x25, x26, [sp, #48]
   21f1c:	ldr	x30, [sp, #64]
   21f20:	ldp	x19, x20, [sp], #208
   21f24:	ret
   21f28:	adrp	x26, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21f2c:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21f30:	ldr	x0, [x26, #3848]
   21f34:	str	x20, [x0]
   21f38:	bl	18098 <__sanitizer_set_report_fd@@Base+0x47c8>
   21f3c:	ldr	x5, [x21, #3840]
   21f40:	mov	x6, x0
   21f44:	mov	x1, x20
   21f48:	mov	x4, #0x0                   	// #0
   21f4c:	mov	x3, #0x0                   	// #0
   21f50:	mov	x2, #0x0                   	// #0
   21f54:	mov	w0, #0x6d61                	// #28001
   21f58:	str	x6, [x5]
   21f5c:	movk	w0, #0x5961, lsl #16
   21f60:	bl	180e8 <__sanitizer_set_report_fd@@Base+0x4818>
   21f64:	add	x0, x24, #0x10
   21f68:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   21f6c:	ldr	x0, [sp, #192]
   21f70:	cbnz	x0, 21f84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29fc>
   21f74:	nop
   21f78:	bl	67a0 <sched_yield@plt>
   21f7c:	ldr	x0, [sp, #192]
   21f80:	cbz	x0, 21f78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29f0>
   21f84:	mov	w2, #0x40000000            	// #1073741824
   21f88:	mov	x1, #0x0                   	// #0
   21f8c:	mov	w0, w20
   21f90:	bl	18080 <__sanitizer_set_report_fd@@Base+0x47b0>
   21f94:	mov	x1, x19
   21f98:	bl	179e8 <__sanitizer_set_report_fd@@Base+0x4118>
   21f9c:	tst	w0, #0xff
   21fa0:	b.eq	21fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a38>  // b.none
   21fa4:	ldr	w1, [sp, #84]
   21fa8:	cmp	w1, #0x4
   21fac:	b.eq	21f84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29fc>  // b.none
   21fb0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   21fb4:	ldr	x0, [x0, #3896]
   21fb8:	ldr	w0, [x0]
   21fbc:	cbnz	w0, 21fe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
   21fc0:	ldr	x26, [x26, #3848]
   21fc4:	ldr	x21, [x21, #3840]
   21fc8:	str	xzr, [x26]
   21fcc:	str	xzr, [x21]
   21fd0:	b	21ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x291c>
   21fd4:	ldr	w1, [sp, #84]
   21fd8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21fdc:	add	x0, x0, #0x760
   21fe0:	bl	1cd78 <OnPrint@@Base+0x398>
   21fe4:	b	21e9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2914>
   21fe8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21fec:	add	x0, x0, #0x790
   21ff0:	bl	1cd78 <OnPrint@@Base+0x398>
   21ff4:	b	21fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a38>
   21ff8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   21ffc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22000:	add	x2, x2, #0x710
   22004:	add	x0, x0, #0x4e0
   22008:	mov	x4, #0x0                   	// #0
   2200c:	mov	x3, #0x0                   	// #0
   22010:	mov	w1, #0x152                 	// #338
   22014:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22018:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2201c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22020:	add	x2, x2, #0x750
   22024:	add	x0, x0, #0x4e0
   22028:	mov	x4, #0x0                   	// #0
   2202c:	mov	w1, #0x1ac                 	// #428
   22030:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22034:	nop
   22038:	ldr	x3, [x0, #24]
   2203c:	cbz	x3, 2206c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae4>
   22040:	ldr	x4, [x0, #8]
   22044:	mov	x0, #0x0                   	// #0
   22048:	b	22054 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2acc>
   2204c:	cmp	x0, x3
   22050:	b.eq	2206c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae4>  // b.none
   22054:	ldr	x2, [x4, x0, lsl #3]
   22058:	add	x0, x0, #0x1
   2205c:	cmp	x2, x1
   22060:	b.ne	2204c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>  // b.any
   22064:	mov	w0, #0x1                   	// #1
   22068:	ret
   2206c:	mov	w0, #0x0                   	// #0
   22070:	ret
   22074:	nop
   22078:	stp	x19, x20, [sp, #-64]!
   2207c:	stp	x21, x22, [sp, #16]
   22080:	add	x21, x0, #0x8
   22084:	ldr	x4, [x0, #16]
   22088:	str	x1, [sp, #56]
   2208c:	ldr	x3, [x21, #16]
   22090:	str	x30, [sp, #32]
   22094:	lsr	x4, x4, #3
   22098:	cmp	x3, x4
   2209c:	b.hi	22188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c00>  // b.pmore
   220a0:	mov	x19, x0
   220a4:	add	x20, x3, #0x1
   220a8:	b.eq	220d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b4c>  // b.none
   220ac:	ldr	x22, [x0, #8]
   220b0:	str	x20, [x21, #16]
   220b4:	add	x0, x22, x3, lsl #3
   220b8:	add	x1, sp, #0x38
   220bc:	mov	x2, #0x8                   	// #8
   220c0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   220c4:	ldp	x21, x22, [sp, #16]
   220c8:	ldr	x30, [sp, #32]
   220cc:	ldp	x19, x20, [sp], #64
   220d0:	ret
   220d4:	tst	x3, x20
   220d8:	b.eq	22114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b8c>  // b.none
   220dc:	clz	x4, x20
   220e0:	mov	w0, #0x3f                  	// #63
   220e4:	sub	w0, w0, w4
   220e8:	mov	x2, #0x1                   	// #1
   220ec:	add	w4, w0, #0x1
   220f0:	lsl	x4, x2, x4
   220f4:	cmp	x4, x20
   220f8:	b.ls	221d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>  // b.plast
   220fc:	lsl	x0, x2, x0
   22100:	cmp	x20, x0
   22104:	b.ls	221f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>  // b.plast
   22108:	cmp	x3, x4
   2210c:	b.hi	221ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c24>  // b.pmore
   22110:	mov	x20, x4
   22114:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22118:	lsl	x20, x20, #3
   2211c:	ldr	x22, [x22, #4016]
   22120:	ldr	x0, [x22]
   22124:	cbz	x0, 221a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c18>
   22128:	sub	x1, x0, #0x1
   2212c:	tst	x0, x1
   22130:	b.ne	221c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c3c>  // b.any
   22134:	add	x20, x20, x1
   22138:	neg	x0, x0
   2213c:	and	x20, x20, x0
   22140:	mov	w2, #0x0                   	// #0
   22144:	mov	x0, x20
   22148:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2214c:	add	x1, x1, #0x988
   22150:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   22154:	ldr	x1, [x19, #8]
   22158:	mov	x22, x0
   2215c:	ldr	x2, [x21, #16]
   22160:	lsl	x2, x2, #3
   22164:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22168:	ldr	x0, [x19, #8]
   2216c:	ldr	x1, [x21, #8]
   22170:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22174:	ldr	x3, [x21, #16]
   22178:	str	x22, [x19, #8]
   2217c:	str	x20, [x21, #8]
   22180:	add	x20, x3, #0x1
   22184:	b	220b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b28>
   22188:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   2218c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22190:	add	x2, x2, #0xce0
   22194:	add	x0, x0, #0x9b8
   22198:	mov	w1, #0x1be                 	// #446
   2219c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   221a0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   221a4:	str	x0, [x22]
   221a8:	b	22128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba0>
   221ac:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   221b0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   221b4:	add	x2, x2, #0xd58
   221b8:	add	x0, x0, #0x9b8
   221bc:	mov	w1, #0x1fd                 	// #509
   221c0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   221c4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   221c8:	add	x0, x0, #0x970
   221cc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   221d0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   221d4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   221d8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   221dc:	mov	x3, x20
   221e0:	add	x2, x2, #0xd10
   221e4:	add	x0, x0, #0x9b8
   221e8:	mov	w1, #0x17b                 	// #379
   221ec:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   221f0:	mov	x4, x0
   221f4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   221f8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   221fc:	mov	x3, x20
   22200:	add	x2, x2, #0xd38
   22204:	add	x0, x0, #0x9b8
   22208:	mov	w1, #0x17c                 	// #380
   2220c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22210:	stp	x19, x20, [sp, #-48]!
   22214:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22218:	mov	x19, x0
   2221c:	ldr	x20, [x20, #4016]
   22220:	stp	x21, x22, [sp, #16]
   22224:	str	x30, [sp, #32]
   22228:	str	x1, [x0]
   2222c:	stp	xzr, xzr, [x0, #24]
   22230:	ldr	x0, [x20]
   22234:	str	w2, [x19, #8]
   22238:	str	xzr, [x19, #16]
   2223c:	cbz	x0, 222b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d30>
   22240:	sub	x1, x0, #0x1
   22244:	tst	x1, x0
   22248:	b.ne	222c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d3c>  // b.any
   2224c:	add	x20, x0, #0x1f
   22250:	neg	x0, x0
   22254:	and	x20, x20, x0
   22258:	mov	w2, #0x0                   	// #0
   2225c:	mov	x0, x20
   22260:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22264:	add	x1, x1, #0x988
   22268:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   2226c:	ldr	x1, [x19, #16]
   22270:	mov	x22, x0
   22274:	ldr	x2, [x19, #32]
   22278:	lsl	x2, x2, #5
   2227c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22280:	ldp	x0, x1, [x19, #16]
   22284:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22288:	stp	x22, x20, [x19, #16]
   2228c:	ldrsw	x2, [x19, #8]
   22290:	mov	w0, #0x1                   	// #1
   22294:	strb	w0, [x19, #72]
   22298:	cmp	x2, #0x20
   2229c:	b.hi	222d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>  // b.pmore
   222a0:	add	x0, x19, #0x28
   222a4:	mov	w1, #0x0                   	// #0
   222a8:	ldp	x21, x22, [sp, #16]
   222ac:	ldr	x30, [sp, #32]
   222b0:	ldp	x19, x20, [sp], #48
   222b4:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   222b8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   222bc:	str	x0, [x20]
   222c0:	b	22240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cb8>
   222c4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   222c8:	add	x0, x0, #0x970
   222cc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   222d0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   222d4:	mov	x3, x2
   222d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   222dc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   222e0:	add	x0, x0, #0x828
   222e4:	add	x2, x2, #0x7f0
   222e8:	mov	x4, #0x20                  	// #32
   222ec:	mov	w1, #0x1c                  	// #28
   222f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   222f4:	nop
   222f8:	stp	x19, x20, [sp, #-64]!
   222fc:	mov	x20, x0
   22300:	str	x30, [sp, #48]
   22304:	strb	wzr, [x0, #72]
   22308:	ldr	w0, [x0, #8]
   2230c:	cmp	w0, #0x0
   22310:	b.le	223d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e4c>
   22314:	mov	x19, #0x0                   	// #0
   22318:	stp	x21, x22, [sp, #16]
   2231c:	mov	x22, x1
   22320:	mov	x21, x2
   22324:	stp	x23, x24, [sp, #32]
   22328:	mov	x23, x3
   2232c:	b	2233c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>
   22330:	ldr	w0, [x20, #8]
   22334:	cmp	w0, w19
   22338:	b.le	223cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   2233c:	ldr	x1, [x20]
   22340:	mov	w24, w19
   22344:	mov	x0, x21
   22348:	ldr	x1, [x1, x19, lsl #3]
   2234c:	add	x19, x19, #0x1
   22350:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   22354:	cbnz	w0, 22330 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2da8>
   22358:	add	x24, x20, w24, sxtw
   2235c:	ldrb	w0, [x24, #40]
   22360:	cbz	w0, 223cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   22364:	ldr	x0, [x20, #32]
   22368:	cbz	x0, 223cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>
   2236c:	mov	x19, #0x0                   	// #0
   22370:	b	22380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2df8>
   22374:	ldr	x0, [x20, #32]
   22378:	cmp	x19, x0
   2237c:	b.cs	223cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e44>  // b.hs, b.nlast
   22380:	ldr	x0, [x20, #16]
   22384:	lsl	x4, x19, #5
   22388:	mov	x1, x21
   2238c:	add	x19, x19, #0x1
   22390:	add	x24, x0, x4
   22394:	ldr	x0, [x0, x4]
   22398:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   2239c:	cbnz	w0, 22374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dec>
   223a0:	ldr	x0, [x24, #8]
   223a4:	mov	x1, x22
   223a8:	bl	fad0 <__sancov_default_options@@Base+0x3120>
   223ac:	ands	w0, w0, #0xff
   223b0:	b.eq	22374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dec>  // b.none
   223b4:	ldp	x21, x22, [sp, #16]
   223b8:	str	x24, [x23]
   223bc:	ldp	x23, x24, [sp, #32]
   223c0:	ldr	x30, [sp, #48]
   223c4:	ldp	x19, x20, [sp], #64
   223c8:	ret
   223cc:	ldp	x21, x22, [sp, #16]
   223d0:	ldp	x23, x24, [sp, #32]
   223d4:	mov	w0, #0x0                   	// #0
   223d8:	ldr	x30, [sp, #48]
   223dc:	ldp	x19, x20, [sp], #64
   223e0:	ret
   223e4:	nop
   223e8:	stp	x19, x20, [sp, #-112]!
   223ec:	mov	x20, x0
   223f0:	ldrb	w0, [x0, #72]
   223f4:	str	x30, [sp, #72]
   223f8:	cbz	w0, 226c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x313c>
   223fc:	mov	x19, x1
   22400:	cbz	x1, 225b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x302c>
   22404:	stp	x21, x22, [sp, #16]
   22408:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2240c:	add	x21, sp, #0x50
   22410:	ldr	x22, [x22, #4016]
   22414:	stp	x23, x24, [sp, #32]
   22418:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2241c:	add	x23, x23, #0x988
   22420:	stp	x25, x26, [sp, #48]
   22424:	str	x27, [sp, #64]
   22428:	ldrb	w0, [x19]
   2242c:	cmp	w0, #0x20
   22430:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   22434:	b.ne	22448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec0>  // b.any
   22438:	ldrb	w0, [x19, #1]!
   2243c:	cmp	w0, #0x20
   22440:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   22444:	b.eq	22438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eb0>  // b.none
   22448:	mov	x0, x19
   2244c:	mov	w1, #0xa                   	// #10
   22450:	bl	15e58 <__sanitizer_set_report_fd@@Base+0x2588>
   22454:	mov	x26, x0
   22458:	cbz	x0, 225dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3054>
   2245c:	cmp	x19, x26
   22460:	b.eq	22470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee8>  // b.none
   22464:	ldrb	w6, [x19]
   22468:	cmp	w6, #0x23
   2246c:	b.ne	22480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef8>  // b.any
   22470:	ldrb	w0, [x26]
   22474:	cbz	w0, 225a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x301c>
   22478:	add	x19, x26, #0x1
   2247c:	b	22428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   22480:	mov	x24, x26
   22484:	nop
   22488:	ldurb	w1, [x24, #-1]
   2248c:	cmp	w1, #0x20
   22490:	and	w1, w1, #0xfffffffb
   22494:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   22498:	b.ne	224a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.any
   2249c:	sub	x24, x24, #0x1
   224a0:	cmp	x19, x24
   224a4:	b.ne	22488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f00>  // b.any
   224a8:	ldr	w7, [x20, #8]
   224ac:	cmp	w7, #0x0
   224b0:	b.le	226bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3134>
   224b4:	ldr	x8, [x20]
   224b8:	mov	x5, #0x0                   	// #0
   224bc:	nop
   224c0:	ldr	x2, [x8, x5, lsl #3]
   224c4:	mov	w0, w5
   224c8:	mov	w25, w5
   224cc:	ldrb	w1, [x2]
   224d0:	cmp	w1, w6
   224d4:	b.ne	225d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3048>  // b.any
   224d8:	mov	x3, x19
   224dc:	nop
   224e0:	ldrb	w4, [x3, #1]!
   224e4:	ldrb	w1, [x2, #1]!
   224e8:	cmp	w4, w1
   224ec:	b.eq	224e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f58>  // b.none
   224f0:	cbz	w1, 225c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3038>
   224f4:	add	x5, x5, #0x1
   224f8:	add	w25, w0, #0x1
   224fc:	cmp	w7, w5
   22500:	b.gt	224c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f38>
   22504:	cmp	w7, w25
   22508:	b.eq	22754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31cc>  // b.none
   2250c:	mov	x27, x20
   22510:	mov	x2, #0x20                  	// #32
   22514:	mov	w1, #0x0                   	// #0
   22518:	mov	x0, x21
   2251c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22520:	sxtw	x25, w25
   22524:	ldr	x3, [x27], #16
   22528:	sub	x24, x24, x19
   2252c:	mov	x2, #0x0                   	// #0
   22530:	mov	x1, #0x0                   	// #0
   22534:	add	x0, x24, #0x1
   22538:	ldr	x3, [x3, x25, lsl #3]
   2253c:	str	x3, [sp, #80]
   22540:	bl	ce20 <__sancov_default_options@@Base+0x470>
   22544:	str	x0, [sp, #88]
   22548:	mov	x1, x19
   2254c:	mov	x2, x24
   22550:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22554:	ldr	x0, [sp, #88]
   22558:	strb	wzr, [x0, x24]
   2255c:	ldr	x4, [x20, #24]
   22560:	ldr	x0, [x27, #16]
   22564:	lsr	x4, x4, #5
   22568:	cmp	x0, x4
   2256c:	b.hi	22694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x310c>  // b.pmore
   22570:	add	x3, x0, #0x1
   22574:	b.eq	225ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3064>  // b.none
   22578:	ldr	x24, [x20, #16]
   2257c:	add	x25, x20, x25
   22580:	str	x3, [x27, #16]
   22584:	add	x0, x24, x0, lsl #5
   22588:	mov	x1, x21
   2258c:	mov	x2, #0x20                  	// #32
   22590:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22594:	mov	w0, #0x1                   	// #1
   22598:	strb	w0, [x25, #40]
   2259c:	ldrb	w0, [x26]
   225a0:	cbnz	w0, 22478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef0>
   225a4:	ldp	x21, x22, [sp, #16]
   225a8:	ldp	x23, x24, [sp, #32]
   225ac:	ldp	x25, x26, [sp, #48]
   225b0:	ldr	x27, [sp, #64]
   225b4:	ldr	x30, [sp, #72]
   225b8:	ldp	x19, x20, [sp], #112
   225bc:	ret
   225c0:	cmp	w4, #0x3a
   225c4:	b.ne	224f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f6c>  // b.any
   225c8:	add	x19, x3, #0x1
   225cc:	b	22504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   225d0:	mov	w4, w6
   225d4:	mov	x3, x19
   225d8:	b	224f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f68>
   225dc:	mov	x0, x19
   225e0:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   225e4:	add	x26, x19, x0
   225e8:	b	2245c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ed4>
   225ec:	tst	x0, x3
   225f0:	b.eq	2262c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a4>  // b.none
   225f4:	clz	x2, x3
   225f8:	mov	w1, #0x3f                  	// #63
   225fc:	sub	w2, w1, w2
   22600:	mov	x1, #0x1                   	// #1
   22604:	add	w4, w2, #0x1
   22608:	lsl	x4, x1, x4
   2260c:	cmp	x3, x4
   22610:	b.cs	22720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3198>  // b.hs, b.nlast
   22614:	lsl	x1, x1, x2
   22618:	cmp	x3, x1
   2261c:	b.ls	22738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31b0>  // b.plast
   22620:	cmp	x0, x4
   22624:	b.hi	226f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x316c>  // b.pmore
   22628:	mov	x3, x4
   2262c:	ldr	x0, [x22]
   22630:	lsl	x19, x3, #5
   22634:	cbz	x0, 226b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3128>
   22638:	sub	x1, x0, #0x1
   2263c:	tst	x1, x0
   22640:	b.ne	22710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>  // b.any
   22644:	add	x19, x19, x1
   22648:	neg	x0, x0
   2264c:	and	x19, x19, x0
   22650:	mov	x1, x23
   22654:	mov	w2, #0x0                   	// #0
   22658:	mov	x0, x19
   2265c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   22660:	mov	x24, x0
   22664:	ldr	x1, [x20, #16]
   22668:	ldr	x2, [x27, #16]
   2266c:	lsl	x2, x2, #5
   22670:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22674:	ldr	x1, [x27, #8]
   22678:	ldr	x0, [x20, #16]
   2267c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22680:	ldr	x0, [x27, #16]
   22684:	str	x24, [x20, #16]
   22688:	str	x19, [x27, #8]
   2268c:	add	x3, x0, #0x1
   22690:	b	2257c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ff4>
   22694:	mov	x3, x0
   22698:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   2269c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   226a0:	add	x2, x2, #0xce0
   226a4:	add	x0, x0, #0x9b8
   226a8:	mov	w1, #0x1be                 	// #446
   226ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   226b0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   226b4:	str	x0, [x22]
   226b8:	b	22638 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b0>
   226bc:	mov	w25, #0x0                   	// #0
   226c0:	b	22504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f7c>
   226c4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   226c8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   226cc:	add	x2, x2, #0x870
   226d0:	add	x0, x0, #0x828
   226d4:	mov	x4, #0x0                   	// #0
   226d8:	mov	x3, #0x0                   	// #0
   226dc:	mov	w1, #0x6a                  	// #106
   226e0:	stp	x21, x22, [sp, #16]
   226e4:	stp	x23, x24, [sp, #32]
   226e8:	stp	x25, x26, [sp, #48]
   226ec:	str	x27, [sp, #64]
   226f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   226f4:	mov	x3, x0
   226f8:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   226fc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22700:	add	x2, x2, #0xd58
   22704:	add	x0, x0, #0x9b8
   22708:	mov	w1, #0x1fd                 	// #509
   2270c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22710:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22714:	add	x0, x0, #0x970
   22718:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   2271c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22720:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22724:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22728:	add	x2, x2, #0xd10
   2272c:	add	x0, x0, #0x9b8
   22730:	mov	w1, #0x17b                 	// #379
   22734:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22738:	mov	x4, x1
   2273c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22740:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22744:	add	x2, x2, #0xd38
   22748:	add	x0, x0, #0x9b8
   2274c:	mov	w1, #0x17c                 	// #380
   22750:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22754:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22758:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2275c:	add	x0, x0, #0x888
   22760:	ldr	x1, [x1, #4024]
   22764:	ldr	x1, [x1]
   22768:	bl	1ccf0 <OnPrint@@Base+0x310>
   2276c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22770:	stp	x19, x20, [sp, #-112]!
   22774:	mov	x19, x1
   22778:	str	x30, [sp, #64]
   2277c:	ldrb	w1, [x1]
   22780:	cbnz	w1, 22790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3208>
   22784:	ldr	x30, [sp, #64]
   22788:	ldp	x19, x20, [sp], #112
   2278c:	ret
   22790:	stp	x21, x22, [sp, #16]
   22794:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22798:	mov	x21, x0
   2279c:	ldr	x20, [x22, #4016]
   227a0:	stp	x23, x24, [sp, #32]
   227a4:	ldr	x2, [x20]
   227a8:	cbz	x2, 228a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3318>
   227ac:	sub	x0, x2, #0x1
   227b0:	tst	x0, x2
   227b4:	b.ne	229b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3430>  // b.any
   227b8:	add	x24, x2, #0xfff
   227bc:	neg	x2, x2
   227c0:	and	x24, x24, x2
   227c4:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
   227c8:	mov	w2, #0x0                   	// #0
   227cc:	add	x1, x23, #0x988
   227d0:	mov	x0, x24
   227d4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   227d8:	mov	x2, #0x0                   	// #0
   227dc:	mov	x1, #0x0                   	// #0
   227e0:	mov	x20, x0
   227e4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   227e8:	mov	x1, #0x0                   	// #0
   227ec:	mov	x0, #0x0                   	// #0
   227f0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   227f4:	cmp	x24, #0xfff
   227f8:	b.ls	22954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33cc>  // b.plast
   227fc:	mov	x2, #0x1000                	// #4096
   22800:	mov	w1, #0x0                   	// #0
   22804:	mov	x0, x20
   22808:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   2280c:	strb	wzr, [x20]
   22810:	mov	x0, x19
   22814:	bl	17c60 <__sanitizer_set_report_fd@@Base+0x4390>
   22818:	tst	w0, #0xff
   2281c:	b.eq	228b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3328>  // b.none
   22820:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22824:	ldr	x0, [x0, #3896]
   22828:	ldr	w0, [x0]
   2282c:	cbnz	w0, 22880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f8>
   22830:	add	x3, sp, #0x68
   22834:	add	x2, sp, #0x60
   22838:	add	x1, sp, #0x58
   2283c:	mov	x0, x19
   22840:	mov	x5, #0x0                   	// #0
   22844:	mov	x4, #0x4000000             	// #67108864
   22848:	bl	12fe0 <__sanitizer_cov_dump@@Base+0x2280>
   2284c:	tst	w0, #0xff
   22850:	b.eq	22a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>  // b.none
   22854:	ldr	x1, [sp, #88]
   22858:	mov	x0, x21
   2285c:	bl	223e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e60>
   22860:	mov	x1, x24
   22864:	mov	x0, x20
   22868:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   2286c:	ldp	x21, x22, [sp, #16]
   22870:	ldp	x23, x24, [sp, #32]
   22874:	ldr	x30, [sp, #64]
   22878:	ldp	x19, x20, [sp], #112
   2287c:	ret
   22880:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22884:	mov	x2, x19
   22888:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2288c:	add	x0, x0, #0x8b0
   22890:	ldr	x1, [x1, #4024]
   22894:	ldr	x1, [x1]
   22898:	bl	1ccf0 <OnPrint@@Base+0x310>
   2289c:	b	22830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a8>
   228a0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   228a4:	mov	x2, x0
   228a8:	str	x0, [x20]
   228ac:	b	227ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3224>
   228b0:	mov	x0, x19
   228b4:	bl	1adb0 <__sanitizer_set_report_fd@@Base+0x74e0>
   228b8:	tst	w0, #0xff
   228bc:	b.ne	22820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>  // b.any
   228c0:	stp	x25, x26, [sp, #48]
   228c4:	ldr	x25, [x22, #4016]
   228c8:	ldr	x0, [x25]
   228cc:	cbz	x0, 229d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>
   228d0:	sub	x1, x0, #0x1
   228d4:	tst	x1, x0
   228d8:	b.ne	229bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   228dc:	add	x26, x0, #0xfff
   228e0:	neg	x0, x0
   228e4:	and	x26, x26, x0
   228e8:	add	x1, x23, #0x988
   228ec:	mov	w2, #0x0                   	// #0
   228f0:	mov	x0, x26
   228f4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   228f8:	mov	x25, x0
   228fc:	mov	x2, #0x0                   	// #0
   22900:	mov	x1, #0x0                   	// #0
   22904:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22908:	mov	x1, #0x0                   	// #0
   2290c:	mov	x0, #0x0                   	// #0
   22910:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22914:	cmp	x26, #0xfff
   22918:	b.ls	22a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a0>  // b.plast
   2291c:	mov	w1, #0x0                   	// #0
   22920:	mov	x0, x25
   22924:	mov	x2, #0x1000                	// #4096
   22928:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   2292c:	strb	wzr, [x25]
   22930:	mov	x0, x25
   22934:	mov	x1, #0x1000                	// #4096
   22938:	bl	fda8 <__sancov_default_options@@Base+0x33f8>
   2293c:	cbnz	x0, 229e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x345c>
   22940:	mov	x1, x26
   22944:	mov	x0, x25
   22948:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   2294c:	ldp	x25, x26, [sp, #48]
   22950:	b	22820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3298>
   22954:	stp	x25, x26, [sp, #48]
   22958:	ldr	x25, [x22, #4016]
   2295c:	ldr	x0, [x25]
   22960:	cbz	x0, 229cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3444>
   22964:	sub	x1, x0, #0x1
   22968:	tst	x1, x0
   2296c:	b.ne	229bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   22970:	add	x25, x0, #0xfff
   22974:	neg	x0, x0
   22978:	and	x25, x25, x0
   2297c:	add	x1, x23, #0x988
   22980:	mov	x0, x25
   22984:	mov	w2, #0x0                   	// #0
   22988:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   2298c:	mov	x26, x0
   22990:	mov	x2, #0x0                   	// #0
   22994:	mov	x1, x20
   22998:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   2299c:	mov	x1, x24
   229a0:	mov	x0, x20
   229a4:	mov	x24, x25
   229a8:	mov	x20, x26
   229ac:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   229b0:	ldp	x25, x26, [sp, #48]
   229b4:	b	227fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3274>
   229b8:	stp	x25, x26, [sp, #48]
   229bc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   229c0:	add	x0, x0, #0x970
   229c4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   229c8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   229cc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   229d0:	str	x0, [x25]
   229d4:	b	22964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33dc>
   229d8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   229dc:	str	x0, [x25]
   229e0:	b	228d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3348>
   229e4:	mov	x0, x25
   229e8:	bl	f740 <__sancov_default_options@@Base+0x2d90>
   229ec:	sub	x2, x0, x25
   229f0:	mov	x22, #0xfff                 	// #4095
   229f4:	cmp	x2, x22
   229f8:	mov	x1, x25
   229fc:	csel	x2, x2, x22, ls  // ls = plast
   22a00:	mov	x0, x20
   22a04:	bl	16618 <__sanitizer_set_report_fd@@Base+0x2d48>
   22a08:	mov	x0, x20
   22a0c:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   22a10:	mov	x1, x19
   22a14:	sub	x2, x22, x0
   22a18:	mov	x19, x20
   22a1c:	mov	x0, x20
   22a20:	bl	16618 <__sanitizer_set_report_fd@@Base+0x2d48>
   22a24:	b	22940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33b8>
   22a28:	ldr	x22, [x22, #4016]
   22a2c:	ldr	x0, [x22]
   22a30:	cbz	x0, 22a84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34fc>
   22a34:	sub	x1, x0, #0x1
   22a38:	tst	x1, x0
   22a3c:	b.ne	229bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3434>  // b.any
   22a40:	add	x22, x0, #0xfff
   22a44:	neg	x0, x0
   22a48:	and	x22, x22, x0
   22a4c:	add	x1, x23, #0x988
   22a50:	mov	x0, x22
   22a54:	mov	w2, #0x0                   	// #0
   22a58:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   22a5c:	mov	x23, x0
   22a60:	mov	x2, #0x0                   	// #0
   22a64:	mov	x1, x25
   22a68:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22a6c:	mov	x1, x26
   22a70:	mov	x0, x25
   22a74:	mov	x26, x22
   22a78:	mov	x25, x23
   22a7c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22a80:	b	2291c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3394>
   22a84:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   22a88:	str	x0, [x22]
   22a8c:	b	22a34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34ac>
   22a90:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22a94:	mov	x2, x19
   22a98:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22a9c:	add	x0, x0, #0x8d8
   22aa0:	ldr	x1, [x1, #4024]
   22aa4:	stp	x25, x26, [sp, #48]
   22aa8:	ldr	x1, [x1]
   22aac:	bl	1ccf0 <OnPrint@@Base+0x310>
   22ab0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22ab4:	nop
   22ab8:	ldr	x0, [x0, #32]
   22abc:	ret
   22ac0:	stp	x19, x20, [sp, #-48]!
   22ac4:	mov	x20, x0
   22ac8:	ldr	w0, [x0, #8]
   22acc:	str	x30, [sp, #32]
   22ad0:	cmp	w0, #0x0
   22ad4:	b.le	22b2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a4>
   22ad8:	mov	x19, #0x0                   	// #0
   22adc:	stp	x21, x22, [sp, #16]
   22ae0:	mov	x21, x1
   22ae4:	b	22af4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x356c>
   22ae8:	ldr	w0, [x20, #8]
   22aec:	cmp	w0, w19
   22af0:	b.le	22b28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35a0>
   22af4:	ldr	x2, [x20]
   22af8:	mov	w22, w19
   22afc:	mov	x0, x21
   22b00:	ldr	x1, [x2, x19, lsl #3]
   22b04:	add	x19, x19, #0x1
   22b08:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   22b0c:	cbnz	w0, 22ae8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3560>
   22b10:	add	x20, x20, w22, sxtw
   22b14:	ldp	x21, x22, [sp, #16]
   22b18:	ldrb	w0, [x20, #40]
   22b1c:	ldr	x30, [sp, #32]
   22b20:	ldp	x19, x20, [sp], #48
   22b24:	ret
   22b28:	ldp	x21, x22, [sp, #16]
   22b2c:	mov	w0, #0x0                   	// #0
   22b30:	ldr	x30, [sp, #32]
   22b34:	ldp	x19, x20, [sp], #48
   22b38:	ret
   22b3c:	nop
   22b40:	ldr	x4, [x0, #32]
   22b44:	cmp	x1, x4
   22b48:	b.cs	22b58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35d0>  // b.hs, b.nlast
   22b4c:	ldr	x0, [x0, #16]
   22b50:	add	x0, x0, x1, lsl #5
   22b54:	ret
   22b58:	str	x30, [sp, #-16]!
   22b5c:	mov	x3, x1
   22b60:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22b64:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22b68:	add	x2, x2, #0x908
   22b6c:	add	x0, x0, #0x828
   22b70:	mov	w1, #0x9e                  	// #158
   22b74:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22b78:	stp	x19, x20, [sp, #-96]!
   22b7c:	stp	x21, x22, [sp, #16]
   22b80:	mov	x21, x1
   22b84:	ldr	x1, [x0, #32]
   22b88:	str	x30, [sp, #64]
   22b8c:	cbz	x1, 22c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   22b90:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   22b94:	mov	x20, x0
   22b98:	mov	x19, #0x0                   	// #0
   22b9c:	stp	x23, x24, [sp, #32]
   22ba0:	adrp	x23, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22ba4:	ldr	x22, [x22, #4016]
   22ba8:	add	x23, x23, #0x988
   22bac:	stp	x25, x26, [sp, #48]
   22bb0:	add	x26, sp, #0x58
   22bb4:	b	22bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x363c>
   22bb8:	add	x19, x19, #0x1
   22bbc:	cmp	x19, x1
   22bc0:	b.cs	22c18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3690>  // b.hs, b.nlast
   22bc4:	ldr	x2, [x20, #16]
   22bc8:	add	x2, x2, x19, lsl #5
   22bcc:	ldr	w0, [x2, #16]
   22bd0:	cbz	w0, 22bb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   22bd4:	ldp	x4, x3, [x21, #8]
   22bd8:	str	x2, [sp, #88]
   22bdc:	lsr	x4, x4, #3
   22be0:	cmp	x3, x4
   22be4:	b.hi	22cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3754>  // b.pmore
   22be8:	add	x24, x3, #0x1
   22bec:	b.eq	22c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36a8>  // b.none
   22bf0:	ldr	x25, [x21]
   22bf4:	str	x24, [x21, #16]
   22bf8:	mov	x1, x26
   22bfc:	add	x0, x25, x3, lsl #3
   22c00:	mov	x2, #0x8                   	// #8
   22c04:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22c08:	ldr	x1, [x20, #32]
   22c0c:	add	x19, x19, #0x1
   22c10:	cmp	x19, x1
   22c14:	b.cc	22bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x363c>  // b.lo, b.ul, b.last
   22c18:	ldp	x23, x24, [sp, #32]
   22c1c:	ldp	x25, x26, [sp, #48]
   22c20:	ldp	x21, x22, [sp, #16]
   22c24:	ldr	x30, [sp, #64]
   22c28:	ldp	x19, x20, [sp], #96
   22c2c:	ret
   22c30:	tst	x3, x24
   22c34:	b.eq	22c70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>  // b.none
   22c38:	clz	x2, x24
   22c3c:	mov	w0, #0x3f                  	// #63
   22c40:	sub	w0, w0, w2
   22c44:	mov	x2, #0x1                   	// #1
   22c48:	add	w4, w0, #0x1
   22c4c:	lsl	x4, x2, x4
   22c50:	cmp	x4, x24
   22c54:	b.ls	22d04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x377c>  // b.plast
   22c58:	lsl	x0, x2, x0
   22c5c:	cmp	x0, x24
   22c60:	b.cs	22d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37b0>  // b.hs, b.nlast
   22c64:	cmp	x3, x4
   22c68:	b.hi	22d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3798>  // b.pmore
   22c6c:	mov	x24, x4
   22c70:	ldr	x0, [x22]
   22c74:	lsl	x24, x24, #3
   22c78:	cbz	x0, 22cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3748>
   22c7c:	sub	x1, x0, #0x1
   22c80:	tst	x1, x0
   22c84:	b.ne	22cf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>  // b.any
   22c88:	add	x24, x24, x1
   22c8c:	neg	x0, x0
   22c90:	and	x24, x24, x0
   22c94:	mov	x1, x23
   22c98:	mov	x0, x24
   22c9c:	mov	w2, #0x0                   	// #0
   22ca0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   22ca4:	mov	x25, x0
   22ca8:	ldr	x1, [x21]
   22cac:	ldr	x2, [x21, #16]
   22cb0:	lsl	x2, x2, #3
   22cb4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   22cb8:	ldp	x0, x1, [x21]
   22cbc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   22cc0:	stp	x25, x24, [x21]
   22cc4:	ldr	x3, [x21, #16]
   22cc8:	add	x24, x3, #0x1
   22ccc:	b	22bf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x366c>
   22cd0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   22cd4:	str	x0, [x22]
   22cd8:	b	22c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f4>
   22cdc:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22ce0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22ce4:	add	x2, x2, #0xce0
   22ce8:	add	x0, x0, #0x9b8
   22cec:	mov	w1, #0x1be                 	// #446
   22cf0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22cf4:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22cf8:	add	x0, x0, #0x970
   22cfc:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   22d00:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   22d04:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22d08:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22d0c:	mov	x3, x24
   22d10:	add	x2, x2, #0xd10
   22d14:	add	x0, x0, #0x9b8
   22d18:	mov	w1, #0x17b                 	// #379
   22d1c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22d20:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22d24:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22d28:	add	x2, x2, #0xd58
   22d2c:	add	x0, x0, #0x9b8
   22d30:	mov	w1, #0x1fd                 	// #509
   22d34:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22d38:	mov	x4, x0
   22d3c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   22d40:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   22d44:	mov	x3, x24
   22d48:	add	x2, x2, #0xd38
   22d4c:	add	x0, x0, #0x9b8
   22d50:	mov	w1, #0x17c                 	// #380
   22d54:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22d58:	stp	x19, x30, [sp, #-16]!
   22d5c:	mov	x19, x0
   22d60:	mov	x2, #0x40                  	// #64
   22d64:	mov	w1, #0x0                   	// #0
   22d68:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22d6c:	mov	x0, #0xffffffffffffffff    	// #-1
   22d70:	str	x0, [x19, #40]
   22d74:	ldp	x19, x30, [sp], #16
   22d78:	ret
   22d7c:	nop
   22d80:	stp	x19, x30, [sp, #-16]!
   22d84:	mov	x19, x0
   22d88:	mov	x1, #0x0                   	// #0
   22d8c:	ldr	x0, [x0, #8]
   22d90:	bl	d220 <__sancov_default_options@@Base+0x870>
   22d94:	ldr	x0, [x19, #32]
   22d98:	mov	x1, #0x0                   	// #0
   22d9c:	bl	d220 <__sancov_default_options@@Base+0x870>
   22da0:	ldr	x0, [x19, #48]
   22da4:	mov	x1, #0x0                   	// #0
   22da8:	bl	d220 <__sancov_default_options@@Base+0x870>
   22dac:	mov	x0, x19
   22db0:	mov	x2, #0x40                  	// #64
   22db4:	mov	w1, #0x0                   	// #0
   22db8:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22dbc:	mov	x0, #0xffffffffffffffff    	// #-1
   22dc0:	str	x0, [x19, #40]
   22dc4:	ldp	x19, x30, [sp], #16
   22dc8:	ret
   22dcc:	nop
   22dd0:	stp	x19, x20, [sp, #-32]!
   22dd4:	mov	x19, x0
   22dd8:	mov	w20, w3
   22ddc:	mov	x0, x1
   22de0:	stp	x21, x30, [sp, #16]
   22de4:	mov	x21, x2
   22de8:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   22dec:	stp	x0, x21, [x19, #8]
   22df0:	str	w20, [x19, #24]
   22df4:	ldp	x21, x30, [sp, #16]
   22df8:	ldp	x19, x20, [sp], #32
   22dfc:	ret
   22e00:	stp	x19, x30, [sp, #-16]!
   22e04:	mov	x19, x0
   22e08:	mov	x2, #0x40                  	// #64
   22e0c:	mov	w1, #0x0                   	// #0
   22e10:	str	xzr, [x19], #8
   22e14:	mov	x0, x19
   22e18:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22e1c:	mov	x0, #0xffffffffffffffff    	// #-1
   22e20:	str	x0, [x19, #40]
   22e24:	ldp	x19, x30, [sp], #16
   22e28:	ret
   22e2c:	nop
   22e30:	stp	x19, x20, [sp, #-32]!
   22e34:	mov	x2, #0x0                   	// #0
   22e38:	mov	x1, #0x0                   	// #0
   22e3c:	stp	x21, x30, [sp, #16]
   22e40:	mov	x21, x0
   22e44:	mov	x0, #0x48                  	// #72
   22e48:	bl	ce20 <__sancov_default_options@@Base+0x470>
   22e4c:	mov	x20, x0
   22e50:	mov	x19, x0
   22e54:	mov	x2, #0x40                  	// #64
   22e58:	mov	w1, #0x0                   	// #0
   22e5c:	str	xzr, [x20], #8
   22e60:	mov	x0, x20
   22e64:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22e68:	mov	x0, #0xffffffffffffffff    	// #-1
   22e6c:	str	x0, [x20, #40]
   22e70:	str	x21, [x19, #8]
   22e74:	mov	x0, x19
   22e78:	ldp	x21, x30, [sp, #16]
   22e7c:	ldp	x19, x20, [sp], #32
   22e80:	ret
   22e84:	nop
   22e88:	stp	x19, x20, [sp, #-32]!
   22e8c:	mov	x19, x0
   22e90:	add	x20, x0, #0x8
   22e94:	ldr	x0, [x0, #16]
   22e98:	mov	x1, #0x0                   	// #0
   22e9c:	str	x30, [sp, #16]
   22ea0:	bl	d220 <__sancov_default_options@@Base+0x870>
   22ea4:	ldr	x0, [x19, #40]
   22ea8:	mov	x1, #0x0                   	// #0
   22eac:	bl	d220 <__sancov_default_options@@Base+0x870>
   22eb0:	ldr	x0, [x19, #56]
   22eb4:	mov	x1, #0x0                   	// #0
   22eb8:	bl	d220 <__sancov_default_options@@Base+0x870>
   22ebc:	mov	w1, #0x0                   	// #0
   22ec0:	mov	x0, x20
   22ec4:	mov	x2, #0x40                  	// #64
   22ec8:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22ecc:	ldr	x0, [x19]
   22ed0:	mov	x1, #0xffffffffffffffff    	// #-1
   22ed4:	str	x1, [x19, #48]
   22ed8:	cbz	x0, 22ee0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3958>
   22edc:	bl	22e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   22ee0:	mov	x0, x19
   22ee4:	mov	x1, #0x0                   	// #0
   22ee8:	ldr	x30, [sp, #16]
   22eec:	ldp	x19, x20, [sp], #32
   22ef0:	b	d220 <__sancov_default_options@@Base+0x870>
   22ef4:	nop
   22ef8:	mov	x2, #0x40                  	// #64
   22efc:	mov	w1, #0x0                   	// #0
   22f00:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22f04:	nop
   22f08:	stp	x19, x30, [sp, #-16]!
   22f0c:	mov	x19, x0
   22f10:	mov	x1, #0x0                   	// #0
   22f14:	ldr	x0, [x0]
   22f18:	bl	d220 <__sancov_default_options@@Base+0x870>
   22f1c:	ldr	x0, [x19, #24]
   22f20:	mov	x1, #0x0                   	// #0
   22f24:	bl	d220 <__sancov_default_options@@Base+0x870>
   22f28:	ldr	x0, [x19, #40]
   22f2c:	mov	x1, #0x0                   	// #0
   22f30:	bl	d220 <__sancov_default_options@@Base+0x870>
   22f34:	mov	x0, x19
   22f38:	mov	x2, #0x40                  	// #64
   22f3c:	ldp	x19, x30, [sp], #16
   22f40:	mov	w1, #0x0                   	// #0
   22f44:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   22f48:	strb	wzr, [x0, #104]
   22f4c:	ret
   22f50:	ldr	x3, [x0, #224]
   22f54:	cbz	x3, 22f7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x39f4>
   22f58:	str	x30, [sp, #-16]!
   22f5c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22f60:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   22f64:	add	x2, x2, #0x930
   22f68:	add	x0, x0, #0x960
   22f6c:	mov	x4, #0x0                   	// #0
   22f70:	mov	x3, #0x0                   	// #0
   22f74:	mov	w1, #0x4e                  	// #78
   22f78:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   22f7c:	ldr	x3, [x0, #232]
   22f80:	cbnz	x3, 22f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39d0>
   22f84:	stp	x1, x2, [x0, #224]
   22f88:	ret
   22f8c:	nop
   22f90:	stp	x19, x20, [sp, #-48]!
   22f94:	mov	x20, x0
   22f98:	ldr	x0, [x0, #32]
   22f9c:	stp	x21, x22, [sp, #16]
   22fa0:	mov	x21, x1
   22fa4:	str	x30, [sp, #32]
   22fa8:	bl	18038 <__sanitizer_set_report_fd@@Base+0x4768>
   22fac:	ldr	x0, [x20, #24]
   22fb0:	cbz	x0, 22fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a38>
   22fb4:	mov	x1, x21
   22fb8:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   22fbc:	cbz	w0, 23060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ad8>
   22fc0:	ldr	x0, [x20, #16]
   22fc4:	mov	x19, #0x0                   	// #0
   22fc8:	cbnz	x0, 22fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a58>
   22fcc:	b	23020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a98>
   22fd0:	ldr	x0, [x20, #16]
   22fd4:	add	x19, x19, #0x1
   22fd8:	cmp	x19, x0
   22fdc:	b.cs	23020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a98>  // b.hs, b.nlast
   22fe0:	ldr	x0, [x20]
   22fe4:	mov	x1, x21
   22fe8:	lsl	x22, x19, #3
   22fec:	ldr	x0, [x0, x19, lsl #3]
   22ff0:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   22ff4:	cbnz	w0, 22fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a48>
   22ff8:	ldr	x4, [x20, #16]
   22ffc:	ldr	x0, [x20]
   23000:	cmp	x4, x19
   23004:	b.ls	23154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bcc>  // b.plast
   23008:	ldr	x0, [x0, x22]
   2300c:	str	x0, [x20, #24]
   23010:	ldp	x21, x22, [sp, #16]
   23014:	ldr	x30, [sp, #32]
   23018:	ldp	x19, x20, [sp], #48
   2301c:	ret
   23020:	mov	x0, x21
   23024:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   23028:	ldp	x4, x3, [x20, #8]
   2302c:	mov	x19, x20
   23030:	str	x0, [x19, #24]!
   23034:	lsr	x4, x4, #3
   23038:	cmp	x3, x4
   2303c:	b.hi	2313c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb4>  // b.pmore
   23040:	add	x21, x3, #0x1
   23044:	b.eq	23074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3aec>  // b.none
   23048:	ldr	x22, [x20]
   2304c:	str	x21, [x20, #16]
   23050:	mov	x1, x19
   23054:	add	x0, x22, x3, lsl #3
   23058:	mov	x2, #0x8                   	// #8
   2305c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23060:	ldp	x21, x22, [sp, #16]
   23064:	ldr	x0, [x20, #24]
   23068:	ldr	x30, [sp, #32]
   2306c:	ldp	x19, x20, [sp], #48
   23070:	ret
   23074:	tst	x3, x21
   23078:	b.eq	230b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b2c>  // b.none
   2307c:	clz	x2, x21
   23080:	mov	w1, #0x3f                  	// #63
   23084:	sub	w1, w1, w2
   23088:	mov	x2, #0x1                   	// #1
   2308c:	add	w4, w1, #0x1
   23090:	lsl	x4, x2, x4
   23094:	cmp	x4, x21
   23098:	b.ls	23120 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b98>  // b.plast
   2309c:	lsl	x1, x2, x1
   230a0:	cmp	x1, x21
   230a4:	b.cs	231a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c1c>  // b.hs, b.nlast
   230a8:	cmp	x3, x4
   230ac:	b.hi	2317c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bf4>  // b.pmore
   230b0:	mov	x21, x4
   230b4:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   230b8:	lsl	x21, x21, #3
   230bc:	ldr	x22, [x22, #4016]
   230c0:	ldr	x0, [x22]
   230c4:	cbz	x0, 23170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   230c8:	sub	x1, x0, #0x1
   230cc:	tst	x0, x1
   230d0:	b.ne	23194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c0c>  // b.any
   230d4:	add	x21, x21, x1
   230d8:	neg	x0, x0
   230dc:	and	x21, x21, x0
   230e0:	mov	w2, #0x0                   	// #0
   230e4:	mov	x0, x21
   230e8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   230ec:	add	x1, x1, #0x988
   230f0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   230f4:	ldr	x1, [x20]
   230f8:	mov	x22, x0
   230fc:	ldr	x2, [x20, #16]
   23100:	lsl	x2, x2, #3
   23104:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23108:	ldp	x0, x1, [x20]
   2310c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   23110:	stp	x22, x21, [x20]
   23114:	ldr	x3, [x20, #16]
   23118:	add	x21, x3, #0x1
   2311c:	b	2304c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac4>
   23120:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   23124:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   23128:	mov	x3, x21
   2312c:	add	x2, x2, #0xd10
   23130:	add	x0, x0, #0x9b8
   23134:	mov	w1, #0x17b                 	// #379
   23138:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2313c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   23140:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   23144:	add	x2, x2, #0xce0
   23148:	add	x0, x0, #0x9b8
   2314c:	mov	w1, #0x1be                 	// #446
   23150:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23154:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   23158:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2315c:	mov	x3, x19
   23160:	add	x2, x2, #0x9a0
   23164:	add	x0, x0, #0x9b8
   23168:	mov	w1, #0x1b6                 	// #438
   2316c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23170:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   23174:	str	x0, [x22]
   23178:	b	230c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b40>
   2317c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   23180:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   23184:	add	x2, x2, #0xd58
   23188:	add	x0, x0, #0x9b8
   2318c:	mov	w1, #0x1fd                 	// #509
   23190:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23194:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   23198:	add	x0, x0, #0x970
   2319c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   231a0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   231a4:	mov	x4, x1
   231a8:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   231ac:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   231b0:	mov	x3, x21
   231b4:	add	x2, x2, #0xd38
   231b8:	add	x0, x0, #0x9b8
   231bc:	mov	w1, #0x17c                 	// #380
   231c0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   231c4:	nop
   231c8:	stp	x19, x20, [sp, #-64]!
   231cc:	mov	x19, x0
   231d0:	stp	x23, x24, [sp, #32]
   231d4:	adrp	x23, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   231d8:	ldr	x20, [x23, #4016]
   231dc:	stp	x21, x22, [sp, #16]
   231e0:	mov	x21, x1
   231e4:	stp	x25, x30, [sp, #48]
   231e8:	str	xzr, [x0]
   231ec:	stp	xzr, xzr, [x0, #8]
   231f0:	ldr	x0, [x20]
   231f4:	cbz	x0, 232fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d74>
   231f8:	sub	x1, x0, #0x1
   231fc:	tst	x1, x0
   23200:	b.ne	23308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d80>  // b.any
   23204:	add	x20, x0, #0x7
   23208:	neg	x0, x0
   2320c:	and	x20, x20, x0
   23210:	mov	w2, #0x0                   	// #0
   23214:	mov	x0, x20
   23218:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2321c:	add	x1, x25, #0x988
   23220:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   23224:	ldr	x1, [x19]
   23228:	mov	x22, x0
   2322c:	ldr	x2, [x19, #16]
   23230:	add	x24, x19, #0x70
   23234:	lsl	x2, x2, #3
   23238:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   2323c:	ldp	x0, x1, [x19]
   23240:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   23244:	stp	x22, x20, [x19]
   23248:	lsr	x0, x20, #3
   2324c:	stp	xzr, x24, [x19, #24]
   23250:	cmp	x0, #0x3e7
   23254:	b.ls	23294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.plast
   23258:	strb	wzr, [x19, #64]
   2325c:	mov	x0, x24
   23260:	strb	wzr, [x19, #96]
   23264:	strb	wzr, [x19, #104]
   23268:	bl	17f20 <__sanitizer_set_report_fd@@Base+0x4650>
   2326c:	stp	xzr, xzr, [x19, #224]
   23270:	ldp	x0, x1, [x21]
   23274:	stp	x0, x1, [x19, #200]
   23278:	ldr	x0, [x21, #16]
   2327c:	ldp	x21, x22, [sp, #16]
   23280:	ldp	x23, x24, [sp, #32]
   23284:	ldp	x25, x30, [sp, #48]
   23288:	str	x0, [x19, #216]
   2328c:	ldp	x19, x20, [sp], #64
   23290:	ret
   23294:	ldr	x3, [x19, #16]
   23298:	cmp	x3, #0x3e8
   2329c:	b.hi	23324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d9c>  // b.pmore
   232a0:	ldr	x23, [x23, #4016]
   232a4:	ldr	x0, [x23]
   232a8:	cbz	x0, 23318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d90>
   232ac:	sub	x1, x0, #0x1
   232b0:	tst	x1, x0
   232b4:	b.ne	23308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d80>  // b.any
   232b8:	mov	x1, #0x1f3f                	// #7999
   232bc:	add	x20, x0, x1
   232c0:	neg	x0, x0
   232c4:	add	x1, x25, #0x988
   232c8:	and	x20, x20, x0
   232cc:	mov	w2, #0x0                   	// #0
   232d0:	mov	x0, x20
   232d4:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   232d8:	ldr	x1, [x19]
   232dc:	mov	x22, x0
   232e0:	ldr	x2, [x19, #16]
   232e4:	lsl	x2, x2, #3
   232e8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   232ec:	ldp	x0, x1, [x19]
   232f0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   232f4:	stp	x22, x20, [x19]
   232f8:	b	23258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cd0>
   232fc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   23300:	str	x0, [x20]
   23304:	b	231f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c70>
   23308:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2330c:	add	x0, x0, #0x970
   23310:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   23314:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   23318:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   2331c:	str	x0, [x23]
   23320:	b	232ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d24>
   23324:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   23328:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2332c:	add	x2, x2, #0xd58
   23330:	add	x0, x0, #0x9b8
   23334:	mov	x4, #0x3e8                 	// #1000
   23338:	mov	w1, #0x1fd                 	// #509
   2333c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23340:	str	x1, [x0]
   23344:	ldr	x0, [x1, #224]
   23348:	cbz	x0, 23354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dcc>
   2334c:	mov	x16, x0
   23350:	br	x16
   23354:	ret
   23358:	ldr	x0, [x0]
   2335c:	ldr	x0, [x0, #232]
   23360:	cbz	x0, 2336c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de4>
   23364:	mov	x16, x0
   23368:	br	x16
   2336c:	ret
   23370:	ret
   23374:	nop
   23378:	stp	x19, x20, [sp, #-80]!
   2337c:	dup	v0.2d, x2
   23380:	mov	x20, x0
   23384:	ldr	x0, [x0, #16]
   23388:	adrp	x19, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   2338c:	add	x19, x19, #0x370
   23390:	stp	x21, x22, [sp, #16]
   23394:	add	x22, sp, #0x30
   23398:	mov	x3, x19
   2339c:	mov	x21, x1
   233a0:	mov	x4, x22
   233a4:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   233a8:	add	x2, x2, #0x7f8
   233ac:	str	x30, [sp, #32]
   233b0:	str	q0, [sp, #48]
   233b4:	str	xzr, [sp, #64]
   233b8:	bl	63e0 <__asan_backtrace_pcinfo@plt>
   233bc:	ldr	x0, [sp, #64]
   233c0:	cbz	x0, 233d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e50>
   233c4:	mov	w0, #0x1                   	// #1
   233c8:	ldp	x21, x22, [sp, #16]
   233cc:	ldr	x30, [sp, #32]
   233d0:	ldp	x19, x20, [sp], #80
   233d4:	ret
   233d8:	ldr	x0, [x20, #16]
   233dc:	mov	x4, x22
   233e0:	mov	x3, x19
   233e4:	mov	x1, x21
   233e8:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   233ec:	add	x2, x2, #0x668
   233f0:	bl	6520 <__asan_backtrace_syminfo@plt>
   233f4:	ldr	x0, [sp, #64]
   233f8:	ldp	x21, x22, [sp, #16]
   233fc:	cmp	x0, #0x0
   23400:	cset	w0, ne  // ne = any
   23404:	ldr	x30, [sp, #32]
   23408:	ldp	x19, x20, [sp], #80
   2340c:	ret
   23410:	ldr	x0, [x0, #16]
   23414:	str	x30, [sp, #-16]!
   23418:	mov	x4, x2
   2341c:	adrp	x3, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   23420:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   23424:	add	x3, x3, #0x370
   23428:	add	x2, x2, #0x500
   2342c:	bl	6520 <__asan_backtrace_syminfo@plt>
   23430:	mov	w0, #0x1                   	// #1
   23434:	ldr	x30, [sp], #16
   23438:	ret
   2343c:	nop
   23440:	stp	x19, x20, [sp, #-48]!
   23444:	mov	x19, x2
   23448:	mov	x20, x1
   2344c:	add	x2, x1, #0x1
   23450:	stp	x21, x22, [sp, #16]
   23454:	mov	x21, x0
   23458:	ldp	x3, x1, [x19, #8]
   2345c:	str	x30, [sp, #32]
   23460:	add	x0, x2, x3
   23464:	cmp	x1, x0
   23468:	b.cc	234a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>  // b.lo, b.ul, b.last
   2346c:	ldr	x22, [x19]
   23470:	mov	x1, x21
   23474:	add	x0, x22, x3
   23478:	mov	x2, x20
   2347c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23480:	ldp	x0, x1, [x19]
   23484:	add	x0, x0, x20
   23488:	strb	wzr, [x0, x1]
   2348c:	ldr	x1, [x19, #8]
   23490:	ldp	x21, x22, [sp, #16]
   23494:	add	x20, x1, x20
   23498:	ldr	x30, [sp, #32]
   2349c:	str	x20, [x19, #8]
   234a0:	ldp	x19, x20, [sp], #48
   234a4:	ret
   234a8:	cmp	x0, x1, lsl #1
   234ac:	lsl	x1, x1, #1
   234b0:	b.hi	234f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f6c>  // b.pmore
   234b4:	mov	x0, x1
   234b8:	str	x1, [x19, #16]
   234bc:	mov	x1, #0x0                   	// #0
   234c0:	mov	x2, #0x0                   	// #0
   234c4:	bl	ce20 <__sancov_default_options@@Base+0x470>
   234c8:	mov	x22, x0
   234cc:	ldr	x1, [x19]
   234d0:	cbz	x1, 234e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f60>
   234d4:	ldr	x2, [x19, #8]
   234d8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   234dc:	ldr	x0, [x19]
   234e0:	mov	x1, #0x0                   	// #0
   234e4:	bl	d220 <__sancov_default_options@@Base+0x870>
   234e8:	str	x22, [x19]
   234ec:	ldr	x3, [x19, #8]
   234f0:	b	23470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ee8>
   234f4:	str	x0, [x19, #16]
   234f8:	b	234bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f34>
   234fc:	nop
   23500:	cmp	x2, #0x0
   23504:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   23508:	b.ne	23510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f88>  // b.any
   2350c:	ret
   23510:	stp	x19, x20, [sp, #-80]!
   23514:	mov	x19, x2
   23518:	mov	x20, x3
   2351c:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   23520:	add	x3, sp, #0x30
   23524:	add	x2, x2, #0x440
   23528:	mov	w1, #0x3                   	// #3
   2352c:	stp	x21, x22, [sp, #16]
   23530:	mov	x21, x0
   23534:	mov	x22, x4
   23538:	mov	x0, x19
   2353c:	stp	x23, x30, [sp, #32]
   23540:	str	xzr, [sp, #48]
   23544:	stp	xzr, xzr, [sp, #56]
   23548:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   2354c:	cbnz	w0, 23584 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ffc>
   23550:	ldr	x0, [sp, #48]
   23554:	cbz	x0, 23560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   23558:	mov	x1, #0x0                   	// #0
   2355c:	bl	d220 <__sancov_default_options@@Base+0x870>
   23560:	mov	x0, x19
   23564:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   23568:	mov	x23, x0
   2356c:	stp	x23, x20, [x21, #40]
   23570:	str	x22, [x21, #56]
   23574:	ldp	x21, x22, [sp, #16]
   23578:	ldp	x23, x30, [sp, #32]
   2357c:	ldp	x19, x20, [sp], #80
   23580:	ret
   23584:	ldp	x23, x0, [sp, #48]
   23588:	ldr	x1, [sp, #64]
   2358c:	add	x0, x0, #0x40
   23590:	cmp	x0, x1
   23594:	b.ls	235b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x402c>  // b.plast
   23598:	cbz	x23, 23560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   2359c:	stp	x23, x20, [x21, #40]
   235a0:	str	x22, [x21, #56]
   235a4:	ldp	x21, x22, [sp, #16]
   235a8:	ldp	x23, x30, [sp, #32]
   235ac:	ldp	x19, x20, [sp], #80
   235b0:	ret
   235b4:	mov	x0, x23
   235b8:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   235bc:	mov	x23, x0
   235c0:	mov	x1, #0x0                   	// #0
   235c4:	ldr	x0, [sp, #48]
   235c8:	bl	d220 <__sancov_default_options@@Base+0x870>
   235cc:	cbnz	x23, 2359c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4014>
   235d0:	b	23560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>
   235d4:	nop
   235d8:	stp	x19, x30, [sp, #-48]!
   235dc:	mov	x0, x1
   235e0:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   235e4:	add	x3, sp, #0x10
   235e8:	add	x2, x2, #0x440
   235ec:	mov	w1, #0x3                   	// #3
   235f0:	str	xzr, [sp, #16]
   235f4:	stp	xzr, xzr, [sp, #24]
   235f8:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   235fc:	cbz	w0, 23620 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4098>
   23600:	ldp	x19, x0, [sp, #16]
   23604:	ldr	x1, [sp, #32]
   23608:	add	x0, x0, #0x40
   2360c:	cmp	x0, x1
   23610:	b.ls	23644 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40bc>  // b.plast
   23614:	mov	x0, x19
   23618:	ldp	x19, x30, [sp], #48
   2361c:	ret
   23620:	ldr	x19, [sp, #16]
   23624:	cbz	x19, 23614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408c>
   23628:	mov	x0, x19
   2362c:	mov	x1, #0x0                   	// #0
   23630:	mov	x19, #0x0                   	// #0
   23634:	bl	d220 <__sancov_default_options@@Base+0x870>
   23638:	mov	x0, x19
   2363c:	ldp	x19, x30, [sp], #48
   23640:	ret
   23644:	mov	x0, x19
   23648:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   2364c:	mov	x19, x0
   23650:	mov	x1, #0x0                   	// #0
   23654:	ldr	x0, [sp, #16]
   23658:	bl	d220 <__sancov_default_options@@Base+0x870>
   2365c:	mov	x0, x19
   23660:	ldp	x19, x30, [sp], #48
   23664:	ret
   23668:	cbz	x2, 23710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4188>
   2366c:	stp	x19, x20, [sp, #-80]!
   23670:	mov	x19, x0
   23674:	stp	x21, x22, [sp, #16]
   23678:	ldr	x22, [x0, #8]
   2367c:	str	x30, [sp, #32]
   23680:	cbz	x22, 2376c <__sanitizer_get_module_and_offset_for_pc@@Base+0x41e4>
   23684:	ldr	x0, [x0, #16]
   23688:	mov	x21, x1
   2368c:	mov	x20, x2
   23690:	cbnz	x0, 2378c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   23694:	ldr	x0, [x19]
   23698:	ldr	x4, [x0, #8]
   2369c:	cmp	x21, x4
   236a0:	b.ne	237bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4234>  // b.any
   236a4:	ldr	x4, [x22, #8]
   236a8:	cmp	x21, x4
   236ac:	b.ne	237d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>  // b.any
   236b0:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   236b4:	add	x3, sp, #0x30
   236b8:	add	x2, x2, #0x440
   236bc:	mov	x0, x20
   236c0:	mov	w1, #0x3                   	// #3
   236c4:	str	xzr, [sp, #48]
   236c8:	stp	xzr, xzr, [sp, #56]
   236cc:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   236d0:	cbnz	w0, 23714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x418c>
   236d4:	ldr	x0, [sp, #48]
   236d8:	cbz	x0, 236e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   236dc:	mov	x1, #0x0                   	// #0
   236e0:	bl	d220 <__sancov_default_options@@Base+0x870>
   236e4:	mov	x0, x20
   236e8:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   236ec:	mov	x21, x0
   236f0:	ldr	x0, [x19, #16]
   236f4:	ldr	x30, [sp, #32]
   236f8:	str	x21, [x22, #40]
   236fc:	add	x0, x0, #0x1
   23700:	ldp	x21, x22, [sp, #16]
   23704:	str	x0, [x19, #16]
   23708:	ldp	x19, x20, [sp], #80
   2370c:	ret
   23710:	ret
   23714:	ldp	x21, x0, [sp, #48]
   23718:	ldr	x1, [sp, #64]
   2371c:	add	x0, x0, #0x40
   23720:	cmp	x0, x1
   23724:	b.ls	2374c <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c4>  // b.plast
   23728:	cbz	x21, 236e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   2372c:	ldr	x0, [x19, #16]
   23730:	ldr	x30, [sp, #32]
   23734:	str	x21, [x22, #40]
   23738:	add	x0, x0, #0x1
   2373c:	ldp	x21, x22, [sp, #16]
   23740:	str	x0, [x19, #16]
   23744:	ldp	x19, x20, [sp], #80
   23748:	ret
   2374c:	mov	x0, x21
   23750:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   23754:	mov	x21, x0
   23758:	mov	x1, #0x0                   	// #0
   2375c:	ldr	x0, [sp, #48]
   23760:	bl	d220 <__sancov_default_options@@Base+0x870>
   23764:	cbnz	x21, 2372c <__sanitizer_get_module_and_offset_for_pc@@Base+0x41a4>
   23768:	b	236e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x415c>
   2376c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23770:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23774:	add	x2, x2, #0x9a8
   23778:	add	x0, x0, #0x9b8
   2377c:	mov	x4, #0x0                   	// #0
   23780:	mov	x3, #0x0                   	// #0
   23784:	mov	w1, #0x5c                  	// #92
   23788:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2378c:	mov	x0, x1
   23790:	bl	22e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   23794:	ldr	x3, [x19]
   23798:	mov	x22, x0
   2379c:	add	x0, x0, #0x8
   237a0:	ldp	x1, x2, [x3, #16]
   237a4:	ldr	w3, [x3, #32]
   237a8:	bl	22dd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   237ac:	ldr	x0, [x19, #8]
   237b0:	str	x22, [x0]
   237b4:	str	x22, [x19, #8]
   237b8:	b	23694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x410c>
   237bc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   237c0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   237c4:	mov	x3, x21
   237c8:	add	x2, x2, #0xa08
   237cc:	add	x0, x0, #0x9b8
   237d0:	mov	w1, #0x65                  	// #101
   237d4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   237d8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   237dc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   237e0:	mov	x3, x21
   237e4:	add	x2, x2, #0xa30
   237e8:	add	x0, x0, #0x9b8
   237ec:	mov	w1, #0x66                  	// #102
   237f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   237f4:	nop
   237f8:	cbz	x4, 238cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4344>
   237fc:	stp	x19, x20, [sp, #-96]!
   23800:	mov	x19, x0
   23804:	stp	x21, x22, [sp, #16]
   23808:	ldr	x21, [x0, #8]
   2380c:	stp	x23, x24, [sp, #32]
   23810:	str	x30, [sp, #48]
   23814:	cbz	x21, 23910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4388>
   23818:	ldr	x0, [x0, #16]
   2381c:	mov	x22, x1
   23820:	mov	x23, x2
   23824:	mov	w24, w3
   23828:	mov	x20, x4
   2382c:	cbnz	x0, 23930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43a8>
   23830:	ldr	x0, [x19]
   23834:	ldr	x4, [x0, #8]
   23838:	cmp	x22, x4
   2383c:	b.ne	23960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43d8>  // b.any
   23840:	ldr	x4, [x21, #8]
   23844:	cmp	x22, x4
   23848:	b.ne	2397c <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f4>  // b.any
   2384c:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   23850:	add	x3, sp, #0x40
   23854:	add	x2, x2, #0x440
   23858:	mov	x0, x20
   2385c:	mov	w1, #0x3                   	// #3
   23860:	str	xzr, [sp, #64]
   23864:	stp	xzr, xzr, [sp, #72]
   23868:	bl	69f0 <__asan_cplus_demangle_v3_callback@plt>
   2386c:	cbnz	w0, 238d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x434c>
   23870:	ldr	x0, [sp, #64]
   23874:	cbz	x0, 23880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   23878:	mov	x1, #0x0                   	// #0
   2387c:	bl	d220 <__sancov_default_options@@Base+0x870>
   23880:	mov	x0, x20
   23884:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   23888:	mov	x22, x0
   2388c:	str	x22, [x21, #40]
   23890:	add	x21, x21, #0x8
   23894:	cbz	x23, 238a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x431c>
   23898:	mov	x0, x23
   2389c:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   238a0:	str	x0, [x21, #48]
   238a4:	ldr	x0, [x19, #16]
   238a8:	ldr	x30, [sp, #48]
   238ac:	str	w24, [x21, #56]
   238b0:	add	x0, x0, #0x1
   238b4:	ldp	x21, x22, [sp, #16]
   238b8:	ldp	x23, x24, [sp, #32]
   238bc:	str	x0, [x19, #16]
   238c0:	mov	w0, #0x0                   	// #0
   238c4:	ldp	x19, x20, [sp], #96
   238c8:	ret
   238cc:	mov	w0, #0x0                   	// #0
   238d0:	ret
   238d4:	ldp	x22, x0, [sp, #64]
   238d8:	ldr	x1, [sp, #80]
   238dc:	add	x0, x0, #0x40
   238e0:	cmp	x0, x1
   238e4:	b.ls	238f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4368>  // b.plast
   238e8:	cbnz	x22, 2388c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4304>
   238ec:	b	23880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   238f0:	mov	x0, x22
   238f4:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   238f8:	mov	x22, x0
   238fc:	mov	x1, #0x0                   	// #0
   23900:	ldr	x0, [sp, #64]
   23904:	bl	d220 <__sancov_default_options@@Base+0x870>
   23908:	cbnz	x22, 2388c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4304>
   2390c:	b	23880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f8>
   23910:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23914:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23918:	add	x2, x2, #0x9a8
   2391c:	add	x0, x0, #0x9b8
   23920:	mov	x4, #0x0                   	// #0
   23924:	mov	x3, #0x0                   	// #0
   23928:	mov	w1, #0x5c                  	// #92
   2392c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23930:	mov	x0, x1
   23934:	bl	22e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   23938:	ldr	x3, [x19]
   2393c:	mov	x21, x0
   23940:	add	x0, x0, #0x8
   23944:	ldp	x1, x2, [x3, #16]
   23948:	ldr	w3, [x3, #32]
   2394c:	bl	22dd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   23950:	ldr	x0, [x19, #8]
   23954:	str	x21, [x0]
   23958:	str	x21, [x19, #8]
   2395c:	b	23830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a8>
   23960:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23964:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23968:	mov	x3, x22
   2396c:	add	x2, x2, #0xa08
   23970:	add	x0, x0, #0x9b8
   23974:	mov	w1, #0x65                  	// #101
   23978:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2397c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23980:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23984:	mov	x3, x22
   23988:	add	x2, x2, #0xa30
   2398c:	add	x0, x0, #0x9b8
   23990:	mov	w1, #0x66                  	// #102
   23994:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23998:	stp	x19, x20, [sp, #-32]!
   2399c:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   239a0:	mov	x20, x0
   239a4:	add	x2, x2, #0x370
   239a8:	adrp	x0, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   239ac:	mov	x3, #0x0                   	// #0
   239b0:	add	x0, x0, #0xb90
   239b4:	mov	w1, #0x0                   	// #0
   239b8:	str	x30, [sp, #16]
   239bc:	bl	6690 <__asan_backtrace_create_state@plt>
   239c0:	cbz	x0, 239f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4468>
   239c4:	mov	x19, x0
   239c8:	mov	x1, #0x18                  	// #24
   239cc:	mov	x0, x20
   239d0:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   239d4:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   239d8:	add	x1, x1, #0xe60
   239dc:	stp	x1, xzr, [x0]
   239e0:	str	x19, [x0, #16]
   239e4:	ldr	x30, [sp, #16]
   239e8:	ldp	x19, x20, [sp], #32
   239ec:	ret
   239f0:	mov	x0, #0x0                   	// #0
   239f4:	ldr	x30, [sp, #16]
   239f8:	ldp	x19, x20, [sp], #32
   239fc:	ret
   23a00:	ret
   23a04:	nop
   23a08:	stp	x19, x20, [sp, #-96]!
   23a0c:	mov	x19, #0x0                   	// #0
   23a10:	stp	x21, x22, [sp, #16]
   23a14:	mov	x22, x0
   23a18:	mov	x21, x1
   23a1c:	stp	x23, x24, [sp, #32]
   23a20:	adrp	x24, 25000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a78>
   23a24:	mov	x23, x2
   23a28:	add	x24, x24, #0x470
   23a2c:	stp	x25, x26, [sp, #48]
   23a30:	sub	x26, x2, #0x1
   23a34:	add	x25, sp, #0x58
   23a38:	str	x30, [sp, #64]
   23a3c:	b	23a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d8>
   23a40:	cmp	x19, #0x1
   23a44:	b.ls	23a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.plast
   23a48:	ldurb	w0, [x1, #-1]
   23a4c:	cmp	w0, #0xa
   23a50:	b.eq	23ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4558>  // b.none
   23a54:	add	x0, x19, #0x1
   23a58:	cmp	x23, x0
   23a5c:	b.eq	23b28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45a0>  // b.none
   23a60:	ldr	w0, [x22, #16]
   23a64:	mov	x3, x25
   23a68:	sub	x2, x26, x19
   23a6c:	add	x1, x21, x19
   23a70:	mov	x4, #0x0                   	// #0
   23a74:	str	xzr, [sp, #88]
   23a78:	bl	1a890 <__sanitizer_set_report_fd@@Base+0x6fc0>
   23a7c:	ands	w20, w0, #0xff
   23a80:	b.eq	23af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>  // b.none
   23a84:	ldr	x3, [sp, #88]
   23a88:	add	x19, x19, x3
   23a8c:	add	x1, x21, x19
   23a90:	cbz	x3, 23af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4570>
   23a94:	ldr	x0, [x22]
   23a98:	ldr	x3, [x0]
   23a9c:	cmp	x3, x24
   23aa0:	b.eq	23a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44b8>  // b.none
   23aa4:	mov	x2, x19
   23aa8:	mov	x1, x21
   23aac:	mov	x0, x22
   23ab0:	blr	x3
   23ab4:	tst	w0, #0xff
   23ab8:	b.eq	23a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.none
   23abc:	add	x21, x21, x19
   23ac0:	strb	wzr, [x21]
   23ac4:	mov	w0, w20
   23ac8:	ldp	x21, x22, [sp, #16]
   23acc:	ldp	x23, x24, [sp, #32]
   23ad0:	ldp	x25, x26, [sp, #48]
   23ad4:	ldr	x30, [sp, #64]
   23ad8:	ldp	x19, x20, [sp], #96
   23adc:	ret
   23ae0:	ldurb	w0, [x1, #-2]
   23ae4:	cmp	w0, #0xa
   23ae8:	b.ne	23a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44cc>  // b.any
   23aec:	mov	x21, x1
   23af0:	strb	wzr, [x21]
   23af4:	b	23ac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x453c>
   23af8:	ldr	w1, [x22, #16]
   23afc:	mov	w20, #0x0                   	// #0
   23b00:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23b04:	add	x0, x0, #0xb08
   23b08:	bl	1cd78 <OnPrint@@Base+0x398>
   23b0c:	mov	w0, w20
   23b10:	ldp	x21, x22, [sp, #16]
   23b14:	ldp	x23, x24, [sp, #32]
   23b18:	ldp	x25, x26, [sp, #48]
   23b1c:	ldr	x30, [sp, #64]
   23b20:	ldp	x19, x20, [sp], #96
   23b24:	ret
   23b28:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23b2c:	add	x0, x0, #0xb38
   23b30:	bl	1cd78 <OnPrint@@Base+0x398>
   23b34:	strb	wzr, [x21]
   23b38:	b	23ac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x453c>
   23b3c:	nop
   23b40:	cbz	x2, 23b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c0>
   23b44:	b	23a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   23b48:	mov	w0, #0x1                   	// #1
   23b4c:	ret
   23b50:	stp	x19, x20, [sp, #-32]!
   23b54:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   23b58:	mov	w2, #0x1                   	// #1
   23b5c:	ldr	x0, [x19, #3984]
   23b60:	str	x30, [sp, #16]
   23b64:	ldxrb	w1, [x0]
   23b68:	stxrb	w3, w2, [x0]
   23b6c:	cbnz	w3, 23b64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45dc>
   23b70:	dmb	ish
   23b74:	tst	w1, #0xff
   23b78:	b.eq	23b80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f8>  // b.none
   23b7c:	bl	be30 <__ubsan_handle_cfi_bad_type@@Base+0x5d8>
   23b80:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   23b84:	ldr	x20, [x20, #3936]
   23b88:	ldr	x0, [x20]
   23b8c:	cbz	x0, 23ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4620>
   23b90:	dmb	ish
   23b94:	ldr	x19, [x19, #3984]
   23b98:	strb	wzr, [x19]
   23b9c:	ldr	x30, [sp, #16]
   23ba0:	ldp	x19, x20, [sp], #32
   23ba4:	ret
   23ba8:	bl	25a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64c0>
   23bac:	str	x0, [x20]
   23bb0:	cbnz	x0, 23b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4608>
   23bb4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23bb8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23bbc:	add	x2, x2, #0xb60
   23bc0:	add	x0, x0, #0xb78
   23bc4:	mov	x4, #0x0                   	// #0
   23bc8:	mov	x3, #0x0                   	// #0
   23bcc:	mov	w1, #0x17                  	// #23
   23bd0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   23bd4:	nop
   23bd8:	stp	x19, x20, [sp, #-32]!
   23bdc:	mov	x20, x0
   23be0:	stp	x21, x30, [sp, #16]
   23be4:	mov	x21, x2
   23be8:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   23bec:	mov	x2, #0x0                   	// #0
   23bf0:	mov	x19, x0
   23bf4:	mov	x1, #0x0                   	// #0
   23bf8:	add	x0, x0, #0x1
   23bfc:	bl	ce20 <__sancov_default_options@@Base+0x470>
   23c00:	str	x0, [x21]
   23c04:	mov	x2, x19
   23c08:	mov	x1, x20
   23c0c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23c10:	ldr	x1, [x21]
   23c14:	add	x0, x20, x19
   23c18:	strb	wzr, [x1, x19]
   23c1c:	ldrb	w1, [x20, x19]
   23c20:	ldp	x21, x30, [sp, #16]
   23c24:	cmp	w1, #0x0
   23c28:	cinc	x0, x0, ne  // ne = any
   23c2c:	ldp	x19, x20, [sp], #32
   23c30:	ret
   23c34:	nop
   23c38:	stp	x19, x20, [sp, #-48]!
   23c3c:	stp	x21, x22, [sp, #16]
   23c40:	mov	x21, x0
   23c44:	stp	x23, x30, [sp, #32]
   23c48:	mov	x23, x2
   23c4c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   23c50:	mov	x2, #0x0                   	// #0
   23c54:	mov	x19, x0
   23c58:	mov	x1, #0x0                   	// #0
   23c5c:	add	x0, x0, #0x1
   23c60:	bl	ce20 <__sancov_default_options@@Base+0x470>
   23c64:	mov	x20, x0
   23c68:	mov	x2, x19
   23c6c:	mov	x1, x21
   23c70:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23c74:	add	x22, x21, x19
   23c78:	strb	wzr, [x20, x19]
   23c7c:	ldrb	w0, [x21, x19]
   23c80:	cmp	w0, #0x0
   23c84:	cinc	x22, x22, ne  // ne = any
   23c88:	cbz	x20, 23c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4710>
   23c8c:	mov	x0, x20
   23c90:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   23c94:	str	w0, [x23]
   23c98:	mov	x0, x20
   23c9c:	mov	x1, #0x0                   	// #0
   23ca0:	bl	d220 <__sancov_default_options@@Base+0x870>
   23ca4:	mov	x0, x22
   23ca8:	ldp	x21, x22, [sp, #16]
   23cac:	ldp	x23, x30, [sp, #32]
   23cb0:	ldp	x19, x20, [sp], #48
   23cb4:	ret
   23cb8:	stp	x19, x20, [sp, #-48]!
   23cbc:	stp	x21, x22, [sp, #16]
   23cc0:	mov	x21, x0
   23cc4:	stp	x23, x30, [sp, #32]
   23cc8:	mov	x23, x2
   23ccc:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   23cd0:	mov	x2, #0x0                   	// #0
   23cd4:	mov	x19, x0
   23cd8:	mov	x1, #0x0                   	// #0
   23cdc:	add	x0, x0, #0x1
   23ce0:	bl	ce20 <__sancov_default_options@@Base+0x470>
   23ce4:	mov	x20, x0
   23ce8:	mov	x2, x19
   23cec:	mov	x1, x21
   23cf0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23cf4:	add	x22, x21, x19
   23cf8:	strb	wzr, [x20, x19]
   23cfc:	ldrb	w0, [x21, x19]
   23d00:	cmp	w0, #0x0
   23d04:	cinc	x22, x22, ne  // ne = any
   23d08:	cbz	x20, 23d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4790>
   23d0c:	mov	x0, x20
   23d10:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   23d14:	str	x0, [x23]
   23d18:	mov	x0, x20
   23d1c:	mov	x1, #0x0                   	// #0
   23d20:	bl	d220 <__sancov_default_options@@Base+0x870>
   23d24:	mov	x0, x22
   23d28:	ldp	x21, x22, [sp, #16]
   23d2c:	ldp	x23, x30, [sp, #32]
   23d30:	ldp	x19, x20, [sp], #48
   23d34:	ret
   23d38:	stp	x19, x20, [sp, #-48]!
   23d3c:	mov	x20, x0
   23d40:	stp	x21, x22, [sp, #16]
   23d44:	mov	x21, x2
   23d48:	stp	x23, x30, [sp, #32]
   23d4c:	mov	x23, x1
   23d50:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
   23d54:	cbz	x0, 23dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x483c>
   23d58:	mov	x19, x0
   23d5c:	sub	x22, x0, x20
   23d60:	mov	x2, #0x0                   	// #0
   23d64:	mov	x1, #0x0                   	// #0
   23d68:	add	x0, x22, #0x1
   23d6c:	bl	ce20 <__sancov_default_options@@Base+0x470>
   23d70:	str	x0, [x21]
   23d74:	mov	x1, x20
   23d78:	mov	x2, x22
   23d7c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   23d80:	ldr	x0, [x21]
   23d84:	strb	wzr, [x0, x22]
   23d88:	ldrb	w0, [x19]
   23d8c:	cbnz	w0, 23da4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x481c>
   23d90:	mov	x0, x19
   23d94:	ldp	x21, x22, [sp, #16]
   23d98:	ldp	x23, x30, [sp, #32]
   23d9c:	ldp	x19, x20, [sp], #48
   23da0:	ret
   23da4:	mov	x0, x23
   23da8:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   23dac:	add	x19, x19, x0
   23db0:	mov	x0, x19
   23db4:	ldp	x21, x22, [sp, #16]
   23db8:	ldp	x23, x30, [sp, #32]
   23dbc:	ldp	x19, x20, [sp], #48
   23dc0:	ret
   23dc4:	mov	x0, x20
   23dc8:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   23dcc:	mov	x22, x0
   23dd0:	add	x19, x20, x0
   23dd4:	b	23d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d8>
   23dd8:	stp	x19, x20, [sp, #-64]!
   23ddc:	stp	x21, x22, [sp, #16]
   23de0:	mov	x21, x0
   23de4:	stp	x23, x30, [sp, #32]
   23de8:	add	x23, x0, #0x70
   23dec:	mov	x0, x23
   23df0:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   23df4:	ldr	x19, [x21, #208]
   23df8:	cbz	x19, 23e34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48ac>
   23dfc:	adrp	x22, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   23e00:	add	x20, sp, #0x38
   23e04:	add	x22, x22, #0xa00
   23e08:	mov	x1, x21
   23e0c:	mov	x0, x20
   23e10:	bl	23340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   23e14:	ldr	x1, [x19]
   23e18:	mov	x0, x20
   23e1c:	ldr	x1, [x1, #16]
   23e20:	cmp	x1, x22
   23e24:	b.ne	23e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c4>  // b.any
   23e28:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   23e2c:	ldr	x19, [x19, #8]
   23e30:	cbnz	x19, 23e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4880>
   23e34:	mov	x0, x23
   23e38:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   23e3c:	ldp	x21, x22, [sp, #16]
   23e40:	ldp	x23, x30, [sp, #32]
   23e44:	ldp	x19, x20, [sp], #64
   23e48:	ret
   23e4c:	mov	x0, x19
   23e50:	blr	x1
   23e54:	mov	x0, x20
   23e58:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   23e5c:	ldr	x19, [x19, #8]
   23e60:	cbnz	x19, 23e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4880>
   23e64:	mov	x0, x23
   23e68:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   23e6c:	ldp	x21, x22, [sp, #16]
   23e70:	ldp	x23, x30, [sp, #32]
   23e74:	ldp	x19, x20, [sp], #64
   23e78:	ret
   23e7c:	nop
   23e80:	stp	x19, x20, [sp, #-80]!
   23e84:	stp	x21, x22, [sp, #16]
   23e88:	mov	x21, x0
   23e8c:	stp	x25, x30, [sp, #48]
   23e90:	add	x25, x0, #0x70
   23e94:	mov	x0, x25
   23e98:	stp	x23, x24, [sp, #32]
   23e9c:	mov	x24, x1
   23ea0:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   23ea4:	ldr	x19, [x21, #208]
   23ea8:	cbz	x19, 23f24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x499c>
   23eac:	adrp	x22, 25000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a78>
   23eb0:	add	x20, sp, #0x48
   23eb4:	add	x22, x22, #0x468
   23eb8:	b	23ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4944>
   23ebc:	mov	x0, x20
   23ec0:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   23ec4:	ldr	x19, [x19, #8]
   23ec8:	cbz	x19, 23f24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x499c>
   23ecc:	mov	x1, x21
   23ed0:	mov	x0, x20
   23ed4:	bl	23340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   23ed8:	ldr	x2, [x19]
   23edc:	ldr	x2, [x2, #24]
   23ee0:	cmp	x2, x22
   23ee4:	b.eq	23ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4934>  // b.none
   23ee8:	mov	x1, x24
   23eec:	mov	x0, x19
   23ef0:	blr	x2
   23ef4:	mov	x23, x0
   23ef8:	cbz	x0, 23ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4934>
   23efc:	mov	x0, x20
   23f00:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   23f04:	mov	x0, x25
   23f08:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   23f0c:	mov	x0, x23
   23f10:	ldp	x21, x22, [sp, #16]
   23f14:	ldp	x23, x24, [sp, #32]
   23f18:	ldp	x25, x30, [sp, #48]
   23f1c:	ldp	x19, x20, [sp], #80
   23f20:	ret
   23f24:	mov	x1, x24
   23f28:	mov	x0, x21
   23f2c:	bl	259a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6420>
   23f30:	mov	x23, x0
   23f34:	mov	x0, x25
   23f38:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   23f3c:	mov	x0, x23
   23f40:	ldp	x21, x22, [sp, #16]
   23f44:	ldp	x23, x24, [sp, #32]
   23f48:	ldp	x25, x30, [sp, #48]
   23f4c:	ldp	x19, x20, [sp], #80
   23f50:	ret
   23f54:	nop
   23f58:	stp	x19, x30, [sp, #-16]!
   23f5c:	mov	x19, x0
   23f60:	add	x0, x0, #0x28
   23f64:	bl	19bc8 <__sanitizer_set_report_fd@@Base+0x62f8>
   23f68:	add	x0, x19, #0x48
   23f6c:	bl	19cd8 <__sanitizer_set_report_fd@@Base+0x6408>
   23f70:	ldr	x0, [x19, #56]
   23f74:	cbz	x0, 23f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a00>
   23f78:	mov	w0, #0x1                   	// #1
   23f7c:	strb	w0, [x19, #104]
   23f80:	ldp	x19, x30, [sp], #16
   23f84:	ret
   23f88:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   23f8c:	add	x0, x0, #0xbc8
   23f90:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   23f94:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   23f98:	stp	x19, x20, [sp, #-48]!
   23f9c:	mov	x19, x0
   23fa0:	mov	x20, x1
   23fa4:	ldrb	w0, [x0, #104]
   23fa8:	stp	x21, x22, [sp, #16]
   23fac:	stp	x23, x30, [sp, #32]
   23fb0:	cbz	w0, 24040 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   23fb4:	ldr	x0, [x19, #56]
   23fb8:	mov	w23, #0x0                   	// #0
   23fbc:	cbz	x0, 240d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b4c>
   23fc0:	mov	x21, #0x0                   	// #0
   23fc4:	mov	x22, #0x0                   	// #0
   23fc8:	b	23fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a58>
   23fcc:	ldr	x0, [x19, #56]
   23fd0:	add	x22, x22, #0x1
   23fd4:	add	x21, x21, #0x48
   23fd8:	cmp	x0, x22
   23fdc:	b.ls	24020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.plast
   23fe0:	ldr	x0, [x19, #40]
   23fe4:	mov	x1, x20
   23fe8:	add	x0, x0, x21
   23fec:	bl	f9f8 <__sancov_default_options@@Base+0x3048>
   23ff0:	tst	w0, #0xff
   23ff4:	b.eq	23fcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a44>  // b.none
   23ff8:	ldr	x4, [x19, #56]
   23ffc:	cmp	x4, x22
   24000:	b.ls	240b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.plast
   24004:	ldr	x0, [x19, #40]
   24008:	adds	x0, x0, x21
   2400c:	b.eq	24020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   24010:	ldp	x21, x22, [sp, #16]
   24014:	ldp	x23, x30, [sp, #32]
   24018:	ldp	x19, x20, [sp], #48
   2401c:	ret
   24020:	cbz	w23, 240d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b4c>
   24024:	ldr	x0, [x19, #88]
   24028:	cbnz	x0, 24068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ae0>
   2402c:	mov	x0, #0x0                   	// #0
   24030:	ldp	x21, x22, [sp, #16]
   24034:	ldp	x23, x30, [sp, #32]
   24038:	ldp	x19, x20, [sp], #48
   2403c:	ret
   24040:	add	x0, x19, #0x28
   24044:	bl	19bc8 <__sanitizer_set_report_fd@@Base+0x62f8>
   24048:	add	x0, x19, #0x48
   2404c:	bl	19cd8 <__sanitizer_set_report_fd@@Base+0x6408>
   24050:	ldr	x0, [x19, #56]
   24054:	cbz	x0, 24148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc0>
   24058:	mov	w0, #0x1                   	// #1
   2405c:	mov	w23, #0x1                   	// #1
   24060:	strb	w0, [x19, #104]
   24064:	b	23fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   24068:	mov	x21, #0x0                   	// #0
   2406c:	mov	x22, #0x0                   	// #0
   24070:	b	24088 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b00>
   24074:	ldr	x0, [x19, #88]
   24078:	add	x22, x22, #0x1
   2407c:	add	x21, x21, #0x48
   24080:	cmp	x0, x22
   24084:	b.ls	2402c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa4>  // b.plast
   24088:	ldr	x0, [x19, #72]
   2408c:	mov	x1, x20
   24090:	add	x0, x0, x21
   24094:	bl	f9f8 <__sancov_default_options@@Base+0x3048>
   24098:	tst	w0, #0xff
   2409c:	b.eq	24074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aec>  // b.none
   240a0:	ldr	x4, [x19, #88]
   240a4:	cmp	x22, x4
   240a8:	b.cs	240b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.hs, b.nlast
   240ac:	ldr	x0, [x19, #72]
   240b0:	add	x0, x0, x21
   240b4:	b	24010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a88>
   240b8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   240bc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   240c0:	mov	x3, x22
   240c4:	add	x2, x2, #0xbe0
   240c8:	add	x0, x0, #0x9b8
   240cc:	mov	w1, #0x2f9                 	// #761
   240d0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   240d4:	add	x0, x19, #0x28
   240d8:	bl	19bc8 <__sanitizer_set_report_fd@@Base+0x62f8>
   240dc:	add	x0, x19, #0x48
   240e0:	bl	19cd8 <__sanitizer_set_report_fd@@Base+0x6408>
   240e4:	ldr	x0, [x19, #56]
   240e8:	cbz	x0, 24148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bc0>
   240ec:	mov	w0, #0x1                   	// #1
   240f0:	mov	x21, #0x0                   	// #0
   240f4:	mov	x22, #0x0                   	// #0
   240f8:	strb	w0, [x19, #104]
   240fc:	b	24114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b8c>
   24100:	ldr	x0, [x19, #56]
   24104:	add	x22, x22, #0x1
   24108:	add	x21, x21, #0x48
   2410c:	cmp	x0, x22
   24110:	b.ls	24024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a9c>  // b.plast
   24114:	ldr	x0, [x19, #40]
   24118:	mov	x1, x20
   2411c:	add	x0, x0, x21
   24120:	bl	f9f8 <__sancov_default_options@@Base+0x3048>
   24124:	tst	w0, #0xff
   24128:	b.eq	24100 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>  // b.none
   2412c:	ldr	x4, [x19, #56]
   24130:	cmp	x22, x4
   24134:	b.cs	240b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b30>  // b.hs, b.nlast
   24138:	ldr	x0, [x19, #40]
   2413c:	adds	x0, x0, x21
   24140:	b.ne	24010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a88>  // b.any
   24144:	b	24024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a9c>
   24148:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2414c:	add	x0, x0, #0xbc8
   24150:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   24154:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   24158:	stp	x19, x20, [sp, #-48]!
   2415c:	mov	x20, x4
   24160:	mov	x19, x1
   24164:	stp	x21, x22, [sp, #16]
   24168:	mov	x22, x2
   2416c:	mov	x21, x3
   24170:	str	x30, [sp, #32]
   24174:	bl	23f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   24178:	cbz	x0, 241ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>
   2417c:	mov	x5, x0
   24180:	mov	w0, #0x1                   	// #1
   24184:	ldr	x30, [sp, #32]
   24188:	ldp	x2, x1, [x5]
   2418c:	str	x2, [x22]
   24190:	sub	x1, x19, x1
   24194:	str	x1, [x21]
   24198:	ldr	w1, [x5, #24]
   2419c:	str	w1, [x20]
   241a0:	ldp	x21, x22, [sp, #16]
   241a4:	ldp	x19, x20, [sp], #48
   241a8:	ret
   241ac:	mov	w0, #0x0                   	// #0
   241b0:	ldp	x21, x22, [sp, #16]
   241b4:	ldr	x30, [sp, #32]
   241b8:	ldp	x19, x20, [sp], #48
   241bc:	ret
   241c0:	stp	x19, x20, [sp, #-64]!
   241c4:	mov	x20, x0
   241c8:	mov	x19, x1
   241cc:	stp	x21, x22, [sp, #16]
   241d0:	add	x22, x0, #0x70
   241d4:	mov	x0, x22
   241d8:	mov	x21, x2
   241dc:	stp	x23, x24, [sp, #32]
   241e0:	mov	x23, x3
   241e4:	str	x30, [sp, #48]
   241e8:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   241ec:	mov	x1, x19
   241f0:	mov	x0, x20
   241f4:	bl	23f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   241f8:	cbz	x0, 2423c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cb4>
   241fc:	ldp	x1, x2, [x0]
   24200:	mov	w24, #0x1                   	// #1
   24204:	sub	x19, x19, x2
   24208:	str	x19, [x23]
   2420c:	cbz	x21, 2421c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c94>
   24210:	mov	x0, x20
   24214:	bl	22f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a08>
   24218:	str	x0, [x21]
   2421c:	mov	x0, x22
   24220:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   24224:	mov	w0, w24
   24228:	ldp	x21, x22, [sp, #16]
   2422c:	ldp	x23, x24, [sp, #32]
   24230:	ldr	x30, [sp, #48]
   24234:	ldp	x19, x20, [sp], #64
   24238:	ret
   2423c:	mov	x0, x22
   24240:	mov	w24, #0x0                   	// #0
   24244:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   24248:	mov	w0, w24
   2424c:	ldp	x21, x22, [sp, #16]
   24250:	ldp	x23, x24, [sp, #32]
   24254:	ldr	x30, [sp, #48]
   24258:	ldp	x19, x20, [sp], #64
   2425c:	ret
   24260:	stp	x19, x20, [sp, #-32]!
   24264:	mov	x20, x0
   24268:	adrp	x3, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   2426c:	add	x3, x3, #0xeb8
   24270:	str	x30, [sp, #16]
   24274:	stp	x3, xzr, [x20]
   24278:	mov	x0, x2
   2427c:	mov	x19, x1
   24280:	mov	x1, #0x4028                	// #16424
   24284:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   24288:	add	x2, x0, #0x4, lsl #12
   2428c:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   24290:	mov	x3, #0xffffffffffffffff    	// #-1
   24294:	add	x1, x1, #0xee8
   24298:	stp	x1, x19, [x0]
   2429c:	str	x3, [x0, #16]
   242a0:	str	xzr, [x0, #16408]
   242a4:	strh	wzr, [x2, #32]
   242a8:	strb	wzr, [x2, #34]
   242ac:	cbz	x19, 242d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d4c>
   242b0:	ldrb	w1, [x19]
   242b4:	cbz	w1, 242f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d6c>
   242b8:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   242bc:	add	x1, x1, #0xe90
   242c0:	ldr	x30, [sp, #16]
   242c4:	str	x1, [x0]
   242c8:	str	x0, [x20, #16]
   242cc:	ldp	x19, x20, [sp], #32
   242d0:	ret
   242d4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   242d8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   242dc:	add	x2, x2, #0xc00
   242e0:	add	x0, x0, #0xb78
   242e4:	mov	x4, #0x0                   	// #0
   242e8:	mov	x3, #0x0                   	// #0
   242ec:	mov	w1, #0x18f                 	// #399
   242f0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   242f4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   242f8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   242fc:	add	x2, x2, #0xc18
   24300:	add	x0, x0, #0xb78
   24304:	mov	x4, #0x0                   	// #0
   24308:	mov	x3, #0x0                   	// #0
   2430c:	mov	w1, #0x190                 	// #400
   24310:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24314:	nop
   24318:	stp	x19, x20, [sp, #-112]!
   2431c:	mov	x20, x0
   24320:	stp	x21, x22, [sp, #16]
   24324:	mov	x22, x1
   24328:	stp	x23, x24, [sp, #32]
   2432c:	adrp	x24, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24330:	add	x24, x24, #0x3b8
   24334:	stp	x25, x26, [sp, #48]
   24338:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2433c:	add	x25, x25, #0xd20
   24340:	stp	x27, x28, [sp, #64]
   24344:	mov	w27, #0x1                   	// #1
   24348:	str	x30, [sp, #80]
   2434c:	str	x1, [sp, #104]
   24350:	mov	x1, x24
   24354:	mov	x0, x20
   24358:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   2435c:	mov	x19, x0
   24360:	mov	x2, #0x0                   	// #0
   24364:	mov	x1, #0x0                   	// #0
   24368:	add	x0, x0, #0x1
   2436c:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24370:	mov	x28, x0
   24374:	mov	x2, x19
   24378:	mov	x1, x20
   2437c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24380:	add	x26, x20, x19
   24384:	strb	wzr, [x28, x19]
   24388:	ldrb	w0, [x20, x19]
   2438c:	cmp	w0, #0x0
   24390:	cinc	x26, x26, ne  // ne = any
   24394:	cbz	x28, 24548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fc0>
   24398:	ldrb	w0, [x28]
   2439c:	cbz	w0, 24588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5000>
   243a0:	mov	x23, x22
   243a4:	add	x21, x22, #0x8
   243a8:	cbz	w27, 24504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f7c>
   243ac:	str	x28, [x21, #32]
   243b0:	mov	x1, x24
   243b4:	mov	x0, x26
   243b8:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   243bc:	mov	x19, x0
   243c0:	mov	x2, #0x0                   	// #0
   243c4:	mov	x1, #0x0                   	// #0
   243c8:	add	x0, x0, #0x1
   243cc:	bl	ce20 <__sancov_default_options@@Base+0x470>
   243d0:	mov	x27, x0
   243d4:	mov	x2, x19
   243d8:	mov	x1, x26
   243dc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   243e0:	add	x20, x26, x19
   243e4:	strb	wzr, [x27, x19]
   243e8:	ldrb	w0, [x26, x19]
   243ec:	cmp	w0, #0x0
   243f0:	cinc	x20, x20, ne  // ne = any
   243f4:	cbz	x27, 24568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fe0>
   243f8:	mov	x0, x27
   243fc:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   24400:	cbz	x0, 244ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f24>
   24404:	sub	x19, x0, #0x1
   24408:	mov	w28, #0x2                   	// #2
   2440c:	add	x19, x27, x19
   24410:	ldrb	w0, [x19]
   24414:	cmp	x19, x27
   24418:	b.hi	2442c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ea4>  // b.pmore
   2441c:	b	2443c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>
   24420:	ldrb	w0, [x19, #-1]!
   24424:	cmp	x19, x27
   24428:	b.eq	2443c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>  // b.none
   2442c:	ldrb	w0, [x19]
   24430:	sub	w1, w0, #0x30
   24434:	cmp	w1, #0x9
   24438:	b.ls	24420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e98>  // b.plast
   2443c:	cmp	w0, #0x3a
   24440:	b.ne	24474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>  // b.any
   24444:	ldrb	w0, [x19, #1]
   24448:	sub	w0, w0, #0x30
   2444c:	cmp	w0, #0x9
   24450:	b.hi	24474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eec>  // b.pmore
   24454:	ldr	w1, [x21, #56]
   24458:	add	x0, x19, #0x1
   2445c:	str	w1, [x21, #60]
   24460:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24464:	str	w0, [x21, #56]
   24468:	strb	wzr, [x19], #-1
   2446c:	cmp	w28, #0x1
   24470:	b.ne	244fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f74>  // b.any
   24474:	mov	x1, x25
   24478:	mov	x0, x27
   2447c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24480:	mov	x19, x0
   24484:	mov	x2, #0x0                   	// #0
   24488:	mov	x1, #0x0                   	// #0
   2448c:	add	x0, x0, #0x1
   24490:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24494:	str	x0, [x23, #56]
   24498:	mov	x2, x19
   2449c:	mov	x1, x27
   244a0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   244a4:	ldr	x0, [x23, #56]
   244a8:	strb	wzr, [x0, x19]
   244ac:	mov	x0, x27
   244b0:	mov	x1, #0x0                   	// #0
   244b4:	bl	d220 <__sancov_default_options@@Base+0x870>
   244b8:	adrp	x19, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   244bc:	ldr	x0, [x21, #32]
   244c0:	add	x1, x19, #0xc78
   244c4:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   244c8:	cbz	w0, 24534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fac>
   244cc:	ldr	x0, [x21, #48]
   244d0:	add	x1, x19, #0xc78
   244d4:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   244d8:	cbz	w0, 244e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f5c>
   244dc:	mov	w27, #0x0                   	// #0
   244e0:	b	24350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc8>
   244e4:	ldr	x0, [x21, #48]
   244e8:	mov	x1, #0x0                   	// #0
   244ec:	mov	w27, #0x0                   	// #0
   244f0:	bl	d220 <__sancov_default_options@@Base+0x870>
   244f4:	str	xzr, [x21, #48]
   244f8:	b	24350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc8>
   244fc:	mov	w28, #0x1                   	// #1
   24500:	b	24410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e88>
   24504:	ldr	x0, [x22, #8]
   24508:	bl	22e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2450c:	add	x21, x0, #0x8
   24510:	ldp	x1, x2, [x22, #16]
   24514:	mov	x23, x0
   24518:	ldr	w3, [x22, #32]
   2451c:	mov	x0, x21
   24520:	bl	22dd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   24524:	ldr	x0, [sp, #104]
   24528:	str	x23, [sp, #104]
   2452c:	str	x23, [x0]
   24530:	b	243ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   24534:	ldr	x0, [x21, #32]
   24538:	mov	x1, #0x0                   	// #0
   2453c:	bl	d220 <__sancov_default_options@@Base+0x870>
   24540:	str	xzr, [x21, #32]
   24544:	b	244cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f44>
   24548:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2454c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24550:	add	x2, x2, #0xc38
   24554:	add	x0, x0, #0xb78
   24558:	mov	x4, #0x0                   	// #0
   2455c:	mov	x3, #0x0                   	// #0
   24560:	mov	w1, #0x12c                 	// #300
   24564:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24568:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2456c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24570:	add	x2, x2, #0xc58
   24574:	add	x0, x0, #0xb78
   24578:	mov	x4, #0x0                   	// #0
   2457c:	mov	x3, #0x0                   	// #0
   24580:	mov	w1, #0x10d                 	// #269
   24584:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24588:	mov	x0, x28
   2458c:	mov	x1, #0x0                   	// #0
   24590:	ldp	x21, x22, [sp, #16]
   24594:	ldp	x23, x24, [sp, #32]
   24598:	ldp	x25, x26, [sp, #48]
   2459c:	ldp	x27, x28, [sp, #64]
   245a0:	ldr	x30, [sp, #80]
   245a4:	ldp	x19, x20, [sp], #112
   245a8:	b	d220 <__sancov_default_options@@Base+0x870>
   245ac:	nop
   245b0:	stp	x19, x20, [sp, #-64]!
   245b4:	stp	x21, x22, [sp, #16]
   245b8:	mov	x22, x1
   245bc:	mov	x21, x0
   245c0:	stp	x23, x24, [sp, #32]
   245c4:	adrp	x23, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   245c8:	add	x1, x23, #0x3b8
   245cc:	str	x30, [sp, #48]
   245d0:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   245d4:	mov	x2, #0x0                   	// #0
   245d8:	mov	x19, x0
   245dc:	mov	x1, #0x0                   	// #0
   245e0:	add	x0, x0, #0x1
   245e4:	bl	ce20 <__sancov_default_options@@Base+0x470>
   245e8:	str	x0, [x22, #40]
   245ec:	mov	x2, x19
   245f0:	mov	x1, x21
   245f4:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   245f8:	add	x20, x21, x19
   245fc:	ldr	x0, [x22, #40]
   24600:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   24604:	add	x1, x1, #0xb0
   24608:	strb	wzr, [x0, x19]
   2460c:	ldrb	w0, [x21, x19]
   24610:	cmp	w0, #0x0
   24614:	cinc	x20, x20, ne  // ne = any
   24618:	mov	x0, x20
   2461c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24620:	mov	x19, x0
   24624:	mov	x2, #0x0                   	// #0
   24628:	mov	x1, #0x0                   	// #0
   2462c:	add	x0, x0, #0x1
   24630:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24634:	mov	x21, x0
   24638:	mov	x1, x20
   2463c:	mov	x2, x19
   24640:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24644:	add	x24, x20, x19
   24648:	strb	wzr, [x21, x19]
   2464c:	ldrb	w0, [x20, x19]
   24650:	cmp	w0, #0x0
   24654:	cinc	x24, x24, ne  // ne = any
   24658:	cbz	x21, 24668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50e0>
   2465c:	mov	x0, x21
   24660:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24664:	str	x0, [x22, #48]
   24668:	mov	x0, x21
   2466c:	mov	x1, #0x0                   	// #0
   24670:	bl	d220 <__sancov_default_options@@Base+0x870>
   24674:	add	x1, x23, #0x3b8
   24678:	mov	x0, x24
   2467c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24680:	mov	x20, x0
   24684:	mov	x2, #0x0                   	// #0
   24688:	mov	x1, #0x0                   	// #0
   2468c:	add	x0, x0, #0x1
   24690:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24694:	mov	x19, x0
   24698:	mov	x1, x24
   2469c:	mov	x2, x20
   246a0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   246a4:	strb	wzr, [x19, x20]
   246a8:	cbz	x19, 246b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5130>
   246ac:	mov	x0, x19
   246b0:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   246b4:	str	x0, [x22, #56]
   246b8:	mov	x0, x19
   246bc:	mov	x1, #0x0                   	// #0
   246c0:	ldp	x21, x22, [sp, #16]
   246c4:	ldp	x23, x24, [sp, #32]
   246c8:	ldr	x30, [sp, #48]
   246cc:	ldp	x19, x20, [sp], #64
   246d0:	b	d220 <__sancov_default_options@@Base+0x870>
   246d4:	nop
   246d8:	add	x4, x0, #0x4, lsl #12
   246dc:	str	x30, [sp, #-16]!
   246e0:	adrp	x3, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   246e4:	mov	x5, #0xffffffffffffffff    	// #-1
   246e8:	add	x3, x3, #0xee8
   246ec:	stp	x3, x1, [x0]
   246f0:	str	x5, [x0, #16]
   246f4:	str	xzr, [x0, #16408]
   246f8:	strh	wzr, [x4, #32]
   246fc:	strb	w2, [x4, #34]
   24700:	cbz	x1, 24714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x518c>
   24704:	ldrb	w0, [x1]
   24708:	cbz	w0, 24734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51ac>
   2470c:	ldr	x30, [sp], #16
   24710:	ret
   24714:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24718:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2471c:	add	x2, x2, #0xc00
   24720:	add	x0, x0, #0xb78
   24724:	mov	x4, #0x0                   	// #0
   24728:	mov	x3, #0x0                   	// #0
   2472c:	mov	w1, #0x18f                 	// #399
   24730:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24734:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24738:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2473c:	add	x2, x2, #0xc18
   24740:	add	x0, x0, #0xb78
   24744:	mov	x4, #0x0                   	// #0
   24748:	mov	x3, #0x0                   	// #0
   2474c:	mov	w1, #0x190                 	// #400
   24750:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24754:	nop
   24758:	stp	x19, x20, [sp, #-80]!
   2475c:	mov	x19, x0
   24760:	stp	x25, x30, [sp, #48]
   24764:	add	x25, x0, #0x4, lsl #12
   24768:	ldrb	w0, [x25, #32]
   2476c:	cbnz	w0, 24890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5308>
   24770:	stp	x21, x22, [sp, #16]
   24774:	mov	x21, x1
   24778:	ldr	x22, [x19, #8]
   2477c:	bl	fc80 <__sancov_default_options@@Base+0x32d0>
   24780:	mov	x20, x0
   24784:	cbz	x0, 247c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   24788:	mov	x0, x22
   2478c:	bl	f740 <__sancov_default_options@@Base+0x2d90>
   24790:	mov	x1, x0
   24794:	cbz	x0, 247c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   24798:	mov	x0, x20
   2479c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   247a0:	cbnz	w0, 247c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x523c>
   247a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   247a8:	add	x0, x0, #0xc80
   247ac:	bl	1cd78 <OnPrint@@Base+0x398>
   247b0:	mov	x20, #0x0                   	// #0
   247b4:	mov	w0, #0x1                   	// #1
   247b8:	strb	w0, [x25, #32]
   247bc:	ldp	x21, x22, [sp, #16]
   247c0:	b	24894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x530c>
   247c4:	ldr	x0, [x19, #16408]
   247c8:	cmp	x0, #0x4
   247cc:	b.hi	24884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52fc>  // b.pmore
   247d0:	adrp	x22, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   247d4:	add	x22, x22, #0xb40
   247d8:	stp	x23, x24, [sp, #32]
   247dc:	adrp	x23, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   247e0:	add	x24, sp, #0x48
   247e4:	add	x23, x23, #0xcb8
   247e8:	ldp	w2, w0, [x19, #16]
   247ec:	cmn	w2, #0x1
   247f0:	b.eq	24858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52d0>  // b.none
   247f4:	cmn	w0, #0x1
   247f8:	b.eq	248a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x531c>  // b.none
   247fc:	mov	x0, x21
   24800:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   24804:	mov	x20, x0
   24808:	cbz	x0, 248b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>
   2480c:	mov	x2, x0
   24810:	ldr	w0, [x19, #20]
   24814:	mov	x3, x24
   24818:	mov	x1, x21
   2481c:	mov	x4, #0x0                   	// #0
   24820:	str	xzr, [sp, #72]
   24824:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   24828:	tst	w0, #0xff
   2482c:	b.eq	2483c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52b4>  // b.none
   24830:	ldr	x0, [sp, #72]
   24834:	cmp	x20, x0
   24838:	b.eq	248b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>  // b.none
   2483c:	ldr	w1, [x19, #20]
   24840:	mov	x0, x23
   24844:	bl	1cd78 <OnPrint@@Base+0x398>
   24848:	ldr	w2, [x19, #16]
   2484c:	cmn	w2, #0x1
   24850:	b.ne	248a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x531c>  // b.any
   24854:	ldr	w0, [x19, #20]
   24858:	cmn	w0, #0x1
   2485c:	b.eq	24864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>  // b.none
   24860:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   24864:	mov	x0, x19
   24868:	bl	256c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   2486c:	ldr	x0, [x19, #16408]
   24870:	add	x0, x0, #0x1
   24874:	str	x0, [x19, #16408]
   24878:	cmp	x0, #0x4
   2487c:	b.ls	247e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>  // b.plast
   24880:	ldp	x23, x24, [sp, #32]
   24884:	ldrb	w0, [x25, #32]
   24888:	cbz	w0, 24904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x537c>
   2488c:	ldp	x21, x22, [sp, #16]
   24890:	mov	x20, #0x0                   	// #0
   24894:	mov	x0, x20
   24898:	ldp	x25, x30, [sp, #48]
   2489c:	ldp	x19, x20, [sp], #80
   248a0:	ret
   248a4:	mov	w0, w2
   248a8:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   248ac:	b	24854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52cc>
   248b0:	mov	x20, x19
   248b4:	mov	x2, #0x4000                	// #16384
   248b8:	ldr	x0, [x20], #24
   248bc:	mov	x1, x20
   248c0:	ldr	x3, [x0, #16]
   248c4:	mov	x0, x19
   248c8:	cmp	x3, x22
   248cc:	b.ne	248f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x536c>  // b.any
   248d0:	bl	23a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   248d4:	and	w0, w0, #0xff
   248d8:	cbz	w0, 24848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c0>
   248dc:	mov	x0, x20
   248e0:	ldp	x21, x22, [sp, #16]
   248e4:	ldp	x23, x24, [sp, #32]
   248e8:	ldp	x25, x30, [sp, #48]
   248ec:	ldp	x19, x20, [sp], #80
   248f0:	ret
   248f4:	blr	x3
   248f8:	and	w0, w0, #0xff
   248fc:	cbz	w0, 24848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c0>
   24900:	b	248dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   24904:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24908:	add	x0, x0, #0xce8
   2490c:	bl	1cd78 <OnPrint@@Base+0x398>
   24910:	mov	x20, #0x0                   	// #0
   24914:	mov	w0, #0x1                   	// #1
   24918:	strb	w0, [x25, #32]
   2491c:	mov	x0, x20
   24920:	ldp	x21, x22, [sp, #16]
   24924:	ldp	x25, x30, [sp, #48]
   24928:	ldp	x19, x20, [sp], #80
   2492c:	ret
   24930:	stp	x19, x20, [sp, #-32]!
   24934:	mov	w7, w4
   24938:	mov	x4, x2
   2493c:	str	x30, [sp, #16]
   24940:	cbz	x2, 24a80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54f8>
   24944:	and	w1, w1, #0xff
   24948:	mov	x5, x3
   2494c:	cmp	w1, #0x0
   24950:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24954:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24958:	add	x3, x3, #0xd20
   2495c:	add	x1, x1, #0xd28
   24960:	mov	x19, x0
   24964:	add	x20, x0, #0x18
   24968:	csel	x3, x1, x3, ne  // ne = any
   2496c:	cbz	w7, 249d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x544c>
   24970:	cmp	w7, #0x5
   24974:	b.eq	24a9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5514>  // b.none
   24978:	b.hi	24a24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x549c>  // b.pmore
   2497c:	cmp	w7, #0x3
   24980:	b.eq	24a74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54ec>  // b.none
   24984:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24988:	cmp	w7, #0x4
   2498c:	add	x1, x1, #0x400
   24990:	b.ne	24a10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5488>  // b.any
   24994:	nop
   24998:	mov	x6, x5
   2499c:	mov	x0, x20
   249a0:	mov	x5, x1
   249a4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   249a8:	mov	x1, #0x4000                	// #16384
   249ac:	add	x2, x2, #0xd80
   249b0:	bl	1c9e8 <OnPrint@@Base+0x8>
   249b4:	mov	w1, #0x3fff                	// #16383
   249b8:	cmp	w0, w1
   249bc:	b.gt	249f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   249c0:	mov	x1, x20
   249c4:	ldr	x0, [x19, #16]
   249c8:	ldr	x30, [sp, #16]
   249cc:	ldp	x19, x20, [sp], #32
   249d0:	b	24758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   249d4:	mov	x1, #0x4000                	// #16384
   249d8:	mov	x0, x20
   249dc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   249e0:	add	x2, x2, #0xd48
   249e4:	bl	1c9e8 <OnPrint@@Base+0x8>
   249e8:	mov	w1, #0x3fff                	// #16383
   249ec:	cmp	w0, w1
   249f0:	b.le	249c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5438>
   249f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   249f8:	add	x0, x0, #0xd58
   249fc:	bl	1cd78 <OnPrint@@Base+0x398>
   24a00:	mov	x0, #0x0                   	// #0
   24a04:	ldr	x30, [sp, #16]
   24a08:	ldp	x19, x20, [sp], #32
   24a0c:	ret
   24a10:	cmp	w7, #0x1
   24a14:	b.ne	24a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54b8>  // b.any
   24a18:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a1c:	add	x1, x1, #0x3e8
   24a20:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a24:	cmp	w7, #0x7
   24a28:	b.eq	24a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54e0>  // b.none
   24a2c:	cmp	w7, #0x8
   24a30:	b.ne	24a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54cc>  // b.any
   24a34:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a38:	add	x1, x1, #0x408
   24a3c:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a40:	cmp	w7, #0x2
   24a44:	b.ne	24aa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5520>  // b.any
   24a48:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a4c:	add	x1, x1, #0x3e0
   24a50:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a54:	cmp	w7, #0x6
   24a58:	b.ne	24aa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5520>  // b.any
   24a5c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a60:	add	x1, x1, #0x410
   24a64:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a68:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a6c:	add	x1, x1, #0x3d8
   24a70:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a74:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a78:	add	x1, x1, #0x3f8
   24a7c:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24a80:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a84:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24a88:	add	x2, x2, #0xd30
   24a8c:	add	x0, x0, #0xb78
   24a90:	mov	x3, #0x0                   	// #0
   24a94:	mov	w1, #0x173                 	// #371
   24a98:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24a9c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24aa0:	add	x1, x1, #0x3f0
   24aa4:	b	24998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   24aa8:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24aac:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   24ab0:	add	x2, x2, #0x420
   24ab4:	add	x0, x0, #0x9b8
   24ab8:	mov	x4, #0x0                   	// #0
   24abc:	mov	x3, #0x0                   	// #0
   24ac0:	mov	w1, #0x2a9                 	// #681
   24ac4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   24ac8:	stp	x19, x20, [sp, #-64]!
   24acc:	mov	x19, x2
   24ad0:	ldr	w4, [x2, #16]
   24ad4:	ldr	x2, [x2]
   24ad8:	stp	x21, x22, [sp, #16]
   24adc:	mov	x21, x1
   24ae0:	ldr	x3, [x19, #8]
   24ae4:	mov	w1, #0x1                   	// #1
   24ae8:	str	x30, [sp, #56]
   24aec:	bl	24930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53a8>
   24af0:	cbnz	x0, 24b08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5580>
   24af4:	mov	w0, #0x0                   	// #0
   24af8:	ldp	x21, x22, [sp, #16]
   24afc:	ldr	x30, [sp, #56]
   24b00:	ldp	x19, x20, [sp], #64
   24b04:	ret
   24b08:	mov	x20, x0
   24b0c:	stp	x23, x24, [sp, #32]
   24b10:	adrp	x24, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24b14:	add	x1, x24, #0x3b8
   24b18:	str	x25, [sp, #48]
   24b1c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24b20:	mov	x22, x0
   24b24:	mov	x2, #0x0                   	// #0
   24b28:	mov	x1, #0x0                   	// #0
   24b2c:	add	x0, x0, #0x1
   24b30:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24b34:	str	x0, [x19, #40]
   24b38:	mov	x2, x22
   24b3c:	mov	x1, x20
   24b40:	add	x23, x20, x22
   24b44:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24b48:	ldr	x0, [x19, #40]
   24b4c:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   24b50:	add	x1, x1, #0xb0
   24b54:	strb	wzr, [x0, x22]
   24b58:	ldrb	w0, [x20, x22]
   24b5c:	cmp	w0, #0x0
   24b60:	cinc	x23, x23, ne  // ne = any
   24b64:	mov	x0, x23
   24b68:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24b6c:	mov	x20, x0
   24b70:	mov	x2, #0x0                   	// #0
   24b74:	mov	x1, #0x0                   	// #0
   24b78:	add	x0, x0, #0x1
   24b7c:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24b80:	mov	x22, x0
   24b84:	mov	x1, x23
   24b88:	mov	x2, x20
   24b8c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24b90:	add	x25, x23, x20
   24b94:	strb	wzr, [x22, x20]
   24b98:	ldrb	w0, [x23, x20]
   24b9c:	cmp	w0, #0x0
   24ba0:	cinc	x25, x25, ne  // ne = any
   24ba4:	cbz	x22, 24bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x562c>
   24ba8:	mov	x0, x22
   24bac:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24bb0:	str	x0, [x19, #48]
   24bb4:	mov	x0, x22
   24bb8:	mov	x1, #0x0                   	// #0
   24bbc:	bl	d220 <__sancov_default_options@@Base+0x870>
   24bc0:	add	x1, x24, #0x3b8
   24bc4:	mov	x0, x25
   24bc8:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24bcc:	mov	x22, x0
   24bd0:	mov	x2, #0x0                   	// #0
   24bd4:	mov	x1, #0x0                   	// #0
   24bd8:	add	x0, x0, #0x1
   24bdc:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24be0:	mov	x20, x0
   24be4:	mov	x1, x25
   24be8:	mov	x2, x22
   24bec:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24bf0:	strb	wzr, [x20, x22]
   24bf4:	cbz	x20, 24c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x567c>
   24bf8:	mov	x0, x20
   24bfc:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24c00:	str	x0, [x19, #56]
   24c04:	mov	x0, x20
   24c08:	mov	x1, #0x0                   	// #0
   24c0c:	bl	d220 <__sancov_default_options@@Base+0x870>
   24c10:	ldr	x2, [x19, #48]
   24c14:	mov	w0, #0x1                   	// #1
   24c18:	ldr	x1, [x19, #8]
   24c1c:	add	x21, x21, x2
   24c20:	ldp	x23, x24, [sp, #32]
   24c24:	sub	x21, x21, x1
   24c28:	ldr	x25, [sp, #48]
   24c2c:	str	x21, [x19, #48]
   24c30:	ldp	x21, x22, [sp, #16]
   24c34:	ldr	x30, [sp, #56]
   24c38:	ldp	x19, x20, [sp], #64
   24c3c:	ret
   24c40:	stp	x19, x20, [sp, #-96]!
   24c44:	mov	x19, x2
   24c48:	stp	x23, x24, [sp, #32]
   24c4c:	add	x24, x0, #0x70
   24c50:	stp	x21, x22, [sp, #16]
   24c54:	mov	x22, x1
   24c58:	stp	x25, x26, [sp, #48]
   24c5c:	mov	x25, x0
   24c60:	mov	x0, x24
   24c64:	str	x30, [sp, #72]
   24c68:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   24c6c:	mov	x1, x22
   24c70:	mov	x0, x25
   24c74:	bl	23f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   24c78:	cbz	x0, 24e7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f4>
   24c7c:	mov	x1, x0
   24c80:	mov	x0, x19
   24c84:	add	x23, sp, #0x58
   24c88:	ldp	x20, x21, [x1]
   24c8c:	ldr	w26, [x1, #24]
   24c90:	bl	22f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3980>
   24c94:	mov	x0, x20
   24c98:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   24c9c:	ldr	x20, [x25, #208]
   24ca0:	sub	x21, x22, x21
   24ca4:	stp	x0, x21, [x19]
   24ca8:	str	w26, [x19, #16]
   24cac:	adrp	x26, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a78>
   24cb0:	add	x26, x26, #0xac8
   24cb4:	cbz	x20, 24e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58ec>
   24cb8:	str	x27, [sp, #64]
   24cbc:	b	24cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5748>
   24cc0:	mov	x0, x23
   24cc4:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   24cc8:	ldr	x20, [x20, #8]
   24ccc:	cbz	x20, 24e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>
   24cd0:	mov	x1, x25
   24cd4:	mov	x0, x23
   24cd8:	bl	23340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   24cdc:	ldr	x2, [x20]
   24ce0:	mov	x0, x20
   24ce4:	mov	w1, #0x1                   	// #1
   24ce8:	ldr	x3, [x2, #8]
   24cec:	cmp	x3, x26
   24cf0:	b.ne	24e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58c4>  // b.any
   24cf4:	ldp	x2, x3, [x19]
   24cf8:	ldr	w4, [x19, #16]
   24cfc:	bl	24930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53a8>
   24d00:	mov	x21, x0
   24d04:	cbz	x0, 24cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5738>
   24d08:	adrp	x25, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24d0c:	add	x1, x25, #0x3b8
   24d10:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24d14:	mov	x20, x0
   24d18:	mov	x2, #0x0                   	// #0
   24d1c:	mov	x1, #0x0                   	// #0
   24d20:	add	x0, x0, #0x1
   24d24:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24d28:	str	x0, [x19, #40]
   24d2c:	mov	x2, x20
   24d30:	mov	x1, x21
   24d34:	add	x26, x21, x20
   24d38:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24d3c:	ldr	x0, [x19, #40]
   24d40:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   24d44:	add	x1, x1, #0xb0
   24d48:	strb	wzr, [x0, x20]
   24d4c:	ldrb	w0, [x21, x20]
   24d50:	cmp	w0, #0x0
   24d54:	cinc	x26, x26, ne  // ne = any
   24d58:	mov	x0, x26
   24d5c:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24d60:	mov	x20, x0
   24d64:	mov	x2, #0x0                   	// #0
   24d68:	mov	x1, #0x0                   	// #0
   24d6c:	add	x0, x0, #0x1
   24d70:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24d74:	mov	x21, x0
   24d78:	mov	x1, x26
   24d7c:	mov	x2, x20
   24d80:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24d84:	add	x27, x26, x20
   24d88:	strb	wzr, [x21, x20]
   24d8c:	ldrb	w0, [x26, x20]
   24d90:	cmp	w0, #0x0
   24d94:	cinc	x27, x27, ne  // ne = any
   24d98:	cbz	x21, 24da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5820>
   24d9c:	mov	x0, x21
   24da0:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24da4:	str	x0, [x19, #48]
   24da8:	mov	x0, x21
   24dac:	mov	x1, #0x0                   	// #0
   24db0:	bl	d220 <__sancov_default_options@@Base+0x870>
   24db4:	add	x1, x25, #0x3b8
   24db8:	mov	x0, x27
   24dbc:	bl	15b78 <__sanitizer_set_report_fd@@Base+0x22a8>
   24dc0:	mov	x21, x0
   24dc4:	mov	x2, #0x0                   	// #0
   24dc8:	mov	x1, #0x0                   	// #0
   24dcc:	add	x0, x0, #0x1
   24dd0:	bl	ce20 <__sancov_default_options@@Base+0x470>
   24dd4:	mov	x20, x0
   24dd8:	mov	x1, x27
   24ddc:	mov	x2, x21
   24de0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   24de4:	strb	wzr, [x20, x21]
   24de8:	cbz	x20, 24df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5870>
   24dec:	mov	x0, x20
   24df0:	bl	16fb0 <__sanitizer_set_report_fd@@Base+0x36e0>
   24df4:	str	x0, [x19, #56]
   24df8:	mov	x0, x20
   24dfc:	mov	x1, #0x0                   	// #0
   24e00:	bl	d220 <__sancov_default_options@@Base+0x870>
   24e04:	ldr	x1, [x19, #48]
   24e08:	ldr	x0, [x19, #8]
   24e0c:	add	x22, x22, x1
   24e10:	sub	x22, x22, x0
   24e14:	str	x22, [x19, #48]
   24e18:	mov	x0, x23
   24e1c:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   24e20:	ldr	x27, [sp, #64]
   24e24:	mov	w19, #0x1                   	// #1
   24e28:	mov	x0, x24
   24e2c:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   24e30:	mov	w0, w19
   24e34:	ldp	x21, x22, [sp, #16]
   24e38:	ldp	x23, x24, [sp, #32]
   24e3c:	ldp	x25, x26, [sp, #48]
   24e40:	ldr	x30, [sp, #72]
   24e44:	ldp	x19, x20, [sp], #96
   24e48:	ret
   24e4c:	mov	x2, x19
   24e50:	mov	x1, x22
   24e54:	blr	x3
   24e58:	tst	w0, #0xff
   24e5c:	b.ne	24e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5890>  // b.any
   24e60:	mov	x0, x23
   24e64:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   24e68:	ldr	x20, [x20, #8]
   24e6c:	cbnz	x20, 24cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5748>
   24e70:	ldr	x27, [sp, #64]
   24e74:	mov	w19, #0x1                   	// #1
   24e78:	b	24e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a0>
   24e7c:	mov	w19, #0x0                   	// #0
   24e80:	b	24e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a0>
   24e84:	nop
   24e88:	stp	x19, x20, [sp, #-128]!
   24e8c:	mov	x20, x0
   24e90:	stp	x27, x28, [sp, #64]
   24e94:	add	x28, x0, #0x70
   24e98:	mov	x0, x28
   24e9c:	stp	x21, x22, [sp, #16]
   24ea0:	mov	x22, x1
   24ea4:	stp	x23, x24, [sp, #32]
   24ea8:	str	x30, [sp, #80]
   24eac:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   24eb0:	mov	x0, x22
   24eb4:	bl	22e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   24eb8:	mov	x1, x22
   24ebc:	mov	x23, x0
   24ec0:	mov	x0, x20
   24ec4:	bl	23f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a10>
   24ec8:	cbz	x0, 24ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   24ecc:	mov	x2, x0
   24ed0:	add	x21, x23, #0x8
   24ed4:	mov	x0, x21
   24ed8:	ldr	w3, [x2, #24]
   24edc:	ldp	x1, x2, [x2]
   24ee0:	sub	x2, x22, x2
   24ee4:	bl	22dd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3848>
   24ee8:	ldr	x19, [x20, #208]
   24eec:	cbz	x19, 24ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   24ef0:	adrp	x27, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24ef4:	add	x24, sp, #0x78
   24ef8:	add	x0, x27, #0xd80
   24efc:	stp	x25, x26, [sp, #48]
   24f00:	adrp	x25, 25000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a78>
   24f04:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24f08:	add	x25, x25, #0x110
   24f0c:	add	x26, x26, #0xd20
   24f10:	str	x0, [sp, #104]
   24f14:	b	24f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>
   24f18:	mov	x1, #0x4000                	// #16384
   24f1c:	mov	x3, x26
   24f20:	mov	x0, x27
   24f24:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24f28:	add	x2, x2, #0xd48
   24f2c:	bl	1c9e8 <OnPrint@@Base+0x8>
   24f30:	mov	w1, #0x3fff                	// #16383
   24f34:	cmp	w0, w1
   24f38:	b.gt	24fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a50>
   24f3c:	ldr	x0, [x19, #16]
   24f40:	mov	x1, x27
   24f44:	bl	24758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   24f48:	cbnz	x0, 2506c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ae4>
   24f4c:	mov	x0, x24
   24f50:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   24f54:	ldr	x19, [x19, #8]
   24f58:	cbz	x19, 24ff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a70>
   24f5c:	mov	x0, x24
   24f60:	mov	x1, x20
   24f64:	bl	23340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   24f68:	ldr	x0, [x19]
   24f6c:	ldr	x3, [x0]
   24f70:	cmp	x3, x25
   24f74:	b.ne	25084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5afc>  // b.any
   24f78:	ldp	x4, x5, [x21, #8]
   24f7c:	ldr	w1, [x21, #24]
   24f80:	cbz	x4, 250c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b3c>
   24f84:	add	x27, x19, #0x18
   24f88:	cbz	w1, 24f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5990>
   24f8c:	cmp	w1, #0x5
   24f90:	b.eq	250e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b58>  // b.none
   24f94:	b.hi	25020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a98>  // b.pmore
   24f98:	cmp	w1, #0x3
   24f9c:	b.eq	250b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b30>  // b.none
   24fa0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24fa4:	cmp	w1, #0x4
   24fa8:	add	x0, x0, #0x400
   24fac:	b.ne	2503c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ab4>  // b.any
   24fb0:	ldr	x2, [sp, #104]
   24fb4:	mov	x6, x5
   24fb8:	mov	x1, #0x4000                	// #16384
   24fbc:	mov	x5, x0
   24fc0:	mov	x3, x26
   24fc4:	mov	x0, x27
   24fc8:	bl	1c9e8 <OnPrint@@Base+0x8>
   24fcc:	mov	w1, #0x3fff                	// #16383
   24fd0:	cmp	w0, w1
   24fd4:	b.le	24f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b4>
   24fd8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   24fdc:	add	x0, x0, #0xd58
   24fe0:	bl	1cd78 <OnPrint@@Base+0x398>
   24fe4:	mov	x0, x24
   24fe8:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   24fec:	ldr	x19, [x19, #8]
   24ff0:	cbnz	x19, 24f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>
   24ff4:	nop
   24ff8:	ldp	x25, x26, [sp, #48]
   24ffc:	mov	x0, x28
   25000:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   25004:	mov	x0, x23
   25008:	ldp	x21, x22, [sp, #16]
   2500c:	ldp	x23, x24, [sp, #32]
   25010:	ldp	x27, x28, [sp, #64]
   25014:	ldr	x30, [sp, #80]
   25018:	ldp	x19, x20, [sp], #128
   2501c:	ret
   25020:	cmp	w1, #0x7
   25024:	b.eq	250ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b24>  // b.none
   25028:	cmp	w1, #0x8
   2502c:	b.ne	25058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ad0>  // b.any
   25030:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25034:	add	x0, x0, #0x408
   25038:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2503c:	cmp	w1, #0x1
   25040:	b.eq	250a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b18>  // b.none
   25044:	cmp	w1, #0x2
   25048:	b.ne	250ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b64>  // b.any
   2504c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25050:	add	x0, x0, #0x3e0
   25054:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   25058:	cmp	w1, #0x6
   2505c:	b.ne	250ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b64>  // b.any
   25060:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25064:	add	x0, x0, #0x410
   25068:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   2506c:	mov	x1, x23
   25070:	bl	24318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   25074:	mov	x0, x24
   25078:	bl	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd0>
   2507c:	ldp	x25, x26, [sp, #48]
   25080:	b	24ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a74>
   25084:	mov	x2, x23
   25088:	mov	x1, x22
   2508c:	mov	x0, x19
   25090:	blr	x3
   25094:	tst	w0, #0xff
   25098:	b.eq	24f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c4>  // b.none
   2509c:	b	25074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5aec>
   250a0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250a4:	add	x0, x0, #0x3e8
   250a8:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   250ac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250b0:	add	x0, x0, #0x3d8
   250b4:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   250b8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250bc:	add	x0, x0, #0x3f8
   250c0:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   250c4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250c8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250cc:	add	x2, x2, #0xd30
   250d0:	add	x0, x0, #0xb78
   250d4:	mov	x3, #0x0                   	// #0
   250d8:	mov	w1, #0x173                 	// #371
   250dc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   250e0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250e4:	add	x0, x0, #0x3f0
   250e8:	b	24fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a28>
   250ec:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   250f0:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   250f4:	add	x2, x2, #0x420
   250f8:	add	x0, x0, #0x9b8
   250fc:	mov	x4, #0x0                   	// #0
   25100:	mov	x3, #0x0                   	// #0
   25104:	mov	w1, #0x2a9                 	// #681
   25108:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2510c:	nop
   25110:	stp	x19, x20, [sp, #-32]!
   25114:	mov	x19, x2
   25118:	mov	x20, x0
   2511c:	ldp	x4, x5, [x2, #16]
   25120:	stp	x21, x30, [sp, #16]
   25124:	ldr	w2, [x2, #32]
   25128:	cbz	x4, 25264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cdc>
   2512c:	add	x21, x0, #0x18
   25130:	cbz	w2, 251b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c30>
   25134:	cmp	w2, #0x5
   25138:	b.eq	25280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cf8>  // b.none
   2513c:	b.hi	25208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c80>  // b.pmore
   25140:	cmp	w2, #0x3
   25144:	b.eq	25258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cd0>  // b.none
   25148:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2514c:	cmp	w2, #0x4
   25150:	add	x1, x1, #0x400
   25154:	b.ne	251f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c6c>  // b.any
   25158:	mov	x6, x5
   2515c:	mov	x0, x21
   25160:	mov	x5, x1
   25164:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25168:	mov	x1, #0x4000                	// #16384
   2516c:	add	x3, x3, #0xd20
   25170:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25174:	add	x2, x2, #0xd80
   25178:	bl	1c9e8 <OnPrint@@Base+0x8>
   2517c:	mov	w1, #0x3fff                	// #16383
   25180:	cmp	w0, w1
   25184:	b.gt	251e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c58>
   25188:	ldr	x0, [x20, #16]
   2518c:	mov	x1, x21
   25190:	bl	24758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   25194:	mov	w1, #0x0                   	// #0
   25198:	cbz	x0, 251a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c20>
   2519c:	mov	x1, x19
   251a0:	bl	24318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   251a4:	mov	w1, #0x1                   	// #1
   251a8:	mov	w0, w1
   251ac:	ldp	x21, x30, [sp, #16]
   251b0:	ldp	x19, x20, [sp], #32
   251b4:	ret
   251b8:	mov	x1, #0x4000                	// #16384
   251bc:	mov	x0, x21
   251c0:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   251c4:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   251c8:	add	x3, x3, #0xd20
   251cc:	add	x2, x2, #0xd48
   251d0:	bl	1c9e8 <OnPrint@@Base+0x8>
   251d4:	mov	w1, #0x3fff                	// #16383
   251d8:	cmp	w0, w1
   251dc:	b.le	25188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c00>
   251e0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   251e4:	add	x0, x0, #0xd58
   251e8:	bl	1cd78 <OnPrint@@Base+0x398>
   251ec:	mov	w1, #0x0                   	// #0
   251f0:	b	251a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c20>
   251f4:	cmp	w2, #0x1
   251f8:	b.ne	25224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c9c>  // b.any
   251fc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25200:	add	x1, x1, #0x3e8
   25204:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   25208:	cmp	w2, #0x7
   2520c:	b.eq	2524c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cc4>  // b.none
   25210:	cmp	w2, #0x8
   25214:	b.ne	25238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb0>  // b.any
   25218:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2521c:	add	x1, x1, #0x408
   25220:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   25224:	cmp	w2, #0x2
   25228:	b.ne	2528c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d04>  // b.any
   2522c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25230:	add	x1, x1, #0x3e0
   25234:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   25238:	cmp	w2, #0x6
   2523c:	b.ne	2528c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d04>  // b.any
   25240:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25244:	add	x1, x1, #0x410
   25248:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2524c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25250:	add	x1, x1, #0x3d8
   25254:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   25258:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2525c:	add	x1, x1, #0x3f8
   25260:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   25264:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25268:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2526c:	add	x2, x2, #0xd30
   25270:	add	x0, x0, #0xb78
   25274:	mov	x3, #0x0                   	// #0
   25278:	mov	w1, #0x173                 	// #371
   2527c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25280:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25284:	add	x1, x1, #0x3f0
   25288:	b	25158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bd0>
   2528c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25290:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   25294:	add	x2, x2, #0x420
   25298:	add	x0, x0, #0x9b8
   2529c:	mov	x4, #0x0                   	// #0
   252a0:	mov	x3, #0x0                   	// #0
   252a4:	mov	w1, #0x2a9                 	// #681
   252a8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   252ac:	nop
   252b0:	stp	x19, x20, [sp, #-48]!
   252b4:	mov	x19, x0
   252b8:	ldr	w0, [x0, #16]
   252bc:	str	x30, [sp, #24]
   252c0:	cmn	w0, #0x1
   252c4:	b.eq	2538c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>  // b.none
   252c8:	ldr	w0, [x19, #20]
   252cc:	cmn	w0, #0x1
   252d0:	b.eq	2538c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>  // b.none
   252d4:	mov	x20, x1
   252d8:	mov	x0, x1
   252dc:	str	x21, [sp, #16]
   252e0:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   252e4:	mov	x21, x0
   252e8:	cbnz	x0, 25334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dac>
   252ec:	mov	x20, x19
   252f0:	adrp	x0, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>
   252f4:	add	x0, x0, #0xb40
   252f8:	ldr	x1, [x20], #24
   252fc:	ldr	x3, [x1, #16]
   25300:	cmp	x3, x0
   25304:	b.ne	253a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e18>  // b.any
   25308:	mov	x0, x19
   2530c:	mov	x1, x20
   25310:	mov	x2, #0x4000                	// #16384
   25314:	bl	23a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4480>
   25318:	and	w0, w0, #0xff
   2531c:	ldr	x21, [sp, #16]
   25320:	cbz	w0, 2538c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e04>
   25324:	mov	x0, x20
   25328:	ldr	x30, [sp, #24]
   2532c:	ldp	x19, x20, [sp], #48
   25330:	ret
   25334:	mov	x2, x0
   25338:	ldr	w0, [x19, #20]
   2533c:	mov	x1, x20
   25340:	add	x3, sp, #0x28
   25344:	mov	x4, #0x0                   	// #0
   25348:	str	xzr, [sp, #40]
   2534c:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   25350:	tst	w0, #0xff
   25354:	b.eq	25364 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ddc>  // b.none
   25358:	ldr	x0, [sp, #40]
   2535c:	cmp	x21, x0
   25360:	b.eq	252ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d64>  // b.none
   25364:	ldr	w1, [x19, #20]
   25368:	mov	x20, #0x0                   	// #0
   2536c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25370:	add	x0, x0, #0xcb8
   25374:	bl	1cd78 <OnPrint@@Base+0x398>
   25378:	mov	x0, x20
   2537c:	ldr	x21, [sp, #16]
   25380:	ldr	x30, [sp, #24]
   25384:	ldp	x19, x20, [sp], #48
   25388:	ret
   2538c:	mov	x20, #0x0                   	// #0
   25390:	mov	x0, x20
   25394:	ldr	x30, [sp, #24]
   25398:	ldp	x19, x20, [sp], #48
   2539c:	ret
   253a0:	mov	x0, x19
   253a4:	mov	x1, x20
   253a8:	mov	x2, #0x4000                	// #16384
   253ac:	blr	x3
   253b0:	and	w0, w0, #0xff
   253b4:	b	2531c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d94>
   253b8:	stp	x19, x30, [sp, #-16]!
   253bc:	mov	x19, x0
   253c0:	ldr	w0, [x0, #16]
   253c4:	cmn	w0, #0x1
   253c8:	b.eq	253d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e48>  // b.none
   253cc:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   253d0:	ldr	w0, [x19, #20]
   253d4:	cmn	w0, #0x1
   253d8:	b.eq	253e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e58>  // b.none
   253dc:	bl	1a888 <__sanitizer_set_report_fd@@Base+0x6fb8>
   253e0:	mov	x0, x19
   253e4:	ldp	x19, x30, [sp], #16
   253e8:	b	256c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6138>
   253ec:	nop
   253f0:	cbnz	x2, 253fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e74>
   253f4:	mov	w0, #0x1                   	// #1
   253f8:	ret
   253fc:	stp	x19, x20, [sp, #-48]!
   25400:	mov	x20, x0
   25404:	mov	x19, x2
   25408:	ldr	w0, [x0, #20]
   2540c:	add	x3, sp, #0x28
   25410:	mov	x4, #0x0                   	// #0
   25414:	str	x30, [sp, #16]
   25418:	str	xzr, [sp, #40]
   2541c:	bl	1a8e0 <__sanitizer_set_report_fd@@Base+0x7010>
   25420:	tst	w0, #0xff
   25424:	b.eq	25444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ebc>  // b.none
   25428:	ldr	x0, [sp, #40]
   2542c:	cmp	x0, x19
   25430:	b.ne	25444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ebc>  // b.any
   25434:	mov	w0, #0x1                   	// #1
   25438:	ldr	x30, [sp, #16]
   2543c:	ldp	x19, x20, [sp], #48
   25440:	ret
   25444:	ldr	w1, [x20, #20]
   25448:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2544c:	add	x0, x0, #0xcb8
   25450:	bl	1cd78 <OnPrint@@Base+0x398>
   25454:	mov	w0, #0x0                   	// #0
   25458:	ldr	x30, [sp, #16]
   2545c:	ldp	x19, x20, [sp], #48
   25460:	ret
   25464:	nop
   25468:	mov	x0, #0x0                   	// #0
   2546c:	ret
   25470:	cmp	x2, #0x1
   25474:	mov	w0, #0x0                   	// #0
   25478:	b.ls	2548c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f04>  // b.plast
   2547c:	add	x1, x1, x2
   25480:	ldurb	w2, [x1, #-1]
   25484:	cmp	w2, #0xa
   25488:	b.eq	25490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f08>  // b.none
   2548c:	ret
   25490:	ldurb	w0, [x1, #-2]
   25494:	cmp	w0, #0xa
   25498:	cset	w0, eq  // eq = none
   2549c:	ret
   254a0:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   254a4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   254a8:	adrp	x4, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   254ac:	add	x4, x4, #0xa80
   254b0:	ldr	x5, [x3, #4056]
   254b4:	add	x3, x0, #0xa68
   254b8:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   254bc:	add	x0, x0, #0xa58
   254c0:	ldrb	w5, [x5, #180]
   254c4:	stp	x4, xzr, [x2, #16]
   254c8:	cmp	w5, #0x0
   254cc:	csel	x0, x0, x3, ne  // ne = any
   254d0:	stp	x1, x0, [x2]
   254d4:	ret
   254d8:	str	x30, [sp, #-16]!
   254dc:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   254e0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   254e4:	add	x2, x2, #0xa98
   254e8:	add	x0, x0, #0xab8
   254ec:	mov	x4, #0x0                   	// #0
   254f0:	mov	x3, #0x0                   	// #0
   254f4:	mov	w1, #0x4e                  	// #78
   254f8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   254fc:	nop
   25500:	str	x30, [sp, #-16]!
   25504:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25508:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2550c:	add	x2, x2, #0xa98
   25510:	add	x0, x0, #0xab8
   25514:	mov	x4, #0x0                   	// #0
   25518:	mov	x3, #0x0                   	// #0
   2551c:	mov	w1, #0x57                  	// #87
   25520:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25524:	nop
   25528:	cmp	x2, #0x8
   2552c:	b.hi	25538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fb0>  // b.pmore
   25530:	mov	w0, #0x0                   	// #0
   25534:	ret
   25538:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2553c:	str	x30, [sp, #-16]!
   25540:	sub	x2, x2, #0x8
   25544:	add	x0, x1, x2
   25548:	add	x1, x3, #0x1d0
   2554c:	mov	x2, #0x8                   	// #8
   25550:	bl	155f0 <__sanitizer_set_report_fd@@Base+0x1d20>
   25554:	cmp	w0, #0x0
   25558:	cset	w0, eq  // eq = none
   2555c:	ldr	x30, [sp], #16
   25560:	ret
   25564:	nop
   25568:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2556c:	stp	x19, x30, [sp, #-16]!
   25570:	mov	x19, x0
   25574:	ldr	x1, [x1, #3880]
   25578:	cbz	x1, 25598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6010>
   2557c:	mov	x3, #0x0                   	// #0
   25580:	mov	x2, #0x0                   	// #0
   25584:	mov	x1, #0x0                   	// #0
   25588:	bl	6620 <__cxa_demangle@plt>
   2558c:	cbz	x0, 25598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6010>
   25590:	ldp	x19, x30, [sp], #16
   25594:	ret
   25598:	mov	x0, x19
   2559c:	ldp	x19, x30, [sp], #16
   255a0:	ret
   255a4:	nop
   255a8:	cbz	x0, 25614 <__sanitizer_get_module_and_offset_for_pc@@Base+0x608c>
   255ac:	stp	x19, x20, [sp, #-32]!
   255b0:	mov	x19, x0
   255b4:	str	x30, [sp, #16]
   255b8:	ldrb	w1, [x0]
   255bc:	cmp	w1, #0x5f
   255c0:	b.ne	25604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>  // b.any
   255c4:	ldrb	w1, [x0, #1]
   255c8:	cmp	w1, #0x54
   255cc:	b.ne	25604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>  // b.any
   255d0:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   255d4:	ldr	x20, [x1, #960]
   255d8:	cbz	x20, 25604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x607c>
   255dc:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   255e0:	mov	x1, x0
   255e4:	mov	x16, x20
   255e8:	mov	x0, x19
   255ec:	ldr	x30, [sp, #16]
   255f0:	mov	w4, #0x0                   	// #0
   255f4:	ldp	x19, x20, [sp], #32
   255f8:	mov	x3, #0x0                   	// #0
   255fc:	mov	x2, #0x0                   	// #0
   25600:	br	x16
   25604:	mov	x0, #0x0                   	// #0
   25608:	ldr	x30, [sp, #16]
   2560c:	ldp	x19, x20, [sp], #32
   25610:	ret
   25614:	mov	x0, #0x0                   	// #0
   25618:	ret
   2561c:	nop
   25620:	cbz	x0, 256b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x612c>
   25624:	stp	x19, x20, [sp, #-32]!
   25628:	mov	x19, x0
   2562c:	str	x30, [sp, #16]
   25630:	ldrb	w1, [x0]
   25634:	cmp	w1, #0x5f
   25638:	b.ne	25680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>  // b.any
   2563c:	ldrb	w1, [x0, #1]
   25640:	cmp	w1, #0x54
   25644:	b.ne	25680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>  // b.any
   25648:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   2564c:	ldr	x20, [x1, #960]
   25650:	cbz	x20, 25680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>
   25654:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   25658:	mov	x1, x0
   2565c:	mov	w4, #0x0                   	// #0
   25660:	mov	x0, x19
   25664:	mov	x3, #0x0                   	// #0
   25668:	mov	x2, #0x0                   	// #0
   2566c:	blr	x20
   25670:	cbz	x0, 25680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f8>
   25674:	ldr	x30, [sp, #16]
   25678:	ldp	x19, x20, [sp], #32
   2567c:	ret
   25680:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25684:	ldr	x0, [x0, #3880]
   25688:	cbz	x0, 256a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x611c>
   2568c:	mov	x0, x19
   25690:	mov	x3, #0x0                   	// #0
   25694:	mov	x2, #0x0                   	// #0
   25698:	mov	x1, #0x0                   	// #0
   2569c:	bl	6620 <__cxa_demangle@plt>
   256a0:	cbnz	x0, 25674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60ec>
   256a4:	mov	x0, x19
   256a8:	ldr	x30, [sp, #16]
   256ac:	ldp	x19, x20, [sp], #32
   256b0:	ret
   256b4:	mov	x0, #0x0                   	// #0
   256b8:	ret
   256bc:	nop
   256c0:	stp	x19, x20, [sp, #-128]!
   256c4:	mov	x19, x0
   256c8:	ldr	x0, [x0, #8]
   256cc:	str	x30, [sp, #56]
   256d0:	bl	17c60 <__sanitizer_set_report_fd@@Base+0x4390>
   256d4:	ands	w20, w0, #0xff
   256d8:	b.ne	256f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6170>  // b.any
   256dc:	add	x19, x19, #0x4, lsl #12
   256e0:	ldrb	w0, [x19, #33]
   256e4:	cbz	w0, 2579c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6214>
   256e8:	mov	w0, w20
   256ec:	ldr	x30, [sp, #56]
   256f0:	ldp	x19, x20, [sp], #128
   256f4:	ret
   256f8:	mov	x2, #0x8                   	// #8
   256fc:	mov	w1, #0x0                   	// #0
   25700:	add	x0, sp, #0x40
   25704:	stp	x21, x22, [sp, #16]
   25708:	mov	x22, #0x0                   	// #0
   2570c:	stp	x23, x24, [sp, #32]
   25710:	add	x23, sp, #0x50
   25714:	mov	x24, x23
   25718:	str	x25, [sp, #48]
   2571c:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   25720:	mov	x20, x23
   25724:	add	x0, sp, #0x48
   25728:	mov	w21, #0x0                   	// #0
   2572c:	mov	x2, #0x8                   	// #8
   25730:	mov	w1, #0x0                   	// #0
   25734:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   25738:	mov	x0, x20
   2573c:	bl	6400 <pipe@plt>
   25740:	cmn	w0, #0x1
   25744:	b.eq	257c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6238>  // b.none
   25748:	ldr	w0, [x20]
   2574c:	cmp	w0, #0x2
   25750:	b.le	25768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   25754:	ldr	w0, [x20, #4]
   25758:	cmp	w0, #0x2
   2575c:	b.le	25768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   25760:	cbnz	x22, 25834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62ac>
   25764:	mov	x22, x20
   25768:	add	w21, w21, #0x1
   2576c:	add	x20, x20, #0x8
   25770:	cmp	w21, #0x5
   25774:	b.ne	25738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b0>  // b.any
   25778:	cbnz	x22, 25814 <__sanitizer_get_module_and_offset_for_pc@@Base+0x628c>
   2577c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25780:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25784:	add	x2, x2, #0xe78
   25788:	add	x0, x0, #0xde8
   2578c:	mov	x4, #0x0                   	// #0
   25790:	mov	x3, #0x0                   	// #0
   25794:	mov	w1, #0x87                  	// #135
   25798:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2579c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   257a0:	add	x0, x0, #0xe48
   257a4:	bl	1cd78 <OnPrint@@Base+0x398>
   257a8:	mov	w0, #0x1                   	// #1
   257ac:	strb	w0, [x19, #33]
   257b0:	mov	w0, w20
   257b4:	ldr	x30, [sp, #56]
   257b8:	ldp	x19, x20, [sp], #128
   257bc:	ret
   257c0:	cbz	w21, 257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6260>
   257c4:	mov	w19, #0x0                   	// #0
   257c8:	ldr	w0, [x24]
   257cc:	add	w19, w19, #0x1
   257d0:	add	x24, x24, #0x8
   257d4:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   257d8:	ldur	w0, [x24, #-4]
   257dc:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   257e0:	cmp	w19, w21
   257e4:	b.ne	257c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6240>  // b.any
   257e8:	bl	6790 <__errno_location@plt>
   257ec:	mov	x1, x0
   257f0:	mov	w20, #0x0                   	// #0
   257f4:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   257f8:	add	x0, x0, #0xea0
   257fc:	ldr	w1, [x1]
   25800:	bl	1cd78 <OnPrint@@Base+0x398>
   25804:	ldp	x21, x22, [sp, #16]
   25808:	ldp	x23, x24, [sp, #32]
   2580c:	ldr	x25, [sp, #48]
   25810:	b	256e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   25814:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25818:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2581c:	add	x2, x2, #0xe88
   25820:	add	x0, x0, #0xde8
   25824:	mov	x4, #0x0                   	// #0
   25828:	mov	x3, #0x0                   	// #0
   2582c:	mov	w1, #0x88                  	// #136
   25830:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25834:	cbz	w21, 25864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62dc>
   25838:	mov	w25, #0x0                   	// #0
   2583c:	cmp	x24, x22
   25840:	b.eq	25854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62cc>  // b.none
   25844:	ldr	w0, [x24]
   25848:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   2584c:	ldr	w0, [x24, #4]
   25850:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   25854:	add	w25, w25, #0x1
   25858:	add	x24, x24, #0x8
   2585c:	cmp	w25, w21
   25860:	b.ne	2583c <__sanitizer_get_module_and_offset_for_pc@@Base+0x62b4>  // b.any
   25864:	add	x0, x19, #0x4, lsl #12
   25868:	ldr	w2, [x20]
   2586c:	ldr	d0, [x20]
   25870:	ldr	d1, [x22]
   25874:	ldrb	w20, [x0, #34]
   25878:	ldr	w3, [x22, #4]
   2587c:	stp	d1, d0, [sp, #64]
   25880:	cbnz	w20, 25984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63fc>
   25884:	ldp	x4, x0, [x19]
   25888:	adrp	x1, 26000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a78>
   2588c:	add	x1, x1, #0x30
   25890:	ldr	x4, [x4, #8]
   25894:	cmp	x4, x1
   25898:	b.ne	2590c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6384>  // b.any
   2589c:	ldr	x4, [x19, #16424]
   258a0:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   258a4:	add	x1, x1, #0xd98
   258a8:	stp	x0, x1, [sp, #80]
   258ac:	stp	x4, xzr, [sp, #96]
   258b0:	mov	x1, x23
   258b4:	mov	w4, #0xffffffff            	// #-1
   258b8:	bl	1bde8 <__sanitizer_set_report_fd@@Base+0x8518>
   258bc:	mov	w21, w0
   258c0:	cmp	w0, #0x0
   258c4:	b.lt	25944 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63bc>  // b.tstop
   258c8:	ldr	w1, [sp, #64]
   258cc:	ldr	w0, [sp, #76]
   258d0:	stp	w1, w0, [x19, #16]
   258d4:	b.eq	25964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63dc>  // b.none
   258d8:	mov	w0, #0xa                   	// #10
   258dc:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x7c90>
   258e0:	mov	w0, w21
   258e4:	bl	1bf38 <__sanitizer_set_report_fd@@Base+0x8668>
   258e8:	ands	w20, w0, #0xff
   258ec:	b.eq	25928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63a0>  // b.none
   258f0:	mov	w0, w20
   258f4:	ldp	x21, x22, [sp, #16]
   258f8:	ldp	x23, x24, [sp, #32]
   258fc:	ldr	x25, [sp, #48]
   25900:	ldr	x30, [sp, #56]
   25904:	ldp	x19, x20, [sp], #128
   25908:	ret
   2590c:	mov	x1, x0
   25910:	mov	x2, x23
   25914:	mov	x0, x19
   25918:	blr	x4
   2591c:	ldp	w3, w2, [sp, #68]
   25920:	ldr	x0, [x19, #8]
   25924:	b	258b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6328>
   25928:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2592c:	add	x0, x0, #0xf00
   25930:	bl	1cd78 <OnPrint@@Base+0x398>
   25934:	ldp	x21, x22, [sp, #16]
   25938:	ldp	x23, x24, [sp, #32]
   2593c:	ldr	x25, [sp, #48]
   25940:	b	256e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   25944:	ldr	w0, [sp, #64]
   25948:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   2594c:	ldr	w0, [sp, #76]
   25950:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x4178>
   25954:	ldp	x21, x22, [sp, #16]
   25958:	ldp	x23, x24, [sp, #32]
   2595c:	ldr	x25, [sp, #48]
   25960:	b	256e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6160>
   25964:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25968:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2596c:	add	x2, x2, #0xef0
   25970:	add	x0, x0, #0xde8
   25974:	mov	x4, #0x0                   	// #0
   25978:	mov	x3, #0x0                   	// #0
   2597c:	mov	w1, #0xef                  	// #239
   25980:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25984:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25988:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2598c:	add	x2, x2, #0xa98
   25990:	add	x0, x0, #0xde8
   25994:	mov	x4, #0x0                   	// #0
   25998:	mov	x3, #0x0                   	// #0
   2599c:	mov	w1, #0xde                  	// #222
   259a0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   259a4:	nop
   259a8:	cbz	x1, 25a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64b8>
   259ac:	stp	x19, x20, [sp, #-32]!
   259b0:	mov	x19, x1
   259b4:	str	x30, [sp, #16]
   259b8:	ldrb	w0, [x1]
   259bc:	cmp	w0, #0x5f
   259c0:	b.ne	25a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>  // b.any
   259c4:	ldrb	w0, [x1, #1]
   259c8:	cmp	w0, #0x54
   259cc:	b.ne	25a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>  // b.any
   259d0:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   259d4:	ldr	x20, [x0, #960]
   259d8:	cbz	x20, 25a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>
   259dc:	mov	x0, x1
   259e0:	bl	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   259e4:	mov	w4, #0x0                   	// #0
   259e8:	mov	x1, x0
   259ec:	mov	x3, #0x0                   	// #0
   259f0:	mov	x0, x19
   259f4:	mov	x2, #0x0                   	// #0
   259f8:	blr	x20
   259fc:	cbz	x0, 25a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6484>
   25a00:	ldr	x30, [sp, #16]
   25a04:	ldp	x19, x20, [sp], #32
   25a08:	ret
   25a0c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25a10:	ldr	x0, [x0, #3880]
   25a14:	cbz	x0, 25a30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64a8>
   25a18:	mov	x0, x19
   25a1c:	mov	x3, #0x0                   	// #0
   25a20:	mov	x2, #0x0                   	// #0
   25a24:	mov	x1, #0x0                   	// #0
   25a28:	bl	6620 <__cxa_demangle@plt>
   25a2c:	cbnz	x0, 25a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6478>
   25a30:	mov	x0, x19
   25a34:	ldr	x30, [sp, #16]
   25a38:	ldp	x19, x20, [sp], #32
   25a3c:	ret
   25a40:	mov	x0, #0x0                   	// #0
   25a44:	ret
   25a48:	stp	x19, x20, [sp, #-128]!
   25a4c:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25a50:	ldr	x0, [x20, #4056]
   25a54:	stp	x21, x22, [sp, #16]
   25a58:	ldrb	w0, [x0]
   25a5c:	str	x30, [sp, #56]
   25a60:	cbnz	w0, 25aec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6564>
   25a64:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25a68:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25a6c:	ldr	x0, [x0, #3896]
   25a70:	ldr	w0, [x0]
   25a74:	sxtw	x0, w0
   25a78:	cmp	x0, #0x1
   25a7c:	b.hi	25ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6548>  // b.pmore
   25a80:	mov	x19, #0x0                   	// #0
   25a84:	mov	x2, #0x0                   	// #0
   25a88:	dup	v0.2d, x19
   25a8c:	mov	x1, #0xf0                  	// #240
   25a90:	ldr	x0, [x22, #3968]
   25a94:	str	x2, [sp, #96]
   25a98:	stur	q0, [sp, #104]
   25a9c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25aa0:	ldp	x4, x5, [sp, #96]
   25aa4:	mov	x19, x0
   25aa8:	ldr	x2, [sp, #112]
   25aac:	add	x1, sp, #0x40
   25ab0:	stp	x4, x5, [sp, #64]
   25ab4:	str	x2, [sp, #80]
   25ab8:	bl	231c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   25abc:	mov	x0, x19
   25ac0:	ldp	x21, x22, [sp, #16]
   25ac4:	ldr	x30, [sp, #56]
   25ac8:	ldp	x19, x20, [sp], #128
   25acc:	ret
   25ad0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25ad4:	add	x0, x0, #0xf40
   25ad8:	bl	1cd78 <OnPrint@@Base+0x398>
   25adc:	mov	x19, #0x0                   	// #0
   25ae0:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25ae4:	mov	x2, #0x0                   	// #0
   25ae8:	b	25a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   25aec:	bl	cdb8 <__sancov_default_options@@Base+0x408>
   25af0:	tst	w0, #0xff
   25af4:	b.eq	25b48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c0>  // b.none
   25af8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25afc:	ldr	x0, [x0, #3896]
   25b00:	ldr	w0, [x0]
   25b04:	sxtw	x0, w0
   25b08:	cmp	x0, #0x1
   25b0c:	b.hi	25bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6624>  // b.pmore
   25b10:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b14:	ldr	x0, [x22, #3968]
   25b18:	bl	23998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4410>
   25b1c:	mov	x19, x0
   25b20:	cbz	x0, 25bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6644>
   25b24:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b28:	ldr	x0, [x0, #3896]
   25b2c:	ldr	w0, [x0]
   25b30:	sxtw	x0, w0
   25b34:	cmp	x0, #0x1
   25b38:	b.hi	25bbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6634>  // b.pmore
   25b3c:	mov	x2, #0x1                   	// #1
   25b40:	str	xzr, [x19, #8]
   25b44:	b	25a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   25b48:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b4c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b50:	ldr	x1, [x1, #3856]
   25b54:	ldr	x0, [x0, #3888]
   25b58:	cmp	x1, #0x0
   25b5c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   25b60:	b.eq	25b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6588>  // b.none
   25b64:	adrp	x22, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b68:	mov	x1, #0x4010                	// #16400
   25b6c:	ldr	x0, [x22, #3968]
   25b70:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25b74:	mov	x19, x0
   25b78:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25b7c:	adrp	x0, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   25b80:	add	x0, x0, #0xf68
   25b84:	ldr	x1, [x1, #3896]
   25b88:	stp	x0, xzr, [x19]
   25b8c:	ldr	w0, [x1]
   25b90:	sxtw	x0, w0
   25b94:	cmp	x0, #0x1
   25b98:	b.ls	25b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>  // b.plast
   25b9c:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25ba0:	add	x0, x0, #0xf90
   25ba4:	bl	1cd78 <OnPrint@@Base+0x398>
   25ba8:	b	25b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>
   25bac:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25bb0:	add	x0, x0, #0xf60
   25bb4:	bl	1cd78 <OnPrint@@Base+0x398>
   25bb8:	b	25b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6588>
   25bbc:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25bc0:	add	x0, x0, #0xfb0
   25bc4:	bl	1cd78 <OnPrint@@Base+0x398>
   25bc8:	b	25b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b4>
   25bcc:	ldr	x0, [x20, #4056]
   25bd0:	stp	x23, x24, [sp, #32]
   25bd4:	ldr	x23, [x0, #8]
   25bd8:	cbz	x23, 25c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66e0>
   25bdc:	mov	x0, x23
   25be0:	bl	f740 <__sancov_default_options@@Base+0x2d90>
   25be4:	ldrb	w1, [x23]
   25be8:	mov	x21, x0
   25bec:	cbz	w1, 25de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6860>
   25bf0:	adrp	x19, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25bf4:	add	x19, x19, #0x0
   25bf8:	mov	x1, x19
   25bfc:	mov	x0, x21
   25c00:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   25c04:	cbnz	w0, 25c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66ec>
   25c08:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25c0c:	ldr	x0, [x0, #3896]
   25c10:	ldr	w0, [x0]
   25c14:	sxtw	x0, w0
   25c18:	cmp	x0, #0x1
   25c1c:	b.hi	25c54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66cc>  // b.pmore
   25c20:	ldr	x20, [x22, #3968]
   25c24:	mov	x1, #0x4018                	// #16408
   25c28:	mov	x0, x20
   25c2c:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25c30:	mov	x2, x20
   25c34:	mov	x1, x23
   25c38:	mov	x19, x0
   25c3c:	bl	24260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd8>
   25c40:	cbz	x19, 25de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   25c44:	mov	x2, #0x1                   	// #1
   25c48:	ldp	x23, x24, [sp, #32]
   25c4c:	str	xzr, [x19, #8]
   25c50:	b	25a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   25c54:	mov	x1, x23
   25c58:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25c5c:	add	x0, x0, #0x10
   25c60:	bl	1cd78 <OnPrint@@Base+0x398>
   25c64:	b	25c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6698>
   25c68:	adrp	x21, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25c6c:	add	x21, x21, #0xd20
   25c70:	b	25bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6668>
   25c74:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25c78:	mov	x0, x21
   25c7c:	add	x1, x1, #0x48
   25c80:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   25c84:	cbz	w0, 25ff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a6c>
   25c88:	adrp	x24, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25c8c:	add	x24, x24, #0x88
   25c90:	mov	x0, x21
   25c94:	mov	x1, x24
   25c98:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   25c9c:	cbnz	w0, 25e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6890>
   25ca0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25ca4:	ldr	x0, [x0, #3896]
   25ca8:	ldr	w0, [x0]
   25cac:	str	x25, [sp, #48]
   25cb0:	sxtw	x0, w0
   25cb4:	cmp	x0, #0x1
   25cb8:	b.ls	25ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6744>  // b.plast
   25cbc:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25cc0:	mov	x1, x23
   25cc4:	add	x0, x0, #0x98
   25cc8:	bl	1cd78 <OnPrint@@Base+0x398>
   25ccc:	ldr	x20, [x22, #3968]
   25cd0:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25cd4:	mov	x1, #0x38                  	// #56
   25cd8:	mov	x0, x20
   25cdc:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25ce0:	ldr	x24, [x21, #4016]
   25ce4:	mov	x19, x0
   25ce8:	stp	xzr, xzr, [x0, #40]
   25cec:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   25cf0:	add	x1, x1, #0xf38
   25cf4:	ldr	x0, [x24]
   25cf8:	stp	x1, xzr, [x19]
   25cfc:	stp	x23, x20, [x19, #16]
   25d00:	str	xzr, [x19, #32]
   25d04:	cbz	x0, 25f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69f8>
   25d08:	sub	x1, x0, #0x1
   25d0c:	tst	x1, x0
   25d10:	b.ne	25f8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   25d14:	add	x23, x19, #0x20
   25d18:	add	x20, x0, #0x7
   25d1c:	neg	x0, x0
   25d20:	mov	w2, #0x0                   	// #0
   25d24:	and	x20, x20, x0
   25d28:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   25d2c:	mov	x0, x20
   25d30:	add	x1, x25, #0x988
   25d34:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   25d38:	mov	x24, x0
   25d3c:	ldr	x2, [x23, #16]
   25d40:	ldr	x1, [x19, #32]
   25d44:	lsl	x2, x2, #3
   25d48:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   25d4c:	ldr	x1, [x23, #8]
   25d50:	ldr	x0, [x19, #32]
   25d54:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   25d58:	str	x24, [x19, #32]
   25d5c:	str	x20, [x23, #8]
   25d60:	cmp	x20, #0x7f
   25d64:	b.ls	25d70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e8>  // b.plast
   25d68:	ldr	x25, [sp, #48]
   25d6c:	b	25c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66bc>
   25d70:	ldr	x3, [x23, #16]
   25d74:	cmp	x3, #0x10
   25d78:	b.hi	25fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.pmore
   25d7c:	ldr	x21, [x21, #4016]
   25d80:	ldr	x0, [x21]
   25d84:	cbz	x0, 25f9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a14>
   25d88:	sub	x1, x0, #0x1
   25d8c:	tst	x1, x0
   25d90:	b.ne	25f8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   25d94:	add	x20, x0, #0x7f
   25d98:	neg	x0, x0
   25d9c:	and	x20, x20, x0
   25da0:	add	x1, x25, #0x988
   25da4:	mov	w2, #0x0                   	// #0
   25da8:	mov	x0, x20
   25dac:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   25db0:	mov	x21, x0
   25db4:	ldr	x2, [x23, #16]
   25db8:	ldr	x1, [x19, #32]
   25dbc:	lsl	x2, x2, #3
   25dc0:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   25dc4:	ldr	x1, [x23, #8]
   25dc8:	ldr	x0, [x19, #32]
   25dcc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   25dd0:	ldr	x25, [sp, #48]
   25dd4:	str	x21, [x19, #32]
   25dd8:	str	x20, [x23, #8]
   25ddc:	b	25c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66bc>
   25de0:	ldp	x23, x24, [sp, #32]
   25de4:	b	25a80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64f8>
   25de8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25dec:	ldr	x0, [x0, #3896]
   25df0:	ldr	w0, [x0]
   25df4:	sxtw	x0, w0
   25df8:	cmp	x0, #0x1
   25dfc:	b.ls	25de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>  // b.plast
   25e00:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   25e04:	add	x0, x0, #0xfd0
   25e08:	bl	1cd78 <OnPrint@@Base+0x398>
   25e0c:	mov	x2, #0x0                   	// #0
   25e10:	ldp	x23, x24, [sp, #32]
   25e14:	b	25a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6500>
   25e18:	cbnz	x23, 25fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a54>
   25e1c:	mov	x0, x19
   25e20:	bl	134e8 <__sanitizer_cov_dump@@Base+0x2788>
   25e24:	mov	x21, x0
   25e28:	cbz	x0, 25e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68f0>
   25e2c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25e30:	ldr	x0, [x0, #3896]
   25e34:	ldr	w0, [x0]
   25e38:	sxtw	x0, w0
   25e3c:	cmp	x0, #0x1
   25e40:	b.ls	25e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68cc>  // b.plast
   25e44:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25e48:	mov	x1, x21
   25e4c:	add	x0, x0, #0x160
   25e50:	bl	1cd78 <OnPrint@@Base+0x398>
   25e54:	ldr	x20, [x22, #3968]
   25e58:	mov	x1, #0x4018                	// #16408
   25e5c:	mov	x0, x20
   25e60:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25e64:	mov	x2, x20
   25e68:	mov	x1, x21
   25e6c:	mov	x19, x0
   25e70:	bl	24260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd8>
   25e74:	b	25c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66b8>
   25e78:	ldr	x20, [x20, #4056]
   25e7c:	ldrb	w0, [x20, #16]
   25e80:	cbz	w0, 25de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   25e84:	mov	x0, x24
   25e88:	bl	134e8 <__sanitizer_cov_dump@@Base+0x2788>
   25e8c:	mov	x20, x0
   25e90:	cbz	x0, 25de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6858>
   25e94:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25e98:	ldr	x0, [x0, #3896]
   25e9c:	ldr	w0, [x0]
   25ea0:	str	x25, [sp, #48]
   25ea4:	sxtw	x0, w0
   25ea8:	cmp	x0, #0x1
   25eac:	b.ls	25ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6938>  // b.plast
   25eb0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25eb4:	mov	x1, x20
   25eb8:	add	x0, x0, #0x188
   25ebc:	bl	1cd78 <OnPrint@@Base+0x398>
   25ec0:	ldr	x23, [x22, #3968]
   25ec4:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   25ec8:	mov	x1, #0x38                  	// #56
   25ecc:	mov	x0, x23
   25ed0:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   25ed4:	ldr	x24, [x21, #4016]
   25ed8:	mov	x19, x0
   25edc:	stp	xzr, xzr, [x0, #40]
   25ee0:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   25ee4:	add	x1, x1, #0xf38
   25ee8:	ldr	x0, [x24]
   25eec:	stp	x1, xzr, [x19]
   25ef0:	stp	x20, x23, [x19, #16]
   25ef4:	str	xzr, [x19, #32]
   25ef8:	cbz	x0, 25fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a20>
   25efc:	sub	x1, x0, #0x1
   25f00:	tst	x1, x0
   25f04:	b.ne	25f8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a04>  // b.any
   25f08:	add	x23, x19, #0x20
   25f0c:	add	x20, x0, #0x7
   25f10:	neg	x0, x0
   25f14:	mov	w2, #0x0                   	// #0
   25f18:	and	x20, x20, x0
   25f1c:	adrp	x25, 40000 <__asan_backtrace_get_view@@Base+0x78>
   25f20:	mov	x0, x20
   25f24:	add	x1, x25, #0x988
   25f28:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   25f2c:	mov	x24, x0
   25f30:	ldr	x2, [x23, #16]
   25f34:	ldr	x1, [x19, #32]
   25f38:	lsl	x2, x2, #3
   25f3c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   25f40:	ldr	x1, [x23, #8]
   25f44:	ldr	x0, [x19, #32]
   25f48:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   25f4c:	str	x24, [x19, #32]
   25f50:	str	x20, [x23, #8]
   25f54:	cmp	x20, #0x7f
   25f58:	b.hi	25d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e0>  // b.pmore
   25f5c:	ldr	x3, [x23, #16]
   25f60:	cmp	x3, #0x10
   25f64:	b.hi	25fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a2c>  // b.pmore
   25f68:	ldr	x20, [x21, #4016]
   25f6c:	ldr	x0, [x20]
   25f70:	cbz	x0, 25fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a48>
   25f74:	ldr	x21, [x21, #4016]
   25f78:	ldr	x0, [x21]
   25f7c:	b	25d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6800>
   25f80:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   25f84:	str	x0, [x24]
   25f88:	b	25d08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6780>
   25f8c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   25f90:	add	x0, x0, #0x970
   25f94:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   25f98:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   25f9c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   25fa0:	str	x0, [x21]
   25fa4:	b	25d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6800>
   25fa8:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   25fac:	str	x0, [x24]
   25fb0:	b	25efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6974>
   25fb4:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   25fb8:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   25fbc:	add	x2, x2, #0xd58
   25fc0:	add	x0, x0, #0x9b8
   25fc4:	mov	x4, #0x10                  	// #16
   25fc8:	mov	w1, #0x1fd                 	// #509
   25fcc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   25fd0:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   25fd4:	str	x0, [x20]
   25fd8:	b	25f74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69ec>
   25fdc:	mov	x1, x23
   25fe0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25fe4:	add	x0, x0, #0xc8
   25fe8:	str	x25, [sp, #48]
   25fec:	bl	1cd78 <OnPrint@@Base+0x398>
   25ff0:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   25ff4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   25ff8:	add	x0, x0, #0x50
   25ffc:	str	x25, [sp, #48]
   26000:	bl	1cd78 <OnPrint@@Base+0x398>
   26004:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26008:	str	x30, [sp, #-16]!
   2600c:	bl	23b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45c8>
   26010:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26014:	mov	x0, #0x0                   	// #0
   26018:	add	x1, x1, #0x1a8
   2601c:	bl	6500 <dlsym@plt>
   26020:	ldr	x30, [sp], #16
   26024:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   26028:	str	x0, [x1, #960]
   2602c:	b	6570 <dlerror@plt>
   26030:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   26034:	add	x3, x3, #0xd98
   26038:	stp	x1, x3, [x2]
   2603c:	ldr	x0, [x0, #16424]
   26040:	stp	x0, xzr, [x2, #16]
   26044:	ret
   26048:	mov	w0, #0x0                   	// #0
   2604c:	ret
   26050:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   26054:	ldr	x0, [x0, #3904]
   26058:	cbz	x0, 26060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ad8>
   2605c:	b	6680 <__sanitizer_symbolize_flush@plt>
   26060:	ret
   26064:	nop
   26068:	stp	x19, x20, [sp, #-48]!
   2606c:	mov	x19, x2
   26070:	mov	w3, #0x4000                	// #16384
   26074:	stp	x21, x22, [sp, #16]
   26078:	add	x22, x0, #0x10
   2607c:	mov	x21, x1
   26080:	ldp	x0, x1, [x19]
   26084:	mov	x2, x22
   26088:	str	x30, [sp, #32]
   2608c:	bl	6550 <__sanitizer_symbolize_data@plt>
   26090:	mov	w20, w0
   26094:	tst	w0, #0xff
   26098:	b.ne	260b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b28>  // b.any
   2609c:	mov	w0, w20
   260a0:	ldp	x21, x22, [sp, #16]
   260a4:	ldr	x30, [sp, #32]
   260a8:	ldp	x19, x20, [sp], #48
   260ac:	ret
   260b0:	mov	x0, x22
   260b4:	mov	x1, x19
   260b8:	bl	245b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5028>
   260bc:	ldr	x1, [x19, #48]
   260c0:	ldr	x0, [x19, #8]
   260c4:	add	x1, x21, x1
   260c8:	ldp	x21, x22, [sp, #16]
   260cc:	sub	x1, x1, x0
   260d0:	str	x1, [x19, #48]
   260d4:	mov	w0, w20
   260d8:	ldr	x30, [sp, #32]
   260dc:	ldp	x19, x20, [sp], #48
   260e0:	ret
   260e4:	nop
   260e8:	stp	x19, x20, [sp, #-32]!
   260ec:	mov	x19, x2
   260f0:	mov	w3, #0x4000                	// #16384
   260f4:	stp	x21, x30, [sp, #16]
   260f8:	add	x21, x0, #0x10
   260fc:	mov	x2, x21
   26100:	ldp	x0, x1, [x19, #16]
   26104:	bl	6630 <__sanitizer_symbolize_code@plt>
   26108:	mov	w20, w0
   2610c:	tst	w0, #0xff
   26110:	b.ne	26124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6b9c>  // b.any
   26114:	mov	w0, w20
   26118:	ldp	x21, x30, [sp, #16]
   2611c:	ldp	x19, x20, [sp], #32
   26120:	ret
   26124:	mov	x1, x19
   26128:	mov	x0, x21
   2612c:	bl	24318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   26130:	mov	w0, w20
   26134:	ldp	x21, x30, [sp, #16]
   26138:	ldp	x19, x20, [sp], #32
   2613c:	ret
   26140:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   26144:	stp	x19, x20, [sp, #-32]!
   26148:	mov	x20, x1
   2614c:	ldr	x0, [x0, #3808]
   26150:	str	x30, [sp, #24]
   26154:	cbz	x0, 261c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c38>
   26158:	str	x21, [sp, #16]
   2615c:	mov	x21, #0x400                 	// #1024
   26160:	mov	x2, #0x0                   	// #0
   26164:	mov	x1, #0x0                   	// #0
   26168:	mov	x0, x21
   2616c:	bl	ce20 <__sancov_default_options@@Base+0x470>
   26170:	mov	x19, x0
   26174:	mov	w2, w21
   26178:	mov	x0, x20
   2617c:	mov	x1, x19
   26180:	bl	6480 <__sanitizer_symbolize_demangle@plt>
   26184:	cmp	x21, w0, sxtw
   26188:	sxtw	x0, w0
   2618c:	b.cc	261a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c1c>  // b.lo, b.ul, b.last
   26190:	mov	x0, x19
   26194:	ldr	x21, [sp, #16]
   26198:	ldr	x30, [sp, #24]
   2619c:	ldp	x19, x20, [sp], #32
   261a0:	ret
   261a4:	add	x21, x0, #0x1
   261a8:	mov	x1, #0x0                   	// #0
   261ac:	mov	x0, x19
   261b0:	bl	d220 <__sancov_default_options@@Base+0x870>
   261b4:	cmp	x21, #0x20, lsl #12
   261b8:	b.ls	26160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6bd8>  // b.plast
   261bc:	ldr	x21, [sp, #16]
   261c0:	mov	x19, x20
   261c4:	mov	x0, x19
   261c8:	ldr	x30, [sp, #24]
   261cc:	ldp	x19, x20, [sp], #32
   261d0:	ret
   261d4:	nop
   261d8:	stp	x19, x20, [sp, #-144]!
   261dc:	mov	x19, x0
   261e0:	mov	x20, #0x0                   	// #0
   261e4:	ldr	x0, [x0, #48]
   261e8:	stp	x21, x22, [sp, #16]
   261ec:	mov	x22, x2
   261f0:	stp	x23, x24, [sp, #32]
   261f4:	stp	x25, x30, [sp, #48]
   261f8:	str	xzr, [sp, #72]
   261fc:	ldp	x21, x23, [x2, #16]
   26200:	cbnz	x0, 26218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c90>
   26204:	b	262c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d3c>
   26208:	ldr	x0, [x19, #48]
   2620c:	add	x20, x20, #0x1
   26210:	cmp	x0, x20
   26214:	b.ls	262bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d34>  // b.plast
   26218:	ldr	x1, [x19, #32]
   2621c:	mov	x0, x21
   26220:	lsl	x24, x20, #3
   26224:	ldr	x1, [x1, x20, lsl #3]
   26228:	ldr	x1, [x1, #16424]
   2622c:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   26230:	cbnz	w0, 26208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c80>
   26234:	ldr	x4, [x19, #48]
   26238:	ldr	x0, [x19, #32]
   2623c:	cmp	x4, x20
   26240:	b.ls	26358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dd0>  // b.plast
   26244:	ldr	x1, [x0, x24]
   26248:	str	x1, [sp, #72]
   2624c:	cbz	x1, 262c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d3c>
   26250:	ldr	x1, [x1, #16424]
   26254:	mov	x0, x21
   26258:	bl	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   2625c:	sxtw	x4, w0
   26260:	cbnz	w0, 2633c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6db4>
   26264:	add	x19, sp, #0x50
   26268:	mov	x3, x23
   2626c:	mov	x4, #0xffffffffffffffff    	// #-1
   26270:	mov	x1, #0x40                  	// #64
   26274:	mov	x0, x19
   26278:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2627c:	add	x2, x2, #0xe38
   26280:	bl	1c9e8 <OnPrint@@Base+0x8>
   26284:	ldr	x0, [sp, #72]
   26288:	mov	x1, x19
   2628c:	bl	24758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51d0>
   26290:	mov	w1, #0x0                   	// #0
   26294:	cbz	x0, 262a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d1c>
   26298:	mov	x1, x22
   2629c:	bl	24318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d90>
   262a0:	mov	w1, #0x1                   	// #1
   262a4:	mov	w0, w1
   262a8:	ldp	x21, x22, [sp, #16]
   262ac:	ldp	x23, x24, [sp, #32]
   262b0:	ldp	x25, x30, [sp, #48]
   262b4:	ldp	x19, x20, [sp], #144
   262b8:	ret
   262bc:	ldr	x1, [sp, #72]
   262c0:	cbnz	x1, 26250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cc8>
   262c4:	ldr	x0, [x19, #24]
   262c8:	mov	x1, #0x4030                	// #16432
   262cc:	add	x24, x19, #0x20
   262d0:	bl	cc68 <__sancov_default_options@@Base+0x2b8>
   262d4:	mov	x20, x0
   262d8:	ldr	x1, [x19, #16]
   262dc:	mov	w2, #0x0                   	// #0
   262e0:	bl	246d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5150>
   262e4:	adrp	x0, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   262e8:	add	x0, x0, #0xf10
   262ec:	str	x0, [x20]
   262f0:	mov	x0, x21
   262f4:	bl	15bd0 <__sanitizer_set_report_fd@@Base+0x2300>
   262f8:	str	x20, [sp, #72]
   262fc:	ldr	x4, [x19, #40]
   26300:	ldr	x3, [x24, #16]
   26304:	str	x0, [x20, #16424]
   26308:	lsr	x4, x4, #3
   2630c:	cmp	x3, x4
   26310:	b.hi	26428 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ea0>  // b.pmore
   26314:	add	x20, x3, #0x1
   26318:	b.eq	26374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dec>  // b.none
   2631c:	ldr	x25, [x19, #32]
   26320:	str	x20, [x24, #16]
   26324:	add	x1, sp, #0x48
   26328:	add	x0, x25, x3, lsl #3
   2632c:	mov	x2, #0x8                   	// #8
   26330:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   26334:	ldr	x1, [sp, #72]
   26338:	b	26250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cc8>
   2633c:	adrp	x2, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   26340:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   26344:	add	x2, x2, #0xda0
   26348:	add	x0, x0, #0xde8
   2634c:	mov	x3, #0x0                   	// #0
   26350:	mov	w1, #0x15c                 	// #348
   26354:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26358:	adrp	x2, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2635c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   26360:	mov	x3, x20
   26364:	add	x2, x2, #0x9a0
   26368:	add	x0, x0, #0x9b8
   2636c:	mov	w1, #0x1b6                 	// #438
   26370:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26374:	tst	x3, x20
   26378:	b.eq	263b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e2c>  // b.none
   2637c:	clz	x2, x20
   26380:	mov	w0, #0x3f                  	// #63
   26384:	sub	w0, w0, w2
   26388:	mov	x2, #0x1                   	// #1
   2638c:	add	w4, w0, #0x1
   26390:	lsl	x4, x2, x4
   26394:	cmp	x4, x20
   26398:	b.ls	26474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6eec>  // b.plast
   2639c:	lsl	x0, x2, x0
   263a0:	cmp	x0, x20
   263a4:	b.cs	26490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f08>  // b.hs, b.nlast
   263a8:	cmp	x3, x4
   263ac:	b.hi	2644c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ec4>  // b.pmore
   263b0:	mov	x20, x4
   263b4:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   263b8:	lsl	x20, x20, #3
   263bc:	ldr	x25, [x25, #4016]
   263c0:	ldr	x0, [x25]
   263c4:	cbz	x0, 26440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6eb8>
   263c8:	sub	x1, x0, #0x1
   263cc:	tst	x0, x1
   263d0:	b.ne	26464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6edc>  // b.any
   263d4:	add	x20, x20, x1
   263d8:	neg	x0, x0
   263dc:	and	x20, x20, x0
   263e0:	mov	w2, #0x0                   	// #0
   263e4:	mov	x0, x20
   263e8:	adrp	x1, 40000 <__asan_backtrace_get_view@@Base+0x78>
   263ec:	add	x1, x1, #0x988
   263f0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   263f4:	ldr	x2, [x24, #16]
   263f8:	mov	x25, x0
   263fc:	ldr	x1, [x19, #32]
   26400:	lsl	x2, x2, #3
   26404:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   26408:	ldr	x1, [x24, #8]
   2640c:	ldr	x0, [x19, #32]
   26410:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   26414:	ldr	x3, [x24, #16]
   26418:	str	x25, [x19, #32]
   2641c:	str	x20, [x24, #8]
   26420:	add	x20, x3, #0x1
   26424:	b	26320 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d98>
   26428:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   2642c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   26430:	add	x2, x2, #0xce0
   26434:	add	x0, x0, #0x9b8
   26438:	mov	w1, #0x1be                 	// #446
   2643c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26440:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   26444:	str	x0, [x25]
   26448:	b	263c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e40>
   2644c:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   26450:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   26454:	add	x2, x2, #0xd58
   26458:	add	x0, x0, #0x9b8
   2645c:	mov	w1, #0x1fd                 	// #509
   26460:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26464:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   26468:	add	x0, x0, #0x970
   2646c:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   26470:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26474:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   26478:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2647c:	mov	x3, x20
   26480:	add	x2, x2, #0xd10
   26484:	add	x0, x0, #0x9b8
   26488:	mov	w1, #0x17b                 	// #379
   2648c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26490:	mov	x4, x0
   26494:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   26498:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   2649c:	mov	x3, x20
   264a0:	add	x2, x2, #0xd38
   264a4:	add	x0, x0, #0x9b8
   264a8:	mov	w1, #0x17c                 	// #380
   264ac:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   264b0:	stp	x19, x20, [sp, #-32]!
   264b4:	mov	x20, x1
   264b8:	str	x30, [sp, #16]
   264bc:	bl	23b40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b8>
   264c0:	mov	w19, w0
   264c4:	tst	w0, #0xff
   264c8:	b.eq	264d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f4c>  // b.none
   264cc:	ldrb	w0, [x20]
   264d0:	cbnz	w0, 264e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f5c>
   264d4:	mov	w0, w19
   264d8:	ldr	x30, [sp, #16]
   264dc:	ldp	x19, x20, [sp], #32
   264e0:	ret
   264e4:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   264e8:	add	x0, x20, #0x1
   264ec:	add	x1, x1, #0x1d0
   264f0:	bl	16df0 <__sanitizer_set_report_fd@@Base+0x3520>
   264f4:	cbz	x0, 2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6f84>
   264f8:	strb	wzr, [x0]
   264fc:	mov	w0, w19
   26500:	ldr	x30, [sp, #16]
   26504:	ldp	x19, x20, [sp], #32
   26508:	ret
   2650c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26510:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   26514:	add	x2, x2, #0x1b8
   26518:	add	x0, x0, #0xde8
   2651c:	mov	x4, #0x0                   	// #0
   26520:	mov	x3, #0x0                   	// #0
   26524:	mov	w1, #0x11e                 	// #286
   26528:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2652c:	nop
   26530:	adrp	x2, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   26534:	add	x1, x2, #0x3d0
   26538:	ldr	x3, [x2, #976]
   2653c:	cbz	x3, 2656c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe4>
   26540:	ldr	x3, [x1, #8]
   26544:	cbz	x3, 26584 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ffc>
   26548:	ldr	x3, [x1, #16]
   2654c:	cbz	x3, 2658c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7004>
   26550:	ldr	x3, [x1, #24]
   26554:	cbz	x3, 26594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x700c>
   26558:	ldr	x3, [x1, #32]
   2655c:	mov	w1, #0x0                   	// #0
   26560:	cbz	x3, 2659c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7014>
   26564:	mov	w0, w1
   26568:	ret
   2656c:	mov	w3, #0x0                   	// #0
   26570:	add	x2, x2, #0x3d0
   26574:	mov	w1, #0x1                   	// #1
   26578:	str	x0, [x2, w3, sxtw #3]
   2657c:	mov	w0, w1
   26580:	ret
   26584:	mov	w3, #0x1                   	// #1
   26588:	b	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2658c:	mov	w3, #0x2                   	// #2
   26590:	b	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   26594:	mov	w3, #0x3                   	// #3
   26598:	b	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   2659c:	mov	w3, #0x4                   	// #4
   265a0:	b	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6fe8>
   265a4:	nop
   265a8:	adrp	x2, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   265ac:	mov	x1, x0
   265b0:	ldr	x3, [x2, #976]
   265b4:	cmp	x0, x3
   265b8:	b.eq	265f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7070>  // b.none
   265bc:	add	x0, x2, #0x3d0
   265c0:	ldr	x3, [x0, #8]
   265c4:	cmp	x1, x3
   265c8:	b.eq	26630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70a8>  // b.none
   265cc:	ldr	x3, [x0, #16]
   265d0:	cmp	x1, x3
   265d4:	b.eq	2663c <__sanitizer_get_module_and_offset_for_pc@@Base+0x70b4>  // b.none
   265d8:	ldr	x3, [x0, #24]
   265dc:	cmp	x1, x3
   265e0:	b.eq	26648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c0>  // b.none
   265e4:	ldr	x3, [x0, #32]
   265e8:	mov	w0, #0x0                   	// #0
   265ec:	cmp	x3, x1
   265f0:	b.eq	26654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70cc>  // b.none
   265f4:	ret
   265f8:	mov	w1, #0x1                   	// #1
   265fc:	mov	w0, #0x0                   	// #0
   26600:	stp	x19, x30, [sp, #-16]!
   26604:	add	x19, x2, #0x3d0
   26608:	mov	w2, #0x4                   	// #4
   2660c:	sub	w2, w2, w0
   26610:	add	x1, x19, w1, sxtw #3
   26614:	add	x0, x19, w0, sxtw #3
   26618:	sbfiz	x2, x2, #3, #32
   2661c:	bl	157b8 <__sanitizer_set_report_fd@@Base+0x1ee8>
   26620:	mov	w0, #0x1                   	// #1
   26624:	str	xzr, [x19, #32]
   26628:	ldp	x19, x30, [sp], #16
   2662c:	ret
   26630:	mov	w1, #0x2                   	// #2
   26634:	mov	w0, #0x1                   	// #1
   26638:	b	26600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   2663c:	mov	w1, #0x3                   	// #3
   26640:	mov	w0, #0x2                   	// #2
   26644:	b	26600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   26648:	mov	w1, #0x4                   	// #4
   2664c:	mov	w0, #0x3                   	// #3
   26650:	b	26600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   26654:	mov	w1, #0x5                   	// #5
   26658:	mov	w0, #0x4                   	// #4
   2665c:	b	26600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7078>
   26660:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   26664:	str	x0, [x1, #1016]
   26668:	ret
   2666c:	nop
   26670:	stp	x19, x20, [sp, #-32]!
   26674:	adrp	x20, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   26678:	add	x0, x20, #0x3d0
   2667c:	ldr	x0, [x0, #40]
   26680:	str	x30, [sp, #16]
   26684:	cbz	x0, 2668c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7104>
   26688:	blr	x0
   2668c:	add	x20, x20, #0x3d0
   26690:	mov	x19, #0x4                   	// #4
   26694:	ldr	x0, [x20, x19, lsl #3]
   26698:	cbz	x0, 266a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7118>
   2669c:	blr	x0
   266a0:	sub	x19, x19, #0x1
   266a4:	cmn	x19, #0x1
   266a8:	b.ne	26694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x710c>  // b.any
   266ac:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   266b0:	ldr	x0, [x0, #4056]
   266b4:	ldrb	w1, [x0, #220]
   266b8:	cbz	w1, 266c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7138>
   266bc:	bl	1b570 <__sanitizer_set_report_fd@@Base+0x7ca0>
   266c0:	ldr	w0, [x0, #216]
   266c4:	bl	17c00 <__sanitizer_set_report_fd@@Base+0x4330>
   266c8:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   266cc:	str	x0, [x1, #1024]
   266d0:	ret
   266d4:	nop
   266d8:	stp	x19, x20, [sp, #-48]!
   266dc:	adrp	x6, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   266e0:	add	x6, x6, #0x3d0
   266e4:	add	x5, x6, #0x38
   266e8:	mov	x19, x0
   266ec:	mov	w20, w1
   266f0:	stp	x21, x22, [sp, #16]
   266f4:	mov	x21, x2
   266f8:	mov	x22, x3
   266fc:	stp	x23, x30, [sp, #32]
   26700:	mov	x23, x4
   26704:	ldxr	w7, [x5]
   26708:	add	w8, w7, #0x1
   2670c:	stlxr	w9, w8, [x5]
   26710:	cbnz	w9, 26704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x717c>
   26714:	dmb	ish
   26718:	cmp	w7, #0xa
   2671c:	b.hi	26750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x71c8>  // b.pmore
   26720:	ldr	x5, [x6, #48]
   26724:	cbz	x5, 2672c <__sanitizer_get_module_and_offset_for_pc@@Base+0x71a4>
   26728:	blr	x5
   2672c:	mov	x5, x23
   26730:	mov	x4, x22
   26734:	mov	x3, x21
   26738:	mov	w2, w20
   2673c:	mov	x1, x19
   26740:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26744:	add	x0, x0, #0x1e0
   26748:	bl	1cd78 <OnPrint@@Base+0x398>
   2674c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26750:	mov	w0, #0x2                   	// #2
   26754:	bl	1b558 <__sanitizer_set_report_fd@@Base+0x7c88>
   26758:	brk	#0x3e8
   2675c:	nop

0000000000026760 <__sanitizer_set_death_callback@@Base>:
   26760:	adrp	x1, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   26764:	str	x0, [x1, #1016]
   26768:	ret
   2676c:	nop
   26770:	stp	x19, x20, [sp, #-32]!
   26774:	mov	x19, x0
   26778:	ldr	x0, [x0, #160]
   2677c:	str	x30, [sp, #16]
   26780:	cbnz	x0, 267b4 <__sanitizer_set_death_callback@@Base+0x54>
   26784:	dup	v0.2d, x1
   26788:	str	xzr, [x1, #128]
   2678c:	mov	x1, #0x1                   	// #1
   26790:	mov	x2, x1
   26794:	str	x1, [x19, #160]
   26798:	ldr	w1, [x19, #12]
   2679c:	stur	q0, [x19, #168]
   267a0:	cmp	x2, x1
   267a4:	b.hi	267d8 <__sanitizer_set_death_callback@@Base+0x78>  // b.pmore
   267a8:	ldr	x30, [sp, #16]
   267ac:	ldp	x19, x20, [sp], #32
   267b0:	ret
   267b4:	str	xzr, [x1, #128]
   267b8:	add	x2, x0, #0x1
   267bc:	ldr	x4, [x19, #176]
   267c0:	str	x1, [x4, #128]
   267c4:	str	x2, [x19, #160]
   267c8:	str	x1, [x19, #176]
   267cc:	ldr	w1, [x19, #12]
   267d0:	cmp	x2, x1
   267d4:	b.ls	267a8 <__sanitizer_set_death_callback@@Base+0x48>  // b.plast
   267d8:	ldr	x20, [x19, #168]
   267dc:	add	x2, x19, #0xa0
   267e0:	ldr	x1, [x20, #128]
   267e4:	str	x1, [x2, #8]
   267e8:	cbz	x1, 2688c <__sanitizer_set_death_callback@@Base+0x12c>
   267ec:	ldr	w3, [x20, #112]
   267f0:	str	x0, [x19, #160]
   267f4:	cmp	x3, #0x4
   267f8:	b.ne	268a0 <__sanitizer_set_death_callback@@Base+0x140>  // b.any
   267fc:	strb	wzr, [x20, #48]
   26800:	str	wzr, [x20, #112]
   26804:	dmb	ish
   26808:	str	wzr, [x20, #136]
   2680c:	ldr	x1, [x20]
   26810:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26814:	add	x0, x0, #0x9d0
   26818:	ldr	x1, [x1, #40]
   2681c:	cmp	x1, x0
   26820:	b.ne	26894 <__sanitizer_set_death_callback@@Base+0x134>  // b.any
   26824:	ldr	w0, [x20, #24]
   26828:	add	w0, w0, #0x1
   2682c:	str	w0, [x20, #24]
   26830:	ldr	w1, [x19, #16]
   26834:	cmp	w1, #0x0
   26838:	ccmp	w0, w1, #0x0, ne  // ne = any
   2683c:	b.cs	267a8 <__sanitizer_set_death_callback@@Base+0x48>  // b.hs, b.nlast
   26840:	ldr	x0, [x19, #184]
   26844:	cbnz	x0, 26868 <__sanitizer_set_death_callback@@Base+0x108>
   26848:	dup	v0.2d, x20
   2684c:	str	xzr, [x20, #128]
   26850:	mov	x0, #0x1                   	// #1
   26854:	str	x0, [x19, #184]
   26858:	ldr	x30, [sp, #16]
   2685c:	str	q0, [x19, #192]
   26860:	ldp	x19, x20, [sp], #32
   26864:	ret
   26868:	str	xzr, [x20, #128]
   2686c:	add	x0, x0, #0x1
   26870:	ldr	x30, [sp, #16]
   26874:	ldr	x2, [x19, #200]
   26878:	str	x20, [x2, #128]
   2687c:	str	x0, [x19, #184]
   26880:	str	x20, [x19, #200]
   26884:	ldp	x19, x20, [sp], #32
   26888:	ret
   2688c:	str	xzr, [x2, #16]
   26890:	b	267ec <__sanitizer_set_death_callback@@Base+0x8c>
   26894:	mov	x0, x20
   26898:	blr	x1
   2689c:	b	26824 <__sanitizer_set_death_callback@@Base+0xc4>
   268a0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   268a4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   268a8:	add	x2, x2, #0x210
   268ac:	add	x0, x0, #0x240
   268b0:	mov	x4, #0x4                   	// #4
   268b4:	mov	w1, #0x143                 	// #323
   268b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   268bc:	nop
   268c0:	adrp	x2, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   268c4:	add	x2, x2, #0xf98
   268c8:	str	x2, [x0]
   268cc:	str	w1, [x0, #8]
   268d0:	str	xzr, [x0, #16]
   268d4:	str	wzr, [x0, #24]
   268d8:	stp	xzr, xzr, [x0, #32]
   268dc:	strb	wzr, [x0, #48]
   268e0:	str	wzr, [x0, #112]
   268e4:	strh	wzr, [x0, #116]
   268e8:	str	wzr, [x0, #120]
   268ec:	str	xzr, [x0, #128]
   268f0:	dmb	ish
   268f4:	str	wzr, [x0, #136]
   268f8:	ret
   268fc:	nop
   26900:	str	x30, [sp, #-16]!
   26904:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   26908:	add	x1, x1, #0xf98
   2690c:	str	x1, [x0]
   26910:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26914:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x1b10>
   26918:	add	x0, x3, #0x240
   2691c:	add	x2, x2, #0xe00
   26920:	mov	x4, #0x0                   	// #0
   26924:	mov	x3, #0x0                   	// #0
   26928:	mov	w1, #0x1b                  	// #27
   2692c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26930:	strb	wzr, [x0, #48]
   26934:	cbz	x1, 26958 <__sanitizer_set_death_callback@@Base+0x1f8>
   26938:	stp	x19, x30, [sp, #-16]!
   2693c:	mov	x19, x0
   26940:	mov	x2, #0x40                  	// #64
   26944:	add	x0, x0, #0x30
   26948:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   2694c:	strb	wzr, [x19, #111]
   26950:	ldp	x19, x30, [sp], #16
   26954:	ret
   26958:	ret
   2695c:	nop
   26960:	ldr	w2, [x0, #112]
   26964:	sub	w2, w2, #0x2
   26968:	cmp	w2, #0x1
   2696c:	b.hi	269a0 <__sanitizer_set_death_callback@@Base+0x240>  // b.pmore
   26970:	ldr	x3, [x0]
   26974:	adrp	x2, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26978:	add	x1, x2, #0x9a8
   2697c:	mov	w4, #0x4                   	// #4
   26980:	str	xzr, [x0, #40]
   26984:	ldr	x2, [x3]
   26988:	str	w4, [x0, #112]
   2698c:	cmp	x2, x1
   26990:	b.ne	26998 <__sanitizer_set_death_callback@@Base+0x238>  // b.any
   26994:	ret
   26998:	mov	x16, x2
   2699c:	br	x16
   269a0:	str	x30, [sp, #-16]!
   269a4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   269a8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   269ac:	add	x2, x2, #0x288
   269b0:	add	x0, x0, #0x240
   269b4:	mov	x4, #0x0                   	// #0
   269b8:	mov	x3, #0x0                   	// #0
   269bc:	mov	w1, #0x27                  	// #39
   269c0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   269c4:	nop
   269c8:	dmb	ish
   269cc:	mov	w1, #0x1                   	// #1
   269d0:	str	w1, [x0, #136]
   269d4:	ret
   269d8:	ldr	w0, [x0, #136]
   269dc:	dmb	ish
   269e0:	cmp	w0, #0x0
   269e4:	cset	w0, ne  // ne = any
   269e8:	ret
   269ec:	nop
   269f0:	ldrb	w3, [x0, #116]
   269f4:	str	x30, [sp, #-16]!
   269f8:	cbnz	w3, 26a40 <__sanitizer_set_death_callback@@Base+0x2e0>
   269fc:	ldr	w4, [x0, #112]
   26a00:	cmp	x4, #0x3
   26a04:	b.ne	26a60 <__sanitizer_set_death_callback@@Base+0x300>  // b.any
   26a08:	ldr	x4, [x0]
   26a0c:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26a10:	add	x2, x3, #0x9b0
   26a14:	mov	w5, #0x4                   	// #4
   26a18:	str	xzr, [x0, #40]
   26a1c:	ldr	x3, [x4, #8]
   26a20:	str	w5, [x0, #112]
   26a24:	cmp	x3, x2
   26a28:	b.ne	26a34 <__sanitizer_set_death_callback@@Base+0x2d4>  // b.any
   26a2c:	ldr	x30, [sp], #16
   26a30:	ret
   26a34:	ldr	x30, [sp], #16
   26a38:	mov	x16, x3
   26a3c:	br	x16
   26a40:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26a44:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26a48:	add	x2, x2, #0x2d8
   26a4c:	add	x0, x0, #0x240
   26a50:	mov	x4, #0x1                   	// #1
   26a54:	mov	x3, #0x0                   	// #0
   26a58:	mov	w1, #0x38                  	// #56
   26a5c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26a60:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26a64:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26a68:	add	x2, x2, #0x2f8
   26a6c:	add	x0, x0, #0x240
   26a70:	mov	x3, #0x3                   	// #3
   26a74:	mov	w1, #0x39                  	// #57
   26a78:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26a7c:	nop
   26a80:	ldrb	w1, [x0, #116]
   26a84:	cbz	w1, 26ab0 <__sanitizer_set_death_callback@@Base+0x350>
   26a88:	ldr	w1, [x0, #112]
   26a8c:	cmp	w1, #0x1
   26a90:	b.eq	26ab0 <__sanitizer_set_death_callback@@Base+0x350>  // b.none
   26a94:	ldr	x2, [x0]
   26a98:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26a9c:	add	x1, x1, #0x9b8
   26aa0:	ldr	x2, [x2, #16]
   26aa4:	cmp	x2, x1
   26aa8:	b.ne	26ad0 <__sanitizer_set_death_callback@@Base+0x370>  // b.any
   26aac:	ret
   26ab0:	ldr	x2, [x0]
   26ab4:	mov	w1, #0x3                   	// #3
   26ab8:	str	w1, [x0, #112]
   26abc:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26ac0:	add	x1, x1, #0x9b8
   26ac4:	ldr	x2, [x2, #16]
   26ac8:	cmp	x2, x1
   26acc:	b.eq	26aac <__sanitizer_set_death_callback@@Base+0x34c>  // b.none
   26ad0:	mov	x16, x2
   26ad4:	br	x16
   26ad8:	ldr	x6, [x0]
   26adc:	strb	w2, [x0, #117]
   26ae0:	mov	w7, #0x2                   	// #2
   26ae4:	adrp	x5, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26ae8:	add	x5, x5, #0x9c0
   26aec:	ldr	x2, [x6, #24]
   26af0:	str	x1, [x0, #32]
   26af4:	str	w7, [x0, #112]
   26af8:	cmp	x2, x5
   26afc:	b.ne	26b04 <__sanitizer_set_death_callback@@Base+0x3a4>  // b.any
   26b00:	ret
   26b04:	mov	x1, x3
   26b08:	mov	x16, x2
   26b0c:	br	x16
   26b10:	ldr	w6, [x0, #8]
   26b14:	mov	w7, #0x1                   	// #1
   26b18:	str	x2, [x0, #16]
   26b1c:	str	x1, [x0, #40]
   26b20:	str	w7, [x0, #112]
   26b24:	strb	w3, [x0, #116]
   26b28:	cbz	w6, 26b30 <__sanitizer_set_death_callback@@Base+0x3d0>
   26b2c:	str	w4, [x0, #120]
   26b30:	ldr	x1, [x0]
   26b34:	adrp	x2, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26b38:	add	x2, x2, #0x9c8
   26b3c:	ldr	x3, [x1, #32]
   26b40:	cmp	x3, x2
   26b44:	b.ne	26b4c <__sanitizer_set_death_callback@@Base+0x3ec>  // b.any
   26b48:	ret
   26b4c:	mov	x1, x5
   26b50:	mov	x16, x3
   26b54:	br	x16
   26b58:	strb	wzr, [x0, #48]
   26b5c:	str	wzr, [x0, #112]
   26b60:	dmb	ish
   26b64:	str	wzr, [x0, #136]
   26b68:	ldr	x2, [x0]
   26b6c:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26b70:	add	x1, x1, #0x9d0
   26b74:	ldr	x2, [x2, #40]
   26b78:	cmp	x2, x1
   26b7c:	b.ne	26b84 <__sanitizer_set_death_callback@@Base+0x424>  // b.any
   26b80:	ret
   26b84:	mov	x16, x2
   26b88:	br	x16
   26b8c:	nop
   26b90:	stp	x19, x30, [sp, #-16]!
   26b94:	mov	x19, x0
   26b98:	add	x0, x0, #0x18
   26b9c:	str	x1, [x19]
   26ba0:	stp	w2, w3, [x19, #8]
   26ba4:	str	w4, [x19, #16]
   26ba8:	bl	17f20 <__sanitizer_set_report_fd@@Base+0x4650>
   26bac:	str	wzr, [x19, #112]
   26bb0:	movi	v0.4s, #0x0
   26bb4:	ldr	w0, [x19, #8]
   26bb8:	mov	w2, #0x0                   	// #0
   26bbc:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26bc0:	add	x1, x1, #0x320
   26bc4:	lsl	x0, x0, #3
   26bc8:	stur	q0, [x19, #120]
   26bcc:	stur	q0, [x19, #136]
   26bd0:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   26bd4:	movi	v0.4s, #0x0
   26bd8:	stp	x0, xzr, [x19, #152]
   26bdc:	str	xzr, [x19, #184]
   26be0:	stur	q0, [x19, #168]
   26be4:	str	q0, [x19, #192]
   26be8:	ldp	x19, x30, [sp], #16
   26bec:	ret
   26bf0:	stp	x19, x20, [sp, #-48]!
   26bf4:	mov	x19, x0
   26bf8:	mov	x20, x3
   26bfc:	stp	x23, x30, [sp, #32]
   26c00:	add	x23, x0, #0x18
   26c04:	mov	x0, x23
   26c08:	stp	x21, x22, [sp, #16]
   26c0c:	mov	x22, x1
   26c10:	mov	x21, x2
   26c14:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   26c18:	cbz	x22, 26c24 <__sanitizer_set_death_callback@@Base+0x4c4>
   26c1c:	ldr	w0, [x19, #112]
   26c20:	str	x0, [x22]
   26c24:	cbz	x21, 26c30 <__sanitizer_set_death_callback@@Base+0x4d0>
   26c28:	ldr	x0, [x19, #144]
   26c2c:	str	x0, [x21]
   26c30:	cbz	x20, 26c3c <__sanitizer_set_death_callback@@Base+0x4dc>
   26c34:	ldr	x0, [x19, #128]
   26c38:	str	x0, [x20]
   26c3c:	mov	x0, x23
   26c40:	ldp	x21, x22, [sp, #16]
   26c44:	ldp	x23, x30, [sp, #32]
   26c48:	ldp	x19, x20, [sp], #48
   26c4c:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26c50:	stp	x19, x20, [sp, #-32]!
   26c54:	mov	x19, x0
   26c58:	add	x20, x0, #0x18
   26c5c:	mov	x0, x20
   26c60:	str	x30, [sp, #16]
   26c64:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   26c68:	ldr	x19, [x19, #136]
   26c6c:	mov	x0, x20
   26c70:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26c74:	mov	x0, x19
   26c78:	ldr	x30, [sp, #16]
   26c7c:	ldp	x19, x20, [sp], #32
   26c80:	ret
   26c84:	nop
   26c88:	stp	x19, x20, [sp, #-64]!
   26c8c:	mov	x19, x0
   26c90:	stp	x25, x30, [sp, #48]
   26c94:	add	x25, x0, #0x18
   26c98:	mov	x0, x25
   26c9c:	stp	x21, x22, [sp, #16]
   26ca0:	mov	x21, x1
   26ca4:	mov	w22, w3
   26ca8:	stp	x23, x24, [sp, #32]
   26cac:	mov	x23, x4
   26cb0:	and	w24, w2, #0xff
   26cb4:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   26cb8:	ldr	x1, [x19, #184]
   26cbc:	cbz	x1, 26d88 <__sanitizer_set_death_callback@@Base+0x628>
   26cc0:	ldr	x0, [x19, #192]
   26cc4:	ldr	x2, [x0, #128]
   26cc8:	str	x2, [x19, #192]
   26ccc:	cbz	x2, 26ddc <__sanitizer_set_death_callback@@Base+0x67c>
   26cd0:	ldr	w20, [x0, #8]
   26cd4:	sub	x1, x1, #0x1
   26cd8:	str	x1, [x19, #184]
   26cdc:	mov	w3, w20
   26ce0:	mov	x1, #0xffffffff            	// #4294967295
   26ce4:	cmp	x3, x1
   26ce8:	b.eq	26e0c <__sanitizer_set_death_callback@@Base+0x6ac>  // b.none
   26cec:	ldr	w4, [x19, #8]
   26cf0:	cmp	x3, x4
   26cf4:	b.cs	26e28 <__sanitizer_set_death_callback@@Base+0x6c8>  // b.hs, b.nlast
   26cf8:	ldr	w3, [x0, #112]
   26cfc:	cbnz	x3, 26e40 <__sanitizer_set_death_callback@@Base+0x6e0>
   26d00:	ldp	x2, x1, [x19, #128]
   26d04:	add	x3, x2, #0x1
   26d08:	str	x3, [x19, #128]
   26d0c:	cmp	x3, x1
   26d10:	b.ls	26d24 <__sanitizer_set_death_callback@@Base+0x5c4>  // b.plast
   26d14:	add	x4, x1, #0x1
   26d18:	str	x4, [x19, #136]
   26d1c:	cmp	x2, x1
   26d20:	b.ne	26e5c <__sanitizer_set_death_callback@@Base+0x6fc>  // b.any
   26d24:	ldr	x1, [x19, #120]
   26d28:	mov	w3, #0x1                   	// #1
   26d2c:	ldr	w2, [x0, #8]
   26d30:	add	x4, x1, #0x1
   26d34:	str	x4, [x19, #120]
   26d38:	str	x1, [x0, #16]
   26d3c:	str	x21, [x0, #40]
   26d40:	str	w3, [x0, #112]
   26d44:	strb	w24, [x0, #116]
   26d48:	cbz	w2, 26d50 <__sanitizer_set_death_callback@@Base+0x5f0>
   26d4c:	str	w22, [x0, #120]
   26d50:	ldr	x2, [x0]
   26d54:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   26d58:	add	x1, x1, #0x9c8
   26d5c:	ldr	x2, [x2, #32]
   26d60:	cmp	x2, x1
   26d64:	b.ne	26de4 <__sanitizer_set_death_callback@@Base+0x684>  // b.any
   26d68:	mov	x0, x25
   26d6c:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26d70:	mov	w0, w20
   26d74:	ldp	x21, x22, [sp, #16]
   26d78:	ldp	x23, x24, [sp, #32]
   26d7c:	ldp	x25, x30, [sp, #48]
   26d80:	ldp	x19, x20, [sp], #64
   26d84:	ret
   26d88:	ldr	w2, [x19, #8]
   26d8c:	ldr	w20, [x19, #112]
   26d90:	cmp	w20, w2
   26d94:	b.cs	26e74 <__sanitizer_set_death_callback@@Base+0x714>  // b.hs, b.nlast
   26d98:	ldr	x1, [x19]
   26d9c:	add	w0, w20, #0x1
   26da0:	str	w0, [x19, #112]
   26da4:	mov	w0, w20
   26da8:	blr	x1
   26dac:	ldr	x1, [x19, #152]
   26db0:	mov	w3, w20
   26db4:	str	x0, [x1, x3, lsl #3]
   26db8:	cbnz	x0, 26ce0 <__sanitizer_set_death_callback@@Base+0x580>
   26dbc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26dc0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26dc4:	add	x2, x2, #0x360
   26dc8:	add	x0, x0, #0x240
   26dcc:	mov	x4, #0x0                   	// #0
   26dd0:	mov	x3, #0x0                   	// #0
   26dd4:	mov	w1, #0x9c                  	// #156
   26dd8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26ddc:	str	xzr, [x19, #200]
   26de0:	b	26cd0 <__sanitizer_set_death_callback@@Base+0x570>
   26de4:	mov	x1, x23
   26de8:	blr	x2
   26dec:	mov	x0, x25
   26df0:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26df4:	mov	w0, w20
   26df8:	ldp	x21, x22, [sp, #16]
   26dfc:	ldp	x23, x24, [sp, #32]
   26e00:	ldp	x25, x30, [sp, #48]
   26e04:	ldp	x19, x20, [sp], #64
   26e08:	ret
   26e0c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e10:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e14:	add	x2, x2, #0x378
   26e18:	add	x0, x0, #0x240
   26e1c:	mov	x4, x3
   26e20:	mov	w1, #0x9d                  	// #157
   26e24:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26e28:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e2c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e30:	add	x2, x2, #0x398
   26e34:	add	x0, x0, #0x240
   26e38:	mov	w1, #0x9e                  	// #158
   26e3c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26e40:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e44:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e48:	add	x2, x2, #0x3b8
   26e4c:	add	x0, x0, #0x240
   26e50:	mov	x4, #0x0                   	// #0
   26e54:	mov	w1, #0x9f                  	// #159
   26e58:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26e5c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e60:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e64:	add	x2, x2, #0x3e8
   26e68:	add	x0, x0, #0x240
   26e6c:	mov	w1, #0xa3                  	// #163
   26e70:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   26e74:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   26e78:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   26e7c:	add	x0, x0, #0x330
   26e80:	ldr	x1, [x1, #4024]
   26e84:	ldr	x1, [x1]
   26e88:	bl	1cd78 <OnPrint@@Base+0x398>
   26e8c:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   26e90:	stp	x19, x20, [sp, #-48]!
   26e94:	mov	x20, x0
   26e98:	add	x0, x0, #0x18
   26e9c:	stp	x21, x22, [sp, #16]
   26ea0:	mov	x22, x1
   26ea4:	mov	x21, x2
   26ea8:	str	x30, [sp, #32]
   26eac:	bl	18038 <__sanitizer_set_report_fd@@Base+0x4768>
   26eb0:	ldr	w3, [x20, #112]
   26eb4:	cbz	w3, 26efc <__sanitizer_set_death_callback@@Base+0x79c>
   26eb8:	ldr	x4, [x20, #152]
   26ebc:	mov	w19, #0x0                   	// #0
   26ec0:	ldr	x0, [x4, w19, uxtw #3]
   26ec4:	mov	x1, x21
   26ec8:	cbz	x0, 26ef0 <__sanitizer_set_death_callback@@Base+0x790>
   26ecc:	blr	x22
   26ed0:	add	w19, w19, #0x1
   26ed4:	ldr	w3, [x20, #112]
   26ed8:	cmp	w3, w19
   26edc:	b.ls	26efc <__sanitizer_set_death_callback@@Base+0x79c>  // b.plast
   26ee0:	ldr	x4, [x20, #152]
   26ee4:	mov	x1, x21
   26ee8:	ldr	x0, [x4, w19, uxtw #3]
   26eec:	cbnz	x0, 26ecc <__sanitizer_set_death_callback@@Base+0x76c>
   26ef0:	add	w19, w19, #0x1
   26ef4:	cmp	w19, w3
   26ef8:	b.cc	26ec0 <__sanitizer_set_death_callback@@Base+0x760>  // b.lo, b.ul, b.last
   26efc:	ldp	x21, x22, [sp, #16]
   26f00:	ldr	x30, [sp, #32]
   26f04:	ldp	x19, x20, [sp], #48
   26f08:	ret
   26f0c:	nop
   26f10:	stp	x19, x20, [sp, #-64]!
   26f14:	mov	w19, #0x0                   	// #0
   26f18:	stp	x21, x22, [sp, #16]
   26f1c:	mov	x21, x0
   26f20:	mov	x22, x2
   26f24:	stp	x23, x24, [sp, #32]
   26f28:	add	x24, x0, #0x18
   26f2c:	mov	x23, x1
   26f30:	mov	x0, x24
   26f34:	str	x30, [sp, #48]
   26f38:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   26f3c:	ldr	w3, [x21, #112]
   26f40:	cbz	w3, 26f78 <__sanitizer_set_death_callback@@Base+0x818>
   26f44:	nop
   26f48:	ldr	x0, [x21, #152]
   26f4c:	mov	x1, x22
   26f50:	ldr	x20, [x0, w19, uxtw #3]
   26f54:	mov	x0, x20
   26f58:	cbz	x20, 26f6c <__sanitizer_set_death_callback@@Base+0x80c>
   26f5c:	blr	x23
   26f60:	tst	w0, #0xff
   26f64:	b.ne	26f9c <__sanitizer_set_death_callback@@Base+0x83c>  // b.any
   26f68:	ldr	w3, [x21, #112]
   26f6c:	add	w19, w19, #0x1
   26f70:	cmp	w19, w3
   26f74:	b.cc	26f48 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.lo, b.ul, b.last
   26f78:	mov	x0, x24
   26f7c:	mov	w19, #0xffffffff            	// #-1
   26f80:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26f84:	mov	w0, w19
   26f88:	ldp	x21, x22, [sp, #16]
   26f8c:	ldp	x23, x24, [sp, #32]
   26f90:	ldr	x30, [sp, #48]
   26f94:	ldp	x19, x20, [sp], #64
   26f98:	ret
   26f9c:	ldr	w19, [x20, #8]
   26fa0:	mov	x0, x24
   26fa4:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   26fa8:	mov	w0, w19
   26fac:	ldp	x21, x22, [sp, #16]
   26fb0:	ldp	x23, x24, [sp, #32]
   26fb4:	ldr	x30, [sp, #48]
   26fb8:	ldp	x19, x20, [sp], #64
   26fbc:	ret
   26fc0:	stp	x19, x20, [sp, #-48]!
   26fc4:	mov	w19, #0x0                   	// #0
   26fc8:	stp	x21, x22, [sp, #16]
   26fcc:	mov	x21, x0
   26fd0:	mov	x22, x2
   26fd4:	add	x0, x0, #0x18
   26fd8:	stp	x23, x30, [sp, #32]
   26fdc:	mov	x23, x1
   26fe0:	bl	18038 <__sanitizer_set_report_fd@@Base+0x4768>
   26fe4:	ldr	w3, [x21, #112]
   26fe8:	cbz	w3, 27020 <__sanitizer_set_death_callback@@Base+0x8c0>
   26fec:	nop
   26ff0:	ldr	x0, [x21, #152]
   26ff4:	mov	x1, x22
   26ff8:	ldr	x20, [x0, w19, uxtw #3]
   26ffc:	add	w19, w19, #0x1
   27000:	mov	x0, x20
   27004:	cbz	x20, 27018 <__sanitizer_set_death_callback@@Base+0x8b8>
   27008:	blr	x23
   2700c:	tst	w0, #0xff
   27010:	b.ne	27024 <__sanitizer_set_death_callback@@Base+0x8c4>  // b.any
   27014:	ldr	w3, [x21, #112]
   27018:	cmp	w19, w3
   2701c:	b.cc	26ff0 <__sanitizer_set_death_callback@@Base+0x890>  // b.lo, b.ul, b.last
   27020:	mov	x20, #0x0                   	// #0
   27024:	mov	x0, x20
   27028:	ldp	x21, x22, [sp, #16]
   2702c:	ldp	x23, x30, [sp, #32]
   27030:	ldp	x19, x20, [sp], #48
   27034:	ret
   27038:	stp	x19, x20, [sp, #-32]!
   2703c:	mov	x19, x0
   27040:	mov	x20, x1
   27044:	add	x0, x0, #0x18
   27048:	str	x30, [sp, #16]
   2704c:	bl	18038 <__sanitizer_set_report_fd@@Base+0x4768>
   27050:	ldr	w1, [x19, #112]
   27054:	cbz	w1, 2709c <__sanitizer_set_death_callback@@Base+0x93c>
   27058:	mov	x2, #0x0                   	// #0
   2705c:	ldr	x4, [x19, #152]
   27060:	b	2706c <__sanitizer_set_death_callback@@Base+0x90c>
   27064:	cmp	w1, w2
   27068:	b.ls	2709c <__sanitizer_set_death_callback@@Base+0x93c>  // b.plast
   2706c:	ldr	x0, [x4, x2, lsl #3]
   27070:	add	x2, x2, #0x1
   27074:	cbz	x0, 27064 <__sanitizer_set_death_callback@@Base+0x904>
   27078:	ldr	x3, [x0, #32]
   2707c:	cmp	x20, x3
   27080:	b.ne	27064 <__sanitizer_set_death_callback@@Base+0x904>  // b.any
   27084:	ldr	w3, [x0, #112]
   27088:	tst	w3, #0xfffffffb
   2708c:	b.eq	27064 <__sanitizer_set_death_callback@@Base+0x904>  // b.none
   27090:	ldr	x30, [sp, #16]
   27094:	ldp	x19, x20, [sp], #32
   27098:	ret
   2709c:	mov	x0, #0x0                   	// #0
   270a0:	ldr	x30, [sp, #16]
   270a4:	ldp	x19, x20, [sp], #32
   270a8:	ret
   270ac:	nop
   270b0:	stp	x19, x20, [sp, #-48]!
   270b4:	mov	x19, x0
   270b8:	mov	w20, w1
   270bc:	stp	x21, x22, [sp, #16]
   270c0:	add	x22, x0, #0x18
   270c4:	mov	x21, x2
   270c8:	mov	x0, x22
   270cc:	str	x30, [sp, #32]
   270d0:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   270d4:	ldr	w4, [x19, #112]
   270d8:	mov	w3, w20
   270dc:	cmp	x4, w20, uxtw
   270e0:	b.ls	2712c <__sanitizer_set_death_callback@@Base+0x9cc>  // b.plast
   270e4:	ldr	x0, [x19, #152]
   270e8:	ldr	x19, [x0, x3, lsl #3]
   270ec:	cbz	x19, 27144 <__sanitizer_set_death_callback@@Base+0x9e4>
   270f0:	ldr	w4, [x19, #112]
   270f4:	cmp	x4, #0x2
   270f8:	b.ne	27164 <__sanitizer_set_death_callback@@Base+0xa04>  // b.any
   270fc:	strb	wzr, [x19, #48]
   27100:	cbz	x21, 27118 <__sanitizer_set_death_callback@@Base+0x9b8>
   27104:	mov	x1, x21
   27108:	add	x0, x19, #0x30
   2710c:	mov	x2, #0x40                  	// #64
   27110:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   27114:	strb	wzr, [x19, #111]
   27118:	mov	x0, x22
   2711c:	ldp	x21, x22, [sp, #16]
   27120:	ldr	x30, [sp, #32]
   27124:	ldp	x19, x20, [sp], #48
   27128:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   2712c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27130:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27134:	add	x2, x2, #0x418
   27138:	add	x0, x0, #0x240
   2713c:	mov	w1, #0xd7                  	// #215
   27140:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27144:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27148:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2714c:	add	x2, x2, #0x360
   27150:	add	x0, x0, #0x240
   27154:	mov	x4, #0x0                   	// #0
   27158:	mov	x3, #0x0                   	// #0
   2715c:	mov	w1, #0xd9                  	// #217
   27160:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27164:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27168:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2716c:	add	x2, x2, #0x438
   27170:	add	x0, x0, #0x240
   27174:	mov	x3, #0x2                   	// #2
   27178:	mov	w1, #0xda                  	// #218
   2717c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27180:	stp	x19, x20, [sp, #-48]!
   27184:	mov	x19, x0
   27188:	mov	x20, x1
   2718c:	stp	x21, x22, [sp, #16]
   27190:	add	x22, x0, #0x18
   27194:	mov	x21, x2
   27198:	mov	x0, x22
   2719c:	str	x30, [sp, #32]
   271a0:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   271a4:	ldr	w4, [x19, #112]
   271a8:	cbz	w4, 271fc <__sanitizer_set_death_callback@@Base+0xa9c>
   271ac:	mov	x0, #0x0                   	// #0
   271b0:	ldr	x5, [x19, #152]
   271b4:	b	271c0 <__sanitizer_set_death_callback@@Base+0xa60>
   271b8:	cmp	w4, w0
   271bc:	b.ls	271fc <__sanitizer_set_death_callback@@Base+0xa9c>  // b.plast
   271c0:	ldr	x19, [x5, x0, lsl #3]
   271c4:	add	x0, x0, #0x1
   271c8:	cbz	x19, 271b8 <__sanitizer_set_death_callback@@Base+0xa58>
   271cc:	ldr	x3, [x19, #40]
   271d0:	cmp	x3, x20
   271d4:	b.ne	271b8 <__sanitizer_set_death_callback@@Base+0xa58>  // b.any
   271d8:	ldr	w1, [x19, #112]
   271dc:	cbz	w1, 271b8 <__sanitizer_set_death_callback@@Base+0xa58>
   271e0:	strb	wzr, [x19, #48]
   271e4:	cbz	x21, 271fc <__sanitizer_set_death_callback@@Base+0xa9c>
   271e8:	mov	x1, x21
   271ec:	add	x0, x19, #0x30
   271f0:	mov	x2, #0x40                  	// #64
   271f4:	bl	16d38 <__sanitizer_set_report_fd@@Base+0x3468>
   271f8:	strb	wzr, [x19, #111]
   271fc:	mov	x0, x22
   27200:	ldp	x21, x22, [sp, #16]
   27204:	ldr	x30, [sp, #32]
   27208:	ldp	x19, x20, [sp], #48
   2720c:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   27210:	stp	x19, x20, [sp, #-48]!
   27214:	mov	x19, x0
   27218:	mov	w20, w1
   2721c:	stp	x21, x22, [sp, #16]
   27220:	add	x21, x0, #0x18
   27224:	mov	x22, x2
   27228:	mov	x0, x21
   2722c:	str	x30, [sp, #32]
   27230:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   27234:	ldr	w4, [x19, #112]
   27238:	mov	w3, w20
   2723c:	cmp	x4, w20, uxtw
   27240:	b.ls	27314 <__sanitizer_set_death_callback@@Base+0xbb4>  // b.plast
   27244:	ldr	x0, [x19, #152]
   27248:	ldr	x20, [x0, x3, lsl #3]
   2724c:	cbz	x20, 2732c <__sanitizer_set_death_callback@@Base+0xbcc>
   27250:	ldr	w1, [x20, #112]
   27254:	cbz	w1, 27294 <__sanitizer_set_death_callback@@Base+0xb34>
   27258:	ldr	x2, [x20]
   2725c:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   27260:	add	x0, x0, #0x9d8
   27264:	ldr	x2, [x2, #48]
   27268:	cmp	x2, x0
   2726c:	b.ne	272c0 <__sanitizer_set_death_callback@@Base+0xb60>  // b.any
   27270:	cmp	w1, #0x3
   27274:	b.eq	272d8 <__sanitizer_set_death_callback@@Base+0xb78>  // b.none
   27278:	mov	w0, #0x1                   	// #1
   2727c:	strb	w0, [x20, #116]
   27280:	mov	x0, x21
   27284:	ldp	x21, x22, [sp, #16]
   27288:	ldr	x30, [sp, #32]
   2728c:	ldp	x19, x20, [sp], #48
   27290:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   27294:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27298:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2729c:	add	x0, x0, #0x480
   272a0:	ldr	x1, [x1, #4024]
   272a4:	ldr	x1, [x1]
   272a8:	bl	1cd78 <OnPrint@@Base+0x398>
   272ac:	mov	x0, x21
   272b0:	ldp	x21, x22, [sp, #16]
   272b4:	ldr	x30, [sp, #32]
   272b8:	ldp	x19, x20, [sp], #48
   272bc:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   272c0:	mov	x1, x22
   272c4:	mov	x0, x20
   272c8:	blr	x2
   272cc:	ldr	w1, [x20, #112]
   272d0:	cmp	w1, #0x3
   272d4:	b.ne	27278 <__sanitizer_set_death_callback@@Base+0xb18>  // b.any
   272d8:	ldr	x1, [x20]
   272dc:	mov	w2, #0x4                   	// #4
   272e0:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   272e4:	add	x0, x0, #0x9a8
   272e8:	ldr	x1, [x1]
   272ec:	str	xzr, [x20, #40]
   272f0:	str	w2, [x20, #112]
   272f4:	cmp	x1, x0
   272f8:	b.ne	2734c <__sanitizer_set_death_callback@@Base+0xbec>  // b.any
   272fc:	ldr	w0, [x20, #8]
   27300:	cbz	w0, 27280 <__sanitizer_set_death_callback@@Base+0xb20>
   27304:	mov	x1, x20
   27308:	mov	x0, x19
   2730c:	bl	26770 <__sanitizer_set_death_callback@@Base+0x10>
   27310:	b	27280 <__sanitizer_set_death_callback@@Base+0xb20>
   27314:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27318:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2731c:	add	x2, x2, #0x418
   27320:	add	x0, x0, #0x240
   27324:	mov	w1, #0xed                  	// #237
   27328:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2732c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27330:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27334:	add	x2, x2, #0x360
   27338:	add	x0, x0, #0x240
   2733c:	mov	x4, #0x0                   	// #0
   27340:	mov	x3, #0x0                   	// #0
   27344:	mov	w1, #0xef                  	// #239
   27348:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2734c:	mov	x0, x20
   27350:	blr	x1
   27354:	b	272fc <__sanitizer_set_death_callback@@Base+0xb9c>
   27358:	stp	x19, x20, [sp, #-64]!
   2735c:	mov	x20, x0
   27360:	stp	x21, x22, [sp, #16]
   27364:	add	x22, x0, #0x18
   27368:	ubfiz	x21, x1, #3, #32
   2736c:	mov	x0, x22
   27370:	stp	x23, x24, [sp, #32]
   27374:	mov	w23, w1
   27378:	mov	x24, x2
   2737c:	str	x30, [sp, #48]
   27380:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   27384:	ldr	w4, [x20, #112]
   27388:	cmp	x23, x4
   2738c:	b.cs	273d0 <__sanitizer_set_death_callback@@Base+0xc70>  // b.hs, b.nlast
   27390:	ldr	x0, [x20, #152]
   27394:	ldr	x19, [x0, x21]
   27398:	cbz	x19, 27450 <__sanitizer_set_death_callback@@Base+0xcf0>
   2739c:	ldr	w0, [x19, #112]
   273a0:	cbz	w0, 274bc <__sanitizer_set_death_callback@@Base+0xd5c>
   273a4:	ldr	w0, [x19, #136]
   273a8:	dmb	ish
   273ac:	cbnz	w0, 273ec <__sanitizer_set_death_callback@@Base+0xc8c>
   273b0:	mov	x0, x22
   273b4:	bl	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   273b8:	bl	17bf0 <__sanitizer_set_report_fd@@Base+0x4320>
   273bc:	mov	x0, x22
   273c0:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   273c4:	ldr	w4, [x20, #112]
   273c8:	cmp	x23, x4
   273cc:	b.cc	27390 <__sanitizer_set_death_callback@@Base+0xc30>  // b.lo, b.ul, b.last
   273d0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   273d4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   273d8:	mov	x3, x23
   273dc:	add	x2, x2, #0x418
   273e0:	add	x0, x0, #0x240
   273e4:	mov	w1, #0x102                 	// #258
   273e8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   273ec:	ldrb	w0, [x19, #116]
   273f0:	cbnz	w0, 27480 <__sanitizer_set_death_callback@@Base+0xd20>
   273f4:	ldr	w4, [x19, #112]
   273f8:	cmp	x4, #0x3
   273fc:	b.ne	274a0 <__sanitizer_set_death_callback@@Base+0xd40>  // b.any
   27400:	ldr	x1, [x19]
   27404:	mov	w2, #0x4                   	// #4
   27408:	str	w2, [x19, #112]
   2740c:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   27410:	str	xzr, [x19, #40]
   27414:	add	x0, x0, #0x9b0
   27418:	ldr	x2, [x1, #8]
   2741c:	cmp	x2, x0
   27420:	b.ne	27470 <__sanitizer_set_death_callback@@Base+0xd10>  // b.any
   27424:	ldr	w0, [x19, #8]
   27428:	cbz	w0, 27438 <__sanitizer_set_death_callback@@Base+0xcd8>
   2742c:	mov	x1, x19
   27430:	mov	x0, x20
   27434:	bl	26770 <__sanitizer_set_death_callback@@Base+0x10>
   27438:	mov	x0, x22
   2743c:	ldp	x21, x22, [sp, #16]
   27440:	ldp	x23, x24, [sp, #32]
   27444:	ldr	x30, [sp, #48]
   27448:	ldp	x19, x20, [sp], #64
   2744c:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   27450:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27454:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27458:	add	x2, x2, #0x360
   2745c:	add	x0, x0, #0x240
   27460:	mov	x4, #0x0                   	// #0
   27464:	mov	x3, #0x0                   	// #0
   27468:	mov	w1, #0x104                 	// #260
   2746c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27470:	mov	x1, x24
   27474:	mov	x0, x19
   27478:	blr	x2
   2747c:	b	27424 <__sanitizer_set_death_callback@@Base+0xcc4>
   27480:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27484:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27488:	add	x2, x2, #0x2d8
   2748c:	add	x0, x0, #0x240
   27490:	mov	x4, #0x1                   	// #1
   27494:	mov	x3, #0x0                   	// #0
   27498:	mov	w1, #0x38                  	// #56
   2749c:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   274a0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   274a4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   274a8:	add	x2, x2, #0x2f8
   274ac:	add	x0, x0, #0x240
   274b0:	mov	x3, #0x3                   	// #3
   274b4:	mov	w1, #0x39                  	// #57
   274b8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   274bc:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   274c0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   274c4:	add	x0, x0, #0x4a8
   274c8:	ldr	x1, [x1, #4024]
   274cc:	ldr	x1, [x1]
   274d0:	bl	1cd78 <OnPrint@@Base+0x398>
   274d4:	b	27438 <__sanitizer_set_death_callback@@Base+0xcd8>
   274d8:	stp	x19, x20, [sp, #-48]!
   274dc:	mov	x19, x0
   274e0:	mov	w20, w1
   274e4:	stp	x21, x22, [sp, #16]
   274e8:	add	x22, x0, #0x18
   274ec:	mov	x0, x22
   274f0:	str	x30, [sp, #32]
   274f4:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   274f8:	ldr	x0, [x19, #128]
   274fc:	cbz	x0, 2761c <__sanitizer_set_death_callback@@Base+0xebc>
   27500:	ldr	w4, [x19, #112]
   27504:	sub	x0, x0, #0x1
   27508:	str	x0, [x19, #128]
   2750c:	mov	w3, w20
   27510:	cmp	x4, w20, uxtw
   27514:	b.ls	2763c <__sanitizer_set_death_callback@@Base+0xedc>  // b.plast
   27518:	ldr	x0, [x19, #152]
   2751c:	ldr	x20, [x0, x3, lsl #3]
   27520:	cbz	x20, 27654 <__sanitizer_set_death_callback@@Base+0xef4>
   27524:	ldr	w0, [x20, #112]
   27528:	cmp	w0, #0x2
   2752c:	b.eq	27588 <__sanitizer_set_death_callback@@Base+0xe28>  // b.none
   27530:	cmp	w0, #0x1
   27534:	mov	w21, w0
   27538:	b.ne	27694 <__sanitizer_set_death_callback@@Base+0xf34>  // b.any
   2753c:	ldr	x1, [x20]
   27540:	mov	w0, #0x3                   	// #3
   27544:	adrp	x2, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   27548:	add	x2, x2, #0x9b8
   2754c:	ldr	x1, [x1, #16]
   27550:	str	w0, [x20, #112]
   27554:	cmp	x1, x2
   27558:	b.eq	275b8 <__sanitizer_set_death_callback@@Base+0xe58>  // b.none
   2755c:	mov	x0, x20
   27560:	blr	x1
   27564:	cbnz	w21, 27704 <__sanitizer_set_death_callback@@Base+0xfa4>
   27568:	dmb	ish
   2756c:	mov	w0, #0x1                   	// #1
   27570:	str	w0, [x20, #136]
   27574:	mov	x0, x22
   27578:	ldp	x21, x22, [sp, #16]
   2757c:	ldr	x30, [sp, #32]
   27580:	ldp	x19, x20, [sp], #48
   27584:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   27588:	ldr	x1, [x19, #144]
   2758c:	cbz	x1, 276c0 <__sanitizer_set_death_callback@@Base+0xf60>
   27590:	ldrb	w21, [x20, #116]
   27594:	sub	x1, x1, #0x1
   27598:	str	x1, [x19, #144]
   2759c:	cbz	w21, 276e0 <__sanitizer_set_death_callback@@Base+0xf80>
   275a0:	ldr	x1, [x20]
   275a4:	adrp	x2, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   275a8:	add	x2, x2, #0x9b8
   275ac:	ldr	x1, [x1, #16]
   275b0:	cmp	x1, x2
   275b4:	b.ne	2755c <__sanitizer_set_death_callback@@Base+0xdfc>  // b.any
   275b8:	sub	w0, w0, #0x2
   275bc:	cmp	w0, #0x1
   275c0:	b.hi	27674 <__sanitizer_set_death_callback@@Base+0xf14>  // b.pmore
   275c4:	ldr	x1, [x20]
   275c8:	mov	w2, #0x4                   	// #4
   275cc:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   275d0:	add	x0, x0, #0x9a8
   275d4:	ldr	x1, [x1]
   275d8:	str	xzr, [x20, #40]
   275dc:	str	w2, [x20, #112]
   275e0:	cmp	x1, x0
   275e4:	b.ne	276b4 <__sanitizer_set_death_callback@@Base+0xf54>  // b.any
   275e8:	ldr	w0, [x20, #8]
   275ec:	cbz	w0, 27568 <__sanitizer_set_death_callback@@Base+0xe08>
   275f0:	mov	x0, x19
   275f4:	mov	x1, x20
   275f8:	bl	26770 <__sanitizer_set_death_callback@@Base+0x10>
   275fc:	dmb	ish
   27600:	mov	w0, #0x1                   	// #1
   27604:	str	w0, [x20, #136]
   27608:	mov	x0, x22
   2760c:	ldp	x21, x22, [sp, #16]
   27610:	ldr	x30, [sp, #32]
   27614:	ldp	x19, x20, [sp], #48
   27618:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   2761c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27620:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27624:	add	x2, x2, #0x4d0
   27628:	add	x0, x0, #0x240
   2762c:	mov	x4, #0x0                   	// #0
   27630:	mov	x3, #0x0                   	// #0
   27634:	mov	w1, #0x11a                 	// #282
   27638:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2763c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27640:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27644:	add	x2, x2, #0x418
   27648:	add	x0, x0, #0x240
   2764c:	mov	w1, #0x11c                 	// #284
   27650:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27654:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27658:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2765c:	add	x2, x2, #0x360
   27660:	add	x0, x0, #0x240
   27664:	mov	x4, #0x0                   	// #0
   27668:	mov	x3, #0x0                   	// #0
   2766c:	mov	w1, #0x11e                 	// #286
   27670:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27674:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27678:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2767c:	add	x2, x2, #0x288
   27680:	add	x0, x0, #0x240
   27684:	mov	x4, #0x0                   	// #0
   27688:	mov	x3, #0x0                   	// #0
   2768c:	mov	w1, #0x27                  	// #39
   27690:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27694:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27698:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2769c:	mov	x3, x21
   276a0:	add	x2, x2, #0x510
   276a4:	add	x0, x0, #0x240
   276a8:	mov	x4, #0x1                   	// #1
   276ac:	mov	w1, #0x125                 	// #293
   276b0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   276b4:	mov	x0, x20
   276b8:	blr	x1
   276bc:	b	275e8 <__sanitizer_set_death_callback@@Base+0xe88>
   276c0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   276c4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   276c8:	add	x2, x2, #0x4f0
   276cc:	add	x0, x0, #0x240
   276d0:	mov	x4, #0x0                   	// #0
   276d4:	mov	x3, #0x0                   	// #0
   276d8:	mov	w1, #0x121                 	// #289
   276dc:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   276e0:	ldr	x1, [x20]
   276e4:	mov	w0, #0x3                   	// #3
   276e8:	ldr	x1, [x1, #16]
   276ec:	str	w0, [x20, #112]
   276f0:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   276f4:	add	x0, x0, #0x9b8
   276f8:	cmp	x1, x0
   276fc:	b.eq	27568 <__sanitizer_set_death_callback@@Base+0xe08>  // b.none
   27700:	b	2755c <__sanitizer_set_death_callback@@Base+0xdfc>
   27704:	ldr	w0, [x20, #112]
   27708:	b	275b8 <__sanitizer_set_death_callback@@Base+0xe58>
   2770c:	nop
   27710:	stp	x19, x20, [sp, #-64]!
   27714:	mov	x19, x0
   27718:	mov	w20, w1
   2771c:	stp	x23, x24, [sp, #32]
   27720:	add	x24, x0, #0x18
   27724:	and	w23, w3, #0xff
   27728:	mov	x0, x24
   2772c:	stp	x21, x22, [sp, #16]
   27730:	mov	x22, x4
   27734:	mov	x21, x2
   27738:	str	x30, [sp, #48]
   2773c:	bl	17f30 <__sanitizer_set_report_fd@@Base+0x4660>
   27740:	ldr	x0, [x19, #144]
   27744:	mov	w3, w20
   27748:	ldr	w4, [x19, #112]
   2774c:	add	x0, x0, #0x1
   27750:	str	x0, [x19, #144]
   27754:	cmp	x4, w20, uxtw
   27758:	b.ls	277d4 <__sanitizer_set_death_callback@@Base+0x1074>  // b.plast
   2775c:	ldr	x0, [x19, #152]
   27760:	ldr	x0, [x0, x3, lsl #3]
   27764:	cbz	x0, 277ec <__sanitizer_set_death_callback@@Base+0x108c>
   27768:	ldr	w4, [x0, #112]
   2776c:	cmp	x4, #0x1
   27770:	b.ne	2780c <__sanitizer_set_death_callback@@Base+0x10ac>  // b.any
   27774:	ldr	x2, [x0]
   27778:	mov	w3, #0x2                   	// #2
   2777c:	adrp	x1, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   27780:	add	x1, x1, #0x9c0
   27784:	ldr	x2, [x2, #24]
   27788:	str	x21, [x0, #32]
   2778c:	str	w3, [x0, #112]
   27790:	strb	w23, [x0, #117]
   27794:	cmp	x2, x1
   27798:	b.ne	277b4 <__sanitizer_set_death_callback@@Base+0x1054>  // b.any
   2779c:	mov	x0, x24
   277a0:	ldp	x21, x22, [sp, #16]
   277a4:	ldp	x23, x24, [sp, #32]
   277a8:	ldr	x30, [sp, #48]
   277ac:	ldp	x19, x20, [sp], #64
   277b0:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   277b4:	mov	x1, x22
   277b8:	blr	x2
   277bc:	mov	x0, x24
   277c0:	ldp	x21, x22, [sp, #16]
   277c4:	ldp	x23, x24, [sp, #32]
   277c8:	ldr	x30, [sp, #48]
   277cc:	ldp	x19, x20, [sp], #64
   277d0:	b	17fc8 <__sanitizer_set_report_fd@@Base+0x46f8>
   277d4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   277d8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   277dc:	add	x2, x2, #0x418
   277e0:	add	x0, x0, #0x240
   277e4:	mov	w1, #0x134                 	// #308
   277e8:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   277ec:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   277f0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   277f4:	add	x2, x2, #0x360
   277f8:	add	x0, x0, #0x240
   277fc:	mov	x4, #0x0                   	// #0
   27800:	mov	x3, #0x0                   	// #0
   27804:	mov	w1, #0x136                 	// #310
   27808:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2780c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27810:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27814:	add	x2, x2, #0x540
   27818:	add	x0, x0, #0x240
   2781c:	mov	x3, #0x1                   	// #1
   27820:	mov	w1, #0x137                 	// #311
   27824:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27828:	stp	x19, x20, [sp, #-32]!
   2782c:	mov	x19, x0
   27830:	ldr	w0, [x1, #8]
   27834:	str	x30, [sp, #16]
   27838:	cbz	w0, 278ec <__sanitizer_set_death_callback@@Base+0x118c>
   2783c:	ldr	x0, [x19, #160]
   27840:	cbz	x0, 278f8 <__sanitizer_set_death_callback@@Base+0x1198>
   27844:	str	xzr, [x1, #128]
   27848:	add	x2, x0, #0x1
   2784c:	ldr	x4, [x19, #176]
   27850:	str	x1, [x4, #128]
   27854:	str	x2, [x19, #160]
   27858:	str	x1, [x19, #176]
   2785c:	ldr	w1, [x19, #12]
   27860:	cmp	x2, x1
   27864:	b.ls	278ec <__sanitizer_set_death_callback@@Base+0x118c>  // b.plast
   27868:	ldr	x20, [x19, #168]
   2786c:	add	x2, x19, #0xa0
   27870:	ldr	x1, [x20, #128]
   27874:	str	x1, [x2, #8]
   27878:	cbz	x1, 27938 <__sanitizer_set_death_callback@@Base+0x11d8>
   2787c:	ldr	w3, [x20, #112]
   27880:	str	x0, [x19, #160]
   27884:	cmp	x3, #0x4
   27888:	b.ne	2794c <__sanitizer_set_death_callback@@Base+0x11ec>  // b.any
   2788c:	strb	wzr, [x20, #48]
   27890:	str	wzr, [x20, #112]
   27894:	dmb	ish
   27898:	str	wzr, [x20, #136]
   2789c:	ldr	x1, [x20]
   278a0:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   278a4:	add	x0, x0, #0x9d0
   278a8:	ldr	x1, [x1, #40]
   278ac:	cmp	x1, x0
   278b0:	b.ne	27940 <__sanitizer_set_death_callback@@Base+0x11e0>  // b.any
   278b4:	ldr	w0, [x20, #24]
   278b8:	add	w0, w0, #0x1
   278bc:	str	w0, [x20, #24]
   278c0:	ldr	w1, [x19, #16]
   278c4:	cmp	w1, #0x0
   278c8:	ccmp	w0, w1, #0x0, ne  // ne = any
   278cc:	b.cs	278ec <__sanitizer_set_death_callback@@Base+0x118c>  // b.hs, b.nlast
   278d0:	ldr	x0, [x19, #184]
   278d4:	cbnz	x0, 27914 <__sanitizer_set_death_callback@@Base+0x11b4>
   278d8:	dup	v0.2d, x20
   278dc:	str	xzr, [x20, #128]
   278e0:	mov	x0, #0x1                   	// #1
   278e4:	str	x0, [x19, #184]
   278e8:	str	q0, [x19, #192]
   278ec:	ldr	x30, [sp, #16]
   278f0:	ldp	x19, x20, [sp], #32
   278f4:	ret
   278f8:	dup	v0.2d, x1
   278fc:	str	xzr, [x1, #128]
   27900:	mov	x1, #0x1                   	// #1
   27904:	mov	x2, x1
   27908:	str	x1, [x19, #160]
   2790c:	stur	q0, [x19, #168]
   27910:	b	2785c <__sanitizer_set_death_callback@@Base+0x10fc>
   27914:	str	xzr, [x20, #128]
   27918:	add	x0, x0, #0x1
   2791c:	ldr	x30, [sp, #16]
   27920:	ldr	x2, [x19, #200]
   27924:	str	x20, [x2, #128]
   27928:	str	x0, [x19, #184]
   2792c:	str	x20, [x19, #200]
   27930:	ldp	x19, x20, [sp], #32
   27934:	ret
   27938:	str	xzr, [x2, #16]
   2793c:	b	2787c <__sanitizer_set_death_callback@@Base+0x111c>
   27940:	mov	x0, x20
   27944:	blr	x1
   27948:	b	278b4 <__sanitizer_set_death_callback@@Base+0x1154>
   2794c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27950:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27954:	add	x2, x2, #0x210
   27958:	add	x0, x0, #0x240
   2795c:	mov	x4, #0x4                   	// #4
   27960:	mov	w1, #0x143                 	// #323
   27964:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27968:	ldr	x2, [x0, #184]
   2796c:	mov	x1, x0
   27970:	mov	x0, #0x0                   	// #0
   27974:	cbz	x2, 27990 <__sanitizer_set_death_callback@@Base+0x1230>
   27978:	ldr	x0, [x1, #192]
   2797c:	ldr	x3, [x0, #128]
   27980:	str	x3, [x1, #192]
   27984:	cbz	x3, 27994 <__sanitizer_set_death_callback@@Base+0x1234>
   27988:	sub	x2, x2, #0x1
   2798c:	str	x2, [x1, #184]
   27990:	ret
   27994:	sub	x2, x2, #0x1
   27998:	str	x2, [x1, #184]
   2799c:	str	xzr, [x1, #200]
   279a0:	b	27990 <__sanitizer_set_death_callback@@Base+0x1230>
   279a4:	nop
   279a8:	ret
   279ac:	nop
   279b0:	ret
   279b4:	nop
   279b8:	ret
   279bc:	nop
   279c0:	ret
   279c4:	nop
   279c8:	ret
   279cc:	nop
   279d0:	ret
   279d4:	nop
   279d8:	ret
   279dc:	nop
   279e0:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   279e4:	ldr	x0, [x0, #4056]
   279e8:	ldrb	w0, [x0, #121]
   279ec:	cbz	w0, 27ac4 <__sanitizer_set_death_callback@@Base+0x1364>
   279f0:	stp	x19, x20, [sp, #-48]!
   279f4:	mrs	x19, tpidr_el0
   279f8:	adrp	x20, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   279fc:	ldr	x20, [x20, #3752]
   27a00:	stp	x21, x22, [sp, #16]
   27a04:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27a08:	add	x1, x19, x20
   27a0c:	ldr	x0, [x21, #3896]
   27a10:	ldr	x22, [x19, x20]
   27a14:	ldr	w0, [x0]
   27a18:	str	x30, [sp, #32]
   27a1c:	sxtw	x0, w0
   27a20:	cmp	x0, #0x1
   27a24:	b.hi	27a9c <__sanitizer_set_death_callback@@Base+0x133c>  // b.pmore
   27a28:	mov	x0, #0xffffffffffffffff    	// #-1
   27a2c:	str	x0, [x19, x20]
   27a30:	add	x19, x19, x20
   27a34:	cbz	x22, 27a8c <__sanitizer_set_death_callback@@Base+0x132c>
   27a38:	ldr	x21, [x21, #3896]
   27a3c:	ldr	x19, [x19, #8]
   27a40:	ldr	w0, [x21]
   27a44:	sxtw	x0, w0
   27a48:	cmp	x0, #0x1
   27a4c:	b.ls	27a64 <__sanitizer_set_death_callback@@Base+0x1304>  // b.plast
   27a50:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27a54:	mov	x2, x22
   27a58:	add	x0, x0, #0x598
   27a5c:	mov	x1, x19
   27a60:	bl	1cd78 <OnPrint@@Base+0x398>
   27a64:	mov	x0, x19
   27a68:	lsl	x1, x22, #4
   27a6c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   27a70:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   27a74:	add	x0, x0, #0x410
   27a78:	ldxr	x1, [x0]
   27a7c:	sub	x1, x1, #0x1
   27a80:	stlxr	w2, x1, [x0]
   27a84:	cbnz	w2, 27a78 <__sanitizer_set_death_callback@@Base+0x1318>
   27a88:	dmb	ish
   27a8c:	ldp	x21, x22, [sp, #16]
   27a90:	ldr	x30, [sp, #32]
   27a94:	ldp	x19, x20, [sp], #48
   27a98:	ret
   27a9c:	mov	x2, x22
   27aa0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27aa4:	add	x0, x0, #0x570
   27aa8:	bl	1cd78 <OnPrint@@Base+0x398>
   27aac:	ldr	x22, [x19, x20]
   27ab0:	mov	x0, #0xffffffffffffffff    	// #-1
   27ab4:	str	x0, [x19, x20]
   27ab8:	add	x19, x19, x20
   27abc:	cbnz	x22, 27a38 <__sanitizer_set_death_callback@@Base+0x12d8>
   27ac0:	b	27a8c <__sanitizer_set_death_callback@@Base+0x132c>
   27ac4:	ret
   27ac8:	adrp	x5, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27acc:	stp	x19, x20, [sp, #-144]!
   27ad0:	mov	x20, x0
   27ad4:	ldr	x5, [x5, #4056]
   27ad8:	ldrb	w0, [x5, #121]
   27adc:	str	x30, [sp, #80]
   27ae0:	cbz	w0, 27ccc <__sanitizer_set_death_callback@@Base+0x156c>
   27ae4:	adrp	x19, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27ae8:	ldr	x19, [x19, #3752]
   27aec:	stp	x23, x24, [sp, #32]
   27af0:	mrs	x24, tpidr_el0
   27af4:	stp	x27, x28, [sp, #64]
   27af8:	mov	x28, x1
   27afc:	add	x1, x24, x19
   27b00:	ldr	x5, [x24, x19]
   27b04:	cmn	x5, #0x1
   27b08:	b.eq	27d4c <__sanitizer_set_death_callback@@Base+0x15ec>  // b.none
   27b0c:	stp	x21, x22, [sp, #16]
   27b10:	mov	x23, x3
   27b14:	mov	x22, x2
   27b18:	ldr	x21, [x20]
   27b1c:	stp	x25, x26, [sp, #48]
   27b20:	add	x3, x21, #0x1
   27b24:	cmp	x5, x3
   27b28:	b.cc	27c04 <__sanitizer_set_death_callback@@Base+0x14a4>  // b.lo, b.ul, b.last
   27b2c:	ldr	x26, [x1, #8]
   27b30:	lsl	x21, x21, #4
   27b34:	ldr	x26, [x26, x21]
   27b38:	cbnz	x26, 27cbc <__sanitizer_set_death_callback@@Base+0x155c>
   27b3c:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27b40:	ldr	x3, [x20, #8]
   27b44:	ldr	x0, [x25, #3896]
   27b48:	sub	x5, x28, x3
   27b4c:	str	x5, [sp, #136]
   27b50:	ldr	w0, [x0]
   27b54:	sxtw	x0, w0
   27b58:	cmp	x0, #0x1
   27b5c:	b.ls	27b88 <__sanitizer_set_death_callback@@Base+0x1428>  // b.plast
   27b60:	adrp	x0, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   27b64:	mov	x4, x28
   27b68:	ldr	x2, [x20]
   27b6c:	mov	x1, x20
   27b70:	ldr	x7, [x0, #1040]
   27b74:	add	x6, sp, #0x88
   27b78:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27b7c:	add	x0, x0, #0x660
   27b80:	bl	1cd78 <OnPrint@@Base+0x398>
   27b84:	ldr	x5, [sp, #136]
   27b88:	add	x1, x24, x19
   27b8c:	ldr	x0, [x1, #24]
   27b90:	cmp	x0, x5
   27b94:	b.eq	27d18 <__sanitizer_set_death_callback@@Base+0x15b8>  // b.none
   27b98:	cmp	x23, x5
   27b9c:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   27ba0:	b.ls	27d74 <__sanitizer_set_death_callback@@Base+0x1614>  // b.plast
   27ba4:	and	x0, x5, #0xfff
   27ba8:	cmp	x0, #0x10
   27bac:	ldr	x0, [x25, #3896]
   27bb0:	b.eq	27ce4 <__sanitizer_set_death_callback@@Base+0x1584>  // b.none
   27bb4:	ldr	w0, [x0]
   27bb8:	sxtw	x0, w0
   27bbc:	cmp	x0, #0x1
   27bc0:	b.ls	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>  // b.plast
   27bc4:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27bc8:	add	x0, x0, #0x740
   27bcc:	bl	1cd78 <OnPrint@@Base+0x398>
   27bd0:	ldr	x5, [sp, #136]
   27bd4:	add	x19, x24, x19
   27bd8:	ldp	x23, x24, [sp, #32]
   27bdc:	ldr	x1, [x19, #8]
   27be0:	ldp	x27, x28, [sp, #64]
   27be4:	add	x0, x1, x21
   27be8:	str	x5, [x1, x21]
   27bec:	ldp	x21, x22, [sp, #16]
   27bf0:	str	x26, [x0, #8]
   27bf4:	ldp	x25, x26, [sp, #48]
   27bf8:	ldr	x30, [sp, #80]
   27bfc:	ldp	x19, x20, [sp], #144
   27c00:	ret
   27c04:	tst	x3, x21
   27c08:	b.eq	27cdc <__sanitizer_set_death_callback@@Base+0x157c>  // b.none
   27c0c:	clz	x1, x3
   27c10:	mov	w4, #0x3f                  	// #63
   27c14:	sub	w4, w4, w1
   27c18:	mov	x1, #0x1                   	// #1
   27c1c:	add	w27, w4, #0x1
   27c20:	lsl	x27, x1, x27
   27c24:	cmp	x3, x27
   27c28:	b.cs	27e58 <__sanitizer_set_death_callback@@Base+0x16f8>  // b.hs, b.nlast
   27c2c:	lsl	x4, x1, x4
   27c30:	cmp	x3, x4
   27c34:	b.ls	27e74 <__sanitizer_set_death_callback@@Base+0x1714>  // b.plast
   27c38:	cmp	x27, #0x100
   27c3c:	mov	x4, #0x100                 	// #256
   27c40:	csel	x27, x27, x4, cs  // cs = hs, nlast
   27c44:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27c48:	mov	w2, #0x0                   	// #0
   27c4c:	add	x1, x1, #0x5c0
   27c50:	lsl	x0, x27, #4
   27c54:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   27c58:	adrp	x4, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   27c5c:	mov	x26, x0
   27c60:	add	x0, x4, #0x410
   27c64:	ldxr	x2, [x0]
   27c68:	add	x1, x2, #0x1
   27c6c:	stlxr	w3, x1, [x0]
   27c70:	cbnz	w3, 27c64 <__sanitizer_set_death_callback@@Base+0x1504>
   27c74:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27c78:	dmb	ish
   27c7c:	ldr	x0, [x25, #3896]
   27c80:	ldr	w0, [x0]
   27c84:	sxtw	x0, w0
   27c88:	cmp	x0, #0x1
   27c8c:	b.hi	27d58 <__sanitizer_set_death_callback@@Base+0x15f8>  // b.pmore
   27c90:	mov	x0, #0xfffff               	// #1048575
   27c94:	cmp	x2, x0
   27c98:	b.hi	27e38 <__sanitizer_set_death_callback@@Base+0x16d8>  // b.pmore
   27c9c:	ldr	x3, [x24, x19]
   27ca0:	add	x5, x24, x19
   27ca4:	cbnz	x3, 27da0 <__sanitizer_set_death_callback@@Base+0x1640>
   27ca8:	lsl	x21, x21, #4
   27cac:	str	x26, [x5, #8]
   27cb0:	str	x27, [x24, x19]
   27cb4:	ldr	x26, [x26, x21]
   27cb8:	cbz	x26, 27b3c <__sanitizer_set_death_callback@@Base+0x13dc>
   27cbc:	ldp	x21, x22, [sp, #16]
   27cc0:	ldp	x23, x24, [sp, #32]
   27cc4:	ldp	x25, x26, [sp, #48]
   27cc8:	ldp	x27, x28, [sp, #64]
   27ccc:	mov	x0, #0x0                   	// #0
   27cd0:	ldr	x30, [sp, #80]
   27cd4:	ldp	x19, x20, [sp], #144
   27cd8:	ret
   27cdc:	mov	x27, x3
   27ce0:	b	27c38 <__sanitizer_set_death_callback@@Base+0x14d8>
   27ce4:	ldr	w0, [x0]
   27ce8:	ldp	x26, x5, [x5, #-16]
   27cec:	str	x5, [sp, #136]
   27cf0:	sxtw	x0, w0
   27cf4:	cmp	x0, #0x1
   27cf8:	b.ls	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>  // b.plast
   27cfc:	mov	x1, x5
   27d00:	mov	x2, x26
   27d04:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27d08:	add	x0, x0, #0x708
   27d0c:	bl	1cd78 <OnPrint@@Base+0x398>
   27d10:	ldr	x5, [sp, #136]
   27d14:	b	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>
   27d18:	ldr	x0, [x25, #3896]
   27d1c:	ldr	x26, [x1, #16]
   27d20:	ldr	w0, [x0]
   27d24:	sxtw	x0, w0
   27d28:	cmp	x0, #0x1
   27d2c:	b.ls	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>  // b.plast
   27d30:	mov	x1, x5
   27d34:	mov	x2, x26
   27d38:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27d3c:	add	x0, x0, #0x6b0
   27d40:	bl	1cd78 <OnPrint@@Base+0x398>
   27d44:	ldr	x5, [sp, #136]
   27d48:	b	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>
   27d4c:	ldp	x23, x24, [sp, #32]
   27d50:	ldp	x27, x28, [sp, #64]
   27d54:	b	27ccc <__sanitizer_set_death_callback@@Base+0x156c>
   27d58:	add	x1, x24, x19
   27d5c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27d60:	add	x0, x0, #0x5d0
   27d64:	str	x2, [sp, #96]
   27d68:	bl	1cd78 <OnPrint@@Base+0x398>
   27d6c:	ldr	x2, [sp, #96]
   27d70:	b	27c90 <__sanitizer_set_death_callback@@Base+0x1530>
   27d74:	ldr	x0, [x25, #3896]
   27d78:	ldr	w0, [x0]
   27d7c:	sxtw	x0, w0
   27d80:	cmp	x0, #0x1
   27d84:	b.ls	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>  // b.plast
   27d88:	mov	x1, x5
   27d8c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27d90:	add	x0, x0, #0x6e8
   27d94:	bl	1cd78 <OnPrint@@Base+0x398>
   27d98:	ldr	x5, [sp, #136]
   27d9c:	b	27bd4 <__sanitizer_set_death_callback@@Base+0x1474>
   27da0:	ldr	x6, [x5, #8]
   27da4:	lsl	x7, x3, #4
   27da8:	mov	x2, x7
   27dac:	mov	x0, x26
   27db0:	mov	x1, x6
   27db4:	stp	x6, x7, [sp, #96]
   27db8:	stp	x5, x3, [sp, #112]
   27dbc:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   27dc0:	ldr	x0, [x25, #3896]
   27dc4:	str	x27, [x24, x19]
   27dc8:	ldr	x5, [sp, #112]
   27dcc:	ldr	w0, [x0]
   27dd0:	ldp	x6, x7, [sp, #96]
   27dd4:	str	x26, [x5, #8]
   27dd8:	sxtw	x0, w0
   27ddc:	cmp	x0, #0x1
   27de0:	b.hi	27e18 <__sanitizer_set_death_callback@@Base+0x16b8>  // b.pmore
   27de4:	mov	x1, x7
   27de8:	mov	x0, x6
   27dec:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   27df0:	adrp	x4, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   27df4:	add	x4, x4, #0x410
   27df8:	ldxr	x0, [x4]
   27dfc:	sub	x0, x0, #0x1
   27e00:	stlxr	w1, x0, [x4]
   27e04:	cbnz	w1, 27df8 <__sanitizer_set_death_callback@@Base+0x1698>
   27e08:	add	x0, x24, x19
   27e0c:	dmb	ish
   27e10:	ldr	x26, [x0, #8]
   27e14:	b	27b30 <__sanitizer_set_death_callback@@Base+0x13d0>
   27e18:	ldr	x3, [sp, #120]
   27e1c:	mov	x1, x6
   27e20:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27e24:	add	x0, x0, #0x598
   27e28:	mov	x2, x3
   27e2c:	bl	1cd78 <OnPrint@@Base+0x398>
   27e30:	ldp	x6, x7, [sp, #96]
   27e34:	b	27de4 <__sanitizer_set_death_callback@@Base+0x1684>
   27e38:	mov	x3, x2
   27e3c:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27e40:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27e44:	add	x0, x0, #0x618
   27e48:	add	x2, x2, #0x5f8
   27e4c:	mov	x4, #0x100000              	// #1048576
   27e50:	mov	w1, #0x3c                  	// #60
   27e54:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27e58:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   27e5c:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   27e60:	mov	x4, x27
   27e64:	add	x2, x2, #0xd10
   27e68:	add	x0, x0, #0x9b8
   27e6c:	mov	w1, #0x17b                 	// #379
   27e70:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27e74:	adrp	x2, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   27e78:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   27e7c:	add	x2, x2, #0xd38
   27e80:	add	x0, x0, #0x9b8
   27e84:	mov	w1, #0x17c                 	// #380
   27e88:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27e8c:	nop
   27e90:	adrp	x3, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27e94:	stp	x19, x20, [sp, #-32]!
   27e98:	mov	x19, x0
   27e9c:	ldr	x3, [x3, #4056]
   27ea0:	ldrb	w0, [x3, #121]
   27ea4:	str	x30, [sp, #16]
   27ea8:	cbz	w0, 27edc <__sanitizer_set_death_callback@@Base+0x177c>
   27eac:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27eb0:	mov	x20, x1
   27eb4:	ldr	x0, [x0, #3896]
   27eb8:	ldr	w0, [x0]
   27ebc:	sxtw	x0, w0
   27ec0:	cmp	x0, #0x1
   27ec4:	b.hi	27ee8 <__sanitizer_set_death_callback@@Base+0x1788>  // b.pmore
   27ec8:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27ecc:	ldr	x0, [x0, #3752]
   27ed0:	mrs	x1, tpidr_el0
   27ed4:	add	x0, x1, x0
   27ed8:	stp	x20, x19, [x0, #16]
   27edc:	ldr	x30, [sp, #16]
   27ee0:	ldp	x19, x20, [sp], #32
   27ee4:	ret
   27ee8:	mov	x2, x1
   27eec:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27ef0:	mov	x1, x19
   27ef4:	add	x0, x0, #0x770
   27ef8:	bl	1cd78 <OnPrint@@Base+0x398>
   27efc:	b	27ec8 <__sanitizer_set_death_callback@@Base+0x1768>
   27f00:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27f04:	ldr	x0, [x0, #3752]
   27f08:	mrs	x1, tpidr_el0
   27f0c:	add	x0, x1, x0
   27f10:	ret
   27f14:	nop
   27f18:	ldr	x0, [x0]
   27f1c:	cmn	x0, #0x1
   27f20:	cset	w0, eq  // eq = none
   27f24:	ret
   27f28:	stp	x19, x20, [sp, #-32]!
   27f2c:	mov	x19, x1
   27f30:	ldr	w4, [x1, #8]
   27f34:	ldr	x1, [x1]
   27f38:	stp	x21, x30, [sp, #16]
   27f3c:	ldr	w3, [x1, #8]
   27f40:	cmp	x3, x4
   27f44:	b.cs	27fbc <__sanitizer_set_death_callback@@Base+0x185c>  // b.hs, b.nlast
   27f48:	adrp	x21, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   27f4c:	bl	6730 <_Unwind_GetIP@plt>
   27f50:	mov	x20, x0
   27f54:	ldr	x21, [x21, #4016]
   27f58:	ldr	x0, [x21]
   27f5c:	cbz	x0, 27f9c <__sanitizer_set_death_callback@@Base+0x183c>
   27f60:	cmp	x20, x0
   27f64:	b.cc	27fac <__sanitizer_set_death_callback@@Base+0x184c>  // b.lo, b.ul, b.last
   27f68:	ldr	x1, [x19]
   27f6c:	ldr	w3, [x19, #8]
   27f70:	ldr	w0, [x1, #8]
   27f74:	add	w2, w0, #0x1
   27f78:	str	w2, [x1, #8]
   27f7c:	add	x0, x1, w0, uxtw #3
   27f80:	cmp	w2, w3
   27f84:	str	x20, [x0, #16]
   27f88:	b.eq	27fac <__sanitizer_set_death_callback@@Base+0x184c>  // b.none
   27f8c:	mov	w0, #0x0                   	// #0
   27f90:	ldp	x21, x30, [sp, #16]
   27f94:	ldp	x19, x20, [sp], #32
   27f98:	ret
   27f9c:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   27fa0:	str	x0, [x21]
   27fa4:	cmp	x20, x0
   27fa8:	b.cs	27f68 <__sanitizer_set_death_callback@@Base+0x1808>  // b.hs, b.nlast
   27fac:	mov	w0, #0x4                   	// #4
   27fb0:	ldp	x21, x30, [sp, #16]
   27fb4:	ldp	x19, x20, [sp], #32
   27fb8:	ret
   27fbc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27fc0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   27fc4:	add	x2, x2, #0x790
   27fc8:	add	x0, x0, #0x7c0
   27fcc:	mov	w1, #0x6d                  	// #109
   27fd0:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   27fd4:	nop
   27fd8:	b	6730 <_Unwind_GetIP@plt>
   27fdc:	nop
   27fe0:	stp	x19, x20, [sp, #-48]!
   27fe4:	cmp	w2, #0x1
   27fe8:	str	x30, [sp, #16]
   27fec:	b.ls	2805c <__sanitizer_set_death_callback@@Base+0x18fc>  // b.plast
   27ff0:	mov	x19, x0
   27ff4:	add	w2, w2, #0x1
   27ff8:	cmp	w2, #0x100
   27ffc:	mov	x20, x1
   28000:	mov	w1, #0x100                 	// #256
   28004:	csel	w2, w2, w1, ls  // ls = plast
   28008:	str	wzr, [x19, #8]
   2800c:	add	x1, sp, #0x20
   28010:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   28014:	add	x0, x0, #0xf28
   28018:	str	x19, [sp, #32]
   2801c:	str	w2, [sp, #40]
   28020:	bl	6350 <_Unwind_Backtrace@plt>
   28024:	mov	x1, x20
   28028:	mov	x0, x19
   2802c:	bl	1eb90 <OnPrint@@Base+0x21b0>
   28030:	mov	x1, x0
   28034:	cbnz	x0, 28044 <__sanitizer_set_death_callback@@Base+0x18e4>
   28038:	ldr	w0, [x19, #8]
   2803c:	cmp	w0, #0x1
   28040:	cset	x1, hi  // hi = pmore
   28044:	mov	x0, x19
   28048:	bl	1ead8 <OnPrint@@Base+0x20f8>
   2804c:	ldr	x30, [sp, #16]
   28050:	str	x20, [x19, #16]
   28054:	ldp	x19, x20, [sp], #48
   28058:	ret
   2805c:	mov	w3, w2
   28060:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28064:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   28068:	add	x0, x0, #0x7c0
   2806c:	add	x2, x2, #0xfe0
   28070:	mov	x4, #0x2                   	// #2
   28074:	mov	w1, #0x7a                  	// #122
   28078:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2807c:	nop
   28080:	stp	x19, x20, [sp, #-112]!
   28084:	cmp	w3, #0x1
   28088:	stp	x21, x22, [sp, #16]
   2808c:	stp	x23, x24, [sp, #32]
   28090:	mov	w24, w3
   28094:	str	x30, [sp, #80]
   28098:	b.ls	282f4 <__sanitizer_set_death_callback@@Base+0x1b94>  // b.plast
   2809c:	adrp	x19, 9ba000 <__ubsan_vptr_type_cache@@Base+0x951188>
   280a0:	mov	x21, x0
   280a4:	mov	x20, x1
   280a8:	add	x1, x19, #0x418
   280ac:	ldr	x0, [x19, #1048]
   280b0:	cbz	x0, 2833c <__sanitizer_set_death_callback@@Base+0x1bdc>
   280b4:	ldr	x0, [x1, #8]
   280b8:	stp	x25, x26, [sp, #48]
   280bc:	mov	x23, x2
   280c0:	stp	x27, x28, [sp, #64]
   280c4:	blr	x0
   280c8:	mov	x22, x0
   280cc:	cbz	x0, 2831c <__sanitizer_set_death_callback@@Base+0x1bbc>
   280d0:	adrp	x25, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   280d4:	ldr	x20, [x25, #4016]
   280d8:	ldr	x3, [x20]
   280dc:	cbz	x3, 28284 <__sanitizer_set_death_callback@@Base+0x1b24>
   280e0:	sub	x0, x3, #0x1
   280e4:	tst	x0, x3
   280e8:	b.ne	283bc <__sanitizer_set_death_callback@@Base+0x1c5c>  // b.any
   280ec:	neg	x20, x3
   280f0:	mov	x27, #0x17ff                	// #6143
   280f4:	add	x3, x3, x27
   280f8:	mov	w2, #0x0                   	// #0
   280fc:	and	x20, x3, x20
   28100:	adrp	x28, 40000 <__asan_backtrace_get_view@@Base+0x78>
   28104:	mov	x0, x20
   28108:	add	x1, x28, #0x988
   2810c:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   28110:	mov	x26, x0
   28114:	mov	x2, #0x0                   	// #0
   28118:	mov	x1, #0x0                   	// #0
   2811c:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   28120:	mov	x1, #0x0                   	// #0
   28124:	mov	x0, #0x0                   	// #0
   28128:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   2812c:	cmp	x20, x27
   28130:	b.ls	28294 <__sanitizer_set_death_callback@@Base+0x1b34>  // b.plast
   28134:	mov	x2, #0x1800                	// #6144
   28138:	mov	w1, #0x0                   	// #0
   2813c:	mov	x0, x26
   28140:	bl	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   28144:	ldr	x6, [x19, #1048]
   28148:	add	x19, x19, #0x418
   2814c:	mov	x1, x23
   28150:	mov	x5, x24
   28154:	mov	x3, x26
   28158:	mov	x2, x22
   2815c:	mov	x4, #0x0                   	// #0
   28160:	mov	x0, #0x0                   	// #0
   28164:	blr	x6
   28168:	ldr	x1, [x19, #16]
   2816c:	mov	x19, x0
   28170:	mov	x0, x22
   28174:	blr	x1
   28178:	tbnz	x19, #63, 2825c <__sanitizer_set_death_callback@@Base+0x1afc>
   2817c:	cmp	x19, #0x100
   28180:	b.gt	283d8 <__sanitizer_set_death_callback@@Base+0x1c78>
   28184:	str	wzr, [x21, #8]
   28188:	cmp	x19, #0x0
   2818c:	cbz	x19, 2825c <__sanitizer_set_death_callback@@Base+0x1afc>
   28190:	add	x0, x19, x19, lsl #1
   28194:	add	x1, x19, #0x2
   28198:	mov	x2, #0x8                   	// #8
   2819c:	mov	x3, #0x18                  	// #24
   281a0:	lsl	x0, x0, #3
   281a4:	lsl	x1, x1, #3
   281a8:	sub	x0, x0, #0x10
   281ac:	csel	x1, x1, x3, gt
   281b0:	csel	x0, x0, x2, gt
   281b4:	add	x2, x21, #0x10
   281b8:	add	x0, x26, x0
   281bc:	add	x1, x21, x1
   281c0:	cmp	x2, x0
   281c4:	ccmp	x26, x1, #0x2, cc  // cc = lo, ul, last
   281c8:	ccmp	x19, #0x7, #0x4, cs  // cs = hs, nlast
   281cc:	b.le	28398 <__sanitizer_set_death_callback@@Base+0x1c38>
   281d0:	cmp	x19, #0x0
   281d4:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   281d8:	csinc	x0, x19, xzr, gt
   281dc:	mov	x2, x26
   281e0:	sub	x0, x0, #0x1
   281e4:	mov	x1, x21
   281e8:	ldr	q0, [x3, #2128]
   281ec:	lsr	x3, x0, #1
   281f0:	add	x3, x21, x3, lsl #4
   281f4:	nop
   281f8:	ld3	{v1.2d-v3.2d}, [x2], #48
   281fc:	add	v1.2d, v0.2d, v1.2d
   28200:	str	q1, [x1, #16]!
   28204:	cmp	x1, x3
   28208:	b.ne	281f8 <__sanitizer_set_death_callback@@Base+0x1a98>  // b.any
   2820c:	and	x0, x0, #0xfffffffffffffffe
   28210:	add	x3, x0, #0x1
   28214:	mov	w2, w0
   28218:	add	x1, x0, x0, lsl #1
   2821c:	add	x2, x2, #0x2
   28220:	cmp	x19, x3
   28224:	add	w0, w0, #0x1
   28228:	lsl	x1, x1, #3
   2822c:	ldr	x3, [x26, x1]
   28230:	add	x3, x3, #0x2
   28234:	str	x3, [x21, x2, lsl #3]
   28238:	b.le	28250 <__sanitizer_set_death_callback@@Base+0x1af0>
   2823c:	add	x1, x26, x1
   28240:	add	x0, x21, w0, uxtw #3
   28244:	ldr	x1, [x1, #24]
   28248:	add	x1, x1, #0x2
   2824c:	str	x1, [x0, #16]
   28250:	cmp	x19, #0x0
   28254:	csinc	w19, w19, wzr, gt
   28258:	str	w19, [x21, #8]
   2825c:	mov	x0, x26
   28260:	mov	x1, x20
   28264:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   28268:	ldp	x25, x26, [sp, #48]
   2826c:	ldp	x27, x28, [sp, #64]
   28270:	ldp	x21, x22, [sp, #16]
   28274:	ldp	x23, x24, [sp, #32]
   28278:	ldr	x30, [sp, #80]
   2827c:	ldp	x19, x20, [sp], #112
   28280:	ret
   28284:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   28288:	mov	x3, x0
   2828c:	str	x0, [x20]
   28290:	b	280e0 <__sanitizer_set_death_callback@@Base+0x1980>
   28294:	ldr	x25, [x25, #4016]
   28298:	ldr	x0, [x25]
   2829c:	cbz	x0, 283cc <__sanitizer_set_death_callback@@Base+0x1c6c>
   282a0:	sub	x1, x0, #0x1
   282a4:	tst	x1, x0
   282a8:	b.ne	283bc <__sanitizer_set_death_callback@@Base+0x1c5c>  // b.any
   282ac:	mov	x1, #0x17ff                	// #6143
   282b0:	add	x25, x0, x1
   282b4:	neg	x0, x0
   282b8:	add	x1, x28, #0x988
   282bc:	and	x25, x25, x0
   282c0:	mov	w2, #0x0                   	// #0
   282c4:	mov	x0, x25
   282c8:	bl	1a080 <__sanitizer_set_report_fd@@Base+0x67b0>
   282cc:	mov	x2, #0x0                   	// #0
   282d0:	mov	x27, x0
   282d4:	mov	x1, x26
   282d8:	bl	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   282dc:	mov	x1, x20
   282e0:	mov	x0, x26
   282e4:	mov	x20, x25
   282e8:	mov	x26, x27
   282ec:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x6880>
   282f0:	b	28134 <__sanitizer_set_death_callback@@Base+0x19d4>
   282f4:	adrp	x2, 46000 <__asan_backtrace_vector_release@@Base+0x5b10>
   282f8:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   282fc:	mov	x3, x24
   28300:	add	x2, x2, #0xfe0
   28304:	add	x0, x0, #0x7c0
   28308:	mov	x4, #0x2                   	// #2
   2830c:	mov	w1, #0x94                  	// #148
   28310:	stp	x25, x26, [sp, #48]
   28314:	stp	x27, x28, [sp, #64]
   28318:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2831c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28320:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28324:	add	x2, x2, #0x810
   28328:	add	x0, x0, #0x7c0
   2832c:	mov	x4, #0x0                   	// #0
   28330:	mov	x3, #0x0                   	// #0
   28334:	mov	w1, #0x9b                  	// #155
   28338:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   2833c:	add	w3, w3, #0x1
   28340:	mov	w1, #0x100                 	// #256
   28344:	cmp	w3, #0x100
   28348:	str	wzr, [x21, #8]
   2834c:	csel	w3, w3, w1, ls  // ls = plast
   28350:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0x8a0>
   28354:	add	x1, sp, #0x60
   28358:	add	x0, x0, #0xf28
   2835c:	str	x21, [sp, #96]
   28360:	str	w3, [sp, #104]
   28364:	bl	6350 <_Unwind_Backtrace@plt>
   28368:	mov	x1, x20
   2836c:	mov	x0, x21
   28370:	bl	1eb90 <OnPrint@@Base+0x21b0>
   28374:	mov	x1, x0
   28378:	cbnz	x0, 28388 <__sanitizer_set_death_callback@@Base+0x1c28>
   2837c:	ldr	w0, [x21, #8]
   28380:	cmp	w0, #0x1
   28384:	cset	x1, hi  // hi = pmore
   28388:	mov	x0, x21
   2838c:	bl	1ead8 <OnPrint@@Base+0x20f8>
   28390:	str	x20, [x21, #16]
   28394:	b	28270 <__sanitizer_set_death_callback@@Base+0x1b10>
   28398:	mov	x3, x26
   2839c:	mov	x0, #0x0                   	// #0
   283a0:	ldr	x1, [x3], #24
   283a4:	add	x1, x1, #0x2
   283a8:	str	x1, [x2, x0, lsl #3]
   283ac:	add	x0, x0, #0x1
   283b0:	cmp	x19, x0
   283b4:	b.gt	283a0 <__sanitizer_set_death_callback@@Base+0x1c40>
   283b8:	b	28250 <__sanitizer_set_death_callback@@Base+0x1af0>
   283bc:	adrp	x0, 40000 <__asan_backtrace_get_view@@Base+0x78>
   283c0:	add	x0, x0, #0x970
   283c4:	bl	12ce0 <__sanitizer_cov_dump@@Base+0x1f80>
   283c8:	bl	26670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70e8>
   283cc:	bl	18bc0 <__sanitizer_set_report_fd@@Base+0x52f0>
   283d0:	str	x0, [x25]
   283d4:	b	282a0 <__sanitizer_set_death_callback@@Base+0x1b40>
   283d8:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   283dc:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   283e0:	mov	x3, x19
   283e4:	add	x2, x2, #0x820
   283e8:	add	x0, x0, #0x7c0
   283ec:	mov	x4, #0x100                 	// #256
   283f0:	mov	w1, #0xa3                  	// #163
   283f4:	bl	266d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7150>
   283f8:	stp	x19, x20, [sp, #-48]!
   283fc:	mov	x19, x1
   28400:	mov	x20, x0
   28404:	mov	x1, x0
   28408:	mov	x0, #0xffffffffffffffff    	// #-1
   2840c:	stp	x21, x22, [sp, #16]
   28410:	mov	x22, x2
   28414:	mov	x21, x3
   28418:	str	x30, [sp, #32]
   2841c:	bl	6500 <dlsym@plt>
   28420:	str	x0, [x19]
   28424:	cbz	x0, 28440 <__sanitizer_set_death_callback@@Base+0x1ce0>
   28428:	cmp	x22, x21
   2842c:	cset	w0, eq  // eq = none
   28430:	ldp	x21, x22, [sp, #16]
   28434:	ldr	x30, [sp, #32]
   28438:	ldp	x19, x20, [sp], #48
   2843c:	ret
   28440:	mov	x1, x20
   28444:	bl	6500 <dlsym@plt>
   28448:	str	x0, [x19]
   2844c:	cmp	x22, x21
   28450:	cset	w0, eq  // eq = none
   28454:	ldp	x21, x22, [sp, #16]
   28458:	ldr	x30, [sp, #32]
   2845c:	ldp	x19, x20, [sp], #48
   28460:	ret
   28464:	nop
   28468:	mov	x2, x1
   2846c:	mov	x1, x0
   28470:	mov	x0, #0xffffffffffffffff    	// #-1
   28474:	b	6450 <dlvsym@plt>
   28478:	ldr	x2, [x0]
   2847c:	mov	w3, #0xffffffff            	// #-1
   28480:	ldr	x1, [x1]
   28484:	cmp	x2, x1
   28488:	cset	w0, hi  // hi = pmore
   2848c:	csel	w0, w0, w3, cs  // cs = hs, nlast
   28490:	ret
   28494:	nop
   28498:	mov	x2, x0
   2849c:	ldr	x0, [x1]
   284a0:	ldr	x3, [x2]
   284a4:	cmp	x3, x0
   284a8:	b.cc	284ec <__sanitizer_set_death_callback@@Base+0x1d8c>  // b.lo, b.ul, b.last
   284ac:	mov	w0, #0x1                   	// #1
   284b0:	b.hi	284e8 <__sanitizer_set_death_callback@@Base+0x1d88>  // b.pmore
   284b4:	ldr	x3, [x1, #8]
   284b8:	ldr	x4, [x2, #8]
   284bc:	cmp	x4, x3
   284c0:	b.cc	284e8 <__sanitizer_set_death_callback@@Base+0x1d88>  // b.lo, b.ul, b.last
   284c4:	mov	w0, #0xffffffff            	// #-1
   284c8:	b.hi	284e8 <__sanitizer_set_death_callback@@Base+0x1d88>  // b.pmore
   284cc:	ldr	x1, [x1, #16]
   284d0:	ldr	x2, [x2, #16]
   284d4:	ldr	x1, [x1, #56]
   284d8:	ldr	x2, [x2, #56]
   284dc:	cmp	x2, x1
   284e0:	cset	w3, gt
   284e4:	csel	w0, w3, w0, ge  // ge = tcont
   284e8:	ret
   284ec:	mov	w0, #0xffffffff            	// #-1
   284f0:	ret
   284f4:	nop
   284f8:	mov	x2, x0
   284fc:	ldr	x0, [x1]
   28500:	ldr	x3, [x2]
   28504:	cmp	x3, x0
   28508:	b.cc	28530 <__sanitizer_set_death_callback@@Base+0x1dd0>  // b.lo, b.ul, b.last
   2850c:	mov	w0, #0x1                   	// #1
   28510:	b.hi	2852c <__sanitizer_set_death_callback@@Base+0x1dcc>  // b.pmore
   28514:	ldr	w1, [x1, #20]
   28518:	mov	w3, #0xffffffff            	// #-1
   2851c:	ldr	w2, [x2, #20]
   28520:	cmp	w2, w1
   28524:	cset	w0, gt
   28528:	csel	w0, w0, w3, ge  // ge = tcont
   2852c:	ret
   28530:	mov	w0, #0xffffffff            	// #-1
   28534:	ret
   28538:	cbz	x2, 28690 <__sanitizer_set_death_callback@@Base+0x1f30>
   2853c:	stp	x29, x30, [sp, #-64]!
   28540:	mov	x10, x2
   28544:	mov	x29, sp
   28548:	stp	x19, x20, [sp, #16]
   2854c:	mov	x20, x6
   28550:	mov	x19, x0
   28554:	stp	x21, x22, [sp, #32]
   28558:	mov	x21, x3
   2855c:	mov	x22, x4
   28560:	stp	x23, x24, [sp, #48]
   28564:	mov	x23, x5
   28568:	mov	x0, #0x0                   	// #0
   2856c:	add	x7, x10, x0
   28570:	cmp	x10, x0
   28574:	and	x8, x7, #0xfffffffffffffffe
   28578:	b.ls	28678 <__sanitizer_set_death_callback@@Base+0x1f18>  // b.plast
   2857c:	lsr	x7, x7, #1
   28580:	add	x8, x8, x7
   28584:	lsl	x9, x8, #3
   28588:	ldr	x3, [x1, x8, lsl #3]
   2858c:	add	x8, x1, x9
   28590:	cmp	x3, x19
   28594:	b.hi	28664 <__sanitizer_set_death_callback@@Base+0x1f04>  // b.pmore
   28598:	ldr	x3, [x8, #8]
   2859c:	add	x0, x7, #0x1
   285a0:	cmp	x19, x3
   285a4:	b.cs	2856c <__sanitizer_set_death_callback@@Base+0x1e0c>  // b.hs, b.nlast
   285a8:	asr	x9, x9, #3
   285ac:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   285b0:	movk	x0, #0xaaab
   285b4:	mov	x3, x0
   285b8:	mul	x9, x9, x0
   285bc:	add	x9, x9, #0x1
   285c0:	cmp	x2, x9
   285c4:	b.hi	285f4 <__sanitizer_set_death_callback@@Base+0x1e94>  // b.pmore
   285c8:	b	28600 <__sanitizer_set_death_callback@@Base+0x1ea0>
   285cc:	ldr	x0, [x8, #32]
   285d0:	cmp	x19, x0
   285d4:	b.cs	28600 <__sanitizer_set_death_callback@@Base+0x1ea0>  // b.hs, b.nlast
   285d8:	add	x8, x8, #0x18
   285dc:	sub	x7, x8, x1
   285e0:	asr	x7, x7, #3
   285e4:	mul	x7, x7, x3
   285e8:	add	x7, x7, #0x1
   285ec:	cmp	x7, x2
   285f0:	b.cs	28600 <__sanitizer_set_death_callback@@Base+0x1ea0>  // b.hs, b.nlast
   285f4:	ldr	x0, [x8, #24]
   285f8:	cmp	x19, x0
   285fc:	b.cs	285cc <__sanitizer_set_death_callback@@Base+0x1e6c>  // b.hs, b.nlast
   28600:	ldr	x24, [x8, #16]
   28604:	mov	x6, x20
   28608:	mov	x5, x23
   2860c:	mov	x4, x22
   28610:	mov	x3, x21
   28614:	mov	x0, x19
   28618:	ldp	x1, x2, [x24, #24]
   2861c:	bl	28538 <__sanitizer_set_death_callback@@Base+0x1dd8>
   28620:	cbnz	w0, 28650 <__sanitizer_set_death_callback@@Base+0x1ef0>
   28624:	ldr	w3, [x20]
   28628:	mov	x1, x19
   2862c:	ldr	x2, [x23]
   28630:	mov	x0, x22
   28634:	ldr	x4, [x24]
   28638:	blr	x21
   2863c:	cbnz	w0, 28650 <__sanitizer_set_death_callback@@Base+0x1ef0>
   28640:	ldr	x1, [x24, #8]
   28644:	str	x1, [x23]
   28648:	ldr	w1, [x24, #16]
   2864c:	str	w1, [x20]
   28650:	ldp	x19, x20, [sp, #16]
   28654:	ldp	x21, x22, [sp, #32]
   28658:	ldp	x23, x24, [sp, #48]
   2865c:	ldp	x29, x30, [sp], #64
   28660:	ret
   28664:	mov	x10, x7
   28668:	add	x7, x10, x0
   2866c:	cmp	x10, x0
   28670:	and	x8, x7, #0xfffffffffffffffe
   28674:	b.hi	2857c <__sanitizer_set_death_callback@@Base+0x1e1c>  // b.pmore
   28678:	mov	w0, #0x0                   	// #0
   2867c:	ldp	x19, x20, [sp, #16]
   28680:	ldp	x21, x22, [sp, #32]
   28684:	ldp	x23, x24, [sp, #48]
   28688:	ldp	x29, x30, [sp], #64
   2868c:	ret
   28690:	mov	w0, #0x0                   	// #0
   28694:	ret
   28698:	stp	x29, x30, [sp, #-96]!
   2869c:	mov	x29, sp
   286a0:	stp	x21, x22, [sp, #32]
   286a4:	mov	x21, x0
   286a8:	mov	x22, x1
   286ac:	ldr	x0, [x0]
   286b0:	stp	x19, x20, [sp, #16]
   286b4:	mov	x19, x2
   286b8:	str	x23, [sp, #48]
   286bc:	sub	x2, x2, #0x1
   286c0:	mov	x20, x3
   286c4:	cmp	x2, x0
   286c8:	mov	x23, x4
   286cc:	b.cs	286ec <__sanitizer_set_death_callback@@Base+0x1f8c>  // b.hs, b.nlast
   286d0:	lsl	x2, x19, #5
   286d4:	ldr	x1, [x1]
   286d8:	sub	x2, x2, #0x20
   286dc:	add	x0, x1, x2
   286e0:	ldr	x1, [x1, x2]
   286e4:	cmp	x19, x1
   286e8:	b.eq	28734 <__sanitizer_set_death_callback@@Base+0x1fd4>  // b.none
   286ec:	add	x0, sp, #0x40
   286f0:	mov	x2, #0x20                  	// #32
   286f4:	mov	w1, #0x0                   	// #0
   286f8:	bl	6530 <__asan_internal_memset@plt>
   286fc:	ldr	x7, [x21]
   28700:	mov	x6, #0x0                   	// #0
   28704:	ldr	x8, [x22]
   28708:	str	x19, [sp, #64]
   2870c:	add	x1, x7, x6
   28710:	cmp	x7, x6
   28714:	b.ls	28758 <__sanitizer_set_death_callback@@Base+0x1ff8>  // b.plast
   28718:	lsr	x1, x1, #1
   2871c:	lsl	x5, x1, #5
   28720:	add	x0, x8, x5
   28724:	ldr	x5, [x8, x5]
   28728:	cmp	x19, x5
   2872c:	b.cc	28784 <__sanitizer_set_death_callback@@Base+0x2024>  // b.lo, b.ul, b.last
   28730:	b.hi	28748 <__sanitizer_set_death_callback@@Base+0x1fe8>  // b.pmore
   28734:	ldp	x19, x20, [sp, #16]
   28738:	ldp	x21, x22, [sp, #32]
   2873c:	ldr	x23, [sp, #48]
   28740:	ldp	x29, x30, [sp], #96
   28744:	ret
   28748:	add	x6, x1, #0x1
   2874c:	add	x1, x7, x6
   28750:	cmp	x7, x6
   28754:	b.hi	28718 <__sanitizer_set_death_callback@@Base+0x1fb8>  // b.pmore
   28758:	mov	x0, x23
   2875c:	mov	w2, #0x0                   	// #0
   28760:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28764:	add	x1, x1, #0x860
   28768:	blr	x20
   2876c:	mov	x0, #0x0                   	// #0
   28770:	ldp	x19, x20, [sp, #16]
   28774:	ldp	x21, x22, [sp, #32]
   28778:	ldr	x23, [sp, #48]
   2877c:	ldp	x29, x30, [sp], #96
   28780:	ret
   28784:	mov	x7, x1
   28788:	b	2870c <__sanitizer_set_death_callback@@Base+0x1fac>
   2878c:	nop
   28790:	ldr	x3, [x0]
   28794:	ldr	x2, [x1]
   28798:	cmp	x3, x2
   2879c:	b.cc	287d4 <__sanitizer_set_death_callback@@Base+0x2074>  // b.lo, b.ul, b.last
   287a0:	b.hi	287cc <__sanitizer_set_death_callback@@Base+0x206c>  // b.pmore
   287a4:	ldr	x3, [x0, #8]
   287a8:	ldr	x2, [x1, #8]
   287ac:	cmp	x3, x2
   287b0:	b.cc	287cc <__sanitizer_set_death_callback@@Base+0x206c>  // b.lo, b.ul, b.last
   287b4:	b.hi	287d4 <__sanitizer_set_death_callback@@Base+0x2074>  // b.pmore
   287b8:	ldr	x0, [x0, #16]
   287bc:	ldr	x1, [x1, #16]
   287c0:	ldr	x0, [x0]
   287c4:	ldr	x1, [x1]
   287c8:	b	67f0 <__asan_internal_strcmp@plt>
   287cc:	mov	w0, #0x1                   	// #1
   287d0:	ret
   287d4:	mov	w0, #0xffffffff            	// #-1
   287d8:	ret
   287dc:	nop
   287e0:	stp	x29, x30, [sp, #-288]!
   287e4:	mov	w1, #0x0                   	// #0
   287e8:	mov	x29, sp
   287ec:	stp	x19, x20, [sp, #16]
   287f0:	mov	x19, x0
   287f4:	stp	x23, x24, [sp, #48]
   287f8:	adrp	x24, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   287fc:	adrp	x23, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28800:	add	x24, x24, #0x8a0
   28804:	add	x23, x23, #0x890
   28808:	str	x25, [sp, #64]
   2880c:	add	x25, sp, #0x58
   28810:	stp	x21, x22, [sp, #32]
   28814:	mov	w21, #0x0                   	// #0
   28818:	mov	x22, #0x0                   	// #0
   2881c:	nop
   28820:	ldp	x6, x20, [x19, #16]
   28824:	cbnz	x20, 2884c <__sanitizer_set_death_callback@@Base+0x20ec>
   28828:	ldr	w0, [x19, #56]
   2882c:	cbz	w0, 288d0 <__sanitizer_set_death_callback@@Base+0x2170>
   28830:	mov	x0, x20
   28834:	ldp	x19, x20, [sp, #16]
   28838:	ldp	x21, x22, [sp, #32]
   2883c:	ldp	x23, x24, [sp, #48]
   28840:	ldr	x25, [sp, #64]
   28844:	ldp	x29, x30, [sp], #288
   28848:	ret
   2884c:	sub	x20, x20, #0x1
   28850:	add	x5, x6, #0x1
   28854:	stp	x5, x20, [x19, #16]
   28858:	cmp	w21, #0x3f
   2885c:	ldrb	w20, [x6]
   28860:	b.hi	28898 <__sanitizer_set_death_callback@@Base+0x2138>  // b.pmore
   28864:	and	x0, x20, #0x7f
   28868:	lsl	x0, x0, x21
   2886c:	orr	x22, x22, x0
   28870:	add	w21, w21, #0x7
   28874:	tbnz	w20, #7, 28820 <__sanitizer_set_death_callback@@Base+0x20c0>
   28878:	mov	x20, x22
   2887c:	mov	x0, x20
   28880:	ldp	x19, x20, [sp, #16]
   28884:	ldp	x21, x22, [sp, #32]
   28888:	ldp	x23, x24, [sp, #48]
   2888c:	ldr	x25, [sp, #64]
   28890:	ldp	x29, x30, [sp], #288
   28894:	ret
   28898:	cbnz	w1, 28870 <__sanitizer_set_death_callback@@Base+0x2110>
   2889c:	ldp	x4, x6, [x19]
   288a0:	mov	x3, x24
   288a4:	mov	x2, x23
   288a8:	mov	x1, #0xc8                  	// #200
   288ac:	mov	x0, x25
   288b0:	sub	w5, w5, w6
   288b4:	bl	6700 <snprintf@plt>
   288b8:	ldp	x3, x0, [x19, #40]
   288bc:	mov	x1, x25
   288c0:	mov	w2, #0x0                   	// #0
   288c4:	blr	x3
   288c8:	mov	w1, #0x1                   	// #1
   288cc:	b	28870 <__sanitizer_set_death_callback@@Base+0x2110>
   288d0:	ldp	x4, x5, [x19]
   288d4:	add	x21, sp, #0x58
   288d8:	mov	x0, x21
   288dc:	mov	x1, #0xc8                  	// #200
   288e0:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   288e4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   288e8:	add	x3, x3, #0x880
   288ec:	add	x2, x2, #0x890
   288f0:	sub	w5, w6, w5
   288f4:	bl	6700 <snprintf@plt>
   288f8:	ldp	x3, x0, [x19, #40]
   288fc:	mov	x1, x21
   28900:	mov	w2, #0x0                   	// #0
   28904:	blr	x3
   28908:	mov	w0, #0x1                   	// #1
   2890c:	str	w0, [x19, #56]
   28910:	mov	x0, x20
   28914:	ldp	x19, x20, [sp, #16]
   28918:	ldp	x21, x22, [sp, #32]
   2891c:	ldp	x23, x24, [sp, #48]
   28920:	ldr	x25, [sp, #64]
   28924:	ldp	x29, x30, [sp], #288
   28928:	ret
   2892c:	nop
   28930:	stp	x29, x30, [sp, #-288]!
   28934:	mov	w1, #0x0                   	// #0
   28938:	mov	x29, sp
   2893c:	stp	x19, x20, [sp, #16]
   28940:	mov	x19, x0
   28944:	mov	w20, #0x0                   	// #0
   28948:	stp	x23, x24, [sp, #48]
   2894c:	adrp	x24, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28950:	adrp	x23, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28954:	add	x24, x24, #0x8c0
   28958:	add	x23, x23, #0x890
   2895c:	str	x25, [sp, #64]
   28960:	add	x25, sp, #0x58
   28964:	stp	x21, x22, [sp, #32]
   28968:	mov	x22, #0x0                   	// #0
   2896c:	nop
   28970:	ldp	x6, x0, [x19, #16]
   28974:	cbnz	x0, 289a0 <__sanitizer_set_death_callback@@Base+0x2240>
   28978:	ldr	w0, [x19, #56]
   2897c:	mov	x22, #0x0                   	// #0
   28980:	cbz	w0, 28a3c <__sanitizer_set_death_callback@@Base+0x22dc>
   28984:	mov	x0, x22
   28988:	ldp	x19, x20, [sp, #16]
   2898c:	ldp	x21, x22, [sp, #32]
   28990:	ldp	x23, x24, [sp, #48]
   28994:	ldr	x25, [sp, #64]
   28998:	ldp	x29, x30, [sp], #288
   2899c:	ret
   289a0:	sub	x0, x0, #0x1
   289a4:	add	x5, x6, #0x1
   289a8:	stp	x5, x0, [x19, #16]
   289ac:	cmp	w20, #0x3f
   289b0:	ldrb	w21, [x6]
   289b4:	b.hi	28a04 <__sanitizer_set_death_callback@@Base+0x22a4>  // b.pmore
   289b8:	and	x0, x21, #0x7f
   289bc:	lsl	x0, x0, x20
   289c0:	orr	x22, x22, x0
   289c4:	add	w20, w20, #0x7
   289c8:	tbnz	w21, #7, 28970 <__sanitizer_set_death_callback@@Base+0x2210>
   289cc:	and	w21, w21, #0x40
   289d0:	cmp	w20, #0x3f
   289d4:	mov	x0, #0xffffffffffffffff    	// #-1
   289d8:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
   289dc:	lsl	x20, x0, x20
   289e0:	orr	x20, x22, x20
   289e4:	csel	x22, x20, x22, ne  // ne = any
   289e8:	mov	x0, x22
   289ec:	ldp	x19, x20, [sp, #16]
   289f0:	ldp	x21, x22, [sp, #32]
   289f4:	ldp	x23, x24, [sp, #48]
   289f8:	ldr	x25, [sp, #64]
   289fc:	ldp	x29, x30, [sp], #288
   28a00:	ret
   28a04:	cbnz	w1, 289c4 <__sanitizer_set_death_callback@@Base+0x2264>
   28a08:	ldp	x4, x6, [x19]
   28a0c:	mov	x3, x24
   28a10:	mov	x2, x23
   28a14:	mov	x1, #0xc8                  	// #200
   28a18:	mov	x0, x25
   28a1c:	sub	w5, w5, w6
   28a20:	bl	6700 <snprintf@plt>
   28a24:	ldp	x3, x0, [x19, #40]
   28a28:	mov	x1, x25
   28a2c:	mov	w2, #0x0                   	// #0
   28a30:	blr	x3
   28a34:	mov	w1, #0x1                   	// #1
   28a38:	b	289c4 <__sanitizer_set_death_callback@@Base+0x2264>
   28a3c:	ldp	x4, x5, [x19]
   28a40:	add	x20, sp, #0x58
   28a44:	mov	x0, x20
   28a48:	mov	x1, #0xc8                  	// #200
   28a4c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28a50:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28a54:	add	x3, x3, #0x880
   28a58:	add	x2, x2, #0x890
   28a5c:	sub	w5, w6, w5
   28a60:	bl	6700 <snprintf@plt>
   28a64:	ldp	x3, x0, [x19, #40]
   28a68:	mov	x1, x20
   28a6c:	mov	w2, #0x0                   	// #0
   28a70:	blr	x3
   28a74:	mov	w0, #0x1                   	// #1
   28a78:	str	w0, [x19, #56]
   28a7c:	mov	x0, x22
   28a80:	ldp	x19, x20, [sp, #16]
   28a84:	ldp	x21, x22, [sp, #32]
   28a88:	ldp	x23, x24, [sp, #48]
   28a8c:	ldr	x25, [sp, #64]
   28a90:	ldp	x29, x30, [sp], #288
   28a94:	ret
   28a98:	stp	x29, x30, [sp, #-256]!
   28a9c:	mov	x29, sp
   28aa0:	stp	x19, x20, [sp, #16]
   28aa4:	mov	x19, x0
   28aa8:	ldr	x0, [x0, #24]
   28aac:	ldr	x5, [x19, #16]
   28ab0:	cmp	x0, #0x1
   28ab4:	b.hi	28ad4 <__sanitizer_set_death_callback@@Base+0x2374>  // b.pmore
   28ab8:	ldr	w0, [x19, #56]
   28abc:	mov	w20, #0x0                   	// #0
   28ac0:	cbz	w0, 28b20 <__sanitizer_set_death_callback@@Base+0x23c0>
   28ac4:	mov	w0, w20
   28ac8:	ldp	x19, x20, [sp, #16]
   28acc:	ldp	x29, x30, [sp], #256
   28ad0:	ret
   28ad4:	ldr	w1, [x19, #32]
   28ad8:	sub	x0, x0, #0x2
   28adc:	add	x2, x5, #0x2
   28ae0:	stp	x2, x0, [x19, #16]
   28ae4:	cbz	w1, 28b04 <__sanitizer_set_death_callback@@Base+0x23a4>
   28ae8:	ldrb	w0, [x5]
   28aec:	ldrb	w20, [x5, #1]
   28af0:	bfi	w20, w0, #8, #24
   28af4:	mov	w0, w20
   28af8:	ldp	x19, x20, [sp, #16]
   28afc:	ldp	x29, x30, [sp], #256
   28b00:	ret
   28b04:	ldrb	w0, [x5, #1]
   28b08:	ldrb	w20, [x5]
   28b0c:	bfi	w20, w0, #8, #24
   28b10:	mov	w0, w20
   28b14:	ldp	x19, x20, [sp, #16]
   28b18:	ldp	x29, x30, [sp], #256
   28b1c:	ret
   28b20:	ldp	x4, x1, [x19]
   28b24:	str	x21, [sp, #32]
   28b28:	add	x21, sp, #0x38
   28b2c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28b30:	mov	x0, x21
   28b34:	add	x3, x3, #0x880
   28b38:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28b3c:	add	x2, x2, #0x890
   28b40:	sub	w5, w5, w1
   28b44:	mov	x1, #0xc8                  	// #200
   28b48:	bl	6700 <snprintf@plt>
   28b4c:	ldp	x3, x0, [x19, #40]
   28b50:	mov	x1, x21
   28b54:	mov	w2, #0x0                   	// #0
   28b58:	blr	x3
   28b5c:	mov	w0, #0x1                   	// #1
   28b60:	ldr	x21, [sp, #32]
   28b64:	str	w0, [x19, #56]
   28b68:	mov	w0, w20
   28b6c:	ldp	x19, x20, [sp, #16]
   28b70:	ldp	x29, x30, [sp], #256
   28b74:	ret
   28b78:	stp	x29, x30, [sp, #-256]!
   28b7c:	mov	x29, sp
   28b80:	stp	x19, x20, [sp, #16]
   28b84:	mov	x19, x0
   28b88:	ldr	x0, [x0, #24]
   28b8c:	ldr	x5, [x19, #16]
   28b90:	cmp	x0, #0x3
   28b94:	b.hi	28bb4 <__sanitizer_set_death_callback@@Base+0x2454>  // b.pmore
   28b98:	ldr	w0, [x19, #56]
   28b9c:	mov	w20, #0x0                   	// #0
   28ba0:	cbz	w0, 28bf4 <__sanitizer_set_death_callback@@Base+0x2494>
   28ba4:	mov	w0, w20
   28ba8:	ldp	x19, x20, [sp, #16]
   28bac:	ldp	x29, x30, [sp], #256
   28bb0:	ret
   28bb4:	ldr	w1, [x19, #32]
   28bb8:	sub	x0, x0, #0x4
   28bbc:	add	x2, x5, #0x4
   28bc0:	stp	x2, x0, [x19, #16]
   28bc4:	cbz	w1, 28be0 <__sanitizer_set_death_callback@@Base+0x2480>
   28bc8:	ldr	w20, [x5]
   28bcc:	rev	w20, w20
   28bd0:	mov	w0, w20
   28bd4:	ldp	x19, x20, [sp, #16]
   28bd8:	ldp	x29, x30, [sp], #256
   28bdc:	ret
   28be0:	ldr	w20, [x5]
   28be4:	mov	w0, w20
   28be8:	ldp	x19, x20, [sp, #16]
   28bec:	ldp	x29, x30, [sp], #256
   28bf0:	ret
   28bf4:	ldp	x4, x1, [x19]
   28bf8:	str	x21, [sp, #32]
   28bfc:	add	x21, sp, #0x38
   28c00:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28c04:	mov	x0, x21
   28c08:	add	x3, x3, #0x880
   28c0c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28c10:	add	x2, x2, #0x890
   28c14:	sub	w5, w5, w1
   28c18:	mov	x1, #0xc8                  	// #200
   28c1c:	bl	6700 <snprintf@plt>
   28c20:	ldp	x3, x0, [x19, #40]
   28c24:	mov	x1, x21
   28c28:	mov	w2, #0x0                   	// #0
   28c2c:	blr	x3
   28c30:	mov	w0, #0x1                   	// #1
   28c34:	ldr	x21, [sp, #32]
   28c38:	str	w0, [x19, #56]
   28c3c:	mov	w0, w20
   28c40:	ldp	x19, x20, [sp, #16]
   28c44:	ldp	x29, x30, [sp], #256
   28c48:	ret
   28c4c:	nop
   28c50:	stp	x29, x30, [sp, #-256]!
   28c54:	mov	x29, sp
   28c58:	stp	x19, x20, [sp, #16]
   28c5c:	mov	x19, x0
   28c60:	ldr	x0, [x0, #24]
   28c64:	ldr	x5, [x19, #16]
   28c68:	cmp	x0, #0x7
   28c6c:	b.hi	28c8c <__sanitizer_set_death_callback@@Base+0x252c>  // b.pmore
   28c70:	ldr	w0, [x19, #56]
   28c74:	mov	x20, #0x0                   	// #0
   28c78:	cbz	w0, 28ccc <__sanitizer_set_death_callback@@Base+0x256c>
   28c7c:	mov	x0, x20
   28c80:	ldp	x19, x20, [sp, #16]
   28c84:	ldp	x29, x30, [sp], #256
   28c88:	ret
   28c8c:	ldr	w1, [x19, #32]
   28c90:	sub	x0, x0, #0x8
   28c94:	add	x2, x5, #0x8
   28c98:	stp	x2, x0, [x19, #16]
   28c9c:	cbz	w1, 28cb8 <__sanitizer_set_death_callback@@Base+0x2558>
   28ca0:	ldr	x20, [x5]
   28ca4:	rev	x20, x20
   28ca8:	mov	x0, x20
   28cac:	ldp	x19, x20, [sp, #16]
   28cb0:	ldp	x29, x30, [sp], #256
   28cb4:	ret
   28cb8:	ldr	x20, [x5]
   28cbc:	mov	x0, x20
   28cc0:	ldp	x19, x20, [sp, #16]
   28cc4:	ldp	x29, x30, [sp], #256
   28cc8:	ret
   28ccc:	ldp	x4, x1, [x19]
   28cd0:	str	x21, [sp, #32]
   28cd4:	add	x21, sp, #0x38
   28cd8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28cdc:	mov	x0, x21
   28ce0:	add	x3, x3, #0x880
   28ce4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28ce8:	add	x2, x2, #0x890
   28cec:	sub	w5, w5, w1
   28cf0:	mov	x1, #0xc8                  	// #200
   28cf4:	bl	6700 <snprintf@plt>
   28cf8:	ldp	x3, x0, [x19, #40]
   28cfc:	mov	x1, x21
   28d00:	mov	w2, #0x0                   	// #0
   28d04:	blr	x3
   28d08:	mov	w0, #0x1                   	// #1
   28d0c:	ldr	x21, [sp, #32]
   28d10:	str	w0, [x19, #56]
   28d14:	mov	x0, x20
   28d18:	ldp	x19, x20, [sp, #16]
   28d1c:	ldp	x29, x30, [sp], #256
   28d20:	ret
   28d24:	nop
   28d28:	stp	x29, x30, [sp, #-256]!
   28d2c:	cmp	w1, #0x4
   28d30:	mov	x29, sp
   28d34:	stp	x21, x22, [sp, #32]
   28d38:	b.eq	28e2c <__sanitizer_set_death_callback@@Base+0x26cc>  // b.none
   28d3c:	stp	x19, x20, [sp, #16]
   28d40:	mov	w19, w1
   28d44:	mov	x20, x0
   28d48:	b.gt	28d88 <__sanitizer_set_death_callback@@Base+0x2628>
   28d4c:	cmp	w1, #0x1
   28d50:	b.eq	28e44 <__sanitizer_set_death_callback@@Base+0x26e4>  // b.none
   28d54:	cmp	w1, #0x2
   28d58:	b.ne	28dd8 <__sanitizer_set_death_callback@@Base+0x2678>  // b.any
   28d5c:	ldp	x5, x0, [x0, #16]
   28d60:	cmp	x0, #0x1
   28d64:	b.hi	28dac <__sanitizer_set_death_callback@@Base+0x264c>  // b.pmore
   28d68:	ldr	w0, [x20, #56]
   28d6c:	mov	x21, #0x0                   	// #0
   28d70:	cbz	w0, 28ed4 <__sanitizer_set_death_callback@@Base+0x2774>
   28d74:	ldp	x19, x20, [sp, #16]
   28d78:	mov	x0, x21
   28d7c:	ldp	x21, x22, [sp, #32]
   28d80:	ldp	x29, x30, [sp], #256
   28d84:	ret
   28d88:	cmp	w1, #0x8
   28d8c:	b.ne	28dd8 <__sanitizer_set_death_callback@@Base+0x2678>  // b.any
   28d90:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   28d94:	mov	x21, x0
   28d98:	mov	x0, x21
   28d9c:	ldp	x19, x20, [sp, #16]
   28da0:	ldp	x21, x22, [sp, #32]
   28da4:	ldp	x29, x30, [sp], #256
   28da8:	ret
   28dac:	ldr	w1, [x20, #32]
   28db0:	sub	x0, x0, #0x2
   28db4:	add	x2, x5, #0x2
   28db8:	stp	x2, x0, [x20, #16]
   28dbc:	cbz	w1, 28ebc <__sanitizer_set_death_callback@@Base+0x275c>
   28dc0:	ldrb	w21, [x5]
   28dc4:	ldrb	w0, [x5, #1]
   28dc8:	ldp	x19, x20, [sp, #16]
   28dcc:	orr	w21, w0, w21, lsl #8
   28dd0:	and	x21, x21, #0xffff
   28dd4:	b	28d78 <__sanitizer_set_death_callback@@Base+0x2618>
   28dd8:	ldp	x4, x1, [x20]
   28ddc:	add	x19, sp, #0x38
   28de0:	ldr	x5, [x20, #16]
   28de4:	mov	x0, x19
   28de8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28dec:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28df0:	add	x3, x3, #0x8e8
   28df4:	add	x2, x2, #0x890
   28df8:	sub	w5, w5, w1
   28dfc:	mov	x1, #0xc8                  	// #200
   28e00:	bl	6700 <snprintf@plt>
   28e04:	mov	x21, #0x0                   	// #0
   28e08:	ldp	x3, x0, [x20, #40]
   28e0c:	mov	x1, x19
   28e10:	mov	w2, #0x0                   	// #0
   28e14:	blr	x3
   28e18:	mov	x0, x21
   28e1c:	ldp	x19, x20, [sp, #16]
   28e20:	ldp	x21, x22, [sp, #32]
   28e24:	ldp	x29, x30, [sp], #256
   28e28:	ret
   28e2c:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   28e30:	mov	w21, w0
   28e34:	mov	x0, x21
   28e38:	ldp	x21, x22, [sp, #32]
   28e3c:	ldp	x29, x30, [sp], #256
   28e40:	ret
   28e44:	ldp	x5, x21, [x0, #16]
   28e48:	cbnz	x21, 28e98 <__sanitizer_set_death_callback@@Base+0x2738>
   28e4c:	ldr	w0, [x0, #56]
   28e50:	cbnz	w0, 28d74 <__sanitizer_set_death_callback@@Base+0x2614>
   28e54:	ldp	x4, x1, [x20]
   28e58:	add	x22, sp, #0x38
   28e5c:	mov	x0, x22
   28e60:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28e64:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28e68:	add	x3, x3, #0x880
   28e6c:	add	x2, x2, #0x890
   28e70:	sub	w5, w5, w1
   28e74:	mov	x1, #0xc8                  	// #200
   28e78:	bl	6700 <snprintf@plt>
   28e7c:	ldp	x3, x0, [x20, #40]
   28e80:	mov	x1, x22
   28e84:	mov	w2, #0x0                   	// #0
   28e88:	blr	x3
   28e8c:	str	w19, [x20, #56]
   28e90:	ldp	x19, x20, [sp, #16]
   28e94:	b	28d78 <__sanitizer_set_death_callback@@Base+0x2618>
   28e98:	add	x0, x5, #0x1
   28e9c:	sub	x21, x21, #0x1
   28ea0:	stp	x0, x21, [x20, #16]
   28ea4:	ldrb	w21, [x5]
   28ea8:	ldp	x19, x20, [sp, #16]
   28eac:	mov	x0, x21
   28eb0:	ldp	x21, x22, [sp, #32]
   28eb4:	ldp	x29, x30, [sp], #256
   28eb8:	ret
   28ebc:	ldrb	w21, [x5, #1]
   28ec0:	ldrb	w0, [x5]
   28ec4:	ldp	x19, x20, [sp, #16]
   28ec8:	orr	w21, w0, w21, lsl #8
   28ecc:	and	x21, x21, #0xffff
   28ed0:	b	28d78 <__sanitizer_set_death_callback@@Base+0x2618>
   28ed4:	ldp	x4, x1, [x20]
   28ed8:	add	x19, sp, #0x38
   28edc:	mov	x0, x19
   28ee0:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28ee4:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28ee8:	add	x3, x3, #0x880
   28eec:	add	x2, x2, #0x890
   28ef0:	sub	w5, w5, w1
   28ef4:	mov	x1, #0xc8                  	// #200
   28ef8:	bl	6700 <snprintf@plt>
   28efc:	ldp	x3, x0, [x20, #40]
   28f00:	mov	x1, x19
   28f04:	mov	w2, #0x0                   	// #0
   28f08:	blr	x3
   28f0c:	mov	w0, #0x1                   	// #1
   28f10:	str	w0, [x20, #56]
   28f14:	ldp	x19, x20, [sp, #16]
   28f18:	b	28d78 <__sanitizer_set_death_callback@@Base+0x2618>
   28f1c:	nop
   28f20:	stp	x29, x30, [sp, #-304]!
   28f24:	mov	x29, sp
   28f28:	stp	x21, x22, [sp, #32]
   28f2c:	mov	w22, w2
   28f30:	ldr	x21, [sp, #304]
   28f34:	stp	x19, x20, [sp, #16]
   28f38:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   28f3c:	mov	w19, w0
   28f40:	add	x20, x20, #0xba0
   28f44:	stp	x23, x24, [sp, #48]
   28f48:	mov	x24, x5
   28f4c:	mov	x23, x7
   28f50:	stp	x25, x26, [sp, #64]
   28f54:	mov	w26, w3
   28f58:	mov	w25, w4
   28f5c:	stp	x27, x28, [sp, #80]
   28f60:	mov	x28, x1
   28f64:	mov	x27, x6
   28f68:	mov	x0, x21
   28f6c:	mov	x2, #0x10                  	// #16
   28f70:	mov	w1, #0x0                   	// #0
   28f74:	bl	6530 <__asan_internal_memset@plt>
   28f78:	cmp	w19, #0x20
   28f7c:	b.hi	28fa0 <__sanitizer_set_death_callback@@Base+0x2840>  // b.pmore
   28f80:	cbz	w19, 29264 <__sanitizer_set_death_callback@@Base+0x2b04>
   28f84:	sub	w19, w19, #0x1
   28f88:	cmp	w19, #0x1f
   28f8c:	b.hi	29264 <__sanitizer_set_death_callback@@Base+0x2b04>  // b.pmore
   28f90:	ldrh	w0, [x20, w19, uxtw #1]
   28f94:	adr	x1, 28fa0 <__sanitizer_set_death_callback@@Base+0x2840>
   28f98:	add	x0, x1, w0, sxth #2
   28f9c:	br	x0
   28fa0:	mov	w0, #0x1f20                	// #7968
   28fa4:	cmp	w19, w0
   28fa8:	b.eq	29410 <__sanitizer_set_death_callback@@Base+0x2cb0>  // b.none
   28fac:	b.ls	29010 <__sanitizer_set_death_callback@@Base+0x28b0>  // b.plast
   28fb0:	mov	w0, #0x1f21                	// #7969
   28fb4:	cmp	w19, w0
   28fb8:	b.ne	29264 <__sanitizer_set_death_callback@@Base+0x2b04>  // b.any
   28fbc:	mov	x0, x28
   28fc0:	cbz	w22, 29404 <__sanitizer_set_death_callback@@Base+0x2ca4>
   28fc4:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   28fc8:	cbz	x23, 294b0 <__sanitizer_set_death_callback@@Base+0x2d50>
   28fcc:	ldr	x1, [x23, #112]
   28fd0:	cmp	x1, x0
   28fd4:	b.ls	295bc <__sanitizer_set_death_callback@@Base+0x2e5c>  // b.plast
   28fd8:	ldr	x1, [x23, #104]
   28fdc:	mov	w2, #0x4                   	// #4
   28fe0:	mov	w19, #0x1                   	// #1
   28fe4:	str	w2, [x21]
   28fe8:	add	x0, x1, x0
   28fec:	str	x0, [x21, #8]
   28ff0:	mov	w0, w19
   28ff4:	ldp	x19, x20, [sp, #16]
   28ff8:	ldp	x21, x22, [sp, #32]
   28ffc:	ldp	x23, x24, [sp, #48]
   29000:	ldp	x25, x26, [sp, #64]
   29004:	ldp	x27, x28, [sp, #80]
   29008:	ldp	x29, x30, [sp], #304
   2900c:	ret
   29010:	mov	w0, #0xffffe0ff            	// #-7937
   29014:	add	w19, w19, w0
   29018:	cmp	w19, #0x1
   2901c:	mov	w0, #0x8                   	// #8
   29020:	b.hi	29264 <__sanitizer_set_death_callback@@Base+0x2b04>  // b.pmore
   29024:	str	w0, [x21]
   29028:	mov	x0, x28
   2902c:	mov	w19, #0x1                   	// #1
   29030:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   29034:	str	x0, [x21, #8]
   29038:	mov	w0, w19
   2903c:	ldp	x19, x20, [sp, #16]
   29040:	ldp	x21, x22, [sp, #32]
   29044:	ldp	x23, x24, [sp, #48]
   29048:	ldp	x25, x26, [sp, #64]
   2904c:	ldp	x27, x28, [sp, #80]
   29050:	ldp	x29, x30, [sp], #304
   29054:	ret
   29058:	ldp	x5, x20, [x28, #16]
   2905c:	mov	w0, #0x2                   	// #2
   29060:	str	w0, [x21]
   29064:	cbnz	x20, 290ac <__sanitizer_set_death_callback@@Base+0x294c>
   29068:	ldr	w0, [x28, #56]
   2906c:	cbz	w0, 293bc <__sanitizer_set_death_callback@@Base+0x2c5c>
   29070:	mov	w19, #0x1                   	// #1
   29074:	nop
   29078:	str	x20, [x21, #8]
   2907c:	mov	w0, w19
   29080:	ldp	x19, x20, [sp, #16]
   29084:	ldp	x21, x22, [sp, #32]
   29088:	ldp	x23, x24, [sp, #48]
   2908c:	ldp	x25, x26, [sp, #64]
   29090:	ldp	x27, x28, [sp, #80]
   29094:	ldp	x29, x30, [sp], #304
   29098:	ret
   2909c:	ldp	x5, x20, [x28, #16]
   290a0:	mov	w0, #0x5                   	// #5
   290a4:	str	w0, [x21]
   290a8:	cbz	x20, 29068 <__sanitizer_set_death_callback@@Base+0x2908>
   290ac:	sub	x20, x20, #0x1
   290b0:	add	x0, x5, #0x1
   290b4:	stp	x0, x20, [x28, #16]
   290b8:	mov	w19, #0x1                   	// #1
   290bc:	ldrb	w20, [x5]
   290c0:	b	29078 <__sanitizer_set_death_callback@@Base+0x2918>
   290c4:	mov	w0, #0x3                   	// #3
   290c8:	str	w0, [x21]
   290cc:	mov	w19, #0x1                   	// #1
   290d0:	mov	x0, x28
   290d4:	bl	28930 <__sanitizer_set_death_callback@@Base+0x21d0>
   290d8:	str	x0, [x21, #8]
   290dc:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   290e0:	mov	w0, #0x9                   	// #9
   290e4:	str	w0, [x21]
   290e8:	mov	x0, x28
   290ec:	mov	w19, #0x1                   	// #1
   290f0:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   290f4:	str	x0, [x21, #8]
   290f8:	mov	w0, w19
   290fc:	ldp	x19, x20, [sp, #16]
   29100:	ldp	x21, x22, [sp, #32]
   29104:	ldp	x23, x24, [sp, #48]
   29108:	ldp	x25, x26, [sp, #64]
   2910c:	ldp	x27, x28, [sp, #80]
   29110:	ldp	x29, x30, [sp], #304
   29114:	ret
   29118:	ldp	x6, x0, [x28, #16]
   2911c:	mov	w1, #0xa                   	// #10
   29120:	str	w1, [x21]
   29124:	cbnz	x0, 29440 <__sanitizer_set_death_callback@@Base+0x2ce0>
   29128:	ldr	w1, [x28, #56]
   2912c:	cbz	w1, 2952c <__sanitizer_set_death_callback@@Base+0x2dcc>
   29130:	mov	w19, #0x1                   	// #1
   29134:	stp	x6, x0, [x28, #16]
   29138:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   2913c:	mov	w0, #0xa                   	// #10
   29140:	str	w0, [x21]
   29144:	mov	x0, x28
   29148:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2914c:	ldr	x1, [x28, #24]
   29150:	cmp	x0, x1
   29154:	b.ls	29480 <__sanitizer_set_death_callback@@Base+0x2d20>  // b.plast
   29158:	ldr	w19, [x28, #56]
   2915c:	cbz	w19, 29374 <__sanitizer_set_death_callback@@Base+0x2c14>
   29160:	mov	w19, #0x0                   	// #0
   29164:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29168:	ldp	x20, x1, [x28, #16]
   2916c:	mov	w0, #0x4                   	// #4
   29170:	str	w0, [x21]
   29174:	mov	x0, x20
   29178:	bl	6800 <__asan_internal_strnlen@plt>
   2917c:	ldr	x1, [x28, #24]
   29180:	add	x0, x0, #0x1
   29184:	cmp	x0, x1
   29188:	b.ls	294bc <__sanitizer_set_death_callback@@Base+0x2d5c>  // b.plast
   2918c:	ldr	w19, [x28, #56]
   29190:	cbz	w19, 294dc <__sanitizer_set_death_callback@@Base+0x2d7c>
   29194:	mov	x20, #0x0                   	// #0
   29198:	mov	w19, #0x0                   	// #0
   2919c:	str	x20, [x21, #8]
   291a0:	b	2907c <__sanitizer_set_death_callback@@Base+0x291c>
   291a4:	mov	w0, #0x2                   	// #2
   291a8:	str	w0, [x21]
   291ac:	mov	w19, #0x1                   	// #1
   291b0:	mov	x0, x28
   291b4:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   291b8:	mov	w0, w0
   291bc:	str	x0, [x21, #8]
   291c0:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   291c4:	mov	w0, #0x2                   	// #2
   291c8:	str	w0, [x21]
   291cc:	mov	w19, #0x1                   	// #1
   291d0:	mov	x0, x28
   291d4:	bl	28a98 <__sanitizer_set_death_callback@@Base+0x2338>
   291d8:	and	x0, x0, #0xffff
   291dc:	str	x0, [x21, #8]
   291e0:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   291e4:	mov	w0, #0x2                   	// #2
   291e8:	b	290e4 <__sanitizer_set_death_callback@@Base+0x2984>
   291ec:	mov	w0, #0xa                   	// #10
   291f0:	str	w0, [x21]
   291f4:	mov	x0, x28
   291f8:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   291fc:	mov	w2, w0
   29200:	ldr	x1, [x28, #24]
   29204:	cmp	x1, w0, uxtw
   29208:	b.cc	29158 <__sanitizer_set_death_callback@@Base+0x29f8>  // b.lo, b.ul, b.last
   2920c:	ldr	x0, [x28, #16]
   29210:	sub	x1, x1, x2
   29214:	mov	w19, #0x1                   	// #1
   29218:	add	x2, x0, x2
   2921c:	stp	x2, x1, [x28, #16]
   29220:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29224:	mov	w0, #0xa                   	// #10
   29228:	str	w0, [x21]
   2922c:	mov	x0, x28
   29230:	bl	28a98 <__sanitizer_set_death_callback@@Base+0x2338>
   29234:	and	x2, x0, #0xffff
   29238:	ldr	x1, [x28, #24]
   2923c:	cmp	x1, w0, uxth
   29240:	b.cc	29158 <__sanitizer_set_death_callback@@Base+0x29f8>  // b.lo, b.ul, b.last
   29244:	b	2920c <__sanitizer_set_death_callback@@Base+0x2aac>
   29248:	mov	w19, #0x1                   	// #1
   2924c:	str	w19, [x21]
   29250:	mov	w1, w25
   29254:	mov	x0, x28
   29258:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   2925c:	str	x0, [x21, #8]
   29260:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29264:	ldp	x4, x1, [x28]
   29268:	add	x20, sp, #0x68
   2926c:	ldr	x5, [x28, #16]
   29270:	mov	x0, x20
   29274:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29278:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2927c:	add	x3, x3, #0x950
   29280:	add	x2, x2, #0x890
   29284:	sub	w5, w5, w1
   29288:	mov	x1, #0xc8                  	// #200
   2928c:	bl	6700 <snprintf@plt>
   29290:	mov	w19, #0x0                   	// #0
   29294:	ldp	x3, x0, [x28, #40]
   29298:	mov	x1, x20
   2929c:	mov	w2, #0x0                   	// #0
   292a0:	blr	x3
   292a4:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   292a8:	mov	x0, #0x1                   	// #1
   292ac:	mov	w1, #0x2                   	// #2
   292b0:	mov	w19, w0
   292b4:	str	w1, [x21]
   292b8:	str	x0, [x21, #8]
   292bc:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   292c0:	mov	w0, #0xb                   	// #11
   292c4:	b	29140 <__sanitizer_set_death_callback@@Base+0x29e0>
   292c8:	mov	w0, #0x8                   	// #8
   292cc:	str	w0, [x21]
   292d0:	mov	x0, x28
   292d4:	cbz	w22, 29434 <__sanitizer_set_death_callback@@Base+0x2cd4>
   292d8:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   292dc:	mov	w19, #0x1                   	// #1
   292e0:	str	x0, [x21, #8]
   292e4:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   292e8:	mov	x0, x28
   292ec:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   292f0:	mov	w19, w0
   292f4:	b	28f68 <__sanitizer_set_death_callback@@Base+0x2808>
   292f8:	mov	w0, #0x5                   	// #5
   292fc:	b	29024 <__sanitizer_set_death_callback@@Base+0x28c4>
   29300:	mov	w0, #0x6                   	// #6
   29304:	str	w0, [x21]
   29308:	cmp	w26, #0x2
   2930c:	b.ne	292d0 <__sanitizer_set_death_callback@@Base+0x2b70>  // b.any
   29310:	mov	w1, w25
   29314:	mov	x0, x28
   29318:	mov	w19, #0x1                   	// #1
   2931c:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   29320:	str	x0, [x21, #8]
   29324:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29328:	mov	w0, #0x2                   	// #2
   2932c:	b	29024 <__sanitizer_set_death_callback@@Base+0x28c4>
   29330:	mov	w0, #0x5                   	// #5
   29334:	b	290e4 <__sanitizer_set_death_callback@@Base+0x2984>
   29338:	mov	w0, #0x5                   	// #5
   2933c:	b	291a8 <__sanitizer_set_death_callback@@Base+0x2a48>
   29340:	mov	w0, #0x5                   	// #5
   29344:	b	291c8 <__sanitizer_set_death_callback@@Base+0x2a68>
   29348:	mov	x0, x28
   2934c:	cbz	w22, 29498 <__sanitizer_set_death_callback@@Base+0x2d38>
   29350:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   29354:	cmp	x0, x27
   29358:	b.cs	29578 <__sanitizer_set_death_callback@@Base+0x2e18>  // b.hs, b.nlast
   2935c:	add	x24, x24, x0
   29360:	mov	w19, #0x1                   	// #1
   29364:	mov	w0, #0x4                   	// #4
   29368:	str	w0, [x21]
   2936c:	str	x24, [x21, #8]
   29370:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29374:	ldp	x4, x1, [x28]
   29378:	add	x20, sp, #0x68
   2937c:	ldr	x5, [x28, #16]
   29380:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29384:	mov	x0, x20
   29388:	add	x3, x3, #0x880
   2938c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29390:	sub	w5, w5, w1
   29394:	add	x2, x2, #0x890
   29398:	mov	x1, #0xc8                  	// #200
   2939c:	bl	6700 <snprintf@plt>
   293a0:	ldp	x3, x0, [x28, #40]
   293a4:	mov	x1, x20
   293a8:	mov	w2, #0x0                   	// #0
   293ac:	blr	x3
   293b0:	mov	w0, #0x1                   	// #1
   293b4:	str	w0, [x28, #56]
   293b8:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   293bc:	ldp	x4, x1, [x28]
   293c0:	add	x19, sp, #0x68
   293c4:	mov	x0, x19
   293c8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   293cc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   293d0:	add	x3, x3, #0x880
   293d4:	add	x2, x2, #0x890
   293d8:	sub	w5, w5, w1
   293dc:	mov	x1, #0xc8                  	// #200
   293e0:	bl	6700 <snprintf@plt>
   293e4:	ldp	x3, x0, [x28, #40]
   293e8:	mov	x1, x19
   293ec:	mov	w2, #0x0                   	// #0
   293f0:	mov	w19, #0x1                   	// #1
   293f4:	blr	x3
   293f8:	mov	w0, #0x1                   	// #1
   293fc:	str	w0, [x28, #56]
   29400:	b	29078 <__sanitizer_set_death_callback@@Base+0x2918>
   29404:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   29408:	mov	w0, w0
   2940c:	b	28fc8 <__sanitizer_set_death_callback@@Base+0x2868>
   29410:	mov	x0, x28
   29414:	cbz	w22, 294a4 <__sanitizer_set_death_callback@@Base+0x2d44>
   29418:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   2941c:	str	x0, [x21, #8]
   29420:	cbz	x23, 294b0 <__sanitizer_set_death_callback@@Base+0x2d50>
   29424:	mov	w0, #0x7                   	// #7
   29428:	mov	w19, #0x1                   	// #1
   2942c:	str	w0, [x21]
   29430:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29434:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   29438:	mov	w0, w0
   2943c:	b	292dc <__sanitizer_set_death_callback@@Base+0x2b7c>
   29440:	sub	x0, x0, #0x1
   29444:	add	x5, x6, #0x1
   29448:	stp	x5, x0, [x28, #16]
   2944c:	ldrb	w6, [x6]
   29450:	cmp	x6, x0
   29454:	b.ls	295dc <__sanitizer_set_death_callback@@Base+0x2e7c>  // b.plast
   29458:	ldr	w19, [x28, #56]
   2945c:	cbnz	w19, 29160 <__sanitizer_set_death_callback@@Base+0x2a00>
   29460:	ldp	x4, x1, [x28]
   29464:	add	x20, sp, #0x68
   29468:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2946c:	mov	x0, x20
   29470:	add	x3, x3, #0x880
   29474:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29478:	sub	w5, w5, w1
   2947c:	b	29394 <__sanitizer_set_death_callback@@Base+0x2c34>
   29480:	ldr	x2, [x28, #16]
   29484:	sub	x1, x1, x0
   29488:	mov	w19, #0x1                   	// #1
   2948c:	add	x0, x2, x0
   29490:	stp	x0, x1, [x28, #16]
   29494:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   29498:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   2949c:	mov	w0, w0
   294a0:	b	29354 <__sanitizer_set_death_callback@@Base+0x2bf4>
   294a4:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   294a8:	mov	w0, w0
   294ac:	b	2941c <__sanitizer_set_death_callback@@Base+0x2cbc>
   294b0:	mov	w19, #0x1                   	// #1
   294b4:	str	wzr, [x21]
   294b8:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   294bc:	ldr	x2, [x28, #16]
   294c0:	sub	x1, x1, x0
   294c4:	cmp	x20, #0x0
   294c8:	add	x0, x2, x0
   294cc:	stp	x0, x1, [x28, #16]
   294d0:	cset	w19, ne  // ne = any
   294d4:	str	x20, [x21, #8]
   294d8:	b	2907c <__sanitizer_set_death_callback@@Base+0x291c>
   294dc:	ldp	x4, x1, [x28]
   294e0:	add	x20, sp, #0x68
   294e4:	ldr	x5, [x28, #16]
   294e8:	mov	x0, x20
   294ec:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   294f0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   294f4:	add	x3, x3, #0x880
   294f8:	add	x2, x2, #0x890
   294fc:	sub	w5, w5, w1
   29500:	mov	x1, #0xc8                  	// #200
   29504:	bl	6700 <snprintf@plt>
   29508:	ldp	x3, x0, [x28, #40]
   2950c:	mov	x1, x20
   29510:	mov	w2, #0x0                   	// #0
   29514:	mov	x20, #0x0                   	// #0
   29518:	blr	x3
   2951c:	mov	w0, #0x1                   	// #1
   29520:	str	w0, [x28, #56]
   29524:	str	x20, [x21, #8]
   29528:	b	2907c <__sanitizer_set_death_callback@@Base+0x291c>
   2952c:	ldp	x4, x5, [x28]
   29530:	add	x19, sp, #0x68
   29534:	mov	x1, #0xc8                  	// #200
   29538:	mov	x0, x19
   2953c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29540:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29544:	add	x3, x3, #0x880
   29548:	add	x2, x2, #0x890
   2954c:	sub	w5, w6, w5
   29550:	bl	6700 <snprintf@plt>
   29554:	ldp	x3, x0, [x28, #40]
   29558:	mov	x1, x19
   2955c:	mov	w2, #0x0                   	// #0
   29560:	blr	x3
   29564:	mov	w0, #0x1                   	// #1
   29568:	str	w0, [x28, #56]
   2956c:	ldr	x6, [x28, #16]
   29570:	ldr	x0, [x28, #24]
   29574:	b	29130 <__sanitizer_set_death_callback@@Base+0x29d0>
   29578:	ldp	x4, x1, [x28]
   2957c:	add	x19, sp, #0x68
   29580:	ldr	x5, [x28, #16]
   29584:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29588:	mov	x0, x19
   2958c:	add	x3, x3, #0x908
   29590:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29594:	sub	w5, w5, w1
   29598:	add	x2, x2, #0x890
   2959c:	mov	x1, #0xc8                  	// #200
   295a0:	bl	6700 <snprintf@plt>
   295a4:	ldp	x3, x0, [x28, #40]
   295a8:	mov	x1, x19
   295ac:	mov	w2, #0x0                   	// #0
   295b0:	mov	w19, #0x0                   	// #0
   295b4:	blr	x3
   295b8:	b	28ff0 <__sanitizer_set_death_callback@@Base+0x2890>
   295bc:	add	x19, sp, #0x68
   295c0:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   295c4:	mov	x0, x19
   295c8:	add	x3, x3, #0x928
   295cc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   295d0:	ldp	x4, x1, [x28]
   295d4:	ldr	x5, [x28, #16]
   295d8:	b	29594 <__sanitizer_set_death_callback@@Base+0x2e34>
   295dc:	sub	x0, x0, x6
   295e0:	add	x6, x5, x6
   295e4:	b	29130 <__sanitizer_set_death_callback@@Base+0x29d0>
   295e8:	sub	sp, sp, #0x190
   295ec:	stp	x29, x30, [sp, #16]
   295f0:	add	x29, sp, #0x10
   295f4:	stp	x27, x28, [sp, #96]
   295f8:	mov	x27, x0
   295fc:	ldr	x0, [x1, #16]
   29600:	stp	x21, x22, [sp, #48]
   29604:	stp	x25, x26, [sp, #80]
   29608:	cmp	x0, x2
   2960c:	mov	x25, x4
   29610:	str	x3, [sp, #112]
   29614:	b.hi	297b8 <__sanitizer_set_death_callback@@Base+0x3058>  // b.pmore
   29618:	stp	x19, x20, [sp, #32]
   2961c:	mov	x19, x1
   29620:	sub	x4, x2, x0
   29624:	ldr	x1, [x1, #8]
   29628:	cmp	x4, x1
   2962c:	b.cs	297b4 <__sanitizer_set_death_callback@@Base+0x3054>  // b.hs, b.nlast
   29630:	ldr	x3, [x19]
   29634:	add	x0, x0, x1
   29638:	sub	x1, x0, x2
   2963c:	ldr	w5, [x27, #120]
   29640:	add	x2, x3, x4
   29644:	stp	x2, x1, [sp, #152]
   29648:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2964c:	ldr	x6, [x27, #56]
   29650:	add	x3, x3, #0x998
   29654:	ldr	x1, [sp, #112]
   29658:	add	x21, sp, #0x88
   2965c:	mov	x0, x21
   29660:	stp	x3, x6, [sp, #136]
   29664:	str	w5, [sp, #168]
   29668:	str	x1, [sp, #176]
   2966c:	str	x25, [sp, #184]
   29670:	str	wzr, [sp, #192]
   29674:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   29678:	mov	x2, x0
   2967c:	cbz	x0, 29804 <__sanitizer_set_death_callback@@Base+0x30a4>
   29680:	ldr	x3, [sp, #112]
   29684:	mov	x4, x25
   29688:	add	x1, x19, #0x60
   2968c:	add	x0, x19, #0x58
   29690:	bl	28698 <__sanitizer_set_death_callback@@Base+0x1f38>
   29694:	mov	x26, x0
   29698:	cbz	x0, 29874 <__sanitizer_set_death_callback@@Base+0x3114>
   2969c:	ldr	x0, [x0, #16]
   296a0:	cbz	x0, 29874 <__sanitizer_set_death_callback@@Base+0x3114>
   296a4:	add	x20, sp, #0xc8
   296a8:	mov	x28, #0x0                   	// #0
   296ac:	add	x0, x20, #0x8
   296b0:	mov	x22, #0x0                   	// #0
   296b4:	stp	x23, x24, [sp, #64]
   296b8:	mov	w23, #0x2007                	// #8199
   296bc:	str	x0, [sp, #120]
   296c0:	b	296e0 <__sanitizer_set_death_callback@@Base+0x2f80>
   296c4:	cmp	w2, #0x3
   296c8:	b.ne	296d0 <__sanitizer_set_death_callback@@Base+0x2f70>  // b.any
   296cc:	cbz	x22, 297f0 <__sanitizer_set_death_callback@@Base+0x3090>
   296d0:	ldr	x0, [x26, #16]
   296d4:	add	x28, x28, #0x1
   296d8:	cmp	x0, x28
   296dc:	b.ls	29790 <__sanitizer_set_death_callback@@Base+0x3030>  // b.plast
   296e0:	ldr	x8, [x26, #24]
   296e4:	lsl	x24, x28, #3
   296e8:	ldp	x5, x6, [x27, #104]
   296ec:	add	x8, x8, x24
   296f0:	ldp	w3, w2, [x19, #40]
   296f4:	mov	x1, x21
   296f8:	ldr	w4, [x19, #48]
   296fc:	ldr	w0, [x8, #4]
   29700:	ldr	x7, [x27, #8]
   29704:	str	x20, [sp]
   29708:	bl	28f20 <__sanitizer_set_death_callback@@Base+0x27c0>
   2970c:	cbz	w0, 29864 <__sanitizer_set_death_callback@@Base+0x3104>
   29710:	ldr	x0, [x26, #24]
   29714:	add	x1, x0, x24
   29718:	ldr	w2, [x0, x24]
   2971c:	cmp	w2, #0x47
   29720:	b.eq	29754 <__sanitizer_set_death_callback@@Base+0x2ff4>  // b.none
   29724:	b.ls	296c4 <__sanitizer_set_death_callback@@Base+0x2f64>  // b.plast
   29728:	cmp	w2, #0x6e
   2972c:	b.eq	29738 <__sanitizer_set_death_callback@@Base+0x2fd8>  // b.none
   29730:	cmp	w2, w23
   29734:	b.ne	296d0 <__sanitizer_set_death_callback@@Base+0x2f70>  // b.any
   29738:	ldr	w0, [sp, #200]
   2973c:	cmp	w0, #0x4
   29740:	b.ne	296d0 <__sanitizer_set_death_callback@@Base+0x2f70>  // b.any
   29744:	ldp	x19, x20, [sp, #32]
   29748:	ldp	x23, x24, [sp, #64]
   2974c:	ldr	x22, [sp, #208]
   29750:	b	297d4 <__sanitizer_set_death_callback@@Base+0x3074>
   29754:	ldr	w0, [x1, #4]
   29758:	cmp	w0, #0x20
   2975c:	b.eq	296d0 <__sanitizer_set_death_callback@@Base+0x2f70>  // b.none
   29760:	ldp	x4, x3, [sp, #112]
   29764:	mov	x5, x25
   29768:	mov	x2, x20
   2976c:	mov	x1, x19
   29770:	mov	x0, x27
   29774:	add	x28, x28, #0x1
   29778:	bl	29880 <__sanitizer_set_death_callback@@Base+0x3120>
   2977c:	cmp	x0, #0x0
   29780:	csel	x22, x22, x0, eq  // eq = none
   29784:	ldr	x0, [x26, #16]
   29788:	cmp	x0, x28
   2978c:	b.hi	296e0 <__sanitizer_set_death_callback@@Base+0x2f80>  // b.pmore
   29790:	ldp	x19, x20, [sp, #32]
   29794:	ldp	x23, x24, [sp, #64]
   29798:	mov	x0, x22
   2979c:	ldp	x29, x30, [sp, #16]
   297a0:	ldp	x21, x22, [sp, #48]
   297a4:	ldp	x25, x26, [sp, #80]
   297a8:	ldp	x27, x28, [sp, #96]
   297ac:	add	sp, sp, #0x190
   297b0:	ret
   297b4:	ldp	x19, x20, [sp, #32]
   297b8:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   297bc:	ldr	x3, [sp, #112]
   297c0:	mov	x0, x25
   297c4:	add	x1, x1, #0x968
   297c8:	mov	w2, #0x0                   	// #0
   297cc:	mov	x22, #0x0                   	// #0
   297d0:	blr	x3
   297d4:	mov	x0, x22
   297d8:	ldp	x29, x30, [sp, #16]
   297dc:	ldp	x21, x22, [sp, #48]
   297e0:	ldp	x25, x26, [sp, #80]
   297e4:	ldp	x27, x28, [sp, #96]
   297e8:	add	sp, sp, #0x190
   297ec:	ret
   297f0:	ldr	w0, [sp, #200]
   297f4:	ldr	x22, [sp, #208]
   297f8:	cmp	w0, #0x4
   297fc:	csel	x22, x22, xzr, eq  // eq = none
   29800:	b	296d0 <__sanitizer_set_death_callback@@Base+0x2f70>
   29804:	ldp	x4, x1, [sp, #136]
   29808:	add	x19, sp, #0xc8
   2980c:	ldr	x5, [sp, #152]
   29810:	mov	x0, x19
   29814:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29818:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2981c:	add	x3, x3, #0x9a8
   29820:	add	x2, x2, #0x890
   29824:	sub	w5, w5, w1
   29828:	mov	x1, #0xc8                  	// #200
   2982c:	bl	6700 <snprintf@plt>
   29830:	mov	x22, #0x0                   	// #0
   29834:	ldp	x3, x0, [sp, #176]
   29838:	mov	x1, x19
   2983c:	mov	w2, #0x0                   	// #0
   29840:	blr	x3
   29844:	mov	x0, x22
   29848:	ldp	x29, x30, [sp, #16]
   2984c:	ldp	x19, x20, [sp, #32]
   29850:	ldp	x21, x22, [sp, #48]
   29854:	ldp	x25, x26, [sp, #80]
   29858:	ldp	x27, x28, [sp, #96]
   2985c:	add	sp, sp, #0x190
   29860:	ret
   29864:	mov	x22, #0x0                   	// #0
   29868:	ldp	x19, x20, [sp, #32]
   2986c:	ldp	x23, x24, [sp, #64]
   29870:	b	29798 <__sanitizer_set_death_callback@@Base+0x3038>
   29874:	mov	x22, #0x0                   	// #0
   29878:	ldp	x19, x20, [sp, #32]
   2987c:	b	297d4 <__sanitizer_set_death_callback@@Base+0x3074>
   29880:	ldr	w2, [x2]
   29884:	mov	x6, x3
   29888:	mov	x7, x0
   2988c:	mov	x3, x4
   29890:	cmp	w2, #0x6
   29894:	mov	x4, x5
   29898:	b.eq	29900 <__sanitizer_set_death_callback@@Base+0x31a0>  // b.none
   2989c:	cmp	w2, #0x2
   298a0:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   298a4:	b.eq	29958 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.none
   298a8:	cmp	w2, #0x7
   298ac:	b.ne	298f8 <__sanitizer_set_death_callback@@Base+0x3198>  // b.any
   298b0:	ldr	x0, [x0, #8]
   298b4:	mov	x5, #0x0                   	// #0
   298b8:	ldr	x2, [x6]
   298bc:	ldp	x9, x7, [x0, #40]
   298c0:	add	x6, x7, x5
   298c4:	cmp	x7, x5
   298c8:	b.ls	298f8 <__sanitizer_set_death_callback@@Base+0x3198>  // b.plast
   298cc:	lsr	x6, x6, #1
   298d0:	ldr	x1, [x9, x6, lsl #3]
   298d4:	ldr	x8, [x1, #24]
   298d8:	cmp	x2, x8
   298dc:	b.cc	29950 <__sanitizer_set_death_callback@@Base+0x31f0>  // b.lo, b.ul, b.last
   298e0:	ldr	x10, [x1, #32]
   298e4:	add	x5, x6, #0x1
   298e8:	cmp	x2, x10
   298ec:	b.cs	298c0 <__sanitizer_set_death_callback@@Base+0x3160>  // b.hs, b.nlast
   298f0:	sub	x2, x2, x8
   298f4:	b	295e8 <__sanitizer_set_death_callback@@Base+0x2e88>
   298f8:	mov	x0, #0x0                   	// #0
   298fc:	ret
   29900:	ldp	x9, x5, [x7, #40]
   29904:	mov	x0, #0x0                   	// #0
   29908:	ldr	x2, [x6]
   2990c:	add	x6, x5, x0
   29910:	cmp	x5, x0
   29914:	b.ls	298f8 <__sanitizer_set_death_callback@@Base+0x3198>  // b.plast
   29918:	lsr	x6, x6, #1
   2991c:	ldr	x1, [x9, x6, lsl #3]
   29920:	ldr	x8, [x1, #24]
   29924:	cmp	x2, x8
   29928:	b.cc	29948 <__sanitizer_set_death_callback@@Base+0x31e8>  // b.lo, b.ul, b.last
   2992c:	ldr	x10, [x1, #32]
   29930:	add	x0, x6, #0x1
   29934:	cmp	x2, x10
   29938:	b.cs	2990c <__sanitizer_set_death_callback@@Base+0x31ac>  // b.hs, b.nlast
   2993c:	sub	x2, x2, x8
   29940:	mov	x0, x7
   29944:	b	295e8 <__sanitizer_set_death_callback@@Base+0x2e88>
   29948:	mov	x5, x6
   2994c:	b	2990c <__sanitizer_set_death_callback@@Base+0x31ac>
   29950:	mov	x7, x6
   29954:	b	298c0 <__sanitizer_set_death_callback@@Base+0x3160>
   29958:	ldr	x2, [x6]
   2995c:	b	295e8 <__sanitizer_set_death_callback@@Base+0x2e88>
   29960:	sub	sp, sp, #0x130
   29964:	stp	x29, x30, [sp, #48]
   29968:	add	x29, sp, #0x30
   2996c:	stp	x23, x24, [sp, #96]
   29970:	ldr	x24, [sp, #328]
   29974:	stp	x27, x28, [sp, #128]
   29978:	add	x27, sp, #0xf0
   2997c:	ldr	x28, [sp, #304]
   29980:	stp	x19, x20, [sp, #64]
   29984:	mov	x19, x2
   29988:	mov	x20, x3
   2998c:	stp	x21, x22, [sp, #80]
   29990:	mov	x22, x4
   29994:	stp	x25, x26, [sp, #112]
   29998:	mov	x26, x24
   2999c:	stp	x1, x6, [sp, #200]
   299a0:	stp	x0, x5, [sp, #216]
   299a4:	str	w7, [sp, #236]
   299a8:	mov	x25, x26
   299ac:	add	x0, x26, #0x60
   299b0:	str	x0, [sp, #184]
   299b4:	ldr	x0, [x19, #24]
   299b8:	cbz	x0, 29cfc <__sanitizer_set_death_callback@@Base+0x359c>
   299bc:	mov	x0, x19
   299c0:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   299c4:	mov	x2, x0
   299c8:	cbz	x0, 29cfc <__sanitizer_set_death_callback@@Base+0x359c>
   299cc:	ldp	x3, x4, [sp, #312]
   299d0:	add	x0, x25, #0x58
   299d4:	ldr	x1, [sp, #184]
   299d8:	bl	28698 <__sanitizer_set_death_callback@@Base+0x1f38>
   299dc:	mov	x23, x0
   299e0:	cbz	x0, 29bf8 <__sanitizer_set_death_callback@@Base+0x3498>
   299e4:	ldr	x0, [sp, #344]
   299e8:	cbz	x0, 299f8 <__sanitizer_set_death_callback@@Base+0x3298>
   299ec:	mov	x1, x0
   299f0:	ldr	w0, [x23, #8]
   299f4:	str	w0, [x1]
   299f8:	ldr	x0, [x23, #16]
   299fc:	cbz	x0, 29ba8 <__sanitizer_set_death_callback@@Base+0x3448>
   29a00:	mov	x26, #0x0                   	// #0
   29a04:	mov	x21, #0x0                   	// #0
   29a08:	str	wzr, [sp, #152]
   29a0c:	str	wzr, [sp, #160]
   29a10:	stp	xzr, xzr, [sp, #168]
   29a14:	str	wzr, [sp, #192]
   29a18:	str	wzr, [sp, #232]
   29a1c:	ldr	x2, [x23, #24]
   29a20:	b	29a58 <__sanitizer_set_death_callback@@Base+0x32f8>
   29a24:	cmp	w0, #0x10
   29a28:	b.eq	29c48 <__sanitizer_set_death_callback@@Base+0x34e8>  // b.none
   29a2c:	cmp	w0, #0x11
   29a30:	b.ne	29c1c <__sanitizer_set_death_callback@@Base+0x34bc>  // b.any
   29a34:	ldr	w0, [sp, #240]
   29a38:	cmp	w0, #0x1
   29a3c:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29a40:	ldr	x21, [sp, #248]
   29a44:	str	w0, [sp, #192]
   29a48:	ldr	x0, [x23, #16]
   29a4c:	add	x26, x26, #0x1
   29a50:	cmp	x0, x26
   29a54:	b.ls	29ae0 <__sanitizer_set_death_callback@@Base+0x3380>  // b.plast
   29a58:	lsl	x24, x26, #3
   29a5c:	ldr	w4, [x25, #48]
   29a60:	add	x0, x2, x24
   29a64:	mov	x7, x28
   29a68:	ldp	w3, w2, [x25, #40]
   29a6c:	mov	x6, x22
   29a70:	ldr	w0, [x0, #4]
   29a74:	mov	x5, x20
   29a78:	str	x27, [sp]
   29a7c:	mov	x1, x19
   29a80:	bl	28f20 <__sanitizer_set_death_callback@@Base+0x27c0>
   29a84:	cbz	w0, 29bfc <__sanitizer_set_death_callback@@Base+0x349c>
   29a88:	ldr	x2, [x23, #24]
   29a8c:	ldr	w0, [x2, x24]
   29a90:	cmp	w0, #0x12
   29a94:	b.eq	29c94 <__sanitizer_set_death_callback@@Base+0x3534>  // b.none
   29a98:	b.ls	29a24 <__sanitizer_set_death_callback@@Base+0x32c4>  // b.plast
   29a9c:	cmp	w0, #0x1b
   29aa0:	b.eq	29c70 <__sanitizer_set_death_callback@@Base+0x3510>  // b.none
   29aa4:	cmp	w0, #0x55
   29aa8:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29aac:	ldr	w0, [sp, #240]
   29ab0:	cmp	w0, #0x2
   29ab4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   29ab8:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29abc:	mov	w0, #0x1                   	// #1
   29ac0:	str	w0, [sp, #152]
   29ac4:	ldr	x0, [sp, #248]
   29ac8:	str	x0, [sp, #176]
   29acc:	ldr	x0, [x23, #16]
   29ad0:	add	x26, x26, #0x1
   29ad4:	cmp	x0, x26
   29ad8:	b.hi	29a58 <__sanitizer_set_death_callback@@Base+0x32f8>  // b.pmore
   29adc:	nop
   29ae0:	ldr	w1, [x23, #8]
   29ae4:	cmp	w1, #0x2e
   29ae8:	ccmp	w1, #0x11, #0x4, ne  // ne = any
   29aec:	b.ne	29ba8 <__sanitizer_set_death_callback@@Base+0x3448>  // b.any
   29af0:	ldr	w0, [sp, #152]
   29af4:	cbnz	w0, 29d04 <__sanitizer_set_death_callback@@Base+0x35a4>
   29af8:	ldr	w2, [sp, #160]
   29afc:	ldr	w0, [sp, #192]
   29b00:	tst	w0, w2
   29b04:	b.eq	29ba8 <__sanitizer_set_death_callback@@Base+0x3448>  // b.none
   29b08:	ldr	x0, [sp, #336]
   29b0c:	ldr	x3, [sp, #168]
   29b10:	ldr	w2, [sp, #232]
   29b14:	ldr	x0, [x0, #24]
   29b18:	cmp	w2, #0x0
   29b1c:	ldr	x4, [sp, #200]
   29b20:	add	x2, x3, x21
   29b24:	csel	x2, x2, x3, ne  // ne = any
   29b28:	add	x21, x21, x4
   29b2c:	add	x24, x2, x4
   29b30:	cbz	x0, 29b64 <__sanitizer_set_death_callback@@Base+0x3404>
   29b34:	ldr	x2, [sp, #336]
   29b38:	add	x0, x0, x0, lsl #1
   29b3c:	lsl	x0, x0, #3
   29b40:	ldr	x2, [x2]
   29b44:	sub	x0, x0, #0x18
   29b48:	add	x0, x2, x0
   29b4c:	ldr	x2, [x0, #8]
   29b50:	cmp	x21, x2
   29b54:	b.eq	29cc0 <__sanitizer_set_death_callback@@Base+0x3560>  // b.none
   29b58:	add	x3, x2, #0x1
   29b5c:	cmp	x21, x3
   29b60:	b.eq	29cc0 <__sanitizer_set_death_callback@@Base+0x3560>  // b.none
   29b64:	ldp	x2, x3, [sp, #312]
   29b68:	mov	x1, #0x18                  	// #24
   29b6c:	ldr	x0, [sp, #216]
   29b70:	ldr	x4, [sp, #336]
   29b74:	bl	6510 <__asan_backtrace_vector_grow@plt>
   29b78:	cbz	x0, 29bf8 <__sanitizer_set_death_callback@@Base+0x3498>
   29b7c:	ldr	x1, [sp, #336]
   29b80:	ldr	x2, [x1, #24]
   29b84:	ldr	w1, [x23, #8]
   29b88:	stp	x21, x24, [x0]
   29b8c:	add	x2, x2, #0x1
   29b90:	str	x25, [x0, #16]
   29b94:	ldr	x0, [sp, #336]
   29b98:	str	x2, [x0, #24]
   29b9c:	cmp	w1, #0x11
   29ba0:	b.eq	29cfc <__sanitizer_set_death_callback@@Base+0x359c>  // b.none
   29ba4:	nop
   29ba8:	ldr	w0, [x23, #12]
   29bac:	cbz	w0, 299b4 <__sanitizer_set_death_callback@@Base+0x3254>
   29bb0:	ldr	x0, [sp, #312]
   29bb4:	stp	x28, x0, [sp]
   29bb8:	ldr	w7, [sp, #236]
   29bbc:	ldp	x1, x6, [sp, #200]
   29bc0:	str	x25, [sp, #24]
   29bc4:	ldr	x0, [sp, #320]
   29bc8:	str	x0, [sp, #16]
   29bcc:	ldr	x0, [sp, #336]
   29bd0:	str	x0, [sp, #32]
   29bd4:	ldr	x0, [sp, #216]
   29bd8:	str	xzr, [sp, #40]
   29bdc:	ldr	x5, [sp, #224]
   29be0:	mov	x26, x25
   29be4:	mov	x4, x22
   29be8:	mov	x3, x20
   29bec:	mov	x2, x19
   29bf0:	bl	29960 <__sanitizer_set_death_callback@@Base+0x3200>
   29bf4:	cbnz	w0, 299a8 <__sanitizer_set_death_callback@@Base+0x3248>
   29bf8:	mov	w0, #0x0                   	// #0
   29bfc:	ldp	x29, x30, [sp, #48]
   29c00:	ldp	x19, x20, [sp, #64]
   29c04:	ldp	x21, x22, [sp, #80]
   29c08:	ldp	x23, x24, [sp, #96]
   29c0c:	ldp	x25, x26, [sp, #112]
   29c10:	ldp	x27, x28, [sp, #128]
   29c14:	add	sp, sp, #0x130
   29c18:	ret
   29c1c:	cmp	w0, #0x3
   29c20:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c24:	ldr	w0, [x23, #8]
   29c28:	cmp	w0, #0x11
   29c2c:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c30:	ldr	w0, [sp, #240]
   29c34:	cmp	w0, #0x4
   29c38:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c3c:	ldr	x0, [sp, #248]
   29c40:	str	x0, [x25, #64]
   29c44:	b	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>
   29c48:	ldr	w0, [x23, #8]
   29c4c:	cmp	w0, #0x11
   29c50:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c54:	ldr	w0, [sp, #240]
   29c58:	cmp	w0, #0x2
   29c5c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   29c60:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c64:	ldr	x0, [sp, #248]
   29c68:	str	x0, [x25, #56]
   29c6c:	b	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>
   29c70:	ldr	w0, [x23, #8]
   29c74:	cmp	w0, #0x11
   29c78:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c7c:	ldr	w0, [sp, #240]
   29c80:	cmp	w0, #0x4
   29c84:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29c88:	ldr	x0, [sp, #248]
   29c8c:	str	x0, [x25, #72]
   29c90:	b	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>
   29c94:	ldr	w0, [sp, #240]
   29c98:	cmp	w0, #0x1
   29c9c:	b.eq	29cb0 <__sanitizer_set_death_callback@@Base+0x3550>  // b.none
   29ca0:	cmp	w0, #0x2
   29ca4:	b.ne	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>  // b.any
   29ca8:	mov	w0, #0x1                   	// #1
   29cac:	str	w0, [sp, #232]
   29cb0:	str	w0, [sp, #160]
   29cb4:	ldr	x0, [sp, #248]
   29cb8:	str	x0, [sp, #168]
   29cbc:	b	29a48 <__sanitizer_set_death_callback@@Base+0x32e8>
   29cc0:	ldr	x3, [x0, #16]
   29cc4:	cmp	x25, x3
   29cc8:	b.ne	29b64 <__sanitizer_set_death_callback@@Base+0x3404>  // b.any
   29ccc:	cmp	x24, x2
   29cd0:	b.ls	29b9c <__sanitizer_set_death_callback@@Base+0x343c>  // b.plast
   29cd4:	str	x24, [x0, #8]
   29cd8:	b	29b9c <__sanitizer_set_death_callback@@Base+0x343c>
   29cdc:	ldr	w0, [sp, #296]
   29ce0:	ldp	x23, x19, [sp, #152]
   29ce4:	ldp	x20, x22, [sp, #168]
   29ce8:	ldr	x28, [sp, #192]
   29cec:	cbnz	w0, 29bf8 <__sanitizer_set_death_callback@@Base+0x3498>
   29cf0:	ldr	w0, [x23, #8]
   29cf4:	cmp	w0, #0x11
   29cf8:	b.ne	29ba8 <__sanitizer_set_death_callback@@Base+0x3448>  // b.any
   29cfc:	mov	w0, #0x1                   	// #1
   29d00:	b	29bfc <__sanitizer_set_death_callback@@Base+0x349c>
   29d04:	ldr	x0, [sp, #176]
   29d08:	ldr	x1, [sp, #208]
   29d0c:	cmp	x0, x1
   29d10:	b.cs	29ea8 <__sanitizer_set_death_callback@@Base+0x3748>  // b.hs, b.nlast
   29d14:	mov	x2, x0
   29d18:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29d1c:	sub	x24, x1, x2
   29d20:	add	x0, x0, #0x9f8
   29d24:	ldr	x1, [sp, #224]
   29d28:	stp	x0, x1, [sp, #240]
   29d2c:	add	x0, x1, x2
   29d30:	str	x0, [sp, #256]
   29d34:	ldr	w0, [sp, #236]
   29d38:	str	w0, [sp, #272]
   29d3c:	ldr	x0, [sp, #312]
   29d40:	str	x0, [sp, #280]
   29d44:	ldr	x0, [sp, #320]
   29d48:	stp	x23, x19, [sp, #152]
   29d4c:	stp	x20, x22, [sp, #168]
   29d50:	mov	x26, x0
   29d54:	str	x24, [sp, #264]
   29d58:	ldr	x19, [sp, #200]
   29d5c:	str	x28, [sp, #192]
   29d60:	ldr	x23, [sp, #216]
   29d64:	str	x0, [sp, #288]
   29d68:	ldr	x24, [sp, #312]
   29d6c:	str	wzr, [sp, #296]
   29d70:	ldr	x20, [sp, #336]
   29d74:	nop
   29d78:	mov	x0, x27
   29d7c:	ldr	w1, [x25, #48]
   29d80:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   29d84:	mov	x22, x0
   29d88:	ldr	w1, [x25, #48]
   29d8c:	mov	x0, x27
   29d90:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   29d94:	orr	x1, x22, x0
   29d98:	cbz	x1, 29cdc <__sanitizer_set_death_callback@@Base+0x357c>
   29d9c:	ldr	w1, [x25, #48]
   29da0:	cmp	w1, #0x4
   29da4:	b.eq	29e98 <__sanitizer_set_death_callback@@Base+0x3738>  // b.none
   29da8:	b.gt	29de0 <__sanitizer_set_death_callback@@Base+0x3680>
   29dac:	cmp	w1, #0x1
   29db0:	b.eq	29e8c <__sanitizer_set_death_callback@@Base+0x372c>  // b.none
   29db4:	cmp	w1, #0x2
   29db8:	b.ne	29df8 <__sanitizer_set_death_callback@@Base+0x3698>  // b.any
   29dbc:	mov	x1, #0xffff                	// #65535
   29dc0:	cmp	x22, x1
   29dc4:	cset	w1, eq  // eq = none
   29dc8:	cbz	w1, 29df8 <__sanitizer_set_death_callback@@Base+0x3698>
   29dcc:	mov	x21, x0
   29dd0:	ldr	w0, [sp, #296]
   29dd4:	cbz	w0, 29d78 <__sanitizer_set_death_callback@@Base+0x3618>
   29dd8:	mov	w0, #0x0                   	// #0
   29ddc:	b	29bfc <__sanitizer_set_death_callback@@Base+0x349c>
   29de0:	cmp	w1, #0x8
   29de4:	b.ne	29df8 <__sanitizer_set_death_callback@@Base+0x3698>  // b.any
   29de8:	cmn	x22, #0x1
   29dec:	cset	w1, eq  // eq = none
   29df0:	cbnz	w1, 29dcc <__sanitizer_set_death_callback@@Base+0x366c>
   29df4:	nop
   29df8:	ldr	x1, [x20, #24]
   29dfc:	add	x2, x22, x21
   29e00:	add	x0, x0, x21
   29e04:	add	x28, x2, x19
   29e08:	add	x22, x0, x19
   29e0c:	cbz	x1, 29e3c <__sanitizer_set_death_callback@@Base+0x36dc>
   29e10:	add	x0, x1, x1, lsl #1
   29e14:	ldr	x1, [x20]
   29e18:	lsl	x0, x0, #3
   29e1c:	sub	x0, x0, #0x18
   29e20:	add	x0, x1, x0
   29e24:	ldr	x1, [x0, #8]
   29e28:	cmp	x28, x1
   29e2c:	b.eq	29e70 <__sanitizer_set_death_callback@@Base+0x3710>  // b.none
   29e30:	add	x2, x1, #0x1
   29e34:	cmp	x28, x2
   29e38:	b.eq	29e70 <__sanitizer_set_death_callback@@Base+0x3710>  // b.none
   29e3c:	mov	x4, x20
   29e40:	mov	x3, x26
   29e44:	mov	x2, x24
   29e48:	mov	x0, x23
   29e4c:	mov	x1, #0x18                  	// #24
   29e50:	bl	6510 <__asan_backtrace_vector_grow@plt>
   29e54:	cbz	x0, 29bf8 <__sanitizer_set_death_callback@@Base+0x3498>
   29e58:	ldr	x1, [x20, #24]
   29e5c:	stp	x28, x22, [x0]
   29e60:	str	x25, [x0, #16]
   29e64:	add	x0, x1, #0x1
   29e68:	str	x0, [x20, #24]
   29e6c:	b	29dd0 <__sanitizer_set_death_callback@@Base+0x3670>
   29e70:	ldr	x2, [x0, #16]
   29e74:	cmp	x25, x2
   29e78:	b.ne	29e3c <__sanitizer_set_death_callback@@Base+0x36dc>  // b.any
   29e7c:	cmp	x22, x1
   29e80:	b.ls	29dd0 <__sanitizer_set_death_callback@@Base+0x3670>  // b.plast
   29e84:	str	x22, [x0, #8]
   29e88:	b	29dd0 <__sanitizer_set_death_callback@@Base+0x3670>
   29e8c:	cmp	x22, #0xff
   29e90:	cset	w1, eq  // eq = none
   29e94:	b	29dc8 <__sanitizer_set_death_callback@@Base+0x3668>
   29e98:	mov	x1, #0xffffffff            	// #4294967295
   29e9c:	cmp	x22, x1
   29ea0:	cset	w1, eq  // eq = none
   29ea4:	b	29dc8 <__sanitizer_set_death_callback@@Base+0x3668>
   29ea8:	ldp	x3, x0, [sp, #312]
   29eac:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   29eb0:	mov	w2, #0x0                   	// #0
   29eb4:	add	x1, x1, #0x9d8
   29eb8:	blr	x3
   29ebc:	mov	w0, #0x0                   	// #0
   29ec0:	b	29bfc <__sanitizer_set_death_callback@@Base+0x349c>
   29ec4:	nop
   29ec8:	sub	sp, sp, #0x1d0
   29ecc:	stp	x29, x30, [sp, #16]
   29ed0:	add	x29, sp, #0x10
   29ed4:	stp	x23, x24, [sp, #64]
   29ed8:	mov	x24, x4
   29edc:	ldr	x4, [x4, #24]
   29ee0:	str	x6, [sp, #128]
   29ee4:	str	x0, [sp, #152]
   29ee8:	str	x3, [sp, #184]
   29eec:	str	x5, [sp, #216]
   29ef0:	cbz	x4, 2a1b0 <__sanitizer_set_death_callback@@Base+0x3a50>
   29ef4:	mov	x23, x1
   29ef8:	stp	x21, x22, [sp, #48]
   29efc:	mov	x22, x2
   29f00:	stp	x25, x26, [sp, #80]
   29f04:	add	x26, sp, #0xf8
   29f08:	add	x1, x26, #0x8
   29f0c:	stp	x27, x28, [sp, #96]
   29f10:	mov	x28, x7
   29f14:	mov	x27, x23
   29f18:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   29f1c:	add	x0, x0, #0xd20
   29f20:	stp	x19, x20, [sp, #32]
   29f24:	stp	x1, x0, [sp, #224]
   29f28:	mov	x0, x24
   29f2c:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   29f30:	mov	x2, x0
   29f34:	cbz	x0, 2a1a0 <__sanitizer_set_death_callback@@Base+0x3a40>
   29f38:	ldr	x3, [sp, #128]
   29f3c:	mov	x4, x28
   29f40:	add	x1, x22, #0x60
   29f44:	add	x0, x22, #0x58
   29f48:	bl	28698 <__sanitizer_set_death_callback@@Base+0x1f38>
   29f4c:	mov	x25, x0
   29f50:	cbz	x0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   29f54:	ldr	w0, [x0, #8]
   29f58:	cmp	w0, #0x2e
   29f5c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   29f60:	b.eq	2a37c <__sanitizer_set_death_callback@@Base+0x3c1c>  // b.none
   29f64:	cmp	w0, #0x1d
   29f68:	b.eq	2a3f8 <__sanitizer_set_death_callback@@Base+0x3c98>  // b.none
   29f6c:	ldr	x0, [sp, #464]
   29f70:	mov	w19, #0x0                   	// #0
   29f74:	str	xzr, [sp, #120]
   29f78:	str	x0, [sp, #208]
   29f7c:	ldr	x0, [x25, #16]
   29f80:	str	x0, [sp, #136]
   29f84:	cbz	x0, 2a5ec <__sanitizer_set_death_callback@@Base+0x3e8c>
   29f88:	mov	x21, x22
   29f8c:	mov	x23, #0x0                   	// #0
   29f90:	mov	w20, #0x2007                	// #8199
   29f94:	str	xzr, [sp, #136]
   29f98:	str	wzr, [sp, #144]
   29f9c:	str	wzr, [sp, #160]
   29fa0:	str	wzr, [sp, #172]
   29fa4:	str	xzr, [sp, #176]
   29fa8:	str	xzr, [sp, #192]
   29fac:	stp	wzr, wzr, [sp, #200]
   29fb0:	ldr	x0, [x25, #24]
   29fb4:	lsl	x22, x23, #3
   29fb8:	ldp	x5, x6, [x27, #104]
   29fbc:	add	x0, x0, x22
   29fc0:	ldp	w3, w2, [x21, #40]
   29fc4:	mov	x1, x24
   29fc8:	ldr	w4, [x21, #48]
   29fcc:	ldr	w0, [x0, #4]
   29fd0:	ldr	x7, [x27, #8]
   29fd4:	str	x26, [sp]
   29fd8:	bl	28f20 <__sanitizer_set_death_callback@@Base+0x27c0>
   29fdc:	cbz	w0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   29fe0:	ldr	w0, [x25, #8]
   29fe4:	cmp	w0, #0x11
   29fe8:	b.eq	2a1b8 <__sanitizer_set_death_callback@@Base+0x3a58>  // b.none
   29fec:	cbz	w19, 2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   29ff0:	ldr	x0, [x25, #24]
   29ff4:	add	x1, x0, x22
   29ff8:	ldr	w0, [x0, x22]
   29ffc:	cmp	w0, #0x55
   2a000:	b.eq	2a318 <__sanitizer_set_death_callback@@Base+0x3bb8>  // b.none
   2a004:	b.hi	2a294 <__sanitizer_set_death_callback@@Base+0x3b34>  // b.pmore
   2a008:	cmp	w0, #0x12
   2a00c:	b.eq	2a354 <__sanitizer_set_death_callback@@Base+0x3bf4>  // b.none
   2a010:	b.ls	2a26c <__sanitizer_set_death_callback@@Base+0x3b0c>  // b.plast
   2a014:	cmp	w0, #0x31
   2a018:	b.eq	2a024 <__sanitizer_set_death_callback@@Base+0x38c4>  // b.none
   2a01c:	cmp	w0, #0x47
   2a020:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a024:	ldr	w0, [sp, #144]
   2a028:	cbz	w0, 2a3bc <__sanitizer_set_death_callback@@Base+0x3c5c>
   2a02c:	nop
   2a030:	ldr	x0, [x25, #16]
   2a034:	add	x23, x23, #0x1
   2a038:	cmp	x0, x23
   2a03c:	b.hi	29fb0 <__sanitizer_set_death_callback@@Base+0x3850>  // b.pmore
   2a040:	mov	x22, x21
   2a044:	cbz	w19, 2a204 <__sanitizer_set_death_callback@@Base+0x3aa4>
   2a048:	ldr	x0, [sp, #120]
   2a04c:	ldr	x0, [x0]
   2a050:	cbz	x0, 2a1f0 <__sanitizer_set_death_callback@@Base+0x3a90>
   2a054:	ldr	w0, [sp, #160]
   2a058:	cbnz	w0, 2a434 <__sanitizer_set_death_callback@@Base+0x3cd4>
   2a05c:	ldr	w1, [sp, #172]
   2a060:	ldr	w0, [sp, #200]
   2a064:	tst	w0, w1
   2a068:	b.eq	2a1f0 <__sanitizer_set_death_callback@@Base+0x3a90>  // b.none
   2a06c:	ldr	x4, [sp, #208]
   2a070:	ldr	x2, [sp, #136]
   2a074:	ldr	x3, [sp, #192]
   2a078:	ldr	w1, [sp, #204]
   2a07c:	ldr	x0, [x4, #24]
   2a080:	cmp	w1, #0x0
   2a084:	ldr	x19, [x27, #16]
   2a088:	add	x1, x2, x3
   2a08c:	csel	x1, x1, x2, ne  // ne = any
   2a090:	add	x20, x1, x19
   2a094:	add	x19, x19, x3
   2a098:	cbz	x0, 2a0c8 <__sanitizer_set_death_callback@@Base+0x3968>
   2a09c:	add	x0, x0, x0, lsl #1
   2a0a0:	ldr	x1, [x4]
   2a0a4:	lsl	x0, x0, #3
   2a0a8:	sub	x0, x0, #0x18
   2a0ac:	add	x0, x1, x0
   2a0b0:	ldr	x1, [x0, #8]
   2a0b4:	cmp	x19, x1
   2a0b8:	b.eq	2a5cc <__sanitizer_set_death_callback@@Base+0x3e6c>  // b.none
   2a0bc:	add	x2, x1, #0x1
   2a0c0:	cmp	x19, x2
   2a0c4:	b.eq	2a5cc <__sanitizer_set_death_callback@@Base+0x3e6c>  // b.none
   2a0c8:	ldr	x2, [sp, #128]
   2a0cc:	mov	x3, x28
   2a0d0:	ldr	x0, [sp, #152]
   2a0d4:	mov	x1, #0x18                  	// #24
   2a0d8:	ldr	x21, [sp, #208]
   2a0dc:	mov	x4, x21
   2a0e0:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2a0e4:	cbz	x0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a0e8:	ldr	x1, [x21, #24]
   2a0ec:	stp	x19, x20, [x0]
   2a0f0:	ldr	x3, [sp, #120]
   2a0f4:	str	x3, [x0, #16]
   2a0f8:	add	x0, x1, #0x1
   2a0fc:	str	x0, [x21, #24]
   2a100:	ldr	w0, [x25, #12]
   2a104:	cbz	w0, 2a198 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a108:	add	x19, sp, #0x108
   2a10c:	mov	x2, #0x20                  	// #32
   2a110:	mov	w1, #0x0                   	// #0
   2a114:	mov	x0, x19
   2a118:	bl	6530 <__asan_internal_memset@plt>
   2a11c:	ldr	x0, [sp, #464]
   2a120:	stp	x0, x19, [sp]
   2a124:	mov	x7, x28
   2a128:	ldr	x6, [sp, #128]
   2a12c:	mov	x4, x24
   2a130:	ldr	x0, [sp, #152]
   2a134:	mov	x2, x22
   2a138:	ldr	x3, [sp, #184]
   2a13c:	mov	x1, x27
   2a140:	ldr	x5, [sp, #216]
   2a144:	bl	29ec8 <__sanitizer_set_death_callback@@Base+0x3768>
   2a148:	cbz	w0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a14c:	ldr	x0, [sp, #288]
   2a150:	cbz	x0, 2a198 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a154:	ldr	x2, [sp, #128]
   2a158:	mov	x1, x19
   2a15c:	ldr	x0, [sp, #152]
   2a160:	mov	x3, x28
   2a164:	bl	6600 <__asan_backtrace_vector_release@plt>
   2a168:	cbz	w0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a16c:	ldr	x1, [sp, #288]
   2a170:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x18a0>
   2a174:	ldr	x19, [sp, #264]
   2a178:	add	x3, x3, #0x790
   2a17c:	mov	x2, #0x18                  	// #24
   2a180:	mov	x0, x19
   2a184:	bl	63a0 <__asan_backtrace_qsort@plt>
   2a188:	ldr	x1, [sp, #120]
   2a18c:	ldr	x0, [sp, #288]
   2a190:	stp	x19, x0, [x1, #24]
   2a194:	nop
   2a198:	ldr	x0, [x24, #24]
   2a19c:	cbnz	x0, 29f28 <__sanitizer_set_death_callback@@Base+0x37c8>
   2a1a0:	ldp	x19, x20, [sp, #32]
   2a1a4:	ldp	x21, x22, [sp, #48]
   2a1a8:	ldp	x25, x26, [sp, #80]
   2a1ac:	ldp	x27, x28, [sp, #96]
   2a1b0:	mov	w0, #0x1                   	// #1
   2a1b4:	b	2a25c <__sanitizer_set_death_callback@@Base+0x3afc>
   2a1b8:	ldr	x0, [x25, #24]
   2a1bc:	ldr	w0, [x0, x22]
   2a1c0:	cmp	w0, #0x11
   2a1c4:	b.ne	29fec <__sanitizer_set_death_callback@@Base+0x388c>  // b.any
   2a1c8:	ldr	w0, [sp, #248]
   2a1cc:	cmp	w0, #0x1
   2a1d0:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a1d4:	ldr	x0, [sp, #256]
   2a1d8:	str	x0, [sp, #184]
   2a1dc:	cbz	w19, 2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a1e0:	str	x0, [sp, #192]
   2a1e4:	mov	w0, #0x1                   	// #1
   2a1e8:	str	w0, [sp, #200]
   2a1ec:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a1f0:	ldp	x1, x3, [sp, #120]
   2a1f4:	mov	x4, x28
   2a1f8:	ldr	x0, [sp, #152]
   2a1fc:	mov	x2, #0x28                  	// #40
   2a200:	bl	6890 <__asan_backtrace_free@plt>
   2a204:	ldr	w0, [x25, #12]
   2a208:	cbz	w0, 2a198 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a20c:	ldr	x0, [sp, #464]
   2a210:	str	x0, [sp]
   2a214:	ldr	x0, [sp, #472]
   2a218:	str	x0, [sp, #8]
   2a21c:	ldr	x6, [sp, #128]
   2a220:	mov	x7, x28
   2a224:	ldr	x0, [sp, #152]
   2a228:	mov	x4, x24
   2a22c:	ldr	x3, [sp, #184]
   2a230:	mov	x2, x22
   2a234:	ldr	x5, [sp, #216]
   2a238:	mov	x1, x27
   2a23c:	bl	29ec8 <__sanitizer_set_death_callback@@Base+0x3768>
   2a240:	cbnz	w0, 2a198 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a244:	nop
   2a248:	ldp	x19, x20, [sp, #32]
   2a24c:	mov	w0, #0x0                   	// #0
   2a250:	ldp	x21, x22, [sp, #48]
   2a254:	ldp	x25, x26, [sp, #80]
   2a258:	ldp	x27, x28, [sp, #96]
   2a25c:	ldp	x29, x30, [sp, #16]
   2a260:	ldp	x23, x24, [sp, #64]
   2a264:	add	sp, sp, #0x1d0
   2a268:	ret
   2a26c:	cmp	w0, #0x3
   2a270:	b.ne	2a2fc <__sanitizer_set_death_callback@@Base+0x3b9c>  // b.any
   2a274:	ldr	x0, [sp, #120]
   2a278:	ldr	x0, [x0]
   2a27c:	cbnz	x0, 2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a280:	ldr	w0, [sp, #248]
   2a284:	cmp	w0, #0x4
   2a288:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a28c:	ldr	x0, [sp, #256]
   2a290:	b	2a3ec <__sanitizer_set_death_callback@@Base+0x3c8c>
   2a294:	cmp	w0, #0x59
   2a298:	b.eq	2a338 <__sanitizer_set_death_callback@@Base+0x3bd8>  // b.none
   2a29c:	b.ls	2a2d0 <__sanitizer_set_death_callback@@Base+0x3b70>  // b.plast
   2a2a0:	cmp	w0, #0x6e
   2a2a4:	b.eq	2a2b0 <__sanitizer_set_death_callback@@Base+0x3b50>  // b.none
   2a2a8:	cmp	w0, w20
   2a2ac:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a2b0:	ldr	w0, [sp, #248]
   2a2b4:	cmp	w0, #0x4
   2a2b8:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a2bc:	ldr	x1, [sp, #120]
   2a2c0:	str	w19, [sp, #144]
   2a2c4:	ldr	x0, [sp, #256]
   2a2c8:	str	x0, [x1]
   2a2cc:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a2d0:	cmp	w0, #0x58
   2a2d4:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a2d8:	ldr	w0, [sp, #248]
   2a2dc:	cmp	w0, #0x2
   2a2e0:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a2e4:	ldr	x0, [sp, #256]
   2a2e8:	cbnz	x0, 2a404 <__sanitizer_set_death_callback@@Base+0x3ca4>
   2a2ec:	ldr	x0, [sp, #120]
   2a2f0:	ldr	x1, [sp, #232]
   2a2f4:	str	x1, [x0, #8]
   2a2f8:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a2fc:	cmp	w0, #0x11
   2a300:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a304:	ldr	w0, [sp, #248]
   2a308:	cmp	w0, #0x1
   2a30c:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a310:	ldr	x0, [sp, #256]
   2a314:	b	2a1e0 <__sanitizer_set_death_callback@@Base+0x3a80>
   2a318:	ldr	w0, [sp, #248]
   2a31c:	cmp	w0, #0x2
   2a320:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   2a324:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a328:	ldr	x0, [sp, #256]
   2a32c:	str	w19, [sp, #160]
   2a330:	str	x0, [sp, #176]
   2a334:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a338:	ldr	w0, [sp, #248]
   2a33c:	cmp	w0, #0x2
   2a340:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a344:	ldr	x1, [sp, #120]
   2a348:	ldr	x0, [sp, #256]
   2a34c:	str	w0, [x1, #16]
   2a350:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a354:	ldr	w0, [sp, #248]
   2a358:	cmp	w0, #0x1
   2a35c:	b.eq	2a36c <__sanitizer_set_death_callback@@Base+0x3c0c>  // b.none
   2a360:	cmp	w0, #0x2
   2a364:	b.ne	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>  // b.any
   2a368:	str	w19, [sp, #204]
   2a36c:	ldr	x0, [sp, #256]
   2a370:	str	x0, [sp, #136]
   2a374:	str	w19, [sp, #172]
   2a378:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a37c:	cmp	w0, #0x1d
   2a380:	ldp	x0, x1, [sp, #464]
   2a384:	csel	x0, x0, x1, ne  // ne = any
   2a388:	str	x0, [sp, #208]
   2a38c:	ldr	x2, [sp, #128]
   2a390:	mov	x3, x28
   2a394:	ldr	x0, [sp, #152]
   2a398:	mov	x1, #0x28                  	// #40
   2a39c:	bl	65b0 <__asan_backtrace_alloc@plt>
   2a3a0:	str	x0, [sp, #120]
   2a3a4:	cbz	x0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a3a8:	mov	x2, #0x28                  	// #40
   2a3ac:	mov	w1, #0x0                   	// #0
   2a3b0:	mov	w19, #0x1                   	// #1
   2a3b4:	bl	6530 <__asan_internal_memset@plt>
   2a3b8:	b	29f7c <__sanitizer_set_death_callback@@Base+0x381c>
   2a3bc:	ldr	w0, [x1, #4]
   2a3c0:	cmp	w0, #0x20
   2a3c4:	b.eq	2a624 <__sanitizer_set_death_callback@@Base+0x3ec4>  // b.none
   2a3c8:	ldr	x4, [sp, #128]
   2a3cc:	mov	x5, x28
   2a3d0:	ldr	x3, [sp, #224]
   2a3d4:	mov	x2, x26
   2a3d8:	mov	x1, x21
   2a3dc:	mov	x0, x27
   2a3e0:	bl	29880 <__sanitizer_set_death_callback@@Base+0x3120>
   2a3e4:	str	wzr, [sp, #144]
   2a3e8:	cbz	x0, 2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a3ec:	ldr	x1, [sp, #120]
   2a3f0:	str	x0, [x1]
   2a3f4:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a3f8:	ldr	x0, [sp, #472]
   2a3fc:	str	x0, [sp, #208]
   2a400:	b	2a38c <__sanitizer_set_death_callback@@Base+0x3c2c>
   2a404:	ldr	x1, [sp, #216]
   2a408:	sub	x2, x0, #0x1
   2a40c:	ldr	x1, [x1, #48]
   2a410:	cmp	x2, x1
   2a414:	b.cs	2a648 <__sanitizer_set_death_callback@@Base+0x3ee8>  // b.hs, b.nlast
   2a418:	ldr	x1, [sp, #216]
   2a41c:	ldr	x1, [x1, #56]
   2a420:	add	x0, x1, x0, lsl #3
   2a424:	ldr	x1, [sp, #120]
   2a428:	ldur	x0, [x0, #-8]
   2a42c:	str	x0, [x1, #8]
   2a430:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a434:	ldr	x0, [x27, #96]
   2a438:	ldr	x1, [sp, #176]
   2a43c:	cmp	x0, x1
   2a440:	b.ls	2a608 <__sanitizer_set_death_callback@@Base+0x3ea8>  // b.plast
   2a444:	ldr	x3, [x27, #88]
   2a448:	mov	x5, x1
   2a44c:	sub	x1, x0, x1
   2a450:	str	x26, [sp, #160]
   2a454:	add	x0, x3, x5
   2a458:	stp	x0, x1, [sp, #280]
   2a45c:	ldr	w4, [x27, #120]
   2a460:	ldr	x0, [sp, #128]
   2a464:	add	x19, sp, #0x108
   2a468:	ldr	x20, [sp, #184]
   2a46c:	stp	x25, x24, [sp, #136]
   2a470:	mov	x25, x0
   2a474:	ldr	x26, [sp, #208]
   2a478:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2a47c:	mov	x21, #0xffff                	// #65535
   2a480:	add	x2, x2, #0x9f8
   2a484:	stp	x2, x3, [sp, #264]
   2a488:	str	w4, [sp, #296]
   2a48c:	str	x0, [sp, #304]
   2a490:	str	x28, [sp, #312]
   2a494:	str	wzr, [sp, #320]
   2a498:	ldr	w1, [x22, #48]
   2a49c:	mov	x0, x19
   2a4a0:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   2a4a4:	mov	x23, x0
   2a4a8:	ldr	w1, [x22, #48]
   2a4ac:	mov	x0, x19
   2a4b0:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   2a4b4:	orr	x1, x23, x0
   2a4b8:	cbz	x1, 2a62c <__sanitizer_set_death_callback@@Base+0x3ecc>
   2a4bc:	ldr	w1, [x22, #48]
   2a4c0:	cmp	w1, #0x4
   2a4c4:	b.eq	2a5bc <__sanitizer_set_death_callback@@Base+0x3e5c>  // b.none
   2a4c8:	b.gt	2a4f8 <__sanitizer_set_death_callback@@Base+0x3d98>
   2a4cc:	cmp	w1, #0x1
   2a4d0:	b.eq	2a5b0 <__sanitizer_set_death_callback@@Base+0x3e50>  // b.none
   2a4d4:	cmp	w1, #0x2
   2a4d8:	b.ne	2a510 <__sanitizer_set_death_callback@@Base+0x3db0>  // b.any
   2a4dc:	cmp	x23, x21
   2a4e0:	cset	w1, eq  // eq = none
   2a4e4:	cbz	w1, 2a510 <__sanitizer_set_death_callback@@Base+0x3db0>
   2a4e8:	mov	x20, x0
   2a4ec:	ldr	w0, [sp, #320]
   2a4f0:	cbz	w0, 2a498 <__sanitizer_set_death_callback@@Base+0x3d38>
   2a4f4:	b	2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a4f8:	cmp	w1, #0x8
   2a4fc:	b.ne	2a510 <__sanitizer_set_death_callback@@Base+0x3db0>  // b.any
   2a500:	cmn	x23, #0x1
   2a504:	cset	w1, eq  // eq = none
   2a508:	cbnz	w1, 2a4e8 <__sanitizer_set_death_callback@@Base+0x3d88>
   2a50c:	nop
   2a510:	ldr	x1, [x26, #24]
   2a514:	add	x2, x23, x20
   2a518:	ldr	x6, [x27, #16]
   2a51c:	add	x0, x0, x20
   2a520:	add	x24, x2, x6
   2a524:	add	x23, x0, x6
   2a528:	cbz	x1, 2a558 <__sanitizer_set_death_callback@@Base+0x3df8>
   2a52c:	add	x0, x1, x1, lsl #1
   2a530:	ldr	x1, [x26]
   2a534:	lsl	x0, x0, #3
   2a538:	sub	x0, x0, #0x18
   2a53c:	add	x0, x1, x0
   2a540:	ldr	x1, [x0, #8]
   2a544:	cmp	x24, x1
   2a548:	b.eq	2a590 <__sanitizer_set_death_callback@@Base+0x3e30>  // b.none
   2a54c:	add	x2, x1, #0x1
   2a550:	cmp	x24, x2
   2a554:	b.eq	2a590 <__sanitizer_set_death_callback@@Base+0x3e30>  // b.none
   2a558:	ldr	x0, [sp, #152]
   2a55c:	mov	x4, x26
   2a560:	mov	x3, x28
   2a564:	mov	x2, x25
   2a568:	mov	x1, #0x18                  	// #24
   2a56c:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2a570:	cbz	x0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a574:	ldr	x1, [x26, #24]
   2a578:	stp	x24, x23, [x0]
   2a57c:	ldr	x2, [sp, #120]
   2a580:	str	x2, [x0, #16]
   2a584:	add	x0, x1, #0x1
   2a588:	str	x0, [x26, #24]
   2a58c:	b	2a4ec <__sanitizer_set_death_callback@@Base+0x3d8c>
   2a590:	ldr	x2, [x0, #16]
   2a594:	ldr	x3, [sp, #120]
   2a598:	cmp	x3, x2
   2a59c:	b.ne	2a558 <__sanitizer_set_death_callback@@Base+0x3df8>  // b.any
   2a5a0:	cmp	x23, x1
   2a5a4:	b.ls	2a4ec <__sanitizer_set_death_callback@@Base+0x3d8c>  // b.plast
   2a5a8:	str	x23, [x0, #8]
   2a5ac:	b	2a4ec <__sanitizer_set_death_callback@@Base+0x3d8c>
   2a5b0:	cmp	x23, #0xff
   2a5b4:	cset	w1, eq  // eq = none
   2a5b8:	b	2a4e4 <__sanitizer_set_death_callback@@Base+0x3d84>
   2a5bc:	mov	x1, #0xffffffff            	// #4294967295
   2a5c0:	cmp	x23, x1
   2a5c4:	cset	w1, eq  // eq = none
   2a5c8:	b	2a4e4 <__sanitizer_set_death_callback@@Base+0x3d84>
   2a5cc:	ldr	x2, [x0, #16]
   2a5d0:	ldr	x3, [sp, #120]
   2a5d4:	cmp	x3, x2
   2a5d8:	b.ne	2a0c8 <__sanitizer_set_death_callback@@Base+0x3968>  // b.any
   2a5dc:	cmp	x20, x1
   2a5e0:	b.ls	2a100 <__sanitizer_set_death_callback@@Base+0x39a0>  // b.plast
   2a5e4:	str	x20, [x0, #8]
   2a5e8:	b	2a100 <__sanitizer_set_death_callback@@Base+0x39a0>
   2a5ec:	str	wzr, [sp, #160]
   2a5f0:	str	wzr, [sp, #172]
   2a5f4:	str	xzr, [sp, #176]
   2a5f8:	str	xzr, [sp, #192]
   2a5fc:	stp	wzr, wzr, [sp, #200]
   2a600:	cbz	w19, 2a204 <__sanitizer_set_death_callback@@Base+0x3aa4>
   2a604:	b	2a048 <__sanitizer_set_death_callback@@Base+0x38e8>
   2a608:	ldr	x3, [sp, #128]
   2a60c:	mov	x0, x28
   2a610:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2a614:	mov	w2, #0x0                   	// #0
   2a618:	add	x1, x1, #0xa40
   2a61c:	blr	x3
   2a620:	b	2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a624:	str	wzr, [sp, #144]
   2a628:	b	2a030 <__sanitizer_set_death_callback@@Base+0x38d0>
   2a62c:	ldr	w0, [sp, #320]
   2a630:	ldp	x25, x24, [sp, #136]
   2a634:	ldr	x26, [sp, #160]
   2a638:	cbnz	w0, 2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a63c:	ldr	w0, [x25, #12]
   2a640:	cbnz	w0, 2a10c <__sanitizer_set_death_callback@@Base+0x39ac>
   2a644:	b	2a198 <__sanitizer_set_death_callback@@Base+0x3a38>
   2a648:	ldp	x4, x1, [x24]
   2a64c:	add	x19, sp, #0x108
   2a650:	ldr	x5, [x24, #16]
   2a654:	mov	x0, x19
   2a658:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2a65c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2a660:	add	x3, x3, #0xa08
   2a664:	add	x2, x2, #0x890
   2a668:	sub	w5, w5, w1
   2a66c:	mov	x1, #0xc8                  	// #200
   2a670:	bl	6700 <snprintf@plt>
   2a674:	ldp	x3, x0, [x24, #40]
   2a678:	mov	x1, x19
   2a67c:	mov	w2, #0x0                   	// #0
   2a680:	blr	x3
   2a684:	b	2a248 <__sanitizer_set_death_callback@@Base+0x3ae8>
   2a688:	sub	sp, sp, #0x2a0
   2a68c:	stp	x29, x30, [sp, #16]
   2a690:	add	x29, sp, #0x10
   2a694:	stp	x27, x28, [sp, #96]
   2a698:	mov	x28, x1
   2a69c:	mov	w1, #0x1                   	// #1
   2a6a0:	stp	x21, x22, [sp, #48]
   2a6a4:	mov	x21, x6
   2a6a8:	ldr	x6, [x28, #32]
   2a6ac:	str	w1, [x21]
   2a6b0:	str	x3, [sp, #112]
   2a6b4:	cbz	x6, 2a95c <__sanitizer_set_death_callback@@Base+0x41fc>
   2a6b8:	mov	x22, x4
   2a6bc:	stp	x19, x20, [sp, #32]
   2a6c0:	mov	x20, x5
   2a6c4:	ldr	x4, [x28, #24]
   2a6c8:	mov	x19, x0
   2a6cc:	mov	x5, x6
   2a6d0:	stp	x25, x26, [sp, #80]
   2a6d4:	mov	x26, x2
   2a6d8:	mov	x3, #0x0                   	// #0
   2a6dc:	stp	x23, x24, [sp, #64]
   2a6e0:	add	x0, x5, x3
   2a6e4:	cmp	x5, x3
   2a6e8:	and	x1, x0, #0xfffffffffffffffe
   2a6ec:	b.ls	2a950 <__sanitizer_set_death_callback@@Base+0x41f0>  // b.plast
   2a6f0:	lsr	x0, x0, #1
   2a6f4:	add	x1, x1, x0
   2a6f8:	lsl	x2, x1, #3
   2a6fc:	ldr	x1, [x4, x1, lsl #3]
   2a700:	add	x27, x4, x2
   2a704:	cmp	x1, x26
   2a708:	b.hi	2a93c <__sanitizer_set_death_callback@@Base+0x41dc>  // b.pmore
   2a70c:	ldr	x1, [x27, #8]
   2a710:	add	x3, x0, #0x1
   2a714:	cmp	x1, x26
   2a718:	b.ls	2a6e0 <__sanitizer_set_death_callback@@Base+0x3f80>  // b.plast
   2a71c:	asr	x2, x2, #3
   2a720:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2a724:	movk	x0, #0xaaab
   2a728:	mov	x1, x0
   2a72c:	mul	x2, x2, x0
   2a730:	add	x2, x2, #0x1
   2a734:	cmp	x6, x2
   2a738:	b.hi	2a768 <__sanitizer_set_death_callback@@Base+0x4008>  // b.pmore
   2a73c:	b	2a774 <__sanitizer_set_death_callback@@Base+0x4014>
   2a740:	ldr	x0, [x27, #32]
   2a744:	cmp	x0, x26
   2a748:	b.ls	2a774 <__sanitizer_set_death_callback@@Base+0x4014>  // b.plast
   2a74c:	add	x27, x27, #0x18
   2a750:	sub	x0, x27, x4
   2a754:	asr	x0, x0, #3
   2a758:	mul	x0, x0, x1
   2a75c:	add	x0, x0, #0x1
   2a760:	cmp	x6, x0
   2a764:	b.ls	2a774 <__sanitizer_set_death_callback@@Base+0x4014>  // b.plast
   2a768:	ldr	x0, [x27, #24]
   2a76c:	cmp	x0, x26
   2a770:	b.ls	2a740 <__sanitizer_set_death_callback@@Base+0x3fe0>  // b.plast
   2a774:	ldr	x23, [x27, #16]
   2a778:	cmp	x4, x27
   2a77c:	ldr	w1, [x19, #8]
   2a780:	ldr	x24, [x23, #104]
   2a784:	b.cc	2a7ac <__sanitizer_set_death_callback@@Base+0x404c>  // b.lo, b.ul, b.last
   2a788:	b	2a7e0 <__sanitizer_set_death_callback@@Base+0x4080>
   2a78c:	cmn	x24, #0x1
   2a790:	b.ne	2a7e0 <__sanitizer_set_death_callback@@Base+0x4080>  // b.any
   2a794:	ldur	x23, [x27, #-8]
   2a798:	sub	x27, x27, #0x18
   2a79c:	ldr	x0, [x28, #24]
   2a7a0:	ldr	x24, [x23, #104]
   2a7a4:	cmp	x0, x27
   2a7a8:	b.cs	2a7e0 <__sanitizer_set_death_callback@@Base+0x4080>  // b.hs, b.nlast
   2a7ac:	ldur	x0, [x27, #-24]
   2a7b0:	cmp	x0, x26
   2a7b4:	b.hi	2a7e0 <__sanitizer_set_death_callback@@Base+0x4080>  // b.pmore
   2a7b8:	ldur	x0, [x27, #-16]
   2a7bc:	cmp	x0, x26
   2a7c0:	b.ls	2a7e0 <__sanitizer_set_death_callback@@Base+0x4080>  // b.plast
   2a7c4:	cbz	w1, 2a78c <__sanitizer_set_death_callback@@Base+0x402c>
   2a7c8:	add	x0, x23, #0x68
   2a7cc:	ldar	x24, [x0]
   2a7d0:	ldr	w1, [x19, #8]
   2a7d4:	cmn	x24, #0x1
   2a7d8:	b.eq	2a794 <__sanitizer_set_death_callback@@Base+0x4034>  // b.none
   2a7dc:	nop
   2a7e0:	cbnz	w1, 2a9d8 <__sanitizer_set_death_callback@@Base+0x4278>
   2a7e4:	cbz	x24, 2a9e4 <__sanitizer_set_death_callback@@Base+0x4284>
   2a7e8:	cmn	x24, #0x1
   2a7ec:	b.eq	2aae4 <__sanitizer_set_death_callback@@Base+0x4384>  // b.none
   2a7f0:	ldr	x7, [x27, #16]
   2a7f4:	mov	x2, #0x0                   	// #0
   2a7f8:	ldr	x3, [x7, #112]
   2a7fc:	add	x0, x2, x3
   2a800:	cmp	x2, x3
   2a804:	and	x1, x0, #0xfffffffffffffffe
   2a808:	b.cs	2a98c <__sanitizer_set_death_callback@@Base+0x422c>  // b.hs, b.nlast
   2a80c:	lsr	x0, x0, #1
   2a810:	add	x1, x1, x0
   2a814:	add	x4, x24, x1, lsl #3
   2a818:	ldr	x1, [x24, x1, lsl #3]
   2a81c:	cmp	x1, x26
   2a820:	b.hi	2a978 <__sanitizer_set_death_callback@@Base+0x4218>  // b.pmore
   2a824:	ldr	x1, [x4, #24]
   2a828:	add	x2, x0, #0x1
   2a82c:	cmp	x1, x26
   2a830:	b.ls	2a7fc <__sanitizer_set_death_callback@@Base+0x409c>  // b.plast
   2a834:	ldr	x6, [x7, #128]
   2a838:	ldr	w10, [x4, #16]
   2a83c:	ldr	x8, [x4, #8]
   2a840:	cbz	x6, 2a9c0 <__sanitizer_set_death_callback@@Base+0x4260>
   2a844:	ldr	x4, [x7, #120]
   2a848:	mov	x5, x6
   2a84c:	mov	x3, #0x0                   	// #0
   2a850:	add	x0, x5, x3
   2a854:	cmp	x5, x3
   2a858:	and	x1, x0, #0xfffffffffffffffe
   2a85c:	b.ls	2a9c0 <__sanitizer_set_death_callback@@Base+0x4260>  // b.plast
   2a860:	lsr	x0, x0, #1
   2a864:	add	x1, x1, x0
   2a868:	lsl	x2, x1, #3
   2a86c:	ldr	x7, [x4, x1, lsl #3]
   2a870:	add	x1, x4, x2
   2a874:	cmp	x7, x26
   2a878:	b.hi	2a9ac <__sanitizer_set_death_callback@@Base+0x424c>  // b.pmore
   2a87c:	ldr	x7, [x1, #8]
   2a880:	add	x3, x0, #0x1
   2a884:	cmp	x7, x26
   2a888:	b.ls	2a850 <__sanitizer_set_death_callback@@Base+0x40f0>  // b.plast
   2a88c:	asr	x0, x2, #3
   2a890:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2a894:	movk	x2, #0xaaab
   2a898:	mov	x3, x2
   2a89c:	mul	x0, x0, x2
   2a8a0:	add	x0, x0, #0x1
   2a8a4:	cmp	x6, x0
   2a8a8:	b.hi	2a8d8 <__sanitizer_set_death_callback@@Base+0x4178>  // b.pmore
   2a8ac:	b	2a8e4 <__sanitizer_set_death_callback@@Base+0x4184>
   2a8b0:	ldr	x0, [x1, #32]
   2a8b4:	cmp	x0, x26
   2a8b8:	b.ls	2a8e4 <__sanitizer_set_death_callback@@Base+0x4184>  // b.plast
   2a8bc:	add	x1, x1, #0x18
   2a8c0:	sub	x0, x1, x4
   2a8c4:	asr	x0, x0, #3
   2a8c8:	mul	x0, x0, x3
   2a8cc:	add	x0, x0, #0x1
   2a8d0:	cmp	x6, x0
   2a8d4:	b.ls	2a8e4 <__sanitizer_set_death_callback@@Base+0x4184>  // b.plast
   2a8d8:	ldr	x0, [x1, #24]
   2a8dc:	cmp	x0, x26
   2a8e0:	b.ls	2a8b0 <__sanitizer_set_death_callback@@Base+0x4150>  // b.plast
   2a8e4:	ldr	x19, [x1, #16]
   2a8e8:	add	x6, sp, #0x198
   2a8ec:	ldr	x21, [sp, #112]
   2a8f0:	add	x5, sp, #0x1d8
   2a8f4:	ldp	x1, x2, [x19, #24]
   2a8f8:	mov	x4, x20
   2a8fc:	mov	x0, x26
   2a900:	mov	x3, x21
   2a904:	str	w10, [sp, #408]
   2a908:	str	x8, [sp, #472]
   2a90c:	bl	28538 <__sanitizer_set_death_callback@@Base+0x1dd8>
   2a910:	cbnz	w0, 2ac60 <__sanitizer_set_death_callback@@Base+0x4500>
   2a914:	ldr	w3, [sp, #408]
   2a918:	mov	x1, x26
   2a91c:	ldr	x4, [x19]
   2a920:	mov	x0, x20
   2a924:	ldr	x2, [sp, #472]
   2a928:	blr	x21
   2a92c:	ldp	x19, x20, [sp, #32]
   2a930:	ldp	x23, x24, [sp, #64]
   2a934:	ldp	x25, x26, [sp, #80]
   2a938:	b	2a964 <__sanitizer_set_death_callback@@Base+0x4204>
   2a93c:	mov	x5, x0
   2a940:	add	x0, x5, x3
   2a944:	cmp	x5, x3
   2a948:	and	x1, x0, #0xfffffffffffffffe
   2a94c:	b.hi	2a6f0 <__sanitizer_set_death_callback@@Base+0x3f90>  // b.pmore
   2a950:	ldp	x19, x20, [sp, #32]
   2a954:	ldp	x23, x24, [sp, #64]
   2a958:	ldp	x25, x26, [sp, #80]
   2a95c:	mov	w0, #0x0                   	// #0
   2a960:	str	wzr, [x21]
   2a964:	ldp	x29, x30, [sp, #16]
   2a968:	ldp	x21, x22, [sp, #48]
   2a96c:	ldp	x27, x28, [sp, #96]
   2a970:	add	sp, sp, #0x2a0
   2a974:	ret
   2a978:	mov	x3, x0
   2a97c:	add	x0, x2, x3
   2a980:	cmp	x2, x3
   2a984:	and	x1, x0, #0xfffffffffffffffe
   2a988:	b.cc	2a80c <__sanitizer_set_death_callback@@Base+0x40ac>  // b.lo, b.ul, b.last
   2a98c:	ldr	x24, [x7, #80]
   2a990:	cbz	x24, 2ab20 <__sanitizer_set_death_callback@@Base+0x43c0>
   2a994:	mov	x2, x24
   2a998:	mov	x1, x26
   2a99c:	mov	x0, x20
   2a9a0:	mov	x4, #0x0                   	// #0
   2a9a4:	mov	w3, #0x0                   	// #0
   2a9a8:	b	2aaf8 <__sanitizer_set_death_callback@@Base+0x4398>
   2a9ac:	mov	x5, x0
   2a9b0:	add	x0, x5, x3
   2a9b4:	cmp	x5, x3
   2a9b8:	and	x1, x0, #0xfffffffffffffffe
   2a9bc:	b.hi	2a860 <__sanitizer_set_death_callback@@Base+0x4100>  // b.pmore
   2a9c0:	mov	w3, w10
   2a9c4:	mov	x2, x8
   2a9c8:	mov	x1, x26
   2a9cc:	mov	x0, x20
   2a9d0:	mov	x4, #0x0                   	// #0
   2a9d4:	b	2aaf8 <__sanitizer_set_death_callback@@Base+0x4398>
   2a9d8:	add	x0, x23, #0x68
   2a9dc:	ldar	x24, [x0]
   2a9e0:	cbnz	x24, 2a7e8 <__sanitizer_set_death_callback@@Base+0x4088>
   2a9e4:	add	x3, sp, #0x118
   2a9e8:	add	x0, sp, #0xf8
   2a9ec:	ldr	x24, [x27, #16]
   2a9f0:	mov	x25, x3
   2a9f4:	mov	x2, #0x18                  	// #24
   2a9f8:	mov	w1, #0x0                   	// #0
   2a9fc:	stp	x0, x24, [sp, #120]
   2aa00:	str	x3, [sp, #144]
   2aa04:	bl	6530 <__asan_internal_memset@plt>
   2aa08:	mov	w1, #0x0                   	// #0
   2aa0c:	mov	x0, x25
   2aa10:	mov	x2, #0x40                  	// #64
   2aa14:	str	xzr, [sp, #272]
   2aa18:	bl	6530 <__asan_internal_memset@plt>
   2aa1c:	ldr	x0, [x24, #56]
   2aa20:	ldr	x1, [x28, #80]
   2aa24:	cmp	x0, x1
   2aa28:	b.cc	2abb4 <__sanitizer_set_death_callback@@Base+0x4454>  // b.lo, b.ul, b.last
   2aa2c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2aa30:	mov	x0, x20
   2aa34:	add	x1, x1, #0xa68
   2aa38:	mov	w2, #0x0                   	// #0
   2aa3c:	blr	x22
   2aa40:	ldp	x5, x4, [sp, #256]
   2aa44:	mov	x2, x22
   2aa48:	ldr	x1, [sp, #120]
   2aa4c:	mov	x3, x20
   2aa50:	mov	x0, x19
   2aa54:	add	x4, x4, x5
   2aa58:	stp	xzr, x4, [sp, #256]
   2aa5c:	bl	6600 <__asan_backtrace_vector_release@plt>
   2aa60:	ldr	x2, [sp, #312]
   2aa64:	cbnz	x2, 2ac98 <__sanitizer_set_death_callback@@Base+0x4538>
   2aa68:	ldp	x2, x1, [sp, #328]
   2aa6c:	mov	x4, x20
   2aa70:	mov	x3, x22
   2aa74:	mov	x0, x19
   2aa78:	str	xzr, [sp, #120]
   2aa7c:	mov	x25, #0x0                   	// #0
   2aa80:	mov	x24, #0xffffffffffffffff    	// #-1
   2aa84:	lsl	x2, x2, #3
   2aa88:	bl	6890 <__asan_backtrace_free@plt>
   2aa8c:	mov	x5, #0x0                   	// #0
   2aa90:	mov	w1, #0x0                   	// #0
   2aa94:	ldr	w0, [x19, #8]
   2aa98:	cbnz	w0, 2ac70 <__sanitizer_set_death_callback@@Base+0x4510>
   2aa9c:	ldr	x0, [sp, #120]
   2aaa0:	stp	x24, x0, [x23, #104]
   2aaa4:	stp	x25, x5, [x23, #120]
   2aaa8:	cmn	x24, #0x1
   2aaac:	b.ne	2a7f0 <__sanitizer_set_death_callback@@Base+0x4090>  // b.any
   2aab0:	cbz	w1, 2aae4 <__sanitizer_set_death_callback@@Base+0x4384>
   2aab4:	ldr	x3, [sp, #112]
   2aab8:	mov	x5, x20
   2aabc:	mov	x2, x26
   2aac0:	mov	x0, x19
   2aac4:	mov	x6, x21
   2aac8:	mov	x4, x22
   2aacc:	mov	x1, x28
   2aad0:	bl	2a688 <__sanitizer_set_death_callback@@Base+0x3f28>
   2aad4:	ldp	x19, x20, [sp, #32]
   2aad8:	ldp	x23, x24, [sp, #64]
   2aadc:	ldp	x25, x26, [sp, #80]
   2aae0:	b	2a964 <__sanitizer_set_death_callback@@Base+0x4204>
   2aae4:	mov	x1, x26
   2aae8:	mov	x0, x20
   2aaec:	mov	x4, #0x0                   	// #0
   2aaf0:	mov	w3, #0x0                   	// #0
   2aaf4:	mov	x2, #0x0                   	// #0
   2aaf8:	ldr	x5, [sp, #112]
   2aafc:	blr	x5
   2ab00:	ldp	x29, x30, [sp, #16]
   2ab04:	ldp	x19, x20, [sp, #32]
   2ab08:	ldp	x21, x22, [sp, #48]
   2ab0c:	ldp	x23, x24, [sp, #64]
   2ab10:	ldp	x25, x26, [sp, #80]
   2ab14:	ldp	x27, x28, [sp, #96]
   2ab18:	add	sp, sp, #0x2a0
   2ab1c:	ret
   2ab20:	ldr	x24, [x7, #64]
   2ab24:	cbz	x24, 2abac <__sanitizer_set_death_callback@@Base+0x444c>
   2ab28:	ldrb	w0, [x24]
   2ab2c:	cmp	w0, #0x2f
   2ab30:	b.eq	2abac <__sanitizer_set_death_callback@@Base+0x444c>  // b.none
   2ab34:	ldr	x0, [x7, #72]
   2ab38:	cbz	x0, 2abac <__sanitizer_set_death_callback@@Base+0x444c>
   2ab3c:	mov	x0, x24
   2ab40:	bl	64b0 <__asan_internal_strlen@plt>
   2ab44:	ldr	x1, [x27, #16]
   2ab48:	mov	x25, x0
   2ab4c:	ldr	x23, [x1, #72]
   2ab50:	mov	x0, x23
   2ab54:	bl	64b0 <__asan_internal_strlen@plt>
   2ab58:	mov	x2, x22
   2ab5c:	mov	x22, x0
   2ab60:	add	x1, x25, x22
   2ab64:	mov	x0, x19
   2ab68:	mov	x3, x20
   2ab6c:	add	x1, x1, #0x2
   2ab70:	bl	65b0 <__asan_backtrace_alloc@plt>
   2ab74:	mov	x19, x0
   2ab78:	cbz	x0, 2a950 <__sanitizer_set_death_callback@@Base+0x41f0>
   2ab7c:	mov	x1, x23
   2ab80:	mov	x2, x22
   2ab84:	bl	64a0 <__asan_internal_memcpy@plt>
   2ab88:	mov	w3, #0x2f                  	// #47
   2ab8c:	strb	w3, [x19, x22]
   2ab90:	add	x0, x22, #0x1
   2ab94:	mov	x1, x24
   2ab98:	add	x2, x25, #0x1
   2ab9c:	add	x0, x19, x0
   2aba0:	bl	64a0 <__asan_internal_memcpy@plt>
   2aba4:	mov	x24, x19
   2aba8:	ldr	x7, [x27, #16]
   2abac:	str	x24, [x7, #80]
   2abb0:	b	2a994 <__sanitizer_set_death_callback@@Base+0x4234>
   2abb4:	ldr	x4, [x28, #72]
   2abb8:	sub	x2, x1, x0
   2abbc:	ldr	w5, [x28, #120]
   2abc0:	add	x6, sp, #0x158
   2abc4:	add	x1, x4, x0
   2abc8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2abcc:	add	x3, x3, #0xa88
   2abd0:	mov	x0, x6
   2abd4:	str	x6, [sp, #136]
   2abd8:	stp	x3, x4, [sp, #344]
   2abdc:	stp	x1, x2, [sp, #360]
   2abe0:	str	w5, [sp, #376]
   2abe4:	stp	x22, x20, [sp, #384]
   2abe8:	str	wzr, [sp, #400]
   2abec:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   2abf0:	mov	x1, #0xffffffff            	// #4294967295
   2abf4:	mov	w2, w0
   2abf8:	cmp	x1, w0, uxtw
   2abfc:	b.eq	2b080 <__sanitizer_set_death_callback@@Base+0x4920>  // b.none
   2ac00:	ldr	x0, [sp, #136]
   2ac04:	str	x2, [sp, #368]
   2ac08:	bl	28a98 <__sanitizer_set_death_callback@@Base+0x2338>
   2ac0c:	and	w0, w0, #0xffff
   2ac10:	str	w0, [sp, #280]
   2ac14:	sub	w0, w0, #0x2
   2ac18:	cmp	w0, #0x2
   2ac1c:	b.ls	2acb4 <__sanitizer_set_death_callback@@Base+0x4554>  // b.plast
   2ac20:	ldp	x4, x1, [sp, #344]
   2ac24:	add	x24, sp, #0x1d8
   2ac28:	ldr	x5, [sp, #360]
   2ac2c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ac30:	mov	x0, x24
   2ac34:	add	x3, x3, #0xa98
   2ac38:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ac3c:	sub	w5, w5, w1
   2ac40:	add	x2, x2, #0x890
   2ac44:	mov	x1, #0xc8                  	// #200
   2ac48:	bl	6700 <snprintf@plt>
   2ac4c:	ldp	x3, x0, [sp, #384]
   2ac50:	mov	x1, x24
   2ac54:	mov	w2, #0x0                   	// #0
   2ac58:	blr	x3
   2ac5c:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2ac60:	ldp	x19, x20, [sp, #32]
   2ac64:	ldp	x23, x24, [sp, #64]
   2ac68:	ldp	x25, x26, [sp, #80]
   2ac6c:	b	2a964 <__sanitizer_set_death_callback@@Base+0x4204>
   2ac70:	add	x0, x23, #0x70
   2ac74:	ldr	x2, [sp, #120]
   2ac78:	stlr	x2, [x0]
   2ac7c:	add	x0, x23, #0x78
   2ac80:	stlr	x25, [x0]
   2ac84:	add	x0, x23, #0x80
   2ac88:	stlr	x5, [x0]
   2ac8c:	add	x11, x23, #0x68
   2ac90:	stlr	x24, [x11]
   2ac94:	b	2aaa8 <__sanitizer_set_death_callback@@Base+0x4348>
   2ac98:	ldr	x1, [sp, #320]
   2ac9c:	lsl	x2, x2, #3
   2aca0:	mov	x4, x20
   2aca4:	mov	x3, x22
   2aca8:	mov	x0, x19
   2acac:	bl	6890 <__asan_backtrace_free@plt>
   2acb0:	b	2aa68 <__sanitizer_set_death_callback@@Base+0x4308>
   2acb4:	ldr	x0, [sp, #136]
   2acb8:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   2acbc:	mov	w0, w0
   2acc0:	add	x1, sp, #0x200
   2acc4:	add	x4, sp, #0x280
   2acc8:	ldp	x2, x3, [x1, #-152]
   2accc:	add	x1, sp, #0x280
   2acd0:	stp	x2, x3, [x1, #-216]
   2acd4:	add	x1, sp, #0x200
   2acd8:	str	x0, [sp, #432]
   2acdc:	ldp	x2, x3, [x1, #-168]
   2ace0:	add	x1, sp, #0x280
   2ace4:	stp	x2, x3, [x1, #-232]
   2ace8:	add	x2, sp, #0x200
   2acec:	ldr	x1, [sp, #368]
   2acf0:	ldp	x2, x3, [x2, #-136]
   2acf4:	stp	x2, x3, [x4, #-200]
   2acf8:	cmp	x0, x1
   2acfc:	ldp	x2, x3, [x4, #-248]
   2ad00:	stp	x2, x3, [x4, #-184]
   2ad04:	b.ls	2ad58 <__sanitizer_set_death_callback@@Base+0x45f8>  // b.plast
   2ad08:	ldr	w0, [sp, #400]
   2ad0c:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2ad10:	ldp	x4, x1, [sp, #344]
   2ad14:	add	x24, sp, #0x1d8
   2ad18:	ldr	x5, [sp, #360]
   2ad1c:	mov	x0, x24
   2ad20:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ad24:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ad28:	add	x3, x3, #0x880
   2ad2c:	add	x2, x2, #0x890
   2ad30:	sub	w5, w5, w1
   2ad34:	mov	x1, #0xc8                  	// #200
   2ad38:	bl	6700 <snprintf@plt>
   2ad3c:	ldp	x3, x0, [sp, #384]
   2ad40:	mov	x1, x24
   2ad44:	mov	w2, #0x0                   	// #0
   2ad48:	blr	x3
   2ad4c:	mov	w0, #0x1                   	// #1
   2ad50:	str	w0, [sp, #400]
   2ad54:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2ad58:	ldr	x5, [sp, #360]
   2ad5c:	sub	x1, x1, x0
   2ad60:	str	x1, [sp, #368]
   2ad64:	add	x1, x5, x0
   2ad68:	str	x1, [sp, #360]
   2ad6c:	cbnz	x0, 2afe0 <__sanitizer_set_death_callback@@Base+0x4880>
   2ad70:	ldr	w0, [sp, #464]
   2ad74:	cbz	w0, 2b1cc <__sanitizer_set_death_callback@@Base+0x4a6c>
   2ad78:	ldr	w2, [sp, #280]
   2ad7c:	str	wzr, [sp, #284]
   2ad80:	cmp	w2, #0x3
   2ad84:	ldr	x1, [sp, #424]
   2ad88:	b.gt	2b1bc <__sanitizer_set_death_callback@@Base+0x4a5c>
   2ad8c:	mov	w2, #0x1                   	// #1
   2ad90:	str	w2, [sp, #288]
   2ad94:	cbz	w0, 2adf0 <__sanitizer_set_death_callback@@Base+0x4690>
   2ad98:	str	wzr, [sp, #292]
   2ad9c:	cbz	w0, 2b16c <__sanitizer_set_death_callback@@Base+0x4a0c>
   2ada0:	str	wzr, [sp, #296]
   2ada4:	cbz	w0, 2b11c <__sanitizer_set_death_callback@@Base+0x49bc>
   2ada8:	str	wzr, [sp, #300]
   2adac:	str	x1, [sp, #304]
   2adb0:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2adb4:	ldp	x4, x5, [sp, #408]
   2adb8:	add	x24, sp, #0x1d8
   2adbc:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2adc0:	mov	x0, x24
   2adc4:	add	x3, x3, #0x880
   2adc8:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2adcc:	sub	w5, w1, w5
   2add0:	add	x2, x2, #0x890
   2add4:	mov	x1, #0xc8                  	// #200
   2add8:	bl	6700 <snprintf@plt>
   2addc:	ldp	x3, x0, [sp, #448]
   2ade0:	mov	x1, x24
   2ade4:	mov	w2, #0x0                   	// #0
   2ade8:	blr	x3
   2adec:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2adf0:	ldp	x4, x5, [sp, #408]
   2adf4:	add	x24, sp, #0x1d8
   2adf8:	mov	x0, x24
   2adfc:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ae00:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ae04:	add	x3, x3, #0x880
   2ae08:	add	x2, x2, #0x890
   2ae0c:	sub	w5, w1, w5
   2ae10:	mov	x1, #0xc8                  	// #200
   2ae14:	bl	6700 <snprintf@plt>
   2ae18:	ldp	x3, x0, [sp, #448]
   2ae1c:	mov	w2, #0x0                   	// #0
   2ae20:	mov	x1, x24
   2ae24:	blr	x3
   2ae28:	ldp	x5, x0, [sp, #424]
   2ae2c:	mov	w2, #0x1                   	// #1
   2ae30:	str	w2, [sp, #464]
   2ae34:	cbz	x0, 2bca0 <__sanitizer_set_death_callback@@Base+0x5540>
   2ae38:	sub	x0, x0, #0x1
   2ae3c:	add	x1, x5, #0x1
   2ae40:	stp	x1, x0, [sp, #424]
   2ae44:	ldrb	w24, [x5]
   2ae48:	eor	w24, w24, #0xffffff80
   2ae4c:	sub	w24, w24, #0x80
   2ae50:	sxtb	w24, w24
   2ae54:	str	w24, [sp, #292]
   2ae58:	cbz	x0, 2b114 <__sanitizer_set_death_callback@@Base+0x49b4>
   2ae5c:	add	x2, x1, #0x1
   2ae60:	sub	x0, x0, #0x1
   2ae64:	stp	x2, x0, [sp, #424]
   2ae68:	ldrb	w1, [x1]
   2ae6c:	str	w1, [sp, #296]
   2ae70:	cbz	x0, 2b220 <__sanitizer_set_death_callback@@Base+0x4ac0>
   2ae74:	sub	x25, x0, #0x1
   2ae78:	add	x1, x2, #0x1
   2ae7c:	stp	x1, x25, [sp, #424]
   2ae80:	ldrb	w2, [x2]
   2ae84:	sub	w0, w2, #0x1
   2ae88:	str	w2, [sp, #300]
   2ae8c:	cmp	x0, x25
   2ae90:	str	x1, [sp, #304]
   2ae94:	b.hi	2b218 <__sanitizer_set_death_callback@@Base+0x4ab8>  // b.pmore
   2ae98:	add	x24, x1, x0
   2ae9c:	sub	x0, x25, x0
   2aea0:	str	xzr, [sp, #312]
   2aea4:	add	x25, x1, x25
   2aea8:	stp	x24, x0, [sp, #424]
   2aeac:	cmp	x24, x25
   2aeb0:	mov	x3, #0x0                   	// #0
   2aeb4:	b.cc	2aedc <__sanitizer_set_death_callback@@Base+0x477c>  // b.lo, b.ul, b.last
   2aeb8:	b	2bcc0 <__sanitizer_set_death_callback@@Base+0x5560>
   2aebc:	bl	6800 <__asan_internal_strnlen@plt>
   2aec0:	add	x0, x0, #0x1
   2aec4:	ldr	x3, [sp, #312]
   2aec8:	add	x24, x24, x0
   2aecc:	cmp	x25, x24
   2aed0:	add	x3, x3, #0x1
   2aed4:	str	x3, [sp, #312]
   2aed8:	b.ls	2aeec <__sanitizer_set_death_callback@@Base+0x478c>  // b.plast
   2aedc:	ldrb	w2, [x24]
   2aee0:	sub	x1, x25, x24
   2aee4:	mov	x0, x24
   2aee8:	cbnz	w2, 2aebc <__sanitizer_set_death_callback@@Base+0x475c>
   2aeec:	str	xzr, [sp, #320]
   2aef0:	cbnz	x3, 2b0f8 <__sanitizer_set_death_callback@@Base+0x4998>
   2aef4:	mov	x0, #0x0                   	// #0
   2aef8:	ldr	x6, [sp, #424]
   2aefc:	mov	x25, #0x0                   	// #0
   2af00:	ldrb	w1, [x6]
   2af04:	cbz	w1, 2b0c8 <__sanitizer_set_death_callback@@Base+0x4968>
   2af08:	add	x3, sp, #0x1d8
   2af0c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2af10:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2af14:	add	x2, x2, #0x880
   2af18:	add	x1, x1, #0x890
   2af1c:	stp	x19, x22, [sp, #152]
   2af20:	mov	x19, x6
   2af24:	mov	x22, x1
   2af28:	stp	x20, x21, [sp, #168]
   2af2c:	mov	x20, x25
   2af30:	mov	x21, x2
   2af34:	mov	x25, x3
   2af38:	b	2af68 <__sanitizer_set_death_callback@@Base+0x4808>
   2af3c:	ldr	w0, [sp, #464]
   2af40:	mov	x19, #0x0                   	// #0
   2af44:	cbz	w0, 2afa4 <__sanitizer_set_death_callback@@Base+0x4844>
   2af48:	ldr	x0, [sp, #320]
   2af4c:	str	x19, [x24]
   2af50:	ldr	x1, [x0, x20]
   2af54:	add	x20, x20, #0x8
   2af58:	cbz	x1, 2b074 <__sanitizer_set_death_callback@@Base+0x4914>
   2af5c:	ldr	x19, [sp, #424]
   2af60:	ldrb	w1, [x19]
   2af64:	cbz	w1, 2b0bc <__sanitizer_set_death_callback@@Base+0x495c>
   2af68:	ldr	w1, [sp, #464]
   2af6c:	add	x24, x0, x20
   2af70:	mov	x0, x19
   2af74:	cbnz	w1, 2b074 <__sanitizer_set_death_callback@@Base+0x4914>
   2af78:	ldr	x1, [sp, #432]
   2af7c:	bl	6800 <__asan_internal_strnlen@plt>
   2af80:	add	x0, x0, #0x1
   2af84:	ldr	x1, [sp, #432]
   2af88:	cmp	x0, x1
   2af8c:	b.hi	2af3c <__sanitizer_set_death_callback@@Base+0x47dc>  // b.pmore
   2af90:	ldr	x2, [sp, #424]
   2af94:	sub	x1, x1, x0
   2af98:	add	x0, x2, x0
   2af9c:	stp	x0, x1, [sp, #424]
   2afa0:	b	2af48 <__sanitizer_set_death_callback@@Base+0x47e8>
   2afa4:	ldp	x4, x5, [sp, #408]
   2afa8:	mov	x3, x21
   2afac:	ldr	x8, [sp, #424]
   2afb0:	mov	x2, x22
   2afb4:	mov	x1, #0xc8                  	// #200
   2afb8:	mov	x0, x25
   2afbc:	sub	w5, w8, w5
   2afc0:	bl	6700 <snprintf@plt>
   2afc4:	ldp	x3, x0, [sp, #448]
   2afc8:	mov	x1, x25
   2afcc:	mov	w2, #0x0                   	// #0
   2afd0:	blr	x3
   2afd4:	mov	w0, #0x1                   	// #1
   2afd8:	str	w0, [sp, #464]
   2afdc:	b	2af48 <__sanitizer_set_death_callback@@Base+0x47e8>
   2afe0:	sub	x0, x0, #0x1
   2afe4:	add	x1, x5, #0x1
   2afe8:	stp	x1, x0, [sp, #424]
   2afec:	ldrb	w2, [x5]
   2aff0:	str	w2, [sp, #284]
   2aff4:	ldr	w2, [sp, #280]
   2aff8:	cmp	w2, #0x3
   2affc:	b.gt	2bbf0 <__sanitizer_set_death_callback@@Base+0x5490>
   2b000:	mov	w2, #0x1                   	// #1
   2b004:	str	w2, [sp, #288]
   2b008:	cbz	x0, 2bc48 <__sanitizer_set_death_callback@@Base+0x54e8>
   2b00c:	add	x5, x1, #0x1
   2b010:	sub	x0, x0, #0x1
   2b014:	stp	x5, x0, [sp, #424]
   2b018:	cbnz	x0, 2ae38 <__sanitizer_set_death_callback@@Base+0x46d8>
   2b01c:	ldr	w24, [sp, #464]
   2b020:	mov	w0, w24
   2b024:	cbnz	w24, 2bd24 <__sanitizer_set_death_callback@@Base+0x55c4>
   2b028:	ldp	x4, x1, [sp, #408]
   2b02c:	add	x25, sp, #0x1d8
   2b030:	mov	x0, x25
   2b034:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b038:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b03c:	add	x3, x3, #0x880
   2b040:	add	x2, x2, #0x890
   2b044:	sub	w5, w5, w1
   2b048:	mov	x1, #0xc8                  	// #200
   2b04c:	bl	6700 <snprintf@plt>
   2b050:	ldp	x3, x0, [sp, #448]
   2b054:	mov	x1, x25
   2b058:	mov	w2, #0x0                   	// #0
   2b05c:	blr	x3
   2b060:	mov	w0, #0x1                   	// #1
   2b064:	str	w0, [sp, #464]
   2b068:	ldr	x1, [sp, #424]
   2b06c:	ldr	x0, [sp, #432]
   2b070:	b	2ae54 <__sanitizer_set_death_callback@@Base+0x46f4>
   2b074:	ldp	x19, x22, [sp, #152]
   2b078:	ldp	x20, x21, [sp, #168]
   2b07c:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b080:	ldr	x24, [sp, #136]
   2b084:	mov	x0, x24
   2b088:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   2b08c:	mov	x1, x0
   2b090:	mov	x0, x24
   2b094:	str	x1, [sp, #368]
   2b098:	bl	28a98 <__sanitizer_set_death_callback@@Base+0x2338>
   2b09c:	and	w0, w0, #0xffff
   2b0a0:	str	w0, [sp, #280]
   2b0a4:	sub	w0, w0, #0x2
   2b0a8:	cmp	w0, #0x2
   2b0ac:	b.hi	2ac20 <__sanitizer_set_death_callback@@Base+0x44c0>  // b.pmore
   2b0b0:	ldr	x0, [sp, #136]
   2b0b4:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   2b0b8:	b	2acc0 <__sanitizer_set_death_callback@@Base+0x4560>
   2b0bc:	mov	x6, x19
   2b0c0:	ldp	x19, x22, [sp, #152]
   2b0c4:	ldp	x20, x21, [sp, #168]
   2b0c8:	ldr	x24, [sp, #432]
   2b0cc:	cbnz	x24, 2b22c <__sanitizer_set_death_callback@@Base+0x4acc>
   2b0d0:	ldr	w0, [sp, #464]
   2b0d4:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b0d8:	ldp	x4, x5, [sp, #408]
   2b0dc:	add	x24, sp, #0x1d8
   2b0e0:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b0e4:	mov	x0, x24
   2b0e8:	add	x3, x3, #0x880
   2b0ec:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b0f0:	sub	w5, w6, w5
   2b0f4:	b	2add0 <__sanitizer_set_death_callback@@Base+0x4670>
   2b0f8:	lsl	x1, x3, #3
   2b0fc:	mov	x0, x19
   2b100:	ldp	x2, x3, [sp, #384]
   2b104:	bl	65b0 <__asan_backtrace_alloc@plt>
   2b108:	str	x0, [sp, #320]
   2b10c:	cbnz	x0, 2aef8 <__sanitizer_set_death_callback@@Base+0x4798>
   2b110:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b114:	ldr	w0, [sp, #464]
   2b118:	b	2ad9c <__sanitizer_set_death_callback@@Base+0x463c>
   2b11c:	ldp	x4, x5, [sp, #408]
   2b120:	add	x24, sp, #0x1d8
   2b124:	mov	x0, x24
   2b128:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b12c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b130:	add	x3, x3, #0x880
   2b134:	add	x2, x2, #0x890
   2b138:	sub	w5, w1, w5
   2b13c:	mov	x1, #0xc8                  	// #200
   2b140:	bl	6700 <snprintf@plt>
   2b144:	ldp	x3, x0, [sp, #448]
   2b148:	mov	x1, x24
   2b14c:	mov	w2, #0x0                   	// #0
   2b150:	blr	x3
   2b154:	mov	w3, #0x1                   	// #1
   2b158:	mov	x0, #0xffffffff            	// #4294967295
   2b15c:	mov	w2, #0x0                   	// #0
   2b160:	str	w3, [sp, #464]
   2b164:	ldp	x1, x25, [sp, #424]
   2b168:	b	2ae88 <__sanitizer_set_death_callback@@Base+0x4728>
   2b16c:	ldp	x4, x5, [sp, #408]
   2b170:	add	x24, sp, #0x1d8
   2b174:	mov	x0, x24
   2b178:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b17c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b180:	add	x3, x3, #0x880
   2b184:	add	x2, x2, #0x890
   2b188:	sub	w5, w1, w5
   2b18c:	mov	x1, #0xc8                  	// #200
   2b190:	bl	6700 <snprintf@plt>
   2b194:	ldp	x3, x0, [sp, #448]
   2b198:	mov	x1, x24
   2b19c:	mov	w2, #0x0                   	// #0
   2b1a0:	blr	x3
   2b1a4:	mov	w3, #0x1                   	// #1
   2b1a8:	mov	w1, #0x0                   	// #0
   2b1ac:	str	w3, [sp, #464]
   2b1b0:	ldp	x2, x0, [sp, #424]
   2b1b4:	b	2ae6c <__sanitizer_set_death_callback@@Base+0x470c>
   2b1b8:	ldr	w0, [sp, #464]
   2b1bc:	cbz	w0, 2bc54 <__sanitizer_set_death_callback@@Base+0x54f4>
   2b1c0:	str	wzr, [sp, #288]
   2b1c4:	cbnz	w0, 2ad98 <__sanitizer_set_death_callback@@Base+0x4638>
   2b1c8:	b	2adf0 <__sanitizer_set_death_callback@@Base+0x4690>
   2b1cc:	ldp	x4, x1, [sp, #408]
   2b1d0:	add	x24, sp, #0x1d8
   2b1d4:	mov	x0, x24
   2b1d8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b1dc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b1e0:	add	x3, x3, #0x880
   2b1e4:	add	x2, x2, #0x890
   2b1e8:	sub	w5, w5, w1
   2b1ec:	mov	x1, #0xc8                  	// #200
   2b1f0:	bl	6700 <snprintf@plt>
   2b1f4:	ldp	x3, x0, [sp, #448]
   2b1f8:	mov	x1, x24
   2b1fc:	mov	w2, #0x0                   	// #0
   2b200:	blr	x3
   2b204:	mov	w3, #0x1                   	// #1
   2b208:	mov	w2, #0x0                   	// #0
   2b20c:	str	w3, [sp, #464]
   2b210:	ldp	x1, x0, [sp, #424]
   2b214:	b	2aff0 <__sanitizer_set_death_callback@@Base+0x4890>
   2b218:	ldr	w0, [sp, #464]
   2b21c:	b	2adb0 <__sanitizer_set_death_callback@@Base+0x4650>
   2b220:	ldr	w0, [sp, #464]
   2b224:	mov	x1, x2
   2b228:	b	2ada4 <__sanitizer_set_death_callback@@Base+0x4644>
   2b22c:	add	x25, x6, #0x1
   2b230:	sub	x0, x24, #0x1
   2b234:	str	xzr, [sp, #328]
   2b238:	add	x24, x6, x24
   2b23c:	stp	x25, x0, [sp, #424]
   2b240:	cmp	x25, x24
   2b244:	mov	x1, #0x0                   	// #0
   2b248:	b.cs	2b2dc <__sanitizer_set_death_callback@@Base+0x4b7c>  // b.hs, b.nlast
   2b24c:	ldrb	w0, [x25]
   2b250:	cbz	w0, 2b2dc <__sanitizer_set_death_callback@@Base+0x4b7c>
   2b254:	sub	x1, x24, x25
   2b258:	mov	x0, x25
   2b25c:	bl	6800 <__asan_internal_strnlen@plt>
   2b260:	add	x1, x0, #0x1
   2b264:	add	x2, x25, x1
   2b268:	ldrsb	w1, [x25, x1]
   2b26c:	tbz	w1, #31, 2bc18 <__sanitizer_set_death_callback@@Base+0x54b8>
   2b270:	add	x25, x25, x0
   2b274:	mov	x0, #0x1                   	// #1
   2b278:	add	x0, x0, #0x1
   2b27c:	ldrsb	w1, [x25, x0]
   2b280:	tbnz	w1, #31, 2b278 <__sanitizer_set_death_callback@@Base+0x4b18>
   2b284:	ldrsb	w1, [x2, x0]
   2b288:	add	x0, x2, x0
   2b28c:	tbz	w1, #31, 2bbe8 <__sanitizer_set_death_callback@@Base+0x5488>
   2b290:	sub	x2, x0, #0x1
   2b294:	mov	x25, #0x1                   	// #1
   2b298:	add	x25, x25, #0x1
   2b29c:	ldrsb	w1, [x2, x25]
   2b2a0:	tbnz	w1, #31, 2b298 <__sanitizer_set_death_callback@@Base+0x4b38>
   2b2a4:	ldrsb	w1, [x0, x25]
   2b2a8:	add	x0, x0, x25
   2b2ac:	tbz	w1, #31, 2bbe0 <__sanitizer_set_death_callback@@Base+0x5480>
   2b2b0:	sub	x2, x0, #0x1
   2b2b4:	mov	x25, #0x1                   	// #1
   2b2b8:	add	x25, x25, #0x1
   2b2bc:	ldrsb	w1, [x2, x25]
   2b2c0:	tbnz	w1, #31, 2b2b8 <__sanitizer_set_death_callback@@Base+0x4b58>
   2b2c4:	ldr	x1, [sp, #328]
   2b2c8:	add	x25, x0, x25
   2b2cc:	cmp	x24, x25
   2b2d0:	add	x1, x1, #0x1
   2b2d4:	str	x1, [sp, #328]
   2b2d8:	b.hi	2b24c <__sanitizer_set_death_callback@@Base+0x4aec>  // b.pmore
   2b2dc:	ldp	x2, x3, [sp, #384]
   2b2e0:	lsl	x1, x1, #3
   2b2e4:	mov	x0, x19
   2b2e8:	bl	65b0 <__asan_backtrace_alloc@plt>
   2b2ec:	str	x0, [sp, #336]
   2b2f0:	cbz	x0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b2f4:	ldr	x25, [sp, #424]
   2b2f8:	add	x24, sp, #0x198
   2b2fc:	mov	x1, #0x0                   	// #0
   2b300:	ldrb	w0, [x25]
   2b304:	cbz	w0, 2b450 <__sanitizer_set_death_callback@@Base+0x4cf0>
   2b308:	stp	x22, x20, [sp, #168]
   2b30c:	mov	x20, x25
   2b310:	mov	x25, x1
   2b314:	stp	x27, x23, [sp, #152]
   2b318:	str	x21, [sp, #184]
   2b31c:	nop
   2b320:	ldr	w0, [sp, #464]
   2b324:	cbnz	w0, 2bcb0 <__sanitizer_set_death_callback@@Base+0x5550>
   2b328:	ldr	x1, [sp, #432]
   2b32c:	mov	x0, x20
   2b330:	bl	6800 <__asan_internal_strnlen@plt>
   2b334:	add	x1, x0, #0x1
   2b338:	ldr	x2, [sp, #432]
   2b33c:	cmp	x1, x2
   2b340:	b.ls	2b37c <__sanitizer_set_death_callback@@Base+0x4c1c>  // b.plast
   2b344:	ldr	w0, [sp, #464]
   2b348:	ldp	x27, x23, [sp, #152]
   2b34c:	ldp	x22, x20, [sp, #168]
   2b350:	ldr	x21, [sp, #184]
   2b354:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b358:	ldp	x4, x1, [sp, #408]
   2b35c:	add	x24, sp, #0x1d8
   2b360:	ldr	x5, [sp, #424]
   2b364:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b368:	mov	x0, x24
   2b36c:	add	x3, x3, #0x880
   2b370:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b374:	sub	w5, w5, w1
   2b378:	b	2add0 <__sanitizer_set_death_callback@@Base+0x4670>
   2b37c:	ldr	x3, [sp, #424]
   2b380:	sub	x2, x2, x1
   2b384:	mov	x0, x24
   2b388:	add	x1, x3, x1
   2b38c:	stp	x1, x2, [sp, #424]
   2b390:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b394:	ldrb	w1, [x20]
   2b398:	cmp	w1, #0x2f
   2b39c:	b.eq	2ba6c <__sanitizer_set_death_callback@@Base+0x530c>  // b.none
   2b3a0:	cbz	x0, 2ba60 <__sanitizer_set_death_callback@@Base+0x5300>
   2b3a4:	ldr	x1, [sp, #312]
   2b3a8:	sub	x2, x0, #0x1
   2b3ac:	cmp	x2, x1
   2b3b0:	b.cs	2bccc <__sanitizer_set_death_callback@@Base+0x556c>  // b.hs, b.nlast
   2b3b4:	ldr	x1, [sp, #320]
   2b3b8:	add	x0, x1, x0, lsl #3
   2b3bc:	ldur	x23, [x0, #-8]
   2b3c0:	mov	x0, x23
   2b3c4:	bl	64b0 <__asan_internal_strlen@plt>
   2b3c8:	mov	x27, x0
   2b3cc:	mov	x0, x20
   2b3d0:	bl	64b0 <__asan_internal_strlen@plt>
   2b3d4:	ldp	x2, x3, [sp, #384]
   2b3d8:	mov	x22, x0
   2b3dc:	add	x1, x27, x22
   2b3e0:	mov	x0, x19
   2b3e4:	add	x1, x1, #0x2
   2b3e8:	bl	65b0 <__asan_backtrace_alloc@plt>
   2b3ec:	mov	x21, x0
   2b3f0:	cbz	x0, 2bcb0 <__sanitizer_set_death_callback@@Base+0x5550>
   2b3f4:	mov	x1, x23
   2b3f8:	mov	x2, x27
   2b3fc:	bl	64a0 <__asan_internal_memcpy@plt>
   2b400:	mov	w3, #0x2f                  	// #47
   2b404:	strb	w3, [x21, x27]
   2b408:	add	x0, x27, #0x1
   2b40c:	add	x2, x22, #0x1
   2b410:	add	x0, x21, x0
   2b414:	mov	x1, x20
   2b418:	bl	64a0 <__asan_internal_memcpy@plt>
   2b41c:	ldr	x0, [sp, #336]
   2b420:	str	x21, [x0, x25]
   2b424:	mov	x0, x24
   2b428:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b42c:	mov	x0, x24
   2b430:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b434:	ldr	x20, [sp, #424]
   2b438:	add	x25, x25, #0x8
   2b43c:	ldrb	w0, [x20]
   2b440:	cbnz	w0, 2b320 <__sanitizer_set_death_callback@@Base+0x4bc0>
   2b444:	ldp	x27, x23, [sp, #152]
   2b448:	ldp	x22, x20, [sp, #168]
   2b44c:	ldr	x21, [sp, #184]
   2b450:	ldr	w0, [sp, #464]
   2b454:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b458:	ldr	x0, [sp, #328]
   2b45c:	cbz	x0, 2bbd0 <__sanitizer_set_death_callback@@Base+0x5470>
   2b460:	ldr	x0, [sp, #336]
   2b464:	ldr	x0, [x0]
   2b468:	str	x0, [sp, #152]
   2b46c:	ldr	x1, [sp, #368]
   2b470:	cbz	x1, 2b528 <__sanitizer_set_death_callback@@Base+0x4dc8>
   2b474:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b478:	add	x0, x0, #0x890
   2b47c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b480:	add	x2, x2, #0x880
   2b484:	stp	x2, x0, [sp, #208]
   2b488:	add	x2, sp, #0x1d8
   2b48c:	mov	x25, #0x0                   	// #0
   2b490:	ldr	x0, [sp, #152]
   2b494:	stp	x27, x23, [sp, #160]
   2b498:	mov	w24, #0x0                   	// #0
   2b49c:	ldr	x27, [sp, #120]
   2b4a0:	stp	x26, x22, [sp, #176]
   2b4a4:	mov	x26, x0
   2b4a8:	ldr	x23, [sp, #136]
   2b4ac:	str	x2, [sp, #224]
   2b4b0:	mov	w2, #0x1                   	// #1
   2b4b4:	mov	w22, w2
   2b4b8:	stp	x20, x21, [sp, #192]
   2b4bc:	nop
   2b4c0:	sub	x4, x1, #0x1
   2b4c4:	ldr	x2, [sp, #360]
   2b4c8:	ldr	w3, [sp, #300]
   2b4cc:	add	x5, x2, #0x1
   2b4d0:	stp	x5, x4, [sp, #360]
   2b4d4:	ldrb	w0, [x2]
   2b4d8:	cmp	w0, w3
   2b4dc:	b.cs	2b6f8 <__sanitizer_set_death_callback@@Base+0x4f98>  // b.hs, b.nlast
   2b4e0:	cbz	w0, 2b794 <__sanitizer_set_death_callback@@Base+0x5034>
   2b4e4:	cmp	w0, #0x5
   2b4e8:	b.eq	2b6a0 <__sanitizer_set_death_callback@@Base+0x4f40>  // b.none
   2b4ec:	b.hi	2b680 <__sanitizer_set_death_callback@@Base+0x4f20>  // b.pmore
   2b4f0:	cmp	w0, #0x3
   2b4f4:	b.eq	2b834 <__sanitizer_set_death_callback@@Base+0x50d4>  // b.none
   2b4f8:	cmp	w0, #0x4
   2b4fc:	b.ne	2b640 <__sanitizer_set_death_callback@@Base+0x4ee0>  // b.any
   2b500:	mov	x0, x23
   2b504:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b508:	cbnz	x0, 2bb34 <__sanitizer_set_death_callback@@Base+0x53d4>
   2b50c:	ldr	x1, [sp, #368]
   2b510:	adrp	x26, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2b514:	add	x26, x26, #0xd20
   2b518:	cbnz	x1, 2b4c0 <__sanitizer_set_death_callback@@Base+0x4d60>
   2b51c:	ldp	x27, x23, [sp, #160]
   2b520:	ldp	x26, x22, [sp, #176]
   2b524:	ldp	x20, x21, [sp, #192]
   2b528:	ldr	w0, [sp, #400]
   2b52c:	cbnz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b530:	ldr	x0, [sp, #272]
   2b534:	cbz	x0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b538:	ldr	x24, [sp, #120]
   2b53c:	mov	x3, x20
   2b540:	mov	x2, x22
   2b544:	mov	x0, x19
   2b548:	mov	x4, x24
   2b54c:	mov	x1, #0x18                  	// #24
   2b550:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2b554:	cbz	x0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b558:	mov	x1, #0xffffffffffffffff    	// #-1
   2b55c:	stp	x1, xzr, [x0]
   2b560:	mov	x3, x20
   2b564:	str	xzr, [x0, #16]
   2b568:	mov	x2, x22
   2b56c:	mov	x1, x24
   2b570:	mov	x0, x19
   2b574:	bl	6600 <__asan_backtrace_vector_release@plt>
   2b578:	cbz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2b57c:	ldr	x0, [sp, #248]
   2b580:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x18a0>
   2b584:	ldr	x1, [sp, #272]
   2b588:	add	x3, x3, #0x4f8
   2b58c:	mov	x2, #0x18                  	// #24
   2b590:	str	x0, [sp, #128]
   2b594:	bl	63a0 <__asan_backtrace_qsort@plt>
   2b598:	ldr	w0, [x19, #8]
   2b59c:	ldr	x1, [sp, #272]
   2b5a0:	str	x1, [sp, #120]
   2b5a4:	cbz	w0, 2bb24 <__sanitizer_set_death_callback@@Base+0x53c4>
   2b5a8:	add	x0, sp, #0x198
   2b5ac:	mov	x2, #0x20                  	// #32
   2b5b0:	mov	x24, x0
   2b5b4:	mov	w1, #0x0                   	// #0
   2b5b8:	str	xzr, [sp, #160]
   2b5bc:	ldr	x25, [x27, #16]
   2b5c0:	bl	6530 <__asan_internal_memset@plt>
   2b5c4:	add	x4, sp, #0x1d8
   2b5c8:	str	x21, [sp, #152]
   2b5cc:	mov	x21, x24
   2b5d0:	ldr	w2, [x28, #120]
   2b5d4:	ldr	x24, [sp, #144]
   2b5d8:	str	x23, [sp, #136]
   2b5dc:	mov	x23, x4
   2b5e0:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2b5e4:	ldp	x3, x0, [x25]
   2b5e8:	add	x1, x1, #0x998
   2b5ec:	ldr	x5, [x28, #56]
   2b5f0:	stp	x1, x5, [sp, #472]
   2b5f4:	stp	x3, x0, [sp, #488]
   2b5f8:	str	w2, [sp, #504]
   2b5fc:	str	x22, [sp, #512]
   2b600:	str	x20, [sp, #520]
   2b604:	str	wzr, [sp, #528]
   2b608:	cbz	x0, 2ba78 <__sanitizer_set_death_callback@@Base+0x5318>
   2b60c:	stp	x21, x21, [sp]
   2b610:	mov	x7, x20
   2b614:	mov	x6, x22
   2b618:	mov	x5, x24
   2b61c:	mov	x4, x23
   2b620:	mov	x2, x25
   2b624:	mov	x1, x28
   2b628:	mov	x0, x19
   2b62c:	mov	x3, #0x0                   	// #0
   2b630:	bl	29ec8 <__sanitizer_set_death_callback@@Base+0x3768>
   2b634:	cbz	w0, 2bb10 <__sanitizer_set_death_callback@@Base+0x53b0>
   2b638:	ldr	x0, [sp, #496]
   2b63c:	b	2b608 <__sanitizer_set_death_callback@@Base+0x4ea8>
   2b640:	cmp	w0, #0x1
   2b644:	b.eq	2b848 <__sanitizer_set_death_callback@@Base+0x50e8>  // b.none
   2b648:	cmp	w0, #0x2
   2b64c:	b.ne	2b9ac <__sanitizer_set_death_callback@@Base+0x524c>  // b.any
   2b650:	mov	x0, x23
   2b654:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b658:	ldr	w2, [sp, #284]
   2b65c:	add	x24, x0, w24, uxtw
   2b660:	ldr	w3, [sp, #288]
   2b664:	ldr	x1, [sp, #368]
   2b668:	mul	x0, x2, x24
   2b66c:	udiv	x2, x24, x3
   2b670:	udiv	x0, x0, x3
   2b674:	msub	w24, w2, w3, w24
   2b678:	add	x25, x25, x0
   2b67c:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b680:	cmp	w0, #0x9
   2b684:	b.eq	2b9d8 <__sanitizer_set_death_callback@@Base+0x5278>  // b.none
   2b688:	b.ls	2b6b0 <__sanitizer_set_death_callback@@Base+0x4f50>  // b.plast
   2b68c:	cmp	w0, #0xb
   2b690:	mov	x1, x4
   2b694:	b.ls	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>  // b.plast
   2b698:	cmp	w0, #0xc
   2b69c:	b.ne	2b9ac <__sanitizer_set_death_callback@@Base+0x524c>  // b.any
   2b6a0:	mov	x0, x23
   2b6a4:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b6a8:	ldr	x1, [sp, #368]
   2b6ac:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b6b0:	cmp	w0, #0x7
   2b6b4:	mov	x1, x4
   2b6b8:	b.ls	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>  // b.plast
   2b6bc:	cmp	w0, #0x8
   2b6c0:	b.ne	2b9ac <__sanitizer_set_death_callback@@Base+0x524c>  // b.any
   2b6c4:	ldr	w4, [sp, #296]
   2b6c8:	mov	w0, #0xff                  	// #255
   2b6cc:	sub	w0, w0, w3
   2b6d0:	ldr	w2, [sp, #284]
   2b6d4:	ldr	w3, [sp, #288]
   2b6d8:	udiv	w0, w0, w4
   2b6dc:	add	w24, w0, w24
   2b6e0:	mul	w0, w24, w2
   2b6e4:	udiv	w2, w24, w3
   2b6e8:	udiv	w0, w0, w3
   2b6ec:	msub	w24, w2, w3, w24
   2b6f0:	add	x25, x25, x0
   2b6f4:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b6f8:	add	x1, sp, #0x124
   2b6fc:	sub	w0, w0, w3
   2b700:	ldp	w6, w5, [x1]
   2b704:	ldp	w2, w3, [x1, #-8]
   2b708:	udiv	w1, w0, w5
   2b70c:	add	w24, w1, w24
   2b710:	msub	w0, w1, w5, w0
   2b714:	add	w0, w0, w6
   2b718:	mul	w1, w24, w2
   2b71c:	add	w22, w22, w0
   2b720:	udiv	w2, w24, w3
   2b724:	ldr	x0, [sp, #272]
   2b728:	udiv	w1, w1, w3
   2b72c:	msub	w24, w2, w3, w24
   2b730:	ldp	x2, x3, [sp, #384]
   2b734:	add	x25, x25, x1
   2b738:	cbz	x0, 2b75c <__sanitizer_set_death_callback@@Base+0x4ffc>
   2b73c:	add	x0, x0, x0, lsl #1
   2b740:	ldr	x1, [sp, #248]
   2b744:	lsl	x0, x0, #3
   2b748:	sub	x0, x0, #0x18
   2b74c:	add	x5, x1, x0
   2b750:	ldr	x0, [x1, x0]
   2b754:	cmp	x25, x0
   2b758:	b.eq	2b878 <__sanitizer_set_death_callback@@Base+0x5118>  // b.none
   2b75c:	mov	x4, x27
   2b760:	mov	x0, x19
   2b764:	mov	x1, #0x18                  	// #24
   2b768:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2b76c:	cbz	x0, 2b840 <__sanitizer_set_death_callback@@Base+0x50e0>
   2b770:	ldr	x1, [x28, #16]
   2b774:	ldr	x2, [sp, #272]
   2b778:	add	x1, x1, x25
   2b77c:	stp	x1, x26, [x0]
   2b780:	add	x1, x2, #0x1
   2b784:	stp	w22, w2, [x0, #16]
   2b788:	str	x1, [sp, #272]
   2b78c:	ldr	x1, [sp, #368]
   2b790:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b794:	mov	x0, x23
   2b798:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b79c:	ldp	x5, x1, [sp, #360]
   2b7a0:	mov	x21, x0
   2b7a4:	cbnz	x1, 2b7cc <__sanitizer_set_death_callback@@Base+0x506c>
   2b7a8:	ldr	w0, [sp, #400]
   2b7ac:	cbz	w0, 2b898 <__sanitizer_set_death_callback@@Base+0x5138>
   2b7b0:	sub	x0, x21, #0x1
   2b7b4:	cmp	x0, x1
   2b7b8:	b.ls	2bba0 <__sanitizer_set_death_callback@@Base+0x5440>  // b.plast
   2b7bc:	ldp	x27, x23, [sp, #160]
   2b7c0:	ldp	x26, x22, [sp, #176]
   2b7c4:	ldp	x20, x21, [sp, #192]
   2b7c8:	b	2ad08 <__sanitizer_set_death_callback@@Base+0x45a8>
   2b7cc:	sub	x1, x1, #0x1
   2b7d0:	add	x20, x5, #0x1
   2b7d4:	stp	x20, x1, [sp, #360]
   2b7d8:	ldrb	w2, [x5]
   2b7dc:	cmp	w2, #0x3
   2b7e0:	b.eq	2b8d4 <__sanitizer_set_death_callback@@Base+0x5174>  // b.none
   2b7e4:	b.hi	2b804 <__sanitizer_set_death_callback@@Base+0x50a4>  // b.pmore
   2b7e8:	cmp	w2, #0x1
   2b7ec:	b.ne	2b810 <__sanitizer_set_death_callback@@Base+0x50b0>  // b.any
   2b7f0:	mov	w22, w2
   2b7f4:	mov	w24, #0x0                   	// #0
   2b7f8:	mov	x25, #0x0                   	// #0
   2b7fc:	ldr	x26, [sp, #152]
   2b800:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b804:	cmp	w2, #0x4
   2b808:	b.eq	2b6a0 <__sanitizer_set_death_callback@@Base+0x4f40>  // b.none
   2b80c:	b	2b7b0 <__sanitizer_set_death_callback@@Base+0x5050>
   2b810:	cmp	w2, #0x2
   2b814:	b.ne	2b7b0 <__sanitizer_set_death_callback@@Base+0x5050>  // b.any
   2b818:	ldr	x0, [sp, #128]
   2b81c:	ldr	w1, [x0, #48]
   2b820:	mov	x0, x23
   2b824:	bl	28d28 <__sanitizer_set_death_callback@@Base+0x25c8>
   2b828:	mov	x25, x0
   2b82c:	ldr	x1, [sp, #368]
   2b830:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b834:	mov	x0, x23
   2b838:	bl	28930 <__sanitizer_set_death_callback@@Base+0x21d0>
   2b83c:	add	w22, w22, w0
   2b840:	ldr	x1, [sp, #368]
   2b844:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b848:	ldr	x0, [sp, #272]
   2b84c:	ldp	x2, x3, [sp, #384]
   2b850:	cbz	x0, 2b75c <__sanitizer_set_death_callback@@Base+0x4ffc>
   2b854:	add	x0, x0, x0, lsl #1
   2b858:	ldr	x1, [sp, #248]
   2b85c:	lsl	x0, x0, #3
   2b860:	sub	x0, x0, #0x18
   2b864:	add	x5, x1, x0
   2b868:	ldr	x0, [x1, x0]
   2b86c:	cmp	x0, x25
   2b870:	b.ne	2b75c <__sanitizer_set_death_callback@@Base+0x4ffc>  // b.any
   2b874:	nop
   2b878:	ldr	x0, [x5, #8]
   2b87c:	cmp	x0, x26
   2b880:	b.ne	2b75c <__sanitizer_set_death_callback@@Base+0x4ffc>  // b.any
   2b884:	ldr	w0, [x5, #16]
   2b888:	mov	x1, x4
   2b88c:	cmp	w22, w0
   2b890:	b.ne	2b75c <__sanitizer_set_death_callback@@Base+0x4ffc>  // b.any
   2b894:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b898:	ldp	x3, x2, [sp, #208]
   2b89c:	mov	x1, #0xc8                  	// #200
   2b8a0:	ldp	x4, x7, [sp, #344]
   2b8a4:	ldr	x20, [sp, #224]
   2b8a8:	mov	x0, x20
   2b8ac:	sub	w5, w5, w7
   2b8b0:	bl	6700 <snprintf@plt>
   2b8b4:	ldp	x3, x0, [sp, #384]
   2b8b8:	mov	x1, x20
   2b8bc:	mov	w2, #0x0                   	// #0
   2b8c0:	blr	x3
   2b8c4:	mov	w0, #0x1                   	// #1
   2b8c8:	str	w0, [sp, #400]
   2b8cc:	ldr	x1, [sp, #368]
   2b8d0:	b	2b7b0 <__sanitizer_set_death_callback@@Base+0x5050>
   2b8d4:	mov	x0, x20
   2b8d8:	str	x5, [sp, #136]
   2b8dc:	bl	6800 <__asan_internal_strnlen@plt>
   2b8e0:	add	x1, x0, #0x1
   2b8e4:	ldr	x2, [sp, #368]
   2b8e8:	cmp	x1, x2
   2b8ec:	b.hi	2b7bc <__sanitizer_set_death_callback@@Base+0x505c>  // b.pmore
   2b8f0:	ldr	x3, [sp, #360]
   2b8f4:	sub	x2, x2, x1
   2b8f8:	mov	x0, x23
   2b8fc:	add	x1, x3, x1
   2b900:	stp	x1, x2, [sp, #360]
   2b904:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b908:	mov	x26, x0
   2b90c:	mov	x0, x23
   2b910:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b914:	mov	x0, x23
   2b918:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b91c:	ldr	x5, [sp, #136]
   2b920:	ldrb	w0, [x5, #1]
   2b924:	cmp	w0, #0x2f
   2b928:	b.eq	2bb94 <__sanitizer_set_death_callback@@Base+0x5434>  // b.none
   2b92c:	cbnz	w26, 2bbb4 <__sanitizer_set_death_callback@@Base+0x5454>
   2b930:	ldr	x0, [sp, #128]
   2b934:	ldr	x5, [x0, #72]
   2b938:	mov	x0, x5
   2b93c:	str	x5, [sp, #232]
   2b940:	bl	64b0 <__asan_internal_strlen@plt>
   2b944:	mov	x21, x0
   2b948:	mov	x0, x20
   2b94c:	bl	64b0 <__asan_internal_strlen@plt>
   2b950:	mov	x1, x0
   2b954:	ldp	x2, x3, [sp, #384]
   2b958:	str	x1, [sp, #136]
   2b95c:	add	x1, x21, x1
   2b960:	mov	x0, x19
   2b964:	add	x1, x1, #0x2
   2b968:	bl	65b0 <__asan_backtrace_alloc@plt>
   2b96c:	mov	x26, x0
   2b970:	cbz	x0, 2bd30 <__sanitizer_set_death_callback@@Base+0x55d0>
   2b974:	ldr	x5, [sp, #232]
   2b978:	mov	x2, x21
   2b97c:	mov	x1, x5
   2b980:	bl	64a0 <__asan_internal_memcpy@plt>
   2b984:	ldr	x1, [sp, #136]
   2b988:	mov	w0, #0x2f                  	// #47
   2b98c:	strb	w0, [x26, x21]
   2b990:	add	x0, x21, #0x1
   2b994:	add	x2, x1, #0x1
   2b998:	add	x0, x26, x0
   2b99c:	mov	x1, x20
   2b9a0:	bl	64a0 <__asan_internal_memcpy@plt>
   2b9a4:	ldr	x1, [sp, #368]
   2b9a8:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b9ac:	ldr	x1, [sp, #304]
   2b9b0:	sub	w0, w0, #0x1
   2b9b4:	ldrb	w21, [x1, w0, uxtw]
   2b9b8:	cbz	w21, 2bc10 <__sanitizer_set_death_callback@@Base+0x54b0>
   2b9bc:	nop
   2b9c0:	mov	x0, x23
   2b9c4:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2b9c8:	subs	w21, w21, #0x1
   2b9cc:	b.ne	2b9c0 <__sanitizer_set_death_callback@@Base+0x5260>  // b.any
   2b9d0:	ldr	x1, [sp, #368]
   2b9d4:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b9d8:	cmp	x4, #0x1
   2b9dc:	b.hi	2ba34 <__sanitizer_set_death_callback@@Base+0x52d4>  // b.pmore
   2b9e0:	ldr	w0, [sp, #400]
   2b9e4:	mov	x1, x4
   2b9e8:	cbz	w0, 2b9f4 <__sanitizer_set_death_callback@@Base+0x5294>
   2b9ec:	mov	w24, #0x0                   	// #0
   2b9f0:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2b9f4:	ldp	x3, x2, [sp, #208]
   2b9f8:	mov	x1, #0xc8                  	// #200
   2b9fc:	ldp	x4, x6, [sp, #344]
   2ba00:	mov	w24, #0x0                   	// #0
   2ba04:	ldr	x20, [sp, #224]
   2ba08:	mov	x0, x20
   2ba0c:	sub	w5, w5, w6
   2ba10:	bl	6700 <snprintf@plt>
   2ba14:	ldp	x3, x0, [sp, #384]
   2ba18:	mov	x1, x20
   2ba1c:	mov	w2, #0x0                   	// #0
   2ba20:	blr	x3
   2ba24:	mov	w0, #0x1                   	// #1
   2ba28:	str	w0, [sp, #400]
   2ba2c:	ldr	x1, [sp, #368]
   2ba30:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2ba34:	ldr	w0, [sp, #376]
   2ba38:	sub	x1, x1, #0x3
   2ba3c:	add	x3, x2, #0x3
   2ba40:	stp	x3, x1, [sp, #360]
   2ba44:	cbz	w0, 2bb58 <__sanitizer_set_death_callback@@Base+0x53f8>
   2ba48:	ldrb	w0, [x2, #1]
   2ba4c:	mov	w24, #0x0                   	// #0
   2ba50:	ldrb	w2, [x2, #2]
   2ba54:	orr	w0, w2, w0, lsl #8
   2ba58:	add	x25, x25, w0, uxth
   2ba5c:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2ba60:	ldr	x0, [sp, #128]
   2ba64:	ldr	x23, [x0, #72]
   2ba68:	cbnz	x23, 2b3c0 <__sanitizer_set_death_callback@@Base+0x4c60>
   2ba6c:	ldr	x0, [sp, #336]
   2ba70:	str	x20, [x0, x25]
   2ba74:	b	2b424 <__sanitizer_set_death_callback@@Base+0x4cc4>
   2ba78:	ldr	x5, [x21, #24]
   2ba7c:	mov	x24, x21
   2ba80:	ldr	x23, [sp, #136]
   2ba84:	ldr	x21, [sp, #152]
   2ba88:	cbz	x5, 2bb18 <__sanitizer_set_death_callback@@Base+0x53b8>
   2ba8c:	ldr	x0, [sp, #160]
   2ba90:	cbz	x0, 2bc20 <__sanitizer_set_death_callback@@Base+0x54c0>
   2ba94:	mov	x1, x0
   2ba98:	mov	x24, x0
   2ba9c:	mov	x3, x20
   2baa0:	mov	x2, x22
   2baa4:	mov	x0, x19
   2baa8:	str	x5, [sp, #136]
   2baac:	bl	6950 <__asan_backtrace_vector_finish@plt>
   2bab0:	mov	x25, x0
   2bab4:	cbz	x0, 2bb18 <__sanitizer_set_death_callback@@Base+0x53b8>
   2bab8:	ldr	x5, [sp, #136]
   2babc:	str	xzr, [x24, #24]
   2bac0:	mov	x1, x5
   2bac4:	mov	x0, x25
   2bac8:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x18a0>
   2bacc:	mov	x2, #0x18                  	// #24
   2bad0:	add	x3, x3, #0x790
   2bad4:	str	x5, [sp, #136]
   2bad8:	bl	63a0 <__asan_backtrace_qsort@plt>
   2badc:	ldr	x5, [sp, #136]
   2bae0:	ldr	x2, [sp, #312]
   2bae4:	cbnz	x2, 2bb70 <__sanitizer_set_death_callback@@Base+0x5410>
   2bae8:	ldp	x2, x1, [sp, #328]
   2baec:	mov	x4, x20
   2baf0:	mov	x3, x22
   2baf4:	mov	x0, x19
   2baf8:	str	x5, [sp, #136]
   2bafc:	lsl	x2, x2, #3
   2bb00:	bl	6890 <__asan_backtrace_free@plt>
   2bb04:	mov	w1, #0x1                   	// #1
   2bb08:	ldp	x24, x5, [sp, #128]
   2bb0c:	b	2aa94 <__sanitizer_set_death_callback@@Base+0x4334>
   2bb10:	ldr	x23, [sp, #136]
   2bb14:	ldr	x21, [sp, #152]
   2bb18:	mov	x25, #0x0                   	// #0
   2bb1c:	mov	x5, #0x0                   	// #0
   2bb20:	b	2bae0 <__sanitizer_set_death_callback@@Base+0x5380>
   2bb24:	add	x24, x28, #0x80
   2bb28:	str	x24, [sp, #160]
   2bb2c:	ldr	x25, [x27, #16]
   2bb30:	b	2b5c4 <__sanitizer_set_death_callback@@Base+0x4e64>
   2bb34:	ldr	x1, [sp, #328]
   2bb38:	sub	x2, x0, #0x1
   2bb3c:	cmp	x2, x1
   2bb40:	b.cs	2bcf8 <__sanitizer_set_death_callback@@Base+0x5598>  // b.hs, b.nlast
   2bb44:	ldr	x2, [sp, #336]
   2bb48:	ldr	x1, [sp, #368]
   2bb4c:	add	x0, x2, x0, lsl #3
   2bb50:	ldur	x26, [x0, #-8]
   2bb54:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2bb58:	ldrb	w0, [x2, #2]
   2bb5c:	mov	w24, #0x0                   	// #0
   2bb60:	ldrb	w2, [x2, #1]
   2bb64:	orr	w0, w2, w0, lsl #8
   2bb68:	add	x25, x25, w0, uxth
   2bb6c:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2bb70:	ldr	x1, [sp, #320]
   2bb74:	lsl	x2, x2, #3
   2bb78:	mov	x4, x20
   2bb7c:	mov	x3, x22
   2bb80:	mov	x0, x19
   2bb84:	str	x5, [sp, #136]
   2bb88:	bl	6890 <__asan_backtrace_free@plt>
   2bb8c:	ldr	x5, [sp, #136]
   2bb90:	b	2bae8 <__sanitizer_set_death_callback@@Base+0x5388>
   2bb94:	mov	x26, x20
   2bb98:	ldr	x1, [sp, #368]
   2bb9c:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2bba0:	ldr	x2, [sp, #360]
   2bba4:	sub	x1, x1, x0
   2bba8:	add	x0, x2, x0
   2bbac:	stp	x0, x1, [sp, #360]
   2bbb0:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2bbb4:	ldr	x0, [sp, #312]
   2bbb8:	sub	w26, w26, #0x1
   2bbbc:	cmp	x26, x0
   2bbc0:	b.cs	2bd40 <__sanitizer_set_death_callback@@Base+0x55e0>  // b.hs, b.nlast
   2bbc4:	ldr	x0, [sp, #320]
   2bbc8:	ldr	x5, [x0, x26, lsl #3]
   2bbcc:	b	2b938 <__sanitizer_set_death_callback@@Base+0x51d8>
   2bbd0:	adrp	x0, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2bbd4:	add	x0, x0, #0xd20
   2bbd8:	str	x0, [sp, #152]
   2bbdc:	b	2b46c <__sanitizer_set_death_callback@@Base+0x4d0c>
   2bbe0:	mov	x25, #0x1                   	// #1
   2bbe4:	b	2b2c4 <__sanitizer_set_death_callback@@Base+0x4b64>
   2bbe8:	mov	x25, #0x1                   	// #1
   2bbec:	b	2b2a4 <__sanitizer_set_death_callback@@Base+0x4b44>
   2bbf0:	cbz	x0, 2b1b8 <__sanitizer_set_death_callback@@Base+0x4a58>
   2bbf4:	sub	x0, x0, #0x1
   2bbf8:	add	x2, x1, #0x1
   2bbfc:	stp	x2, x0, [sp, #424]
   2bc00:	ldrb	w3, [x1]
   2bc04:	mov	x1, x2
   2bc08:	str	w3, [sp, #288]
   2bc0c:	b	2b008 <__sanitizer_set_death_callback@@Base+0x48a8>
   2bc10:	mov	x1, x4
   2bc14:	b	2b518 <__sanitizer_set_death_callback@@Base+0x4db8>
   2bc18:	mov	x0, #0x1                   	// #1
   2bc1c:	b	2b284 <__sanitizer_set_death_callback@@Base+0x4b24>
   2bc20:	mov	x3, x20
   2bc24:	mov	x2, x22
   2bc28:	add	x1, sp, #0x198
   2bc2c:	mov	x0, x19
   2bc30:	str	x5, [sp, #136]
   2bc34:	bl	6600 <__asan_backtrace_vector_release@plt>
   2bc38:	cbz	w0, 2bb18 <__sanitizer_set_death_callback@@Base+0x53b8>
   2bc3c:	ldr	x25, [x24]
   2bc40:	ldr	x5, [sp, #136]
   2bc44:	b	2bac0 <__sanitizer_set_death_callback@@Base+0x5360>
   2bc48:	ldr	w0, [sp, #464]
   2bc4c:	cbnz	w0, 2ad98 <__sanitizer_set_death_callback@@Base+0x4638>
   2bc50:	b	2adf0 <__sanitizer_set_death_callback@@Base+0x4690>
   2bc54:	ldp	x4, x5, [sp, #408]
   2bc58:	add	x24, sp, #0x1d8
   2bc5c:	mov	x0, x24
   2bc60:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bc64:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bc68:	add	x3, x3, #0x880
   2bc6c:	add	x2, x2, #0x890
   2bc70:	sub	w5, w1, w5
   2bc74:	mov	x1, #0xc8                  	// #200
   2bc78:	bl	6700 <snprintf@plt>
   2bc7c:	ldp	x3, x0, [sp, #448]
   2bc80:	mov	x1, x24
   2bc84:	mov	w2, #0x0                   	// #0
   2bc88:	blr	x3
   2bc8c:	mov	w1, #0x1                   	// #1
   2bc90:	mov	w3, #0x0                   	// #0
   2bc94:	str	w1, [sp, #464]
   2bc98:	ldp	x2, x0, [sp, #424]
   2bc9c:	b	2bc04 <__sanitizer_set_death_callback@@Base+0x54a4>
   2bca0:	mov	x1, x5
   2bca4:	mov	w0, w2
   2bca8:	str	wzr, [sp, #292]
   2bcac:	b	2ad9c <__sanitizer_set_death_callback@@Base+0x463c>
   2bcb0:	ldp	x27, x23, [sp, #152]
   2bcb4:	ldp	x22, x20, [sp, #168]
   2bcb8:	ldr	x21, [sp, #184]
   2bcbc:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2bcc0:	mov	x0, #0x0                   	// #0
   2bcc4:	str	xzr, [sp, #320]
   2bcc8:	b	2aef8 <__sanitizer_set_death_callback@@Base+0x4798>
   2bccc:	add	x24, sp, #0x1d8
   2bcd0:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bcd4:	mov	x0, x24
   2bcd8:	add	x3, x3, #0xab8
   2bcdc:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bce0:	ldp	x27, x23, [sp, #152]
   2bce4:	ldp	x22, x20, [sp, #168]
   2bce8:	ldr	x21, [sp, #184]
   2bcec:	ldp	x4, x1, [sp, #344]
   2bcf0:	ldr	x5, [sp, #360]
   2bcf4:	b	2ac3c <__sanitizer_set_death_callback@@Base+0x44dc>
   2bcf8:	add	x24, sp, #0x1d8
   2bcfc:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bd00:	mov	x0, x24
   2bd04:	add	x3, x3, #0xb20
   2bd08:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bd0c:	ldp	x27, x23, [sp, #160]
   2bd10:	ldp	x26, x22, [sp, #176]
   2bd14:	ldp	x20, x21, [sp, #192]
   2bd18:	ldp	x4, x1, [sp, #344]
   2bd1c:	ldr	x5, [sp, #360]
   2bd20:	b	2ac3c <__sanitizer_set_death_callback@@Base+0x44dc>
   2bd24:	mov	x1, x5
   2bd28:	str	wzr, [sp, #292]
   2bd2c:	b	2ad9c <__sanitizer_set_death_callback@@Base+0x463c>
   2bd30:	ldp	x27, x23, [sp, #160]
   2bd34:	ldp	x26, x22, [sp, #176]
   2bd38:	ldp	x20, x21, [sp, #192]
   2bd3c:	b	2aa40 <__sanitizer_set_death_callback@@Base+0x42e0>
   2bd40:	add	x24, sp, #0x1d8
   2bd44:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bd48:	mov	x0, x24
   2bd4c:	add	x3, x3, #0xaf0
   2bd50:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bd54:	ldp	x27, x23, [sp, #160]
   2bd58:	ldp	x26, x22, [sp, #176]
   2bd5c:	ldp	x20, x21, [sp, #192]
   2bd60:	ldp	x4, x1, [sp, #344]
   2bd64:	ldr	x5, [sp, #360]
   2bd68:	b	2ac3c <__sanitizer_set_death_callback@@Base+0x44dc>
   2bd6c:	nop
   2bd70:	stp	x29, x30, [sp, #-96]!
   2bd74:	mov	x29, sp
   2bd78:	stp	x23, x24, [sp, #48]
   2bd7c:	mov	x24, x0
   2bd80:	ldr	w0, [x0, #8]
   2bd84:	stp	x19, x20, [sp, #16]
   2bd88:	mov	x23, x3
   2bd8c:	mov	x20, x2
   2bd90:	stp	x21, x22, [sp, #32]
   2bd94:	mov	x22, x1
   2bd98:	mov	x21, x4
   2bd9c:	cbnz	w0, 2be00 <__sanitizer_set_death_callback@@Base+0x56a0>
   2bda0:	ldr	x19, [x24, #32]
   2bda4:	cbz	x19, 2be48 <__sanitizer_set_death_callback@@Base+0x56e8>
   2bda8:	str	x25, [sp, #64]
   2bdac:	add	x25, sp, #0x5c
   2bdb0:	b	2bdc4 <__sanitizer_set_death_callback@@Base+0x5664>
   2bdb4:	ldr	w0, [sp, #92]
   2bdb8:	cbnz	w0, 2be74 <__sanitizer_set_death_callback@@Base+0x5714>
   2bdbc:	ldr	x19, [x19]
   2bdc0:	cbz	x19, 2be44 <__sanitizer_set_death_callback@@Base+0x56e4>
   2bdc4:	mov	x6, x25
   2bdc8:	mov	x5, x21
   2bdcc:	mov	x4, x23
   2bdd0:	mov	x3, x20
   2bdd4:	mov	x2, x22
   2bdd8:	mov	x1, x19
   2bddc:	mov	x0, x24
   2bde0:	bl	2a688 <__sanitizer_set_death_callback@@Base+0x3f28>
   2bde4:	cbz	w0, 2bdb4 <__sanitizer_set_death_callback@@Base+0x5654>
   2bde8:	ldp	x19, x20, [sp, #16]
   2bdec:	ldp	x21, x22, [sp, #32]
   2bdf0:	ldp	x23, x24, [sp, #48]
   2bdf4:	ldr	x25, [sp, #64]
   2bdf8:	ldp	x29, x30, [sp], #96
   2bdfc:	ret
   2be00:	add	x19, x24, #0x20
   2be04:	str	x25, [sp, #64]
   2be08:	add	x25, sp, #0x5c
   2be0c:	b	2be20 <__sanitizer_set_death_callback@@Base+0x56c0>
   2be10:	bl	2a688 <__sanitizer_set_death_callback@@Base+0x3f28>
   2be14:	cbnz	w0, 2bde8 <__sanitizer_set_death_callback@@Base+0x5688>
   2be18:	ldr	w0, [sp, #92]
   2be1c:	cbnz	w0, 2be74 <__sanitizer_set_death_callback@@Base+0x5714>
   2be20:	ldar	x19, [x19]
   2be24:	mov	x6, x25
   2be28:	mov	x5, x21
   2be2c:	mov	x4, x23
   2be30:	mov	x3, x20
   2be34:	mov	x2, x22
   2be38:	mov	x1, x19
   2be3c:	mov	x0, x24
   2be40:	cbnz	x19, 2be10 <__sanitizer_set_death_callback@@Base+0x56b0>
   2be44:	ldr	x25, [sp, #64]
   2be48:	mov	x1, x22
   2be4c:	mov	x0, x21
   2be50:	mov	x4, #0x0                   	// #0
   2be54:	mov	w3, #0x0                   	// #0
   2be58:	mov	x2, #0x0                   	// #0
   2be5c:	blr	x20
   2be60:	ldp	x19, x20, [sp, #16]
   2be64:	ldp	x21, x22, [sp, #32]
   2be68:	ldp	x23, x24, [sp, #48]
   2be6c:	ldp	x29, x30, [sp], #96
   2be70:	ret
   2be74:	mov	w0, #0x0                   	// #0
   2be78:	ldp	x19, x20, [sp, #16]
   2be7c:	ldp	x21, x22, [sp, #32]
   2be80:	ldp	x23, x24, [sp, #48]
   2be84:	ldr	x25, [sp, #64]
   2be88:	ldp	x29, x30, [sp], #96
   2be8c:	ret

000000000002be90 <__asan_backtrace_dwarf_add@@Base>:
   2be90:	sub	sp, sp, #0x380
   2be94:	add	x8, sp, #0x178
   2be98:	stp	x29, x30, [sp, #48]
   2be9c:	add	x29, sp, #0x30
   2bea0:	stp	x4, x5, [sp, #312]
   2bea4:	add	x4, sp, #0x160
   2bea8:	stp	x19, x20, [sp, #64]
   2beac:	mov	x19, x2
   2beb0:	add	x20, sp, #0x198
   2beb4:	stp	x21, x22, [sp, #80]
   2beb8:	mov	x22, x3
   2bebc:	mov	x21, x4
   2bec0:	stp	x23, x24, [sp, #96]
   2bec4:	stp	x25, x26, [sp, #112]
   2bec8:	mov	x25, x0
   2becc:	mov	x0, x8
   2bed0:	stp	x27, x28, [sp, #128]
   2bed4:	str	x7, [sp, #184]
   2bed8:	stp	x8, x1, [sp, #232]
   2bedc:	mov	w1, #0x0                   	// #0
   2bee0:	str	x4, [sp, #256]
   2bee4:	str	x6, [sp, #272]
   2bee8:	stp	x2, x3, [sp, #296]
   2beec:	mov	x2, #0x18                  	// #24
   2bef0:	str	x20, [sp, #336]
   2bef4:	ldr	x28, [sp, #944]
   2bef8:	ldr	x23, [sp, #952]
   2befc:	bl	6530 <__asan_internal_memset@plt>
   2bf00:	mov	x2, #0x18                  	// #24
   2bf04:	mov	w1, #0x0                   	// #0
   2bf08:	mov	x0, x20
   2bf0c:	bl	6530 <__asan_internal_memset@plt>
   2bf10:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bf14:	add	x3, x3, #0x998
   2bf18:	stp	xzr, x3, [sp, #432]
   2bf1c:	mov	x0, x21
   2bf20:	ldr	w3, [sp, #928]
   2bf24:	mov	x2, #0x18                  	// #24
   2bf28:	mov	w1, #0x0                   	// #0
   2bf2c:	str	xzr, [sp, #400]
   2bf30:	stp	x19, x19, [sp, #448]
   2bf34:	str	x22, [sp, #464]
   2bf38:	str	w3, [sp, #472]
   2bf3c:	stp	x28, x23, [sp, #480]
   2bf40:	str	wzr, [sp, #496]
   2bf44:	bl	6530 <__asan_internal_memset@plt>
   2bf48:	ldr	x0, [sp, #464]
   2bf4c:	str	x0, [sp, #176]
   2bf50:	cbz	x0, 2cdb0 <__asan_backtrace_dwarf_add@@Base+0xf20>
   2bf54:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2bf58:	add	x0, x0, #0x8a0
   2bf5c:	str	xzr, [sp, #176]
   2bf60:	str	xzr, [sp, #192]
   2bf64:	str	x0, [sp, #248]
   2bf68:	ldr	w0, [sp, #496]
   2bf6c:	cbnz	w0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2bf70:	ldr	x1, [sp, #456]
   2bf74:	add	x19, sp, #0x1b8
   2bf78:	mov	x0, x19
   2bf7c:	str	x1, [sp, #216]
   2bf80:	str	wzr, [sp, #344]
   2bf84:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   2bf88:	mov	w2, w0
   2bf8c:	str	x2, [sp, #152]
   2bf90:	mov	x1, #0xffffffff            	// #4294967295
   2bf94:	cmp	x1, w0, uxtw
   2bf98:	b.eq	2c4b8 <__asan_backtrace_dwarf_add@@Base+0x628>  // b.none
   2bf9c:	add	x2, sp, #0x2d0
   2bfa0:	add	x3, sp, #0x2d0
   2bfa4:	ldp	x0, x1, [x19, #16]
   2bfa8:	stp	x0, x1, [x2, #-200]
   2bfac:	add	x0, sp, #0x1f8
   2bfb0:	str	x0, [sp, #160]
   2bfb4:	ldp	x0, x1, [x19]
   2bfb8:	stp	x0, x1, [x2, #-216]
   2bfbc:	ldp	x0, x1, [x19, #32]
   2bfc0:	stp	x0, x1, [x3, #-184]
   2bfc4:	ldp	x0, x1, [x19, #48]
   2bfc8:	stp	x0, x1, [x3, #-168]
   2bfcc:	ldr	x2, [sp, #152]
   2bfd0:	str	x2, [sp, #528]
   2bfd4:	ldr	x1, [sp, #464]
   2bfd8:	cmp	x1, x2
   2bfdc:	b.cs	2c0c0 <__asan_backtrace_dwarf_add@@Base+0x230>  // b.hs, b.nlast
   2bfe0:	ldr	w0, [sp, #496]
   2bfe4:	cbz	w0, 2c428 <__asan_backtrace_dwarf_add@@Base+0x598>
   2bfe8:	ldr	x0, [sp, #176]
   2bfec:	cbz	x0, 2c094 <__asan_backtrace_dwarf_add@@Base+0x204>
   2bff0:	ldr	x20, [sp, #352]
   2bff4:	add	x21, x20, x0, lsl #3
   2bff8:	ldr	x19, [x20]
   2bffc:	ldr	x2, [x19, #88]
   2c000:	cbz	x2, 2c03c <__asan_backtrace_dwarf_add@@Base+0x1ac>
   2c004:	mov	x22, #0x0                   	// #0
   2c008:	ldr	x1, [x19, #96]
   2c00c:	mov	x4, x23
   2c010:	mov	x3, x28
   2c014:	mov	x0, x25
   2c018:	add	x1, x1, x22, lsl #5
   2c01c:	add	x22, x22, #0x1
   2c020:	ldp	x2, x1, [x1, #16]
   2c024:	lsl	x2, x2, #3
   2c028:	bl	6890 <__asan_backtrace_free@plt>
   2c02c:	ldr	x2, [x19, #88]
   2c030:	cmp	x22, x2
   2c034:	b.cc	2c008 <__asan_backtrace_dwarf_add@@Base+0x178>  // b.lo, b.ul, b.last
   2c038:	lsl	x2, x2, #5
   2c03c:	ldr	x1, [x19, #96]
   2c040:	mov	x4, x23
   2c044:	mov	x3, x28
   2c048:	mov	x0, x25
   2c04c:	bl	6890 <__asan_backtrace_free@plt>
   2c050:	ldr	x1, [x20], #8
   2c054:	stp	xzr, xzr, [x19, #88]
   2c058:	mov	x4, x23
   2c05c:	mov	x3, x28
   2c060:	mov	x0, x25
   2c064:	mov	x2, #0x88                  	// #136
   2c068:	bl	6890 <__asan_backtrace_free@plt>
   2c06c:	cmp	x20, x21
   2c070:	b.ne	2bff8 <__asan_backtrace_dwarf_add@@Base+0x168>  // b.any
   2c074:	ldp	x5, x4, [sp, #360]
   2c078:	mov	x3, x23
   2c07c:	ldr	x1, [sp, #256]
   2c080:	mov	x2, x28
   2c084:	mov	x0, x25
   2c088:	add	x4, x4, x5
   2c08c:	stp	xzr, x4, [sp, #360]
   2c090:	bl	6600 <__asan_backtrace_vector_release@plt>
   2c094:	ldr	x0, [sp, #400]
   2c098:	cbnz	x0, 2c4d0 <__asan_backtrace_dwarf_add@@Base+0x640>
   2c09c:	mov	w0, #0x0                   	// #0
   2c0a0:	ldp	x29, x30, [sp, #48]
   2c0a4:	ldp	x19, x20, [sp, #64]
   2c0a8:	ldp	x21, x22, [sp, #80]
   2c0ac:	ldp	x23, x24, [sp, #96]
   2c0b0:	ldp	x25, x26, [sp, #112]
   2c0b4:	ldp	x27, x28, [sp, #128]
   2c0b8:	add	sp, sp, #0x380
   2c0bc:	ret
   2c0c0:	ldr	x0, [sp, #456]
   2c0c4:	sub	x1, x1, x2
   2c0c8:	str	x1, [sp, #464]
   2c0cc:	cmp	x2, #0x1
   2c0d0:	add	x1, x0, x2
   2c0d4:	str	x1, [sp, #456]
   2c0d8:	b.hi	2c128 <__asan_backtrace_dwarf_add@@Base+0x298>  // b.pmore
   2c0dc:	ldr	w1, [sp, #560]
   2c0e0:	ldp	x4, x5, [sp, #504]
   2c0e4:	cbz	w1, 2c470 <__asan_backtrace_dwarf_add@@Base+0x5e0>
   2c0e8:	add	x19, sp, #0x2b8
   2c0ec:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c0f0:	ldr	x0, [sp, #520]
   2c0f4:	add	x2, x20, #0x890
   2c0f8:	mov	x1, #0xc8                  	// #200
   2c0fc:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c100:	sub	w5, w0, w5
   2c104:	add	x3, x3, #0xb50
   2c108:	mov	x0, x19
   2c10c:	bl	6700 <snprintf@plt>
   2c110:	ldr	x3, [sp, #544]
   2c114:	mov	x1, x19
   2c118:	ldr	x0, [sp, #552]
   2c11c:	mov	w2, #0x0                   	// #0
   2c120:	blr	x3
   2c124:	b	2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c128:	add	x2, x0, #0x2
   2c12c:	str	x2, [sp, #520]
   2c130:	ldr	x2, [sp, #152]
   2c134:	ldr	w1, [sp, #536]
   2c138:	sub	x2, x2, #0x2
   2c13c:	str	x2, [sp, #528]
   2c140:	cbz	w1, 2c414 <__asan_backtrace_dwarf_add@@Base+0x584>
   2c144:	ldrb	w1, [x0]
   2c148:	ldrb	w0, [x0, #1]
   2c14c:	bfi	w0, w1, #8, #24
   2c150:	str	w0, [sp, #172]
   2c154:	ldr	w0, [sp, #172]
   2c158:	sub	w0, w0, #0x2
   2c15c:	cmp	w0, #0x2
   2c160:	b.hi	2cdd4 <__asan_backtrace_dwarf_add@@Base+0xf44>  // b.pmore
   2c164:	ldr	x4, [sp, #256]
   2c168:	mov	x3, x23
   2c16c:	mov	x2, x28
   2c170:	mov	x0, x25
   2c174:	mov	x1, #0x8                   	// #8
   2c178:	bl	6510 <__asan_backtrace_vector_grow@plt>
   2c17c:	mov	x19, x0
   2c180:	cbz	x0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c184:	mov	x3, x23
   2c188:	mov	x2, x28
   2c18c:	mov	x0, x25
   2c190:	mov	x1, #0x88                  	// #136
   2c194:	bl	65b0 <__asan_backtrace_alloc@plt>
   2c198:	mov	x22, x0
   2c19c:	cbz	x0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c1a0:	ldr	x0, [sp, #176]
   2c1a4:	str	x22, [x19]
   2c1a8:	mov	x2, #0x10                  	// #16
   2c1ac:	mov	w1, #0x0                   	// #0
   2c1b0:	add	x0, x0, #0x1
   2c1b4:	str	x0, [sp, #176]
   2c1b8:	add	x0, x22, #0x58
   2c1bc:	bl	6530 <__asan_internal_memset@plt>
   2c1c0:	ldr	w0, [sp, #344]
   2c1c4:	cbz	w0, 2c3e0 <__asan_backtrace_dwarf_add@@Base+0x550>
   2c1c8:	ldr	x0, [sp, #160]
   2c1cc:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   2c1d0:	stp	xzr, xzr, [x22, #88]
   2c1d4:	ldr	x1, [sp, #184]
   2c1d8:	cmp	x1, x0
   2c1dc:	b.ls	2c3fc <__asan_backtrace_dwarf_add@@Base+0x56c>  // b.plast
   2c1e0:	ldr	x3, [sp, #272]
   2c1e4:	mov	x4, x1
   2c1e8:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c1ec:	add	x1, x1, #0xb90
   2c1f0:	add	x2, x3, x0
   2c1f4:	sub	x0, x4, x0
   2c1f8:	add	x4, sp, #0x238
   2c1fc:	str	x28, [sp, #608]
   2c200:	str	x23, [sp, #616]
   2c204:	add	x20, sp, #0x2b8
   2c208:	str	wzr, [sp, #624]
   2c20c:	add	x26, sp, #0x278
   2c210:	stp	x2, x0, [x4, #16]
   2c214:	add	x2, sp, #0x2d0
   2c218:	ldr	w0, [sp, #928]
   2c21c:	str	w0, [sp, #600]
   2c220:	add	x0, sp, #0x2d0
   2c224:	stp	x1, x3, [x4]
   2c228:	add	x19, sp, #0x238
   2c22c:	mov	x21, #0x0                   	// #0
   2c230:	ldp	x0, x1, [x0, #-152]
   2c234:	stp	x0, x1, [x2, #-88]
   2c238:	ldp	x0, x1, [x2, #-136]
   2c23c:	stp	x0, x1, [x2, #-72]
   2c240:	ldp	x0, x1, [x2, #-120]
   2c244:	stp	x0, x1, [x2, #-56]
   2c248:	ldr	x24, [sp, #248]
   2c24c:	str	x22, [sp, #208]
   2c250:	ldp	x0, x1, [x2, #-104]
   2c254:	stp	x0, x1, [x2, #-40]
   2c258:	str	x19, [sp, #224]
   2c25c:	str	x26, [sp, #280]
   2c260:	adrp	x6, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c264:	add	x22, x6, #0x890
   2c268:	str	x26, [sp, #200]
   2c26c:	mov	x26, x21
   2c270:	mov	x21, x22
   2c274:	mov	w2, #0x0                   	// #0
   2c278:	mov	w27, #0x0                   	// #0
   2c27c:	mov	x19, #0x0                   	// #0
   2c280:	ldr	x0, [sp, #656]
   2c284:	ldr	x1, [sp, #648]
   2c288:	cbnz	x0, 2c2d8 <__asan_backtrace_dwarf_add@@Base+0x448>
   2c28c:	ldr	w0, [sp, #688]
   2c290:	cbnz	w0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c294:	ldr	x4, [sp, #632]
   2c298:	add	x19, sp, #0x2b8
   2c29c:	ldr	x5, [sp, #640]
   2c2a0:	mov	x0, x19
   2c2a4:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c2a8:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c2ac:	sub	w5, w1, w5
   2c2b0:	add	x3, x3, #0x880
   2c2b4:	add	x2, x2, #0x890
   2c2b8:	mov	x1, #0xc8                  	// #200
   2c2bc:	bl	6700 <snprintf@plt>
   2c2c0:	ldr	x3, [sp, #672]
   2c2c4:	mov	x1, x19
   2c2c8:	ldr	x0, [sp, #680]
   2c2cc:	mov	w2, #0x0                   	// #0
   2c2d0:	blr	x3
   2c2d4:	b	2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c2d8:	sub	x0, x0, #0x1
   2c2dc:	add	x5, x1, #0x1
   2c2e0:	str	x5, [sp, #648]
   2c2e4:	cmp	w27, #0x3f
   2c2e8:	str	x0, [sp, #656]
   2c2ec:	ldrb	w22, [x1]
   2c2f0:	b.hi	2c3a0 <__asan_backtrace_dwarf_add@@Base+0x510>  // b.pmore
   2c2f4:	and	x0, x22, #0x7f
   2c2f8:	lsl	x0, x0, x27
   2c2fc:	orr	x19, x19, x0
   2c300:	add	w27, w27, #0x7
   2c304:	tbnz	w22, #7, 2c280 <__asan_backtrace_dwarf_add@@Base+0x3f0>
   2c308:	mov	x21, x26
   2c30c:	ldr	w27, [sp, #688]
   2c310:	ldr	x26, [sp, #200]
   2c314:	cbz	x19, 2c6cc <__asan_backtrace_dwarf_add@@Base+0x83c>
   2c318:	cbnz	w27, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c31c:	mov	x0, x26
   2c320:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c324:	ldr	x0, [sp, #656]
   2c328:	add	x21, x21, #0x1
   2c32c:	ldr	x6, [sp, #648]
   2c330:	cbnz	x0, 2c5d4 <__asan_backtrace_dwarf_add@@Base+0x744>
   2c334:	ldr	w1, [sp, #688]
   2c338:	cbz	w1, 2c4f4 <__asan_backtrace_dwarf_add@@Base+0x664>
   2c33c:	mov	x27, x26
   2c340:	mov	x26, x23
   2c344:	mov	x23, x21
   2c348:	adrp	x22, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c34c:	add	x22, x22, #0x890
   2c350:	mov	x2, x22
   2c354:	mov	x7, #0x0                   	// #0
   2c358:	mov	x22, x7
   2c35c:	mov	x7, x27
   2c360:	mov	x27, x26
   2c364:	mov	x26, x25
   2c368:	mov	x25, x23
   2c36c:	mov	x23, x2
   2c370:	mov	w1, #0x0                   	// #0
   2c374:	mov	w19, #0x0                   	// #0
   2c378:	cbnz	x0, 2c598 <__asan_backtrace_dwarf_add@@Base+0x708>
   2c37c:	ldr	w0, [sp, #688]
   2c380:	mov	x21, x25
   2c384:	mov	x23, x27
   2c388:	mov	x25, x26
   2c38c:	mov	x26, x7
   2c390:	cbz	w0, 2c550 <__asan_backtrace_dwarf_add@@Base+0x6c0>
   2c394:	mov	x0, x26
   2c398:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c39c:	b	2c260 <__asan_backtrace_dwarf_add@@Base+0x3d0>
   2c3a0:	cbnz	w2, 2c300 <__asan_backtrace_dwarf_add@@Base+0x470>
   2c3a4:	ldr	x4, [sp, #632]
   2c3a8:	mov	x3, x24
   2c3ac:	ldr	x6, [sp, #640]
   2c3b0:	mov	x2, x21
   2c3b4:	mov	x1, #0xc8                  	// #200
   2c3b8:	mov	x0, x20
   2c3bc:	sub	w5, w5, w6
   2c3c0:	bl	6700 <snprintf@plt>
   2c3c4:	ldr	x4, [sp, #672]
   2c3c8:	mov	w2, #0x0                   	// #0
   2c3cc:	ldr	x0, [sp, #680]
   2c3d0:	mov	x1, x20
   2c3d4:	blr	x4
   2c3d8:	mov	w2, #0x1                   	// #1
   2c3dc:	b	2c300 <__asan_backtrace_dwarf_add@@Base+0x470>
   2c3e0:	ldr	x0, [sp, #160]
   2c3e4:	bl	28b78 <__sanitizer_set_death_callback@@Base+0x2418>
   2c3e8:	stp	xzr, xzr, [x22, #88]
   2c3ec:	mov	w0, w0
   2c3f0:	ldr	x1, [sp, #184]
   2c3f4:	cmp	x1, x0
   2c3f8:	b.hi	2c1e0 <__asan_backtrace_dwarf_add@@Base+0x350>  // b.pmore
   2c3fc:	mov	x0, x23
   2c400:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c404:	mov	w2, #0x0                   	// #0
   2c408:	add	x1, x1, #0xb70
   2c40c:	blr	x28
   2c410:	b	2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c414:	ldrb	w1, [x0, #1]
   2c418:	ldrb	w0, [x0]
   2c41c:	bfi	w0, w1, #8, #24
   2c420:	str	w0, [sp, #172]
   2c424:	b	2c154 <__asan_backtrace_dwarf_add@@Base+0x2c4>
   2c428:	ldp	x4, x1, [sp, #440]
   2c42c:	add	x19, sp, #0x2b8
   2c430:	ldr	x5, [sp, #456]
   2c434:	mov	x0, x19
   2c438:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c43c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c440:	add	x3, x3, #0x880
   2c444:	add	x2, x2, #0x890
   2c448:	sub	w5, w5, w1
   2c44c:	mov	x1, #0xc8                  	// #200
   2c450:	bl	6700 <snprintf@plt>
   2c454:	ldp	x3, x0, [sp, #480]
   2c458:	mov	x1, x19
   2c45c:	mov	w2, #0x0                   	// #0
   2c460:	blr	x3
   2c464:	mov	w0, #0x1                   	// #1
   2c468:	str	w0, [sp, #496]
   2c46c:	b	2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c470:	add	x19, sp, #0x2b8
   2c474:	sub	w5, w0, w5
   2c478:	mov	x1, #0xc8                  	// #200
   2c47c:	mov	x0, x19
   2c480:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c484:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c488:	add	x3, x3, #0x880
   2c48c:	add	x2, x20, #0x890
   2c490:	bl	6700 <snprintf@plt>
   2c494:	ldr	x3, [sp, #544]
   2c498:	mov	x1, x19
   2c49c:	ldr	x0, [sp, #552]
   2c4a0:	mov	w2, #0x0                   	// #0
   2c4a4:	blr	x3
   2c4a8:	mov	w0, #0x1                   	// #1
   2c4ac:	str	w0, [sp, #560]
   2c4b0:	ldp	x4, x5, [sp, #504]
   2c4b4:	b	2c0f0 <__asan_backtrace_dwarf_add@@Base+0x260>
   2c4b8:	mov	x0, x19
   2c4bc:	bl	28c50 <__sanitizer_set_death_callback@@Base+0x24f0>
   2c4c0:	mov	w1, #0x1                   	// #1
   2c4c4:	str	x0, [sp, #152]
   2c4c8:	str	w1, [sp, #344]
   2c4cc:	b	2bf9c <__asan_backtrace_dwarf_add@@Base+0x10c>
   2c4d0:	ldp	x5, x4, [sp, #384]
   2c4d4:	mov	x3, x23
   2c4d8:	ldr	x1, [sp, #232]
   2c4dc:	mov	x2, x28
   2c4e0:	mov	x0, x25
   2c4e4:	add	x4, x4, x5
   2c4e8:	stp	xzr, x4, [sp, #384]
   2c4ec:	bl	6600 <__asan_backtrace_vector_release@plt>
   2c4f0:	b	2c09c <__asan_backtrace_dwarf_add@@Base+0x20c>
   2c4f4:	ldr	x4, [sp, #632]
   2c4f8:	mov	x1, #0xc8                  	// #200
   2c4fc:	ldr	x5, [sp, #640]
   2c500:	mov	x0, x20
   2c504:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c508:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c50c:	sub	w5, w6, w5
   2c510:	add	x3, x3, #0x880
   2c514:	add	x2, x2, #0x890
   2c518:	bl	6700 <snprintf@plt>
   2c51c:	ldr	x3, [sp, #672]
   2c520:	mov	x1, x20
   2c524:	ldr	x0, [sp, #680]
   2c528:	mov	w2, #0x0                   	// #0
   2c52c:	mov	x27, x26
   2c530:	mov	x26, x23
   2c534:	mov	x23, x21
   2c538:	blr	x3
   2c53c:	mov	w0, #0x1                   	// #1
   2c540:	str	w0, [sp, #688]
   2c544:	ldr	x6, [sp, #648]
   2c548:	ldr	x0, [sp, #656]
   2c54c:	b	2c348 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   2c550:	ldr	x4, [sp, #632]
   2c554:	mov	x1, #0xc8                  	// #200
   2c558:	ldr	x5, [sp, #640]
   2c55c:	mov	x0, x20
   2c560:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c564:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c568:	add	x3, x3, #0x880
   2c56c:	add	x2, x2, #0x890
   2c570:	sub	w5, w6, w5
   2c574:	bl	6700 <snprintf@plt>
   2c578:	ldr	x3, [sp, #672]
   2c57c:	mov	x1, x20
   2c580:	ldr	x0, [sp, #680]
   2c584:	mov	w2, #0x0                   	// #0
   2c588:	blr	x3
   2c58c:	mov	w0, #0x1                   	// #1
   2c590:	str	w0, [sp, #688]
   2c594:	b	2c394 <__asan_backtrace_dwarf_add@@Base+0x504>
   2c598:	sub	x0, x0, #0x1
   2c59c:	add	x5, x6, #0x1
   2c5a0:	str	x5, [sp, #648]
   2c5a4:	cmp	w19, #0x3f
   2c5a8:	str	x0, [sp, #656]
   2c5ac:	ldrb	w21, [x6]
   2c5b0:	b.hi	2c5f4 <__asan_backtrace_dwarf_add@@Base+0x764>  // b.pmore
   2c5b4:	and	x0, x21, #0x7f
   2c5b8:	lsl	x0, x0, x19
   2c5bc:	orr	x22, x22, x0
   2c5c0:	add	w19, w19, #0x7
   2c5c4:	tbz	w21, #7, 2c640 <__asan_backtrace_dwarf_add@@Base+0x7b0>
   2c5c8:	ldr	x6, [sp, #648]
   2c5cc:	ldr	x0, [sp, #656]
   2c5d0:	b	2c378 <__asan_backtrace_dwarf_add@@Base+0x4e8>
   2c5d4:	add	x6, x6, #0x1
   2c5d8:	sub	x0, x0, #0x1
   2c5dc:	mov	x27, x26
   2c5e0:	mov	x26, x23
   2c5e4:	mov	x23, x21
   2c5e8:	str	x6, [sp, #648]
   2c5ec:	str	x0, [sp, #656]
   2c5f0:	b	2c348 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   2c5f4:	cbnz	w1, 2c5c0 <__asan_backtrace_dwarf_add@@Base+0x730>
   2c5f8:	ldr	x4, [sp, #632]
   2c5fc:	mov	x3, x24
   2c600:	ldr	x6, [sp, #640]
   2c604:	mov	x2, x23
   2c608:	mov	x1, #0xc8                  	// #200
   2c60c:	mov	x0, x20
   2c610:	sub	w5, w5, w6
   2c614:	str	x7, [sp, #200]
   2c618:	bl	6700 <snprintf@plt>
   2c61c:	add	w19, w19, #0x7
   2c620:	ldr	x4, [sp, #672]
   2c624:	mov	x1, x20
   2c628:	ldr	x0, [sp, #680]
   2c62c:	mov	w2, #0x0                   	// #0
   2c630:	blr	x4
   2c634:	mov	w1, #0x1                   	// #1
   2c638:	ldr	x7, [sp, #200]
   2c63c:	tbnz	w21, #7, 2c5c8 <__asan_backtrace_dwarf_add@@Base+0x738>
   2c640:	mov	x23, x25
   2c644:	mov	x25, x26
   2c648:	mov	x26, x27
   2c64c:	mov	x27, x7
   2c650:	cbz	x22, 2ce58 <__asan_backtrace_dwarf_add@@Base+0xfc8>
   2c654:	ldr	x6, [sp, #648]
   2c658:	adrp	x22, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c65c:	ldr	x0, [sp, #656]
   2c660:	add	x22, x22, #0x890
   2c664:	mov	w1, #0x0                   	// #0
   2c668:	mov	w19, #0x0                   	// #0
   2c66c:	nop
   2c670:	cbnz	x0, 2cde4 <__asan_backtrace_dwarf_add@@Base+0xf54>
   2c674:	ldr	w1, [sp, #688]
   2c678:	cbnz	w1, 2c348 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   2c67c:	ldr	x4, [sp, #632]
   2c680:	mov	x1, #0xc8                  	// #200
   2c684:	ldr	x5, [sp, #640]
   2c688:	mov	x0, x20
   2c68c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c690:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c694:	sub	w5, w6, w5
   2c698:	add	x3, x3, #0x880
   2c69c:	add	x2, x2, #0x890
   2c6a0:	bl	6700 <snprintf@plt>
   2c6a4:	ldr	x3, [sp, #672]
   2c6a8:	mov	x1, x20
   2c6ac:	ldr	x0, [sp, #680]
   2c6b0:	mov	w2, #0x0                   	// #0
   2c6b4:	blr	x3
   2c6b8:	mov	w0, #0x1                   	// #1
   2c6bc:	str	w0, [sp, #688]
   2c6c0:	ldr	x6, [sp, #648]
   2c6c4:	ldr	x0, [sp, #656]
   2c6c8:	b	2c348 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   2c6cc:	str	x19, [sp, #328]
   2c6d0:	ldr	x22, [sp, #208]
   2c6d4:	ldr	x19, [sp, #224]
   2c6d8:	cbnz	w27, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c6dc:	cbz	x21, 2c9bc <__asan_backtrace_dwarf_add@@Base+0xb2c>
   2c6e0:	lsl	x20, x21, #5
   2c6e4:	mov	x3, x23
   2c6e8:	mov	x1, x20
   2c6ec:	mov	x2, x28
   2c6f0:	mov	x0, x25
   2c6f4:	bl	65b0 <__asan_backtrace_alloc@plt>
   2c6f8:	str	x0, [x22, #96]
   2c6fc:	cbz	x0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c700:	str	x21, [x22, #88]
   2c704:	mov	x2, x20
   2c708:	mov	w1, #0x0                   	// #0
   2c70c:	bl	6530 <__asan_internal_memset@plt>
   2c710:	ldr	w0, [sp, #624]
   2c714:	cbnz	w0, 2cda8 <__asan_backtrace_dwarf_add@@Base+0xf18>
   2c718:	str	x22, [sp, #264]
   2c71c:	add	x21, sp, #0x2b8
   2c720:	str	x28, [sp, #944]
   2c724:	mov	x26, #0x0                   	// #0
   2c728:	ldr	x28, [sp, #248]
   2c72c:	str	x25, [sp, #288]
   2c730:	ldr	x22, [sp, #280]
   2c734:	str	w27, [sp, #348]
   2c738:	str	x23, [sp, #952]
   2c73c:	nop
   2c740:	mov	x0, x19
   2c744:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c748:	mov	x25, x0
   2c74c:	cbz	x0, 2c994 <__asan_backtrace_dwarf_add@@Base+0xb04>
   2c750:	mov	x0, x19
   2c754:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c758:	ldr	x1, [sp, #592]
   2c75c:	mov	x27, x0
   2c760:	ldr	x0, [sp, #584]
   2c764:	cbnz	x1, 2c97c <__asan_backtrace_dwarf_add@@Base+0xaec>
   2c768:	ldr	w24, [sp, #624]
   2c76c:	cbz	w24, 2ccdc <__asan_backtrace_dwarf_add@@Base+0xe4c>
   2c770:	mov	w24, #0x0                   	// #0
   2c774:	ldp	x0, x1, [x19, #16]
   2c778:	stp	x0, x1, [x22, #16]
   2c77c:	mov	x20, #0x0                   	// #0
   2c780:	ldp	x2, x3, [x19]
   2c784:	stp	x2, x3, [x22]
   2c788:	ldp	x2, x3, [x19, #32]
   2c78c:	stp	x2, x3, [x22, #32]
   2c790:	ldp	x2, x3, [x19, #48]
   2c794:	stp	x2, x3, [x22, #48]
   2c798:	ldr	x1, [sp, #656]
   2c79c:	stp	x19, x22, [sp, #200]
   2c7a0:	mov	x19, x20
   2c7a4:	mov	x22, x28
   2c7a8:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c7ac:	add	x20, x20, #0x890
   2c7b0:	mov	w7, w24
   2c7b4:	mov	x24, x19
   2c7b8:	mov	x19, x20
   2c7bc:	mov	w2, #0x0                   	// #0
   2c7c0:	mov	x28, #0x0                   	// #0
   2c7c4:	mov	w23, #0x0                   	// #0
   2c7c8:	cbnz	x1, 2c940 <__asan_backtrace_dwarf_add@@Base+0xab0>
   2c7cc:	ldr	w1, [sp, #688]
   2c7d0:	mov	x20, x24
   2c7d4:	mov	x28, x22
   2c7d8:	mov	w24, w7
   2c7dc:	ldp	x19, x22, [sp, #200]
   2c7e0:	cbz	w1, 2c890 <__asan_backtrace_dwarf_add@@Base+0xa00>
   2c7e4:	cbnz	x20, 2c8d8 <__asan_backtrace_dwarf_add@@Base+0xa48>
   2c7e8:	mov	x23, #0x0                   	// #0
   2c7ec:	mov	x0, x19
   2c7f0:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c7f4:	mov	x0, x19
   2c7f8:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c7fc:	ldr	x0, [sp, #264]
   2c800:	ldr	w3, [sp, #624]
   2c804:	ldr	x1, [x0, #96]
   2c808:	add	x0, x1, x26
   2c80c:	str	x25, [x1, x26]
   2c810:	add	x26, x26, #0x20
   2c814:	stp	w27, w24, [x0, #8]
   2c818:	stp	x20, x23, [x0, #16]
   2c81c:	cbz	w3, 2c740 <__asan_backtrace_dwarf_add@@Base+0x8b0>
   2c820:	ldr	x22, [sp, #264]
   2c824:	ldr	x25, [sp, #288]
   2c828:	ldr	x28, [sp, #944]
   2c82c:	ldr	x23, [sp, #952]
   2c830:	ldr	x2, [x22, #88]
   2c834:	cbz	x2, 2c878 <__asan_backtrace_dwarf_add@@Base+0x9e8>
   2c838:	ldr	x19, [sp, #328]
   2c83c:	b	2c844 <__asan_backtrace_dwarf_add@@Base+0x9b4>
   2c840:	ldr	x1, [x22, #96]
   2c844:	add	x1, x1, x19, lsl #5
   2c848:	mov	x4, x23
   2c84c:	mov	x3, x28
   2c850:	mov	x0, x25
   2c854:	add	x19, x19, #0x1
   2c858:	ldp	x2, x1, [x1, #16]
   2c85c:	lsl	x2, x2, #3
   2c860:	bl	6890 <__asan_backtrace_free@plt>
   2c864:	ldr	x2, [x22, #88]
   2c868:	cmp	x19, x2
   2c86c:	b.cc	2c840 <__asan_backtrace_dwarf_add@@Base+0x9b0>  // b.lo, b.ul, b.last
   2c870:	ldr	x1, [x22, #96]
   2c874:	lsl	x2, x2, #5
   2c878:	mov	x4, x23
   2c87c:	mov	x3, x28
   2c880:	mov	x0, x25
   2c884:	bl	6890 <__asan_backtrace_free@plt>
   2c888:	stp	xzr, xzr, [x22, #88]
   2c88c:	b	2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2c890:	ldr	x4, [sp, #632]
   2c894:	mov	x1, #0xc8                  	// #200
   2c898:	ldr	x5, [sp, #640]
   2c89c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c8a0:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2c8a4:	add	x3, x3, #0x880
   2c8a8:	sub	w5, w0, w5
   2c8ac:	add	x2, x2, #0x890
   2c8b0:	mov	x0, x21
   2c8b4:	bl	6700 <snprintf@plt>
   2c8b8:	ldr	x3, [sp, #672]
   2c8bc:	mov	x1, x21
   2c8c0:	ldr	x0, [sp, #680]
   2c8c4:	mov	w2, #0x0                   	// #0
   2c8c8:	blr	x3
   2c8cc:	mov	w0, #0x1                   	// #1
   2c8d0:	str	w0, [sp, #688]
   2c8d4:	cbz	x20, 2c7e8 <__asan_backtrace_dwarf_add@@Base+0x958>
   2c8d8:	ldr	x0, [sp, #288]
   2c8dc:	lsl	x1, x20, #3
   2c8e0:	ldr	x2, [sp, #944]
   2c8e4:	ldr	x3, [sp, #952]
   2c8e8:	bl	65b0 <__asan_backtrace_alloc@plt>
   2c8ec:	cbz	x0, 2cdbc <__asan_backtrace_dwarf_add@@Base+0xf2c>
   2c8f0:	mov	x23, x19
   2c8f4:	mov	x20, #0x0                   	// #0
   2c8f8:	str	x21, [sp, #200]
   2c8fc:	mov	x21, x0
   2c900:	b	2c918 <__asan_backtrace_dwarf_add@@Base+0xa88>
   2c904:	fmov	d0, x19
   2c908:	mov	v0.d[1], x0
   2c90c:	xtn	v0.2s, v0.2d
   2c910:	str	d0, [x21, x20, lsl #3]
   2c914:	add	x20, x20, #0x1
   2c918:	mov	x0, x23
   2c91c:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c920:	mov	x19, x0
   2c924:	mov	x0, x23
   2c928:	bl	287e0 <__sanitizer_set_death_callback@@Base+0x2080>
   2c92c:	cbnz	x19, 2c904 <__asan_backtrace_dwarf_add@@Base+0xa74>
   2c930:	mov	x19, x23
   2c934:	mov	x23, x21
   2c938:	ldr	x21, [sp, #200]
   2c93c:	b	2c7fc <__asan_backtrace_dwarf_add@@Base+0x96c>
   2c940:	sub	x1, x1, #0x1
   2c944:	add	x5, x0, #0x1
   2c948:	str	x5, [sp, #648]
   2c94c:	cmp	w23, #0x3f
   2c950:	str	x1, [sp, #656]
   2c954:	ldrb	w20, [x0]
   2c958:	b.hi	2cc08 <__asan_backtrace_dwarf_add@@Base+0xd78>  // b.pmore
   2c95c:	and	x0, x20, #0x7f
   2c960:	lsl	x0, x0, x23
   2c964:	orr	x28, x28, x0
   2c968:	add	w23, w23, #0x7
   2c96c:	tbz	w20, #7, 2cc54 <__asan_backtrace_dwarf_add@@Base+0xdc4>
   2c970:	ldr	x0, [sp, #648]
   2c974:	ldr	x1, [sp, #656]
   2c978:	b	2c7c8 <__asan_backtrace_dwarf_add@@Base+0x938>
   2c97c:	sub	x1, x1, #0x1
   2c980:	str	x1, [sp, #592]
   2c984:	add	x1, x0, #0x1
   2c988:	str	x1, [sp, #584]
   2c98c:	ldrb	w24, [x0]
   2c990:	b	2c774 <__asan_backtrace_dwarf_add@@Base+0x8e4>
   2c994:	ldr	x22, [sp, #264]
   2c998:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x18a0>
   2c99c:	ldr	w27, [sp, #348]
   2c9a0:	add	x3, x3, #0x478
   2c9a4:	mov	x2, #0x20                  	// #32
   2c9a8:	ldp	x1, x0, [x22, #88]
   2c9ac:	ldr	x25, [sp, #288]
   2c9b0:	ldr	x28, [sp, #944]
   2c9b4:	ldr	x23, [sp, #952]
   2c9b8:	bl	63a0 <__asan_backtrace_qsort@plt>
   2c9bc:	ldr	x1, [sp, #528]
   2c9c0:	ldr	x5, [sp, #520]
   2c9c4:	cbnz	x1, 2cbe8 <__asan_backtrace_dwarf_add@@Base+0xd58>
   2c9c8:	ldr	w0, [sp, #560]
   2c9cc:	add	x19, sp, #0x2b8
   2c9d0:	cbz	w0, 2cd24 <__asan_backtrace_dwarf_add@@Base+0xe94>
   2c9d4:	ldr	w8, [sp, #344]
   2c9d8:	ldr	x4, [sp, #232]
   2c9dc:	cmp	w8, #0x0
   2c9e0:	ldr	x0, [sp, #936]
   2c9e4:	stp	x4, x19, [sp, #32]
   2c9e8:	mov	x4, #0x4                   	// #4
   2c9ec:	stp	x0, x28, [sp]
   2c9f0:	mov	x0, #0xc                   	// #12
   2c9f4:	csel	x0, x0, x4, ne  // ne = any
   2c9f8:	stp	x23, x22, [sp, #16]
   2c9fc:	ldr	w7, [sp, #928]
   2ca00:	ldr	x4, [sp, #152]
   2ca04:	stp	x5, x1, [x22]
   2ca08:	ldr	x1, [sp, #192]
   2ca0c:	add	x0, x0, x4
   2ca10:	ldr	x2, [sp, #216]
   2ca14:	add	x0, x1, x0
   2ca18:	stp	x1, x0, [x22, #24]
   2ca1c:	sub	x3, x5, x2
   2ca20:	str	x3, [x22, #16]
   2ca24:	str	x0, [sp, #192]
   2ca28:	ldr	w0, [sp, #172]
   2ca2c:	ldr	x2, [sp, #160]
   2ca30:	str	w0, [x22, #40]
   2ca34:	ldr	x1, [sp, #240]
   2ca38:	stp	w8, w27, [x22, #44]
   2ca3c:	ldr	x5, [sp, #896]
   2ca40:	str	xzr, [x22, #56]
   2ca44:	ldr	x6, [sp, #904]
   2ca48:	stp	xzr, xzr, [x22, #64]
   2ca4c:	mov	x0, x25
   2ca50:	ldr	x3, [sp, #912]
   2ca54:	str	xzr, [x22, #80]
   2ca58:	ldr	x4, [sp, #920]
   2ca5c:	stp	xzr, xzr, [x22, #104]
   2ca60:	stp	xzr, xzr, [x22, #120]
   2ca64:	bl	29960 <__sanitizer_set_death_callback@@Base+0x3200>
   2ca68:	cbz	w0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2ca6c:	ldr	w0, [sp, #560]
   2ca70:	cbnz	w0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2ca74:	ldr	x0, [sp, #464]
   2ca78:	cbnz	x0, 2bf68 <__asan_backtrace_dwarf_add@@Base+0xd8>
   2ca7c:	ldr	w0, [sp, #496]
   2ca80:	cbnz	w0, 2bfe8 <__asan_backtrace_dwarf_add@@Base+0x158>
   2ca84:	ldr	x1, [sp, #232]
   2ca88:	add	x4, sp, #0x200
   2ca8c:	ldp	x2, x3, [sp, #352]
   2ca90:	ldr	x0, [sp, #368]
   2ca94:	str	x0, [sp, #424]
   2ca98:	ldr	x0, [sp, #176]
   2ca9c:	stp	x2, x3, [x4, #-104]
   2caa0:	mov	x3, x23
   2caa4:	mov	x2, x28
   2caa8:	str	x0, [sp, #432]
   2caac:	mov	x0, x25
   2cab0:	bl	6600 <__asan_backtrace_vector_release@plt>
   2cab4:	cbz	w0, 2c09c <__asan_backtrace_dwarf_add@@Base+0x20c>
   2cab8:	ldr	x1, [sp, #336]
   2cabc:	mov	x3, x23
   2cac0:	mov	x2, x28
   2cac4:	mov	x0, x25
   2cac8:	bl	6600 <__asan_backtrace_vector_release@plt>
   2cacc:	cbz	w0, 2c09c <__asan_backtrace_dwarf_add@@Base+0x20c>
   2cad0:	ldp	x20, x24, [sp, #400]
   2cad4:	mov	x2, #0x18                  	// #24
   2cad8:	ldr	x21, [sp, #376]
   2cadc:	adrp	x3, 28000 <__sanitizer_set_death_callback@@Base+0x18a0>
   2cae0:	add	x3, x3, #0x498
   2cae4:	mov	x0, x21
   2cae8:	mov	x1, x20
   2caec:	ldr	x22, [sp, #432]
   2caf0:	bl	63a0 <__asan_backtrace_qsort@plt>
   2caf4:	mov	x3, x23
   2caf8:	mov	x2, x28
   2cafc:	mov	x0, x25
   2cb00:	mov	x1, #0xa0                  	// #160
   2cb04:	bl	65b0 <__asan_backtrace_alloc@plt>
   2cb08:	mov	x19, x0
   2cb0c:	cbz	x0, 2c09c <__asan_backtrace_dwarf_add@@Base+0x20c>
   2cb10:	ldr	x3, [sp, #936]
   2cb14:	stp	xzr, x3, [x19]
   2cb18:	add	x0, x0, #0x80
   2cb1c:	ldr	x3, [sp, #240]
   2cb20:	str	x3, [x19, #16]
   2cb24:	ldr	x3, [sp, #296]
   2cb28:	str	x3, [x19, #56]
   2cb2c:	ldr	x3, [sp, #304]
   2cb30:	str	x3, [x19, #64]
   2cb34:	ldr	x3, [sp, #312]
   2cb38:	str	x3, [x19, #72]
   2cb3c:	ldr	x3, [sp, #320]
   2cb40:	str	x3, [x19, #80]
   2cb44:	ldr	x3, [sp, #896]
   2cb48:	str	x3, [x19, #88]
   2cb4c:	ldr	x3, [sp, #904]
   2cb50:	str	x3, [x19, #96]
   2cb54:	ldr	x3, [sp, #912]
   2cb58:	str	x3, [x19, #104]
   2cb5c:	ldr	x3, [sp, #920]
   2cb60:	str	x3, [x19, #112]
   2cb64:	ldr	w3, [sp, #928]
   2cb68:	mov	x2, #0x20                  	// #32
   2cb6c:	stp	x21, x20, [x19, #24]
   2cb70:	mov	w1, #0x0                   	// #0
   2cb74:	stp	x24, x22, [x19, #40]
   2cb78:	str	w3, [x19, #120]
   2cb7c:	bl	6530 <__asan_internal_memset@plt>
   2cb80:	ldr	x0, [sp, #968]
   2cb84:	cbz	x0, 2cb8c <__asan_backtrace_dwarf_add@@Base+0xcfc>
   2cb88:	str	x19, [x0]
   2cb8c:	ldr	w0, [x25, #8]
   2cb90:	add	x2, x25, #0x20
   2cb94:	cbnz	w0, 2cd90 <__asan_backtrace_dwarf_add@@Base+0xf00>
   2cb98:	ldr	x0, [x25, #32]
   2cb9c:	cbz	x0, 2cbb0 <__asan_backtrace_dwarf_add@@Base+0xd20>
   2cba0:	mov	x1, x0
   2cba4:	ldr	x0, [x0]
   2cba8:	cbnz	x0, 2cba0 <__asan_backtrace_dwarf_add@@Base+0xd10>
   2cbac:	mov	x2, x1
   2cbb0:	str	x19, [x2]
   2cbb4:	ldr	x2, [sp, #960]
   2cbb8:	adrp	x1, 2b000 <__sanitizer_set_death_callback@@Base+0x48a0>
   2cbbc:	add	x1, x1, #0xd70
   2cbc0:	mov	w0, #0x1                   	// #1
   2cbc4:	ldp	x29, x30, [sp, #48]
   2cbc8:	str	x1, [x2]
   2cbcc:	ldp	x19, x20, [sp, #64]
   2cbd0:	ldp	x21, x22, [sp, #80]
   2cbd4:	ldp	x23, x24, [sp, #96]
   2cbd8:	ldp	x25, x26, [sp, #112]
   2cbdc:	ldp	x27, x28, [sp, #128]
   2cbe0:	add	sp, sp, #0x380
   2cbe4:	ret
   2cbe8:	add	x0, x5, #0x1
   2cbec:	sub	x1, x1, #0x1
   2cbf0:	str	x0, [sp, #520]
   2cbf4:	add	x19, sp, #0x2b8
   2cbf8:	str	x1, [sp, #528]
   2cbfc:	ldrb	w27, [x5]
   2cc00:	mov	x5, x0
   2cc04:	b	2c9d4 <__asan_backtrace_dwarf_add@@Base+0xb44>
   2cc08:	cbnz	w2, 2c968 <__asan_backtrace_dwarf_add@@Base+0xad8>
   2cc0c:	ldr	x4, [sp, #632]
   2cc10:	mov	x3, x22
   2cc14:	ldr	x6, [sp, #640]
   2cc18:	mov	x2, x19
   2cc1c:	mov	x1, #0xc8                  	// #200
   2cc20:	mov	x0, x21
   2cc24:	sub	w5, w5, w6
   2cc28:	str	w7, [sp, #224]
   2cc2c:	bl	6700 <snprintf@plt>
   2cc30:	add	w23, w23, #0x7
   2cc34:	ldr	x4, [sp, #672]
   2cc38:	mov	w2, #0x0                   	// #0
   2cc3c:	ldr	x0, [sp, #680]
   2cc40:	mov	x1, x21
   2cc44:	blr	x4
   2cc48:	ldr	w7, [sp, #224]
   2cc4c:	mov	w2, #0x1                   	// #1
   2cc50:	tbnz	w20, #7, 2c970 <__asan_backtrace_dwarf_add@@Base+0xae0>
   2cc54:	mov	x19, x24
   2cc58:	mov	w24, w7
   2cc5c:	cbz	x28, 2cedc <__asan_backtrace_dwarf_add@@Base+0x104c>
   2cc60:	ldr	x0, [sp, #648]
   2cc64:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cc68:	ldr	x1, [sp, #656]
   2cc6c:	add	x19, x19, #0x1
   2cc70:	add	x20, x2, #0x890
   2cc74:	mov	w23, #0x0                   	// #0
   2cc78:	mov	w2, #0x0                   	// #0
   2cc7c:	nop
   2cc80:	cbnz	x1, 2ce68 <__asan_backtrace_dwarf_add@@Base+0xfd8>
   2cc84:	ldr	w2, [sp, #688]
   2cc88:	cbnz	w2, 2c7a8 <__asan_backtrace_dwarf_add@@Base+0x918>
   2cc8c:	ldr	x4, [sp, #632]
   2cc90:	mov	x1, #0xc8                  	// #200
   2cc94:	ldr	x5, [sp, #640]
   2cc98:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cc9c:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cca0:	add	x3, x3, #0x880
   2cca4:	sub	w5, w0, w5
   2cca8:	add	x2, x2, #0x890
   2ccac:	mov	x0, x21
   2ccb0:	bl	6700 <snprintf@plt>
   2ccb4:	ldr	x3, [sp, #672]
   2ccb8:	mov	x1, x21
   2ccbc:	ldr	x0, [sp, #680]
   2ccc0:	mov	w2, #0x0                   	// #0
   2ccc4:	blr	x3
   2ccc8:	mov	w0, #0x1                   	// #1
   2cccc:	str	w0, [sp, #688]
   2ccd0:	ldr	x0, [sp, #648]
   2ccd4:	ldr	x1, [sp, #656]
   2ccd8:	b	2c7a8 <__asan_backtrace_dwarf_add@@Base+0x918>
   2ccdc:	ldr	x4, [sp, #568]
   2cce0:	mov	x1, #0xc8                  	// #200
   2cce4:	ldr	x5, [sp, #576]
   2cce8:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ccec:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ccf0:	add	x3, x3, #0x880
   2ccf4:	sub	w5, w0, w5
   2ccf8:	add	x2, x2, #0x890
   2ccfc:	mov	x0, x21
   2cd00:	bl	6700 <snprintf@plt>
   2cd04:	ldr	x3, [sp, #608]
   2cd08:	mov	x1, x21
   2cd0c:	ldr	x0, [sp, #616]
   2cd10:	mov	w2, #0x0                   	// #0
   2cd14:	blr	x3
   2cd18:	mov	w0, #0x1                   	// #1
   2cd1c:	str	w0, [sp, #624]
   2cd20:	b	2c774 <__asan_backtrace_dwarf_add@@Base+0x8e4>
   2cd24:	ldp	x4, x0, [sp, #504]
   2cd28:	mov	x1, #0xc8                  	// #200
   2cd2c:	adrp	x3, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cd30:	adrp	x2, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cd34:	add	x3, x3, #0x880
   2cd38:	add	x2, x2, #0x890
   2cd3c:	mov	w27, #0x0                   	// #0
   2cd40:	sub	w5, w5, w0
   2cd44:	mov	x0, x19
   2cd48:	bl	6700 <snprintf@plt>
   2cd4c:	ldr	x3, [sp, #544]
   2cd50:	mov	x1, x19
   2cd54:	ldr	x0, [sp, #552]
   2cd58:	mov	w2, #0x0                   	// #0
   2cd5c:	blr	x3
   2cd60:	mov	w0, #0x1                   	// #1
   2cd64:	str	w0, [sp, #560]
   2cd68:	ldr	x5, [sp, #520]
   2cd6c:	ldr	x1, [sp, #528]
   2cd70:	b	2c9d4 <__asan_backtrace_dwarf_add@@Base+0xb44>
   2cd74:	ldxr	x0, [x1]
   2cd78:	cbnz	x0, 2cd84 <__asan_backtrace_dwarf_add@@Base+0xef4>
   2cd7c:	stlxr	w3, x19, [x1]
   2cd80:	cbnz	w3, 2cd74 <__asan_backtrace_dwarf_add@@Base+0xee4>
   2cd84:	dmb	ish
   2cd88:	cmp	x0, #0x0
   2cd8c:	b.eq	2cbb4 <__asan_backtrace_dwarf_add@@Base+0xd24>  // b.none
   2cd90:	mov	x1, x2
   2cd94:	b	2cd9c <__asan_backtrace_dwarf_add@@Base+0xf0c>
   2cd98:	mov	x1, x0
   2cd9c:	ldar	x0, [x1]
   2cda0:	cbnz	x0, 2cd98 <__asan_backtrace_dwarf_add@@Base+0xf08>
   2cda4:	b	2cd74 <__asan_backtrace_dwarf_add@@Base+0xee4>
   2cda8:	ldr	x1, [x22, #96]
   2cdac:	b	2c830 <__asan_backtrace_dwarf_add@@Base+0x9a0>
   2cdb0:	ldr	w0, [sp, #496]
   2cdb4:	cbz	w0, 2ca84 <__asan_backtrace_dwarf_add@@Base+0xbf4>
   2cdb8:	b	2c094 <__asan_backtrace_dwarf_add@@Base+0x204>
   2cdbc:	ldr	x22, [sp, #264]
   2cdc0:	ldr	x25, [sp, #288]
   2cdc4:	ldr	x1, [x22, #96]
   2cdc8:	ldr	x28, [sp, #944]
   2cdcc:	ldr	x23, [sp, #952]
   2cdd0:	b	2c830 <__asan_backtrace_dwarf_add@@Base+0x9a0>
   2cdd4:	add	x19, sp, #0x2b8
   2cdd8:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cddc:	ldp	x4, x5, [sp, #504]
   2cde0:	b	2c0f0 <__asan_backtrace_dwarf_add@@Base+0x260>
   2cde4:	sub	x0, x0, #0x1
   2cde8:	add	x5, x6, #0x1
   2cdec:	str	x5, [sp, #648]
   2cdf0:	cmp	w19, #0x3f
   2cdf4:	str	x0, [sp, #656]
   2cdf8:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
   2cdfc:	ldrb	w21, [x6]
   2ce00:	b.eq	2ce14 <__asan_backtrace_dwarf_add@@Base+0xf84>  // b.none
   2ce04:	mov	x6, x5
   2ce08:	add	w19, w19, #0x7
   2ce0c:	tbnz	w21, #7, 2c670 <__asan_backtrace_dwarf_add@@Base+0x7e0>
   2ce10:	b	2c348 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   2ce14:	ldr	x4, [sp, #632]
   2ce18:	mov	x3, x24
   2ce1c:	ldr	x6, [sp, #640]
   2ce20:	mov	x2, x22
   2ce24:	mov	x1, #0xc8                  	// #200
   2ce28:	mov	x0, x20
   2ce2c:	sub	w5, w5, w6
   2ce30:	bl	6700 <snprintf@plt>
   2ce34:	ldr	x4, [sp, #672]
   2ce38:	mov	x1, x20
   2ce3c:	ldr	x0, [sp, #680]
   2ce40:	mov	w2, #0x0                   	// #0
   2ce44:	blr	x4
   2ce48:	mov	w1, #0x1                   	// #1
   2ce4c:	ldr	x6, [sp, #648]
   2ce50:	ldr	x0, [sp, #656]
   2ce54:	b	2ce08 <__asan_backtrace_dwarf_add@@Base+0xf78>
   2ce58:	mov	x21, x23
   2ce5c:	mov	x23, x26
   2ce60:	mov	x26, x27
   2ce64:	b	2c394 <__asan_backtrace_dwarf_add@@Base+0x504>
   2ce68:	sub	x1, x1, #0x1
   2ce6c:	add	x5, x0, #0x1
   2ce70:	str	x5, [sp, #648]
   2ce74:	cmp	w23, #0x3f
   2ce78:	str	x1, [sp, #656]
   2ce7c:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
   2ce80:	ldrb	w28, [x0]
   2ce84:	b.eq	2ce98 <__asan_backtrace_dwarf_add@@Base+0x1008>  // b.none
   2ce88:	mov	x0, x5
   2ce8c:	add	w23, w23, #0x7
   2ce90:	tbnz	w28, #7, 2cc80 <__asan_backtrace_dwarf_add@@Base+0xdf0>
   2ce94:	b	2c7a8 <__asan_backtrace_dwarf_add@@Base+0x918>
   2ce98:	ldr	x4, [sp, #632]
   2ce9c:	mov	x3, x22
   2cea0:	ldr	x6, [sp, #640]
   2cea4:	mov	x2, x20
   2cea8:	mov	x1, #0xc8                  	// #200
   2ceac:	mov	x0, x21
   2ceb0:	sub	w5, w5, w6
   2ceb4:	bl	6700 <snprintf@plt>
   2ceb8:	ldr	x4, [sp, #672]
   2cebc:	mov	x1, x21
   2cec0:	ldr	x0, [sp, #680]
   2cec4:	mov	w2, #0x0                   	// #0
   2cec8:	blr	x4
   2cecc:	mov	w2, #0x1                   	// #1
   2ced0:	ldr	x0, [sp, #648]
   2ced4:	ldr	x1, [sp, #656]
   2ced8:	b	2ce8c <__asan_backtrace_dwarf_add@@Base+0xffc>
   2cedc:	mov	x20, x19
   2cee0:	mov	x28, x22
   2cee4:	ldp	x19, x22, [sp, #200]
   2cee8:	b	2c7e4 <__asan_backtrace_dwarf_add@@Base+0x954>
   2ceec:	nop

000000000002cef0 <__asan_backtrace_pcinfo@@Base>:
   2cef0:	stp	x29, x30, [sp, #-176]!
   2cef4:	mov	x29, sp
   2cef8:	stp	x19, x20, [sp, #16]
   2cefc:	mov	x19, x0
   2cf00:	ldr	w0, [x0, #8]
   2cf04:	stp	x21, x22, [sp, #32]
   2cf08:	mov	x22, x3
   2cf0c:	stp	x23, x24, [sp, #48]
   2cf10:	mov	x23, x1
   2cf14:	mov	x24, x2
   2cf18:	stp	x27, x28, [sp, #80]
   2cf1c:	mov	x28, x4
   2cf20:	cbnz	w0, 2cfa8 <__asan_backtrace_pcinfo@@Base+0xb8>
   2cf24:	ldr	w0, [x19, #56]
   2cf28:	cbnz	w0, 2cf78 <__asan_backtrace_pcinfo@@Base+0x88>
   2cf2c:	ldr	x0, [x19, #24]
   2cf30:	str	x0, [sp, #104]
   2cf34:	cbz	x0, 2cfcc <__asan_backtrace_pcinfo@@Base+0xdc>
   2cf38:	ldr	w1, [x19, #56]
   2cf3c:	mov	w0, #0x0                   	// #0
   2cf40:	cbnz	w1, 2cf60 <__asan_backtrace_pcinfo@@Base+0x70>
   2cf44:	ldr	x5, [x19, #24]
   2cf48:	mov	x4, x28
   2cf4c:	mov	x3, x22
   2cf50:	mov	x2, x24
   2cf54:	mov	x1, x23
   2cf58:	mov	x0, x19
   2cf5c:	blr	x5
   2cf60:	ldp	x19, x20, [sp, #16]
   2cf64:	ldp	x21, x22, [sp, #32]
   2cf68:	ldp	x23, x24, [sp, #48]
   2cf6c:	ldp	x27, x28, [sp, #80]
   2cf70:	ldp	x29, x30, [sp], #176
   2cf74:	ret
   2cf78:	mov	x0, x28
   2cf7c:	mov	w2, #0xffffffff            	// #-1
   2cf80:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cf84:	add	x1, x1, #0xbf8
   2cf88:	blr	x22
   2cf8c:	mov	w0, #0x0                   	// #0
   2cf90:	ldp	x19, x20, [sp, #16]
   2cf94:	ldp	x21, x22, [sp, #32]
   2cf98:	ldp	x23, x24, [sp, #48]
   2cf9c:	ldp	x27, x28, [sp, #80]
   2cfa0:	ldp	x29, x30, [sp], #176
   2cfa4:	ret
   2cfa8:	add	x0, x19, #0x38
   2cfac:	ldar	w0, [x0]
   2cfb0:	cbnz	w0, 2cf78 <__asan_backtrace_pcinfo@@Base+0x88>
   2cfb4:	ldr	w0, [x19, #8]
   2cfb8:	cbz	w0, 2cf2c <__asan_backtrace_pcinfo@@Base+0x3c>
   2cfbc:	add	x0, x19, #0x18
   2cfc0:	ldar	x0, [x0]
   2cfc4:	str	x0, [sp, #104]
   2cfc8:	cbnz	x0, 2cf38 <__asan_backtrace_pcinfo@@Base+0x48>
   2cfcc:	add	x27, sp, #0x64
   2cfd0:	stp	x25, x26, [sp, #64]
   2cfd4:	adrp	x26, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cfd8:	adrp	x25, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2cfdc:	add	x26, x26, #0xbe0
   2cfe0:	add	x25, x25, #0xc20
   2cfe4:	mov	w20, #0x0                   	// #0
   2cfe8:	cmp	w20, #0x3
   2cfec:	b.eq	2d0d0 <__asan_backtrace_pcinfo@@Base+0x1e0>  // b.none
   2cff0:	cmp	w20, #0x4
   2cff4:	b.eq	2d0ac <__asan_backtrace_pcinfo@@Base+0x1bc>  // b.none
   2cff8:	cmp	w20, #0x1
   2cffc:	b.eq	2d068 <__asan_backtrace_pcinfo@@Base+0x178>  // b.none
   2d000:	cmp	w20, #0x2
   2d004:	b.ne	2d060 <__asan_backtrace_pcinfo@@Base+0x170>  // b.any
   2d008:	adrp	x21, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   2d00c:	add	x21, x21, #0xb90
   2d010:	mov	x3, x27
   2d014:	mov	x2, x28
   2d018:	mov	x1, x22
   2d01c:	mov	x0, x21
   2d020:	bl	6a30 <__asan_backtrace_open@plt>
   2d024:	tbnz	w0, #31, 2d0a0 <__asan_backtrace_pcinfo@@Base+0x1b0>
   2d028:	mov	w2, w0
   2d02c:	mov	x1, x21
   2d030:	add	x5, sp, #0x68
   2d034:	mov	x4, x28
   2d038:	mov	x3, x22
   2d03c:	mov	x0, x19
   2d040:	bl	68d0 <__asan_backtrace_initialize@plt>
   2d044:	cbz	w0, 2d088 <__asan_backtrace_pcinfo@@Base+0x198>
   2d048:	ldr	w1, [x19, #8]
   2d04c:	ldr	x0, [sp, #104]
   2d050:	cbnz	w1, 2d0d8 <__asan_backtrace_pcinfo@@Base+0x1e8>
   2d054:	ldp	x25, x26, [sp, #64]
   2d058:	str	x0, [x19, #24]
   2d05c:	b	2cf38 <__asan_backtrace_pcinfo@@Base+0x48>
   2d060:	ldr	x21, [x19]
   2d064:	cbnz	x21, 2d010 <__asan_backtrace_pcinfo@@Base+0x120>
   2d068:	add	w20, w20, #0x1
   2d06c:	cmp	w20, #0x5
   2d070:	b.ne	2cfe8 <__asan_backtrace_pcinfo@@Base+0xf8>  // b.any
   2d074:	ldr	x1, [x19]
   2d078:	mov	x0, x28
   2d07c:	cbz	x1, 2d0e8 <__asan_backtrace_pcinfo@@Base+0x1f8>
   2d080:	mov	w2, #0x2                   	// #2
   2d084:	blr	x22
   2d088:	ldr	w0, [x19, #8]
   2d08c:	cbnz	w0, 2d0fc <__asan_backtrace_pcinfo@@Base+0x20c>
   2d090:	mov	w1, #0x1                   	// #1
   2d094:	ldp	x25, x26, [sp, #64]
   2d098:	str	w1, [x19, #56]
   2d09c:	b	2cf60 <__asan_backtrace_pcinfo@@Base+0x70>
   2d0a0:	ldr	w0, [sp, #100]
   2d0a4:	cbnz	w0, 2d068 <__asan_backtrace_pcinfo@@Base+0x178>
   2d0a8:	b	2d088 <__asan_backtrace_pcinfo@@Base+0x198>
   2d0ac:	bl	6670 <getpid@plt>
   2d0b0:	sxtw	x3, w0
   2d0b4:	add	x1, sp, #0x70
   2d0b8:	mov	x2, x25
   2d0bc:	mov	x21, x1
   2d0c0:	mov	x0, x1
   2d0c4:	mov	x1, #0x40                  	// #64
   2d0c8:	bl	6700 <snprintf@plt>
   2d0cc:	b	2d010 <__asan_backtrace_pcinfo@@Base+0x120>
   2d0d0:	mov	x21, x26
   2d0d4:	b	2d010 <__asan_backtrace_pcinfo@@Base+0x120>
   2d0d8:	add	x1, x19, #0x18
   2d0dc:	stlr	x0, [x1]
   2d0e0:	ldp	x25, x26, [sp, #64]
   2d0e4:	b	2cf38 <__asan_backtrace_pcinfo@@Base+0x48>
   2d0e8:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d0ec:	mov	w2, #0x0                   	// #0
   2d0f0:	add	x1, x1, #0xc38
   2d0f4:	blr	x22
   2d0f8:	b	2d088 <__asan_backtrace_pcinfo@@Base+0x198>
   2d0fc:	mov	w0, #0x1                   	// #1
   2d100:	add	x19, x19, #0x38
   2d104:	stlr	w0, [x19]
   2d108:	ldp	x25, x26, [sp, #64]
   2d10c:	mov	w0, #0x0                   	// #0
   2d110:	b	2cf60 <__asan_backtrace_pcinfo@@Base+0x70>
   2d114:	nop

000000000002d118 <__asan_backtrace_syminfo@@Base>:
   2d118:	stp	x29, x30, [sp, #-176]!
   2d11c:	mov	x29, sp
   2d120:	stp	x19, x20, [sp, #16]
   2d124:	mov	x19, x0
   2d128:	ldr	w0, [x0, #8]
   2d12c:	stp	x21, x22, [sp, #32]
   2d130:	mov	x22, x3
   2d134:	stp	x23, x24, [sp, #48]
   2d138:	mov	x23, x1
   2d13c:	mov	x24, x2
   2d140:	stp	x27, x28, [sp, #80]
   2d144:	mov	x28, x4
   2d148:	cbnz	w0, 2d1d4 <__asan_backtrace_syminfo@@Base+0xbc>
   2d14c:	ldr	w0, [x19, #56]
   2d150:	cbnz	w0, 2d1a4 <__asan_backtrace_syminfo@@Base+0x8c>
   2d154:	ldr	x0, [x19, #24]
   2d158:	str	x0, [sp, #104]
   2d15c:	cbz	x0, 2d1f8 <__asan_backtrace_syminfo@@Base+0xe0>
   2d160:	ldr	w1, [x19, #56]
   2d164:	mov	w0, #0x0                   	// #0
   2d168:	cbnz	w1, 2d18c <__asan_backtrace_syminfo@@Base+0x74>
   2d16c:	ldr	x5, [x19, #40]
   2d170:	mov	x0, x19
   2d174:	mov	x4, x28
   2d178:	mov	x3, x22
   2d17c:	mov	x2, x24
   2d180:	mov	x1, x23
   2d184:	blr	x5
   2d188:	mov	w0, #0x1                   	// #1
   2d18c:	ldp	x19, x20, [sp, #16]
   2d190:	ldp	x21, x22, [sp, #32]
   2d194:	ldp	x23, x24, [sp, #48]
   2d198:	ldp	x27, x28, [sp, #80]
   2d19c:	ldp	x29, x30, [sp], #176
   2d1a0:	ret
   2d1a4:	mov	x0, x28
   2d1a8:	mov	w2, #0xffffffff            	// #-1
   2d1ac:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d1b0:	add	x1, x1, #0xbf8
   2d1b4:	blr	x22
   2d1b8:	mov	w0, #0x0                   	// #0
   2d1bc:	ldp	x19, x20, [sp, #16]
   2d1c0:	ldp	x21, x22, [sp, #32]
   2d1c4:	ldp	x23, x24, [sp, #48]
   2d1c8:	ldp	x27, x28, [sp, #80]
   2d1cc:	ldp	x29, x30, [sp], #176
   2d1d0:	ret
   2d1d4:	add	x0, x19, #0x38
   2d1d8:	ldar	w0, [x0]
   2d1dc:	cbnz	w0, 2d1a4 <__asan_backtrace_syminfo@@Base+0x8c>
   2d1e0:	ldr	w0, [x19, #8]
   2d1e4:	cbz	w0, 2d154 <__asan_backtrace_syminfo@@Base+0x3c>
   2d1e8:	add	x0, x19, #0x18
   2d1ec:	ldar	x0, [x0]
   2d1f0:	str	x0, [sp, #104]
   2d1f4:	cbnz	x0, 2d160 <__asan_backtrace_syminfo@@Base+0x48>
   2d1f8:	add	x27, sp, #0x64
   2d1fc:	stp	x25, x26, [sp, #64]
   2d200:	adrp	x26, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d204:	adrp	x25, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d208:	add	x26, x26, #0xbe0
   2d20c:	add	x25, x25, #0xc20
   2d210:	mov	w20, #0x0                   	// #0
   2d214:	cmp	w20, #0x3
   2d218:	b.eq	2d2fc <__asan_backtrace_syminfo@@Base+0x1e4>  // b.none
   2d21c:	cmp	w20, #0x4
   2d220:	b.eq	2d2d8 <__asan_backtrace_syminfo@@Base+0x1c0>  // b.none
   2d224:	cmp	w20, #0x1
   2d228:	b.eq	2d294 <__asan_backtrace_syminfo@@Base+0x17c>  // b.none
   2d22c:	cmp	w20, #0x2
   2d230:	b.ne	2d28c <__asan_backtrace_syminfo@@Base+0x174>  // b.any
   2d234:	adrp	x21, 45000 <__asan_backtrace_vector_release@@Base+0x4b10>
   2d238:	add	x21, x21, #0xb90
   2d23c:	mov	x3, x27
   2d240:	mov	x2, x28
   2d244:	mov	x1, x22
   2d248:	mov	x0, x21
   2d24c:	bl	6a30 <__asan_backtrace_open@plt>
   2d250:	tbnz	w0, #31, 2d2cc <__asan_backtrace_syminfo@@Base+0x1b4>
   2d254:	mov	w2, w0
   2d258:	mov	x1, x21
   2d25c:	add	x5, sp, #0x68
   2d260:	mov	x4, x28
   2d264:	mov	x3, x22
   2d268:	mov	x0, x19
   2d26c:	bl	68d0 <__asan_backtrace_initialize@plt>
   2d270:	cbz	w0, 2d2b4 <__asan_backtrace_syminfo@@Base+0x19c>
   2d274:	ldr	w1, [x19, #8]
   2d278:	ldr	x0, [sp, #104]
   2d27c:	cbnz	w1, 2d304 <__asan_backtrace_syminfo@@Base+0x1ec>
   2d280:	ldp	x25, x26, [sp, #64]
   2d284:	str	x0, [x19, #24]
   2d288:	b	2d160 <__asan_backtrace_syminfo@@Base+0x48>
   2d28c:	ldr	x21, [x19]
   2d290:	cbnz	x21, 2d23c <__asan_backtrace_syminfo@@Base+0x124>
   2d294:	add	w20, w20, #0x1
   2d298:	cmp	w20, #0x5
   2d29c:	b.ne	2d214 <__asan_backtrace_syminfo@@Base+0xfc>  // b.any
   2d2a0:	ldr	x1, [x19]
   2d2a4:	mov	x0, x28
   2d2a8:	cbz	x1, 2d314 <__asan_backtrace_syminfo@@Base+0x1fc>
   2d2ac:	mov	w2, #0x2                   	// #2
   2d2b0:	blr	x22
   2d2b4:	ldr	w0, [x19, #8]
   2d2b8:	cbnz	w0, 2d328 <__asan_backtrace_syminfo@@Base+0x210>
   2d2bc:	mov	w1, #0x1                   	// #1
   2d2c0:	ldp	x25, x26, [sp, #64]
   2d2c4:	str	w1, [x19, #56]
   2d2c8:	b	2d18c <__asan_backtrace_syminfo@@Base+0x74>
   2d2cc:	ldr	w0, [sp, #100]
   2d2d0:	cbnz	w0, 2d294 <__asan_backtrace_syminfo@@Base+0x17c>
   2d2d4:	b	2d2b4 <__asan_backtrace_syminfo@@Base+0x19c>
   2d2d8:	bl	6670 <getpid@plt>
   2d2dc:	sxtw	x3, w0
   2d2e0:	add	x1, sp, #0x70
   2d2e4:	mov	x2, x25
   2d2e8:	mov	x21, x1
   2d2ec:	mov	x0, x1
   2d2f0:	mov	x1, #0x40                  	// #64
   2d2f4:	bl	6700 <snprintf@plt>
   2d2f8:	b	2d23c <__asan_backtrace_syminfo@@Base+0x124>
   2d2fc:	mov	x21, x26
   2d300:	b	2d23c <__asan_backtrace_syminfo@@Base+0x124>
   2d304:	add	x1, x19, #0x18
   2d308:	stlr	x0, [x1]
   2d30c:	ldp	x25, x26, [sp, #64]
   2d310:	b	2d160 <__asan_backtrace_syminfo@@Base+0x48>
   2d314:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d318:	mov	w2, #0x0                   	// #0
   2d31c:	add	x1, x1, #0xc38
   2d320:	blr	x22
   2d324:	b	2d2b4 <__asan_backtrace_syminfo@@Base+0x19c>
   2d328:	mov	w0, #0x1                   	// #1
   2d32c:	add	x19, x19, #0x38
   2d330:	stlr	w0, [x19]
   2d334:	ldp	x25, x26, [sp, #64]
   2d338:	mov	w0, #0x0                   	// #0
   2d33c:	b	2d18c <__asan_backtrace_syminfo@@Base+0x74>

000000000002d340 <__asan_backtrace_open@@Base>:
   2d340:	stp	x29, x30, [sp, #-64]!
   2d344:	mov	x29, sp
   2d348:	stp	x19, x20, [sp, #16]
   2d34c:	stp	x21, x22, [sp, #32]
   2d350:	mov	x22, x2
   2d354:	mov	x21, x0
   2d358:	str	x23, [sp, #48]
   2d35c:	mov	x23, x1
   2d360:	cbz	x3, 2d3a4 <__asan_backtrace_open@@Base+0x64>
   2d364:	str	wzr, [x3]
   2d368:	mov	x20, x3
   2d36c:	mov	w1, #0x80000               	// #524288
   2d370:	bl	64c0 <open@plt>
   2d374:	mov	w19, w0
   2d378:	tbnz	w0, #31, 2d3d0 <__asan_backtrace_open@@Base+0x90>
   2d37c:	mov	w0, w19
   2d380:	mov	w2, #0x1                   	// #1
   2d384:	mov	w1, #0x2                   	// #2
   2d388:	bl	69b0 <fcntl@plt>
   2d38c:	mov	w0, w19
   2d390:	ldp	x19, x20, [sp, #16]
   2d394:	ldp	x21, x22, [sp, #32]
   2d398:	ldr	x23, [sp, #48]
   2d39c:	ldp	x29, x30, [sp], #64
   2d3a0:	ret
   2d3a4:	mov	w1, #0x80000               	// #524288
   2d3a8:	bl	64c0 <open@plt>
   2d3ac:	mov	w19, w0
   2d3b0:	tbz	w0, #31, 2d37c <__asan_backtrace_open@@Base+0x3c>
   2d3b4:	bl	6790 <__errno_location@plt>
   2d3b8:	ldr	w2, [x0]
   2d3bc:	mov	x1, x21
   2d3c0:	mov	x0, x22
   2d3c4:	mov	w19, #0xffffffff            	// #-1
   2d3c8:	blr	x23
   2d3cc:	b	2d38c <__asan_backtrace_open@@Base+0x4c>
   2d3d0:	bl	6790 <__errno_location@plt>
   2d3d4:	ldr	w1, [x0]
   2d3d8:	cmp	w1, #0x2
   2d3dc:	b.ne	2d3b8 <__asan_backtrace_open@@Base+0x78>  // b.any
   2d3e0:	mov	w0, #0x1                   	// #1
   2d3e4:	mov	w19, #0xffffffff            	// #-1
   2d3e8:	str	w0, [x20]
   2d3ec:	b	2d38c <__asan_backtrace_open@@Base+0x4c>

000000000002d3f0 <__asan_backtrace_close@@Base>:
   2d3f0:	stp	x29, x30, [sp, #-32]!
   2d3f4:	mov	x29, sp
   2d3f8:	stp	x19, x20, [sp, #16]
   2d3fc:	mov	x19, x1
   2d400:	mov	x20, x2
   2d404:	bl	6810 <close@plt>
   2d408:	tbnz	w0, #31, 2d41c <__asan_backtrace_close@@Base+0x2c>
   2d40c:	mov	w0, #0x1                   	// #1
   2d410:	ldp	x19, x20, [sp, #16]
   2d414:	ldp	x29, x30, [sp], #32
   2d418:	ret
   2d41c:	bl	6790 <__errno_location@plt>
   2d420:	mov	x2, x0
   2d424:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2d428:	mov	x0, x20
   2d42c:	add	x1, x1, #0xc68
   2d430:	ldr	w2, [x2]
   2d434:	blr	x19
   2d438:	mov	w0, #0x0                   	// #0
   2d43c:	ldp	x19, x20, [sp, #16]
   2d440:	ldp	x29, x30, [sp], #32
   2d444:	ret

000000000002d448 <__asan_backtrace_qsort@@Base>:
   2d448:	cmp	x1, #0x1
   2d44c:	b.ls	2dc7c <__asan_backtrace_qsort@@Base+0x834>  // b.plast
   2d450:	stp	x29, x30, [sp, #-224]!
   2d454:	mov	x29, sp
   2d458:	stp	x27, x28, [sp, #80]
   2d45c:	and	x27, x2, #0xfffffffffffffff0
   2d460:	stp	x25, x26, [sp, #64]
   2d464:	mov	x26, x0
   2d468:	add	x0, x27, #0x1
   2d46c:	str	x0, [sp, #112]
   2d470:	add	x0, x27, #0x2
   2d474:	str	x0, [sp, #120]
   2d478:	add	x0, x27, #0x3
   2d47c:	str	x0, [sp, #128]
   2d480:	add	x0, x27, #0x4
   2d484:	str	x0, [sp, #136]
   2d488:	add	x0, x27, #0x5
   2d48c:	str	x0, [sp, #144]
   2d490:	add	x0, x27, #0x6
   2d494:	str	x0, [sp, #152]
   2d498:	add	x0, x27, #0x7
   2d49c:	str	x0, [sp, #160]
   2d4a0:	add	x0, x27, #0x8
   2d4a4:	str	x0, [sp, #168]
   2d4a8:	add	x0, x27, #0x9
   2d4ac:	str	x0, [sp, #176]
   2d4b0:	add	x0, x27, #0xa
   2d4b4:	str	x0, [sp, #184]
   2d4b8:	add	x0, x27, #0xb
   2d4bc:	str	x0, [sp, #192]
   2d4c0:	add	x0, x27, #0xc
   2d4c4:	str	x0, [sp, #200]
   2d4c8:	add	x0, x27, #0xd
   2d4cc:	mov	x28, x26
   2d4d0:	mov	x26, x2
   2d4d4:	stp	x19, x20, [sp, #16]
   2d4d8:	mov	x19, x1
   2d4dc:	mov	x20, x27
   2d4e0:	stp	x21, x22, [sp, #32]
   2d4e4:	mov	x21, x3
   2d4e8:	str	x0, [sp, #208]
   2d4ec:	add	x0, x27, #0xe
   2d4f0:	stp	x23, x24, [sp, #48]
   2d4f4:	str	x0, [sp, #216]
   2d4f8:	sub	x0, x2, #0x1
   2d4fc:	str	x0, [sp, #104]
   2d500:	lsr	x0, x19, #1
   2d504:	mul	x0, x0, x26
   2d508:	add	x1, x28, x0
   2d50c:	cbz	x26, 2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>
   2d510:	add	x0, x0, #0x10
   2d514:	add	x3, x28, #0x10
   2d518:	cmp	x0, #0x0
   2d51c:	ldr	x0, [sp, #104]
   2d520:	ccmp	x1, x3, #0x2, gt
   2d524:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
   2d528:	mov	x0, #0x0                   	// #0
   2d52c:	b.ls	2d984 <__asan_backtrace_qsort@@Base+0x53c>  // b.plast
   2d530:	ldr	q1, [x1, x0]
   2d534:	ldr	q0, [x28, x0]
   2d538:	str	q1, [x28, x0]
   2d53c:	str	q0, [x1, x0]
   2d540:	add	x0, x0, #0x10
   2d544:	cmp	x0, x20
   2d548:	b.ne	2d530 <__asan_backtrace_qsort@@Base+0xe8>  // b.any
   2d54c:	cmp	x26, x27
   2d550:	add	x3, x28, x27
   2d554:	add	x0, x1, x27
   2d558:	b.eq	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.none
   2d55c:	ldrb	w6, [x1, x27]
   2d560:	ldrb	w5, [x28, x27]
   2d564:	strb	w6, [x28, x27]
   2d568:	ldr	x2, [sp, #112]
   2d56c:	strb	w5, [x1, x27]
   2d570:	cmp	x26, x2
   2d574:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d578:	ldr	x1, [sp, #120]
   2d57c:	ldrb	w5, [x0, #1]
   2d580:	cmp	x26, x1
   2d584:	ldrb	w1, [x3, #1]
   2d588:	strb	w5, [x3, #1]
   2d58c:	strb	w1, [x0, #1]
   2d590:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d594:	ldr	x1, [sp, #128]
   2d598:	ldrb	w5, [x0, #2]
   2d59c:	cmp	x26, x1
   2d5a0:	ldrb	w1, [x3, #2]
   2d5a4:	strb	w5, [x3, #2]
   2d5a8:	strb	w1, [x0, #2]
   2d5ac:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d5b0:	ldr	x1, [sp, #136]
   2d5b4:	ldrb	w5, [x0, #3]
   2d5b8:	cmp	x26, x1
   2d5bc:	ldrb	w1, [x3, #3]
   2d5c0:	strb	w5, [x3, #3]
   2d5c4:	strb	w1, [x0, #3]
   2d5c8:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d5cc:	ldr	x1, [sp, #144]
   2d5d0:	ldrb	w5, [x0, #4]
   2d5d4:	cmp	x26, x1
   2d5d8:	ldrb	w1, [x3, #4]
   2d5dc:	strb	w5, [x3, #4]
   2d5e0:	strb	w1, [x0, #4]
   2d5e4:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d5e8:	ldr	x1, [sp, #152]
   2d5ec:	ldrb	w5, [x0, #5]
   2d5f0:	cmp	x26, x1
   2d5f4:	ldrb	w1, [x3, #5]
   2d5f8:	strb	w5, [x3, #5]
   2d5fc:	strb	w1, [x0, #5]
   2d600:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d604:	ldr	x1, [sp, #160]
   2d608:	ldrb	w5, [x0, #6]
   2d60c:	cmp	x26, x1
   2d610:	ldrb	w1, [x3, #6]
   2d614:	strb	w5, [x3, #6]
   2d618:	strb	w1, [x0, #6]
   2d61c:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d620:	ldr	x1, [sp, #168]
   2d624:	ldrb	w5, [x0, #7]
   2d628:	cmp	x26, x1
   2d62c:	ldrb	w1, [x3, #7]
   2d630:	strb	w5, [x3, #7]
   2d634:	strb	w1, [x0, #7]
   2d638:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d63c:	ldr	x1, [sp, #176]
   2d640:	ldrb	w5, [x0, #8]
   2d644:	cmp	x26, x1
   2d648:	ldrb	w1, [x3, #8]
   2d64c:	strb	w5, [x3, #8]
   2d650:	strb	w1, [x0, #8]
   2d654:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d658:	ldr	x1, [sp, #184]
   2d65c:	ldrb	w5, [x0, #9]
   2d660:	cmp	x26, x1
   2d664:	ldrb	w1, [x3, #9]
   2d668:	strb	w5, [x3, #9]
   2d66c:	strb	w1, [x0, #9]
   2d670:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d674:	ldr	x1, [sp, #192]
   2d678:	ldrb	w5, [x0, #10]
   2d67c:	cmp	x26, x1
   2d680:	ldrb	w1, [x3, #10]
   2d684:	strb	w5, [x3, #10]
   2d688:	strb	w1, [x0, #10]
   2d68c:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d690:	ldr	x1, [sp, #200]
   2d694:	ldrb	w5, [x0, #11]
   2d698:	cmp	x26, x1
   2d69c:	ldrb	w1, [x3, #11]
   2d6a0:	strb	w5, [x3, #11]
   2d6a4:	strb	w1, [x0, #11]
   2d6a8:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d6ac:	ldr	x1, [sp, #208]
   2d6b0:	ldrb	w5, [x0, #12]
   2d6b4:	cmp	x26, x1
   2d6b8:	ldrb	w1, [x3, #12]
   2d6bc:	strb	w5, [x3, #12]
   2d6c0:	strb	w1, [x0, #12]
   2d6c4:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d6c8:	ldr	x1, [sp, #216]
   2d6cc:	ldrb	w5, [x0, #13]
   2d6d0:	cmp	x26, x1
   2d6d4:	ldrb	w1, [x3, #13]
   2d6d8:	strb	w5, [x3, #13]
   2d6dc:	strb	w1, [x0, #13]
   2d6e0:	b.ls	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.plast
   2d6e4:	ldrb	w5, [x0, #14]
   2d6e8:	ldrb	w1, [x3, #14]
   2d6ec:	strb	w5, [x3, #14]
   2d6f0:	strb	w1, [x0, #14]
   2d6f4:	nop
   2d6f8:	mov	x23, x26
   2d6fc:	mov	x24, #0x0                   	// #0
   2d700:	mov	x25, #0x1                   	// #1
   2d704:	b	2d718 <__asan_backtrace_qsort@@Base+0x2d0>
   2d708:	add	x25, x25, #0x1
   2d70c:	add	x23, x23, x26
   2d710:	cmp	x25, x19
   2d714:	b.cs	2d954 <__asan_backtrace_qsort@@Base+0x50c>  // b.hs, b.nlast
   2d718:	add	x22, x28, x23
   2d71c:	mov	x0, x28
   2d720:	mov	x1, x22
   2d724:	blr	x21
   2d728:	add	x7, x24, #0x1
   2d72c:	cmp	w0, #0x0
   2d730:	mov	x3, x7
   2d734:	b.le	2d708 <__asan_backtrace_qsort@@Base+0x2c0>
   2d738:	add	x7, x24, #0x2
   2d73c:	cmp	x3, x25
   2d740:	mov	x24, x25
   2d744:	b.eq	2d708 <__asan_backtrace_qsort@@Base+0x2c0>  // b.none
   2d748:	mul	x0, x26, x3
   2d74c:	add	x1, x28, x0
   2d750:	cbz	x26, 2d940 <__asan_backtrace_qsort@@Base+0x4f8>
   2d754:	add	x2, x23, #0x10
   2d758:	add	x4, x0, #0x10
   2d75c:	cmp	x0, x2
   2d760:	ldr	x0, [sp, #104]
   2d764:	ccmp	x4, x23, #0x4, lt  // lt = tstop
   2d768:	ccmp	x0, #0xe, #0x0, le
   2d76c:	mov	x0, #0x0                   	// #0
   2d770:	b.ls	2d9c0 <__asan_backtrace_qsort@@Base+0x578>  // b.plast
   2d774:	nop
   2d778:	ldr	q1, [x22, x0]
   2d77c:	ldr	q0, [x1, x0]
   2d780:	str	q1, [x1, x0]
   2d784:	str	q0, [x22, x0]
   2d788:	add	x0, x0, #0x10
   2d78c:	cmp	x0, x20
   2d790:	b.ne	2d778 <__asan_backtrace_qsort@@Base+0x330>  // b.any
   2d794:	cmp	x26, x27
   2d798:	add	x2, x1, x27
   2d79c:	add	x0, x22, x27
   2d7a0:	b.eq	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.none
   2d7a4:	ldr	x4, [sp, #112]
   2d7a8:	ldrb	w5, [x22, x27]
   2d7ac:	cmp	x26, x4
   2d7b0:	ldrb	w4, [x1, x27]
   2d7b4:	strb	w5, [x1, x27]
   2d7b8:	strb	w4, [x22, x27]
   2d7bc:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d7c0:	ldr	x1, [sp, #120]
   2d7c4:	ldrb	w4, [x0, #1]
   2d7c8:	cmp	x26, x1
   2d7cc:	ldrb	w1, [x2, #1]
   2d7d0:	strb	w4, [x2, #1]
   2d7d4:	strb	w1, [x0, #1]
   2d7d8:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d7dc:	ldr	x1, [sp, #128]
   2d7e0:	ldrb	w4, [x0, #2]
   2d7e4:	cmp	x26, x1
   2d7e8:	ldrb	w1, [x2, #2]
   2d7ec:	strb	w4, [x2, #2]
   2d7f0:	strb	w1, [x0, #2]
   2d7f4:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d7f8:	ldr	x1, [sp, #136]
   2d7fc:	ldrb	w4, [x0, #3]
   2d800:	cmp	x26, x1
   2d804:	ldrb	w1, [x2, #3]
   2d808:	strb	w4, [x2, #3]
   2d80c:	strb	w1, [x0, #3]
   2d810:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d814:	ldr	x1, [sp, #144]
   2d818:	ldrb	w4, [x0, #4]
   2d81c:	cmp	x26, x1
   2d820:	ldrb	w1, [x2, #4]
   2d824:	strb	w4, [x2, #4]
   2d828:	strb	w1, [x0, #4]
   2d82c:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d830:	ldr	x1, [sp, #152]
   2d834:	ldrb	w4, [x0, #5]
   2d838:	cmp	x26, x1
   2d83c:	ldrb	w1, [x2, #5]
   2d840:	strb	w4, [x2, #5]
   2d844:	strb	w1, [x0, #5]
   2d848:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d84c:	ldr	x1, [sp, #160]
   2d850:	ldrb	w4, [x0, #6]
   2d854:	cmp	x26, x1
   2d858:	ldrb	w1, [x2, #6]
   2d85c:	strb	w4, [x2, #6]
   2d860:	strb	w1, [x0, #6]
   2d864:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d868:	ldr	x1, [sp, #168]
   2d86c:	ldrb	w4, [x0, #7]
   2d870:	cmp	x26, x1
   2d874:	ldrb	w1, [x2, #7]
   2d878:	strb	w4, [x2, #7]
   2d87c:	strb	w1, [x0, #7]
   2d880:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d884:	ldr	x1, [sp, #176]
   2d888:	ldrb	w4, [x0, #8]
   2d88c:	cmp	x26, x1
   2d890:	ldrb	w1, [x2, #8]
   2d894:	strb	w4, [x2, #8]
   2d898:	strb	w1, [x0, #8]
   2d89c:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d8a0:	ldr	x1, [sp, #184]
   2d8a4:	ldrb	w4, [x0, #9]
   2d8a8:	cmp	x26, x1
   2d8ac:	ldrb	w1, [x2, #9]
   2d8b0:	strb	w4, [x2, #9]
   2d8b4:	strb	w1, [x0, #9]
   2d8b8:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d8bc:	ldr	x1, [sp, #192]
   2d8c0:	ldrb	w4, [x0, #10]
   2d8c4:	cmp	x26, x1
   2d8c8:	ldrb	w1, [x2, #10]
   2d8cc:	strb	w4, [x2, #10]
   2d8d0:	strb	w1, [x0, #10]
   2d8d4:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d8d8:	ldr	x1, [sp, #200]
   2d8dc:	ldrb	w4, [x0, #11]
   2d8e0:	cmp	x26, x1
   2d8e4:	ldrb	w1, [x2, #11]
   2d8e8:	strb	w4, [x2, #11]
   2d8ec:	strb	w1, [x0, #11]
   2d8f0:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d8f4:	ldr	x1, [sp, #208]
   2d8f8:	ldrb	w4, [x0, #12]
   2d8fc:	cmp	x26, x1
   2d900:	ldrb	w1, [x2, #12]
   2d904:	strb	w4, [x2, #12]
   2d908:	strb	w1, [x0, #12]
   2d90c:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d910:	ldr	x1, [sp, #216]
   2d914:	ldrb	w4, [x0, #13]
   2d918:	cmp	x26, x1
   2d91c:	ldrb	w1, [x2, #13]
   2d920:	strb	w4, [x2, #13]
   2d924:	strb	w1, [x0, #13]
   2d928:	b.ls	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.plast
   2d92c:	ldrb	w4, [x0, #14]
   2d930:	ldrb	w1, [x2, #14]
   2d934:	strb	w4, [x2, #14]
   2d938:	strb	w1, [x0, #14]
   2d93c:	nop
   2d940:	add	x25, x25, #0x1
   2d944:	mov	x24, x3
   2d948:	add	x23, x23, x26
   2d94c:	cmp	x25, x19
   2d950:	b.cc	2d718 <__asan_backtrace_qsort@@Base+0x2d0>  // b.lo, b.ul, b.last
   2d954:	cbnz	x24, 2d9fc <__asan_backtrace_qsort@@Base+0x5b4>
   2d958:	madd	x25, x7, x26, x28
   2d95c:	sub	x19, x19, #0x1
   2d960:	mov	x1, x24
   2d964:	mov	x0, x28
   2d968:	mov	x3, x21
   2d96c:	mov	x2, x26
   2d970:	bl	2d448 <__asan_backtrace_qsort@@Base>
   2d974:	cmp	x19, #0x1
   2d978:	b.ls	2dc60 <__asan_backtrace_qsort@@Base+0x818>  // b.plast
   2d97c:	mov	x28, x25
   2d980:	b	2d500 <__asan_backtrace_qsort@@Base+0xb8>
   2d984:	ldrb	w3, [x1, x0]
   2d988:	ldrb	w2, [x28, x0]
   2d98c:	strb	w3, [x28, x0]
   2d990:	strb	w2, [x1, x0]
   2d994:	add	x0, x0, #0x1
   2d998:	cmp	x26, x0
   2d99c:	b.eq	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>  // b.none
   2d9a0:	ldrb	w3, [x1, x0]
   2d9a4:	ldrb	w2, [x28, x0]
   2d9a8:	strb	w3, [x28, x0]
   2d9ac:	strb	w2, [x1, x0]
   2d9b0:	add	x0, x0, #0x1
   2d9b4:	cmp	x26, x0
   2d9b8:	b.ne	2d984 <__asan_backtrace_qsort@@Base+0x53c>  // b.any
   2d9bc:	b	2d6f8 <__asan_backtrace_qsort@@Base+0x2b0>
   2d9c0:	ldrb	w4, [x22, x0]
   2d9c4:	ldrb	w2, [x1, x0]
   2d9c8:	strb	w4, [x1, x0]
   2d9cc:	strb	w2, [x22, x0]
   2d9d0:	add	x0, x0, #0x1
   2d9d4:	cmp	x26, x0
   2d9d8:	b.eq	2d940 <__asan_backtrace_qsort@@Base+0x4f8>  // b.none
   2d9dc:	ldrb	w4, [x22, x0]
   2d9e0:	ldrb	w2, [x1, x0]
   2d9e4:	strb	w4, [x1, x0]
   2d9e8:	strb	w2, [x22, x0]
   2d9ec:	add	x0, x0, #0x1
   2d9f0:	cmp	x26, x0
   2d9f4:	b.ne	2d9c0 <__asan_backtrace_qsort@@Base+0x578>  // b.any
   2d9f8:	b	2d940 <__asan_backtrace_qsort@@Base+0x4f8>
   2d9fc:	mul	x0, x24, x26
   2da00:	add	x1, x28, x0
   2da04:	cbz	x26, 2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>
   2da08:	add	x0, x0, #0x10
   2da0c:	add	x3, x28, #0x10
   2da10:	cmp	x0, #0x0
   2da14:	ldr	x0, [sp, #104]
   2da18:	ccmp	x1, x3, #0x2, gt
   2da1c:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
   2da20:	mov	x0, #0x0                   	// #0
   2da24:	b.ls	2dc24 <__asan_backtrace_qsort@@Base+0x7dc>  // b.plast
   2da28:	ldr	q1, [x1, x0]
   2da2c:	ldr	q0, [x28, x0]
   2da30:	str	q1, [x28, x0]
   2da34:	str	q0, [x1, x0]
   2da38:	add	x0, x0, #0x10
   2da3c:	cmp	x0, x20
   2da40:	b.ne	2da28 <__asan_backtrace_qsort@@Base+0x5e0>  // b.any
   2da44:	cmp	x26, x27
   2da48:	add	x3, x28, x27
   2da4c:	add	x0, x1, x27
   2da50:	b.eq	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.none
   2da54:	ldrb	w8, [x1, x27]
   2da58:	ldrb	w6, [x28, x27]
   2da5c:	strb	w8, [x28, x27]
   2da60:	ldr	x2, [sp, #112]
   2da64:	strb	w6, [x1, x27]
   2da68:	cmp	x26, x2
   2da6c:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2da70:	ldr	x1, [sp, #120]
   2da74:	ldrb	w6, [x0, #1]
   2da78:	cmp	x26, x1
   2da7c:	ldrb	w1, [x3, #1]
   2da80:	strb	w6, [x3, #1]
   2da84:	strb	w1, [x0, #1]
   2da88:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2da8c:	ldr	x1, [sp, #128]
   2da90:	ldrb	w6, [x0, #2]
   2da94:	cmp	x26, x1
   2da98:	ldrb	w1, [x3, #2]
   2da9c:	strb	w6, [x3, #2]
   2daa0:	strb	w1, [x0, #2]
   2daa4:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2daa8:	ldr	x1, [sp, #136]
   2daac:	ldrb	w6, [x0, #3]
   2dab0:	cmp	x26, x1
   2dab4:	ldrb	w1, [x3, #3]
   2dab8:	strb	w6, [x3, #3]
   2dabc:	strb	w1, [x0, #3]
   2dac0:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dac4:	ldr	x1, [sp, #144]
   2dac8:	ldrb	w6, [x0, #4]
   2dacc:	cmp	x26, x1
   2dad0:	ldrb	w1, [x3, #4]
   2dad4:	strb	w6, [x3, #4]
   2dad8:	strb	w1, [x0, #4]
   2dadc:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dae0:	ldr	x1, [sp, #152]
   2dae4:	ldrb	w6, [x0, #5]
   2dae8:	cmp	x26, x1
   2daec:	ldrb	w1, [x3, #5]
   2daf0:	strb	w6, [x3, #5]
   2daf4:	strb	w1, [x0, #5]
   2daf8:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dafc:	ldr	x1, [sp, #160]
   2db00:	ldrb	w6, [x0, #6]
   2db04:	cmp	x26, x1
   2db08:	ldrb	w1, [x3, #6]
   2db0c:	strb	w6, [x3, #6]
   2db10:	strb	w1, [x0, #6]
   2db14:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2db18:	ldr	x1, [sp, #168]
   2db1c:	ldrb	w6, [x0, #7]
   2db20:	cmp	x26, x1
   2db24:	ldrb	w1, [x3, #7]
   2db28:	strb	w6, [x3, #7]
   2db2c:	strb	w1, [x0, #7]
   2db30:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2db34:	ldr	x1, [sp, #176]
   2db38:	ldrb	w6, [x0, #8]
   2db3c:	cmp	x26, x1
   2db40:	ldrb	w1, [x3, #8]
   2db44:	strb	w6, [x3, #8]
   2db48:	strb	w1, [x0, #8]
   2db4c:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2db50:	ldr	x1, [sp, #184]
   2db54:	ldrb	w6, [x0, #9]
   2db58:	cmp	x26, x1
   2db5c:	ldrb	w1, [x3, #9]
   2db60:	strb	w6, [x3, #9]
   2db64:	strb	w1, [x0, #9]
   2db68:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2db6c:	ldr	x1, [sp, #192]
   2db70:	ldrb	w6, [x0, #10]
   2db74:	cmp	x26, x1
   2db78:	ldrb	w1, [x3, #10]
   2db7c:	strb	w6, [x3, #10]
   2db80:	strb	w1, [x0, #10]
   2db84:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2db88:	ldr	x1, [sp, #200]
   2db8c:	ldrb	w6, [x0, #11]
   2db90:	cmp	x26, x1
   2db94:	ldrb	w1, [x3, #11]
   2db98:	strb	w6, [x3, #11]
   2db9c:	strb	w1, [x0, #11]
   2dba0:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dba4:	ldr	x1, [sp, #208]
   2dba8:	ldrb	w6, [x0, #12]
   2dbac:	cmp	x26, x1
   2dbb0:	ldrb	w1, [x3, #12]
   2dbb4:	strb	w6, [x3, #12]
   2dbb8:	strb	w1, [x0, #12]
   2dbbc:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dbc0:	ldr	x1, [sp, #216]
   2dbc4:	ldrb	w6, [x0, #13]
   2dbc8:	cmp	x26, x1
   2dbcc:	ldrb	w1, [x3, #13]
   2dbd0:	strb	w6, [x3, #13]
   2dbd4:	strb	w1, [x0, #13]
   2dbd8:	b.ls	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.plast
   2dbdc:	ldrb	w6, [x0, #14]
   2dbe0:	ldrb	w1, [x3, #14]
   2dbe4:	strb	w6, [x3, #14]
   2dbe8:	strb	w1, [x0, #14]
   2dbec:	nop
   2dbf0:	sub	x1, x19, #0x1
   2dbf4:	madd	x25, x7, x26, x28
   2dbf8:	cmp	x19, x24, lsl #1
   2dbfc:	sub	x1, x1, x24
   2dc00:	b.hi	2dc80 <__asan_backtrace_qsort@@Base+0x838>  // b.pmore
   2dc04:	mov	x0, x25
   2dc08:	mov	x3, x21
   2dc0c:	mov	x2, x26
   2dc10:	bl	2d448 <__asan_backtrace_qsort@@Base>
   2dc14:	cmp	x24, #0x1
   2dc18:	b.ls	2dc60 <__asan_backtrace_qsort@@Base+0x818>  // b.plast
   2dc1c:	mov	x19, x24
   2dc20:	b	2d500 <__asan_backtrace_qsort@@Base+0xb8>
   2dc24:	ldrb	w3, [x1, x0]
   2dc28:	ldrb	w2, [x28, x0]
   2dc2c:	strb	w3, [x28, x0]
   2dc30:	strb	w2, [x1, x0]
   2dc34:	add	x0, x0, #0x1
   2dc38:	cmp	x0, x26
   2dc3c:	b.eq	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>  // b.none
   2dc40:	ldrb	w3, [x1, x0]
   2dc44:	ldrb	w2, [x28, x0]
   2dc48:	strb	w3, [x28, x0]
   2dc4c:	strb	w2, [x1, x0]
   2dc50:	add	x0, x0, #0x1
   2dc54:	cmp	x0, x26
   2dc58:	b.ne	2dc24 <__asan_backtrace_qsort@@Base+0x7dc>  // b.any
   2dc5c:	b	2dbf0 <__asan_backtrace_qsort@@Base+0x7a8>
   2dc60:	ldp	x19, x20, [sp, #16]
   2dc64:	ldp	x21, x22, [sp, #32]
   2dc68:	ldp	x23, x24, [sp, #48]
   2dc6c:	ldp	x25, x26, [sp, #64]
   2dc70:	ldp	x27, x28, [sp, #80]
   2dc74:	ldp	x29, x30, [sp], #224
   2dc78:	ret
   2dc7c:	ret
   2dc80:	mov	x19, x1
   2dc84:	b	2d960 <__asan_backtrace_qsort@@Base+0x518>

000000000002dc88 <__asan_backtrace_create_state@@Base>:
   2dc88:	stp	x29, x30, [sp, #-144]!
   2dc8c:	mov	x29, sp
   2dc90:	stp	x19, x20, [sp, #16]
   2dc94:	add	x19, sp, #0x48
   2dc98:	mov	w20, w1
   2dc9c:	mov	w1, #0x0                   	// #0
   2dca0:	stp	x21, x22, [sp, #32]
   2dca4:	mov	x21, x2
   2dca8:	mov	x22, x3
   2dcac:	mov	x2, #0x48                  	// #72
   2dcb0:	str	x23, [sp, #48]
   2dcb4:	mov	x23, x0
   2dcb8:	mov	x0, x19
   2dcbc:	bl	6530 <__asan_internal_memset@plt>
   2dcc0:	mov	x3, x22
   2dcc4:	mov	x2, x21
   2dcc8:	mov	x0, x19
   2dccc:	mov	x1, #0x48                  	// #72
   2dcd0:	str	x23, [sp, #72]
   2dcd4:	str	w20, [sp, #80]
   2dcd8:	bl	65b0 <__asan_backtrace_alloc@plt>
   2dcdc:	cbz	x0, 2dd08 <__asan_backtrace_create_state@@Base+0x80>
   2dce0:	ldp	x2, x3, [sp, #72]
   2dce4:	stp	x2, x3, [x0]
   2dce8:	ldp	x2, x3, [sp, #88]
   2dcec:	stp	x2, x3, [x0, #16]
   2dcf0:	ldp	x2, x3, [sp, #104]
   2dcf4:	stp	x2, x3, [x0, #32]
   2dcf8:	ldp	x2, x3, [sp, #120]
   2dcfc:	stp	x2, x3, [x0, #48]
   2dd00:	ldr	x1, [sp, #136]
   2dd04:	str	x1, [x0, #64]
   2dd08:	ldp	x19, x20, [sp, #16]
   2dd0c:	ldp	x21, x22, [sp, #32]
   2dd10:	ldr	x23, [sp, #48]
   2dd14:	ldp	x29, x30, [sp], #144
   2dd18:	ret
   2dd1c:	nop
   2dd20:	sub	w5, w1, #0x1
   2dd24:	mov	x4, x0
   2dd28:	cmp	w5, #0x4f
   2dd2c:	b.ls	2dd38 <__asan_backtrace_create_state@@Base+0xb0>  // b.plast
   2dd30:	mov	x0, #0x0                   	// #0
   2dd34:	ret
   2dd38:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2dd3c:	add	x0, x0, #0xc70
   2dd40:	ldrb	w0, [x0, w5, uxtw]
   2dd44:	adr	x5, 2dd50 <__asan_backtrace_create_state@@Base+0xc8>
   2dd48:	add	x0, x5, w0, sxtb #2
   2dd4c:	br	x0
   2dd50:	cbz	x3, 2dd30 <__asan_backtrace_create_state@@Base+0xa8>
   2dd54:	ldp	w0, w5, [x4, #40]
   2dd58:	cmp	w0, w5
   2dd5c:	b.ge	2dd30 <__asan_backtrace_create_state@@Base+0xa8>  // b.tcont
   2dd60:	mov	w5, #0x18                  	// #24
   2dd64:	add	w7, w0, #0x1
   2dd68:	ldr	x6, [x4, #32]
   2dd6c:	smull	x5, w0, w5
   2dd70:	add	x0, x6, x5
   2dd74:	str	wzr, [x0, #4]
   2dd78:	str	w7, [x4, #40]
   2dd7c:	str	w1, [x6, x5]
   2dd80:	stp	x2, x3, [x0, #8]
   2dd84:	ret
   2dd88:	cbnz	x2, 2dd54 <__asan_backtrace_create_state@@Base+0xcc>
   2dd8c:	mov	x0, #0x0                   	// #0
   2dd90:	b	2dd34 <__asan_backtrace_create_state@@Base+0xac>
   2dd94:	cmp	x2, #0x0
   2dd98:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   2dd9c:	b.ne	2dd54 <__asan_backtrace_create_state@@Base+0xcc>  // b.any
   2dda0:	mov	x0, #0x0                   	// #0
   2dda4:	b	2dd34 <__asan_backtrace_create_state@@Base+0xac>
   2dda8:	cbz	x1, 2de88 <__asan_backtrace_create_state@@Base+0x200>
   2ddac:	stp	x29, x30, [sp, #-32]!
   2ddb0:	mov	x29, sp
   2ddb4:	stp	x19, x20, [sp, #16]
   2ddb8:	mov	x20, x0
   2ddbc:	mov	x19, x1
   2ddc0:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2ddc4:	add	x0, x0, #0xcc0
   2ddc8:	ldr	w1, [x19]
   2ddcc:	sub	w1, w1, #0x1
   2ddd0:	cmp	w1, #0x4f
   2ddd4:	b.ls	2dde4 <__asan_backtrace_create_state@@Base+0x15c>  // b.plast
   2ddd8:	ldp	x19, x20, [sp, #16]
   2dddc:	ldp	x29, x30, [sp], #32
   2dde0:	ret
   2dde4:	ldrb	w1, [x0, w1, uxtw]
   2dde8:	adr	x2, 2ddf4 <__asan_backtrace_create_state@@Base+0x16c>
   2ddec:	add	x1, x2, w1, sxtb #2
   2ddf0:	br	x1
   2ddf4:	ldr	x0, [x19, #8]
   2ddf8:	ldr	w0, [x0]
   2ddfc:	cmp	w0, #0x5
   2de00:	b.ne	2de10 <__asan_backtrace_create_state@@Base+0x188>  // b.any
   2de04:	ldr	w0, [x20, #348]
   2de08:	add	w0, w0, #0x1
   2de0c:	str	w0, [x20, #348]
   2de10:	ldr	w0, [x20, #308]
   2de14:	cmp	w0, #0x800
   2de18:	b.gt	2ddd8 <__asan_backtrace_create_state@@Base+0x150>
   2de1c:	ldr	x1, [x19, #8]
   2de20:	add	w0, w0, #0x1
   2de24:	str	w0, [x20, #308]
   2de28:	mov	x0, x20
   2de2c:	bl	2dda8 <__asan_backtrace_create_state@@Base+0x120>
   2de30:	ldr	x1, [x19, #16]
   2de34:	mov	x0, x20
   2de38:	bl	2dda8 <__asan_backtrace_create_state@@Base+0x120>
   2de3c:	ldr	w0, [x20, #308]
   2de40:	sub	w0, w0, #0x1
   2de44:	str	w0, [x20, #308]
   2de48:	ldp	x19, x20, [sp, #16]
   2de4c:	ldp	x29, x30, [sp], #32
   2de50:	ret
   2de54:	ldr	x19, [x19, #8]
   2de58:	cbnz	x19, 2ddc8 <__asan_backtrace_create_state@@Base+0x140>
   2de5c:	b	2ddd8 <__asan_backtrace_create_state@@Base+0x150>
   2de60:	ldr	x19, [x19, #16]
   2de64:	cbnz	x19, 2ddc8 <__asan_backtrace_create_state@@Base+0x140>
   2de68:	b	2ddd8 <__asan_backtrace_create_state@@Base+0x150>
   2de6c:	ldr	w0, [x20, #364]
   2de70:	add	w0, w0, #0x1
   2de74:	str	w0, [x20, #364]
   2de78:	ldr	w0, [x20, #308]
   2de7c:	cmp	w0, #0x800
   2de80:	b.gt	2ddd8 <__asan_backtrace_create_state@@Base+0x150>
   2de84:	b	2de1c <__asan_backtrace_create_state@@Base+0x194>
   2de88:	ret
   2de8c:	nop
   2de90:	cbz	x2, 2df58 <__asan_backtrace_create_state@@Base+0x2d0>
   2de94:	stp	x29, x30, [sp, #-64]!
   2de98:	mov	x29, sp
   2de9c:	stp	x19, x20, [sp, #16]
   2dea0:	mov	x20, x1
   2dea4:	mov	x19, x0
   2dea8:	stp	x21, x22, [sp, #32]
   2deac:	add	x22, x1, x2
   2deb0:	ldr	x1, [x0, #256]
   2deb4:	str	x23, [sp, #48]
   2deb8:	mov	x23, #0x1                   	// #1
   2debc:	b	2df14 <__asan_backtrace_create_state@@Base+0x28c>
   2dec0:	ldp	x3, x2, [x19, #272]
   2dec4:	strb	wzr, [x19, #255]
   2dec8:	add	x20, x20, #0x1
   2decc:	blr	x3
   2ded0:	strb	w21, [x19]
   2ded4:	ldr	x0, [x19, #320]
   2ded8:	str	x23, [x19, #256]
   2dedc:	strb	w21, [x19, #264]
   2dee0:	cmp	x22, x20
   2dee4:	add	x0, x0, #0x1
   2dee8:	str	x0, [x19, #320]
   2deec:	mov	x0, #0x1                   	// #1
   2def0:	b.eq	2df44 <__asan_backtrace_create_state@@Base+0x2bc>  // b.none
   2def4:	ldrb	w21, [x20]
   2def8:	add	x1, x0, #0x1
   2defc:	str	x1, [x19, #256]
   2df00:	add	x20, x20, #0x1
   2df04:	strb	w21, [x19, x0]
   2df08:	cmp	x20, x22
   2df0c:	strb	w21, [x19, #264]
   2df10:	b.eq	2df44 <__asan_backtrace_create_state@@Base+0x2bc>  // b.none
   2df14:	ldrb	w21, [x20]
   2df18:	mov	x0, x19
   2df1c:	cmp	x1, #0xff
   2df20:	b.eq	2dec0 <__asan_backtrace_create_state@@Base+0x238>  // b.none
   2df24:	mov	x0, x1
   2df28:	add	x20, x20, #0x1
   2df2c:	add	x1, x0, #0x1
   2df30:	str	x1, [x19, #256]
   2df34:	cmp	x20, x22
   2df38:	strb	w21, [x19, x0]
   2df3c:	strb	w21, [x19, #264]
   2df40:	b.ne	2df14 <__asan_backtrace_create_state@@Base+0x28c>  // b.any
   2df44:	ldp	x19, x20, [sp, #16]
   2df48:	ldp	x21, x22, [sp, #32]
   2df4c:	ldr	x23, [sp, #48]
   2df50:	ldp	x29, x30, [sp], #64
   2df54:	ret
   2df58:	ret
   2df5c:	nop
   2df60:	cbnz	x0, 2df7c <__asan_backtrace_create_state@@Base+0x2f4>
   2df64:	b	2df88 <__asan_backtrace_create_state@@Base+0x300>
   2df68:	cmp	w1, #0x0
   2df6c:	b.le	2df90 <__asan_backtrace_create_state@@Base+0x308>
   2df70:	ldr	x0, [x0, #16]
   2df74:	sub	w1, w1, #0x1
   2df78:	cbz	x0, 2df8c <__asan_backtrace_create_state@@Base+0x304>
   2df7c:	ldr	w2, [x0]
   2df80:	cmp	w2, #0x2f
   2df84:	b.eq	2df68 <__asan_backtrace_create_state@@Base+0x2e0>  // b.none
   2df88:	mov	x0, #0x0                   	// #0
   2df8c:	ret
   2df90:	b.ne	2df88 <__asan_backtrace_create_state@@Base+0x300>  // b.any
   2df94:	ldr	x0, [x0, #8]
   2df98:	ret
   2df9c:	nop
   2dfa0:	stp	x29, x30, [sp, #-48]!
   2dfa4:	mov	x29, sp
   2dfa8:	stp	x19, x20, [sp, #16]
   2dfac:	mov	x19, x2
   2dfb0:	add	x2, x1, #0x1
   2dfb4:	stp	x21, x22, [sp, #32]
   2dfb8:	mov	x21, x1
   2dfbc:	mov	x22, x0
   2dfc0:	ldp	x1, x20, [x19, #8]
   2dfc4:	add	x1, x2, x1
   2dfc8:	ldr	w2, [x19, #24]
   2dfcc:	cmp	x1, x20
   2dfd0:	b.hi	2e014 <__asan_backtrace_create_state@@Base+0x38c>  // b.pmore
   2dfd4:	cbnz	w2, 2e004 <__asan_backtrace_create_state@@Base+0x37c>
   2dfd8:	ldp	x3, x0, [x19]
   2dfdc:	mov	x1, x22
   2dfe0:	mov	x2, x21
   2dfe4:	add	x0, x3, x0
   2dfe8:	bl	64a0 <__asan_internal_memcpy@plt>
   2dfec:	ldp	x0, x1, [x19]
   2dff0:	add	x0, x0, x21
   2dff4:	strb	wzr, [x0, x1]
   2dff8:	ldr	x1, [x19, #8]
   2dffc:	add	x1, x1, x21
   2e000:	str	x1, [x19, #8]
   2e004:	ldp	x19, x20, [sp, #16]
   2e008:	ldp	x21, x22, [sp, #32]
   2e00c:	ldp	x29, x30, [sp], #48
   2e010:	ret
   2e014:	cbnz	w2, 2e004 <__asan_backtrace_create_state@@Base+0x37c>
   2e018:	cbz	x20, 2e050 <__asan_backtrace_create_state@@Base+0x3c8>
   2e01c:	nop
   2e020:	lsl	x20, x20, #1
   2e024:	cmp	x1, x20
   2e028:	b.hi	2e020 <__asan_backtrace_create_state@@Base+0x398>  // b.pmore
   2e02c:	ldr	x0, [x19]
   2e030:	mov	x1, x20
   2e034:	bl	6590 <realloc@plt>
   2e038:	cbz	x0, 2e060 <__asan_backtrace_create_state@@Base+0x3d8>
   2e03c:	ldr	w2, [x19, #24]
   2e040:	str	x0, [x19]
   2e044:	str	x20, [x19, #16]
   2e048:	cbz	w2, 2dfd8 <__asan_backtrace_create_state@@Base+0x350>
   2e04c:	b	2e004 <__asan_backtrace_create_state@@Base+0x37c>
   2e050:	cmp	x1, #0x2
   2e054:	mov	x20, #0x2                   	// #2
   2e058:	b.hi	2e020 <__asan_backtrace_create_state@@Base+0x398>  // b.pmore
   2e05c:	b	2e02c <__asan_backtrace_create_state@@Base+0x3a4>
   2e060:	ldr	x0, [x19]
   2e064:	bl	6540 <free@plt>
   2e068:	str	xzr, [x19]
   2e06c:	mov	w0, #0x1                   	// #1
   2e070:	stp	xzr, xzr, [x19, #8]
   2e074:	str	w0, [x19, #24]
   2e078:	b	2e004 <__asan_backtrace_create_state@@Base+0x37c>
   2e07c:	nop
   2e080:	cbz	x1, 2e19c <__asan_backtrace_create_state@@Base+0x514>
   2e084:	stp	x29, x30, [sp, #-48]!
   2e088:	mov	x29, sp
   2e08c:	stp	x21, x22, [sp, #32]
   2e090:	mov	x21, #0x8001                	// #32769
   2e094:	movk	x21, #0x410, lsl #16
   2e098:	movk	x21, #0xc600, lsl #32
   2e09c:	stp	x19, x20, [sp, #16]
   2e0a0:	mov	x20, x0
   2e0a4:	mov	x19, x1
   2e0a8:	mov	x22, #0x1                   	// #1
   2e0ac:	movk	x21, #0x19, lsl #48
   2e0b0:	ldr	w2, [x19]
   2e0b4:	cmp	w2, #0x8
   2e0b8:	b.eq	2e0d0 <__asan_backtrace_create_state@@Base+0x448>  // b.none
   2e0bc:	b.hi	2e13c <__asan_backtrace_create_state@@Base+0x4b4>  // b.pmore
   2e0c0:	cmp	w2, #0x6
   2e0c4:	b.eq	2e0d8 <__asan_backtrace_create_state@@Base+0x450>  // b.none
   2e0c8:	cmp	w2, #0x7
   2e0cc:	b.ne	2e0ec <__asan_backtrace_create_state@@Base+0x464>  // b.any
   2e0d0:	ldr	x19, [x19, #16]
   2e0d4:	cbnz	x19, 2e0b0 <__asan_backtrace_create_state@@Base+0x428>
   2e0d8:	mov	x0, #0x0                   	// #0
   2e0dc:	ldp	x19, x20, [sp, #16]
   2e0e0:	ldp	x21, x22, [sp, #32]
   2e0e4:	ldp	x29, x30, [sp], #48
   2e0e8:	ret
   2e0ec:	cbz	w2, 2e0d8 <__asan_backtrace_create_state@@Base+0x450>
   2e0f0:	cmp	w2, #0x5
   2e0f4:	b.ne	2e158 <__asan_backtrace_create_state@@Base+0x4d0>  // b.any
   2e0f8:	ldr	x0, [x20, #288]
   2e0fc:	cbz	x0, 2e190 <__asan_backtrace_create_state@@Base+0x508>
   2e100:	ldr	x0, [x0, #8]
   2e104:	ldr	x2, [x19, #8]
   2e108:	ldr	x0, [x0, #16]
   2e10c:	mov	w1, w2
   2e110:	tbnz	w2, #31, 2e170 <__asan_backtrace_create_state@@Base+0x4e8>
   2e114:	cbnz	x0, 2e12c <__asan_backtrace_create_state@@Base+0x4a4>
   2e118:	b	2e0d8 <__asan_backtrace_create_state@@Base+0x450>
   2e11c:	cbz	w1, 2e16c <__asan_backtrace_create_state@@Base+0x4e4>
   2e120:	ldr	x0, [x0, #16]
   2e124:	sub	w1, w1, #0x1
   2e128:	cbz	x0, 2e0d8 <__asan_backtrace_create_state@@Base+0x450>
   2e12c:	ldr	w2, [x0]
   2e130:	cmp	w2, #0x2f
   2e134:	b.eq	2e11c <__asan_backtrace_create_state@@Base+0x494>  // b.none
   2e138:	b	2e0d8 <__asan_backtrace_create_state@@Base+0x450>
   2e13c:	sub	w2, w2, #0x18
   2e140:	cmp	w2, #0x34
   2e144:	b.hi	2e158 <__asan_backtrace_create_state@@Base+0x4d0>  // b.pmore
   2e148:	lsl	x2, x22, x2
   2e14c:	tst	x2, x21
   2e150:	b.ne	2e0d8 <__asan_backtrace_create_state@@Base+0x450>  // b.any
   2e154:	tbnz	w2, #27, 2e0d0 <__asan_backtrace_create_state@@Base+0x448>
   2e158:	ldr	x1, [x19, #8]
   2e15c:	mov	x0, x20
   2e160:	bl	2e080 <__asan_backtrace_create_state@@Base+0x3f8>
   2e164:	cbz	x0, 2e0d0 <__asan_backtrace_create_state@@Base+0x448>
   2e168:	b	2e0dc <__asan_backtrace_create_state@@Base+0x454>
   2e16c:	ldr	x0, [x0, #8]
   2e170:	cbz	x0, 2e0d8 <__asan_backtrace_create_state@@Base+0x450>
   2e174:	ldr	w1, [x0]
   2e178:	cmp	w1, #0x2f
   2e17c:	b.ne	2e0d8 <__asan_backtrace_create_state@@Base+0x450>  // b.any
   2e180:	ldp	x19, x20, [sp, #16]
   2e184:	ldp	x21, x22, [sp, #32]
   2e188:	ldp	x29, x30, [sp], #48
   2e18c:	ret
   2e190:	mov	w1, #0x1                   	// #1
   2e194:	str	w1, [x20, #304]
   2e198:	b	2e0dc <__asan_backtrace_create_state@@Base+0x454>
   2e19c:	mov	x0, #0x0                   	// #0
   2e1a0:	ret
   2e1a4:	nop
   2e1a8:	stp	x29, x30, [sp, #-96]!
   2e1ac:	mov	w2, w1
   2e1b0:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   2e1b4:	mov	x29, sp
   2e1b8:	add	x1, x3, #0x378
   2e1bc:	stp	x19, x20, [sp, #16]
   2e1c0:	add	x20, sp, #0x40
   2e1c4:	mov	x19, x0
   2e1c8:	mov	x0, x20
   2e1cc:	bl	65f0 <sprintf@plt>
   2e1d0:	mov	x0, x20
   2e1d4:	bl	64b0 <__asan_internal_strlen@plt>
   2e1d8:	cbz	x0, 2e280 <__asan_backtrace_create_state@@Base+0x5f8>
   2e1dc:	stp	x21, x22, [sp, #32]
   2e1e0:	add	x21, x20, x0
   2e1e4:	ldr	x1, [x19, #256]
   2e1e8:	str	x23, [sp, #48]
   2e1ec:	mov	x23, #0x1                   	// #1
   2e1f0:	b	2e248 <__asan_backtrace_create_state@@Base+0x5c0>
   2e1f4:	ldp	x3, x2, [x19, #272]
   2e1f8:	strb	wzr, [x19, #255]
   2e1fc:	add	x20, x20, #0x1
   2e200:	blr	x3
   2e204:	strb	w22, [x19]
   2e208:	ldr	x0, [x19, #320]
   2e20c:	str	x23, [x19, #256]
   2e210:	strb	w22, [x19, #264]
   2e214:	cmp	x21, x20
   2e218:	add	x0, x0, #0x1
   2e21c:	str	x0, [x19, #320]
   2e220:	mov	x0, #0x1                   	// #1
   2e224:	b.eq	2e278 <__asan_backtrace_create_state@@Base+0x5f0>  // b.none
   2e228:	ldrb	w22, [x20]
   2e22c:	add	x1, x0, #0x1
   2e230:	str	x1, [x19, #256]
   2e234:	add	x20, x20, #0x1
   2e238:	strb	w22, [x19, x0]
   2e23c:	cmp	x21, x20
   2e240:	strb	w22, [x19, #264]
   2e244:	b.eq	2e278 <__asan_backtrace_create_state@@Base+0x5f0>  // b.none
   2e248:	ldrb	w22, [x20]
   2e24c:	mov	x0, x19
   2e250:	cmp	x1, #0xff
   2e254:	b.eq	2e1f4 <__asan_backtrace_create_state@@Base+0x56c>  // b.none
   2e258:	mov	x0, x1
   2e25c:	add	x20, x20, #0x1
   2e260:	add	x1, x0, #0x1
   2e264:	str	x1, [x19, #256]
   2e268:	cmp	x21, x20
   2e26c:	strb	w22, [x19, x0]
   2e270:	strb	w22, [x19, #264]
   2e274:	b.ne	2e248 <__asan_backtrace_create_state@@Base+0x5c0>  // b.any
   2e278:	ldp	x21, x22, [sp, #32]
   2e27c:	ldr	x23, [sp, #48]
   2e280:	ldp	x19, x20, [sp, #16]
   2e284:	ldp	x29, x30, [sp], #96
   2e288:	ret
   2e28c:	nop
   2e290:	ldr	x1, [x0, #24]
   2e294:	mov	x5, x0
   2e298:	ldrb	w2, [x1]
   2e29c:	cmp	w2, #0x5f
   2e2a0:	b.eq	2e32c <__asan_backtrace_create_state@@Base+0x6a4>  // b.none
   2e2a4:	cmp	w2, #0x6e
   2e2a8:	b.eq	2e334 <__asan_backtrace_create_state@@Base+0x6ac>  // b.none
   2e2ac:	sub	w0, w2, #0x30
   2e2b0:	and	w0, w0, #0xff
   2e2b4:	cmp	w0, #0x9
   2e2b8:	b.hi	2e334 <__asan_backtrace_create_state@@Base+0x6ac>  // b.pmore
   2e2bc:	mov	w8, #0xcccd                	// #52429
   2e2c0:	mov	w3, w2
   2e2c4:	mov	w9, #0x7fffffff            	// #2147483647
   2e2c8:	mov	w2, #0x0                   	// #0
   2e2cc:	movk	w8, #0xcccc, lsl #16
   2e2d0:	b	2e2e4 <__asan_backtrace_create_state@@Base+0x65c>
   2e2d4:	umull	x4, w4, w8
   2e2d8:	lsr	x4, x4, #35
   2e2dc:	cmp	w4, w2
   2e2e0:	b.lt	2e334 <__asan_backtrace_create_state@@Base+0x6ac>  // b.tstop
   2e2e4:	add	x1, x1, #0x1
   2e2e8:	str	x1, [x5, #24]
   2e2ec:	add	w2, w2, w2, lsl #2
   2e2f0:	ldrb	w7, [x1]
   2e2f4:	add	w0, w3, w2, lsl #1
   2e2f8:	sub	w2, w0, #0x30
   2e2fc:	sub	w6, w7, #0x30
   2e300:	mov	w3, w7
   2e304:	sub	w4, w9, w6
   2e308:	and	w6, w6, #0xff
   2e30c:	cmp	w6, #0x9
   2e310:	b.ls	2e2d4 <__asan_backtrace_create_state@@Base+0x64c>  // b.plast
   2e314:	sub	w0, w0, #0x2f
   2e318:	cmp	w7, #0x5f
   2e31c:	b.ne	2e334 <__asan_backtrace_create_state@@Base+0x6ac>  // b.any
   2e320:	add	x1, x1, #0x1
   2e324:	str	x1, [x5, #24]
   2e328:	ret
   2e32c:	mov	w0, #0x0                   	// #0
   2e330:	b	2e320 <__asan_backtrace_create_state@@Base+0x698>
   2e334:	mov	w0, #0xffffffff            	// #-1
   2e338:	ret
   2e33c:	nop
   2e340:	mov	x4, x0
   2e344:	ldr	x0, [x0, #24]
   2e348:	ldrb	w1, [x0]
   2e34c:	cmp	w1, #0x5f
   2e350:	b.ne	2e3f0 <__asan_backtrace_create_state@@Base+0x768>  // b.any
   2e354:	add	x1, x0, #0x1
   2e358:	str	x1, [x4, #24]
   2e35c:	mov	w12, #0x0                   	// #0
   2e360:	ldrb	w2, [x0, #1]
   2e364:	cmp	w2, #0x5f
   2e368:	b.eq	2e428 <__asan_backtrace_create_state@@Base+0x7a0>  // b.none
   2e36c:	cmp	w2, #0x6e
   2e370:	b.eq	2e400 <__asan_backtrace_create_state@@Base+0x778>  // b.none
   2e374:	sub	w0, w2, #0x30
   2e378:	and	w0, w0, #0xff
   2e37c:	cmp	w0, #0x9
   2e380:	b.hi	2e3f0 <__asan_backtrace_create_state@@Base+0x768>  // b.pmore
   2e384:	mov	w0, #0x0                   	// #0
   2e388:	mov	w9, #0xcccd                	// #52429
   2e38c:	mov	w5, w2
   2e390:	mov	w10, #0x7fffffff            	// #2147483647
   2e394:	mov	w2, #0x0                   	// #0
   2e398:	movk	w9, #0xcccc, lsl #16
   2e39c:	b	2e3b0 <__asan_backtrace_create_state@@Base+0x728>
   2e3a0:	umull	x3, w3, w9
   2e3a4:	lsr	x3, x3, #35
   2e3a8:	cmp	w3, w2
   2e3ac:	b.lt	2e3f8 <__asan_backtrace_create_state@@Base+0x770>  // b.tstop
   2e3b0:	mov	x11, x1
   2e3b4:	add	x1, x1, #0x1
   2e3b8:	str	x1, [x4, #24]
   2e3bc:	add	w2, w2, w2, lsl #2
   2e3c0:	ldrb	w7, [x1]
   2e3c4:	add	w8, w5, w2, lsl #1
   2e3c8:	sub	w2, w8, #0x30
   2e3cc:	sub	w6, w7, #0x30
   2e3d0:	mov	w5, w7
   2e3d4:	sub	w3, w10, w6
   2e3d8:	and	w6, w6, #0xff
   2e3dc:	cmp	w6, #0x9
   2e3e0:	b.ls	2e3a0 <__asan_backtrace_create_state@@Base+0x718>  // b.plast
   2e3e4:	cbz	w0, 2e444 <__asan_backtrace_create_state@@Base+0x7bc>
   2e3e8:	cmp	w8, #0x30
   2e3ec:	b.ne	2e3f8 <__asan_backtrace_create_state@@Base+0x770>  // b.any
   2e3f0:	mov	w0, #0x1                   	// #1
   2e3f4:	ret
   2e3f8:	mov	w0, #0x0                   	// #0
   2e3fc:	ret
   2e400:	add	x3, x1, #0x1
   2e404:	str	x3, [x4, #24]
   2e408:	ldrb	w2, [x1, #1]
   2e40c:	sub	w0, w2, #0x30
   2e410:	and	w0, w0, #0xff
   2e414:	cmp	w0, #0x9
   2e418:	b.hi	2e3f0 <__asan_backtrace_create_state@@Base+0x768>  // b.pmore
   2e41c:	mov	x1, x3
   2e420:	mov	w0, #0x1                   	// #1
   2e424:	b	2e388 <__asan_backtrace_create_state@@Base+0x700>
   2e428:	add	x1, x0, #0x2
   2e42c:	str	x1, [x4, #24]
   2e430:	mov	w12, #0x1                   	// #1
   2e434:	ldrb	w2, [x0, #2]
   2e438:	cmp	w2, #0x6e
   2e43c:	b.ne	2e374 <__asan_backtrace_create_state@@Base+0x6ec>  // b.any
   2e440:	b	2e400 <__asan_backtrace_create_state@@Base+0x778>
   2e444:	cmp	w12, #0x0
   2e448:	ccmp	w2, #0x9, #0x4, ne  // ne = any
   2e44c:	b.le	2e3f0 <__asan_backtrace_create_state@@Base+0x768>
   2e450:	cmp	w7, #0x5f
   2e454:	b.ne	2e3f4 <__asan_backtrace_create_state@@Base+0x76c>  // b.any
   2e458:	add	x11, x11, #0x2
   2e45c:	mov	w0, #0x1                   	// #1
   2e460:	str	x11, [x4, #24]
   2e464:	ret
   2e468:	mov	x1, x0
   2e46c:	ldr	x0, [x0, #24]
   2e470:	ldrb	w2, [x0]
   2e474:	cmp	w2, #0x54
   2e478:	b.ne	2e548 <__asan_backtrace_create_state@@Base+0x8c0>  // b.any
   2e47c:	add	x2, x0, #0x1
   2e480:	str	x2, [x1, #24]
   2e484:	ldrb	w5, [x0, #1]
   2e488:	cmp	w5, #0x5f
   2e48c:	b.eq	2e550 <__asan_backtrace_create_state@@Base+0x8c8>  // b.none
   2e490:	sub	w0, w5, #0x30
   2e494:	and	w0, w0, #0xff
   2e498:	cmp	w0, #0x9
   2e49c:	b.hi	2e548 <__asan_backtrace_create_state@@Base+0x8c0>  // b.pmore
   2e4a0:	mov	w9, #0xcccd                	// #52429
   2e4a4:	mov	w0, #0x0                   	// #0
   2e4a8:	mov	w10, #0x7fffffff            	// #2147483647
   2e4ac:	movk	w9, #0xcccc, lsl #16
   2e4b0:	b	2e4c4 <__asan_backtrace_create_state@@Base+0x83c>
   2e4b4:	umull	x3, w3, w9
   2e4b8:	lsr	x3, x3, #35
   2e4bc:	cmp	w3, w0
   2e4c0:	b.lt	2e548 <__asan_backtrace_create_state@@Base+0x8c0>  // b.tstop
   2e4c4:	mov	x8, x2
   2e4c8:	add	x2, x2, #0x1
   2e4cc:	str	x2, [x1, #24]
   2e4d0:	add	w0, w0, w0, lsl #2
   2e4d4:	ldrb	w7, [x2]
   2e4d8:	add	w6, w5, w0, lsl #1
   2e4dc:	sub	w0, w6, #0x30
   2e4e0:	sub	w4, w7, #0x30
   2e4e4:	mov	w5, w7
   2e4e8:	sub	w3, w10, w4
   2e4ec:	and	w4, w4, #0xff
   2e4f0:	cmp	w4, #0x9
   2e4f4:	b.ls	2e4b4 <__asan_backtrace_create_state@@Base+0x82c>  // b.plast
   2e4f8:	sub	w0, w6, #0x2f
   2e4fc:	cmp	w7, #0x5f
   2e500:	b.ne	2e548 <__asan_backtrace_create_state@@Base+0x8c0>  // b.any
   2e504:	add	x8, x8, #0x2
   2e508:	str	x8, [x1, #24]
   2e50c:	ldp	w2, w3, [x1, #40]
   2e510:	cmp	w2, w3
   2e514:	b.ge	2e548 <__asan_backtrace_create_state@@Base+0x8c0>  // b.tcont
   2e518:	mov	w4, #0x18                  	// #24
   2e51c:	add	w5, w2, #0x1
   2e520:	ldr	x3, [x1, #32]
   2e524:	smull	x2, w2, w4
   2e528:	sxtw	x6, w0
   2e52c:	mov	w4, #0x5                   	// #5
   2e530:	add	x0, x3, x2
   2e534:	str	wzr, [x0, #4]
   2e538:	str	w5, [x1, #40]
   2e53c:	str	w4, [x3, x2]
   2e540:	str	x6, [x0, #8]
   2e544:	ret
   2e548:	mov	x0, #0x0                   	// #0
   2e54c:	ret
   2e550:	add	x2, x0, #0x2
   2e554:	mov	w0, #0x0                   	// #0
   2e558:	str	x2, [x1, #24]
   2e55c:	b	2e50c <__asan_backtrace_create_state@@Base+0x884>
   2e560:	mov	x2, x0
   2e564:	cbnz	w1, 2e580 <__asan_backtrace_create_state@@Base+0x8f8>
   2e568:	ldr	x0, [x0, #24]
   2e56c:	ldrb	w1, [x0]
   2e570:	cbz	w1, 2e6a8 <__asan_backtrace_create_state@@Base+0xa20>
   2e574:	add	x1, x0, #0x1
   2e578:	str	x1, [x2, #24]
   2e57c:	ldrb	w1, [x0]
   2e580:	cmp	w1, #0x68
   2e584:	b.eq	2e6c4 <__asan_backtrace_create_state@@Base+0xa3c>  // b.none
   2e588:	cmp	w1, #0x76
   2e58c:	b.ne	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   2e590:	ldr	x6, [x2, #24]
   2e594:	ldrb	w5, [x6]
   2e598:	cmp	w5, #0x6e
   2e59c:	b.eq	2e6b0 <__asan_backtrace_create_state@@Base+0xa28>  // b.none
   2e5a0:	sub	w0, w5, #0x30
   2e5a4:	and	w0, w0, #0xff
   2e5a8:	cmp	w0, #0x9
   2e5ac:	b.hi	2e608 <__asan_backtrace_create_state@@Base+0x980>  // b.pmore
   2e5b0:	mov	w7, #0xcccd                	// #52429
   2e5b4:	add	x3, x6, #0x1
   2e5b8:	mov	w1, #0x0                   	// #0
   2e5bc:	mov	w8, #0x7fffffff            	// #2147483647
   2e5c0:	movk	w7, #0xcccc, lsl #16
   2e5c4:	b	2e5d8 <__asan_backtrace_create_state@@Base+0x950>
   2e5c8:	umull	x0, w0, w7
   2e5cc:	lsr	x0, x0, #35
   2e5d0:	cmp	w0, w1
   2e5d4:	b.lt	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   2e5d8:	add	w1, w1, w1, lsl #2
   2e5dc:	str	x3, [x2, #24]
   2e5e0:	mov	x6, x3
   2e5e4:	add	x3, x3, #0x1
   2e5e8:	add	w1, w5, w1, lsl #1
   2e5ec:	ldurb	w5, [x3, #-1]
   2e5f0:	sub	w1, w1, #0x30
   2e5f4:	sub	w4, w5, #0x30
   2e5f8:	sub	w0, w8, w4
   2e5fc:	and	w4, w4, #0xff
   2e600:	cmp	w4, #0x9
   2e604:	b.ls	2e5c8 <__asan_backtrace_create_state@@Base+0x940>  // b.plast
   2e608:	cmp	w5, #0x5f
   2e60c:	b.ne	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   2e610:	add	x4, x6, #0x1
   2e614:	str	x4, [x2, #24]
   2e618:	ldrb	w0, [x6, #1]
   2e61c:	cmp	w0, #0x6e
   2e620:	b.ne	2e630 <__asan_backtrace_create_state@@Base+0x9a8>  // b.any
   2e624:	add	x4, x6, #0x2
   2e628:	str	x4, [x2, #24]
   2e62c:	ldrb	w0, [x6, #2]
   2e630:	sub	w1, w0, #0x30
   2e634:	and	w1, w1, #0xff
   2e638:	cmp	w1, #0x9
   2e63c:	b.hi	2e690 <__asan_backtrace_create_state@@Base+0xa08>  // b.pmore
   2e640:	mov	w7, #0xcccd                	// #52429
   2e644:	mov	w1, #0x0                   	// #0
   2e648:	mov	w6, #0x7fffffff            	// #2147483647
   2e64c:	movk	w7, #0xcccc, lsl #16
   2e650:	b	2e664 <__asan_backtrace_create_state@@Base+0x9dc>
   2e654:	umull	x3, w3, w7
   2e658:	lsr	x3, x3, #35
   2e65c:	cmp	w3, w1
   2e660:	b.lt	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   2e664:	add	x4, x4, #0x1
   2e668:	add	w1, w1, w1, lsl #2
   2e66c:	str	x4, [x2, #24]
   2e670:	add	w1, w0, w1, lsl #1
   2e674:	ldrb	w0, [x4]
   2e678:	sub	w1, w1, #0x30
   2e67c:	sub	w5, w0, #0x30
   2e680:	sub	w3, w6, w5
   2e684:	and	w5, w5, #0xff
   2e688:	cmp	w5, #0x9
   2e68c:	b.ls	2e654 <__asan_backtrace_create_state@@Base+0x9cc>  // b.plast
   2e690:	cmp	w0, #0x5f
   2e694:	b.ne	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.any
   2e698:	add	x4, x4, #0x1
   2e69c:	mov	w0, #0x1                   	// #1
   2e6a0:	str	x4, [x2, #24]
   2e6a4:	ret
   2e6a8:	mov	w0, #0x0                   	// #0
   2e6ac:	ret
   2e6b0:	add	x0, x6, #0x1
   2e6b4:	str	x0, [x2, #24]
   2e6b8:	ldrb	w5, [x6, #1]
   2e6bc:	mov	x6, x0
   2e6c0:	b	2e5a0 <__asan_backtrace_create_state@@Base+0x918>
   2e6c4:	ldr	x4, [x2, #24]
   2e6c8:	ldrb	w0, [x4]
   2e6cc:	cmp	w0, #0x6e
   2e6d0:	b.ne	2e6e4 <__asan_backtrace_create_state@@Base+0xa5c>  // b.any
   2e6d4:	add	x1, x4, #0x1
   2e6d8:	str	x1, [x2, #24]
   2e6dc:	ldrb	w0, [x4, #1]
   2e6e0:	mov	x4, x1
   2e6e4:	sub	w1, w0, #0x30
   2e6e8:	and	w1, w1, #0xff
   2e6ec:	cmp	w1, #0x9
   2e6f0:	b.hi	2e690 <__asan_backtrace_create_state@@Base+0xa08>  // b.pmore
   2e6f4:	mov	w7, #0xcccd                	// #52429
   2e6f8:	add	x5, x4, #0x1
   2e6fc:	mov	w1, #0x0                   	// #0
   2e700:	mov	w8, #0x7fffffff            	// #2147483647
   2e704:	movk	w7, #0xcccc, lsl #16
   2e708:	b	2e71c <__asan_backtrace_create_state@@Base+0xa94>
   2e70c:	umull	x3, w3, w7
   2e710:	lsr	x3, x3, #35
   2e714:	cmp	w3, w1
   2e718:	b.lt	2e6a8 <__asan_backtrace_create_state@@Base+0xa20>  // b.tstop
   2e71c:	add	w1, w1, w1, lsl #2
   2e720:	str	x5, [x2, #24]
   2e724:	mov	x4, x5
   2e728:	add	x5, x5, #0x1
   2e72c:	add	w1, w0, w1, lsl #1
   2e730:	ldurb	w0, [x5, #-1]
   2e734:	sub	w1, w1, #0x30
   2e738:	sub	w6, w0, #0x30
   2e73c:	sub	w3, w8, w6
   2e740:	and	w6, w6, #0xff
   2e744:	cmp	w6, #0x9
   2e748:	b.ls	2e70c <__asan_backtrace_create_state@@Base+0xa84>  // b.plast
   2e74c:	b	2e690 <__asan_backtrace_create_state@@Base+0xa08>
   2e750:	stp	x29, x30, [sp, #-272]!
   2e754:	mov	x29, sp
   2e758:	stp	x19, x20, [sp, #16]
   2e75c:	mov	x19, x0
   2e760:	cbz	x2, 2e7f4 <__asan_backtrace_create_state@@Base+0xb6c>
   2e764:	stp	x21, x22, [sp, #32]
   2e768:	ldr	w21, [x0, #304]
   2e76c:	cbnz	w21, 2e7b8 <__asan_backtrace_create_state@@Base+0xb30>
   2e770:	ldr	w20, [x2]
   2e774:	stp	x23, x24, [sp, #48]
   2e778:	mov	x24, x2
   2e77c:	cmp	w20, #0x50
   2e780:	b.ls	2e798 <__asan_backtrace_create_state@@Base+0xb10>  // b.plast
   2e784:	mov	w0, #0x1                   	// #1
   2e788:	ldp	x21, x22, [sp, #32]
   2e78c:	ldp	x23, x24, [sp, #48]
   2e790:	str	w0, [x19, #304]
   2e794:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2e798:	adrp	x0, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2e79c:	mov	w22, w1
   2e7a0:	add	x0, x0, #0xd10
   2e7a4:	stp	x25, x26, [sp, #64]
   2e7a8:	ldrh	w0, [x0, w20, uxtw #1]
   2e7ac:	adr	x1, 2e7b8 <__asan_backtrace_create_state@@Base+0xb30>
   2e7b0:	add	x0, x1, w0, sxth #2
   2e7b4:	br	x0
   2e7b8:	ldp	x21, x22, [sp, #32]
   2e7bc:	ldp	x19, x20, [sp, #16]
   2e7c0:	ldp	x29, x30, [sp], #272
   2e7c4:	ret
   2e7c8:	ldr	x0, [x2, #16]
   2e7cc:	ldr	w1, [x0]
   2e7d0:	cmp	w1, #0x3b
   2e7d4:	b.ne	2e7e8 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   2e7d8:	ldr	x0, [x0, #16]
   2e7dc:	ldr	w0, [x0]
   2e7e0:	cmp	w0, #0x3c
   2e7e4:	b.eq	34364 <__asan_backtrace_create_state@@Base+0x66dc>  // b.none
   2e7e8:	ldp	x21, x22, [sp, #32]
   2e7ec:	ldp	x23, x24, [sp, #48]
   2e7f0:	ldp	x25, x26, [sp, #64]
   2e7f4:	mov	w0, #0x1                   	// #1
   2e7f8:	str	w0, [x19, #304]
   2e7fc:	ldp	x19, x20, [sp, #16]
   2e800:	ldp	x29, x30, [sp], #272
   2e804:	ret
   2e808:	ldp	x1, x2, [x19, #288]
   2e80c:	add	x0, sp, #0x90
   2e810:	stp	x2, x24, [sp, #144]
   2e814:	str	wzr, [sp, #160]
   2e818:	str	x1, [sp, #168]
   2e81c:	ldr	x3, [x24, #8]
   2e820:	str	x0, [x19, #296]
   2e824:	mov	x25, x3
   2e828:	cbnz	x25, 31274 <__asan_backtrace_create_state@@Base+0x35ec>
   2e82c:	mov	w0, #0x1                   	// #1
   2e830:	str	w0, [x19, #304]
   2e834:	mov	x2, x24
   2e838:	mov	w1, w22
   2e83c:	mov	x0, x19
   2e840:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   2e844:	ldr	x0, [sp, #144]
   2e848:	str	x0, [x19, #296]
   2e84c:	cbz	w21, 312e8 <__asan_backtrace_create_state@@Base+0x3660>
   2e850:	ldp	x21, x22, [sp, #32]
   2e854:	ldp	x25, x26, [sp, #64]
   2e858:	str	x23, [x19, #288]
   2e85c:	ldp	x23, x24, [sp, #48]
   2e860:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2e864:	ldr	x2, [x19, #296]
   2e868:	ldr	x25, [x24, #8]
   2e86c:	mov	x0, x2
   2e870:	cbz	x2, 2e8a4 <__asan_backtrace_create_state@@Base+0xc1c>
   2e874:	nop
   2e878:	ldr	w1, [x0, #16]
   2e87c:	cbnz	w1, 2e89c <__asan_backtrace_create_state@@Base+0xc14>
   2e880:	ldr	x1, [x0, #8]
   2e884:	ldr	w1, [x1]
   2e888:	sub	w3, w1, #0x19
   2e88c:	cmp	w3, #0x2
   2e890:	b.hi	3398c <__asan_backtrace_create_state@@Base+0x5d04>  // b.pmore
   2e894:	cmp	w20, w1
   2e898:	b.eq	33998 <__asan_backtrace_create_state@@Base+0x5d10>  // b.none
   2e89c:	ldr	x0, [x0]
   2e8a0:	cbnz	x0, 2e878 <__asan_backtrace_create_state@@Base+0xbf0>
   2e8a4:	ldr	x4, [x19, #288]
   2e8a8:	b	2e8f8 <__asan_backtrace_create_state@@Base+0xc70>
   2e8ac:	ldp	x25, x26, [sp, #64]
   2e8b0:	b	2e784 <__asan_backtrace_create_state@@Base+0xafc>
   2e8b4:	ldr	w0, [x19, #312]
   2e8b8:	ldr	x3, [x2, #8]
   2e8bc:	mov	x25, x3
   2e8c0:	ldr	w1, [x3]
   2e8c4:	cbnz	w0, 32ca0 <__asan_backtrace_create_state@@Base+0x5018>
   2e8c8:	cmp	w1, #0x5
   2e8cc:	b.eq	34124 <__asan_backtrace_create_state@@Base+0x649c>  // b.none
   2e8d0:	ldr	x4, [x19, #288]
   2e8d4:	mov	x0, x3
   2e8d8:	mov	w21, #0x0                   	// #0
   2e8dc:	cmp	w1, #0x23
   2e8e0:	ldr	x2, [x19, #296]
   2e8e4:	b.eq	32b78 <__asan_backtrace_create_state@@Base+0x4ef0>  // b.none
   2e8e8:	cmp	w20, w1
   2e8ec:	b.eq	32b78 <__asan_backtrace_create_state@@Base+0x4ef0>  // b.none
   2e8f0:	cmp	w1, #0x24
   2e8f4:	b.eq	31258 <__asan_backtrace_create_state@@Base+0x35d0>  // b.none
   2e8f8:	add	x0, sp, #0x90
   2e8fc:	stp	x2, x24, [sp, #144]
   2e900:	str	wzr, [sp, #160]
   2e904:	str	x4, [sp, #168]
   2e908:	str	x0, [x19, #296]
   2e90c:	b	2e828 <__asan_backtrace_create_state@@Base+0xba0>
   2e910:	ldr	x20, [x2, #8]
   2e914:	cbz	x20, 3257c <__asan_backtrace_create_state@@Base+0x48f4>
   2e918:	ldr	w0, [x20, #4]
   2e91c:	cmp	w0, #0x1
   2e920:	b.gt	3257c <__asan_backtrace_create_state@@Base+0x48f4>
   2e924:	ldr	w1, [x19, #308]
   2e928:	cmp	w1, #0x400
   2e92c:	b.gt	3257c <__asan_backtrace_create_state@@Base+0x48f4>
   2e930:	ldr	x3, [x19, #328]
   2e934:	add	w0, w0, #0x1
   2e938:	str	w0, [x20, #4]
   2e93c:	add	w1, w1, #0x1
   2e940:	add	x0, sp, #0x90
   2e944:	str	w1, [x19, #308]
   2e948:	str	x0, [x19, #328]
   2e94c:	mov	w1, w22
   2e950:	mov	x0, x19
   2e954:	mov	x2, x20
   2e958:	stp	x20, x3, [sp, #144]
   2e95c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2e960:	ldr	w1, [x20, #4]
   2e964:	ldr	x0, [sp, #152]
   2e968:	str	x0, [x19, #328]
   2e96c:	ldr	w0, [x19, #308]
   2e970:	sub	w1, w1, #0x1
   2e974:	str	w1, [x20, #4]
   2e978:	sub	w0, w0, #0x1
   2e97c:	str	w0, [x19, #308]
   2e980:	tbz	w22, #2, 33740 <__asan_backtrace_create_state@@Base+0x5ab8>
   2e984:	ldr	x1, [x19, #256]
   2e988:	add	x0, x1, #0x1
   2e98c:	cmp	x1, #0xff
   2e990:	b.ne	2e9b8 <__asan_backtrace_create_state@@Base+0xd30>  // b.any
   2e994:	ldp	x3, x2, [x19, #272]
   2e998:	strb	wzr, [x19, #255]
   2e99c:	mov	x0, x19
   2e9a0:	blr	x3
   2e9a4:	ldr	x2, [x19, #320]
   2e9a8:	mov	x0, #0x1                   	// #1
   2e9ac:	mov	x1, #0x0                   	// #0
   2e9b0:	add	x2, x2, x0
   2e9b4:	str	x2, [x19, #320]
   2e9b8:	str	x0, [x19, #256]
   2e9bc:	mov	w0, #0x2e                  	// #46
   2e9c0:	strb	w0, [x19, x1]
   2e9c4:	strb	w0, [x19, #264]
   2e9c8:	ldr	x23, [x24, #16]
   2e9cc:	ldr	w0, [x23]
   2e9d0:	cmp	w0, #0x47
   2e9d4:	b.eq	33c68 <__asan_backtrace_create_state@@Base+0x5fe0>  // b.none
   2e9d8:	ldr	w0, [x23, #4]
   2e9dc:	cmp	w0, #0x1
   2e9e0:	b.gt	32608 <__asan_backtrace_create_state@@Base+0x4980>
   2e9e4:	ldr	w1, [x19, #308]
   2e9e8:	cmp	w1, #0x400
   2e9ec:	b.gt	32608 <__asan_backtrace_create_state@@Base+0x4980>
   2e9f0:	ldr	x3, [x19, #328]
   2e9f4:	add	w0, w0, #0x1
   2e9f8:	str	w0, [x23, #4]
   2e9fc:	add	w1, w1, #0x1
   2ea00:	add	x0, sp, #0x90
   2ea04:	str	w1, [x19, #308]
   2ea08:	str	x0, [x19, #328]
   2ea0c:	mov	w1, w22
   2ea10:	mov	x2, x23
   2ea14:	mov	x0, x19
   2ea18:	stp	x23, x3, [sp, #144]
   2ea1c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2ea20:	ldr	w1, [x23, #4]
   2ea24:	ldr	x0, [sp, #152]
   2ea28:	sub	w1, w1, #0x1
   2ea2c:	ldp	x21, x22, [sp, #32]
   2ea30:	ldp	x25, x26, [sp, #64]
   2ea34:	str	x0, [x19, #328]
   2ea38:	ldr	w0, [x19, #308]
   2ea3c:	str	w1, [x23, #4]
   2ea40:	sub	w0, w0, #0x1
   2ea44:	ldp	x23, x24, [sp, #48]
   2ea48:	str	w0, [x19, #308]
   2ea4c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2ea50:	ldr	x20, [x24, #16]
   2ea54:	add	x0, sp, #0x90
   2ea58:	ldp	x1, x2, [x19, #288]
   2ea5c:	stp	x2, x24, [sp, #144]
   2ea60:	str	wzr, [sp, #160]
   2ea64:	str	x1, [sp, #168]
   2ea68:	str	x0, [x19, #296]
   2ea6c:	cbz	x20, 32668 <__asan_backtrace_create_state@@Base+0x49e0>
   2ea70:	ldr	w0, [x20, #4]
   2ea74:	cmp	w0, #0x1
   2ea78:	b.gt	32668 <__asan_backtrace_create_state@@Base+0x49e0>
   2ea7c:	ldr	w1, [x19, #308]
   2ea80:	cmp	w1, #0x400
   2ea84:	b.gt	32668 <__asan_backtrace_create_state@@Base+0x49e0>
   2ea88:	ldr	x3, [x19, #328]
   2ea8c:	add	w0, w0, #0x1
   2ea90:	str	w0, [x20, #4]
   2ea94:	add	w1, w1, #0x1
   2ea98:	add	x0, sp, #0x80
   2ea9c:	str	w1, [x19, #308]
   2eaa0:	str	x0, [x19, #328]
   2eaa4:	mov	x2, x20
   2eaa8:	mov	w1, w22
   2eaac:	mov	x0, x19
   2eab0:	stp	x20, x3, [sp, #128]
   2eab4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2eab8:	ldr	w1, [x20, #4]
   2eabc:	ldr	x0, [sp, #136]
   2eac0:	str	x0, [x19, #328]
   2eac4:	ldr	w2, [sp, #160]
   2eac8:	sub	w1, w1, #0x1
   2eacc:	ldr	w0, [x19, #308]
   2ead0:	str	w1, [x20, #4]
   2ead4:	sub	w0, w0, #0x1
   2ead8:	str	w0, [x19, #308]
   2eadc:	cbz	w2, 32670 <__asan_backtrace_create_state@@Base+0x49e8>
   2eae0:	ldr	x0, [sp, #144]
   2eae4:	ldp	x21, x22, [sp, #32]
   2eae8:	ldp	x23, x24, [sp, #48]
   2eaec:	ldp	x25, x26, [sp, #64]
   2eaf0:	str	x0, [x19, #296]
   2eaf4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2eaf8:	ldr	x20, [x2, #8]
   2eafc:	cbz	x20, 2eb68 <__asan_backtrace_create_state@@Base+0xee0>
   2eb00:	ldr	w0, [x20, #4]
   2eb04:	cmp	w0, #0x1
   2eb08:	b.gt	331e4 <__asan_backtrace_create_state@@Base+0x555c>
   2eb0c:	ldr	w1, [x19, #308]
   2eb10:	cmp	w1, #0x400
   2eb14:	b.gt	331e4 <__asan_backtrace_create_state@@Base+0x555c>
   2eb18:	ldr	x3, [x19, #328]
   2eb1c:	add	w0, w0, #0x1
   2eb20:	str	w0, [x20, #4]
   2eb24:	add	w1, w1, #0x1
   2eb28:	add	x0, sp, #0x90
   2eb2c:	str	w1, [x19, #308]
   2eb30:	str	x0, [x19, #328]
   2eb34:	mov	w1, w22
   2eb38:	mov	x0, x19
   2eb3c:	mov	x2, x20
   2eb40:	stp	x20, x3, [sp, #144]
   2eb44:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2eb48:	ldr	w1, [x20, #4]
   2eb4c:	ldr	x0, [sp, #152]
   2eb50:	str	x0, [x19, #328]
   2eb54:	ldr	w0, [x19, #308]
   2eb58:	sub	w1, w1, #0x1
   2eb5c:	str	w1, [x20, #4]
   2eb60:	sub	w0, w0, #0x1
   2eb64:	str	w0, [x19, #308]
   2eb68:	ldr	x0, [x24, #16]
   2eb6c:	cbz	x0, 338c8 <__asan_backtrace_create_state@@Base+0x5c40>
   2eb70:	ldr	x1, [x19, #256]
   2eb74:	cmp	x1, #0xfd
   2eb78:	b.ls	2eb9c <__asan_backtrace_create_state@@Base+0xf14>  // b.plast
   2eb7c:	strb	wzr, [x19, x1]
   2eb80:	mov	x0, x19
   2eb84:	ldp	x3, x2, [x19, #272]
   2eb88:	blr	x3
   2eb8c:	str	xzr, [x19, #256]
   2eb90:	ldr	x0, [x19, #320]
   2eb94:	add	x0, x0, #0x1
   2eb98:	str	x0, [x19, #320]
   2eb9c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2eba0:	add	x20, x20, #0xf8
   2eba4:	mov	x0, x20
   2eba8:	bl	64b0 <__asan_internal_strlen@plt>
   2ebac:	cbz	x0, 329b8 <__asan_backtrace_create_state@@Base+0x4d30>
   2ebb0:	add	x25, x20, x0
   2ebb4:	mov	x26, #0x1                   	// #1
   2ebb8:	ldr	x23, [x19, #256]
   2ebbc:	b	2ec1c <__asan_backtrace_create_state@@Base+0xf94>
   2ebc0:	ldp	x3, x2, [x19, #272]
   2ebc4:	strb	wzr, [x19, #255]
   2ebc8:	mov	x0, x19
   2ebcc:	mov	x1, x23
   2ebd0:	add	x20, x20, #0x1
   2ebd4:	blr	x3
   2ebd8:	strb	w21, [x19]
   2ebdc:	ldr	x0, [x19, #320]
   2ebe0:	str	x26, [x19, #256]
   2ebe4:	strb	w21, [x19, #264]
   2ebe8:	cmp	x20, x25
   2ebec:	add	x0, x0, #0x1
   2ebf0:	str	x0, [x19, #320]
   2ebf4:	b.eq	33b4c <__asan_backtrace_create_state@@Base+0x5ec4>  // b.none
   2ebf8:	ldrb	w21, [x20]
   2ebfc:	mov	x0, #0x1                   	// #1
   2ec00:	add	x23, x0, #0x1
   2ec04:	str	x23, [x19, #256]
   2ec08:	strb	w21, [x19, x0]
   2ec0c:	add	x20, x20, #0x1
   2ec10:	strb	w21, [x19, #264]
   2ec14:	cmp	x25, x20
   2ec18:	b.eq	329bc <__asan_backtrace_create_state@@Base+0x4d34>  // b.none
   2ec1c:	ldrb	w21, [x20]
   2ec20:	cmp	x23, #0xff
   2ec24:	b.eq	2ebc0 <__asan_backtrace_create_state@@Base+0xf38>  // b.none
   2ec28:	mov	x0, x23
   2ec2c:	b	2ec00 <__asan_backtrace_create_state@@Base+0xf78>
   2ec30:	ldr	x23, [x2, #8]
   2ec34:	mov	w21, #0x0                   	// #0
   2ec38:	ldr	w0, [x23]
   2ec3c:	cmp	w0, #0x27
   2ec40:	b.eq	334c4 <__asan_backtrace_create_state@@Base+0x583c>  // b.none
   2ec44:	ldr	x0, [x19, #256]
   2ec48:	cmp	x0, #0xff
   2ec4c:	b.eq	335d8 <__asan_backtrace_create_state@@Base+0x5950>  // b.none
   2ec50:	add	x1, x0, #0x1
   2ec54:	str	x1, [x19, #256]
   2ec58:	mov	w2, #0x28                  	// #40
   2ec5c:	strb	w2, [x19, x0]
   2ec60:	strb	w2, [x19, #264]
   2ec64:	ldr	w0, [x23, #4]
   2ec68:	cmp	w0, #0x1
   2ec6c:	b.gt	32ef4 <__asan_backtrace_create_state@@Base+0x526c>
   2ec70:	ldr	w2, [x19, #308]
   2ec74:	cmp	w2, #0x400
   2ec78:	b.gt	32ef4 <__asan_backtrace_create_state@@Base+0x526c>
   2ec7c:	ldr	x3, [x19, #328]
   2ec80:	add	w0, w0, #0x1
   2ec84:	str	w0, [x23, #4]
   2ec88:	add	w2, w2, #0x1
   2ec8c:	add	x0, sp, #0x90
   2ec90:	str	w2, [x19, #308]
   2ec94:	str	x0, [x19, #328]
   2ec98:	mov	w1, w22
   2ec9c:	mov	x2, x23
   2eca0:	mov	x0, x19
   2eca4:	stp	x23, x3, [sp, #144]
   2eca8:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2ecac:	ldr	w2, [x23, #4]
   2ecb0:	ldr	x0, [sp, #152]
   2ecb4:	str	x0, [x19, #328]
   2ecb8:	ldr	w0, [x19, #308]
   2ecbc:	sub	w2, w2, #0x1
   2ecc0:	ldr	x1, [x19, #256]
   2ecc4:	str	w2, [x23, #4]
   2ecc8:	sub	w0, w0, #0x1
   2eccc:	str	w0, [x19, #308]
   2ecd0:	cmp	x1, #0xff
   2ecd4:	b.ne	331fc <__asan_backtrace_create_state@@Base+0x5574>  // b.any
   2ecd8:	ldp	x3, x2, [x19, #272]
   2ecdc:	strb	wzr, [x19, #255]
   2ece0:	mov	x0, x19
   2ece4:	blr	x3
   2ece8:	ldr	x1, [x19, #320]
   2ecec:	mov	w0, #0x29                  	// #41
   2ecf0:	strb	w0, [x19]
   2ecf4:	strb	w0, [x19, #264]
   2ecf8:	mov	x0, #0x1                   	// #1
   2ecfc:	add	x1, x1, x0
   2ed00:	str	x0, [x19, #256]
   2ed04:	str	x1, [x19, #320]
   2ed08:	ldr	w1, [x24]
   2ed0c:	cmp	w1, #0x3e
   2ed10:	b.eq	33638 <__asan_backtrace_create_state@@Base+0x59b0>  // b.none
   2ed14:	cmp	w21, #0x8
   2ed18:	b.eq	33250 <__asan_backtrace_create_state@@Base+0x55c8>  // b.none
   2ed1c:	ldr	x20, [x24, #16]
   2ed20:	cbz	x20, 328b4 <__asan_backtrace_create_state@@Base+0x4c2c>
   2ed24:	ldr	w0, [x20, #4]
   2ed28:	cmp	w0, #0x1
   2ed2c:	b.gt	328b4 <__asan_backtrace_create_state@@Base+0x4c2c>
   2ed30:	ldr	w1, [x19, #308]
   2ed34:	cmp	w1, #0x400
   2ed38:	b.gt	328b4 <__asan_backtrace_create_state@@Base+0x4c2c>
   2ed3c:	ldr	x3, [x19, #328]
   2ed40:	add	w0, w0, #0x1
   2ed44:	str	w0, [x20, #4]
   2ed48:	add	w1, w1, #0x1
   2ed4c:	add	x0, sp, #0x90
   2ed50:	str	w1, [x19, #308]
   2ed54:	str	x0, [x19, #328]
   2ed58:	mov	w1, w22
   2ed5c:	mov	x0, x19
   2ed60:	mov	x2, x20
   2ed64:	stp	x20, x3, [sp, #144]
   2ed68:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2ed6c:	ldr	w1, [x20, #4]
   2ed70:	ldr	x0, [sp, #152]
   2ed74:	str	x0, [x19, #328]
   2ed78:	ldr	w0, [x19, #308]
   2ed7c:	sub	w1, w1, #0x1
   2ed80:	str	w1, [x20, #4]
   2ed84:	sub	w0, w0, #0x1
   2ed88:	str	w0, [x19, #308]
   2ed8c:	cmp	w21, #0x8
   2ed90:	b.eq	336f0 <__asan_backtrace_create_state@@Base+0x5a68>  // b.none
   2ed94:	ldp	x21, x22, [sp, #32]
   2ed98:	ldp	x23, x24, [sp, #48]
   2ed9c:	ldp	x25, x26, [sp, #64]
   2eda0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2eda4:	ldr	x20, [x2, #16]
   2eda8:	cbz	x20, 32684 <__asan_backtrace_create_state@@Base+0x49fc>
   2edac:	ldr	w0, [x20, #4]
   2edb0:	cmp	w0, #0x1
   2edb4:	b.gt	32684 <__asan_backtrace_create_state@@Base+0x49fc>
   2edb8:	ldr	w1, [x19, #308]
   2edbc:	cmp	w1, #0x400
   2edc0:	b.gt	32684 <__asan_backtrace_create_state@@Base+0x49fc>
   2edc4:	ldr	x3, [x19, #328]
   2edc8:	add	w0, w0, #0x1
   2edcc:	str	w0, [x20, #4]
   2edd0:	add	w1, w1, #0x1
   2edd4:	add	x0, sp, #0x90
   2edd8:	str	w1, [x19, #308]
   2eddc:	str	x0, [x19, #328]
   2ede0:	mov	w1, w22
   2ede4:	mov	x0, x19
   2ede8:	mov	x2, x20
   2edec:	stp	x20, x3, [sp, #144]
   2edf0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2edf4:	ldr	w1, [x20, #4]
   2edf8:	ldr	x0, [sp, #152]
   2edfc:	sub	w1, w1, #0x1
   2ee00:	ldp	x21, x22, [sp, #32]
   2ee04:	ldp	x23, x24, [sp, #48]
   2ee08:	ldp	x25, x26, [sp, #64]
   2ee0c:	str	x0, [x19, #328]
   2ee10:	ldr	w0, [x19, #308]
   2ee14:	str	w1, [x20, #4]
   2ee18:	sub	w0, w0, #0x1
   2ee1c:	str	w0, [x19, #308]
   2ee20:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2ee24:	ldr	x1, [x19, #256]
   2ee28:	add	x0, x1, #0x1
   2ee2c:	cmp	x1, #0xff
   2ee30:	b.ne	2ee58 <__asan_backtrace_create_state@@Base+0x11d0>  // b.any
   2ee34:	ldp	x3, x2, [x19, #272]
   2ee38:	strb	wzr, [x19, #255]
   2ee3c:	mov	x0, x19
   2ee40:	blr	x3
   2ee44:	ldr	x2, [x19, #320]
   2ee48:	mov	x0, #0x1                   	// #1
   2ee4c:	mov	x1, #0x0                   	// #0
   2ee50:	add	x2, x2, x0
   2ee54:	str	x2, [x19, #320]
   2ee58:	str	x0, [x19, #256]
   2ee5c:	mov	w0, #0x7e                  	// #126
   2ee60:	strb	w0, [x19, x1]
   2ee64:	strb	w0, [x19, #264]
   2ee68:	ldr	x20, [x24, #16]
   2ee6c:	cbz	x20, 3269c <__asan_backtrace_create_state@@Base+0x4a14>
   2ee70:	ldr	w0, [x20, #4]
   2ee74:	cmp	w0, #0x1
   2ee78:	b.gt	3269c <__asan_backtrace_create_state@@Base+0x4a14>
   2ee7c:	ldr	w1, [x19, #308]
   2ee80:	cmp	w1, #0x400
   2ee84:	b.gt	3269c <__asan_backtrace_create_state@@Base+0x4a14>
   2ee88:	ldr	x3, [x19, #328]
   2ee8c:	add	w0, w0, #0x1
   2ee90:	str	w0, [x20, #4]
   2ee94:	add	w1, w1, #0x1
   2ee98:	add	x0, sp, #0x90
   2ee9c:	str	w1, [x19, #308]
   2eea0:	str	x0, [x19, #328]
   2eea4:	mov	w1, w22
   2eea8:	mov	x0, x19
   2eeac:	mov	x2, x20
   2eeb0:	stp	x20, x3, [sp, #144]
   2eeb4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2eeb8:	ldr	w1, [x20, #4]
   2eebc:	ldr	x0, [sp, #152]
   2eec0:	sub	w1, w1, #0x1
   2eec4:	ldp	x21, x22, [sp, #32]
   2eec8:	ldp	x23, x24, [sp, #48]
   2eecc:	ldp	x25, x26, [sp, #64]
   2eed0:	str	x0, [x19, #328]
   2eed4:	ldr	w0, [x19, #308]
   2eed8:	str	w1, [x20, #4]
   2eedc:	sub	w0, w0, #0x1
   2eee0:	str	w0, [x19, #308]
   2eee4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2eee8:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2eeec:	add	x20, x20, #0xf40
   2eef0:	mov	x0, x20
   2eef4:	bl	64b0 <__asan_internal_strlen@plt>
   2eef8:	cbz	x0, 32320 <__asan_backtrace_create_state@@Base+0x4698>
   2eefc:	add	x23, x20, x0
   2ef00:	mov	x25, #0x1                   	// #1
   2ef04:	ldr	x1, [x19, #256]
   2ef08:	b	2ef64 <__asan_backtrace_create_state@@Base+0x12dc>
   2ef0c:	ldp	x3, x2, [x19, #272]
   2ef10:	strb	wzr, [x19, #255]
   2ef14:	mov	x0, x19
   2ef18:	add	x20, x20, #0x1
   2ef1c:	blr	x3
   2ef20:	strb	w21, [x19]
   2ef24:	ldr	x0, [x19, #320]
   2ef28:	str	x25, [x19, #256]
   2ef2c:	strb	w21, [x19, #264]
   2ef30:	cmp	x20, x23
   2ef34:	add	x0, x0, #0x1
   2ef38:	str	x0, [x19, #320]
   2ef3c:	b.eq	32320 <__asan_backtrace_create_state@@Base+0x4698>  // b.none
   2ef40:	ldrb	w21, [x20]
   2ef44:	mov	x0, #0x1                   	// #1
   2ef48:	add	x1, x0, #0x1
   2ef4c:	str	x1, [x19, #256]
   2ef50:	strb	w21, [x19, x0]
   2ef54:	add	x20, x20, #0x1
   2ef58:	strb	w21, [x19, #264]
   2ef5c:	cmp	x23, x20
   2ef60:	b.eq	32320 <__asan_backtrace_create_state@@Base+0x4698>  // b.none
   2ef64:	ldrb	w21, [x20]
   2ef68:	cmp	x1, #0xff
   2ef6c:	b.eq	2ef0c <__asan_backtrace_create_state@@Base+0x1284>  // b.none
   2ef70:	mov	x0, x1
   2ef74:	b	2ef48 <__asan_backtrace_create_state@@Base+0x12c0>
   2ef78:	ldr	x23, [x2, #8]
   2ef7c:	cbnz	x23, 32dc4 <__asan_backtrace_create_state@@Base+0x513c>
   2ef80:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2ef84:	add	x20, x20, #0x1a0
   2ef88:	mov	x0, x20
   2ef8c:	bl	64b0 <__asan_internal_strlen@plt>
   2ef90:	cbz	x0, 34a1c <__asan_backtrace_create_state@@Base+0x6d94>
   2ef94:	add	x22, x20, x0
   2ef98:	mov	x23, #0x1                   	// #1
   2ef9c:	ldr	x1, [x19, #256]
   2efa0:	b	2effc <__asan_backtrace_create_state@@Base+0x1374>
   2efa4:	ldp	x3, x2, [x19, #272]
   2efa8:	strb	wzr, [x19, #255]
   2efac:	mov	x0, x19
   2efb0:	add	x20, x20, #0x1
   2efb4:	blr	x3
   2efb8:	strb	w21, [x19]
   2efbc:	ldr	x0, [x19, #320]
   2efc0:	str	x23, [x19, #256]
   2efc4:	strb	w21, [x19, #264]
   2efc8:	cmp	x22, x20
   2efcc:	add	x0, x0, #0x1
   2efd0:	str	x0, [x19, #320]
   2efd4:	b.eq	34494 <__asan_backtrace_create_state@@Base+0x680c>  // b.none
   2efd8:	ldrb	w21, [x20]
   2efdc:	mov	x0, #0x1                   	// #1
   2efe0:	add	x1, x0, #0x1
   2efe4:	str	x1, [x19, #256]
   2efe8:	strb	w21, [x19, x0]
   2efec:	add	x20, x20, #0x1
   2eff0:	strb	w21, [x19, #264]
   2eff4:	cmp	x22, x20
   2eff8:	b.eq	338f8 <__asan_backtrace_create_state@@Base+0x5c70>  // b.none
   2effc:	ldrb	w21, [x20]
   2f000:	cmp	x1, #0xff
   2f004:	b.eq	2efa4 <__asan_backtrace_create_state@@Base+0x131c>  // b.none
   2f008:	mov	x0, x1
   2f00c:	b	2efe0 <__asan_backtrace_create_state@@Base+0x1358>
   2f010:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f014:	add	x20, x20, #0x90
   2f018:	mov	x0, x20
   2f01c:	bl	64b0 <__asan_internal_strlen@plt>
   2f020:	cbz	x0, 318bc <__asan_backtrace_create_state@@Base+0x3c34>
   2f024:	add	x23, x20, x0
   2f028:	mov	x25, #0x1                   	// #1
   2f02c:	ldr	x1, [x19, #256]
   2f030:	b	2f08c <__asan_backtrace_create_state@@Base+0x1404>
   2f034:	ldp	x3, x2, [x19, #272]
   2f038:	strb	wzr, [x19, #255]
   2f03c:	mov	x0, x19
   2f040:	add	x20, x20, #0x1
   2f044:	blr	x3
   2f048:	strb	w21, [x19]
   2f04c:	ldr	x0, [x19, #320]
   2f050:	str	x25, [x19, #256]
   2f054:	strb	w21, [x19, #264]
   2f058:	cmp	x20, x23
   2f05c:	add	x0, x0, #0x1
   2f060:	str	x0, [x19, #320]
   2f064:	b.eq	318bc <__asan_backtrace_create_state@@Base+0x3c34>  // b.none
   2f068:	ldrb	w21, [x20]
   2f06c:	mov	x0, #0x1                   	// #1
   2f070:	add	x1, x0, #0x1
   2f074:	str	x1, [x19, #256]
   2f078:	strb	w21, [x19, x0]
   2f07c:	add	x20, x20, #0x1
   2f080:	strb	w21, [x19, #264]
   2f084:	cmp	x23, x20
   2f088:	b.eq	318bc <__asan_backtrace_create_state@@Base+0x3c34>  // b.none
   2f08c:	ldrb	w21, [x20]
   2f090:	cmp	x1, #0xff
   2f094:	b.eq	2f034 <__asan_backtrace_create_state@@Base+0x13ac>  // b.none
   2f098:	mov	x0, x1
   2f09c:	b	2f070 <__asan_backtrace_create_state@@Base+0x13e8>
   2f0a0:	ldrsw	x22, [x2, #16]
   2f0a4:	ldr	x20, [x2, #8]
   2f0a8:	cbz	x22, 346e8 <__asan_backtrace_create_state@@Base+0x6a60>
   2f0ac:	add	x22, x20, x22
   2f0b0:	mov	x23, #0x1                   	// #1
   2f0b4:	ldr	x1, [x19, #256]
   2f0b8:	b	2f114 <__asan_backtrace_create_state@@Base+0x148c>
   2f0bc:	ldp	x3, x2, [x19, #272]
   2f0c0:	strb	wzr, [x19, #255]
   2f0c4:	mov	x0, x19
   2f0c8:	add	x20, x20, #0x1
   2f0cc:	blr	x3
   2f0d0:	strb	w21, [x19]
   2f0d4:	ldr	x0, [x19, #320]
   2f0d8:	str	x23, [x19, #256]
   2f0dc:	strb	w21, [x19, #264]
   2f0e0:	cmp	x22, x20
   2f0e4:	add	x0, x0, #0x1
   2f0e8:	str	x0, [x19, #320]
   2f0ec:	b.eq	338d8 <__asan_backtrace_create_state@@Base+0x5c50>  // b.none
   2f0f0:	ldrb	w21, [x20]
   2f0f4:	mov	x0, #0x1                   	// #1
   2f0f8:	add	x1, x0, #0x1
   2f0fc:	str	x1, [x19, #256]
   2f100:	strb	w21, [x19, x0]
   2f104:	add	x20, x20, #0x1
   2f108:	strb	w21, [x19, #264]
   2f10c:	cmp	x22, x20
   2f110:	b.eq	32b68 <__asan_backtrace_create_state@@Base+0x4ee0>  // b.none
   2f114:	ldrb	w21, [x20]
   2f118:	cmp	x1, #0xff
   2f11c:	b.eq	2f0bc <__asan_backtrace_create_state@@Base+0x1434>  // b.none
   2f120:	mov	x0, x1
   2f124:	b	2f0f8 <__asan_backtrace_create_state@@Base+0x1470>
   2f128:	ldp	x1, x23, [x19, #288]
   2f12c:	add	x21, sp, #0x90
   2f130:	stp	x23, x2, [sp, #144]
   2f134:	mov	w20, #0x1                   	// #1
   2f138:	mov	x5, x21
   2f13c:	str	wzr, [sp, #160]
   2f140:	mov	w6, w20
   2f144:	str	x1, [sp, #168]
   2f148:	str	x21, [x19, #296]
   2f14c:	mov	x0, x23
   2f150:	cbnz	x23, 2f19c <__asan_backtrace_create_state@@Base+0x1514>
   2f154:	b	2f1b0 <__asan_backtrace_create_state@@Base+0x1528>
   2f158:	ldr	w1, [x0, #16]
   2f15c:	cbnz	w1, 2f194 <__asan_backtrace_create_state@@Base+0x150c>
   2f160:	cmp	w20, #0x3
   2f164:	b.hi	33fb4 <__asan_backtrace_create_state@@Base+0x632c>  // b.pmore
   2f168:	ubfiz	x1, x20, #5, #32
   2f16c:	add	w20, w20, #0x1
   2f170:	add	x4, x21, x1
   2f174:	ldp	x2, x3, [x0]
   2f178:	stp	x2, x3, [x4]
   2f17c:	ldp	x2, x3, [x0, #16]
   2f180:	stp	x2, x3, [x4, #16]
   2f184:	str	x5, [x21, x1]
   2f188:	mov	x5, x4
   2f18c:	str	x4, [x19, #296]
   2f190:	str	w6, [x0, #16]
   2f194:	ldr	x0, [x0]
   2f198:	cbz	x0, 2f1b0 <__asan_backtrace_create_state@@Base+0x1528>
   2f19c:	ldr	x1, [x0, #8]
   2f1a0:	ldr	w1, [x1]
   2f1a4:	sub	w1, w1, #0x19
   2f1a8:	cmp	w1, #0x2
   2f1ac:	b.ls	2f158 <__asan_backtrace_create_state@@Base+0x14d0>  // b.plast
   2f1b0:	ldr	x25, [x24, #16]
   2f1b4:	cbz	x25, 32b20 <__asan_backtrace_create_state@@Base+0x4e98>
   2f1b8:	ldr	w0, [x25, #4]
   2f1bc:	cmp	w0, #0x1
   2f1c0:	b.gt	32b20 <__asan_backtrace_create_state@@Base+0x4e98>
   2f1c4:	ldr	w1, [x19, #308]
   2f1c8:	cmp	w1, #0x400
   2f1cc:	b.gt	32b20 <__asan_backtrace_create_state@@Base+0x4e98>
   2f1d0:	ldr	x3, [x19, #328]
   2f1d4:	add	w0, w0, #0x1
   2f1d8:	str	w0, [x25, #4]
   2f1dc:	add	w1, w1, #0x1
   2f1e0:	add	x0, sp, #0x80
   2f1e4:	str	w1, [x19, #308]
   2f1e8:	str	x0, [x19, #328]
   2f1ec:	mov	w1, w22
   2f1f0:	mov	x0, x19
   2f1f4:	mov	x2, x25
   2f1f8:	stp	x25, x3, [sp, #128]
   2f1fc:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2f200:	ldr	w1, [x25, #4]
   2f204:	ldr	x0, [sp, #136]
   2f208:	str	x0, [x19, #328]
   2f20c:	ldr	w0, [x19, #308]
   2f210:	sub	w1, w1, #0x1
   2f214:	str	w1, [x25, #4]
   2f218:	sub	w0, w0, #0x1
   2f21c:	str	w0, [x19, #308]
   2f220:	ldr	w0, [sp, #160]
   2f224:	str	x23, [x19, #296]
   2f228:	cbnz	w0, 33964 <__asan_backtrace_create_state@@Base+0x5cdc>
   2f22c:	ubfiz	x0, x20, #5, #32
   2f230:	cmp	w20, #0x1
   2f234:	add	x21, x21, x0
   2f238:	b.eq	2f25c <__asan_backtrace_create_state@@Base+0x15d4>  // b.none
   2f23c:	ldur	x2, [x21, #-24]
   2f240:	sub	w20, w20, #0x1
   2f244:	mov	w1, w22
   2f248:	mov	x0, x19
   2f24c:	sub	x21, x21, #0x20
   2f250:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   2f254:	cmp	w20, #0x1
   2f258:	b.ne	2f23c <__asan_backtrace_create_state@@Base+0x15b4>  // b.any
   2f25c:	ldr	x3, [x19, #296]
   2f260:	add	x2, x24, #0x8
   2f264:	mov	w1, w22
   2f268:	mov	x0, x19
   2f26c:	bl	367f8 <__asan_backtrace_create_state@@Base+0x8b70>
   2f270:	ldp	x21, x22, [sp, #32]
   2f274:	ldp	x23, x24, [sp, #48]
   2f278:	ldp	x25, x26, [sp, #64]
   2f27c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2f280:	ldrsh	w0, [x2, #18]
   2f284:	cbnz	w0, 33654 <__asan_backtrace_create_state@@Base+0x59cc>
   2f288:	ldr	x20, [x24, #8]
   2f28c:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   2f290:	ldr	x0, [x0, #3912]
   2f294:	ldr	x1, [x20, #8]
   2f298:	add	x0, x0, #0x100
   2f29c:	cmp	x1, x0
   2f2a0:	b.ne	33028 <__asan_backtrace_create_state@@Base+0x53a0>  // b.any
   2f2a4:	ldrsh	w0, [x24, #16]
   2f2a8:	cbz	w0, 32cac <__asan_backtrace_create_state@@Base+0x5024>
   2f2ac:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f2b0:	add	x20, x20, #0xe8
   2f2b4:	mov	x0, x20
   2f2b8:	bl	64b0 <__asan_internal_strlen@plt>
   2f2bc:	cbz	x0, 34a4c <__asan_backtrace_create_state@@Base+0x6dc4>
   2f2c0:	add	x22, x20, x0
   2f2c4:	mov	x23, #0x1                   	// #1
   2f2c8:	ldr	x1, [x19, #256]
   2f2cc:	b	2f328 <__asan_backtrace_create_state@@Base+0x16a0>
   2f2d0:	ldp	x3, x2, [x19, #272]
   2f2d4:	strb	wzr, [x19, #255]
   2f2d8:	mov	x0, x19
   2f2dc:	add	x20, x20, #0x1
   2f2e0:	blr	x3
   2f2e4:	strb	w21, [x19]
   2f2e8:	ldr	x0, [x19, #320]
   2f2ec:	str	x23, [x19, #256]
   2f2f0:	strb	w21, [x19, #264]
   2f2f4:	cmp	x20, x22
   2f2f8:	add	x0, x0, #0x1
   2f2fc:	str	x0, [x19, #320]
   2f300:	b.eq	34524 <__asan_backtrace_create_state@@Base+0x689c>  // b.none
   2f304:	ldrb	w21, [x20]
   2f308:	mov	x0, #0x1                   	// #1
   2f30c:	add	x1, x0, #0x1
   2f310:	str	x1, [x19, #256]
   2f314:	strb	w21, [x19, x0]
   2f318:	add	x20, x20, #0x1
   2f31c:	strb	w21, [x19, #264]
   2f320:	cmp	x22, x20
   2f324:	b.eq	33908 <__asan_backtrace_create_state@@Base+0x5c80>  // b.none
   2f328:	ldrb	w21, [x20]
   2f32c:	cmp	x1, #0xff
   2f330:	b.eq	2f2d0 <__asan_backtrace_create_state@@Base+0x1648>  // b.none
   2f334:	mov	x0, x1
   2f338:	b	2f30c <__asan_backtrace_create_state@@Base+0x1684>
   2f33c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2f340:	add	x20, x20, #0xfc8
   2f344:	mov	x0, x20
   2f348:	bl	64b0 <__asan_internal_strlen@plt>
   2f34c:	cbz	x0, 323a0 <__asan_backtrace_create_state@@Base+0x4718>
   2f350:	add	x23, x20, x0
   2f354:	mov	x25, #0x1                   	// #1
   2f358:	ldr	x1, [x19, #256]
   2f35c:	b	2f3b8 <__asan_backtrace_create_state@@Base+0x1730>
   2f360:	ldp	x3, x2, [x19, #272]
   2f364:	strb	wzr, [x19, #255]
   2f368:	mov	x0, x19
   2f36c:	add	x20, x20, #0x1
   2f370:	blr	x3
   2f374:	strb	w21, [x19]
   2f378:	ldr	x0, [x19, #320]
   2f37c:	str	x25, [x19, #256]
   2f380:	strb	w21, [x19, #264]
   2f384:	cmp	x23, x20
   2f388:	add	x0, x0, #0x1
   2f38c:	str	x0, [x19, #320]
   2f390:	b.eq	323a0 <__asan_backtrace_create_state@@Base+0x4718>  // b.none
   2f394:	ldrb	w21, [x20]
   2f398:	mov	x0, #0x1                   	// #1
   2f39c:	add	x1, x0, #0x1
   2f3a0:	str	x1, [x19, #256]
   2f3a4:	strb	w21, [x19, x0]
   2f3a8:	add	x20, x20, #0x1
   2f3ac:	strb	w21, [x19, #264]
   2f3b0:	cmp	x23, x20
   2f3b4:	b.eq	323a0 <__asan_backtrace_create_state@@Base+0x4718>  // b.none
   2f3b8:	ldrb	w21, [x20]
   2f3bc:	cmp	x1, #0xff
   2f3c0:	b.eq	2f360 <__asan_backtrace_create_state@@Base+0x16d8>  // b.none
   2f3c4:	mov	x0, x1
   2f3c8:	b	2f39c <__asan_backtrace_create_state@@Base+0x1714>
   2f3cc:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2f3d0:	add	x20, x20, #0xfe0
   2f3d4:	mov	x0, x20
   2f3d8:	bl	64b0 <__asan_internal_strlen@plt>
   2f3dc:	cbz	x0, 324d0 <__asan_backtrace_create_state@@Base+0x4848>
   2f3e0:	add	x23, x20, x0
   2f3e4:	mov	x25, #0x1                   	// #1
   2f3e8:	ldr	x1, [x19, #256]
   2f3ec:	b	2f448 <__asan_backtrace_create_state@@Base+0x17c0>
   2f3f0:	ldp	x3, x2, [x19, #272]
   2f3f4:	strb	wzr, [x19, #255]
   2f3f8:	mov	x0, x19
   2f3fc:	add	x20, x20, #0x1
   2f400:	blr	x3
   2f404:	strb	w21, [x19]
   2f408:	ldr	x0, [x19, #320]
   2f40c:	str	x25, [x19, #256]
   2f410:	strb	w21, [x19, #264]
   2f414:	cmp	x23, x20
   2f418:	add	x0, x0, #0x1
   2f41c:	str	x0, [x19, #320]
   2f420:	b.eq	324d0 <__asan_backtrace_create_state@@Base+0x4848>  // b.none
   2f424:	ldrb	w21, [x20]
   2f428:	mov	x0, #0x1                   	// #1
   2f42c:	add	x1, x0, #0x1
   2f430:	str	x1, [x19, #256]
   2f434:	strb	w21, [x19, x0]
   2f438:	add	x20, x20, #0x1
   2f43c:	strb	w21, [x19, #264]
   2f440:	cmp	x23, x20
   2f444:	b.eq	324d0 <__asan_backtrace_create_state@@Base+0x4848>  // b.none
   2f448:	ldrb	w21, [x20]
   2f44c:	cmp	x1, #0xff
   2f450:	b.eq	2f3f0 <__asan_backtrace_create_state@@Base+0x1768>  // b.none
   2f454:	mov	x0, x1
   2f458:	b	2f42c <__asan_backtrace_create_state@@Base+0x17a4>
   2f45c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2f460:	add	x20, x20, #0xff8
   2f464:	mov	x0, x20
   2f468:	bl	64b0 <__asan_internal_strlen@plt>
   2f46c:	cbz	x0, 31fa4 <__asan_backtrace_create_state@@Base+0x431c>
   2f470:	add	x23, x20, x0
   2f474:	mov	x25, #0x1                   	// #1
   2f478:	ldr	x1, [x19, #256]
   2f47c:	b	2f4d8 <__asan_backtrace_create_state@@Base+0x1850>
   2f480:	ldp	x3, x2, [x19, #272]
   2f484:	strb	wzr, [x19, #255]
   2f488:	mov	x0, x19
   2f48c:	add	x20, x20, #0x1
   2f490:	blr	x3
   2f494:	strb	w21, [x19]
   2f498:	ldr	x0, [x19, #320]
   2f49c:	str	x25, [x19, #256]
   2f4a0:	strb	w21, [x19, #264]
   2f4a4:	cmp	x23, x20
   2f4a8:	add	x0, x0, #0x1
   2f4ac:	str	x0, [x19, #320]
   2f4b0:	b.eq	31fa4 <__asan_backtrace_create_state@@Base+0x431c>  // b.none
   2f4b4:	ldrb	w21, [x20]
   2f4b8:	mov	x0, #0x1                   	// #1
   2f4bc:	add	x1, x0, #0x1
   2f4c0:	str	x1, [x19, #256]
   2f4c4:	strb	w21, [x19, x0]
   2f4c8:	add	x20, x20, #0x1
   2f4cc:	strb	w21, [x19, #264]
   2f4d0:	cmp	x23, x20
   2f4d4:	b.eq	31fa4 <__asan_backtrace_create_state@@Base+0x431c>  // b.none
   2f4d8:	ldrb	w21, [x20]
   2f4dc:	cmp	x1, #0xff
   2f4e0:	b.eq	2f480 <__asan_backtrace_create_state@@Base+0x17f8>  // b.none
   2f4e4:	mov	x0, x1
   2f4e8:	b	2f4bc <__asan_backtrace_create_state@@Base+0x1834>
   2f4ec:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f4f0:	add	x20, x20, #0x18
   2f4f4:	mov	x0, x20
   2f4f8:	bl	64b0 <__asan_internal_strlen@plt>
   2f4fc:	cbz	x0, 31d60 <__asan_backtrace_create_state@@Base+0x40d8>
   2f500:	add	x23, x20, x0
   2f504:	mov	x25, #0x1                   	// #1
   2f508:	ldr	x1, [x19, #256]
   2f50c:	b	2f568 <__asan_backtrace_create_state@@Base+0x18e0>
   2f510:	ldp	x3, x2, [x19, #272]
   2f514:	strb	wzr, [x19, #255]
   2f518:	mov	x0, x19
   2f51c:	add	x20, x20, #0x1
   2f520:	blr	x3
   2f524:	strb	w21, [x19]
   2f528:	ldr	x0, [x19, #320]
   2f52c:	str	x25, [x19, #256]
   2f530:	strb	w21, [x19, #264]
   2f534:	cmp	x20, x23
   2f538:	add	x0, x0, #0x1
   2f53c:	str	x0, [x19, #320]
   2f540:	b.eq	31d60 <__asan_backtrace_create_state@@Base+0x40d8>  // b.none
   2f544:	ldrb	w21, [x20]
   2f548:	mov	x0, #0x1                   	// #1
   2f54c:	add	x1, x0, #0x1
   2f550:	str	x1, [x19, #256]
   2f554:	strb	w21, [x19, x0]
   2f558:	add	x20, x20, #0x1
   2f55c:	strb	w21, [x19, #264]
   2f560:	cmp	x23, x20
   2f564:	b.eq	31d60 <__asan_backtrace_create_state@@Base+0x40d8>  // b.none
   2f568:	ldrb	w21, [x20]
   2f56c:	cmp	x1, #0xff
   2f570:	b.eq	2f510 <__asan_backtrace_create_state@@Base+0x1888>  // b.none
   2f574:	mov	x0, x1
   2f578:	b	2f54c <__asan_backtrace_create_state@@Base+0x18c4>
   2f57c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f580:	add	x20, x20, #0x28
   2f584:	mov	x0, x20
   2f588:	bl	64b0 <__asan_internal_strlen@plt>
   2f58c:	cbz	x0, 31bbc <__asan_backtrace_create_state@@Base+0x3f34>
   2f590:	add	x23, x20, x0
   2f594:	mov	x25, #0x1                   	// #1
   2f598:	ldr	x1, [x19, #256]
   2f59c:	b	2f5f8 <__asan_backtrace_create_state@@Base+0x1970>
   2f5a0:	ldp	x3, x2, [x19, #272]
   2f5a4:	strb	wzr, [x19, #255]
   2f5a8:	mov	x0, x19
   2f5ac:	add	x20, x20, #0x1
   2f5b0:	blr	x3
   2f5b4:	strb	w21, [x19]
   2f5b8:	ldr	x0, [x19, #320]
   2f5bc:	str	x25, [x19, #256]
   2f5c0:	strb	w21, [x19, #264]
   2f5c4:	cmp	x23, x20
   2f5c8:	add	x0, x0, #0x1
   2f5cc:	str	x0, [x19, #320]
   2f5d0:	b.eq	31bbc <__asan_backtrace_create_state@@Base+0x3f34>  // b.none
   2f5d4:	ldrb	w21, [x20]
   2f5d8:	mov	x0, #0x1                   	// #1
   2f5dc:	add	x1, x0, #0x1
   2f5e0:	str	x1, [x19, #256]
   2f5e4:	strb	w21, [x19, x0]
   2f5e8:	add	x20, x20, #0x1
   2f5ec:	strb	w21, [x19, #264]
   2f5f0:	cmp	x23, x20
   2f5f4:	b.eq	31bbc <__asan_backtrace_create_state@@Base+0x3f34>  // b.none
   2f5f8:	ldrb	w21, [x20]
   2f5fc:	cmp	x1, #0xff
   2f600:	b.eq	2f5a0 <__asan_backtrace_create_state@@Base+0x1918>  // b.none
   2f604:	mov	x0, x1
   2f608:	b	2f5dc <__asan_backtrace_create_state@@Base+0x1954>
   2f60c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f610:	add	x20, x20, #0x40
   2f614:	mov	x0, x20
   2f618:	bl	64b0 <__asan_internal_strlen@plt>
   2f61c:	cbz	x0, 31ce0 <__asan_backtrace_create_state@@Base+0x4058>
   2f620:	add	x23, x20, x0
   2f624:	mov	x25, #0x1                   	// #1
   2f628:	ldr	x1, [x19, #256]
   2f62c:	b	2f688 <__asan_backtrace_create_state@@Base+0x1a00>
   2f630:	ldp	x3, x2, [x19, #272]
   2f634:	strb	wzr, [x19, #255]
   2f638:	mov	x0, x19
   2f63c:	add	x20, x20, #0x1
   2f640:	blr	x3
   2f644:	strb	w21, [x19]
   2f648:	ldr	x0, [x19, #320]
   2f64c:	str	x25, [x19, #256]
   2f650:	strb	w21, [x19, #264]
   2f654:	cmp	x23, x20
   2f658:	add	x0, x0, #0x1
   2f65c:	str	x0, [x19, #320]
   2f660:	b.eq	31ce0 <__asan_backtrace_create_state@@Base+0x4058>  // b.none
   2f664:	ldrb	w21, [x20]
   2f668:	mov	x0, #0x1                   	// #1
   2f66c:	add	x1, x0, #0x1
   2f670:	str	x1, [x19, #256]
   2f674:	strb	w21, [x19, x0]
   2f678:	add	x20, x20, #0x1
   2f67c:	strb	w21, [x19, #264]
   2f680:	cmp	x23, x20
   2f684:	b.eq	31ce0 <__asan_backtrace_create_state@@Base+0x4058>  // b.none
   2f688:	ldrb	w21, [x20]
   2f68c:	cmp	x1, #0xff
   2f690:	b.eq	2f630 <__asan_backtrace_create_state@@Base+0x19a8>  // b.none
   2f694:	mov	x0, x1
   2f698:	b	2f66c <__asan_backtrace_create_state@@Base+0x19e4>
   2f69c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f6a0:	add	x20, x20, #0x58
   2f6a4:	mov	x0, x20
   2f6a8:	bl	64b0 <__asan_internal_strlen@plt>
   2f6ac:	cbz	x0, 319bc <__asan_backtrace_create_state@@Base+0x3d34>
   2f6b0:	add	x23, x20, x0
   2f6b4:	mov	x25, #0x1                   	// #1
   2f6b8:	ldr	x1, [x19, #256]
   2f6bc:	b	2f718 <__asan_backtrace_create_state@@Base+0x1a90>
   2f6c0:	ldp	x3, x2, [x19, #272]
   2f6c4:	strb	wzr, [x19, #255]
   2f6c8:	mov	x0, x19
   2f6cc:	add	x20, x20, #0x1
   2f6d0:	blr	x3
   2f6d4:	strb	w21, [x19]
   2f6d8:	ldr	x0, [x19, #320]
   2f6dc:	str	x25, [x19, #256]
   2f6e0:	strb	w21, [x19, #264]
   2f6e4:	cmp	x23, x20
   2f6e8:	add	x0, x0, #0x1
   2f6ec:	str	x0, [x19, #320]
   2f6f0:	b.eq	319bc <__asan_backtrace_create_state@@Base+0x3d34>  // b.none
   2f6f4:	ldrb	w21, [x20]
   2f6f8:	mov	x0, #0x1                   	// #1
   2f6fc:	add	x1, x0, #0x1
   2f700:	str	x1, [x19, #256]
   2f704:	strb	w21, [x19, x0]
   2f708:	add	x20, x20, #0x1
   2f70c:	strb	w21, [x19, #264]
   2f710:	cmp	x23, x20
   2f714:	b.eq	319bc <__asan_backtrace_create_state@@Base+0x3d34>  // b.none
   2f718:	ldrb	w21, [x20]
   2f71c:	cmp	x1, #0xff
   2f720:	b.eq	2f6c0 <__asan_backtrace_create_state@@Base+0x1a38>  // b.none
   2f724:	mov	x0, x1
   2f728:	b	2f6fc <__asan_backtrace_create_state@@Base+0x1a74>
   2f72c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f730:	add	x20, x20, #0x78
   2f734:	mov	x0, x20
   2f738:	bl	64b0 <__asan_internal_strlen@plt>
   2f73c:	cbz	x0, 31a3c <__asan_backtrace_create_state@@Base+0x3db4>
   2f740:	add	x23, x20, x0
   2f744:	mov	x25, #0x1                   	// #1
   2f748:	ldr	x1, [x19, #256]
   2f74c:	b	2f7a8 <__asan_backtrace_create_state@@Base+0x1b20>
   2f750:	ldp	x3, x2, [x19, #272]
   2f754:	strb	wzr, [x19, #255]
   2f758:	mov	x0, x19
   2f75c:	add	x20, x20, #0x1
   2f760:	blr	x3
   2f764:	strb	w21, [x19]
   2f768:	ldr	x0, [x19, #320]
   2f76c:	str	x25, [x19, #256]
   2f770:	strb	w21, [x19, #264]
   2f774:	cmp	x23, x20
   2f778:	add	x0, x0, #0x1
   2f77c:	str	x0, [x19, #320]
   2f780:	b.eq	31a3c <__asan_backtrace_create_state@@Base+0x3db4>  // b.none
   2f784:	ldrb	w21, [x20]
   2f788:	mov	x0, #0x1                   	// #1
   2f78c:	add	x1, x0, #0x1
   2f790:	str	x1, [x19, #256]
   2f794:	strb	w21, [x19, x0]
   2f798:	add	x20, x20, #0x1
   2f79c:	strb	w21, [x19, #264]
   2f7a0:	cmp	x23, x20
   2f7a4:	b.eq	31a3c <__asan_backtrace_create_state@@Base+0x3db4>  // b.none
   2f7a8:	ldrb	w21, [x20]
   2f7ac:	cmp	x1, #0xff
   2f7b0:	b.eq	2f750 <__asan_backtrace_create_state@@Base+0x1ac8>  // b.none
   2f7b4:	mov	x0, x1
   2f7b8:	b	2f78c <__asan_backtrace_create_state@@Base+0x1b04>
   2f7bc:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f7c0:	add	x20, x20, #0xc0
   2f7c4:	mov	x0, x20
   2f7c8:	bl	64b0 <__asan_internal_strlen@plt>
   2f7cc:	cbz	x0, 3193c <__asan_backtrace_create_state@@Base+0x3cb4>
   2f7d0:	add	x23, x20, x0
   2f7d4:	mov	x25, #0x1                   	// #1
   2f7d8:	ldr	x1, [x19, #256]
   2f7dc:	b	2f838 <__asan_backtrace_create_state@@Base+0x1bb0>
   2f7e0:	ldp	x3, x2, [x19, #272]
   2f7e4:	strb	wzr, [x19, #255]
   2f7e8:	mov	x0, x19
   2f7ec:	add	x20, x20, #0x1
   2f7f0:	blr	x3
   2f7f4:	strb	w21, [x19]
   2f7f8:	ldr	x0, [x19, #320]
   2f7fc:	str	x25, [x19, #256]
   2f800:	strb	w21, [x19, #264]
   2f804:	cmp	x20, x23
   2f808:	add	x0, x0, #0x1
   2f80c:	str	x0, [x19, #320]
   2f810:	b.eq	3193c <__asan_backtrace_create_state@@Base+0x3cb4>  // b.none
   2f814:	ldrb	w21, [x20]
   2f818:	mov	x0, #0x1                   	// #1
   2f81c:	add	x1, x0, #0x1
   2f820:	str	x1, [x19, #256]
   2f824:	strb	w21, [x19, x0]
   2f828:	add	x20, x20, #0x1
   2f82c:	strb	w21, [x19, #264]
   2f830:	cmp	x23, x20
   2f834:	b.eq	3193c <__asan_backtrace_create_state@@Base+0x3cb4>  // b.none
   2f838:	ldrb	w21, [x20]
   2f83c:	cmp	x1, #0xff
   2f840:	b.eq	2f7e0 <__asan_backtrace_create_state@@Base+0x1b58>  // b.none
   2f844:	mov	x0, x1
   2f848:	b	2f81c <__asan_backtrace_create_state@@Base+0x1b94>
   2f84c:	ldr	x1, [x2, #8]
   2f850:	mov	x0, x19
   2f854:	mov	w23, #0x0                   	// #0
   2f858:	bl	2e080 <__asan_backtrace_create_state@@Base+0x3f8>
   2f85c:	cbz	x0, 3486c <__asan_backtrace_create_state@@Base+0x6be4>
   2f860:	stp	x27, x28, [sp, #80]
   2f864:	nop
   2f868:	ldr	w1, [x0]
   2f86c:	cmp	w1, #0x2f
   2f870:	b.ne	32b4c <__asan_backtrace_create_state@@Base+0x4ec4>  // b.any
   2f874:	ldr	x1, [x0, #8]
   2f878:	cbz	x1, 32b4c <__asan_backtrace_create_state@@Base+0x4ec4>
   2f87c:	ldr	x0, [x0, #16]
   2f880:	add	w23, w23, #0x1
   2f884:	cbnz	x0, 2f868 <__asan_backtrace_create_state@@Base+0x1be0>
   2f888:	ldr	x28, [x24, #8]
   2f88c:	sub	w0, w23, #0x1
   2f890:	str	w0, [sp, #100]
   2f894:	cmp	w0, #0x0
   2f898:	b.le	311c0 <__asan_backtrace_create_state@@Base+0x3538>
   2f89c:	adrp	x24, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2f8a0:	add	x24, x24, #0xf8
   2f8a4:	add	x0, sp, #0x90
   2f8a8:	mov	x25, #0x1                   	// #1
   2f8ac:	str	x0, [sp, #104]
   2f8b0:	str	w21, [x19, #316]
   2f8b4:	cbz	x28, 3124c <__asan_backtrace_create_state@@Base+0x35c4>
   2f8b8:	ldr	w0, [x28, #4]
   2f8bc:	cmp	w0, #0x1
   2f8c0:	b.gt	3124c <__asan_backtrace_create_state@@Base+0x35c4>
   2f8c4:	ldr	w1, [x19, #308]
   2f8c8:	cmp	w1, #0x400
   2f8cc:	b.gt	3124c <__asan_backtrace_create_state@@Base+0x35c4>
   2f8d0:	add	w0, w0, #0x1
   2f8d4:	add	w1, w1, #0x1
   2f8d8:	ldr	x3, [x19, #328]
   2f8dc:	str	w0, [x28, #4]
   2f8e0:	ldr	x0, [sp, #104]
   2f8e4:	str	w1, [x19, #308]
   2f8e8:	str	x0, [x19, #328]
   2f8ec:	mov	w1, w22
   2f8f0:	mov	x0, x19
   2f8f4:	mov	x2, x28
   2f8f8:	stp	x28, x3, [sp, #144]
   2f8fc:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2f900:	ldr	w1, [x28, #4]
   2f904:	ldr	x0, [sp, #152]
   2f908:	str	x0, [x19, #328]
   2f90c:	ldr	w0, [x19, #308]
   2f910:	sub	w1, w1, #0x1
   2f914:	str	w1, [x28, #4]
   2f918:	sub	w0, w0, #0x1
   2f91c:	str	w0, [x19, #308]
   2f920:	mov	x0, x24
   2f924:	bl	64b0 <__asan_internal_strlen@plt>
   2f928:	cbz	x0, 311a8 <__asan_backtrace_create_state@@Base+0x3520>
   2f92c:	add	x27, x24, x0
   2f930:	mov	x20, x24
   2f934:	ldr	x1, [x19, #256]
   2f938:	b	2f994 <__asan_backtrace_create_state@@Base+0x1d0c>
   2f93c:	ldp	x6, x2, [x19, #272]
   2f940:	strb	wzr, [x19, #255]
   2f944:	mov	x0, x19
   2f948:	add	x20, x20, #0x1
   2f94c:	blr	x6
   2f950:	strb	w26, [x19]
   2f954:	ldr	x0, [x19, #320]
   2f958:	str	x25, [x19, #256]
   2f95c:	strb	w26, [x19, #264]
   2f960:	cmp	x20, x27
   2f964:	add	x0, x0, #0x1
   2f968:	str	x0, [x19, #320]
   2f96c:	b.eq	311a8 <__asan_backtrace_create_state@@Base+0x3520>  // b.none
   2f970:	ldrb	w26, [x20]
   2f974:	mov	x0, #0x1                   	// #1
   2f978:	add	x1, x0, #0x1
   2f97c:	str	x1, [x19, #256]
   2f980:	strb	w26, [x19, x0]
   2f984:	add	x20, x20, #0x1
   2f988:	strb	w26, [x19, #264]
   2f98c:	cmp	x27, x20
   2f990:	b.eq	311a8 <__asan_backtrace_create_state@@Base+0x3520>  // b.none
   2f994:	ldrb	w26, [x20]
   2f998:	cmp	x1, #0xff
   2f99c:	b.eq	2f93c <__asan_backtrace_create_state@@Base+0x1cb4>  // b.none
   2f9a0:	mov	x0, x1
   2f9a4:	b	2f978 <__asan_backtrace_create_state@@Base+0x1cf0>
   2f9a8:	ldr	x20, [x2, #8]
   2f9ac:	cbz	x20, 3275c <__asan_backtrace_create_state@@Base+0x4ad4>
   2f9b0:	ldr	w0, [x20, #4]
   2f9b4:	cmp	w0, #0x1
   2f9b8:	b.gt	3275c <__asan_backtrace_create_state@@Base+0x4ad4>
   2f9bc:	ldr	w1, [x19, #308]
   2f9c0:	cmp	w1, #0x400
   2f9c4:	b.gt	3275c <__asan_backtrace_create_state@@Base+0x4ad4>
   2f9c8:	ldr	x3, [x19, #328]
   2f9cc:	add	w0, w0, #0x1
   2f9d0:	str	w0, [x20, #4]
   2f9d4:	add	w1, w1, #0x1
   2f9d8:	add	x0, sp, #0x90
   2f9dc:	str	w1, [x19, #308]
   2f9e0:	str	x0, [x19, #328]
   2f9e4:	mov	w1, w22
   2f9e8:	mov	x0, x19
   2f9ec:	mov	x2, x20
   2f9f0:	stp	x20, x3, [sp, #144]
   2f9f4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2f9f8:	ldr	w1, [x20, #4]
   2f9fc:	ldr	x0, [sp, #152]
   2fa00:	str	x0, [x19, #328]
   2fa04:	ldr	w0, [x19, #308]
   2fa08:	sub	w1, w1, #0x1
   2fa0c:	str	w1, [x20, #4]
   2fa10:	sub	w0, w0, #0x1
   2fa14:	str	w0, [x19, #308]
   2fa18:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   2fa1c:	add	x20, x20, #0xee8
   2fa20:	mov	x0, x20
   2fa24:	bl	64b0 <__asan_internal_strlen@plt>
   2fa28:	cbz	x0, 317f8 <__asan_backtrace_create_state@@Base+0x3b70>
   2fa2c:	add	x23, x20, x0
   2fa30:	mov	x25, #0x1                   	// #1
   2fa34:	ldr	x1, [x19, #256]
   2fa38:	b	2fa94 <__asan_backtrace_create_state@@Base+0x1e0c>
   2fa3c:	ldp	x3, x2, [x19, #272]
   2fa40:	strb	wzr, [x19, #255]
   2fa44:	mov	x0, x19
   2fa48:	add	x20, x20, #0x1
   2fa4c:	blr	x3
   2fa50:	strb	w21, [x19]
   2fa54:	ldr	x0, [x19, #320]
   2fa58:	str	x25, [x19, #256]
   2fa5c:	strb	w21, [x19, #264]
   2fa60:	cmp	x23, x20
   2fa64:	add	x0, x0, #0x1
   2fa68:	str	x0, [x19, #320]
   2fa6c:	b.eq	317f8 <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   2fa70:	ldrb	w21, [x20]
   2fa74:	mov	x0, #0x1                   	// #1
   2fa78:	add	x1, x0, #0x1
   2fa7c:	str	x1, [x19, #256]
   2fa80:	strb	w21, [x19, x0]
   2fa84:	add	x20, x20, #0x1
   2fa88:	strb	w21, [x19, #264]
   2fa8c:	cmp	x23, x20
   2fa90:	b.eq	317f8 <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   2fa94:	ldrb	w21, [x20]
   2fa98:	cmp	x1, #0xff
   2fa9c:	b.eq	2fa3c <__asan_backtrace_create_state@@Base+0x1db4>  // b.none
   2faa0:	mov	x0, x1
   2faa4:	b	2fa78 <__asan_backtrace_create_state@@Base+0x1df0>
   2faa8:	ldr	x20, [x2, #8]
   2faac:	cbz	x20, 32768 <__asan_backtrace_create_state@@Base+0x4ae0>
   2fab0:	ldr	w0, [x20, #4]
   2fab4:	cmp	w0, #0x1
   2fab8:	b.gt	32768 <__asan_backtrace_create_state@@Base+0x4ae0>
   2fabc:	ldr	w1, [x19, #308]
   2fac0:	cmp	w1, #0x400
   2fac4:	b.gt	32768 <__asan_backtrace_create_state@@Base+0x4ae0>
   2fac8:	ldr	x3, [x19, #328]
   2facc:	add	w0, w0, #0x1
   2fad0:	str	w0, [x20, #4]
   2fad4:	add	w1, w1, #0x1
   2fad8:	add	x0, sp, #0x90
   2fadc:	str	w1, [x19, #308]
   2fae0:	str	x0, [x19, #328]
   2fae4:	mov	w1, w22
   2fae8:	mov	x0, x19
   2faec:	mov	x2, x20
   2faf0:	stp	x20, x3, [sp, #144]
   2faf4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2faf8:	ldr	w1, [x20, #4]
   2fafc:	ldr	x0, [sp, #152]
   2fb00:	str	x0, [x19, #328]
   2fb04:	ldr	w0, [x19, #308]
   2fb08:	sub	w1, w1, #0x1
   2fb0c:	str	w1, [x20, #4]
   2fb10:	sub	w0, w0, #0x1
   2fb14:	str	w0, [x19, #308]
   2fb18:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2fb1c:	add	x20, x20, #0x218
   2fb20:	mov	x0, x20
   2fb24:	bl	64b0 <__asan_internal_strlen@plt>
   2fb28:	cbz	x0, 31de0 <__asan_backtrace_create_state@@Base+0x4158>
   2fb2c:	add	x23, x20, x0
   2fb30:	mov	x25, #0x1                   	// #1
   2fb34:	ldr	x1, [x19, #256]
   2fb38:	b	2fb94 <__asan_backtrace_create_state@@Base+0x1f0c>
   2fb3c:	ldp	x3, x2, [x19, #272]
   2fb40:	strb	wzr, [x19, #255]
   2fb44:	mov	x0, x19
   2fb48:	add	x20, x20, #0x1
   2fb4c:	blr	x3
   2fb50:	strb	w21, [x19]
   2fb54:	ldr	x0, [x19, #320]
   2fb58:	str	x25, [x19, #256]
   2fb5c:	strb	w21, [x19, #264]
   2fb60:	cmp	x20, x23
   2fb64:	add	x0, x0, #0x1
   2fb68:	str	x0, [x19, #320]
   2fb6c:	b.eq	31de0 <__asan_backtrace_create_state@@Base+0x4158>  // b.none
   2fb70:	ldrb	w21, [x20]
   2fb74:	mov	x0, #0x1                   	// #1
   2fb78:	add	x1, x0, #0x1
   2fb7c:	str	x1, [x19, #256]
   2fb80:	strb	w21, [x19, x0]
   2fb84:	add	x20, x20, #0x1
   2fb88:	strb	w21, [x19, #264]
   2fb8c:	cmp	x23, x20
   2fb90:	b.eq	31de0 <__asan_backtrace_create_state@@Base+0x4158>  // b.none
   2fb94:	ldrb	w21, [x20]
   2fb98:	cmp	x1, #0xff
   2fb9c:	b.eq	2fb3c <__asan_backtrace_create_state@@Base+0x1eb4>  // b.none
   2fba0:	mov	x0, x1
   2fba4:	b	2fb78 <__asan_backtrace_create_state@@Base+0x1ef0>
   2fba8:	ldr	x20, [x2, #8]
   2fbac:	cbz	x20, 326b4 <__asan_backtrace_create_state@@Base+0x4a2c>
   2fbb0:	ldr	w0, [x20, #4]
   2fbb4:	cmp	w0, #0x1
   2fbb8:	b.gt	326b4 <__asan_backtrace_create_state@@Base+0x4a2c>
   2fbbc:	ldr	w1, [x19, #308]
   2fbc0:	cmp	w1, #0x400
   2fbc4:	b.gt	326b4 <__asan_backtrace_create_state@@Base+0x4a2c>
   2fbc8:	ldr	x3, [x19, #328]
   2fbcc:	add	w0, w0, #0x1
   2fbd0:	str	w0, [x20, #4]
   2fbd4:	add	w1, w1, #0x1
   2fbd8:	add	x0, sp, #0x90
   2fbdc:	str	w1, [x19, #308]
   2fbe0:	str	x0, [x19, #328]
   2fbe4:	mov	w1, w22
   2fbe8:	mov	x0, x19
   2fbec:	mov	x2, x20
   2fbf0:	stp	x20, x3, [sp, #144]
   2fbf4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2fbf8:	ldr	w1, [x20, #4]
   2fbfc:	ldr	x0, [sp, #152]
   2fc00:	sub	w1, w1, #0x1
   2fc04:	ldp	x21, x22, [sp, #32]
   2fc08:	ldp	x23, x24, [sp, #48]
   2fc0c:	ldp	x25, x26, [sp, #64]
   2fc10:	str	x0, [x19, #328]
   2fc14:	ldr	w0, [x19, #308]
   2fc18:	str	w1, [x20, #4]
   2fc1c:	sub	w0, w0, #0x1
   2fc20:	str	w0, [x19, #308]
   2fc24:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2fc28:	and	w21, w22, #0xffffff9f
   2fc2c:	ldr	x3, [x19, #296]
   2fc30:	tbnz	w22, #5, 33818 <__asan_backtrace_create_state@@Base+0x5b90>
   2fc34:	ldr	x20, [x2, #8]
   2fc38:	cbz	x20, 2fc40 <__asan_backtrace_create_state@@Base+0x1fb8>
   2fc3c:	tbz	w22, #6, 33fd8 <__asan_backtrace_create_state@@Base+0x6350>
   2fc40:	add	x2, x24, #0x10
   2fc44:	mov	w1, w21
   2fc48:	mov	x0, x19
   2fc4c:	bl	36b48 <__asan_backtrace_create_state@@Base+0x8ec0>
   2fc50:	ldp	x21, x22, [sp, #32]
   2fc54:	ldp	x23, x24, [sp, #48]
   2fc58:	ldp	x25, x26, [sp, #64]
   2fc5c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2fc60:	ldr	x0, [x2, #8]
   2fc64:	tbnz	w22, #2, 32d3c <__asan_backtrace_create_state@@Base+0x50b4>
   2fc68:	ldrsw	x22, [x0, #8]
   2fc6c:	ldr	x20, [x0]
   2fc70:	cbz	x22, 34a0c <__asan_backtrace_create_state@@Base+0x6d84>
   2fc74:	add	x22, x20, x22
   2fc78:	mov	x23, #0x1                   	// #1
   2fc7c:	ldr	x1, [x19, #256]
   2fc80:	b	2fcdc <__asan_backtrace_create_state@@Base+0x2054>
   2fc84:	ldp	x3, x2, [x19, #272]
   2fc88:	strb	wzr, [x19, #255]
   2fc8c:	mov	x0, x19
   2fc90:	add	x20, x20, #0x1
   2fc94:	blr	x3
   2fc98:	strb	w21, [x19]
   2fc9c:	ldr	x0, [x19, #320]
   2fca0:	str	x23, [x19, #256]
   2fca4:	strb	w21, [x19, #264]
   2fca8:	cmp	x22, x20
   2fcac:	add	x0, x0, #0x1
   2fcb0:	str	x0, [x19, #320]
   2fcb4:	b.eq	34534 <__asan_backtrace_create_state@@Base+0x68ac>  // b.none
   2fcb8:	ldrb	w21, [x20]
   2fcbc:	mov	x0, #0x1                   	// #1
   2fcc0:	add	x1, x0, #0x1
   2fcc4:	str	x1, [x19, #256]
   2fcc8:	strb	w21, [x19, x0]
   2fccc:	add	x20, x20, #0x1
   2fcd0:	strb	w21, [x19, #264]
   2fcd4:	cmp	x22, x20
   2fcd8:	b.eq	33918 <__asan_backtrace_create_state@@Base+0x5c90>  // b.none
   2fcdc:	ldrb	w21, [x20]
   2fce0:	cmp	x1, #0xff
   2fce4:	b.eq	2fc84 <__asan_backtrace_create_state@@Base+0x1ffc>  // b.none
   2fce8:	mov	x0, x1
   2fcec:	b	2fcc0 <__asan_backtrace_create_state@@Base+0x2038>
   2fcf0:	ldrsw	x21, [x2, #16]
   2fcf4:	ldr	x20, [x2, #8]
   2fcf8:	tbnz	w22, #2, 32bb0 <__asan_backtrace_create_state@@Base+0x4f28>
   2fcfc:	cbz	x21, 34a6c <__asan_backtrace_create_state@@Base+0x6de4>
   2fd00:	add	x22, x20, x21
   2fd04:	mov	x23, #0x1                   	// #1
   2fd08:	ldr	x1, [x19, #256]
   2fd0c:	b	2fd68 <__asan_backtrace_create_state@@Base+0x20e0>
   2fd10:	ldp	x3, x2, [x19, #272]
   2fd14:	strb	wzr, [x19, #255]
   2fd18:	mov	x0, x19
   2fd1c:	add	x20, x20, #0x1
   2fd20:	blr	x3
   2fd24:	strb	w21, [x19]
   2fd28:	ldr	x0, [x19, #320]
   2fd2c:	str	x23, [x19, #256]
   2fd30:	strb	w21, [x19, #264]
   2fd34:	cmp	x22, x20
   2fd38:	add	x0, x0, #0x1
   2fd3c:	str	x0, [x19, #320]
   2fd40:	b.eq	34440 <__asan_backtrace_create_state@@Base+0x67b8>  // b.none
   2fd44:	ldrb	w21, [x20]
   2fd48:	mov	x0, #0x1                   	// #1
   2fd4c:	add	x1, x0, #0x1
   2fd50:	str	x1, [x19, #256]
   2fd54:	strb	w21, [x19, x0]
   2fd58:	add	x20, x20, #0x1
   2fd5c:	strb	w21, [x19, #264]
   2fd60:	cmp	x22, x20
   2fd64:	b.eq	33948 <__asan_backtrace_create_state@@Base+0x5cc0>  // b.none
   2fd68:	ldrb	w21, [x20]
   2fd6c:	cmp	x1, #0xff
   2fd70:	b.eq	2fd10 <__asan_backtrace_create_state@@Base+0x2088>  // b.none
   2fd74:	mov	x0, x1
   2fd78:	b	2fd4c <__asan_backtrace_create_state@@Base+0x20c4>
   2fd7c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2fd80:	add	x20, x20, #0x110
   2fd84:	mov	x0, x20
   2fd88:	bl	64b0 <__asan_internal_strlen@plt>
   2fd8c:	cbz	x0, 32420 <__asan_backtrace_create_state@@Base+0x4798>
   2fd90:	add	x23, x20, x0
   2fd94:	mov	x25, #0x1                   	// #1
   2fd98:	ldr	x1, [x19, #256]
   2fd9c:	b	2fdf8 <__asan_backtrace_create_state@@Base+0x2170>
   2fda0:	ldp	x3, x2, [x19, #272]
   2fda4:	strb	wzr, [x19, #255]
   2fda8:	mov	x0, x19
   2fdac:	add	x20, x20, #0x1
   2fdb0:	blr	x3
   2fdb4:	strb	w21, [x19]
   2fdb8:	ldr	x0, [x19, #320]
   2fdbc:	str	x25, [x19, #256]
   2fdc0:	strb	w21, [x19, #264]
   2fdc4:	cmp	x23, x20
   2fdc8:	add	x0, x0, #0x1
   2fdcc:	str	x0, [x19, #320]
   2fdd0:	b.eq	32420 <__asan_backtrace_create_state@@Base+0x4798>  // b.none
   2fdd4:	ldrb	w21, [x20]
   2fdd8:	mov	x0, #0x1                   	// #1
   2fddc:	add	x1, x0, #0x1
   2fde0:	str	x1, [x19, #256]
   2fde4:	strb	w21, [x19, x0]
   2fde8:	add	x20, x20, #0x1
   2fdec:	strb	w21, [x19, #264]
   2fdf0:	cmp	x23, x20
   2fdf4:	b.eq	32420 <__asan_backtrace_create_state@@Base+0x4798>  // b.none
   2fdf8:	ldrb	w21, [x20]
   2fdfc:	cmp	x1, #0xff
   2fe00:	b.eq	2fda0 <__asan_backtrace_create_state@@Base+0x2118>  // b.none
   2fe04:	mov	x0, x1
   2fe08:	b	2fddc <__asan_backtrace_create_state@@Base+0x2154>
   2fe0c:	ldr	x0, [x2, #16]
   2fe10:	ldr	w0, [x0]
   2fe14:	cmp	w0, #0x39
   2fe18:	b.ne	2e7e8 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   2fe1c:	ldr	x2, [x2, #8]
   2fe20:	ldr	x0, [x2, #8]
   2fe24:	ldr	x0, [x0]
   2fe28:	ldrb	w1, [x0, #1]
   2fe2c:	cmp	w1, #0x63
   2fe30:	b.eq	341ec <__asan_backtrace_create_state@@Base+0x6564>  // b.none
   2fe34:	add	x3, x24, #0x10
   2fe38:	mov	w1, w22
   2fe3c:	mov	x0, x19
   2fe40:	bl	35228 <__asan_backtrace_create_state@@Base+0x75a0>
   2fe44:	cbnz	w0, 346d8 <__asan_backtrace_create_state@@Base+0x6a50>
   2fe48:	ldr	x0, [x24, #8]
   2fe4c:	ldr	w1, [x0]
   2fe50:	cmp	w1, #0x32
   2fe54:	b.eq	348ac <__asan_backtrace_create_state@@Base+0x6c24>  // b.none
   2fe58:	ldr	x0, [x0, #8]
   2fe5c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2fe60:	add	x1, x20, #0x140
   2fe64:	ldr	x0, [x0]
   2fe68:	bl	67f0 <__asan_internal_strcmp@plt>
   2fe6c:	cbnz	w0, 34980 <__asan_backtrace_create_state@@Base+0x6cf8>
   2fe70:	ldr	x0, [x24, #16]
   2fe74:	ldr	x1, [x0, #8]
   2fe78:	ldr	w2, [x1]
   2fe7c:	cmp	w2, #0x3
   2fe80:	b.eq	34a7c <__asan_backtrace_create_state@@Base+0x6df4>  // b.none
   2fe84:	ldr	x2, [x0, #8]
   2fe88:	mov	w1, w22
   2fe8c:	mov	x0, x19
   2fe90:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   2fe94:	ldr	x0, [x24, #8]
   2fe98:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2fe9c:	add	x1, x1, #0x148
   2fea0:	ldr	x0, [x0, #8]
   2fea4:	ldr	x0, [x0]
   2fea8:	bl	67f0 <__asan_internal_strcmp@plt>
   2feac:	cbnz	w0, 34950 <__asan_backtrace_create_state@@Base+0x6cc8>
   2feb0:	ldr	x1, [x19, #256]
   2feb4:	cmp	x1, #0xff
   2feb8:	b.ne	2fee0 <__asan_backtrace_create_state@@Base+0x2258>  // b.any
   2febc:	ldp	x3, x2, [x19, #272]
   2fec0:	strb	wzr, [x19, #255]
   2fec4:	mov	x0, x19
   2fec8:	blr	x3
   2fecc:	str	xzr, [x19, #256]
   2fed0:	ldr	x0, [x19, #320]
   2fed4:	mov	x1, #0x0                   	// #0
   2fed8:	add	x0, x0, #0x1
   2fedc:	str	x0, [x19, #320]
   2fee0:	add	x0, x1, #0x1
   2fee4:	str	x0, [x19, #256]
   2fee8:	mov	w2, #0x5b                  	// #91
   2feec:	strb	w2, [x19, x1]
   2fef0:	strb	w2, [x19, #264]
   2fef4:	ldr	x1, [x24, #16]
   2fef8:	ldr	x20, [x1, #16]
   2fefc:	cbz	x20, 346b0 <__asan_backtrace_create_state@@Base+0x6a28>
   2ff00:	ldr	w2, [x20, #4]
   2ff04:	cmp	w2, #0x1
   2ff08:	b.gt	346b0 <__asan_backtrace_create_state@@Base+0x6a28>
   2ff0c:	ldr	w1, [x19, #308]
   2ff10:	cmp	w1, #0x400
   2ff14:	b.gt	346b0 <__asan_backtrace_create_state@@Base+0x6a28>
   2ff18:	ldr	x3, [x19, #328]
   2ff1c:	add	w2, w2, #0x1
   2ff20:	str	w2, [x20, #4]
   2ff24:	add	w1, w1, #0x1
   2ff28:	add	x0, sp, #0x90
   2ff2c:	str	w1, [x19, #308]
   2ff30:	str	x0, [x19, #328]
   2ff34:	mov	x2, x20
   2ff38:	mov	w1, w22
   2ff3c:	mov	x0, x19
   2ff40:	stp	x20, x3, [sp, #144]
   2ff44:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   2ff48:	ldr	w2, [x20, #4]
   2ff4c:	ldr	x0, [sp, #152]
   2ff50:	str	x0, [x19, #328]
   2ff54:	ldr	w1, [x19, #308]
   2ff58:	sub	w2, w2, #0x1
   2ff5c:	ldr	x0, [x19, #256]
   2ff60:	str	w2, [x20, #4]
   2ff64:	sub	w1, w1, #0x1
   2ff68:	str	w1, [x19, #308]
   2ff6c:	cmp	x0, #0xff
   2ff70:	b.ne	2ff98 <__asan_backtrace_create_state@@Base+0x2310>  // b.any
   2ff74:	ldp	x3, x2, [x19, #272]
   2ff78:	strb	wzr, [x19, #255]
   2ff7c:	mov	x1, x0
   2ff80:	mov	x0, x19
   2ff84:	blr	x3
   2ff88:	str	xzr, [x19, #256]
   2ff8c:	ldr	x0, [x19, #320]
   2ff90:	add	x0, x0, #0x1
   2ff94:	str	x0, [x19, #320]
   2ff98:	ldr	x1, [x19, #256]
   2ff9c:	mov	w0, #0x5d                  	// #93
   2ffa0:	add	x2, x1, #0x1
   2ffa4:	str	x2, [x19, #256]
   2ffa8:	strb	w0, [x19, x1]
   2ffac:	strb	w0, [x19, #264]
   2ffb0:	ldr	x0, [x24, #8]
   2ffb4:	ldr	w1, [x0]
   2ffb8:	cmp	w1, #0x32
   2ffbc:	b.eq	34918 <__asan_backtrace_create_state@@Base+0x6c90>  // b.none
   2ffc0:	ldp	x21, x22, [sp, #32]
   2ffc4:	ldp	x23, x24, [sp, #48]
   2ffc8:	ldp	x25, x26, [sp, #64]
   2ffcc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   2ffd0:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   2ffd4:	add	x20, x20, #0x180
   2ffd8:	mov	x0, x20
   2ffdc:	bl	64b0 <__asan_internal_strlen@plt>
   2ffe0:	cbz	x0, 31ea4 <__asan_backtrace_create_state@@Base+0x421c>
   2ffe4:	add	x23, x20, x0
   2ffe8:	mov	x25, #0x1                   	// #1
   2ffec:	ldr	x1, [x19, #256]
   2fff0:	b	3004c <__asan_backtrace_create_state@@Base+0x23c4>
   2fff4:	ldp	x3, x2, [x19, #272]
   2fff8:	strb	wzr, [x19, #255]
   2fffc:	mov	x0, x19
   30000:	add	x20, x20, #0x1
   30004:	blr	x3
   30008:	strb	w21, [x19]
   3000c:	ldr	x0, [x19, #320]
   30010:	str	x25, [x19, #256]
   30014:	strb	w21, [x19, #264]
   30018:	cmp	x20, x23
   3001c:	add	x0, x0, #0x1
   30020:	str	x0, [x19, #320]
   30024:	b.eq	31ea4 <__asan_backtrace_create_state@@Base+0x421c>  // b.none
   30028:	ldrb	w21, [x20]
   3002c:	mov	x0, #0x1                   	// #1
   30030:	add	x1, x0, #0x1
   30034:	str	x1, [x19, #256]
   30038:	strb	w21, [x19, x0]
   3003c:	add	x20, x20, #0x1
   30040:	strb	w21, [x19, #264]
   30044:	cmp	x23, x20
   30048:	b.eq	31ea4 <__asan_backtrace_create_state@@Base+0x421c>  // b.none
   3004c:	ldrb	w21, [x20]
   30050:	cmp	x1, #0xff
   30054:	b.eq	2fff4 <__asan_backtrace_create_state@@Base+0x236c>  // b.none
   30058:	mov	x0, x1
   3005c:	b	30030 <__asan_backtrace_create_state@@Base+0x23a8>
   30060:	ldr	x2, [x2, #8]
   30064:	mov	w1, w22
   30068:	mov	x0, x19
   3006c:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   30070:	ldp	x21, x22, [sp, #32]
   30074:	ldp	x23, x24, [sp, #48]
   30078:	ldp	x25, x26, [sp, #64]
   3007c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   30080:	ldp	x23, x20, [x2, #8]
   30084:	mov	x21, #0x0                   	// #0
   30088:	ldr	w0, [x23]
   3008c:	cmp	w0, #0x32
   30090:	b.eq	33b64 <__asan_backtrace_create_state@@Base+0x5edc>  // b.none
   30094:	cmp	w0, #0x34
   30098:	b.eq	330d8 <__asan_backtrace_create_state@@Base+0x5450>  // b.none
   3009c:	mov	x2, x23
   300a0:	mov	w1, w22
   300a4:	mov	x0, x19
   300a8:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   300ac:	cbz	x21, 32b00 <__asan_backtrace_create_state@@Base+0x4e78>
   300b0:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   300b4:	mov	x0, x21
   300b8:	add	x1, x1, #0x130
   300bc:	bl	67f0 <__asan_internal_strcmp@plt>
   300c0:	cbz	w0, 344a4 <__asan_backtrace_create_state@@Base+0x681c>
   300c4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   300c8:	mov	x0, x21
   300cc:	add	x1, x1, #0x6c8
   300d0:	bl	67f0 <__asan_internal_strcmp@plt>
   300d4:	cbnz	w0, 32b00 <__asan_backtrace_create_state@@Base+0x4e78>
   300d8:	ldr	x1, [x19, #256]
   300dc:	cmp	x1, #0xff
   300e0:	b.ne	30104 <__asan_backtrace_create_state@@Base+0x247c>  // b.any
   300e4:	ldp	x3, x2, [x19, #272]
   300e8:	strb	wzr, [x19, #255]
   300ec:	mov	x0, x19
   300f0:	blr	x3
   300f4:	ldr	x0, [x19, #320]
   300f8:	mov	x1, #0x0                   	// #0
   300fc:	add	x0, x0, #0x1
   30100:	str	x0, [x19, #320]
   30104:	add	x0, x1, #0x1
   30108:	str	x0, [x19, #256]
   3010c:	mov	w2, #0x28                  	// #40
   30110:	strb	w2, [x19, x1]
   30114:	strb	w2, [x19, #264]
   30118:	cbz	x20, 33fcc <__asan_backtrace_create_state@@Base+0x6344>
   3011c:	ldr	w2, [x20, #4]
   30120:	cmp	w2, #0x1
   30124:	b.gt	33fcc <__asan_backtrace_create_state@@Base+0x6344>
   30128:	ldr	w1, [x19, #308]
   3012c:	cmp	w1, #0x400
   30130:	b.gt	33fcc <__asan_backtrace_create_state@@Base+0x6344>
   30134:	ldr	x3, [x19, #328]
   30138:	add	w2, w2, #0x1
   3013c:	str	w2, [x20, #4]
   30140:	add	w1, w1, #0x1
   30144:	add	x0, sp, #0x90
   30148:	str	w1, [x19, #308]
   3014c:	str	x0, [x19, #328]
   30150:	mov	x2, x20
   30154:	mov	w1, w22
   30158:	mov	x0, x19
   3015c:	stp	x20, x3, [sp, #144]
   30160:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   30164:	ldr	w2, [x20, #4]
   30168:	ldr	x0, [sp, #152]
   3016c:	str	x0, [x19, #328]
   30170:	ldr	w1, [x19, #308]
   30174:	sub	w2, w2, #0x1
   30178:	ldr	x0, [x19, #256]
   3017c:	str	w2, [x20, #4]
   30180:	sub	w1, w1, #0x1
   30184:	str	w1, [x19, #308]
   30188:	cmp	x0, #0xff
   3018c:	b.ne	301b4 <__asan_backtrace_create_state@@Base+0x252c>  // b.any
   30190:	ldp	x3, x2, [x19, #272]
   30194:	strb	wzr, [x19, #255]
   30198:	mov	x1, x0
   3019c:	mov	x0, x19
   301a0:	blr	x3
   301a4:	ldr	x1, [x19, #320]
   301a8:	mov	x0, #0x0                   	// #0
   301ac:	add	x1, x1, #0x1
   301b0:	str	x1, [x19, #320]
   301b4:	add	x1, x0, #0x1
   301b8:	str	x1, [x19, #256]
   301bc:	mov	w1, #0x29                  	// #41
   301c0:	strb	w1, [x19, x0]
   301c4:	strb	w1, [x19, #264]
   301c8:	ldp	x21, x22, [sp, #32]
   301cc:	ldp	x23, x24, [sp, #48]
   301d0:	ldp	x25, x26, [sp, #64]
   301d4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   301d8:	ldr	x1, [x19, #256]
   301dc:	ldrb	w20, [x2, #8]
   301e0:	add	x0, x1, #0x1
   301e4:	cmp	x1, #0xff
   301e8:	b.ne	30210 <__asan_backtrace_create_state@@Base+0x2588>  // b.any
   301ec:	ldp	x3, x2, [x19, #272]
   301f0:	strb	wzr, [x19, #255]
   301f4:	mov	x0, x19
   301f8:	blr	x3
   301fc:	ldr	x2, [x19, #320]
   30200:	mov	x0, #0x1                   	// #1
   30204:	mov	x1, #0x0                   	// #0
   30208:	add	x2, x2, x0
   3020c:	str	x2, [x19, #320]
   30210:	str	x0, [x19, #256]
   30214:	strb	w20, [x19, x1]
   30218:	strb	w20, [x19, #264]
   3021c:	ldp	x21, x22, [sp, #32]
   30220:	ldp	x23, x24, [sp, #48]
   30224:	ldp	x25, x26, [sp, #64]
   30228:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3022c:	ldr	w2, [x2, #8]
   30230:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   30234:	add	x1, x1, #0x378
   30238:	add	x20, sp, #0x90
   3023c:	mov	x0, x20
   30240:	bl	65f0 <sprintf@plt>
   30244:	mov	x0, x20
   30248:	bl	64b0 <__asan_internal_strlen@plt>
   3024c:	cbz	x0, 347bc <__asan_backtrace_create_state@@Base+0x6b34>
   30250:	add	x22, x20, x0
   30254:	mov	x23, #0x1                   	// #1
   30258:	ldr	x1, [x19, #256]
   3025c:	b	302b8 <__asan_backtrace_create_state@@Base+0x2630>
   30260:	ldp	x3, x2, [x19, #272]
   30264:	strb	wzr, [x19, #255]
   30268:	mov	x0, x19
   3026c:	add	x20, x20, #0x1
   30270:	blr	x3
   30274:	strb	w21, [x19]
   30278:	ldr	x0, [x19, #320]
   3027c:	str	x23, [x19, #256]
   30280:	strb	w21, [x19, #264]
   30284:	cmp	x20, x22
   30288:	add	x0, x0, #0x1
   3028c:	str	x0, [x19, #320]
   30290:	b.eq	338b8 <__asan_backtrace_create_state@@Base+0x5c30>  // b.none
   30294:	ldrb	w21, [x20]
   30298:	mov	x0, #0x1                   	// #1
   3029c:	add	x1, x0, #0x1
   302a0:	str	x1, [x19, #256]
   302a4:	strb	w21, [x19, x0]
   302a8:	add	x20, x20, #0x1
   302ac:	strb	w21, [x19, #264]
   302b0:	cmp	x22, x20
   302b4:	b.eq	32b3c <__asan_backtrace_create_state@@Base+0x4eb4>  // b.none
   302b8:	ldrb	w21, [x20]
   302bc:	cmp	x1, #0xff
   302c0:	b.eq	30260 <__asan_backtrace_create_state@@Base+0x25d8>  // b.none
   302c4:	mov	x0, x1
   302c8:	b	3029c <__asan_backtrace_create_state@@Base+0x2614>
   302cc:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   302d0:	add	x20, x20, #0x190
   302d4:	mov	x0, x20
   302d8:	bl	64b0 <__asan_internal_strlen@plt>
   302dc:	cbz	x0, 320a4 <__asan_backtrace_create_state@@Base+0x441c>
   302e0:	add	x23, x20, x0
   302e4:	mov	x25, #0x1                   	// #1
   302e8:	ldr	x1, [x19, #256]
   302ec:	b	30348 <__asan_backtrace_create_state@@Base+0x26c0>
   302f0:	ldp	x3, x2, [x19, #272]
   302f4:	strb	wzr, [x19, #255]
   302f8:	mov	x0, x19
   302fc:	add	x20, x20, #0x1
   30300:	blr	x3
   30304:	strb	w21, [x19]
   30308:	ldr	x0, [x19, #320]
   3030c:	str	x25, [x19, #256]
   30310:	strb	w21, [x19, #264]
   30314:	cmp	x20, x23
   30318:	add	x0, x0, #0x1
   3031c:	str	x0, [x19, #320]
   30320:	b.eq	320a4 <__asan_backtrace_create_state@@Base+0x441c>  // b.none
   30324:	ldrb	w21, [x20]
   30328:	mov	x0, #0x1                   	// #1
   3032c:	add	x1, x0, #0x1
   30330:	str	x1, [x19, #256]
   30334:	strb	w21, [x19, x0]
   30338:	add	x20, x20, #0x1
   3033c:	strb	w21, [x19, #264]
   30340:	cmp	x23, x20
   30344:	b.eq	320a4 <__asan_backtrace_create_state@@Base+0x441c>  // b.none
   30348:	ldrb	w21, [x20]
   3034c:	cmp	x1, #0xff
   30350:	b.eq	302f0 <__asan_backtrace_create_state@@Base+0x2668>  // b.none
   30354:	mov	x0, x1
   30358:	b	3032c <__asan_backtrace_create_state@@Base+0x26a4>
   3035c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   30360:	add	x20, x20, #0x1b0
   30364:	mov	x0, x20
   30368:	bl	64b0 <__asan_internal_strlen@plt>
   3036c:	cbz	x0, 31678 <__asan_backtrace_create_state@@Base+0x39f0>
   30370:	add	x23, x20, x0
   30374:	mov	x25, #0x1                   	// #1
   30378:	ldr	x1, [x19, #256]
   3037c:	b	303d8 <__asan_backtrace_create_state@@Base+0x2750>
   30380:	ldp	x3, x2, [x19, #272]
   30384:	strb	wzr, [x19, #255]
   30388:	mov	x0, x19
   3038c:	add	x20, x20, #0x1
   30390:	blr	x3
   30394:	strb	w21, [x19]
   30398:	ldr	x0, [x19, #320]
   3039c:	str	x25, [x19, #256]
   303a0:	strb	w21, [x19, #264]
   303a4:	cmp	x20, x23
   303a8:	add	x0, x0, #0x1
   303ac:	str	x0, [x19, #320]
   303b0:	b.eq	31678 <__asan_backtrace_create_state@@Base+0x39f0>  // b.none
   303b4:	ldrb	w21, [x20]
   303b8:	mov	x0, #0x1                   	// #1
   303bc:	add	x1, x0, #0x1
   303c0:	str	x1, [x19, #256]
   303c4:	strb	w21, [x19, x0]
   303c8:	add	x20, x20, #0x1
   303cc:	strb	w21, [x19, #264]
   303d0:	cmp	x23, x20
   303d4:	b.eq	31678 <__asan_backtrace_create_state@@Base+0x39f0>  // b.none
   303d8:	ldrb	w21, [x20]
   303dc:	cmp	x1, #0xff
   303e0:	b.eq	30380 <__asan_backtrace_create_state@@Base+0x26f8>  // b.none
   303e4:	mov	x0, x1
   303e8:	b	303bc <__asan_backtrace_create_state@@Base+0x2734>
   303ec:	ldr	x20, [x2, #8]
   303f0:	cbz	x20, 327bc <__asan_backtrace_create_state@@Base+0x4b34>
   303f4:	ldr	w0, [x20, #4]
   303f8:	cmp	w0, #0x1
   303fc:	b.gt	327bc <__asan_backtrace_create_state@@Base+0x4b34>
   30400:	ldr	w1, [x19, #308]
   30404:	cmp	w1, #0x400
   30408:	b.gt	327bc <__asan_backtrace_create_state@@Base+0x4b34>
   3040c:	ldr	x3, [x19, #328]
   30410:	add	w0, w0, #0x1
   30414:	str	w0, [x20, #4]
   30418:	add	w1, w1, #0x1
   3041c:	add	x0, sp, #0x90
   30420:	str	w1, [x19, #308]
   30424:	str	x0, [x19, #328]
   30428:	mov	w1, w22
   3042c:	mov	x0, x19
   30430:	mov	x2, x20
   30434:	stp	x20, x3, [sp, #144]
   30438:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3043c:	ldr	w1, [x20, #4]
   30440:	ldr	x0, [sp, #152]
   30444:	str	x0, [x19, #328]
   30448:	ldr	w0, [x19, #308]
   3044c:	sub	w1, w1, #0x1
   30450:	str	w1, [x20, #4]
   30454:	sub	w0, w0, #0x1
   30458:	str	w0, [x19, #308]
   3045c:	ldr	x20, [x24, #16]
   30460:	cbz	x20, 327a4 <__asan_backtrace_create_state@@Base+0x4b1c>
   30464:	ldr	w0, [x20, #4]
   30468:	cmp	w0, #0x1
   3046c:	b.gt	327a4 <__asan_backtrace_create_state@@Base+0x4b1c>
   30470:	ldr	w1, [x19, #308]
   30474:	cmp	w1, #0x400
   30478:	b.gt	327a4 <__asan_backtrace_create_state@@Base+0x4b1c>
   3047c:	ldr	x3, [x19, #328]
   30480:	add	w0, w0, #0x1
   30484:	str	w0, [x20, #4]
   30488:	add	w1, w1, #0x1
   3048c:	add	x0, sp, #0x90
   30490:	str	w1, [x19, #308]
   30494:	str	x0, [x19, #328]
   30498:	mov	w1, w22
   3049c:	mov	x0, x19
   304a0:	mov	x2, x20
   304a4:	stp	x20, x3, [sp, #144]
   304a8:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   304ac:	ldr	w1, [x20, #4]
   304b0:	ldr	x0, [sp, #152]
   304b4:	sub	w1, w1, #0x1
   304b8:	ldp	x21, x22, [sp, #32]
   304bc:	ldp	x23, x24, [sp, #48]
   304c0:	ldp	x25, x26, [sp, #64]
   304c4:	str	x0, [x19, #328]
   304c8:	ldr	w0, [x19, #308]
   304cc:	str	w1, [x20, #4]
   304d0:	sub	w0, w0, #0x1
   304d4:	str	w0, [x19, #308]
   304d8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   304dc:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   304e0:	add	x20, x20, #0xf50
   304e4:	mov	x0, x20
   304e8:	bl	64b0 <__asan_internal_strlen@plt>
   304ec:	cbz	x0, 31478 <__asan_backtrace_create_state@@Base+0x37f0>
   304f0:	add	x23, x20, x0
   304f4:	mov	x25, #0x1                   	// #1
   304f8:	ldr	x1, [x19, #256]
   304fc:	b	30558 <__asan_backtrace_create_state@@Base+0x28d0>
   30500:	ldp	x3, x2, [x19, #272]
   30504:	strb	wzr, [x19, #255]
   30508:	mov	x0, x19
   3050c:	add	x20, x20, #0x1
   30510:	blr	x3
   30514:	strb	w21, [x19]
   30518:	ldr	x0, [x19, #320]
   3051c:	str	x25, [x19, #256]
   30520:	strb	w21, [x19, #264]
   30524:	cmp	x20, x23
   30528:	add	x0, x0, #0x1
   3052c:	str	x0, [x19, #320]
   30530:	b.eq	31478 <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   30534:	ldrb	w21, [x20]
   30538:	mov	x0, #0x1                   	// #1
   3053c:	add	x1, x0, #0x1
   30540:	str	x1, [x19, #256]
   30544:	strb	w21, [x19, x0]
   30548:	add	x20, x20, #0x1
   3054c:	strb	w21, [x19, #264]
   30550:	cmp	x23, x20
   30554:	b.eq	31478 <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   30558:	ldrb	w21, [x20]
   3055c:	cmp	x1, #0xff
   30560:	b.eq	30500 <__asan_backtrace_create_state@@Base+0x2878>  // b.none
   30564:	mov	x0, x1
   30568:	b	3053c <__asan_backtrace_create_state@@Base+0x28b4>
   3056c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   30570:	add	x20, x20, #0xf60
   30574:	mov	x0, x20
   30578:	bl	64b0 <__asan_internal_strlen@plt>
   3057c:	cbz	x0, 314f8 <__asan_backtrace_create_state@@Base+0x3870>
   30580:	add	x23, x20, x0
   30584:	mov	x25, #0x1                   	// #1
   30588:	ldr	x1, [x19, #256]
   3058c:	b	305e8 <__asan_backtrace_create_state@@Base+0x2960>
   30590:	ldp	x3, x2, [x19, #272]
   30594:	strb	wzr, [x19, #255]
   30598:	mov	x0, x19
   3059c:	add	x20, x20, #0x1
   305a0:	blr	x3
   305a4:	strb	w21, [x19]
   305a8:	ldr	x0, [x19, #320]
   305ac:	str	x25, [x19, #256]
   305b0:	strb	w21, [x19, #264]
   305b4:	cmp	x20, x23
   305b8:	add	x0, x0, #0x1
   305bc:	str	x0, [x19, #320]
   305c0:	b.eq	314f8 <__asan_backtrace_create_state@@Base+0x3870>  // b.none
   305c4:	ldrb	w21, [x20]
   305c8:	mov	x0, #0x1                   	// #1
   305cc:	add	x1, x0, #0x1
   305d0:	str	x1, [x19, #256]
   305d4:	strb	w21, [x19, x0]
   305d8:	add	x20, x20, #0x1
   305dc:	strb	w21, [x19, #264]
   305e0:	cmp	x23, x20
   305e4:	b.eq	314f8 <__asan_backtrace_create_state@@Base+0x3870>  // b.none
   305e8:	ldrb	w21, [x20]
   305ec:	cmp	x1, #0xff
   305f0:	b.eq	30590 <__asan_backtrace_create_state@@Base+0x2908>  // b.none
   305f4:	mov	x0, x1
   305f8:	b	305cc <__asan_backtrace_create_state@@Base+0x2944>
   305fc:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   30600:	add	x20, x20, #0xf88
   30604:	mov	x0, x20
   30608:	bl	64b0 <__asan_internal_strlen@plt>
   3060c:	cbz	x0, 313f8 <__asan_backtrace_create_state@@Base+0x3770>
   30610:	add	x23, x20, x0
   30614:	mov	x25, #0x1                   	// #1
   30618:	ldr	x1, [x19, #256]
   3061c:	b	30678 <__asan_backtrace_create_state@@Base+0x29f0>
   30620:	ldp	x3, x2, [x19, #272]
   30624:	strb	wzr, [x19, #255]
   30628:	mov	x0, x19
   3062c:	add	x20, x20, #0x1
   30630:	blr	x3
   30634:	strb	w21, [x19]
   30638:	ldr	x0, [x19, #320]
   3063c:	str	x25, [x19, #256]
   30640:	strb	w21, [x19, #264]
   30644:	cmp	x23, x20
   30648:	add	x0, x0, #0x1
   3064c:	str	x0, [x19, #320]
   30650:	b.eq	313f8 <__asan_backtrace_create_state@@Base+0x3770>  // b.none
   30654:	ldrb	w21, [x20]
   30658:	mov	x0, #0x1                   	// #1
   3065c:	add	x1, x0, #0x1
   30660:	str	x1, [x19, #256]
   30664:	strb	w21, [x19, x0]
   30668:	add	x20, x20, #0x1
   3066c:	strb	w21, [x19, #264]
   30670:	cmp	x23, x20
   30674:	b.eq	313f8 <__asan_backtrace_create_state@@Base+0x3770>  // b.none
   30678:	ldrb	w21, [x20]
   3067c:	cmp	x1, #0xff
   30680:	b.eq	30620 <__asan_backtrace_create_state@@Base+0x2998>  // b.none
   30684:	mov	x0, x1
   30688:	b	3065c <__asan_backtrace_create_state@@Base+0x29d4>
   3068c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   30690:	add	x20, x20, #0xf98
   30694:	mov	x0, x20
   30698:	bl	64b0 <__asan_internal_strlen@plt>
   3069c:	cbz	x0, 31378 <__asan_backtrace_create_state@@Base+0x36f0>
   306a0:	add	x23, x20, x0
   306a4:	mov	x25, #0x1                   	// #1
   306a8:	ldr	x1, [x19, #256]
   306ac:	b	30708 <__asan_backtrace_create_state@@Base+0x2a80>
   306b0:	ldp	x3, x2, [x19, #272]
   306b4:	strb	wzr, [x19, #255]
   306b8:	mov	x0, x19
   306bc:	add	x20, x20, #0x1
   306c0:	blr	x3
   306c4:	strb	w21, [x19]
   306c8:	ldr	x0, [x19, #320]
   306cc:	str	x25, [x19, #256]
   306d0:	strb	w21, [x19, #264]
   306d4:	cmp	x23, x20
   306d8:	add	x0, x0, #0x1
   306dc:	str	x0, [x19, #320]
   306e0:	b.eq	31378 <__asan_backtrace_create_state@@Base+0x36f0>  // b.none
   306e4:	ldrb	w21, [x20]
   306e8:	mov	x0, #0x1                   	// #1
   306ec:	add	x1, x0, #0x1
   306f0:	str	x1, [x19, #256]
   306f4:	strb	w21, [x19, x0]
   306f8:	add	x20, x20, #0x1
   306fc:	strb	w21, [x19, #264]
   30700:	cmp	x23, x20
   30704:	b.eq	31378 <__asan_backtrace_create_state@@Base+0x36f0>  // b.none
   30708:	ldrb	w21, [x20]
   3070c:	cmp	x1, #0xff
   30710:	b.eq	306b0 <__asan_backtrace_create_state@@Base+0x2a28>  // b.none
   30714:	mov	x0, x1
   30718:	b	306ec <__asan_backtrace_create_state@@Base+0x2a64>
   3071c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   30720:	add	x20, x20, #0xfb0
   30724:	mov	x0, x20
   30728:	bl	64b0 <__asan_internal_strlen@plt>
   3072c:	cbz	x0, 312f8 <__asan_backtrace_create_state@@Base+0x3670>
   30730:	add	x23, x20, x0
   30734:	mov	x25, #0x1                   	// #1
   30738:	ldr	x1, [x19, #256]
   3073c:	b	30798 <__asan_backtrace_create_state@@Base+0x2b10>
   30740:	ldp	x3, x2, [x19, #272]
   30744:	strb	wzr, [x19, #255]
   30748:	mov	x0, x19
   3074c:	add	x20, x20, #0x1
   30750:	blr	x3
   30754:	strb	w21, [x19]
   30758:	ldr	x0, [x19, #320]
   3075c:	str	x25, [x19, #256]
   30760:	strb	w21, [x19, #264]
   30764:	cmp	x23, x20
   30768:	add	x0, x0, #0x1
   3076c:	str	x0, [x19, #320]
   30770:	b.eq	312f8 <__asan_backtrace_create_state@@Base+0x3670>  // b.none
   30774:	ldrb	w21, [x20]
   30778:	mov	x0, #0x1                   	// #1
   3077c:	add	x1, x0, #0x1
   30780:	str	x1, [x19, #256]
   30784:	strb	w21, [x19, x0]
   30788:	add	x20, x20, #0x1
   3078c:	strb	w21, [x19, #264]
   30790:	cmp	x23, x20
   30794:	b.eq	312f8 <__asan_backtrace_create_state@@Base+0x3670>  // b.none
   30798:	ldrb	w21, [x20]
   3079c:	cmp	x1, #0xff
   307a0:	b.eq	30740 <__asan_backtrace_create_state@@Base+0x2ab8>  // b.none
   307a4:	mov	x0, x1
   307a8:	b	3077c <__asan_backtrace_create_state@@Base+0x2af4>
   307ac:	ldr	x25, [x2, #8]
   307b0:	ldr	x23, [x19, #296]
   307b4:	str	xzr, [x19, #296]
   307b8:	cbz	x25, 33f9c <__asan_backtrace_create_state@@Base+0x6314>
   307bc:	ldr	w4, [x25]
   307c0:	ldr	x3, [x19, #288]
   307c4:	stp	xzr, x25, [sp, #144]
   307c8:	sub	w1, w4, #0x1c
   307cc:	str	wzr, [sp, #160]
   307d0:	cmp	w1, #0x34
   307d4:	str	x3, [sp, #168]
   307d8:	b.hi	307f4 <__asan_backtrace_create_state@@Base+0x2b6c>  // b.pmore
   307dc:	mov	x0, #0x1                   	// #1
   307e0:	mov	x2, #0x1f                  	// #31
   307e4:	movk	x2, #0x1a, lsl #48
   307e8:	lsl	x1, x0, x1
   307ec:	tst	x1, x2
   307f0:	b.ne	32fd8 <__asan_backtrace_create_state@@Base+0x5350>  // b.any
   307f4:	add	x21, sp, #0x90
   307f8:	mov	w20, #0x1                   	// #1
   307fc:	mov	x1, x21
   30800:	str	x1, [x19, #296]
   30804:	cmp	w4, #0x2
   30808:	b.eq	33e2c <__asan_backtrace_create_state@@Base+0x61a4>  // b.none
   3080c:	cmp	w4, #0x4
   30810:	b.ne	30820 <__asan_backtrace_create_state@@Base+0x2b98>  // b.any
   30814:	add	x0, sp, #0x70
   30818:	stp	x3, x25, [sp, #112]
   3081c:	str	x0, [x19, #288]
   30820:	ldr	x24, [x24, #16]
   30824:	cbz	x24, 33268 <__asan_backtrace_create_state@@Base+0x55e0>
   30828:	ldr	w0, [x24, #4]
   3082c:	cmp	w0, #0x1
   30830:	b.gt	33268 <__asan_backtrace_create_state@@Base+0x55e0>
   30834:	ldr	w1, [x19, #308]
   30838:	cmp	w1, #0x400
   3083c:	b.gt	33268 <__asan_backtrace_create_state@@Base+0x55e0>
   30840:	ldr	x3, [x19, #328]
   30844:	add	w0, w0, #0x1
   30848:	str	w0, [x24, #4]
   3084c:	add	w1, w1, #0x1
   30850:	add	x0, sp, #0x80
   30854:	str	w1, [x19, #308]
   30858:	str	x0, [x19, #328]
   3085c:	mov	w1, w22
   30860:	mov	x0, x19
   30864:	mov	x2, x24
   30868:	stp	x24, x3, [sp, #128]
   3086c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   30870:	ldr	w1, [x24, #4]
   30874:	ldr	x0, [sp, #136]
   30878:	str	x0, [x19, #328]
   3087c:	ldr	w0, [x19, #308]
   30880:	sub	w1, w1, #0x1
   30884:	str	w1, [x24, #4]
   30888:	sub	w0, w0, #0x1
   3088c:	str	w0, [x19, #308]
   30890:	ldr	w0, [x25]
   30894:	cmp	w0, #0x4
   30898:	b.ne	308a4 <__asan_backtrace_create_state@@Base+0x2c1c>  // b.any
   3089c:	ldr	x0, [sp, #112]
   308a0:	str	x0, [x19, #288]
   308a4:	sub	w20, w20, #0x1
   308a8:	mov	w24, #0x20                  	// #32
   308ac:	ubfiz	x0, x20, #5, #32
   308b0:	add	x21, x21, x0
   308b4:	b	308bc <__asan_backtrace_create_state@@Base+0x2c34>
   308b8:	sub	w20, w20, #0x1
   308bc:	ldr	w0, [x21, #16]
   308c0:	cbnz	w0, 30918 <__asan_backtrace_create_state@@Base+0x2c90>
   308c4:	ldr	x0, [x19, #256]
   308c8:	add	x1, x0, #0x1
   308cc:	cmp	x0, #0xff
   308d0:	b.ne	308fc <__asan_backtrace_create_state@@Base+0x2c74>  // b.any
   308d4:	ldp	x3, x2, [x19, #272]
   308d8:	strb	wzr, [x19, #255]
   308dc:	mov	x1, x0
   308e0:	mov	x0, x19
   308e4:	blr	x3
   308e8:	ldr	x2, [x19, #320]
   308ec:	mov	x1, #0x1                   	// #1
   308f0:	mov	x0, #0x0                   	// #0
   308f4:	add	x2, x2, x1
   308f8:	str	x2, [x19, #320]
   308fc:	str	x1, [x19, #256]
   30900:	mov	w1, w22
   30904:	ldr	x2, [x21, #8]
   30908:	strb	w24, [x19, x0]
   3090c:	strb	w24, [x19, #264]
   30910:	mov	x0, x19
   30914:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   30918:	sub	x21, x21, #0x20
   3091c:	cbnz	w20, 308b8 <__asan_backtrace_create_state@@Base+0x2c30>
   30920:	ldp	x21, x22, [sp, #32]
   30924:	ldp	x25, x26, [sp, #64]
   30928:	str	x23, [x19, #296]
   3092c:	ldp	x23, x24, [sp, #48]
   30930:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   30934:	ldr	x20, [x2, #8]
   30938:	ldr	x23, [x19, #296]
   3093c:	str	xzr, [x19, #296]
   30940:	ldr	x21, [x19, #368]
   30944:	str	x2, [x19, #368]
   30948:	tbz	w22, #2, 32898 <__asan_backtrace_create_state@@Base+0x4c10>
   3094c:	ldr	w0, [x20]
   30950:	cbnz	w0, 30960 <__asan_backtrace_create_state@@Base+0x2cd8>
   30954:	ldr	w0, [x20, #16]
   30958:	cmp	w0, #0x6
   3095c:	b.eq	34988 <__asan_backtrace_create_state@@Base+0x6d00>  // b.none
   30960:	ldr	w0, [x20, #4]
   30964:	cmp	w0, #0x1
   30968:	b.gt	3289c <__asan_backtrace_create_state@@Base+0x4c14>
   3096c:	ldr	w1, [x19, #308]
   30970:	cmp	w1, #0x400
   30974:	b.gt	3289c <__asan_backtrace_create_state@@Base+0x4c14>
   30978:	ldr	x3, [x19, #328]
   3097c:	add	w0, w0, #0x1
   30980:	str	w0, [x20, #4]
   30984:	add	w1, w1, #0x1
   30988:	add	x0, sp, #0x90
   3098c:	str	w1, [x19, #308]
   30990:	str	x0, [x19, #328]
   30994:	mov	w1, w22
   30998:	mov	x0, x19
   3099c:	mov	x2, x20
   309a0:	stp	x20, x3, [sp, #144]
   309a4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   309a8:	ldr	w1, [x20, #4]
   309ac:	ldr	x0, [sp, #152]
   309b0:	str	x0, [x19, #328]
   309b4:	ldr	w0, [x19, #308]
   309b8:	sub	w1, w1, #0x1
   309bc:	str	w1, [x20, #4]
   309c0:	sub	w0, w0, #0x1
   309c4:	str	w0, [x19, #308]
   309c8:	ldrb	w0, [x19, #264]
   309cc:	ldr	x1, [x19, #256]
   309d0:	cmp	w0, #0x3c
   309d4:	b.eq	337f4 <__asan_backtrace_create_state@@Base+0x5b6c>  // b.none
   309d8:	cmp	x1, #0xff
   309dc:	b.eq	31180 <__asan_backtrace_create_state@@Base+0x34f8>  // b.none
   309e0:	add	x0, x1, #0x1
   309e4:	str	x0, [x19, #256]
   309e8:	mov	w2, #0x3c                  	// #60
   309ec:	strb	w2, [x19, x1]
   309f0:	strb	w2, [x19, #264]
   309f4:	ldr	x20, [x24, #16]
   309f8:	cbz	x20, 328a8 <__asan_backtrace_create_state@@Base+0x4c20>
   309fc:	ldr	w1, [x20, #4]
   30a00:	cmp	w1, #0x1
   30a04:	b.gt	328a8 <__asan_backtrace_create_state@@Base+0x4c20>
   30a08:	ldr	w2, [x19, #308]
   30a0c:	cmp	w2, #0x400
   30a10:	b.gt	328a8 <__asan_backtrace_create_state@@Base+0x4c20>
   30a14:	ldr	x3, [x19, #328]
   30a18:	add	w1, w1, #0x1
   30a1c:	str	w1, [x20, #4]
   30a20:	add	w2, w2, #0x1
   30a24:	add	x0, sp, #0x90
   30a28:	str	w2, [x19, #308]
   30a2c:	str	x0, [x19, #328]
   30a30:	mov	w1, w22
   30a34:	mov	x0, x19
   30a38:	mov	x2, x20
   30a3c:	stp	x20, x3, [sp, #144]
   30a40:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   30a44:	ldr	w1, [x20, #4]
   30a48:	ldr	x0, [sp, #152]
   30a4c:	str	x0, [x19, #328]
   30a50:	ldr	w0, [x19, #308]
   30a54:	sub	w1, w1, #0x1
   30a58:	str	w1, [x20, #4]
   30a5c:	sub	w0, w0, #0x1
   30a60:	str	w0, [x19, #308]
   30a64:	ldrb	w0, [x19, #264]
   30a68:	ldr	x1, [x19, #256]
   30a6c:	cmp	w0, #0x3e
   30a70:	b.ne	34948 <__asan_backtrace_create_state@@Base+0x6cc0>  // b.any
   30a74:	cmp	x1, #0xff
   30a78:	b.eq	3474c <__asan_backtrace_create_state@@Base+0x6ac4>  // b.none
   30a7c:	add	x0, x1, #0x1
   30a80:	str	x0, [x19, #256]
   30a84:	mov	w2, #0x20                  	// #32
   30a88:	strb	w2, [x19, x1]
   30a8c:	strb	w2, [x19, #264]
   30a90:	cmp	x0, #0xff
   30a94:	b.eq	31154 <__asan_backtrace_create_state@@Base+0x34cc>  // b.none
   30a98:	add	x1, x0, #0x1
   30a9c:	str	x1, [x19, #256]
   30aa0:	mov	w1, #0x3e                  	// #62
   30aa4:	strb	w1, [x19, x0]
   30aa8:	strb	w1, [x19, #264]
   30aac:	ldp	x25, x26, [sp, #64]
   30ab0:	str	x23, [x19, #296]
   30ab4:	str	x21, [x19, #368]
   30ab8:	ldp	x21, x22, [sp, #32]
   30abc:	ldp	x23, x24, [sp, #48]
   30ac0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   30ac4:	ldr	w0, [x19, #312]
   30ac8:	cbz	w0, 32f00 <__asan_backtrace_create_state@@Base+0x5278>
   30acc:	ldr	x0, [x19, #256]
   30ad0:	cmp	x0, #0xff
   30ad4:	b.eq	340ac <__asan_backtrace_create_state@@Base+0x6424>  // b.none
   30ad8:	add	x3, x0, #0x1
   30adc:	str	x3, [x19, #256]
   30ae0:	mov	w1, #0x61                  	// #97
   30ae4:	strb	w1, [x19, x0]
   30ae8:	strb	w1, [x19, #264]
   30aec:	cmp	x3, #0xff
   30af0:	b.ne	33a18 <__asan_backtrace_create_state@@Base+0x5d90>  // b.any
   30af4:	ldp	x4, x2, [x19, #272]
   30af8:	strb	wzr, [x19, #255]
   30afc:	mov	x1, x3
   30b00:	mov	x0, x19
   30b04:	blr	x4
   30b08:	ldr	x1, [x19, #320]
   30b0c:	mov	w2, #0x7475                	// #29813
   30b10:	mov	x0, #0x2                   	// #2
   30b14:	strh	w2, [x19]
   30b18:	add	x1, x1, #0x1
   30b1c:	str	x1, [x19, #320]
   30b20:	add	x1, x0, #0x1
   30b24:	mov	w2, #0x6f                  	// #111
   30b28:	strb	w2, [x19, x0]
   30b2c:	add	x0, x1, #0x1
   30b30:	str	x0, [x19, #256]
   30b34:	mov	w0, #0x3a                  	// #58
   30b38:	strb	w0, [x19, x1]
   30b3c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   30b40:	strb	w0, [x19, #264]
   30b44:	add	x1, x1, #0x378
   30b48:	add	x20, sp, #0x90
   30b4c:	ldr	x2, [x24, #8]
   30b50:	mov	x0, x20
   30b54:	add	w2, w2, #0x1
   30b58:	bl	65f0 <sprintf@plt>
   30b5c:	mov	x0, x20
   30b60:	bl	64b0 <__asan_internal_strlen@plt>
   30b64:	cbz	x0, 34a5c <__asan_backtrace_create_state@@Base+0x6dd4>
   30b68:	add	x22, x20, x0
   30b6c:	mov	x23, #0x1                   	// #1
   30b70:	ldr	x1, [x19, #256]
   30b74:	b	30bd0 <__asan_backtrace_create_state@@Base+0x2f48>
   30b78:	ldp	x3, x2, [x19, #272]
   30b7c:	strb	wzr, [x19, #255]
   30b80:	mov	x0, x19
   30b84:	add	x20, x20, #0x1
   30b88:	blr	x3
   30b8c:	strb	w21, [x19]
   30b90:	ldr	x0, [x19, #320]
   30b94:	str	x23, [x19, #256]
   30b98:	strb	w21, [x19, #264]
   30b9c:	cmp	x20, x22
   30ba0:	add	x0, x0, #0x1
   30ba4:	str	x0, [x19, #320]
   30ba8:	b.eq	34460 <__asan_backtrace_create_state@@Base+0x67d8>  // b.none
   30bac:	ldrb	w21, [x20]
   30bb0:	mov	x0, #0x1                   	// #1
   30bb4:	add	x1, x0, #0x1
   30bb8:	str	x1, [x19, #256]
   30bbc:	strb	w21, [x19, x0]
   30bc0:	add	x20, x20, #0x1
   30bc4:	strb	w21, [x19, #264]
   30bc8:	cmp	x22, x20
   30bcc:	b.eq	33938 <__asan_backtrace_create_state@@Base+0x5cb0>  // b.none
   30bd0:	ldrb	w21, [x20]
   30bd4:	cmp	x1, #0xff
   30bd8:	b.eq	30b78 <__asan_backtrace_create_state@@Base+0x2ef0>  // b.none
   30bdc:	mov	x0, x1
   30be0:	b	30bb4 <__asan_backtrace_create_state@@Base+0x2f2c>
   30be4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   30be8:	add	x20, x20, #0x1d0
   30bec:	mov	x0, x20
   30bf0:	bl	64b0 <__asan_internal_strlen@plt>
   30bf4:	cbz	x0, 32024 <__asan_backtrace_create_state@@Base+0x439c>
   30bf8:	add	x23, x20, x0
   30bfc:	mov	x25, #0x1                   	// #1
   30c00:	ldr	x1, [x19, #256]
   30c04:	b	30c60 <__asan_backtrace_create_state@@Base+0x2fd8>
   30c08:	ldp	x3, x2, [x19, #272]
   30c0c:	strb	wzr, [x19, #255]
   30c10:	mov	x0, x19
   30c14:	add	x20, x20, #0x1
   30c18:	blr	x3
   30c1c:	strb	w21, [x19]
   30c20:	ldr	x0, [x19, #320]
   30c24:	str	x25, [x19, #256]
   30c28:	strb	w21, [x19, #264]
   30c2c:	cmp	x20, x23
   30c30:	add	x0, x0, #0x1
   30c34:	str	x0, [x19, #320]
   30c38:	b.eq	32024 <__asan_backtrace_create_state@@Base+0x439c>  // b.none
   30c3c:	ldrb	w21, [x20]
   30c40:	mov	x0, #0x1                   	// #1
   30c44:	add	x1, x0, #0x1
   30c48:	str	x1, [x19, #256]
   30c4c:	strb	w21, [x19, x0]
   30c50:	add	x20, x20, #0x1
   30c54:	strb	w21, [x19, #264]
   30c58:	cmp	x23, x20
   30c5c:	b.eq	32024 <__asan_backtrace_create_state@@Base+0x439c>  // b.none
   30c60:	ldrb	w21, [x20]
   30c64:	cmp	x1, #0xff
   30c68:	b.eq	30c08 <__asan_backtrace_create_state@@Base+0x2f80>  // b.none
   30c6c:	mov	x0, x1
   30c70:	b	30c44 <__asan_backtrace_create_state@@Base+0x2fbc>
   30c74:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   30c78:	add	x20, x20, #0x1f0
   30c7c:	mov	x0, x20
   30c80:	bl	64b0 <__asan_internal_strlen@plt>
   30c84:	cbz	x0, 32168 <__asan_backtrace_create_state@@Base+0x44e0>
   30c88:	add	x23, x20, x0
   30c8c:	mov	x25, #0x1                   	// #1
   30c90:	ldr	x1, [x19, #256]
   30c94:	b	30cf0 <__asan_backtrace_create_state@@Base+0x3068>
   30c98:	ldp	x3, x2, [x19, #272]
   30c9c:	strb	wzr, [x19, #255]
   30ca0:	mov	x0, x19
   30ca4:	add	x20, x20, #0x1
   30ca8:	blr	x3
   30cac:	strb	w21, [x19]
   30cb0:	ldr	x0, [x19, #320]
   30cb4:	str	x25, [x19, #256]
   30cb8:	strb	w21, [x19, #264]
   30cbc:	cmp	x23, x20
   30cc0:	add	x0, x0, #0x1
   30cc4:	str	x0, [x19, #320]
   30cc8:	b.eq	32168 <__asan_backtrace_create_state@@Base+0x44e0>  // b.none
   30ccc:	ldrb	w21, [x20]
   30cd0:	mov	x0, #0x1                   	// #1
   30cd4:	add	x1, x0, #0x1
   30cd8:	str	x1, [x19, #256]
   30cdc:	strb	w21, [x19, x0]
   30ce0:	add	x20, x20, #0x1
   30ce4:	strb	w21, [x19, #264]
   30ce8:	cmp	x23, x20
   30cec:	b.eq	32168 <__asan_backtrace_create_state@@Base+0x44e0>  // b.none
   30cf0:	ldrb	w21, [x20]
   30cf4:	cmp	x1, #0xff
   30cf8:	b.eq	30c98 <__asan_backtrace_create_state@@Base+0x3010>  // b.none
   30cfc:	mov	x0, x1
   30d00:	b	30cd4 <__asan_backtrace_create_state@@Base+0x304c>
   30d04:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   30d08:	add	x20, x20, #0x208
   30d0c:	mov	x0, x20
   30d10:	bl	64b0 <__asan_internal_strlen@plt>
   30d14:	cbz	x0, 31c3c <__asan_backtrace_create_state@@Base+0x3fb4>
   30d18:	add	x22, x20, x0
   30d1c:	mov	x23, #0x1                   	// #1
   30d20:	ldr	x1, [x19, #256]
   30d24:	b	30d80 <__asan_backtrace_create_state@@Base+0x30f8>
   30d28:	ldp	x3, x2, [x19, #272]
   30d2c:	strb	wzr, [x19, #255]
   30d30:	mov	x0, x19
   30d34:	add	x20, x20, #0x1
   30d38:	blr	x3
   30d3c:	strb	w21, [x19]
   30d40:	ldr	x0, [x19, #320]
   30d44:	str	x23, [x19, #256]
   30d48:	strb	w21, [x19, #264]
   30d4c:	cmp	x20, x22
   30d50:	add	x0, x0, #0x1
   30d54:	str	x0, [x19, #320]
   30d58:	b.eq	31c3c <__asan_backtrace_create_state@@Base+0x3fb4>  // b.none
   30d5c:	ldrb	w21, [x20]
   30d60:	mov	x0, #0x1                   	// #1
   30d64:	add	x1, x0, #0x1
   30d68:	str	x1, [x19, #256]
   30d6c:	strb	w21, [x19, x0]
   30d70:	add	x20, x20, #0x1
   30d74:	strb	w21, [x19, #264]
   30d78:	cmp	x22, x20
   30d7c:	b.eq	31c3c <__asan_backtrace_create_state@@Base+0x3fb4>  // b.none
   30d80:	ldrb	w21, [x20]
   30d84:	cmp	x1, #0xff
   30d88:	b.eq	30d28 <__asan_backtrace_create_state@@Base+0x30a0>  // b.none
   30d8c:	mov	x0, x1
   30d90:	b	30d64 <__asan_backtrace_create_state@@Base+0x30dc>
   30d94:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   30d98:	add	x20, x20, #0xa8
   30d9c:	mov	x0, x20
   30da0:	bl	64b0 <__asan_internal_strlen@plt>
   30da4:	cbz	x0, 31778 <__asan_backtrace_create_state@@Base+0x3af0>
   30da8:	add	x23, x20, x0
   30dac:	mov	x25, #0x1                   	// #1
   30db0:	ldr	x1, [x19, #256]
   30db4:	b	30e10 <__asan_backtrace_create_state@@Base+0x3188>
   30db8:	ldp	x3, x2, [x19, #272]
   30dbc:	strb	wzr, [x19, #255]
   30dc0:	mov	x0, x19
   30dc4:	add	x20, x20, #0x1
   30dc8:	blr	x3
   30dcc:	strb	w21, [x19]
   30dd0:	ldr	x0, [x19, #320]
   30dd4:	str	x25, [x19, #256]
   30dd8:	strb	w21, [x19, #264]
   30ddc:	cmp	x20, x23
   30de0:	add	x0, x0, #0x1
   30de4:	str	x0, [x19, #320]
   30de8:	b.eq	31778 <__asan_backtrace_create_state@@Base+0x3af0>  // b.none
   30dec:	ldrb	w21, [x20]
   30df0:	mov	x0, #0x1                   	// #1
   30df4:	add	x1, x0, #0x1
   30df8:	str	x1, [x19, #256]
   30dfc:	strb	w21, [x19, x0]
   30e00:	add	x20, x20, #0x1
   30e04:	strb	w21, [x19, #264]
   30e08:	cmp	x20, x23
   30e0c:	b.eq	31778 <__asan_backtrace_create_state@@Base+0x3af0>  // b.none
   30e10:	ldrb	w21, [x20]
   30e14:	cmp	x1, #0xff
   30e18:	b.eq	30db8 <__asan_backtrace_create_state@@Base+0x3130>  // b.none
   30e1c:	mov	x0, x1
   30e20:	b	30df4 <__asan_backtrace_create_state@@Base+0x316c>
   30e24:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   30e28:	add	x20, x20, #0xf20
   30e2c:	mov	x0, x20
   30e30:	bl	64b0 <__asan_internal_strlen@plt>
   30e34:	cbz	x0, 316f8 <__asan_backtrace_create_state@@Base+0x3a70>
   30e38:	add	x23, x20, x0
   30e3c:	mov	x25, #0x1                   	// #1
   30e40:	ldr	x1, [x19, #256]
   30e44:	b	30ea0 <__asan_backtrace_create_state@@Base+0x3218>
   30e48:	ldp	x3, x2, [x19, #272]
   30e4c:	strb	wzr, [x19, #255]
   30e50:	mov	x0, x19
   30e54:	add	x20, x20, #0x1
   30e58:	blr	x3
   30e5c:	strb	w21, [x19]
   30e60:	ldr	x0, [x19, #320]
   30e64:	str	x25, [x19, #256]
   30e68:	strb	w21, [x19, #264]
   30e6c:	cmp	x20, x23
   30e70:	add	x0, x0, #0x1
   30e74:	str	x0, [x19, #320]
   30e78:	b.eq	316f8 <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   30e7c:	ldrb	w21, [x20]
   30e80:	mov	x0, #0x1                   	// #1
   30e84:	add	x1, x0, #0x1
   30e88:	str	x1, [x19, #256]
   30e8c:	strb	w21, [x19, x0]
   30e90:	add	x20, x20, #0x1
   30e94:	strb	w21, [x19, #264]
   30e98:	cmp	x23, x20
   30e9c:	b.eq	316f8 <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   30ea0:	ldrb	w21, [x20]
   30ea4:	cmp	x1, #0xff
   30ea8:	b.eq	30e48 <__asan_backtrace_create_state@@Base+0x31c0>  // b.none
   30eac:	mov	x0, x1
   30eb0:	b	30e84 <__asan_backtrace_create_state@@Base+0x31fc>
   30eb4:	ldp	x21, x20, [x2, #8]
   30eb8:	cbz	x21, 30f24 <__asan_backtrace_create_state@@Base+0x329c>
   30ebc:	ldr	w0, [x21, #4]
   30ec0:	cmp	w0, #0x1
   30ec4:	b.gt	331f0 <__asan_backtrace_create_state@@Base+0x5568>
   30ec8:	ldr	w1, [x19, #308]
   30ecc:	cmp	w1, #0x400
   30ed0:	b.gt	331f0 <__asan_backtrace_create_state@@Base+0x5568>
   30ed4:	ldr	x3, [x19, #328]
   30ed8:	add	w0, w0, #0x1
   30edc:	str	w0, [x21, #4]
   30ee0:	add	w1, w1, #0x1
   30ee4:	add	x0, sp, #0x90
   30ee8:	str	w1, [x19, #308]
   30eec:	str	x0, [x19, #328]
   30ef0:	mov	w1, w22
   30ef4:	mov	x0, x19
   30ef8:	mov	x2, x21
   30efc:	stp	x21, x3, [sp, #144]
   30f00:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   30f04:	ldr	w1, [x21, #4]
   30f08:	ldr	x0, [sp, #152]
   30f0c:	str	x0, [x19, #328]
   30f10:	ldr	w0, [x19, #308]
   30f14:	sub	w1, w1, #0x1
   30f18:	str	w1, [x21, #4]
   30f1c:	sub	w0, w0, #0x1
   30f20:	str	w0, [x19, #308]
   30f24:	ldr	x1, [x19, #256]
   30f28:	add	x0, x1, #0x1
   30f2c:	cmp	x1, #0xff
   30f30:	b.ne	30f58 <__asan_backtrace_create_state@@Base+0x32d0>  // b.any
   30f34:	ldp	x3, x2, [x19, #272]
   30f38:	strb	wzr, [x19, #255]
   30f3c:	mov	x0, x19
   30f40:	blr	x3
   30f44:	ldr	x2, [x19, #320]
   30f48:	mov	x0, #0x1                   	// #1
   30f4c:	mov	x1, #0x0                   	// #0
   30f50:	add	x2, x2, x0
   30f54:	str	x2, [x19, #320]
   30f58:	str	x0, [x19, #256]
   30f5c:	mov	w2, #0x7b                  	// #123
   30f60:	strb	w2, [x19, x1]
   30f64:	strb	w2, [x19, #264]
   30f68:	cbz	x20, 32620 <__asan_backtrace_create_state@@Base+0x4998>
   30f6c:	ldr	w1, [x20, #4]
   30f70:	cmp	w1, #0x1
   30f74:	b.gt	32620 <__asan_backtrace_create_state@@Base+0x4998>
   30f78:	ldr	w2, [x19, #308]
   30f7c:	cmp	w2, #0x400
   30f80:	b.gt	32620 <__asan_backtrace_create_state@@Base+0x4998>
   30f84:	ldr	x3, [x19, #328]
   30f88:	add	w1, w1, #0x1
   30f8c:	str	w1, [x20, #4]
   30f90:	add	w2, w2, #0x1
   30f94:	add	x0, sp, #0x90
   30f98:	str	w2, [x19, #308]
   30f9c:	str	x0, [x19, #328]
   30fa0:	mov	w1, w22
   30fa4:	mov	x2, x20
   30fa8:	mov	x0, x19
   30fac:	stp	x20, x3, [sp, #144]
   30fb0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   30fb4:	ldr	w2, [x20, #4]
   30fb8:	ldr	x0, [sp, #152]
   30fbc:	str	x0, [x19, #328]
   30fc0:	ldr	w1, [x19, #308]
   30fc4:	sub	w2, w2, #0x1
   30fc8:	ldr	x0, [x19, #256]
   30fcc:	str	w2, [x20, #4]
   30fd0:	sub	w1, w1, #0x1
   30fd4:	str	w1, [x19, #308]
   30fd8:	add	x1, x0, #0x1
   30fdc:	cmp	x0, #0xff
   30fe0:	b.ne	3100c <__asan_backtrace_create_state@@Base+0x3384>  // b.any
   30fe4:	ldp	x3, x2, [x19, #272]
   30fe8:	strb	wzr, [x19, #255]
   30fec:	mov	x1, x0
   30ff0:	mov	x0, x19
   30ff4:	blr	x3
   30ff8:	ldr	x2, [x19, #320]
   30ffc:	mov	x1, #0x1                   	// #1
   31000:	mov	x0, #0x0                   	// #0
   31004:	add	x2, x2, x1
   31008:	str	x2, [x19, #320]
   3100c:	str	x1, [x19, #256]
   31010:	mov	w1, #0x7d                  	// #125
   31014:	strb	w1, [x19, x0]
   31018:	strb	w1, [x19, #264]
   3101c:	ldp	x21, x22, [sp, #32]
   31020:	ldp	x23, x24, [sp, #48]
   31024:	ldp	x25, x26, [sp, #64]
   31028:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3102c:	ldr	x22, [x2, #8]
   31030:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   31034:	add	x20, x20, #0x100
   31038:	mov	x0, x20
   3103c:	ldr	w23, [x22, #16]
   31040:	bl	64b0 <__asan_internal_strlen@plt>
   31044:	cbz	x0, 328c0 <__asan_backtrace_create_state@@Base+0x4c38>
   31048:	add	x24, x20, x0
   3104c:	mov	x25, #0x1                   	// #1
   31050:	ldr	x1, [x19, #256]
   31054:	b	310b0 <__asan_backtrace_create_state@@Base+0x3428>
   31058:	ldp	x3, x2, [x19, #272]
   3105c:	strb	wzr, [x19, #255]
   31060:	mov	x0, x19
   31064:	add	x20, x20, #0x1
   31068:	blr	x3
   3106c:	strb	w21, [x19]
   31070:	ldr	x0, [x19, #320]
   31074:	str	x25, [x19, #256]
   31078:	strb	w21, [x19, #264]
   3107c:	cmp	x20, x24
   31080:	add	x0, x0, #0x1
   31084:	str	x0, [x19, #320]
   31088:	b.eq	337d0 <__asan_backtrace_create_state@@Base+0x5b48>  // b.none
   3108c:	ldrb	w21, [x20]
   31090:	mov	x0, #0x1                   	// #1
   31094:	add	x1, x0, #0x1
   31098:	str	x1, [x19, #256]
   3109c:	strb	w21, [x19, x0]
   310a0:	add	x20, x20, #0x1
   310a4:	strb	w21, [x19, #264]
   310a8:	cmp	x24, x20
   310ac:	b.eq	328c0 <__asan_backtrace_create_state@@Base+0x4c38>  // b.none
   310b0:	ldrb	w21, [x20]
   310b4:	cmp	x1, #0xff
   310b8:	b.eq	31058 <__asan_backtrace_create_state@@Base+0x33d0>  // b.none
   310bc:	mov	x0, x1
   310c0:	b	31094 <__asan_backtrace_create_state@@Base+0x340c>
   310c4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   310c8:	add	x20, x20, #0x110
   310cc:	mov	x0, x20
   310d0:	bl	64b0 <__asan_internal_strlen@plt>
   310d4:	cbz	x0, 31f24 <__asan_backtrace_create_state@@Base+0x429c>
   310d8:	add	x23, x20, x0
   310dc:	mov	x25, #0x1                   	// #1
   310e0:	ldr	x1, [x19, #256]
   310e4:	b	31140 <__asan_backtrace_create_state@@Base+0x34b8>
   310e8:	ldp	x3, x2, [x19, #272]
   310ec:	strb	wzr, [x19, #255]
   310f0:	mov	x0, x19
   310f4:	add	x20, x20, #0x1
   310f8:	blr	x3
   310fc:	strb	w21, [x19]
   31100:	ldr	x0, [x19, #320]
   31104:	str	x25, [x19, #256]
   31108:	strb	w21, [x19, #264]
   3110c:	cmp	x20, x23
   31110:	add	x0, x0, #0x1
   31114:	str	x0, [x19, #320]
   31118:	b.eq	31f24 <__asan_backtrace_create_state@@Base+0x429c>  // b.none
   3111c:	ldrb	w21, [x20]
   31120:	mov	x0, #0x1                   	// #1
   31124:	add	x1, x0, #0x1
   31128:	str	x1, [x19, #256]
   3112c:	strb	w21, [x19, x0]
   31130:	add	x20, x20, #0x1
   31134:	strb	w21, [x19, #264]
   31138:	cmp	x23, x20
   3113c:	b.eq	31f24 <__asan_backtrace_create_state@@Base+0x429c>  // b.none
   31140:	ldrb	w21, [x20]
   31144:	cmp	x1, #0xff
   31148:	b.eq	310e8 <__asan_backtrace_create_state@@Base+0x3460>  // b.none
   3114c:	mov	x0, x1
   31150:	b	31124 <__asan_backtrace_create_state@@Base+0x349c>
   31154:	ldp	x3, x2, [x19, #272]
   31158:	strb	wzr, [x19, #255]
   3115c:	mov	x1, x0
   31160:	mov	x0, x19
   31164:	blr	x3
   31168:	ldr	x2, [x19, #320]
   3116c:	mov	x1, #0x1                   	// #1
   31170:	mov	x0, #0x0                   	// #0
   31174:	add	x2, x2, x1
   31178:	str	x2, [x19, #320]
   3117c:	b	30a9c <__asan_backtrace_create_state@@Base+0x2e14>
   31180:	ldp	x3, x2, [x19, #272]
   31184:	strb	wzr, [x19, #255]
   31188:	mov	x0, x19
   3118c:	blr	x3
   31190:	ldr	x2, [x19, #320]
   31194:	mov	x0, #0x1                   	// #1
   31198:	mov	x1, #0x0                   	// #0
   3119c:	add	x2, x2, x0
   311a0:	str	x2, [x19, #320]
   311a4:	b	309e4 <__asan_backtrace_create_state@@Base+0x2d5c>
   311a8:	ldr	w0, [sp, #100]
   311ac:	add	w21, w21, #0x1
   311b0:	cmp	w21, w0
   311b4:	b.lt	2f8b0 <__asan_backtrace_create_state@@Base+0x1c28>  // b.tstop
   311b8:	cmp	w23, w21
   311bc:	b.le	3442c <__asan_backtrace_create_state@@Base+0x67a4>
   311c0:	add	x20, sp, #0x90
   311c4:	mov	w24, #0x1                   	// #1
   311c8:	b	31230 <__asan_backtrace_create_state@@Base+0x35a8>
   311cc:	ldr	w1, [x19, #308]
   311d0:	cmp	w1, #0x400
   311d4:	b.gt	31244 <__asan_backtrace_create_state@@Base+0x35bc>
   311d8:	ldr	x3, [x19, #328]
   311dc:	add	w0, w0, #0x1
   311e0:	str	w0, [x28, #4]
   311e4:	add	w1, w1, #0x1
   311e8:	str	w1, [x19, #308]
   311ec:	mov	x0, x19
   311f0:	str	x20, [x19, #328]
   311f4:	mov	w1, w22
   311f8:	mov	x2, x28
   311fc:	stp	x28, x3, [sp, #144]
   31200:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31204:	ldr	w1, [x28, #4]
   31208:	ldr	x0, [sp, #152]
   3120c:	str	x0, [x19, #328]
   31210:	ldr	w0, [x19, #308]
   31214:	sub	w1, w1, #0x1
   31218:	str	w1, [x28, #4]
   3121c:	sub	w0, w0, #0x1
   31220:	str	w0, [x19, #308]
   31224:	add	w21, w21, #0x1
   31228:	cmp	w23, w21
   3122c:	b.le	32550 <__asan_backtrace_create_state@@Base+0x48c8>
   31230:	str	w21, [x19, #316]
   31234:	cbz	x28, 31244 <__asan_backtrace_create_state@@Base+0x35bc>
   31238:	ldr	w0, [x28, #4]
   3123c:	cmp	w0, #0x1
   31240:	b.le	311cc <__asan_backtrace_create_state@@Base+0x3544>
   31244:	str	w24, [x19, #304]
   31248:	b	31224 <__asan_backtrace_create_state@@Base+0x359c>
   3124c:	mov	w0, #0x1                   	// #1
   31250:	str	w0, [x19, #304]
   31254:	b	2f920 <__asan_backtrace_create_state@@Base+0x1c98>
   31258:	ldr	x25, [x0, #8]
   3125c:	add	x0, sp, #0x90
   31260:	stp	x2, x24, [sp, #144]
   31264:	str	wzr, [sp, #160]
   31268:	str	x4, [sp, #168]
   3126c:	str	x0, [x19, #296]
   31270:	cbz	x25, 2e824 <__asan_backtrace_create_state@@Base+0xb9c>
   31274:	ldr	w0, [x25, #4]
   31278:	cmp	w0, #0x1
   3127c:	b.gt	2e82c <__asan_backtrace_create_state@@Base+0xba4>
   31280:	ldr	w1, [x19, #308]
   31284:	cmp	w1, #0x400
   31288:	b.gt	2e82c <__asan_backtrace_create_state@@Base+0xba4>
   3128c:	ldr	x3, [x19, #328]
   31290:	add	w0, w0, #0x1
   31294:	str	w0, [x25, #4]
   31298:	add	w1, w1, #0x1
   3129c:	add	x0, sp, #0x80
   312a0:	str	w1, [x19, #308]
   312a4:	str	x0, [x19, #328]
   312a8:	mov	x2, x25
   312ac:	mov	w1, w22
   312b0:	mov	x0, x19
   312b4:	stp	x25, x3, [sp, #128]
   312b8:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   312bc:	ldr	w1, [x25, #4]
   312c0:	ldr	x0, [sp, #136]
   312c4:	str	x0, [x19, #328]
   312c8:	ldr	w2, [sp, #160]
   312cc:	sub	w1, w1, #0x1
   312d0:	ldr	w0, [x19, #308]
   312d4:	str	w1, [x25, #4]
   312d8:	sub	w0, w0, #0x1
   312dc:	str	w0, [x19, #308]
   312e0:	cbnz	w2, 2e844 <__asan_backtrace_create_state@@Base+0xbbc>
   312e4:	b	2e834 <__asan_backtrace_create_state@@Base+0xbac>
   312e8:	ldp	x21, x22, [sp, #32]
   312ec:	ldp	x23, x24, [sp, #48]
   312f0:	ldp	x25, x26, [sp, #64]
   312f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   312f8:	ldr	x20, [x24, #8]
   312fc:	cbz	x20, 32588 <__asan_backtrace_create_state@@Base+0x4900>
   31300:	ldr	w0, [x20, #4]
   31304:	cmp	w0, #0x1
   31308:	b.gt	32588 <__asan_backtrace_create_state@@Base+0x4900>
   3130c:	ldr	w1, [x19, #308]
   31310:	cmp	w1, #0x400
   31314:	b.gt	32588 <__asan_backtrace_create_state@@Base+0x4900>
   31318:	ldr	x3, [x19, #328]
   3131c:	add	w0, w0, #0x1
   31320:	str	w0, [x20, #4]
   31324:	add	w1, w1, #0x1
   31328:	add	x0, sp, #0x90
   3132c:	str	w1, [x19, #308]
   31330:	str	x0, [x19, #328]
   31334:	mov	w1, w22
   31338:	mov	x0, x19
   3133c:	mov	x2, x20
   31340:	stp	x20, x3, [sp, #144]
   31344:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31348:	ldr	w1, [x20, #4]
   3134c:	ldr	x0, [sp, #152]
   31350:	sub	w1, w1, #0x1
   31354:	ldp	x21, x22, [sp, #32]
   31358:	ldp	x23, x24, [sp, #48]
   3135c:	ldp	x25, x26, [sp, #64]
   31360:	str	x0, [x19, #328]
   31364:	ldr	w0, [x19, #308]
   31368:	str	w1, [x20, #4]
   3136c:	sub	w0, w0, #0x1
   31370:	str	w0, [x19, #308]
   31374:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31378:	ldr	x20, [x24, #8]
   3137c:	cbz	x20, 325a0 <__asan_backtrace_create_state@@Base+0x4918>
   31380:	ldr	w0, [x20, #4]
   31384:	cmp	w0, #0x1
   31388:	b.gt	325a0 <__asan_backtrace_create_state@@Base+0x4918>
   3138c:	ldr	w1, [x19, #308]
   31390:	cmp	w1, #0x400
   31394:	b.gt	325a0 <__asan_backtrace_create_state@@Base+0x4918>
   31398:	ldr	x3, [x19, #328]
   3139c:	add	w0, w0, #0x1
   313a0:	str	w0, [x20, #4]
   313a4:	add	w1, w1, #0x1
   313a8:	add	x0, sp, #0x90
   313ac:	str	w1, [x19, #308]
   313b0:	str	x0, [x19, #328]
   313b4:	mov	w1, w22
   313b8:	mov	x0, x19
   313bc:	mov	x2, x20
   313c0:	stp	x20, x3, [sp, #144]
   313c4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   313c8:	ldr	w1, [x20, #4]
   313cc:	ldr	x0, [sp, #152]
   313d0:	sub	w1, w1, #0x1
   313d4:	ldp	x21, x22, [sp, #32]
   313d8:	ldp	x23, x24, [sp, #48]
   313dc:	ldp	x25, x26, [sp, #64]
   313e0:	str	x0, [x19, #328]
   313e4:	ldr	w0, [x19, #308]
   313e8:	str	w1, [x20, #4]
   313ec:	sub	w0, w0, #0x1
   313f0:	str	w0, [x19, #308]
   313f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   313f8:	ldr	x20, [x24, #8]
   313fc:	cbz	x20, 325d0 <__asan_backtrace_create_state@@Base+0x4948>
   31400:	ldr	w0, [x20, #4]
   31404:	cmp	w0, #0x1
   31408:	b.gt	325d0 <__asan_backtrace_create_state@@Base+0x4948>
   3140c:	ldr	w1, [x19, #308]
   31410:	cmp	w1, #0x400
   31414:	b.gt	325d0 <__asan_backtrace_create_state@@Base+0x4948>
   31418:	ldr	x3, [x19, #328]
   3141c:	add	w0, w0, #0x1
   31420:	str	w0, [x20, #4]
   31424:	add	w1, w1, #0x1
   31428:	add	x0, sp, #0x90
   3142c:	str	w1, [x19, #308]
   31430:	str	x0, [x19, #328]
   31434:	mov	w1, w22
   31438:	mov	x0, x19
   3143c:	mov	x2, x20
   31440:	stp	x20, x3, [sp, #144]
   31444:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31448:	ldr	w1, [x20, #4]
   3144c:	ldr	x0, [sp, #152]
   31450:	sub	w1, w1, #0x1
   31454:	ldp	x21, x22, [sp, #32]
   31458:	ldp	x23, x24, [sp, #48]
   3145c:	ldp	x25, x26, [sp, #64]
   31460:	str	x0, [x19, #328]
   31464:	ldr	w0, [x19, #308]
   31468:	str	w1, [x20, #4]
   3146c:	sub	w0, w0, #0x1
   31470:	str	w0, [x19, #308]
   31474:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31478:	ldr	x20, [x24, #8]
   3147c:	cbz	x20, 325b8 <__asan_backtrace_create_state@@Base+0x4930>
   31480:	ldr	w0, [x20, #4]
   31484:	cmp	w0, #0x1
   31488:	b.gt	325b8 <__asan_backtrace_create_state@@Base+0x4930>
   3148c:	ldr	w1, [x19, #308]
   31490:	cmp	w1, #0x400
   31494:	b.gt	325b8 <__asan_backtrace_create_state@@Base+0x4930>
   31498:	ldr	x3, [x19, #328]
   3149c:	add	w0, w0, #0x1
   314a0:	str	w0, [x20, #4]
   314a4:	add	w1, w1, #0x1
   314a8:	add	x0, sp, #0x90
   314ac:	str	w1, [x19, #308]
   314b0:	str	x0, [x19, #328]
   314b4:	mov	w1, w22
   314b8:	mov	x0, x19
   314bc:	mov	x2, x20
   314c0:	stp	x20, x3, [sp, #144]
   314c4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   314c8:	ldr	w1, [x20, #4]
   314cc:	ldr	x0, [sp, #152]
   314d0:	sub	w1, w1, #0x1
   314d4:	ldp	x21, x22, [sp, #32]
   314d8:	ldp	x23, x24, [sp, #48]
   314dc:	ldp	x25, x26, [sp, #64]
   314e0:	str	x0, [x19, #328]
   314e4:	ldr	w0, [x19, #308]
   314e8:	str	w1, [x20, #4]
   314ec:	sub	w0, w0, #0x1
   314f0:	str	w0, [x19, #308]
   314f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   314f8:	ldr	x20, [x24, #8]
   314fc:	cbz	x20, 32570 <__asan_backtrace_create_state@@Base+0x48e8>
   31500:	ldr	w0, [x20, #4]
   31504:	cmp	w0, #0x1
   31508:	b.gt	32570 <__asan_backtrace_create_state@@Base+0x48e8>
   3150c:	ldr	w1, [x19, #308]
   31510:	cmp	w1, #0x400
   31514:	b.gt	32570 <__asan_backtrace_create_state@@Base+0x48e8>
   31518:	ldr	x3, [x19, #328]
   3151c:	add	w0, w0, #0x1
   31520:	str	w0, [x20, #4]
   31524:	add	w1, w1, #0x1
   31528:	add	x0, sp, #0x90
   3152c:	str	w1, [x19, #308]
   31530:	str	x0, [x19, #328]
   31534:	mov	w1, w22
   31538:	mov	x0, x19
   3153c:	mov	x2, x20
   31540:	stp	x20, x3, [sp, #144]
   31544:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31548:	ldr	w1, [x20, #4]
   3154c:	ldr	x0, [sp, #152]
   31550:	str	x0, [x19, #328]
   31554:	ldr	w0, [x19, #308]
   31558:	sub	w1, w1, #0x1
   3155c:	str	w1, [x20, #4]
   31560:	sub	w0, w0, #0x1
   31564:	str	w0, [x19, #308]
   31568:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   3156c:	add	x20, x20, #0xf80
   31570:	mov	x0, x20
   31574:	bl	64b0 <__asan_internal_strlen@plt>
   31578:	cbz	x0, 315f8 <__asan_backtrace_create_state@@Base+0x3970>
   3157c:	add	x23, x20, x0
   31580:	mov	x25, #0x1                   	// #1
   31584:	ldr	x1, [x19, #256]
   31588:	b	315e4 <__asan_backtrace_create_state@@Base+0x395c>
   3158c:	ldp	x3, x2, [x19, #272]
   31590:	strb	wzr, [x19, #255]
   31594:	mov	x0, x19
   31598:	add	x20, x20, #0x1
   3159c:	blr	x3
   315a0:	strb	w21, [x19]
   315a4:	ldr	x0, [x19, #320]
   315a8:	str	x25, [x19, #256]
   315ac:	strb	w21, [x19, #264]
   315b0:	cmp	x20, x23
   315b4:	add	x0, x0, #0x1
   315b8:	str	x0, [x19, #320]
   315bc:	b.eq	315f8 <__asan_backtrace_create_state@@Base+0x3970>  // b.none
   315c0:	ldrb	w21, [x20]
   315c4:	mov	x0, #0x1                   	// #1
   315c8:	add	x1, x0, #0x1
   315cc:	str	x1, [x19, #256]
   315d0:	strb	w21, [x19, x0]
   315d4:	add	x20, x20, #0x1
   315d8:	strb	w21, [x19, #264]
   315dc:	cmp	x23, x20
   315e0:	b.eq	315f8 <__asan_backtrace_create_state@@Base+0x3970>  // b.none
   315e4:	ldrb	w21, [x20]
   315e8:	cmp	x1, #0xff
   315ec:	b.eq	3158c <__asan_backtrace_create_state@@Base+0x3904>  // b.none
   315f0:	mov	x0, x1
   315f4:	b	315c8 <__asan_backtrace_create_state@@Base+0x3940>
   315f8:	ldr	x20, [x24, #16]
   315fc:	cbz	x20, 325e8 <__asan_backtrace_create_state@@Base+0x4960>
   31600:	ldr	w0, [x20, #4]
   31604:	cmp	w0, #0x1
   31608:	b.gt	325e8 <__asan_backtrace_create_state@@Base+0x4960>
   3160c:	ldr	w1, [x19, #308]
   31610:	cmp	w1, #0x400
   31614:	b.gt	325e8 <__asan_backtrace_create_state@@Base+0x4960>
   31618:	ldr	x3, [x19, #328]
   3161c:	add	w0, w0, #0x1
   31620:	str	w0, [x20, #4]
   31624:	add	w1, w1, #0x1
   31628:	add	x0, sp, #0x90
   3162c:	str	w1, [x19, #308]
   31630:	str	x0, [x19, #328]
   31634:	mov	w1, w22
   31638:	mov	x0, x19
   3163c:	mov	x2, x20
   31640:	stp	x20, x3, [sp, #144]
   31644:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31648:	ldr	w1, [x20, #4]
   3164c:	ldr	x0, [sp, #152]
   31650:	sub	w1, w1, #0x1
   31654:	ldp	x21, x22, [sp, #32]
   31658:	ldp	x23, x24, [sp, #48]
   3165c:	ldp	x25, x26, [sp, #64]
   31660:	str	x0, [x19, #328]
   31664:	ldr	w0, [x19, #308]
   31668:	str	w1, [x20, #4]
   3166c:	sub	w0, w0, #0x1
   31670:	str	w0, [x19, #308]
   31674:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31678:	ldr	x20, [x24, #8]
   3167c:	cbz	x20, 3262c <__asan_backtrace_create_state@@Base+0x49a4>
   31680:	ldr	w0, [x20, #4]
   31684:	cmp	w0, #0x1
   31688:	b.gt	3262c <__asan_backtrace_create_state@@Base+0x49a4>
   3168c:	ldr	w1, [x19, #308]
   31690:	cmp	w1, #0x400
   31694:	b.gt	3262c <__asan_backtrace_create_state@@Base+0x49a4>
   31698:	ldr	x3, [x19, #328]
   3169c:	add	w0, w0, #0x1
   316a0:	str	w0, [x20, #4]
   316a4:	add	w1, w1, #0x1
   316a8:	add	x0, sp, #0x90
   316ac:	str	w1, [x19, #308]
   316b0:	str	x0, [x19, #328]
   316b4:	mov	w1, w22
   316b8:	mov	x0, x19
   316bc:	mov	x2, x20
   316c0:	stp	x20, x3, [sp, #144]
   316c4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   316c8:	ldr	w1, [x20, #4]
   316cc:	ldr	x0, [sp, #152]
   316d0:	sub	w1, w1, #0x1
   316d4:	ldp	x21, x22, [sp, #32]
   316d8:	ldp	x23, x24, [sp, #48]
   316dc:	ldp	x25, x26, [sp, #64]
   316e0:	str	x0, [x19, #328]
   316e4:	ldr	w0, [x19, #308]
   316e8:	str	w1, [x20, #4]
   316ec:	sub	w0, w0, #0x1
   316f0:	str	w0, [x19, #308]
   316f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   316f8:	ldr	x20, [x24, #8]
   316fc:	cbz	x20, 32644 <__asan_backtrace_create_state@@Base+0x49bc>
   31700:	ldr	w0, [x20, #4]
   31704:	cmp	w0, #0x1
   31708:	b.gt	32644 <__asan_backtrace_create_state@@Base+0x49bc>
   3170c:	ldr	w1, [x19, #308]
   31710:	cmp	w1, #0x400
   31714:	b.gt	32644 <__asan_backtrace_create_state@@Base+0x49bc>
   31718:	ldr	x3, [x19, #328]
   3171c:	add	w0, w0, #0x1
   31720:	str	w0, [x20, #4]
   31724:	add	w1, w1, #0x1
   31728:	add	x0, sp, #0x90
   3172c:	str	w1, [x19, #308]
   31730:	str	x0, [x19, #328]
   31734:	mov	w1, w22
   31738:	mov	x0, x19
   3173c:	mov	x2, x20
   31740:	stp	x20, x3, [sp, #144]
   31744:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31748:	ldr	w1, [x20, #4]
   3174c:	ldr	x0, [sp, #152]
   31750:	sub	w1, w1, #0x1
   31754:	ldp	x21, x22, [sp, #32]
   31758:	ldp	x23, x24, [sp, #48]
   3175c:	ldp	x25, x26, [sp, #64]
   31760:	str	x0, [x19, #328]
   31764:	ldr	w0, [x19, #308]
   31768:	str	w1, [x20, #4]
   3176c:	sub	w0, w0, #0x1
   31770:	str	w0, [x19, #308]
   31774:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31778:	ldr	x20, [x24, #8]
   3177c:	cbz	x20, 326cc <__asan_backtrace_create_state@@Base+0x4a44>
   31780:	ldr	w0, [x20, #4]
   31784:	cmp	w0, #0x1
   31788:	b.gt	326cc <__asan_backtrace_create_state@@Base+0x4a44>
   3178c:	ldr	w1, [x19, #308]
   31790:	cmp	w1, #0x400
   31794:	b.gt	326cc <__asan_backtrace_create_state@@Base+0x4a44>
   31798:	ldr	x3, [x19, #328]
   3179c:	add	w0, w0, #0x1
   317a0:	str	w0, [x20, #4]
   317a4:	add	w1, w1, #0x1
   317a8:	add	x0, sp, #0x90
   317ac:	str	w1, [x19, #308]
   317b0:	str	x0, [x19, #328]
   317b4:	mov	w1, w22
   317b8:	mov	x0, x19
   317bc:	mov	x2, x20
   317c0:	stp	x20, x3, [sp, #144]
   317c4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   317c8:	ldr	w1, [x20, #4]
   317cc:	ldr	x0, [sp, #152]
   317d0:	sub	w1, w1, #0x1
   317d4:	ldp	x21, x22, [sp, #32]
   317d8:	ldp	x23, x24, [sp, #48]
   317dc:	ldp	x25, x26, [sp, #64]
   317e0:	str	x0, [x19, #328]
   317e4:	ldr	w0, [x19, #308]
   317e8:	str	w1, [x20, #4]
   317ec:	sub	w0, w0, #0x1
   317f0:	str	w0, [x19, #308]
   317f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   317f8:	ldr	x20, [x24, #16]
   317fc:	cbz	x20, 32564 <__asan_backtrace_create_state@@Base+0x48dc>
   31800:	ldr	w0, [x20, #4]
   31804:	cmp	w0, #0x1
   31808:	b.gt	32564 <__asan_backtrace_create_state@@Base+0x48dc>
   3180c:	ldr	w1, [x19, #308]
   31810:	cmp	w1, #0x400
   31814:	b.gt	32564 <__asan_backtrace_create_state@@Base+0x48dc>
   31818:	ldr	x3, [x19, #328]
   3181c:	add	w0, w0, #0x1
   31820:	str	w0, [x20, #4]
   31824:	add	w1, w1, #0x1
   31828:	add	x0, sp, #0x90
   3182c:	str	w1, [x19, #308]
   31830:	str	x0, [x19, #328]
   31834:	mov	w1, w22
   31838:	mov	x0, x19
   3183c:	mov	x2, x20
   31840:	stp	x20, x3, [sp, #144]
   31844:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31848:	ldr	w1, [x20, #4]
   3184c:	ldr	x0, [sp, #152]
   31850:	str	x0, [x19, #328]
   31854:	ldr	w0, [x19, #308]
   31858:	sub	w1, w1, #0x1
   3185c:	str	w1, [x20, #4]
   31860:	sub	w0, w0, #0x1
   31864:	str	w0, [x19, #308]
   31868:	ldr	x1, [x19, #256]
   3186c:	add	x0, x1, #0x1
   31870:	cmp	x1, #0xff
   31874:	b.ne	3189c <__asan_backtrace_create_state@@Base+0x3c14>  // b.any
   31878:	ldp	x3, x2, [x19, #272]
   3187c:	strb	wzr, [x19, #255]
   31880:	mov	x0, x19
   31884:	blr	x3
   31888:	ldr	x2, [x19, #320]
   3188c:	mov	x0, #0x1                   	// #1
   31890:	mov	x1, #0x0                   	// #0
   31894:	add	x2, x2, x0
   31898:	str	x2, [x19, #320]
   3189c:	str	x0, [x19, #256]
   318a0:	mov	w0, #0x5d                  	// #93
   318a4:	strb	w0, [x19, x1]
   318a8:	strb	w0, [x19, #264]
   318ac:	ldp	x21, x22, [sp, #32]
   318b0:	ldp	x23, x24, [sp, #48]
   318b4:	ldp	x25, x26, [sp, #64]
   318b8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   318bc:	ldr	x20, [x24, #8]
   318c0:	cbz	x20, 326e4 <__asan_backtrace_create_state@@Base+0x4a5c>
   318c4:	ldr	w0, [x20, #4]
   318c8:	cmp	w0, #0x1
   318cc:	b.gt	326e4 <__asan_backtrace_create_state@@Base+0x4a5c>
   318d0:	ldr	w1, [x19, #308]
   318d4:	cmp	w1, #0x400
   318d8:	b.gt	326e4 <__asan_backtrace_create_state@@Base+0x4a5c>
   318dc:	ldr	x3, [x19, #328]
   318e0:	add	w0, w0, #0x1
   318e4:	str	w0, [x20, #4]
   318e8:	add	w1, w1, #0x1
   318ec:	add	x0, sp, #0x90
   318f0:	str	w1, [x19, #308]
   318f4:	str	x0, [x19, #328]
   318f8:	mov	w1, w22
   318fc:	mov	x0, x19
   31900:	mov	x2, x20
   31904:	stp	x20, x3, [sp, #144]
   31908:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3190c:	ldr	w1, [x20, #4]
   31910:	ldr	x0, [sp, #152]
   31914:	sub	w1, w1, #0x1
   31918:	ldp	x21, x22, [sp, #32]
   3191c:	ldp	x23, x24, [sp, #48]
   31920:	ldp	x25, x26, [sp, #64]
   31924:	str	x0, [x19, #328]
   31928:	ldr	w0, [x19, #308]
   3192c:	str	w1, [x20, #4]
   31930:	sub	w0, w0, #0x1
   31934:	str	w0, [x19, #308]
   31938:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3193c:	ldr	x20, [x24, #8]
   31940:	cbz	x20, 32714 <__asan_backtrace_create_state@@Base+0x4a8c>
   31944:	ldr	w0, [x20, #4]
   31948:	cmp	w0, #0x1
   3194c:	b.gt	32714 <__asan_backtrace_create_state@@Base+0x4a8c>
   31950:	ldr	w1, [x19, #308]
   31954:	cmp	w1, #0x400
   31958:	b.gt	32714 <__asan_backtrace_create_state@@Base+0x4a8c>
   3195c:	ldr	x3, [x19, #328]
   31960:	add	w0, w0, #0x1
   31964:	str	w0, [x20, #4]
   31968:	add	w1, w1, #0x1
   3196c:	add	x0, sp, #0x90
   31970:	str	w1, [x19, #308]
   31974:	str	x0, [x19, #328]
   31978:	mov	w1, w22
   3197c:	mov	x0, x19
   31980:	mov	x2, x20
   31984:	stp	x20, x3, [sp, #144]
   31988:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3198c:	ldr	w1, [x20, #4]
   31990:	ldr	x0, [sp, #152]
   31994:	sub	w1, w1, #0x1
   31998:	ldp	x21, x22, [sp, #32]
   3199c:	ldp	x23, x24, [sp, #48]
   319a0:	ldp	x25, x26, [sp, #64]
   319a4:	str	x0, [x19, #328]
   319a8:	ldr	w0, [x19, #308]
   319ac:	str	w1, [x20, #4]
   319b0:	sub	w0, w0, #0x1
   319b4:	str	w0, [x19, #308]
   319b8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   319bc:	ldr	x20, [x24, #8]
   319c0:	cbz	x20, 326fc <__asan_backtrace_create_state@@Base+0x4a74>
   319c4:	ldr	w0, [x20, #4]
   319c8:	cmp	w0, #0x1
   319cc:	b.gt	326fc <__asan_backtrace_create_state@@Base+0x4a74>
   319d0:	ldr	w1, [x19, #308]
   319d4:	cmp	w1, #0x400
   319d8:	b.gt	326fc <__asan_backtrace_create_state@@Base+0x4a74>
   319dc:	ldr	x3, [x19, #328]
   319e0:	add	w0, w0, #0x1
   319e4:	str	w0, [x20, #4]
   319e8:	add	w1, w1, #0x1
   319ec:	add	x0, sp, #0x90
   319f0:	str	w1, [x19, #308]
   319f4:	str	x0, [x19, #328]
   319f8:	mov	w1, w22
   319fc:	mov	x0, x19
   31a00:	mov	x2, x20
   31a04:	stp	x20, x3, [sp, #144]
   31a08:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31a0c:	ldr	w1, [x20, #4]
   31a10:	ldr	x0, [sp, #152]
   31a14:	sub	w1, w1, #0x1
   31a18:	ldp	x21, x22, [sp, #32]
   31a1c:	ldp	x23, x24, [sp, #48]
   31a20:	ldp	x25, x26, [sp, #64]
   31a24:	str	x0, [x19, #328]
   31a28:	ldr	w0, [x19, #308]
   31a2c:	str	w1, [x20, #4]
   31a30:	sub	w0, w0, #0x1
   31a34:	str	w0, [x19, #308]
   31a38:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31a3c:	ldr	x20, [x24, #16]
   31a40:	cbz	x20, 3265c <__asan_backtrace_create_state@@Base+0x49d4>
   31a44:	ldr	w0, [x20, #4]
   31a48:	cmp	w0, #0x1
   31a4c:	b.gt	3265c <__asan_backtrace_create_state@@Base+0x49d4>
   31a50:	ldr	w1, [x19, #308]
   31a54:	cmp	w1, #0x400
   31a58:	b.gt	3265c <__asan_backtrace_create_state@@Base+0x49d4>
   31a5c:	ldr	x3, [x19, #328]
   31a60:	add	w0, w0, #0x1
   31a64:	str	w0, [x20, #4]
   31a68:	add	w1, w1, #0x1
   31a6c:	add	x0, sp, #0x90
   31a70:	str	w1, [x19, #308]
   31a74:	str	x0, [x19, #328]
   31a78:	mov	w1, w22
   31a7c:	mov	x0, x19
   31a80:	mov	x2, x20
   31a84:	stp	x20, x3, [sp, #144]
   31a88:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31a8c:	ldr	w1, [x20, #4]
   31a90:	ldr	x0, [sp, #152]
   31a94:	str	x0, [x19, #328]
   31a98:	ldr	w0, [x19, #308]
   31a9c:	sub	w1, w1, #0x1
   31aa0:	str	w1, [x20, #4]
   31aa4:	sub	w0, w0, #0x1
   31aa8:	str	w0, [x19, #308]
   31aac:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   31ab0:	add	x20, x20, #0xf90
   31ab4:	mov	x0, x20
   31ab8:	bl	64b0 <__asan_internal_strlen@plt>
   31abc:	cbz	x0, 31b3c <__asan_backtrace_create_state@@Base+0x3eb4>
   31ac0:	add	x23, x20, x0
   31ac4:	mov	x25, #0x1                   	// #1
   31ac8:	ldr	x1, [x19, #256]
   31acc:	b	31b28 <__asan_backtrace_create_state@@Base+0x3ea0>
   31ad0:	ldp	x3, x2, [x19, #272]
   31ad4:	strb	wzr, [x19, #255]
   31ad8:	mov	x0, x19
   31adc:	add	x20, x20, #0x1
   31ae0:	blr	x3
   31ae4:	strb	w21, [x19]
   31ae8:	ldr	x0, [x19, #320]
   31aec:	str	x25, [x19, #256]
   31af0:	strb	w21, [x19, #264]
   31af4:	cmp	x23, x20
   31af8:	add	x0, x0, #0x1
   31afc:	str	x0, [x19, #320]
   31b00:	b.eq	31b3c <__asan_backtrace_create_state@@Base+0x3eb4>  // b.none
   31b04:	ldrb	w21, [x20]
   31b08:	mov	x0, #0x1                   	// #1
   31b0c:	add	x1, x0, #0x1
   31b10:	str	x1, [x19, #256]
   31b14:	strb	w21, [x19, x0]
   31b18:	add	x20, x20, #0x1
   31b1c:	strb	w21, [x19, #264]
   31b20:	cmp	x23, x20
   31b24:	b.eq	31b3c <__asan_backtrace_create_state@@Base+0x3eb4>  // b.none
   31b28:	ldrb	w21, [x20]
   31b2c:	cmp	x1, #0xff
   31b30:	b.eq	31ad0 <__asan_backtrace_create_state@@Base+0x3e48>  // b.none
   31b34:	mov	x0, x1
   31b38:	b	31b0c <__asan_backtrace_create_state@@Base+0x3e84>
   31b3c:	ldr	x20, [x24, #8]
   31b40:	cbz	x20, 3272c <__asan_backtrace_create_state@@Base+0x4aa4>
   31b44:	ldr	w0, [x20, #4]
   31b48:	cmp	w0, #0x1
   31b4c:	b.gt	3272c <__asan_backtrace_create_state@@Base+0x4aa4>
   31b50:	ldr	w1, [x19, #308]
   31b54:	cmp	w1, #0x400
   31b58:	b.gt	3272c <__asan_backtrace_create_state@@Base+0x4aa4>
   31b5c:	ldr	x3, [x19, #328]
   31b60:	add	w0, w0, #0x1
   31b64:	str	w0, [x20, #4]
   31b68:	add	w1, w1, #0x1
   31b6c:	add	x0, sp, #0x90
   31b70:	str	w1, [x19, #308]
   31b74:	str	x0, [x19, #328]
   31b78:	mov	w1, w22
   31b7c:	mov	x0, x19
   31b80:	mov	x2, x20
   31b84:	stp	x20, x3, [sp, #144]
   31b88:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31b8c:	ldr	w1, [x20, #4]
   31b90:	ldr	x0, [sp, #152]
   31b94:	sub	w1, w1, #0x1
   31b98:	ldp	x21, x22, [sp, #32]
   31b9c:	ldp	x23, x24, [sp, #48]
   31ba0:	ldp	x25, x26, [sp, #64]
   31ba4:	str	x0, [x19, #328]
   31ba8:	ldr	w0, [x19, #308]
   31bac:	str	w1, [x20, #4]
   31bb0:	sub	w0, w0, #0x1
   31bb4:	str	w0, [x19, #308]
   31bb8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31bbc:	ldr	x20, [x24, #8]
   31bc0:	cbz	x20, 32850 <__asan_backtrace_create_state@@Base+0x4bc8>
   31bc4:	ldr	w0, [x20, #4]
   31bc8:	cmp	w0, #0x1
   31bcc:	b.gt	32850 <__asan_backtrace_create_state@@Base+0x4bc8>
   31bd0:	ldr	w1, [x19, #308]
   31bd4:	cmp	w1, #0x400
   31bd8:	b.gt	32850 <__asan_backtrace_create_state@@Base+0x4bc8>
   31bdc:	ldr	x3, [x19, #328]
   31be0:	add	w0, w0, #0x1
   31be4:	str	w0, [x20, #4]
   31be8:	add	w1, w1, #0x1
   31bec:	add	x0, sp, #0x90
   31bf0:	str	w1, [x19, #308]
   31bf4:	str	x0, [x19, #328]
   31bf8:	mov	w1, w22
   31bfc:	mov	x0, x19
   31c00:	mov	x2, x20
   31c04:	stp	x20, x3, [sp, #144]
   31c08:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31c0c:	ldr	w1, [x20, #4]
   31c10:	ldr	x0, [sp, #152]
   31c14:	sub	w1, w1, #0x1
   31c18:	ldp	x21, x22, [sp, #32]
   31c1c:	ldp	x23, x24, [sp, #48]
   31c20:	ldp	x25, x26, [sp, #64]
   31c24:	str	x0, [x19, #328]
   31c28:	ldr	w0, [x19, #308]
   31c2c:	str	w1, [x20, #4]
   31c30:	sub	w0, w0, #0x1
   31c34:	str	w0, [x19, #308]
   31c38:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31c3c:	ldr	x2, [x24, #8]
   31c40:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   31c44:	add	x1, x1, #0x378
   31c48:	add	x20, sp, #0x90
   31c4c:	add	w2, w2, #0x1
   31c50:	mov	x0, x20
   31c54:	bl	65f0 <sprintf@plt>
   31c58:	mov	x0, x20
   31c5c:	bl	64b0 <__asan_internal_strlen@plt>
   31c60:	cbz	x0, 32a48 <__asan_backtrace_create_state@@Base+0x4dc0>
   31c64:	add	x22, x20, x0
   31c68:	mov	x23, #0x1                   	// #1
   31c6c:	ldr	x1, [x19, #256]
   31c70:	b	31ccc <__asan_backtrace_create_state@@Base+0x4044>
   31c74:	ldp	x3, x2, [x19, #272]
   31c78:	strb	wzr, [x19, #255]
   31c7c:	mov	x0, x19
   31c80:	add	x20, x20, #0x1
   31c84:	blr	x3
   31c88:	strb	w21, [x19]
   31c8c:	ldr	x0, [x19, #320]
   31c90:	str	x23, [x19, #256]
   31c94:	strb	w21, [x19, #264]
   31c98:	cmp	x20, x22
   31c9c:	add	x0, x0, #0x1
   31ca0:	str	x0, [x19, #320]
   31ca4:	b.eq	32ae8 <__asan_backtrace_create_state@@Base+0x4e60>  // b.none
   31ca8:	ldrb	w21, [x20]
   31cac:	mov	x0, #0x1                   	// #1
   31cb0:	add	x1, x0, #0x1
   31cb4:	str	x1, [x19, #256]
   31cb8:	strb	w21, [x19, x0]
   31cbc:	add	x20, x20, #0x1
   31cc0:	strb	w21, [x19, #264]
   31cc4:	cmp	x22, x20
   31cc8:	b.eq	32a4c <__asan_backtrace_create_state@@Base+0x4dc4>  // b.none
   31ccc:	ldrb	w21, [x20]
   31cd0:	cmp	x1, #0xff
   31cd4:	b.eq	31c74 <__asan_backtrace_create_state@@Base+0x3fec>  // b.none
   31cd8:	mov	x0, x1
   31cdc:	b	31cb0 <__asan_backtrace_create_state@@Base+0x4028>
   31ce0:	ldr	x20, [x24, #8]
   31ce4:	cbz	x20, 32744 <__asan_backtrace_create_state@@Base+0x4abc>
   31ce8:	ldr	w0, [x20, #4]
   31cec:	cmp	w0, #0x1
   31cf0:	b.gt	32744 <__asan_backtrace_create_state@@Base+0x4abc>
   31cf4:	ldr	w1, [x19, #308]
   31cf8:	cmp	w1, #0x400
   31cfc:	b.gt	32744 <__asan_backtrace_create_state@@Base+0x4abc>
   31d00:	ldr	x3, [x19, #328]
   31d04:	add	w0, w0, #0x1
   31d08:	str	w0, [x20, #4]
   31d0c:	add	w1, w1, #0x1
   31d10:	add	x0, sp, #0x90
   31d14:	str	w1, [x19, #308]
   31d18:	str	x0, [x19, #328]
   31d1c:	mov	w1, w22
   31d20:	mov	x0, x19
   31d24:	mov	x2, x20
   31d28:	stp	x20, x3, [sp, #144]
   31d2c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31d30:	ldr	w1, [x20, #4]
   31d34:	ldr	x0, [sp, #152]
   31d38:	sub	w1, w1, #0x1
   31d3c:	ldp	x21, x22, [sp, #32]
   31d40:	ldp	x23, x24, [sp, #48]
   31d44:	ldp	x25, x26, [sp, #64]
   31d48:	str	x0, [x19, #328]
   31d4c:	ldr	w0, [x19, #308]
   31d50:	str	w1, [x20, #4]
   31d54:	sub	w0, w0, #0x1
   31d58:	str	w0, [x19, #308]
   31d5c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31d60:	ldr	x20, [x24, #8]
   31d64:	cbz	x20, 32774 <__asan_backtrace_create_state@@Base+0x4aec>
   31d68:	ldr	w0, [x20, #4]
   31d6c:	cmp	w0, #0x1
   31d70:	b.gt	32774 <__asan_backtrace_create_state@@Base+0x4aec>
   31d74:	ldr	w1, [x19, #308]
   31d78:	cmp	w1, #0x400
   31d7c:	b.gt	32774 <__asan_backtrace_create_state@@Base+0x4aec>
   31d80:	ldr	x3, [x19, #328]
   31d84:	add	w0, w0, #0x1
   31d88:	str	w0, [x20, #4]
   31d8c:	add	w1, w1, #0x1
   31d90:	add	x0, sp, #0x90
   31d94:	str	w1, [x19, #308]
   31d98:	str	x0, [x19, #328]
   31d9c:	mov	w1, w22
   31da0:	mov	x0, x19
   31da4:	mov	x2, x20
   31da8:	stp	x20, x3, [sp, #144]
   31dac:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31db0:	ldr	w1, [x20, #4]
   31db4:	ldr	x0, [sp, #152]
   31db8:	sub	w1, w1, #0x1
   31dbc:	ldp	x21, x22, [sp, #32]
   31dc0:	ldp	x23, x24, [sp, #48]
   31dc4:	ldp	x25, x26, [sp, #64]
   31dc8:	str	x0, [x19, #328]
   31dcc:	ldr	w0, [x19, #308]
   31dd0:	str	w1, [x20, #4]
   31dd4:	sub	w0, w0, #0x1
   31dd8:	str	w0, [x19, #308]
   31ddc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31de0:	ldr	x20, [x24, #16]
   31de4:	cbz	x20, 32820 <__asan_backtrace_create_state@@Base+0x4b98>
   31de8:	ldr	w0, [x20, #4]
   31dec:	cmp	w0, #0x1
   31df0:	b.gt	32820 <__asan_backtrace_create_state@@Base+0x4b98>
   31df4:	ldr	w1, [x19, #308]
   31df8:	cmp	w1, #0x400
   31dfc:	b.gt	32820 <__asan_backtrace_create_state@@Base+0x4b98>
   31e00:	ldr	x3, [x19, #328]
   31e04:	add	w0, w0, #0x1
   31e08:	str	w0, [x20, #4]
   31e0c:	add	w1, w1, #0x1
   31e10:	add	x0, sp, #0x90
   31e14:	str	w1, [x19, #308]
   31e18:	str	x0, [x19, #328]
   31e1c:	mov	w1, w22
   31e20:	mov	x0, x19
   31e24:	mov	x2, x20
   31e28:	stp	x20, x3, [sp, #144]
   31e2c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31e30:	ldr	w1, [x20, #4]
   31e34:	ldr	x0, [sp, #152]
   31e38:	str	x0, [x19, #328]
   31e3c:	ldr	w0, [x19, #308]
   31e40:	sub	w1, w1, #0x1
   31e44:	str	w1, [x20, #4]
   31e48:	sub	w0, w0, #0x1
   31e4c:	str	w0, [x19, #308]
   31e50:	ldr	x1, [x19, #256]
   31e54:	add	x0, x1, #0x1
   31e58:	cmp	x1, #0xff
   31e5c:	b.ne	31e84 <__asan_backtrace_create_state@@Base+0x41fc>  // b.any
   31e60:	ldp	x3, x2, [x19, #272]
   31e64:	strb	wzr, [x19, #255]
   31e68:	mov	x0, x19
   31e6c:	blr	x3
   31e70:	ldr	x2, [x19, #320]
   31e74:	mov	x0, #0x1                   	// #1
   31e78:	mov	x1, #0x0                   	// #0
   31e7c:	add	x2, x2, x0
   31e80:	str	x2, [x19, #320]
   31e84:	str	x0, [x19, #256]
   31e88:	mov	w0, #0x5d                  	// #93
   31e8c:	strb	w0, [x19, x1]
   31e90:	strb	w0, [x19, #264]
   31e94:	ldp	x21, x22, [sp, #32]
   31e98:	ldp	x23, x24, [sp, #48]
   31e9c:	ldp	x25, x26, [sp, #64]
   31ea0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31ea4:	ldr	x20, [x24, #8]
   31ea8:	cbz	x20, 3282c <__asan_backtrace_create_state@@Base+0x4ba4>
   31eac:	ldr	w0, [x20, #4]
   31eb0:	cmp	w0, #0x1
   31eb4:	b.gt	3282c <__asan_backtrace_create_state@@Base+0x4ba4>
   31eb8:	ldr	w1, [x19, #308]
   31ebc:	cmp	w1, #0x400
   31ec0:	b.gt	3282c <__asan_backtrace_create_state@@Base+0x4ba4>
   31ec4:	ldr	x3, [x19, #328]
   31ec8:	add	w0, w0, #0x1
   31ecc:	str	w0, [x20, #4]
   31ed0:	add	w1, w1, #0x1
   31ed4:	add	x0, sp, #0x90
   31ed8:	str	w1, [x19, #308]
   31edc:	str	x0, [x19, #328]
   31ee0:	mov	w1, w22
   31ee4:	mov	x0, x19
   31ee8:	mov	x2, x20
   31eec:	stp	x20, x3, [sp, #144]
   31ef0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31ef4:	ldr	w1, [x20, #4]
   31ef8:	ldr	x0, [sp, #152]
   31efc:	sub	w1, w1, #0x1
   31f00:	ldp	x21, x22, [sp, #32]
   31f04:	ldp	x23, x24, [sp, #48]
   31f08:	ldp	x25, x26, [sp, #64]
   31f0c:	str	x0, [x19, #328]
   31f10:	ldr	w0, [x19, #308]
   31f14:	str	w1, [x20, #4]
   31f18:	sub	w0, w0, #0x1
   31f1c:	str	w0, [x19, #308]
   31f20:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31f24:	ldr	x20, [x24, #16]
   31f28:	cbz	x20, 32808 <__asan_backtrace_create_state@@Base+0x4b80>
   31f2c:	ldr	w0, [x20, #4]
   31f30:	cmp	w0, #0x1
   31f34:	b.gt	32808 <__asan_backtrace_create_state@@Base+0x4b80>
   31f38:	ldr	w1, [x19, #308]
   31f3c:	cmp	w1, #0x400
   31f40:	b.gt	32808 <__asan_backtrace_create_state@@Base+0x4b80>
   31f44:	ldr	x3, [x19, #328]
   31f48:	add	w0, w0, #0x1
   31f4c:	str	w0, [x20, #4]
   31f50:	add	w1, w1, #0x1
   31f54:	add	x0, sp, #0x90
   31f58:	str	w1, [x19, #308]
   31f5c:	str	x0, [x19, #328]
   31f60:	mov	w1, w22
   31f64:	mov	x0, x19
   31f68:	mov	x2, x20
   31f6c:	stp	x20, x3, [sp, #144]
   31f70:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31f74:	ldr	w1, [x20, #4]
   31f78:	ldr	x0, [sp, #152]
   31f7c:	sub	w1, w1, #0x1
   31f80:	ldp	x21, x22, [sp, #32]
   31f84:	ldp	x23, x24, [sp, #48]
   31f88:	ldp	x25, x26, [sp, #64]
   31f8c:	str	x0, [x19, #328]
   31f90:	ldr	w0, [x19, #308]
   31f94:	str	w1, [x20, #4]
   31f98:	sub	w0, w0, #0x1
   31f9c:	str	w0, [x19, #308]
   31fa0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   31fa4:	ldr	x20, [x24, #8]
   31fa8:	cbz	x20, 32868 <__asan_backtrace_create_state@@Base+0x4be0>
   31fac:	ldr	w0, [x20, #4]
   31fb0:	cmp	w0, #0x1
   31fb4:	b.gt	32868 <__asan_backtrace_create_state@@Base+0x4be0>
   31fb8:	ldr	w1, [x19, #308]
   31fbc:	cmp	w1, #0x400
   31fc0:	b.gt	32868 <__asan_backtrace_create_state@@Base+0x4be0>
   31fc4:	ldr	x3, [x19, #328]
   31fc8:	add	w0, w0, #0x1
   31fcc:	str	w0, [x20, #4]
   31fd0:	add	w1, w1, #0x1
   31fd4:	add	x0, sp, #0x90
   31fd8:	str	w1, [x19, #308]
   31fdc:	str	x0, [x19, #328]
   31fe0:	mov	w1, w22
   31fe4:	mov	x0, x19
   31fe8:	mov	x2, x20
   31fec:	stp	x20, x3, [sp, #144]
   31ff0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   31ff4:	ldr	w1, [x20, #4]
   31ff8:	ldr	x0, [sp, #152]
   31ffc:	sub	w1, w1, #0x1
   32000:	ldp	x21, x22, [sp, #32]
   32004:	ldp	x23, x24, [sp, #48]
   32008:	ldp	x25, x26, [sp, #64]
   3200c:	str	x0, [x19, #328]
   32010:	ldr	w0, [x19, #308]
   32014:	str	w1, [x20, #4]
   32018:	sub	w0, w0, #0x1
   3201c:	str	w0, [x19, #308]
   32020:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32024:	ldr	x20, [x24, #8]
   32028:	cbz	x20, 3278c <__asan_backtrace_create_state@@Base+0x4b04>
   3202c:	ldr	w0, [x20, #4]
   32030:	cmp	w0, #0x1
   32034:	b.gt	3278c <__asan_backtrace_create_state@@Base+0x4b04>
   32038:	ldr	w1, [x19, #308]
   3203c:	cmp	w1, #0x400
   32040:	b.gt	3278c <__asan_backtrace_create_state@@Base+0x4b04>
   32044:	ldr	x3, [x19, #328]
   32048:	add	w0, w0, #0x1
   3204c:	str	w0, [x20, #4]
   32050:	add	w1, w1, #0x1
   32054:	add	x0, sp, #0x90
   32058:	str	w1, [x19, #308]
   3205c:	str	x0, [x19, #328]
   32060:	mov	w1, w22
   32064:	mov	x0, x19
   32068:	mov	x2, x20
   3206c:	stp	x20, x3, [sp, #144]
   32070:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32074:	ldr	w1, [x20, #4]
   32078:	ldr	x0, [sp, #152]
   3207c:	sub	w1, w1, #0x1
   32080:	ldp	x21, x22, [sp, #32]
   32084:	ldp	x23, x24, [sp, #48]
   32088:	ldp	x25, x26, [sp, #64]
   3208c:	str	x0, [x19, #328]
   32090:	ldr	w0, [x19, #308]
   32094:	str	w1, [x20, #4]
   32098:	sub	w0, w0, #0x1
   3209c:	str	w0, [x19, #308]
   320a0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   320a4:	ldr	x20, [x24, #8]
   320a8:	cbz	x20, 32844 <__asan_backtrace_create_state@@Base+0x4bbc>
   320ac:	ldr	w0, [x20, #4]
   320b0:	cmp	w0, #0x1
   320b4:	b.gt	32844 <__asan_backtrace_create_state@@Base+0x4bbc>
   320b8:	ldr	w1, [x19, #308]
   320bc:	cmp	w1, #0x400
   320c0:	b.gt	32844 <__asan_backtrace_create_state@@Base+0x4bbc>
   320c4:	ldr	x3, [x19, #328]
   320c8:	add	w0, w0, #0x1
   320cc:	str	w0, [x20, #4]
   320d0:	add	w1, w1, #0x1
   320d4:	add	x0, sp, #0x90
   320d8:	str	w1, [x19, #308]
   320dc:	str	x0, [x19, #328]
   320e0:	mov	w1, w22
   320e4:	mov	x0, x19
   320e8:	mov	x2, x20
   320ec:	stp	x20, x3, [sp, #144]
   320f0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   320f4:	ldr	w1, [x20, #4]
   320f8:	ldr	x0, [sp, #152]
   320fc:	str	x0, [x19, #328]
   32100:	ldr	w0, [x19, #308]
   32104:	sub	w1, w1, #0x1
   32108:	str	w1, [x20, #4]
   3210c:	sub	w0, w0, #0x1
   32110:	str	w0, [x19, #308]
   32114:	ldr	x1, [x19, #256]
   32118:	add	x0, x1, #0x1
   3211c:	cmp	x1, #0xff
   32120:	b.ne	32148 <__asan_backtrace_create_state@@Base+0x44c0>  // b.any
   32124:	ldp	x3, x2, [x19, #272]
   32128:	strb	wzr, [x19, #255]
   3212c:	mov	x0, x19
   32130:	blr	x3
   32134:	ldr	x2, [x19, #320]
   32138:	mov	x0, #0x1                   	// #1
   3213c:	mov	x1, #0x0                   	// #0
   32140:	add	x2, x2, x0
   32144:	str	x2, [x19, #320]
   32148:	str	x0, [x19, #256]
   3214c:	mov	w0, #0x29                  	// #41
   32150:	strb	w0, [x19, x1]
   32154:	strb	w0, [x19, #264]
   32158:	ldp	x21, x22, [sp, #32]
   3215c:	ldp	x23, x24, [sp, #48]
   32160:	ldp	x25, x26, [sp, #64]
   32164:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32168:	ldr	w0, [x19, #312]
   3216c:	ldr	x20, [x24, #8]
   32170:	add	w1, w0, #0x1
   32174:	str	w1, [x19, #312]
   32178:	cbz	x20, 327e0 <__asan_backtrace_create_state@@Base+0x4b58>
   3217c:	ldr	w1, [x20, #4]
   32180:	cmp	w1, #0x1
   32184:	b.gt	327e0 <__asan_backtrace_create_state@@Base+0x4b58>
   32188:	ldr	w2, [x19, #308]
   3218c:	cmp	w2, #0x400
   32190:	b.gt	327e0 <__asan_backtrace_create_state@@Base+0x4b58>
   32194:	ldr	x3, [x19, #328]
   32198:	add	w1, w1, #0x1
   3219c:	str	w1, [x20, #4]
   321a0:	add	w2, w2, #0x1
   321a4:	add	x21, sp, #0x90
   321a8:	str	w2, [x19, #308]
   321ac:	str	x21, [x19, #328]
   321b0:	mov	x0, x19
   321b4:	mov	w1, w22
   321b8:	mov	x2, x20
   321bc:	stp	x20, x3, [sp, #144]
   321c0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   321c4:	ldr	w2, [x20, #4]
   321c8:	ldr	x0, [sp, #152]
   321cc:	str	x0, [x19, #328]
   321d0:	ldr	w0, [x19, #312]
   321d4:	sub	w2, w2, #0x1
   321d8:	ldr	w1, [x19, #308]
   321dc:	sub	w0, w0, #0x1
   321e0:	str	w2, [x20, #4]
   321e4:	sub	w1, w1, #0x1
   321e8:	str	w1, [x19, #308]
   321ec:	str	w0, [x19, #312]
   321f0:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   321f4:	add	x20, x20, #0x200
   321f8:	mov	x0, x20
   321fc:	bl	64b0 <__asan_internal_strlen@plt>
   32200:	cbz	x0, 32280 <__asan_backtrace_create_state@@Base+0x45f8>
   32204:	add	x23, x20, x0
   32208:	mov	x25, #0x1                   	// #1
   3220c:	ldr	x1, [x19, #256]
   32210:	b	3226c <__asan_backtrace_create_state@@Base+0x45e4>
   32214:	ldp	x3, x2, [x19, #272]
   32218:	strb	wzr, [x19, #255]
   3221c:	mov	x0, x19
   32220:	add	x20, x20, #0x1
   32224:	blr	x3
   32228:	strb	w22, [x19]
   3222c:	ldr	x0, [x19, #320]
   32230:	str	x25, [x19, #256]
   32234:	strb	w22, [x19, #264]
   32238:	cmp	x20, x23
   3223c:	add	x0, x0, #0x1
   32240:	str	x0, [x19, #320]
   32244:	b.eq	32280 <__asan_backtrace_create_state@@Base+0x45f8>  // b.none
   32248:	ldrb	w22, [x20]
   3224c:	mov	x0, #0x1                   	// #1
   32250:	add	x1, x0, #0x1
   32254:	str	x1, [x19, #256]
   32258:	strb	w22, [x19, x0]
   3225c:	add	x20, x20, #0x1
   32260:	strb	w22, [x19, #264]
   32264:	cmp	x23, x20
   32268:	b.eq	32280 <__asan_backtrace_create_state@@Base+0x45f8>  // b.none
   3226c:	ldrb	w22, [x20]
   32270:	cmp	x1, #0xff
   32274:	b.eq	32214 <__asan_backtrace_create_state@@Base+0x458c>  // b.none
   32278:	mov	x0, x1
   3227c:	b	32250 <__asan_backtrace_create_state@@Base+0x45c8>
   32280:	ldr	w2, [x24, #16]
   32284:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   32288:	add	x1, x1, #0x378
   3228c:	mov	x0, x21
   32290:	add	w2, w2, #0x1
   32294:	bl	65f0 <sprintf@plt>
   32298:	mov	x0, x21
   3229c:	bl	64b0 <__asan_internal_strlen@plt>
   322a0:	cbz	x0, 32a98 <__asan_backtrace_create_state@@Base+0x4e10>
   322a4:	add	x22, x21, x0
   322a8:	mov	x23, #0x1                   	// #1
   322ac:	ldr	x1, [x19, #256]
   322b0:	b	3230c <__asan_backtrace_create_state@@Base+0x4684>
   322b4:	ldp	x3, x2, [x19, #272]
   322b8:	strb	wzr, [x19, #255]
   322bc:	mov	x0, x19
   322c0:	add	x21, x21, #0x1
   322c4:	blr	x3
   322c8:	strb	w20, [x19]
   322cc:	ldr	x0, [x19, #320]
   322d0:	str	x23, [x19, #256]
   322d4:	strb	w20, [x19, #264]
   322d8:	cmp	x21, x22
   322dc:	add	x0, x0, #0x1
   322e0:	str	x0, [x19, #320]
   322e4:	b.eq	32af4 <__asan_backtrace_create_state@@Base+0x4e6c>  // b.none
   322e8:	ldrb	w20, [x21]
   322ec:	mov	x0, #0x1                   	// #1
   322f0:	add	x1, x0, #0x1
   322f4:	str	x1, [x19, #256]
   322f8:	strb	w20, [x19, x0]
   322fc:	add	x21, x21, #0x1
   32300:	strb	w20, [x19, #264]
   32304:	cmp	x21, x22
   32308:	b.eq	32a9c <__asan_backtrace_create_state@@Base+0x4e14>  // b.none
   3230c:	ldrb	w20, [x21]
   32310:	cmp	x1, #0xff
   32314:	b.eq	322b4 <__asan_backtrace_create_state@@Base+0x462c>  // b.none
   32318:	mov	x0, x1
   3231c:	b	322f0 <__asan_backtrace_create_state@@Base+0x4668>
   32320:	ldr	x20, [x24, #8]
   32324:	cbz	x20, 327f0 <__asan_backtrace_create_state@@Base+0x4b68>
   32328:	ldr	w0, [x20, #4]
   3232c:	cmp	w0, #0x1
   32330:	b.gt	327f0 <__asan_backtrace_create_state@@Base+0x4b68>
   32334:	ldr	w1, [x19, #308]
   32338:	cmp	w1, #0x400
   3233c:	b.gt	327f0 <__asan_backtrace_create_state@@Base+0x4b68>
   32340:	ldr	x3, [x19, #328]
   32344:	add	w0, w0, #0x1
   32348:	str	w0, [x20, #4]
   3234c:	add	w1, w1, #0x1
   32350:	add	x0, sp, #0x90
   32354:	str	w1, [x19, #308]
   32358:	str	x0, [x19, #328]
   3235c:	mov	w1, w22
   32360:	mov	x0, x19
   32364:	mov	x2, x20
   32368:	stp	x20, x3, [sp, #144]
   3236c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32370:	ldr	w1, [x20, #4]
   32374:	ldr	x0, [sp, #152]
   32378:	sub	w1, w1, #0x1
   3237c:	ldp	x21, x22, [sp, #32]
   32380:	ldp	x23, x24, [sp, #48]
   32384:	ldp	x25, x26, [sp, #64]
   32388:	str	x0, [x19, #328]
   3238c:	ldr	w0, [x19, #308]
   32390:	str	w1, [x20, #4]
   32394:	sub	w0, w0, #0x1
   32398:	str	w0, [x19, #308]
   3239c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   323a0:	ldr	x20, [x24, #8]
   323a4:	cbz	x20, 327c8 <__asan_backtrace_create_state@@Base+0x4b40>
   323a8:	ldr	w0, [x20, #4]
   323ac:	cmp	w0, #0x1
   323b0:	b.gt	327c8 <__asan_backtrace_create_state@@Base+0x4b40>
   323b4:	ldr	w1, [x19, #308]
   323b8:	cmp	w1, #0x400
   323bc:	b.gt	327c8 <__asan_backtrace_create_state@@Base+0x4b40>
   323c0:	ldr	x3, [x19, #328]
   323c4:	add	w0, w0, #0x1
   323c8:	str	w0, [x20, #4]
   323cc:	add	w1, w1, #0x1
   323d0:	add	x0, sp, #0x90
   323d4:	str	w1, [x19, #308]
   323d8:	str	x0, [x19, #328]
   323dc:	mov	w1, w22
   323e0:	mov	x0, x19
   323e4:	mov	x2, x20
   323e8:	stp	x20, x3, [sp, #144]
   323ec:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   323f0:	ldr	w1, [x20, #4]
   323f4:	ldr	x0, [sp, #152]
   323f8:	sub	w1, w1, #0x1
   323fc:	ldp	x21, x22, [sp, #32]
   32400:	ldp	x23, x24, [sp, #48]
   32404:	ldp	x25, x26, [sp, #64]
   32408:	str	x0, [x19, #328]
   3240c:	ldr	w0, [x19, #308]
   32410:	str	w1, [x20, #4]
   32414:	sub	w0, w0, #0x1
   32418:	str	w0, [x19, #308]
   3241c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32420:	ldr	x0, [x19, #368]
   32424:	cbz	x0, 32438 <__asan_backtrace_create_state@@Base+0x47b0>
   32428:	ldr	x2, [x19, #288]
   3242c:	add	x1, sp, #0x80
   32430:	stp	x2, x0, [sp, #128]
   32434:	str	x1, [x19, #288]
   32438:	ldr	x20, [x24, #8]
   3243c:	ldr	w1, [x20]
   32440:	cmp	w1, #0x4
   32444:	b.eq	332d0 <__asan_backtrace_create_state@@Base+0x5648>  // b.none
   32448:	ldr	w1, [x20, #4]
   3244c:	cmp	w1, #0x1
   32450:	b.gt	32ba4 <__asan_backtrace_create_state@@Base+0x4f1c>
   32454:	ldr	w2, [x19, #308]
   32458:	cmp	w2, #0x400
   3245c:	b.gt	32ba4 <__asan_backtrace_create_state@@Base+0x4f1c>
   32460:	ldr	x3, [x19, #328]
   32464:	add	w1, w1, #0x1
   32468:	str	w1, [x20, #4]
   3246c:	add	w2, w2, #0x1
   32470:	add	x0, sp, #0x90
   32474:	str	w2, [x19, #308]
   32478:	str	x0, [x19, #328]
   3247c:	mov	w1, w22
   32480:	mov	x2, x20
   32484:	mov	x0, x19
   32488:	stp	x20, x3, [sp, #144]
   3248c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32490:	ldr	w2, [x20, #4]
   32494:	ldr	x0, [sp, #152]
   32498:	str	x0, [x19, #328]
   3249c:	ldr	w1, [x19, #308]
   324a0:	sub	w2, w2, #0x1
   324a4:	ldr	x0, [x19, #368]
   324a8:	str	w2, [x20, #4]
   324ac:	sub	w1, w1, #0x1
   324b0:	str	w1, [x19, #308]
   324b4:	cbz	x0, 33b54 <__asan_backtrace_create_state@@Base+0x5ecc>
   324b8:	ldr	x0, [sp, #128]
   324bc:	ldp	x21, x22, [sp, #32]
   324c0:	ldp	x23, x24, [sp, #48]
   324c4:	ldp	x25, x26, [sp, #64]
   324c8:	str	x0, [x19, #288]
   324cc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   324d0:	ldr	x20, [x24, #8]
   324d4:	cbz	x20, 32880 <__asan_backtrace_create_state@@Base+0x4bf8>
   324d8:	ldr	w0, [x20, #4]
   324dc:	cmp	w0, #0x1
   324e0:	b.gt	32880 <__asan_backtrace_create_state@@Base+0x4bf8>
   324e4:	ldr	w1, [x19, #308]
   324e8:	cmp	w1, #0x400
   324ec:	b.gt	32880 <__asan_backtrace_create_state@@Base+0x4bf8>
   324f0:	ldr	x3, [x19, #328]
   324f4:	add	w0, w0, #0x1
   324f8:	str	w0, [x20, #4]
   324fc:	add	w1, w1, #0x1
   32500:	add	x0, sp, #0x90
   32504:	str	w1, [x19, #308]
   32508:	str	x0, [x19, #328]
   3250c:	mov	w1, w22
   32510:	mov	x0, x19
   32514:	mov	x2, x20
   32518:	stp	x20, x3, [sp, #144]
   3251c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32520:	ldr	w1, [x20, #4]
   32524:	ldr	x0, [sp, #152]
   32528:	sub	w1, w1, #0x1
   3252c:	ldp	x21, x22, [sp, #32]
   32530:	ldp	x23, x24, [sp, #48]
   32534:	ldp	x25, x26, [sp, #64]
   32538:	str	x0, [x19, #328]
   3253c:	ldr	w0, [x19, #308]
   32540:	str	w1, [x20, #4]
   32544:	sub	w0, w0, #0x1
   32548:	str	w0, [x19, #308]
   3254c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32550:	ldp	x21, x22, [sp, #32]
   32554:	ldp	x23, x24, [sp, #48]
   32558:	ldp	x25, x26, [sp, #64]
   3255c:	ldp	x27, x28, [sp, #80]
   32560:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32564:	mov	w0, #0x1                   	// #1
   32568:	str	w0, [x19, #304]
   3256c:	b	31868 <__asan_backtrace_create_state@@Base+0x3be0>
   32570:	mov	w0, #0x1                   	// #1
   32574:	str	w0, [x19, #304]
   32578:	b	31568 <__asan_backtrace_create_state@@Base+0x38e0>
   3257c:	mov	w0, #0x1                   	// #1
   32580:	str	w0, [x19, #304]
   32584:	b	2e980 <__asan_backtrace_create_state@@Base+0xcf8>
   32588:	mov	w0, #0x1                   	// #1
   3258c:	ldp	x21, x22, [sp, #32]
   32590:	ldp	x23, x24, [sp, #48]
   32594:	ldp	x25, x26, [sp, #64]
   32598:	str	w0, [x19, #304]
   3259c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   325a0:	mov	w0, #0x1                   	// #1
   325a4:	ldp	x21, x22, [sp, #32]
   325a8:	ldp	x23, x24, [sp, #48]
   325ac:	ldp	x25, x26, [sp, #64]
   325b0:	str	w0, [x19, #304]
   325b4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   325b8:	mov	w0, #0x1                   	// #1
   325bc:	ldp	x21, x22, [sp, #32]
   325c0:	ldp	x23, x24, [sp, #48]
   325c4:	ldp	x25, x26, [sp, #64]
   325c8:	str	w0, [x19, #304]
   325cc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   325d0:	mov	w0, #0x1                   	// #1
   325d4:	ldp	x21, x22, [sp, #32]
   325d8:	ldp	x23, x24, [sp, #48]
   325dc:	ldp	x25, x26, [sp, #64]
   325e0:	str	w0, [x19, #304]
   325e4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   325e8:	mov	w0, #0x1                   	// #1
   325ec:	ldp	x21, x22, [sp, #32]
   325f0:	ldp	x23, x24, [sp, #48]
   325f4:	ldp	x25, x26, [sp, #64]
   325f8:	str	w0, [x19, #304]
   325fc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32600:	ldr	x23, [x23, #8]
   32604:	cbnz	x23, 2e9d8 <__asan_backtrace_create_state@@Base+0xd50>
   32608:	mov	w0, #0x1                   	// #1
   3260c:	ldp	x21, x22, [sp, #32]
   32610:	ldp	x23, x24, [sp, #48]
   32614:	ldp	x25, x26, [sp, #64]
   32618:	str	w0, [x19, #304]
   3261c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32620:	mov	w1, #0x1                   	// #1
   32624:	str	w1, [x19, #304]
   32628:	b	30fd8 <__asan_backtrace_create_state@@Base+0x3350>
   3262c:	mov	w0, #0x1                   	// #1
   32630:	ldp	x21, x22, [sp, #32]
   32634:	ldp	x23, x24, [sp, #48]
   32638:	ldp	x25, x26, [sp, #64]
   3263c:	str	w0, [x19, #304]
   32640:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32644:	mov	w0, #0x1                   	// #1
   32648:	ldp	x21, x22, [sp, #32]
   3264c:	ldp	x23, x24, [sp, #48]
   32650:	ldp	x25, x26, [sp, #64]
   32654:	str	w0, [x19, #304]
   32658:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3265c:	mov	w0, #0x1                   	// #1
   32660:	str	w0, [x19, #304]
   32664:	b	31aac <__asan_backtrace_create_state@@Base+0x3e24>
   32668:	mov	w0, #0x1                   	// #1
   3266c:	str	w0, [x19, #304]
   32670:	mov	x2, x24
   32674:	mov	w1, w22
   32678:	mov	x0, x19
   3267c:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   32680:	b	2eae0 <__asan_backtrace_create_state@@Base+0xe58>
   32684:	mov	w0, #0x1                   	// #1
   32688:	ldp	x21, x22, [sp, #32]
   3268c:	ldp	x23, x24, [sp, #48]
   32690:	ldp	x25, x26, [sp, #64]
   32694:	str	w0, [x19, #304]
   32698:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3269c:	mov	w0, #0x1                   	// #1
   326a0:	ldp	x21, x22, [sp, #32]
   326a4:	ldp	x23, x24, [sp, #48]
   326a8:	ldp	x25, x26, [sp, #64]
   326ac:	str	w0, [x19, #304]
   326b0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   326b4:	mov	w0, #0x1                   	// #1
   326b8:	ldp	x21, x22, [sp, #32]
   326bc:	ldp	x23, x24, [sp, #48]
   326c0:	ldp	x25, x26, [sp, #64]
   326c4:	str	w0, [x19, #304]
   326c8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   326cc:	mov	w0, #0x1                   	// #1
   326d0:	ldp	x21, x22, [sp, #32]
   326d4:	ldp	x23, x24, [sp, #48]
   326d8:	ldp	x25, x26, [sp, #64]
   326dc:	str	w0, [x19, #304]
   326e0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   326e4:	mov	w0, #0x1                   	// #1
   326e8:	ldp	x21, x22, [sp, #32]
   326ec:	ldp	x23, x24, [sp, #48]
   326f0:	ldp	x25, x26, [sp, #64]
   326f4:	str	w0, [x19, #304]
   326f8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   326fc:	mov	w0, #0x1                   	// #1
   32700:	ldp	x21, x22, [sp, #32]
   32704:	ldp	x23, x24, [sp, #48]
   32708:	ldp	x25, x26, [sp, #64]
   3270c:	str	w0, [x19, #304]
   32710:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32714:	mov	w0, #0x1                   	// #1
   32718:	ldp	x21, x22, [sp, #32]
   3271c:	ldp	x23, x24, [sp, #48]
   32720:	ldp	x25, x26, [sp, #64]
   32724:	str	w0, [x19, #304]
   32728:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3272c:	mov	w0, #0x1                   	// #1
   32730:	ldp	x21, x22, [sp, #32]
   32734:	ldp	x23, x24, [sp, #48]
   32738:	ldp	x25, x26, [sp, #64]
   3273c:	str	w0, [x19, #304]
   32740:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32744:	mov	w0, #0x1                   	// #1
   32748:	ldp	x21, x22, [sp, #32]
   3274c:	ldp	x23, x24, [sp, #48]
   32750:	ldp	x25, x26, [sp, #64]
   32754:	str	w0, [x19, #304]
   32758:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3275c:	mov	w0, #0x1                   	// #1
   32760:	str	w0, [x19, #304]
   32764:	b	2fa18 <__asan_backtrace_create_state@@Base+0x1d90>
   32768:	mov	w0, #0x1                   	// #1
   3276c:	str	w0, [x19, #304]
   32770:	b	2fb18 <__asan_backtrace_create_state@@Base+0x1e90>
   32774:	mov	w0, #0x1                   	// #1
   32778:	ldp	x21, x22, [sp, #32]
   3277c:	ldp	x23, x24, [sp, #48]
   32780:	ldp	x25, x26, [sp, #64]
   32784:	str	w0, [x19, #304]
   32788:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3278c:	mov	w0, #0x1                   	// #1
   32790:	ldp	x21, x22, [sp, #32]
   32794:	ldp	x23, x24, [sp, #48]
   32798:	ldp	x25, x26, [sp, #64]
   3279c:	str	w0, [x19, #304]
   327a0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   327a4:	mov	w0, #0x1                   	// #1
   327a8:	ldp	x21, x22, [sp, #32]
   327ac:	ldp	x23, x24, [sp, #48]
   327b0:	ldp	x25, x26, [sp, #64]
   327b4:	str	w0, [x19, #304]
   327b8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   327bc:	mov	w0, #0x1                   	// #1
   327c0:	str	w0, [x19, #304]
   327c4:	b	3045c <__asan_backtrace_create_state@@Base+0x27d4>
   327c8:	mov	w0, #0x1                   	// #1
   327cc:	ldp	x21, x22, [sp, #32]
   327d0:	ldp	x23, x24, [sp, #48]
   327d4:	ldp	x25, x26, [sp, #64]
   327d8:	str	w0, [x19, #304]
   327dc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   327e0:	mov	w1, #0x1                   	// #1
   327e4:	add	x21, sp, #0x90
   327e8:	str	w1, [x19, #304]
   327ec:	b	321ec <__asan_backtrace_create_state@@Base+0x4564>
   327f0:	mov	w0, #0x1                   	// #1
   327f4:	ldp	x21, x22, [sp, #32]
   327f8:	ldp	x23, x24, [sp, #48]
   327fc:	ldp	x25, x26, [sp, #64]
   32800:	str	w0, [x19, #304]
   32804:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32808:	mov	w0, #0x1                   	// #1
   3280c:	ldp	x21, x22, [sp, #32]
   32810:	ldp	x23, x24, [sp, #48]
   32814:	ldp	x25, x26, [sp, #64]
   32818:	str	w0, [x19, #304]
   3281c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32820:	mov	w0, #0x1                   	// #1
   32824:	str	w0, [x19, #304]
   32828:	b	31e50 <__asan_backtrace_create_state@@Base+0x41c8>
   3282c:	mov	w0, #0x1                   	// #1
   32830:	ldp	x21, x22, [sp, #32]
   32834:	ldp	x23, x24, [sp, #48]
   32838:	ldp	x25, x26, [sp, #64]
   3283c:	str	w0, [x19, #304]
   32840:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32844:	mov	w0, #0x1                   	// #1
   32848:	str	w0, [x19, #304]
   3284c:	b	32114 <__asan_backtrace_create_state@@Base+0x448c>
   32850:	mov	w0, #0x1                   	// #1
   32854:	ldp	x21, x22, [sp, #32]
   32858:	ldp	x23, x24, [sp, #48]
   3285c:	ldp	x25, x26, [sp, #64]
   32860:	str	w0, [x19, #304]
   32864:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32868:	mov	w0, #0x1                   	// #1
   3286c:	ldp	x21, x22, [sp, #32]
   32870:	ldp	x23, x24, [sp, #48]
   32874:	ldp	x25, x26, [sp, #64]
   32878:	str	w0, [x19, #304]
   3287c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32880:	mov	w0, #0x1                   	// #1
   32884:	ldp	x21, x22, [sp, #32]
   32888:	ldp	x23, x24, [sp, #48]
   3288c:	ldp	x25, x26, [sp, #64]
   32890:	str	w0, [x19, #304]
   32894:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32898:	cbnz	x20, 30960 <__asan_backtrace_create_state@@Base+0x2cd8>
   3289c:	mov	w0, #0x1                   	// #1
   328a0:	str	w0, [x19, #304]
   328a4:	b	309c8 <__asan_backtrace_create_state@@Base+0x2d40>
   328a8:	mov	w1, #0x1                   	// #1
   328ac:	str	w1, [x19, #304]
   328b0:	b	30a90 <__asan_backtrace_create_state@@Base+0x2e08>
   328b4:	mov	w0, #0x1                   	// #1
   328b8:	str	w0, [x19, #304]
   328bc:	b	2ed8c <__asan_backtrace_create_state@@Base+0x1104>
   328c0:	ldr	x20, [x22, #8]
   328c4:	ldrb	w0, [x20]
   328c8:	sub	w0, w0, #0x61
   328cc:	and	w0, w0, #0xff
   328d0:	cmp	w0, #0x19
   328d4:	b.hi	3291c <__asan_backtrace_create_state@@Base+0x4c94>  // b.pmore
   328d8:	ldr	x1, [x19, #256]
   328dc:	cmp	x1, #0xff
   328e0:	b.ne	337ec <__asan_backtrace_create_state@@Base+0x5b64>  // b.any
   328e4:	ldp	x3, x2, [x19, #272]
   328e8:	strb	wzr, [x19, #255]
   328ec:	mov	x0, x19
   328f0:	blr	x3
   328f4:	ldr	x2, [x19, #320]
   328f8:	mov	x0, #0x1                   	// #1
   328fc:	mov	x1, #0x0                   	// #0
   32900:	add	x2, x2, x0
   32904:	ldr	x20, [x22, #8]
   32908:	str	x2, [x19, #320]
   3290c:	str	x0, [x19, #256]
   32910:	mov	w0, #0x20                  	// #32
   32914:	strb	w0, [x19, x1]
   32918:	strb	w0, [x19, #264]
   3291c:	sxtw	x22, w23
   32920:	sub	w0, w23, #0x1
   32924:	add	x1, x20, x22
   32928:	sxtw	x0, w0
   3292c:	ldurb	w1, [x1, #-1]
   32930:	cmp	w1, #0x20
   32934:	csel	x22, x22, x0, ne  // ne = any
   32938:	cbz	x22, 346f8 <__asan_backtrace_create_state@@Base+0x6a70>
   3293c:	add	x22, x20, x22
   32940:	mov	x23, #0x1                   	// #1
   32944:	ldr	x1, [x19, #256]
   32948:	b	329a4 <__asan_backtrace_create_state@@Base+0x4d1c>
   3294c:	ldp	x3, x2, [x19, #272]
   32950:	strb	wzr, [x19, #255]
   32954:	mov	x0, x19
   32958:	add	x20, x20, #0x1
   3295c:	blr	x3
   32960:	strb	w21, [x19]
   32964:	ldr	x0, [x19, #320]
   32968:	str	x23, [x19, #256]
   3296c:	strb	w21, [x19, #264]
   32970:	cmp	x20, x22
   32974:	add	x0, x0, #0x1
   32978:	str	x0, [x19, #320]
   3297c:	b.eq	338a8 <__asan_backtrace_create_state@@Base+0x5c20>  // b.none
   32980:	ldrb	w21, [x20]
   32984:	mov	x0, #0x1                   	// #1
   32988:	add	x1, x0, #0x1
   3298c:	str	x1, [x19, #256]
   32990:	strb	w21, [x19, x0]
   32994:	add	x20, x20, #0x1
   32998:	strb	w21, [x19, #264]
   3299c:	cmp	x22, x20
   329a0:	b.eq	32b2c <__asan_backtrace_create_state@@Base+0x4ea4>  // b.none
   329a4:	ldrb	w21, [x20]
   329a8:	cmp	x1, #0xff
   329ac:	b.eq	3294c <__asan_backtrace_create_state@@Base+0x4cc4>  // b.none
   329b0:	mov	x0, x1
   329b4:	b	32988 <__asan_backtrace_create_state@@Base+0x4d00>
   329b8:	ldr	x23, [x19, #256]
   329bc:	ldr	x20, [x24, #16]
   329c0:	cbz	x20, 32b84 <__asan_backtrace_create_state@@Base+0x4efc>
   329c4:	ldr	w0, [x20, #4]
   329c8:	cmp	w0, #0x1
   329cc:	b.gt	32b84 <__asan_backtrace_create_state@@Base+0x4efc>
   329d0:	ldr	w1, [x19, #308]
   329d4:	cmp	w1, #0x400
   329d8:	b.gt	32b84 <__asan_backtrace_create_state@@Base+0x4efc>
   329dc:	ldp	x21, x3, [x19, #320]
   329e0:	add	w0, w0, #0x1
   329e4:	str	w0, [x20, #4]
   329e8:	add	w1, w1, #0x1
   329ec:	add	x0, sp, #0x90
   329f0:	str	w1, [x19, #308]
   329f4:	str	x0, [x19, #328]
   329f8:	mov	w1, w22
   329fc:	mov	x0, x19
   32a00:	mov	x2, x20
   32a04:	stp	x20, x3, [sp, #144]
   32a08:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32a0c:	ldr	w1, [x20, #4]
   32a10:	ldr	x0, [sp, #152]
   32a14:	sub	w1, w1, #0x1
   32a18:	str	x0, [x19, #328]
   32a1c:	ldr	w0, [x19, #308]
   32a20:	str	w1, [x20, #4]
   32a24:	ldr	x1, [x19, #320]
   32a28:	sub	w0, w0, #0x1
   32a2c:	str	w0, [x19, #308]
   32a30:	cmp	x1, x21
   32a34:	b.eq	34410 <__asan_backtrace_create_state@@Base+0x6788>  // b.none
   32a38:	ldp	x21, x22, [sp, #32]
   32a3c:	ldp	x23, x24, [sp, #48]
   32a40:	ldp	x25, x26, [sp, #64]
   32a44:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32a48:	ldr	x1, [x19, #256]
   32a4c:	cmp	x1, #0xff
   32a50:	b.ne	32aec <__asan_backtrace_create_state@@Base+0x4e64>  // b.any
   32a54:	ldp	x3, x2, [x19, #272]
   32a58:	strb	wzr, [x19, #255]
   32a5c:	mov	x0, x19
   32a60:	blr	x3
   32a64:	ldr	x2, [x19, #320]
   32a68:	mov	x0, #0x1                   	// #1
   32a6c:	mov	x1, #0x0                   	// #0
   32a70:	add	x2, x2, x0
   32a74:	str	x2, [x19, #320]
   32a78:	str	x0, [x19, #256]
   32a7c:	mov	w0, #0x7d                  	// #125
   32a80:	strb	w0, [x19, x1]
   32a84:	strb	w0, [x19, #264]
   32a88:	ldp	x21, x22, [sp, #32]
   32a8c:	ldp	x23, x24, [sp, #48]
   32a90:	ldp	x25, x26, [sp, #64]
   32a94:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32a98:	ldr	x1, [x19, #256]
   32a9c:	cmp	x1, #0xff
   32aa0:	b.ne	32af8 <__asan_backtrace_create_state@@Base+0x4e70>  // b.any
   32aa4:	ldp	x3, x2, [x19, #272]
   32aa8:	strb	wzr, [x19, #255]
   32aac:	mov	x0, x19
   32ab0:	blr	x3
   32ab4:	ldr	x2, [x19, #320]
   32ab8:	mov	x0, #0x1                   	// #1
   32abc:	mov	x1, #0x0                   	// #0
   32ac0:	add	x2, x2, x0
   32ac4:	str	x2, [x19, #320]
   32ac8:	str	x0, [x19, #256]
   32acc:	mov	w0, #0x7d                  	// #125
   32ad0:	strb	w0, [x19, x1]
   32ad4:	strb	w0, [x19, #264]
   32ad8:	ldp	x21, x22, [sp, #32]
   32adc:	ldp	x23, x24, [sp, #48]
   32ae0:	ldp	x25, x26, [sp, #64]
   32ae4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32ae8:	mov	x1, #0x1                   	// #1
   32aec:	add	x0, x1, #0x1
   32af0:	b	32a78 <__asan_backtrace_create_state@@Base+0x4df0>
   32af4:	mov	x1, #0x1                   	// #1
   32af8:	add	x0, x1, #0x1
   32afc:	b	32ac8 <__asan_backtrace_create_state@@Base+0x4e40>
   32b00:	mov	w1, w22
   32b04:	mov	x2, x20
   32b08:	mov	x0, x19
   32b0c:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   32b10:	ldp	x21, x22, [sp, #32]
   32b14:	ldp	x23, x24, [sp, #48]
   32b18:	ldp	x25, x26, [sp, #64]
   32b1c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32b20:	mov	w0, #0x1                   	// #1
   32b24:	str	w0, [x19, #304]
   32b28:	b	2f220 <__asan_backtrace_create_state@@Base+0x1598>
   32b2c:	ldp	x21, x22, [sp, #32]
   32b30:	ldp	x23, x24, [sp, #48]
   32b34:	ldp	x25, x26, [sp, #64]
   32b38:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32b3c:	ldp	x21, x22, [sp, #32]
   32b40:	ldp	x23, x24, [sp, #48]
   32b44:	ldp	x25, x26, [sp, #64]
   32b48:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32b4c:	ldr	x28, [x24, #8]
   32b50:	cbnz	w23, 2f88c <__asan_backtrace_create_state@@Base+0x1c04>
   32b54:	ldp	x21, x22, [sp, #32]
   32b58:	ldp	x23, x24, [sp, #48]
   32b5c:	ldp	x25, x26, [sp, #64]
   32b60:	ldp	x27, x28, [sp, #80]
   32b64:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32b68:	ldp	x21, x22, [sp, #32]
   32b6c:	ldp	x23, x24, [sp, #48]
   32b70:	ldp	x25, x26, [sp, #64]
   32b74:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32b78:	mov	x24, x0
   32b7c:	ldr	x25, [x0, #8]
   32b80:	b	2e8f8 <__asan_backtrace_create_state@@Base+0xc70>
   32b84:	mov	w0, #0x1                   	// #1
   32b88:	str	w0, [x19, #304]
   32b8c:	sub	x23, x23, #0x2
   32b90:	ldp	x21, x22, [sp, #32]
   32b94:	ldp	x25, x26, [sp, #64]
   32b98:	str	x23, [x19, #256]
   32b9c:	ldp	x23, x24, [sp, #48]
   32ba0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32ba4:	mov	w1, #0x1                   	// #1
   32ba8:	str	w1, [x19, #304]
   32bac:	b	324b4 <__asan_backtrace_create_state@@Base+0x482c>
   32bb0:	add	x21, x20, x21
   32bb4:	cmp	x21, x20
   32bb8:	b.ls	34a2c <__asan_backtrace_create_state@@Base+0x6da4>  // b.plast
   32bbc:	mov	w23, #0x5f                  	// #95
   32bc0:	ldr	x1, [x19, #256]
   32bc4:	b	32be8 <__asan_backtrace_create_state@@Base+0x4f60>
   32bc8:	mov	x0, x1
   32bcc:	add	x1, x1, #0x1
   32bd0:	str	x1, [x19, #256]
   32bd4:	strb	w22, [x19, x0]
   32bd8:	strb	w22, [x19, #264]
   32bdc:	add	x20, x20, #0x1
   32be0:	cmp	x21, x20
   32be4:	b.ls	33018 <__asan_backtrace_create_state@@Base+0x5390>  // b.plast
   32be8:	sub	x0, x21, x20
   32bec:	ldrb	w22, [x20]
   32bf0:	cmp	x0, #0x3
   32bf4:	b.le	32c00 <__asan_backtrace_create_state@@Base+0x4f78>
   32bf8:	cmp	w22, #0x5f
   32bfc:	b.eq	32c30 <__asan_backtrace_create_state@@Base+0x4fa8>  // b.none
   32c00:	cmp	x1, #0xff
   32c04:	b.ne	32bc8 <__asan_backtrace_create_state@@Base+0x4f40>  // b.any
   32c08:	ldp	x3, x2, [x19, #272]
   32c0c:	strb	wzr, [x19, #255]
   32c10:	mov	x0, x19
   32c14:	blr	x3
   32c18:	ldr	x2, [x19, #320]
   32c1c:	mov	x1, #0x1                   	// #1
   32c20:	mov	x0, #0x0                   	// #0
   32c24:	add	x2, x2, x1
   32c28:	str	x2, [x19, #320]
   32c2c:	b	32bd0 <__asan_backtrace_create_state@@Base+0x4f48>
   32c30:	ldrb	w0, [x20, #1]
   32c34:	cmp	w0, #0x5f
   32c38:	b.ne	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   32c3c:	ldrb	w0, [x20, #2]
   32c40:	cmp	w0, #0x55
   32c44:	b.ne	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   32c48:	add	x24, x20, #0x3
   32c4c:	cmp	x21, x24
   32c50:	b.ls	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.plast
   32c54:	mov	x2, #0x0                   	// #0
   32c58:	b	32c74 <__asan_backtrace_create_state@@Base+0x4fec>
   32c5c:	mov	w0, w3
   32c60:	sxtw	x0, w0
   32c64:	add	x24, x24, #0x1
   32c68:	add	x2, x0, x2, lsl #4
   32c6c:	cmp	x21, x24
   32c70:	b.eq	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.none
   32c74:	ldrb	w0, [x24]
   32c78:	sub	w3, w0, #0x30
   32c7c:	and	w4, w3, #0xff
   32c80:	cmp	w4, #0x9
   32c84:	b.ls	32c5c <__asan_backtrace_create_state@@Base+0x4fd4>  // b.plast
   32c88:	sub	w3, w0, #0x41
   32c8c:	and	w3, w3, #0xff
   32c90:	cmp	w3, #0x5
   32c94:	b.hi	3459c <__asan_backtrace_create_state@@Base+0x6914>  // b.pmore
   32c98:	sub	w0, w0, #0x37
   32c9c:	b	32c60 <__asan_backtrace_create_state@@Base+0x4fd8>
   32ca0:	mov	x0, x3
   32ca4:	ldr	x4, [x19, #288]
   32ca8:	b	2e8dc <__asan_backtrace_create_state@@Base+0xc54>
   32cac:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   32cb0:	add	x20, x20, #0xf0
   32cb4:	mov	x0, x20
   32cb8:	bl	64b0 <__asan_internal_strlen@plt>
   32cbc:	cbz	x0, 34a3c <__asan_backtrace_create_state@@Base+0x6db4>
   32cc0:	add	x22, x20, x0
   32cc4:	mov	x23, #0x1                   	// #1
   32cc8:	ldr	x1, [x19, #256]
   32ccc:	b	32d28 <__asan_backtrace_create_state@@Base+0x50a0>
   32cd0:	ldp	x3, x2, [x19, #272]
   32cd4:	strb	wzr, [x19, #255]
   32cd8:	mov	x0, x19
   32cdc:	add	x20, x20, #0x1
   32ce0:	blr	x3
   32ce4:	strb	w21, [x19]
   32ce8:	ldr	x0, [x19, #320]
   32cec:	str	x23, [x19, #256]
   32cf0:	strb	w21, [x19, #264]
   32cf4:	cmp	x20, x22
   32cf8:	add	x0, x0, #0x1
   32cfc:	str	x0, [x19, #320]
   32d00:	b.eq	34484 <__asan_backtrace_create_state@@Base+0x67fc>  // b.none
   32d04:	ldrb	w21, [x20]
   32d08:	mov	x0, #0x1                   	// #1
   32d0c:	add	x1, x0, #0x1
   32d10:	str	x1, [x19, #256]
   32d14:	strb	w21, [x19, x0]
   32d18:	add	x20, x20, #0x1
   32d1c:	strb	w21, [x19, #264]
   32d20:	cmp	x22, x20
   32d24:	b.eq	338e8 <__asan_backtrace_create_state@@Base+0x5c60>  // b.none
   32d28:	ldrb	w21, [x20]
   32d2c:	cmp	x1, #0xff
   32d30:	b.eq	32cd0 <__asan_backtrace_create_state@@Base+0x5048>  // b.none
   32d34:	mov	x0, x1
   32d38:	b	32d0c <__asan_backtrace_create_state@@Base+0x5084>
   32d3c:	ldrsw	x22, [x0, #24]
   32d40:	ldr	x20, [x0, #16]
   32d44:	cbz	x22, 349fc <__asan_backtrace_create_state@@Base+0x6d74>
   32d48:	add	x22, x20, x22
   32d4c:	mov	x23, #0x1                   	// #1
   32d50:	ldr	x1, [x19, #256]
   32d54:	b	32db0 <__asan_backtrace_create_state@@Base+0x5128>
   32d58:	ldp	x3, x2, [x19, #272]
   32d5c:	strb	wzr, [x19, #255]
   32d60:	mov	x0, x19
   32d64:	add	x20, x20, #0x1
   32d68:	blr	x3
   32d6c:	strb	w21, [x19]
   32d70:	ldr	x0, [x19, #320]
   32d74:	str	x23, [x19, #256]
   32d78:	strb	w21, [x19, #264]
   32d7c:	cmp	x20, x22
   32d80:	add	x0, x0, #0x1
   32d84:	str	x0, [x19, #320]
   32d88:	b.eq	34450 <__asan_backtrace_create_state@@Base+0x67c8>  // b.none
   32d8c:	ldrb	w21, [x20]
   32d90:	mov	x0, #0x1                   	// #1
   32d94:	add	x1, x0, #0x1
   32d98:	str	x1, [x19, #256]
   32d9c:	strb	w21, [x19, x0]
   32da0:	add	x20, x20, #0x1
   32da4:	strb	w21, [x19, #264]
   32da8:	cmp	x20, x22
   32dac:	b.eq	33928 <__asan_backtrace_create_state@@Base+0x5ca0>  // b.none
   32db0:	ldrb	w21, [x20]
   32db4:	cmp	x1, #0xff
   32db8:	b.eq	32d58 <__asan_backtrace_create_state@@Base+0x50d0>  // b.none
   32dbc:	mov	x0, x1
   32dc0:	b	32d94 <__asan_backtrace_create_state@@Base+0x510c>
   32dc4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   32dc8:	add	x20, x20, #0x1a8
   32dcc:	mov	x0, x20
   32dd0:	bl	64b0 <__asan_internal_strlen@plt>
   32dd4:	cbz	x0, 32e54 <__asan_backtrace_create_state@@Base+0x51cc>
   32dd8:	add	x22, x20, x0
   32ddc:	mov	x24, #0x1                   	// #1
   32de0:	ldr	x1, [x19, #256]
   32de4:	b	32e40 <__asan_backtrace_create_state@@Base+0x51b8>
   32de8:	ldp	x3, x2, [x19, #272]
   32dec:	strb	wzr, [x19, #255]
   32df0:	mov	x0, x19
   32df4:	add	x20, x20, #0x1
   32df8:	blr	x3
   32dfc:	strb	w21, [x19]
   32e00:	ldr	x0, [x19, #320]
   32e04:	str	x24, [x19, #256]
   32e08:	strb	w21, [x19, #264]
   32e0c:	cmp	x22, x20
   32e10:	add	x0, x0, #0x1
   32e14:	str	x0, [x19, #320]
   32e18:	b.eq	32e54 <__asan_backtrace_create_state@@Base+0x51cc>  // b.none
   32e1c:	ldrb	w21, [x20]
   32e20:	mov	x0, #0x1                   	// #1
   32e24:	add	x1, x0, #0x1
   32e28:	str	x1, [x19, #256]
   32e2c:	strb	w21, [x19, x0]
   32e30:	add	x20, x20, #0x1
   32e34:	strb	w21, [x19, #264]
   32e38:	cmp	x20, x22
   32e3c:	b.eq	32e54 <__asan_backtrace_create_state@@Base+0x51cc>  // b.none
   32e40:	ldrb	w21, [x20]
   32e44:	cmp	x1, #0xff
   32e48:	b.eq	32de8 <__asan_backtrace_create_state@@Base+0x5160>  // b.none
   32e4c:	mov	x0, x1
   32e50:	b	32e24 <__asan_backtrace_create_state@@Base+0x519c>
   32e54:	mov	w2, w23
   32e58:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   32e5c:	add	x1, x1, #0x378
   32e60:	add	x20, sp, #0x90
   32e64:	mov	x0, x20
   32e68:	bl	65f0 <sprintf@plt>
   32e6c:	mov	x0, x20
   32e70:	bl	64b0 <__asan_internal_strlen@plt>
   32e74:	cbz	x0, 33274 <__asan_backtrace_create_state@@Base+0x55ec>
   32e78:	add	x22, x20, x0
   32e7c:	mov	x23, #0x1                   	// #1
   32e80:	ldr	x1, [x19, #256]
   32e84:	b	32ee0 <__asan_backtrace_create_state@@Base+0x5258>
   32e88:	ldp	x3, x2, [x19, #272]
   32e8c:	strb	wzr, [x19, #255]
   32e90:	mov	x0, x19
   32e94:	add	x20, x20, #0x1
   32e98:	blr	x3
   32e9c:	strb	w21, [x19]
   32ea0:	ldr	x0, [x19, #320]
   32ea4:	str	x23, [x19, #256]
   32ea8:	strb	w21, [x19, #264]
   32eac:	cmp	x20, x22
   32eb0:	add	x0, x0, #0x1
   32eb4:	str	x0, [x19, #320]
   32eb8:	b.eq	336e4 <__asan_backtrace_create_state@@Base+0x5a5c>  // b.none
   32ebc:	ldrb	w21, [x20]
   32ec0:	mov	x0, #0x1                   	// #1
   32ec4:	add	x1, x0, #0x1
   32ec8:	str	x1, [x19, #256]
   32ecc:	strb	w21, [x19, x0]
   32ed0:	add	x20, x20, #0x1
   32ed4:	strb	w21, [x19, #264]
   32ed8:	cmp	x20, x22
   32edc:	b.eq	33278 <__asan_backtrace_create_state@@Base+0x55f0>  // b.none
   32ee0:	ldrb	w21, [x20]
   32ee4:	cmp	x1, #0xff
   32ee8:	b.eq	32e88 <__asan_backtrace_create_state@@Base+0x5200>  // b.none
   32eec:	mov	x0, x1
   32ef0:	b	32ec4 <__asan_backtrace_create_state@@Base+0x523c>
   32ef4:	mov	w0, #0x1                   	// #1
   32ef8:	str	w0, [x19, #304]
   32efc:	b	2ecd0 <__asan_backtrace_create_state@@Base+0x1048>
   32f00:	ldr	x21, [x19, #288]
   32f04:	cbz	x21, 2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   32f08:	ldr	x2, [x21, #8]
   32f0c:	ldr	x1, [x24, #8]
   32f10:	ldr	x20, [x2, #16]
   32f14:	mov	w0, w1
   32f18:	tbnz	w1, #31, 32f44 <__asan_backtrace_create_state@@Base+0x52bc>
   32f1c:	cbnz	x20, 32f30 <__asan_backtrace_create_state@@Base+0x52a8>
   32f20:	b	2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   32f24:	ldr	x20, [x20, #16]
   32f28:	sub	w0, w0, #0x1
   32f2c:	cbz	x20, 2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   32f30:	ldr	w1, [x20]
   32f34:	cmp	w1, #0x2f
   32f38:	b.ne	2e7e8 <__asan_backtrace_create_state@@Base+0xb60>  // b.any
   32f3c:	cbnz	w0, 32f24 <__asan_backtrace_create_state@@Base+0x529c>
   32f40:	ldr	x20, [x20, #8]
   32f44:	cbz	x20, 2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   32f48:	ldr	w0, [x20]
   32f4c:	cmp	w0, #0x2f
   32f50:	b.eq	346bc <__asan_backtrace_create_state@@Base+0x6a34>  // b.none
   32f54:	ldr	x0, [x21]
   32f58:	str	x0, [x19, #288]
   32f5c:	ldr	w0, [x20, #4]
   32f60:	cmp	w0, #0x1
   32f64:	b.gt	33958 <__asan_backtrace_create_state@@Base+0x5cd0>
   32f68:	ldr	w1, [x19, #308]
   32f6c:	cmp	w1, #0x400
   32f70:	b.gt	33958 <__asan_backtrace_create_state@@Base+0x5cd0>
   32f74:	ldr	x3, [x19, #328]
   32f78:	add	w0, w0, #0x1
   32f7c:	str	w0, [x20, #4]
   32f80:	add	w1, w1, #0x1
   32f84:	add	x0, sp, #0x90
   32f88:	str	w1, [x19, #308]
   32f8c:	str	x0, [x19, #328]
   32f90:	mov	w1, w22
   32f94:	mov	x0, x19
   32f98:	mov	x2, x20
   32f9c:	stp	x20, x3, [sp, #144]
   32fa0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   32fa4:	ldr	w1, [x20, #4]
   32fa8:	ldr	x0, [sp, #152]
   32fac:	str	x0, [x19, #328]
   32fb0:	ldr	w0, [x19, #308]
   32fb4:	sub	w1, w1, #0x1
   32fb8:	str	w1, [x20, #4]
   32fbc:	sub	w0, w0, #0x1
   32fc0:	str	w0, [x19, #308]
   32fc4:	ldp	x23, x24, [sp, #48]
   32fc8:	ldp	x25, x26, [sp, #64]
   32fcc:	str	x21, [x19, #288]
   32fd0:	ldp	x21, x22, [sp, #32]
   32fd4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   32fd8:	ldr	x25, [x25, #8]
   32fdc:	cbz	x25, 34d1c <__asan_backtrace_create_state@@Base+0x7094>
   32fe0:	ldr	w4, [x25]
   32fe4:	add	x21, sp, #0x90
   32fe8:	stp	x21, x25, [sp, #176]
   32fec:	sub	w1, w4, #0x1c
   32ff0:	str	wzr, [sp, #192]
   32ff4:	cmp	w1, #0x34
   32ff8:	str	x3, [sp, #200]
   32ffc:	b.hi	3300c <__asan_backtrace_create_state@@Base+0x5384>  // b.pmore
   33000:	lsl	x1, x0, x1
   33004:	tst	x1, x2
   33008:	b.ne	33a60 <__asan_backtrace_create_state@@Base+0x5dd8>  // b.any
   3300c:	add	x1, x21, #0x20
   33010:	mov	w20, #0x2                   	// #2
   33014:	b	30800 <__asan_backtrace_create_state@@Base+0x2b78>
   33018:	ldp	x21, x22, [sp, #32]
   3301c:	ldp	x23, x24, [sp, #48]
   33020:	ldp	x25, x26, [sp, #64]
   33024:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33028:	ldr	w0, [x20, #4]
   3302c:	cmp	w0, #0x1
   33030:	b.gt	331d8 <__asan_backtrace_create_state@@Base+0x5550>
   33034:	ldr	w1, [x19, #308]
   33038:	cmp	w1, #0x400
   3303c:	b.gt	331d8 <__asan_backtrace_create_state@@Base+0x5550>
   33040:	ldr	x3, [x19, #328]
   33044:	add	w0, w0, #0x1
   33048:	str	w0, [x20, #4]
   3304c:	add	w1, w1, #0x1
   33050:	add	x0, sp, #0x90
   33054:	str	w1, [x19, #308]
   33058:	str	x0, [x19, #328]
   3305c:	mov	w1, w22
   33060:	mov	x0, x19
   33064:	mov	x2, x20
   33068:	stp	x20, x3, [sp, #144]
   3306c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   33070:	ldr	w1, [x20, #4]
   33074:	ldr	x0, [sp, #152]
   33078:	str	x0, [x19, #328]
   3307c:	ldr	w0, [x19, #308]
   33080:	sub	w1, w1, #0x1
   33084:	str	w1, [x20, #4]
   33088:	sub	w0, w0, #0x1
   3308c:	str	w0, [x19, #308]
   33090:	ldr	x1, [x19, #256]
   33094:	add	x0, x1, #0x1
   33098:	cmp	x1, #0xff
   3309c:	b.ne	330c4 <__asan_backtrace_create_state@@Base+0x543c>  // b.any
   330a0:	ldp	x3, x2, [x19, #272]
   330a4:	strb	wzr, [x19, #255]
   330a8:	mov	x0, x19
   330ac:	blr	x3
   330b0:	ldr	x2, [x19, #320]
   330b4:	mov	x0, #0x1                   	// #1
   330b8:	mov	x1, #0x0                   	// #0
   330bc:	add	x2, x2, x0
   330c0:	str	x2, [x19, #320]
   330c4:	str	x0, [x19, #256]
   330c8:	mov	w0, #0x20                  	// #32
   330cc:	strb	w0, [x19, x1]
   330d0:	strb	w0, [x19, #264]
   330d4:	b	2f2a4 <__asan_backtrace_create_state@@Base+0x161c>
   330d8:	ldr	x1, [x19, #256]
   330dc:	add	x0, x1, #0x1
   330e0:	cmp	x1, #0xff
   330e4:	b.ne	3310c <__asan_backtrace_create_state@@Base+0x5484>  // b.any
   330e8:	ldp	x3, x2, [x19, #272]
   330ec:	strb	wzr, [x19, #255]
   330f0:	mov	x0, x19
   330f4:	blr	x3
   330f8:	ldr	x2, [x19, #320]
   330fc:	mov	x0, #0x1                   	// #1
   33100:	mov	x1, #0x0                   	// #0
   33104:	add	x2, x2, x0
   33108:	str	x2, [x19, #320]
   3310c:	str	x0, [x19, #256]
   33110:	mov	w2, #0x28                  	// #40
   33114:	strb	w2, [x19, x1]
   33118:	strb	w2, [x19, #264]
   3311c:	ldr	x23, [x23, #8]
   33120:	cbz	x23, 332c4 <__asan_backtrace_create_state@@Base+0x563c>
   33124:	ldr	w1, [x23, #4]
   33128:	cmp	w1, #0x1
   3312c:	b.gt	332c4 <__asan_backtrace_create_state@@Base+0x563c>
   33130:	ldr	w2, [x19, #308]
   33134:	cmp	w2, #0x400
   33138:	b.gt	332c4 <__asan_backtrace_create_state@@Base+0x563c>
   3313c:	ldr	x3, [x19, #328]
   33140:	add	w1, w1, #0x1
   33144:	str	w1, [x23, #4]
   33148:	add	w2, w2, #0x1
   3314c:	add	x0, sp, #0x90
   33150:	str	w2, [x19, #308]
   33154:	str	x0, [x19, #328]
   33158:	mov	w1, w22
   3315c:	mov	x2, x23
   33160:	mov	x0, x19
   33164:	stp	x23, x3, [sp, #144]
   33168:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3316c:	ldr	w2, [x23, #4]
   33170:	ldr	x0, [sp, #152]
   33174:	str	x0, [x19, #328]
   33178:	ldr	w1, [x19, #308]
   3317c:	sub	w2, w2, #0x1
   33180:	ldr	x0, [x19, #256]
   33184:	str	w2, [x23, #4]
   33188:	sub	w1, w1, #0x1
   3318c:	str	w1, [x19, #308]
   33190:	add	x1, x0, #0x1
   33194:	cmp	x0, #0xff
   33198:	b.ne	331c4 <__asan_backtrace_create_state@@Base+0x553c>  // b.any
   3319c:	ldp	x3, x2, [x19, #272]
   331a0:	strb	wzr, [x19, #255]
   331a4:	mov	x1, x0
   331a8:	mov	x0, x19
   331ac:	blr	x3
   331b0:	ldr	x2, [x19, #320]
   331b4:	mov	x1, #0x1                   	// #1
   331b8:	mov	x0, #0x0                   	// #0
   331bc:	add	x2, x2, x1
   331c0:	str	x2, [x19, #320]
   331c4:	str	x1, [x19, #256]
   331c8:	mov	w1, #0x29                  	// #41
   331cc:	strb	w1, [x19, x0]
   331d0:	strb	w1, [x19, #264]
   331d4:	b	300ac <__asan_backtrace_create_state@@Base+0x2424>
   331d8:	mov	w0, #0x1                   	// #1
   331dc:	str	w0, [x19, #304]
   331e0:	b	33090 <__asan_backtrace_create_state@@Base+0x5408>
   331e4:	mov	w0, #0x1                   	// #1
   331e8:	str	w0, [x19, #304]
   331ec:	b	2eb68 <__asan_backtrace_create_state@@Base+0xee0>
   331f0:	mov	w0, #0x1                   	// #1
   331f4:	str	w0, [x19, #304]
   331f8:	b	30f24 <__asan_backtrace_create_state@@Base+0x329c>
   331fc:	add	x0, x1, #0x1
   33200:	str	x0, [x19, #256]
   33204:	mov	w2, #0x29                  	// #41
   33208:	strb	w2, [x19, x1]
   3320c:	strb	w2, [x19, #264]
   33210:	ldr	w1, [x24]
   33214:	cmp	w1, #0x3e
   33218:	b.eq	34680 <__asan_backtrace_create_state@@Base+0x69f8>  // b.none
   3321c:	cmp	w21, #0x8
   33220:	b.ne	2ed1c <__asan_backtrace_create_state@@Base+0x1094>  // b.any
   33224:	cmp	x0, #0xff
   33228:	b.ne	33250 <__asan_backtrace_create_state@@Base+0x55c8>  // b.any
   3322c:	ldp	x3, x2, [x19, #272]
   33230:	strb	wzr, [x19, #255]
   33234:	mov	x1, x0
   33238:	mov	x0, x19
   3323c:	blr	x3
   33240:	ldr	x1, [x19, #320]
   33244:	mov	x0, #0x0                   	// #0
   33248:	add	x1, x1, #0x1
   3324c:	str	x1, [x19, #320]
   33250:	add	x1, x0, #0x1
   33254:	str	x1, [x19, #256]
   33258:	mov	w1, #0x5b                  	// #91
   3325c:	strb	w1, [x19, x0]
   33260:	strb	w1, [x19, #264]
   33264:	b	2ed1c <__asan_backtrace_create_state@@Base+0x1094>
   33268:	mov	w0, #0x1                   	// #1
   3326c:	str	w0, [x19, #304]
   33270:	b	30890 <__asan_backtrace_create_state@@Base+0x2c08>
   33274:	ldr	x1, [x19, #256]
   33278:	cmp	x1, #0xff
   3327c:	b.ne	336e8 <__asan_backtrace_create_state@@Base+0x5a60>  // b.any
   33280:	ldp	x3, x2, [x19, #272]
   33284:	strb	wzr, [x19, #255]
   33288:	mov	x0, x19
   3328c:	blr	x3
   33290:	ldr	x2, [x19, #320]
   33294:	mov	x0, #0x1                   	// #1
   33298:	mov	x1, #0x0                   	// #0
   3329c:	add	x2, x2, x0
   332a0:	str	x2, [x19, #320]
   332a4:	str	x0, [x19, #256]
   332a8:	mov	w0, #0x7d                  	// #125
   332ac:	strb	w0, [x19, x1]
   332b0:	strb	w0, [x19, #264]
   332b4:	ldp	x21, x22, [sp, #32]
   332b8:	ldp	x23, x24, [sp, #48]
   332bc:	ldp	x25, x26, [sp, #64]
   332c0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   332c4:	mov	w1, #0x1                   	// #1
   332c8:	str	w1, [x19, #304]
   332cc:	b	33190 <__asan_backtrace_create_state@@Base+0x5508>
   332d0:	ldr	x20, [x20, #8]
   332d4:	cbz	x20, 33980 <__asan_backtrace_create_state@@Base+0x5cf8>
   332d8:	ldr	w1, [x20, #4]
   332dc:	cmp	w1, #0x1
   332e0:	b.gt	33980 <__asan_backtrace_create_state@@Base+0x5cf8>
   332e4:	ldr	w2, [x19, #308]
   332e8:	cmp	w2, #0x400
   332ec:	b.gt	33980 <__asan_backtrace_create_state@@Base+0x5cf8>
   332f0:	ldr	x3, [x19, #328]
   332f4:	add	w1, w1, #0x1
   332f8:	str	w1, [x20, #4]
   332fc:	add	w2, w2, #0x1
   33300:	add	x0, sp, #0x90
   33304:	str	w2, [x19, #308]
   33308:	str	x0, [x19, #328]
   3330c:	mov	w1, w22
   33310:	mov	x2, x20
   33314:	mov	x0, x19
   33318:	stp	x20, x3, [sp, #144]
   3331c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   33320:	ldr	w2, [x20, #4]
   33324:	ldr	x0, [sp, #152]
   33328:	str	x0, [x19, #328]
   3332c:	ldr	w1, [x19, #308]
   33330:	sub	w2, w2, #0x1
   33334:	ldr	x0, [x19, #368]
   33338:	str	w2, [x20, #4]
   3333c:	sub	w1, w1, #0x1
   33340:	str	w1, [x19, #308]
   33344:	cbz	x0, 33350 <__asan_backtrace_create_state@@Base+0x56c8>
   33348:	ldr	x0, [sp, #128]
   3334c:	str	x0, [x19, #288]
   33350:	ldr	x1, [x19, #256]
   33354:	ldrb	w0, [x19, #264]
   33358:	mov	x3, x1
   3335c:	cmp	w0, #0x3c
   33360:	b.eq	34778 <__asan_backtrace_create_state@@Base+0x6af0>  // b.none
   33364:	add	x0, x3, #0x1
   33368:	cmp	x3, #0xff
   3336c:	b.ne	33398 <__asan_backtrace_create_state@@Base+0x5710>  // b.any
   33370:	ldp	x4, x2, [x19, #272]
   33374:	strb	wzr, [x19, #255]
   33378:	mov	x1, x3
   3337c:	mov	x0, x19
   33380:	blr	x4
   33384:	ldr	x1, [x19, #320]
   33388:	mov	x0, #0x1                   	// #1
   3338c:	mov	x3, #0x0                   	// #0
   33390:	add	x1, x1, x0
   33394:	str	x1, [x19, #320]
   33398:	str	x0, [x19, #256]
   3339c:	mov	w1, #0x3c                  	// #60
   333a0:	strb	w1, [x19, x3]
   333a4:	strb	w1, [x19, #264]
   333a8:	ldr	x1, [x24, #8]
   333ac:	ldr	x20, [x1, #16]
   333b0:	cbz	x20, 33974 <__asan_backtrace_create_state@@Base+0x5cec>
   333b4:	ldr	w1, [x20, #4]
   333b8:	cmp	w1, #0x1
   333bc:	b.gt	33974 <__asan_backtrace_create_state@@Base+0x5cec>
   333c0:	ldr	w2, [x19, #308]
   333c4:	cmp	w2, #0x400
   333c8:	b.gt	33974 <__asan_backtrace_create_state@@Base+0x5cec>
   333cc:	ldr	x3, [x19, #328]
   333d0:	add	w1, w1, #0x1
   333d4:	str	w1, [x20, #4]
   333d8:	add	w2, w2, #0x1
   333dc:	add	x0, sp, #0x90
   333e0:	str	w2, [x19, #308]
   333e4:	str	x0, [x19, #328]
   333e8:	mov	w1, w22
   333ec:	mov	x2, x20
   333f0:	mov	x0, x19
   333f4:	stp	x20, x3, [sp, #144]
   333f8:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   333fc:	ldr	w1, [x19, #308]
   33400:	ldr	x0, [sp, #152]
   33404:	str	x0, [x19, #328]
   33408:	ldr	w0, [x20, #4]
   3340c:	sub	w1, w1, #0x1
   33410:	sub	w0, w0, #0x1
   33414:	str	w0, [x20, #4]
   33418:	ldr	x0, [x19, #256]
   3341c:	str	w1, [x19, #308]
   33420:	ldrb	w2, [x19, #264]
   33424:	mov	x1, x0
   33428:	cmp	w2, #0x3e
   3342c:	b.ne	33470 <__asan_backtrace_create_state@@Base+0x57e8>  // b.any
   33430:	cmp	x0, #0xff
   33434:	b.ne	3345c <__asan_backtrace_create_state@@Base+0x57d4>  // b.any
   33438:	ldp	x3, x2, [x19, #272]
   3343c:	strb	wzr, [x19, #255]
   33440:	mov	x0, x19
   33444:	blr	x3
   33448:	str	xzr, [x19, #256]
   3344c:	ldr	x0, [x19, #320]
   33450:	mov	x1, #0x0                   	// #0
   33454:	add	x0, x0, #0x1
   33458:	str	x0, [x19, #320]
   3345c:	add	x0, x1, #0x1
   33460:	str	x0, [x19, #256]
   33464:	mov	w2, #0x20                  	// #32
   33468:	strb	w2, [x19, x1]
   3346c:	strb	w2, [x19, #264]
   33470:	add	x1, x0, #0x1
   33474:	cmp	x0, #0xff
   33478:	b.ne	334a4 <__asan_backtrace_create_state@@Base+0x581c>  // b.any
   3347c:	ldp	x3, x2, [x19, #272]
   33480:	strb	wzr, [x19, #255]
   33484:	mov	x1, x0
   33488:	mov	x0, x19
   3348c:	blr	x3
   33490:	ldr	x2, [x19, #320]
   33494:	mov	x1, #0x1                   	// #1
   33498:	mov	x0, #0x0                   	// #0
   3349c:	add	x2, x2, x1
   334a0:	str	x2, [x19, #320]
   334a4:	str	x1, [x19, #256]
   334a8:	mov	w1, #0x3e                  	// #62
   334ac:	strb	w1, [x19, x0]
   334b0:	strb	w1, [x19, #264]
   334b4:	ldp	x21, x22, [sp, #32]
   334b8:	ldp	x23, x24, [sp, #48]
   334bc:	ldp	x25, x26, [sp, #64]
   334c0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   334c4:	ldr	x0, [x23, #8]
   334c8:	ldr	w21, [x0, #28]
   334cc:	cmp	w21, #0x6
   334d0:	b.hi	3356c <__asan_backtrace_create_state@@Base+0x58e4>  // b.pmore
   334d4:	cbz	w21, 2ec44 <__asan_backtrace_create_state@@Base+0xfbc>
   334d8:	ldr	x0, [x2, #16]
   334dc:	ldr	w0, [x0]
   334e0:	cbnz	w0, 2ec44 <__asan_backtrace_create_state@@Base+0xfbc>
   334e4:	cmp	w20, #0x3e
   334e8:	b.eq	34df0 <__asan_backtrace_create_state@@Base+0x7168>  // b.none
   334ec:	ldr	x2, [x24, #16]
   334f0:	mov	w1, w22
   334f4:	mov	x0, x19
   334f8:	bl	34ed8 <__asan_backtrace_create_state@@Base+0x7250>
   334fc:	cmp	w21, #0x4
   33500:	b.eq	34dc0 <__asan_backtrace_create_state@@Base+0x7138>  // b.none
   33504:	b.hi	34b60 <__asan_backtrace_create_state@@Base+0x6ed8>  // b.pmore
   33508:	cmp	w21, #0x2
   3350c:	b.eq	34d64 <__asan_backtrace_create_state@@Base+0x70dc>  // b.none
   33510:	cmp	w21, #0x3
   33514:	b.ne	34e94 <__asan_backtrace_create_state@@Base+0x720c>  // b.any
   33518:	ldr	x1, [x19, #256]
   3351c:	cmp	x1, #0xff
   33520:	b.ne	33548 <__asan_backtrace_create_state@@Base+0x58c0>  // b.any
   33524:	ldp	x3, x2, [x19, #272]
   33528:	strb	wzr, [x19, #255]
   3352c:	mov	x0, x19
   33530:	blr	x3
   33534:	str	xzr, [x19, #256]
   33538:	ldr	x0, [x19, #320]
   3353c:	mov	x1, #0x0                   	// #0
   33540:	add	x0, x0, #0x1
   33544:	str	x0, [x19, #320]
   33548:	add	x0, x1, #0x1
   3354c:	str	x0, [x19, #256]
   33550:	mov	w0, #0x6c                  	// #108
   33554:	strb	w0, [x19, x1]
   33558:	strb	w0, [x19, #264]
   3355c:	ldp	x21, x22, [sp, #32]
   33560:	ldp	x23, x24, [sp, #48]
   33564:	ldp	x25, x26, [sp, #64]
   33568:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3356c:	cmp	w21, #0x7
   33570:	b.ne	2ec44 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   33574:	ldr	x0, [x2, #16]
   33578:	ldr	w1, [x0]
   3357c:	cbnz	w1, 2ec44 <__asan_backtrace_create_state@@Base+0xfbc>
   33580:	ldr	w1, [x0, #16]
   33584:	cmp	w20, #0x3d
   33588:	ccmp	w1, #0x1, #0x0, eq  // eq = none
   3358c:	b.ne	2ec44 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   33590:	ldr	x0, [x0, #8]
   33594:	ldrb	w0, [x0]
   33598:	cmp	w0, #0x30
   3359c:	b.eq	34ea4 <__asan_backtrace_create_state@@Base+0x721c>  // b.none
   335a0:	cmp	w0, #0x31
   335a4:	b.ne	2ec44 <__asan_backtrace_create_state@@Base+0xfbc>  // b.any
   335a8:	adrp	x20, 40000 <__asan_backtrace_get_view@@Base+0x78>
   335ac:	add	x20, x20, #0xbe0
   335b0:	mov	x0, x20
   335b4:	bl	64b0 <__asan_internal_strlen@plt>
   335b8:	mov	x1, x20
   335bc:	mov	x2, x0
   335c0:	mov	x0, x19
   335c4:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   335c8:	ldp	x21, x22, [sp, #32]
   335cc:	ldp	x23, x24, [sp, #48]
   335d0:	ldp	x25, x26, [sp, #64]
   335d4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   335d8:	ldp	x3, x2, [x19, #272]
   335dc:	strb	wzr, [x19, #255]
   335e0:	mov	x1, x0
   335e4:	mov	x0, x19
   335e8:	blr	x3
   335ec:	ldr	x0, [x19, #320]
   335f0:	mov	x2, #0x1                   	// #1
   335f4:	ldr	x23, [x24, #8]
   335f8:	mov	w1, #0x28                  	// #40
   335fc:	add	x0, x0, x2
   33600:	strb	w1, [x19]
   33604:	str	x2, [x19, #256]
   33608:	strb	w1, [x19, #264]
   3360c:	str	x0, [x19, #320]
   33610:	cbnz	x23, 34470 <__asan_backtrace_create_state@@Base+0x67e8>
   33614:	mov	w0, #0x29                  	// #41
   33618:	strb	w0, [x19, #1]
   3361c:	strb	w0, [x19, #264]
   33620:	mov	x0, #0x2                   	// #2
   33624:	str	w2, [x19, #304]
   33628:	ldr	w1, [x24]
   3362c:	str	x0, [x19, #256]
   33630:	cmp	w1, #0x3e
   33634:	b.ne	3321c <__asan_backtrace_create_state@@Base+0x5594>  // b.any
   33638:	ldr	x2, [x19, #256]
   3363c:	mov	w1, #0x2d                  	// #45
   33640:	add	x0, x2, #0x1
   33644:	str	x0, [x19, #256]
   33648:	strb	w1, [x19, x2]
   3364c:	strb	w1, [x19, #264]
   33650:	b	3321c <__asan_backtrace_create_state@@Base+0x5594>
   33654:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   33658:	add	x20, x20, #0xe0
   3365c:	mov	x0, x20
   33660:	bl	64b0 <__asan_internal_strlen@plt>
   33664:	cbz	x0, 2f288 <__asan_backtrace_create_state@@Base+0x1600>
   33668:	add	x23, x20, x0
   3366c:	mov	x25, #0x1                   	// #1
   33670:	ldr	x1, [x19, #256]
   33674:	b	336d0 <__asan_backtrace_create_state@@Base+0x5a48>
   33678:	ldp	x3, x2, [x19, #272]
   3367c:	strb	wzr, [x19, #255]
   33680:	mov	x0, x19
   33684:	add	x20, x20, #0x1
   33688:	blr	x3
   3368c:	strb	w21, [x19]
   33690:	ldr	x0, [x19, #320]
   33694:	str	x25, [x19, #256]
   33698:	strb	w21, [x19, #264]
   3369c:	cmp	x20, x23
   336a0:	add	x0, x0, #0x1
   336a4:	str	x0, [x19, #320]
   336a8:	b.eq	2f288 <__asan_backtrace_create_state@@Base+0x1600>  // b.none
   336ac:	ldrb	w21, [x20]
   336b0:	mov	x0, #0x1                   	// #1
   336b4:	add	x1, x0, #0x1
   336b8:	str	x1, [x19, #256]
   336bc:	strb	w21, [x19, x0]
   336c0:	add	x20, x20, #0x1
   336c4:	strb	w21, [x19, #264]
   336c8:	cmp	x23, x20
   336cc:	b.eq	2f288 <__asan_backtrace_create_state@@Base+0x1600>  // b.none
   336d0:	ldrb	w21, [x20]
   336d4:	cmp	x1, #0xff
   336d8:	b.eq	33678 <__asan_backtrace_create_state@@Base+0x59f0>  // b.none
   336dc:	mov	x0, x1
   336e0:	b	336b4 <__asan_backtrace_create_state@@Base+0x5a2c>
   336e4:	mov	x1, #0x1                   	// #1
   336e8:	add	x0, x1, #0x1
   336ec:	b	332a4 <__asan_backtrace_create_state@@Base+0x561c>
   336f0:	ldr	x1, [x19, #256]
   336f4:	cmp	x1, #0xff
   336f8:	b.ne	3371c <__asan_backtrace_create_state@@Base+0x5a94>  // b.any
   336fc:	ldp	x3, x2, [x19, #272]
   33700:	strb	wzr, [x19, #255]
   33704:	mov	x0, x19
   33708:	blr	x3
   3370c:	ldr	x0, [x19, #320]
   33710:	mov	x1, #0x0                   	// #0
   33714:	add	x0, x0, #0x1
   33718:	str	x0, [x19, #320]
   3371c:	add	x0, x1, #0x1
   33720:	str	x0, [x19, #256]
   33724:	mov	w0, #0x5d                  	// #93
   33728:	strb	w0, [x19, x1]
   3372c:	strb	w0, [x19, #264]
   33730:	ldp	x21, x22, [sp, #32]
   33734:	ldp	x23, x24, [sp, #48]
   33738:	ldp	x25, x26, [sp, #64]
   3373c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33740:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   33744:	add	x20, x20, #0xef0
   33748:	mov	x0, x20
   3374c:	bl	64b0 <__asan_internal_strlen@plt>
   33750:	cbz	x0, 2e9c8 <__asan_backtrace_create_state@@Base+0xd40>
   33754:	add	x23, x20, x0
   33758:	mov	x25, #0x1                   	// #1
   3375c:	ldr	x1, [x19, #256]
   33760:	b	337bc <__asan_backtrace_create_state@@Base+0x5b34>
   33764:	ldp	x3, x2, [x19, #272]
   33768:	strb	wzr, [x19, #255]
   3376c:	mov	x0, x19
   33770:	add	x20, x20, #0x1
   33774:	blr	x3
   33778:	strb	w21, [x19]
   3377c:	ldr	x0, [x19, #320]
   33780:	str	x25, [x19, #256]
   33784:	strb	w21, [x19, #264]
   33788:	cmp	x20, x23
   3378c:	add	x0, x0, #0x1
   33790:	str	x0, [x19, #320]
   33794:	b.eq	2e9c8 <__asan_backtrace_create_state@@Base+0xd40>  // b.none
   33798:	ldrb	w21, [x20]
   3379c:	mov	x0, #0x1                   	// #1
   337a0:	add	x1, x0, #0x1
   337a4:	str	x1, [x19, #256]
   337a8:	strb	w21, [x19, x0]
   337ac:	add	x20, x20, #0x1
   337b0:	strb	w21, [x19, #264]
   337b4:	cmp	x20, x23
   337b8:	b.eq	2e9c8 <__asan_backtrace_create_state@@Base+0xd40>  // b.none
   337bc:	ldrb	w21, [x20]
   337c0:	cmp	x1, #0xff
   337c4:	b.eq	33764 <__asan_backtrace_create_state@@Base+0x5adc>  // b.none
   337c8:	mov	x0, x1
   337cc:	b	337a0 <__asan_backtrace_create_state@@Base+0x5b18>
   337d0:	ldr	x20, [x22, #8]
   337d4:	ldrb	w0, [x20]
   337d8:	sub	w0, w0, #0x61
   337dc:	and	w0, w0, #0xff
   337e0:	cmp	w0, #0x19
   337e4:	b.hi	3291c <__asan_backtrace_create_state@@Base+0x4c94>  // b.pmore
   337e8:	mov	x1, #0x1                   	// #1
   337ec:	add	x0, x1, #0x1
   337f0:	b	3290c <__asan_backtrace_create_state@@Base+0x4c84>
   337f4:	cmp	x1, #0xff
   337f8:	b.eq	34708 <__asan_backtrace_create_state@@Base+0x6a80>  // b.none
   337fc:	add	x2, x1, #0x1
   33800:	str	x2, [x19, #256]
   33804:	mov	w0, #0x20                  	// #32
   33808:	strb	w0, [x19, x1]
   3380c:	mov	x1, x2
   33810:	strb	w0, [x19, #264]
   33814:	b	309d8 <__asan_backtrace_create_state@@Base+0x2d50>
   33818:	add	x2, x2, #0x10
   3381c:	mov	w1, w21
   33820:	mov	x0, x19
   33824:	bl	36b48 <__asan_backtrace_create_state@@Base+0x8ec0>
   33828:	ldr	x20, [x24, #8]
   3382c:	cbz	x20, 3485c <__asan_backtrace_create_state@@Base+0x6bd4>
   33830:	ldr	w0, [x20, #4]
   33834:	cmp	w0, #0x1
   33838:	b.gt	34094 <__asan_backtrace_create_state@@Base+0x640c>
   3383c:	ldr	w1, [x19, #308]
   33840:	cmp	w1, #0x400
   33844:	b.gt	34094 <__asan_backtrace_create_state@@Base+0x640c>
   33848:	ldr	x3, [x19, #328]
   3384c:	add	w0, w0, #0x1
   33850:	str	w0, [x20, #4]
   33854:	add	w1, w1, #0x1
   33858:	add	x0, sp, #0x90
   3385c:	str	w1, [x19, #308]
   33860:	str	x0, [x19, #328]
   33864:	mov	w1, w21
   33868:	mov	x0, x19
   3386c:	mov	x2, x20
   33870:	stp	x20, x3, [sp, #144]
   33874:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   33878:	ldr	w1, [x20, #4]
   3387c:	ldr	x0, [sp, #152]
   33880:	sub	w1, w1, #0x1
   33884:	ldp	x21, x22, [sp, #32]
   33888:	ldp	x23, x24, [sp, #48]
   3388c:	ldp	x25, x26, [sp, #64]
   33890:	str	x0, [x19, #328]
   33894:	ldr	w0, [x19, #308]
   33898:	str	w1, [x20, #4]
   3389c:	sub	w0, w0, #0x1
   338a0:	str	w0, [x19, #308]
   338a4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338a8:	ldp	x21, x22, [sp, #32]
   338ac:	ldp	x23, x24, [sp, #48]
   338b0:	ldp	x25, x26, [sp, #64]
   338b4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338b8:	ldp	x21, x22, [sp, #32]
   338bc:	ldp	x23, x24, [sp, #48]
   338c0:	ldp	x25, x26, [sp, #64]
   338c4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338c8:	ldp	x21, x22, [sp, #32]
   338cc:	ldp	x23, x24, [sp, #48]
   338d0:	ldp	x25, x26, [sp, #64]
   338d4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338d8:	ldp	x21, x22, [sp, #32]
   338dc:	ldp	x23, x24, [sp, #48]
   338e0:	ldp	x25, x26, [sp, #64]
   338e4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338e8:	ldp	x21, x22, [sp, #32]
   338ec:	ldp	x23, x24, [sp, #48]
   338f0:	ldp	x25, x26, [sp, #64]
   338f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   338f8:	ldp	x21, x22, [sp, #32]
   338fc:	ldp	x23, x24, [sp, #48]
   33900:	ldp	x25, x26, [sp, #64]
   33904:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33908:	ldp	x21, x22, [sp, #32]
   3390c:	ldp	x23, x24, [sp, #48]
   33910:	ldp	x25, x26, [sp, #64]
   33914:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33918:	ldp	x21, x22, [sp, #32]
   3391c:	ldp	x23, x24, [sp, #48]
   33920:	ldp	x25, x26, [sp, #64]
   33924:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33928:	ldp	x21, x22, [sp, #32]
   3392c:	ldp	x23, x24, [sp, #48]
   33930:	ldp	x25, x26, [sp, #64]
   33934:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33938:	ldp	x21, x22, [sp, #32]
   3393c:	ldp	x23, x24, [sp, #48]
   33940:	ldp	x25, x26, [sp, #64]
   33944:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33948:	ldp	x21, x22, [sp, #32]
   3394c:	ldp	x23, x24, [sp, #48]
   33950:	ldp	x25, x26, [sp, #64]
   33954:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33958:	mov	w0, #0x1                   	// #1
   3395c:	str	w0, [x19, #304]
   33960:	b	32fc4 <__asan_backtrace_create_state@@Base+0x533c>
   33964:	ldp	x21, x22, [sp, #32]
   33968:	ldp	x23, x24, [sp, #48]
   3396c:	ldp	x25, x26, [sp, #64]
   33970:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33974:	mov	w1, #0x1                   	// #1
   33978:	str	w1, [x19, #304]
   3397c:	b	33470 <__asan_backtrace_create_state@@Base+0x57e8>
   33980:	mov	w1, #0x1                   	// #1
   33984:	str	w1, [x19, #304]
   33988:	b	33344 <__asan_backtrace_create_state@@Base+0x56bc>
   3398c:	mov	w21, #0x0                   	// #0
   33990:	ldr	x4, [x19, #288]
   33994:	b	2e8f8 <__asan_backtrace_create_state@@Base+0xc70>
   33998:	cbz	x25, 3407c <__asan_backtrace_create_state@@Base+0x63f4>
   3399c:	ldr	w1, [x25, #4]
   339a0:	cmp	w1, #0x1
   339a4:	b.gt	3407c <__asan_backtrace_create_state@@Base+0x63f4>
   339a8:	ldr	w0, [x19, #308]
   339ac:	cmp	w0, #0x400
   339b0:	b.gt	3407c <__asan_backtrace_create_state@@Base+0x63f4>
   339b4:	ldr	x3, [x19, #328]
   339b8:	add	w1, w1, #0x1
   339bc:	add	w0, w0, #0x1
   339c0:	add	x2, sp, #0x90
   339c4:	str	w1, [x25, #4]
   339c8:	mov	w1, w22
   339cc:	str	w0, [x19, #308]
   339d0:	mov	x0, x2
   339d4:	str	x0, [x19, #328]
   339d8:	mov	x2, x25
   339dc:	mov	x0, x19
   339e0:	stp	x25, x3, [sp, #144]
   339e4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   339e8:	ldr	w1, [x25, #4]
   339ec:	ldr	x0, [sp, #152]
   339f0:	sub	w1, w1, #0x1
   339f4:	ldp	x21, x22, [sp, #32]
   339f8:	ldp	x23, x24, [sp, #48]
   339fc:	str	x0, [x19, #328]
   33a00:	ldr	w0, [x19, #308]
   33a04:	str	w1, [x25, #4]
   33a08:	sub	w0, w0, #0x1
   33a0c:	ldp	x25, x26, [sp, #64]
   33a10:	str	w0, [x19, #308]
   33a14:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33a18:	add	x1, x0, #0x2
   33a1c:	str	x1, [x19, #256]
   33a20:	mov	w2, #0x75                  	// #117
   33a24:	strb	w2, [x19, x3]
   33a28:	strb	w2, [x19, #264]
   33a2c:	cmp	x1, #0xff
   33a30:	b.ne	33b00 <__asan_backtrace_create_state@@Base+0x5e78>  // b.any
   33a34:	ldp	x3, x2, [x19, #272]
   33a38:	strb	wzr, [x19, #255]
   33a3c:	mov	x0, x19
   33a40:	blr	x3
   33a44:	ldr	x1, [x19, #320]
   33a48:	mov	w2, #0x74                  	// #116
   33a4c:	mov	x0, #0x1                   	// #1
   33a50:	strb	w2, [x19]
   33a54:	add	x1, x1, x0
   33a58:	str	x1, [x19, #320]
   33a5c:	b	30b20 <__asan_backtrace_create_state@@Base+0x2e98>
   33a60:	ldr	x25, [x25, #8]
   33a64:	cbz	x25, 34d58 <__asan_backtrace_create_state@@Base+0x70d0>
   33a68:	ldr	w4, [x25]
   33a6c:	add	x1, x21, #0x20
   33a70:	stp	x1, x25, [sp, #208]
   33a74:	sub	w1, w4, #0x1c
   33a78:	str	wzr, [sp, #224]
   33a7c:	cmp	w1, #0x34
   33a80:	str	x3, [sp, #232]
   33a84:	b.hi	34b58 <__asan_backtrace_create_state@@Base+0x6ed0>  // b.pmore
   33a88:	lsl	x0, x0, x1
   33a8c:	add	x1, x21, #0x40
   33a90:	tst	x0, x2
   33a94:	b.eq	30800 <__asan_backtrace_create_state@@Base+0x2b78>  // b.none
   33a98:	ldr	x25, [x25, #8]
   33a9c:	cbz	x25, 33f94 <__asan_backtrace_create_state@@Base+0x630c>
   33aa0:	ldr	w4, [x25]
   33aa4:	stp	x1, x25, [sp, #240]
   33aa8:	sub	w0, w4, #0x1c
   33aac:	str	wzr, [sp, #256]
   33ab0:	cmp	w0, #0x34
   33ab4:	str	x3, [sp, #264]
   33ab8:	b.hi	34cb0 <__asan_backtrace_create_state@@Base+0x7028>  // b.pmore
   33abc:	mov	x1, #0x1f                  	// #31
   33ac0:	mov	x2, #0x1                   	// #1
   33ac4:	movk	x1, #0x1a, lsl #48
   33ac8:	lsl	x0, x2, x0
   33acc:	mov	w20, #0x4                   	// #4
   33ad0:	tst	x0, x1
   33ad4:	add	x1, x21, #0x60
   33ad8:	b.eq	30800 <__asan_backtrace_create_state@@Base+0x2b78>  // b.none
   33adc:	ldr	x0, [x25, #8]
   33ae0:	mov	x21, x1
   33ae4:	cbz	x0, 33f98 <__asan_backtrace_create_state@@Base+0x6310>
   33ae8:	ldp	x21, x22, [sp, #32]
   33aec:	ldp	x23, x24, [sp, #48]
   33af0:	ldp	x25, x26, [sp, #64]
   33af4:	str	x1, [x19, #296]
   33af8:	str	w2, [x19, #304]
   33afc:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33b00:	add	x0, x0, #0x3
   33b04:	str	x0, [x19, #256]
   33b08:	mov	w2, #0x74                  	// #116
   33b0c:	strb	w2, [x19, x1]
   33b10:	strb	w2, [x19, #264]
   33b14:	cmp	x0, #0xff
   33b18:	b.ne	340e0 <__asan_backtrace_create_state@@Base+0x6458>  // b.any
   33b1c:	ldp	x3, x2, [x19, #272]
   33b20:	strb	wzr, [x19, #255]
   33b24:	mov	x1, x0
   33b28:	mov	x0, x19
   33b2c:	blr	x3
   33b30:	ldr	x0, [x19, #320]
   33b34:	mov	w2, #0x6f                  	// #111
   33b38:	mov	x1, #0x1                   	// #1
   33b3c:	strb	w2, [x19]
   33b40:	add	x0, x0, x1
   33b44:	str	x0, [x19, #320]
   33b48:	b	30b2c <__asan_backtrace_create_state@@Base+0x2ea4>
   33b4c:	mov	x23, #0x1                   	// #1
   33b50:	b	329bc <__asan_backtrace_create_state@@Base+0x4d34>
   33b54:	ldp	x21, x22, [sp, #32]
   33b58:	ldp	x23, x24, [sp, #48]
   33b5c:	ldp	x25, x26, [sp, #64]
   33b60:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33b64:	ldr	x0, [x23, #8]
   33b68:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   33b6c:	add	x1, x1, #0x120
   33b70:	ldr	x21, [x0]
   33b74:	mov	x0, x21
   33b78:	bl	67f0 <__asan_internal_strcmp@plt>
   33b7c:	cbz	w0, 34820 <__asan_backtrace_create_state@@Base+0x6b98>
   33b80:	ldr	w0, [x20]
   33b84:	cmp	w0, #0x39
   33b88:	b.eq	33c38 <__asan_backtrace_create_state@@Base+0x5fb0>  // b.none
   33b8c:	cbz	x21, 33bbc <__asan_backtrace_create_state@@Base+0x5f34>
   33b90:	mov	x0, x21
   33b94:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   33b98:	add	x1, x1, #0x128
   33b9c:	bl	67f0 <__asan_internal_strcmp@plt>
   33ba0:	mov	w3, w0
   33ba4:	cbz	w0, 34ccc <__asan_backtrace_create_state@@Base+0x7044>
   33ba8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   33bac:	mov	x0, x21
   33bb0:	add	x1, x1, #0x228
   33bb4:	bl	67f0 <__asan_internal_strcmp@plt>
   33bb8:	cbz	w0, 33bc4 <__asan_backtrace_create_state@@Base+0x5f3c>
   33bbc:	ldr	w0, [x23]
   33bc0:	b	30094 <__asan_backtrace_create_state@@Base+0x240c>
   33bc4:	mov	w3, #0x0                   	// #0
   33bc8:	b	33bd8 <__asan_backtrace_create_state@@Base+0x5f50>
   33bcc:	add	w3, w3, #0x1
   33bd0:	ldr	x20, [x20, #16]
   33bd4:	cbz	x20, 34804 <__asan_backtrace_create_state@@Base+0x6b7c>
   33bd8:	ldr	w0, [x20]
   33bdc:	cmp	w0, #0x2f
   33be0:	b.ne	34804 <__asan_backtrace_create_state@@Base+0x6b7c>  // b.any
   33be4:	ldr	x0, [x20, #8]
   33be8:	cbz	x0, 34804 <__asan_backtrace_create_state@@Base+0x6b7c>
   33bec:	ldr	w1, [x0]
   33bf0:	cmp	w1, #0x4b
   33bf4:	b.ne	33bcc <__asan_backtrace_create_state@@Base+0x5f44>  // b.any
   33bf8:	ldr	x1, [x0, #8]
   33bfc:	mov	x0, x19
   33c00:	bl	2e080 <__asan_backtrace_create_state@@Base+0x3f8>
   33c04:	mov	w1, #0x0                   	// #0
   33c08:	cbnz	x0, 33c24 <__asan_backtrace_create_state@@Base+0x5f9c>
   33c0c:	b	33c30 <__asan_backtrace_create_state@@Base+0x5fa8>
   33c10:	ldr	x2, [x0, #8]
   33c14:	cbz	x2, 33c30 <__asan_backtrace_create_state@@Base+0x5fa8>
   33c18:	ldr	x0, [x0, #16]
   33c1c:	add	w1, w1, #0x1
   33c20:	cbz	x0, 33c30 <__asan_backtrace_create_state@@Base+0x5fa8>
   33c24:	ldr	w2, [x0]
   33c28:	cmp	w2, #0x2f
   33c2c:	b.eq	33c10 <__asan_backtrace_create_state@@Base+0x5f88>  // b.none
   33c30:	add	w3, w3, w1
   33c34:	b	33bd0 <__asan_backtrace_create_state@@Base+0x5f48>
   33c38:	ldr	x2, [x20, #8]
   33c3c:	mov	w1, w22
   33c40:	mov	x0, x19
   33c44:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   33c48:	mov	x2, x23
   33c4c:	mov	w1, w22
   33c50:	mov	x0, x19
   33c54:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   33c58:	ldp	x21, x22, [sp, #32]
   33c5c:	ldp	x23, x24, [sp, #48]
   33c60:	ldp	x25, x26, [sp, #64]
   33c64:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33c68:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   33c6c:	add	x20, x20, #0xef8
   33c70:	mov	x0, x20
   33c74:	bl	64b0 <__asan_internal_strlen@plt>
   33c78:	cbz	x0, 33cf8 <__asan_backtrace_create_state@@Base+0x6070>
   33c7c:	add	x24, x20, x0
   33c80:	mov	x25, #0x1                   	// #1
   33c84:	ldr	x1, [x19, #256]
   33c88:	b	33ce4 <__asan_backtrace_create_state@@Base+0x605c>
   33c8c:	ldp	x3, x2, [x19, #272]
   33c90:	strb	wzr, [x19, #255]
   33c94:	mov	x0, x19
   33c98:	add	x20, x20, #0x1
   33c9c:	blr	x3
   33ca0:	strb	w21, [x19]
   33ca4:	ldr	x0, [x19, #320]
   33ca8:	str	x25, [x19, #256]
   33cac:	strb	w21, [x19, #264]
   33cb0:	cmp	x20, x24
   33cb4:	add	x0, x0, #0x1
   33cb8:	str	x0, [x19, #320]
   33cbc:	b.eq	33cf8 <__asan_backtrace_create_state@@Base+0x6070>  // b.none
   33cc0:	ldrb	w21, [x20]
   33cc4:	mov	x0, #0x1                   	// #1
   33cc8:	add	x1, x0, #0x1
   33ccc:	str	x1, [x19, #256]
   33cd0:	strb	w21, [x19, x0]
   33cd4:	add	x20, x20, #0x1
   33cd8:	strb	w21, [x19, #264]
   33cdc:	cmp	x24, x20
   33ce0:	b.eq	33cf8 <__asan_backtrace_create_state@@Base+0x6070>  // b.none
   33ce4:	ldrb	w21, [x20]
   33ce8:	cmp	x1, #0xff
   33cec:	b.eq	33c8c <__asan_backtrace_create_state@@Base+0x6004>  // b.none
   33cf0:	mov	x0, x1
   33cf4:	b	33cc8 <__asan_backtrace_create_state@@Base+0x6040>
   33cf8:	ldr	w2, [x23, #16]
   33cfc:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   33d00:	add	x1, x1, #0x378
   33d04:	add	x20, sp, #0x90
   33d08:	add	w2, w2, #0x1
   33d0c:	mov	x0, x20
   33d10:	bl	65f0 <sprintf@plt>
   33d14:	mov	x0, x20
   33d18:	bl	64b0 <__asan_internal_strlen@plt>
   33d1c:	cbz	x0, 33d9c <__asan_backtrace_create_state@@Base+0x6114>
   33d20:	add	x24, x20, x0
   33d24:	mov	x25, #0x1                   	// #1
   33d28:	ldr	x1, [x19, #256]
   33d2c:	b	33d88 <__asan_backtrace_create_state@@Base+0x6100>
   33d30:	ldp	x3, x2, [x19, #272]
   33d34:	strb	wzr, [x19, #255]
   33d38:	mov	x0, x19
   33d3c:	add	x20, x20, #0x1
   33d40:	blr	x3
   33d44:	strb	w21, [x19]
   33d48:	ldr	x0, [x19, #320]
   33d4c:	str	x25, [x19, #256]
   33d50:	strb	w21, [x19, #264]
   33d54:	cmp	x20, x24
   33d58:	add	x0, x0, #0x1
   33d5c:	str	x0, [x19, #320]
   33d60:	b.eq	33d9c <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   33d64:	ldrb	w21, [x20]
   33d68:	mov	x0, #0x1                   	// #1
   33d6c:	add	x1, x0, #0x1
   33d70:	str	x1, [x19, #256]
   33d74:	strb	w21, [x19, x0]
   33d78:	add	x20, x20, #0x1
   33d7c:	strb	w21, [x19, #264]
   33d80:	cmp	x20, x24
   33d84:	b.eq	33d9c <__asan_backtrace_create_state@@Base+0x6114>  // b.none
   33d88:	ldrb	w21, [x20]
   33d8c:	cmp	x1, #0xff
   33d90:	b.eq	33d30 <__asan_backtrace_create_state@@Base+0x60a8>  // b.none
   33d94:	mov	x0, x1
   33d98:	b	33d6c <__asan_backtrace_create_state@@Base+0x60e4>
   33d9c:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   33da0:	add	x20, x20, #0xf08
   33da4:	mov	x0, x20
   33da8:	bl	64b0 <__asan_internal_strlen@plt>
   33dac:	cbz	x0, 32600 <__asan_backtrace_create_state@@Base+0x4978>
   33db0:	add	x24, x20, x0
   33db4:	mov	x25, #0x1                   	// #1
   33db8:	ldr	x1, [x19, #256]
   33dbc:	b	33e18 <__asan_backtrace_create_state@@Base+0x6190>
   33dc0:	ldp	x3, x2, [x19, #272]
   33dc4:	strb	wzr, [x19, #255]
   33dc8:	mov	x0, x19
   33dcc:	add	x20, x20, #0x1
   33dd0:	blr	x3
   33dd4:	strb	w21, [x19]
   33dd8:	ldr	x0, [x19, #320]
   33ddc:	str	x25, [x19, #256]
   33de0:	strb	w21, [x19, #264]
   33de4:	cmp	x20, x24
   33de8:	add	x0, x0, #0x1
   33dec:	str	x0, [x19, #320]
   33df0:	b.eq	32600 <__asan_backtrace_create_state@@Base+0x4978>  // b.none
   33df4:	ldrb	w21, [x20]
   33df8:	mov	x0, #0x1                   	// #1
   33dfc:	add	x1, x0, #0x1
   33e00:	str	x1, [x19, #256]
   33e04:	strb	w21, [x19, x0]
   33e08:	add	x20, x20, #0x1
   33e0c:	strb	w21, [x19, #264]
   33e10:	cmp	x24, x20
   33e14:	b.eq	32600 <__asan_backtrace_create_state@@Base+0x4978>  // b.none
   33e18:	ldrb	w21, [x20]
   33e1c:	cmp	x1, #0xff
   33e20:	b.eq	33dc0 <__asan_backtrace_create_state@@Base+0x6138>  // b.none
   33e24:	mov	x0, x1
   33e28:	b	33dfc <__asan_backtrace_create_state@@Base+0x6174>
   33e2c:	ldr	x25, [x25, #16]
   33e30:	ldr	w4, [x25]
   33e34:	cmp	w4, #0x47
   33e38:	b.eq	349d4 <__asan_backtrace_create_state@@Base+0x6d4c>  // b.none
   33e3c:	sub	w2, w4, #0x1c
   33e40:	cmp	w2, #0x34
   33e44:	b.hi	3080c <__asan_backtrace_create_state@@Base+0x2b84>  // b.pmore
   33e48:	mov	x0, #0x1                   	// #1
   33e4c:	mov	x1, #0x1f                  	// #31
   33e50:	movk	x1, #0x1a, lsl #48
   33e54:	lsl	x2, x0, x2
   33e58:	tst	x2, x1
   33e5c:	b.eq	3080c <__asan_backtrace_create_state@@Base+0x2b84>  // b.none
   33e60:	cmp	w20, #0x4
   33e64:	b.eq	33f9c <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   33e68:	sub	w2, w20, #0x1
   33e6c:	ubfiz	x8, x20, #5, #32
   33e70:	add	x7, x21, x8
   33e74:	add	x9, sp, #0x98
   33e78:	add	x12, x21, x2, lsl #5
   33e7c:	lsl	x2, x2, #5
   33e80:	add	x11, sp, #0xa0
   33e84:	add	x10, sp, #0xa8
   33e88:	add	w6, w20, #0x1
   33e8c:	ldp	x4, x5, [x12]
   33e90:	stp	x4, x5, [x7]
   33e94:	ldp	x4, x5, [x12, #16]
   33e98:	stp	x4, x5, [x7, #16]
   33e9c:	str	x12, [x21, x8]
   33ea0:	str	x25, [x9, x2]
   33ea4:	ldr	x25, [x25, #8]
   33ea8:	str	wzr, [x11, x2]
   33eac:	str	x3, [x10, x2]
   33eb0:	ldr	w4, [x25]
   33eb4:	str	x7, [x19, #296]
   33eb8:	sub	w2, w4, #0x1c
   33ebc:	cmp	w2, #0x34
   33ec0:	b.hi	33ed0 <__asan_backtrace_create_state@@Base+0x6248>  // b.pmore
   33ec4:	lsl	x2, x0, x2
   33ec8:	tst	x2, x1
   33ecc:	b.ne	33ed8 <__asan_backtrace_create_state@@Base+0x6250>  // b.any
   33ed0:	mov	w20, w6
   33ed4:	b	3080c <__asan_backtrace_create_state@@Base+0x2b84>
   33ed8:	cmp	w6, #0x4
   33edc:	b.eq	33f9c <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   33ee0:	ubfiz	x6, x6, #5, #32
   33ee4:	add	w20, w20, #0x2
   33ee8:	add	x2, x21, x6
   33eec:	ldp	x4, x5, [x7]
   33ef0:	stp	x4, x5, [x2]
   33ef4:	ldp	x4, x5, [x7, #16]
   33ef8:	stp	x4, x5, [x2, #16]
   33efc:	str	x7, [x21, x6]
   33f00:	str	x25, [x9, x8]
   33f04:	ldr	x25, [x25, #8]
   33f08:	str	wzr, [x11, x8]
   33f0c:	str	x3, [x10, x8]
   33f10:	ldr	w4, [x25]
   33f14:	str	x2, [x19, #296]
   33f18:	sub	w2, w4, #0x1c
   33f1c:	cmp	w2, #0x34
   33f20:	b.hi	3080c <__asan_backtrace_create_state@@Base+0x2b84>  // b.pmore
   33f24:	lsl	x0, x0, x2
   33f28:	tst	x0, x1
   33f2c:	b.eq	3080c <__asan_backtrace_create_state@@Base+0x2b84>  // b.none
   33f30:	cmp	w20, #0x4
   33f34:	b.eq	33f9c <__asan_backtrace_create_state@@Base+0x6314>  // b.none
   33f38:	ldp	x0, x1, [sp, #208]
   33f3c:	str	x25, [sp, #216]
   33f40:	ldr	x25, [x25, #8]
   33f44:	stp	x0, x1, [sp, #240]
   33f48:	add	x1, x21, #0x40
   33f4c:	ldp	x6, x7, [sp, #224]
   33f50:	add	x0, x21, #0x60
   33f54:	ldr	w4, [x25]
   33f58:	str	wzr, [sp, #224]
   33f5c:	stp	x3, x1, [sp, #232]
   33f60:	sub	w2, w4, #0x1c
   33f64:	cmp	w2, #0x34
   33f68:	stp	x6, x7, [sp, #256]
   33f6c:	str	x0, [x19, #296]
   33f70:	b.hi	33f8c <__asan_backtrace_create_state@@Base+0x6304>  // b.pmore
   33f74:	mov	x0, #0x1                   	// #1
   33f78:	mov	x1, #0x1f                  	// #31
   33f7c:	movk	x1, #0x1a, lsl #48
   33f80:	lsl	x0, x0, x2
   33f84:	tst	x0, x1
   33f88:	b.ne	33f9c <__asan_backtrace_create_state@@Base+0x6314>  // b.any
   33f8c:	mov	w20, #0x4                   	// #4
   33f90:	b	3080c <__asan_backtrace_create_state@@Base+0x2b84>
   33f94:	add	x21, x21, #0x40
   33f98:	str	x21, [x19, #296]
   33f9c:	mov	w0, #0x1                   	// #1
   33fa0:	ldp	x21, x22, [sp, #32]
   33fa4:	ldp	x23, x24, [sp, #48]
   33fa8:	ldp	x25, x26, [sp, #64]
   33fac:	str	w0, [x19, #304]
   33fb0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33fb4:	mov	w0, #0x1                   	// #1
   33fb8:	ldp	x21, x22, [sp, #32]
   33fbc:	ldp	x23, x24, [sp, #48]
   33fc0:	ldp	x25, x26, [sp, #64]
   33fc4:	str	w0, [x19, #304]
   33fc8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   33fcc:	mov	w1, #0x1                   	// #1
   33fd0:	str	w1, [x19, #304]
   33fd4:	b	30188 <__asan_backtrace_create_state@@Base+0x2500>
   33fd8:	ldr	x1, [x19, #288]
   33fdc:	add	x0, sp, #0x90
   33fe0:	stp	x3, x24, [sp, #144]
   33fe4:	str	wzr, [sp, #160]
   33fe8:	str	x1, [sp, #168]
   33fec:	ldr	w1, [x20, #4]
   33ff0:	str	x0, [x19, #296]
   33ff4:	cmp	w1, #0x1
   33ff8:	b.gt	34544 <__asan_backtrace_create_state@@Base+0x68bc>
   33ffc:	ldr	w0, [x19, #308]
   34000:	cmp	w0, #0x400
   34004:	b.gt	34544 <__asan_backtrace_create_state@@Base+0x68bc>
   34008:	add	w1, w1, #0x1
   3400c:	add	w0, w0, #0x1
   34010:	ldr	x3, [x19, #328]
   34014:	str	w1, [x20, #4]
   34018:	add	x1, sp, #0x80
   3401c:	str	w0, [x19, #308]
   34020:	mov	x0, x1
   34024:	str	x0, [x19, #328]
   34028:	mov	x2, x20
   3402c:	mov	w1, w21
   34030:	mov	x0, x19
   34034:	stp	x20, x3, [sp, #128]
   34038:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3403c:	ldr	w1, [x20, #4]
   34040:	ldr	x0, [sp, #136]
   34044:	sub	w1, w1, #0x1
   34048:	ldr	w2, [sp, #160]
   3404c:	str	x0, [x19, #328]
   34050:	ldr	w0, [x19, #308]
   34054:	str	w1, [x20, #4]
   34058:	ldr	x1, [sp, #144]
   3405c:	sub	w0, w0, #0x1
   34060:	str	x1, [x19, #296]
   34064:	str	w0, [x19, #308]
   34068:	cbz	w2, 34550 <__asan_backtrace_create_state@@Base+0x68c8>
   3406c:	ldp	x21, x22, [sp, #32]
   34070:	ldp	x23, x24, [sp, #48]
   34074:	ldp	x25, x26, [sp, #64]
   34078:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3407c:	mov	w0, #0x1                   	// #1
   34080:	ldp	x21, x22, [sp, #32]
   34084:	ldp	x23, x24, [sp, #48]
   34088:	ldp	x25, x26, [sp, #64]
   3408c:	str	w0, [x19, #304]
   34090:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34094:	mov	w0, #0x1                   	// #1
   34098:	ldp	x21, x22, [sp, #32]
   3409c:	ldp	x23, x24, [sp, #48]
   340a0:	ldp	x25, x26, [sp, #64]
   340a4:	str	w0, [x19, #304]
   340a8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   340ac:	ldp	x3, x2, [x19, #272]
   340b0:	strb	wzr, [x19, #255]
   340b4:	mov	x1, x0
   340b8:	mov	x0, x19
   340bc:	blr	x3
   340c0:	ldr	x1, [x19, #320]
   340c4:	mov	w3, #0x7561                	// #30049
   340c8:	mov	w2, #0x74                  	// #116
   340cc:	mov	x0, #0x3                   	// #3
   340d0:	add	x1, x1, #0x1
   340d4:	strh	w3, [x19]
   340d8:	strb	w2, [x19, #2]
   340dc:	str	x1, [x19, #320]
   340e0:	add	x1, x0, #0x1
   340e4:	str	x1, [x19, #256]
   340e8:	mov	w2, #0x6f                  	// #111
   340ec:	strb	w2, [x19, x0]
   340f0:	strb	w2, [x19, #264]
   340f4:	cmp	x1, #0xff
   340f8:	b.ne	30b2c <__asan_backtrace_create_state@@Base+0x2ea4>  // b.any
   340fc:	ldp	x3, x2, [x19, #272]
   34100:	strb	wzr, [x19, #255]
   34104:	mov	x0, x19
   34108:	blr	x3
   3410c:	ldr	x2, [x19, #320]
   34110:	mov	x0, #0x1                   	// #1
   34114:	mov	x1, #0x0                   	// #0
   34118:	add	x2, x2, x0
   3411c:	str	x2, [x19, #320]
   34120:	b	30b30 <__asan_backtrace_create_state@@Base+0x2ea8>
   34124:	ldr	w4, [x19, #344]
   34128:	ldr	x5, [x19, #336]
   3412c:	cmp	w4, #0x0
   34130:	b.le	34b98 <__asan_backtrace_create_state@@Base+0x6f10>
   34134:	sub	w2, w4, #0x1
   34138:	add	x0, x5, #0x10
   3413c:	mov	x1, x5
   34140:	add	x2, x0, w2, uxtw #4
   34144:	b	34154 <__asan_backtrace_create_state@@Base+0x64cc>
   34148:	add	x1, x1, #0x10
   3414c:	cmp	x2, x1
   34150:	b.eq	34b98 <__asan_backtrace_create_state@@Base+0x6f10>  // b.none
   34154:	ldr	x0, [x1]
   34158:	cmp	x3, x0
   3415c:	b.ne	34148 <__asan_backtrace_create_state@@Base+0x64c0>  // b.any
   34160:	ldr	x4, [x19, #328]
   34164:	mov	x0, x4
   34168:	cbnz	x4, 34184 <__asan_backtrace_create_state@@Base+0x64fc>
   3416c:	b	349e4 <__asan_backtrace_create_state@@Base+0x6d5c>
   34170:	cmp	x2, x24
   34174:	ccmp	x4, x0, #0x4, eq  // eq = none
   34178:	b.ne	34190 <__asan_backtrace_create_state@@Base+0x6508>  // b.any
   3417c:	ldr	x0, [x0, #8]
   34180:	cbz	x0, 349e4 <__asan_backtrace_create_state@@Base+0x6d5c>
   34184:	ldr	x2, [x0]
   34188:	cmp	x2, x3
   3418c:	b.ne	34170 <__asan_backtrace_create_state@@Base+0x64e8>  // b.any
   34190:	ldr	x4, [x19, #288]
   34194:	cbz	x4, 2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   34198:	mov	w21, #0x0                   	// #0
   3419c:	ldr	x2, [x3, #8]
   341a0:	ldr	x0, [x4, #8]
   341a4:	mov	w1, w2
   341a8:	ldr	x0, [x0, #16]
   341ac:	tbnz	w2, #31, 347d0 <__asan_backtrace_create_state@@Base+0x6b48>
   341b0:	cbnz	x0, 341c8 <__asan_backtrace_create_state@@Base+0x6540>
   341b4:	b	341d4 <__asan_backtrace_create_state@@Base+0x654c>
   341b8:	cbz	w1, 347cc <__asan_backtrace_create_state@@Base+0x6b44>
   341bc:	ldr	x0, [x0, #16]
   341c0:	sub	w1, w1, #0x1
   341c4:	cbz	x0, 341d4 <__asan_backtrace_create_state@@Base+0x654c>
   341c8:	ldr	w2, [x0]
   341cc:	cmp	w2, #0x2f
   341d0:	b.eq	341b8 <__asan_backtrace_create_state@@Base+0x6530>  // b.none
   341d4:	cbz	w21, 2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   341d8:	ldp	x21, x22, [sp, #32]
   341dc:	ldp	x25, x26, [sp, #64]
   341e0:	str	x23, [x19, #288]
   341e4:	ldp	x23, x24, [sp, #48]
   341e8:	b	2e7f4 <__asan_backtrace_create_state@@Base+0xb6c>
   341ec:	ldrb	w0, [x0]
   341f0:	sub	w1, w0, #0x72
   341f4:	sub	w0, w0, #0x63
   341f8:	and	w1, w1, #0xff
   341fc:	and	w0, w0, #0xff
   34200:	cmp	w1, #0x1
   34204:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   34208:	b.hi	2fe34 <__asan_backtrace_create_state@@Base+0x21ac>  // b.pmore
   3420c:	mov	w1, w22
   34210:	mov	x0, x19
   34214:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   34218:	ldr	x1, [x19, #256]
   3421c:	cmp	x1, #0xff
   34220:	b.ne	34248 <__asan_backtrace_create_state@@Base+0x65c0>  // b.any
   34224:	ldp	x3, x2, [x19, #272]
   34228:	strb	wzr, [x19, #255]
   3422c:	mov	x0, x19
   34230:	blr	x3
   34234:	str	xzr, [x19, #256]
   34238:	ldr	x0, [x19, #320]
   3423c:	mov	x1, #0x0                   	// #0
   34240:	add	x0, x0, #0x1
   34244:	str	x0, [x19, #320]
   34248:	add	x0, x1, #0x1
   3424c:	str	x0, [x19, #256]
   34250:	mov	w0, #0x3c                  	// #60
   34254:	strb	w0, [x19, x1]
   34258:	strb	w0, [x19, #264]
   3425c:	ldr	x0, [x24, #16]
   34260:	ldr	x20, [x0, #8]
   34264:	cbz	x20, 34850 <__asan_backtrace_create_state@@Base+0x6bc8>
   34268:	ldr	w1, [x20, #4]
   3426c:	cmp	w1, #0x1
   34270:	b.gt	34850 <__asan_backtrace_create_state@@Base+0x6bc8>
   34274:	ldr	w0, [x19, #308]
   34278:	cmp	w0, #0x400
   3427c:	b.gt	34850 <__asan_backtrace_create_state@@Base+0x6bc8>
   34280:	add	w1, w1, #0x1
   34284:	add	w0, w0, #0x1
   34288:	ldr	x3, [x19, #328]
   3428c:	str	w1, [x20, #4]
   34290:	add	x1, sp, #0x90
   34294:	str	w0, [x19, #308]
   34298:	mov	x0, x1
   3429c:	str	x0, [x19, #328]
   342a0:	mov	w1, w22
   342a4:	mov	x0, x19
   342a8:	mov	x2, x20
   342ac:	stp	x20, x3, [sp, #144]
   342b0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   342b4:	ldr	w1, [x20, #4]
   342b8:	ldr	x0, [sp, #152]
   342bc:	str	x0, [x19, #328]
   342c0:	ldr	w0, [x19, #308]
   342c4:	sub	w1, w1, #0x1
   342c8:	str	w1, [x20, #4]
   342cc:	sub	w0, w0, #0x1
   342d0:	str	w0, [x19, #308]
   342d4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   342d8:	add	x20, x20, #0x138
   342dc:	mov	x0, x20
   342e0:	bl	64b0 <__asan_internal_strlen@plt>
   342e4:	cbz	x0, 345b4 <__asan_backtrace_create_state@@Base+0x692c>
   342e8:	add	x23, x20, x0
   342ec:	mov	x25, #0x1                   	// #1
   342f0:	ldr	x1, [x19, #256]
   342f4:	b	34350 <__asan_backtrace_create_state@@Base+0x66c8>
   342f8:	ldp	x3, x2, [x19, #272]
   342fc:	strb	wzr, [x19, #255]
   34300:	mov	x0, x19
   34304:	add	x20, x20, #0x1
   34308:	blr	x3
   3430c:	strb	w21, [x19]
   34310:	ldr	x0, [x19, #320]
   34314:	str	x25, [x19, #256]
   34318:	strb	w21, [x19, #264]
   3431c:	cmp	x20, x23
   34320:	add	x0, x0, #0x1
   34324:	str	x0, [x19, #320]
   34328:	b.eq	345b4 <__asan_backtrace_create_state@@Base+0x692c>  // b.none
   3432c:	ldrb	w21, [x20]
   34330:	mov	x0, #0x1                   	// #1
   34334:	add	x1, x0, #0x1
   34338:	str	x1, [x19, #256]
   3433c:	strb	w21, [x19, x0]
   34340:	add	x20, x20, #0x1
   34344:	strb	w21, [x19, #264]
   34348:	cmp	x20, x23
   3434c:	b.eq	345b4 <__asan_backtrace_create_state@@Base+0x692c>  // b.none
   34350:	ldrb	w21, [x20]
   34354:	cmp	x1, #0xff
   34358:	b.eq	342f8 <__asan_backtrace_create_state@@Base+0x6670>  // b.none
   3435c:	mov	x0, x1
   34360:	b	34334 <__asan_backtrace_create_state@@Base+0x66ac>
   34364:	add	x3, x2, #0x10
   34368:	mov	w1, w22
   3436c:	ldr	x2, [x2, #8]
   34370:	mov	x0, x19
   34374:	bl	35228 <__asan_backtrace_create_state@@Base+0x75a0>
   34378:	cbnz	w0, 34938 <__asan_backtrace_create_state@@Base+0x6cb0>
   3437c:	ldp	x20, x3, [x24, #8]
   34380:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   34384:	add	x1, x1, #0x150
   34388:	ldr	x0, [x20, #8]
   3438c:	ldp	x23, x2, [x3, #8]
   34390:	ldr	x0, [x0]
   34394:	ldp	x24, x21, [x2, #8]
   34398:	bl	67f0 <__asan_internal_strcmp@plt>
   3439c:	cbnz	w0, 34aa8 <__asan_backtrace_create_state@@Base+0x6e20>
   343a0:	mov	x2, x23
   343a4:	mov	w1, w22
   343a8:	mov	x0, x19
   343ac:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   343b0:	mov	x2, x20
   343b4:	mov	w1, w22
   343b8:	mov	x0, x19
   343bc:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   343c0:	mov	x2, x24
   343c4:	mov	w1, w22
   343c8:	mov	x0, x19
   343cc:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   343d0:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   343d4:	add	x20, x20, #0x158
   343d8:	mov	x0, x20
   343dc:	bl	64b0 <__asan_internal_strlen@plt>
   343e0:	mov	x1, x20
   343e4:	mov	x2, x0
   343e8:	mov	x0, x19
   343ec:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   343f0:	mov	x2, x21
   343f4:	mov	w1, w22
   343f8:	mov	x0, x19
   343fc:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   34400:	ldp	x21, x22, [sp, #32]
   34404:	ldp	x23, x24, [sp, #48]
   34408:	ldp	x25, x26, [sp, #64]
   3440c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34410:	ldr	x0, [x19, #256]
   34414:	cmp	x0, x23
   34418:	b.eq	32b8c <__asan_backtrace_create_state@@Base+0x4f04>  // b.none
   3441c:	ldp	x21, x22, [sp, #32]
   34420:	ldp	x23, x24, [sp, #48]
   34424:	ldp	x25, x26, [sp, #64]
   34428:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3442c:	ldp	x21, x22, [sp, #32]
   34430:	ldp	x23, x24, [sp, #48]
   34434:	ldp	x25, x26, [sp, #64]
   34438:	ldp	x27, x28, [sp, #80]
   3443c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34440:	ldp	x21, x22, [sp, #32]
   34444:	ldp	x23, x24, [sp, #48]
   34448:	ldp	x25, x26, [sp, #64]
   3444c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34450:	ldp	x21, x22, [sp, #32]
   34454:	ldp	x23, x24, [sp, #48]
   34458:	ldp	x25, x26, [sp, #64]
   3445c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34460:	ldp	x21, x22, [sp, #32]
   34464:	ldp	x23, x24, [sp, #48]
   34468:	ldp	x25, x26, [sp, #64]
   3446c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34470:	ldr	w0, [x23, #4]
   34474:	mov	x1, x2
   34478:	cmp	w0, #0x1
   3447c:	b.le	2ec70 <__asan_backtrace_create_state@@Base+0xfe8>
   34480:	b	33614 <__asan_backtrace_create_state@@Base+0x598c>
   34484:	ldp	x21, x22, [sp, #32]
   34488:	ldp	x23, x24, [sp, #48]
   3448c:	ldp	x25, x26, [sp, #64]
   34490:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34494:	ldp	x21, x22, [sp, #32]
   34498:	ldp	x23, x24, [sp, #48]
   3449c:	ldp	x25, x26, [sp, #64]
   344a0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   344a4:	cbz	x20, 34734 <__asan_backtrace_create_state@@Base+0x6aac>
   344a8:	ldr	w1, [x20, #4]
   344ac:	cmp	w1, #0x1
   344b0:	b.gt	34734 <__asan_backtrace_create_state@@Base+0x6aac>
   344b4:	ldr	w0, [x19, #308]
   344b8:	cmp	w0, #0x400
   344bc:	b.gt	34734 <__asan_backtrace_create_state@@Base+0x6aac>
   344c0:	ldr	x3, [x19, #328]
   344c4:	add	w1, w1, #0x1
   344c8:	add	w0, w0, #0x1
   344cc:	add	x2, sp, #0x90
   344d0:	str	w1, [x20, #4]
   344d4:	mov	w1, w22
   344d8:	str	w0, [x19, #308]
   344dc:	mov	x0, x2
   344e0:	str	x0, [x19, #328]
   344e4:	mov	x2, x20
   344e8:	mov	x0, x19
   344ec:	stp	x20, x3, [sp, #144]
   344f0:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   344f4:	ldr	w1, [x20, #4]
   344f8:	ldr	x0, [sp, #152]
   344fc:	sub	w1, w1, #0x1
   34500:	ldp	x21, x22, [sp, #32]
   34504:	ldp	x23, x24, [sp, #48]
   34508:	ldp	x25, x26, [sp, #64]
   3450c:	str	x0, [x19, #328]
   34510:	ldr	w0, [x19, #308]
   34514:	str	w1, [x20, #4]
   34518:	sub	w0, w0, #0x1
   3451c:	str	w0, [x19, #308]
   34520:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34524:	ldp	x21, x22, [sp, #32]
   34528:	ldp	x23, x24, [sp, #48]
   3452c:	ldp	x25, x26, [sp, #64]
   34530:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34534:	ldp	x21, x22, [sp, #32]
   34538:	ldp	x23, x24, [sp, #48]
   3453c:	ldp	x25, x26, [sp, #64]
   34540:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34544:	mov	w0, #0x1                   	// #1
   34548:	str	x3, [x19, #296]
   3454c:	str	w0, [x19, #304]
   34550:	ldr	x1, [x19, #256]
   34554:	cmp	x1, #0xff
   34558:	b.ne	34580 <__asan_backtrace_create_state@@Base+0x68f8>  // b.any
   3455c:	ldp	x3, x2, [x19, #272]
   34560:	strb	wzr, [x19, #255]
   34564:	mov	x0, x19
   34568:	blr	x3
   3456c:	str	xzr, [x19, #256]
   34570:	ldr	x0, [x19, #320]
   34574:	mov	x1, #0x0                   	// #0
   34578:	add	x0, x0, #0x1
   3457c:	str	x0, [x19, #320]
   34580:	add	x0, x1, #0x1
   34584:	str	x0, [x19, #256]
   34588:	mov	w0, #0x20                  	// #32
   3458c:	strb	w0, [x19, x1]
   34590:	strb	w0, [x19, #264]
   34594:	ldr	x3, [x19, #296]
   34598:	b	2fc40 <__asan_backtrace_create_state@@Base+0x1fb8>
   3459c:	sub	w3, w0, #0x61
   345a0:	and	w3, w3, #0xff
   345a4:	cmp	w3, #0x5
   345a8:	b.hi	34c54 <__asan_backtrace_create_state@@Base+0x6fcc>  // b.pmore
   345ac:	sub	w0, w0, #0x57
   345b0:	b	32c60 <__asan_backtrace_create_state@@Base+0x4fd8>
   345b4:	ldr	x0, [x24, #16]
   345b8:	ldr	x20, [x0, #16]
   345bc:	cbz	x20, 347f8 <__asan_backtrace_create_state@@Base+0x6b70>
   345c0:	ldr	w1, [x20, #4]
   345c4:	cmp	w1, #0x1
   345c8:	b.gt	347f8 <__asan_backtrace_create_state@@Base+0x6b70>
   345cc:	ldr	w0, [x19, #308]
   345d0:	cmp	w0, #0x400
   345d4:	b.gt	347f8 <__asan_backtrace_create_state@@Base+0x6b70>
   345d8:	ldr	x3, [x19, #328]
   345dc:	add	w1, w1, #0x1
   345e0:	add	w0, w0, #0x1
   345e4:	add	x2, sp, #0x90
   345e8:	str	w1, [x20, #4]
   345ec:	mov	w1, w22
   345f0:	str	w0, [x19, #308]
   345f4:	mov	x0, x2
   345f8:	str	x0, [x19, #328]
   345fc:	mov	x2, x20
   34600:	mov	x0, x19
   34604:	stp	x20, x3, [sp, #144]
   34608:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3460c:	ldr	w1, [x20, #4]
   34610:	ldr	x0, [sp, #152]
   34614:	str	x0, [x19, #328]
   34618:	ldr	w0, [x19, #308]
   3461c:	sub	w1, w1, #0x1
   34620:	str	w1, [x20, #4]
   34624:	sub	w0, w0, #0x1
   34628:	str	w0, [x19, #308]
   3462c:	ldr	x1, [x19, #256]
   34630:	cmp	x1, #0xff
   34634:	b.ne	3465c <__asan_backtrace_create_state@@Base+0x69d4>  // b.any
   34638:	ldp	x3, x2, [x19, #272]
   3463c:	strb	wzr, [x19, #255]
   34640:	mov	x0, x19
   34644:	blr	x3
   34648:	str	xzr, [x19, #256]
   3464c:	ldr	x0, [x19, #320]
   34650:	mov	x1, #0x0                   	// #0
   34654:	add	x0, x0, #0x1
   34658:	str	x0, [x19, #320]
   3465c:	add	x0, x1, #0x1
   34660:	str	x0, [x19, #256]
   34664:	mov	w0, #0x29                  	// #41
   34668:	strb	w0, [x19, x1]
   3466c:	strb	w0, [x19, #264]
   34670:	ldp	x21, x22, [sp, #32]
   34674:	ldp	x23, x24, [sp, #48]
   34678:	ldp	x25, x26, [sp, #64]
   3467c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34680:	cmp	x0, #0xff
   34684:	b.ne	33638 <__asan_backtrace_create_state@@Base+0x59b0>  // b.any
   34688:	ldp	x3, x2, [x19, #272]
   3468c:	strb	wzr, [x19, #255]
   34690:	mov	x1, x0
   34694:	mov	x0, x19
   34698:	blr	x3
   3469c:	str	xzr, [x19, #256]
   346a0:	ldr	x0, [x19, #320]
   346a4:	add	x0, x0, #0x1
   346a8:	str	x0, [x19, #320]
   346ac:	b	33638 <__asan_backtrace_create_state@@Base+0x59b0>
   346b0:	mov	w1, #0x1                   	// #1
   346b4:	str	w1, [x19, #304]
   346b8:	b	2ff6c <__asan_backtrace_create_state@@Base+0x22e4>
   346bc:	ldr	w1, [x19, #316]
   346c0:	tbnz	w1, #31, 32f54 <__asan_backtrace_create_state@@Base+0x52cc>
   346c4:	mov	x0, x20
   346c8:	bl	2df60 <__asan_backtrace_create_state@@Base+0x2d8>
   346cc:	mov	x20, x0
   346d0:	cbnz	x0, 32f54 <__asan_backtrace_create_state@@Base+0x52cc>
   346d4:	b	2e7e8 <__asan_backtrace_create_state@@Base+0xb60>
   346d8:	ldp	x21, x22, [sp, #32]
   346dc:	ldp	x23, x24, [sp, #48]
   346e0:	ldp	x25, x26, [sp, #64]
   346e4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   346e8:	ldp	x21, x22, [sp, #32]
   346ec:	ldp	x23, x24, [sp, #48]
   346f0:	ldp	x25, x26, [sp, #64]
   346f4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   346f8:	ldp	x21, x22, [sp, #32]
   346fc:	ldp	x23, x24, [sp, #48]
   34700:	ldp	x25, x26, [sp, #64]
   34704:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34708:	ldp	x3, x2, [x19, #272]
   3470c:	strb	wzr, [x19, #255]
   34710:	mov	x0, x19
   34714:	blr	x3
   34718:	ldr	x0, [x19, #320]
   3471c:	mov	w2, #0x20                  	// #32
   34720:	mov	x1, #0x1                   	// #1
   34724:	strb	w2, [x19]
   34728:	add	x0, x0, x1
   3472c:	str	x0, [x19, #320]
   34730:	b	309e0 <__asan_backtrace_create_state@@Base+0x2d58>
   34734:	mov	w0, #0x1                   	// #1
   34738:	ldp	x21, x22, [sp, #32]
   3473c:	ldp	x23, x24, [sp, #48]
   34740:	ldp	x25, x26, [sp, #64]
   34744:	str	w0, [x19, #304]
   34748:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3474c:	ldp	x3, x2, [x19, #272]
   34750:	strb	wzr, [x19, #255]
   34754:	mov	x0, x19
   34758:	blr	x3
   3475c:	ldr	x1, [x19, #320]
   34760:	mov	w2, #0x20                  	// #32
   34764:	mov	x0, #0x1                   	// #1
   34768:	strb	w2, [x19]
   3476c:	add	x1, x1, x0
   34770:	str	x1, [x19, #320]
   34774:	b	30a98 <__asan_backtrace_create_state@@Base+0x2e10>
   34778:	cmp	x1, #0xff
   3477c:	b.ne	347a4 <__asan_backtrace_create_state@@Base+0x6b1c>  // b.any
   34780:	ldp	x3, x2, [x19, #272]
   34784:	strb	wzr, [x19, #255]
   34788:	mov	x0, x19
   3478c:	blr	x3
   34790:	str	xzr, [x19, #256]
   34794:	ldr	x0, [x19, #320]
   34798:	mov	x1, #0x0                   	// #0
   3479c:	add	x0, x0, #0x1
   347a0:	str	x0, [x19, #320]
   347a4:	add	x3, x1, #0x1
   347a8:	str	x3, [x19, #256]
   347ac:	mov	w0, #0x20                  	// #32
   347b0:	strb	w0, [x19, x1]
   347b4:	strb	w0, [x19, #264]
   347b8:	b	33364 <__asan_backtrace_create_state@@Base+0x56dc>
   347bc:	ldp	x21, x22, [sp, #32]
   347c0:	ldp	x23, x24, [sp, #48]
   347c4:	ldp	x25, x26, [sp, #64]
   347c8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   347cc:	ldr	x0, [x0, #8]
   347d0:	cbz	x0, 341d4 <__asan_backtrace_create_state@@Base+0x654c>
   347d4:	ldr	w1, [x0]
   347d8:	cmp	w1, #0x2f
   347dc:	b.ne	2e8dc <__asan_backtrace_create_state@@Base+0xc54>  // b.any
   347e0:	ldr	w1, [x19, #316]
   347e4:	tbnz	w1, #31, 34e38 <__asan_backtrace_create_state@@Base+0x71b0>
   347e8:	bl	2df60 <__asan_backtrace_create_state@@Base+0x2d8>
   347ec:	cbz	x0, 341d4 <__asan_backtrace_create_state@@Base+0x654c>
   347f0:	ldr	w1, [x0]
   347f4:	b	2e8dc <__asan_backtrace_create_state@@Base+0xc54>
   347f8:	mov	w0, #0x1                   	// #1
   347fc:	str	w0, [x19, #304]
   34800:	b	3462c <__asan_backtrace_create_state@@Base+0x69a4>
   34804:	mov	w1, w3
   34808:	mov	x0, x19
   3480c:	bl	2e1a8 <__asan_backtrace_create_state@@Base+0x520>
   34810:	ldp	x21, x22, [sp, #32]
   34814:	ldp	x23, x24, [sp, #48]
   34818:	ldp	x25, x26, [sp, #64]
   3481c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34820:	ldr	w0, [x20]
   34824:	cmp	w0, #0x3
   34828:	b.ne	33b84 <__asan_backtrace_create_state@@Base+0x5efc>  // b.any
   3482c:	ldr	x0, [x20, #8]
   34830:	ldr	w1, [x0]
   34834:	cmp	w1, #0x1
   34838:	b.ne	33b8c <__asan_backtrace_create_state@@Base+0x5f04>  // b.any
   3483c:	ldr	x1, [x20, #16]
   34840:	ldr	w1, [x1]
   34844:	cmp	w1, #0x29
   34848:	csel	x20, x20, x0, ne  // ne = any
   3484c:	b	33b8c <__asan_backtrace_create_state@@Base+0x5f04>
   34850:	mov	w0, #0x1                   	// #1
   34854:	str	w0, [x19, #304]
   34858:	b	342d4 <__asan_backtrace_create_state@@Base+0x664c>
   3485c:	ldp	x21, x22, [sp, #32]
   34860:	ldp	x23, x24, [sp, #48]
   34864:	ldp	x25, x26, [sp, #64]
   34868:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   3486c:	ldr	x2, [x24, #8]
   34870:	mov	w1, w22
   34874:	mov	x0, x19
   34878:	adrp	x20, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   3487c:	add	x20, x20, #0xb38
   34880:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   34884:	mov	x0, x20
   34888:	bl	64b0 <__asan_internal_strlen@plt>
   3488c:	mov	x1, x20
   34890:	mov	x2, x0
   34894:	mov	x0, x19
   34898:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   3489c:	ldp	x21, x22, [sp, #32]
   348a0:	ldp	x23, x24, [sp, #48]
   348a4:	ldp	x25, x26, [sp, #64]
   348a8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   348ac:	ldr	x1, [x0, #8]
   348b0:	ldr	w2, [x1, #16]
   348b4:	cmp	w2, #0x1
   348b8:	b.ne	2fe58 <__asan_backtrace_create_state@@Base+0x21d0>  // b.any
   348bc:	ldr	x1, [x1, #8]
   348c0:	ldrb	w1, [x1]
   348c4:	cmp	w1, #0x3e
   348c8:	b.ne	2fe58 <__asan_backtrace_create_state@@Base+0x21d0>  // b.any
   348cc:	ldr	x1, [x19, #256]
   348d0:	cmp	x1, #0xff
   348d4:	b.ne	348fc <__asan_backtrace_create_state@@Base+0x6c74>  // b.any
   348d8:	ldp	x3, x2, [x19, #272]
   348dc:	strb	wzr, [x19, #255]
   348e0:	mov	x0, x19
   348e4:	blr	x3
   348e8:	str	xzr, [x19, #256]
   348ec:	ldr	x0, [x19, #320]
   348f0:	mov	x1, #0x0                   	// #0
   348f4:	add	x0, x0, #0x1
   348f8:	str	x0, [x19, #320]
   348fc:	add	x0, x1, #0x1
   34900:	str	x0, [x19, #256]
   34904:	mov	w0, #0x28                  	// #40
   34908:	strb	w0, [x19, x1]
   3490c:	strb	w0, [x19, #264]
   34910:	ldr	x0, [x24, #8]
   34914:	b	2fe58 <__asan_backtrace_create_state@@Base+0x21d0>
   34918:	ldr	x0, [x0, #8]
   3491c:	ldr	w1, [x0, #16]
   34920:	cmp	w1, #0x1
   34924:	b.eq	34c34 <__asan_backtrace_create_state@@Base+0x6fac>  // b.none
   34928:	ldp	x21, x22, [sp, #32]
   3492c:	ldp	x23, x24, [sp, #48]
   34930:	ldp	x25, x26, [sp, #64]
   34934:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34938:	ldp	x21, x22, [sp, #32]
   3493c:	ldp	x23, x24, [sp, #48]
   34940:	ldp	x25, x26, [sp, #64]
   34944:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34948:	mov	x0, x1
   3494c:	b	30a90 <__asan_backtrace_create_state@@Base+0x2e08>
   34950:	ldr	x0, [x24, #8]
   34954:	add	x1, x20, #0x140
   34958:	ldr	x0, [x0, #8]
   3495c:	ldr	x0, [x0]
   34960:	bl	67f0 <__asan_internal_strcmp@plt>
   34964:	cbnz	w0, 34c20 <__asan_backtrace_create_state@@Base+0x6f98>
   34968:	ldr	x2, [x24, #16]
   3496c:	mov	w1, w22
   34970:	mov	x0, x19
   34974:	ldr	x2, [x2, #16]
   34978:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   3497c:	b	2ffb0 <__asan_backtrace_create_state@@Base+0x2328>
   34980:	ldr	x0, [x24, #16]
   34984:	b	2fe84 <__asan_backtrace_create_state@@Base+0x21fc>
   34988:	ldr	x0, [x20, #8]
   3498c:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   34990:	mov	x2, #0x6                   	// #6
   34994:	add	x1, x1, #0xf10
   34998:	bl	6830 <__asan_internal_strncmp@plt>
   3499c:	cbnz	w0, 30960 <__asan_backtrace_create_state@@Base+0x2cd8>
   349a0:	ldr	x2, [x24, #16]
   349a4:	mov	w1, w22
   349a8:	mov	x0, x19
   349ac:	adrp	x20, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   349b0:	add	x20, x20, #0xf18
   349b4:	bl	34ed8 <__asan_backtrace_create_state@@Base+0x7250>
   349b8:	mov	x0, x20
   349bc:	bl	64b0 <__asan_internal_strlen@plt>
   349c0:	mov	x1, x20
   349c4:	mov	x2, x0
   349c8:	mov	x0, x19
   349cc:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   349d0:	b	30aac <__asan_backtrace_create_state@@Base+0x2e24>
   349d4:	ldr	x25, [x25, #8]
   349d8:	cbz	x25, 33f9c <__asan_backtrace_create_state@@Base+0x6314>
   349dc:	ldr	w4, [x25]
   349e0:	b	33e3c <__asan_backtrace_create_state@@Base+0x61b4>
   349e4:	ldr	x4, [x1, #8]
   349e8:	ldr	x23, [x19, #288]
   349ec:	str	x4, [x19, #288]
   349f0:	cbz	x4, 341d8 <__asan_backtrace_create_state@@Base+0x6550>
   349f4:	mov	w21, #0x1                   	// #1
   349f8:	b	3419c <__asan_backtrace_create_state@@Base+0x6514>
   349fc:	ldp	x21, x22, [sp, #32]
   34a00:	ldp	x23, x24, [sp, #48]
   34a04:	ldp	x25, x26, [sp, #64]
   34a08:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a0c:	ldp	x21, x22, [sp, #32]
   34a10:	ldp	x23, x24, [sp, #48]
   34a14:	ldp	x25, x26, [sp, #64]
   34a18:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a1c:	ldp	x21, x22, [sp, #32]
   34a20:	ldp	x23, x24, [sp, #48]
   34a24:	ldp	x25, x26, [sp, #64]
   34a28:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a2c:	ldp	x21, x22, [sp, #32]
   34a30:	ldp	x23, x24, [sp, #48]
   34a34:	ldp	x25, x26, [sp, #64]
   34a38:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a3c:	ldp	x21, x22, [sp, #32]
   34a40:	ldp	x23, x24, [sp, #48]
   34a44:	ldp	x25, x26, [sp, #64]
   34a48:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a4c:	ldp	x21, x22, [sp, #32]
   34a50:	ldp	x23, x24, [sp, #48]
   34a54:	ldp	x25, x26, [sp, #64]
   34a58:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a5c:	ldp	x21, x22, [sp, #32]
   34a60:	ldp	x23, x24, [sp, #48]
   34a64:	ldp	x25, x26, [sp, #64]
   34a68:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a6c:	ldp	x21, x22, [sp, #32]
   34a70:	ldp	x23, x24, [sp, #48]
   34a74:	ldp	x25, x26, [sp, #64]
   34a78:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34a7c:	ldr	x0, [x1, #16]
   34a80:	ldr	w0, [x0]
   34a84:	cmp	w0, #0x29
   34a88:	b.eq	34a94 <__asan_backtrace_create_state@@Base+0x6e0c>  // b.none
   34a8c:	mov	w0, #0x1                   	// #1
   34a90:	str	w0, [x19, #304]
   34a94:	ldr	x2, [x1, #8]
   34a98:	mov	x0, x19
   34a9c:	mov	w1, w22
   34aa0:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   34aa4:	b	2fe94 <__asan_backtrace_create_state@@Base+0x220c>
   34aa8:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   34aac:	add	x20, x20, #0x160
   34ab0:	mov	x0, x20
   34ab4:	bl	64b0 <__asan_internal_strlen@plt>
   34ab8:	mov	x1, x20
   34abc:	mov	x2, x0
   34ac0:	mov	x0, x19
   34ac4:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   34ac8:	ldr	x0, [x23, #8]
   34acc:	cbz	x0, 34b24 <__asan_backtrace_create_state@@Base+0x6e9c>
   34ad0:	mov	w1, w22
   34ad4:	mov	x2, x23
   34ad8:	mov	x0, x19
   34adc:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   34ae0:	ldr	x1, [x19, #256]
   34ae4:	cmp	x1, #0xff
   34ae8:	b.ne	34b10 <__asan_backtrace_create_state@@Base+0x6e88>  // b.any
   34aec:	ldp	x3, x2, [x19, #272]
   34af0:	strb	wzr, [x19, #255]
   34af4:	mov	x0, x19
   34af8:	blr	x3
   34afc:	str	xzr, [x19, #256]
   34b00:	ldr	x0, [x19, #320]
   34b04:	mov	x1, #0x0                   	// #0
   34b08:	add	x0, x0, #0x1
   34b0c:	str	x0, [x19, #320]
   34b10:	add	x0, x1, #0x1
   34b14:	str	x0, [x19, #256]
   34b18:	mov	w0, #0x20                  	// #32
   34b1c:	strb	w0, [x19, x1]
   34b20:	strb	w0, [x19, #264]
   34b24:	mov	x2, x24
   34b28:	mov	w1, w22
   34b2c:	mov	x0, x19
   34b30:	bl	34ed8 <__asan_backtrace_create_state@@Base+0x7250>
   34b34:	cbz	x21, 34cbc <__asan_backtrace_create_state@@Base+0x7034>
   34b38:	mov	x2, x21
   34b3c:	mov	w1, w22
   34b40:	mov	x0, x19
   34b44:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   34b48:	ldp	x21, x22, [sp, #32]
   34b4c:	ldp	x23, x24, [sp, #48]
   34b50:	ldp	x25, x26, [sp, #64]
   34b54:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34b58:	add	x1, x21, #0x40
   34b5c:	b	30800 <__asan_backtrace_create_state@@Base+0x2b78>
   34b60:	cmp	w21, #0x5
   34b64:	b.eq	34d28 <__asan_backtrace_create_state@@Base+0x70a0>  // b.none
   34b68:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   34b6c:	add	x20, x20, #0x178
   34b70:	mov	x0, x20
   34b74:	bl	64b0 <__asan_internal_strlen@plt>
   34b78:	mov	x1, x20
   34b7c:	mov	x2, x0
   34b80:	mov	x0, x19
   34b84:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   34b88:	ldp	x21, x22, [sp, #32]
   34b8c:	ldp	x23, x24, [sp, #48]
   34b90:	ldp	x25, x26, [sp, #64]
   34b94:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34b98:	ldr	w0, [x19, #348]
   34b9c:	cmp	w4, w0
   34ba0:	b.ge	34c08 <__asan_backtrace_create_state@@Base+0x6f80>  // b.tcont
   34ba4:	sbfiz	x0, x4, #4, #32
   34ba8:	add	w1, w4, #0x1
   34bac:	ldr	x2, [x19, #288]
   34bb0:	str	w1, [x19, #344]
   34bb4:	str	x3, [x5, x0]
   34bb8:	add	x0, x5, w4, sxtw #4
   34bbc:	add	x0, x0, #0x8
   34bc0:	cbz	x2, 34db8 <__asan_backtrace_create_state@@Base+0x7130>
   34bc4:	ldr	w1, [x19, #360]
   34bc8:	ldr	w6, [x19, #364]
   34bcc:	sbfiz	x5, x1, #4, #32
   34bd0:	b	34c00 <__asan_backtrace_create_state@@Base+0x6f78>
   34bd4:	ldr	x4, [x19, #352]
   34bd8:	add	w1, w1, #0x1
   34bdc:	ldr	x7, [x2, #8]
   34be0:	add	x4, x4, x5
   34be4:	str	w1, [x19, #360]
   34be8:	add	x5, x5, #0x10
   34bec:	str	x7, [x4, #8]
   34bf0:	str	x4, [x0]
   34bf4:	mov	x0, x4
   34bf8:	ldr	x2, [x2]
   34bfc:	cbz	x2, 34db8 <__asan_backtrace_create_state@@Base+0x7130>
   34c00:	cmp	w6, w1
   34c04:	b.gt	34bd4 <__asan_backtrace_create_state@@Base+0x6f4c>
   34c08:	mov	w0, #0x1                   	// #1
   34c0c:	ldp	x21, x22, [sp, #32]
   34c10:	ldp	x23, x24, [sp, #48]
   34c14:	ldp	x25, x26, [sp, #64]
   34c18:	str	w0, [x19, #304]
   34c1c:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34c20:	ldr	x2, [x24, #8]
   34c24:	mov	w1, w22
   34c28:	mov	x0, x19
   34c2c:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   34c30:	b	34968 <__asan_backtrace_create_state@@Base+0x6ce0>
   34c34:	ldr	x0, [x0, #8]
   34c38:	ldrb	w0, [x0]
   34c3c:	cmp	w0, #0x3e
   34c40:	b.eq	34e40 <__asan_backtrace_create_state@@Base+0x71b8>  // b.none
   34c44:	ldp	x21, x22, [sp, #32]
   34c48:	ldp	x23, x24, [sp, #48]
   34c4c:	ldp	x25, x26, [sp, #64]
   34c50:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34c54:	cmp	x21, x24
   34c58:	b.ls	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.plast
   34c5c:	cmp	x2, #0xff
   34c60:	ccmp	w0, w23, #0x0, ls  // ls = plast
   34c64:	b.ne	32c00 <__asan_backtrace_create_state@@Base+0x4f78>  // b.any
   34c68:	and	w22, w2, #0xff
   34c6c:	cmp	x1, #0xff
   34c70:	b.ne	34c94 <__asan_backtrace_create_state@@Base+0x700c>  // b.any
   34c74:	ldp	x3, x2, [x19, #272]
   34c78:	strb	wzr, [x19, #255]
   34c7c:	mov	x0, x19
   34c80:	blr	x3
   34c84:	str	xzr, [x19, #256]
   34c88:	ldr	x0, [x19, #320]
   34c8c:	add	x0, x0, #0x1
   34c90:	str	x0, [x19, #320]
   34c94:	ldr	x0, [x19, #256]
   34c98:	mov	x20, x24
   34c9c:	add	x1, x0, #0x1
   34ca0:	str	x1, [x19, #256]
   34ca4:	strb	w22, [x19, x0]
   34ca8:	strb	w22, [x19, #264]
   34cac:	b	32bdc <__asan_backtrace_create_state@@Base+0x4f54>
   34cb0:	add	x1, x21, #0x60
   34cb4:	mov	w20, #0x4                   	// #4
   34cb8:	b	30800 <__asan_backtrace_create_state@@Base+0x2b78>
   34cbc:	ldp	x21, x22, [sp, #32]
   34cc0:	ldp	x23, x24, [sp, #48]
   34cc4:	ldp	x25, x26, [sp, #64]
   34cc8:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34ccc:	mov	x1, x20
   34cd0:	mov	x0, x19
   34cd4:	bl	2e080 <__asan_backtrace_create_state@@Base+0x3f8>
   34cd8:	cbnz	x0, 34cf4 <__asan_backtrace_create_state@@Base+0x706c>
   34cdc:	b	34d00 <__asan_backtrace_create_state@@Base+0x7078>
   34ce0:	ldr	x1, [x0, #8]
   34ce4:	cbz	x1, 34d00 <__asan_backtrace_create_state@@Base+0x7078>
   34ce8:	ldr	x0, [x0, #16]
   34cec:	add	w3, w3, #0x1
   34cf0:	cbz	x0, 34d00 <__asan_backtrace_create_state@@Base+0x7078>
   34cf4:	ldr	w1, [x0]
   34cf8:	cmp	w1, #0x2f
   34cfc:	b.eq	34ce0 <__asan_backtrace_create_state@@Base+0x7058>  // b.none
   34d00:	mov	w1, w3
   34d04:	mov	x0, x19
   34d08:	bl	2e1a8 <__asan_backtrace_create_state@@Base+0x520>
   34d0c:	ldp	x21, x22, [sp, #32]
   34d10:	ldp	x23, x24, [sp, #48]
   34d14:	ldp	x25, x26, [sp, #64]
   34d18:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34d1c:	add	x21, sp, #0x90
   34d20:	str	x21, [x19, #296]
   34d24:	b	33f9c <__asan_backtrace_create_state@@Base+0x6314>
   34d28:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   34d2c:	add	x20, x20, #0x170
   34d30:	mov	x0, x20
   34d34:	bl	64b0 <__asan_internal_strlen@plt>
   34d38:	mov	x1, x20
   34d3c:	mov	x2, x0
   34d40:	mov	x0, x19
   34d44:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   34d48:	ldp	x21, x22, [sp, #32]
   34d4c:	ldp	x23, x24, [sp, #48]
   34d50:	ldp	x25, x26, [sp, #64]
   34d54:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34d58:	add	x21, x21, #0x20
   34d5c:	str	x21, [x19, #296]
   34d60:	b	33f9c <__asan_backtrace_create_state@@Base+0x6314>
   34d64:	ldr	x1, [x19, #256]
   34d68:	cmp	x1, #0xff
   34d6c:	b.ne	34d94 <__asan_backtrace_create_state@@Base+0x710c>  // b.any
   34d70:	ldp	x3, x2, [x19, #272]
   34d74:	strb	wzr, [x19, #255]
   34d78:	mov	x0, x19
   34d7c:	blr	x3
   34d80:	str	xzr, [x19, #256]
   34d84:	ldr	x0, [x19, #320]
   34d88:	mov	x1, #0x0                   	// #0
   34d8c:	add	x0, x0, #0x1
   34d90:	str	x0, [x19, #320]
   34d94:	add	x0, x1, #0x1
   34d98:	str	x0, [x19, #256]
   34d9c:	mov	w0, #0x75                  	// #117
   34da0:	strb	w0, [x19, x1]
   34da4:	strb	w0, [x19, #264]
   34da8:	ldp	x21, x22, [sp, #32]
   34dac:	ldp	x23, x24, [sp, #48]
   34db0:	ldp	x25, x26, [sp, #64]
   34db4:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34db8:	str	xzr, [x0]
   34dbc:	b	34190 <__asan_backtrace_create_state@@Base+0x6508>
   34dc0:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   34dc4:	add	x20, x20, #0x168
   34dc8:	mov	x0, x20
   34dcc:	bl	64b0 <__asan_internal_strlen@plt>
   34dd0:	mov	x1, x20
   34dd4:	mov	x2, x0
   34dd8:	mov	x0, x19
   34ddc:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   34de0:	ldp	x21, x22, [sp, #32]
   34de4:	ldp	x23, x24, [sp, #48]
   34de8:	ldp	x25, x26, [sp, #64]
   34dec:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34df0:	ldr	x1, [x19, #256]
   34df4:	cmp	x1, #0xff
   34df8:	b.ne	34e20 <__asan_backtrace_create_state@@Base+0x7198>  // b.any
   34dfc:	ldp	x3, x2, [x19, #272]
   34e00:	strb	wzr, [x19, #255]
   34e04:	mov	x0, x19
   34e08:	blr	x3
   34e0c:	str	xzr, [x19, #256]
   34e10:	ldr	x0, [x19, #320]
   34e14:	mov	x1, #0x0                   	// #0
   34e18:	add	x0, x0, #0x1
   34e1c:	str	x0, [x19, #320]
   34e20:	add	x0, x1, #0x1
   34e24:	str	x0, [x19, #256]
   34e28:	mov	w0, #0x2d                  	// #45
   34e2c:	strb	w0, [x19, x1]
   34e30:	strb	w0, [x19, #264]
   34e34:	b	334ec <__asan_backtrace_create_state@@Base+0x5864>
   34e38:	ldr	x2, [x19, #296]
   34e3c:	b	2e8f8 <__asan_backtrace_create_state@@Base+0xc70>
   34e40:	ldr	x1, [x19, #256]
   34e44:	cmp	x1, #0xff
   34e48:	b.ne	34e70 <__asan_backtrace_create_state@@Base+0x71e8>  // b.any
   34e4c:	ldp	x3, x2, [x19, #272]
   34e50:	strb	wzr, [x19, #255]
   34e54:	mov	x0, x19
   34e58:	blr	x3
   34e5c:	str	xzr, [x19, #256]
   34e60:	ldr	x0, [x19, #320]
   34e64:	mov	x1, #0x0                   	// #0
   34e68:	add	x0, x0, #0x1
   34e6c:	str	x0, [x19, #320]
   34e70:	add	x0, x1, #0x1
   34e74:	str	x0, [x19, #256]
   34e78:	mov	w0, #0x29                  	// #41
   34e7c:	strb	w0, [x19, x1]
   34e80:	strb	w0, [x19, #264]
   34e84:	ldp	x21, x22, [sp, #32]
   34e88:	ldp	x23, x24, [sp, #48]
   34e8c:	ldp	x25, x26, [sp, #64]
   34e90:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34e94:	ldp	x21, x22, [sp, #32]
   34e98:	ldp	x23, x24, [sp, #48]
   34e9c:	ldp	x25, x26, [sp, #64]
   34ea0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34ea4:	adrp	x20, 40000 <__asan_backtrace_get_view@@Base+0x78>
   34ea8:	add	x20, x20, #0xbd0
   34eac:	mov	x0, x20
   34eb0:	bl	64b0 <__asan_internal_strlen@plt>
   34eb4:	mov	x1, x20
   34eb8:	mov	x2, x0
   34ebc:	mov	x0, x19
   34ec0:	bl	2de90 <__asan_backtrace_create_state@@Base+0x208>
   34ec4:	ldp	x21, x22, [sp, #32]
   34ec8:	ldp	x23, x24, [sp, #48]
   34ecc:	ldp	x25, x26, [sp, #64]
   34ed0:	b	2e7bc <__asan_backtrace_create_state@@Base+0xb34>
   34ed4:	nop
   34ed8:	stp	x29, x30, [sp, #-48]!
   34edc:	mov	x29, sp
   34ee0:	stp	x19, x20, [sp, #16]
   34ee4:	mov	x20, x0
   34ee8:	cbz	x2, 34f58 <__asan_backtrace_create_state@@Base+0x72d0>
   34eec:	ldr	w3, [x2, #4]
   34ef0:	mov	x19, x2
   34ef4:	cmp	w3, #0x1
   34ef8:	b.gt	34f58 <__asan_backtrace_create_state@@Base+0x72d0>
   34efc:	ldr	w4, [x0, #308]
   34f00:	cmp	w4, #0x400
   34f04:	b.gt	34f58 <__asan_backtrace_create_state@@Base+0x72d0>
   34f08:	add	w3, w3, #0x1
   34f0c:	add	w4, w4, #0x1
   34f10:	str	w3, [x2, #4]
   34f14:	add	x3, sp, #0x20
   34f18:	str	w4, [x0, #308]
   34f1c:	ldr	x4, [x0, #328]
   34f20:	str	x3, [x0, #328]
   34f24:	stp	x2, x4, [sp, #32]
   34f28:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   34f2c:	ldr	w1, [x19, #4]
   34f30:	ldr	x0, [sp, #40]
   34f34:	str	x0, [x20, #328]
   34f38:	ldr	w0, [x20, #308]
   34f3c:	sub	w1, w1, #0x1
   34f40:	str	w1, [x19, #4]
   34f44:	sub	w0, w0, #0x1
   34f48:	str	w0, [x20, #308]
   34f4c:	ldp	x19, x20, [sp, #16]
   34f50:	ldp	x29, x30, [sp], #48
   34f54:	ret
   34f58:	mov	w0, #0x1                   	// #1
   34f5c:	str	w0, [x20, #304]
   34f60:	ldp	x19, x20, [sp, #16]
   34f64:	ldp	x29, x30, [sp], #48
   34f68:	ret
   34f6c:	nop
   34f70:	stp	x29, x30, [sp, #-80]!
   34f74:	mov	x29, sp
   34f78:	ldr	w3, [x2]
   34f7c:	stp	x19, x20, [sp, #16]
   34f80:	mov	x20, x2
   34f84:	mov	x19, x0
   34f88:	cmp	w3, #0x32
   34f8c:	b.eq	34fbc <__asan_backtrace_create_state@@Base+0x7334>  // b.none
   34f90:	ldr	w3, [x2, #4]
   34f94:	cmp	w3, #0x1
   34f98:	b.gt	34fa8 <__asan_backtrace_create_state@@Base+0x7320>
   34f9c:	ldr	w4, [x0, #308]
   34fa0:	cmp	w4, #0x400
   34fa4:	b.le	3507c <__asan_backtrace_create_state@@Base+0x73f4>
   34fa8:	mov	w0, #0x1                   	// #1
   34fac:	str	w0, [x19, #304]
   34fb0:	ldp	x19, x20, [sp, #16]
   34fb4:	ldp	x29, x30, [sp], #80
   34fb8:	ret
   34fbc:	ldr	x0, [x2, #8]
   34fc0:	stp	x21, x22, [sp, #32]
   34fc4:	ldrsw	x22, [x0, #16]
   34fc8:	ldr	x20, [x0, #8]
   34fcc:	cbz	x22, 350cc <__asan_backtrace_create_state@@Base+0x7444>
   34fd0:	add	x22, x20, x22
   34fd4:	ldr	x1, [x19, #256]
   34fd8:	str	x23, [sp, #48]
   34fdc:	mov	x23, #0x1                   	// #1
   34fe0:	b	35038 <__asan_backtrace_create_state@@Base+0x73b0>
   34fe4:	ldp	x3, x2, [x19, #272]
   34fe8:	strb	wzr, [x19, #255]
   34fec:	add	x20, x20, #0x1
   34ff0:	blr	x3
   34ff4:	strb	w21, [x19]
   34ff8:	ldr	x0, [x19, #320]
   34ffc:	str	x23, [x19, #256]
   35000:	strb	w21, [x19, #264]
   35004:	cmp	x22, x20
   35008:	add	x0, x0, #0x1
   3500c:	str	x0, [x19, #320]
   35010:	mov	x0, #0x1                   	// #1
   35014:	b.eq	35068 <__asan_backtrace_create_state@@Base+0x73e0>  // b.none
   35018:	ldrb	w21, [x20]
   3501c:	add	x1, x0, #0x1
   35020:	str	x1, [x19, #256]
   35024:	add	x20, x20, #0x1
   35028:	strb	w21, [x19, x0]
   3502c:	cmp	x20, x22
   35030:	strb	w21, [x19, #264]
   35034:	b.eq	35068 <__asan_backtrace_create_state@@Base+0x73e0>  // b.none
   35038:	ldrb	w21, [x20]
   3503c:	mov	x0, x19
   35040:	cmp	x1, #0xff
   35044:	b.eq	34fe4 <__asan_backtrace_create_state@@Base+0x735c>  // b.none
   35048:	mov	x0, x1
   3504c:	add	x20, x20, #0x1
   35050:	add	x1, x0, #0x1
   35054:	str	x1, [x19, #256]
   35058:	cmp	x20, x22
   3505c:	strb	w21, [x19, x0]
   35060:	strb	w21, [x19, #264]
   35064:	b.ne	35038 <__asan_backtrace_create_state@@Base+0x73b0>  // b.any
   35068:	ldp	x19, x20, [sp, #16]
   3506c:	ldp	x21, x22, [sp, #32]
   35070:	ldr	x23, [sp, #48]
   35074:	ldp	x29, x30, [sp], #80
   35078:	ret
   3507c:	add	w3, w3, #0x1
   35080:	add	w4, w4, #0x1
   35084:	str	w3, [x2, #4]
   35088:	add	x3, sp, #0x40
   3508c:	str	w4, [x0, #308]
   35090:	ldr	x4, [x0, #328]
   35094:	str	x3, [x0, #328]
   35098:	stp	x2, x4, [sp, #64]
   3509c:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   350a0:	ldr	w1, [x20, #4]
   350a4:	ldr	x0, [sp, #72]
   350a8:	str	x0, [x19, #328]
   350ac:	ldr	w0, [x19, #308]
   350b0:	sub	w1, w1, #0x1
   350b4:	str	w1, [x20, #4]
   350b8:	sub	w0, w0, #0x1
   350bc:	str	w0, [x19, #308]
   350c0:	ldp	x19, x20, [sp, #16]
   350c4:	ldp	x29, x30, [sp], #80
   350c8:	ret
   350cc:	ldp	x21, x22, [sp, #32]
   350d0:	b	34fb0 <__asan_backtrace_create_state@@Base+0x7328>
   350d4:	nop
   350d8:	stp	x29, x30, [sp, #-64]!
   350dc:	mov	x29, sp
   350e0:	stp	x19, x20, [sp, #16]
   350e4:	mov	x20, x2
   350e8:	ldr	w2, [x2]
   350ec:	stp	x21, x22, [sp, #32]
   350f0:	mov	w22, #0x1                   	// #1
   350f4:	cmp	w2, #0x31
   350f8:	ccmp	w2, w22, #0x0, ne  // ne = any
   350fc:	mov	w21, w1
   35100:	mov	x19, x0
   35104:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
   35108:	b.ne	351b4 <__asan_backtrace_create_state@@Base+0x752c>  // b.any
   3510c:	ldr	w0, [x20, #4]
   35110:	cmp	w0, #0x1
   35114:	b.gt	351a8 <__asan_backtrace_create_state@@Base+0x7520>
   35118:	ldr	w1, [x19, #308]
   3511c:	cmp	w1, #0x400
   35120:	b.gt	351a8 <__asan_backtrace_create_state@@Base+0x7520>
   35124:	ldr	x3, [x19, #328]
   35128:	add	w0, w0, #0x1
   3512c:	str	w0, [x20, #4]
   35130:	add	w1, w1, #0x1
   35134:	add	x0, sp, #0x30
   35138:	str	w1, [x19, #308]
   3513c:	str	x0, [x19, #328]
   35140:	mov	w1, w21
   35144:	mov	x0, x19
   35148:	mov	x2, x20
   3514c:	stp	x20, x3, [sp, #48]
   35150:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   35154:	ldr	w1, [x20, #4]
   35158:	ldr	x0, [sp, #56]
   3515c:	str	x0, [x19, #328]
   35160:	ldr	w0, [x19, #308]
   35164:	sub	w1, w1, #0x1
   35168:	str	w1, [x20, #4]
   3516c:	sub	w0, w0, #0x1
   35170:	str	w0, [x19, #308]
   35174:	cbnz	w22, 35198 <__asan_backtrace_create_state@@Base+0x7510>
   35178:	ldr	x1, [x19, #256]
   3517c:	add	x0, x1, #0x1
   35180:	cmp	x1, #0xff
   35184:	b.eq	351dc <__asan_backtrace_create_state@@Base+0x7554>  // b.none
   35188:	str	x0, [x19, #256]
   3518c:	mov	w0, #0x29                  	// #41
   35190:	strb	w0, [x19, x1]
   35194:	strb	w0, [x19, #264]
   35198:	ldp	x19, x20, [sp, #16]
   3519c:	ldp	x21, x22, [sp, #32]
   351a0:	ldp	x29, x30, [sp], #64
   351a4:	ret
   351a8:	mov	w0, #0x1                   	// #1
   351ac:	str	w0, [x19, #304]
   351b0:	b	35174 <__asan_backtrace_create_state@@Base+0x74ec>
   351b4:	ldr	x1, [x0, #256]
   351b8:	cmp	x1, #0xff
   351bc:	b.eq	35204 <__asan_backtrace_create_state@@Base+0x757c>  // b.none
   351c0:	add	x0, x1, #0x1
   351c4:	str	x0, [x19, #256]
   351c8:	mov	w0, #0x28                  	// #40
   351cc:	strb	w0, [x19, x1]
   351d0:	mov	w22, #0x0                   	// #0
   351d4:	strb	w0, [x19, #264]
   351d8:	b	3510c <__asan_backtrace_create_state@@Base+0x7484>
   351dc:	ldp	x3, x2, [x19, #272]
   351e0:	strb	wzr, [x19, #255]
   351e4:	mov	x0, x19
   351e8:	blr	x3
   351ec:	ldr	x2, [x19, #320]
   351f0:	mov	x0, #0x1                   	// #1
   351f4:	mov	x1, #0x0                   	// #0
   351f8:	add	x2, x2, x0
   351fc:	str	x2, [x19, #320]
   35200:	b	35188 <__asan_backtrace_create_state@@Base+0x7500>
   35204:	ldp	x3, x2, [x0, #272]
   35208:	strb	wzr, [x0, #255]
   3520c:	blr	x3
   35210:	ldr	x2, [x19, #320]
   35214:	mov	x0, #0x1                   	// #1
   35218:	mov	x1, #0x0                   	// #0
   3521c:	add	x2, x2, x0
   35220:	str	x2, [x19, #320]
   35224:	b	351c4 <__asan_backtrace_create_state@@Base+0x753c>
   35228:	stp	x29, x30, [sp, #-96]!
   3522c:	mov	x29, sp
   35230:	stp	x19, x20, [sp, #16]
   35234:	mov	x19, x0
   35238:	ldr	x0, [x2, #8]
   3523c:	stp	x21, x22, [sp, #32]
   35240:	mov	w22, w1
   35244:	ldr	x0, [x0]
   35248:	ldrb	w1, [x0]
   3524c:	cmp	w1, #0x66
   35250:	b.ne	35374 <__asan_backtrace_create_state@@Base+0x76ec>  // b.any
   35254:	ldr	x1, [x3]
   35258:	stp	x23, x24, [sp, #48]
   3525c:	stp	x25, x26, [sp, #64]
   35260:	mov	x25, #0x0                   	// #0
   35264:	ldp	x23, x26, [x1, #8]
   35268:	ldr	w1, [x26]
   3526c:	cmp	w1, #0x3c
   35270:	b.eq	354e8 <__asan_backtrace_create_state@@Base+0x7860>  // b.none
   35274:	ldr	w21, [x19, #316]
   35278:	mov	w1, #0xffffffff            	// #-1
   3527c:	str	w1, [x19, #316]
   35280:	ldrb	w0, [x0, #1]
   35284:	cmp	w0, #0x6c
   35288:	b.eq	35508 <__asan_backtrace_create_state@@Base+0x7880>  // b.none
   3528c:	b.hi	35410 <__asan_backtrace_create_state@@Base+0x7788>  // b.pmore
   35290:	cmp	w0, #0x4c
   35294:	b.eq	352a0 <__asan_backtrace_create_state@@Base+0x7618>  // b.none
   35298:	cmp	w0, #0x52
   3529c:	b.ne	353f0 <__asan_backtrace_create_state@@Base+0x7768>  // b.any
   352a0:	ldr	x1, [x19, #256]
   352a4:	add	x0, x1, #0x1
   352a8:	cmp	x1, #0xff
   352ac:	b.eq	355e0 <__asan_backtrace_create_state@@Base+0x7958>  // b.none
   352b0:	str	x0, [x19, #256]
   352b4:	mov	w0, #0x28                  	// #40
   352b8:	strb	w0, [x19, x1]
   352bc:	mov	x2, x26
   352c0:	strb	w0, [x19, #264]
   352c4:	mov	w1, w22
   352c8:	mov	x0, x19
   352cc:	adrp	x20, 44000 <__asan_backtrace_vector_release@@Base+0x3b10>
   352d0:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   352d4:	add	x20, x20, #0xb38
   352d8:	mov	x2, x23
   352dc:	mov	w1, w22
   352e0:	mov	x0, x19
   352e4:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   352e8:	mov	x0, x20
   352ec:	bl	64b0 <__asan_internal_strlen@plt>
   352f0:	cbz	x0, 355a0 <__asan_backtrace_create_state@@Base+0x7918>
   352f4:	mov	x26, #0x1                   	// #1
   352f8:	ldr	x1, [x19, #256]
   352fc:	str	x27, [sp, #80]
   35300:	add	x27, x20, x0
   35304:	b	3535c <__asan_backtrace_create_state@@Base+0x76d4>
   35308:	ldp	x3, x2, [x19, #272]
   3530c:	strb	wzr, [x19, #255]
   35310:	add	x20, x20, #0x1
   35314:	blr	x3
   35318:	strb	w24, [x19]
   3531c:	ldr	x0, [x19, #320]
   35320:	str	x26, [x19, #256]
   35324:	strb	w24, [x19, #264]
   35328:	cmp	x20, x27
   3532c:	add	x0, x0, #0x1
   35330:	str	x0, [x19, #320]
   35334:	mov	x0, #0x1                   	// #1
   35338:	b.eq	3559c <__asan_backtrace_create_state@@Base+0x7914>  // b.none
   3533c:	ldrb	w24, [x20]
   35340:	add	x1, x0, #0x1
   35344:	str	x1, [x19, #256]
   35348:	strb	w24, [x19, x0]
   3534c:	add	x20, x20, #0x1
   35350:	strb	w24, [x19, #264]
   35354:	cmp	x20, x27
   35358:	b.eq	3559c <__asan_backtrace_create_state@@Base+0x7914>  // b.none
   3535c:	ldrb	w24, [x20]
   35360:	mov	x0, x19
   35364:	cmp	x1, #0xff
   35368:	b.eq	35308 <__asan_backtrace_create_state@@Base+0x7680>  // b.none
   3536c:	mov	x0, x1
   35370:	b	35340 <__asan_backtrace_create_state@@Base+0x76b8>
   35374:	mov	w0, #0x0                   	// #0
   35378:	ldp	x19, x20, [sp, #16]
   3537c:	ldp	x21, x22, [sp, #32]
   35380:	ldp	x29, x30, [sp], #96
   35384:	ret
   35388:	ldr	x27, [sp, #80]
   3538c:	mov	x2, x23
   35390:	mov	w1, w22
   35394:	mov	x0, x19
   35398:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   3539c:	mov	x2, x26
   353a0:	mov	w1, w22
   353a4:	mov	x0, x19
   353a8:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   353ac:	ldr	x1, [x19, #256]
   353b0:	add	x0, x1, #0x1
   353b4:	cmp	x1, #0xff
   353b8:	b.ne	353e0 <__asan_backtrace_create_state@@Base+0x7758>  // b.any
   353bc:	ldp	x3, x2, [x19, #272]
   353c0:	strb	wzr, [x19, #255]
   353c4:	mov	x0, x19
   353c8:	blr	x3
   353cc:	ldr	x2, [x19, #320]
   353d0:	mov	x0, #0x1                   	// #1
   353d4:	mov	x1, #0x0                   	// #0
   353d8:	add	x2, x2, x0
   353dc:	str	x2, [x19, #320]
   353e0:	str	x0, [x19, #256]
   353e4:	mov	w0, #0x29                  	// #41
   353e8:	strb	w0, [x19, x1]
   353ec:	strb	w0, [x19, #264]
   353f0:	ldp	x23, x24, [sp, #48]
   353f4:	mov	w0, #0x1                   	// #1
   353f8:	ldp	x25, x26, [sp, #64]
   353fc:	str	w21, [x19, #316]
   35400:	ldp	x19, x20, [sp, #16]
   35404:	ldp	x21, x22, [sp, #32]
   35408:	ldp	x29, x30, [sp], #96
   3540c:	ret
   35410:	cmp	w0, #0x72
   35414:	b.ne	353f0 <__asan_backtrace_create_state@@Base+0x7768>  // b.any
   35418:	ldr	x1, [x19, #256]
   3541c:	add	x0, x1, #0x1
   35420:	cmp	x1, #0xff
   35424:	b.eq	355b8 <__asan_backtrace_create_state@@Base+0x7930>  // b.none
   35428:	str	x0, [x19, #256]
   3542c:	mov	w0, #0x28                  	// #40
   35430:	strb	w0, [x19, x1]
   35434:	mov	x2, x26
   35438:	strb	w0, [x19, #264]
   3543c:	mov	w1, w22
   35440:	mov	x0, x19
   35444:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35448:	bl	350d8 <__asan_backtrace_create_state@@Base+0x7450>
   3544c:	add	x20, x20, #0x238
   35450:	mov	x2, x23
   35454:	mov	w1, w22
   35458:	mov	x0, x19
   3545c:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   35460:	mov	x0, x20
   35464:	bl	64b0 <__asan_internal_strlen@plt>
   35468:	cbz	x0, 353f0 <__asan_backtrace_create_state@@Base+0x7768>
   3546c:	add	x23, x20, x0
   35470:	mov	x24, #0x1                   	// #1
   35474:	ldr	x1, [x19, #256]
   35478:	b	354d0 <__asan_backtrace_create_state@@Base+0x7848>
   3547c:	ldp	x3, x2, [x19, #272]
   35480:	strb	wzr, [x19, #255]
   35484:	add	x20, x20, #0x1
   35488:	blr	x3
   3548c:	strb	w22, [x19]
   35490:	ldr	x0, [x19, #320]
   35494:	str	x24, [x19, #256]
   35498:	strb	w22, [x19, #264]
   3549c:	cmp	x23, x20
   354a0:	add	x0, x0, #0x1
   354a4:	str	x0, [x19, #320]
   354a8:	mov	x0, #0x1                   	// #1
   354ac:	b.eq	353f0 <__asan_backtrace_create_state@@Base+0x7768>  // b.none
   354b0:	ldrb	w22, [x20]
   354b4:	add	x1, x0, #0x1
   354b8:	str	x1, [x19, #256]
   354bc:	strb	w22, [x19, x0]
   354c0:	add	x20, x20, #0x1
   354c4:	strb	w22, [x19, #264]
   354c8:	cmp	x23, x20
   354cc:	b.eq	353f0 <__asan_backtrace_create_state@@Base+0x7768>  // b.none
   354d0:	ldrb	w22, [x20]
   354d4:	mov	x0, x19
   354d8:	cmp	x1, #0xff
   354dc:	b.eq	3547c <__asan_backtrace_create_state@@Base+0x77f4>  // b.none
   354e0:	mov	x0, x1
   354e4:	b	354b4 <__asan_backtrace_create_state@@Base+0x782c>
   354e8:	ldr	w21, [x19, #316]
   354ec:	mov	w1, #0xffffffff            	// #-1
   354f0:	ldr	x25, [x26, #16]
   354f4:	ldr	x26, [x26, #8]
   354f8:	str	w1, [x19, #316]
   354fc:	ldrb	w0, [x0, #1]
   35500:	cmp	w0, #0x6c
   35504:	b.ne	3528c <__asan_backtrace_create_state@@Base+0x7604>  // b.any
   35508:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3550c:	add	x20, x20, #0x230
   35510:	mov	x0, x20
   35514:	bl	64b0 <__asan_internal_strlen@plt>
   35518:	cbz	x0, 3538c <__asan_backtrace_create_state@@Base+0x7704>
   3551c:	mov	x25, #0x1                   	// #1
   35520:	ldr	x1, [x19, #256]
   35524:	str	x27, [sp, #80]
   35528:	add	x27, x20, x0
   3552c:	b	35584 <__asan_backtrace_create_state@@Base+0x78fc>
   35530:	ldp	x3, x2, [x19, #272]
   35534:	strb	wzr, [x19, #255]
   35538:	add	x20, x20, #0x1
   3553c:	blr	x3
   35540:	strb	w24, [x19]
   35544:	ldr	x0, [x19, #320]
   35548:	str	x25, [x19, #256]
   3554c:	strb	w24, [x19, #264]
   35550:	cmp	x20, x27
   35554:	add	x0, x0, #0x1
   35558:	str	x0, [x19, #320]
   3555c:	mov	x0, #0x1                   	// #1
   35560:	b.eq	35388 <__asan_backtrace_create_state@@Base+0x7700>  // b.none
   35564:	ldrb	w24, [x20]
   35568:	add	x1, x0, #0x1
   3556c:	str	x1, [x19, #256]
   35570:	strb	w24, [x19, x0]
   35574:	add	x20, x20, #0x1
   35578:	strb	w24, [x19, #264]
   3557c:	cmp	x27, x20
   35580:	b.eq	35388 <__asan_backtrace_create_state@@Base+0x7700>  // b.none
   35584:	ldrb	w24, [x20]
   35588:	mov	x0, x19
   3558c:	cmp	x1, #0xff
   35590:	b.eq	35530 <__asan_backtrace_create_state@@Base+0x78a8>  // b.none
   35594:	mov	x0, x1
   35598:	b	35568 <__asan_backtrace_create_state@@Base+0x78e0>
   3559c:	ldr	x27, [sp, #80]
   355a0:	mov	x2, x23
   355a4:	mov	w1, w22
   355a8:	mov	x0, x19
   355ac:	bl	34f70 <__asan_backtrace_create_state@@Base+0x72e8>
   355b0:	mov	x2, x25
   355b4:	b	353a0 <__asan_backtrace_create_state@@Base+0x7718>
   355b8:	ldp	x3, x2, [x19, #272]
   355bc:	strb	wzr, [x19, #255]
   355c0:	mov	x0, x19
   355c4:	blr	x3
   355c8:	ldr	x2, [x19, #320]
   355cc:	mov	x0, #0x1                   	// #1
   355d0:	mov	x1, #0x0                   	// #0
   355d4:	add	x2, x2, x0
   355d8:	str	x2, [x19, #320]
   355dc:	b	35428 <__asan_backtrace_create_state@@Base+0x77a0>
   355e0:	ldp	x3, x2, [x19, #272]
   355e4:	strb	wzr, [x19, #255]
   355e8:	mov	x0, x19
   355ec:	blr	x3
   355f0:	ldr	x2, [x19, #320]
   355f4:	mov	x0, #0x1                   	// #1
   355f8:	mov	x1, #0x0                   	// #0
   355fc:	add	x2, x2, x0
   35600:	str	x2, [x19, #320]
   35604:	b	352b0 <__asan_backtrace_create_state@@Base+0x7628>
   35608:	stp	x29, x30, [sp, #-96]!
   3560c:	mov	x29, sp
   35610:	stp	x19, x20, [sp, #16]
   35614:	mov	x19, x0
   35618:	ldr	w0, [x2]
   3561c:	stp	x21, x22, [sp, #32]
   35620:	mov	x20, x2
   35624:	sub	w0, w0, #0x3
   35628:	mov	w21, w1
   3562c:	cmp	w0, #0x4d
   35630:	b.ls	356a0 <__asan_backtrace_create_state@@Base+0x7a18>  // b.plast
   35634:	ldr	w0, [x20, #4]
   35638:	cmp	w0, #0x1
   3563c:	b.gt	36190 <__asan_backtrace_create_state@@Base+0x8508>
   35640:	ldr	w1, [x19, #308]
   35644:	cmp	w1, #0x400
   35648:	b.gt	36190 <__asan_backtrace_create_state@@Base+0x8508>
   3564c:	ldr	x3, [x19, #328]
   35650:	add	w0, w0, #0x1
   35654:	str	w0, [x20, #4]
   35658:	add	w1, w1, #0x1
   3565c:	add	x0, sp, #0x50
   35660:	str	w1, [x19, #308]
   35664:	str	x0, [x19, #328]
   35668:	mov	w1, w21
   3566c:	mov	x0, x19
   35670:	mov	x2, x20
   35674:	stp	x20, x3, [sp, #80]
   35678:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3567c:	ldr	w1, [x20, #4]
   35680:	ldr	x0, [sp, #88]
   35684:	str	x0, [x19, #328]
   35688:	ldr	w0, [x19, #308]
   3568c:	sub	w1, w1, #0x1
   35690:	str	w1, [x20, #4]
   35694:	sub	w0, w0, #0x1
   35698:	str	w0, [x19, #308]
   3569c:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   356a0:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   356a4:	add	x1, x1, #0xdb4
   356a8:	stp	x23, x24, [sp, #48]
   356ac:	ldrh	w0, [x1, w0, uxtw #1]
   356b0:	adr	x1, 356bc <__asan_backtrace_create_state@@Base+0x7a34>
   356b4:	add	x0, x1, w0, sxth #2
   356b8:	br	x0
   356bc:	ldp	x23, x24, [sp, #48]
   356c0:	b	35634 <__asan_backtrace_create_state@@Base+0x79ac>
   356c4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   356c8:	add	x20, x20, #0x240
   356cc:	mov	x0, x20
   356d0:	bl	64b0 <__asan_internal_strlen@plt>
   356d4:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   356d8:	add	x22, x20, x0
   356dc:	mov	x23, #0x1                   	// #1
   356e0:	ldr	x1, [x19, #256]
   356e4:	b	35740 <__asan_backtrace_create_state@@Base+0x7ab8>
   356e8:	ldp	x3, x2, [x19, #272]
   356ec:	strb	wzr, [x19, #255]
   356f0:	mov	x0, x19
   356f4:	add	x20, x20, #0x1
   356f8:	blr	x3
   356fc:	strb	w21, [x19]
   35700:	ldr	x0, [x19, #320]
   35704:	str	x23, [x19, #256]
   35708:	strb	w21, [x19, #264]
   3570c:	cmp	x20, x22
   35710:	add	x0, x0, #0x1
   35714:	str	x0, [x19, #320]
   35718:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3571c:	ldrb	w21, [x20]
   35720:	mov	x0, #0x1                   	// #1
   35724:	add	x1, x0, #0x1
   35728:	str	x1, [x19, #256]
   3572c:	strb	w21, [x19, x0]
   35730:	add	x20, x20, #0x1
   35734:	strb	w21, [x19, #264]
   35738:	cmp	x20, x22
   3573c:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35740:	ldrb	w21, [x20]
   35744:	cmp	x1, #0xff
   35748:	b.eq	356e8 <__asan_backtrace_create_state@@Base+0x7a60>  // b.none
   3574c:	mov	x0, x1
   35750:	b	35724 <__asan_backtrace_create_state@@Base+0x7a9c>
   35754:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35758:	add	x20, x20, #0x250
   3575c:	mov	x0, x20
   35760:	bl	64b0 <__asan_internal_strlen@plt>
   35764:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35768:	add	x22, x20, x0
   3576c:	mov	x23, #0x1                   	// #1
   35770:	ldr	x1, [x19, #256]
   35774:	b	357d0 <__asan_backtrace_create_state@@Base+0x7b48>
   35778:	ldp	x3, x2, [x19, #272]
   3577c:	strb	wzr, [x19, #255]
   35780:	mov	x0, x19
   35784:	add	x20, x20, #0x1
   35788:	blr	x3
   3578c:	strb	w21, [x19]
   35790:	ldr	x0, [x19, #320]
   35794:	str	x23, [x19, #256]
   35798:	strb	w21, [x19, #264]
   3579c:	cmp	x20, x22
   357a0:	add	x0, x0, #0x1
   357a4:	str	x0, [x19, #320]
   357a8:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   357ac:	ldrb	w21, [x20]
   357b0:	mov	x0, #0x1                   	// #1
   357b4:	add	x1, x0, #0x1
   357b8:	str	x1, [x19, #256]
   357bc:	strb	w21, [x19, x0]
   357c0:	add	x20, x20, #0x1
   357c4:	strb	w21, [x19, #264]
   357c8:	cmp	x22, x20
   357cc:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   357d0:	ldrb	w21, [x20]
   357d4:	cmp	x1, #0xff
   357d8:	b.eq	35778 <__asan_backtrace_create_state@@Base+0x7af0>  // b.none
   357dc:	mov	x0, x1
   357e0:	b	357b4 <__asan_backtrace_create_state@@Base+0x7b2c>
   357e4:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   357e8:	add	x20, x20, #0x260
   357ec:	mov	x0, x20
   357f0:	bl	64b0 <__asan_internal_strlen@plt>
   357f4:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   357f8:	add	x22, x20, x0
   357fc:	mov	x23, #0x1                   	// #1
   35800:	ldr	x1, [x19, #256]
   35804:	b	35860 <__asan_backtrace_create_state@@Base+0x7bd8>
   35808:	ldp	x3, x2, [x19, #272]
   3580c:	strb	wzr, [x19, #255]
   35810:	mov	x0, x19
   35814:	add	x20, x20, #0x1
   35818:	blr	x3
   3581c:	strb	w21, [x19]
   35820:	ldr	x0, [x19, #320]
   35824:	str	x23, [x19, #256]
   35828:	strb	w21, [x19, #264]
   3582c:	cmp	x20, x22
   35830:	add	x0, x0, #0x1
   35834:	str	x0, [x19, #320]
   35838:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3583c:	ldrb	w21, [x20]
   35840:	mov	x0, #0x1                   	// #1
   35844:	add	x1, x0, #0x1
   35848:	str	x1, [x19, #256]
   3584c:	strb	w21, [x19, x0]
   35850:	add	x20, x20, #0x1
   35854:	strb	w21, [x19, #264]
   35858:	cmp	x22, x20
   3585c:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35860:	ldrb	w21, [x20]
   35864:	cmp	x1, #0xff
   35868:	b.eq	35808 <__asan_backtrace_create_state@@Base+0x7b80>  // b.none
   3586c:	mov	x0, x1
   35870:	b	35844 <__asan_backtrace_create_state@@Base+0x7bbc>
   35874:	tbz	w21, #2, 36098 <__asan_backtrace_create_state@@Base+0x8410>
   35878:	ldp	x23, x24, [sp, #48]
   3587c:	ldp	x19, x20, [sp, #16]
   35880:	ldp	x21, x22, [sp, #32]
   35884:	ldp	x29, x30, [sp], #96
   35888:	ret
   3588c:	ldr	x1, [x19, #256]
   35890:	add	x0, x1, #0x1
   35894:	cmp	x1, #0xff
   35898:	b.ne	358c0 <__asan_backtrace_create_state@@Base+0x7c38>  // b.any
   3589c:	ldp	x3, x2, [x19, #272]
   358a0:	strb	wzr, [x19, #255]
   358a4:	mov	x0, x19
   358a8:	blr	x3
   358ac:	ldr	x2, [x19, #320]
   358b0:	mov	x0, #0x1                   	// #1
   358b4:	mov	x1, #0x0                   	// #0
   358b8:	add	x2, x2, x0
   358bc:	str	x2, [x19, #320]
   358c0:	str	x0, [x19, #256]
   358c4:	mov	w0, #0x20                  	// #32
   358c8:	strb	w0, [x19, x1]
   358cc:	strb	w0, [x19, #264]
   358d0:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   358d4:	add	x20, x20, #0x298
   358d8:	mov	x0, x20
   358dc:	bl	64b0 <__asan_internal_strlen@plt>
   358e0:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   358e4:	add	x22, x20, x0
   358e8:	mov	x23, #0x1                   	// #1
   358ec:	ldr	x1, [x19, #256]
   358f0:	b	3594c <__asan_backtrace_create_state@@Base+0x7cc4>
   358f4:	ldp	x3, x2, [x19, #272]
   358f8:	strb	wzr, [x19, #255]
   358fc:	mov	x0, x19
   35900:	add	x20, x20, #0x1
   35904:	blr	x3
   35908:	strb	w21, [x19]
   3590c:	ldr	x0, [x19, #320]
   35910:	str	x23, [x19, #256]
   35914:	strb	w21, [x19, #264]
   35918:	cmp	x20, x22
   3591c:	add	x0, x0, #0x1
   35920:	str	x0, [x19, #320]
   35924:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35928:	ldrb	w21, [x20]
   3592c:	mov	x0, #0x1                   	// #1
   35930:	add	x1, x0, #0x1
   35934:	str	x1, [x19, #256]
   35938:	strb	w21, [x19, x0]
   3593c:	add	x20, x20, #0x1
   35940:	strb	w21, [x19, #264]
   35944:	cmp	x22, x20
   35948:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   3594c:	ldrb	w21, [x20]
   35950:	cmp	x1, #0xff
   35954:	b.eq	358f4 <__asan_backtrace_create_state@@Base+0x7c6c>  // b.none
   35958:	mov	x0, x1
   3595c:	b	35930 <__asan_backtrace_create_state@@Base+0x7ca8>
   35960:	ldrb	w0, [x19, #264]
   35964:	cmp	w0, #0x28
   35968:	b.eq	359b0 <__asan_backtrace_create_state@@Base+0x7d28>  // b.none
   3596c:	ldr	x1, [x19, #256]
   35970:	add	x0, x1, #0x1
   35974:	cmp	x1, #0xff
   35978:	b.ne	359a0 <__asan_backtrace_create_state@@Base+0x7d18>  // b.any
   3597c:	ldp	x3, x2, [x19, #272]
   35980:	strb	wzr, [x19, #255]
   35984:	mov	x0, x19
   35988:	blr	x3
   3598c:	ldr	x2, [x19, #320]
   35990:	mov	x0, #0x1                   	// #1
   35994:	mov	x1, #0x0                   	// #0
   35998:	add	x2, x2, x0
   3599c:	str	x2, [x19, #320]
   359a0:	str	x0, [x19, #256]
   359a4:	mov	w0, #0x20                  	// #32
   359a8:	strb	w0, [x19, x1]
   359ac:	strb	w0, [x19, #264]
   359b0:	ldr	x20, [x20, #8]
   359b4:	cbz	x20, 36200 <__asan_backtrace_create_state@@Base+0x8578>
   359b8:	ldr	w0, [x20, #4]
   359bc:	cmp	w0, #0x1
   359c0:	b.gt	36200 <__asan_backtrace_create_state@@Base+0x8578>
   359c4:	ldr	w1, [x19, #308]
   359c8:	cmp	w1, #0x400
   359cc:	b.gt	36200 <__asan_backtrace_create_state@@Base+0x8578>
   359d0:	ldr	x3, [x19, #328]
   359d4:	add	w0, w0, #0x1
   359d8:	str	w0, [x20, #4]
   359dc:	add	w1, w1, #0x1
   359e0:	add	x0, sp, #0x50
   359e4:	str	w1, [x19, #308]
   359e8:	str	x0, [x19, #328]
   359ec:	mov	w1, w21
   359f0:	mov	x0, x19
   359f4:	mov	x2, x20
   359f8:	stp	x20, x3, [sp, #80]
   359fc:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   35a00:	ldr	w1, [x20, #4]
   35a04:	ldr	x0, [sp, #88]
   35a08:	str	x0, [x19, #328]
   35a0c:	ldr	w0, [x19, #308]
   35a10:	sub	w1, w1, #0x1
   35a14:	str	w1, [x20, #4]
   35a18:	sub	w0, w0, #0x1
   35a1c:	str	w0, [x19, #308]
   35a20:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35a24:	add	x20, x20, #0x2c0
   35a28:	mov	x0, x20
   35a2c:	bl	64b0 <__asan_internal_strlen@plt>
   35a30:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35a34:	add	x22, x20, x0
   35a38:	mov	x23, #0x1                   	// #1
   35a3c:	ldr	x1, [x19, #256]
   35a40:	b	35a9c <__asan_backtrace_create_state@@Base+0x7e14>
   35a44:	ldp	x3, x2, [x19, #272]
   35a48:	strb	wzr, [x19, #255]
   35a4c:	mov	x0, x19
   35a50:	add	x20, x20, #0x1
   35a54:	blr	x3
   35a58:	strb	w21, [x19]
   35a5c:	ldr	x0, [x19, #320]
   35a60:	str	x23, [x19, #256]
   35a64:	strb	w21, [x19, #264]
   35a68:	cmp	x20, x22
   35a6c:	add	x0, x0, #0x1
   35a70:	str	x0, [x19, #320]
   35a74:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35a78:	ldrb	w21, [x20]
   35a7c:	mov	x0, #0x1                   	// #1
   35a80:	add	x1, x0, #0x1
   35a84:	str	x1, [x19, #256]
   35a88:	strb	w21, [x19, x0]
   35a8c:	add	x20, x20, #0x1
   35a90:	strb	w21, [x19, #264]
   35a94:	cmp	x22, x20
   35a98:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35a9c:	ldrb	w21, [x20]
   35aa0:	cmp	x1, #0xff
   35aa4:	b.eq	35a44 <__asan_backtrace_create_state@@Base+0x7dbc>  // b.none
   35aa8:	mov	x0, x1
   35aac:	b	35a80 <__asan_backtrace_create_state@@Base+0x7df8>
   35ab0:	ldr	x1, [x19, #256]
   35ab4:	add	x0, x1, #0x1
   35ab8:	cmp	x1, #0xff
   35abc:	b.eq	361cc <__asan_backtrace_create_state@@Base+0x8544>  // b.none
   35ac0:	str	x0, [x19, #256]
   35ac4:	mov	w0, #0x20                  	// #32
   35ac8:	strb	w0, [x19, x1]
   35acc:	strb	w0, [x19, #264]
   35ad0:	ldr	x20, [x20, #16]
   35ad4:	cbz	x20, 35af0 <__asan_backtrace_create_state@@Base+0x7e68>
   35ad8:	ldr	w0, [x20, #4]
   35adc:	cmp	w0, #0x1
   35ae0:	b.gt	35af0 <__asan_backtrace_create_state@@Base+0x7e68>
   35ae4:	ldr	w1, [x19, #308]
   35ae8:	cmp	w1, #0x400
   35aec:	b.le	3612c <__asan_backtrace_create_state@@Base+0x84a4>
   35af0:	mov	w0, #0x1                   	// #1
   35af4:	ldp	x23, x24, [sp, #48]
   35af8:	str	w0, [x19, #304]
   35afc:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   35b00:	adrp	x22, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35b04:	add	x22, x22, #0x2c8
   35b08:	mov	x0, x22
   35b0c:	bl	64b0 <__asan_internal_strlen@plt>
   35b10:	cbz	x0, 35fb4 <__asan_backtrace_create_state@@Base+0x832c>
   35b14:	add	x24, x22, x0
   35b18:	ldr	x1, [x19, #256]
   35b1c:	str	x25, [sp, #64]
   35b20:	mov	x25, #0x1                   	// #1
   35b24:	b	35b80 <__asan_backtrace_create_state@@Base+0x7ef8>
   35b28:	ldp	x3, x2, [x19, #272]
   35b2c:	strb	wzr, [x19, #255]
   35b30:	mov	x0, x19
   35b34:	add	x22, x22, #0x1
   35b38:	blr	x3
   35b3c:	strb	w23, [x19]
   35b40:	ldr	x0, [x19, #320]
   35b44:	str	x25, [x19, #256]
   35b48:	strb	w23, [x19, #264]
   35b4c:	cmp	x22, x24
   35b50:	add	x0, x0, #0x1
   35b54:	str	x0, [x19, #320]
   35b58:	b.eq	35fb0 <__asan_backtrace_create_state@@Base+0x8328>  // b.none
   35b5c:	ldrb	w23, [x22]
   35b60:	mov	x0, #0x1                   	// #1
   35b64:	add	x1, x0, #0x1
   35b68:	str	x1, [x19, #256]
   35b6c:	strb	w23, [x19, x0]
   35b70:	add	x22, x22, #0x1
   35b74:	strb	w23, [x19, #264]
   35b78:	cmp	x24, x22
   35b7c:	b.eq	35fb0 <__asan_backtrace_create_state@@Base+0x8328>  // b.none
   35b80:	ldrb	w23, [x22]
   35b84:	cmp	x1, #0xff
   35b88:	b.eq	35b28 <__asan_backtrace_create_state@@Base+0x7ea0>  // b.none
   35b8c:	mov	x0, x1
   35b90:	b	35b64 <__asan_backtrace_create_state@@Base+0x7edc>
   35b94:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35b98:	add	x20, x20, #0x268
   35b9c:	mov	x0, x20
   35ba0:	bl	64b0 <__asan_internal_strlen@plt>
   35ba4:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35ba8:	add	x22, x20, x0
   35bac:	mov	x23, #0x1                   	// #1
   35bb0:	ldr	x1, [x19, #256]
   35bb4:	b	35c10 <__asan_backtrace_create_state@@Base+0x7f88>
   35bb8:	ldp	x3, x2, [x19, #272]
   35bbc:	strb	wzr, [x19, #255]
   35bc0:	mov	x0, x19
   35bc4:	add	x20, x20, #0x1
   35bc8:	blr	x3
   35bcc:	strb	w21, [x19]
   35bd0:	ldr	x0, [x19, #320]
   35bd4:	str	x23, [x19, #256]
   35bd8:	strb	w21, [x19, #264]
   35bdc:	cmp	x20, x22
   35be0:	add	x0, x0, #0x1
   35be4:	str	x0, [x19, #320]
   35be8:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35bec:	ldrb	w21, [x20]
   35bf0:	mov	x0, #0x1                   	// #1
   35bf4:	add	x1, x0, #0x1
   35bf8:	str	x1, [x19, #256]
   35bfc:	strb	w21, [x19, x0]
   35c00:	add	x20, x20, #0x1
   35c04:	strb	w21, [x19, #264]
   35c08:	cmp	x22, x20
   35c0c:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35c10:	ldrb	w21, [x20]
   35c14:	cmp	x1, #0xff
   35c18:	b.eq	35bb8 <__asan_backtrace_create_state@@Base+0x7f30>  // b.none
   35c1c:	mov	x0, x1
   35c20:	b	35bf4 <__asan_backtrace_create_state@@Base+0x7f6c>
   35c24:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35c28:	add	x20, x20, #0x2b0
   35c2c:	mov	x0, x20
   35c30:	bl	64b0 <__asan_internal_strlen@plt>
   35c34:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35c38:	add	x22, x20, x0
   35c3c:	mov	x23, #0x1                   	// #1
   35c40:	ldr	x1, [x19, #256]
   35c44:	b	35ca0 <__asan_backtrace_create_state@@Base+0x8018>
   35c48:	ldp	x3, x2, [x19, #272]
   35c4c:	strb	wzr, [x19, #255]
   35c50:	mov	x0, x19
   35c54:	add	x20, x20, #0x1
   35c58:	blr	x3
   35c5c:	strb	w21, [x19]
   35c60:	ldr	x0, [x19, #320]
   35c64:	str	x23, [x19, #256]
   35c68:	strb	w21, [x19, #264]
   35c6c:	cmp	x20, x22
   35c70:	add	x0, x0, #0x1
   35c74:	str	x0, [x19, #320]
   35c78:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35c7c:	ldrb	w21, [x20]
   35c80:	mov	x0, #0x1                   	// #1
   35c84:	add	x1, x0, #0x1
   35c88:	str	x1, [x19, #256]
   35c8c:	strb	w21, [x19, x0]
   35c90:	add	x20, x20, #0x1
   35c94:	strb	w21, [x19, #264]
   35c98:	cmp	x22, x20
   35c9c:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35ca0:	ldrb	w21, [x20]
   35ca4:	cmp	x1, #0xff
   35ca8:	b.eq	35c48 <__asan_backtrace_create_state@@Base+0x7fc0>  // b.none
   35cac:	mov	x0, x1
   35cb0:	b	35c84 <__asan_backtrace_create_state@@Base+0x7ffc>
   35cb4:	adrp	x22, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35cb8:	add	x22, x22, #0x290
   35cbc:	mov	x0, x22
   35cc0:	bl	64b0 <__asan_internal_strlen@plt>
   35cc4:	cbz	x0, 35ed4 <__asan_backtrace_create_state@@Base+0x824c>
   35cc8:	add	x24, x22, x0
   35ccc:	ldr	x1, [x19, #256]
   35cd0:	str	x25, [sp, #64]
   35cd4:	mov	x25, #0x1                   	// #1
   35cd8:	b	35d34 <__asan_backtrace_create_state@@Base+0x80ac>
   35cdc:	ldp	x3, x2, [x19, #272]
   35ce0:	strb	wzr, [x19, #255]
   35ce4:	mov	x0, x19
   35ce8:	add	x22, x22, #0x1
   35cec:	blr	x3
   35cf0:	strb	w23, [x19]
   35cf4:	ldr	x0, [x19, #320]
   35cf8:	str	x25, [x19, #256]
   35cfc:	strb	w23, [x19, #264]
   35d00:	cmp	x22, x24
   35d04:	add	x0, x0, #0x1
   35d08:	str	x0, [x19, #320]
   35d0c:	b.eq	3620c <__asan_backtrace_create_state@@Base+0x8584>  // b.none
   35d10:	ldrb	w23, [x22]
   35d14:	mov	x0, #0x1                   	// #1
   35d18:	add	x1, x0, #0x1
   35d1c:	str	x1, [x19, #256]
   35d20:	strb	w23, [x19, x0]
   35d24:	add	x22, x22, #0x1
   35d28:	strb	w23, [x19, #264]
   35d2c:	cmp	x24, x22
   35d30:	b.eq	35ed0 <__asan_backtrace_create_state@@Base+0x8248>  // b.none
   35d34:	ldrb	w23, [x22]
   35d38:	cmp	x1, #0xff
   35d3c:	b.eq	35cdc <__asan_backtrace_create_state@@Base+0x8054>  // b.none
   35d40:	mov	x0, x1
   35d44:	b	35d18 <__asan_backtrace_create_state@@Base+0x8090>
   35d48:	ldr	x20, [x2, #8]
   35d4c:	cbnz	x20, 35ad8 <__asan_backtrace_create_state@@Base+0x7e50>
   35d50:	b	35af0 <__asan_backtrace_create_state@@Base+0x7e68>
   35d54:	ldr	x0, [x19, #256]
   35d58:	cmp	x0, #0xff
   35d5c:	b.eq	3619c <__asan_backtrace_create_state@@Base+0x8514>  // b.none
   35d60:	add	x1, x0, #0x1
   35d64:	str	x1, [x19, #256]
   35d68:	mov	w2, #0x20                  	// #32
   35d6c:	strb	w2, [x19, x0]
   35d70:	strb	w2, [x19, #264]
   35d74:	b	35ea0 <__asan_backtrace_create_state@@Base+0x8218>
   35d78:	adrp	x22, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35d7c:	add	x22, x22, #0x280
   35d80:	mov	x0, x22
   35d84:	bl	64b0 <__asan_internal_strlen@plt>
   35d88:	cbz	x0, 35ed4 <__asan_backtrace_create_state@@Base+0x824c>
   35d8c:	add	x24, x22, x0
   35d90:	ldr	x1, [x19, #256]
   35d94:	str	x25, [sp, #64]
   35d98:	mov	x25, #0x1                   	// #1
   35d9c:	b	35df8 <__asan_backtrace_create_state@@Base+0x8170>
   35da0:	ldp	x3, x2, [x19, #272]
   35da4:	strb	wzr, [x19, #255]
   35da8:	mov	x0, x19
   35dac:	add	x22, x22, #0x1
   35db0:	blr	x3
   35db4:	strb	w23, [x19]
   35db8:	ldr	x0, [x19, #320]
   35dbc:	str	x25, [x19, #256]
   35dc0:	strb	w23, [x19, #264]
   35dc4:	cmp	x24, x22
   35dc8:	add	x0, x0, #0x1
   35dcc:	str	x0, [x19, #320]
   35dd0:	b.eq	3620c <__asan_backtrace_create_state@@Base+0x8584>  // b.none
   35dd4:	ldrb	w23, [x22]
   35dd8:	mov	x0, #0x1                   	// #1
   35ddc:	add	x1, x0, #0x1
   35de0:	str	x1, [x19, #256]
   35de4:	strb	w23, [x19, x0]
   35de8:	add	x22, x22, #0x1
   35dec:	strb	w23, [x19, #264]
   35df0:	cmp	x24, x22
   35df4:	b.eq	35ed0 <__asan_backtrace_create_state@@Base+0x8248>  // b.none
   35df8:	ldrb	w23, [x22]
   35dfc:	cmp	x1, #0xff
   35e00:	b.eq	35da0 <__asan_backtrace_create_state@@Base+0x8118>  // b.none
   35e04:	mov	x0, x1
   35e08:	b	35ddc <__asan_backtrace_create_state@@Base+0x8154>
   35e0c:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   35e10:	add	x20, x20, #0x2a0
   35e14:	mov	x0, x20
   35e18:	bl	64b0 <__asan_internal_strlen@plt>
   35e1c:	cbz	x0, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35e20:	add	x22, x20, x0
   35e24:	mov	x23, #0x1                   	// #1
   35e28:	ldr	x1, [x19, #256]
   35e2c:	b	35e88 <__asan_backtrace_create_state@@Base+0x8200>
   35e30:	ldp	x3, x2, [x19, #272]
   35e34:	strb	wzr, [x19, #255]
   35e38:	mov	x0, x19
   35e3c:	add	x20, x20, #0x1
   35e40:	blr	x3
   35e44:	strb	w21, [x19]
   35e48:	ldr	x0, [x19, #320]
   35e4c:	str	x23, [x19, #256]
   35e50:	strb	w21, [x19, #264]
   35e54:	cmp	x22, x20
   35e58:	add	x0, x0, #0x1
   35e5c:	str	x0, [x19, #320]
   35e60:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35e64:	ldrb	w21, [x20]
   35e68:	mov	x0, #0x1                   	// #1
   35e6c:	add	x1, x0, #0x1
   35e70:	str	x1, [x19, #256]
   35e74:	strb	w21, [x19, x0]
   35e78:	add	x20, x20, #0x1
   35e7c:	strb	w21, [x19, #264]
   35e80:	cmp	x22, x20
   35e84:	b.eq	35878 <__asan_backtrace_create_state@@Base+0x7bf0>  // b.none
   35e88:	ldrb	w21, [x20]
   35e8c:	cmp	x1, #0xff
   35e90:	b.eq	35e30 <__asan_backtrace_create_state@@Base+0x81a8>  // b.none
   35e94:	mov	x0, x1
   35e98:	b	35e6c <__asan_backtrace_create_state@@Base+0x81e4>
   35e9c:	ldr	x1, [x19, #256]
   35ea0:	cmp	x1, #0xff
   35ea4:	b.eq	36070 <__asan_backtrace_create_state@@Base+0x83e8>  // b.none
   35ea8:	add	x0, x1, #0x1
   35eac:	str	x0, [x19, #256]
   35eb0:	mov	w0, #0x26                  	// #38
   35eb4:	strb	w0, [x19, x1]
   35eb8:	strb	w0, [x19, #264]
   35ebc:	ldp	x19, x20, [sp, #16]
   35ec0:	ldp	x21, x22, [sp, #32]
   35ec4:	ldp	x23, x24, [sp, #48]
   35ec8:	ldp	x29, x30, [sp], #96
   35ecc:	ret
   35ed0:	ldr	x25, [sp, #64]
   35ed4:	ldr	x22, [x20, #16]
   35ed8:	cbz	x22, 35878 <__asan_backtrace_create_state@@Base+0x7bf0>
   35edc:	ldr	x1, [x19, #256]
   35ee0:	cmp	x1, #0xff
   35ee4:	b.eq	360e4 <__asan_backtrace_create_state@@Base+0x845c>  // b.none
   35ee8:	add	x0, x1, #0x1
   35eec:	str	x0, [x19, #256]
   35ef0:	mov	w2, #0x28                  	// #40
   35ef4:	strb	w2, [x19, x1]
   35ef8:	strb	w2, [x19, #264]
   35efc:	ldr	w1, [x22, #4]
   35f00:	cmp	w1, #0x1
   35f04:	b.gt	36184 <__asan_backtrace_create_state@@Base+0x84fc>
   35f08:	ldr	w2, [x19, #308]
   35f0c:	cmp	w2, #0x400
   35f10:	b.gt	36184 <__asan_backtrace_create_state@@Base+0x84fc>
   35f14:	ldr	x3, [x19, #328]
   35f18:	add	w1, w1, #0x1
   35f1c:	str	w1, [x22, #4]
   35f20:	add	w2, w2, #0x1
   35f24:	add	x0, sp, #0x50
   35f28:	str	w2, [x19, #308]
   35f2c:	str	x0, [x19, #328]
   35f30:	mov	w1, w21
   35f34:	mov	x2, x22
   35f38:	mov	x0, x19
   35f3c:	stp	x22, x3, [sp, #80]
   35f40:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   35f44:	ldr	w2, [x22, #4]
   35f48:	ldr	x0, [sp, #88]
   35f4c:	str	x0, [x19, #328]
   35f50:	ldr	w1, [x19, #308]
   35f54:	sub	w2, w2, #0x1
   35f58:	ldr	x0, [x19, #256]
   35f5c:	str	w2, [x22, #4]
   35f60:	sub	w1, w1, #0x1
   35f64:	str	w1, [x19, #308]
   35f68:	cmp	x0, #0xff
   35f6c:	b.ne	36124 <__asan_backtrace_create_state@@Base+0x849c>  // b.any
   35f70:	ldp	x3, x2, [x19, #272]
   35f74:	strb	wzr, [x19, #255]
   35f78:	mov	x1, x0
   35f7c:	mov	x0, x19
   35f80:	blr	x3
   35f84:	ldr	x2, [x19, #320]
   35f88:	mov	x1, #0x1                   	// #1
   35f8c:	mov	x0, #0x0                   	// #0
   35f90:	add	x2, x2, x1
   35f94:	str	x2, [x19, #320]
   35f98:	str	x1, [x19, #256]
   35f9c:	mov	w1, #0x29                  	// #41
   35fa0:	strb	w1, [x19, x0]
   35fa4:	strb	w1, [x19, #264]
   35fa8:	ldp	x23, x24, [sp, #48]
   35fac:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   35fb0:	ldr	x25, [sp, #64]
   35fb4:	ldr	x20, [x20, #8]
   35fb8:	cbz	x20, 361f4 <__asan_backtrace_create_state@@Base+0x856c>
   35fbc:	ldr	w0, [x20, #4]
   35fc0:	cmp	w0, #0x1
   35fc4:	b.gt	361f4 <__asan_backtrace_create_state@@Base+0x856c>
   35fc8:	ldr	w1, [x19, #308]
   35fcc:	cmp	w1, #0x400
   35fd0:	b.gt	361f4 <__asan_backtrace_create_state@@Base+0x856c>
   35fd4:	ldr	x3, [x19, #328]
   35fd8:	add	w0, w0, #0x1
   35fdc:	str	w0, [x20, #4]
   35fe0:	add	w1, w1, #0x1
   35fe4:	add	x0, sp, #0x50
   35fe8:	str	w1, [x19, #308]
   35fec:	str	x0, [x19, #328]
   35ff0:	mov	w1, w21
   35ff4:	mov	x0, x19
   35ff8:	mov	x2, x20
   35ffc:	stp	x20, x3, [sp, #80]
   36000:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   36004:	ldr	w1, [x20, #4]
   36008:	ldr	x0, [sp, #88]
   3600c:	str	x0, [x19, #328]
   36010:	ldr	w0, [x19, #308]
   36014:	sub	w1, w1, #0x1
   36018:	str	w1, [x20, #4]
   3601c:	sub	w0, w0, #0x1
   36020:	str	w0, [x19, #308]
   36024:	ldr	x1, [x19, #256]
   36028:	add	x0, x1, #0x1
   3602c:	cmp	x1, #0xff
   36030:	b.ne	36058 <__asan_backtrace_create_state@@Base+0x83d0>  // b.any
   36034:	ldp	x3, x2, [x19, #272]
   36038:	strb	wzr, [x19, #255]
   3603c:	mov	x0, x19
   36040:	blr	x3
   36044:	ldr	x2, [x19, #320]
   36048:	mov	x0, #0x1                   	// #1
   3604c:	mov	x1, #0x0                   	// #0
   36050:	add	x2, x2, x0
   36054:	str	x2, [x19, #320]
   36058:	str	x0, [x19, #256]
   3605c:	mov	w0, #0x29                  	// #41
   36060:	strb	w0, [x19, x1]
   36064:	strb	w0, [x19, #264]
   36068:	ldp	x23, x24, [sp, #48]
   3606c:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   36070:	ldp	x3, x2, [x19, #272]
   36074:	strb	wzr, [x19, #255]
   36078:	mov	x0, x19
   3607c:	blr	x3
   36080:	ldr	x2, [x19, #320]
   36084:	mov	x0, #0x1                   	// #1
   36088:	mov	x1, #0x0                   	// #0
   3608c:	add	x2, x2, x0
   36090:	str	x2, [x19, #320]
   36094:	b	35eac <__asan_backtrace_create_state@@Base+0x8224>
   36098:	ldr	x1, [x19, #256]
   3609c:	add	x0, x1, #0x1
   360a0:	cmp	x1, #0xff
   360a4:	b.ne	360cc <__asan_backtrace_create_state@@Base+0x8444>  // b.any
   360a8:	ldp	x3, x2, [x19, #272]
   360ac:	strb	wzr, [x19, #255]
   360b0:	mov	x0, x19
   360b4:	blr	x3
   360b8:	ldr	x2, [x19, #320]
   360bc:	mov	x0, #0x1                   	// #1
   360c0:	mov	x1, #0x0                   	// #0
   360c4:	add	x2, x2, x0
   360c8:	str	x2, [x19, #320]
   360cc:	str	x0, [x19, #256]
   360d0:	mov	w0, #0x2a                  	// #42
   360d4:	strb	w0, [x19, x1]
   360d8:	strb	w0, [x19, #264]
   360dc:	ldp	x23, x24, [sp, #48]
   360e0:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   360e4:	ldp	x3, x2, [x19, #272]
   360e8:	strb	wzr, [x19, #255]
   360ec:	mov	x0, x19
   360f0:	blr	x3
   360f4:	ldr	x0, [x19, #320]
   360f8:	mov	x2, #0x1                   	// #1
   360fc:	ldr	x22, [x20, #16]
   36100:	mov	w1, #0x28                  	// #40
   36104:	add	x0, x0, x2
   36108:	strb	w1, [x19]
   3610c:	str	x2, [x19, #256]
   36110:	strb	w1, [x19, #264]
   36114:	str	x0, [x19, #320]
   36118:	cbnz	x22, 36220 <__asan_backtrace_create_state@@Base+0x8598>
   3611c:	mov	x0, x2
   36120:	str	w2, [x19, #304]
   36124:	add	x1, x0, #0x1
   36128:	b	35f98 <__asan_backtrace_create_state@@Base+0x8310>
   3612c:	ldr	x3, [x19, #328]
   36130:	add	w0, w0, #0x1
   36134:	str	w0, [x20, #4]
   36138:	add	w1, w1, #0x1
   3613c:	add	x0, sp, #0x50
   36140:	str	w1, [x19, #308]
   36144:	str	x0, [x19, #328]
   36148:	mov	w1, w21
   3614c:	mov	x0, x19
   36150:	mov	x2, x20
   36154:	stp	x20, x3, [sp, #80]
   36158:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3615c:	ldr	w1, [x20, #4]
   36160:	ldr	x0, [sp, #88]
   36164:	sub	w1, w1, #0x1
   36168:	ldp	x23, x24, [sp, #48]
   3616c:	str	x0, [x19, #328]
   36170:	ldr	w0, [x19, #308]
   36174:	str	w1, [x20, #4]
   36178:	sub	w0, w0, #0x1
   3617c:	str	w0, [x19, #308]
   36180:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   36184:	mov	w1, #0x1                   	// #1
   36188:	str	w1, [x19, #304]
   3618c:	b	35f68 <__asan_backtrace_create_state@@Base+0x82e0>
   36190:	mov	w0, #0x1                   	// #1
   36194:	str	w0, [x19, #304]
   36198:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   3619c:	ldp	x3, x2, [x19, #272]
   361a0:	strb	wzr, [x19, #255]
   361a4:	mov	x1, x0
   361a8:	mov	x0, x19
   361ac:	blr	x3
   361b0:	ldr	x0, [x19, #320]
   361b4:	mov	w2, #0x20                  	// #32
   361b8:	mov	x1, #0x1                   	// #1
   361bc:	strb	w2, [x19]
   361c0:	add	x0, x0, x1
   361c4:	str	x0, [x19, #320]
   361c8:	b	35ea8 <__asan_backtrace_create_state@@Base+0x8220>
   361cc:	ldp	x3, x2, [x19, #272]
   361d0:	strb	wzr, [x19, #255]
   361d4:	mov	x0, x19
   361d8:	blr	x3
   361dc:	ldr	x2, [x19, #320]
   361e0:	mov	x0, #0x1                   	// #1
   361e4:	mov	x1, #0x0                   	// #0
   361e8:	add	x2, x2, x0
   361ec:	str	x2, [x19, #320]
   361f0:	b	35ac0 <__asan_backtrace_create_state@@Base+0x7e38>
   361f4:	mov	w0, #0x1                   	// #1
   361f8:	str	w0, [x19, #304]
   361fc:	b	36024 <__asan_backtrace_create_state@@Base+0x839c>
   36200:	mov	w0, #0x1                   	// #1
   36204:	str	w0, [x19, #304]
   36208:	b	35a20 <__asan_backtrace_create_state@@Base+0x7d98>
   3620c:	ldr	x22, [x20, #16]
   36210:	mov	x1, #0x1                   	// #1
   36214:	cbz	x22, 3623c <__asan_backtrace_create_state@@Base+0x85b4>
   36218:	ldr	x25, [sp, #64]
   3621c:	b	35ee8 <__asan_backtrace_create_state@@Base+0x8260>
   36220:	ldr	w1, [x22, #4]
   36224:	mov	x0, x2
   36228:	cmp	w1, #0x1
   3622c:	b.le	35f08 <__asan_backtrace_create_state@@Base+0x8280>
   36230:	add	x1, x0, #0x1
   36234:	str	w2, [x19, #304]
   36238:	b	35f98 <__asan_backtrace_create_state@@Base+0x8310>
   3623c:	ldp	x23, x24, [sp, #48]
   36240:	ldr	x25, [sp, #64]
   36244:	b	3587c <__asan_backtrace_create_state@@Base+0x7bf4>
   36248:	cbz	x2, 367f0 <__asan_backtrace_create_state@@Base+0x8b68>
   3624c:	stp	x29, x30, [sp, #-112]!
   36250:	mov	x29, sp
   36254:	stp	x19, x20, [sp, #16]
   36258:	mov	x20, x0
   3625c:	mov	x19, x2
   36260:	stp	x21, x22, [sp, #32]
   36264:	mov	w21, w1
   36268:	mov	w22, #0x1                   	// #1
   3626c:	stp	x25, x26, [sp, #64]
   36270:	cbnz	w3, 36364 <__asan_backtrace_create_state@@Base+0x86dc>
   36274:	mov	x22, #0x1f                  	// #31
   36278:	stp	x23, x24, [sp, #48]
   3627c:	movk	x22, #0x1a, lsl #48
   36280:	mov	w24, #0x1                   	// #1
   36284:	mov	x23, #0x1                   	// #1
   36288:	b	362f0 <__asan_backtrace_create_state@@Base+0x8668>
   3628c:	ldr	w2, [x19, #16]
   36290:	cbnz	w2, 362e8 <__asan_backtrace_create_state@@Base+0x8660>
   36294:	ldr	x4, [x19, #8]
   36298:	mov	x2, x4
   3629c:	ldr	w5, [x4]
   362a0:	sub	w3, w5, #0x1c
   362a4:	cmp	w3, #0x34
   362a8:	b.hi	362b8 <__asan_backtrace_create_state@@Base+0x8630>  // b.pmore
   362ac:	lsl	x3, x23, x3
   362b0:	tst	x3, x22
   362b4:	b.ne	362e8 <__asan_backtrace_create_state@@Base+0x8660>  // b.any
   362b8:	ldr	x3, [x19, #24]
   362bc:	cmp	w5, #0x29
   362c0:	ldr	x25, [x20, #288]
   362c4:	str	w24, [x19, #16]
   362c8:	str	x3, [x20, #288]
   362cc:	b.eq	36388 <__asan_backtrace_create_state@@Base+0x8700>  // b.none
   362d0:	cmp	w5, #0x2a
   362d4:	b.eq	363b8 <__asan_backtrace_create_state@@Base+0x8730>  // b.none
   362d8:	cmp	w5, #0x2
   362dc:	b.eq	363ec <__asan_backtrace_create_state@@Base+0x8764>  // b.none
   362e0:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   362e4:	str	x25, [x20, #288]
   362e8:	ldr	x19, [x19]
   362ec:	cbz	x19, 36300 <__asan_backtrace_create_state@@Base+0x8678>
   362f0:	ldr	w2, [x20, #304]
   362f4:	mov	w1, w21
   362f8:	mov	x0, x20
   362fc:	cbz	w2, 3628c <__asan_backtrace_create_state@@Base+0x8604>
   36300:	ldp	x23, x24, [sp, #48]
   36304:	ldp	x19, x20, [sp, #16]
   36308:	ldp	x21, x22, [sp, #32]
   3630c:	ldp	x25, x26, [sp, #64]
   36310:	ldp	x29, x30, [sp], #112
   36314:	ret
   36318:	ldr	w2, [x19, #16]
   3631c:	cbnz	w2, 3635c <__asan_backtrace_create_state@@Base+0x86d4>
   36320:	ldr	x4, [x19, #8]
   36324:	ldr	x5, [x19, #24]
   36328:	mov	x2, x4
   3632c:	ldr	w3, [x4]
   36330:	ldr	x25, [x20, #288]
   36334:	str	w22, [x19, #16]
   36338:	str	x5, [x20, #288]
   3633c:	cmp	w3, #0x29
   36340:	b.eq	3638c <__asan_backtrace_create_state@@Base+0x8704>  // b.none
   36344:	cmp	w3, #0x2a
   36348:	b.eq	363bc <__asan_backtrace_create_state@@Base+0x8734>  // b.none
   3634c:	cmp	w3, #0x2
   36350:	b.eq	363e8 <__asan_backtrace_create_state@@Base+0x8760>  // b.none
   36354:	bl	35608 <__asan_backtrace_create_state@@Base+0x7980>
   36358:	str	x25, [x20, #288]
   3635c:	ldr	x19, [x19]
   36360:	cbz	x19, 36304 <__asan_backtrace_create_state@@Base+0x867c>
   36364:	ldr	w2, [x20, #304]
   36368:	mov	w1, w21
   3636c:	mov	x0, x20
   36370:	cbz	w2, 36318 <__asan_backtrace_create_state@@Base+0x8690>
   36374:	ldp	x19, x20, [sp, #16]
   36378:	ldp	x21, x22, [sp, #32]
   3637c:	ldp	x25, x26, [sp, #64]
   36380:	ldp	x29, x30, [sp], #112
   36384:	ret
   36388:	ldp	x23, x24, [sp, #48]
   3638c:	mov	w1, w21
   36390:	ldr	x3, [x19]
   36394:	mov	x0, x20
   36398:	add	x2, x4, #0x10
   3639c:	bl	36b48 <__asan_backtrace_create_state@@Base+0x8ec0>
   363a0:	str	x25, [x20, #288]
   363a4:	ldp	x19, x20, [sp, #16]
   363a8:	ldp	x21, x22, [sp, #32]
   363ac:	ldp	x25, x26, [sp, #64]
   363b0:	ldp	x29, x30, [sp], #112
   363b4:	ret
   363b8:	ldp	x23, x24, [sp, #48]
   363bc:	mov	w1, w21
   363c0:	ldr	x3, [x19]
   363c4:	mov	x0, x20
   363c8:	add	x2, x4, #0x8
   363cc:	bl	367f8 <__asan_backtrace_create_state@@Base+0x8b70>
   363d0:	str	x25, [x20, #288]
   363d4:	ldp	x19, x20, [sp, #16]
   363d8:	ldp	x21, x22, [sp, #32]
   363dc:	ldp	x25, x26, [sp, #64]
   363e0:	ldp	x29, x30, [sp], #112
   363e4:	ret
   363e8:	stp	x23, x24, [sp, #48]
   363ec:	ldr	x22, [x4, #8]
   363f0:	ldr	x23, [x20, #296]
   363f4:	str	xzr, [x20, #296]
   363f8:	cbz	x22, 36414 <__asan_backtrace_create_state@@Base+0x878c>
   363fc:	ldr	w0, [x22, #4]
   36400:	cmp	w0, #0x1
   36404:	b.gt	36414 <__asan_backtrace_create_state@@Base+0x878c>
   36408:	ldr	w1, [x20, #308]
   3640c:	cmp	w1, #0x400
   36410:	b.le	3653c <__asan_backtrace_create_state@@Base+0x88b4>
   36414:	mov	w0, #0x1                   	// #1
   36418:	str	w0, [x20, #304]
   3641c:	str	x23, [x20, #296]
   36420:	tbz	w21, #2, 36590 <__asan_backtrace_create_state@@Base+0x8908>
   36424:	ldr	x1, [x20, #256]
   36428:	add	x0, x1, #0x1
   3642c:	cmp	x1, #0xff
   36430:	b.ne	36458 <__asan_backtrace_create_state@@Base+0x87d0>  // b.any
   36434:	ldp	x3, x2, [x20, #272]
   36438:	strb	wzr, [x20, #255]
   3643c:	mov	x0, x20
   36440:	blr	x3
   36444:	ldr	x2, [x20, #320]
   36448:	mov	x0, #0x1                   	// #1
   3644c:	mov	x1, #0x0                   	// #0
   36450:	add	x2, x2, x0
   36454:	str	x2, [x20, #320]
   36458:	str	x0, [x20, #256]
   3645c:	mov	w0, #0x2e                  	// #46
   36460:	strb	w0, [x20, x1]
   36464:	strb	w0, [x20, #264]
   36468:	ldr	x0, [x19, #8]
   3646c:	ldr	x22, [x0, #16]
   36470:	ldr	w0, [x22]
   36474:	cmp	w0, #0x47
   36478:	b.eq	36620 <__asan_backtrace_create_state@@Base+0x8998>  // b.none
   3647c:	mov	x1, #0x1f                  	// #31
   36480:	mov	x2, #0x1                   	// #1
   36484:	movk	x1, #0x1a, lsl #48
   36488:	sub	w0, w0, #0x1c
   3648c:	cmp	w0, #0x34
   36490:	b.hi	364a0 <__asan_backtrace_create_state@@Base+0x8818>  // b.pmore
   36494:	lsl	x0, x2, x0
   36498:	tst	x0, x1
   3649c:	b.ne	364dc <__asan_backtrace_create_state@@Base+0x8854>  // b.any
   364a0:	ldr	w0, [x22, #4]
   364a4:	cmp	w0, #0x1
   364a8:	b.gt	364b8 <__asan_backtrace_create_state@@Base+0x8830>
   364ac:	ldr	w1, [x20, #308]
   364b0:	cmp	w1, #0x400
   364b4:	b.le	364e8 <__asan_backtrace_create_state@@Base+0x8860>
   364b8:	mov	w0, #0x1                   	// #1
   364bc:	str	w0, [x20, #304]
   364c0:	ldp	x23, x24, [sp, #48]
   364c4:	str	x25, [x20, #288]
   364c8:	ldp	x19, x20, [sp, #16]
   364cc:	ldp	x21, x22, [sp, #32]
   364d0:	ldp	x25, x26, [sp, #64]
   364d4:	ldp	x29, x30, [sp], #112
   364d8:	ret
   364dc:	ldr	x22, [x22, #8]
   364e0:	ldr	w0, [x22]
   364e4:	b	36488 <__asan_backtrace_create_state@@Base+0x8800>
   364e8:	ldr	x3, [x20, #328]
   364ec:	add	w0, w0, #0x1
   364f0:	str	w0, [x22, #4]
   364f4:	add	w1, w1, #0x1
   364f8:	add	x0, sp, #0x50
   364fc:	str	w1, [x20, #308]
   36500:	str	x0, [x20, #328]
   36504:	mov	w1, w21
   36508:	mov	x0, x20
   3650c:	mov	x2, x22
   36510:	stp	x22, x3, [sp, #80]
   36514:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   36518:	ldr	w1, [x22, #4]
   3651c:	ldr	x0, [sp, #88]
   36520:	str	x0, [x20, #328]
   36524:	ldr	w0, [x20, #308]
   36528:	sub	w1, w1, #0x1
   3652c:	str	w1, [x22, #4]
   36530:	sub	w0, w0, #0x1
   36534:	str	w0, [x20, #308]
   36538:	b	364c0 <__asan_backtrace_create_state@@Base+0x8838>
   3653c:	ldr	x3, [x20, #328]
   36540:	add	w0, w0, #0x1
   36544:	str	w0, [x22, #4]
   36548:	add	w1, w1, #0x1
   3654c:	add	x0, sp, #0x50
   36550:	str	w1, [x20, #308]
   36554:	str	x0, [x20, #328]
   36558:	mov	w1, w21
   3655c:	mov	x0, x20
   36560:	mov	x2, x22
   36564:	stp	x22, x3, [sp, #80]
   36568:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3656c:	ldr	w1, [x22, #4]
   36570:	ldr	x0, [sp, #88]
   36574:	str	x0, [x20, #328]
   36578:	ldr	w0, [x20, #308]
   3657c:	sub	w1, w1, #0x1
   36580:	str	w1, [x22, #4]
   36584:	sub	w0, w0, #0x1
   36588:	str	w0, [x20, #308]
   3658c:	b	3641c <__asan_backtrace_create_state@@Base+0x8794>
   36590:	adrp	x22, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   36594:	add	x22, x22, #0xef0
   36598:	mov	x0, x22
   3659c:	bl	64b0 <__asan_internal_strlen@plt>
   365a0:	cbz	x0, 36468 <__asan_backtrace_create_state@@Base+0x87e0>
   365a4:	add	x24, x22, x0
   365a8:	mov	x26, #0x1                   	// #1
   365ac:	ldr	x1, [x20, #256]
   365b0:	b	36608 <__asan_backtrace_create_state@@Base+0x8980>
   365b4:	ldp	x3, x2, [x20, #272]
   365b8:	strb	wzr, [x20, #255]
   365bc:	add	x22, x22, #0x1
   365c0:	blr	x3
   365c4:	strb	w23, [x20]
   365c8:	ldr	x0, [x20, #320]
   365cc:	str	x26, [x20, #256]
   365d0:	strb	w23, [x20, #264]
   365d4:	cmp	x24, x22
   365d8:	add	x0, x0, #0x1
   365dc:	str	x0, [x20, #320]
   365e0:	mov	x0, #0x1                   	// #1
   365e4:	b.eq	36468 <__asan_backtrace_create_state@@Base+0x87e0>  // b.none
   365e8:	ldrb	w23, [x22]
   365ec:	add	x1, x0, #0x1
   365f0:	str	x1, [x20, #256]
   365f4:	strb	w23, [x20, x0]
   365f8:	add	x22, x22, #0x1
   365fc:	strb	w23, [x20, #264]
   36600:	cmp	x24, x22
   36604:	b.eq	36468 <__asan_backtrace_create_state@@Base+0x87e0>  // b.none
   36608:	ldrb	w23, [x22]
   3660c:	mov	x0, x20
   36610:	cmp	x1, #0xff
   36614:	b.eq	365b4 <__asan_backtrace_create_state@@Base+0x892c>  // b.none
   36618:	mov	x0, x1
   3661c:	b	365ec <__asan_backtrace_create_state@@Base+0x8964>
   36620:	adrp	x19, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   36624:	add	x19, x19, #0xef8
   36628:	mov	x0, x19
   3662c:	bl	64b0 <__asan_internal_strlen@plt>
   36630:	cbz	x0, 366b0 <__asan_backtrace_create_state@@Base+0x8a28>
   36634:	add	x24, x19, x0
   36638:	mov	x26, #0x1                   	// #1
   3663c:	ldr	x1, [x20, #256]
   36640:	b	36698 <__asan_backtrace_create_state@@Base+0x8a10>
   36644:	ldp	x3, x2, [x20, #272]
   36648:	strb	wzr, [x20, #255]
   3664c:	add	x19, x19, #0x1
   36650:	blr	x3
   36654:	strb	w23, [x20]
   36658:	ldr	x0, [x20, #320]
   3665c:	str	x26, [x20, #256]
   36660:	strb	w23, [x20, #264]
   36664:	cmp	x19, x24
   36668:	add	x0, x0, #0x1
   3666c:	str	x0, [x20, #320]
   36670:	mov	x0, #0x1                   	// #1
   36674:	b.eq	366b0 <__asan_backtrace_create_state@@Base+0x8a28>  // b.none
   36678:	ldrb	w23, [x19]
   3667c:	add	x1, x0, #0x1
   36680:	str	x1, [x20, #256]
   36684:	strb	w23, [x20, x0]
   36688:	add	x19, x19, #0x1
   3668c:	strb	w23, [x20, #264]
   36690:	cmp	x24, x19
   36694:	b.eq	366b0 <__asan_backtrace_create_state@@Base+0x8a28>  // b.none
   36698:	ldrb	w23, [x19]
   3669c:	mov	x0, x20
   366a0:	cmp	x1, #0xff
   366a4:	b.eq	36644 <__asan_backtrace_create_state@@Base+0x89bc>  // b.none
   366a8:	mov	x0, x1
   366ac:	b	3667c <__asan_backtrace_create_state@@Base+0x89f4>
   366b0:	ldr	w2, [x22, #16]
   366b4:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   366b8:	add	x1, x1, #0x378
   366bc:	add	x19, sp, #0x50
   366c0:	add	w2, w2, #0x1
   366c4:	mov	x0, x19
   366c8:	bl	65f0 <sprintf@plt>
   366cc:	mov	x0, x19
   366d0:	bl	64b0 <__asan_internal_strlen@plt>
   366d4:	cbz	x0, 36754 <__asan_backtrace_create_state@@Base+0x8acc>
   366d8:	add	x24, x19, x0
   366dc:	mov	x26, #0x1                   	// #1
   366e0:	ldr	x1, [x20, #256]
   366e4:	b	3673c <__asan_backtrace_create_state@@Base+0x8ab4>
   366e8:	ldp	x3, x2, [x20, #272]
   366ec:	strb	wzr, [x20, #255]
   366f0:	add	x19, x19, #0x1
   366f4:	blr	x3
   366f8:	strb	w23, [x20]
   366fc:	ldr	x0, [x20, #320]
   36700:	str	x26, [x20, #256]
   36704:	strb	w23, [x20, #264]
   36708:	cmp	x24, x19
   3670c:	add	x0, x0, #0x1
   36710:	str	x0, [x20, #320]
   36714:	mov	x0, #0x1                   	// #1
   36718:	b.eq	36754 <__asan_backtrace_create_state@@Base+0x8acc>  // b.none
   3671c:	ldrb	w23, [x19]
   36720:	add	x1, x0, #0x1
   36724:	str	x1, [x20, #256]
   36728:	strb	w23, [x20, x0]
   3672c:	add	x19, x19, #0x1
   36730:	strb	w23, [x20, #264]
   36734:	cmp	x24, x19
   36738:	b.eq	36754 <__asan_backtrace_create_state@@Base+0x8acc>  // b.none
   3673c:	ldrb	w23, [x19]
   36740:	mov	x0, x20
   36744:	cmp	x1, #0xff
   36748:	b.eq	366e8 <__asan_backtrace_create_state@@Base+0x8a60>  // b.none
   3674c:	mov	x0, x1
   36750:	b	36720 <__asan_backtrace_create_state@@Base+0x8a98>
   36754:	adrp	x19, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   36758:	add	x19, x19, #0xf08
   3675c:	mov	x0, x19
   36760:	bl	64b0 <__asan_internal_strlen@plt>
   36764:	cbz	x0, 367e4 <__asan_backtrace_create_state@@Base+0x8b5c>
   36768:	add	x24, x19, x0
   3676c:	mov	x26, #0x1                   	// #1
   36770:	ldr	x1, [x20, #256]
   36774:	b	367cc <__asan_backtrace_create_state@@Base+0x8b44>
   36778:	ldp	x3, x2, [x20, #272]
   3677c:	strb	wzr, [x20, #255]
   36780:	add	x19, x19, #0x1
   36784:	blr	x3
   36788:	strb	w23, [x20]
   3678c:	ldr	x0, [x20, #320]
   36790:	str	x26, [x20, #256]
   36794:	strb	w23, [x20, #264]
   36798:	cmp	x19, x24
   3679c:	add	x0, x0, #0x1
   367a0:	str	x0, [x20, #320]
   367a4:	mov	x0, #0x1                   	// #1
   367a8:	b.eq	367e4 <__asan_backtrace_create_state@@Base+0x8b5c>  // b.none
   367ac:	ldrb	w23, [x19]
   367b0:	add	x1, x0, #0x1
   367b4:	str	x1, [x20, #256]
   367b8:	strb	w23, [x20, x0]
   367bc:	add	x19, x19, #0x1
   367c0:	strb	w23, [x20, #264]
   367c4:	cmp	x24, x19
   367c8:	b.eq	367e4 <__asan_backtrace_create_state@@Base+0x8b5c>  // b.none
   367cc:	ldrb	w23, [x19]
   367d0:	mov	x0, x20
   367d4:	cmp	x1, #0xff
   367d8:	b.eq	36778 <__asan_backtrace_create_state@@Base+0x8af0>  // b.none
   367dc:	mov	x0, x1
   367e0:	b	367b0 <__asan_backtrace_create_state@@Base+0x8b28>
   367e4:	ldr	x22, [x22, #8]
   367e8:	ldr	w0, [x22]
   367ec:	b	3647c <__asan_backtrace_create_state@@Base+0x87f4>
   367f0:	ret
   367f4:	nop
   367f8:	stp	x29, x30, [sp, #-96]!
   367fc:	mov	x29, sp
   36800:	stp	x19, x20, [sp, #16]
   36804:	mov	x19, x0
   36808:	stp	x21, x22, [sp, #32]
   3680c:	mov	w22, w1
   36810:	mov	x21, x2
   36814:	cbz	x3, 36990 <__asan_backtrace_create_state@@Base+0x8d08>
   36818:	mov	x0, x3
   3681c:	stp	x23, x24, [sp, #48]
   36820:	mov	x23, x3
   36824:	nop
   36828:	ldr	w4, [x0, #16]
   3682c:	cbz	w4, 368c0 <__asan_backtrace_create_state@@Base+0x8c38>
   36830:	ldr	x0, [x0]
   36834:	cbnz	x0, 36828 <__asan_backtrace_create_state@@Base+0x8ba0>
   36838:	mov	x2, x23
   3683c:	mov	x0, x19
   36840:	mov	w1, w22
   36844:	mov	w3, #0x0                   	// #0
   36848:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   3684c:	ldr	x0, [x19, #256]
   36850:	ldp	x23, x24, [sp, #48]
   36854:	cmp	x0, #0xff
   36858:	b.ne	3699c <__asan_backtrace_create_state@@Base+0x8d14>  // b.any
   3685c:	ldp	x3, x2, [x19, #272]
   36860:	strb	wzr, [x19, #255]
   36864:	mov	x1, x0
   36868:	mov	x0, x19
   3686c:	blr	x3
   36870:	mov	w1, #0x5b20                	// #23328
   36874:	mov	w0, #0x5b                  	// #91
   36878:	strh	w1, [x19]
   3687c:	strb	w0, [x19, #264]
   36880:	mov	x0, #0x2                   	// #2
   36884:	ldr	x1, [x19, #320]
   36888:	ldr	x20, [x21]
   3688c:	add	x1, x1, #0x1
   36890:	str	x0, [x19, #256]
   36894:	str	x1, [x19, #320]
   36898:	cbnz	x20, 369d4 <__asan_backtrace_create_state@@Base+0x8d4c>
   3689c:	add	x1, x0, #0x1
   368a0:	str	x1, [x19, #256]
   368a4:	mov	w1, #0x5d                  	// #93
   368a8:	strb	w1, [x19, x0]
   368ac:	strb	w1, [x19, #264]
   368b0:	ldp	x19, x20, [sp, #16]
   368b4:	ldp	x21, x22, [sp, #32]
   368b8:	ldp	x29, x30, [sp], #96
   368bc:	ret
   368c0:	ldr	x0, [x0, #8]
   368c4:	ldr	w0, [x0]
   368c8:	cmp	w0, #0x2a
   368cc:	b.ne	36a44 <__asan_backtrace_create_state@@Base+0x8dbc>  // b.any
   368d0:	mov	x2, x23
   368d4:	mov	w1, w22
   368d8:	mov	x0, x19
   368dc:	mov	w3, #0x0                   	// #0
   368e0:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   368e4:	ldr	x1, [x19, #256]
   368e8:	ldp	x23, x24, [sp, #48]
   368ec:	cmp	x1, #0xff
   368f0:	b.ne	369b8 <__asan_backtrace_create_state@@Base+0x8d30>  // b.any
   368f4:	ldp	x3, x2, [x19, #272]
   368f8:	strb	wzr, [x19, #255]
   368fc:	mov	x0, x19
   36900:	blr	x3
   36904:	mov	w1, #0x5b                  	// #91
   36908:	strb	w1, [x19]
   3690c:	strb	w1, [x19, #264]
   36910:	mov	x0, #0x1                   	// #1
   36914:	ldr	x1, [x19, #320]
   36918:	ldr	x20, [x21]
   3691c:	add	x1, x1, x0
   36920:	str	x0, [x19, #256]
   36924:	str	x1, [x19, #320]
   36928:	cbz	x20, 3689c <__asan_backtrace_create_state@@Base+0x8c14>
   3692c:	ldr	w1, [x20, #4]
   36930:	cmp	w1, #0x1
   36934:	b.le	369e0 <__asan_backtrace_create_state@@Base+0x8d58>
   36938:	mov	w1, #0x1                   	// #1
   3693c:	str	w1, [x19, #304]
   36940:	cmp	x0, #0xff
   36944:	b.ne	3689c <__asan_backtrace_create_state@@Base+0x8c14>  // b.any
   36948:	ldp	x3, x2, [x19, #272]
   3694c:	strb	wzr, [x19, #255]
   36950:	mov	x1, x0
   36954:	mov	x0, x19
   36958:	blr	x3
   3695c:	ldr	x2, [x19, #320]
   36960:	mov	x0, #0x0                   	// #0
   36964:	mov	x1, #0x1                   	// #1
   36968:	str	x1, [x19, #256]
   3696c:	add	x2, x2, x1
   36970:	str	x2, [x19, #320]
   36974:	mov	w1, #0x5d                  	// #93
   36978:	strb	w1, [x19, x0]
   3697c:	strb	w1, [x19, #264]
   36980:	ldp	x19, x20, [sp, #16]
   36984:	ldp	x21, x22, [sp, #32]
   36988:	ldp	x29, x30, [sp], #96
   3698c:	ret
   36990:	ldr	x0, [x0, #256]
   36994:	cmp	x0, #0xff
   36998:	b.eq	3685c <__asan_backtrace_create_state@@Base+0x8bd4>  // b.none
   3699c:	add	x1, x0, #0x1
   369a0:	str	x1, [x19, #256]
   369a4:	mov	w2, #0x20                  	// #32
   369a8:	strb	w2, [x19, x0]
   369ac:	strb	w2, [x19, #264]
   369b0:	cmp	x1, #0xff
   369b4:	b.eq	368f4 <__asan_backtrace_create_state@@Base+0x8c6c>  // b.none
   369b8:	add	x0, x1, #0x1
   369bc:	str	x0, [x19, #256]
   369c0:	mov	w2, #0x5b                  	// #91
   369c4:	strb	w2, [x19, x1]
   369c8:	strb	w2, [x19, #264]
   369cc:	ldr	x20, [x21]
   369d0:	cbz	x20, 36940 <__asan_backtrace_create_state@@Base+0x8cb8>
   369d4:	ldr	w1, [x20, #4]
   369d8:	cmp	w1, #0x1
   369dc:	b.gt	36938 <__asan_backtrace_create_state@@Base+0x8cb0>
   369e0:	ldr	w2, [x19, #308]
   369e4:	cmp	w2, #0x400
   369e8:	b.gt	36938 <__asan_backtrace_create_state@@Base+0x8cb0>
   369ec:	ldr	x3, [x19, #328]
   369f0:	add	w1, w1, #0x1
   369f4:	str	w1, [x20, #4]
   369f8:	add	w2, w2, #0x1
   369fc:	add	x0, sp, #0x50
   36a00:	str	w2, [x19, #308]
   36a04:	str	x0, [x19, #328]
   36a08:	mov	w1, w22
   36a0c:	mov	x2, x20
   36a10:	mov	x0, x19
   36a14:	stp	x20, x3, [sp, #80]
   36a18:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   36a1c:	ldr	w2, [x20, #4]
   36a20:	ldr	x0, [sp, #88]
   36a24:	str	x0, [x19, #328]
   36a28:	ldr	w1, [x19, #308]
   36a2c:	sub	w2, w2, #0x1
   36a30:	ldr	x0, [x19, #256]
   36a34:	str	w2, [x20, #4]
   36a38:	sub	w1, w1, #0x1
   36a3c:	str	w1, [x19, #308]
   36a40:	b	36940 <__asan_backtrace_create_state@@Base+0x8cb8>
   36a44:	adrp	x20, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   36a48:	add	x20, x20, #0x198
   36a4c:	mov	x0, x20
   36a50:	bl	64b0 <__asan_internal_strlen@plt>
   36a54:	cbz	x0, 36adc <__asan_backtrace_create_state@@Base+0x8e54>
   36a58:	stp	x25, x26, [sp, #64]
   36a5c:	add	x25, x20, x0
   36a60:	mov	x26, #0x1                   	// #1
   36a64:	ldr	x1, [x19, #256]
   36a68:	b	36ac0 <__asan_backtrace_create_state@@Base+0x8e38>
   36a6c:	ldp	x3, x2, [x19, #272]
   36a70:	strb	wzr, [x19, #255]
   36a74:	add	x20, x20, #0x1
   36a78:	blr	x3
   36a7c:	strb	w24, [x19]
   36a80:	ldr	x0, [x19, #320]
   36a84:	str	x26, [x19, #256]
   36a88:	strb	w24, [x19, #264]
   36a8c:	cmp	x20, x25
   36a90:	add	x0, x0, #0x1
   36a94:	str	x0, [x19, #320]
   36a98:	mov	x0, #0x1                   	// #1
   36a9c:	b.eq	36ad8 <__asan_backtrace_create_state@@Base+0x8e50>  // b.none
   36aa0:	ldrb	w24, [x20]
   36aa4:	add	x1, x0, #0x1
   36aa8:	str	x1, [x19, #256]
   36aac:	strb	w24, [x19, x0]
   36ab0:	add	x20, x20, #0x1
   36ab4:	strb	w24, [x19, #264]
   36ab8:	cmp	x20, x25
   36abc:	b.eq	36ad8 <__asan_backtrace_create_state@@Base+0x8e50>  // b.none
   36ac0:	ldrb	w24, [x20]
   36ac4:	mov	x0, x19
   36ac8:	cmp	x1, #0xff
   36acc:	b.eq	36a6c <__asan_backtrace_create_state@@Base+0x8de4>  // b.none
   36ad0:	mov	x0, x1
   36ad4:	b	36aa4 <__asan_backtrace_create_state@@Base+0x8e1c>
   36ad8:	ldp	x25, x26, [sp, #64]
   36adc:	mov	w1, w22
   36ae0:	mov	x2, x23
   36ae4:	mov	x0, x19
   36ae8:	mov	w3, #0x0                   	// #0
   36aec:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   36af0:	ldr	x1, [x19, #256]
   36af4:	cmp	x1, #0xff
   36af8:	b.eq	36b18 <__asan_backtrace_create_state@@Base+0x8e90>  // b.none
   36afc:	add	x0, x1, #0x1
   36b00:	str	x0, [x19, #256]
   36b04:	mov	w2, #0x29                  	// #41
   36b08:	strb	w2, [x19, x1]
   36b0c:	strb	w2, [x19, #264]
   36b10:	ldp	x23, x24, [sp, #48]
   36b14:	b	36994 <__asan_backtrace_create_state@@Base+0x8d0c>
   36b18:	ldp	x3, x2, [x19, #272]
   36b1c:	strb	wzr, [x19, #255]
   36b20:	mov	x0, x19
   36b24:	blr	x3
   36b28:	ldr	x1, [x19, #320]
   36b2c:	mov	w2, #0x29                  	// #41
   36b30:	strb	w2, [x19]
   36b34:	mov	x0, #0x1                   	// #1
   36b38:	add	x1, x1, x0
   36b3c:	ldp	x23, x24, [sp, #48]
   36b40:	str	x1, [x19, #320]
   36b44:	b	3699c <__asan_backtrace_create_state@@Base+0x8d14>
   36b48:	stp	x29, x30, [sp, #-80]!
   36b4c:	mov	x29, sp
   36b50:	stp	x19, x20, [sp, #16]
   36b54:	mov	x19, x0
   36b58:	mov	x20, x3
   36b5c:	stp	x21, x22, [sp, #32]
   36b60:	mov	w22, w1
   36b64:	mov	x21, x2
   36b68:	stp	x23, x24, [sp, #48]
   36b6c:	cbz	x3, 36bb0 <__asan_backtrace_create_state@@Base+0x8f28>
   36b70:	mov	x2, #0xe000000             	// #234881024
   36b74:	mov	x4, #0x1                   	// #1
   36b78:	movk	x2, #0x862, lsl #32
   36b7c:	ldr	w0, [x3, #16]
   36b80:	cbnz	w0, 36bb0 <__asan_backtrace_create_state@@Base+0x8f28>
   36b84:	ldr	x0, [x3, #8]
   36b88:	ldr	w0, [x0]
   36b8c:	cmp	w0, #0x2b
   36b90:	b.hi	36ba8 <__asan_backtrace_create_state@@Base+0x8f20>  // b.pmore
   36b94:	lsl	x0, x4, x0
   36b98:	tst	x0, x2
   36b9c:	b.ne	36c88 <__asan_backtrace_create_state@@Base+0x9000>  // b.any
   36ba0:	tst	x0, #0x1c00000000
   36ba4:	b.ne	36d54 <__asan_backtrace_create_state@@Base+0x90cc>  // b.any
   36ba8:	ldr	x3, [x3]
   36bac:	cbnz	x3, 36b7c <__asan_backtrace_create_state@@Base+0x8ef4>
   36bb0:	ldr	x23, [x19, #296]
   36bb4:	str	xzr, [x19, #296]
   36bb8:	mov	w1, w22
   36bbc:	mov	x2, x20
   36bc0:	mov	x0, x19
   36bc4:	mov	w3, #0x0                   	// #0
   36bc8:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   36bcc:	ldr	x1, [x19, #256]
   36bd0:	cmp	x1, #0xff
   36bd4:	b.eq	36d18 <__asan_backtrace_create_state@@Base+0x9090>  // b.none
   36bd8:	add	x0, x1, #0x1
   36bdc:	str	x0, [x19, #256]
   36be0:	mov	w2, #0x28                  	// #40
   36be4:	strb	w2, [x19, x1]
   36be8:	strb	w2, [x19, #264]
   36bec:	ldr	x21, [x21]
   36bf0:	cbz	x21, 36c14 <__asan_backtrace_create_state@@Base+0x8f8c>
   36bf4:	ldr	w1, [x21, #4]
   36bf8:	cmp	w1, #0x1
   36bfc:	b.gt	36c0c <__asan_backtrace_create_state@@Base+0x8f84>
   36c00:	ldr	w2, [x19, #308]
   36c04:	cmp	w2, #0x400
   36c08:	b.le	36d98 <__asan_backtrace_create_state@@Base+0x9110>
   36c0c:	mov	w1, #0x1                   	// #1
   36c10:	str	w1, [x19, #304]
   36c14:	cmp	x0, #0xff
   36c18:	b.eq	36c5c <__asan_backtrace_create_state@@Base+0x8fd4>  // b.none
   36c1c:	add	x1, x0, #0x1
   36c20:	str	x1, [x19, #256]
   36c24:	mov	w3, #0x29                  	// #41
   36c28:	strb	w3, [x19, x0]
   36c2c:	mov	x2, x20
   36c30:	strb	w3, [x19, #264]
   36c34:	mov	w1, w22
   36c38:	mov	x0, x19
   36c3c:	mov	w3, #0x1                   	// #1
   36c40:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   36c44:	ldp	x21, x22, [sp, #32]
   36c48:	str	x23, [x19, #296]
   36c4c:	ldp	x19, x20, [sp, #16]
   36c50:	ldp	x23, x24, [sp, #48]
   36c54:	ldp	x29, x30, [sp], #80
   36c58:	ret
   36c5c:	ldp	x3, x2, [x19, #272]
   36c60:	strb	wzr, [x19, #255]
   36c64:	mov	x1, x0
   36c68:	mov	x0, x19
   36c6c:	blr	x3
   36c70:	ldr	x2, [x19, #320]
   36c74:	mov	x1, #0x1                   	// #1
   36c78:	mov	x0, #0x0                   	// #0
   36c7c:	add	x2, x2, x1
   36c80:	str	x2, [x19, #320]
   36c84:	b	36c20 <__asan_backtrace_create_state@@Base+0x8f98>
   36c88:	ldrb	w0, [x19, #264]
   36c8c:	ldr	x1, [x19, #256]
   36c90:	cmp	w0, #0x20
   36c94:	b.eq	36cb8 <__asan_backtrace_create_state@@Base+0x9030>  // b.none
   36c98:	cmp	x1, #0xff
   36c9c:	b.eq	36df0 <__asan_backtrace_create_state@@Base+0x9168>  // b.none
   36ca0:	add	x2, x1, #0x1
   36ca4:	str	x2, [x19, #256]
   36ca8:	mov	w0, #0x20                  	// #32
   36cac:	strb	w0, [x19, x1]
   36cb0:	mov	x1, x2
   36cb4:	strb	w0, [x19, #264]
   36cb8:	cmp	x1, #0xff
   36cbc:	b.eq	36d70 <__asan_backtrace_create_state@@Base+0x90e8>  // b.none
   36cc0:	add	x0, x1, #0x1
   36cc4:	str	x0, [x19, #256]
   36cc8:	mov	w24, #0x28                  	// #40
   36ccc:	strb	w24, [x19, x1]
   36cd0:	mov	x0, x19
   36cd4:	strb	w24, [x19, #264]
   36cd8:	mov	x2, x20
   36cdc:	ldr	x23, [x19, #296]
   36ce0:	str	xzr, [x19, #296]
   36ce4:	mov	w1, w22
   36ce8:	mov	w3, #0x0                   	// #0
   36cec:	bl	36248 <__asan_backtrace_create_state@@Base+0x85c0>
   36cf0:	ldr	x0, [x19, #256]
   36cf4:	cmp	x0, #0xff
   36cf8:	b.eq	36e1c <__asan_backtrace_create_state@@Base+0x9194>  // b.none
   36cfc:	add	x1, x0, #0x1
   36d00:	str	x1, [x19, #256]
   36d04:	mov	w2, #0x29                  	// #41
   36d08:	strb	w2, [x19, x0]
   36d0c:	strb	w2, [x19, #264]
   36d10:	cmp	x1, #0xff
   36d14:	b.ne	36bd8 <__asan_backtrace_create_state@@Base+0x8f50>  // b.any
   36d18:	ldp	x3, x2, [x19, #272]
   36d1c:	strb	wzr, [x19, #255]
   36d20:	mov	x0, x19
   36d24:	blr	x3
   36d28:	mov	w1, #0x28                  	// #40
   36d2c:	strb	w1, [x19]
   36d30:	strb	w1, [x19, #264]
   36d34:	mov	x0, #0x1                   	// #1
   36d38:	ldr	x1, [x19, #320]
   36d3c:	ldr	x21, [x21]
   36d40:	add	x1, x1, x0
   36d44:	str	x0, [x19, #256]
   36d48:	str	x1, [x19, #320]
   36d4c:	cbnz	x21, 36bf4 <__asan_backtrace_create_state@@Base+0x8f6c>
   36d50:	b	36c1c <__asan_backtrace_create_state@@Base+0x8f94>
   36d54:	ldrb	w0, [x19, #264]
   36d58:	ldr	x1, [x19, #256]
   36d5c:	and	w2, w0, #0xfffffffd
   36d60:	cmp	w2, #0x28
   36d64:	b.ne	36c90 <__asan_backtrace_create_state@@Base+0x9008>  // b.any
   36d68:	cmp	x1, #0xff
   36d6c:	b.ne	36cc0 <__asan_backtrace_create_state@@Base+0x9038>  // b.any
   36d70:	ldp	x3, x2, [x19, #272]
   36d74:	strb	wzr, [x19, #255]
   36d78:	mov	x0, x19
   36d7c:	blr	x3
   36d80:	ldr	x2, [x19, #320]
   36d84:	mov	x0, #0x1                   	// #1
   36d88:	mov	x1, #0x0                   	// #0
   36d8c:	add	x2, x2, x0
   36d90:	str	x2, [x19, #320]
   36d94:	b	36cc4 <__asan_backtrace_create_state@@Base+0x903c>
   36d98:	ldr	x3, [x19, #328]
   36d9c:	add	w1, w1, #0x1
   36da0:	str	w1, [x21, #4]
   36da4:	add	w2, w2, #0x1
   36da8:	add	x0, sp, #0x40
   36dac:	str	w2, [x19, #308]
   36db0:	str	x0, [x19, #328]
   36db4:	mov	w1, w22
   36db8:	mov	x2, x21
   36dbc:	mov	x0, x19
   36dc0:	stp	x21, x3, [sp, #64]
   36dc4:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   36dc8:	ldr	w2, [x21, #4]
   36dcc:	ldr	x0, [sp, #72]
   36dd0:	str	x0, [x19, #328]
   36dd4:	ldr	w1, [x19, #308]
   36dd8:	sub	w2, w2, #0x1
   36ddc:	ldr	x0, [x19, #256]
   36de0:	str	w2, [x21, #4]
   36de4:	sub	w1, w1, #0x1
   36de8:	str	w1, [x19, #308]
   36dec:	b	36c14 <__asan_backtrace_create_state@@Base+0x8f8c>
   36df0:	ldp	x3, x2, [x19, #272]
   36df4:	strb	wzr, [x19, #255]
   36df8:	mov	x0, x19
   36dfc:	blr	x3
   36e00:	ldr	x0, [x19, #320]
   36e04:	mov	w2, #0x20                  	// #32
   36e08:	mov	x1, #0x1                   	// #1
   36e0c:	strb	w2, [x19]
   36e10:	add	x0, x0, x1
   36e14:	str	x0, [x19, #320]
   36e18:	b	36cc0 <__asan_backtrace_create_state@@Base+0x9038>
   36e1c:	ldp	x3, x2, [x19, #272]
   36e20:	strb	wzr, [x19, #255]
   36e24:	mov	x1, x0
   36e28:	mov	x0, x19
   36e2c:	blr	x3
   36e30:	strb	w24, [x19, #264]
   36e34:	mov	w0, #0x2829                	// #10281
   36e38:	strh	w0, [x19]
   36e3c:	ldr	x1, [x19, #320]
   36e40:	mov	x2, #0x2                   	// #2
   36e44:	ldr	x21, [x21]
   36e48:	add	x1, x1, #0x1
   36e4c:	str	x2, [x19, #256]
   36e50:	mov	x0, x2
   36e54:	str	x1, [x19, #320]
   36e58:	cbnz	x21, 36bf4 <__asan_backtrace_create_state@@Base+0x8f6c>
   36e5c:	b	36c1c <__asan_backtrace_create_state@@Base+0x8f94>

0000000000036e60 <__asan_cplus_demangle_fill_name@@Base>:
   36e60:	cmp	x1, #0x0
   36e64:	mov	x3, x0
   36e68:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   36e6c:	ccmp	x0, #0x0, #0x4, gt
   36e70:	mov	w0, #0x0                   	// #0
   36e74:	b.ne	36e7c <__asan_cplus_demangle_fill_name@@Base+0x1c>  // b.any
   36e78:	ret
   36e7c:	mov	w0, #0x1                   	// #1
   36e80:	stp	xzr, x1, [x3]
   36e84:	str	w2, [x3, #16]
   36e88:	ret
   36e8c:	nop
   36e90:	stp	x29, x30, [sp, #-48]!
   36e94:	mov	w6, #0x0                   	// #0
   36e98:	mov	x29, sp
   36e9c:	ldr	x1, [x0, #24]
   36ea0:	stp	x19, x20, [sp, #16]
   36ea4:	stp	x21, x22, [sp, #32]
   36ea8:	mov	x22, x0
   36eac:	ldrb	w19, [x1]
   36eb0:	cmp	w19, #0x6e
   36eb4:	b.ne	36ecc <__asan_cplus_demangle_fill_name@@Base+0x6c>  // b.any
   36eb8:	add	x0, x1, #0x1
   36ebc:	str	x0, [x22, #24]
   36ec0:	mov	w6, #0x1                   	// #1
   36ec4:	ldrb	w19, [x1, #1]
   36ec8:	mov	x1, x0
   36ecc:	sub	w2, w19, #0x30
   36ed0:	mov	w4, #0xcccd                	// #52429
   36ed4:	and	w2, w2, #0xff
   36ed8:	add	x21, x1, #0x1
   36edc:	cmp	w2, #0x9
   36ee0:	mov	w1, w19
   36ee4:	mov	w5, #0x7fffffff            	// #2147483647
   36ee8:	mov	w19, #0x0                   	// #0
   36eec:	movk	w4, #0xcccc, lsl #16
   36ef0:	b.ls	36f0c <__asan_cplus_demangle_fill_name@@Base+0xac>  // b.plast
   36ef4:	b	36ff0 <__asan_cplus_demangle_fill_name@@Base+0x190>
   36ef8:	umull	x2, w2, w4
   36efc:	add	x21, x21, #0x1
   36f00:	lsr	x2, x2, #35
   36f04:	cmp	w2, w19
   36f08:	b.lt	36ff0 <__asan_cplus_demangle_fill_name@@Base+0x190>  // b.tstop
   36f0c:	str	x21, [x22, #24]
   36f10:	add	w19, w19, w19, lsl #2
   36f14:	ldrb	w0, [x21]
   36f18:	add	w19, w1, w19, lsl #1
   36f1c:	sub	w19, w19, #0x30
   36f20:	sub	w3, w0, #0x30
   36f24:	mov	w1, w0
   36f28:	sub	w2, w5, w3
   36f2c:	and	w3, w3, #0xff
   36f30:	cmp	w3, #0x9
   36f34:	b.ls	36ef8 <__asan_cplus_demangle_fill_name@@Base+0x98>  // b.plast
   36f38:	cmp	w19, #0x0
   36f3c:	ccmp	w6, #0x0, #0x0, gt
   36f40:	b.ne	36ff0 <__asan_cplus_demangle_fill_name@@Base+0x190>  // b.any
   36f44:	ldr	x0, [x22, #8]
   36f48:	sxtw	x1, w19
   36f4c:	sub	x0, x0, x21
   36f50:	cmp	x0, w19, sxtw
   36f54:	b.lt	37080 <__asan_cplus_demangle_fill_name@@Base+0x220>  // b.tstop
   36f58:	ldr	w2, [x22, #16]
   36f5c:	add	x0, x21, x1
   36f60:	str	x0, [x22, #24]
   36f64:	tbz	w2, #2, 36f80 <__asan_cplus_demangle_fill_name@@Base+0x120>
   36f68:	ldrb	w1, [x21, x1]
   36f6c:	cmp	w1, #0x24
   36f70:	b.ne	36f80 <__asan_cplus_demangle_fill_name@@Base+0x120>  // b.any
   36f74:	add	x0, x0, #0x1
   36f78:	str	x0, [x22, #24]
   36f7c:	nop
   36f80:	cmp	w19, #0x9
   36f84:	b.le	36fa0 <__asan_cplus_demangle_fill_name@@Base+0x140>
   36f88:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   36f8c:	mov	x0, x21
   36f90:	add	x1, x1, #0x2d8
   36f94:	mov	x2, #0x8                   	// #8
   36f98:	bl	68f0 <__asan_internal_memcmp@plt>
   36f9c:	cbz	w0, 37008 <__asan_cplus_demangle_fill_name@@Base+0x1a8>
   36fa0:	ldp	w20, w0, [x22, #40]
   36fa4:	cmp	w20, w0
   36fa8:	b.ge	3708c <__asan_cplus_demangle_fill_name@@Base+0x22c>  // b.tcont
   36fac:	ldr	x1, [x22, #32]
   36fb0:	mov	w2, #0x18                  	// #24
   36fb4:	add	w0, w20, #0x1
   36fb8:	smaddl	x20, w20, w2, x1
   36fbc:	str	wzr, [x20, #4]
   36fc0:	str	w0, [x22, #40]
   36fc4:	mov	w2, w19
   36fc8:	mov	x1, x21
   36fcc:	mov	x0, x20
   36fd0:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   36fd4:	cbz	w0, 37080 <__asan_cplus_demangle_fill_name@@Base+0x220>
   36fd8:	str	x20, [x22, #64]
   36fdc:	mov	x0, x20
   36fe0:	ldp	x19, x20, [sp, #16]
   36fe4:	ldp	x21, x22, [sp, #32]
   36fe8:	ldp	x29, x30, [sp], #48
   36fec:	ret
   36ff0:	mov	x20, #0x0                   	// #0
   36ff4:	mov	x0, x20
   36ff8:	ldp	x19, x20, [sp, #16]
   36ffc:	ldp	x21, x22, [sp, #32]
   37000:	ldp	x29, x30, [sp], #48
   37004:	ret
   37008:	ldrb	w1, [x21, #8]
   3700c:	mov	w3, #0x5f                  	// #95
   37010:	mov	w2, #0x24                  	// #36
   37014:	cmp	w1, #0x2e
   37018:	ccmp	w1, w3, #0x4, ne  // ne = any
   3701c:	ldp	w20, w0, [x22, #40]
   37020:	ccmp	w1, w2, #0x4, ne  // ne = any
   37024:	b.ne	36fa4 <__asan_cplus_demangle_fill_name@@Base+0x144>  // b.any
   37028:	ldrb	w1, [x21, #9]
   3702c:	cmp	w1, #0x4e
   37030:	b.ne	36fa4 <__asan_cplus_demangle_fill_name@@Base+0x144>  // b.any
   37034:	ldr	w1, [x22, #72]
   37038:	cmp	w20, w0
   3703c:	add	w0, w1, #0x16
   37040:	sub	w19, w0, w19
   37044:	str	w19, [x22, #72]
   37048:	b.ge	37094 <__asan_cplus_demangle_fill_name@@Base+0x234>  // b.tcont
   3704c:	ldr	x1, [x22, #32]
   37050:	mov	w2, #0x18                  	// #24
   37054:	add	w0, w20, #0x1
   37058:	smaddl	x20, w20, w2, x1
   3705c:	str	wzr, [x20, #4]
   37060:	str	w0, [x22, #40]
   37064:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   37068:	mov	x0, x20
   3706c:	add	x1, x1, #0x2e8
   37070:	mov	w2, #0x15                  	// #21
   37074:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   37078:	cbnz	w0, 36fd8 <__asan_cplus_demangle_fill_name@@Base+0x178>
   3707c:	nop
   37080:	mov	x20, #0x0                   	// #0
   37084:	str	x20, [x22, #64]
   37088:	b	36fdc <__asan_cplus_demangle_fill_name@@Base+0x17c>
   3708c:	mov	x20, #0x0                   	// #0
   37090:	b	36fc4 <__asan_cplus_demangle_fill_name@@Base+0x164>
   37094:	mov	x20, #0x0                   	// #0
   37098:	b	37064 <__asan_cplus_demangle_fill_name@@Base+0x204>
   3709c:	nop
   370a0:	stp	x29, x30, [sp, #-48]!
   370a4:	mov	x29, sp
   370a8:	stp	x19, x20, [sp, #16]
   370ac:	mov	x19, x0
   370b0:	ldr	x0, [x0, #24]
   370b4:	ldrb	w2, [x0]
   370b8:	cmp	w2, #0x53
   370bc:	b.ne	37140 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.any
   370c0:	add	x3, x0, #0x1
   370c4:	str	x3, [x19, #24]
   370c8:	ldrb	w2, [x0, #1]
   370cc:	cbnz	w2, 37154 <__asan_cplus_demangle_fill_name@@Base+0x2f4>
   370d0:	ldr	w0, [x19, #16]
   370d4:	and	w1, w1, #0x1
   370d8:	ands	w4, w0, #0x8
   370dc:	ubfx	x4, x0, #3, #1
   370e0:	csel	w1, w1, wzr, eq  // eq = none
   370e4:	cbz	w1, 370fc <__asan_cplus_demangle_fill_name@@Base+0x29c>
   370e8:	ldrb	w0, [x3]
   370ec:	sub	w0, w0, #0x43
   370f0:	and	w0, w0, #0xff
   370f4:	cmp	w0, #0x1
   370f8:	csinc	w4, w4, wzr, hi  // hi = pmore
   370fc:	cmp	w2, #0x74
   37100:	b.eq	37350 <__asan_cplus_demangle_fill_name@@Base+0x4f0>  // b.none
   37104:	cmp	w2, #0x61
   37108:	b.eq	37360 <__asan_cplus_demangle_fill_name@@Base+0x500>  // b.none
   3710c:	cmp	w2, #0x62
   37110:	b.eq	37370 <__asan_cplus_demangle_fill_name@@Base+0x510>  // b.none
   37114:	cmp	w2, #0x73
   37118:	b.eq	37388 <__asan_cplus_demangle_fill_name@@Base+0x528>  // b.none
   3711c:	cmp	w2, #0x69
   37120:	b.eq	37398 <__asan_cplus_demangle_fill_name@@Base+0x538>  // b.none
   37124:	cmp	w2, #0x6f
   37128:	b.eq	37234 <__asan_cplus_demangle_fill_name@@Base+0x3d4>  // b.none
   3712c:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   37130:	add	x1, x1, #0xfd0
   37134:	add	x1, x1, #0x150
   37138:	cmp	w2, #0x64
   3713c:	b.eq	37240 <__asan_cplus_demangle_fill_name@@Base+0x3e0>  // b.none
   37140:	mov	x20, #0x0                   	// #0
   37144:	mov	x0, x20
   37148:	ldp	x19, x20, [sp, #16]
   3714c:	ldp	x29, x30, [sp], #48
   37150:	ret
   37154:	add	x3, x0, #0x2
   37158:	str	x3, [x19, #24]
   3715c:	ldrb	w2, [x0, #1]
   37160:	sub	w5, w2, #0x30
   37164:	cmp	w2, #0x5f
   37168:	and	w0, w5, #0xff
   3716c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   37170:	b.hi	371a4 <__asan_cplus_demangle_fill_name@@Base+0x344>  // b.pmore
   37174:	cmp	w2, #0x5f
   37178:	mov	w1, #0x0                   	// #0
   3717c:	b.ne	371b8 <__asan_cplus_demangle_fill_name@@Base+0x358>  // b.any
   37180:	ldr	w0, [x19, #56]
   37184:	cmp	w0, w1
   37188:	b.ls	37140 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.plast
   3718c:	ldr	x0, [x19, #48]
   37190:	ldr	x20, [x0, w1, uxtw #3]
   37194:	mov	x0, x20
   37198:	ldp	x19, x20, [sp, #16]
   3719c:	ldp	x29, x30, [sp], #48
   371a0:	ret
   371a4:	sub	w0, w2, #0x41
   371a8:	and	w0, w0, #0xff
   371ac:	cmp	w0, #0x19
   371b0:	b.hi	370d0 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.pmore
   371b4:	nop
   371b8:	mov	w3, #0x0                   	// #0
   371bc:	nop
   371c0:	add	w1, w3, w3, lsl #3
   371c4:	sub	w6, w2, #0x41
   371c8:	mov	w4, w1
   371cc:	and	w5, w5, #0xff
   371d0:	add	w1, w2, w1, lsl #2
   371d4:	and	w6, w6, #0xff
   371d8:	sub	w1, w1, #0x37
   371dc:	add	w2, w2, w4, lsl #2
   371e0:	cmp	w5, #0x9
   371e4:	b.hi	37228 <__asan_cplus_demangle_fill_name@@Base+0x3c8>  // b.pmore
   371e8:	sub	w1, w2, #0x30
   371ec:	cmp	w3, w1
   371f0:	b.hi	37140 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.pmore
   371f4:	ldr	x4, [x19, #24]
   371f8:	mov	w3, w1
   371fc:	add	x0, x4, #0x1
   37200:	ldrb	w2, [x4]
   37204:	cbz	w2, 37218 <__asan_cplus_demangle_fill_name@@Base+0x3b8>
   37208:	str	x0, [x19, #24]
   3720c:	ldrb	w2, [x4]
   37210:	cmp	w2, #0x5f
   37214:	b.eq	37220 <__asan_cplus_demangle_fill_name@@Base+0x3c0>  // b.none
   37218:	sub	w5, w2, #0x30
   3721c:	b	371c0 <__asan_cplus_demangle_fill_name@@Base+0x360>
   37220:	add	w1, w1, #0x1
   37224:	b	37180 <__asan_cplus_demangle_fill_name@@Base+0x320>
   37228:	cmp	w6, #0x19
   3722c:	b.ls	371ec <__asan_cplus_demangle_fill_name@@Base+0x38c>  // b.plast
   37230:	b	37140 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   37234:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   37238:	add	x1, x1, #0xfd0
   3723c:	add	x1, x1, #0x118
   37240:	ldr	x6, [x1, #40]
   37244:	ldp	w0, w5, [x19, #40]
   37248:	cbz	x6, 37284 <__asan_cplus_demangle_fill_name@@Base+0x424>
   3724c:	ldr	w10, [x1, #48]
   37250:	cmp	w5, w0
   37254:	b.le	373b0 <__asan_cplus_demangle_fill_name@@Base+0x550>
   37258:	mov	w9, #0x18                  	// #24
   3725c:	ldr	x8, [x19, #32]
   37260:	smull	x7, w0, w9
   37264:	add	w0, w0, #0x1
   37268:	add	x2, x8, x7
   3726c:	str	wzr, [x2, #4]
   37270:	str	w0, [x19, #40]
   37274:	str	w9, [x8, x7]
   37278:	str	x6, [x2, #8]
   3727c:	str	w10, [x2, #16]
   37280:	str	x2, [x19, #64]
   37284:	cbz	w4, 37344 <__asan_cplus_demangle_fill_name@@Base+0x4e4>
   37288:	ldr	w2, [x1, #32]
   3728c:	ldr	x6, [x1, #24]
   37290:	cmp	w5, w0
   37294:	ldr	w1, [x19, #72]
   37298:	add	w1, w1, w2
   3729c:	str	w1, [x19, #72]
   372a0:	b.le	37380 <__asan_cplus_demangle_fill_name@@Base+0x520>
   372a4:	mov	w4, #0x18                  	// #24
   372a8:	add	w5, w0, #0x1
   372ac:	ldr	x1, [x19, #32]
   372b0:	smull	x0, w0, w4
   372b4:	add	x20, x1, x0
   372b8:	str	wzr, [x20, #4]
   372bc:	str	w5, [x19, #40]
   372c0:	str	w4, [x1, x0]
   372c4:	str	x6, [x20, #8]
   372c8:	str	w2, [x20, #16]
   372cc:	ldrb	w0, [x3]
   372d0:	cmp	w0, #0x42
   372d4:	b.ne	37144 <__asan_cplus_demangle_fill_name@@Base+0x2e4>  // b.any
   372d8:	str	x21, [sp, #32]
   372dc:	ldr	x21, [x19, #64]
   372e0:	add	x3, x3, #0x1
   372e4:	str	x3, [x19, #24]
   372e8:	mov	x0, x19
   372ec:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   372f0:	mov	x3, x0
   372f4:	mov	x2, x20
   372f8:	mov	x0, x19
   372fc:	mov	w1, #0x4c                  	// #76
   37300:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37304:	ldr	x3, [x19, #24]
   37308:	mov	x20, x0
   3730c:	ldrb	w0, [x3]
   37310:	cmp	w0, #0x42
   37314:	b.eq	372e0 <__asan_cplus_demangle_fill_name@@Base+0x480>  // b.none
   37318:	str	x21, [x19, #64]
   3731c:	cbz	x20, 373a8 <__asan_cplus_demangle_fill_name@@Base+0x548>
   37320:	ldp	w0, w1, [x19, #56]
   37324:	cmp	w0, w1
   37328:	b.ge	373a8 <__asan_cplus_demangle_fill_name@@Base+0x548>  // b.tcont
   3732c:	ldr	x2, [x19, #48]
   37330:	add	w1, w0, #0x1
   37334:	ldr	x21, [sp, #32]
   37338:	str	x20, [x2, w0, sxtw #3]
   3733c:	str	w1, [x19, #56]
   37340:	b	37144 <__asan_cplus_demangle_fill_name@@Base+0x2e4>
   37344:	ldr	w2, [x1, #16]
   37348:	ldr	x6, [x1, #8]
   3734c:	b	37290 <__asan_cplus_demangle_fill_name@@Base+0x430>
   37350:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   37354:	add	x1, x1, #0xfd0
   37358:	ldp	w0, w5, [x19, #40]
   3735c:	b	37284 <__asan_cplus_demangle_fill_name@@Base+0x424>
   37360:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   37364:	add	x1, x1, #0xfd0
   37368:	add	x1, x1, #0x38
   3736c:	b	37240 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   37370:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   37374:	add	x1, x1, #0xfd0
   37378:	add	x1, x1, #0x70
   3737c:	b	37240 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   37380:	mov	x20, #0x0                   	// #0
   37384:	b	372cc <__asan_cplus_demangle_fill_name@@Base+0x46c>
   37388:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   3738c:	add	x1, x1, #0xfd0
   37390:	add	x1, x1, #0xa8
   37394:	b	37240 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   37398:	adrp	x1, 64000 <__asan_backtrace_vector_release@@Base+0x23b10>
   3739c:	add	x1, x1, #0xfd0
   373a0:	add	x1, x1, #0xe0
   373a4:	b	37240 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   373a8:	ldr	x21, [sp, #32]
   373ac:	b	37140 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   373b0:	mov	x2, #0x0                   	// #0
   373b4:	str	x2, [x19, #64]
   373b8:	b	37284 <__asan_cplus_demangle_fill_name@@Base+0x424>
   373bc:	nop

00000000000373c0 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   373c0:	cmp	w1, #0x0
   373c4:	mov	x3, x0
   373c8:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   373cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   373d0:	mov	w0, #0x0                   	// #0
   373d4:	b.eq	373ec <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   373d8:	mov	x4, #0x33                  	// #51
   373dc:	mov	w0, #0x1                   	// #1
   373e0:	str	x4, [x3]
   373e4:	str	w1, [x3, #8]
   373e8:	str	x2, [x3, #16]
   373ec:	ret

00000000000373f0 <__asan_cplus_demangle_fill_ctor@@Base>:
   373f0:	cmp	x0, #0x0
   373f4:	mov	x3, x0
   373f8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   373fc:	mov	w0, #0x0                   	// #0
   37400:	b.eq	37428 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.none
   37404:	sub	w4, w1, #0x1
   37408:	mov	w0, #0x0                   	// #0
   3740c:	cmp	w4, #0x4
   37410:	b.hi	37428 <__asan_cplus_demangle_fill_ctor@@Base+0x38>  // b.pmore
   37414:	mov	x4, #0x7                   	// #7
   37418:	mov	w0, #0x1                   	// #1
   3741c:	str	x4, [x3]
   37420:	str	w1, [x3, #8]
   37424:	str	x2, [x3, #16]
   37428:	ret
   3742c:	nop

0000000000037430 <__asan_cplus_demangle_fill_dtor@@Base>:
   37430:	cmp	x0, #0x0
   37434:	mov	x3, x0
   37438:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3743c:	mov	w0, #0x0                   	// #0
   37440:	b.eq	37468 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.none
   37444:	sub	w4, w1, #0x1
   37448:	mov	w0, #0x0                   	// #0
   3744c:	cmp	w4, #0x4
   37450:	b.hi	37468 <__asan_cplus_demangle_fill_dtor@@Base+0x38>  // b.pmore
   37454:	mov	x4, #0x8                   	// #8
   37458:	mov	w0, #0x1                   	// #1
   3745c:	str	x4, [x3]
   37460:	str	w1, [x3, #8]
   37464:	str	x2, [x3, #16]
   37468:	ret
   3746c:	nop

0000000000037470 <__asan_cplus_demangle_type@@Base>:
   37470:	stp	x29, x30, [sp, #-80]!
   37474:	mov	w2, #0x56                  	// #86
   37478:	mov	w1, #0x4b                  	// #75
   3747c:	mov	x29, sp
   37480:	ldr	x3, [x0, #24]
   37484:	stp	x19, x20, [sp, #16]
   37488:	mov	x19, x0
   3748c:	ldrb	w0, [x3]
   37490:	cmp	w0, #0x72
   37494:	ccmp	w0, w2, #0x4, ne  // ne = any
   37498:	ccmp	w0, w1, #0x4, ne  // ne = any
   3749c:	b.eq	374e8 <__asan_cplus_demangle_type@@Base+0x78>  // b.none
   374a0:	cmp	w0, #0x44
   374a4:	b.eq	3756c <__asan_cplus_demangle_type@@Base+0xfc>  // b.none
   374a8:	sub	w2, w0, #0x30
   374ac:	cmp	w2, #0x4a
   374b0:	b.hi	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.pmore
   374b4:	adrp	x1, 48000 <__asan_backtrace_vector_release@@Base+0x7b10>
   374b8:	add	x1, x1, #0xe50
   374bc:	ldrh	w1, [x1, w2, uxtw #1]
   374c0:	adr	x2, 374cc <__asan_cplus_demangle_type@@Base+0x5c>
   374c4:	add	x1, x2, w1, sxth #2
   374c8:	br	x1
   374cc:	mov	x0, #0x0                   	// #0
   374d0:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   374d4:	mov	x20, #0x0                   	// #0
   374d8:	mov	x0, x20
   374dc:	ldp	x19, x20, [sp, #16]
   374e0:	ldp	x29, x30, [sp], #80
   374e4:	ret
   374e8:	add	x1, sp, #0x48
   374ec:	mov	x0, x19
   374f0:	mov	w2, #0x0                   	// #0
   374f4:	stp	x21, x22, [sp, #32]
   374f8:	bl	39b88 <__asan_cplus_demangle_type@@Base+0x2718>
   374fc:	mov	x21, x0
   37500:	cbz	x0, 37644 <__asan_cplus_demangle_type@@Base+0x1d4>
   37504:	ldr	x0, [x19, #24]
   37508:	ldrb	w0, [x0]
   3750c:	cmp	w0, #0x46
   37510:	mov	x0, x19
   37514:	b.eq	37638 <__asan_cplus_demangle_type@@Base+0x1c8>  // b.none
   37518:	bl	37470 <__asan_cplus_demangle_type@@Base>
   3751c:	str	x0, [x21]
   37520:	cbz	x0, 37644 <__asan_cplus_demangle_type@@Base+0x1d4>
   37524:	ldr	w1, [x0]
   37528:	ldr	x20, [sp, #72]
   3752c:	sub	w1, w1, #0x1f
   37530:	cmp	w1, #0x1
   37534:	b.ls	3761c <__asan_cplus_demangle_type@@Base+0x1ac>  // b.plast
   37538:	cbz	x20, 37644 <__asan_cplus_demangle_type@@Base+0x1d4>
   3753c:	ldp	w0, w1, [x19, #56]
   37540:	cmp	w0, w1
   37544:	b.ge	37644 <__asan_cplus_demangle_type@@Base+0x1d4>  // b.tcont
   37548:	ldr	x2, [x19, #48]
   3754c:	add	w1, w0, #0x1
   37550:	ldp	x21, x22, [sp, #32]
   37554:	str	x20, [x2, w0, sxtw #3]
   37558:	mov	x0, x20
   3755c:	str	w1, [x19, #56]
   37560:	ldp	x19, x20, [sp, #16]
   37564:	ldp	x29, x30, [sp], #80
   37568:	ret
   3756c:	ldrb	w0, [x3, #1]
   37570:	and	w1, w0, #0xffffffdf
   37574:	sub	w0, w0, #0x77
   37578:	cmp	w1, #0x4f
   3757c:	and	w0, w0, #0xff
   37580:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   37584:	b.ls	374e8 <__asan_cplus_demangle_type@@Base+0x78>  // b.plast
   37588:	add	x0, x3, #0x1
   3758c:	str	x0, [x19, #24]
   37590:	ldrb	w0, [x3, #1]
   37594:	cbz	w0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37598:	add	x0, x3, #0x2
   3759c:	str	x0, [x19, #24]
   375a0:	ldrb	w0, [x3, #1]
   375a4:	cmp	w0, #0x68
   375a8:	b.eq	380a0 <__asan_cplus_demangle_type@@Base+0xc30>  // b.none
   375ac:	b.hi	37abc <__asan_cplus_demangle_type@@Base+0x64c>  // b.pmore
   375b0:	cmp	w0, #0x63
   375b4:	b.eq	3800c <__asan_cplus_demangle_type@@Base+0xb9c>  // b.none
   375b8:	b.ls	37a68 <__asan_cplus_demangle_type@@Base+0x5f8>  // b.plast
   375bc:	cmp	w0, #0x65
   375c0:	b.eq	37f34 <__asan_cplus_demangle_type@@Base+0xac4>  // b.none
   375c4:	cmp	w0, #0x66
   375c8:	b.ne	37a28 <__asan_cplus_demangle_type@@Base+0x5b8>  // b.any
   375cc:	ldp	w0, w1, [x19, #40]
   375d0:	cmp	w0, w1
   375d4:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   375d8:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   375dc:	mov	w2, #0x18                  	// #24
   375e0:	ldr	x4, [x19, #32]
   375e4:	smull	x2, w0, w2
   375e8:	ldr	x1, [x1, #3912]
   375ec:	add	w0, w0, #0x1
   375f0:	ldr	w3, [x19, #72]
   375f4:	add	x20, x4, x2
   375f8:	add	x1, x1, #0x340
   375fc:	mov	w5, #0x27                  	// #39
   37600:	str	wzr, [x20, #4]
   37604:	str	w0, [x19, #40]
   37608:	add	w0, w3, #0x9
   3760c:	str	w5, [x4, x2]
   37610:	str	x1, [x20, #8]
   37614:	str	w0, [x19, #72]
   37618:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   3761c:	ldr	x1, [x0, #8]
   37620:	str	x20, [x0, #8]
   37624:	ldr	x0, [x21]
   37628:	str	x0, [sp, #72]
   3762c:	str	x1, [x21]
   37630:	ldr	x20, [sp, #72]
   37634:	b	37538 <__asan_cplus_demangle_type@@Base+0xc8>
   37638:	bl	38ab0 <__asan_cplus_demangle_type@@Base+0x1640>
   3763c:	str	x0, [x21]
   37640:	b	37520 <__asan_cplus_demangle_type@@Base+0xb0>
   37644:	ldp	x21, x22, [sp, #32]
   37648:	b	374d4 <__asan_cplus_demangle_type@@Base+0x64>
   3764c:	adrp	x2, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37650:	sub	w1, w0, #0x61
   37654:	ldp	w0, w4, [x19, #40]
   37658:	sbfiz	x1, x1, #5, #32
   3765c:	ldr	x2, [x2, #3912]
   37660:	cmp	w0, w4
   37664:	add	x1, x1, x2
   37668:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3766c:	mov	w2, #0x18                  	// #24
   37670:	add	w6, w0, #0x1
   37674:	ldr	x4, [x19, #32]
   37678:	smull	x0, w0, w2
   3767c:	ldr	w7, [x1, #8]
   37680:	mov	w5, #0x27                  	// #39
   37684:	add	x20, x4, x0
   37688:	ldr	w2, [x19, #72]
   3768c:	add	x3, x3, #0x1
   37690:	add	w2, w2, w7
   37694:	str	wzr, [x20, #4]
   37698:	str	w6, [x19, #40]
   3769c:	str	w5, [x4, x0]
   376a0:	str	x1, [x20, #8]
   376a4:	str	x3, [x19, #24]
   376a8:	str	w2, [x19, #72]
   376ac:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   376b0:	add	x3, x3, #0x1
   376b4:	str	x3, [x19, #24]
   376b8:	mov	x0, x19
   376bc:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   376c0:	str	x0, [sp, #72]
   376c4:	ldr	x1, [x19, #24]
   376c8:	mov	x20, x0
   376cc:	ldrb	w0, [x1]
   376d0:	cmp	w0, #0x49
   376d4:	b.eq	37e94 <__asan_cplus_demangle_type@@Base+0xa24>  // b.none
   376d8:	mov	x0, x19
   376dc:	bl	37470 <__asan_cplus_demangle_type@@Base>
   376e0:	ldr	x3, [sp, #72]
   376e4:	mov	x2, x0
   376e8:	mov	w1, #0x21                  	// #33
   376ec:	mov	x0, x19
   376f0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   376f4:	mov	x20, x0
   376f8:	str	x0, [sp, #72]
   376fc:	nop
   37700:	cbz	x20, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37704:	ldp	w0, w1, [x19, #56]
   37708:	cmp	w0, w1
   3770c:	b.ge	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.tcont
   37710:	ldr	x2, [x19, #48]
   37714:	add	w1, w0, #0x1
   37718:	str	x20, [x2, w0, sxtw #3]
   3771c:	str	w1, [x19, #56]
   37720:	ldr	x20, [sp, #72]
   37724:	mov	x0, x20
   37728:	ldp	x19, x20, [sp, #16]
   3772c:	ldp	x29, x30, [sp], #80
   37730:	ret
   37734:	mov	x0, x19
   37738:	stp	x21, x22, [sp, #32]
   3773c:	bl	2e468 <__asan_backtrace_create_state@@Base+0x7e0>
   37740:	ldr	x21, [x19, #24]
   37744:	str	x0, [sp, #72]
   37748:	mov	x20, x0
   3774c:	ldrb	w0, [x21]
   37750:	cmp	w0, #0x49
   37754:	b.eq	37df4 <__asan_cplus_demangle_type@@Base+0x984>  // b.none
   37758:	ldp	x21, x22, [sp, #32]
   3775c:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37760:	ldrb	w0, [x3, #1]
   37764:	sub	w1, w0, #0x30
   37768:	cmp	w0, #0x5f
   3776c:	and	w1, w1, #0xff
   37770:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   37774:	b.ls	37788 <__asan_cplus_demangle_type@@Base+0x318>  // b.plast
   37778:	sub	w0, w0, #0x41
   3777c:	and	w0, w0, #0xff
   37780:	cmp	w0, #0x19
   37784:	b.hi	37e70 <__asan_cplus_demangle_type@@Base+0xa00>  // b.pmore
   37788:	mov	w1, #0x0                   	// #0
   3778c:	mov	x0, x19
   37790:	bl	370a0 <__asan_cplus_demangle_fill_name@@Base+0x240>
   37794:	str	x0, [sp, #72]
   37798:	ldr	x1, [x19, #24]
   3779c:	mov	x20, x0
   377a0:	ldrb	w0, [x1]
   377a4:	cmp	w0, #0x49
   377a8:	b.ne	374d8 <__asan_cplus_demangle_type@@Base+0x68>  // b.any
   377ac:	add	x1, x1, #0x1
   377b0:	str	x1, [x19, #24]
   377b4:	mov	x0, x19
   377b8:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   377bc:	mov	x3, x0
   377c0:	mov	x2, x20
   377c4:	mov	x0, x19
   377c8:	mov	w1, #0x4                   	// #4
   377cc:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   377d0:	mov	x20, x0
   377d4:	str	x0, [sp, #72]
   377d8:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   377dc:	add	x3, x3, #0x1
   377e0:	str	x3, [x19, #24]
   377e4:	mov	x0, x19
   377e8:	bl	37470 <__asan_cplus_demangle_type@@Base>
   377ec:	mov	x2, x0
   377f0:	mov	x3, #0x0                   	// #0
   377f4:	mov	x0, x19
   377f8:	mov	w1, #0x23                  	// #35
   377fc:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37800:	mov	x20, x0
   37804:	str	x0, [sp, #72]
   37808:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   3780c:	add	x3, x3, #0x1
   37810:	str	x3, [x19, #24]
   37814:	mov	x0, x19
   37818:	bl	37470 <__asan_cplus_demangle_type@@Base>
   3781c:	mov	x2, x0
   37820:	mov	x3, #0x0                   	// #0
   37824:	mov	x0, x19
   37828:	mov	w1, #0x22                  	// #34
   3782c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37830:	mov	x20, x0
   37834:	str	x0, [sp, #72]
   37838:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   3783c:	add	x3, x3, #0x1
   37840:	str	x3, [x19, #24]
   37844:	mov	x0, x19
   37848:	bl	37470 <__asan_cplus_demangle_type@@Base>
   3784c:	mov	x2, x0
   37850:	mov	x3, #0x0                   	// #0
   37854:	mov	x0, x19
   37858:	mov	w1, #0x24                  	// #36
   3785c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37860:	mov	x20, x0
   37864:	str	x0, [sp, #72]
   37868:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   3786c:	add	x3, x3, #0x1
   37870:	str	x3, [x19, #24]
   37874:	mov	x0, x19
   37878:	bl	37470 <__asan_cplus_demangle_type@@Base>
   3787c:	mov	x2, x0
   37880:	mov	x3, #0x0                   	// #0
   37884:	mov	x0, x19
   37888:	mov	w1, #0x26                  	// #38
   3788c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37890:	mov	x20, x0
   37894:	str	x0, [sp, #72]
   37898:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   3789c:	mov	x0, x19
   378a0:	bl	38ab0 <__asan_cplus_demangle_type@@Base+0x1640>
   378a4:	mov	x20, x0
   378a8:	str	x0, [sp, #72]
   378ac:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   378b0:	add	x3, x3, #0x1
   378b4:	str	x3, [x19, #24]
   378b8:	mov	x0, x19
   378bc:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   378c0:	mov	x2, x0
   378c4:	mov	x3, #0x0                   	// #0
   378c8:	mov	x0, x19
   378cc:	mov	w1, #0x28                  	// #40
   378d0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   378d4:	mov	x20, x0
   378d8:	str	x0, [sp, #72]
   378dc:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   378e0:	add	x3, x3, #0x1
   378e4:	str	x3, [x19, #24]
   378e8:	mov	x0, x19
   378ec:	bl	37470 <__asan_cplus_demangle_type@@Base>
   378f0:	mov	x2, x0
   378f4:	mov	x3, #0x0                   	// #0
   378f8:	mov	x0, x19
   378fc:	mov	w1, #0x25                  	// #37
   37900:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37904:	mov	x20, x0
   37908:	str	x0, [sp, #72]
   3790c:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37910:	mov	x0, x19
   37914:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   37918:	mov	x20, x0
   3791c:	str	x0, [sp, #72]
   37920:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37924:	add	x1, x3, #0x1
   37928:	str	x1, [x19, #24]
   3792c:	ldrb	w0, [x3, #1]
   37930:	cmp	w0, #0x5f
   37934:	b.eq	37e68 <__asan_cplus_demangle_type@@Base+0x9f8>  // b.none
   37938:	sub	w0, w0, #0x30
   3793c:	and	w0, w0, #0xff
   37940:	cmp	w0, #0x9
   37944:	b.hi	37ec0 <__asan_cplus_demangle_type@@Base+0xa50>  // b.pmore
   37948:	add	x3, x3, #0x2
   3794c:	nop
   37950:	mov	x2, x3
   37954:	str	x3, [x19, #24]
   37958:	add	x3, x3, #0x1
   3795c:	ldrb	w0, [x2]
   37960:	sub	w0, w0, #0x30
   37964:	and	w0, w0, #0xff
   37968:	cmp	w0, #0x9
   3796c:	b.ls	37950 <__asan_cplus_demangle_type@@Base+0x4e0>  // b.plast
   37970:	ldp	w20, w0, [x19, #40]
   37974:	sub	x2, x2, x1
   37978:	cmp	w20, w0
   3797c:	b.ge	374cc <__asan_cplus_demangle_type@@Base+0x5c>  // b.tcont
   37980:	ldr	x0, [x19, #32]
   37984:	mov	w4, #0x18                  	// #24
   37988:	add	w3, w20, #0x1
   3798c:	smaddl	x20, w20, w4, x0
   37990:	mov	x0, x20
   37994:	str	wzr, [x20, #4]
   37998:	str	w3, [x19, #40]
   3799c:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   379a0:	cbz	w0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   379a4:	ldr	x1, [x19, #24]
   379a8:	ldrb	w0, [x1]
   379ac:	cmp	w0, #0x5f
   379b0:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   379b4:	add	x1, x1, #0x1
   379b8:	str	x1, [x19, #24]
   379bc:	mov	x0, x19
   379c0:	bl	6420 <__asan_cplus_demangle_type@plt>
   379c4:	mov	x3, x0
   379c8:	mov	x2, x20
   379cc:	mov	x0, x19
   379d0:	mov	w1, #0x2a                  	// #42
   379d4:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   379d8:	mov	x20, x0
   379dc:	str	x0, [sp, #72]
   379e0:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   379e4:	add	x3, x3, #0x1
   379e8:	str	x3, [x19, #24]
   379ec:	mov	x0, x19
   379f0:	bl	6420 <__asan_cplus_demangle_type@plt>
   379f4:	mov	x20, x0
   379f8:	cbz	x0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   379fc:	mov	x0, x19
   37a00:	bl	6420 <__asan_cplus_demangle_type@plt>
   37a04:	mov	x3, x0
   37a08:	cbz	x0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37a0c:	mov	x2, x20
   37a10:	mov	x0, x19
   37a14:	mov	w1, #0x2b                  	// #43
   37a18:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37a1c:	mov	x20, x0
   37a20:	str	x0, [sp, #72]
   37a24:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37a28:	cmp	w0, #0x64
   37a2c:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37a30:	ldp	w0, w1, [x19, #40]
   37a34:	cmp	w0, w1
   37a38:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   37a3c:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37a40:	mov	w2, #0x18                  	// #24
   37a44:	ldr	x4, [x19, #32]
   37a48:	smull	x2, w0, w2
   37a4c:	ldr	x1, [x1, #3912]
   37a50:	add	w0, w0, #0x1
   37a54:	ldr	w3, [x19, #72]
   37a58:	add	x20, x4, x2
   37a5c:	add	x1, x1, #0x360
   37a60:	mov	w5, #0x27                  	// #39
   37a64:	b	37600 <__asan_cplus_demangle_type@@Base+0x190>
   37a68:	cmp	w0, #0x54
   37a6c:	b.eq	37be8 <__asan_cplus_demangle_type@@Base+0x778>  // b.none
   37a70:	cmp	w0, #0x61
   37a74:	b.ne	37c7c <__asan_cplus_demangle_type@@Base+0x80c>  // b.any
   37a78:	ldp	w20, w0, [x19, #40]
   37a7c:	cmp	w20, w0
   37a80:	b.ge	3822c <__asan_cplus_demangle_type@@Base+0xdbc>  // b.tcont
   37a84:	ldr	x1, [x19, #32]
   37a88:	mov	w2, #0x18                  	// #24
   37a8c:	add	w0, w20, #0x1
   37a90:	smaddl	x20, w20, w2, x1
   37a94:	str	wzr, [x20, #4]
   37a98:	str	w0, [x19, #40]
   37a9c:	mov	x0, x20
   37aa0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x2b10>
   37aa4:	mov	w2, #0x4                   	// #4
   37aa8:	add	x1, x1, #0x290
   37aac:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   37ab0:	cmp	w0, #0x0
   37ab4:	csel	x20, x20, xzr, ne  // ne = any
   37ab8:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37abc:	cmp	w0, #0x73
   37ac0:	b.eq	37fd4 <__asan_cplus_demangle_type@@Base+0xb64>  // b.none
   37ac4:	b.ls	37c44 <__asan_cplus_demangle_type@@Base+0x7d4>  // b.plast
   37ac8:	cmp	w0, #0x75
   37acc:	b.eq	37f84 <__asan_cplus_demangle_type@@Base+0xb14>  // b.none
   37ad0:	cmp	w0, #0x76
   37ad4:	b.ne	37be0 <__asan_cplus_demangle_type@@Base+0x770>  // b.any
   37ad8:	ldrb	w0, [x3, #2]
   37adc:	cmp	w0, #0x5f
   37ae0:	b.eq	38138 <__asan_cplus_demangle_type@@Base+0xcc8>  // b.none
   37ae4:	ldp	w0, w1, [x19, #40]
   37ae8:	cmp	w0, w1
   37aec:	b.ge	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.tcont
   37af0:	mov	w2, #0x18                  	// #24
   37af4:	add	w4, w0, #0x1
   37af8:	ldr	x1, [x19, #32]
   37afc:	smull	x0, w0, w2
   37b00:	mov	w2, #0x42                  	// #66
   37b04:	add	x20, x1, x0
   37b08:	str	wzr, [x20, #4]
   37b0c:	str	w4, [x19, #40]
   37b10:	str	w2, [x1, x0]
   37b14:	ldrb	w0, [x3, #2]
   37b18:	cmp	w0, #0x6e
   37b1c:	b.eq	38208 <__asan_cplus_demangle_type@@Base+0xd98>  // b.none
   37b20:	sub	w1, w0, #0x30
   37b24:	and	w1, w1, #0xff
   37b28:	cmp	w1, #0x9
   37b2c:	b.hi	38244 <__asan_cplus_demangle_type@@Base+0xdd4>  // b.pmore
   37b30:	mov	w2, #0x0                   	// #0
   37b34:	mov	w6, #0xcccd                	// #52429
   37b38:	mov	w5, w0
   37b3c:	mov	w7, #0x7fffffff            	// #2147483647
   37b40:	mov	w0, #0x0                   	// #0
   37b44:	movk	w6, #0xcccc, lsl #16
   37b48:	ldr	x3, [x19, #24]
   37b4c:	b	37b68 <__asan_cplus_demangle_type@@Base+0x6f8>
   37b50:	sub	w1, w7, w1
   37b54:	mov	w5, w4
   37b58:	umull	x1, w1, w6
   37b5c:	lsr	x1, x1, #35
   37b60:	cmp	w1, w0
   37b64:	b.lt	38200 <__asan_cplus_demangle_type@@Base+0xd90>  // b.tstop
   37b68:	add	x3, x3, #0x1
   37b6c:	str	x3, [x19, #24]
   37b70:	add	w0, w0, w0, lsl #2
   37b74:	ldrb	w4, [x3]
   37b78:	add	w0, w5, w0, lsl #1
   37b7c:	sub	w0, w0, #0x30
   37b80:	sub	w1, w4, #0x30
   37b84:	and	w5, w1, #0xff
   37b88:	cmp	w5, #0x9
   37b8c:	b.ls	37b50 <__asan_cplus_demangle_type@@Base+0x6e0>  // b.plast
   37b90:	cbz	w2, 37b98 <__asan_cplus_demangle_type@@Base+0x728>
   37b94:	neg	w0, w0
   37b98:	sxtw	x0, w0
   37b9c:	str	x0, [x20, #8]
   37ba0:	ldr	x0, [x19, #24]
   37ba4:	ldrb	w1, [x0]
   37ba8:	cmp	w1, #0x5f
   37bac:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37bb0:	add	x0, x0, #0x1
   37bb4:	str	x0, [x19, #24]
   37bb8:	mov	x0, x19
   37bbc:	bl	6420 <__asan_cplus_demangle_type@plt>
   37bc0:	mov	x3, x0
   37bc4:	mov	x2, x20
   37bc8:	mov	x0, x19
   37bcc:	mov	w1, #0x2d                  	// #45
   37bd0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37bd4:	mov	x20, x0
   37bd8:	str	x0, [sp, #72]
   37bdc:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37be0:	cmp	w0, #0x74
   37be4:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37be8:	ldr	w20, [x19, #76]
   37bec:	mov	w0, #0x1                   	// #1
   37bf0:	str	w0, [x19, #76]
   37bf4:	mov	x0, x19
   37bf8:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   37bfc:	str	w20, [x19, #76]
   37c00:	mov	x2, x0
   37c04:	mov	x3, #0x0                   	// #0
   37c08:	mov	x0, x19
   37c0c:	mov	w1, #0x43                  	// #67
   37c10:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37c14:	str	x0, [sp, #72]
   37c18:	mov	x20, x0
   37c1c:	cbz	x0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37c20:	ldr	x0, [x19, #24]
   37c24:	ldrb	w1, [x0]
   37c28:	cbz	w1, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37c2c:	add	x1, x0, #0x1
   37c30:	str	x1, [x19, #24]
   37c34:	ldrb	w0, [x0]
   37c38:	cmp	w0, #0x45
   37c3c:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37c40:	b	37704 <__asan_cplus_demangle_type@@Base+0x294>
   37c44:	cmp	w0, #0x6e
   37c48:	b.eq	38050 <__asan_cplus_demangle_type@@Base+0xbe0>  // b.none
   37c4c:	cmp	w0, #0x70
   37c50:	b.ne	37d9c <__asan_cplus_demangle_type@@Base+0x92c>  // b.any
   37c54:	mov	x0, x19
   37c58:	bl	37470 <__asan_cplus_demangle_type@@Base>
   37c5c:	mov	x3, #0x0                   	// #0
   37c60:	mov	x2, x0
   37c64:	mov	w1, #0x4b                  	// #75
   37c68:	mov	x0, x19
   37c6c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37c70:	mov	x20, x0
   37c74:	str	x0, [sp, #72]
   37c78:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37c7c:	cmp	w0, #0x46
   37c80:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37c84:	ldp	w0, w1, [x19, #40]
   37c88:	cmp	w0, w1
   37c8c:	b.ge	38264 <__asan_cplus_demangle_type@@Base+0xdf4>  // b.tcont
   37c90:	mov	w2, #0x18                  	// #24
   37c94:	add	w4, w0, #0x1
   37c98:	ldr	x1, [x19, #32]
   37c9c:	smull	x0, w0, w2
   37ca0:	mov	w2, #0x2c                  	// #44
   37ca4:	add	x20, x1, x0
   37ca8:	str	wzr, [x20, #4]
   37cac:	str	w4, [x19, #40]
   37cb0:	str	x20, [sp, #72]
   37cb4:	str	w2, [x1, x0]
   37cb8:	ldrb	w0, [x3, #2]
   37cbc:	sub	w0, w0, #0x30
   37cc0:	and	w0, w0, #0xff
   37cc4:	cmp	w0, #0x9
   37cc8:	cset	w1, ls  // ls = plast
   37ccc:	strh	w1, [x20, #16]
   37cd0:	b.ls	38164 <__asan_cplus_demangle_type@@Base+0xcf4>  // b.plast
   37cd4:	mov	x0, x19
   37cd8:	bl	37470 <__asan_cplus_demangle_type@@Base>
   37cdc:	str	x0, [x20, #8]
   37ce0:	ldr	x20, [sp, #72]
   37ce4:	ldr	x0, [x20, #8]
   37ce8:	cbz	x0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37cec:	ldr	x2, [x19, #24]
   37cf0:	ldrb	w1, [x2]
   37cf4:	cmp	w1, #0x6e
   37cf8:	b.ne	37d0c <__asan_cplus_demangle_type@@Base+0x89c>  // b.any
   37cfc:	add	x0, x2, #0x1
   37d00:	str	x0, [x19, #24]
   37d04:	ldrb	w1, [x2, #1]
   37d08:	mov	x2, x0
   37d0c:	sub	w0, w1, #0x30
   37d10:	mov	w5, #0xcccd                	// #52429
   37d14:	and	w0, w0, #0xff
   37d18:	mov	w4, w1
   37d1c:	cmp	w0, #0x9
   37d20:	mov	w1, #0x0                   	// #0
   37d24:	mov	w6, #0x7fffffff            	// #2147483647
   37d28:	movk	w5, #0xcccc, lsl #16
   37d2c:	b.ls	37d4c <__asan_cplus_demangle_type@@Base+0x8dc>  // b.plast
   37d30:	b	37d74 <__asan_cplus_demangle_type@@Base+0x904>
   37d34:	sub	w0, w6, w0
   37d38:	mov	w4, w3
   37d3c:	umull	x0, w0, w5
   37d40:	lsr	x0, x0, #35
   37d44:	cmp	w0, w1
   37d48:	b.lt	37d74 <__asan_cplus_demangle_type@@Base+0x904>  // b.tstop
   37d4c:	add	x2, x2, #0x1
   37d50:	str	x2, [x19, #24]
   37d54:	add	w1, w1, w1, lsl #2
   37d58:	ldrb	w3, [x2]
   37d5c:	add	w1, w4, w1, lsl #1
   37d60:	sub	w1, w1, #0x30
   37d64:	sub	w0, w3, #0x30
   37d68:	and	w4, w0, #0xff
   37d6c:	cmp	w4, #0x9
   37d70:	b.ls	37d34 <__asan_cplus_demangle_type@@Base+0x8c4>  // b.plast
   37d74:	ldr	x1, [x19, #24]
   37d78:	ldrb	w0, [x1]
   37d7c:	cbz	w0, 37d8c <__asan_cplus_demangle_type@@Base+0x91c>
   37d80:	add	x0, x1, #0x1
   37d84:	str	x0, [x19, #24]
   37d88:	ldrb	w0, [x1]
   37d8c:	cmp	w0, #0x73
   37d90:	cset	w0, eq  // eq = none
   37d94:	strh	w0, [x20, #18]
   37d98:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37d9c:	cmp	w0, #0x69
   37da0:	b.ne	374d4 <__asan_cplus_demangle_type@@Base+0x64>  // b.any
   37da4:	ldp	w0, w1, [x19, #40]
   37da8:	cmp	w0, w1
   37dac:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   37db0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37db4:	mov	w2, #0x18                  	// #24
   37db8:	ldr	x4, [x19, #32]
   37dbc:	smull	x2, w0, w2
   37dc0:	ldr	x1, [x1, #3912]
   37dc4:	add	w0, w0, #0x1
   37dc8:	ldr	w3, [x19, #72]
   37dcc:	add	x20, x4, x2
   37dd0:	add	x1, x1, #0x400
   37dd4:	mov	w5, #0x27                  	// #39
   37dd8:	str	wzr, [x20, #4]
   37ddc:	str	w0, [x19, #40]
   37de0:	add	w0, w3, #0x8
   37de4:	str	w5, [x4, x2]
   37de8:	str	x1, [x20, #8]
   37dec:	str	w0, [x19, #72]
   37df0:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37df4:	ldr	w0, [x19, #80]
   37df8:	cbnz	w0, 37ee4 <__asan_cplus_demangle_type@@Base+0xa74>
   37dfc:	cbz	x20, 37644 <__asan_cplus_demangle_type@@Base+0x1d4>
   37e00:	ldp	w0, w1, [x19, #56]
   37e04:	cmp	w0, w1
   37e08:	b.ge	37644 <__asan_cplus_demangle_type@@Base+0x1d4>  // b.tcont
   37e0c:	ldr	x2, [x19, #48]
   37e10:	add	w1, w0, #0x1
   37e14:	mov	x3, #0x0                   	// #0
   37e18:	str	x20, [x2, w0, sxtw #3]
   37e1c:	str	w1, [x19, #56]
   37e20:	ldrb	w0, [x21]
   37e24:	sub	w0, w0, #0x49
   37e28:	and	w0, w0, #0xff
   37e2c:	cmp	w0, #0x1
   37e30:	b.hi	37e48 <__asan_cplus_demangle_type@@Base+0x9d8>  // b.pmore
   37e34:	add	x21, x21, #0x1
   37e38:	str	x21, [x19, #24]
   37e3c:	mov	x0, x19
   37e40:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   37e44:	mov	x3, x0
   37e48:	mov	x2, x20
   37e4c:	mov	x0, x19
   37e50:	mov	w1, #0x4                   	// #4
   37e54:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37e58:	mov	x20, x0
   37e5c:	str	x0, [sp, #72]
   37e60:	ldp	x21, x22, [sp, #32]
   37e64:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37e68:	mov	x20, #0x0                   	// #0
   37e6c:	b	379b4 <__asan_cplus_demangle_type@@Base+0x544>
   37e70:	mov	x0, x19
   37e74:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   37e78:	str	x0, [sp, #72]
   37e7c:	mov	x20, x0
   37e80:	cbz	x0, 374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37e84:	ldr	w0, [x0]
   37e88:	cmp	w0, #0x18
   37e8c:	b.ne	37704 <__asan_cplus_demangle_type@@Base+0x294>  // b.any
   37e90:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37e94:	add	x1, x1, #0x1
   37e98:	str	x1, [x19, #24]
   37e9c:	mov	x0, x19
   37ea0:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   37ea4:	mov	x3, x0
   37ea8:	mov	x2, x20
   37eac:	mov	x0, x19
   37eb0:	mov	w1, #0x4                   	// #4
   37eb4:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   37eb8:	str	x0, [sp, #72]
   37ebc:	b	376d8 <__asan_cplus_demangle_type@@Base+0x268>
   37ec0:	ldr	w20, [x19, #76]
   37ec4:	mov	w0, #0x1                   	// #1
   37ec8:	str	w0, [x19, #76]
   37ecc:	mov	x0, x19
   37ed0:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   37ed4:	str	w20, [x19, #76]
   37ed8:	mov	x20, x0
   37edc:	cbnz	x0, 379a4 <__asan_cplus_demangle_type@@Base+0x534>
   37ee0:	b	374d4 <__asan_cplus_demangle_type@@Base+0x64>
   37ee4:	ldr	w22, [x19, #56]
   37ee8:	add	x0, x21, #0x1
   37eec:	ldr	w20, [x19, #72]
   37ef0:	str	x23, [sp, #48]
   37ef4:	str	x0, [x19, #24]
   37ef8:	mov	x0, x19
   37efc:	ldr	w23, [x19, #40]
   37f00:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   37f04:	ldr	x1, [x19, #24]
   37f08:	ldrb	w1, [x1]
   37f0c:	cmp	w1, #0x49
   37f10:	b.eq	380f0 <__asan_cplus_demangle_type@@Base+0xc80>  // b.none
   37f14:	str	x21, [x19, #24]
   37f18:	str	w23, [x19, #40]
   37f1c:	str	w22, [x19, #56]
   37f20:	str	w20, [x19, #72]
   37f24:	ldp	x21, x22, [sp, #32]
   37f28:	ldr	x23, [sp, #48]
   37f2c:	ldr	x20, [sp, #72]
   37f30:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   37f34:	ldp	w0, w1, [x19, #40]
   37f38:	cmp	w0, w1
   37f3c:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   37f40:	mov	w2, #0x18                  	// #24
   37f44:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37f48:	ldr	x4, [x19, #32]
   37f4c:	smull	x2, w0, w2
   37f50:	ldr	w3, [x19, #72]
   37f54:	add	w0, w0, #0x1
   37f58:	add	x20, x4, x2
   37f5c:	mov	w5, #0x27                  	// #39
   37f60:	ldr	x1, [x1, #3912]
   37f64:	str	wzr, [x20, #4]
   37f68:	str	w0, [x19, #40]
   37f6c:	add	x1, x1, #0x380
   37f70:	str	w5, [x4, x2]
   37f74:	add	w0, w3, #0xa
   37f78:	str	x1, [x20, #8]
   37f7c:	str	w0, [x19, #72]
   37f80:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37f84:	ldp	w0, w1, [x19, #40]
   37f88:	cmp	w0, w1
   37f8c:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   37f90:	mov	w2, #0x18                  	// #24
   37f94:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37f98:	ldr	x4, [x19, #32]
   37f9c:	smull	x2, w0, w2
   37fa0:	ldr	w3, [x19, #72]
   37fa4:	add	w0, w0, #0x1
   37fa8:	add	x20, x4, x2
   37fac:	mov	w5, #0x27                  	// #39
   37fb0:	ldr	x1, [x1, #3912]
   37fb4:	str	wzr, [x20, #4]
   37fb8:	str	w0, [x19, #40]
   37fbc:	add	x1, x1, #0x3c0
   37fc0:	str	w5, [x4, x2]
   37fc4:	add	w0, w3, #0x7
   37fc8:	str	x1, [x20, #8]
   37fcc:	str	w0, [x19, #72]
   37fd0:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   37fd4:	ldp	w0, w1, [x19, #40]
   37fd8:	cmp	w0, w1
   37fdc:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   37fe0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   37fe4:	mov	w2, #0x18                  	// #24
   37fe8:	ldr	x4, [x19, #32]
   37fec:	smull	x2, w0, w2
   37ff0:	ldr	x1, [x1, #3912]
   37ff4:	add	w0, w0, #0x1
   37ff8:	ldr	w3, [x19, #72]
   37ffc:	add	x20, x4, x2
   38000:	add	x1, x1, #0x3e0
   38004:	mov	w5, #0x27                  	// #39
   38008:	b	37dd8 <__asan_cplus_demangle_type@@Base+0x968>
   3800c:	ldp	w20, w0, [x19, #40]
   38010:	cmp	w20, w0
   38014:	b.ge	38234 <__asan_cplus_demangle_type@@Base+0xdc4>  // b.tcont
   38018:	ldr	x1, [x19, #32]
   3801c:	mov	w2, #0x18                  	// #24
   38020:	add	w0, w20, #0x1
   38024:	smaddl	x20, w20, w2, x1
   38028:	str	wzr, [x20, #4]
   3802c:	str	w0, [x19, #40]
   38030:	mov	x0, x20
   38034:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   38038:	mov	w2, #0xe                   	// #14
   3803c:	add	x1, x1, #0x300
   38040:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   38044:	cmp	w0, #0x0
   38048:	csel	x20, x20, xzr, ne  // ne = any
   3804c:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   38050:	ldp	w0, w1, [x19, #40]
   38054:	cmp	w0, w1
   38058:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   3805c:	mov	w2, #0x18                  	// #24
   38060:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   38064:	ldr	x4, [x19, #32]
   38068:	smull	x2, w0, w2
   3806c:	ldr	w3, [x19, #72]
   38070:	add	w0, w0, #0x1
   38074:	add	x20, x4, x2
   38078:	mov	w5, #0x27                  	// #39
   3807c:	ldr	x1, [x1, #3912]
   38080:	str	wzr, [x20, #4]
   38084:	str	w0, [x19, #40]
   38088:	add	x1, x1, #0x420
   3808c:	str	w5, [x4, x2]
   38090:	add	w0, w3, #0x11
   38094:	str	x1, [x20, #8]
   38098:	str	w0, [x19, #72]
   3809c:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   380a0:	ldp	w0, w1, [x19, #40]
   380a4:	cmp	w0, w1
   380a8:	b.ge	3824c <__asan_cplus_demangle_type@@Base+0xddc>  // b.tcont
   380ac:	mov	w2, #0x18                  	// #24
   380b0:	adrp	x1, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   380b4:	ldr	x4, [x19, #32]
   380b8:	smull	x2, w0, w2
   380bc:	ldr	w3, [x19, #72]
   380c0:	add	w0, w0, #0x1
   380c4:	add	x20, x4, x2
   380c8:	mov	w5, #0x27                  	// #39
   380cc:	ldr	x1, [x1, #3912]
   380d0:	str	wzr, [x20, #4]
   380d4:	str	w0, [x19, #40]
   380d8:	add	x1, x1, #0x3a0
   380dc:	str	w5, [x4, x2]
   380e0:	add	w0, w3, #0x4
   380e4:	str	x1, [x20, #8]
   380e8:	str	w0, [x19, #72]
   380ec:	b	374d8 <__asan_cplus_demangle_type@@Base+0x68>
   380f0:	ldr	x2, [sp, #72]
   380f4:	cbz	x2, 381f4 <__asan_cplus_demangle_type@@Base+0xd84>
   380f8:	ldp	w4, w1, [x19, #56]
   380fc:	cmp	w4, w1
   38100:	b.ge	381f4 <__asan_cplus_demangle_type@@Base+0xd84>  // b.tcont
   38104:	ldr	x6, [x19, #48]
   38108:	add	w5, w4, #0x1
   3810c:	mov	x3, x0
   38110:	mov	w1, #0x4                   	// #4
   38114:	mov	x0, x19
   38118:	str	x2, [x6, w4, sxtw #3]
   3811c:	str	w5, [x19, #56]
   38120:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38124:	mov	x20, x0
   38128:	str	x0, [sp, #72]
   3812c:	ldp	x21, x22, [sp, #32]
   38130:	ldr	x23, [sp, #48]
   38134:	b	37700 <__asan_cplus_demangle_type@@Base+0x290>
   38138:	add	x3, x3, #0x3
   3813c:	ldr	w20, [x19, #76]
   38140:	mov	w1, #0x1                   	// #1
   38144:	str	x3, [x19, #24]
   38148:	str	w1, [x19, #76]
   3814c:	mov	x0, x19
   38150:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   38154:	str	w20, [x19, #76]
   38158:	mov	x20, x0
   3815c:	cbnz	x0, 37ba0 <__asan_cplus_demangle_type@@Base+0x730>
   38160:	b	374d4 <__asan_cplus_demangle_type@@Base+0x64>
   38164:	ldr	x0, [x19, #24]
   38168:	ldrb	w1, [x0]
   3816c:	cmp	w1, #0x6e
   38170:	b.ne	38180 <__asan_cplus_demangle_type@@Base+0xd10>  // b.any
   38174:	add	x1, x0, #0x1
   38178:	str	x1, [x19, #24]
   3817c:	ldrb	w1, [x0, #1]
   38180:	sub	w0, w1, #0x30
   38184:	and	w0, w0, #0xff
   38188:	cmp	w0, #0x9
   3818c:	b.hi	37cd4 <__asan_cplus_demangle_type@@Base+0x864>  // b.pmore
   38190:	ldr	x2, [x19, #24]
   38194:	mov	w5, #0xcccd                	// #52429
   38198:	mov	w3, w1
   3819c:	mov	w6, #0x7fffffff            	// #2147483647
   381a0:	add	x2, x2, #0x1
   381a4:	mov	w1, #0x0                   	// #0
   381a8:	movk	w5, #0xcccc, lsl #16
   381ac:	b	381cc <__asan_cplus_demangle_type@@Base+0xd5c>
   381b0:	sub	w0, w6, w0
   381b4:	mov	w3, w4
   381b8:	add	x2, x2, #0x1
   381bc:	umull	x0, w0, w5
   381c0:	lsr	x0, x0, #35
   381c4:	cmp	w0, w1
   381c8:	b.lt	37cd4 <__asan_cplus_demangle_type@@Base+0x864>  // b.tstop
   381cc:	str	x2, [x19, #24]
   381d0:	add	w1, w1, w1, lsl #2
   381d4:	ldrb	w4, [x2]
   381d8:	add	w1, w3, w1, lsl #1
   381dc:	sub	w1, w1, #0x30
   381e0:	sub	w0, w4, #0x30
   381e4:	and	w3, w0, #0xff
   381e8:	cmp	w3, #0x9
   381ec:	b.ls	381b0 <__asan_cplus_demangle_type@@Base+0xd40>  // b.plast
   381f0:	b	37cd4 <__asan_cplus_demangle_type@@Base+0x864>
   381f4:	ldp	x21, x22, [sp, #32]
   381f8:	ldr	x23, [sp, #48]
   381fc:	b	374d4 <__asan_cplus_demangle_type@@Base+0x64>
   38200:	mov	w0, #0xffffffff            	// #-1
   38204:	b	37b98 <__asan_cplus_demangle_type@@Base+0x728>
   38208:	add	x0, x3, #0x3
   3820c:	str	x0, [x19, #24]
   38210:	ldrb	w0, [x3, #3]
   38214:	sub	w1, w0, #0x30
   38218:	and	w1, w1, #0xff
   3821c:	cmp	w1, #0x9
   38220:	b.hi	3823c <__asan_cplus_demangle_type@@Base+0xdcc>  // b.pmore
   38224:	mov	w2, #0x1                   	// #1
   38228:	b	37b34 <__asan_cplus_demangle_type@@Base+0x6c4>
   3822c:	mov	x20, #0x0                   	// #0
   38230:	b	37a9c <__asan_cplus_demangle_type@@Base+0x62c>
   38234:	mov	x20, #0x0                   	// #0
   38238:	b	38030 <__asan_cplus_demangle_type@@Base+0xbc0>
   3823c:	mov	w0, #0x0                   	// #0
   38240:	b	37b94 <__asan_cplus_demangle_type@@Base+0x724>
   38244:	mov	w0, #0x0                   	// #0
   38248:	b	37b98 <__asan_cplus_demangle_type@@Base+0x728>
   3824c:	mov	x0, #0x0                   	// #0
   38250:	str	xzr, [sp, #72]
   38254:	stp	x21, x22, [sp, #32]
   38258:	str	x23, [sp, #48]
   3825c:	ldr	x0, [x0, #8]
   38260:	brk	#0x3e8
   38264:	mov	x0, #0x0                   	// #0
   38268:	stp	x21, x22, [sp, #32]
   3826c:	str	x23, [sp, #48]
   38270:	str	wzr, [x0]
   38274:	brk	#0x3e8
   38278:	stp	x29, x30, [sp, #-80]!
   3827c:	mov	x29, sp
   38280:	stp	x19, x20, [sp, #16]
   38284:	mov	x19, x0
   38288:	mov	w0, #0x2e                  	// #46
   3828c:	str	xzr, [sp, #72]
   38290:	ldr	x4, [x19, #24]
   38294:	ldrb	w1, [x4]
   38298:	cmp	w1, #0x45
   3829c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   382a0:	ccmp	w1, w0, #0x4, ne  // ne = any
   382a4:	b.eq	38378 <__asan_cplus_demangle_type@@Base+0xf08>  // b.none
   382a8:	mov	w20, #0x4f                  	// #79
   382ac:	stp	x21, x22, [sp, #32]
   382b0:	add	x22, sp, #0x48
   382b4:	mov	w21, #0x18                  	// #24
   382b8:	str	x23, [sp, #48]
   382bc:	mov	w23, w0
   382c0:	b	382fc <__asan_cplus_demangle_type@@Base+0xe8c>
   382c4:	ldp	x4, x3, [x19, #24]
   382c8:	smull	x1, w1, w21
   382cc:	add	x2, x3, x1
   382d0:	str	wzr, [x2, #4]
   382d4:	str	w5, [x19, #40]
   382d8:	str	w23, [x3, x1]
   382dc:	stp	x0, xzr, [x2, #8]
   382e0:	str	x2, [x22]
   382e4:	add	x22, x2, #0x10
   382e8:	ldrb	w1, [x4]
   382ec:	cmp	w1, #0x45
   382f0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   382f4:	ccmp	w1, w23, #0x4, ne  // ne = any
   382f8:	b.eq	3834c <__asan_cplus_demangle_type@@Base+0xedc>  // b.none
   382fc:	cmp	w1, #0x52
   38300:	mov	x0, x19
   38304:	ccmp	w1, w20, #0x4, ne  // ne = any
   38308:	b.ne	38318 <__asan_cplus_demangle_type@@Base+0xea8>  // b.any
   3830c:	ldrb	w1, [x4, #1]
   38310:	cmp	w1, #0x45
   38314:	b.eq	3834c <__asan_cplus_demangle_type@@Base+0xedc>  // b.none
   38318:	bl	6420 <__asan_cplus_demangle_type@plt>
   3831c:	cbz	x0, 38370 <__asan_cplus_demangle_type@@Base+0xf00>
   38320:	ldp	w1, w2, [x19, #40]
   38324:	add	w5, w1, #0x1
   38328:	cmp	w1, w2
   3832c:	b.lt	382c4 <__asan_cplus_demangle_type@@Base+0xe54>  // b.tstop
   38330:	ldr	x23, [sp, #48]
   38334:	str	xzr, [x22]
   38338:	ldp	x21, x22, [sp, #32]
   3833c:	mov	x0, #0x0                   	// #0
   38340:	ldp	x19, x20, [sp, #16]
   38344:	ldp	x29, x30, [sp], #80
   38348:	ret
   3834c:	ldr	x0, [sp, #72]
   38350:	cbz	x0, 38370 <__asan_cplus_demangle_type@@Base+0xf00>
   38354:	ldr	x1, [x0, #16]
   38358:	cbz	x1, 38388 <__asan_cplus_demangle_type@@Base+0xf18>
   3835c:	ldp	x19, x20, [sp, #16]
   38360:	ldp	x21, x22, [sp, #32]
   38364:	ldr	x23, [sp, #48]
   38368:	ldp	x29, x30, [sp], #80
   3836c:	ret
   38370:	ldp	x21, x22, [sp, #32]
   38374:	ldr	x23, [sp, #48]
   38378:	mov	x0, #0x0                   	// #0
   3837c:	ldp	x19, x20, [sp, #16]
   38380:	ldp	x29, x30, [sp], #80
   38384:	ret
   38388:	ldr	x1, [x0, #8]
   3838c:	ldr	w2, [x1]
   38390:	cmp	w2, #0x27
   38394:	b.ne	3835c <__asan_cplus_demangle_type@@Base+0xeec>  // b.any
   38398:	ldr	x1, [x1, #8]
   3839c:	ldr	w2, [x1, #28]
   383a0:	cmp	w2, #0x9
   383a4:	b.ne	3835c <__asan_cplus_demangle_type@@Base+0xeec>  // b.any
   383a8:	ldr	w2, [x1, #8]
   383ac:	ldr	w1, [x19, #72]
   383b0:	ldp	x21, x22, [sp, #32]
   383b4:	sub	w1, w1, w2
   383b8:	ldr	x23, [sp, #48]
   383bc:	str	w1, [x19, #72]
   383c0:	str	xzr, [x0, #8]
   383c4:	b	38340 <__asan_cplus_demangle_type@@Base+0xed0>
   383c8:	stp	x29, x30, [sp, #-48]!
   383cc:	mov	x29, sp
   383d0:	ldr	x1, [x0, #24]
   383d4:	stp	x19, x20, [sp, #16]
   383d8:	mov	x19, x0
   383dc:	ldrb	w10, [x1]
   383e0:	cbz	w10, 384ac <__asan_cplus_demangle_type@@Base+0x103c>
   383e4:	add	x2, x1, #0x1
   383e8:	str	x2, [x0, #24]
   383ec:	ldrb	w10, [x1, #1]
   383f0:	ldrb	w8, [x1]
   383f4:	cbnz	w10, 384b4 <__asan_cplus_demangle_type@@Base+0x1044>
   383f8:	adrp	x5, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   383fc:	mov	w4, #0x43                  	// #67
   38400:	mov	w2, #0x0                   	// #0
   38404:	mov	w7, #0x18                  	// #24
   38408:	ldr	x5, [x5, #3944]
   3840c:	nop
   38410:	sub	w1, w4, w2
   38414:	add	w1, w1, w1, lsr #31
   38418:	add	w1, w2, w1, asr #1
   3841c:	smull	x3, w1, w7
   38420:	add	x9, x3, x5
   38424:	ldr	x3, [x3, x5]
   38428:	ldrb	w6, [x3]
   3842c:	cmp	w6, w8
   38430:	b.eq	38458 <__asan_cplus_demangle_type@@Base+0xfe8>  // b.none
   38434:	b.ls	384a4 <__asan_cplus_demangle_type@@Base+0x1034>  // b.plast
   38438:	mov	w4, w1
   3843c:	cmp	w2, w4
   38440:	b.ne	38410 <__asan_cplus_demangle_type@@Base+0xfa0>  // b.any
   38444:	mov	x20, #0x0                   	// #0
   38448:	mov	x0, x20
   3844c:	ldp	x19, x20, [sp, #16]
   38450:	ldp	x29, x30, [sp], #48
   38454:	ret
   38458:	ldrb	w3, [x3, #1]
   3845c:	cmp	w3, w10
   38460:	b.ne	38434 <__asan_cplus_demangle_type@@Base+0xfc4>  // b.any
   38464:	ldp	w0, w1, [x19, #40]
   38468:	cmp	w0, w1
   3846c:	b.ge	38444 <__asan_cplus_demangle_type@@Base+0xfd4>  // b.tcont
   38470:	ldr	x1, [x19, #32]
   38474:	smull	x7, w0, w7
   38478:	add	w0, w0, #0x1
   3847c:	mov	w2, #0x32                  	// #50
   38480:	add	x20, x1, x7
   38484:	str	wzr, [x20, #4]
   38488:	str	w0, [x19, #40]
   3848c:	mov	x0, x20
   38490:	str	w2, [x1, x7]
   38494:	str	x9, [x20, #8]
   38498:	ldp	x19, x20, [sp, #16]
   3849c:	ldp	x29, x30, [sp], #48
   384a0:	ret
   384a4:	add	w2, w1, #0x1
   384a8:	b	3843c <__asan_cplus_demangle_type@@Base+0xfcc>
   384ac:	mov	w8, #0x0                   	// #0
   384b0:	b	383f8 <__asan_cplus_demangle_type@@Base+0xf88>
   384b4:	str	x21, [sp, #32]
   384b8:	add	x2, x1, #0x2
   384bc:	str	x2, [x0, #24]
   384c0:	cmp	w8, #0x76
   384c4:	ldrb	w10, [x1, #1]
   384c8:	b.ne	384e4 <__asan_cplus_demangle_type@@Base+0x1074>  // b.any
   384cc:	sub	w21, w10, #0x30
   384d0:	and	w1, w21, #0xff
   384d4:	cmp	w1, #0x9
   384d8:	b.ls	38540 <__asan_cplus_demangle_type@@Base+0x10d0>  // b.plast
   384dc:	ldr	x21, [sp, #32]
   384e0:	b	383f8 <__asan_cplus_demangle_type@@Base+0xf88>
   384e4:	cmp	w10, #0x76
   384e8:	mov	w1, #0x63                  	// #99
   384ec:	ccmp	w8, w1, #0x0, eq  // eq = none
   384f0:	b.ne	384dc <__asan_cplus_demangle_type@@Base+0x106c>  // b.any
   384f4:	ldp	w1, w21, [x0, #76]
   384f8:	cmp	w1, #0x0
   384fc:	cset	w1, eq  // eq = none
   38500:	str	w1, [x0, #80]
   38504:	bl	6420 <__asan_cplus_demangle_type@plt>
   38508:	mov	x2, x0
   3850c:	ldr	w1, [x19, #80]
   38510:	mov	x3, #0x0                   	// #0
   38514:	cbz	w1, 38584 <__asan_cplus_demangle_type@@Base+0x1114>
   38518:	mov	x0, x19
   3851c:	mov	w1, #0x35                  	// #53
   38520:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38524:	mov	x20, x0
   38528:	str	w21, [x19, #80]
   3852c:	mov	x0, x20
   38530:	ldp	x19, x20, [sp, #16]
   38534:	ldr	x21, [sp, #32]
   38538:	ldp	x29, x30, [sp], #48
   3853c:	ret
   38540:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   38544:	mov	x2, x0
   38548:	ldp	w20, w0, [x19, #40]
   3854c:	cmp	w20, w0
   38550:	b.ge	38598 <__asan_cplus_demangle_type@@Base+0x1128>  // b.tcont
   38554:	ldr	x1, [x19, #32]
   38558:	mov	w3, #0x18                  	// #24
   3855c:	add	w0, w20, #0x1
   38560:	smaddl	x20, w20, w3, x1
   38564:	str	wzr, [x20, #4]
   38568:	str	w0, [x19, #40]
   3856c:	mov	w1, w21
   38570:	mov	x0, x20
   38574:	bl	67e0 <__asan_cplus_demangle_fill_extended_operator@plt>
   38578:	ldr	x21, [sp, #32]
   3857c:	cbnz	w0, 38448 <__asan_cplus_demangle_type@@Base+0xfd8>
   38580:	b	38444 <__asan_cplus_demangle_type@@Base+0xfd4>
   38584:	mov	x0, x19
   38588:	mov	w1, #0x34                  	// #52
   3858c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38590:	mov	x20, x0
   38594:	b	38528 <__asan_cplus_demangle_type@@Base+0x10b8>
   38598:	mov	x20, #0x0                   	// #0
   3859c:	b	3856c <__asan_cplus_demangle_type@@Base+0x10fc>
   385a0:	stp	x29, x30, [sp, #-64]!
   385a4:	mov	x29, sp
   385a8:	ldr	x3, [x0, #24]
   385ac:	stp	x19, x20, [sp, #16]
   385b0:	mov	x19, x0
   385b4:	str	x23, [sp, #48]
   385b8:	ldrb	w4, [x3]
   385bc:	sub	w1, w4, #0x30
   385c0:	and	w1, w1, #0xff
   385c4:	cmp	w1, #0x9
   385c8:	b.ls	386d8 <__asan_cplus_demangle_type@@Base+0x1268>  // b.plast
   385cc:	sub	w1, w4, #0x61
   385d0:	and	w1, w1, #0xff
   385d4:	cmp	w1, #0x19
   385d8:	b.hi	38624 <__asan_cplus_demangle_type@@Base+0x11b4>  // b.pmore
   385dc:	cmp	w4, #0x6f
   385e0:	b.eq	387c8 <__asan_cplus_demangle_type@@Base+0x1358>  // b.none
   385e4:	mov	x0, x19
   385e8:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   385ec:	mov	x23, x0
   385f0:	cbz	x0, 38600 <__asan_cplus_demangle_type@@Base+0x1190>
   385f4:	ldr	w0, [x0]
   385f8:	cmp	w0, #0x32
   385fc:	b.eq	3887c <__asan_cplus_demangle_type@@Base+0x140c>  // b.none
   38600:	ldr	x3, [x19, #24]
   38604:	ldrb	w1, [x3]
   38608:	cmp	w1, #0x42
   3860c:	b.eq	386f0 <__asan_cplus_demangle_type@@Base+0x1280>  // b.none
   38610:	mov	x0, x23
   38614:	ldp	x19, x20, [sp, #16]
   38618:	ldr	x23, [sp, #48]
   3861c:	ldp	x29, x30, [sp], #64
   38620:	ret
   38624:	sub	w1, w4, #0x43
   38628:	and	w1, w1, #0xff
   3862c:	cmp	w1, #0x1
   38630:	b.ls	387e0 <__asan_cplus_demangle_type@@Base+0x1370>  // b.plast
   38634:	cmp	w4, #0x4c
   38638:	b.eq	38790 <__asan_cplus_demangle_type@@Base+0x1320>  // b.none
   3863c:	cmp	w4, #0x55
   38640:	b.ne	387b0 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   38644:	ldrb	w1, [x3, #1]
   38648:	cmp	w1, #0x6c
   3864c:	b.eq	3895c <__asan_cplus_demangle_type@@Base+0x14ec>  // b.none
   38650:	cmp	w1, #0x74
   38654:	b.ne	387b0 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   38658:	add	x2, x3, #0x1
   3865c:	str	x2, [x0, #24]
   38660:	ldrb	w1, [x3, #1]
   38664:	cmp	w1, #0x74
   38668:	b.ne	38950 <__asan_cplus_demangle_type@@Base+0x14e0>  // b.any
   3866c:	add	x3, x3, #0x2
   38670:	str	x3, [x0, #24]
   38674:	bl	2e290 <__asan_backtrace_create_state@@Base+0x608>
   38678:	tbnz	w0, #31, 38a78 <__asan_cplus_demangle_type@@Base+0x1608>
   3867c:	ldp	w1, w2, [x19, #40]
   38680:	cmp	w1, w2
   38684:	b.ge	38a78 <__asan_cplus_demangle_type@@Base+0x1608>  // b.tcont
   38688:	ldp	x3, x4, [x19, #24]
   3868c:	mov	w2, #0x18                  	// #24
   38690:	add	w7, w1, #0x1
   38694:	mov	w5, #0x48                  	// #72
   38698:	smull	x1, w1, w2
   3869c:	sxtw	x0, w0
   386a0:	ldp	w2, w6, [x19, #56]
   386a4:	add	x23, x4, x1
   386a8:	cmp	w2, w6
   386ac:	str	wzr, [x23, #4]
   386b0:	str	w7, [x19, #40]
   386b4:	str	w5, [x4, x1]
   386b8:	str	x0, [x23, #8]
   386bc:	b.ge	38a6c <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   386c0:	ldr	x1, [x19, #48]
   386c4:	add	w0, w2, #0x1
   386c8:	str	x23, [x1, w2, sxtw #3]
   386cc:	str	w0, [x19, #56]
   386d0:	ldrb	w1, [x3]
   386d4:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   386d8:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   386dc:	mov	x23, x0
   386e0:	ldr	x3, [x19, #24]
   386e4:	ldrb	w1, [x3]
   386e8:	cmp	w1, #0x42
   386ec:	b.ne	38610 <__asan_cplus_demangle_type@@Base+0x11a0>  // b.any
   386f0:	mov	w20, #0x4c                  	// #76
   386f4:	stp	x21, x22, [sp, #32]
   386f8:	mov	w21, #0x18                  	// #24
   386fc:	ldr	x22, [x19, #64]
   38700:	b	38744 <__asan_cplus_demangle_type@@Base+0x12d4>
   38704:	ldp	w1, w2, [x19, #40]
   38708:	add	w4, w1, #0x1
   3870c:	cmp	w1, w2
   38710:	b.ge	38760 <__asan_cplus_demangle_type@@Base+0x12f0>  // b.tcont
   38714:	ldr	x3, [x19, #32]
   38718:	smull	x1, w1, w21
   3871c:	add	x2, x3, x1
   38720:	str	wzr, [x2, #4]
   38724:	str	w4, [x19, #40]
   38728:	str	w20, [x3, x1]
   3872c:	ldr	x3, [x19, #24]
   38730:	stp	x23, x0, [x2, #8]
   38734:	mov	x23, x2
   38738:	ldrb	w1, [x3]
   3873c:	cmp	w1, #0x42
   38740:	b.ne	38774 <__asan_cplus_demangle_type@@Base+0x1304>  // b.any
   38744:	add	x3, x3, #0x1
   38748:	str	x3, [x19, #24]
   3874c:	mov	x0, x19
   38750:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   38754:	cmp	x23, #0x0
   38758:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   3875c:	b.ne	38704 <__asan_cplus_demangle_type@@Base+0x1294>  // b.any
   38760:	ldr	x3, [x19, #24]
   38764:	mov	x23, #0x0                   	// #0
   38768:	ldrb	w1, [x3]
   3876c:	cmp	w1, #0x42
   38770:	b.eq	38744 <__asan_cplus_demangle_type@@Base+0x12d4>  // b.none
   38774:	str	x22, [x19, #64]
   38778:	mov	x0, x23
   3877c:	ldp	x19, x20, [sp, #16]
   38780:	ldp	x21, x22, [sp, #32]
   38784:	ldr	x23, [sp, #48]
   38788:	ldp	x29, x30, [sp], #64
   3878c:	ret
   38790:	add	x3, x3, #0x1
   38794:	str	x3, [x0, #24]
   38798:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   3879c:	mov	x23, x0
   387a0:	cbz	x0, 387b0 <__asan_cplus_demangle_type@@Base+0x1340>
   387a4:	mov	x0, x19
   387a8:	bl	2e340 <__asan_backtrace_create_state@@Base+0x6b8>
   387ac:	cbnz	w0, 38600 <__asan_cplus_demangle_type@@Base+0x1190>
   387b0:	mov	x23, #0x0                   	// #0
   387b4:	mov	x0, x23
   387b8:	ldp	x19, x20, [sp, #16]
   387bc:	ldr	x23, [sp, #48]
   387c0:	ldp	x29, x30, [sp], #64
   387c4:	ret
   387c8:	ldrb	w0, [x3, #1]
   387cc:	cmp	w0, #0x6e
   387d0:	b.ne	385e4 <__asan_cplus_demangle_type@@Base+0x1174>  // b.any
   387d4:	add	x3, x3, #0x2
   387d8:	str	x3, [x19, #24]
   387dc:	b	385e4 <__asan_cplus_demangle_type@@Base+0x1174>
   387e0:	ldr	x2, [x0, #64]
   387e4:	cbz	x2, 388dc <__asan_cplus_demangle_type@@Base+0x146c>
   387e8:	ldr	w0, [x2]
   387ec:	cbnz	w0, 388d4 <__asan_cplus_demangle_type@@Base+0x1464>
   387f0:	ldr	w1, [x2, #16]
   387f4:	ldr	w0, [x19, #72]
   387f8:	add	w0, w0, w1
   387fc:	str	w0, [x19, #72]
   38800:	ldrb	w1, [x3]
   38804:	cmp	w1, #0x43
   38808:	b.eq	388e4 <__asan_cplus_demangle_type@@Base+0x1474>  // b.none
   3880c:	cmp	w1, #0x44
   38810:	b.ne	38954 <__asan_cplus_demangle_type@@Base+0x14e4>  // b.any
   38814:	ldrb	w0, [x3, #1]
   38818:	cmp	w0, #0x32
   3881c:	b.eq	38a84 <__asan_cplus_demangle_type@@Base+0x1614>  // b.none
   38820:	b.hi	38a0c <__asan_cplus_demangle_type@@Base+0x159c>  // b.pmore
   38824:	cmp	w0, #0x30
   38828:	b.eq	38a24 <__asan_cplus_demangle_type@@Base+0x15b4>  // b.none
   3882c:	cmp	w0, #0x31
   38830:	mov	w1, #0x2                   	// #2
   38834:	b.ne	387b0 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   38838:	ldp	w23, w0, [x19, #40]
   3883c:	add	x3, x3, #0x2
   38840:	str	x3, [x19, #24]
   38844:	cmp	w23, w0
   38848:	b.ge	38a8c <__asan_cplus_demangle_type@@Base+0x161c>  // b.tcont
   3884c:	ldr	x3, [x19, #32]
   38850:	mov	w4, #0x18                  	// #24
   38854:	add	w0, w23, #0x1
   38858:	smaddl	x23, w23, w4, x3
   3885c:	str	wzr, [x23, #4]
   38860:	str	w0, [x19, #40]
   38864:	mov	x0, x23
   38868:	bl	6a10 <__asan_cplus_demangle_fill_dtor@plt>
   3886c:	ldr	x3, [x19, #24]
   38870:	cbz	w0, 38944 <__asan_cplus_demangle_type@@Base+0x14d4>
   38874:	ldrb	w1, [x3]
   38878:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   3887c:	ldr	x3, [x23, #8]
   38880:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   38884:	ldr	w2, [x19, #72]
   38888:	add	x1, x1, #0x310
   3888c:	ldr	x0, [x3]
   38890:	add	w2, w2, #0x7
   38894:	ldr	w3, [x3, #16]
   38898:	add	w2, w2, w3
   3889c:	str	w2, [x19, #72]
   388a0:	bl	67f0 <__asan_internal_strcmp@plt>
   388a4:	cbnz	w0, 38600 <__asan_cplus_demangle_type@@Base+0x1190>
   388a8:	mov	x0, x19
   388ac:	bl	36e90 <__asan_cplus_demangle_fill_name@@Base+0x30>
   388b0:	mov	x2, x23
   388b4:	mov	x3, x0
   388b8:	mov	w1, #0x37                  	// #55
   388bc:	mov	x0, x19
   388c0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   388c4:	mov	x23, x0
   388c8:	ldr	x3, [x19, #24]
   388cc:	ldrb	w1, [x3]
   388d0:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   388d4:	cmp	w0, #0x18
   388d8:	b.eq	387f0 <__asan_cplus_demangle_type@@Base+0x1380>  // b.none
   388dc:	cmp	w4, #0x43
   388e0:	b.ne	38814 <__asan_cplus_demangle_type@@Base+0x13a4>  // b.any
   388e4:	ldrb	w0, [x3, #1]
   388e8:	cmp	w0, #0x49
   388ec:	b.eq	38a34 <__asan_cplus_demangle_type@@Base+0x15c4>  // b.none
   388f0:	sub	w1, w0, #0x31
   388f4:	and	w1, w1, #0xff
   388f8:	cmp	w1, #0x4
   388fc:	b.hi	387b0 <__asan_cplus_demangle_type@@Base+0x1340>  // b.pmore
   38900:	sub	w20, w0, #0x30
   38904:	add	x3, x3, #0x2
   38908:	str	x3, [x19, #24]
   3890c:	ldp	w23, w0, [x19, #40]
   38910:	cmp	w23, w0
   38914:	b.ge	38a94 <__asan_cplus_demangle_type@@Base+0x1624>  // b.tcont
   38918:	ldr	x1, [x19, #32]
   3891c:	mov	w3, #0x18                  	// #24
   38920:	add	w0, w23, #0x1
   38924:	smaddl	x23, w23, w3, x1
   38928:	str	wzr, [x23, #4]
   3892c:	str	w0, [x19, #40]
   38930:	mov	w1, w20
   38934:	mov	x0, x23
   38938:	bl	6850 <__asan_cplus_demangle_fill_ctor@plt>
   3893c:	ldr	x3, [x19, #24]
   38940:	cbnz	w0, 38874 <__asan_cplus_demangle_type@@Base+0x1404>
   38944:	mov	x23, #0x0                   	// #0
   38948:	ldrb	w1, [x3]
   3894c:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   38950:	mov	x3, x2
   38954:	mov	x23, #0x0                   	// #0
   38958:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   3895c:	add	x2, x3, #0x1
   38960:	str	x2, [x0, #24]
   38964:	ldrb	w1, [x3, #1]
   38968:	cmp	w1, #0x6c
   3896c:	b.ne	38950 <__asan_cplus_demangle_type@@Base+0x14e0>  // b.any
   38970:	add	x3, x3, #0x2
   38974:	str	x3, [x0, #24]
   38978:	mov	x23, #0x0                   	// #0
   3897c:	bl	38278 <__asan_cplus_demangle_type@@Base+0xe08>
   38980:	mov	x10, x0
   38984:	ldr	x3, [x19, #24]
   38988:	ldrb	w1, [x3]
   3898c:	cbz	x0, 38608 <__asan_cplus_demangle_type@@Base+0x1198>
   38990:	cmp	w1, #0x45
   38994:	b.ne	38608 <__asan_cplus_demangle_type@@Base+0x1198>  // b.any
   38998:	add	x3, x3, #0x1
   3899c:	str	x3, [x19, #24]
   389a0:	mov	x0, x19
   389a4:	bl	2e290 <__asan_backtrace_create_state@@Base+0x608>
   389a8:	tbnz	w0, #31, 38600 <__asan_cplus_demangle_type@@Base+0x1190>
   389ac:	ldp	w1, w2, [x19, #40]
   389b0:	ldr	x3, [x19, #24]
   389b4:	cmp	w1, w2
   389b8:	b.ge	38a6c <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   389bc:	mov	w2, #0x18                  	// #24
   389c0:	add	w6, w1, #0x1
   389c4:	ldr	x4, [x19, #32]
   389c8:	smull	x1, w1, w2
   389cc:	ldp	w2, w7, [x19, #56]
   389d0:	add	x23, x4, x1
   389d4:	mov	w5, #0x46                  	// #70
   389d8:	cmp	w2, w7
   389dc:	str	wzr, [x23, #4]
   389e0:	str	w6, [x19, #40]
   389e4:	str	w5, [x4, x1]
   389e8:	str	x10, [x23, #8]
   389ec:	str	w0, [x23, #16]
   389f0:	b.ge	38a6c <__asan_cplus_demangle_type@@Base+0x15fc>  // b.tcont
   389f4:	ldr	x1, [x19, #48]
   389f8:	add	w0, w2, #0x1
   389fc:	str	x23, [x1, w2, sxtw #3]
   38a00:	str	w0, [x19, #56]
   38a04:	ldrb	w1, [x3]
   38a08:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   38a0c:	cmp	w0, #0x34
   38a10:	b.eq	38a2c <__asan_cplus_demangle_type@@Base+0x15bc>  // b.none
   38a14:	cmp	w0, #0x35
   38a18:	b.ne	387b0 <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   38a1c:	mov	w1, #0x5                   	// #5
   38a20:	b	38838 <__asan_cplus_demangle_type@@Base+0x13c8>
   38a24:	mov	w1, #0x1                   	// #1
   38a28:	b	38838 <__asan_cplus_demangle_type@@Base+0x13c8>
   38a2c:	mov	w1, #0x4                   	// #4
   38a30:	b	38838 <__asan_cplus_demangle_type@@Base+0x13c8>
   38a34:	add	x2, x3, #0x1
   38a38:	str	x2, [x19, #24]
   38a3c:	ldrb	w0, [x3, #2]
   38a40:	sub	w1, w0, #0x31
   38a44:	and	w1, w1, #0xff
   38a48:	cmp	w1, #0x4
   38a4c:	b.hi	38a9c <__asan_cplus_demangle_type@@Base+0x162c>  // b.pmore
   38a50:	add	x3, x3, #0x3
   38a54:	str	x3, [x19, #24]
   38a58:	sub	w20, w0, #0x30
   38a5c:	mov	x0, x19
   38a60:	bl	6420 <__asan_cplus_demangle_type@plt>
   38a64:	ldr	x2, [x19, #64]
   38a68:	b	3890c <__asan_cplus_demangle_type@@Base+0x149c>
   38a6c:	ldrb	w1, [x3]
   38a70:	mov	x23, #0x0                   	// #0
   38a74:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   38a78:	mov	x23, #0x0                   	// #0
   38a7c:	ldr	x3, [x19, #24]
   38a80:	b	38948 <__asan_cplus_demangle_type@@Base+0x14d8>
   38a84:	mov	w1, #0x3                   	// #3
   38a88:	b	38838 <__asan_cplus_demangle_type@@Base+0x13c8>
   38a8c:	mov	x23, #0x0                   	// #0
   38a90:	b	38864 <__asan_cplus_demangle_type@@Base+0x13f4>
   38a94:	mov	x23, #0x0                   	// #0
   38a98:	b	38930 <__asan_cplus_demangle_type@@Base+0x14c0>
   38a9c:	ldrb	w1, [x3, #1]
   38aa0:	mov	x23, #0x0                   	// #0
   38aa4:	mov	x3, x2
   38aa8:	b	38608 <__asan_cplus_demangle_type@@Base+0x1198>
   38aac:	nop
   38ab0:	stp	x29, x30, [sp, #-32]!
   38ab4:	mov	x29, sp
   38ab8:	stp	x19, x20, [sp, #16]
   38abc:	mov	x19, x0
   38ac0:	ldr	w0, [x0, #16]
   38ac4:	tbnz	w0, #18, 38b00 <__asan_cplus_demangle_type@@Base+0x1690>
   38ac8:	ldr	w2, [x19, #84]
   38acc:	cmp	w2, #0x800
   38ad0:	b.hi	38b10 <__asan_cplus_demangle_type@@Base+0x16a0>  // b.pmore
   38ad4:	ldr	x1, [x19, #24]
   38ad8:	add	w0, w2, #0x1
   38adc:	str	w0, [x19, #84]
   38ae0:	mov	x0, #0x0                   	// #0
   38ae4:	ldrb	w3, [x1]
   38ae8:	cmp	w3, #0x46
   38aec:	b.eq	38b20 <__asan_cplus_demangle_type@@Base+0x16b0>  // b.none
   38af0:	str	w2, [x19, #84]
   38af4:	ldp	x19, x20, [sp, #16]
   38af8:	ldp	x29, x30, [sp], #32
   38afc:	ret
   38b00:	ldr	x1, [x19, #24]
   38b04:	ldrb	w0, [x1]
   38b08:	cmp	w0, #0x46
   38b0c:	b.eq	38b20 <__asan_cplus_demangle_type@@Base+0x16b0>  // b.none
   38b10:	mov	x0, #0x0                   	// #0
   38b14:	ldp	x19, x20, [sp, #16]
   38b18:	ldp	x29, x30, [sp], #32
   38b1c:	ret
   38b20:	add	x0, x1, #0x1
   38b24:	str	x0, [x19, #24]
   38b28:	ldrb	w2, [x1, #1]
   38b2c:	cmp	w2, #0x59
   38b30:	b.ne	38b40 <__asan_cplus_demangle_type@@Base+0x16d0>  // b.any
   38b34:	add	x0, x1, #0x2
   38b38:	str	x0, [x19, #24]
   38b3c:	ldrb	w2, [x1, #2]
   38b40:	cmp	w2, #0x4a
   38b44:	b.ne	38b50 <__asan_cplus_demangle_type@@Base+0x16e0>  // b.any
   38b48:	add	x0, x0, #0x1
   38b4c:	str	x0, [x19, #24]
   38b50:	mov	x0, x19
   38b54:	bl	6420 <__asan_cplus_demangle_type@plt>
   38b58:	mov	x20, x0
   38b5c:	cbz	x0, 38c08 <__asan_cplus_demangle_type@@Base+0x1798>
   38b60:	mov	x0, x19
   38b64:	bl	38278 <__asan_cplus_demangle_type@@Base+0xe08>
   38b68:	mov	x3, x0
   38b6c:	cbz	x0, 38c08 <__asan_cplus_demangle_type@@Base+0x1798>
   38b70:	mov	x2, x20
   38b74:	mov	x0, x19
   38b78:	mov	w1, #0x29                  	// #41
   38b7c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38b80:	ldr	x2, [x19, #24]
   38b84:	mov	w3, #0x4f                  	// #79
   38b88:	ldrb	w1, [x2]
   38b8c:	cmp	w1, #0x52
   38b90:	ccmp	w1, w3, #0x4, ne  // ne = any
   38b94:	b.ne	38bd8 <__asan_cplus_demangle_type@@Base+0x1768>  // b.any
   38b98:	ldr	w4, [x19, #72]
   38b9c:	cmp	w1, #0x52
   38ba0:	mov	w1, #0x20                  	// #32
   38ba4:	add	w3, w4, #0x3
   38ba8:	b.ne	38bb4 <__asan_cplus_demangle_type@@Base+0x1744>  // b.any
   38bac:	add	w3, w4, #0x2
   38bb0:	mov	w1, #0x1f                  	// #31
   38bb4:	add	x2, x2, #0x1
   38bb8:	str	x2, [x19, #24]
   38bbc:	str	w3, [x19, #72]
   38bc0:	mov	x2, x0
   38bc4:	mov	x3, #0x0                   	// #0
   38bc8:	mov	x0, x19
   38bcc:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38bd0:	ldr	x2, [x19, #24]
   38bd4:	ldrb	w1, [x2]
   38bd8:	cmp	w1, #0x45
   38bdc:	b.eq	38bfc <__asan_cplus_demangle_type@@Base+0x178c>  // b.none
   38be0:	mov	x0, #0x0                   	// #0
   38be4:	ldr	w1, [x19, #16]
   38be8:	tbnz	w1, #18, 38b14 <__asan_cplus_demangle_type@@Base+0x16a4>
   38bec:	ldr	w2, [x19, #84]
   38bf0:	sub	w2, w2, #0x1
   38bf4:	str	w2, [x19, #84]
   38bf8:	b	38af4 <__asan_cplus_demangle_type@@Base+0x1684>
   38bfc:	add	x2, x2, #0x1
   38c00:	str	x2, [x19, #24]
   38c04:	b	38be4 <__asan_cplus_demangle_type@@Base+0x1774>
   38c08:	mov	x0, #0x0                   	// #0
   38c0c:	b	38b80 <__asan_cplus_demangle_type@@Base+0x1710>
   38c10:	stp	x29, x30, [sp, #-112]!
   38c14:	mov	x29, sp
   38c18:	ldr	x2, [x0, #24]
   38c1c:	stp	x19, x20, [sp, #16]
   38c20:	mov	x19, x0
   38c24:	str	xzr, [sp, #104]
   38c28:	ldrb	w3, [x2]
   38c2c:	cmp	w3, w1, uxtb
   38c30:	b.eq	392cc <__asan_cplus_demangle_type@@Base+0x1e5c>  // b.none
   38c34:	stp	x21, x22, [sp, #32]
   38c38:	add	x21, sp, #0x68
   38c3c:	mov	w22, #0x1                   	// #1
   38c40:	stp	x23, x24, [sp, #48]
   38c44:	adrp	x24, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   38c48:	and	w23, w1, #0xff
   38c4c:	add	x24, x24, #0x228
   38c50:	stp	x25, x26, [sp, #64]
   38c54:	adrp	x25, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   38c58:	add	x25, x25, #0x140
   38c5c:	stp	x27, x28, [sp, #80]
   38c60:	ldr	w26, [x19, #76]
   38c64:	str	w22, [x19, #76]
   38c68:	ldrb	w0, [x2]
   38c6c:	cmp	w0, #0x4c
   38c70:	b.eq	38dfc <__asan_cplus_demangle_type@@Base+0x198c>  // b.none
   38c74:	cmp	w0, #0x54
   38c78:	b.eq	38e98 <__asan_cplus_demangle_type@@Base+0x1a28>  // b.none
   38c7c:	cmp	w0, #0x73
   38c80:	b.eq	38d94 <__asan_cplus_demangle_type@@Base+0x1924>  // b.none
   38c84:	cmp	w0, #0x66
   38c88:	b.ne	38cec <__asan_cplus_demangle_type@@Base+0x187c>  // b.any
   38c8c:	ldrb	w0, [x2, #1]
   38c90:	cmp	w0, #0x70
   38c94:	b.eq	38ea8 <__asan_cplus_demangle_type@@Base+0x1a38>  // b.none
   38c98:	mov	x0, x19
   38c9c:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   38ca0:	mov	x20, x0
   38ca4:	cbz	x0, 38cc8 <__asan_cplus_demangle_type@@Base+0x1858>
   38ca8:	ldr	w0, [x0]
   38cac:	cmp	w0, #0x32
   38cb0:	b.eq	38fc0 <__asan_cplus_demangle_type@@Base+0x1b50>  // b.none
   38cb4:	cmp	w0, #0x33
   38cb8:	b.eq	39054 <__asan_cplus_demangle_type@@Base+0x1be4>  // b.none
   38cbc:	cmp	w0, #0x34
   38cc0:	b.eq	391c4 <__asan_cplus_demangle_type@@Base+0x1d54>  // b.none
   38cc4:	mov	x20, #0x0                   	// #0
   38cc8:	str	w26, [x19, #76]
   38ccc:	mov	x0, x20
   38cd0:	ldp	x19, x20, [sp, #16]
   38cd4:	ldp	x21, x22, [sp, #32]
   38cd8:	ldp	x23, x24, [sp, #48]
   38cdc:	ldp	x25, x26, [sp, #64]
   38ce0:	ldp	x27, x28, [sp, #80]
   38ce4:	ldp	x29, x30, [sp], #112
   38ce8:	ret
   38cec:	sub	w1, w0, #0x30
   38cf0:	and	w1, w1, #0xff
   38cf4:	cmp	w1, #0x9
   38cf8:	b.hi	38e18 <__asan_cplus_demangle_type@@Base+0x19a8>  // b.pmore
   38cfc:	mov	x0, x19
   38d00:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   38d04:	mov	x20, x0
   38d08:	cbz	x0, 38cc8 <__asan_cplus_demangle_type@@Base+0x1858>
   38d0c:	ldr	x0, [x19, #24]
   38d10:	ldrb	w1, [x0]
   38d14:	cmp	w1, #0x49
   38d18:	b.eq	38f10 <__asan_cplus_demangle_type@@Base+0x1aa0>  // b.none
   38d1c:	ldp	w1, w0, [x19, #40]
   38d20:	str	w26, [x19, #76]
   38d24:	cmp	w1, w0
   38d28:	b.ge	38dd4 <__asan_cplus_demangle_type@@Base+0x1964>  // b.tcont
   38d2c:	ldp	x2, x3, [x19, #24]
   38d30:	mov	w0, #0x18                  	// #24
   38d34:	add	w5, w1, #0x1
   38d38:	mov	w4, #0x2e                  	// #46
   38d3c:	smull	x1, w1, w0
   38d40:	add	x0, x3, x1
   38d44:	str	wzr, [x0, #4]
   38d48:	str	w5, [x19, #40]
   38d4c:	str	w4, [x3, x1]
   38d50:	stp	x20, xzr, [x0, #8]
   38d54:	str	x0, [x21]
   38d58:	add	x21, x0, #0x10
   38d5c:	ldrb	w0, [x2]
   38d60:	cmp	w0, w23
   38d64:	b.ne	38c60 <__asan_cplus_demangle_type@@Base+0x17f0>  // b.any
   38d68:	ldr	x20, [sp, #104]
   38d6c:	add	x2, x2, #0x1
   38d70:	str	x2, [x19, #24]
   38d74:	mov	x0, x20
   38d78:	ldp	x19, x20, [sp, #16]
   38d7c:	ldp	x21, x22, [sp, #32]
   38d80:	ldp	x23, x24, [sp, #48]
   38d84:	ldp	x25, x26, [sp, #64]
   38d88:	ldp	x27, x28, [sp, #80]
   38d8c:	ldp	x29, x30, [sp], #112
   38d90:	ret
   38d94:	ldrb	w0, [x2, #1]
   38d98:	cmp	w0, #0x72
   38d9c:	b.eq	38f4c <__asan_cplus_demangle_type@@Base+0x1adc>  // b.none
   38da0:	cmp	w0, #0x70
   38da4:	b.ne	38c98 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   38da8:	add	x2, x2, #0x2
   38dac:	str	x2, [x19, #24]
   38db0:	mov	x0, x19
   38db4:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   38db8:	mov	x2, x0
   38dbc:	mov	x3, #0x0                   	// #0
   38dc0:	mov	x0, x19
   38dc4:	mov	w1, #0x4b                  	// #75
   38dc8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38dcc:	mov	x20, x0
   38dd0:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   38dd4:	str	xzr, [x21]
   38dd8:	mov	x20, #0x0                   	// #0
   38ddc:	mov	x0, x20
   38de0:	ldp	x19, x20, [sp, #16]
   38de4:	ldp	x21, x22, [sp, #32]
   38de8:	ldp	x23, x24, [sp, #48]
   38dec:	ldp	x25, x26, [sp, #64]
   38df0:	ldp	x27, x28, [sp, #80]
   38df4:	ldp	x29, x30, [sp], #112
   38df8:	ret
   38dfc:	mov	x0, x19
   38e00:	bl	3b528 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   38e04:	mov	x20, x0
   38e08:	str	w26, [x19, #76]
   38e0c:	cbz	x20, 38ccc <__asan_cplus_demangle_type@@Base+0x185c>
   38e10:	ldp	w1, w0, [x19, #40]
   38e14:	b	38d24 <__asan_cplus_demangle_type@@Base+0x18b4>
   38e18:	cmp	w0, #0x6f
   38e1c:	b.ne	38e38 <__asan_cplus_demangle_type@@Base+0x19c8>  // b.any
   38e20:	ldrb	w0, [x2, #1]
   38e24:	cmp	w0, #0x6e
   38e28:	b.ne	38c98 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   38e2c:	add	x2, x2, #0x2
   38e30:	str	x2, [x19, #24]
   38e34:	b	38cfc <__asan_cplus_demangle_type@@Base+0x188c>
   38e38:	cmp	w0, #0x69
   38e3c:	mov	w1, #0x74                  	// #116
   38e40:	ccmp	w0, w1, #0x4, ne  // ne = any
   38e44:	b.ne	38c98 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   38e48:	ldrb	w1, [x2, #1]
   38e4c:	cmp	w1, #0x6c
   38e50:	b.ne	38c98 <__asan_cplus_demangle_type@@Base+0x1828>  // b.any
   38e54:	add	x1, x2, #0x2
   38e58:	str	x1, [x19, #24]
   38e5c:	cmp	w0, #0x74
   38e60:	mov	x20, #0x0                   	// #0
   38e64:	b.eq	391f0 <__asan_cplus_demangle_type@@Base+0x1d80>  // b.none
   38e68:	ldrb	w0, [x1, #1]
   38e6c:	cbz	w0, 38cc4 <__asan_cplus_demangle_type@@Base+0x1854>
   38e70:	mov	w1, #0x45                  	// #69
   38e74:	mov	x0, x19
   38e78:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   38e7c:	mov	x3, x0
   38e80:	mov	x2, x20
   38e84:	mov	x0, x19
   38e88:	mov	w1, #0x31                  	// #49
   38e8c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38e90:	mov	x20, x0
   38e94:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   38e98:	mov	x0, x19
   38e9c:	bl	2e468 <__asan_backtrace_create_state@@Base+0x7e0>
   38ea0:	mov	x20, x0
   38ea4:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   38ea8:	add	x0, x2, #0x2
   38eac:	str	x0, [x19, #24]
   38eb0:	ldrb	w0, [x2, #2]
   38eb4:	cmp	w0, #0x54
   38eb8:	b.eq	38f3c <__asan_cplus_demangle_type@@Base+0x1acc>  // b.none
   38ebc:	mov	x0, x19
   38ec0:	bl	2e290 <__asan_backtrace_create_state@@Base+0x608>
   38ec4:	mvn	x1, x0
   38ec8:	tst	x1, #0x7fffffff
   38ecc:	b.eq	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.none
   38ed0:	add	w3, w0, #0x1
   38ed4:	ldp	w2, w0, [x19, #40]
   38ed8:	cmp	w2, w0
   38edc:	b.ge	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.tcont
   38ee0:	mov	w5, #0x18                  	// #24
   38ee4:	add	w1, w2, #0x1
   38ee8:	ldr	x4, [x19, #32]
   38eec:	smull	x2, w2, w5
   38ef0:	mov	w5, #0x6                   	// #6
   38ef4:	sxtw	x3, w3
   38ef8:	add	x20, x4, x2
   38efc:	str	wzr, [x20, #4]
   38f00:	str	w1, [x19, #40]
   38f04:	str	w5, [x4, x2]
   38f08:	str	x3, [x20, #8]
   38f0c:	b	38d20 <__asan_cplus_demangle_type@@Base+0x18b0>
   38f10:	add	x0, x0, #0x1
   38f14:	str	x0, [x19, #24]
   38f18:	mov	x0, x19
   38f1c:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   38f20:	mov	x3, x0
   38f24:	mov	x2, x20
   38f28:	mov	x0, x19
   38f2c:	mov	w1, #0x4                   	// #4
   38f30:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38f34:	mov	x20, x0
   38f38:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   38f3c:	add	x2, x2, #0x3
   38f40:	mov	w3, #0x0                   	// #0
   38f44:	str	x2, [x19, #24]
   38f48:	b	38ed4 <__asan_cplus_demangle_type@@Base+0x1a64>
   38f4c:	add	x2, x2, #0x2
   38f50:	str	x2, [x19, #24]
   38f54:	mov	x0, x19
   38f58:	bl	6420 <__asan_cplus_demangle_type@plt>
   38f5c:	mov	x20, x0
   38f60:	mov	x0, x19
   38f64:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   38f68:	ldr	x1, [x19, #24]
   38f6c:	mov	x27, x0
   38f70:	mov	x3, x27
   38f74:	ldrb	w0, [x1]
   38f78:	cmp	w0, #0x49
   38f7c:	b.ne	38fa8 <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   38f80:	add	x1, x1, #0x1
   38f84:	str	x1, [x19, #24]
   38f88:	mov	x0, x19
   38f8c:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   38f90:	mov	x3, x0
   38f94:	mov	x2, x27
   38f98:	mov	x0, x19
   38f9c:	mov	w1, #0x4                   	// #4
   38fa0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38fa4:	mov	x3, x0
   38fa8:	mov	x2, x20
   38fac:	mov	x0, x19
   38fb0:	mov	w1, #0x1                   	// #1
   38fb4:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   38fb8:	mov	x20, x0
   38fbc:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   38fc0:	ldr	x3, [x20, #8]
   38fc4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   38fc8:	ldr	w0, [x19, #72]
   38fcc:	add	x1, x1, #0x6c8
   38fd0:	ldr	w2, [x3, #16]
   38fd4:	ldr	x28, [x3]
   38fd8:	sub	w2, w2, #0x2
   38fdc:	add	w0, w0, w2
   38fe0:	str	w0, [x19, #72]
   38fe4:	mov	x0, x28
   38fe8:	bl	67f0 <__asan_internal_strcmp@plt>
   38fec:	cbz	w0, 392ec <__asan_cplus_demangle_type@@Base+0x1e7c>
   38ff0:	ldr	w1, [x20]
   38ff4:	cmp	w1, #0x33
   38ff8:	b.eq	39058 <__asan_cplus_demangle_type@@Base+0x1be8>  // b.none
   38ffc:	cmp	w1, #0x34
   39000:	b.eq	3920c <__asan_cplus_demangle_type@@Base+0x1d9c>  // b.none
   39004:	cmp	w1, #0x32
   39008:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3900c:	ldr	x0, [x20, #8]
   39010:	ldr	w0, [x0, #20]
   39014:	cmp	w0, #0x2
   39018:	b.eq	39068 <__asan_cplus_demangle_type@@Base+0x1bf8>  // b.none
   3901c:	b.gt	390e8 <__asan_cplus_demangle_type@@Base+0x1c78>
   39020:	cbz	w0, 392a0 <__asan_cplus_demangle_type@@Base+0x1e30>
   39024:	cmp	w0, #0x1
   39028:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3902c:	cbnz	x28, 39270 <__asan_cplus_demangle_type@@Base+0x1e00>
   39030:	mov	x0, x19
   39034:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39038:	mov	x3, x0
   3903c:	mov	x2, x20
   39040:	mov	x0, x19
   39044:	mov	w1, #0x37                  	// #55
   39048:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3904c:	mov	x20, x0
   39050:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   39054:	mov	x28, #0x0                   	// #0
   39058:	ldr	w0, [x20, #8]
   3905c:	mov	w1, #0x33                  	// #51
   39060:	cmp	w0, #0x2
   39064:	b.ne	3901c <__asan_cplus_demangle_type@@Base+0x1bac>  // b.any
   39068:	cbz	x28, 38cc4 <__asan_cplus_demangle_type@@Base+0x1854>
   3906c:	ldr	x0, [x20, #8]
   39070:	ldr	x0, [x0]
   39074:	ldrb	w1, [x0, #1]
   39078:	cmp	w1, #0x63
   3907c:	b.eq	3939c <__asan_cplus_demangle_type@@Base+0x1f2c>  // b.none
   39080:	ldrb	w0, [x28]
   39084:	cmp	w0, #0x66
   39088:	b.eq	393fc <__asan_cplus_demangle_type@@Base+0x1f8c>  // b.none
   3908c:	mov	x0, x19
   39090:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39094:	mov	x27, x0
   39098:	mov	x1, x25
   3909c:	mov	x0, x28
   390a0:	bl	67f0 <__asan_internal_strcmp@plt>
   390a4:	cbnz	w0, 392fc <__asan_cplus_demangle_type@@Base+0x1e8c>
   390a8:	mov	x0, x19
   390ac:	mov	w1, #0x45                  	// #69
   390b0:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   390b4:	mov	x28, x0
   390b8:	mov	x3, x28
   390bc:	mov	x2, x27
   390c0:	mov	w1, #0x39                  	// #57
   390c4:	mov	x0, x19
   390c8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   390cc:	mov	x3, x0
   390d0:	mov	x2, x20
   390d4:	mov	x0, x19
   390d8:	mov	w1, #0x38                  	// #56
   390dc:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   390e0:	mov	x20, x0
   390e4:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   390e8:	cmp	w0, #0x3
   390ec:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   390f0:	cbz	x28, 38cc4 <__asan_cplus_demangle_type@@Base+0x1854>
   390f4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   390f8:	mov	x0, x28
   390fc:	add	x1, x1, #0x150
   39100:	bl	67f0 <__asan_internal_strcmp@plt>
   39104:	cbz	w0, 393cc <__asan_cplus_demangle_type@@Base+0x1f5c>
   39108:	ldrb	w0, [x28]
   3910c:	cmp	w0, #0x66
   39110:	b.eq	3940c <__asan_cplus_demangle_type@@Base+0x1f9c>  // b.none
   39114:	cmp	w0, #0x6e
   39118:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3911c:	ldrb	w0, [x28, #1]
   39120:	mov	w1, #0x61                  	// #97
   39124:	cmp	w0, #0x77
   39128:	ccmp	w0, w1, #0x4, ne  // ne = any
   3912c:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   39130:	mov	w1, #0x5f                  	// #95
   39134:	mov	x0, x19
   39138:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   3913c:	mov	x27, x0
   39140:	mov	x0, x19
   39144:	bl	6420 <__asan_cplus_demangle_type@plt>
   39148:	ldr	x1, [x19, #24]
   3914c:	mov	x28, x0
   39150:	ldrb	w0, [x1]
   39154:	cmp	w0, #0x45
   39158:	b.eq	39440 <__asan_cplus_demangle_type@@Base+0x1fd0>  // b.none
   3915c:	cmp	w0, #0x70
   39160:	b.eq	39418 <__asan_cplus_demangle_type@@Base+0x1fa8>  // b.none
   39164:	cmp	w0, #0x69
   39168:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   3916c:	ldrb	w0, [x1, #1]
   39170:	cmp	w0, #0x6c
   39174:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   39178:	mov	x0, x19
   3917c:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39180:	mov	x3, x0
   39184:	mov	x2, x28
   39188:	mov	w1, #0x3c                  	// #60
   3918c:	mov	x0, x19
   39190:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39194:	mov	x2, x27
   39198:	mov	x3, x0
   3919c:	mov	w1, #0x3b                  	// #59
   391a0:	mov	x0, x19
   391a4:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   391a8:	mov	x3, x0
   391ac:	mov	x2, x20
   391b0:	mov	x0, x19
   391b4:	mov	w1, #0x3a                  	// #58
   391b8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   391bc:	mov	x20, x0
   391c0:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   391c4:	ldr	x0, [x19, #24]
   391c8:	ldrb	w1, [x0]
   391cc:	cmp	w1, #0x5f
   391d0:	b.ne	39030 <__asan_cplus_demangle_type@@Base+0x1bc0>  // b.any
   391d4:	add	x0, x0, #0x1
   391d8:	str	x0, [x19, #24]
   391dc:	mov	w1, #0x45                  	// #69
   391e0:	mov	x0, x19
   391e4:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   391e8:	mov	x3, x0
   391ec:	b	3903c <__asan_cplus_demangle_type@@Base+0x1bcc>
   391f0:	mov	x0, x19
   391f4:	bl	6420 <__asan_cplus_demangle_type@plt>
   391f8:	ldr	x1, [x19, #24]
   391fc:	mov	x20, x0
   39200:	ldrb	w0, [x1, #1]
   39204:	cbnz	w0, 38e70 <__asan_cplus_demangle_type@@Base+0x1a00>
   39208:	b	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>
   3920c:	cbz	x28, 391c4 <__asan_cplus_demangle_type@@Base+0x1d54>
   39210:	ldrb	w0, [x28]
   39214:	mov	w2, #0x6d                  	// #109
   39218:	cmp	w0, #0x70
   3921c:	ccmp	w0, w2, #0x4, ne  // ne = any
   39220:	b.eq	39288 <__asan_cplus_demangle_type@@Base+0x1e18>  // b.none
   39224:	ldr	x0, [x19, #24]
   39228:	ldrb	w1, [x0]
   3922c:	cmp	w1, #0x5f
   39230:	b.eq	391d4 <__asan_cplus_demangle_type@@Base+0x1d64>  // b.none
   39234:	mov	w27, #0x0                   	// #0
   39238:	mov	x0, x28
   3923c:	mov	x1, x24
   39240:	bl	67f0 <__asan_internal_strcmp@plt>
   39244:	cbz	w0, 392bc <__asan_cplus_demangle_type@@Base+0x1e4c>
   39248:	mov	x0, x19
   3924c:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39250:	mov	x3, x0
   39254:	cbz	w27, 3903c <__asan_cplus_demangle_type@@Base+0x1bcc>
   39258:	mov	x2, x3
   3925c:	mov	x0, x19
   39260:	mov	w1, #0x39                  	// #57
   39264:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39268:	mov	x3, x0
   3926c:	b	3903c <__asan_cplus_demangle_type@@Base+0x1bcc>
   39270:	ldrb	w0, [x28]
   39274:	mov	w2, #0x6d                  	// #109
   39278:	cmp	w0, #0x70
   3927c:	ccmp	w0, w2, #0x4, ne  // ne = any
   39280:	b.ne	39234 <__asan_cplus_demangle_type@@Base+0x1dc4>  // b.any
   39284:	nop
   39288:	ldrb	w2, [x28, #1]
   3928c:	cmp	w2, w0
   39290:	b.eq	3937c <__asan_cplus_demangle_type@@Base+0x1f0c>  // b.none
   39294:	cmp	w1, #0x34
   39298:	b.ne	39234 <__asan_cplus_demangle_type@@Base+0x1dc4>  // b.any
   3929c:	b	39224 <__asan_cplus_demangle_type@@Base+0x1db4>
   392a0:	mov	x2, x20
   392a4:	mov	x0, x19
   392a8:	mov	x3, #0x0                   	// #0
   392ac:	mov	w1, #0x36                  	// #54
   392b0:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   392b4:	mov	x20, x0
   392b8:	b	38e08 <__asan_cplus_demangle_type@@Base+0x1998>
   392bc:	mov	x0, x19
   392c0:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   392c4:	mov	x3, x0
   392c8:	b	39254 <__asan_cplus_demangle_type@@Base+0x1de4>
   392cc:	add	x2, x2, #0x1
   392d0:	str	x2, [x0, #24]
   392d4:	ldp	x19, x20, [sp, #16]
   392d8:	mov	x3, #0x0                   	// #0
   392dc:	ldp	x29, x30, [sp], #112
   392e0:	mov	w1, #0x2e                  	// #46
   392e4:	mov	x2, #0x0                   	// #0
   392e8:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   392ec:	mov	x0, x19
   392f0:	bl	6420 <__asan_cplus_demangle_type@plt>
   392f4:	mov	x3, x0
   392f8:	b	3903c <__asan_cplus_demangle_type@@Base+0x1bcc>
   392fc:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   39300:	mov	x0, x28
   39304:	add	x1, x1, #0x318
   39308:	bl	67f0 <__asan_internal_strcmp@plt>
   3930c:	cbz	w0, 39334 <__asan_cplus_demangle_type@@Base+0x1ec4>
   39310:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   39314:	mov	x0, x28
   39318:	add	x1, x1, #0x320
   3931c:	bl	67f0 <__asan_internal_strcmp@plt>
   39320:	cbz	w0, 39334 <__asan_cplus_demangle_type@@Base+0x1ec4>
   39324:	mov	x0, x19
   39328:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3932c:	mov	x28, x0
   39330:	b	390b8 <__asan_cplus_demangle_type@@Base+0x1c48>
   39334:	mov	x0, x19
   39338:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3933c:	ldr	x1, [x19, #24]
   39340:	mov	x28, x0
   39344:	ldrb	w0, [x1]
   39348:	cmp	w0, #0x49
   3934c:	b.ne	390b8 <__asan_cplus_demangle_type@@Base+0x1c48>  // b.any
   39350:	add	x1, x1, #0x1
   39354:	str	x1, [x19, #24]
   39358:	mov	x0, x19
   3935c:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   39360:	mov	x3, x0
   39364:	mov	x2, x28
   39368:	mov	x0, x19
   3936c:	mov	w1, #0x4                   	// #4
   39370:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39374:	mov	x28, x0
   39378:	b	390b8 <__asan_cplus_demangle_type@@Base+0x1c48>
   3937c:	ldr	x0, [x19, #24]
   39380:	mov	w27, #0x1                   	// #1
   39384:	ldrb	w2, [x0]
   39388:	cmp	w2, #0x5f
   3938c:	b.ne	39238 <__asan_cplus_demangle_type@@Base+0x1dc8>  // b.any
   39390:	add	x0, x0, #0x1
   39394:	str	x0, [x19, #24]
   39398:	b	39294 <__asan_cplus_demangle_type@@Base+0x1e24>
   3939c:	ldrb	w0, [x0]
   393a0:	sub	w1, w0, #0x63
   393a4:	sub	w0, w0, #0x72
   393a8:	and	w1, w1, #0xff
   393ac:	and	w0, w0, #0xff
   393b0:	cmp	w1, #0x1
   393b4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   393b8:	b.hi	39080 <__asan_cplus_demangle_type@@Base+0x1c10>  // b.pmore
   393bc:	mov	x0, x19
   393c0:	bl	6420 <__asan_cplus_demangle_type@plt>
   393c4:	mov	x27, x0
   393c8:	b	39098 <__asan_cplus_demangle_type@@Base+0x1c28>
   393cc:	mov	x0, x19
   393d0:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   393d4:	mov	x27, x0
   393d8:	mov	x0, x19
   393dc:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   393e0:	mov	x28, x0
   393e4:	mov	x0, x19
   393e8:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   393ec:	mov	x3, x0
   393f0:	cbnz	x0, 39184 <__asan_cplus_demangle_type@@Base+0x1d14>
   393f4:	mov	x20, #0x0                   	// #0
   393f8:	b	38cc8 <__asan_cplus_demangle_type@@Base+0x1858>
   393fc:	mov	x0, x19
   39400:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   39404:	mov	x27, x0
   39408:	b	39098 <__asan_cplus_demangle_type@@Base+0x1c28>
   3940c:	mov	x0, x19
   39410:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   39414:	b	393d4 <__asan_cplus_demangle_type@@Base+0x1f64>
   39418:	ldrb	w0, [x1, #1]
   3941c:	cmp	w0, #0x69
   39420:	b.ne	38cc4 <__asan_cplus_demangle_type@@Base+0x1854>  // b.any
   39424:	add	x1, x1, #0x2
   39428:	str	x1, [x19, #24]
   3942c:	mov	x0, x19
   39430:	mov	w1, #0x45                  	// #69
   39434:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   39438:	mov	x3, x0
   3943c:	b	39184 <__asan_cplus_demangle_type@@Base+0x1d14>
   39440:	add	x1, x1, #0x1
   39444:	mov	x3, #0x0                   	// #0
   39448:	str	x1, [x19, #24]
   3944c:	b	39184 <__asan_cplus_demangle_type@@Base+0x1d14>
   39450:	ldr	x2, [x0, #24]
   39454:	ldrb	w1, [x2]
   39458:	cmp	w1, #0x4c
   3945c:	b.eq	39668 <__asan_cplus_demangle_type@@Base+0x21f8>  // b.none
   39460:	cmp	w1, #0x54
   39464:	b.eq	396ec <__asan_cplus_demangle_type@@Base+0x227c>  // b.none
   39468:	stp	x29, x30, [sp, #-48]!
   3946c:	cmp	w1, #0x73
   39470:	mov	x29, sp
   39474:	stp	x19, x20, [sp, #16]
   39478:	mov	x19, x0
   3947c:	b.eq	3951c <__asan_cplus_demangle_type@@Base+0x20ac>  // b.none
   39480:	cmp	w1, #0x66
   39484:	b.eq	394c8 <__asan_cplus_demangle_type@@Base+0x2058>  // b.none
   39488:	sub	w3, w1, #0x30
   3948c:	and	w3, w3, #0xff
   39490:	cmp	w3, #0x9
   39494:	b.hi	3966c <__asan_cplus_demangle_type@@Base+0x21fc>  // b.pmore
   39498:	mov	x0, x19
   3949c:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   394a0:	mov	x20, x0
   394a4:	cbz	x0, 39654 <__asan_cplus_demangle_type@@Base+0x21e4>
   394a8:	ldr	x0, [x19, #24]
   394ac:	ldrb	w1, [x0]
   394b0:	cmp	w1, #0x49
   394b4:	b.eq	396f0 <__asan_cplus_demangle_type@@Base+0x2280>  // b.none
   394b8:	mov	x0, x20
   394bc:	ldp	x19, x20, [sp, #16]
   394c0:	ldp	x29, x30, [sp], #48
   394c4:	ret
   394c8:	ldrb	w1, [x2, #1]
   394cc:	cmp	w1, #0x70
   394d0:	b.eq	39558 <__asan_cplus_demangle_type@@Base+0x20e8>  // b.none
   394d4:	mov	x0, x19
   394d8:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   394dc:	mov	x20, x0
   394e0:	cbz	x0, 39654 <__asan_cplus_demangle_type@@Base+0x21e4>
   394e4:	ldr	w0, [x0]
   394e8:	stp	x21, x22, [sp, #32]
   394ec:	cmp	w0, #0x32
   394f0:	b.eq	397a8 <__asan_cplus_demangle_type@@Base+0x2338>  // b.none
   394f4:	cmp	w0, #0x33
   394f8:	b.eq	39890 <__asan_cplus_demangle_type@@Base+0x2420>  // b.none
   394fc:	cmp	w0, #0x34
   39500:	b.eq	39918 <__asan_cplus_demangle_type@@Base+0x24a8>  // b.none
   39504:	mov	x20, #0x0                   	// #0
   39508:	mov	x0, x20
   3950c:	ldp	x19, x20, [sp, #16]
   39510:	ldp	x21, x22, [sp, #32]
   39514:	ldp	x29, x30, [sp], #48
   39518:	ret
   3951c:	ldrb	w1, [x2, #1]
   39520:	cmp	w1, #0x72
   39524:	b.eq	3971c <__asan_cplus_demangle_type@@Base+0x22ac>  // b.none
   39528:	cmp	w1, #0x70
   3952c:	b.ne	394d4 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   39530:	add	x2, x2, #0x2
   39534:	str	x2, [x0, #24]
   39538:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3953c:	mov	x2, x0
   39540:	mov	x0, x19
   39544:	mov	x3, #0x0                   	// #0
   39548:	ldp	x19, x20, [sp, #16]
   3954c:	mov	w1, #0x4b                  	// #75
   39550:	ldp	x29, x30, [sp], #48
   39554:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39558:	add	x1, x2, #0x2
   3955c:	str	x1, [x0, #24]
   39560:	ldrb	w1, [x2, #2]
   39564:	cmp	w1, #0x54
   39568:	b.eq	398a0 <__asan_cplus_demangle_type@@Base+0x2430>  // b.none
   3956c:	bl	2e290 <__asan_backtrace_create_state@@Base+0x608>
   39570:	mvn	x1, x0
   39574:	add	w0, w0, #0x1
   39578:	tst	x1, #0x7fffffff
   3957c:	b.eq	39654 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.none
   39580:	ldp	w1, w2, [x19, #40]
   39584:	cmp	w1, w2
   39588:	b.ge	39654 <__asan_cplus_demangle_type@@Base+0x21e4>  // b.tcont
   3958c:	mov	w3, #0x18                  	// #24
   39590:	add	w4, w1, #0x1
   39594:	ldr	x2, [x19, #32]
   39598:	smull	x1, w1, w3
   3959c:	mov	w3, #0x6                   	// #6
   395a0:	sxtw	x0, w0
   395a4:	add	x20, x2, x1
   395a8:	str	wzr, [x20, #4]
   395ac:	str	w4, [x19, #40]
   395b0:	str	w3, [x2, x1]
   395b4:	str	x0, [x20, #8]
   395b8:	b	394b8 <__asan_cplus_demangle_type@@Base+0x2048>
   395bc:	cmp	w0, #0x3
   395c0:	b.ne	39504 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   395c4:	cbz	x21, 39650 <__asan_cplus_demangle_type@@Base+0x21e0>
   395c8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   395cc:	mov	x0, x21
   395d0:	add	x1, x1, #0x150
   395d4:	bl	67f0 <__asan_internal_strcmp@plt>
   395d8:	cbz	w0, 39af8 <__asan_cplus_demangle_type@@Base+0x2688>
   395dc:	ldrb	w0, [x21]
   395e0:	cmp	w0, #0x66
   395e4:	b.eq	39b34 <__asan_cplus_demangle_type@@Base+0x26c4>  // b.none
   395e8:	cmp	w0, #0x6e
   395ec:	b.ne	39650 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   395f0:	ldrb	w0, [x21, #1]
   395f4:	mov	w1, #0x61                  	// #97
   395f8:	cmp	w0, #0x77
   395fc:	ccmp	w0, w1, #0x4, ne  // ne = any
   39600:	b.ne	39650 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   39604:	mov	w1, #0x5f                  	// #95
   39608:	mov	x0, x19
   3960c:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   39610:	mov	x21, x0
   39614:	mov	x0, x19
   39618:	bl	6420 <__asan_cplus_demangle_type@plt>
   3961c:	ldr	x1, [x19, #24]
   39620:	mov	x22, x0
   39624:	ldrb	w0, [x1]
   39628:	cmp	w0, #0x45
   3962c:	b.eq	39b78 <__asan_cplus_demangle_type@@Base+0x2708>  // b.none
   39630:	cmp	w0, #0x70
   39634:	b.eq	39b50 <__asan_cplus_demangle_type@@Base+0x26e0>  // b.none
   39638:	cmp	w0, #0x69
   3963c:	b.ne	39650 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   39640:	ldrb	w0, [x1, #1]
   39644:	cmp	w0, #0x6c
   39648:	b.eq	39840 <__asan_cplus_demangle_type@@Base+0x23d0>  // b.none
   3964c:	nop
   39650:	ldp	x21, x22, [sp, #32]
   39654:	mov	x20, #0x0                   	// #0
   39658:	mov	x0, x20
   3965c:	ldp	x19, x20, [sp, #16]
   39660:	ldp	x29, x30, [sp], #48
   39664:	ret
   39668:	b	3b528 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   3966c:	cmp	w1, #0x6f
   39670:	b.ne	3968c <__asan_cplus_demangle_type@@Base+0x221c>  // b.any
   39674:	ldrb	w0, [x2, #1]
   39678:	cmp	w0, #0x6e
   3967c:	b.ne	394d4 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   39680:	add	x2, x2, #0x2
   39684:	str	x2, [x19, #24]
   39688:	b	39498 <__asan_cplus_demangle_type@@Base+0x2028>
   3968c:	cmp	w1, #0x69
   39690:	mov	w3, #0x74                  	// #116
   39694:	ccmp	w1, w3, #0x4, ne  // ne = any
   39698:	b.ne	394d4 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   3969c:	ldrb	w3, [x2, #1]
   396a0:	cmp	w3, #0x6c
   396a4:	b.ne	394d4 <__asan_cplus_demangle_type@@Base+0x2064>  // b.any
   396a8:	add	x3, x2, #0x2
   396ac:	str	x3, [x0, #24]
   396b0:	cmp	w1, #0x74
   396b4:	mov	x20, #0x0                   	// #0
   396b8:	b.eq	39798 <__asan_cplus_demangle_type@@Base+0x2328>  // b.none
   396bc:	ldrb	w0, [x3, #1]
   396c0:	cbz	w0, 39654 <__asan_cplus_demangle_type@@Base+0x21e4>
   396c4:	mov	x0, x19
   396c8:	mov	w1, #0x45                  	// #69
   396cc:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   396d0:	mov	x3, x0
   396d4:	mov	x2, x20
   396d8:	mov	x0, x19
   396dc:	ldp	x19, x20, [sp, #16]
   396e0:	mov	w1, #0x31                  	// #49
   396e4:	ldp	x29, x30, [sp], #48
   396e8:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   396ec:	b	2e468 <__asan_backtrace_create_state@@Base+0x7e0>
   396f0:	add	x0, x0, #0x1
   396f4:	str	x0, [x19, #24]
   396f8:	mov	x0, x19
   396fc:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   39700:	mov	x3, x0
   39704:	mov	x2, x20
   39708:	mov	x0, x19
   3970c:	ldp	x19, x20, [sp, #16]
   39710:	mov	w1, #0x4                   	// #4
   39714:	ldp	x29, x30, [sp], #48
   39718:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3971c:	add	x2, x2, #0x2
   39720:	stp	x21, x22, [sp, #32]
   39724:	str	x2, [x0, #24]
   39728:	bl	6420 <__asan_cplus_demangle_type@plt>
   3972c:	mov	x20, x0
   39730:	mov	x0, x19
   39734:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   39738:	ldr	x1, [x19, #24]
   3973c:	mov	x21, x0
   39740:	mov	x3, x21
   39744:	ldrb	w0, [x1]
   39748:	cmp	w0, #0x49
   3974c:	b.eq	3976c <__asan_cplus_demangle_type@@Base+0x22fc>  // b.none
   39750:	mov	x2, x20
   39754:	mov	x0, x19
   39758:	ldp	x19, x20, [sp, #16]
   3975c:	mov	w1, #0x1                   	// #1
   39760:	ldp	x21, x22, [sp, #32]
   39764:	ldp	x29, x30, [sp], #48
   39768:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3976c:	add	x1, x1, #0x1
   39770:	str	x1, [x19, #24]
   39774:	mov	x0, x19
   39778:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   3977c:	mov	x3, x0
   39780:	mov	x2, x21
   39784:	mov	x0, x19
   39788:	mov	w1, #0x4                   	// #4
   3978c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39790:	mov	x3, x0
   39794:	b	39750 <__asan_cplus_demangle_type@@Base+0x22e0>
   39798:	bl	6420 <__asan_cplus_demangle_type@plt>
   3979c:	mov	x20, x0
   397a0:	ldr	x3, [x19, #24]
   397a4:	b	396bc <__asan_cplus_demangle_type@@Base+0x224c>
   397a8:	ldr	x3, [x20, #8]
   397ac:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   397b0:	ldr	w0, [x19, #72]
   397b4:	add	x1, x1, #0x6c8
   397b8:	ldr	w2, [x3, #16]
   397bc:	ldr	x21, [x3]
   397c0:	sub	w2, w2, #0x2
   397c4:	add	w0, w0, w2
   397c8:	str	w0, [x19, #72]
   397cc:	mov	x0, x21
   397d0:	bl	67f0 <__asan_internal_strcmp@plt>
   397d4:	cbz	w0, 39a28 <__asan_cplus_demangle_type@@Base+0x25b8>
   397d8:	ldr	w1, [x20]
   397dc:	cmp	w1, #0x33
   397e0:	b.eq	39894 <__asan_cplus_demangle_type@@Base+0x2424>  // b.none
   397e4:	cmp	w1, #0x34
   397e8:	b.eq	398b0 <__asan_cplus_demangle_type@@Base+0x2440>  // b.none
   397ec:	cmp	w1, #0x32
   397f0:	b.ne	39504 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   397f4:	ldr	x0, [x20, #8]
   397f8:	ldr	w0, [x0, #20]
   397fc:	cmp	w0, #0x2
   39800:	b.eq	39970 <__asan_cplus_demangle_type@@Base+0x2500>  // b.none
   39804:	b.gt	395bc <__asan_cplus_demangle_type@@Base+0x214c>
   39808:	cbz	w0, 399f8 <__asan_cplus_demangle_type@@Base+0x2588>
   3980c:	cmp	w0, #0x1
   39810:	b.ne	39504 <__asan_cplus_demangle_type@@Base+0x2094>  // b.any
   39814:	cbnz	x21, 39944 <__asan_cplus_demangle_type@@Base+0x24d4>
   39818:	mov	x0, x19
   3981c:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39820:	mov	x3, x0
   39824:	mov	x2, x20
   39828:	mov	x0, x19
   3982c:	ldp	x19, x20, [sp, #16]
   39830:	mov	w1, #0x37                  	// #55
   39834:	ldp	x21, x22, [sp, #32]
   39838:	ldp	x29, x30, [sp], #48
   3983c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39840:	mov	x0, x19
   39844:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39848:	mov	x3, x0
   3984c:	mov	x2, x22
   39850:	mov	x0, x19
   39854:	mov	w1, #0x3c                  	// #60
   39858:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3985c:	mov	x2, x21
   39860:	mov	x3, x0
   39864:	mov	w1, #0x3b                  	// #59
   39868:	mov	x0, x19
   3986c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39870:	mov	x3, x0
   39874:	mov	x2, x20
   39878:	mov	x0, x19
   3987c:	ldp	x19, x20, [sp, #16]
   39880:	mov	w1, #0x3a                  	// #58
   39884:	ldp	x21, x22, [sp, #32]
   39888:	ldp	x29, x30, [sp], #48
   3988c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39890:	mov	x21, #0x0                   	// #0
   39894:	ldr	w0, [x20, #8]
   39898:	mov	w1, #0x33                  	// #51
   3989c:	b	397fc <__asan_cplus_demangle_type@@Base+0x238c>
   398a0:	add	x2, x2, #0x3
   398a4:	mov	w0, #0x0                   	// #0
   398a8:	str	x2, [x19, #24]
   398ac:	b	39580 <__asan_cplus_demangle_type@@Base+0x2110>
   398b0:	cbz	x21, 39918 <__asan_cplus_demangle_type@@Base+0x24a8>
   398b4:	ldrb	w0, [x21]
   398b8:	mov	w2, #0x6d                  	// #109
   398bc:	cmp	w0, #0x70
   398c0:	ccmp	w0, w2, #0x4, ne  // ne = any
   398c4:	b.eq	39958 <__asan_cplus_demangle_type@@Base+0x24e8>  // b.none
   398c8:	ldr	x0, [x19, #24]
   398cc:	ldrb	w1, [x0]
   398d0:	cmp	w1, #0x5f
   398d4:	b.eq	39928 <__asan_cplus_demangle_type@@Base+0x24b8>  // b.none
   398d8:	mov	w22, #0x0                   	// #0
   398dc:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   398e0:	mov	x0, x21
   398e4:	add	x1, x1, #0x228
   398e8:	bl	67f0 <__asan_internal_strcmp@plt>
   398ec:	cbz	w0, 39a18 <__asan_cplus_demangle_type@@Base+0x25a8>
   398f0:	mov	x0, x19
   398f4:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   398f8:	mov	x3, x0
   398fc:	cbz	w22, 39824 <__asan_cplus_demangle_type@@Base+0x23b4>
   39900:	mov	x2, x3
   39904:	mov	x0, x19
   39908:	mov	w1, #0x39                  	// #57
   3990c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39910:	mov	x3, x0
   39914:	b	39824 <__asan_cplus_demangle_type@@Base+0x23b4>
   39918:	ldr	x0, [x19, #24]
   3991c:	ldrb	w1, [x0]
   39920:	cmp	w1, #0x5f
   39924:	b.ne	39818 <__asan_cplus_demangle_type@@Base+0x23a8>  // b.any
   39928:	add	x0, x0, #0x1
   3992c:	str	x0, [x19, #24]
   39930:	mov	w1, #0x45                  	// #69
   39934:	mov	x0, x19
   39938:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   3993c:	mov	x3, x0
   39940:	b	39824 <__asan_cplus_demangle_type@@Base+0x23b4>
   39944:	ldrb	w0, [x21]
   39948:	mov	w2, #0x6d                  	// #109
   3994c:	cmp	w0, #0x70
   39950:	ccmp	w0, w2, #0x4, ne  // ne = any
   39954:	b.ne	398d8 <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   39958:	ldrb	w2, [x21, #1]
   3995c:	cmp	w2, w0
   39960:	b.eq	39aa8 <__asan_cplus_demangle_type@@Base+0x2638>  // b.none
   39964:	cmp	w1, #0x34
   39968:	b.ne	398d8 <__asan_cplus_demangle_type@@Base+0x2468>  // b.any
   3996c:	b	398c8 <__asan_cplus_demangle_type@@Base+0x2458>
   39970:	cbz	x21, 39650 <__asan_cplus_demangle_type@@Base+0x21e0>
   39974:	ldr	x0, [x20, #8]
   39978:	ldr	x0, [x0]
   3997c:	ldrb	w1, [x0, #1]
   39980:	cmp	w1, #0x63
   39984:	b.eq	39ac8 <__asan_cplus_demangle_type@@Base+0x2658>  // b.none
   39988:	ldrb	w0, [x21]
   3998c:	cmp	w0, #0x66
   39990:	b.eq	39b24 <__asan_cplus_demangle_type@@Base+0x26b4>  // b.none
   39994:	mov	x0, x19
   39998:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3999c:	mov	x22, x0
   399a0:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   399a4:	mov	x0, x21
   399a8:	add	x1, x1, #0x140
   399ac:	bl	67f0 <__asan_internal_strcmp@plt>
   399b0:	cbnz	w0, 39a38 <__asan_cplus_demangle_type@@Base+0x25c8>
   399b4:	mov	x0, x19
   399b8:	mov	w1, #0x45                  	// #69
   399bc:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   399c0:	mov	x21, x0
   399c4:	mov	x3, x21
   399c8:	mov	x2, x22
   399cc:	mov	x0, x19
   399d0:	mov	w1, #0x39                  	// #57
   399d4:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   399d8:	mov	x3, x0
   399dc:	mov	x2, x20
   399e0:	mov	x0, x19
   399e4:	ldp	x19, x20, [sp, #16]
   399e8:	mov	w1, #0x38                  	// #56
   399ec:	ldp	x21, x22, [sp, #32]
   399f0:	ldp	x29, x30, [sp], #48
   399f4:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   399f8:	mov	x2, x20
   399fc:	mov	x0, x19
   39a00:	ldp	x19, x20, [sp, #16]
   39a04:	mov	x3, #0x0                   	// #0
   39a08:	ldp	x21, x22, [sp, #32]
   39a0c:	mov	w1, #0x36                  	// #54
   39a10:	ldp	x29, x30, [sp], #48
   39a14:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39a18:	mov	x0, x19
   39a1c:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   39a20:	mov	x3, x0
   39a24:	b	398fc <__asan_cplus_demangle_type@@Base+0x248c>
   39a28:	mov	x0, x19
   39a2c:	bl	6420 <__asan_cplus_demangle_type@plt>
   39a30:	mov	x3, x0
   39a34:	b	39824 <__asan_cplus_demangle_type@@Base+0x23b4>
   39a38:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   39a3c:	mov	x0, x21
   39a40:	add	x1, x1, #0x318
   39a44:	bl	67f0 <__asan_internal_strcmp@plt>
   39a48:	cbz	w0, 39a60 <__asan_cplus_demangle_type@@Base+0x25f0>
   39a4c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   39a50:	mov	x0, x21
   39a54:	add	x1, x1, #0x320
   39a58:	bl	67f0 <__asan_internal_strcmp@plt>
   39a5c:	cbnz	w0, 39b40 <__asan_cplus_demangle_type@@Base+0x26d0>
   39a60:	mov	x0, x19
   39a64:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   39a68:	ldr	x1, [x19, #24]
   39a6c:	mov	x21, x0
   39a70:	ldrb	w0, [x1]
   39a74:	cmp	w0, #0x49
   39a78:	b.ne	399c4 <__asan_cplus_demangle_type@@Base+0x2554>  // b.any
   39a7c:	add	x1, x1, #0x1
   39a80:	str	x1, [x19, #24]
   39a84:	mov	x0, x19
   39a88:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   39a8c:	mov	x3, x0
   39a90:	mov	x2, x21
   39a94:	mov	x0, x19
   39a98:	mov	w1, #0x4                   	// #4
   39a9c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   39aa0:	mov	x21, x0
   39aa4:	b	399c4 <__asan_cplus_demangle_type@@Base+0x2554>
   39aa8:	ldr	x0, [x19, #24]
   39aac:	mov	w22, #0x1                   	// #1
   39ab0:	ldrb	w2, [x0]
   39ab4:	cmp	w2, #0x5f
   39ab8:	b.ne	398dc <__asan_cplus_demangle_type@@Base+0x246c>  // b.any
   39abc:	add	x0, x0, #0x1
   39ac0:	str	x0, [x19, #24]
   39ac4:	b	39964 <__asan_cplus_demangle_type@@Base+0x24f4>
   39ac8:	ldrb	w0, [x0]
   39acc:	sub	w1, w0, #0x63
   39ad0:	sub	w0, w0, #0x72
   39ad4:	and	w1, w1, #0xff
   39ad8:	and	w0, w0, #0xff
   39adc:	cmp	w1, #0x1
   39ae0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   39ae4:	b.hi	39988 <__asan_cplus_demangle_type@@Base+0x2518>  // b.pmore
   39ae8:	mov	x0, x19
   39aec:	bl	6420 <__asan_cplus_demangle_type@plt>
   39af0:	mov	x22, x0
   39af4:	b	399a0 <__asan_cplus_demangle_type@@Base+0x2530>
   39af8:	mov	x0, x19
   39afc:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39b00:	mov	x21, x0
   39b04:	mov	x0, x19
   39b08:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39b0c:	mov	x22, x0
   39b10:	mov	x0, x19
   39b14:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39b18:	mov	x3, x0
   39b1c:	cbnz	x0, 3984c <__asan_cplus_demangle_type@@Base+0x23dc>
   39b20:	b	39650 <__asan_cplus_demangle_type@@Base+0x21e0>
   39b24:	mov	x0, x19
   39b28:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   39b2c:	mov	x22, x0
   39b30:	b	399a0 <__asan_cplus_demangle_type@@Base+0x2530>
   39b34:	mov	x0, x19
   39b38:	bl	383c8 <__asan_cplus_demangle_type@@Base+0xf58>
   39b3c:	b	39b00 <__asan_cplus_demangle_type@@Base+0x2690>
   39b40:	mov	x0, x19
   39b44:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39b48:	mov	x21, x0
   39b4c:	b	399c4 <__asan_cplus_demangle_type@@Base+0x2554>
   39b50:	ldrb	w0, [x1, #1]
   39b54:	cmp	w0, #0x69
   39b58:	b.ne	39650 <__asan_cplus_demangle_type@@Base+0x21e0>  // b.any
   39b5c:	add	x1, x1, #0x2
   39b60:	str	x1, [x19, #24]
   39b64:	mov	x0, x19
   39b68:	mov	w1, #0x45                  	// #69
   39b6c:	bl	38c10 <__asan_cplus_demangle_type@@Base+0x17a0>
   39b70:	mov	x3, x0
   39b74:	b	3984c <__asan_cplus_demangle_type@@Base+0x23dc>
   39b78:	add	x1, x1, #0x1
   39b7c:	mov	x3, #0x0                   	// #0
   39b80:	str	x1, [x19, #24]
   39b84:	b	3984c <__asan_cplus_demangle_type@@Base+0x23dc>
   39b88:	stp	x29, x30, [sp, #-80]!
   39b8c:	mov	x29, sp
   39b90:	ldr	x3, [x0, #24]
   39b94:	stp	x19, x20, [sp, #16]
   39b98:	mov	x19, x0
   39b9c:	stp	x21, x22, [sp, #32]
   39ba0:	mov	x20, x1
   39ba4:	mov	w22, #0x56                  	// #86
   39ba8:	stp	x23, x24, [sp, #48]
   39bac:	mov	x23, x1
   39bb0:	mov	w24, w2
   39bb4:	stp	x25, x26, [sp, #64]
   39bb8:	mov	w21, #0x4b                  	// #75
   39bbc:	ldrb	w4, [x3]
   39bc0:	mov	w0, w4
   39bc4:	nop
   39bc8:	cmp	w0, #0x72
   39bcc:	ccmp	w0, w22, #0x4, ne  // ne = any
   39bd0:	ccmp	w0, w21, #0x4, ne  // ne = any
   39bd4:	b.eq	39c80 <__asan_cplus_demangle_type@@Base+0x2810>  // b.none
   39bd8:	cmp	w0, #0x44
   39bdc:	b.eq	39c64 <__asan_cplus_demangle_type@@Base+0x27f4>  // b.none
   39be0:	cmp	w4, #0x46
   39be4:	eor	w24, w24, #0x1
   39be8:	cset	w0, eq  // eq = none
   39bec:	tst	w24, w0
   39bf0:	b.eq	39c48 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   39bf4:	cmp	x20, x23
   39bf8:	b.eq	39c48 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   39bfc:	mov	w3, #0x1d                  	// #29
   39c00:	mov	w2, #0x1e                  	// #30
   39c04:	mov	w1, #0x1c                  	// #28
   39c08:	b	39c20 <__asan_cplus_demangle_type@@Base+0x27b0>
   39c0c:	cmp	w0, #0x19
   39c10:	b.eq	39e74 <__asan_cplus_demangle_type@@Base+0x2a04>  // b.none
   39c14:	add	x23, x23, #0x8
   39c18:	cmp	x20, x23
   39c1c:	b.eq	39c48 <__asan_cplus_demangle_type@@Base+0x27d8>  // b.none
   39c20:	ldr	x23, [x23]
   39c24:	ldr	w0, [x23]
   39c28:	cmp	w0, #0x1a
   39c2c:	b.eq	39e6c <__asan_cplus_demangle_type@@Base+0x29fc>  // b.none
   39c30:	cmp	w0, #0x1b
   39c34:	b.ne	39c0c <__asan_cplus_demangle_type@@Base+0x279c>  // b.any
   39c38:	str	w2, [x23]
   39c3c:	add	x23, x23, #0x8
   39c40:	cmp	x20, x23
   39c44:	b.ne	39c20 <__asan_cplus_demangle_type@@Base+0x27b0>  // b.any
   39c48:	mov	x0, x20
   39c4c:	ldp	x19, x20, [sp, #16]
   39c50:	ldp	x21, x22, [sp, #32]
   39c54:	ldp	x23, x24, [sp, #48]
   39c58:	ldp	x25, x26, [sp, #64]
   39c5c:	ldp	x29, x30, [sp], #80
   39c60:	ret
   39c64:	ldrb	w0, [x3, #1]
   39c68:	and	w1, w0, #0xffffffdf
   39c6c:	sub	w0, w0, #0x77
   39c70:	cmp	w1, #0x4f
   39c74:	and	w0, w0, #0xff
   39c78:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   39c7c:	b.hi	39be0 <__asan_cplus_demangle_type@@Base+0x2770>  // b.pmore
   39c80:	add	x5, x3, #0x1
   39c84:	str	x5, [x19, #24]
   39c88:	cmp	w4, #0x72
   39c8c:	b.eq	39d4c <__asan_cplus_demangle_type@@Base+0x28dc>  // b.none
   39c90:	cmp	w4, #0x56
   39c94:	b.eq	39db0 <__asan_cplus_demangle_type@@Base+0x2940>  // b.none
   39c98:	cmp	w4, #0x4b
   39c9c:	b.eq	39dd8 <__asan_cplus_demangle_type@@Base+0x2968>  // b.none
   39ca0:	ldrb	w0, [x3, #1]
   39ca4:	cbz	w0, 39d2c <__asan_cplus_demangle_type@@Base+0x28bc>
   39ca8:	add	x5, x3, #0x2
   39cac:	str	x5, [x19, #24]
   39cb0:	ldrb	w25, [x3, #1]
   39cb4:	cmp	w25, #0x78
   39cb8:	b.eq	39e0c <__asan_cplus_demangle_type@@Base+0x299c>  // b.none
   39cbc:	and	w0, w25, #0xffffffdf
   39cc0:	cmp	w0, #0x4f
   39cc4:	and	w7, w0, #0xff
   39cc8:	b.ne	39e24 <__asan_cplus_demangle_type@@Base+0x29b4>  // b.any
   39ccc:	ldr	w0, [x19, #72]
   39cd0:	cmp	w25, #0x4f
   39cd4:	add	w0, w0, #0x9
   39cd8:	str	w0, [x19, #72]
   39cdc:	b.ne	39e64 <__asan_cplus_demangle_type@@Base+0x29f4>  // b.any
   39ce0:	ldr	w26, [x19, #76]
   39ce4:	mov	w0, #0x1                   	// #1
   39ce8:	str	w0, [x19, #76]
   39cec:	mov	x0, x19
   39cf0:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39cf4:	str	w26, [x19, #76]
   39cf8:	cbz	x0, 39d2c <__asan_cplus_demangle_type@@Base+0x28bc>
   39cfc:	ldr	x5, [x19, #24]
   39d00:	ldrb	w1, [x5]
   39d04:	cmp	w1, #0x45
   39d08:	b.ne	39d2c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   39d0c:	ldp	w3, w1, [x19, #40]
   39d10:	add	x5, x5, #0x1
   39d14:	str	x5, [x19, #24]
   39d18:	mov	w7, w25
   39d1c:	cmp	w3, w1
   39d20:	b.lt	39d74 <__asan_cplus_demangle_type@@Base+0x2904>  // b.tstop
   39d24:	nop
   39d28:	str	xzr, [x20]
   39d2c:	mov	x20, #0x0                   	// #0
   39d30:	mov	x0, x20
   39d34:	ldp	x19, x20, [sp, #16]
   39d38:	ldp	x21, x22, [sp, #32]
   39d3c:	ldp	x23, x24, [sp, #48]
   39d40:	ldp	x25, x26, [sp, #64]
   39d44:	ldp	x29, x30, [sp], #80
   39d48:	ret
   39d4c:	ldr	w0, [x19, #72]
   39d50:	add	w3, w0, #0x9
   39d54:	mov	x0, #0x0                   	// #0
   39d58:	cbnz	w24, 39dcc <__asan_cplus_demangle_type@@Base+0x295c>
   39d5c:	mov	w7, #0x19                  	// #25
   39d60:	str	w3, [x19, #72]
   39d64:	nop
   39d68:	ldp	w3, w1, [x19, #40]
   39d6c:	cmp	w3, w1
   39d70:	b.ge	39d28 <__asan_cplus_demangle_type@@Base+0x28b8>  // b.tcont
   39d74:	mov	w4, #0x18                  	// #24
   39d78:	add	w8, w3, #0x1
   39d7c:	ldr	x6, [x19, #32]
   39d80:	smull	x3, w3, w4
   39d84:	add	x4, x6, x3
   39d88:	str	wzr, [x4, #4]
   39d8c:	str	w8, [x19, #40]
   39d90:	str	w7, [x6, x3]
   39d94:	stp	xzr, x0, [x4, #8]
   39d98:	ldr	x3, [x19, #24]
   39d9c:	str	x4, [x20]
   39da0:	add	x20, x4, #0x8
   39da4:	ldrb	w4, [x5]
   39da8:	ldrb	w0, [x3]
   39dac:	b	39bc8 <__asan_cplus_demangle_type@@Base+0x2758>
   39db0:	ldr	w1, [x19, #72]
   39db4:	mov	x0, #0x0                   	// #0
   39db8:	add	w1, w1, #0x9
   39dbc:	cbnz	w24, 39df4 <__asan_cplus_demangle_type@@Base+0x2984>
   39dc0:	mov	w7, #0x1a                  	// #26
   39dc4:	str	w1, [x19, #72]
   39dc8:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39dcc:	mov	w7, #0x1c                  	// #28
   39dd0:	str	w3, [x19, #72]
   39dd4:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39dd8:	ldr	w0, [x19, #72]
   39ddc:	add	w1, w0, #0x6
   39de0:	mov	x0, #0x0                   	// #0
   39de4:	cbnz	w24, 39e00 <__asan_cplus_demangle_type@@Base+0x2990>
   39de8:	mov	w7, #0x1b                  	// #27
   39dec:	str	w1, [x19, #72]
   39df0:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39df4:	mov	w7, #0x1d                  	// #29
   39df8:	str	w1, [x19, #72]
   39dfc:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39e00:	mov	w7, #0x1e                  	// #30
   39e04:	str	w1, [x19, #72]
   39e08:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39e0c:	ldr	w1, [x19, #72]
   39e10:	mov	x0, #0x0                   	// #0
   39e14:	mov	w7, #0x4d                  	// #77
   39e18:	add	w1, w1, #0x11
   39e1c:	str	w1, [x19, #72]
   39e20:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39e24:	cmp	w25, #0x77
   39e28:	b.ne	39d2c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   39e2c:	ldr	w1, [x19, #72]
   39e30:	mov	x0, x19
   39e34:	add	w1, w1, #0x6
   39e38:	str	w1, [x19, #72]
   39e3c:	bl	38278 <__asan_cplus_demangle_type@@Base+0xe08>
   39e40:	cbz	x0, 39d2c <__asan_cplus_demangle_type@@Base+0x28bc>
   39e44:	ldr	x5, [x19, #24]
   39e48:	ldrb	w1, [x5]
   39e4c:	cmp	w1, #0x45
   39e50:	b.ne	39d2c <__asan_cplus_demangle_type@@Base+0x28bc>  // b.any
   39e54:	add	x5, x5, #0x1
   39e58:	mov	w7, #0x50                  	// #80
   39e5c:	str	x5, [x19, #24]
   39e60:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39e64:	mov	x0, #0x0                   	// #0
   39e68:	b	39d68 <__asan_cplus_demangle_type@@Base+0x28f8>
   39e6c:	str	w3, [x23]
   39e70:	b	39c14 <__asan_cplus_demangle_type@@Base+0x27a4>
   39e74:	str	w1, [x23]
   39e78:	b	39c14 <__asan_cplus_demangle_type@@Base+0x27a4>
   39e7c:	nop
   39e80:	stp	x29, x30, [sp, #-96]!
   39e84:	mov	x29, sp
   39e88:	ldr	x3, [x0, #24]
   39e8c:	stp	x19, x20, [sp, #16]
   39e90:	mov	x19, x0
   39e94:	stp	x23, x24, [sp, #48]
   39e98:	ldrb	w1, [x3]
   39e9c:	ldr	x23, [x0, #64]
   39ea0:	cmp	w1, #0x45
   39ea4:	b.eq	39ff4 <__asan_cplus_demangle_type@@Base+0x2b84>  // b.none
   39ea8:	add	x24, sp, #0x58
   39eac:	mov	w20, #0x2f                  	// #47
   39eb0:	stp	x21, x22, [sp, #32]
   39eb4:	mov	w22, #0x1                   	// #1
   39eb8:	mov	w21, #0x18                  	// #24
   39ebc:	str	x25, [sp, #64]
   39ec0:	str	xzr, [sp, #88]
   39ec4:	nop
   39ec8:	cmp	w1, #0x4c
   39ecc:	b.eq	39fac <__asan_cplus_demangle_type@@Base+0x2b3c>  // b.none
   39ed0:	b.hi	39f60 <__asan_cplus_demangle_type@@Base+0x2af0>  // b.pmore
   39ed4:	sub	w1, w1, #0x49
   39ed8:	and	w1, w1, #0xff
   39edc:	cmp	w1, #0x1
   39ee0:	b.hi	39fa0 <__asan_cplus_demangle_type@@Base+0x2b30>  // b.pmore
   39ee4:	add	x3, x3, #0x1
   39ee8:	str	x3, [x19, #24]
   39eec:	mov	x0, x19
   39ef0:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   39ef4:	cbz	x0, 39fd8 <__asan_cplus_demangle_type@@Base+0x2b68>
   39ef8:	ldp	w1, w2, [x19, #40]
   39efc:	cmp	w1, w2
   39f00:	b.ge	39fb8 <__asan_cplus_demangle_type@@Base+0x2b48>  // b.tcont
   39f04:	ldp	x3, x5, [x19, #24]
   39f08:	smull	x4, w1, w21
   39f0c:	add	w1, w1, #0x1
   39f10:	add	x2, x5, x4
   39f14:	str	wzr, [x2, #4]
   39f18:	str	w1, [x19, #40]
   39f1c:	str	w20, [x5, x4]
   39f20:	stp	x0, xzr, [x2, #8]
   39f24:	str	x2, [x24]
   39f28:	add	x24, x2, #0x10
   39f2c:	ldrb	w1, [x3]
   39f30:	cmp	w1, #0x45
   39f34:	b.ne	39ec8 <__asan_cplus_demangle_type@@Base+0x2a58>  // b.any
   39f38:	add	x3, x3, #0x1
   39f3c:	str	x3, [x19, #24]
   39f40:	str	x23, [x19, #64]
   39f44:	ldp	x19, x20, [sp, #16]
   39f48:	ldp	x21, x22, [sp, #32]
   39f4c:	ldp	x23, x24, [sp, #48]
   39f50:	ldr	x25, [sp, #64]
   39f54:	ldr	x0, [sp, #88]
   39f58:	ldp	x29, x30, [sp], #96
   39f5c:	ret
   39f60:	cmp	w1, #0x58
   39f64:	b.ne	39fa0 <__asan_cplus_demangle_type@@Base+0x2b30>  // b.any
   39f68:	add	x3, x3, #0x1
   39f6c:	ldr	w25, [x19, #76]
   39f70:	str	x3, [x19, #24]
   39f74:	mov	x0, x19
   39f78:	str	w22, [x19, #76]
   39f7c:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   39f80:	str	w25, [x19, #76]
   39f84:	ldr	x1, [x19, #24]
   39f88:	ldrb	w2, [x1]
   39f8c:	cmp	w2, #0x45
   39f90:	b.ne	39fd8 <__asan_cplus_demangle_type@@Base+0x2b68>  // b.any
   39f94:	add	x1, x1, #0x1
   39f98:	str	x1, [x19, #24]
   39f9c:	b	39ef4 <__asan_cplus_demangle_type@@Base+0x2a84>
   39fa0:	mov	x0, x19
   39fa4:	bl	6420 <__asan_cplus_demangle_type@plt>
   39fa8:	b	39ef4 <__asan_cplus_demangle_type@@Base+0x2a84>
   39fac:	mov	x0, x19
   39fb0:	bl	3b528 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   39fb4:	b	39ef4 <__asan_cplus_demangle_type@@Base+0x2a84>
   39fb8:	str	xzr, [x24]
   39fbc:	mov	x0, #0x0                   	// #0
   39fc0:	ldp	x19, x20, [sp, #16]
   39fc4:	ldp	x21, x22, [sp, #32]
   39fc8:	ldp	x23, x24, [sp, #48]
   39fcc:	ldr	x25, [sp, #64]
   39fd0:	ldp	x29, x30, [sp], #96
   39fd4:	ret
   39fd8:	mov	x0, #0x0                   	// #0
   39fdc:	ldp	x19, x20, [sp, #16]
   39fe0:	ldp	x21, x22, [sp, #32]
   39fe4:	ldp	x23, x24, [sp, #48]
   39fe8:	ldr	x25, [sp, #64]
   39fec:	ldp	x29, x30, [sp], #96
   39ff0:	ret
   39ff4:	add	x3, x3, #0x1
   39ff8:	mov	x2, #0x0                   	// #0
   39ffc:	ldp	x23, x24, [sp, #48]
   3a000:	str	x3, [x0, #24]
   3a004:	ldp	x19, x20, [sp, #16]
   3a008:	mov	w1, #0x2f                  	// #47
   3a00c:	ldp	x29, x30, [sp], #96
   3a010:	mov	x3, #0x0                   	// #0
   3a014:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a018:	stp	x29, x30, [sp, #-80]!
   3a01c:	mov	x29, sp
   3a020:	ldr	w3, [x0, #72]
   3a024:	ldr	x2, [x0, #24]
   3a028:	stp	x19, x20, [sp, #16]
   3a02c:	add	w1, w3, #0x14
   3a030:	str	w1, [x0, #72]
   3a034:	mov	x19, x0
   3a038:	ldrb	w1, [x2]
   3a03c:	cmp	w1, #0x54
   3a040:	b.eq	3a26c <__asan_cplus_demangle_type@@Base+0x2dfc>  // b.none
   3a044:	cmp	w1, #0x47
   3a048:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a04c:	add	x1, x2, #0x1
   3a050:	str	x1, [x0, #24]
   3a054:	ldrb	w1, [x2, #1]
   3a058:	cbz	w1, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a05c:	add	x1, x2, #0x2
   3a060:	str	x1, [x0, #24]
   3a064:	ldrb	w3, [x2, #1]
   3a068:	cmp	w3, #0x54
   3a06c:	b.eq	3a420 <__asan_cplus_demangle_type@@Base+0x2fb0>  // b.none
   3a070:	b.ls	3a184 <__asan_cplus_demangle_type@@Base+0x2d14>  // b.plast
   3a074:	cmp	w3, #0x56
   3a078:	b.eq	3a400 <__asan_cplus_demangle_type@@Base+0x2f90>  // b.none
   3a07c:	cmp	w3, #0x72
   3a080:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a084:	ldrb	w5, [x2, #2]
   3a088:	mov	w9, #0x0                   	// #0
   3a08c:	cmp	w5, #0x6e
   3a090:	b.eq	3a5d0 <__asan_cplus_demangle_type@@Base+0x3160>  // b.none
   3a094:	sub	w0, w5, #0x30
   3a098:	and	w0, w0, #0xff
   3a09c:	cmp	w0, #0x9
   3a0a0:	b.hi	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.pmore
   3a0a4:	mov	w8, #0xcccd                	// #52429
   3a0a8:	add	x1, x1, #0x1
   3a0ac:	mov	w0, #0x0                   	// #0
   3a0b0:	mov	w7, #0x7fffffff            	// #2147483647
   3a0b4:	movk	w8, #0xcccc, lsl #16
   3a0b8:	b	3a0d0 <__asan_cplus_demangle_type@@Base+0x2c60>
   3a0bc:	umull	x2, w2, w8
   3a0c0:	add	x1, x1, #0x1
   3a0c4:	lsr	x2, x2, #35
   3a0c8:	cmp	w2, w0
   3a0cc:	b.lt	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.tstop
   3a0d0:	str	x1, [x19, #24]
   3a0d4:	add	w0, w0, w0, lsl #2
   3a0d8:	ldrb	w4, [x1]
   3a0dc:	add	w6, w5, w0, lsl #1
   3a0e0:	sub	w0, w6, #0x30
   3a0e4:	sub	w3, w4, #0x30
   3a0e8:	mov	w5, w4
   3a0ec:	sub	w2, w7, w3
   3a0f0:	and	w3, w3, #0xff
   3a0f4:	cmp	w3, #0x9
   3a0f8:	b.ls	3a0bc <__asan_cplus_demangle_type@@Base+0x2c4c>  // b.plast
   3a0fc:	stp	x21, x22, [sp, #32]
   3a100:	cmp	w9, #0x0
   3a104:	ccmp	w0, #0x1, #0x4, eq  // eq = none
   3a108:	stp	x23, x24, [sp, #48]
   3a10c:	stp	x25, x26, [sp, #64]
   3a110:	b.le	3a168 <__asan_cplus_demangle_type@@Base+0x2cf8>
   3a114:	cbz	w4, 3a168 <__asan_cplus_demangle_type@@Base+0x2cf8>
   3a118:	add	x8, x1, #0x1
   3a11c:	str	x8, [x19, #24]
   3a120:	ldrb	w0, [x1]
   3a124:	cmp	w0, #0x5f
   3a128:	b.ne	3a168 <__asan_cplus_demangle_type@@Base+0x2cf8>  // b.any
   3a12c:	sub	w21, w6, #0x31
   3a130:	mov	x26, #0x0                   	// #0
   3a134:	mov	w23, #0x18                  	// #24
   3a138:	mov	w24, #0x41                  	// #65
   3a13c:	ldrb	w1, [x8]
   3a140:	cbz	w1, 3a168 <__asan_cplus_demangle_type@@Base+0x2cf8>
   3a144:	cmp	w1, #0x24
   3a148:	b.ne	3a6d8 <__asan_cplus_demangle_type@@Base+0x3268>  // b.any
   3a14c:	ldrb	w1, [x8, #1]
   3a150:	cmp	w1, #0x53
   3a154:	b.eq	3a75c <__asan_cplus_demangle_type@@Base+0x32ec>  // b.none
   3a158:	cmp	w1, #0x5f
   3a15c:	b.eq	3a648 <__asan_cplus_demangle_type@@Base+0x31d8>  // b.none
   3a160:	cmp	w1, #0x24
   3a164:	b.eq	3a64c <__asan_cplus_demangle_type@@Base+0x31dc>  // b.none
   3a168:	ldp	x21, x22, [sp, #32]
   3a16c:	ldp	x23, x24, [sp, #48]
   3a170:	ldp	x25, x26, [sp, #64]
   3a174:	mov	x0, #0x0                   	// #0
   3a178:	ldp	x19, x20, [sp, #16]
   3a17c:	ldp	x29, x30, [sp], #80
   3a180:	ret
   3a184:	cmp	w3, #0x41
   3a188:	b.eq	3a464 <__asan_cplus_demangle_type@@Base+0x2ff4>  // b.none
   3a18c:	cmp	w3, #0x52
   3a190:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a194:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3a198:	mov	x2, x0
   3a19c:	ldp	w1, w0, [x19, #40]
   3a1a0:	cmp	w1, w0
   3a1a4:	b.ge	3a60c <__asan_cplus_demangle_type@@Base+0x319c>  // b.tcont
   3a1a8:	ldp	x6, x0, [x19, #24]
   3a1ac:	mov	w3, #0x18                  	// #24
   3a1b0:	add	w5, w1, #0x1
   3a1b4:	mov	w4, #0x42                  	// #66
   3a1b8:	smull	x1, w1, w3
   3a1bc:	add	x3, x0, x1
   3a1c0:	str	wzr, [x3, #4]
   3a1c4:	str	w5, [x19, #40]
   3a1c8:	str	w4, [x0, x1]
   3a1cc:	ldrb	w1, [x6]
   3a1d0:	cmp	w1, #0x6e
   3a1d4:	b.eq	3a5e4 <__asan_cplus_demangle_type@@Base+0x3174>  // b.none
   3a1d8:	sub	w0, w1, #0x30
   3a1dc:	and	w0, w0, #0xff
   3a1e0:	cmp	w0, #0x9
   3a1e4:	b.hi	3a8a8 <__asan_cplus_demangle_type@@Base+0x3438>  // b.pmore
   3a1e8:	mov	w0, #0x0                   	// #0
   3a1ec:	mov	w9, #0xcccd                	// #52429
   3a1f0:	mov	w7, w1
   3a1f4:	add	x6, x6, #0x1
   3a1f8:	mov	w1, #0x0                   	// #0
   3a1fc:	mov	w8, #0x7fffffff            	// #2147483647
   3a200:	movk	w9, #0xcccc, lsl #16
   3a204:	b	3a218 <__asan_cplus_demangle_type@@Base+0x2da8>
   3a208:	umull	x4, w4, w9
   3a20c:	lsr	x4, x4, #35
   3a210:	cmp	w4, w1
   3a214:	b.lt	3a754 <__asan_cplus_demangle_type@@Base+0x32e4>  // b.tstop
   3a218:	str	x6, [x19, #24]
   3a21c:	add	w1, w1, w1, lsl #2
   3a220:	add	x6, x6, #0x1
   3a224:	ldurb	w4, [x6, #-1]
   3a228:	add	w1, w7, w1, lsl #1
   3a22c:	sub	w1, w1, #0x30
   3a230:	sub	w5, w4, #0x30
   3a234:	mov	w7, w4
   3a238:	sub	w4, w8, w5
   3a23c:	and	w5, w5, #0xff
   3a240:	cmp	w5, #0x9
   3a244:	b.ls	3a208 <__asan_cplus_demangle_type@@Base+0x2d98>  // b.plast
   3a248:	cbz	w0, 3a250 <__asan_cplus_demangle_type@@Base+0x2de0>
   3a24c:	neg	w1, w1
   3a250:	sxtw	x1, w1
   3a254:	str	x1, [x3, #8]
   3a258:	mov	x0, x19
   3a25c:	mov	w1, #0x16                  	// #22
   3a260:	ldp	x19, x20, [sp, #16]
   3a264:	ldp	x29, x30, [sp], #80
   3a268:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a26c:	add	x1, x2, #0x1
   3a270:	str	x1, [x0, #24]
   3a274:	ldrb	w1, [x2, #1]
   3a278:	cbz	w1, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a27c:	add	x1, x2, #0x2
   3a280:	str	x1, [x0, #24]
   3a284:	ldrb	w1, [x2, #1]
   3a288:	cmp	w1, #0x53
   3a28c:	b.eq	3a7f0 <__asan_cplus_demangle_type@@Base+0x3380>  // b.none
   3a290:	b.ls	3a2e0 <__asan_cplus_demangle_type@@Base+0x2e70>  // b.plast
   3a294:	cmp	w1, #0x63
   3a298:	b.eq	3a7ac <__asan_cplus_demangle_type@@Base+0x333c>  // b.none
   3a29c:	b.ls	3a34c <__asan_cplus_demangle_type@@Base+0x2edc>  // b.plast
   3a2a0:	cmp	w1, #0x68
   3a2a4:	b.eq	3a4a8 <__asan_cplus_demangle_type@@Base+0x3038>  // b.none
   3a2a8:	cmp	w1, #0x76
   3a2ac:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a2b0:	bl	2e560 <__asan_backtrace_create_state@@Base+0x8d8>
   3a2b4:	cbz	w0, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a2b8:	mov	x0, x19
   3a2bc:	mov	w1, #0x0                   	// #0
   3a2c0:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a2c4:	mov	x2, x0
   3a2c8:	mov	x0, x19
   3a2cc:	mov	x3, #0x0                   	// #0
   3a2d0:	ldp	x19, x20, [sp, #16]
   3a2d4:	mov	w1, #0x10                  	// #16
   3a2d8:	ldp	x29, x30, [sp], #80
   3a2dc:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a2e0:	cmp	w1, #0x48
   3a2e4:	b.eq	3a810 <__asan_cplus_demangle_type@@Base+0x33a0>  // b.none
   3a2e8:	b.ls	3a31c <__asan_cplus_demangle_type@@Base+0x2eac>  // b.plast
   3a2ec:	cmp	w1, #0x49
   3a2f0:	b.eq	3a488 <__asan_cplus_demangle_type@@Base+0x3018>  // b.none
   3a2f4:	cmp	w1, #0x4a
   3a2f8:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a2fc:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a300:	mov	x2, x0
   3a304:	mov	x0, x19
   3a308:	mov	x3, #0x0                   	// #0
   3a30c:	ldp	x19, x20, [sp, #16]
   3a310:	mov	w1, #0x12                  	// #18
   3a314:	ldp	x29, x30, [sp], #80
   3a318:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a31c:	cmp	w1, #0x43
   3a320:	b.eq	3a500 <__asan_cplus_demangle_type@@Base+0x3090>  // b.none
   3a324:	cmp	w1, #0x46
   3a328:	b.ne	3a37c <__asan_cplus_demangle_type@@Base+0x2f0c>  // b.any
   3a32c:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a330:	mov	x2, x0
   3a334:	mov	x0, x19
   3a338:	mov	x3, #0x0                   	// #0
   3a33c:	ldp	x19, x20, [sp, #16]
   3a340:	mov	w1, #0xe                   	// #14
   3a344:	ldp	x29, x30, [sp], #80
   3a348:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a34c:	cmp	w1, #0x56
   3a350:	b.eq	3a4d8 <__asan_cplus_demangle_type@@Base+0x3068>  // b.none
   3a354:	cmp	w1, #0x57
   3a358:	b.ne	3a3d0 <__asan_cplus_demangle_type@@Base+0x2f60>  // b.any
   3a35c:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3a360:	mov	x2, x0
   3a364:	mov	x0, x19
   3a368:	mov	x3, #0x0                   	// #0
   3a36c:	ldp	x19, x20, [sp, #16]
   3a370:	mov	w1, #0x15                  	// #21
   3a374:	ldp	x29, x30, [sp], #80
   3a378:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a37c:	cmp	w1, #0x41
   3a380:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a384:	ldrb	w0, [x2, #2]
   3a388:	cmp	w0, #0x4c
   3a38c:	b.eq	3a638 <__asan_cplus_demangle_type@@Base+0x31c8>  // b.none
   3a390:	b.hi	3a764 <__asan_cplus_demangle_type@@Base+0x32f4>  // b.pmore
   3a394:	sub	w0, w0, #0x49
   3a398:	and	w0, w0, #0xff
   3a39c:	cmp	w0, #0x1
   3a3a0:	b.hi	3a898 <__asan_cplus_demangle_type@@Base+0x3428>  // b.pmore
   3a3a4:	add	x2, x2, #0x3
   3a3a8:	str	x2, [x19, #24]
   3a3ac:	mov	x0, x19
   3a3b0:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   3a3b4:	mov	x2, x0
   3a3b8:	mov	x0, x19
   3a3bc:	mov	x3, #0x0                   	// #0
   3a3c0:	ldp	x19, x20, [sp, #16]
   3a3c4:	mov	w1, #0x30                  	// #48
   3a3c8:	ldp	x29, x30, [sp], #80
   3a3cc:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a3d0:	cmp	w1, #0x54
   3a3d4:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a3d8:	add	w3, w3, #0xa
   3a3dc:	str	w3, [x0, #72]
   3a3e0:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a3e4:	mov	x2, x0
   3a3e8:	mov	x0, x19
   3a3ec:	mov	x3, #0x0                   	// #0
   3a3f0:	ldp	x19, x20, [sp, #16]
   3a3f4:	mov	w1, #0xa                   	// #10
   3a3f8:	ldp	x29, x30, [sp], #80
   3a3fc:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a400:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3a404:	mov	x2, x0
   3a408:	mov	x0, x19
   3a40c:	mov	x3, #0x0                   	// #0
   3a410:	ldp	x19, x20, [sp, #16]
   3a414:	mov	w1, #0x13                  	// #19
   3a418:	ldp	x29, x30, [sp], #80
   3a41c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a420:	ldrb	w1, [x2, #2]
   3a424:	cbz	w1, 3a43c <__asan_cplus_demangle_type@@Base+0x2fcc>
   3a428:	add	x1, x2, #0x3
   3a42c:	str	x1, [x0, #24]
   3a430:	ldrb	w1, [x2, #2]
   3a434:	cmp	w1, #0x6e
   3a438:	b.eq	3a614 <__asan_cplus_demangle_type@@Base+0x31a4>  // b.none
   3a43c:	mov	x0, x19
   3a440:	mov	w1, #0x0                   	// #0
   3a444:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a448:	mov	x2, x0
   3a44c:	mov	x0, x19
   3a450:	mov	x3, #0x0                   	// #0
   3a454:	ldp	x19, x20, [sp, #16]
   3a458:	mov	w1, #0x49                  	// #73
   3a45c:	ldp	x29, x30, [sp], #80
   3a460:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a464:	mov	w1, #0x0                   	// #0
   3a468:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a46c:	mov	x2, x0
   3a470:	mov	x0, x19
   3a474:	ldp	x19, x20, [sp, #16]
   3a478:	mov	x3, #0x0                   	// #0
   3a47c:	ldp	x29, x30, [sp], #80
   3a480:	mov	w1, #0x17                  	// #23
   3a484:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a488:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a48c:	mov	x2, x0
   3a490:	mov	x0, x19
   3a494:	mov	x3, #0x0                   	// #0
   3a498:	ldp	x19, x20, [sp, #16]
   3a49c:	mov	w1, #0xc                   	// #12
   3a4a0:	ldp	x29, x30, [sp], #80
   3a4a4:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a4a8:	bl	2e560 <__asan_backtrace_create_state@@Base+0x8d8>
   3a4ac:	cbz	w0, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a4b0:	mov	x0, x19
   3a4b4:	mov	w1, #0x0                   	// #0
   3a4b8:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a4bc:	mov	x2, x0
   3a4c0:	mov	x0, x19
   3a4c4:	mov	x3, #0x0                   	// #0
   3a4c8:	ldp	x19, x20, [sp, #16]
   3a4cc:	mov	w1, #0xf                   	// #15
   3a4d0:	ldp	x29, x30, [sp], #80
   3a4d4:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a4d8:	add	w3, w3, #0xf
   3a4dc:	str	w3, [x0, #72]
   3a4e0:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a4e4:	mov	x2, x0
   3a4e8:	mov	x0, x19
   3a4ec:	mov	x3, #0x0                   	// #0
   3a4f0:	ldp	x19, x20, [sp, #16]
   3a4f4:	mov	w1, #0x9                   	// #9
   3a4f8:	ldp	x29, x30, [sp], #80
   3a4fc:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a500:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a504:	mov	x20, x0
   3a508:	ldr	x8, [x19, #24]
   3a50c:	ldrb	w6, [x8]
   3a510:	cmp	w6, #0x6e
   3a514:	b.eq	3a870 <__asan_cplus_demangle_type@@Base+0x3400>  // b.none
   3a518:	sub	w0, w6, #0x30
   3a51c:	and	w0, w0, #0xff
   3a520:	cmp	w0, #0x9
   3a524:	b.hi	3a590 <__asan_cplus_demangle_type@@Base+0x3120>  // b.pmore
   3a528:	mov	w0, #0x0                   	// #0
   3a52c:	mov	w10, #0xcccd                	// #52429
   3a530:	add	x4, x8, #0x1
   3a534:	mov	w1, #0x0                   	// #0
   3a538:	mov	w9, #0x7fffffff            	// #2147483647
   3a53c:	movk	w10, #0xcccc, lsl #16
   3a540:	b	3a554 <__asan_cplus_demangle_type@@Base+0x30e4>
   3a544:	umull	x2, w2, w10
   3a548:	lsr	x2, x2, #35
   3a54c:	cmp	w2, w1
   3a550:	b.lt	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.tstop
   3a554:	add	w1, w1, w1, lsl #2
   3a558:	str	x4, [x19, #24]
   3a55c:	mov	x8, x4
   3a560:	add	x4, x4, #0x1
   3a564:	add	w7, w6, w1, lsl #1
   3a568:	ldurb	w6, [x4, #-1]
   3a56c:	sub	w1, w7, #0x30
   3a570:	sub	w5, w6, #0x30
   3a574:	sub	w2, w9, w5
   3a578:	and	w5, w5, #0xff
   3a57c:	cmp	w5, #0x9
   3a580:	b.ls	3a544 <__asan_cplus_demangle_type@@Base+0x30d4>  // b.plast
   3a584:	cbz	w0, 3a590 <__asan_cplus_demangle_type@@Base+0x3120>
   3a588:	cmp	w7, #0x30
   3a58c:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a590:	cmp	w6, #0x5f
   3a594:	b.ne	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>  // b.any
   3a598:	add	x8, x8, #0x1
   3a59c:	str	x8, [x19, #24]
   3a5a0:	mov	x0, x19
   3a5a4:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a5a8:	mov	x2, x0
   3a5ac:	ldr	w1, [x19, #72]
   3a5b0:	mov	x3, x20
   3a5b4:	mov	x0, x19
   3a5b8:	add	w1, w1, #0x5
   3a5bc:	str	w1, [x19, #72]
   3a5c0:	ldp	x19, x20, [sp, #16]
   3a5c4:	mov	w1, #0xb                   	// #11
   3a5c8:	ldp	x29, x30, [sp], #80
   3a5cc:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a5d0:	add	x1, x2, #0x3
   3a5d4:	str	x1, [x0, #24]
   3a5d8:	mov	w9, #0x1                   	// #1
   3a5dc:	ldrb	w5, [x2, #3]
   3a5e0:	b	3a094 <__asan_cplus_demangle_type@@Base+0x2c24>
   3a5e4:	add	x4, x6, #0x1
   3a5e8:	str	x4, [x19, #24]
   3a5ec:	ldrb	w1, [x6, #1]
   3a5f0:	sub	w0, w1, #0x30
   3a5f4:	and	w0, w0, #0xff
   3a5f8:	cmp	w0, #0x9
   3a5fc:	b.hi	3a8b8 <__asan_cplus_demangle_type@@Base+0x3448>  // b.pmore
   3a600:	mov	x6, x4
   3a604:	mov	w0, #0x1                   	// #1
   3a608:	b	3a1ec <__asan_cplus_demangle_type@@Base+0x2d7c>
   3a60c:	mov	x3, #0x0                   	// #0
   3a610:	b	3a258 <__asan_cplus_demangle_type@@Base+0x2de8>
   3a614:	mov	w1, #0x0                   	// #0
   3a618:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a61c:	mov	x2, x0
   3a620:	mov	x0, x19
   3a624:	ldp	x19, x20, [sp, #16]
   3a628:	mov	x3, #0x0                   	// #0
   3a62c:	ldp	x29, x30, [sp], #80
   3a630:	mov	w1, #0x4a                  	// #74
   3a634:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a638:	mov	x0, x19
   3a63c:	bl	3b528 <__asan_cplus_demangle_mangled_name@@Base+0x200>
   3a640:	mov	x2, x0
   3a644:	b	3a3b8 <__asan_cplus_demangle_type@@Base+0x2f48>
   3a648:	mov	w1, #0x2e                  	// #46
   3a64c:	ldp	w2, w0, [x19, #40]
   3a650:	ldr	x8, [x19, #24]
   3a654:	cmp	w2, w0
   3a658:	add	x8, x8, #0x2
   3a65c:	b.ge	3a830 <__asan_cplus_demangle_type@@Base+0x33c0>  // b.tcont
   3a660:	ldr	x4, [x19, #32]
   3a664:	smull	x3, w2, w23
   3a668:	add	w2, w2, #0x1
   3a66c:	sub	w21, w21, #0x2
   3a670:	add	x22, x4, x3
   3a674:	str	wzr, [x22, #4]
   3a678:	str	w2, [x19, #40]
   3a67c:	str	w24, [x4, x3]
   3a680:	str	w1, [x22, #8]
   3a684:	str	x8, [x19, #24]
   3a688:	cbz	x26, 3a74c <__asan_cplus_demangle_type@@Base+0x32dc>
   3a68c:	mov	x2, x26
   3a690:	mov	x3, x22
   3a694:	mov	x0, x19
   3a698:	mov	w1, #0x40                  	// #64
   3a69c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a6a0:	mov	x26, x0
   3a6a4:	cbz	x0, 3a168 <__asan_cplus_demangle_type@@Base+0x2cf8>
   3a6a8:	cmp	w21, #0x0
   3a6ac:	b.gt	3a13c <__asan_cplus_demangle_type@@Base+0x2ccc>
   3a6b0:	mov	x2, x26
   3a6b4:	mov	x0, x19
   3a6b8:	ldp	x19, x20, [sp, #16]
   3a6bc:	mov	x3, #0x0                   	// #0
   3a6c0:	ldp	x21, x22, [sp, #32]
   3a6c4:	mov	w1, #0x3f                  	// #63
   3a6c8:	ldp	x23, x24, [sp, #48]
   3a6cc:	ldp	x25, x26, [sp, #64]
   3a6d0:	ldp	x29, x30, [sp], #80
   3a6d4:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a6d8:	mov	x20, #0x1                   	// #1
   3a6dc:	b	3a6e4 <__asan_cplus_demangle_type@@Base+0x3274>
   3a6e0:	mov	x20, x3
   3a6e4:	cmp	w21, w20
   3a6e8:	mov	w25, w20
   3a6ec:	b.le	3a704 <__asan_cplus_demangle_type@@Base+0x3294>
   3a6f0:	ldrb	w1, [x8, x20]
   3a6f4:	add	x3, x20, #0x1
   3a6f8:	cmp	w1, #0x24
   3a6fc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3a700:	b.ne	3a6e0 <__asan_cplus_demangle_type@@Base+0x3270>  // b.any
   3a704:	ldp	w22, w0, [x19, #40]
   3a708:	cmp	w22, w0
   3a70c:	b.ge	3a844 <__asan_cplus_demangle_type@@Base+0x33d4>  // b.tcont
   3a710:	ldr	x0, [x19, #32]
   3a714:	add	w3, w22, #0x1
   3a718:	mov	x1, x8
   3a71c:	mov	w2, w25
   3a720:	smaddl	x22, w22, w23, x0
   3a724:	mov	x0, x22
   3a728:	str	wzr, [x22, #4]
   3a72c:	str	w3, [x19, #40]
   3a730:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3a734:	cbz	w0, 3a854 <__asan_cplus_demangle_type@@Base+0x33e4>
   3a738:	ldr	x8, [x19, #24]
   3a73c:	sub	w21, w21, w25
   3a740:	add	x8, x8, x20
   3a744:	str	x8, [x19, #24]
   3a748:	b	3a688 <__asan_cplus_demangle_type@@Base+0x3218>
   3a74c:	mov	x26, x22
   3a750:	b	3a6a8 <__asan_cplus_demangle_type@@Base+0x3238>
   3a754:	mov	x1, #0xffffffffffffffff    	// #-1
   3a758:	b	3a254 <__asan_cplus_demangle_type@@Base+0x2de4>
   3a75c:	mov	w1, #0x2f                  	// #47
   3a760:	b	3a64c <__asan_cplus_demangle_type@@Base+0x31dc>
   3a764:	cmp	w0, #0x58
   3a768:	b.ne	3a898 <__asan_cplus_demangle_type@@Base+0x3428>  // b.any
   3a76c:	add	x2, x2, #0x3
   3a770:	ldr	w20, [x19, #76]
   3a774:	mov	w1, #0x1                   	// #1
   3a778:	str	x2, [x19, #24]
   3a77c:	str	w1, [x19, #76]
   3a780:	mov	x0, x19
   3a784:	bl	39450 <__asan_cplus_demangle_type@@Base+0x1fe0>
   3a788:	str	w20, [x19, #76]
   3a78c:	ldr	x1, [x19, #24]
   3a790:	mov	x2, x0
   3a794:	ldrb	w0, [x1]
   3a798:	cmp	w0, #0x45
   3a79c:	b.ne	3a8b0 <__asan_cplus_demangle_type@@Base+0x3440>  // b.any
   3a7a0:	add	x1, x1, #0x1
   3a7a4:	str	x1, [x19, #24]
   3a7a8:	b	3a3b8 <__asan_cplus_demangle_type@@Base+0x2f48>
   3a7ac:	mov	w1, #0x0                   	// #0
   3a7b0:	bl	2e560 <__asan_backtrace_create_state@@Base+0x8d8>
   3a7b4:	cbz	w0, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a7b8:	mov	x0, x19
   3a7bc:	mov	w1, #0x0                   	// #0
   3a7c0:	bl	2e560 <__asan_backtrace_create_state@@Base+0x8d8>
   3a7c4:	cbz	w0, 3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a7c8:	mov	x0, x19
   3a7cc:	mov	w1, #0x0                   	// #0
   3a7d0:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3a7d4:	mov	x2, x0
   3a7d8:	mov	x0, x19
   3a7dc:	mov	x3, #0x0                   	// #0
   3a7e0:	ldp	x19, x20, [sp, #16]
   3a7e4:	mov	w1, #0x11                  	// #17
   3a7e8:	ldp	x29, x30, [sp], #80
   3a7ec:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a7f0:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a7f4:	mov	x2, x0
   3a7f8:	mov	x0, x19
   3a7fc:	mov	x3, #0x0                   	// #0
   3a800:	ldp	x19, x20, [sp, #16]
   3a804:	mov	w1, #0xd                   	// #13
   3a808:	ldp	x29, x30, [sp], #80
   3a80c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a810:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3a814:	mov	x2, x0
   3a818:	mov	x0, x19
   3a81c:	mov	x3, #0x0                   	// #0
   3a820:	ldp	x19, x20, [sp, #16]
   3a824:	mov	w1, #0x14                  	// #20
   3a828:	ldp	x29, x30, [sp], #80
   3a82c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3a830:	ldp	x21, x22, [sp, #32]
   3a834:	ldp	x23, x24, [sp, #48]
   3a838:	ldp	x25, x26, [sp, #64]
   3a83c:	str	x8, [x19, #24]
   3a840:	b	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a844:	mov	w2, w25
   3a848:	mov	x1, x8
   3a84c:	mov	x0, #0x0                   	// #0
   3a850:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3a854:	ldr	x0, [x19, #24]
   3a858:	ldp	x21, x22, [sp, #32]
   3a85c:	add	x20, x0, x20
   3a860:	ldp	x23, x24, [sp, #48]
   3a864:	ldp	x25, x26, [sp, #64]
   3a868:	str	x20, [x19, #24]
   3a86c:	b	3a174 <__asan_cplus_demangle_type@@Base+0x2d04>
   3a870:	add	x1, x8, #0x1
   3a874:	str	x1, [x19, #24]
   3a878:	ldrb	w6, [x8, #1]
   3a87c:	mov	x8, x1
   3a880:	sub	w0, w6, #0x30
   3a884:	and	w0, w0, #0xff
   3a888:	cmp	w0, #0x9
   3a88c:	b.hi	3a590 <__asan_cplus_demangle_type@@Base+0x3120>  // b.pmore
   3a890:	mov	w0, #0x1                   	// #1
   3a894:	b	3a52c <__asan_cplus_demangle_type@@Base+0x30bc>
   3a898:	mov	x0, x19
   3a89c:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a8a0:	mov	x2, x0
   3a8a4:	b	3a3b8 <__asan_cplus_demangle_type@@Base+0x2f48>
   3a8a8:	mov	x1, #0x0                   	// #0
   3a8ac:	b	3a254 <__asan_cplus_demangle_type@@Base+0x2de4>
   3a8b0:	mov	x2, #0x0                   	// #0
   3a8b4:	b	3a3b8 <__asan_cplus_demangle_type@@Base+0x2f48>
   3a8b8:	mov	w1, #0x0                   	// #0
   3a8bc:	neg	w1, w1
   3a8c0:	b	3a250 <__asan_cplus_demangle_type@@Base+0x2de0>
   3a8c4:	nop
   3a8c8:	ldr	x2, [x0, #24]
   3a8cc:	mov	w3, #0x54                  	// #84
   3a8d0:	ldrb	w2, [x2]
   3a8d4:	cmp	w2, #0x47
   3a8d8:	ccmp	w2, w3, #0x4, ne  // ne = any
   3a8dc:	b.ne	3a8e4 <__asan_cplus_demangle_type@@Base+0x3474>  // b.any
   3a8e0:	b	3a018 <__asan_cplus_demangle_type@@Base+0x2ba8>
   3a8e4:	stp	x29, x30, [sp, #-48]!
   3a8e8:	mov	x29, sp
   3a8ec:	stp	x19, x20, [sp, #16]
   3a8f0:	mov	x19, x0
   3a8f4:	mov	w20, w1
   3a8f8:	stp	x21, x22, [sp, #32]
   3a8fc:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3a900:	mov	x21, x0
   3a904:	cbz	x0, 3a9c0 <__asan_cplus_demangle_type@@Base+0x3550>
   3a908:	cbz	w20, 3a958 <__asan_cplus_demangle_type@@Base+0x34e8>
   3a90c:	ldr	w0, [x19, #16]
   3a910:	tbnz	w0, #0, 3a958 <__asan_cplus_demangle_type@@Base+0x34e8>
   3a914:	mov	x0, #0x1f                  	// #31
   3a918:	mov	x2, #0x1                   	// #1
   3a91c:	movk	x0, #0x1a, lsl #48
   3a920:	ldr	w3, [x21]
   3a924:	sub	w1, w3, #0x1c
   3a928:	cmp	w1, #0x34
   3a92c:	b.hi	3a93c <__asan_cplus_demangle_type@@Base+0x34cc>  // b.pmore
   3a930:	lsl	x1, x2, x1
   3a934:	tst	x1, x0
   3a938:	b.ne	3aa70 <__asan_cplus_demangle_type@@Base+0x3600>  // b.any
   3a93c:	cmp	w3, #0x2
   3a940:	b.eq	3aa78 <__asan_cplus_demangle_type@@Base+0x3608>  // b.none
   3a944:	mov	x0, x21
   3a948:	ldp	x19, x20, [sp, #16]
   3a94c:	ldp	x21, x22, [sp, #32]
   3a950:	ldp	x29, x30, [sp], #48
   3a954:	ret
   3a958:	ldr	x5, [x19, #24]
   3a95c:	ldrb	w1, [x5]
   3a960:	cmp	w1, #0x45
   3a964:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3a968:	b.eq	3a944 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.none
   3a96c:	mov	x0, #0x1f                  	// #31
   3a970:	mov	x22, x21
   3a974:	mov	x2, #0x1                   	// #1
   3a978:	movk	x0, #0x1a, lsl #48
   3a97c:	ldr	w4, [x22]
   3a980:	cmp	w4, #0x4
   3a984:	b.eq	3aac0 <__asan_cplus_demangle_type@@Base+0x3650>  // b.none
   3a988:	sub	w3, w4, #0x1c
   3a98c:	b.hi	3aa50 <__asan_cplus_demangle_type@@Base+0x35e0>  // b.pmore
   3a990:	cmp	w4, #0x2
   3a994:	b.ne	3a9e0 <__asan_cplus_demangle_type@@Base+0x3570>  // b.any
   3a998:	ldr	x22, [x22, #16]
   3a99c:	cbnz	x22, 3a97c <__asan_cplus_demangle_type@@Base+0x350c>
   3a9a0:	cmp	w1, #0x4a
   3a9a4:	b.ne	3a9ec <__asan_cplus_demangle_type@@Base+0x357c>  // b.any
   3a9a8:	add	x5, x5, #0x1
   3a9ac:	str	x5, [x19, #24]
   3a9b0:	mov	x0, x19
   3a9b4:	bl	6420 <__asan_cplus_demangle_type@plt>
   3a9b8:	mov	x22, x0
   3a9bc:	cbnz	x0, 3a9ec <__asan_cplus_demangle_type@@Base+0x357c>
   3a9c0:	mov	x21, #0x0                   	// #0
   3a9c4:	mov	x0, x21
   3a9c8:	ldp	x19, x20, [sp, #16]
   3a9cc:	ldp	x21, x22, [sp, #32]
   3a9d0:	ldp	x29, x30, [sp], #48
   3a9d4:	ret
   3a9d8:	cmp	w0, #0x35
   3a9dc:	b.ne	3aaf0 <__asan_cplus_demangle_type@@Base+0x3680>  // b.any
   3a9e0:	cmp	w1, #0x4a
   3a9e4:	mov	x22, #0x0                   	// #0
   3a9e8:	b.eq	3a9a8 <__asan_cplus_demangle_type@@Base+0x3538>  // b.none
   3a9ec:	mov	x0, x19
   3a9f0:	bl	38278 <__asan_cplus_demangle_type@@Base+0xe08>
   3a9f4:	mov	x3, x0
   3a9f8:	cbz	x0, 3a9c0 <__asan_cplus_demangle_type@@Base+0x3550>
   3a9fc:	mov	x2, x22
   3aa00:	mov	x0, x19
   3aa04:	mov	w1, #0x29                  	// #41
   3aa08:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3aa0c:	mov	x3, x0
   3aa10:	cbz	x0, 3a9c0 <__asan_cplus_demangle_type@@Base+0x3550>
   3aa14:	cbnz	w20, 3aa34 <__asan_cplus_demangle_type@@Base+0x35c4>
   3aa18:	ldr	w0, [x21]
   3aa1c:	cmp	w0, #0x2
   3aa20:	b.ne	3aa34 <__asan_cplus_demangle_type@@Base+0x35c4>  // b.any
   3aa24:	ldr	w0, [x3]
   3aa28:	cmp	w0, #0x29
   3aa2c:	b.ne	3aa34 <__asan_cplus_demangle_type@@Base+0x35c4>  // b.any
   3aa30:	str	xzr, [x3, #8]
   3aa34:	mov	x2, x21
   3aa38:	mov	x0, x19
   3aa3c:	ldp	x19, x20, [sp, #16]
   3aa40:	mov	w1, #0x3                   	// #3
   3aa44:	ldp	x21, x22, [sp, #32]
   3aa48:	ldp	x29, x30, [sp], #48
   3aa4c:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3aa50:	cmp	w3, #0x34
   3aa54:	b.hi	3a9e0 <__asan_cplus_demangle_type@@Base+0x3570>  // b.pmore
   3aa58:	lsl	x3, x2, x3
   3aa5c:	tst	x3, x0
   3aa60:	b.eq	3a9e0 <__asan_cplus_demangle_type@@Base+0x3570>  // b.none
   3aa64:	ldr	x22, [x22, #8]
   3aa68:	cbnz	x22, 3a97c <__asan_cplus_demangle_type@@Base+0x350c>
   3aa6c:	b	3a9a0 <__asan_cplus_demangle_type@@Base+0x3530>
   3aa70:	ldr	x21, [x21, #8]
   3aa74:	b	3a920 <__asan_cplus_demangle_type@@Base+0x34b0>
   3aa78:	ldr	x3, [x21, #16]
   3aa7c:	mov	x0, #0x1f                  	// #31
   3aa80:	mov	x2, #0x1                   	// #1
   3aa84:	movk	x0, #0x1a, lsl #48
   3aa88:	ldr	w1, [x3]
   3aa8c:	sub	w1, w1, #0x1c
   3aa90:	cmp	w1, #0x34
   3aa94:	b.hi	3a944 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.pmore
   3aa98:	lsl	x1, x2, x1
   3aa9c:	tst	x1, x0
   3aaa0:	b.eq	3a944 <__asan_cplus_demangle_type@@Base+0x34d4>  // b.none
   3aaa4:	ldr	x3, [x3, #8]
   3aaa8:	str	x3, [x21, #16]
   3aaac:	ldr	w1, [x3]
   3aab0:	sub	w1, w1, #0x1c
   3aab4:	cmp	w1, #0x34
   3aab8:	b.ls	3aa98 <__asan_cplus_demangle_type@@Base+0x3628>  // b.plast
   3aabc:	b	3a944 <__asan_cplus_demangle_type@@Base+0x34d4>
   3aac0:	ldr	x2, [x22, #8]
   3aac4:	cbz	x2, 3aaf0 <__asan_cplus_demangle_type@@Base+0x3680>
   3aac8:	ldr	w0, [x2]
   3aacc:	sub	w3, w0, #0x1
   3aad0:	cmp	w0, #0x8
   3aad4:	b.hi	3a9d8 <__asan_cplus_demangle_type@@Base+0x3568>  // b.pmore
   3aad8:	cmp	w0, #0x6
   3aadc:	b.hi	3a9e0 <__asan_cplus_demangle_type@@Base+0x3570>  // b.pmore
   3aae0:	cmp	w3, #0x1
   3aae4:	b.hi	3aaf0 <__asan_cplus_demangle_type@@Base+0x3680>  // b.pmore
   3aae8:	ldr	x2, [x2, #16]
   3aaec:	cbnz	x2, 3aac8 <__asan_cplus_demangle_type@@Base+0x3658>
   3aaf0:	cmp	w1, #0x4a
   3aaf4:	b.ne	3a9b0 <__asan_cplus_demangle_type@@Base+0x3540>  // b.any
   3aaf8:	b	3a9a8 <__asan_cplus_demangle_type@@Base+0x3538>
   3aafc:	nop
   3ab00:	stp	x29, x30, [sp, #-96]!
   3ab04:	mov	x29, sp
   3ab08:	ldr	x2, [x0, #24]
   3ab0c:	stp	x19, x20, [sp, #16]
   3ab10:	ldrb	w1, [x2]
   3ab14:	cmp	w1, #0x55
   3ab18:	b.eq	3ad10 <__asan_cplus_demangle_type@@Base+0x38a0>  // b.none
   3ab1c:	mov	x19, x0
   3ab20:	b.hi	3ab6c <__asan_cplus_demangle_type@@Base+0x36fc>  // b.pmore
   3ab24:	cmp	w1, #0x4e
   3ab28:	b.eq	3ad80 <__asan_cplus_demangle_type@@Base+0x3910>  // b.none
   3ab2c:	cmp	w1, #0x53
   3ab30:	b.ne	3ad28 <__asan_cplus_demangle_type@@Base+0x38b8>  // b.any
   3ab34:	ldrb	w1, [x2, #1]
   3ab38:	cmp	w1, #0x74
   3ab3c:	b.eq	3ac08 <__asan_cplus_demangle_type@@Base+0x3798>  // b.none
   3ab40:	mov	w1, #0x0                   	// #0
   3ab44:	bl	370a0 <__asan_cplus_demangle_fill_name@@Base+0x240>
   3ab48:	ldr	x1, [x19, #24]
   3ab4c:	mov	x20, x0
   3ab50:	ldrb	w0, [x1]
   3ab54:	cmp	w0, #0x49
   3ab58:	b.eq	3acc8 <__asan_cplus_demangle_type@@Base+0x3858>  // b.none
   3ab5c:	mov	x0, x20
   3ab60:	ldp	x19, x20, [sp, #16]
   3ab64:	ldp	x29, x30, [sp], #96
   3ab68:	ret
   3ab6c:	cmp	w1, #0x5a
   3ab70:	b.ne	3ad28 <__asan_cplus_demangle_type@@Base+0x38b8>  // b.any
   3ab74:	add	x2, x2, #0x1
   3ab78:	str	x2, [x0, #24]
   3ab7c:	mov	w1, #0x0                   	// #0
   3ab80:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3ab84:	mov	x20, x0
   3ab88:	cbz	x0, 3ad08 <__asan_cplus_demangle_type@@Base+0x3898>
   3ab8c:	ldr	x0, [x19, #24]
   3ab90:	ldrb	w1, [x0]
   3ab94:	cmp	w1, #0x45
   3ab98:	b.ne	3ad08 <__asan_cplus_demangle_type@@Base+0x3898>  // b.any
   3ab9c:	stp	x21, x22, [sp, #32]
   3aba0:	add	x1, x0, #0x1
   3aba4:	str	x1, [x19, #24]
   3aba8:	ldrb	w1, [x0, #1]
   3abac:	cmp	w1, #0x73
   3abb0:	b.eq	3b07c <__asan_cplus_demangle_type@@Base+0x3c0c>  // b.none
   3abb4:	cmp	w1, #0x64
   3abb8:	b.eq	3af5c <__asan_cplus_demangle_type@@Base+0x3aec>  // b.none
   3abbc:	mov	x0, x19
   3abc0:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3abc4:	mov	x21, x0
   3abc8:	cbz	x0, 3abdc <__asan_cplus_demangle_type@@Base+0x376c>
   3abcc:	ldr	w0, [x0]
   3abd0:	sub	w0, w0, #0x46
   3abd4:	tst	w0, #0xfffffffd
   3abd8:	b.ne	3acf4 <__asan_cplus_demangle_type@@Base+0x3884>  // b.any
   3abdc:	ldr	w0, [x20]
   3abe0:	cmp	w0, #0x3
   3abe4:	b.eq	3b044 <__asan_cplus_demangle_type@@Base+0x3bd4>  // b.none
   3abe8:	mov	x3, x21
   3abec:	mov	x2, x20
   3abf0:	mov	x0, x19
   3abf4:	mov	w1, #0x2                   	// #2
   3abf8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3abfc:	mov	x20, x0
   3ac00:	ldp	x21, x22, [sp, #32]
   3ac04:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3ac08:	ldp	w20, w0, [x0, #40]
   3ac0c:	add	x2, x2, #0x2
   3ac10:	str	x2, [x19, #24]
   3ac14:	cmp	w20, w0
   3ac18:	b.ge	3b0d4 <__asan_cplus_demangle_type@@Base+0x3c64>  // b.tcont
   3ac1c:	ldr	x1, [x19, #32]
   3ac20:	mov	w2, #0x18                  	// #24
   3ac24:	add	w0, w20, #0x1
   3ac28:	smaddl	x20, w20, w2, x1
   3ac2c:	str	wzr, [x20, #4]
   3ac30:	str	w0, [x19, #40]
   3ac34:	mov	w2, #0x3                   	// #3
   3ac38:	mov	x0, x20
   3ac3c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3ac40:	add	x1, x1, #0x338
   3ac44:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3ac48:	cmp	w0, #0x0
   3ac4c:	csel	x20, x20, xzr, ne  // ne = any
   3ac50:	mov	x0, x19
   3ac54:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3ac58:	mov	x3, x0
   3ac5c:	mov	x2, x20
   3ac60:	mov	w1, #0x1                   	// #1
   3ac64:	mov	x0, x19
   3ac68:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3ac6c:	mov	x20, x0
   3ac70:	ldr	w0, [x19, #72]
   3ac74:	ldr	x1, [x19, #24]
   3ac78:	add	w0, w0, #0x3
   3ac7c:	str	w0, [x19, #72]
   3ac80:	ldrb	w0, [x1]
   3ac84:	cmp	w0, #0x49
   3ac88:	b.ne	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>  // b.any
   3ac8c:	cbz	x20, 3ad08 <__asan_cplus_demangle_type@@Base+0x3898>
   3ac90:	ldp	w0, w2, [x19, #56]
   3ac94:	cmp	w0, w2
   3ac98:	b.ge	3ad08 <__asan_cplus_demangle_type@@Base+0x3898>  // b.tcont
   3ac9c:	ldr	x4, [x19, #48]
   3aca0:	add	w2, w0, #0x1
   3aca4:	mov	x3, #0x0                   	// #0
   3aca8:	str	x20, [x4, w0, sxtw #3]
   3acac:	str	w2, [x19, #56]
   3acb0:	ldrb	w0, [x1]
   3acb4:	sub	w0, w0, #0x49
   3acb8:	and	w0, w0, #0xff
   3acbc:	cmp	w0, #0x1
   3acc0:	b.hi	3acdc <__asan_cplus_demangle_type@@Base+0x386c>  // b.pmore
   3acc4:	nop
   3acc8:	add	x1, x1, #0x1
   3accc:	str	x1, [x19, #24]
   3acd0:	mov	x0, x19
   3acd4:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   3acd8:	mov	x3, x0
   3acdc:	mov	x2, x20
   3ace0:	mov	x0, x19
   3ace4:	mov	w1, #0x4                   	// #4
   3ace8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3acec:	mov	x20, x0
   3acf0:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3acf4:	mov	x0, x19
   3acf8:	bl	2e340 <__asan_backtrace_create_state@@Base+0x6b8>
   3acfc:	cbnz	w0, 3abdc <__asan_cplus_demangle_type@@Base+0x376c>
   3ad00:	ldp	x21, x22, [sp, #32]
   3ad04:	nop
   3ad08:	mov	x20, #0x0                   	// #0
   3ad0c:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3ad10:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3ad14:	mov	x20, x0
   3ad18:	mov	x0, x20
   3ad1c:	ldp	x19, x20, [sp, #16]
   3ad20:	ldp	x29, x30, [sp], #96
   3ad24:	ret
   3ad28:	mov	x0, x19
   3ad2c:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3ad30:	ldr	x1, [x19, #24]
   3ad34:	mov	x20, x0
   3ad38:	ldrb	w0, [x1]
   3ad3c:	cmp	w0, #0x49
   3ad40:	b.ne	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>  // b.any
   3ad44:	cbz	x20, 3ad08 <__asan_cplus_demangle_type@@Base+0x3898>
   3ad48:	ldp	w2, w0, [x19, #56]
   3ad4c:	cmp	w2, w0
   3ad50:	b.ge	3ad08 <__asan_cplus_demangle_type@@Base+0x3898>  // b.tcont
   3ad54:	ldr	x4, [x19, #48]
   3ad58:	add	w0, w2, #0x1
   3ad5c:	mov	x3, #0x0                   	// #0
   3ad60:	str	x20, [x4, w2, sxtw #3]
   3ad64:	str	w0, [x19, #56]
   3ad68:	ldrb	w2, [x1]
   3ad6c:	sub	w2, w2, #0x49
   3ad70:	and	w2, w2, #0xff
   3ad74:	cmp	w2, #0x1
   3ad78:	b.ls	3acc8 <__asan_cplus_demangle_type@@Base+0x3858>  // b.plast
   3ad7c:	b	3acdc <__asan_cplus_demangle_type@@Base+0x386c>
   3ad80:	stp	x21, x22, [sp, #32]
   3ad84:	add	x2, x2, #0x1
   3ad88:	add	x1, sp, #0x58
   3ad8c:	str	x2, [x0, #24]
   3ad90:	mov	w2, #0x1                   	// #1
   3ad94:	bl	39b88 <__asan_cplus_demangle_type@@Base+0x2718>
   3ad98:	mov	x22, x0
   3ad9c:	cbz	x0, 3b038 <__asan_cplus_demangle_type@@Base+0x3bc8>
   3ada0:	ldr	x3, [x19, #24]
   3ada4:	stp	x23, x24, [sp, #48]
   3ada8:	mov	w0, #0x4f                  	// #79
   3adac:	mov	x23, #0x0                   	// #0
   3adb0:	ldrb	w20, [x3]
   3adb4:	cmp	w20, #0x52
   3adb8:	ccmp	w20, w0, #0x4, ne  // ne = any
   3adbc:	b.eq	3af14 <__asan_cplus_demangle_type@@Base+0x3aa4>  // b.none
   3adc0:	cbz	w20, 3ae7c <__asan_cplus_demangle_type@@Base+0x3a0c>
   3adc4:	mov	x21, #0x0                   	// #0
   3adc8:	mov	w24, #0x4c                  	// #76
   3adcc:	stp	x25, x26, [sp, #64]
   3add0:	mov	w25, #0x55                  	// #85
   3add4:	cmp	w20, #0x44
   3add8:	b.eq	3ae90 <__asan_cplus_demangle_type@@Base+0x3a20>  // b.none
   3addc:	sub	w1, w20, #0x30
   3ade0:	sub	w0, w20, #0x61
   3ade4:	and	w1, w1, #0xff
   3ade8:	and	w0, w0, #0xff
   3adec:	cmp	w1, #0x9
   3adf0:	mov	x26, x21
   3adf4:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
   3adf8:	b.ls	3ae0c <__asan_cplus_demangle_type@@Base+0x399c>  // b.plast
   3adfc:	cmp	w20, #0x43
   3ae00:	ccmp	w20, w25, #0x4, ne  // ne = any
   3ae04:	ccmp	w20, w24, #0x4, ne  // ne = any
   3ae08:	b.ne	3aedc <__asan_cplus_demangle_type@@Base+0x3a6c>  // b.any
   3ae0c:	mov	x0, x19
   3ae10:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3ae14:	mov	x21, x0
   3ae18:	cbz	x26, 3ae34 <__asan_cplus_demangle_type@@Base+0x39c4>
   3ae1c:	mov	w1, #0x1                   	// #1
   3ae20:	mov	x3, x21
   3ae24:	mov	x2, x26
   3ae28:	mov	x0, x19
   3ae2c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3ae30:	mov	x21, x0
   3ae34:	cmp	w20, #0x53
   3ae38:	ldr	x3, [x19, #24]
   3ae3c:	b.eq	3ae6c <__asan_cplus_demangle_type@@Base+0x39fc>  // b.none
   3ae40:	ldrb	w20, [x3]
   3ae44:	cmp	w20, #0x45
   3ae48:	b.eq	3aec4 <__asan_cplus_demangle_type@@Base+0x3a54>  // b.none
   3ae4c:	cbz	x21, 3ae78 <__asan_cplus_demangle_type@@Base+0x3a08>
   3ae50:	ldp	w0, w1, [x19, #56]
   3ae54:	cmp	w0, w1
   3ae58:	b.ge	3ae78 <__asan_cplus_demangle_type@@Base+0x3a08>  // b.tcont
   3ae5c:	ldr	x2, [x19, #48]
   3ae60:	add	w1, w0, #0x1
   3ae64:	str	x21, [x2, w0, sxtw #3]
   3ae68:	str	w1, [x19, #56]
   3ae6c:	ldrb	w20, [x3]
   3ae70:	cbnz	w20, 3add4 <__asan_cplus_demangle_type@@Base+0x3964>
   3ae74:	nop
   3ae78:	ldp	x25, x26, [sp, #64]
   3ae7c:	mov	x20, #0x0                   	// #0
   3ae80:	ldp	x23, x24, [sp, #48]
   3ae84:	str	xzr, [x22]
   3ae88:	ldp	x21, x22, [sp, #32]
   3ae8c:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3ae90:	ldrb	w0, [x3, #1]
   3ae94:	and	w0, w0, #0xffffffdf
   3ae98:	and	w0, w0, #0xff
   3ae9c:	cmp	w0, #0x54
   3aea0:	mov	x0, x19
   3aea4:	b.ne	3aecc <__asan_cplus_demangle_type@@Base+0x3a5c>  // b.any
   3aea8:	mov	x26, x21
   3aeac:	bl	6420 <__asan_cplus_demangle_type@plt>
   3aeb0:	mov	x21, x0
   3aeb4:	mov	w1, #0x1                   	// #1
   3aeb8:	cbnz	x26, 3ae20 <__asan_cplus_demangle_type@@Base+0x39b0>
   3aebc:	ldr	x3, [x19, #24]
   3aec0:	b	3ae40 <__asan_cplus_demangle_type@@Base+0x39d0>
   3aec4:	mov	x26, x21
   3aec8:	b	3adfc <__asan_cplus_demangle_type@@Base+0x398c>
   3aecc:	mov	x26, x21
   3aed0:	bl	385a0 <__asan_cplus_demangle_type@@Base+0x1130>
   3aed4:	mov	x21, x0
   3aed8:	b	3aeb4 <__asan_cplus_demangle_type@@Base+0x3a44>
   3aedc:	cmp	w20, #0x53
   3aee0:	b.eq	3afd0 <__asan_cplus_demangle_type@@Base+0x3b60>  // b.none
   3aee4:	cmp	w20, #0x49
   3aee8:	b.eq	3b05c <__asan_cplus_demangle_type@@Base+0x3bec>  // b.none
   3aeec:	cmp	w20, #0x54
   3aef0:	b.eq	3b0dc <__asan_cplus_demangle_type@@Base+0x3c6c>  // b.none
   3aef4:	cmp	w20, #0x45
   3aef8:	b.eq	3afec <__asan_cplus_demangle_type@@Base+0x3b7c>  // b.none
   3aefc:	cmp	w20, #0x4d
   3af00:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   3af04:	b.eq	3ae78 <__asan_cplus_demangle_type@@Base+0x3a08>  // b.none
   3af08:	add	x3, x3, #0x1
   3af0c:	str	x3, [x19, #24]
   3af10:	b	3ae6c <__asan_cplus_demangle_type@@Base+0x39fc>
   3af14:	ldr	w2, [x19, #72]
   3af18:	cmp	w20, #0x52
   3af1c:	mov	w1, #0x20                  	// #32
   3af20:	add	w0, w2, #0x3
   3af24:	b.ne	3af30 <__asan_cplus_demangle_type@@Base+0x3ac0>  // b.any
   3af28:	add	w0, w2, #0x2
   3af2c:	mov	w1, #0x1f                  	// #31
   3af30:	add	x3, x3, #0x1
   3af34:	str	x3, [x19, #24]
   3af38:	str	w0, [x19, #72]
   3af3c:	mov	x3, #0x0                   	// #0
   3af40:	mov	x0, x19
   3af44:	mov	x2, #0x0                   	// #0
   3af48:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3af4c:	mov	x23, x0
   3af50:	ldr	x3, [x19, #24]
   3af54:	ldrb	w20, [x3]
   3af58:	b	3adc0 <__asan_cplus_demangle_type@@Base+0x3950>
   3af5c:	add	x0, x0, #0x2
   3af60:	str	x0, [x19, #24]
   3af64:	mov	x0, x19
   3af68:	bl	2e290 <__asan_backtrace_create_state@@Base+0x608>
   3af6c:	mov	w22, w0
   3af70:	tbnz	w0, #31, 3ad00 <__asan_cplus_demangle_type@@Base+0x3890>
   3af74:	mov	x0, x19
   3af78:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3af7c:	mov	x13, x0
   3af80:	cbz	x0, 3af94 <__asan_cplus_demangle_type@@Base+0x3b24>
   3af84:	ldr	w0, [x0]
   3af88:	sub	w0, w0, #0x46
   3af8c:	tst	w0, #0xfffffffd
   3af90:	b.ne	3b0ec <__asan_cplus_demangle_type@@Base+0x3c7c>  // b.any
   3af94:	ldp	w1, w0, [x19, #40]
   3af98:	cmp	w1, w0
   3af9c:	b.ge	3b0cc <__asan_cplus_demangle_type@@Base+0x3c5c>  // b.tcont
   3afa0:	mov	w2, #0x18                  	// #24
   3afa4:	add	w3, w1, #0x1
   3afa8:	ldr	x0, [x19, #32]
   3afac:	smull	x1, w1, w2
   3afb0:	mov	w2, #0x47                  	// #71
   3afb4:	add	x21, x0, x1
   3afb8:	str	wzr, [x21, #4]
   3afbc:	str	w3, [x19, #40]
   3afc0:	str	w2, [x0, x1]
   3afc4:	str	x13, [x21, #8]
   3afc8:	str	w22, [x21, #16]
   3afcc:	b	3abdc <__asan_cplus_demangle_type@@Base+0x376c>
   3afd0:	mov	x0, x19
   3afd4:	mov	w1, #0x1                   	// #1
   3afd8:	bl	370a0 <__asan_cplus_demangle_fill_name@@Base+0x240>
   3afdc:	mov	x21, x0
   3afe0:	cbnz	x26, 3ae1c <__asan_cplus_demangle_type@@Base+0x39ac>
   3afe4:	ldr	x3, [x19, #24]
   3afe8:	b	3ae6c <__asan_cplus_demangle_type@@Base+0x39fc>
   3afec:	str	x21, [x22]
   3aff0:	cbz	x21, 3b030 <__asan_cplus_demangle_type@@Base+0x3bc0>
   3aff4:	cbz	x23, 3b004 <__asan_cplus_demangle_type@@Base+0x3b94>
   3aff8:	ldr	x0, [sp, #88]
   3affc:	str	x0, [x23, #8]
   3b000:	str	x23, [sp, #88]
   3b004:	ldr	x0, [x19, #24]
   3b008:	ldrb	w1, [x0]
   3b00c:	cmp	w1, #0x45
   3b010:	b.ne	3b030 <__asan_cplus_demangle_type@@Base+0x3bc0>  // b.any
   3b014:	add	x0, x0, #0x1
   3b018:	ldp	x21, x22, [sp, #32]
   3b01c:	ldp	x23, x24, [sp, #48]
   3b020:	ldp	x25, x26, [sp, #64]
   3b024:	str	x0, [x19, #24]
   3b028:	ldr	x20, [sp, #88]
   3b02c:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3b030:	ldp	x23, x24, [sp, #48]
   3b034:	ldp	x25, x26, [sp, #64]
   3b038:	mov	x20, #0x0                   	// #0
   3b03c:	ldp	x21, x22, [sp, #32]
   3b040:	b	3ab5c <__asan_cplus_demangle_type@@Base+0x36ec>
   3b044:	ldr	x0, [x20, #16]
   3b048:	ldr	w1, [x0]
   3b04c:	cmp	w1, #0x29
   3b050:	b.ne	3abe8 <__asan_cplus_demangle_type@@Base+0x3778>  // b.any
   3b054:	str	xzr, [x0, #8]
   3b058:	b	3abe8 <__asan_cplus_demangle_type@@Base+0x3778>
   3b05c:	cbz	x21, 3ae78 <__asan_cplus_demangle_type@@Base+0x3a08>
   3b060:	add	x3, x3, #0x1
   3b064:	str	x3, [x19, #24]
   3b068:	mov	x0, x19
   3b06c:	bl	39e80 <__asan_cplus_demangle_type@@Base+0x2a10>
   3b070:	mov	x21, x0
   3b074:	mov	w1, #0x4                   	// #4
   3b078:	b	3ae20 <__asan_cplus_demangle_type@@Base+0x39b0>
   3b07c:	add	x0, x0, #0x2
   3b080:	str	x0, [x19, #24]
   3b084:	mov	x0, x19
   3b088:	bl	2e340 <__asan_backtrace_create_state@@Base+0x6b8>
   3b08c:	cbz	w0, 3ad00 <__asan_cplus_demangle_type@@Base+0x3890>
   3b090:	ldp	w21, w0, [x19, #40]
   3b094:	cmp	w21, w0
   3b098:	b.ge	3b100 <__asan_cplus_demangle_type@@Base+0x3c90>  // b.tcont
   3b09c:	ldr	x1, [x19, #32]
   3b0a0:	mov	w2, #0x18                  	// #24
   3b0a4:	add	w0, w21, #0x1
   3b0a8:	smaddl	x21, w21, w2, x1
   3b0ac:	str	wzr, [x21, #4]
   3b0b0:	str	w0, [x19, #40]
   3b0b4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3b0b8:	mov	x0, x21
   3b0bc:	add	x1, x1, #0x328
   3b0c0:	mov	w2, #0xe                   	// #14
   3b0c4:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3b0c8:	cbnz	w0, 3abdc <__asan_cplus_demangle_type@@Base+0x376c>
   3b0cc:	mov	x21, #0x0                   	// #0
   3b0d0:	b	3abdc <__asan_cplus_demangle_type@@Base+0x376c>
   3b0d4:	mov	x20, #0x0                   	// #0
   3b0d8:	b	3ac34 <__asan_cplus_demangle_type@@Base+0x37c4>
   3b0dc:	mov	x0, x19
   3b0e0:	bl	2e468 <__asan_backtrace_create_state@@Base+0x7e0>
   3b0e4:	mov	x21, x0
   3b0e8:	b	3aeb4 <__asan_cplus_demangle_type@@Base+0x3a44>
   3b0ec:	mov	x0, x19
   3b0f0:	bl	2e340 <__asan_backtrace_create_state@@Base+0x6b8>
   3b0f4:	cbnz	w0, 3af94 <__asan_cplus_demangle_type@@Base+0x3b24>
   3b0f8:	ldp	x21, x22, [sp, #32]
   3b0fc:	b	3ad08 <__asan_cplus_demangle_type@@Base+0x3898>
   3b100:	mov	x21, #0x0                   	// #0
   3b104:	b	3b0b4 <__asan_cplus_demangle_type@@Base+0x3c44>
   3b108:	stp	x29, x30, [sp, #-48]!
   3b10c:	mov	x29, sp
   3b110:	stp	x19, x20, [sp, #16]
   3b114:	mov	x20, x0
   3b118:	stp	x21, x22, [sp, #32]
   3b11c:	mov	w22, w1
   3b120:	bl	3ab00 <__asan_cplus_demangle_type@@Base+0x3690>
   3b124:	cbz	x0, 3b23c <__asan_cplus_demangle_type@@Base+0x3dcc>
   3b128:	mov	x19, x0
   3b12c:	cbz	w22, 3b1c0 <__asan_cplus_demangle_type@@Base+0x3d50>
   3b130:	ldr	w0, [x20, #16]
   3b134:	tbnz	w0, #0, 3b1c0 <__asan_cplus_demangle_type@@Base+0x3d50>
   3b138:	mov	x1, #0x1f                  	// #31
   3b13c:	mov	x2, #0x1                   	// #1
   3b140:	movk	x1, #0x1a, lsl #48
   3b144:	ldr	w3, [x19]
   3b148:	sub	w0, w3, #0x1c
   3b14c:	cmp	w0, #0x34
   3b150:	b.hi	3b160 <__asan_cplus_demangle_type@@Base+0x3cf0>  // b.pmore
   3b154:	lsl	x0, x2, x0
   3b158:	tst	x0, x1
   3b15c:	b.ne	3b2d4 <__asan_cplus_demangle_type@@Base+0x3e64>  // b.any
   3b160:	cmp	w3, #0x2
   3b164:	b.ne	3b1ac <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.any
   3b168:	ldr	x3, [x19, #16]
   3b16c:	mov	x1, #0x1f                  	// #31
   3b170:	mov	x2, #0x1                   	// #1
   3b174:	movk	x1, #0x1a, lsl #48
   3b178:	ldr	w0, [x3]
   3b17c:	sub	w0, w0, #0x1c
   3b180:	cmp	w0, #0x34
   3b184:	b.hi	3b1ac <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.pmore
   3b188:	lsl	x0, x2, x0
   3b18c:	tst	x0, x1
   3b190:	b.eq	3b1ac <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.none
   3b194:	ldr	x3, [x3, #8]
   3b198:	str	x3, [x19, #16]
   3b19c:	ldr	w0, [x3]
   3b1a0:	sub	w0, w0, #0x1c
   3b1a4:	cmp	w0, #0x34
   3b1a8:	b.ls	3b188 <__asan_cplus_demangle_type@@Base+0x3d18>  // b.plast
   3b1ac:	mov	x0, x19
   3b1b0:	ldp	x19, x20, [sp, #16]
   3b1b4:	ldp	x21, x22, [sp, #32]
   3b1b8:	ldp	x29, x30, [sp], #48
   3b1bc:	ret
   3b1c0:	ldr	x1, [x20, #24]
   3b1c4:	ldrb	w4, [x1]
   3b1c8:	cmp	w4, #0x45
   3b1cc:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   3b1d0:	b.eq	3b1ac <__asan_cplus_demangle_type@@Base+0x3d3c>  // b.none
   3b1d4:	mov	x2, #0x1f                  	// #31
   3b1d8:	mov	x21, x19
   3b1dc:	mov	x5, #0x1                   	// #1
   3b1e0:	movk	x2, #0x1a, lsl #48
   3b1e4:	ldr	w0, [x21]
   3b1e8:	cmp	w0, #0x4
   3b1ec:	b.eq	3b2dc <__asan_cplus_demangle_type@@Base+0x3e6c>  // b.none
   3b1f0:	sub	w3, w0, #0x1c
   3b1f4:	b.hi	3b2b4 <__asan_cplus_demangle_type@@Base+0x3e44>  // b.pmore
   3b1f8:	cmp	w0, #0x2
   3b1fc:	b.ne	3b254 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.any
   3b200:	ldr	x21, [x21, #16]
   3b204:	cbnz	x21, 3b1e4 <__asan_cplus_demangle_type@@Base+0x3d74>
   3b208:	cmp	w4, #0x4a
   3b20c:	b.ne	3b260 <__asan_cplus_demangle_type@@Base+0x3df0>  // b.any
   3b210:	add	x1, x1, #0x1
   3b214:	str	x1, [x20, #24]
   3b218:	b	3b22c <__asan_cplus_demangle_type@@Base+0x3dbc>
   3b21c:	cmp	w0, #0x35
   3b220:	b.eq	3b254 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.none
   3b224:	cmp	w4, #0x4a
   3b228:	b.eq	3b210 <__asan_cplus_demangle_type@@Base+0x3da0>  // b.none
   3b22c:	mov	x0, x20
   3b230:	bl	6420 <__asan_cplus_demangle_type@plt>
   3b234:	mov	x21, x0
   3b238:	cbnz	x0, 3b260 <__asan_cplus_demangle_type@@Base+0x3df0>
   3b23c:	mov	x19, #0x0                   	// #0
   3b240:	mov	x0, x19
   3b244:	ldp	x19, x20, [sp, #16]
   3b248:	ldp	x21, x22, [sp, #32]
   3b24c:	ldp	x29, x30, [sp], #48
   3b250:	ret
   3b254:	cmp	w4, #0x4a
   3b258:	mov	x21, #0x0                   	// #0
   3b25c:	b.eq	3b210 <__asan_cplus_demangle_type@@Base+0x3da0>  // b.none
   3b260:	mov	x0, x20
   3b264:	bl	38278 <__asan_cplus_demangle_type@@Base+0xe08>
   3b268:	mov	x3, x0
   3b26c:	cbz	x0, 3b23c <__asan_cplus_demangle_type@@Base+0x3dcc>
   3b270:	mov	x2, x21
   3b274:	mov	x0, x20
   3b278:	mov	w1, #0x29                  	// #41
   3b27c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3b280:	mov	x3, x0
   3b284:	cbz	x0, 3b23c <__asan_cplus_demangle_type@@Base+0x3dcc>
   3b288:	cbnz	w22, 3b298 <__asan_cplus_demangle_type@@Base+0x3e28>
   3b28c:	ldr	w0, [x19]
   3b290:	cmp	w0, #0x2
   3b294:	b.eq	3b310 <__asan_cplus_demangle_type@@Base+0x3ea0>  // b.none
   3b298:	mov	x2, x19
   3b29c:	mov	x0, x20
   3b2a0:	ldp	x19, x20, [sp, #16]
   3b2a4:	mov	w1, #0x3                   	// #3
   3b2a8:	ldp	x21, x22, [sp, #32]
   3b2ac:	ldp	x29, x30, [sp], #48
   3b2b0:	b	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3b2b4:	cmp	w3, #0x34
   3b2b8:	b.hi	3b254 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.pmore
   3b2bc:	lsl	x3, x5, x3
   3b2c0:	tst	x3, x2
   3b2c4:	b.eq	3b254 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.none
   3b2c8:	ldr	x21, [x21, #8]
   3b2cc:	cbnz	x21, 3b1e4 <__asan_cplus_demangle_type@@Base+0x3d74>
   3b2d0:	b	3b208 <__asan_cplus_demangle_type@@Base+0x3d98>
   3b2d4:	ldr	x19, [x19, #8]
   3b2d8:	b	3b144 <__asan_cplus_demangle_type@@Base+0x3cd4>
   3b2dc:	ldr	x2, [x21, #8]
   3b2e0:	cbz	x2, 3b224 <__asan_cplus_demangle_type@@Base+0x3db4>
   3b2e4:	ldr	w0, [x2]
   3b2e8:	sub	w3, w0, #0x1
   3b2ec:	cmp	w0, #0x8
   3b2f0:	b.hi	3b21c <__asan_cplus_demangle_type@@Base+0x3dac>  // b.pmore
   3b2f4:	cmp	w0, #0x6
   3b2f8:	b.hi	3b254 <__asan_cplus_demangle_type@@Base+0x3de4>  // b.pmore
   3b2fc:	cmp	w3, #0x1
   3b300:	b.hi	3b224 <__asan_cplus_demangle_type@@Base+0x3db4>  // b.pmore
   3b304:	ldr	x2, [x2, #16]
   3b308:	cbnz	x2, 3b2e4 <__asan_cplus_demangle_type@@Base+0x3e74>
   3b30c:	b	3b224 <__asan_cplus_demangle_type@@Base+0x3db4>
   3b310:	ldr	w0, [x3]
   3b314:	cmp	w0, #0x29
   3b318:	b.ne	3b298 <__asan_cplus_demangle_type@@Base+0x3e28>  // b.any
   3b31c:	str	xzr, [x3, #8]
   3b320:	b	3b298 <__asan_cplus_demangle_type@@Base+0x3e28>
   3b324:	nop

000000000003b328 <__asan_cplus_demangle_mangled_name@@Base>:
   3b328:	stp	x29, x30, [sp, #-48]!
   3b32c:	mov	x29, sp
   3b330:	stp	x19, x20, [sp, #16]
   3b334:	mov	x19, x0
   3b338:	mov	w20, w1
   3b33c:	ldr	x0, [x0, #24]
   3b340:	stp	x21, x22, [sp, #32]
   3b344:	ldrb	w1, [x0]
   3b348:	cmp	w1, #0x5f
   3b34c:	b.eq	3b4e0 <__asan_cplus_demangle_mangled_name@@Base+0x1b8>  // b.none
   3b350:	cbnz	w20, 3b4c8 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>
   3b354:	cmp	w1, #0x5a
   3b358:	b.ne	3b4c8 <__asan_cplus_demangle_mangled_name@@Base+0x1a0>  // b.any
   3b35c:	add	x1, x0, #0x1
   3b360:	str	x1, [x19, #24]
   3b364:	mov	w1, #0x54                  	// #84
   3b368:	ldrb	w0, [x0, #1]
   3b36c:	cmp	w0, #0x47
   3b370:	ccmp	w0, w1, #0x4, ne  // ne = any
   3b374:	b.ne	3b4f4 <__asan_cplus_demangle_mangled_name@@Base+0x1cc>  // b.any
   3b378:	mov	x0, x19
   3b37c:	bl	3a018 <__asan_cplus_demangle_type@@Base+0x2ba8>
   3b380:	mov	x22, x0
   3b384:	cbz	w20, 3b4cc <__asan_cplus_demangle_mangled_name@@Base+0x1a4>
   3b388:	ldr	w0, [x19, #16]
   3b38c:	tbz	w0, #0, 3b4cc <__asan_cplus_demangle_mangled_name@@Base+0x1a4>
   3b390:	ldr	x1, [x19, #24]
   3b394:	mov	w21, #0x18                  	// #24
   3b398:	ldrb	w0, [x1]
   3b39c:	cmp	w0, #0x2e
   3b3a0:	b.ne	3b4cc <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.any
   3b3a4:	ldrb	w2, [x1, #1]
   3b3a8:	sub	w0, w2, #0x61
   3b3ac:	cmp	w2, #0x5f
   3b3b0:	and	w0, w0, #0xff
   3b3b4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   3b3b8:	b.ls	3b498 <__asan_cplus_demangle_mangled_name@@Base+0x170>  // b.plast
   3b3bc:	nop
   3b3c0:	sub	w2, w2, #0x30
   3b3c4:	and	w2, w2, #0xff
   3b3c8:	cmp	w2, #0x9
   3b3cc:	b.hi	3b4cc <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.pmore
   3b3d0:	mov	x2, x1
   3b3d4:	nop
   3b3d8:	ldrb	w3, [x2, #1]
   3b3dc:	sub	w3, w3, #0x30
   3b3e0:	and	w3, w3, #0xff
   3b3e4:	cmp	w3, #0x9
   3b3e8:	b.hi	3b424 <__asan_cplus_demangle_mangled_name@@Base+0xfc>  // b.pmore
   3b3ec:	ldrb	w0, [x2, #2]
   3b3f0:	add	x2, x2, #0x2
   3b3f4:	sub	w3, w0, #0x30
   3b3f8:	and	w3, w3, #0xff
   3b3fc:	cmp	w3, #0x9
   3b400:	b.hi	3b41c <__asan_cplus_demangle_mangled_name@@Base+0xf4>  // b.pmore
   3b404:	nop
   3b408:	ldrb	w0, [x2, #1]!
   3b40c:	sub	w3, w0, #0x30
   3b410:	and	w3, w3, #0xff
   3b414:	cmp	w3, #0x9
   3b418:	b.ls	3b408 <__asan_cplus_demangle_mangled_name@@Base+0xe0>  // b.plast
   3b41c:	cmp	w0, #0x2e
   3b420:	b.eq	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xb0>  // b.none
   3b424:	ldp	w20, w0, [x19, #40]
   3b428:	str	x2, [x19, #24]
   3b42c:	sub	x2, x2, x1
   3b430:	cmp	w20, w0
   3b434:	b.ge	3b508 <__asan_cplus_demangle_mangled_name@@Base+0x1e0>  // b.tcont
   3b438:	ldr	x3, [x19, #32]
   3b43c:	add	w0, w20, #0x1
   3b440:	smaddl	x20, w20, w21, x3
   3b444:	str	wzr, [x20, #4]
   3b448:	str	w0, [x19, #40]
   3b44c:	mov	x0, x20
   3b450:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3b454:	cbz	w0, 3b518 <__asan_cplus_demangle_mangled_name@@Base+0x1f0>
   3b458:	mov	x3, x20
   3b45c:	mov	x2, x22
   3b460:	mov	w1, #0x4e                  	// #78
   3b464:	mov	x0, x19
   3b468:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3b46c:	mov	x22, x0
   3b470:	ldr	x1, [x19, #24]
   3b474:	ldrb	w0, [x1]
   3b478:	cmp	w0, #0x2e
   3b47c:	b.ne	3b4cc <__asan_cplus_demangle_mangled_name@@Base+0x1a4>  // b.any
   3b480:	ldrb	w2, [x1, #1]
   3b484:	sub	w0, w2, #0x61
   3b488:	cmp	w2, #0x5f
   3b48c:	and	w0, w0, #0xff
   3b490:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   3b494:	b.hi	3b3c0 <__asan_cplus_demangle_mangled_name@@Base+0x98>  // b.pmore
   3b498:	ldrb	w3, [x1, #2]
   3b49c:	add	x2, x1, #0x2
   3b4a0:	b	3b4a8 <__asan_cplus_demangle_mangled_name@@Base+0x180>
   3b4a4:	ldrb	w3, [x2, #1]!
   3b4a8:	sub	w0, w3, #0x61
   3b4ac:	cmp	w3, #0x5f
   3b4b0:	and	w0, w0, #0xff
   3b4b4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   3b4b8:	b.ls	3b4a4 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.plast
   3b4bc:	cmp	w3, #0x2e
   3b4c0:	b.eq	3b3d8 <__asan_cplus_demangle_mangled_name@@Base+0xb0>  // b.none
   3b4c4:	b	3b424 <__asan_cplus_demangle_mangled_name@@Base+0xfc>
   3b4c8:	mov	x22, #0x0                   	// #0
   3b4cc:	mov	x0, x22
   3b4d0:	ldp	x19, x20, [sp, #16]
   3b4d4:	ldp	x21, x22, [sp, #32]
   3b4d8:	ldp	x29, x30, [sp], #48
   3b4dc:	ret
   3b4e0:	add	x2, x0, #0x1
   3b4e4:	str	x2, [x19, #24]
   3b4e8:	ldrb	w1, [x0, #1]
   3b4ec:	mov	x0, x2
   3b4f0:	b	3b354 <__asan_cplus_demangle_mangled_name@@Base+0x2c>
   3b4f4:	mov	w1, w20
   3b4f8:	mov	x0, x19
   3b4fc:	bl	3b108 <__asan_cplus_demangle_type@@Base+0x3c98>
   3b500:	mov	x22, x0
   3b504:	b	3b384 <__asan_cplus_demangle_mangled_name@@Base+0x5c>
   3b508:	mov	x20, #0x0                   	// #0
   3b50c:	mov	x0, x20
   3b510:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3b514:	cbnz	w0, 3b458 <__asan_cplus_demangle_mangled_name@@Base+0x130>
   3b518:	mov	x2, x22
   3b51c:	mov	x3, #0x0                   	// #0
   3b520:	b	3b460 <__asan_cplus_demangle_mangled_name@@Base+0x138>
   3b524:	nop
   3b528:	ldr	x1, [x0, #24]
   3b52c:	ldrb	w2, [x1]
   3b530:	cmp	w2, #0x4c
   3b534:	b.ne	3b610 <__asan_cplus_demangle_mangled_name@@Base+0x2e8>  // b.any
   3b538:	stp	x29, x30, [sp, #-48]!
   3b53c:	add	x2, x1, #0x1
   3b540:	mov	x29, sp
   3b544:	stp	x19, x20, [sp, #16]
   3b548:	mov	x19, x0
   3b54c:	str	x2, [x0, #24]
   3b550:	mov	w2, #0x5a                  	// #90
   3b554:	ldrb	w1, [x1, #1]
   3b558:	cmp	w1, #0x5f
   3b55c:	ccmp	w1, w2, #0x4, ne  // ne = any
   3b560:	b.ne	3b590 <__asan_cplus_demangle_mangled_name@@Base+0x268>  // b.any
   3b564:	mov	w1, #0x0                   	// #0
   3b568:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3b56c:	ldr	x1, [x19, #24]
   3b570:	ldrb	w2, [x1]
   3b574:	cmp	w2, #0x45
   3b578:	b.ne	3b600 <__asan_cplus_demangle_mangled_name@@Base+0x2d8>  // b.any
   3b57c:	add	x1, x1, #0x1
   3b580:	str	x1, [x19, #24]
   3b584:	ldp	x19, x20, [sp, #16]
   3b588:	ldp	x29, x30, [sp], #48
   3b58c:	ret
   3b590:	bl	6420 <__asan_cplus_demangle_type@plt>
   3b594:	mov	x20, x0
   3b598:	cbz	x0, 3b600 <__asan_cplus_demangle_mangled_name@@Base+0x2d8>
   3b59c:	ldr	w0, [x0]
   3b5a0:	stp	x21, x22, [sp, #32]
   3b5a4:	cmp	w0, #0x27
   3b5a8:	b.eq	3b668 <__asan_cplus_demangle_mangled_name@@Base+0x340>  // b.none
   3b5ac:	ldr	x1, [x19, #24]
   3b5b0:	mov	w22, #0x3d                  	// #61
   3b5b4:	ldrb	w4, [x1]
   3b5b8:	cmp	w4, #0x6e
   3b5bc:	b.ne	3b5d4 <__asan_cplus_demangle_mangled_name@@Base+0x2ac>  // b.any
   3b5c0:	add	x0, x1, #0x1
   3b5c4:	str	x0, [x19, #24]
   3b5c8:	mov	w22, #0x3e                  	// #62
   3b5cc:	ldrb	w4, [x1, #1]
   3b5d0:	mov	x1, x0
   3b5d4:	cmp	w4, #0x45
   3b5d8:	b.eq	3b690 <__asan_cplus_demangle_mangled_name@@Base+0x368>  // b.none
   3b5dc:	add	x3, x1, #0x1
   3b5e0:	b	3b5f4 <__asan_cplus_demangle_mangled_name@@Base+0x2cc>
   3b5e4:	str	x3, [x19, #24]
   3b5e8:	ldrb	w4, [x3], #1
   3b5ec:	cmp	w4, #0x45
   3b5f0:	b.eq	3b618 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>  // b.none
   3b5f4:	mov	x2, x3
   3b5f8:	cbnz	w4, 3b5e4 <__asan_cplus_demangle_mangled_name@@Base+0x2bc>
   3b5fc:	ldp	x21, x22, [sp, #32]
   3b600:	mov	x0, #0x0                   	// #0
   3b604:	ldp	x19, x20, [sp, #16]
   3b608:	ldp	x29, x30, [sp], #48
   3b60c:	ret
   3b610:	mov	x0, #0x0                   	// #0
   3b614:	ret
   3b618:	sub	w2, w2, w1
   3b61c:	ldp	w21, w0, [x19, #40]
   3b620:	cmp	w21, w0
   3b624:	b.ge	3b688 <__asan_cplus_demangle_mangled_name@@Base+0x360>  // b.tcont
   3b628:	ldr	x3, [x19, #32]
   3b62c:	mov	w4, #0x18                  	// #24
   3b630:	add	w0, w21, #0x1
   3b634:	smaddl	x21, w21, w4, x3
   3b638:	str	wzr, [x21, #4]
   3b63c:	str	w0, [x19, #40]
   3b640:	mov	x0, x21
   3b644:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3b648:	cmp	w0, #0x0
   3b64c:	mov	w1, w22
   3b650:	csel	x3, x21, xzr, ne  // ne = any
   3b654:	mov	x2, x20
   3b658:	mov	x0, x19
   3b65c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3b660:	ldp	x21, x22, [sp, #32]
   3b664:	b	3b56c <__asan_cplus_demangle_mangled_name@@Base+0x244>
   3b668:	ldr	x0, [x20, #8]
   3b66c:	ldr	w1, [x0, #28]
   3b670:	cbz	w1, 3b5ac <__asan_cplus_demangle_mangled_name@@Base+0x284>
   3b674:	ldr	w1, [x0, #8]
   3b678:	ldr	w0, [x19, #72]
   3b67c:	sub	w0, w0, w1
   3b680:	str	w0, [x19, #72]
   3b684:	b	3b5ac <__asan_cplus_demangle_mangled_name@@Base+0x284>
   3b688:	mov	x21, #0x0                   	// #0
   3b68c:	b	3b640 <__asan_cplus_demangle_mangled_name@@Base+0x318>
   3b690:	mov	w2, #0x0                   	// #0
   3b694:	b	3b61c <__asan_cplus_demangle_mangled_name@@Base+0x2f4>

000000000003b698 <__asan_cplus_demangle_print_callback@@Base>:
   3b698:	stp	x29, x30, [sp, #-448]!
   3b69c:	mov	w4, w0
   3b6a0:	mov	x29, sp
   3b6a4:	stp	x19, x20, [sp, #16]
   3b6a8:	add	x20, x29, #0x40
   3b6ac:	mov	x19, x1
   3b6b0:	str	x21, [sp, #32]
   3b6b4:	mov	x0, x20
   3b6b8:	stp	x2, x3, [x29, #336]
   3b6bc:	add	x2, x29, #0x200
   3b6c0:	str	xzr, [x29, #320]
   3b6c4:	stp	xzr, xzr, [x2, #-120]
   3b6c8:	strb	wzr, [x29, #328]
   3b6cc:	stp	xzr, xzr, [x29, #352]
   3b6d0:	stp	xzr, xzr, [x29, #368]
   3b6d4:	str	xzr, [x29, #384]
   3b6d8:	stp	xzr, xzr, [x29, #408]
   3b6dc:	str	xzr, [x29, #424]
   3b6e0:	bl	2dda8 <__asan_backtrace_create_state@@Base+0x120>
   3b6e4:	ldr	w1, [x29, #372]
   3b6e8:	cmp	w1, #0x7ff
   3b6ec:	b.gt	3b6f8 <__asan_cplus_demangle_print_callback@@Base+0x60>
   3b6f0:	mov	w1, #0x0                   	// #0
   3b6f4:	str	wzr, [x29, #372]
   3b6f8:	ldr	w3, [x29, #412]
   3b6fc:	mov	w0, #0x1                   	// #1
   3b700:	ldr	w5, [x29, #428]
   3b704:	mov	x21, sp
   3b708:	cmp	w3, #0x0
   3b70c:	str	xzr, [x29, #432]
   3b710:	csel	w2, w3, w0, gt
   3b714:	mul	w3, w3, w5
   3b718:	sub	sp, sp, w2, sxtw #4
   3b71c:	str	w3, [x29, #428]
   3b720:	mov	x2, sp
   3b724:	cmp	w3, #0x0
   3b728:	str	x2, [x29, #400]
   3b72c:	csel	w3, w3, w0, gt
   3b730:	sub	sp, sp, w3, sxtw #4
   3b734:	mov	x0, sp
   3b738:	str	x0, [x29, #416]
   3b73c:	cbz	x19, 3b7a8 <__asan_cplus_demangle_print_callback@@Base+0x110>
   3b740:	ldr	w0, [x19, #4]
   3b744:	cmp	w0, #0x1
   3b748:	b.gt	3b7a8 <__asan_cplus_demangle_print_callback@@Base+0x110>
   3b74c:	cmp	w1, #0x400
   3b750:	b.gt	3b7a8 <__asan_cplus_demangle_print_callback@@Base+0x110>
   3b754:	ldr	x5, [x29, #392]
   3b758:	add	w3, w1, #0x1
   3b75c:	mov	w1, w4
   3b760:	add	x4, x29, #0x30
   3b764:	add	w0, w0, #0x1
   3b768:	str	w0, [x19, #4]
   3b76c:	mov	x2, x19
   3b770:	mov	x0, x20
   3b774:	stp	x19, x5, [x29, #48]
   3b778:	str	w3, [x29, #372]
   3b77c:	str	x4, [x29, #392]
   3b780:	bl	2e750 <__asan_backtrace_create_state@@Base+0xac8>
   3b784:	ldr	w0, [x19, #4]
   3b788:	ldr	w1, [x29, #372]
   3b78c:	ldr	x2, [x29, #56]
   3b790:	sub	w0, w0, #0x1
   3b794:	sub	w1, w1, #0x1
   3b798:	str	w0, [x19, #4]
   3b79c:	str	w1, [x29, #372]
   3b7a0:	str	x2, [x29, #392]
   3b7a4:	b	3b7b0 <__asan_cplus_demangle_print_callback@@Base+0x118>
   3b7a8:	mov	w0, #0x1                   	// #1
   3b7ac:	str	w0, [x29, #368]
   3b7b0:	ldr	x1, [x29, #320]
   3b7b4:	mov	sp, x21
   3b7b8:	ldp	x3, x2, [x29, #336]
   3b7bc:	mov	x0, x20
   3b7c0:	strb	wzr, [x20, x1]
   3b7c4:	blr	x3
   3b7c8:	ldr	w0, [x29, #368]
   3b7cc:	mov	sp, x29
   3b7d0:	cmp	w0, #0x0
   3b7d4:	cset	w0, eq  // eq = none
   3b7d8:	ldp	x19, x20, [sp, #16]
   3b7dc:	ldr	x21, [sp, #32]
   3b7e0:	ldp	x29, x30, [sp], #448
   3b7e4:	ret

000000000003b7e8 <__asan_cplus_demangle_print@@Base>:
   3b7e8:	stp	x29, x30, [sp, #-96]!
   3b7ec:	mov	x29, sp
   3b7f0:	stp	x19, x20, [sp, #16]
   3b7f4:	mov	w19, w0
   3b7f8:	str	x21, [sp, #32]
   3b7fc:	mov	x21, x3
   3b800:	str	xzr, [sp, #64]
   3b804:	stp	xzr, xzr, [sp, #72]
   3b808:	str	wzr, [sp, #88]
   3b80c:	cbnz	w2, 3b850 <__asan_cplus_demangle_print@@Base+0x68>
   3b810:	adrp	x2, 2d000 <__asan_backtrace_pcinfo@@Base+0x110>
   3b814:	mov	w0, w19
   3b818:	add	x3, sp, #0x40
   3b81c:	add	x2, x2, #0xfa0
   3b820:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   3b824:	cbz	w0, 3b88c <__asan_cplus_demangle_print@@Base+0xa4>
   3b828:	ldr	w2, [sp, #88]
   3b82c:	ldr	x1, [sp, #80]
   3b830:	cmp	w2, #0x0
   3b834:	ldr	x0, [sp, #64]
   3b838:	csinc	x1, x1, xzr, eq  // eq = none
   3b83c:	str	x1, [x21]
   3b840:	ldp	x19, x20, [sp, #16]
   3b844:	ldr	x21, [sp, #32]
   3b848:	ldp	x29, x30, [sp], #96
   3b84c:	ret
   3b850:	sxtw	x0, w2
   3b854:	mov	x20, #0x2                   	// #2
   3b858:	cmp	x0, #0x2
   3b85c:	b.ls	3b86c <__asan_cplus_demangle_print@@Base+0x84>  // b.plast
   3b860:	lsl	x20, x20, #1
   3b864:	cmp	x0, x20
   3b868:	b.hi	3b860 <__asan_cplus_demangle_print@@Base+0x78>  // b.pmore
   3b86c:	mov	x0, x20
   3b870:	str	x1, [sp, #56]
   3b874:	bl	6880 <malloc@plt>
   3b878:	ldr	x1, [sp, #56]
   3b87c:	cbz	x0, 3b8a0 <__asan_cplus_demangle_print@@Base+0xb8>
   3b880:	str	x0, [sp, #64]
   3b884:	str	x20, [sp, #80]
   3b888:	b	3b810 <__asan_cplus_demangle_print@@Base+0x28>
   3b88c:	ldr	x0, [sp, #64]
   3b890:	bl	6540 <free@plt>
   3b894:	str	xzr, [x21]
   3b898:	mov	x0, #0x0                   	// #0
   3b89c:	b	3b840 <__asan_cplus_demangle_print@@Base+0x58>
   3b8a0:	mov	w0, #0x1                   	// #1
   3b8a4:	str	w0, [sp, #88]
   3b8a8:	b	3b810 <__asan_cplus_demangle_print@@Base+0x28>
   3b8ac:	nop

000000000003b8b0 <__asan_cplus_demangle_init_info@@Base>:
   3b8b0:	lsl	w4, w2, #1
   3b8b4:	add	x5, x0, x2
   3b8b8:	stp	x0, x5, [x3]
   3b8bc:	str	w1, [x3, #16]
   3b8c0:	str	x0, [x3, #24]
   3b8c4:	stp	wzr, w4, [x3, #40]
   3b8c8:	stp	wzr, w2, [x3, #56]
   3b8cc:	stp	xzr, xzr, [x3, #64]
   3b8d0:	str	xzr, [x3, #80]
   3b8d4:	ret

000000000003b8d8 <__asan_cplus_demangle_v3@@Base>:
   3b8d8:	stp	x29, x30, [sp, #-192]!
   3b8dc:	mov	x29, sp
   3b8e0:	stp	x19, x20, [sp, #16]
   3b8e4:	mov	x19, x0
   3b8e8:	mov	w20, w1
   3b8ec:	stp	x21, x22, [sp, #32]
   3b8f0:	stp	x23, x24, [sp, #48]
   3b8f4:	ldrb	w0, [x0]
   3b8f8:	str	xzr, [x29, #64]
   3b8fc:	stp	xzr, xzr, [x29, #72]
   3b900:	cmp	w0, #0x5f
   3b904:	str	wzr, [x29, #88]
   3b908:	b.ne	3b918 <__asan_cplus_demangle_v3@@Base+0x40>  // b.any
   3b90c:	ldrb	w0, [x19, #1]
   3b910:	cmp	w0, #0x5a
   3b914:	b.eq	3bb10 <__asan_cplus_demangle_v3@@Base+0x238>  // b.none
   3b918:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3b91c:	mov	x0, x19
   3b920:	add	x1, x1, #0x2d8
   3b924:	mov	x2, #0x8                   	// #8
   3b928:	bl	6830 <__asan_internal_strncmp@plt>
   3b92c:	cbnz	w0, 3b960 <__asan_cplus_demangle_v3@@Base+0x88>
   3b930:	ldrb	w0, [x19, #8]
   3b934:	mov	w2, #0x5f                  	// #95
   3b938:	mov	w1, #0x24                  	// #36
   3b93c:	cmp	w0, #0x2e
   3b940:	ccmp	w0, w2, #0x4, ne  // ne = any
   3b944:	ccmp	w0, w1, #0x4, ne  // ne = any
   3b948:	b.ne	3b960 <__asan_cplus_demangle_v3@@Base+0x88>  // b.any
   3b94c:	ldrb	w0, [x19, #9]
   3b950:	mov	w1, #0x49                  	// #73
   3b954:	cmp	w0, #0x44
   3b958:	ccmp	w0, w1, #0x4, ne  // ne = any
   3b95c:	b.eq	3bb18 <__asan_cplus_demangle_v3@@Base+0x240>  // b.none
   3b960:	mov	w22, #0x0                   	// #0
   3b964:	tbz	w20, #4, 3baf0 <__asan_cplus_demangle_v3@@Base+0x218>
   3b968:	mov	x0, x19
   3b96c:	add	x21, x29, #0x68
   3b970:	bl	64b0 <__asan_internal_strlen@plt>
   3b974:	mov	x2, x0
   3b978:	mov	x3, x21
   3b97c:	mov	x0, x19
   3b980:	mov	w1, w20
   3b984:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3b988:	ldr	w0, [x29, #148]
   3b98c:	tbnz	w20, #18, 3b998 <__asan_cplus_demangle_v3@@Base+0xc0>
   3b990:	cmp	w0, #0x800
   3b994:	b.hi	3baf0 <__asan_cplus_demangle_v3@@Base+0x218>  // b.pmore
   3b998:	mov	w2, #0x18                  	// #24
   3b99c:	ldrsw	x1, [x29, #164]
   3b9a0:	mov	x19, sp
   3b9a4:	cmp	w22, #0x1
   3b9a8:	smull	x0, w0, w2
   3b9ac:	lsl	x1, x1, #3
   3b9b0:	add	x0, x0, #0xf
   3b9b4:	add	x1, x1, #0xf
   3b9b8:	and	x0, x0, #0xfffffffffffffff0
   3b9bc:	and	x1, x1, #0xfffffffffffffff0
   3b9c0:	sub	sp, sp, x0
   3b9c4:	mov	x0, sp
   3b9c8:	sub	sp, sp, x1
   3b9cc:	mov	x1, sp
   3b9d0:	str	x0, [x29, #136]
   3b9d4:	str	x1, [x29, #152]
   3b9d8:	b.eq	3bad8 <__asan_cplus_demangle_v3@@Base+0x200>  // b.none
   3b9dc:	sub	w0, w22, #0x2
   3b9e0:	cmp	w0, #0x1
   3b9e4:	b.hi	3bb00 <__asan_cplus_demangle_v3@@Base+0x228>  // b.pmore
   3b9e8:	ldr	x0, [x29, #128]
   3b9ec:	cmp	w22, #0x2
   3b9f0:	cset	w2, ne  // ne = any
   3b9f4:	add	x24, x0, #0xb
   3b9f8:	str	x24, [x29, #128]
   3b9fc:	add	w22, w2, #0x44
   3ba00:	ldrb	w1, [x0, #11]
   3ba04:	cmp	w1, #0x5f
   3ba08:	b.ne	3ba18 <__asan_cplus_demangle_v3@@Base+0x140>  // b.any
   3ba0c:	ldrb	w1, [x0, #12]
   3ba10:	cmp	w1, #0x5a
   3ba14:	b.eq	3bb34 <__asan_cplus_demangle_v3@@Base+0x25c>  // b.none
   3ba18:	mov	x0, x24
   3ba1c:	bl	64b0 <__asan_internal_strlen@plt>
   3ba20:	ldp	w23, w1, [x29, #144]
   3ba24:	mov	x2, x0
   3ba28:	cmp	w23, w1
   3ba2c:	b.ge	3bb50 <__asan_cplus_demangle_v3@@Base+0x278>  // b.tcont
   3ba30:	ldr	x0, [x29, #136]
   3ba34:	mov	w3, #0x18                  	// #24
   3ba38:	add	w1, w23, #0x1
   3ba3c:	smaddl	x23, w23, w3, x0
   3ba40:	str	wzr, [x23, #4]
   3ba44:	str	w1, [x29, #144]
   3ba48:	mov	x0, x23
   3ba4c:	mov	x1, x24
   3ba50:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3ba54:	cmp	w0, #0x0
   3ba58:	csel	x23, x23, xzr, ne  // ne = any
   3ba5c:	mov	w1, w22
   3ba60:	mov	x2, x23
   3ba64:	mov	x0, x21
   3ba68:	mov	x3, #0x0                   	// #0
   3ba6c:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3ba70:	mov	x21, x0
   3ba74:	ldr	x0, [x29, #128]
   3ba78:	bl	64b0 <__asan_internal_strlen@plt>
   3ba7c:	ldr	x1, [x29, #128]
   3ba80:	add	x1, x1, x0
   3ba84:	str	x1, [x29, #128]
   3ba88:	tbz	w20, #0, 3ba98 <__asan_cplus_demangle_v3@@Base+0x1c0>
   3ba8c:	ldr	x0, [x29, #128]
   3ba90:	ldrb	w0, [x0]
   3ba94:	cbnz	w0, 3baec <__asan_cplus_demangle_v3@@Base+0x214>
   3ba98:	cbz	x21, 3baec <__asan_cplus_demangle_v3@@Base+0x214>
   3ba9c:	mov	x1, x21
   3baa0:	mov	w0, w20
   3baa4:	add	x3, x29, #0x40
   3baa8:	adrp	x2, 2d000 <__asan_backtrace_pcinfo@@Base+0x110>
   3baac:	add	x2, x2, #0xfa0
   3bab0:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   3bab4:	mov	sp, x19
   3bab8:	cbz	w0, 3baf0 <__asan_cplus_demangle_v3@@Base+0x218>
   3babc:	ldr	x0, [x29, #64]
   3bac0:	mov	sp, x29
   3bac4:	ldp	x19, x20, [sp, #16]
   3bac8:	ldp	x21, x22, [sp, #32]
   3bacc:	ldp	x23, x24, [sp, #48]
   3bad0:	ldp	x29, x30, [sp], #192
   3bad4:	ret
   3bad8:	mov	x0, x21
   3badc:	mov	w1, w22
   3bae0:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3bae4:	mov	x21, x0
   3bae8:	b	3ba88 <__asan_cplus_demangle_v3@@Base+0x1b0>
   3baec:	mov	sp, x19
   3baf0:	ldr	x0, [x29, #64]
   3baf4:	bl	6540 <free@plt>
   3baf8:	mov	x0, #0x0                   	// #0
   3bafc:	b	3bac0 <__asan_cplus_demangle_v3@@Base+0x1e8>
   3bb00:	mov	x0, x21
   3bb04:	bl	6420 <__asan_cplus_demangle_type@plt>
   3bb08:	mov	x21, x0
   3bb0c:	b	3ba88 <__asan_cplus_demangle_v3@@Base+0x1b0>
   3bb10:	mov	w22, #0x1                   	// #1
   3bb14:	b	3b968 <__asan_cplus_demangle_v3@@Base+0x90>
   3bb18:	ldrb	w1, [x19, #10]
   3bb1c:	cmp	w1, w2
   3bb20:	b.ne	3b960 <__asan_cplus_demangle_v3@@Base+0x88>  // b.any
   3bb24:	cmp	w0, #0x49
   3bb28:	cset	w22, ne  // ne = any
   3bb2c:	add	w22, w22, #0x2
   3bb30:	b	3b968 <__asan_cplus_demangle_v3@@Base+0x90>
   3bb34:	add	x2, x0, #0xd
   3bb38:	mov	w1, #0x0                   	// #0
   3bb3c:	mov	x0, x21
   3bb40:	str	x2, [x29, #128]
   3bb44:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3bb48:	mov	x23, x0
   3bb4c:	b	3ba5c <__asan_cplus_demangle_v3@@Base+0x184>
   3bb50:	mov	x23, #0x0                   	// #0
   3bb54:	b	3ba48 <__asan_cplus_demangle_v3@@Base+0x170>

000000000003bb58 <__asan_cplus_demangle_v3_callback@@Base>:
   3bb58:	stp	x29, x30, [sp, #-176]!
   3bb5c:	mov	x29, sp
   3bb60:	stp	x19, x20, [sp, #16]
   3bb64:	mov	x19, x0
   3bb68:	mov	w20, w1
   3bb6c:	stp	x21, x22, [sp, #32]
   3bb70:	mov	x21, x2
   3bb74:	mov	x22, x3
   3bb78:	stp	x23, x24, [sp, #48]
   3bb7c:	stp	x25, x26, [sp, #64]
   3bb80:	ldrb	w0, [x0]
   3bb84:	cmp	w0, #0x5f
   3bb88:	b.ne	3bb98 <__asan_cplus_demangle_v3_callback@@Base+0x40>  // b.any
   3bb8c:	ldrb	w0, [x19, #1]
   3bb90:	cmp	w0, #0x5a
   3bb94:	b.eq	3bda0 <__asan_cplus_demangle_v3_callback@@Base+0x248>  // b.none
   3bb98:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3bb9c:	mov	x0, x19
   3bba0:	add	x1, x1, #0x2d8
   3bba4:	mov	x2, #0x8                   	// #8
   3bba8:	bl	6830 <__asan_internal_strncmp@plt>
   3bbac:	cbnz	w0, 3bbe0 <__asan_cplus_demangle_v3_callback@@Base+0x88>
   3bbb0:	ldrb	w0, [x19, #8]
   3bbb4:	mov	w2, #0x5f                  	// #95
   3bbb8:	mov	w1, #0x24                  	// #36
   3bbbc:	cmp	w0, #0x2e
   3bbc0:	ccmp	w0, w2, #0x4, ne  // ne = any
   3bbc4:	ccmp	w0, w1, #0x4, ne  // ne = any
   3bbc8:	b.ne	3bbe0 <__asan_cplus_demangle_v3_callback@@Base+0x88>  // b.any
   3bbcc:	ldrb	w0, [x19, #9]
   3bbd0:	mov	w1, #0x49                  	// #73
   3bbd4:	cmp	w0, #0x44
   3bbd8:	ccmp	w0, w1, #0x4, ne  // ne = any
   3bbdc:	b.eq	3bda8 <__asan_cplus_demangle_v3_callback@@Base+0x250>  // b.none
   3bbe0:	mov	w24, #0x0                   	// #0
   3bbe4:	tbz	w20, #4, 3bd80 <__asan_cplus_demangle_v3_callback@@Base+0x228>
   3bbe8:	mov	x0, x19
   3bbec:	add	x23, x29, #0x58
   3bbf0:	bl	64b0 <__asan_internal_strlen@plt>
   3bbf4:	mov	x2, x0
   3bbf8:	mov	x3, x23
   3bbfc:	mov	x0, x19
   3bc00:	mov	w1, w20
   3bc04:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3bc08:	ldr	w0, [x29, #132]
   3bc0c:	tbnz	w20, #18, 3bc18 <__asan_cplus_demangle_v3_callback@@Base+0xc0>
   3bc10:	cmp	w0, #0x800
   3bc14:	b.hi	3bd80 <__asan_cplus_demangle_v3_callback@@Base+0x228>  // b.pmore
   3bc18:	mov	w2, #0x18                  	// #24
   3bc1c:	ldrsw	x1, [x29, #148]
   3bc20:	mov	x19, sp
   3bc24:	cmp	w24, #0x1
   3bc28:	smull	x0, w0, w2
   3bc2c:	lsl	x1, x1, #3
   3bc30:	add	x0, x0, #0xf
   3bc34:	add	x1, x1, #0xf
   3bc38:	and	x0, x0, #0xfffffffffffffff0
   3bc3c:	and	x1, x1, #0xfffffffffffffff0
   3bc40:	sub	sp, sp, x0
   3bc44:	mov	x0, sp
   3bc48:	sub	sp, sp, x1
   3bc4c:	mov	x1, sp
   3bc50:	str	x0, [x29, #120]
   3bc54:	str	x1, [x29, #136]
   3bc58:	b.eq	3bd3c <__asan_cplus_demangle_v3_callback@@Base+0x1e4>  // b.none
   3bc5c:	sub	w0, w24, #0x2
   3bc60:	cmp	w0, #0x1
   3bc64:	b.hi	3bd70 <__asan_cplus_demangle_v3_callback@@Base+0x218>  // b.pmore
   3bc68:	ldr	x0, [x29, #112]
   3bc6c:	cmp	w24, #0x2
   3bc70:	cset	w2, ne  // ne = any
   3bc74:	add	x26, x0, #0xb
   3bc78:	str	x26, [x29, #112]
   3bc7c:	add	w24, w2, #0x44
   3bc80:	ldrb	w1, [x0, #11]
   3bc84:	cmp	w1, #0x5f
   3bc88:	b.ne	3bc98 <__asan_cplus_demangle_v3_callback@@Base+0x140>  // b.any
   3bc8c:	ldrb	w1, [x0, #12]
   3bc90:	cmp	w1, #0x5a
   3bc94:	b.eq	3bdc4 <__asan_cplus_demangle_v3_callback@@Base+0x26c>  // b.none
   3bc98:	mov	x0, x26
   3bc9c:	bl	64b0 <__asan_internal_strlen@plt>
   3bca0:	ldp	w25, w1, [x29, #128]
   3bca4:	mov	x2, x0
   3bca8:	cmp	w25, w1
   3bcac:	b.ge	3bde0 <__asan_cplus_demangle_v3_callback@@Base+0x288>  // b.tcont
   3bcb0:	ldr	x0, [x29, #120]
   3bcb4:	mov	w3, #0x18                  	// #24
   3bcb8:	add	w1, w25, #0x1
   3bcbc:	smaddl	x25, w25, w3, x0
   3bcc0:	str	wzr, [x25, #4]
   3bcc4:	str	w1, [x29, #128]
   3bcc8:	mov	x0, x25
   3bccc:	mov	x1, x26
   3bcd0:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3bcd4:	cmp	w0, #0x0
   3bcd8:	csel	x25, x25, xzr, ne  // ne = any
   3bcdc:	mov	w1, w24
   3bce0:	mov	x2, x25
   3bce4:	mov	x0, x23
   3bce8:	mov	x3, #0x0                   	// #0
   3bcec:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3bcf0:	mov	x23, x0
   3bcf4:	ldr	x0, [x29, #112]
   3bcf8:	bl	64b0 <__asan_internal_strlen@plt>
   3bcfc:	ldr	x1, [x29, #112]
   3bd00:	add	x1, x1, x0
   3bd04:	str	x1, [x29, #112]
   3bd08:	tbz	w20, #0, 3bd50 <__asan_cplus_demangle_v3_callback@@Base+0x1f8>
   3bd0c:	ldr	x1, [x29, #112]
   3bd10:	mov	w0, #0x0                   	// #0
   3bd14:	ldrb	w1, [x1]
   3bd18:	cbz	w1, 3bd50 <__asan_cplus_demangle_v3_callback@@Base+0x1f8>
   3bd1c:	mov	sp, x19
   3bd20:	mov	sp, x29
   3bd24:	ldp	x19, x20, [sp, #16]
   3bd28:	ldp	x21, x22, [sp, #32]
   3bd2c:	ldp	x23, x24, [sp, #48]
   3bd30:	ldp	x25, x26, [sp, #64]
   3bd34:	ldp	x29, x30, [sp], #176
   3bd38:	ret
   3bd3c:	mov	x0, x23
   3bd40:	mov	w1, w24
   3bd44:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3bd48:	mov	x23, x0
   3bd4c:	tbnz	w20, #0, 3bd0c <__asan_cplus_demangle_v3_callback@@Base+0x1b4>
   3bd50:	mov	w0, #0x0                   	// #0
   3bd54:	cbz	x23, 3bd1c <__asan_cplus_demangle_v3_callback@@Base+0x1c4>
   3bd58:	mov	x3, x22
   3bd5c:	mov	x2, x21
   3bd60:	mov	x1, x23
   3bd64:	mov	w0, w20
   3bd68:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   3bd6c:	b	3bd1c <__asan_cplus_demangle_v3_callback@@Base+0x1c4>
   3bd70:	mov	x0, x23
   3bd74:	bl	6420 <__asan_cplus_demangle_type@plt>
   3bd78:	mov	x23, x0
   3bd7c:	b	3bd08 <__asan_cplus_demangle_v3_callback@@Base+0x1b0>
   3bd80:	mov	sp, x29
   3bd84:	mov	w0, #0x0                   	// #0
   3bd88:	ldp	x19, x20, [sp, #16]
   3bd8c:	ldp	x21, x22, [sp, #32]
   3bd90:	ldp	x23, x24, [sp, #48]
   3bd94:	ldp	x25, x26, [sp, #64]
   3bd98:	ldp	x29, x30, [sp], #176
   3bd9c:	ret
   3bda0:	mov	w24, #0x1                   	// #1
   3bda4:	b	3bbe8 <__asan_cplus_demangle_v3_callback@@Base+0x90>
   3bda8:	ldrb	w1, [x19, #10]
   3bdac:	cmp	w1, w2
   3bdb0:	b.ne	3bbe0 <__asan_cplus_demangle_v3_callback@@Base+0x88>  // b.any
   3bdb4:	cmp	w0, #0x49
   3bdb8:	cset	w24, ne  // ne = any
   3bdbc:	add	w24, w24, #0x2
   3bdc0:	b	3bbe8 <__asan_cplus_demangle_v3_callback@@Base+0x90>
   3bdc4:	add	x2, x0, #0xd
   3bdc8:	mov	w1, #0x0                   	// #0
   3bdcc:	mov	x0, x23
   3bdd0:	str	x2, [x29, #112]
   3bdd4:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3bdd8:	mov	x25, x0
   3bddc:	b	3bcdc <__asan_cplus_demangle_v3_callback@@Base+0x184>
   3bde0:	mov	x25, #0x0                   	// #0
   3bde4:	b	3bcc8 <__asan_cplus_demangle_v3_callback@@Base+0x170>

000000000003bde8 <__asan_java_demangle_v3@@Base>:
   3bde8:	stp	x29, x30, [sp, #-192]!
   3bdec:	mov	x29, sp
   3bdf0:	stp	x19, x20, [sp, #16]
   3bdf4:	mov	x19, x0
   3bdf8:	stp	x21, x22, [sp, #32]
   3bdfc:	str	x23, [sp, #48]
   3be00:	str	xzr, [x29, #64]
   3be04:	ldrb	w0, [x0]
   3be08:	stp	xzr, xzr, [x29, #72]
   3be0c:	cmp	w0, #0x5f
   3be10:	str	wzr, [x29, #88]
   3be14:	b.ne	3be24 <__asan_java_demangle_v3@@Base+0x3c>  // b.any
   3be18:	ldrb	w0, [x19, #1]
   3be1c:	cmp	w0, #0x5a
   3be20:	b.eq	3be90 <__asan_java_demangle_v3@@Base+0xa8>  // b.none
   3be24:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3be28:	mov	x0, x19
   3be2c:	add	x1, x1, #0x2d8
   3be30:	mov	x2, #0x8                   	// #8
   3be34:	bl	6830 <__asan_internal_strncmp@plt>
   3be38:	cbnz	w0, 3be6c <__asan_java_demangle_v3@@Base+0x84>
   3be3c:	ldrb	w0, [x19, #8]
   3be40:	mov	w2, #0x5f                  	// #95
   3be44:	mov	w1, #0x24                  	// #36
   3be48:	cmp	w0, #0x2e
   3be4c:	ccmp	w0, w2, #0x4, ne  // ne = any
   3be50:	ccmp	w0, w1, #0x4, ne  // ne = any
   3be54:	b.ne	3be6c <__asan_java_demangle_v3@@Base+0x84>  // b.any
   3be58:	ldrb	w0, [x19, #9]
   3be5c:	mov	w1, #0x49                  	// #73
   3be60:	cmp	w0, #0x44
   3be64:	ccmp	w0, w1, #0x4, ne  // ne = any
   3be68:	b.eq	3bf64 <__asan_java_demangle_v3@@Base+0x17c>  // b.none
   3be6c:	ldr	x0, [x29, #64]
   3be70:	bl	6540 <free@plt>
   3be74:	mov	sp, x29
   3be78:	mov	x0, #0x0                   	// #0
   3be7c:	ldp	x19, x20, [sp, #16]
   3be80:	ldp	x21, x22, [sp, #32]
   3be84:	ldr	x23, [sp, #48]
   3be88:	ldp	x29, x30, [sp], #192
   3be8c:	ret
   3be90:	mov	w23, #0xffffffff            	// #-1
   3be94:	mov	w21, #0x1                   	// #1
   3be98:	mov	x0, x19
   3be9c:	add	x20, x29, #0x68
   3bea0:	bl	64b0 <__asan_internal_strlen@plt>
   3bea4:	mov	x2, x0
   3bea8:	mov	x3, x20
   3beac:	mov	x0, x19
   3beb0:	mov	w1, #0x25                  	// #37
   3beb4:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3beb8:	ldr	w0, [x29, #148]
   3bebc:	cmp	w0, #0x800
   3bec0:	b.hi	3be6c <__asan_java_demangle_v3@@Base+0x84>  // b.pmore
   3bec4:	mov	w2, #0x18                  	// #24
   3bec8:	ldrsw	x1, [x29, #164]
   3becc:	mov	x22, sp
   3bed0:	cmp	w23, #0x1
   3bed4:	smull	x0, w0, w2
   3bed8:	lsl	x1, x1, #3
   3bedc:	add	x0, x0, #0xf
   3bee0:	add	x1, x1, #0xf
   3bee4:	and	x0, x0, #0xfffffffffffffff0
   3bee8:	and	x1, x1, #0xfffffffffffffff0
   3beec:	sub	sp, sp, x0
   3bef0:	mov	x0, sp
   3bef4:	sub	sp, sp, x1
   3bef8:	mov	x1, sp
   3befc:	str	x0, [x29, #136]
   3bf00:	str	x1, [x29, #152]
   3bf04:	b.ls	3bf90 <__asan_java_demangle_v3@@Base+0x1a8>  // b.plast
   3bf08:	mov	x0, x20
   3bf0c:	mov	w1, #0x1                   	// #1
   3bf10:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3bf14:	mov	x19, x0
   3bf18:	ldr	x0, [x29, #128]
   3bf1c:	ldrb	w0, [x0]
   3bf20:	cbnz	w0, 3bf88 <__asan_java_demangle_v3@@Base+0x1a0>
   3bf24:	cbz	x19, 3bf88 <__asan_java_demangle_v3@@Base+0x1a0>
   3bf28:	mov	x1, x19
   3bf2c:	add	x3, x29, #0x40
   3bf30:	adrp	x2, 2d000 <__asan_backtrace_pcinfo@@Base+0x110>
   3bf34:	mov	w0, #0x25                  	// #37
   3bf38:	add	x2, x2, #0xfa0
   3bf3c:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   3bf40:	mov	sp, x22
   3bf44:	cbz	w0, 3be6c <__asan_java_demangle_v3@@Base+0x84>
   3bf48:	ldr	x0, [x29, #64]
   3bf4c:	mov	sp, x29
   3bf50:	ldp	x19, x20, [sp, #16]
   3bf54:	ldp	x21, x22, [sp, #32]
   3bf58:	ldr	x23, [sp, #48]
   3bf5c:	ldp	x29, x30, [sp], #192
   3bf60:	ret
   3bf64:	ldrb	w1, [x19, #10]
   3bf68:	cmp	w1, w2
   3bf6c:	b.ne	3be6c <__asan_java_demangle_v3@@Base+0x84>  // b.any
   3bf70:	cmp	w0, #0x49
   3bf74:	mov	w21, #0x2                   	// #2
   3bf78:	mov	w0, #0x3                   	// #3
   3bf7c:	cset	w23, ne  // ne = any
   3bf80:	csel	w21, w21, w0, eq  // eq = none
   3bf84:	b	3be98 <__asan_java_demangle_v3@@Base+0xb0>
   3bf88:	mov	sp, x22
   3bf8c:	b	3be6c <__asan_java_demangle_v3@@Base+0x84>
   3bf90:	ldr	x0, [x29, #128]
   3bf94:	cmp	w21, #0x2
   3bf98:	cset	w21, ne  // ne = any
   3bf9c:	add	x23, x0, #0xb
   3bfa0:	str	x23, [x29, #128]
   3bfa4:	add	w21, w21, #0x44
   3bfa8:	ldrb	w1, [x0, #11]
   3bfac:	cmp	w1, #0x5f
   3bfb0:	b.ne	3bfc0 <__asan_java_demangle_v3@@Base+0x1d8>  // b.any
   3bfb4:	ldrb	w1, [x0, #12]
   3bfb8:	cmp	w1, #0x5a
   3bfbc:	b.eq	3c034 <__asan_java_demangle_v3@@Base+0x24c>  // b.none
   3bfc0:	mov	x0, x23
   3bfc4:	bl	64b0 <__asan_internal_strlen@plt>
   3bfc8:	ldp	w19, w1, [x29, #144]
   3bfcc:	mov	x2, x0
   3bfd0:	cmp	w19, w1
   3bfd4:	b.ge	3c060 <__asan_java_demangle_v3@@Base+0x278>  // b.tcont
   3bfd8:	ldr	x0, [x29, #136]
   3bfdc:	mov	w3, #0x18                  	// #24
   3bfe0:	add	w1, w19, #0x1
   3bfe4:	smaddl	x19, w19, w3, x0
   3bfe8:	str	wzr, [x19, #4]
   3bfec:	str	w1, [x29, #144]
   3bff0:	mov	x0, x19
   3bff4:	mov	x1, x23
   3bff8:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3bffc:	cmp	w0, #0x0
   3c000:	csel	x19, x19, xzr, ne  // ne = any
   3c004:	mov	x2, x19
   3c008:	mov	w1, w21
   3c00c:	mov	x3, #0x0                   	// #0
   3c010:	mov	x0, x20
   3c014:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3c018:	mov	x19, x0
   3c01c:	ldr	x0, [x29, #128]
   3c020:	bl	64b0 <__asan_internal_strlen@plt>
   3c024:	ldr	x1, [x29, #128]
   3c028:	add	x0, x1, x0
   3c02c:	str	x0, [x29, #128]
   3c030:	b	3bf1c <__asan_java_demangle_v3@@Base+0x134>
   3c034:	add	x1, x0, #0xd
   3c038:	str	x1, [x29, #128]
   3c03c:	mov	w1, #0x54                  	// #84
   3c040:	ldrb	w0, [x0, #13]
   3c044:	cmp	w0, #0x47
   3c048:	ccmp	w0, w1, #0x4, ne  // ne = any
   3c04c:	b.ne	3c068 <__asan_java_demangle_v3@@Base+0x280>  // b.any
   3c050:	mov	x0, x20
   3c054:	bl	3a018 <__asan_cplus_demangle_type@@Base+0x2ba8>
   3c058:	mov	x19, x0
   3c05c:	b	3c004 <__asan_java_demangle_v3@@Base+0x21c>
   3c060:	mov	x19, #0x0                   	// #0
   3c064:	b	3bff0 <__asan_java_demangle_v3@@Base+0x208>
   3c068:	mov	x0, x20
   3c06c:	mov	w1, #0x0                   	// #0
   3c070:	bl	3b108 <__asan_cplus_demangle_type@@Base+0x3c98>
   3c074:	mov	x19, x0
   3c078:	b	3c004 <__asan_java_demangle_v3@@Base+0x21c>
   3c07c:	nop

000000000003c080 <__asan_java_demangle_v3_callback@@Base>:
   3c080:	stp	x29, x30, [sp, #-176]!
   3c084:	mov	x29, sp
   3c088:	stp	x19, x20, [sp, #16]
   3c08c:	mov	x19, x0
   3c090:	mov	x20, x1
   3c094:	stp	x21, x22, [sp, #32]
   3c098:	mov	x21, x2
   3c09c:	stp	x23, x24, [sp, #48]
   3c0a0:	str	x25, [sp, #64]
   3c0a4:	ldrb	w0, [x0]
   3c0a8:	cmp	w0, #0x5f
   3c0ac:	b.ne	3c0bc <__asan_java_demangle_v3_callback@@Base+0x3c>  // b.any
   3c0b0:	ldrb	w0, [x19, #1]
   3c0b4:	cmp	w0, #0x5a
   3c0b8:	b.eq	3c124 <__asan_java_demangle_v3_callback@@Base+0xa4>  // b.none
   3c0bc:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3c0c0:	mov	x0, x19
   3c0c4:	add	x1, x1, #0x2d8
   3c0c8:	mov	x2, #0x8                   	// #8
   3c0cc:	bl	6830 <__asan_internal_strncmp@plt>
   3c0d0:	cbnz	w0, 3c104 <__asan_java_demangle_v3_callback@@Base+0x84>
   3c0d4:	ldrb	w0, [x19, #8]
   3c0d8:	mov	w2, #0x5f                  	// #95
   3c0dc:	mov	w1, #0x24                  	// #36
   3c0e0:	cmp	w0, #0x2e
   3c0e4:	ccmp	w0, w2, #0x4, ne  // ne = any
   3c0e8:	ccmp	w0, w1, #0x4, ne  // ne = any
   3c0ec:	b.ne	3c104 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.any
   3c0f0:	ldrb	w0, [x19, #9]
   3c0f4:	mov	w1, #0x49                  	// #73
   3c0f8:	cmp	w0, #0x44
   3c0fc:	ccmp	w0, w1, #0x4, ne  // ne = any
   3c100:	b.eq	3c200 <__asan_java_demangle_v3_callback@@Base+0x180>  // b.none
   3c104:	mov	sp, x29
   3c108:	mov	w0, #0x0                   	// #0
   3c10c:	ldp	x19, x20, [sp, #16]
   3c110:	ldp	x21, x22, [sp, #32]
   3c114:	ldp	x23, x24, [sp, #48]
   3c118:	ldr	x25, [sp, #64]
   3c11c:	ldp	x29, x30, [sp], #176
   3c120:	ret
   3c124:	mov	w25, #0xffffffff            	// #-1
   3c128:	mov	w23, #0x1                   	// #1
   3c12c:	mov	x0, x19
   3c130:	add	x22, x29, #0x58
   3c134:	bl	64b0 <__asan_internal_strlen@plt>
   3c138:	mov	x2, x0
   3c13c:	mov	x3, x22
   3c140:	mov	x0, x19
   3c144:	mov	w1, #0x25                  	// #37
   3c148:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3c14c:	ldr	w0, [x29, #132]
   3c150:	cmp	w0, #0x800
   3c154:	b.hi	3c104 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.pmore
   3c158:	mov	w1, #0x18                  	// #24
   3c15c:	ldrsw	x3, [x29, #148]
   3c160:	mov	x24, sp
   3c164:	cmp	w25, #0x1
   3c168:	smull	x0, w0, w1
   3c16c:	lsl	x3, x3, #3
   3c170:	add	x0, x0, #0xf
   3c174:	add	x3, x3, #0xf
   3c178:	and	x0, x0, #0xfffffffffffffff0
   3c17c:	and	x3, x3, #0xfffffffffffffff0
   3c180:	sub	sp, sp, x0
   3c184:	mov	x0, sp
   3c188:	sub	sp, sp, x3
   3c18c:	mov	x1, sp
   3c190:	str	x0, [x29, #120]
   3c194:	str	x1, [x29, #136]
   3c198:	b.ls	3c224 <__asan_java_demangle_v3_callback@@Base+0x1a4>  // b.plast
   3c19c:	mov	x0, x22
   3c1a0:	mov	w1, #0x1                   	// #1
   3c1a4:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3c1a8:	mov	x19, x0
   3c1ac:	ldr	x0, [x29, #112]
   3c1b0:	ldrb	w1, [x0]
   3c1b4:	mov	w0, #0x0                   	// #0
   3c1b8:	cmp	w1, #0x0
   3c1bc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   3c1c0:	b.ne	3c1e4 <__asan_java_demangle_v3_callback@@Base+0x164>  // b.any
   3c1c4:	mov	sp, x24
   3c1c8:	mov	sp, x29
   3c1cc:	ldp	x19, x20, [sp, #16]
   3c1d0:	ldp	x21, x22, [sp, #32]
   3c1d4:	ldp	x23, x24, [sp, #48]
   3c1d8:	ldr	x25, [sp, #64]
   3c1dc:	ldp	x29, x30, [sp], #176
   3c1e0:	ret
   3c1e4:	mov	x3, x21
   3c1e8:	mov	x2, x20
   3c1ec:	mov	x1, x19
   3c1f0:	mov	w0, #0x25                  	// #37
   3c1f4:	bl	66c0 <__asan_cplus_demangle_print_callback@plt>
   3c1f8:	mov	sp, x24
   3c1fc:	b	3c1c8 <__asan_java_demangle_v3_callback@@Base+0x148>
   3c200:	ldrb	w1, [x19, #10]
   3c204:	cmp	w1, w2
   3c208:	b.ne	3c104 <__asan_java_demangle_v3_callback@@Base+0x84>  // b.any
   3c20c:	cmp	w0, #0x49
   3c210:	mov	w23, #0x2                   	// #2
   3c214:	mov	w0, #0x3                   	// #3
   3c218:	cset	w25, ne  // ne = any
   3c21c:	csel	w23, w23, w0, eq  // eq = none
   3c220:	b	3c12c <__asan_java_demangle_v3_callback@@Base+0xac>
   3c224:	ldr	x0, [x29, #112]
   3c228:	cmp	w23, #0x2
   3c22c:	cset	w23, ne  // ne = any
   3c230:	add	x25, x0, #0xb
   3c234:	str	x25, [x29, #112]
   3c238:	add	w23, w23, #0x44
   3c23c:	ldrb	w1, [x0, #11]
   3c240:	cmp	w1, #0x5f
   3c244:	b.ne	3c254 <__asan_java_demangle_v3_callback@@Base+0x1d4>  // b.any
   3c248:	ldrb	w1, [x0, #12]
   3c24c:	cmp	w1, #0x5a
   3c250:	b.eq	3c2c8 <__asan_java_demangle_v3_callback@@Base+0x248>  // b.none
   3c254:	mov	x0, x25
   3c258:	bl	64b0 <__asan_internal_strlen@plt>
   3c25c:	ldp	w19, w1, [x29, #128]
   3c260:	mov	x2, x0
   3c264:	cmp	w19, w1
   3c268:	b.ge	3c2e4 <__asan_java_demangle_v3_callback@@Base+0x264>  // b.tcont
   3c26c:	ldr	x0, [x29, #120]
   3c270:	mov	w3, #0x18                  	// #24
   3c274:	add	w1, w19, #0x1
   3c278:	smaddl	x19, w19, w3, x0
   3c27c:	str	wzr, [x19, #4]
   3c280:	str	w1, [x29, #128]
   3c284:	mov	x0, x19
   3c288:	mov	x1, x25
   3c28c:	bl	6490 <__asan_cplus_demangle_fill_name@plt>
   3c290:	cmp	w0, #0x0
   3c294:	csel	x19, x19, xzr, ne  // ne = any
   3c298:	mov	x2, x19
   3c29c:	mov	w1, w23
   3c2a0:	mov	x3, #0x0                   	// #0
   3c2a4:	mov	x0, x22
   3c2a8:	bl	2dd20 <__asan_backtrace_create_state@@Base+0x98>
   3c2ac:	mov	x19, x0
   3c2b0:	ldr	x0, [x29, #112]
   3c2b4:	bl	64b0 <__asan_internal_strlen@plt>
   3c2b8:	ldr	x1, [x29, #112]
   3c2bc:	add	x0, x1, x0
   3c2c0:	str	x0, [x29, #112]
   3c2c4:	b	3c1b0 <__asan_java_demangle_v3_callback@@Base+0x130>
   3c2c8:	add	x2, x0, #0xd
   3c2cc:	mov	w1, #0x0                   	// #0
   3c2d0:	mov	x0, x22
   3c2d4:	str	x2, [x29, #112]
   3c2d8:	bl	3a8c8 <__asan_cplus_demangle_type@@Base+0x3458>
   3c2dc:	mov	x19, x0
   3c2e0:	b	3c298 <__asan_java_demangle_v3_callback@@Base+0x218>
   3c2e4:	mov	x19, #0x0                   	// #0
   3c2e8:	b	3c284 <__asan_java_demangle_v3_callback@@Base+0x204>
   3c2ec:	nop

000000000003c2f0 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   3c2f0:	stp	x29, x30, [sp, #-128]!
   3c2f4:	mov	x29, sp
   3c2f8:	stp	x19, x20, [sp, #16]
   3c2fc:	mov	x20, x0
   3c300:	add	x19, x29, #0x28
   3c304:	bl	64b0 <__asan_internal_strlen@plt>
   3c308:	mov	x2, x0
   3c30c:	mov	x3, x19
   3c310:	mov	x0, x20
   3c314:	mov	w1, #0x4000                	// #16384
   3c318:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3c31c:	ldr	w4, [x29, #84]
   3c320:	mov	w3, #0x18                  	// #24
   3c324:	ldrsw	x2, [x29, #100]
   3c328:	mov	x20, sp
   3c32c:	mov	x0, x19
   3c330:	mov	w1, #0x1                   	// #1
   3c334:	smull	x4, w4, w3
   3c338:	lsl	x2, x2, #3
   3c33c:	add	x2, x2, #0xf
   3c340:	add	x4, x4, #0xf
   3c344:	and	x2, x2, #0xfffffffffffffff0
   3c348:	and	x4, x4, #0xfffffffffffffff0
   3c34c:	sub	sp, sp, x4
   3c350:	mov	x3, sp
   3c354:	sub	sp, sp, x2
   3c358:	mov	x2, sp
   3c35c:	str	x3, [x29, #72]
   3c360:	str	x2, [x29, #88]
   3c364:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3c368:	cbz	x0, 3c3d4 <__asan_is_gnu_v3_mangled_ctor@@Base+0xe4>
   3c36c:	ldr	w1, [x0]
   3c370:	cmp	w1, #0x7
   3c374:	b.eq	3c3b4 <__asan_is_gnu_v3_mangled_ctor@@Base+0xc4>  // b.none
   3c378:	b.hi	3c38c <__asan_is_gnu_v3_mangled_ctor@@Base+0x9c>  // b.pmore
   3c37c:	sub	w2, w1, #0x3
   3c380:	cmp	w1, #0x2
   3c384:	b.hi	3c3a4 <__asan_is_gnu_v3_mangled_ctor@@Base+0xb4>  // b.pmore
   3c388:	cbnz	w1, 3c3cc <__asan_is_gnu_v3_mangled_ctor@@Base+0xdc>
   3c38c:	mov	sp, x20
   3c390:	mov	w0, #0x0                   	// #0
   3c394:	mov	sp, x29
   3c398:	ldp	x19, x20, [sp, #16]
   3c39c:	ldp	x29, x30, [sp], #128
   3c3a0:	ret
   3c3a4:	cmp	w2, #0x1
   3c3a8:	b.hi	3c38c <__asan_is_gnu_v3_mangled_ctor@@Base+0x9c>  // b.pmore
   3c3ac:	ldr	x0, [x0, #8]
   3c3b0:	b	3c368 <__asan_is_gnu_v3_mangled_ctor@@Base+0x78>
   3c3b4:	ldr	w0, [x0, #8]
   3c3b8:	mov	sp, x20
   3c3bc:	mov	sp, x29
   3c3c0:	ldp	x19, x20, [sp, #16]
   3c3c4:	ldp	x29, x30, [sp], #128
   3c3c8:	ret
   3c3cc:	ldr	x0, [x0, #16]
   3c3d0:	b	3c368 <__asan_is_gnu_v3_mangled_ctor@@Base+0x78>
   3c3d4:	mov	w0, #0x0                   	// #0
   3c3d8:	mov	sp, x20
   3c3dc:	b	3c394 <__asan_is_gnu_v3_mangled_ctor@@Base+0xa4>

000000000003c3e0 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   3c3e0:	stp	x29, x30, [sp, #-128]!
   3c3e4:	mov	x29, sp
   3c3e8:	stp	x19, x20, [sp, #16]
   3c3ec:	mov	x20, x0
   3c3f0:	add	x19, x29, #0x28
   3c3f4:	bl	64b0 <__asan_internal_strlen@plt>
   3c3f8:	mov	x2, x0
   3c3fc:	mov	x3, x19
   3c400:	mov	x0, x20
   3c404:	mov	w1, #0x4000                	// #16384
   3c408:	bl	6390 <__asan_cplus_demangle_init_info@plt>
   3c40c:	ldr	w4, [x29, #84]
   3c410:	mov	w3, #0x18                  	// #24
   3c414:	ldrsw	x2, [x29, #100]
   3c418:	mov	x20, sp
   3c41c:	mov	x0, x19
   3c420:	mov	w1, #0x1                   	// #1
   3c424:	smull	x4, w4, w3
   3c428:	lsl	x2, x2, #3
   3c42c:	add	x2, x2, #0xf
   3c430:	add	x4, x4, #0xf
   3c434:	and	x2, x2, #0xfffffffffffffff0
   3c438:	and	x4, x4, #0xfffffffffffffff0
   3c43c:	sub	sp, sp, x4
   3c440:	mov	x3, sp
   3c444:	sub	sp, sp, x2
   3c448:	mov	x2, sp
   3c44c:	str	x3, [x29, #72]
   3c450:	str	x2, [x29, #88]
   3c454:	bl	6970 <__asan_cplus_demangle_mangled_name@plt>
   3c458:	cbz	x0, 3c4cc <__asan_is_gnu_v3_mangled_dtor@@Base+0xec>
   3c45c:	ldr	w1, [x0]
   3c460:	cmp	w1, #0x7
   3c464:	b.eq	3c47c <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.none
   3c468:	b.hi	3c4a4 <__asan_is_gnu_v3_mangled_dtor@@Base+0xc4>  // b.pmore
   3c46c:	sub	w2, w1, #0x3
   3c470:	cmp	w1, #0x2
   3c474:	b.hi	3c494 <__asan_is_gnu_v3_mangled_dtor@@Base+0xb4>  // b.pmore
   3c478:	cbnz	w1, 3c4c4 <__asan_is_gnu_v3_mangled_dtor@@Base+0xe4>
   3c47c:	mov	sp, x20
   3c480:	mov	w0, #0x0                   	// #0
   3c484:	mov	sp, x29
   3c488:	ldp	x19, x20, [sp, #16]
   3c48c:	ldp	x29, x30, [sp], #128
   3c490:	ret
   3c494:	cmp	w2, #0x1
   3c498:	b.hi	3c47c <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.pmore
   3c49c:	ldr	x0, [x0, #8]
   3c4a0:	b	3c458 <__asan_is_gnu_v3_mangled_dtor@@Base+0x78>
   3c4a4:	cmp	w1, #0x8
   3c4a8:	b.ne	3c47c <__asan_is_gnu_v3_mangled_dtor@@Base+0x9c>  // b.any
   3c4ac:	ldr	w0, [x0, #8]
   3c4b0:	mov	sp, x20
   3c4b4:	mov	sp, x29
   3c4b8:	ldp	x19, x20, [sp, #16]
   3c4bc:	ldp	x29, x30, [sp], #128
   3c4c0:	ret
   3c4c4:	ldr	x0, [x0, #16]
   3c4c8:	b	3c458 <__asan_is_gnu_v3_mangled_dtor@@Base+0x78>
   3c4cc:	mov	w0, #0x0                   	// #0
   3c4d0:	mov	sp, x20
   3c4d4:	b	3c484 <__asan_is_gnu_v3_mangled_dtor@@Base+0xa4>

000000000003c4d8 <__asan_internal_memcpy@@Base>:
   3c4d8:	b	15630 <__sanitizer_set_report_fd@@Base+0x1d60>
   3c4dc:	nop

000000000003c4e0 <__asan_internal_memset@@Base>:
   3c4e0:	b	15af8 <__sanitizer_set_report_fd@@Base+0x2228>
   3c4e4:	nop

000000000003c4e8 <__asan_internal_memcmp@@Base>:
   3c4e8:	b	155f0 <__sanitizer_set_report_fd@@Base+0x1d20>
   3c4ec:	nop

000000000003c4f0 <__asan_internal_strcmp@@Base>:
   3c4f0:	b	15dd0 <__sanitizer_set_report_fd@@Base+0x2500>
   3c4f4:	nop

000000000003c4f8 <__asan_internal_strncmp@@Base>:
   3c4f8:	b	15e18 <__sanitizer_set_report_fd@@Base+0x2548>
   3c4fc:	nop

000000000003c500 <__asan_internal_strlen@@Base>:
   3c500:	b	15f00 <__sanitizer_set_report_fd@@Base+0x2630>
   3c504:	nop

000000000003c508 <__asan_internal_strnlen@@Base>:
   3c508:	b	16dc8 <__sanitizer_set_report_fd@@Base+0x34f8>
   3c50c:	nop
   3c510:	stp	x29, x30, [sp, #-16]!
   3c514:	mov	x0, x4
   3c518:	mov	w2, #0xffffffff            	// #-1
   3c51c:	mov	x29, sp
   3c520:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3c524:	add	x1, x1, #0x998
   3c528:	blr	x3
   3c52c:	mov	w0, #0x0                   	// #0
   3c530:	ldp	x29, x30, [sp], #16
   3c534:	ret
   3c538:	mov	x0, x4
   3c53c:	mov	x16, x3
   3c540:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3c544:	mov	w2, #0xffffffff            	// #-1
   3c548:	add	x1, x1, #0x9b8
   3c54c:	br	x16
   3c550:	ldr	x2, [x0, #8]
   3c554:	mov	w3, #0xffffffff            	// #-1
   3c558:	ldr	x1, [x1, #8]
   3c55c:	cmp	x2, x1
   3c560:	cset	w0, hi  // hi = pmore
   3c564:	csel	w0, w0, w3, cs  // cs = hs, nlast
   3c568:	ret
   3c56c:	nop
   3c570:	stp	x29, x30, [sp, #-48]!
   3c574:	mov	x12, x2
   3c578:	mov	x17, #0x15af                	// #5551
   3c57c:	mov	x29, sp
   3c580:	cmp	x2, x17
   3c584:	ldrb	w18, [x0]
   3c588:	ldrb	w2, [x0, #1]
   3c58c:	mov	x11, x1
   3c590:	ldrb	w1, [x0, #2]
   3c594:	ldrb	w0, [x0, #3]
   3c598:	orr	w18, w2, w18, lsl #8
   3c59c:	orr	w18, w1, w18, lsl #8
   3c5a0:	orr	w18, w0, w18, lsl #8
   3c5a4:	b.ls	3c820 <__asan_internal_strnlen@@Base+0x318>  // b.plast
   3c5a8:	mov	x16, #0x15b0                	// #5552
   3c5ac:	mov	w14, #0x8071                	// #32881
   3c5b0:	add	x10, x11, x16
   3c5b4:	mov	w9, #0x0                   	// #0
   3c5b8:	mov	w5, #0x1                   	// #1
   3c5bc:	mov	x15, #0xffffffffffffea50    	// #-5552
   3c5c0:	movk	w14, #0x8007, lsl #16
   3c5c4:	mov	w13, #0xfff1                	// #65521
   3c5c8:	stp	x19, x20, [sp, #16]
   3c5cc:	stp	x21, x22, [sp, #32]
   3c5d0:	add	x2, x10, x15
   3c5d4:	nop
   3c5d8:	ldrb	w3, [x2]
   3c5dc:	add	x2, x2, #0x10
   3c5e0:	ldurb	w4, [x2, #-15]
   3c5e4:	mov	x11, x10
   3c5e8:	ldurb	w0, [x2, #-14]
   3c5ec:	add	w3, w3, w5
   3c5f0:	ldurb	w1, [x2, #-13]
   3c5f4:	add	w4, w4, w3
   3c5f8:	add	w0, w0, w4
   3c5fc:	ldurb	w8, [x2, #-12]
   3c600:	ldurb	w22, [x2, #-11]
   3c604:	add	w1, w1, w0
   3c608:	ldurb	w7, [x2, #-10]
   3c60c:	add	w8, w8, w1
   3c610:	ldurb	w21, [x2, #-9]
   3c614:	add	w22, w22, w8
   3c618:	ldurb	w6, [x2, #-8]
   3c61c:	add	w7, w7, w22
   3c620:	ldurb	w19, [x2, #-7]
   3c624:	add	w21, w21, w7
   3c628:	ldurb	w5, [x2, #-6]
   3c62c:	add	w6, w6, w21
   3c630:	ldurb	w30, [x2, #-5]
   3c634:	add	w19, w19, w6
   3c638:	ldurb	w20, [x2, #-3]
   3c63c:	add	w3, w3, w4
   3c640:	add	w1, w0, w1
   3c644:	ldurb	w4, [x2, #-4]
   3c648:	add	w5, w5, w19
   3c64c:	add	w1, w1, w3
   3c650:	ldurb	w3, [x2, #-2]
   3c654:	add	w30, w30, w5
   3c658:	add	w8, w8, w22
   3c65c:	add	w0, w7, w21
   3c660:	add	w4, w4, w30
   3c664:	add	w1, w1, w8
   3c668:	add	w1, w1, w0
   3c66c:	add	w7, w20, w4
   3c670:	add	w0, w6, w19
   3c674:	ldurb	w6, [x2, #-1]
   3c678:	add	w5, w5, w30
   3c67c:	add	w3, w3, w7
   3c680:	add	w0, w1, w0
   3c684:	add	w4, w4, w7
   3c688:	add	w0, w0, w5
   3c68c:	add	w5, w6, w3
   3c690:	add	w0, w0, w4
   3c694:	add	w3, w3, w5
   3c698:	add	w0, w0, w3
   3c69c:	cmp	x10, x2
   3c6a0:	add	w9, w9, w0
   3c6a4:	b.ne	3c5d8 <__asan_internal_strnlen@@Base+0xd0>  // b.any
   3c6a8:	umull	x1, w5, w14
   3c6ac:	add	x12, x12, x15
   3c6b0:	umull	x0, w9, w14
   3c6b4:	cmp	x12, x17
   3c6b8:	add	x10, x10, x16
   3c6bc:	lsr	x1, x1, #47
   3c6c0:	lsr	x0, x0, #47
   3c6c4:	msub	w5, w1, w13, w5
   3c6c8:	msub	w9, w0, w13, w9
   3c6cc:	b.hi	3c5d0 <__asan_internal_strnlen@@Base+0xc8>  // b.pmore
   3c6d0:	ldp	x19, x20, [sp, #16]
   3c6d4:	ldp	x21, x22, [sp, #32]
   3c6d8:	cmp	x12, #0xf
   3c6dc:	b.ls	3c7c0 <__asan_internal_strnlen@@Base+0x2b8>  // b.plast
   3c6e0:	sub	x7, x12, #0x10
   3c6e4:	and	x7, x7, #0xfffffffffffffff0
   3c6e8:	add	x7, x7, #0x10
   3c6ec:	add	x7, x11, x7
   3c6f0:	ldrb	w1, [x11]
   3c6f4:	add	x11, x11, #0x10
   3c6f8:	ldurb	w8, [x11, #-15]
   3c6fc:	ldurb	w0, [x11, #-14]
   3c700:	add	w1, w1, w5
   3c704:	ldurb	w2, [x11, #-13]
   3c708:	add	w8, w8, w1
   3c70c:	ldurb	w6, [x11, #-12]
   3c710:	add	w0, w0, w8
   3c714:	ldurb	w15, [x11, #-11]
   3c718:	add	w2, w2, w0
   3c71c:	ldurb	w5, [x11, #-10]
   3c720:	add	w6, w6, w2
   3c724:	ldurb	w14, [x11, #-9]
   3c728:	add	w15, w15, w6
   3c72c:	ldurb	w3, [x11, #-8]
   3c730:	add	w5, w5, w15
   3c734:	ldurb	w13, [x11, #-7]
   3c738:	add	w14, w14, w5
   3c73c:	ldurb	w4, [x11, #-6]
   3c740:	add	w3, w3, w14
   3c744:	ldurb	w10, [x11, #-5]
   3c748:	add	w1, w1, w8
   3c74c:	add	w13, w13, w3
   3c750:	ldurb	w8, [x11, #-3]
   3c754:	add	w0, w0, w2
   3c758:	ldurb	w2, [x11, #-4]
   3c75c:	add	w4, w4, w13
   3c760:	add	w0, w0, w1
   3c764:	ldurb	w1, [x11, #-2]
   3c768:	add	w6, w6, w15
   3c76c:	add	w10, w10, w4
   3c770:	add	w0, w0, w6
   3c774:	add	w5, w5, w14
   3c778:	add	w2, w2, w10
   3c77c:	add	w0, w0, w5
   3c780:	add	w6, w8, w2
   3c784:	ldurb	w5, [x11, #-1]
   3c788:	add	w3, w3, w13
   3c78c:	add	w1, w1, w6
   3c790:	add	w0, w0, w3
   3c794:	add	w4, w4, w10
   3c798:	add	w2, w2, w6
   3c79c:	add	w0, w0, w4
   3c7a0:	add	w5, w5, w1
   3c7a4:	add	w0, w0, w2
   3c7a8:	add	w1, w1, w5
   3c7ac:	add	w0, w0, w1
   3c7b0:	cmp	x11, x7
   3c7b4:	add	w9, w9, w0
   3c7b8:	b.ne	3c6f0 <__asan_internal_strnlen@@Base+0x1e8>  // b.any
   3c7bc:	and	x12, x12, #0xf
   3c7c0:	cbz	x12, 3c7e8 <__asan_internal_strnlen@@Base+0x2e0>
   3c7c4:	mov	w2, #0x1                   	// #1
   3c7c8:	sub	w2, w2, w11
   3c7cc:	ldrb	w0, [x11]
   3c7d0:	add	w1, w2, w11
   3c7d4:	cmp	x1, x12
   3c7d8:	add	x11, x11, #0x1
   3c7dc:	add	w5, w5, w0
   3c7e0:	add	w9, w9, w5
   3c7e4:	b.cc	3c7cc <__asan_internal_strnlen@@Base+0x2c4>  // b.lo, b.ul, b.last
   3c7e8:	mov	w0, #0x8071                	// #32881
   3c7ec:	mov	w2, #0xfff1                	// #65521
   3c7f0:	movk	w0, #0x8007, lsl #16
   3c7f4:	ldp	x29, x30, [sp], #48
   3c7f8:	umull	x1, w9, w0
   3c7fc:	umull	x3, w5, w0
   3c800:	lsr	x0, x1, #47
   3c804:	lsr	x3, x3, #47
   3c808:	msub	w9, w0, w2, w9
   3c80c:	msub	w3, w3, w2, w5
   3c810:	add	w3, w3, w9, lsl #16
   3c814:	cmp	w3, w18
   3c818:	cset	w0, eq  // eq = none
   3c81c:	ret
   3c820:	mov	w9, #0x0                   	// #0
   3c824:	mov	w5, #0x1                   	// #1
   3c828:	b	3c6d8 <__asan_internal_strnlen@@Base+0x1d0>
   3c82c:	nop
   3c830:	stp	x29, x30, [sp, #-176]!
   3c834:	mov	x29, sp
   3c838:	stp	x19, x20, [sp, #16]
   3c83c:	add	x19, sp, #0x50
   3c840:	mov	x20, x0
   3c844:	mov	x0, x19
   3c848:	stp	x21, x22, [sp, #32]
   3c84c:	mov	x21, x1
   3c850:	mov	x22, x3
   3c854:	mov	w1, #0x0                   	// #0
   3c858:	stp	x23, x24, [sp, #48]
   3c85c:	add	x23, x2, #0x1, lsl #12
   3c860:	mov	x2, #0x20                  	// #32
   3c864:	bl	6530 <__asan_internal_memset@plt>
   3c868:	add	x7, sp, #0x90
   3c86c:	add	x2, sp, #0x70
   3c870:	mov	x5, #0x0                   	// #0
   3c874:	mov	w1, #0x1                   	// #1
   3c878:	ldrb	w4, [x20, x5]
   3c87c:	and	w6, w5, #0xffff
   3c880:	cmp	w4, #0xf
   3c884:	b.hi	3c9a0 <__asan_internal_strnlen@@Base+0x498>  // b.pmore
   3c888:	sbfiz	x4, x4, #1, #32
   3c88c:	ldrh	w0, [x19, x4]
   3c890:	cbnz	w0, 3c9b8 <__asan_internal_strnlen@@Base+0x4b0>
   3c894:	strh	w6, [x2, x4]
   3c898:	add	x5, x5, #0x1
   3c89c:	strh	w6, [x7, x4]
   3c8a0:	cmp	x5, x21
   3c8a4:	strh	w1, [x19, x4]
   3c8a8:	b.ne	3c878 <__asan_internal_strnlen@@Base+0x370>  // b.any
   3c8ac:	mov	w1, #0x0                   	// #0
   3c8b0:	mov	x0, x22
   3c8b4:	mov	x2, #0x800                 	// #2048
   3c8b8:	bl	6530 <__asan_internal_memset@plt>
   3c8bc:	add	x11, sp, #0x70
   3c8c0:	mov	x4, #0x0                   	// #0
   3c8c4:	mov	w1, #0x0                   	// #0
   3c8c8:	mov	w9, #0x1                   	// #1
   3c8cc:	lsl	x2, x4, #1
   3c8d0:	add	x0, x19, x2
   3c8d4:	ldrh	w0, [x0, #2]
   3c8d8:	cbnz	w0, 3c9e8 <__asan_internal_strnlen@@Base+0x4e0>
   3c8dc:	add	x4, x4, #0x1
   3c8e0:	cmp	x4, #0x8
   3c8e4:	b.ne	3c8cc <__asan_internal_strnlen@@Base+0x3c4>  // b.any
   3c8e8:	mov	x7, x19
   3c8ec:	add	x10, sp, #0x40
   3c8f0:	mov	x2, #0x9                   	// #9
   3c8f4:	mov	w8, #0x1                   	// #1
   3c8f8:	b	3c90c <__asan_internal_strnlen@@Base+0x404>
   3c8fc:	add	x2, x2, #0x1
   3c900:	add	x7, x7, #0x2
   3c904:	cmp	x2, #0x10
   3c908:	b.eq	3caa8 <__asan_internal_strnlen@@Base+0x5a0>  // b.none
   3c90c:	ldrh	w6, [x7, #18]
   3c910:	cbz	w6, 3c8fc <__asan_internal_strnlen@@Base+0x3f4>
   3c914:	add	x0, x10, x2, lsl #1
   3c918:	sub	w9, w2, #0x1
   3c91c:	mov	w5, #0x0                   	// #0
   3c920:	mov	x3, #0x0                   	// #0
   3c924:	sturh	w1, [x0, #-18]
   3c928:	b	3c93c <__asan_internal_strnlen@@Base+0x434>
   3c92c:	add	w3, w5, #0x1
   3c930:	mov	x5, x3
   3c934:	cmp	x2, w3, uxtw
   3c938:	b.ls	3c998 <__asan_internal_strnlen@@Base+0x490>  // b.plast
   3c93c:	lsr	w0, w6, w5
   3c940:	tbz	w0, #0, 3c92c <__asan_internal_strnlen@@Base+0x424>
   3c944:	sub	w0, w9, w5
   3c948:	subs	x3, x2, x3
   3c94c:	lsl	w0, w8, w0
   3c950:	b.eq	3c980 <__asan_internal_strnlen@@Base+0x478>  // b.none
   3c954:	tst	w1, w0
   3c958:	b.eq	3ca4c <__asan_internal_strnlen@@Base+0x544>  // b.none
   3c95c:	mov	w4, #0x0                   	// #0
   3c960:	b	3c96c <__asan_internal_strnlen@@Base+0x464>
   3c964:	tst	w1, w0
   3c968:	b.eq	3ca4c <__asan_internal_strnlen@@Base+0x544>  // b.none
   3c96c:	add	w4, w4, #0x1
   3c970:	bic	w1, w1, w0
   3c974:	lsr	w0, w0, #1
   3c978:	cmp	x3, w4, uxtw
   3c97c:	b.hi	3c964 <__asan_internal_strnlen@@Base+0x45c>  // b.pmore
   3c980:	lsl	w0, w8, w5
   3c984:	bic	w6, w6, w0
   3c988:	add	w3, w5, #0x1
   3c98c:	mov	x5, x3
   3c990:	cmp	x2, w3, uxtw
   3c994:	b.hi	3c93c <__asan_internal_strnlen@@Base+0x434>  // b.pmore
   3c998:	cbz	w6, 3c8fc <__asan_internal_strnlen@@Base+0x3f4>
   3c99c:	nop
   3c9a0:	mov	w0, #0x0                   	// #0
   3c9a4:	ldp	x19, x20, [sp, #16]
   3c9a8:	ldp	x21, x22, [sp, #32]
   3c9ac:	ldp	x23, x24, [sp, #48]
   3c9b0:	ldp	x29, x30, [sp], #176
   3c9b4:	ret
   3c9b8:	ldrh	w0, [x7, x4]
   3c9bc:	strh	w6, [x23, x0, lsl #1]
   3c9c0:	ldrb	w4, [x20, x5]
   3c9c4:	add	x5, x5, #0x1
   3c9c8:	cmp	x21, x5
   3c9cc:	lsl	x4, x4, #1
   3c9d0:	ldrh	w0, [x19, x4]
   3c9d4:	strh	w6, [x7, x4]
   3c9d8:	add	w0, w0, #0x1
   3c9dc:	strh	w0, [x19, x4]
   3c9e0:	b.ne	3c878 <__asan_internal_strnlen@@Base+0x370>  // b.any
   3c9e4:	b	3c8ac <__asan_internal_strnlen@@Base+0x3a4>
   3c9e8:	add	w3, w4, #0x1
   3c9ec:	lsl	w3, w9, w3
   3c9f0:	cmp	w3, w0
   3c9f4:	b.cc	3c9a0 <__asan_internal_strnlen@@Base+0x498>  // b.lo, b.ul, b.last
   3c9f8:	add	x2, x2, x11
   3c9fc:	and	x5, x0, #0xffff
   3ca00:	ldrh	w7, [x2, #2]
   3ca04:	tst	w7, #0xfe00
   3ca08:	b.ne	3c9a0 <__asan_internal_strnlen@@Base+0x498>  // b.any
   3ca0c:	sxtw	x3, w3
   3ca10:	ubfiz	w12, w4, #9, #7
   3ca14:	lsl	w8, w9, w4
   3ca18:	mov	x10, #0x0                   	// #0
   3ca1c:	cmp	w1, #0xff
   3ca20:	orr	w6, w12, w7
   3ca24:	mov	w0, w1
   3ca28:	b.ls	3ca40 <__asan_internal_strnlen@@Base+0x538>  // b.plast
   3ca2c:	b	3ca5c <__asan_internal_strnlen@@Base+0x554>
   3ca30:	strh	w6, [x22, x0, lsl #1]
   3ca34:	add	x0, x0, x3
   3ca38:	cmp	x0, #0xff
   3ca3c:	b.hi	3ca5c <__asan_internal_strnlen@@Base+0x554>  // b.pmore
   3ca40:	ldrh	w2, [x22, x0, lsl #1]
   3ca44:	cbz	w2, 3ca30 <__asan_internal_strnlen@@Base+0x528>
   3ca48:	b	3c9a0 <__asan_internal_strnlen@@Base+0x498>
   3ca4c:	add	w1, w1, w0
   3ca50:	lsl	w0, w8, w5
   3ca54:	bic	w6, w6, w0
   3ca58:	b	3c988 <__asan_internal_strnlen@@Base+0x480>
   3ca5c:	add	x10, x10, #0x1
   3ca60:	cmp	x10, x5
   3ca64:	b.cs	3ca70 <__asan_internal_strnlen@@Base+0x568>  // b.hs, b.nlast
   3ca68:	ubfiz	x7, x7, #1, #16
   3ca6c:	ldrh	w7, [x23, x7]
   3ca70:	mov	w0, w8
   3ca74:	tst	w8, w1
   3ca78:	b.eq	3cadc <__asan_internal_strnlen@@Base+0x5d4>  // b.none
   3ca7c:	nop
   3ca80:	lsr	w0, w0, #1
   3ca84:	tst	w0, w1
   3ca88:	b.ne	3ca80 <__asan_internal_strnlen@@Base+0x578>  // b.any
   3ca8c:	cbnz	w0, 3cadc <__asan_internal_strnlen@@Base+0x5d4>
   3ca90:	mov	w1, #0x0                   	// #0
   3ca94:	cmp	x10, x5
   3ca98:	b.eq	3c8dc <__asan_internal_strnlen@@Base+0x3d4>  // b.none
   3ca9c:	tst	w7, #0xfe00
   3caa0:	b.eq	3ca1c <__asan_internal_strnlen@@Base+0x514>  // b.none
   3caa4:	b	3c9a0 <__asan_internal_strnlen@@Base+0x498>
   3caa8:	add	x18, sp, #0x70
   3caac:	add	x17, sp, #0x40
   3cab0:	mov	x5, #0x7                   	// #7
   3cab4:	mov	x10, #0x0                   	// #0
   3cab8:	mov	w8, #0x1                   	// #1
   3cabc:	lsl	x0, x5, #1
   3cac0:	add	x1, x19, x0
   3cac4:	ldrh	w7, [x1, #16]
   3cac8:	cbnz	w7, 3caec <__asan_internal_strnlen@@Base+0x5e4>
   3cacc:	subs	x5, x5, #0x1
   3cad0:	b.ne	3cabc <__asan_internal_strnlen@@Base+0x5b4>  // b.any
   3cad4:	mov	w0, #0x1                   	// #1
   3cad8:	b	3c9a4 <__asan_internal_strnlen@@Base+0x49c>
   3cadc:	sub	w2, w0, #0x1
   3cae0:	and	w1, w2, w1
   3cae4:	add	w1, w0, w1
   3cae8:	b	3ca94 <__asan_internal_strnlen@@Base+0x58c>
   3caec:	add	x1, x0, x18
   3caf0:	add	x0, x0, x17
   3caf4:	ubfiz	w12, w5, #9, #7
   3caf8:	lsl	w4, w8, w5
   3cafc:	add	w11, w12, #0x1, lsl #12
   3cb00:	add	w9, w5, #0x7
   3cb04:	ldrh	w14, [x1, #16]
   3cb08:	sxtw	x21, w4
   3cb0c:	ldurh	w6, [x0, #-2]
   3cb10:	and	x7, x7, #0xffff
   3cb14:	and	w11, w11, #0xffff
   3cb18:	mov	w4, w4
   3cb1c:	mov	w20, w5
   3cb20:	lsl	w9, w8, w9
   3cb24:	mov	x16, #0x0                   	// #0
   3cb28:	mov	x13, #0x0                   	// #0
   3cb2c:	mov	x24, #0x100                 	// #256
   3cb30:	mov	x15, #0x0                   	// #0
   3cb34:	mov	w2, w16
   3cb38:	cmp	x24, w6, uxtb
   3cb3c:	and	x1, x6, #0xff
   3cb40:	b.eq	3cb74 <__asan_internal_strnlen@@Base+0x66c>  // b.none
   3cb44:	lsl	x2, x1, #1
   3cb48:	ldrh	w0, [x22, x2]
   3cb4c:	cbnz	w0, 3cbf0 <__asan_internal_strnlen@@Base+0x6e8>
   3cb50:	tst	x10, #0xfffffffffffffe00
   3cb54:	b.ne	3c9a0 <__asan_internal_strnlen@@Base+0x498>  // b.any
   3cb58:	add	w0, w11, w10
   3cb5c:	mov	x13, x10
   3cb60:	mov	x24, x1
   3cb64:	add	x10, x10, x21
   3cb68:	mov	x16, x5
   3cb6c:	strh	w0, [x22, x2]
   3cb70:	mov	w2, w20
   3cb74:	lsr	w0, w6, #8
   3cb78:	add	x1, x22, x13, lsl #1
   3cb7c:	lsl	w2, w8, w2
   3cb80:	add	x1, x1, #0x200
   3cb84:	cmp	x2, x0
   3cb88:	orr	w30, w12, w14
   3cb8c:	b.hi	3cba4 <__asan_internal_strnlen@@Base+0x69c>  // b.pmore
   3cb90:	b	3cbb0 <__asan_internal_strnlen@@Base+0x6a8>
   3cb94:	strh	w30, [x1, x0, lsl #1]
   3cb98:	add	x0, x0, x4
   3cb9c:	cmp	x2, x0
   3cba0:	b.ls	3cbb0 <__asan_internal_strnlen@@Base+0x6a8>  // b.plast
   3cba4:	ldrh	w3, [x1, x0, lsl #1]
   3cba8:	cbz	w3, 3cb94 <__asan_internal_strnlen@@Base+0x68c>
   3cbac:	b	3c9a0 <__asan_internal_strnlen@@Base+0x498>
   3cbb0:	add	x15, x15, #0x1
   3cbb4:	cmp	x7, x15
   3cbb8:	b.ls	3cbc4 <__asan_internal_strnlen@@Base+0x6bc>  // b.plast
   3cbbc:	ubfiz	x14, x14, #1, #16
   3cbc0:	ldrh	w14, [x23, x14]
   3cbc4:	mov	w0, w9
   3cbc8:	tst	w9, w6
   3cbcc:	b.eq	3cc10 <__asan_internal_strnlen@@Base+0x708>  // b.none
   3cbd0:	lsr	w0, w0, #1
   3cbd4:	tst	w0, w6
   3cbd8:	b.ne	3cbd0 <__asan_internal_strnlen@@Base+0x6c8>  // b.any
   3cbdc:	cbnz	w0, 3cc10 <__asan_internal_strnlen@@Base+0x708>
   3cbe0:	mov	w6, #0x0                   	// #0
   3cbe4:	cmp	x7, x15
   3cbe8:	b.ne	3cb34 <__asan_internal_strnlen@@Base+0x62c>  // b.any
   3cbec:	b	3cacc <__asan_internal_strnlen@@Base+0x5c4>
   3cbf0:	tbz	w0, #12, 3c9a0 <__asan_internal_strnlen@@Base+0x498>
   3cbf4:	ubfx	x16, x0, #9, #3
   3cbf8:	and	x13, x0, #0x1ff
   3cbfc:	cmp	x16, x5
   3cc00:	mov	x2, x16
   3cc04:	b.cc	3c9a0 <__asan_internal_strnlen@@Base+0x498>  // b.lo, b.ul, b.last
   3cc08:	mov	x24, x1
   3cc0c:	b	3cb74 <__asan_internal_strnlen@@Base+0x66c>
   3cc10:	sub	w1, w0, #0x1
   3cc14:	and	w6, w1, w6
   3cc18:	add	w6, w0, w6
   3cc1c:	b	3cbe4 <__asan_internal_strnlen@@Base+0x6dc>
   3cc20:	mov	x10, x0
   3cc24:	mov	x11, x2
   3cc28:	mov	x0, x4
   3cc2c:	ldr	w2, [x10, #8]
   3cc30:	cbnz	w2, 3ccb8 <__asan_internal_strnlen@@Base+0x7b0>
   3cc34:	ldr	x2, [x10, #48]
   3cc38:	cbz	x2, 3cc9c <__asan_internal_strnlen@@Base+0x794>
   3cc3c:	nop
   3cc40:	ldp	x9, x8, [x2, #8]
   3cc44:	mov	x7, #0x0                   	// #0
   3cc48:	add	x3, x8, x7
   3cc4c:	cmp	x8, x7
   3cc50:	and	x5, x3, #0xfffffffffffffffe
   3cc54:	b.ls	3cc94 <__asan_internal_strnlen@@Base+0x78c>  // b.plast
   3cc58:	lsr	x3, x3, #1
   3cc5c:	add	x5, x5, x3
   3cc60:	add	x5, x9, x5, lsl #3
   3cc64:	ldr	x6, [x5, #8]
   3cc68:	cmp	x6, x1
   3cc6c:	b.hi	3ccb0 <__asan_internal_strnlen@@Base+0x7a8>  // b.pmore
   3cc70:	ldr	x4, [x5, #16]
   3cc74:	add	x7, x3, #0x1
   3cc78:	add	x3, x6, x4
   3cc7c:	cmp	x3, x1
   3cc80:	b.ls	3cc48 <__asan_internal_strnlen@@Base+0x740>  // b.plast
   3cc84:	ldr	x2, [x5]
   3cc88:	mov	x3, x6
   3cc8c:	mov	x16, x11
   3cc90:	br	x16
   3cc94:	ldr	x2, [x2]
   3cc98:	cbnz	x2, 3cc40 <__asan_internal_strnlen@@Base+0x738>
   3cc9c:	mov	x16, x11
   3cca0:	mov	x4, #0x0                   	// #0
   3cca4:	mov	x3, #0x0                   	// #0
   3cca8:	mov	x2, #0x0                   	// #0
   3ccac:	br	x16
   3ccb0:	mov	x8, x3
   3ccb4:	b	3cc48 <__asan_internal_strnlen@@Base+0x740>
   3ccb8:	add	x10, x10, #0x30
   3ccbc:	nop
   3ccc0:	ldar	x10, [x10]
   3ccc4:	cbz	x10, 3cc9c <__asan_internal_strnlen@@Base+0x794>
   3ccc8:	ldp	x9, x8, [x10, #8]
   3cccc:	mov	x7, #0x0                   	// #0
   3ccd0:	add	x3, x8, x7
   3ccd4:	cmp	x8, x7
   3ccd8:	and	x5, x3, #0xfffffffffffffffe
   3ccdc:	b.ls	3ccc0 <__asan_internal_strnlen@@Base+0x7b8>  // b.plast
   3cce0:	lsr	x3, x3, #1
   3cce4:	add	x5, x5, x3
   3cce8:	add	x5, x9, x5, lsl #3
   3ccec:	ldr	x6, [x5, #8]
   3ccf0:	cmp	x6, x1
   3ccf4:	b.hi	3cd1c <__asan_internal_strnlen@@Base+0x814>  // b.pmore
   3ccf8:	ldr	x4, [x5, #16]
   3ccfc:	add	x7, x3, #0x1
   3cd00:	add	x3, x6, x4
   3cd04:	cmp	x3, x1
   3cd08:	b.ls	3ccd0 <__asan_internal_strnlen@@Base+0x7c8>  // b.plast
   3cd0c:	ldr	x2, [x5]
   3cd10:	mov	x3, x6
   3cd14:	mov	x16, x11
   3cd18:	br	x16
   3cd1c:	mov	x8, x3
   3cd20:	b	3ccd0 <__asan_internal_strnlen@@Base+0x7c8>
   3cd24:	nop
   3cd28:	stp	x29, x30, [sp, #-144]!
   3cd2c:	mov	x29, sp
   3cd30:	stp	x27, x28, [sp, #80]
   3cd34:	add	x28, x2, x4
   3cd38:	mov	x27, x5
   3cd3c:	stp	x19, x20, [sp, #16]
   3cd40:	mov	x20, x6
   3cd44:	stp	x21, x22, [sp, #32]
   3cd48:	mov	x22, x2
   3cd4c:	mov	x21, x7
   3cd50:	stp	x23, x24, [sp, #48]
   3cd54:	mov	x23, x0
   3cd58:	mov	x0, x5
   3cd5c:	stp	x25, x26, [sp, #64]
   3cd60:	mov	x25, x4
   3cd64:	stp	x3, x1, [sp, #112]
   3cd68:	bl	64b0 <__asan_internal_strlen@plt>
   3cd6c:	mov	x24, x0
   3cd70:	add	x0, x28, x0
   3cd74:	mov	x3, x21
   3cd78:	add	x26, x0, #0x1
   3cd7c:	mov	x2, x20
   3cd80:	mov	x1, x26
   3cd84:	str	x0, [sp, #104]
   3cd88:	mov	x0, x23
   3cd8c:	bl	65b0 <__asan_backtrace_alloc@plt>
   3cd90:	cbz	x0, 3ce20 <__asan_internal_strnlen@@Base+0x918>
   3cd94:	ldr	x8, [sp, #120]
   3cd98:	mov	x19, x0
   3cd9c:	mov	x2, x22
   3cda0:	mov	x1, x8
   3cda4:	bl	64a0 <__asan_internal_memcpy@plt>
   3cda8:	ldr	x1, [sp, #112]
   3cdac:	mov	x2, x25
   3cdb0:	add	x0, x19, x22
   3cdb4:	bl	64a0 <__asan_internal_memcpy@plt>
   3cdb8:	mov	x2, x24
   3cdbc:	mov	x1, x27
   3cdc0:	add	x0, x19, x28
   3cdc4:	bl	64a0 <__asan_internal_memcpy@plt>
   3cdc8:	ldr	x0, [sp, #104]
   3cdcc:	add	x3, sp, #0x8c
   3cdd0:	mov	x2, x21
   3cdd4:	mov	x1, x20
   3cdd8:	strb	wzr, [x19, x0]
   3cddc:	mov	x0, x19
   3cde0:	bl	6a30 <__asan_backtrace_open@plt>
   3cde4:	mov	w22, w0
   3cde8:	mov	x4, x21
   3cdec:	mov	x3, x20
   3cdf0:	mov	x2, x26
   3cdf4:	mov	x1, x19
   3cdf8:	mov	x0, x23
   3cdfc:	bl	6890 <__asan_backtrace_free@plt>
   3ce00:	mov	w0, w22
   3ce04:	ldp	x19, x20, [sp, #16]
   3ce08:	ldp	x21, x22, [sp, #32]
   3ce0c:	ldp	x23, x24, [sp, #48]
   3ce10:	ldp	x25, x26, [sp, #64]
   3ce14:	ldp	x27, x28, [sp, #80]
   3ce18:	ldp	x29, x30, [sp], #144
   3ce1c:	ret
   3ce20:	mov	w22, #0xffffffff            	// #-1
   3ce24:	b	3ce00 <__asan_internal_strnlen@@Base+0x8f8>
   3ce28:	stp	x29, x30, [sp, #-256]!
   3ce2c:	mov	x29, sp
   3ce30:	stp	x19, x20, [sp, #16]
   3ce34:	mov	x20, x0
   3ce38:	mov	x19, x1
   3ce3c:	stp	x21, x22, [sp, #32]
   3ce40:	mov	x21, x3
   3ce44:	mov	x22, x4
   3ce48:	stp	x27, x28, [sp, #80]
   3ce4c:	add	x27, sp, #0x80
   3ce50:	stp	x23, x24, [sp, #48]
   3ce54:	mov	x24, #0x0                   	// #0
   3ce58:	stp	x25, x26, [sp, #64]
   3ce5c:	mov	x25, #0x0                   	// #0
   3ce60:	str	x2, [sp, #104]
   3ce64:	mov	x2, x27
   3ce68:	mov	x1, x19
   3ce6c:	mov	w0, #0x0                   	// #0
   3ce70:	bl	68a0 <__lxstat@plt>
   3ce74:	tbnz	w0, #31, 3cf00 <__asan_internal_strnlen@@Base+0x9f8>
   3ce78:	ldr	w0, [sp, #144]
   3ce7c:	and	w0, w0, #0xf000
   3ce80:	cmp	w0, #0xa, lsl #12
   3ce84:	b.ne	3cf00 <__asan_internal_strnlen@@Base+0x9f8>  // b.any
   3ce88:	mov	x28, #0x80                  	// #128
   3ce8c:	b	3ceb4 <__asan_internal_strnlen@@Base+0x9ac>
   3ce90:	cmp	x1, x0
   3ce94:	b.hi	3cf74 <__asan_internal_strnlen@@Base+0xa6c>  // b.pmore
   3ce98:	mov	x2, x28
   3ce9c:	mov	x1, x26
   3cea0:	mov	x4, x22
   3cea4:	mov	x3, x21
   3cea8:	mov	x0, x20
   3ceac:	lsl	x28, x28, #1
   3ceb0:	bl	6890 <__asan_backtrace_free@plt>
   3ceb4:	mov	x2, x21
   3ceb8:	mov	x3, x22
   3cebc:	mov	x1, x28
   3cec0:	mov	x0, x20
   3cec4:	bl	65b0 <__asan_backtrace_alloc@plt>
   3cec8:	mov	x26, x0
   3cecc:	mov	x2, x28
   3ced0:	mov	x0, x19
   3ced4:	cbz	x26, 3cf00 <__asan_internal_strnlen@@Base+0x9f8>
   3ced8:	mov	x1, x26
   3cedc:	bl	63b0 <readlink@plt>
   3cee0:	sub	x1, x28, #0x1
   3cee4:	tbz	x0, #63, 3ce90 <__asan_internal_strnlen@@Base+0x988>
   3cee8:	mov	x2, x28
   3ceec:	mov	x1, x26
   3cef0:	mov	x4, x22
   3cef4:	mov	x3, x21
   3cef8:	mov	x0, x20
   3cefc:	bl	6890 <__asan_backtrace_free@plt>
   3cf00:	mov	x0, x19
   3cf04:	mov	w1, #0x2f                  	// #47
   3cf08:	bl	6780 <strrchr@plt>
   3cf0c:	cbz	x0, 3d110 <__asan_internal_strnlen@@Base+0xc08>
   3cf10:	add	x0, x0, #0x1
   3cf14:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   3cf18:	sub	x27, x0, x19
   3cf1c:	ldr	x5, [sp, #104]
   3cf20:	add	x3, x3, #0xd20
   3cf24:	mov	x7, x22
   3cf28:	mov	x6, x21
   3cf2c:	mov	x2, x27
   3cf30:	mov	x1, x19
   3cf34:	mov	x0, x20
   3cf38:	mov	x4, #0x0                   	// #0
   3cf3c:	bl	3cd28 <__asan_internal_strnlen@@Base+0x820>
   3cf40:	mov	w23, w0
   3cf44:	tbnz	w0, #31, 3d054 <__asan_internal_strnlen@@Base+0xb4c>
   3cf48:	cmp	x24, #0x0
   3cf4c:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   3cf50:	b.ne	3d0d8 <__asan_internal_strnlen@@Base+0xbd0>  // b.any
   3cf54:	mov	w0, w23
   3cf58:	ldp	x19, x20, [sp, #16]
   3cf5c:	ldp	x21, x22, [sp, #32]
   3cf60:	ldp	x23, x24, [sp, #48]
   3cf64:	ldp	x25, x26, [sp, #64]
   3cf68:	ldp	x27, x28, [sp, #80]
   3cf6c:	ldp	x29, x30, [sp], #256
   3cf70:	ret
   3cf74:	strb	wzr, [x26, x0]
   3cf78:	ldrb	w0, [x26]
   3cf7c:	cmp	w0, #0x2f
   3cf80:	b.eq	3d028 <__asan_internal_strnlen@@Base+0xb20>  // b.none
   3cf84:	mov	x0, x19
   3cf88:	mov	w1, #0x2f                  	// #47
   3cf8c:	bl	6780 <strrchr@plt>
   3cf90:	cbz	x0, 3d028 <__asan_internal_strnlen@@Base+0xb20>
   3cf94:	add	x23, x0, #0x1
   3cf98:	mov	x0, x26
   3cf9c:	sub	x23, x23, x19
   3cfa0:	bl	64b0 <__asan_internal_strlen@plt>
   3cfa4:	add	x1, x23, #0x1
   3cfa8:	mov	x3, x22
   3cfac:	add	x0, x1, x0
   3cfb0:	mov	x2, x21
   3cfb4:	mov	x1, x0
   3cfb8:	str	x0, [sp, #112]
   3cfbc:	mov	x0, x20
   3cfc0:	bl	65b0 <__asan_backtrace_alloc@plt>
   3cfc4:	str	x0, [sp, #120]
   3cfc8:	cbz	x0, 3d120 <__asan_internal_strnlen@@Base+0xc18>
   3cfcc:	mov	x2, x23
   3cfd0:	mov	x1, x19
   3cfd4:	bl	64a0 <__asan_internal_memcpy@plt>
   3cfd8:	ldr	x3, [sp, #120]
   3cfdc:	mov	x0, x26
   3cfe0:	add	x23, x3, x23
   3cfe4:	bl	64b0 <__asan_internal_strlen@plt>
   3cfe8:	mov	x2, x0
   3cfec:	mov	x1, x26
   3cff0:	mov	x0, x23
   3cff4:	bl	64a0 <__asan_internal_memcpy@plt>
   3cff8:	mov	x0, x26
   3cffc:	bl	64b0 <__asan_internal_strlen@plt>
   3d000:	mov	x7, x0
   3d004:	mov	x2, x28
   3d008:	mov	x1, x26
   3d00c:	ldp	x28, x3, [sp, #112]
   3d010:	strb	wzr, [x23, x7]
   3d014:	mov	x4, x22
   3d018:	mov	x0, x20
   3d01c:	mov	x26, x3
   3d020:	mov	x3, x21
   3d024:	bl	6890 <__asan_backtrace_free@plt>
   3d028:	cbz	x24, 3d044 <__asan_internal_strnlen@@Base+0xb3c>
   3d02c:	mov	x2, x25
   3d030:	mov	x1, x24
   3d034:	mov	x4, x22
   3d038:	mov	x3, x21
   3d03c:	mov	x0, x20
   3d040:	bl	6890 <__asan_backtrace_free@plt>
   3d044:	mov	x24, x26
   3d048:	mov	x25, x28
   3d04c:	mov	x19, x26
   3d050:	b	3ce64 <__asan_internal_strnlen@@Base+0x95c>
   3d054:	adrp	x23, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3d058:	add	x23, x23, #0x9e0
   3d05c:	mov	x0, x23
   3d060:	bl	64b0 <__asan_internal_strlen@plt>
   3d064:	ldr	x5, [sp, #104]
   3d068:	mov	x4, x0
   3d06c:	mov	x3, x23
   3d070:	mov	x7, x22
   3d074:	mov	x6, x21
   3d078:	mov	x2, x27
   3d07c:	mov	x1, x19
   3d080:	mov	x0, x20
   3d084:	bl	3cd28 <__asan_internal_strnlen@@Base+0x820>
   3d088:	mov	w23, w0
   3d08c:	tbz	w0, #31, 3cf48 <__asan_internal_strnlen@@Base+0xa40>
   3d090:	adrp	x23, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3d094:	add	x23, x23, #0x9e8
   3d098:	mov	x0, x23
   3d09c:	bl	64b0 <__asan_internal_strlen@plt>
   3d0a0:	ldr	x5, [sp, #104]
   3d0a4:	mov	x2, x0
   3d0a8:	mov	x1, x23
   3d0ac:	mov	x7, x22
   3d0b0:	mov	x6, x21
   3d0b4:	mov	x4, x27
   3d0b8:	mov	x3, x19
   3d0bc:	mov	x0, x20
   3d0c0:	bl	3cd28 <__asan_internal_strnlen@@Base+0x820>
   3d0c4:	cmp	w0, #0x0
   3d0c8:	csinv	w23, w0, wzr, ge  // ge = tcont
   3d0cc:	cmp	x24, #0x0
   3d0d0:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   3d0d4:	b.eq	3cf54 <__asan_internal_strnlen@@Base+0xa4c>  // b.none
   3d0d8:	mov	x4, x22
   3d0dc:	mov	x3, x21
   3d0e0:	mov	x2, x25
   3d0e4:	mov	x1, x24
   3d0e8:	mov	x0, x20
   3d0ec:	bl	6890 <__asan_backtrace_free@plt>
   3d0f0:	mov	w0, w23
   3d0f4:	ldp	x19, x20, [sp, #16]
   3d0f8:	ldp	x21, x22, [sp, #32]
   3d0fc:	ldp	x23, x24, [sp, #48]
   3d100:	ldp	x25, x26, [sp, #64]
   3d104:	ldp	x27, x28, [sp, #80]
   3d108:	ldp	x29, x30, [sp], #256
   3d10c:	ret
   3d110:	adrp	x3, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   3d114:	mov	x27, #0x0                   	// #0
   3d118:	add	x19, x3, #0xd20
   3d11c:	b	3cf1c <__asan_internal_strnlen@@Base+0xa14>
   3d120:	mov	w23, #0xffffffff            	// #-1
   3d124:	b	3cf48 <__asan_internal_strnlen@@Base+0xa40>
   3d128:	stp	x29, x30, [sp, #-320]!
   3d12c:	cmp	x1, #0x4
   3d130:	mov	x29, sp
   3d134:	stp	x19, x20, [sp, #16]
   3d138:	mov	x19, x0
   3d13c:	stp	x25, x26, [sp, #64]
   3d140:	add	x26, x0, x1
   3d144:	add	x0, x3, x4
   3d148:	stp	x0, x3, [sp, #104]
   3d14c:	b.le	3deac <__asan_internal_strnlen@@Base+0x19a4>
   3d150:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3d154:	mov	x4, x26
   3d158:	add	x0, x0, #0xc10
   3d15c:	stp	x23, x24, [sp, #48]
   3d160:	mov	x23, x2
   3d164:	mov	x24, x3
   3d168:	str	x0, [sp, #120]
   3d16c:	add	x0, x0, #0x200
   3d170:	str	x0, [sp, #128]
   3d174:	ldrb	w0, [x19]
   3d178:	and	w1, w0, #0xf
   3d17c:	cmp	w1, #0x8
   3d180:	b.ne	3d628 <__asan_internal_strnlen@@Base+0x1120>  // b.any
   3d184:	cmp	w0, #0x7f
   3d188:	b.hi	3d628 <__asan_internal_strnlen@@Base+0x1120>  // b.pmore
   3d18c:	ldrb	w1, [x19, #1]
   3d190:	ldrh	w0, [x19]
   3d194:	rev16	w0, w0
   3d198:	tbnz	w1, #5, 3d628 <__asan_internal_strnlen@@Base+0x1120>
   3d19c:	mov	x1, #0x4211                	// #16913
   3d1a0:	and	x0, x0, #0xffff
   3d1a4:	movk	x1, #0x2108, lsl #16
   3d1a8:	movk	x1, #0x1084, lsl #32
   3d1ac:	movk	x1, #0x842, lsl #48
   3d1b0:	umulh	x2, x0, x1
   3d1b4:	sub	x1, x0, x2
   3d1b8:	add	x1, x2, x1, lsr #1
   3d1bc:	lsr	x1, x1, #4
   3d1c0:	lsl	x2, x1, #5
   3d1c4:	sub	x1, x2, x1
   3d1c8:	cmp	x0, x1
   3d1cc:	b.ne	3d628 <__asan_internal_strnlen@@Base+0x1120>  // b.any
   3d1d0:	stp	x21, x22, [sp, #32]
   3d1d4:	add	x19, x19, #0x2
   3d1d8:	ands	x22, x19, #0x3
   3d1dc:	stp	x27, x28, [sp, #80]
   3d1e0:	b.eq	3db64 <__asan_internal_strnlen@@Base+0x165c>  // b.none
   3d1e4:	mov	x22, #0x0                   	// #0
   3d1e8:	mov	w0, #0x0                   	// #0
   3d1ec:	nop
   3d1f0:	ldrb	w1, [x19], #1
   3d1f4:	lsl	x1, x1, x0
   3d1f8:	tst	x19, #0x3
   3d1fc:	orr	x22, x22, x1
   3d200:	add	w0, w0, #0x8
   3d204:	b.ne	3d1f0 <__asan_internal_strnlen@@Base+0xce8>  // b.any
   3d208:	mov	x27, x4
   3d20c:	add	x1, sp, #0x100
   3d210:	str	x1, [sp, #96]
   3d214:	cmp	w0, #0xe
   3d218:	b.hi	3d23c <__asan_internal_strnlen@@Base+0xd34>  // b.pmore
   3d21c:	sub	x1, x27, x19
   3d220:	cmp	x1, #0x3
   3d224:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3d228:	ldr	w1, [x19], #4
   3d22c:	lsl	x1, x1, x0
   3d230:	add	w0, w0, #0x20
   3d234:	prfm	pldl1strm, [x19]
   3d238:	orr	x22, x22, x1
   3d23c:	ubfx	w1, w22, #1, #2
   3d240:	sub	w20, w0, #0x3
   3d244:	cmp	w1, #0x3
   3d248:	b.eq	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   3d24c:	cbz	w1, 3d744 <__asan_internal_strnlen@@Base+0x123c>
   3d250:	cmp	w1, #0x1
   3d254:	lsr	x21, x22, #3
   3d258:	b.eq	3d85c <__asan_internal_strnlen@@Base+0x1354>  // b.none
   3d25c:	cmp	w20, #0xe
   3d260:	b.hi	3d284 <__asan_internal_strnlen@@Base+0xd7c>  // b.pmore
   3d264:	sub	x1, x27, x19
   3d268:	cmp	x1, #0x3
   3d26c:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d270:	ldr	w1, [x19], #4
   3d274:	lsl	x1, x1, x20
   3d278:	add	w20, w0, #0x1d
   3d27c:	prfm	pldl1strm, [x19]
   3d280:	orr	x21, x21, x1
   3d284:	and	w26, w21, #0x1f
   3d288:	ubfx	w0, w21, #5, #5
   3d28c:	add	w1, w26, #0x101
   3d290:	add	w0, w0, #0x1
   3d294:	sub	w3, w20, #0xe
   3d298:	str	w3, [sp, #136]
   3d29c:	str	w1, [sp, #144]
   3d2a0:	cmp	w1, #0x11e
   3d2a4:	str	w0, [sp, #152]
   3d2a8:	ubfx	w25, w21, #10, #4
   3d2ac:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
   3d2b0:	add	w25, w25, #0x4
   3d2b4:	lsr	x28, x21, #14
   3d2b8:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3d2bc:	add	x26, sp, #0xc8
   3d2c0:	mov	x2, #0x13                  	// #19
   3d2c4:	mov	x0, x26
   3d2c8:	mov	w1, #0x0                   	// #0
   3d2cc:	bl	6530 <__asan_internal_memset@plt>
   3d2d0:	ldr	w3, [sp, #136]
   3d2d4:	cmp	w3, #0xe
   3d2d8:	b.hi	3d2fc <__asan_internal_strnlen@@Base+0xdf4>  // b.pmore
   3d2dc:	sub	x0, x27, x19
   3d2e0:	cmp	x0, #0x3
   3d2e4:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d2e8:	ldr	w0, [x19], #4
   3d2ec:	lsl	x0, x0, x3
   3d2f0:	add	w3, w20, #0x12
   3d2f4:	prfm	pldl1strm, [x19]
   3d2f8:	orr	x28, x28, x0
   3d2fc:	and	w2, w28, #0x7
   3d300:	ubfx	w1, w28, #3, #3
   3d304:	ubfx	w0, w28, #6, #3
   3d308:	strb	w2, [sp, #216]
   3d30c:	ubfx	w2, w28, #9, #3
   3d310:	strb	w2, [sp, #200]
   3d314:	strb	w1, [sp, #217]
   3d318:	sub	w20, w3, #0xc
   3d31c:	strb	w0, [sp, #218]
   3d320:	cmp	w25, #0x4
   3d324:	lsr	x21, x28, #12
   3d328:	b.eq	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   3d32c:	and	w21, w21, #0x7
   3d330:	strb	w21, [sp, #208]
   3d334:	cmp	w25, #0x5
   3d338:	lsr	x21, x28, #15
   3d33c:	sub	w20, w3, #0xf
   3d340:	b.eq	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   3d344:	cmp	w20, #0xe
   3d348:	b.hi	3d36c <__asan_internal_strnlen@@Base+0xe64>  // b.pmore
   3d34c:	sub	x0, x27, x19
   3d350:	cmp	x0, #0x3
   3d354:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d358:	ldr	w0, [x19], #4
   3d35c:	lsl	x0, x0, x20
   3d360:	add	w20, w3, #0x11
   3d364:	prfm	pldl1strm, [x19]
   3d368:	orr	x21, x21, x0
   3d36c:	and	w0, w21, #0x7
   3d370:	strb	w0, [sp, #207]
   3d374:	cmp	w25, #0x6
   3d378:	lsr	x0, x21, #3
   3d37c:	b.eq	3db94 <__asan_internal_strnlen@@Base+0x168c>  // b.none
   3d380:	and	w0, w0, #0x7
   3d384:	strb	w0, [sp, #209]
   3d388:	cmp	w25, #0x7
   3d38c:	lsr	x0, x21, #6
   3d390:	b.eq	3dbf0 <__asan_internal_strnlen@@Base+0x16e8>  // b.none
   3d394:	and	w0, w0, #0x7
   3d398:	strb	w0, [sp, #206]
   3d39c:	cmp	w25, #0x8
   3d3a0:	lsr	x0, x21, #9
   3d3a4:	b.eq	3db78 <__asan_internal_strnlen@@Base+0x1670>  // b.none
   3d3a8:	and	w0, w0, #0x7
   3d3ac:	strb	w0, [sp, #210]
   3d3b0:	cmp	w25, #0x9
   3d3b4:	lsr	x0, x21, #12
   3d3b8:	b.eq	3db6c <__asan_internal_strnlen@@Base+0x1664>  // b.none
   3d3bc:	and	w0, w0, #0x7
   3d3c0:	strb	w0, [sp, #205]
   3d3c4:	lsr	x21, x21, #15
   3d3c8:	cmp	w25, #0xa
   3d3cc:	sub	w0, w20, #0xf
   3d3d0:	b.eq	3debc <__asan_internal_strnlen@@Base+0x19b4>  // b.none
   3d3d4:	cmp	w0, #0xe
   3d3d8:	b.hi	3d3fc <__asan_internal_strnlen@@Base+0xef4>  // b.pmore
   3d3dc:	sub	x1, x27, x19
   3d3e0:	cmp	x1, #0x3
   3d3e4:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d3e8:	ldr	w1, [x19], #4
   3d3ec:	lsl	x1, x1, x0
   3d3f0:	add	w0, w20, #0x11
   3d3f4:	prfm	pldl1strm, [x19]
   3d3f8:	orr	x21, x21, x1
   3d3fc:	and	w1, w21, #0x7
   3d400:	strb	w1, [sp, #211]
   3d404:	cmp	w25, #0xb
   3d408:	lsr	x1, x21, #3
   3d40c:	b.eq	3dec4 <__asan_internal_strnlen@@Base+0x19bc>  // b.none
   3d410:	and	w1, w1, #0x7
   3d414:	strb	w1, [sp, #204]
   3d418:	cmp	w25, #0xc
   3d41c:	lsr	x1, x21, #6
   3d420:	b.eq	3deec <__asan_internal_strnlen@@Base+0x19e4>  // b.none
   3d424:	and	w1, w1, #0x7
   3d428:	strb	w1, [sp, #212]
   3d42c:	cmp	w25, #0xd
   3d430:	lsr	x1, x21, #9
   3d434:	b.eq	3def8 <__asan_internal_strnlen@@Base+0x19f0>  // b.none
   3d438:	and	w1, w1, #0x7
   3d43c:	strb	w1, [sp, #203]
   3d440:	cmp	w25, #0xe
   3d444:	lsr	x1, x21, #12
   3d448:	b.eq	3df04 <__asan_internal_strnlen@@Base+0x19fc>  // b.none
   3d44c:	and	w1, w1, #0x7
   3d450:	strb	w1, [sp, #213]
   3d454:	lsr	x21, x21, #15
   3d458:	cmp	w25, #0xf
   3d45c:	sub	w20, w0, #0xf
   3d460:	b.eq	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>  // b.none
   3d464:	cmp	w20, #0xe
   3d468:	b.hi	3d48c <__asan_internal_strnlen@@Base+0xf84>  // b.pmore
   3d46c:	sub	x1, x27, x19
   3d470:	cmp	x1, #0x3
   3d474:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d478:	ldr	w1, [x19], #4
   3d47c:	lsl	x1, x1, x20
   3d480:	add	w20, w0, #0x11
   3d484:	prfm	pldl1strm, [x19]
   3d488:	orr	x21, x21, x1
   3d48c:	and	w0, w21, #0x7
   3d490:	strb	w0, [sp, #202]
   3d494:	cmp	w25, #0x10
   3d498:	lsr	x0, x21, #3
   3d49c:	b.eq	3db94 <__asan_internal_strnlen@@Base+0x168c>  // b.none
   3d4a0:	and	w0, w0, #0x7
   3d4a4:	strb	w0, [sp, #214]
   3d4a8:	cmp	w25, #0x11
   3d4ac:	lsr	x0, x21, #6
   3d4b0:	b.eq	3dbf0 <__asan_internal_strnlen@@Base+0x16e8>  // b.none
   3d4b4:	and	w0, w0, #0x7
   3d4b8:	strb	w0, [sp, #201]
   3d4bc:	cmp	w25, #0x12
   3d4c0:	lsr	x0, x21, #9
   3d4c4:	b.eq	3db78 <__asan_internal_strnlen@@Base+0x1670>  // b.none
   3d4c8:	lsr	x21, x21, #12
   3d4cc:	sub	w20, w20, #0xc
   3d4d0:	and	w0, w0, #0x7
   3d4d4:	strb	w0, [sp, #215]
   3d4d8:	add	x25, sp, #0xe0
   3d4dc:	mov	w1, #0x0                   	// #0
   3d4e0:	mov	x0, x25
   3d4e4:	mov	x2, #0x20                  	// #32
   3d4e8:	bl	6530 <__asan_internal_memset@plt>
   3d4ec:	add	x28, x23, #0x1, lsl #12
   3d4f0:	mov	x1, #0x1                   	// #1
   3d4f4:	add	x5, sp, #0x120
   3d4f8:	mov	w8, w1
   3d4fc:	nop
   3d500:	add	x0, x26, x1
   3d504:	sub	w2, w1, #0x1
   3d508:	and	w2, w2, #0xffff
   3d50c:	ldurb	w0, [x0, #-1]
   3d510:	cmp	w0, #0xf
   3d514:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3d518:	sbfiz	x0, x0, #1, #32
   3d51c:	ldrh	w3, [x25, x0]
   3d520:	add	w4, w3, #0x1
   3d524:	cbnz	w3, 3d724 <__asan_internal_strnlen@@Base+0x121c>
   3d528:	ldr	x3, [sp, #96]
   3d52c:	strh	w2, [x5, x0]
   3d530:	strh	w8, [x25, x0]
   3d534:	add	x1, x1, #0x1
   3d538:	cmp	x1, #0x14
   3d53c:	strh	w2, [x3, x0]
   3d540:	b.ne	3d500 <__asan_internal_strnlen@@Base+0xff8>  // b.any
   3d544:	mov	w1, #0x0                   	// #0
   3d548:	mov	x0, x23
   3d54c:	mov	x2, #0x800                 	// #2048
   3d550:	bl	6530 <__asan_internal_memset@plt>
   3d554:	mov	x5, #0x0                   	// #0
   3d558:	mov	w1, #0x0                   	// #0
   3d55c:	mov	w9, #0x1                   	// #1
   3d560:	lsl	x2, x5, #1
   3d564:	add	x0, x25, x2
   3d568:	ldrh	w0, [x0, #2]
   3d56c:	cbnz	w0, 3d7f4 <__asan_internal_strnlen@@Base+0x12ec>
   3d570:	add	x5, x5, #0x1
   3d574:	cmp	x5, #0x8
   3d578:	b.ne	3d560 <__asan_internal_strnlen@@Base+0x1058>  // b.any
   3d57c:	mov	x8, x25
   3d580:	add	x11, sp, #0xb8
   3d584:	mov	x6, #0x9                   	// #9
   3d588:	mov	w9, #0x1                   	// #1
   3d58c:	b	3d5a0 <__asan_internal_strnlen@@Base+0x1098>
   3d590:	add	x6, x6, #0x1
   3d594:	add	x8, x8, #0x2
   3d598:	cmp	x6, #0x10
   3d59c:	b.eq	3dbfc <__asan_internal_strnlen@@Base+0x16f4>  // b.none
   3d5a0:	ldrh	w5, [x8, #18]
   3d5a4:	cbz	w5, 3d590 <__asan_internal_strnlen@@Base+0x1088>
   3d5a8:	add	x0, x11, x6, lsl #1
   3d5ac:	sub	w7, w6, #0x1
   3d5b0:	mov	x4, #0x0                   	// #0
   3d5b4:	mov	w3, #0x0                   	// #0
   3d5b8:	sturh	w1, [x0, #-18]
   3d5bc:	b	3d5d0 <__asan_internal_strnlen@@Base+0x10c8>
   3d5c0:	add	w4, w3, #0x1
   3d5c4:	mov	x3, x4
   3d5c8:	cmp	x6, w4, uxtw
   3d5cc:	b.ls	3db8c <__asan_internal_strnlen@@Base+0x1684>  // b.plast
   3d5d0:	lsr	w0, w5, w3
   3d5d4:	tbz	w0, #0, 3d5c0 <__asan_internal_strnlen@@Base+0x10b8>
   3d5d8:	sub	w0, w7, w3
   3d5dc:	subs	x4, x6, x4
   3d5e0:	lsl	w0, w9, w0
   3d5e4:	b.eq	3d614 <__asan_internal_strnlen@@Base+0x110c>  // b.none
   3d5e8:	tst	w0, w1
   3d5ec:	b.eq	3db84 <__asan_internal_strnlen@@Base+0x167c>  // b.none
   3d5f0:	mov	w2, #0x0                   	// #0
   3d5f4:	b	3d600 <__asan_internal_strnlen@@Base+0x10f8>
   3d5f8:	tst	w1, w0
   3d5fc:	b.eq	3db84 <__asan_internal_strnlen@@Base+0x167c>  // b.none
   3d600:	add	w2, w2, #0x1
   3d604:	bic	w1, w1, w0
   3d608:	lsr	w0, w0, #1
   3d60c:	cmp	x4, w2, uxtw
   3d610:	b.hi	3d5f8 <__asan_internal_strnlen@@Base+0x10f0>  // b.pmore
   3d614:	lsl	w0, w9, w3
   3d618:	bic	w5, w5, w0
   3d61c:	b	3d5c0 <__asan_internal_strnlen@@Base+0x10b8>
   3d620:	ldp	x21, x22, [sp, #32]
   3d624:	ldp	x27, x28, [sp, #80]
   3d628:	mov	w0, #0x0                   	// #0
   3d62c:	ldp	x23, x24, [sp, #48]
   3d630:	ldp	x19, x20, [sp, #16]
   3d634:	ldp	x25, x26, [sp, #64]
   3d638:	ldp	x29, x30, [sp], #320
   3d63c:	ret
   3d640:	ldr	x1, [sp, #96]
   3d644:	ubfiz	w14, w6, #9, #7
   3d648:	lsl	w5, w4, w6
   3d64c:	add	w11, w14, #0x1, lsl #12
   3d650:	add	x1, x0, x1
   3d654:	add	x0, x0, x30
   3d658:	add	w10, w6, #0x7
   3d65c:	sxtw	x26, w5
   3d660:	and	x9, x9, #0xffff
   3d664:	and	w11, w11, #0xffff
   3d668:	ldrh	w12, [x1, #16]
   3d66c:	mov	w5, w5
   3d670:	ldurh	w7, [x0, #-2]
   3d674:	lsl	w10, w4, w10
   3d678:	mov	x17, #0x0                   	// #0
   3d67c:	mov	x15, #0x0                   	// #0
   3d680:	mov	x16, #0x0                   	// #0
   3d684:	mov	x13, #0x100                 	// #256
   3d688:	str	w6, [sp, #136]
   3d68c:	mov	w2, w17
   3d690:	cmp	x13, w7, uxtb
   3d694:	and	x1, x7, #0xff
   3d698:	b.eq	3d6cc <__asan_internal_strnlen@@Base+0x11c4>  // b.none
   3d69c:	lsl	x2, x1, #1
   3d6a0:	ldrh	w0, [x23, x2]
   3d6a4:	cbnz	w0, 3df50 <__asan_internal_strnlen@@Base+0x1a48>
   3d6a8:	tst	x18, #0xfffffffffffffe00
   3d6ac:	b.ne	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   3d6b0:	add	w0, w11, w18
   3d6b4:	strh	w0, [x23, x2]
   3d6b8:	ldr	w2, [sp, #136]
   3d6bc:	mov	x15, x18
   3d6c0:	mov	x13, x1
   3d6c4:	add	x18, x18, x26
   3d6c8:	mov	x17, x6
   3d6cc:	lsr	w0, w7, #8
   3d6d0:	add	x1, x23, x15, lsl #1
   3d6d4:	lsl	w2, w4, w2
   3d6d8:	add	x1, x1, #0x200
   3d6dc:	cmp	x2, x0
   3d6e0:	orr	w8, w14, w12
   3d6e4:	b.hi	3d6fc <__asan_internal_strnlen@@Base+0x11f4>  // b.pmore
   3d6e8:	b	3df10 <__asan_internal_strnlen@@Base+0x1a08>
   3d6ec:	strh	w8, [x1, x0, lsl #1]
   3d6f0:	add	x0, x0, x5
   3d6f4:	cmp	x2, x0
   3d6f8:	b.ls	3df10 <__asan_internal_strnlen@@Base+0x1a08>  // b.plast
   3d6fc:	ldrh	w3, [x1, x0, lsl #1]
   3d700:	cbz	w3, 3d6ec <__asan_internal_strnlen@@Base+0x11e4>
   3d704:	mov	w0, #0x0                   	// #0
   3d708:	ldp	x19, x20, [sp, #16]
   3d70c:	ldp	x21, x22, [sp, #32]
   3d710:	ldp	x23, x24, [sp, #48]
   3d714:	ldp	x25, x26, [sp, #64]
   3d718:	ldp	x27, x28, [sp, #80]
   3d71c:	ldp	x29, x30, [sp], #320
   3d720:	ret
   3d724:	ldrh	w3, [x5, x0]
   3d728:	add	x1, x1, #0x1
   3d72c:	strh	w4, [x25, x0]
   3d730:	cmp	x1, #0x14
   3d734:	strh	w2, [x5, x0]
   3d738:	strh	w2, [x28, x3, lsl #1]
   3d73c:	b.ne	3d500 <__asan_internal_strnlen@@Base+0xff8>  // b.any
   3d740:	b	3d544 <__asan_internal_strnlen@@Base+0x103c>
   3d744:	sub	w0, w0, #0xc
   3d748:	lsr	w0, w0, #3
   3d74c:	mvn	x5, x0
   3d750:	add	x3, x19, x5
   3d754:	sub	x1, x27, x3
   3d758:	cmp	x1, #0x3
   3d75c:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3d760:	ldrb	w6, [x3, #3]
   3d764:	sub	x0, x19, x0
   3d768:	ldrb	w2, [x3, #2]
   3d76c:	add	x1, x0, #0x3
   3d770:	ldrb	w3, [x3, #1]
   3d774:	ldrb	w0, [x19, x5]
   3d778:	bfi	w2, w6, #8, #24
   3d77c:	mvn	w2, w2
   3d780:	bfi	w0, w3, #8, #24
   3d784:	cmp	w0, w2, uxth
   3d788:	b.ne	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.any
   3d78c:	sub	x2, x27, x1
   3d790:	cmp	w0, w2
   3d794:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3d798:	ldr	x2, [sp, #104]
   3d79c:	sub	x2, x2, x24
   3d7a0:	cmp	w0, w2
   3d7a4:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3d7a8:	and	x20, x0, #0xffff
   3d7ac:	mov	x0, x24
   3d7b0:	add	x19, x1, x20
   3d7b4:	mov	x2, x20
   3d7b8:	bl	64a0 <__asan_internal_memcpy@plt>
   3d7bc:	add	x24, x24, x20
   3d7c0:	ands	x21, x19, #0x3
   3d7c4:	mov	w0, #0x0                   	// #0
   3d7c8:	b.eq	3d7e8 <__asan_internal_strnlen@@Base+0x12e0>  // b.none
   3d7cc:	mov	x21, #0x0                   	// #0
   3d7d0:	ldrb	w1, [x19], #1
   3d7d4:	lsl	x1, x1, x0
   3d7d8:	tst	x19, #0x3
   3d7dc:	orr	x21, x21, x1
   3d7e0:	add	w0, w0, #0x8
   3d7e4:	b.ne	3d7d0 <__asan_internal_strnlen@@Base+0x12c8>  // b.any
   3d7e8:	tbnz	w22, #0, 3ded0 <__asan_internal_strnlen@@Base+0x19c8>
   3d7ec:	mov	x22, x21
   3d7f0:	b	3d214 <__asan_internal_strnlen@@Base+0xd0c>
   3d7f4:	add	w3, w5, #0x1
   3d7f8:	lsl	w3, w9, w3
   3d7fc:	cmp	w0, w3
   3d800:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3d804:	ldr	x4, [sp, #96]
   3d808:	add	x2, x2, x4
   3d80c:	and	x4, x0, #0xffff
   3d810:	ldrh	w7, [x2, #2]
   3d814:	tst	w7, #0xfe00
   3d818:	b.ne	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   3d81c:	sxtw	x3, w3
   3d820:	ubfiz	w11, w5, #9, #7
   3d824:	lsl	w8, w9, w5
   3d828:	mov	x10, #0x0                   	// #0
   3d82c:	cmp	w1, #0xff
   3d830:	orr	w6, w11, w7
   3d834:	mov	w0, w1
   3d838:	b.ls	3d850 <__asan_internal_strnlen@@Base+0x1348>  // b.plast
   3d83c:	b	3dba0 <__asan_internal_strnlen@@Base+0x1698>
   3d840:	strh	w6, [x23, x0, lsl #1]
   3d844:	add	x0, x0, x3
   3d848:	cmp	x0, #0xff
   3d84c:	b.hi	3dba0 <__asan_internal_strnlen@@Base+0x1698>  // b.pmore
   3d850:	ldrh	w2, [x23, x0, lsl #1]
   3d854:	cbz	w2, 3d840 <__asan_internal_strnlen@@Base+0x1338>
   3d858:	b	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3d85c:	ldp	x0, x28, [sp, #120]
   3d860:	str	x0, [sp, #144]
   3d864:	stp	x22, x23, [sp, #160]
   3d868:	mov	x22, x27
   3d86c:	mov	x23, x28
   3d870:	mov	x27, x19
   3d874:	mov	w26, #0x1                   	// #1
   3d878:	cmp	w20, #0xe
   3d87c:	b.hi	3d8a0 <__asan_internal_strnlen@@Base+0x1398>  // b.pmore
   3d880:	sub	x0, x22, x27
   3d884:	cmp	x0, #0x3
   3d888:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3d88c:	ldr	w0, [x27], #4
   3d890:	lsl	x0, x0, x20
   3d894:	add	w20, w20, #0x20
   3d898:	prfm	pldl1strm, [x27]
   3d89c:	orr	x21, x21, x0
   3d8a0:	and	x0, x21, #0xff
   3d8a4:	ldrh	w1, [x23, x0, lsl #1]
   3d8a8:	and	w25, w1, #0x1ff
   3d8ac:	ubfx	x0, x1, #9, #3
   3d8b0:	tbnz	w1, #12, 3d8ec <__asan_internal_strnlen@@Base+0x13e4>
   3d8b4:	add	w1, w0, #0x1
   3d8b8:	sub	w20, w20, #0x1
   3d8bc:	sub	w20, w20, w0
   3d8c0:	cmp	w25, #0xff
   3d8c4:	lsr	x21, x21, x1
   3d8c8:	b.hi	3d924 <__asan_internal_strnlen@@Base+0x141c>  // b.pmore
   3d8cc:	ldr	x0, [sp, #104]
   3d8d0:	cmp	x24, x0
   3d8d4:	b.eq	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   3d8d8:	strb	w25, [x24], #1
   3d8dc:	cmp	w20, #0xe
   3d8e0:	prfm	pstl1keep, [x24]
   3d8e4:	b.ls	3d880 <__asan_internal_strnlen@@Base+0x1378>  // b.plast
   3d8e8:	b	3d8a0 <__asan_internal_strnlen@@Base+0x1398>
   3d8ec:	add	w25, w25, #0x100
   3d8f0:	lsl	w0, w26, w0
   3d8f4:	sub	w0, w0, #0x1
   3d8f8:	sub	w20, w20, #0x8
   3d8fc:	and	x0, x0, x21, lsr #8
   3d900:	add	x25, x0, w25, sxtw
   3d904:	ldrh	w0, [x23, x25, lsl #1]
   3d908:	and	w25, w0, #0x1ff
   3d90c:	ubfx	x0, x0, #9, #3
   3d910:	cmp	w25, #0xff
   3d914:	add	w1, w0, #0x8
   3d918:	sub	w20, w20, w0
   3d91c:	lsr	x21, x21, x1
   3d920:	b.ls	3d8cc <__asan_internal_strnlen@@Base+0x13c4>  // b.plast
   3d924:	cmp	w25, #0x100
   3d928:	b.eq	3df70 <__asan_internal_strnlen@@Base+0x1a68>  // b.none
   3d92c:	cmp	w25, #0x108
   3d930:	b.hi	3d9c0 <__asan_internal_strnlen@@Base+0x14b8>  // b.pmore
   3d934:	sub	w25, w25, #0xfe
   3d938:	cmp	w20, #0xe
   3d93c:	b.hi	3d960 <__asan_internal_strnlen@@Base+0x1458>  // b.pmore
   3d940:	sub	x0, x22, x27
   3d944:	cmp	x0, #0x3
   3d948:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3d94c:	ldr	w0, [x27], #4
   3d950:	lsl	x0, x0, x20
   3d954:	add	w20, w20, #0x20
   3d958:	prfm	pldl1strm, [x27]
   3d95c:	orr	x21, x21, x0
   3d960:	ldr	x1, [sp, #144]
   3d964:	and	x0, x21, #0xff
   3d968:	ldrh	w2, [x1, x0, lsl #1]
   3d96c:	and	w0, w2, #0x1ff
   3d970:	ubfx	x1, x2, #9, #3
   3d974:	tbnz	w2, #12, 3da34 <__asan_internal_strnlen@@Base+0x152c>
   3d978:	add	w2, w1, #0x1
   3d97c:	sub	w20, w20, #0x1
   3d980:	sub	w20, w20, w1
   3d984:	lsr	x21, x21, x2
   3d988:	cbnz	w0, 3da6c <__asan_internal_strnlen@@Base+0x1564>
   3d98c:	ldr	x0, [sp, #112]
   3d990:	cmp	x24, x0
   3d994:	b.eq	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.none
   3d998:	ldr	x0, [sp, #104]
   3d99c:	sub	x0, x0, x24
   3d9a0:	cmp	w25, w0
   3d9a4:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3d9a8:	ldurb	w1, [x24, #-1]
   3d9ac:	mov	w2, w25
   3d9b0:	mov	x0, x24
   3d9b4:	add	x24, x24, x2
   3d9b8:	bl	6530 <__asan_internal_memset@plt>
   3d9bc:	b	3d878 <__asan_internal_strnlen@@Base+0x1370>
   3d9c0:	cmp	w25, #0x11d
   3d9c4:	b.eq	3dbe8 <__asan_internal_strnlen@@Base+0x16e0>  // b.none
   3d9c8:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3d9cc:	cmp	w20, #0xe
   3d9d0:	b.hi	3d9f4 <__asan_internal_strnlen@@Base+0x14ec>  // b.pmore
   3d9d4:	sub	x0, x22, x27
   3d9d8:	cmp	x0, #0x3
   3d9dc:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3d9e0:	ldr	w0, [x27], #4
   3d9e4:	lsl	x0, x0, x20
   3d9e8:	add	w20, w20, #0x20
   3d9ec:	prfm	pldl1strm, [x27]
   3d9f0:	orr	x21, x21, x0
   3d9f4:	sub	w25, w25, #0x109
   3d9f8:	and	w1, w25, #0x3
   3d9fc:	lsr	w0, w25, #2
   3da00:	add	w2, w0, #0x1
   3da04:	lsl	w25, w26, w0
   3da08:	mov	w0, #0xffffffff            	// #-1
   3da0c:	sub	w25, w25, #0x1
   3da10:	lsl	w5, w0, w2
   3da14:	bic	w5, w21, w5
   3da18:	lsl	w0, w1, w2
   3da1c:	add	w25, w5, w25, lsl #3
   3da20:	add	w0, w0, #0xb
   3da24:	sub	w20, w20, w2
   3da28:	add	w25, w25, w0
   3da2c:	lsr	x21, x21, x2
   3da30:	b	3d938 <__asan_internal_strnlen@@Base+0x1430>
   3da34:	add	w0, w0, #0x100
   3da38:	lsl	w1, w26, w1
   3da3c:	sub	w1, w1, #0x1
   3da40:	sub	w20, w20, #0x8
   3da44:	and	x1, x1, x21, lsr #8
   3da48:	add	x0, x1, w0, sxtw
   3da4c:	ldr	x1, [sp, #144]
   3da50:	ldrh	w1, [x1, x0, lsl #1]
   3da54:	and	w0, w1, #0x1ff
   3da58:	ubfx	x1, x1, #9, #3
   3da5c:	add	w2, w1, #0x8
   3da60:	sub	w20, w20, w1
   3da64:	lsr	x21, x21, x2
   3da68:	cbz	w0, 3d98c <__asan_internal_strnlen@@Base+0x1484>
   3da6c:	cmp	w0, #0x1d
   3da70:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3da74:	add	w19, w0, #0x1
   3da78:	cmp	w0, #0x3
   3da7c:	b.ls	3dae4 <__asan_internal_strnlen@@Base+0x15dc>  // b.plast
   3da80:	cmp	w20, #0xe
   3da84:	b.hi	3daa8 <__asan_internal_strnlen@@Base+0x15a0>  // b.pmore
   3da88:	sub	x1, x22, x27
   3da8c:	cmp	x1, #0x3
   3da90:	b.le	3d620 <__asan_internal_strnlen@@Base+0x1118>
   3da94:	ldr	w1, [x27], #4
   3da98:	lsl	x1, x1, x20
   3da9c:	add	w20, w20, #0x20
   3daa0:	prfm	pldl1strm, [x27]
   3daa4:	orr	x21, x21, x1
   3daa8:	sub	w0, w0, #0x4
   3daac:	and	w1, w0, #0x1
   3dab0:	lsr	w0, w0, #1
   3dab4:	add	w2, w0, #0x1
   3dab8:	lsl	w19, w26, w0
   3dabc:	mov	w0, #0xffffffff            	// #-1
   3dac0:	sub	w19, w19, #0x1
   3dac4:	lsl	w5, w0, w2
   3dac8:	bic	w5, w21, w5
   3dacc:	lsl	w0, w1, w2
   3dad0:	add	w19, w5, w19, lsl #2
   3dad4:	add	w0, w0, #0x5
   3dad8:	sub	w20, w20, w2
   3dadc:	add	w19, w19, w0
   3dae0:	lsr	x21, x21, x2
   3dae4:	ldr	x0, [sp, #112]
   3dae8:	sub	x0, x24, x0
   3daec:	cmp	w19, w0
   3daf0:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3daf4:	ldr	x0, [sp, #104]
   3daf8:	sub	x0, x0, x24
   3dafc:	cmp	w25, w0
   3db00:	b.hi	3d620 <__asan_internal_strnlen@@Base+0x1118>  // b.pmore
   3db04:	mov	w28, w19
   3db08:	cmp	w19, w25
   3db0c:	neg	x0, x28
   3db10:	str	x0, [sp, #152]
   3db14:	b.cc	3db30 <__asan_internal_strnlen@@Base+0x1628>  // b.lo, b.ul, b.last
   3db18:	mov	w2, w25
   3db1c:	add	x1, x24, x0
   3db20:	mov	x0, x24
   3db24:	add	x24, x24, x2
   3db28:	bl	64a0 <__asan_internal_memcpy@plt>
   3db2c:	b	3d878 <__asan_internal_strnlen@@Base+0x1370>
   3db30:	cmp	w19, w25
   3db34:	ldr	x0, [sp, #152]
   3db38:	csel	w2, w19, w25, ls  // ls = plast
   3db3c:	csel	w28, w19, w25, ls  // ls = plast
   3db40:	str	x2, [sp, #136]
   3db44:	add	x1, x24, x0
   3db48:	mov	x0, x24
   3db4c:	bl	64a0 <__asan_internal_memcpy@plt>
   3db50:	ldr	x2, [sp, #136]
   3db54:	subs	w25, w25, w28
   3db58:	add	x24, x24, x2
   3db5c:	b.ne	3db30 <__asan_internal_strnlen@@Base+0x1628>  // b.any
   3db60:	b	3d878 <__asan_internal_strnlen@@Base+0x1370>
   3db64:	mov	w0, #0x0                   	// #0
   3db68:	b	3d208 <__asan_internal_strnlen@@Base+0xd00>
   3db6c:	sub	w20, w20, #0xc
   3db70:	mov	x21, x0
   3db74:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3db78:	sub	w20, w20, #0x9
   3db7c:	mov	x21, x0
   3db80:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3db84:	add	w1, w1, w0
   3db88:	b	3d614 <__asan_internal_strnlen@@Base+0x110c>
   3db8c:	cbz	w5, 3d590 <__asan_internal_strnlen@@Base+0x1088>
   3db90:	b	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3db94:	sub	w20, w20, #0x3
   3db98:	mov	x21, x0
   3db9c:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3dba0:	add	x10, x10, #0x1
   3dba4:	cmp	x10, x4
   3dba8:	b.cs	3dbb4 <__asan_internal_strnlen@@Base+0x16ac>  // b.hs, b.nlast
   3dbac:	ubfiz	x7, x7, #1, #16
   3dbb0:	ldrh	w7, [x28, x7]
   3dbb4:	mov	w0, w8
   3dbb8:	tst	w1, w8
   3dbbc:	b.eq	3de8c <__asan_internal_strnlen@@Base+0x1984>  // b.none
   3dbc0:	lsr	w0, w0, #1
   3dbc4:	tst	w1, w0
   3dbc8:	b.ne	3dbc0 <__asan_internal_strnlen@@Base+0x16b8>  // b.any
   3dbcc:	cbnz	w0, 3de8c <__asan_internal_strnlen@@Base+0x1984>
   3dbd0:	mov	w1, #0x0                   	// #0
   3dbd4:	cmp	x10, x4
   3dbd8:	b.eq	3d570 <__asan_internal_strnlen@@Base+0x1068>  // b.none
   3dbdc:	tst	w7, #0xfe00
   3dbe0:	b.eq	3d82c <__asan_internal_strnlen@@Base+0x1324>  // b.none
   3dbe4:	b	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3dbe8:	mov	w25, #0x102                 	// #258
   3dbec:	b	3d938 <__asan_internal_strnlen@@Base+0x1430>
   3dbf0:	sub	w20, w20, #0x6
   3dbf4:	mov	x21, x0
   3dbf8:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3dbfc:	add	x30, sp, #0xb8
   3dc00:	mov	x18, #0x0                   	// #0
   3dc04:	mov	x6, #0x7                   	// #7
   3dc08:	mov	w4, #0x1                   	// #1
   3dc0c:	lsl	x0, x6, #1
   3dc10:	add	x1, x25, x0
   3dc14:	ldrh	w9, [x1, #16]
   3dc18:	cbnz	w9, 3d640 <__asan_internal_strnlen@@Base+0x1138>
   3dc1c:	subs	x6, x6, #0x1
   3dc20:	b.ne	3dc0c <__asan_internal_strnlen@@Base+0x1704>  // b.any
   3dc24:	ldr	w5, [sp, #144]
   3dc28:	mov	x0, #0x1278                	// #4728
   3dc2c:	ldr	w4, [sp, #152]
   3dc30:	add	x26, x23, x0
   3dc34:	mov	x25, x26
   3dc38:	add	x3, x5, x4
   3dc3c:	add	x3, x26, x3
   3dc40:	cmp	x26, x3
   3dc44:	b.cs	3de38 <__asan_internal_strnlen@@Base+0x1930>  // b.hs, b.nlast
   3dc48:	stp	x22, x5, [sp, #136]
   3dc4c:	mov	x22, x23
   3dc50:	mov	x23, x21
   3dc54:	mov	x21, x26
   3dc58:	mov	x26, x19
   3dc5c:	mov	x19, x27
   3dc60:	mov	x27, x3
   3dc64:	str	x4, [sp, #152]
   3dc68:	b	3dc7c <__asan_internal_strnlen@@Base+0x1774>
   3dc6c:	sub	w20, w20, #0x1
   3dc70:	strb	w0, [x25], #1
   3dc74:	cmp	x27, x25
   3dc78:	b.ls	3de1c <__asan_internal_strnlen@@Base+0x1914>  // b.plast
   3dc7c:	cmp	w20, #0xe
   3dc80:	b.hi	3dca4 <__asan_internal_strnlen@@Base+0x179c>  // b.pmore
   3dc84:	sub	x0, x19, x26
   3dc88:	cmp	x0, #0x3
   3dc8c:	b.le	3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3dc90:	ldr	w0, [x26], #4
   3dc94:	lsl	x0, x0, x20
   3dc98:	add	w20, w20, #0x20
   3dc9c:	prfm	pldl1strm, [x26]
   3dca0:	orr	x23, x23, x0
   3dca4:	and	x0, x23, #0xff
   3dca8:	ldrh	w0, [x22, x0, lsl #1]
   3dcac:	tbnz	w0, #12, 3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3dcb0:	ubfx	x1, x0, #9, #3
   3dcb4:	tst	w0, #0x1f0
   3dcb8:	add	w2, w1, #0x1
   3dcbc:	sub	w20, w20, w1
   3dcc0:	and	w0, w0, #0x1ff
   3dcc4:	lsr	x23, x23, x2
   3dcc8:	b.eq	3dc6c <__asan_internal_strnlen@@Base+0x1764>  // b.none
   3dccc:	cmp	w0, #0x10
   3dcd0:	b.eq	3dd14 <__asan_internal_strnlen@@Base+0x180c>  // b.none
   3dcd4:	cmp	w0, #0x11
   3dcd8:	b.eq	3dd68 <__asan_internal_strnlen@@Base+0x1860>  // b.none
   3dcdc:	cmp	w0, #0x12
   3dce0:	b.ne	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.any
   3dce4:	and	w2, w23, #0x7f
   3dce8:	sub	x0, x27, x25
   3dcec:	add	w2, w2, #0xb
   3dcf0:	sub	w20, w20, #0x8
   3dcf4:	lsr	x23, x23, #7
   3dcf8:	cmp	w2, w0
   3dcfc:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3dd00:	mov	x0, x25
   3dd04:	mov	w1, #0x0                   	// #0
   3dd08:	add	x25, x25, x2
   3dd0c:	bl	6530 <__asan_internal_memset@plt>
   3dd10:	b	3dc74 <__asan_internal_strnlen@@Base+0x176c>
   3dd14:	cmp	x25, x21
   3dd18:	b.eq	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.none
   3dd1c:	and	w0, w23, #0x3
   3dd20:	sub	x1, x27, x25
   3dd24:	add	w0, w0, #0x3
   3dd28:	sub	w20, w20, #0x3
   3dd2c:	lsr	x23, x23, #2
   3dd30:	cmp	w0, w1
   3dd34:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3dd38:	ldurb	w1, [x25, #-1]
   3dd3c:	cmp	w0, #0x5
   3dd40:	b.eq	3ddd8 <__asan_internal_strnlen@@Base+0x18d0>  // b.none
   3dd44:	cmp	w0, #0x6
   3dd48:	b.eq	3ddd4 <__asan_internal_strnlen@@Base+0x18cc>  // b.none
   3dd4c:	cmp	w0, #0x4
   3dd50:	b.eq	3dddc <__asan_internal_strnlen@@Base+0x18d4>  // b.none
   3dd54:	add	x25, x25, #0x3
   3dd58:	sturb	w1, [x25, #-3]
   3dd5c:	sturb	w1, [x25, #-2]
   3dd60:	sturb	w1, [x25, #-1]
   3dd64:	b	3dc74 <__asan_internal_strnlen@@Base+0x176c>
   3dd68:	and	w0, w23, #0x7
   3dd6c:	sub	x1, x27, x25
   3dd70:	add	w0, w0, #0x3
   3dd74:	sub	w20, w20, #0x4
   3dd78:	lsr	x23, x23, #3
   3dd7c:	cmp	w0, w1
   3dd80:	b.hi	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.pmore
   3dd84:	cmp	w0, #0x7
   3dd88:	b.eq	3de00 <__asan_internal_strnlen@@Base+0x18f8>  // b.none
   3dd8c:	b.hi	3dde4 <__asan_internal_strnlen@@Base+0x18dc>  // b.pmore
   3dd90:	cmp	w0, #0x5
   3dd94:	b.eq	3dda8 <__asan_internal_strnlen@@Base+0x18a0>  // b.none
   3dd98:	cmp	w0, #0x6
   3dd9c:	b.ne	3ddc4 <__asan_internal_strnlen@@Base+0x18bc>  // b.any
   3dda0:	strb	wzr, [x25], #1
   3dda4:	nop
   3dda8:	strb	wzr, [x25], #1
   3ddac:	mov	x0, x25
   3ddb0:	strb	wzr, [x0], #1
   3ddb4:	mov	x25, x0
   3ddb8:	strh	wzr, [x25], #3
   3ddbc:	strb	wzr, [x0, #2]
   3ddc0:	b	3dc74 <__asan_internal_strnlen@@Base+0x176c>
   3ddc4:	cmp	w0, #0x4
   3ddc8:	b.eq	3ddac <__asan_internal_strnlen@@Base+0x18a4>  // b.none
   3ddcc:	mov	x0, x25
   3ddd0:	b	3ddb4 <__asan_internal_strnlen@@Base+0x18ac>
   3ddd4:	strb	w1, [x25], #1
   3ddd8:	strb	w1, [x25], #1
   3dddc:	strb	w1, [x25], #1
   3dde0:	b	3dd54 <__asan_internal_strnlen@@Base+0x184c>
   3dde4:	cmp	w0, #0x9
   3dde8:	b.eq	3ddf8 <__asan_internal_strnlen@@Base+0x18f0>  // b.none
   3ddec:	cmp	w0, #0xa
   3ddf0:	b.ne	3de0c <__asan_internal_strnlen@@Base+0x1904>  // b.any
   3ddf4:	strb	wzr, [x25], #1
   3ddf8:	strb	wzr, [x25], #1
   3ddfc:	strb	wzr, [x25], #1
   3de00:	strb	wzr, [x25], #1
   3de04:	strb	wzr, [x25], #1
   3de08:	b	3dda8 <__asan_internal_strnlen@@Base+0x18a0>
   3de0c:	cmp	w0, #0x8
   3de10:	b.ne	3ddcc <__asan_internal_strnlen@@Base+0x18c4>  // b.any
   3de14:	strb	wzr, [x25], #1
   3de18:	b	3de00 <__asan_internal_strnlen@@Base+0x18f8>
   3de1c:	mov	x27, x19
   3de20:	mov	x19, x26
   3de24:	mov	x26, x21
   3de28:	mov	x21, x23
   3de2c:	mov	x23, x22
   3de30:	ldp	x22, x5, [sp, #136]
   3de34:	ldr	x4, [sp, #152]
   3de38:	str	x4, [sp, #152]
   3de3c:	ldrb	w0, [x28, #888]
   3de40:	cbz	w0, 3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3de44:	mov	x3, x23
   3de48:	mov	x2, x23
   3de4c:	mov	x1, x5
   3de50:	mov	x0, x26
   3de54:	str	x5, [sp, #136]
   3de58:	bl	3c830 <__asan_internal_strnlen@@Base+0x328>
   3de5c:	cbz	w0, 3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3de60:	ldr	x5, [sp, #136]
   3de64:	add	x3, x23, #0x800
   3de68:	ldr	x4, [sp, #152]
   3de6c:	mov	x2, x23
   3de70:	add	x0, x26, x5
   3de74:	str	x3, [sp, #144]
   3de78:	mov	x1, x4
   3de7c:	bl	3c830 <__asan_internal_strnlen@@Base+0x328>
   3de80:	cbz	w0, 3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3de84:	mov	x28, x23
   3de88:	b	3d864 <__asan_internal_strnlen@@Base+0x135c>
   3de8c:	sub	w2, w0, #0x1
   3de90:	and	w1, w2, w1
   3de94:	add	w1, w0, w1
   3de98:	b	3dbd4 <__asan_internal_strnlen@@Base+0x16cc>
   3de9c:	str	x24, [sp, #112]
   3dea0:	ldp	x21, x22, [sp, #32]
   3dea4:	ldp	x23, x24, [sp, #48]
   3dea8:	ldp	x27, x28, [sp, #80]
   3deac:	ldp	x1, x0, [sp, #104]
   3deb0:	cmp	x0, x1
   3deb4:	cset	w0, eq  // eq = none
   3deb8:	b	3d630 <__asan_internal_strnlen@@Base+0x1128>
   3debc:	mov	w20, w0
   3dec0:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3dec4:	sub	w20, w0, #0x3
   3dec8:	mov	x21, x1
   3decc:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3ded0:	sub	x0, x27, x19
   3ded4:	mov	x4, x27
   3ded8:	cmp	x0, #0x4
   3dedc:	b.le	3de9c <__asan_internal_strnlen@@Base+0x1994>
   3dee0:	ldp	x21, x22, [sp, #32]
   3dee4:	ldp	x27, x28, [sp, #80]
   3dee8:	b	3d174 <__asan_internal_strnlen@@Base+0xc6c>
   3deec:	sub	w20, w0, #0x6
   3def0:	mov	x21, x1
   3def4:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3def8:	sub	w20, w0, #0x9
   3defc:	mov	x21, x1
   3df00:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3df04:	sub	w20, w0, #0xc
   3df08:	mov	x21, x1
   3df0c:	b	3d4d8 <__asan_internal_strnlen@@Base+0xfd0>
   3df10:	add	x16, x16, #0x1
   3df14:	cmp	x9, x16
   3df18:	b.ls	3df24 <__asan_internal_strnlen@@Base+0x1a1c>  // b.plast
   3df1c:	ubfiz	x12, x12, #1, #16
   3df20:	ldrh	w12, [x28, x12]
   3df24:	mov	w0, w10
   3df28:	tst	w10, w7
   3df2c:	b.eq	3df84 <__asan_internal_strnlen@@Base+0x1a7c>  // b.none
   3df30:	lsr	w0, w0, #1
   3df34:	tst	w0, w7
   3df38:	b.ne	3df30 <__asan_internal_strnlen@@Base+0x1a28>  // b.any
   3df3c:	cbnz	w0, 3df84 <__asan_internal_strnlen@@Base+0x1a7c>
   3df40:	mov	w7, #0x0                   	// #0
   3df44:	cmp	x9, x16
   3df48:	b.ne	3d68c <__asan_internal_strnlen@@Base+0x1184>  // b.any
   3df4c:	b	3dc1c <__asan_internal_strnlen@@Base+0x1714>
   3df50:	tbz	w0, #12, 3d704 <__asan_internal_strnlen@@Base+0x11fc>
   3df54:	ubfx	x17, x0, #9, #3
   3df58:	and	x15, x0, #0x1ff
   3df5c:	cmp	x17, x6
   3df60:	mov	x2, x17
   3df64:	b.cc	3d704 <__asan_internal_strnlen@@Base+0x11fc>  // b.lo, b.ul, b.last
   3df68:	mov	x13, x1
   3df6c:	b	3d6cc <__asan_internal_strnlen@@Base+0x11c4>
   3df70:	mov	x19, x27
   3df74:	mov	w0, w20
   3df78:	mov	x27, x22
   3df7c:	ldp	x22, x23, [sp, #160]
   3df80:	b	3d7e8 <__asan_internal_strnlen@@Base+0x12e0>
   3df84:	sub	w1, w0, #0x1
   3df88:	and	w7, w1, w7
   3df8c:	add	w7, w0, w7
   3df90:	b	3df44 <__asan_internal_strnlen@@Base+0x1a3c>
   3df94:	nop
   3df98:	stp	x29, x30, [sp, #-80]!
   3df9c:	mov	x29, sp
   3dfa0:	stp	x19, x20, [sp, #16]
   3dfa4:	mov	x20, x2
   3dfa8:	mov	x2, x4
   3dfac:	stp	x21, x22, [sp, #32]
   3dfb0:	mov	x21, x6
   3dfb4:	mov	x22, x1
   3dfb8:	stp	x23, x24, [sp, #48]
   3dfbc:	mov	x24, x7
   3dfc0:	ldr	x23, [x6]
   3dfc4:	str	x25, [sp, #64]
   3dfc8:	mov	x25, x3
   3dfcc:	mov	x3, x5
   3dfd0:	ldrb	w6, [x1, #5]
   3dfd4:	ldrb	w8, [x1, #4]
   3dfd8:	ldrb	w10, [x1, #6]
   3dfdc:	ldrb	w1, [x1, #7]
   3dfe0:	orr	x8, x6, x8, lsl #8
   3dfe4:	ldrb	w9, [x22, #8]
   3dfe8:	ldrb	w6, [x22, #9]
   3dfec:	orr	x8, x10, x8, lsl #8
   3dff0:	ldrb	w19, [x22, #10]
   3dff4:	orr	x8, x1, x8, lsl #8
   3dff8:	ldrb	w1, [x22, #11]
   3dffc:	orr	x8, x9, x8, lsl #8
   3e000:	orr	x8, x6, x8, lsl #8
   3e004:	orr	x19, x19, x8, lsl #8
   3e008:	orr	x19, x1, x19, lsl #8
   3e00c:	cbz	x23, 3e05c <__asan_internal_strnlen@@Base+0x1b54>
   3e010:	ldr	x1, [x7]
   3e014:	cmp	x19, x1
   3e018:	b.hi	3e05c <__asan_internal_strnlen@@Base+0x1b54>  // b.pmore
   3e01c:	add	x22, x22, #0xc
   3e020:	mov	x2, x25
   3e024:	mov	x0, x22
   3e028:	mov	x4, x19
   3e02c:	mov	x3, x23
   3e030:	sub	x1, x20, #0xc
   3e034:	mov	w25, #0x1                   	// #1
   3e038:	bl	3d128 <__asan_internal_strnlen@@Base+0xc20>
   3e03c:	cbnz	w0, 3e074 <__asan_internal_strnlen@@Base+0x1b6c>
   3e040:	mov	w0, w25
   3e044:	ldp	x19, x20, [sp, #16]
   3e048:	ldp	x21, x22, [sp, #32]
   3e04c:	ldp	x23, x24, [sp, #48]
   3e050:	ldr	x25, [sp, #64]
   3e054:	ldp	x29, x30, [sp], #80
   3e058:	ret
   3e05c:	mov	x1, x19
   3e060:	bl	65b0 <__asan_backtrace_alloc@plt>
   3e064:	mov	x23, x0
   3e068:	cbnz	x0, 3e01c <__asan_internal_strnlen@@Base+0x1b14>
   3e06c:	mov	w25, #0x0                   	// #0
   3e070:	b	3e040 <__asan_internal_strnlen@@Base+0x1b38>
   3e074:	sub	x0, x20, #0x10
   3e078:	mov	x2, x19
   3e07c:	add	x0, x22, x0
   3e080:	mov	x1, x23
   3e084:	bl	3c570 <__asan_internal_strnlen@@Base+0x68>
   3e088:	cbz	w0, 3e040 <__asan_internal_strnlen@@Base+0x1b38>
   3e08c:	str	x23, [x21]
   3e090:	mov	w0, w25
   3e094:	str	x19, [x24]
   3e098:	ldp	x19, x20, [sp, #16]
   3e09c:	ldp	x21, x22, [sp, #32]
   3e0a0:	ldp	x23, x24, [sp, #48]
   3e0a4:	ldr	x25, [sp, #64]
   3e0a8:	ldp	x29, x30, [sp], #80
   3e0ac:	ret
   3e0b0:	sub	sp, sp, #0x4c0
   3e0b4:	stp	x29, x30, [sp, #80]
   3e0b8:	add	x29, sp, #0x50
   3e0bc:	stp	x21, x22, [sp, #112]
   3e0c0:	mov	x21, x0
   3e0c4:	ldr	w0, [sp, #1240]
   3e0c8:	stp	x19, x20, [sp, #96]
   3e0cc:	mov	w22, w2
   3e0d0:	mov	x19, x4
   3e0d4:	stp	x23, x24, [sp, #128]
   3e0d8:	mov	x20, x5
   3e0dc:	stp	x25, x26, [sp, #144]
   3e0e0:	mov	x26, x7
   3e0e4:	stp	x3, x6, [sp, #192]
   3e0e8:	str	x1, [sp, #208]
   3e0ec:	cbnz	w0, 3e0fc <__asan_internal_strnlen@@Base+0x1bf4>
   3e0f0:	ldr	x0, [sp, #1216]
   3e0f4:	str	wzr, [x7]
   3e0f8:	str	wzr, [x0]
   3e0fc:	add	x23, sp, #0x1b8
   3e100:	mov	x5, x20
   3e104:	mov	x6, x23
   3e108:	mov	x4, x19
   3e10c:	mov	w1, w22
   3e110:	mov	x0, x21
   3e114:	mov	x3, #0x40                  	// #64
   3e118:	mov	x2, #0x0                   	// #0
   3e11c:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e120:	cbnz	w0, 3e188 <__asan_internal_strnlen@@Base+0x1c80>
   3e124:	mov	w23, #0x0                   	// #0
   3e128:	mov	x24, #0x0                   	// #0
   3e12c:	nop
   3e130:	cbnz	w23, 3e1e0 <__asan_internal_strnlen@@Base+0x1cd8>
   3e134:	cbz	x24, 3e14c <__asan_internal_strnlen@@Base+0x1c44>
   3e138:	add	x1, x24, #0x18
   3e13c:	mov	x0, x21
   3e140:	mov	x3, x20
   3e144:	mov	x2, x19
   3e148:	bl	6430 <__asan_backtrace_release_view@plt>
   3e14c:	cmn	w22, #0x1
   3e150:	mov	w24, #0x0                   	// #0
   3e154:	b.eq	3e168 <__asan_internal_strnlen@@Base+0x1c60>  // b.none
   3e158:	mov	x2, x20
   3e15c:	mov	x1, x19
   3e160:	mov	w0, w22
   3e164:	bl	6960 <__asan_backtrace_close@plt>
   3e168:	mov	w0, w24
   3e16c:	ldp	x29, x30, [sp, #80]
   3e170:	ldp	x19, x20, [sp, #96]
   3e174:	ldp	x21, x22, [sp, #112]
   3e178:	ldp	x23, x24, [sp, #128]
   3e17c:	ldp	x25, x26, [sp, #144]
   3e180:	add	sp, sp, #0x4c0
   3e184:	ret
   3e188:	ldr	x1, [sp, #440]
   3e18c:	mov	x2, #0x40                  	// #64
   3e190:	add	x0, sp, #0x2c0
   3e194:	bl	64a0 <__asan_internal_memcpy@plt>
   3e198:	mov	x1, x23
   3e19c:	mov	x0, x21
   3e1a0:	mov	x3, x20
   3e1a4:	mov	x2, x19
   3e1a8:	bl	6430 <__asan_backtrace_release_view@plt>
   3e1ac:	ldr	w1, [sp, #704]
   3e1b0:	mov	w0, #0x457f                	// #17791
   3e1b4:	movk	w0, #0x464c, lsl #16
   3e1b8:	cmp	w1, w0
   3e1bc:	b.eq	3e1f8 <__asan_internal_strnlen@@Base+0x1cf0>  // b.none
   3e1c0:	mov	x0, x20
   3e1c4:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e1c8:	mov	w2, #0x0                   	// #0
   3e1cc:	add	x1, x1, #0x9f8
   3e1d0:	mov	w23, #0x0                   	// #0
   3e1d4:	mov	x24, #0x0                   	// #0
   3e1d8:	blr	x19
   3e1dc:	b	3e130 <__asan_internal_strnlen@@Base+0x1c28>
   3e1e0:	mov	x3, x20
   3e1e4:	mov	x2, x19
   3e1e8:	add	x1, sp, #0x300
   3e1ec:	mov	x0, x21
   3e1f0:	bl	6430 <__asan_backtrace_release_view@plt>
   3e1f4:	b	3e134 <__asan_internal_strnlen@@Base+0x1c2c>
   3e1f8:	ldrb	w0, [sp, #710]
   3e1fc:	cmp	w0, #0x1
   3e200:	b.ne	3e230 <__asan_internal_strnlen@@Base+0x1d28>  // b.any
   3e204:	ldrb	w0, [sp, #708]
   3e208:	cmp	w0, #0x2
   3e20c:	b.eq	3e250 <__asan_internal_strnlen@@Base+0x1d48>  // b.none
   3e210:	mov	x0, x20
   3e214:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e218:	mov	w2, #0x0                   	// #0
   3e21c:	add	x1, x1, #0xa48
   3e220:	mov	w23, #0x0                   	// #0
   3e224:	mov	x24, #0x0                   	// #0
   3e228:	blr	x19
   3e22c:	b	3e130 <__asan_internal_strnlen@@Base+0x1c28>
   3e230:	mov	x0, x20
   3e234:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e238:	mov	w2, #0x0                   	// #0
   3e23c:	add	x1, x1, #0xa18
   3e240:	mov	w23, #0x0                   	// #0
   3e244:	mov	x24, #0x0                   	// #0
   3e248:	blr	x19
   3e24c:	b	3e130 <__asan_internal_strnlen@@Base+0x1c28>
   3e250:	ldrb	w0, [sp, #709]
   3e254:	sub	w0, w0, #0x1
   3e258:	and	w0, w0, #0xff
   3e25c:	cmp	w0, #0x1
   3e260:	b.hi	3e358 <__asan_internal_strnlen@@Base+0x1e50>  // b.pmore
   3e264:	ldr	w0, [sp, #1232]
   3e268:	cbz	w0, 3e278 <__asan_internal_strnlen@@Base+0x1d70>
   3e26c:	ldrh	w0, [sp, #720]
   3e270:	cmp	w0, #0x3
   3e274:	b.eq	3f93c <__asan_internal_strnlen@@Base+0x3434>  // b.none
   3e278:	ldrh	w0, [sp, #764]
   3e27c:	ldrh	w24, [sp, #766]
   3e280:	ldr	x25, [sp, #744]
   3e284:	cmp	w0, #0x0
   3e288:	stp	x27, x28, [sp, #160]
   3e28c:	mov	w27, #0xffff                	// #65535
   3e290:	ccmp	w24, w27, #0x4, ne  // ne = any
   3e294:	str	w0, [sp, #256]
   3e298:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   3e29c:	b.ne	3e390 <__asan_internal_strnlen@@Base+0x1e88>  // b.any
   3e2a0:	ldr	w23, [sp, #256]
   3e2a4:	add	x0, sp, #0x1d0
   3e2a8:	mov	x6, x0
   3e2ac:	add	x2, x25, #0x40
   3e2b0:	sub	w3, w23, #0x1
   3e2b4:	mov	x5, x20
   3e2b8:	mov	x4, x19
   3e2bc:	mov	w1, w22
   3e2c0:	lsl	x3, x3, #6
   3e2c4:	str	x0, [sp, #240]
   3e2c8:	mov	x0, x21
   3e2cc:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e2d0:	cbz	w0, 3e384 <__asan_internal_strnlen@@Base+0x1e7c>
   3e2d4:	ldr	x27, [sp, #464]
   3e2d8:	sub	w3, w24, #0x1
   3e2dc:	add	x0, sp, #0x1e8
   3e2e0:	mov	x5, x20
   3e2e4:	mov	x6, x0
   3e2e8:	mov	x4, x19
   3e2ec:	add	x3, x27, x3, lsl #6
   3e2f0:	mov	w1, w22
   3e2f4:	str	x0, [sp, #248]
   3e2f8:	mov	x0, x21
   3e2fc:	str	x27, [sp, #344]
   3e300:	ldp	x2, x3, [x3, #24]
   3e304:	str	x3, [sp, #328]
   3e308:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e30c:	cbnz	w0, 3e400 <__asan_internal_strnlen@@Base+0x1ef8>
   3e310:	ldr	x1, [sp, #240]
   3e314:	mov	x3, x20
   3e318:	mov	x2, x19
   3e31c:	mov	x0, x21
   3e320:	mov	w23, #0x0                   	// #0
   3e324:	mov	x24, #0x0                   	// #0
   3e328:	bl	6430 <__asan_backtrace_release_view@plt>
   3e32c:	str	wzr, [sp, #224]
   3e330:	ldr	w0, [sp, #224]
   3e334:	cbz	w0, 3e378 <__asan_internal_strnlen@@Base+0x1e70>
   3e338:	mov	x3, x20
   3e33c:	mov	x2, x19
   3e340:	add	x1, sp, #0x230
   3e344:	mov	x0, x21
   3e348:	bl	6430 <__asan_backtrace_release_view@plt>
   3e34c:	ldp	x27, x28, [sp, #160]
   3e350:	cbz	w23, 3e134 <__asan_internal_strnlen@@Base+0x1c2c>
   3e354:	b	3e1e0 <__asan_internal_strnlen@@Base+0x1cd8>
   3e358:	mov	x0, x20
   3e35c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e360:	mov	w2, #0x0                   	// #0
   3e364:	add	x1, x1, #0xa70
   3e368:	mov	w23, #0x0                   	// #0
   3e36c:	mov	x24, #0x0                   	// #0
   3e370:	blr	x19
   3e374:	b	3e130 <__asan_internal_strnlen@@Base+0x1c28>
   3e378:	ldp	x27, x28, [sp, #160]
   3e37c:	cbz	w23, 3e134 <__asan_internal_strnlen@@Base+0x1c2c>
   3e380:	b	3e1e0 <__asan_internal_strnlen@@Base+0x1cd8>
   3e384:	mov	w23, #0x0                   	// #0
   3e388:	ldp	x27, x28, [sp, #160]
   3e38c:	b	3e128 <__asan_internal_strnlen@@Base+0x1c20>
   3e390:	add	x0, sp, #0x380
   3e394:	mov	x5, x20
   3e398:	mov	x6, x0
   3e39c:	mov	x4, x19
   3e3a0:	mov	x2, x25
   3e3a4:	mov	w1, w22
   3e3a8:	mov	x3, #0x8                   	// #8
   3e3ac:	str	x0, [sp, #264]
   3e3b0:	mov	x0, x21
   3e3b4:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e3b8:	mov	w23, w0
   3e3bc:	cbz	w0, 3e904 <__asan_internal_strnlen@@Base+0x23fc>
   3e3c0:	ldr	w1, [sp, #256]
   3e3c4:	ldr	x0, [sp, #896]
   3e3c8:	cbz	w1, 3e888 <__asan_internal_strnlen@@Base+0x2380>
   3e3cc:	ldr	w24, [x0, #40]
   3e3d0:	mov	w1, #0xffff                	// #65535
   3e3d4:	ldr	w0, [sp, #256]
   3e3d8:	cmp	w24, w0
   3e3dc:	sub	w0, w24, #0x100
   3e3e0:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
   3e3e4:	csel	w24, w0, w24, hi  // hi = pmore
   3e3e8:	ldr	x1, [sp, #264]
   3e3ec:	mov	x3, x20
   3e3f0:	mov	x2, x19
   3e3f4:	mov	x0, x21
   3e3f8:	bl	6430 <__asan_backtrace_release_view@plt>
   3e3fc:	b	3e2a0 <__asan_internal_strnlen@@Base+0x1d98>
   3e400:	add	x0, sp, #0x380
   3e404:	mov	x2, #0x140                 	// #320
   3e408:	mov	w1, #0x0                   	// #0
   3e40c:	str	x0, [sp, #264]
   3e410:	ldr	x28, [sp, #488]
   3e414:	bl	6530 <__asan_internal_memset@plt>
   3e418:	ldr	w0, [sp, #1240]
   3e41c:	cmp	w23, #0x1
   3e420:	eor	w0, w0, #0x1
   3e424:	and	w0, w0, #0x1
   3e428:	str	w0, [sp, #388]
   3e42c:	b.ls	3f8f8 <__asan_internal_strnlen@@Base+0x33f0>  // b.plast
   3e430:	ldr	x1, [sp, #1248]
   3e434:	mov	x24, #0x0                   	// #0
   3e438:	mov	w2, #0x0                   	// #0
   3e43c:	str	x21, [sp, #288]
   3e440:	cmp	x1, #0x0
   3e444:	add	x1, sp, #0x290
   3e448:	csinc	w0, w0, wzr, eq  // eq = none
   3e44c:	str	w0, [sp, #232]
   3e450:	add	x0, sp, #0x2a8
   3e454:	stp	x26, x1, [sp, #392]
   3e458:	add	x1, sp, #0x388
   3e45c:	str	x0, [sp, #408]
   3e460:	adrp	x0, 65000 <__asan_backtrace_vector_release@@Base+0x24b10>
   3e464:	add	x0, x0, #0xc00
   3e468:	str	x1, [sp, #280]
   3e46c:	ldr	x26, [sp, #328]
   3e470:	mov	w1, #0x1                   	// #1
   3e474:	mov	x21, x0
   3e478:	str	w22, [sp, #300]
   3e47c:	mov	w22, w1
   3e480:	str	x24, [sp, #336]
   3e484:	mov	w24, w2
   3e488:	mov	w25, #0x0                   	// #0
   3e48c:	str	wzr, [sp, #216]
   3e490:	str	wzr, [sp, #224]
   3e494:	str	wzr, [sp, #272]
   3e498:	stp	x19, x20, [sp, #304]
   3e49c:	str	xzr, [sp, #320]
   3e4a0:	str	xzr, [sp, #352]
   3e4a4:	str	wzr, [sp, #360]
   3e4a8:	str	wzr, [sp, #364]
   3e4ac:	stp	xzr, xzr, [sp, #368]
   3e4b0:	str	wzr, [sp, #384]
   3e4b4:	nop
   3e4b8:	ldr	w0, [x27, #4]
   3e4bc:	cmp	w0, #0x2
   3e4c0:	b.eq	3e6f4 <__asan_internal_strnlen@@Base+0x21ec>  // b.none
   3e4c4:	cmp	w0, #0xb
   3e4c8:	csel	w24, w24, w22, ne  // ne = any
   3e4cc:	ldr	w19, [x27]
   3e4d0:	cmp	x19, x26
   3e4d4:	b.cs	3e854 <__asan_internal_strnlen@@Base+0x234c>  // b.hs, b.nlast
   3e4d8:	add	x19, x28, x19
   3e4dc:	mov	x23, #0x0                   	// #0
   3e4e0:	ldr	x1, [x21, x23, lsl #3]
   3e4e4:	mov	w20, w23
   3e4e8:	mov	x0, x19
   3e4ec:	add	x23, x23, #0x1
   3e4f0:	bl	67f0 <__asan_internal_strcmp@plt>
   3e4f4:	cbz	w0, 3e6c4 <__asan_internal_strnlen@@Base+0x21bc>
   3e4f8:	cmp	x23, #0xa
   3e4fc:	b.ne	3e4e0 <__asan_internal_strnlen@@Base+0x1fd8>  // b.any
   3e500:	ldr	w0, [sp, #232]
   3e504:	cbz	w0, 3e538 <__asan_internal_strnlen@@Base+0x2030>
   3e508:	ldr	w0, [sp, #224]
   3e50c:	cbz	w0, 3e7d8 <__asan_internal_strnlen@@Base+0x22d0>
   3e510:	ldr	w1, [sp, #216]
   3e514:	ldr	w0, [sp, #1240]
   3e518:	orr	w0, w0, w1
   3e51c:	cbnz	w0, 3e538 <__asan_internal_strnlen@@Base+0x2030>
   3e520:	mov	x0, x19
   3e524:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e528:	add	x1, x1, #0xad8
   3e52c:	bl	67f0 <__asan_internal_strcmp@plt>
   3e530:	str	wzr, [sp, #216]
   3e534:	cbz	w0, 3e648 <__asan_internal_strnlen@@Base+0x2140>
   3e538:	cbz	w25, 3e768 <__asan_internal_strnlen@@Base+0x2260>
   3e53c:	ldrh	w0, [sp, #722]
   3e540:	cmp	w0, #0x15
   3e544:	b.eq	3e6fc <__asan_internal_strnlen@@Base+0x21f4>  // b.none
   3e548:	ldr	w0, [sp, #256]
   3e54c:	add	w22, w22, #0x1
   3e550:	add	x27, x27, #0x40
   3e554:	cmp	w0, w22
   3e558:	b.ne	3e4b8 <__asan_internal_strnlen@@Base+0x1fb0>  // b.any
   3e55c:	ldr	w0, [sp, #272]
   3e560:	ldr	w1, [sp, #388]
   3e564:	cmp	w0, #0x0
   3e568:	str	w25, [sp, #232]
   3e56c:	csel	w0, w0, w24, ne  // ne = any
   3e570:	ldr	w22, [sp, #300]
   3e574:	cmp	w0, #0x0
   3e578:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3e57c:	ldr	x21, [sp, #288]
   3e580:	ldp	x19, x20, [sp, #304]
   3e584:	ldr	x24, [sp, #336]
   3e588:	ldr	x26, [sp, #392]
   3e58c:	b.eq	3ee98 <__asan_internal_strnlen@@Base+0x2990>  // b.none
   3e590:	ldr	x1, [sp, #344]
   3e594:	sub	w0, w0, #0x1
   3e598:	add	x25, x1, x0, lsl #6
   3e59c:	ldr	w0, [sp, #256]
   3e5a0:	ldr	w27, [x25, #40]
   3e5a4:	cmp	w0, w27
   3e5a8:	b.hi	3e910 <__asan_internal_strnlen@@Base+0x2408>  // b.pmore
   3e5ac:	mov	w23, #0x0                   	// #0
   3e5b0:	mov	w28, #0x0                   	// #0
   3e5b4:	mov	x0, x20
   3e5b8:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e5bc:	mov	w2, #0x0                   	// #0
   3e5c0:	add	x1, x1, #0xb08
   3e5c4:	blr	x19
   3e5c8:	ldr	x1, [sp, #240]
   3e5cc:	mov	x3, x20
   3e5d0:	mov	x2, x19
   3e5d4:	mov	x0, x21
   3e5d8:	bl	6430 <__asan_backtrace_release_view@plt>
   3e5dc:	ldr	x1, [sp, #248]
   3e5e0:	mov	x3, x20
   3e5e4:	mov	x2, x19
   3e5e8:	mov	x0, x21
   3e5ec:	bl	6430 <__asan_backtrace_release_view@plt>
   3e5f0:	cbz	w28, 3e608 <__asan_internal_strnlen@@Base+0x2100>
   3e5f4:	mov	x3, x20
   3e5f8:	mov	x2, x19
   3e5fc:	add	x1, sp, #0x200
   3e600:	mov	x0, x21
   3e604:	bl	6430 <__asan_backtrace_release_view@plt>
   3e608:	cbnz	w23, 3e6a8 <__asan_internal_strnlen@@Base+0x21a0>
   3e60c:	ldr	w0, [sp, #216]
   3e610:	cbz	w0, 3e628 <__asan_internal_strnlen@@Base+0x2120>
   3e614:	mov	x3, x20
   3e618:	mov	x2, x19
   3e61c:	add	x1, sp, #0x248
   3e620:	mov	x0, x21
   3e624:	bl	6430 <__asan_backtrace_release_view@plt>
   3e628:	ldr	w0, [sp, #232]
   3e62c:	cbz	w0, 3e330 <__asan_internal_strnlen@@Base+0x1e28>
   3e630:	mov	x3, x20
   3e634:	mov	x2, x19
   3e638:	add	x1, sp, #0x260
   3e63c:	mov	x0, x21
   3e640:	bl	6430 <__asan_backtrace_release_view@plt>
   3e644:	b	3e330 <__asan_internal_strnlen@@Base+0x1e28>
   3e648:	ldp	x2, x3, [x27, #24]
   3e64c:	add	x6, sp, #0x248
   3e650:	ldp	x4, x5, [sp, #304]
   3e654:	ldr	w1, [sp, #300]
   3e658:	ldr	x0, [sp, #288]
   3e65c:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e660:	mov	w20, w0
   3e664:	cbz	w0, 3f3d4 <__asan_internal_strnlen@@Base+0x2ecc>
   3e668:	ldr	x1, [x27, #32]
   3e66c:	mov	w0, #0x1                   	// #1
   3e670:	ldr	x20, [sp, #584]
   3e674:	str	w0, [sp, #216]
   3e678:	mov	x0, x20
   3e67c:	bl	6800 <__asan_internal_strnlen@plt>
   3e680:	add	x0, x0, #0x3
   3e684:	ldr	x1, [x27, #32]
   3e688:	and	x0, x0, #0xfffffffffffffffc
   3e68c:	add	x2, x0, #0x4
   3e690:	cmp	x2, x1
   3e694:	b.hi	3e538 <__asan_internal_strnlen@@Base+0x2030>  // b.pmore
   3e698:	ldr	w0, [x20, x0]
   3e69c:	str	w0, [sp, #360]
   3e6a0:	str	x20, [sp, #376]
   3e6a4:	b	3e538 <__asan_internal_strnlen@@Base+0x2030>
   3e6a8:	mov	w23, #0x0                   	// #0
   3e6ac:	mov	x3, x20
   3e6b0:	mov	x2, x19
   3e6b4:	add	x1, sp, #0x218
   3e6b8:	mov	x0, x21
   3e6bc:	bl	6430 <__asan_backtrace_release_view@plt>
   3e6c0:	b	3e60c <__asan_internal_strnlen@@Base+0x2104>
   3e6c4:	ldr	x2, [sp, #264]
   3e6c8:	sbfiz	x20, x20, #5, #32
   3e6cc:	ldr	x0, [x27, #24]
   3e6d0:	add	x1, sp, #0x398
   3e6d4:	str	x0, [x2, x20]
   3e6d8:	ldr	x2, [sp, #280]
   3e6dc:	ldr	x0, [x27, #32]
   3e6e0:	str	x0, [x2, x20]
   3e6e4:	ldr	x0, [x27, #8]
   3e6e8:	ubfx	w0, w0, #11, #1
   3e6ec:	str	w0, [x1, x20]
   3e6f0:	b	3e500 <__asan_internal_strnlen@@Base+0x1ff8>
   3e6f4:	str	w22, [sp, #272]
   3e6f8:	b	3e4cc <__asan_internal_strnlen@@Base+0x1fc4>
   3e6fc:	ldr	w0, [sp, #752]
   3e700:	tbnz	w0, #1, 3e548 <__asan_internal_strnlen@@Base+0x2040>
   3e704:	ldr	w0, [x27, #4]
   3e708:	cmp	w0, #0x1
   3e70c:	b.ne	3e548 <__asan_internal_strnlen@@Base+0x2040>  // b.any
   3e710:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e714:	mov	x0, x19
   3e718:	add	x1, x1, #0xb00
   3e71c:	bl	67f0 <__asan_internal_strcmp@plt>
   3e720:	cbnz	w0, 3e548 <__asan_internal_strnlen@@Base+0x2040>
   3e724:	ldp	x2, x3, [x27, #24]
   3e728:	ldp	x4, x5, [sp, #304]
   3e72c:	ldr	w1, [sp, #300]
   3e730:	ldr	x0, [sp, #288]
   3e734:	ldr	x6, [sp, #408]
   3e738:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e73c:	mov	w20, w0
   3e740:	cbz	w0, 3f3d4 <__asan_internal_strnlen@@Base+0x2ecc>
   3e744:	ldr	x0, [x27, #16]
   3e748:	str	x0, [sp, #656]
   3e74c:	ldr	x0, [sp, #400]
   3e750:	str	x0, [sp, #336]
   3e754:	ldr	x0, [x27, #32]
   3e758:	str	x0, [sp, #672]
   3e75c:	ldr	x0, [sp, #680]
   3e760:	str	x0, [sp, #664]
   3e764:	b	3e548 <__asan_internal_strnlen@@Base+0x2040>
   3e768:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e76c:	mov	x0, x19
   3e770:	add	x1, x1, #0xae8
   3e774:	bl	67f0 <__asan_internal_strcmp@plt>
   3e778:	cbnz	w0, 3e53c <__asan_internal_strnlen@@Base+0x2034>
   3e77c:	ldp	x2, x3, [x27, #24]
   3e780:	add	x6, sp, #0x260
   3e784:	ldp	x4, x5, [sp, #304]
   3e788:	ldr	w1, [sp, #300]
   3e78c:	ldr	x0, [sp, #288]
   3e790:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e794:	mov	w20, w0
   3e798:	cbz	w0, 3f3d4 <__asan_internal_strnlen@@Base+0x2ecc>
   3e79c:	ldr	x1, [x27, #32]
   3e7a0:	mov	w25, #0x1                   	// #1
   3e7a4:	ldr	x20, [sp, #608]
   3e7a8:	str	x20, [sp, #320]
   3e7ac:	mov	x0, x20
   3e7b0:	bl	6800 <__asan_internal_strnlen@plt>
   3e7b4:	ldr	x1, [x27, #32]
   3e7b8:	cmp	x1, x0
   3e7bc:	b.ls	3e53c <__asan_internal_strnlen@@Base+0x2034>  // b.plast
   3e7c0:	add	x0, x0, #0x1
   3e7c4:	sub	w1, w1, w0
   3e7c8:	add	x0, x20, x0
   3e7cc:	str	x0, [sp, #352]
   3e7d0:	str	w1, [sp, #364]
   3e7d4:	b	3e53c <__asan_internal_strnlen@@Base+0x2034>
   3e7d8:	mov	x0, x19
   3e7dc:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e7e0:	add	x1, x1, #0xab8
   3e7e4:	bl	67f0 <__asan_internal_strcmp@plt>
   3e7e8:	mov	w20, w0
   3e7ec:	cbnz	w0, 3e510 <__asan_internal_strnlen@@Base+0x2008>
   3e7f0:	ldp	x2, x3, [x27, #24]
   3e7f4:	add	x6, sp, #0x230
   3e7f8:	ldp	x4, x5, [sp, #304]
   3e7fc:	ldr	w1, [sp, #300]
   3e800:	ldr	x0, [sp, #288]
   3e804:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e808:	cbz	w0, 3f74c <__asan_internal_strnlen@@Base+0x3244>
   3e80c:	ldr	x3, [sp, #560]
   3e810:	ldr	w0, [x3, #8]
   3e814:	cmp	w0, #0x3
   3e818:	b.eq	3e89c <__asan_internal_strnlen@@Base+0x2394>  // b.none
   3e81c:	ldr	w0, [sp, #1256]
   3e820:	cbz	w0, 3e848 <__asan_internal_strnlen@@Base+0x2340>
   3e824:	ldr	w0, [sp, #384]
   3e828:	ldr	w1, [sp, #1256]
   3e82c:	cmp	w0, w1
   3e830:	b.ne	3f7bc <__asan_internal_strnlen@@Base+0x32b4>  // b.any
   3e834:	mov	w2, w0
   3e838:	ldr	x0, [sp, #368]
   3e83c:	ldr	x1, [sp, #1248]
   3e840:	bl	68f0 <__asan_internal_memcmp@plt>
   3e844:	cbnz	w0, 3f7bc <__asan_internal_strnlen@@Base+0x32b4>
   3e848:	mov	w0, #0x1                   	// #1
   3e84c:	str	w0, [sp, #224]
   3e850:	b	3e510 <__asan_internal_strnlen@@Base+0x2008>
   3e854:	ldp	x19, x20, [sp, #304]
   3e858:	str	w25, [sp, #232]
   3e85c:	ldr	w22, [sp, #300]
   3e860:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e864:	mov	w2, #0x0                   	// #0
   3e868:	add	x1, x1, #0xa98
   3e86c:	mov	w23, #0x0                   	// #0
   3e870:	mov	w28, #0x0                   	// #0
   3e874:	ldr	x21, [sp, #288]
   3e878:	mov	x0, x20
   3e87c:	ldr	x24, [sp, #336]
   3e880:	blr	x19
   3e884:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3e888:	ldr	w1, [x0, #32]
   3e88c:	cmp	w24, w27
   3e890:	str	w1, [sp, #256]
   3e894:	b.ne	3e3e8 <__asan_internal_strnlen@@Base+0x1ee0>  // b.any
   3e898:	b	3e3cc <__asan_internal_strnlen@@Base+0x1ec4>
   3e89c:	ldr	w0, [x3]
   3e8a0:	cmp	w0, #0x4
   3e8a4:	b.ne	3e81c <__asan_internal_strnlen@@Base+0x2314>  // b.any
   3e8a8:	add	x4, x3, #0xc
   3e8ac:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e8b0:	mov	x0, x4
   3e8b4:	add	x1, x1, #0xad0
   3e8b8:	mov	x2, #0x4                   	// #4
   3e8bc:	str	x4, [sp, #224]
   3e8c0:	str	x3, [sp, #328]
   3e8c4:	bl	6830 <__asan_internal_strncmp@plt>
   3e8c8:	cbnz	w0, 3e81c <__asan_internal_strnlen@@Base+0x2314>
   3e8cc:	ldr	x3, [sp, #328]
   3e8d0:	ldp	w0, w2, [x3]
   3e8d4:	ldr	x3, [x27, #32]
   3e8d8:	add	w0, w0, #0x3
   3e8dc:	and	w0, w0, #0xfffffffc
   3e8e0:	add	w1, w2, #0xc
   3e8e4:	add	w1, w1, w0
   3e8e8:	cmp	x3, x1
   3e8ec:	b.hi	3e81c <__asan_internal_strnlen@@Base+0x2314>  // b.pmore
   3e8f0:	ldr	x4, [sp, #224]
   3e8f4:	str	w2, [sp, #384]
   3e8f8:	add	x0, x4, w0, uxtw
   3e8fc:	str	x0, [sp, #368]
   3e900:	b	3e81c <__asan_internal_strnlen@@Base+0x2314>
   3e904:	mov	x24, #0x0                   	// #0
   3e908:	ldp	x27, x28, [sp, #160]
   3e90c:	b	3e130 <__asan_internal_strnlen@@Base+0x1c28>
   3e910:	ldp	x2, x3, [x25, #24]
   3e914:	add	x0, sp, #0x200
   3e918:	mov	x6, x0
   3e91c:	mov	x5, x20
   3e920:	mov	x4, x19
   3e924:	mov	w1, w22
   3e928:	mov	w23, #0x0                   	// #0
   3e92c:	str	x0, [sp, #256]
   3e930:	mov	x0, x21
   3e934:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e938:	mov	w28, w0
   3e93c:	cbz	w0, 3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3e940:	ldr	x0, [sp, #344]
   3e944:	sub	w7, w27, #0x1
   3e948:	add	x6, sp, #0x218
   3e94c:	mov	x5, x20
   3e950:	mov	x4, x19
   3e954:	mov	w1, w22
   3e958:	add	x7, x0, x7, lsl #6
   3e95c:	mov	x0, x21
   3e960:	str	x7, [sp, #272]
   3e964:	ldp	x2, x3, [x7, #24]
   3e968:	bl	67b0 <__asan_backtrace_get_view@plt>
   3e96c:	mov	w23, w0
   3e970:	cbz	w0, 3f744 <__asan_internal_strnlen@@Base+0x323c>
   3e974:	mov	x3, x20
   3e978:	mov	x2, x19
   3e97c:	mov	x0, x21
   3e980:	mov	x1, #0x18                  	// #24
   3e984:	bl	65b0 <__asan_backtrace_alloc@plt>
   3e988:	mov	x23, x0
   3e98c:	cbz	x0, 3fb14 <__asan_internal_strnlen@@Base+0x360c>
   3e990:	ldr	x0, [x25, #32]
   3e994:	mov	x27, #0x18                  	// #24
   3e998:	ldr	x7, [sp, #272]
   3e99c:	cmp	x0, #0x17
   3e9a0:	udiv	x27, x0, x27
   3e9a4:	ldr	x28, [sp, #512]
   3e9a8:	ldr	x6, [x7, #32]
   3e9ac:	ldr	x4, [sp, #536]
   3e9b0:	b.ls	3fb94 <__asan_internal_strnlen@@Base+0x368c>  // b.plast
   3e9b4:	cmp	x0, #0x17f
   3e9b8:	b.ls	3fb84 <__asan_internal_strnlen@@Base+0x367c>  // b.plast
   3e9bc:	lsr	x1, x27, #4
   3e9c0:	mov	x2, #0x180                 	// #384
   3e9c4:	movi	v4.4s, #0x0
   3e9c8:	mov	x0, x28
   3e9cc:	movi	v17.16b, #0xf
   3e9d0:	str	d8, [sp, #176]
   3e9d4:	mvni	v6.4s, #0x0
   3e9d8:	madd	x1, x1, x2, x28
   3e9dc:	movi	v5.4s, #0x1
   3e9e0:	adrp	x2, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3e9e4:	ldr	q16, [x2, #3072]
   3e9e8:	ldr	b3, [x0, #28]
   3e9ec:	ldr	b0, [x0, #4]
   3e9f0:	ldr	b2, [x0, #52]
   3e9f4:	ldr	b1, [x0, #76]
   3e9f8:	mov	v0.b[1], v3.b[0]
   3e9fc:	ldr	b7, [x0, #100]
   3ea00:	ldr	b23, [x0, #124]
   3ea04:	ldr	b24, [x0, #148]
   3ea08:	ldr	b21, [x0, #172]
   3ea0c:	mov	v0.b[2], v2.b[0]
   3ea10:	ldr	b31, [x0, #196]
   3ea14:	ldr	b28, [x0, #220]
   3ea18:	ldr	b25, [x0, #244]
   3ea1c:	ldr	b22, [x0, #268]
   3ea20:	mov	v0.b[3], v1.b[0]
   3ea24:	ldr	b20, [x0, #292]
   3ea28:	ldr	h3, [x0, #30]
   3ea2c:	ldr	h2, [x0, #6]
   3ea30:	ldr	b18, [x0, #316]
   3ea34:	mov	v0.b[4], v7.b[0]
   3ea38:	ldr	h1, [x0, #54]
   3ea3c:	mov	v2.h[1], v3.h[0]
   3ea40:	ldr	b7, [x0, #340]
   3ea44:	ldr	h8, [x0, #78]
   3ea48:	ldr	b3, [x0, #364]
   3ea4c:	mov	v0.b[5], v23.b[0]
   3ea50:	ldr	h23, [x0, #222]
   3ea54:	mov	v2.h[2], v1.h[0]
   3ea58:	ldr	h1, [x0, #198]
   3ea5c:	ldr	h19, [x0, #102]
   3ea60:	ldr	h29, [x0, #270]
   3ea64:	mov	v0.b[6], v24.b[0]
   3ea68:	ldr	h30, [x0, #126]
   3ea6c:	mov	v1.h[1], v23.h[0]
   3ea70:	ldr	h26, [x0, #294]
   3ea74:	mov	v2.h[3], v8.h[0]
   3ea78:	ldr	h8, [x0, #246]
   3ea7c:	ldr	h27, [x0, #150]
   3ea80:	add	x0, x0, #0x180
   3ea84:	mov	v0.b[7], v21.b[0]
   3ea88:	ldur	h23, [x0, #-66]
   3ea8c:	mov	v1.h[2], v8.h[0]
   3ea90:	ldur	h24, [x0, #-210]
   3ea94:	mov	v2.h[4], v19.h[0]
   3ea98:	ldur	h21, [x0, #-42]
   3ea9c:	ldur	h19, [x0, #-18]
   3eaa0:	cmp	x1, x0
   3eaa4:	mov	v0.b[8], v31.b[0]
   3eaa8:	mov	v1.h[3], v29.h[0]
   3eaac:	mov	v2.h[5], v30.h[0]
   3eab0:	mov	v0.b[9], v28.b[0]
   3eab4:	mov	v1.h[4], v26.h[0]
   3eab8:	mov	v2.h[6], v27.h[0]
   3eabc:	mov	v0.b[10], v25.b[0]
   3eac0:	mov	v1.h[5], v23.h[0]
   3eac4:	mov	v2.h[7], v24.h[0]
   3eac8:	mov	v0.b[11], v22.b[0]
   3eacc:	mov	v1.h[6], v21.h[0]
   3ead0:	cmeq	v2.8h, v2.8h, #0
   3ead4:	mov	v0.b[12], v20.b[0]
   3ead8:	mov	v1.h[7], v19.h[0]
   3eadc:	mov	v0.b[13], v18.b[0]
   3eae0:	cmeq	v1.8h, v1.8h, #0
   3eae4:	mov	v0.b[14], v7.b[0]
   3eae8:	mov	v0.b[15], v3.b[0]
   3eaec:	and	v0.16b, v0.16b, v17.16b
   3eaf0:	uxtl	v3.8h, v0.8b
   3eaf4:	uxtl2	v0.8h, v0.16b
   3eaf8:	uaddw	v18.4s, v6.4s, v3.4h
   3eafc:	uaddw2	v3.4s, v6.4s, v3.8h
   3eb00:	uaddw	v7.4s, v6.4s, v0.4h
   3eb04:	uaddw2	v0.4s, v6.4s, v0.8h
   3eb08:	cmhs	v18.4s, v5.4s, v18.4s
   3eb0c:	cmhs	v3.4s, v5.4s, v3.4s
   3eb10:	cmhs	v7.4s, v5.4s, v7.4s
   3eb14:	cmhs	v0.4s, v5.4s, v0.4s
   3eb18:	xtn	v19.4h, v18.4s
   3eb1c:	xtn2	v19.8h, v3.4s
   3eb20:	xtn	v3.4h, v7.4s
   3eb24:	xtn2	v3.8h, v0.4s
   3eb28:	bic	v2.16b, v19.16b, v2.16b
   3eb2c:	bic	v0.16b, v3.16b, v1.16b
   3eb30:	sxtl	v7.4s, v2.4h
   3eb34:	sxtl2	v1.4s, v2.8h
   3eb38:	sxtl	v3.4s, v0.4h
   3eb3c:	sxtl2	v0.4s, v0.8h
   3eb40:	sxtl	v2.2d, v7.2s
   3eb44:	and	v2.16b, v16.16b, v2.16b
   3eb48:	ssubw2	v2.2d, v2.2d, v7.4s
   3eb4c:	ssubw	v2.2d, v2.2d, v1.2s
   3eb50:	ssubw2	v1.2d, v2.2d, v1.4s
   3eb54:	ssubw	v1.2d, v1.2d, v3.2s
   3eb58:	ssubw2	v1.2d, v1.2d, v3.4s
   3eb5c:	ssubw	v1.2d, v1.2d, v0.2s
   3eb60:	ssubw2	v0.2d, v1.2d, v0.4s
   3eb64:	add	v4.2d, v4.2d, v0.2d
   3eb68:	b.ne	3e9e8 <__asan_internal_strnlen@@Base+0x24e0>  // b.any
   3eb6c:	addp	d4, v4.2d
   3eb70:	and	x1, x27, #0xfffffffffffffff0
   3eb74:	mov	x0, #0x18                  	// #24
   3eb78:	cmp	x1, x27
   3eb7c:	ldr	d8, [sp, #176]
   3eb80:	madd	x0, x1, x0, x28
   3eb84:	mov	x25, v4.d[0]
   3eb88:	b.eq	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.none
   3eb8c:	ldrb	w2, [x0, #4]
   3eb90:	and	w2, w2, #0xf
   3eb94:	sub	w2, w2, #0x1
   3eb98:	cmp	w2, #0x1
   3eb9c:	b.ls	3f9fc <__asan_internal_strnlen@@Base+0x34f4>  // b.plast
   3eba0:	add	x2, x1, #0x1
   3eba4:	cmp	x27, x2
   3eba8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ebac:	ldrb	w2, [x0, #28]
   3ebb0:	and	w2, w2, #0xf
   3ebb4:	sub	w2, w2, #0x1
   3ebb8:	cmp	w2, #0x1
   3ebbc:	b.ls	3f9ec <__asan_internal_strnlen@@Base+0x34e4>  // b.plast
   3ebc0:	add	x2, x1, #0x2
   3ebc4:	cmp	x27, x2
   3ebc8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ebcc:	ldrb	w2, [x0, #52]
   3ebd0:	and	w2, w2, #0xf
   3ebd4:	sub	w2, w2, #0x1
   3ebd8:	cmp	w2, #0x1
   3ebdc:	b.ls	3f9dc <__asan_internal_strnlen@@Base+0x34d4>  // b.plast
   3ebe0:	add	x2, x1, #0x3
   3ebe4:	cmp	x27, x2
   3ebe8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ebec:	ldrb	w2, [x0, #76]
   3ebf0:	and	w2, w2, #0xf
   3ebf4:	sub	w2, w2, #0x1
   3ebf8:	cmp	w2, #0x1
   3ebfc:	b.ls	3f9cc <__asan_internal_strnlen@@Base+0x34c4>  // b.plast
   3ec00:	add	x2, x1, #0x4
   3ec04:	cmp	x27, x2
   3ec08:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ec0c:	ldrb	w2, [x0, #100]
   3ec10:	and	w2, w2, #0xf
   3ec14:	sub	w2, w2, #0x1
   3ec18:	cmp	w2, #0x1
   3ec1c:	b.ls	3fb74 <__asan_internal_strnlen@@Base+0x366c>  // b.plast
   3ec20:	add	x2, x1, #0x5
   3ec24:	cmp	x27, x2
   3ec28:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ec2c:	ldrb	w2, [x0, #124]
   3ec30:	and	w2, w2, #0xf
   3ec34:	sub	w2, w2, #0x1
   3ec38:	cmp	w2, #0x1
   3ec3c:	b.ls	3fb64 <__asan_internal_strnlen@@Base+0x365c>  // b.plast
   3ec40:	add	x2, x1, #0x6
   3ec44:	cmp	x27, x2
   3ec48:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ec4c:	ldrb	w2, [x0, #148]
   3ec50:	and	w2, w2, #0xf
   3ec54:	sub	w2, w2, #0x1
   3ec58:	cmp	w2, #0x1
   3ec5c:	b.ls	3fb54 <__asan_internal_strnlen@@Base+0x364c>  // b.plast
   3ec60:	add	x2, x1, #0x7
   3ec64:	cmp	x27, x2
   3ec68:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ec6c:	ldrb	w2, [x0, #172]
   3ec70:	and	w2, w2, #0xf
   3ec74:	sub	w2, w2, #0x1
   3ec78:	cmp	w2, #0x1
   3ec7c:	b.ls	3fb44 <__asan_internal_strnlen@@Base+0x363c>  // b.plast
   3ec80:	add	x2, x1, #0x8
   3ec84:	cmp	x27, x2
   3ec88:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ec8c:	ldrb	w2, [x0, #196]
   3ec90:	and	w2, w2, #0xf
   3ec94:	sub	w2, w2, #0x1
   3ec98:	cmp	w2, #0x1
   3ec9c:	b.ls	3fc08 <__asan_internal_strnlen@@Base+0x3700>  // b.plast
   3eca0:	add	x2, x1, #0x9
   3eca4:	cmp	x27, x2
   3eca8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ecac:	ldrb	w2, [x0, #220]
   3ecb0:	and	w2, w2, #0xf
   3ecb4:	sub	w2, w2, #0x1
   3ecb8:	cmp	w2, #0x1
   3ecbc:	b.ls	3fbf8 <__asan_internal_strnlen@@Base+0x36f0>  // b.plast
   3ecc0:	add	x2, x1, #0xa
   3ecc4:	cmp	x27, x2
   3ecc8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3eccc:	ldrb	w2, [x0, #244]
   3ecd0:	and	w2, w2, #0xf
   3ecd4:	sub	w2, w2, #0x1
   3ecd8:	cmp	w2, #0x1
   3ecdc:	b.ls	3fbe8 <__asan_internal_strnlen@@Base+0x36e0>  // b.plast
   3ece0:	add	x2, x1, #0xb
   3ece4:	cmp	x27, x2
   3ece8:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ecec:	ldrb	w2, [x0, #268]
   3ecf0:	and	w2, w2, #0xf
   3ecf4:	sub	w2, w2, #0x1
   3ecf8:	cmp	w2, #0x1
   3ecfc:	b.ls	3fbd8 <__asan_internal_strnlen@@Base+0x36d0>  // b.plast
   3ed00:	add	x2, x1, #0xc
   3ed04:	cmp	x27, x2
   3ed08:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ed0c:	ldrb	w2, [x0, #292]
   3ed10:	and	w2, w2, #0xf
   3ed14:	sub	w2, w2, #0x1
   3ed18:	cmp	w2, #0x1
   3ed1c:	b.ls	3fbc8 <__asan_internal_strnlen@@Base+0x36c0>  // b.plast
   3ed20:	add	x2, x1, #0xd
   3ed24:	cmp	x27, x2
   3ed28:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ed2c:	ldrb	w2, [x0, #316]
   3ed30:	and	w2, w2, #0xf
   3ed34:	sub	w2, w2, #0x1
   3ed38:	cmp	w2, #0x1
   3ed3c:	b.ls	3fbb8 <__asan_internal_strnlen@@Base+0x36b0>  // b.plast
   3ed40:	add	x1, x1, #0xe
   3ed44:	cmp	x27, x1
   3ed48:	b.ls	3ed64 <__asan_internal_strnlen@@Base+0x285c>  // b.plast
   3ed4c:	ldrb	w1, [x0, #340]
   3ed50:	add	x0, x0, #0x150
   3ed54:	and	w1, w1, #0xf
   3ed58:	sub	w1, w1, #0x1
   3ed5c:	cmp	w1, #0x1
   3ed60:	b.ls	3fb04 <__asan_internal_strnlen@@Base+0x35fc>  // b.plast
   3ed64:	mov	x7, #0x18                  	// #24
   3ed68:	mov	x3, x20
   3ed6c:	mov	x2, x19
   3ed70:	mov	x0, x21
   3ed74:	mul	x8, x25, x7
   3ed78:	str	x6, [sp, #288]
   3ed7c:	stp	x8, x4, [sp, #272]
   3ed80:	mov	x1, x8
   3ed84:	bl	65b0 <__asan_backtrace_alloc@plt>
   3ed88:	mov	x5, x0
   3ed8c:	mov	x7, #0x18                  	// #24
   3ed90:	ldp	x8, x4, [sp, #272]
   3ed94:	ldr	x6, [sp, #288]
   3ed98:	cbz	x0, 3f854 <__asan_internal_strnlen@@Base+0x334c>
   3ed9c:	cbz	x24, 3f878 <__asan_internal_strnlen@@Base+0x3370>
   3eda0:	mov	x1, #0x0                   	// #0
   3eda4:	mov	w3, #0x0                   	// #0
   3eda8:	ldrb	w0, [x28, #4]
   3edac:	add	x1, x1, #0x1
   3edb0:	and	w0, w0, #0xf
   3edb4:	sub	w0, w0, #0x1
   3edb8:	cmp	w0, #0x1
   3edbc:	b.hi	3ee28 <__asan_internal_strnlen@@Base+0x2920>  // b.pmore
   3edc0:	ldrh	w2, [x28, #6]
   3edc4:	umull	x0, w3, w7
   3edc8:	add	x9, x5, x0
   3edcc:	cbz	w2, 3ee28 <__asan_internal_strnlen@@Base+0x2920>
   3edd0:	ldr	w2, [x28]
   3edd4:	add	w3, w3, #0x1
   3edd8:	add	x10, x4, x2
   3eddc:	cmp	x6, x2
   3ede0:	b.ls	3f820 <__asan_internal_strnlen@@Base+0x3318>  // b.plast
   3ede4:	str	x10, [x5, x0]
   3ede8:	ldr	x2, [x24]
   3edec:	ldr	x0, [x28, #8]
   3edf0:	cmp	x2, x0
   3edf4:	b.hi	3ee14 <__asan_internal_strnlen@@Base+0x290c>  // b.pmore
   3edf8:	ldr	x11, [x24, #16]
   3edfc:	sub	x10, x0, x2
   3ee00:	add	x2, x2, x11
   3ee04:	cmp	x2, x0
   3ee08:	b.ls	3ee14 <__asan_internal_strnlen@@Base+0x290c>  // b.plast
   3ee0c:	ldr	x0, [x24, #8]
   3ee10:	ldr	x0, [x0, x10]
   3ee14:	ldr	x2, [sp, #192]
   3ee18:	add	x0, x2, x0
   3ee1c:	str	x0, [x9, #8]
   3ee20:	ldr	x0, [x28, #16]
   3ee24:	str	x0, [x9, #16]
   3ee28:	add	x28, x28, #0x18
   3ee2c:	cmp	x27, x1
   3ee30:	b.hi	3eda8 <__asan_internal_strnlen@@Base+0x28a0>  // b.pmore
   3ee34:	mov	x0, x5
   3ee38:	mov	x1, x25
   3ee3c:	mov	x2, #0x18                  	// #24
   3ee40:	adrp	x3, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3ee44:	add	x3, x3, #0x550
   3ee48:	str	x5, [sp, #272]
   3ee4c:	bl	63a0 <__asan_backtrace_qsort@plt>
   3ee50:	str	x25, [x23, #16]
   3ee54:	ldr	x1, [sp, #256]
   3ee58:	mov	x0, x21
   3ee5c:	ldr	x5, [sp, #272]
   3ee60:	stp	xzr, x5, [x23]
   3ee64:	mov	x3, x20
   3ee68:	mov	x2, x19
   3ee6c:	bl	6430 <__asan_backtrace_release_view@plt>
   3ee70:	mov	w0, #0x1                   	// #1
   3ee74:	str	w0, [x26]
   3ee78:	add	x1, x21, #0x30
   3ee7c:	ldr	w0, [x21, #8]
   3ee80:	cbnz	w0, 3f7e4 <__asan_internal_strnlen@@Base+0x32dc>
   3ee84:	ldr	x0, [x21, #48]
   3ee88:	cbz	x0, 3f8e8 <__asan_internal_strnlen@@Base+0x33e0>
   3ee8c:	mov	x1, x0
   3ee90:	ldr	x0, [x0]
   3ee94:	b	3ee88 <__asan_internal_strnlen@@Base+0x2980>
   3ee98:	str	wzr, [sp, #256]
   3ee9c:	ldr	x1, [sp, #240]
   3eea0:	mov	x3, x20
   3eea4:	mov	x2, x19
   3eea8:	mov	x0, x21
   3eeac:	bl	6430 <__asan_backtrace_release_view@plt>
   3eeb0:	ldr	x1, [sp, #248]
   3eeb4:	mov	x0, x21
   3eeb8:	mov	x3, x20
   3eebc:	mov	x2, x19
   3eec0:	bl	6430 <__asan_backtrace_release_view@plt>
   3eec4:	ldr	x0, [sp, #368]
   3eec8:	cbz	x0, 3efdc <__asan_internal_strnlen@@Base+0x2ad4>
   3eecc:	adrp	x4, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3eed0:	add	x4, x4, #0xb60
   3eed4:	mov	x0, x4
   3eed8:	str	x4, [sp, #248]
   3eedc:	bl	64b0 <__asan_internal_strlen@plt>
   3eee0:	ldr	w27, [sp, #384]
   3eee4:	mov	x23, x0
   3eee8:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3eeec:	add	x0, x0, #0xb80
   3eef0:	bl	64b0 <__asan_internal_strlen@plt>
   3eef4:	add	x1, x27, #0x1
   3eef8:	add	x25, x23, x0
   3eefc:	mov	x3, x20
   3ef00:	mov	x2, x19
   3ef04:	add	x25, x25, x1, lsl #1
   3ef08:	str	x0, [sp, #240]
   3ef0c:	mov	x1, x25
   3ef10:	mov	x0, x21
   3ef14:	bl	65b0 <__asan_backtrace_alloc@plt>
   3ef18:	mov	x28, x0
   3ef1c:	cbz	x0, 3efdc <__asan_internal_strnlen@@Base+0x2ad4>
   3ef20:	ldr	x4, [sp, #248]
   3ef24:	mov	x2, x23
   3ef28:	add	x23, x0, x23
   3ef2c:	mov	x1, x4
   3ef30:	bl	64a0 <__asan_internal_memcpy@plt>
   3ef34:	cbz	x27, 3ef8c <__asan_internal_strnlen@@Base+0x2a84>
   3ef38:	mov	x2, #0x0                   	// #0
   3ef3c:	mov	w6, #0x2f                  	// #47
   3ef40:	ldr	x0, [sp, #368]
   3ef44:	ldrb	w0, [x0, x2]
   3ef48:	and	w1, w0, #0xf
   3ef4c:	lsr	w0, w0, #4
   3ef50:	add	w3, w1, #0x30
   3ef54:	cmp	w0, #0x9
   3ef58:	add	w4, w0, #0x30
   3ef5c:	add	w0, w0, #0x57
   3ef60:	csel	w0, w0, w4, hi  // hi = pmore
   3ef64:	cmp	w1, #0x9
   3ef68:	add	w1, w1, #0x57
   3ef6c:	strb	w0, [x23]
   3ef70:	csel	w0, w1, w3, hi  // hi = pmore
   3ef74:	strb	w0, [x23, #1]
   3ef78:	cbz	x2, 3f0c0 <__asan_internal_strnlen@@Base+0x2bb8>
   3ef7c:	add	x2, x2, #0x1
   3ef80:	add	x23, x23, #0x2
   3ef84:	cmp	x27, x2
   3ef88:	b.ne	3ef40 <__asan_internal_strnlen@@Base+0x2a38>  // b.any
   3ef8c:	ldr	x27, [sp, #240]
   3ef90:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3ef94:	add	x1, x0, #0xb80
   3ef98:	mov	x0, x23
   3ef9c:	mov	x2, x27
   3efa0:	bl	64a0 <__asan_internal_memcpy@plt>
   3efa4:	strb	wzr, [x23, x27]
   3efa8:	add	x3, sp, #0x300
   3efac:	mov	x2, x20
   3efb0:	mov	x1, x19
   3efb4:	mov	x0, x28
   3efb8:	bl	6a30 <__asan_backtrace_open@plt>
   3efbc:	mov	x2, x25
   3efc0:	mov	w23, w0
   3efc4:	mov	x1, x28
   3efc8:	mov	x4, x20
   3efcc:	mov	x3, x19
   3efd0:	mov	x0, x21
   3efd4:	bl	6890 <__asan_backtrace_free@plt>
   3efd8:	tbz	w23, #31, 3f76c <__asan_internal_strnlen@@Base+0x3264>
   3efdc:	ldr	w0, [sp, #224]
   3efe0:	cbnz	w0, 3f0a8 <__asan_internal_strnlen@@Base+0x2ba0>
   3efe4:	cbz	x24, 3effc <__asan_internal_strnlen@@Base+0x2af4>
   3efe8:	add	x1, x24, #0x18
   3efec:	mov	x3, x20
   3eff0:	mov	x2, x19
   3eff4:	mov	x0, x21
   3eff8:	bl	6430 <__asan_backtrace_release_view@plt>
   3effc:	ldr	x0, [sp, #376]
   3f000:	cbz	x0, 3f188 <__asan_internal_strnlen@@Base+0x2c80>
   3f004:	ldr	x1, [sp, #208]
   3f008:	mov	x2, x0
   3f00c:	mov	x4, x20
   3f010:	mov	x3, x19
   3f014:	mov	x0, x21
   3f018:	bl	3ce28 <__asan_internal_strnlen@@Base+0x920>
   3f01c:	mov	w23, w0
   3f020:	tbnz	w0, #31, 3f188 <__asan_internal_strnlen@@Base+0x2c80>
   3f024:	ldr	w0, [sp, #360]
   3f028:	cbnz	w0, 3f0dc <__asan_internal_strnlen@@Base+0x2bd4>
   3f02c:	mov	x3, x20
   3f030:	mov	x2, x19
   3f034:	add	x1, sp, #0x248
   3f038:	mov	x0, x21
   3f03c:	bl	6430 <__asan_backtrace_release_view@plt>
   3f040:	ldr	w0, [sp, #232]
   3f044:	cbnz	w0, 3f7a4 <__asan_internal_strnlen@@Base+0x329c>
   3f048:	ldp	x3, x6, [sp, #192]
   3f04c:	mov	w0, #0x1                   	// #1
   3f050:	ldr	x1, [sp, #1216]
   3f054:	stp	x1, xzr, [sp]
   3f058:	mov	w2, w23
   3f05c:	str	wzr, [sp, #16]
   3f060:	mov	x7, x26
   3f064:	str	w0, [sp, #24]
   3f068:	mov	x5, x20
   3f06c:	str	xzr, [sp, #32]
   3f070:	mov	x4, x19
   3f074:	str	wzr, [sp, #40]
   3f078:	mov	x0, x21
   3f07c:	adrp	x1, 47000 <__asan_backtrace_vector_release@@Base+0x6b10>
   3f080:	add	x1, x1, #0xd20
   3f084:	bl	3e0b0 <__asan_internal_strnlen@@Base+0x1ba8>
   3f088:	mov	w24, w0
   3f08c:	mov	x2, x20
   3f090:	mov	x1, x19
   3f094:	tbnz	w0, #31, 3f794 <__asan_internal_strnlen@@Base+0x328c>
   3f098:	mov	w0, w22
   3f09c:	bl	6960 <__asan_backtrace_close@plt>
   3f0a0:	ldp	x27, x28, [sp, #160]
   3f0a4:	b	3e168 <__asan_internal_strnlen@@Base+0x1c60>
   3f0a8:	mov	x3, x20
   3f0ac:	mov	x2, x19
   3f0b0:	add	x1, sp, #0x230
   3f0b4:	mov	x0, x21
   3f0b8:	bl	6430 <__asan_backtrace_release_view@plt>
   3f0bc:	b	3efe4 <__asan_internal_strnlen@@Base+0x2adc>
   3f0c0:	strb	w6, [x23, #2]
   3f0c4:	add	x0, x23, #0x3
   3f0c8:	cmp	x27, #0x1
   3f0cc:	mov	x23, x0
   3f0d0:	b.eq	3ef8c <__asan_internal_strnlen@@Base+0x2a84>  // b.none
   3f0d4:	mov	x2, #0x1                   	// #1
   3f0d8:	b	3ef40 <__asan_internal_strnlen@@Base+0x2a38>
   3f0dc:	add	x2, sp, #0x300
   3f0e0:	mov	w1, w23
   3f0e4:	mov	w0, #0x0                   	// #0
   3f0e8:	bl	6360 <__fxstat@plt>
   3f0ec:	tbnz	w0, #31, 3f944 <__asan_internal_strnlen@@Base+0x343c>
   3f0f0:	ldr	x3, [sp, #816]
   3f0f4:	add	x25, sp, #0x278
   3f0f8:	mov	x6, x25
   3f0fc:	mov	x5, x20
   3f100:	mov	x4, x19
   3f104:	mov	w1, w23
   3f108:	mov	x0, x21
   3f10c:	mov	x2, #0x0                   	// #0
   3f110:	bl	67b0 <__asan_backtrace_get_view@plt>
   3f114:	cbz	w0, 3f178 <__asan_internal_strnlen@@Base+0x2c70>
   3f118:	ldr	x2, [sp, #632]
   3f11c:	adrp	x0, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3f120:	ldr	x3, [sp, #816]
   3f124:	add	x0, x0, #0xc10
   3f128:	add	x0, x0, #0x4e0
   3f12c:	mov	w24, #0xffffffff            	// #-1
   3f130:	add	x3, x2, x3
   3f134:	b	3f14c <__asan_internal_strnlen@@Base+0x2c44>
   3f138:	ldrb	w1, [x2], #1
   3f13c:	eor	w1, w1, w24
   3f140:	and	x1, x1, #0xff
   3f144:	ldr	w1, [x0, x1, lsl #2]
   3f148:	eor	w24, w1, w24, lsr #8
   3f14c:	cmp	x3, x2
   3f150:	b.hi	3f138 <__asan_internal_strnlen@@Base+0x2c30>  // b.pmore
   3f154:	mov	x0, x21
   3f158:	mov	x1, x25
   3f15c:	mov	x3, x20
   3f160:	mov	x2, x19
   3f164:	bl	6430 <__asan_backtrace_release_view@plt>
   3f168:	mvn	w24, w24
   3f16c:	ldr	w0, [sp, #360]
   3f170:	cmp	w24, w0
   3f174:	b.eq	3f02c <__asan_internal_strnlen@@Base+0x2b24>  // b.none
   3f178:	mov	w0, w23
   3f17c:	mov	x2, x20
   3f180:	mov	x1, x19
   3f184:	bl	6960 <__asan_backtrace_close@plt>
   3f188:	ldr	w0, [sp, #216]
   3f18c:	cbnz	w0, 3f708 <__asan_internal_strnlen@@Base+0x3200>
   3f190:	ldr	x0, [sp, #320]
   3f194:	str	xzr, [sp, #424]
   3f198:	cbz	x0, 3f6b0 <__asan_internal_strnlen@@Base+0x31a8>
   3f19c:	ldr	x24, [sp, #208]
   3f1a0:	mov	x2, x0
   3f1a4:	mov	x4, x20
   3f1a8:	mov	x3, x19
   3f1ac:	mov	x0, x21
   3f1b0:	mov	x1, x24
   3f1b4:	bl	3ce28 <__asan_internal_strnlen@@Base+0x920>
   3f1b8:	mov	w23, w0
   3f1bc:	tbnz	w0, #31, 3f6b0 <__asan_internal_strnlen@@Base+0x31a8>
   3f1c0:	mov	w8, #0x1                   	// #1
   3f1c4:	str	w8, [sp, #24]
   3f1c8:	ldp	x3, x6, [sp, #192]
   3f1cc:	add	x0, sp, #0x1a8
   3f1d0:	ldr	x8, [sp, #352]
   3f1d4:	str	x8, [sp, #32]
   3f1d8:	ldr	w8, [sp, #364]
   3f1dc:	mov	x7, x26
   3f1e0:	ldr	x1, [sp, #1216]
   3f1e4:	mov	x5, x20
   3f1e8:	mov	x4, x19
   3f1ec:	stp	x1, x0, [sp]
   3f1f0:	mov	w2, w23
   3f1f4:	str	wzr, [sp, #16]
   3f1f8:	mov	x1, x24
   3f1fc:	str	w8, [sp, #40]
   3f200:	mov	x0, x21
   3f204:	bl	3e0b0 <__asan_internal_strnlen@@Base+0x1ba8>
   3f208:	mov	w24, w0
   3f20c:	mov	x3, x20
   3f210:	mov	x2, x19
   3f214:	add	x1, sp, #0x260
   3f218:	mov	x0, x21
   3f21c:	bl	6430 <__asan_backtrace_release_view@plt>
   3f220:	tbnz	w24, #31, 3f78c <__asan_internal_strnlen@@Base+0x3284>
   3f224:	ldr	x3, [sp, #904]
   3f228:	cbz	x3, 3f3bc <__asan_internal_strnlen@@Base+0x2eb4>
   3f22c:	ldr	x24, [sp, #896]
   3f230:	ldr	x1, [sp, #936]
   3f234:	adds	x3, x24, x3
   3f238:	csel	x3, x3, xzr, pl  // pl = nfrst
   3f23c:	cbz	x1, 3f25c <__asan_internal_strnlen@@Base+0x2d54>
   3f240:	ldr	x0, [sp, #928]
   3f244:	cbz	x24, 3f3cc <__asan_internal_strnlen@@Base+0x2ec4>
   3f248:	cmp	x24, x0
   3f24c:	b.gt	3f3cc <__asan_internal_strnlen@@Base+0x2ec4>
   3f250:	add	x0, x0, x1
   3f254:	cmp	x3, x0
   3f258:	csel	x3, x3, x0, ge  // ge = tcont
   3f25c:	ldr	x1, [sp, #968]
   3f260:	cbz	x1, 3f280 <__asan_internal_strnlen@@Base+0x2d78>
   3f264:	ldr	x0, [sp, #960]
   3f268:	cbz	x24, 3f3b4 <__asan_internal_strnlen@@Base+0x2eac>
   3f26c:	cmp	x24, x0
   3f270:	b.gt	3f3b4 <__asan_internal_strnlen@@Base+0x2eac>
   3f274:	add	x0, x0, x1
   3f278:	cmp	x3, x0
   3f27c:	csel	x3, x3, x0, ge  // ge = tcont
   3f280:	ldr	x1, [sp, #1000]
   3f284:	cbz	x1, 3f2a0 <__asan_internal_strnlen@@Base+0x2d98>
   3f288:	ldr	x0, [sp, #992]
   3f28c:	cbnz	x24, 3f6d0 <__asan_internal_strnlen@@Base+0x31c8>
   3f290:	mov	x24, x0
   3f294:	add	x0, x0, x1
   3f298:	cmp	x3, x0
   3f29c:	csel	x3, x3, x0, ge  // ge = tcont
   3f2a0:	ldr	x1, [sp, #1032]
   3f2a4:	cbz	x1, 3f2c0 <__asan_internal_strnlen@@Base+0x2db8>
   3f2a8:	ldr	x0, [sp, #1024]
   3f2ac:	cbnz	x24, 3f6dc <__asan_internal_strnlen@@Base+0x31d4>
   3f2b0:	mov	x24, x0
   3f2b4:	add	x0, x0, x1
   3f2b8:	cmp	x3, x0
   3f2bc:	csel	x3, x3, x0, ge  // ge = tcont
   3f2c0:	ldr	x1, [sp, #1064]
   3f2c4:	cbz	x1, 3f2e0 <__asan_internal_strnlen@@Base+0x2dd8>
   3f2c8:	ldr	x0, [sp, #1056]
   3f2cc:	cbnz	x24, 3f6e8 <__asan_internal_strnlen@@Base+0x31e0>
   3f2d0:	mov	x24, x0
   3f2d4:	add	x0, x0, x1
   3f2d8:	cmp	x3, x0
   3f2dc:	csel	x3, x3, x0, ge  // ge = tcont
   3f2e0:	ldr	x1, [sp, #1096]
   3f2e4:	cbz	x1, 3f300 <__asan_internal_strnlen@@Base+0x2df8>
   3f2e8:	ldr	x0, [sp, #1088]
   3f2ec:	cbnz	x24, 3f6f4 <__asan_internal_strnlen@@Base+0x31ec>
   3f2f0:	mov	x24, x0
   3f2f4:	add	x0, x0, x1
   3f2f8:	cmp	x3, x0
   3f2fc:	csel	x3, x3, x0, ge  // ge = tcont
   3f300:	ldr	x1, [sp, #1128]
   3f304:	cbz	x1, 3f320 <__asan_internal_strnlen@@Base+0x2e18>
   3f308:	ldr	x0, [sp, #1120]
   3f30c:	cbnz	x24, 3f720 <__asan_internal_strnlen@@Base+0x3218>
   3f310:	mov	x24, x0
   3f314:	add	x0, x0, x1
   3f318:	cmp	x3, x0
   3f31c:	csel	x3, x3, x0, ge  // ge = tcont
   3f320:	ldr	x1, [sp, #1160]
   3f324:	cbz	x1, 3f340 <__asan_internal_strnlen@@Base+0x2e38>
   3f328:	ldr	x0, [sp, #1152]
   3f32c:	cbnz	x24, 3f72c <__asan_internal_strnlen@@Base+0x3224>
   3f330:	mov	x24, x0
   3f334:	add	x0, x0, x1
   3f338:	cmp	x3, x0
   3f33c:	csel	x3, x3, x0, ge  // ge = tcont
   3f340:	ldr	x1, [sp, #1192]
   3f344:	cbz	x1, 3f364 <__asan_internal_strnlen@@Base+0x2e5c>
   3f348:	ldr	x0, [sp, #1184]
   3f34c:	cbz	x24, 3f700 <__asan_internal_strnlen@@Base+0x31f8>
   3f350:	cmp	x0, x24
   3f354:	csel	x24, x24, x0, ge  // ge = tcont
   3f358:	add	x0, x0, x1
   3f35c:	cmp	x3, x0
   3f360:	csel	x3, x3, x0, ge  // ge = tcont
   3f364:	cmp	x24, #0x0
   3f368:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   3f36c:	b.ne	3f3f4 <__asan_internal_strnlen@@Base+0x2eec>  // b.any
   3f370:	mov	x2, x20
   3f374:	mov	x1, x19
   3f378:	mov	w0, w22
   3f37c:	bl	6960 <__asan_backtrace_close@plt>
   3f380:	mov	w23, w0
   3f384:	cbnz	w0, 3f738 <__asan_internal_strnlen@@Base+0x3230>
   3f388:	ldr	w0, [sp, #256]
   3f38c:	cbz	w0, 3e904 <__asan_internal_strnlen@@Base+0x23fc>
   3f390:	mov	x24, #0x0                   	// #0
   3f394:	str	wzr, [sp, #216]
   3f398:	str	wzr, [sp, #224]
   3f39c:	str	wzr, [sp, #232]
   3f3a0:	b	3e6ac <__asan_internal_strnlen@@Base+0x21a4>
   3f3a4:	ldr	x1, [sp, #968]
   3f3a8:	cbz	x1, 3fa7c <__asan_internal_strnlen@@Base+0x3574>
   3f3ac:	ldr	x0, [sp, #960]
   3f3b0:	mov	x3, #0x0                   	// #0
   3f3b4:	mov	x24, x0
   3f3b8:	b	3f274 <__asan_internal_strnlen@@Base+0x2d6c>
   3f3bc:	ldr	x1, [sp, #936]
   3f3c0:	cbz	x1, 3f3a4 <__asan_internal_strnlen@@Base+0x2e9c>
   3f3c4:	ldr	x0, [sp, #928]
   3f3c8:	mov	x3, #0x0                   	// #0
   3f3cc:	mov	x24, x0
   3f3d0:	b	3f250 <__asan_internal_strnlen@@Base+0x2d48>
   3f3d4:	mov	w28, w20
   3f3d8:	ldr	w22, [sp, #300]
   3f3dc:	mov	w23, #0x0                   	// #0
   3f3e0:	str	w25, [sp, #232]
   3f3e4:	ldr	x21, [sp, #288]
   3f3e8:	ldp	x19, x20, [sp, #304]
   3f3ec:	ldr	x24, [sp, #336]
   3f3f0:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3f3f4:	add	x0, sp, #0x300
   3f3f8:	sub	x3, x3, x24
   3f3fc:	mov	x6, x0
   3f400:	mov	x5, x20
   3f404:	mov	x4, x19
   3f408:	mov	x2, x24
   3f40c:	mov	w1, w22
   3f410:	str	x0, [sp, #208]
   3f414:	mov	x0, x21
   3f418:	bl	67b0 <__asan_backtrace_get_view@plt>
   3f41c:	mov	w23, w0
   3f420:	cbz	w0, 3f388 <__asan_internal_strnlen@@Base+0x2e80>
   3f424:	mov	x2, x20
   3f428:	mov	x1, x19
   3f42c:	mov	w0, w22
   3f430:	bl	6960 <__asan_backtrace_close@plt>
   3f434:	cbz	w0, 3fa20 <__asan_internal_strnlen@@Base+0x3518>
   3f438:	ldr	x1, [sp, #904]
   3f43c:	ldr	x0, [sp, #768]
   3f440:	cbz	x1, 3fa14 <__asan_internal_strnlen@@Base+0x350c>
   3f444:	ldr	x1, [sp, #896]
   3f448:	mov	w22, #0x1                   	// #1
   3f44c:	sub	x1, x1, x24
   3f450:	add	x1, x0, x1
   3f454:	str	x1, [sp, #912]
   3f458:	ldr	x1, [sp, #936]
   3f45c:	cbz	x1, 3fa0c <__asan_internal_strnlen@@Base+0x3504>
   3f460:	ldr	x1, [sp, #928]
   3f464:	add	w22, w22, #0x1
   3f468:	sub	x1, x1, x24
   3f46c:	add	x1, x0, x1
   3f470:	str	x1, [sp, #944]
   3f474:	ldr	x1, [sp, #968]
   3f478:	cbz	x1, 3fafc <__asan_internal_strnlen@@Base+0x35f4>
   3f47c:	ldr	x1, [sp, #960]
   3f480:	add	w22, w22, #0x1
   3f484:	sub	x1, x1, x24
   3f488:	add	x1, x0, x1
   3f48c:	str	x1, [sp, #976]
   3f490:	ldr	x1, [sp, #1000]
   3f494:	cbz	x1, 3faf4 <__asan_internal_strnlen@@Base+0x35ec>
   3f498:	ldr	x1, [sp, #992]
   3f49c:	add	w22, w22, #0x1
   3f4a0:	sub	x1, x1, x24
   3f4a4:	add	x1, x0, x1
   3f4a8:	str	x1, [sp, #1008]
   3f4ac:	ldr	x1, [sp, #1032]
   3f4b0:	cbz	x1, 3faec <__asan_internal_strnlen@@Base+0x35e4>
   3f4b4:	ldr	x1, [sp, #1024]
   3f4b8:	add	w22, w22, #0x1
   3f4bc:	sub	x1, x1, x24
   3f4c0:	add	x1, x0, x1
   3f4c4:	str	x1, [sp, #1040]
   3f4c8:	ldr	x1, [sp, #1064]
   3f4cc:	cbnz	x1, 3fad8 <__asan_internal_strnlen@@Base+0x35d0>
   3f4d0:	str	xzr, [sp, #1072]
   3f4d4:	ldr	x1, [sp, #1096]
   3f4d8:	cbnz	x1, 3fac4 <__asan_internal_strnlen@@Base+0x35bc>
   3f4dc:	str	xzr, [sp, #1104]
   3f4e0:	ldr	x1, [sp, #1128]
   3f4e4:	cbnz	x1, 3fab0 <__asan_internal_strnlen@@Base+0x35a8>
   3f4e8:	str	xzr, [sp, #1136]
   3f4ec:	ldr	x1, [sp, #1160]
   3f4f0:	cbnz	x1, 3fa9c <__asan_internal_strnlen@@Base+0x3594>
   3f4f4:	str	xzr, [sp, #1168]
   3f4f8:	ldr	x1, [sp, #1192]
   3f4fc:	cbnz	x1, 3fa88 <__asan_internal_strnlen@@Base+0x3580>
   3f500:	str	xzr, [sp, #1200]
   3f504:	ldr	x24, [sp, #264]
   3f508:	adrp	x25, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3f50c:	add	x28, sp, #0x278
   3f510:	add	x25, x25, #0xb90
   3f514:	mov	x27, x24
   3f518:	add	x0, sp, #0x1b0
   3f51c:	mov	w23, #0x5                   	// #5
   3f520:	mov	x26, #0x0                   	// #0
   3f524:	str	x0, [sp, #216]
   3f528:	ldr	x0, [x27, #8]
   3f52c:	cbnz	x0, 3f5a8 <__asan_internal_strnlen@@Base+0x30a0>
   3f530:	ldr	x3, [x27, #168]
   3f534:	cbz	x3, 3f5a8 <__asan_internal_strnlen@@Base+0x30a0>
   3f538:	cbz	x26, 3fa58 <__asan_internal_strnlen@@Base+0x3550>
   3f53c:	str	xzr, [sp, #432]
   3f540:	mov	x1, x25
   3f544:	str	xzr, [sp, #632]
   3f548:	cmp	x3, #0xb
   3f54c:	mov	x2, #0x4                   	// #4
   3f550:	b.ls	3f594 <__asan_internal_strnlen@@Base+0x308c>  // b.plast
   3f554:	ldr	x4, [x27, #176]
   3f558:	stp	x4, x3, [sp, #224]
   3f55c:	mov	x0, x4
   3f560:	bl	68f0 <__asan_internal_memcmp@plt>
   3f564:	cbnz	w0, 3f594 <__asan_internal_strnlen@@Base+0x308c>
   3f568:	ldp	x6, x4, [sp, #216]
   3f56c:	mov	x7, x28
   3f570:	ldr	x3, [sp, #232]
   3f574:	mov	x5, x20
   3f578:	mov	x0, x21
   3f57c:	mov	x2, x3
   3f580:	mov	x3, x26
   3f584:	mov	x1, x4
   3f588:	mov	x4, x19
   3f58c:	bl	3df98 <__asan_internal_strnlen@@Base+0x1a90>
   3f590:	cbz	w0, 3fa4c <__asan_internal_strnlen@@Base+0x3544>
   3f594:	ldr	x0, [sp, #432]
   3f598:	str	x0, [x27, #16]
   3f59c:	ldr	x0, [sp, #632]
   3f5a0:	str	x0, [x27, #8]
   3f5a4:	str	wzr, [x27, #24]
   3f5a8:	add	x27, x27, #0x20
   3f5ac:	subs	w23, w23, #0x1
   3f5b0:	b.ne	3f528 <__asan_internal_strnlen@@Base+0x3020>  // b.any
   3f5b4:	mov	w25, #0x5                   	// #5
   3f5b8:	ldr	x27, [x24, #8]
   3f5bc:	cbz	x27, 3f5f8 <__asan_internal_strnlen@@Base+0x30f0>
   3f5c0:	ldr	w0, [x24, #24]
   3f5c4:	cbz	w0, 3f5f8 <__asan_internal_strnlen@@Base+0x30f0>
   3f5c8:	cbz	x26, 3fa28 <__asan_internal_strnlen@@Base+0x3520>
   3f5cc:	cmp	x27, #0x17
   3f5d0:	b.ls	3f5e4 <__asan_internal_strnlen@@Base+0x30dc>  // b.plast
   3f5d4:	ldr	x28, [x24, #16]
   3f5d8:	ldr	w4, [x28]
   3f5dc:	cmp	w4, #0x1
   3f5e0:	b.eq	3f964 <__asan_internal_strnlen@@Base+0x345c>  // b.none
   3f5e4:	mov	x0, #0x0                   	// #0
   3f5e8:	mov	x23, #0x0                   	// #0
   3f5ec:	sub	w22, w22, #0x1
   3f5f0:	stp	x0, x23, [x24, #8]
   3f5f4:	str	wzr, [x24, #24]
   3f5f8:	add	x24, x24, #0x20
   3f5fc:	subs	w25, w25, #0x1
   3f600:	b.ne	3f5b8 <__asan_internal_strnlen@@Base+0x30b0>  // b.any
   3f604:	cbz	x26, 3f620 <__asan_internal_strnlen@@Base+0x3118>
   3f608:	mov	x1, x26
   3f60c:	mov	x4, x20
   3f610:	mov	x3, x19
   3f614:	mov	x0, x21
   3f618:	mov	x2, #0x13b4                	// #5044
   3f61c:	bl	6890 <__asan_backtrace_free@plt>
   3f620:	cbz	w22, 3fb28 <__asan_internal_strnlen@@Base+0x3620>
   3f624:	mov	w23, #0x1                   	// #1
   3f628:	ldrb	w0, [sp, #709]
   3f62c:	add	x6, sp, #0x388
   3f630:	ldr	x1, [sp, #192]
   3f634:	cmp	w0, #0x2
   3f638:	cset	w0, eq  // eq = none
   3f63c:	ldp	x3, x2, [x6]
   3f640:	ldp	x5, x4, [x6, #32]
   3f644:	str	w0, [sp, #32]
   3f648:	ldr	x0, [sp, #200]
   3f64c:	str	x0, [sp, #64]
   3f650:	ldr	x0, [sp, #424]
   3f654:	str	x0, [sp, #40]
   3f658:	ldr	x0, [sp, #1000]
   3f65c:	str	x0, [sp, #8]
   3f660:	ldr	x0, [sp, #1008]
   3f664:	str	x0, [sp]
   3f668:	ldr	x7, [sp, #968]
   3f66c:	stp	x19, x20, [sp, #48]
   3f670:	ldr	x6, [sp, #976]
   3f674:	ldr	x0, [sp, #1032]
   3f678:	str	x0, [sp, #24]
   3f67c:	ldr	x0, [sp, #1040]
   3f680:	str	x0, [sp, #16]
   3f684:	ldr	x0, [sp, #1224]
   3f688:	str	x0, [sp, #72]
   3f68c:	mov	x0, x21
   3f690:	bl	6440 <__asan_backtrace_dwarf_add@plt>
   3f694:	cbz	w0, 3fb20 <__asan_internal_strnlen@@Base+0x3618>
   3f698:	ldr	x1, [sp, #1216]
   3f69c:	mov	w0, #0x1                   	// #1
   3f6a0:	mov	w24, w0
   3f6a4:	ldp	x27, x28, [sp, #160]
   3f6a8:	str	w0, [x1]
   3f6ac:	b	3e168 <__asan_internal_strnlen@@Base+0x1c60>
   3f6b0:	ldr	w0, [sp, #232]
   3f6b4:	cbz	w0, 3f224 <__asan_internal_strnlen@@Base+0x2d1c>
   3f6b8:	mov	x3, x20
   3f6bc:	mov	x2, x19
   3f6c0:	add	x1, sp, #0x260
   3f6c4:	mov	x0, x21
   3f6c8:	bl	6430 <__asan_backtrace_release_view@plt>
   3f6cc:	b	3f224 <__asan_internal_strnlen@@Base+0x2d1c>
   3f6d0:	cmp	x24, x0
   3f6d4:	csel	x24, x24, x0, le
   3f6d8:	b	3f294 <__asan_internal_strnlen@@Base+0x2d8c>
   3f6dc:	cmp	x24, x0
   3f6e0:	csel	x24, x24, x0, le
   3f6e4:	b	3f2b4 <__asan_internal_strnlen@@Base+0x2dac>
   3f6e8:	cmp	x24, x0
   3f6ec:	csel	x24, x24, x0, le
   3f6f0:	b	3f2d4 <__asan_internal_strnlen@@Base+0x2dcc>
   3f6f4:	cmp	x24, x0
   3f6f8:	csel	x24, x24, x0, le
   3f6fc:	b	3f2f4 <__asan_internal_strnlen@@Base+0x2dec>
   3f700:	mov	x24, x0
   3f704:	b	3f358 <__asan_internal_strnlen@@Base+0x2e50>
   3f708:	mov	x3, x20
   3f70c:	mov	x2, x19
   3f710:	add	x1, sp, #0x248
   3f714:	mov	x0, x21
   3f718:	bl	6430 <__asan_backtrace_release_view@plt>
   3f71c:	b	3f190 <__asan_internal_strnlen@@Base+0x2c88>
   3f720:	cmp	x24, x0
   3f724:	csel	x24, x24, x0, le
   3f728:	b	3f314 <__asan_internal_strnlen@@Base+0x2e0c>
   3f72c:	cmp	x24, x0
   3f730:	csel	x24, x24, x0, le
   3f734:	b	3f334 <__asan_internal_strnlen@@Base+0x2e2c>
   3f738:	mov	w24, #0x1                   	// #1
   3f73c:	ldp	x27, x28, [sp, #160]
   3f740:	b	3e168 <__asan_internal_strnlen@@Base+0x1c60>
   3f744:	mov	w28, #0x1                   	// #1
   3f748:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3f74c:	ldr	w28, [sp, #224]
   3f750:	mov	w23, w0
   3f754:	ldr	w22, [sp, #300]
   3f758:	str	w25, [sp, #232]
   3f75c:	ldr	x21, [sp, #288]
   3f760:	ldp	x19, x20, [sp, #304]
   3f764:	ldr	x24, [sp, #336]
   3f768:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3f76c:	mov	x0, x21
   3f770:	mov	x3, x20
   3f774:	mov	x2, x19
   3f778:	add	x1, sp, #0x230
   3f77c:	bl	6430 <__asan_backtrace_release_view@plt>
   3f780:	ldr	w0, [sp, #216]
   3f784:	cbz	w0, 3f040 <__asan_internal_strnlen@@Base+0x2b38>
   3f788:	b	3f02c <__asan_internal_strnlen@@Base+0x2b24>
   3f78c:	mov	x2, x20
   3f790:	mov	x1, x19
   3f794:	mov	w0, w23
   3f798:	bl	6960 <__asan_backtrace_close@plt>
   3f79c:	ldp	x27, x28, [sp, #160]
   3f7a0:	b	3e168 <__asan_internal_strnlen@@Base+0x1c60>
   3f7a4:	mov	x3, x20
   3f7a8:	mov	x2, x19
   3f7ac:	add	x1, sp, #0x260
   3f7b0:	mov	x0, x21
   3f7b4:	bl	6430 <__asan_backtrace_release_view@plt>
   3f7b8:	b	3f048 <__asan_internal_strnlen@@Base+0x2b40>
   3f7bc:	mov	w28, w20
   3f7c0:	mov	w0, #0x1                   	// #1
   3f7c4:	ldr	w22, [sp, #300]
   3f7c8:	mov	w23, #0x0                   	// #0
   3f7cc:	str	w0, [sp, #224]
   3f7d0:	str	w25, [sp, #232]
   3f7d4:	ldr	x21, [sp, #288]
   3f7d8:	ldp	x19, x20, [sp, #304]
   3f7dc:	ldr	x24, [sp, #336]
   3f7e0:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3f7e4:	mov	x0, x1
   3f7e8:	b	3f7f0 <__asan_internal_strnlen@@Base+0x32e8>
   3f7ec:	mov	x0, x2
   3f7f0:	ldar	x2, [x0]
   3f7f4:	cbnz	x2, 3f7ec <__asan_internal_strnlen@@Base+0x32e4>
   3f7f8:	ldxr	x2, [x0]
   3f7fc:	cbnz	x2, 3f808 <__asan_internal_strnlen@@Base+0x3300>
   3f800:	stlxr	w3, x23, [x0]
   3f804:	cbnz	w3, 3f7f8 <__asan_internal_strnlen@@Base+0x32f0>
   3f808:	dmb	ish
   3f80c:	cmp	x2, #0x0
   3f810:	b.ne	3f7e4 <__asan_internal_strnlen@@Base+0x32dc>  // b.any
   3f814:	mov	w0, #0x1                   	// #1
   3f818:	str	w0, [sp, #256]
   3f81c:	b	3ee9c <__asan_internal_strnlen@@Base+0x2994>
   3f820:	stp	x8, x5, [sp, #192]
   3f824:	mov	x0, x20
   3f828:	mov	w2, #0x0                   	// #0
   3f82c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3f830:	add	x1, x1, #0xb38
   3f834:	blr	x19
   3f838:	ldp	x8, x5, [sp, #192]
   3f83c:	mov	x4, x20
   3f840:	mov	x3, x19
   3f844:	mov	x0, x21
   3f848:	mov	x2, x8
   3f84c:	mov	x1, x5
   3f850:	bl	6890 <__asan_backtrace_free@plt>
   3f854:	mov	x1, x23
   3f858:	mov	x4, x20
   3f85c:	mov	x3, x19
   3f860:	mov	x0, x21
   3f864:	mov	x2, #0x18                  	// #24
   3f868:	mov	w23, #0x1                   	// #1
   3f86c:	bl	6890 <__asan_backtrace_free@plt>
   3f870:	mov	w28, w23
   3f874:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3f878:	mov	x2, #0x0                   	// #0
   3f87c:	mov	w1, #0x0                   	// #0
   3f880:	ldrb	w0, [x28, #4]
   3f884:	add	x2, x2, #0x1
   3f888:	and	w0, w0, #0xf
   3f88c:	sub	w0, w0, #0x1
   3f890:	cmp	w0, #0x1
   3f894:	b.hi	3f8d8 <__asan_internal_strnlen@@Base+0x33d0>  // b.pmore
   3f898:	ldrh	w0, [x28, #6]
   3f89c:	umull	x9, w1, w7
   3f8a0:	add	x3, x5, x9
   3f8a4:	cbz	w0, 3f8d8 <__asan_internal_strnlen@@Base+0x33d0>
   3f8a8:	ldr	w0, [x28]
   3f8ac:	add	w1, w1, #0x1
   3f8b0:	add	x10, x4, x0
   3f8b4:	cmp	x6, x0
   3f8b8:	b.ls	3f820 <__asan_internal_strnlen@@Base+0x3318>  // b.plast
   3f8bc:	ldr	x0, [x28, #8]
   3f8c0:	str	x10, [x5, x9]
   3f8c4:	ldr	x9, [sp, #192]
   3f8c8:	add	x0, x0, x9
   3f8cc:	str	x0, [x3, #8]
   3f8d0:	ldr	x0, [x28, #16]
   3f8d4:	str	x0, [x3, #16]
   3f8d8:	add	x28, x28, #0x18
   3f8dc:	cmp	x27, x2
   3f8e0:	b.hi	3f880 <__asan_internal_strnlen@@Base+0x3378>  // b.pmore
   3f8e4:	b	3ee34 <__asan_internal_strnlen@@Base+0x292c>
   3f8e8:	mov	w0, #0x1                   	// #1
   3f8ec:	str	x23, [x1]
   3f8f0:	str	w0, [sp, #256]
   3f8f4:	b	3ee9c <__asan_internal_strnlen@@Base+0x2994>
   3f8f8:	ldr	x1, [sp, #240]
   3f8fc:	mov	x3, x20
   3f900:	mov	x2, x19
   3f904:	mov	x0, x21
   3f908:	str	xzr, [sp, #352]
   3f90c:	bl	6430 <__asan_backtrace_release_view@plt>
   3f910:	str	wzr, [sp, #216]
   3f914:	ldr	x1, [sp, #248]
   3f918:	mov	x3, x20
   3f91c:	mov	x2, x19
   3f920:	mov	x0, x21
   3f924:	bl	6430 <__asan_backtrace_release_view@plt>
   3f928:	str	wzr, [sp, #232]
   3f92c:	str	wzr, [sp, #256]
   3f930:	str	xzr, [sp, #320]
   3f934:	str	wzr, [sp, #364]
   3f938:	b	3f188 <__asan_internal_strnlen@@Base+0x2c80>
   3f93c:	mov	w24, #0xffffffff            	// #-1
   3f940:	b	3e168 <__asan_internal_strnlen@@Base+0x1c60>
   3f944:	bl	6790 <__errno_location@plt>
   3f948:	mov	x2, x0
   3f94c:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3f950:	mov	x0, x20
   3f954:	add	x1, x1, #0xb88
   3f958:	ldr	w2, [x2]
   3f95c:	blr	x19
   3f960:	b	3f178 <__asan_internal_strnlen@@Base+0x2c70>
   3f964:	ldr	x1, [x28, #8]
   3f968:	mov	x3, x20
   3f96c:	mov	x2, x19
   3f970:	mov	x0, x21
   3f974:	str	w4, [sp, #216]
   3f978:	bl	65b0 <__asan_backtrace_alloc@plt>
   3f97c:	mov	x23, x0
   3f980:	cbz	x0, 3fa4c <__asan_internal_strnlen@@Base+0x3544>
   3f984:	ldr	x4, [x28, #8]
   3f988:	add	x5, x28, #0x18
   3f98c:	mov	x0, x5
   3f990:	mov	x3, x23
   3f994:	mov	x2, x26
   3f998:	sub	x1, x27, #0x18
   3f99c:	stp	x4, x5, [sp, #216]
   3f9a0:	bl	3d128 <__asan_internal_strnlen@@Base+0xc20>
   3f9a4:	cbz	w0, 3f5e4 <__asan_internal_strnlen@@Base+0x30dc>
   3f9a8:	ldp	x4, x5, [sp, #216]
   3f9ac:	sub	x0, x27, #0x1c
   3f9b0:	mov	x1, x23
   3f9b4:	mov	x2, x4
   3f9b8:	add	x0, x5, x0
   3f9bc:	bl	3c570 <__asan_internal_strnlen@@Base+0x68>
   3f9c0:	cbz	w0, 3f5e4 <__asan_internal_strnlen@@Base+0x30dc>
   3f9c4:	ldr	x0, [x28, #8]
   3f9c8:	b	3f5ec <__asan_internal_strnlen@@Base+0x30e4>
   3f9cc:	ldrh	w2, [x0, #78]
   3f9d0:	cbz	w2, 3ec00 <__asan_internal_strnlen@@Base+0x26f8>
   3f9d4:	add	x25, x25, #0x1
   3f9d8:	b	3ec00 <__asan_internal_strnlen@@Base+0x26f8>
   3f9dc:	ldrh	w2, [x0, #54]
   3f9e0:	cbz	w2, 3ebe0 <__asan_internal_strnlen@@Base+0x26d8>
   3f9e4:	add	x25, x25, #0x1
   3f9e8:	b	3ebe0 <__asan_internal_strnlen@@Base+0x26d8>
   3f9ec:	ldrh	w2, [x0, #30]
   3f9f0:	cbz	w2, 3ebc0 <__asan_internal_strnlen@@Base+0x26b8>
   3f9f4:	add	x25, x25, #0x1
   3f9f8:	b	3ebc0 <__asan_internal_strnlen@@Base+0x26b8>
   3f9fc:	ldrh	w2, [x0, #6]
   3fa00:	cbz	w2, 3eba0 <__asan_internal_strnlen@@Base+0x2698>
   3fa04:	add	x25, x25, #0x1
   3fa08:	b	3eba0 <__asan_internal_strnlen@@Base+0x2698>
   3fa0c:	str	xzr, [sp, #944]
   3fa10:	b	3f474 <__asan_internal_strnlen@@Base+0x2f6c>
   3fa14:	mov	w22, #0x0                   	// #0
   3fa18:	str	xzr, [sp, #912]
   3fa1c:	b	3f458 <__asan_internal_strnlen@@Base+0x2f50>
   3fa20:	mov	w23, #0x1                   	// #1
   3fa24:	b	3f388 <__asan_internal_strnlen@@Base+0x2e80>
   3fa28:	mov	x3, x20
   3fa2c:	mov	x2, x19
   3fa30:	mov	x0, x21
   3fa34:	mov	x1, #0x13b4                	// #5044
   3fa38:	bl	65b0 <__asan_backtrace_alloc@plt>
   3fa3c:	mov	x26, x0
   3fa40:	cbz	x0, 3fa4c <__asan_internal_strnlen@@Base+0x3544>
   3fa44:	ldr	x27, [x24, #8]
   3fa48:	b	3f5cc <__asan_internal_strnlen@@Base+0x30c4>
   3fa4c:	mov	w23, #0x1                   	// #1
   3fa50:	mov	w22, #0xffffffff            	// #-1
   3fa54:	b	3f388 <__asan_internal_strnlen@@Base+0x2e80>
   3fa58:	mov	x3, x20
   3fa5c:	mov	x2, x19
   3fa60:	mov	x0, x21
   3fa64:	mov	x1, #0x13b4                	// #5044
   3fa68:	bl	65b0 <__asan_backtrace_alloc@plt>
   3fa6c:	mov	x26, x0
   3fa70:	cbz	x0, 3fa4c <__asan_internal_strnlen@@Base+0x3544>
   3fa74:	ldr	x3, [x27, #168]
   3fa78:	b	3f53c <__asan_internal_strnlen@@Base+0x3034>
   3fa7c:	mov	x3, #0x0                   	// #0
   3fa80:	mov	x24, #0x0                   	// #0
   3fa84:	b	3f280 <__asan_internal_strnlen@@Base+0x2d78>
   3fa88:	ldr	x1, [sp, #1184]
   3fa8c:	sub	x24, x1, x24
   3fa90:	add	x0, x0, x24
   3fa94:	str	x0, [sp, #1200]
   3fa98:	b	3f504 <__asan_internal_strnlen@@Base+0x2ffc>
   3fa9c:	ldr	x1, [sp, #1152]
   3faa0:	sub	x1, x1, x24
   3faa4:	add	x1, x0, x1
   3faa8:	str	x1, [sp, #1168]
   3faac:	b	3f4f8 <__asan_internal_strnlen@@Base+0x2ff0>
   3fab0:	ldr	x1, [sp, #1120]
   3fab4:	sub	x1, x1, x24
   3fab8:	add	x1, x0, x1
   3fabc:	str	x1, [sp, #1136]
   3fac0:	b	3f4ec <__asan_internal_strnlen@@Base+0x2fe4>
   3fac4:	ldr	x1, [sp, #1088]
   3fac8:	sub	x1, x1, x24
   3facc:	add	x1, x0, x1
   3fad0:	str	x1, [sp, #1104]
   3fad4:	b	3f4e0 <__asan_internal_strnlen@@Base+0x2fd8>
   3fad8:	ldr	x1, [sp, #1056]
   3fadc:	sub	x1, x1, x24
   3fae0:	add	x1, x0, x1
   3fae4:	str	x1, [sp, #1072]
   3fae8:	b	3f4d4 <__asan_internal_strnlen@@Base+0x2fcc>
   3faec:	str	xzr, [sp, #1040]
   3faf0:	b	3f4c8 <__asan_internal_strnlen@@Base+0x2fc0>
   3faf4:	str	xzr, [sp, #1008]
   3faf8:	b	3f4ac <__asan_internal_strnlen@@Base+0x2fa4>
   3fafc:	str	xzr, [sp, #976]
   3fb00:	b	3f490 <__asan_internal_strnlen@@Base+0x2f88>
   3fb04:	ldrh	w0, [x0, #6]
   3fb08:	cbz	w0, 3ed64 <__asan_internal_strnlen@@Base+0x285c>
   3fb0c:	add	x25, x25, #0x1
   3fb10:	b	3ed64 <__asan_internal_strnlen@@Base+0x285c>
   3fb14:	mov	w23, #0x1                   	// #1
   3fb18:	mov	w28, w23
   3fb1c:	b	3e5c8 <__asan_internal_strnlen@@Base+0x20c0>
   3fb20:	mov	w22, #0xffffffff            	// #-1
   3fb24:	b	3f388 <__asan_internal_strnlen@@Base+0x2e80>
   3fb28:	ldr	x1, [sp, #208]
   3fb2c:	mov	x3, x20
   3fb30:	mov	x2, x19
   3fb34:	mov	x0, x21
   3fb38:	mov	w23, #0x0                   	// #0
   3fb3c:	bl	6430 <__asan_backtrace_release_view@plt>
   3fb40:	b	3f628 <__asan_internal_strnlen@@Base+0x3120>
   3fb44:	ldrh	w2, [x0, #174]
   3fb48:	cbz	w2, 3ec80 <__asan_internal_strnlen@@Base+0x2778>
   3fb4c:	add	x25, x25, #0x1
   3fb50:	b	3ec80 <__asan_internal_strnlen@@Base+0x2778>
   3fb54:	ldrh	w2, [x0, #150]
   3fb58:	cbz	w2, 3ec60 <__asan_internal_strnlen@@Base+0x2758>
   3fb5c:	add	x25, x25, #0x1
   3fb60:	b	3ec60 <__asan_internal_strnlen@@Base+0x2758>
   3fb64:	ldrh	w2, [x0, #126]
   3fb68:	cbz	w2, 3ec40 <__asan_internal_strnlen@@Base+0x2738>
   3fb6c:	add	x25, x25, #0x1
   3fb70:	b	3ec40 <__asan_internal_strnlen@@Base+0x2738>
   3fb74:	ldrh	w2, [x0, #102]
   3fb78:	cbz	w2, 3ec20 <__asan_internal_strnlen@@Base+0x2718>
   3fb7c:	add	x25, x25, #0x1
   3fb80:	b	3ec20 <__asan_internal_strnlen@@Base+0x2718>
   3fb84:	mov	x0, x28
   3fb88:	mov	x1, #0x0                   	// #0
   3fb8c:	mov	x25, #0x0                   	// #0
   3fb90:	b	3eb8c <__asan_internal_strnlen@@Base+0x2684>
   3fb94:	mov	x3, x20
   3fb98:	mov	x2, x19
   3fb9c:	mov	x0, x21
   3fba0:	mov	x1, #0x0                   	// #0
   3fba4:	bl	65b0 <__asan_backtrace_alloc@plt>
   3fba8:	mov	x5, x0
   3fbac:	cbz	x0, 3f854 <__asan_internal_strnlen@@Base+0x334c>
   3fbb0:	mov	x25, #0x0                   	// #0
   3fbb4:	b	3ee34 <__asan_internal_strnlen@@Base+0x292c>
   3fbb8:	ldrh	w2, [x0, #318]
   3fbbc:	cbz	w2, 3ed40 <__asan_internal_strnlen@@Base+0x2838>
   3fbc0:	add	x25, x25, #0x1
   3fbc4:	b	3ed40 <__asan_internal_strnlen@@Base+0x2838>
   3fbc8:	ldrh	w2, [x0, #294]
   3fbcc:	cbz	w2, 3ed20 <__asan_internal_strnlen@@Base+0x2818>
   3fbd0:	add	x25, x25, #0x1
   3fbd4:	b	3ed20 <__asan_internal_strnlen@@Base+0x2818>
   3fbd8:	ldrh	w2, [x0, #270]
   3fbdc:	cbz	w2, 3ed00 <__asan_internal_strnlen@@Base+0x27f8>
   3fbe0:	add	x25, x25, #0x1
   3fbe4:	b	3ed00 <__asan_internal_strnlen@@Base+0x27f8>
   3fbe8:	ldrh	w2, [x0, #246]
   3fbec:	cbz	w2, 3ece0 <__asan_internal_strnlen@@Base+0x27d8>
   3fbf0:	add	x25, x25, #0x1
   3fbf4:	b	3ece0 <__asan_internal_strnlen@@Base+0x27d8>
   3fbf8:	ldrh	w2, [x0, #222]
   3fbfc:	cbz	w2, 3ecc0 <__asan_internal_strnlen@@Base+0x27b8>
   3fc00:	add	x25, x25, #0x1
   3fc04:	b	3ecc0 <__asan_internal_strnlen@@Base+0x27b8>
   3fc08:	ldrh	w2, [x0, #198]
   3fc0c:	cbz	w2, 3eca0 <__asan_internal_strnlen@@Base+0x2798>
   3fc10:	add	x25, x25, #0x1
   3fc14:	b	3eca0 <__asan_internal_strnlen@@Base+0x2798>
   3fc18:	sub	sp, sp, #0x70
   3fc1c:	stp	x29, x30, [sp, #48]
   3fc20:	add	x29, sp, #0x30
   3fc24:	ldr	w6, [x2, #56]
   3fc28:	str	x21, [sp, #80]
   3fc2c:	ldr	x21, [x0, #8]
   3fc30:	stp	x19, x20, [sp, #64]
   3fc34:	cmn	w6, #0x1
   3fc38:	mov	x20, x0
   3fc3c:	mov	x19, x2
   3fc40:	cbz	x21, 3fc4c <__asan_internal_strnlen@@Base+0x3744>
   3fc44:	ldrb	w0, [x21]
   3fc48:	cbnz	w0, 3fcd8 <__asan_internal_strnlen@@Base+0x37d0>
   3fc4c:	b.eq	3fcc0 <__asan_internal_strnlen@@Base+0x37b8>  // b.none
   3fc50:	ldr	x21, [x19, #48]
   3fc54:	mov	w0, #0xffffffff            	// #-1
   3fc58:	str	w0, [x19, #56]
   3fc5c:	add	x1, sp, #0x64
   3fc60:	mov	w2, w6
   3fc64:	ldr	x0, [x19]
   3fc68:	add	x6, sp, #0x68
   3fc6c:	ldr	x3, [x20]
   3fc70:	str	x1, [sp]
   3fc74:	mov	x1, x21
   3fc78:	ldr	x4, [x19, #8]
   3fc7c:	str	xzr, [sp, #8]
   3fc80:	ldr	x5, [x19, #16]
   3fc84:	str	wzr, [sp, #16]
   3fc88:	ldr	x7, [x19, #32]
   3fc8c:	str	wzr, [sp, #24]
   3fc90:	str	xzr, [sp, #32]
   3fc94:	str	wzr, [sp, #40]
   3fc98:	bl	3e0b0 <__asan_internal_strnlen@@Base+0x1ba8>
   3fc9c:	cbz	w0, 3fcc0 <__asan_internal_strnlen@@Base+0x37b8>
   3fca0:	ldr	w0, [sp, #100]
   3fca4:	cbz	w0, 3fcc0 <__asan_internal_strnlen@@Base+0x37b8>
   3fca8:	ldr	x1, [x19, #40]
   3fcac:	mov	w2, #0x1                   	// #1
   3fcb0:	ldr	x0, [x19, #24]
   3fcb4:	str	w2, [x1]
   3fcb8:	ldr	x1, [sp, #104]
   3fcbc:	str	x1, [x0]
   3fcc0:	mov	w0, #0x0                   	// #0
   3fcc4:	ldp	x29, x30, [sp, #48]
   3fcc8:	ldp	x19, x20, [sp, #64]
   3fccc:	ldr	x21, [sp, #80]
   3fcd0:	add	sp, sp, #0x70
   3fcd4:	ret
   3fcd8:	ldp	x1, x2, [x2, #8]
   3fcdc:	b.ne	3fcf8 <__asan_internal_strnlen@@Base+0x37f0>  // b.any
   3fce0:	add	x3, sp, #0x60
   3fce4:	mov	x0, x21
   3fce8:	bl	6a30 <__asan_backtrace_open@plt>
   3fcec:	mov	w6, w0
   3fcf0:	tbz	w0, #31, 3fc5c <__asan_internal_strnlen@@Base+0x3754>
   3fcf4:	b	3fcc0 <__asan_internal_strnlen@@Base+0x37b8>
   3fcf8:	mov	w0, w6
   3fcfc:	bl	6960 <__asan_backtrace_close@plt>
   3fd00:	ldp	x1, x2, [x19, #8]
   3fd04:	mov	w0, #0xffffffff            	// #-1
   3fd08:	ldr	x21, [x20, #8]
   3fd0c:	str	w0, [x19, #56]
   3fd10:	add	x3, sp, #0x60
   3fd14:	mov	x0, x21
   3fd18:	bl	6a30 <__asan_backtrace_open@plt>
   3fd1c:	mov	w6, w0
   3fd20:	tbz	w0, #31, 3fc5c <__asan_internal_strnlen@@Base+0x3754>
   3fd24:	b	3fcc0 <__asan_internal_strnlen@@Base+0x37b8>

000000000003fd28 <__asan_backtrace_uncompress_zdebug@@Base>:
   3fd28:	stp	x29, x30, [sp, #-80]!
   3fd2c:	mov	x29, sp
   3fd30:	stp	x19, x20, [sp, #16]
   3fd34:	mov	x20, x3
   3fd38:	mov	x3, x4
   3fd3c:	stp	x21, x22, [sp, #32]
   3fd40:	mov	x21, x4
   3fd44:	mov	x22, x0
   3fd48:	stp	x23, x24, [sp, #48]
   3fd4c:	mov	x23, x2
   3fd50:	mov	x24, x5
   3fd54:	mov	x2, x20
   3fd58:	stp	x25, x26, [sp, #64]
   3fd5c:	mov	x26, x1
   3fd60:	mov	x25, x6
   3fd64:	mov	x1, #0x13b4                	// #5044
   3fd68:	bl	65b0 <__asan_backtrace_alloc@plt>
   3fd6c:	cbz	x0, 3fe00 <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   3fd70:	str	xzr, [x24]
   3fd74:	mov	x19, x0
   3fd78:	str	xzr, [x25]
   3fd7c:	cmp	x23, #0xb
   3fd80:	b.hi	3fdbc <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   3fd84:	mov	w23, #0x1                   	// #1
   3fd88:	mov	x4, x21
   3fd8c:	mov	x3, x20
   3fd90:	mov	x1, x19
   3fd94:	mov	x0, x22
   3fd98:	mov	x2, #0x13b4                	// #5044
   3fd9c:	bl	6890 <__asan_backtrace_free@plt>
   3fda0:	mov	w0, w23
   3fda4:	ldp	x19, x20, [sp, #16]
   3fda8:	ldp	x21, x22, [sp, #32]
   3fdac:	ldp	x23, x24, [sp, #48]
   3fdb0:	ldp	x25, x26, [sp, #64]
   3fdb4:	ldp	x29, x30, [sp], #80
   3fdb8:	ret
   3fdbc:	adrp	x1, 49000 <__asan_backtrace_vector_release@@Base+0x8b10>
   3fdc0:	mov	x0, x26
   3fdc4:	add	x1, x1, #0xb90
   3fdc8:	mov	x2, #0x4                   	// #4
   3fdcc:	bl	68f0 <__asan_internal_memcmp@plt>
   3fdd0:	cbnz	w0, 3fd84 <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   3fdd4:	mov	x2, x23
   3fdd8:	mov	x7, x25
   3fddc:	mov	x6, x24
   3fde0:	mov	x1, x26
   3fde4:	mov	x5, x21
   3fde8:	mov	x4, x20
   3fdec:	mov	x3, x19
   3fdf0:	mov	x0, x22
   3fdf4:	bl	3df98 <__asan_internal_strnlen@@Base+0x1a90>
   3fdf8:	mov	w23, w0
   3fdfc:	b	3fd88 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   3fe00:	mov	w23, #0x0                   	// #0
   3fe04:	b	3fda0 <__asan_backtrace_uncompress_zdebug@@Base+0x78>

000000000003fe08 <__asan_backtrace_initialize@@Base>:
   3fe08:	sub	sp, sp, #0xe0
   3fe0c:	mov	w6, #0x1                   	// #1
   3fe10:	stp	x29, x30, [sp, #48]
   3fe14:	add	x29, sp, #0x30
   3fe18:	stp	x23, x24, [sp, #96]
   3fe1c:	adrp	x24, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3fe20:	add	x8, x24, #0x510
   3fe24:	str	w6, [sp, #16]
   3fe28:	mov	x23, x5
   3fe2c:	str	wzr, [sp, #24]
   3fe30:	mov	x5, x4
   3fe34:	str	xzr, [sp, #32]
   3fe38:	str	wzr, [sp, #40]
   3fe3c:	stp	x27, x28, [sp, #128]
   3fe40:	add	x28, sp, #0x94
   3fe44:	add	x27, sp, #0x98
   3fe48:	stp	x28, xzr, [sp]
   3fe4c:	mov	x6, x27
   3fe50:	stp	x25, x26, [sp, #112]
   3fe54:	add	x26, sp, #0x90
   3fe58:	mov	x25, x1
   3fe5c:	mov	x7, x26
   3fe60:	stp	x19, x20, [sp, #64]
   3fe64:	mov	x19, x0
   3fe68:	mov	w20, w2
   3fe6c:	stp	x21, x22, [sp, #80]
   3fe70:	mov	x22, x3
   3fe74:	mov	x21, x4
   3fe78:	mov	x4, x3
   3fe7c:	mov	x3, #0x0                   	// #0
   3fe80:	str	x8, [sp, #152]
   3fe84:	bl	3e0b0 <__asan_internal_strnlen@@Base+0x1ba8>
   3fe88:	cbz	w0, 3fef4 <__asan_backtrace_initialize@@Base+0xec>
   3fe8c:	cmp	w0, #0x0
   3fe90:	add	x1, sp, #0xa0
   3fe94:	csinv	w20, w20, wzr, lt  // lt = tstop
   3fe98:	adrp	x0, 3f000 <__asan_internal_strnlen@@Base+0x2af8>
   3fe9c:	add	x0, x0, #0xc18
   3fea0:	stp	x19, x22, [sp, #160]
   3fea4:	stp	x21, x27, [sp, #176]
   3fea8:	stp	x26, x28, [sp, #192]
   3feac:	str	x25, [sp, #208]
   3feb0:	str	w20, [sp, #216]
   3feb4:	bl	6640 <dl_iterate_phdr@plt>
   3feb8:	ldr	w0, [x19, #8]
   3febc:	cbnz	w0, 3ff14 <__asan_backtrace_initialize@@Base+0x10c>
   3fec0:	ldr	w0, [sp, #144]
   3fec4:	cbnz	w0, 3ff44 <__asan_backtrace_initialize@@Base+0x13c>
   3fec8:	ldr	x0, [x19, #40]
   3fecc:	cbz	x0, 3ff74 <__asan_backtrace_initialize@@Base+0x16c>
   3fed0:	ldr	x0, [x19, #24]
   3fed4:	str	x0, [x23]
   3fed8:	cmp	x0, #0x0
   3fedc:	add	x24, x24, #0x510
   3fee0:	ccmp	x0, x24, #0x4, ne  // ne = any
   3fee4:	mov	w0, #0x1                   	// #1
   3fee8:	b.ne	3fef4 <__asan_backtrace_initialize@@Base+0xec>  // b.any
   3feec:	ldr	x1, [sp, #152]
   3fef0:	str	x1, [x23]
   3fef4:	ldp	x29, x30, [sp, #48]
   3fef8:	ldp	x19, x20, [sp, #64]
   3fefc:	ldp	x21, x22, [sp, #80]
   3ff00:	ldp	x23, x24, [sp, #96]
   3ff04:	ldp	x25, x26, [sp, #112]
   3ff08:	ldp	x27, x28, [sp, #128]
   3ff0c:	add	sp, sp, #0xe0
   3ff10:	ret
   3ff14:	ldr	w1, [sp, #144]
   3ff18:	add	x0, x19, #0x28
   3ff1c:	cbz	w1, 3ff54 <__asan_backtrace_initialize@@Base+0x14c>
   3ff20:	adrp	x1, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3ff24:	add	x1, x1, #0xc20
   3ff28:	stlr	x1, [x0]
   3ff2c:	ldr	w0, [x19, #8]
   3ff30:	cbz	w0, 3fed0 <__asan_backtrace_initialize@@Base+0xc8>
   3ff34:	add	x19, x19, #0x18
   3ff38:	ldar	x0, [x19]
   3ff3c:	str	x0, [x23]
   3ff40:	b	3fed8 <__asan_backtrace_initialize@@Base+0xd0>
   3ff44:	adrp	x0, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3ff48:	add	x0, x0, #0xc20
   3ff4c:	str	x0, [x19, #40]
   3ff50:	b	3fed0 <__asan_backtrace_initialize@@Base+0xc8>
   3ff54:	adrp	x1, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3ff58:	add	x1, x1, #0x538
   3ff5c:	ldxr	x2, [x0]
   3ff60:	cbnz	x2, 3ff6c <__asan_backtrace_initialize@@Base+0x164>
   3ff64:	stlxr	w3, x1, [x0]
   3ff68:	cbnz	w3, 3ff5c <__asan_backtrace_initialize@@Base+0x154>
   3ff6c:	dmb	ish
   3ff70:	b	3ff2c <__asan_backtrace_initialize@@Base+0x124>
   3ff74:	adrp	x0, 3c000 <__asan_java_demangle_v3@@Base+0x218>
   3ff78:	add	x0, x0, #0x538
   3ff7c:	str	x0, [x19, #40]
   3ff80:	b	3fed0 <__asan_backtrace_initialize@@Base+0xc8>
   3ff84:	nop

000000000003ff88 <__asan_backtrace_get_view@@Base>:
   3ff88:	stp	x29, x30, [sp, #-64]!
   3ff8c:	mov	x29, sp
   3ff90:	stp	x19, x20, [sp, #16]
   3ff94:	mov	x19, x3
   3ff98:	mov	x20, x4
   3ff9c:	stp	x21, x22, [sp, #32]
   3ffa0:	mov	x22, x2
   3ffa4:	mov	x21, x5
   3ffa8:	stp	x23, x24, [sp, #48]
   3ffac:	mov	w24, w1
   3ffb0:	mov	x23, x6
   3ffb4:	bl	6940 <getpagesize@plt>
   3ffb8:	sxtw	x7, w0
   3ffbc:	sub	x8, x19, #0x1
   3ffc0:	neg	x1, x7
   3ffc4:	mov	w4, w24
   3ffc8:	mov	w3, #0x2                   	// #2
   3ffcc:	udiv	x19, x22, x7
   3ffd0:	mov	w2, #0x1                   	// #1
   3ffd4:	mov	x0, #0x0                   	// #0
   3ffd8:	msub	w19, w19, w7, w22
   3ffdc:	add	x7, x7, x19
   3ffe0:	sub	x5, x22, x19
   3ffe4:	add	x7, x8, x7
   3ffe8:	and	x22, x1, x7
   3ffec:	mov	x1, x22
   3fff0:	bl	66a0 <mmap@plt>
   3fff4:	cmn	x0, #0x1
   3fff8:	b.eq	40024 <__asan_backtrace_get_view@@Base+0x9c>  // b.none
   3fffc:	mov	x2, x0
   40000:	add	x19, x0, x19
   40004:	stp	x19, x2, [x23]
   40008:	mov	w0, #0x1                   	// #1
   4000c:	str	x22, [x23, #16]
   40010:	ldp	x19, x20, [sp, #16]
   40014:	ldp	x21, x22, [sp, #32]
   40018:	ldp	x23, x24, [sp, #48]
   4001c:	ldp	x29, x30, [sp], #64
   40020:	ret
   40024:	bl	6790 <__errno_location@plt>
   40028:	mov	x2, x0
   4002c:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x9b10>
   40030:	mov	x0, x21
   40034:	add	x1, x1, #0x4f0
   40038:	ldr	w2, [x2]
   4003c:	blr	x20
   40040:	mov	w0, #0x0                   	// #0
   40044:	ldp	x19, x20, [sp, #16]
   40048:	ldp	x21, x22, [sp, #32]
   4004c:	ldp	x23, x24, [sp, #48]
   40050:	ldp	x29, x30, [sp], #64
   40054:	ret

0000000000040058 <__asan_backtrace_release_view@@Base>:
   40058:	stp	x29, x30, [sp, #-32]!
   4005c:	mov	x29, sp
   40060:	ldp	x0, x1, [x1, #8]
   40064:	stp	x19, x20, [sp, #16]
   40068:	mov	x19, x2
   4006c:	mov	x20, x3
   40070:	bl	66b0 <munmap@plt>
   40074:	tbnz	w0, #31, 40084 <__asan_backtrace_release_view@@Base+0x2c>
   40078:	ldp	x19, x20, [sp, #16]
   4007c:	ldp	x29, x30, [sp], #32
   40080:	ret
   40084:	bl	6790 <__errno_location@plt>
   40088:	mov	x2, x0
   4008c:	mov	x16, x19
   40090:	mov	x0, x20
   40094:	ldp	x19, x20, [sp, #16]
   40098:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x9b10>
   4009c:	ldp	x29, x30, [sp], #32
   400a0:	add	x1, x1, #0x4f8
   400a4:	ldr	w2, [x2]
   400a8:	br	x16
   400ac:	nop

00000000000400b0 <__asan_backtrace_free@@Base>:
   400b0:	stp	x29, x30, [sp, #-48]!
   400b4:	mov	x29, sp
   400b8:	stp	x19, x20, [sp, #16]
   400bc:	mov	x19, x0
   400c0:	mov	x20, x1
   400c4:	str	x21, [sp, #32]
   400c8:	mov	x0, #0xffff                	// #65535
   400cc:	mov	x21, x2
   400d0:	cmp	x2, x0
   400d4:	b.ls	400f0 <__asan_backtrace_free@@Base+0x40>  // b.plast
   400d8:	bl	6940 <getpagesize@plt>
   400dc:	sxtw	x0, w0
   400e0:	orr	x1, x20, x21
   400e4:	sub	x0, x0, #0x1
   400e8:	tst	x0, x1
   400ec:	b.eq	401c4 <__asan_backtrace_free@@Base+0x114>  // b.none
   400f0:	ldr	w7, [x19, #8]
   400f4:	cbnz	w7, 40188 <__asan_backtrace_free@@Base+0xd8>
   400f8:	cmp	x21, #0xf
   400fc:	b.ls	40178 <__asan_backtrace_free@@Base+0xc8>  // b.plast
   40100:	ldr	x3, [x19, #64]
   40104:	add	x0, x19, #0x40
   40108:	mov	x9, x3
   4010c:	cbz	x3, 401d8 <__asan_backtrace_free@@Base+0x128>
   40110:	mov	x4, x3
   40114:	mov	x6, #0x0                   	// #0
   40118:	b	40134 <__asan_backtrace_free@@Base+0x84>
   4011c:	ldr	x4, [x0]
   40120:	ldr	x5, [x3, #8]
   40124:	ldr	x1, [x4, #8]
   40128:	cmp	x5, x1
   4012c:	csel	x4, x4, x3, cs  // cs = hs, nlast
   40130:	csel	x0, x0, x8, cs  // cs = hs, nlast
   40134:	mov	x8, x3
   40138:	add	x6, x6, #0x1
   4013c:	ldr	x3, [x3]
   40140:	cbnz	x3, 4011c <__asan_backtrace_free@@Base+0x6c>
   40144:	cmp	x6, #0xf
   40148:	b.ls	40164 <__asan_backtrace_free@@Base+0xb4>  // b.plast
   4014c:	ldr	x1, [x4, #8]
   40150:	cmp	x21, x1
   40154:	b.ls	4016c <__asan_backtrace_free@@Base+0xbc>  // b.plast
   40158:	ldr	x1, [x4]
   4015c:	str	x1, [x0]
   40160:	ldr	x9, [x19, #64]
   40164:	stp	x9, x21, [x20]
   40168:	str	x20, [x19, #64]
   4016c:	cbz	w7, 40178 <__asan_backtrace_free@@Base+0xc8>
   40170:	add	x19, x19, #0x3c
   40174:	stlr	wzr, [x19]
   40178:	ldp	x19, x20, [sp, #16]
   4017c:	ldr	x21, [sp, #32]
   40180:	ldp	x29, x30, [sp], #48
   40184:	ret
   40188:	add	x0, x19, #0x3c
   4018c:	mov	w3, #0x1                   	// #1
   40190:	ldxr	w1, [x0]
   40194:	stxr	w2, w3, [x0]
   40198:	cbnz	w2, 40190 <__asan_backtrace_free@@Base+0xe0>
   4019c:	dmb	ish
   401a0:	cbnz	w1, 40178 <__asan_backtrace_free@@Base+0xc8>
   401a4:	ldr	w7, [x19, #8]
   401a8:	cmp	x21, #0xf
   401ac:	b.ls	4016c <__asan_backtrace_free@@Base+0xbc>  // b.plast
   401b0:	ldr	x9, [x19, #64]
   401b4:	add	x0, x19, #0x40
   401b8:	mov	x3, x9
   401bc:	cbnz	x9, 40110 <__asan_backtrace_free@@Base+0x60>
   401c0:	b	40164 <__asan_backtrace_free@@Base+0xb4>
   401c4:	mov	x1, x21
   401c8:	mov	x0, x20
   401cc:	bl	66b0 <munmap@plt>
   401d0:	cbnz	w0, 400f0 <__asan_backtrace_free@@Base+0x40>
   401d4:	b	40178 <__asan_backtrace_free@@Base+0xc8>
   401d8:	stp	xzr, x21, [x20]
   401dc:	str	x20, [x19, #64]
   401e0:	b	40178 <__asan_backtrace_free@@Base+0xc8>
   401e4:	nop

00000000000401e8 <__asan_backtrace_alloc@@Base>:
   401e8:	stp	x29, x30, [sp, #-64]!
   401ec:	mov	x29, sp
   401f0:	ldr	w8, [x0, #8]
   401f4:	stp	x19, x20, [sp, #16]
   401f8:	mov	x20, x1
   401fc:	stp	x21, x22, [sp, #32]
   40200:	mov	x21, x0
   40204:	stp	x23, x24, [sp, #48]
   40208:	mov	x24, x2
   4020c:	mov	x23, x3
   40210:	cbnz	w8, 402f0 <__asan_backtrace_alloc@@Base+0x108>
   40214:	ldr	x4, [x0, #64]
   40218:	add	x7, x0, #0x40
   4021c:	cbz	x4, 40330 <__asan_backtrace_alloc@@Base+0x148>
   40220:	mov	x6, x7
   40224:	b	40230 <__asan_backtrace_alloc@@Base+0x48>
   40228:	mov	x6, x19
   4022c:	cbz	x4, 40320 <__asan_backtrace_alloc@@Base+0x138>
   40230:	ldr	x5, [x4, #8]
   40234:	mov	x19, x4
   40238:	ldr	x4, [x4]
   4023c:	cmp	x5, x20
   40240:	b.cc	40228 <__asan_backtrace_alloc@@Base+0x40>  // b.lo, b.ul, b.last
   40244:	add	x20, x20, #0x7
   40248:	str	x4, [x6]
   4024c:	and	x20, x20, #0xfffffffffffffff8
   40250:	cmp	x5, x20
   40254:	b.ls	402d4 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   40258:	sub	x5, x5, x20
   4025c:	cmp	x5, #0xf
   40260:	b.ls	402d4 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   40264:	ldr	x9, [x21, #64]
   40268:	mov	x4, #0x0                   	// #0
   4026c:	mov	x0, x9
   40270:	mov	x1, x9
   40274:	cbnz	x9, 40294 <__asan_backtrace_alloc@@Base+0xac>
   40278:	b	402c4 <__asan_backtrace_alloc@@Base+0xdc>
   4027c:	ldr	x1, [x7]
   40280:	ldr	x3, [x0, #8]
   40284:	ldr	x2, [x1, #8]
   40288:	cmp	x3, x2
   4028c:	csel	x1, x1, x0, cs  // cs = hs, nlast
   40290:	csel	x7, x7, x6, cs  // cs = hs, nlast
   40294:	mov	x6, x0
   40298:	add	x4, x4, #0x1
   4029c:	ldr	x0, [x0]
   402a0:	cbnz	x0, 4027c <__asan_backtrace_alloc@@Base+0x94>
   402a4:	cmp	x4, #0xf
   402a8:	b.ls	402c4 <__asan_backtrace_alloc@@Base+0xdc>  // b.plast
   402ac:	ldr	x0, [x1, #8]
   402b0:	cmp	x5, x0
   402b4:	b.ls	402d4 <__asan_backtrace_alloc@@Base+0xec>  // b.plast
   402b8:	ldr	x0, [x1]
   402bc:	str	x0, [x7]
   402c0:	ldr	x9, [x21, #64]
   402c4:	add	x0, x19, x20
   402c8:	str	x9, [x19, x20]
   402cc:	str	x5, [x0, #8]
   402d0:	str	x0, [x21, #64]
   402d4:	cbnz	w8, 403c4 <__asan_backtrace_alloc@@Base+0x1dc>
   402d8:	mov	x0, x19
   402dc:	ldp	x19, x20, [sp, #16]
   402e0:	ldp	x21, x22, [sp, #32]
   402e4:	ldp	x23, x24, [sp, #48]
   402e8:	ldp	x29, x30, [sp], #64
   402ec:	ret
   402f0:	add	x0, x0, #0x3c
   402f4:	mov	w2, #0x1                   	// #1
   402f8:	ldxr	w1, [x0]
   402fc:	stxr	w3, w2, [x0]
   40300:	cbnz	w3, 402f8 <__asan_backtrace_alloc@@Base+0x110>
   40304:	dmb	ish
   40308:	cbnz	w1, 40330 <__asan_backtrace_alloc@@Base+0x148>
   4030c:	ldr	x4, [x21, #64]
   40310:	add	x7, x21, #0x40
   40314:	ldr	w8, [x21, #8]
   40318:	cbnz	x4, 40220 <__asan_backtrace_alloc@@Base+0x38>
   4031c:	nop
   40320:	cbz	w8, 40330 <__asan_backtrace_alloc@@Base+0x148>
   40324:	add	x0, x21, #0x3c
   40328:	stlr	wzr, [x0]
   4032c:	nop
   40330:	bl	6940 <getpagesize@plt>
   40334:	sub	x22, x20, #0x1
   40338:	sxtw	x0, w0
   4033c:	mov	x5, #0x0                   	// #0
   40340:	add	x22, x22, x0
   40344:	neg	x0, x0
   40348:	and	x22, x22, x0
   4034c:	mov	w4, #0xffffffff            	// #-1
   40350:	mov	x1, x22
   40354:	mov	w3, #0x22                  	// #34
   40358:	mov	w2, #0x3                   	// #3
   4035c:	mov	x0, #0x0                   	// #0
   40360:	bl	66a0 <mmap@plt>
   40364:	mov	x19, x0
   40368:	cmn	x0, #0x1
   4036c:	b.eq	4039c <__asan_backtrace_alloc@@Base+0x1b4>  // b.none
   40370:	add	x1, x20, #0x7
   40374:	and	x1, x1, #0xfffffffffffffff8
   40378:	cmp	x22, x1
   4037c:	b.ls	402d8 <__asan_backtrace_alloc@@Base+0xf0>  // b.plast
   40380:	sub	x2, x22, x1
   40384:	mov	x4, x23
   40388:	add	x1, x0, x1
   4038c:	mov	x3, x24
   40390:	mov	x0, x21
   40394:	bl	6890 <__asan_backtrace_free@plt>
   40398:	b	402d8 <__asan_backtrace_alloc@@Base+0xf0>
   4039c:	mov	x19, #0x0                   	// #0
   403a0:	cbz	x24, 402d8 <__asan_backtrace_alloc@@Base+0xf0>
   403a4:	bl	6790 <__errno_location@plt>
   403a8:	mov	x2, x0
   403ac:	adrp	x1, 4a000 <__asan_backtrace_vector_release@@Base+0x9b10>
   403b0:	mov	x0, x23
   403b4:	add	x1, x1, #0x4f0
   403b8:	ldr	w2, [x2]
   403bc:	blr	x24
   403c0:	b	402d8 <__asan_backtrace_alloc@@Base+0xf0>
   403c4:	add	x21, x21, #0x3c
   403c8:	stlr	wzr, [x21]
   403cc:	b	402d8 <__asan_backtrace_alloc@@Base+0xf0>

00000000000403d0 <__asan_backtrace_vector_grow@@Base>:
   403d0:	stp	x29, x30, [sp, #-80]!
   403d4:	mov	x29, sp
   403d8:	ldp	x6, x5, [x4, #8]
   403dc:	stp	x19, x20, [sp, #16]
   403e0:	mov	x19, x4
   403e4:	stp	x21, x22, [sp, #32]
   403e8:	mov	x21, x1
   403ec:	add	x20, x1, x6
   403f0:	cmp	x5, x1
   403f4:	b.cc	4041c <__asan_backtrace_vector_grow@@Base+0x4c>  // b.lo, b.ul, b.last
   403f8:	ldr	x22, [x4]
   403fc:	add	x22, x22, x6
   40400:	sub	x5, x5, x21
   40404:	stp	x20, x5, [x19, #8]
   40408:	mov	x0, x22
   4040c:	ldp	x19, x20, [sp, #16]
   40410:	ldp	x21, x22, [sp, #32]
   40414:	ldp	x29, x30, [sp], #80
   40418:	ret
   4041c:	stp	x23, x24, [sp, #48]
   40420:	mov	x23, x0
   40424:	mov	x24, x2
   40428:	str	x25, [sp, #64]
   4042c:	mov	x25, x3
   40430:	cbnz	x6, 4049c <__asan_backtrace_vector_grow@@Base+0xcc>
   40434:	lsl	x20, x20, #4
   40438:	mov	x3, x25
   4043c:	mov	x2, x24
   40440:	mov	x1, x20
   40444:	mov	x0, x23
   40448:	bl	65b0 <__asan_backtrace_alloc@plt>
   4044c:	mov	x22, x0
   40450:	cbz	x0, 404d0 <__asan_backtrace_vector_grow@@Base+0x100>
   40454:	ldp	x1, x6, [x19]
   40458:	cbz	x1, 40484 <__asan_backtrace_vector_grow@@Base+0xb4>
   4045c:	mov	x2, x6
   40460:	bl	64a0 <__asan_internal_memcpy@plt>
   40464:	ldp	x1, x5, [x19]
   40468:	mov	x4, x25
   4046c:	ldr	x2, [x19, #16]
   40470:	mov	x3, x24
   40474:	mov	x0, x23
   40478:	add	x2, x5, x2
   4047c:	bl	6890 <__asan_backtrace_free@plt>
   40480:	ldr	x6, [x19, #8]
   40484:	sub	x5, x20, x6
   40488:	add	x20, x21, x6
   4048c:	ldp	x23, x24, [sp, #48]
   40490:	ldr	x25, [sp, #64]
   40494:	str	x22, [x19]
   40498:	b	403fc <__asan_backtrace_vector_grow@@Base+0x2c>
   4049c:	bl	6940 <getpagesize@plt>
   404a0:	cmp	x20, w0, sxtw
   404a4:	lsl	x6, x20, #1
   404a8:	sxtw	x5, w0
   404ac:	b.cs	404bc <__asan_backtrace_vector_grow@@Base+0xec>  // b.hs, b.nlast
   404b0:	cmp	x5, x6
   404b4:	csel	x20, x5, x6, ls  // ls = plast
   404b8:	b	40438 <__asan_backtrace_vector_grow@@Base+0x68>
   404bc:	sub	x20, x6, #0x1
   404c0:	neg	x0, x5
   404c4:	add	x20, x20, x5
   404c8:	and	x20, x20, x0
   404cc:	b	40438 <__asan_backtrace_vector_grow@@Base+0x68>
   404d0:	ldp	x23, x24, [sp, #48]
   404d4:	ldr	x25, [sp, #64]
   404d8:	b	40408 <__asan_backtrace_vector_grow@@Base+0x38>
   404dc:	nop

00000000000404e0 <__asan_backtrace_vector_finish@@Base>:
   404e0:	ldp	x0, x2, [x1]
   404e4:	add	x2, x0, x2
   404e8:	stp	x2, xzr, [x1]
   404ec:	ret

00000000000404f0 <__asan_backtrace_vector_release@@Base>:
   404f0:	stp	x29, x30, [sp, #-32]!
   404f4:	mov	x4, x3
   404f8:	mov	x3, x2
   404fc:	mov	x29, sp
   40500:	ldp	x2, x6, [x1, #8]
   40504:	str	x19, [sp, #16]
   40508:	mov	x19, x1
   4050c:	ldr	x5, [x19]
   40510:	add	x1, x2, #0x7
   40514:	and	x1, x1, #0xfffffffffffffff8
   40518:	add	x2, x2, x6
   4051c:	sub	x2, x2, x1
   40520:	add	x1, x5, x1
   40524:	bl	6890 <__asan_backtrace_free@plt>
   40528:	str	xzr, [x19, #16]
   4052c:	ldr	x0, [x19, #8]
   40530:	cbnz	x0, 40538 <__asan_backtrace_vector_release@@Base+0x48>
   40534:	str	xzr, [x19]
   40538:	mov	w0, #0x1                   	// #1
   4053c:	ldr	x19, [sp, #16]
   40540:	ldp	x29, x30, [sp], #32
   40544:	ret
   40548:	adrp	x2, 66000 <_Unwind_Backtrace@GCC_3.3>
   4054c:	mov	x1, #0x0                   	// #0
   40550:	ldr	x2, [x2, #896]
   40554:	b	66f0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000040558 <.fini>:
   40558:	stp	x29, x30, [sp, #-16]!
   4055c:	mov	x29, sp
   40560:	ldp	x29, x30, [sp], #16
   40564:	ret
