
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//romfs.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_romfs_close>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0, #80]
  10:	ldr	x0, [x19, #8]
  14:	bl	0 <grub_free>
  18:	mov	x0, x19
  1c:	bl	0 <grub_free>
  20:	mov	w0, #0x0                   	// #0
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

0000000000000030 <grub_romfs_read>:
  30:	stp	x29, x30, [sp, #-32]!
  34:	mov	x4, x1
  38:	mov	x5, x0
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x3, x2
  48:	mov	x19, x2
  4c:	ldp	x20, x1, [x0, #80]
  50:	ldp	x0, x2, [x20, #8]
  54:	ldr	x0, [x0, #8]
  58:	str	x1, [x0, #48]
  5c:	ldr	x1, [x5, #96]
  60:	ldr	x5, [x5, #24]
  64:	str	x1, [x0, #56]
  68:	add	x5, x2, x5
  6c:	and	x2, x5, #0x1ff
  70:	lsr	x1, x5, #9
  74:	bl	0 <grub_disk_read>
  78:	ldr	x0, [x20, #8]
  7c:	ldr	x0, [x0, #8]
  80:	str	xzr, [x0, #48]
  84:	adrp	x0, 0 <grub_romfs_close>
  88:	ldr	x0, [x0]
  8c:	ldr	w0, [x0]
  90:	cmp	w0, #0x0
  94:	csinv	x0, x19, xzr, eq  // eq = none
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	nop
	...

00000000000000b0 <grub_romfs_read_symlink>:
  b0:	stp	x29, x30, [sp, #-32]!
  b4:	mov	x29, sp
  b8:	stp	x19, x20, [sp, #16]
  bc:	mov	x20, x0
  c0:	ldr	w0, [x0, #32]
  c4:	rev	w0, w0
  c8:	add	w0, w0, #0x1
  cc:	bl	0 <grub_malloc>
  d0:	mov	x19, x0
  d4:	cbz	x0, 108 <grub_romfs_read_symlink+0x58>
  d8:	mov	x4, x0
  dc:	ldr	w3, [x20, #32]
  e0:	ldp	x0, x1, [x20, #8]
  e4:	rev	w3, w3
  e8:	ldr	x0, [x0, #8]
  ec:	and	x2, x1, #0x1ff
  f0:	lsr	x1, x1, #9
  f4:	bl	0 <grub_disk_read>
  f8:	cbz	w0, 118 <grub_romfs_read_symlink+0x68>
  fc:	mov	x0, x19
 100:	mov	x19, #0x0                   	// #0
 104:	bl	0 <grub_free>
 108:	mov	x0, x19
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x29, x30, [sp], #32
 114:	ret
 118:	ldr	w0, [x20, #32]
 11c:	rev	w0, w0
 120:	strb	wzr, [x19, x0]
 124:	b	108 <grub_romfs_read_symlink+0x58>

0000000000000128 <grub_romfs_iterate_dir>:
 128:	stp	x29, x30, [sp, #-144]!
 12c:	mov	x29, sp
 130:	stp	x27, x28, [sp, #80]
 134:	ldr	x28, [x0, #16]
 138:	stp	x21, x22, [sp, #32]
 13c:	mov	x21, x0
 140:	stp	x25, x26, [sp, #64]
 144:	add	x25, sp, #0x80
 148:	mov	x22, #0x0                   	// #0
 14c:	adrp	x26, 0 <grub_romfs_close>
 150:	stp	x19, x20, [sp, #16]
 154:	stp	x23, x24, [sp, #48]
 158:	mov	x24, #0x0                   	// #0
 15c:	stp	x1, x2, [sp, #96]
 160:	cbnz	x28, 174 <grub_romfs_iterate_dir+0x4c>
 164:	mov	x0, x22
 168:	bl	0 <grub_free>
 16c:	mov	w0, #0x0                   	// #0
 170:	b	1f8 <grub_romfs_iterate_dir+0xd0>
 174:	ldr	x0, [x21, #8]
 178:	add	x4, sp, #0x70
 17c:	and	x2, x28, #0x1ff
 180:	lsr	x1, x28, #9
 184:	mov	x3, #0x10                  	// #16
 188:	add	x27, x28, #0x10
 18c:	ldr	x0, [x0, #8]
 190:	bl	0 <grub_disk_read>
 194:	mov	w20, w0
 198:	cbz	w0, 1a8 <grub_romfs_iterate_dir+0x80>
 19c:	mov	x0, x22
 1a0:	bl	0 <grub_free>
 1a4:	b	1f4 <grub_romfs_iterate_dir+0xcc>
 1a8:	mov	x19, x27
 1ac:	mov	w23, w20
 1b0:	cmp	x24, w20, uxtw
 1b4:	b.hi	1d4 <grub_romfs_iterate_dir+0xac>  // b.pmore
 1b8:	add	w1, w20, #0x1
 1bc:	mov	x0, x22
 1c0:	lsl	w24, w1, #1
 1c4:	ubfiz	x1, x1, #5, #31
 1c8:	bl	0 <grub_realloc>
 1cc:	cbz	x0, 19c <grub_romfs_iterate_dir+0x74>
 1d0:	mov	x22, x0
 1d4:	ldr	x0, [x21, #8]
 1d8:	add	x4, x22, x23, lsl #4
 1dc:	and	x2, x19, #0x1ff
 1e0:	lsr	x1, x19, #9
 1e4:	mov	x3, #0x10                  	// #16
 1e8:	ldr	x0, [x0, #8]
 1ec:	bl	0 <grub_disk_read>
 1f0:	cbz	w0, 214 <grub_romfs_iterate_dir+0xec>
 1f4:	mov	w0, #0x1                   	// #1
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldp	x21, x22, [sp, #32]
 200:	ldp	x23, x24, [sp, #48]
 204:	ldp	x25, x26, [sp, #64]
 208:	ldp	x27, x28, [sp, #80]
 20c:	ldp	x29, x30, [sp], #144
 210:	ret
 214:	lsl	w1, w20, #4
 218:	add	w2, w1, w0
 21c:	ldrb	w2, [x22, x2]
 220:	cbz	w2, 3cc <grub_romfs_iterate_dir+0x2a4>
 224:	add	w0, w0, #0x1
 228:	cmp	w0, #0x10
 22c:	b.ne	218 <grub_romfs_iterate_dir+0xf0>  // b.any
 230:	add	w20, w20, #0x1
 234:	add	x19, x19, #0x10
 238:	b	1ac <grub_romfs_iterate_dir+0x84>
 23c:	ldr	w1, [x22, x0, lsl #2]
 240:	add	x0, x0, #0x1
 244:	rev	w1, w1
 248:	add	w19, w19, w1
 24c:	cmp	w2, w0
 250:	b.hi	23c <grub_romfs_iterate_dir+0x114>  // b.pmore
 254:	cbz	w19, 26c <grub_romfs_iterate_dir+0x144>
 258:	adrp	x0, 0 <grub_romfs_close>
 25c:	ldr	x1, [x0]
 260:	mov	w0, #0x9                   	// #9
 264:	bl	0 <grub_error>
 268:	b	19c <grub_romfs_iterate_dir+0x74>
 26c:	mov	x0, #0x28                  	// #40
 270:	bl	0 <grub_malloc>
 274:	mov	x23, x0
 278:	cbz	x0, 1f4 <grub_romfs_iterate_dir+0xcc>
 27c:	ldr	x0, [x21, #8]
 280:	stp	x28, x0, [x23]
 284:	lsl	w20, w20, #4
 288:	ldp	x0, x1, [sp, #112]
 28c:	stp	x0, x1, [x23, #24]
 290:	ldr	w0, [sp, #112]
 294:	add	x20, x20, x27
 298:	str	x20, [x23, #16]
 29c:	rev	w0, w0
 2a0:	and	w0, w0, #0x7
 2a4:	cmp	w0, #0x3
 2a8:	b.hi	2c4 <grub_romfs_iterate_dir+0x19c>  // b.pmore
 2ac:	ldr	x1, [x26]
 2b0:	ldrb	w1, [x1, w0, uxtw]
 2b4:	adr	x2, 2c0 <grub_romfs_iterate_dir+0x198>
 2b8:	add	x1, x2, w1, sxtb #2
 2bc:	br	x1
 2c0:	mov	w19, w0
 2c4:	ldp	x4, x3, [sp, #96]
 2c8:	mov	x2, x23
 2cc:	mov	w1, w19
 2d0:	mov	x0, x22
 2d4:	blr	x4
 2d8:	cbnz	w0, 19c <grub_romfs_iterate_dir+0x74>
 2dc:	ldr	w28, [sp, #112]
 2e0:	rev	w28, w28
 2e4:	and	x28, x28, #0xfffffff0
 2e8:	b	160 <grub_romfs_iterate_dir+0x38>
 2ec:	ldr	w0, [sp, #116]
 2f0:	rev	w0, w0
 2f4:	mov	w19, #0x2                   	// #2
 2f8:	str	x0, [x23, #16]
 2fc:	b	2c4 <grub_romfs_iterate_dir+0x19c>
 300:	ldr	x0, [x21, #8]
 304:	mov	x4, x23
 308:	ldr	w19, [sp, #116]
 30c:	mov	x3, #0x10                  	// #16
 310:	ldr	x0, [x0, #8]
 314:	rev	w2, w19
 318:	rev	w19, w19
 31c:	str	x19, [x4], #24
 320:	and	x2, x2, #0x1ff
 324:	lsr	x1, x19, #9
 328:	bl	0 <grub_disk_read>
 32c:	cbnz	w0, 1f4 <grub_romfs_iterate_dir+0xcc>
 330:	ldr	w0, [x23, #24]
 334:	rev	w0, w0
 338:	and	w0, w0, #0x7
 33c:	sub	w0, w0, #0x2
 340:	cmp	w0, #0x1
 344:	b.hi	3a0 <grub_romfs_iterate_dir+0x278>  // b.pmore
 348:	ldr	x0, [x21, #8]
 34c:	add	x19, x19, #0x10
 350:	mov	x4, x25
 354:	and	x2, x19, #0x1ff
 358:	lsr	x1, x19, #9
 35c:	mov	x3, #0x10                  	// #16
 360:	ldr	x0, [x0, #8]
 364:	bl	0 <grub_disk_read>
 368:	cbnz	w0, 1f4 <grub_romfs_iterate_dir+0xcc>
 36c:	mov	x0, #0x0                   	// #0
 370:	ldrb	w1, [x25, x0]
 374:	cbz	w1, 398 <grub_romfs_iterate_dir+0x270>
 378:	add	x0, x0, #0x1
 37c:	cmp	x0, #0x10
 380:	b.ne	370 <grub_romfs_iterate_dir+0x248>  // b.any
 384:	b	348 <grub_romfs_iterate_dir+0x220>
 388:	mov	w19, #0x1                   	// #1
 38c:	b	2c4 <grub_romfs_iterate_dir+0x19c>
 390:	mov	w19, #0x0                   	// #0
 394:	b	2c4 <grub_romfs_iterate_dir+0x19c>
 398:	add	x19, x19, #0x10
 39c:	str	x19, [x23, #16]
 3a0:	ldr	w19, [x23, #24]
 3a4:	rev	w19, w19
 3a8:	and	w19, w19, #0x7
 3ac:	cmp	w19, #0x2
 3b0:	b.eq	388 <grub_romfs_iterate_dir+0x260>  // b.none
 3b4:	cmp	w19, #0x3
 3b8:	b.eq	2c4 <grub_romfs_iterate_dir+0x19c>  // b.none
 3bc:	cmp	w19, #0x1
 3c0:	b.ne	390 <grub_romfs_iterate_dir+0x268>  // b.any
 3c4:	ldr	w0, [x23, #28]
 3c8:	b	2f0 <grub_romfs_iterate_dir+0x1c8>
 3cc:	ldp	w19, w2, [sp, #112]
 3d0:	add	w20, w20, #0x1
 3d4:	ldp	w1, w0, [sp, #120]
 3d8:	rev	w2, w2
 3dc:	rev	w19, w19
 3e0:	rev	w0, w0
 3e4:	rev	w1, w1
 3e8:	add	w19, w19, w2
 3ec:	add	w1, w1, w0
 3f0:	add	w19, w19, w1
 3f4:	lsl	w2, w20, #2
 3f8:	mov	x0, #0x0                   	// #0
 3fc:	b	24c <grub_romfs_iterate_dir+0x124>
	...

0000000000000410 <grub_romfs_dir_iter>:
 410:	stp	x29, x30, [sp, #-64]!
 414:	mov	x29, sp
 418:	stp	x19, x20, [sp, #16]
 41c:	mov	w19, w1
 420:	mov	x20, x3
 424:	and	w19, w19, #0xff
 428:	mov	w1, #0x0                   	// #0
 42c:	stp	x21, x22, [sp, #32]
 430:	mov	x21, x0
 434:	mov	x22, x2
 438:	add	x0, sp, #0x30
 43c:	mov	x2, #0x10                  	// #16
 440:	bl	0 <grub_memset>
 444:	cmp	w19, #0x2
 448:	ldrb	w0, [sp, #48]
 44c:	cset	w1, eq  // eq = none
 450:	bfxil	w0, w1, #0, #1
 454:	strb	w0, [sp, #48]
 458:	mov	x0, x22
 45c:	bl	0 <grub_free>
 460:	ldp	x3, x2, [x20]
 464:	add	x1, sp, #0x30
 468:	mov	x0, x21
 46c:	blr	x3
 470:	ldp	x19, x20, [sp, #16]
 474:	ldp	x21, x22, [sp, #32]
 478:	ldp	x29, x30, [sp], #64
 47c:	ret

0000000000000480 <grub_romfs_mount.isra.0>:
 480:	sub	sp, sp, #0x240
 484:	stp	x29, x30, [sp]
 488:	mov	x29, sp
 48c:	stp	x19, x20, [sp, #16]
 490:	ldr	x20, [x0]
 494:	stp	x21, x22, [sp, #32]
 498:	str	x23, [sp, #48]
 49c:	cbnz	x20, 4cc <grub_romfs_mount.isra.0+0x4c>
 4a0:	adrp	x0, 0 <grub_romfs_close>
 4a4:	ldr	x1, [x0]
 4a8:	mov	w0, #0x9                   	// #9
 4ac:	bl	0 <grub_error>
 4b0:	mov	x0, x20
 4b4:	ldp	x29, x30, [sp]
 4b8:	ldp	x19, x20, [sp, #16]
 4bc:	ldp	x21, x22, [sp, #32]
 4c0:	ldr	x23, [sp, #48]
 4c4:	add	sp, sp, #0x240
 4c8:	ret
 4cc:	add	x21, sp, #0x40
 4d0:	mov	x22, x0
 4d4:	mov	x4, x21
 4d8:	mov	x0, x20
 4dc:	mov	x3, #0x200                 	// #512
 4e0:	mov	x2, #0x0                   	// #0
 4e4:	mov	x1, #0x0                   	// #0
 4e8:	bl	0 <grub_disk_read>
 4ec:	mov	w19, w0
 4f0:	cmp	w0, #0xb
 4f4:	b.ne	510 <grub_romfs_mount.isra.0+0x90>  // b.any
 4f8:	adrp	x0, 0 <grub_romfs_close>
 4fc:	mov	w1, #0x9                   	// #9
 500:	ldr	x0, [x0]
 504:	str	w1, [x0]
 508:	mov	x20, #0x0                   	// #0
 50c:	b	4b0 <grub_romfs_mount.isra.0+0x30>
 510:	cbnz	w0, 508 <grub_romfs_mount.isra.0+0x88>
 514:	ldr	w0, [sp, #72]
 518:	rev	w0, w0
 51c:	cmp	w0, #0x1ff
 520:	b.hi	538 <grub_romfs_mount.isra.0+0xb8>  // b.pmore
 524:	adrp	x0, 0 <grub_romfs_close>
 528:	ldr	x1, [x0]
 52c:	mov	w0, #0x9                   	// #9
 530:	bl	0 <grub_error>
 534:	b	508 <grub_romfs_mount.isra.0+0x88>
 538:	adrp	x0, 0 <grub_romfs_close>
 53c:	mov	x2, #0x8                   	// #8
 540:	ldr	x1, [x0]
 544:	mov	x0, x21
 548:	bl	0 <grub_memcmp>
 54c:	cbz	w0, 55c <grub_romfs_mount.isra.0+0xdc>
 550:	adrp	x0, 0 <grub_romfs_close>
 554:	ldr	x1, [x0]
 558:	b	52c <grub_romfs_mount.isra.0+0xac>
 55c:	ldr	w1, [sp, #72]
 560:	mov	w0, #0x200                 	// #512
 564:	rev	w1, w1
 568:	cmp	w1, #0x200
 56c:	csel	w1, w1, w0, ls  // ls = plast
 570:	mov	x0, x21
 574:	and	x1, x1, #0xfffffffffffffffc
 578:	add	x1, x21, x1
 57c:	cmp	x1, x0
 580:	b.hi	5d0 <grub_romfs_mount.isra.0+0x150>  // b.pmore
 584:	cbnz	w19, 5e0 <grub_romfs_mount.isra.0+0x160>
 588:	ldr	w0, [sp, #72]
 58c:	add	x19, x21, #0x10
 590:	rev	w0, w0
 594:	sub	x1, x19, x21
 598:	cmp	x1, x0
 59c:	b.lt	600 <grub_romfs_mount.isra.0+0x180>  // b.tstop
 5a0:	mov	x23, #0x0                   	// #0
 5a4:	mov	x0, #0x10                  	// #16
 5a8:	bl	0 <grub_malloc>
 5ac:	mov	x20, x0
 5b0:	cbz	x0, 4b0 <grub_romfs_mount.isra.0+0x30>
 5b4:	sub	x19, x19, x21
 5b8:	add	x19, x19, #0x10
 5bc:	and	x19, x19, #0xfffffffffffffff0
 5c0:	ldr	x0, [x22]
 5c4:	add	x19, x19, x23, lsl #9
 5c8:	stp	x19, x0, [x20]
 5cc:	b	4b0 <grub_romfs_mount.isra.0+0x30>
 5d0:	ldr	w2, [x0], #4
 5d4:	rev	w2, w2
 5d8:	add	w19, w19, w2
 5dc:	b	57c <grub_romfs_mount.isra.0+0xfc>
 5e0:	adrp	x0, 0 <grub_romfs_close>
 5e4:	ldr	x1, [x0]
 5e8:	mov	w0, #0x9                   	// #9
 5ec:	bl	0 <grub_error>
 5f0:	cbz	w0, 588 <grub_romfs_mount.isra.0+0x108>
 5f4:	adrp	x0, 0 <grub_romfs_close>
 5f8:	ldr	x1, [x0]
 5fc:	b	52c <grub_romfs_mount.isra.0+0xac>
 600:	ldrb	w1, [x19]
 604:	cbz	w1, 61c <grub_romfs_mount.isra.0+0x19c>
 608:	add	x19, x19, #0x1
 60c:	add	x1, sp, #0x240
 610:	cmp	x19, x1
 614:	b.ne	594 <grub_romfs_mount.isra.0+0x114>  // b.any
 618:	mov	x19, x1
 61c:	mov	x23, #0x0                   	// #0
 620:	add	x0, sp, #0x240
 624:	cmp	x19, x0
 628:	b.ne	5a4 <grub_romfs_mount.isra.0+0x124>  // b.any
 62c:	ldr	x0, [x22]
 630:	add	x23, x23, #0x1
 634:	mov	x4, x21
 638:	mov	x1, x23
 63c:	mov	x3, #0x200                 	// #512
 640:	mov	x2, #0x0                   	// #0
 644:	bl	0 <grub_disk_read>
 648:	cmp	w0, #0xb
 64c:	b.eq	4f8 <grub_romfs_mount.isra.0+0x78>  // b.none
 650:	cbnz	w0, 508 <grub_romfs_mount.isra.0+0x88>
 654:	ldr	w0, [sp, #72]
 658:	lsl	x2, x23, #9
 65c:	mov	x19, x21
 660:	rev	w0, w0
 664:	sub	x1, x19, x21
 668:	add	x1, x1, x2
 66c:	cmp	x1, x0
 670:	b.cs	620 <grub_romfs_mount.isra.0+0x1a0>  // b.hs, b.nlast
 674:	ldrb	w1, [x19]
 678:	cbz	w1, 620 <grub_romfs_mount.isra.0+0x1a0>
 67c:	add	x19, x19, #0x1
 680:	add	x1, sp, #0x240
 684:	cmp	x19, x1
 688:	b.ne	664 <grub_romfs_mount.isra.0+0x1e4>  // b.any
 68c:	add	x19, sp, #0x240
 690:	b	620 <grub_romfs_mount.isra.0+0x1a0>
 694:	nop
	...

00000000000006d0 <grub_romfs_label>:
 6d0:	stp	x29, x30, [sp, #-48]!
 6d4:	mov	x29, sp
 6d8:	stp	x19, x20, [sp, #16]
 6dc:	mov	x20, x1
 6e0:	str	x21, [sp, #32]
 6e4:	mov	x21, x0
 6e8:	str	xzr, [x1]
 6ec:	bl	480 <grub_romfs_mount.isra.0>
 6f0:	cbnz	x0, 714 <grub_romfs_label+0x44>
 6f4:	adrp	x0, 0 <grub_romfs_close>
 6f8:	ldr	x0, [x0]
 6fc:	ldr	w21, [x0]
 700:	mov	w0, w21
 704:	ldp	x19, x20, [sp, #16]
 708:	ldr	x21, [sp, #32]
 70c:	ldp	x29, x30, [sp], #48
 710:	ret
 714:	mov	x19, x0
 718:	ldr	x0, [x0]
 71c:	sub	x0, x0, #0xf
 720:	bl	0 <grub_malloc>
 724:	str	x0, [x20]
 728:	mov	x4, x0
 72c:	cbnz	x0, 73c <grub_romfs_label+0x6c>
 730:	mov	x0, x19
 734:	bl	0 <grub_free>
 738:	b	6f4 <grub_romfs_label+0x24>
 73c:	ldr	x0, [x21]
 740:	mov	x2, #0x10                  	// #16
 744:	ldr	x3, [x19]
 748:	mov	x1, #0x0                   	// #0
 74c:	sub	x3, x3, #0x10
 750:	bl	0 <grub_disk_read>
 754:	mov	w21, w0
 758:	cbz	w0, 774 <grub_romfs_label+0xa4>
 75c:	mov	x0, x19
 760:	bl	0 <grub_free>
 764:	ldr	x0, [x20]
 768:	bl	0 <grub_free>
 76c:	str	xzr, [x20]
 770:	b	700 <grub_romfs_label+0x30>
 774:	ldr	x1, [x19]
 778:	ldr	x0, [x20]
 77c:	add	x0, x0, x1
 780:	sturb	wzr, [x0, #-16]
 784:	mov	x0, x19
 788:	bl	0 <grub_free>
 78c:	b	700 <grub_romfs_label+0x30>
	...

0000000000000798 <grub_romfs_open>:
 798:	stp	x29, x30, [sp, #-96]!
 79c:	mov	x29, sp
 7a0:	stp	x19, x20, [sp, #16]
 7a4:	mov	x20, x0
 7a8:	ldr	x0, [x0, #8]
 7ac:	stp	x21, x22, [sp, #32]
 7b0:	mov	x21, x1
 7b4:	str	xzr, [sp, #48]
 7b8:	bl	480 <grub_romfs_mount.isra.0>
 7bc:	mov	x19, x0
 7c0:	adrp	x0, 0 <grub_romfs_close>
 7c4:	ldr	x22, [x0]
 7c8:	cbz	x19, 828 <grub_romfs_open+0x90>
 7cc:	ldr	x0, [x19]
 7d0:	stp	x0, x19, [sp, #56]
 7d4:	add	x2, sp, #0x30
 7d8:	str	x0, [sp, #72]
 7dc:	adrp	x0, 0 <grub_romfs_close>
 7e0:	add	x1, sp, #0x38
 7e4:	mov	w5, #0x1                   	// #1
 7e8:	ldr	x4, [x0]
 7ec:	adrp	x0, 0 <grub_romfs_close>
 7f0:	ldr	x3, [x0]
 7f4:	mov	x0, x21
 7f8:	bl	0 <grub_fshelp_find_file>
 7fc:	ldr	w0, [x22]
 800:	cbnz	w0, 828 <grub_romfs_open+0x90>
 804:	ldr	x2, [sp, #48]
 808:	ldr	w1, [x2, #32]
 80c:	str	x2, [x20, #80]
 810:	rev	w1, w1
 814:	str	x1, [x20, #64]
 818:	ldp	x19, x20, [sp, #16]
 81c:	ldp	x21, x22, [sp, #32]
 820:	ldp	x29, x30, [sp], #96
 824:	ret
 828:	mov	x0, x19
 82c:	bl	0 <grub_free>
 830:	ldr	w0, [x22]
 834:	b	818 <grub_romfs_open+0x80>
	...

0000000000000850 <grub_romfs_dir>:
 850:	stp	x29, x30, [sp, #-112]!
 854:	mov	x29, sp
 858:	stp	x19, x20, [sp, #16]
 85c:	mov	x20, x1
 860:	str	x21, [sp, #32]
 864:	stp	xzr, x2, [sp, #48]
 868:	str	x3, [sp, #64]
 86c:	bl	480 <grub_romfs_mount.isra.0>
 870:	mov	x19, x0
 874:	adrp	x0, 0 <grub_romfs_close>
 878:	ldr	x21, [x0]
 87c:	cbz	x19, 8cc <grub_romfs_dir+0x7c>
 880:	ldr	x0, [x19]
 884:	stp	x0, x19, [sp, #72]
 888:	add	x2, sp, #0x30
 88c:	str	x0, [sp, #88]
 890:	adrp	x0, 0 <grub_romfs_close>
 894:	add	x1, sp, #0x48
 898:	mov	w5, #0x2                   	// #2
 89c:	ldr	x4, [x0]
 8a0:	adrp	x0, 0 <grub_romfs_close>
 8a4:	ldr	x3, [x0]
 8a8:	mov	x0, x20
 8ac:	bl	0 <grub_fshelp_find_file>
 8b0:	ldr	w0, [x21]
 8b4:	cbnz	w0, 8cc <grub_romfs_dir+0x7c>
 8b8:	adrp	x0, 0 <grub_romfs_close>
 8bc:	add	x2, sp, #0x38
 8c0:	ldr	x1, [x0]
 8c4:	ldr	x0, [sp, #48]
 8c8:	bl	128 <grub_romfs_iterate_dir>
 8cc:	mov	x0, x19
 8d0:	bl	0 <grub_free>
 8d4:	ldr	w0, [x21]
 8d8:	ldp	x19, x20, [sp, #16]
 8dc:	ldr	x21, [sp, #32]
 8e0:	ldp	x29, x30, [sp], #112
 8e4:	ret
	...

0000000000000908 <grub_mod_init>:
 908:	adrp	x0, 0 <grub_romfs_close>
 90c:	ldr	x1, [x0]
 910:	adrp	x0, 0 <grub_romfs_close>
 914:	ldr	x0, [x0]
 918:	b	0 <grub_list_push>
 91c:	nop
	...

0000000000000930 <grub_mod_fini>:
 930:	adrp	x0, 0 <grub_romfs_close>
 934:	ldr	x0, [x0]
 938:	b	0 <grub_list_remove>
 93c:	nop
	...
