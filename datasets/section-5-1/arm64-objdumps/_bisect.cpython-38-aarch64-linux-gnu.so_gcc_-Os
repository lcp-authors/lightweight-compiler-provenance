
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0xfe84>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0x54c>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10e84>
     c48:	add	x0, x0, #0x228
     c4c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10e84>
     c50:	add	x1, x1, #0x228
     c54:	cmp	x1, x0
     c58:	b.eq	c70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x50>  // b.none
     c5c:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfe84>
     c60:	ldr	x1, [x1, #4016]
     c64:	cbz	x1, c70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x50>
     c68:	mov	x16, x1
     c6c:	br	x16
     c70:	ret
     c74:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10e84>
     c78:	add	x0, x0, #0x228
     c7c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10e84>
     c80:	add	x1, x1, #0x228
     c84:	sub	x1, x1, x0
     c88:	mov	x2, #0x2                   	// #2
     c8c:	asr	x1, x1, #3
     c90:	sdiv	x1, x1, x2
     c94:	cbz	x1, cac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8c>
     c98:	adrp	x2, 11000 <PyInit__bisect@@Base+0xfe84>
     c9c:	ldr	x2, [x2, #4056]
     ca0:	cbz	x2, cac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8c>
     ca4:	mov	x16, x2
     ca8:	br	x16
     cac:	ret
     cb0:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10e84>
     cb4:	ldrb	w1, [x0, #552]
     cb8:	cbnz	w1, cfc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xdc>
     cbc:	stp	x29, x30, [sp, #-32]!
     cc0:	mov	x29, sp
     cc4:	str	x19, [sp, #16]
     cc8:	mov	x19, x0
     ccc:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
     cd0:	ldr	x0, [x0, #4024]
     cd4:	cbz	x0, ce4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc4>
     cd8:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10e84>
     cdc:	ldr	x0, [x0, #96]
     ce0:	bl	b80 <__cxa_finalize@plt>
     ce4:	bl	c44 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x24>
     ce8:	mov	w0, #0x1                   	// #1
     cec:	strb	w0, [x19, #552]
     cf0:	ldr	x19, [sp, #16]
     cf4:	ldp	x29, x30, [sp], #32
     cf8:	ret
     cfc:	ret
     d00:	b	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     d04:	ldr	x1, [x0]
     d08:	sub	x1, x1, #0x1
     d0c:	str	x1, [x0]
     d10:	cbnz	x1, d18 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xf8>
     d14:	b	b90 <_Py_Dealloc@plt>
     d18:	ret
     d1c:	stp	x29, x30, [sp, #-80]!
     d20:	mov	x29, sp
     d24:	stp	x19, x20, [sp, #16]
     d28:	stp	x21, x22, [sp, #32]
     d2c:	stp	x23, x24, [sp, #48]
     d30:	str	x25, [sp, #64]
     d34:	tbz	x2, #63, d70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x150>
     d38:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
     d3c:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     d40:	add	x1, x1, #0x1a0
     d44:	ldr	x0, [x0, #4032]
     d48:	ldr	x0, [x0]
     d4c:	bl	ba0 <PyErr_SetString@plt>
     d50:	mov	x20, #0xffffffffffffffff    	// #-1
     d54:	mov	x0, x20
     d58:	ldp	x19, x20, [sp, #16]
     d5c:	ldp	x21, x22, [sp, #32]
     d60:	ldp	x23, x24, [sp, #48]
     d64:	ldr	x25, [sp, #64]
     d68:	ldp	x29, x30, [sp], #80
     d6c:	ret
     d70:	mov	x23, x0
     d74:	mov	x24, x1
     d78:	mov	x20, x2
     d7c:	mov	x19, x3
     d80:	cmn	x3, #0x1
     d84:	b.ne	d94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x174>  // b.any
     d88:	bl	be0 <PySequence_Size@plt>
     d8c:	mov	x19, x0
     d90:	tbnz	x0, #63, d50 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x130>
     d94:	cmp	x20, x19
     d98:	b.ge	d54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x134>  // b.tcont
     d9c:	add	x21, x20, x19
     da0:	mov	x0, x23
     da4:	lsr	x21, x21, #1
     da8:	mov	x1, x21
     dac:	bl	bb0 <PySequence_GetItem@plt>
     db0:	mov	x22, x0
     db4:	cbz	x0, d50 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x130>
     db8:	mov	x1, x0
     dbc:	mov	w2, #0x0                   	// #0
     dc0:	mov	x0, x24
     dc4:	bl	bd0 <PyObject_RichCompareBool@plt>
     dc8:	mov	w25, w0
     dcc:	mov	x0, x22
     dd0:	bl	d04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xe4>
     dd4:	cmp	w25, #0x0
     dd8:	b.lt	d50 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x130>  // b.tstop
     ddc:	b.ne	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>  // b.any
     de0:	add	x20, x21, #0x1
     de4:	mov	x21, x19
     de8:	mov	x19, x21
     dec:	b	d94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x174>
     df0:	stp	x29, x30, [sp, #-48]!
     df4:	mov	x0, x1
     df8:	mov	x1, x2
     dfc:	mov	x29, sp
     e00:	mov	x2, #0xffffffffffffffff    	// #-1
     e04:	stp	xzr, x2, [sp, #32]
     e08:	cbnz	x1, e6c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x24c>
     e0c:	ldr	x2, [x0, #16]
     e10:	cmp	x2, #0x2
     e14:	b.ne	e6c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x24c>  // b.any
     e18:	ldp	x1, x0, [x0, #24]
     e1c:	stp	x1, x0, [sp, #16]
     e20:	ldp	x0, x1, [sp, #16]
     e24:	ldp	x2, x3, [sp, #32]
     e28:	bl	d1c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xfc>
     e2c:	mov	x1, x0
     e30:	tbnz	x0, #63, e94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x274>
     e34:	ldp	x0, x2, [sp, #16]
     e38:	adrp	x3, 11000 <PyInit__bisect@@Base+0xfe84>
     e3c:	ldr	x3, [x3, #4064]
     e40:	ldr	x4, [x0, #8]
     e44:	cmp	x4, x3
     e48:	b.ne	ea0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x280>  // b.any
     e4c:	bl	b70 <PyList_Insert@plt>
     e50:	tbnz	w0, #31, e94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x274>
     e54:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
     e58:	ldr	x0, [x0, #4048]
     e5c:	ldr	x1, [x0]
     e60:	add	x1, x1, #0x1
     e64:	str	x1, [x0]
     e68:	b	e98 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x278>
     e6c:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10e84>
     e70:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     e74:	add	x7, sp, #0x28
     e78:	add	x6, sp, #0x20
     e7c:	add	x5, sp, #0x18
     e80:	add	x4, sp, #0x10
     e84:	add	x3, x3, #0x68
     e88:	add	x2, x2, #0x1b8
     e8c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     e90:	cbnz	w0, e20 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x200>
     e94:	mov	x0, #0x0                   	// #0
     e98:	ldp	x29, x30, [sp], #48
     e9c:	ret
     ea0:	mov	x3, x1
     ea4:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10e84>
     ea8:	add	x1, x1, #0x68
     eac:	mov	x4, x2
     eb0:	add	x1, x1, #0x28
     eb4:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     eb8:	add	x2, x2, #0x1cb
     ebc:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     ec0:	cbz	x0, e94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x274>
     ec4:	bl	d04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xe4>
     ec8:	b	e54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x234>
     ecc:	stp	x29, x30, [sp, #-48]!
     ed0:	mov	x0, x1
     ed4:	mov	x1, x2
     ed8:	mov	x29, sp
     edc:	mov	x2, #0xffffffffffffffff    	// #-1
     ee0:	stp	xzr, x2, [sp, #32]
     ee4:	cbnz	x1, f14 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2f4>
     ee8:	ldr	x2, [x0, #16]
     eec:	cmp	x2, #0x2
     ef0:	b.ne	f14 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2f4>  // b.any
     ef4:	ldp	x1, x0, [x0, #24]
     ef8:	stp	x1, x0, [sp, #16]
     efc:	ldp	x0, x1, [sp, #16]
     f00:	ldp	x2, x3, [sp, #32]
     f04:	bl	d1c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xfc>
     f08:	tbnz	x0, #63, f40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x320>
     f0c:	bl	bc0 <PyLong_FromSsize_t@plt>
     f10:	b	f44 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x324>
     f14:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10e84>
     f18:	add	x3, x3, #0x68
     f1c:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f20:	add	x7, sp, #0x28
     f24:	add	x6, sp, #0x20
     f28:	add	x5, sp, #0x18
     f2c:	add	x4, sp, #0x10
     f30:	add	x3, x3, #0x40
     f34:	add	x2, x2, #0x1ce
     f38:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     f3c:	cbnz	w0, efc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2dc>
     f40:	mov	x0, #0x0                   	// #0
     f44:	ldp	x29, x30, [sp], #48
     f48:	ret
     f4c:	stp	x29, x30, [sp, #-80]!
     f50:	mov	x29, sp
     f54:	stp	x19, x20, [sp, #16]
     f58:	stp	x21, x22, [sp, #32]
     f5c:	stp	x23, x24, [sp, #48]
     f60:	str	x25, [sp, #64]
     f64:	tbz	x2, #63, fa0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x380>
     f68:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
     f6c:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f70:	add	x1, x1, #0x1a0
     f74:	ldr	x0, [x0, #4032]
     f78:	ldr	x0, [x0]
     f7c:	bl	ba0 <PyErr_SetString@plt>
     f80:	mov	x20, #0xffffffffffffffff    	// #-1
     f84:	mov	x0, x20
     f88:	ldp	x19, x20, [sp, #16]
     f8c:	ldp	x21, x22, [sp, #32]
     f90:	ldp	x23, x24, [sp, #48]
     f94:	ldr	x25, [sp, #64]
     f98:	ldp	x29, x30, [sp], #80
     f9c:	ret
     fa0:	mov	x23, x0
     fa4:	mov	x24, x1
     fa8:	mov	x20, x2
     fac:	mov	x19, x3
     fb0:	cmn	x3, #0x1
     fb4:	b.ne	fc4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a4>  // b.any
     fb8:	bl	be0 <PySequence_Size@plt>
     fbc:	mov	x19, x0
     fc0:	tbnz	x0, #63, f80 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x360>
     fc4:	cmp	x20, x19
     fc8:	b.ge	f84 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x364>  // b.tcont
     fcc:	add	x21, x20, x19
     fd0:	mov	x0, x23
     fd4:	lsr	x21, x21, #1
     fd8:	mov	x1, x21
     fdc:	bl	bb0 <PySequence_GetItem@plt>
     fe0:	mov	x22, x0
     fe4:	cbz	x0, f80 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x360>
     fe8:	mov	x1, x24
     fec:	mov	w2, #0x0                   	// #0
     ff0:	bl	bd0 <PyObject_RichCompareBool@plt>
     ff4:	mov	w25, w0
     ff8:	mov	x0, x22
     ffc:	bl	d04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xe4>
    1000:	cmp	w25, #0x0
    1004:	b.lt	f80 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x360>  // b.tstop
    1008:	b.eq	1014 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3f4>  // b.none
    100c:	add	x20, x21, #0x1
    1010:	mov	x21, x19
    1014:	mov	x19, x21
    1018:	b	fc4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a4>
    101c:	stp	x29, x30, [sp, #-48]!
    1020:	mov	x0, x1
    1024:	mov	x1, x2
    1028:	mov	x29, sp
    102c:	mov	x2, #0xffffffffffffffff    	// #-1
    1030:	stp	xzr, x2, [sp, #32]
    1034:	cbnz	x1, 1098 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x478>
    1038:	ldr	x2, [x0, #16]
    103c:	cmp	x2, #0x2
    1040:	b.ne	1098 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x478>  // b.any
    1044:	ldp	x1, x0, [x0, #24]
    1048:	stp	x1, x0, [sp, #16]
    104c:	ldp	x0, x1, [sp, #16]
    1050:	ldp	x2, x3, [sp, #32]
    1054:	bl	f4c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x32c>
    1058:	mov	x1, x0
    105c:	tbnz	x0, #63, 10c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a4>
    1060:	ldp	x0, x2, [sp, #16]
    1064:	adrp	x3, 11000 <PyInit__bisect@@Base+0xfe84>
    1068:	ldr	x3, [x3, #4064]
    106c:	ldr	x4, [x0, #8]
    1070:	cmp	x4, x3
    1074:	b.ne	10d0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4b0>  // b.any
    1078:	bl	b70 <PyList_Insert@plt>
    107c:	tbnz	w0, #31, 10c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a4>
    1080:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfe84>
    1084:	ldr	x0, [x0, #4048]
    1088:	ldr	x1, [x0]
    108c:	add	x1, x1, #0x1
    1090:	str	x1, [x0]
    1094:	b	10c8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a8>
    1098:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10e84>
    109c:	add	x3, x3, #0x68
    10a0:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    10a4:	add	x7, sp, #0x28
    10a8:	add	x6, sp, #0x20
    10ac:	add	x5, sp, #0x18
    10b0:	add	x4, sp, #0x10
    10b4:	add	x3, x3, #0x68
    10b8:	add	x2, x2, #0x1e1
    10bc:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    10c0:	cbnz	w0, 104c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x42c>
    10c4:	mov	x0, #0x0                   	// #0
    10c8:	ldp	x29, x30, [sp], #48
    10cc:	ret
    10d0:	mov	x3, x1
    10d4:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10e84>
    10d8:	add	x1, x1, #0x68
    10dc:	mov	x4, x2
    10e0:	add	x1, x1, #0x28
    10e4:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    10e8:	add	x2, x2, #0x1cb
    10ec:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    10f0:	cbz	x0, 10c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a4>
    10f4:	bl	d04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xe4>
    10f8:	b	1080 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x460>
    10fc:	stp	x29, x30, [sp, #-48]!
    1100:	mov	x0, x1
    1104:	mov	x1, x2
    1108:	mov	x29, sp
    110c:	mov	x2, #0xffffffffffffffff    	// #-1
    1110:	stp	xzr, x2, [sp, #32]
    1114:	cbnz	x1, 1144 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x524>
    1118:	ldr	x2, [x0, #16]
    111c:	cmp	x2, #0x2
    1120:	b.ne	1144 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x524>  // b.any
    1124:	ldp	x1, x0, [x0, #24]
    1128:	stp	x1, x0, [sp, #16]
    112c:	ldp	x0, x1, [sp, #16]
    1130:	ldp	x2, x3, [sp, #32]
    1134:	bl	f4c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x32c>
    1138:	tbnz	x0, #63, 1170 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x550>
    113c:	bl	bc0 <PyLong_FromSsize_t@plt>
    1140:	b	1174 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x554>
    1144:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10e84>
    1148:	add	x3, x3, #0x68
    114c:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1150:	add	x7, sp, #0x28
    1154:	add	x6, sp, #0x20
    1158:	add	x5, sp, #0x18
    115c:	add	x4, sp, #0x10
    1160:	add	x3, x3, #0x90
    1164:	add	x2, x2, #0x1f3
    1168:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    116c:	cbnz	w0, 112c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x50c>
    1170:	mov	x0, #0x0                   	// #0
    1174:	ldp	x29, x30, [sp], #48
    1178:	ret

000000000000117c <PyInit__bisect@@Base>:
    117c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10e84>
    1180:	add	x0, x0, #0x68
    1184:	add	x0, x0, #0xb8
    1188:	mov	w1, #0x3f5                 	// #1013
    118c:	b	c00 <PyModule_Create2@plt>

Disassembly of section .fini:

0000000000001190 <.fini>:
    1190:	stp	x29, x30, [sp, #-16]!
    1194:	mov	x29, sp
    1198:	ldp	x29, x30, [sp], #16
    119c:	ret
