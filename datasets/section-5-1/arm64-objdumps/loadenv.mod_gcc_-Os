
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//loadenv.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x740>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w20, w2
  10:	mov	x19, x3
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x0
  1c:	mov	w21, w1
  20:	mov	x0, #0x18                  	// #24
  24:	bl	0 <grub_malloc>
  28:	cbz	x0, 54 <grub_mod_init-0x6ec>
  2c:	ldr	x1, [x19, #8]
  30:	str	x22, [x0]
  34:	stp	w21, w20, [x0, #8]
  38:	str	xzr, [x0, #16]
  3c:	cbz	x1, 44 <grub_mod_init-0x6fc>
  40:	str	x0, [x1, #16]
  44:	ldr	x1, [x19]
  48:	str	x0, [x19, #8]
  4c:	cbnz	x1, 54 <grub_mod_init-0x6ec>
  50:	str	x0, [x19]
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	stp	x29, x30, [sp, #-48]!
  68:	mov	x29, sp
  6c:	stp	x19, x20, [sp, #16]
  70:	ldr	x20, [x0, #64]
  74:	stp	x21, x22, [sp, #32]
  78:	mov	x22, x0
  7c:	mov	x0, x20
  80:	bl	0 <grub_malloc>
  84:	cbz	x0, f4 <grub_mod_init-0x64c>
  88:	mov	x19, x0
  8c:	mov	x21, #0x0                   	// #0
  90:	cbnz	x20, d4 <grub_mod_init-0x66c>
  94:	mov	x1, x21
  98:	mov	x0, x19
  9c:	bl	8dc <grub_envblk_open>
  a0:	mov	x20, x0
  a4:	cbnz	x0, c0 <grub_mod_init-0x680>
  a8:	mov	x0, x19
  ac:	bl	0 <grub_free>
  b0:	adrp	x0, 0 <grub_mod_init-0x740>
  b4:	ldr	x1, [x0]
  b8:	mov	w0, #0x4                   	// #4
  bc:	bl	0 <grub_error>
  c0:	mov	x0, x20
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #48
  d0:	ret
  d4:	mov	x2, x20
  d8:	add	x1, x19, x21
  dc:	mov	x0, x22
  e0:	bl	0 <grub_file_read>
  e4:	cmp	x0, #0x0
  e8:	b.gt	fc <grub_mod_init-0x644>
  ec:	mov	x0, x19
  f0:	bl	0 <grub_free>
  f4:	mov	x20, #0x0                   	// #0
  f8:	b	c0 <grub_mod_init-0x680>
  fc:	sub	x20, x20, x0
 100:	add	x21, x21, x0
 104:	b	90 <grub_mod_init-0x6b0>
	...
 110:	stp	x29, x30, [sp, #-16]!
 114:	mov	x2, x1
 118:	mov	x1, x0
 11c:	adrp	x0, 0 <grub_mod_init-0x740>
 120:	mov	x29, sp
 124:	ldr	x0, [x0]
 128:	bl	0 <grub_printf>
 12c:	mov	w0, #0x0                   	// #0
 130:	ldp	x29, x30, [sp], #16
 134:	ret
	...
 140:	stp	x29, x30, [sp, #-48]!
 144:	mov	x29, sp
 148:	stp	x19, x20, [sp, #16]
 14c:	stp	x21, x22, [sp, #32]
 150:	mov	x21, x0
 154:	mov	x22, x1
 158:	cbnz	x2, 1a4 <grub_mod_init-0x59c>
 15c:	mov	x1, x22
 160:	mov	x0, x21
 164:	bl	0 <grub_env_set>
 168:	mov	w0, #0x0                   	// #0
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x29, x30, [sp], #48
 178:	ret
 17c:	ldr	x0, [x19, #8]
 180:	ldr	x1, [x0, x20, lsl #3]
 184:	mov	x0, x21
 188:	bl	0 <grub_strcmp>
 18c:	cbz	w0, 15c <grub_mod_init-0x5e4>
 190:	add	x20, x20, #0x1
 194:	ldr	x0, [x19]
 198:	cmp	x20, x0
 19c:	b.cc	17c <grub_mod_init-0x5c4>  // b.lo, b.ul, b.last
 1a0:	b	168 <grub_mod_init-0x5d8>
 1a4:	mov	x19, x2
 1a8:	mov	x20, #0x0                   	// #0
 1ac:	b	194 <grub_mod_init-0x5ac>
 1b0:	stp	x29, x30, [sp, #-48]!
 1b4:	mov	x29, sp
 1b8:	stp	x19, x20, [sp, #16]
 1bc:	stp	x21, x22, [sp, #32]
 1c0:	mov	w22, w1
 1c4:	cbnz	x0, 270 <grub_mod_init-0x4d0>
 1c8:	adrp	x19, 0 <grub_mod_init-0x740>
 1cc:	ldr	x0, [x19]
 1d0:	bl	0 <grub_env_get>
 1d4:	mov	x21, x0
 1d8:	cbnz	x0, 208 <grub_mod_init-0x538>
 1dc:	adrp	x0, 0 <grub_mod_init-0x740>
 1e0:	ldr	x2, [x19]
 1e4:	mov	x19, #0x0                   	// #0
 1e8:	ldr	x1, [x0]
 1ec:	mov	w0, #0x5                   	// #5
 1f0:	bl	0 <grub_error>
 1f4:	mov	x0, x19
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldp	x21, x22, [sp, #32]
 200:	ldp	x29, x30, [sp], #48
 204:	ret
 208:	bl	0 <grub_strlen>
 20c:	mov	x20, x0
 210:	add	w0, w0, #0x1
 214:	sxtw	x0, w0
 218:	add	x0, x0, #0x8
 21c:	bl	0 <grub_malloc>
 220:	mov	x19, x0
 224:	cbz	x0, 1f4 <grub_mod_init-0x54c>
 228:	sxtw	x20, w20
 22c:	mov	x1, x21
 230:	bl	0 <grub_strcpy>
 234:	mov	w0, #0x2f                  	// #47
 238:	strb	w0, [x19, x20]
 23c:	adrp	x0, 0 <grub_mod_init-0x740>
 240:	add	x20, x20, #0x1
 244:	ldr	x1, [x0]
 248:	add	x0, x19, x20
 24c:	bl	0 <grub_strcpy>
 250:	mov	x0, x19
 254:	mov	w1, w22
 258:	bl	0 <grub_file_open>
 25c:	mov	x20, x0
 260:	mov	x0, x19
 264:	mov	x19, x20
 268:	bl	0 <grub_free>
 26c:	b	1f4 <grub_mod_init-0x54c>
 270:	mov	x19, #0x0                   	// #0
 274:	b	254 <grub_mod_init-0x4ec>
	...
 290:	stp	x29, x30, [sp, #-48]!
 294:	mov	x29, sp
 298:	ldr	x1, [x0, #8]
 29c:	stp	x19, x20, [sp, #16]
 2a0:	ldr	w0, [x1]
 2a4:	str	x21, [sp, #32]
 2a8:	cbz	w0, 2f0 <grub_mod_init-0x450>
 2ac:	ldr	x0, [x1, #8]
 2b0:	mov	w2, #0x39                  	// #57
 2b4:	ldr	w1, [x1, #16]
 2b8:	movk	w2, #0x1, lsl #16
 2bc:	cmp	w1, #0x0
 2c0:	mov	w1, #0x39                  	// #57
 2c4:	csel	w1, w2, w1, ne  // ne = any
 2c8:	bl	1b0 <grub_mod_init-0x590>
 2cc:	mov	x19, x0
 2d0:	adrp	x1, 0 <grub_mod_init-0x740>
 2d4:	ldr	x21, [x1]
 2d8:	cbnz	x0, 2f8 <grub_mod_init-0x448>
 2dc:	ldr	w0, [x21]
 2e0:	ldp	x19, x20, [sp, #16]
 2e4:	ldr	x21, [sp, #32]
 2e8:	ldp	x29, x30, [sp], #48
 2ec:	ret
 2f0:	mov	x0, #0x0                   	// #0
 2f4:	b	2b0 <grub_mod_init-0x490>
 2f8:	bl	64 <grub_mod_init-0x6dc>
 2fc:	mov	x20, x0
 300:	cbz	x0, 31c <grub_mod_init-0x424>
 304:	adrp	x1, 0 <grub_mod_init-0x740>
 308:	ldr	x2, [x1]
 30c:	mov	x1, #0x0                   	// #0
 310:	bl	c58 <grub_envblk_iterate>
 314:	mov	x0, x20
 318:	bl	950 <grub_envblk_close>
 31c:	mov	x0, x19
 320:	bl	0 <grub_file_close>
 324:	b	2dc <grub_mod_init-0x464>
	...
 338:	stp	x29, x30, [sp, #-64]!
 33c:	mov	x29, sp
 340:	stp	x21, x22, [sp, #32]
 344:	mov	w21, w1
 348:	ldr	x1, [x0, #8]
 34c:	sxtw	x0, w21
 350:	stp	x0, x2, [sp, #48]
 354:	ldr	w0, [x1]
 358:	stp	x19, x20, [sp, #16]
 35c:	cbz	w0, 3a4 <grub_mod_init-0x39c>
 360:	ldr	x0, [x1, #8]
 364:	mov	w2, #0x39                  	// #57
 368:	ldr	w1, [x1, #16]
 36c:	movk	w2, #0x1, lsl #16
 370:	cmp	w1, #0x0
 374:	mov	w1, #0x39                  	// #57
 378:	csel	w1, w2, w1, ne  // ne = any
 37c:	bl	1b0 <grub_mod_init-0x590>
 380:	mov	x19, x0
 384:	adrp	x1, 0 <grub_mod_init-0x740>
 388:	ldr	x22, [x1]
 38c:	cbnz	x0, 3ac <grub_mod_init-0x394>
 390:	ldr	w0, [x22]
 394:	ldp	x19, x20, [sp, #16]
 398:	ldp	x21, x22, [sp, #32]
 39c:	ldp	x29, x30, [sp], #64
 3a0:	ret
 3a4:	mov	x0, #0x0                   	// #0
 3a8:	b	364 <grub_mod_init-0x3dc>
 3ac:	bl	64 <grub_mod_init-0x6dc>
 3b0:	mov	x20, x0
 3b4:	cbz	x0, 3d8 <grub_mod_init-0x368>
 3b8:	adrp	x1, 0 <grub_mod_init-0x740>
 3bc:	cmp	w21, #0x0
 3c0:	ldr	x2, [x1]
 3c4:	add	x1, sp, #0x30
 3c8:	csel	x1, x1, xzr, gt
 3cc:	bl	c58 <grub_envblk_iterate>
 3d0:	mov	x0, x20
 3d4:	bl	950 <grub_envblk_close>
 3d8:	mov	x0, x19
 3dc:	bl	0 <grub_file_close>
 3e0:	b	390 <grub_mod_init-0x3b0>
 3e4:	nop
	...
 3f8:	stp	x29, x30, [sp, #-128]!
 3fc:	mov	x29, sp
 400:	stp	x19, x20, [sp, #16]
 404:	stp	x21, x22, [sp, #32]
 408:	stp	x23, x24, [sp, #48]
 40c:	stp	x25, x26, [sp, #64]
 410:	stp	x27, x28, [sp, #80]
 414:	stp	xzr, xzr, [sp, #112]
 418:	ldr	x0, [x0, #8]
 41c:	cbnz	w1, 44c <grub_mod_init-0x2f4>
 420:	adrp	x0, 0 <grub_mod_init-0x740>
 424:	ldr	x1, [x0]
 428:	mov	w0, #0x12                  	// #18
 42c:	bl	0 <grub_error>
 430:	ldp	x19, x20, [sp, #16]
 434:	ldp	x21, x22, [sp, #32]
 438:	ldp	x23, x24, [sp, #48]
 43c:	ldp	x25, x26, [sp, #64]
 440:	ldp	x27, x28, [sp, #80]
 444:	ldp	x29, x30, [sp], #128
 448:	ret
 44c:	mov	w24, w1
 450:	ldr	w1, [x0]
 454:	mov	x22, x2
 458:	cbz	w1, 484 <grub_mod_init-0x2bc>
 45c:	ldr	x0, [x0, #8]
 460:	mov	w1, #0x3a                  	// #58
 464:	movk	w1, #0x1, lsl #16
 468:	bl	1b0 <grub_mod_init-0x590>
 46c:	mov	x19, x0
 470:	cbnz	x0, 48c <grub_mod_init-0x2b4>
 474:	adrp	x0, 0 <grub_mod_init-0x740>
 478:	ldr	x0, [x0]
 47c:	ldr	w0, [x0]
 480:	b	430 <grub_mod_init-0x310>
 484:	mov	x0, #0x0                   	// #0
 488:	b	460 <grub_mod_init-0x2e0>
 48c:	ldr	x1, [x0, #8]
 490:	ldr	x1, [x1]
 494:	cbnz	x1, 4ac <grub_mod_init-0x294>
 498:	bl	0 <grub_file_close>
 49c:	adrp	x0, 0 <grub_mod_init-0x740>
 4a0:	ldr	x1, [x0]
 4a4:	mov	w0, #0xd                   	// #13
 4a8:	b	42c <grub_mod_init-0x314>
 4ac:	adrp	x1, 0 <grub_mod_init-0x740>
 4b0:	ldr	x1, [x1]
 4b4:	str	x1, [x0, #88]
 4b8:	add	x1, sp, #0x70
 4bc:	str	x1, [x0, #96]
 4c0:	bl	64 <grub_mod_init-0x6dc>
 4c4:	str	xzr, [x19, #88]
 4c8:	mov	x21, x0
 4cc:	cbz	x0, 564 <grub_mod_init-0x1dc>
 4d0:	ldr	x20, [sp, #112]
 4d4:	mov	x3, #0x0                   	// #0
 4d8:	mov	x1, x20
 4dc:	cbnz	x1, 4fc <grub_mod_init-0x244>
 4e0:	ldr	x0, [x19, #64]
 4e4:	cmp	x3, x0
 4e8:	b.eq	580 <grub_mod_init-0x1c0>  // b.none
 4ec:	adrp	x0, 0 <grub_mod_init-0x740>
 4f0:	ldr	x1, [x0]
 4f4:	mov	w0, #0x4                   	// #4
 4f8:	b	554 <grub_mod_init-0x1ec>
 4fc:	ldr	w6, [x1, #12]
 500:	ldr	x5, [x1, #16]
 504:	add	w4, w6, #0x1ff
 508:	mov	x2, x5
 50c:	lsr	w4, w4, #9
 510:	cbnz	x2, 520 <grub_mod_init-0x220>
 514:	add	x3, x3, w6, uxtw
 518:	mov	x1, x5
 51c:	b	4dc <grub_mod_init-0x264>
 520:	ldr	w0, [x2, #12]
 524:	ldr	x7, [x2]
 528:	add	w0, w0, #0x1ff
 52c:	ldr	x8, [x1]
 530:	lsr	w0, w0, #9
 534:	add	x0, x0, x7
 538:	add	x9, x8, x4
 53c:	cmp	x8, x0
 540:	ccmp	x9, x7, #0x0, cc  // cc = lo, ul, last
 544:	b.ls	578 <grub_mod_init-0x1c8>  // b.plast
 548:	adrp	x0, 0 <grub_mod_init-0x740>
 54c:	ldr	x1, [x0]
 550:	mov	w0, #0x9                   	// #9
 554:	bl	0 <grub_error>
 558:	cbz	w0, 5a8 <grub_mod_init-0x198>
 55c:	mov	x0, x21
 560:	bl	950 <grub_envblk_close>
 564:	ldr	x0, [sp, #112]
 568:	cbnz	x0, 6f0 <grub_mod_init-0x50>
 56c:	mov	x0, x19
 570:	bl	0 <grub_file_close>
 574:	b	474 <grub_mod_init-0x2cc>
 578:	ldr	x2, [x2, #16]
 57c:	b	510 <grub_mod_init-0x230>
 580:	ldr	x0, [x19, #8]
 584:	mov	x26, #0x0                   	// #0
 588:	ldr	x27, [x0]
 58c:	ldr	x28, [x27, #40]
 590:	cbnz	x28, 5e0 <grub_mod_init-0x160>
 594:	ldr	x0, [x21]
 598:	mov	x23, #0x0                   	// #0
 59c:	mov	x25, #0x0                   	// #0
 5a0:	str	x0, [sp, #104]
 5a4:	cbnz	x20, 5f0 <grub_mod_init-0x150>
 5a8:	mov	x20, #0x0                   	// #0
 5ac:	ldr	x0, [x22, x20, lsl #3]
 5b0:	bl	0 <grub_env_get>
 5b4:	mov	x2, x0
 5b8:	mov	x0, x21
 5bc:	ldr	x1, [x22, x20, lsl #3]
 5c0:	cbz	x2, 680 <grub_mod_init-0xc0>
 5c4:	bl	978 <grub_envblk_set>
 5c8:	cbnz	w0, 684 <grub_mod_init-0xbc>
 5cc:	adrp	x0, 0 <grub_mod_init-0x740>
 5d0:	ldr	x1, [x0]
 5d4:	mov	w0, #0x12                  	// #18
 5d8:	bl	0 <grub_error>
 5dc:	b	55c <grub_mod_init-0x1e4>
 5e0:	ldr	x0, [x28, #8]
 5e4:	ldr	x28, [x28, #40]
 5e8:	add	x26, x26, x0
 5ec:	b	590 <grub_mod_init-0x1b0>
 5f0:	ldr	w0, [x20, #12]
 5f4:	cmp	x0, x23
 5f8:	b.ls	62c <grub_mod_init-0x114>  // b.plast
 5fc:	mov	x0, x28
 600:	bl	0 <grub_free>
 604:	ldr	w23, [x20, #12]
 608:	lsl	w23, w23, #1
 60c:	mov	x0, x23
 610:	bl	0 <grub_malloc>
 614:	mov	x28, x0
 618:	cbnz	x0, 62c <grub_mod_init-0x114>
 61c:	adrp	x0, 0 <grub_mod_init-0x740>
 620:	ldr	x0, [x0]
 624:	ldr	w0, [x0]
 628:	b	558 <grub_mod_init-0x1e8>
 62c:	ldp	w2, w3, [x20, #8]
 630:	mov	x4, x28
 634:	ldr	x1, [x20]
 638:	mov	x0, x27
 63c:	sub	x1, x1, x26
 640:	bl	0 <grub_disk_read>
 644:	cbnz	w0, 61c <grub_mod_init-0x124>
 648:	ldr	w2, [x20, #12]
 64c:	mov	x1, x28
 650:	ldr	x0, [sp, #104]
 654:	add	x0, x0, x25
 658:	bl	0 <grub_memcmp>
 65c:	cbz	w0, 670 <grub_mod_init-0xd0>
 660:	adrp	x0, 0 <grub_mod_init-0x740>
 664:	ldr	x1, [x0]
 668:	mov	w0, #0x6                   	// #6
 66c:	b	554 <grub_mod_init-0x1ec>
 670:	ldr	w0, [x20, #12]
 674:	ldr	x20, [x20, #16]
 678:	add	x25, x25, x0
 67c:	b	5a4 <grub_mod_init-0x19c>
 680:	bl	b60 <grub_envblk_delete>
 684:	add	x20, x20, #0x1
 688:	cmp	w24, w20
 68c:	b.ne	5ac <grub_mod_init-0x194>  // b.any
 690:	ldr	x0, [x19, #8]
 694:	mov	x23, #0x0                   	// #0
 698:	ldr	x25, [x21]
 69c:	ldr	x24, [x0]
 6a0:	ldr	x20, [sp, #112]
 6a4:	ldr	x0, [x24, #40]
 6a8:	cbnz	x0, 6e0 <grub_mod_init-0x60>
 6ac:	mov	x22, #0x0                   	// #0
 6b0:	cbz	x20, 55c <grub_mod_init-0x1e4>
 6b4:	ldp	w2, w3, [x20, #8]
 6b8:	add	x4, x25, x22
 6bc:	ldr	x1, [x20]
 6c0:	mov	x0, x24
 6c4:	sub	x1, x1, x23
 6c8:	bl	0 <grub_disk_write>
 6cc:	cbnz	w0, 55c <grub_mod_init-0x1e4>
 6d0:	ldr	w0, [x20, #12]
 6d4:	ldr	x20, [x20, #16]
 6d8:	add	x22, x22, x0
 6dc:	b	6b0 <grub_mod_init-0x90>
 6e0:	ldr	x1, [x0, #8]
 6e4:	ldr	x0, [x0, #40]
 6e8:	add	x23, x23, x1
 6ec:	b	6a8 <grub_mod_init-0x98>
 6f0:	ldr	x20, [x0, #16]
 6f4:	bl	0 <grub_free>
 6f8:	mov	x0, x20
 6fc:	b	568 <grub_mod_init-0x1d8>
	...

0000000000000740 <grub_mod_init>:
 740:	stp	x29, x30, [sp, #-32]!
 744:	adrp	x0, 0 <grub_mod_init-0x740>
 748:	mov	w2, #0x0                   	// #0
 74c:	mov	x29, sp
 750:	stp	x19, x20, [sp, #16]
 754:	ldr	x20, [x0]
 758:	adrp	x0, 0 <grub_mod_init-0x740>
 75c:	ldr	x4, [x0]
 760:	adrp	x0, 0 <grub_mod_init-0x740>
 764:	mov	x5, x20
 768:	ldr	x3, [x0]
 76c:	adrp	x0, 0 <grub_mod_init-0x740>
 770:	ldr	x1, [x0]
 774:	adrp	x0, 0 <grub_mod_init-0x740>
 778:	ldr	x0, [x0]
 77c:	bl	0 <grub_register_extcmd>
 780:	adrp	x1, 0 <grub_mod_init-0x740>
 784:	mov	x5, x20
 788:	mov	w2, #0x0                   	// #0
 78c:	ldr	x19, [x1]
 790:	str	x0, [x19]
 794:	adrp	x0, 0 <grub_mod_init-0x740>
 798:	ldr	x4, [x0]
 79c:	adrp	x0, 0 <grub_mod_init-0x740>
 7a0:	ldr	x3, [x0]
 7a4:	adrp	x0, 0 <grub_mod_init-0x740>
 7a8:	ldr	x1, [x0]
 7ac:	adrp	x0, 0 <grub_mod_init-0x740>
 7b0:	ldr	x0, [x0]
 7b4:	bl	0 <grub_register_extcmd>
 7b8:	str	x0, [x19, #8]
 7bc:	adrp	x0, 0 <grub_mod_init-0x740>
 7c0:	mov	x5, x20
 7c4:	mov	w2, #0x0                   	// #0
 7c8:	ldr	x4, [x0]
 7cc:	adrp	x0, 0 <grub_mod_init-0x740>
 7d0:	ldr	x3, [x0]
 7d4:	adrp	x0, 0 <grub_mod_init-0x740>
 7d8:	ldr	x1, [x0]
 7dc:	adrp	x0, 0 <grub_mod_init-0x740>
 7e0:	ldr	x0, [x0]
 7e4:	bl	0 <grub_register_extcmd>
 7e8:	str	x0, [x19, #16]
 7ec:	ldp	x19, x20, [sp, #16]
 7f0:	ldp	x29, x30, [sp], #32
 7f4:	ret
	...

0000000000000868 <grub_mod_fini>:
 868:	stp	x29, x30, [sp, #-32]!
 86c:	adrp	x0, 0 <grub_mod_init-0x740>
 870:	mov	x29, sp
 874:	str	x19, [sp, #16]
 878:	ldr	x19, [x0]
 87c:	ldr	x0, [x19]
 880:	bl	0 <grub_unregister_extcmd>
 884:	ldr	x0, [x19, #8]
 888:	bl	0 <grub_unregister_extcmd>
 88c:	ldr	x0, [x19, #16]
 890:	ldr	x19, [sp, #16]
 894:	ldp	x29, x30, [sp], #32
 898:	b	0 <grub_unregister_extcmd>
 89c:	nop
	...
 8a8:	cmp	x0, x1
 8ac:	b.cs	8d4 <grub_mod_fini+0x6c>  // b.hs, b.nlast
 8b0:	ldrb	w3, [x0]
 8b4:	cmp	w3, #0x5c
 8b8:	b.ne	8c8 <grub_mod_fini+0x60>  // b.any
 8bc:	add	x2, x0, #0x2
 8c0:	mov	x0, x2
 8c4:	b	8a8 <grub_mod_fini+0x40>
 8c8:	add	x2, x0, #0x1
 8cc:	cmp	w3, #0xa
 8d0:	b.ne	8c0 <grub_mod_fini+0x58>  // b.any
 8d4:	add	x0, x0, #0x1
 8d8:	ret

00000000000008dc <grub_envblk_open>:
 8dc:	stp	x29, x30, [sp, #-32]!
 8e0:	cmp	x1, #0x19
 8e4:	mov	x29, sp
 8e8:	stp	x19, x20, [sp, #16]
 8ec:	b.hi	910 <grub_envblk_open+0x34>  // b.pmore
 8f0:	adrp	x0, 0 <grub_mod_init-0x740>
 8f4:	ldr	x1, [x0]
 8f8:	mov	w0, #0x4                   	// #4
 8fc:	bl	0 <grub_error>
 900:	mov	x0, #0x0                   	// #0
 904:	ldp	x19, x20, [sp, #16]
 908:	ldp	x29, x30, [sp], #32
 90c:	ret
 910:	mov	x19, x1
 914:	adrp	x1, 0 <grub_mod_init-0x740>
 918:	mov	x20, x0
 91c:	mov	x2, #0x19                  	// #25
 920:	ldr	x1, [x1]
 924:	bl	0 <grub_memcmp>
 928:	cbnz	w0, 8f0 <grub_envblk_open+0x14>
 92c:	mov	x0, #0x10                  	// #16
 930:	bl	0 <grub_malloc>
 934:	cbz	x0, 904 <grub_envblk_open+0x28>
 938:	stp	x20, x19, [x0]
 93c:	b	904 <grub_envblk_open+0x28>
	...

0000000000000950 <grub_envblk_close>:
 950:	stp	x29, x30, [sp, #-32]!
 954:	mov	x29, sp
 958:	str	x19, [sp, #16]
 95c:	mov	x19, x0
 960:	ldr	x0, [x0]
 964:	bl	0 <grub_free>
 968:	mov	x0, x19
 96c:	ldr	x19, [sp, #16]
 970:	ldp	x29, x30, [sp], #32
 974:	b	0 <grub_free>

0000000000000978 <grub_envblk_set>:
 978:	stp	x29, x30, [sp, #-112]!
 97c:	mov	x29, sp
 980:	stp	x19, x20, [sp, #16]
 984:	mov	x19, x0
 988:	mov	x0, x1
 98c:	stp	x21, x22, [sp, #32]
 990:	stp	x23, x24, [sp, #48]
 994:	mov	x23, x2
 998:	stp	x25, x26, [sp, #64]
 99c:	stp	x27, x28, [sp, #80]
 9a0:	mov	x27, x1
 9a4:	bl	0 <grub_strlen>
 9a8:	mov	x1, x23
 9ac:	mov	x24, x0
 9b0:	mov	w28, #0x0                   	// #0
 9b4:	ldrb	w0, [x1]
 9b8:	cbnz	w0, 9fc <grub_envblk_set+0x84>
 9bc:	ldp	x22, x21, [x19]
 9c0:	add	x21, x22, x21
 9c4:	sub	x0, x21, #0x1
 9c8:	ldrb	w1, [x0]
 9cc:	cmp	w1, #0x23
 9d0:	b.eq	a14 <grub_envblk_set+0x9c>  // b.none
 9d4:	cmp	w1, #0xa
 9d8:	b.eq	a1c <grub_envblk_set+0xa4>  // b.none
 9dc:	mov	w0, #0x0                   	// #0
 9e0:	ldp	x19, x20, [sp, #16]
 9e4:	ldp	x21, x22, [sp, #32]
 9e8:	ldp	x23, x24, [sp, #48]
 9ec:	ldp	x25, x26, [sp, #64]
 9f0:	ldp	x27, x28, [sp, #80]
 9f4:	ldp	x29, x30, [sp], #112
 9f8:	ret
 9fc:	cmp	w0, #0x5c
 a00:	add	w2, w28, #0x2
 a04:	ccmp	w0, #0xa, #0x4, ne  // ne = any
 a08:	add	x1, x1, #0x1
 a0c:	csinc	w28, w2, w28, eq  // eq = none
 a10:	b	9b4 <grub_envblk_set+0x3c>
 a14:	sub	x0, x0, #0x1
 a18:	b	9c8 <grub_envblk_set+0x50>
 a1c:	sxtw	x25, w24
 a20:	add	x22, x22, #0x19
 a24:	add	x26, x0, #0x1
 a28:	add	x0, x25, #0x1
 a2c:	str	x0, [sp, #104]
 a30:	ldr	x0, [sp, #104]
 a34:	add	x19, x22, x0
 a38:	cmp	x19, x26
 a3c:	b.cc	a78 <grub_envblk_set+0x100>  // b.lo, b.ul, b.last
 a40:	add	w0, w28, w24
 a44:	sub	x21, x21, x26
 a48:	add	w0, w0, #0x2
 a4c:	cmp	x21, w0, sxtw
 a50:	b.lt	9dc <grub_envblk_set+0x64>  // b.tstop
 a54:	mov	x2, x25
 a58:	mov	x1, x27
 a5c:	mov	x0, x26
 a60:	add	x19, x26, x25
 a64:	bl	0 <grub_memmove>
 a68:	add	x19, x19, #0x1
 a6c:	mov	w0, #0x3d                  	// #61
 a70:	strb	w0, [x26, x25]
 a74:	b	af8 <grub_envblk_set+0x180>
 a78:	mov	x2, x25
 a7c:	mov	x1, x27
 a80:	mov	x0, x22
 a84:	bl	0 <grub_memcmp>
 a88:	mov	w20, w0
 a8c:	cbnz	w0, b30 <grub_envblk_set+0x1b8>
 a90:	ldrb	w0, [x22, x25]
 a94:	cmp	w0, #0x3d
 a98:	b.ne	b30 <grub_envblk_set+0x1b8>  // b.any
 a9c:	add	x1, x19, w20, sxtw
 aa0:	sxtw	x22, w20
 aa4:	cmp	x1, x21
 aa8:	b.cs	9dc <grub_envblk_set+0x64>  // b.hs, b.nlast
 aac:	ldrb	w0, [x19, x22]
 ab0:	cmp	w0, #0xa
 ab4:	b.ne	b14 <grub_envblk_set+0x19c>  // b.any
 ab8:	sub	w2, w28, w20
 abc:	sub	x0, x21, x26
 ac0:	cmp	x0, w2, sxtw
 ac4:	b.lt	9dc <grub_envblk_set+0x64>  // b.tstop
 ac8:	sxtw	x24, w28
 acc:	add	x0, x19, w28, sxtw
 ad0:	cmp	w20, w28
 ad4:	b.le	b24 <grub_envblk_set+0x1ac>
 ad8:	sub	x2, x21, x1
 adc:	sub	w20, w20, w28
 ae0:	bl	0 <grub_memmove>
 ae4:	sub	x0, x22, x24
 ae8:	sxtw	x2, w20
 aec:	add	x0, x26, x0
 af0:	mov	w1, #0x23                  	// #35
 af4:	bl	0 <grub_memset>
 af8:	mov	w1, #0x5c                  	// #92
 afc:	ldrb	w0, [x23]
 b00:	cbnz	w0, b44 <grub_envblk_set+0x1cc>
 b04:	mov	w0, #0xa                   	// #10
 b08:	strb	w0, [x19]
 b0c:	mov	w0, #0x1                   	// #1
 b10:	b	9e0 <grub_envblk_set+0x68>
 b14:	add	w1, w20, #0x2
 b18:	cmp	w0, #0x5c
 b1c:	csinc	w20, w1, w20, eq  // eq = none
 b20:	b	a9c <grub_envblk_set+0x124>
 b24:	sub	x2, x21, x0
 b28:	bl	0 <grub_memmove>
 b2c:	b	af8 <grub_envblk_set+0x180>
 b30:	mov	x0, x22
 b34:	mov	x1, x21
 b38:	bl	8a8 <grub_mod_fini+0x40>
 b3c:	mov	x22, x0
 b40:	b	a30 <grub_envblk_set+0xb8>
 b44:	cmp	w0, #0x5c
 b48:	ccmp	w0, #0xa, #0x4, ne  // ne = any
 b4c:	b.ne	b54 <grub_envblk_set+0x1dc>  // b.any
 b50:	strb	w1, [x19], #1
 b54:	ldrb	w0, [x23], #1
 b58:	strb	w0, [x19], #1
 b5c:	b	afc <grub_envblk_set+0x184>

0000000000000b60 <grub_envblk_delete>:
 b60:	stp	x29, x30, [sp, #-64]!
 b64:	mov	x29, sp
 b68:	stp	x23, x24, [sp, #48]
 b6c:	mov	x23, x0
 b70:	mov	x0, x1
 b74:	stp	x19, x20, [sp, #16]
 b78:	stp	x21, x22, [sp, #32]
 b7c:	mov	x22, x1
 b80:	bl	0 <grub_strlen>
 b84:	mov	x19, x0
 b88:	ldp	x21, x0, [x23]
 b8c:	sxtw	x23, w19
 b90:	add	x24, x23, #0x1
 b94:	add	x20, x21, #0x19
 b98:	add	x21, x21, x0
 b9c:	add	x0, x20, x24
 ba0:	cmp	x21, x0
 ba4:	b.ls	bdc <grub_envblk_delete+0x7c>  // b.plast
 ba8:	mov	x2, x23
 bac:	mov	x1, x22
 bb0:	mov	x0, x20
 bb4:	bl	0 <grub_memcmp>
 bb8:	cbnz	w0, c44 <grub_envblk_delete+0xe4>
 bbc:	ldrb	w0, [x20, x23]
 bc0:	cmp	w0, #0x3d
 bc4:	b.ne	c44 <grub_envblk_delete+0xe4>  // b.any
 bc8:	add	w1, w19, #0x1
 bcc:	add	x0, x20, w1, sxtw
 bd0:	sxtw	x2, w1
 bd4:	cmp	x0, x21
 bd8:	b.cc	bf0 <grub_envblk_delete+0x90>  // b.lo, b.ul, b.last
 bdc:	ldp	x19, x20, [sp, #16]
 be0:	ldp	x21, x22, [sp, #32]
 be4:	ldp	x23, x24, [sp, #48]
 be8:	ldp	x29, x30, [sp], #64
 bec:	ret
 bf0:	ldrb	w0, [x20, x2]
 bf4:	cmp	w0, #0xa
 bf8:	b.eq	c0c <grub_envblk_delete+0xac>  // b.none
 bfc:	add	w2, w1, #0x2
 c00:	cmp	w0, #0x5c
 c04:	csinc	w1, w2, w1, eq  // eq = none
 c08:	b	bcc <grub_envblk_delete+0x6c>
 c0c:	add	w1, w1, #0x1
 c10:	mov	x0, x20
 c14:	sxtw	x19, w1
 c18:	add	x1, x20, w1, sxtw
 c1c:	sub	x2, x21, x1
 c20:	bl	0 <grub_memmove>
 c24:	sub	x0, x21, x19
 c28:	mov	x2, x19
 c2c:	ldp	x19, x20, [sp, #16]
 c30:	mov	w1, #0x23                  	// #35
 c34:	ldp	x21, x22, [sp, #32]
 c38:	ldp	x23, x24, [sp, #48]
 c3c:	ldp	x29, x30, [sp], #64
 c40:	b	0 <grub_memset>
 c44:	mov	x0, x20
 c48:	mov	x1, x21
 c4c:	bl	8a8 <grub_mod_fini+0x40>
 c50:	mov	x20, x0
 c54:	b	b9c <grub_envblk_delete+0x3c>

0000000000000c58 <grub_envblk_iterate>:
 c58:	stp	x29, x30, [sp, #-80]!
 c5c:	mov	x29, sp
 c60:	stp	x21, x22, [sp, #32]
 c64:	ldp	x21, x0, [x0]
 c68:	stp	x19, x20, [sp, #16]
 c6c:	stp	x23, x24, [sp, #48]
 c70:	mov	x23, x1
 c74:	mov	x24, x2
 c78:	stp	x25, x26, [sp, #64]
 c7c:	add	x19, x21, #0x19
 c80:	add	x21, x21, x0
 c84:	cmp	x19, x21
 c88:	b.cs	cb4 <grub_envblk_iterate+0x5c>  // b.hs, b.nlast
 c8c:	ldrb	w0, [x19]
 c90:	cmp	w0, #0x23
 c94:	b.ne	ccc <grub_envblk_iterate+0x74>  // b.any
 c98:	mov	x0, x19
 c9c:	mov	x1, x21
 ca0:	bl	8a8 <grub_mod_fini+0x40>
 ca4:	mov	x19, x0
 ca8:	b	c84 <grub_envblk_iterate+0x2c>
 cac:	cmp	x21, x20
 cb0:	b.ne	cd0 <grub_envblk_iterate+0x78>  // b.any
 cb4:	ldp	x19, x20, [sp, #16]
 cb8:	ldp	x21, x22, [sp, #32]
 cbc:	ldp	x23, x24, [sp, #48]
 cc0:	ldp	x25, x26, [sp, #64]
 cc4:	ldp	x29, x30, [sp], #80
 cc8:	ret
 ccc:	mov	x20, x19
 cd0:	ldrb	w0, [x20]
 cd4:	mov	x26, x20
 cd8:	add	x20, x20, #0x1
 cdc:	cmp	w0, #0x3d
 ce0:	b.ne	cac <grub_envblk_iterate+0x54>  // b.any
 ce4:	mov	x0, x20
 ce8:	cmp	x0, x21
 cec:	b.cs	cb4 <grub_envblk_iterate+0x5c>  // b.hs, b.nlast
 cf0:	ldrb	w1, [x0]
 cf4:	cmp	w1, #0xa
 cf8:	b.eq	d0c <grub_envblk_iterate+0xb4>  // b.none
 cfc:	add	x2, x0, #0x2
 d00:	cmp	w1, #0x5c
 d04:	csinc	x0, x2, x0, eq  // eq = none
 d08:	b	ce8 <grub_envblk_iterate+0x90>
 d0c:	sub	x0, x0, x19
 d10:	add	x0, x0, #0x1
 d14:	bl	0 <grub_malloc>
 d18:	mov	x22, x0
 d1c:	cbz	x0, cb4 <grub_envblk_iterate+0x5c>
 d20:	sub	x26, x26, x19
 d24:	sub	x25, x20, x19
 d28:	add	x25, x0, x25
 d2c:	mov	x1, x19
 d30:	mov	x2, x26
 d34:	bl	0 <grub_memmove>
 d38:	mov	x0, x25
 d3c:	mov	x19, x20
 d40:	strb	wzr, [x22, x26]
 d44:	ldrb	w1, [x19]
 d48:	cmp	w1, #0xa
 d4c:	b.ne	d78 <grub_envblk_iterate+0x120>  // b.any
 d50:	mov	x2, x23
 d54:	mov	x1, x25
 d58:	strb	wzr, [x0]
 d5c:	mov	x0, x22
 d60:	blr	x24
 d64:	mov	w20, w0
 d68:	mov	x0, x22
 d6c:	bl	0 <grub_free>
 d70:	cbz	w20, c98 <grub_envblk_iterate+0x40>
 d74:	b	cb4 <grub_envblk_iterate+0x5c>
 d78:	add	x0, x0, #0x1
 d7c:	cmp	w1, #0x5c
 d80:	b.ne	d8c <grub_envblk_iterate+0x134>  // b.any
 d84:	ldrb	w1, [x19, #1]
 d88:	add	x19, x19, #0x1
 d8c:	add	x19, x19, #0x1
 d90:	sturb	w1, [x0, #-1]
 d94:	b	d44 <grub_envblk_iterate+0xec>
