
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_json.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d58 <.init>:
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x29, sp
    1d60:	bl	20e0 <PySequence_Fast@plt+0x10>
    1d64:	ldp	x29, x30, [sp], #16
    1d68:	ret

Disassembly of section .plt:

0000000000001d70 <PyMapping_Items@plt-0x20>:
    1d70:	stp	x16, x30, [sp, #-16]!
    1d74:	adrp	x16, 16000 <PyInit__json@@Base+0x10668>
    1d78:	ldr	x17, [x16, #4088]
    1d7c:	add	x16, x16, #0xff8
    1d80:	br	x17
    1d84:	nop
    1d88:	nop
    1d8c:	nop

0000000000001d90 <PyMapping_Items@plt>:
    1d90:	adrp	x16, 17000 <PyMapping_Items>
    1d94:	ldr	x17, [x16]
    1d98:	add	x16, x16, #0x0
    1d9c:	br	x17

0000000000001da0 <PyList_New@plt>:
    1da0:	adrp	x16, 17000 <PyMapping_Items>
    1da4:	ldr	x17, [x16, #8]
    1da8:	add	x16, x16, #0x8
    1dac:	br	x17

0000000000001db0 <_PyUnicode_Ready@plt>:
    1db0:	adrp	x16, 17000 <PyMapping_Items>
    1db4:	ldr	x17, [x16, #16]
    1db8:	add	x16, x16, #0x10
    1dbc:	br	x17

0000000000001dc0 <PyArg_ParseTupleAndKeywords@plt>:
    1dc0:	adrp	x16, 17000 <PyMapping_Items>
    1dc4:	ldr	x17, [x16, #24]
    1dc8:	add	x16, x16, #0x18
    1dcc:	br	x17

0000000000001dd0 <PyObject_GetAttrString@plt>:
    1dd0:	adrp	x16, 17000 <PyMapping_Items>
    1dd4:	ldr	x17, [x16, #32]
    1dd8:	add	x16, x16, #0x20
    1ddc:	br	x17

0000000000001de0 <__cxa_finalize@plt>:
    1de0:	adrp	x16, 17000 <PyMapping_Items>
    1de4:	ldr	x17, [x16, #40]
    1de8:	add	x16, x16, #0x28
    1dec:	br	x17

0000000000001df0 <_PyAccu_Init@plt>:
    1df0:	adrp	x16, 17000 <PyMapping_Items>
    1df4:	ldr	x17, [x16, #48]
    1df8:	add	x16, x16, #0x30
    1dfc:	br	x17

0000000000001e00 <PyUnicode_Join@plt>:
    1e00:	adrp	x16, 17000 <PyMapping_Items>
    1e04:	ldr	x17, [x16, #56]
    1e08:	add	x16, x16, #0x38
    1e0c:	br	x17

0000000000001e10 <PyDict_Contains@plt>:
    1e10:	adrp	x16, 17000 <PyMapping_Items>
    1e14:	ldr	x17, [x16, #64]
    1e18:	add	x16, x16, #0x40
    1e1c:	br	x17

0000000000001e20 <PyBytes_FromStringAndSize@plt>:
    1e20:	adrp	x16, 17000 <PyMapping_Items>
    1e24:	ldr	x17, [x16, #72]
    1e28:	add	x16, x16, #0x48
    1e2c:	br	x17

0000000000001e30 <_Py_Dealloc@plt>:
    1e30:	adrp	x16, 17000 <PyMapping_Items>
    1e34:	ldr	x17, [x16, #80]
    1e38:	add	x16, x16, #0x50
    1e3c:	br	x17

0000000000001e40 <PyErr_SetObject@plt>:
    1e40:	adrp	x16, 17000 <PyMapping_Items>
    1e44:	ldr	x17, [x16, #88]
    1e48:	add	x16, x16, #0x58
    1e4c:	br	x17

0000000000001e50 <PyIter_Next@plt>:
    1e50:	adrp	x16, 17000 <PyMapping_Items>
    1e54:	ldr	x17, [x16, #96]
    1e58:	add	x16, x16, #0x60
    1e5c:	br	x17

0000000000001e60 <PyErr_SetString@plt>:
    1e60:	adrp	x16, 17000 <PyMapping_Items>
    1e64:	ldr	x17, [x16, #104]
    1e68:	add	x16, x16, #0x68
    1e6c:	br	x17

0000000000001e70 <_PyAccu_Accumulate@plt>:
    1e70:	adrp	x16, 17000 <PyMapping_Items>
    1e74:	ldr	x17, [x16, #112]
    1e78:	add	x16, x16, #0x70
    1e7c:	br	x17

0000000000001e80 <PyLong_FromSsize_t@plt>:
    1e80:	adrp	x16, 17000 <PyMapping_Items>
    1e84:	ldr	x17, [x16, #120]
    1e88:	add	x16, x16, #0x78
    1e8c:	br	x17

0000000000001e90 <PyType_Ready@plt>:
    1e90:	adrp	x16, 17000 <PyMapping_Items>
    1e94:	ldr	x17, [x16, #128]
    1e98:	add	x16, x16, #0x80
    1e9c:	br	x17

0000000000001ea0 <PyLong_FromVoidPtr@plt>:
    1ea0:	adrp	x16, 17000 <PyMapping_Items>
    1ea4:	ldr	x17, [x16, #136]
    1ea8:	add	x16, x16, #0x88
    1eac:	br	x17

0000000000001eb0 <PyList_Append@plt>:
    1eb0:	adrp	x16, 17000 <PyMapping_Items>
    1eb4:	ldr	x17, [x16, #144]
    1eb8:	add	x16, x16, #0x90
    1ebc:	br	x17

0000000000001ec0 <_Py_CheckRecursiveCall@plt>:
    1ec0:	adrp	x16, 17000 <PyMapping_Items>
    1ec4:	ldr	x17, [x16, #152]
    1ec8:	add	x16, x16, #0x98
    1ecc:	br	x17

0000000000001ed0 <PyDict_Clear@plt>:
    1ed0:	adrp	x16, 17000 <PyMapping_Items>
    1ed4:	ldr	x17, [x16, #160]
    1ed8:	add	x16, x16, #0xa0
    1edc:	br	x17

0000000000001ee0 <_PyAccu_Destroy@plt>:
    1ee0:	adrp	x16, 17000 <PyMapping_Items>
    1ee4:	ldr	x17, [x16, #168]
    1ee8:	add	x16, x16, #0xa8
    1eec:	br	x17

0000000000001ef0 <__gmon_start__@plt>:
    1ef0:	adrp	x16, 17000 <PyMapping_Items>
    1ef4:	ldr	x17, [x16, #176]
    1ef8:	add	x16, x16, #0xb0
    1efc:	br	x17

0000000000001f00 <PyObject_CallFunction@plt>:
    1f00:	adrp	x16, 17000 <PyMapping_Items>
    1f04:	ldr	x17, [x16, #184]
    1f08:	add	x16, x16, #0xb8
    1f0c:	br	x17

0000000000001f10 <PyTuple_New@plt>:
    1f10:	adrp	x16, 17000 <PyMapping_Items>
    1f14:	ldr	x17, [x16, #192]
    1f18:	add	x16, x16, #0xc0
    1f1c:	br	x17

0000000000001f20 <PyThreadState_Get@plt>:
    1f20:	adrp	x16, 17000 <PyMapping_Items>
    1f24:	ldr	x17, [x16, #200]
    1f28:	add	x16, x16, #0xc8
    1f2c:	br	x17

0000000000001f30 <PyDict_DelItem@plt>:
    1f30:	adrp	x16, 17000 <PyMapping_Items>
    1f34:	ldr	x17, [x16, #208]
    1f38:	add	x16, x16, #0xd0
    1f3c:	br	x17

0000000000001f40 <PyErr_Occurred@plt>:
    1f40:	adrp	x16, 17000 <PyMapping_Items>
    1f44:	ldr	x17, [x16, #216]
    1f48:	add	x16, x16, #0xd8
    1f4c:	br	x17

0000000000001f50 <PyModule_Create2@plt>:
    1f50:	adrp	x16, 17000 <PyMapping_Items>
    1f54:	ldr	x17, [x16, #224]
    1f58:	add	x16, x16, #0xe0
    1f5c:	br	x17

0000000000001f60 <PyImport_ImportModule@plt>:
    1f60:	adrp	x16, 17000 <PyMapping_Items>
    1f64:	ldr	x17, [x16, #232]
    1f68:	add	x16, x16, #0xe8
    1f6c:	br	x17

0000000000001f70 <PyObject_CallFunctionObjArgs@plt>:
    1f70:	adrp	x16, 17000 <PyMapping_Items>
    1f74:	ldr	x17, [x16, #240]
    1f78:	add	x16, x16, #0xf0
    1f7c:	br	x17

0000000000001f80 <PyList_Sort@plt>:
    1f80:	adrp	x16, 17000 <PyMapping_Items>
    1f84:	ldr	x17, [x16, #248]
    1f88:	add	x16, x16, #0xf8
    1f8c:	br	x17

0000000000001f90 <PyObject_IsTrue@plt>:
    1f90:	adrp	x16, 17000 <PyMapping_Items>
    1f94:	ldr	x17, [x16, #256]
    1f98:	add	x16, x16, #0x100
    1f9c:	br	x17

0000000000001fa0 <PyArg_ParseTuple@plt>:
    1fa0:	adrp	x16, 17000 <PyMapping_Items>
    1fa4:	ldr	x17, [x16, #264]
    1fa8:	add	x16, x16, #0x108
    1fac:	br	x17

0000000000001fb0 <PyUnicode_FromKindAndData@plt>:
    1fb0:	adrp	x16, 17000 <PyMapping_Items>
    1fb4:	ldr	x17, [x16, #272]
    1fb8:	add	x16, x16, #0x110
    1fbc:	br	x17

0000000000001fc0 <PyCFunction_GetFunction@plt>:
    1fc0:	adrp	x16, 17000 <PyMapping_Items>
    1fc4:	ldr	x17, [x16, #280]
    1fc8:	add	x16, x16, #0x118
    1fcc:	br	x17

0000000000001fd0 <PyDict_New@plt>:
    1fd0:	adrp	x16, 17000 <PyMapping_Items>
    1fd4:	ldr	x17, [x16, #288]
    1fd8:	add	x16, x16, #0x120
    1fdc:	br	x17

0000000000001fe0 <PyUnicode_FromString@plt>:
    1fe0:	adrp	x16, 17000 <PyMapping_Items>
    1fe4:	ldr	x17, [x16, #296]
    1fe8:	add	x16, x16, #0x128
    1fec:	br	x17

0000000000001ff0 <PyObject_GetIter@plt>:
    1ff0:	adrp	x16, 17000 <PyMapping_Items>
    1ff4:	ldr	x17, [x16, #304]
    1ff8:	add	x16, x16, #0x130
    1ffc:	br	x17

0000000000002000 <PyUnicode_InternFromString@plt>:
    2000:	adrp	x16, 17000 <PyMapping_Items>
    2004:	ldr	x17, [x16, #312]
    2008:	add	x16, x16, #0x138
    200c:	br	x17

0000000000002010 <PyModule_AddObject@plt>:
    2010:	adrp	x16, 17000 <PyMapping_Items>
    2014:	ldr	x17, [x16, #320]
    2018:	add	x16, x16, #0x140
    201c:	br	x17

0000000000002020 <PyDict_SetItem@plt>:
    2020:	adrp	x16, 17000 <PyMapping_Items>
    2024:	ldr	x17, [x16, #328]
    2028:	add	x16, x16, #0x148
    202c:	br	x17

0000000000002030 <PyType_IsSubtype@plt>:
    2030:	adrp	x16, 17000 <PyMapping_Items>
    2034:	ldr	x17, [x16, #336]
    2038:	add	x16, x16, #0x150
    203c:	br	x17

0000000000002040 <PyErr_Format@plt>:
    2040:	adrp	x16, 17000 <PyMapping_Items>
    2044:	ldr	x17, [x16, #344]
    2048:	add	x16, x16, #0x158
    204c:	br	x17

0000000000002050 <PyUnicode_FromStringAndSize@plt>:
    2050:	adrp	x16, 17000 <PyMapping_Items>
    2054:	ldr	x17, [x16, #352]
    2058:	add	x16, x16, #0x160
    205c:	br	x17

0000000000002060 <PyLong_FromString@plt>:
    2060:	adrp	x16, 17000 <PyMapping_Items>
    2064:	ldr	x17, [x16, #360]
    2068:	add	x16, x16, #0x168
    206c:	br	x17

0000000000002070 <_PyAccu_FinishAsList@plt>:
    2070:	adrp	x16, 17000 <PyMapping_Items>
    2074:	ldr	x17, [x16, #368]
    2078:	add	x16, x16, #0x170
    207c:	br	x17

0000000000002080 <PyUnicode_New@plt>:
    2080:	adrp	x16, 17000 <PyMapping_Items>
    2084:	ldr	x17, [x16, #376]
    2088:	add	x16, x16, #0x178
    208c:	br	x17

0000000000002090 <PyTuple_Pack@plt>:
    2090:	adrp	x16, 17000 <PyMapping_Items>
    2094:	ldr	x17, [x16, #384]
    2098:	add	x16, x16, #0x180
    209c:	br	x17

00000000000020a0 <PyObject_GC_UnTrack@plt>:
    20a0:	adrp	x16, 17000 <PyMapping_Items>
    20a4:	ldr	x17, [x16, #392]
    20a8:	add	x16, x16, #0x188
    20ac:	br	x17

00000000000020b0 <PyDict_GetItemWithError@plt>:
    20b0:	adrp	x16, 17000 <PyMapping_Items>
    20b4:	ldr	x17, [x16, #400]
    20b8:	add	x16, x16, #0x190
    20bc:	br	x17

00000000000020c0 <PyFloat_FromString@plt>:
    20c0:	adrp	x16, 17000 <PyMapping_Items>
    20c4:	ldr	x17, [x16, #408]
    20c8:	add	x16, x16, #0x198
    20cc:	br	x17

00000000000020d0 <PySequence_Fast@plt>:
    20d0:	adrp	x16, 17000 <PyMapping_Items>
    20d4:	ldr	x17, [x16, #416]
    20d8:	add	x16, x16, #0x1a0
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <PyInit__json@@Base-0x38b8>:
    20e0:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    20e4:	ldr	x0, [x0, #4000]
    20e8:	cbz	x0, 20f0 <PySequence_Fast@plt+0x20>
    20ec:	b	1ef0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    20f8:	add	x0, x0, #0x8e8
    20fc:	adrp	x1, 17000 <PyInit__json@@Base+0x11668>
    2100:	add	x1, x1, #0x8e8
    2104:	cmp	x1, x0
    2108:	b.eq	2120 <PySequence_Fast@plt+0x50>  // b.none
    210c:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    2110:	ldr	x1, [x1, #3944]
    2114:	cbz	x1, 2120 <PySequence_Fast@plt+0x50>
    2118:	mov	x16, x1
    211c:	br	x16
    2120:	ret
    2124:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    2128:	add	x0, x0, #0x8e8
    212c:	adrp	x1, 17000 <PyInit__json@@Base+0x11668>
    2130:	add	x1, x1, #0x8e8
    2134:	sub	x1, x1, x0
    2138:	mov	x2, #0x2                   	// #2
    213c:	asr	x1, x1, #3
    2140:	sdiv	x1, x1, x2
    2144:	cbz	x1, 215c <PySequence_Fast@plt+0x8c>
    2148:	adrp	x2, 16000 <PyInit__json@@Base+0x10668>
    214c:	ldr	x2, [x2, #4056]
    2150:	cbz	x2, 215c <PySequence_Fast@plt+0x8c>
    2154:	mov	x16, x2
    2158:	br	x16
    215c:	ret
    2160:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    2164:	ldrb	w1, [x0, #2280]
    2168:	cbnz	w1, 21ac <PySequence_Fast@plt+0xdc>
    216c:	stp	x29, x30, [sp, #-32]!
    2170:	mov	x29, sp
    2174:	str	x19, [sp, #16]
    2178:	mov	x19, x0
    217c:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2180:	ldr	x0, [x0, #3960]
    2184:	cbz	x0, 2194 <PySequence_Fast@plt+0xc4>
    2188:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    218c:	ldr	x0, [x0, #424]
    2190:	bl	1de0 <__cxa_finalize@plt>
    2194:	bl	20f4 <PySequence_Fast@plt+0x24>
    2198:	mov	w0, #0x1                   	// #1
    219c:	strb	w0, [x19, #2280]
    21a0:	ldr	x19, [sp, #16]
    21a4:	ldp	x29, x30, [sp], #32
    21a8:	ret
    21ac:	ret
    21b0:	b	2124 <PySequence_Fast@plt+0x54>
    21b4:	sub	sp, sp, #0x90
    21b8:	adrp	x3, 17000 <PyInit__json@@Base+0x11668>
    21bc:	add	x7, sp, #0x78
    21c0:	add	x6, sp, #0x70
    21c4:	add	x5, sp, #0x68
    21c8:	add	x4, sp, #0x60
    21cc:	stp	x29, x30, [sp, #48]
    21d0:	add	x29, sp, #0x30
    21d4:	add	x3, x3, #0x1b0
    21d8:	str	x19, [sp, #64]
    21dc:	mov	x19, x0
    21e0:	mov	x0, x1
    21e4:	mov	x1, x2
    21e8:	add	x2, sp, #0x5c
    21ec:	str	x2, [sp, #32]
    21f0:	add	x2, sp, #0x58
    21f4:	str	x2, [sp, #24]
    21f8:	add	x2, sp, #0x54
    21fc:	str	x2, [sp, #16]
    2200:	add	x2, sp, #0x88
    2204:	str	x2, [sp, #8]
    2208:	add	x2, sp, #0x80
    220c:	str	x2, [sp]
    2210:	adrp	x2, 5000 <PySequence_Fast@plt+0x2f30>
    2214:	add	x2, x2, #0xa6c
    2218:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    221c:	cbnz	w0, 2238 <PySequence_Fast@plt+0x168>
    2220:	mov	x19, #0x0                   	// #0
    2224:	mov	x0, x19
    2228:	ldp	x29, x30, [sp, #48]
    222c:	ldr	x19, [sp, #64]
    2230:	add	sp, sp, #0x90
    2234:	ret
    2238:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    223c:	ldr	x1, [sp, #96]
    2240:	ldr	x0, [x0, #4016]
    2244:	cmp	x1, x0
    2248:	b.eq	2278 <PySequence_Fast@plt+0x1a8>  // b.none
    224c:	ldr	x0, [x1, #8]
    2250:	ldr	x1, [x0, #168]
    2254:	tbnz	w1, #29, 2278 <PySequence_Fast@plt+0x1a8>
    2258:	ldr	x2, [x0, #24]
    225c:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2260:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    2264:	add	x1, x1, #0xa83
    2268:	ldr	x0, [x0, #3976]
    226c:	ldr	x0, [x0]
    2270:	bl	2040 <PyErr_Format@plt>
    2274:	b	2220 <PySequence_Fast@plt+0x150>
    2278:	ldr	x2, [x19, #304]
    227c:	mov	x0, x19
    2280:	mov	x1, #0x0                   	// #0
    2284:	blr	x2
    2288:	mov	x19, x0
    228c:	cbz	x0, 2220 <PySequence_Fast@plt+0x150>
    2290:	ldr	x1, [sp, #120]
    2294:	str	x1, [x19, #40]
    2298:	ldr	x0, [sp, #96]
    229c:	str	x0, [x19, #16]
    22a0:	ldr	x1, [sp, #128]
    22a4:	str	x1, [x19, #48]
    22a8:	ldr	x0, [sp, #104]
    22ac:	str	x0, [x19, #24]
    22b0:	ldr	x1, [sp, #136]
    22b4:	str	x1, [x19, #56]
    22b8:	ldr	w1, [sp, #84]
    22bc:	ldr	x0, [sp, #112]
    22c0:	strb	w1, [x19, #64]
    22c4:	ldr	w1, [sp, #88]
    22c8:	strb	w1, [x19, #65]
    22cc:	ldr	w1, [sp, #92]
    22d0:	ldr	x2, [x0, #8]
    22d4:	str	w1, [x19, #68]
    22d8:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    22dc:	str	x0, [x19, #32]
    22e0:	str	xzr, [x19, #72]
    22e4:	ldr	x1, [x1, #4064]
    22e8:	cmp	x2, x1
    22ec:	b.ne	2318 <PySequence_Fast@plt+0x248>  // b.any
    22f0:	bl	1fc0 <PyCFunction_GetFunction@plt>
    22f4:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    22f8:	add	x1, x1, #0x990
    22fc:	cmp	x0, x1
    2300:	b.eq	2314 <PySequence_Fast@plt+0x244>  // b.none
    2304:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    2308:	add	x1, x1, #0x37c
    230c:	cmp	x0, x1
    2310:	b.ne	2318 <PySequence_Fast@plt+0x248>  // b.any
    2314:	str	x0, [x19, #72]
    2318:	ldr	x1, [x19, #16]
    231c:	ldr	x0, [x1]
    2320:	add	x0, x0, #0x1
    2324:	str	x0, [x1]
    2328:	ldr	x1, [x19, #24]
    232c:	ldr	x0, [x1]
    2330:	add	x0, x0, #0x1
    2334:	str	x0, [x1]
    2338:	ldr	x1, [x19, #32]
    233c:	ldr	x0, [x1]
    2340:	add	x0, x0, #0x1
    2344:	str	x0, [x1]
    2348:	ldr	x1, [x19, #40]
    234c:	ldr	x0, [x1]
    2350:	add	x0, x0, #0x1
    2354:	str	x0, [x1]
    2358:	ldr	x1, [x19, #48]
    235c:	ldr	x0, [x1]
    2360:	add	x0, x0, #0x1
    2364:	str	x0, [x1]
    2368:	ldr	x1, [x19, #56]
    236c:	ldr	x0, [x1]
    2370:	add	x0, x0, #0x1
    2374:	str	x0, [x1]
    2378:	b	2224 <PySequence_Fast@plt+0x154>
    237c:	stp	x29, x30, [sp, #-48]!
    2380:	mov	x29, sp
    2384:	ldr	x0, [x1, #8]
    2388:	stp	x19, x20, [sp, #16]
    238c:	mov	x20, x1
    2390:	ldr	x1, [x0, #168]
    2394:	str	x21, [sp, #32]
    2398:	tbz	w1, #28, 2970 <PySequence_Fast@plt+0x8a0>
    239c:	ldrsb	w0, [x20, #32]
    23a0:	tbz	w0, #31, 248c <PySequence_Fast@plt+0x3bc>
    23a4:	ldrb	w0, [x20, #32]
    23a8:	and	w2, w0, #0x40
    23ac:	tbz	w0, #6, 24a4 <PySequence_Fast@plt+0x3d4>
    23b0:	mov	w1, #0x7f                  	// #127
    23b4:	ldr	x21, [x20, #16]
    23b8:	tbz	w0, #5, 24cc <PySequence_Fast@plt+0x3fc>
    23bc:	add	x0, x20, #0x30
    23c0:	add	x19, x20, #0x48
    23c4:	cmp	w2, #0x0
    23c8:	csel	x19, x19, x0, eq  // eq = none
    23cc:	ldrb	w4, [x20, #32]
    23d0:	mov	x0, #0x2                   	// #2
    23d4:	mov	x7, x0
    23d8:	mov	x3, #0x0                   	// #0
    23dc:	mov	x5, #0x6                   	// #6
    23e0:	mov	x6, #0x1                   	// #1
    23e4:	ubfx	x4, x4, #2, #3
    23e8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    23ec:	cmp	x21, x3
    23f0:	b.gt	24d4 <PySequence_Fast@plt+0x404>
    23f4:	bl	2080 <PyUnicode_New@plt>
    23f8:	cbz	x0, 249c <PySequence_Fast@plt+0x3cc>
    23fc:	ldrb	w1, [x0, #32]
    2400:	ldrb	w2, [x0, #32]
    2404:	ubfx	x1, x1, #2, #3
    2408:	and	w3, w2, #0x20
    240c:	cmp	w1, #0x1
    2410:	b.ne	2680 <PySequence_Fast@plt+0x5b0>  // b.any
    2414:	cbz	w3, 2578 <PySequence_Fast@plt+0x4a8>
    2418:	add	x5, x0, #0x30
    241c:	add	x1, x0, #0x48
    2420:	tst	x2, #0x40
    2424:	csel	x5, x1, x5, eq  // eq = none
    2428:	adrp	x9, 16000 <PyInit__json@@Base+0x10668>
    242c:	adrp	x10, 5000 <PySequence_Fast@plt+0x2f30>
    2430:	add	x10, x10, #0xf14
    2434:	mov	w1, #0x22                  	// #34
    2438:	ldr	x9, [x9, #4048]
    243c:	mov	x3, #0x1                   	// #1
    2440:	mov	x8, #0x0                   	// #0
    2444:	mov	w7, #0x5c                  	// #92
    2448:	mov	w13, #0x75                  	// #117
    244c:	mov	w11, #0x30                  	// #48
    2450:	mov	w14, #0x74                  	// #116
    2454:	mov	w15, #0x72                  	// #114
    2458:	mov	w16, #0x6e                  	// #110
    245c:	mov	w17, #0x66                  	// #102
    2460:	mov	w18, #0x62                  	// #98
    2464:	strb	w1, [x5]
    2468:	add	x1, x5, x3
    246c:	cmp	x21, x8
    2470:	b.gt	2580 <PySequence_Fast@plt+0x4b0>
    2474:	mov	w2, #0x22                  	// #34
    2478:	strb	w2, [x1]
    247c:	ldp	x19, x20, [sp, #16]
    2480:	ldr	x21, [sp, #32]
    2484:	ldp	x29, x30, [sp], #48
    2488:	ret
    248c:	mov	x0, x20
    2490:	bl	1db0 <_PyUnicode_Ready@plt>
    2494:	cmn	w0, #0x1
    2498:	b.ne	23a4 <PySequence_Fast@plt+0x2d4>  // b.any
    249c:	mov	x0, #0x0                   	// #0
    24a0:	b	247c <PySequence_Fast@plt+0x3ac>
    24a4:	and	w1, w0, #0x1c
    24a8:	cmp	w1, #0x4
    24ac:	b.eq	24c4 <PySequence_Fast@plt+0x3f4>  // b.none
    24b0:	cmp	w1, #0x8
    24b4:	mov	w3, #0x10ffff              	// #1114111
    24b8:	mov	w1, #0xffff                	// #65535
    24bc:	csel	w1, w1, w3, eq  // eq = none
    24c0:	b	23b4 <PySequence_Fast@plt+0x2e4>
    24c4:	mov	w1, #0xff                  	// #255
    24c8:	b	23b4 <PySequence_Fast@plt+0x2e4>
    24cc:	ldr	x19, [x20, #72]
    24d0:	b	23cc <PySequence_Fast@plt+0x2fc>
    24d4:	cmp	w4, #0x1
    24d8:	b.ne	2524 <PySequence_Fast@plt+0x454>  // b.any
    24dc:	ldrb	w2, [x19, x3]
    24e0:	cmp	w2, #0x22
    24e4:	b.eq	2548 <PySequence_Fast@plt+0x478>  // b.none
    24e8:	b.hi	2550 <PySequence_Fast@plt+0x480>  // b.pmore
    24ec:	cmp	w2, #0xa
    24f0:	b.hi	253c <PySequence_Fast@plt+0x46c>  // b.pmore
    24f4:	cmp	w2, #0x8
    24f8:	csel	x2, x5, x7, cc  // cc = lo, ul, last
    24fc:	sub	x9, x8, x2
    2500:	cmp	x9, x0
    2504:	b.ge	256c <PySequence_Fast@plt+0x49c>  // b.tcont
    2508:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    250c:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    2510:	add	x1, x1, #0xabe
    2514:	ldr	x0, [x0, #4008]
    2518:	ldr	x0, [x0]
    251c:	bl	1e60 <PyErr_SetString@plt>
    2520:	b	249c <PySequence_Fast@plt+0x3cc>
    2524:	cmp	w4, #0x2
    2528:	b.ne	2534 <PySequence_Fast@plt+0x464>  // b.any
    252c:	ldrh	w2, [x19, x3, lsl #1]
    2530:	b	24e0 <PySequence_Fast@plt+0x410>
    2534:	ldr	w2, [x19, x3, lsl #2]
    2538:	b	24e0 <PySequence_Fast@plt+0x410>
    253c:	sub	w9, w2, #0xc
    2540:	cmp	w9, #0x1
    2544:	b.hi	2560 <PySequence_Fast@plt+0x490>  // b.pmore
    2548:	mov	x2, #0x2                   	// #2
    254c:	b	24fc <PySequence_Fast@plt+0x42c>
    2550:	cmp	w2, #0x5c
    2554:	cset	x2, eq  // eq = none
    2558:	add	x2, x2, #0x1
    255c:	b	24fc <PySequence_Fast@plt+0x42c>
    2560:	cmp	w2, #0x20
    2564:	csel	x2, x5, x6, cc  // cc = lo, ul, last
    2568:	b	24fc <PySequence_Fast@plt+0x42c>
    256c:	add	x0, x0, x2
    2570:	add	x3, x3, #0x1
    2574:	b	23ec <PySequence_Fast@plt+0x31c>
    2578:	ldr	x5, [x0, #72]
    257c:	b	2428 <PySequence_Fast@plt+0x358>
    2580:	ldrb	w2, [x19, x8]
    2584:	add	x4, x3, #0x1
    2588:	add	x6, x5, x4
    258c:	cmp	w2, #0xd
    2590:	b.hi	25b8 <PySequence_Fast@plt+0x4e8>  // b.pmore
    2594:	cmp	w2, #0x7
    2598:	b.ls	2638 <PySequence_Fast@plt+0x568>  // b.plast
    259c:	sub	w12, w2, #0x8
    25a0:	cmp	w12, #0x5
    25a4:	b.hi	2638 <PySequence_Fast@plt+0x568>  // b.pmore
    25a8:	ldrb	w12, [x10, w12, uxtw]
    25ac:	adr	x20, 25b8 <PySequence_Fast@plt+0x4e8>
    25b0:	add	x12, x20, w12, sxtb #2
    25b4:	br	x12
    25b8:	cmp	w2, #0x22
    25bc:	b.eq	25e0 <PySequence_Fast@plt+0x510>  // b.none
    25c0:	cmp	w2, #0x5c
    25c4:	b.ne	2638 <PySequence_Fast@plt+0x568>  // b.any
    25c8:	strb	w2, [x1]
    25cc:	add	x4, x3, #0x2
    25d0:	strb	w2, [x6]
    25d4:	add	x8, x8, #0x1
    25d8:	mov	x3, x4
    25dc:	b	2468 <PySequence_Fast@plt+0x398>
    25e0:	strb	w7, [x1]
    25e4:	b	25cc <PySequence_Fast@plt+0x4fc>
    25e8:	strb	w7, [x1]
    25ec:	add	x4, x3, #0x2
    25f0:	strb	w18, [x6]
    25f4:	b	25d4 <PySequence_Fast@plt+0x504>
    25f8:	strb	w7, [x1]
    25fc:	add	x4, x3, #0x2
    2600:	strb	w17, [x6]
    2604:	b	25d4 <PySequence_Fast@plt+0x504>
    2608:	strb	w7, [x1]
    260c:	add	x4, x3, #0x2
    2610:	strb	w16, [x6]
    2614:	b	25d4 <PySequence_Fast@plt+0x504>
    2618:	strb	w7, [x1]
    261c:	add	x4, x3, #0x2
    2620:	strb	w15, [x6]
    2624:	b	25d4 <PySequence_Fast@plt+0x504>
    2628:	strb	w7, [x1]
    262c:	add	x4, x3, #0x2
    2630:	strb	w14, [x6]
    2634:	b	25d4 <PySequence_Fast@plt+0x504>
    2638:	cmp	w2, #0x1f
    263c:	b.hi	2678 <PySequence_Fast@plt+0x5a8>  // b.pmore
    2640:	strb	w7, [x1]
    2644:	ubfx	x4, x2, #4, #4
    2648:	strb	w13, [x6]
    264c:	and	x2, x2, #0xf
    2650:	strb	w11, [x1, #2]
    2654:	strb	w11, [x1, #3]
    2658:	ldr	x6, [x9]
    265c:	ldrb	w4, [x6, x4]
    2660:	strb	w4, [x1, #4]
    2664:	add	x4, x3, #0x6
    2668:	ldr	x3, [x9]
    266c:	ldrb	w2, [x3, x2]
    2670:	strb	w2, [x1, #5]
    2674:	b	25d4 <PySequence_Fast@plt+0x504>
    2678:	strb	w2, [x1]
    267c:	b	25d4 <PySequence_Fast@plt+0x504>
    2680:	cmp	w1, #0x2
    2684:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    2688:	b.ne	2800 <PySequence_Fast@plt+0x730>  // b.any
    268c:	cbz	w3, 26fc <PySequence_Fast@plt+0x62c>
    2690:	add	x5, x0, #0x30
    2694:	add	x3, x0, #0x48
    2698:	tst	x2, #0x40
    269c:	csel	x5, x3, x5, eq  // eq = none
    26a0:	ldr	x1, [x1, #4048]
    26a4:	adrp	x8, 5000 <PySequence_Fast@plt+0x2f30>
    26a8:	add	x8, x8, #0xf1c
    26ac:	mov	w2, #0x22                  	// #34
    26b0:	mov	x7, #0x0                   	// #0
    26b4:	mov	w6, #0x5c                  	// #92
    26b8:	mov	w12, #0x75                  	// #117
    26bc:	mov	w10, #0x30                  	// #48
    26c0:	mov	w13, #0x74                  	// #116
    26c4:	mov	w14, #0x72                  	// #114
    26c8:	mov	w15, #0x6e                  	// #110
    26cc:	mov	w16, #0x66                  	// #102
    26d0:	mov	w17, #0x62                  	// #98
    26d4:	strh	w2, [x5]
    26d8:	ldr	x9, [x1]
    26dc:	mov	x1, #0x1                   	// #1
    26e0:	lsl	x4, x1, #1
    26e4:	add	x2, x5, x1, lsl #1
    26e8:	cmp	x21, x7
    26ec:	b.gt	2704 <PySequence_Fast@plt+0x634>
    26f0:	mov	w1, #0x22                  	// #34
    26f4:	strh	w1, [x2]
    26f8:	b	247c <PySequence_Fast@plt+0x3ac>
    26fc:	ldr	x5, [x0, #72]
    2700:	b	26a0 <PySequence_Fast@plt+0x5d0>
    2704:	ldrh	w3, [x19, x7, lsl #1]
    2708:	add	x4, x4, #0x2
    270c:	add	x18, x1, #0x1
    2710:	add	x4, x5, x4
    2714:	cmp	w3, #0xd
    2718:	b.hi	2740 <PySequence_Fast@plt+0x670>  // b.pmore
    271c:	cmp	w3, #0x7
    2720:	b.ls	27bc <PySequence_Fast@plt+0x6ec>  // b.plast
    2724:	sub	w11, w3, #0x8
    2728:	cmp	w11, #0x5
    272c:	b.hi	27bc <PySequence_Fast@plt+0x6ec>  // b.pmore
    2730:	ldrb	w11, [x8, w11, uxtw]
    2734:	adr	x20, 2740 <PySequence_Fast@plt+0x670>
    2738:	add	x11, x20, w11, sxtb #2
    273c:	br	x11
    2740:	cmp	w3, #0x22
    2744:	b.eq	2764 <PySequence_Fast@plt+0x694>  // b.none
    2748:	cmp	w3, #0x5c
    274c:	b.ne	27bc <PySequence_Fast@plt+0x6ec>  // b.any
    2750:	strh	w3, [x2]
    2754:	add	x1, x1, #0x2
    2758:	strh	w3, [x4]
    275c:	add	x7, x7, #0x1
    2760:	b	26e0 <PySequence_Fast@plt+0x610>
    2764:	strh	w6, [x2]
    2768:	b	2754 <PySequence_Fast@plt+0x684>
    276c:	strh	w6, [x2]
    2770:	add	x1, x1, #0x2
    2774:	strh	w17, [x4]
    2778:	b	275c <PySequence_Fast@plt+0x68c>
    277c:	strh	w6, [x2]
    2780:	add	x1, x1, #0x2
    2784:	strh	w16, [x4]
    2788:	b	275c <PySequence_Fast@plt+0x68c>
    278c:	strh	w6, [x2]
    2790:	add	x1, x1, #0x2
    2794:	strh	w15, [x4]
    2798:	b	275c <PySequence_Fast@plt+0x68c>
    279c:	strh	w6, [x2]
    27a0:	add	x1, x1, #0x2
    27a4:	strh	w14, [x4]
    27a8:	b	275c <PySequence_Fast@plt+0x68c>
    27ac:	strh	w6, [x2]
    27b0:	add	x1, x1, #0x2
    27b4:	strh	w13, [x4]
    27b8:	b	275c <PySequence_Fast@plt+0x68c>
    27bc:	cmp	w3, #0x1f
    27c0:	b.hi	27f4 <PySequence_Fast@plt+0x724>  // b.pmore
    27c4:	strh	w6, [x2]
    27c8:	add	x1, x1, #0x6
    27cc:	strh	w12, [x4]
    27d0:	ubfx	x4, x3, #4, #12
    27d4:	strh	w10, [x2, #4]
    27d8:	and	x3, x3, #0xf
    27dc:	strh	w10, [x2, #6]
    27e0:	ldrb	w4, [x9, x4]
    27e4:	strh	w4, [x2, #8]
    27e8:	ldrb	w3, [x9, x3]
    27ec:	strh	w3, [x2, #10]
    27f0:	b	275c <PySequence_Fast@plt+0x68c>
    27f4:	mov	x1, x18
    27f8:	strh	w3, [x2]
    27fc:	b	275c <PySequence_Fast@plt+0x68c>
    2800:	cbz	w3, 2870 <PySequence_Fast@plt+0x7a0>
    2804:	add	x5, x0, #0x30
    2808:	add	x3, x0, #0x48
    280c:	tst	x2, #0x40
    2810:	csel	x5, x3, x5, eq  // eq = none
    2814:	ldr	x1, [x1, #4048]
    2818:	adrp	x8, 5000 <PySequence_Fast@plt+0x2f30>
    281c:	add	x8, x8, #0xf24
    2820:	mov	w2, #0x22                  	// #34
    2824:	mov	x7, #0x0                   	// #0
    2828:	mov	w6, #0x5c                  	// #92
    282c:	mov	w12, #0x75                  	// #117
    2830:	mov	w10, #0x30                  	// #48
    2834:	mov	w13, #0x74                  	// #116
    2838:	mov	w14, #0x72                  	// #114
    283c:	mov	w15, #0x6e                  	// #110
    2840:	mov	w16, #0x66                  	// #102
    2844:	mov	w17, #0x62                  	// #98
    2848:	ldr	x9, [x1]
    284c:	mov	x1, #0x1                   	// #1
    2850:	str	w2, [x5]
    2854:	lsl	x4, x1, #2
    2858:	add	x2, x5, x1, lsl #2
    285c:	cmp	x21, x7
    2860:	b.gt	2878 <PySequence_Fast@plt+0x7a8>
    2864:	mov	w1, #0x22                  	// #34
    2868:	str	w1, [x2]
    286c:	b	247c <PySequence_Fast@plt+0x3ac>
    2870:	ldr	x5, [x0, #72]
    2874:	b	2814 <PySequence_Fast@plt+0x744>
    2878:	ldr	w3, [x19, x7, lsl #2]
    287c:	add	x4, x4, #0x4
    2880:	add	x11, x1, #0x1
    2884:	add	x4, x5, x4
    2888:	cmp	w3, #0xd
    288c:	b.hi	28b4 <PySequence_Fast@plt+0x7e4>  // b.pmore
    2890:	cmp	w3, #0x7
    2894:	b.ls	2938 <PySequence_Fast@plt+0x868>  // b.plast
    2898:	sub	w11, w3, #0x8
    289c:	cmp	w11, #0x5
    28a0:	b.hi	2938 <PySequence_Fast@plt+0x868>  // b.pmore
    28a4:	ldrb	w11, [x8, w11, uxtw]
    28a8:	adr	x18, 28b4 <PySequence_Fast@plt+0x7e4>
    28ac:	add	x11, x18, w11, sxtb #2
    28b0:	br	x11
    28b4:	cmp	w3, #0x22
    28b8:	b.eq	28d8 <PySequence_Fast@plt+0x808>  // b.none
    28bc:	cmp	w3, #0x5c
    28c0:	b.ne	2930 <PySequence_Fast@plt+0x860>  // b.any
    28c4:	str	w3, [x2]
    28c8:	add	x1, x1, #0x2
    28cc:	str	w3, [x4]
    28d0:	add	x7, x7, #0x1
    28d4:	b	2854 <PySequence_Fast@plt+0x784>
    28d8:	str	w6, [x2]
    28dc:	b	28c8 <PySequence_Fast@plt+0x7f8>
    28e0:	str	w6, [x2]
    28e4:	add	x1, x1, #0x2
    28e8:	str	w17, [x4]
    28ec:	b	28d0 <PySequence_Fast@plt+0x800>
    28f0:	str	w6, [x2]
    28f4:	add	x1, x1, #0x2
    28f8:	str	w16, [x4]
    28fc:	b	28d0 <PySequence_Fast@plt+0x800>
    2900:	str	w6, [x2]
    2904:	add	x1, x1, #0x2
    2908:	str	w15, [x4]
    290c:	b	28d0 <PySequence_Fast@plt+0x800>
    2910:	str	w6, [x2]
    2914:	add	x1, x1, #0x2
    2918:	str	w14, [x4]
    291c:	b	28d0 <PySequence_Fast@plt+0x800>
    2920:	str	w6, [x2]
    2924:	add	x1, x1, #0x2
    2928:	str	w13, [x4]
    292c:	b	28d0 <PySequence_Fast@plt+0x800>
    2930:	cmp	w3, #0x1f
    2934:	b.hi	2964 <PySequence_Fast@plt+0x894>  // b.pmore
    2938:	str	w6, [x2]
    293c:	add	x1, x1, #0x6
    2940:	str	w12, [x4]
    2944:	lsr	w4, w3, #4
    2948:	stp	w10, w10, [x2, #8]
    294c:	and	x3, x3, #0xf
    2950:	ldrb	w4, [x9, x4]
    2954:	str	w4, [x2, #16]
    2958:	ldrb	w3, [x9, x3]
    295c:	str	w3, [x2, #20]
    2960:	b	28d0 <PySequence_Fast@plt+0x800>
    2964:	mov	x1, x11
    2968:	str	w3, [x2]
    296c:	b	28d0 <PySequence_Fast@plt+0x800>
    2970:	ldr	x2, [x0, #24]
    2974:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2978:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    297c:	add	x1, x1, #0xadb
    2980:	ldr	x0, [x0, #3976]
    2984:	ldr	x0, [x0]
    2988:	bl	2040 <PyErr_Format@plt>
    298c:	b	249c <PySequence_Fast@plt+0x3cc>
    2990:	stp	x29, x30, [sp, #-64]!
    2994:	mov	x29, sp
    2998:	ldr	x0, [x1, #8]
    299c:	stp	x19, x20, [sp, #16]
    29a0:	mov	x20, x1
    29a4:	stp	x21, x22, [sp, #32]
    29a8:	ldr	x1, [x0, #168]
    29ac:	stp	x23, x24, [sp, #48]
    29b0:	tbz	w1, #28, 2d28 <PySequence_Fast@plt+0xc58>
    29b4:	ldrsb	w0, [x20, #32]
    29b8:	tbz	w0, #31, 29d0 <PySequence_Fast@plt+0x900>
    29bc:	ldrb	w1, [x20, #32]
    29c0:	ldr	x21, [x20, #16]
    29c4:	tbnz	w1, #5, 29e8 <PySequence_Fast@plt+0x918>
    29c8:	ldr	x19, [x20, #72]
    29cc:	b	29f8 <PySequence_Fast@plt+0x928>
    29d0:	mov	x0, x20
    29d4:	bl	1db0 <_PyUnicode_Ready@plt>
    29d8:	cmn	w0, #0x1
    29dc:	b.ne	29bc <PySequence_Fast@plt+0x8ec>  // b.any
    29e0:	mov	x0, #0x0                   	// #0
    29e4:	b	2aac <PySequence_Fast@plt+0x9dc>
    29e8:	add	x0, x20, #0x30
    29ec:	add	x19, x20, #0x48
    29f0:	tst	x1, #0x40
    29f4:	csel	x19, x19, x0, eq  // eq = none
    29f8:	ldrb	w20, [x20, #32]
    29fc:	mov	x0, #0x2                   	// #2
    2a00:	mov	x4, x0
    2a04:	mov	x2, #0x0                   	// #0
    2a08:	mov	w5, #0x5c                  	// #92
    2a0c:	mov	w6, #0xffff                	// #65535
    2a10:	ubfx	x20, x20, #2, #3
    2a14:	mov	x7, #0xc                   	// #12
    2a18:	mov	x3, #0x6                   	// #6
    2a1c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    2a20:	cmp	x21, x2
    2a24:	b.gt	2ac0 <PySequence_Fast@plt+0x9f0>
    2a28:	mov	w1, #0x7f                  	// #127
    2a2c:	bl	2080 <PyUnicode_New@plt>
    2a30:	cbz	x0, 29e0 <PySequence_Fast@plt+0x910>
    2a34:	ldrb	w2, [x0, #32]
    2a38:	tbz	w2, #5, 2b80 <PySequence_Fast@plt+0xab0>
    2a3c:	add	x1, x0, #0x30
    2a40:	add	x4, x0, #0x48
    2a44:	tst	x2, #0x40
    2a48:	csel	x4, x4, x1, eq  // eq = none
    2a4c:	adrp	x6, 16000 <PyInit__json@@Base+0x10668>
    2a50:	mov	w12, #0x5c                  	// #92
    2a54:	adrp	x11, 5000 <PySequence_Fast@plt+0x2f30>
    2a58:	mov	w10, w12
    2a5c:	ldr	x6, [x6, #4048]
    2a60:	add	x11, x11, #0xf2c
    2a64:	mov	w1, #0x22                  	// #34
    2a68:	mov	x3, #0x1                   	// #1
    2a6c:	mov	x9, x6
    2a70:	mov	x8, #0x0                   	// #0
    2a74:	mov	w13, #0x75                  	// #117
    2a78:	mov	w14, #0xffff                	// #65535
    2a7c:	mov	w15, #0xd7c0                	// #55232
    2a80:	mov	w16, #0xdc00                	// #56320
    2a84:	mov	w17, #0x74                  	// #116
    2a88:	mov	w18, #0x72                  	// #114
    2a8c:	mov	w30, #0x6e                  	// #110
    2a90:	mov	w22, #0x66                  	// #102
    2a94:	mov	w23, #0x62                  	// #98
    2a98:	strb	w1, [x4]
    2a9c:	cmp	x21, x8
    2aa0:	b.gt	2b88 <PySequence_Fast@plt+0xab8>
    2aa4:	mov	w1, #0x22                  	// #34
    2aa8:	strb	w1, [x4, x3]
    2aac:	ldp	x19, x20, [sp, #16]
    2ab0:	ldp	x21, x22, [sp, #32]
    2ab4:	ldp	x23, x24, [sp, #48]
    2ab8:	ldp	x29, x30, [sp], #64
    2abc:	ret
    2ac0:	cmp	w20, #0x1
    2ac4:	b.ne	2b10 <PySequence_Fast@plt+0xa40>  // b.any
    2ac8:	ldrb	w1, [x19, x2]
    2acc:	sub	w9, w1, #0x20
    2ad0:	cmp	w9, #0x5e
    2ad4:	ccmp	w1, w5, #0x4, ls  // ls = plast
    2ad8:	b.eq	2b28 <PySequence_Fast@plt+0xa58>  // b.none
    2adc:	cmp	w1, #0x22
    2ae0:	cset	x1, eq  // eq = none
    2ae4:	add	x1, x1, #0x1
    2ae8:	sub	x9, x8, x1
    2aec:	cmp	x9, x0
    2af0:	b.ge	2b74 <PySequence_Fast@plt+0xaa4>  // b.tcont
    2af4:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2af8:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    2afc:	add	x1, x1, #0xabe
    2b00:	ldr	x0, [x0, #4008]
    2b04:	ldr	x0, [x0]
    2b08:	bl	1e60 <PyErr_SetString@plt>
    2b0c:	b	29e0 <PySequence_Fast@plt+0x910>
    2b10:	cmp	w20, #0x2
    2b14:	b.ne	2b20 <PySequence_Fast@plt+0xa50>  // b.any
    2b18:	ldrh	w1, [x19, x2, lsl #1]
    2b1c:	b	2acc <PySequence_Fast@plt+0x9fc>
    2b20:	ldr	w1, [x19, x2, lsl #2]
    2b24:	b	2acc <PySequence_Fast@plt+0x9fc>
    2b28:	cmp	w1, #0x22
    2b2c:	b.eq	2b6c <PySequence_Fast@plt+0xa9c>  // b.none
    2b30:	b.hi	2b58 <PySequence_Fast@plt+0xa88>  // b.pmore
    2b34:	cmp	w1, #0xa
    2b38:	b.hi	2b48 <PySequence_Fast@plt+0xa78>  // b.pmore
    2b3c:	cmp	w1, #0x8
    2b40:	csel	x1, x3, x4, cc  // cc = lo, ul, last
    2b44:	b	2ae8 <PySequence_Fast@plt+0xa18>
    2b48:	sub	w1, w1, #0xc
    2b4c:	cmp	w1, #0x2
    2b50:	csel	x1, x4, x3, cc  // cc = lo, ul, last
    2b54:	b	2ae8 <PySequence_Fast@plt+0xa18>
    2b58:	cmp	w1, #0x5c
    2b5c:	b.eq	2b6c <PySequence_Fast@plt+0xa9c>  // b.none
    2b60:	cmp	w1, w6
    2b64:	csel	x1, x7, x3, hi  // hi = pmore
    2b68:	b	2ae8 <PySequence_Fast@plt+0xa18>
    2b6c:	mov	x1, #0x2                   	// #2
    2b70:	b	2ae8 <PySequence_Fast@plt+0xa18>
    2b74:	add	x0, x0, x1
    2b78:	add	x2, x2, #0x1
    2b7c:	b	2a20 <PySequence_Fast@plt+0x950>
    2b80:	ldr	x4, [x0, #72]
    2b84:	b	2a4c <PySequence_Fast@plt+0x97c>
    2b88:	cmp	w20, #0x1
    2b8c:	b.ne	2bc4 <PySequence_Fast@plt+0xaf4>  // b.any
    2b90:	ldrb	w1, [x19, x8]
    2b94:	sub	w5, w1, #0x20
    2b98:	add	x2, x3, #0x1
    2b9c:	cmp	w5, #0x5e
    2ba0:	add	x7, x4, x3
    2ba4:	ccmp	w1, w12, #0x4, ls  // ls = plast
    2ba8:	b.eq	2bdc <PySequence_Fast@plt+0xb0c>  // b.none
    2bac:	cmp	w1, #0x22
    2bb0:	b.eq	2bdc <PySequence_Fast@plt+0xb0c>  // b.none
    2bb4:	strb	w1, [x7]
    2bb8:	add	x8, x8, #0x1
    2bbc:	mov	x3, x2
    2bc0:	b	2a9c <PySequence_Fast@plt+0x9cc>
    2bc4:	cmp	w20, #0x2
    2bc8:	b.ne	2bd4 <PySequence_Fast@plt+0xb04>  // b.any
    2bcc:	ldrh	w1, [x19, x8, lsl #1]
    2bd0:	b	2b94 <PySequence_Fast@plt+0xac4>
    2bd4:	ldr	w1, [x19, x8, lsl #2]
    2bd8:	b	2b94 <PySequence_Fast@plt+0xac4>
    2bdc:	strb	w10, [x7]
    2be0:	add	x5, x4, x2
    2be4:	cmp	w1, #0xd
    2be8:	b.hi	2c10 <PySequence_Fast@plt+0xb40>  // b.pmore
    2bec:	cmp	w1, #0x7
    2bf0:	b.ls	2cd4 <PySequence_Fast@plt+0xc04>  // b.plast
    2bf4:	sub	w7, w1, #0x8
    2bf8:	cmp	w7, #0x5
    2bfc:	b.hi	2cd4 <PySequence_Fast@plt+0xc04>  // b.pmore
    2c00:	ldrb	w7, [x11, w7, uxtw]
    2c04:	adr	x24, 2c10 <PySequence_Fast@plt+0xb40>
    2c08:	add	x7, x24, w7, sxtb #2
    2c0c:	br	x7
    2c10:	cmp	w1, #0x22
    2c14:	b.eq	2c2c <PySequence_Fast@plt+0xb5c>  // b.none
    2c18:	cmp	w1, #0x5c
    2c1c:	b.ne	2c74 <PySequence_Fast@plt+0xba4>  // b.any
    2c20:	add	x2, x3, #0x2
    2c24:	strb	w10, [x5]
    2c28:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c2c:	add	x2, x3, #0x2
    2c30:	strb	w1, [x5]
    2c34:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c38:	add	x2, x3, #0x2
    2c3c:	strb	w23, [x5]
    2c40:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c44:	add	x2, x3, #0x2
    2c48:	strb	w22, [x5]
    2c4c:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c50:	add	x2, x3, #0x2
    2c54:	strb	w30, [x5]
    2c58:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c5c:	add	x2, x3, #0x2
    2c60:	strb	w18, [x5]
    2c64:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c68:	add	x2, x3, #0x2
    2c6c:	strb	w17, [x5]
    2c70:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2c74:	cmp	w1, w14
    2c78:	b.ls	2cd4 <PySequence_Fast@plt+0xc04>  // b.plast
    2c7c:	strb	w13, [x5]
    2c80:	add	w2, w15, w1, lsr #10
    2c84:	and	w1, w1, #0x3ff
    2c88:	ldr	x24, [x9]
    2c8c:	ubfx	x5, x2, #12, #4
    2c90:	add	w1, w1, w16
    2c94:	ldrb	w5, [x24, x5]
    2c98:	strb	w5, [x7, #2]
    2c9c:	ubfx	x5, x2, #8, #4
    2ca0:	ldr	x24, [x9]
    2ca4:	ldrb	w5, [x24, x5]
    2ca8:	strb	w5, [x7, #3]
    2cac:	ubfx	x5, x2, #4, #4
    2cb0:	and	x2, x2, #0xf
    2cb4:	ldr	x24, [x9]
    2cb8:	ldrb	w5, [x24, x5]
    2cbc:	strb	w5, [x7, #4]
    2cc0:	ldr	x5, [x9]
    2cc4:	ldrb	w2, [x5, x2]
    2cc8:	strb	w2, [x7, #5]
    2ccc:	add	x2, x3, #0x7
    2cd0:	strb	w10, [x7, #6]
    2cd4:	strb	w13, [x4, x2]
    2cd8:	lsr	w3, w1, #12
    2cdc:	ldr	x5, [x6]
    2ce0:	ldrb	w3, [x5, x3]
    2ce4:	add	x5, x4, x2
    2ce8:	strb	w3, [x5, #1]
    2cec:	ubfx	x3, x1, #8, #4
    2cf0:	ldr	x7, [x6]
    2cf4:	ldrb	w3, [x7, x3]
    2cf8:	ubfx	x7, x1, #4, #4
    2cfc:	strb	w3, [x5, #2]
    2d00:	and	x1, x1, #0xf
    2d04:	add	x3, x2, #0x4
    2d08:	add	x2, x2, #0x5
    2d0c:	ldr	x24, [x6]
    2d10:	ldrb	w7, [x24, x7]
    2d14:	strb	w7, [x5, #3]
    2d18:	ldr	x5, [x6]
    2d1c:	ldrb	w5, [x5, x1]
    2d20:	strb	w5, [x4, x3]
    2d24:	b	2bb8 <PySequence_Fast@plt+0xae8>
    2d28:	ldr	x2, [x0, #24]
    2d2c:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2d30:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    2d34:	add	x1, x1, #0xadb
    2d38:	ldr	x0, [x0, #3976]
    2d3c:	ldr	x0, [x0]
    2d40:	bl	2040 <PyErr_Format@plt>
    2d44:	b	29e0 <PySequence_Fast@plt+0x910>
    2d48:	stp	x29, x30, [sp, #-48]!
    2d4c:	mov	x29, sp
    2d50:	str	x21, [sp, #32]
    2d54:	mov	x21, x0
    2d58:	ldr	x0, [x0, #24]
    2d5c:	stp	x19, x20, [sp, #16]
    2d60:	mov	x19, x1
    2d64:	mov	x20, x2
    2d68:	cbnz	x0, 2da4 <PySequence_Fast@plt+0xcd4>
    2d6c:	ldr	x0, [x21, #32]
    2d70:	cbnz	x0, 2dc0 <PySequence_Fast@plt+0xcf0>
    2d74:	ldr	x0, [x21, #40]
    2d78:	cbnz	x0, 2dd0 <PySequence_Fast@plt+0xd00>
    2d7c:	ldr	x0, [x21, #48]
    2d80:	cbnz	x0, 2de0 <PySequence_Fast@plt+0xd10>
    2d84:	ldr	x0, [x21, #56]
    2d88:	cbz	x0, 2db0 <PySequence_Fast@plt+0xce0>
    2d8c:	mov	x1, x20
    2d90:	mov	x16, x19
    2d94:	ldp	x19, x20, [sp, #16]
    2d98:	ldr	x21, [sp, #32]
    2d9c:	ldp	x29, x30, [sp], #48
    2da0:	br	x16
    2da4:	mov	x1, x2
    2da8:	blr	x19
    2dac:	cbz	w0, 2d6c <PySequence_Fast@plt+0xc9c>
    2db0:	ldp	x19, x20, [sp, #16]
    2db4:	ldr	x21, [sp, #32]
    2db8:	ldp	x29, x30, [sp], #48
    2dbc:	ret
    2dc0:	mov	x1, x20
    2dc4:	blr	x19
    2dc8:	cbz	w0, 2d74 <PySequence_Fast@plt+0xca4>
    2dcc:	b	2db0 <PySequence_Fast@plt+0xce0>
    2dd0:	mov	x1, x20
    2dd4:	blr	x19
    2dd8:	cbz	w0, 2d7c <PySequence_Fast@plt+0xcac>
    2ddc:	b	2db0 <PySequence_Fast@plt+0xce0>
    2de0:	mov	x1, x20
    2de4:	blr	x19
    2de8:	cbz	w0, 2d84 <PySequence_Fast@plt+0xcb4>
    2dec:	b	2db0 <PySequence_Fast@plt+0xce0>
    2df0:	stp	x29, x30, [sp, #-48]!
    2df4:	mov	x29, sp
    2df8:	str	x21, [sp, #32]
    2dfc:	mov	x21, x0
    2e00:	ldr	x0, [x0, #16]
    2e04:	stp	x19, x20, [sp, #16]
    2e08:	mov	x19, x1
    2e0c:	mov	x20, x2
    2e10:	cbnz	x0, 2e54 <PySequence_Fast@plt+0xd84>
    2e14:	ldr	x0, [x21, #24]
    2e18:	cbnz	x0, 2e70 <PySequence_Fast@plt+0xda0>
    2e1c:	ldr	x0, [x21, #32]
    2e20:	cbnz	x0, 2e80 <PySequence_Fast@plt+0xdb0>
    2e24:	ldr	x0, [x21, #40]
    2e28:	cbnz	x0, 2e90 <PySequence_Fast@plt+0xdc0>
    2e2c:	ldr	x0, [x21, #48]
    2e30:	cbnz	x0, 2ea0 <PySequence_Fast@plt+0xdd0>
    2e34:	ldr	x0, [x21, #56]
    2e38:	cbz	x0, 2e60 <PySequence_Fast@plt+0xd90>
    2e3c:	mov	x1, x20
    2e40:	mov	x16, x19
    2e44:	ldp	x19, x20, [sp, #16]
    2e48:	ldr	x21, [sp, #32]
    2e4c:	ldp	x29, x30, [sp], #48
    2e50:	br	x16
    2e54:	mov	x1, x2
    2e58:	blr	x19
    2e5c:	cbz	w0, 2e14 <PySequence_Fast@plt+0xd44>
    2e60:	ldp	x19, x20, [sp, #16]
    2e64:	ldr	x21, [sp, #32]
    2e68:	ldp	x29, x30, [sp], #48
    2e6c:	ret
    2e70:	mov	x1, x20
    2e74:	blr	x19
    2e78:	cbz	w0, 2e1c <PySequence_Fast@plt+0xd4c>
    2e7c:	b	2e60 <PySequence_Fast@plt+0xd90>
    2e80:	mov	x1, x20
    2e84:	blr	x19
    2e88:	cbz	w0, 2e24 <PySequence_Fast@plt+0xd54>
    2e8c:	b	2e60 <PySequence_Fast@plt+0xd90>
    2e90:	mov	x1, x20
    2e94:	blr	x19
    2e98:	cbz	w0, 2e2c <PySequence_Fast@plt+0xd5c>
    2e9c:	b	2e60 <PySequence_Fast@plt+0xd90>
    2ea0:	mov	x1, x20
    2ea4:	blr	x19
    2ea8:	cbz	w0, 2e34 <PySequence_Fast@plt+0xd64>
    2eac:	b	2e60 <PySequence_Fast@plt+0xd90>
    2eb0:	ldr	d0, [x1, #16]
    2eb4:	mov	x2, x0
    2eb8:	mov	x0, x1
    2ebc:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    2ec0:	fmov	d1, x1
    2ec4:	fabs	d2, d0
    2ec8:	fcmp	d2, d1
    2ecc:	b.ls	2f08 <PySequence_Fast@plt+0xe38>  // b.plast
    2ed0:	ldr	w0, [x2]
    2ed4:	cbz	w0, 2f1c <PySequence_Fast@plt+0xe4c>
    2ed8:	fcmpe	d0, #0.0
    2edc:	b.le	2eec <PySequence_Fast@plt+0xe1c>
    2ee0:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    2ee4:	add	x0, x0, #0xb38
    2ee8:	b	1fe0 <PyUnicode_FromString@plt>
    2eec:	b.pl	2efc <PySequence_Fast@plt+0xe2c>  // b.nfrst
    2ef0:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    2ef4:	add	x0, x0, #0xb37
    2ef8:	b	2ee8 <PySequence_Fast@plt+0xe18>
    2efc:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    2f00:	add	x0, x0, #0xb41
    2f04:	b	2ee8 <PySequence_Fast@plt+0xe18>
    2f08:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    2f0c:	ldr	x1, [x1, #3952]
    2f10:	ldr	x1, [x1, #88]
    2f14:	mov	x16, x1
    2f18:	br	x16
    2f1c:	stp	x29, x30, [sp, #-16]!
    2f20:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    2f24:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    2f28:	mov	x29, sp
    2f2c:	ldr	x0, [x0, #3968]
    2f30:	add	x1, x1, #0xb06
    2f34:	ldr	x0, [x0]
    2f38:	bl	1e60 <PyErr_SetString@plt>
    2f3c:	mov	x0, #0x0                   	// #0
    2f40:	ldp	x29, x30, [sp], #16
    2f44:	ret
    2f48:	ldr	x1, [x0]
    2f4c:	sub	x1, x1, #0x1
    2f50:	str	x1, [x0]
    2f54:	cbnz	x1, 2f5c <PySequence_Fast@plt+0xe8c>
    2f58:	b	1e30 <_Py_Dealloc@plt>
    2f5c:	ret
    2f60:	stp	x29, x30, [sp, #-32]!
    2f64:	mov	x29, sp
    2f68:	str	x19, [sp, #16]
    2f6c:	mov	x19, x0
    2f70:	ldr	x0, [x0, #16]
    2f74:	cbz	x0, 2f80 <PySequence_Fast@plt+0xeb0>
    2f78:	str	xzr, [x19, #16]
    2f7c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2f80:	ldr	x0, [x19, #24]
    2f84:	cbz	x0, 2f90 <PySequence_Fast@plt+0xec0>
    2f88:	str	xzr, [x19, #24]
    2f8c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2f90:	ldr	x0, [x19, #32]
    2f94:	cbz	x0, 2fa0 <PySequence_Fast@plt+0xed0>
    2f98:	str	xzr, [x19, #32]
    2f9c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2fa0:	ldr	x0, [x19, #40]
    2fa4:	cbz	x0, 2fb0 <PySequence_Fast@plt+0xee0>
    2fa8:	str	xzr, [x19, #40]
    2fac:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2fb0:	ldr	x0, [x19, #48]
    2fb4:	cbz	x0, 2fc0 <PySequence_Fast@plt+0xef0>
    2fb8:	str	xzr, [x19, #48]
    2fbc:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2fc0:	ldr	x0, [x19, #56]
    2fc4:	cbz	x0, 2fd0 <PySequence_Fast@plt+0xf00>
    2fc8:	str	xzr, [x19, #56]
    2fcc:	bl	2f48 <PySequence_Fast@plt+0xe78>
    2fd0:	mov	w0, #0x0                   	// #0
    2fd4:	ldr	x19, [sp, #16]
    2fd8:	ldp	x29, x30, [sp], #32
    2fdc:	ret
    2fe0:	stp	x29, x30, [sp, #-32]!
    2fe4:	mov	x29, sp
    2fe8:	str	x19, [sp, #16]
    2fec:	mov	x19, x0
    2ff0:	bl	20a0 <PyObject_GC_UnTrack@plt>
    2ff4:	mov	x0, x19
    2ff8:	bl	2f60 <PySequence_Fast@plt+0xe90>
    2ffc:	ldr	x0, [x19, #8]
    3000:	ldr	x1, [x0, #320]
    3004:	mov	x0, x19
    3008:	ldr	x19, [sp, #16]
    300c:	mov	x16, x1
    3010:	ldp	x29, x30, [sp], #32
    3014:	br	x16
    3018:	cbz	x0, 3020 <PySequence_Fast@plt+0xf50>
    301c:	b	2f48 <PySequence_Fast@plt+0xe78>
    3020:	ret
    3024:	stp	x29, x30, [sp, #-48]!
    3028:	adrp	x3, 17000 <PyInit__json@@Base+0x11668>
    302c:	add	x3, x3, #0x1b0
    3030:	mov	x29, sp
    3034:	add	x4, sp, #0x28
    3038:	add	x3, x3, #0x50
    303c:	stp	x19, x20, [sp, #16]
    3040:	mov	x19, x0
    3044:	mov	x0, x1
    3048:	mov	x1, x2
    304c:	adrp	x2, 5000 <PySequence_Fast@plt+0x2f30>
    3050:	add	x2, x2, #0xb45
    3054:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    3058:	cbnz	w0, 3070 <PySequence_Fast@plt+0xfa0>
    305c:	mov	x19, #0x0                   	// #0
    3060:	mov	x0, x19
    3064:	ldp	x19, x20, [sp, #16]
    3068:	ldp	x29, x30, [sp], #48
    306c:	ret
    3070:	ldr	x2, [x19, #304]
    3074:	mov	x0, x19
    3078:	mov	x1, #0x0                   	// #0
    307c:	blr	x2
    3080:	mov	x19, x0
    3084:	cbz	x0, 305c <PySequence_Fast@plt+0xf8c>
    3088:	bl	1fd0 <PyDict_New@plt>
    308c:	str	x0, [x19, #64]
    3090:	cbnz	x0, 30a0 <PySequence_Fast@plt+0xfd0>
    3094:	mov	x0, x19
    3098:	bl	2f48 <PySequence_Fast@plt+0xe78>
    309c:	b	305c <PySequence_Fast@plt+0xf8c>
    30a0:	ldr	x0, [sp, #40]
    30a4:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    30a8:	add	x1, x1, #0xb54
    30ac:	bl	1dd0 <PyObject_GetAttrString@plt>
    30b0:	mov	x20, x0
    30b4:	cbz	x0, 3094 <PySequence_Fast@plt+0xfc4>
    30b8:	bl	1f90 <PyObject_IsTrue@plt>
    30bc:	strb	w0, [x19, #16]
    30c0:	mov	x0, x20
    30c4:	bl	2f48 <PySequence_Fast@plt+0xe78>
    30c8:	ldrsb	w0, [x19, #16]
    30cc:	tbnz	w0, #31, 3094 <PySequence_Fast@plt+0xfc4>
    30d0:	ldr	x0, [sp, #40]
    30d4:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    30d8:	add	x1, x1, #0xb5b
    30dc:	bl	1dd0 <PyObject_GetAttrString@plt>
    30e0:	str	x0, [x19, #24]
    30e4:	cbz	x0, 3094 <PySequence_Fast@plt+0xfc4>
    30e8:	ldr	x0, [sp, #40]
    30ec:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    30f0:	add	x1, x1, #0xb67
    30f4:	bl	1dd0 <PyObject_GetAttrString@plt>
    30f8:	str	x0, [x19, #32]
    30fc:	cbz	x0, 3094 <PySequence_Fast@plt+0xfc4>
    3100:	ldr	x0, [sp, #40]
    3104:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3108:	add	x1, x1, #0xb79
    310c:	bl	1dd0 <PyObject_GetAttrString@plt>
    3110:	str	x0, [x19, #40]
    3114:	cbz	x0, 3094 <PySequence_Fast@plt+0xfc4>
    3118:	ldr	x0, [sp, #40]
    311c:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3120:	add	x1, x1, #0xb85
    3124:	bl	1dd0 <PyObject_GetAttrString@plt>
    3128:	str	x0, [x19, #48]
    312c:	cbz	x0, 3094 <PySequence_Fast@plt+0xfc4>
    3130:	ldr	x0, [sp, #40]
    3134:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3138:	add	x1, x1, #0xb8f
    313c:	bl	1dd0 <PyObject_GetAttrString@plt>
    3140:	str	x0, [x19, #56]
    3144:	cbnz	x0, 3060 <PySequence_Fast@plt+0xf90>
    3148:	b	3094 <PySequence_Fast@plt+0xfc4>
    314c:	stp	x29, x30, [sp, #-32]!
    3150:	mov	x29, sp
    3154:	str	x19, [sp, #16]
    3158:	mov	x19, x0
    315c:	ldr	x0, [x0, #24]
    3160:	cbz	x0, 316c <PySequence_Fast@plt+0x109c>
    3164:	str	xzr, [x19, #24]
    3168:	bl	2f48 <PySequence_Fast@plt+0xe78>
    316c:	ldr	x0, [x19, #32]
    3170:	cbz	x0, 317c <PySequence_Fast@plt+0x10ac>
    3174:	str	xzr, [x19, #32]
    3178:	bl	2f48 <PySequence_Fast@plt+0xe78>
    317c:	ldr	x0, [x19, #40]
    3180:	cbz	x0, 318c <PySequence_Fast@plt+0x10bc>
    3184:	str	xzr, [x19, #40]
    3188:	bl	2f48 <PySequence_Fast@plt+0xe78>
    318c:	ldr	x0, [x19, #48]
    3190:	cbz	x0, 319c <PySequence_Fast@plt+0x10cc>
    3194:	str	xzr, [x19, #48]
    3198:	bl	2f48 <PySequence_Fast@plt+0xe78>
    319c:	ldr	x0, [x19, #56]
    31a0:	cbz	x0, 31ac <PySequence_Fast@plt+0x10dc>
    31a4:	str	xzr, [x19, #56]
    31a8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    31ac:	ldr	x0, [x19, #64]
    31b0:	cbz	x0, 31bc <PySequence_Fast@plt+0x10ec>
    31b4:	str	xzr, [x19, #64]
    31b8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    31bc:	mov	w0, #0x0                   	// #0
    31c0:	ldr	x19, [sp, #16]
    31c4:	ldp	x29, x30, [sp], #32
    31c8:	ret
    31cc:	stp	x29, x30, [sp, #-32]!
    31d0:	mov	x29, sp
    31d4:	str	x19, [sp, #16]
    31d8:	mov	x19, x0
    31dc:	bl	20a0 <PyObject_GC_UnTrack@plt>
    31e0:	mov	x0, x19
    31e4:	bl	314c <PySequence_Fast@plt+0x107c>
    31e8:	ldr	x0, [x19, #8]
    31ec:	ldr	x1, [x0, #320]
    31f0:	mov	x0, x19
    31f4:	ldr	x19, [sp, #16]
    31f8:	mov	x16, x1
    31fc:	ldp	x29, x30, [sp], #32
    3200:	br	x16
    3204:	stp	x29, x30, [sp, #-32]!
    3208:	mov	x29, sp
    320c:	str	x19, [sp, #16]
    3210:	bl	1e80 <PyLong_FromSsize_t@plt>
    3214:	cbz	x0, 3240 <PySequence_Fast@plt+0x1170>
    3218:	mov	x19, x0
    321c:	mov	x1, x0
    3220:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3224:	ldr	x0, [x0, #4040]
    3228:	ldr	x0, [x0]
    322c:	bl	1e40 <PyErr_SetObject@plt>
    3230:	mov	x0, x19
    3234:	ldr	x19, [sp, #16]
    3238:	ldp	x29, x30, [sp], #32
    323c:	b	2f48 <PySequence_Fast@plt+0xe78>
    3240:	ldr	x19, [sp, #16]
    3244:	ldp	x29, x30, [sp], #32
    3248:	ret
    324c:	stp	x29, x30, [sp, #-64]!
    3250:	mov	x29, sp
    3254:	stp	x19, x20, [sp, #16]
    3258:	adrp	x19, 17000 <PyInit__json@@Base+0x11668>
    325c:	stp	x21, x22, [sp, #32]
    3260:	mov	x21, x0
    3264:	mov	x22, x1
    3268:	ldr	x0, [x19, #2288]
    326c:	str	x23, [sp, #48]
    3270:	mov	x23, x2
    3274:	cbz	x0, 32b0 <PySequence_Fast@plt+0x11e0>
    3278:	ldr	x0, [x19, #2288]
    327c:	mov	x4, x23
    3280:	mov	x3, x22
    3284:	mov	x2, x21
    3288:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    328c:	add	x1, x1, #0xb9e
    3290:	bl	1f00 <PyObject_CallFunction@plt>
    3294:	mov	x20, x0
    3298:	cbnz	x0, 32e8 <PySequence_Fast@plt+0x1218>
    329c:	ldp	x19, x20, [sp, #16]
    32a0:	ldp	x21, x22, [sp, #32]
    32a4:	ldr	x23, [sp, #48]
    32a8:	ldp	x29, x30, [sp], #64
    32ac:	ret
    32b0:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    32b4:	add	x0, x0, #0xba2
    32b8:	bl	1f60 <PyImport_ImportModule@plt>
    32bc:	mov	x20, x0
    32c0:	cbz	x0, 329c <PySequence_Fast@plt+0x11cc>
    32c4:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    32c8:	add	x1, x1, #0xbaf
    32cc:	bl	1dd0 <PyObject_GetAttrString@plt>
    32d0:	str	x0, [x19, #2288]
    32d4:	mov	x0, x20
    32d8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    32dc:	ldr	x0, [x19, #2288]
    32e0:	cbnz	x0, 3278 <PySequence_Fast@plt+0x11a8>
    32e4:	b	329c <PySequence_Fast@plt+0x11cc>
    32e8:	mov	x1, x0
    32ec:	ldr	x0, [x19, #2288]
    32f0:	bl	1e40 <PyErr_SetObject@plt>
    32f4:	mov	x0, x20
    32f8:	ldp	x19, x20, [sp, #16]
    32fc:	ldp	x21, x22, [sp, #32]
    3300:	ldr	x23, [sp, #48]
    3304:	ldp	x29, x30, [sp], #64
    3308:	b	2f48 <PySequence_Fast@plt+0xe78>
    330c:	stp	x29, x30, [sp, #-144]!
    3310:	mov	x29, sp
    3314:	stp	x21, x22, [sp, #32]
    3318:	mov	x21, x1
    331c:	stp	x25, x26, [sp, #64]
    3320:	sub	x25, x1, #0x1
    3324:	ldrsb	w1, [x0, #32]
    3328:	stp	x19, x20, [sp, #16]
    332c:	stp	x23, x24, [sp, #48]
    3330:	mov	x24, x0
    3334:	stp	x27, x28, [sp, #80]
    3338:	str	x3, [sp, #96]
    333c:	str	w2, [sp, #108]
    3340:	tbz	w1, #31, 3358 <PySequence_Fast@plt+0x1288>
    3344:	ldrb	w1, [x24, #32]
    3348:	ldr	x23, [x24, #16]
    334c:	tbnz	w1, #5, 336c <PySequence_Fast@plt+0x129c>
    3350:	ldr	x27, [x24, #72]
    3354:	b	337c <PySequence_Fast@plt+0x12ac>
    3358:	bl	1db0 <_PyUnicode_Ready@plt>
    335c:	cmn	w0, #0x1
    3360:	b.ne	3344 <PySequence_Fast@plt+0x1274>  // b.any
    3364:	mov	x28, #0x0                   	// #0
    3368:	b	3520 <PySequence_Fast@plt+0x1450>
    336c:	add	x0, x24, #0x30
    3370:	add	x4, x24, #0x48
    3374:	tst	x1, #0x40
    3378:	csel	x27, x4, x0, eq  // eq = none
    337c:	ldrb	w20, [x24, #32]
    3380:	cmp	x21, #0x0
    3384:	ccmp	x21, x23, #0x0, ge  // ge = tcont
    3388:	ubfx	x20, x20, #2, #3
    338c:	b.le	33d0 <PySequence_Fast@plt+0x1300>
    3390:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3394:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3398:	mov	x28, #0x0                   	// #0
    339c:	add	x1, x1, #0xbbf
    33a0:	ldr	x0, [x0, #3968]
    33a4:	mov	x19, #0x0                   	// #0
    33a8:	ldr	x0, [x0]
    33ac:	bl	1e60 <PyErr_SetString@plt>
    33b0:	ldr	x1, [sp, #96]
    33b4:	mov	x0, #0xffffffffffffffff    	// #-1
    33b8:	str	x0, [x1]
    33bc:	mov	x0, x19
    33c0:	bl	3018 <PySequence_Fast@plt+0xf48>
    33c4:	mov	x0, x28
    33c8:	bl	3018 <PySequence_Fast@plt+0xf48>
    33cc:	b	3364 <PySequence_Fast@plt+0x1294>
    33d0:	and	x0, x20, #0xff
    33d4:	mov	x28, #0x0                   	// #0
    33d8:	mov	x19, #0x0                   	// #0
    33dc:	str	x0, [sp, #112]
    33e0:	add	x0, sp, #0x8c
    33e4:	str	x0, [sp, #120]
    33e8:	mov	x26, x21
    33ec:	str	wzr, [sp, #140]
    33f0:	cmp	x26, x23
    33f4:	b.ge	3418 <PySequence_Fast@plt+0x1348>  // b.tcont
    33f8:	cmp	w20, #0x1
    33fc:	b.ne	3440 <PySequence_Fast@plt+0x1370>  // b.any
    3400:	ldrb	w0, [x27, x26]
    3404:	str	w0, [sp, #140]
    3408:	cmp	w0, #0x22
    340c:	mov	w1, #0x5c                  	// #92
    3410:	ccmp	w0, w1, #0x4, ne  // ne = any
    3414:	b.ne	3458 <PySequence_Fast@plt+0x1388>  // b.any
    3418:	ldr	w0, [sp, #140]
    341c:	mov	w1, #0x5c                  	// #92
    3420:	cmp	w0, #0x22
    3424:	ccmp	w0, w1, #0x4, ne  // ne = any
    3428:	b.eq	3488 <PySequence_Fast@plt+0x13b8>  // b.none
    342c:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    3430:	mov	x2, x25
    3434:	mov	x1, x24
    3438:	add	x0, x0, #0xbf1
    343c:	b	3478 <PySequence_Fast@plt+0x13a8>
    3440:	cmp	w20, #0x2
    3444:	b.ne	3450 <PySequence_Fast@plt+0x1380>  // b.any
    3448:	ldrh	w0, [x27, x26, lsl #1]
    344c:	b	3404 <PySequence_Fast@plt+0x1334>
    3450:	ldr	w0, [x27, x26, lsl #2]
    3454:	b	3404 <PySequence_Fast@plt+0x1334>
    3458:	ldr	w1, [sp, #108]
    345c:	cmp	w1, #0x0
    3460:	ccmp	w0, #0x1f, #0x2, ne  // ne = any
    3464:	b.hi	3480 <PySequence_Fast@plt+0x13b0>  // b.pmore
    3468:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    346c:	mov	x2, x26
    3470:	mov	x1, x24
    3474:	add	x0, x0, #0xbd4
    3478:	bl	324c <PySequence_Fast@plt+0x117c>
    347c:	b	33b0 <PySequence_Fast@plt+0x12e0>
    3480:	add	x26, x26, #0x1
    3484:	b	33f0 <PySequence_Fast@plt+0x1320>
    3488:	cmp	x21, x26
    348c:	b.eq	34ec <PySequence_Fast@plt+0x141c>  // b.none
    3490:	cbz	x28, 34d0 <PySequence_Fast@plt+0x1400>
    3494:	cbnz	x19, 34a8 <PySequence_Fast@plt+0x13d8>
    3498:	mov	x0, #0x0                   	// #0
    349c:	bl	1da0 <PyList_New@plt>
    34a0:	mov	x19, x0
    34a4:	cbz	x0, 33b0 <PySequence_Fast@plt+0x12e0>
    34a8:	mov	x1, x28
    34ac:	mov	x0, x19
    34b0:	bl	1eb0 <PyList_Append@plt>
    34b4:	cbz	w0, 34c8 <PySequence_Fast@plt+0x13f8>
    34b8:	mov	x0, x28
    34bc:	mov	x28, #0x0                   	// #0
    34c0:	bl	2f48 <PySequence_Fast@plt+0xe78>
    34c4:	b	33b0 <PySequence_Fast@plt+0x12e0>
    34c8:	mov	x0, x28
    34cc:	bl	2f48 <PySequence_Fast@plt+0xe78>
    34d0:	ldr	x0, [sp, #112]
    34d4:	sub	x2, x26, x21
    34d8:	madd	x1, x0, x21, x27
    34dc:	mov	w0, w20
    34e0:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    34e4:	mov	x28, x0
    34e8:	cbz	x0, 33b0 <PySequence_Fast@plt+0x12e0>
    34ec:	ldr	w0, [sp, #140]
    34f0:	add	x22, x26, #0x1
    34f4:	cmp	w0, #0x22
    34f8:	b.ne	3540 <PySequence_Fast@plt+0x1470>  // b.any
    34fc:	cbnz	x19, 3848 <PySequence_Fast@plt+0x1778>
    3500:	cbnz	x28, 3518 <PySequence_Fast@plt+0x1448>
    3504:	mov	x1, #0x0                   	// #0
    3508:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    350c:	add	x0, x0, #0xb44
    3510:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    3514:	mov	x28, x0
    3518:	ldr	x0, [sp, #96]
    351c:	str	x22, [x0]
    3520:	mov	x0, x28
    3524:	ldp	x19, x20, [sp, #16]
    3528:	ldp	x21, x22, [sp, #32]
    352c:	ldp	x23, x24, [sp, #48]
    3530:	ldp	x25, x26, [sp, #64]
    3534:	ldp	x27, x28, [sp, #80]
    3538:	ldp	x29, x30, [sp], #144
    353c:	ret
    3540:	cmp	x23, x22
    3544:	b.eq	342c <PySequence_Fast@plt+0x135c>  // b.none
    3548:	cmp	w20, #0x1
    354c:	b.ne	359c <PySequence_Fast@plt+0x14cc>  // b.any
    3550:	ldrb	w0, [x27, x22]
    3554:	add	x2, x26, #0x2
    3558:	cmp	w0, #0x75
    355c:	b.eq	3610 <PySequence_Fast@plt+0x1540>  // b.none
    3560:	cmp	w0, #0x6e
    3564:	b.eq	3600 <PySequence_Fast@plt+0x1530>  // b.none
    3568:	b.hi	35c4 <PySequence_Fast@plt+0x14f4>  // b.pmore
    356c:	cmp	w0, #0x62
    3570:	b.eq	35dc <PySequence_Fast@plt+0x150c>  // b.none
    3574:	b.hi	35b4 <PySequence_Fast@plt+0x14e4>  // b.pmore
    3578:	sub	w1, w0, #0x22
    357c:	cmp	w1, #0x3a
    3580:	b.hi	3594 <PySequence_Fast@plt+0x14c4>  // b.pmore
    3584:	mov	x3, #0x2001                	// #8193
    3588:	movk	x3, #0x400, lsl #48
    358c:	lsr	x1, x3, x1
    3590:	tbnz	w1, #0, 35e0 <PySequence_Fast@plt+0x1510>
    3594:	str	wzr, [sp, #140]
    3598:	b	35e4 <PySequence_Fast@plt+0x1514>
    359c:	cmp	w20, #0x2
    35a0:	b.ne	35ac <PySequence_Fast@plt+0x14dc>  // b.any
    35a4:	ldrh	w0, [x27, x22, lsl #1]
    35a8:	b	3554 <PySequence_Fast@plt+0x1484>
    35ac:	ldr	w0, [x27, x22, lsl #2]
    35b0:	b	3554 <PySequence_Fast@plt+0x1484>
    35b4:	cmp	w0, #0x66
    35b8:	b.ne	3594 <PySequence_Fast@plt+0x14c4>  // b.any
    35bc:	mov	w0, #0xc                   	// #12
    35c0:	b	35e0 <PySequence_Fast@plt+0x1510>
    35c4:	cmp	w0, #0x72
    35c8:	b.eq	3608 <PySequence_Fast@plt+0x1538>  // b.none
    35cc:	cmp	w0, #0x74
    35d0:	b.ne	3594 <PySequence_Fast@plt+0x14c4>  // b.any
    35d4:	mov	w0, #0x9                   	// #9
    35d8:	b	35e0 <PySequence_Fast@plt+0x1510>
    35dc:	mov	w0, #0x8                   	// #8
    35e0:	str	w0, [sp, #140]
    35e4:	ldr	w0, [sp, #140]
    35e8:	cbnz	w0, 3840 <PySequence_Fast@plt+0x1770>
    35ec:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    35f0:	mov	x2, x26
    35f4:	mov	x1, x24
    35f8:	add	x0, x0, #0xc11
    35fc:	b	3478 <PySequence_Fast@plt+0x13a8>
    3600:	mov	w0, #0xa                   	// #10
    3604:	b	35e0 <PySequence_Fast@plt+0x1510>
    3608:	mov	w0, #0xd                   	// #13
    360c:	b	35e0 <PySequence_Fast@plt+0x1510>
    3610:	str	wzr, [sp, #140]
    3614:	add	x21, x26, #0x6
    3618:	cmp	x23, x21
    361c:	b.gt	3670 <PySequence_Fast@plt+0x15a0>
    3620:	mov	x2, x22
    3624:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    3628:	mov	x1, x24
    362c:	add	x0, x0, #0xc21
    3630:	b	3478 <PySequence_Fast@plt+0x13a8>
    3634:	cmp	w20, #0x1
    3638:	b.ne	36fc <PySequence_Fast@plt+0x162c>  // b.any
    363c:	ldrb	w1, [x27, x2]
    3640:	lsl	w7, w10, #4
    3644:	str	w7, [sp, #140]
    3648:	cmp	w1, #0x46
    364c:	b.hi	3714 <PySequence_Fast@plt+0x1644>  // b.pmore
    3650:	cmp	w1, #0x40
    3654:	b.hi	3728 <PySequence_Fast@plt+0x1658>  // b.pmore
    3658:	sub	w1, w1, #0x30
    365c:	cmp	w1, #0x9
    3660:	b.hi	3620 <PySequence_Fast@plt+0x1550>  // b.pmore
    3664:	add	x2, x2, #0x1
    3668:	orr	w1, w1, w7
    366c:	str	w1, [sp, #140]
    3670:	ldr	w10, [sp, #140]
    3674:	cmp	x2, x21
    3678:	b.lt	3634 <PySequence_Fast@plt+0x1564>  // b.tstop
    367c:	mov	w1, #0xffff2800            	// #-55296
    3680:	add	w0, w10, w1
    3684:	cmp	w0, #0x3ff
    3688:	b.hi	36b0 <PySequence_Fast@plt+0x15e0>  // b.pmore
    368c:	add	x11, x26, #0xc
    3690:	cmp	x11, x23
    3694:	b.ge	36b0 <PySequence_Fast@plt+0x15e0>  // b.tcont
    3698:	add	x0, x2, #0x1
    369c:	cmp	w20, #0x1
    36a0:	b.ne	3730 <PySequence_Fast@plt+0x1660>  // b.any
    36a4:	ldrb	w1, [x27, x2]
    36a8:	cmp	w1, #0x5c
    36ac:	b.eq	3778 <PySequence_Fast@plt+0x16a8>  // b.none
    36b0:	cbz	x28, 36e0 <PySequence_Fast@plt+0x1610>
    36b4:	cbnz	x19, 36c8 <PySequence_Fast@plt+0x15f8>
    36b8:	mov	x0, #0x0                   	// #0
    36bc:	bl	1da0 <PyList_New@plt>
    36c0:	mov	x19, x0
    36c4:	cbz	x0, 33b0 <PySequence_Fast@plt+0x12e0>
    36c8:	mov	x1, x28
    36cc:	mov	x0, x19
    36d0:	bl	1eb0 <PyList_Append@plt>
    36d4:	cbnz	w0, 34b8 <PySequence_Fast@plt+0x13e8>
    36d8:	mov	x0, x28
    36dc:	bl	2f48 <PySequence_Fast@plt+0xe78>
    36e0:	ldr	x1, [sp, #120]
    36e4:	mov	x2, #0x1                   	// #1
    36e8:	mov	w0, #0x4                   	// #4
    36ec:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    36f0:	mov	x28, x0
    36f4:	cbnz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    36f8:	b	33b0 <PySequence_Fast@plt+0x12e0>
    36fc:	cmp	w20, #0x2
    3700:	b.ne	370c <PySequence_Fast@plt+0x163c>  // b.any
    3704:	ldrh	w1, [x27, x2, lsl #1]
    3708:	b	3640 <PySequence_Fast@plt+0x1570>
    370c:	ldr	w1, [x27, x2, lsl #2]
    3710:	b	3640 <PySequence_Fast@plt+0x1570>
    3714:	sub	w0, w1, #0x61
    3718:	cmp	w0, #0x5
    371c:	b.hi	3620 <PySequence_Fast@plt+0x1550>  // b.pmore
    3720:	sub	w1, w1, #0x57
    3724:	b	3664 <PySequence_Fast@plt+0x1594>
    3728:	sub	w1, w1, #0x37
    372c:	b	3664 <PySequence_Fast@plt+0x1594>
    3730:	cmp	w20, #0x2
    3734:	b.ne	3758 <PySequence_Fast@plt+0x1688>  // b.any
    3738:	ldrh	w1, [x27, x2, lsl #1]
    373c:	lsl	x0, x2, #1
    3740:	cmp	w1, #0x5c
    3744:	b.ne	36b0 <PySequence_Fast@plt+0x15e0>  // b.any
    3748:	add	x0, x27, x0
    374c:	add	x2, x2, #0x2
    3750:	ldrh	w0, [x0, #2]
    3754:	b	3780 <PySequence_Fast@plt+0x16b0>
    3758:	lsl	x9, x2, #2
    375c:	ldr	w0, [x27, x9]
    3760:	cmp	w0, #0x5c
    3764:	b.ne	36b0 <PySequence_Fast@plt+0x15e0>  // b.any
    3768:	add	x9, x27, x9
    376c:	add	x2, x2, #0x2
    3770:	ldr	w0, [x9, #4]
    3774:	b	3780 <PySequence_Fast@plt+0x16b0>
    3778:	ldrb	w0, [x27, x0]
    377c:	add	x2, x2, #0x2
    3780:	cmp	w0, #0x75
    3784:	cset	w0, eq  // eq = none
    3788:	cbz	w0, 36b0 <PySequence_Fast@plt+0x15e0>
    378c:	mov	w7, #0x0                   	// #0
    3790:	b	3800 <PySequence_Fast@plt+0x1730>
    3794:	cmp	w20, #0x1
    3798:	b.ne	37c8 <PySequence_Fast@plt+0x16f8>  // b.any
    379c:	ldrb	w0, [x27, x2]
    37a0:	lsl	w9, w7, #4
    37a4:	cmp	w0, #0x46
    37a8:	b.hi	37e0 <PySequence_Fast@plt+0x1710>  // b.pmore
    37ac:	cmp	w0, #0x40
    37b0:	b.hi	3834 <PySequence_Fast@plt+0x1764>  // b.pmore
    37b4:	sub	w0, w0, #0x30
    37b8:	cmp	w0, #0x9
    37bc:	b.ls	37f8 <PySequence_Fast@plt+0x1728>  // b.plast
    37c0:	add	x2, x26, #0x7
    37c4:	b	3624 <PySequence_Fast@plt+0x1554>
    37c8:	cmp	w20, #0x2
    37cc:	b.ne	37d8 <PySequence_Fast@plt+0x1708>  // b.any
    37d0:	ldrh	w0, [x27, x2, lsl #1]
    37d4:	b	37a0 <PySequence_Fast@plt+0x16d0>
    37d8:	ldr	w0, [x27, x2, lsl #2]
    37dc:	b	37a0 <PySequence_Fast@plt+0x16d0>
    37e0:	sub	w1, w0, #0x61
    37e4:	cmp	w1, #0x5
    37e8:	b.hi	37c0 <PySequence_Fast@plt+0x16f0>  // b.pmore
    37ec:	sub	w8, w0, #0x57
    37f0:	orr	w7, w8, w9
    37f4:	b	37fc <PySequence_Fast@plt+0x172c>
    37f8:	orr	w7, w0, w9
    37fc:	add	x2, x2, #0x1
    3800:	cmp	x11, x2
    3804:	b.gt	3794 <PySequence_Fast@plt+0x16c4>
    3808:	mov	w0, #0xffff2400            	// #-56320
    380c:	add	w0, w7, w0
    3810:	cmp	w0, #0x3ff
    3814:	b.hi	36b0 <PySequence_Fast@plt+0x15e0>  // b.pmore
    3818:	ubfiz	w1, w10, #10, #10
    381c:	and	w0, w7, #0x3ff
    3820:	orr	w7, w1, w0
    3824:	mov	x21, x11
    3828:	add	w7, w7, #0x10, lsl #12
    382c:	str	w7, [sp, #140]
    3830:	b	36b0 <PySequence_Fast@plt+0x15e0>
    3834:	sub	w7, w0, #0x37
    3838:	orr	w7, w7, w9
    383c:	b	37fc <PySequence_Fast@plt+0x172c>
    3840:	mov	x21, x2
    3844:	b	36b0 <PySequence_Fast@plt+0x15e0>
    3848:	cbz	x28, 3864 <PySequence_Fast@plt+0x1794>
    384c:	mov	x1, x28
    3850:	mov	x0, x19
    3854:	bl	1eb0 <PyList_Append@plt>
    3858:	cbnz	w0, 34b8 <PySequence_Fast@plt+0x13e8>
    385c:	mov	x0, x28
    3860:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3864:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    3868:	add	x21, x0, #0x8f0
    386c:	mov	x20, x0
    3870:	ldr	x1, [x21, #8]
    3874:	cbz	x1, 389c <PySequence_Fast@plt+0x17cc>
    3878:	add	x0, x20, #0x8f0
    387c:	mov	x1, x19
    3880:	ldr	x0, [x0, #8]
    3884:	bl	1e00 <PyUnicode_Join@plt>
    3888:	mov	x28, x0
    388c:	cbz	x0, 33b0 <PySequence_Fast@plt+0x12e0>
    3890:	mov	x0, x19
    3894:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3898:	b	3518 <PySequence_Fast@plt+0x1448>
    389c:	mov	x1, #0x0                   	// #0
    38a0:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    38a4:	add	x0, x0, #0xb44
    38a8:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    38ac:	str	x0, [x21, #8]
    38b0:	mov	x28, x0
    38b4:	cbnz	x0, 3878 <PySequence_Fast@plt+0x17a8>
    38b8:	b	33b0 <PySequence_Fast@plt+0x12e0>
    38bc:	stp	x29, x30, [sp, #-48]!
    38c0:	mov	x29, sp
    38c4:	stp	x19, x20, [sp, #16]
    38c8:	mov	x20, x0
    38cc:	str	x21, [sp, #32]
    38d0:	cbz	x0, 38ec <PySequence_Fast@plt+0x181c>
    38d4:	mov	x0, x1
    38d8:	bl	1e80 <PyLong_FromSsize_t@plt>
    38dc:	mov	x21, x0
    38e0:	cbnz	x0, 38f4 <PySequence_Fast@plt+0x1824>
    38e4:	mov	x0, x20
    38e8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    38ec:	mov	x19, #0x0                   	// #0
    38f0:	b	3914 <PySequence_Fast@plt+0x1844>
    38f4:	mov	x0, #0x2                   	// #2
    38f8:	bl	1f10 <PyTuple_New@plt>
    38fc:	mov	x19, x0
    3900:	cbnz	x0, 3928 <PySequence_Fast@plt+0x1858>
    3904:	mov	x0, x21
    3908:	bl	2f48 <PySequence_Fast@plt+0xe78>
    390c:	mov	x0, x20
    3910:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3914:	mov	x0, x19
    3918:	ldp	x19, x20, [sp, #16]
    391c:	ldr	x21, [sp, #32]
    3920:	ldp	x29, x30, [sp], #48
    3924:	ret
    3928:	stp	x20, x21, [x0, #24]
    392c:	b	3914 <PySequence_Fast@plt+0x1844>
    3930:	stp	x29, x30, [sp, #-48]!
    3934:	mov	x0, x1
    3938:	mov	x1, #0xffffffffffffffff    	// #-1
    393c:	mov	x29, sp
    3940:	str	x1, [sp, #40]
    3944:	mov	w1, #0x1                   	// #1
    3948:	add	x4, sp, #0x14
    394c:	add	x3, sp, #0x20
    3950:	add	x2, sp, #0x18
    3954:	str	w1, [sp, #20]
    3958:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    395c:	add	x1, x1, #0xc37
    3960:	bl	1fa0 <PyArg_ParseTuple@plt>
    3964:	cbz	w0, 39b4 <PySequence_Fast@plt+0x18e4>
    3968:	ldr	x0, [sp, #24]
    396c:	ldr	x1, [x0, #8]
    3970:	ldr	x2, [x1, #168]
    3974:	tbz	w2, #28, 3998 <PySequence_Fast@plt+0x18c8>
    3978:	ldr	w2, [sp, #20]
    397c:	add	x3, sp, #0x28
    3980:	ldr	x1, [sp, #32]
    3984:	bl	330c <PySequence_Fast@plt+0x123c>
    3988:	ldr	x1, [sp, #40]
    398c:	bl	38bc <PySequence_Fast@plt+0x17ec>
    3990:	ldp	x29, x30, [sp], #48
    3994:	ret
    3998:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    399c:	ldr	x2, [x1, #24]
    39a0:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    39a4:	ldr	x0, [x0, #3976]
    39a8:	add	x1, x1, #0xadb
    39ac:	ldr	x0, [x0]
    39b0:	bl	2040 <PyErr_Format@plt>
    39b4:	mov	x0, #0x0                   	// #0
    39b8:	b	3990 <PySequence_Fast@plt+0x18c0>
    39bc:	ldr	x2, [x0, #72]
    39c0:	cbz	x2, 39d0 <PySequence_Fast@plt+0x1900>
    39c4:	mov	x16, x2
    39c8:	mov	x0, #0x0                   	// #0
    39cc:	br	x16
    39d0:	stp	x29, x30, [sp, #-32]!
    39d4:	mov	x2, #0x0                   	// #0
    39d8:	mov	x29, sp
    39dc:	ldr	x0, [x0, #32]
    39e0:	str	x19, [sp, #16]
    39e4:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    39e8:	mov	x19, x0
    39ec:	cbz	x0, 3a24 <PySequence_Fast@plt+0x1954>
    39f0:	ldr	x0, [x0, #8]
    39f4:	ldr	x1, [x0, #168]
    39f8:	tbnz	w1, #28, 3a24 <PySequence_Fast@plt+0x1954>
    39fc:	ldr	x2, [x0, #24]
    3a00:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3a04:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3a08:	add	x1, x1, #0xc47
    3a0c:	ldr	x0, [x0, #3976]
    3a10:	ldr	x0, [x0]
    3a14:	bl	2040 <PyErr_Format@plt>
    3a18:	mov	x0, x19
    3a1c:	mov	x19, #0x0                   	// #0
    3a20:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3a24:	mov	x0, x19
    3a28:	ldr	x19, [sp, #16]
    3a2c:	ldp	x29, x30, [sp], #32
    3a30:	ret
    3a34:	stp	x29, x30, [sp, #-48]!
    3a38:	mov	x29, sp
    3a3c:	stp	x19, x20, [sp, #16]
    3a40:	mov	x20, x2
    3a44:	stp	x21, x22, [sp, #32]
    3a48:	mov	x21, x0
    3a4c:	mov	x22, x3
    3a50:	mov	x0, x1
    3a54:	bl	2000 <PyUnicode_InternFromString@plt>
    3a58:	mov	x19, x0
    3a5c:	cbz	x0, 3a8c <PySequence_Fast@plt+0x19bc>
    3a60:	mov	x1, x0
    3a64:	mov	x2, #0x0                   	// #0
    3a68:	ldr	x0, [x21]
    3a6c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    3a70:	mov	x21, x0
    3a74:	ldr	x2, [x19, #16]
    3a78:	mov	x0, x19
    3a7c:	mov	x19, x21
    3a80:	add	x20, x20, x2
    3a84:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3a88:	str	x20, [x22]
    3a8c:	mov	x0, x19
    3a90:	ldp	x19, x20, [sp, #16]
    3a94:	ldp	x21, x22, [sp, #32]
    3a98:	ldp	x29, x30, [sp], #48
    3a9c:	ret
    3aa0:	stp	x29, x30, [sp, #-160]!
    3aa4:	mov	x29, sp
    3aa8:	stp	x21, x22, [sp, #32]
    3aac:	mov	x21, x0
    3ab0:	ldrsb	w0, [x1, #32]
    3ab4:	stp	x19, x20, [sp, #16]
    3ab8:	mov	x22, x3
    3abc:	mov	x19, x2
    3ac0:	stp	x23, x24, [sp, #48]
    3ac4:	stp	x25, x26, [sp, #64]
    3ac8:	mov	x26, x1
    3acc:	stp	x27, x28, [sp, #80]
    3ad0:	tbz	w0, #31, 3ae4 <PySequence_Fast@plt+0x1a14>
    3ad4:	ldrb	w3, [x26, #32]
    3ad8:	tbnz	w3, #5, 3b18 <PySequence_Fast@plt+0x1a48>
    3adc:	ldr	x0, [x26, #72]
    3ae0:	b	3b28 <PySequence_Fast@plt+0x1a58>
    3ae4:	mov	x0, x1
    3ae8:	bl	1db0 <_PyUnicode_Ready@plt>
    3aec:	cmn	w0, #0x1
    3af0:	b.ne	3ad4 <PySequence_Fast@plt+0x1a04>  // b.any
    3af4:	mov	x19, #0x0                   	// #0
    3af8:	mov	x0, x19
    3afc:	ldp	x19, x20, [sp, #16]
    3b00:	ldp	x21, x22, [sp, #32]
    3b04:	ldp	x23, x24, [sp, #48]
    3b08:	ldp	x25, x26, [sp, #64]
    3b0c:	ldp	x27, x28, [sp, #80]
    3b10:	ldp	x29, x30, [sp], #160
    3b14:	ret
    3b18:	add	x0, x26, #0x30
    3b1c:	add	x1, x26, #0x48
    3b20:	tst	x3, #0x40
    3b24:	csel	x0, x1, x0, eq  // eq = none
    3b28:	ldrb	w1, [x26, #32]
    3b2c:	ldr	x5, [x26, #16]
    3b30:	ubfx	x1, x1, #2, #3
    3b34:	tbz	x19, #63, 3b54 <PySequence_Fast@plt+0x1a84>
    3b38:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3b3c:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3b40:	add	x1, x1, #0xc71
    3b44:	ldr	x0, [x0, #3968]
    3b48:	ldr	x0, [x0]
    3b4c:	bl	1e60 <PyErr_SetString@plt>
    3b50:	b	3af4 <PySequence_Fast@plt+0x1a24>
    3b54:	cmp	x5, x19
    3b58:	b.gt	3b68 <PySequence_Fast@plt+0x1a98>
    3b5c:	mov	x0, x19
    3b60:	bl	3204 <PySequence_Fast@plt+0x1134>
    3b64:	b	3af4 <PySequence_Fast@plt+0x1a24>
    3b68:	cmp	w1, #0x1
    3b6c:	b.ne	3bb0 <PySequence_Fast@plt+0x1ae0>  // b.any
    3b70:	ldrb	w2, [x0, x19]
    3b74:	cmp	w2, #0x5b
    3b78:	b.eq	41e0 <PySequence_Fast@plt+0x2110>  // b.none
    3b7c:	b.hi	3c24 <PySequence_Fast@plt+0x1b54>  // b.pmore
    3b80:	cmp	w2, #0x49
    3b84:	b.eq	4694 <PySequence_Fast@plt+0x25c4>  // b.none
    3b88:	b.hi	3bc8 <PySequence_Fast@plt+0x1af8>  // b.pmore
    3b8c:	cmp	w2, #0x22
    3b90:	b.eq	3d00 <PySequence_Fast@plt+0x1c30>  // b.none
    3b94:	cmp	w2, #0x2d
    3b98:	b.eq	47d4 <PySequence_Fast@plt+0x2704>  // b.none
    3b9c:	tbz	w3, #7, 4938 <PySequence_Fast@plt+0x2868>
    3ba0:	ldrb	w1, [x26, #32]
    3ba4:	tbnz	w1, #5, 494c <PySequence_Fast@plt+0x287c>
    3ba8:	ldr	x24, [x26, #72]
    3bac:	b	495c <PySequence_Fast@plt+0x288c>
    3bb0:	cmp	w1, #0x2
    3bb4:	b.ne	3bc0 <PySequence_Fast@plt+0x1af0>  // b.any
    3bb8:	ldrh	w2, [x0, x19, lsl #1]
    3bbc:	b	3b74 <PySequence_Fast@plt+0x1aa4>
    3bc0:	ldr	w2, [x0, x19, lsl #2]
    3bc4:	b	3b74 <PySequence_Fast@plt+0x1aa4>
    3bc8:	cmp	w2, #0x4e
    3bcc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3bd0:	add	x2, x19, #0x2
    3bd4:	cmp	x2, x5
    3bd8:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    3bdc:	add	x2, x19, #0x1
    3be0:	cmp	w1, #0x1
    3be4:	b.ne	4654 <PySequence_Fast@plt+0x2584>  // b.any
    3be8:	ldrb	w1, [x0, x2]
    3bec:	cmp	w1, #0x61
    3bf0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3bf4:	add	x0, x0, x19
    3bf8:	ldrb	w0, [x0, #2]
    3bfc:	cmp	w0, #0x4e
    3c00:	cset	w0, eq  // eq = none
    3c04:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    3c08:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    3c0c:	mov	x3, x22
    3c10:	mov	x2, x19
    3c14:	add	x1, x1, #0xb41
    3c18:	add	x0, x21, #0x38
    3c1c:	bl	3a34 <PySequence_Fast@plt+0x1964>
    3c20:	b	3d14 <PySequence_Fast@plt+0x1c44>
    3c24:	cmp	w2, #0x74
    3c28:	b.eq	44d0 <PySequence_Fast@plt+0x2400>  // b.none
    3c2c:	b.hi	3ca4 <PySequence_Fast@plt+0x1bd4>  // b.pmore
    3c30:	cmp	w2, #0x66
    3c34:	b.eq	4580 <PySequence_Fast@plt+0x24b0>  // b.none
    3c38:	cmp	w2, #0x6e
    3c3c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3c40:	add	x2, x19, #0x3
    3c44:	cmp	x2, x5
    3c48:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    3c4c:	add	x2, x19, #0x1
    3c50:	cmp	w1, #0x1
    3c54:	b.ne	4478 <PySequence_Fast@plt+0x23a8>  // b.any
    3c58:	ldrb	w1, [x0, x2]
    3c5c:	cmp	w1, #0x75
    3c60:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3c64:	add	x0, x0, x19
    3c68:	ldrb	w1, [x0, #2]
    3c6c:	cmp	w1, #0x6c
    3c70:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3c74:	ldrb	w0, [x0, #3]
    3c78:	cmp	w0, #0x6c
    3c7c:	cset	w0, eq  // eq = none
    3c80:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    3c84:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3c88:	add	x19, x19, #0x4
    3c8c:	str	x19, [x22]
    3c90:	ldr	x0, [x0, #4016]
    3c94:	ldr	x1, [x0]
    3c98:	add	x1, x1, #0x1
    3c9c:	str	x1, [x0]
    3ca0:	b	3d14 <PySequence_Fast@plt+0x1c44>
    3ca4:	cmp	w2, #0x7b
    3ca8:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3cac:	bl	1f20 <PyThreadState_Get@plt>
    3cb0:	ldr	w1, [x0, #32]
    3cb4:	add	w1, w1, #0x1
    3cb8:	str	w1, [x0, #32]
    3cbc:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    3cc0:	str	x0, [sp, #120]
    3cc4:	ldr	x2, [x0, #3984]
    3cc8:	ldr	w2, [x2]
    3ccc:	cmp	w1, w2
    3cd0:	b.gt	3d1c <PySequence_Fast@plt+0x1c4c>
    3cd4:	ldr	x0, [x21, #32]
    3cd8:	str	x0, [sp, #96]
    3cdc:	ldrsb	w0, [x26, #32]
    3ce0:	add	x28, x19, #0x1
    3ce4:	tbnz	w0, #31, 3d30 <PySequence_Fast@plt+0x1c60>
    3ce8:	mov	x0, x26
    3cec:	bl	1db0 <_PyUnicode_Ready@plt>
    3cf0:	cmn	w0, #0x1
    3cf4:	b.ne	3d30 <PySequence_Fast@plt+0x1c60>  // b.any
    3cf8:	mov	x19, #0x0                   	// #0
    3cfc:	b	3df0 <PySequence_Fast@plt+0x1d20>
    3d00:	ldrsb	w2, [x21, #16]
    3d04:	mov	x3, x22
    3d08:	add	x1, x19, #0x1
    3d0c:	mov	x0, x26
    3d10:	bl	330c <PySequence_Fast@plt+0x123c>
    3d14:	mov	x19, x0
    3d18:	b	3af8 <PySequence_Fast@plt+0x1a28>
    3d1c:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    3d20:	add	x0, x0, #0xc88
    3d24:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    3d28:	cbz	w0, 3cd4 <PySequence_Fast@plt+0x1c04>
    3d2c:	b	3af4 <PySequence_Fast@plt+0x1a24>
    3d30:	ldrb	w2, [x26, #32]
    3d34:	tbnz	w2, #5, 3d40 <PySequence_Fast@plt+0x1c70>
    3d38:	ldr	x27, [x26, #72]
    3d3c:	b	3d50 <PySequence_Fast@plt+0x1c80>
    3d40:	add	x0, x26, #0x30
    3d44:	add	x5, x26, #0x48
    3d48:	tst	x2, #0x40
    3d4c:	csel	x27, x5, x0, eq  // eq = none
    3d50:	adrp	x25, 16000 <PyInit__json@@Base+0x10668>
    3d54:	ldrb	w20, [x26, #32]
    3d58:	ldr	x24, [x26, #16]
    3d5c:	str	x25, [sp, #104]
    3d60:	ldr	x0, [x25, #4016]
    3d64:	ubfx	x20, x20, #2, #3
    3d68:	ldr	x1, [sp, #96]
    3d6c:	sub	x24, x24, #0x1
    3d70:	cmp	x1, x0
    3d74:	b.eq	3e34 <PySequence_Fast@plt+0x1d64>  // b.none
    3d78:	mov	x0, #0x0                   	// #0
    3d7c:	bl	1da0 <PyList_New@plt>
    3d80:	mov	x19, x0
    3d84:	cbz	x0, 3cf8 <PySequence_Fast@plt+0x1c28>
    3d88:	mov	x2, #0x2600                	// #9728
    3d8c:	movk	x2, #0x1, lsl #32
    3d90:	cmp	x24, x28
    3d94:	b.lt	3ea0 <PySequence_Fast@plt+0x1dd0>  // b.tstop
    3d98:	cmp	w20, #0x1
    3d9c:	b.ne	3e3c <PySequence_Fast@plt+0x1d6c>  // b.any
    3da0:	ldrb	w0, [x27, x28]
    3da4:	cmp	w0, #0x20
    3da8:	b.ls	3e68 <PySequence_Fast@plt+0x1d98>  // b.plast
    3dac:	cmp	w0, #0x7d
    3db0:	b.ne	3e70 <PySequence_Fast@plt+0x1da0>  // b.any
    3db4:	ldr	x0, [sp, #104]
    3db8:	add	x1, x28, #0x1
    3dbc:	str	x1, [x22]
    3dc0:	ldr	x25, [x0, #4016]
    3dc4:	ldr	x0, [sp, #96]
    3dc8:	cmp	x0, x25
    3dcc:	b.eq	41c4 <PySequence_Fast@plt+0x20f4>  // b.none
    3dd0:	ldr	x0, [x21, #32]
    3dd4:	mov	x1, x19
    3dd8:	mov	x2, #0x0                   	// #0
    3ddc:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    3de0:	mov	x20, x0
    3de4:	mov	x0, x19
    3de8:	mov	x19, x20
    3dec:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3df0:	bl	1f20 <PyThreadState_Get@plt>
    3df4:	ldr	w1, [x0, #32]
    3df8:	sub	w1, w1, #0x1
    3dfc:	str	w1, [x0, #32]
    3e00:	ldr	x0, [sp, #120]
    3e04:	ldr	x0, [x0, #3984]
    3e08:	ldr	w2, [x0]
    3e0c:	asr	w0, w2, #2
    3e10:	cmp	w2, #0xc9
    3e14:	sub	w3, w2, #0x32
    3e18:	add	w0, w0, w0, lsl #1
    3e1c:	csel	w0, w0, w3, lt  // lt = tstop
    3e20:	cmp	w1, w0
    3e24:	b.ge	3af8 <PySequence_Fast@plt+0x1a28>  // b.tcont
    3e28:	bl	1f20 <PyThreadState_Get@plt>
    3e2c:	strb	wzr, [x0, #36]
    3e30:	b	3af8 <PySequence_Fast@plt+0x1a28>
    3e34:	bl	1fd0 <PyDict_New@plt>
    3e38:	b	3d80 <PySequence_Fast@plt+0x1cb0>
    3e3c:	cmp	w20, #0x2
    3e40:	b.ne	3e60 <PySequence_Fast@plt+0x1d90>  // b.any
    3e44:	ldrh	w0, [x27, x28, lsl #1]
    3e48:	cmp	w0, #0x20
    3e4c:	b.hi	3dac <PySequence_Fast@plt+0x1cdc>  // b.pmore
    3e50:	lsr	x3, x2, x0
    3e54:	tbz	w3, #0, 3dac <PySequence_Fast@plt+0x1cdc>
    3e58:	add	x28, x28, #0x1
    3e5c:	b	3d90 <PySequence_Fast@plt+0x1cc0>
    3e60:	ldr	w0, [x27, x28, lsl #2]
    3e64:	b	3e48 <PySequence_Fast@plt+0x1d78>
    3e68:	lsr	x0, x2, x0
    3e6c:	tbnz	w0, #0, 3e58 <PySequence_Fast@plt+0x1d88>
    3e70:	add	x0, sp, #0x98
    3e74:	str	x0, [sp, #112]
    3e78:	ldr	x0, [sp, #104]
    3e7c:	mov	x23, #0x2600                	// #9728
    3e80:	movk	x23, #0x1, lsl #32
    3e84:	ldr	x0, [x0, #4016]
    3e88:	str	x0, [sp, #128]
    3e8c:	cmp	w20, #0x1
    3e90:	b.ne	3eb8 <PySequence_Fast@plt+0x1de8>  // b.any
    3e94:	ldrb	w0, [x27, x28]
    3e98:	cmp	w0, #0x22
    3e9c:	b.eq	3ed0 <PySequence_Fast@plt+0x1e00>  // b.none
    3ea0:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    3ea4:	mov	x2, x28
    3ea8:	mov	x1, x26
    3eac:	add	x0, x0, #0xcbc
    3eb0:	bl	324c <PySequence_Fast@plt+0x117c>
    3eb4:	b	3fd8 <PySequence_Fast@plt+0x1f08>
    3eb8:	cmp	w20, #0x2
    3ebc:	b.ne	3ec8 <PySequence_Fast@plt+0x1df8>  // b.any
    3ec0:	ldrh	w0, [x27, x28, lsl #1]
    3ec4:	b	3e98 <PySequence_Fast@plt+0x1dc8>
    3ec8:	ldr	w0, [x27, x28, lsl #2]
    3ecc:	b	3e98 <PySequence_Fast@plt+0x1dc8>
    3ed0:	ldrsb	w2, [x21, #16]
    3ed4:	add	x1, x28, #0x1
    3ed8:	ldr	x3, [sp, #112]
    3edc:	mov	x0, x26
    3ee0:	bl	330c <PySequence_Fast@plt+0x123c>
    3ee4:	mov	x28, x0
    3ee8:	cbz	x0, 4074 <PySequence_Fast@plt+0x1fa4>
    3eec:	mov	x1, x0
    3ef0:	ldr	x0, [x21, #64]
    3ef4:	bl	20b0 <PyDict_GetItemWithError@plt>
    3ef8:	mov	x25, x0
    3efc:	cbz	x0, 3fe0 <PySequence_Fast@plt+0x1f10>
    3f00:	ldr	x0, [x0]
    3f04:	add	x0, x0, #0x1
    3f08:	str	x0, [x25]
    3f0c:	mov	x0, x28
    3f10:	mov	x28, x25
    3f14:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3f18:	ldr	x2, [sp, #152]
    3f1c:	cmp	x24, x2
    3f20:	b.lt	4064 <PySequence_Fast@plt+0x1f94>  // b.tstop
    3f24:	cmp	w20, #0x1
    3f28:	b.ne	401c <PySequence_Fast@plt+0x1f4c>  // b.any
    3f2c:	ldrb	w0, [x27, x2]
    3f30:	cmp	w0, #0x20
    3f34:	b.ls	405c <PySequence_Fast@plt+0x1f8c>  // b.plast
    3f38:	cmp	w0, #0x3a
    3f3c:	b.ne	4064 <PySequence_Fast@plt+0x1f94>  // b.any
    3f40:	add	x2, x2, #0x1
    3f44:	cmp	x24, x2
    3f48:	b.lt	3f68 <PySequence_Fast@plt+0x1e98>  // b.tstop
    3f4c:	cmp	w20, #0x1
    3f50:	b.ne	407c <PySequence_Fast@plt+0x1fac>  // b.any
    3f54:	ldrb	w0, [x27, x2]
    3f58:	cmp	w0, #0x20
    3f5c:	b.hi	3f68 <PySequence_Fast@plt+0x1e98>  // b.pmore
    3f60:	lsr	x0, x23, x0
    3f64:	tbnz	w0, #0, 3f40 <PySequence_Fast@plt+0x1e70>
    3f68:	ldr	x3, [sp, #112]
    3f6c:	mov	x1, x26
    3f70:	mov	x0, x21
    3f74:	bl	3aa0 <PySequence_Fast@plt+0x19d0>
    3f78:	mov	x25, x0
    3f7c:	cbz	x0, 4000 <PySequence_Fast@plt+0x1f30>
    3f80:	mov	x2, x0
    3f84:	ldr	x0, [sp, #96]
    3f88:	ldr	x1, [sp, #128]
    3f8c:	cmp	x0, x1
    3f90:	mov	x1, x28
    3f94:	b.eq	4094 <PySequence_Fast@plt+0x1fc4>  // b.none
    3f98:	mov	x0, #0x2                   	// #2
    3f9c:	bl	2090 <PyTuple_Pack@plt>
    3fa0:	str	x0, [sp, #136]
    3fa4:	cbz	x0, 4000 <PySequence_Fast@plt+0x1f30>
    3fa8:	mov	x0, x28
    3fac:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3fb0:	mov	x0, x25
    3fb4:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3fb8:	ldr	x1, [sp, #136]
    3fbc:	mov	x0, x19
    3fc0:	bl	1eb0 <PyList_Append@plt>
    3fc4:	cmn	w0, #0x1
    3fc8:	ldr	x1, [sp, #136]
    3fcc:	mov	x0, x1
    3fd0:	b.ne	40ac <PySequence_Fast@plt+0x1fdc>  // b.any
    3fd4:	bl	2f48 <PySequence_Fast@plt+0xe78>
    3fd8:	mov	x28, #0x0                   	// #0
    3fdc:	b	4074 <PySequence_Fast@plt+0x1fa4>
    3fe0:	bl	1f40 <PyErr_Occurred@plt>
    3fe4:	mov	x25, x0
    3fe8:	cbnz	x0, 4074 <PySequence_Fast@plt+0x1fa4>
    3fec:	ldr	x0, [x21, #64]
    3ff0:	mov	x2, x28
    3ff4:	mov	x1, x28
    3ff8:	bl	2020 <PyDict_SetItem@plt>
    3ffc:	tbz	w0, #31, 3f18 <PySequence_Fast@plt+0x1e48>
    4000:	mov	x0, x28
    4004:	bl	3018 <PySequence_Fast@plt+0xf48>
    4008:	mov	x0, x25
    400c:	bl	3018 <PySequence_Fast@plt+0xf48>
    4010:	mov	x0, x19
    4014:	bl	3018 <PySequence_Fast@plt+0xf48>
    4018:	b	3cf8 <PySequence_Fast@plt+0x1c28>
    401c:	cmp	w20, #0x2
    4020:	b.ne	4040 <PySequence_Fast@plt+0x1f70>  // b.any
    4024:	ldrh	w0, [x27, x2, lsl #1]
    4028:	cmp	w0, #0x20
    402c:	b.hi	4e18 <PySequence_Fast@plt+0x2d48>  // b.pmore
    4030:	lsr	x0, x23, x0
    4034:	tbz	w0, #0, 4e18 <PySequence_Fast@plt+0x2d48>
    4038:	add	x2, x2, #0x1
    403c:	b	3f1c <PySequence_Fast@plt+0x1e4c>
    4040:	ldr	w0, [x27, x2, lsl #2]
    4044:	cmp	w0, #0x20
    4048:	b.hi	4054 <PySequence_Fast@plt+0x1f84>  // b.pmore
    404c:	lsr	x0, x23, x0
    4050:	tbnz	w0, #0, 4038 <PySequence_Fast@plt+0x1f68>
    4054:	ldr	w0, [x27, x2, lsl #2]
    4058:	b	3f38 <PySequence_Fast@plt+0x1e68>
    405c:	lsr	x0, x23, x0
    4060:	tbnz	w0, #0, 4038 <PySequence_Fast@plt+0x1f68>
    4064:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4068:	mov	x1, x26
    406c:	add	x0, x0, #0xcee
    4070:	bl	324c <PySequence_Fast@plt+0x117c>
    4074:	mov	x25, #0x0                   	// #0
    4078:	b	4000 <PySequence_Fast@plt+0x1f30>
    407c:	cmp	w20, #0x2
    4080:	b.ne	408c <PySequence_Fast@plt+0x1fbc>  // b.any
    4084:	ldrh	w0, [x27, x2, lsl #1]
    4088:	b	3f58 <PySequence_Fast@plt+0x1e88>
    408c:	ldr	w0, [x27, x2, lsl #2]
    4090:	b	3f58 <PySequence_Fast@plt+0x1e88>
    4094:	mov	x0, x19
    4098:	bl	2020 <PyDict_SetItem@plt>
    409c:	tbnz	w0, #31, 4000 <PySequence_Fast@plt+0x1f30>
    40a0:	mov	x0, x28
    40a4:	bl	2f48 <PySequence_Fast@plt+0xe78>
    40a8:	mov	x0, x25
    40ac:	bl	2f48 <PySequence_Fast@plt+0xe78>
    40b0:	ldr	x28, [sp, #152]
    40b4:	cmp	x24, x28
    40b8:	b.lt	40f8 <PySequence_Fast@plt+0x2028>  // b.tstop
    40bc:	cmp	w20, #0x1
    40c0:	b.ne	410c <PySequence_Fast@plt+0x203c>  // b.any
    40c4:	ldrb	w0, [x27, x28]
    40c8:	cmp	w0, #0x20
    40cc:	b.hi	40d8 <PySequence_Fast@plt+0x2008>  // b.pmore
    40d0:	lsr	x2, x23, x0
    40d4:	tbnz	w2, #0, 4128 <PySequence_Fast@plt+0x2058>
    40d8:	cmp	w0, #0x7d
    40dc:	cset	w0, eq  // eq = none
    40e0:	cbnz	w0, 3db4 <PySequence_Fast@plt+0x1ce4>
    40e4:	cmp	w20, #0x1
    40e8:	b.ne	414c <PySequence_Fast@plt+0x207c>  // b.any
    40ec:	ldrb	w0, [x27, x28]
    40f0:	cmp	w0, #0x2c
    40f4:	b.eq	4180 <PySequence_Fast@plt+0x20b0>  // b.none
    40f8:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    40fc:	mov	x2, x28
    4100:	mov	x1, x26
    4104:	add	x0, x0, #0xd06
    4108:	b	3eb0 <PySequence_Fast@plt+0x1de0>
    410c:	cmp	w20, #0x2
    4110:	b.ne	4130 <PySequence_Fast@plt+0x2060>  // b.any
    4114:	ldrh	w0, [x27, x28, lsl #1]
    4118:	cmp	w0, #0x20
    411c:	b.hi	4e10 <PySequence_Fast@plt+0x2d40>  // b.pmore
    4120:	lsr	x0, x23, x0
    4124:	tbz	w0, #0, 4e10 <PySequence_Fast@plt+0x2d40>
    4128:	add	x28, x28, #0x1
    412c:	b	40b4 <PySequence_Fast@plt+0x1fe4>
    4130:	ldr	w0, [x27, x28, lsl #2]
    4134:	cmp	w0, #0x20
    4138:	b.hi	4144 <PySequence_Fast@plt+0x2074>  // b.pmore
    413c:	lsr	x0, x23, x0
    4140:	tbnz	w0, #0, 4128 <PySequence_Fast@plt+0x2058>
    4144:	ldr	w0, [x27, x28, lsl #2]
    4148:	b	40d8 <PySequence_Fast@plt+0x2008>
    414c:	cmp	w20, #0x2
    4150:	b.ne	415c <PySequence_Fast@plt+0x208c>  // b.any
    4154:	ldrh	w0, [x27, x28, lsl #1]
    4158:	b	40f0 <PySequence_Fast@plt+0x2020>
    415c:	ldr	w0, [x27, x28, lsl #2]
    4160:	b	40f0 <PySequence_Fast@plt+0x2020>
    4164:	cmp	w20, #0x2
    4168:	b.ne	41ac <PySequence_Fast@plt+0x20dc>  // b.any
    416c:	ldrh	w0, [x27, x28, lsl #1]
    4170:	cmp	w0, #0x20
    4174:	b.hi	3ec0 <PySequence_Fast@plt+0x1df0>  // b.pmore
    4178:	lsr	x0, x23, x0
    417c:	tbz	w0, #0, 3ec0 <PySequence_Fast@plt+0x1df0>
    4180:	add	x28, x28, #0x1
    4184:	cmp	x24, x28
    4188:	b.lt	3ea0 <PySequence_Fast@plt+0x1dd0>  // b.tstop
    418c:	cmp	w20, #0x1
    4190:	b.ne	4164 <PySequence_Fast@plt+0x2094>  // b.any
    4194:	ldrb	w0, [x27, x28]
    4198:	cmp	w0, #0x20
    419c:	b.hi	3e94 <PySequence_Fast@plt+0x1dc4>  // b.pmore
    41a0:	lsr	x0, x23, x0
    41a4:	tbnz	w0, #0, 4180 <PySequence_Fast@plt+0x20b0>
    41a8:	b	3e94 <PySequence_Fast@plt+0x1dc4>
    41ac:	ldr	w0, [x27, x28, lsl #2]
    41b0:	cmp	w0, #0x20
    41b4:	b.hi	3e8c <PySequence_Fast@plt+0x1dbc>  // b.pmore
    41b8:	lsr	x0, x23, x0
    41bc:	tbz	w0, #0, 3e8c <PySequence_Fast@plt+0x1dbc>
    41c0:	b	4180 <PySequence_Fast@plt+0x20b0>
    41c4:	ldr	x0, [x21, #24]
    41c8:	ldr	x1, [sp, #96]
    41cc:	cmp	x0, x1
    41d0:	b.eq	3df0 <PySequence_Fast@plt+0x1d20>  // b.none
    41d4:	mov	x1, x19
    41d8:	mov	x2, #0x0                   	// #0
    41dc:	b	3ddc <PySequence_Fast@plt+0x1d0c>
    41e0:	bl	1f20 <PyThreadState_Get@plt>
    41e4:	adrp	x24, 16000 <PyInit__json@@Base+0x10668>
    41e8:	ldr	w1, [x0, #32]
    41ec:	str	x24, [sp, #96]
    41f0:	add	w1, w1, #0x1
    41f4:	str	w1, [x0, #32]
    41f8:	ldr	x0, [x24, #3984]
    41fc:	ldr	w0, [x0]
    4200:	cmp	w1, w0
    4204:	b.gt	422c <PySequence_Fast@plt+0x215c>
    4208:	ldrsb	w0, [x26, #32]
    420c:	add	x20, x19, #0x1
    4210:	tbz	w0, #31, 4240 <PySequence_Fast@plt+0x2170>
    4214:	mov	x0, #0x0                   	// #0
    4218:	bl	1da0 <PyList_New@plt>
    421c:	mov	x19, x0
    4220:	cbnz	x0, 4254 <PySequence_Fast@plt+0x2184>
    4224:	mov	x19, #0x0                   	// #0
    4228:	b	4458 <PySequence_Fast@plt+0x2388>
    422c:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4230:	add	x0, x0, #0xd1e
    4234:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4238:	cbz	w0, 4208 <PySequence_Fast@plt+0x2138>
    423c:	b	3af4 <PySequence_Fast@plt+0x1a24>
    4240:	mov	x0, x26
    4244:	bl	1db0 <_PyUnicode_Ready@plt>
    4248:	cmn	w0, #0x1
    424c:	b.ne	4214 <PySequence_Fast@plt+0x2144>  // b.any
    4250:	b	4224 <PySequence_Fast@plt+0x2154>
    4254:	ldrb	w1, [x26, #32]
    4258:	tbz	w1, #5, 431c <PySequence_Fast@plt+0x224c>
    425c:	add	x0, x26, #0x30
    4260:	add	x27, x26, #0x48
    4264:	tst	x1, #0x40
    4268:	csel	x27, x27, x0, eq  // eq = none
    426c:	ldrb	w28, [x26, #32]
    4270:	mov	x1, #0x2600                	// #9728
    4274:	ldr	x23, [x26, #16]
    4278:	movk	x1, #0x1, lsl #32
    427c:	ubfx	x28, x28, #2, #3
    4280:	sub	x23, x23, #0x1
    4284:	cmp	x23, x20
    4288:	b.lt	42a8 <PySequence_Fast@plt+0x21d8>  // b.tstop
    428c:	cmp	w28, #0x1
    4290:	b.ne	4324 <PySequence_Fast@plt+0x2254>  // b.any
    4294:	ldrb	w0, [x27, x20]
    4298:	cmp	w0, #0x20
    429c:	b.ls	4374 <PySequence_Fast@plt+0x22a4>  // b.plast
    42a0:	cmp	w0, #0x5d
    42a4:	b.eq	4df0 <PySequence_Fast@plt+0x2d20>  // b.none
    42a8:	mov	x25, #0x2600                	// #9728
    42ac:	add	x24, sp, #0x98
    42b0:	movk	x25, #0x1, lsl #32
    42b4:	mov	x2, x20
    42b8:	mov	x3, x24
    42bc:	mov	x1, x26
    42c0:	mov	x0, x21
    42c4:	bl	3aa0 <PySequence_Fast@plt+0x19d0>
    42c8:	mov	x20, x0
    42cc:	cbz	x0, 43d4 <PySequence_Fast@plt+0x2304>
    42d0:	mov	x1, x0
    42d4:	mov	x0, x19
    42d8:	bl	1eb0 <PyList_Append@plt>
    42dc:	cmn	w0, #0x1
    42e0:	b.eq	43d4 <PySequence_Fast@plt+0x2304>  // b.none
    42e4:	mov	x0, x20
    42e8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    42ec:	ldr	x20, [sp, #152]
    42f0:	cmp	x23, x20
    42f4:	b.lt	43bc <PySequence_Fast@plt+0x22ec>  // b.tstop
    42f8:	cmp	w28, #0x1
    42fc:	b.ne	4384 <PySequence_Fast@plt+0x22b4>  // b.any
    4300:	ldrb	w0, [x27, x20]
    4304:	cmp	w0, #0x20
    4308:	b.hi	439c <PySequence_Fast@plt+0x22cc>  // b.pmore
    430c:	lsr	x1, x25, x0
    4310:	tbz	w1, #0, 439c <PySequence_Fast@plt+0x22cc>
    4314:	add	x20, x20, #0x1
    4318:	b	42f0 <PySequence_Fast@plt+0x2220>
    431c:	ldr	x27, [x26, #72]
    4320:	b	426c <PySequence_Fast@plt+0x219c>
    4324:	cmp	w28, #0x2
    4328:	b.ne	4350 <PySequence_Fast@plt+0x2280>  // b.any
    432c:	ldrh	w0, [x27, x20, lsl #1]
    4330:	cmp	w0, #0x20
    4334:	b.hi	4340 <PySequence_Fast@plt+0x2270>  // b.pmore
    4338:	lsr	x2, x1, x0
    433c:	tbnz	w2, #0, 437c <PySequence_Fast@plt+0x22ac>
    4340:	cmp	w0, #0x5d
    4344:	b.ne	42a8 <PySequence_Fast@plt+0x21d8>  // b.any
    4348:	ldrh	w0, [x27, x20, lsl #1]
    434c:	b	4df4 <PySequence_Fast@plt+0x2d24>
    4350:	ldr	w0, [x27, x20, lsl #2]
    4354:	cmp	w0, #0x20
    4358:	b.hi	4364 <PySequence_Fast@plt+0x2294>  // b.pmore
    435c:	lsr	x2, x1, x0
    4360:	tbnz	w2, #0, 437c <PySequence_Fast@plt+0x22ac>
    4364:	cmp	w0, #0x5d
    4368:	b.ne	42a8 <PySequence_Fast@plt+0x21d8>  // b.any
    436c:	ldr	w0, [x27, x20, lsl #2]
    4370:	b	4df4 <PySequence_Fast@plt+0x2d24>
    4374:	lsr	x0, x1, x0
    4378:	tbz	w0, #0, 42a8 <PySequence_Fast@plt+0x21d8>
    437c:	add	x20, x20, #0x1
    4380:	b	4284 <PySequence_Fast@plt+0x21b4>
    4384:	cmp	w28, #0x2
    4388:	b.ne	4394 <PySequence_Fast@plt+0x22c4>  // b.any
    438c:	ldrh	w0, [x27, x20, lsl #1]
    4390:	b	4304 <PySequence_Fast@plt+0x2234>
    4394:	ldr	w0, [x27, x20, lsl #2]
    4398:	b	4304 <PySequence_Fast@plt+0x2234>
    439c:	cmp	w0, #0x5d
    43a0:	cset	w0, eq  // eq = none
    43a4:	cmp	w28, #0x1
    43a8:	cbnz	w0, 4dec <PySequence_Fast@plt+0x2d1c>
    43ac:	b.ne	43e8 <PySequence_Fast@plt+0x2318>  // b.any
    43b0:	ldrb	w0, [x27, x20]
    43b4:	cmp	w0, #0x2c
    43b8:	b.eq	4400 <PySequence_Fast@plt+0x2330>  // b.none
    43bc:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    43c0:	mov	x2, x20
    43c4:	mov	x1, x26
    43c8:	add	x0, x0, #0xd06
    43cc:	mov	x20, #0x0                   	// #0
    43d0:	bl	324c <PySequence_Fast@plt+0x117c>
    43d4:	mov	x0, x20
    43d8:	bl	3018 <PySequence_Fast@plt+0xf48>
    43dc:	mov	x0, x19
    43e0:	bl	2f48 <PySequence_Fast@plt+0xe78>
    43e4:	b	4224 <PySequence_Fast@plt+0x2154>
    43e8:	cmp	w28, #0x2
    43ec:	b.ne	43f8 <PySequence_Fast@plt+0x2328>  // b.any
    43f0:	ldrh	w0, [x27, x20, lsl #1]
    43f4:	b	43b4 <PySequence_Fast@plt+0x22e4>
    43f8:	ldr	w0, [x27, x20, lsl #2]
    43fc:	b	43b4 <PySequence_Fast@plt+0x22e4>
    4400:	add	x20, x20, #0x1
    4404:	cmp	x23, x20
    4408:	b.lt	42b4 <PySequence_Fast@plt+0x21e4>  // b.tstop
    440c:	cmp	w28, #0x1
    4410:	b.ne	442c <PySequence_Fast@plt+0x235c>  // b.any
    4414:	ldrb	w0, [x27, x20]
    4418:	cmp	w0, #0x20
    441c:	b.hi	42b4 <PySequence_Fast@plt+0x21e4>  // b.pmore
    4420:	lsr	x0, x25, x0
    4424:	tbz	w0, #0, 42b4 <PySequence_Fast@plt+0x21e4>
    4428:	b	4400 <PySequence_Fast@plt+0x2330>
    442c:	cmp	w28, #0x2
    4430:	b.ne	443c <PySequence_Fast@plt+0x236c>  // b.any
    4434:	ldrh	w0, [x27, x20, lsl #1]
    4438:	b	4418 <PySequence_Fast@plt+0x2348>
    443c:	ldr	w0, [x27, x20, lsl #2]
    4440:	b	4418 <PySequence_Fast@plt+0x2348>
    4444:	cmp	w28, #0x2
    4448:	b.ne	436c <PySequence_Fast@plt+0x229c>  // b.any
    444c:	b	4348 <PySequence_Fast@plt+0x2278>
    4450:	add	x20, x20, #0x1
    4454:	str	x20, [x22]
    4458:	bl	1f20 <PyThreadState_Get@plt>
    445c:	ldr	w1, [x0, #32]
    4460:	sub	w1, w1, #0x1
    4464:	str	w1, [x0, #32]
    4468:	ldr	x0, [sp, #96]
    446c:	ldr	x24, [x0, #3984]
    4470:	ldr	w2, [x24]
    4474:	b	3e0c <PySequence_Fast@plt+0x1d3c>
    4478:	cmp	w1, #0x2
    447c:	b.ne	44a8 <PySequence_Fast@plt+0x23d8>  // b.any
    4480:	lsl	x1, x2, #1
    4484:	ldrh	w2, [x0, x2, lsl #1]
    4488:	cmp	w2, #0x75
    448c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4490:	add	x0, x0, x1
    4494:	ldrh	w1, [x0, #2]
    4498:	cmp	w1, #0x6c
    449c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    44a0:	ldrh	w0, [x0, #4]
    44a4:	b	3c78 <PySequence_Fast@plt+0x1ba8>
    44a8:	lsl	x2, x2, #2
    44ac:	ldr	w1, [x0, x2]
    44b0:	cmp	w1, #0x75
    44b4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    44b8:	add	x0, x0, x2
    44bc:	ldr	w1, [x0, #4]
    44c0:	cmp	w1, #0x6c
    44c4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    44c8:	ldr	w0, [x0, #8]
    44cc:	b	3c78 <PySequence_Fast@plt+0x1ba8>
    44d0:	add	x2, x19, #0x3
    44d4:	cmp	x2, x5
    44d8:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    44dc:	add	x2, x19, #0x1
    44e0:	cmp	w1, #0x1
    44e4:	b.ne	4528 <PySequence_Fast@plt+0x2458>  // b.any
    44e8:	ldrb	w1, [x0, x2]
    44ec:	cmp	w1, #0x72
    44f0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    44f4:	add	x0, x0, x19
    44f8:	ldrb	w1, [x0, #2]
    44fc:	cmp	w1, #0x75
    4500:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4504:	ldrb	w0, [x0, #3]
    4508:	cmp	w0, #0x65
    450c:	cset	w0, eq  // eq = none
    4510:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    4514:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    4518:	add	x19, x19, #0x4
    451c:	str	x19, [x22]
    4520:	ldr	x0, [x0, #4024]
    4524:	b	3c94 <PySequence_Fast@plt+0x1bc4>
    4528:	cmp	w1, #0x2
    452c:	b.ne	4558 <PySequence_Fast@plt+0x2488>  // b.any
    4530:	lsl	x1, x2, #1
    4534:	ldrh	w2, [x0, x2, lsl #1]
    4538:	cmp	w2, #0x72
    453c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4540:	add	x0, x0, x1
    4544:	ldrh	w1, [x0, #2]
    4548:	cmp	w1, #0x75
    454c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4550:	ldrh	w0, [x0, #4]
    4554:	b	4508 <PySequence_Fast@plt+0x2438>
    4558:	lsl	x2, x2, #2
    455c:	ldr	w1, [x0, x2]
    4560:	cmp	w1, #0x72
    4564:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4568:	add	x0, x0, x2
    456c:	ldr	w1, [x0, #4]
    4570:	cmp	w1, #0x75
    4574:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4578:	ldr	w0, [x0, #8]
    457c:	b	4508 <PySequence_Fast@plt+0x2438>
    4580:	add	x2, x19, #0x4
    4584:	cmp	x2, x5
    4588:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    458c:	add	x2, x19, #0x1
    4590:	cmp	w1, #0x1
    4594:	b.ne	45e4 <PySequence_Fast@plt+0x2514>  // b.any
    4598:	ldrb	w1, [x0, x2]
    459c:	cmp	w1, #0x61
    45a0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    45a4:	add	x0, x0, x19
    45a8:	ldrb	w1, [x0, #2]
    45ac:	cmp	w1, #0x6c
    45b0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    45b4:	ldrb	w1, [x0, #3]
    45b8:	cmp	w1, #0x73
    45bc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    45c0:	ldrb	w0, [x0, #4]
    45c4:	cmp	w0, #0x65
    45c8:	cset	w0, eq  // eq = none
    45cc:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    45d0:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    45d4:	add	x19, x19, #0x5
    45d8:	str	x19, [x22]
    45dc:	ldr	x0, [x0, #3992]
    45e0:	b	3c94 <PySequence_Fast@plt+0x1bc4>
    45e4:	cmp	w1, #0x2
    45e8:	b.ne	4620 <PySequence_Fast@plt+0x2550>  // b.any
    45ec:	lsl	x1, x2, #1
    45f0:	ldrh	w2, [x0, x2, lsl #1]
    45f4:	cmp	w2, #0x61
    45f8:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    45fc:	add	x0, x0, x1
    4600:	ldrh	w1, [x0, #2]
    4604:	cmp	w1, #0x6c
    4608:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    460c:	ldrh	w1, [x0, #4]
    4610:	cmp	w1, #0x73
    4614:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4618:	ldrh	w0, [x0, #6]
    461c:	b	45c4 <PySequence_Fast@plt+0x24f4>
    4620:	lsl	x2, x2, #2
    4624:	ldr	w1, [x0, x2]
    4628:	cmp	w1, #0x61
    462c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4630:	add	x0, x0, x2
    4634:	ldr	w1, [x0, #4]
    4638:	cmp	w1, #0x6c
    463c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4640:	ldr	w1, [x0, #8]
    4644:	cmp	w1, #0x73
    4648:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    464c:	ldr	w0, [x0, #12]
    4650:	b	45c4 <PySequence_Fast@plt+0x24f4>
    4654:	cmp	w1, #0x2
    4658:	b.ne	4678 <PySequence_Fast@plt+0x25a8>  // b.any
    465c:	lsl	x1, x2, #1
    4660:	ldrh	w2, [x0, x2, lsl #1]
    4664:	cmp	w2, #0x61
    4668:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    466c:	add	x0, x0, x1
    4670:	ldrh	w0, [x0, #2]
    4674:	b	3bfc <PySequence_Fast@plt+0x1b2c>
    4678:	lsl	x2, x2, #2
    467c:	ldr	w1, [x0, x2]
    4680:	cmp	w1, #0x61
    4684:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4688:	add	x2, x0, x2
    468c:	ldr	w0, [x2, #4]
    4690:	b	3bfc <PySequence_Fast@plt+0x1b2c>
    4694:	add	x2, x19, #0x7
    4698:	cmp	x2, x5
    469c:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    46a0:	add	x2, x19, #0x1
    46a4:	cmp	w1, #0x1
    46a8:	b.ne	471c <PySequence_Fast@plt+0x264c>  // b.any
    46ac:	ldrb	w1, [x0, x2]
    46b0:	cmp	w1, #0x6e
    46b4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46b8:	add	x0, x0, x19
    46bc:	ldrb	w1, [x0, #2]
    46c0:	cmp	w1, #0x66
    46c4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46c8:	ldrb	w1, [x0, #3]
    46cc:	cmp	w1, #0x69
    46d0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46d4:	ldrb	w1, [x0, #4]
    46d8:	cmp	w1, #0x6e
    46dc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46e0:	ldrb	w1, [x0, #5]
    46e4:	cmp	w1, #0x69
    46e8:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46ec:	ldrb	w1, [x0, #6]
    46f0:	cmp	w1, #0x74
    46f4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    46f8:	ldrb	w0, [x0, #7]
    46fc:	cmp	w0, #0x79
    4700:	cset	w0, eq  // eq = none
    4704:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    4708:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    470c:	mov	x3, x22
    4710:	mov	x2, x19
    4714:	add	x1, x1, #0xb38
    4718:	b	3c18 <PySequence_Fast@plt+0x1b48>
    471c:	cmp	w1, #0x2
    4720:	b.ne	477c <PySequence_Fast@plt+0x26ac>  // b.any
    4724:	lsl	x1, x2, #1
    4728:	ldrh	w2, [x0, x2, lsl #1]
    472c:	cmp	w2, #0x6e
    4730:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4734:	add	x0, x0, x1
    4738:	ldrh	w1, [x0, #2]
    473c:	cmp	w1, #0x66
    4740:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4744:	ldrh	w1, [x0, #4]
    4748:	cmp	w1, #0x69
    474c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4750:	ldrh	w1, [x0, #6]
    4754:	cmp	w1, #0x6e
    4758:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    475c:	ldrh	w1, [x0, #8]
    4760:	cmp	w1, #0x69
    4764:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4768:	ldrh	w1, [x0, #10]
    476c:	cmp	w1, #0x74
    4770:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4774:	ldrh	w0, [x0, #12]
    4778:	b	46fc <PySequence_Fast@plt+0x262c>
    477c:	lsl	x2, x2, #2
    4780:	ldr	w1, [x0, x2]
    4784:	cmp	w1, #0x6e
    4788:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    478c:	add	x0, x0, x2
    4790:	ldr	w1, [x0, #4]
    4794:	cmp	w1, #0x66
    4798:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    479c:	ldr	w1, [x0, #8]
    47a0:	cmp	w1, #0x69
    47a4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    47a8:	ldr	w1, [x0, #12]
    47ac:	cmp	w1, #0x6e
    47b0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    47b4:	ldr	w1, [x0, #16]
    47b8:	cmp	w1, #0x69
    47bc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    47c0:	ldr	w1, [x0, #20]
    47c4:	cmp	w1, #0x74
    47c8:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    47cc:	ldr	w0, [x0, #24]
    47d0:	b	46fc <PySequence_Fast@plt+0x262c>
    47d4:	add	x2, x19, #0x8
    47d8:	cmp	x2, x5
    47dc:	b.ge	3b9c <PySequence_Fast@plt+0x1acc>  // b.tcont
    47e0:	add	x2, x19, #0x1
    47e4:	cmp	w1, #0x1
    47e8:	b.ne	4868 <PySequence_Fast@plt+0x2798>  // b.any
    47ec:	ldrb	w1, [x0, x2]
    47f0:	cmp	w1, #0x49
    47f4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    47f8:	add	x0, x0, x19
    47fc:	ldrb	w1, [x0, #2]
    4800:	cmp	w1, #0x6e
    4804:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4808:	ldrb	w1, [x0, #3]
    480c:	cmp	w1, #0x66
    4810:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4814:	ldrb	w1, [x0, #4]
    4818:	cmp	w1, #0x69
    481c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4820:	ldrb	w1, [x0, #5]
    4824:	cmp	w1, #0x6e
    4828:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    482c:	ldrb	w1, [x0, #6]
    4830:	cmp	w1, #0x69
    4834:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4838:	ldrb	w1, [x0, #7]
    483c:	cmp	w1, #0x74
    4840:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4844:	ldrb	w0, [x0, #8]
    4848:	cmp	w0, #0x79
    484c:	cset	w0, eq  // eq = none
    4850:	cbz	w0, 3b9c <PySequence_Fast@plt+0x1acc>
    4854:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    4858:	mov	x3, x22
    485c:	mov	x2, x19
    4860:	add	x1, x1, #0xb37
    4864:	b	3c18 <PySequence_Fast@plt+0x1b48>
    4868:	cmp	w1, #0x2
    486c:	b.ne	48d4 <PySequence_Fast@plt+0x2804>  // b.any
    4870:	lsl	x1, x2, #1
    4874:	ldrh	w2, [x0, x2, lsl #1]
    4878:	cmp	w2, #0x49
    487c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4880:	add	x0, x0, x1
    4884:	ldrh	w1, [x0, #2]
    4888:	cmp	w1, #0x6e
    488c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4890:	ldrh	w1, [x0, #4]
    4894:	cmp	w1, #0x66
    4898:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    489c:	ldrh	w1, [x0, #6]
    48a0:	cmp	w1, #0x69
    48a4:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48a8:	ldrh	w1, [x0, #8]
    48ac:	cmp	w1, #0x6e
    48b0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48b4:	ldrh	w1, [x0, #10]
    48b8:	cmp	w1, #0x69
    48bc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48c0:	ldrh	w1, [x0, #12]
    48c4:	cmp	w1, #0x74
    48c8:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48cc:	ldrh	w0, [x0, #14]
    48d0:	b	4848 <PySequence_Fast@plt+0x2778>
    48d4:	lsl	x2, x2, #2
    48d8:	ldr	w1, [x0, x2]
    48dc:	cmp	w1, #0x49
    48e0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48e4:	add	x0, x0, x2
    48e8:	ldr	w1, [x0, #4]
    48ec:	cmp	w1, #0x6e
    48f0:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    48f4:	ldr	w1, [x0, #8]
    48f8:	cmp	w1, #0x66
    48fc:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4900:	ldr	w1, [x0, #12]
    4904:	cmp	w1, #0x69
    4908:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    490c:	ldr	w1, [x0, #16]
    4910:	cmp	w1, #0x6e
    4914:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4918:	ldr	w1, [x0, #20]
    491c:	cmp	w1, #0x69
    4920:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4924:	ldr	w1, [x0, #24]
    4928:	cmp	w1, #0x74
    492c:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    4930:	ldr	w0, [x0, #28]
    4934:	b	4848 <PySequence_Fast@plt+0x2778>
    4938:	mov	x0, x26
    493c:	bl	1db0 <_PyUnicode_Ready@plt>
    4940:	cmn	w0, #0x1
    4944:	b.ne	3ba0 <PySequence_Fast@plt+0x1ad0>  // b.any
    4948:	b	3af4 <PySequence_Fast@plt+0x1a24>
    494c:	add	x0, x26, #0x30
    4950:	add	x24, x26, #0x48
    4954:	tst	x1, #0x40
    4958:	csel	x24, x24, x0, eq  // eq = none
    495c:	ldrb	w25, [x26, #32]
    4960:	ldr	x2, [x26, #16]
    4964:	ubfx	x1, x25, #2, #3
    4968:	mov	x25, x1
    496c:	cmp	w1, #0x1
    4970:	sub	x2, x2, #0x1
    4974:	b.ne	4a0c <PySequence_Fast@plt+0x293c>  // b.any
    4978:	ldrb	w0, [x24, x19]
    497c:	cmp	w0, #0x2d
    4980:	b.eq	4a40 <PySequence_Fast@plt+0x2970>  // b.none
    4984:	mov	x0, x19
    4988:	ldrb	w4, [x24, x0]
    498c:	sub	w3, w4, #0x31
    4990:	and	w3, w3, #0xff
    4994:	cmp	w3, #0x8
    4998:	b.ls	4a6c <PySequence_Fast@plt+0x299c>  // b.plast
    499c:	cmp	w4, #0x30
    49a0:	cset	w3, eq  // eq = none
    49a4:	cbz	w3, 3b5c <PySequence_Fast@plt+0x1a8c>
    49a8:	add	x23, x0, #0x1
    49ac:	cmp	x2, x23
    49b0:	b.le	4a9c <PySequence_Fast@plt+0x29cc>
    49b4:	cmp	w25, #0x1
    49b8:	b.ne	4b48 <PySequence_Fast@plt+0x2a78>  // b.any
    49bc:	ldrb	w0, [x24, x23]
    49c0:	cmp	w0, #0x2e
    49c4:	b.eq	4b74 <PySequence_Fast@plt+0x2aa4>  // b.none
    49c8:	mov	w0, #0x0                   	// #0
    49cc:	ldrb	w3, [x24, x23]
    49d0:	and	w3, w3, #0xffffffdf
    49d4:	and	w3, w3, #0xff
    49d8:	mov	x4, x23
    49dc:	cmp	w3, #0x45
    49e0:	b.ne	4c94 <PySequence_Fast@plt+0x2bc4>  // b.any
    49e4:	add	x23, x23, #0x1
    49e8:	cmp	x2, x23
    49ec:	b.le	4c58 <PySequence_Fast@plt+0x2b88>
    49f0:	cmp	w25, #0x1
    49f4:	b.ne	4c38 <PySequence_Fast@plt+0x2b68>  // b.any
    49f8:	ldrb	w3, [x24, x23]
    49fc:	cmp	w3, #0x2d
    4a00:	b.ne	4c50 <PySequence_Fast@plt+0x2b80>  // b.any
    4a04:	add	x23, x4, #0x2
    4a08:	b	4c58 <PySequence_Fast@plt+0x2b88>
    4a0c:	cmp	w1, #0x2
    4a10:	b.ne	4a34 <PySequence_Fast@plt+0x2964>  // b.any
    4a14:	ldrh	w0, [x24, x19, lsl #1]
    4a18:	cmp	w0, #0x2d
    4a1c:	b.eq	4a40 <PySequence_Fast@plt+0x2970>  // b.none
    4a20:	mov	x0, x19
    4a24:	ldrh	w4, [x24, x0, lsl #1]
    4a28:	sub	w3, w4, #0x31
    4a2c:	and	w3, w3, #0xffff
    4a30:	b	4994 <PySequence_Fast@plt+0x28c4>
    4a34:	ldr	w0, [x24, x19, lsl #2]
    4a38:	cmp	w0, #0x2d
    4a3c:	b.ne	4ab0 <PySequence_Fast@plt+0x29e0>  // b.any
    4a40:	add	x0, x19, #0x1
    4a44:	cmp	x2, x0
    4a48:	b.lt	3b5c <PySequence_Fast@plt+0x1a8c>  // b.tstop
    4a4c:	cmp	w25, #0x1
    4a50:	b.eq	4988 <PySequence_Fast@plt+0x28b8>  // b.none
    4a54:	cmp	w25, #0x2
    4a58:	b.eq	4a24 <PySequence_Fast@plt+0x2954>  // b.none
    4a5c:	ldr	w3, [x24, x0, lsl #2]
    4a60:	sub	w4, w3, #0x31
    4a64:	cmp	w4, #0x8
    4a68:	b.hi	4b40 <PySequence_Fast@plt+0x2a70>  // b.pmore
    4a6c:	add	x23, x0, #0x1
    4a70:	cmp	x2, x23
    4a74:	b.lt	4a9c <PySequence_Fast@plt+0x29cc>  // b.tstop
    4a78:	cmp	w25, #0x1
    4a7c:	b.ne	4ac0 <PySequence_Fast@plt+0x29f0>  // b.any
    4a80:	ldrb	w0, [x24, x23]
    4a84:	sub	w0, w0, #0x30
    4a88:	and	w0, w0, #0xff
    4a8c:	cmp	w0, #0x9
    4a90:	b.ls	4ab8 <PySequence_Fast@plt+0x29e8>  // b.plast
    4a94:	cmp	x2, x23
    4a98:	b.gt	49bc <PySequence_Fast@plt+0x28ec>
    4a9c:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    4aa0:	mov	w26, #0x0                   	// #0
    4aa4:	ldr	x21, [x21, #48]
    4aa8:	ldr	x0, [x0, #4032]
    4aac:	b	4cac <PySequence_Fast@plt+0x2bdc>
    4ab0:	mov	x0, x19
    4ab4:	b	4a5c <PySequence_Fast@plt+0x298c>
    4ab8:	add	x23, x23, #0x1
    4abc:	b	4a70 <PySequence_Fast@plt+0x29a0>
    4ac0:	cmp	w25, #0x2
    4ac4:	b.ne	4ae8 <PySequence_Fast@plt+0x2a18>  // b.any
    4ac8:	ldrh	w0, [x24, x23, lsl #1]
    4acc:	sub	w0, w0, #0x30
    4ad0:	and	w0, w0, #0xffff
    4ad4:	cmp	w0, #0x9
    4ad8:	b.ls	4ab8 <PySequence_Fast@plt+0x29e8>  // b.plast
    4adc:	cmp	x2, x23
    4ae0:	b.le	4a9c <PySequence_Fast@plt+0x29cc>
    4ae4:	b	4b50 <PySequence_Fast@plt+0x2a80>
    4ae8:	ldr	w0, [x24, x23, lsl #2]
    4aec:	sub	w0, w0, #0x30
    4af0:	cmp	w0, #0x9
    4af4:	b.ls	4ab8 <PySequence_Fast@plt+0x29e8>  // b.plast
    4af8:	cmp	x2, x23
    4afc:	b.le	4a9c <PySequence_Fast@plt+0x29cc>
    4b00:	lsl	x0, x23, #2
    4b04:	ldr	w3, [x24, x0]
    4b08:	cmp	w3, #0x2e
    4b0c:	b.ne	4b20 <PySequence_Fast@plt+0x2a50>  // b.any
    4b10:	add	x0, x24, x0
    4b14:	ldr	w0, [x0, #4]
    4b18:	cmp	w0, #0x2f
    4b1c:	b.hi	4b84 <PySequence_Fast@plt+0x2ab4>  // b.pmore
    4b20:	cmp	w25, #0x1
    4b24:	b.eq	49c8 <PySequence_Fast@plt+0x28f8>  // b.none
    4b28:	cmp	w25, #0x2
    4b2c:	b.eq	4b60 <PySequence_Fast@plt+0x2a90>  // b.none
    4b30:	mov	w0, #0x0                   	// #0
    4b34:	ldr	w3, [x24, x23, lsl #2]
    4b38:	and	w3, w3, #0xffffffdf
    4b3c:	b	49d8 <PySequence_Fast@plt+0x2908>
    4b40:	cmp	w3, #0x30
    4b44:	b	49a0 <PySequence_Fast@plt+0x28d0>
    4b48:	cmp	w25, #0x2
    4b4c:	b.ne	4b00 <PySequence_Fast@plt+0x2a30>  // b.any
    4b50:	ldrh	w3, [x24, x23, lsl #1]
    4b54:	lsl	x0, x23, #1
    4b58:	cmp	w3, #0x2e
    4b5c:	b.eq	4b94 <PySequence_Fast@plt+0x2ac4>  // b.none
    4b60:	mov	w0, #0x0                   	// #0
    4b64:	ldrh	w3, [x24, x23, lsl #1]
    4b68:	and	w3, w3, #0xffffffdf
    4b6c:	and	w3, w3, #0xffff
    4b70:	b	49d8 <PySequence_Fast@plt+0x2908>
    4b74:	add	x0, x24, x23
    4b78:	ldrb	w0, [x0, #1]
    4b7c:	cmp	w0, #0x2f
    4b80:	b.ls	49c8 <PySequence_Fast@plt+0x28f8>  // b.plast
    4b84:	cmp	w0, #0x39
    4b88:	cset	w0, ls  // ls = plast
    4b8c:	cbz	w0, 4b20 <PySequence_Fast@plt+0x2a50>
    4b90:	b	4bac <PySequence_Fast@plt+0x2adc>
    4b94:	add	x0, x24, x0
    4b98:	ldrh	w0, [x0, #2]
    4b9c:	cmp	w0, #0x2f
    4ba0:	b.ls	4b60 <PySequence_Fast@plt+0x2a90>  // b.plast
    4ba4:	cmp	w0, #0x39
    4ba8:	b.hi	4b60 <PySequence_Fast@plt+0x2a90>  // b.pmore
    4bac:	add	x23, x23, #0x2
    4bb0:	cmp	x2, x23
    4bb4:	b.lt	4c9c <PySequence_Fast@plt+0x2bcc>  // b.tstop
    4bb8:	cmp	w25, #0x1
    4bbc:	b.ne	4bec <PySequence_Fast@plt+0x2b1c>  // b.any
    4bc0:	ldrb	w0, [x24, x23]
    4bc4:	sub	w0, w0, #0x30
    4bc8:	and	w0, w0, #0xff
    4bcc:	cmp	w0, #0x9
    4bd0:	b.ls	4be4 <PySequence_Fast@plt+0x2b14>  // b.plast
    4bd4:	mov	w0, w25
    4bd8:	cmp	x2, x23
    4bdc:	b.gt	49cc <PySequence_Fast@plt+0x28fc>
    4be0:	b	4c9c <PySequence_Fast@plt+0x2bcc>
    4be4:	add	x23, x23, #0x1
    4be8:	b	4bb0 <PySequence_Fast@plt+0x2ae0>
    4bec:	cmp	w25, #0x2
    4bf0:	b.ne	4c18 <PySequence_Fast@plt+0x2b48>  // b.any
    4bf4:	ldrh	w0, [x24, x23, lsl #1]
    4bf8:	sub	w0, w0, #0x30
    4bfc:	and	w0, w0, #0xffff
    4c00:	cmp	w0, #0x9
    4c04:	b.ls	4be4 <PySequence_Fast@plt+0x2b14>  // b.plast
    4c08:	cmp	x2, x23
    4c0c:	mov	w0, #0x1                   	// #1
    4c10:	b.gt	4b64 <PySequence_Fast@plt+0x2a94>
    4c14:	b	4c9c <PySequence_Fast@plt+0x2bcc>
    4c18:	ldr	w0, [x24, x23, lsl #2]
    4c1c:	sub	w0, w0, #0x30
    4c20:	cmp	w0, #0x9
    4c24:	b.ls	4be4 <PySequence_Fast@plt+0x2b14>  // b.plast
    4c28:	cmp	x2, x23
    4c2c:	mov	w0, #0x1                   	// #1
    4c30:	b.gt	4b34 <PySequence_Fast@plt+0x2a64>
    4c34:	b	4c9c <PySequence_Fast@plt+0x2bcc>
    4c38:	cmp	w25, #0x2
    4c3c:	b.ne	4c48 <PySequence_Fast@plt+0x2b78>  // b.any
    4c40:	ldrh	w3, [x24, x23, lsl #1]
    4c44:	b	49fc <PySequence_Fast@plt+0x292c>
    4c48:	ldr	w3, [x24, x23, lsl #2]
    4c4c:	b	49fc <PySequence_Fast@plt+0x292c>
    4c50:	cmp	w3, #0x2b
    4c54:	b.eq	4a04 <PySequence_Fast@plt+0x2934>  // b.none
    4c58:	cmp	x2, x23
    4c5c:	b.lt	4d50 <PySequence_Fast@plt+0x2c80>  // b.tstop
    4c60:	cmp	w25, #0x1
    4c64:	b.ne	4d00 <PySequence_Fast@plt+0x2c30>  // b.any
    4c68:	ldrb	w3, [x24, x23]
    4c6c:	sub	w3, w3, #0x30
    4c70:	and	w3, w3, #0xff
    4c74:	cmp	w3, #0x9
    4c78:	b.ls	4cf8 <PySequence_Fast@plt+0x2c28>  // b.plast
    4c7c:	add	x2, x24, x23
    4c80:	ldurb	w2, [x2, #-1]
    4c84:	sub	w2, w2, #0x30
    4c88:	and	w2, w2, #0xff
    4c8c:	cmp	w2, #0x9
    4c90:	b.ls	4c9c <PySequence_Fast@plt+0x2bcc>  // b.plast
    4c94:	mov	x23, x4
    4c98:	cbz	w0, 4a9c <PySequence_Fast@plt+0x29cc>
    4c9c:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    4ca0:	mov	w26, #0x1                   	// #1
    4ca4:	ldr	x21, [x21, #40]
    4ca8:	ldr	x0, [x0, #3952]
    4cac:	cmp	x21, x0
    4cb0:	b.eq	4d64 <PySequence_Fast@plt+0x2c94>  // b.none
    4cb4:	cbz	x21, 4d64 <PySequence_Fast@plt+0x2c94>
    4cb8:	and	x1, x1, #0xff
    4cbc:	sub	x2, x23, x19
    4cc0:	mov	w0, w25
    4cc4:	madd	x1, x1, x19, x24
    4cc8:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    4ccc:	mov	x20, x0
    4cd0:	cbz	x0, 3af4 <PySequence_Fast@plt+0x1a24>
    4cd4:	mov	x1, x0
    4cd8:	mov	x2, #0x0                   	// #0
    4cdc:	mov	x0, x21
    4ce0:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4ce4:	mov	x19, x0
    4ce8:	mov	x0, x20
    4cec:	bl	2f48 <PySequence_Fast@plt+0xe78>
    4cf0:	str	x23, [x22]
    4cf4:	b	3af8 <PySequence_Fast@plt+0x1a28>
    4cf8:	add	x23, x23, #0x1
    4cfc:	b	4c58 <PySequence_Fast@plt+0x2b88>
    4d00:	cmp	w25, #0x2
    4d04:	b.ne	4d30 <PySequence_Fast@plt+0x2c60>  // b.any
    4d08:	ldrh	w3, [x24, x23, lsl #1]
    4d0c:	sub	w3, w3, #0x30
    4d10:	and	w3, w3, #0xffff
    4d14:	cmp	w3, #0x9
    4d18:	b.ls	4cf8 <PySequence_Fast@plt+0x2c28>  // b.plast
    4d1c:	add	x2, x24, x23, lsl #1
    4d20:	ldurh	w2, [x2, #-2]
    4d24:	sub	w2, w2, #0x30
    4d28:	and	w2, w2, #0xffff
    4d2c:	b	4c8c <PySequence_Fast@plt+0x2bbc>
    4d30:	ldr	w3, [x24, x23, lsl #2]
    4d34:	sub	w3, w3, #0x30
    4d38:	cmp	w3, #0x9
    4d3c:	b.ls	4cf8 <PySequence_Fast@plt+0x2c28>  // b.plast
    4d40:	add	x2, x24, x23, lsl #2
    4d44:	ldur	w2, [x2, #-4]
    4d48:	sub	w2, w2, #0x30
    4d4c:	b	4c8c <PySequence_Fast@plt+0x2bbc>
    4d50:	cmp	w25, #0x1
    4d54:	b.eq	4c7c <PySequence_Fast@plt+0x2bac>  // b.none
    4d58:	cmp	w25, #0x2
    4d5c:	b.ne	4d40 <PySequence_Fast@plt+0x2c70>  // b.any
    4d60:	b	4d1c <PySequence_Fast@plt+0x2c4c>
    4d64:	sub	x21, x23, x19
    4d68:	mov	x0, #0x0                   	// #0
    4d6c:	mov	x1, x21
    4d70:	bl	1e20 <PyBytes_FromStringAndSize@plt>
    4d74:	mov	x20, x0
    4d78:	cbz	x0, 3af4 <PySequence_Fast@plt+0x1a24>
    4d7c:	add	x5, x24, x19, lsl #2
    4d80:	add	x6, x24, x19, lsl #1
    4d84:	add	x0, x0, #0x20
    4d88:	add	x19, x24, x19
    4d8c:	mov	x3, #0x0                   	// #0
    4d90:	cmp	x21, x3
    4d94:	b.gt	4da8 <PySequence_Fast@plt+0x2cd8>
    4d98:	cbz	w26, 4ddc <PySequence_Fast@plt+0x2d0c>
    4d9c:	mov	x0, x20
    4da0:	bl	20c0 <PyFloat_FromString@plt>
    4da4:	b	4ce4 <PySequence_Fast@plt+0x2c14>
    4da8:	cmp	w25, #0x1
    4dac:	b.ne	4dc0 <PySequence_Fast@plt+0x2cf0>  // b.any
    4db0:	ldrb	w4, [x19, x3]
    4db4:	strb	w4, [x0, x3]
    4db8:	add	x3, x3, #0x1
    4dbc:	b	4d90 <PySequence_Fast@plt+0x2cc0>
    4dc0:	cmp	w25, #0x2
    4dc4:	b.ne	4dd4 <PySequence_Fast@plt+0x2d04>  // b.any
    4dc8:	ldrh	w1, [x6, x3, lsl #1]
    4dcc:	and	w4, w1, #0xff
    4dd0:	b	4db4 <PySequence_Fast@plt+0x2ce4>
    4dd4:	ldr	w1, [x5, x3, lsl #2]
    4dd8:	b	4dcc <PySequence_Fast@plt+0x2cfc>
    4ddc:	mov	w2, #0xa                   	// #10
    4de0:	mov	x1, #0x0                   	// #0
    4de4:	bl	2060 <PyLong_FromString@plt>
    4de8:	b	4ce4 <PySequence_Fast@plt+0x2c14>
    4dec:	b.ne	4444 <PySequence_Fast@plt+0x2374>  // b.any
    4df0:	ldrb	w0, [x27, x20]
    4df4:	cmp	w0, #0x5d
    4df8:	b.eq	4450 <PySequence_Fast@plt+0x2380>  // b.none
    4dfc:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4e00:	mov	x2, x23
    4e04:	mov	x1, x26
    4e08:	add	x0, x0, #0xd51
    4e0c:	b	43cc <PySequence_Fast@plt+0x22fc>
    4e10:	ldrh	w0, [x27, x28, lsl #1]
    4e14:	b	40d8 <PySequence_Fast@plt+0x2008>
    4e18:	ldrh	w0, [x27, x2, lsl #1]
    4e1c:	b	3f38 <PySequence_Fast@plt+0x1e68>
    4e20:	stp	x29, x30, [sp, #-64]!
    4e24:	adrp	x3, 17000 <PyInit__json@@Base+0x11668>
    4e28:	add	x3, x3, #0x1b0
    4e2c:	mov	x29, sp
    4e30:	stp	x19, x20, [sp, #16]
    4e34:	mov	x20, x0
    4e38:	mov	x0, x1
    4e3c:	mov	x1, x2
    4e40:	mov	x2, #0xffffffffffffffff    	// #-1
    4e44:	add	x5, sp, #0x30
    4e48:	add	x4, sp, #0x28
    4e4c:	add	x3, x3, #0x60
    4e50:	str	x2, [sp, #56]
    4e54:	adrp	x2, 5000 <PySequence_Fast@plt+0x2f30>
    4e58:	add	x2, x2, #0xd61
    4e5c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    4e60:	cbnz	w0, 4e74 <PySequence_Fast@plt+0x2da4>
    4e64:	mov	x0, #0x0                   	// #0
    4e68:	ldp	x19, x20, [sp, #16]
    4e6c:	ldp	x29, x30, [sp], #64
    4e70:	ret
    4e74:	ldr	x1, [sp, #40]
    4e78:	ldr	x0, [x1, #8]
    4e7c:	ldr	x2, [x0, #168]
    4e80:	tbz	w2, #28, 4eb4 <PySequence_Fast@plt+0x2de4>
    4e84:	ldr	x2, [sp, #48]
    4e88:	add	x3, sp, #0x38
    4e8c:	mov	x0, x20
    4e90:	bl	3aa0 <PySequence_Fast@plt+0x19d0>
    4e94:	mov	x19, x0
    4e98:	ldr	x0, [x20, #64]
    4e9c:	bl	1ed0 <PyDict_Clear@plt>
    4ea0:	cbz	x19, 4e64 <PySequence_Fast@plt+0x2d94>
    4ea4:	ldr	x1, [sp, #56]
    4ea8:	mov	x0, x19
    4eac:	bl	38bc <PySequence_Fast@plt+0x17ec>
    4eb0:	b	4e68 <PySequence_Fast@plt+0x2d98>
    4eb4:	ldr	x2, [x0, #24]
    4eb8:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    4ebc:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    4ec0:	add	x1, x1, #0xadb
    4ec4:	ldr	x0, [x0, #3976]
    4ec8:	ldr	x0, [x0]
    4ecc:	bl	2040 <PyErr_Format@plt>
    4ed0:	b	4e64 <PySequence_Fast@plt+0x2d94>
    4ed4:	stp	x29, x30, [sp, #-32]!
    4ed8:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    4edc:	mov	x29, sp
    4ee0:	ldr	x1, [x1, #4016]
    4ee4:	stp	x19, x20, [sp, #16]
    4ee8:	cmp	x0, x1
    4eec:	b.ne	4f38 <PySequence_Fast@plt+0x2e68>  // b.any
    4ef0:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    4ef4:	add	x20, x0, #0x8f0
    4ef8:	mov	x19, x0
    4efc:	ldr	x1, [x20, #16]
    4f00:	cbnz	x1, 4f14 <PySequence_Fast@plt+0x2e44>
    4f04:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4f08:	add	x0, x0, #0xd6e
    4f0c:	bl	2000 <PyUnicode_InternFromString@plt>
    4f10:	str	x0, [x20, #16]
    4f14:	add	x0, x19, #0x8f0
    4f18:	ldr	x0, [x0, #16]
    4f1c:	cbz	x0, 4f2c <PySequence_Fast@plt+0x2e5c>
    4f20:	ldr	x1, [x0]
    4f24:	add	x1, x1, #0x1
    4f28:	str	x1, [x0]
    4f2c:	ldp	x19, x20, [sp, #16]
    4f30:	ldp	x29, x30, [sp], #32
    4f34:	ret
    4f38:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    4f3c:	ldr	x1, [x1, #4024]
    4f40:	cmp	x0, x1
    4f44:	b.ne	4f78 <PySequence_Fast@plt+0x2ea8>  // b.any
    4f48:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    4f4c:	add	x20, x0, #0x8f0
    4f50:	mov	x19, x0
    4f54:	ldr	x1, [x20, #24]
    4f58:	cbnz	x1, 4f6c <PySequence_Fast@plt+0x2e9c>
    4f5c:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4f60:	add	x0, x0, #0xd73
    4f64:	bl	2000 <PyUnicode_InternFromString@plt>
    4f68:	str	x0, [x20, #24]
    4f6c:	add	x0, x19, #0x8f0
    4f70:	ldr	x0, [x0, #24]
    4f74:	b	4f1c <PySequence_Fast@plt+0x2e4c>
    4f78:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    4f7c:	ldr	x1, [x1, #3992]
    4f80:	cmp	x0, x1
    4f84:	b.ne	4fb8 <PySequence_Fast@plt+0x2ee8>  // b.any
    4f88:	adrp	x0, 17000 <PyInit__json@@Base+0x11668>
    4f8c:	add	x20, x0, #0x8f0
    4f90:	mov	x19, x0
    4f94:	ldr	x1, [x20, #32]
    4f98:	cbnz	x1, 4fac <PySequence_Fast@plt+0x2edc>
    4f9c:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    4fa0:	add	x0, x0, #0xd78
    4fa4:	bl	2000 <PyUnicode_InternFromString@plt>
    4fa8:	str	x0, [x20, #32]
    4fac:	add	x0, x19, #0x8f0
    4fb0:	ldr	x0, [x0, #32]
    4fb4:	b	4f1c <PySequence_Fast@plt+0x2e4c>
    4fb8:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    4fbc:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    4fc0:	add	x1, x1, #0xd7e
    4fc4:	ldr	x0, [x0, #3968]
    4fc8:	ldr	x0, [x0]
    4fcc:	bl	1e60 <PyErr_SetString@plt>
    4fd0:	mov	x0, #0x0                   	// #0
    4fd4:	b	4f2c <PySequence_Fast@plt+0x2e5c>
    4fd8:	stp	x29, x30, [sp, #-144]!
    4fdc:	mov	x29, sp
    4fe0:	stp	x25, x26, [sp, #64]
    4fe4:	adrp	x25, 16000 <PyInit__json@@Base+0x10668>
    4fe8:	stp	x23, x24, [sp, #48]
    4fec:	ldr	x23, [x25, #4016]
    4ff0:	stp	x19, x20, [sp, #16]
    4ff4:	stp	x21, x22, [sp, #32]
    4ff8:	cmp	x2, x23
    4ffc:	mov	x21, x1
    5000:	stp	x27, x28, [sp, #80]
    5004:	mov	x22, x2
    5008:	b.eq	5030 <PySequence_Fast@plt+0x2f60>  // b.none
    500c:	adrp	x20, 16000 <PyInit__json@@Base+0x10668>
    5010:	ldr	x1, [x20, #4024]
    5014:	cmp	x2, x1
    5018:	b.eq	5030 <PySequence_Fast@plt+0x2f60>  // b.none
    501c:	adrp	x1, 16000 <PyInit__json@@Base+0x10668>
    5020:	str	x1, [sp, #104]
    5024:	ldr	x2, [x1, #3992]
    5028:	cmp	x22, x2
    502c:	b.ne	5048 <PySequence_Fast@plt+0x2f78>  // b.any
    5030:	mov	x0, x22
    5034:	bl	4ed4 <PySequence_Fast@plt+0x2e04>
    5038:	mov	x19, x0
    503c:	cbnz	x0, 5140 <PySequence_Fast@plt+0x3070>
    5040:	mov	w20, #0xffffffff            	// #-1
    5044:	b	5158 <PySequence_Fast@plt+0x3088>
    5048:	ldr	x2, [x22, #8]
    504c:	ldr	x1, [x2, #168]
    5050:	tbz	w1, #28, 5060 <PySequence_Fast@plt+0x2f90>
    5054:	mov	x1, x22
    5058:	bl	39bc <PySequence_Fast@plt+0x18ec>
    505c:	b	5038 <PySequence_Fast@plt+0x2f68>
    5060:	tbz	w1, #24, 507c <PySequence_Fast@plt+0x2fac>
    5064:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    5068:	ldr	x0, [x0, #4032]
    506c:	ldr	x1, [x0, #88]
    5070:	mov	x0, x22
    5074:	blr	x1
    5078:	b	5038 <PySequence_Fast@plt+0x2f68>
    507c:	adrp	x27, 16000 <PyInit__json@@Base+0x10668>
    5080:	mov	x19, x0
    5084:	ldr	x1, [x27, #3952]
    5088:	cmp	x2, x1
    508c:	b.ne	50a0 <PySequence_Fast@plt+0x2fd0>  // b.any
    5090:	mov	x1, x22
    5094:	add	x0, x19, #0x44
    5098:	bl	2eb0 <PySequence_Fast@plt+0xde0>
    509c:	b	5038 <PySequence_Fast@plt+0x2f68>
    50a0:	mov	x26, x3
    50a4:	mov	x0, x2
    50a8:	bl	2030 <PyType_IsSubtype@plt>
    50ac:	cbnz	w0, 5090 <PySequence_Fast@plt+0x2fc0>
    50b0:	ldr	x0, [x22, #8]
    50b4:	ldr	x0, [x0, #168]
    50b8:	tst	x0, #0x6000000
    50bc:	b.eq	5374 <PySequence_Fast@plt+0x32a4>  // b.none
    50c0:	bl	1f20 <PyThreadState_Get@plt>
    50c4:	adrp	x27, 16000 <PyInit__json@@Base+0x10668>
    50c8:	ldr	w1, [x0, #32]
    50cc:	add	w1, w1, #0x1
    50d0:	str	w1, [x0, #32]
    50d4:	ldr	x0, [x27, #3984]
    50d8:	ldr	w0, [x0]
    50dc:	cmp	w1, w0
    50e0:	b.gt	5178 <PySequence_Fast@plt+0x30a8>
    50e4:	adrp	x23, 17000 <PyInit__json@@Base+0x11668>
    50e8:	add	x0, x23, #0x8f0
    50ec:	ldr	x1, [x0, #40]
    50f0:	cbnz	x1, 518c <PySequence_Fast@plt+0x30bc>
    50f4:	add	x20, x23, #0x8f0
    50f8:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    50fc:	add	x0, x0, #0xdca
    5100:	bl	2000 <PyUnicode_InternFromString@plt>
    5104:	str	x0, [x20, #40]
    5108:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    510c:	add	x0, x0, #0xdcd
    5110:	bl	2000 <PyUnicode_InternFromString@plt>
    5114:	str	x0, [x20, #48]
    5118:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    511c:	add	x0, x0, #0xdcc
    5120:	bl	2000 <PyUnicode_InternFromString@plt>
    5124:	ldr	x1, [x20, #40]
    5128:	str	x0, [x20, #56]
    512c:	cbz	x1, 51b4 <PySequence_Fast@plt+0x30e4>
    5130:	ldr	x1, [x20, #48]
    5134:	cbz	x1, 51b4 <PySequence_Fast@plt+0x30e4>
    5138:	cbnz	x0, 519c <PySequence_Fast@plt+0x30cc>
    513c:	b	51b4 <PySequence_Fast@plt+0x30e4>
    5140:	mov	x1, x0
    5144:	mov	x0, x21
    5148:	bl	1e70 <_PyAccu_Accumulate@plt>
    514c:	mov	w20, w0
    5150:	mov	x0, x19
    5154:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5158:	mov	w0, w20
    515c:	ldp	x19, x20, [sp, #16]
    5160:	ldp	x21, x22, [sp, #32]
    5164:	ldp	x23, x24, [sp, #48]
    5168:	ldp	x25, x26, [sp, #64]
    516c:	ldp	x27, x28, [sp, #80]
    5170:	ldp	x29, x30, [sp], #144
    5174:	ret
    5178:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    517c:	add	x0, x0, #0xd8a
    5180:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    5184:	cbz	w0, 50e4 <PySequence_Fast@plt+0x3014>
    5188:	b	5040 <PySequence_Fast@plt+0x2f70>
    518c:	ldr	x1, [x0, #48]
    5190:	cbz	x1, 50f4 <PySequence_Fast@plt+0x3024>
    5194:	ldr	x0, [x0, #56]
    5198:	cbz	x0, 50f4 <PySequence_Fast@plt+0x3024>
    519c:	mov	x0, x22
    51a0:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    51a4:	add	x1, x1, #0xda8
    51a8:	bl	20d0 <PySequence_Fast@plt>
    51ac:	mov	x24, x0
    51b0:	cbnz	x0, 51bc <PySequence_Fast@plt+0x30ec>
    51b4:	mov	w20, #0xffffffff            	// #-1
    51b8:	b	51dc <PySequence_Fast@plt+0x310c>
    51bc:	ldr	x1, [x0, #16]
    51c0:	cbnz	x1, 521c <PySequence_Fast@plt+0x314c>
    51c4:	add	x23, x23, #0x8f0
    51c8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    51cc:	mov	x0, x21
    51d0:	ldr	x1, [x23, #56]
    51d4:	bl	1e70 <_PyAccu_Accumulate@plt>
    51d8:	mov	w20, w0
    51dc:	bl	1f20 <PyThreadState_Get@plt>
    51e0:	ldr	w1, [x0, #32]
    51e4:	ldr	x27, [x27, #3984]
    51e8:	sub	w1, w1, #0x1
    51ec:	str	w1, [x0, #32]
    51f0:	ldr	w2, [x27]
    51f4:	asr	w0, w2, #2
    51f8:	cmp	w2, #0xc9
    51fc:	sub	w3, w2, #0x32
    5200:	add	w0, w0, w0, lsl #1
    5204:	csel	w0, w0, w3, lt  // lt = tstop
    5208:	cmp	w1, w0
    520c:	b.ge	5158 <PySequence_Fast@plt+0x3088>  // b.tcont
    5210:	bl	1f20 <PyThreadState_Get@plt>
    5214:	strb	wzr, [x0, #36]
    5218:	b	5158 <PySequence_Fast@plt+0x3088>
    521c:	ldr	x0, [x25, #4016]
    5220:	ldr	x1, [x19, #16]
    5224:	cmp	x1, x0
    5228:	b.eq	5310 <PySequence_Fast@plt+0x3240>  // b.none
    522c:	mov	x0, x22
    5230:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    5234:	mov	x20, x0
    5238:	cbz	x0, 536c <PySequence_Fast@plt+0x329c>
    523c:	mov	x1, x0
    5240:	ldr	x0, [x19, #16]
    5244:	bl	1e10 <PyDict_Contains@plt>
    5248:	cbz	w0, 5280 <PySequence_Fast@plt+0x31b0>
    524c:	cmn	w0, #0x1
    5250:	b.eq	526c <PySequence_Fast@plt+0x319c>  // b.none
    5254:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    5258:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    525c:	add	x1, x1, #0xdcf
    5260:	ldr	x0, [x0, #3968]
    5264:	ldr	x0, [x0]
    5268:	bl	1e60 <PyErr_SetString@plt>
    526c:	mov	x0, x20
    5270:	bl	3018 <PySequence_Fast@plt+0xf48>
    5274:	mov	x0, x24
    5278:	bl	2f48 <PySequence_Fast@plt+0xe78>
    527c:	b	51b4 <PySequence_Fast@plt+0x30e4>
    5280:	ldr	x0, [x19, #16]
    5284:	mov	x2, x22
    5288:	mov	x1, x20
    528c:	bl	2020 <PyDict_SetItem@plt>
    5290:	cbnz	w0, 526c <PySequence_Fast@plt+0x319c>
    5294:	add	x0, x23, #0x8f0
    5298:	ldr	x1, [x0, #40]
    529c:	mov	x0, x21
    52a0:	bl	1e70 <_PyAccu_Accumulate@plt>
    52a4:	cbnz	w0, 526c <PySequence_Fast@plt+0x319c>
    52a8:	ldr	x25, [x25, #4016]
    52ac:	ldr	x0, [x19, #40]
    52b0:	cmp	x0, x25
    52b4:	b.eq	52bc <PySequence_Fast@plt+0x31ec>  // b.none
    52b8:	add	x26, x26, #0x1
    52bc:	add	x28, x24, #0x18
    52c0:	mov	x22, #0x0                   	// #0
    52c4:	ldr	x0, [x24, #16]
    52c8:	cmp	x22, x0
    52cc:	b.lt	5318 <PySequence_Fast@plt+0x3248>  // b.tstop
    52d0:	cbz	x20, 52ec <PySequence_Fast@plt+0x321c>
    52d4:	ldr	x0, [x19, #16]
    52d8:	mov	x1, x20
    52dc:	bl	1f30 <PyDict_DelItem@plt>
    52e0:	cbnz	w0, 526c <PySequence_Fast@plt+0x319c>
    52e4:	mov	x0, x20
    52e8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    52ec:	add	x23, x23, #0x8f0
    52f0:	mov	x0, x21
    52f4:	ldr	x1, [x23, #48]
    52f8:	bl	1e70 <_PyAccu_Accumulate@plt>
    52fc:	mov	w20, w0
    5300:	cbnz	w0, 536c <PySequence_Fast@plt+0x329c>
    5304:	mov	x0, x24
    5308:	bl	2f48 <PySequence_Fast@plt+0xe78>
    530c:	b	51dc <PySequence_Fast@plt+0x310c>
    5310:	mov	x20, #0x0                   	// #0
    5314:	b	5294 <PySequence_Fast@plt+0x31c4>
    5318:	ldr	x0, [x24, #8]
    531c:	ldr	x0, [x0, #168]
    5320:	tbz	w0, #25, 5350 <PySequence_Fast@plt+0x3280>
    5324:	ldr	x0, [x24, #24]
    5328:	ldr	x25, [x0, x22, lsl #3]
    532c:	cbnz	x22, 5358 <PySequence_Fast@plt+0x3288>
    5330:	mov	x3, x26
    5334:	mov	x2, x25
    5338:	mov	x1, x21
    533c:	mov	x0, x19
    5340:	bl	4fd8 <PySequence_Fast@plt+0x2f08>
    5344:	cbnz	w0, 526c <PySequence_Fast@plt+0x319c>
    5348:	add	x22, x22, #0x1
    534c:	b	52c4 <PySequence_Fast@plt+0x31f4>
    5350:	ldr	x25, [x28, x22, lsl #3]
    5354:	b	532c <PySequence_Fast@plt+0x325c>
    5358:	ldr	x1, [x19, #56]
    535c:	mov	x0, x21
    5360:	bl	1e70 <_PyAccu_Accumulate@plt>
    5364:	cbz	w0, 5330 <PySequence_Fast@plt+0x3260>
    5368:	b	526c <PySequence_Fast@plt+0x319c>
    536c:	mov	x20, #0x0                   	// #0
    5370:	b	526c <PySequence_Fast@plt+0x319c>
    5374:	tbz	w0, #29, 57b4 <PySequence_Fast@plt+0x36e4>
    5378:	bl	1f20 <PyThreadState_Get@plt>
    537c:	ldr	w1, [x0, #32]
    5380:	add	w1, w1, #0x1
    5384:	str	w1, [x0, #32]
    5388:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    538c:	str	x0, [sp, #112]
    5390:	ldr	x2, [x0, #3984]
    5394:	ldr	w2, [x2]
    5398:	cmp	w1, w2
    539c:	b.gt	5400 <PySequence_Fast@plt+0x3330>
    53a0:	adrp	x24, 17000 <PyInit__json@@Base+0x11668>
    53a4:	add	x0, x24, #0x8f0
    53a8:	ldr	x1, [x0, #64]
    53ac:	cbnz	x1, 5414 <PySequence_Fast@plt+0x3344>
    53b0:	add	x23, x24, #0x8f0
    53b4:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    53b8:	add	x0, x0, #0xdeb
    53bc:	bl	2000 <PyUnicode_InternFromString@plt>
    53c0:	str	x0, [x23, #64]
    53c4:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    53c8:	add	x0, x0, #0xdee
    53cc:	bl	2000 <PyUnicode_InternFromString@plt>
    53d0:	str	x0, [x23, #72]
    53d4:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    53d8:	add	x0, x0, #0xded
    53dc:	bl	2000 <PyUnicode_InternFromString@plt>
    53e0:	ldr	x1, [x23, #64]
    53e4:	str	x0, [x23, #80]
    53e8:	cbz	x1, 53f8 <PySequence_Fast@plt+0x3328>
    53ec:	ldr	x1, [x23, #72]
    53f0:	cbz	x1, 53f8 <PySequence_Fast@plt+0x3328>
    53f4:	cbnz	x0, 5424 <PySequence_Fast@plt+0x3354>
    53f8:	mov	w20, #0xffffffff            	// #-1
    53fc:	b	5440 <PySequence_Fast@plt+0x3370>
    5400:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    5404:	add	x0, x0, #0xd8a
    5408:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    540c:	cbz	w0, 53a0 <PySequence_Fast@plt+0x32d0>
    5410:	b	5040 <PySequence_Fast@plt+0x2f70>
    5414:	ldr	x1, [x0, #72]
    5418:	cbz	x1, 53b0 <PySequence_Fast@plt+0x32e0>
    541c:	ldr	x0, [x0, #80]
    5420:	cbz	x0, 53b0 <PySequence_Fast@plt+0x32e0>
    5424:	ldr	x0, [x22, #16]
    5428:	cbnz	x0, 5460 <PySequence_Fast@plt+0x3390>
    542c:	add	x24, x24, #0x8f0
    5430:	mov	x0, x21
    5434:	ldr	x1, [x24, #80]
    5438:	bl	1e70 <_PyAccu_Accumulate@plt>
    543c:	mov	w20, w0
    5440:	bl	1f20 <PyThreadState_Get@plt>
    5444:	ldr	w1, [x0, #32]
    5448:	sub	w1, w1, #0x1
    544c:	str	w1, [x0, #32]
    5450:	ldr	x0, [sp, #112]
    5454:	ldr	x0, [x0, #3984]
    5458:	ldr	w2, [x0]
    545c:	b	51f4 <PySequence_Fast@plt+0x3124>
    5460:	ldr	x0, [x25, #4016]
    5464:	ldr	x1, [x19, #16]
    5468:	cmp	x1, x0
    546c:	b.eq	5524 <PySequence_Fast@plt+0x3454>  // b.none
    5470:	mov	x0, x22
    5474:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    5478:	mov	x23, x0
    547c:	cbz	x0, 54b0 <PySequence_Fast@plt+0x33e0>
    5480:	mov	x1, x0
    5484:	ldr	x0, [x19, #16]
    5488:	bl	1e10 <PyDict_Contains@plt>
    548c:	cbz	w0, 54bc <PySequence_Fast@plt+0x33ec>
    5490:	cmn	w0, #0x1
    5494:	b.eq	54b0 <PySequence_Fast@plt+0x33e0>  // b.none
    5498:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    549c:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    54a0:	add	x1, x1, #0xdcf
    54a4:	ldr	x0, [x0, #3968]
    54a8:	ldr	x0, [x0]
    54ac:	bl	1e60 <PyErr_SetString@plt>
    54b0:	mov	x20, #0x0                   	// #0
    54b4:	mov	x22, #0x0                   	// #0
    54b8:	b	5604 <PySequence_Fast@plt+0x3534>
    54bc:	ldr	x0, [x19, #16]
    54c0:	mov	x2, x22
    54c4:	mov	x1, x23
    54c8:	bl	2020 <PyDict_SetItem@plt>
    54cc:	cbnz	w0, 54b0 <PySequence_Fast@plt+0x33e0>
    54d0:	add	x0, x24, #0x8f0
    54d4:	ldr	x1, [x0, #64]
    54d8:	mov	x0, x21
    54dc:	bl	1e70 <_PyAccu_Accumulate@plt>
    54e0:	cbnz	w0, 54b0 <PySequence_Fast@plt+0x33e0>
    54e4:	ldr	x0, [x25, #4016]
    54e8:	ldr	x1, [x19, #40]
    54ec:	cmp	x1, x0
    54f0:	b.eq	54f8 <PySequence_Fast@plt+0x3428>  // b.none
    54f4:	add	x26, x26, #0x1
    54f8:	mov	x0, x22
    54fc:	bl	1d90 <PyMapping_Items@plt>
    5500:	mov	x28, x0
    5504:	cbz	x0, 5798 <PySequence_Fast@plt+0x36c8>
    5508:	ldrb	w1, [x19, #64]
    550c:	cbz	w1, 552c <PySequence_Fast@plt+0x345c>
    5510:	bl	1f80 <PyList_Sort@plt>
    5514:	tbz	w0, #31, 552c <PySequence_Fast@plt+0x345c>
    5518:	mov	x0, x28
    551c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5520:	b	54b0 <PySequence_Fast@plt+0x33e0>
    5524:	mov	x23, #0x0                   	// #0
    5528:	b	54d0 <PySequence_Fast@plt+0x3400>
    552c:	mov	x0, x28
    5530:	bl	1ff0 <PyObject_GetIter@plt>
    5534:	mov	x22, x0
    5538:	mov	x0, x28
    553c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5540:	cbz	x22, 57a4 <PySequence_Fast@plt+0x36d4>
    5544:	ldr	x0, [x20, #4024]
    5548:	str	x0, [sp, #120]
    554c:	ldr	x0, [sp, #104]
    5550:	str	xzr, [sp, #96]
    5554:	ldr	x27, [x27, #3952]
    5558:	ldr	x0, [x0, #3992]
    555c:	str	x0, [sp, #104]
    5560:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    5564:	ldr	x0, [x0, #4032]
    5568:	str	x0, [sp, #128]
    556c:	mov	x0, x22
    5570:	bl	1e50 <PyIter_Next@plt>
    5574:	mov	x20, x0
    5578:	cbnz	x0, 55d4 <PySequence_Fast@plt+0x3504>
    557c:	bl	1f40 <PyErr_Occurred@plt>
    5580:	mov	x28, x0
    5584:	cbnz	x0, 5604 <PySequence_Fast@plt+0x3534>
    5588:	mov	x0, x22
    558c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5590:	cbz	x23, 55ac <PySequence_Fast@plt+0x34dc>
    5594:	ldr	x0, [x19, #16]
    5598:	mov	x1, x23
    559c:	bl	1f30 <PyDict_DelItem@plt>
    55a0:	cbnz	w0, 57ac <PySequence_Fast@plt+0x36dc>
    55a4:	mov	x0, x23
    55a8:	bl	2f48 <PySequence_Fast@plt+0xe78>
    55ac:	add	x24, x24, #0x8f0
    55b0:	mov	x0, x21
    55b4:	ldr	x1, [x24, #72]
    55b8:	bl	1e70 <_PyAccu_Accumulate@plt>
    55bc:	mov	w20, w0
    55c0:	cbz	w0, 5440 <PySequence_Fast@plt+0x3370>
    55c4:	mov	x20, #0x0                   	// #0
    55c8:	mov	x22, #0x0                   	// #0
    55cc:	mov	x23, #0x0                   	// #0
    55d0:	b	5690 <PySequence_Fast@plt+0x35c0>
    55d4:	ldr	x0, [x20, #8]
    55d8:	ldr	x0, [x0, #168]
    55dc:	tbz	w0, #26, 55ec <PySequence_Fast@plt+0x351c>
    55e0:	ldr	x0, [x20, #16]
    55e4:	cmp	x0, #0x2
    55e8:	b.eq	560c <PySequence_Fast@plt+0x353c>  // b.none
    55ec:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    55f0:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    55f4:	add	x1, x1, #0xdf0
    55f8:	ldr	x0, [x0, #3968]
    55fc:	ldr	x0, [x0]
    5600:	bl	1e60 <PyErr_SetString@plt>
    5604:	mov	x28, #0x0                   	// #0
    5608:	b	5690 <PySequence_Fast@plt+0x35c0>
    560c:	ldr	x28, [x20, #24]
    5610:	ldr	x0, [x28, #8]
    5614:	ldr	x1, [x0, #168]
    5618:	tbz	w1, #28, 5674 <PySequence_Fast@plt+0x35a4>
    561c:	ldr	x0, [x28]
    5620:	add	x0, x0, #0x1
    5624:	str	x0, [x28]
    5628:	ldr	x0, [sp, #96]
    562c:	cbnz	x0, 5744 <PySequence_Fast@plt+0x3674>
    5630:	mov	x1, x28
    5634:	mov	x0, x19
    5638:	bl	39bc <PySequence_Fast@plt+0x18ec>
    563c:	mov	x1, x0
    5640:	mov	x0, x28
    5644:	str	x1, [sp, #136]
    5648:	bl	2f48 <PySequence_Fast@plt+0xe78>
    564c:	ldr	x1, [sp, #136]
    5650:	cbz	x1, 5604 <PySequence_Fast@plt+0x3534>
    5654:	mov	x0, x21
    5658:	str	x1, [sp, #136]
    565c:	bl	1e70 <_PyAccu_Accumulate@plt>
    5660:	ldr	x1, [sp, #136]
    5664:	cbz	w0, 5758 <PySequence_Fast@plt+0x3688>
    5668:	mov	x0, x1
    566c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5670:	b	5604 <PySequence_Fast@plt+0x3534>
    5674:	cmp	x0, x27
    5678:	b.ne	56b4 <PySequence_Fast@plt+0x35e4>  // b.any
    567c:	mov	x1, x28
    5680:	add	x0, x19, #0x44
    5684:	bl	2eb0 <PySequence_Fast@plt+0xde0>
    5688:	mov	x28, x0
    568c:	cbnz	x0, 5628 <PySequence_Fast@plt+0x3558>
    5690:	mov	x0, x22
    5694:	bl	3018 <PySequence_Fast@plt+0xf48>
    5698:	mov	x0, x20
    569c:	bl	3018 <PySequence_Fast@plt+0xf48>
    56a0:	mov	x0, x28
    56a4:	bl	3018 <PySequence_Fast@plt+0xf48>
    56a8:	mov	x0, x23
    56ac:	bl	3018 <PySequence_Fast@plt+0xf48>
    56b0:	b	53f8 <PySequence_Fast@plt+0x3328>
    56b4:	mov	x1, x27
    56b8:	bl	2030 <PyType_IsSubtype@plt>
    56bc:	cbnz	w0, 567c <PySequence_Fast@plt+0x35ac>
    56c0:	ldr	x0, [sp, #120]
    56c4:	cmp	x28, x0
    56c8:	b.eq	56e4 <PySequence_Fast@plt+0x3614>  // b.none
    56cc:	ldr	x0, [sp, #104]
    56d0:	cmp	x28, x0
    56d4:	b.eq	56e4 <PySequence_Fast@plt+0x3614>  // b.none
    56d8:	ldr	x0, [x25, #4016]
    56dc:	cmp	x28, x0
    56e0:	b.ne	56f0 <PySequence_Fast@plt+0x3620>  // b.any
    56e4:	mov	x0, x28
    56e8:	bl	4ed4 <PySequence_Fast@plt+0x2e04>
    56ec:	b	5688 <PySequence_Fast@plt+0x35b8>
    56f0:	ldr	x0, [x28, #8]
    56f4:	ldr	x1, [x0, #168]
    56f8:	tbz	w1, #24, 5710 <PySequence_Fast@plt+0x3640>
    56fc:	ldr	x0, [sp, #128]
    5700:	ldr	x1, [x0, #88]
    5704:	mov	x0, x28
    5708:	blr	x1
    570c:	b	5688 <PySequence_Fast@plt+0x35b8>
    5710:	ldrb	w1, [x19, #65]
    5714:	cbz	w1, 5724 <PySequence_Fast@plt+0x3654>
    5718:	mov	x0, x20
    571c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5720:	b	556c <PySequence_Fast@plt+0x349c>
    5724:	ldr	x2, [x0, #24]
    5728:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    572c:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    5730:	add	x1, x1, #0xe0b
    5734:	ldr	x0, [x0, #3976]
    5738:	ldr	x0, [x0]
    573c:	bl	2040 <PyErr_Format@plt>
    5740:	b	5604 <PySequence_Fast@plt+0x3534>
    5744:	ldr	x1, [x19, #56]
    5748:	mov	x0, x21
    574c:	bl	1e70 <_PyAccu_Accumulate@plt>
    5750:	cbz	w0, 5630 <PySequence_Fast@plt+0x3560>
    5754:	b	5690 <PySequence_Fast@plt+0x35c0>
    5758:	mov	x0, x1
    575c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5760:	ldr	x1, [x19, #48]
    5764:	mov	x0, x21
    5768:	bl	1e70 <_PyAccu_Accumulate@plt>
    576c:	cbnz	w0, 5604 <PySequence_Fast@plt+0x3534>
    5770:	ldr	x2, [x20, #32]
    5774:	mov	x3, x26
    5778:	mov	x1, x21
    577c:	mov	x0, x19
    5780:	bl	4fd8 <PySequence_Fast@plt+0x2f08>
    5784:	cbnz	w0, 5604 <PySequence_Fast@plt+0x3534>
    5788:	ldr	x0, [sp, #96]
    578c:	add	x0, x0, #0x1
    5790:	str	x0, [sp, #96]
    5794:	b	5718 <PySequence_Fast@plt+0x3648>
    5798:	mov	x20, #0x0                   	// #0
    579c:	mov	x22, #0x0                   	// #0
    57a0:	b	5690 <PySequence_Fast@plt+0x35c0>
    57a4:	mov	x20, #0x0                   	// #0
    57a8:	b	5604 <PySequence_Fast@plt+0x3534>
    57ac:	mov	x20, x28
    57b0:	b	579c <PySequence_Fast@plt+0x36cc>
    57b4:	ldr	x0, [x19, #16]
    57b8:	cmp	x0, x23
    57bc:	b.eq	5844 <PySequence_Fast@plt+0x3774>  // b.none
    57c0:	mov	x0, x22
    57c4:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    57c8:	mov	x23, x0
    57cc:	cbz	x0, 5040 <PySequence_Fast@plt+0x2f70>
    57d0:	mov	x1, x0
    57d4:	ldr	x0, [x19, #16]
    57d8:	bl	1e10 <PyDict_Contains@plt>
    57dc:	cbz	w0, 580c <PySequence_Fast@plt+0x373c>
    57e0:	cmn	w0, #0x1
    57e4:	b.eq	5800 <PySequence_Fast@plt+0x3730>  // b.none
    57e8:	adrp	x0, 16000 <PyInit__json@@Base+0x10668>
    57ec:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    57f0:	add	x1, x1, #0xdcf
    57f4:	ldr	x0, [x0, #3968]
    57f8:	ldr	x0, [x0]
    57fc:	bl	1e60 <PyErr_SetString@plt>
    5800:	mov	x0, x23
    5804:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5808:	b	5040 <PySequence_Fast@plt+0x2f70>
    580c:	ldr	x0, [x19, #16]
    5810:	mov	x2, x22
    5814:	mov	x1, x23
    5818:	bl	2020 <PyDict_SetItem@plt>
    581c:	cbnz	w0, 5800 <PySequence_Fast@plt+0x3730>
    5820:	ldr	x0, [x19, #24]
    5824:	mov	x1, x22
    5828:	mov	x2, #0x0                   	// #0
    582c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5830:	mov	x22, x0
    5834:	cbnz	x0, 584c <PySequence_Fast@plt+0x377c>
    5838:	mov	x0, x23
    583c:	bl	3018 <PySequence_Fast@plt+0xf48>
    5840:	b	5040 <PySequence_Fast@plt+0x2f70>
    5844:	mov	x23, #0x0                   	// #0
    5848:	b	5820 <PySequence_Fast@plt+0x3750>
    584c:	bl	1f20 <PyThreadState_Get@plt>
    5850:	adrp	x24, 16000 <PyInit__json@@Base+0x10668>
    5854:	ldr	w1, [x0, #32]
    5858:	add	w1, w1, #0x1
    585c:	str	w1, [x0, #32]
    5860:	ldr	x0, [x24, #3984]
    5864:	ldr	w0, [x0]
    5868:	cmp	w1, w0
    586c:	b.le	588c <PySequence_Fast@plt+0x37bc>
    5870:	adrp	x0, 5000 <PySequence_Fast@plt+0x2f30>
    5874:	add	x0, x0, #0xd8a
    5878:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    587c:	cbz	w0, 588c <PySequence_Fast@plt+0x37bc>
    5880:	mov	x0, x22
    5884:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5888:	b	5838 <PySequence_Fast@plt+0x3768>
    588c:	mov	x3, x26
    5890:	mov	x2, x22
    5894:	mov	x1, x21
    5898:	mov	x0, x19
    589c:	bl	4fd8 <PySequence_Fast@plt+0x2f08>
    58a0:	mov	w20, w0
    58a4:	bl	1f20 <PyThreadState_Get@plt>
    58a8:	ldr	w1, [x0, #32]
    58ac:	ldr	x24, [x24, #3984]
    58b0:	sub	w1, w1, #0x1
    58b4:	str	w1, [x0, #32]
    58b8:	ldr	w2, [x24]
    58bc:	cmp	w2, #0xc9
    58c0:	sub	w3, w2, #0x32
    58c4:	asr	w0, w2, #2
    58c8:	add	w0, w0, w0, lsl #1
    58cc:	csel	w0, w0, w3, lt  // lt = tstop
    58d0:	cmp	w1, w0
    58d4:	b.ge	58e0 <PySequence_Fast@plt+0x3810>  // b.tcont
    58d8:	bl	1f20 <PyThreadState_Get@plt>
    58dc:	strb	wzr, [x0, #36]
    58e0:	mov	x0, x22
    58e4:	bl	2f48 <PySequence_Fast@plt+0xe78>
    58e8:	cbnz	w20, 5838 <PySequence_Fast@plt+0x3768>
    58ec:	cbz	x23, 5158 <PySequence_Fast@plt+0x3088>
    58f0:	ldr	x0, [x19, #16]
    58f4:	mov	x1, x23
    58f8:	bl	1f30 <PyDict_DelItem@plt>
    58fc:	mov	w20, w0
    5900:	mov	x0, x23
    5904:	cbnz	w20, 583c <PySequence_Fast@plt+0x376c>
    5908:	bl	3018 <PySequence_Fast@plt+0xf48>
    590c:	b	5158 <PySequence_Fast@plt+0x3088>
    5910:	stp	x29, x30, [sp, #-64]!
    5914:	adrp	x3, 17000 <PyInit__json@@Base+0x11668>
    5918:	add	x3, x3, #0x1b0
    591c:	mov	x29, sp
    5920:	add	x5, sp, #0x28
    5924:	add	x4, sp, #0x20
    5928:	add	x3, x3, #0x78
    592c:	stp	x19, x20, [sp, #16]
    5930:	mov	x20, x0
    5934:	mov	x0, x1
    5938:	mov	x1, x2
    593c:	adrp	x2, 5000 <PySequence_Fast@plt+0x2f30>
    5940:	add	x2, x2, #0xe42
    5944:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    5948:	cbnz	w0, 595c <PySequence_Fast@plt+0x388c>
    594c:	mov	x0, #0x0                   	// #0
    5950:	ldp	x19, x20, [sp, #16]
    5954:	ldp	x29, x30, [sp], #64
    5958:	ret
    595c:	add	x19, sp, #0x30
    5960:	mov	x0, x19
    5964:	bl	1df0 <_PyAccu_Init@plt>
    5968:	cbnz	w0, 594c <PySequence_Fast@plt+0x387c>
    596c:	ldp	x2, x3, [sp, #32]
    5970:	mov	x1, x19
    5974:	mov	x0, x20
    5978:	bl	4fd8 <PySequence_Fast@plt+0x2f08>
    597c:	cbz	w0, 598c <PySequence_Fast@plt+0x38bc>
    5980:	mov	x0, x19
    5984:	bl	1ee0 <_PyAccu_Destroy@plt>
    5988:	b	594c <PySequence_Fast@plt+0x387c>
    598c:	mov	x0, x19
    5990:	bl	2070 <_PyAccu_FinishAsList@plt>
    5994:	b	5950 <PySequence_Fast@plt+0x3880>

0000000000005998 <PyInit__json@@Base>:
    5998:	stp	x29, x30, [sp, #-48]!
    599c:	mov	w1, #0x3f5                 	// #1013
    59a0:	mov	x29, sp
    59a4:	stp	x19, x20, [sp, #16]
    59a8:	adrp	x19, 17000 <PyInit__json@@Base+0x11668>
    59ac:	add	x19, x19, #0x1b0
    59b0:	add	x0, x19, #0x90
    59b4:	stp	x21, x22, [sp, #32]
    59b8:	bl	1f50 <PyModule_Create2@plt>
    59bc:	mov	x20, x0
    59c0:	cbz	x0, 5a1c <PyInit__json@@Base+0x84>
    59c4:	add	x22, x19, #0xf8
    59c8:	mov	x0, x22
    59cc:	bl	1e90 <PyType_Ready@plt>
    59d0:	tbnz	w0, #31, 5a10 <PyInit__json@@Base+0x78>
    59d4:	add	x21, x19, #0x298
    59d8:	mov	x0, x21
    59dc:	bl	1e90 <PyType_Ready@plt>
    59e0:	tbnz	w0, #31, 5a10 <PyInit__json@@Base+0x78>
    59e4:	ldr	x0, [x19, #248]
    59e8:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    59ec:	mov	x2, x22
    59f0:	add	x1, x1, #0xb47
    59f4:	add	x0, x0, #0x1
    59f8:	str	x0, [x19, #248]
    59fc:	mov	x0, x20
    5a00:	bl	2010 <PyModule_AddObject@plt>
    5a04:	tbz	w0, #31, 5a30 <PyInit__json@@Base+0x98>
    5a08:	mov	x0, x22
    5a0c:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5a10:	mov	x0, x20
    5a14:	mov	x20, #0x0                   	// #0
    5a18:	bl	2f48 <PySequence_Fast@plt+0xe78>
    5a1c:	mov	x0, x20
    5a20:	ldp	x19, x20, [sp, #16]
    5a24:	ldp	x21, x22, [sp, #32]
    5a28:	ldp	x29, x30, [sp], #48
    5a2c:	ret
    5a30:	ldr	x0, [x19, #664]
    5a34:	adrp	x1, 5000 <PySequence_Fast@plt+0x2f30>
    5a38:	mov	x2, x21
    5a3c:	add	x1, x1, #0xa76
    5a40:	add	x0, x0, #0x1
    5a44:	str	x0, [x19, #664]
    5a48:	mov	x0, x20
    5a4c:	bl	2010 <PyModule_AddObject@plt>
    5a50:	tbz	w0, #31, 5a1c <PyInit__json@@Base+0x84>
    5a54:	mov	x0, x21
    5a58:	b	5a0c <PyInit__json@@Base+0x74>

Disassembly of section .fini:

0000000000005a5c <.fini>:
    5a5c:	stp	x29, x30, [sp, #-16]!
    5a60:	mov	x29, sp
    5a64:	ldp	x29, x30, [sp], #16
    5a68:	ret
