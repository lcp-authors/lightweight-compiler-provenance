
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210c98 <_start>:
  210c98:	mov	x29, #0x0                   	// #0
  210c9c:	mov	x30, #0x0                   	// #0
  210ca0:	mov	x5, x0
  210ca4:	ldr	x1, [sp]
  210ca8:	add	x2, sp, #0x8
  210cac:	mov	x6, sp
  210cb0:	movz	x0, #0x0, lsl #48
  210cb4:	movk	x0, #0x0, lsl #32
  210cb8:	movk	x0, #0x21, lsl #16
  210cbc:	movk	x0, #0xde8
  210cc0:	movz	x3, #0x0, lsl #48
  210cc4:	movk	x3, #0x0, lsl #32
  210cc8:	movk	x3, #0x21, lsl #16
  210ccc:	movk	x3, #0x1110
  210cd0:	movz	x4, #0x0, lsl #48
  210cd4:	movk	x4, #0x0, lsl #32
  210cd8:	movk	x4, #0x21, lsl #16
  210cdc:	movk	x4, #0x1190
  210ce0:	bl	2111e0 <__libc_start_main@plt>
  210ce4:	bl	2111f0 <abort@plt>

0000000000210ce8 <call_weak_fn>:
  210ce8:	adrp	x0, 221000 <log_assert_failed_realm@plt+0xfd30>
  210cec:	ldr	x0, [x0, #1216]
  210cf0:	cbz	x0, 210cf8 <call_weak_fn+0x10>
  210cf4:	b	211200 <__gmon_start__@plt>
  210cf8:	ret

0000000000210cfc <deregister_tm_clones>:
  210cfc:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210d00:	add	x0, x0, #0x560
  210d04:	adrp	x1, 231000 <_DYNAMIC+0xfd10>
  210d08:	add	x1, x1, #0x560
  210d0c:	cmp	x0, x1
  210d10:	b.eq	210d44 <deregister_tm_clones+0x48>  // b.none
  210d14:	stp	x29, x30, [sp, #-32]!
  210d18:	mov	x29, sp
  210d1c:	adrp	x0, 200000 <__FRAME_END__-0xba0>
  210d20:	ldr	x0, [x0, #2256]
  210d24:	str	x0, [sp, #24]
  210d28:	mov	x1, x0
  210d2c:	cbz	x1, 210d3c <deregister_tm_clones+0x40>
  210d30:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210d34:	add	x0, x0, #0x560
  210d38:	blr	x1
  210d3c:	ldp	x29, x30, [sp], #32
  210d40:	ret
  210d44:	ret

0000000000210d48 <register_tm_clones>:
  210d48:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210d4c:	add	x0, x0, #0x560
  210d50:	adrp	x1, 231000 <_DYNAMIC+0xfd10>
  210d54:	add	x1, x1, #0x560
  210d58:	sub	x0, x0, x1
  210d5c:	lsr	x1, x0, #63
  210d60:	add	x0, x1, x0, asr #3
  210d64:	cmp	xzr, x0, asr #1
  210d68:	b.eq	210da0 <register_tm_clones+0x58>  // b.none
  210d6c:	stp	x29, x30, [sp, #-32]!
  210d70:	mov	x29, sp
  210d74:	asr	x1, x0, #1
  210d78:	adrp	x0, 200000 <__FRAME_END__-0xba0>
  210d7c:	ldr	x0, [x0, #2264]
  210d80:	str	x0, [sp, #24]
  210d84:	mov	x2, x0
  210d88:	cbz	x2, 210d98 <register_tm_clones+0x50>
  210d8c:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210d90:	add	x0, x0, #0x560
  210d94:	blr	x2
  210d98:	ldp	x29, x30, [sp], #32
  210d9c:	ret
  210da0:	ret

0000000000210da4 <__do_global_dtors_aux>:
  210da4:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210da8:	ldrb	w0, [x0, #1384]
  210dac:	cbnz	w0, 210dd0 <__do_global_dtors_aux+0x2c>
  210db0:	stp	x29, x30, [sp, #-16]!
  210db4:	mov	x29, sp
  210db8:	bl	210cfc <deregister_tm_clones>
  210dbc:	adrp	x0, 231000 <_DYNAMIC+0xfd10>
  210dc0:	mov	w1, #0x1                   	// #1
  210dc4:	strb	w1, [x0, #1384]
  210dc8:	ldp	x29, x30, [sp], #16
  210dcc:	ret
  210dd0:	ret

0000000000210dd4 <frame_dummy>:
  210dd4:	stp	x29, x30, [sp, #-16]!
  210dd8:	mov	x29, sp
  210ddc:	bl	210d48 <register_tm_clones>
  210de0:	ldp	x29, x30, [sp], #16
  210de4:	ret

0000000000210de8 <main>:
  210de8:	stp	x29, x30, [sp, #-48]!
  210dec:	str	x21, [sp, #16]
  210df0:	stp	x20, x19, [sp, #32]
  210df4:	mov	x29, sp
  210df8:	sub	sp, sp, #0x10
  210dfc:	mov	x19, x1
  210e00:	mov	w20, w0
  210e04:	bl	211210 <log_setup_generator@plt>
  210e08:	cmp	w20, #0x2
  210e0c:	b.lt	210e58 <main+0x70>  // b.tstop
  210e10:	cmp	w20, #0x4
  210e14:	b.eq	210e58 <main+0x70>  // b.none
  210e18:	mov	w0, wzr
  210e1c:	bl	211220 <log_get_max_level_realm@plt>
  210e20:	cmp	w0, #0x3
  210e24:	b.lt	210e50 <main+0x68>  // b.tstop
  210e28:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  210e2c:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  210e30:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  210e34:	add	x2, x2, #0xabc
  210e38:	add	x4, x4, #0xadc
  210e3c:	add	x5, x5, #0xae1
  210e40:	mov	w0, #0x3                   	// #3
  210e44:	mov	w3, #0x1c                  	// #28
  210e48:	mov	w1, wzr
  210e4c:	bl	211230 <log_internal_realm@plt>
  210e50:	mov	w0, #0x1                   	// #1
  210e54:	b	211048 <main+0x260>
  210e58:	cmp	w20, #0x2
  210e5c:	b.lt	210e6c <main+0x84>  // b.tstop
  210e60:	ldr	x8, [x19, #16]
  210e64:	adrp	x9, 231000 <_DYNAMIC+0xfd10>
  210e68:	str	x8, [x9, #1376]
  210e6c:	bl	211240 <in_initrd@plt>
  210e70:	tbz	w0, #0, 210eac <main+0xc4>
  210e74:	mov	w0, wzr
  210e78:	bl	211220 <log_get_max_level_realm@plt>
  210e7c:	cmp	w0, #0x7
  210e80:	mov	w0, wzr
  210e84:	b.lt	211048 <main+0x260>  // b.tstop
  210e88:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  210e8c:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  210e90:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  210e94:	add	x2, x2, #0xabc
  210e98:	add	x4, x4, #0xadc
  210e9c:	add	x5, x5, #0x982
  210ea0:	mov	w0, #0x7                   	// #7
  210ea4:	mov	w3, #0x24                  	// #36
  210ea8:	b	21103c <main+0x254>
  210eac:	bl	211250 <detect_container@plt>
  210eb0:	cmp	w0, #0x1
  210eb4:	b.lt	210ef0 <main+0x108>  // b.tstop
  210eb8:	mov	w0, wzr
  210ebc:	bl	211220 <log_get_max_level_realm@plt>
  210ec0:	cmp	w0, #0x7
  210ec4:	mov	w0, wzr
  210ec8:	b.lt	211048 <main+0x260>  // b.tstop
  210ecc:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  210ed0:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  210ed4:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  210ed8:	add	x2, x2, #0xabc
  210edc:	add	x4, x4, #0xadc
  210ee0:	add	x5, x5, #0x9ad
  210ee4:	mov	w0, #0x7                   	// #7
  210ee8:	mov	w3, #0x29                  	// #41
  210eec:	b	21103c <main+0x254>
  210ef0:	bl	211260 <is_efi_boot@plt>
  210ef4:	tbz	w0, #0, 211008 <main+0x220>
  210ef8:	adrp	x0, 200000 <__FRAME_END__-0xba0>
  210efc:	add	x0, x0, #0xb0b
  210f00:	mov	w1, wzr
  210f04:	bl	211270 <access@plt>
  210f08:	tbnz	w0, #31, 21105c <main+0x274>
  210f0c:	adrp	x8, 231000 <_DYNAMIC+0xfd10>
  210f10:	ldr	x8, [x8, #1376]
  210f14:	adrp	x9, 200000 <__FRAME_END__-0xba0>
  210f18:	mov	x20, xzr
  210f1c:	mov	x19, xzr
  210f20:	add	x9, x9, #0xa29
  210f24:	sub	x21, x29, #0x10
  210f28:	stp	x8, x9, [x29, #-16]
  210f2c:	ldr	x0, [x21, x20]
  210f30:	cbz	x0, 210f48 <main+0x160>
  210f34:	bl	211280 <strlen@plt>
  210f38:	add	x20, x20, #0x8
  210f3c:	cmp	x20, #0x10
  210f40:	add	x19, x0, x19
  210f44:	b.ne	210f2c <main+0x144>  // b.any
  210f48:	add	x19, x19, #0x1
  210f4c:	mov	x0, x19
  210f50:	bl	211104 <size_multiply_overflow>
  210f54:	tbnz	w0, #0, 2110d4 <main+0x2ec>
  210f58:	cmp	x19, #0x400, lsl #12
  210f5c:	b.hi	2110e0 <main+0x2f8>  // b.pmore
  210f60:	add	x9, x19, #0xf
  210f64:	mov	x8, sp
  210f68:	and	x9, x9, #0xfffffffffffffff0
  210f6c:	sub	x19, x8, x9
  210f70:	mov	sp, x19
  210f74:	mov	x20, xzr
  210f78:	sub	x21, x29, #0x10
  210f7c:	mov	x0, x19
  210f80:	ldr	x1, [x21, x20]
  210f84:	cbz	x1, 210f98 <main+0x1b0>
  210f88:	bl	211290 <stpcpy@plt>
  210f8c:	add	x20, x20, #0x8
  210f90:	cmp	x20, #0x10
  210f94:	b.ne	210f80 <main+0x198>  // b.any
  210f98:	strb	wzr, [x0]
  210f9c:	mov	w1, #0x1ed                 	// #493
  210fa0:	mov	x0, x19
  210fa4:	bl	2112a0 <mkdir_parents@plt>
  210fa8:	adrp	x0, 200000 <__FRAME_END__-0xba0>
  210fac:	add	x0, x0, #0x8e0
  210fb0:	mov	x1, x19
  210fb4:	bl	2112b0 <symlink@plt>
  210fb8:	mov	w8, w0
  210fbc:	mov	w0, wzr
  210fc0:	tbz	w8, #31, 211048 <main+0x260>
  210fc4:	mov	w0, wzr
  210fc8:	bl	211220 <log_get_max_level_realm@plt>
  210fcc:	cmp	w0, #0x3
  210fd0:	b.lt	210e50 <main+0x68>  // b.tstop
  210fd4:	bl	2112c0 <__errno_location@plt>
  210fd8:	ldr	w1, [x0]
  210fdc:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  210fe0:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  210fe4:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  210fe8:	add	x2, x2, #0xabc
  210fec:	add	x4, x4, #0xadc
  210ff0:	add	x5, x5, #0xa97
  210ff4:	mov	w0, #0x3                   	// #3
  210ff8:	mov	w3, #0x42                  	// #66
  210ffc:	mov	x6, x19
  211000:	bl	211230 <log_internal_realm@plt>
  211004:	b	210e50 <main+0x68>
  211008:	mov	w0, wzr
  21100c:	bl	211220 <log_get_max_level_realm@plt>
  211010:	cmp	w0, #0x7
  211014:	mov	w0, wzr
  211018:	b.lt	211048 <main+0x260>  // b.tstop
  21101c:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  211020:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  211024:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  211028:	add	x2, x2, #0xabc
  21102c:	add	x4, x4, #0xadc
  211030:	add	x5, x5, #0x9d9
  211034:	mov	w0, #0x7                   	// #7
  211038:	mov	w3, #0x2e                  	// #46
  21103c:	mov	w1, wzr
  211040:	bl	211230 <log_internal_realm@plt>
  211044:	mov	w0, wzr
  211048:	mov	sp, x29
  21104c:	ldp	x20, x19, [sp, #32]
  211050:	ldr	x21, [sp, #16]
  211054:	ldp	x29, x30, [sp], #48
  211058:	ret
  21105c:	bl	2112c0 <__errno_location@plt>
  211060:	ldr	w19, [x0]
  211064:	mov	w0, wzr
  211068:	bl	211220 <log_get_max_level_realm@plt>
  21106c:	cmp	w19, #0x2
  211070:	b.ne	2110a4 <main+0x2bc>  // b.any
  211074:	cmp	w0, #0x7
  211078:	b.lt	211044 <main+0x25c>  // b.tstop
  21107c:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  211080:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  211084:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  211088:	add	x2, x2, #0xabc
  21108c:	add	x4, x4, #0xadc
  211090:	add	x5, x5, #0x945
  211094:	mov	w0, #0x7                   	// #7
  211098:	mov	w1, #0x2                   	// #2
  21109c:	mov	w3, #0x35                  	// #53
  2110a0:	b	211040 <main+0x258>
  2110a4:	cmp	w0, #0x3
  2110a8:	b.lt	210e50 <main+0x68>  // b.tstop
  2110ac:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  2110b0:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  2110b4:	adrp	x5, 200000 <__FRAME_END__-0xba0>
  2110b8:	add	x2, x2, #0xabc
  2110bc:	add	x4, x4, #0xadc
  2110c0:	add	x5, x5, #0xa58
  2110c4:	mov	w0, #0x3                   	// #3
  2110c8:	mov	w3, #0x39                  	// #57
  2110cc:	mov	w1, w19
  2110d0:	b	210e4c <main+0x64>
  2110d4:	adrp	x1, 200000 <__FRAME_END__-0xba0>
  2110d8:	add	x1, x1, #0x9fe
  2110dc:	b	2110e8 <main+0x300>
  2110e0:	adrp	x1, 200000 <__FRAME_END__-0xba0>
  2110e4:	add	x1, x1, #0x90f
  2110e8:	adrp	x2, 200000 <__FRAME_END__-0xba0>
  2110ec:	adrp	x4, 200000 <__FRAME_END__-0xba0>
  2110f0:	add	x2, x2, #0xabc
  2110f4:	add	x4, x4, #0x92e
  2110f8:	mov	w3, #0x3f                  	// #63
  2110fc:	mov	w0, wzr
  211100:	bl	2112d0 <log_assert_failed_realm@plt>

0000000000211104 <size_multiply_overflow>:
  211104:	mov	w0, wzr
  211108:	ret
  21110c:	udf	#0

0000000000211110 <__libc_csu_init>:
  211110:	stp	x29, x30, [sp, #-64]!
  211114:	mov	x29, sp
  211118:	stp	x19, x20, [sp, #16]
  21111c:	adrp	x20, 221000 <log_assert_failed_realm@plt+0xfd30>
  211120:	add	x20, x20, #0x2f0
  211124:	stp	x21, x22, [sp, #32]
  211128:	adrp	x21, 221000 <log_assert_failed_realm@plt+0xfd30>
  21112c:	add	x21, x21, #0x2e8
  211130:	sub	x20, x20, x21
  211134:	mov	w22, w0
  211138:	stp	x23, x24, [sp, #48]
  21113c:	mov	x23, x1
  211140:	mov	x24, x2
  211144:	bl	211194 <_init>
  211148:	cmp	xzr, x20, asr #3
  21114c:	b.eq	211178 <__libc_csu_init+0x68>  // b.none
  211150:	asr	x20, x20, #3
  211154:	mov	x19, #0x0                   	// #0
  211158:	ldr	x3, [x21, x19, lsl #3]
  21115c:	mov	x2, x24
  211160:	add	x19, x19, #0x1
  211164:	mov	x1, x23
  211168:	mov	w0, w22
  21116c:	blr	x3
  211170:	cmp	x20, x19
  211174:	b.ne	211158 <__libc_csu_init+0x48>  // b.any
  211178:	ldp	x19, x20, [sp, #16]
  21117c:	ldp	x21, x22, [sp, #32]
  211180:	ldp	x23, x24, [sp, #48]
  211184:	ldp	x29, x30, [sp], #64
  211188:	ret
  21118c:	nop

0000000000211190 <__libc_csu_fini>:
  211190:	ret

Disassembly of section .init:

0000000000211194 <_init>:
  211194:	stp	x29, x30, [sp, #-16]!
  211198:	mov	x29, sp
  21119c:	bl	210ce8 <call_weak_fn>
  2111a0:	ldp	x29, x30, [sp], #16
  2111a4:	ret

Disassembly of section .fini:

00000000002111a8 <_fini>:
  2111a8:	stp	x29, x30, [sp, #-16]!
  2111ac:	mov	x29, sp
  2111b0:	ldp	x29, x30, [sp], #16
  2111b4:	ret

Disassembly of section .plt:

00000000002111c0 <__libc_start_main@plt-0x20>:
  2111c0:	stp	x16, x30, [sp, #-16]!
  2111c4:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2111c8:	ldr	x17, [x16, #1240]
  2111cc:	add	x16, x16, #0x4d8
  2111d0:	br	x17
  2111d4:	nop
  2111d8:	nop
  2111dc:	nop

00000000002111e0 <__libc_start_main@plt>:
  2111e0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2111e4:	ldr	x17, [x16, #1248]
  2111e8:	add	x16, x16, #0x4e0
  2111ec:	br	x17

00000000002111f0 <abort@plt>:
  2111f0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2111f4:	ldr	x17, [x16, #1256]
  2111f8:	add	x16, x16, #0x4e8
  2111fc:	br	x17

0000000000211200 <__gmon_start__@plt>:
  211200:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211204:	ldr	x17, [x16, #1264]
  211208:	add	x16, x16, #0x4f0
  21120c:	br	x17

0000000000211210 <log_setup_generator@plt>:
  211210:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211214:	ldr	x17, [x16, #1272]
  211218:	add	x16, x16, #0x4f8
  21121c:	br	x17

0000000000211220 <log_get_max_level_realm@plt>:
  211220:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211224:	ldr	x17, [x16, #1280]
  211228:	add	x16, x16, #0x500
  21122c:	br	x17

0000000000211230 <log_internal_realm@plt>:
  211230:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211234:	ldr	x17, [x16, #1288]
  211238:	add	x16, x16, #0x508
  21123c:	br	x17

0000000000211240 <in_initrd@plt>:
  211240:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211244:	ldr	x17, [x16, #1296]
  211248:	add	x16, x16, #0x510
  21124c:	br	x17

0000000000211250 <detect_container@plt>:
  211250:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211254:	ldr	x17, [x16, #1304]
  211258:	add	x16, x16, #0x518
  21125c:	br	x17

0000000000211260 <is_efi_boot@plt>:
  211260:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211264:	ldr	x17, [x16, #1312]
  211268:	add	x16, x16, #0x520
  21126c:	br	x17

0000000000211270 <access@plt>:
  211270:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211274:	ldr	x17, [x16, #1320]
  211278:	add	x16, x16, #0x528
  21127c:	br	x17

0000000000211280 <strlen@plt>:
  211280:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211284:	ldr	x17, [x16, #1328]
  211288:	add	x16, x16, #0x530
  21128c:	br	x17

0000000000211290 <stpcpy@plt>:
  211290:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  211294:	ldr	x17, [x16, #1336]
  211298:	add	x16, x16, #0x538
  21129c:	br	x17

00000000002112a0 <mkdir_parents@plt>:
  2112a0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2112a4:	ldr	x17, [x16, #1344]
  2112a8:	add	x16, x16, #0x540
  2112ac:	br	x17

00000000002112b0 <symlink@plt>:
  2112b0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2112b4:	ldr	x17, [x16, #1352]
  2112b8:	add	x16, x16, #0x548
  2112bc:	br	x17

00000000002112c0 <__errno_location@plt>:
  2112c0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2112c4:	ldr	x17, [x16, #1360]
  2112c8:	add	x16, x16, #0x550
  2112cc:	br	x17

00000000002112d0 <log_assert_failed_realm@plt>:
  2112d0:	adrp	x16, 221000 <log_assert_failed_realm@plt+0xfd30>
  2112d4:	ldr	x17, [x16, #1368]
  2112d8:	add	x16, x16, #0x558
  2112dc:	br	x17
