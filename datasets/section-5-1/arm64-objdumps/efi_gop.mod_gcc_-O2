
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//efi_gop.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xce8>:
   0:	mov	w0, #0x1                   	// #1
   4:	str	w0, [x1]
   8:	ret
   c:	nop
  10:	mov	x1, x0
  14:	ldr	w0, [x0, #12]
  18:	cmp	w0, #0x1
  1c:	b.ls	50 <grub_mod_init-0xc98>  // b.plast
  20:	cmp	w0, #0x2
  24:	mov	w0, #0x0                   	// #0
  28:	b.ne	4c <grub_mod_init-0xc9c>  // b.any
  2c:	ldp	w2, w3, [x1, #16]
  30:	ands	w5, w2, w3
  34:	b.ne	4c <grub_mod_init-0xc9c>  // b.any
  38:	ldr	w4, [x1, #24]
  3c:	orr	w2, w2, w3
  40:	mov	w0, w5
  44:	ands	w3, w2, w4
  48:	b.eq	58 <grub_mod_init-0xc90>  // b.none
  4c:	ret
  50:	mov	w0, #0x20                  	// #32
  54:	ret
  58:	ldr	w1, [x1, #28]
  5c:	orr	w2, w2, w4
  60:	mov	w0, w3
  64:	tst	w1, w2
  68:	b.ne	4c <grub_mod_init-0xc9c>  // b.any
  6c:	orr	w2, w1, w2
  70:	mov	w0, #0x1f                  	// #31
  74:	mov	w3, #0x1                   	// #1
  78:	b	88 <grub_mod_init-0xc60>
  7c:	sub	w0, w0, #0x1
  80:	cmn	w0, #0x1
  84:	b.eq	9c <grub_mod_init-0xc4c>  // b.none
  88:	lsl	w1, w3, w0
  8c:	tst	w1, w2
  90:	b.eq	7c <grub_mod_init-0xc6c>  // b.none
  94:	add	w0, w0, #0x1
  98:	ret
  9c:	mov	w0, #0x0                   	// #0
  a0:	ret
  a4:	nop
  a8:	mov	w3, #0x1f                  	// #31
  ac:	mov	w6, #0x1                   	// #1
  b0:	b	bc <grub_mod_init-0xc2c>
  b4:	cmn	w3, #0x1
  b8:	b.eq	10c <grub_mod_init-0xbdc>  // b.none
  bc:	lsl	w4, w6, w3
  c0:	mov	w5, w3
  c4:	tst	w4, w0
  c8:	sub	w3, w3, #0x1
  cc:	b.eq	b4 <grub_mod_init-0xc34>  // b.none
  d0:	mov	w3, w5
  d4:	mov	w7, #0x1                   	// #1
  d8:	b	e8 <grub_mod_init-0xc00>
  dc:	lsl	w4, w7, w3
  e0:	tst	w4, w0
  e4:	b.eq	f8 <grub_mod_init-0xbf0>  // b.none
  e8:	mov	w6, w3
  ec:	sub	w3, w3, #0x1
  f0:	cmn	w3, #0x1
  f4:	b.ne	dc <grub_mod_init-0xc0c>  // b.any
  f8:	add	w5, w5, #0x1
  fc:	str	w6, [x2]
 100:	sub	w5, w5, w6
 104:	str	w5, [x1]
 108:	ret
 10c:	str	wzr, [x2]
 110:	str	wzr, [x1]
 114:	ret
 118:	stp	x29, x30, [sp, #-176]!
 11c:	adrp	x2, 0 <grub_mod_init-0xce8>
 120:	mov	x29, sp
 124:	stp	x19, x20, [sp, #16]
 128:	ldr	x20, [x2]
 12c:	stp	x21, x22, [sp, #32]
 130:	mov	x21, x0
 134:	mov	x22, x1
 138:	ldr	x0, [x20]
 13c:	ldr	x1, [x0, #24]
 140:	ldr	w1, [x1]
 144:	cbz	w1, 1f4 <grub_mod_init-0xaf4>
 148:	stp	x23, x24, [sp, #48]
 14c:	mov	x24, #0x10                  	// #16
 150:	mov	x23, #0x91                  	// #145
 154:	stp	x25, x26, [sp, #64]
 158:	mov	x25, #0x2                   	// #2
 15c:	mov	w19, #0x0                   	// #0
 160:	mov	w26, #0x100                 	// #256
 164:	movk	x25, #0x8, lsl #32
 168:	movk	x24, #0x8, lsl #32
 16c:	movk	x23, #0x20, lsl #32
 170:	ldr	x4, [x0]
 174:	str	xzr, [sp, #88]
 178:	add	x3, sp, #0x58
 17c:	add	x2, sp, #0x50
 180:	mov	w1, w19
 184:	blr	x4
 188:	cbnz	x0, 1d4 <grub_mod_init-0xb14>
 18c:	ldr	x3, [sp, #88]
 190:	mov	x6, #0x800000008           	// #34359738376
 194:	mov	x5, #0x800000000           	// #34359738368
 198:	mov	w4, #0x18                  	// #24
 19c:	mov	w7, #0x4                   	// #4
 1a0:	mov	x1, x22
 1a4:	ldr	w2, [x3, #4]
 1a8:	add	x0, sp, #0x60
 1ac:	ldur	x3, [x3, #4]
 1b0:	stp	x3, x23, [sp, #96]
 1b4:	lsl	w2, w2, #2
 1b8:	stp	w7, w2, [sp, #112]
 1bc:	stp	w26, w19, [sp, #120]
 1c0:	stp	x25, x24, [sp, #128]
 1c4:	stp	x6, x5, [sp, #144]
 1c8:	str	w4, [sp, #160]
 1cc:	blr	x21
 1d0:	cbnz	w0, 208 <grub_mod_init-0xae0>
 1d4:	ldr	x0, [x20]
 1d8:	add	w19, w19, #0x1
 1dc:	ldr	x1, [x0, #24]
 1e0:	ldr	w1, [x1]
 1e4:	cmp	w1, w19
 1e8:	b.hi	170 <grub_mod_init-0xb78>  // b.pmore
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	mov	w0, #0x0                   	// #0
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldp	x21, x22, [sp, #32]
 200:	ldp	x29, x30, [sp], #176
 204:	ret
 208:	mov	w0, #0x1                   	// #1
 20c:	ldp	x19, x20, [sp, #16]
 210:	ldp	x21, x22, [sp, #32]
 214:	ldp	x23, x24, [sp, #48]
 218:	ldp	x25, x26, [sp, #64]
 21c:	ldp	x29, x30, [sp], #176
 220:	ret
 224:	nop
	...
 230:	adrp	x0, 0 <grub_mod_init-0xce8>
 234:	ldr	x0, [x0]
 238:	ldr	x1, [x0, #104]
 23c:	cbz	x1, 294 <grub_mod_init-0xa54>
 240:	sub	sp, sp, #0x20
 244:	add	x3, x0, #0x8
 248:	mov	x6, #0x0                   	// #0
 24c:	mov	x5, #0x0                   	// #0
 250:	mov	x4, #0x0                   	// #0
 254:	stp	x29, x30, [sp, #16]
 258:	add	x29, sp, #0x10
 25c:	ldr	w2, [x0, #8]
 260:	ldr	x0, [x0]
 264:	mov	w7, w2
 268:	ldr	w3, [x3, #4]
 26c:	lsl	w2, w2, #2
 270:	stp	x3, x2, [sp]
 274:	mov	x2, #0x2                   	// #2
 278:	mov	x3, #0x0                   	// #0
 27c:	ldr	x8, [x0, #16]
 280:	blr	x8
 284:	mov	w0, #0x0                   	// #0
 288:	ldp	x29, x30, [sp, #16]
 28c:	add	sp, sp, #0x20
 290:	ret
 294:	mov	w0, #0x0                   	// #0
 298:	ret
 29c:	nop
	...
 2a8:	stp	x29, x30, [sp, #-80]!
 2ac:	mov	x2, #0x80                  	// #128
 2b0:	mov	w1, #0x0                   	// #0
 2b4:	mov	x29, sp
 2b8:	stp	x19, x20, [sp, #16]
 2bc:	mov	x19, x0
 2c0:	str	x21, [sp, #32]
 2c4:	bl	0 <grub_memset>
 2c8:	adrp	x1, 0 <grub_mod_init-0xce8>
 2cc:	adrp	x0, 0 <grub_mod_init-0xce8>
 2d0:	mov	w2, #0x2                   	// #2
 2d4:	ldr	x21, [x1]
 2d8:	ldr	x20, [x0]
 2dc:	ldr	x0, [x21, #112]
 2e0:	mov	x1, x20
 2e4:	bl	0 <grub_efi_open_protocol>
 2e8:	cbz	x0, 2f4 <grub_mod_init-0x9f4>
 2ec:	ldr	w2, [x0]
 2f0:	cbnz	w2, 36c <grub_mod_init-0x97c>
 2f4:	ldr	x0, [x21, #112]
 2f8:	add	x1, x20, #0x10
 2fc:	mov	w2, #0x2                   	// #2
 300:	bl	0 <grub_efi_open_protocol>
 304:	cbz	x0, 310 <grub_mod_init-0x9d8>
 308:	ldr	w2, [x0]
 30c:	cbnz	w2, 36c <grub_mod_init-0x97c>
 310:	adrp	x3, 0 <grub_mod_init-0xce8>
 314:	add	x1, x20, #0x20
 318:	add	x2, sp, #0x30
 31c:	add	x0, sp, #0x38
 320:	ldr	x3, [x3]
 324:	ldp	x4, x5, [x3]
 328:	stp	x4, x5, [sp, #56]
 32c:	ldrh	w3, [x3, #16]
 330:	strh	w3, [sp, #72]
 334:	bl	0 <grub_efi_get_variable>
 338:	mov	x20, x0
 33c:	cbz	x0, 34c <grub_mod_init-0x99c>
 340:	ldr	x2, [sp, #48]
 344:	cmp	x2, #0x10
 348:	b.hi	39c <grub_mod_init-0x94c>  // b.pmore
 34c:	adrp	x1, 0 <grub_mod_init-0xce8>
 350:	mov	w0, #0xd                   	// #13
 354:	ldr	x1, [x1]
 358:	bl	0 <grub_error>
 35c:	ldp	x19, x20, [sp, #16]
 360:	ldr	x21, [sp, #32]
 364:	ldp	x29, x30, [sp], #80
 368:	ret
 36c:	ldr	x1, [x0, #8]
 370:	cmp	w2, #0x80
 374:	mov	x3, #0x80                  	// #128
 378:	mov	w2, w2
 37c:	csel	x2, x2, x3, ls  // ls = plast
 380:	mov	x0, x19
 384:	bl	0 <grub_memmove>
 388:	mov	w0, #0x0                   	// #0
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldr	x21, [sp, #32]
 394:	ldp	x29, x30, [sp], #80
 398:	ret
 39c:	sub	x2, x2, #0x10
 3a0:	mov	x0, #0x80                  	// #128
 3a4:	cmp	x2, x0
 3a8:	add	x1, x20, #0x10
 3ac:	csel	x2, x2, x0, ls  // ls = plast
 3b0:	mov	x0, x19
 3b4:	bl	0 <grub_memmove>
 3b8:	mov	x0, x20
 3bc:	bl	0 <grub_free>
 3c0:	mov	w0, #0x0                   	// #0
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldr	x21, [sp, #32]
 3cc:	ldp	x29, x30, [sp], #80
 3d0:	ret
 3d4:	nop
	...
 3f8:	cbz	x0, 400 <grub_mod_init-0x8e8>
 3fc:	b	0 <grub_video_fb_set_active_render_target>
 400:	adrp	x0, 0 <grub_mod_init-0xce8>
 404:	ldr	x0, [x0]
 408:	ldr	x0, [x0, #88]
 40c:	b	0 <grub_video_fb_set_active_render_target>
	...
 418:	stp	x29, x30, [sp, #-32]!
 41c:	adrp	x0, 0 <grub_mod_init-0xce8>
 420:	mov	x29, sp
 424:	str	x19, [sp, #16]
 428:	ldr	x19, [x0]
 42c:	ldr	w0, [x19, #120]
 430:	cbz	w0, 448 <grub_mod_init-0x8a0>
 434:	ldr	x0, [x19]
 438:	ldr	w1, [x19, #124]
 43c:	ldr	x2, [x0, #8]
 440:	blr	x2
 444:	str	wzr, [x19, #120]
 448:	ldr	x0, [x19, #104]
 44c:	add	x19, x19, #0x8
 450:	bl	0 <grub_free>
 454:	str	xzr, [x19, #96]
 458:	ldr	x19, [sp, #16]
 45c:	ldp	x29, x30, [sp], #32
 460:	b	0 <grub_video_fb_fini>
 464:	nop
	...
 470:	stp	x29, x30, [sp, #-256]!
 474:	mov	x29, sp
 478:	stp	x19, x20, [sp, #16]
 47c:	stp	x21, x22, [sp, #32]
 480:	stp	x23, x24, [sp, #48]
 484:	mov	w23, w0
 488:	orr	w0, w0, w1
 48c:	stp	x25, x26, [sp, #64]
 490:	ubfx	x24, x2, #8, #8
 494:	stp	x27, x28, [sp, #80]
 498:	str	w0, [sp, #100]
 49c:	stp	w1, wzr, [sp, #108]
 4a0:	str	wzr, [sp, #116]
 4a4:	str	xzr, [sp, #120]
 4a8:	cbz	w0, 870 <grub_mod_init-0x478>
 4ac:	adrp	x0, 0 <grub_mod_init-0xce8>
 4b0:	ldr	x19, [x0]
 4b4:	ldr	x0, [x19]
 4b8:	ldr	x7, [x0, #24]
 4bc:	ldr	x6, [x7, #8]
 4c0:	cbz	x6, 4d0 <grub_mod_init-0x818>
 4c4:	mov	x0, x6
 4c8:	bl	10 <grub_mod_init-0xcd8>
 4cc:	cbnz	w0, 808 <grub_mod_init-0x4e0>
 4d0:	adrp	x1, 0 <grub_mod_init-0xce8>
 4d4:	adrp	x2, 0 <grub_mod_init-0xce8>
 4d8:	adrp	x0, 0 <grub_mod_init-0xce8>
 4dc:	ldr	w4, [x7]
 4e0:	ldr	x3, [x1]
 4e4:	mov	w1, #0x18d                 	// #397
 4e8:	ldr	x21, [x2]
 4ec:	ldr	x20, [x0]
 4f0:	mov	x2, x21
 4f4:	mov	x0, x20
 4f8:	bl	0 <grub_real_dprintf>
 4fc:	ldr	x0, [x19]
 500:	ldr	x1, [x0, #24]
 504:	ldr	w1, [x1]
 508:	cbz	w1, 8d4 <grub_mod_init-0x414>
 50c:	add	x22, sp, #0x80
 510:	mov	w28, #0x0                   	// #0
 514:	mov	x27, #0x0                   	// #0
 518:	mov	w25, #0x0                   	// #0
 51c:	adrp	x26, 0 <grub_mod_init-0xce8>
 520:	str	wzr, [sp, #104]
 524:	b	544 <grub_mod_init-0x7a4>
 528:	str	xzr, [sp, #120]
 52c:	ldr	x0, [x19]
 530:	add	w28, w28, #0x1
 534:	ldr	x1, [x0, #24]
 538:	ldr	w2, [x1]
 53c:	cmp	w2, w28
 540:	b.ls	638 <grub_mod_init-0x6b0>  // b.plast
 544:	ldr	x5, [x0]
 548:	add	x3, sp, #0x78
 54c:	mov	x2, x22
 550:	mov	w1, w28
 554:	blr	x5
 558:	cbnz	x0, 528 <grub_mod_init-0x7c0>
 55c:	ldr	x0, [sp, #120]
 560:	mov	w1, #0x19a                 	// #410
 564:	ldr	x3, [x26]
 568:	mov	w4, w28
 56c:	ldp	w5, w6, [x0, #4]
 570:	mov	x2, x21
 574:	mov	x0, x20
 578:	bl	0 <grub_real_dprintf>
 57c:	ldr	w1, [sp, #112]
 580:	ldr	x0, [sp, #120]
 584:	cbz	w1, 5a4 <grub_mod_init-0x744>
 588:	ldr	w2, [x0, #4]
 58c:	cmp	w1, w2
 590:	b.cc	7d4 <grub_mod_init-0x514>  // b.lo, b.ul, b.last
 594:	ldr	w2, [x0, #8]
 598:	ldr	w1, [sp, #116]
 59c:	cmp	w2, w1
 5a0:	b.hi	7d4 <grub_mod_init-0x514>  // b.pmore
 5a4:	bl	10 <grub_mod_init-0xcd8>
 5a8:	mov	w5, w0
 5ac:	cbz	w0, 7b4 <grub_mod_init-0x534>
 5b0:	adrp	x0, 0 <grub_mod_init-0xce8>
 5b4:	mov	w1, #0x1ac                 	// #428
 5b8:	mov	w4, w28
 5bc:	mov	x2, x21
 5c0:	ldr	x3, [x0]
 5c4:	mov	x0, x20
 5c8:	str	w5, [sp, #96]
 5cc:	bl	0 <grub_real_dprintf>
 5d0:	ldr	x1, [sp, #120]
 5d4:	ldr	w5, [sp, #96]
 5d8:	ldr	w0, [x1, #4]
 5dc:	cmp	w0, w23
 5e0:	b.eq	7f4 <grub_mod_init-0x4f4>  // b.none
 5e4:	ldr	w2, [sp, #100]
 5e8:	cbnz	w2, 794 <grub_mod_init-0x554>
 5ec:	cmp	w24, #0x0
 5f0:	ccmp	w24, w5, #0x4, ne  // ne = any
 5f4:	b.ne	794 <grub_mod_init-0x554>  // b.any
 5f8:	ldr	w1, [x1, #8]
 5fc:	mov	w5, w5
 600:	mov	w2, #0x1                   	// #1
 604:	str	w2, [sp, #104]
 608:	umull	x0, w0, w1
 60c:	mul	x5, x0, x5
 610:	cmp	x5, x27
 614:	csel	x0, x27, x5, ls  // ls = plast
 618:	csel	w25, w25, w28, ls  // ls = plast
 61c:	mov	x27, x0
 620:	add	w28, w28, #0x1
 624:	ldr	x0, [x19]
 628:	ldr	x1, [x0, #24]
 62c:	ldr	w2, [x1]
 630:	cmp	w2, w28
 634:	b.hi	544 <grub_mod_init-0x7a4>  // b.pmore
 638:	ldr	w2, [sp, #104]
 63c:	cbz	w2, 8d4 <grub_mod_init-0x414>
 640:	ldr	w2, [x1, #4]
 644:	cmp	w2, w25
 648:	b.eq	66c <grub_mod_init-0x67c>  // b.none
 64c:	ldr	w1, [x19, #120]
 650:	cbz	w1, 864 <grub_mod_init-0x484>
 654:	ldr	x2, [x0, #8]
 658:	mov	w1, w25
 65c:	blr	x2
 660:	ldr	x0, [x19]
 664:	ldr	x1, [x0, #24]
 668:	ldr	w25, [x1, #4]
 66c:	ldr	x3, [x1, #8]
 670:	add	x22, x19, #0x8
 674:	mov	x24, #0x2                   	// #2
 678:	mov	x23, #0x10                  	// #16
 67c:	movk	x24, #0x8, lsl #32
 680:	movk	x23, #0x8, lsl #32
 684:	ldp	w2, w4, [x3, #4]
 688:	str	x24, [x22, #32]
 68c:	str	w2, [x19, #8]
 690:	mov	x28, #0x91                  	// #145
 694:	ldr	x1, [x1, #24]
 698:	mul	w0, w2, w4
 69c:	lsl	w5, w2, #2
 6a0:	mov	x2, #0x800000008           	// #34359738376
 6a4:	stp	x23, x2, [x22, #40]
 6a8:	mov	x2, #0x800000000           	// #34359738368
 6ac:	mov	w26, #0x100                 	// #256
 6b0:	movk	x28, #0x20, lsl #32
 6b4:	mov	w27, #0x4                   	// #4
 6b8:	str	w4, [x22, #4]
 6bc:	lsl	x0, x0, #2
 6c0:	str	x28, [x22, #8]
 6c4:	stp	w27, w5, [x22, #16]
 6c8:	stp	w26, w25, [x22, #24]
 6cc:	str	x2, [x22, #56]
 6d0:	mov	w2, #0x18                  	// #24
 6d4:	str	w2, [x22, #64]
 6d8:	str	x1, [x22, #88]
 6dc:	str	x3, [sp, #120]
 6e0:	bl	0 <grub_malloc>
 6e4:	str	x0, [x22, #96]
 6e8:	mov	x25, x0
 6ec:	cbz	x0, 9e0 <grub_mod_init-0x308>
 6f0:	ldr	w5, [x19, #8]
 6f4:	ldr	w6, [x22, #4]
 6f8:	ldr	w7, [x22, #12]
 6fc:	ldr	x4, [x22, #88]
 700:	adrp	x0, 0 <grub_mod_init-0xce8>
 704:	mov	x2, x21
 708:	add	x22, x19, #0x8
 70c:	ldr	x3, [x0]
 710:	mov	w1, #0x1ee                 	// #494
 714:	mov	x0, x20
 718:	bl	0 <grub_real_dprintf>
 71c:	add	x0, x19, #0x58
 720:	mov	x2, x25
 724:	mov	x1, x22
 728:	bl	0 <grub_video_fb_create_render_target_from_pointer>
 72c:	mov	w19, w0
 730:	cbnz	w0, 89c <grub_mod_init-0x44c>
 734:	ldr	x0, [x22, #80]
 738:	bl	0 <grub_video_fb_set_active_render_target>
 73c:	mov	w19, w0
 740:	cbnz	w0, 920 <grub_mod_init-0x3c8>
 744:	adrp	x2, 0 <grub_mod_init-0xce8>
 748:	mov	w1, #0x10                  	// #16
 74c:	ldr	x2, [x2]
 750:	bl	0 <grub_video_fb_set_palette>
 754:	mov	w19, w0
 758:	cbz	w0, 958 <grub_mod_init-0x390>
 75c:	adrp	x3, 0 <grub_mod_init-0xce8>
 760:	mov	x2, x21
 764:	mov	x0, x20
 768:	mov	w1, #0x207                 	// #519
 76c:	ldr	x3, [x3]
 770:	bl	0 <grub_real_dprintf>
 774:	mov	w0, w19
 778:	ldp	x19, x20, [sp, #16]
 77c:	ldp	x21, x22, [sp, #32]
 780:	ldp	x23, x24, [sp, #48]
 784:	ldp	x25, x26, [sp, #64]
 788:	ldp	x27, x28, [sp, #80]
 78c:	ldp	x29, x30, [sp], #256
 790:	ret
 794:	adrp	x0, 0 <grub_mod_init-0xce8>
 798:	mov	w4, w28
 79c:	mov	x2, x21
 7a0:	mov	w1, #0x1b2                 	// #434
 7a4:	ldr	x3, [x0]
 7a8:	mov	x0, x20
 7ac:	bl	0 <grub_real_dprintf>
 7b0:	b	52c <grub_mod_init-0x7bc>
 7b4:	adrp	x0, 0 <grub_mod_init-0xce8>
 7b8:	mov	w4, w28
 7bc:	mov	x2, x21
 7c0:	mov	w1, #0x1a7                 	// #423
 7c4:	ldr	x3, [x0]
 7c8:	mov	x0, x20
 7cc:	bl	0 <grub_real_dprintf>
 7d0:	b	52c <grub_mod_init-0x7bc>
 7d4:	adrp	x0, 0 <grub_mod_init-0xce8>
 7d8:	mov	w4, w28
 7dc:	mov	x2, x21
 7e0:	mov	w1, #0x1a0                 	// #416
 7e4:	ldr	x3, [x0]
 7e8:	mov	x0, x20
 7ec:	bl	0 <grub_real_dprintf>
 7f0:	b	52c <grub_mod_init-0x7bc>
 7f4:	ldr	w2, [x1, #8]
 7f8:	ldr	w3, [sp, #108]
 7fc:	cmp	w2, w3
 800:	b.ne	5e4 <grub_mod_init-0x704>  // b.any
 804:	b	5ec <grub_mod_init-0x6fc>
 808:	ldr	w1, [x6, #4]
 80c:	cmp	w1, w23
 810:	b.eq	9cc <grub_mod_init-0x31c>  // b.none
 814:	ldr	w1, [sp, #100]
 818:	cbnz	w1, 4d0 <grub_mod_init-0x818>
 81c:	cmp	w24, #0x0
 820:	ccmp	w24, w0, #0x4, ne  // ne = any
 824:	b.ne	4d0 <grub_mod_init-0x818>  // b.any
 828:	adrp	x1, 0 <grub_mod_init-0xce8>
 82c:	adrp	x2, 0 <grub_mod_init-0xce8>
 830:	adrp	x0, 0 <grub_mod_init-0xce8>
 834:	ldr	w4, [x7, #4]
 838:	ldr	x3, [x1]
 83c:	mov	w1, #0x184                 	// #388
 840:	ldr	x21, [x2]
 844:	ldr	x20, [x0]
 848:	mov	x2, x21
 84c:	mov	x0, x20
 850:	bl	0 <grub_real_dprintf>
 854:	ldr	x0, [x19]
 858:	ldr	x1, [x0, #24]
 85c:	ldr	w25, [x1, #4]
 860:	b	66c <grub_mod_init-0x67c>
 864:	mov	w1, #0x1                   	// #1
 868:	stp	w1, w2, [x19, #120]
 86c:	b	654 <grub_mod_init-0x694>
 870:	add	x22, sp, #0x80
 874:	mov	x0, x22
 878:	bl	2a8 <grub_mod_init-0xa40>
 87c:	cbz	w0, 990 <grub_mod_init-0x358>
 880:	adrp	x0, 0 <grub_mod_init-0xce8>
 884:	mov	w2, #0x320                 	// #800
 888:	mov	w1, #0x258                 	// #600
 88c:	stp	w2, w1, [sp, #112]
 890:	ldr	x0, [x0]
 894:	str	wzr, [x0]
 898:	b	4ac <grub_mod_init-0x83c>
 89c:	adrp	x3, 0 <grub_mod_init-0xce8>
 8a0:	mov	x2, x21
 8a4:	mov	x0, x20
 8a8:	mov	w1, #0x1f7                 	// #503
 8ac:	ldr	x3, [x3]
 8b0:	bl	0 <grub_real_dprintf>
 8b4:	mov	w0, w19
 8b8:	ldp	x19, x20, [sp, #16]
 8bc:	ldp	x21, x22, [sp, #32]
 8c0:	ldp	x23, x24, [sp, #48]
 8c4:	ldp	x25, x26, [sp, #64]
 8c8:	ldp	x27, x28, [sp, #80]
 8cc:	ldp	x29, x30, [sp], #256
 8d0:	ret
 8d4:	adrp	x3, 0 <grub_mod_init-0xce8>
 8d8:	mov	x2, x21
 8dc:	mov	x0, x20
 8e0:	mov	w1, #0x1c5                 	// #453
 8e4:	ldr	x3, [x3]
 8e8:	bl	0 <grub_real_dprintf>
 8ec:	adrp	x1, 0 <grub_mod_init-0xce8>
 8f0:	mov	w0, #0xc                   	// #12
 8f4:	ldr	x1, [x1]
 8f8:	bl	0 <grub_error>
 8fc:	mov	w19, w0
 900:	mov	w0, w19
 904:	ldp	x19, x20, [sp, #16]
 908:	ldp	x21, x22, [sp, #32]
 90c:	ldp	x23, x24, [sp, #48]
 910:	ldp	x25, x26, [sp, #64]
 914:	ldp	x27, x28, [sp, #80]
 918:	ldp	x29, x30, [sp], #256
 91c:	ret
 920:	adrp	x3, 0 <grub_mod_init-0xce8>
 924:	mov	x2, x21
 928:	mov	x0, x20
 92c:	mov	w1, #0x1ff                 	// #511
 930:	ldr	x3, [x3]
 934:	bl	0 <grub_real_dprintf>
 938:	mov	w0, w19
 93c:	ldp	x19, x20, [sp, #16]
 940:	ldp	x21, x22, [sp, #32]
 944:	ldp	x23, x24, [sp, #48]
 948:	ldp	x25, x26, [sp, #64]
 94c:	ldp	x27, x28, [sp, #80]
 950:	ldp	x29, x30, [sp], #256
 954:	ret
 958:	adrp	x3, 0 <grub_mod_init-0xce8>
 95c:	mov	x2, x21
 960:	mov	x0, x20
 964:	mov	w1, #0x209                 	// #521
 968:	ldr	x3, [x3]
 96c:	bl	0 <grub_real_dprintf>
 970:	mov	w0, w19
 974:	ldp	x19, x20, [sp, #16]
 978:	ldp	x21, x22, [sp, #32]
 97c:	ldp	x23, x24, [sp, #48]
 980:	ldp	x25, x26, [sp, #64]
 984:	ldp	x27, x28, [sp, #80]
 988:	ldp	x29, x30, [sp], #256
 98c:	ret
 990:	mov	x0, x22
 994:	bl	0 <grub_video_edid_checksum>
 998:	cbnz	w0, 880 <grub_mod_init-0x468>
 99c:	mov	x0, x22
 9a0:	add	x2, sp, #0x74
 9a4:	add	x1, sp, #0x70
 9a8:	bl	0 <grub_video_edid_preferred_mode>
 9ac:	cbnz	w0, 880 <grub_mod_init-0x468>
 9b0:	ldr	w0, [sp, #112]
 9b4:	cmp	w0, #0xfff
 9b8:	b.hi	880 <grub_mod_init-0x468>  // b.pmore
 9bc:	ldr	w0, [sp, #116]
 9c0:	cmp	w0, #0xfff
 9c4:	b.ls	4ac <grub_mod_init-0x83c>  // b.plast
 9c8:	b	880 <grub_mod_init-0x468>
 9cc:	ldr	w1, [x6, #8]
 9d0:	ldr	w2, [sp, #108]
 9d4:	cmp	w1, w2
 9d8:	b.ne	814 <grub_mod_init-0x4d4>  // b.any
 9dc:	b	81c <grub_mod_init-0x4cc>
 9e0:	adrp	x3, 0 <grub_mod_init-0xce8>
 9e4:	mov	x2, x21
 9e8:	mov	x0, x20
 9ec:	mov	w1, #0x1e7                 	// #487
 9f0:	ldr	x3, [x3]
 9f4:	bl	0 <grub_real_dprintf>
 9f8:	ldr	x0, [sp, #120]
 9fc:	adrp	x2, 0 <grub_mod_init-0xce8>
 a00:	ldr	x1, [x19]
 a04:	mov	w7, #0x20                  	// #32
 a08:	ldp	w5, w6, [x0, #4]
 a0c:	str	w5, [x19, #8]
 a10:	ldr	x1, [x1, #24]
 a14:	ldr	x2, [x2]
 a18:	lsl	w0, w5, #2
 a1c:	ldr	x25, [x22, #88]
 a20:	ldr	w1, [x1, #4]
 a24:	stp	w27, w0, [x22, #16]
 a28:	mov	x0, #0x800000008           	// #34359738376
 a2c:	str	x0, [x22, #48]
 a30:	mov	x0, #0x800000000           	// #34359738368
 a34:	mov	x4, x25
 a38:	str	wzr, [x2]
 a3c:	str	w6, [x22, #4]
 a40:	str	x28, [x22, #8]
 a44:	stp	w26, w1, [x22, #24]
 a48:	stp	x24, x23, [x22, #32]
 a4c:	str	x0, [x22, #56]
 a50:	mov	w0, #0x18                  	// #24
 a54:	str	w0, [x22, #64]
 a58:	b	700 <grub_mod_init-0x5e8>
 a5c:	nop
	...
 b00:	stp	x29, x30, [sp, #-16]!
 b04:	adrp	x0, 0 <grub_mod_init-0xce8>
 b08:	mov	x2, #0x68                  	// #104
 b0c:	mov	x29, sp
 b10:	ldr	x0, [x0]
 b14:	mov	w1, #0x0                   	// #0
 b18:	add	x0, x0, #0x8
 b1c:	bl	0 <grub_memset>
 b20:	ldp	x29, x30, [sp], #16
 b24:	b	0 <grub_video_fb_init>
	...
 b30:	stp	x29, x30, [sp, #-48]!
 b34:	adrp	x2, 0 <grub_mod_init-0xce8>
 b38:	mov	w3, #0x100                 	// #256
 b3c:	mov	x29, sp
 b40:	stp	x19, x20, [sp, #16]
 b44:	mov	x19, x0
 b48:	ldr	x20, [x2]
 b4c:	mov	w2, #0x1                   	// #1
 b50:	ldr	x0, [x20]
 b54:	ldr	x0, [x0, #24]
 b58:	ldr	x8, [x0, #8]
 b5c:	ldr	w4, [x8, #4]
 b60:	str	x21, [sp, #32]
 b64:	mov	x21, x1
 b68:	ldr	w1, [x0, #4]
 b6c:	mov	x0, x8
 b70:	str	w3, [x19, #24]
 b74:	ldr	w3, [x8, #8]
 b78:	stp	w4, w3, [x19]
 b7c:	str	w2, [x19, #8]
 b80:	str	w1, [x19, #28]
 b84:	bl	10 <grub_mod_init-0xcd8>
 b88:	lsr	w2, w0, #3
 b8c:	stp	w0, w2, [x19, #12]
 b90:	cbz	w0, bb8 <grub_mod_init-0x130>
 b94:	ldr	w1, [x8, #32]
 b98:	ldr	w0, [x8, #12]
 b9c:	cmp	w0, #0x1
 ba0:	mul	w1, w1, w2
 ba4:	str	w1, [x19, #20]
 ba8:	b.eq	c64 <grub_mod_init-0x84>  // b.none
 bac:	cmp	w0, #0x2
 bb0:	b.eq	c78 <grub_mod_init-0x70>  // b.none
 bb4:	cbz	w0, c04 <grub_mod_init-0xe4>
 bb8:	adrp	x1, 0 <grub_mod_init-0xce8>
 bbc:	mov	w0, #0x1d                  	// #29
 bc0:	ldr	x1, [x1]
 bc4:	bl	0 <grub_error>
 bc8:	mov	w19, w0
 bcc:	cbz	w0, c34 <grub_mod_init-0xb4>
 bd0:	adrp	x3, 0 <grub_mod_init-0xce8>
 bd4:	adrp	x2, 0 <grub_mod_init-0xce8>
 bd8:	adrp	x0, 0 <grub_mod_init-0xce8>
 bdc:	mov	w1, #0x22e                 	// #558
 be0:	ldr	x3, [x3]
 be4:	ldr	x2, [x2]
 be8:	ldr	x0, [x0]
 bec:	bl	0 <grub_real_dprintf>
 bf0:	mov	w0, w19
 bf4:	ldp	x19, x20, [sp, #16]
 bf8:	ldr	x21, [sp, #32]
 bfc:	ldp	x29, x30, [sp], #48
 c00:	ret
 c04:	mov	x1, #0x8                   	// #8
 c08:	mov	x3, #0x8                   	// #8
 c0c:	mov	x2, #0x800000008           	// #34359738376
 c10:	movk	x1, #0x10, lsl #32
 c14:	add	x4, x19, #0x24
 c18:	mov	x0, #0x8                   	// #8
 c1c:	movk	x0, #0x18, lsl #32
 c20:	stp	x3, x2, [x4]
 c24:	stp	x1, x0, [x4, #16]
 c28:	mov	x0, x19
 c2c:	bl	0 <grub_video_get_blit_format>
 c30:	str	w0, [x19, #32]
 c34:	ldr	x0, [x20, #96]
 c38:	str	x0, [x21]
 c3c:	mov	w19, #0x0                   	// #0
 c40:	bl	0 <grub_video_fb_fini>
 c44:	ldr	x0, [x20, #104]
 c48:	bl	0 <grub_free>
 c4c:	str	xzr, [x20, #104]
 c50:	mov	w0, w19
 c54:	ldp	x19, x20, [sp, #16]
 c58:	ldr	x21, [sp, #32]
 c5c:	ldp	x29, x30, [sp], #48
 c60:	ret
 c64:	mov	x3, #0x8                   	// #8
 c68:	mov	x2, #0x800000008           	// #34359738376
 c6c:	movk	x3, #0x10, lsl #32
 c70:	mov	x1, #0x8                   	// #8
 c74:	b	c14 <grub_mod_init-0xd4>
 c78:	ldr	w0, [x8, #16]
 c7c:	add	x2, x19, #0x28
 c80:	add	x1, x19, #0x24
 c84:	bl	a8 <grub_mod_init-0xc40>
 c88:	ldr	w0, [x8, #20]
 c8c:	add	x2, x19, #0x30
 c90:	add	x1, x19, #0x2c
 c94:	bl	a8 <grub_mod_init-0xc40>
 c98:	ldr	w0, [x8, #24]
 c9c:	add	x2, x19, #0x38
 ca0:	add	x1, x19, #0x34
 ca4:	bl	a8 <grub_mod_init-0xc40>
 ca8:	ldr	w0, [x8, #28]
 cac:	add	x2, x19, #0x40
 cb0:	add	x1, x19, #0x3c
 cb4:	bl	a8 <grub_mod_init-0xc40>
 cb8:	b	c28 <grub_mod_init-0xc0>
 cbc:	nop
	...

0000000000000ce8 <grub_mod_init>:
 ce8:	stp	x29, x30, [sp, #-80]!
 cec:	adrp	x1, 0 <grub_mod_init-0xce8>
 cf0:	mov	x2, #0x0                   	// #0
 cf4:	mov	x29, sp
 cf8:	stp	x21, x22, [sp, #32]
 cfc:	add	x3, sp, #0x48
 d00:	mov	w0, #0x2                   	// #2
 d04:	ldr	x22, [x1]
 d08:	stp	x23, x24, [sp, #48]
 d0c:	add	x23, x22, #0x30
 d10:	str	wzr, [sp, #68]
 d14:	mov	x1, x23
 d18:	bl	0 <grub_efi_locate_handle>
 d1c:	cbz	x0, de0 <grub_mod_init+0xf8>
 d20:	mov	x21, x0
 d24:	ldr	x0, [sp, #72]
 d28:	cbz	x0, de0 <grub_mod_init+0xf8>
 d2c:	adrp	x1, 0 <grub_mod_init-0xce8>
 d30:	adrp	x0, 0 <grub_mod_init-0xce8>
 d34:	stp	x19, x20, [sp, #16]
 d38:	mov	x19, #0x0                   	// #0
 d3c:	ldr	x20, [x1]
 d40:	ldr	x24, [x0]
 d44:	b	d54 <grub_mod_init+0x6c>
 d48:	ldr	x0, [sp, #72]
 d4c:	cmp	x19, x0
 d50:	b.cs	df0 <grub_mod_init+0x108>  // b.hs, b.nlast
 d54:	ldr	x0, [x21, x19, lsl #3]
 d58:	mov	w2, #0x2                   	// #2
 d5c:	mov	x1, x23
 d60:	str	x0, [x20, #112]
 d64:	add	x19, x19, #0x1
 d68:	bl	0 <grub_efi_open_protocol>
 d6c:	mov	x2, x0
 d70:	add	x1, sp, #0x44
 d74:	mov	x0, x24
 d78:	str	x2, [x20]
 d7c:	bl	118 <grub_mod_init-0xbd0>
 d80:	ldr	w2, [sp, #68]
 d84:	cbz	w2, d48 <grub_mod_init+0x60>
 d88:	mov	x0, x21
 d8c:	bl	0 <grub_free>
 d90:	adrp	x0, 0 <grub_mod_init-0xce8>
 d94:	ldr	x2, [x0]
 d98:	ldr	x0, [x2]
 d9c:	cbz	x0, dc0 <grub_mod_init+0xd8>
 da0:	ldr	w3, [x22, #92]
 da4:	b	db4 <grub_mod_init+0xcc>
 da8:	mov	x2, x0
 dac:	ldr	x0, [x0]
 db0:	cbz	x0, dc0 <grub_mod_init+0xd8>
 db4:	ldr	w1, [x0, #28]
 db8:	cmp	w1, w3
 dbc:	b.hi	da8 <grub_mod_init+0xc0>  // b.pmore
 dc0:	str	x0, [x22, #64]
 dc4:	add	x0, x22, #0x40
 dc8:	str	x0, [x2]
 dcc:	str	x2, [x22, #72]
 dd0:	ldr	x1, [x22, #64]
 dd4:	cbz	x1, e0c <grub_mod_init+0x124>
 dd8:	ldp	x19, x20, [sp, #16]
 ddc:	str	x0, [x1, #8]
 de0:	ldp	x21, x22, [sp, #32]
 de4:	ldp	x23, x24, [sp, #48]
 de8:	ldp	x29, x30, [sp], #80
 dec:	ret
 df0:	str	xzr, [x20]
 df4:	str	xzr, [x20, #112]
 df8:	ldp	x19, x20, [sp, #16]
 dfc:	ldp	x21, x22, [sp, #32]
 e00:	ldp	x23, x24, [sp, #48]
 e04:	ldp	x29, x30, [sp], #80
 e08:	ret
 e0c:	ldp	x19, x20, [sp, #16]
 e10:	ldp	x21, x22, [sp, #32]
 e14:	ldp	x23, x24, [sp, #48]
 e18:	ldp	x29, x30, [sp], #80
 e1c:	ret
	...

0000000000000e40 <grub_mod_fini>:
 e40:	stp	x29, x30, [sp, #-32]!
 e44:	adrp	x0, 0 <grub_mod_init-0xce8>
 e48:	mov	x29, sp
 e4c:	str	x19, [sp, #16]
 e50:	ldr	x19, [x0]
 e54:	ldr	w1, [x19, #120]
 e58:	ldr	x0, [x19]
 e5c:	cbz	w1, e74 <grub_mod_fini+0x34>
 e60:	ldr	w1, [x19, #124]
 e64:	ldr	x2, [x0, #8]
 e68:	blr	x2
 e6c:	str	wzr, [x19, #120]
 e70:	ldr	x0, [x19]
 e74:	cbz	x0, e90 <grub_mod_fini+0x50>
 e78:	ldr	x19, [sp, #16]
 e7c:	adrp	x0, 0 <grub_mod_init-0xce8>
 e80:	ldp	x29, x30, [sp], #32
 e84:	ldr	x0, [x0]
 e88:	add	x0, x0, #0x40
 e8c:	b	0 <grub_list_remove>
 e90:	ldr	x19, [sp, #16]
 e94:	ldp	x29, x30, [sp], #32
 e98:	ret
 e9c:	nop
	...
