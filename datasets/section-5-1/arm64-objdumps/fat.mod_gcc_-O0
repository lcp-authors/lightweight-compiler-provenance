
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fat.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1e20>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_mod_init-0x1e20>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret
      58:	stp	x29, x30, [sp, #-48]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #40]
      64:	str	x1, [sp, #32]
      68:	str	x2, [sp, #24]
      6c:	ldr	x2, [sp, #24]
      70:	ldr	x1, [sp, #32]
      74:	ldr	x0, [sp, #40]
      78:	bl	0 <grub_memmove>
      7c:	ldp	x29, x30, [sp], #48
      80:	ret
      84:	sub	sp, sp, #0x10
      88:	str	w0, [sp, #12]
      8c:	ldr	w0, [sp, #12]
      90:	cmp	w0, #0x40
      94:	b.le	b0 <grub_mod_init-0x1d70>
      98:	ldr	w0, [sp, #12]
      9c:	cmp	w0, #0x5a
      a0:	b.gt	b0 <grub_mod_init-0x1d70>
      a4:	ldr	w0, [sp, #12]
      a8:	add	w0, w0, #0x20
      ac:	b	b4 <grub_mod_init-0x1d6c>
      b0:	ldr	w0, [sp, #12]
      b4:	add	sp, sp, #0x10
      b8:	ret
      bc:	sub	sp, sp, #0x10
      c0:	str	w0, [sp, #12]
      c4:	ldr	w0, [sp, #12]
      c8:	cmp	w0, #0x60
      cc:	b.le	e8 <grub_mod_init-0x1d38>
      d0:	ldr	w0, [sp, #12]
      d4:	cmp	w0, #0x7a
      d8:	b.gt	e8 <grub_mod_init-0x1d38>
      dc:	ldr	w0, [sp, #12]
      e0:	sub	w0, w0, #0x20
      e4:	b	ec <grub_mod_init-0x1d34>
      e8:	ldr	w0, [sp, #12]
      ec:	add	sp, sp, #0x10
      f0:	ret
      f4:	stp	x29, x30, [sp, #-48]!
      f8:	mov	x29, sp
      fc:	str	x19, [sp, #16]
     100:	str	x0, [sp, #40]
     104:	str	x1, [sp, #32]
     108:	b	148 <grub_mod_init-0x1cd8>
     10c:	ldr	x0, [sp, #40]
     110:	ldrb	w0, [x0]
     114:	bl	84 <grub_mod_init-0x1d9c>
     118:	mov	w19, w0
     11c:	ldr	x0, [sp, #32]
     120:	ldrb	w0, [x0]
     124:	bl	84 <grub_mod_init-0x1d9c>
     128:	cmp	w19, w0
     12c:	b.ne	16c <grub_mod_init-0x1cb4>  // b.any
     130:	ldr	x0, [sp, #40]
     134:	add	x0, x0, #0x1
     138:	str	x0, [sp, #40]
     13c:	ldr	x0, [sp, #32]
     140:	add	x0, x0, #0x1
     144:	str	x0, [sp, #32]
     148:	ldr	x0, [sp, #40]
     14c:	ldrb	w0, [x0]
     150:	cmp	w0, #0x0
     154:	b.eq	170 <grub_mod_init-0x1cb0>  // b.none
     158:	ldr	x0, [sp, #32]
     15c:	ldrb	w0, [x0]
     160:	cmp	w0, #0x0
     164:	b.ne	10c <grub_mod_init-0x1d14>  // b.any
     168:	b	170 <grub_mod_init-0x1cb0>
     16c:	nop
     170:	ldr	x0, [sp, #40]
     174:	ldrb	w0, [x0]
     178:	bl	84 <grub_mod_init-0x1d9c>
     17c:	mov	w19, w0
     180:	ldr	x0, [sp, #32]
     184:	ldrb	w0, [x0]
     188:	bl	84 <grub_mod_init-0x1d9c>
     18c:	sub	w0, w19, w0
     190:	ldr	x19, [sp, #16]
     194:	ldp	x29, x30, [sp], #48
     198:	ret
     19c:	sub	sp, sp, #0x30
     1a0:	str	x0, [sp, #24]
     1a4:	str	x1, [sp, #16]
     1a8:	str	x2, [sp, #8]
     1ac:	str	wzr, [sp, #44]
     1b0:	b	500 <grub_mod_init-0x1920>
     1b4:	ldr	x0, [sp, #16]
     1b8:	add	x1, x0, #0x2
     1bc:	str	x1, [sp, #16]
     1c0:	ldrh	w0, [x0]
     1c4:	str	w0, [sp, #40]
     1c8:	ldr	w0, [sp, #44]
     1cc:	cmp	w0, #0x0
     1d0:	b.eq	2e8 <grub_mod_init-0x1b38>  // b.none
     1d4:	ldr	w1, [sp, #40]
     1d8:	mov	w0, #0xdbff                	// #56319
     1dc:	cmp	w1, w0
     1e0:	b.ls	2c0 <grub_mod_init-0x1b60>  // b.plast
     1e4:	ldr	w1, [sp, #40]
     1e8:	mov	w0, #0xdfff                	// #57343
     1ec:	cmp	w1, w0
     1f0:	b.hi	2c0 <grub_mod_init-0x1b60>  // b.pmore
     1f4:	ldr	w1, [sp, #44]
     1f8:	mov	w0, #0xffff2800            	// #-55296
     1fc:	add	w0, w1, w0
     200:	lsl	w1, w0, #10
     204:	ldr	w0, [sp, #40]
     208:	add	w1, w1, w0
     20c:	mov	w0, #0x2400                	// #9216
     210:	add	w0, w1, w0
     214:	str	w0, [sp, #40]
     218:	ldr	w0, [sp, #40]
     21c:	lsr	w0, w0, #18
     220:	and	w1, w0, #0xff
     224:	ldr	x0, [sp, #24]
     228:	add	x2, x0, #0x1
     22c:	str	x2, [sp, #24]
     230:	orr	w1, w1, #0xfffffff0
     234:	and	w1, w1, #0xff
     238:	strb	w1, [x0]
     23c:	ldr	w0, [sp, #40]
     240:	lsr	w0, w0, #12
     244:	and	w0, w0, #0xff
     248:	and	w0, w0, #0x3f
     24c:	and	w1, w0, #0xff
     250:	ldr	x0, [sp, #24]
     254:	add	x2, x0, #0x1
     258:	str	x2, [sp, #24]
     25c:	orr	w1, w1, #0xffffff80
     260:	and	w1, w1, #0xff
     264:	strb	w1, [x0]
     268:	ldr	w0, [sp, #40]
     26c:	lsr	w0, w0, #6
     270:	and	w0, w0, #0xff
     274:	and	w0, w0, #0x3f
     278:	and	w1, w0, #0xff
     27c:	ldr	x0, [sp, #24]
     280:	add	x2, x0, #0x1
     284:	str	x2, [sp, #24]
     288:	orr	w1, w1, #0xffffff80
     28c:	and	w1, w1, #0xff
     290:	strb	w1, [x0]
     294:	ldr	w0, [sp, #40]
     298:	and	w0, w0, #0xff
     29c:	and	w0, w0, #0x3f
     2a0:	and	w1, w0, #0xff
     2a4:	ldr	x0, [sp, #24]
     2a8:	add	x2, x0, #0x1
     2ac:	str	x2, [sp, #24]
     2b0:	orr	w1, w1, #0xffffff80
     2b4:	and	w1, w1, #0xff
     2b8:	strb	w1, [x0]
     2bc:	b	2e0 <grub_mod_init-0x1b40>
     2c0:	ldr	x0, [sp, #24]
     2c4:	add	x1, x0, #0x1
     2c8:	str	x1, [sp, #24]
     2cc:	mov	w1, #0x3f                  	// #63
     2d0:	strb	w1, [x0]
     2d4:	ldr	x0, [sp, #16]
     2d8:	sub	x0, x0, #0x2
     2dc:	str	x0, [sp, #16]
     2e0:	str	wzr, [sp, #44]
     2e4:	b	500 <grub_mod_init-0x1920>
     2e8:	ldr	w0, [sp, #40]
     2ec:	cmp	w0, #0x7f
     2f0:	b.hi	310 <grub_mod_init-0x1b10>  // b.pmore
     2f4:	ldr	x0, [sp, #24]
     2f8:	add	x1, x0, #0x1
     2fc:	str	x1, [sp, #24]
     300:	ldr	w1, [sp, #40]
     304:	and	w1, w1, #0xff
     308:	strb	w1, [x0]
     30c:	b	500 <grub_mod_init-0x1920>
     310:	ldr	w0, [sp, #40]
     314:	cmp	w0, #0x7ff
     318:	b.hi	36c <grub_mod_init-0x1ab4>  // b.pmore
     31c:	ldr	w0, [sp, #40]
     320:	lsr	w0, w0, #6
     324:	and	w1, w0, #0xff
     328:	ldr	x0, [sp, #24]
     32c:	add	x2, x0, #0x1
     330:	str	x2, [sp, #24]
     334:	orr	w1, w1, #0xffffffc0
     338:	and	w1, w1, #0xff
     33c:	strb	w1, [x0]
     340:	ldr	w0, [sp, #40]
     344:	and	w0, w0, #0xff
     348:	and	w0, w0, #0x3f
     34c:	and	w1, w0, #0xff
     350:	ldr	x0, [sp, #24]
     354:	add	x2, x0, #0x1
     358:	str	x2, [sp, #24]
     35c:	orr	w1, w1, #0xffffff80
     360:	and	w1, w1, #0xff
     364:	strb	w1, [x0]
     368:	b	500 <grub_mod_init-0x1920>
     36c:	ldr	w1, [sp, #40]
     370:	mov	w0, #0xd7ff                	// #55295
     374:	cmp	w1, w0
     378:	b.ls	398 <grub_mod_init-0x1a88>  // b.plast
     37c:	ldr	w1, [sp, #40]
     380:	mov	w0, #0xdbff                	// #56319
     384:	cmp	w1, w0
     388:	b.hi	398 <grub_mod_init-0x1a88>  // b.pmore
     38c:	ldr	w0, [sp, #40]
     390:	str	w0, [sp, #44]
     394:	b	500 <grub_mod_init-0x1920>
     398:	ldr	w1, [sp, #40]
     39c:	mov	w0, #0xdbff                	// #56319
     3a0:	cmp	w1, w0
     3a4:	b.ls	3d0 <grub_mod_init-0x1a50>  // b.plast
     3a8:	ldr	w1, [sp, #40]
     3ac:	mov	w0, #0xdfff                	// #57343
     3b0:	cmp	w1, w0
     3b4:	b.hi	3d0 <grub_mod_init-0x1a50>  // b.pmore
     3b8:	ldr	x0, [sp, #24]
     3bc:	add	x1, x0, #0x1
     3c0:	str	x1, [sp, #24]
     3c4:	mov	w1, #0x3f                  	// #63
     3c8:	strb	w1, [x0]
     3cc:	b	500 <grub_mod_init-0x1920>
     3d0:	ldr	w1, [sp, #40]
     3d4:	mov	w0, #0xffff                	// #65535
     3d8:	cmp	w1, w0
     3dc:	b.hi	45c <grub_mod_init-0x19c4>  // b.pmore
     3e0:	ldr	w0, [sp, #40]
     3e4:	lsr	w0, w0, #12
     3e8:	and	w1, w0, #0xff
     3ec:	ldr	x0, [sp, #24]
     3f0:	add	x2, x0, #0x1
     3f4:	str	x2, [sp, #24]
     3f8:	orr	w1, w1, #0xffffffe0
     3fc:	and	w1, w1, #0xff
     400:	strb	w1, [x0]
     404:	ldr	w0, [sp, #40]
     408:	lsr	w0, w0, #6
     40c:	and	w0, w0, #0xff
     410:	and	w0, w0, #0x3f
     414:	and	w1, w0, #0xff
     418:	ldr	x0, [sp, #24]
     41c:	add	x2, x0, #0x1
     420:	str	x2, [sp, #24]
     424:	orr	w1, w1, #0xffffff80
     428:	and	w1, w1, #0xff
     42c:	strb	w1, [x0]
     430:	ldr	w0, [sp, #40]
     434:	and	w0, w0, #0xff
     438:	and	w0, w0, #0x3f
     43c:	and	w1, w0, #0xff
     440:	ldr	x0, [sp, #24]
     444:	add	x2, x0, #0x1
     448:	str	x2, [sp, #24]
     44c:	orr	w1, w1, #0xffffff80
     450:	and	w1, w1, #0xff
     454:	strb	w1, [x0]
     458:	b	500 <grub_mod_init-0x1920>
     45c:	ldr	w0, [sp, #40]
     460:	lsr	w0, w0, #18
     464:	and	w1, w0, #0xff
     468:	ldr	x0, [sp, #24]
     46c:	add	x2, x0, #0x1
     470:	str	x2, [sp, #24]
     474:	orr	w1, w1, #0xfffffff0
     478:	and	w1, w1, #0xff
     47c:	strb	w1, [x0]
     480:	ldr	w0, [sp, #40]
     484:	lsr	w0, w0, #12
     488:	and	w0, w0, #0xff
     48c:	and	w0, w0, #0x3f
     490:	and	w1, w0, #0xff
     494:	ldr	x0, [sp, #24]
     498:	add	x2, x0, #0x1
     49c:	str	x2, [sp, #24]
     4a0:	orr	w1, w1, #0xffffff80
     4a4:	and	w1, w1, #0xff
     4a8:	strb	w1, [x0]
     4ac:	ldr	w0, [sp, #40]
     4b0:	lsr	w0, w0, #6
     4b4:	and	w0, w0, #0xff
     4b8:	and	w0, w0, #0x3f
     4bc:	and	w1, w0, #0xff
     4c0:	ldr	x0, [sp, #24]
     4c4:	add	x2, x0, #0x1
     4c8:	str	x2, [sp, #24]
     4cc:	orr	w1, w1, #0xffffff80
     4d0:	and	w1, w1, #0xff
     4d4:	strb	w1, [x0]
     4d8:	ldr	w0, [sp, #40]
     4dc:	and	w0, w0, #0xff
     4e0:	and	w0, w0, #0x3f
     4e4:	and	w1, w0, #0xff
     4e8:	ldr	x0, [sp, #24]
     4ec:	add	x2, x0, #0x1
     4f0:	str	x2, [sp, #24]
     4f4:	orr	w1, w1, #0xffffff80
     4f8:	and	w1, w1, #0xff
     4fc:	strb	w1, [x0]
     500:	ldr	x0, [sp, #8]
     504:	sub	x1, x0, #0x1
     508:	str	x1, [sp, #8]
     50c:	cmp	x0, #0x0
     510:	b.ne	1b4 <grub_mod_init-0x1c6c>  // b.any
     514:	ldr	x0, [sp, #24]
     518:	add	sp, sp, #0x30
     51c:	ret
     520:	sub	sp, sp, #0x20
     524:	str	w0, [sp, #12]
     528:	ldr	w0, [sp, #12]
     52c:	cmp	w0, #0x0
     530:	b.ne	53c <grub_mod_init-0x18e4>  // b.any
     534:	mov	w0, #0xffffffff            	// #-1
     538:	b	584 <grub_mod_init-0x189c>
     53c:	str	wzr, [sp, #28]
     540:	b	55c <grub_mod_init-0x18c4>
     544:	ldr	w0, [sp, #12]
     548:	lsr	w0, w0, #1
     54c:	str	w0, [sp, #12]
     550:	ldr	w0, [sp, #28]
     554:	add	w0, w0, #0x1
     558:	str	w0, [sp, #28]
     55c:	ldr	w0, [sp, #12]
     560:	and	w0, w0, #0x1
     564:	cmp	w0, #0x0
     568:	b.eq	544 <grub_mod_init-0x18dc>  // b.none
     56c:	ldr	w0, [sp, #12]
     570:	cmp	w0, #0x1
     574:	b.eq	580 <grub_mod_init-0x18a0>  // b.none
     578:	mov	w0, #0xffffffff            	// #-1
     57c:	b	584 <grub_mod_init-0x189c>
     580:	ldr	w0, [sp, #28]
     584:	add	sp, sp, #0x20
     588:	ret
     58c:	stp	x29, x30, [sp, #-160]!
     590:	mov	x29, sp
     594:	str	x0, [sp, #24]
     598:	str	xzr, [sp, #152]
     59c:	ldr	x0, [sp, #24]
     5a0:	cmp	x0, #0x0
     5a4:	b.eq	9f4 <grub_mod_init-0x142c>  // b.none
     5a8:	mov	x0, #0x34                  	// #52
     5ac:	bl	0 <grub_malloc>
     5b0:	str	x0, [sp, #152]
     5b4:	ldr	x0, [sp, #152]
     5b8:	cmp	x0, #0x0
     5bc:	b.eq	9fc <grub_mod_init-0x1424>  // b.none
     5c0:	add	x0, sp, #0x30
     5c4:	mov	x4, x0
     5c8:	mov	x3, #0x5a                  	// #90
     5cc:	mov	x2, #0x0                   	// #0
     5d0:	mov	x1, #0x0                   	// #0
     5d4:	ldr	x0, [sp, #24]
     5d8:	bl	0 <grub_disk_read>
     5dc:	cmp	w0, #0x0
     5e0:	b.ne	a04 <grub_mod_init-0x141c>  // b.any
     5e4:	ldurh	w0, [sp, #59]
     5e8:	bl	520 <grub_mod_init-0x1900>
     5ec:	mov	w1, w0
     5f0:	ldr	x0, [sp, #152]
     5f4:	str	w1, [x0]
     5f8:	ldr	x0, [sp, #152]
     5fc:	ldr	w0, [x0]
     600:	cmp	w0, #0x8
     604:	b.le	a0c <grub_mod_init-0x1414>
     608:	ldr	x0, [sp, #152]
     60c:	ldr	w0, [x0]
     610:	cmp	w0, #0xf
     614:	b.gt	a0c <grub_mod_init-0x1414>
     618:	ldr	x0, [sp, #152]
     61c:	ldr	w0, [x0]
     620:	sub	w1, w0, #0x9
     624:	ldr	x0, [sp, #152]
     628:	str	w1, [x0]
     62c:	ldrb	w0, [sp, #61]
     630:	bl	520 <grub_mod_init-0x1900>
     634:	mov	w1, w0
     638:	ldr	x0, [sp, #152]
     63c:	str	w1, [x0, #32]
     640:	ldr	x0, [sp, #152]
     644:	ldr	w0, [x0, #32]
     648:	cmp	w0, #0x0
     64c:	b.lt	a14 <grub_mod_init-0x140c>  // b.tstop
     650:	ldr	x0, [sp, #152]
     654:	ldr	w0, [x0, #32]
     658:	cmp	w0, #0x19
     65c:	b.gt	a14 <grub_mod_init-0x140c>
     660:	ldr	x0, [sp, #152]
     664:	ldr	w1, [x0, #32]
     668:	ldr	x0, [sp, #152]
     66c:	ldr	w0, [x0]
     670:	add	w1, w1, w0
     674:	ldr	x0, [sp, #152]
     678:	str	w1, [x0, #32]
     67c:	ldrh	w0, [sp, #62]
     680:	mov	w1, w0
     684:	ldr	x0, [sp, #152]
     688:	ldr	w0, [x0]
     68c:	lsl	w0, w1, w0
     690:	mov	w1, w0
     694:	ldr	x0, [sp, #152]
     698:	str	w1, [x0, #8]
     69c:	ldr	x0, [sp, #152]
     6a0:	ldr	w0, [x0, #8]
     6a4:	cmp	w0, #0x0
     6a8:	b.eq	a1c <grub_mod_init-0x1404>  // b.none
     6ac:	ldrh	w0, [sp, #70]
     6b0:	cmp	w0, #0x0
     6b4:	b.eq	6c0 <grub_mod_init-0x1760>  // b.none
     6b8:	ldrh	w0, [sp, #70]
     6bc:	b	6c4 <grub_mod_init-0x175c>
     6c0:	ldr	w0, [sp, #84]
     6c4:	ldr	x1, [sp, #152]
     6c8:	ldr	w1, [x1]
     6cc:	lsl	w1, w0, w1
     6d0:	ldr	x0, [sp, #152]
     6d4:	str	w1, [x0, #12]
     6d8:	ldr	x0, [sp, #152]
     6dc:	ldr	w0, [x0, #12]
     6e0:	cmp	w0, #0x0
     6e4:	b.eq	a24 <grub_mod_init-0x13fc>  // b.none
     6e8:	ldurh	w0, [sp, #67]
     6ec:	cmp	w0, #0x0
     6f0:	b.eq	6fc <grub_mod_init-0x1724>  // b.none
     6f4:	ldurh	w0, [sp, #67]
     6f8:	b	700 <grub_mod_init-0x1720>
     6fc:	ldr	w0, [sp, #80]
     700:	ldr	x1, [sp, #152]
     704:	ldr	w1, [x1]
     708:	lsl	w1, w0, w1
     70c:	ldr	x0, [sp, #152]
     710:	str	w1, [x0, #4]
     714:	ldr	x0, [sp, #152]
     718:	ldr	w0, [x0, #4]
     71c:	cmp	w0, #0x0
     720:	b.eq	a2c <grub_mod_init-0x13f4>  // b.none
     724:	ldrb	w0, [sp, #64]
     728:	cmp	w0, #0x0
     72c:	b.eq	a34 <grub_mod_init-0x13ec>  // b.none
     730:	ldr	x0, [sp, #152]
     734:	ldr	w1, [x0, #8]
     738:	ldrb	w0, [sp, #64]
     73c:	mov	w2, w0
     740:	ldr	x0, [sp, #152]
     744:	ldr	w0, [x0, #12]
     748:	mul	w0, w2, w0
     74c:	add	w1, w1, w0
     750:	ldr	x0, [sp, #152]
     754:	str	w1, [x0, #24]
     758:	ldurh	w0, [sp, #65]
     75c:	and	x0, x0, #0xffff
     760:	lsl	x1, x0, #5
     764:	ldurh	w0, [sp, #59]
     768:	and	x0, x0, #0xffff
     76c:	add	x0, x1, x0
     770:	sub	x1, x0, #0x1
     774:	ldr	x0, [sp, #152]
     778:	ldr	w0, [x0]
     77c:	add	w0, w0, #0x9
     780:	lsr	x1, x1, x0
     784:	ldr	x0, [sp, #152]
     788:	ldr	w0, [x0]
     78c:	lsl	x0, x1, x0
     790:	mov	w1, w0
     794:	ldr	x0, [sp, #152]
     798:	str	w1, [x0, #28]
     79c:	ldr	x0, [sp, #152]
     7a0:	ldr	w1, [x0, #24]
     7a4:	ldr	x0, [sp, #152]
     7a8:	ldr	w0, [x0, #28]
     7ac:	add	w1, w1, w0
     7b0:	ldr	x0, [sp, #152]
     7b4:	str	w1, [x0, #40]
     7b8:	ldr	x0, [sp, #152]
     7bc:	ldr	w1, [x0, #4]
     7c0:	ldr	x0, [sp, #152]
     7c4:	ldr	w0, [x0, #40]
     7c8:	sub	w1, w1, w0
     7cc:	ldr	x0, [sp, #152]
     7d0:	ldr	w0, [x0, #32]
     7d4:	lsr	w0, w1, w0
     7d8:	add	w1, w0, #0x2
     7dc:	ldr	x0, [sp, #152]
     7e0:	str	w1, [x0, #44]
     7e4:	ldr	x0, [sp, #152]
     7e8:	ldr	w0, [x0, #44]
     7ec:	cmp	w0, #0x2
     7f0:	b.ls	a3c <grub_mod_init-0x13e4>  // b.plast
     7f4:	ldrh	w0, [sp, #70]
     7f8:	cmp	w0, #0x0
     7fc:	b.ne	89c <grub_mod_init-0x1584>  // b.any
     800:	ldrh	w0, [sp, #88]
     804:	strh	w0, [sp, #146]
     808:	ldr	w1, [sp, #92]
     80c:	ldr	x0, [sp, #152]
     810:	str	w1, [x0, #20]
     814:	ldr	x0, [sp, #152]
     818:	mov	w1, #0x20                  	// #32
     81c:	str	w1, [x0, #16]
     820:	ldr	x0, [sp, #152]
     824:	mov	w1, #0xffffff8             	// #268435448
     828:	str	w1, [x0, #36]
     82c:	ldrh	w0, [sp, #146]
     830:	and	w0, w0, #0x80
     834:	cmp	w0, #0x0
     838:	b.eq	880 <grub_mod_init-0x15a0>  // b.none
     83c:	ldrh	w0, [sp, #146]
     840:	and	w0, w0, #0xf
     844:	str	w0, [sp, #140]
     848:	ldrb	w0, [sp, #64]
     84c:	mov	w1, w0
     850:	ldr	w0, [sp, #140]
     854:	cmp	w0, w1
     858:	b.hi	a44 <grub_mod_init-0x13dc>  // b.pmore
     85c:	ldr	x0, [sp, #152]
     860:	ldr	w1, [x0, #8]
     864:	ldr	x0, [sp, #152]
     868:	ldr	w2, [x0, #12]
     86c:	ldr	w0, [sp, #140]
     870:	mul	w0, w2, w0
     874:	add	w1, w1, w0
     878:	ldr	x0, [sp, #152]
     87c:	str	w1, [x0, #8]
     880:	ldurh	w0, [sp, #65]
     884:	cmp	w0, #0x0
     888:	b.ne	a4c <grub_mod_init-0x13d4>  // b.any
     88c:	ldrh	w0, [sp, #90]
     890:	cmp	w0, #0x0
     894:	b.eq	8ec <grub_mod_init-0x1534>  // b.none
     898:	b	a4c <grub_mod_init-0x13d4>
     89c:	ldr	x0, [sp, #152]
     8a0:	mov	w1, #0xffffffff            	// #-1
     8a4:	str	w1, [x0, #20]
     8a8:	ldr	x0, [sp, #152]
     8ac:	ldr	w0, [x0, #44]
     8b0:	cmp	w0, #0xff7
     8b4:	b.hi	8d4 <grub_mod_init-0x154c>  // b.pmore
     8b8:	ldr	x0, [sp, #152]
     8bc:	mov	w1, #0xc                   	// #12
     8c0:	str	w1, [x0, #16]
     8c4:	ldr	x0, [sp, #152]
     8c8:	mov	w1, #0xff8                 	// #4088
     8cc:	str	w1, [x0, #36]
     8d0:	b	8ec <grub_mod_init-0x1534>
     8d4:	ldr	x0, [sp, #152]
     8d8:	mov	w1, #0x10                  	// #16
     8dc:	str	w1, [x0, #16]
     8e0:	ldr	x0, [sp, #152]
     8e4:	mov	w1, #0xfff8                	// #65528
     8e8:	str	w1, [x0, #36]
     8ec:	ldr	x0, [sp, #152]
     8f0:	ldr	w1, [x0, #4]
     8f4:	ldr	x0, [sp, #152]
     8f8:	ldr	w0, [x0, #8]
     8fc:	cmp	w1, w0
     900:	b.ls	a54 <grub_mod_init-0x13cc>  // b.plast
     904:	ldr	x0, [sp, #152]
     908:	ldr	w0, [x0, #8]
     90c:	mov	w0, w0
     910:	add	x1, sp, #0x2c
     914:	mov	x4, x1
     918:	mov	x3, #0x4                   	// #4
     91c:	mov	x2, #0x0                   	// #0
     920:	mov	x1, x0
     924:	ldr	x0, [sp, #24]
     928:	bl	0 <grub_disk_read>
     92c:	cmp	w0, #0x0
     930:	b.ne	a5c <grub_mod_init-0x13c4>  // b.any
     934:	ldr	w0, [sp, #44]
     938:	str	w0, [sp, #44]
     93c:	ldr	x0, [sp, #152]
     940:	ldr	w0, [x0, #16]
     944:	cmp	w0, #0x20
     948:	b.ne	964 <grub_mod_init-0x14bc>  // b.any
     94c:	ldr	w0, [sp, #44]
     950:	and	w0, w0, #0xfffffff
     954:	str	w0, [sp, #44]
     958:	mov	w0, #0xfffff00             	// #268435200
     95c:	str	w0, [sp, #148]
     960:	b	9a0 <grub_mod_init-0x1480>
     964:	ldr	x0, [sp, #152]
     968:	ldr	w0, [x0, #16]
     96c:	cmp	w0, #0x10
     970:	b.ne	98c <grub_mod_init-0x1494>  // b.any
     974:	ldr	w0, [sp, #44]
     978:	and	w0, w0, #0xffff
     97c:	str	w0, [sp, #44]
     980:	mov	w0, #0xff00                	// #65280
     984:	str	w0, [sp, #148]
     988:	b	9a0 <grub_mod_init-0x1480>
     98c:	ldr	w0, [sp, #44]
     990:	and	w0, w0, #0xfff
     994:	str	w0, [sp, #44]
     998:	mov	w0, #0xf00                 	// #3840
     99c:	str	w0, [sp, #148]
     9a0:	ldrh	w0, [sp, #70]
     9a4:	cmp	w0, #0x0
     9a8:	b.eq	9bc <grub_mod_init-0x1464>  // b.none
     9ac:	ldur	w1, [sp, #87]
     9b0:	ldr	x0, [sp, #152]
     9b4:	str	w1, [x0, #48]
     9b8:	b	9c8 <grub_mod_init-0x1458>
     9bc:	ldur	w1, [sp, #115]
     9c0:	ldr	x0, [sp, #152]
     9c4:	str	w1, [x0, #48]
     9c8:	ldr	w0, [sp, #44]
     9cc:	orr	w1, w0, #0x8
     9d0:	ldrb	w0, [sp, #69]
     9d4:	mov	w2, w0
     9d8:	ldr	w0, [sp, #148]
     9dc:	orr	w0, w2, w0
     9e0:	orr	w0, w0, #0x8
     9e4:	cmp	w1, w0
     9e8:	b.ne	a64 <grub_mod_init-0x13bc>  // b.any
     9ec:	ldr	x0, [sp, #152]
     9f0:	b	a88 <grub_mod_init-0x1398>
     9f4:	nop
     9f8:	b	a68 <grub_mod_init-0x13b8>
     9fc:	nop
     a00:	b	a68 <grub_mod_init-0x13b8>
     a04:	nop
     a08:	b	a68 <grub_mod_init-0x13b8>
     a0c:	nop
     a10:	b	a68 <grub_mod_init-0x13b8>
     a14:	nop
     a18:	b	a68 <grub_mod_init-0x13b8>
     a1c:	nop
     a20:	b	a68 <grub_mod_init-0x13b8>
     a24:	nop
     a28:	b	a68 <grub_mod_init-0x13b8>
     a2c:	nop
     a30:	b	a68 <grub_mod_init-0x13b8>
     a34:	nop
     a38:	b	a68 <grub_mod_init-0x13b8>
     a3c:	nop
     a40:	b	a68 <grub_mod_init-0x13b8>
     a44:	nop
     a48:	b	a68 <grub_mod_init-0x13b8>
     a4c:	nop
     a50:	b	a68 <grub_mod_init-0x13b8>
     a54:	nop
     a58:	b	a68 <grub_mod_init-0x13b8>
     a5c:	nop
     a60:	b	a68 <grub_mod_init-0x13b8>
     a64:	nop
     a68:	ldr	x0, [sp, #152]
     a6c:	bl	0 <grub_free>
     a70:	adrp	x0, 0 <grub_mod_init-0x1e20>
     a74:	add	x0, x0, #0x0
     a78:	ldr	x1, [x0]
     a7c:	mov	w0, #0x9                   	// #9
     a80:	bl	0 <grub_error>
     a84:	mov	x0, #0x0                   	// #0
     a88:	ldp	x29, x30, [sp], #160
     a8c:	ret
	...
     a98:	stp	x29, x30, [sp, #-128]!
     a9c:	mov	x29, sp
     aa0:	str	x0, [sp, #72]
     aa4:	str	x1, [sp, #64]
     aa8:	str	x2, [sp, #56]
     aac:	str	x3, [sp, #48]
     ab0:	str	x4, [sp, #40]
     ab4:	str	x5, [sp, #32]
     ab8:	str	x6, [sp, #24]
     abc:	str	xzr, [sp, #104]
     ac0:	ldr	x0, [sp, #64]
     ac4:	ldr	w0, [x0, #24]
     ac8:	cmn	w0, #0x1
     acc:	b.ne	b48 <grub_mod_init-0x12d8>  // b.any
     ad0:	ldr	x0, [sp, #64]
     ad4:	ldr	x0, [x0, #8]
     ad8:	ldr	w0, [x0, #28]
     adc:	lsl	w0, w0, #9
     ae0:	mov	w1, w0
     ae4:	ldr	x0, [sp, #40]
     ae8:	sub	x0, x1, x0
     aec:	str	x0, [sp, #120]
     af0:	ldr	x1, [sp, #120]
     af4:	ldr	x0, [sp, #32]
     af8:	cmp	x1, x0
     afc:	b.ls	b08 <grub_mod_init-0x1318>  // b.plast
     b00:	ldr	x0, [sp, #32]
     b04:	str	x0, [sp, #120]
     b08:	ldr	x0, [sp, #64]
     b0c:	ldr	x0, [x0, #8]
     b10:	ldr	w0, [x0, #24]
     b14:	mov	w0, w0
     b18:	ldr	x4, [sp, #24]
     b1c:	ldr	x3, [sp, #120]
     b20:	ldr	x2, [sp, #40]
     b24:	mov	x1, x0
     b28:	ldr	x0, [sp, #72]
     b2c:	bl	0 <grub_disk_read>
     b30:	cmp	w0, #0x0
     b34:	b.eq	b40 <grub_mod_init-0x12e0>  // b.none
     b38:	mov	x0, #0xffffffffffffffff    	// #-1
     b3c:	b	ec0 <grub_mod_init-0xf60>
     b40:	ldr	x0, [sp, #120]
     b44:	b	ec0 <grub_mod_init-0xf60>
     b48:	ldr	x0, [sp, #64]
     b4c:	ldr	x0, [x0, #8]
     b50:	ldr	w0, [x0, #32]
     b54:	add	w0, w0, #0x9
     b58:	str	w0, [sp, #96]
     b5c:	ldr	w0, [sp, #96]
     b60:	ldr	x1, [sp, #40]
     b64:	lsr	x0, x1, x0
     b68:	str	w0, [sp, #116]
     b6c:	ldr	w0, [sp, #96]
     b70:	mov	x1, #0xffffffffffffffff    	// #-1
     b74:	lsl	x0, x1, x0
     b78:	mvn	x0, x0
     b7c:	ldr	x1, [sp, #40]
     b80:	and	x0, x1, x0
     b84:	str	x0, [sp, #40]
     b88:	ldr	x0, [sp, #64]
     b8c:	ldr	w0, [x0, #28]
     b90:	ldr	w1, [sp, #116]
     b94:	cmp	w1, w0
     b98:	b.cs	eb0 <grub_mod_init-0xf70>  // b.hs, b.nlast
     b9c:	ldr	x0, [sp, #64]
     ba0:	str	wzr, [x0, #28]
     ba4:	ldr	x0, [sp, #64]
     ba8:	ldr	w1, [x0, #24]
     bac:	ldr	x0, [sp, #64]
     bb0:	str	w1, [x0, #32]
     bb4:	b	eb0 <grub_mod_init-0xf70>
     bb8:	ldr	x0, [sp, #64]
     bbc:	ldr	x0, [x0, #8]
     bc0:	ldr	w0, [x0, #16]
     bc4:	cmp	w0, #0x10
     bc8:	b.eq	be8 <grub_mod_init-0x1238>  // b.none
     bcc:	cmp	w0, #0x20
     bd0:	b.ne	bfc <grub_mod_init-0x1224>  // b.any
     bd4:	ldr	x0, [sp, #64]
     bd8:	ldr	w0, [x0, #32]
     bdc:	lsl	w0, w0, #2
     be0:	str	w0, [sp, #100]
     be4:	b	c1c <grub_mod_init-0x1204>
     be8:	ldr	x0, [sp, #64]
     bec:	ldr	w0, [x0, #32]
     bf0:	lsl	w0, w0, #1
     bf4:	str	w0, [sp, #100]
     bf8:	b	c1c <grub_mod_init-0x1204>
     bfc:	ldr	x0, [sp, #64]
     c00:	ldr	w1, [x0, #32]
     c04:	ldr	x0, [sp, #64]
     c08:	ldr	w0, [x0, #32]
     c0c:	lsr	w0, w0, #1
     c10:	add	w0, w1, w0
     c14:	str	w0, [sp, #100]
     c18:	nop
     c1c:	ldr	x0, [sp, #64]
     c20:	ldr	x0, [x0, #8]
     c24:	ldr	w0, [x0, #8]
     c28:	mov	w1, w0
     c2c:	ldr	w2, [sp, #100]
     c30:	ldr	x0, [sp, #64]
     c34:	ldr	x0, [x0, #8]
     c38:	ldr	w0, [x0, #16]
     c3c:	add	w0, w0, #0x7
     c40:	asr	w0, w0, #3
     c44:	sxtw	x0, w0
     c48:	add	x3, sp, #0x54
     c4c:	mov	x4, x3
     c50:	mov	x3, x0
     c54:	ldr	x0, [sp, #72]
     c58:	bl	0 <grub_disk_read>
     c5c:	cmp	w0, #0x0
     c60:	b.eq	c6c <grub_mod_init-0x11b4>  // b.none
     c64:	mov	x0, #0xffffffffffffffff    	// #-1
     c68:	b	ec0 <grub_mod_init-0xf60>
     c6c:	ldr	w0, [sp, #84]
     c70:	str	w0, [sp, #84]
     c74:	ldr	x0, [sp, #64]
     c78:	ldr	x0, [x0, #8]
     c7c:	ldr	w0, [x0, #16]
     c80:	cmp	w0, #0xc
     c84:	b.eq	ca0 <grub_mod_init-0x1180>  // b.none
     c88:	cmp	w0, #0x10
     c8c:	b.ne	cd0 <grub_mod_init-0x1150>  // b.any
     c90:	ldr	w0, [sp, #84]
     c94:	and	w0, w0, #0xffff
     c98:	str	w0, [sp, #84]
     c9c:	b	cd0 <grub_mod_init-0x1150>
     ca0:	ldr	x0, [sp, #64]
     ca4:	ldr	w0, [x0, #32]
     ca8:	and	w0, w0, #0x1
     cac:	cmp	w0, #0x0
     cb0:	b.eq	cc0 <grub_mod_init-0x1160>  // b.none
     cb4:	ldr	w0, [sp, #84]
     cb8:	lsr	w0, w0, #4
     cbc:	str	w0, [sp, #84]
     cc0:	ldr	w0, [sp, #84]
     cc4:	and	w0, w0, #0xfff
     cc8:	str	w0, [sp, #84]
     ccc:	nop
     cd0:	ldr	x0, [sp, #64]
     cd4:	ldr	x0, [x0, #8]
     cd8:	ldr	w0, [x0, #16]
     cdc:	ldr	w1, [sp, #84]
     ce0:	mov	w5, w1
     ce4:	mov	w4, w0
     ce8:	adrp	x0, 0 <grub_mod_init-0x1e20>
     cec:	add	x0, x0, #0x0
     cf0:	ldr	x3, [x0]
     cf4:	adrp	x0, 0 <grub_mod_init-0x1e20>
     cf8:	add	x0, x0, #0x0
     cfc:	ldr	x2, [x0]
     d00:	mov	w1, #0x228                 	// #552
     d04:	adrp	x0, 0 <grub_mod_init-0x1e20>
     d08:	add	x0, x0, #0x0
     d0c:	ldr	x0, [x0]
     d10:	bl	0 <grub_real_dprintf>
     d14:	ldr	x0, [sp, #64]
     d18:	ldr	x0, [x0, #8]
     d1c:	ldr	w1, [x0, #36]
     d20:	ldr	w0, [sp, #84]
     d24:	cmp	w1, w0
     d28:	b.hi	d34 <grub_mod_init-0x10ec>  // b.pmore
     d2c:	ldr	x0, [sp, #104]
     d30:	b	ec0 <grub_mod_init-0xf60>
     d34:	ldr	w0, [sp, #84]
     d38:	cmp	w0, #0x1
     d3c:	b.ls	d58 <grub_mod_init-0x10c8>  // b.plast
     d40:	ldr	x0, [sp, #64]
     d44:	ldr	x0, [x0, #8]
     d48:	ldr	w1, [x0, #44]
     d4c:	ldr	w0, [sp, #84]
     d50:	cmp	w1, w0
     d54:	b.hi	d7c <grub_mod_init-0x10a4>  // b.pmore
     d58:	ldr	w0, [sp, #84]
     d5c:	mov	w2, w0
     d60:	adrp	x0, 0 <grub_mod_init-0x1e20>
     d64:	add	x0, x0, #0x0
     d68:	ldr	x1, [x0]
     d6c:	mov	w0, #0x9                   	// #9
     d70:	bl	0 <grub_error>
     d74:	mov	x0, #0xffffffffffffffff    	// #-1
     d78:	b	ec0 <grub_mod_init-0xf60>
     d7c:	ldr	w1, [sp, #84]
     d80:	ldr	x0, [sp, #64]
     d84:	str	w1, [x0, #32]
     d88:	ldr	x0, [sp, #64]
     d8c:	ldr	w0, [x0, #28]
     d90:	add	w1, w0, #0x1
     d94:	ldr	x0, [sp, #64]
     d98:	str	w1, [x0, #28]
     d9c:	ldr	x0, [sp, #64]
     da0:	ldr	w0, [x0, #28]
     da4:	ldr	w1, [sp, #116]
     da8:	cmp	w1, w0
     dac:	b.hi	bb8 <grub_mod_init-0x1268>  // b.pmore
     db0:	ldr	x0, [sp, #64]
     db4:	ldr	x0, [x0, #8]
     db8:	ldr	w1, [x0, #40]
     dbc:	ldr	x0, [sp, #64]
     dc0:	ldr	w0, [x0, #32]
     dc4:	sub	w2, w0, #0x2
     dc8:	ldr	x0, [sp, #64]
     dcc:	ldr	x0, [x0, #8]
     dd0:	ldr	w0, [x0, #32]
     dd4:	lsl	w0, w2, w0
     dd8:	add	w0, w1, w0
     ddc:	mov	w0, w0
     de0:	str	x0, [sp, #88]
     de4:	ldr	w0, [sp, #96]
     de8:	mov	w1, #0x1                   	// #1
     dec:	lsl	w0, w1, w0
     df0:	sxtw	x1, w0
     df4:	ldr	x0, [sp, #40]
     df8:	sub	x0, x1, x0
     dfc:	str	x0, [sp, #120]
     e00:	ldr	x1, [sp, #120]
     e04:	ldr	x0, [sp, #32]
     e08:	cmp	x1, x0
     e0c:	b.ls	e18 <grub_mod_init-0x1008>  // b.plast
     e10:	ldr	x0, [sp, #32]
     e14:	str	x0, [sp, #120]
     e18:	ldr	x0, [sp, #72]
     e1c:	ldr	x1, [sp, #56]
     e20:	str	x1, [x0, #48]
     e24:	ldr	x0, [sp, #72]
     e28:	ldr	x1, [sp, #48]
     e2c:	str	x1, [x0, #56]
     e30:	ldr	x4, [sp, #24]
     e34:	ldr	x3, [sp, #120]
     e38:	ldr	x2, [sp, #40]
     e3c:	ldr	x1, [sp, #88]
     e40:	ldr	x0, [sp, #72]
     e44:	bl	0 <grub_disk_read>
     e48:	ldr	x0, [sp, #72]
     e4c:	str	xzr, [x0, #48]
     e50:	adrp	x0, 0 <grub_mod_init-0x1e20>
     e54:	add	x0, x0, #0x0
     e58:	ldr	x0, [x0]
     e5c:	ldr	w0, [x0]
     e60:	cmp	w0, #0x0
     e64:	b.eq	e70 <grub_mod_init-0xfb0>  // b.none
     e68:	mov	x0, #0xffffffffffffffff    	// #-1
     e6c:	b	ec0 <grub_mod_init-0xf60>
     e70:	ldr	x1, [sp, #32]
     e74:	ldr	x0, [sp, #120]
     e78:	sub	x0, x1, x0
     e7c:	str	x0, [sp, #32]
     e80:	ldr	x1, [sp, #24]
     e84:	ldr	x0, [sp, #120]
     e88:	add	x0, x1, x0
     e8c:	str	x0, [sp, #24]
     e90:	ldr	x1, [sp, #104]
     e94:	ldr	x0, [sp, #120]
     e98:	add	x0, x1, x0
     e9c:	str	x0, [sp, #104]
     ea0:	ldr	w0, [sp, #116]
     ea4:	add	w0, w0, #0x1
     ea8:	str	w0, [sp, #116]
     eac:	str	xzr, [sp, #40]
     eb0:	ldr	x0, [sp, #32]
     eb4:	cmp	x0, #0x0
     eb8:	b.ne	d9c <grub_mod_init-0x1084>  // b.any
     ebc:	ldr	x0, [sp, #104]
     ec0:	ldp	x29, x30, [sp], #128
     ec4:	ret
	...
     ef0:	stp	x29, x30, [sp, #-32]!
     ef4:	mov	x29, sp
     ef8:	str	x0, [sp, #24]
     efc:	ldr	x0, [sp, #24]
     f00:	mov	x1, #0xffffffffffffffe0    	// #-32
     f04:	str	x1, [x0, #48]
     f08:	mov	x0, #0xd01                 	// #3329
     f0c:	bl	0 <grub_malloc>
     f10:	mov	x1, x0
     f14:	ldr	x0, [sp, #24]
     f18:	str	x1, [x0, #32]
     f1c:	mov	x0, #0x680                 	// #1664
     f20:	bl	0 <grub_malloc>
     f24:	mov	x1, x0
     f28:	ldr	x0, [sp, #24]
     f2c:	str	x1, [x0, #40]
     f30:	ldr	x0, [sp, #24]
     f34:	ldr	x0, [x0, #32]
     f38:	cmp	x0, #0x0
     f3c:	b.eq	f50 <grub_mod_init-0xed0>  // b.none
     f40:	ldr	x0, [sp, #24]
     f44:	ldr	x0, [x0, #40]
     f48:	cmp	x0, #0x0
     f4c:	b.ne	f7c <grub_mod_init-0xea4>  // b.any
     f50:	ldr	x0, [sp, #24]
     f54:	ldr	x0, [x0, #32]
     f58:	bl	0 <grub_free>
     f5c:	ldr	x0, [sp, #24]
     f60:	ldr	x0, [x0, #40]
     f64:	bl	0 <grub_free>
     f68:	adrp	x0, 0 <grub_mod_init-0x1e20>
     f6c:	add	x0, x0, #0x0
     f70:	ldr	x0, [x0]
     f74:	ldr	w0, [x0]
     f78:	b	f80 <grub_mod_init-0xea0>
     f7c:	mov	w0, #0x0                   	// #0
     f80:	ldp	x29, x30, [sp], #32
     f84:	ret
	...
     f90:	stp	x29, x30, [sp, #-32]!
     f94:	mov	x29, sp
     f98:	str	x0, [sp, #24]
     f9c:	ldr	x0, [sp, #24]
     fa0:	ldr	x0, [x0, #32]
     fa4:	bl	0 <grub_free>
     fa8:	ldr	x0, [sp, #24]
     fac:	ldr	x0, [x0, #40]
     fb0:	bl	0 <grub_free>
     fb4:	nop
     fb8:	ldp	x29, x30, [sp], #32
     fbc:	ret
     fc0:	stp	x29, x30, [sp, #-80]!
     fc4:	mov	x29, sp
     fc8:	str	x0, [sp, #24]
     fcc:	str	x1, [sp, #16]
     fd0:	str	xzr, [sp, #72]
     fd4:	mov	w0, #0xffffffff            	// #-1
     fd8:	str	w0, [sp, #68]
     fdc:	mov	w0, #0xffffffff            	// #-1
     fe0:	str	w0, [sp, #64]
     fe4:	mov	w0, #0xffffffff            	// #-1
     fe8:	str	w0, [sp, #60]
     fec:	ldr	x0, [sp, #16]
     ff0:	ldr	x0, [x0, #48]
     ff4:	add	x0, x0, #0x20
     ff8:	mov	x1, x0
     ffc:	ldr	x0, [sp, #16]
    1000:	str	x1, [x0, #48]
    1004:	ldr	x0, [sp, #24]
    1008:	ldr	x7, [x0]
    100c:	ldr	x0, [sp, #16]
    1010:	ldr	x0, [x0, #48]
    1014:	mov	x1, x0
    1018:	ldr	x0, [sp, #16]
    101c:	mov	x6, x0
    1020:	mov	x5, #0x20                  	// #32
    1024:	mov	x4, x1
    1028:	mov	x3, #0x0                   	// #0
    102c:	mov	x2, #0x0                   	// #0
    1030:	ldr	x1, [sp, #24]
    1034:	mov	x0, x7
    1038:	bl	a98 <grub_mod_init-0x1388>
    103c:	cmp	x0, #0x20
    1040:	b.ne	1594 <grub_mod_init-0x88c>  // b.any
    1044:	ldr	x0, [sp, #16]
    1048:	ldrb	w0, [x0]
    104c:	cmp	w0, #0x0
    1050:	b.eq	1594 <grub_mod_init-0x88c>  // b.none
    1054:	ldr	x0, [sp, #16]
    1058:	ldrb	w0, [x0, #11]
    105c:	cmp	w0, #0xf
    1060:	b.ne	11b0 <grub_mod_init-0xc70>  // b.any
    1064:	ldr	x0, [sp, #16]
    1068:	str	x0, [sp, #40]
    106c:	ldr	x0, [sp, #40]
    1070:	ldrb	w0, [x0]
    1074:	strb	w0, [sp, #55]
    1078:	ldrb	w0, [sp, #55]
    107c:	and	w0, w0, #0x40
    1080:	cmp	w0, #0x0
    1084:	b.eq	10b0 <grub_mod_init-0xd70>  // b.none
    1088:	ldrb	w0, [sp, #55]
    108c:	and	w0, w0, #0x3f
    1090:	strb	w0, [sp, #55]
    1094:	ldrb	w0, [sp, #55]
    1098:	str	w0, [sp, #64]
    109c:	ldr	w0, [sp, #64]
    10a0:	str	w0, [sp, #60]
    10a4:	ldr	x0, [sp, #40]
    10a8:	ldrb	w0, [x0, #13]
    10ac:	str	w0, [sp, #68]
    10b0:	ldrb	w0, [sp, #55]
    10b4:	ldr	w1, [sp, #64]
    10b8:	cmp	w1, w0
    10bc:	b.ne	10e4 <grub_mod_init-0xd3c>  // b.any
    10c0:	ldr	w0, [sp, #64]
    10c4:	cmp	w0, #0x0
    10c8:	b.eq	10e4 <grub_mod_init-0xd3c>  // b.none
    10cc:	ldr	x0, [sp, #40]
    10d0:	ldrb	w0, [x0, #13]
    10d4:	mov	w1, w0
    10d8:	ldr	w0, [sp, #68]
    10dc:	cmp	w0, w1
    10e0:	b.eq	10f0 <grub_mod_init-0xd30>  // b.none
    10e4:	mov	w0, #0xffffffff            	// #-1
    10e8:	str	w0, [sp, #68]
    10ec:	b	1590 <grub_mod_init-0x890>
    10f0:	ldr	w0, [sp, #64]
    10f4:	sub	w0, w0, #0x1
    10f8:	str	w0, [sp, #64]
    10fc:	ldr	x0, [sp, #16]
    1100:	ldr	x1, [x0, #40]
    1104:	ldr	w2, [sp, #64]
    1108:	mov	w0, #0xd                   	// #13
    110c:	mul	w0, w2, w0
    1110:	sxtw	x0, w0
    1114:	lsl	x0, x0, #1
    1118:	add	x3, x1, x0
    111c:	ldr	x0, [sp, #40]
    1120:	add	x0, x0, #0x1
    1124:	mov	x2, #0xa                   	// #10
    1128:	mov	x1, x0
    112c:	mov	x0, x3
    1130:	bl	58 <grub_mod_init-0x1dc8>
    1134:	ldr	x0, [sp, #16]
    1138:	ldr	x1, [x0, #40]
    113c:	ldr	w2, [sp, #64]
    1140:	mov	w0, #0xd                   	// #13
    1144:	mul	w0, w2, w0
    1148:	sxtw	x0, w0
    114c:	add	x0, x0, #0x5
    1150:	lsl	x0, x0, #1
    1154:	add	x3, x1, x0
    1158:	ldr	x0, [sp, #40]
    115c:	add	x0, x0, #0xe
    1160:	mov	x2, #0xc                   	// #12
    1164:	mov	x1, x0
    1168:	mov	x0, x3
    116c:	bl	58 <grub_mod_init-0x1dc8>
    1170:	ldr	x0, [sp, #16]
    1174:	ldr	x1, [x0, #40]
    1178:	ldr	w2, [sp, #64]
    117c:	mov	w0, #0xd                   	// #13
    1180:	mul	w0, w2, w0
    1184:	sxtw	x0, w0
    1188:	add	x0, x0, #0xb
    118c:	lsl	x0, x0, #1
    1190:	add	x3, x1, x0
    1194:	ldr	x0, [sp, #40]
    1198:	add	x0, x0, #0x1c
    119c:	mov	x2, #0x4                   	// #4
    11a0:	mov	x1, x0
    11a4:	mov	x0, x3
    11a8:	bl	58 <grub_mod_init-0x1dc8>
    11ac:	b	1590 <grub_mod_init-0x890>
    11b0:	ldr	x0, [sp, #16]
    11b4:	ldrb	w0, [x0]
    11b8:	cmp	w0, #0xe5
    11bc:	b.eq	158c <grub_mod_init-0x894>  // b.none
    11c0:	ldr	x0, [sp, #16]
    11c4:	ldrb	w0, [x0, #11]
    11c8:	and	w0, w0, #0xffffffc0
    11cc:	cmp	w0, #0x0
    11d0:	b.ne	158c <grub_mod_init-0x894>  // b.any
    11d4:	ldr	x0, [sp, #16]
    11d8:	ldrb	w0, [x0]
    11dc:	cmp	w0, #0x5
    11e0:	b.ne	11f0 <grub_mod_init-0xc30>  // b.any
    11e4:	ldr	x0, [sp, #16]
    11e8:	mov	w1, #0xffffffe5            	// #-27
    11ec:	strb	w1, [x0]
    11f0:	ldr	w0, [sp, #68]
    11f4:	cmn	w0, #0x1
    11f8:	b.eq	1318 <grub_mod_init-0xb08>  // b.none
    11fc:	ldr	w0, [sp, #64]
    1200:	cmp	w0, #0x0
    1204:	b.ne	1318 <grub_mod_init-0xb08>  // b.any
    1208:	strb	wzr, [sp, #54]
    120c:	str	wzr, [sp, #56]
    1210:	b	125c <grub_mod_init-0xbc4>
    1214:	ldrb	w0, [sp, #54]
    1218:	lsr	w0, w0, #1
    121c:	and	w0, w0, #0xff
    1220:	sxtb	w1, w0
    1224:	ldrb	w0, [sp, #54]
    1228:	lsl	w0, w0, #7
    122c:	sxtb	w0, w0
    1230:	orr	w0, w1, w0
    1234:	sxtb	w0, w0
    1238:	and	w1, w0, #0xff
    123c:	ldr	x2, [sp, #16]
    1240:	ldr	w0, [sp, #56]
    1244:	ldrb	w0, [x2, x0]
    1248:	add	w0, w1, w0
    124c:	strb	w0, [sp, #54]
    1250:	ldr	w0, [sp, #56]
    1254:	add	w0, w0, #0x1
    1258:	str	w0, [sp, #56]
    125c:	ldr	w0, [sp, #56]
    1260:	cmp	w0, #0xa
    1264:	b.ls	1214 <grub_mod_init-0xc0c>  // b.plast
    1268:	ldrb	w0, [sp, #54]
    126c:	ldr	w1, [sp, #68]
    1270:	cmp	w1, w0
    1274:	b.ne	1310 <grub_mod_init-0xb10>  // b.any
    1278:	str	wzr, [sp, #48]
    127c:	b	12bc <grub_mod_init-0xb64>
    1280:	ldr	x0, [sp, #16]
    1284:	ldr	x1, [x0, #40]
    1288:	ldrsw	x0, [sp, #48]
    128c:	lsl	x0, x0, #1
    1290:	add	x1, x1, x0
    1294:	ldr	x0, [sp, #16]
    1298:	ldr	x2, [x0, #40]
    129c:	ldrsw	x0, [sp, #48]
    12a0:	lsl	x0, x0, #1
    12a4:	add	x0, x2, x0
    12a8:	ldrh	w1, [x1]
    12ac:	strh	w1, [x0]
    12b0:	ldr	w0, [sp, #48]
    12b4:	add	w0, w0, #0x1
    12b8:	str	w0, [sp, #48]
    12bc:	ldr	w1, [sp, #60]
    12c0:	mov	w0, #0xd                   	// #13
    12c4:	mul	w0, w1, w0
    12c8:	ldr	w1, [sp, #48]
    12cc:	cmp	w1, w0
    12d0:	b.lt	1280 <grub_mod_init-0xba0>  // b.tstop
    12d4:	ldr	x0, [sp, #16]
    12d8:	ldr	x3, [x0, #32]
    12dc:	ldr	x0, [sp, #16]
    12e0:	ldr	x4, [x0, #40]
    12e4:	ldr	w1, [sp, #60]
    12e8:	mov	w0, #0xd                   	// #13
    12ec:	mul	w0, w1, w0
    12f0:	sxtw	x0, w0
    12f4:	mov	x2, x0
    12f8:	mov	x1, x4
    12fc:	mov	x0, x3
    1300:	bl	19c <grub_mod_init-0x1c84>
    1304:	strb	wzr, [x0]
    1308:	mov	w0, #0x0                   	// #0
    130c:	b	15b0 <grub_mod_init-0x870>
    1310:	mov	w0, #0xffffffff            	// #-1
    1314:	str	w0, [sp, #68]
    1318:	ldr	x0, [sp, #16]
    131c:	ldr	x0, [x0, #32]
    1320:	str	x0, [sp, #72]
    1324:	ldr	x0, [sp, #16]
    1328:	ldrb	w0, [x0, #11]
    132c:	and	w0, w0, #0x8
    1330:	cmp	w0, #0x0
    1334:	b.eq	13d0 <grub_mod_init-0xa50>  // b.none
    1338:	str	wzr, [sp, #56]
    133c:	b	1368 <grub_mod_init-0xab8>
    1340:	ldr	x0, [sp, #72]
    1344:	add	x1, x0, #0x1
    1348:	str	x1, [sp, #72]
    134c:	ldr	x2, [sp, #16]
    1350:	ldr	w1, [sp, #56]
    1354:	ldrb	w1, [x2, x1]
    1358:	strb	w1, [x0]
    135c:	ldr	w0, [sp, #56]
    1360:	add	w0, w0, #0x1
    1364:	str	w0, [sp, #56]
    1368:	ldr	w0, [sp, #56]
    136c:	cmp	w0, #0xa
    1370:	b.hi	13a4 <grub_mod_init-0xa7c>  // b.pmore
    1374:	ldr	x1, [sp, #16]
    1378:	ldr	w0, [sp, #56]
    137c:	ldrb	w0, [x1, x0]
    1380:	cmp	w0, #0x0
    1384:	b.ne	1340 <grub_mod_init-0xae0>  // b.any
    1388:	b	13a4 <grub_mod_init-0xa7c>
    138c:	ldr	x0, [sp, #72]
    1390:	sub	x0, x0, #0x1
    1394:	str	x0, [sp, #72]
    1398:	ldr	w0, [sp, #56]
    139c:	sub	w0, w0, #0x1
    13a0:	str	w0, [sp, #56]
    13a4:	ldr	w0, [sp, #56]
    13a8:	cmp	w0, #0x0
    13ac:	b.eq	157c <grub_mod_init-0x8a4>  // b.none
    13b0:	ldr	w0, [sp, #56]
    13b4:	sub	w0, w0, #0x1
    13b8:	ldr	x1, [sp, #16]
    13bc:	mov	w0, w0
    13c0:	ldrb	w0, [x1, x0]
    13c4:	cmp	w0, #0x20
    13c8:	b.eq	138c <grub_mod_init-0xa94>  // b.none
    13cc:	b	157c <grub_mod_init-0x8a4>
    13d0:	str	wzr, [sp, #56]
    13d4:	b	140c <grub_mod_init-0xa14>
    13d8:	ldr	x1, [sp, #16]
    13dc:	ldr	w0, [sp, #56]
    13e0:	ldrb	w0, [x1, x0]
    13e4:	bl	84 <grub_mod_init-0x1d9c>
    13e8:	mov	w2, w0
    13ec:	ldr	x0, [sp, #72]
    13f0:	add	x1, x0, #0x1
    13f4:	str	x1, [sp, #72]
    13f8:	and	w1, w2, #0xff
    13fc:	strb	w1, [x0]
    1400:	ldr	w0, [sp, #56]
    1404:	add	w0, w0, #0x1
    1408:	str	w0, [sp, #56]
    140c:	ldr	w0, [sp, #56]
    1410:	cmp	w0, #0x7
    1414:	b.hi	1448 <grub_mod_init-0x9d8>  // b.pmore
    1418:	ldr	x1, [sp, #16]
    141c:	ldr	w0, [sp, #56]
    1420:	ldrb	w0, [x1, x0]
    1424:	cmp	w0, #0x0
    1428:	b.ne	13d8 <grub_mod_init-0xa48>  // b.any
    142c:	b	1448 <grub_mod_init-0x9d8>
    1430:	ldr	x0, [sp, #72]
    1434:	sub	x0, x0, #0x1
    1438:	str	x0, [sp, #72]
    143c:	ldr	w0, [sp, #56]
    1440:	sub	w0, w0, #0x1
    1444:	str	w0, [sp, #56]
    1448:	ldr	w0, [sp, #56]
    144c:	cmp	w0, #0x0
    1450:	b.eq	1470 <grub_mod_init-0x9b0>  // b.none
    1454:	ldr	w0, [sp, #56]
    1458:	sub	w0, w0, #0x1
    145c:	ldr	x1, [sp, #16]
    1460:	mov	w0, w0
    1464:	ldrb	w0, [x1, x0]
    1468:	cmp	w0, #0x20
    146c:	b.eq	1430 <grub_mod_init-0x9f0>  // b.none
    1470:	ldr	w0, [sp, #56]
    1474:	cmp	w0, #0x2
    1478:	b.hi	14ac <grub_mod_init-0x974>  // b.pmore
    147c:	ldr	x0, [sp, #72]
    1480:	ldrb	w0, [x0]
    1484:	cmp	w0, #0x2e
    1488:	b.ne	14ac <grub_mod_init-0x974>  // b.any
    148c:	ldr	w0, [sp, #56]
    1490:	cmp	w0, #0x2
    1494:	b.ne	14c0 <grub_mod_init-0x960>  // b.any
    1498:	ldr	x0, [sp, #72]
    149c:	add	x0, x0, #0x1
    14a0:	ldrb	w0, [x0]
    14a4:	cmp	w0, #0x2e
    14a8:	b.eq	14c0 <grub_mod_init-0x960>  // b.none
    14ac:	ldr	x0, [sp, #72]
    14b0:	add	x1, x0, #0x1
    14b4:	str	x1, [sp, #72]
    14b8:	mov	w1, #0x2e                  	// #46
    14bc:	strb	w1, [x0]
    14c0:	mov	w0, #0x8                   	// #8
    14c4:	str	w0, [sp, #56]
    14c8:	b	1500 <grub_mod_init-0x920>
    14cc:	ldr	x1, [sp, #16]
    14d0:	ldr	w0, [sp, #56]
    14d4:	ldrb	w0, [x1, x0]
    14d8:	bl	84 <grub_mod_init-0x1d9c>
    14dc:	mov	w2, w0
    14e0:	ldr	x0, [sp, #72]
    14e4:	add	x1, x0, #0x1
    14e8:	str	x1, [sp, #72]
    14ec:	and	w1, w2, #0xff
    14f0:	strb	w1, [x0]
    14f4:	ldr	w0, [sp, #56]
    14f8:	add	w0, w0, #0x1
    14fc:	str	w0, [sp, #56]
    1500:	ldr	w0, [sp, #56]
    1504:	cmp	w0, #0xa
    1508:	b.hi	153c <grub_mod_init-0x8e4>  // b.pmore
    150c:	ldr	x1, [sp, #16]
    1510:	ldr	w0, [sp, #56]
    1514:	ldrb	w0, [x1, x0]
    1518:	cmp	w0, #0x0
    151c:	b.ne	14cc <grub_mod_init-0x954>  // b.any
    1520:	b	153c <grub_mod_init-0x8e4>
    1524:	ldr	x0, [sp, #72]
    1528:	sub	x0, x0, #0x1
    152c:	str	x0, [sp, #72]
    1530:	ldr	w0, [sp, #56]
    1534:	sub	w0, w0, #0x1
    1538:	str	w0, [sp, #56]
    153c:	ldr	w0, [sp, #56]
    1540:	cmp	w0, #0x8
    1544:	b.ls	1564 <grub_mod_init-0x8bc>  // b.plast
    1548:	ldr	w0, [sp, #56]
    154c:	sub	w0, w0, #0x1
    1550:	ldr	x1, [sp, #16]
    1554:	mov	w0, w0
    1558:	ldrb	w0, [x1, x0]
    155c:	cmp	w0, #0x20
    1560:	b.eq	1524 <grub_mod_init-0x8fc>  // b.none
    1564:	ldr	w0, [sp, #56]
    1568:	cmp	w0, #0x8
    156c:	b.ne	157c <grub_mod_init-0x8a4>  // b.any
    1570:	ldr	x0, [sp, #72]
    1574:	sub	x0, x0, #0x1
    1578:	str	x0, [sp, #72]
    157c:	ldr	x0, [sp, #72]
    1580:	strb	wzr, [x0]
    1584:	mov	w0, #0x0                   	// #0
    1588:	b	15b0 <grub_mod_init-0x870>
    158c:	nop
    1590:	b	fec <grub_mod_init-0xe34>
    1594:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1598:	add	x0, x0, #0x0
    159c:	ldr	x0, [x0]
    15a0:	ldr	w0, [x0]
    15a4:	cmp	w0, #0x0
    15a8:	b.ne	15b0 <grub_mod_init-0x870>  // b.any
    15ac:	mov	w0, #0x2c                  	// #44
    15b0:	ldp	x29, x30, [sp], #80
    15b4:	ret
	...
    15c0:	stp	x29, x30, [sp, #-112]!
    15c4:	mov	x29, sp
    15c8:	str	x0, [sp, #40]
    15cc:	str	x1, [sp, #32]
    15d0:	str	x2, [sp, #24]
    15d4:	str	x3, [sp, #16]
    15d8:	add	x0, sp, #0x30
    15dc:	bl	ef0 <grub_mod_init-0xf30>
    15e0:	str	w0, [sp, #108]
    15e4:	ldr	w0, [sp, #108]
    15e8:	cmp	w0, #0x0
    15ec:	b.eq	1738 <grub_mod_init-0x6e8>  // b.none
    15f0:	ldr	w0, [sp, #108]
    15f4:	b	1774 <grub_mod_init-0x6ac>
    15f8:	ldrb	w0, [sp, #59]
    15fc:	and	w0, w0, #0x8
    1600:	cmp	w0, #0x0
    1604:	b.eq	160c <grub_mod_init-0x814>  // b.none
    1608:	b	1738 <grub_mod_init-0x6e8>
    160c:	ldr	x0, [sp, #80]
    1610:	mov	x1, x0
    1614:	ldr	x0, [sp, #32]
    1618:	bl	f4 <grub_mod_init-0x1d2c>
    161c:	cmp	w0, #0x0
    1620:	b.ne	1738 <grub_mod_init-0x6e8>  // b.any
    1624:	mov	x0, #0x28                  	// #40
    1628:	bl	0 <grub_malloc>
    162c:	mov	x1, x0
    1630:	ldr	x0, [sp, #24]
    1634:	str	x1, [x0]
    1638:	ldr	x0, [sp, #24]
    163c:	ldr	x0, [x0]
    1640:	cmp	x0, #0x0
    1644:	b.ne	165c <grub_mod_init-0x7c4>  // b.any
    1648:	adrp	x0, 0 <grub_mod_init-0x1e20>
    164c:	add	x0, x0, #0x0
    1650:	ldr	x0, [x0]
    1654:	ldr	w0, [x0]
    1658:	b	1774 <grub_mod_init-0x6ac>
    165c:	ldr	x0, [sp, #24]
    1660:	ldr	x0, [x0]
    1664:	ldrb	w1, [sp, #59]
    1668:	strb	w1, [x0, #16]
    166c:	ldr	x0, [sp, #24]
    1670:	ldr	x0, [x0]
    1674:	ldr	w1, [sp, #76]
    1678:	str	w1, [x0, #20]
    167c:	ldrh	w0, [sp, #68]
    1680:	lsl	w0, w0, #16
    1684:	ldrh	w1, [sp, #74]
    1688:	orr	w1, w0, w1
    168c:	ldr	x0, [sp, #24]
    1690:	ldr	x0, [x0]
    1694:	str	w1, [x0, #24]
    1698:	ldr	x0, [sp, #24]
    169c:	ldr	x0, [x0]
    16a0:	ldr	w0, [x0, #24]
    16a4:	cmp	w0, #0x0
    16a8:	b.ne	16c4 <grub_mod_init-0x75c>  // b.any
    16ac:	ldr	x0, [sp, #40]
    16b0:	ldr	x1, [x0, #8]
    16b4:	ldr	x0, [sp, #24]
    16b8:	ldr	x0, [x0]
    16bc:	ldr	w1, [x1, #20]
    16c0:	str	w1, [x0, #24]
    16c4:	ldr	x0, [sp, #24]
    16c8:	ldr	x0, [x0]
    16cc:	mov	w1, #0xffffffff            	// #-1
    16d0:	str	w1, [x0, #28]
    16d4:	ldr	x0, [sp, #24]
    16d8:	ldr	x0, [x0]
    16dc:	ldr	x1, [sp, #40]
    16e0:	ldr	x1, [x1, #8]
    16e4:	str	x1, [x0, #8]
    16e8:	ldr	x0, [sp, #24]
    16ec:	ldr	x0, [x0]
    16f0:	ldr	x1, [sp, #40]
    16f4:	ldr	x1, [x1]
    16f8:	str	x1, [x0]
    16fc:	ldr	x0, [sp, #24]
    1700:	ldr	x0, [x0]
    1704:	ldrb	w0, [x0, #16]
    1708:	and	w0, w0, #0x10
    170c:	cmp	w0, #0x0
    1710:	b.eq	171c <grub_mod_init-0x704>  // b.none
    1714:	mov	w0, #0x2                   	// #2
    1718:	b	1720 <grub_mod_init-0x700>
    171c:	mov	w0, #0x1                   	// #1
    1720:	ldr	x1, [sp, #16]
    1724:	str	w0, [x1]
    1728:	add	x0, sp, #0x30
    172c:	bl	f90 <grub_mod_init-0xe90>
    1730:	mov	w0, #0x0                   	// #0
    1734:	b	1774 <grub_mod_init-0x6ac>
    1738:	add	x0, sp, #0x30
    173c:	mov	x1, x0
    1740:	ldr	x0, [sp, #40]
    1744:	bl	fc0 <grub_mod_init-0xe60>
    1748:	str	w0, [sp, #108]
    174c:	ldr	w0, [sp, #108]
    1750:	cmp	w0, #0x0
    1754:	b.eq	15f8 <grub_mod_init-0x828>  // b.none
    1758:	add	x0, sp, #0x30
    175c:	bl	f90 <grub_mod_init-0xe90>
    1760:	ldr	w0, [sp, #108]
    1764:	cmp	w0, #0x2c
    1768:	b.ne	1770 <grub_mod_init-0x6b0>  // b.any
    176c:	str	wzr, [sp, #108]
    1770:	ldr	w0, [sp, #108]
    1774:	ldp	x29, x30, [sp], #112
    1778:	ret
    177c:	nop
	...
    1788:	stp	x29, x30, [sp, #-192]!
    178c:	mov	x29, sp
    1790:	str	x0, [sp, #40]
    1794:	str	x1, [sp, #32]
    1798:	str	x2, [sp, #24]
    179c:	str	x3, [sp, #16]
    17a0:	str	xzr, [sp, #184]
    17a4:	ldr	x0, [sp, #40]
    17a8:	ldr	x0, [x0]
    17ac:	str	x0, [sp, #176]
    17b0:	str	xzr, [sp, #160]
    17b4:	adrp	x0, 0 <grub_mod_init-0x1e20>
    17b8:	add	x0, x0, #0x0
    17bc:	ldr	x0, [x0]
    17c0:	ldr	x0, [x0]
    17c4:	bl	0 <grub_dl_ref>
    17c8:	ldr	x0, [sp, #176]
    17cc:	bl	58c <grub_mod_init-0x1894>
    17d0:	str	x0, [sp, #184]
    17d4:	ldr	x0, [sp, #184]
    17d8:	cmp	x0, #0x0
    17dc:	b.eq	1910 <grub_mod_init-0x510>  // b.none
    17e0:	ldr	x0, [sp, #176]
    17e4:	str	x0, [sp, #64]
    17e8:	ldr	x0, [sp, #184]
    17ec:	str	x0, [sp, #72]
    17f0:	mov	w0, #0x10                  	// #16
    17f4:	strb	w0, [sp, #80]
    17f8:	str	wzr, [sp, #84]
    17fc:	ldr	x0, [sp, #184]
    1800:	ldr	w0, [x0, #20]
    1804:	str	w0, [sp, #88]
    1808:	mov	w0, #0xffffffff            	// #-1
    180c:	str	w0, [sp, #92]
    1810:	str	wzr, [sp, #96]
    1814:	add	x2, sp, #0xa0
    1818:	add	x1, sp, #0x40
    181c:	mov	w5, #0x2                   	// #2
    1820:	mov	x4, #0x0                   	// #0
    1824:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1828:	add	x0, x0, #0x0
    182c:	ldr	x3, [x0]
    1830:	ldr	x0, [sp, #32]
    1834:	bl	0 <grub_fshelp_find_file_lookup>
    1838:	str	w0, [sp, #172]
    183c:	ldr	w0, [sp, #172]
    1840:	cmp	w0, #0x0
    1844:	b.ne	1918 <grub_mod_init-0x508>  // b.any
    1848:	add	x0, sp, #0x68
    184c:	bl	ef0 <grub_mod_init-0xf30>
    1850:	str	w0, [sp, #172]
    1854:	ldr	w0, [sp, #172]
    1858:	cmp	w0, #0x0
    185c:	b.ne	1920 <grub_mod_init-0x500>  // b.any
    1860:	b	18d0 <grub_mod_init-0x550>
    1864:	add	x0, sp, #0x30
    1868:	mov	x2, #0x10                  	// #16
    186c:	mov	w1, #0x0                   	// #0
    1870:	bl	0 <grub_memset>
    1874:	ldrb	w0, [sp, #115]
    1878:	and	w0, w0, #0x10
    187c:	cmp	w0, #0x0
    1880:	cset	w0, ne  // ne = any
    1884:	and	w1, w0, #0xff
    1888:	ldrb	w0, [sp, #48]
    188c:	bfxil	w0, w1, #0, #1
    1890:	strb	w0, [sp, #48]
    1894:	ldrb	w0, [sp, #48]
    1898:	orr	w0, w0, #0x4
    189c:	strb	w0, [sp, #48]
    18a0:	ldrb	w0, [sp, #115]
    18a4:	and	w0, w0, #0x8
    18a8:	cmp	w0, #0x0
    18ac:	b.eq	18b4 <grub_mod_init-0x56c>  // b.none
    18b0:	b	18d0 <grub_mod_init-0x550>
    18b4:	ldr	x0, [sp, #136]
    18b8:	add	x1, sp, #0x30
    18bc:	ldr	x3, [sp, #24]
    18c0:	ldr	x2, [sp, #16]
    18c4:	blr	x3
    18c8:	cmp	w0, #0x0
    18cc:	b.ne	18f0 <grub_mod_init-0x530>  // b.any
    18d0:	ldr	x0, [sp, #160]
    18d4:	add	x1, sp, #0x68
    18d8:	bl	fc0 <grub_mod_init-0xe60>
    18dc:	str	w0, [sp, #172]
    18e0:	ldr	w0, [sp, #172]
    18e4:	cmp	w0, #0x0
    18e8:	b.eq	1864 <grub_mod_init-0x5bc>  // b.none
    18ec:	b	18f4 <grub_mod_init-0x52c>
    18f0:	nop
    18f4:	add	x0, sp, #0x68
    18f8:	bl	f90 <grub_mod_init-0xe90>
    18fc:	ldr	w0, [sp, #172]
    1900:	cmp	w0, #0x2c
    1904:	b.ne	1928 <grub_mod_init-0x4f8>  // b.any
    1908:	str	wzr, [sp, #172]
    190c:	b	192c <grub_mod_init-0x4f4>
    1910:	nop
    1914:	b	192c <grub_mod_init-0x4f4>
    1918:	nop
    191c:	b	192c <grub_mod_init-0x4f4>
    1920:	nop
    1924:	b	192c <grub_mod_init-0x4f4>
    1928:	nop
    192c:	ldr	x1, [sp, #160]
    1930:	add	x0, sp, #0x40
    1934:	cmp	x1, x0
    1938:	b.eq	1944 <grub_mod_init-0x4dc>  // b.none
    193c:	ldr	x0, [sp, #160]
    1940:	bl	0 <grub_free>
    1944:	ldr	x0, [sp, #184]
    1948:	bl	0 <grub_free>
    194c:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1950:	add	x0, x0, #0x0
    1954:	ldr	x0, [x0]
    1958:	ldr	x0, [x0]
    195c:	bl	0 <grub_dl_unref>
    1960:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1964:	add	x0, x0, #0x0
    1968:	ldr	x0, [x0]
    196c:	ldr	w0, [x0]
    1970:	ldp	x29, x30, [sp], #192
    1974:	ret
	...
    1990:	stp	x29, x30, [sp, #-112]!
    1994:	mov	x29, sp
    1998:	str	x0, [sp, #24]
    199c:	str	x1, [sp, #16]
    19a0:	str	xzr, [sp, #104]
    19a4:	str	xzr, [sp, #80]
    19a8:	ldr	x0, [sp, #24]
    19ac:	ldr	x0, [x0, #8]
    19b0:	ldr	x0, [x0]
    19b4:	str	x0, [sp, #96]
    19b8:	adrp	x0, 0 <grub_mod_init-0x1e20>
    19bc:	add	x0, x0, #0x0
    19c0:	ldr	x0, [x0]
    19c4:	ldr	x0, [x0]
    19c8:	bl	0 <grub_dl_ref>
    19cc:	ldr	x0, [sp, #96]
    19d0:	bl	58c <grub_mod_init-0x1894>
    19d4:	str	x0, [sp, #104]
    19d8:	ldr	x0, [sp, #104]
    19dc:	cmp	x0, #0x0
    19e0:	b.eq	1a74 <grub_mod_init-0x3ac>  // b.none
    19e4:	ldr	x0, [sp, #96]
    19e8:	str	x0, [sp, #40]
    19ec:	ldr	x0, [sp, #104]
    19f0:	str	x0, [sp, #48]
    19f4:	mov	w0, #0x10                  	// #16
    19f8:	strb	w0, [sp, #56]
    19fc:	str	wzr, [sp, #60]
    1a00:	ldr	x0, [sp, #104]
    1a04:	ldr	w0, [x0, #20]
    1a08:	str	w0, [sp, #64]
    1a0c:	mov	w0, #0xffffffff            	// #-1
    1a10:	str	w0, [sp, #68]
    1a14:	str	wzr, [sp, #72]
    1a18:	add	x2, sp, #0x50
    1a1c:	add	x1, sp, #0x28
    1a20:	mov	w5, #0x1                   	// #1
    1a24:	mov	x4, #0x0                   	// #0
    1a28:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1a2c:	add	x0, x0, #0x0
    1a30:	ldr	x3, [x0]
    1a34:	ldr	x0, [sp, #16]
    1a38:	bl	0 <grub_fshelp_find_file_lookup>
    1a3c:	str	w0, [sp, #92]
    1a40:	ldr	w0, [sp, #92]
    1a44:	cmp	w0, #0x0
    1a48:	b.ne	1a7c <grub_mod_init-0x3a4>  // b.any
    1a4c:	ldr	x1, [sp, #80]
    1a50:	ldr	x0, [sp, #24]
    1a54:	str	x1, [x0, #80]
    1a58:	ldr	x0, [sp, #80]
    1a5c:	ldr	w0, [x0, #20]
    1a60:	mov	w1, w0
    1a64:	ldr	x0, [sp, #24]
    1a68:	str	x1, [x0, #64]
    1a6c:	mov	w0, #0x0                   	// #0
    1a70:	b	1ac4 <grub_mod_init-0x35c>
    1a74:	nop
    1a78:	b	1a80 <grub_mod_init-0x3a0>
    1a7c:	nop
    1a80:	ldr	x1, [sp, #80]
    1a84:	add	x0, sp, #0x28
    1a88:	cmp	x1, x0
    1a8c:	b.eq	1a98 <grub_mod_init-0x388>  // b.none
    1a90:	ldr	x0, [sp, #80]
    1a94:	bl	0 <grub_free>
    1a98:	ldr	x0, [sp, #104]
    1a9c:	bl	0 <grub_free>
    1aa0:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1aa4:	add	x0, x0, #0x0
    1aa8:	ldr	x0, [x0]
    1aac:	ldr	x0, [x0]
    1ab0:	bl	0 <grub_dl_unref>
    1ab4:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1ab8:	add	x0, x0, #0x0
    1abc:	ldr	x0, [x0]
    1ac0:	ldr	w0, [x0]
    1ac4:	ldp	x29, x30, [sp], #112
    1ac8:	ret
    1acc:	nop
	...
    1ae8:	stp	x29, x30, [sp, #-48]!
    1aec:	mov	x29, sp
    1af0:	str	x0, [sp, #40]
    1af4:	str	x1, [sp, #32]
    1af8:	str	x2, [sp, #24]
    1afc:	ldr	x0, [sp, #40]
    1b00:	ldr	x0, [x0, #8]
    1b04:	ldr	x7, [x0]
    1b08:	ldr	x0, [sp, #40]
    1b0c:	ldr	x1, [x0, #80]
    1b10:	ldr	x0, [sp, #40]
    1b14:	ldr	x2, [x0, #88]
    1b18:	ldr	x0, [sp, #40]
    1b1c:	ldr	x3, [x0, #96]
    1b20:	ldr	x0, [sp, #40]
    1b24:	ldr	x0, [x0, #24]
    1b28:	ldr	x6, [sp, #32]
    1b2c:	ldr	x5, [sp, #24]
    1b30:	mov	x4, x0
    1b34:	mov	x0, x7
    1b38:	bl	a98 <grub_mod_init-0x1388>
    1b3c:	ldp	x29, x30, [sp], #48
    1b40:	ret
    1b44:	stp	x29, x30, [sp, #-48]!
    1b48:	mov	x29, sp
    1b4c:	str	x0, [sp, #24]
    1b50:	ldr	x0, [sp, #24]
    1b54:	ldr	x0, [x0, #80]
    1b58:	str	x0, [sp, #40]
    1b5c:	ldr	x0, [sp, #40]
    1b60:	ldr	x0, [x0, #8]
    1b64:	bl	0 <grub_free>
    1b68:	ldr	x0, [sp, #40]
    1b6c:	bl	0 <grub_free>
    1b70:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1b74:	add	x0, x0, #0x0
    1b78:	ldr	x0, [x0]
    1b7c:	ldr	x0, [x0]
    1b80:	bl	0 <grub_dl_unref>
    1b84:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1b88:	add	x0, x0, #0x0
    1b8c:	ldr	x0, [x0]
    1b90:	ldr	w0, [x0]
    1b94:	ldp	x29, x30, [sp], #48
    1b98:	ret
    1b9c:	nop
	...
    1bb0:	stp	x29, x30, [sp, #-144]!
    1bb4:	mov	x29, sp
    1bb8:	str	x0, [sp, #24]
    1bbc:	str	x1, [sp, #16]
    1bc0:	ldr	x0, [sp, #24]
    1bc4:	ldr	x0, [x0]
    1bc8:	str	x0, [sp, #136]
    1bcc:	stp	xzr, xzr, [sp, #32]
    1bd0:	stp	xzr, xzr, [sp, #48]
    1bd4:	str	xzr, [sp, #64]
    1bd8:	ldr	x0, [sp, #136]
    1bdc:	str	x0, [sp, #32]
    1be0:	mov	w0, #0x10                  	// #16
    1be4:	strb	w0, [sp, #48]
    1be8:	mov	w0, #0xffffffff            	// #-1
    1bec:	str	w0, [sp, #60]
    1bf0:	ldr	x0, [sp, #16]
    1bf4:	str	xzr, [x0]
    1bf8:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1bfc:	add	x0, x0, #0x0
    1c00:	ldr	x0, [x0]
    1c04:	ldr	x0, [x0]
    1c08:	bl	0 <grub_dl_ref>
    1c0c:	ldr	x0, [sp, #136]
    1c10:	bl	58c <grub_mod_init-0x1894>
    1c14:	str	x0, [sp, #40]
    1c18:	ldr	x0, [sp, #40]
    1c1c:	cmp	x0, #0x0
    1c20:	b.eq	1c9c <grub_mod_init-0x184>  // b.none
    1c24:	ldr	x0, [sp, #40]
    1c28:	ldr	w0, [x0, #20]
    1c2c:	str	w0, [sp, #56]
    1c30:	add	x0, sp, #0x48
    1c34:	bl	ef0 <grub_mod_init-0xf30>
    1c38:	str	w0, [sp, #132]
    1c3c:	ldr	w0, [sp, #132]
    1c40:	cmp	w0, #0x0
    1c44:	b.ne	1ca4 <grub_mod_init-0x17c>  // b.any
    1c48:	b	1c74 <grub_mod_init-0x1ac>
    1c4c:	ldrb	w0, [sp, #83]
    1c50:	and	w0, w0, #0xffffffdf
    1c54:	cmp	w0, #0x8
    1c58:	b.ne	1c74 <grub_mod_init-0x1ac>  // b.any
    1c5c:	ldr	x0, [sp, #104]
    1c60:	bl	0 <grub_strdup>
    1c64:	mov	x1, x0
    1c68:	ldr	x0, [sp, #16]
    1c6c:	str	x1, [x0]
    1c70:	b	1c90 <grub_mod_init-0x190>
    1c74:	add	x1, sp, #0x48
    1c78:	add	x0, sp, #0x20
    1c7c:	bl	fc0 <grub_mod_init-0xe60>
    1c80:	str	w0, [sp, #132]
    1c84:	ldr	w0, [sp, #132]
    1c88:	cmp	w0, #0x0
    1c8c:	b.eq	1c4c <grub_mod_init-0x1d4>  // b.none
    1c90:	add	x0, sp, #0x48
    1c94:	bl	f90 <grub_mod_init-0xe90>
    1c98:	b	1ca8 <grub_mod_init-0x178>
    1c9c:	nop
    1ca0:	b	1ca8 <grub_mod_init-0x178>
    1ca4:	nop
    1ca8:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1cac:	add	x0, x0, #0x0
    1cb0:	ldr	x0, [x0]
    1cb4:	ldr	x0, [x0]
    1cb8:	bl	0 <grub_dl_unref>
    1cbc:	ldr	x0, [sp, #40]
    1cc0:	bl	0 <grub_free>
    1cc4:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1cc8:	add	x0, x0, #0x0
    1ccc:	ldr	x0, [x0]
    1cd0:	ldr	w0, [x0]
    1cd4:	ldp	x29, x30, [sp], #144
    1cd8:	ret
    1cdc:	nop
	...
    1cf0:	stp	x29, x30, [sp, #-64]!
    1cf4:	mov	x29, sp
    1cf8:	str	x0, [sp, #24]
    1cfc:	str	x1, [sp, #16]
    1d00:	ldr	x0, [sp, #24]
    1d04:	ldr	x0, [x0]
    1d08:	str	x0, [sp, #48]
    1d0c:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1d10:	add	x0, x0, #0x0
    1d14:	ldr	x0, [x0]
    1d18:	ldr	x0, [x0]
    1d1c:	bl	0 <grub_dl_ref>
    1d20:	ldr	x0, [sp, #48]
    1d24:	bl	58c <grub_mod_init-0x1894>
    1d28:	str	x0, [sp, #40]
    1d2c:	ldr	x0, [sp, #40]
    1d30:	cmp	x0, #0x0
    1d34:	b.eq	1dcc <grub_mod_init-0x54>  // b.none
    1d38:	ldr	x0, [sp, #40]
    1d3c:	ldr	w0, [x0, #48]
    1d40:	lsr	w0, w0, #16
    1d44:	and	w0, w0, #0xffff
    1d48:	mov	w1, w0
    1d4c:	ldr	x0, [sp, #40]
    1d50:	ldr	w0, [x0, #48]
    1d54:	and	w0, w0, #0xffff
    1d58:	mov	w2, w0
    1d5c:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1d60:	add	x0, x0, #0x0
    1d64:	ldr	x0, [x0]
    1d68:	bl	0 <grub_xasprintf>
    1d6c:	mov	x1, x0
    1d70:	ldr	x0, [sp, #16]
    1d74:	str	x1, [x0]
    1d78:	ldr	x0, [sp, #16]
    1d7c:	ldr	x0, [x0]
    1d80:	str	x0, [sp, #56]
    1d84:	b	1dac <grub_mod_init-0x74>
    1d88:	ldr	x0, [sp, #56]
    1d8c:	ldrb	w0, [x0]
    1d90:	bl	bc <grub_mod_init-0x1d64>
    1d94:	and	w1, w0, #0xff
    1d98:	ldr	x0, [sp, #56]
    1d9c:	strb	w1, [x0]
    1da0:	ldr	x0, [sp, #56]
    1da4:	add	x0, x0, #0x1
    1da8:	str	x0, [sp, #56]
    1dac:	ldr	x0, [sp, #56]
    1db0:	cmp	x0, #0x0
    1db4:	b.eq	1dd4 <grub_mod_init-0x4c>  // b.none
    1db8:	ldr	x0, [sp, #56]
    1dbc:	ldrb	w0, [x0]
    1dc0:	cmp	w0, #0x0
    1dc4:	b.ne	1d88 <grub_mod_init-0x98>  // b.any
    1dc8:	b	1dd4 <grub_mod_init-0x4c>
    1dcc:	ldr	x0, [sp, #16]
    1dd0:	str	xzr, [x0]
    1dd4:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1dd8:	add	x0, x0, #0x0
    1ddc:	ldr	x0, [x0]
    1de0:	ldr	x0, [x0]
    1de4:	bl	0 <grub_dl_unref>
    1de8:	ldr	x0, [sp, #40]
    1dec:	bl	0 <grub_free>
    1df0:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1df4:	add	x0, x0, #0x0
    1df8:	ldr	x0, [x0]
    1dfc:	ldr	w0, [x0]
    1e00:	ldp	x29, x30, [sp], #64
    1e04:	ret
	...

0000000000001e20 <grub_mod_init>:
    1e20:	stp	x29, x30, [sp, #-32]!
    1e24:	mov	x29, sp
    1e28:	str	x0, [sp, #24]
    1e2c:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1e30:	add	x0, x0, #0x0
    1e34:	ldr	x0, [x0]
    1e38:	bl	0 <grub_mod_init-0x1e20>
    1e3c:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1e40:	add	x0, x0, #0x0
    1e44:	ldr	x0, [x0]
    1e48:	ldr	x1, [sp, #24]
    1e4c:	str	x1, [x0]
    1e50:	nop
    1e54:	ldp	x29, x30, [sp], #32
    1e58:	ret
    1e5c:	nop
	...

0000000000001e70 <grub_mod_fini>:
    1e70:	stp	x29, x30, [sp, #-16]!
    1e74:	mov	x29, sp
    1e78:	adrp	x0, 0 <grub_mod_init-0x1e20>
    1e7c:	add	x0, x0, #0x0
    1e80:	ldr	x0, [x0]
    1e84:	bl	38 <grub_mod_init-0x1de8>
    1e88:	nop
    1e8c:	ldp	x29, x30, [sp], #16
    1e90:	ret
    1e94:	nop
	...
