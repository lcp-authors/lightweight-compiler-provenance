
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001bd0 <.init>:
    1bd0:	stp	x29, x30, [sp, #-16]!
    1bd4:	mov	x29, sp
    1bd8:	bl	20e0 <libintl_ngettext@plt+0x10>
    1bdc:	ldp	x29, x30, [sp], #16
    1be0:	ret

Disassembly of section .plt:

0000000000001bf0 <memcpy@plt-0x20>:
    1bf0:	stp	x16, x30, [sp, #-16]!
    1bf4:	adrp	x16, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    1bf8:	ldr	x17, [x16, #4088]
    1bfc:	add	x16, x16, #0xff8
    1c00:	br	x17
    1c04:	nop
    1c08:	nop
    1c0c:	nop

0000000000001c10 <memcpy@plt>:
    1c10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16]
    1c18:	add	x16, x16, #0x0
    1c1c:	br	x17

0000000000001c20 <libintl_dngettext@plt>:
    1c20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #8]
    1c28:	add	x16, x16, #0x8
    1c2c:	br	x17

0000000000001c30 <pthread_rwlockattr_init@plt>:
    1c30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #16]
    1c38:	add	x16, x16, #0x10
    1c3c:	br	x17

0000000000001c40 <getcwd@plt>:
    1c40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #24]
    1c48:	add	x16, x16, #0x18
    1c4c:	br	x17

0000000000001c50 <strtoul@plt>:
    1c50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #32]
    1c58:	add	x16, x16, #0x20
    1c5c:	br	x17

0000000000001c60 <strlen@plt>:
    1c60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #40]
    1c68:	add	x16, x16, #0x28
    1c6c:	br	x17

0000000000001c70 <raise@plt>:
    1c70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #48]
    1c78:	add	x16, x16, #0x30
    1c7c:	br	x17

0000000000001c80 <pthread_mutexattr_settype@plt>:
    1c80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #56]
    1c88:	add	x16, x16, #0x38
    1c8c:	br	x17

0000000000001c90 <pthread_rwlock_rdlock@plt>:
    1c90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #64]
    1c98:	add	x16, x16, #0x40
    1c9c:	br	x17

0000000000001ca0 <getegid@plt>:
    1ca0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #72]
    1ca8:	add	x16, x16, #0x48
    1cac:	br	x17

0000000000001cb0 <geteuid@plt>:
    1cb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #80]
    1cb8:	add	x16, x16, #0x50
    1cbc:	br	x17

0000000000001cc0 <pthread_rwlock_init@plt>:
    1cc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #88]
    1cc8:	add	x16, x16, #0x58
    1ccc:	br	x17

0000000000001cd0 <pthread_rwlockattr_setkind_np@plt>:
    1cd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #96]
    1cd8:	add	x16, x16, #0x60
    1cdc:	br	x17

0000000000001ce0 <fgets_unlocked@plt>:
    1ce0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #104]
    1ce8:	add	x16, x16, #0x68
    1cec:	br	x17

0000000000001cf0 <__cxa_finalize@plt>:
    1cf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #112]
    1cf8:	add	x16, x16, #0x70
    1cfc:	br	x17

0000000000001d00 <getuid@plt>:
    1d00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #120]
    1d08:	add	x16, x16, #0x78
    1d0c:	br	x17

0000000000001d10 <putc@plt>:
    1d10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #128]
    1d18:	add	x16, x16, #0x80
    1d1c:	br	x17

0000000000001d20 <qsort@plt>:
    1d20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #136]
    1d28:	add	x16, x16, #0x88
    1d2c:	br	x17

0000000000001d30 <libintl_textdomain@plt>:
    1d30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #144]
    1d38:	add	x16, x16, #0x90
    1d3c:	br	x17

0000000000001d40 <libintl_dcgettext@plt>:
    1d40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #152]
    1d48:	add	x16, x16, #0x98
    1d4c:	br	x17

0000000000001d50 <__ctype_tolower_loc@plt>:
    1d50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #160]
    1d58:	add	x16, x16, #0xa0
    1d5c:	br	x17

0000000000001d60 <tfind@plt>:
    1d60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #168]
    1d68:	add	x16, x16, #0xa8
    1d6c:	br	x17

0000000000001d70 <stpcpy@plt>:
    1d70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #176]
    1d78:	add	x16, x16, #0xb0
    1d7c:	br	x17

0000000000001d80 <fclose@plt>:
    1d80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #184]
    1d88:	add	x16, x16, #0xb8
    1d8c:	br	x17

0000000000001d90 <nl_langinfo@plt>:
    1d90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #192]
    1d98:	add	x16, x16, #0xc0
    1d9c:	br	x17

0000000000001da0 <fopen@plt>:
    1da0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #200]
    1da8:	add	x16, x16, #0xc8
    1dac:	br	x17

0000000000001db0 <malloc@plt>:
    1db0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #208]
    1db8:	add	x16, x16, #0xd0
    1dbc:	br	x17

0000000000001dc0 <pthread_rwlock_destroy@plt>:
    1dc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #216]
    1dc8:	add	x16, x16, #0xd8
    1dcc:	br	x17

0000000000001dd0 <open@plt>:
    1dd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #224]
    1dd8:	add	x16, x16, #0xe0
    1ddc:	br	x17

0000000000001de0 <strncmp@plt>:
    1de0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #232]
    1de8:	add	x16, x16, #0xe8
    1dec:	br	x17

0000000000001df0 <_nl_expand_alias@plt>:
    1df0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #240]
    1df8:	add	x16, x16, #0xf0
    1dfc:	br	x17

0000000000001e00 <libintl_dcngettext@plt>:
    1e00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #248]
    1e08:	add	x16, x16, #0xf8
    1e0c:	br	x17

0000000000001e10 <tsearch@plt>:
    1e10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #256]
    1e18:	add	x16, x16, #0x100
    1e1c:	br	x17

0000000000001e20 <libintl_bind_textdomain_codeset@plt>:
    1e20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #264]
    1e28:	add	x16, x16, #0x108
    1e2c:	br	x17

0000000000001e30 <libintl_bindtextdomain@plt>:
    1e30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #272]
    1e38:	add	x16, x16, #0x110
    1e3c:	br	x17

0000000000001e40 <calloc@plt>:
    1e40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #280]
    1e48:	add	x16, x16, #0x118
    1e4c:	br	x17

0000000000001e50 <argz_stringify@plt>:
    1e50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #288]
    1e58:	add	x16, x16, #0x120
    1e5c:	br	x17

0000000000001e60 <strcasecmp@plt>:
    1e60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #296]
    1e68:	add	x16, x16, #0x128
    1e6c:	br	x17

0000000000001e70 <realloc@plt>:
    1e70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #304]
    1e78:	add	x16, x16, #0x130
    1e7c:	br	x17

0000000000001e80 <strdup@plt>:
    1e80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #312]
    1e88:	add	x16, x16, #0x138
    1e8c:	br	x17

0000000000001e90 <pthread_mutex_init@plt>:
    1e90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #320]
    1e98:	add	x16, x16, #0x140
    1e9c:	br	x17

0000000000001ea0 <close@plt>:
    1ea0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #328]
    1ea8:	add	x16, x16, #0x148
    1eac:	br	x17

0000000000001eb0 <__gmon_start__@plt>:
    1eb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #336]
    1eb8:	add	x16, x16, #0x150
    1ebc:	br	x17

0000000000001ec0 <abort@plt>:
    1ec0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #344]
    1ec8:	add	x16, x16, #0x158
    1ecc:	br	x17

0000000000001ed0 <pthread_rwlock_wrlock@plt>:
    1ed0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #352]
    1ed8:	add	x16, x16, #0x160
    1edc:	br	x17

0000000000001ee0 <dcgettext@plt>:
    1ee0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #360]
    1ee8:	add	x16, x16, #0x168
    1eec:	br	x17

0000000000001ef0 <argz_count@plt>:
    1ef0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #368]
    1ef8:	add	x16, x16, #0x170
    1efc:	br	x17

0000000000001f00 <strcmp@plt>:
    1f00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #376]
    1f08:	add	x16, x16, #0x178
    1f0c:	br	x17

0000000000001f10 <iconv@plt>:
    1f10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #384]
    1f18:	add	x16, x16, #0x180
    1f1c:	br	x17

0000000000001f20 <__ctype_b_loc@plt>:
    1f20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #392]
    1f28:	add	x16, x16, #0x188
    1f2c:	br	x17

0000000000001f30 <mmap@plt>:
    1f30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #400]
    1f38:	add	x16, x16, #0x190
    1f3c:	br	x17

0000000000001f40 <uselocale@plt>:
    1f40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #408]
    1f48:	add	x16, x16, #0x198
    1f4c:	br	x17

0000000000001f50 <free@plt>:
    1f50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #416]
    1f58:	add	x16, x16, #0x1a0
    1f5c:	br	x17

0000000000001f60 <getgid@plt>:
    1f60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #424]
    1f68:	add	x16, x16, #0x1a8
    1f6c:	br	x17

0000000000001f70 <mempcpy@plt>:
    1f70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #432]
    1f78:	add	x16, x16, #0x1b0
    1f7c:	br	x17

0000000000001f80 <pthread_rwlock_unlock@plt>:
    1f80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #440]
    1f88:	add	x16, x16, #0x1b8
    1f8c:	br	x17

0000000000001f90 <libintl_dgettext@plt>:
    1f90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #448]
    1f98:	add	x16, x16, #0x1c0
    1f9c:	br	x17

0000000000001fa0 <strchr@plt>:
    1fa0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #456]
    1fa8:	add	x16, x16, #0x1c8
    1fac:	br	x17

0000000000001fb0 <fwrite@plt>:
    1fb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #464]
    1fb8:	add	x16, x16, #0x1d0
    1fbc:	br	x17

0000000000001fc0 <munmap@plt>:
    1fc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #472]
    1fc8:	add	x16, x16, #0x1d8
    1fcc:	br	x17

0000000000001fd0 <strcpy@plt>:
    1fd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #480]
    1fd8:	add	x16, x16, #0x1e0
    1fdc:	br	x17

0000000000001fe0 <iconv_open@plt>:
    1fe0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #488]
    1fe8:	add	x16, x16, #0x1e8
    1fec:	br	x17

0000000000001ff0 <read@plt>:
    1ff0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #496]
    1ff8:	add	x16, x16, #0x1f0
    1ffc:	br	x17

0000000000002000 <pthread_mutexattr_init@plt>:
    2000:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #504]
    2008:	add	x16, x16, #0x1f8
    200c:	br	x17

0000000000002010 <__fxstat@plt>:
    2010:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #512]
    2018:	add	x16, x16, #0x200
    201c:	br	x17

0000000000002020 <pthread_mutexattr_destroy@plt>:
    2020:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #520]
    2028:	add	x16, x16, #0x208
    202c:	br	x17

0000000000002030 <strstr@plt>:
    2030:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #528]
    2038:	add	x16, x16, #0x210
    203c:	br	x17

0000000000002040 <pthread_rwlockattr_destroy@plt>:
    2040:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #536]
    2048:	add	x16, x16, #0x218
    204c:	br	x17

0000000000002050 <__fsetlocking@plt>:
    2050:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #544]
    2058:	add	x16, x16, #0x220
    205c:	br	x17

0000000000002060 <strcspn@plt>:
    2060:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #552]
    2068:	add	x16, x16, #0x228
    206c:	br	x17

0000000000002070 <__errno_location@plt>:
    2070:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #560]
    2078:	add	x16, x16, #0x230
    207c:	br	x17

0000000000002080 <getenv@plt>:
    2080:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #568]
    2088:	add	x16, x16, #0x238
    208c:	br	x17

0000000000002090 <pthread_mutex_lock@plt>:
    2090:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #576]
    2098:	add	x16, x16, #0x240
    209c:	br	x17

00000000000020a0 <pthread_mutex_unlock@plt>:
    20a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #584]
    20a8:	add	x16, x16, #0x248
    20ac:	br	x17

00000000000020b0 <libintl_gettext@plt>:
    20b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #592]
    20b8:	add	x16, x16, #0x250
    20bc:	br	x17

00000000000020c0 <setlocale@plt>:
    20c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #600]
    20c8:	add	x16, x16, #0x258
    20cc:	br	x17

00000000000020d0 <libintl_ngettext@plt>:
    20d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #608]
    20d8:	add	x16, x16, #0x260
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <libintl_bindtextdomain@@Base-0x498>:
    20e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    20e4:	ldr	x0, [x0, #4016]
    20e8:	cbz	x0, 20f0 <libintl_ngettext@plt+0x20>
    20ec:	b	1eb0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	nop
    20f8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    20fc:	add	x0, x0, #0x358
    2100:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2104:	add	x1, x1, #0x358
    2108:	cmp	x1, x0
    210c:	b.eq	2124 <libintl_ngettext@plt+0x54>  // b.none
    2110:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2114:	ldr	x1, [x1, #3984]
    2118:	cbz	x1, 2124 <libintl_ngettext@plt+0x54>
    211c:	mov	x16, x1
    2120:	br	x16
    2124:	ret
    2128:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    212c:	add	x0, x0, #0x358
    2130:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2134:	add	x1, x1, #0x358
    2138:	sub	x1, x1, x0
    213c:	lsr	x2, x1, #63
    2140:	add	x1, x2, x1, asr #3
    2144:	cmp	xzr, x1, asr #1
    2148:	asr	x1, x1, #1
    214c:	b.eq	2164 <libintl_ngettext@plt+0x94>  // b.none
    2150:	adrp	x2, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2154:	ldr	x2, [x2, #4056]
    2158:	cbz	x2, 2164 <libintl_ngettext@plt+0x94>
    215c:	mov	x16, x2
    2160:	br	x16
    2164:	ret
    2168:	stp	x29, x30, [sp, #-32]!
    216c:	mov	x29, sp
    2170:	str	x19, [sp, #16]
    2174:	adrp	x19, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2178:	ldrb	w0, [x19, #856]
    217c:	cbnz	w0, 21a4 <libintl_ngettext@plt+0xd4>
    2180:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2184:	ldr	x0, [x0, #3992]
    2188:	cbz	x0, 2198 <libintl_ngettext@plt+0xc8>
    218c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2190:	ldr	x0, [x0, #616]
    2194:	bl	1cf0 <__cxa_finalize@plt>
    2198:	bl	20f8 <libintl_ngettext@plt+0x28>
    219c:	mov	w0, #0x1                   	// #1
    21a0:	strb	w0, [x19, #856]
    21a4:	ldr	x19, [sp, #16]
    21a8:	ldp	x29, x30, [sp], #32
    21ac:	ret
    21b0:	b	2128 <libintl_ngettext@plt+0x58>
    21b4:	nop
    21b8:	stp	x29, x30, [sp, #-96]!
    21bc:	mov	x29, sp
    21c0:	stp	x25, x26, [sp, #64]
    21c4:	adrp	x25, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    21c8:	ldr	x3, [x25, #4064]
    21cc:	stp	x21, x22, [sp, #32]
    21d0:	mov	x21, x0
    21d4:	stp	x23, x24, [sp, #48]
    21d8:	mov	x23, x1
    21dc:	mov	x24, x2
    21e0:	cbz	x3, 21f4 <libintl_ngettext@plt+0x124>
    21e4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    21e8:	ldr	x0, [x0, #4048]
    21ec:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    21f0:	cbnz	w0, 256c <libintl_ngettext@plt+0x49c>
    21f4:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    21f8:	stp	x19, x20, [sp, #16]
    21fc:	ldr	x0, [x26, #4000]
    2200:	ldr	x22, [x0]
    2204:	cbz	x22, 231c <libintl_ngettext@plt+0x24c>
    2208:	mov	x20, x22
    220c:	b	221c <libintl_ngettext@plt+0x14c>
    2210:	b.lt	231c <libintl_ngettext@plt+0x24c>  // b.tstop
    2214:	ldr	x20, [x20]
    2218:	cbz	x20, 231c <libintl_ngettext@plt+0x24c>
    221c:	add	x1, x20, #0x18
    2220:	mov	x0, x21
    2224:	bl	1f00 <strcmp@plt>
    2228:	mov	w19, w0
    222c:	cmp	w0, #0x0
    2230:	cbnz	w0, 2210 <libintl_ngettext@plt+0x140>
    2234:	cbz	x23, 23d0 <libintl_ngettext@plt+0x300>
    2238:	ldr	x21, [x23]
    223c:	ldr	x22, [x20, #8]
    2240:	cbz	x21, 23cc <libintl_ngettext@plt+0x2fc>
    2244:	mov	x1, x22
    2248:	mov	x0, x21
    224c:	bl	1f00 <strcmp@plt>
    2250:	cbz	w0, 2448 <libintl_ngettext@plt+0x378>
    2254:	stp	x27, x28, [sp, #80]
    2258:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    225c:	mov	x0, x21
    2260:	ldr	x1, [x27, #4040]
    2264:	mov	x26, x1
    2268:	bl	1f00 <strcmp@plt>
    226c:	cbnz	w0, 24bc <libintl_ngettext@plt+0x3ec>
    2270:	ldr	x27, [x27, #4040]
    2274:	cmp	x22, x27
    2278:	b.eq	2284 <libintl_ngettext@plt+0x1b4>  // b.none
    227c:	mov	x0, x22
    2280:	bl	1f50 <free@plt>
    2284:	str	x26, [x20, #8]
    2288:	str	x26, [x23]
    228c:	cbz	x24, 2494 <libintl_ngettext@plt+0x3c4>
    2290:	ldr	x22, [x24]
    2294:	mov	w19, #0x1                   	// #1
    2298:	ldr	x21, [x20, #16]
    229c:	cbz	x22, 2490 <libintl_ngettext@plt+0x3c0>
    22a0:	ldp	x27, x28, [sp, #80]
    22a4:	cbz	x21, 22b8 <libintl_ngettext@plt+0x1e8>
    22a8:	mov	x1, x21
    22ac:	mov	x0, x22
    22b0:	bl	1f00 <strcmp@plt>
    22b4:	cbz	w0, 2458 <libintl_ngettext@plt+0x388>
    22b8:	mov	x0, x22
    22bc:	bl	1e80 <strdup@plt>
    22c0:	mov	x22, x0
    22c4:	cbz	x0, 2454 <libintl_ngettext@plt+0x384>
    22c8:	mov	x0, x21
    22cc:	bl	1f50 <free@plt>
    22d0:	str	x22, [x20, #16]
    22d4:	str	x22, [x24]
    22d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    22dc:	ldr	x0, [x0, #4032]
    22e0:	ldr	w1, [x0]
    22e4:	add	w1, w1, #0x1
    22e8:	str	w1, [x0]
    22ec:	ldr	x25, [x25, #4064]
    22f0:	cbz	x25, 2304 <libintl_ngettext@plt+0x234>
    22f4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    22f8:	ldr	x0, [x0, #4048]
    22fc:	bl	1f80 <pthread_rwlock_unlock@plt>
    2300:	cbnz	w0, 2570 <libintl_ngettext@plt+0x4a0>
    2304:	ldp	x19, x20, [sp, #16]
    2308:	ldp	x21, x22, [sp, #32]
    230c:	ldp	x23, x24, [sp, #48]
    2310:	ldp	x25, x26, [sp, #64]
    2314:	ldp	x29, x30, [sp], #96
    2318:	ret
    231c:	stp	x27, x28, [sp, #80]
    2320:	cbz	x23, 23e8 <libintl_ngettext@plt+0x318>
    2324:	ldr	x20, [x23]
    2328:	cbz	x20, 2464 <libintl_ngettext@plt+0x394>
    232c:	mov	x0, x21
    2330:	bl	1c60 <strlen@plt>
    2334:	add	x27, x0, #0x1
    2338:	add	x0, x0, #0x19
    233c:	bl	1db0 <malloc@plt>
    2340:	mov	x19, x0
    2344:	cbz	x0, 2520 <libintl_ngettext@plt+0x450>
    2348:	mov	x2, x27
    234c:	mov	x1, x21
    2350:	add	x0, x0, #0x18
    2354:	bl	1c10 <memcpy@plt>
    2358:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    235c:	mov	x0, x20
    2360:	ldr	x28, [x27, #4040]
    2364:	mov	x1, x28
    2368:	bl	1f00 <strcmp@plt>
    236c:	mov	x1, x28
    2370:	cbnz	w0, 24dc <libintl_ngettext@plt+0x40c>
    2374:	str	x1, [x23]
    2378:	str	x1, [x19, #8]
    237c:	cbnz	x24, 242c <libintl_ngettext@plt+0x35c>
    2380:	str	xzr, [x19, #16]
    2384:	cbz	x22, 247c <libintl_ngettext@plt+0x3ac>
    2388:	add	x1, x22, #0x18
    238c:	mov	x0, x21
    2390:	bl	1f00 <strcmp@plt>
    2394:	tbz	w0, #31, 23b0 <libintl_ngettext@plt+0x2e0>
    2398:	b	247c <libintl_ngettext@plt+0x3ac>
    239c:	add	x1, x22, #0x18
    23a0:	mov	x0, x21
    23a4:	bl	1f00 <strcmp@plt>
    23a8:	cmp	w0, #0x0
    23ac:	b.le	23bc <libintl_ngettext@plt+0x2ec>
    23b0:	mov	x20, x22
    23b4:	ldr	x22, [x22]
    23b8:	cbnz	x22, 239c <libintl_ngettext@plt+0x2cc>
    23bc:	ldp	x27, x28, [sp, #80]
    23c0:	str	x22, [x19]
    23c4:	str	x19, [x20]
    23c8:	b	22d8 <libintl_ngettext@plt+0x208>
    23cc:	str	x22, [x23]
    23d0:	cbz	x24, 22ec <libintl_ngettext@plt+0x21c>
    23d4:	ldr	x22, [x24]
    23d8:	ldr	x21, [x20, #16]
    23dc:	cbnz	x22, 22a4 <libintl_ngettext@plt+0x1d4>
    23e0:	str	x21, [x24]
    23e4:	b	22ec <libintl_ngettext@plt+0x21c>
    23e8:	cbz	x24, 2474 <libintl_ngettext@plt+0x3a4>
    23ec:	ldr	x0, [x24]
    23f0:	cbz	x0, 24b0 <libintl_ngettext@plt+0x3e0>
    23f4:	mov	x0, x21
    23f8:	bl	1c60 <strlen@plt>
    23fc:	add	x20, x0, #0x1
    2400:	add	x0, x0, #0x19
    2404:	bl	1db0 <malloc@plt>
    2408:	mov	x19, x0
    240c:	cbz	x0, 24b0 <libintl_ngettext@plt+0x3e0>
    2410:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2414:	mov	x2, x20
    2418:	mov	x1, x21
    241c:	add	x0, x19, #0x18
    2420:	bl	1c10 <memcpy@plt>
    2424:	ldr	x0, [x27, #4040]
    2428:	str	x0, [x19, #8]
    242c:	ldr	x0, [x24]
    2430:	cbz	x0, 243c <libintl_ngettext@plt+0x36c>
    2434:	bl	1e80 <strdup@plt>
    2438:	cbz	x0, 2500 <libintl_ngettext@plt+0x430>
    243c:	str	x0, [x24]
    2440:	str	x0, [x19, #16]
    2444:	b	2384 <libintl_ngettext@plt+0x2b4>
    2448:	str	x22, [x23]
    244c:	cbnz	x24, 23d4 <libintl_ngettext@plt+0x304>
    2450:	b	22ec <libintl_ngettext@plt+0x21c>
    2454:	mov	x21, #0x0                   	// #0
    2458:	str	x21, [x24]
    245c:	cbnz	w19, 22d8 <libintl_ngettext@plt+0x208>
    2460:	b	22ec <libintl_ngettext@plt+0x21c>
    2464:	cbnz	x24, 249c <libintl_ngettext@plt+0x3cc>
    2468:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    246c:	ldr	x0, [x0, #4040]
    2470:	str	x0, [x23]
    2474:	ldp	x27, x28, [sp, #80]
    2478:	b	22ec <libintl_ngettext@plt+0x21c>
    247c:	ldr	x26, [x26, #4000]
    2480:	ldp	x27, x28, [sp, #80]
    2484:	str	x22, [x19]
    2488:	str	x19, [x26]
    248c:	b	22d8 <libintl_ngettext@plt+0x208>
    2490:	str	x21, [x24]
    2494:	ldp	x27, x28, [sp, #80]
    2498:	b	22d8 <libintl_ngettext@plt+0x208>
    249c:	ldr	x0, [x24]
    24a0:	cbnz	x0, 252c <libintl_ngettext@plt+0x45c>
    24a4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    24a8:	ldr	x0, [x0, #4040]
    24ac:	str	x0, [x23]
    24b0:	ldp	x27, x28, [sp, #80]
    24b4:	str	xzr, [x24]
    24b8:	b	22ec <libintl_ngettext@plt+0x21c>
    24bc:	mov	x0, x21
    24c0:	bl	1e80 <strdup@plt>
    24c4:	mov	x26, x0
    24c8:	cbnz	x0, 2270 <libintl_ngettext@plt+0x1a0>
    24cc:	ldp	x27, x28, [sp, #80]
    24d0:	str	xzr, [x23]
    24d4:	cbnz	x24, 23d4 <libintl_ngettext@plt+0x304>
    24d8:	b	22ec <libintl_ngettext@plt+0x21c>
    24dc:	mov	x0, x20
    24e0:	bl	1e80 <strdup@plt>
    24e4:	mov	x1, x0
    24e8:	cbnz	x0, 2374 <libintl_ngettext@plt+0x2a4>
    24ec:	mov	x0, x19
    24f0:	bl	1f50 <free@plt>
    24f4:	cbnz	x23, 2520 <libintl_ngettext@plt+0x450>
    24f8:	cbnz	x24, 24b0 <libintl_ngettext@plt+0x3e0>
    24fc:	b	2474 <libintl_ngettext@plt+0x3a4>
    2500:	ldr	x27, [x27, #4040]
    2504:	ldr	x0, [x19, #8]
    2508:	cmp	x0, x27
    250c:	b.eq	2514 <libintl_ngettext@plt+0x444>  // b.none
    2510:	bl	1f50 <free@plt>
    2514:	mov	x0, x19
    2518:	bl	1f50 <free@plt>
    251c:	cbz	x23, 24b0 <libintl_ngettext@plt+0x3e0>
    2520:	str	xzr, [x23]
    2524:	cbnz	x24, 24b0 <libintl_ngettext@plt+0x3e0>
    2528:	b	2474 <libintl_ngettext@plt+0x3a4>
    252c:	mov	x0, x21
    2530:	bl	1c60 <strlen@plt>
    2534:	add	x20, x0, #0x1
    2538:	add	x0, x0, #0x19
    253c:	bl	1db0 <malloc@plt>
    2540:	mov	x19, x0
    2544:	cbz	x0, 2520 <libintl_ngettext@plt+0x450>
    2548:	mov	x2, x20
    254c:	mov	x1, x21
    2550:	add	x0, x19, #0x18
    2554:	bl	1c10 <memcpy@plt>
    2558:	ldr	x20, [x23]
    255c:	cbnz	x20, 2358 <libintl_ngettext@plt+0x288>
    2560:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2564:	ldr	x1, [x27, #4040]
    2568:	b	2374 <libintl_ngettext@plt+0x2a4>
    256c:	stp	x19, x20, [sp, #16]
    2570:	stp	x27, x28, [sp, #80]
    2574:	bl	1ec0 <abort@plt>

0000000000002578 <libintl_bindtextdomain@@Base>:
    2578:	stp	x29, x30, [sp, #-32]!
    257c:	mov	x29, sp
    2580:	str	x1, [sp, #24]
    2584:	cbz	x0, 25b0 <libintl_bindtextdomain@@Base+0x38>
    2588:	ldrb	w2, [x0]
    258c:	mov	x1, #0x0                   	// #0
    2590:	cbz	w2, 25a4 <libintl_bindtextdomain@@Base+0x2c>
    2594:	add	x1, sp, #0x18
    2598:	mov	x2, #0x0                   	// #0
    259c:	bl	21b8 <libintl_ngettext@plt+0xe8>
    25a0:	ldr	x1, [sp, #24]
    25a4:	mov	x0, x1
    25a8:	ldp	x29, x30, [sp], #32
    25ac:	ret
    25b0:	mov	x1, #0x0                   	// #0
    25b4:	mov	x0, x1
    25b8:	ldp	x29, x30, [sp], #32
    25bc:	ret

00000000000025c0 <libintl_bind_textdomain_codeset@@Base>:
    25c0:	stp	x29, x30, [sp, #-32]!
    25c4:	mov	x29, sp
    25c8:	str	x1, [sp, #24]
    25cc:	cbz	x0, 25f4 <libintl_bind_textdomain_codeset@@Base+0x34>
    25d0:	ldrb	w2, [x0]
    25d4:	mov	x1, #0x0                   	// #0
    25d8:	cbz	w2, 25e8 <libintl_bind_textdomain_codeset@@Base+0x28>
    25dc:	add	x2, sp, #0x18
    25e0:	bl	21b8 <libintl_ngettext@plt+0xe8>
    25e4:	ldr	x1, [sp, #24]
    25e8:	mov	x0, x1
    25ec:	ldp	x29, x30, [sp], #32
    25f0:	ret
    25f4:	mov	x1, #0x0                   	// #0
    25f8:	mov	x0, x1
    25fc:	ldp	x29, x30, [sp], #32
    2600:	ret
    2604:	nop

0000000000002608 <libintl_dcgettext@@Base>:
    2608:	mov	w5, w2
    260c:	mov	x4, #0x0                   	// #0
    2610:	mov	w3, #0x0                   	// #0
    2614:	mov	x2, #0x0                   	// #0
    2618:	b	54b0 <libintl_textdomain@@Base+0x1428>
    261c:	nop

0000000000002620 <libintl_dgettext@@Base>:
    2620:	mov	w2, #0x5                   	// #5
    2624:	b	1d40 <libintl_dcgettext@plt>

0000000000002628 <libintl_gettext@@Base>:
    2628:	mov	x1, x0
    262c:	mov	w2, #0x5                   	// #5
    2630:	mov	x0, #0x0                   	// #0
    2634:	b	1d40 <libintl_dcgettext@plt>
    2638:	sub	sp, sp, #0xb0
    263c:	stp	x29, x30, [sp, #32]
    2640:	add	x29, sp, #0x20
    2644:	stp	x23, x24, [sp, #80]
    2648:	adrp	x24, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    264c:	mov	x23, x2
    2650:	ldr	x4, [x24, #4064]
    2654:	stp	x19, x20, [sp, #48]
    2658:	mov	x20, x0
    265c:	stp	x21, x22, [sp, #64]
    2660:	mov	x22, x1
    2664:	mov	x21, x3
    2668:	cbz	x4, 267c <libintl_gettext@@Base+0x54>
    266c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2670:	add	x0, x0, #0x270
    2674:	bl	1c90 <pthread_rwlock_rdlock@plt>
    2678:	cbnz	w0, 28b8 <libintl_gettext@@Base+0x290>
    267c:	mov	x0, x20
    2680:	stp	x25, x26, [sp, #96]
    2684:	bl	1c60 <strlen@plt>
    2688:	stp	xzr, x23, [sp]
    268c:	add	x2, x0, #0x1
    2690:	mov	x4, x22
    2694:	str	wzr, [sp, #16]
    2698:	mov	x1, x20
    269c:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    26a0:	mov	x7, #0x0                   	// #0
    26a4:	add	x0, x25, #0x360
    26a8:	mov	x6, #0x0                   	// #0
    26ac:	mov	x5, #0x0                   	// #0
    26b0:	mov	w3, #0x0                   	// #0
    26b4:	bl	41c8 <libintl_textdomain@@Base+0x140>
    26b8:	mov	x19, x0
    26bc:	ldr	x4, [x24, #4064]
    26c0:	cbz	x4, 26d4 <libintl_gettext@@Base+0xac>
    26c4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    26c8:	add	x0, x0, #0x270
    26cc:	bl	1f80 <pthread_rwlock_unlock@plt>
    26d0:	cbnz	w0, 28b0 <libintl_gettext@@Base+0x288>
    26d4:	cbz	x19, 2758 <libintl_gettext@@Base+0x130>
    26d8:	ldr	w0, [x19, #8]
    26dc:	cmp	w0, #0x0
    26e0:	b.le	2748 <libintl_gettext@@Base+0x120>
    26e4:	ldr	x0, [x19, #16]
    26e8:	cbz	x0, 270c <libintl_gettext@@Base+0xe4>
    26ec:	mov	x0, x19
    26f0:	ldp	x29, x30, [sp, #32]
    26f4:	ldp	x19, x20, [sp, #48]
    26f8:	ldp	x21, x22, [sp, #64]
    26fc:	ldp	x23, x24, [sp, #80]
    2700:	ldp	x25, x26, [sp, #96]
    2704:	add	sp, sp, #0xb0
    2708:	ret
    270c:	ldr	x0, [x19, #32]
    2710:	cbz	x0, 26ec <libintl_gettext@@Base+0xc4>
    2714:	add	x20, x19, #0x20
    2718:	b	2730 <libintl_gettext@@Base+0x108>
    271c:	ldr	x0, [x20]
    2720:	ldr	x0, [x0, #16]
    2724:	cbnz	x0, 26ec <libintl_gettext@@Base+0xc4>
    2728:	ldr	x0, [x20, #8]!
    272c:	cbz	x0, 26ec <libintl_gettext@@Base+0xc4>
    2730:	ldr	w1, [x0, #8]
    2734:	cmp	w1, #0x0
    2738:	b.gt	271c <libintl_gettext@@Base+0xf4>
    273c:	mov	x1, x21
    2740:	bl	2910 <libintl_gettext@@Base+0x2e8>
    2744:	b	271c <libintl_gettext@@Base+0xf4>
    2748:	mov	x1, x21
    274c:	mov	x0, x19
    2750:	bl	2910 <libintl_gettext@@Base+0x2e8>
    2754:	b	26e4 <libintl_gettext@@Base+0xbc>
    2758:	mov	x0, x22
    275c:	str	x27, [sp, #112]
    2760:	bl	1df0 <_nl_expand_alias@plt>
    2764:	mov	x27, x0
    2768:	cbz	x0, 2778 <libintl_gettext@@Base+0x150>
    276c:	bl	1e80 <strdup@plt>
    2770:	mov	x22, x0
    2774:	cbz	x0, 2830 <libintl_gettext@@Base+0x208>
    2778:	add	x5, sp, #0xa8
    277c:	add	x4, sp, #0xa0
    2780:	add	x3, sp, #0x98
    2784:	add	x2, sp, #0x90
    2788:	add	x1, sp, #0x88
    278c:	mov	x0, x22
    2790:	bl	47a0 <libintl_textdomain@@Base+0x718>
    2794:	mov	w26, w0
    2798:	cmn	w0, #0x1
    279c:	b.eq	2830 <libintl_gettext@@Base+0x208>  // b.none
    27a0:	ldr	x0, [x24, #4064]
    27a4:	cbz	x0, 27b8 <libintl_gettext@@Base+0x190>
    27a8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    27ac:	add	x0, x0, #0x270
    27b0:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    27b4:	cbnz	w0, 28b4 <libintl_gettext@@Base+0x28c>
    27b8:	mov	x0, x20
    27bc:	bl	1c60 <strlen@plt>
    27c0:	add	x2, x0, #0x1
    27c4:	mov	w1, #0x1                   	// #1
    27c8:	ldp	x4, x0, [sp, #136]
    27cc:	stp	x0, x23, [sp]
    27d0:	mov	w3, w26
    27d4:	ldp	x5, x6, [sp, #152]
    27d8:	str	w1, [sp, #16]
    27dc:	ldr	x7, [sp, #168]
    27e0:	mov	x1, x20
    27e4:	add	x0, x25, #0x360
    27e8:	bl	41c8 <libintl_textdomain@@Base+0x140>
    27ec:	mov	x19, x0
    27f0:	ldr	x2, [x24, #4064]
    27f4:	cbz	x2, 2808 <libintl_gettext@@Base+0x1e0>
    27f8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    27fc:	add	x0, x0, #0x270
    2800:	bl	1f80 <pthread_rwlock_unlock@plt>
    2804:	cbnz	w0, 28b4 <libintl_gettext@@Base+0x28c>
    2808:	cbz	x19, 282c <libintl_gettext@@Base+0x204>
    280c:	ldr	w0, [x19, #8]
    2810:	cmp	w0, #0x0
    2814:	b.le	28a0 <libintl_gettext@@Base+0x278>
    2818:	ldr	x0, [x19, #16]
    281c:	cbz	x0, 2864 <libintl_gettext@@Base+0x23c>
    2820:	cbz	x27, 282c <libintl_gettext@@Base+0x204>
    2824:	mov	x0, x22
    2828:	bl	1f50 <free@plt>
    282c:	tbnz	w26, #0, 2854 <libintl_gettext@@Base+0x22c>
    2830:	mov	x0, x19
    2834:	ldp	x29, x30, [sp, #32]
    2838:	ldp	x19, x20, [sp, #48]
    283c:	ldp	x21, x22, [sp, #64]
    2840:	ldp	x23, x24, [sp, #80]
    2844:	ldp	x25, x26, [sp, #96]
    2848:	ldr	x27, [sp, #112]
    284c:	add	sp, sp, #0xb0
    2850:	ret
    2854:	ldr	x0, [sp, #168]
    2858:	bl	1f50 <free@plt>
    285c:	ldr	x27, [sp, #112]
    2860:	b	26ec <libintl_gettext@@Base+0xc4>
    2864:	ldr	x0, [x19, #32]
    2868:	cbz	x0, 2820 <libintl_gettext@@Base+0x1f8>
    286c:	add	x20, x19, #0x20
    2870:	b	2888 <libintl_gettext@@Base+0x260>
    2874:	ldr	x0, [x20]
    2878:	ldr	x0, [x0, #16]
    287c:	cbnz	x0, 2820 <libintl_gettext@@Base+0x1f8>
    2880:	ldr	x0, [x20, #8]!
    2884:	cbz	x0, 2820 <libintl_gettext@@Base+0x1f8>
    2888:	ldr	w1, [x0, #8]
    288c:	cmp	w1, #0x0
    2890:	b.gt	2874 <libintl_gettext@@Base+0x24c>
    2894:	mov	x1, x21
    2898:	bl	2910 <libintl_gettext@@Base+0x2e8>
    289c:	b	2874 <libintl_gettext@@Base+0x24c>
    28a0:	mov	x1, x21
    28a4:	mov	x0, x19
    28a8:	bl	2910 <libintl_gettext@@Base+0x2e8>
    28ac:	b	2818 <libintl_gettext@@Base+0x1f0>
    28b0:	str	x27, [sp, #112]
    28b4:	bl	1ec0 <abort@plt>
    28b8:	stp	x25, x26, [sp, #96]
    28bc:	str	x27, [sp, #112]
    28c0:	bl	1ec0 <abort@plt>
    28c4:	nop
    28c8:	mov	x2, x0
    28cc:	ldrb	w1, [x2], #1
    28d0:	and	x0, x1, #0xff
    28d4:	cbnz	w1, 28f0 <libintl_gettext@@Base+0x2c8>
    28d8:	b	2904 <libintl_gettext@@Base+0x2dc>
    28dc:	add	x0, x3, x0, lsl #4
    28e0:	ands	x1, x0, #0xf0000000
    28e4:	and	x3, x0, #0xffffffff0fffffff
    28e8:	eor	x1, x3, x1, lsr #24
    28ec:	csel	x0, x0, x1, eq  // eq = none
    28f0:	ldrb	w1, [x2]
    28f4:	add	x2, x2, #0x1
    28f8:	and	x3, x1, #0xff
    28fc:	cbnz	w1, 28dc <libintl_gettext@@Base+0x2b4>
    2900:	ret
    2904:	mov	x0, #0x0                   	// #0
    2908:	ret
    290c:	nop
    2910:	stp	x29, x30, [sp, #-384]!
    2914:	mov	x29, sp
    2918:	stp	x19, x20, [sp, #16]
    291c:	adrp	x20, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    2920:	mov	x19, x0
    2924:	ldr	x0, [x20, #4064]
    2928:	stp	x21, x22, [sp, #32]
    292c:	stp	x23, x24, [sp, #48]
    2930:	mov	x24, x1
    2934:	stp	x25, x26, [sp, #64]
    2938:	stp	x27, x28, [sp, #80]
    293c:	cbz	x0, 2950 <libintl_gettext@@Base+0x328>
    2940:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2944:	add	x0, x0, #0x2a8
    2948:	bl	2090 <pthread_mutex_lock@plt>
    294c:	cbnz	w0, 3b44 <libintl_gettext@@Base+0x151c>
    2950:	ldr	w0, [x19, #8]
    2954:	cbnz	w0, 2af0 <libintl_gettext@@Base+0x4c8>
    2958:	ldr	x0, [x19]
    295c:	mov	w1, #0xffffffff            	// #-1
    2960:	str	w1, [x19, #8]
    2964:	str	xzr, [x19, #16]
    2968:	cbz	x0, 2ae8 <libintl_gettext@@Base+0x4c0>
    296c:	mov	w1, #0x0                   	// #0
    2970:	bl	1dd0 <open@plt>
    2974:	mov	w21, w0
    2978:	cmn	w0, #0x1
    297c:	b.eq	2ae8 <libintl_gettext@@Base+0x4c0>  // b.none
    2980:	mov	w1, w0
    2984:	add	x2, x29, #0x100
    2988:	mov	w0, #0x0                   	// #0
    298c:	bl	2010 <__fxstat@plt>
    2990:	cbnz	w0, 2b48 <libintl_gettext@@Base+0x520>
    2994:	ldr	x28, [x29, #304]
    2998:	cmp	x28, #0x2f
    299c:	b.ls	2b48 <libintl_gettext@@Base+0x520>  // b.plast
    29a0:	mov	w4, w21
    29a4:	mov	x1, x28
    29a8:	mov	x5, #0x0                   	// #0
    29ac:	mov	w3, #0x2                   	// #2
    29b0:	mov	w2, #0x1                   	// #1
    29b4:	mov	x0, #0x0                   	// #0
    29b8:	bl	1f30 <mmap@plt>
    29bc:	mov	x26, x0
    29c0:	cmn	x0, #0x1
    29c4:	b.eq	3110 <libintl_gettext@@Base+0xae8>  // b.none
    29c8:	mov	w0, w21
    29cc:	bl	1ea0 <close@plt>
    29d0:	ldr	w25, [x26]
    29d4:	mov	w1, #0x12de                	// #4830
    29d8:	movk	w1, #0x9504, lsl #16
    29dc:	mov	w0, #0x495                 	// #1173
    29e0:	cmp	w25, w1
    29e4:	movk	w0, #0xde12, lsl #16
    29e8:	cset	w21, ne  // ne = any
    29ec:	cmp	w21, #0x0
    29f0:	ccmp	w25, w0, #0x4, ne  // ne = any
    29f4:	b.ne	3010 <libintl_gettext@@Base+0x9e8>  // b.any
    29f8:	mov	x0, #0xc8                  	// #200
    29fc:	bl	1db0 <malloc@plt>
    2a00:	mov	x27, x0
    2a04:	cbz	x0, 3010 <libintl_gettext@@Base+0x9e8>
    2a08:	mov	w22, #0x1                   	// #1
    2a0c:	mov	w0, #0x12de                	// #4830
    2a10:	str	x26, [x27]
    2a14:	str	w22, [x27, #8]
    2a18:	movk	w0, #0x9504, lsl #16
    2a1c:	str	x27, [x19, #16]
    2a20:	cmp	w25, w0
    2a24:	str	x28, [x27, #16]
    2a28:	str	w21, [x27, #24]
    2a2c:	str	xzr, [x27, #32]
    2a30:	ldr	w0, [x26, #4]
    2a34:	b.eq	2b84 <libintl_gettext@@Base+0x55c>  // b.none
    2a38:	rev	w0, w0
    2a3c:	asr	w1, w0, #16
    2a40:	cmp	w1, #0x1
    2a44:	b.hi	2b60 <libintl_gettext@@Base+0x538>  // b.pmore
    2a48:	ldr	w1, [x26, #8]
    2a4c:	and	w0, w0, #0xffff
    2a50:	rev	w1, w1
    2a54:	str	w1, [x27, #40]
    2a58:	ldp	w2, w1, [x26, #12]
    2a5c:	ldr	w4, [x26, #20]
    2a60:	rev	w2, w2
    2a64:	rev	w1, w1
    2a68:	rev	w3, w4
    2a6c:	add	x2, x26, x2
    2a70:	add	x1, x26, x1
    2a74:	stp	x2, x1, [x27, #48]
    2a78:	cmp	w3, #0x2
    2a7c:	str	w3, [x27, #88]
    2a80:	str	w3, [x29, #232]
    2a84:	b.hi	2c1c <libintl_gettext@@Base+0x5f4>  // b.pmore
    2a88:	str	xzr, [x27, #96]
    2a8c:	str	w21, [x27, #104]
    2a90:	cbnz	w0, 2b60 <libintl_gettext@@Base+0x538>
    2a94:	str	wzr, [x27, #64]
    2a98:	stp	xzr, xzr, [x27, #72]
    2a9c:	ldr	x0, [x20, #4064]
    2aa0:	stp	xzr, xzr, [x27, #112]
    2aa4:	cbz	x0, 2ab4 <libintl_gettext@@Base+0x48c>
    2aa8:	add	x0, x27, #0x80
    2aac:	bl	6720 <libintl_ngettext@@Base+0x9f8>
    2ab0:	cbnz	w0, 3b44 <libintl_gettext@@Base+0x151c>
    2ab4:	mov	x1, x24
    2ab8:	add	x4, x29, #0xf0
    2abc:	mov	x0, x19
    2ac0:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2ac4:	mov	w3, #0x0                   	// #0
    2ac8:	add	x2, x2, #0x198
    2acc:	bl	4d18 <libintl_textdomain@@Base+0xc90>
    2ad0:	cmn	x0, #0x1
    2ad4:	b.eq	31dc <libintl_gettext@@Base+0xbb4>  // b.none
    2ad8:	add	x2, x27, #0xc0
    2adc:	add	x1, x27, #0xb8
    2ae0:	bl	65d8 <libintl_ngettext@@Base+0x8b0>
    2ae4:	nop
    2ae8:	mov	w0, #0x1                   	// #1
    2aec:	str	w0, [x19, #8]
    2af0:	ldr	x20, [x20, #4064]
    2af4:	cbz	x20, 2b08 <libintl_gettext@@Base+0x4e0>
    2af8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    2afc:	add	x0, x0, #0x2a8
    2b00:	bl	20a0 <pthread_mutex_unlock@plt>
    2b04:	cbnz	w0, 3b44 <libintl_gettext@@Base+0x151c>
    2b08:	mov	sp, x29
    2b0c:	ldp	x19, x20, [sp, #16]
    2b10:	ldp	x21, x22, [sp, #32]
    2b14:	ldp	x23, x24, [sp, #48]
    2b18:	ldp	x25, x26, [sp, #64]
    2b1c:	ldp	x27, x28, [sp, #80]
    2b20:	ldp	x29, x30, [sp], #384
    2b24:	ret
    2b28:	cmn	x0, #0x1
    2b2c:	b.ne	2b40 <libintl_gettext@@Base+0x518>  // b.any
    2b30:	bl	2070 <__errno_location@plt>
    2b34:	ldr	w0, [x0]
    2b38:	cmp	w0, #0x4
    2b3c:	b.eq	3128 <libintl_gettext@@Base+0xb00>  // b.none
    2b40:	mov	x0, x26
    2b44:	bl	1f50 <free@plt>
    2b48:	mov	w0, w21
    2b4c:	bl	1ea0 <close@plt>
    2b50:	b	2ae8 <libintl_gettext@@Base+0x4c0>
    2b54:	ldp	x19, x28, [x29, #136]
    2b58:	ldr	w22, [x29, #152]
    2b5c:	ldr	x27, [x29, #160]
    2b60:	mov	x0, #0x0                   	// #0
    2b64:	bl	1f50 <free@plt>
    2b68:	cbnz	w22, 2c0c <libintl_gettext@@Base+0x5e4>
    2b6c:	mov	x0, x26
    2b70:	bl	1f50 <free@plt>
    2b74:	mov	x0, x27
    2b78:	bl	1f50 <free@plt>
    2b7c:	str	xzr, [x19, #16]
    2b80:	b	2ae8 <libintl_gettext@@Base+0x4c0>
    2b84:	asr	w1, w0, #16
    2b88:	cmp	w1, #0x1
    2b8c:	b.hi	2b60 <libintl_gettext@@Base+0x538>  // b.pmore
    2b90:	ldp	w1, w3, [x26, #16]
    2b94:	str	w3, [x29, #232]
    2b98:	ldp	w7, w2, [x26, #8]
    2b9c:	add	x1, x26, x1
    2ba0:	str	w7, [x27, #40]
    2ba4:	and	w0, w0, #0xffff
    2ba8:	add	x2, x26, x2
    2bac:	stp	x2, x1, [x27, #48]
    2bb0:	cmp	w3, #0x2
    2bb4:	str	w3, [x27, #88]
    2bb8:	b.ls	2a88 <libintl_gettext@@Base+0x460>  // b.plast
    2bbc:	ldr	w1, [x26, #24]
    2bc0:	str	w21, [x27, #104]
    2bc4:	add	x1, x26, x1
    2bc8:	str	x1, [x27, #96]
    2bcc:	str	x1, [x29, #208]
    2bd0:	cbz	w0, 2a94 <libintl_gettext@@Base+0x46c>
    2bd4:	ldr	w13, [x26, #36]
    2bd8:	cbz	w13, 2a94 <libintl_gettext@@Base+0x46c>
    2bdc:	ldp	w1, w9, [x26, #28]
    2be0:	str	w1, [x29, #200]
    2be4:	add	x9, x26, x9
    2be8:	ubfiz	x0, x1, #3, #32
    2bec:	add	x0, x0, #0xf
    2bf0:	and	x0, x0, #0xffffffff0
    2bf4:	sub	sp, sp, x0
    2bf8:	mov	x23, sp
    2bfc:	cbnz	w1, 2c74 <libintl_gettext@@Base+0x64c>
    2c00:	ldp	w0, w1, [x26, #40]
    2c04:	add	x2, x26, x0
    2c08:	b	2d7c <libintl_gettext@@Base+0x754>
    2c0c:	mov	x1, x28
    2c10:	mov	x0, x26
    2c14:	bl	1fc0 <munmap@plt>
    2c18:	b	2b74 <libintl_gettext@@Base+0x54c>
    2c1c:	ldr	w1, [x26, #24]
    2c20:	str	w21, [x27, #104]
    2c24:	rev	w1, w1
    2c28:	add	x1, x26, x1
    2c2c:	str	x1, [x27, #96]
    2c30:	str	x1, [x29, #208]
    2c34:	cbz	w0, 2a94 <libintl_gettext@@Base+0x46c>
    2c38:	ldr	w0, [x26, #36]
    2c3c:	rev	w13, w0
    2c40:	cbz	w0, 2a94 <libintl_gettext@@Base+0x46c>
    2c44:	ldp	w1, w9, [x26, #28]
    2c48:	rev	w0, w1
    2c4c:	rev	w2, w1
    2c50:	str	w2, [x29, #200]
    2c54:	rev	w9, w9
    2c58:	lsl	x0, x0, #3
    2c5c:	add	x9, x26, x9
    2c60:	add	x0, x0, #0xf
    2c64:	and	x0, x0, #0xffffffff0
    2c68:	sub	sp, sp, x0
    2c6c:	mov	x23, sp
    2c70:	cbz	w1, 2d6c <libintl_gettext@@Base+0x744>
    2c74:	ldr	w0, [x29, #200]
    2c78:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2c7c:	adrp	x18, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2c80:	add	x18, x18, #0x120
    2c84:	sub	w7, w0, #0x1
    2c88:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2c8c:	add	x7, x7, #0x1
    2c90:	add	x0, x0, #0x148
    2c94:	stp	x18, x0, [x29, #216]
    2c98:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2c9c:	add	x8, x1, #0x140
    2ca0:	add	x5, x0, #0x110
    2ca4:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2ca8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cac:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cb0:	adrp	x17, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cb4:	adrp	x16, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cb8:	adrp	x15, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cbc:	adrp	x30, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cc0:	mov	w10, #0x12de                	// #4830
    2cc4:	add	x12, x12, #0x160
    2cc8:	add	x17, x17, #0x138
    2ccc:	add	x16, x16, #0x130
    2cd0:	add	x15, x15, #0x118
    2cd4:	add	x30, x30, #0x100
    2cd8:	add	x11, x9, #0x4
    2cdc:	lsl	x7, x7, #3
    2ce0:	add	x6, x1, #0x108
    2ce4:	add	x4, x0, #0x128
    2ce8:	mov	x1, #0x0                   	// #0
    2cec:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    2cf0:	movk	w10, #0x9504, lsl #16
    2cf4:	add	x3, x0, #0x158
    2cf8:	str	x3, [x29, #192]
    2cfc:	nop
    2d00:	ldr	w0, [x11, x1]
    2d04:	cmp	w25, w10
    2d08:	ldr	w2, [x9, x1]
    2d0c:	b.eq	3048 <libintl_gettext@@Base+0xa20>  // b.none
    2d10:	rev	w0, w0
    2d14:	rev	w2, w2
    2d18:	add	x0, x26, x0
    2d1c:	cbz	w2, 2b60 <libintl_gettext@@Base+0x538>
    2d20:	sub	w2, w2, #0x1
    2d24:	ldrb	w2, [x0, w2, uxtw]
    2d28:	cbnz	w2, 2b60 <libintl_gettext@@Base+0x538>
    2d2c:	ldrb	w2, [x0]
    2d30:	cmp	w2, #0x50
    2d34:	b.eq	3050 <libintl_gettext@@Base+0xa28>  // b.none
    2d38:	cmp	w2, #0x49
    2d3c:	b.ne	31c0 <libintl_gettext@@Base+0xb98>  // b.any
    2d40:	ldrb	w0, [x0, #1]
    2d44:	cmp	w0, #0x0
    2d48:	csel	x2, x12, xzr, eq  // eq = none
    2d4c:	str	x2, [x23, x1]
    2d50:	add	x1, x1, #0x8
    2d54:	cmp	x7, x1
    2d58:	b.ne	2d00 <libintl_gettext@@Base+0x6d8>  // b.any
    2d5c:	mov	w0, #0x12de                	// #4830
    2d60:	movk	w0, #0x9504, lsl #16
    2d64:	cmp	w25, w0
    2d68:	b.eq	2c00 <libintl_gettext@@Base+0x5d8>  // b.none
    2d6c:	ldp	w0, w1, [x26, #40]
    2d70:	rev	w0, w0
    2d74:	rev	w1, w1
    2d78:	add	x2, x26, x0
    2d7c:	ldr	x3, [x29, #232]
    2d80:	sub	w0, w13, #0x1
    2d84:	add	x0, x0, #0x1
    2d88:	stp	x19, x28, [x29, #136]
    2d8c:	mov	w19, w25
    2d90:	ubfiz	x3, x3, #2, #32
    2d94:	stp	x24, x3, [x29, #104]
    2d98:	ldr	w24, [x29, #200]
    2d9c:	add	x0, x2, x0, lsl #2
    2da0:	stp	x27, x3, [x29, #160]
    2da4:	mov	w3, #0x12de                	// #4830
    2da8:	add	x1, x26, x1
    2dac:	movk	w3, #0x9504, lsl #16
    2db0:	stp	x1, x2, [x29, #120]
    2db4:	str	w22, [x29, #152]
    2db8:	str	x0, [x29, #176]
    2dbc:	add	x0, x29, #0xf0
    2dc0:	str	wzr, [x29, #188]
    2dc4:	str	x0, [x29, #192]
    2dc8:	stp	x2, x1, [x29, #216]
    2dcc:	mov	x21, #0x0                   	// #0
    2dd0:	cmp	w19, w3
    2dd4:	b.eq	3194 <libintl_gettext@@Base+0xb6c>  // b.none
    2dd8:	ldp	x0, x1, [x29, #216]
    2ddc:	cmp	x21, #0x0
    2de0:	csel	x0, x0, x1, eq  // eq = none
    2de4:	ldr	w1, [x0]
    2de8:	rev	w0, w1
    2dec:	rev	w1, w1
    2df0:	add	x0, x26, x0
    2df4:	add	x25, x0, #0x4
    2df8:	ldr	w27, [x26, w1, uxtw]
    2dfc:	ldr	w0, [x0, #8]
    2e00:	rev	w27, w27
    2e04:	cmn	w0, #0x1
    2e08:	add	x27, x26, x27
    2e0c:	cset	w0, ne  // ne = any
    2e10:	mov	x22, #0x0                   	// #0
    2e14:	mov	w28, #0x1                   	// #1
    2e18:	cbnz	w0, 2ffc <libintl_gettext@@Base+0x9d4>
    2e1c:	ldr	w0, [x25]
    2e20:	cmp	w19, w3
    2e24:	b.eq	2e2c <libintl_gettext@@Base+0x804>  // b.none
    2e28:	rev	w0, w0
    2e2c:	cbz	w0, 2b54 <libintl_gettext@@Base+0x52c>
    2e30:	sub	w0, w0, #0x1
    2e34:	ldrb	w0, [x27, w0, uxtw]
    2e38:	cbnz	w0, 2b54 <libintl_gettext@@Base+0x52c>
    2e3c:	ldr	x0, [x29, #192]
    2e40:	str	x22, [x0, x21, lsl #3]
    2e44:	cbz	w28, 2e70 <libintl_gettext@@Base+0x848>
    2e48:	cbz	x21, 31c8 <libintl_gettext@@Base+0xba0>
    2e4c:	ldr	w1, [x29, #188]
    2e50:	ldr	x0, [x29, #240]
    2e54:	add	w1, w1, #0x1
    2e58:	str	w1, [x29, #188]
    2e5c:	ldr	x1, [x29, #248]
    2e60:	add	x0, x0, x1
    2e64:	ldr	x1, [x29, #168]
    2e68:	add	x0, x1, x0
    2e6c:	str	x0, [x29, #168]
    2e70:	ldp	x0, x1, [x29, #216]
    2e74:	add	x1, x1, #0x4
    2e78:	add	x0, x0, #0x4
    2e7c:	stp	x0, x1, [x29, #216]
    2e80:	ldr	x1, [x29, #176]
    2e84:	cmp	x1, x0
    2e88:	b.ne	2dcc <libintl_gettext@@Base+0x7a4>  // b.any
    2e8c:	ldr	w21, [x29, #188]
    2e90:	mov	w25, w19
    2e94:	ldr	w22, [x29, #152]
    2e98:	ldr	x24, [x29, #104]
    2e9c:	ldp	x19, x28, [x29, #136]
    2ea0:	ldr	x27, [x29, #160]
    2ea4:	cbz	w21, 2a94 <libintl_gettext@@Base+0x46c>
    2ea8:	ldr	x1, [x29, #168]
    2eac:	lsl	w0, w21, #1
    2eb0:	add	x0, x1, w0, uxtw #4
    2eb4:	bl	1db0 <malloc@plt>
    2eb8:	str	x0, [x29, #200]
    2ebc:	cbz	x0, 2b60 <libintl_gettext@@Base+0x538>
    2ec0:	ubfiz	x7, x21, #4, #32
    2ec4:	str	x0, [x27, #32]
    2ec8:	add	x1, x0, x7
    2ecc:	mov	w9, #0x12de                	// #4830
    2ed0:	add	x7, x0, x7, lsl #1
    2ed4:	str	x28, [x29, #136]
    2ed8:	ldr	x0, [x29, #112]
    2edc:	str	x27, [x29, #152]
    2ee0:	ldp	x28, x27, [x29, #120]
    2ee4:	add	x11, x7, x0
    2ee8:	stp	x24, x19, [x29, #120]
    2eec:	mov	x24, x11
    2ef0:	movk	w9, #0x9504, lsl #16
    2ef4:	str	x7, [x29, #112]
    2ef8:	str	w22, [x29, #144]
    2efc:	str	x1, [x29, #168]
    2f00:	str	wzr, [x29, #224]
    2f04:	mov	w3, #0x0                   	// #0
    2f08:	cmp	w25, w9
    2f0c:	b.eq	35b4 <libintl_gettext@@Base+0xf8c>  // b.none
    2f10:	cmp	w3, #0x0
    2f14:	csel	x0, x27, x28, eq  // eq = none
    2f18:	ldr	w0, [x0]
    2f1c:	rev	w0, w0
    2f20:	add	x0, x26, x0
    2f24:	add	x1, x0, #0x4
    2f28:	ldr	w0, [x0, #8]
    2f2c:	cmn	w0, #0x1
    2f30:	cset	w0, ne  // ne = any
    2f34:	cbnz	w0, 302c <libintl_gettext@@Base+0xa04>
    2f38:	cbz	w3, 35c0 <libintl_gettext@@Base+0xf98>
    2f3c:	ldr	x0, [x29, #224]
    2f40:	str	wzr, [x29, #216]
    2f44:	ubfiz	x21, x0, #4, #32
    2f48:	ldr	x0, [x29, #168]
    2f4c:	add	x0, x0, x21
    2f50:	str	x0, [x29, #192]
    2f54:	ldr	x0, [x29, #200]
    2f58:	add	x0, x0, x21
    2f5c:	str	x0, [x29, #160]
    2f60:	ldr	w0, [x29, #216]
    2f64:	cmp	w25, w9
    2f68:	b.eq	3630 <libintl_gettext@@Base+0x1008>  // b.none
    2f6c:	cbz	w0, 371c <libintl_gettext@@Base+0x10f4>
    2f70:	ldr	w1, [x28]
    2f74:	ldr	x21, [x29, #192]
    2f78:	rev	w1, w1
    2f7c:	add	x0, x26, x1
    2f80:	add	x22, x0, #0x4
    2f84:	ldr	w19, [x26, x1]
    2f88:	ldr	w1, [x0, #8]
    2f8c:	rev	w19, w19
    2f90:	add	x19, x26, x19
    2f94:	cmn	w1, #0x1
    2f98:	b.ne	3668 <libintl_gettext@@Base+0x1040>  // b.any
    2f9c:	ldr	w0, [x0, #4]
    2fa0:	rev	w0, w0
    2fa4:	stp	x0, x19, [x21]
    2fa8:	ldr	w0, [x29, #216]
    2fac:	cbnz	w0, 3430 <libintl_gettext@@Base+0xe08>
    2fb0:	mov	w0, #0x1                   	// #1
    2fb4:	str	w0, [x29, #216]
    2fb8:	b	2f60 <libintl_gettext@@Base+0x938>
    2fbc:	rev	w2, w2
    2fc0:	rev	w1, w1
    2fc4:	add	x22, x22, x2
    2fc8:	cmn	w1, #0x1
    2fcc:	b.eq	2e1c <libintl_gettext@@Base+0x7f4>  // b.none
    2fd0:	add	x27, x27, x2
    2fd4:	cmp	w1, w24
    2fd8:	b.cs	2b54 <libintl_gettext@@Base+0x52c>  // b.hs, b.nlast
    2fdc:	ldr	x0, [x23, w1, uxtw #3]
    2fe0:	add	x25, x25, #0x8
    2fe4:	cmp	x0, #0x0
    2fe8:	csel	w28, w28, wzr, ne  // ne = any
    2fec:	bl	1c60 <strlen@plt>
    2ff0:	add	x22, x0, x22
    2ff4:	mov	w3, #0x12de                	// #4830
    2ff8:	movk	w3, #0x9504, lsl #16
    2ffc:	ldp	w2, w1, [x25]
    3000:	cmp	w19, w3
    3004:	b.ne	2fbc <libintl_gettext@@Base+0x994>  // b.any
    3008:	add	x22, x22, x2
    300c:	b	2fc8 <libintl_gettext@@Base+0x9a0>
    3010:	mov	x1, x28
    3014:	mov	x0, x26
    3018:	bl	1fc0 <munmap@plt>
    301c:	b	2ae8 <libintl_gettext@@Base+0x4c0>
    3020:	ldr	x0, [x23, w0, uxtw #3]
    3024:	cbz	x0, 343c <libintl_gettext@@Base+0xe14>
    3028:	add	x1, x1, #0x8
    302c:	ldr	w0, [x1, #4]
    3030:	cmp	w25, w9
    3034:	rev	w2, w0
    3038:	csel	w0, w2, w0, ne  // ne = any
    303c:	cmn	w0, #0x1
    3040:	b.ne	3020 <libintl_gettext@@Base+0x9f8>  // b.any
    3044:	b	2f38 <libintl_gettext@@Base+0x910>
    3048:	add	x0, x26, x0
    304c:	b	2d1c <libintl_gettext@@Base+0x6f4>
    3050:	ldrb	w14, [x0, #1]
    3054:	mov	x2, #0x0                   	// #0
    3058:	cmp	w14, #0x52
    305c:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3060:	ldrb	w14, [x0, #2]
    3064:	cmp	w14, #0x49
    3068:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    306c:	ldrb	w14, [x0, #3]
    3070:	cmp	w14, #0x64
    3074:	and	w3, w14, #0xffffffdf
    3078:	cset	w21, eq  // eq = none
    307c:	cmp	w14, #0x69
    3080:	csinc	w21, w21, wzr, ne  // ne = any
    3084:	cmp	w14, #0x6f
    3088:	csinc	w18, w21, wzr, ne  // ne = any
    308c:	cmp	w14, #0x75
    3090:	str	w18, [x29, #176]
    3094:	csinc	w18, w18, wzr, ne  // ne = any
    3098:	str	w18, [x29, #188]
    309c:	cmp	w3, #0x58
    30a0:	ccmp	w18, #0x0, #0x0, ne  // ne = any
    30a4:	b.eq	2d4c <libintl_gettext@@Base+0x724>  // b.none
    30a8:	ldrb	w18, [x0, #4]
    30ac:	cmp	w18, #0x38
    30b0:	b.eq	33f0 <libintl_gettext@@Base+0xdc8>  // b.none
    30b4:	cmp	w18, #0x31
    30b8:	b.eq	3568 <libintl_gettext@@Base+0xf40>  // b.none
    30bc:	cmp	w18, #0x33
    30c0:	b.ne	3204 <libintl_gettext@@Base+0xbdc>  // b.any
    30c4:	ldrb	w18, [x0, #5]
    30c8:	cmp	w18, #0x32
    30cc:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    30d0:	ldrb	w0, [x0, #6]
    30d4:	cbnz	w0, 36f8 <libintl_gettext@@Base+0x10d0>
    30d8:	cmp	w14, #0x64
    30dc:	b.eq	3778 <libintl_gettext@@Base+0x1150>  // b.none
    30e0:	cbnz	w21, 3770 <libintl_gettext@@Base+0x1148>
    30e4:	ldr	w0, [x29, #176]
    30e8:	cbnz	w0, 37b8 <libintl_gettext@@Base+0x1190>
    30ec:	ldr	w0, [x29, #188]
    30f0:	cbnz	w0, 37b0 <libintl_gettext@@Base+0x1188>
    30f4:	cmp	w14, #0x78
    30f8:	b.eq	3790 <libintl_gettext@@Base+0x1168>  // b.none
    30fc:	cmp	w14, #0x58
    3100:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3104:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    3108:	add	x2, x2, #0x150
    310c:	b	2d4c <libintl_gettext@@Base+0x724>
    3110:	mov	x0, x28
    3114:	bl	1db0 <malloc@plt>
    3118:	mov	x26, x0
    311c:	cbz	x0, 2b48 <libintl_gettext@@Base+0x520>
    3120:	mov	x23, x0
    3124:	mov	x22, x28
    3128:	mov	x2, x22
    312c:	mov	x1, x23
    3130:	mov	w0, w21
    3134:	bl	1ff0 <read@plt>
    3138:	cmp	x0, #0x0
    313c:	b.le	2b28 <libintl_gettext@@Base+0x500>
    3140:	add	x23, x23, x0
    3144:	subs	x22, x22, x0
    3148:	b.ne	3128 <libintl_gettext@@Base+0xb00>  // b.any
    314c:	mov	w0, w21
    3150:	bl	1ea0 <close@plt>
    3154:	ldr	w25, [x26]
    3158:	mov	w1, #0x12de                	// #4830
    315c:	movk	w1, #0x9504, lsl #16
    3160:	mov	w0, #0x495                 	// #1173
    3164:	cmp	w25, w1
    3168:	movk	w0, #0xde12, lsl #16
    316c:	cset	w21, ne  // ne = any
    3170:	cmp	w21, #0x0
    3174:	ccmp	w25, w0, #0x4, ne  // ne = any
    3178:	b.ne	31d0 <libintl_gettext@@Base+0xba8>  // b.any
    317c:	mov	x0, #0xc8                  	// #200
    3180:	bl	1db0 <malloc@plt>
    3184:	mov	x27, x0
    3188:	cbz	x0, 31d0 <libintl_gettext@@Base+0xba8>
    318c:	mov	w22, #0x0                   	// #0
    3190:	b	2a0c <libintl_gettext@@Base+0x3e4>
    3194:	cbz	x21, 31f8 <libintl_gettext@@Base+0xbd0>
    3198:	ldr	x0, [x29, #224]
    319c:	ldr	w1, [x0]
    31a0:	add	x0, x26, x1
    31a4:	ldr	w27, [x26, x1]
    31a8:	add	x25, x0, #0x4
    31ac:	add	x27, x26, x27
    31b0:	ldr	w0, [x0, #8]
    31b4:	cmn	w0, #0x1
    31b8:	cset	w0, ne  // ne = any
    31bc:	b	2e10 <libintl_gettext@@Base+0x7e8>
    31c0:	mov	x2, #0x0                   	// #0
    31c4:	b	2d4c <libintl_gettext@@Base+0x724>
    31c8:	mov	x21, #0x1                   	// #1
    31cc:	b	2dd0 <libintl_gettext@@Base+0x7a8>
    31d0:	mov	x0, x26
    31d4:	bl	1f50 <free@plt>
    31d8:	b	2ae8 <libintl_gettext@@Base+0x4c0>
    31dc:	ldr	x0, [x20, #4064]
    31e0:	cbz	x0, 31f0 <libintl_gettext@@Base+0xbc8>
    31e4:	add	x0, x27, #0x80
    31e8:	bl	1dc0 <pthread_rwlock_destroy@plt>
    31ec:	cbnz	w0, 3b44 <libintl_gettext@@Base+0x151c>
    31f0:	ldr	x0, [x27, #32]
    31f4:	b	2b64 <libintl_gettext@@Base+0x53c>
    31f8:	ldr	x0, [x29, #216]
    31fc:	ldr	w1, [x0]
    3200:	b	31a0 <libintl_gettext@@Base+0xb78>
    3204:	cmp	w18, #0x36
    3208:	b.ne	3258 <libintl_gettext@@Base+0xc30>  // b.any
    320c:	ldrb	w18, [x0, #5]
    3210:	mov	x2, #0x0                   	// #0
    3214:	cmp	w18, #0x34
    3218:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    321c:	ldrb	w0, [x0, #6]
    3220:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    3224:	cmp	w14, #0x64
    3228:	b.eq	3788 <libintl_gettext@@Base+0x1160>  // b.none
    322c:	cbnz	w21, 3780 <libintl_gettext@@Base+0x1158>
    3230:	ldr	w0, [x29, #176]
    3234:	cbnz	w0, 37c8 <libintl_gettext@@Base+0x11a0>
    3238:	ldr	w0, [x29, #188]
    323c:	cbnz	w0, 37c0 <libintl_gettext@@Base+0x1198>
    3240:	cmp	w14, #0x78
    3244:	b.eq	37f0 <libintl_gettext@@Base+0x11c8>  // b.none
    3248:	cmp	w14, #0x58
    324c:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3250:	mov	x2, x8
    3254:	b	2d4c <libintl_gettext@@Base+0x724>
    3258:	cmp	w18, #0x4c
    325c:	b.ne	32fc <libintl_gettext@@Base+0xcd4>  // b.any
    3260:	ldrb	w18, [x0, #5]
    3264:	mov	x2, #0x0                   	// #0
    3268:	cmp	w18, #0x45
    326c:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3270:	ldrb	w18, [x0, #6]
    3274:	cmp	w18, #0x41
    3278:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    327c:	ldrb	w18, [x0, #7]
    3280:	cmp	w18, #0x53
    3284:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3288:	ldrb	w18, [x0, #8]
    328c:	cmp	w18, #0x54
    3290:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3294:	ldrb	w18, [x0, #9]
    3298:	cmp	w18, #0x38
    329c:	b.eq	38c0 <libintl_gettext@@Base+0x1298>  // b.none
    32a0:	cmp	w18, #0x31
    32a4:	b.eq	3874 <libintl_gettext@@Base+0x124c>  // b.none
    32a8:	cmp	w18, #0x33
    32ac:	b.ne	3858 <libintl_gettext@@Base+0x1230>  // b.any
    32b0:	ldrb	w18, [x0, #10]
    32b4:	cmp	w18, #0x32
    32b8:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    32bc:	ldrb	w0, [x0, #11]
    32c0:	cbnz	w0, 3850 <libintl_gettext@@Base+0x1228>
    32c4:	cmp	w14, #0x64
    32c8:	b.eq	3848 <libintl_gettext@@Base+0x1220>  // b.none
    32cc:	cbnz	w21, 3840 <libintl_gettext@@Base+0x1218>
    32d0:	ldr	w0, [x29, #176]
    32d4:	cbnz	w0, 3838 <libintl_gettext@@Base+0x1210>
    32d8:	ldr	w0, [x29, #188]
    32dc:	cbnz	w0, 3830 <libintl_gettext@@Base+0x1208>
    32e0:	cmp	w14, #0x78
    32e4:	b.eq	37f8 <libintl_gettext@@Base+0x11d0>  // b.none
    32e8:	cmp	w14, #0x58
    32ec:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    32f0:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    32f4:	add	x2, x2, #0x150
    32f8:	b	2d4c <libintl_gettext@@Base+0x724>
    32fc:	cmp	w18, #0x46
    3300:	b.ne	3390 <libintl_gettext@@Base+0xd68>  // b.any
    3304:	ldrb	w18, [x0, #5]
    3308:	mov	x2, #0x0                   	// #0
    330c:	cmp	w18, #0x41
    3310:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3314:	ldrb	w18, [x0, #6]
    3318:	cmp	w18, #0x53
    331c:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3320:	ldrb	w18, [x0, #7]
    3324:	cmp	w18, #0x54
    3328:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    332c:	ldrb	w18, [x0, #8]
    3330:	cmp	w18, #0x38
    3334:	b.eq	3a48 <libintl_gettext@@Base+0x1420>  // b.none
    3338:	cmp	w18, #0x31
    333c:	b.eq	3a00 <libintl_gettext@@Base+0x13d8>  // b.none
    3340:	cmp	w18, #0x33
    3344:	b.ne	39e4 <libintl_gettext@@Base+0x13bc>  // b.any
    3348:	ldrb	w18, [x0, #9]
    334c:	cmp	w18, #0x32
    3350:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3354:	ldrb	w0, [x0, #10]
    3358:	cbnz	w0, 39dc <libintl_gettext@@Base+0x13b4>
    335c:	cmp	w14, #0x64
    3360:	b.eq	39d4 <libintl_gettext@@Base+0x13ac>  // b.none
    3364:	cbnz	w21, 39cc <libintl_gettext@@Base+0x13a4>
    3368:	ldr	w0, [x29, #176]
    336c:	cbnz	w0, 39c4 <libintl_gettext@@Base+0x139c>
    3370:	ldr	w0, [x29, #188]
    3374:	cbnz	w0, 39bc <libintl_gettext@@Base+0x1394>
    3378:	cmp	w14, #0x78
    337c:	b.eq	37e8 <libintl_gettext@@Base+0x11c0>  // b.none
    3380:	cmp	w14, #0x58
    3384:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3388:	mov	x2, x8
    338c:	b	2d4c <libintl_gettext@@Base+0x724>
    3390:	cmp	w18, #0x4d
    3394:	b.ne	35c8 <libintl_gettext@@Base+0xfa0>  // b.any
    3398:	ldrb	w18, [x0, #5]
    339c:	mov	x2, #0x0                   	// #0
    33a0:	cmp	w18, #0x41
    33a4:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    33a8:	ldrb	w18, [x0, #6]
    33ac:	cmp	w18, #0x58
    33b0:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    33b4:	ldrb	w0, [x0, #7]
    33b8:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    33bc:	cmp	w14, #0x64
    33c0:	b.eq	37e0 <libintl_gettext@@Base+0x11b8>  // b.none
    33c4:	cbnz	w21, 37d8 <libintl_gettext@@Base+0x11b0>
    33c8:	ldr	w0, [x29, #176]
    33cc:	cbnz	w0, 37d0 <libintl_gettext@@Base+0x11a8>
    33d0:	ldr	w0, [x29, #188]
    33d4:	cbnz	w0, 37a8 <libintl_gettext@@Base+0x1180>
    33d8:	cmp	w14, #0x78
    33dc:	b.eq	37a0 <libintl_gettext@@Base+0x1178>  // b.none
    33e0:	cmp	w14, #0x58
    33e4:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    33e8:	mov	x2, x8
    33ec:	b	2d4c <libintl_gettext@@Base+0x724>
    33f0:	ldrb	w0, [x0, #5]
    33f4:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    33f8:	cmp	w14, #0x64
    33fc:	b.eq	3728 <libintl_gettext@@Base+0x1100>  // b.none
    3400:	cbnz	w21, 3730 <libintl_gettext@@Base+0x1108>
    3404:	ldr	w0, [x29, #176]
    3408:	cbnz	w0, 3738 <libintl_gettext@@Base+0x1110>
    340c:	ldr	w0, [x29, #188]
    3410:	cbnz	w0, 3768 <libintl_gettext@@Base+0x1140>
    3414:	cmp	w14, #0x78
    3418:	b.eq	3740 <libintl_gettext@@Base+0x1118>  // b.none
    341c:	cmp	w14, #0x58
    3420:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3424:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    3428:	add	x2, x2, #0x150
    342c:	b	2d4c <libintl_gettext@@Base+0x724>
    3430:	ldr	w0, [x29, #224]
    3434:	add	w0, w0, #0x1
    3438:	str	w0, [x29, #224]
    343c:	ldr	x0, [x29, #176]
    3440:	add	x27, x27, #0x4
    3444:	add	x28, x28, #0x4
    3448:	cmp	x0, x27
    344c:	b.ne	2f04 <libintl_gettext@@Base+0x8dc>  // b.any
    3450:	ldr	w0, [x29, #188]
    3454:	ldr	w1, [x29, #224]
    3458:	ldr	w22, [x29, #144]
    345c:	cmp	w0, w1
    3460:	ldp	x7, x24, [x29, #112]
    3464:	ldp	x19, x28, [x29, #128]
    3468:	ldr	x27, [x29, #152]
    346c:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3470:	ldr	w3, [x29, #232]
    3474:	mov	w8, #0x12de                	// #4830
    3478:	ldr	x4, [x29, #208]
    347c:	mov	x0, #0x0                   	// #0
    3480:	movk	w8, #0x9504, lsl #16
    3484:	ldr	w1, [x4, x0, lsl #2]
    3488:	cmp	w25, w8
    348c:	rev	w2, w1
    3490:	csel	w1, w2, w1, ne  // ne = any
    3494:	str	w1, [x7, x0, lsl #2]
    3498:	add	x0, x0, #0x1
    349c:	cmp	w3, w0
    34a0:	b.hi	3484 <libintl_gettext@@Base+0xe5c>  // b.pmore
    34a4:	ldr	x0, [x29, #200]
    34a8:	mov	w21, #0x0                   	// #0
    34ac:	mov	x25, x27
    34b0:	add	x23, x0, #0x8
    34b4:	mov	x27, x23
    34b8:	mov	w23, w21
    34bc:	mov	x21, x7
    34c0:	ldr	x0, [x27]
    34c4:	bl	28c8 <libintl_gettext@@Base+0x2a0>
    34c8:	mov	x1, x0
    34cc:	ldr	w3, [x25, #88]
    34d0:	sub	w2, w3, #0x2
    34d4:	udiv	w0, w0, w3
    34d8:	udiv	w4, w1, w2
    34dc:	msub	w0, w0, w3, w1
    34e0:	msub	w4, w4, w2, w1
    34e4:	add	x2, x21, w0, uxtw #2
    34e8:	ldr	w1, [x21, w0, uxtw #2]
    34ec:	add	w4, w4, #0x1
    34f0:	sub	w5, w3, w4
    34f4:	sub	w3, w4, w3
    34f8:	cbz	w1, 3520 <libintl_gettext@@Base+0xef8>
    34fc:	nop
    3500:	add	w2, w0, w3
    3504:	cmp	w5, w0
    3508:	add	w0, w0, w4
    350c:	csel	w1, w0, w2, hi  // hi = pmore
    3510:	csel	w0, w0, w2, hi  // hi = pmore
    3514:	add	x2, x21, x1, lsl #2
    3518:	ldr	w1, [x21, x1, lsl #2]
    351c:	cbnz	w1, 3500 <libintl_gettext@@Base+0xed8>
    3520:	ldr	w0, [x25, #40]
    3524:	add	x27, x27, #0x10
    3528:	add	w0, w0, #0x1
    352c:	add	w0, w0, w23
    3530:	str	w0, [x2]
    3534:	ldr	w0, [x29, #188]
    3538:	add	w23, w23, #0x1
    353c:	cmp	w0, w23
    3540:	b.ne	34c0 <libintl_gettext@@Base+0xe98>  // b.any
    3544:	str	w0, [x25, #64]
    3548:	mov	x27, x25
    354c:	ldr	x0, [x29, #200]
    3550:	str	x0, [x25, #72]
    3554:	ldr	x0, [x29, #168]
    3558:	str	x0, [x25, #80]
    355c:	str	x21, [x25, #96]
    3560:	str	wzr, [x25, #104]
    3564:	b	2a9c <libintl_gettext@@Base+0x474>
    3568:	ldrb	w18, [x0, #5]
    356c:	cmp	w18, #0x36
    3570:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3574:	ldrb	w0, [x0, #6]
    3578:	cbnz	w0, 3660 <libintl_gettext@@Base+0x1038>
    357c:	cmp	w14, #0x64
    3580:	b.eq	3758 <libintl_gettext@@Base+0x1130>  // b.none
    3584:	cbnz	w21, 3750 <libintl_gettext@@Base+0x1128>
    3588:	ldr	w0, [x29, #176]
    358c:	cbnz	w0, 3748 <libintl_gettext@@Base+0x1120>
    3590:	ldr	w0, [x29, #188]
    3594:	cbnz	w0, 3798 <libintl_gettext@@Base+0x1170>
    3598:	cmp	w14, #0x78
    359c:	b.eq	3760 <libintl_gettext@@Base+0x1138>  // b.none
    35a0:	cmp	w14, #0x58
    35a4:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    35a8:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    35ac:	add	x2, x2, #0x150
    35b0:	b	2d4c <libintl_gettext@@Base+0x724>
    35b4:	cbz	w3, 3628 <libintl_gettext@@Base+0x1000>
    35b8:	ldr	w0, [x28]
    35bc:	b	2f20 <libintl_gettext@@Base+0x8f8>
    35c0:	mov	w3, #0x1                   	// #1
    35c4:	b	2f08 <libintl_gettext@@Base+0x8e0>
    35c8:	cmp	w18, #0x50
    35cc:	b.ne	3828 <libintl_gettext@@Base+0x1200>  // b.any
    35d0:	ldrb	w18, [x0, #5]
    35d4:	mov	x2, #0x0                   	// #0
    35d8:	cmp	w18, #0x54
    35dc:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    35e0:	ldrb	w18, [x0, #6]
    35e4:	cmp	w18, #0x52
    35e8:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    35ec:	ldrb	w0, [x0, #7]
    35f0:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    35f4:	cmp	w14, #0x64
    35f8:	b.eq	3820 <libintl_gettext@@Base+0x11f8>  // b.none
    35fc:	cbnz	w21, 3818 <libintl_gettext@@Base+0x11f0>
    3600:	ldr	w0, [x29, #176]
    3604:	cbnz	w0, 3810 <libintl_gettext@@Base+0x11e8>
    3608:	ldr	w0, [x29, #188]
    360c:	cbnz	w0, 3808 <libintl_gettext@@Base+0x11e0>
    3610:	cmp	w14, #0x78
    3614:	b.eq	3800 <libintl_gettext@@Base+0x11d8>  // b.none
    3618:	cmp	w14, #0x58
    361c:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3620:	mov	x2, x8
    3624:	b	2d4c <libintl_gettext@@Base+0x724>
    3628:	ldr	w0, [x27]
    362c:	b	2f20 <libintl_gettext@@Base+0x8f8>
    3630:	cbz	w0, 3700 <libintl_gettext@@Base+0x10d8>
    3634:	ldr	w1, [x28]
    3638:	ldr	x21, [x29, #192]
    363c:	add	x0, x26, x1
    3640:	add	x22, x0, #0x4
    3644:	ldr	w19, [x26, x1]
    3648:	add	x19, x26, x19
    364c:	ldr	w1, [x0, #8]
    3650:	cmn	w1, #0x1
    3654:	b.ne	3668 <libintl_gettext@@Base+0x1040>  // b.any
    3658:	ldr	w0, [x0, #4]
    365c:	b	2fa4 <libintl_gettext@@Base+0x97c>
    3660:	mov	x2, #0x0                   	// #0
    3664:	b	2d4c <libintl_gettext@@Base+0x724>
    3668:	str	x24, [x21, #8]
    366c:	str	x21, [x29, #104]
    3670:	ldp	w0, w21, [x22]
    3674:	cmp	w25, w9
    3678:	b.eq	3684 <libintl_gettext@@Base+0x105c>  // b.none
    367c:	rev	w0, w0
    3680:	rev	w21, w21
    3684:	cbnz	w0, 36c0 <libintl_gettext@@Base+0x1098>
    3688:	cmn	w21, #0x1
    368c:	b.eq	36e4 <libintl_gettext@@Base+0x10bc>  // b.none
    3690:	ldr	x21, [x23, w21, uxtw #3]
    3694:	add	x22, x22, #0x8
    3698:	mov	x0, x21
    369c:	bl	1c60 <strlen@plt>
    36a0:	mov	x2, x0
    36a4:	mov	x1, x21
    36a8:	mov	x0, x24
    36ac:	add	x24, x24, x2
    36b0:	bl	1c10 <memcpy@plt>
    36b4:	mov	w9, #0x12de                	// #4830
    36b8:	movk	w9, #0x9504, lsl #16
    36bc:	b	3670 <libintl_gettext@@Base+0x1048>
    36c0:	mov	w2, w0
    36c4:	mov	x1, x19
    36c8:	mov	x0, x24
    36cc:	add	x19, x19, x2
    36d0:	add	x24, x24, x2
    36d4:	bl	1c10 <memcpy@plt>
    36d8:	mov	w9, #0x12de                	// #4830
    36dc:	movk	w9, #0x9504, lsl #16
    36e0:	b	3688 <libintl_gettext@@Base+0x1060>
    36e4:	ldr	x21, [x29, #104]
    36e8:	ldr	x0, [x21, #8]
    36ec:	sub	x0, x24, x0
    36f0:	str	x0, [x21]
    36f4:	b	2fa8 <libintl_gettext@@Base+0x980>
    36f8:	mov	x2, #0x0                   	// #0
    36fc:	b	2d4c <libintl_gettext@@Base+0x724>
    3700:	ldr	w1, [x27]
    3704:	ldr	x21, [x29, #160]
    3708:	add	x0, x26, x1
    370c:	add	x22, x0, #0x4
    3710:	ldr	w19, [x26, x1]
    3714:	add	x19, x26, x19
    3718:	b	364c <libintl_gettext@@Base+0x1024>
    371c:	ldr	w1, [x27]
    3720:	ldr	x21, [x29, #160]
    3724:	b	2f78 <libintl_gettext@@Base+0x950>
    3728:	mov	x2, x6
    372c:	b	2d4c <libintl_gettext@@Base+0x724>
    3730:	mov	x2, x5
    3734:	b	2d4c <libintl_gettext@@Base+0x724>
    3738:	mov	x2, x30
    373c:	b	2d4c <libintl_gettext@@Base+0x724>
    3740:	ldr	x2, [x29, #192]
    3744:	b	2d4c <libintl_gettext@@Base+0x724>
    3748:	mov	x2, x30
    374c:	b	2d4c <libintl_gettext@@Base+0x724>
    3750:	mov	x2, x5
    3754:	b	2d4c <libintl_gettext@@Base+0x724>
    3758:	mov	x2, x6
    375c:	b	2d4c <libintl_gettext@@Base+0x724>
    3760:	ldr	x2, [x29, #192]
    3764:	b	2d4c <libintl_gettext@@Base+0x724>
    3768:	mov	x2, x4
    376c:	b	2d4c <libintl_gettext@@Base+0x724>
    3770:	mov	x2, x5
    3774:	b	2d4c <libintl_gettext@@Base+0x724>
    3778:	mov	x2, x6
    377c:	b	2d4c <libintl_gettext@@Base+0x724>
    3780:	mov	x2, x17
    3784:	b	2d4c <libintl_gettext@@Base+0x724>
    3788:	ldr	x2, [x29, #216]
    378c:	b	2d4c <libintl_gettext@@Base+0x724>
    3790:	ldr	x2, [x29, #192]
    3794:	b	2d4c <libintl_gettext@@Base+0x724>
    3798:	mov	x2, x4
    379c:	b	2d4c <libintl_gettext@@Base+0x724>
    37a0:	ldr	x2, [x29, #224]
    37a4:	b	2d4c <libintl_gettext@@Base+0x724>
    37a8:	mov	x2, x15
    37ac:	b	2d4c <libintl_gettext@@Base+0x724>
    37b0:	mov	x2, x4
    37b4:	b	2d4c <libintl_gettext@@Base+0x724>
    37b8:	mov	x2, x30
    37bc:	b	2d4c <libintl_gettext@@Base+0x724>
    37c0:	mov	x2, x15
    37c4:	b	2d4c <libintl_gettext@@Base+0x724>
    37c8:	mov	x2, x16
    37cc:	b	2d4c <libintl_gettext@@Base+0x724>
    37d0:	mov	x2, x16
    37d4:	b	2d4c <libintl_gettext@@Base+0x724>
    37d8:	mov	x2, x17
    37dc:	b	2d4c <libintl_gettext@@Base+0x724>
    37e0:	ldr	x2, [x29, #216]
    37e4:	b	2d4c <libintl_gettext@@Base+0x724>
    37e8:	ldr	x2, [x29, #224]
    37ec:	b	2d4c <libintl_gettext@@Base+0x724>
    37f0:	ldr	x2, [x29, #224]
    37f4:	b	2d4c <libintl_gettext@@Base+0x724>
    37f8:	ldr	x2, [x29, #192]
    37fc:	b	2d4c <libintl_gettext@@Base+0x724>
    3800:	ldr	x2, [x29, #224]
    3804:	b	2d4c <libintl_gettext@@Base+0x724>
    3808:	mov	x2, x15
    380c:	b	2d4c <libintl_gettext@@Base+0x724>
    3810:	mov	x2, x16
    3814:	b	2d4c <libintl_gettext@@Base+0x724>
    3818:	mov	x2, x17
    381c:	b	2d4c <libintl_gettext@@Base+0x724>
    3820:	ldr	x2, [x29, #216]
    3824:	b	2d4c <libintl_gettext@@Base+0x724>
    3828:	mov	x2, #0x0                   	// #0
    382c:	b	2d4c <libintl_gettext@@Base+0x724>
    3830:	mov	x2, x4
    3834:	b	2d4c <libintl_gettext@@Base+0x724>
    3838:	mov	x2, x30
    383c:	b	2d4c <libintl_gettext@@Base+0x724>
    3840:	mov	x2, x5
    3844:	b	2d4c <libintl_gettext@@Base+0x724>
    3848:	mov	x2, x6
    384c:	b	2d4c <libintl_gettext@@Base+0x724>
    3850:	mov	x2, #0x0                   	// #0
    3854:	b	2d4c <libintl_gettext@@Base+0x724>
    3858:	cmp	w18, #0x36
    385c:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3860:	ldrb	w2, [x0, #10]
    3864:	cmp	w2, #0x34
    3868:	b.eq	3900 <libintl_gettext@@Base+0x12d8>  // b.none
    386c:	mov	x2, #0x0                   	// #0
    3870:	b	2d4c <libintl_gettext@@Base+0x724>
    3874:	ldrb	w18, [x0, #10]
    3878:	cmp	w18, #0x36
    387c:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3880:	ldrb	w0, [x0, #11]
    3884:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    3888:	cmp	w14, #0x64
    388c:	b.eq	39b4 <libintl_gettext@@Base+0x138c>  // b.none
    3890:	cbnz	w21, 39ac <libintl_gettext@@Base+0x1384>
    3894:	ldr	w0, [x29, #176]
    3898:	cbnz	w0, 39a4 <libintl_gettext@@Base+0x137c>
    389c:	ldr	w0, [x29, #188]
    38a0:	cbnz	w0, 399c <libintl_gettext@@Base+0x1374>
    38a4:	cmp	w14, #0x78
    38a8:	b.eq	393c <libintl_gettext@@Base+0x1314>  // b.none
    38ac:	cmp	w14, #0x58
    38b0:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    38b4:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    38b8:	add	x2, x2, #0x150
    38bc:	b	2d4c <libintl_gettext@@Base+0x724>
    38c0:	ldrb	w0, [x0, #10]
    38c4:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    38c8:	cmp	w14, #0x64
    38cc:	b.eq	3994 <libintl_gettext@@Base+0x136c>  // b.none
    38d0:	cbnz	w21, 398c <libintl_gettext@@Base+0x1364>
    38d4:	ldr	w0, [x29, #176]
    38d8:	cbnz	w0, 3984 <libintl_gettext@@Base+0x135c>
    38dc:	ldr	w0, [x29, #188]
    38e0:	cbnz	w0, 397c <libintl_gettext@@Base+0x1354>
    38e4:	cmp	w14, #0x78
    38e8:	b.eq	3944 <libintl_gettext@@Base+0x131c>  // b.none
    38ec:	cmp	w14, #0x58
    38f0:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    38f4:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    38f8:	add	x2, x2, #0x150
    38fc:	b	2d4c <libintl_gettext@@Base+0x724>
    3900:	ldrb	w0, [x0, #11]
    3904:	cbnz	w0, 3974 <libintl_gettext@@Base+0x134c>
    3908:	cmp	w14, #0x64
    390c:	b.eq	396c <libintl_gettext@@Base+0x1344>  // b.none
    3910:	cbnz	w21, 3964 <libintl_gettext@@Base+0x133c>
    3914:	ldr	w0, [x29, #176]
    3918:	cbnz	w0, 395c <libintl_gettext@@Base+0x1334>
    391c:	ldr	w0, [x29, #188]
    3920:	cbnz	w0, 3954 <libintl_gettext@@Base+0x132c>
    3924:	cmp	w14, #0x78
    3928:	b.eq	394c <libintl_gettext@@Base+0x1324>  // b.none
    392c:	cmp	w14, #0x58
    3930:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3934:	mov	x2, x8
    3938:	b	2d4c <libintl_gettext@@Base+0x724>
    393c:	ldr	x2, [x29, #192]
    3940:	b	2d4c <libintl_gettext@@Base+0x724>
    3944:	ldr	x2, [x29, #192]
    3948:	b	2d4c <libintl_gettext@@Base+0x724>
    394c:	ldr	x2, [x29, #224]
    3950:	b	2d4c <libintl_gettext@@Base+0x724>
    3954:	mov	x2, x15
    3958:	b	2d4c <libintl_gettext@@Base+0x724>
    395c:	mov	x2, x16
    3960:	b	2d4c <libintl_gettext@@Base+0x724>
    3964:	mov	x2, x17
    3968:	b	2d4c <libintl_gettext@@Base+0x724>
    396c:	ldr	x2, [x29, #216]
    3970:	b	2d4c <libintl_gettext@@Base+0x724>
    3974:	mov	x2, #0x0                   	// #0
    3978:	b	2d4c <libintl_gettext@@Base+0x724>
    397c:	mov	x2, x4
    3980:	b	2d4c <libintl_gettext@@Base+0x724>
    3984:	mov	x2, x30
    3988:	b	2d4c <libintl_gettext@@Base+0x724>
    398c:	mov	x2, x5
    3990:	b	2d4c <libintl_gettext@@Base+0x724>
    3994:	mov	x2, x6
    3998:	b	2d4c <libintl_gettext@@Base+0x724>
    399c:	mov	x2, x4
    39a0:	b	2d4c <libintl_gettext@@Base+0x724>
    39a4:	mov	x2, x30
    39a8:	b	2d4c <libintl_gettext@@Base+0x724>
    39ac:	mov	x2, x5
    39b0:	b	2d4c <libintl_gettext@@Base+0x724>
    39b4:	mov	x2, x6
    39b8:	b	2d4c <libintl_gettext@@Base+0x724>
    39bc:	mov	x2, x15
    39c0:	b	2d4c <libintl_gettext@@Base+0x724>
    39c4:	mov	x2, x16
    39c8:	b	2d4c <libintl_gettext@@Base+0x724>
    39cc:	mov	x2, x17
    39d0:	b	2d4c <libintl_gettext@@Base+0x724>
    39d4:	ldr	x2, [x29, #216]
    39d8:	b	2d4c <libintl_gettext@@Base+0x724>
    39dc:	mov	x2, #0x0                   	// #0
    39e0:	b	2d4c <libintl_gettext@@Base+0x724>
    39e4:	cmp	w18, #0x36
    39e8:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    39ec:	ldrb	w2, [x0, #9]
    39f0:	cmp	w2, #0x34
    39f4:	b.eq	3a88 <libintl_gettext@@Base+0x1460>  // b.none
    39f8:	mov	x2, #0x0                   	// #0
    39fc:	b	2d4c <libintl_gettext@@Base+0x724>
    3a00:	ldrb	w18, [x0, #9]
    3a04:	cmp	w18, #0x36
    3a08:	b.ne	2d4c <libintl_gettext@@Base+0x724>  // b.any
    3a0c:	ldrb	w0, [x0, #10]
    3a10:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    3a14:	cmp	w14, #0x64
    3a18:	b.eq	3b3c <libintl_gettext@@Base+0x1514>  // b.none
    3a1c:	cbnz	w21, 3b34 <libintl_gettext@@Base+0x150c>
    3a20:	ldr	w0, [x29, #176]
    3a24:	cbnz	w0, 3b2c <libintl_gettext@@Base+0x1504>
    3a28:	ldr	w0, [x29, #188]
    3a2c:	cbnz	w0, 3b24 <libintl_gettext@@Base+0x14fc>
    3a30:	cmp	w14, #0x78
    3a34:	b.eq	3ac4 <libintl_gettext@@Base+0x149c>  // b.none
    3a38:	cmp	w14, #0x58
    3a3c:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3a40:	mov	x2, x8
    3a44:	b	2d4c <libintl_gettext@@Base+0x724>
    3a48:	ldrb	w0, [x0, #9]
    3a4c:	cbnz	w0, 2d4c <libintl_gettext@@Base+0x724>
    3a50:	cmp	w14, #0x64
    3a54:	b.eq	3b1c <libintl_gettext@@Base+0x14f4>  // b.none
    3a58:	cbnz	w21, 3b14 <libintl_gettext@@Base+0x14ec>
    3a5c:	ldr	w0, [x29, #176]
    3a60:	cbnz	w0, 3b0c <libintl_gettext@@Base+0x14e4>
    3a64:	ldr	w0, [x29, #188]
    3a68:	cbnz	w0, 3b04 <libintl_gettext@@Base+0x14dc>
    3a6c:	cmp	w14, #0x78
    3a70:	b.eq	3acc <libintl_gettext@@Base+0x14a4>  // b.none
    3a74:	cmp	w14, #0x58
    3a78:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3a7c:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    3a80:	add	x2, x2, #0x150
    3a84:	b	2d4c <libintl_gettext@@Base+0x724>
    3a88:	ldrb	w0, [x0, #10]
    3a8c:	cbnz	w0, 3afc <libintl_gettext@@Base+0x14d4>
    3a90:	cmp	w14, #0x64
    3a94:	b.eq	3af4 <libintl_gettext@@Base+0x14cc>  // b.none
    3a98:	cbnz	w21, 3aec <libintl_gettext@@Base+0x14c4>
    3a9c:	ldr	w0, [x29, #176]
    3aa0:	cbnz	w0, 3ae4 <libintl_gettext@@Base+0x14bc>
    3aa4:	ldr	w0, [x29, #188]
    3aa8:	cbnz	w0, 3adc <libintl_gettext@@Base+0x14b4>
    3aac:	cmp	w14, #0x78
    3ab0:	b.eq	3ad4 <libintl_gettext@@Base+0x14ac>  // b.none
    3ab4:	cmp	w14, #0x58
    3ab8:	b.ne	3b44 <libintl_gettext@@Base+0x151c>  // b.any
    3abc:	mov	x2, x8
    3ac0:	b	2d4c <libintl_gettext@@Base+0x724>
    3ac4:	ldr	x2, [x29, #224]
    3ac8:	b	2d4c <libintl_gettext@@Base+0x724>
    3acc:	ldr	x2, [x29, #192]
    3ad0:	b	2d4c <libintl_gettext@@Base+0x724>
    3ad4:	ldr	x2, [x29, #224]
    3ad8:	b	2d4c <libintl_gettext@@Base+0x724>
    3adc:	mov	x2, x15
    3ae0:	b	2d4c <libintl_gettext@@Base+0x724>
    3ae4:	mov	x2, x16
    3ae8:	b	2d4c <libintl_gettext@@Base+0x724>
    3aec:	mov	x2, x17
    3af0:	b	2d4c <libintl_gettext@@Base+0x724>
    3af4:	ldr	x2, [x29, #216]
    3af8:	b	2d4c <libintl_gettext@@Base+0x724>
    3afc:	mov	x2, #0x0                   	// #0
    3b00:	b	2d4c <libintl_gettext@@Base+0x724>
    3b04:	mov	x2, x4
    3b08:	b	2d4c <libintl_gettext@@Base+0x724>
    3b0c:	mov	x2, x30
    3b10:	b	2d4c <libintl_gettext@@Base+0x724>
    3b14:	mov	x2, x5
    3b18:	b	2d4c <libintl_gettext@@Base+0x724>
    3b1c:	mov	x2, x6
    3b20:	b	2d4c <libintl_gettext@@Base+0x724>
    3b24:	mov	x2, x15
    3b28:	b	2d4c <libintl_gettext@@Base+0x724>
    3b2c:	mov	x2, x16
    3b30:	b	2d4c <libintl_gettext@@Base+0x724>
    3b34:	mov	x2, x17
    3b38:	b	2d4c <libintl_gettext@@Base+0x724>
    3b3c:	ldr	x2, [x29, #216]
    3b40:	b	2d4c <libintl_gettext@@Base+0x724>
    3b44:	bl	1ec0 <abort@plt>
    3b48:	ldr	x0, [x0]
    3b4c:	ldr	x1, [x1]
    3b50:	b	1e60 <strcasecmp@plt>
    3b54:	nop
    3b58:	sub	sp, sp, #0x230
    3b5c:	sxtw	x2, w1
    3b60:	mov	x1, x0
    3b64:	add	x0, x2, #0x1d
    3b68:	and	x0, x0, #0xfffffffffffffff0
    3b6c:	stp	x29, x30, [sp]
    3b70:	mov	x29, sp
    3b74:	stp	x19, x20, [sp, #16]
    3b78:	stp	x21, x22, [sp, #32]
    3b7c:	stp	x23, x24, [sp, #48]
    3b80:	mov	x24, #0x0                   	// #0
    3b84:	stp	x25, x26, [sp, #64]
    3b88:	stp	x27, x28, [sp, #80]
    3b8c:	sub	sp, sp, x0
    3b90:	mov	x19, sp
    3b94:	mov	x0, x19
    3b98:	bl	1f70 <mempcpy@plt>
    3b9c:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    3ba0:	add	x3, x3, #0x170
    3ba4:	mov	x2, x0
    3ba8:	add	x1, x29, #0x98
    3bac:	mov	x0, x19
    3bb0:	ldr	x4, [x3]
    3bb4:	str	x4, [x2]
    3bb8:	ldur	x3, [x3, #6]
    3bbc:	stur	x3, [x2, #6]
    3bc0:	bl	6a58 <libintl_set_relocation_prefix@@Base+0x1d8>
    3bc4:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    3bc8:	add	x1, x1, #0x168
    3bcc:	bl	1da0 <fopen@plt>
    3bd0:	mov	x22, x0
    3bd4:	ldr	x0, [x29, #152]
    3bd8:	bl	1f50 <free@plt>
    3bdc:	cbz	x22, 3c74 <libintl_gettext@@Base+0x164c>
    3be0:	mov	x0, x22
    3be4:	mov	w1, #0x2                   	// #2
    3be8:	bl	2050 <__fsetlocking@plt>
    3bec:	adrp	x23, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    3bf0:	ldr	w0, [x22]
    3bf4:	add	x23, x23, #0x368
    3bf8:	add	x20, x29, #0xa0
    3bfc:	mov	x24, #0x0                   	// #0
    3c00:	tbnz	w0, #4, 3edc <libintl_gettext@@Base+0x18b4>
    3c04:	nop
    3c08:	mov	x2, x22
    3c0c:	mov	x0, x20
    3c10:	mov	w1, #0x190                 	// #400
    3c14:	bl	1ce0 <fgets_unlocked@plt>
    3c18:	cbz	x0, 3c68 <libintl_gettext@@Base+0x1640>
    3c1c:	mov	w1, #0xa                   	// #10
    3c20:	mov	x0, x20
    3c24:	bl	1fa0 <strchr@plt>
    3c28:	mov	x19, x20
    3c2c:	mov	x21, x0
    3c30:	bl	1f20 <__ctype_b_loc@plt>
    3c34:	ldr	x0, [x0]
    3c38:	b	3c40 <libintl_gettext@@Base+0x1618>
    3c3c:	add	x19, x19, #0x1
    3c40:	ldrb	w1, [x19]
    3c44:	ubfiz	x2, x1, #1, #8
    3c48:	ldrh	w2, [x0, x2]
    3c4c:	tbnz	w2, #13, 3c3c <libintl_gettext@@Base+0x1614>
    3c50:	cmp	w1, #0x23
    3c54:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    3c58:	b.ne	3cc4 <libintl_gettext@@Base+0x169c>  // b.any
    3c5c:	cbz	x21, 3cac <libintl_gettext@@Base+0x1684>
    3c60:	ldr	w0, [x22]
    3c64:	tbz	w0, #4, 3c08 <libintl_gettext@@Base+0x15e0>
    3c68:	mov	x0, x22
    3c6c:	bl	1d80 <fclose@plt>
    3c70:	cbnz	x24, 3e48 <libintl_gettext@@Base+0x1820>
    3c74:	mov	sp, x29
    3c78:	mov	x0, x24
    3c7c:	ldp	x29, x30, [sp]
    3c80:	ldp	x19, x20, [sp, #16]
    3c84:	ldp	x21, x22, [sp, #32]
    3c88:	ldp	x23, x24, [sp, #48]
    3c8c:	ldp	x25, x26, [sp, #64]
    3c90:	ldp	x27, x28, [sp, #80]
    3c94:	add	sp, sp, #0x230
    3c98:	ret
    3c9c:	mov	x0, x20
    3ca0:	mov	w1, #0xa                   	// #10
    3ca4:	bl	1fa0 <strchr@plt>
    3ca8:	cbnz	x0, 3c60 <libintl_gettext@@Base+0x1638>
    3cac:	mov	x2, x22
    3cb0:	mov	x0, x20
    3cb4:	mov	w1, #0x190                 	// #400
    3cb8:	bl	1ce0 <fgets_unlocked@plt>
    3cbc:	cbnz	x0, 3c9c <libintl_gettext@@Base+0x1674>
    3cc0:	b	3c60 <libintl_gettext@@Base+0x1638>
    3cc4:	ldrb	w1, [x19, #1]
    3cc8:	add	x26, x19, #0x1
    3ccc:	cbnz	w1, 3cd8 <libintl_gettext@@Base+0x16b0>
    3cd0:	b	3d04 <libintl_gettext@@Base+0x16dc>
    3cd4:	cbz	w1, 3d04 <libintl_gettext@@Base+0x16dc>
    3cd8:	ubfiz	x2, x1, #1, #8
    3cdc:	mov	x3, x26
    3ce0:	ldrb	w1, [x26, #1]
    3ce4:	add	x26, x26, #0x1
    3ce8:	ldrh	w2, [x0, x2]
    3cec:	tbz	w2, #13, 3cd4 <libintl_gettext@@Base+0x16ac>
    3cf0:	ubfiz	x2, x1, #1, #8
    3cf4:	strb	wzr, [x3]
    3cf8:	ldrh	w2, [x0, x2]
    3cfc:	tbz	w2, #13, 3d10 <libintl_gettext@@Base+0x16e8>
    3d00:	ldrb	w1, [x26, #1]!
    3d04:	ubfiz	x2, x1, #1, #8
    3d08:	ldrh	w2, [x0, x2]
    3d0c:	tbnz	w2, #13, 3d00 <libintl_gettext@@Base+0x16d8>
    3d10:	cbz	w1, 3c5c <libintl_gettext@@Base+0x1634>
    3d14:	ldrb	w1, [x26, #1]
    3d18:	add	x2, x26, #0x1
    3d1c:	cbnz	w1, 3d2c <libintl_gettext@@Base+0x1704>
    3d20:	b	3d48 <libintl_gettext@@Base+0x1720>
    3d24:	ldrb	w1, [x2, #1]!
    3d28:	cbz	w1, 3d48 <libintl_gettext@@Base+0x1720>
    3d2c:	ubfiz	x3, x1, #1, #8
    3d30:	ldrh	w3, [x0, x3]
    3d34:	tbz	w3, #13, 3d24 <libintl_gettext@@Base+0x16fc>
    3d38:	cmp	w1, #0xa
    3d3c:	b.ne	3e8c <libintl_gettext@@Base+0x1864>  // b.any
    3d40:	mov	w0, #0xa00                 	// #2560
    3d44:	strh	w0, [x2]
    3d48:	ldp	x27, x0, [x23]
    3d4c:	cmp	x27, x0
    3d50:	b.cs	3e6c <libintl_gettext@@Base+0x1844>  // b.hs, b.nlast
    3d54:	mov	x0, x19
    3d58:	bl	1c60 <strlen@plt>
    3d5c:	mov	x2, x0
    3d60:	mov	x0, x26
    3d64:	add	x2, x2, #0x1
    3d68:	str	x2, [x29, #136]
    3d6c:	bl	1c60 <strlen@plt>
    3d70:	add	x28, x0, #0x1
    3d74:	ldp	x9, x1, [x23, #24]
    3d78:	ldr	x2, [x29, #136]
    3d7c:	ldr	x4, [x23, #40]
    3d80:	add	x8, x9, x2
    3d84:	add	x25, x8, x28
    3d88:	cmp	x25, x1
    3d8c:	b.ls	3de4 <libintl_gettext@@Base+0x17bc>  // b.plast
    3d90:	add	x3, x2, x28
    3d94:	mov	x5, #0x400                 	// #1024
    3d98:	cmp	x3, x5
    3d9c:	mov	x0, x4
    3da0:	csel	x3, x3, x5, cs  // cs = hs, nlast
    3da4:	stp	x8, x9, [x29, #104]
    3da8:	add	x1, x3, x1
    3dac:	stp	x2, x4, [x29, #120]
    3db0:	str	x1, [x29, #136]
    3db4:	bl	1e70 <realloc@plt>
    3db8:	mov	x3, x0
    3dbc:	cbz	x0, 3c68 <libintl_gettext@@Base+0x1640>
    3dc0:	ldp	x2, x4, [x29, #120]
    3dc4:	ldr	x6, [x23, #16]
    3dc8:	ldp	x8, x9, [x29, #104]
    3dcc:	cmp	x0, x4
    3dd0:	ldr	x1, [x29, #136]
    3dd4:	b.ne	3ea0 <libintl_gettext@@Base+0x1878>  // b.any
    3dd8:	lsl	x5, x27, #4
    3ddc:	stp	x1, x3, [x23, #32]
    3de0:	b	3df0 <libintl_gettext@@Base+0x17c8>
    3de4:	ldr	x6, [x23, #16]
    3de8:	mov	x3, x4
    3dec:	lsl	x5, x27, #4
    3df0:	add	x4, x6, x5
    3df4:	add	x0, x3, x9
    3df8:	mov	x1, x19
    3dfc:	stp	x8, x5, [x29, #104]
    3e00:	add	x27, x27, #0x1
    3e04:	stp	x6, x4, [x29, #120]
    3e08:	add	x24, x24, #0x1
    3e0c:	str	x3, [x29, #136]
    3e10:	bl	1c10 <memcpy@plt>
    3e14:	ldp	x8, x5, [x29, #104]
    3e18:	mov	x2, x28
    3e1c:	ldr	x6, [x29, #120]
    3e20:	mov	x1, x26
    3e24:	ldr	x3, [x29, #136]
    3e28:	str	x0, [x6, x5]
    3e2c:	add	x0, x3, x8
    3e30:	bl	1c10 <memcpy@plt>
    3e34:	str	x27, [x23]
    3e38:	ldr	x4, [x29, #128]
    3e3c:	str	x25, [x23, #24]
    3e40:	str	x0, [x4, #8]
    3e44:	b	3c5c <libintl_gettext@@Base+0x1634>
    3e48:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    3e4c:	add	x4, x0, #0x368
    3e50:	adrp	x3, 3000 <libintl_gettext@@Base+0x9d8>
    3e54:	mov	x2, #0x10                  	// #16
    3e58:	ldr	x1, [x0, #872]
    3e5c:	add	x3, x3, #0xb48
    3e60:	ldr	x0, [x4, #16]
    3e64:	bl	1d20 <qsort@plt>
    3e68:	b	3c74 <libintl_gettext@@Base+0x164c>
    3e6c:	cbnz	x0, 3e94 <libintl_gettext@@Base+0x186c>
    3e70:	mov	x1, #0x640                 	// #1600
    3e74:	mov	x28, #0x64                  	// #100
    3e78:	ldr	x0, [x23, #16]
    3e7c:	bl	1e70 <realloc@plt>
    3e80:	cbz	x0, 3c68 <libintl_gettext@@Base+0x1640>
    3e84:	stp	x28, x0, [x23, #8]
    3e88:	b	3d54 <libintl_gettext@@Base+0x172c>
    3e8c:	strb	wzr, [x2]
    3e90:	b	3d48 <libintl_gettext@@Base+0x1720>
    3e94:	lsl	x28, x0, #1
    3e98:	lsl	x1, x0, #5
    3e9c:	b	3e78 <libintl_gettext@@Base+0x1850>
    3ea0:	mov	x5, #0x0                   	// #0
    3ea4:	cbz	x27, 3ddc <libintl_gettext@@Base+0x17b4>
    3ea8:	lsl	x5, x27, #4
    3eac:	sub	x4, x0, x4
    3eb0:	add	x12, x6, x5
    3eb4:	mov	x0, x6
    3eb8:	ldp	x11, x10, [x0]
    3ebc:	add	x11, x11, x4
    3ec0:	add	x10, x10, x4
    3ec4:	stp	x11, x10, [x0]
    3ec8:	add	x0, x0, #0x10
    3ecc:	cmp	x12, x0
    3ed0:	b.ne	3eb8 <libintl_gettext@@Base+0x1890>  // b.any
    3ed4:	stp	x1, x3, [x23, #32]
    3ed8:	b	3df0 <libintl_gettext@@Base+0x17c8>
    3edc:	mov	x0, x22
    3ee0:	bl	1d80 <fclose@plt>
    3ee4:	b	3c74 <libintl_gettext@@Base+0x164c>

0000000000003ee8 <_nl_expand_alias@@Base>:
    3ee8:	stp	x29, x30, [sp, #-80]!
    3eec:	mov	x29, sp
    3ef0:	stp	x21, x22, [sp, #32]
    3ef4:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    3ef8:	stp	x19, x20, [sp, #16]
    3efc:	mov	x20, x0
    3f00:	adrp	x19, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    3f04:	ldr	x0, [x21, #4064]
    3f08:	stp	x23, x24, [sp, #48]
    3f0c:	stp	x25, x26, [sp, #64]
    3f10:	cbz	x0, 3f24 <_nl_expand_alias@@Base+0x3c>
    3f14:	add	x0, x19, #0x368
    3f18:	add	x0, x0, #0x30
    3f1c:	bl	2090 <pthread_mutex_lock@plt>
    3f20:	cbnz	w0, 4080 <_nl_expand_alias@@Base+0x198>
    3f24:	add	x1, x19, #0x368
    3f28:	ldr	x0, [x1, #96]
    3f2c:	cbz	x0, 4068 <_nl_expand_alias@@Base+0x180>
    3f30:	ldr	x23, [x19, #872]
    3f34:	add	x0, x19, #0x368
    3f38:	cbnz	x23, 400c <_nl_expand_alias@@Base+0x124>
    3f3c:	add	x22, x19, #0x368
    3f40:	ldr	x3, [x22, #96]
    3f44:	mov	w1, #0x0                   	// #0
    3f48:	ldrb	w0, [x3]
    3f4c:	cbz	w0, 3fa0 <_nl_expand_alias@@Base+0xb8>
    3f50:	cmp	w0, #0x3a
    3f54:	add	x1, x3, #0x1
    3f58:	b.ne	4058 <_nl_expand_alias@@Base+0x170>  // b.any
    3f5c:	nop
    3f60:	mov	x0, x1
    3f64:	ldrb	w2, [x1], #1
    3f68:	cmp	w2, #0x3a
    3f6c:	b.eq	3f60 <_nl_expand_alias@@Base+0x78>  // b.none
    3f70:	cbz	w2, 3fe4 <_nl_expand_alias@@Base+0xfc>
    3f74:	add	x1, x0, #0x1
    3f78:	mov	x3, x1
    3f7c:	ldrb	w2, [x1], #1
    3f80:	cmp	w2, #0x3a
    3f84:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    3f88:	b.ne	3f78 <_nl_expand_alias@@Base+0x90>  // b.any
    3f8c:	cmp	x3, x0
    3f90:	b.hi	3ff0 <_nl_expand_alias@@Base+0x108>  // b.pmore
    3f94:	mov	w1, #0x1                   	// #1
    3f98:	ldrb	w0, [x3]
    3f9c:	cbnz	w0, 3f50 <_nl_expand_alias@@Base+0x68>
    3fa0:	cbz	w1, 3fac <_nl_expand_alias@@Base+0xc4>
    3fa4:	add	x0, x19, #0x368
    3fa8:	str	x3, [x0, #96]
    3fac:	mov	x20, #0x0                   	// #0
    3fb0:	ldr	x21, [x21, #4064]
    3fb4:	cbz	x21, 3fc8 <_nl_expand_alias@@Base+0xe0>
    3fb8:	add	x0, x19, #0x368
    3fbc:	add	x0, x0, #0x30
    3fc0:	bl	20a0 <pthread_mutex_unlock@plt>
    3fc4:	cbnz	w0, 4080 <_nl_expand_alias@@Base+0x198>
    3fc8:	mov	x0, x20
    3fcc:	ldp	x19, x20, [sp, #16]
    3fd0:	ldp	x21, x22, [sp, #32]
    3fd4:	ldp	x23, x24, [sp, #48]
    3fd8:	ldp	x25, x26, [sp, #64]
    3fdc:	ldp	x29, x30, [sp], #80
    3fe0:	ret
    3fe4:	mov	x3, x0
    3fe8:	mov	w1, #0x1                   	// #1
    3fec:	b	3f98 <_nl_expand_alias@@Base+0xb0>
    3ff0:	sub	w1, w3, w0
    3ff4:	str	x3, [x22, #96]
    3ff8:	bl	3b58 <libintl_gettext@@Base+0x1530>
    3ffc:	cbz	x0, 3f40 <_nl_expand_alias@@Base+0x58>
    4000:	ldr	x23, [x19, #872]
    4004:	add	x0, x19, #0x368
    4008:	cbz	x23, 3f3c <_nl_expand_alias@@Base+0x54>
    400c:	ldr	x25, [x0, #16]
    4010:	mov	x24, #0x0                   	// #0
    4014:	nop
    4018:	cmp	x24, x23
    401c:	b.cs	3f3c <_nl_expand_alias@@Base+0x54>  // b.hs, b.nlast
    4020:	add	x22, x24, x23
    4024:	mov	x0, x20
    4028:	lsr	x22, x22, #1
    402c:	lsl	x1, x22, #4
    4030:	add	x26, x25, x1
    4034:	ldr	x1, [x25, x1]
    4038:	bl	1e60 <strcasecmp@plt>
    403c:	cmp	w0, #0x0
    4040:	b.lt	4060 <_nl_expand_alias@@Base+0x178>  // b.tstop
    4044:	b.eq	4078 <_nl_expand_alias@@Base+0x190>  // b.none
    4048:	add	x24, x22, #0x1
    404c:	cmp	x24, x23
    4050:	b.cc	4020 <_nl_expand_alias@@Base+0x138>  // b.lo, b.ul, b.last
    4054:	b	3f3c <_nl_expand_alias@@Base+0x54>
    4058:	mov	x0, x3
    405c:	b	3f74 <_nl_expand_alias@@Base+0x8c>
    4060:	mov	x23, x22
    4064:	b	4018 <_nl_expand_alias@@Base+0x130>
    4068:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    406c:	add	x0, x0, #0x198
    4070:	str	x0, [x1, #96]
    4074:	b	3f30 <_nl_expand_alias@@Base+0x48>
    4078:	ldr	x20, [x26, #8]
    407c:	b	3fb0 <_nl_expand_alias@@Base+0xc8>
    4080:	bl	1ec0 <abort@plt>
    4084:	nop

0000000000004088 <libintl_textdomain@@Base>:
    4088:	stp	x29, x30, [sp, #-64]!
    408c:	mov	x29, sp
    4090:	stp	x19, x20, [sp, #16]
    4094:	cbz	x0, 41a8 <libintl_textdomain@@Base+0x120>
    4098:	adrp	x20, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    409c:	mov	x19, x0
    40a0:	stp	x21, x22, [sp, #32]
    40a4:	ldr	x0, [x20, #4064]
    40a8:	stp	x23, x24, [sp, #48]
    40ac:	cbz	x0, 40c0 <libintl_textdomain@@Base+0x38>
    40b0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    40b4:	ldr	x0, [x0, #4048]
    40b8:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    40bc:	cbnz	w0, 41c4 <libintl_textdomain@@Base+0x13c>
    40c0:	adrp	x21, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    40c4:	ldrb	w0, [x19]
    40c8:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    40cc:	ldr	x24, [x21, #4008]
    40d0:	ldr	x23, [x24]
    40d4:	cbnz	w0, 4138 <libintl_textdomain@@Base+0xb0>
    40d8:	ldr	x21, [x21, #4008]
    40dc:	ldr	x19, [x22, #4024]
    40e0:	str	x19, [x21]
    40e4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    40e8:	ldr	x22, [x22, #4024]
    40ec:	ldr	x0, [x0, #4032]
    40f0:	cmp	x23, x22
    40f4:	ccmp	x23, x19, #0x4, ne  // ne = any
    40f8:	ldr	w1, [x0]
    40fc:	add	w1, w1, #0x1
    4100:	str	w1, [x0]
    4104:	b.ne	417c <libintl_textdomain@@Base+0xf4>  // b.any
    4108:	ldr	x20, [x20, #4064]
    410c:	cbz	x20, 4120 <libintl_textdomain@@Base+0x98>
    4110:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    4114:	ldr	x0, [x0, #4048]
    4118:	bl	1f80 <pthread_rwlock_unlock@plt>
    411c:	cbnz	w0, 41c4 <libintl_textdomain@@Base+0x13c>
    4120:	mov	x0, x19
    4124:	ldp	x19, x20, [sp, #16]
    4128:	ldp	x21, x22, [sp, #32]
    412c:	ldp	x23, x24, [sp, #48]
    4130:	ldp	x29, x30, [sp], #64
    4134:	ret
    4138:	ldr	x1, [x22, #4024]
    413c:	mov	x0, x19
    4140:	bl	1f00 <strcmp@plt>
    4144:	cbz	w0, 40d8 <libintl_textdomain@@Base+0x50>
    4148:	mov	x1, x23
    414c:	mov	x0, x19
    4150:	bl	1f00 <strcmp@plt>
    4154:	cbnz	w0, 4190 <libintl_textdomain@@Base+0x108>
    4158:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    415c:	mov	x19, x23
    4160:	ldr	x20, [x20, #4064]
    4164:	ldr	x0, [x0, #4032]
    4168:	ldr	w1, [x0]
    416c:	add	w1, w1, #0x1
    4170:	str	w1, [x0]
    4174:	cbnz	x20, 4110 <libintl_textdomain@@Base+0x88>
    4178:	b	4120 <libintl_textdomain@@Base+0x98>
    417c:	mov	x0, x23
    4180:	bl	1f50 <free@plt>
    4184:	ldr	x20, [x20, #4064]
    4188:	cbnz	x20, 4110 <libintl_textdomain@@Base+0x88>
    418c:	b	4120 <libintl_textdomain@@Base+0x98>
    4190:	mov	x0, x19
    4194:	bl	1e80 <strdup@plt>
    4198:	mov	x19, x0
    419c:	cbz	x0, 4108 <libintl_textdomain@@Base+0x80>
    41a0:	str	x0, [x24]
    41a4:	b	40e4 <libintl_textdomain@@Base+0x5c>
    41a8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    41ac:	ldr	x0, [x0, #4008]
    41b0:	ldr	x19, [x0]
    41b4:	mov	x0, x19
    41b8:	ldp	x19, x20, [sp, #16]
    41bc:	ldp	x29, x30, [sp], #64
    41c0:	ret
    41c4:	bl	1ec0 <abort@plt>
    41c8:	sub	sp, sp, #0xb0
    41cc:	stp	x29, x30, [sp, #32]
    41d0:	add	x29, sp, #0x20
    41d4:	stp	x19, x20, [sp, #48]
    41d8:	mov	w20, w3
    41dc:	mov	x19, #0x2                   	// #2
    41e0:	stp	x21, x22, [sp, #64]
    41e4:	mov	x22, x4
    41e8:	stp	x23, x24, [sp, #80]
    41ec:	mov	x24, x0
    41f0:	mov	x0, x22
    41f4:	stp	x25, x26, [sp, #96]
    41f8:	mov	x25, x1
    41fc:	mov	x26, x5
    4200:	stp	x27, x28, [sp, #112]
    4204:	mov	x27, x6
    4208:	mov	x28, x7
    420c:	ldrb	w4, [x4]
    4210:	str	x5, [sp, #136]
    4214:	cmp	w4, #0x2f
    4218:	csel	x23, x2, xzr, ne  // ne = any
    421c:	bl	1c60 <strlen@plt>
    4220:	add	x21, x0, x23
    4224:	and	w0, w20, #0x4
    4228:	str	w0, [sp, #144]
    422c:	tbz	w20, #2, 423c <libintl_textdomain@@Base+0x1b4>
    4230:	mov	x0, x26
    4234:	bl	1c60 <strlen@plt>
    4238:	add	x19, x0, #0x3
    423c:	and	w0, w20, #0x2
    4240:	str	w0, [sp, #144]
    4244:	mov	x1, #0x0                   	// #0
    4248:	tbz	w20, #1, 4258 <libintl_textdomain@@Base+0x1d0>
    424c:	mov	x0, x27
    4250:	bl	1c60 <strlen@plt>
    4254:	add	x1, x0, #0x1
    4258:	and	w26, w20, #0x1
    425c:	tbz	w20, #0, 4278 <libintl_textdomain@@Base+0x1f0>
    4260:	mov	x0, x28
    4264:	str	x1, [sp, #144]
    4268:	bl	1c60 <strlen@plt>
    426c:	ldr	x1, [sp, #144]
    4270:	add	x1, x1, #0x1
    4274:	add	x1, x1, x0
    4278:	add	x19, x19, x1
    427c:	mov	x1, #0x0                   	// #0
    4280:	add	x19, x19, x21
    4284:	and	w21, w20, #0x8
    4288:	tbz	w20, #3, 4298 <libintl_textdomain@@Base+0x210>
    428c:	ldr	x0, [sp, #176]
    4290:	bl	1c60 <strlen@plt>
    4294:	add	x1, x0, #0x1
    4298:	ldr	x0, [sp, #184]
    429c:	str	x1, [sp, #144]
    42a0:	bl	1c60 <strlen@plt>
    42a4:	ldr	x1, [sp, #144]
    42a8:	add	x0, x0, x1
    42ac:	add	x0, x0, x19
    42b0:	bl	1db0 <malloc@plt>
    42b4:	mov	x19, x0
    42b8:	cbz	x0, 463c <libintl_textdomain@@Base+0x5b4>
    42bc:	mov	x1, x0
    42c0:	cbnz	x23, 4550 <libintl_textdomain@@Base+0x4c8>
    42c4:	mov	x0, x1
    42c8:	mov	x1, x22
    42cc:	bl	1d70 <stpcpy@plt>
    42d0:	mov	x1, x0
    42d4:	and	w0, w20, #0x4
    42d8:	cbnz	w0, 4534 <libintl_textdomain@@Base+0x4ac>
    42dc:	add	x0, x1, #0x1
    42e0:	and	w2, w20, #0x2
    42e4:	cbnz	w2, 4514 <libintl_textdomain@@Base+0x48c>
    42e8:	cbnz	w26, 44dc <libintl_textdomain@@Base+0x454>
    42ec:	cbnz	w21, 44f8 <libintl_textdomain@@Base+0x470>
    42f0:	mov	w2, #0x2f                  	// #47
    42f4:	strb	w2, [x1]
    42f8:	ldr	x1, [sp, #184]
    42fc:	mov	x21, x24
    4300:	bl	1fd0 <strcpy@plt>
    4304:	ldr	x26, [x24]
    4308:	cbz	x26, 4338 <libintl_textdomain@@Base+0x2b0>
    430c:	nop
    4310:	ldr	x0, [x26]
    4314:	mov	x1, x19
    4318:	cbz	x0, 4330 <libintl_textdomain@@Base+0x2a8>
    431c:	bl	1f00 <strcmp@plt>
    4320:	cmp	w0, #0x0
    4324:	cbz	w0, 4620 <libintl_textdomain@@Base+0x598>
    4328:	b.lt	4338 <libintl_textdomain@@Base+0x2b0>  // b.tstop
    432c:	add	x21, x26, #0x18
    4330:	ldr	x26, [x26, #24]
    4334:	cbnz	x26, 4310 <libintl_textdomain@@Base+0x288>
    4338:	ldr	w0, [sp, #192]
    433c:	cbz	w0, 4618 <libintl_textdomain@@Base+0x590>
    4340:	mov	w1, #0xffffd555            	// #-10923
    4344:	mov	w0, #0x5555                	// #21845
    4348:	and	w1, w1, w20, asr #1
    434c:	and	w0, w20, w0
    4350:	add	w1, w1, w0
    4354:	mov	w0, #0xfffff333            	// #-3277
    4358:	mov	w2, #0x3333                	// #13107
    435c:	and	w2, w1, w2
    4360:	and	w0, w0, w1, asr #2
    4364:	mov	w1, #0xf0f                 	// #3855
    4368:	add	w0, w0, w2
    436c:	add	w0, w0, w0, asr #4
    4370:	and	w0, w0, w1
    4374:	add	w0, w0, w0, lsr #8
    4378:	and	w26, w0, #0xff
    437c:	cbz	x23, 4490 <libintl_textdomain@@Base+0x408>
    4380:	mov	x1, x23
    4384:	mov	x0, x25
    4388:	bl	1ef0 <argz_count@plt>
    438c:	str	x0, [sp, #144]
    4390:	cmp	x0, #0x1
    4394:	lsl	x2, x0, x26
    4398:	b.ls	449c <libintl_textdomain@@Base+0x414>  // b.plast
    439c:	add	x2, x2, #0x6
    43a0:	lsl	x0, x2, #3
    43a4:	bl	1db0 <malloc@plt>
    43a8:	mov	x26, x0
    43ac:	cbz	x0, 462c <libintl_textdomain@@Base+0x5a4>
    43b0:	str	xzr, [x26, #16]
    43b4:	mov	w1, #0x1                   	// #1
    43b8:	str	x19, [x26]
    43bc:	mov	w19, w20
    43c0:	ldr	x0, [x21]
    43c4:	str	w1, [x26, #8]
    43c8:	str	x0, [x26, #24]
    43cc:	str	x26, [x21]
    43d0:	mov	x21, #0x0                   	// #0
    43d4:	tbnz	w19, #31, 4464 <libintl_textdomain@@Base+0x3dc>
    43d8:	add	x0, x25, x23
    43dc:	mvn	w20, w20
    43e0:	str	x0, [sp, #152]
    43e4:	add	x0, x26, #0x18
    43e8:	str	x0, [sp, #160]
    43ec:	tst	w20, w19
    43f0:	b.ne	4458 <libintl_textdomain@@Base+0x3d0>  // b.any
    43f4:	and	w0, w19, #0x3
    43f8:	cmp	w0, #0x3
    43fc:	b.eq	4458 <libintl_textdomain@@Base+0x3d0>  // b.none
    4400:	ldr	x0, [sp, #144]
    4404:	cmp	x0, #0x1
    4408:	b.hi	457c <libintl_textdomain@@Base+0x4f4>  // b.pmore
    440c:	ldr	x0, [sp, #176]
    4410:	str	x0, [sp]
    4414:	ldr	x5, [sp, #136]
    4418:	mov	x1, x25
    441c:	ldr	x0, [sp, #184]
    4420:	str	x0, [sp, #8]
    4424:	mov	w0, #0x1                   	// #1
    4428:	str	w0, [sp, #16]
    442c:	mov	x7, x28
    4430:	mov	x6, x27
    4434:	mov	x4, x22
    4438:	mov	w3, w19
    443c:	mov	x2, x23
    4440:	mov	x0, x24
    4444:	bl	41c8 <libintl_textdomain@@Base+0x140>
    4448:	add	x1, x21, #0x4
    444c:	add	x9, x21, #0x1
    4450:	mov	x21, x9
    4454:	str	x0, [x26, x1, lsl #3]
    4458:	sub	w19, w19, #0x1
    445c:	cmn	w19, #0x1
    4460:	b.ne	43ec <libintl_textdomain@@Base+0x364>  // b.any
    4464:	add	x9, x21, #0x4
    4468:	str	xzr, [x26, x9, lsl #3]
    446c:	mov	x0, x26
    4470:	ldp	x29, x30, [sp, #32]
    4474:	ldp	x19, x20, [sp, #48]
    4478:	ldp	x21, x22, [sp, #64]
    447c:	ldp	x23, x24, [sp, #80]
    4480:	ldp	x25, x26, [sp, #96]
    4484:	ldp	x27, x28, [sp, #112]
    4488:	add	sp, sp, #0xb0
    448c:	ret
    4490:	mov	x0, #0x1                   	// #1
    4494:	str	x0, [sp, #144]
    4498:	lsl	x2, x0, x26
    449c:	add	x2, x2, #0x5
    44a0:	lsl	x0, x2, #3
    44a4:	bl	1db0 <malloc@plt>
    44a8:	mov	x26, x0
    44ac:	cbz	x0, 462c <libintl_textdomain@@Base+0x5a4>
    44b0:	str	xzr, [x26, #16]
    44b4:	and	w0, w20, #0x3
    44b8:	cmp	w0, #0x3
    44bc:	str	x19, [x26]
    44c0:	ldr	x0, [x21]
    44c4:	cset	w1, eq  // eq = none
    44c8:	str	w1, [x26, #8]
    44cc:	sub	w19, w20, #0x1
    44d0:	str	x0, [x26, #24]
    44d4:	str	x26, [x21]
    44d8:	b	43d0 <libintl_textdomain@@Base+0x348>
    44dc:	mov	w2, #0x2e                  	// #46
    44e0:	strb	w2, [x1]
    44e4:	mov	x1, x28
    44e8:	bl	1d70 <stpcpy@plt>
    44ec:	mov	x1, x0
    44f0:	add	x0, x0, #0x1
    44f4:	cbz	w21, 42f0 <libintl_textdomain@@Base+0x268>
    44f8:	mov	w2, #0x40                  	// #64
    44fc:	strb	w2, [x1]
    4500:	ldr	x1, [sp, #176]
    4504:	bl	1d70 <stpcpy@plt>
    4508:	mov	x1, x0
    450c:	add	x0, x0, #0x1
    4510:	b	42f0 <libintl_textdomain@@Base+0x268>
    4514:	mov	w2, #0x2e                  	// #46
    4518:	strb	w2, [x1]
    451c:	mov	x1, x27
    4520:	bl	1d70 <stpcpy@plt>
    4524:	mov	x1, x0
    4528:	add	x0, x0, #0x1
    452c:	cbz	w26, 42ec <libintl_textdomain@@Base+0x264>
    4530:	b	44dc <libintl_textdomain@@Base+0x454>
    4534:	mov	x0, x1
    4538:	mov	w2, #0x5f                  	// #95
    453c:	ldr	x1, [sp, #136]
    4540:	strb	w2, [x0], #1
    4544:	bl	1d70 <stpcpy@plt>
    4548:	mov	x1, x0
    454c:	b	42dc <libintl_textdomain@@Base+0x254>
    4550:	mov	x2, x23
    4554:	mov	x1, x25
    4558:	bl	1c10 <memcpy@plt>
    455c:	mov	x1, x23
    4560:	mov	x0, x19
    4564:	mov	w2, #0x3a                  	// #58
    4568:	bl	1e50 <argz_stringify@plt>
    456c:	add	x1, x19, x23
    4570:	mov	w0, #0x2f                  	// #47
    4574:	sturb	w0, [x1, #-1]
    4578:	b	42c4 <libintl_textdomain@@Base+0x23c>
    457c:	mov	x1, #0x0                   	// #0
    4580:	cbz	x1, 4608 <libintl_textdomain@@Base+0x580>
    4584:	ldr	x2, [sp, #152]
    4588:	str	x1, [sp, #168]
    458c:	mov	x0, x1
    4590:	cmp	x1, x2
    4594:	b.cs	4458 <libintl_textdomain@@Base+0x3d0>  // b.hs, b.nlast
    4598:	bl	1c60 <strlen@plt>
    459c:	add	x0, x0, #0x1
    45a0:	ldr	x1, [sp, #168]
    45a4:	ldr	x2, [sp, #152]
    45a8:	add	x1, x1, x0
    45ac:	cmp	x2, x1
    45b0:	b.ls	4458 <libintl_textdomain@@Base+0x3d0>  // b.plast
    45b4:	mov	x0, x1
    45b8:	str	x1, [sp, #168]
    45bc:	bl	1c60 <strlen@plt>
    45c0:	add	x2, x0, #0x1
    45c4:	ldp	x1, x0, [sp, #176]
    45c8:	stp	x1, x0, [sp]
    45cc:	mov	x7, x28
    45d0:	ldr	x5, [sp, #136]
    45d4:	mov	w0, #0x1                   	// #1
    45d8:	ldr	x1, [sp, #168]
    45dc:	str	w0, [sp, #16]
    45e0:	mov	x6, x27
    45e4:	mov	x4, x22
    45e8:	mov	w3, w19
    45ec:	mov	x0, x24
    45f0:	bl	41c8 <libintl_textdomain@@Base+0x140>
    45f4:	add	x21, x21, #0x1
    45f8:	ldr	x1, [sp, #160]
    45fc:	str	x0, [x1, x21, lsl #3]
    4600:	ldr	x1, [sp, #168]
    4604:	cbnz	x1, 4584 <libintl_textdomain@@Base+0x4fc>
    4608:	cbz	x23, 4458 <libintl_textdomain@@Base+0x3d0>
    460c:	mov	x1, x25
    4610:	cbnz	x25, 45b4 <libintl_textdomain@@Base+0x52c>
    4614:	b	4458 <libintl_textdomain@@Base+0x3d0>
    4618:	mov	x26, #0x0                   	// #0
    461c:	nop
    4620:	mov	x0, x19
    4624:	bl	1f50 <free@plt>
    4628:	b	446c <libintl_textdomain@@Base+0x3e4>
    462c:	mov	x0, x19
    4630:	mov	x26, #0x0                   	// #0
    4634:	bl	1f50 <free@plt>
    4638:	b	446c <libintl_textdomain@@Base+0x3e4>
    463c:	mov	x26, #0x0                   	// #0
    4640:	b	446c <libintl_textdomain@@Base+0x3e4>
    4644:	nop
    4648:	stp	x29, x30, [sp, #-80]!
    464c:	mov	x29, sp
    4650:	stp	x19, x20, [sp, #16]
    4654:	stp	x23, x24, [sp, #48]
    4658:	cbz	x1, 477c <libintl_textdomain@@Base+0x6f4>
    465c:	stp	x21, x22, [sp, #32]
    4660:	mov	x22, x0
    4664:	mov	x21, x1
    4668:	bl	1f20 <__ctype_b_loc@plt>
    466c:	ldr	x23, [x0]
    4670:	mov	x2, x22
    4674:	add	x6, x21, x22
    4678:	mov	x4, #0x0                   	// #0
    467c:	mov	w5, #0x1                   	// #1
    4680:	ldrb	w1, [x2]
    4684:	add	x2, x2, #0x1
    4688:	ldrh	w3, [x23, x1, lsl #1]
    468c:	tbz	w3, #3, 469c <libintl_textdomain@@Base+0x614>
    4690:	tst	x3, #0x400
    4694:	add	x4, x4, #0x1
    4698:	csel	w5, w5, wzr, eq  // eq = none
    469c:	cmp	x6, x2
    46a0:	b.ne	4680 <libintl_textdomain@@Base+0x5f8>  // b.any
    46a4:	cbnz	w5, 4730 <libintl_textdomain@@Base+0x6a8>
    46a8:	add	x0, x4, #0x1
    46ac:	bl	1db0 <malloc@plt>
    46b0:	mov	x19, x0
    46b4:	mov	x24, x0
    46b8:	cbz	x0, 4760 <libintl_textdomain@@Base+0x6d8>
    46bc:	str	x25, [sp, #64]
    46c0:	mov	x20, #0x0                   	// #0
    46c4:	b	46e4 <libintl_textdomain@@Base+0x65c>
    46c8:	bl	1d50 <__ctype_tolower_loc@plt>
    46cc:	ldr	x0, [x0]
    46d0:	ldr	w0, [x0, x25, lsl #2]
    46d4:	strb	w0, [x19], #1
    46d8:	add	x20, x20, #0x1
    46dc:	cmp	x21, x20
    46e0:	b.ls	4710 <libintl_textdomain@@Base+0x688>  // b.plast
    46e4:	ldrb	w25, [x22, x20]
    46e8:	ubfiz	x1, x25, #1, #8
    46ec:	ldrh	w3, [x23, x1]
    46f0:	tbnz	w3, #10, 46c8 <libintl_textdomain@@Base+0x640>
    46f4:	mov	x0, x19
    46f8:	tbz	w3, #11, 46d8 <libintl_textdomain@@Base+0x650>
    46fc:	strb	w25, [x0], #1
    4700:	add	x20, x20, #0x1
    4704:	cmp	x21, x20
    4708:	mov	x19, x0
    470c:	b.hi	46e4 <libintl_textdomain@@Base+0x65c>  // b.pmore
    4710:	ldp	x21, x22, [sp, #32]
    4714:	ldr	x25, [sp, #64]
    4718:	strb	wzr, [x19]
    471c:	mov	x0, x24
    4720:	ldp	x19, x20, [sp, #16]
    4724:	ldp	x23, x24, [sp, #48]
    4728:	ldp	x29, x30, [sp], #80
    472c:	ret
    4730:	add	x0, x4, #0x4
    4734:	bl	1db0 <malloc@plt>
    4738:	mov	x24, x0
    473c:	cbz	x0, 4760 <libintl_textdomain@@Base+0x6d8>
    4740:	mov	x19, x0
    4744:	mov	w0, #0x7369                	// #29545
    4748:	str	x25, [sp, #64]
    474c:	movk	w0, #0x6f, lsl #16
    4750:	str	w0, [x19], #3
    4754:	bl	1f20 <__ctype_b_loc@plt>
    4758:	ldr	x23, [x0]
    475c:	b	46c0 <libintl_textdomain@@Base+0x638>
    4760:	ldp	x21, x22, [sp, #32]
    4764:	mov	x24, #0x0                   	// #0
    4768:	mov	x0, x24
    476c:	ldp	x19, x20, [sp, #16]
    4770:	ldp	x23, x24, [sp, #48]
    4774:	ldp	x29, x30, [sp], #80
    4778:	ret
    477c:	mov	x0, #0x4                   	// #4
    4780:	bl	1db0 <malloc@plt>
    4784:	mov	x24, x0
    4788:	cbz	x0, 4764 <libintl_textdomain@@Base+0x6dc>
    478c:	mov	x19, x24
    4790:	mov	w0, #0x7369                	// #29545
    4794:	movk	w0, #0x6f, lsl #16
    4798:	str	w0, [x19], #3
    479c:	b	4718 <libintl_textdomain@@Base+0x690>
    47a0:	stp	x29, x30, [sp, #-96]!
    47a4:	mov	x29, sp
    47a8:	stp	x19, x20, [sp, #16]
    47ac:	mov	w20, #0x0                   	// #0
    47b0:	str	x21, [sp, #32]
    47b4:	mov	x21, x4
    47b8:	str	xzr, [x2]
    47bc:	str	xzr, [x3]
    47c0:	str	xzr, [x4]
    47c4:	str	xzr, [x5]
    47c8:	str	x0, [x1]
    47cc:	ldrb	w1, [x0]
    47d0:	cmp	w1, #0x5f
    47d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    47d8:	b.eq	4854 <libintl_textdomain@@Base+0x7cc>  // b.none
    47dc:	mov	x19, x0
    47e0:	mov	w7, #0x40                  	// #64
    47e4:	str	x23, [sp, #40]
    47e8:	mov	x23, x2
    47ec:	b	4804 <libintl_textdomain@@Base+0x77c>
    47f0:	ldrb	w1, [x19, #1]
    47f4:	cmp	w1, #0x5f
    47f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    47fc:	b.eq	48a4 <libintl_textdomain@@Base+0x81c>  // b.none
    4800:	mov	x19, x6
    4804:	cmp	w1, #0x2e
    4808:	add	x6, x19, #0x1
    480c:	ccmp	w1, w7, #0x4, ne  // ne = any
    4810:	b.ne	47f0 <libintl_textdomain@@Base+0x768>  // b.any
    4814:	cmp	x0, x19
    4818:	b.eq	4898 <libintl_textdomain@@Base+0x810>  // b.none
    481c:	ldrb	w1, [x19]
    4820:	mov	w20, #0x0                   	// #0
    4824:	cmp	w1, #0x2e
    4828:	b.eq	48f8 <libintl_textdomain@@Base+0x870>  // b.none
    482c:	cmp	w1, #0x40
    4830:	b.ne	4988 <libintl_textdomain@@Base+0x900>  // b.any
    4834:	mov	x0, x19
    4838:	orr	w1, w20, #0x8
    483c:	strb	wzr, [x0], #1
    4840:	str	x0, [x23]
    4844:	ldr	x23, [sp, #40]
    4848:	ldrb	w0, [x19, #1]
    484c:	cmp	w0, #0x0
    4850:	csel	w20, w1, w20, ne  // ne = any
    4854:	ldr	x0, [x3]
    4858:	cbz	x0, 486c <libintl_textdomain@@Base+0x7e4>
    485c:	ldrb	w1, [x0]
    4860:	and	w0, w20, #0xfffffffb
    4864:	cmp	w1, #0x0
    4868:	csel	w20, w0, w20, eq  // eq = none
    486c:	ldr	x0, [x21]
    4870:	cbz	x0, 4884 <libintl_textdomain@@Base+0x7fc>
    4874:	ldrb	w1, [x0]
    4878:	and	w0, w20, #0xfffffffd
    487c:	cmp	w1, #0x0
    4880:	csel	w20, w0, w20, eq  // eq = none
    4884:	mov	w0, w20
    4888:	ldp	x19, x20, [sp, #16]
    488c:	ldr	x21, [sp, #32]
    4890:	ldp	x29, x30, [sp], #96
    4894:	ret
    4898:	mov	w20, #0x0                   	// #0
    489c:	ldr	x23, [sp, #40]
    48a0:	b	4854 <libintl_textdomain@@Base+0x7cc>
    48a4:	cmp	x0, x6
    48a8:	b.eq	4898 <libintl_textdomain@@Base+0x810>  // b.none
    48ac:	cmp	w1, #0x5f
    48b0:	b.ne	49d0 <libintl_textdomain@@Base+0x948>  // b.any
    48b4:	strb	wzr, [x6]
    48b8:	add	x19, x19, #0x2
    48bc:	str	x19, [x3]
    48c0:	ldrb	w1, [x6, #1]
    48c4:	and	w0, w1, #0xffffffbf
    48c8:	cmp	w1, #0x2e
    48cc:	and	w0, w0, #0xff
    48d0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    48d4:	b.eq	48ec <libintl_textdomain@@Base+0x864>  // b.none
    48d8:	ldrb	w1, [x19, #1]!
    48dc:	cmp	w1, #0x2e
    48e0:	and	w0, w1, #0xffffffbf
    48e4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    48e8:	b.ne	48d8 <libintl_textdomain@@Base+0x850>  // b.any
    48ec:	cmp	w1, #0x2e
    48f0:	mov	w20, #0x4                   	// #4
    48f4:	b.ne	482c <libintl_textdomain@@Base+0x7a4>  // b.any
    48f8:	mov	x0, x19
    48fc:	stp	x24, x25, [sp, #48]
    4900:	mov	w2, #0xbf                  	// #191
    4904:	orr	w25, w20, #0x2
    4908:	strb	wzr, [x0], #1
    490c:	str	x0, [x21]
    4910:	ldrb	w1, [x19, #1]
    4914:	tst	w1, w2
    4918:	b.eq	49c0 <libintl_textdomain@@Base+0x938>  // b.none
    491c:	mov	x19, x0
    4920:	mov	x24, x19
    4924:	ldrb	w6, [x19, #1]!
    4928:	mov	w4, #0xbf                  	// #191
    492c:	tst	w6, w4
    4930:	b.ne	4920 <libintl_textdomain@@Base+0x898>  // b.any
    4934:	str	x5, [sp, #80]
    4938:	cmp	x0, x19
    493c:	b.eq	4990 <libintl_textdomain@@Base+0x908>  // b.none
    4940:	sub	x1, x19, x0
    4944:	str	x26, [sp, #64]
    4948:	str	x3, [sp, #88]
    494c:	bl	4648 <libintl_textdomain@@Base+0x5c0>
    4950:	ldr	x5, [sp, #80]
    4954:	mov	x26, x0
    4958:	str	x0, [x5]
    495c:	cbz	x0, 49dc <libintl_textdomain@@Base+0x954>
    4960:	mov	x1, x0
    4964:	ldr	x0, [x21]
    4968:	bl	1f00 <strcmp@plt>
    496c:	ldr	x3, [sp, #88]
    4970:	cbz	w0, 499c <libintl_textdomain@@Base+0x914>
    4974:	ldrb	w1, [x24, #1]
    4978:	orr	w20, w20, #0x3
    497c:	ldp	x24, x25, [sp, #48]
    4980:	ldr	x26, [sp, #64]
    4984:	b	482c <libintl_textdomain@@Base+0x7a4>
    4988:	ldr	x23, [sp, #40]
    498c:	b	4854 <libintl_textdomain@@Base+0x7cc>
    4990:	mov	w20, w25
    4994:	ldp	x24, x25, [sp, #48]
    4998:	b	482c <libintl_textdomain@@Base+0x7a4>
    499c:	mov	x0, x26
    49a0:	str	x3, [sp, #80]
    49a4:	bl	1f50 <free@plt>
    49a8:	mov	w20, w25
    49ac:	ldrb	w1, [x24, #1]
    49b0:	ldp	x24, x25, [sp, #48]
    49b4:	ldr	x26, [sp, #64]
    49b8:	ldr	x3, [sp, #80]
    49bc:	b	482c <libintl_textdomain@@Base+0x7a4>
    49c0:	mov	w20, w25
    49c4:	mov	x19, x0
    49c8:	ldp	x24, x25, [sp, #48]
    49cc:	b	482c <libintl_textdomain@@Base+0x7a4>
    49d0:	mov	x19, x6
    49d4:	mov	w20, #0x0                   	// #0
    49d8:	b	4824 <libintl_textdomain@@Base+0x79c>
    49dc:	mov	w20, #0xffffffff            	// #-1
    49e0:	ldp	x23, x24, [sp, #40]
    49e4:	ldp	x25, x26, [sp, #56]
    49e8:	b	4884 <libintl_textdomain@@Base+0x7fc>
    49ec:	nop
    49f0:	stp	x29, x30, [sp, #-48]!
    49f4:	mov	x29, sp
    49f8:	stp	x19, x20, [sp, #16]
    49fc:	mov	x19, x0
    4a00:	mov	x20, x1
    4a04:	str	x21, [sp, #32]
    4a08:	ldr	w0, [x19]
    4a0c:	cmp	w0, #0x2
    4a10:	b.eq	4a80 <libintl_textdomain@@Base+0x9f8>  // b.none
    4a14:	b.gt	4a4c <libintl_textdomain@@Base+0x9c4>
    4a18:	cbz	w0, 4af4 <libintl_textdomain@@Base+0xa6c>
    4a1c:	cmp	w0, #0x1
    4a20:	b.ne	4b08 <libintl_textdomain@@Base+0xa80>  // b.any
    4a24:	ldr	x0, [x19, #8]
    4a28:	mov	x1, x20
    4a2c:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4a30:	cmp	x0, #0x0
    4a34:	cset	x21, eq  // eq = none
    4a38:	mov	x0, x21
    4a3c:	ldp	x19, x20, [sp, #16]
    4a40:	ldr	x21, [sp, #32]
    4a44:	ldp	x29, x30, [sp], #48
    4a48:	ret
    4a4c:	mov	x1, x20
    4a50:	cmp	w0, #0x3
    4a54:	b.ne	4b08 <libintl_textdomain@@Base+0xa80>  // b.any
    4a58:	ldr	x0, [x19, #8]
    4a5c:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4a60:	cmp	x0, #0x0
    4a64:	cset	w0, eq  // eq = none
    4a68:	add	w0, w0, #0x1
    4a6c:	add	x19, x19, w0, sxtw #3
    4a70:	ldr	x19, [x19, #8]
    4a74:	ldr	w0, [x19]
    4a78:	cmp	w0, #0x2
    4a7c:	b.ne	4a14 <libintl_textdomain@@Base+0x98c>  // b.any
    4a80:	ldr	x0, [x19, #8]
    4a84:	mov	x1, x20
    4a88:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4a8c:	mov	x21, x0
    4a90:	ldr	w1, [x19, #4]
    4a94:	cmp	w1, #0xf
    4a98:	b.eq	4b28 <libintl_textdomain@@Base+0xaa0>  // b.none
    4a9c:	cmp	w1, #0xe
    4aa0:	b.eq	4b94 <libintl_textdomain@@Base+0xb0c>  // b.none
    4aa4:	ldr	x0, [x19, #16]
    4aa8:	mov	x1, x20
    4aac:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4ab0:	ldr	w1, [x19, #4]
    4ab4:	mov	x19, x0
    4ab8:	cmp	w1, #0x8
    4abc:	b.eq	4bdc <libintl_textdomain@@Base+0xb54>  // b.none
    4ac0:	b.hi	4b50 <libintl_textdomain@@Base+0xac8>  // b.pmore
    4ac4:	cmp	w1, #0x5
    4ac8:	b.eq	4bcc <libintl_textdomain@@Base+0xb44>  // b.none
    4acc:	b.ls	4b34 <libintl_textdomain@@Base+0xaac>  // b.plast
    4ad0:	sub	x0, x21, x0
    4ad4:	cmp	w1, #0x6
    4ad8:	add	x21, x21, x19
    4adc:	csel	x21, x21, x0, eq  // eq = none
    4ae0:	mov	x0, x21
    4ae4:	ldp	x19, x20, [sp, #16]
    4ae8:	ldr	x21, [sp, #32]
    4aec:	ldp	x29, x30, [sp], #48
    4af0:	ret
    4af4:	ldr	w0, [x19, #4]
    4af8:	mov	x21, x20
    4afc:	cbz	w0, 4a38 <libintl_textdomain@@Base+0x9b0>
    4b00:	cmp	w0, #0x1
    4b04:	b.eq	4b20 <libintl_textdomain@@Base+0xa98>  // b.none
    4b08:	mov	x21, #0x0                   	// #0
    4b0c:	mov	x0, x21
    4b10:	ldp	x19, x20, [sp, #16]
    4b14:	ldr	x21, [sp, #32]
    4b18:	ldp	x29, x30, [sp], #48
    4b1c:	ret
    4b20:	ldr	x21, [x19, #8]
    4b24:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4b28:	cbz	x0, 4b98 <libintl_textdomain@@Base+0xb10>
    4b2c:	mov	x21, #0x1                   	// #1
    4b30:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4b34:	cmp	w1, #0x3
    4b38:	b.eq	4be8 <libintl_textdomain@@Base+0xb60>  // b.none
    4b3c:	cmp	w1, #0x4
    4b40:	b.ne	4b08 <libintl_textdomain@@Base+0xa80>  // b.any
    4b44:	cbz	x0, 4bb0 <libintl_textdomain@@Base+0xb28>
    4b48:	udiv	x21, x21, x19
    4b4c:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4b50:	cmp	w1, #0xb
    4b54:	b.eq	4bc0 <libintl_textdomain@@Base+0xb38>  // b.none
    4b58:	b.ls	4b78 <libintl_textdomain@@Base+0xaf0>  // b.plast
    4b5c:	cmp	w1, #0xc
    4b60:	b.eq	4bf0 <libintl_textdomain@@Base+0xb68>  // b.none
    4b64:	cmp	w1, #0xd
    4b68:	b.ne	4b08 <libintl_textdomain@@Base+0xa80>  // b.any
    4b6c:	cmp	x21, x0
    4b70:	cset	x21, ne  // ne = any
    4b74:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4b78:	cmp	w1, #0x9
    4b7c:	b.eq	4bfc <libintl_textdomain@@Base+0xb74>  // b.none
    4b80:	cmp	w1, #0xa
    4b84:	b.ne	4b08 <libintl_textdomain@@Base+0xa80>  // b.any
    4b88:	cmp	x21, x0
    4b8c:	cset	x21, ls  // ls = plast
    4b90:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4b94:	cbz	x0, 4a38 <libintl_textdomain@@Base+0x9b0>
    4b98:	ldr	x0, [x19, #16]
    4b9c:	mov	x1, x20
    4ba0:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4ba4:	cmp	x0, #0x0
    4ba8:	cset	x21, ne  // ne = any
    4bac:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bb0:	mov	w0, #0x8                   	// #8
    4bb4:	bl	1c70 <raise@plt>
    4bb8:	udiv	x21, x21, x19
    4bbc:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bc0:	cmp	x21, x0
    4bc4:	cset	x21, cs  // cs = hs, nlast
    4bc8:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bcc:	cbz	x0, 4c08 <libintl_textdomain@@Base+0xb80>
    4bd0:	udiv	x0, x21, x19
    4bd4:	msub	x21, x0, x19, x21
    4bd8:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bdc:	cmp	x21, x0
    4be0:	cset	x21, cc  // cc = lo, ul, last
    4be4:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4be8:	mul	x21, x21, x0
    4bec:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bf0:	cmp	x21, x0
    4bf4:	cset	x21, eq  // eq = none
    4bf8:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4bfc:	cmp	x21, x0
    4c00:	cset	x21, hi  // hi = pmore
    4c04:	b	4a38 <libintl_textdomain@@Base+0x9b0>
    4c08:	mov	w0, #0x8                   	// #8
    4c0c:	bl	1c70 <raise@plt>
    4c10:	b	4bd0 <libintl_textdomain@@Base+0xb48>
    4c14:	nop
    4c18:	stp	x29, x30, [sp, #-32]!
    4c1c:	mov	x29, sp
    4c20:	stp	x19, x20, [sp, #16]
    4c24:	mov	x20, x0
    4c28:	mov	x19, x1
    4c2c:	ldr	x0, [x0, #32]
    4c30:	cbz	x0, 4c8c <libintl_textdomain@@Base+0xc04>
    4c34:	add	x0, x20, #0x38
    4c38:	ldr	x1, [x19, #32]
    4c3c:	cbz	x1, 4c84 <libintl_textdomain@@Base+0xbfc>
    4c40:	add	x1, x19, #0x38
    4c44:	bl	1f00 <strcmp@plt>
    4c48:	cbnz	w0, 4c78 <libintl_textdomain@@Base+0xbf0>
    4c4c:	ldr	x1, [x19]
    4c50:	ldr	x0, [x20]
    4c54:	bl	1f00 <strcmp@plt>
    4c58:	cbnz	w0, 4c78 <libintl_textdomain@@Base+0xbf0>
    4c5c:	ldr	x1, [x19, #16]
    4c60:	ldr	x0, [x20, #16]
    4c64:	bl	1f00 <strcmp@plt>
    4c68:	cbnz	w0, 4c78 <libintl_textdomain@@Base+0xbf0>
    4c6c:	ldr	w1, [x19, #8]
    4c70:	ldr	w0, [x20, #8]
    4c74:	sub	w0, w0, w1
    4c78:	ldp	x19, x20, [sp, #16]
    4c7c:	ldp	x29, x30, [sp], #32
    4c80:	ret
    4c84:	ldr	x1, [x19, #56]
    4c88:	b	4c44 <libintl_textdomain@@Base+0xbbc>
    4c8c:	ldr	x0, [x20, #56]
    4c90:	b	4c38 <libintl_textdomain@@Base+0xbb0>
    4c94:	nop
    4c98:	stp	x29, x30, [sp, #-48]!
    4c9c:	mov	x29, sp
    4ca0:	stp	x19, x20, [sp, #16]
    4ca4:	mov	x19, x0
    4ca8:	ldr	x0, [x0, #184]
    4cac:	stp	x21, x22, [sp, #32]
    4cb0:	mov	x22, x2
    4cb4:	mov	x21, x3
    4cb8:	bl	49f0 <libintl_textdomain@@Base+0x968>
    4cbc:	ldr	x1, [x19, #192]
    4cc0:	cmp	x0, x1
    4cc4:	b.cs	4cfc <libintl_textdomain@@Base+0xc74>  // b.hs, b.nlast
    4cc8:	mov	x20, x0
    4ccc:	add	x21, x22, x21
    4cd0:	mov	x19, x22
    4cd4:	nop
    4cd8:	sub	x20, x20, #0x1
    4cdc:	mov	x0, x19
    4ce0:	cmn	x20, #0x1
    4ce4:	b.eq	4d10 <libintl_textdomain@@Base+0xc88>  // b.none
    4ce8:	bl	1c60 <strlen@plt>
    4cec:	add	x0, x0, #0x1
    4cf0:	add	x19, x19, x0
    4cf4:	cmp	x19, x21
    4cf8:	b.cc	4cd8 <libintl_textdomain@@Base+0xc50>  // b.lo, b.ul, b.last
    4cfc:	mov	x0, x22
    4d00:	ldp	x19, x20, [sp, #16]
    4d04:	ldp	x21, x22, [sp, #32]
    4d08:	ldp	x29, x30, [sp], #48
    4d0c:	ret
    4d10:	mov	x22, x19
    4d14:	b	4cfc <libintl_textdomain@@Base+0xc74>
    4d18:	stp	x29, x30, [sp, #-176]!
    4d1c:	mov	x29, sp
    4d20:	stp	x19, x20, [sp, #16]
    4d24:	stp	x21, x22, [sp, #32]
    4d28:	mov	x22, x2
    4d2c:	ldr	w2, [x0, #8]
    4d30:	stp	x23, x24, [sp, #48]
    4d34:	cmp	w2, #0x0
    4d38:	stp	x25, x26, [sp, #64]
    4d3c:	stp	x27, x28, [sp, #80]
    4d40:	stp	x1, x4, [x29, #96]
    4d44:	str	w3, [x29, #116]
    4d48:	str	x0, [x29, #120]
    4d4c:	b.le	5000 <libintl_textdomain@@Base+0xf78>
    4d50:	ldr	x0, [x29, #120]
    4d54:	ldr	x27, [x0, #16]
    4d58:	cbz	x27, 4f50 <libintl_textdomain@@Base+0xec8>
    4d5c:	ldr	x0, [x27, #96]
    4d60:	ldr	w24, [x27, #40]
    4d64:	cbz	x0, 4f78 <libintl_textdomain@@Base+0xef0>
    4d68:	mov	x0, x22
    4d6c:	bl	1c60 <strlen@plt>
    4d70:	mov	x23, x0
    4d74:	mov	x0, x22
    4d78:	bl	28c8 <libintl_gettext@@Base+0x2a0>
    4d7c:	mov	x19, x23
    4d80:	ldr	w2, [x27, #88]
    4d84:	and	x3, x23, #0xffffffff
    4d88:	str	x3, [x29, #128]
    4d8c:	sub	w1, w2, #0x2
    4d90:	ldr	w23, [x27, #104]
    4d94:	str	w19, [x29, #136]
    4d98:	udiv	w28, w0, w2
    4d9c:	ldr	x26, [x27, #96]
    4da0:	udiv	w3, w0, w1
    4da4:	msub	w28, w28, w2, w0
    4da8:	msub	w3, w3, w1, w0
    4dac:	add	w21, w3, #0x1
    4db0:	sub	w25, w2, w21
    4db4:	sub	w19, w21, w2
    4db8:	b	4e10 <libintl_textdomain@@Base+0xd88>
    4dbc:	ldr	w9, [x27, #24]
    4dc0:	ubfiz	x0, x20, #3, #32
    4dc4:	ldr	x1, [x27, #48]
    4dc8:	add	x10, x1, x0
    4dcc:	ldr	w0, [x1, x0]
    4dd0:	cbz	w9, 4fe8 <libintl_textdomain@@Base+0xf60>
    4dd4:	ldr	w1, [x29, #136]
    4dd8:	rev	w0, w0
    4ddc:	cmp	w1, w0
    4de0:	b.hi	4e00 <libintl_textdomain@@Base+0xd78>  // b.pmore
    4de4:	ldr	w0, [x10, #4]
    4de8:	ldr	x1, [x27]
    4dec:	rev	w0, w0
    4df0:	add	x1, x1, x0
    4df4:	mov	x0, x22
    4df8:	bl	1f00 <strcmp@plt>
    4dfc:	cbz	w0, 4e60 <libintl_textdomain@@Base+0xdd8>
    4e00:	cmp	w25, w28
    4e04:	add	w0, w28, w19
    4e08:	add	w28, w28, w21
    4e0c:	csel	w28, w28, w0, hi  // hi = pmore
    4e10:	ldr	w1, [x26, w28, uxtw #2]
    4e14:	cmp	w23, #0x0
    4e18:	rev	w0, w1
    4e1c:	csel	w1, w0, w1, ne  // ne = any
    4e20:	cbz	w1, 4f50 <libintl_textdomain@@Base+0xec8>
    4e24:	sub	w20, w1, #0x1
    4e28:	cmp	w24, w20
    4e2c:	b.hi	4dbc <libintl_textdomain@@Base+0xd34>  // b.pmore
    4e30:	sub	w0, w20, w24
    4e34:	ldr	x1, [x27, #72]
    4e38:	lsl	x0, x0, #4
    4e3c:	add	x5, x1, x0
    4e40:	ldr	x0, [x1, x0]
    4e44:	ldr	x1, [x29, #128]
    4e48:	cmp	x0, x1
    4e4c:	b.ls	4e00 <libintl_textdomain@@Base+0xd78>  // b.plast
    4e50:	ldr	x1, [x5, #8]
    4e54:	mov	x0, x22
    4e58:	bl	1f00 <strcmp@plt>
    4e5c:	cbnz	w0, 4e00 <libintl_textdomain@@Base+0xd78>
    4e60:	mov	x19, x20
    4e64:	mov	w23, w24
    4e68:	cmp	x19, x23
    4e6c:	b.cc	5008 <libintl_textdomain@@Base+0xf80>  // b.lo, b.ul, b.last
    4e70:	sub	x23, x19, x23
    4e74:	ldr	x0, [x27, #80]
    4e78:	lsl	x23, x23, #4
    4e7c:	add	x1, x0, x23
    4e80:	ldr	x22, [x0, x23]
    4e84:	ldr	x20, [x1, #8]
    4e88:	ldr	w0, [x29, #116]
    4e8c:	cbnz	w0, 503c <libintl_textdomain@@Base+0xfb4>
    4e90:	ldr	x0, [x29, #104]
    4e94:	str	x22, [x0]
    4e98:	b	4f54 <libintl_textdomain@@Base+0xecc>
    4e9c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    4ea0:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    4ea4:	ldr	x0, [x0, #4064]
    4ea8:	cbz	x0, 4ebc <libintl_textdomain@@Base+0xe34>
    4eac:	add	x0, x25, #0x3d0
    4eb0:	add	x0, x0, #0x10
    4eb4:	bl	2090 <pthread_mutex_lock@plt>
    4eb8:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    4ebc:	add	x0, x25, #0x3d0
    4ec0:	add	x1, x29, #0xa0
    4ec4:	mov	x24, x0
    4ec8:	add	x28, x29, #0xa8
    4ecc:	add	x23, x29, #0x98
    4ed0:	mov	x27, #0x0                   	// #0
    4ed4:	ldr	x0, [x0, #64]
    4ed8:	mov	w26, #0x0                   	// #0
    4edc:	str	x1, [x29, #136]
    4ee0:	add	x1, x29, #0x90
    4ee4:	add	x0, x0, #0x8
    4ee8:	str	x1, [x29, #128]
    4eec:	nop
    4ef0:	ldr	x1, [x24, #72]
    4ef4:	stp	x20, x22, [x29, #144]
    4ef8:	str	x0, [x29, #160]
    4efc:	cmp	x1, #0x7
    4f00:	b.ls	51dc <libintl_textdomain@@Base+0x1154>  // b.plast
    4f04:	sub	x8, x1, #0x8
    4f08:	mov	x4, x28
    4f0c:	ldp	x1, x3, [x29, #128]
    4f10:	mov	x2, x23
    4f14:	ldr	x0, [x21, #8]
    4f18:	str	x8, [x29, #168]
    4f1c:	bl	1f10 <iconv@plt>
    4f20:	cmn	x0, #0x1
    4f24:	b.ne	53f4 <libintl_textdomain@@Base+0x136c>  // b.any
    4f28:	bl	2070 <__errno_location@plt>
    4f2c:	ldr	w0, [x0]
    4f30:	cmp	w0, #0x7
    4f34:	b.eq	51dc <libintl_textdomain@@Base+0x1154>  // b.none
    4f38:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    4f3c:	ldr	x23, [x0, #4064]
    4f40:	cbz	x23, 4f50 <libintl_textdomain@@Base+0xec8>
    4f44:	add	x0, x24, #0x10
    4f48:	bl	20a0 <pthread_mutex_unlock@plt>
    4f4c:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    4f50:	mov	x20, #0x0                   	// #0
    4f54:	mov	sp, x29
    4f58:	mov	x0, x20
    4f5c:	ldp	x19, x20, [sp, #16]
    4f60:	ldp	x21, x22, [sp, #32]
    4f64:	ldp	x23, x24, [sp, #48]
    4f68:	ldp	x25, x26, [sp, #64]
    4f6c:	ldp	x27, x28, [sp, #80]
    4f70:	ldp	x29, x30, [sp], #176
    4f74:	ret
    4f78:	mov	w23, w24
    4f7c:	mov	x20, #0x0                   	// #0
    4f80:	mov	x25, x23
    4f84:	nop
    4f88:	cmp	x25, x20
    4f8c:	b.ls	4f50 <libintl_textdomain@@Base+0xec8>  // b.plast
    4f90:	add	x5, x25, x20
    4f94:	ldr	w0, [x27, #24]
    4f98:	ldr	x2, [x27, #48]
    4f9c:	lsr	x19, x5, #1
    4fa0:	cmp	w0, #0x0
    4fa4:	mov	x0, x22
    4fa8:	ldr	x1, [x27]
    4fac:	add	x2, x2, x19, lsl #3
    4fb0:	ldr	w3, [x2, #4]
    4fb4:	rev	w2, w3
    4fb8:	csel	w3, w3, w2, eq  // eq = none
    4fbc:	add	x1, x1, x3
    4fc0:	bl	1f00 <strcmp@plt>
    4fc4:	cmp	w0, #0x0
    4fc8:	b.lt	4fe0 <libintl_textdomain@@Base+0xf58>  // b.tstop
    4fcc:	b.eq	4e68 <libintl_textdomain@@Base+0xde0>  // b.none
    4fd0:	add	x20, x19, #0x1
    4fd4:	cmp	x25, x20
    4fd8:	b.hi	4f90 <libintl_textdomain@@Base+0xf08>  // b.pmore
    4fdc:	b	4f50 <libintl_textdomain@@Base+0xec8>
    4fe0:	mov	x25, x19
    4fe4:	b	4f88 <libintl_textdomain@@Base+0xf00>
    4fe8:	ldr	w1, [x29, #136]
    4fec:	cmp	w1, w0
    4ff0:	b.hi	4e00 <libintl_textdomain@@Base+0xd78>  // b.pmore
    4ff4:	ldr	w0, [x10, #4]
    4ff8:	ldr	x1, [x27]
    4ffc:	b	4df0 <libintl_textdomain@@Base+0xd68>
    5000:	bl	2910 <libintl_gettext@@Base+0x2e8>
    5004:	b	4d50 <libintl_textdomain@@Base+0xcc8>
    5008:	ldr	x1, [x27, #56]
    500c:	lsl	x0, x19, #3
    5010:	ldr	w2, [x27, #24]
    5014:	add	x3, x1, x0
    5018:	ldr	w22, [x1, x0]
    501c:	ldr	x20, [x27]
    5020:	ldr	w0, [x3, #4]
    5024:	cbz	w2, 5108 <libintl_textdomain@@Base+0x1080>
    5028:	rev	w0, w0
    502c:	rev	w22, w22
    5030:	add	x20, x20, x0
    5034:	add	w22, w22, #0x1
    5038:	b	4e88 <libintl_textdomain@@Base+0xe00>
    503c:	ldr	x0, [x29, #96]
    5040:	cbz	x0, 50e4 <libintl_textdomain@@Base+0x105c>
    5044:	ldr	x28, [x0, #16]
    5048:	cbz	x28, 50e4 <libintl_textdomain@@Base+0x105c>
    504c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5050:	ldr	x0, [x0, #4064]
    5054:	cbz	x0, 5064 <libintl_textdomain@@Base+0xfdc>
    5058:	add	x0, x27, #0x80
    505c:	bl	1c90 <pthread_rwlock_rdlock@plt>
    5060:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    5064:	ldr	x23, [x27, #120]
    5068:	add	x25, x23, x23, lsl #1
    506c:	lsl	x25, x25, #3
    5070:	sub	x25, x25, #0x18
    5074:	nop
    5078:	cbz	x23, 5114 <libintl_textdomain@@Base+0x108c>
    507c:	ldr	x0, [x27, #112]
    5080:	sub	x23, x23, #0x1
    5084:	mov	x1, x28
    5088:	add	x21, x0, x25
    508c:	ldr	x0, [x0, x25]
    5090:	sub	x25, x25, #0x18
    5094:	bl	1f00 <strcmp@plt>
    5098:	cbnz	w0, 5078 <libintl_textdomain@@Base+0xff0>
    509c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    50a0:	ldr	x0, [x0, #4064]
    50a4:	cbz	x0, 50b4 <libintl_textdomain@@Base+0x102c>
    50a8:	add	x0, x27, #0x80
    50ac:	bl	1f80 <pthread_rwlock_unlock@plt>
    50b0:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    50b4:	ldr	x0, [x21, #8]
    50b8:	cmn	x0, #0x1
    50bc:	b.eq	4e90 <libintl_textdomain@@Base+0xe08>  // b.none
    50c0:	ldr	x0, [x21, #16]
    50c4:	cbz	x0, 5318 <libintl_textdomain@@Base+0x1290>
    50c8:	cmn	x0, #0x1
    50cc:	b.eq	51a0 <libintl_textdomain@@Base+0x1118>  // b.none
    50d0:	ldr	x0, [x0, x19, lsl #3]
    50d4:	cbz	x0, 4e9c <libintl_textdomain@@Base+0xe14>
    50d8:	ldr	x22, [x0]
    50dc:	add	x20, x0, #0x8
    50e0:	b	4e90 <libintl_textdomain@@Base+0xe08>
    50e4:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    50e8:	add	x1, x25, #0x3d0
    50ec:	ldr	w0, [x25, #976]
    50f0:	cbz	w0, 51a8 <libintl_textdomain@@Base+0x1120>
    50f4:	ldr	x28, [x1, #8]
    50f8:	cbnz	x28, 504c <libintl_textdomain@@Base+0xfc4>
    50fc:	bl	66e0 <libintl_ngettext@@Base+0x9b8>
    5100:	mov	x28, x0
    5104:	b	504c <libintl_textdomain@@Base+0xfc4>
    5108:	add	x20, x20, w0, uxtw
    510c:	add	w22, w22, #0x1
    5110:	b	4e88 <libintl_textdomain@@Base+0xe00>
    5114:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5118:	ldr	x0, [x0, #4064]
    511c:	cbz	x0, 512c <libintl_textdomain@@Base+0x10a4>
    5120:	add	x0, x27, #0x80
    5124:	bl	1f80 <pthread_rwlock_unlock@plt>
    5128:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    512c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5130:	ldr	x0, [x0, #4064]
    5134:	cbz	x0, 5144 <libintl_textdomain@@Base+0x10bc>
    5138:	add	x0, x27, #0x80
    513c:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    5140:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    5144:	ldp	x0, x23, [x27, #112]
    5148:	str	x0, [x29, #136]
    514c:	add	x25, x23, x23, lsl #1
    5150:	lsl	x26, x25, #3
    5154:	sub	x3, x26, #0x18
    5158:	add	x25, x0, x3
    515c:	nop
    5160:	cbz	x23, 522c <libintl_textdomain@@Base+0x11a4>
    5164:	mov	x21, x25
    5168:	sub	x23, x23, #0x1
    516c:	ldr	x0, [x25], #-24
    5170:	mov	x1, x28
    5174:	bl	1f00 <strcmp@plt>
    5178:	cbnz	w0, 5160 <libintl_textdomain@@Base+0x10d8>
    517c:	b	509c <libintl_textdomain@@Base+0x1014>
    5180:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5184:	add	x0, x25, #0x3d0
    5188:	ldr	x23, [x1, #4064]
    518c:	stp	xzr, xzr, [x0, #64]
    5190:	cbz	x23, 51a0 <libintl_textdomain@@Base+0x1118>
    5194:	add	x0, x0, #0x10
    5198:	bl	20a0 <pthread_mutex_unlock@plt>
    519c:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    51a0:	mov	x20, #0xffffffffffffffff    	// #-1
    51a4:	b	4f54 <libintl_textdomain@@Base+0xecc>
    51a8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    51ac:	add	x0, x0, #0x180
    51b0:	bl	2080 <getenv@plt>
    51b4:	mov	x21, x0
    51b8:	cbz	x0, 51c4 <libintl_textdomain@@Base+0x113c>
    51bc:	ldrb	w1, [x0]
    51c0:	cbnz	w1, 5368 <libintl_textdomain@@Base+0x12e0>
    51c4:	add	x0, x25, #0x3d0
    51c8:	ldr	x28, [x0, #8]
    51cc:	mov	w0, #0x1                   	// #1
    51d0:	str	w0, [x25, #976]
    51d4:	cbnz	x28, 504c <libintl_textdomain@@Base+0xfc4>
    51d8:	b	50fc <libintl_textdomain@@Base+0x1074>
    51dc:	cbz	w26, 5214 <libintl_textdomain@@Base+0x118c>
    51e0:	add	w26, w26, #0x1
    51e4:	mov	x0, x27
    51e8:	lsl	w1, w26, #8
    51ec:	sub	w1, w1, w26
    51f0:	lsl	w1, w1, #4
    51f4:	sxtw	x1, w1
    51f8:	str	x1, [x24, #72]
    51fc:	bl	1e70 <realloc@plt>
    5200:	mov	x27, x0
    5204:	cbz	x27, 5180 <libintl_textdomain@@Base+0x10f8>
    5208:	add	x0, x27, #0x8
    520c:	str	x27, [x24, #64]
    5210:	b	4ef0 <libintl_textdomain@@Base+0xe68>
    5214:	mov	x0, #0xff0                 	// #4080
    5218:	mov	w26, #0x1                   	// #1
    521c:	str	x0, [x24, #72]
    5220:	bl	1db0 <malloc@plt>
    5224:	mov	x27, x0
    5228:	b	5204 <libintl_textdomain@@Base+0x117c>
    522c:	ldr	x0, [x29, #136]
    5230:	add	x1, x26, #0x18
    5234:	cbz	x0, 5358 <libintl_textdomain@@Base+0x12d0>
    5238:	bl	1e70 <realloc@plt>
    523c:	mov	x1, x0
    5240:	cbz	x1, 53a0 <libintl_textdomain@@Base+0x1318>
    5244:	str	x1, [x27, #112]
    5248:	mov	x0, x28
    524c:	str	x1, [x29, #136]
    5250:	bl	1e80 <strdup@plt>
    5254:	mov	x28, x0
    5258:	cbz	x0, 53a0 <libintl_textdomain@@Base+0x1318>
    525c:	ldr	x1, [x29, #136]
    5260:	mov	x3, #0xffffffffffffffff    	// #-1
    5264:	ldr	x0, [x29, #120]
    5268:	add	x21, x1, x26
    526c:	str	x28, [x1, x26]
    5270:	add	x4, x29, #0xa8
    5274:	ldr	x1, [x29, #96]
    5278:	str	x3, [x21, #8]
    527c:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5280:	mov	w3, #0x0                   	// #0
    5284:	add	x2, x2, #0x198
    5288:	bl	4d18 <libintl_textdomain@@Base+0xc90>
    528c:	cmn	x0, #0x1
    5290:	b.eq	5398 <libintl_textdomain@@Base+0x1310>  // b.none
    5294:	cbz	x0, 5304 <libintl_textdomain@@Base+0x127c>
    5298:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    529c:	add	x1, x1, #0x190
    52a0:	bl	2030 <strstr@plt>
    52a4:	cbz	x0, 5304 <libintl_textdomain@@Base+0x127c>
    52a8:	add	x25, x0, #0x8
    52ac:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    52b0:	mov	x0, x25
    52b4:	add	x1, x1, #0x1a0
    52b8:	bl	2060 <strcspn@plt>
    52bc:	mov	x2, x0
    52c0:	add	x0, x0, #0x10
    52c4:	mov	x1, x25
    52c8:	and	x0, x0, #0xfffffffffffffff0
    52cc:	sub	sp, sp, x0
    52d0:	mov	x26, sp
    52d4:	mov	x0, x26
    52d8:	bl	1f70 <mempcpy@plt>
    52dc:	mov	x2, x0
    52e0:	mov	w1, #0x2f                  	// #47
    52e4:	mov	x0, x28
    52e8:	strb	wzr, [x2]
    52ec:	bl	1fa0 <strchr@plt>
    52f0:	cbz	x0, 5454 <libintl_textdomain@@Base+0x13cc>
    52f4:	mov	x1, x26
    52f8:	mov	x0, x28
    52fc:	bl	1fe0 <iconv_open@plt>
    5300:	str	x0, [x21, #8]
    5304:	ldr	x0, [x27, #120]
    5308:	str	xzr, [x21, #16]
    530c:	add	x0, x0, #0x1
    5310:	str	x0, [x27, #120]
    5314:	b	509c <libintl_textdomain@@Base+0x1014>
    5318:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    531c:	ldr	x0, [x0, #4064]
    5320:	cbz	x0, 53bc <libintl_textdomain@@Base+0x1334>
    5324:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5328:	add	x0, x25, #0x3d0
    532c:	add	x0, x0, #0x10
    5330:	bl	2090 <pthread_mutex_lock@plt>
    5334:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    5338:	ldr	x0, [x21, #16]
    533c:	cbz	x0, 53bc <libintl_textdomain@@Base+0x1334>
    5340:	add	x0, x25, #0x3d0
    5344:	add	x0, x0, #0x10
    5348:	bl	20a0 <pthread_mutex_unlock@plt>
    534c:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    5350:	ldr	x0, [x21, #16]
    5354:	b	50c8 <libintl_textdomain@@Base+0x1040>
    5358:	mov	x0, x1
    535c:	bl	1db0 <malloc@plt>
    5360:	mov	x1, x0
    5364:	b	5240 <libintl_textdomain@@Base+0x11b8>
    5368:	bl	1c60 <strlen@plt>
    536c:	add	x23, x0, #0x1
    5370:	mov	x0, x23
    5374:	bl	1db0 <malloc@plt>
    5378:	mov	x28, x0
    537c:	cbz	x0, 538c <libintl_textdomain@@Base+0x1304>
    5380:	mov	x2, x23
    5384:	mov	x1, x21
    5388:	bl	1c10 <memcpy@plt>
    538c:	add	x0, x25, #0x3d0
    5390:	str	x28, [x0, #8]
    5394:	b	51cc <libintl_textdomain@@Base+0x1144>
    5398:	mov	x0, x28
    539c:	bl	1f50 <free@plt>
    53a0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    53a4:	ldr	x23, [x0, #4064]
    53a8:	cbz	x23, 51a0 <libintl_textdomain@@Base+0x1118>
    53ac:	add	x0, x27, #0x80
    53b0:	bl	1f80 <pthread_rwlock_unlock@plt>
    53b4:	cbz	w0, 51a0 <libintl_textdomain@@Base+0x1118>
    53b8:	bl	1ec0 <abort@plt>
    53bc:	ldr	w0, [x27, #64]
    53c0:	mov	x1, #0x8                   	// #8
    53c4:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    53c8:	add	w0, w24, w0
    53cc:	bl	1e40 <calloc@plt>
    53d0:	str	x0, [x21, #16]
    53d4:	cbnz	x0, 4ebc <libintl_textdomain@@Base+0xe34>
    53d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    53dc:	mov	x1, #0xffffffffffffffff    	// #-1
    53e0:	str	x1, [x21, #16]
    53e4:	ldr	x0, [x0, #4064]
    53e8:	cbnz	x0, 5340 <libintl_textdomain@@Base+0x12b8>
    53ec:	mov	x20, #0xffffffffffffffff    	// #-1
    53f0:	b	4f54 <libintl_textdomain@@Base+0xecc>
    53f4:	ldp	x0, x1, [x24, #64]
    53f8:	adrp	x4, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    53fc:	ldr	x2, [x29, #160]
    5400:	lsl	x20, x19, #3
    5404:	ldr	x3, [x21, #16]
    5408:	sub	x22, x2, x0
    540c:	sub	x1, x1, x22
    5410:	sub	x22, x22, #0x8
    5414:	ldr	x23, [x4, #4064]
    5418:	and	x4, x1, #0x7
    541c:	str	x22, [x0]
    5420:	add	x2, x2, x4
    5424:	and	x1, x1, #0xfffffffffffffff8
    5428:	str	x0, [x3, x19, lsl #3]
    542c:	stp	x2, x1, [x24, #64]
    5430:	cbz	x23, 50dc <libintl_textdomain@@Base+0x1054>
    5434:	add	x0, x24, #0x10
    5438:	bl	20a0 <pthread_mutex_unlock@plt>
    543c:	cbnz	w0, 53b8 <libintl_textdomain@@Base+0x1330>
    5440:	ldr	x0, [x21, #16]
    5444:	ldr	x0, [x0, x20]
    5448:	add	x20, x0, #0x8
    544c:	ldr	x22, [x0]
    5450:	b	4e90 <libintl_textdomain@@Base+0xe08>
    5454:	mov	x0, x28
    5458:	bl	1c60 <strlen@plt>
    545c:	mov	x25, x0
    5460:	add	x0, x0, #0x1a
    5464:	and	x0, x0, #0xfffffffffffffff0
    5468:	mov	x1, x28
    546c:	sub	sp, sp, x0
    5470:	mov	x2, x25
    5474:	mov	x3, sp
    5478:	mov	x0, x3
    547c:	bl	1c10 <memcpy@plt>
    5480:	add	x4, x0, x25
    5484:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5488:	add	x2, x2, #0x1a8
    548c:	mov	x1, x26
    5490:	ldr	x7, [x2]
    5494:	str	x7, [x0, x25]
    5498:	ldur	w2, [x2, #7]
    549c:	stur	w2, [x4, #7]
    54a0:	bl	1fe0 <iconv_open@plt>
    54a4:	str	x0, [x21, #8]
    54a8:	b	5304 <libintl_textdomain@@Base+0x127c>
    54ac:	nop
    54b0:	stp	x29, x30, [sp, #-288]!
    54b4:	mov	x29, sp
    54b8:	stp	x19, x20, [sp, #16]
    54bc:	stp	x21, x22, [sp, #32]
    54c0:	mov	x22, x1
    54c4:	stp	x23, x24, [sp, #48]
    54c8:	stp	x25, x26, [sp, #64]
    54cc:	stp	x27, x28, [sp, #80]
    54d0:	stp	x4, x2, [x29, #152]
    54d4:	str	w3, [x29, #188]
    54d8:	cbz	x1, 58b4 <libintl_textdomain@@Base+0x182c>
    54dc:	mov	x20, x0
    54e0:	mov	w21, w5
    54e4:	bl	2070 <__errno_location@plt>
    54e8:	mov	x23, x0
    54ec:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    54f0:	ldr	w0, [x0]
    54f4:	str	w0, [x29, #184]
    54f8:	ldr	x1, [x1, #4064]
    54fc:	cbz	x1, 5510 <libintl_textdomain@@Base+0x1488>
    5500:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5504:	add	x0, x0, #0x2d8
    5508:	bl	1c90 <pthread_rwlock_rdlock@plt>
    550c:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    5510:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5514:	cmp	x20, #0x0
    5518:	str	w21, [x29, #232]
    551c:	ldr	x0, [x0, #840]
    5520:	str	xzr, [x29, #256]
    5524:	str	x22, [x29, #280]
    5528:	csel	x20, x0, x20, eq  // eq = none
    552c:	str	x20, [x29, #224]
    5530:	cmp	w21, #0x3
    5534:	b.eq	5b04 <libintl_textdomain@@Base+0x1a7c>  // b.none
    5538:	b.le	58d8 <libintl_textdomain@@Base+0x1850>
    553c:	cmp	w21, #0x5
    5540:	b.eq	5a48 <libintl_textdomain@@Base+0x19c0>  // b.none
    5544:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5548:	cmp	w21, #0x6
    554c:	add	x25, x25, #0x1c0
    5550:	b.eq	556c <libintl_textdomain@@Base+0x14e4>  // b.none
    5554:	cmp	w21, #0x4
    5558:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    555c:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5560:	add	x0, x0, #0x208
    5564:	add	x25, x25, #0x1d8
    5568:	csel	x25, x25, x0, eq  // eq = none
    556c:	mov	x1, x25
    5570:	mov	w0, w21
    5574:	bl	6a90 <libintl_set_relocation_prefix@@Base+0x210>
    5578:	mov	x2, x0
    557c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5580:	cmp	x2, #0x0
    5584:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5588:	add	x1, x1, #0x198
    558c:	ldr	x0, [x0, #4064]
    5590:	csel	x1, x1, x2, eq  // eq = none
    5594:	str	x1, [x29, #144]
    5598:	str	x1, [x29, #240]
    559c:	cbz	x0, 55b4 <libintl_textdomain@@Base+0x152c>
    55a0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    55a4:	add	x0, x0, #0x2d8
    55a8:	add	x0, x0, #0x38
    55ac:	bl	1c90 <pthread_rwlock_rdlock@plt>
    55b0:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    55b4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    55b8:	add	x1, x0, #0x3d0
    55bc:	add	x1, x1, #0x50
    55c0:	add	x0, x29, #0xe0
    55c4:	adrp	x2, 4000 <_nl_expand_alias@@Base+0x118>
    55c8:	add	x2, x2, #0xc18
    55cc:	bl	1d60 <tfind@plt>
    55d0:	str	x0, [x29, #176]
    55d4:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    55d8:	ldr	x1, [x1, #4064]
    55dc:	cbz	x1, 55f4 <libintl_textdomain@@Base+0x156c>
    55e0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    55e4:	add	x0, x0, #0x2d8
    55e8:	add	x0, x0, #0x38
    55ec:	bl	1f80 <pthread_rwlock_unlock@plt>
    55f0:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    55f4:	ldr	x1, [x29, #176]
    55f8:	cbz	x1, 5618 <libintl_textdomain@@Base+0x1590>
    55fc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5600:	ldr	x1, [x1]
    5604:	ldr	x0, [x0, #4032]
    5608:	ldr	w2, [x1, #24]
    560c:	ldr	w0, [x0]
    5610:	cmp	w2, w0
    5614:	b.eq	5954 <libintl_textdomain@@Base+0x18cc>  // b.none
    5618:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    561c:	add	x19, x0, #0x3d0
    5620:	ldr	w0, [x19, #88]
    5624:	cbz	w0, 592c <libintl_textdomain@@Base+0x18a4>
    5628:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    562c:	ldr	x0, [x0, #4000]
    5630:	ldr	x19, [x0]
    5634:	cbnz	x19, 5648 <libintl_textdomain@@Base+0x15c0>
    5638:	b	5a60 <libintl_textdomain@@Base+0x19d8>
    563c:	b.lt	5a84 <libintl_textdomain@@Base+0x19fc>  // b.tstop
    5640:	ldr	x19, [x19]
    5644:	cbz	x19, 5a60 <libintl_textdomain@@Base+0x19d8>
    5648:	add	x1, x19, #0x18
    564c:	mov	x0, x20
    5650:	bl	1f00 <strcmp@plt>
    5654:	cmp	w0, #0x0
    5658:	cbnz	w0, 563c <libintl_textdomain@@Base+0x15b4>
    565c:	ldr	x24, [x19, #8]
    5660:	ldrb	w0, [x24]
    5664:	cmp	w0, #0x2f
    5668:	b.eq	56e8 <libintl_textdomain@@Base+0x1660>  // b.none
    566c:	mov	x0, x24
    5670:	mov	x27, #0x1002                	// #4098
    5674:	bl	1c60 <strlen@plt>
    5678:	add	x26, x0, #0x1
    567c:	b	5698 <libintl_textdomain@@Base+0x1610>
    5680:	ldr	w0, [x23]
    5684:	cmp	w0, #0x22
    5688:	b.ne	584c <libintl_textdomain@@Base+0x17c4>  // b.any
    568c:	lsr	x0, x27, #1
    5690:	add	x0, x0, #0x20
    5694:	add	x27, x27, x0
    5698:	add	x0, x27, x26
    569c:	str	wzr, [x23]
    56a0:	add	x0, x0, #0xf
    56a4:	mov	x1, x27
    56a8:	and	x0, x0, #0xfffffffffffffff0
    56ac:	sub	sp, sp, x0
    56b0:	mov	x28, sp
    56b4:	mov	x0, x28
    56b8:	bl	1c40 <getcwd@plt>
    56bc:	cbz	x0, 5680 <libintl_textdomain@@Base+0x15f8>
    56c0:	mov	x0, x28
    56c4:	bl	1c60 <strlen@plt>
    56c8:	mov	x2, x0
    56cc:	mov	w3, #0x2f                  	// #47
    56d0:	add	x0, x28, x0
    56d4:	mov	x1, x24
    56d8:	add	x0, x0, #0x1
    56dc:	mov	x24, x28
    56e0:	strb	w3, [x28, x2]
    56e4:	bl	1fd0 <strcpy@plt>
    56e8:	mov	x1, x25
    56ec:	mov	w0, w21
    56f0:	mov	w26, #0x0                   	// #0
    56f4:	bl	6a90 <libintl_set_relocation_prefix@@Base+0x210>
    56f8:	mov	x28, x0
    56fc:	cbz	x0, 5aa8 <libintl_textdomain@@Base+0x1a20>
    5700:	ldrb	w0, [x28]
    5704:	cmp	w0, #0x43
    5708:	b.ne	590c <libintl_textdomain@@Base+0x1884>  // b.any
    570c:	ldrb	w0, [x28, #1]
    5710:	cbnz	w0, 590c <libintl_textdomain@@Base+0x1884>
    5714:	mov	x0, x20
    5718:	bl	1c60 <strlen@plt>
    571c:	mov	x1, x0
    5720:	mov	x0, x25
    5724:	mov	x26, x1
    5728:	str	x1, [x29, #128]
    572c:	bl	1c60 <strlen@plt>
    5730:	add	x0, x0, x26
    5734:	add	x2, x26, #0x3a
    5738:	add	x0, x0, #0x14
    573c:	str	x2, [x29, #136]
    5740:	add	x2, x29, #0xd8
    5744:	and	x0, x0, #0xfffffffffffffff0
    5748:	str	x2, [x29, #200]
    574c:	adrp	x2, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5750:	add	x2, x2, #0x3d0
    5754:	sub	sp, sp, x0
    5758:	mov	x1, x25
    575c:	mov	x25, x26
    5760:	mov	x26, sp
    5764:	mov	x0, x26
    5768:	str	x2, [x29, #168]
    576c:	bl	1d70 <stpcpy@plt>
    5770:	mov	w3, #0x2f                  	// #47
    5774:	strh	w3, [x0], #1
    5778:	mov	x1, x20
    577c:	mov	x2, x25
    5780:	bl	1f70 <mempcpy@plt>
    5784:	mov	x1, x0
    5788:	mov	w2, #0x6d2e                	// #27950
    578c:	mov	x0, x28
    5790:	movk	w2, #0x6f, lsl #16
    5794:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5798:	str	w2, [x1]
    579c:	add	x25, x25, #0x230
    57a0:	bl	1c60 <strlen@plt>
    57a4:	add	x0, x0, #0x10
    57a8:	and	x0, x0, #0xfffffffffffffff0
    57ac:	str	w21, [x29, #192]
    57b0:	sub	sp, sp, x0
    57b4:	mov	x27, sp
    57b8:	mov	x0, x27
    57bc:	mov	x27, x28
    57c0:	mov	x28, x0
    57c4:	nop
    57c8:	ldrb	w0, [x27]
    57cc:	cmp	w0, #0x3a
    57d0:	b.eq	599c <libintl_textdomain@@Base+0x1914>  // b.none
    57d4:	cbnz	w0, 59a4 <libintl_textdomain@@Base+0x191c>
    57d8:	mov	w0, #0x43                  	// #67
    57dc:	strh	w0, [x28]
    57e0:	ldrb	w0, [x28]
    57e4:	cmp	w0, #0x43
    57e8:	b.ne	57f4 <libintl_textdomain@@Base+0x176c>  // b.any
    57ec:	ldrb	w0, [x28, #1]
    57f0:	cbz	w0, 584c <libintl_textdomain@@Base+0x17c4>
    57f4:	mov	x1, x25
    57f8:	mov	x0, x28
    57fc:	bl	1f00 <strcmp@plt>
    5800:	cbz	w0, 584c <libintl_textdomain@@Base+0x17c4>
    5804:	mov	x3, x19
    5808:	mov	x2, x26
    580c:	mov	x1, x28
    5810:	mov	x0, x24
    5814:	bl	2638 <libintl_gettext@@Base+0x10>
    5818:	mov	x21, x0
    581c:	cbz	x0, 57c8 <libintl_textdomain@@Base+0x1740>
    5820:	ldr	x4, [x29, #200]
    5824:	mov	w3, #0x1                   	// #1
    5828:	mov	x2, x22
    582c:	mov	x1, x19
    5830:	bl	4d18 <libintl_textdomain@@Base+0xc90>
    5834:	mov	x3, x0
    5838:	cbz	x0, 59e4 <libintl_textdomain@@Base+0x195c>
    583c:	mov	x5, x21
    5840:	cmn	x0, #0x1
    5844:	ldr	w21, [x29, #192]
    5848:	b.ne	5b2c <libintl_textdomain@@Base+0x1aa4>  // b.any
    584c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5850:	ldr	x0, [x0, #4064]
    5854:	cbz	x0, 5868 <libintl_textdomain@@Base+0x17e0>
    5858:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    585c:	add	x0, x0, #0x2d8
    5860:	bl	1f80 <pthread_rwlock_unlock@plt>
    5864:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    5868:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    586c:	add	x0, x0, #0x3d0
    5870:	ldr	w0, [x0, #88]
    5874:	cmp	w0, #0x1
    5878:	b.eq	5894 <libintl_textdomain@@Base+0x180c>  // b.none
    587c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5880:	add	x0, x0, #0x238
    5884:	bl	2080 <getenv@plt>
    5888:	cbz	x0, 5894 <libintl_textdomain@@Base+0x180c>
    588c:	ldrb	w1, [x0]
    5890:	cbnz	w1, 5acc <libintl_textdomain@@Base+0x1a44>
    5894:	ldr	w0, [x29, #188]
    5898:	cmp	w0, #0x0
    589c:	ldr	w0, [x29, #184]
    58a0:	str	w0, [x23]
    58a4:	ldr	x0, [x29, #152]
    58a8:	ccmp	x0, #0x1, #0x4, ne  // ne = any
    58ac:	ldr	x0, [x29, #160]
    58b0:	csel	x22, x22, x0, eq  // eq = none
    58b4:	mov	sp, x29
    58b8:	mov	x0, x22
    58bc:	ldp	x19, x20, [sp, #16]
    58c0:	ldp	x21, x22, [sp, #32]
    58c4:	ldp	x23, x24, [sp, #48]
    58c8:	ldp	x25, x26, [sp, #64]
    58cc:	ldp	x27, x28, [sp, #80]
    58d0:	ldp	x29, x30, [sp], #288
    58d4:	ret
    58d8:	cmp	w21, #0x1
    58dc:	b.eq	5a54 <libintl_textdomain@@Base+0x19cc>  // b.none
    58e0:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    58e4:	cmp	w21, #0x2
    58e8:	add	x25, x25, #0x1b8
    58ec:	b.eq	556c <libintl_textdomain@@Base+0x14e4>  // b.none
    58f0:	cmp	w21, #0x0
    58f4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    58f8:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    58fc:	add	x0, x0, #0x208
    5900:	add	x25, x25, #0x1f8
    5904:	csel	x25, x25, x0, eq  // eq = none
    5908:	b	556c <libintl_textdomain@@Base+0x14e4>
    590c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5910:	add	x0, x0, #0x220
    5914:	bl	2080 <getenv@plt>
    5918:	cbz	x0, 5988 <libintl_textdomain@@Base+0x1900>
    591c:	ldrb	w1, [x0]
    5920:	cbz	w1, 5988 <libintl_textdomain@@Base+0x1900>
    5924:	mov	x28, x0
    5928:	b	5714 <libintl_textdomain@@Base+0x168c>
    592c:	bl	1d00 <getuid@plt>
    5930:	mov	w24, w0
    5934:	bl	1cb0 <geteuid@plt>
    5938:	cmp	w24, w0
    593c:	b.eq	5ba0 <libintl_textdomain@@Base+0x1b18>  // b.none
    5940:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5944:	add	x0, x0, #0x3d0
    5948:	mov	w1, #0x1                   	// #1
    594c:	str	w1, [x0, #88]
    5950:	b	5628 <libintl_textdomain@@Base+0x15a0>
    5954:	ldr	w0, [x29, #188]
    5958:	ldr	x22, [x1, #40]
    595c:	cbnz	w0, 5ae4 <libintl_textdomain@@Base+0x1a5c>
    5960:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5964:	ldr	x0, [x0, #4064]
    5968:	cbz	x0, 597c <libintl_textdomain@@Base+0x18f4>
    596c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5970:	add	x0, x0, #0x2d8
    5974:	bl	1f80 <pthread_rwlock_unlock@plt>
    5978:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    597c:	ldr	w0, [x29, #184]
    5980:	str	w0, [x23]
    5984:	b	58b4 <libintl_textdomain@@Base+0x182c>
    5988:	cbz	w26, 5714 <libintl_textdomain@@Base+0x168c>
    598c:	bl	6a88 <libintl_set_relocation_prefix@@Base+0x208>
    5990:	cmp	x0, #0x0
    5994:	csel	x28, x28, x0, eq  // eq = none
    5998:	b	5714 <libintl_textdomain@@Base+0x168c>
    599c:	add	x27, x27, #0x1
    59a0:	b	57c8 <libintl_textdomain@@Base+0x1740>
    59a4:	mov	x1, x28
    59a8:	strb	w0, [x1], #1
    59ac:	ldrb	w0, [x27, #1]!
    59b0:	cmp	w0, #0x3a
    59b4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    59b8:	b.ne	59a8 <libintl_textdomain@@Base+0x1920>  // b.any
    59bc:	ldr	x0, [x29, #168]
    59c0:	strb	wzr, [x1]
    59c4:	ldr	w0, [x0, #88]
    59c8:	cmp	w0, #0x1
    59cc:	b.ne	57e0 <libintl_textdomain@@Base+0x1758>  // b.any
    59d0:	mov	x0, x28
    59d4:	mov	w1, #0x2f                  	// #47
    59d8:	bl	1fa0 <strchr@plt>
    59dc:	cbnz	x0, 57c8 <libintl_textdomain@@Base+0x1740>
    59e0:	b	57e0 <libintl_textdomain@@Base+0x1758>
    59e4:	ldr	x0, [x21, #32]
    59e8:	cbz	x0, 57c8 <libintl_textdomain@@Base+0x1740>
    59ec:	add	x1, x21, #0x20
    59f0:	mov	x8, #0x0                   	// #0
    59f4:	stp	x25, x21, [x29, #104]
    59f8:	mov	x25, x22
    59fc:	mov	x21, x1
    5a00:	mov	x22, x19
    5a04:	str	x24, [x29, #120]
    5a08:	mov	x24, x8
    5a0c:	ldr	x19, [x29, #200]
    5a10:	b	5a24 <libintl_textdomain@@Base+0x199c>
    5a14:	cbnz	x0, 5b10 <libintl_textdomain@@Base+0x1a88>
    5a18:	add	x24, x24, #0x1
    5a1c:	ldr	x0, [x21, x24, lsl #3]
    5a20:	cbz	x0, 5b8c <libintl_textdomain@@Base+0x1b04>
    5a24:	mov	x4, x19
    5a28:	mov	x2, x25
    5a2c:	mov	x1, x22
    5a30:	mov	w3, #0x1                   	// #1
    5a34:	bl	4d18 <libintl_textdomain@@Base+0xc90>
    5a38:	cmn	x0, #0x1
    5a3c:	b.ne	5a14 <libintl_textdomain@@Base+0x198c>  // b.any
    5a40:	mov	x22, x25
    5a44:	b	584c <libintl_textdomain@@Base+0x17c4>
    5a48:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5a4c:	add	x25, x25, #0x1c8
    5a50:	b	556c <libintl_textdomain@@Base+0x14e4>
    5a54:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5a58:	add	x25, x25, #0x210
    5a5c:	b	556c <libintl_textdomain@@Base+0x14e4>
    5a60:	mov	x1, x25
    5a64:	mov	w0, w21
    5a68:	adrp	x24, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5a6c:	bl	6a90 <libintl_set_relocation_prefix@@Base+0x210>
    5a70:	add	x24, x24, #0x258
    5a74:	mov	x28, x0
    5a78:	mov	w26, #0x0                   	// #0
    5a7c:	cbnz	x0, 5700 <libintl_textdomain@@Base+0x1678>
    5a80:	b	5aa8 <libintl_textdomain@@Base+0x1a20>
    5a84:	mov	x1, x25
    5a88:	mov	w0, w21
    5a8c:	adrp	x24, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5a90:	bl	6a90 <libintl_set_relocation_prefix@@Base+0x210>
    5a94:	add	x24, x24, #0x258
    5a98:	mov	x28, x0
    5a9c:	mov	x19, #0x0                   	// #0
    5aa0:	mov	w26, #0x0                   	// #0
    5aa4:	cbnz	x0, 5700 <libintl_textdomain@@Base+0x1678>
    5aa8:	mov	x1, x25
    5aac:	mov	w0, w21
    5ab0:	bl	6c80 <libintl_set_relocation_prefix@@Base+0x400>
    5ab4:	mov	x28, x0
    5ab8:	cbnz	x0, 5700 <libintl_textdomain@@Base+0x1678>
    5abc:	bl	6cf0 <libintl_set_relocation_prefix@@Base+0x470>
    5ac0:	mov	w26, #0x1                   	// #1
    5ac4:	mov	x28, x0
    5ac8:	b	5700 <libintl_textdomain@@Base+0x1678>
    5acc:	ldr	w4, [x29, #188]
    5ad0:	mov	x1, x20
    5ad4:	ldr	x3, [x29, #160]
    5ad8:	mov	x2, x22
    5adc:	bl	6e38 <libintl_set_relocation_prefix@@Base+0x5b8>
    5ae0:	b	5894 <libintl_textdomain@@Base+0x180c>
    5ae4:	ldr	x0, [x1, #32]
    5ae8:	mov	x2, x22
    5aec:	ldr	x3, [x1, #48]
    5af0:	ldr	x0, [x0, #16]
    5af4:	ldr	x1, [x29, #152]
    5af8:	bl	4c98 <libintl_textdomain@@Base+0xc10>
    5afc:	mov	x22, x0
    5b00:	b	5960 <libintl_textdomain@@Base+0x18d8>
    5b04:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5b08:	add	x25, x25, #0x1e8
    5b0c:	b	556c <libintl_textdomain@@Base+0x14e4>
    5b10:	ldr	x5, [x29, #112]
    5b14:	mov	w1, w24
    5b18:	mov	x3, x0
    5b1c:	ldr	w21, [x29, #192]
    5b20:	mov	x22, x25
    5b24:	add	x0, x5, w1, sxtw #3
    5b28:	ldr	x5, [x0, #32]
    5b2c:	ldr	x0, [x29, #176]
    5b30:	cbz	x0, 5bc0 <libintl_textdomain@@Base+0x1b38>
    5b34:	ldr	x0, [x29, #176]
    5b38:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5b3c:	ldr	x2, [x29, #216]
    5b40:	ldr	x1, [x1, #4032]
    5b44:	ldr	x0, [x0]
    5b48:	ldr	w1, [x1]
    5b4c:	str	w1, [x0, #24]
    5b50:	stp	x5, x3, [x0, #32]
    5b54:	str	x2, [x0, #48]
    5b58:	ldr	w0, [x29, #184]
    5b5c:	mov	x22, x3
    5b60:	str	w0, [x23]
    5b64:	ldr	w0, [x29, #188]
    5b68:	cbnz	w0, 5cf0 <libintl_textdomain@@Base+0x1c68>
    5b6c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5b70:	ldr	x0, [x0, #4064]
    5b74:	cbz	x0, 58b4 <libintl_textdomain@@Base+0x182c>
    5b78:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5b7c:	add	x0, x0, #0x2d8
    5b80:	bl	1f80 <pthread_rwlock_unlock@plt>
    5b84:	cbz	w0, 58b4 <libintl_textdomain@@Base+0x182c>
    5b88:	bl	1ec0 <abort@plt>
    5b8c:	mov	x19, x22
    5b90:	mov	x22, x25
    5b94:	ldr	x25, [x29, #104]
    5b98:	ldr	x24, [x29, #120]
    5b9c:	b	57c8 <libintl_textdomain@@Base+0x1740>
    5ba0:	bl	1f60 <getgid@plt>
    5ba4:	mov	w24, w0
    5ba8:	bl	1ca0 <getegid@plt>
    5bac:	cmp	w24, w0
    5bb0:	b.ne	5940 <libintl_textdomain@@Base+0x18b8>  // b.any
    5bb4:	mov	w0, #0xffffffff            	// #-1
    5bb8:	str	w0, [x19, #88]
    5bbc:	b	5628 <libintl_textdomain@@Base+0x15a0>
    5bc0:	mov	x0, x22
    5bc4:	stp	x3, x5, [x29, #192]
    5bc8:	bl	1c60 <strlen@plt>
    5bcc:	ldr	x25, [x29, #144]
    5bd0:	add	x19, x0, #0x1
    5bd4:	mov	x0, x25
    5bd8:	bl	1c60 <strlen@plt>
    5bdc:	ldr	x1, [x29, #136]
    5be0:	add	x0, x0, x19
    5be4:	add	x0, x0, x1
    5be8:	bl	1db0 <malloc@plt>
    5bec:	mov	x24, x0
    5bf0:	ldp	x3, x5, [x29, #192]
    5bf4:	cbz	x0, 5b58 <libintl_textdomain@@Base+0x1ad0>
    5bf8:	ldr	x0, [x29, #128]
    5bfc:	mov	x2, x19
    5c00:	mov	x1, x22
    5c04:	add	x19, x0, #0x1
    5c08:	add	x0, x24, #0x38
    5c0c:	bl	1f70 <mempcpy@plt>
    5c10:	mov	x22, x0
    5c14:	mov	x2, x19
    5c18:	mov	x1, x20
    5c1c:	add	x19, x0, x19
    5c20:	bl	1c10 <memcpy@plt>
    5c24:	mov	x1, x25
    5c28:	mov	x0, x19
    5c2c:	bl	1fd0 <strcpy@plt>
    5c30:	str	x22, [x24]
    5c34:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5c38:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5c3c:	ldp	x3, x5, [x29, #192]
    5c40:	str	w21, [x24, #8]
    5c44:	ldr	x1, [x1, #4032]
    5c48:	str	x19, [x24, #16]
    5c4c:	ldr	x0, [x0, #4064]
    5c50:	stp	x5, x3, [x24, #32]
    5c54:	ldr	w1, [x1]
    5c58:	ldr	x2, [x29, #216]
    5c5c:	str	w1, [x24, #24]
    5c60:	str	x2, [x24, #48]
    5c64:	cbz	x0, 5c80 <libintl_textdomain@@Base+0x1bf8>
    5c68:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5c6c:	add	x0, x0, #0x2d8
    5c70:	add	x0, x0, #0x38
    5c74:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    5c78:	ldp	x3, x5, [x29, #192]
    5c7c:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    5c80:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5c84:	add	x1, x0, #0x3d0
    5c88:	adrp	x0, 4000 <_nl_expand_alias@@Base+0x118>
    5c8c:	add	x1, x1, #0x50
    5c90:	add	x2, x0, #0xc18
    5c94:	mov	x0, x24
    5c98:	stp	x3, x5, [x29, #192]
    5c9c:	bl	1e10 <tsearch@plt>
    5ca0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    5ca4:	mov	x19, x0
    5ca8:	ldr	x1, [x1, #4064]
    5cac:	ldp	x3, x5, [x29, #192]
    5cb0:	cbz	x1, 5ccc <libintl_textdomain@@Base+0x1c44>
    5cb4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    5cb8:	add	x0, x0, #0x2d8
    5cbc:	add	x0, x0, #0x38
    5cc0:	bl	1f80 <pthread_rwlock_unlock@plt>
    5cc4:	ldp	x3, x5, [x29, #192]
    5cc8:	cbnz	w0, 5b88 <libintl_textdomain@@Base+0x1b00>
    5ccc:	cbz	x19, 5cdc <libintl_textdomain@@Base+0x1c54>
    5cd0:	ldr	x0, [x19]
    5cd4:	cmp	x0, x24
    5cd8:	b.eq	5b58 <libintl_textdomain@@Base+0x1ad0>  // b.none
    5cdc:	mov	x0, x24
    5ce0:	stp	x3, x5, [x29, #192]
    5ce4:	bl	1f50 <free@plt>
    5ce8:	ldp	x3, x5, [x29, #192]
    5cec:	b	5b58 <libintl_textdomain@@Base+0x1ad0>
    5cf0:	mov	x2, x3
    5cf4:	ldr	x0, [x5, #16]
    5cf8:	ldr	x1, [x29, #152]
    5cfc:	ldr	x3, [x29, #216]
    5d00:	bl	4c98 <libintl_textdomain@@Base+0xc10>
    5d04:	mov	x22, x0
    5d08:	b	5b6c <libintl_textdomain@@Base+0x1ae4>
    5d0c:	nop

0000000000005d10 <libintl_dcngettext@@Base>:
    5d10:	mov	w5, w4
    5d14:	mov	x4, x3
    5d18:	mov	w3, #0x1                   	// #1
    5d1c:	b	54b0 <libintl_textdomain@@Base+0x1428>

0000000000005d20 <libintl_dngettext@@Base>:
    5d20:	mov	w4, #0x5                   	// #5
    5d24:	b	1e00 <libintl_dcngettext@plt>

0000000000005d28 <libintl_ngettext@@Base>:
    5d28:	mov	x4, x1
    5d2c:	mov	x3, x2
    5d30:	mov	x1, x0
    5d34:	mov	x2, x4
    5d38:	mov	x0, #0x0                   	// #0
    5d3c:	mov	w4, #0x5                   	// #5
    5d40:	b	1e00 <libintl_dcngettext@plt>
    5d44:	nop
    5d48:	cbz	x0, 5db0 <libintl_ngettext@@Base+0x88>
    5d4c:	stp	x29, x30, [sp, #-32]!
    5d50:	mov	x29, sp
    5d54:	str	x19, [sp, #16]
    5d58:	mov	x19, x0
    5d5c:	ldr	w0, [x0]
    5d60:	cmp	w0, #0x2
    5d64:	b.eq	5d90 <libintl_ngettext@@Base+0x68>  // b.none
    5d68:	cmp	w0, #0x3
    5d6c:	b.eq	5d88 <libintl_ngettext@@Base+0x60>  // b.none
    5d70:	cmp	w0, #0x1
    5d74:	b.eq	5d98 <libintl_ngettext@@Base+0x70>  // b.none
    5d78:	mov	x0, x19
    5d7c:	ldr	x19, [sp, #16]
    5d80:	ldp	x29, x30, [sp], #32
    5d84:	b	1f50 <free@plt>
    5d88:	ldr	x0, [x19, #24]
    5d8c:	bl	5d48 <libintl_ngettext@@Base+0x20>
    5d90:	ldr	x0, [x19, #16]
    5d94:	bl	5d48 <libintl_ngettext@@Base+0x20>
    5d98:	ldr	x0, [x19, #8]
    5d9c:	bl	5d48 <libintl_ngettext@@Base+0x20>
    5da0:	mov	x0, x19
    5da4:	ldr	x19, [sp, #16]
    5da8:	ldp	x29, x30, [sp], #32
    5dac:	b	1f50 <free@plt>
    5db0:	ret
    5db4:	nop
    5db8:	stp	x29, x30, [sp, #-48]!
    5dbc:	mov	x29, sp
    5dc0:	stp	x21, x22, [sp, #32]
    5dc4:	mov	w22, w1
    5dc8:	cbz	w0, 5e60 <libintl_ngettext@@Base+0x138>
    5dcc:	stp	x19, x20, [sp, #16]
    5dd0:	sub	w19, w0, #0x1
    5dd4:	mov	w21, w0
    5dd8:	sxtw	x19, w19
    5ddc:	mov	x20, x2
    5de0:	mov	x3, x19
    5de4:	b	5dec <libintl_ngettext@@Base+0xc4>
    5de8:	b.eq	5e28 <libintl_ngettext@@Base+0x100>  // b.none
    5dec:	ldr	x4, [x20, x3, lsl #3]
    5df0:	sub	x3, x3, #0x1
    5df4:	cmn	w3, #0x1
    5df8:	cbnz	x4, 5de8 <libintl_ngettext@@Base+0xc0>
    5dfc:	nop
    5e00:	ldr	x0, [x20, x19, lsl #3]
    5e04:	sub	x19, x19, #0x1
    5e08:	bl	5d48 <libintl_ngettext@@Base+0x20>
    5e0c:	cmn	w19, #0x1
    5e10:	b.ne	5e00 <libintl_ngettext@@Base+0xd8>  // b.any
    5e14:	ldp	x19, x20, [sp, #16]
    5e18:	mov	x0, #0x0                   	// #0
    5e1c:	ldp	x21, x22, [sp, #32]
    5e20:	ldp	x29, x30, [sp], #48
    5e24:	ret
    5e28:	mov	x0, #0x20                  	// #32
    5e2c:	bl	1db0 <malloc@plt>
    5e30:	cbz	x0, 5e00 <libintl_ngettext@@Base+0xd8>
    5e34:	add	x2, x0, #0x8
    5e38:	stp	w21, w22, [x0]
    5e3c:	ldr	x1, [x20, x19, lsl #3]
    5e40:	str	x1, [x2, x19, lsl #3]
    5e44:	sub	x19, x19, #0x1
    5e48:	cmn	w19, #0x1
    5e4c:	b.ne	5e3c <libintl_ngettext@@Base+0x114>  // b.any
    5e50:	ldp	x19, x20, [sp, #16]
    5e54:	ldp	x21, x22, [sp, #32]
    5e58:	ldp	x29, x30, [sp], #48
    5e5c:	ret
    5e60:	mov	x0, #0x20                  	// #32
    5e64:	bl	1db0 <malloc@plt>
    5e68:	cbz	x0, 5e18 <libintl_ngettext@@Base+0xf0>
    5e6c:	stp	wzr, w22, [x0]
    5e70:	ldp	x21, x22, [sp, #32]
    5e74:	ldp	x29, x30, [sp], #48
    5e78:	ret
    5e7c:	nop
    5e80:	sub	sp, sp, #0x890
    5e84:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    5e88:	add	x1, sp, #0xc0
    5e8c:	stp	x29, x30, [sp]
    5e90:	mov	x29, sp
    5e94:	stp	x25, x26, [sp, #64]
    5e98:	add	x25, x3, #0x3a0
    5e9c:	mov	w26, #0x0                   	// #0
    5ea0:	stp	x19, x20, [sp, #16]
    5ea4:	mov	x19, x1
    5ea8:	add	x20, sp, #0x250
    5eac:	stp	x23, x24, [sp, #48]
    5eb0:	add	x23, x25, #0x128
    5eb4:	stp	x27, x28, [sp, #80]
    5eb8:	mov	x28, x1
    5ebc:	str	x0, [sp, #128]
    5ec0:	add	x0, x25, #0x1e0
    5ec4:	stp	x21, x22, [sp, #32]
    5ec8:	mov	x21, #0xc8                  	// #200
    5ecc:	mov	w22, #0xfffffffe            	// #-2
    5ed0:	str	x20, [sp, #96]
    5ed4:	str	wzr, [sp, #108]
    5ed8:	str	x1, [sp, #112]
    5edc:	str	x0, [sp, #120]
    5ee0:	add	x0, sp, #0xa8
    5ee4:	str	x0, [sp, #136]
    5ee8:	strh	wzr, [sp, #192]
    5eec:	ldrsb	w24, [x25, w26, sxtw]
    5ef0:	sxtw	x5, w26
    5ef4:	cmn	w24, #0xa
    5ef8:	mov	w2, w24
    5efc:	b.eq	604c <libintl_ngettext@@Base+0x324>  // b.none
    5f00:	cmn	w22, #0x2
    5f04:	b.eq	627c <libintl_ngettext@@Base+0x554>  // b.none
    5f08:	cmp	w22, #0x0
    5f0c:	b.le	6200 <libintl_ngettext@@Base+0x4d8>
    5f10:	add	x0, x25, #0x20
    5f14:	ldrb	w0, [x0, w22, sxtw]
    5f18:	add	w2, w24, w0
    5f1c:	cmp	w2, #0x36
    5f20:	b.hi	604c <libintl_ngettext@@Base+0x324>  // b.pmore
    5f24:	ldrsb	w1, [x23, w2, sxtw]
    5f28:	cmp	w1, w0
    5f2c:	b.ne	604c <libintl_ngettext@@Base+0x324>  // b.any
    5f30:	add	x0, x25, #0x160
    5f34:	ldrb	w26, [x0, w2, sxtw]
    5f38:	cbnz	w26, 6240 <libintl_ngettext@@Base+0x518>
    5f3c:	ldrsb	w0, [x25, #424]
    5f40:	mov	x24, x20
    5f44:	ldr	x5, [x20, #8]
    5f48:	mov	w1, #0xfffffff0            	// #-16
    5f4c:	ldrsh	w2, [x19]
    5f50:	add	x20, x24, #0x8
    5f54:	str	x5, [x24, #8]
    5f58:	add	w0, w2, w0
    5f5c:	cmp	w0, #0x36
    5f60:	b.hi	5f70 <libintl_ngettext@@Base+0x248>  // b.pmore
    5f64:	ldrsb	w5, [x23, w0, sxtw]
    5f68:	cmp	w5, w2
    5f6c:	b.eq	6270 <libintl_ngettext@@Base+0x548>  // b.none
    5f70:	ldr	x0, [sp, #120]
    5f74:	ldrsb	w26, [x0, w1, sxtw]
    5f78:	lsl	x1, x21, #1
    5f7c:	strh	w26, [x19, #2]
    5f80:	sub	x0, x1, #0x2
    5f84:	add	x19, x19, #0x2
    5f88:	add	x0, x28, x0
    5f8c:	cmp	x19, x0
    5f90:	b.cc	6038 <libintl_ngettext@@Base+0x310>  // b.lo, b.ul, b.last
    5f94:	sub	x19, x19, x28
    5f98:	mov	x0, #0x270f                	// #9999
    5f9c:	cmp	x21, x0
    5fa0:	asr	x20, x19, #1
    5fa4:	add	x20, x20, #0x1
    5fa8:	b.hi	6580 <libintl_ngettext@@Base+0x858>  // b.pmore
    5fac:	mov	x21, #0x2710                	// #10000
    5fb0:	cmp	x1, x21
    5fb4:	csel	x21, x1, x21, ls  // ls = plast
    5fb8:	add	x0, x21, x21, lsl #2
    5fbc:	lsl	x0, x0, #1
    5fc0:	add	x0, x0, #0x7
    5fc4:	bl	1db0 <malloc@plt>
    5fc8:	mov	x27, x0
    5fcc:	cbz	x0, 6580 <libintl_ngettext@@Base+0x858>
    5fd0:	add	x3, x0, x21, lsl #1
    5fd4:	add	x2, x19, #0x2
    5fd8:	mov	x1, x28
    5fdc:	str	x3, [sp, #144]
    5fe0:	lsl	x20, x20, #3
    5fe4:	lsl	x24, x21, #1
    5fe8:	bl	1c10 <memcpy@plt>
    5fec:	ldr	x1, [sp, #96]
    5ff0:	mov	x2, x20
    5ff4:	add	x0, x27, x21, lsl #1
    5ff8:	bl	1c10 <memcpy@plt>
    5ffc:	ldr	x0, [sp, #112]
    6000:	cmp	x28, x0
    6004:	b.eq	6010 <libintl_ngettext@@Base+0x2e8>  // b.none
    6008:	mov	x0, x28
    600c:	bl	1f50 <free@plt>
    6010:	sub	x24, x24, #0x2
    6014:	add	x19, x27, x19
    6018:	add	x24, x27, x24
    601c:	sub	x20, x20, #0x8
    6020:	add	x0, x27, x21, lsl #1
    6024:	cmp	x19, x24
    6028:	add	x20, x0, x20
    602c:	b.cs	65a4 <libintl_ngettext@@Base+0x87c>  // b.hs, b.nlast
    6030:	mov	x28, x27
    6034:	str	x0, [sp, #96]
    6038:	cmp	w26, #0x9
    603c:	b.ne	5eec <libintl_ngettext@@Base+0x1c4>  // b.any
    6040:	mov	x19, x28
    6044:	mov	w20, #0x0                   	// #0
    6048:	b	61c8 <libintl_ngettext@@Base+0x4a0>
    604c:	add	x0, x25, #0x198
    6050:	ldrb	w2, [x0, x5]
    6054:	cbnz	w2, 60d4 <libintl_ngettext@@Base+0x3ac>
    6058:	ldr	w0, [sp, #108]
    605c:	cbz	w0, 62b8 <libintl_ngettext@@Base+0x590>
    6060:	ldr	w0, [sp, #108]
    6064:	cmp	w0, #0x3
    6068:	b.ne	6078 <libintl_ngettext@@Base+0x350>  // b.any
    606c:	cmp	w22, #0x0
    6070:	b.gt	6268 <libintl_ngettext@@Base+0x540>
    6074:	b.eq	6424 <libintl_ngettext@@Base+0x6fc>  // b.none
    6078:	add	x1, x25, #0x160
    607c:	b	6094 <libintl_ngettext@@Base+0x36c>
    6080:	cmp	x19, x28
    6084:	b.eq	61c4 <libintl_ngettext@@Base+0x49c>  // b.none
    6088:	ldrsh	w0, [x19, #-2]!
    608c:	sub	x20, x20, #0x8
    6090:	ldrsb	w24, [x25, w0, sxtw]
    6094:	cmn	w24, #0xa
    6098:	b.eq	6080 <libintl_ngettext@@Base+0x358>  // b.none
    609c:	add	w24, w24, #0x1
    60a0:	cmp	w24, #0x36
    60a4:	b.hi	6080 <libintl_ngettext@@Base+0x358>  // b.pmore
    60a8:	ldrsb	w0, [x23, w24, sxtw]
    60ac:	cmp	w0, #0x1
    60b0:	b.ne	6080 <libintl_ngettext@@Base+0x358>  // b.any
    60b4:	ldrb	w26, [x1, w24, sxtw]
    60b8:	cbz	w26, 6080 <libintl_ngettext@@Base+0x358>
    60bc:	mov	w0, #0x3                   	// #3
    60c0:	str	w0, [sp, #108]
    60c4:	ldr	x0, [sp, #152]
    60c8:	add	x20, x20, #0x8
    60cc:	str	x0, [x20]
    60d0:	b	5f78 <libintl_ngettext@@Base+0x250>
    60d4:	add	x0, x25, #0x1c0
    60d8:	mov	w1, #0x1                   	// #1
    60dc:	cmp	w2, #0x8
    60e0:	ldrb	w0, [x0, w2, sxtw]
    60e4:	sub	w5, w1, w0
    60e8:	ldr	x5, [x20, w5, sxtw #3]
    60ec:	b.eq	620c <libintl_ngettext@@Base+0x4e4>  // b.none
    60f0:	b.hi	6128 <libintl_ngettext@@Base+0x400>  // b.pmore
    60f4:	cmp	w2, #0x5
    60f8:	b.eq	6310 <libintl_ngettext@@Base+0x5e8>  // b.none
    60fc:	b.hi	620c <libintl_ngettext@@Base+0x4e4>  // b.pmore
    6100:	cmp	w2, #0x3
    6104:	b.eq	6328 <libintl_ngettext@@Base+0x600>  // b.none
    6108:	cmp	w2, #0x4
    610c:	b.ne	619c <libintl_ngettext@@Base+0x474>  // b.any
    6110:	mov	w1, #0xf                   	// #15
    6114:	mov	w0, #0x2                   	// #2
    6118:	ldur	x6, [x20, #-16]
    611c:	ldr	x5, [x20]
    6120:	ldr	x2, [sp, #136]
    6124:	b	6220 <libintl_ngettext@@Base+0x4f8>
    6128:	cmp	w2, #0xb
    612c:	b.eq	6364 <libintl_ngettext@@Base+0x63c>  // b.none
    6130:	b.ls	615c <libintl_ngettext@@Base+0x434>  // b.plast
    6134:	cmp	w2, #0xc
    6138:	b.eq	638c <libintl_ngettext@@Base+0x664>  // b.none
    613c:	cmp	w2, #0xd
    6140:	b.ne	65b0 <libintl_ngettext@@Base+0x888>  // b.any
    6144:	sub	x19, x19, #0x6
    6148:	sub	x24, x20, #0x18
    614c:	mov	w1, #0x2                   	// #2
    6150:	mov	w0, #0xffffffff            	// #-1
    6154:	ldur	x5, [x20, #-8]
    6158:	b	5f4c <libintl_ngettext@@Base+0x224>
    615c:	cmp	w2, #0x9
    6160:	b.eq	620c <libintl_ngettext@@Base+0x4e4>  // b.none
    6164:	cmp	w2, #0xa
    6168:	b.ne	65b0 <libintl_ngettext@@Base+0x888>  // b.any
    616c:	mov	x24, x20
    6170:	mov	w0, w1
    6174:	ldr	x2, [sp, #136]
    6178:	mov	w1, #0x2                   	// #2
    617c:	ldr	x5, [x24], #-16
    6180:	str	x5, [sp, #168]
    6184:	sub	x19, x19, #0x4
    6188:	bl	5db8 <libintl_ngettext@@Base+0x90>
    618c:	mov	x5, x0
    6190:	mov	w1, #0x2                   	// #2
    6194:	mov	w0, #0xffffffff            	// #-1
    6198:	b	5f4c <libintl_ngettext@@Base+0x224>
    619c:	cmp	w2, #0x2
    61a0:	b.ne	65b0 <libintl_ngettext@@Base+0x888>  // b.any
    61a4:	ldr	x2, [x20]
    61a8:	cbz	x2, 6568 <libintl_ngettext@@Base+0x840>
    61ac:	ldr	x3, [sp, #128]
    61b0:	sub	x24, x20, #0x8
    61b4:	sub	x19, x19, #0x2
    61b8:	mov	w0, #0xfffffff6            	// #-10
    61bc:	str	x2, [x3, #8]
    61c0:	b	5f4c <libintl_ngettext@@Base+0x224>
    61c4:	mov	w20, #0x1                   	// #1
    61c8:	ldr	x0, [sp, #112]
    61cc:	cmp	x19, x0
    61d0:	b.eq	61dc <libintl_ngettext@@Base+0x4b4>  // b.none
    61d4:	mov	x0, x19
    61d8:	bl	1f50 <free@plt>
    61dc:	mov	w0, w20
    61e0:	ldp	x29, x30, [sp]
    61e4:	ldp	x19, x20, [sp, #16]
    61e8:	ldp	x21, x22, [sp, #32]
    61ec:	ldp	x23, x24, [sp, #48]
    61f0:	ldp	x25, x26, [sp, #64]
    61f4:	ldp	x27, x28, [sp, #80]
    61f8:	add	sp, sp, #0x890
    61fc:	ret
    6200:	mov	w0, #0x0                   	// #0
    6204:	mov	w22, #0x0                   	// #0
    6208:	b	5f1c <libintl_ngettext@@Base+0x1f4>
    620c:	ldur	w1, [x20, #-8]
    6210:	mov	w0, #0x2                   	// #2
    6214:	ldur	x6, [x20, #-16]
    6218:	ldr	x5, [x20]
    621c:	ldr	x2, [sp, #136]
    6220:	stp	x6, x5, [sp, #168]
    6224:	bl	5db8 <libintl_ngettext@@Base+0x90>
    6228:	sub	x24, x20, #0x18
    622c:	mov	x5, x0
    6230:	sub	x19, x19, #0x6
    6234:	mov	w1, #0x2                   	// #2
    6238:	mov	w0, #0xffffffff            	// #-1
    623c:	b	5f4c <libintl_ngettext@@Base+0x224>
    6240:	ldr	w1, [sp, #108]
    6244:	add	x20, x20, #0x8
    6248:	mov	w22, #0xfffffffe            	// #-2
    624c:	cmp	w1, #0x0
    6250:	cset	w0, ne  // ne = any
    6254:	sub	w0, w1, w0
    6258:	str	w0, [sp, #108]
    625c:	ldr	x0, [sp, #152]
    6260:	str	x0, [x20]
    6264:	b	5f78 <libintl_ngettext@@Base+0x250>
    6268:	mov	w22, #0xfffffffe            	// #-2
    626c:	b	6078 <libintl_ngettext@@Base+0x350>
    6270:	add	x1, x25, #0x160
    6274:	ldrb	w26, [x1, w0, sxtw]
    6278:	b	5f78 <libintl_ngettext@@Base+0x250>
    627c:	ldr	x0, [sp, #128]
    6280:	ldr	x1, [x0]
    6284:	b	629c <libintl_ngettext@@Base+0x574>
    6288:	cmp	w0, #0x20
    628c:	mov	x6, x1
    6290:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    6294:	add	x1, x1, #0x1
    6298:	b.ne	62d4 <libintl_ngettext@@Base+0x5ac>  // b.any
    629c:	ldrb	w0, [x1]
    62a0:	cbnz	w0, 6288 <libintl_ngettext@@Base+0x560>
    62a4:	ldr	x3, [sp, #128]
    62a8:	mov	w0, #0x0                   	// #0
    62ac:	mov	w22, #0x0                   	// #0
    62b0:	str	x1, [x3]
    62b4:	b	5f1c <libintl_ngettext@@Base+0x1f4>
    62b8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    62bc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    62c0:	add	x1, x1, #0x280
    62c4:	mov	w2, #0x5                   	// #5
    62c8:	add	x0, x0, #0x290
    62cc:	bl	1ee0 <dcgettext@plt>
    62d0:	b	6078 <libintl_ngettext@@Base+0x350>
    62d4:	sub	w7, w0, #0xa
    62d8:	mov	w22, w0
    62dc:	cmp	w7, #0x72
    62e0:	b.ls	62f8 <libintl_ngettext@@Base+0x5d0>  // b.plast
    62e4:	ldr	x2, [sp, #128]
    62e8:	mov	w0, #0x1                   	// #1
    62ec:	mov	w22, #0x100                 	// #256
    62f0:	str	x1, [x2]
    62f4:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    62f8:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    62fc:	add	x8, x8, #0x2b8
    6300:	ldrh	w3, [x8, w7, uxtw #1]
    6304:	adr	x4, 6310 <libintl_ngettext@@Base+0x5e8>
    6308:	add	x3, x4, w3, sxth #2
    630c:	br	x3
    6310:	mov	w1, #0xe                   	// #14
    6314:	mov	w0, #0x2                   	// #2
    6318:	ldur	x6, [x20, #-16]
    631c:	ldr	x5, [x20]
    6320:	ldr	x2, [sp, #136]
    6324:	b	6220 <libintl_ngettext@@Base+0x4f8>
    6328:	mov	w0, w2
    632c:	mov	w1, #0x10                  	// #16
    6330:	ldur	x7, [x20, #-32]
    6334:	sub	x24, x20, #0x28
    6338:	ldur	x6, [x20, #-16]
    633c:	stp	x7, x6, [sp, #168]
    6340:	sub	x19, x19, #0xa
    6344:	ldr	x5, [x20]
    6348:	str	x5, [sp, #184]
    634c:	ldr	x2, [sp, #136]
    6350:	bl	5db8 <libintl_ngettext@@Base+0x90>
    6354:	mov	x5, x0
    6358:	mov	w1, #0x2                   	// #2
    635c:	mov	w0, #0xffffffff            	// #-1
    6360:	b	5f4c <libintl_ngettext@@Base+0x224>
    6364:	mov	w1, #0x0                   	// #0
    6368:	mov	x2, #0x0                   	// #0
    636c:	mov	w0, #0x0                   	// #0
    6370:	bl	5db8 <libintl_ngettext@@Base+0x90>
    6374:	sub	x24, x20, #0x8
    6378:	mov	x5, x0
    637c:	sub	x19, x19, #0x2
    6380:	mov	w1, #0x2                   	// #2
    6384:	mov	w0, #0xffffffff            	// #-1
    6388:	b	5f4c <libintl_ngettext@@Base+0x224>
    638c:	mov	x2, #0x0                   	// #0
    6390:	mov	w0, #0x0                   	// #0
    6394:	sub	x19, x19, #0x2
    6398:	bl	5db8 <libintl_ngettext@@Base+0x90>
    639c:	sub	x24, x20, #0x8
    63a0:	mov	x5, x0
    63a4:	cbz	x0, 6574 <libintl_ngettext@@Base+0x84c>
    63a8:	ldr	x2, [x20]
    63ac:	mov	w1, #0x2                   	// #2
    63b0:	mov	w0, #0xffffffff            	// #-1
    63b4:	str	x2, [x5, #8]
    63b8:	b	5f4c <libintl_ngettext@@Base+0x224>
    63bc:	ldrb	w6, [x6, #1]
    63c0:	sub	w0, w0, #0x30
    63c4:	sub	w2, w6, #0x30
    63c8:	sxtw	x0, w0
    63cc:	and	w6, w2, #0xff
    63d0:	cmp	w6, #0x9
    63d4:	b.hi	63f8 <libintl_ngettext@@Base+0x6d0>  // b.pmore
    63d8:	ldrb	w6, [x1, #1]!
    63dc:	sxtw	x7, w2
    63e0:	add	x0, x0, x0, lsl #2
    63e4:	sub	w2, w6, #0x30
    63e8:	and	w6, w2, #0xff
    63ec:	add	x0, x7, x0, lsl #1
    63f0:	cmp	w6, #0x9
    63f4:	b.ls	63d8 <libintl_ngettext@@Base+0x6b0>  // b.plast
    63f8:	ldr	x2, [sp, #128]
    63fc:	mov	w22, #0x106                 	// #262
    6400:	str	x0, [sp, #152]
    6404:	mov	w0, #0xb                   	// #11
    6408:	str	x1, [x2]
    640c:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    6410:	add	x2, x25, #0x20
    6414:	ldrb	w0, [x2, w0, sxtw]
    6418:	ldr	x2, [sp, #128]
    641c:	str	x1, [x2]
    6420:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    6424:	mov	x19, x28
    6428:	mov	w20, #0x1                   	// #1
    642c:	b	61c8 <libintl_ngettext@@Base+0x4a0>
    6430:	ldr	x1, [sp, #128]
    6434:	mov	w0, #0x0                   	// #0
    6438:	mov	w22, #0x0                   	// #0
    643c:	str	x6, [x1]
    6440:	b	5f1c <libintl_ngettext@@Base+0x1f4>
    6444:	ldrb	w2, [x6, #1]
    6448:	cmp	w2, w0
    644c:	b.ne	62e4 <libintl_ngettext@@Base+0x5bc>  // b.any
    6450:	add	x2, x25, #0x20
    6454:	add	x1, x6, #0x2
    6458:	ldrb	w0, [x2, w0, sxtw]
    645c:	b	6418 <libintl_ngettext@@Base+0x6f0>
    6460:	mov	x2, #0x3                   	// #3
    6464:	ldr	x3, [sp, #152]
    6468:	mov	w0, #0x9                   	// #9
    646c:	mov	w22, #0x105                 	// #261
    6470:	bfxil	x3, x2, #0, #32
    6474:	str	x3, [sp, #152]
    6478:	b	6418 <libintl_ngettext@@Base+0x6f0>
    647c:	ldrb	w2, [x6, #1]
    6480:	mov	w0, #0xa                   	// #10
    6484:	mov	w22, #0x21                  	// #33
    6488:	cmp	w2, #0x3d
    648c:	b.ne	6418 <libintl_ngettext@@Base+0x6f0>  // b.any
    6490:	mov	x0, #0xd                   	// #13
    6494:	ldr	x1, [sp, #152]
    6498:	add	x6, x6, #0x2
    649c:	mov	w22, #0x102                 	// #258
    64a0:	bfxil	x1, x0, #0, #32
    64a4:	str	x1, [sp, #152]
    64a8:	ldr	x1, [sp, #128]
    64ac:	mov	w0, #0x6                   	// #6
    64b0:	str	x6, [x1]
    64b4:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    64b8:	mov	x2, #0x5                   	// #5
    64bc:	b	6464 <libintl_ngettext@@Base+0x73c>
    64c0:	ldrb	w0, [x6, #1]
    64c4:	cmp	w0, #0x3d
    64c8:	b.ne	62e4 <libintl_ngettext@@Base+0x5bc>  // b.any
    64cc:	mov	x0, #0xc                   	// #12
    64d0:	b	6494 <libintl_ngettext@@Base+0x76c>
    64d4:	ldrb	w0, [x6, #1]
    64d8:	mov	x2, #0x8                   	// #8
    64dc:	cmp	w0, #0x3d
    64e0:	b.eq	65d0 <libintl_ngettext@@Base+0x8a8>  // b.none
    64e4:	ldr	x3, [sp, #152]
    64e8:	mov	w0, #0x7                   	// #7
    64ec:	mov	w22, #0x103                 	// #259
    64f0:	bfxil	x3, x2, #0, #32
    64f4:	str	x3, [sp, #152]
    64f8:	b	6418 <libintl_ngettext@@Base+0x6f0>
    64fc:	ldrb	w0, [x6, #1]
    6500:	mov	x2, #0x9                   	// #9
    6504:	cmp	w0, #0x3d
    6508:	b.ne	64e4 <libintl_ngettext@@Base+0x7bc>  // b.any
    650c:	mov	x0, #0xb                   	// #11
    6510:	ldr	x1, [sp, #152]
    6514:	add	x6, x6, #0x2
    6518:	mov	w22, #0x103                 	// #259
    651c:	bfxil	x1, x0, #0, #32
    6520:	str	x1, [sp, #152]
    6524:	ldr	x1, [sp, #128]
    6528:	mov	w0, #0x7                   	// #7
    652c:	str	x6, [x1]
    6530:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    6534:	mov	x2, #0x7                   	// #7
    6538:	ldr	x3, [sp, #152]
    653c:	mov	w0, #0x8                   	// #8
    6540:	mov	w22, #0x104                 	// #260
    6544:	bfxil	x3, x2, #0, #32
    6548:	str	x3, [sp, #152]
    654c:	ldr	x2, [sp, #128]
    6550:	str	x1, [x2]
    6554:	b	5f18 <libintl_ngettext@@Base+0x1f0>
    6558:	mov	x2, #0x6                   	// #6
    655c:	b	6538 <libintl_ngettext@@Base+0x810>
    6560:	mov	x2, #0x4                   	// #4
    6564:	b	6464 <libintl_ngettext@@Base+0x73c>
    6568:	mov	x19, x28
    656c:	mov	w20, w1
    6570:	b	61c8 <libintl_ngettext@@Base+0x4a0>
    6574:	mov	w1, #0x2                   	// #2
    6578:	mov	w0, #0xffffffff            	// #-1
    657c:	b	5f4c <libintl_ngettext@@Base+0x224>
    6580:	mov	x19, x28
    6584:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6588:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    658c:	add	x1, x1, #0x2a0
    6590:	mov	w2, #0x5                   	// #5
    6594:	mov	w20, #0x2                   	// #2
    6598:	add	x0, x0, #0x290
    659c:	bl	1ee0 <dcgettext@plt>
    65a0:	b	61c8 <libintl_ngettext@@Base+0x4a0>
    65a4:	mov	x19, x27
    65a8:	mov	w20, #0x1                   	// #1
    65ac:	b	61d4 <libintl_ngettext@@Base+0x4ac>
    65b0:	add	x1, x25, #0x1d0
    65b4:	add	x6, x25, #0x1b8
    65b8:	sub	x24, x20, w0, uxtb #3
    65bc:	sub	x19, x19, w0, uxtb #1
    65c0:	ldrb	w1, [x1, w2, sxtw]
    65c4:	sub	w1, w1, #0x10
    65c8:	ldrsb	w0, [x6, w1, sxtw]
    65cc:	b	5f4c <libintl_ngettext@@Base+0x224>
    65d0:	mov	x0, #0xa                   	// #10
    65d4:	b	6510 <libintl_ngettext@@Base+0x7e8>
    65d8:	stp	x29, x30, [sp, #-96]!
    65dc:	mov	x29, sp
    65e0:	stp	x21, x22, [sp, #32]
    65e4:	mov	x22, x1
    65e8:	mov	x21, x2
    65ec:	cbz	x0, 66bc <libintl_ngettext@@Base+0x994>
    65f0:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    65f4:	add	x1, x1, #0x588
    65f8:	stp	x19, x20, [sp, #16]
    65fc:	mov	x19, x0
    6600:	str	x23, [sp, #48]
    6604:	bl	2030 <strstr@plt>
    6608:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    660c:	mov	x23, x0
    6610:	add	x1, x1, #0x590
    6614:	mov	x0, x19
    6618:	bl	2030 <strstr@plt>
    661c:	cmp	x23, #0x0
    6620:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    6624:	b.eq	66b4 <libintl_ngettext@@Base+0x98c>  // b.none
    6628:	ldrb	w19, [x0, #9]
    662c:	add	x20, x0, #0x9
    6630:	cbz	w19, 66b4 <libintl_ngettext@@Base+0x98c>
    6634:	bl	1f20 <__ctype_b_loc@plt>
    6638:	ldr	x1, [x0]
    663c:	b	6648 <libintl_ngettext@@Base+0x920>
    6640:	ldrb	w19, [x20, #1]!
    6644:	cbz	w19, 66b4 <libintl_ngettext@@Base+0x98c>
    6648:	ubfiz	x0, x19, #1, #8
    664c:	ldrh	w3, [x1, x0]
    6650:	tbnz	w3, #13, 6640 <libintl_ngettext@@Base+0x918>
    6654:	sub	w19, w19, #0x30
    6658:	and	w19, w19, #0xff
    665c:	cmp	w19, #0x9
    6660:	b.hi	66b4 <libintl_ngettext@@Base+0x98c>  // b.pmore
    6664:	add	x1, sp, #0x48
    6668:	mov	x0, x20
    666c:	mov	w2, #0xa                   	// #10
    6670:	bl	1c50 <strtoul@plt>
    6674:	ldr	x1, [sp, #72]
    6678:	cmp	x1, x20
    667c:	b.eq	66b4 <libintl_ngettext@@Base+0x98c>  // b.none
    6680:	str	x0, [x21]
    6684:	add	x23, x23, #0x7
    6688:	add	x0, sp, #0x50
    668c:	str	x23, [sp, #80]
    6690:	bl	5e80 <libintl_ngettext@@Base+0x158>
    6694:	cbnz	w0, 66b4 <libintl_ngettext@@Base+0x98c>
    6698:	ldr	x0, [sp, #88]
    669c:	ldp	x19, x20, [sp, #16]
    66a0:	ldr	x23, [sp, #48]
    66a4:	str	x0, [x22]
    66a8:	ldp	x21, x22, [sp, #32]
    66ac:	ldp	x29, x30, [sp], #96
    66b0:	ret
    66b4:	ldp	x19, x20, [sp, #16]
    66b8:	ldr	x23, [sp, #48]
    66bc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    66c0:	add	x0, x0, #0xd88
    66c4:	str	x0, [x22]
    66c8:	mov	x0, #0x2                   	// #2
    66cc:	str	x0, [x21]
    66d0:	ldp	x21, x22, [sp, #32]
    66d4:	ldp	x29, x30, [sp], #96
    66d8:	ret
    66dc:	nop
    66e0:	stp	x29, x30, [sp, #-16]!
    66e4:	mov	w0, #0xe                   	// #14
    66e8:	mov	x29, sp
    66ec:	bl	1d90 <nl_langinfo@plt>
    66f0:	cbz	x0, 6710 <libintl_ngettext@@Base+0x9e8>
    66f4:	ldrb	w2, [x0]
    66f8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    66fc:	add	x1, x1, #0x5e0
    6700:	cmp	w2, #0x0
    6704:	csel	x0, x1, x0, eq  // eq = none
    6708:	ldp	x29, x30, [sp], #16
    670c:	ret
    6710:	ldp	x29, x30, [sp], #16
    6714:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6718:	add	x0, x0, #0x5e0
    671c:	ret
    6720:	stp	x29, x30, [sp, #-64]!
    6724:	mov	x29, sp
    6728:	str	x21, [sp, #32]
    672c:	add	x21, sp, #0x38
    6730:	stp	x19, x20, [sp, #16]
    6734:	mov	x20, x0
    6738:	mov	x0, x21
    673c:	bl	1c30 <pthread_rwlockattr_init@plt>
    6740:	mov	w19, w0
    6744:	cbz	w0, 675c <libintl_ngettext@@Base+0xa34>
    6748:	mov	w0, w19
    674c:	ldp	x19, x20, [sp, #16]
    6750:	ldr	x21, [sp, #32]
    6754:	ldp	x29, x30, [sp], #64
    6758:	ret
    675c:	mov	x0, x21
    6760:	mov	w1, #0x2                   	// #2
    6764:	bl	1cd0 <pthread_rwlockattr_setkind_np@plt>
    6768:	mov	w19, w0
    676c:	cbz	w0, 678c <libintl_ngettext@@Base+0xa64>
    6770:	mov	x0, x21
    6774:	bl	2040 <pthread_rwlockattr_destroy@plt>
    6778:	mov	w0, w19
    677c:	ldp	x19, x20, [sp, #16]
    6780:	ldr	x21, [sp, #32]
    6784:	ldp	x29, x30, [sp], #64
    6788:	ret
    678c:	mov	x0, x20
    6790:	mov	x1, x21
    6794:	bl	1cc0 <pthread_rwlock_init@plt>
    6798:	mov	w19, w0
    679c:	b	6770 <libintl_ngettext@@Base+0xa48>
    67a0:	stp	x29, x30, [sp, #-64]!
    67a4:	mov	x29, sp
    67a8:	str	x21, [sp, #32]
    67ac:	add	x21, sp, #0x38
    67b0:	stp	x19, x20, [sp, #16]
    67b4:	mov	x20, x0
    67b8:	mov	x0, x21
    67bc:	bl	2000 <pthread_mutexattr_init@plt>
    67c0:	mov	w19, w0
    67c4:	cbz	w0, 67dc <libintl_ngettext@@Base+0xab4>
    67c8:	mov	w0, w19
    67cc:	ldp	x19, x20, [sp, #16]
    67d0:	ldr	x21, [sp, #32]
    67d4:	ldp	x29, x30, [sp], #64
    67d8:	ret
    67dc:	mov	x0, x21
    67e0:	mov	w1, #0x1                   	// #1
    67e4:	bl	1c80 <pthread_mutexattr_settype@plt>
    67e8:	mov	w19, w0
    67ec:	cbnz	w0, 6824 <libintl_ngettext@@Base+0xafc>
    67f0:	mov	x0, x20
    67f4:	mov	x1, x21
    67f8:	bl	1e90 <pthread_mutex_init@plt>
    67fc:	mov	w19, w0
    6800:	mov	x0, x21
    6804:	cbnz	w19, 6840 <libintl_ngettext@@Base+0xb18>
    6808:	bl	2020 <pthread_mutexattr_destroy@plt>
    680c:	mov	w19, w0
    6810:	mov	w0, w19
    6814:	ldp	x19, x20, [sp, #16]
    6818:	ldr	x21, [sp, #32]
    681c:	ldp	x29, x30, [sp], #64
    6820:	ret
    6824:	mov	x0, x21
    6828:	bl	2020 <pthread_mutexattr_destroy@plt>
    682c:	mov	w0, w19
    6830:	ldp	x19, x20, [sp, #16]
    6834:	ldr	x21, [sp, #32]
    6838:	ldp	x29, x30, [sp], #64
    683c:	ret
    6840:	bl	2020 <pthread_mutexattr_destroy@plt>
    6844:	mov	w0, w19
    6848:	ldp	x19, x20, [sp, #16]
    684c:	ldr	x21, [sp, #32]
    6850:	ldp	x29, x30, [sp], #64
    6854:	ret
    6858:	mov	x1, x0
    685c:	ldrb	w0, [x0]
    6860:	cbnz	w0, 6874 <libintl_ngettext@@Base+0xb4c>
    6864:	mov	w2, #0xffffffff            	// #-1
    6868:	mov	w0, #0x1                   	// #1
    686c:	strb	w2, [x1]
    6870:	ret
    6874:	mov	w0, #0x0                   	// #0
    6878:	ret
    687c:	nop

0000000000006880 <libintl_set_relocation_prefix@@Base>:
    6880:	stp	x29, x30, [sp, #-80]!
    6884:	cmp	x0, #0x0
    6888:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    688c:	mov	x29, sp
    6890:	stp	x19, x20, [sp, #16]
    6894:	adrp	x19, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    6898:	b.eq	68b8 <libintl_set_relocation_prefix@@Base+0x38>  // b.none
    689c:	mov	x20, x1
    68a0:	adrp	x19, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    68a4:	stp	x21, x22, [sp, #32]
    68a8:	mov	x21, x0
    68ac:	bl	1f00 <strcmp@plt>
    68b0:	cbnz	w0, 68cc <libintl_set_relocation_prefix@@Base+0x4c>
    68b4:	ldp	x21, x22, [sp, #32]
    68b8:	add	x0, x19, #0x430
    68bc:	ldp	x19, x20, [sp, #16]
    68c0:	stp	xzr, xzr, [x0, #16]
    68c4:	ldp	x29, x30, [sp], #80
    68c8:	ret
    68cc:	str	x25, [sp, #64]
    68d0:	add	x25, x19, #0x430
    68d4:	mov	x0, x21
    68d8:	stp	x23, x24, [sp, #48]
    68dc:	bl	1c60 <strlen@plt>
    68e0:	mov	x22, x0
    68e4:	mov	x0, x20
    68e8:	str	x22, [x19, #1072]
    68ec:	bl	1c60 <strlen@plt>
    68f0:	mov	x23, x0
    68f4:	add	x0, x22, x0
    68f8:	add	x0, x0, #0x2
    68fc:	str	x23, [x25, #8]
    6900:	bl	1db0 <malloc@plt>
    6904:	mov	x24, x0
    6908:	cbz	x0, 694c <libintl_set_relocation_prefix@@Base+0xcc>
    690c:	add	x2, x22, #0x1
    6910:	mov	x1, x21
    6914:	add	x19, x0, x2
    6918:	bl	1c10 <memcpy@plt>
    691c:	add	x2, x23, #0x1
    6920:	mov	x1, x20
    6924:	mov	x0, x19
    6928:	str	x24, [x25, #16]
    692c:	bl	1c10 <memcpy@plt>
    6930:	str	x19, [x25, #24]
    6934:	ldp	x19, x20, [sp, #16]
    6938:	ldp	x21, x22, [sp, #32]
    693c:	ldp	x23, x24, [sp, #48]
    6940:	ldr	x25, [sp, #64]
    6944:	ldp	x29, x30, [sp], #80
    6948:	ret
    694c:	ldp	x21, x22, [sp, #32]
    6950:	ldp	x23, x24, [sp, #48]
    6954:	ldr	x25, [sp, #64]
    6958:	b	68b8 <libintl_set_relocation_prefix@@Base+0x38>
    695c:	nop
    6960:	stp	x29, x30, [sp, #-64]!
    6964:	adrp	x2, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    6968:	mov	x29, sp
    696c:	stp	x19, x20, [sp, #16]
    6970:	add	x20, x2, #0x430
    6974:	mov	x19, x0
    6978:	ldr	x1, [x20, #16]
    697c:	cbz	x1, 69b4 <libintl_set_relocation_prefix@@Base+0x134>
    6980:	stp	x21, x22, [sp, #32]
    6984:	ldr	x22, [x20, #24]
    6988:	cbz	x22, 69b0 <libintl_set_relocation_prefix@@Base+0x130>
    698c:	ldr	x21, [x2, #1072]
    6990:	mov	x2, x21
    6994:	bl	1de0 <strncmp@plt>
    6998:	cbnz	w0, 69b0 <libintl_set_relocation_prefix@@Base+0x130>
    699c:	ldrb	w0, [x19, x21]
    69a0:	add	x21, x19, x21
    69a4:	cbz	w0, 69c8 <libintl_set_relocation_prefix@@Base+0x148>
    69a8:	cmp	w0, #0x2f
    69ac:	b.eq	69f8 <libintl_set_relocation_prefix@@Base+0x178>  // b.none
    69b0:	ldp	x21, x22, [sp, #32]
    69b4:	mov	x20, x19
    69b8:	mov	x0, x20
    69bc:	ldp	x19, x20, [sp, #16]
    69c0:	ldp	x29, x30, [sp], #64
    69c4:	ret
    69c8:	mov	x0, x22
    69cc:	bl	1c60 <strlen@plt>
    69d0:	add	x21, x0, #0x1
    69d4:	mov	x0, x21
    69d8:	bl	1db0 <malloc@plt>
    69dc:	mov	x20, x0
    69e0:	cbz	x0, 69b0 <libintl_set_relocation_prefix@@Base+0x130>
    69e4:	mov	x2, x21
    69e8:	mov	x1, x22
    69ec:	bl	1c10 <memcpy@plt>
    69f0:	ldp	x21, x22, [sp, #32]
    69f4:	b	69b8 <libintl_set_relocation_prefix@@Base+0x138>
    69f8:	mov	x0, x21
    69fc:	stp	x23, x24, [sp, #48]
    6a00:	bl	1c60 <strlen@plt>
    6a04:	ldr	x24, [x20, #8]
    6a08:	mov	x23, x0
    6a0c:	add	x0, x24, #0x1
    6a10:	add	x0, x0, x23
    6a14:	bl	1db0 <malloc@plt>
    6a18:	mov	x20, x0
    6a1c:	cbz	x0, 6a48 <libintl_set_relocation_prefix@@Base+0x1c8>
    6a20:	mov	x1, x22
    6a24:	mov	x2, x24
    6a28:	bl	1c10 <memcpy@plt>
    6a2c:	add	x2, x23, #0x1
    6a30:	mov	x1, x21
    6a34:	add	x0, x20, x24
    6a38:	bl	1c10 <memcpy@plt>
    6a3c:	ldp	x21, x22, [sp, #32]
    6a40:	ldp	x23, x24, [sp, #48]
    6a44:	b	69b8 <libintl_set_relocation_prefix@@Base+0x138>
    6a48:	ldp	x21, x22, [sp, #32]
    6a4c:	ldp	x23, x24, [sp, #48]
    6a50:	b	69b4 <libintl_set_relocation_prefix@@Base+0x134>
    6a54:	nop
    6a58:	stp	x29, x30, [sp, #-32]!
    6a5c:	mov	x29, sp
    6a60:	stp	x19, x20, [sp, #16]
    6a64:	mov	x19, x1
    6a68:	mov	x20, x0
    6a6c:	bl	6960 <libintl_set_relocation_prefix@@Base+0xe0>
    6a70:	cmp	x20, x0
    6a74:	csel	x2, x0, xzr, ne  // ne = any
    6a78:	str	x2, [x19]
    6a7c:	ldp	x19, x20, [sp, #16]
    6a80:	ldp	x29, x30, [sp], #32
    6a84:	ret
    6a88:	mov	x0, #0x0                   	// #0
    6a8c:	ret
    6a90:	stp	x29, x30, [sp, #-32]!
    6a94:	mov	x29, sp
    6a98:	stp	x19, x20, [sp, #16]
    6a9c:	mov	w19, w0
    6aa0:	mov	x0, #0x0                   	// #0
    6aa4:	bl	1f40 <uselocale@plt>
    6aa8:	cmn	x0, #0x1
    6aac:	b.eq	6adc <libintl_set_relocation_prefix@@Base+0x25c>  // b.none
    6ab0:	mov	x20, x0
    6ab4:	lsl	w0, w19, #16
    6ab8:	orr	w0, w0, #0xffff
    6abc:	bl	1d90 <nl_langinfo@plt>
    6ac0:	ldrb	w1, [x0]
    6ac4:	cbnz	w1, 6ad0 <libintl_set_relocation_prefix@@Base+0x250>
    6ac8:	add	x1, x20, w19, sxtw #3
    6acc:	ldr	x0, [x1, #128]
    6ad0:	ldp	x19, x20, [sp, #16]
    6ad4:	ldp	x29, x30, [sp], #32
    6ad8:	ret
    6adc:	mov	x0, #0x0                   	// #0
    6ae0:	ldp	x19, x20, [sp, #16]
    6ae4:	ldp	x29, x30, [sp], #32
    6ae8:	ret
    6aec:	nop
    6af0:	stp	x29, x30, [sp, #-64]!
    6af4:	mov	x29, sp
    6af8:	stp	x19, x20, [sp, #16]
    6afc:	bl	6a90 <libintl_set_relocation_prefix@@Base+0x210>
    6b00:	mov	x19, x0
    6b04:	cbz	x0, 6b84 <libintl_set_relocation_prefix@@Base+0x304>
    6b08:	stp	x21, x22, [sp, #32]
    6b0c:	stp	x23, x24, [sp, #48]
    6b10:	ldrb	w1, [x0]
    6b14:	cbz	w1, 6c5c <libintl_set_relocation_prefix@@Base+0x3dc>
    6b18:	mov	x2, x0
    6b1c:	mov	x0, #0x0                   	// #0
    6b20:	ror	x0, x0, #55
    6b24:	add	x0, x0, w1, uxtb
    6b28:	ldrb	w1, [x2, #1]!
    6b2c:	cbnz	w1, 6b20 <libintl_set_relocation_prefix@@Base+0x2a0>
    6b30:	mov	x1, #0xff00ff00ff00ff00    	// #-71777214294589696
    6b34:	movk	x1, #0xff01
    6b38:	umulh	x1, x0, x1
    6b3c:	and	x2, x1, #0xffffffffffffff00
    6b40:	add	x1, x2, x1, lsr #8
    6b44:	sub	x22, x0, x1
    6b48:	adrp	x23, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    6b4c:	add	x0, x23, #0x450
    6b50:	ldr	x20, [x0, x22, lsl #3]
    6b54:	cbnz	x20, 6b64 <libintl_set_relocation_prefix@@Base+0x2e4>
    6b58:	b	6b94 <libintl_set_relocation_prefix@@Base+0x314>
    6b5c:	ldr	x20, [x20]
    6b60:	cbz	x20, 6b94 <libintl_set_relocation_prefix@@Base+0x314>
    6b64:	add	x21, x20, #0x8
    6b68:	mov	x1, x19
    6b6c:	mov	x0, x21
    6b70:	bl	1f00 <strcmp@plt>
    6b74:	cbnz	w0, 6b5c <libintl_set_relocation_prefix@@Base+0x2dc>
    6b78:	mov	x19, x21
    6b7c:	ldp	x21, x22, [sp, #32]
    6b80:	ldp	x23, x24, [sp, #48]
    6b84:	mov	x0, x19
    6b88:	ldp	x19, x20, [sp, #16]
    6b8c:	ldp	x29, x30, [sp], #64
    6b90:	ret
    6b94:	mov	x0, x19
    6b98:	bl	1c60 <strlen@plt>
    6b9c:	add	x1, x0, #0x10
    6ba0:	add	x20, x0, #0x1
    6ba4:	and	x0, x1, #0xfffffffffffffff8
    6ba8:	bl	1db0 <malloc@plt>
    6bac:	mov	x21, x0
    6bb0:	cbz	x0, 6c64 <libintl_set_relocation_prefix@@Base+0x3e4>
    6bb4:	adrp	x24, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    6bb8:	mov	x2, x20
    6bbc:	mov	x1, x19
    6bc0:	add	x0, x0, #0x8
    6bc4:	bl	1c10 <memcpy@plt>
    6bc8:	ldr	x0, [x24, #4064]
    6bcc:	cbz	x0, 6be0 <libintl_set_relocation_prefix@@Base+0x360>
    6bd0:	add	x0, x23, #0x450
    6bd4:	add	x0, x0, #0x808
    6bd8:	bl	2090 <pthread_mutex_lock@plt>
    6bdc:	cbnz	w0, 6c78 <libintl_set_relocation_prefix@@Base+0x3f8>
    6be0:	add	x0, x23, #0x450
    6be4:	ldr	x20, [x0, x22, lsl #3]
    6be8:	cbnz	x20, 6bf8 <libintl_set_relocation_prefix@@Base+0x378>
    6bec:	b	6c48 <libintl_set_relocation_prefix@@Base+0x3c8>
    6bf0:	ldr	x20, [x20]
    6bf4:	cbz	x20, 6c48 <libintl_set_relocation_prefix@@Base+0x3c8>
    6bf8:	mov	x1, x19
    6bfc:	add	x0, x20, #0x8
    6c00:	bl	1f00 <strcmp@plt>
    6c04:	cbnz	w0, 6bf0 <libintl_set_relocation_prefix@@Base+0x370>
    6c08:	mov	x0, x21
    6c0c:	mov	x21, x20
    6c10:	bl	1f50 <free@plt>
    6c14:	ldr	x24, [x24, #4064]
    6c18:	cbz	x24, 6c2c <libintl_set_relocation_prefix@@Base+0x3ac>
    6c1c:	add	x0, x23, #0x450
    6c20:	add	x0, x0, #0x808
    6c24:	bl	20a0 <pthread_mutex_unlock@plt>
    6c28:	cbnz	w0, 6c78 <libintl_set_relocation_prefix@@Base+0x3f8>
    6c2c:	add	x19, x21, #0x8
    6c30:	mov	x0, x19
    6c34:	ldp	x19, x20, [sp, #16]
    6c38:	ldp	x21, x22, [sp, #32]
    6c3c:	ldp	x23, x24, [sp, #48]
    6c40:	ldp	x29, x30, [sp], #64
    6c44:	ret
    6c48:	add	x0, x23, #0x450
    6c4c:	ldr	x1, [x0, x22, lsl #3]
    6c50:	str	x1, [x21]
    6c54:	str	x21, [x0, x22, lsl #3]
    6c58:	b	6c14 <libintl_set_relocation_prefix@@Base+0x394>
    6c5c:	mov	x22, #0x0                   	// #0
    6c60:	b	6b48 <libintl_set_relocation_prefix@@Base+0x2c8>
    6c64:	adrp	x19, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6c68:	add	x19, x19, #0x5e8
    6c6c:	ldp	x21, x22, [sp, #32]
    6c70:	ldp	x23, x24, [sp, #48]
    6c74:	b	6b84 <libintl_set_relocation_prefix@@Base+0x304>
    6c78:	bl	1ec0 <abort@plt>
    6c7c:	nop
    6c80:	mov	x1, #0x0                   	// #0
    6c84:	b	20c0 <setlocale@plt>
    6c88:	stp	x29, x30, [sp, #-32]!
    6c8c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6c90:	add	x0, x0, #0x1c0
    6c94:	mov	x29, sp
    6c98:	str	x19, [sp, #16]
    6c9c:	mov	x19, x1
    6ca0:	bl	2080 <getenv@plt>
    6ca4:	cbz	x0, 6cb0 <libintl_set_relocation_prefix@@Base+0x430>
    6ca8:	ldrb	w1, [x0]
    6cac:	cbnz	w1, 6ce0 <libintl_set_relocation_prefix@@Base+0x460>
    6cb0:	mov	x0, x19
    6cb4:	bl	2080 <getenv@plt>
    6cb8:	cbz	x0, 6cc4 <libintl_set_relocation_prefix@@Base+0x444>
    6cbc:	ldrb	w1, [x0]
    6cc0:	cbnz	w1, 6ce0 <libintl_set_relocation_prefix@@Base+0x460>
    6cc4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6cc8:	add	x0, x0, #0x5f0
    6ccc:	bl	2080 <getenv@plt>
    6cd0:	cbz	x0, 6ce0 <libintl_set_relocation_prefix@@Base+0x460>
    6cd4:	ldrb	w1, [x0]
    6cd8:	cmp	w1, #0x0
    6cdc:	csel	x0, x0, xzr, ne  // ne = any
    6ce0:	ldr	x19, [sp, #16]
    6ce4:	ldp	x29, x30, [sp], #32
    6ce8:	ret
    6cec:	nop
    6cf0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6cf4:	add	x0, x0, #0x5e8
    6cf8:	ret
    6cfc:	nop
    6d00:	stp	x29, x30, [sp, #-32]!
    6d04:	mov	x29, sp
    6d08:	str	x19, [sp, #16]
    6d0c:	mov	w19, w0
    6d10:	bl	6af0 <libintl_set_relocation_prefix@@Base+0x270>
    6d14:	cbz	x0, 6d24 <libintl_set_relocation_prefix@@Base+0x4a4>
    6d18:	ldr	x19, [sp, #16]
    6d1c:	ldp	x29, x30, [sp], #32
    6d20:	ret
    6d24:	mov	w0, w19
    6d28:	mov	x1, #0x0                   	// #0
    6d2c:	bl	20c0 <setlocale@plt>
    6d30:	cmp	x0, #0x0
    6d34:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6d38:	add	x1, x1, #0x5e8
    6d3c:	csel	x0, x1, x0, eq  // eq = none
    6d40:	ldr	x19, [sp, #16]
    6d44:	ldp	x29, x30, [sp], #32
    6d48:	ret
    6d4c:	nop
    6d50:	stp	x29, x30, [sp, #-64]!
    6d54:	mov	x29, sp
    6d58:	stp	x19, x20, [sp, #16]
    6d5c:	mov	x19, x1
    6d60:	mov	x20, x0
    6d64:	mov	x1, x0
    6d68:	mov	w0, #0x22                  	// #34
    6d6c:	stp	x21, x22, [sp, #32]
    6d70:	mov	x21, x2
    6d74:	bl	1d10 <putc@plt>
    6d78:	cmp	x19, x21
    6d7c:	b.eq	6dc4 <libintl_set_relocation_prefix@@Base+0x544>  // b.none
    6d80:	stp	x23, x24, [sp, #48]
    6d84:	adrp	x23, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6d88:	adrp	x24, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6d8c:	add	x23, x23, #0x5f8
    6d90:	add	x24, x24, #0x600
    6d94:	mov	w22, #0x5c                  	// #92
    6d98:	ldrb	w0, [x19], #1
    6d9c:	cmp	w0, #0xa
    6da0:	b.eq	6df0 <libintl_set_relocation_prefix@@Base+0x570>  // b.none
    6da4:	cmp	w0, #0x22
    6da8:	ccmp	w0, w22, #0x4, ne  // ne = any
    6dac:	b.eq	6ddc <libintl_set_relocation_prefix@@Base+0x55c>  // b.none
    6db0:	mov	x1, x20
    6db4:	bl	1d10 <putc@plt>
    6db8:	cmp	x21, x19
    6dbc:	b.ne	6d98 <libintl_set_relocation_prefix@@Base+0x518>  // b.any
    6dc0:	ldp	x23, x24, [sp, #48]
    6dc4:	mov	x1, x20
    6dc8:	ldp	x19, x20, [sp, #16]
    6dcc:	mov	w0, #0x22                  	// #34
    6dd0:	ldp	x21, x22, [sp, #32]
    6dd4:	ldp	x29, x30, [sp], #64
    6dd8:	b	1d10 <putc@plt>
    6ddc:	mov	x1, x20
    6de0:	mov	w0, #0x5c                  	// #92
    6de4:	bl	1d10 <putc@plt>
    6de8:	ldurb	w0, [x19, #-1]
    6dec:	b	6db0 <libintl_set_relocation_prefix@@Base+0x530>
    6df0:	mov	x3, x20
    6df4:	mov	x0, x23
    6df8:	mov	x2, #0x3                   	// #3
    6dfc:	mov	x1, #0x1                   	// #1
    6e00:	bl	1fb0 <fwrite@plt>
    6e04:	cmp	x21, x19
    6e08:	b.eq	6e24 <libintl_set_relocation_prefix@@Base+0x5a4>  // b.none
    6e0c:	mov	x3, x20
    6e10:	mov	x0, x24
    6e14:	mov	x2, #0x2                   	// #2
    6e18:	mov	x1, #0x1                   	// #1
    6e1c:	bl	1fb0 <fwrite@plt>
    6e20:	b	6d98 <libintl_set_relocation_prefix@@Base+0x518>
    6e24:	ldp	x19, x20, [sp, #16]
    6e28:	ldp	x21, x22, [sp, #32]
    6e2c:	ldp	x23, x24, [sp, #48]
    6e30:	ldp	x29, x30, [sp], #64
    6e34:	ret
    6e38:	stp	x29, x30, [sp, #-96]!
    6e3c:	mov	x29, sp
    6e40:	stp	x23, x24, [sp, #48]
    6e44:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x10f18>
    6e48:	mov	x24, x3
    6e4c:	ldr	x5, [x23, #4064]
    6e50:	stp	x19, x20, [sp, #16]
    6e54:	mov	x20, x2
    6e58:	stp	x21, x22, [sp, #32]
    6e5c:	mov	x21, x0
    6e60:	mov	x22, x1
    6e64:	stp	x25, x26, [sp, #64]
    6e68:	mov	w26, w4
    6e6c:	adrp	x25, 19000 <bind_textdomain_codeset@@Base+0x11f18>
    6e70:	stp	x27, x28, [sp, #80]
    6e74:	cbz	x5, 6e84 <libintl_set_relocation_prefix@@Base+0x604>
    6e78:	add	x0, x25, #0xc88
    6e7c:	bl	2090 <pthread_mutex_lock@plt>
    6e80:	cbnz	w0, 704c <libintl_set_relocation_prefix@@Base+0x7cc>
    6e84:	add	x28, x25, #0xc88
    6e88:	ldr	x27, [x28, #48]
    6e8c:	cbz	x27, 6ec0 <libintl_set_relocation_prefix@@Base+0x640>
    6e90:	mov	x1, x27
    6e94:	mov	x0, x21
    6e98:	bl	1f00 <strcmp@plt>
    6e9c:	ldr	x19, [x28, #56]
    6ea0:	cbz	w0, 6f08 <libintl_set_relocation_prefix@@Base+0x688>
    6ea4:	cbz	x19, 6eb8 <libintl_set_relocation_prefix@@Base+0x638>
    6ea8:	mov	x0, x19
    6eac:	bl	1d80 <fclose@plt>
    6eb0:	ldr	x27, [x28, #48]
    6eb4:	str	xzr, [x28, #56]
    6eb8:	mov	x0, x27
    6ebc:	bl	1f50 <free@plt>
    6ec0:	add	x27, x25, #0xc88
    6ec4:	mov	x0, x21
    6ec8:	bl	1c60 <strlen@plt>
    6ecc:	add	x19, x0, #0x1
    6ed0:	mov	x0, x19
    6ed4:	bl	1db0 <malloc@plt>
    6ed8:	str	x0, [x27, #48]
    6edc:	cbz	x0, 6fd0 <libintl_set_relocation_prefix@@Base+0x750>
    6ee0:	mov	x2, x19
    6ee4:	mov	x1, x21
    6ee8:	bl	1c10 <memcpy@plt>
    6eec:	mov	x0, x21
    6ef0:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6ef4:	add	x1, x1, #0x608
    6ef8:	bl	1da0 <fopen@plt>
    6efc:	str	x0, [x27, #56]
    6f00:	mov	x19, x0
    6f04:	cbz	x0, 6fd0 <libintl_set_relocation_prefix@@Base+0x750>
    6f08:	mov	x3, x19
    6f0c:	mov	x2, #0x7                   	// #7
    6f10:	mov	x1, #0x1                   	// #1
    6f14:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6f18:	add	x0, x0, #0x610
    6f1c:	bl	1fb0 <fwrite@plt>
    6f20:	mov	x0, x22
    6f24:	bl	1c60 <strlen@plt>
    6f28:	add	x2, x22, x0
    6f2c:	mov	x1, x22
    6f30:	mov	x0, x19
    6f34:	bl	6d50 <libintl_set_relocation_prefix@@Base+0x4d0>
    6f38:	mov	x0, x20
    6f3c:	mov	w1, #0x4                   	// #4
    6f40:	bl	1fa0 <strchr@plt>
    6f44:	mov	x21, x0
    6f48:	cbz	x0, 6f78 <libintl_set_relocation_prefix@@Base+0x6f8>
    6f4c:	mov	x3, x19
    6f50:	mov	x2, #0x9                   	// #9
    6f54:	mov	x1, #0x1                   	// #1
    6f58:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6f5c:	add	x0, x0, #0x618
    6f60:	bl	1fb0 <fwrite@plt>
    6f64:	mov	x1, x20
    6f68:	mov	x2, x21
    6f6c:	mov	x0, x19
    6f70:	add	x20, x21, #0x1
    6f74:	bl	6d50 <libintl_set_relocation_prefix@@Base+0x4d0>
    6f78:	mov	x3, x19
    6f7c:	mov	x2, #0x7                   	// #7
    6f80:	mov	x1, #0x1                   	// #1
    6f84:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6f88:	add	x0, x0, #0x628
    6f8c:	bl	1fb0 <fwrite@plt>
    6f90:	mov	x0, x20
    6f94:	bl	1c60 <strlen@plt>
    6f98:	mov	x1, x20
    6f9c:	add	x2, x20, x0
    6fa0:	mov	x0, x19
    6fa4:	bl	6d50 <libintl_set_relocation_prefix@@Base+0x4d0>
    6fa8:	cbnz	w26, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6fac:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    6fb0:	mov	x3, x19
    6fb4:	add	x0, x0, #0x650
    6fb8:	mov	x2, #0xb                   	// #11
    6fbc:	mov	x1, #0x1                   	// #1
    6fc0:	bl	1fb0 <fwrite@plt>
    6fc4:	mov	x1, x19
    6fc8:	mov	w0, #0xa                   	// #10
    6fcc:	bl	1d10 <putc@plt>
    6fd0:	ldr	x23, [x23, #4064]
    6fd4:	cbz	x23, 6fe4 <libintl_set_relocation_prefix@@Base+0x764>
    6fd8:	add	x0, x25, #0xc88
    6fdc:	bl	20a0 <pthread_mutex_unlock@plt>
    6fe0:	cbnz	w0, 704c <libintl_set_relocation_prefix@@Base+0x7cc>
    6fe4:	ldp	x19, x20, [sp, #16]
    6fe8:	ldp	x21, x22, [sp, #32]
    6fec:	ldp	x23, x24, [sp, #48]
    6ff0:	ldp	x25, x26, [sp, #64]
    6ff4:	ldp	x27, x28, [sp, #80]
    6ff8:	ldp	x29, x30, [sp], #96
    6ffc:	ret
    7000:	mov	x3, x19
    7004:	mov	x2, #0xe                   	// #14
    7008:	mov	x1, #0x1                   	// #1
    700c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    7010:	add	x0, x0, #0x630
    7014:	bl	1fb0 <fwrite@plt>
    7018:	mov	x0, x24
    701c:	bl	1c60 <strlen@plt>
    7020:	mov	x1, x24
    7024:	add	x2, x24, x0
    7028:	mov	x0, x19
    702c:	bl	6d50 <libintl_set_relocation_prefix@@Base+0x4d0>
    7030:	mov	x3, x19
    7034:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x780>
    7038:	mov	x2, #0xe                   	// #14
    703c:	mov	x1, #0x1                   	// #1
    7040:	add	x0, x0, #0x640
    7044:	bl	1fb0 <fwrite@plt>
    7048:	b	6fc4 <libintl_set_relocation_prefix@@Base+0x744>
    704c:	bl	1ec0 <abort@plt>
    7050:	adds	x0, x0, x1
    7054:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7058:	ret
    705c:	nop
    7060:	adds	x1, x0, x1
    7064:	mov	x0, #0xffffffffffffffff    	// #-1
    7068:	csel	x1, x1, x0, cc  // cc = lo, ul, last
    706c:	adds	x1, x2, x1
    7070:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    7074:	ret
    7078:	adds	x1, x0, x1
    707c:	mov	x0, #0xffffffffffffffff    	// #-1
    7080:	csel	x1, x1, x0, cc  // cc = lo, ul, last
    7084:	adds	x2, x2, x1
    7088:	csel	x2, x2, x0, cc  // cc = lo, ul, last
    708c:	adds	x2, x3, x2
    7090:	csel	x0, x2, x0, cc  // cc = lo, ul, last
    7094:	ret
    7098:	cmp	x0, x1
    709c:	csel	x0, x0, x1, cs  // cs = hs, nlast
    70a0:	ret
    70a4:	nop

00000000000070a8 <gettext@@Base>:
    70a8:	b	20b0 <libintl_gettext@plt>
    70ac:	nop

00000000000070b0 <dgettext@@Base>:
    70b0:	b	1f90 <libintl_dgettext@plt>
    70b4:	nop

00000000000070b8 <dcgettext@@Base>:
    70b8:	b	1d40 <libintl_dcgettext@plt>
    70bc:	nop

00000000000070c0 <ngettext@@Base>:
    70c0:	b	20d0 <libintl_ngettext@plt>
    70c4:	nop

00000000000070c8 <dngettext@@Base>:
    70c8:	b	1c20 <libintl_dngettext@plt>
    70cc:	nop

00000000000070d0 <dcngettext@@Base>:
    70d0:	b	1e00 <libintl_dcngettext@plt>
    70d4:	nop

00000000000070d8 <textdomain@@Base>:
    70d8:	b	1d30 <libintl_textdomain@plt>
    70dc:	nop

00000000000070e0 <bindtextdomain@@Base>:
    70e0:	b	1e30 <libintl_bindtextdomain@plt>
    70e4:	nop

00000000000070e8 <bind_textdomain_codeset@@Base>:
    70e8:	b	1e20 <libintl_bind_textdomain_codeset@plt>

Disassembly of section .fini:

00000000000070ec <.fini>:
    70ec:	stp	x29, x30, [sp, #-16]!
    70f0:	mov	x29, sp
    70f4:	ldp	x29, x30, [sp], #16
    70f8:	ret
