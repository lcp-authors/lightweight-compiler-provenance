
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysctl_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401288 <_init>:
  401288:	stp	x29, x30, [sp, #-16]!
  40128c:	mov	x29, sp
  401290:	bl	4015d0 <call_weak_fn>
  401294:	ldp	x29, x30, [sp], #16
  401298:	ret

Disassembly of section .plt:

00000000004012a0 <__libc_start_main@plt-0x20>:
  4012a0:	stp	x16, x30, [sp, #-16]!
  4012a4:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4012a8:	ldr	x17, [x16, #3736]
  4012ac:	add	x16, x16, #0xe98
  4012b0:	br	x17
  4012b4:	nop
  4012b8:	nop
  4012bc:	nop

00000000004012c0 <__libc_start_main@plt>:
  4012c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4012c4:	ldr	x17, [x16, #3744]
  4012c8:	add	x16, x16, #0xea0
  4012cc:	br	x17

00000000004012d0 <abort@plt>:
  4012d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4012d4:	ldr	x17, [x16, #3752]
  4012d8:	add	x16, x16, #0xea8
  4012dc:	br	x17

00000000004012e0 <__gmon_start__@plt>:
  4012e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4012e4:	ldr	x17, [x16, #3760]
  4012e8:	add	x16, x16, #0xeb0
  4012ec:	br	x17

00000000004012f0 <strv_free@plt>:
  4012f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4012f4:	ldr	x17, [x16, #3768]
  4012f8:	add	x16, x16, #0xeb8
  4012fc:	br	x17

0000000000401300 <getopt_long@plt>:
  401300:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401304:	ldr	x17, [x16, #3776]
  401308:	add	x16, x16, #0xec0
  40130c:	br	x17

0000000000401310 <sysctl_normalize@plt>:
  401310:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401314:	ldr	x17, [x16, #3784]
  401318:	add	x16, x16, #0xec8
  40131c:	br	x17

0000000000401320 <path_startswith@plt>:
  401320:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401324:	ldr	x17, [x16, #3792]
  401328:	add	x16, x16, #0xed0
  40132c:	br	x17

0000000000401330 <strdup@plt>:
  401330:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401334:	ldr	x17, [x16, #3800]
  401338:	add	x16, x16, #0xed8
  40133c:	br	x17

0000000000401340 <path_join_internal@plt>:
  401340:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401344:	ldr	x17, [x16, #3808]
  401348:	add	x16, x16, #0xee0
  40134c:	br	x17

0000000000401350 <strv_consume@plt>:
  401350:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401354:	ldr	x17, [x16, #3816]
  401358:	add	x16, x16, #0xee8
  40135c:	br	x17

0000000000401360 <log_get_max_level_realm@plt>:
  401360:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401364:	ldr	x17, [x16, #3824]
  401368:	add	x16, x16, #0xef0
  40136c:	br	x17

0000000000401370 <log_internal_realm@plt>:
  401370:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401374:	ldr	x17, [x16, #3832]
  401378:	add	x16, x16, #0xef8
  40137c:	br	x17

0000000000401380 <terminal_urlify_man@plt>:
  401380:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401384:	ldr	x17, [x16, #3840]
  401388:	add	x16, x16, #0xf00
  40138c:	br	x17

0000000000401390 <printf@plt>:
  401390:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401394:	ldr	x17, [x16, #3848]
  401398:	add	x16, x16, #0xf08
  40139c:	br	x17

00000000004013a0 <version@plt>:
  4013a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013a4:	ldr	x17, [x16, #3856]
  4013a8:	add	x16, x16, #0xf10
  4013ac:	br	x17

00000000004013b0 <log_oom_internal@plt>:
  4013b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013b4:	ldr	x17, [x16, #3864]
  4013b8:	add	x16, x16, #0xf18
  4013bc:	br	x17

00000000004013c0 <free@plt>:
  4013c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013c4:	ldr	x17, [x16, #3872]
  4013c8:	add	x16, x16, #0xf20
  4013cc:	br	x17

00000000004013d0 <log_setup_service@plt>:
  4013d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013d4:	ldr	x17, [x16, #3880]
  4013d8:	add	x16, x16, #0xf28
  4013dc:	br	x17

00000000004013e0 <umask@plt>:
  4013e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013e4:	ldr	x17, [x16, #3888]
  4013e8:	add	x16, x16, #0xf30
  4013ec:	br	x17

00000000004013f0 <internal_ordered_hashmap_new@plt>:
  4013f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4013f4:	ldr	x17, [x16, #3896]
  4013f8:	add	x16, x16, #0xf38
  4013fc:	br	x17

0000000000401400 <conf_files_list_strv@plt>:
  401400:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401404:	ldr	x17, [x16, #3904]
  401408:	add	x16, x16, #0xf40
  40140c:	br	x17

0000000000401410 <pager_open@plt>:
  401410:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401414:	ldr	x17, [x16, #3912]
  401418:	add	x16, x16, #0xf48
  40141c:	br	x17

0000000000401420 <cat_files@plt>:
  401420:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401424:	ldr	x17, [x16, #3920]
  401428:	add	x16, x16, #0xf50
  40142c:	br	x17

0000000000401430 <internal_hashmap_iterate@plt>:
  401430:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401434:	ldr	x17, [x16, #3928]
  401438:	add	x16, x16, #0xf58
  40143c:	br	x17

0000000000401440 <sysctl_write@plt>:
  401440:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401444:	ldr	x17, [x16, #3936]
  401448:	add	x16, x16, #0xf60
  40144c:	br	x17

0000000000401450 <internal_hashmap_free@plt>:
  401450:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401454:	ldr	x17, [x16, #3944]
  401458:	add	x16, x16, #0xf68
  40145c:	br	x17

0000000000401460 <ask_password_agent_close@plt>:
  401460:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401464:	ldr	x17, [x16, #3952]
  401468:	add	x16, x16, #0xf70
  40146c:	br	x17

0000000000401470 <polkit_agent_close@plt>:
  401470:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401474:	ldr	x17, [x16, #3960]
  401478:	add	x16, x16, #0xf78
  40147c:	br	x17

0000000000401480 <pager_close@plt>:
  401480:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401484:	ldr	x17, [x16, #3968]
  401488:	add	x16, x16, #0xf80
  40148c:	br	x17

0000000000401490 <mac_selinux_finish@plt>:
  401490:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401494:	ldr	x17, [x16, #3976]
  401498:	add	x16, x16, #0xf88
  40149c:	br	x17

00000000004014a0 <log_assert_failed_unreachable_realm@plt>:
  4014a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014a4:	ldr	x17, [x16, #3984]
  4014a8:	add	x16, x16, #0xf90
  4014ac:	br	x17

00000000004014b0 <log_assert_failed_realm@plt>:
  4014b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014b4:	ldr	x17, [x16, #3992]
  4014b8:	add	x16, x16, #0xf98
  4014bc:	br	x17

00000000004014c0 <search_and_fopen@plt>:
  4014c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014c4:	ldr	x17, [x16, #4000]
  4014c8:	add	x16, x16, #0xfa0
  4014cc:	br	x17

00000000004014d0 <read_line_full@plt>:
  4014d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014d4:	ldr	x17, [x16, #4008]
  4014d8:	add	x16, x16, #0xfa8
  4014dc:	br	x17

00000000004014e0 <strstrip@plt>:
  4014e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014e4:	ldr	x17, [x16, #4016]
  4014e8:	add	x16, x16, #0xfb0
  4014ec:	br	x17

00000000004014f0 <strchr@plt>:
  4014f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  4014f4:	ldr	x17, [x16, #4024]
  4014f8:	add	x16, x16, #0xfb8
  4014fc:	br	x17

0000000000401500 <internal_hashmap_get@plt>:
  401500:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401504:	ldr	x17, [x16, #4032]
  401508:	add	x16, x16, #0xfc0
  40150c:	br	x17

0000000000401510 <strcmp@plt>:
  401510:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401514:	ldr	x17, [x16, #4040]
  401518:	add	x16, x16, #0xfc8
  40151c:	br	x17

0000000000401520 <internal_hashmap_remove@plt>:
  401520:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401524:	ldr	x17, [x16, #4048]
  401528:	add	x16, x16, #0xfd0
  40152c:	br	x17

0000000000401530 <malloc@plt>:
  401530:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401534:	ldr	x17, [x16, #4056]
  401538:	add	x16, x16, #0xfd8
  40153c:	br	x17

0000000000401540 <hashmap_put@plt>:
  401540:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401544:	ldr	x17, [x16, #4064]
  401548:	add	x16, x16, #0xfe0
  40154c:	br	x17

0000000000401550 <log_syntax_internal@plt>:
  401550:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401554:	ldr	x17, [x16, #4072]
  401558:	add	x16, x16, #0xfe8
  40155c:	br	x17

0000000000401560 <safe_fclose@plt>:
  401560:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401564:	ldr	x17, [x16, #4080]
  401568:	add	x16, x16, #0xff0
  40156c:	br	x17

0000000000401570 <string_hash_func@plt>:
  401570:	adrp	x16, 41f000 <__FRAME_END__+0x1c640>
  401574:	ldr	x17, [x16, #4088]
  401578:	add	x16, x16, #0xff8
  40157c:	br	x17

Disassembly of section .text:

0000000000401580 <_start>:
  401580:	mov	x29, #0x0                   	// #0
  401584:	mov	x30, #0x0                   	// #0
  401588:	mov	x5, x0
  40158c:	ldr	x1, [sp]
  401590:	add	x2, sp, #0x8
  401594:	mov	x6, sp
  401598:	movz	x0, #0x0, lsl #48
  40159c:	movk	x0, #0x0, lsl #32
  4015a0:	movk	x0, #0x40, lsl #16
  4015a4:	movk	x0, #0x16c0
  4015a8:	movz	x3, #0x0, lsl #48
  4015ac:	movk	x3, #0x0, lsl #32
  4015b0:	movk	x3, #0x40, lsl #16
  4015b4:	movk	x3, #0x2270
  4015b8:	movz	x4, #0x0, lsl #48
  4015bc:	movk	x4, #0x0, lsl #32
  4015c0:	movk	x4, #0x40, lsl #16
  4015c4:	movk	x4, #0x22f0
  4015c8:	bl	4012c0 <__libc_start_main@plt>
  4015cc:	bl	4012d0 <abort@plt>

00000000004015d0 <call_weak_fn>:
  4015d0:	adrp	x0, 41f000 <__FRAME_END__+0x1c640>
  4015d4:	ldr	x0, [x0, #3696]
  4015d8:	cbz	x0, 4015e0 <call_weak_fn+0x10>
  4015dc:	b	4012e0 <__gmon_start__@plt>
  4015e0:	ret

00000000004015e4 <deregister_tm_clones>:
  4015e4:	adrp	x0, 420000 <completed.8445>
  4015e8:	add	x1, x0, #0x0
  4015ec:	adrp	x0, 420000 <completed.8445>
  4015f0:	add	x0, x0, #0x0
  4015f4:	cmp	x1, x0
  4015f8:	b.eq	401624 <deregister_tm_clones+0x40>  // b.none
  4015fc:	sub	sp, sp, #0x10
  401600:	adrp	x1, 402000 <parse_file+0x2fc>
  401604:	ldr	x1, [x1, #776]
  401608:	str	x1, [sp, #8]
  40160c:	cbz	x1, 40161c <deregister_tm_clones+0x38>
  401610:	mov	x16, x1
  401614:	add	sp, sp, #0x10
  401618:	br	x16
  40161c:	add	sp, sp, #0x10
  401620:	ret
  401624:	ret

0000000000401628 <register_tm_clones>:
  401628:	adrp	x0, 420000 <completed.8445>
  40162c:	add	x1, x0, #0x0
  401630:	adrp	x0, 420000 <completed.8445>
  401634:	add	x0, x0, #0x0
  401638:	sub	x1, x1, x0
  40163c:	mov	x2, #0x2                   	// #2
  401640:	asr	x1, x1, #3
  401644:	sdiv	x1, x1, x2
  401648:	cbz	x1, 401674 <register_tm_clones+0x4c>
  40164c:	sub	sp, sp, #0x10
  401650:	adrp	x2, 402000 <parse_file+0x2fc>
  401654:	ldr	x2, [x2, #784]
  401658:	str	x2, [sp, #8]
  40165c:	cbz	x2, 40166c <register_tm_clones+0x44>
  401660:	mov	x16, x2
  401664:	add	sp, sp, #0x10
  401668:	br	x16
  40166c:	add	sp, sp, #0x10
  401670:	ret
  401674:	ret

0000000000401678 <__do_global_dtors_aux>:
  401678:	stp	x29, x30, [sp, #-32]!
  40167c:	mov	x29, sp
  401680:	str	x19, [sp, #16]
  401684:	adrp	x19, 420000 <completed.8445>
  401688:	ldrb	w0, [x19]
  40168c:	cbnz	w0, 40169c <__do_global_dtors_aux+0x24>
  401690:	bl	4015e4 <deregister_tm_clones>
  401694:	mov	w0, #0x1                   	// #1
  401698:	strb	w0, [x19]
  40169c:	ldr	x19, [sp, #16]
  4016a0:	ldp	x29, x30, [sp], #32
  4016a4:	ret

00000000004016a8 <frame_dummy>:
  4016a8:	b	401628 <register_tm_clones>

00000000004016ac <__unique_prefix_static_destructor_wrapper4>:
  4016ac:	ldr	x0, [x0]
  4016b0:	cbz	x0, 4016b8 <__unique_prefix_static_destructor_wrapper4+0xc>
  4016b4:	b	4012f0 <strv_free@plt>
  4016b8:	ret

00000000004016bc <__unique_prefix_static_free_wrapper5>:
  4016bc:	b	401ccc <option_free>

00000000004016c0 <main>:
  4016c0:	sub	sp, sp, #0xb0
  4016c4:	adrp	x8, 420000 <completed.8445>
  4016c8:	adrp	x9, 420000 <completed.8445>
  4016cc:	stp	x29, x30, [sp, #80]
  4016d0:	stp	x28, x27, [sp, #96]
  4016d4:	stp	x26, x25, [sp, #112]
  4016d8:	stp	x24, x23, [sp, #128]
  4016dc:	stp	x22, x21, [sp, #144]
  4016e0:	stp	x20, x19, [sp, #160]
  4016e4:	add	x29, sp, #0x50
  4016e8:	str	w0, [x8, #24]
  4016ec:	str	x1, [x9, #32]
  4016f0:	tbnz	w0, #31, 401c88 <main+0x5c8>
  4016f4:	mov	x21, x1
  4016f8:	cbz	x1, 401ca8 <main+0x5e8>
  4016fc:	adrp	x2, 402000 <parse_file+0x2fc>
  401700:	adrp	x3, 402000 <parse_file+0x2fc>
  401704:	add	x2, x2, #0x520
  401708:	add	x3, x3, #0x340
  40170c:	mov	x1, x21
  401710:	mov	x4, xzr
  401714:	mov	w22, w0
  401718:	bl	401300 <getopt_long@plt>
  40171c:	tbnz	w0, #31, 4017fc <main+0x13c>
  401720:	adrp	x26, 402000 <parse_file+0x2fc>
  401724:	adrp	x19, 402000 <parse_file+0x2fc>
  401728:	adrp	x20, 402000 <parse_file+0x2fc>
  40172c:	adrp	x23, 402000 <parse_file+0x2fc>
  401730:	add	x26, x26, #0x318
  401734:	adrp	x25, 420000 <completed.8445>
  401738:	mov	w24, #0x1                   	// #1
  40173c:	add	x19, x19, #0x520
  401740:	add	x20, x20, #0x340
  401744:	adrp	x27, 420000 <completed.8445>
  401748:	add	x23, x23, #0x522
  40174c:	adrp	x28, 420000 <completed.8445>
  401750:	sub	w8, w0, #0x100
  401754:	cmp	w8, #0x3
  401758:	b.hi	40185c <main+0x19c>  // b.pmore
  40175c:	adr	x9, 40176c <main+0xac>
  401760:	ldrb	w10, [x26, x8]
  401764:	add	x9, x9, x10, lsl #2
  401768:	br	x9
  40176c:	strb	w24, [x25, #16]
  401770:	b	4017e0 <main+0x120>
  401774:	ldr	x0, [x27, #40]
  401778:	mov	x24, x25
  40177c:	bl	401310 <sysctl_normalize@plt>
  401780:	ldr	x25, [x27, #40]
  401784:	mov	x1, x23
  401788:	mov	x0, x25
  40178c:	bl	401320 <path_startswith@plt>
  401790:	cbz	x0, 4017b0 <main+0xf0>
  401794:	mov	x0, x25
  401798:	bl	401330 <strdup@plt>
  40179c:	b	4017c0 <main+0x100>
  4017a0:	ldr	w8, [x28, #20]
  4017a4:	orr	w8, w8, #0x1
  4017a8:	str	w8, [x28, #20]
  4017ac:	b	4017e0 <main+0x120>
  4017b0:	mov	x2, #0xffffffffffffffff    	// #-1
  4017b4:	mov	x0, x23
  4017b8:	mov	x1, x25
  4017bc:	bl	401340 <path_join_internal@plt>
  4017c0:	mov	x1, x0
  4017c4:	cbz	x0, 401c2c <main+0x56c>
  4017c8:	adrp	x0, 420000 <completed.8445>
  4017cc:	add	x0, x0, #0x8
  4017d0:	mov	x25, x24
  4017d4:	bl	401350 <strv_consume@plt>
  4017d8:	mov	w24, #0x1                   	// #1
  4017dc:	tbnz	w0, #31, 401c44 <main+0x584>
  4017e0:	mov	w0, w22
  4017e4:	mov	x1, x21
  4017e8:	mov	x2, x19
  4017ec:	mov	x3, x20
  4017f0:	mov	x4, xzr
  4017f4:	bl	401300 <getopt_long@plt>
  4017f8:	tbz	w0, #31, 401750 <main+0x90>
  4017fc:	adrp	x8, 420000 <completed.8445>
  401800:	ldrb	w8, [x8, #16]
  401804:	cmp	w8, #0x1
  401808:	b.ne	4018f0 <main+0x230>  // b.any
  40180c:	adrp	x8, 420000 <completed.8445>
  401810:	ldr	w8, [x8, #48]
  401814:	cmp	w8, w22
  401818:	b.ge	4018f0 <main+0x230>  // b.tcont
  40181c:	mov	w0, wzr
  401820:	bl	401360 <log_get_max_level_realm@plt>
  401824:	cmp	w0, #0x3
  401828:	b.lt	4018ac <main+0x1ec>  // b.tstop
  40182c:	adrp	x2, 402000 <parse_file+0x2fc>
  401830:	adrp	x4, 402000 <parse_file+0x2fc>
  401834:	adrp	x5, 402000 <parse_file+0x2fc>
  401838:	mov	w1, #0x16                  	// #22
  40183c:	add	x2, x2, #0x433
  401840:	add	x4, x4, #0x52c
  401844:	add	x5, x5, #0x548
  401848:	mov	w0, #0x3                   	// #3
  40184c:	movk	w1, #0x4000, lsl #16
  401850:	mov	w3, #0x132                 	// #306
  401854:	bl	401370 <log_internal_realm@plt>
  401858:	b	4018b8 <main+0x1f8>
  40185c:	cmp	w0, #0x3f
  401860:	b.eq	4018ac <main+0x1ec>  // b.none
  401864:	cmp	w0, #0x68
  401868:	b.ne	401c64 <main+0x5a4>  // b.any
  40186c:	adrp	x0, 402000 <parse_file+0x2fc>
  401870:	adrp	x1, 402000 <parse_file+0x2fc>
  401874:	add	x0, x0, #0x57f
  401878:	add	x1, x1, #0x596
  40187c:	mov	x2, sp
  401880:	str	xzr, [sp]
  401884:	bl	401380 <terminal_urlify_man@plt>
  401888:	tbnz	w0, #31, 4018c0 <main+0x200>
  40188c:	adrp	x8, 420000 <completed.8445>
  401890:	ldr	x1, [x8, #56]
  401894:	ldr	x2, [sp]
  401898:	adrp	x0, 402000 <parse_file+0x2fc>
  40189c:	add	x0, x0, #0x598
  4018a0:	bl	401390 <printf@plt>
  4018a4:	mov	w23, wzr
  4018a8:	b	4018e0 <main+0x220>
  4018ac:	mov	w23, #0xffffffea            	// #-22
  4018b0:	b	401bb0 <main+0x4f0>
  4018b4:	bl	4013a0 <version@plt>
  4018b8:	mov	w23, w0
  4018bc:	b	4018e8 <main+0x228>
  4018c0:	adrp	x1, 402000 <parse_file+0x2fc>
  4018c4:	adrp	x3, 402000 <parse_file+0x2fc>
  4018c8:	add	x1, x1, #0x433
  4018cc:	add	x3, x3, #0x4cc
  4018d0:	mov	w2, #0xd9                  	// #217
  4018d4:	mov	w0, wzr
  4018d8:	bl	4013b0 <log_oom_internal@plt>
  4018dc:	mov	w23, w0
  4018e0:	ldr	x0, [sp]
  4018e4:	bl	4013c0 <free@plt>
  4018e8:	cmp	w23, #0x1
  4018ec:	b.lt	401bb0 <main+0x4f0>  // b.tstop
  4018f0:	bl	4013d0 <log_setup_service@plt>
  4018f4:	mov	w0, #0x12                  	// #18
  4018f8:	bl	4013e0 <umask@plt>
  4018fc:	adrp	x0, 402000 <parse_file+0x2fc>
  401900:	add	x0, x0, #0x320
  401904:	bl	4013f0 <internal_ordered_hashmap_new@plt>
  401908:	cbz	x0, 401954 <main+0x294>
  40190c:	adrp	x8, 420000 <completed.8445>
  401910:	ldrsw	x8, [x8, #48]
  401914:	mov	x19, x0
  401918:	cmp	w8, w22
  40191c:	b.ge	401974 <main+0x2b4>  // b.tcont
  401920:	mov	w20, wzr
  401924:	sub	w22, w22, w8
  401928:	add	x21, x21, x8, lsl #3
  40192c:	ldr	x1, [x21], #8
  401930:	mov	x0, x19
  401934:	mov	w2, wzr
  401938:	bl	401d04 <parse_file>
  40193c:	cmp	w0, #0x0
  401940:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401944:	csel	w20, w0, w20, eq  // eq = none
  401948:	subs	w22, w22, #0x1
  40194c:	b.ne	40192c <main+0x26c>  // b.any
  401950:	b	401a80 <main+0x3c0>
  401954:	adrp	x1, 402000 <parse_file+0x2fc>
  401958:	adrp	x3, 402000 <parse_file+0x2fc>
  40195c:	add	x1, x1, #0x433
  401960:	add	x3, x3, #0x447
  401964:	mov	w2, #0x145                 	// #325
  401968:	bl	4013b0 <log_oom_internal@plt>
  40196c:	mov	w23, w0
  401970:	b	401bb0 <main+0x4f0>
  401974:	adrp	x8, 402000 <parse_file+0x2fc>
  401978:	add	x8, x8, #0x400
  40197c:	ldp	q0, q1, [x8]
  401980:	ldr	q2, [x8, #32]
  401984:	adrp	x1, 402000 <parse_file+0x2fc>
  401988:	add	x1, x1, #0x44b
  40198c:	sub	x0, x29, #0x18
  401990:	mov	x4, sp
  401994:	mov	x2, xzr
  401998:	mov	w3, wzr
  40199c:	stur	xzr, [x29, #-24]
  4019a0:	stp	q0, q1, [sp]
  4019a4:	str	q2, [sp, #32]
  4019a8:	bl	401400 <conf_files_list_strv@plt>
  4019ac:	mov	w20, w0
  4019b0:	tbnz	w0, #31, 4019e4 <main+0x324>
  4019b4:	adrp	x8, 420000 <completed.8445>
  4019b8:	ldrb	w8, [x8, #16]
  4019bc:	cmp	w8, #0x1
  4019c0:	b.ne	401a28 <main+0x368>  // b.any
  4019c4:	adrp	x8, 420000 <completed.8445>
  4019c8:	ldr	w0, [x8, #20]
  4019cc:	bl	401410 <pager_open@plt>
  4019d0:	ldur	x1, [x29, #-24]
  4019d4:	mov	x0, xzr
  4019d8:	mov	w2, wzr
  4019dc:	bl	401420 <cat_files@plt>
  4019e0:	b	401a1c <main+0x35c>
  4019e4:	mov	w0, wzr
  4019e8:	bl	401360 <log_get_max_level_realm@plt>
  4019ec:	cmp	w0, #0x3
  4019f0:	b.lt	401a64 <main+0x3a4>  // b.tstop
  4019f4:	adrp	x2, 402000 <parse_file+0x2fc>
  4019f8:	adrp	x4, 402000 <parse_file+0x2fc>
  4019fc:	adrp	x5, 402000 <parse_file+0x2fc>
  401a00:	add	x2, x2, #0x433
  401a04:	add	x4, x4, #0x447
  401a08:	add	x5, x5, #0x4a5
  401a0c:	mov	w0, #0x3                   	// #3
  401a10:	mov	w3, #0x157                 	// #343
  401a14:	mov	w1, w20
  401a18:	bl	401370 <log_internal_realm@plt>
  401a1c:	mov	w23, w0
  401a20:	mov	w21, wzr
  401a24:	b	401a70 <main+0x3b0>
  401a28:	ldur	x0, [x29, #-24]
  401a2c:	cbz	x0, 401a80 <main+0x3c0>
  401a30:	ldr	x1, [x0]
  401a34:	cbz	x1, 401c24 <main+0x564>
  401a38:	add	x22, x0, #0x8
  401a3c:	mov	w21, #0x1                   	// #1
  401a40:	mov	w2, #0x1                   	// #1
  401a44:	mov	x0, x19
  401a48:	bl	401d04 <parse_file>
  401a4c:	ldr	x1, [x22], #8
  401a50:	cmp	w0, #0x0
  401a54:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401a58:	csel	w20, w0, w20, eq  // eq = none
  401a5c:	cbnz	x1, 401a40 <main+0x380>
  401a60:	b	401a70 <main+0x3b0>
  401a64:	mov	w21, wzr
  401a68:	neg	w8, w20
  401a6c:	sub	w23, w21, w8, uxtb
  401a70:	ldur	x0, [x29, #-24]
  401a74:	cbz	x0, 401a7c <main+0x3bc>
  401a78:	bl	4012f0 <strv_free@plt>
  401a7c:	tbz	w21, #0, 401ba0 <main+0x4e0>
  401a80:	mov	w8, #0xfffffffe            	// #-2
  401a84:	sub	x1, x29, #0x18
  401a88:	sub	x2, x29, #0x8
  401a8c:	mov	x0, x19
  401a90:	mov	x3, xzr
  401a94:	stur	w8, [x29, #-24]
  401a98:	stur	xzr, [x29, #-16]
  401a9c:	bl	401430 <internal_hashmap_iterate@plt>
  401aa0:	mov	w26, wzr
  401aa4:	tbz	w0, #0, 401b94 <main+0x4d4>
  401aa8:	adrp	x21, 402000 <parse_file+0x2fc>
  401aac:	adrp	x22, 402000 <parse_file+0x2fc>
  401ab0:	adrp	x24, 402000 <parse_file+0x2fc>
  401ab4:	mov	w28, #0x1                   	// #1
  401ab8:	add	x21, x21, #0x433
  401abc:	add	x22, x22, #0x872
  401ac0:	add	x24, x24, #0x87c
  401ac4:	mov	w27, #0x1                   	// #1
  401ac8:	movk	w28, #0x3002, lsl #16
  401acc:	ldur	x8, [x29, #-8]
  401ad0:	ldp	x0, x1, [x8]
  401ad4:	bl	401440 <sysctl_write@plt>
  401ad8:	tbz	w0, #31, 401b2c <main+0x46c>
  401adc:	add	w8, w0, #0x1e
  401ae0:	mov	w25, w0
  401ae4:	cmp	w8, #0x1d
  401ae8:	b.hi	401b48 <main+0x488>  // b.pmore
  401aec:	lsl	w8, w27, w8
  401af0:	tst	w8, w28
  401af4:	b.eq	401b48 <main+0x488>  // b.none
  401af8:	mov	w0, wzr
  401afc:	bl	401360 <log_get_max_level_realm@plt>
  401b00:	cmp	w0, #0x5
  401b04:	b.lt	401b2c <main+0x46c>  // b.tstop
  401b08:	ldur	x8, [x29, #-8]
  401b0c:	mov	w0, #0x5                   	// #5
  401b10:	mov	w3, #0x5e                  	// #94
  401b14:	mov	w1, w25
  401b18:	ldp	x7, x6, [x8]
  401b1c:	mov	x2, x21
  401b20:	mov	x4, x22
  401b24:	mov	x5, x24
  401b28:	bl	401370 <log_internal_realm@plt>
  401b2c:	sub	x1, x29, #0x18
  401b30:	sub	x2, x29, #0x8
  401b34:	mov	x0, x19
  401b38:	mov	x3, xzr
  401b3c:	bl	401430 <internal_hashmap_iterate@plt>
  401b40:	tbnz	w0, #0, 401acc <main+0x40c>
  401b44:	b	401b94 <main+0x4d4>
  401b48:	ldur	x23, [x29, #-8]
  401b4c:	ldrb	w8, [x23, #16]
  401b50:	cbnz	w8, 401af8 <main+0x438>
  401b54:	mov	w0, wzr
  401b58:	bl	401360 <log_get_max_level_realm@plt>
  401b5c:	cmp	w0, #0x3
  401b60:	b.lt	401b88 <main+0x4c8>  // b.tstop
  401b64:	ldp	x7, x6, [x23]
  401b68:	adrp	x5, 402000 <parse_file+0x2fc>
  401b6c:	mov	w0, #0x3                   	// #3
  401b70:	mov	w3, #0x60                  	// #96
  401b74:	mov	w1, w25
  401b78:	mov	x2, x21
  401b7c:	mov	x4, x22
  401b80:	add	x5, x5, #0x8a6
  401b84:	bl	401370 <log_internal_realm@plt>
  401b88:	cmp	w26, #0x0
  401b8c:	csel	w26, w25, w26, eq  // eq = none
  401b90:	b	401b2c <main+0x46c>
  401b94:	cmp	w26, #0x0
  401b98:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401b9c:	csel	w23, w26, w20, eq  // eq = none
  401ba0:	mov	x0, x19
  401ba4:	mov	x1, xzr
  401ba8:	mov	x2, xzr
  401bac:	bl	401450 <internal_hashmap_free@plt>
  401bb0:	bl	401460 <ask_password_agent_close@plt>
  401bb4:	bl	401470 <polkit_agent_close@plt>
  401bb8:	bl	401480 <pager_close@plt>
  401bbc:	bl	401490 <mac_selinux_finish@plt>
  401bc0:	adrp	x8, 41f000 <__FRAME_END__+0x1c640>
  401bc4:	ldr	x8, [x8, #3704]
  401bc8:	adrp	x19, 41f000 <__FRAME_END__+0x1c640>
  401bcc:	ldr	x19, [x19, #3712]
  401bd0:	add	x9, x8, #0x7
  401bd4:	and	x20, x9, #0xfffffffffffffff8
  401bd8:	cmp	x20, x19
  401bdc:	cset	w9, cs  // cs = hs, nlast
  401be0:	cmp	x8, #0x0
  401be4:	cset	w8, eq  // eq = none
  401be8:	orr	w8, w8, w9
  401bec:	tbnz	w8, #0, 401c00 <main+0x540>
  401bf0:	ldp	x0, x8, [x20], #16
  401bf4:	blr	x8
  401bf8:	cmp	x20, x19
  401bfc:	b.cc	401bf0 <main+0x530>  // b.lo, b.ul, b.last
  401c00:	lsr	w0, w23, #31
  401c04:	ldp	x20, x19, [sp, #160]
  401c08:	ldp	x22, x21, [sp, #144]
  401c0c:	ldp	x24, x23, [sp, #128]
  401c10:	ldp	x26, x25, [sp, #112]
  401c14:	ldp	x28, x27, [sp, #96]
  401c18:	ldp	x29, x30, [sp, #80]
  401c1c:	add	sp, sp, #0xb0
  401c20:	ret
  401c24:	bl	4012f0 <strv_free@plt>
  401c28:	b	401a80 <main+0x3c0>
  401c2c:	adrp	x1, 402000 <parse_file+0x2fc>
  401c30:	adrp	x3, 402000 <parse_file+0x2fc>
  401c34:	add	x1, x1, #0x433
  401c38:	add	x3, x3, #0x52c
  401c3c:	mov	w2, #0x11d                 	// #285
  401c40:	b	401c58 <main+0x598>
  401c44:	adrp	x1, 402000 <parse_file+0x2fc>
  401c48:	adrp	x3, 402000 <parse_file+0x2fc>
  401c4c:	add	x1, x1, #0x433
  401c50:	add	x3, x3, #0x52c
  401c54:	mov	w2, #0x120                 	// #288
  401c58:	mov	w0, wzr
  401c5c:	bl	4013b0 <log_oom_internal@plt>
  401c60:	b	4018b8 <main+0x1f8>
  401c64:	adrp	x1, 402000 <parse_file+0x2fc>
  401c68:	adrp	x2, 402000 <parse_file+0x2fc>
  401c6c:	adrp	x4, 402000 <parse_file+0x2fc>
  401c70:	add	x1, x1, #0x537
  401c74:	add	x2, x2, #0x433
  401c78:	add	x4, x4, #0x4fe
  401c7c:	mov	w3, #0x12d                 	// #301
  401c80:	mov	w0, wzr
  401c84:	bl	4014a0 <log_assert_failed_unreachable_realm@plt>
  401c88:	adrp	x1, 402000 <parse_file+0x2fc>
  401c8c:	adrp	x2, 402000 <parse_file+0x2fc>
  401c90:	adrp	x4, 402000 <parse_file+0x2fc>
  401c94:	add	x1, x1, #0x4f4
  401c98:	add	x2, x2, #0x433
  401c9c:	add	x4, x4, #0x4fe
  401ca0:	mov	w3, #0xfe                  	// #254
  401ca4:	b	401cc4 <main+0x604>
  401ca8:	adrp	x1, 402000 <parse_file+0x2fc>
  401cac:	adrp	x2, 402000 <parse_file+0x2fc>
  401cb0:	adrp	x4, 402000 <parse_file+0x2fc>
  401cb4:	add	x1, x1, #0x51b
  401cb8:	add	x2, x2, #0x433
  401cbc:	add	x4, x4, #0x4fe
  401cc0:	mov	w3, #0xff                  	// #255
  401cc4:	mov	w0, wzr
  401cc8:	bl	4014b0 <log_assert_failed_realm@plt>

0000000000401ccc <option_free>:
  401ccc:	cbz	x0, 401d00 <option_free+0x34>
  401cd0:	stp	x29, x30, [sp, #-32]!
  401cd4:	str	x19, [sp, #16]
  401cd8:	mov	x19, x0
  401cdc:	ldr	x0, [x0]
  401ce0:	mov	x29, sp
  401ce4:	bl	4013c0 <free@plt>
  401ce8:	ldr	x0, [x19, #8]
  401cec:	bl	4013c0 <free@plt>
  401cf0:	mov	x0, x19
  401cf4:	ldr	x19, [sp, #16]
  401cf8:	ldp	x29, x30, [sp], #32
  401cfc:	b	4013c0 <free@plt>
  401d00:	ret

0000000000401d04 <parse_file>:
  401d04:	sub	sp, sp, #0xd0
  401d08:	stp	x29, x30, [sp, #112]
  401d0c:	add	x29, sp, #0x70
  401d10:	stp	x28, x27, [sp, #128]
  401d14:	stp	x26, x25, [sp, #144]
  401d18:	stp	x24, x23, [sp, #160]
  401d1c:	stp	x22, x21, [sp, #176]
  401d20:	stp	x20, x19, [sp, #192]
  401d24:	stur	xzr, [x29, #-16]
  401d28:	cbz	x1, 402208 <parse_file+0x504>
  401d2c:	adrp	x8, 402000 <parse_file+0x2fc>
  401d30:	add	x8, x8, #0x400
  401d34:	ldp	q0, q1, [x8]
  401d38:	ldr	q2, [x8, #32]
  401d3c:	mov	x19, x1
  401d40:	adrp	x1, 402000 <parse_file+0x2fc>
  401d44:	mov	w20, w2
  401d48:	mov	x28, x0
  401d4c:	add	x1, x1, #0x737
  401d50:	add	x3, sp, #0x30
  401d54:	sub	x4, x29, #0x10
  401d58:	mov	x0, x19
  401d5c:	mov	x2, xzr
  401d60:	stp	q0, q1, [sp, #48]
  401d64:	str	q2, [sp, #80]
  401d68:	bl	4014c0 <search_and_fopen@plt>
  401d6c:	mov	w21, w0
  401d70:	tbnz	w0, #31, 402178 <parse_file+0x474>
  401d74:	mov	w0, wzr
  401d78:	bl	401360 <log_get_max_level_realm@plt>
  401d7c:	cmp	w0, #0x7
  401d80:	b.lt	401db0 <parse_file+0xac>  // b.tstop
  401d84:	adrp	x2, 402000 <parse_file+0x2fc>
  401d88:	adrp	x4, 402000 <parse_file+0x2fc>
  401d8c:	adrp	x5, 402000 <parse_file+0x2fc>
  401d90:	add	x2, x2, #0x433
  401d94:	add	x4, x4, #0x73a
  401d98:	add	x5, x5, #0x76c
  401d9c:	mov	w0, #0x7                   	// #7
  401da0:	mov	w3, #0x8c                  	// #140
  401da4:	mov	w1, wzr
  401da8:	mov	x6, x19
  401dac:	bl	401370 <log_internal_realm@plt>
  401db0:	adrp	x26, 402000 <parse_file+0x2fc>
  401db4:	adrp	x20, 402000 <parse_file+0x2fc>
  401db8:	adrp	x25, 402000 <parse_file+0x2fc>
  401dbc:	mov	w22, wzr
  401dc0:	add	x26, x26, #0x433
  401dc4:	add	x20, x20, #0x73a
  401dc8:	add	x25, x25, #0x777
  401dcc:	str	x19, [sp, #24]
  401dd0:	ldur	x0, [x29, #-16]
  401dd4:	add	x3, sp, #0x28
  401dd8:	mov	w1, #0x100000              	// #1048576
  401ddc:	mov	w2, wzr
  401de0:	str	xzr, [sp, #40]
  401de4:	bl	4014d0 <read_line_full@plt>
  401de8:	cbz	w0, 401e40 <parse_file+0x13c>
  401dec:	mov	w23, w0
  401df0:	tbnz	w0, #31, 401e4c <parse_file+0x148>
  401df4:	ldr	x0, [sp, #40]
  401df8:	add	w22, w22, #0x1
  401dfc:	bl	4014e0 <strstrip@plt>
  401e00:	cbz	x0, 401e34 <parse_file+0x130>
  401e04:	ldrb	w8, [x0]
  401e08:	mov	x23, x0
  401e0c:	cbz	x8, 401e34 <parse_file+0x130>
  401e10:	cmp	w8, #0x3f
  401e14:	b.hi	401ec4 <parse_file+0x1c0>  // b.pmore
  401e18:	mov	w9, #0x1                   	// #1
  401e1c:	lsl	x8, x9, x8
  401e20:	mov	x9, #0x401                 	// #1025
  401e24:	movk	x9, #0x8, lsl #32
  401e28:	movk	x9, #0x800, lsl #48
  401e2c:	and	x8, x8, x9
  401e30:	cbz	x8, 401ec4 <parse_file+0x1c0>
  401e34:	mov	x27, xzr
  401e38:	mov	w24, #0x5                   	// #5
  401e3c:	b	401ea0 <parse_file+0x19c>
  401e40:	mov	x27, xzr
  401e44:	mov	w24, #0x4                   	// #4
  401e48:	b	401ea0 <parse_file+0x19c>
  401e4c:	mov	w0, wzr
  401e50:	bl	401360 <log_get_max_level_realm@plt>
  401e54:	cmp	w0, #0x3
  401e58:	b.lt	401e88 <parse_file+0x184>  // b.tstop
  401e5c:	mov	w0, #0x3                   	// #3
  401e60:	mov	w3, #0x99                  	// #153
  401e64:	mov	w1, w23
  401e68:	mov	x2, x26
  401e6c:	mov	x4, x20
  401e70:	mov	x5, x25
  401e74:	mov	x6, x19
  401e78:	bl	401370 <log_internal_realm@plt>
  401e7c:	str	w0, [sp, #36]
  401e80:	mov	x27, xzr
  401e84:	b	401e9c <parse_file+0x198>
  401e88:	mov	w8, wzr
  401e8c:	neg	w9, w23
  401e90:	sub	w8, w8, w9, uxtb
  401e94:	mov	x27, xzr
  401e98:	str	w8, [sp, #36]
  401e9c:	mov	w24, #0x1                   	// #1
  401ea0:	ldr	x0, [sp, #40]
  401ea4:	bl	4013c0 <free@plt>
  401ea8:	cbz	x27, 401eb4 <parse_file+0x1b0>
  401eac:	mov	x0, x27
  401eb0:	bl	401ccc <option_free>
  401eb4:	cbz	w24, 401dd0 <parse_file+0xcc>
  401eb8:	cmp	w24, #0x5
  401ebc:	b.eq	401dd0 <parse_file+0xcc>  // b.none
  401ec0:	b	402164 <parse_file+0x460>
  401ec4:	mov	w1, #0x3d                  	// #61
  401ec8:	mov	x0, x23
  401ecc:	bl	4014f0 <strchr@plt>
  401ed0:	cbz	x0, 402060 <parse_file+0x35c>
  401ed4:	mov	x27, x0
  401ed8:	mov	x0, x23
  401edc:	mov	x19, x26
  401ee0:	str	w21, [sp, #32]
  401ee4:	mov	x26, x28
  401ee8:	strb	wzr, [x27], #1
  401eec:	bl	4014e0 <strstrip@plt>
  401ef0:	mov	x8, x0
  401ef4:	ldrb	w21, [x8], #1
  401ef8:	cmp	w21, #0x2d
  401efc:	csel	x0, x8, x0, eq  // eq = none
  401f00:	bl	401310 <sysctl_normalize@plt>
  401f04:	mov	x25, x0
  401f08:	mov	x0, x27
  401f0c:	bl	4014e0 <strstrip@plt>
  401f10:	adrp	x8, 420000 <completed.8445>
  401f14:	ldr	x8, [x8, #8]
  401f18:	mov	x23, x0
  401f1c:	cbz	x8, 401f70 <parse_file+0x26c>
  401f20:	ldr	x27, [x8]
  401f24:	cbz	x27, 401f70 <parse_file+0x26c>
  401f28:	add	x28, x8, #0x8
  401f2c:	adrp	x1, 402000 <parse_file+0x2fc>
  401f30:	mov	x0, x27
  401f34:	add	x1, x1, #0x827
  401f38:	bl	401320 <path_startswith@plt>
  401f3c:	cmp	x0, #0x0
  401f40:	csel	x1, x27, x0, eq  // eq = none
  401f44:	mov	x0, x25
  401f48:	bl	401320 <path_startswith@plt>
  401f4c:	cbnz	x0, 401f70 <parse_file+0x26c>
  401f50:	ldr	x27, [x28], #8
  401f54:	mov	w24, #0x5                   	// #5
  401f58:	cbnz	x27, 401f2c <parse_file+0x228>
  401f5c:	mov	x28, x26
  401f60:	ldr	w21, [sp, #32]
  401f64:	mov	x26, x19
  401f68:	ldr	x19, [sp, #24]
  401f6c:	b	402104 <parse_file+0x400>
  401f70:	mov	x0, x26
  401f74:	mov	x1, x25
  401f78:	mov	x28, x26
  401f7c:	bl	401500 <internal_hashmap_get@plt>
  401f80:	mov	x26, x19
  401f84:	ldr	x19, [sp, #24]
  401f88:	cbz	x0, 401fec <parse_file+0x2e8>
  401f8c:	ldr	x1, [x0, #8]
  401f90:	mov	x24, x0
  401f94:	mov	x0, x23
  401f98:	bl	401510 <strcmp@plt>
  401f9c:	cbz	w0, 4020dc <parse_file+0x3d8>
  401fa0:	mov	w0, wzr
  401fa4:	bl	401360 <log_get_max_level_realm@plt>
  401fa8:	cmp	w0, #0x7
  401fac:	b.lt	401fdc <parse_file+0x2d8>  // b.tstop
  401fb0:	adrp	x5, 402000 <parse_file+0x2fc>
  401fb4:	mov	w0, #0x7                   	// #7
  401fb8:	mov	w3, #0xc1                  	// #193
  401fbc:	mov	w1, wzr
  401fc0:	mov	x2, x26
  401fc4:	mov	x4, x20
  401fc8:	add	x5, x5, #0x7c6
  401fcc:	mov	x6, x25
  401fd0:	mov	x7, x19
  401fd4:	str	w22, [sp]
  401fd8:	bl	401370 <log_internal_realm@plt>
  401fdc:	mov	x0, x28
  401fe0:	mov	x1, x25
  401fe4:	bl	401520 <internal_hashmap_remove@plt>
  401fe8:	bl	401ccc <option_free>
  401fec:	cmp	w21, #0x2d
  401ff0:	cset	w21, eq  // eq = none
  401ff4:	cbz	x25, 402228 <parse_file+0x524>
  401ff8:	cbz	x23, 402248 <parse_file+0x544>
  401ffc:	mov	w0, #0x18                  	// #24
  402000:	bl	401530 <malloc@plt>
  402004:	cbz	x0, 4020b8 <parse_file+0x3b4>
  402008:	mov	x27, x0
  40200c:	mov	x0, x25
  402010:	bl	401330 <strdup@plt>
  402014:	mov	x24, x0
  402018:	mov	x0, x23
  40201c:	bl	401330 <strdup@plt>
  402020:	ldur	w8, [x29, #-5]
  402024:	ldur	w9, [x29, #-8]
  402028:	stp	x24, x0, [x27]
  40202c:	strb	w21, [x27, #16]
  402030:	stur	w9, [x27, #17]
  402034:	str	w8, [x27, #20]
  402038:	cbz	x24, 4020b0 <parse_file+0x3ac>
  40203c:	cbz	x0, 4020b0 <parse_file+0x3ac>
  402040:	mov	x0, x28
  402044:	mov	x1, x24
  402048:	mov	x2, x27
  40204c:	bl	401540 <hashmap_put@plt>
  402050:	tbnz	w0, #31, 402110 <parse_file+0x40c>
  402054:	mov	x27, xzr
  402058:	mov	w24, wzr
  40205c:	b	402100 <parse_file+0x3fc>
  402060:	bl	401360 <log_get_max_level_realm@plt>
  402064:	cmp	w0, #0x4
  402068:	b.lt	40209c <parse_file+0x398>  // b.tstop
  40206c:	adrp	x8, 402000 <parse_file+0x2fc>
  402070:	mov	w1, #0x4                   	// #4
  402074:	mov	w6, #0xa6                  	// #166
  402078:	add	x8, x8, #0x79e
  40207c:	mov	x0, xzr
  402080:	mov	x2, x19
  402084:	mov	w3, w22
  402088:	mov	w4, wzr
  40208c:	mov	x5, x26
  402090:	mov	x7, x20
  402094:	stp	x8, x23, [sp]
  402098:	bl	401550 <log_syntax_internal@plt>
  40209c:	cmp	w21, #0x0
  4020a0:	mov	w8, #0xffffffea            	// #-22
  4020a4:	mov	x27, xzr
  4020a8:	csel	w21, w8, w21, eq  // eq = none
  4020ac:	b	401e38 <parse_file+0x134>
  4020b0:	mov	x0, x27
  4020b4:	bl	401ccc <option_free>
  4020b8:	mov	w2, #0xc7                  	// #199
  4020bc:	mov	w0, wzr
  4020c0:	mov	x1, x26
  4020c4:	mov	x3, x20
  4020c8:	bl	4013b0 <log_oom_internal@plt>
  4020cc:	str	w0, [sp, #36]
  4020d0:	mov	x27, xzr
  4020d4:	mov	w24, #0x1                   	// #1
  4020d8:	b	402100 <parse_file+0x3fc>
  4020dc:	ldrb	w8, [x24, #16]
  4020e0:	cmp	w21, #0x2d
  4020e4:	cset	w9, eq  // eq = none
  4020e8:	mov	x27, xzr
  4020ec:	cmp	w8, #0x0
  4020f0:	cset	w8, ne  // ne = any
  4020f4:	orr	w8, w9, w8
  4020f8:	strb	w8, [x24, #16]
  4020fc:	mov	w24, #0x5                   	// #5
  402100:	ldr	w21, [sp, #32]
  402104:	adrp	x25, 402000 <parse_file+0x2fc>
  402108:	add	x25, x25, #0x777
  40210c:	b	401ea0 <parse_file+0x19c>
  402110:	mov	w23, w0
  402114:	mov	w0, wzr
  402118:	bl	401360 <log_get_max_level_realm@plt>
  40211c:	cmp	w0, #0x3
  402120:	b.lt	402150 <parse_file+0x44c>  // b.tstop
  402124:	adrp	x5, 402000 <parse_file+0x2fc>
  402128:	mov	w0, #0x3                   	// #3
  40212c:	mov	w3, #0xcb                  	// #203
  402130:	mov	w1, w23
  402134:	mov	x2, x26
  402138:	mov	x4, x20
  40213c:	add	x5, x5, #0x7f7
  402140:	mov	x6, x25
  402144:	bl	401370 <log_internal_realm@plt>
  402148:	str	w0, [sp, #36]
  40214c:	b	4020d4 <parse_file+0x3d0>
  402150:	mov	w8, wzr
  402154:	neg	w9, w23
  402158:	sub	w8, w8, w9, uxtb
  40215c:	str	w8, [sp, #36]
  402160:	b	4020d4 <parse_file+0x3d0>
  402164:	ldr	w19, [sp, #36]
  402168:	cmp	w24, #0x4
  40216c:	b.ne	4021dc <parse_file+0x4d8>  // b.any
  402170:	mov	w19, w21
  402174:	b	4021dc <parse_file+0x4d8>
  402178:	cmn	w21, #0x2
  40217c:	b.ne	40218c <parse_file+0x488>  // b.any
  402180:	tbz	w20, #0, 40218c <parse_file+0x488>
  402184:	mov	w19, wzr
  402188:	b	4021dc <parse_file+0x4d8>
  40218c:	mov	w0, wzr
  402190:	bl	401360 <log_get_max_level_realm@plt>
  402194:	cmp	w0, #0x3
  402198:	b.lt	4021d0 <parse_file+0x4cc>  // b.tstop
  40219c:	adrp	x2, 402000 <parse_file+0x2fc>
  4021a0:	adrp	x4, 402000 <parse_file+0x2fc>
  4021a4:	adrp	x5, 402000 <parse_file+0x2fc>
  4021a8:	add	x2, x2, #0x433
  4021ac:	add	x4, x4, #0x73a
  4021b0:	add	x5, x5, #0x745
  4021b4:	mov	w0, #0x3                   	// #3
  4021b8:	mov	w3, #0x89                  	// #137
  4021bc:	mov	w1, w21
  4021c0:	mov	x6, x19
  4021c4:	bl	401370 <log_internal_realm@plt>
  4021c8:	mov	w19, w0
  4021cc:	b	4021dc <parse_file+0x4d8>
  4021d0:	mov	w8, wzr
  4021d4:	neg	w9, w21
  4021d8:	sub	w19, w8, w9, uxtb
  4021dc:	ldur	x0, [x29, #-16]
  4021e0:	bl	401560 <safe_fclose@plt>
  4021e4:	mov	w0, w19
  4021e8:	ldp	x20, x19, [sp, #192]
  4021ec:	ldp	x22, x21, [sp, #176]
  4021f0:	ldp	x24, x23, [sp, #160]
  4021f4:	ldp	x26, x25, [sp, #144]
  4021f8:	ldp	x28, x27, [sp, #128]
  4021fc:	ldp	x29, x30, [sp, #112]
  402200:	add	sp, sp, #0xd0
  402204:	ret
  402208:	adrp	x1, 402000 <parse_file+0x2fc>
  40220c:	adrp	x2, 402000 <parse_file+0x2fc>
  402210:	adrp	x4, 402000 <parse_file+0x2fc>
  402214:	add	x1, x1, #0x6fc
  402218:	add	x2, x2, #0x433
  40221c:	add	x4, x4, #0x701
  402220:	mov	w3, #0x82                  	// #130
  402224:	b	402264 <parse_file+0x560>
  402228:	adrp	x1, 402000 <parse_file+0x2fc>
  40222c:	adrp	x2, 402000 <parse_file+0x2fc>
  402230:	adrp	x4, 402000 <parse_file+0x2fc>
  402234:	add	x1, x1, #0x832
  402238:	add	x2, x2, #0x433
  40223c:	add	x4, x4, #0x836
  402240:	mov	w3, #0x3a                  	// #58
  402244:	b	402264 <parse_file+0x560>
  402248:	adrp	x1, 402000 <parse_file+0x2fc>
  40224c:	adrp	x2, 402000 <parse_file+0x2fc>
  402250:	adrp	x4, 402000 <parse_file+0x2fc>
  402254:	add	x1, x1, #0x86c
  402258:	add	x2, x2, #0x433
  40225c:	add	x4, x4, #0x836
  402260:	mov	w3, #0x3b                  	// #59
  402264:	mov	w0, wzr
  402268:	bl	4014b0 <log_assert_failed_realm@plt>
  40226c:	udf	#0

0000000000402270 <__libc_csu_init>:
  402270:	stp	x29, x30, [sp, #-64]!
  402274:	mov	x29, sp
  402278:	stp	x19, x20, [sp, #16]
  40227c:	adrp	x20, 41f000 <__FRAME_END__+0x1c640>
  402280:	add	x20, x20, #0xc48
  402284:	stp	x21, x22, [sp, #32]
  402288:	adrp	x21, 41f000 <__FRAME_END__+0x1c640>
  40228c:	add	x21, x21, #0xc40
  402290:	sub	x20, x20, x21
  402294:	mov	w22, w0
  402298:	stp	x23, x24, [sp, #48]
  40229c:	mov	x23, x1
  4022a0:	mov	x24, x2
  4022a4:	bl	401288 <_init>
  4022a8:	cmp	xzr, x20, asr #3
  4022ac:	b.eq	4022d8 <__libc_csu_init+0x68>  // b.none
  4022b0:	asr	x20, x20, #3
  4022b4:	mov	x19, #0x0                   	// #0
  4022b8:	ldr	x3, [x21, x19, lsl #3]
  4022bc:	mov	x2, x24
  4022c0:	add	x19, x19, #0x1
  4022c4:	mov	x1, x23
  4022c8:	mov	w0, w22
  4022cc:	blr	x3
  4022d0:	cmp	x20, x19
  4022d4:	b.ne	4022b8 <__libc_csu_init+0x48>  // b.any
  4022d8:	ldp	x19, x20, [sp, #16]
  4022dc:	ldp	x21, x22, [sp, #32]
  4022e0:	ldp	x23, x24, [sp, #48]
  4022e4:	ldp	x29, x30, [sp], #64
  4022e8:	ret
  4022ec:	nop

00000000004022f0 <__libc_csu_fini>:
  4022f0:	ret

Disassembly of section .fini:

00000000004022f4 <_fini>:
  4022f4:	stp	x29, x30, [sp, #-16]!
  4022f8:	mov	x29, sp
  4022fc:	ldp	x29, x30, [sp], #16
  402300:	ret
