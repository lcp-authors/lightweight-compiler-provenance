
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//head_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a20 <_init>:
 a20:	stp	x29, x30, [sp, #-16]!
 a24:	mov	x29, sp
 a28:	bl	b70 <call_weak_fn>
 a2c:	ldp	x29, x30, [sp], #16
 a30:	ret

Disassembly of section .plt:

0000000000000a40 <.plt>:
 a40:	stp	x16, x30, [sp, #-16]!
 a44:	adrp	x16, 11000 <__FRAME_END__+0xff44>
 a48:	ldr	x17, [x16, #4088]
 a4c:	add	x16, x16, #0xff8
 a50:	br	x17
 a54:	nop
 a58:	nop
 a5c:	nop

0000000000000a60 <builtin_error@plt>:
 a60:	adrp	x16, 12000 <builtin_error>
 a64:	ldr	x17, [x16]
 a68:	add	x16, x16, #0x0
 a6c:	br	x17

0000000000000a70 <__cxa_finalize@plt>:
 a70:	adrp	x16, 12000 <builtin_error>
 a74:	ldr	x17, [x16, #8]
 a78:	add	x16, x16, #0x8
 a7c:	br	x17

0000000000000a80 <make_bare_word@plt>:
 a80:	adrp	x16, 12000 <builtin_error>
 a84:	ldr	x17, [x16, #16]
 a88:	add	x16, x16, #0x10
 a8c:	br	x17

0000000000000a90 <fclose@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16, #24]
 a98:	add	x16, x16, #0x18
 a9c:	br	x17

0000000000000aa0 <atoi@plt>:
 aa0:	adrp	x16, 12000 <builtin_error>
 aa4:	ldr	x17, [x16, #32]
 aa8:	add	x16, x16, #0x20
 aac:	br	x17

0000000000000ab0 <fopen@plt>:
 ab0:	adrp	x16, 12000 <builtin_error>
 ab4:	ldr	x17, [x16, #40]
 ab8:	add	x16, x16, #0x28
 abc:	br	x17

0000000000000ac0 <builtin_help@plt>:
 ac0:	adrp	x16, 12000 <builtin_error>
 ac4:	ldr	x17, [x16, #48]
 ac8:	add	x16, x16, #0x30
 acc:	br	x17

0000000000000ad0 <builtin_usage@plt>:
 ad0:	adrp	x16, 12000 <builtin_error>
 ad4:	ldr	x17, [x16, #56]
 ad8:	add	x16, x16, #0x38
 adc:	br	x17

0000000000000ae0 <getc@plt>:
 ae0:	adrp	x16, 12000 <builtin_error>
 ae4:	ldr	x17, [x16, #64]
 ae8:	add	x16, x16, #0x40
 aec:	br	x17

0000000000000af0 <strerror@plt>:
 af0:	adrp	x16, 12000 <builtin_error>
 af4:	ldr	x17, [x16, #72]
 af8:	add	x16, x16, #0x48
 afc:	br	x17

0000000000000b00 <__gmon_start__@plt>:
 b00:	adrp	x16, 12000 <builtin_error>
 b04:	ldr	x17, [x16, #80]
 b08:	add	x16, x16, #0x50
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <builtin_error>
 b14:	ldr	x17, [x16, #88]
 b18:	add	x16, x16, #0x58
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <builtin_error>
 b24:	ldr	x17, [x16, #96]
 b28:	add	x16, x16, #0x60
 b2c:	br	x17

0000000000000b30 <printf@plt>:
 b30:	adrp	x16, 12000 <builtin_error>
 b34:	ldr	x17, [x16, #104]
 b38:	add	x16, x16, #0x68
 b3c:	br	x17

0000000000000b40 <__errno_location@plt>:
 b40:	adrp	x16, 12000 <builtin_error>
 b44:	ldr	x17, [x16, #112]
 b48:	add	x16, x16, #0x70
 b4c:	br	x17

0000000000000b50 <make_word_list@plt>:
 b50:	adrp	x16, 12000 <builtin_error>
 b54:	ldr	x17, [x16, #120]
 b58:	add	x16, x16, #0x78
 b5c:	br	x17

0000000000000b60 <putchar@plt>:
 b60:	adrp	x16, 12000 <builtin_error>
 b64:	ldr	x17, [x16, #128]
 b68:	add	x16, x16, #0x80
 b6c:	br	x17

Disassembly of section .text:

0000000000000b70 <call_weak_fn>:
 b70:	adrp	x0, 11000 <__FRAME_END__+0xff44>
 b74:	ldr	x0, [x0, #4040]
 b78:	cbz	x0, b80 <call_weak_fn+0x10>
 b7c:	b	b00 <__gmon_start__@plt>
 b80:	ret
 b84:	nop

0000000000000b88 <deregister_tm_clones>:
 b88:	adrp	x0, 12000 <builtin_error>
 b8c:	add	x0, x0, #0xf0
 b90:	adrp	x1, 12000 <builtin_error>
 b94:	add	x1, x1, #0xf0
 b98:	cmp	x1, x0
 b9c:	b.eq	bb4 <deregister_tm_clones+0x2c>  // b.none
 ba0:	adrp	x1, 11000 <__FRAME_END__+0xff44>
 ba4:	ldr	x1, [x1, #4016]
 ba8:	cbz	x1, bb4 <deregister_tm_clones+0x2c>
 bac:	mov	x16, x1
 bb0:	br	x16
 bb4:	ret

0000000000000bb8 <register_tm_clones>:
 bb8:	adrp	x0, 12000 <builtin_error>
 bbc:	add	x0, x0, #0xf0
 bc0:	adrp	x1, 12000 <builtin_error>
 bc4:	add	x1, x1, #0xf0
 bc8:	sub	x1, x1, x0
 bcc:	lsr	x2, x1, #63
 bd0:	add	x1, x2, x1, asr #3
 bd4:	cmp	xzr, x1, asr #1
 bd8:	asr	x1, x1, #1
 bdc:	b.eq	bf4 <register_tm_clones+0x3c>  // b.none
 be0:	adrp	x2, 11000 <__FRAME_END__+0xff44>
 be4:	ldr	x2, [x2, #4064]
 be8:	cbz	x2, bf4 <register_tm_clones+0x3c>
 bec:	mov	x16, x2
 bf0:	br	x16
 bf4:	ret

0000000000000bf8 <__do_global_dtors_aux>:
 bf8:	stp	x29, x30, [sp, #-32]!
 bfc:	mov	x29, sp
 c00:	str	x19, [sp, #16]
 c04:	adrp	x19, 12000 <builtin_error>
 c08:	ldrb	w0, [x19, #240]
 c0c:	cbnz	w0, c34 <__do_global_dtors_aux+0x3c>
 c10:	adrp	x0, 11000 <__FRAME_END__+0xff44>
 c14:	ldr	x0, [x0, #4024]
 c18:	cbz	x0, c28 <__do_global_dtors_aux+0x30>
 c1c:	adrp	x0, 12000 <builtin_error>
 c20:	ldr	x0, [x0, #136]
 c24:	bl	a70 <__cxa_finalize@plt>
 c28:	bl	b88 <deregister_tm_clones>
 c2c:	mov	w0, #0x1                   	// #1
 c30:	strb	w0, [x19, #240]
 c34:	ldr	x19, [sp, #16]
 c38:	ldp	x29, x30, [sp], #32
 c3c:	ret

0000000000000c40 <frame_dummy>:
 c40:	b	bb8 <register_tm_clones>

0000000000000c44 <head_builtin>:
 c44:	stp	x29, x30, [sp, #-96]!
 c48:	stp	x20, x19, [sp, #80]
 c4c:	mov	x20, x0
 c50:	stp	x28, x27, [sp, #16]
 c54:	stp	x26, x25, [sp, #32]
 c58:	stp	x24, x23, [sp, #48]
 c5c:	stp	x22, x21, [sp, #64]
 c60:	mov	x29, sp
 c64:	cbz	x0, cd0 <head_builtin+0x8c>
 c68:	mov	w19, #0x6e                  	// #110
 c6c:	mov	x21, x20
 c70:	ldr	x8, [x21, #8]
 c74:	ldr	x0, [x8]
 c78:	ldrb	w8, [x0]
 c7c:	cmp	w8, #0x2d
 c80:	b.ne	cd0 <head_builtin+0x8c>  // b.any
 c84:	ldrb	w8, [x0, #1]!
 c88:	cmp	w8, #0x2d
 c8c:	b.eq	cd0 <head_builtin+0x8c>  // b.none
 c90:	sub	w8, w8, #0x30
 c94:	and	w8, w8, #0xff
 c98:	cmp	w8, #0x9
 c9c:	b.hi	cd0 <head_builtin+0x8c>  // b.pmore
 ca0:	bl	a80 <make_bare_word@plt>
 ca4:	ldr	x1, [x21]
 ca8:	bl	b50 <make_word_list@plt>
 cac:	ldr	x8, [x21, #8]
 cb0:	ldr	x8, [x8]
 cb4:	strb	w19, [x8, #1]
 cb8:	ldr	x8, [x21, #8]
 cbc:	ldr	x8, [x8]
 cc0:	strb	wzr, [x8, #2]
 cc4:	str	x0, [x21]
 cc8:	ldr	x21, [x0]
 ccc:	cbnz	x21, c70 <head_builtin+0x2c>
 cd0:	bl	b20 <reset_internal_getopt@plt>
 cd4:	adrp	x23, 11000 <__FRAME_END__+0xff44>
 cd8:	ldr	x23, [x23, #4048]
 cdc:	adrp	x21, 0 <_init-0xa20>
 ce0:	mov	w19, #0xa                   	// #10
 ce4:	add	x21, x21, #0xef0
 ce8:	mov	x0, x20
 cec:	mov	x1, x21
 cf0:	bl	b10 <internal_getopt@plt>
 cf4:	cmp	w0, #0x6e
 cf8:	b.ne	d28 <head_builtin+0xe4>  // b.any
 cfc:	ldr	x22, [x23]
 d00:	mov	x0, x22
 d04:	bl	aa0 <atoi@plt>
 d08:	mov	w19, w0
 d0c:	cmp	w0, #0x0
 d10:	b.gt	ce8 <head_builtin+0xa4>
 d14:	adrp	x0, 0 <_init-0xa20>
 d18:	add	x0, x0, #0xef3
 d1c:	mov	x1, x22
 d20:	bl	a60 <builtin_error@plt>
 d24:	b	e0c <head_builtin+0x1c8>
 d28:	cmn	w0, #0x63
 d2c:	b.eq	e00 <head_builtin+0x1bc>  // b.none
 d30:	cmn	w0, #0x1
 d34:	b.ne	e08 <head_builtin+0x1c4>  // b.any
 d38:	adrp	x8, 11000 <__FRAME_END__+0xff44>
 d3c:	ldr	x8, [x8, #4056]
 d40:	ldr	x21, [x8]
 d44:	cbz	x21, e30 <head_builtin+0x1ec>
 d48:	adrp	x20, 0 <_init-0xa20>
 d4c:	adrp	x26, 0 <_init-0xa20>
 d50:	adrp	x27, 0 <_init-0xa20>
 d54:	adrp	x22, 0 <_init-0xa20>
 d58:	mov	w23, wzr
 d5c:	mov	w28, #0x1                   	// #1
 d60:	add	x20, x20, #0xf06
 d64:	add	x26, x26, #0xf1c
 d68:	add	x27, x27, #0xf1b
 d6c:	add	x22, x22, #0xf0f
 d70:	mov	x25, x21
 d74:	ldr	x8, [x25, #8]
 d78:	mov	x1, x20
 d7c:	ldr	x0, [x8]
 d80:	bl	ab0 <fopen@plt>
 d84:	cbz	x0, dcc <head_builtin+0x188>
 d88:	ldr	x8, [x21]
 d8c:	mov	x24, x0
 d90:	cbz	x8, db0 <head_builtin+0x16c>
 d94:	ldr	x8, [x25, #8]
 d98:	cmp	w28, #0x0
 d9c:	csel	x1, x27, x26, eq  // eq = none
 da0:	mov	x0, x22
 da4:	ldr	x2, [x8]
 da8:	bl	b30 <printf@plt>
 dac:	mov	w28, wzr
 db0:	mov	x0, x24
 db4:	mov	w1, w19
 db8:	bl	e5c <file_head>
 dbc:	mov	w23, w0
 dc0:	mov	x0, x24
 dc4:	bl	a90 <fclose@plt>
 dc8:	b	df4 <head_builtin+0x1b0>
 dcc:	ldr	x8, [x25, #8]
 dd0:	ldr	x24, [x8]
 dd4:	bl	b40 <__errno_location@plt>
 dd8:	ldr	w0, [x0]
 ddc:	bl	af0 <strerror@plt>
 de0:	mov	x2, x0
 de4:	adrp	x0, 0 <_init-0xa20>
 de8:	add	x0, x0, #0xf08
 dec:	mov	x1, x24
 df0:	bl	a60 <builtin_error@plt>
 df4:	ldr	x25, [x25]
 df8:	cbnz	x25, d74 <head_builtin+0x130>
 dfc:	b	e10 <head_builtin+0x1cc>
 e00:	bl	ac0 <builtin_help@plt>
 e04:	b	e0c <head_builtin+0x1c8>
 e08:	bl	ad0 <builtin_usage@plt>
 e0c:	mov	w23, #0x102                 	// #258
 e10:	mov	w0, w23
 e14:	ldp	x20, x19, [sp, #80]
 e18:	ldp	x22, x21, [sp, #64]
 e1c:	ldp	x24, x23, [sp, #48]
 e20:	ldp	x26, x25, [sp, #32]
 e24:	ldp	x28, x27, [sp, #16]
 e28:	ldp	x29, x30, [sp], #96
 e2c:	ret
 e30:	adrp	x8, 11000 <__FRAME_END__+0xff44>
 e34:	ldr	x8, [x8, #4032]
 e38:	mov	w1, w19
 e3c:	ldp	x20, x19, [sp, #80]
 e40:	ldp	x22, x21, [sp, #64]
 e44:	ldr	x0, [x8]
 e48:	ldp	x24, x23, [sp, #48]
 e4c:	ldp	x26, x25, [sp, #32]
 e50:	ldp	x28, x27, [sp, #16]
 e54:	ldp	x29, x30, [sp], #96
 e58:	b	e5c <file_head>

0000000000000e5c <file_head>:
 e5c:	stp	x29, x30, [sp, #-48]!
 e60:	str	x21, [sp, #16]
 e64:	stp	x20, x19, [sp, #32]
 e68:	mov	x29, sp
 e6c:	cbz	w1, ea8 <file_head+0x4c>
 e70:	mov	w19, w1
 e74:	mov	x20, x0
 e78:	sub	w19, w19, #0x1
 e7c:	mov	x0, x20
 e80:	bl	ae0 <getc@plt>
 e84:	cmn	w0, #0x1
 e88:	b.eq	ea4 <file_head+0x48>  // b.none
 e8c:	mov	w21, w0
 e90:	bl	b60 <putchar@plt>
 e94:	cmn	w0, #0x1
 e98:	b.eq	eb0 <file_head+0x54>  // b.none
 e9c:	cmp	w21, #0xa
 ea0:	b.ne	e7c <file_head+0x20>  // b.any
 ea4:	cbnz	w19, e78 <file_head+0x1c>
 ea8:	mov	w0, wzr
 eac:	b	ed0 <file_head+0x74>
 eb0:	bl	b40 <__errno_location@plt>
 eb4:	ldr	w0, [x0]
 eb8:	bl	af0 <strerror@plt>
 ebc:	mov	x1, x0
 ec0:	adrp	x0, 1000 <_fini+0x120>
 ec4:	add	x0, x0, #0xa
 ec8:	bl	a60 <builtin_error@plt>
 ecc:	mov	w0, #0x1                   	// #1
 ed0:	ldp	x20, x19, [sp, #32]
 ed4:	ldr	x21, [sp, #16]
 ed8:	ldp	x29, x30, [sp], #48
 edc:	ret

Disassembly of section .fini:

0000000000000ee0 <_fini>:
 ee0:	stp	x29, x30, [sp, #-16]!
 ee4:	mov	x29, sp
 ee8:	ldp	x29, x30, [sp], #16
 eec:	ret
