
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-done_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400900 <_init>:
  400900:	stp	x29, x30, [sp, #-16]!
  400904:	mov	x29, sp
  400908:	bl	400a80 <call_weak_fn>
  40090c:	ldp	x29, x30, [sp], #16
  400910:	ret

Disassembly of section .plt:

0000000000400920 <.plt>:
  400920:	stp	x16, x30, [sp, #-16]!
  400924:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400928:	ldr	x17, [x16, #3952]
  40092c:	add	x16, x16, #0xf70
  400930:	br	x17
  400934:	nop
  400938:	nop
  40093c:	nop

0000000000400940 <mac_selinux_init@plt>:
  400940:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400944:	ldr	x17, [x16, #3960]
  400948:	add	x16, x16, #0xf78
  40094c:	br	x17

0000000000400950 <__libc_start_main@plt>:
  400950:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400954:	ldr	x17, [x16, #3968]
  400958:	add	x16, x16, #0xf80
  40095c:	br	x17

0000000000400960 <__gmon_start__@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400964:	ldr	x17, [x16, #3976]
  400968:	add	x16, x16, #0xf88
  40096c:	br	x17

0000000000400970 <write_string_file_atomic_label_ts@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400974:	ldr	x17, [x16, #3984]
  400978:	add	x16, x16, #0xf90
  40097c:	br	x17

0000000000400980 <log_setup_service@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400984:	ldr	x17, [x16, #3992]
  400988:	add	x16, x16, #0xf98
  40098c:	br	x17

0000000000400990 <abort@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400994:	ldr	x17, [x16, #4000]
  400998:	add	x16, x16, #0xfa0
  40099c:	br	x17

00000000004009a0 <__errno_location@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009a4:	ldr	x17, [x16, #4008]
  4009a8:	add	x16, x16, #0xfa8
  4009ac:	br	x17

00000000004009b0 <__stack_chk_fail@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009b4:	ldr	x17, [x16, #4016]
  4009b8:	add	x16, x16, #0xfb0
  4009bc:	br	x17

00000000004009c0 <__xstat64@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009c4:	ldr	x17, [x16, #4024]
  4009c8:	add	x16, x16, #0xfb8
  4009cc:	br	x17

00000000004009d0 <log_internal_realm@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009d4:	ldr	x17, [x16, #4032]
  4009d8:	add	x16, x16, #0xfc0
  4009dc:	br	x17

00000000004009e0 <asprintf@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009e4:	ldr	x17, [x16, #4040]
  4009e8:	add	x16, x16, #0xfc8
  4009ec:	br	x17

00000000004009f0 <free@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  4009f4:	ldr	x17, [x16, #4048]
  4009f8:	add	x16, x16, #0xfd0
  4009fc:	br	x17

0000000000400a00 <log_oom_internal@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400a04:	ldr	x17, [x16, #4056]
  400a08:	add	x16, x16, #0xfd8
  400a0c:	br	x17

0000000000400a10 <timespec_load_nsec@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400a14:	ldr	x17, [x16, #4064]
  400a18:	add	x16, x16, #0xfe0
  400a1c:	br	x17

0000000000400a20 <log_get_max_level_realm@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfdf0>
  400a24:	ldr	x17, [x16, #4072]
  400a28:	add	x16, x16, #0xfe8
  400a2c:	br	x17

Disassembly of section .text:

0000000000400a30 <_start>:
  400a30:	mov	x29, #0x0                   	// #0
  400a34:	mov	x30, #0x0                   	// #0
  400a38:	mov	x5, x0
  400a3c:	ldr	x1, [sp]
  400a40:	add	x2, sp, #0x8
  400a44:	mov	x6, sp
  400a48:	movz	x0, #0x0, lsl #48
  400a4c:	movk	x0, #0x0, lsl #32
  400a50:	movk	x0, #0x40, lsl #16
  400a54:	movk	x0, #0xce4
  400a58:	movz	x3, #0x0, lsl #48
  400a5c:	movk	x3, #0x0, lsl #32
  400a60:	movk	x3, #0x40, lsl #16
  400a64:	movk	x3, #0xe20
  400a68:	movz	x4, #0x0, lsl #48
  400a6c:	movk	x4, #0x0, lsl #32
  400a70:	movk	x4, #0x40, lsl #16
  400a74:	movk	x4, #0xea0
  400a78:	bl	400950 <__libc_start_main@plt>
  400a7c:	bl	400990 <abort@plt>

0000000000400a80 <call_weak_fn>:
  400a80:	adrp	x0, 411000 <__FRAME_END__+0xfdf0>
  400a84:	ldr	x0, [x0, #4088]
  400a88:	cbz	x0, 400a90 <call_weak_fn+0x10>
  400a8c:	b	400960 <__gmon_start__@plt>
  400a90:	ret

0000000000400a94 <deregister_tm_clones>:
  400a94:	adrp	x0, 412000 <__TMC_END__>
  400a98:	add	x0, x0, #0x0
  400a9c:	adrp	x1, 412000 <__TMC_END__>
  400aa0:	add	x1, x1, #0x0
  400aa4:	cmp	x0, x1
  400aa8:	b.eq	400adc <deregister_tm_clones+0x48>  // b.none
  400aac:	stp	x29, x30, [sp, #-32]!
  400ab0:	mov	x29, sp
  400ab4:	adrp	x0, 400000 <_init-0x900>
  400ab8:	ldr	x0, [x0, #3768]
  400abc:	str	x0, [sp, #24]
  400ac0:	mov	x1, x0
  400ac4:	cbz	x1, 400ad4 <deregister_tm_clones+0x40>
  400ac8:	adrp	x0, 412000 <__TMC_END__>
  400acc:	add	x0, x0, #0x0
  400ad0:	blr	x1
  400ad4:	ldp	x29, x30, [sp], #32
  400ad8:	ret
  400adc:	ret

0000000000400ae0 <register_tm_clones>:
  400ae0:	adrp	x0, 412000 <__TMC_END__>
  400ae4:	add	x0, x0, #0x0
  400ae8:	adrp	x1, 412000 <__TMC_END__>
  400aec:	add	x1, x1, #0x0
  400af0:	sub	x0, x0, x1
  400af4:	lsr	x1, x0, #63
  400af8:	add	x0, x1, x0, asr #3
  400afc:	cmp	xzr, x0, asr #1
  400b00:	b.eq	400b38 <register_tm_clones+0x58>  // b.none
  400b04:	stp	x29, x30, [sp, #-32]!
  400b08:	mov	x29, sp
  400b0c:	asr	x1, x0, #1
  400b10:	adrp	x0, 400000 <_init-0x900>
  400b14:	ldr	x0, [x0, #3776]
  400b18:	str	x0, [sp, #24]
  400b1c:	mov	x2, x0
  400b20:	cbz	x2, 400b30 <register_tm_clones+0x50>
  400b24:	adrp	x0, 412000 <__TMC_END__>
  400b28:	add	x0, x0, #0x0
  400b2c:	blr	x2
  400b30:	ldp	x29, x30, [sp], #32
  400b34:	ret
  400b38:	ret

0000000000400b3c <__do_global_dtors_aux>:
  400b3c:	adrp	x0, 412000 <__TMC_END__>
  400b40:	ldrb	w0, [x0]
  400b44:	cbnz	w0, 400b68 <__do_global_dtors_aux+0x2c>
  400b48:	stp	x29, x30, [sp, #-16]!
  400b4c:	mov	x29, sp
  400b50:	bl	400a94 <deregister_tm_clones>
  400b54:	adrp	x0, 412000 <__TMC_END__>
  400b58:	mov	w1, #0x1                   	// #1
  400b5c:	strb	w1, [x0]
  400b60:	ldp	x29, x30, [sp], #16
  400b64:	ret
  400b68:	ret

0000000000400b6c <frame_dummy>:
  400b6c:	stp	x29, x30, [sp, #-16]!
  400b70:	mov	x29, sp
  400b74:	bl	400ae0 <register_tm_clones>
  400b78:	ldp	x29, x30, [sp], #16
  400b7c:	ret

0000000000400b80 <apply_timestamp>:
  400b80:	stp	x29, x30, [sp, #-48]!
  400b84:	mov	x29, sp
  400b88:	stp	x19, x20, [sp, #16]
  400b8c:	mov	x20, x0
  400b90:	mov	x19, x1
  400b94:	adrp	x1, 411000 <__FRAME_END__+0xfdf0>
  400b98:	ldr	x0, [x1, #3368]
  400b9c:	str	x0, [sp, #40]
  400ba0:	mov	x0, #0x0                   	// #0
  400ba4:	str	xzr, [sp, #32]
  400ba8:	mov	x0, x19
  400bac:	bl	400a10 <timespec_load_nsec@plt>
  400bb0:	mov	x2, x0
  400bb4:	adrp	x1, 400000 <_init-0x900>
  400bb8:	add	x1, x1, #0xec8
  400bbc:	add	x0, sp, #0x20
  400bc0:	bl	4009e0 <asprintf@plt>
  400bc4:	tbnz	w0, #31, 400c18 <apply_timestamp+0x98>
  400bc8:	mov	x2, x19
  400bcc:	ldr	x1, [sp, #32]
  400bd0:	mov	x0, x20
  400bd4:	bl	400970 <write_string_file_atomic_label_ts@plt>
  400bd8:	mov	w19, w0
  400bdc:	cmn	w0, #0x1e
  400be0:	b.eq	400c3c <apply_timestamp+0xbc>  // b.none
  400be4:	tbnz	w0, #31, 400c88 <apply_timestamp+0x108>
  400be8:	mov	w19, #0x0                   	// #0
  400bec:	ldr	x0, [sp, #32]
  400bf0:	bl	4009f0 <free@plt>
  400bf4:	adrp	x0, 411000 <__FRAME_END__+0xfdf0>
  400bf8:	ldr	x1, [sp, #40]
  400bfc:	ldr	x0, [x0, #3368]
  400c00:	eor	x0, x1, x0
  400c04:	cbnz	x0, 400ce0 <apply_timestamp+0x160>
  400c08:	mov	w0, w19
  400c0c:	ldp	x19, x20, [sp, #16]
  400c10:	ldp	x29, x30, [sp], #48
  400c14:	ret
  400c18:	adrp	x3, 401000 <_fini+0x15c>
  400c1c:	add	x3, x3, #0x68
  400c20:	mov	w2, #0x1e                  	// #30
  400c24:	adrp	x1, 400000 <_init-0x900>
  400c28:	add	x1, x1, #0xf93
  400c2c:	mov	w0, #0x0                   	// #0
  400c30:	bl	400a00 <log_oom_internal@plt>
  400c34:	mov	w19, w0
  400c38:	b	400bec <apply_timestamp+0x6c>
  400c3c:	mov	w0, #0x0                   	// #0
  400c40:	bl	400a20 <log_get_max_level_realm@plt>
  400c44:	cmp	w0, #0x6
  400c48:	b.gt	400c54 <apply_timestamp+0xd4>
  400c4c:	mov	w19, #0x0                   	// #0
  400c50:	b	400bec <apply_timestamp+0x6c>
  400c54:	mov	x6, x20
  400c58:	adrp	x5, 400000 <_init-0x900>
  400c5c:	add	x5, x5, #0xfb8
  400c60:	adrp	x4, 401000 <_fini+0x15c>
  400c64:	add	x4, x4, #0x68
  400c68:	mov	w3, #0x22                  	// #34
  400c6c:	adrp	x2, 400000 <_init-0x900>
  400c70:	add	x2, x2, #0xf93
  400c74:	mov	w1, #0x0                   	// #0
  400c78:	mov	w0, #0x7                   	// #7
  400c7c:	bl	4009d0 <log_internal_realm@plt>
  400c80:	mov	w19, w0
  400c84:	b	400bec <apply_timestamp+0x6c>
  400c88:	mov	w0, #0x0                   	// #0
  400c8c:	bl	400a20 <log_get_max_level_realm@plt>
  400c90:	cmp	w0, #0x2
  400c94:	b.gt	400cac <apply_timestamp+0x12c>
  400c98:	cmp	w19, #0x0
  400c9c:	cneg	w19, w19, lt  // lt = tstop
  400ca0:	and	w19, w19, #0xff
  400ca4:	neg	w19, w19
  400ca8:	b	400bec <apply_timestamp+0x6c>
  400cac:	mov	x6, x20
  400cb0:	adrp	x5, 400000 <_init-0x900>
  400cb4:	add	x5, x5, #0xfe8
  400cb8:	adrp	x4, 401000 <_fini+0x15c>
  400cbc:	add	x4, x4, #0x68
  400cc0:	mov	w3, #0x24                  	// #36
  400cc4:	adrp	x2, 400000 <_init-0x900>
  400cc8:	add	x2, x2, #0xf93
  400ccc:	mov	w1, w19
  400cd0:	mov	w0, #0x3                   	// #3
  400cd4:	bl	4009d0 <log_internal_realm@plt>
  400cd8:	mov	w19, w0
  400cdc:	b	400bec <apply_timestamp+0x6c>
  400ce0:	bl	4009b0 <__stack_chk_fail@plt>

0000000000400ce4 <main>:
  400ce4:	stp	x29, x30, [sp, #-176]!
  400ce8:	mov	x29, sp
  400cec:	adrp	x0, 411000 <__FRAME_END__+0xfdf0>
  400cf0:	ldr	x1, [x0, #3368]
  400cf4:	str	x1, [sp, #168]
  400cf8:	mov	x1, #0x0                   	// #0
  400cfc:	bl	400980 <log_setup_service@plt>
  400d00:	add	x2, sp, #0x28
  400d04:	adrp	x1, 401000 <_fini+0x15c>
  400d08:	add	x1, x1, #0x8
  400d0c:	mov	w0, #0x0                   	// #0
  400d10:	bl	4009c0 <__xstat64@plt>
  400d14:	tbnz	w0, #31, 400d78 <main+0x94>
  400d18:	str	x19, [sp, #16]
  400d1c:	bl	400940 <mac_selinux_init@plt>
  400d20:	mov	w19, w0
  400d24:	tbnz	w0, #31, 400dc4 <main+0xe0>
  400d28:	add	x1, sp, #0x80
  400d2c:	adrp	x0, 401000 <_fini+0x15c>
  400d30:	add	x0, x0, #0x48
  400d34:	bl	400b80 <apply_timestamp>
  400d38:	mov	w19, w0
  400d3c:	add	x1, sp, #0x80
  400d40:	adrp	x0, 401000 <_fini+0x15c>
  400d44:	add	x0, x0, #0x58
  400d48:	bl	400b80 <apply_timestamp>
  400d4c:	cmp	w19, #0x0
  400d50:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  400d54:	cset	w0, lt  // lt = tstop
  400d58:	ldr	x19, [sp, #16]
  400d5c:	adrp	x1, 411000 <__FRAME_END__+0xfdf0>
  400d60:	ldr	x2, [sp, #168]
  400d64:	ldr	x1, [x1, #3368]
  400d68:	eor	x1, x2, x1
  400d6c:	cbnz	x1, 400e14 <main+0x130>
  400d70:	ldp	x29, x30, [sp], #176
  400d74:	ret
  400d78:	mov	w0, #0x0                   	// #0
  400d7c:	bl	400a20 <log_get_max_level_realm@plt>
  400d80:	cmp	w0, #0x2
  400d84:	b.gt	400d90 <main+0xac>
  400d88:	mov	w0, #0x1                   	// #1
  400d8c:	b	400d5c <main+0x78>
  400d90:	bl	4009a0 <__errno_location@plt>
  400d94:	adrp	x5, 401000 <_fini+0x15c>
  400d98:	add	x5, x5, #0x10
  400d9c:	adrp	x4, 401000 <_fini+0x15c>
  400da0:	add	x4, x4, #0x78
  400da4:	mov	w3, #0x2f                  	// #47
  400da8:	adrp	x2, 400000 <_init-0x900>
  400dac:	add	x2, x2, #0xf93
  400db0:	ldr	w1, [x0]
  400db4:	mov	w0, #0x3                   	// #3
  400db8:	bl	4009d0 <log_internal_realm@plt>
  400dbc:	mov	w0, #0x1                   	// #1
  400dc0:	b	400d5c <main+0x78>
  400dc4:	mov	w0, #0x0                   	// #0
  400dc8:	bl	400a20 <log_get_max_level_realm@plt>
  400dcc:	cmp	w0, #0x2
  400dd0:	b.gt	400de0 <main+0xfc>
  400dd4:	mov	w0, #0x1                   	// #1
  400dd8:	ldr	x19, [sp, #16]
  400ddc:	b	400d5c <main+0x78>
  400de0:	adrp	x5, 401000 <_fini+0x15c>
  400de4:	add	x5, x5, #0x28
  400de8:	adrp	x4, 401000 <_fini+0x15c>
  400dec:	add	x4, x4, #0x78
  400df0:	mov	w3, #0x35                  	// #53
  400df4:	adrp	x2, 400000 <_init-0x900>
  400df8:	add	x2, x2, #0xf93
  400dfc:	mov	w1, w19
  400e00:	mov	w0, #0x3                   	// #3
  400e04:	bl	4009d0 <log_internal_realm@plt>
  400e08:	mov	w0, #0x1                   	// #1
  400e0c:	ldr	x19, [sp, #16]
  400e10:	b	400d5c <main+0x78>
  400e14:	str	x19, [sp, #16]
  400e18:	bl	4009b0 <__stack_chk_fail@plt>
  400e1c:	nop

0000000000400e20 <__libc_csu_init>:
  400e20:	stp	x29, x30, [sp, #-64]!
  400e24:	mov	x29, sp
  400e28:	stp	x19, x20, [sp, #16]
  400e2c:	adrp	x20, 411000 <__FRAME_END__+0xfdf0>
  400e30:	add	x20, x20, #0xd20
  400e34:	stp	x21, x22, [sp, #32]
  400e38:	adrp	x21, 411000 <__FRAME_END__+0xfdf0>
  400e3c:	add	x21, x21, #0xd18
  400e40:	sub	x20, x20, x21
  400e44:	mov	w22, w0
  400e48:	stp	x23, x24, [sp, #48]
  400e4c:	mov	x23, x1
  400e50:	mov	x24, x2
  400e54:	bl	400900 <_init>
  400e58:	cmp	xzr, x20, asr #3
  400e5c:	b.eq	400e88 <__libc_csu_init+0x68>  // b.none
  400e60:	asr	x20, x20, #3
  400e64:	mov	x19, #0x0                   	// #0
  400e68:	ldr	x3, [x21, x19, lsl #3]
  400e6c:	mov	x2, x24
  400e70:	add	x19, x19, #0x1
  400e74:	mov	x1, x23
  400e78:	mov	w0, w22
  400e7c:	blr	x3
  400e80:	cmp	x20, x19
  400e84:	b.ne	400e68 <__libc_csu_init+0x48>  // b.any
  400e88:	ldp	x19, x20, [sp, #16]
  400e8c:	ldp	x21, x22, [sp, #32]
  400e90:	ldp	x23, x24, [sp, #48]
  400e94:	ldp	x29, x30, [sp], #64
  400e98:	ret
  400e9c:	nop

0000000000400ea0 <__libc_csu_fini>:
  400ea0:	ret

Disassembly of section .fini:

0000000000400ea4 <_fini>:
  400ea4:	stp	x29, x30, [sp, #-16]!
  400ea8:	mov	x29, sp
  400eac:	ldp	x29, x30, [sp], #16
  400eb0:	ret
