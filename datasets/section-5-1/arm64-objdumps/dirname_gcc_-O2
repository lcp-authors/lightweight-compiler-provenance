
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dirname_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000710 <_init>:
 710:	stp	x29, x30, [sp, #-16]!
 714:	mov	x29, sp
 718:	bl	7c0 <call_weak_fn>
 71c:	ldp	x29, x30, [sp], #16
 720:	ret

Disassembly of section .plt:

0000000000000730 <.plt>:
 730:	stp	x16, x30, [sp, #-16]!
 734:	adrp	x16, 10000 <__FRAME_END__+0xf40c>
 738:	ldr	x17, [x16, #4088]
 73c:	add	x16, x16, #0xff8
 740:	br	x17
 744:	nop
 748:	nop
 74c:	nop

0000000000000750 <strlen@plt>:
 750:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 754:	ldr	x17, [x16]
 758:	add	x16, x16, #0x0
 75c:	br	x17

0000000000000760 <__cxa_finalize@plt>:
 760:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 764:	ldr	x17, [x16, #8]
 768:	add	x16, x16, #0x8
 76c:	br	x17

0000000000000770 <builtin_usage@plt>:
 770:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 774:	ldr	x17, [x16, #16]
 778:	add	x16, x16, #0x10
 77c:	br	x17

0000000000000780 <__gmon_start__@plt>:
 780:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 784:	ldr	x17, [x16, #24]
 788:	add	x16, x16, #0x18
 78c:	br	x17

0000000000000790 <puts@plt>:
 790:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 794:	ldr	x17, [x16, #32]
 798:	add	x16, x16, #0x20
 79c:	br	x17

00000000000007a0 <no_options@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #40]
 7a8:	add	x16, x16, #0x28
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #48]
 7b8:	add	x16, x16, #0x30
 7bc:	br	x17

Disassembly of section .text:

00000000000007c0 <call_weak_fn>:
 7c0:	adrp	x0, 10000 <__FRAME_END__+0xf40c>
 7c4:	ldr	x0, [x0, #4048]
 7c8:	cbz	x0, 7d0 <call_weak_fn+0x10>
 7cc:	b	780 <__gmon_start__@plt>
 7d0:	ret
 7d4:	nop

00000000000007d8 <deregister_tm_clones>:
 7d8:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 7dc:	add	x0, x0, #0x98
 7e0:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 7e4:	add	x1, x1, #0x98
 7e8:	cmp	x1, x0
 7ec:	b.eq	804 <deregister_tm_clones+0x2c>  // b.none
 7f0:	adrp	x1, 10000 <__FRAME_END__+0xf40c>
 7f4:	ldr	x1, [x1, #4024]
 7f8:	cbz	x1, 804 <deregister_tm_clones+0x2c>
 7fc:	mov	x16, x1
 800:	br	x16
 804:	ret

0000000000000808 <register_tm_clones>:
 808:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 80c:	add	x0, x0, #0x98
 810:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 814:	add	x1, x1, #0x98
 818:	sub	x1, x1, x0
 81c:	lsr	x2, x1, #63
 820:	add	x1, x2, x1, asr #3
 824:	cmp	xzr, x1, asr #1
 828:	asr	x1, x1, #1
 82c:	b.eq	844 <register_tm_clones+0x3c>  // b.none
 830:	adrp	x2, 10000 <__FRAME_END__+0xf40c>
 834:	ldr	x2, [x2, #4064]
 838:	cbz	x2, 844 <register_tm_clones+0x3c>
 83c:	mov	x16, x2
 840:	br	x16
 844:	ret

0000000000000848 <__do_global_dtors_aux>:
 848:	stp	x29, x30, [sp, #-32]!
 84c:	mov	x29, sp
 850:	str	x19, [sp, #16]
 854:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 858:	ldrb	w0, [x19, #152]
 85c:	cbnz	w0, 884 <__do_global_dtors_aux+0x3c>
 860:	adrp	x0, 10000 <__FRAME_END__+0xf40c>
 864:	ldr	x0, [x0, #4032]
 868:	cbz	x0, 878 <__do_global_dtors_aux+0x30>
 86c:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 870:	ldr	x0, [x0, #56]
 874:	bl	760 <__cxa_finalize@plt>
 878:	bl	7d8 <deregister_tm_clones>
 87c:	mov	w0, #0x1                   	// #1
 880:	strb	w0, [x19, #152]
 884:	ldr	x19, [sp, #16]
 888:	ldp	x29, x30, [sp], #32
 88c:	ret

0000000000000890 <frame_dummy>:
 890:	b	808 <register_tm_clones>
 894:	nop

0000000000000898 <dirname_builtin>:
 898:	stp	x29, x30, [sp, #-32]!
 89c:	mov	x29, sp
 8a0:	stp	x19, x20, [sp, #16]
 8a4:	mov	w19, #0x102                 	// #258
 8a8:	bl	7a0 <no_options@plt>
 8ac:	cbnz	w0, 960 <dirname_builtin+0xc8>
 8b0:	mov	w19, w0
 8b4:	adrp	x0, 10000 <__FRAME_END__+0xf40c>
 8b8:	ldr	x0, [x0, #4056]
 8bc:	ldr	x0, [x0]
 8c0:	cbz	x0, 970 <dirname_builtin+0xd8>
 8c4:	ldr	x1, [x0]
 8c8:	cbnz	x1, 970 <dirname_builtin+0xd8>
 8cc:	ldr	x0, [x0, #8]
 8d0:	ldr	x20, [x0]
 8d4:	mov	x0, x20
 8d8:	bl	750 <strlen@plt>
 8dc:	cmp	w0, #0x0
 8e0:	b.le	988 <dirname_builtin+0xf0>
 8e4:	sxtw	x1, w0
 8e8:	sub	x4, x20, #0x1
 8ec:	b	8fc <dirname_builtin+0x64>
 8f0:	sub	x1, x1, #0x1
 8f4:	cmp	w1, #0x0
 8f8:	b.le	988 <dirname_builtin+0xf0>
 8fc:	ldrb	w3, [x4, x1]
 900:	mov	w2, w1
 904:	sub	w0, w1, #0x1
 908:	cmp	w3, #0x2f
 90c:	b.eq	8f0 <dirname_builtin+0x58>  // b.none
 910:	sub	w2, w2, #0x1
 914:	add	x0, x20, #0x1
 918:	strb	wzr, [x20, x1]
 91c:	sxtw	x1, w2
 920:	b	934 <dirname_builtin+0x9c>
 924:	ldrb	w4, [x0, x3]
 928:	cmp	w4, #0x2f
 92c:	b.eq	9c0 <dirname_builtin+0x128>  // b.none
 930:	mov	x1, x3
 934:	sub	x3, x1, #0x1
 938:	sxtw	x2, w1
 93c:	tbz	w1, #31, 924 <dirname_builtin+0x8c>
 940:	adrp	x3, 10000 <__FRAME_END__+0xf40c>
 944:	adrp	x0, 0 <_init-0x710>
 948:	mov	x2, #0x2                   	// #2
 94c:	add	x0, x0, #0xa30
 950:	ldr	x3, [x3, #4040]
 954:	mov	x1, #0x1                   	// #1
 958:	ldr	x3, [x3]
 95c:	bl	7b0 <fwrite@plt>
 960:	mov	w0, w19
 964:	ldp	x19, x20, [sp, #16]
 968:	ldp	x29, x30, [sp], #32
 96c:	ret
 970:	bl	770 <builtin_usage@plt>
 974:	mov	w19, #0x102                 	// #258
 978:	mov	w0, w19
 97c:	ldp	x19, x20, [sp, #16]
 980:	ldp	x29, x30, [sp], #32
 984:	ret
 988:	cbz	w0, 998 <dirname_builtin+0x100>
 98c:	sxtw	x1, w0
 990:	mov	w2, w0
 994:	b	910 <dirname_builtin+0x78>
 998:	adrp	x3, 10000 <__FRAME_END__+0xf40c>
 99c:	adrp	x0, 0 <_init-0x710>
 9a0:	mov	x2, #0x2                   	// #2
 9a4:	mov	x1, #0x1                   	// #1
 9a8:	ldr	x3, [x3, #4040]
 9ac:	mov	w19, #0x0                   	// #0
 9b0:	add	x0, x0, #0xa28
 9b4:	ldr	x3, [x3]
 9b8:	bl	7b0 <fwrite@plt>
 9bc:	b	960 <dirname_builtin+0xc8>
 9c0:	sub	x1, x2, w1, uxtw
 9c4:	b	9d4 <dirname_builtin+0x13c>
 9c8:	ldrb	w0, [x20, x2]
 9cc:	cmp	w0, #0x2f
 9d0:	b.ne	a08 <dirname_builtin+0x170>  // b.any
 9d4:	cmp	x2, x1
 9d8:	mov	w3, w2
 9dc:	sub	x2, x2, #0x1
 9e0:	b.ne	9c8 <dirname_builtin+0x130>  // b.any
 9e4:	adrp	x0, 0 <_init-0x710>
 9e8:	strb	wzr, [x20, w3, sxtw]
 9ec:	add	x20, x0, #0xa20
 9f0:	mov	x0, x20
 9f4:	bl	790 <puts@plt>
 9f8:	mov	w0, w19
 9fc:	ldp	x19, x20, [sp, #16]
 a00:	ldp	x29, x30, [sp], #32
 a04:	ret
 a08:	strb	wzr, [x20, w3, sxtw]
 a0c:	b	9f0 <dirname_builtin+0x158>

Disassembly of section .fini:

0000000000000a10 <_fini>:
 a10:	stp	x29, x30, [sp, #-16]!
 a14:	mov	x29, sp
 a18:	ldp	x29, x30, [sp], #16
 a1c:	ret
